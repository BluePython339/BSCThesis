sub_4010bc
add [ eax ] al
add [ eax ] al
add [ eax ] 0x30fb0008
inc esp
add [ eax ] al
sbb al 0x10
inc eax
add bh bh
and eax _adj_fptan@IAT
jmp [ _CIatan@IAT ]
adc al 0x9e
push edi
inc eax
add [ eax ] al
loopne r-xdata
add ebx [ ecx + 0x47 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov cl ch
mov [ ebx + 0x47ae4202 ] esp
loope r-xdata
sti
xor [ eax + eax ] al
aaa
mov eax [ 0x74202 ]
or [ eax ] al
test eax 0xcd004434
xor al 0x44
add [ ecx + 0x4434 ] dh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add bh bh
and eax __vbaChkstk@IAT
jmp [ __vbaExceptHandler@IAT ]
_start
push r-xdata
call Ordinal_MSVBVM60_100
add [ eax ] al
add [ eax ] al
add [ eax ] al
xor [ eax ] al
add [ eax ] al
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x1f ] ch
in al dx
jne r-xdata
add [ eax ] al
add [ eax - 0x40 ] ch
adc eax [ eax ]
salc
xor eax [ ebx + edx * 4 - 0x7e ]
sub cl [ ecx + 0x55 ]
sti
push cs
mov ah 0x0
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ ebx ] ch
add eax 0x1
popad
outsb
outsb
popad
jae r-xdata
jae r-xdata
push 0x65
je r-xdata
add al 0xf0
add [ eax ] cl
pop es
pop es
or [ edi ] ah
jae r-xdata
inc ecx
add [ eax ] al
add [ eax ] al
add bh bh
int3
and [ eax ] al
sbb al 0x40
inc esp
add [ eax ] al
add [ eax ] al
add [ eax + 0x28fd9 ] ah
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al al
adc eax [ eax ]
push esi
inc edx
outsd
jne r-xdata
or eax 0x68000d01
popad
jbe r-xdata
add [ eax ] al
add [ eax ] al
add [ esi ] bh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
xor al [ gs : eax ]
add al 0x1
or al [ eax ]
inc esp
jo r-xdata
push es
adc [ eax ] eax
add bh bh
add esi [ ebx ]
add [ eax ] al
add [ edx ] 0x5
add [ edx ] cl
add [ ebp + 0x65 ] al
jo r-xdata
daa
imul ebp [ edi + 0x6c ] 0x7265676f
outsb
add [ gs : ecx ] bl
add [ eax ] eax
inc edx
add [ edx ] ah
add [ ecx + 0x76616800 ] ah
bound ebp [ ecx + 0x6f ]
insb
outsd
jb r-xdata
xor eax 0x2a263621
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
rcl [ ebx ] 0x40
add [ esi + 0x42 ] dl
outsd
jne r-xdata
add [ eax + ebx * 8 ] al
or [ eax ] edi
add [ gs : 0x0 ] dh
add [ eax ] al
add [ eax ] al
hlt
add [ eax ] al
add [ eax ] al
or al [ eax ]
or [ eax + eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al bl
sbb al [ eax ]
adc al dh
xor [ eax ] al
add bh bh
xor al [ gs : eax ]
add al [ 0x9d80400 ]
js r-xdata
pop es
or [ edi ] ah
push es
adc [ ecx ] eax
add bh bh
add al [ esi + eax ]
add [ eax ] al
add [ eax + 0x23 ] al
inc eax
add [ ecx ] al
add [ 0x401f7c00 ] al
add [ eax ] al
add [ eax ] al
add bh bh
sub_4018b3
inc [ eax ]
add [ eax ] al
add [ eax + ebx + 0x180c0040 ] cl
inc eax
add [ edx ] al
adc al [ eax ]
or [ edx ] dl
inc eax
add [ esi ] cl
adc al [ eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
push eax
add [ eax ] al
add [ esi - 0x80 ] ah
sub esi edi
clc
sub [ esp + ebp * 4 + 0x4b ] eax
sub ah ch
sub ebx ecx
mov esi 0xa4
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] dl
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx + eax ] dl
add [ eax ] al
add [ eax ] al
add [ eax ] al
insb
adc al [ eax ]
dec esp
add [ eax ] al
add [ eax ] dl
add [ eax ] al
sub edi [ eax + 0x7ef66680 ]
scasd [ edi ]
dec ecx
lahf
jns r-xdata
0xf296b30b 0x0
sub_4019ae
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
daa
or [ eax + eax ] al
add [ eax ] al
add [ eax ] al
int3
sub_43e669
mov [ ebp + 0xc ] 0x18
cmp [ ebp + 0xc ] 0x18
je r-xdata
mov ecx 0x77
inc ebx
dec esp
push 0x0
loop r-xdata
push 0xa7378a2f
push 0x0
push 0x1e8
mov [ ebp + 0x52 ] esp
add esp 0x1e8
jmp r-xdata
call sub_43e695
push ebx
dec eax
inc ebp
dec esp
dec esp
xor esi [ edx ]
inc esp
dec esp
dec esp
and [ eax ] al
call sub_43e698
inc ecx
push ebx
push 0x5f6c6c65
dec esi
outsd
je r-xdata
add dh al
inc ebp
or al 0x18
cmp [ ebp + 0xc ] 0x18
je r-xdata
jns r-xdata
mov eax [ eax + 0xc ]
push di
pop di
mov eax [ eax + 0x14 ]
mov [ ebp + 0xc ] 0x18
cmp [ ebp + 0xc ] 0x18
je r-xdata
inc ebx
dec esp
add al [ ebx + 0x4c ]
arpl [ edi + 0x6e ] bp
push edi
add [ eax ] al
add [ eax ] al
add [ eax - 0x1 ] bl
jne r-xdata
mov eax [ eax ]
mov [ ebp + 0x10 ] cl
mov ebx [ eax + 0x28 ]
push si
pop si
mov edi 0x53004d
jmp r-xdata
inc ebx
dec esp
push di
pop di
cmp edi [ ebp + 0x3c ]
jne r-xdata
inc ebp
adc [ ecx + 0x30 ] ah
add [ eax ] al
push 0x2
call eax
mov ecx 0xaa0000
cmp [ ebx ] edi
jne r-xdata
push [ ebp + 0x10 ]
pop [ ebp + 0x10 ]
push eax
push di
pop di
pop edx
jmp r-xdata
jmp r-xdata
rdtsc
loop r-xdata
jmp r-xdata
push si
pop si
cmp [ ebx + 0x4 ] r-xdata
jne r-xdata
add edx edi
mov [ ebp + 0xc ] 0x18
cmp [ ebp + 0xc ] 0x18
je r-xdata
add esp 0xc
add esp 0xc
mov [ ebp + 0x10 ] cl
call eax
mov [ ebp + 0xc ] 0x18
cmp [ ebp + 0xc ] 0x18
je r-xdata
push di
pop di
push 0x0
mov [ ebp + 0xc ] 0x18
cmp [ ebp + 0xc ] 0x18
je r-xdata
push si
pop si
mov esi [ eax + 0x10 ]
push si
pop si
push esi
jmp r-xdata
mov esi [ edx ]
push [ ebp + 0x10 ]
pop [ ebp + 0x10 ]
jmp r-xdata
inc ebx
dec esp
push [ ebp + 0x10 ]
pop [ ebp + 0x10 ]
inc ebx
dec esp
push 0x0
mov [ ebp + 0x10 ] cl
push 0x0
push si
pop si
mov [ esp + 0x7 ] 0x32
mov [ esp ] 0x4b
jmp r-xdata
inc ebx
dec esp
mov ebx [ esi + 0x3c ]
push [ ebp + 0x10 ]
pop [ ebp + 0x10 ]
mov esi [ esp ]
mov [ ebp + 0xc ] 0x18
cmp [ ebp + 0xc ] 0x18
je r-xdata
xor esi ebx
mov [ ebp + 0xc ] 0x18
cmp [ ebp + 0xc ] 0x18
je r-xdata
add al 0x2a
add [ eax ] al
in eax dx
adc al 0x4c
sbb dl [ ecx ]
daa
dec esi
adc eax 0x71dd8695
xor al 0x26
dec ebp
adc eax 0x9fdd8695
aad 0x7e
fld [ ebp - 0x7a22994f ]
test eax 0x83914266
adc eax 0x172d154d
dec ebp
adc eax 0x9cef1995
inc ebp
xlat
movsd [ edi ] [ esi ]
add dl [ esi ]
test [ esi + edx * 4 + 0x6d ] 0x17
inc edx
nop
imul edx [ ecx * 2 + 0x5a387c15 ] 0x15
xchg ebp eax
dec edi
les ebx [ eax - 0x6f ]
jmp [ eax ]
mov [ esp + 0x1 ] 0x65
push si
pop si
mov [ esp + 0x6 ] 0x33
push si
pop si
mov [ esp + 0x3 ] 0x6e
push si
pop si
jmp r-xdata
add esi ebx
push di
pop di
mov ebx [ esi + 0x78 ]
mov [ ebp + 0xc ] 0x18
cmp [ ebp + 0xc ] 0x18
je r-xdata
inc ebx
dec esp
mov [ edx ] 0x0
jmp r-xdata
inc ebx
dec esp
mov [ esp + 0x5 ] 0x6c
push [ ebp + 0x10 ]
pop [ ebp + 0x10 ]
mov [ ebp + 0xc ] 0x18
cmp [ ebp + 0xc ] 0x18
je r-xdata
mov eax [ esp ]
mov [ ebp + 0x10 ] cl
add eax ebx
push si
pop si
mov esi eax
jmp r-xdata
inc ebx
dec esp
xor [ edx ] esi
mov [ ebp + 0x10 ] cl
mov [ ebp + 0xc ] 0x18
cmp [ ebp + 0xc ] 0x18
je r-xdata
mov [ esp + 0x2 ] 0x72
push di
pop di
mov [ esp + 0x4 ] 0x65
mov eax ecx
mov ecx esp
add ecx eax
mov [ ebp + 0xc ] 0x18
cmp [ ebp + 0xc ] 0x18
je r-xdata
inc ebx
dec esp
add esi 0x28
push si
pop si
push [ ebp + 0x10 ]
pop [ ebp + 0x10 ]
add di 0x4
jmp r-xdata
inc ebx
dec esp
push 0x0
push [ ebp + 0x10 ]
pop [ ebp + 0x10 ]
push 0x0
jmp r-xdata
inc ebx
dec esp
lodsd [ esi ]
push si
pop si
test eax eax
je r-xdata
add eax [ esp ]
push si
pop si
mov ebx 0x548bec83
bswap ebx
inc ebx
cmp [ eax ] ebx
jne r-xdata
push 0x0
mov [ ebp + 0xc ] 0x18
cmp [ ebp + 0xc ] 0x18
je r-xdata
jmp r-xdata
xor [ esp ] 0x48
push di
pop di
mov dl 0x65
or [ esp + 0x1 ] dl
push si
pop si
mov [ esp + 0x2 ] 0x61
jmp r-xdata
inc ebx
dec esp
cmp [ eax + 0x4 ] 0x8d560cec
jne r-xdata
mov [ esp + 0x3 ] 0x70
mov [ ebp + 0xc ] 0x18
cmp [ ebp + 0xc ] 0x18
je r-xdata
pop ebx
push [ ebp + 0x10 ]
pop [ ebp + 0x10 ]
xor ebx ebx
mov [ ebp + 0xc ] 0x18
cmp [ ebp + 0xc ] 0x18
je r-xdata
mov [ esp + 0x4 ] 0x43
push si
pop si
mov [ esp + 0x5 ] 0x72
jmp r-xdata
inc ebx
dec esp
push ebx
push di
pop di
push ebx
mov [ ebp + 0xc ] 0x18
cmp [ ebp + 0xc ] 0x18
je r-xdata
inc ebx
dec esp
mov [ esp + 0x6 ] 0x65
push [ ebp + 0x10 ]
pop [ ebp + 0x10 ]
mov [ esp + 0x7 ] 0x61
mov [ ebp + 0xc ] 0x18
cmp [ ebp + 0xc ] 0x18
je r-xdata
push ebx
mov [ ebp + 0x10 ] cl
push esp
push si
pop si
push 0x42000
jmp r-xdata
inc ebx
dec esp
mov [ esp + 0x8 ] 0x74
jmp r-xdata
inc ebx
dec esp
push edx
push si
pop si
push ecx
push si
pop si
push esp
push si
pop si
call eax
jmp r-xdata
mov [ esp + 0x9 ] 0x65
mov edx esp
mov [ ebp + 0xc ] 0x18
cmp [ ebp + 0xc ] 0x18
je r-xdata
add esp 0x1c
push [ ebp + 0x10 ]
pop [ ebp + 0x10 ]
retn
call sub_43e732
push di
pop di
push 0x0
push si
pop si
push 0x0
jmp r-xdata
inc ebx
dec esp
push 0x0
mov [ ebp + 0xc ] 0x18
cmp [ ebp + 0xc ] 0x18
je r-xdata
add [ esp ] 0x40000
push si
pop si
call eax
jmp r-xdata
inc ebx
dec esp
mov [ ebp + 0x8 ] eax
pop eax
pop eax
pop eax
push [ ebp + 0x10 ]
pop [ ebp + 0x10 ]
mov ecx esp
mov [ ebp + 0xc ] 0x18
cmp [ ebp + 0xc ] 0x18
je r-xdata
push 0x0
push 0x0
push 0x0
xor [ esp ] 0x48
jmp r-xdata
inc ebx
dec esp
xor [ esp + 0x1 ] 0x64
mov [ ebp + 0xc ] 0x18
cmp [ ebp + 0xc ] 0x18
je r-xdata
inc [ esp + 0x1 ]
push di
pop di
mov [ esp + 0x2 ] 0x61
push si
pop si
mov [ esp + 0x3 ] 0x70
jmp r-xdata
inc ebx
dec esp
mov [ esp + 0x4 ] 0x41
mov [ ebp + 0xc ] 0x18
cmp [ ebp + 0xc ] 0x18
je r-xdata
mov [ esp + 0x5 ] 0x6c
push si
pop si
mov [ esp + 0x6 ] 0x6c
jmp r-xdata
inc ebx
dec esp
mov [ esp + 0x7 ] 0x6f
push [ ebp + 0x10 ]
pop [ ebp + 0x10 ]
mov [ esp + 0x8 ] 0x63
mov [ ebp + 0xc ] 0x18
cmp [ ebp + 0xc ] 0x18
je r-xdata
mov edx esp
call sub_43e732
jmp r-xdata
inc ebx
dec esp
push 0x0
mov [ ebp + 0xc ] 0x18
cmp [ ebp + 0xc ] 0x18
je r-xdata
add [ esp ] 0x2a04
push di
pop di
push 0x8
push si
pop si
push [ ebp + 0x8 ]
jmp r-xdata
inc ebx
dec esp
call eax
mov [ ebp + 0xc ] 0x18
cmp [ ebp + 0xc ] 0x18
je r-xdata
jmp r-xdata
inc ebx
dec esp
call sub_43ea7f
inc eax
sbb al 0xf3
sub [ ebp + ecx * 4 + 0x1e154d16 ] esi
push esi
jge r-xdata
sub_43e695
pop ecx
jmp r-xdata
call sub_43e698
inc ecx
push ebx
push 0x5f6c6c65
dec esi
outsd
je r-xdata
add dh al
inc ebp
or al 0x18
cmp [ ebp + 0xc ] 0x18
je r-xdata
jns r-xdata
mov eax [ eax + 0xc ]
push di
pop di
mov eax [ eax + 0x14 ]
mov [ ebp + 0xc ] 0x18
cmp [ ebp + 0xc ] 0x18
je r-xdata
inc ebx
dec esp
add al [ ebx + 0x4c ]
arpl [ edi + 0x6e ] bp
push edi
add [ eax ] al
add [ eax ] al
add [ eax - 0x1 ] bl
jne r-xdata
mov eax [ eax ]
mov [ ebp + 0x10 ] cl
mov ebx [ eax + 0x28 ]
push si
pop si
mov edi 0x53004d
jmp r-xdata
inc ebx
dec esp
push di
pop di
cmp edi [ ebp + 0x3c ]
jne r-xdata
inc ebp
adc [ ecx + 0x30 ] ah
add [ eax ] al
push 0x2
call eax
mov ecx 0xaa0000
cmp [ ebx ] edi
jne r-xdata
push [ ebp + 0x10 ]
pop [ ebp + 0x10 ]
push eax
push di
pop di
pop edx
jmp r-xdata
jmp r-xdata
rdtsc
loop r-xdata
jmp r-xdata
push si
pop si
cmp [ ebx + 0x4 ] r-xdata
jne r-xdata
add edx edi
mov [ ebp + 0xc ] 0x18
cmp [ ebp + 0xc ] 0x18
je r-xdata
add esp 0xc
add esp 0xc
mov [ ebp + 0x10 ] cl
call eax
mov [ ebp + 0xc ] 0x18
cmp [ ebp + 0xc ] 0x18
je r-xdata
push di
pop di
push 0x0
mov [ ebp + 0xc ] 0x18
cmp [ ebp + 0xc ] 0x18
je r-xdata
push si
pop si
mov esi [ eax + 0x10 ]
push si
pop si
push esi
jmp r-xdata
mov esi [ edx ]
push [ ebp + 0x10 ]
pop [ ebp + 0x10 ]
jmp r-xdata
inc ebx
dec esp
push [ ebp + 0x10 ]
pop [ ebp + 0x10 ]
inc ebx
dec esp
push 0x0
mov [ ebp + 0x10 ] cl
push 0x0
push si
pop si
mov [ esp + 0x7 ] 0x32
mov [ esp ] 0x4b
jmp r-xdata
inc ebx
dec esp
mov ebx [ esi + 0x3c ]
push [ ebp + 0x10 ]
pop [ ebp + 0x10 ]
mov esi [ esp ]
mov [ ebp + 0xc ] 0x18
cmp [ ebp + 0xc ] 0x18
je r-xdata
xor esi ebx
mov [ ebp + 0xc ] 0x18
cmp [ ebp + 0xc ] 0x18
je r-xdata
add al 0x2a
add [ eax ] al
in eax dx
adc al 0x4c
sbb dl [ ecx ]
daa
dec esi
adc eax 0x71dd8695
xor al 0x26
dec ebp
adc eax 0x9fdd8695
aad 0x7e
fld [ ebp - 0x7a22994f ]
test eax 0x83914266
adc eax 0x172d154d
dec ebp
adc eax 0x9cef1995
inc ebp
xlat
movsd [ edi ] [ esi ]
add dl [ esi ]
test [ esi + edx * 4 + 0x6d ] 0x17
inc edx
nop
imul edx [ ecx * 2 + 0x5a387c15 ] 0x15
xchg ebp eax
dec edi
les ebx [ eax - 0x6f ]
jmp [ eax ]
mov [ esp + 0x1 ] 0x65
push si
pop si
mov [ esp + 0x6 ] 0x33
push si
pop si
mov [ esp + 0x3 ] 0x6e
push si
pop si
jmp r-xdata
add esi ebx
push di
pop di
mov ebx [ esi + 0x78 ]
mov [ ebp + 0xc ] 0x18
cmp [ ebp + 0xc ] 0x18
je r-xdata
inc ebx
dec esp
mov [ edx ] 0x0
jmp r-xdata
inc ebx
dec esp
mov [ esp + 0x5 ] 0x6c
push [ ebp + 0x10 ]
pop [ ebp + 0x10 ]
mov [ ebp + 0xc ] 0x18
cmp [ ebp + 0xc ] 0x18
je r-xdata
mov eax [ esp ]
mov [ ebp + 0x10 ] cl
add eax ebx
push si
pop si
mov esi eax
jmp r-xdata
inc ebx
dec esp
xor [ edx ] esi
mov [ ebp + 0x10 ] cl
mov [ ebp + 0xc ] 0x18
cmp [ ebp + 0xc ] 0x18
je r-xdata
mov [ esp + 0x2 ] 0x72
push di
pop di
mov [ esp + 0x4 ] 0x65
mov eax ecx
mov ecx esp
add ecx eax
mov [ ebp + 0xc ] 0x18
cmp [ ebp + 0xc ] 0x18
je r-xdata
inc ebx
dec esp
add esi 0x28
push si
pop si
push [ ebp + 0x10 ]
pop [ ebp + 0x10 ]
add di 0x4
jmp r-xdata
inc ebx
dec esp
push 0x0
push [ ebp + 0x10 ]
pop [ ebp + 0x10 ]
push 0x0
jmp r-xdata
inc ebx
dec esp
lodsd [ esi ]
push si
pop si
test eax eax
je r-xdata
add eax [ esp ]
push si
pop si
mov ebx 0x548bec83
bswap ebx
inc ebx
cmp [ eax ] ebx
jne r-xdata
push 0x0
mov [ ebp + 0xc ] 0x18
cmp [ ebp + 0xc ] 0x18
je r-xdata
jmp r-xdata
xor [ esp ] 0x48
push di
pop di
mov dl 0x65
or [ esp + 0x1 ] dl
push si
pop si
mov [ esp + 0x2 ] 0x61
jmp r-xdata
inc ebx
dec esp
cmp [ eax + 0x4 ] 0x8d560cec
jne r-xdata
mov [ esp + 0x3 ] 0x70
mov [ ebp + 0xc ] 0x18
cmp [ ebp + 0xc ] 0x18
je r-xdata
pop ebx
push [ ebp + 0x10 ]
pop [ ebp + 0x10 ]
xor ebx ebx
mov [ ebp + 0xc ] 0x18
cmp [ ebp + 0xc ] 0x18
je r-xdata
mov [ esp + 0x4 ] 0x43
push si
pop si
mov [ esp + 0x5 ] 0x72
jmp r-xdata
inc ebx
dec esp
push ebx
push di
pop di
push ebx
mov [ ebp + 0xc ] 0x18
cmp [ ebp + 0xc ] 0x18
je r-xdata
inc ebx
dec esp
mov [ esp + 0x6 ] 0x65
push [ ebp + 0x10 ]
pop [ ebp + 0x10 ]
mov [ esp + 0x7 ] 0x61
mov [ ebp + 0xc ] 0x18
cmp [ ebp + 0xc ] 0x18
je r-xdata
push ebx
mov [ ebp + 0x10 ] cl
push esp
push si
pop si
push 0x42000
jmp r-xdata
inc ebx
dec esp
mov [ esp + 0x8 ] 0x74
jmp r-xdata
inc ebx
dec esp
push edx
push si
pop si
push ecx
push si
pop si
push esp
push si
pop si
call eax
jmp r-xdata
mov [ esp + 0x9 ] 0x65
mov edx esp
mov [ ebp + 0xc ] 0x18
cmp [ ebp + 0xc ] 0x18
je r-xdata
add esp 0x1c
push [ ebp + 0x10 ]
pop [ ebp + 0x10 ]
retn
call sub_43e732
push di
pop di
push 0x0
push si
pop si
push 0x0
jmp r-xdata
inc ebx
dec esp
push 0x0
mov [ ebp + 0xc ] 0x18
cmp [ ebp + 0xc ] 0x18
je r-xdata
add [ esp ] 0x40000
push si
pop si
call eax
jmp r-xdata
inc ebx
dec esp
mov [ ebp + 0x8 ] eax
pop eax
pop eax
pop eax
push [ ebp + 0x10 ]
pop [ ebp + 0x10 ]
mov ecx esp
mov [ ebp + 0xc ] 0x18
cmp [ ebp + 0xc ] 0x18
je r-xdata
push 0x0
push 0x0
push 0x0
xor [ esp ] 0x48
jmp r-xdata
inc ebx
dec esp
xor [ esp + 0x1 ] 0x64
mov [ ebp + 0xc ] 0x18
cmp [ ebp + 0xc ] 0x18
je r-xdata
inc [ esp + 0x1 ]
push di
pop di
mov [ esp + 0x2 ] 0x61
push si
pop si
mov [ esp + 0x3 ] 0x70
jmp r-xdata
inc ebx
dec esp
mov [ esp + 0x4 ] 0x41
mov [ ebp + 0xc ] 0x18
cmp [ ebp + 0xc ] 0x18
je r-xdata
mov [ esp + 0x5 ] 0x6c
push si
pop si
mov [ esp + 0x6 ] 0x6c
jmp r-xdata
inc ebx
dec esp
mov [ esp + 0x7 ] 0x6f
push [ ebp + 0x10 ]
pop [ ebp + 0x10 ]
mov [ esp + 0x8 ] 0x63
mov [ ebp + 0xc ] 0x18
cmp [ ebp + 0xc ] 0x18
je r-xdata
mov edx esp
call sub_43e732
jmp r-xdata
inc ebx
dec esp
push 0x0
mov [ ebp + 0xc ] 0x18
cmp [ ebp + 0xc ] 0x18
je r-xdata
add [ esp ] 0x2a04
push di
pop di
push 0x8
push si
pop si
push [ ebp + 0x8 ]
jmp r-xdata
inc ebx
dec esp
call eax
mov [ ebp + 0xc ] 0x18
cmp [ ebp + 0xc ] 0x18
je r-xdata
jmp r-xdata
inc ebx
dec esp
call sub_43ea7f
inc eax
sbb al 0xf3
sub [ ebp + ecx * 4 + 0x1e154d16 ] esi
push esi
jge r-xdata
sub_43e698
pop edx
inc edx
call sub_43e732
push eax
push [ ebp + 0x52 ]
push 0x0
call eax
cmp eax 0x1
je r-xdata
pop eax
push [ ebp + 0x52 ]
call sub_43e695
push ebx
dec eax
inc ebp
dec esp
dec esp
xor esi [ edx ]
inc esp
dec esp
dec esp
and [ eax ] al
call sub_43e698
inc ecx
push ebx
push 0x5f6c6c65
dec esi
outsd
je r-xdata
rdtsc
loop r-xdata
jmp r-xdata
add dh al
inc ebp
or al 0x18
cmp [ ebp + 0xc ] 0x18
je r-xdata
jns r-xdata
push di
pop di
push 0x0
mov [ ebp + 0xc ] 0x18
cmp [ ebp + 0xc ] 0x18
je r-xdata
mov eax [ eax + 0xc ]
push di
pop di
mov eax [ eax + 0x14 ]
mov [ ebp + 0xc ] 0x18
cmp [ ebp + 0xc ] 0x18
je r-xdata
inc ebx
dec esp
add al [ ebx + 0x4c ]
arpl [ edi + 0x6e ] bp
push edi
add [ eax ] al
add [ eax ] al
add [ eax - 0x1 ] bl
jne r-xdata
push 0x0
mov [ ebp + 0x10 ] cl
push 0x0
push si
pop si
mov [ esp + 0x7 ] 0x32
mov [ esp ] 0x4b
jmp r-xdata
inc ebx
dec esp
mov eax [ eax ]
mov [ ebp + 0x10 ] cl
mov ebx [ eax + 0x28 ]
push si
pop si
mov edi 0x53004d
jmp r-xdata
inc ebx
dec esp
push di
pop di
cmp edi [ ebp + 0x3c ]
jne r-xdata
inc ebp
adc [ ecx + 0x30 ] ah
add [ eax ] al
push 0x2
call eax
mov ecx 0xaa0000
mov [ esp + 0x1 ] 0x65
push si
pop si
mov [ esp + 0x6 ] 0x33
push si
pop si
mov [ esp + 0x3 ] 0x6e
push si
pop si
jmp r-xdata
cmp [ ebx ] edi
jne r-xdata
push [ ebp + 0x10 ]
pop [ ebp + 0x10 ]
push eax
push di
pop di
pop edx
jmp r-xdata
jmp r-xdata
mov [ esp + 0x5 ] 0x6c
push [ ebp + 0x10 ]
pop [ ebp + 0x10 ]
mov [ ebp + 0xc ] 0x18
cmp [ ebp + 0xc ] 0x18
je r-xdata
push si
pop si
cmp [ ebx + 0x4 ] r-xdata
jne r-xdata
add edx edi
mov [ ebp + 0xc ] 0x18
cmp [ ebp + 0xc ] 0x18
je r-xdata
add esp 0xc
add esp 0xc
mov [ ebp + 0x10 ] cl
call eax
mov [ ebp + 0xc ] 0x18
cmp [ ebp + 0xc ] 0x18
je r-xdata
mov [ esp + 0x2 ] 0x72
push di
pop di
mov [ esp + 0x4 ] 0x65
mov eax ecx
mov ecx esp
add ecx eax
mov [ ebp + 0xc ] 0x18
cmp [ ebp + 0xc ] 0x18
je r-xdata
inc ebx
dec esp
push si
pop si
mov esi [ eax + 0x10 ]
push si
pop si
push esi
jmp r-xdata
mov esi [ edx ]
push [ ebp + 0x10 ]
pop [ ebp + 0x10 ]
jmp r-xdata
inc ebx
dec esp
push [ ebp + 0x10 ]
pop [ ebp + 0x10 ]
inc ebx
dec esp
push 0x0
push [ ebp + 0x10 ]
pop [ ebp + 0x10 ]
push 0x0
jmp r-xdata
inc ebx
dec esp
mov ebx [ esi + 0x3c ]
push [ ebp + 0x10 ]
pop [ ebp + 0x10 ]
mov esi [ esp ]
mov [ ebp + 0xc ] 0x18
cmp [ ebp + 0xc ] 0x18
je r-xdata
xor esi ebx
mov [ ebp + 0xc ] 0x18
cmp [ ebp + 0xc ] 0x18
je r-xdata
add al 0x2a
add [ eax ] al
in eax dx
adc al 0x4c
sbb dl [ ecx ]
daa
dec esi
adc eax 0x71dd8695
xor al 0x26
dec ebp
adc eax 0x9fdd8695
aad 0x7e
fld [ ebp - 0x7a22994f ]
test eax 0x83914266
adc eax 0x172d154d
dec ebp
adc eax 0x9cef1995
inc ebp
xlat
movsd [ edi ] [ esi ]
add dl [ esi ]
test [ esi + edx * 4 + 0x6d ] 0x17
inc edx
nop
imul edx [ ecx * 2 + 0x5a387c15 ] 0x15
xchg ebp eax
dec edi
les ebx [ eax - 0x6f ]
jmp [ eax ]
push 0x0
mov [ ebp + 0xc ] 0x18
cmp [ ebp + 0xc ] 0x18
je r-xdata
add esi ebx
push di
pop di
mov ebx [ esi + 0x78 ]
mov [ ebp + 0xc ] 0x18
cmp [ ebp + 0xc ] 0x18
je r-xdata
inc ebx
dec esp
mov [ edx ] 0x0
jmp r-xdata
inc ebx
dec esp
xor [ esp ] 0x48
push di
pop di
mov dl 0x65
or [ esp + 0x1 ] dl
push si
pop si
mov [ esp + 0x2 ] 0x61
jmp r-xdata
inc ebx
dec esp
mov eax [ esp ]
mov [ ebp + 0x10 ] cl
add eax ebx
push si
pop si
mov esi eax
jmp r-xdata
inc ebx
dec esp
xor [ edx ] esi
mov [ ebp + 0x10 ] cl
mov [ ebp + 0xc ] 0x18
cmp [ ebp + 0xc ] 0x18
je r-xdata
mov [ esp + 0x3 ] 0x70
mov [ ebp + 0xc ] 0x18
cmp [ ebp + 0xc ] 0x18
je r-xdata
add esi 0x28
push si
pop si
push [ ebp + 0x10 ]
pop [ ebp + 0x10 ]
add di 0x4
jmp r-xdata
inc ebx
dec esp
mov [ esp + 0x4 ] 0x43
push si
pop si
mov [ esp + 0x5 ] 0x72
jmp r-xdata
inc ebx
dec esp
lodsd [ esi ]
push si
pop si
test eax eax
je r-xdata
add eax [ esp ]
push si
pop si
mov ebx 0x548bec83
bswap ebx
inc ebx
cmp [ eax ] ebx
jne r-xdata
mov [ esp + 0x6 ] 0x65
push [ ebp + 0x10 ]
pop [ ebp + 0x10 ]
mov [ esp + 0x7 ] 0x61
mov [ ebp + 0xc ] 0x18
cmp [ ebp + 0xc ] 0x18
je r-xdata
jmp r-xdata
mov [ esp + 0x8 ] 0x74
jmp r-xdata
inc ebx
dec esp
cmp [ eax + 0x4 ] 0x8d560cec
jne r-xdata
mov [ esp + 0x9 ] 0x65
mov edx esp
mov [ ebp + 0xc ] 0x18
cmp [ ebp + 0xc ] 0x18
je r-xdata
pop ebx
push [ ebp + 0x10 ]
pop [ ebp + 0x10 ]
xor ebx ebx
mov [ ebp + 0xc ] 0x18
cmp [ ebp + 0xc ] 0x18
je r-xdata
call sub_43e732
push di
pop di
push 0x0
push si
pop si
push 0x0
jmp r-xdata
inc ebx
dec esp
push ebx
push di
pop di
push ebx
mov [ ebp + 0xc ] 0x18
cmp [ ebp + 0xc ] 0x18
je r-xdata
inc ebx
dec esp
push 0x0
mov [ ebp + 0xc ] 0x18
cmp [ ebp + 0xc ] 0x18
je r-xdata
push ebx
mov [ ebp + 0x10 ] cl
push esp
push si
pop si
push 0x42000
jmp r-xdata
inc ebx
dec esp
add [ esp ] 0x40000
push si
pop si
call eax
jmp r-xdata
inc ebx
dec esp
push edx
push si
pop si
push ecx
push si
pop si
push esp
push si
pop si
call eax
jmp r-xdata
mov [ ebp + 0x8 ] eax
pop eax
pop eax
pop eax
push [ ebp + 0x10 ]
pop [ ebp + 0x10 ]
mov ecx esp
mov [ ebp + 0xc ] 0x18
cmp [ ebp + 0xc ] 0x18
je r-xdata
add esp 0x1c
push [ ebp + 0x10 ]
pop [ ebp + 0x10 ]
retn
push 0x0
push 0x0
push 0x0
xor [ esp ] 0x48
jmp r-xdata
inc ebx
dec esp
xor [ esp + 0x1 ] 0x64
mov [ ebp + 0xc ] 0x18
cmp [ ebp + 0xc ] 0x18
je r-xdata
inc [ esp + 0x1 ]
push di
pop di
mov [ esp + 0x2 ] 0x61
push si
pop si
mov [ esp + 0x3 ] 0x70
jmp r-xdata
inc ebx
dec esp
mov [ esp + 0x4 ] 0x41
mov [ ebp + 0xc ] 0x18
cmp [ ebp + 0xc ] 0x18
je r-xdata
mov [ esp + 0x5 ] 0x6c
push si
pop si
mov [ esp + 0x6 ] 0x6c
jmp r-xdata
inc ebx
dec esp
mov [ esp + 0x7 ] 0x6f
push [ ebp + 0x10 ]
pop [ ebp + 0x10 ]
mov [ esp + 0x8 ] 0x63
mov [ ebp + 0xc ] 0x18
cmp [ ebp + 0xc ] 0x18
je r-xdata
mov edx esp
call sub_43e732
jmp r-xdata
inc ebx
dec esp
push 0x0
mov [ ebp + 0xc ] 0x18
cmp [ ebp + 0xc ] 0x18
je r-xdata
add [ esp ] 0x2a04
push di
pop di
push 0x8
push si
pop si
push [ ebp + 0x8 ]
jmp r-xdata
inc ebx
dec esp
call eax
mov [ ebp + 0xc ] 0x18
cmp [ ebp + 0xc ] 0x18
je r-xdata
jmp r-xdata
inc ebx
dec esp
call sub_43ea7f
inc eax
sbb al 0xf3
sub [ ebp + ecx * 4 + 0x1e154d16 ] esi
push esi
jge r-xdata
sub_43e732
mov eax [ fs : 0x30 ]
mov [ ebp + 0xc ] 0x18
cmp [ ebp + 0xc ] 0x18
je r-xdata
mov eax [ eax + 0xc ]
push di
pop di
mov eax [ eax + 0x14 ]
mov [ ebp + 0xc ] 0x18
cmp [ ebp + 0xc ] 0x18
je r-xdata
inc ebx
dec esp
mov eax [ eax ]
mov [ ebp + 0x10 ] cl
mov ebx [ eax + 0x28 ]
push si
pop si
mov edi 0x53004d
jmp r-xdata
inc ebx
dec esp
cmp [ ebx ] edi
jne r-xdata
push si
pop si
cmp [ ebx + 0x4 ] r-xdata
jne r-xdata
push si
pop si
mov esi [ eax + 0x10 ]
push si
pop si
push esi
jmp r-xdata
mov ebx [ esi + 0x3c ]
push [ ebp + 0x10 ]
pop [ ebp + 0x10 ]
mov esi [ esp ]
mov [ ebp + 0xc ] 0x18
cmp [ ebp + 0xc ] 0x18
je r-xdata
add esi ebx
push di
pop di
mov ebx [ esi + 0x78 ]
mov [ ebp + 0xc ] 0x18
cmp [ ebp + 0xc ] 0x18
je r-xdata
inc ebx
dec esp
mov eax [ esp ]
mov [ ebp + 0x10 ] cl
add eax ebx
push si
pop si
mov esi eax
jmp r-xdata
inc ebx
dec esp
add esi 0x28
push si
pop si
lodsd [ esi ]
push si
pop si
test eax eax
je r-xdata
add eax [ esp ]
push si
pop si
mov ebx 0x548bec83
bswap ebx
inc ebx
cmp [ eax ] ebx
jne r-xdata
jmp r-xdata
cmp [ eax + 0x4 ] 0x8d560cec
jne r-xdata
pop ebx
push [ ebp + 0x10 ]
pop [ ebp + 0x10 ]
xor ebx ebx
mov [ ebp + 0xc ] 0x18
cmp [ ebp + 0xc ] 0x18
je r-xdata
push ebx
push di
pop di
push ebx
mov [ ebp + 0xc ] 0x18
cmp [ ebp + 0xc ] 0x18
je r-xdata
inc ebx
dec esp
push ebx
mov [ ebp + 0x10 ] cl
push esp
push si
pop si
push 0x42000
jmp r-xdata
inc ebx
dec esp
push edx
push si
pop si
push ecx
push si
pop si
push esp
push si
pop si
call eax
jmp r-xdata
add esp 0x1c
push [ ebp + 0x10 ]
pop [ ebp + 0x10 ]
retn
sub_43ea7f
push si
pop si
pop esi
jmp r-xdata
push [ ebp + 0x10 ]
pop [ ebp + 0x10 ]
mov ecx 0x2a04
mov ebx [ esi + ecx ]
jmp r-xdata
inc ebx
dec esp
mov [ eax + ecx ] ebx
mov [ ebp + 0xc ] 0x18
cmp [ ebp + 0xc ] 0x18
je r-xdata
push di
pop di
push si
pop si
jmp r-xdata
inc ebx
dec esp
mov [ ebp + 0xc ] 0x18
cmp [ ebp + 0xc ] 0x18
je r-xdata
push si
pop si
jmp r-xdata
inc ebx
dec esp
push [ ebp + 0x10 ]
pop [ ebp + 0x10 ]
mov [ ebp + 0xc ] 0x18
cmp [ ebp + 0xc ] 0x18
je r-xdata
jmp r-xdata
inc ebx
dec esp
mov [ ebp + 0xc ] 0x18
cmp [ ebp + 0xc ] 0x18
je r-xdata
push di
pop di
push si
pop si
jmp r-xdata
inc ebx
dec esp
mov [ ebp + 0xc ] 0x18
cmp [ ebp + 0xc ] 0x18
je r-xdata
push si
pop si
jmp r-xdata
inc ebx
dec esp
push di
pop di
dec cx
jmp r-xdata
dec cx
mov [ ebp + 0x10 ] cl
sub ecx 0x2
test ecx ecx
jne r-xdata
mov [ ebp + 0xc ] 0x18
cmp [ ebp + 0xc ] 0x18
je r-xdata
mov [ ebp + 0xc ] 0x18
cmp [ ebp + 0xc ] 0x18
je r-xdata
mov ebx [ esi + ecx ]
mov [ eax + ecx ] ebx
mov ebx 0x4d169515
push [ ebp + 0x10 ]
pop [ ebp + 0x10 ]
xor edi edi
push [ ebp + 0x10 ]
pop [ ebp + 0x10 ]
mov [ ebp + 0x3c ] 0x2a04
inc ebx
dec esp
add edx edi
mov [ ebp + 0xc ] 0x18
cmp [ ebp + 0xc ] 0x18
je r-xdata
mov esi [ edx ]
push [ ebp + 0x10 ]
pop [ ebp + 0x10 ]
jmp r-xdata
inc ebx
dec esp
xor esi ebx
mov [ ebp + 0xc ] 0x18
cmp [ ebp + 0xc ] 0x18
je r-xdata
mov [ edx ] 0x0
jmp r-xdata
inc ebx
dec esp
xor [ edx ] esi
mov [ ebp + 0x10 ] cl
mov [ ebp + 0xc ] 0x18
cmp [ ebp + 0xc ] 0x18
je r-xdata
push [ ebp + 0x10 ]
pop [ ebp + 0x10 ]
add di 0x4
jmp r-xdata
inc ebx
dec esp
push di
pop di
cmp edi [ ebp + 0x3c ]
jne r-xdata
push [ ebp + 0x10 ]
pop [ ebp + 0x10 ]
push eax
push di
pop di
pop edx
jmp r-xdata
jmp r-xdata
add esp 0xc
add esp 0xc
mov [ ebp + 0x10 ] cl
call eax
mov [ ebp + 0xc ] 0x18
cmp [ ebp + 0xc ] 0x18
je r-xdata
push [ ebp + 0x10 ]
pop [ ebp + 0x10 ]
call sub_43ea7f
inc eax
sbb al 0xf3
sub [ ebp + ecx * 4 + 0x1e154d16 ] esi
push esi
jge r-xdata
inc ebx
dec esp
add al 0x2a
add [ eax ] al
in eax dx
adc al 0x4c
sbb dl [ ecx ]
daa
dec esi
adc eax 0x71dd8695
xor al 0x26
dec ebp
adc eax 0x9fdd8695
aad 0x7e
fld [ ebp - 0x7a22994f ]
test eax 0x83914266
adc eax 0x172d154d
dec ebp
adc eax 0x9cef1995
inc ebp
xlat
movsd [ edi ] [ esi ]
add dl [ esi ]
test [ esi + edx * 4 + 0x6d ] 0x17
inc edx
nop
imul edx [ ecx * 2 + 0x5a387c15 ] 0x15
xchg ebp eax
dec edi
les ebx [ eax - 0x6f ]
jmp [ eax ]
sub_43ef93
push eax
mov [ ebp + 0x18e01475 ] edx
movsd [ edi ] [ esi ]
inc esi
test [ esi ] dl
dec ebp
xchg esi eax
insd
pop ss
inc edx
nop
jmp r-xdata
cdq
adc ecx [ edi + 0x1d169554 ]
std
sti
push ds
dec ebp
adc eax 0x1041531e
push edi
push edi
dec ebp
adc eax 0xd3001653
aad 0x17
pop ss
cld
mov [ 0xffffffffcd154d01 ] eax
popfd
dec ebp
pushfd
ror [ esi - 0x5c ] 0x1
0x4d4d1683 0x2e16
sub_43efc3
push eax
cdq
adc ecx [ edi + 0x1d169554 ]
std
sti
push ds
dec ebp
adc eax 0x1041531e
push edi
push edi
dec ebp
adc eax 0xd3001653
aad 0x17
pop ss
cld
mov [ 0xffffffffcd154d01 ] eax
popfd
dec ebp
pushfd
ror [ esi - 0x5c ] 0x1
0x4d4d1683 0x2e16
sub_43f02b
pop esp
mov cl 0x47
mov dl 0xc5
jle r-xdata
jmp 0x3325daec
movsd [ edi ] [ esi ]
std
push 0xffffffe9
mov dl 0xea
loope r-xdata
xchg ebp eax
push ss
dec ecx
0xad4132c1 0x1695
sub_43f1e9
push ss
dec ebp
pushfd
adc dl [ esi ]
inc ecx
adc eax 0x43bb2795
push ds
xchg ecx eax
dec ebp
sbb [ ebp - 0x6a6db1ea ] edx
push ds
dec ebp
adc eax 0x2dcee694
xchg ebp eax
bound edx [ edx ]
xchg ebp eax
push ss
dec ebp
adc eax 0xfe4f6215
mov dl 0x9d
push ebp
push ss
or dl [ esi ]
inc ebp
adc eax 0x178e9595
sbb al 0x4b
pop ecx
std
ja r-xdata
dec ebp
adc eax 0xfd594b1c
sub ebx [ ecx * 2 + 0x5d891e15 ]
sbb [ ebp - 0x6a75b1ea ] edx
push ds
dec ebp
adc eax 0x43be17cb
sbb al 0x15
adc edx [ esi - 0x7959edad ]

dec ebp
adc eax 0x195d891e
xchg ebp eax
push ss
dec esi
mov dl [ ebp - 0x34eab2e2 ]
pop ss
mov esi 0xa6151c43
aaa
push ds
push cs
int3
sub_43f5a7
push 0x43
sub eax 0x451612d2
adc eax 0x154d1795
xchg ebp eax
popfd
add [ ebp + 0x7c ] ah
xchg esp eax
inc edx
adc eax 0xc1a54c95
xchg ebx eax
push ss
dec ebp
jg r-xdata
dec ebp
0x42c606e2 0xe99d
popfd
sbb bl [ 0xffffffffea49646a ]
inc ebp
xchg ebp eax
mov ch 0x15
0x95171493 0xc616
pop eax
xchg ecx eax
dec [ 0x1716951b ]
std
adc [ es : ebp + 0x15 ] cl
sbb al 0x91
rcl [ edx * 4 + 0x14ecc416 ] 0xd7
mov cl 0x12
xchg ebp eax
push ss
sbb al 0x9e
retn 0xb21e
sub_43fa4e
sbb esp eax
push 0xffffffe9
movsb [ edi ] [ esi ]
mov [ 0x4d4d1693 ] eax
sbb al 0x53
pop ecx
sahf
loopne r-xdata
xchg ebx eax
push ss
dec ebp
dec ebp
movsb [ edi ] [ esi ]
fistp [ ebx ]
inc ebp
jge r-xdata
int3
dec ebx
dec esp
rcl eax cl
dec ebx
inc esi
rcl eax cl
dec ebx
inc ecx
rcl eax cl
dec ebx
push eax
rcl eax cl
dec ebx
pop eax
sar ebp cl
dec ebx
adc eax 0x19109d95
adc al 0xd5
dec ebp
add eax 0xdb4c1695
movsb [ edi ] [ esi ]
fistp [ ebx ]
inc esi
jge r-xdata
push ds
pop ebx
inc ecx
xchg esp eax
int3
push esp
push ss
push esi
adc eax 0x9d5d9c95
test [ edi - 0x32 ] dl
aad 0x97
jo r-xdata
daa
adc eax 0xfd1d436a
adc [ edi ] 0x4d
adc eax 0x94415b1e
dec ebx
adc eax 0xd3831795
xchg ebx eax
xor al 0xb
std
fist [ eax ]
dec ebp
adc eax 0x604cee16
mov ebx 0xd3354bd0
ror [ ebx + 0x3a ] 0x1
rcl eax cl
dec ebx
inc edi
rcl eax cl
dec ebx
inc eax
rcl eax cl
dec ebx
xor eax 0x464bd0d3
rcl eax cl
dec ebp
sahf
loopne r-xdata
std
sub eax 0x9ebf6395
fcomp [ edx ]
int3
sub_43fdaf
push ebp
test [ esi - 0x3c ] eax
push eax
std
lahf
mov dh 0x94
push esi
push ss
inc ecx
adc eax 0x55274595
std
push ss
dec ebp
pop es
xchg ebp eax
inc esi
daa
0x4d2d436a 0x5e1e
sub_43fdd0
fstp [ esi ]
adc al 0x5d
ror [ ecx + 0x1d ] 0x1
push esi
aad 0xc6
xchg edx eax
xchg ebp eax
push ds
dec ebp
adc eax 0x14714e1e
dec ebp
jo r-xdata
sbb eax 0x95dc854b
mov ah 0x15
loopne r-xdata
push ebp
adc [ esi ] 0x136d9c4d
dec ebp
or [ ebp - 0x6e80e2ea ] edx
jmp 0x16e11bf4
xchg ebp eax
movsd [ edi ] [ esi ]
adc [ esi ] ebx
cdq
inc ebp
sbb eax 0xfcce1695
test [ ebp + 0x169d15d2 ] ebx
dec ebp
sahf
sbb [ 0xffffffff9df1efcc ] 0x4e03958
mov edx [ ecx ]
sahf
lodsb [ esi ]
les edx [ ecx - 0x62 ]
pop ss
mov edx [ ecx - 0x62 ]
adc ebx ebp
rcl ecx cl
sub_43fe0e
insd
adc eax 0x7939f695
adc al 0x68
imul esi [ 0x612d1695 ] 0x313397ed
cmc
push ss
dec ebp
jne r-xdata
movsb [ edi ] [ esi ]
popa
jmp 0x332f92c0
jns r-xdata
jg r-xdata
imul esi [ ecx + 0x55154d56 ] 0x62
adc dl [ ebx + ebp * 8 - 0x6aea32ce ]
salc
cmp [ ebx + 0x14 ] eax
push 0x16951569
lea esp [ ecx - 0x28 ]
xchg edi eax
xor esi [ ecx ]
aad 0x16
dec ebp
push ebp
loope r-xdata
dec ebp
adc eax 0x190d9d95
push ds
push esi
pop ecx
sahf
xchg ebp eax
popfd
adc eax 0x4d012c3d
adc eax 0x15b49595
loope r-xdata
jmp 0x16e11bf4
push esi
popfd
adc [ ecx ] bl
adc al 0xd5
dec ebp
add eax 0xea1e1695
loopne r-xdata
int3
pop ds
mov [ ecx ] 0xd389d9e
xchg ebp eax
push esi
sbb ebp edx
shl [ esi ] 0xc4
rcr [ esi ] cl
arpl [ ecx - 0x6c ] ax
push ebx
push ss
push ecx
adc eax 0x434d7c95
push 0x60
dec ecx
xchg esp eax
push ebx
movsd [ edi ] [ esi ]
jl r-xdata
and al [ ebx + 0x5c ]
lodsd [ esi ]
sar [ ecx ] 0xf8
loopne r-xdata
aam 0x68
adc eax 0xea1a4095
shl [ edx ] 0x1a
0x60c63ec0 0x9799
jmp 0x1b0c9d64
sub_43fee7
pushad
cdq
xchg edi eax
mov edx [ 0x7f4d1688 ]
xchg ebp eax
jl r-xdata
mov cl 0x12
and eax 0x4d1695ea
jg r-xdata
push ss
dec ebp
adc eax 0x11f6187e
jl r-xdata
inc ebp
xchg ebp eax
push ss
dec ebp
jg r-xdata
xchg ebp eax
push ss
dec ebp
jle r-xdata
adc eax 0xea1b5695
shl [ esi ] 0xc4
rcr [ esi ] cl
arpl [ ecx - 0x6c ] ax
push ebx
push ss
push ecx
adc eax 0x434d7c95
push 0x60
dec ecx
xchg esp eax
push ebx
aam 0x68
adc eax 0xea1a4095
shl [ edx ] 0x1a
0x60c63ec0 0x9799
sub_440006
mov [ esi - 0x6d ] 0x95
mov ds [ edi ]
movsb [ edi ] [ esi ]
fcomip st5
adc al 0x95
push ss
dec ebp
push esp
salc
sub eax 0x9f9d605e
push cs
out dx al
push ebx
push ebp
mov bh 0xad
aad 0x96
jbe r-xdata
xchg esi eax
loopne r-xdata
push ebp
into
outsb
xchg esp eax
push ss
cmp [ edx ] cl
sbb al 0x55
mov cl 0xd3
salc
in eax dx
cmc
push ebp
les esp [ edi ]
test [ esi + 0x15 ] dl
sub eax 0x706f608f
into
outsb
xchg esp eax
add bh [ eax ]
out 0xd4 al
mov ah 0x17
loopne r-xdata
rol [ ecx - 0x4f ] 0x12
into
salc
lahf
daa
test [ ebp + 0x154d1694 ] ch
aam 0x55
jbe r-xdata
xchg ebp eax
dec esp
rcl dh cl
adc esi edi
adc eax 0x46c41695
xchg ebx eax
push esi
into
aam 0x9f
xchg ebp eax
mov ds [ edi ]
adc al 0xef
dec ebp
xor eax 0x8a381695
push edi
add cl [ ebp - 0x62 ]
leave
xor cl [ ecx - 0x62 ]
shl [ edx ] 0x1
dec ecx
push ss
shl [ edx ] 0x1
inc ebp
push esi
lodsb [ esi ]
aad 0x39
pop ebx
adc eax 0x6360f52d
xchg ebp eax
adc al 0x95
arpl [ ebp - 0xbec116b ] di
pushad
jg r-xdata
adc al 0x95
scasb [ edi ]
scasb [ edi ]
cmp [ ecx ] cl
xchg edi eax
adc [ ss : edx - 0xa ] ch
cmp [ ecx ] al
sbb al 0x55
test [ esi ] ah
loope r-xdata
loopne r-xdata
mov edx [ esi + 0x63 ]
scasb [ edi ]
les edx [ esi + 0x62 ]
push esi
int3
int 0x6e
test [ esi + 0x57d6555e ] ebx
int 0x2d
xchg ebp eax
arpl [ ecx + 0x29169dd7 ] di
mov ah 0x8d
push ss
dec ebp
adc eax 0x957d561e
sub eax 0x95154db2
adc edi [ eax ]
adc ebp [ 0xffffffff95154d17 ]
aad 0x7c
aad 0x56
dec [ eax ]
in al dx
push 0xffffffe9
outsb
scasd [ edi ]
cmp [ edi ] ebx
push ebx
push ebp
mov ah 0xad
sbb al 0x55
mov bh 0x55
jle r-xdata
sub edx [ esi + ebp * 8 - 0x1ed97b18 ]
adc ch cl
outsb
push ds
jbe r-xdata
inc edx
sub al 0x66
sub_440119
arpl [ gs : eax - 0x13 ] si
jae r-xdata
cmpsd [ esi ] [ edi ]
bound eax [ ss : ecx - 0x25 ]
outsd
inc esi
loope r-xdata
std
retn 0xb2ef
push ss
movsd [ edi ] [ esi ]
int 0x6c
jmp 0x642b3ca8
aas
popad
loopne r-xdata
rcl [ ecx + 0x12 ] 0x1
inc esi
iretd
insd
pop esi
sub_440199
sub [ fs : ecx - 0x28 ] cl
jg r-xdata
bound edi [ eax ]
mov ch 0x5d
cli
and dh [ gs : ebx - 0x1f ]
dec edx
sbb bh [ ebx + edi * 8 + 0x72 ]
and ah [ edx - 0x1a ]
dec edx
push cs
pushad
out 0x64 eax
sub [ ebx - 0x1f ] bh
inc eax
rcl [ ecx + 0x12 ] 0x1
inc esi
iretd
bound ebp [ ebp + 0x47 ]
jpo r-xdata
sub [ edx - 0x4b ] dh
ja r-xdata
sub [ edi + esi * 4 + 0x4a ] ch
outsd
aaa
mov ch 0x39
sub esi [ 0x476d62ba ]
inc esp
cmp [ ebx - 0x49 ] bh
bound esp [ ss : ebx - 0x4b ]
xor al 0x11
aaa
mov bh 0x45
cmp [ edi + 0x62 ] esi
cmp [ ebp - 0x4b ] ah
pop ebp
loope r-xdata
jno r-xdata
and esi [ 0x352362ba ]
mov bh 0x45
cmp [ edi + 0x62 ] esi
cmp [ ebp - 0x4b ] ah
pop ebp
sub [ edi + esi * 4 + 0x16 ] ch
movsd [ edi ] [ esi ]
outsb
jmp 0x45d95ac4
sub [ edi - 0x1a ] ah
jg r-xdata
cmp eax 0x3473de35
aaa
mov ch 0x39
sbb [ edi - 0x4b ] eax
xor al 0x4d
std
mov ch bh
mov dl 0xea
mov edx 0xf4703f55
bound ebp [ eax ]
xor eax 0x350e45ba
fstp [ ecx + 0x18 ]
inc edi
xor al 0x5
pop esi
fstp [ ebx + 0x11 ]
inc esi
cli
jo r-xdata
mov ch 0x5d
sub_4403cd
push ss
movsd [ edi ] [ esi ]
in al dx
jl r-xdata
jo r-xdata
mov dl 0x56
stc
jns r-xdata
dec ebp
std
push ebp
push [ edx + 0x3973c6ea ]
push eax
out 0x64 eax
and ah [ edi - 0x28 ]
jns r-xdata
inc esi
aas
jpe r-xdata
jo r-xdata
shr [ esi + 0x4d ] 0x1
std
cmp esp 0xffffffb2
0x742864d6 0x73e1
jo r-xdata
push esi
jae r-xdata
sub al 0x71
sar [ edi + 0x21 ] cl
ja r-xdata
dec ebp
std
push 0xfffffffc
mov dl 0xea
sar [ eax + 0x20 ] 0x74
in eax 0x40
and al 0x70
loop r-xdata
jae r-xdata
retn 0xa516
and bh [ eax - 0x8 ]
ja r-xdata
jno r-xdata
sub edx [ ebx - 0x4 ]
mov dl 0x66
std
jae r-xdata
pushad
push ebx
cmp esi [ eax - 0x5 ]
bound ecx [ ebp - 0x3 ]
pop esi
out 0xb2 eax
0x612379d6 0x78fc
or [ ebp - 0x4 ] ch
bound ecx [ esi ]
jno r-xdata
r-xdata
jae r-xdata
0x7b3f73fe 0x7af0
adc eax 0xeaa63d7d
push 0x5f
sbb eax 0xc66f95d
cld
push ss
movsd [ edi ] [ esi ]
jle r-xdata
xchg ebp eax
jns r-xdata
movsd [ edi ] [ esi ]
scasb [ edi ]
jmp 0x633456d8
jae r-xdata
dec ebp
jg r-xdata
int1
std
test al 0xfc
mov dl 0xea
shl [ ebx + 0x39 ] cl
pop ecx
cli
js r-xdata
jpe r-xdata
push ebx
cld
mov dl 0x52
loop r-xdata
and al 0x4d
std
xchg esp eax
cld
mov dl 0xea
jge r-xdata
cli
jne r-xdata
inc ebp
hlt
jpe r-xdata
push cs
jo r-xdata
jmp 0x801065bd
jmp 0x653445f0
mov esp 0x2c416aea
jl r-xdata
out 0x16 al
outsd
out 0x73 eax
sub al 0x61
push ss
movsd [ edi ] [ esi ]
test eax 0x56b2e97a
movsd [ edi ] [ esi ]
push eax
and ah [ edi - 0x2f ]
sub_44049d
push ebx
xor eax 0x3963f670
jo r-xdata
bound ecx [ ebp - 0x3 ]
sbb esi ecx
mov dl 0xea
push ss
movsd [ edi ] [ esi ]
mov [ ebp - 0x17 ] edi
mov dl 0x7b
loope r-xdata
fdiv [ ebx + 0x20 ]
jpe r-xdata
and [ ecx - 0x6b ] edi
jmp r-xdata
outsd
dec ebp
std
mov esp 0xdbeab2e6
bound ebx [ esi ]
jo r-xdata
sbb eax 0x2862fa67
jbe r-xdata
push ebp
and bh [ ebx - 0x1f ]
jae r-xdata
dec ebp
cli
push 0xffffffe9
add esp [ ecx - 0x2a ]
sub [ fs : ecx + 0x73 ] dh
or edi [ ecx + edi * 8 + 0x73 ]
dec ebp
std
inc eax
and al 0x67
loope r-xdata
xchg ebp eax
inc [ ebx - 0x1b ]
push 0xffffffe9
or [ eax - 0x9 ] esi
arpl [ edx ] bp
popad
sar [ esi + 0x3f ] 0x70
hlt
jae r-xdata
sub al 0x79
push esp
mul [ edx + 0x24 ]
arpl ax si
inc esi
aas
jpe r-xdata
xchg bp ax
sub_44068c
scasb [ edi ]
xor al 0xff
test eax 0x17976dc9
pop ebx
jl r-xdata
shr al 0x1
add bl [ eax ]
sub esi [ edx + esi * 8 + 0x1d83714c ]
out dx al
in eax 0xc8
outsd
inc eax
fdiv [ ebx + 0x56 ]
sub ch dh
movsb [ edi ] [ esi ]
jpo r-xdata
popad
in eax dx
hlt
adc al 0x59
adc [ ecx ] ah
cmp ch [ eax ]
cwde
fsubrp st7
das
sar [ edx - 0x29 ] cl
nop
hlt
__vbaChkstk
jmp [ __vbaChkstk@IAT ]
__vbaFPException
jmp [ __vbaFPException@IAT ]
_adj_fdiv_m16i
jmp [ _adj_fdiv_m16i@IAT ]
_adj_fdiv_m32
jmp [ _adj_fdiv_m32@IAT ]
_adj_fdiv_m32i
jmp [ _adj_fdiv_m32i@IAT ]
_adj_fdiv_m64
jmp [ _adj_fdiv_m64@IAT ]
_adj_fdiv_r
jmp [ _adj_fdiv_r@IAT ]
_adj_fdivr_m16i
jmp [ _adj_fdivr_m16i@IAT ]
_adj_fdivr_m32
jmp [ _adj_fdivr_m32@IAT ]
_adj_fdivr_m32i
jmp [ _adj_fdivr_m32i@IAT ]
_adj_fdivr_m64
jmp [ _adj_fdivr_m64@IAT ]
_adj_fpatan
jmp [ _adj_fpatan@IAT ]
_adj_fprem
jmp [ _adj_fprem@IAT ]
_adj_fprem1
jmp [ _adj_fprem1@IAT ]
_CIcos
jmp [ _CIcos@IAT ]
_CIexp
jmp [ _CIexp@IAT ]
_CIlog
jmp [ _CIlog@IAT ]
_CIsin
jmp [ _CIsin@IAT ]
_CIsqrt
jmp [ _CIsqrt@IAT ]
_CItan
jmp [ _CItan@IAT ]
_allmul
jmp [ _allmul@IAT ]
__vbaFreeVar
jmp [ __vbaFreeVar@IAT ]
__vbaStrCopy
jmp [ __vbaStrCopy@IAT ]
__vbaFreeStr
jmp [ __vbaFreeStr@IAT ]
__vbaHresultCheckObj
jmp [ __vbaHresultCheckObj@IAT ]
__vbaNew2
jmp [ __vbaNew2@IAT ]
__vbaStrCmp
jmp [ __vbaStrCmp@IAT ]
Ordinal_MSVBVM60_517
jmp [ Ordinal_MSVBVM60_517@IAT ]
__vbaFileSeek
jmp [ __vbaFileSeek@IAT ]
__vbaInStrB
jmp [ __vbaInStrB@IAT ]
Ordinal_MSVBVM60_589
jmp [ Ordinal_MSVBVM60_589@IAT ]
Ordinal_MSVBVM60_672
jmp [ Ordinal_MSVBVM60_672@IAT ]
Ordinal_MSVBVM60_651
jmp [ Ordinal_MSVBVM60_651@IAT ]
__vbaStrMove
jmp [ __vbaStrMove@IAT ]
Ordinal_MSVBVM60_609
jmp [ Ordinal_MSVBVM60_609@IAT ]
__vbaVarMove
jmp [ __vbaVarMove@IAT ]
__vbaFreeObj
jmp [ __vbaFreeObj@IAT ]
Ordinal_MSVBVM60_685
jmp [ Ordinal_MSVBVM60_685@IAT ]
__vbaObjSet
jmp [ __vbaObjSet@IAT ]
Ordinal_MSVBVM60_534
jmp [ Ordinal_MSVBVM60_534@IAT ]
EVENT_SINK_QueryInterface
jmp [ EVENT_SINK_QueryInterface@IAT ]
EVENT_SINK_AddRef
jmp [ EVENT_SINK_AddRef@IAT ]
EVENT_SINK_Release
jmp [ EVENT_SINK_Release@IAT ]
Ordinal_MSVBVM60_100
jmp [ Ordinal_MSVBVM60_100@IAT ]
sub_401285
inc esp
out 0x83 eax
dec ebp
mov esi 0xa1a00b4b
int1
iretd
sub_43e48c
enter 0x4c39 0x5d
or [ ecx ] esp
and al 0xd5
lds eax [ ebx ]
retn 0x841d
sub_43e4f4
push esp
inc esi
sahf
fst [ ebx + eax * 8 + 0x18 ]
pop esi
rol [ ecx ] 0xc5
xor al 0x6d
retn
sub_43e502
out dx eax
scasd [ edi ]
xor [ 0x5c0d293f ] eax
sar [ esi ] 0x1
test [ ecx - 0x6bd5cd93 ] esi
add [ eax ] bh
sahf
scasb [ edi ]
hlt
sub_43f28b
0x154d1e9d 0x137e
hlt
sub_43f587
dec edx
popfd
xchg ebp eax
mov ds [ 0xffffffffc5b2256a ]
sbb al 0xed
int3
sub_43f5f7
daa
push 0xffffffc6
int3
sub_43fdfa
dec ebp
0x15451622 0x7c95
sub_440123
0x703f55ba 0x62f4
sub_4402b1
push [ edx + 0x2865e0ea ]
cmpsb [ si ] [ di ]
and al 0x4d
std
retn 0xb2fb
sub_4402bf
0x783878d0 0x7ec1
sub_4402d9
cmp [ gs : edi - 0x6 ] esp
outsd
sbb bh [ ebx + edi * 8 + 0x72 ]
and ah [ edx - 0x6b ]
dec [ esp + edi * 8 ]
push 0xffffffe9
or dh [ eax - 0x1f ]
push edx
sub [ esi - 0x2 ] ah
bound esp [ edx ]
retn 0x237f
sub_440325
bound ecx [ ecx + esi * 2 ]
hlt
sub_4403be
popad
[ edx - 0x17 ]
sub_4406c6
insd
popad
in eax dx
hlt
sub_443525
push ebp
mov ebp esp
push 0x8
pop eax
call __vbaChkstk
nop
mov ebx sub_43e669
call ebx
jmp 0xffffffffca44353c
