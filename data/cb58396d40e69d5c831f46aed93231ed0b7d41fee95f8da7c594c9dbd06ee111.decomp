sub_10001012
push 0x24
mov eax sub_1004cff9
call sub_10029e33
xor ebx ebx
mov [ ebp - 0x4 ] ebx
push esi
mov [ ebp - 0x30 ] esi
mov [ ebp - 0x10 ] ebx
call sub_100024d3
xor edi edi
mov [ ebp - 0x4 ] ebx
inc edi
push r--data
lea ecx [ esi + 0xc0 ]
mov [ ebp - 0x10 ] edi
call sub_100013a5
push r--data
lea ecx [ ebp - 0x2c ]
call sub_10001254
lea ecx [ ebp - 0x2c ]
lea eax [ esi + 0x8c ]
push ecx
mov [ ebp - 0x4 ] edi
call sub_10001335
push ebx
push edi
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x4 ] bl
call sub_1000247e
push r--data
lea ecx [ ebp - 0x2c ]
call sub_10001254
lea eax [ ebp - 0x2c ]
push eax
lea eax [ esi + 0x8c ]
mov [ ebp - 0x4 ] 0x2
call sub_10001335
push ebx
push edi
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x4 ] bl
call sub_1000247e
push r--data
lea ecx [ ebp - 0x2c ]
call sub_10001254
lea eax [ ebp - 0x2c ]
push eax
lea eax [ esi + 0x8c ]
mov [ ebp - 0x4 ] 0x3
call sub_10001335
push ebx
push edi
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x4 ] bl
call sub_1000247e
push r--data
lea ecx [ esi + 0x70 ]
call sub_10002408
push r--data
lea ecx [ esi + 0x54 ]
call sub_10002408
push r--data
lea ecx [ esi + 0x18 ]
mov [ esi + 0x34 ] 0xa4cb80
call sub_100013a5
push r--data
lea ecx [ esi + 0xa4 ]
call sub_10002408
push r--data
lea ecx [ esi + 0x38 ]
call sub_100013a5
mov eax esi
call sub_10029f0b
retn
sub_10001127
push 0x0
mov eax sub_1004cfad
call sub_10029e33
mov edi ecx
mov esi [ ebp + 0x8 ]
push edi
push esi
call sub_10001276
and [ ebp - 0x4 ] 0x0
lea eax [ edi + 0x18 ]
push eax
lea ecx [ esi + 0x18 ]
call sub_10001fad
mov [ ebp - 0x4 ] 0x1
mov eax [ edi + 0x34 ]
mov [ esi + 0x34 ] eax
lea eax [ edi + 0x38 ]
push eax
lea ecx [ esi + 0x38 ]
call sub_10001fad
lea eax [ edi + 0x54 ]
push eax
lea ecx [ esi + 0x54 ]
mov [ ebp - 0x4 ] 0x2
call sub_10001c9f
lea eax [ edi + 0x70 ]
push eax
lea ecx [ esi + 0x70 ]
mov [ ebp - 0x4 ] 0x3
call sub_10001c9f
lea eax [ edi + 0x8c ]
push eax
lea eax [ esi + 0x8c ]
push eax
mov [ ebp - 0x4 ] 0x4
call sub_10001276
lea eax [ edi + 0xa4 ]
push eax
lea ecx [ esi + 0xa4 ]
mov [ ebp - 0x4 ] 0x5
call sub_10001c9f
add edi 0xc0
push edi
lea ecx [ esi + 0xc0 ]
mov [ ebp - 0x4 ] 0x6
call sub_10001fad
mov eax esi
call sub_10029f0b
retn 0x4
sub_100011d2
push 0xe4
mov eax sub_1004e6e0
call sub_10029e9c
lea esi [ ebp - 0xec ]
call sub_10001012
and [ ebp - 0x4 ] 0x0
push 0x264
call sub_10025dd6
pop ecx
mov [ ebp - 0xf0 ] eax
mov [ ebp - 0x4 ] 0x1
test eax eax
je r-xdata
xor eax eax
mov ecx esi
push ecx
push eax
call sub_10007bc9
jmp r-xdata
mov [ ebp - 0x4 ] 0x0
push eax
mov [ rw-data ] eax
call sub_10014b90
lea edi [ ebp - 0xec ]
call sub_1000253c
call sub_10029f1f
retn
sub_10001276
push 0x14
mov eax sub_1004cf43
call sub_10029e66
xor ebx ebx
push ebx
push 0x1
call sub_10001ad5
mov edi [ ebp + 0x8 ]
pop ecx
pop ecx
cmp eax ebx
je r-xdata
xor eax eax
mov [ eax ] edi
jmp r-xdata
mov eax edi
call sub_10029f0b
retn 0x8
call sub_10001440
cmp al bl
je r-xdata
mov [ edi ] eax
mov [ ebp - 0x4 ] ebx
mov esi [ ebp + 0xc ]
mov eax [ esi + 0x10 ]
sub eax [ esi + 0xc ]
push 0x1c
cdq
pop ecx
idiv ecx
mov [ edi + 0xc ] ebx
mov [ edi + 0x10 ] ebx
mov [ edi + 0x14 ] ebx
cmp eax ebx
je r-xdata
mov [ ebp - 0x4 ] 0x1
mov ebx [ esi + 0x10 ]
mov edi esi
lea esi [ ebp - 0x18 ]
call sub_10001807
mov ebx [ edi + 0xc ]
lea esi [ ebp - 0x20 ]
call sub_10001807
mov esi [ ebp + 0x8 ]
mov ecx [ esi + 0xc ]
xor eax eax
lea edi [ ebp + 0xc ]
stosb [ edi ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push ecx
push [ ebp - 0x14 ]
mov ecx [ ebp - 0x1c ]
call sub_10006853
add esp 0x10
mov [ esi + 0x10 ] eax
mov edi esi
sub_10001335
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
push edi
mov edi eax
mov ecx [ edi + 0xc ]
test ecx ecx
jne r-xdata
mov eax [ edi + 0x14 ]
sub eax ecx
push 0x1c
cdq
pop esi
idiv esi
mov esi eax
xor esi esi
jmp r-xdata
lea esi [ ebp - 0xc ]
call sub_10001807
push [ ebp - 0x8 ]
lea eax [ ebp - 0xc ]
push [ ebp - 0xc ]
push [ ebp + 0x8 ]
push eax
mov eax edi
call sub_100013c2
push [ ebp + 0x8 ]
push 0x1
push ebx
call sub_1000149c
mov [ edi + 0x10 ] eax
jmp r-xdata
mov ebx [ edi + 0x10 ]
mov eax ebx
sub eax ecx
push 0x1c
cdq
pop ecx
idiv ecx
cmp eax esi
jae r-xdata
pop edi
pop esi
pop ebx
leave
retn 0x4
sub_100013c2
push ebp
mov ebp esp
sub esp 0x14
push ebx
push esi
push edi
mov edi eax
mov ebx [ edi + 0xc ]
mov eax [ edi + 0x10 ]
sub eax ebx
push 0x1c
cdq
pop ecx
idiv ecx
test eax eax
jne r-xdata
lea esi [ ebp - 0x8 ]
call sub_10001807
mov eax [ ebp + 0x10 ]
test eax eax
je r-xdata
and [ ebp - 0x4 ] eax
jmp r-xdata
call sub_100261ef
cmp eax [ ebp - 0x8 ]
je r-xdata
push [ ebp + 0x14 ]
mov ecx edi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push 0x1
call sub_1000155d
mov ebx [ edi + 0xc ]
lea esi [ ebp - 0x10 ]
call sub_10001807
push [ ebp - 0x4 ]
mov esi [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
call sub_10001827
pop edi
mov eax esi
pop esi
pop ebx
leave
retn 0x10
mov eax [ ebp + 0x14 ]
sub eax [ ebp - 0x4 ]
push 0x1c
cdq
pop ecx
idiv ecx
mov [ ebp - 0x4 ] eax
sub_10001440
push esi
mov esi eax
cmp esi 0x9249249
jbe r-xdata
test esi esi
ja r-xdata
call sub_100017c8
mov ecx esi
call sub_10001918
push 0x0
call sub_10025dd6
pop ecx
jmp r-xdata
imul esi esi 0x1c
add esi eax
mov [ edi + 0xc ] eax
mov [ edi + 0x10 ] eax
mov [ edi + 0x14 ] esi
mov al 0x1
pop esi
retn
sub_1000149c
push ebp
mov ebp esp
push ecx
push edi
xor eax eax
lea edi [ ebp - 0x4 ]
stosb [ edi ]
push [ ebp - 0x4 ]
push [ ebp + 0xc ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_1000195b
mov eax [ ebp + 0xc ]
imul eax eax 0x1c
add esp 0x14
add eax [ ebp + 0x8 ]
pop edi
leave
retn 0xc
sub_100014cc
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
push edi
mov esi ecx
call sub_10001c59
test al al
je r-xdata
push 0x0
push [ ebp + 0xc ]
mov ecx esi
call sub_10001eb9
test al al
je r-xdata
cmp [ esi + 0x18 ] 0x8
jb r-xdata
mov eax esi
mov ecx [ esi + 0x18 ]
cmp ecx 0x8
jb r-xdata
lea eax [ esi + 0x4 ]
mov eax [ esi + 0x4 ]
jmp r-xdata
lea eax [ esi + 0x4 ]
mov eax [ esi + 0x4 ]
jmp r-xdata
pop edi
pop esi
pop ebp
retn 0x8
push [ ebp + 0xc ]
sub edi eax
sar edi 0x1
push edi
push esi
mov ecx esi
call sub_10001f1a
jmp r-xdata
push [ ebp + 0xc ]
push edi
push ecx
push eax
call sub_10002444
add esp 0x10
push [ ebp + 0xc ]
mov ecx esi
call sub_10002460
sub_1000155d
push 0x54
mov eax sub_1004cf16
call sub_10029ed2
mov edi [ ebp + 0x8 ]
mov eax [ ebp + 0xc ]
mov esi ecx
mov ecx [ esi + 0xc ]
mov [ ebp - 0x54 ] esi
mov [ ebp - 0x58 ] eax
test ecx ecx
jne r-xdata
mov eax [ esi + 0x14 ]
sub eax ecx
push 0x1c
cdq
pop ebx
idiv ebx
mov ebx eax
xor ebx ebx
jmp r-xdata
call sub_10029f2e
retn 0x10
mov eax [ esi + 0x10 ]
sub eax ecx
push 0x1c
cdq
pop ecx
idiv ecx
mov ecx 0x9249249
mov edx ecx
sub edx eax
cmp edx edi
jae r-xdata
test edi edi
je r-xdata
add eax edi
cmp ebx eax
jae r-xdata
call sub_100017c8
mov eax [ esi + 0x10 ]
sub eax [ ebp + 0x14 ]
push 0x1c
cdq
pop ecx
idiv ecx
push [ ebp - 0x58 ]
cmp eax edi
jae r-xdata
mov edx ebx
shr edx 0x1
sub ecx edx
cmp ecx ebx
jae r-xdata
lea ecx [ ebp - 0x4c ]
call sub_10001fad
imul edi edi 0x1c
mov [ ebp - 0x4 ] 0x5
mov ebx [ esi + 0x10 ]
mov ecx ebx
sub ecx edi
push ebx
mov edx ebx
mov [ ebp - 0x58 ] ecx
call sub_1000189b
push [ ebp + 0x14 ]
mov ecx [ ebp - 0x58 ]
mov [ esi + 0x10 ] eax
mov eax ebx
call sub_100018db
pop ecx
lea eax [ ebp - 0x4c ]
push eax
mov eax [ ebp + 0x14 ]
add edi eax
push edi
call sub_100018bc
pop ecx
pop ecx
lea ecx [ ebp - 0x4c ]
lea ecx [ ebp - 0x30 ]
call sub_10001fad
mov ebx edi
imul ebx ebx 0x1c
mov [ ebp - 0x4 ] 0x2
mov ecx [ ebp + 0x14 ]
push [ esi + 0x10 ]
lea edx [ ebx + ecx ]
call sub_1000189b
mov [ ebp - 0x4 ] 0x3
mov eax [ esi + 0x10 ]
sub eax [ ebp + 0x14 ]
lea ecx [ ebp - 0x30 ]
push ecx
push 0x1c
pop ecx
cdq
idiv ecx
sub edi eax
push edi
push [ esi + 0x10 ]
call sub_1000149c
mov [ ebp - 0x4 ] 0x2
add [ esi + 0x10 ] ebx
mov esi [ esi + 0x10 ]
lea eax [ ebp - 0x30 ]
push eax
mov eax [ ebp + 0x14 ]
sub esi ebx
push esi
call sub_100018bc
pop ecx
pop ecx
lea ecx [ ebp - 0x30 ]
jmp r-xdata
add ebx edx
xor ebx ebx
jmp r-xdata
push 0x0
push 0x1
call sub_1000247e
test ebx ebx
ja r-xdata
mov ebx eax
cmp ebx eax
jae r-xdata
mov ecx ebx
call sub_10001918
push 0x0
call sub_10025dd6
pop ecx
jmp r-xdata
mov eax [ ebp - 0x50 ]
imul ebx ebx 0x1c
imul edi edi 0x1c
add ebx eax
add edi eax
mov [ esi + 0x14 ] ebx
mov [ esi + 0x10 ] edi
mov [ esi + 0xc ] eax
jmp r-xdata
push [ esi + 0x10 ]
call sub_10001540
push [ esi + 0xc ]
call sub_10025c9c
pop ecx
mov [ ebp - 0x50 ] eax
mov eax [ ebp + 0x14 ]
sub eax [ esi + 0xc ]
push 0x1c
cdq
pop ecx
idiv ecx
push [ ebp - 0x58 ]
and [ ebp - 0x5c ] 0x0
and [ ebp - 0x4 ] 0x0
push edi
mov [ ebp - 0x54 ] eax
imul eax eax 0x1c
add eax [ ebp - 0x50 ]
push eax
call sub_1000149c
push [ ebp + 0x14 ]
mov edx [ ebp - 0x50 ]
mov ecx [ esi + 0xc ]
mov [ ebp - 0x5c ] 0x1
call sub_1000189b
mov eax [ ebp - 0x54 ]
push [ esi + 0x10 ]
mov ecx [ ebp + 0x14 ]
lea edx [ eax + edi ]
imul edx edx 0x1c
add edx [ ebp - 0x50 ]
mov [ ebp - 0x5c ] 0x2
call sub_1000189b
mov ecx [ esi + 0xc ]
mov eax [ esi + 0x10 ]
sub eax ecx
cdq
push 0x1c
pop ecx
idiv ecx
add edi eax
mov eax [ esi + 0xc ]
test eax eax
je r-xdata
sub_10001689
cmp [ ebp - 0x5c ] 0x1
jle r-xdata
xor esi esi
cmp [ ebp - 0x5c ] esi
jle r-xdata
mov ecx [ ebp - 0x54 ]
mov eax [ ebp - 0x50 ]
imul ecx ecx 0x1c
add ecx eax
push ecx
call sub_10001540
push [ ebp - 0x50 ]
call sub_10025c9c
pop ecx
push esi
push esi
call sub_10029a01
mov eax [ esi + 0x10 ]
sub eax [ ebp + 0x14 ]
push 0x1c
cdq
pop ecx
idiv ecx
push [ ebp - 0x58 ]
cmp eax edi
jae r-xdata
mov eax [ ebp - 0x54 ]
mov ecx [ ebp + 0x8 ]
add ecx eax
imul eax eax 0x1c
add eax [ ebp - 0x50 ]
imul ecx ecx 0x1c
add ecx [ ebp - 0x50 ]
push ecx
call sub_10001540
lea ecx [ ebp - 0x4c ]
call sub_10001fad
imul edi edi 0x1c
mov [ ebp - 0x4 ] 0x5
mov ebx [ esi + 0x10 ]
mov ecx ebx
sub ecx edi
push ebx
mov edx ebx
mov [ ebp - 0x58 ] ecx
call sub_1000189b
push [ ebp + 0x14 ]
mov ecx [ ebp - 0x58 ]
mov [ esi + 0x10 ] eax
mov eax ebx
call sub_100018db
pop ecx
lea eax [ ebp - 0x4c ]
push eax
mov eax [ ebp + 0x14 ]
add edi eax
push edi
call sub_100018bc
pop ecx
pop ecx
lea ecx [ ebp - 0x4c ]
lea ecx [ ebp - 0x30 ]
call sub_10001fad
mov ebx edi
imul ebx ebx 0x1c
mov [ ebp - 0x4 ] 0x2
mov ecx [ ebp + 0x14 ]
push [ esi + 0x10 ]
lea edx [ ebx + ecx ]
call sub_1000189b
mov [ ebp - 0x4 ] 0x3
mov eax [ esi + 0x10 ]
sub eax [ ebp + 0x14 ]
lea ecx [ ebp - 0x30 ]
push ecx
push 0x1c
pop ecx
cdq
idiv ecx
sub edi eax
push edi
push [ esi + 0x10 ]
call sub_1000149c
mov [ ebp - 0x4 ] 0x2
add [ esi + 0x10 ] ebx
mov esi [ esi + 0x10 ]
lea eax [ ebp - 0x30 ]
push eax
mov eax [ ebp + 0x14 ]
sub esi ebx
push esi
call sub_100018bc
pop ecx
pop ecx
lea ecx [ ebp - 0x30 ]
jmp r-xdata
push 0x0
push 0x1
call sub_1000247e
call sub_10029f2e
retn 0x10
sub_100017c8
push 0x44
mov eax sub_1004ab3c
call sub_10029e33
push r--data
lea ecx [ ebp - 0x28 ]
call sub_10001b81
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x28 ]
push eax
lea ecx [ ebp - 0x50 ]
call sub_10001ba3
push r--data
lea eax [ ebp - 0x50 ]
push eax
mov [ ebp - 0x50 ] r--data
call sub_10029a01
int3
sub_10001807
and [ esi ] 0x0
test edi edi
je r-xdata
call sub_100261ef
cmp [ edi + 0xc ] ebx
ja r-xdata
cmp ebx [ edi + 0x10 ]
jbe r-xdata
mov eax [ edi ]
mov [ esi ] eax
mov [ esi + 0x4 ] ebx
mov eax esi
retn
sub_10001827
push ebp
mov ebp esp
push ecx
push ecx
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
push edi
push [ ebp + 0x8 ]
lea edi [ ebp - 0x8 ]
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] eax
call sub_10001855
mov eax [ ebp - 0x8 ]
mov [ esi ] eax
mov eax [ ebp - 0x4 ]
mov [ esi + 0x4 ] eax
mov eax esi
pop edi
leave
retn 0x4
sub_10001855
mov eax [ edi ]
test eax eax
jne r-xdata
mov edx [ eax ]
jmp r-xdata
call sub_100261ef
mov eax [ edi ]
test eax eax
je r-xdata
mov ecx [ edi + 0x4 ]
push esi
mov esi [ esp + 0x8 ]
imul esi esi 0x1c
add ecx esi
cmp ecx [ edx + 0x10 ]
ja r-xdata
xor edx edx
call sub_100261ef
test eax eax
je r-xdata
xor eax eax
mov eax [ eax ]
jmp r-xdata
add [ edi + 0x4 ] esi
mov eax edi
pop esi
retn 0x4
cmp ecx [ eax + 0xc ]
jae r-xdata
sub_1000189b
push ebp
mov ebp esp
push ecx
push edi
xor eax eax
lea edi [ ebp - 0x4 ]
stosb [ edi ]
push [ ebp - 0x4 ]
push [ ebp + 0x8 ]
push [ ebp + 0x8 ]
call sub_100019b1
add esp 0xc
pop edi
leave
retn 0x4
sub_100018bc
push esi
mov esi eax
jmp r-xdata
cmp esi [ esp + 0x8 ]
jne r-xdata
push 0xffffffff
push 0x0
push [ esp + 0x14 ]
mov ecx esi
call sub_10001f1a
add esi 0x1c
pop esi
retn
sub_100018db
push ebx
push esi
mov ebx eax
push edi
mov edi ecx
mov eax edi
sub eax [ esp + 0x10 ]
push 0x1c
cdq
pop ecx
idiv ecx
mov esi ebx
imul eax eax 0x1c
sub esi eax
cmp [ esp + 0x10 ] edi
je r-xdata
pop edi
mov eax esi
pop esi
pop ebx
retn
sub ebx edi
sub edi 0x1c
lea eax [ ebx + edi ]
push eax
mov ecx edi
call sub_10001a5f
pop ecx
cmp edi [ esp + 0x10 ]
jne r-xdata
sub_10001918
push ebp
mov ebp esp
or eax 0xffffffff
xor edx edx
div ecx
sub esp 0x10
cmp eax 0x1c
jae r-xdata
imul ecx ecx 0x1c
push ecx
call sub_10025dd6
pop ecx
leave
retn
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x4 ]
push eax
lea ecx [ ebp - 0x10 ]
call sub_10025e4c
push r--data
lea eax [ ebp - 0x10 ]
push eax
mov [ ebp - 0x10 ] r--data
call sub_10029a01
sub_1000195b
push 0x8
mov eax sub_1004cb64
call sub_10029e66
mov eax [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
mov [ ebp - 0x14 ] eax
call sub_10029f0b
retn
push [ ebp + 0x10 ]
mov ecx [ ebp + 0x8 ]
call sub_10001a37
dec [ ebp + 0xc ]
add [ ebp + 0x8 ] 0x1c
pop ecx
jmp r-xdata
cmp [ ebp + 0xc ] 0x0
jbe r-xdata
sub_1000198c
mov esi [ ebp - 0x14 ]
jmp r-xdata
push 0x0
cmp esi [ ebp + 0x8 ]
jne r-xdata
push 0x1
mov ecx esi
call sub_1000247e
add esi 0x1c
push 0x0
call sub_10029a01
call sub_10029f0b
retn
sub_100019b1
push 0x2c
mov eax sub_1004cee1
call sub_10029ed2
mov esi edx
xor ebx ebx
mov edi ecx
push ebx
lea ecx [ ebp - 0x30 ]
mov [ ebp - 0x34 ] esi
mov [ ebp - 0x38 ] esi
mov [ ebp - 0x18 ] 0x7
call sub_10002460
mov [ ebp - 0x4 ] ebx
mov [ ebp - 0x4 ] 0x1
push ebx
push 0x1
lea ecx [ ebp - 0x30 ]
call sub_1000247e
mov eax esi
call sub_10029f2e
retn
lea eax [ ebp - 0x30 ]
push eax
mov ecx esi
call sub_10001a37
pop ecx
push esi
mov ecx edi
call sub_10001a5f
add esi 0x1c
pop ecx
mov [ ebp - 0x34 ] esi
add edi 0x1c
jmp r-xdata
cmp edi [ ebp + 0x8 ]
je r-xdata
sub_10001a05
mov esi [ ebp - 0x38 ]
jmp r-xdata
push 0x0
cmp esi [ ebp - 0x34 ]
jne r-xdata
push 0x1
mov ecx esi
call sub_1000247e
add esi 0x1c
push 0x0
call sub_10029a01
push ebx
push 0x1
lea ecx [ ebp - 0x30 ]
call sub_1000247e
mov eax esi
call sub_10029f2e
retn
sub_10001a5f
push ebp
mov ebp esp
sub esp 0x14
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
cmp eax ecx
je r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10025c8d
leave
retn
push ebx
push esi
push edi
lea edx [ eax + 0x4 ]
mov esi edx
lea edi [ ebp - 0x14 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
lea ebx [ ecx + 0x4 ]
mov edi edx
mov esi ebx
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov edi ebx
lea esi [ ebp - 0x14 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi [ ecx + 0x14 ]
mov edx [ eax + 0x14 ]
mov [ eax + 0x14 ] esi
mov esi [ ecx + 0x18 ]
mov [ ecx + 0x14 ] edx
mov edx [ eax + 0x18 ]
pop edi
mov [ eax + 0x18 ] esi
pop esi
mov [ ecx + 0x18 ] edx
pop ebx
sub_10001ad5
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
sub esp 0xc
test ecx ecx
ja r-xdata
or eax 0xffffffff
xor edx edx
div ecx
cmp eax 0x4
jae r-xdata
xor ecx ecx
mov eax ecx
shl eax 0x2
push eax
call sub_10025dd6
pop ecx
leave
retn
and [ ebp + 0x8 ] 0x0
lea eax [ ebp + 0x8 ]
push eax
lea ecx [ ebp - 0xc ]
call sub_10025e4c
push r--data
lea eax [ ebp - 0xc ]
push eax
mov [ ebp - 0xc ] r--data
call sub_10029a01
int3
sub_10001b47
push 0x4
mov eax sub_1004c104
call sub_10029e33
mov esi ecx
mov [ ebp - 0x10 ] esi
mov edi [ ebp + 0x8 ]
push edi
call sub_10025ebc
and [ ebp - 0x4 ] 0x0
add edi 0xc
push edi
lea ecx [ esi + 0xc ]
mov [ esi ] r--data
call sub_10001c9f
mov eax esi
call sub_10029f0b
retn 0x4
sub_10001ba3
push 0x4
mov eax sub_1004c104
call sub_10029e33
mov esi ecx
mov [ ebp - 0x10 ] esi
call sub_10025e3b
and [ ebp - 0x4 ] 0x0
push [ ebp + 0x8 ]
lea ecx [ esi + 0xc ]
mov [ esi ] r--data
call sub_10001c9f
mov eax esi
call sub_10029f0b
retn 0x4
sub_10001c59
cmp [ esp + 0x4 ] 0x0
push esi
je r-xdata
xor al al
mov esi [ ecx + 0x18 ]
lea eax [ ecx + 0x4 ]
cmp esi 0x8
jb r-xdata
mov edx eax
mov edx [ eax ]
jmp r-xdata
cmp esi 0x8
jb r-xdata
cmp [ esp + 0x8 ] edx
jb r-xdata
mov ecx [ ecx + 0x14 ]
lea eax [ eax + ecx * 2 ]
cmp eax [ esp + 0x8 ]
jbe r-xdata
mov eax [ eax ]
mov al 0x1
jmp r-xdata
pop esi
retn 0x4
sub_10001c9f
push esi
mov esi ecx
push 0x0
mov [ esi + 0x18 ] 0xf
call sub_1000237a
push 0xffffffff
push 0x0
push [ esp + 0x10 ]
mov ecx esi
call sub_10002099
mov eax esi
pop esi
retn 0x4
sub_10001d05
push ebp
mov ebp esp
push ecx
push esi
push edi
mov edi [ ebp + 0x8 ]
mov esi ecx
cmp [ esi + 0x14 ] edi
jae r-xdata
mov eax [ esi + 0x14 ]
sub eax edi
cmp eax [ ebp + 0xc ]
jae r-xdata
call sub_100222af
cmp [ ebp + 0xc ] 0x0
jbe r-xdata
mov [ ebp + 0xc ] eax
pop edi
mov eax esi
pop esi
leave
retn 0x8
mov ecx [ esi + 0x18 ]
push ebx
lea edx [ esi + 0x4 ]
cmp ecx 0x8
jb r-xdata
mov [ ebp + 0x8 ] edx
mov ebx [ edx ]
mov [ ebp + 0x8 ] ebx
jmp r-xdata
mov ebx [ ebp + 0xc ]
sub eax ebx
push eax
mov [ ebp - 0x4 ] edx
mov edx [ ebp + 0x8 ]
lea eax [ edi + ebx ]
lea eax [ edx + eax * 2 ]
push eax
mov eax [ ebp - 0x4 ]
sub ecx edi
push ecx
lea eax [ eax + edi * 2 ]
push eax
call sub_10001ce4
mov eax [ esi + 0x14 ]
add esp 0x10
sub eax ebx
push eax
mov ecx esi
call sub_10002460
pop ebx
mov edx [ edx ]
cmp ecx 0x8
jb r-xdata
sub_10001d85
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
sub esp 0xc
test ecx ecx
ja r-xdata
or eax 0xffffffff
xor edx edx
div ecx
cmp eax 0x2
jae r-xdata
xor ecx ecx
lea eax [ ecx + ecx ]
push eax
call sub_10025dd6
pop ecx
leave
retn
and [ ebp + 0x8 ] 0x0
lea eax [ ebp + 0x8 ]
push eax
lea ecx [ ebp - 0xc ]
call sub_10025e4c
push r--data
lea eax [ ebp - 0xc ]
push eax
mov [ ebp - 0xc ] r--data
call sub_10029a01
int3
sub_10001dd2
push 0xc
mov eax sub_1004c099
call sub_10029e66
mov edi ecx
mov [ ebp - 0x18 ] edi
mov esi [ ebp + 0x8 ]
or esi 0x7
cmp esi 0x7ffffffe
jbe r-xdata
xor edx edx
push 0x3
mov eax esi
pop ebx
div ebx
mov ecx [ edi + 0x18 ]
mov [ ebp - 0x14 ] ecx
shr [ ebp - 0x14 ] 0x1
mov edx [ ebp - 0x14 ]
cmp eax edx
jae r-xdata
mov esi [ ebp + 0x8 ]
jmp r-xdata
and [ ebp - 0x4 ] 0x0
lea eax [ esi + 0x1 ]
push 0x0
push eax
call sub_10001d85
pop ecx
pop ecx
mov ebx eax
jmp r-xdata
mov eax 0x7ffffffe
sub eax edx
cmp ecx eax
ja r-xdata
cmp [ ebp + 0xc ] 0x0
jbe r-xdata
lea esi [ edx + ecx ]
push 0x0
push 0x1
mov ecx edi
call sub_1000247e
push [ ebp + 0xc ]
mov ecx edi
mov [ edi + 0x4 ] ebx
mov [ edi + 0x18 ] esi
call sub_10002460
call sub_10029f0b
retn 0x8
cmp [ edi + 0x18 ] 0x8
jb r-xdata
lea eax [ edi + 0x4 ]
mov eax [ edi + 0x4 ]
jmp r-xdata
push [ ebp + 0xc ]
push eax
lea eax [ esi + 0x1 ]
push eax
push ebx
call sub_10002444
add esp 0x10
sub_10001e32
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x10 ] esp
mov [ ebp + 0x8 ] eax
inc eax
push 0x0
push eax
mov [ ebp - 0x4 ] 0x2
call sub_10001d85
pop ecx
mov [ ebp - 0x14 ] eax
pop ecx
mov eax r-xdata
retn
sub_10001eb9
push esi
push edi
mov edi [ esp + 0xc ]
mov esi ecx
cmp edi 0x7ffffffe
jbe r-xdata
cmp [ esi + 0x18 ] edi
jae r-xdata
call sub_10022277
cmp [ esp + 0x10 ] 0x0
je r-xdata
push [ esi + 0x14 ]
mov ecx esi
push edi
call sub_10001dd2
jmp r-xdata
test edi edi
jne r-xdata
cmp edi 0x8
jae r-xdata
xor eax eax
cmp eax edi
sbb eax eax
pop edi
neg eax
pop esi
retn 0x8
push edi
mov ecx esi
call sub_10002460
mov eax [ esi + 0x14 ]
cmp edi eax
jae r-xdata
push eax
push 0x1
mov ecx esi
call sub_1000247e
jmp r-xdata
mov eax edi
sub_10001f1a
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
mov ebx ecx
cmp [ edi + 0x14 ] eax
jae r-xdata
mov esi [ edi + 0x14 ]
mov eax [ ebp + 0xc ]
sub esi eax
cmp [ ebp + 0x10 ] esi
jae r-xdata
call sub_100222af
mov ecx ebx
cmp ebx edi
jne r-xdata
mov esi [ ebp + 0x10 ]
push 0x0
push esi
call sub_10001eb9
test al al
je r-xdata
push 0xffffffff
add esi eax
push esi
call sub_10001d05
push [ ebp + 0xc ]
mov ecx ebx
push 0x0
call sub_10001d05
jmp r-xdata
pop edi
pop esi
mov eax ebx
pop ebx
pop ebp
retn 0xc
cmp [ edi + 0x18 ] 0x8
jb r-xdata
add edi 0x4
mov edi [ edi + 0x4 ]
jmp r-xdata
lea eax [ ebx + 0x4 ]
mov eax [ ebx + 0x4 ]
jmp r-xdata
mov ecx [ ebx + 0x18 ]
cmp ecx 0x8
jb r-xdata
mov edx [ ebp + 0xc ]
push esi
lea edx [ edi + edx * 2 ]
push edx
push ecx
push eax
call sub_10002444
add esp 0x10
push esi
mov ecx ebx
call sub_10002460
sub_10001fad
push esi
mov esi ecx
push 0x0
mov [ esi + 0x18 ] 0x7
call sub_10002460
push 0xffffffff
push 0x0
push [ esp + 0x10 ]
mov ecx esi
call sub_10001f1a
mov eax esi
pop esi
retn 0x4
sub_10001fd3
cmp [ esp + 0x4 ] 0x0
push esi
je r-xdata
xor al al
mov esi [ ecx + 0x18 ]
lea eax [ ecx + 0x4 ]
cmp esi 0x10
jb r-xdata
mov edx eax
mov edx [ eax ]
jmp r-xdata
cmp esi 0x10
jb r-xdata
cmp [ esp + 0x8 ] edx
jb r-xdata
mov ecx [ ecx + 0x14 ]
add ecx eax
cmp ecx [ esp + 0x8 ]
jbe r-xdata
mov eax [ eax ]
mov al 0x1
jmp r-xdata
pop esi
retn 0x4
sub_1000202a
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
mov esi ecx
cmp [ esi + 0x14 ] edi
jae r-xdata
mov eax [ esi + 0x14 ]
sub eax edi
cmp eax [ ebp + 0xc ]
jae r-xdata
call sub_100222af
cmp [ ebp + 0xc ] 0x0
jbe r-xdata
mov [ ebp + 0xc ] eax
pop edi
mov eax esi
pop esi
pop ebp
retn 0x8
mov ecx [ esi + 0x18 ]
push ebx
lea edx [ esi + 0x4 ]
cmp ecx 0x10
jb r-xdata
mov ebx edx
mov ebx [ edx ]
jmp r-xdata
sub eax [ ebp + 0xc ]
add ebx edi
add ebx [ ebp + 0xc ]
push eax
push ebx
sub ecx edi
push ecx
add edx edi
push edx
call sub_1000200e
mov eax [ esi + 0x14 ]
sub eax [ ebp + 0xc ]
add esp 0x10
push eax
mov ecx esi
call sub_1000237a
pop ebx
mov edx [ edx ]
cmp ecx 0x10
jb r-xdata
sub_10002099
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
mov ebx ecx
cmp [ edi + 0x14 ] eax
jae r-xdata
mov esi [ edi + 0x14 ]
mov eax [ ebp + 0xc ]
sub esi eax
cmp [ ebp + 0x10 ] esi
jae r-xdata
call sub_100222af
mov ecx ebx
cmp ebx edi
jne r-xdata
mov esi [ ebp + 0x10 ]
push 0x0
push esi
call sub_10002300
test al al
je r-xdata
push 0xffffffff
add esi eax
push esi
call sub_1000202a
push [ ebp + 0xc ]
mov ecx ebx
push 0x0
call sub_1000202a
jmp r-xdata
pop edi
pop esi
mov eax ebx
pop ebx
pop ebp
retn 0xc
cmp [ edi + 0x18 ] 0x10
jb r-xdata
add edi 0x4
mov edi [ edi + 0x4 ]
jmp r-xdata
lea eax [ ebx + 0x4 ]
mov eax [ ebx + 0x4 ]
jmp r-xdata
mov ecx [ ebx + 0x18 ]
cmp ecx 0x10
jb r-xdata
mov edx [ ebp + 0xc ]
push esi
add edi edx
push edi
push ecx
push eax
call sub_1000235e
add esp 0x10
push esi
mov ecx ebx
call sub_1000237a
sub_10002189
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
sub esp 0xc
test ecx ecx
ja r-xdata
or eax 0xffffffff
xor edx edx
div ecx
cmp eax 0x1
jae r-xdata
xor ecx ecx
push ecx
call sub_10025dd6
pop ecx
leave
retn
and [ ebp + 0x8 ] 0x0
lea eax [ ebp + 0x8 ]
push eax
lea ecx [ ebp - 0xc ]
call sub_10025e4c
push r--data
lea eax [ ebp - 0xc ]
push eax
mov [ ebp - 0xc ] r--data
call sub_10029a01
int3
sub_100021d3
push 0xc
mov eax sub_1004c07e
call sub_10029e66
mov edi ecx
mov [ ebp - 0x18 ] edi
mov esi [ ebp + 0x8 ]
or esi 0xf
cmp esi 0xfffffffe
jbe r-xdata
xor edx edx
push 0x3
mov eax esi
pop ebx
div ebx
mov ecx [ edi + 0x18 ]
mov [ ebp - 0x14 ] ecx
shr [ ebp - 0x14 ] 0x1
mov edx [ ebp - 0x14 ]
cmp eax edx
jae r-xdata
mov esi [ ebp + 0x8 ]
jmp r-xdata
and [ ebp - 0x4 ] 0x0
lea eax [ esi + 0x1 ]
push 0x0
push eax
call sub_10002189
pop ecx
pop ecx
mov ebx eax
jmp r-xdata
push 0xfffffffe
pop eax
sub eax edx
cmp ecx eax
ja r-xdata
cmp [ ebp + 0xc ] 0x0
jbe r-xdata
lea esi [ edx + ecx ]
push 0x0
push 0x1
mov ecx edi
call sub_100022b5
push [ ebp + 0xc ]
mov ecx edi
mov [ edi + 0x4 ] ebx
mov [ edi + 0x18 ] esi
call sub_1000237a
call sub_10029f0b
retn 0x8
cmp [ edi + 0x18 ] 0x10
jb r-xdata
lea eax [ edi + 0x4 ]
mov eax [ edi + 0x4 ]
jmp r-xdata
push [ ebp + 0xc ]
push eax
lea eax [ esi + 0x1 ]
push eax
push ebx
call sub_1000235e
add esp 0x10
sub_1000222e
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x10 ] esp
mov [ ebp + 0x8 ] eax
inc eax
push 0x0
push eax
mov [ ebp - 0x4 ] 0x2
call sub_10002189
pop ecx
mov [ ebp - 0x14 ] eax
pop ecx
mov eax r-xdata
retn
sub_100022b5
cmp [ esp + 0x4 ] 0x0
push esi
mov esi ecx
je r-xdata
push [ esp + 0xc ]
mov ecx esi
mov [ esi + 0x18 ] 0xf
call sub_1000237a
pop esi
retn 0x8
cmp [ esi + 0x18 ] 0x10
jb r-xdata
cmp [ esp + 0xc ] 0x0
lea eax [ esi + 0x4 ]
push edi
mov edi [ eax ]
jbe r-xdata
push edi
call sub_10025c9c
pop ecx
pop edi
push [ esp + 0x10 ]
push edi
push 0x10
push eax
call sub_1000235e
add esp 0x10
sub_10002300
push esi
push edi
mov edi [ esp + 0xc ]
mov esi ecx
cmp edi 0xfffffffe
jbe r-xdata
cmp [ esi + 0x18 ] edi
jae r-xdata
call sub_10022277
cmp [ esp + 0x10 ] 0x0
je r-xdata
push [ esi + 0x14 ]
mov ecx esi
push edi
call sub_100021d3
jmp r-xdata
test edi edi
jne r-xdata
cmp edi 0x10
jae r-xdata
xor eax eax
cmp eax edi
sbb eax eax
pop edi
neg eax
pop esi
retn 0x8
push edi
mov ecx esi
call sub_1000237a
mov eax [ esi + 0x14 ]
cmp edi eax
jae r-xdata
push eax
push 0x1
mov ecx esi
call sub_100022b5
jmp r-xdata
mov eax edi
sub_10002396
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
push edi
mov esi ecx
call sub_10001fd3
test al al
je r-xdata
push 0x0
push [ ebp + 0xc ]
mov ecx esi
call sub_10002300
test al al
je r-xdata
cmp [ esi + 0x18 ] 0x10
jb r-xdata
mov eax esi
mov ecx [ esi + 0x18 ]
cmp ecx 0x10
jb r-xdata
lea eax [ esi + 0x4 ]
mov eax [ esi + 0x4 ]
jmp r-xdata
lea eax [ esi + 0x4 ]
mov eax [ esi + 0x4 ]
jmp r-xdata
pop edi
pop esi
pop ebp
retn 0x8
push [ ebp + 0xc ]
sub edi eax
push edi
push esi
mov ecx esi
call sub_10002099
jmp r-xdata
push [ ebp + 0xc ]
push edi
push ecx
push eax
call sub_1000235e
add esp 0x10
push [ ebp + 0xc ]
mov ecx esi
call sub_1000237a
sub_1000247e
cmp [ esp + 0x4 ] 0x0
push esi
mov esi ecx
je r-xdata
push [ esp + 0xc ]
mov ecx esi
mov [ esi + 0x18 ] 0x7
call sub_10002460
pop esi
retn 0x8
cmp [ esi + 0x18 ] 0x8
jb r-xdata
cmp [ esp + 0xc ] 0x0
lea eax [ esi + 0x4 ]
push edi
mov edi [ eax ]
jbe r-xdata
push edi
call sub_10025c9c
pop ecx
pop edi
push [ esp + 0x10 ]
push edi
push 0x8
push eax
call sub_10002444
add esp 0x10
sub_100024d3
push 0x0
mov eax sub_1004cb20
call sub_10029e33
mov esi [ ebp + 0x8 ]
push esi
call sub_10002d5b
and [ ebp - 0x4 ] 0x0
lea ecx [ esi + 0x18 ]
call sub_10001ac0
lea ecx [ esi + 0x38 ]
call sub_10001ac0
lea ecx [ esi + 0x54 ]
call sub_10007bb4
lea ecx [ esi + 0x70 ]
call sub_10007bb4
lea eax [ esi + 0x8c ]
push eax
mov [ ebp - 0x4 ] 0x4
call sub_10002d5b
lea ecx [ esi + 0xa4 ]
call sub_10007bb4
lea ecx [ esi + 0xc0 ]
call sub_10001ac0
mov eax esi
call sub_10029f0b
retn 0x4
sub_1000253c
push ebx
push ebp
push esi
xor ebp ebp
xor ebx ebx
push ebp
inc ebx
push ebx
lea ecx [ edi + 0xc0 ]
call sub_1000247e
push ebp
push ebx
lea ecx [ edi + 0xa4 ]
call sub_100022b5
lea esi [ edi + 0x8c ]
call sub_10001477
push [ esi ]
call sub_10025c9c
pop ecx
push ebp
push ebx
lea ecx [ edi + 0x70 ]
call sub_100022b5
push ebp
push ebx
lea ecx [ edi + 0x54 ]
call sub_100022b5
push ebp
push ebx
lea ecx [ edi + 0x38 ]
call sub_1000247e
push ebp
push ebx
lea ecx [ edi + 0x18 ]
call sub_1000247e
mov esi edi
call sub_10001477
push [ edi ]
call sub_10025c9c
pop ecx
pop esi
pop ebp
pop ebx
retn
sub_100025ac
push 0xe0
mov eax sub_1004ed4b
call sub_10029e9c
lea eax [ ebp - 0xec ]
push eax
mov edi ecx
call sub_100024d3
and [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0xec ]
call sub_100027a1
lea eax [ ebp - 0xec ]
call sub_100029d1
lea edi [ ebp - 0xec ]
call sub_1000253c
call sub_10029f1f
retn
sub_10002610
push ebp
mov ebp esp
push ecx
push ecx
and [ ebp - 0x4 ] 0x0
push esi
mov esi eax
lea eax [ ebp - 0x4 ]
push eax
push [ ebp + 0x8 ]
call sub_1000265b
pop ecx
pop ecx
push 0x0
push [ ebp - 0x4 ]
mov ecx esi
call sub_10002d37
cmp [ esi + 0x18 ] 0x8
jb r-xdata
add esi 0x4
mov esi [ esi + 0x4 ]
jmp r-xdata
push [ ebp - 0x4 ]
push esi
push [ ebp + 0x8 ]
call sub_100035e3
push [ ebp + 0x8 ]
call sub_10002c54
pop esi
leave
retn
sub_10002674
push ebp
mov ebp esp
sub esp 0x18
and [ ebp - 0x8 ] 0x0
push ebx
push esi
push edi
mov edi eax
lea eax [ ebp - 0x8 ]
push eax
push [ ebp + 0x8 ]
call sub_1000265b
mov esi [ ebp - 0x8 ]
sub esp 0x14
mov ecx esp
mov [ ebp - 0xc ] esp
call sub_10001ac0
push esi
mov ecx edi
call sub_100036f5
mov ebx [ edi + 0xc ]
lea esi [ ebp - 0x10 ]
call sub_10001807
call sub_100261ef
cmp eax [ ebp - 0x18 ]
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
lea esi [ ebp - 0x10 ]
call sub_1000a447
push [ ebp + 0x8 ]
call sub_10002610
pop ecx
call sub_1000351f
jmp r-xdata
mov eax [ ebp - 0xc ]
cmp eax [ ebp - 0x14 ]
je r-xdata
mov ebx [ edi + 0x10 ]
lea esi [ ebp - 0x18 ]
call sub_10001807
mov eax [ ebp - 0x10 ]
test eax eax
je r-xdata
sub_100026f3
push 0x58
mov eax sub_1004e6a3
call sub_10029e9c
mov eax [ ebp + 0x8 ]
mov edi ecx
xor esi esi
push esi
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x30 ] eax
mov [ ebp - 0x14 ] 0x7
call sub_10002460
push edi
lea eax [ ebp - 0x2c ]
mov [ ebp - 0x4 ] esi
call sub_10002610
pop ecx
lea eax [ ebp - 0x5c ]
push eax
lea ecx [ ebp - 0x2c ]
call sub_10007b5c
mov edi [ eax ]
mov ebx [ eax + 0x4 ]
lea eax [ ebp - 0x64 ]
push eax
lea ecx [ ebp - 0x2c ]
call sub_10007aec
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0x38 ] ecx
push esi
lea ecx [ ebp - 0x54 ]
mov [ ebp - 0x34 ] eax
mov [ ebp - 0x3c ] 0xf
call sub_1000237a
push ebx
push edi
push [ ebp - 0x34 ]
lea eax [ ebp - 0x54 ]
push [ ebp - 0x38 ]
push [ ebp - 0x30 ]
push eax
call sub_10006661
push 0xffffffff
push esi
lea eax [ ebp - 0x54 ]
mov [ ebp - 0x4 ] 0x1
mov ecx [ ebp - 0x30 ]
push eax
call sub_10002099
push esi
push 0x1
lea ecx [ ebp - 0x54 ]
call sub_100022b5
push esi
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_1000247e
call sub_10029f1f
retn
sub_100027a1
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_1004ed12
mov eax [ fs : 0x0 ]
push eax
sub esp 0xc8
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0xc0 ] eax
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0xd8 ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov edi r--data
push edi
lea ecx [ esp + 0x30 ]
call sub_10001254
xor ebx ebx
push r--data
lea ecx [ esp + 0x4c ]
mov [ esp + 0xe4 ] ebx
call sub_10001254
lea eax [ esp + 0x2c ]
push eax
push 0xf003f
lea eax [ esp + 0x50 ]
push eax
push 0x80000001
lea eax [ esp + 0xb8 ]
push eax
mov [ esp + 0xf4 ] 0x1
call sub_10014c0e
push ebx
push 0x1
lea ecx [ esp + 0x50 ]
call sub_1000247e
push ebx
push 0x1
lea ecx [ esp + 0x34 ]
mov [ esp + 0xe8 ] 0x4
call sub_1000247e
push edi
lea ecx [ esp + 0x14 ]
call sub_10001254
lea eax [ esp + 0x10 ]
push eax
lea eax [ esp + 0x84 ]
push eax
lea eax [ esp + 0xb0 ]
push eax
mov [ esp + 0xec ] 0x5
call sub_10014d3d
push ebx
push 0x1
lea ecx [ esp + 0x18 ]
mov [ esp + 0xe8 ] 0x7
call sub_1000247e
lea eax [ esp + 0x64 ]
push eax
lea eax [ esp + 0x84 ]
push eax
call sub_100150fb
mov ecx eax
mov [ esp + 0xe0 ] 0x8
call sub_10002903
push ebx
push 0x1
lea ecx [ esp + 0x6c ]
call sub_1000247e
lea esi [ esp + 0x80 ]
mov [ esp + 0xe0 ] 0x4
call sub_100150b3
lea ecx [ esp + 0xa8 ]
call sub_10014d14
mov ecx [ esp + 0xd8 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ esp + 0xc0 ]
xor ecx esp
call sub_10025c8d
mov esp ebp
pop ebp
retn
sub_10002903
push 0x8c
mov eax sub_1004ecbb
call sub_10029e33
lea eax [ ebp - 0x98 ]
push eax
call sub_10002f20
and [ ebp - 0x4 ] 0x0
lea eax [ esi + 0x54 ]
push eax
lea ecx [ ebp - 0x98 ]
call sub_100026f3
pop ecx
lea eax [ esi + 0x70 ]
push eax
lea ecx [ ebp - 0x98 ]
call sub_100026f3
pop ecx
lea eax [ esi + 0x34 ]
push eax
lea eax [ ebp - 0x98 ]
push eax
call sub_1000265b
lea ecx [ ebp - 0x98 ]
lea eax [ esi + 0x18 ]
push ecx
call sub_10002610
lea eax [ ebp - 0x98 ]
add esp 0xc
push eax
mov eax esi
call sub_10002674
pop ecx
lea ecx [ ebp - 0x98 ]
lea eax [ esi + 0x8c ]
push ecx
call sub_10002674
pop ecx
lea eax [ esi + 0xa4 ]
push eax
lea ecx [ ebp - 0x98 ]
call sub_100026f3
pop ecx
lea ecx [ ebp - 0x98 ]
lea eax [ esi + 0x38 ]
push ecx
call sub_10002610
pop ecx
lea ecx [ ebp - 0x98 ]
lea eax [ esi + 0xc0 ]
push ecx
call sub_10002610
or [ ebp - 0x4 ] 0xffffffff
pop ecx
lea eax [ ebp - 0x98 ]
call sub_100025f4
call sub_10029f0b
retn
sub_100029d1
push ebx
push ebp
push esi
mov esi eax
mov eax [ esi + 0x34 ]
test eax eax
je r-xdata
lea ebx [ esi + 0x70 ]
mov ebp r--data
push ebp
mov ecx ebx
call sub_10006933
test eax eax
je r-xdata
mov [ edi + 0x34 ] eax
lea ebx [ esi + 0x54 ]
push ebp
mov ecx ebx
call sub_10006933
test eax eax
je r-xdata
push 0xffffffff
push 0x0
push ebx
lea ecx [ edi + 0x70 ]
call sub_10002099
mov eax [ esi + 0x10 ]
sub eax [ esi + 0xc ]
push 0x1c
cdq
pop ecx
idiv ecx
test eax eax
jbe r-xdata
push 0xffffffff
push 0x0
push ebx
lea ecx [ edi + 0x54 ]
call sub_10002099
lea ebx [ esi + 0x8c ]
mov eax [ ebx + 0x10 ]
sub eax [ ebx + 0xc ]
push 0x1c
cdq
pop ecx
idiv ecx
test eax eax
jbe r-xdata
mov eax esi
mov ecx edi
call sub_10002d98
lea ebx [ esi + 0xa4 ]
push ebp
mov ecx ebx
call sub_10006933
test eax eax
je r-xdata
lea ecx [ edi + 0x8c ]
mov eax ebx
call sub_10002d98
push 0xffffffff
push 0x0
add esi 0xc0
push esi
lea ecx [ edi + 0xc0 ]
call sub_10001f1a
pop esi
pop ebp
pop ebx
retn
push 0xffffffff
push 0x0
push ebx
lea ecx [ edi + 0xa4 ]
call sub_10002099
sub_10002a95
push 0x88
mov eax sub_1004eeee
call sub_10029ed2
mov edi ecx
mov esi r--data
xor ebx ebx
push esi
lea ecx [ ebp - 0x5c ]
mov [ ebp - 0x4 ] ebx
call sub_10001254
push r--data
lea ecx [ ebp - 0x94 ]
mov [ ebp - 0x4 ] 0x1
call sub_10001254
lea eax [ ebp - 0x5c ]
push eax
push 0xf003f
lea eax [ ebp - 0x94 ]
push eax
push 0x80000001
lea eax [ ebp - 0x3c ]
push eax
mov [ ebp - 0x4 ] 0x2
call sub_10014c0e
push ebx
push 0x1
lea ecx [ ebp - 0x94 ]
call sub_1000247e
push ebx
push 0x1
lea ecx [ ebp - 0x5c ]
mov [ ebp - 0x4 ] 0x5
call sub_1000247e
push esi
lea ecx [ ebp - 0x78 ]
call sub_10001254
lea eax [ ebp - 0x78 ]
push eax
lea eax [ ebp - 0x3c ]
push eax
mov [ ebp - 0x4 ] 0x6
call sub_10014fe2
push ebx
cmp al bl
push 0x1
lea ecx [ ebp - 0x78 ]
sete [ ebp - 0x3d ]
mov [ ebp - 0x4 ] 0x5
call sub_1000247e
cmp [ ebp - 0x3d ] bl
jne r-xdata
lea ecx [ ebp - 0x3c ]
call sub_10014d14
call sub_10029f2e
retn
mov ecx edi
call sub_100025ac
sub_10002b5b
push 0x24
mov eax sub_1004e0dd
call sub_10029e66
mov esi [ ebp + 0x8 ]
xor ebx ebx
push ebx
push esi
lea eax [ ebp - 0x20 ]
push eax
mov [ ebp - 0x14 ] ebx
call sub_10007749
mov [ ebp - 0x4 ] ebx
cmp [ ebp - 0x1c ] bl
je r-xdata
mov eax [ esi ]
mov edx [ eax + 0x4 ]
add edx esi
cmp [ ebp - 0x14 ] ebx
je r-xdata
lea eax [ ebp - 0x18 ]
push eax
mov eax [ esi ]
mov ecx [ eax + 0x4 ]
add ecx esi
call sub_1000781e
push eax
mov [ ebp - 0x4 ] 0x1
call sub_10005f87
pop ecx
lea ecx [ ebp - 0x18 ]
mov edi eax
call sub_10007806
push [ ebp + 0xc ]
mov [ ebp - 0x4 ] 0x2
mov eax [ esi ]
mov eax [ eax + 0x4 ]
add eax esi
mov ecx [ eax + 0x28 ]
cmp ecx ebx
lea ebx [ ebp - 0x14 ]
push ebx
push eax
sete dl
mov [ ebp - 0x24 ] 0x1
push [ ebp - 0x24 ]
xor eax eax
push eax
mov [ ebp - 0x2c ] dl
push [ ebp - 0x2c ]
mov edx [ edi ]
push ecx
lea eax [ ebp - 0x30 ]
push eax
mov ecx edi
call [ edx + 0x24 ]
xor ebx ebx
mov [ ebp - 0x4 ] ebx
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp - 0x20 ]
mov ecx [ eax ]
mov ecx [ ecx + 0x4 ]
mov eax [ ecx + eax + 0x28 ]
cmp eax ebx
je r-xdata
push ebx
push [ ebp - 0x14 ]
call sub_10007acb
mov eax esi
call sub_10029f0b
retn 0x8
lea ecx [ eax + 0x4 ]
call sub_100223d4
sub_10002be9
mov ecx [ ebp + 0x8 ]
mov eax [ ecx ]
mov eax [ eax + 0x4 ]
add eax ecx
mov ecx [ eax + 0x8 ]
or ecx 0x4
cmp [ eax + 0x28 ] 0x0
jne r-xdata
push 0x1
push eax
call sub_100079b1
and [ ebp - 0x4 ] 0x0
mov eax r-xdata
retn
or ecx 0x4
sub_10002c54
push 0x18
mov eax sub_1004e0b2
call sub_10029e66
mov esi [ ebp + 0x8 ]
push 0xa
pop edi
push 0x1
push esi
lea eax [ ebp - 0x24 ]
xor ebx ebx
push eax
mov [ ebp - 0x1c ] 0x2
mov [ ebp - 0x18 ] ebx
mov [ esi + 0x4 ] ebx
call sub_10007749
mov [ ebp - 0x4 ] ebx
cmp [ ebp - 0x20 ] bl
je r-xdata
mov eax [ esi ]
mov edx [ eax + 0x4 ]
add edx esi
cmp [ ebp - 0x18 ] ebx
je r-xdata
mov [ ebp - 0x4 ] 0x1
or [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp - 0x24 ]
mov ecx [ eax ]
mov ecx [ ecx + 0x4 ]
mov eax [ ecx + eax + 0x28 ]
cmp eax ebx
je r-xdata
push ebx
push [ ebp - 0x18 ]
call sub_10007acb
mov eax [ esi ]
mov eax [ eax + 0x4 ]
mov ecx [ eax + esi + 0x28 ]
call sub_1003ecd7
movzx eax ax
movzx eax ax
mov ecx 0xffff
cmp cx ax
jne r-xdata
dec [ ebp - 0x1c ]
js r-xdata
mov eax esi
call sub_10029f0b
retn 0x4
lea ecx [ eax + 0x4 ]
call sub_100223d4
inc [ esi + 0x4 ]
cmp ax di
jne r-xdata
or [ ebp - 0x18 ] 0x1
jmp r-xdata
mov [ ebp - 0x4 ] ebx
jmp r-xdata
cmp [ ebp - 0x1c ] 0x7fffffff
je r-xdata
sub_10002ccc
mov ecx [ ebp + 0x8 ]
mov eax [ ecx ]
mov eax [ eax + 0x4 ]
add eax ecx
mov ecx [ eax + 0x8 ]
xor ebx ebx
or ecx 0x4
cmp [ eax + 0x28 ] ebx
jne r-xdata
push 0x1
push eax
call sub_100079b1
mov [ ebp - 0x4 ] ebx
mov eax r-xdata
retn
or ecx 0x4
sub_10002d37
mov edx [ ecx + 0x14 ]
mov eax [ esp + 0x4 ]
cmp eax edx
ja r-xdata
push [ esp + 0x8 ]
sub eax edx
push eax
call sub_100036a7
push 0xffffffff
push eax
call sub_10001d05
jmp r-xdata
retn 0x8
sub_10002d5b
push 0x0
mov eax sub_1004cad1
call sub_10029e33
mov esi [ esp + 0x24 ]
push 0x0
push 0x1
call sub_10001ad5
pop ecx
pop ecx
test eax eax
je r-xdata
xor eax eax
mov [ eax ] esi
jmp r-xdata
mov [ esi ] eax
and [ esi + 0xc ] 0x0
and [ esi + 0x10 ] 0x0
and [ esi + 0x14 ] 0x0
mov eax esi
call sub_10029f0b
retn 0x4
sub_10002d98
push ebp
mov ebp esp
sub esp 0x10
push esi
push edi
mov esi eax
mov edi ecx
cmp edi esi
je r-xdata
mov eax edi
pop edi
pop esi
leave
retn
mov ecx [ esi + 0xc ]
mov eax [ esi + 0x10 ]
sub eax ecx
push ebx
push 0x1c
cdq
pop ecx
idiv ecx
mov [ ebp - 0x4 ] eax
test eax eax
jne r-xdata
mov eax [ edi + 0x10 ]
mov ebx [ edi + 0xc ]
sub eax ebx
push 0x1c
cdq
pop ecx
idiv ecx
mov ecx eax
cmp [ ebp - 0x4 ] ecx
ja r-xdata
mov ebx [ edi + 0x10 ]
lea esi [ ebp - 0x8 ]
call sub_10001807
mov ebx [ edi + 0xc ]
lea esi [ ebp - 0x10 ]
call sub_10001807
push [ ebp - 0x4 ]
lea eax [ ebp - 0x10 ]
push [ ebp - 0x8 ]
push [ ebp - 0xc ]
push [ ebp - 0x10 ]
push eax
push edi
call sub_10004981
jmp r-xdata
test ebx ebx
jne r-xdata
push [ esi + 0x10 ]
mov ecx [ esi + 0xc ]
mov eax ebx
call sub_10006024
pop ecx
push [ edi + 0x10 ]
call sub_10001540
mov eax [ esi + 0x10 ]
sub eax [ esi + 0xc ]
push 0x1c
cdq
pop ecx
idiv ecx
imul eax eax 0x1c
add eax [ edi + 0xc ]
jmp r-xdata
pop ebx
mov eax [ edi + 0x14 ]
sub eax ebx
push 0x1c
cdq
pop ebx
idiv ebx
xor eax eax
jmp r-xdata
mov [ edi + 0x10 ] eax
test eax eax
je r-xdata
mov edx [ esi + 0xc ]
imul ecx ecx 0x1c
add ecx edx
mov ebx ecx
push ebx
mov ecx edx
call sub_10006024
pop ecx
push [ edi + 0x10 ]
mov ecx ebx
jmp r-xdata
cmp [ ebp - 0x4 ] eax
mov eax [ edi + 0xc ]
ja r-xdata
mov eax [ esi + 0x10 ]
sub eax [ esi + 0xc ]
push 0x1c
cdq
pop ecx
idiv ecx
xor ecx ecx
mov [ edi + 0xc ] ecx
mov [ edi + 0x10 ] ecx
mov [ edi + 0x14 ] ecx
cmp eax ecx
je r-xdata
push [ edi + 0x10 ]
call sub_10001540
push [ edi + 0xc ]
call sub_10025c9c
pop ecx
push [ esi + 0x10 ]
call sub_10006062
call sub_10001440
test al al
je r-xdata
push [ edi + 0xc ]
mov ecx [ esi + 0xc ]
sub_10002eb8
push 0x8
mov eax sub_1004d549
call sub_10029e33
mov esi [ ebp + 0x8 ]
and [ ebp - 0x10 ] 0x0
mov [ esi ] r--data
mov [ esi + 0x8 ] r--data
mov [ esi + 0x54 ] r--data
and [ ebp - 0x4 ] 0x0
lea edi [ esi + 0xc ]
xor ebx ebx
push edi
inc ebx
push esi
mov [ ebp - 0x10 ] ebx
call sub_10003793
mov [ ebp - 0x4 ] ebx
mov eax [ esi ]
mov eax [ eax + 0x4 ]
push edi
mov [ esi + eax ] r--data
call sub_10004865
and [ edi + 0x3c ] 0x0
and [ edi + 0x40 ] 0x0
mov [ edi ] r--data
mov eax esi
call sub_10029f0b
retn 0x4
sub_10002f20
push 0x8
mov eax sub_1004d549
call sub_10029e33
mov ebx ecx
mov edi [ ebp + 0x8 ]
and [ ebp - 0x10 ] 0x0
mov [ edi ] r--data
mov [ edi + 0x8 ] r--data
mov [ edi + 0x54 ] r--data
and [ ebp - 0x4 ] 0x0
lea eax [ edi + 0xc ]
xor esi esi
push eax
inc esi
push edi
mov [ ebp - 0x10 ] esi
call sub_10003793
mov [ ebp - 0x4 ] esi
mov eax [ edi ]
mov eax [ eax + 0x4 ]
lea esi [ edi + 0xc ]
push esi
mov [ edi + eax ] r--data
mov [ ebp - 0x14 ] esi
call sub_10004865
mov [ ebp - 0x4 ] 0x2
mov [ esi ] r--data
cmp [ ebx + 0x18 ] 0x8
mov eax [ ebx + 0x14 ]
jb r-xdata
add ebx 0x4
mov ebx [ ebx + 0x4 ]
jmp r-xdata
mov eax edi
call sub_10029f0b
retn 0x4
push ebx
call sub_100049d9
and [ esi + 0x3c ] 0x0
and [ esi + 0x40 ] 0x0
test eax eax
je r-xdata
sub_10002faf
push 0x4
mov eax sub_1004bfee
call sub_10029e33
mov [ ebp - 0x10 ] ecx
mov eax [ ecx - 0x54 ]
mov eax [ eax + 0x4 ]
mov [ eax + ecx - 0x54 ] r--data
and [ ebp - 0x4 ] 0x0
lea esi [ ecx - 0x48 ]
mov ecx esi
call sub_10003028
mov ecx esi
call sub_10002ffd
call sub_10029f0b
retn
sub_10003028
push esi
mov esi ecx
test [ esi + 0x40 ] 0x1
mov [ esi ] r--data
je r-xdata
mov ecx [ esi + 0x10 ]
xor eax eax
mov [ ecx ] eax
mov ecx [ esi + 0x20 ]
mov [ ecx ] eax
mov ecx [ esi + 0x30 ]
mov [ ecx ] eax
mov ecx [ esi + 0x14 ]
mov [ ecx ] eax
mov ecx [ esi + 0x24 ]
mov [ ecx ] eax
mov ecx [ esi + 0x34 ]
mov [ ecx ] eax
and [ esi + 0x40 ] 0xfffffffe
mov [ esi + 0x3c ] eax
mov ecx esi
pop esi
jmp sub_10006f48
mov eax [ esi + 0x10 ]
push [ eax ]
call sub_10025c9c
pop ecx
sub_10003071
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
mov esi ecx
test [ esi + 0x40 ] 0x8
push edi
je r-xdata
mov bx [ ebp + 0x8 ]
mov eax 0xffff
cmp ax bx
jne r-xdata
mov ecx [ esi + 0x24 ]
mov eax [ ecx ]
test eax eax
je r-xdata
mov edx [ esi + 0x24 ]
mov edi [ edx ]
test edi edi
je r-xdata
xor eax eax
jmp r-xdata
mov edx [ esi + 0x3c ]
cmp eax edx
jae r-xdata
test [ esi + 0x40 ] 0x2
je r-xdata
mov ecx [ esi + 0x34 ]
mov eax [ ecx ]
mov edx edi
lea eax [ edx + eax * 2 ]
cmp edx eax
jae r-xdata
pop edi
pop esi
pop ebx
leave
retn 0x4
mov edi [ esi + 0x34 ]
mov edi [ edi ]
lea eax [ eax + edi * 2 ]
mov [ ecx ] edx
mov ecx [ esi + 0x34 ]
sub eax edx
sar eax 0x1
mov [ ecx ] eax
test edi edi
jne r-xdata
mov eax 0xffff
jmp r-xdata
dec [ ecx ]
mov esi [ esi + 0x24 ]
mov ecx [ esi ]
lea eax [ ecx + 0x2 ]
mov [ esi ] eax
mov [ ecx ] bx
mov ax bx
jmp r-xdata
mov eax [ esi + 0x34 ]
mov ebx [ eax ]
mov eax [ esi + 0x10 ]
add ebx ebx
sub ebx [ eax ]
add ebx edi
sar ebx 0x1
xor ebx ebx
jmp r-xdata
test ecx ecx
jbe r-xdata
push 0x20
pop ecx
jmp r-xdata
mov ecx ebx
shr ecx 0x1
cmp ecx 0x20
jae r-xdata
je r-xdata
mov eax 0x7fffffff
sub eax ecx
cmp eax ebx
jae r-xdata
lea eax [ ecx + ebx ]
push 0x0
push eax
mov [ ebp - 0x4 ] eax
call sub_10001d85
mov edi eax
mov eax [ esi + 0x10 ]
mov edx [ eax ]
pop ecx
pop ecx
mov [ ebp - 0x8 ] edx
test ebx ebx
jbe r-xdata
test ecx ecx
shr ecx 0x1
jne r-xdata
jne r-xdata
push ebx
push edx
push [ ebp - 0x4 ]
push edi
call sub_10002444
mov edx [ ebp - 0x8 ]
add esp 0x10
test ebx ebx
mov eax [ esi + 0x3c ]
sub eax edx
sar eax 0x1
lea eax [ edi + eax * 2 ]
mov [ esi + 0x3c ] eax
mov eax [ esi + 0x24 ]
mov eax [ eax ]
sub eax edx
sar eax 0x1
lea ecx [ edi + eax * 2 ]
mov eax [ esi + 0x14 ]
mov ebx [ eax ]
sub ebx edx
sar ebx 0x1
lea ebx [ edi + ebx * 2 ]
mov [ eax ] ebx
mov eax [ esi + 0x24 ]
mov [ eax ] ecx
mov eax [ ebp - 0x4 ]
add eax eax
sub eax ecx
mov ecx [ esi + 0x34 ]
add eax edi
sar eax 0x1
mov [ ecx ] eax
test [ esi + 0x40 ] 0x4
je r-xdata
mov eax [ esi + 0x14 ]
mov [ esi + 0x3c ] edi
mov [ eax ] edi
mov eax [ esi + 0x24 ]
mov [ eax ] edi
mov eax [ ebp - 0x4 ]
mov ecx [ esi + 0x34 ]
add eax eax
sar eax 0x1
mov [ ecx ] eax
mov eax [ esi + 0x10 ]
test [ esi + 0x40 ] 0x4
mov [ eax ] edi
mov eax [ esi + 0x20 ]
jne r-xdata
mov ecx [ esi + 0x20 ]
mov ecx [ ecx ]
mov eax [ esi + 0x24 ]
mov eax [ eax ]
mov ebx [ esi + 0x10 ]
sub ecx edx
sar ecx 0x1
lea ecx [ edi + ecx * 2 ]
sub eax ecx
mov [ ebx ] edi
mov edi [ esi + 0x20 ]
inc eax
mov [ edi ] ecx
mov ecx [ esi + 0x30 ]
inc eax
sar eax 0x1
mov [ ecx ] eax
mov eax [ esi + 0x10 ]
mov [ eax ] edi
mov eax [ esi + 0x20 ]
and [ eax ] 0x0
mov eax [ esi + 0x30 ]
sar edi 0x1
mov [ eax ] edi
jmp r-xdata
mov [ eax ] edi
mov eax [ esi + 0x30 ]
mov [ eax ] 0x1
jmp r-xdata
mov eax [ esi + 0x34 ]
or [ esi + 0x40 ] 0x1
dec [ eax ]
mov esi [ esi + 0x24 ]
mov ecx [ esi ]
lea eax [ ecx + 0x2 ]
mov [ esi ] eax
mov ax [ ebp + 0x8 ]
mov [ ecx ] ax
push edx
call sub_10025c9c
pop ecx
test [ esi + 0x40 ] 0x1
je r-xdata
sub_10003245
mov eax [ ecx + 0x20 ]
mov edx [ eax ]
push esi
mov eax 0xffff
test edx edx
je r-xdata
pop esi
retn 0x4
mov esi [ ecx + 0x10 ]
cmp edx [ esi ]
jbe r-xdata
mov si [ esp + 0x8 ]
push edi
mov edi eax
cmp di si
pop edi
je r-xdata
mov edx [ ecx + 0x30 ]
inc [ edx ]
mov edx [ ecx + 0x20 ]
add [ edx ] 0xfffffffe
cmp ax si
je r-xdata
cmp si [ edx - 0x2 ]
je r-xdata
xor eax eax
mov eax [ ecx + 0x20 ]
mov eax [ eax ]
mov [ eax ] si
movzx eax si
jmp r-xdata
test [ ecx + 0x40 ] 0x2
jne r-xdata
sub_10003298
mov eax [ ecx + 0x20 ]
push edi
mov edi [ eax ]
test edi edi
jne r-xdata
mov edx [ ecx + 0x30 ]
push ebx
mov ebx [ edx ]
push esi
mov esi edi
lea ebx [ esi + ebx * 2 ]
cmp esi ebx
jae r-xdata
mov eax 0xffff
pop edi
retn
test [ ecx + 0x40 ] 0x4
jne r-xdata
mov ax [ edi ]
jmp r-xdata
mov eax 0xffff
mov esi [ ecx + 0x24 ]
mov esi [ esi ]
test esi esi
je r-xdata
pop esi
pop ebx
pop edi
retn
cmp esi edi
ja r-xdata
cmp [ ecx + 0x3c ] esi
jae r-xdata
cmp [ ecx + 0x3c ] edi
jbe r-xdata
mov esi [ eax ]
mov eax [ ecx + 0x3c ]
sub eax esi
sar eax 0x1
mov [ edx ] eax
mov eax [ ecx + 0x20 ]
mov eax [ eax ]
mov ax [ eax ]
jmp r-xdata
mov [ ecx + 0x3c ] esi
sub_100032fc
push ebp
mov ebp esp
mov edx [ ecx + 0x24 ]
mov eax [ edx ]
test eax eax
je r-xdata
test [ ebp + 0x14 ] 0x1
push ebx
push esi
push edi
je r-xdata
cmp [ ecx + 0x3c ] eax
jae r-xdata
test [ ebp + 0x14 ] 0x2
je r-xdata
mov eax [ ecx + 0x20 ]
mov edi [ eax ]
test edi edi
je r-xdata
mov [ ecx + 0x3c ] eax
mov esi [ r--data ]
mov edx [ edx ]
test edx edx
je r-xdata
cmp [ ebp + 0x10 ] 0x2
mov edx [ r--data ]
jne r-xdata
cmp [ ebp + 0x10 ] 0x2
mov edi [ r--data ]
jne r-xdata
cmp [ ebp + 0x10 ] 0x1
jne r-xdata
mov ebx [ ecx + 0x3c ]
jmp r-xdata
cmp [ ebp + 0x10 ] 0x1
jne r-xdata
mov ebx [ ecx + 0x3c ]
jmp r-xdata
cmp [ ebp + 0x10 ] 0x0
je r-xdata
test [ ebp + 0x14 ] 0x2
jne r-xdata
mov eax [ ecx + 0x10 ]
sub ebx [ eax ]
mov esi [ ebp + 0xc ]
sar ebx 0x1
add esi ebx
jmp r-xdata
cmp [ ebp + 0x10 ] 0x0
mov esi edi
jne r-xdata
mov ebx edx
mov eax [ ecx + 0x10 ]
sub ebx [ eax ]
mov esi [ ebp + 0xc ]
sar ebx 0x1
add esi ebx
jmp r-xdata
mov esi [ ebp + 0xc ]
mov esi edx
jmp r-xdata
mov ebx edi
test esi esi
jl r-xdata
test esi esi
jl r-xdata
mov esi [ ebp + 0xc ]
mov esi edx
jmp r-xdata
mov eax [ ecx + 0x10 ]
mov eax [ eax ]
mov ebx [ ecx + 0x3c ]
sub ebx eax
sar ebx 0x1
cmp esi ebx
jg r-xdata
mov esi edi
jmp r-xdata
mov eax [ ecx + 0x10 ]
mov eax [ eax ]
mov ebx [ ecx + 0x3c ]
sub ebx eax
sar ebx 0x1
cmp esi ebx
jg r-xdata
mov eax [ ebp + 0x8 ]
pop edi
xor ecx ecx
mov [ eax ] esi
pop esi
mov [ eax + 0x8 ] ecx
mov [ eax + 0xc ] ecx
mov [ eax + 0x10 ] ecx
pop ebx
pop ebp
retn 0x10
mov edx [ ecx + 0x30 ]
sub eax edi
sar eax 0x1
add eax esi
sub [ edx ] eax
mov edx [ ecx + 0x20 ]
add eax eax
add [ edx ] eax
test [ ebp + 0x14 ] 0x2
je r-xdata
sub eax edx
mov edx [ ecx + 0x34 ]
sar eax 0x1
add eax esi
sub [ edx ] eax
mov ecx [ ecx + 0x24 ]
add eax eax
add [ ecx ] eax
jmp r-xdata
mov edx [ ecx + 0x24 ]
mov eax [ edx ]
test eax eax
je r-xdata
mov ebx [ ecx + 0x34 ]
mov edi [ ecx + 0x20 ]
mov ebx [ ebx ]
mov edi [ edi ]
lea eax [ eax + ebx * 2 ]
mov [ edx ] edi
mov ecx [ ecx + 0x34 ]
sub eax edi
sar eax 0x1
mov [ ecx ] eax
jmp r-xdata
sub_10003446
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
mov edx [ ebp + 0x14 ]
push esi
lea esi [ edx + eax ]
mov eax [ ecx + 0x24 ]
mov edx [ eax ]
push edi
test edx edx
je r-xdata
mov edi [ r--data ]
cmp esi edi
je r-xdata
cmp [ ecx + 0x3c ] edx
jae r-xdata
mov eax [ ebp + 0x8 ]
xor ecx ecx
pop edi
mov [ eax ] esi
mov [ eax + 0x8 ] ecx
mov [ eax + 0xc ] ecx
mov [ eax + 0x10 ] ecx
pop esi
pop ebp
retn 0x20
test [ ebp + 0x24 ] 0x1
push ebx
je r-xdata
mov [ ecx + 0x3c ] edx
test [ ebp + 0x24 ] 0x2
je r-xdata
mov edx [ ecx + 0x20 ]
mov edx [ edx ]
test edx edx
je r-xdata
mov esi edi
mov edx [ eax ]
test edx edx
je r-xdata
test esi esi
jl r-xdata
test esi esi
jl r-xdata
mov eax [ ecx + 0x10 ]
mov eax [ eax ]
mov ebx [ ecx + 0x3c ]
sub ebx eax
sar ebx 0x1
cmp esi ebx
jg r-xdata
mov eax [ ecx + 0x10 ]
mov eax [ eax ]
mov ebx [ ecx + 0x3c ]
sub ebx eax
sar ebx 0x1
cmp esi ebx
jg r-xdata
sub eax edx
mov edx [ ecx + 0x30 ]
sar eax 0x1
add eax esi
sub [ edx ] eax
mov edx [ ecx + 0x20 ]
add eax eax
add [ edx ] eax
test [ ebp + 0x24 ] 0x2
je r-xdata
sub eax edx
mov edx [ ecx + 0x34 ]
sar eax 0x1
add eax esi
sub [ edx ] eax
mov ecx [ ecx + 0x24 ]
add eax eax
add [ ecx ] eax
jmp r-xdata
pop ebx
mov edx [ ecx + 0x24 ]
mov eax [ edx ]
test eax eax
je r-xdata
mov ebx [ ecx + 0x34 ]
mov edi [ ecx + 0x20 ]
mov ebx [ ebx ]
mov edi [ edi ]
lea eax [ eax + ebx * 2 ]
mov [ edx ] edi
mov ecx [ ecx + 0x34 ]
sub eax edi
sar eax 0x1
mov [ ecx ] eax
jmp r-xdata
sub_1000351f
mov eax [ esi ]
test eax eax
jne r-xdata
mov eax [ eax ]
jmp r-xdata
call sub_100261ef
mov eax [ esi ]
test eax eax
je r-xdata
mov ecx [ esi + 0x4 ]
cmp ecx [ eax + 0x10 ]
jb r-xdata
xor eax eax
add [ esi + 0x4 ] 0x1c
mov eax esi
retn
call sub_100261ef
sub_10003586
push esi
push edi
lea edi [ ecx - 0xc ]
lea esi [ edi + 0xc ]
mov ecx esi
call sub_10002ffd
push esi
mov [ esi ] r--data
call sub_10022359
test [ esp + 0x10 ] 0x1
pop ecx
je r-xdata
mov eax edi
pop edi
pop esi
retn 0x4
push edi
call sub_10025c9c
pop ecx
sub_100035e3
push 0x10
mov eax sub_1004e08f
call sub_10029e66
mov esi [ ebp + 0x8 ]
push 0x1
push esi
lea eax [ ebp - 0x1c ]
xor ebx ebx
push eax
mov [ ebp - 0x14 ] ebx
mov [ esi + 0x4 ] ebx
call sub_10007749
mov [ ebp - 0x4 ] ebx
cmp [ ebp - 0x18 ] bl
je r-xdata
mov eax [ esi ]
mov edx [ eax + 0x4 ]
add edx esi
cmp [ ebp - 0x14 ] ebx
je r-xdata
push [ ebp + 0x10 ]
mov [ ebp - 0x4 ] 0x1
mov eax [ esi ]
mov eax [ eax + 0x4 ]
mov ecx [ eax + esi + 0x28 ]
mov eax [ ecx ]
push 0xffffffff
push [ ebp + 0xc ]
call [ eax + 0x1c ]
add [ esi + 0x4 ] eax
cmp eax [ ebp + 0x10 ]
je r-xdata
or [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp - 0x1c ]
mov ecx [ eax ]
mov ecx [ ecx + 0x4 ]
mov eax [ ecx + eax + 0x28 ]
cmp eax ebx
je r-xdata
push ebx
push [ ebp - 0x14 ]
call sub_10007acb
mov [ ebp - 0x4 ] ebx
jmp r-xdata
mov [ ebp - 0x14 ] 0x3
mov eax esi
call sub_10029f0b
retn 0xc
lea ecx [ eax + 0x4 ]
call sub_100223d4
sub_1000363c
mov ecx [ ebp + 0x8 ]
mov eax [ ecx ]
mov eax [ eax + 0x4 ]
add eax ecx
mov ecx [ eax + 0x8 ]
xor ebx ebx
or ecx 0x4
cmp [ eax + 0x28 ] ebx
jne r-xdata
push 0x1
push eax
call sub_100079b1
mov [ ebp - 0x4 ] ebx
mov eax r-xdata
retn
or ecx 0x4
sub_100036a7
push ebx
mov ebx [ esp + 0x8 ]
push edi
or eax 0xffffffff
mov edi ecx
sub eax [ edi + 0x14 ]
cmp eax ebx
ja r-xdata
test ebx ebx
jbe r-xdata
call sub_10022277
mov eax edi
pop edi
pop ebx
retn 0x8
push esi
mov esi [ edi + 0x14 ]
push 0x0
add esi ebx
push esi
mov ecx edi
call sub_10001eb9
test al al
je r-xdata
pop esi
push [ esp + 0x14 ]
mov ecx edi
push ebx
push [ edi + 0x14 ]
call sub_10004936
push esi
mov ecx edi
call sub_10002460
sub_100036f5
push 0x1c
mov eax sub_1004d4ff
call sub_10029e33
mov edi ecx
and [ ebp - 0x4 ] 0x0
mov ebx [ edi + 0x10 ]
mov eax ebx
sub eax [ edi + 0xc ]
push 0x1c
cdq
pop ecx
idiv ecx
cmp [ ebp + 0x8 ] eax
jbe r-xdata
jae r-xdata
lea esi [ ebp - 0x18 ]
call sub_10001807
push [ ebp - 0x14 ]
lea eax [ ebp + 0xc ]
push [ ebp - 0x18 ]
push eax
mov eax [ edi + 0x10 ]
sub eax [ edi + 0xc ]
push 0x1c
pop ecx
cdq
idiv ecx
mov ecx [ ebp + 0x8 ]
sub ecx eax
push ecx
mov ecx edi
call sub_1000155d
jmp r-xdata
push 0x0
push 0x1
lea ecx [ ebp + 0xc ]
call sub_1000247e
call sub_10029f0b
retn 0x20
lea esi [ ebp - 0x18 ]
call sub_10001807
mov ebx [ edi + 0xc ]
lea esi [ ebp - 0x20 ]
call sub_10001807
push [ ebp + 0x8 ]
lea esi [ ebp - 0x28 ]
lea eax [ ebp - 0x20 ]
call sub_10001827
push [ ebp - 0x14 ]
push [ ebp - 0x18 ]
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0x20 ]
push eax
push edi
call sub_10004981
sub_10003793
push 0x4
mov eax sub_1004d4dc
call sub_10029e33
mov esi [ ebp + 0x8 ]
push [ ebp + 0xc ]
and [ ebp - 0x10 ] 0x0
push esi
call sub_100047d7
mov eax [ esi + 0x8 ]
mov eax [ eax + 0x4 ]
mov [ esi + eax + 0x8 ] r--data
mov eax [ esi ]
mov eax [ eax + 0x4 ]
mov [ esi + eax ] r--data
mov eax esi
call sub_10029f0b
retn 0x8
sub_100037d3
push 0x40
mov eax sub_1004ceb4
call sub_10029e9c
mov eax [ ebp + 0x8 ]
mov edx [ eax + 0x40 ]
xor edi edi
mov [ ebp - 0x4c ] edi
test dl 0x2
jne r-xdata
test dl 0x4
jne r-xdata
mov ecx [ eax + 0x24 ]
cmp [ ecx ] edi
je r-xdata
push edi
lea ecx [ ebp - 0x48 ]
mov [ ebp - 0x30 ] 0x7
call sub_10002460
lea eax [ ebp - 0x48 ]
push eax
mov ecx ebx
mov [ ebp - 0x4 ] 0x2
call sub_10001fad
lea ecx [ ebp - 0x48 ]
mov ecx [ eax + 0x20 ]
cmp [ ecx ] edi
je r-xdata
mov ecx [ ecx ]
mov edx [ eax + 0x3c ]
cmp edx ecx
jb r-xdata
mov edx [ eax + 0x30 ]
mov ecx [ ecx ]
mov edx [ edx ]
mov eax [ eax + 0x10 ]
mov eax [ eax ]
lea ecx [ ecx + edx * 2 ]
sub ecx eax
sar ecx 0x1
push ecx
push eax
lea ecx [ ebp - 0x2c ]
call sub_100048ea
mov [ ebp - 0x4 ] 0x1
jmp r-xdata
mov eax [ eax + 0x14 ]
mov eax [ eax ]
sub ecx eax
sar ecx 0x1
push ecx
push eax
lea ecx [ ebp - 0x2c ]
call sub_100048ea
mov [ ebp - 0x4 ] edi
mov ecx edx
lea eax [ ebp - 0x2c ]
push eax
mov ecx ebx
call sub_10001fad
lea ecx [ ebp - 0x2c ]
jmp r-xdata
push edi
push 0x1
call sub_1000247e
mov eax ebx
call sub_10029f1f
retn 0x4
sub_10003890
push 0x50
mov eax sub_1004caa4
call sub_10029e9c
mov esi [ ebp + 0x14 ]
test [ esi + 0x10 ] 0x4000
mov edi [ ebp + 0x8 ]
mov [ ebp - 0x30 ] ecx
mov [ ebp - 0x34 ] edi
jne r-xdata
lea eax [ ebp - 0x3c ]
push eax
mov ecx esi
call sub_1000781e
xor ebx ebx
push eax
mov [ ebp - 0x4 ] ebx
call sub_10006086
pop ecx
lea ecx [ ebp - 0x3c ]
mov [ ebp - 0x38 ] eax
call sub_10007806
push ebx
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x14 ] 0x7
call sub_10002460
mov ecx [ ebp - 0x38 ]
xor edi edi
inc edi
lea eax [ ebp - 0x5c ]
mov [ ebp - 0x4 ] edi
push eax
cmp [ ebp + 0x1c ] bl
je r-xdata
movzx edx [ ebp + 0x1c ]
mov eax [ ecx ]
push edx
push [ ebp + 0x18 ]
push esi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push edi
call [ eax + 0x1c ]
mov eax edi
jmp r-xdata
call sub_1000f76f
mov [ ebp - 0x4 ] 0x3
call sub_10005ac0
mov [ ebp - 0x4 ] 0x2
jmp r-xdata
call sub_10029f1f
retn 0x18
xor edi edi
cmp eax [ ebp - 0x18 ]
jbe r-xdata
push 0xffffffff
push ebx
push eax
lea ecx [ ebp - 0x2c ]
call sub_10001f1a
push ebx
push edi
lea ecx [ ebp - 0x5c ]
mov [ ebp - 0x4 ] 0x1
call sub_1000247e
mov eax [ esi + 0x18 ]
cmp eax ebx
jle r-xdata
cmp [ ebp - 0x14 ] 0x8
mov eax [ ebp - 0x28 ]
jae r-xdata
push edi
push [ ebp + 0x18 ]
lea eax [ ebp - 0x40 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
push [ ebp - 0x30 ]
call sub_100051f7
mov ecx [ eax ]
mov [ ebp + 0xc ] ecx
mov eax [ eax + 0x4 ]
add esp 0x18
mov [ ebp + 0x10 ] eax
xor edi edi
sub eax [ ebp - 0x18 ]
mov edi eax
jmp r-xdata
push [ ebp - 0x18 ]
push eax
push [ ebp + 0x10 ]
lea eax [ ebp - 0x40 ]
push [ ebp + 0xc ]
push eax
push [ ebp - 0x30 ]
call sub_100051c2
mov ecx [ eax ]
push edi
push [ ebp + 0x18 ]
mov [ ebp + 0xc ] ecx
mov eax [ eax + 0x4 ]
push eax
push ecx
push [ ebp - 0x34 ]
mov [ ebp + 0x10 ] eax
push [ ebp - 0x30 ]
mov [ esi + 0x18 ] ebx
call sub_100051f7
add esp 0x30
push ebx
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_1000247e
mov eax [ ebp - 0x34 ]
lea eax [ ebp - 0x28 ]
mov eax [ esi + 0x10 ]
and eax 0x1c0
cmp eax 0x40
je r-xdata
sub_100039e1
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x54
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x50 ] eax
push ebx
push esi
mov esi [ ebp + 0x14 ]
mov eax [ esi + 0x10 ]
push edi
push [ ebp + 0x1c ]
mov edi [ ebp + 0x8 ]
push eax
push r--data
lea eax [ esp + 0x1c ]
mov ebx ecx
push eax
push ebx
call sub_1000ed61
add esp 0x10
push eax
lea eax [ esp + 0x20 ]
push 0x40
push eax
call sub_100264db
push eax
lea eax [ esp + 0x2c ]
push eax
push [ ebp + 0x18 ]
push esi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push edi
push ebx
call sub_10004f69
mov ecx [ esp + 0x8c ]
add esp 0x30
mov eax edi
pop edi
pop esi
pop ebx
xor ecx esp
call sub_10025c8d
mov esp ebp
pop ebp
retn 0x18
sub_10003a5a
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x54
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x50 ] eax
push ebx
push esi
mov esi [ ebp + 0x14 ]
mov eax [ esi + 0x10 ]
push edi
push [ ebp + 0x1c ]
mov edi [ ebp + 0x8 ]
push eax
push r--data
lea eax [ esp + 0x1c ]
mov ebx ecx
push eax
push ebx
call sub_1000ed61
add esp 0x10
push eax
lea eax [ esp + 0x20 ]
push 0x40
push eax
call sub_100264db
push eax
lea eax [ esp + 0x2c ]
push eax
push [ ebp + 0x18 ]
push esi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push edi
push ebx
call sub_10004f69
mov ecx [ esp + 0x8c ]
add esp 0x30
mov eax edi
pop edi
pop esi
pop ebx
xor ecx esp
call sub_10025c8d
mov esp ebp
pop ebp
retn 0x18
sub_10003ad3
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x54
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x50 ] eax
push ebx
push esi
mov esi [ ebp + 0x14 ]
mov eax [ esi + 0x10 ]
push edi
push [ ebp + 0x20 ]
mov edi [ ebp + 0x8 ]
push [ ebp + 0x1c ]
mov ebx ecx
push eax
push r--data
lea eax [ esp + 0x20 ]
push eax
push ebx
call sub_1000ed61
add esp 0x10
push eax
lea eax [ esp + 0x24 ]
push 0x40
push eax
call sub_100264db
push eax
lea eax [ esp + 0x30 ]
push eax
push [ ebp + 0x18 ]
push esi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push edi
push ebx
call sub_10004f69
mov ecx [ esp + 0x90 ]
add esp 0x34
mov eax edi
pop edi
pop esi
pop ebx
xor ecx esp
call sub_10025c8d
mov esp ebp
pop ebp
retn 0x1c
sub_10003b4f
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x54
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x50 ] eax
push ebx
push esi
mov esi [ ebp + 0x14 ]
mov eax [ esi + 0x10 ]
push edi
push [ ebp + 0x20 ]
mov edi [ ebp + 0x8 ]
push [ ebp + 0x1c ]
mov ebx ecx
push eax
push r--data
lea eax [ esp + 0x20 ]
push eax
push ebx
call sub_1000ed61
add esp 0x10
push eax
lea eax [ esp + 0x24 ]
push 0x40
push eax
call sub_100264db
push eax
lea eax [ esp + 0x30 ]
push eax
push [ ebp + 0x18 ]
push esi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push edi
push ebx
call sub_10004f69
mov ecx [ esp + 0x90 ]
add esp 0x34
mov eax edi
pop edi
pop esi
pop ebx
xor ecx esp
call sub_10025c8d
mov esp ebp
pop ebp
retn 0x1c
sub_10003bcb
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x94
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x90 ] eax
mov eax [ ebp + 0x8 ]
push ebx
push esi
mov esi [ ebp + 0x14 ]
mov [ esp + 0x18 ] ecx
mov ecx [ esi + 0x14 ]
xor ebx ebx
cmp ecx ebx
mov [ esp + 0x14 ] eax
push edi
mov eax 0x2000
jg r-xdata
mov edi ecx
push 0x24
pop ecx
cmp edi ecx
mov [ esp + 0x20 ] ecx
jg r-xdata
test [ esi + 0x10 ] eax
jne r-xdata
mov ecx [ esi + 0x10 ]
fld [ ebp + 0x1c ]
sub edi [ esp + 0x20 ]
mov edx ecx
and edx 0x3000
mov [ esp + 0x14 ] ebx
cmp edx eax
jne r-xdata
mov [ esp + 0x20 ] edi
push 0x6
pop ecx
push ecx
push ecx
fstp [ esp ]
push [ esp + 0x28 ]
lea eax [ esp + 0x2c ]
push ecx
push 0x0
push eax
push [ esp + 0x34 ]
call sub_1000e833
add esp 0x10
push eax
lea eax [ esp + 0x38 ]
push 0x6c
push eax
call sub_100264db
push eax
push edi
push ebx
push [ esp + 0x38 ]
lea eax [ esp + 0x50 ]
push eax
push [ ebp + 0x18 ]
push esi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ esp + 0x54 ]
push [ esp + 0x5c ]
call sub_10004a69
mov ecx [ esp + 0xe0 ]
mov eax [ esp + 0x5c ]
add esp 0x44
pop edi
pop esi
pop ebx
xor ecx esp
call sub_10025c8d
mov esp ebp
pop ebp
retn 0x1c
fld [ r--data ]
fmul st1
fucomp st1
fnstsw ax
test ah 0x44
jpo r-xdata
fldz
fcom st1
fnstsw ax
test ah 0x41
jne r-xdata
mov [ esp + 0x13 ] bl
fxch st1
fxch st1
mov [ esp + 0x13 ] 0x1
fchs
jmp r-xdata
cmp [ esp + 0x14 ] 0x1388
jae r-xdata
fstp st1
jmp r-xdata
fld [ r--data ]
push 0xa
fcom st1
pop edx
fnstsw ax
fld [ r--data ]
test ah 0x41
jpo r-xdata
fdiv st2
add [ esp + 0x14 ] edx
fxch st1
fcom st2
fnstsw ax
test ah 0x41
jpo r-xdata
fxch st2
fcomp st1
fnstsw ax
test ah 0x5
jpe r-xdata
fxch st1
fstp st0
cmp [ esp + 0x13 ] 0x0
fstp st1
je r-xdata
cmp edi edx
jl r-xdata
fchs
fld [ r--data ]
fcomp st1
fnstsw ax
test ah 0x1
jne r-xdata
cmp ebx 0x1388
jae r-xdata
sub edi edx
fmul st1
add ebx edx
jmp r-xdata
sub_10003d4b
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x94
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x90 ] eax
mov eax [ ebp + 0x8 ]
push ebx
push esi
mov esi [ ebp + 0x14 ]
mov [ esp + 0x18 ] ecx
mov ecx [ esi + 0x14 ]
mov [ esp + 0x14 ] eax
push edi
mov eax 0x2000
test ecx ecx
jg r-xdata
mov edi ecx
push 0x24
pop ecx
cmp edi ecx
mov [ esp + 0x20 ] ecx
jg r-xdata
test [ esi + 0x10 ] eax
jne r-xdata
mov ecx [ esi + 0x10 ]
sub edi [ esp + 0x20 ]
and [ esp + 0x10 ] 0x0
and [ esp + 0x14 ] 0x0
mov edx ecx
and edx 0x3000
cmp edx eax
jne r-xdata
mov [ esp + 0x20 ] edi
push 0x6
pop ecx
fld [ ebp + 0x1c ]
fldz
fld [ ebp + 0x1c ]
fcom st1
fnstsw ax
test ah 0x5
jpe r-xdata
mov [ esp + 0xf ] 0x0
jmp r-xdata
mov [ esp + 0xf ] 0x1
fchs
fld [ r--data ]
push 0xa
fcom st1
mov ebx 0x1388
pop edx
fnstsw ax
fld [ r--data ]
test ah 0x41
jpo r-xdata
cmp [ esp + 0x10 ] ebx
jae r-xdata
fstp st1
jmp r-xdata
fdiv st2
add [ esp + 0x10 ] edx
fxch st1
fcom st2
fnstsw ax
test ah 0x41
jpo r-xdata
fxch st2
fcomp st1
fnstsw ax
test ah 0x5
jpe r-xdata
fxch st1
fstp st0
cmp [ esp + 0xf ] 0x0
fstp st1
je r-xdata
cmp edi edx
jl r-xdata
push ecx
push ecx
fstp [ esp ]
push [ esp + 0x28 ]
lea eax [ esp + 0x2c ]
push ecx
push 0x4c
push eax
push [ esp + 0x34 ]
call sub_1000e833
add esp 0x10
push eax
lea eax [ esp + 0x38 ]
push 0x6c
push eax
call sub_100264db
push eax
push edi
push [ esp + 0x34 ]
lea eax [ esp + 0x4c ]
push [ esp + 0x34 ]
push eax
push [ ebp + 0x18 ]
push esi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ esp + 0x54 ]
push [ esp + 0x5c ]
call sub_10004a69
mov ecx [ esp + 0xe0 ]
mov eax [ esp + 0x5c ]
add esp 0x44
pop edi
pop esi
pop ebx
xor ecx esp
call sub_10025c8d
mov esp ebp
pop ebp
retn 0x1c
fchs
jmp r-xdata
fld [ r--data ]
fcomp st1
fnstsw ax
test ah 0x1
jne r-xdata
cmp [ esp + 0x14 ] ebx
jae r-xdata
sub edi edx
fmul st1
add [ esp + 0x14 ] edx
jmp r-xdata
sub_10003ec0
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x4c
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x48 ] eax
mov eax [ ebp + 0x1c ]
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi [ ebp + 0x14 ]
push eax
push r--data
lea eax [ esp + 0x18 ]
push 0x40
push eax
mov ebx ecx
call sub_100264db
push eax
lea eax [ esp + 0x24 ]
push eax
push [ ebp + 0x18 ]
push edi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
push ebx
call sub_10004f69
mov ecx [ esp + 0x84 ]
add esp 0x30
pop edi
mov eax esi
pop esi
pop ebx
xor ecx esp
call sub_10025c8d
mov esp ebp
pop ebp
retn 0x18
sub_10003f27
push 0x60
mov eax sub_1004ca5f
call sub_10029e9c
mov eax [ ebp + 0x8 ]
mov esi [ ebp + 0x1c ]
or [ ebp - 0x50 ] 0xffffffff
mov [ ebp - 0x68 ] eax
mov eax [ ebp + 0x20 ]
mov [ ebp - 0x58 ] eax
mov eax [ ebp + 0x24 ]
xor ebx ebx
mov [ ebp - 0x6c ] eax
mov eax [ esi + 0x10 ]
inc ebx
mov [ ebp - 0x54 ] ecx
mov ecx esi
test eax 0x4000
je r-xdata
lea eax [ ebp - 0x60 ]
xor edi edi
push eax
mov [ ebp - 0x5c ] edi
call sub_1000781e
lea ecx [ ebp - 0x5c ]
push ecx
push eax
mov [ ebp - 0x4 ] 0x4
mov esi [ esi + 0x10 ]
push esi
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
lea eax [ ebp - 0x30 ]
push eax
push [ ebp - 0x54 ]
call sub_10005220
add esp 0x18
push eax
lea eax [ ebp - 0x64 ]
push eax
lea eax [ ebp - 0x30 ]
push eax
call sub_10022e0c
or [ ebp - 0x4 ] 0xffffffff
add esp 0x10
lea ecx [ ebp - 0x60 ]
mov esi eax
call sub_10007806
lea eax [ ebp - 0x30 ]
cmp [ ebp - 0x64 ] eax
je r-xdata
lea eax [ ebp - 0x54 ]
push eax
call sub_1000781e
xor edi edi
push eax
mov [ ebp - 0x4 ] edi
call sub_10006086
pop ecx
or esi 0xffffffff
lea ecx [ ebp - 0x54 ]
mov [ ebp - 0x50 ] eax
mov [ ebp - 0x4 ] esi
call sub_10007806
push edi
push ebx
lea ecx [ ebp - 0x4c ]
call sub_10004910
mov ecx [ ebp - 0x50 ]
lea eax [ ebp - 0x2c ]
push eax
mov [ ebp - 0x4 ] ebx
call sub_1000f76f
push esi
push edi
push eax
lea ecx [ ebp - 0x4c ]
mov [ ebp - 0x4 ] 0x2
call sub_10006b05
push edi
push ebx
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x4 ] bl
call sub_1000247e
push edi
push ebx
lea ecx [ ebp - 0x4c ]
call sub_100036a7
mov ecx [ ebp - 0x50 ]
lea eax [ ebp - 0x2c ]
push eax
call sub_10005ac0
push esi
push edi
push eax
lea ecx [ ebp - 0x4c ]
mov [ ebp - 0x4 ] 0x3
call sub_10006b05
push edi
push ebx
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x4 ] bl
call sub_1000247e
cmp [ ebp - 0x34 ] 0x8
mov eax [ ebp - 0x48 ]
jae r-xdata
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_100063d9
test al al
mov eax [ ebp - 0x58 ]
je r-xdata
cmp [ ebp - 0x5c ] edi
jne r-xdata
push eax
push 0x2
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
call sub_10006123
add esp 0x10
push edi
push ebx
lea ecx [ ebp - 0x4c ]
mov [ ebp - 0x50 ] eax
mov [ ebp - 0x4 ] esi
call sub_1000247e
jmp r-xdata
lea eax [ ebp - 0x48 ]
cmp [ ebp - 0x50 ] edi
jge r-xdata
or [ eax ] ebx
cmp esi ebx
ja r-xdata
mov ecx [ ebp - 0x6c ]
setne al
mov [ ecx ] al
or [ eax ] 0x2
jmp r-xdata
mov [ ebp - 0x50 ] esi
mov ecx [ ebp + 0xc ]
mov eax [ ebp - 0x68 ]
mov [ eax ] ecx
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x4 ] ecx
call sub_10029f1f
retn 0x20
sub_100040c5
push 0x38
mov eax sub_1004c38b
call sub_10029e9c
mov eax [ ebp + 0x8 ]
mov esi [ ebp + 0x1c ]
mov edi [ ebp + 0x20 ]
mov ebx [ ebp + 0x24 ]
and [ ebp - 0x38 ] 0x0
mov [ ebp - 0x40 ] eax
lea eax [ ebp - 0x3c ]
mov [ ebp - 0x34 ] ecx
push eax
mov ecx esi
call sub_1000781e
and [ ebp - 0x4 ] 0x0
mov esi [ esi + 0x10 ]
push eax
push esi
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
lea eax [ ebp - 0x30 ]
push eax
push [ ebp - 0x34 ]
call sub_10005220
or [ ebp - 0x4 ] 0xffffffff
add esp 0x18
lea ecx [ ebp - 0x3c ]
mov esi eax
call sub_10007806
cmp [ ebp - 0x30 ] 0x2d
lea eax [ ebp - 0x2f ]
je r-xdata
mov [ ebp - 0x34 ] eax
lea eax [ ebp - 0x38 ]
push eax
push esi
lea eax [ ebp - 0x44 ]
push eax
push [ ebp - 0x34 ]
call sub_10022e0c
mov esi eax
add esp 0x10
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_100063d9
test al al
je r-xdata
lea eax [ ebp - 0x30 ]
mov eax [ ebp - 0x34 ]
cmp [ ebp - 0x44 ] eax
je r-xdata
or [ edi ] 0x1
or [ edi ] 0x2
cmp [ ebp - 0x38 ] 0x0
jne r-xdata
cmp esi 0xffff
ja r-xdata
cmp [ ebp - 0x30 ] 0x2d
jne r-xdata
mov [ ebx ] si
jmp r-xdata
neg esi
mov ecx [ ebp + 0xc ]
mov eax [ ebp - 0x40 ]
mov [ eax ] ecx
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x4 ] ecx
call sub_10029f1f
retn 0x20
sub_10004194
push 0x38
mov eax sub_1004c38b
call sub_10029e9c
mov eax [ ebp + 0x8 ]
mov esi [ ebp + 0x1c ]
mov edi [ ebp + 0x20 ]
mov ebx [ ebp + 0x24 ]
and [ ebp - 0x38 ] 0x0
mov [ ebp - 0x40 ] eax
lea eax [ ebp - 0x3c ]
mov [ ebp - 0x34 ] ecx
push eax
mov ecx esi
call sub_1000781e
and [ ebp - 0x4 ] 0x0
mov esi [ esi + 0x10 ]
push eax
push esi
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
lea eax [ ebp - 0x30 ]
push eax
push [ ebp - 0x34 ]
call sub_10005220
or [ ebp - 0x4 ] 0xffffffff
add esp 0x18
lea ecx [ ebp - 0x3c ]
mov esi eax
call sub_10007806
cmp [ ebp - 0x30 ] 0x2d
lea eax [ ebp - 0x2f ]
je r-xdata
mov [ ebp - 0x34 ] eax
lea eax [ ebp - 0x38 ]
push eax
push esi
lea eax [ ebp - 0x44 ]
push eax
push [ ebp - 0x34 ]
call sub_10022e0c
mov esi eax
add esp 0x10
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_100063d9
test al al
je r-xdata
lea eax [ ebp - 0x30 ]
mov eax [ ebp - 0x34 ]
cmp [ ebp - 0x44 ] eax
je r-xdata
or [ edi ] 0x1
or [ edi ] 0x2
cmp [ ebp - 0x38 ] 0x0
jne r-xdata
cmp esi 0xffffffff
ja r-xdata
cmp [ ebp - 0x30 ] 0x2d
jne r-xdata
mov [ ebx ] esi
jmp r-xdata
neg esi
mov ecx [ ebp + 0xc ]
mov eax [ ebp - 0x40 ]
mov [ eax ] ecx
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x4 ] ecx
call sub_10029f1f
retn 0x20
sub_1000425f
push 0x38
mov eax sub_1004b9ae
call sub_10029e9c
mov eax [ ebp + 0x8 ]
mov esi [ ebp + 0x1c ]
mov edi [ ebp + 0x20 ]
mov ebx [ ebp + 0x24 ]
and [ ebp - 0x34 ] 0x0
mov [ ebp - 0x3c ] eax
lea eax [ ebp - 0x38 ]
mov [ ebp - 0x44 ] ecx
push eax
mov ecx esi
call sub_1000781e
and [ ebp - 0x4 ] 0x0
mov esi [ esi + 0x10 ]
lea ecx [ ebp - 0x34 ]
push ecx
push eax
push esi
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
lea eax [ ebp - 0x30 ]
push eax
push [ ebp - 0x44 ]
call sub_10005220
add esp 0x18
push eax
lea eax [ ebp - 0x40 ]
push eax
lea eax [ ebp - 0x30 ]
push eax
call sub_10022fa7
or [ ebp - 0x4 ] 0xffffffff
add esp 0x10
lea ecx [ ebp - 0x38 ]
mov esi eax
call sub_10007806
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_100063d9
test al al
je r-xdata
lea eax [ ebp - 0x30 ]
cmp [ ebp - 0x40 ] eax
je r-xdata
or [ edi ] 0x1
or [ edi ] 0x2
cmp [ ebp - 0x34 ] 0x0
jne r-xdata
mov [ ebx ] esi
jmp r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ebp - 0x3c ]
mov [ eax ] ecx
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x4 ] ecx
call sub_10029f1f
retn 0x20
sub_1000430d
push 0x38
mov eax sub_1004b9ae
call sub_10029e9c
mov eax [ ebp + 0x8 ]
mov esi [ ebp + 0x1c ]
mov edi [ ebp + 0x20 ]
mov ebx [ ebp + 0x24 ]
and [ ebp - 0x34 ] 0x0
mov [ ebp - 0x3c ] eax
lea eax [ ebp - 0x38 ]
mov [ ebp - 0x44 ] ecx
push eax
mov ecx esi
call sub_1000781e
and [ ebp - 0x4 ] 0x0
mov esi [ esi + 0x10 ]
lea ecx [ ebp - 0x34 ]
push ecx
push eax
push esi
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
lea eax [ ebp - 0x30 ]
push eax
push [ ebp - 0x44 ]
call sub_10005220
add esp 0x18
push eax
lea eax [ ebp - 0x40 ]
push eax
lea eax [ ebp - 0x30 ]
push eax
call sub_10022e0c
or [ ebp - 0x4 ] 0xffffffff
add esp 0x10
lea ecx [ ebp - 0x38 ]
mov esi eax
call sub_10007806
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_100063d9
test al al
je r-xdata
lea eax [ ebp - 0x30 ]
cmp [ ebp - 0x40 ] eax
je r-xdata
or [ edi ] 0x1
or [ edi ] 0x2
cmp [ ebp - 0x34 ] 0x0
jne r-xdata
mov [ ebx ] esi
jmp r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ebp - 0x3c ]
mov [ eax ] ecx
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x4 ] ecx
call sub_10029f1f
retn 0x20
sub_100043bb
push 0x3c
mov eax sub_1004c35e
call sub_10029e9c
mov eax [ ebp + 0x8 ]
mov esi [ ebp + 0x1c ]
mov ebx [ ebp + 0x20 ]
mov edi [ ebp + 0x24 ]
and [ ebp - 0x34 ] 0x0
mov [ ebp - 0x3c ] eax
lea eax [ ebp - 0x38 ]
mov [ ebp - 0x44 ] ecx
push eax
mov ecx esi
call sub_1000781e
and [ ebp - 0x4 ] 0x0
mov esi [ esi + 0x10 ]
lea ecx [ ebp - 0x34 ]
push ecx
push eax
push esi
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
lea eax [ ebp - 0x30 ]
push eax
push [ ebp - 0x44 ]
call sub_10005220
add esp 0x18
push eax
lea eax [ ebp - 0x40 ]
push eax
lea eax [ ebp - 0x30 ]
push eax
call sub_1002304c
or [ ebp - 0x4 ] 0xffffffff
add esp 0x10
lea ecx [ ebp - 0x38 ]
mov esi eax
mov [ ebp - 0x44 ] edx
call sub_10007806
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_100063d9
test al al
je r-xdata
lea eax [ ebp - 0x30 ]
cmp [ ebp - 0x40 ] eax
je r-xdata
or [ ebx ] 0x1
or [ ebx ] 0x2
cmp [ ebp - 0x34 ] 0x0
jne r-xdata
mov eax [ ebp - 0x44 ]
mov [ edi ] esi
mov [ edi + 0x4 ] eax
jmp r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ebp - 0x3c ]
mov [ eax ] ecx
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x4 ] ecx
call sub_10029f1f
retn 0x20
sub_10004472
push 0x3c
mov eax sub_1004c35e
call sub_10029e9c
mov eax [ ebp + 0x8 ]
mov esi [ ebp + 0x1c ]
mov ebx [ ebp + 0x20 ]
mov edi [ ebp + 0x24 ]
and [ ebp - 0x34 ] 0x0
mov [ ebp - 0x3c ] eax
lea eax [ ebp - 0x38 ]
mov [ ebp - 0x44 ] ecx
push eax
mov ecx esi
call sub_1000781e
and [ ebp - 0x4 ] 0x0
mov esi [ esi + 0x10 ]
lea ecx [ ebp - 0x34 ]
push ecx
push eax
push esi
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
lea eax [ ebp - 0x30 ]
push eax
push [ ebp - 0x44 ]
call sub_10005220
add esp 0x18
push eax
lea eax [ ebp - 0x40 ]
push eax
lea eax [ ebp - 0x30 ]
push eax
call sub_1002310f
or [ ebp - 0x4 ] 0xffffffff
add esp 0x10
lea ecx [ ebp - 0x38 ]
mov esi eax
mov [ ebp - 0x44 ] edx
call sub_10007806
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_100063d9
test al al
je r-xdata
lea eax [ ebp - 0x30 ]
cmp [ ebp - 0x40 ] eax
je r-xdata
or [ ebx ] 0x1
or [ ebx ] 0x2
cmp [ ebp - 0x34 ] 0x0
jne r-xdata
mov eax [ ebp - 0x44 ]
mov [ edi ] esi
mov [ edi + 0x4 ] eax
jmp r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ebp - 0x3c ]
mov [ eax ] ecx
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x4 ] ecx
call sub_10029f1f
retn 0x20
sub_10004529
push 0x50
mov eax sub_1004b9db
call sub_10029e9c
mov edi [ ebp + 0x8 ]
mov esi [ ebp + 0x20 ]
mov ebx [ ebp + 0x24 ]
and [ ebp - 0x54 ] 0x0
lea eax [ ebp - 0x58 ]
mov [ ebp - 0x50 ] ecx
mov ecx [ ebp + 0x1c ]
push eax
call sub_1000781e
and [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x54 ]
push ecx
push eax
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
lea eax [ ebp - 0x4c ]
push eax
push [ ebp - 0x50 ]
call sub_10005570
add esp 0x14
push eax
lea eax [ ebp - 0x5c ]
push eax
lea eax [ ebp - 0x4c ]
push eax
call sub_10023314
fstp [ ebp - 0x50 ]
or [ ebp - 0x4 ] 0xffffffff
add esp 0x10
lea ecx [ ebp - 0x58 ]
call sub_10007806
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_100063d9
test al al
je r-xdata
lea eax [ ebp - 0x4c ]
cmp [ ebp - 0x5c ] eax
je r-xdata
or [ esi ] 0x1
or [ esi ] 0x2
cmp [ ebp - 0x54 ] 0x0
jne r-xdata
fld [ ebp - 0x50 ]
fstp [ ebx ]
jmp r-xdata
mov eax [ ebp + 0xc ]
mov [ edi ] eax
mov eax [ ebp + 0x10 ]
mov [ edi + 0x4 ] eax
mov eax edi
call sub_10029f1f
retn 0x20
sub_100045d1
push 0x54
mov eax sub_1004c331
call sub_10029e9c
mov edi [ ebp + 0x8 ]
mov esi [ ebp + 0x20 ]
mov ebx [ ebp + 0x24 ]
and [ ebp - 0x50 ] 0x0
lea eax [ ebp - 0x54 ]
mov [ ebp - 0x5c ] ecx
mov ecx [ ebp + 0x1c ]
push eax
call sub_1000781e
and [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x50 ]
push ecx
push eax
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
lea eax [ ebp - 0x4c ]
push eax
push [ ebp - 0x5c ]
call sub_10005570
add esp 0x14
push eax
lea eax [ ebp - 0x58 ]
push eax
lea eax [ ebp - 0x4c ]
push eax
call sub_10023336
fstp [ ebp - 0x60 ]
or [ ebp - 0x4 ] 0xffffffff
add esp 0x10
lea ecx [ ebp - 0x54 ]
call sub_10007806
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_100063d9
test al al
je r-xdata
lea eax [ ebp - 0x4c ]
cmp [ ebp - 0x58 ] eax
je r-xdata
or [ esi ] 0x1
or [ esi ] 0x2
cmp [ ebp - 0x50 ] 0x0
jne r-xdata
fld [ ebp - 0x60 ]
fstp [ ebx ]
jmp r-xdata
mov eax [ ebp + 0xc ]
mov [ edi ] eax
mov eax [ ebp + 0x10 ]
mov [ edi + 0x4 ] eax
mov eax edi
call sub_10029f1f
retn 0x20
sub_10004679
push 0x54
mov eax sub_1004c331
call sub_10029e9c
mov edi [ ebp + 0x8 ]
mov esi [ ebp + 0x20 ]
mov ebx [ ebp + 0x24 ]
and [ ebp - 0x50 ] 0x0
lea eax [ ebp - 0x54 ]
mov [ ebp - 0x5c ] ecx
mov ecx [ ebp + 0x1c ]
push eax
call sub_1000781e
and [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x50 ]
push ecx
push eax
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
lea eax [ ebp - 0x4c ]
push eax
push [ ebp - 0x5c ]
call sub_10005570
add esp 0x14
push eax
lea eax [ ebp - 0x58 ]
push eax
lea eax [ ebp - 0x4c ]
push eax
call sub_1002339f
fstp [ ebp - 0x60 ]
or [ ebp - 0x4 ] 0xffffffff
add esp 0x10
lea ecx [ ebp - 0x54 ]
call sub_10007806
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_100063d9
test al al
je r-xdata
lea eax [ ebp - 0x4c ]
cmp [ ebp - 0x58 ] eax
je r-xdata
or [ esi ] 0x1
or [ esi ] 0x2
cmp [ ebp - 0x50 ] 0x0
jne r-xdata
fld [ ebp - 0x60 ]
fstp [ ebx ]
jmp r-xdata
mov eax [ ebp + 0xc ]
mov [ edi ] eax
mov eax [ ebp + 0x10 ]
mov [ edi + 0x4 ] eax
mov eax edi
call sub_10029f1f
retn 0x20
sub_10004721
push 0x38
mov eax sub_1004ba08
call sub_10029e9c
mov ebx [ ebp + 0x8 ]
mov esi [ ebp + 0x20 ]
mov edi [ ebp + 0x24 ]
and [ ebp - 0x3c ] 0x0
lea eax [ ebp - 0x40 ]
mov [ ebp - 0x34 ] ecx
mov ecx [ ebp + 0x1c ]
push eax
call sub_1000781e
and [ ebp - 0x4 ] 0x0
push eax
push 0x800
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
lea eax [ ebp - 0x30 ]
push eax
push [ ebp - 0x34 ]
call sub_10005220
or [ ebp - 0x4 ] 0xffffffff
add esp 0x18
lea ecx [ ebp - 0x40 ]
mov [ ebp - 0x34 ] eax
call sub_10007806
lea eax [ ebp - 0x3c ]
push eax
push [ ebp - 0x34 ]
lea eax [ ebp - 0x44 ]
push eax
lea eax [ ebp - 0x30 ]
push eax
call sub_10022e0c
and [ ebp - 0x34 ] 0x0
mov [ ebp - 0x38 ] eax
add esp 0x10
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_100063d9
test al al
je r-xdata
lea eax [ ebp - 0x30 ]
cmp [ ebp - 0x44 ] eax
je r-xdata
or [ esi ] 0x1
or [ esi ] 0x2
cmp [ ebp - 0x3c ] 0x0
jne r-xdata
mov eax [ ebp - 0x38 ]
mov [ edi ] eax
jmp r-xdata
mov eax [ ebp + 0xc ]
mov [ ebx ] eax
mov eax [ ebp + 0x10 ]
mov [ ebx + 0x4 ] eax
mov eax ebx
call sub_10029f1f
retn 0x20
sub_100047d7
push 0xc
mov eax sub_1004d4b6
call sub_10029e33
mov edi [ ebp + 0x8 ]
xor ebx ebx
mov [ ebp - 0x14 ] ebx
mov eax [ edi ]
mov eax [ eax + 0x4 ]
mov [ edi + eax ] r--data
mov eax [ edi ]
mov [ edi + 0x4 ] ebx
mov esi [ eax + 0x4 ]
add esi edi
call sub_10006bae
mov eax [ ebp + 0xc ]
mov [ esi + 0x28 ] eax
lea eax [ ebp + 0xc ]
push eax
mov ecx esi
mov [ esi + 0x2c ] ebx
call sub_1000781e
push eax
mov [ ebp - 0x4 ] 0x1
call sub_100074de
pop ecx
lea ecx [ ebp + 0xc ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x4 ] bl
call sub_10007806
mov ecx [ ebp - 0x10 ]
mov eax [ ecx ]
push 0x20
call [ eax + 0x28 ]
mov [ esi + 0x30 ] ax
cmp [ esi + 0x28 ] ebx
jne r-xdata
mov [ esi + 0x4 ] ebx
mov eax edi
call sub_10029f0b
retn 0x8
mov eax [ esi + 0x8 ]
or eax 0x4
push ebx
push esi
mov ecx eax
call sub_100079b1
sub_10004865
push 0x0
mov eax sub_1004bf9a
call sub_10029e33
mov esi [ ebp + 0x8 ]
lea ecx [ esi + 0x4 ]
mov [ esi ] r--data
call sub_1002239a
xor edi edi
push 0x4
mov [ ebp - 0x4 ] edi
call sub_10025dd6
pop ecx
cmp eax edi
je r-xdata
xor eax eax
mov ecx eax
call sub_10006db7
jmp r-xdata
mov [ esi + 0x38 ] eax
lea ecx [ esi + 0x18 ]
mov [ esi + 0x20 ] ecx
lea ecx [ esi + 0x1c ]
mov [ esi + 0x24 ] ecx
lea eax [ esi + 0x8 ]
mov [ esi + 0x10 ] eax
lea ecx [ esi + 0x28 ]
mov [ esi + 0x30 ] ecx
lea eax [ esi + 0xc ]
mov [ esi + 0x14 ] eax
lea ecx [ esi + 0x2c ]
mov [ esi + 0x34 ] ecx
mov [ eax ] edi
mov eax [ esi + 0x24 ]
mov [ eax ] edi
mov eax [ esi + 0x34 ]
mov [ eax ] edi
mov eax [ esi + 0x10 ]
mov [ eax ] edi
mov eax [ esi + 0x20 ]
mov [ eax ] edi
mov eax [ esi + 0x30 ]
mov [ eax ] edi
mov eax esi
call sub_10029f0b
retn 0x4
sub_10004936
push ebp
mov ebp esp
cmp [ ebp + 0xc ] 0x1
jne r-xdata
cmp [ ecx + 0x18 ] 0x8
jb r-xdata
cmp [ ecx + 0x18 ] 0x8
jb r-xdata
add ecx 0x4
mov ecx [ ecx + 0x4 ]
jmp r-xdata
add ecx 0x4
mov ecx [ ecx + 0x4 ]
jmp r-xdata
push [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
push [ ebp + 0x10 ]
lea eax [ ecx + eax * 2 ]
push eax
call sub_10006d8d
add esp 0xc
pop ebp
retn 0xc
mov eax [ ebp + 0x8 ]
mov dx [ ebp + 0x10 ]
mov [ ecx + eax * 2 ] dx
jmp r-xdata
sub_10004981
push ebp
mov ebp esp
sub esp 0xc
push ebx
mov ebx [ ebp + 0x14 ]
push esi
mov esi [ ebp + 0xc ]
push edi
mov edi [ ebp + 0x8 ]
call sub_10001807
mov ebx [ ebp + 0x1c ]
lea esi [ ebp - 0x8 ]
call sub_10001807
mov edi esi
mov esi [ ebp + 0xc ]
call sub_1000354a
test al al
je r-xdata
pop edi
mov eax esi
pop esi
pop ebx
leave
retn 0x18
mov edi [ ebp + 0x8 ]
push [ edi + 0x10 ]
mov eax [ esi + 0x4 ]
mov ecx [ ebp - 0x4 ]
call sub_10006024
pop ecx
push [ edi + 0x10 ]
mov ebx eax
call sub_10001540
mov [ edi + 0x10 ] ebx
sub_100049d9
push ebx
mov ebx eax
mov eax [ esi + 0x40 ]
and eax 0x6
cmp al 0x6
je r-xdata
pop ebx
retn 0x4
push edi
push 0x0
push ebx
call sub_10001d85
push ebx
push [ esp + 0x18 ]
mov edi eax
push ebx
push edi
call sub_10002444
lea eax [ ebx + ebx ]
add esp 0x18
test [ esi + 0x40 ] 0x4
lea ecx [ eax + edi ]
mov [ esi + 0x3c ] ecx
jne r-xdata
mov edx [ esi + 0x40 ]
test dl 0x2
jne r-xdata
mov edx [ esi + 0x10 ]
mov [ edx ] edi
mov edx [ esi + 0x20 ]
mov [ edx ] edi
mov ebx [ esi + 0x30 ]
mov edx eax
sar edx 0x1
mov [ ebx ] edx
or [ esi + 0x40 ] 0x1
pop edi
test dl 0x10
jne r-xdata
mov edx [ esi + 0x14 ]
mov [ edx ] edi
mov edx [ esi + 0x24 ]
sub eax ecx
mov [ edx ] ecx
mov ecx [ esi + 0x34 ]
add eax edi
sar eax 0x1
mov [ ecx ] eax
mov eax [ esi + 0x20 ]
cmp [ eax ] 0x0
jne r-xdata
mov ecx edi
mov eax [ esi + 0x10 ]
mov [ eax ] edi
mov eax [ esi + 0x20 ]
and [ eax ] 0x0
mov eax [ esi + 0x30 ]
sar edi 0x1
mov [ eax ] edi
sub_10004a69
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_1004c8c1
mov eax [ fs : 0x0 ]
push eax
sub esp 0x70
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x68 ] eax
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x80 ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0xc ]
mov ecx [ ebp + 0x18 ]
mov edi [ ebp + 0x8 ]
mov esi [ ebp + 0x20 ]
mov [ esp + 0x38 ] eax
lea eax [ esp + 0x3c ]
push eax
mov [ esp + 0x28 ] ecx
call sub_1000781e
and [ esp + 0x88 ] 0x0
push eax
call sub_10006086
or [ esp + 0x8c ] 0xffffffff
pop ecx
mov ebx eax
lea ecx [ esp + 0x3c ]
mov [ esp + 0x30 ] ebx
call sub_10007806
lea eax [ esp + 0x5c ]
push eax
mov ecx ebx
call sub_10005dd3
mov [ esp + 0x88 ] 0x1
mov eax [ ebx ]
mov ecx ebx
call [ eax + 0x8 ]
movzx eax ax
xor ebx ebx
push ebx
lea ecx [ esp + 0x44 ]
mov [ esp + 0x2c ] eax
mov [ esp + 0x5c ] 0xf
call sub_1000237a
lea eax [ edi + 0x8 ]
push eax
push ebx
push 0x30
mov [ esp + 0x94 ] 0x2
call sub_10006d61
movzx eax ax
mov [ esp + 0x2c ] eax
mov al [ esi ]
add esp 0xc
cmp al 0x2b
je r-xdata
mov [ esp + 0x2c ] 0x1
mov [ esp + 0x2c ] ebx
cmp al 0x2d
jne r-xdata
cmp [ esp + 0x74 ] 0x10
mov eax [ esp + 0x60 ]
jae r-xdata
mov [ ebp + 0x2c ] ebx
call sub_100264f9
mov eax [ eax ]
push [ ebp + 0x30 ]
mov al [ eax ]
push 0x65
push esi
mov [ esp + 0x20 ] al
mov [ esp + 0x21 ] 0x65
mov [ esp + 0x22 ] 0x0
call sub_10026520
push [ ebp + 0x30 ]
mov [ esp + 0x20 ] eax
movsx eax [ esp + 0x24 ]
push eax
push esi
call sub_10026520
add esp 0x18
mov [ esp + 0x18 ] eax
cmp eax ebx
jne r-xdata
cmp [ eax ] 0x7f
je r-xdata
lea eax [ esp + 0x60 ]
mov ecx [ ebp + 0x28 ]
mov eax [ ebp + 0x24 ]
mov edx [ esp + 0x24 ]
add eax ecx
add eax [ ebp + 0x2c ]
mov ecx [ edx + 0x18 ]
add eax [ ebp + 0x30 ]
cmp ecx ebx
jle r-xdata
cmp [ esp + 0x74 ] 0x10
mov eax [ esp + 0x60 ]
jae r-xdata
mov [ esp + 0x10 ] ebx
cmp ecx eax
jbe r-xdata
cmp [ eax ] 0x0
jle r-xdata
lea eax [ esp + 0x60 ]
movsx eax [ esp + 0x14 ]
push [ ebp + 0x30 ]
push eax
push esi
call sub_10026520
add esp 0xc
cmp eax ebx
je r-xdata
cmp eax 0x100
jne r-xdata
sub ecx eax
mov [ esp + 0x10 ] ecx
jmp r-xdata
push [ ebp + 0x30 ]
lea ecx [ esp + 0x44 ]
push esi
call sub_10006cc5
mov eax [ esp + 0x10 ]
cmp eax ebx
jne r-xdata
push [ ebp + 0x30 ]
push 0x65
push esi
call sub_10026520
add esp 0xc
cmp eax ebx
je r-xdata
push [ esp + 0x28 ]
sub eax esi
inc eax
mov ebx eax
lea eax [ ebx - 0x1 ]
push eax
push esi
push [ ebp + 0x14 ]
lea eax [ esp + 0x28 ]
push [ ebp + 0x10 ]
push eax
push edi
call sub_10005d00
mov ecx [ eax ]
push [ ebp + 0x24 ]
mov [ ebp + 0x10 ] ecx
push [ esp + 0x40 ]
mov ecx [ eax + 0x4 ]
mov [ ebp + 0x14 ] ecx
push [ eax + 0x4 ]
push [ eax ]
lea eax [ esp + 0x44 ]
push eax
push edi
call sub_100051f7
mov ecx [ eax ]
mov [ ebp + 0x10 ] ecx
mov eax [ eax + 0x4 ]
mov ecx [ esp + 0x64 ]
mov [ ebp + 0x14 ] eax
mov eax [ ecx ]
add esp 0x34
call [ eax + 0x4 ]
movzx eax ax
push 0x1
push eax
push [ ebp + 0x14 ]
lea eax [ esp + 0x3c ]
push [ ebp + 0x10 ]
push eax
push edi
call sub_100051f7
mov ecx [ eax ]
push [ ebp + 0x28 ]
mov [ ebp + 0x10 ] ecx
push [ esp + 0x3c ]
mov ecx [ eax + 0x4 ]
mov [ ebp + 0x14 ] ecx
push [ eax + 0x4 ]
push [ eax ]
lea eax [ esp + 0x58 ]
push eax
push edi
call sub_100051f7
mov ecx [ eax ]
sub [ ebp + 0x30 ] ebx
mov [ ebp + 0x10 ] ecx
mov eax [ eax + 0x4 ]
add esp 0x30
add esi ebx
mov [ ebp + 0x14 ] eax
xor ebx ebx
push [ esp + 0x10 ]
lea eax [ esp + 0x1c ]
push [ ebp + 0x1c ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push eax
push edi
call sub_100051f7
mov ecx [ eax ]
mov [ ebp + 0x10 ] ecx
mov eax [ eax + 0x4 ]
mov [ esp + 0x28 ] ebx
mov [ ebp + 0x14 ] eax
add esp 0x18
cmp [ esp + 0x2c ] ebx
jbe r-xdata
mov eax [ edx + 0x10 ]
and eax 0x1c0
cmp eax 0x40
je r-xdata
cmp [ esp + 0x18 ] ebx
jne r-xdata
push 0x30
push [ ebp + 0x2c ]
lea ecx [ esp + 0x48 ]
call sub_10005b68
jmp r-xdata
push [ esp + 0x28 ]
lea eax [ esp + 0x34 ]
push [ ebp + 0x30 ]
push esi
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push eax
push edi
call sub_10005d00
mov ecx [ eax ]
push [ ebp + 0x2c ]
mov [ ebp + 0x10 ] ecx
push [ esp + 0x40 ]
mov ecx [ eax + 0x4 ]
mov [ ebp + 0x14 ] ecx
push [ eax + 0x4 ]
push [ eax ]
lea eax [ esp + 0x44 ]
push eax
push edi
call sub_100051f7
mov ecx [ eax ]
push [ esp + 0x44 ]
mov edx [ esp + 0x5c ]
push [ ebp + 0x1c ]
mov [ ebp + 0x10 ] ecx
mov eax [ eax + 0x4 ]
push eax
push ecx
push [ esp + 0x7c ]
mov [ ebp + 0x14 ] eax
push edi
mov [ edx + 0x18 ] ebx
call sub_100051f7
add esp 0x4c
push ebx
push 0x1
lea ecx [ esp + 0x48 ]
call sub_100022b5
push ebx
push 0x1
lea ecx [ esp + 0x64 ]
call sub_100022b5
mov eax [ esp + 0x38 ]
mov ecx [ esp + 0x80 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ esp + 0x68 ]
xor ecx esp
call sub_10025c8d
mov esp ebp
pop ebp
retn
push [ esp + 0x28 ]
sub eax esi
inc eax
mov ebx eax
lea eax [ ebx - 0x1 ]
push eax
push esi
push [ ebp + 0x14 ]
lea eax [ esp + 0x40 ]
push [ ebp + 0x10 ]
push eax
push edi
call sub_10005d00
mov ecx [ eax ]
push [ ebp + 0x2c ]
mov [ ebp + 0x10 ] ecx
push [ esp + 0x40 ]
mov ecx [ eax + 0x4 ]
mov [ ebp + 0x14 ] ecx
push [ eax + 0x4 ]
push [ eax ]
lea eax [ esp + 0x5c ]
push eax
push edi
call sub_100051f7
mov ecx [ eax ]
and [ ebp + 0x2c ] 0x0
mov [ ebp + 0x10 ] ecx
mov ecx [ eax + 0x4 ]
mov [ ebp + 0x14 ] ecx
mov ecx [ esp + 0x58 ]
add esp 0x34
test [ ecx + 0x10 ] 0x4
mov ecx r--data
jne r-xdata
push 0x1
push esi
push [ ebp + 0x14 ]
lea eax [ esp + 0x24 ]
push [ ebp + 0x10 ]
push eax
push edi
call sub_10005cb5
mov ecx [ eax ]
add esp 0x18
mov [ ebp + 0x10 ] ecx
mov eax [ eax + 0x4 ]
inc esi
dec [ ebp + 0x30 ]
mov [ ebp + 0x14 ] eax
push 0x30
push [ ebp + 0x2c ]
sub eax esi
push eax
lea ecx [ esp + 0x4c ]
call sub_10005bb6
push 0x30
push [ ebp + 0x24 ]
lea ecx [ esp + 0x48 ]
call sub_10005b68
mov eax [ esp + 0x10 ]
mov [ ebp + 0x24 ] ebx
mov eax [ esp + 0x18 ]
push 0x30
lea ecx [ esp + 0x44 ]
cmp eax ebx
jne r-xdata
push 0x1
push ecx
push [ eax + 0x4 ]
push [ eax ]
lea eax [ esp + 0x40 ]
push eax
push edi
call sub_10005cb5
mov ecx [ eax ]
sub [ ebp + 0x30 ] ebx
mov [ ebp + 0x10 ] ecx
mov eax [ eax + 0x4 ]
add esp 0x18
add esi ebx
mov [ ebp + 0x14 ] eax
xor ebx ebx
mov ecx r--data
push [ ebp + 0x28 ]
sub eax esi
mov [ esp + 0x20 ] eax
inc eax
push eax
call sub_10005bb6
push 0x30
push [ ebp + 0x24 ]
lea ecx [ esp + 0x48 ]
push [ esp + 0x20 ]
call sub_10005bb6
mov [ ebp + 0x28 ] ebx
push [ ebp + 0x24 ]
call sub_10005b68
jmp r-xdata
lea eax [ esp + 0x14 ]
push eax
push ebx
lea ecx [ esp + 0x48 ]
call sub_10005c50
push eax
call sub_100265d0
pop ecx
pop ecx
mov [ esp + 0x10 ] eax
jmp r-xdata
lea esi [ esp + 0x60 ]
cmp [ esp + 0x74 ] 0x10
mov esi [ esp + 0x60 ]
mov [ ebp + 0x24 ] ebx
jae r-xdata
mov al [ esi ]
cmp al 0x7f
jne r-xdata
test al al
jle r-xdata
push ebx
lea ecx [ esp + 0x44 ]
call sub_10005c50
mov esi eax
mov eax [ esp + 0x54 ]
mov [ ebp + 0x2c ] ebx
mov [ ebp + 0x30 ] eax
mov ecx [ esp + 0x10 ]
sub ecx [ esp + 0x2c ]
movsx eax al
cmp eax ecx
jae r-xdata
sub [ esp + 0x10 ] eax
push ebx
push 0x1
push [ esp + 0x18 ]
lea ecx [ esp + 0x4c ]
call sub_10005bb6
lea eax [ esi + 0x1 ]
cmp [ eax ] 0x0
jle r-xdata
mov esi eax
sub_10004f69
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_1004c164
mov eax [ fs : 0x0 ]
push eax
sub esp 0x48
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x40 ] eax
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x58 ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
mov ebx [ ebp + 0x18 ]
mov esi [ ebp + 0x20 ]
mov [ esp + 0x10 ] eax
mov eax [ ebp + 0xc ]
mov [ esp + 0x28 ] eax
lea eax [ esp + 0x30 ]
push eax
mov ecx ebx
mov [ esp + 0x24 ] ebx
call sub_1000781e
and [ esp + 0x60 ] 0x0
push eax
call sub_10006086
or [ esp + 0x64 ] 0xffffffff
pop ecx
lea ecx [ esp + 0x30 ]
mov [ esp + 0x2c ] eax
call sub_10007806
mov ecx [ esp + 0x2c ]
lea eax [ esp + 0x34 ]
push eax
call sub_10005dd3
xor ecx ecx
inc ecx
mov [ esp + 0x60 ] ecx
mov al [ esi ]
cmp al 0x2b
je r-xdata
mov [ esp + 0x18 ] ecx
cmp al 0x2d
je r-xdata
cmp [ eax ] 0x7f
je r-xdata
lea eax [ esp + 0x38 ]
cmp al 0x30
jne r-xdata
mov edi [ ebx + 0x18 ]
test edi edi
jle r-xdata
cmp [ esp + 0x4c ] 0x10
mov eax ecx
jae r-xdata
and [ esp + 0x18 ] 0x0
jmp r-xdata
mov al [ esi + 0x1 ]
cmp al 0x78
je r-xdata
xor edi edi
cmp edi [ ebp + 0x24 ]
jbe r-xdata
cmp [ eax ] 0x0
jle r-xdata
lea eax [ esp + 0x38 ]
cmp [ esp + 0x4c ] 0x10
mov ecx [ esp + 0x38 ]
mov eax ecx
jae r-xdata
mov [ esp + 0x18 ] 0x2
jmp r-xdata
cmp al 0x58
jne r-xdata
mov ecx [ esp + 0x2c ]
mov eax [ ecx ]
call [ eax + 0x8 ]
movzx eax ax
push eax
push [ ebp + 0x24 ]
lea eax [ esp + 0x20 ]
push esi
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push eax
push [ esp + 0x28 ]
call sub_10005d00
mov ecx [ eax ]
push edi
push [ ebp + 0x1c ]
mov [ ebp + 0x10 ] ecx
mov eax [ eax + 0x4 ]
and [ ebx + 0x18 ] 0x0
push eax
push ecx
push [ esp + 0x54 ]
mov [ ebp + 0x14 ] eax
push [ esp + 0x40 ]
call sub_100051f7
add esp 0x34
push 0x0
push 0x1
lea ecx [ esp + 0x3c ]
call sub_100022b5
mov eax [ esp + 0x28 ]
mov ecx [ esp + 0x58 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ esp + 0x40 ]
xor ecx esp
call sub_10025c8d
mov esp ebp
pop ebp
retn
cmp eax 0x100
lea eax [ esp + 0x20 ]
je r-xdata
sub edi [ ebp + 0x24 ]
jmp r-xdata
cmp [ esp + 0x4c ] 0x10
jb r-xdata
push [ esp + 0x18 ]
push esi
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push eax
push [ esp + 0x24 ]
call sub_10005cb5
mov ecx [ eax ]
push edi
push [ ebp + 0x1c ]
mov [ ebp + 0x10 ] ecx
mov ecx [ eax + 0x4 ]
mov [ ebp + 0x14 ] ecx
push [ eax + 0x4 ]
mov ecx [ esp + 0x3c ]
push [ eax ]
sub [ ebp + 0x24 ] ecx
lea eax [ esp + 0x48 ]
push eax
push [ esp + 0x3c ]
add esi ecx
call sub_100051f7
add esp 0x30
push edi
push [ ebp + 0x1c ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push eax
push [ esp + 0x24 ]
call sub_100051f7
add esp 0x18
jmp r-xdata
mov eax [ ebx + 0x10 ]
and eax 0x1c0
cmp eax 0x40
je r-xdata
lea eax [ esp + 0x38 ]
mov [ esp + 0x14 ] eax
mov [ esp + 0x14 ] ecx
jmp r-xdata
mov ecx [ eax ]
mov [ ebp + 0x10 ] ecx
mov eax [ eax + 0x4 ]
xor edi edi
mov [ ebp + 0x14 ] eax
mov eax [ esp + 0x14 ]
mov al [ eax ]
cmp al 0x7f
jne r-xdata
mov edi [ ebp + 0x24 ]
jmp r-xdata
test al al
jle r-xdata
mov ecx edi
sub ecx [ esp + 0x18 ]
movsx eax al
cmp eax ecx
jae r-xdata
sub edi eax
mov eax [ ebp + 0x24 ]
sub eax edi
inc eax
push eax
lea ebx [ esi + edi ]
push ebx
push eax
lea eax [ esi + edi + 0x1 ]
push eax
call sub_1002601b
mov eax [ esp + 0x24 ]
add esp 0x10
inc [ ebp + 0x24 ]
inc eax
mov [ ebx ] 0x0
cmp [ eax ] 0x0
jle r-xdata
mov ebx [ esp + 0x20 ]
mov [ esp + 0x14 ] eax
sub_100051c2
push ebp
mov ebp esp
cmp [ ebp + 0x1c ] 0x0
jbe r-xdata
mov ecx [ ebp + 0x10 ]
mov eax [ ebp + 0xc ]
mov [ eax ] ecx
mov ecx [ ebp + 0x14 ]
mov [ eax + 0x4 ] ecx
pop ebp
retn
push esi
mov esi [ ebp + 0x18 ]
movzx eax [ esi ]
push eax
lea ecx [ ebp + 0x10 ]
call sub_10005d99
dec [ ebp + 0x1c ]
inc esi
inc esi
cmp [ ebp + 0x1c ] 0x0
ja r-xdata
pop esi
sub_100051f7
push ebp
mov ebp esp
cmp [ ebp + 0x1c ] 0x0
jbe r-xdata
mov ecx [ ebp + 0x10 ]
mov eax [ ebp + 0xc ]
mov [ eax ] ecx
mov ecx [ ebp + 0x14 ]
mov [ eax + 0x4 ] ecx
pop ebp
retn
push [ ebp + 0x18 ]
lea ecx [ ebp + 0x10 ]
call sub_10005d99
dec [ ebp + 0x1c ]
jne r-xdata
sub_10005220
push 0x64
mov eax sub_1004b664
call sub_10029e9c
mov eax [ ebp + 0xc ]
mov esi [ ebp + 0x8 ]
mov edi [ ebp + 0x10 ]
mov [ ebp - 0x6c ] eax
mov eax [ ebp + 0x14 ]
mov [ ebp - 0x5c ] eax
mov eax [ ebp + 0x1c ]
push eax
call sub_10006086
mov ebx eax
pop ecx
lea eax [ ebp - 0x48 ]
push eax
mov ecx ebx
call sub_10005dd3
xor eax eax
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x34 ] eax
je r-xdata
lea ebx [ esi + 0x8 ]
push ebx
push 0x0
push 0x30
mov [ ebp - 0x68 ] eax
mov [ ebp - 0x60 ] ebx
call sub_10006d61
mov esi [ ebp - 0x6c ]
add esp 0xc
push [ ebp - 0x5c ]
movzx eax ax
mov ecx edi
mov [ ebp - 0x64 ] eax
mov [ ebp - 0x54 ] esi
call sub_100063d9
test al al
jne r-xdata
mov eax [ ebx ]
mov ecx ebx
call [ eax + 0x8 ]
movzx eax ax
mov eax [ ebp + 0x18 ]
and eax 0xe00
cmp eax 0x400
jne r-xdata
push ebx
push 0x0
push 0x2b
call sub_10006d61
add esp 0xc
mov ecx edi
mov bx ax
call sub_10005dbf
cmp ax bx
jne r-xdata
cmp eax 0x800
jne r-xdata
mov [ ebp - 0x50 ] 0x8
jmp r-xdata
push [ ebp - 0x60 ]
push 0x0
push 0x2d
call sub_10006d61
add esp 0xc
mov ecx edi
mov bx ax
call sub_10005dbf
cmp ax bx
jne r-xdata
mov [ esi ] 0x2b
jmp r-xdata
neg eax
sbb eax eax
and eax 0xa
mov [ ebp - 0x50 ] eax
mov [ ebp - 0x50 ] 0x10
jmp r-xdata
push [ ebp - 0x5c ]
mov [ ebp - 0x58 ] 0x0
push edi
mov [ ebp - 0x49 ] 0x0
call sub_10006284
pop ecx
pop ecx
test al al
je r-xdata
mov [ esi ] 0x2d
lea eax [ esi + 0x1 ]
mov ecx edi
mov [ ebp - 0x54 ] eax
call sub_10005e6f
cmp [ ebp - 0x50 ] 0x0
je r-xdata
mov ecx edi
call sub_10005dbf
cmp ax [ ebp - 0x64 ]
jne r-xdata
mov [ ebp - 0x64 ] 0xa
cmp [ ebp - 0x50 ] 0xa
je r-xdata
mov ecx edi
mov [ ebp - 0x58 ] 0x1
call sub_10005e6f
push [ ebp - 0x5c ]
push edi
call sub_10006284
pop ecx
pop ecx
test al al
je r-xdata
cmp [ ebp - 0x30 ] 0x10
mov esi [ ebp - 0x44 ]
jae r-xdata
push [ ebp - 0x60 ]
mov ecx edi
call sub_10005dbf
movzx eax ax
push eax
call sub_10006bf6
mov esi [ ebp - 0x54 ]
push [ ebp - 0x64 ]
mov [ esi ] al
movsx eax al
push eax
push r--data
call sub_10026520
add esp 0x14
test eax eax
je r-xdata
xor eax eax
cmp [ ebp - 0x50 ] 0x8
setne al
dec eax
and eax 0xfffffff2
add eax 0x16
mov [ ebp - 0x64 ] eax
jmp r-xdata
cmp [ ebp - 0x50 ] 0x0
jne r-xdata
push [ ebp - 0x60 ]
push 0x0
push 0x78
call sub_10006d61
add esp 0xc
mov ecx edi
mov bx ax
call sub_10005dbf
cmp ax bx
je r-xdata
cmp [ ebp - 0x58 ] 0x0
je r-xdata
lea esi [ ebp - 0x44 ]
push ebx
lea ecx [ ebp - 0x2c ]
call sub_10005c50
cmp [ eax ] 0x0
je r-xdata
cmp [ ebp - 0x49 ] 0x0
jne r-xdata
push [ ebp - 0x58 ]
lea ecx [ ebp - 0x2c ]
push 0x1
call sub_10005b42
push [ ebp - 0x5c ]
add esi 0x1f
push edi
mov [ ebp - 0x4 ] 0x1
xor ebx ebx
mov [ ebp - 0x70 ] esi
call sub_10006284
pop ecx
pop ecx
test al al
je r-xdata
mov [ ebp - 0x50 ] 0x8
cmp [ ebp - 0x50 ] 0x0
je r-xdata
push [ ebp - 0x60 ]
push 0x0
push 0x58
call sub_10006d61
add esp 0xc
mov ecx edi
mov bx ax
call sub_10005dbf
cmp ax bx
jne r-xdata
mov eax [ ebp - 0x6c ]
mov [ ebp - 0x54 ] eax
test ebx ebx
jbe r-xdata
test ebx ebx
je r-xdata
cmp [ ebp - 0x68 ] 0x0
je r-xdata
cmp esi [ ebp - 0x70 ]
jae r-xdata
cmp [ esi ] 0x30
je r-xdata
mov ecx edi
mov [ ebp - 0x50 ] 0x10
mov [ ebp - 0x58 ] 0x0
call sub_10005e6f
jmp r-xdata
cmp [ ebp - 0x50 ] 0x10
jne r-xdata
cmp [ ebp - 0x49 ] 0x0
jne r-xdata
cmp [ esi ] 0x7f
je r-xdata
push ebx
lea ecx [ ebp - 0x2c ]
call sub_10005c50
cmp [ eax ] 0x0
jle r-xdata
mov ecx edi
call sub_10005dbf
cmp ax [ ebp - 0x68 ]
jne r-xdata
push ebx
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x58 ] 0x1
call sub_10005c50
cmp [ eax ] 0x7f
je r-xdata
inc esi
mov [ ebp - 0x54 ] esi
mov [ ebp - 0x49 ] 0x1
mov eax [ ebp - 0x54 ]
push 0x0
push 0x1
lea ecx [ ebp - 0x2c ]
mov [ eax ] 0x0
call sub_100022b5
push 0x0
push 0x1
lea ecx [ ebp - 0x48 ]
call sub_100022b5
mov eax [ ebp - 0x50 ]
call sub_10029f1f
retn
mov eax [ ebp - 0x54 ]
inc [ ebp - 0x54 ]
mov [ eax ] 0x30
jmp r-xdata
dec ebx
je r-xdata
mov [ ebp - 0x58 ] 0x0
inc ebx
jmp r-xdata
push 0x0
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_10005b68
inc ebx
mov ecx edi
call sub_10005e6f
push [ ebp - 0x5c ]
push edi
call sub_10006284
pop ecx
pop ecx
test al al
jne r-xdata
push ebx
lea ecx [ ebp - 0x2c ]
call sub_10005c50
inc [ eax ]
jmp r-xdata
test ebx ebx
jne r-xdata
push ebx
lea ecx [ ebp - 0x2c ]
call sub_10005c50
mov cl [ esi ]
cmp cl [ eax ]
jne r-xdata
lea eax [ esi + 0x1 ]
cmp [ eax ] 0x0
jle r-xdata
push ebx
lea ecx [ ebp - 0x2c ]
call sub_10005c50
mov cl [ esi ]
cmp cl [ eax ]
jl r-xdata
mov esi eax
jmp r-xdata
sub_10005570
push 0x60
mov eax sub_1004c12f
call sub_10029e9c
mov eax [ ebp + 0x14 ]
mov ebx [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
mov esi [ ebp + 0x10 ]
mov [ ebp - 0x58 ] eax
mov eax [ ebp + 0x18 ]
push eax
mov [ ebp - 0x68 ] ebx
call sub_10006086
pop ecx
mov ecx eax
lea eax [ ebp - 0x2c ]
push eax
mov [ ebp - 0x6c ] ecx
call sub_10005dd3
and [ ebp - 0x4 ] 0x0
add edi 0x8
push edi
push 0x0
push 0x30
mov [ ebp - 0x64 ] edi
call sub_10006d61
add esp 0xc
push [ ebp - 0x58 ]
movzx eax ax
mov ecx esi
mov [ ebp - 0x54 ] eax
mov [ ebp - 0x4a ] 0x0
call sub_100063d9
test al al
jne r-xdata
and [ ebp - 0x50 ] 0x0
and [ ebp - 0x60 ] 0x0
cmp [ ebp - 0x14 ] 0x10
mov eax [ ebp - 0x28 ]
mov [ ebp - 0x49 ] 0x0
jae r-xdata
push edi
push 0x0
push 0x2b
call sub_10006d61
add esp 0xc
mov ecx esi
mov di ax
call sub_10005dbf
cmp ax di
jne r-xdata
cmp [ eax ] 0x7f
je r-xdata
lea eax [ ebp - 0x28 ]
push [ ebp - 0x64 ]
push 0x0
push 0x2d
call sub_10006d61
add esp 0xc
mov ecx esi
mov di ax
call sub_10005dbf
cmp ax di
jne r-xdata
mov [ ebx ] 0x2b
jmp r-xdata
push [ ebp - 0x58 ]
push esi
call sub_10006284
pop ecx
pop ecx
test al al
je r-xdata
cmp [ ebp - 0x14 ] 0x10
mov eax [ ebp - 0x28 ]
jae r-xdata
mov ebx [ ebp - 0x68 ]
mov [ ebx ] 0x2d
mov ecx esi
inc ebx
call sub_10005e6f
push [ ebp - 0x58 ]
push esi
call sub_10006284
pop ecx
pop ecx
test al al
je r-xdata
mov ecx esi
call sub_10005dbf
cmp [ ebp - 0x54 ] ax
ja r-xdata
cmp [ eax ] 0x0
jle r-xdata
lea eax [ ebp - 0x28 ]
cmp [ ebp - 0x50 ] 0x0
jne r-xdata
mov ecx [ ebp - 0x6c ]
mov eax [ ecx ]
call [ eax + 0x4 ]
mov ecx esi
movzx edi ax
call sub_10005dbf
cmp ax di
jne r-xdata
cmp [ ebp - 0x49 ] 0x0
je r-xdata
mov ecx esi
call sub_10005dbf
movzx ecx [ ebp - 0x54 ]
movzx eax ax
add ecx 0x9
cmp eax ecx
jg r-xdata
mov ecx [ ebp - 0x6c ]
mov eax [ ecx ]
call [ eax + 0x8 ]
push 0x0
push 0x1
lea ecx [ ebp - 0x48 ]
movzx edi ax
call sub_10005b42
push [ ebp - 0x58 ]
and [ ebp - 0x5c ] 0x0
push esi
mov [ ebp - 0x4 ] 0x1
call sub_10006284
pop ecx
pop ecx
test al al
je r-xdata
push [ ebp - 0x58 ]
push esi
call sub_10006284
pop ecx
pop ecx
test al al
jne r-xdata
jmp r-xdata
call sub_100264f9
mov eax [ eax ]
mov al [ eax ]
mov [ ebx ] al
mov ecx esi
inc ebx
call sub_10005e6f
cmp [ ebp - 0x50 ] 0x0
jne r-xdata
cmp [ ebp - 0x50 ] 0x24
jl r-xdata
cmp [ ebp - 0x14 ] 0x10
mov edi [ ebp - 0x28 ]
jae r-xdata
mov ecx esi
call sub_10005dbf
cmp [ ebp - 0x54 ] ax
ja r-xdata
mov ecx esi
call sub_10005dbf
cmp [ ebp - 0x54 ] ax
ja r-xdata
cmp [ ebp - 0x49 ] 0x0
je r-xdata
push [ ebp - 0x58 ]
push esi
call sub_10006284
pop ecx
pop ecx
test al al
jne r-xdata
mov [ ebx ] 0x30
inc ebx
mov ecx esi
call sub_10005dbf
cmp ax [ ebp - 0x54 ]
jne r-xdata
inc [ ebp - 0x60 ]
jmp r-xdata
cmp [ ebp - 0x4a ] 0x0
jne r-xdata
lea edi [ ebp - 0x28 ]
push [ ebp - 0x5c ]
lea ecx [ ebp - 0x48 ]
call sub_10005c50
cmp [ eax ] 0x0
je r-xdata
mov ecx esi
call sub_10005dbf
movzx ecx [ ebp - 0x54 ]
movzx eax ax
add ecx 0x9
cmp eax ecx
jg r-xdata
mov ecx esi
call sub_10005dbf
movzx ecx [ ebp - 0x54 ]
movzx eax ax
add ecx 0x9
cmp eax ecx
jg r-xdata
cmp [ ebp - 0x4a ] 0x0
jne r-xdata
push [ ebp - 0x58 ]
push esi
call sub_10006284
pop ecx
pop ecx
test al al
je r-xdata
mov ecx esi
call sub_10005dbf
cmp ax [ ebp - 0x54 ]
jne r-xdata
cmp [ ebp - 0x60 ] 0x0
jge r-xdata
mov ecx esi
call sub_10005dbf
mov cl 0x30
sub cl [ ebp - 0x54 ]
add al cl
mov [ ebx ] al
inc ebx
inc [ ebp - 0x50 ]
cmp [ ebp - 0x50 ] 0x0
je r-xdata
mov ecx esi
mov [ ebp - 0x49 ] 0x1
call sub_10005e6f
push [ ebp - 0x58 ]
push esi
call sub_10006284
pop ecx
pop ecx
test al al
jne r-xdata
push 0x0
push 0x1
lea ecx [ ebp - 0x48 ]
mov [ ebp - 0x4 ] 0x0
call sub_100022b5
jmp r-xdata
cmp [ ebp - 0x5c ] 0x0
jbe r-xdata
cmp [ ebp - 0x5c ] 0x0
je r-xdata
test di di
je r-xdata
cmp [ ebp - 0x50 ] 0x24
mov [ ebp - 0x49 ] 0x1
jl r-xdata
cmp [ ebp - 0x50 ] 0x24
jge r-xdata
mov ebx [ ebp - 0x68 ]
cmp [ ebp - 0x49 ] 0x0
jne r-xdata
push [ ebp - 0x64 ]
push 0x0
push 0x65
call sub_10006d61
add esp 0xc
mov ecx esi
mov di ax
call sub_10005dbf
cmp ax di
je r-xdata
dec [ ebp - 0x60 ]
mov ecx esi
mov [ ebp - 0x49 ] 0x1
call sub_10005e6f
mov [ ebx ] 0x30
inc ebx
inc [ ebp - 0x60 ]
jmp r-xdata
cmp [ edi ] 0x7f
je r-xdata
push [ ebp - 0x5c ]
lea ecx [ ebp - 0x48 ]
call sub_10005c50
cmp [ eax ] 0x0
jle r-xdata
mov ecx esi
call sub_10005dbf
cmp ax di
jne r-xdata
mov ecx esi
call sub_10005dbf
cmp ax [ ebp - 0x54 ]
jne r-xdata
inc [ ebp - 0x60 ]
jmp r-xdata
mov ecx esi
mov [ ebp - 0x49 ] 0x1
call sub_10005e6f
mov ecx esi
call sub_10005dbf
mov cl 0x30
sub cl [ ebp - 0x54 ]
add al cl
mov [ ebx ] al
inc ebx
inc [ ebp - 0x50 ]
push 0x0
push 0x1
lea ecx [ ebp - 0x2c ]
mov [ ebx ] 0x0
call sub_100022b5
mov eax [ ebp - 0x60 ]
call sub_10029f1f
retn
mov [ ebx ] 0x65
mov ecx esi
inc ebx
call sub_10005e6f
push [ ebp - 0x58 ]
and [ ebp - 0x50 ] 0x0
mov ecx esi
mov [ ebp - 0x49 ] 0x0
call sub_100063d9
test al al
jne r-xdata
push [ ebp - 0x64 ]
push 0x0
push 0x45
call sub_10006d61
add esp 0xc
mov ecx esi
mov di ax
call sub_10005dbf
cmp ax di
jne r-xdata
dec [ ebp - 0x5c ]
je r-xdata
mov [ ebp - 0x4a ] 0x1
inc [ ebp - 0x5c ]
jmp r-xdata
push 0x0
push 0x1
lea ecx [ ebp - 0x48 ]
call sub_10005b68
inc [ ebp - 0x5c ]
mov ecx esi
call sub_10005dbf
mov cl 0x30
sub cl [ ebp - 0x54 ]
add al cl
mov [ ebx ] al
inc ebx
inc [ ebp - 0x50 ]
cmp [ ebp - 0x50 ] 0x0
je r-xdata
push [ ebp - 0x5c ]
lea ecx [ ebp - 0x48 ]
call sub_10005c50
cmp [ eax ] 0x7f
je r-xdata
push [ ebp - 0x58 ]
push esi
call sub_10006284
pop ecx
pop ecx
test al al
je r-xdata
push [ ebp - 0x64 ]
push 0x0
push 0x2b
call sub_10006d61
add esp 0xc
mov ecx esi
mov di ax
call sub_10005dbf
cmp ax di
jne r-xdata
cmp [ ebp - 0x5c ] 0x0
jne r-xdata
push [ ebp - 0x5c ]
lea ecx [ ebp - 0x48 ]
call sub_10005c50
mov cl [ edi ]
cmp cl [ eax ]
jne r-xdata
mov ecx esi
call sub_10005e6f
push [ ebp - 0x58 ]
push esi
call sub_10006284
pop ecx
pop ecx
test al al
jne r-xdata
push [ ebp - 0x5c ]
lea ecx [ ebp - 0x48 ]
call sub_10005c50
inc [ eax ]
jmp r-xdata
push [ ebp - 0x58 ]
push esi
call sub_10006284
pop ecx
pop ecx
test al al
jne r-xdata
mov ecx esi
call sub_10005dbf
cmp ax [ ebp - 0x54 ]
jne r-xdata
push [ ebp - 0x64 ]
push 0x0
push 0x2d
call sub_10006d61
add esp 0xc
mov ecx esi
mov di ax
call sub_10005dbf
cmp ax di
jne r-xdata
mov [ ebx ] 0x2b
jmp r-xdata
lea eax [ edi + 0x1 ]
cmp [ eax ] 0x0
jle r-xdata
push [ ebp - 0x5c ]
lea ecx [ ebp - 0x48 ]
call sub_10005c50
mov cl [ edi ]
cmp cl [ eax ]
jl r-xdata
mov [ ebp - 0x4a ] 0x1
mov ecx esi
call sub_10005dbf
cmp [ ebp - 0x54 ] ax
ja r-xdata
cmp [ ebp - 0x49 ] 0x0
je r-xdata
mov ecx esi
mov [ ebp - 0x49 ] 0x1
call sub_10005e6f
push [ ebp - 0x58 ]
push esi
call sub_10006284
pop ecx
pop ecx
test al al
jne r-xdata
mov [ ebx ] 0x2d
mov ecx esi
inc ebx
call sub_10005e6f
mov edi eax
jmp r-xdata
mov ecx esi
call sub_10005dbf
movzx ecx [ ebp - 0x54 ]
movzx eax ax
add ecx 0x9
cmp eax ecx
jg r-xdata
mov [ ebx ] 0x30
inc ebx
jmp r-xdata
cmp [ ebp - 0x50 ] 0x8
jge r-xdata
mov ecx esi
mov [ ebp - 0x49 ] 0x1
call sub_10005e6f
mov ecx esi
call sub_10005dbf
mov cl 0x30
sub cl [ ebp - 0x54 ]
add al cl
mov [ ebx ] al
inc ebx
inc [ ebp - 0x50 ]
sub_10005b68
push ebx
mov ebx [ esp + 0x8 ]
push edi
or eax 0xffffffff
mov edi ecx
sub eax [ edi + 0x14 ]
cmp eax ebx
ja r-xdata
test ebx ebx
jbe r-xdata
call sub_10022277
mov eax edi
pop edi
pop ebx
retn 0x8
push esi
mov esi [ edi + 0x14 ]
push 0x0
add esi ebx
push esi
mov ecx edi
call sub_10002300
test al al
je r-xdata
pop esi
push [ esp + 0x14 ]
mov ecx edi
push ebx
push [ edi + 0x14 ]
call sub_10005e27
push esi
mov ecx edi
call sub_1000237a
sub_10005bb6
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
mov esi ecx
cmp [ esi + 0x14 ] edi
jae r-xdata
or eax 0xffffffff
sub eax [ esi + 0x14 ]
cmp eax [ ebp + 0xc ]
ja r-xdata
call sub_100222af
cmp [ ebp + 0xc ] 0x0
jbe r-xdata
call sub_10022277
pop edi
mov eax esi
pop esi
pop ebp
retn 0xc
push ebx
mov ebx [ esi + 0x14 ]
add ebx [ ebp + 0xc ]
push 0x0
push ebx
mov ecx esi
call sub_10002300
test al al
je r-xdata
pop ebx
mov eax [ esi + 0x18 ]
lea ecx [ esi + 0x4 ]
cmp eax 0x10
jb r-xdata
mov [ ebp + 0x8 ] ecx
mov edx [ ecx ]
mov [ ebp + 0x8 ] edx
jmp r-xdata
mov edx [ esi + 0x14 ]
sub edx edi
push edx
mov edx [ ebp + 0x8 ]
sub eax edi
sub eax [ ebp + 0xc ]
add edx edi
push edx
add ecx edi
add ecx [ ebp + 0xc ]
push eax
push ecx
call sub_1000200e
add esp 0x10
push [ ebp + 0x10 ]
mov ecx esi
push [ ebp + 0xc ]
push edi
call sub_10005e27
push ebx
mov ecx esi
call sub_1000237a
mov ecx [ ecx ]
cmp eax 0x10
jb r-xdata
sub_10005c50
push esi
push edi
mov edi [ esp + 0xc ]
mov esi ecx
cmp edi [ esi + 0x14 ]
jbe r-xdata
cmp [ esi + 0x18 ] 0x10
jb r-xdata
call sub_100261ef
add esi 0x4
mov esi [ esi + 0x4 ]
jmp r-xdata
lea eax [ esi + edi ]
pop edi
pop esi
retn 0x4
sub_10005c78
push esi
push edi
mov edi [ esp + 0xc ]
mov esi ecx
cmp edi 0xffffffff
jne r-xdata
push 0x0
push edi
mov ecx esi
call sub_10001eb9
test al al
je r-xdata
call sub_10022277
pop edi
mov eax esi
pop esi
retn 0x8
push [ esp + 0x10 ]
mov ecx esi
push edi
push 0x0
call sub_10004936
push edi
mov ecx esi
call sub_10002460
sub_10005cb5
push ebp
mov ebp esp
cmp [ ebp + 0x1c ] 0x0
jbe r-xdata
mov ecx [ ebp + 0x10 ]
mov eax [ ebp + 0xc ]
mov [ eax ] ecx
mov ecx [ ebp + 0x14 ]
mov [ eax + 0x4 ] ecx
pop ebp
retn
push esi
mov esi [ ebp + 0x18 ]
push edi
mov edi [ ebp + 0x8 ]
add edi 0x8
movzx eax [ esi ]
push edi
push 0x0
push eax
call sub_10006d61
movzx eax ax
add esp 0xc
push eax
lea ecx [ ebp + 0x10 ]
call sub_10005d99
dec [ ebp + 0x1c ]
inc esi
cmp [ ebp + 0x1c ] 0x0
ja r-xdata
pop edi
pop esi
sub_10005d00
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x14
push ebx
mov ebx [ ebp + 0x1c ]
push esi
push edi
mov edi [ ebp + 0x18 ]
mov esi ebx
sub eax edi
mov esi eax
jmp r-xdata
mov edx [ eax ]
mov ecx [ ebp + 0xc ]
mov eax [ eax + 0x4 ]
pop edi
pop esi
mov [ ecx + 0x4 ] eax
mov [ ecx ] edx
mov eax ecx
pop ebx
mov esp ebp
pop ebp
retn
cmp [ ebp + 0x20 ] 0x0
je r-xdata
push esi
push edi
push [ ebp + 0x14 ]
lea eax [ esp + 0x1c ]
push [ ebp + 0x10 ]
push eax
push [ ebp + 0x8 ]
call sub_10005cb5
mov ecx [ eax ]
mov [ ebp + 0x10 ] ecx
mov ecx [ eax + 0x4 ]
add esp 0x18
add edi esi
sub ebx esi
mov [ ebp + 0x14 ] ecx
je r-xdata
inc edi
dec ebx
jmp r-xdata
push 0x1
push [ ebp + 0x20 ]
push [ eax + 0x4 ]
push [ eax ]
lea eax [ esp + 0x28 ]
push eax
push [ ebp + 0x8 ]
call sub_100051f7
mov ecx [ eax ]
mov [ ebp + 0x10 ] ecx
mov eax [ eax + 0x4 ]
add esp 0x18
mov [ ebp + 0x14 ] eax
push ebx
push 0x0
push edi
call sub_10026520
add esp 0xc
test eax eax
je r-xdata
sub_10005d99
push esi
mov esi ecx
mov ecx [ esi + 0x4 ]
test ecx ecx
je r-xdata
mov [ esi ] 0x1
push [ esp + 0x8 ]
call sub_10007888
mov ecx 0xffff
cmp cx ax
jne r-xdata
mov eax esi
pop esi
retn 0x4
sub_10005dea
push esi
push edi
mov edi [ esp + 0xc ]
mov esi ecx
cmp edi 0xffffffff
jne r-xdata
push 0x0
push edi
mov ecx esi
call sub_10002300
test al al
je r-xdata
call sub_10022277
pop edi
mov eax esi
pop esi
retn 0x8
push [ esp + 0x10 ]
mov ecx esi
push edi
push 0x0
call sub_10005e27
push edi
mov ecx esi
call sub_1000237a
sub_10005e27
push ebp
mov ebp esp
cmp [ ebp + 0xc ] 0x1
jne r-xdata
cmp [ ecx + 0x18 ] 0x10
jb r-xdata
cmp [ ecx + 0x18 ] 0x10
jb r-xdata
add ecx 0x4
mov ecx [ ecx + 0x4 ]
jmp r-xdata
add ecx 0x4
mov ecx [ ecx + 0x4 ]
jmp r-xdata
push [ ebp + 0x10 ]
mov eax [ ebp + 0x8 ]
push [ ebp + 0xc ]
add ecx eax
push ecx
call sub_10006aee
add esp 0xc
pop ebp
retn 0xc
mov eax [ ebp + 0x8 ]
mov dl [ ebp + 0x10 ]
mov [ ecx + eax ] dl
jmp r-xdata
sub_10005e6f
push esi
mov esi ecx
mov ecx [ esi ]
test ecx ecx
je r-xdata
and [ esi ] 0x0
mov [ esi + 0x4 ] 0x1
pop esi
retn
call sub_1003ecd7
mov ecx 0xffff
cmp cx ax
je r-xdata
mov [ esi + 0x4 ] 0x0
pop esi
retn
sub_10005e96
push esi
mov esi ecx
mov ecx [ esi ]
test ecx ecx
je r-xdata
and [ esi ] 0x0
call sub_1003e7e1
movzx eax ax
mov ecx 0xffff
cmp cx ax
je r-xdata
mov [ esi + 0x6 ] ax
jmp r-xdata
mov ax [ esi + 0x6 ]
mov [ esi + 0x4 ] 0x1
pop esi
retn
sub_10005ec4
cmp [ eax + 0x18 ] 0x8
mov edx [ eax + 0x14 ]
jb r-xdata
add eax 0x4
mov eax [ eax + 0x4 ]
jmp r-xdata
push edx
push eax
push [ ecx + 0x14 ]
push 0x0
call sub_10006a21
neg eax
sbb eax eax
inc eax
retn
sub_10005ee7
push 0x14
mov eax sub_1004b452
call sub_10029e33
push 0x0
lea ecx [ ebp - 0x14 ]
call sub_10022437
and [ ebp - 0x4 ] 0x0
mov esi [ rw-data ]
mov ecx rw-data
mov [ ebp - 0x10 ] esi
call sub_10007004
mov ecx [ ebp + 0x8 ]
push eax
call sub_10007039
mov edi eax
test edi edi
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
call sub_1002245f
mov eax edi
call sub_10029f0b
retn
test esi esi
je r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
push eax
call sub_1000629b
pop ecx
pop ecx
cmp eax 0xffffffff
jne r-xdata
mov edi esi
jmp r-xdata
mov edi [ ebp - 0x10 ]
mov ecx edi
mov [ rw-data ] edi
call sub_1000778d
push edi
call sub_10022634
pop ecx
push r--data
lea ecx [ ebp - 0x20 ]
call sub_10025f3c
push r--data
lea eax [ ebp - 0x20 ]
push eax
call sub_10029a01
sub_10005f87
push 0x14
mov eax sub_1004b452
call sub_10029e33
push 0x0
lea ecx [ ebp - 0x14 ]
call sub_10022437
and [ ebp - 0x4 ] 0x0
mov esi [ rw-data ]
mov ecx rw-data
mov [ ebp - 0x10 ] esi
call sub_10007004
mov ecx [ ebp + 0x8 ]
push eax
call sub_10007039
mov edi eax
test edi edi
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
call sub_1002245f
mov eax edi
call sub_10029f0b
retn
test esi esi
je r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
push eax
call sub_1000633a
pop ecx
pop ecx
cmp eax 0xffffffff
jne r-xdata
mov edi esi
jmp r-xdata
mov edi [ ebp - 0x10 ]
mov ecx edi
mov [ rw-data ] edi
call sub_1000778d
push edi
call sub_10022634
pop ecx
push r--data
lea ecx [ ebp - 0x20 ]
call sub_10025f3c
push r--data
lea eax [ ebp - 0x20 ]
push eax
call sub_10029a01
sub_10006024
push ebx
push esi
mov ebx eax
mov eax [ esp + 0xc ]
push edi
mov edi ecx
sub eax edi
push 0x1c
cdq
pop ecx
idiv ecx
mov esi eax
imul esi esi 0x1c
add esi ebx
cmp edi [ esp + 0x10 ]
je r-xdata
pop edi
mov eax esi
pop esi
pop ebx
retn
sub ebx edi
push 0xffffffff
push 0x0
push edi
lea ecx [ ebx + edi ]
call sub_10001f1a
add edi 0x1c
cmp edi [ esp + 0x10 ]
jne r-xdata
sub_10006062
push ebp
mov ebp esp
push ecx
push edi
xor eax eax
lea edi [ ebp - 0x4 ]
stosb [ edi ]
push [ ebp - 0x4 ]
push [ ebp + 0xc ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_10006853
add esp 0x10
pop edi
leave
retn 0x8
sub_10006086
push 0x14
mov eax sub_1004b452
call sub_10029e33
push 0x0
lea ecx [ ebp - 0x14 ]
call sub_10022437
and [ ebp - 0x4 ] 0x0
mov esi [ rw-data ]
mov ecx rw-data
mov [ ebp - 0x10 ] esi
call sub_10007004
mov ecx [ ebp + 0x8 ]
push eax
call sub_10007039
mov edi eax
test edi edi
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
call sub_1002245f
mov eax edi
call sub_10029f0b
retn
test esi esi
je r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
push eax
call sub_10006413
pop ecx
pop ecx
cmp eax 0xffffffff
jne r-xdata
mov edi esi
jmp r-xdata
mov edi [ ebp - 0x10 ]
mov ecx edi
mov [ rw-data ] edi
call sub_1000778d
push edi
call sub_10022634
pop ecx
push r--data
lea ecx [ ebp - 0x20 ]
call sub_10025f3c
push r--data
lea eax [ ebp - 0x20 ]
push eax
call sub_10029a01
sub_10006123
push 0x38
mov eax sub_1004c262
call sub_10029e9c
mov esi [ ebp + 0x14 ]
mov eax [ ebp + 0x8 ]
movzx ecx [ esi ]
mov [ ebp - 0x3c ] eax
mov eax [ ebp + 0xc ]
xor edx edx
mov [ ebp - 0x44 ] eax
test cx cx
je r-xdata
push 0x0
push [ ebp + 0x10 ]
lea ecx [ ebp - 0x2c ]
call sub_10005b42
and [ ebp - 0x4 ] 0x0
mov [ ebp - 0x40 ] 0xfffffffe
mov [ ebp - 0x38 ] 0x1
movzx eax cx
push 0x0
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_100022b5
mov eax [ ebp - 0x40 ]
call sub_10029f1f
retn
movzx eax [ esi + edi * 2 ]
test ax ax
je r-xdata
inc edx
movzx eax [ esi + edx * 2 ]
test ax ax
jne r-xdata
inc [ ebp + 0x10 ]
push [ ebp - 0x34 ]
lea ecx [ ebp - 0x2c ]
call sub_10005c50
cmp [ eax ] 0x0
je r-xdata
movzx ecx [ esi ]
cmp ax cx
jne r-xdata
add edi [ ebp - 0x38 ]
movzx eax [ esi + edi * 2 ]
cmp ax [ esi ]
je r-xdata
push [ ebp - 0x34 ]
lea ecx [ ebp - 0x2c ]
call sub_10005c50
movsx eax [ eax ]
add edi eax
jmp r-xdata
inc edi
movzx eax [ esi + edi * 2 ]
test ax ax
jne r-xdata
push 0x7f
pop ebx
cmp [ ebp - 0x38 ] ebx
jae r-xdata
test ax ax
je r-xdata
inc [ ebp - 0x34 ]
mov eax [ ebp - 0x34 ]
cmp eax [ ebp + 0x10 ]
jb r-xdata
cmp ax cx
je r-xdata
push [ ebp - 0x34 ]
lea ecx [ ebp - 0x2c ]
call sub_10005c50
mov [ eax ] bl
mov eax [ ebp - 0x34 ]
mov [ ebp - 0x40 ] eax
mov ebx [ ebp - 0x38 ]
push [ ebp - 0x44 ]
mov ecx [ ebp - 0x3c ]
call sub_100063d9
test al al
jne r-xdata
cmp [ ebp - 0x2d ] 0x0
je r-xdata
push 0x7f
pop ebx
cmp [ ebp - 0x38 ] ebx
jae r-xdata
mov ecx [ ebp - 0x3c ]
call sub_10005dbf
cmp [ esi + edi * 2 ] ax
jne r-xdata
push [ ebp - 0x44 ]
mov ecx [ ebp - 0x3c ]
call sub_100063d9
test al al
jne r-xdata
push [ ebp - 0x34 ]
lea ecx [ ebp - 0x2c ]
call sub_10005c50
mov [ eax ] bl
jmp r-xdata
mov ebx [ ebp - 0x38 ]
mov [ ebp - 0x2d ] 0x1
jmp r-xdata
mov ecx [ ebp - 0x3c ]
inc [ ebp - 0x38 ]
call sub_10005e6f
or [ ebp - 0x40 ] 0xffffffff
jmp r-xdata
xor edi edi
mov [ ebp - 0x2d ] 0x0
mov [ ebp - 0x34 ] edi
cmp [ ebp + 0x10 ] edi
jbe r-xdata
sub_1000629b
push 0x94
mov eax sub_1004b3f8
call sub_10029e33
xor edi edi
mov [ ebp - 0x10 ] edi
mov esi [ ebp + 0x8 ]
cmp esi edi
je r-xdata
push 0x4
pop eax
call sub_10029f0b
retn
cmp [ esi ] edi
jne r-xdata
push 0x10
call sub_10025dd6
pop ecx
mov [ ebp + 0x8 ] eax
mov [ ebp - 0x4 ] edi
cmp eax edi
je r-xdata
xor eax eax
mov ecx [ ebp + 0xc ]
lea eax [ ebp - 0x2c ]
push eax
call sub_100073c0
mov [ ebp - 0x4 ] 0x1
push eax
lea ecx [ ebp - 0xa0 ]
mov [ ebp - 0x10 ] 0x1
call sub_1000736b
mov ecx [ ebp + 0x8 ]
push edi
push eax
mov [ ebp - 0x10 ] 0x3
call sub_100064b6
jmp r-xdata
test [ ebp - 0x10 ] 0x1
je r-xdata
and [ ebp - 0x10 ] 0xfffffffd
lea ecx [ ebp - 0xa0 ]
call sub_100073dd
push 0x2
pop ecx
mov [ ebp - 0x4 ] ecx
mov [ esi ] eax
test [ ebp - 0x10 ] cl
je r-xdata
push edi
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_100022b5
sub_1000633a
push 0x94
mov eax sub_1004b3f8
call sub_10029e33
xor edi edi
mov [ ebp - 0x10 ] edi
mov esi [ ebp + 0x8 ]
cmp esi edi
je r-xdata
push 0x4
pop eax
call sub_10029f0b
retn
cmp [ esi ] edi
jne r-xdata
push 0x10
call sub_10025dd6
pop ecx
mov [ ebp + 0x8 ] eax
mov [ ebp - 0x4 ] edi
cmp eax edi
je r-xdata
xor eax eax
mov ecx [ ebp + 0xc ]
lea eax [ ebp - 0x2c ]
push eax
call sub_100073c0
mov [ ebp - 0x4 ] 0x1
push eax
lea ecx [ ebp - 0xa0 ]
mov [ ebp - 0x10 ] 0x1
call sub_1000736b
mov ecx [ ebp + 0x8 ]
push edi
push eax
mov [ ebp - 0x10 ] 0x3
call sub_100064d7
jmp r-xdata
test [ ebp - 0x10 ] 0x1
je r-xdata
and [ ebp - 0x10 ] 0xfffffffd
lea ecx [ ebp - 0xa0 ]
call sub_100073dd
push 0x2
pop ecx
mov [ ebp - 0x4 ] ecx
mov [ esi ] eax
test [ ebp - 0x10 ] cl
je r-xdata
push edi
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_100022b5
sub_100063d9
push ebx
push esi
push edi
mov edi ecx
xor ebx ebx
cmp [ edi + 0x4 ] bl
jne r-xdata
mov esi [ esp + 0x10 ]
cmp [ esi + 0x4 ] bl
jne r-xdata
call sub_10005e96
cmp [ edi ] ebx
jne r-xdata
mov ecx esi
call sub_10005e96
cmp [ esi ] ebx
je r-xdata
cmp [ esi ] ebx
je r-xdata
xor eax eax
xor eax eax
inc eax
jmp r-xdata
pop edi
pop esi
pop ebx
retn 0x4
sub_10006413
push 0x98
mov eax sub_1004c23c
call sub_10029e33
mov eax [ ebp + 0x8 ]
xor edi edi
mov [ ebp - 0x10 ] edi
cmp eax edi
je r-xdata
push 0x4
pop eax
call sub_10029f0b
retn
cmp [ eax ] edi
jne r-xdata
push 0x18
call sub_10025dd6
pop ecx
mov [ ebp - 0x14 ] eax
xor ebx ebx
inc ebx
push 0x3
mov [ ebp - 0x4 ] edi
pop esi
cmp eax edi
je r-xdata
xor eax eax
mov ecx [ ebp + 0xc ]
lea eax [ ebp - 0x30 ]
push eax
call sub_100073c0
mov [ ebp - 0x4 ] bl
push eax
lea ecx [ ebp - 0xa4 ]
mov [ ebp - 0x10 ] ebx
call sub_1000736b
push ebx
mov [ ebp - 0x4 ] 0x2
mov ecx [ ebp - 0x14 ]
push edi
push eax
mov [ ebp - 0x10 ] esi
call sub_100064f8
jmp r-xdata
test [ ebp - 0x10 ] bl
je r-xdata
and [ ebp - 0x10 ] 0xfffffffd
lea ecx [ ebp - 0xa4 ]
call sub_100073dd
mov ecx [ ebp + 0x8 ]
mov [ ebp - 0x4 ] esi
test [ ebp - 0x10 ] 0x2
mov [ ecx ] eax
je r-xdata
push edi
push ebx
lea ecx [ ebp - 0x30 ]
call sub_100022b5
sub_100064f8
push 0x4
mov eax sub_1004b33e
call sub_10029e33
mov esi ecx
mov [ ebp - 0x10 ] esi
mov eax [ ebp + 0xc ]
mov [ esi + 0x4 ] eax
push [ ebp + 0x10 ]
and [ ebp - 0x4 ] 0x0
push [ ebp + 0x8 ]
mov [ esi ] r--data
call sub_1000652e
mov eax esi
call sub_10029f0b
retn 0xc
sub_1000652e
push 0x14
mov eax sub_1004bf74
call sub_10029e66
mov esi ecx
mov [ ebp - 0x14 ] esi
call sub_100264f9
xor ebx ebx
mov edi eax
mov [ esi + 0x8 ] ebx
mov [ esi + 0x10 ] ebx
mov [ esi + 0x14 ] ebx
mov [ ebp - 0x4 ] ebx
call sub_1002290b
lea eax [ ebp - 0x20 ]
push eax
push ebx
push [ edi + 0x8 ]
call sub_100066e3
add esp 0xc
mov [ esi + 0x8 ] eax
call sub_1002290b
mov [ ebp - 0x20 ] eax
lea eax [ ebp - 0x20 ]
push eax
push ebx
push r--data
mov [ ebp - 0x1c ] edx
call sub_10006955
add esp 0xc
mov [ esi + 0x10 ] eax
call sub_1002290b
mov [ ebp - 0x20 ] eax
lea eax [ ebp - 0x20 ]
push eax
push ebx
push r--data
mov [ ebp - 0x1c ] edx
call sub_10006955
or [ ebp - 0x4 ] 0xffffffff
add esp 0xc
mov [ esi + 0x14 ] eax
call sub_1002290b
mov [ ebp - 0x20 ] eax
lea eax [ ebp - 0x20 ]
push eax
mov eax [ edi ]
mov [ ebp - 0x1c ] edx
movzx eax [ eax ]
push ebx
push eax
call sub_10006d61
mov [ esi + 0xc ] ax
call sub_1002290b
mov [ ebp - 0x20 ] eax
lea eax [ ebp - 0x20 ]
push eax
mov eax [ edi + 0x4 ]
mov [ ebp - 0x1c ] edx
movzx eax [ eax ]
push ebx
push eax
call sub_10006d61
add esp 0x18
mov [ esi + 0xe ] ax
cmp [ ebp + 0xc ] bl
je r-xdata
call sub_10029f0b
retn 0x8
call sub_1002290b
lea eax [ ebp - 0x20 ]
push eax
push ebx
push r--data
call sub_100066e3
mov [ esi + 0x8 ] eax
call sub_1002290b
mov [ ebp - 0x20 ] eax
lea eax [ ebp - 0x20 ]
push eax
push ebx
push 0x2e
mov [ ebp - 0x1c ] edx
call sub_10006d61
mov [ esi + 0xc ] ax
call sub_1002290b
mov [ ebp - 0x18 ] eax
lea eax [ ebp - 0x18 ]
push eax
push ebx
push 0x2c
mov [ ebp - 0x14 ] edx
call sub_10006d61
add esp 0x24
mov [ esi + 0xe ] ax
sub_10006661
push 0xc
mov eax sub_1004c598
call sub_10029e66
push [ ebp + 0x1c ]
xor edi edi
push [ ebp + 0x18 ]
lea esi [ ebp - 0x14 ]
push [ ebp + 0x14 ]
mov [ ebp - 0x14 ] edi
push [ ebp + 0x10 ]
call sub_10006825
mov ecx [ ebp + 0x8 ]
add esp 0x10
push [ ebp - 0x14 ]
call sub_1000670c
mov [ ebp - 0x4 ] edi
call sub_10029f0b
retn 0x18
lea ecx [ ebp + 0x10 ]
call sub_100068fb
movzx eax [ eax ]
mov ecx [ ebp + 0x8 ]
push eax
push 0x1
call sub_10005b68
lea ecx [ ebp + 0x10 ]
call sub_100067be
jmp r-xdata
lea eax [ ebp + 0x18 ]
push eax
lea ecx [ ebp + 0x10 ]
call sub_100067f9
test al al
jne r-xdata
sub_100066e3
push esi
push edi
mov edi [ esp + 0xc ]
push edi
call sub_10025d30
mov esi eax
inc esi
push esi
call sub_100233aa
pop ecx
pop ecx
mov ecx eax
jmp r-xdata
test esi esi
ja r-xdata
mov dl [ edi ]
dec esi
mov [ ecx ] dl
inc ecx
inc edi
pop edi
pop esi
retn
sub_1000670c
mov eax [ esp + 0x4 ]
push esi
mov esi ecx
push edi
mov edi [ esi + 0x14 ]
cmp edi eax
ja r-xdata
pop edi
pop esi
retn 0x4
cmp [ esi + 0x18 ] eax
je r-xdata
push 0x1
push eax
call sub_10002300
test al al
je r-xdata
push edi
mov ecx esi
call sub_1000237a
sub_10006739
push esi
mov esi ecx
mov eax [ esi ]
cmp eax 0xfffffffc
je r-xdata
mov eax [ esi + 0x4 ]
pop esi
retn
test eax eax
jne r-xdata
mov eax [ esi ]
cmp [ eax + 0x18 ] 0x10
jb r-xdata
call sub_100261ef
lea ecx [ eax + 0x4 ]
mov ecx [ eax + 0x4 ]
jmp r-xdata
call sub_100261ef
mov eax [ eax + 0x14 ]
add eax ecx
cmp [ esi + 0x4 ] eax
jb r-xdata
sub_10006770
push esi
mov esi ecx
mov eax [ esi ]
cmp eax 0xfffffffc
je r-xdata
inc [ esi + 0x4 ]
mov eax esi
pop esi
retn
test eax eax
jne r-xdata
mov eax [ esi ]
cmp [ eax + 0x18 ] 0x10
jb r-xdata
call sub_100261ef
lea ecx [ eax + 0x4 ]
mov ecx [ eax + 0x4 ]
jmp r-xdata
call sub_100261ef
mov eax [ eax + 0x14 ]
add eax ecx
cmp [ esi + 0x4 ] eax
jb r-xdata
sub_100067be
push esi
mov esi ecx
mov eax [ esi ]
cmp eax 0xfffffffc
je r-xdata
add [ esi + 0x4 ] 0x2
mov eax esi
pop esi
retn
test eax eax
jne r-xdata
mov eax [ esi ]
cmp [ eax + 0x18 ] 0x8
jb r-xdata
call sub_100261ef
lea ecx [ eax + 0x4 ]
mov ecx [ eax + 0x4 ]
jmp r-xdata
call sub_100261ef
mov eax [ eax + 0x14 ]
lea eax [ ecx + eax * 2 ]
cmp [ esi + 0x4 ] eax
jb r-xdata
sub_100067f9
push esi
mov esi ecx
mov eax [ esi ]
push edi
mov edi [ esp + 0xc ]
cmp eax 0xfffffffc
je r-xdata
mov eax [ esi + 0x4 ]
sub eax [ edi + 0x4 ]
pop edi
neg eax
sbb eax eax
inc eax
pop esi
retn 0x4
test eax eax
je r-xdata
call sub_100261ef
cmp eax [ edi ]
je r-xdata
sub_10006825
push ebp
mov ebp esp
sub esp 0x10
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x10 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp + 0x14 ]
mov [ ebp - 0xc ] eax
lea eax [ ebp - 0x8 ]
push eax
lea ecx [ ebp - 0x10 ]
call sub_100068ab
add [ esi ] eax
leave
retn
sub_10006853
push 0x8
mov eax sub_1004ce81
call sub_10029e66
mov esi ecx
mov eax [ ebp + 0xc ]
and [ ebp - 0x4 ] 0x0
mov [ ebp - 0x14 ] eax
mov eax [ ebp + 0xc ]
call sub_10029f0b
retn
mov ecx [ ebp + 0xc ]
push esi
call sub_10001a37
add [ ebp + 0xc ] 0x1c
pop ecx
add esi 0x1c
jmp r-xdata
cmp esi [ ebp + 0x8 ]
je r-xdata
sub_10006883
mov esi [ ebp - 0x14 ]
jmp r-xdata
push 0x0
cmp esi [ ebp + 0xc ]
jne r-xdata
push 0x1
mov ecx esi
call sub_1000247e
add esi 0x1c
push 0x0
call sub_10029a01
mov eax [ ebp + 0xc ]
call sub_10029f0b
retn
sub_100068ab
push esi
mov esi ecx
mov eax [ esi ]
push edi
mov edi [ esp + 0xc ]
cmp eax 0xfffffffc
je r-xdata
mov eax [ esi + 0x4 ]
sub eax [ edi + 0x4 ]
pop edi
sar eax 0x1
pop esi
retn 0x4
test eax eax
je r-xdata
call sub_100261ef
cmp eax [ edi ]
je r-xdata
sub_100068d4
push esi
mov esi ecx
mov eax [ esi ]
push edi
mov edi [ esp + 0xc ]
cmp eax 0xfffffffc
je r-xdata
mov eax [ esi + 0x4 ]
sub eax [ edi + 0x4 ]
pop edi
pop esi
retn 0x4
test eax eax
je r-xdata
call sub_100261ef
cmp eax [ edi ]
je r-xdata
sub_100068fb
push esi
mov esi ecx
mov eax [ esi ]
cmp eax 0xfffffffc
je r-xdata
mov eax [ esi + 0x4 ]
pop esi
retn
test eax eax
jne r-xdata
mov eax [ esi ]
cmp [ eax + 0x18 ] 0x8
jb r-xdata
call sub_100261ef
lea ecx [ eax + 0x4 ]
mov ecx [ eax + 0x4 ]
jmp r-xdata
call sub_100261ef
mov eax [ eax + 0x14 ]
lea eax [ ecx + eax * 2 ]
cmp [ esi + 0x4 ] eax
jb r-xdata
sub_10006933
push esi
push [ esp + 0x8 ]
mov esi ecx
call sub_10025d30
pop ecx
push eax
push [ esp + 0xc ]
mov ecx esi
push [ esi + 0x14 ]
push 0x0
call sub_10006a88
pop esi
retn 0x4
sub_10006955
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
push edi
push [ ebp + 0x8 ]
xor edi edi
mov [ ebp - 0xc ] edi
call sub_10025d30
mov esi eax
mov eax [ ebp + 0x8 ]
inc esi
pop ecx
mov ebx esi
mov [ ebp - 0x8 ] eax
je r-xdata
inc edi
xor ecx ecx
push 0x2
pop edx
mov eax edi
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_100233aa
and [ ebp - 0x10 ] 0x0
mov ebx eax
pop ecx
mov [ ebp - 0x8 ] ebx
jmp r-xdata
push [ ebp + 0x10 ]
lea eax [ ebp - 0xc ]
push eax
push ebx
push [ ebp - 0x8 ]
lea eax [ ebp - 0x4 ]
push eax
call sub_10022bbe
add esp 0x14
test eax eax
jle r-xdata
test edi edi
ja r-xdata
add [ ebp - 0x8 ] eax
sub ebx eax
inc edi
test ebx ebx
ja r-xdata
push [ ebp + 0x10 ]
lea eax [ ebp - 0x10 ]
push eax
push esi
push [ ebp + 0x8 ]
push ebx
call sub_10022bbe
add esp 0x14
test eax eax
jle r-xdata
pop edi
xor eax eax
mov [ ebx ] ax
mov eax [ ebp - 0x8 ]
pop esi
pop ebx
leave
retn
add [ ebp + 0x8 ] eax
dec edi
inc ebx
inc ebx
sub_100069f0
cmp [ esp + 0xc ] 0x0
jbe r-xdata
xor eax eax
retn
mov ecx [ esp + 0x8 ]
mov eax [ esp + 0x4 ]
movzx eax [ eax ]
cmp ax [ ecx ]
sbb eax eax
and eax 0xfffffffe
inc eax
retn
inc eax
inc eax
inc ecx
inc ecx
dec [ esp + 0xc ]
jne r-xdata
mov dx [ eax ]
cmp dx [ ecx ]
jne r-xdata
sub_10006a21
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
mov esi ecx
cmp [ esi + 0x14 ] edi
jae r-xdata
mov eax [ esi + 0x14 ]
mov ebx [ ebp + 0xc ]
sub eax edi
cmp eax ebx
jae r-xdata
call sub_100222af
mov eax [ ebp + 0x14 ]
cmp ebx eax
jae r-xdata
mov ebx eax
cmp [ esi + 0x18 ] 0x8
jb r-xdata
mov eax ebx
add esi 0x4
mov esi [ esi + 0x4 ]
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x10
cmp ebx [ ebp + 0x14 ]
jae r-xdata
push eax
push [ ebp + 0x10 ]
lea eax [ esi + edi * 2 ]
push eax
call sub_100069f0
add esp 0xc
test eax eax
jne r-xdata
xor eax eax
cmp ebx [ ebp + 0x14 ]
setne al
or eax 0xffffffff
jmp r-xdata
sub_10006a88
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
mov esi ecx
cmp [ esi + 0x14 ] edi
jae r-xdata
mov eax [ esi + 0x14 ]
mov ebx [ ebp + 0xc ]
sub eax edi
cmp eax ebx
jae r-xdata
call sub_100222af
mov eax [ ebp + 0x14 ]
cmp ebx eax
jae r-xdata
mov ebx eax
cmp [ esi + 0x18 ] 0x10
jb r-xdata
mov eax ebx
add esi 0x4
mov esi [ esi + 0x4 ]
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x10
cmp ebx [ ebp + 0x14 ]
jae r-xdata
push eax
push [ ebp + 0x10 ]
add esi edi
push esi
call sub_100266aa
add esp 0xc
test eax eax
jne r-xdata
xor eax eax
cmp ebx [ ebp + 0x14 ]
setne al
or eax 0xffffffff
jmp r-xdata
sub_10006b05
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0xc ]
push esi
push edi
mov edi [ ebp + 0x8 ]
mov esi ecx
cmp [ edi + 0x14 ] ebx
jae r-xdata
mov eax [ edi + 0x14 ]
sub eax ebx
mov ebx [ ebp + 0x10 ]
cmp eax ebx
jae r-xdata
call sub_100222af
or eax 0xffffffff
sub eax [ esi + 0x14 ]
cmp eax ebx
jbe r-xdata
mov ebx eax
mov [ ebp + 0x10 ] ebx
call sub_10022277
mov eax [ esi + 0x14 ]
lea ecx [ eax + ebx ]
cmp ecx eax
jae r-xdata
test ebx ebx
jbe r-xdata
pop edi
mov eax esi
pop esi
pop ebx
pop ebp
retn 0xc
mov eax [ esi + 0x14 ]
add eax ebx
push 0x0
push eax
mov ecx esi
mov [ ebp + 0x8 ] eax
call sub_10001eb9
test al al
je r-xdata
cmp [ edi + 0x18 ] 0x8
jb r-xdata
add edi 0x4
mov edi [ edi + 0x4 ]
jmp r-xdata
lea edx [ esi + 0x4 ]
mov edx [ esi + 0x4 ]
jmp r-xdata
mov eax [ esi + 0x18 ]
cmp eax 0x8
jb r-xdata
push [ ebp + 0x10 ]
mov ecx [ esi + 0x14 ]
mov ebx [ ebp + 0xc ]
lea edi [ edi + ebx * 2 ]
sub eax ecx
push edi
push eax
lea eax [ edx + ecx * 2 ]
push eax
call sub_10002444
add esp 0x10
push [ ebp + 0x8 ]
mov ecx esi
call sub_10002460
sub_10006bae
push edi
xor edi edi
push edi
push esi
xor ecx ecx
mov [ esi + 0x24 ] edi
mov [ esi + 0x4 ] edi
mov [ esi + 0xc ] edi
mov [ esi + 0x10 ] 0x201
mov [ esi + 0x14 ] 0x6
mov [ esi + 0x18 ] edi
mov [ esi + 0x1c ] edi
mov [ esi + 0x20 ] edi
call sub_100079b1
push 0x4
call sub_10025dd6
pop ecx
cmp eax edi
je r-xdata
xor eax eax
mov ecx eax
call sub_10006db7
jmp r-xdata
mov [ esi + 0x24 ] eax
pop edi
retn
sub_10006bf6
push ebp
mov ebp esp
push ecx
push ecx
push [ ebp + 0xc ]
and [ ebp - 0x8 ] 0x0
lea eax [ ebp - 0x8 ]
push eax
push [ ebp + 0x8 ]
lea eax [ ebp - 0x1 ]
push eax
mov [ ebp - 0x1 ] 0x0
call sub_10022884
mov al [ ebp - 0x1 ]
add esp 0x10
leave
retn
sub_10006c1e
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0xc ]
push esi
push edi
mov edi [ ebp + 0x8 ]
mov esi ecx
cmp [ edi + 0x14 ] ebx
jae r-xdata
mov eax [ edi + 0x14 ]
sub eax ebx
mov ebx [ ebp + 0x10 ]
cmp eax ebx
jae r-xdata
call sub_100222af
or eax 0xffffffff
sub eax [ esi + 0x14 ]
cmp eax ebx
jbe r-xdata
mov ebx eax
mov [ ebp + 0x10 ] ebx
call sub_10022277
mov eax [ esi + 0x14 ]
lea ecx [ eax + ebx ]
cmp ecx eax
jae r-xdata
test ebx ebx
jbe r-xdata
pop edi
mov eax esi
pop esi
pop ebx
pop ebp
retn 0xc
mov eax [ esi + 0x14 ]
add eax ebx
push 0x0
push eax
mov ecx esi
mov [ ebp + 0x8 ] eax
call sub_10002300
test al al
je r-xdata
cmp [ edi + 0x18 ] 0x10
jb r-xdata
add edi 0x4
mov edi [ edi + 0x4 ]
jmp r-xdata
lea edx [ esi + 0x4 ]
mov edx [ esi + 0x4 ]
jmp r-xdata
mov eax [ esi + 0x18 ]
cmp eax 0x10
jb r-xdata
push [ ebp + 0x10 ]
mov ecx [ esi + 0x14 ]
mov ebx [ ebp + 0xc ]
add edi ebx
sub eax ecx
push edi
push eax
add ecx edx
push ecx
call sub_1000235e
add esp 0x10
push [ ebp + 0x8 ]
mov ecx esi
call sub_1000237a
sub_10006cc5
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
push edi
mov esi ecx
call sub_10001fd3
test al al
je r-xdata
or eax 0xffffffff
sub eax [ esi + 0x14 ]
push ebx
mov ebx [ ebp + 0xc ]
cmp eax ebx
jbe r-xdata
cmp [ esi + 0x18 ] 0x10
jb r-xdata
call sub_10022277
mov eax [ esi + 0x14 ]
lea ecx [ eax + ebx ]
cmp ecx eax
jae r-xdata
lea eax [ esi + 0x4 ]
mov eax [ esi + 0x4 ]
jmp r-xdata
test ebx ebx
jbe r-xdata
pop edi
pop esi
pop ebp
retn 0x8
push [ ebp + 0xc ]
sub edi eax
push edi
push esi
mov ecx esi
call sub_10006c1e
jmp r-xdata
mov eax esi
pop ebx
mov edi [ esi + 0x14 ]
push 0x0
add edi ebx
push edi
mov ecx esi
call sub_10002300
test al al
je r-xdata
mov eax [ esi + 0x18 ]
cmp eax 0x10
jb r-xdata
lea edx [ esi + 0x4 ]
mov edx [ esi + 0x4 ]
jmp r-xdata
mov ecx [ esi + 0x14 ]
push ebx
push [ ebp + 0x8 ]
sub eax ecx
push eax
add ecx edx
push ecx
call sub_1000235e
add esp 0x10
push edi
mov ecx esi
call sub_1000237a
sub_10006d61
push ebp
mov ebp esp
push ecx
push ecx
push [ ebp + 0x10 ]
and [ ebp - 0x4 ] 0x0
and [ ebp - 0x8 ] 0x0
lea eax [ ebp - 0x8 ]
push eax
push 0x1
lea eax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x4 ]
push eax
call sub_10022bbe
mov ax [ ebp - 0x4 ]
add esp 0x14
leave
retn
sub_10006d8d
mov ecx [ esp + 0xc ]
test ecx ecx
jbe r-xdata
mov eax [ esp + 0x4 ]
retn
mov eax [ esp + 0x8 ]
movzx edx ax
mov eax edx
shl edx 0x10
push edi
mov edi [ esp + 0x8 ]
or eax edx
shr ecx 0x1
[ edi ]
adc ecx ecx
[ edi ]
pop edi
sub_10006dff
push ebp
mov ebp esp
push ecx
and [ ebp - 0x4 ] 0x0
cmp [ ebp + 0x10 ] 0x0
push edi
mov edi ecx
jle r-xdata
mov eax [ ebp - 0x4 ]
pop edi
leave
retn 0xc
push ebx
mov ebx [ ebp + 0x8 ]
push esi
xor esi esi
mov ecx [ edi + 0x30 ]
mov esi [ ecx ]
jmp r-xdata
mov eax [ edi ]
mov ecx edi
call [ eax + 0x14 ]
movzx eax ax
mov ecx 0xffff
cmp cx ax
je r-xdata
cmp [ ebp + 0x10 ] esi
jge r-xdata
test esi esi
jle r-xdata
pop esi
pop ebx
mov [ ebx ] ax
inc ebx
inc ebx
inc [ ebp - 0x4 ]
dec [ ebp + 0x10 ]
push esi
push [ eax ]
push [ ebp + 0xc ]
push ebx
call sub_10002444
mov eax [ edi + 0x30 ]
sub [ eax ] esi
mov eax [ edi + 0x20 ]
add [ ebp - 0x4 ] esi
sub [ ebp + 0x10 ] esi
lea ecx [ esi + esi ]
add esp 0x10
add ebx ecx
add [ eax ] ecx
jmp r-xdata
mov esi [ ebp + 0x10 ]
mov eax [ edi + 0x20 ]
cmp [ eax ] 0x0
je r-xdata
cmp [ ebp + 0x10 ] 0x0
jg r-xdata
sub_10006e87
push ebp
mov ebp esp
push ecx
and [ ebp - 0x4 ] 0x0
cmp [ ebp + 0xc ] 0x0
push edi
mov edi ecx
jle r-xdata
mov eax [ ebp - 0x4 ]
pop edi
leave
retn 0x8
push ebx
mov ebx [ ebp + 0x8 ]
push esi
xor ecx ecx
mov ecx [ edi + 0x34 ]
mov ecx [ ecx ]
jmp r-xdata
movzx eax [ ebx ]
mov edx [ edi ]
push eax
mov ecx edi
call [ edx + 0x4 ]
mov ecx 0xffff
cmp cx ax
je r-xdata
cmp [ ebp + 0xc ] ecx
mov esi ecx
jge r-xdata
test ecx ecx
jle r-xdata
pop esi
pop ebx
inc ebx
inc ebx
inc [ ebp - 0x4 ]
dec [ ebp + 0xc ]
push esi
push ebx
push ecx
push [ eax ]
call sub_10002444
mov eax [ edi + 0x34 ]
sub [ eax ] esi
mov eax [ edi + 0x24 ]
add [ ebp - 0x4 ] esi
sub [ ebp + 0xc ] esi
lea ecx [ esi + esi ]
add esp 0x10
add ebx ecx
add [ eax ] ecx
jmp r-xdata
mov esi [ ebp + 0xc ]
mov eax [ edi + 0x24 ]
cmp [ eax ] 0x0
je r-xdata
cmp [ ebp + 0xc ] 0x0
jg r-xdata
sub_10006f48
push esi
mov esi ecx
push edi
mov edi [ esi + 0x38 ]
mov [ esi ] r--data
test edi edi
je r-xdata
pop edi
lea ecx [ esi + 0x4 ]
pop esi
jmp sub_100223b4
mov ecx edi
call sub_10007806
push edi
call sub_10025c9c
pop ecx
sub_10006f71
push esi
lea esi [ ecx - 0x4 ]
lea eax [ esi + 0x4 ]
mov ecx [ eax - 0x4 ]
mov ecx [ ecx + 0x4 ]
mov [ ecx + eax - 0x4 ] r--data
push eax
mov [ eax ] r--data
call sub_10022359
test [ esp + 0xc ] 0x1
pop ecx
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_10025c9c
pop ecx
sub_10006fa7
push esi
lea esi [ ecx - 0x8 ]
lea eax [ esi + 0x8 ]
mov ecx [ eax - 0x8 ]
mov ecx [ ecx + 0x4 ]
mov [ ecx + eax - 0x8 ] r--data
push eax
mov [ eax ] r--data
call sub_10022359
test [ esp + 0xc ] 0x1
pop ecx
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_10025c9c
pop ecx
sub_10007004
push ebp
mov ebp esp
push ecx
push esi
mov esi ecx
cmp [ esi ] 0x0
jne r-xdata
mov eax [ esi ]
pop esi
leave
retn
push 0x0
lea ecx [ ebp - 0x4 ]
call sub_10022437
cmp [ esi ] 0x0
jne r-xdata
lea ecx [ ebp - 0x4 ]
call sub_1002245f
inc [ rw-data ]
mov eax [ rw-data ]
mov [ esi ] eax
sub_10007039
mov ecx [ ecx ]
push esi
mov esi [ esp + 0x8 ]
cmp esi [ ecx + 0xc ]
jae r-xdata
xor eax eax
mov eax [ ecx + 0x8 ]
mov eax [ eax + esi * 4 ]
jmp r-xdata
pop esi
retn 0x4
cmp [ ecx + 0x14 ] al
je r-xdata
test eax eax
jne r-xdata
call sub_1002256f
cmp esi [ eax + 0xc ]
jae r-xdata
xor eax eax
mov eax [ eax + 0x8 ]
mov eax [ eax + esi * 4 ]
jmp r-xdata
sub_100070c7
push esi
mov esi [ esp + 0xc ]
push edi
mov edi ecx
jmp r-xdata
cmp esi [ esp + 0x14 ]
jne r-xdata
movzx eax [ esi ]
mov edx [ edi ]
push eax
push [ esp + 0x10 ]
mov ecx edi
call [ edx + 0x8 ]
test al al
jne r-xdata
pop edi
mov eax esi
pop esi
retn 0xc
inc esi
inc esi
sub_100070f3
push esi
mov esi [ esp + 0xc ]
push edi
mov edi ecx
jmp r-xdata
cmp esi [ esp + 0x14 ]
jne r-xdata
movzx eax [ esi ]
mov edx [ edi ]
push eax
push [ esp + 0x10 ]
mov ecx edi
call [ edx + 0x8 ]
test al al
je r-xdata
pop edi
mov eax esi
pop esi
retn 0xc
inc esi
inc esi
sub_1000711f
push esi
mov esi [ esp + 0x8 ]
cmp esi [ esp + 0xc ]
je r-xdata
mov eax esi
pop esi
retn 0x8
push edi
lea edi [ ecx + 0x8 ]
movzx eax [ esi ]
push edi
push eax
call sub_10022d9f
mov [ esi ] ax
inc esi
inc esi
pop ecx
pop ecx
cmp esi [ esp + 0x10 ]
jne r-xdata
pop edi
sub_1000715e
push esi
mov esi [ esp + 0x8 ]
cmp esi [ esp + 0xc ]
je r-xdata
mov eax esi
pop esi
retn 0x8
push edi
lea edi [ ecx + 0x8 ]
movzx eax [ esi ]
push edi
push eax
call sub_10022d32
mov [ esi ] ax
inc esi
inc esi
pop ecx
pop ecx
cmp esi [ esp + 0x10 ]
jne r-xdata
pop edi
sub_100071be
push ebp
mov ebp esp
push ecx
push ecx
and [ ebp - 0x8 ] 0x0
add ecx 0x18
push ecx
lea eax [ ebp - 0x8 ]
push eax
push 0x1
lea eax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x4 ]
push eax
call sub_10022bbe
add esp 0x14
test eax eax
mov eax 0xffff
jl r-xdata
leave
retn 0x4
movzx eax [ ebp - 0x4 ]
sub_100071f2
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push ebx
push esi
mov esi [ ebp + 0x8 ]
sub eax esi
mov ebx ecx
cmp [ ebp + 0x14 ] eax
jae r-xdata
cmp esi [ ebp + 0xc ]
je r-xdata
call sub_100261ef
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x10
push edi
mov edi [ ebp + 0x10 ]
movzx eax [ esi ]
push eax
mov ecx ebx
call sub_100071be
mov [ edi ] ax
inc esi
inc edi
inc edi
cmp esi [ ebp + 0xc ]
jne r-xdata
pop edi
sub_10007233
push ebp
mov ebp esp
mov edx [ ebp + 0xc ]
sub edx [ ebp + 0x8 ]
mov eax [ ecx ]
sar edx 0x1
push edx
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ eax + 0x38 ]
pop ebp
retn 0x10
sub_10007259
push ebp
mov ebp esp
sub esp 0x10
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
and [ ebp - 0x10 ] 0x0
mov eax ecx
add eax 0x18
push eax
lea eax [ ebp - 0x10 ]
push eax
push [ ebp + 0x8 ]
lea eax [ ebp - 0xc ]
push eax
call sub_10022884
add esp 0x10
cmp eax 0x1
mov al [ ebp + 0xc ]
jne r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10025c8d
leave
retn 0x8
mov al [ ebp - 0xc ]
sub_1000729f
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push ebx
push esi
mov esi [ ebp + 0x8 ]
sub eax esi
sar eax 0x1
mov ebx ecx
cmp [ ebp + 0x18 ] eax
jae r-xdata
cmp esi [ ebp + 0xc ]
je r-xdata
call sub_100261ef
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x14
push edi
mov edi [ ebp + 0x14 ]
movzx eax [ esi ]
push [ ebp + 0x10 ]
mov ecx ebx
push eax
call sub_10007259
inc esi
inc esi
mov [ edi ] al
inc edi
cmp esi [ ebp + 0xc ]
jne r-xdata
pop edi
sub_100072e4
push ebp
mov ebp esp
sub esp 0x10
push esi
lea eax [ ebp - 0x10 ]
push edi
push eax
call sub_10022a2e
mov esi eax
mov eax [ ebp + 0x8 ]
mov edi eax
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop ecx
movsd [ edi ] [ esi ]
pop edi
pop esi
leave
retn 0x4
sub_1000731a
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
push edi
lea eax [ ebp - 0x10 ]
mov ebx ecx
mov ecx [ ebp + 0x8 ]
push eax
call sub_100072e4
mov esi eax
lea edi [ ebx + 0x8 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
call sub_1002290b
pop edi
pop esi
mov [ ebx + 0x18 ] eax
mov [ ebx + 0x1c ] edx
pop ebx
leave
retn 0x4
sub_1000736b
push 0x4
mov eax sub_1004c063
call sub_10029e33
mov esi ecx
mov [ ebp - 0x10 ] esi
push 0x0
call sub_10022437
and [ ebp - 0x4 ] 0x0
lea ecx [ esi + 0x4 ]
call sub_10007bb4
lea ecx [ esi + 0x20 ]
call sub_10007bb4
lea ecx [ esi + 0x3c ]
call sub_10007bb4
lea ecx [ esi + 0x58 ]
call sub_10007bb4
push [ ebp + 0x8 ]
mov [ ebp - 0x4 ] 0x4
push esi
call sub_10022828
pop ecx
pop ecx
mov eax esi
call sub_10029f0b
retn 0x4
sub_100073dd
push 0x4
mov eax sub_1004c063
call sub_10029e33
mov esi ecx
mov [ ebp - 0x10 ] esi
push esi
mov [ ebp - 0x4 ] 0x4
call sub_10022672
pop ecx
push 0x0
push 0x1
lea ecx [ esi + 0x58 ]
call sub_100022b5
push 0x0
push 0x1
lea ecx [ esi + 0x3c ]
call sub_100022b5
push 0x0
push 0x1
lea ecx [ esi + 0x20 ]
call sub_100022b5
push 0x0
push 0x1
lea ecx [ esi + 0x4 ]
call sub_100022b5
or [ ebp - 0x4 ] 0xffffffff
mov ecx esi
call sub_1002245f
call sub_10029f0b
retn
sub_1000743d
push 0x94
mov eax sub_1004b3f8
call sub_10029e33
xor edi edi
mov [ ebp - 0x10 ] edi
mov esi [ ebp + 0x8 ]
cmp esi edi
je r-xdata
push 0x2
pop eax
call sub_10029f0b
retn
cmp [ esi ] edi
jne r-xdata
push 0x20
call sub_10025dd6
pop ecx
mov [ ebp + 0x8 ] eax
mov [ ebp - 0x4 ] edi
cmp eax edi
je r-xdata
xor eax eax
mov ecx [ ebp + 0xc ]
lea eax [ ebp - 0x2c ]
push eax
call sub_100073c0
mov [ ebp - 0x4 ] 0x1
push eax
lea ecx [ ebp - 0xa0 ]
mov [ ebp - 0x10 ] 0x1
call sub_1000736b
mov ecx [ ebp + 0x8 ]
push edi
push eax
mov [ ebp - 0x10 ] 0x3
call sub_1000734c
jmp r-xdata
test [ ebp - 0x10 ] 0x1
je r-xdata
and [ ebp - 0x10 ] 0xfffffffd
lea ecx [ ebp - 0xa0 ]
call sub_100073dd
mov [ ebp - 0x4 ] 0x2
test [ ebp - 0x10 ] 0x2
mov [ esi ] eax
je r-xdata
push edi
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_100022b5
sub_100074de
push 0x14
mov eax sub_1004b452
call sub_10029e33
push 0x0
lea ecx [ ebp - 0x14 ]
call sub_10022437
and [ ebp - 0x4 ] 0x0
mov esi [ rw-data ]
mov ecx rw-data
mov [ ebp - 0x10 ] esi
call sub_10007004
mov ecx [ ebp + 0x8 ]
push eax
call sub_10007039
mov edi eax
test edi edi
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
call sub_1002245f
mov eax edi
call sub_10029f0b
retn
test esi esi
je r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
push eax
call sub_1000743d
pop ecx
pop ecx
cmp eax 0xffffffff
jne r-xdata
mov edi esi
jmp r-xdata
mov edi [ ebp - 0x10 ]
mov ecx edi
mov [ rw-data ] edi
call sub_1000778d
push edi
call sub_10022634
pop ecx
push r--data
lea ecx [ ebp - 0x20 ]
call sub_10025f3c
push r--data
lea eax [ ebp - 0x20 ]
push eax
call sub_10029a01
sub_1000757b
push esi
mov esi ecx
mov eax [ esi ]
call [ eax + 0x10 ]
mov ecx 0xffff
mov edx ecx
cmp dx ax
jne r-xdata
mov eax [ esi + 0x30 ]
dec [ eax ]
mov eax [ esi + 0x20 ]
mov ecx [ eax ]
lea edx [ ecx + 0x2 ]
mov [ eax ] edx
movzx eax [ ecx ]
pop esi
retn
mov eax ecx
pop esi
retn
sub_100075ad
mov ecx [ esi + 0x20 ]
xor eax eax
cmp [ ecx ] eax
je r-xdata
cmp eax 0x1
jle r-xdata
mov eax [ esi + 0x30 ]
mov eax [ eax ]
mov ecx esi
call sub_1003ecd7
mov ecx 0xffff
mov edx ecx
cmp dx ax
jne r-xdata
mov eax [ esi + 0x30 ]
dec [ eax ]
mov eax [ esi + 0x20 ]
add [ eax ] 0x2
mov eax [ esi + 0x20 ]
mov eax [ eax ]
movzx eax [ eax ]
retn
mov ecx esi
call sub_1003e7e1
movzx eax ax
retn
mov eax ecx
retn
sub_10007612
push 0x4
mov eax sub_1004dce4
call sub_10029e66
mov edi [ ebp + 0x8 ]
mov eax [ edi ]
mov eax [ eax + 0x4 ]
add eax edi
mov ecx [ eax + 0x8 ]
test ecx ecx
jne r-xdata
mov ecx [ eax + 0x8 ]
or ecx 0x2
cmp [ eax + 0x28 ] 0x0
jne r-xdata
mov eax [ eax + 0x2c ]
test eax eax
je r-xdata
push 0x0
push eax
call sub_100079b1
xor al al
or ecx 0x4
cmp [ ebp + 0xc ] 0x0
jne r-xdata
mov esi eax
call sub_10010ae4
mov eax [ edi ]
mov eax [ eax + 0x4 ]
add eax edi
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ edi ]
mov ecx [ eax + 0x4 ]
mov ecx [ ecx + edi + 0x10 ]
test cl 0x1
je r-xdata
mov al 0x1
jmp r-xdata
lea ecx [ ebp + 0xc ]
push ecx
mov ecx [ eax + 0x4 ]
add ecx edi
call sub_1000781e
and [ ebp - 0x4 ] 0x0
push eax
call sub_100074de
pop ecx
lea ecx [ ebp + 0xc ]
mov ebx eax
call sub_10007806
mov [ ebp - 0x4 ] 0x1
mov eax [ edi ]
mov eax [ eax + 0x4 ]
mov ecx [ eax + edi + 0x28 ]
call sub_1003e7e1
call sub_10029f0b
retn 0x8
mov edx [ ebx ]
push eax
push 0x48
mov ecx ebx
call [ edx + 0x8 ]
test al al
jne r-xdata
mov eax [ edi ]
mov eax [ eax + 0x4 ]
add eax edi
mov ecx [ eax + 0x8 ]
or ecx 0x1
cmp [ eax + 0x28 ] 0x0
jne r-xdata
mov eax [ edi ]
mov eax [ eax + 0x4 ]
mov esi [ eax + edi + 0x28 ]
call sub_100075ad
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
jmp r-xdata
push 0x0
push eax
call sub_100079b1
jmp r-xdata
or ecx 0x4
movzx eax ax
movzx eax ax
mov ecx 0xffff
cmp cx ax
jne r-xdata
sub_100076e9
mov ecx [ ebp + 0x8 ]
mov eax [ ecx ]
mov eax [ eax + 0x4 ]
add eax ecx
mov ecx [ eax + 0x8 ]
or ecx 0x4
cmp [ eax + 0x28 ] 0x0
jne r-xdata
push 0x1
push eax
call sub_100079b1
or [ ebp - 0x4 ] 0xffffffff
mov eax r-xdata
retn
or ecx 0x4
sub_10007749
push 0x0
mov eax sub_1004e06c
call sub_10029e33
mov eax [ ebp + 0xc ]
mov esi [ ebp + 0x8 ]
mov [ esi ] eax
mov ecx [ eax ]
mov ecx [ ecx + 0x4 ]
mov eax [ ecx + eax + 0x28 ]
test eax eax
je r-xdata
push [ ebp + 0x10 ]
and [ ebp - 0x4 ] 0x0
push [ esi ]
call sub_10007612
mov [ esi + 0x4 ] al
mov eax esi
call sub_10029f0b
retn 0xc
lea ecx [ eax + 0x4 ]
call sub_100223cb
sub_1000778d
push ebp
mov ebp esp
push ecx
push esi
mov esi ecx
push 0x0
lea ecx [ ebp - 0x4 ]
call sub_10022437
mov eax [ esi + 0x4 ]
cmp eax 0xffffffff
jae r-xdata
lea ecx [ ebp - 0x4 ]
call sub_1002245f
pop esi
leave
retn
inc eax
mov [ esi + 0x4 ] eax
sub_100077cb
push ebp
mov ebp esp
push ecx
push esi
push edi
mov edi ecx
push 0x0
lea ecx [ ebp - 0x4 ]
call sub_10022437
mov eax [ edi + 0x4 ]
test eax eax
jbe r-xdata
mov esi [ edi + 0x4 ]
neg esi
sbb esi esi
not esi
lea ecx [ ebp - 0x4 ]
and esi edi
call sub_1002245f
pop edi
mov eax esi
pop esi
leave
retn
cmp eax 0xffffffff
jae r-xdata
dec eax
mov [ edi + 0x4 ] eax
sub_10007831
push ebx
mov ebx [ esp + 0x8 ]
push esi
mov esi [ esp + 0x10 ]
push edi
mov edi ecx
and [ edi ] 0x0
test esi esi
je r-xdata
call sub_100261ef
test ebx ebx
je r-xdata
mov edx [ esi + 0x18 ]
lea eax [ esi + 0x4 ]
cmp edx 0x10
jb r-xdata
mov ecx eax
mov ecx [ eax ]
jmp r-xdata
cmp edx 0x10
jb r-xdata
cmp ecx ebx
ja r-xdata
mov ecx [ esi + 0x14 ]
add ecx eax
cmp ebx ecx
jbe r-xdata
mov eax [ eax ]
mov [ edi ] esi
mov [ edi + 0x4 ] ebx
mov eax edi
pop edi
pop esi
pop ebx
retn 0x8
sub_10007888
mov eax [ ecx + 0x24 ]
cmp [ eax ] 0x0
je r-xdata
xor eax eax
mov eax [ ecx + 0x34 ]
mov eax [ eax ]
jmp r-xdata
push [ esp + 0x4 ]
mov eax [ ecx ]
call [ eax + 0x4 ]
mov eax [ ecx + 0x34 ]
dec [ eax ]
mov eax [ ecx + 0x24 ]
mov ecx [ eax ]
lea edx [ ecx + 0x2 ]
mov [ eax ] edx
mov eax [ esp + 0x4 ]
mov [ ecx ] ax
jmp r-xdata
test eax eax
jle r-xdata
movzx eax ax
retn 0x4
sub_100078c4
push 0x4
mov eax sub_1004c104
call sub_10029e33
mov esi ecx
mov [ ebp - 0x10 ] esi
call sub_10025e3b
and [ ebp - 0x4 ] 0x0
push [ ebp + 0x8 ]
lea ecx [ esi + 0xc ]
mov [ esi ] r--data
call sub_10001c9f
mov eax esi
call sub_10029f0b
retn 0x4
sub_10007977
push 0x4
mov eax sub_1004c104
call sub_10029e33
mov esi ecx
mov [ ebp - 0x10 ] esi
mov edi [ ebp + 0x8 ]
push edi
call sub_10025ebc
and [ ebp - 0x4 ] 0x0
add edi 0xc
push edi
lea ecx [ esi + 0xc ]
mov [ esi ] r--data
call sub_10001c9f
mov eax esi
call sub_10029f0b
retn 0x4
sub_100079b1
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_1004ca16
mov eax [ fs : 0x0 ]
push eax
sub esp 0x90
push ebx
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x98 ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
and ecx 0x17
mov [ eax + 0x8 ] ecx
mov eax [ eax + 0xc ]
and eax ecx
je r-xdata
mov ecx [ esp + 0x98 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop ebx
mov esp ebp
pop ebp
retn 0x8
xor ebx ebx
cmp [ ebp + 0xc ] bl
je r-xdata
test al 0x4
je r-xdata
push ebx
push ebx
push 0x2
pop ebx
test bl al
je r-xdata
push r--data
lea ecx [ esp + 0x38 ]
call sub_10001b81
lea eax [ esp + 0x34 ]
push eax
lea ecx [ esp + 0x10 ]
mov [ esp + 0xa4 ] ebx
call sub_100078c4
mov [ esp + 0xc ] r--data
push r--data
lea eax [ esp + 0x10 ]
push r--data
lea ecx [ esp + 0x7c ]
call sub_10001b81
lea eax [ esp + 0x78 ]
push eax
lea ecx [ esp + 0x54 ]
mov [ esp + 0xa4 ] ebx
call sub_100078c4
mov [ esp + 0x50 ] r--data
push r--data
lea eax [ esp + 0x54 ]
jmp r-xdata
push r--data
lea ecx [ esp + 0x38 ]
call sub_10001b81
lea eax [ esp + 0x34 ]
push eax
lea ecx [ esp + 0x10 ]
mov [ esp + 0xa4 ] 0x1
call sub_100078c4
mov [ esp + 0xc ] r--data
push r--data
lea eax [ esp + 0x10 ]
jmp r-xdata
call sub_10029a01
push eax
jmp r-xdata
sub_10007b0c
push ebx
mov ebx [ esp + 0x8 ]
push esi
mov esi [ esp + 0x10 ]
push edi
mov edi ecx
and [ edi ] 0x0
test esi esi
je r-xdata
call sub_100261ef
test ebx ebx
je r-xdata
mov edx [ esi + 0x18 ]
lea eax [ esi + 0x4 ]
cmp edx 0x8
jb r-xdata
mov ecx eax
mov ecx [ eax ]
jmp r-xdata
cmp edx 0x8
jb r-xdata
cmp ecx ebx
ja r-xdata
mov ecx [ esi + 0x14 ]
lea eax [ eax + ecx * 2 ]
cmp ebx eax
jbe r-xdata
mov eax [ eax ]
mov [ edi ] esi
mov [ edi + 0x4 ] ebx
mov eax edi
pop edi
pop esi
pop ebx
retn 0x8
sub_10007b5c
cmp [ ecx + 0x18 ] 0x8
jb r-xdata
lea eax [ ecx + 0x4 ]
mov eax [ ecx + 0x4 ]
jmp r-xdata
push ecx
mov ecx [ ecx + 0x14 ]
lea eax [ eax + ecx * 2 ]
mov ecx [ esp + 0x8 ]
push eax
call sub_10007b0c
mov eax [ esp + 0x4 ]
retn 0x4
sub_10007b82
push esi
mov esi ecx
push esi
mov [ esi ] r--data
call sub_10022359
test [ esp + 0xc ] 0x1
pop ecx
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_10025c9c
pop ecx
sub_10007bc9
push 0x3c
mov eax sub_1004e678
call sub_10029e33
mov esi [ ebp + 0x8 ]
push 0x4
mov eax esi
call sub_10009936
and [ ebp - 0x4 ] 0x0
mov ecx [ ebp + 0xc ]
lea eax [ esi + 0x18 ]
push eax
mov [ esi ] r--data
call sub_10001127
push r--data
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x4 ] 0x1
call sub_10001254
lea edi [ esi + 0xf4 ]
lea eax [ ebp - 0x2c ]
mov [ ebp - 0x4 ] 0x2
mov ebx r--data
push eax
lea ecx [ edi + 0x4 ]
mov [ edi ] ebx
call sub_10001fad
and [ edi + 0x20 ] 0x0
push 0x0
push 0x1
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x4 ] 0x4
call sub_1000247e
push r--data
lea ecx [ ebp - 0x48 ]
call sub_10001254
lea edi [ esi + 0x118 ]
lea eax [ ebp - 0x48 ]
mov [ ebp - 0x4 ] 0x5
push eax
lea ecx [ edi + 0x4 ]
mov [ edi ] ebx
call sub_10001fad
xor ebx ebx
mov [ edi + 0x20 ] ebx
push ebx
push 0x1
lea ecx [ ebp - 0x48 ]
mov [ ebp - 0x4 ] 0x7
call sub_1000247e
lea edi [ esi + 0x13c ]
push ebx
mov eax edi
mov [ ebp - 0x10 ] edi
call sub_10009936
mov [ ebp - 0x4 ] 0x8
mov ecx [ ebp + 0xc ]
lea eax [ edi + 0x18 ]
push eax
mov [ edi ] r--data
call sub_10001127
add edi 0xf4
mov [ ebp - 0x4 ] 0x9
push 0x4
mov eax edi
mov [ ebp + 0xc ] edi
call sub_10009936
mov [ ebp - 0x4 ] 0xa
mov [ edi ] r--data
add edi 0x18
push edi
call sub_10002d5b
mov [ esi + 0x260 ] ebx
mov eax esi
call sub_10029f0b
retn 0x8
sub_10007cee
push 0x4
mov eax sub_1004e603
call sub_10029e33
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
lea ecx [ esi + 0x13c ]
mov [ ebp - 0x4 ] 0x3
call sub_10009e00
lea ecx [ esi + 0x118 ]
mov [ ebp - 0x4 ] 0x2
call sub_100099d6
lea ecx [ esi + 0xf4 ]
mov [ ebp - 0x4 ] 0x1
call sub_100099d6
lea edi [ esi + 0x18 ]
call sub_1000253c
or [ ebp - 0x4 ] 0xffffffff
mov ecx esi
call sub_10009970
call sub_10029f0b
retn
sub_10007d4e
push 0x24
mov eax sub_1004eea6
call sub_10029ed2
mov eax [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
add eax 0x50
push eax
call sub_1000bc1c
pop ecx
lea edi [ ebp - 0x30 ]
mov [ ebp - 0x4 ] 0x2
call sub_1000c2e6
mov ecx edi
mov [ ebp - 0x4 ] 0x3
call sub_1000bee0
push 0x0
push 0x1
mov ecx edi
call sub_1000247e
call sub_10029f2e
retn 0x4
sub_10007da4
push 0x28
mov eax sub_1004ef8e
call sub_10029ed2
and [ ebp - 0x4 ] 0x0
mov esi ecx
mov [ ebp - 0x34 ] esi
call sub_1000c1b5
cmp al 0x1
je r-xdata
call sub_10029f2e
retn
or [ ebp - 0x4 ] 0xffffffff
jmp sub_10007dd5
sub_10007dd5
lea eax [ ebp - 0x30 ]
call sub_100081e4
lea edx [ esi + 0x30 ]
lea ecx [ ebp - 0x30 ]
mov [ ebp - 0x4 ] 0x2
call sub_10008135
test al al
je r-xdata
push esi
call sub_10007f3f
mov eax esi
call sub_10007fae
jmp r-xdata
push 0x0
push 0x1
lea ecx [ ebp - 0x30 ]
call sub_1000247e
call sub_10029f2e
retn
sub_10007e46
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_1004ec95
mov eax [ fs : 0x0 ]
push eax
sub esp 0x28
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x38 ]
mov [ fs : 0x0 ] eax
mov esi ecx
lea ebx [ esi + 0xf4 ]
mov eax [ ebx ]
mov ecx ebx
call [ eax + 0x8 ]
cmp al 0x1
jne r-xdata
lea eax [ esi + 0x260 ]
inc [ eax ]
mov ecx [ eax ]
push 0xa
pop edx
cmp ecx edx
jle r-xdata
lea eax [ esi + 0x13c ]
push eax
call sub_1000a308
and [ esi + 0x260 ] 0x0
jmp r-xdata
lea eax [ esp + 0x1c ]
push eax
call sub_10002d5b
and [ esp + 0x40 ] 0x0
add esi 0x30
push esi
lea eax [ esp + 0x20 ]
call sub_10001335
lea eax [ esp + 0x1c ]
push eax
call sub_10008008
pop ecx
mov [ esp + 0x14 ] eax
test eax eax
je r-xdata
mov [ eax ] edx
lea eax [ esi + 0x13c ]
push eax
call sub_10014b90
mov ecx [ esp + 0x38 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
lea esi [ esp + 0x1c ]
call sub_10001477
push [ esp + 0x1c ]
call sub_10025c9c
pop ecx
mov esi [ Sleep@IAT ]
mov edi 0x7d0
push edi
call esi
mov [ esp + 0x18 ] r--data
push [ esp + 0x14 ]
mov [ esp + 0x44 ] 0x1
call sub_10021c7c
push edi
call esi
mov eax [ ebx ]
mov ecx ebx
call [ eax + 0x8 ]
sub_10007f3f
push 0x4
mov eax sub_1004ef6b
call sub_10029e66
mov edi [ ebp + 0x8 ]
lea esi [ edi + 0x118 ]
mov eax [ esi ]
mov ecx esi
call [ eax + 0x8 ]
test al al
jne r-xdata
call sub_10029f0b
retn 0x4
push edi
call sub_10007d4e
mov eax [ esi ]
mov ecx esi
call [ eax + 0x4 ]
mov ecx [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
call sub_10007e46
or [ ebp - 0x4 ] 0xffffffff
call sub_10027d3c
xor edx edx
mov ecx 0x186a0
div ecx
push edx
call [ Sleep@IAT ]
jmp r-xdata
call sub_1000c1b5
test al al
jne r-xdata
sub_10007fae
push esi
push edi
mov edi eax
lea esi [ edi + 0xf4 ]
mov eax [ esi ]
mov ecx esi
call [ eax + 0x8 ]
test al al
jne r-xdata
pop edi
pop esi
retn
push edi
call sub_10007d4e
mov eax [ esi ]
mov ecx esi
call [ eax + 0x4 ]
mov esi [ Sleep@IAT ]
push 0xfa0
call esi
add edi 0x13c
push edi
call sub_10014b90
jmp r-xdata
call sub_1000c1b5
test al al
je r-xdata
call sub_10027d3c
xor edx edx
mov ecx 0x36ee80
div ecx
push edx
call esi
sub_10008008
push 0x268
mov eax sub_1004dcb4
call sub_10029e9c
call sub_10015457
mov [ ebp - 0x248 ] r--data
mov [ ebp - 0x244 ] eax
mov [ ebp - 0x248 ] r--data
lea eax [ ebp - 0x248 ]
xor esi esi
push eax
lea edi [ ebp - 0x240 ]
mov [ ebp - 0x4 ] esi
call sub_100154d7
test al al
jne r-xdata
lea eax [ ebp - 0x21c ]
push eax
lea ecx [ ebp - 0x274 ]
call sub_10001254
mov edi [ ebp + 0x8 ]
mov [ ebp - 0x4 ] 0x1
mov ebx [ edi + 0xc ]
lea esi [ ebp - 0x250 ]
call sub_10001807
lea ecx [ ebp - 0x248 ]
mov [ ebp - 0x248 ] r--data
call sub_10015935
mov eax esi
call sub_10029f1f
retn
call sub_100261ef
cmp eax [ ebp - 0x258 ]
je r-xdata
xor bl bl
lea esi [ ebp - 0x250 ]
call sub_1000a447
mov edx eax
lea ecx [ ebp - 0x274 ]
call sub_10008135
mov bl 0x1
cmp al bl
je r-xdata
mov eax [ ebp - 0x24c ]
cmp eax [ ebp - 0x254 ]
je r-xdata
mov esi [ ebp - 0x238 ]
jmp r-xdata
lea eax [ ebp - 0x248 ]
push eax
lea edi [ ebp - 0x240 ]
call sub_10015582
test al al
jne r-xdata
push 0x0
push 0x1
lea ecx [ ebp - 0x274 ]
mov [ ebp - 0x4 ] 0x0
call sub_1000247e
test bl bl
jne r-xdata
call sub_1000351f
jmp r-xdata
xor esi esi
jmp r-xdata
mov edi [ ebp + 0x8 ]
mov ebx [ edi + 0x10 ]
lea esi [ ebp - 0x258 ]
call sub_10001807
mov eax [ ebp - 0x250 ]
test eax eax
je r-xdata
sub_10008135
push 0x64
mov eax sub_1004ce5c
call sub_10029e9c
mov eax [ ecx + 0x14 ]
mov esi edx
cmp eax [ esi + 0x14 ]
jae r-xdata
mov edx [ esi + 0x14 ]
push edx
sub eax edx
push eax
lea eax [ ebp - 0x2c ]
push eax
call sub_100081f9
and [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x34 ]
call sub_10006db7
push eax
mov eax esi
lea ecx [ ebp - 0x6c ]
mov [ ebp - 0x4 ] 0x1
call sub_10008245
pop ecx
mov esi eax
lea ecx [ ebp - 0x30 ]
call sub_10006db7
push eax
lea eax [ ebp - 0x2c ]
lea ecx [ ebp - 0x50 ]
mov [ ebp - 0x4 ] 0x3
call sub_10008245
pop ecx
mov ecx eax
mov eax esi
mov [ ebp - 0x4 ] 0x4
call sub_10005ec4
push 0x0
push 0x1
lea ecx [ ebp - 0x50 ]
mov bl al
call sub_1000247e
lea ecx [ ebp - 0x30 ]
call sub_10007806
push 0x0
push 0x1
lea ecx [ ebp - 0x6c ]
call sub_1000247e
lea ecx [ ebp - 0x34 ]
call sub_10007806
push 0x0
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_1000247e
mov al bl
xor al al
jmp r-xdata
call sub_10029f1f
retn
sub_100081f9
push ebp
mov ebp esp
push ecx
and [ ebp - 0x4 ] 0x0
lea eax [ ebp + 0xb ]
push eax
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push ecx
mov ecx [ ebp + 0x8 ]
call sub_1000821b
mov eax [ ebp + 0x8 ]
leave
retn 0xc
sub_1000821b
push esi
mov esi ecx
push 0x0
mov [ esi + 0x18 ] 0x7
call sub_10002460
push [ esp + 0x10 ]
mov ecx esi
push [ esp + 0x10 ]
push [ esp + 0x10 ]
call sub_10001f1a
mov eax esi
pop esi
retn 0x10
sub_10008245
push ebp
mov ebp esp
push ecx
push ecx
and [ ebp - 0x4 ] 0x0
push ebx
push [ ebp + 0x8 ]
mov ebx ecx
call sub_1000825f
pop ecx
mov eax ebx
pop ebx
leave
retn
sub_1000825f
push ebp
mov ebp esp
sub esp 0x24
and [ ebp - 0x8 ] 0x0
push esi
mov esi eax
cmp [ esi + 0x18 ] 0x8
push edi
jb r-xdata
lea eax [ esi + 0x4 ]
mov eax [ esi + 0x4 ]
jmp r-xdata
mov ecx [ esi + 0x14 ]
lea eax [ eax + ecx * 2 ]
push esi
push eax
lea ecx [ ebp - 0xc ]
call sub_10007b0c
mov eax [ ebp - 0xc ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x10 ] eax
lea eax [ ebp - 0xc ]
push eax
mov ecx esi
call sub_10007aec
mov eax [ ebp - 0xc ]
mov [ ebp - 0x24 ] eax
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x20 ] eax
mov eax [ ebp + 0x8 ]
push 0x0
mov ecx ebx
mov [ ebp - 0x1c ] eax
mov [ ebx + 0x18 ] 0x7
call sub_10002460
push [ ebp + 0x8 ]
lea esi [ ebp - 0x18 ]
sub esp 0xc
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
sub esp 0xc
mov edi esp
lea esi [ ebp - 0x24 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push ebx
movsd [ edi ] [ esi ]
call sub_100082ef
pop edi
mov eax ebx
pop esi
leave
retn
sub_100082ef
push 0x4
mov eax sub_1004ce19
call sub_10029e66
and [ ebp - 0x4 ] 0x0
call sub_10029f0b
retn 0x20
lea ecx [ ebp + 0xc ]
call sub_100068fb
push [ ebp + 0x14 ]
movzx esi [ eax ]
call sub_100074de
mov edx [ eax ]
pop ecx
push esi
mov ecx eax
call [ edx + 0x20 ]
mov ecx [ ebp + 0x8 ]
movzx eax ax
push eax
push 0x1
call sub_100036a7
lea ecx [ ebp + 0xc ]
call sub_100067be
jmp r-xdata
lea eax [ ebp + 0x18 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_100067f9
test al al
jne r-xdata
sub_1000838c
push 0x88
mov eax sub_1004ec5d
call sub_10029e9c
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x88 ] eax
mov eax [ ebp + 0xc ]
push 0xf
pop edi
mov [ ebp - 0x84 ] eax
mov eax [ ebp + 0x10 ]
xor esi esi
mov ebx ecx
push esi
lea ecx [ ebp - 0x64 ]
mov [ ebp - 0x8c ] eax
mov [ ebp - 0x90 ] esi
mov [ ebp - 0x4c ] edi
call sub_1000237a
mov [ ebp - 0x4 ] esi
push esi
lea ecx [ ebp - 0x48 ]
mov [ ebp - 0x30 ] edi
call sub_1000237a
push esi
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x14 ] edi
call sub_1000237a
mov eax [ ebp - 0x88 ]
mov edx [ ebp - 0x8c ]
add eax 0x58
push eax
lea ecx [ ebp - 0x48 ]
mov [ ebp - 0x4 ] 0x2
call sub_10010f46
mov eax [ ebx ]
pop ecx
lea ecx [ ebp - 0x2c ]
push ecx
lea ecx [ ebp - 0x48 ]
push ecx
mov ecx ebx
call [ eax + 0x4 ]
cmp [ ebp - 0x18 ] esi
ja r-xdata
lea eax [ ebp - 0x2c ]
push eax
lea eax [ ebp - 0x80 ]
push eax
call sub_10008a33
mov edi [ ebp - 0x84 ]
mov ecx [ ebp - 0x88 ]
lea eax [ ebp - 0x80 ]
push eax
lea eax [ ebp - 0x2c ]
push eax
mov [ ebp - 0x4 ] 0x3
call sub_100084bf
xor edi edi
push esi
inc edi
push edi
lea ecx [ ebp - 0x80 ]
call sub_1000247e
push esi
push edi
lea ecx [ ebp - 0x2c ]
call sub_100022b5
push esi
push edi
lea ecx [ ebp - 0x48 ]
call sub_100022b5
push esi
push edi
lea ecx [ ebp - 0x64 ]
call sub_100022b5
mov eax [ ebp - 0x84 ]
mov ebx [ ebp - 0x84 ]
push esi
lea ecx [ ebx + 0x4 ]
mov [ ebx ] esi
call sub_10008fdb
push esi
push esi
push ebx
call sub_1002360a
add esp 0xc
xor edi edi
push esi
inc edi
push edi
lea ecx [ ebp - 0x2c ]
call sub_100022b5
push esi
push edi
lea ecx [ ebp - 0x48 ]
call sub_100022b5
push esi
push edi
lea ecx [ ebp - 0x64 ]
call sub_100022b5
mov eax ebx
jmp r-xdata
call sub_10029f1f
retn 0xc
sub_100084bf
push 0x54
mov eax sub_1004e5af
call sub_10029e9c
mov eax [ ebp + 0x8 ]
and [ ebp - 0x34 ] 0x0
mov [ ebp - 0x38 ] eax
mov eax [ ebp + 0xc ]
mov esi ecx
push eax
lea ecx [ ebp - 0x30 ]
mov [ ebp - 0x44 ] edi
call sub_10001fad
lea eax [ esi + 0x58 ]
push eax
xor ebx ebx
add esi 0xa8
inc ebx
lea eax [ ebp - 0x40 ]
mov [ ebp - 0x4 ] ebx
mov ecx [ ebp - 0x38 ]
push esi
push eax
call sub_10010b90
add esp 0xc
mov [ ebp - 0x4 ] 0x2
mov eax [ ebp - 0x40 ]
xor esi esi
cmp eax esi
jne r-xdata
cmp [ eax + 0x20 ] 0x0
jne r-xdata
lea eax [ ebp - 0x30 ]
push eax
call sub_10015cb0
pop ecx
push esi
lea ecx [ edi + 0x4 ]
mov [ edi ] esi
call sub_10008fdb
push esi
push esi
push edi
call sub_1002360a
add esp 0xc
mov [ ebp - 0x4 ] bl
mov ecx [ ebp - 0x3c ]
mov [ ebp - 0x34 ] ebx
cmp ecx esi
je r-xdata
push 0x5c
call sub_10025dd6
pop ecx
mov [ ebp - 0x38 ] eax
mov [ ebp - 0x4 ] 0x3
cmp eax esi
je r-xdata
push r--data
lea ecx [ ebp - 0x30 ]
call sub_100013a5
push esi
jmp r-xdata
call sub_1000990a
mov [ ebp - 0x4 ] 0x2
test [ ebp - 0x34 ] 0x2
je r-xdata
lea eax [ ebp - 0x60 ]
push eax
mov eax [ ebp - 0x40 ]
call sub_100114dc
lea ecx [ ebp - 0x30 ]
push ecx
mov [ ebp - 0x4 ] 0x4
push eax
push [ ebp - 0x38 ]
mov [ ebp - 0x34 ] 0x2
call sub_10011f5c
mov esi eax
push ebx
lea ecx [ ebp - 0x30 ]
call sub_1000247e
mov eax edi
call sub_10029f1f
retn 0x8
push esi
lea ecx [ edi + 0x4 ]
mov [ edi ] esi
call sub_10008fdb
push esi
push esi
push edi
call sub_1002360a
or [ ebp - 0x34 ] ebx
mov [ ebp - 0x4 ] bl
mov ecx [ ebp - 0x3c ]
add esp 0xc
test ecx ecx
je r-xdata
and [ ebp - 0x34 ] 0xfffffffd
push 0x0
push ebx
lea ecx [ ebp - 0x60 ]
call sub_100022b5
push 0x0
call sub_1000990a
sub_100085fd
push ebp
sub esp 0x8c
lea ebp [ esp - 0x4 ]
mov eax [ rw-data ]
xor eax ebp
mov [ ebp + 0x8c ] eax
push 0x58
mov eax sub_1004ec15
call sub_10029e66
mov eax [ ebp + 0x98 ]
mov [ ebp - 0x2c ] eax
mov eax [ ebp + 0x9c ]
xor esi esi
mov [ ebp - 0x4 ] esi
push eax
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x20 ] esi
call sub_10002d5b
mov [ ebp - 0x4 ] esi
inc esi
push r--data
lea ecx [ ebp - 0x64 ]
mov [ ebp - 0x20 ] esi
call sub_10001254
lea eax [ ebp ]
push eax
lea ebx [ ebp - 0x64 ]
mov [ ebp - 0x4 ] esi
call sub_100159c5
pop ecx
xor edi edi
push edi
push esi
mov ecx ebx
mov [ ebp - 0x4 ] 0x3
call sub_1000247e
push edi
lea eax [ ebp ]
push eax
lea ecx [ ebp - 0x48 ]
call sub_10008f01
lea eax [ ebp - 0x48 ]
push eax
lea ecx [ ebp - 0x1c ]
mov [ ebp - 0x4 ] 0x4
call sub_100098ad
push edi
push esi
lea ecx [ ebp - 0x48 ]
mov [ ebp - 0x4 ] 0x6
call sub_1000247e
mov [ ebp - 0x4 ] 0x3
mov ecx [ ebp - 0x18 ]
cmp ecx edi
je r-xdata
push [ ebp - 0x1c ]
lea eax [ ebp + 0x1c ]
push eax
call sub_10008f38
lea eax [ ebp + 0x1c ]
push eax
lea ecx [ ebp + 0x70 ]
mov [ ebp - 0x4 ] 0x7
call sub_10001fad
push r--data
lea ecx [ ebp + 0x54 ]
mov [ ebp - 0x4 ] 0x8
call sub_10001254
mov [ ebp - 0x4 ] 0x9
mov eax [ ebp + 0x84 ]
push [ ebp + 0x68 ]
sub eax [ ebp + 0x68 ]
lea ecx [ ebp + 0x70 ]
push eax
lea eax [ ebp + 0x38 ]
push eax
call sub_100081f9
mov ecx eax
lea eax [ ebp + 0x54 ]
mov [ ebp - 0x4 ] 0xa
call sub_10005ec4
mov bl al
neg bl
push edi
sbb bl bl
push esi
lea ecx [ ebp + 0x38 ]
inc bl
call sub_1000247e
test bl bl
je r-xdata
push edi
push esi
lea ecx [ ebp ]
call sub_1000247e
mov eax [ ebp - 0x14 ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp + 0x8c ]
xor ecx ebp
call sub_10025c8d
add ebp 0x90
leave
retn 0x8
call sub_1000990a
lea ecx [ ebp + 0x70 ]
lea edi [ ebp + 0x38 ]
mov [ ebp - 0x4 ] 0xb
call sub_10015ebc
mov ecx [ ebp - 0x2c ]
lea eax [ ebp + 0x70 ]
push eax
mov eax edi
push eax
lea edi [ ebp - 0x28 ]
mov [ ebp - 0x4 ] 0xc
call sub_100084bf
xor edi edi
mov [ ebp - 0x4 ] 0xd
cmp [ ebp - 0x28 ] edi
je r-xdata
push edi
push esi
lea ecx [ ebp + 0x54 ]
call sub_1000247e
push edi
push esi
lea ecx [ ebp + 0x70 ]
call sub_1000247e
push edi
push esi
lea ecx [ ebp + 0x1c ]
mov [ ebp - 0x4 ] 0x6
call sub_1000247e
jmp r-xdata
mov [ ebp - 0x4 ] 0xc
mov ecx [ ebp - 0x24 ]
cmp ecx edi
je r-xdata
lea eax [ ebp - 0x28 ]
push eax
mov eax [ ebp - 0x14 ]
call sub_10008af9
lea eax [ ebp - 0x1c ]
push edi
push eax
call sub_10023f75
pop ecx
pop ecx
jmp r-xdata
push edi
push esi
lea ecx [ ebp + 0x38 ]
call sub_100022b5
mov [ ebp - 0x4 ] 0x9
jmp r-xdata
call sub_1000990a
cmp [ ebp - 0x1c ] edi
setne al
test al al
je r-xdata
push edi
push esi
lea ecx [ ebp + 0x54 ]
call sub_1000247e
push edi
push esi
lea ecx [ ebp + 0x70 ]
call sub_1000247e
push edi
push esi
lea ecx [ ebp + 0x1c ]
mov [ ebp - 0x4 ] 0x6
call sub_1000247e
xor edi edi
sub_10008840
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_1004e535
mov eax [ fs : 0x0 ]
push eax
sub esp 0xb8
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0xb0 ] eax
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0xc8 ]
mov [ fs : 0x0 ] eax
push r--data
lea ecx [ esp + 0x1c ]
call sub_10001254
and [ esp + 0xd0 ] 0x0
lea eax [ esp + 0xa4 ]
push eax
lea ebx [ esp + 0x1c ]
call sub_100159c5
pop ecx
xor esi esi
xor edi edi
push esi
inc edi
push edi
mov ecx ebx
mov [ esp + 0xd8 ] 0x2
call sub_1000247e
push r--data
lea ecx [ esp + 0x70 ]
call sub_10001254
push esi
lea eax [ esp + 0xa8 ]
push eax
lea ecx [ esp + 0x20 ]
mov [ esp + 0xd8 ] 0x3
call sub_10008f01
lea eax [ esp + 0x18 ]
push eax
lea ecx [ esp + 0x14 ]
mov [ esp + 0xd4 ] 0x4
call sub_100098ad
push esi
push edi
lea ecx [ esp + 0x20 ]
mov [ esp + 0xd8 ] 0x6
call sub_1000247e
mov [ esp + 0xd0 ] 0x3
mov ecx [ esp + 0x14 ]
cmp ecx esi
je r-xdata
push [ esp + 0x10 ]
lea eax [ esp + 0x8c ]
push eax
call sub_10008f38
lea eax [ esp + 0x88 ]
push eax
lea ecx [ esp + 0x54 ]
mov [ esp + 0xd4 ] 0x7
call sub_10001fad
mov [ esp + 0xd0 ] 0x8
mov eax [ esp + 0x64 ]
push [ esp + 0x80 ]
sub eax [ esp + 0x84 ]
lea ecx [ esp + 0x54 ]
push eax
lea eax [ esp + 0x3c ]
push eax
call sub_100081f9
mov ecx eax
lea eax [ esp + 0x6c ]
mov [ esp + 0xd0 ] 0x9
call sub_10005ec4
mov bl al
neg bl
push esi
sbb bl bl
push edi
lea ecx [ esp + 0x3c ]
inc bl
mov [ esp + 0xd8 ] 0x8
call sub_1000247e
test bl bl
jne r-xdata
push esi
push edi
lea ecx [ esp + 0x74 ]
call sub_1000247e
push esi
push edi
lea ecx [ esp + 0xac ]
call sub_1000247e
mov ecx [ esp + 0xc8 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ esp + 0xb0 ]
xor ecx esp
call sub_10025c8d
mov esp ebp
pop ebp
retn
call sub_1000990a
push esi
push edi
lea ecx [ esp + 0x58 ]
call sub_1000247e
push esi
push edi
lea ecx [ esp + 0x90 ]
mov [ esp + 0xd8 ] 0x6
call sub_1000247e
lea eax [ esp + 0x10 ]
push esi
push eax
call sub_10023f75
pop ecx
pop ecx
jmp r-xdata
lea eax [ esp + 0x50 ]
push eax
call sub_10015cb0
pop ecx
cmp [ esp + 0x10 ] esi
setne al
test al al
je r-xdata
sub_10008a33
push 0x64
mov eax sub_1004eb87
call sub_10029e9c
mov eax [ ebp + 0x8 ]
xor edi edi
mov [ ebp - 0x4 ] edi
mov [ ebp - 0x30 ] eax
mov eax [ ebp + 0xc ]
push r--data
lea ecx [ ebp - 0x54 ]
mov [ ebp - 0x34 ] eax
mov [ ebp - 0x38 ] edi
call sub_10001254
xor esi esi
lea eax [ ebp - 0x2c ]
inc esi
push eax
lea ebx [ ebp - 0x54 ]
mov [ ebp - 0x4 ] esi
call sub_100159c5
pop ecx
push edi
push esi
mov ecx ebx
mov [ ebp - 0x4 ] 0x3
call sub_1000247e
lea ecx [ ebp - 0x2c ]
lea ebx [ ebp - 0x70 ]
call sub_10015b90
push r--data
push eax
mov [ ebp - 0x4 ] 0x4
push [ ebp - 0x30 ]
call sub_10008f70
add esp 0xc
push edi
push esi
mov ecx ebx
mov [ ebp - 0x38 ] esi
mov [ ebp - 0x4 ] 0x3
call sub_1000247e
push [ ebp - 0x30 ]
mov ecx [ ebp - 0x34 ]
call sub_10015feb
pop ecx
push edi
push esi
lea ecx [ ebp - 0x2c ]
call sub_1000247e
mov eax [ ebp - 0x30 ]
call sub_10029f1f
retn 0x8
sub_10008af9
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0xc
push ebx
push esi
push edi
mov edi eax
mov ecx [ edi + 0xc ]
test ecx ecx
jne r-xdata
mov eax [ edi + 0x14 ]
sub eax ecx
sar eax 0x3
xor eax eax
jmp r-xdata
lea esi [ esp + 0x10 ]
call sub_10001807
push [ esp + 0x14 ]
lea eax [ esp + 0x14 ]
push [ esp + 0x14 ]
push [ ebp + 0x8 ]
push eax
mov eax edi
call sub_10008b61
push [ ebp + 0x8 ]
xor esi esi
inc esi
call sub_10008c2d
mov [ edi + 0x10 ] eax
jmp r-xdata
mov ebx [ edi + 0x10 ]
mov edx ebx
sub edx ecx
sar edx 0x3
cmp edx eax
jae r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_10008b61
push ebp
mov ebp esp
sub esp 0x14
push ebx
push esi
push edi
mov edi eax
mov ebx [ edi + 0xc ]
mov eax [ edi + 0x10 ]
sub eax ebx
test eax 0xfffffff8
jne r-xdata
lea esi [ ebp - 0x8 ]
call sub_10001807
mov eax [ ebp + 0x10 ]
test eax eax
je r-xdata
and [ ebp - 0x4 ] 0x0
jmp r-xdata
call sub_100261ef
cmp eax [ ebp - 0x8 ]
je r-xdata
push [ ebp + 0x14 ]
mov ecx [ ebp + 0xc ]
push [ ebp + 0x10 ]
push edi
call sub_10008c79
mov ebx [ edi + 0xc ]
lea esi [ ebp - 0x10 ]
call sub_10001807
mov edi [ ebp - 0x10 ]
mov esi [ ebp - 0xc ]
mov ebx edi
mov [ ebp - 0xc ] esi
test edi edi
jne r-xdata
mov eax [ edi ]
jmp r-xdata
call sub_100261ef
xor eax eax
mov eax [ ebp + 0x14 ]
sub eax [ ebp - 0x4 ]
sar eax 0x3
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0x4 ]
lea esi [ esi + ecx * 8 ]
cmp esi [ eax + 0x10 ]
ja r-xdata
call sub_100261ef
test edi edi
je r-xdata
xor edi edi
mov edi [ edi ]
jmp r-xdata
mov eax [ ebp + 0x8 ]
pop edi
mov [ eax + 0x4 ] esi
pop esi
mov [ eax ] ebx
pop ebx
leave
retn 0x10
cmp esi [ edi + 0xc ]
jae r-xdata
sub_10008c2d
push ebp
mov ebp esp
push ecx
push edi
xor eax eax
lea edi [ ebp - 0x4 ]
stosb [ edi ]
push [ ebp - 0x4 ]
mov edi [ ebp + 0x8 ]
push [ ebp + 0x8 ]
mov eax ebx
push esi
call sub_1000907f
add esp 0xc
lea eax [ ebx + esi * 8 ]
pop edi
leave
retn 0x4
sub_10008c54
cmp eax [ esp + 0x4 ]
je r-xdata
retn 0x4
push esi
lea esi [ eax + 0x4 ]
add esi 0x8
lea eax [ esi - 0x4 ]
cmp eax [ esp + 0x8 ]
jne r-xdata
call sub_1000990a
mov ecx [ esi ]
test ecx ecx
je r-xdata
pop esi
sub_10008c79
push 0x18
mov eax sub_1004c9e3
call sub_10029e66
mov ebx ecx
mov edi [ ebp + 0x8 ]
mov edx [ edi + 0xc ]
test edx edx
jne r-xdata
mov eax [ edi + 0x14 ]
sub eax edx
sar eax 0x3
mov [ ebp - 0x18 ] eax
and [ ebp - 0x18 ] edx
jmp r-xdata
inc eax
cmp [ ebp - 0x18 ] eax
jae r-xdata
call sub_100017c8
mov ecx [ edi + 0x10 ]
mov eax ecx
sub eax edx
mov edx 0x1fffffff
sar eax 0x3
mov esi edx
sub esi eax
cmp esi 0x1
jae r-xdata
sub ecx [ ebp + 0x10 ]
mov eax [ ebx ]
xor esi esi
sar ecx 0x3
inc esi
add ebx 0x4
cmp ecx esi
mov [ ebp - 0x24 ] eax
push ebx
lea ecx [ ebp - 0x20 ]
jae r-xdata
mov ecx [ ebp - 0x18 ]
shr ecx 0x1
sub edx ecx
cmp edx [ ebp - 0x18 ]
jae r-xdata
call sub_1000979b
mov [ ebp - 0x4 ] 0x5
mov esi [ edi + 0x10 ]
push esi
lea ebx [ esi - 0x8 ]
push esi
mov ecx ebx
call sub_10008fb7
mov [ edi + 0x10 ] eax
mov eax [ ebp + 0x10 ]
mov [ ebp + 0x8 ] eax
cmp eax ebx
je r-xdata
call sub_1000979b
mov [ ebp - 0x4 ] 0x2
mov ecx [ ebp + 0x10 ]
lea eax [ ecx + 0x8 ]
push eax
push [ edi + 0x10 ]
call sub_10008fb7
mov [ ebp - 0x4 ] 0x3
mov ebx [ edi + 0x10 ]
lea eax [ ebp - 0x24 ]
push eax
mov eax ebx
sub eax [ ebp + 0x10 ]
sar eax 0x3
sub esi eax
call sub_10008c2d
mov [ ebp - 0x4 ] 0x2
add [ edi + 0x10 ] 0x8
mov edi [ edi + 0x10 ]
mov esi [ ebp + 0x10 ]
add edi 0xfffffff8
jmp r-xdata
add [ ebp - 0x18 ] ecx
and [ ebp - 0x18 ] 0x0
jmp r-xdata
lea edi [ eax + 0x8 ]
mov esi eax
cmp eax edi
je r-xdata
mov edi esi
sub edi ebx
cmp esi edi
jne r-xdata
mov ecx [ ebp - 0x18 ]
call sub_10008eb5
mov ecx [ ebp + 0x10 ]
sub ecx [ edi + 0xc ]
and [ ebp + 0x8 ] 0x0
and [ ebp - 0x4 ] 0x0
sar ecx 0x3
push ebx
xor esi esi
lea ebx [ eax + ecx * 8 ]
inc esi
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x20 ] ecx
call sub_10008c2d
mov ebx [ ebp - 0x1c ]
mov ecx [ edi + 0xc ]
push ebx
push [ ebp + 0x10 ]
mov [ ebp + 0x8 ] esi
call sub_10008fb7
mov eax [ ebp - 0x20 ]
mov ecx [ ebp + 0x10 ]
lea eax [ ebx + eax * 8 + 0x8 ]
push eax
push [ edi + 0x10 ]
mov [ ebp + 0x8 ] 0x2
call sub_10008fb7
or [ ebp - 0x4 ] 0xffffffff
mov ecx [ edi + 0x10 ]
mov eax [ edi + 0xc ]
mov esi ecx
sub esi eax
sar esi 0x3
inc esi
test eax eax
je r-xdata
mov [ ebp - 0x18 ] eax
cmp [ ebp - 0x18 ] eax
jae r-xdata
or [ ebp - 0x4 ] 0xffffffff
mov ecx [ ebp - 0x20 ]
test ecx ecx
je r-xdata
lea eax [ ebp - 0x24 ]
call sub_100090a8
add esi 0x8
cmp esi edi
jne r-xdata
sub ebx 0x8
lea esi [ edi + ebx ]
mov eax ebx
call sub_100090a8
cmp ebx [ ebp + 0x8 ]
jne r-xdata
mov eax [ ebp + 0x10 ]
lea eax [ ebp - 0x24 ]
call sub_100090a8
add esi 0x8
jmp r-xdata
mov eax [ ebp - 0x18 ]
lea eax [ ebx + eax * 8 ]
mov [ edi + 0x14 ] eax
lea eax [ ebx + esi * 8 ]
mov [ edi + 0x10 ] eax
mov [ edi + 0xc ] ebx
jmp r-xdata
push ecx
call sub_10008c54
push [ edi + 0xc ]
call sub_10025c9c
pop ecx
call sub_10029f0b
retn 0xc
call sub_1000990a
sub_10008d78
cmp [ ebp + 0x8 ] 0x1
mov esi [ ebp - 0x1c ]
mov edi [ ebp - 0x20 ]
jle r-xdata
xor ebx ebx
cmp [ ebp + 0x8 ] ebx
jle r-xdata
lea eax [ esi + edi * 8 ]
push eax
mov eax esi
call sub_10008c54
push esi
call sub_10025c9c
pop ecx
push ebx
push ebx
call sub_10029a01
sub ecx [ ebp + 0x10 ]
mov eax [ ebx ]
xor esi esi
sar ecx 0x3
inc esi
add ebx 0x4
cmp ecx esi
mov [ ebp - 0x24 ] eax
push ebx
lea ecx [ ebp - 0x20 ]
jae r-xdata
lea eax [ esi + edi * 8 + 0x8 ]
push eax
lea eax [ esi + edi * 8 ]
call sub_10008c54
call sub_1000979b
mov [ ebp - 0x4 ] 0x5
mov esi [ edi + 0x10 ]
push esi
lea ebx [ esi - 0x8 ]
push esi
mov ecx ebx
call sub_10008fb7
mov [ edi + 0x10 ] eax
mov eax [ ebp + 0x10 ]
mov [ ebp + 0x8 ] eax
cmp eax ebx
je r-xdata
call sub_1000979b
mov [ ebp - 0x4 ] 0x2
mov ecx [ ebp + 0x10 ]
lea eax [ ecx + 0x8 ]
push eax
push [ edi + 0x10 ]
call sub_10008fb7
mov [ ebp - 0x4 ] 0x3
mov ebx [ edi + 0x10 ]
lea eax [ ebp - 0x24 ]
push eax
mov eax ebx
sub eax [ ebp + 0x10 ]
sar eax 0x3
sub esi eax
call sub_10008c2d
mov [ ebp - 0x4 ] 0x2
add [ edi + 0x10 ] 0x8
mov edi [ edi + 0x10 ]
mov esi [ ebp + 0x10 ]
add edi 0xfffffff8
jmp r-xdata
lea edi [ eax + 0x8 ]
mov esi eax
cmp eax edi
je r-xdata
mov edi esi
sub edi ebx
cmp esi edi
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
mov ecx [ ebp - 0x20 ]
test ecx ecx
je r-xdata
lea eax [ ebp - 0x24 ]
call sub_100090a8
add esi 0x8
cmp esi edi
jne r-xdata
sub ebx 0x8
lea esi [ edi + ebx ]
mov eax ebx
call sub_100090a8
cmp ebx [ ebp + 0x8 ]
jne r-xdata
mov eax [ ebp + 0x10 ]
lea eax [ ebp - 0x24 ]
call sub_100090a8
add esi 0x8
jmp r-xdata
call sub_10029f0b
retn 0xc
call sub_1000990a
sub_10008eb5
push ebp
mov ebp esp
sub esp 0x10
test ecx ecx
ja r-xdata
or eax 0xffffffff
xor edx edx
div ecx
cmp eax 0x8
jae r-xdata
xor ecx ecx
mov eax ecx
shl eax 0x3
push eax
call sub_10025dd6
pop ecx
leave
retn
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x4 ]
push eax
lea ecx [ ebp - 0x10 ]
call sub_10025e4c
push r--data
lea eax [ ebp - 0x10 ]
push eax
mov [ ebp - 0x10 ] r--data
call sub_10029a01
int3
sub_10008f01
push 0x4
mov eax sub_1004acb5
call sub_10029e33
mov esi ecx
mov [ ebp - 0x10 ] esi
call sub_10001ac0
and [ ebp - 0x4 ] 0x0
call sub_10024ee5
push [ eax ]
push esi
push [ ebp + 0x8 ]
call sub_10009038
add esp 0xc
mov eax esi
call sub_10029f0b
retn 0x8
sub_10008f38
push 0x0
mov eax sub_1004c57d
call sub_10029e33
mov ecx [ ebp + 0x8 ]
call sub_10001ac0
and [ ebp - 0x4 ] 0x0
call sub_10024ee5
push [ eax ]
push [ ebp + 0x8 ]
push [ ebp + 0xc ]
call sub_10023913
mov eax [ ebp + 0x8 ]
add esp 0xc
call sub_10029f0b
retn 0x8
sub_10008f70
push 0x20
mov eax sub_1004d493
call sub_10029e33
push [ ebp + 0xc ]
and [ ebp - 0x10 ] 0x0
lea ecx [ ebp - 0x2c ]
call sub_10001fad
push [ ebp + 0x10 ]
and [ ebp - 0x4 ] 0x0
mov ecx eax
call sub_1000977e
mov ecx [ ebp + 0x8 ]
push eax
call sub_10001fad
push 0x0
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_1000247e
mov eax [ ebp + 0x8 ]
call sub_10029f0b
retn
sub_10008fb7
push ebp
mov ebp esp
push ecx
push edi
xor eax eax
lea edi [ ebp - 0x4 ]
stosb [ edi ]
push [ ebp - 0x4 ]
mov eax [ ebp + 0xc ]
push [ ebp + 0x8 ]
push [ ebp + 0x8 ]
call sub_100090ee
add esp 0xc
pop edi
leave
retn 0x8
sub_10008fdb
push 0x4
mov eax sub_1004be9c
call sub_10029e66
mov esi ecx
and [ esi ] 0x0
and [ ebp - 0x4 ] 0x0
push 0x10
call sub_10025dd6
pop ecx
test eax eax
je r-xdata
xor eax eax
xor ecx ecx
inc ecx
mov [ eax + 0x4 ] ecx
mov [ eax + 0x8 ] ecx
mov ecx [ ebp + 0x8 ]
mov [ eax ] r--data
mov [ eax + 0xc ] ecx
jmp r-xdata
mov [ esi ] eax
mov eax esi
call sub_10029f0b
retn 0x4
sub_10009038
push ebp
mov ebp esp
sub esp 0x14
push esi
push edi
mov edi [ ebp + 0x8 ]
mov esi [ edi + 0x14 ]
test esi esi
je r-xdata
pop edi
pop esi
leave
retn
lea eax [ ebp - 0xc ]
push eax
mov ecx edi
call sub_10007aec
mov ecx eax
call sub_100068fb
lea esi [ eax + esi * 2 ]
lea eax [ ebp - 0x14 ]
push eax
mov ecx edi
call sub_10007aec
mov ecx eax
call sub_100068fb
mov ecx [ ebp + 0xc ]
push esi
push eax
call sub_10009699
sub_1000907f
push esi
mov esi eax
jmp r-xdata
cmp [ esp + 0x8 ] 0x0
ja r-xdata
test esi esi
je r-xdata
pop esi
retn
dec [ esp + 0x8 ]
add esi 0x8
mov eax [ edi ]
mov [ esi ] eax
lea eax [ edi + 0x4 ]
push eax
lea ecx [ esi + 0x4 ]
call sub_1000979b
sub_100090a8
push ebp
mov ebp esp
push ecx
push ecx
mov ecx [ eax ]
add eax 0x4
mov [ ebp - 0x8 ] ecx
push eax
lea ecx [ ebp - 0x4 ]
call sub_1000979b
lea eax [ ebp - 0x8 ]
cmp eax esi
je r-xdata
mov ecx [ esi + 0x4 ]
mov eax [ ebp - 0x4 ]
mov [ esi + 0x4 ] eax
test ecx ecx
je r-xdata
mov eax [ ebp - 0x8 ]
mov [ esi ] eax
mov eax esi
leave
retn
call sub_1000990a
sub_100090ee
push esi
push edi
mov edi eax
mov esi ecx
jmp r-xdata
cmp esi [ esp + 0xc ]
jne r-xdata
test edi edi
je r-xdata
mov eax edi
pop edi
pop esi
retn
add edi 0x8
add esi 0x8
mov eax [ esi ]
mov [ edi ] eax
lea eax [ esi + 0x4 ]
push eax
lea ecx [ edi + 0x4 ]
call sub_1000979b
sub_1000911b
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi ecx
cmp [ edi + 0x14 ] esi
jb r-xdata
call sub_100222af
mov eax [ ebp + 0x10 ]
mov eax [ eax + 0x14 ]
cmp eax [ ebp + 0x14 ]
jae r-xdata
mov ecx [ edi + 0x14 ]
mov eax ecx
sub eax esi
cmp eax [ ebp + 0xc ]
jae r-xdata
mov eax [ ebp + 0x10 ]
mov eax [ eax + 0x14 ]
sub eax [ ebp + 0x14 ]
mov ebx [ ebp + 0x18 ]
cmp eax ebx
jae r-xdata
mov [ ebp + 0xc ] eax
sub ecx [ ebp + 0xc ]
or eax 0xffffffff
sub eax ebx
cmp eax ecx
ja r-xdata
mov ebx eax
mov ecx [ edi + 0x14 ]
mov eax ecx
sub eax [ ebp + 0xc ]
mov edx ecx
sub edx esi
sub edx [ ebp + 0xc ]
add eax ebx
mov [ ebp + 0x8 ] edx
mov [ ebp - 0x4 ] eax
cmp ecx eax
jae r-xdata
call sub_10022277
cmp edi [ ebp + 0x10 ]
je r-xdata
push 0x0
push eax
mov ecx edi
call sub_10001eb9
mov edx [ ebp + 0x8 ]
mov eax [ ebp + 0xc ]
cmp ebx eax
ja r-xdata
mov eax [ edi + 0x18 ]
cmp eax 0x8
jb r-xdata
cmp [ ebp + 0x14 ] esi
ja r-xdata
mov eax [ edi + 0x18 ]
cmp eax 0x8
jb r-xdata
lea ecx [ edi + 0x4 ]
mov ecx [ edi + 0x4 ]
jmp r-xdata
add eax esi
cmp eax [ ebp + 0x14 ]
mov [ ebp + 0x18 ] eax
mov eax [ edi + 0x18 ]
ja r-xdata
mov eax [ edi + 0x18 ]
cmp eax 0x8
jb r-xdata
lea ecx [ edi + 0x4 ]
mov ecx [ edi + 0x4 ]
jmp r-xdata
lea ecx [ edi + 0x4 ]
mov ecx [ edi + 0x4 ]
jmp r-xdata
mov [ ebp + 0x8 ] ecx
cmp eax 0x8
jb r-xdata
cmp eax 0x8
jb r-xdata
cmp eax 0x8
jb r-xdata
lea ecx [ edi + 0x4 ]
mov ecx [ edi + 0x4 ]
jmp r-xdata
lea edx [ edi + 0x4 ]
mov edx [ edi + 0x4 ]
jmp r-xdata
cmp eax 0x8
jb r-xdata
lea edx [ eax + 0x4 ]
mov edx [ eax + 0x4 ]
jmp r-xdata
mov [ ebp + 0x18 ] ecx
mov ecx [ ebp + 0xc ]
push edx
mov edx [ ebp + 0x8 ]
add ecx esi
sub eax esi
lea ecx [ edx + ecx * 2 ]
push ecx
mov ecx [ ebp + 0x18 ]
sub eax ebx
push eax
lea eax [ esi + ebx ]
lea eax [ ecx + eax * 2 ]
push eax
call sub_10001ce4
mov eax [ ebp + 0x10 ]
add esp 0x10
cmp [ eax + 0x18 ] 0x8
jb r-xdata
lea edx [ edi + 0x4 ]
mov edx [ edi + 0x4 ]
jmp r-xdata
lea ecx [ edi + 0x4 ]
mov ecx [ edi + 0x4 ]
jmp r-xdata
lea ecx [ edi + 0x4 ]
mov ecx [ edi + 0x4 ]
jmp r-xdata
mov [ ebp + 0x10 ] ecx
cmp eax 0x8
jb r-xdata
lea ecx [ edi + 0x4 ]
mov ecx [ edi + 0x4 ]
jmp r-xdata
mov [ ebp + 0x10 ] edx
mov edx [ ebp + 0x14 ]
push ebx
lea ecx [ ecx + edx * 2 ]
sub eax esi
push ecx
push eax
mov eax [ ebp + 0x10 ]
lea eax [ eax + esi * 2 ]
push eax
call sub_10001ce4
mov eax [ edi + 0x18 ]
add esp 0x10
cmp eax 0x8
jb r-xdata
lea ecx [ edi + 0x4 ]
mov ecx [ edi + 0x4 ]
jmp r-xdata
mov eax [ edi + 0x18 ]
cmp eax 0x8
jb r-xdata
lea ecx [ edi + 0x4 ]
mov ecx [ edi + 0x4 ]
jmp r-xdata
cmp eax 0x8
jb r-xdata
lea edx [ edi + 0x4 ]
mov edx [ edi + 0x4 ]
jmp r-xdata
cmp eax 0x8
jb r-xdata
lea edx [ edi + 0x4 ]
mov edx [ edi + 0x4 ]
jmp r-xdata
mov [ ebp + 0x8 ] ecx
mov ecx [ ebp + 0xc ]
push edx
mov edx [ ebp + 0x10 ]
add ecx esi
sub eax esi
lea ecx [ edx + ecx * 2 ]
push ecx
mov ecx [ ebp + 0x8 ]
sub eax ebx
push eax
lea eax [ esi + ebx ]
lea eax [ ecx + eax * 2 ]
push eax
call sub_10001ce4
mov eax [ edi + 0x18 ]
add esp 0x10
cmp eax 0x8
jb r-xdata
lea edx [ edi + 0x4 ]
mov edx [ edi + 0x4 ]
jmp r-xdata
cmp eax 0x8
jb r-xdata
add esp 0x10
push [ ebp - 0x4 ]
mov ecx edi
call sub_10002460
mov eax edi
pop edi
pop esi
pop ebx
leave
retn 0x14
push ebx
mov ebx [ ebp + 0x14 ]
lea edx [ edx + ebx * 2 ]
push edx
sub eax esi
push eax
lea eax [ ecx + esi * 2 ]
push eax
call sub_10002444
jmp r-xdata
lea edx [ edi + 0x4 ]
mov edx [ edi + 0x4 ]
jmp r-xdata
push [ ebp + 0xc ]
mov [ ebp + 0x10 ] ecx
mov ecx [ ebp + 0x14 ]
lea ecx [ edx + ecx * 2 ]
sub eax esi
push ecx
push eax
mov eax [ ebp + 0x10 ]
lea eax [ eax + esi * 2 ]
push eax
call sub_10001ce4
mov eax [ edi + 0x18 ]
add esp 0x10
cmp eax 0x8
jb r-xdata
lea ecx [ edi + 0x4 ]
mov ecx [ edi + 0x4 ]
jmp r-xdata
push [ ebp + 0x8 ]
mov [ ebp + 0x10 ] edx
mov edx [ ebp + 0x18 ]
sub eax esi
lea ecx [ ecx + edx * 2 ]
push ecx
mov ecx [ ebp + 0x10 ]
sub eax ebx
push eax
lea eax [ esi + ebx ]
lea eax [ ecx + eax * 2 ]
push eax
call sub_10001ce4
mov eax [ edi + 0x18 ]
add esp 0x10
cmp eax 0x8
jb r-xdata
lea ecx [ edi + 0x4 ]
mov ecx [ edi + 0x4 ]
jmp r-xdata
cmp eax 0x8
jb r-xdata
push eax
call sub_10001ce4
push [ ebp + 0x8 ]
mov [ ebp + 0x14 ] edx
mov edx [ ebp + 0xc ]
add edx esi
sub eax esi
sub eax ebx
lea ecx [ ecx + edx * 2 ]
push ecx
push eax
mov eax [ ebp + 0x14 ]
add esi ebx
lea eax [ eax + esi * 2 ]
jmp r-xdata
lea ecx [ edi + 0x4 ]
mov ecx [ edi + 0x4 ]
jmp r-xdata
cmp eax 0x8
jb r-xdata
lea edx [ edi + 0x4 ]
mov edx [ edi + 0x4 ]
jmp r-xdata
mov [ ebp + 0x10 ] ecx
cmp eax 0x8
jb r-xdata
push ebx
mov ebx [ ebp + 0x14 ]
lea edx [ edx + ebx * 2 ]
sub eax esi
push edx
push eax
lea eax [ ecx + esi * 2 ]
jmp r-xdata
lea ecx [ edi + 0x4 ]
mov ecx [ edi + 0x4 ]
jmp r-xdata
push [ ebp + 0x8 ]
mov [ ebp + 0x10 ] ecx
mov ecx [ ebp + 0xc ]
add ecx esi
add ecx ecx
mov [ ebp + 0x18 ] ecx
sub eax esi
add ecx edx
push ecx
mov ecx [ ebp + 0x10 ]
sub eax ebx
push eax
lea eax [ esi + ebx ]
lea eax [ ecx + eax * 2 ]
push eax
call sub_10001ce4
mov eax [ edi + 0x18 ]
add esp 0x10
cmp eax 0x8
jb r-xdata
mov ecx [ ebp + 0x14 ]
sub ecx [ ebp + 0xc ]
push ebx
add ecx ebx
mov ebx [ ebp + 0x10 ]
lea ecx [ ebx + ecx * 2 ]
sub eax esi
push ecx
push eax
lea eax [ edx + esi * 2 ]
jmp r-xdata
lea ecx [ edi + 0x4 ]
mov ecx [ edi + 0x4 ]
jmp r-xdata
mov [ ebp + 0x10 ] ecx
cmp eax 0x8
jb r-xdata
mov edx ebx
sub edx [ ebp + 0xc ]
sub eax esi
sub eax [ ebp + 0xc ]
push edx
mov edx [ ebp + 0x14 ]
add edx ebx
mov ebx [ ebp + 0x10 ]
lea edx [ ebx + edx * 2 ]
push edx
push eax
mov eax [ ebp + 0x18 ]
add eax ecx
sub_1000947a
push ebp
mov ebp esp
push ecx
push esi
push edi
mov edi [ ebp + 0x10 ]
push edi
mov esi ecx
call sub_10001c59
test al al
je r-xdata
mov edi [ ebp + 0x8 ]
cmp [ esi + 0x14 ] edi
jae r-xdata
cmp [ esi + 0x18 ] 0x8
jb r-xdata
mov eax [ esi + 0x14 ]
mov ecx eax
sub ecx edi
cmp ecx [ ebp + 0xc ]
jae r-xdata
call sub_100222af
lea eax [ esi + 0x4 ]
mov eax [ esi + 0x4 ]
jmp r-xdata
sub eax [ ebp + 0xc ]
push ebx
mov ebx [ ebp + 0x14 ]
or ecx 0xffffffff
sub ecx ebx
cmp ecx eax
ja r-xdata
mov [ ebp + 0xc ] ecx
pop edi
pop esi
leave
retn 0x10
push [ ebp + 0x14 ]
sub edi eax
sar edi 0x1
push edi
push esi
push [ ebp + 0xc ]
mov ecx esi
push [ ebp + 0x8 ]
call sub_1000911b
jmp r-xdata
mov ecx [ esi + 0x14 ]
sub ecx edi
sub ecx [ ebp + 0xc ]
mov [ ebp - 0x4 ] ecx
cmp ebx [ ebp + 0xc ]
jae r-xdata
call sub_10022277
test ebx ebx
ja r-xdata
mov eax [ esi + 0x18 ]
cmp eax 0x8
jb r-xdata
mov eax [ esi + 0x14 ]
sub eax [ ebp + 0xc ]
push 0x0
add eax ebx
push eax
mov ecx esi
mov [ ebp + 0x14 ] eax
call sub_10001eb9
test al al
je r-xdata
cmp [ ebp + 0xc ] 0x0
jbe r-xdata
lea edx [ esi + 0x4 ]
mov edx [ esi + 0x4 ]
jmp r-xdata
mov eax esi
pop ebx
cmp [ ebp + 0xc ] ebx
jae r-xdata
lea edx [ esi + 0x4 ]
mov edx [ esi + 0x4 ]
jmp r-xdata
mov [ ebp + 0x8 ] edx
cmp eax 0x8
jb r-xdata
mov eax [ esi + 0x18 ]
cmp eax 0x8
jb r-xdata
mov eax [ esi + 0x18 ]
lea ecx [ esi + 0x4 ]
cmp eax 0x8
jb r-xdata
push ecx
mov ecx [ ebp + 0xc ]
mov [ ebp + 0x14 ] edx
mov edx [ ebp + 0x8 ]
add ecx edi
sub eax edi
lea ecx [ edx + ecx * 2 ]
push ecx
mov ecx [ ebp + 0x14 ]
sub eax ebx
push eax
lea eax [ edi + ebx ]
lea eax [ ecx + eax * 2 ]
push eax
call sub_10001ce4
add esp 0x10
lea ecx [ esi + 0x4 ]
mov ecx [ esi + 0x4 ]
jmp r-xdata
mov edx ecx
mov edx [ ecx ]
jmp r-xdata
push ebx
push [ ebp + 0x10 ]
sub eax edi
push eax
lea eax [ ecx + edi * 2 ]
push eax
call sub_10002444
add esp 0x10
push [ ebp + 0x14 ]
mov ecx esi
call sub_10002460
push [ ebp - 0x4 ]
mov [ ebp + 0x8 ] ecx
mov ecx [ ebp + 0xc ]
add ecx edi
sub eax edi
lea ecx [ edx + ecx * 2 ]
push ecx
mov ecx [ ebp + 0x8 ]
sub eax ebx
push eax
lea eax [ edi + ebx ]
lea eax [ ecx + eax * 2 ]
push eax
call sub_10001ce4
add esp 0x10
mov ecx [ ecx ]
cmp eax 0x8
jb r-xdata
sub_100095f7
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0xc
push ebx
push esi
mov esi [ ebp + 0x1c ]
push edi
lea eax [ esp + 0x10 ]
mov ebx ecx
push eax
mov [ esp + 0x10 ] ebx
call sub_10007aec
cmp [ ebp + 0x18 ] esi
jne r-xdata
sub esi [ ebp + 0x18 ]
mov edi [ eax ]
mov ebx [ eax + 0x4 ]
sar esi 0x1
push esi
push [ ebp + 0x18 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
call sub_100095e0
add esp 0x10
push eax
push ebx
push edi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_100095e0
mov ecx [ esp + 0x28 ]
add esp 0x10
push eax
call sub_1000947a
push [ ebp + 0xc ]
mov esi [ eax ]
push [ ebp + 0x8 ]
mov edi [ eax + 0x4 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
call sub_100095e0
add esp 0x10
push eax
push edi
push esi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_100095e0
add esp 0x10
push eax
mov ecx ebx
call sub_10001d05
jmp r-xdata
mov eax [ esp + 0xc ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x18
sub_10009699
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x14
push ebx
push esi
push edi
lea eax [ esp + 0x10 ]
push eax
mov esi ecx
call sub_10007b5c
mov edi [ eax ]
mov ebx [ eax + 0x4 ]
lea eax [ esp + 0x18 ]
push eax
mov ecx esi
call sub_10007b5c
push [ ebp + 0xc ]
mov ecx esi
push [ ebp + 0x8 ]
push ebx
push edi
push [ eax + 0x4 ]
push [ eax ]
call sub_100095f7
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_100096df
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
push edi
mov esi ecx
call sub_10001c59
test al al
je r-xdata
or eax 0xffffffff
sub eax [ esi + 0x14 ]
push ebx
mov ebx [ ebp + 0xc ]
cmp eax ebx
jbe r-xdata
cmp [ esi + 0x18 ] 0x8
jb r-xdata
call sub_10022277
mov eax [ esi + 0x14 ]
lea ecx [ eax + ebx ]
cmp ecx eax
jae r-xdata
lea eax [ esi + 0x4 ]
mov eax [ esi + 0x4 ]
jmp r-xdata
test ebx ebx
jbe r-xdata
pop edi
pop esi
pop ebp
retn 0x8
push [ ebp + 0xc ]
sub edi eax
sar edi 0x1
push edi
push esi
mov ecx esi
call sub_10006b05
jmp r-xdata
mov eax esi
pop ebx
mov edi [ esi + 0x14 ]
push 0x0
add edi ebx
push edi
mov ecx esi
call sub_10001eb9
test al al
je r-xdata
mov eax [ esi + 0x18 ]
cmp eax 0x8
jb r-xdata
lea edx [ esi + 0x4 ]
mov edx [ esi + 0x4 ]
jmp r-xdata
mov ecx [ esi + 0x14 ]
push ebx
push [ ebp + 0x8 ]
sub eax ecx
push eax
lea eax [ edx + ecx * 2 ]
push eax
call sub_10002444
add esp 0x10
push edi
mov ecx esi
call sub_10002460
sub_100097cd
push 0xc
mov eax sub_1004c9b8
call sub_10029e33
mov esi ecx
mov [ ebp - 0x10 ] esi
and [ ebp - 0x4 ] 0x0
lea eax [ esi + 0x24 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
call sub_10023630
pop ecx
pop ecx
push 0x0
push 0x1
mov ecx esi
call sub_1000247e
call sub_10029f0b
retn
sub_1000981b
push 0x4
mov eax sub_1004dc83
call sub_10029e66
mov esi ecx
and [ esi ] 0x0
and [ ebp - 0x4 ] 0x0
push 0x10
call sub_10025dd6
pop ecx
test eax eax
je r-xdata
xor eax eax
xor ecx ecx
inc ecx
mov [ eax + 0x4 ] ecx
mov [ eax + 0x8 ] ecx
mov ecx [ ebp + 0x8 ]
mov [ eax ] r--data
mov [ eax + 0xc ] ecx
jmp r-xdata
mov [ esi ] eax
mov eax esi
call sub_10029f0b
retn 0x4
sub_10009874
push esi
push edi
mov edi [ esp + 0xc ]
mov esi ecx
push edi
lea ecx [ esi + 0x4 ]
mov [ esi ] edi
call sub_1000981b
push edi
push edi
push esi
call sub_1002360a
add esp 0xc
pop edi
mov eax esi
pop esi
retn 0x4
sub_100098ad
push 0x4
mov eax sub_1004e4cb
call sub_10029e33
mov ebx ecx
mov [ ebp - 0x10 ] ebx
push 0x28
call sub_10025dd6
mov esi eax
pop ecx
test esi esi
je r-xdata
xor esi esi
mov ecx esi
call sub_10009899
and [ esi + 0x24 ] 0x0
jmp r-xdata
push esi
mov ecx ebx
call sub_10009874
and [ ebp - 0x4 ] 0x0
push 0x0
push [ ebp + 0x8 ]
push ebx
call sub_100240f3
add esp 0xc
mov eax ebx
call sub_10029f0b
retn 0x4
sub_1000990a
push esi
mov esi ecx
lea eax [ esi + 0x4 ]
or ecx 0xffffffff
[ eax ] ecx
jne r-xdata
pop esi
retn
mov eax [ esi ]
mov ecx esi
call [ eax + 0x4 ]
lea eax [ esi + 0x8 ]
or ecx 0xffffffff
[ eax ] ecx
jne r-xdata
mov eax [ esi ]
mov ecx esi
pop esi
jmp [ eax + 0x8 ]
sub_100099d6
push 0x4
mov eax sub_1004c1e2
call sub_10029e33
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
and [ ebp - 0x4 ] 0x0
mov ecx [ esi + 0x20 ]
test ecx ecx
je r-xdata
push 0x0
push 0x1
lea ecx [ esi + 0x4 ]
call sub_1000247e
call sub_10029f0b
retn
mov eax [ ecx ]
push 0x1
call [ eax ]
sub_10009a10
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_1004e049
mov eax [ fs : 0x0 ]
push eax
sub esp 0x4c
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x58 ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov eax [ esi + 0x20 ]
xor edi edi
cmp eax edi
je r-xdata
push 0x44
call sub_10025dd6
pop ecx
mov [ esp + 0xc ] eax
mov [ esp + 0x60 ] 0x1
cmp eax edi
je r-xdata
push r--data
lea ecx [ esp + 0x14 ]
call sub_10001b81
lea eax [ esp + 0x10 ]
push eax
lea ecx [ esp + 0x30 ]
mov [ esp + 0x64 ] edi
call sub_100078c4
push r--data
lea eax [ esp + 0x30 ]
push eax
call sub_10029a01
or [ esp + 0x60 ] 0xffffffff
mov ecx [ esi + 0x20 ]
cmp edi ecx
je r-xdata
lea ecx [ esi + 0x4 ]
push ecx
push eax
call sub_100162f4
mov edi eax
mov [ esi + 0x20 ] edi
mov ecx [ esp + 0x58 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn
test ecx ecx
je r-xdata
mov eax [ ecx ]
push 0x1
call [ eax ]
sub_10009acf
push 0x1c
mov eax sub_1004d599
call sub_10029e33
mov esi ecx
push r--data
lea ecx [ ebp - 0x28 ]
call sub_10001b81
push [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
mov eax [ esi ]
lea ecx [ ebp - 0x28 ]
push ecx
mov ecx esi
call [ eax + 0x14 ]
push 0x0
push 0x1
lea ecx [ ebp - 0x28 ]
call sub_100022b5
call sub_10029f0b
retn 0x4
sub_10009b10
push 0x1c
mov eax sub_1004d599
call sub_10029e33
mov esi ecx
push 0x0
lea ecx [ ebp - 0x28 ]
mov [ ebp - 0x10 ] 0xf
call sub_1000237a
and [ ebp - 0x4 ] 0x0
mov eax [ esi ]
lea ecx [ ebp - 0x28 ]
push ecx
push [ ebp + 0x8 ]
mov ecx esi
call [ eax + 0x14 ]
push 0x0
push 0x1
lea ecx [ ebp - 0x28 ]
call sub_100022b5
call sub_10029f0b
retn 0x4
sub_10009b55
push ecx
push ecx
and [ esp + 0x4 ] 0x0
push ebx
mov ebx ecx
mov ecx [ eax + 0x20 ]
test ecx ecx
jne r-xdata
push ebx
push ecx
call sub_100163ca
lea ecx [ eax + 0x4 ]
call sub_10016283
jmp r-xdata
mov eax ebx
pop ebx
pop ecx
pop ecx
retn
sub_10009b7d
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_1004e4a8
mov eax [ fs : 0x0 ]
push eax
sub esp 0x30
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x40 ]
mov [ fs : 0x0 ] eax
mov eax ecx
lea ecx [ esp + 0x18 ]
call sub_10009b55
mov edi [ ebp + 0x8 ]
xor ebx ebx
mov [ esp + 0x48 ] ebx
mov eax [ edi + 0x14 ]
mov [ esp + 0x14 ] eax
lea eax [ esp + 0x14 ]
push eax
push [ esp + 0x1c ]
push 0x4
pop esi
call sub_10016589
mov esi [ esp + 0x14 ]
cmp esi ebx
jle r-xdata
lea eax [ esp + 0x10 ]
push eax
push [ esp + 0x1c ]
mov [ esp + 0x18 ] ebx
push 0x4
pop esi
call sub_10016625
push [ esp + 0x10 ]
lea esi [ esp + 0x24 ]
call sub_10009dc2
mov esi [ ebp + 0xc ]
push 0xffffffff
push ebx
push eax
mov ecx esi
mov [ esp + 0x54 ] 0x1
call sub_10002099
push ebx
push 0x1
lea ecx [ esp + 0x28 ]
mov [ esp + 0x50 ] bl
call sub_100022b5
cmp [ esp + 0x10 ] ebx
jle r-xdata
cmp [ edi + 0x18 ] 0x10
jb r-xdata
or [ esp + 0x48 ] 0xffffffff
mov ecx [ esp + 0x1c ]
cmp ecx ebx
je r-xdata
cmp [ esi + 0x18 ] 0x10
jb r-xdata
add edi 0x4
mov edi [ edi + 0x4 ]
jmp r-xdata
mov ecx [ esp + 0x40 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
call sub_1000990a
add esi 0x4
mov esi [ esi + 0x4 ]
jmp r-xdata
push edi
push [ esp + 0x1c ]
call sub_10016589
push esi
push [ esp + 0x1c ]
mov esi [ esp + 0x18 ]
call sub_10016625
sub_10009c83
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_1004e470
mov eax [ fs : 0x0 ]
push eax
sub esp 0x50
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x48 ] eax
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x60 ]
mov [ fs : 0x0 ] eax
mov edi [ ebp + 0x8 ]
mov eax ecx
lea ecx [ esp + 0x14 ]
call sub_10009b55
lea eax [ esp + 0x10 ]
push eax
xor ebx ebx
mov [ esp + 0x6c ] ebx
push [ esp + 0x18 ]
mov [ esp + 0x18 ] ebx
push 0x4
pop esi
call sub_10016625
push [ esp + 0x10 ]
lea esi [ esp + 0x40 ]
call sub_10009dc2
mov [ esp + 0x68 ] 0x1
mov esi [ esp + 0x10 ]
cmp esi ebx
jle r-xdata
push ebx
lea ecx [ esp + 0x24 ]
mov [ esp + 0x3c ] 0xf
call sub_1000237a
lea ecx [ esp + 0x20 ]
push ecx
lea ecx [ esp + 0x40 ]
mov [ esp + 0x6c ] 0x2
mov eax [ edi ]
push ecx
mov ecx edi
call [ eax + 0x4 ]
mov eax [ esp + 0x34 ]
mov [ esp + 0x1c ] eax
lea eax [ esp + 0x1c ]
push eax
push [ esp + 0x18 ]
push 0x4
pop esi
call sub_10016589
mov esi [ esp + 0x1c ]
cmp esi ebx
jle r-xdata
cmp [ esp + 0x54 ] 0x10
mov eax [ esp + 0x40 ]
jae r-xdata
push ebx
push 0x1
lea ecx [ esp + 0x28 ]
call sub_100022b5
push ebx
push 0x1
lea ecx [ esp + 0x44 ]
call sub_100022b5
or [ esp + 0x68 ] 0xffffffff
mov ecx [ esp + 0x18 ]
cmp ecx ebx
je r-xdata
cmp [ esp + 0x38 ] 0x10
mov eax [ esp + 0x24 ]
jae r-xdata
push eax
push [ esp + 0x18 ]
call sub_10016625
lea eax [ esp + 0x40 ]
mov ecx [ esp + 0x60 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ esp + 0x48 ]
xor ecx esp
call sub_10025c8d
mov esp ebp
pop ebp
retn 0x4
call sub_1000990a
push eax
push [ esp + 0x18 ]
call sub_10016589
lea eax [ esp + 0x24 ]
sub_10009e00
push 0x4
mov eax sub_1004e43d
call sub_10029e33
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
lea ecx [ esi + 0xf4 ]
mov [ ebp - 0x4 ] 0x1
call sub_100124dc
lea edi [ esi + 0x18 ]
call sub_1000253c
or [ ebp - 0x4 ] 0xffffffff
mov ecx esi
call sub_10009970
call sub_10029f0b
retn
sub_10009e42
push ebp
sub esp 0xe0
lea ebp [ esp - 0x4 ]
mov eax [ rw-data ]
xor eax ebp
mov [ ebp + 0xe0 ] eax
push 0x2c
mov eax sub_1004ef43
call sub_10029e66
and [ ebp - 0x4 ] 0x0
mov edi ecx
lea eax [ ebp + 0x4 ]
lea ecx [ edi + 0x18 ]
push eax
mov [ ebp - 0x1c ] edi
mov [ ebp ] r--data
call sub_10001127
lea eax [ ebp - 0x34 ]
push eax
lea eax [ ebp ]
push eax
mov [ ebp - 0x4 ] 0x1
call sub_100085fd
mov [ ebp - 0x4 ] 0x2
mov esi [ ebp - 0x28 ]
cmp esi [ ebp - 0x24 ]
jbe r-xdata
mov eax [ ebp - 0x34 ]
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] esi
call sub_100261ef
mov eax [ ebp - 0x18 ]
test eax eax
je r-xdata
call sub_100261ef
call sub_100261ef
cmp eax [ ebp - 0x34 ]
je r-xdata
lea eax [ ebp - 0x34 ]
push eax
mov [ ebp - 0x4 ] 0x1
call sub_10008ad1
lea ecx [ ebp ]
call sub_1000837b
or [ ebp - 0x4 ] 0xffffffff
jmp r-xdata
lea esi [ ebp - 0x18 ]
call sub_1000a447
cmp [ eax ] 0x0
je r-xdata
cmp [ ebp - 0x14 ] esi
je r-xdata
push edi
call sub_1000a244
lea esi [ ebp - 0x18 ]
call sub_1000a46f
jmp r-xdata
call sub_1000a447
mov edx [ eax ]
push ecx
push ecx
mov ecx esp
add eax 0x4
mov [ ebp - 0x38 ] esp
mov [ ecx ] edx
push eax
add ecx 0x4
call sub_1000979b
lea esi [ edi + 0xf4 ]
call sub_10012511
mov esi [ ebp - 0x24 ]
cmp [ ebp - 0x28 ] esi
jbe r-xdata
sub_10009f3d
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_1004ee70
mov eax [ fs : 0x0 ]
push eax
sub esp 0x270
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x268 ] eax
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x280 ]
mov [ fs : 0x0 ] eax
mov esi ecx
lea edi [ esp + 0x18 ]
mov [ esp + 0x20 ] esi
call sub_100126c4
xor ebx ebx
mov [ esp + 0x288 ] ebx
push ebx
lea ecx [ esp + 0xd4 ]
mov [ esp + 0xec ] 0xf
call sub_1000237a
mov [ esp + 0x288 ] 0x1
mov ecx [ esp + 0x18 ]
cmp ecx ebx
je r-xdata
lea eax [ esp + 0x198 ]
add esi 0x18
push eax
mov ecx esi
mov [ esp + 0x198 ] r--data
call sub_10001127
mov [ esp + 0x288 ] 0x3
call [ GetVersion@IAT ]
mov edi eax
lea eax [ esp + 0x44 ]
push eax
call sub_10002eb8
lea eax [ esp + 0x28 ]
push eax
mov [ esp + 0x28c ] 0x4
call sub_1000bae2
pop ecx
push eax
lea eax [ esp + 0x50 ]
push eax
mov [ esp + 0x290 ] 0x5
call sub_1000a633
pop ecx
pop ecx
push ebx
push 0x1
lea ecx [ esp + 0x30 ]
mov [ esp + 0x290 ] 0x4
call sub_1000247e
push r--data
push ecx
lea eax [ esp + 0x54 ]
push r--data
push eax
call sub_1000a7bb
add esp 0xc
push eax
call sub_1000a7bb
pop ecx
pop ecx
push edi
push ecx
lea eax [ esp + 0x54 ]
push r--data
push eax
call sub_1000a7bb
add esp 0xc
push eax
call sub_1000a35c
lea ecx [ esp + 0x28 ]
lea eax [ esp + 0x44 ]
call sub_10002fe7
push eax
lea eax [ esp + 0xf0 ]
push eax
mov ecx esi
mov [ esp + 0x290 ] 0x6
call sub_10012b41
push ebx
push 0x1
lea ecx [ esp + 0x30 ]
mov [ esp + 0x290 ] 0x8
call sub_1000247e
lea eax [ esp + 0xd0 ]
push eax
lea eax [ esp + 0x14 ]
push eax
lea eax [ esp + 0x19c ]
push eax
lea ecx [ esp + 0xf8 ]
call sub_1000838c
mov [ esp + 0x288 ] 0x9
mov ecx [ esp + 0x10 ]
cmp ecx ebx
je r-xdata
lea edi [ esp + 0x28 ]
call sub_100128c0
push 0xffffffff
push ebx
push eax
lea ecx [ esp + 0xdc ]
mov [ esp + 0x294 ] 0x2
call sub_10002099
push ebx
push 0x1
mov ecx edi
mov [ esp + 0x290 ] 0x1
call sub_100022b5
mov eax [ esp + 0x18 ]
cmp eax ebx
je r-xdata
push ecx
push ecx
mov eax esp
mov [ eax ] ecx
lea ecx [ esp + 0x1c ]
mov [ esp + 0x2c ] esp
push ecx
lea ecx [ eax + 0x4 ]
call sub_1000979b
mov esi [ esp + 0x28 ]
add esi 0xf4
call sub_10012511
cmp [ esp + 0x10 ] ebx
jne r-xdata
cmp [ eax + 0x1c ] 0x8
jb r-xdata
mov [ esp + 0x288 ] 0x8
mov ecx [ esp + 0x14 ]
cmp ecx ebx
je r-xdata
mov [ esp + 0x288 ] 0x8
mov ecx [ esp + 0x14 ]
cmp ecx ebx
je r-xdata
add eax 0x8
mov eax [ eax + 0x8 ]
jmp r-xdata
lea ecx [ esp + 0xec ]
call sub_10012be9
lea eax [ esp + 0x44 ]
mov [ esp + 0x288 ] 0x3
call sub_100025f4
lea ecx [ esp + 0x194 ]
call sub_1000837b
push ebx
push 0x1
lea ecx [ esp + 0xd8 ]
call sub_100022b5
or [ esp + 0x288 ] 0xffffffff
mov ecx [ esp + 0x1c ]
cmp ecx ebx
je r-xdata
call sub_1000990a
lea ecx [ esp + 0xec ]
call sub_10012be9
lea eax [ esp + 0x44 ]
mov [ esp + 0x288 ] 0x3
call sub_100025f4
lea ecx [ esp + 0x194 ]
call sub_1000837b
push ebx
push 0x1
lea ecx [ esp + 0xd8 ]
call sub_100022b5
or [ esp + 0x288 ] 0xffffffff
mov ecx [ esp + 0x1c ]
cmp ecx ebx
je r-xdata
call sub_1000990a
push eax
call [ DeleteFileW@IAT ]
cmp [ esp + 0x18 ] ebx
jne r-xdata
mov al 0x1
call sub_1000990a
xor al al
jmp r-xdata
call sub_1000990a
mov ecx [ esp + 0x280 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ esp + 0x268 ]
xor ecx esp
call sub_10025c8d
mov esp ebp
pop ebp
retn
sub_1000a244
push 0x20
mov eax sub_1004ef16
call sub_10029e66
mov esi [ ebp + 0x8 ]
or [ ebp - 0x4 ] 0xffffffff
jmp r-xdata
push 0x2bf20
call [ Sleep@IAT ]
or [ ebp - 0x4 ] 0xffffffff
jmp r-xdata
lea eax [ ebp - 0x24 ]
push eax
call sub_1000a49a
xor ebx ebx
pop ecx
mov [ ebp - 0x14 ] 0x6ddd00
cmp [ esi + 0x4c ] ebx
je r-xdata
lea ecx [ esi + 0x18 ]
call sub_10002a95
and [ ebp - 0x4 ] 0x0
mov ecx esi
call sub_10009f3d
cmp al 0x1
jne r-xdata
lea edi [ esi + 0x18 ]
call sub_10027d3c
xor edx edx
div [ esi + 0x4c ]
mov [ ebp - 0x14 ] edx
push 0x3e8
call [ Sleep@IAT ]
lea eax [ ebp - 0x2c ]
push eax
call sub_1000a49a
lea eax [ ebp - 0x1c ]
push eax
lea eax [ ebp - 0x24 ]
lea ecx [ ebp - 0x2c ]
call sub_1000a4d3
pop ecx
pop ecx
mov ecx edi
call sub_10002a95
push 0x0
push 0x3e8
push [ ebp - 0x18 ]
push [ ebp - 0x1c ]
call sub_1002d160
cmp edx ebx
jl r-xdata
jg r-xdata
cmp eax [ ebp - 0x14 ]
jb r-xdata
jmp r-xdata
sub_1000a308
push 0x20
mov eax sub_1004d5bc
call sub_10029e33
mov eax [ ebp + 0x8 ]
push [ eax + 0x4 ]
call [ SuspendThread@IAT ]
push r--data
lea ecx [ ebp - 0x28 ]
mov esi eax
call sub_10001b81
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x28 ]
push eax
cmp esi 0xffffffff
sete al
movzx eax al
push eax
call sub_10014a2a
pop ecx
pop ecx
push 0x0
push 0x1
lea ecx [ ebp - 0x28 ]
call sub_100022b5
call sub_10029f0b
retn 0x4
sub_1000a35c
push 0x1c
mov eax sub_1004e40f
call sub_10029e66
mov edi [ ebp + 0x8 ]
lea eax [ ebp - 0x20 ]
xor ebx ebx
push eax
mov [ ebp - 0x14 ] ebx
call sub_10010b15
mov [ ebp - 0x4 ] ebx
cmp [ ebp - 0x1c ] bl
je r-xdata
mov eax [ edi ]
mov edx [ eax + 0x4 ]
add edx edi
cmp [ ebp - 0x14 ] ebx
je r-xdata
lea eax [ ebp - 0x18 ]
push eax
mov eax [ edi ]
mov ecx [ eax + 0x4 ]
add ecx edi
call sub_1000781e
push eax
mov [ ebp - 0x4 ] 0x1
call sub_10005ee7
pop ecx
lea ecx [ ebp - 0x18 ]
mov esi eax
call sub_10007806
push [ ebp + 0xc ]
mov [ ebp - 0x4 ] 0x2
mov ecx [ edi ]
mov eax [ ecx + 0x4 ]
mov ecx [ ecx + 0x4 ]
add ecx edi
mov edx [ ecx + 0x28 ]
mov [ ebp - 0x28 ] bl
movzx ecx [ ecx + 0x30 ]
mov ebx [ esi ]
push ecx
add eax edi
push eax
push edx
push [ ebp - 0x28 ]
lea eax [ ebp - 0x28 ]
push eax
mov ecx esi
call [ ebx + 0x18 ]
xor ebx ebx
cmp [ ebp - 0x28 ] bl
je r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea eax [ ebp - 0x20 ]
push eax
call sub_10010a9e
mov eax edi
call sub_10029f0b
retn 0x8
push ebx
push [ ebp - 0x14 ]
call sub_10007acb
mov [ ebp - 0x4 ] ebx
jmp r-xdata
mov [ ebp - 0x14 ] 0x4
sub_1000a3eb
mov ecx [ ebp + 0x8 ]
mov eax [ ecx ]
mov eax [ eax + 0x4 ]
add eax ecx
mov ecx [ eax + 0x8 ]
or ecx 0x4
cmp [ eax + 0x28 ] 0x0
jne r-xdata
push 0x1
push eax
call sub_100079b1
and [ ebp - 0x4 ] 0x0
mov eax r-xdata
retn
or ecx 0x4
sub_1000a447
mov eax [ esi ]
test eax eax
jne r-xdata
mov eax [ eax ]
jmp r-xdata
call sub_100261ef
mov eax [ esi ]
test eax eax
je r-xdata
mov ecx [ esi + 0x4 ]
cmp ecx [ eax + 0x10 ]
jb r-xdata
xor eax eax
mov eax [ esi + 0x4 ]
retn
call sub_100261ef
sub_1000a46f
mov eax [ esi ]
test eax eax
jne r-xdata
mov eax [ eax ]
jmp r-xdata
call sub_100261ef
mov eax [ esi ]
test eax eax
je r-xdata
mov ecx [ esi + 0x4 ]
cmp ecx [ eax + 0x10 ]
jb r-xdata
xor eax eax
add [ esi + 0x4 ] 0x8
mov eax esi
retn
call sub_100261ef
sub_1000a49a
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x34
lea eax [ esp + 0x4 ]
push esi
push eax
call sub_10027d88
pop ecx
lea eax [ esp + 0x14 ]
push eax
lea eax [ esp + 0xc ]
push eax
call sub_1000b9e0
push [ ebp + 0x8 ]
mov esi eax
call sub_1000a56f
mov eax [ ebp + 0x8 ]
add esp 0xc
pop esi
mov esp ebp
pop ebp
retn
sub_1000a4d3
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x1c
push ebx
push esi
push edi
mov edi ecx
mov esi edi
mov ebx eax
call sub_1000b655
test al al
jne r-xdata
mov eax [ ebx ]
mov [ esp + 0x10 ] eax
mov eax [ ebx + 0x4 ]
mov [ esp + 0x14 ] eax
mov eax [ edi ]
mov [ esp + 0x18 ] eax
mov eax [ edi + 0x4 ]
mov [ esp + 0x1c ] eax
lea eax [ esp + 0x10 ]
push eax
lea edi [ esp + 0x24 ]
lea ebx [ esp + 0x1c ]
call sub_1000b480
push [ eax + 0x4 ]
push [ eax ]
call sub_1000b5a1
pop ecx
pop ecx
mov ecx eax
mov eax [ ebp + 0x8 ]
call sub_1000b5e7
mov eax [ ebp + 0x8 ]
mov esi ebx
call sub_1000b655
test al al
jne r-xdata
mov edx [ ebx ]
mov eax [ edi ]
mov ecx [ edi + 0x4 ]
mov ebx [ ebx + 0x4 ]
sub eax edx
sbb ecx ebx
push ecx
push eax
push 0x0
xor ecx ecx
xor eax eax
call sub_1000b39c
mov ecx [ ebp + 0x8 ]
mov [ ecx ] eax
add esp 0xc
mov [ ecx + 0x4 ] edx
mov eax ecx
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_1000a56f
push ebp
mov ebp esp
movzx eax [ esi + 0xc ]
sub esp 0x14
xor edx edx
inc edx
push ecx
mov ecx esp
mov [ ecx ] dx
movzx edx ax
inc edx
cmp edx 0x2
jge r-xdata
cmp ax 0x1f
ja r-xdata
call sub_1000afba
mov [ ecx ] ax
mov ax [ esi + 0x10 ]
inc ax
xor edx edx
inc edx
push ecx
movzx eax ax
mov ecx esp
mov [ ecx ] dx
movzx edx ax
inc edx
cmp edx 0x2
jge r-xdata
cmp ax 0xc
ja r-xdata
call sub_1000af43
mov [ ecx ] ax
mov eax 0x76c
add ax [ esi + 0x14 ]
push ecx
movzx eax ax
mov edx 0x578
mov ecx esp
mov [ ecx ] dx
movzx edx ax
inc edx
cmp edx 0x579
jge r-xdata
mov edx 0x2710
cmp ax dx
ja r-xdata
call sub_1000ac8e
mov [ ecx ] ax
lea eax [ ebp - 0x8 ]
push eax
call sub_1000b285
mov ecx [ esi + 0x4 ]
mov eax [ esi + 0x8 ]
push 0x0
push 0x0
push [ esi ]
call sub_1000b39c
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x8 ]
add esp 0xc
push [ ebp + 0x8 ]
mov [ ebp - 0x8 ] eax
lea ecx [ ebp - 0x14 ]
lea eax [ ebp - 0x8 ]
mov [ ebp - 0x10 ] edx
call sub_1000a9f1
mov eax [ ebp + 0x8 ]
leave
retn
sub_1000a633
push 0x1c
mov eax sub_1004e3e2
call sub_10029e66
mov edi [ ebp + 0x8 ]
mov eax [ ebp + 0xc ]
mov ecx [ eax + 0x14 ]
mov eax [ edi ]
mov eax [ eax + 0x4 ]
mov eax [ eax + edi + 0x18 ]
xor esi esi
cmp eax esi
mov [ ebp - 0x18 ] esi
mov [ ebp - 0x20 ] ecx
jle r-xdata
mov [ ebp - 0x1c ] esi
cmp eax ecx
jbe r-xdata
mov [ ebp - 0x4 ] 0x1
mov eax [ edi ]
mov eax [ eax + 0x4 ]
mov eax [ eax + edi + 0x10 ]
and eax 0x1c0
cmp eax 0x40
je r-xdata
mov [ ebp - 0x18 ] 0x4
jmp r-xdata
sub eax ecx
mov [ ebp - 0x1c ] eax
jmp r-xdata
xor ebx ebx
cmp [ ebp - 0x1c ] esi
jbe r-xdata
mov eax [ edi ]
mov edx [ eax + 0x4 ]
add edx edi
cmp [ ebp - 0x18 ] esi
je r-xdata
lea eax [ ebp - 0x28 ]
push eax
call sub_10010b15
mov [ ebp - 0x4 ] esi
cmp [ ebp - 0x24 ] 0x0
jne r-xdata
cmp [ ebp - 0x18 ] esi
jne r-xdata
mov eax [ edi ]
mov eax [ eax + 0x4 ]
mov ecx [ ebp + 0xc ]
mov esi [ eax + edi + 0x28 ]
push ebx
call sub_1000a914
movzx eax [ eax ]
push eax
mov ecx esi
call sub_10007888
movzx eax ax
mov ecx 0xffff
cmp cx ax
jne r-xdata
cmp [ ebp - 0x18 ] esi
jne r-xdata
mov eax [ edi ]
mov eax [ eax + 0x4 ]
add eax edi
movzx edx [ eax + 0x30 ]
mov eax [ eax + 0x28 ]
push edx
mov ecx eax
call sub_10007888
movzx eax ax
mov ecx 0xffff
cmp cx ax
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea eax [ ebp - 0x28 ]
push eax
call sub_10010a9e
mov eax edi
call sub_10029f0b
retn
push esi
push [ ebp - 0x18 ]
call sub_10007acb
mov eax [ edi ]
mov eax [ eax + 0x4 ]
add eax edi
mov [ eax + 0x18 ] esi
mov [ ebp - 0x4 ] esi
cmp [ ebp - 0x1c ] esi
jbe r-xdata
inc ebx
xor esi esi
jmp r-xdata
or [ ebp - 0x18 ] 0x4
xor esi esi
dec [ ebp - 0x1c ]
jmp r-xdata
or [ ebp - 0x18 ] 0x4
mov eax [ edi ]
mov eax [ eax + 0x4 ]
add eax edi
movzx edx [ eax + 0x30 ]
mov eax [ eax + 0x28 ]
push edx
mov ecx eax
call sub_10007888
movzx eax ax
mov ecx 0xffff
cmp cx ax
jne r-xdata
cmp ebx [ ebp - 0x20 ]
jae r-xdata
dec [ ebp - 0x1c ]
jmp r-xdata
or [ ebp - 0x18 ] 0x4
sub_1000a789
mov ecx [ ebp + 0x8 ]
mov eax [ ecx ]
mov eax [ eax + 0x4 ]
add eax ecx
mov ecx [ eax + 0x8 ]
or ecx 0x4
cmp [ eax + 0x28 ] 0x0
jne r-xdata
push 0x1
push eax
call sub_100079b1
and [ ebp - 0x4 ] 0x0
mov eax r-xdata
retn
or ecx 0x4
sub_1000a7bb
push 0x14
mov eax sub_1004e3bd
call sub_10029e66
mov edi [ ebp + 0x8 ]
push [ ebp + 0xc ]
xor ebx ebx
mov [ ebp - 0x18 ] ebx
call sub_10026078
mov esi eax
mov eax [ edi ]
mov eax [ eax + 0x4 ]
mov eax [ eax + edi + 0x18 ]
cmp eax ebx
pop ecx
jle r-xdata
lea eax [ ebp - 0x20 ]
push eax
call sub_10010b15
and [ ebp - 0x4 ] 0x0
cmp [ ebp - 0x1c ] 0x0
jne r-xdata
cmp eax esi
jle r-xdata
mov [ ebp - 0x4 ] 0x1
mov eax [ edi ]
mov eax [ eax + 0x4 ]
mov eax [ eax + edi + 0x10 ]
and eax 0x1c0
cmp eax 0x40
je r-xdata
mov [ ebp - 0x18 ] 0x4
jmp r-xdata
sub eax esi
mov ebx eax
mov eax [ edi ]
mov eax [ eax + 0x4 ]
mov ecx [ eax + edi + 0x28 ]
mov eax [ ecx ]
push esi
push [ ebp + 0xc ]
call [ eax + 0x20 ]
cmp eax esi
je r-xdata
test ebx ebx
jle r-xdata
mov eax [ edi ]
mov edx [ eax + 0x4 ]
add edx edi
cmp [ ebp - 0x18 ] 0x0
je r-xdata
test ebx ebx
jle r-xdata
mov [ ebp - 0x18 ] 0x4
cmp [ ebp - 0x18 ] 0x0
jne r-xdata
mov eax [ edi ]
mov eax [ eax + 0x4 ]
add eax edi
movzx edx [ eax + 0x30 ]
mov eax [ eax + 0x28 ]
push edx
mov ecx eax
call sub_10007888
movzx eax ax
mov ecx 0xffff
cmp cx ax
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea eax [ ebp - 0x20 ]
push eax
call sub_10010a9e
mov eax edi
call sub_10029f0b
retn
push 0x0
push [ ebp - 0x18 ]
call sub_10007acb
mov eax [ edi ]
mov eax [ eax + 0x4 ]
add eax edi
and [ eax + 0x18 ] 0x0
and [ ebp - 0x4 ] 0x0
mov eax [ edi ]
mov eax [ eax + 0x4 ]
add eax edi
movzx edx [ eax + 0x30 ]
mov eax [ eax + 0x28 ]
push edx
mov ecx eax
call sub_10007888
movzx eax ax
mov ecx 0xffff
cmp cx ax
jne r-xdata
dec ebx
jmp r-xdata
or [ ebp - 0x18 ] 0x4
dec ebx
jmp r-xdata
or [ ebp - 0x18 ] 0x4
jmp r-xdata
sub_1000a8e1
mov ecx [ ebp + 0x8 ]
mov eax [ ecx ]
mov eax [ eax + 0x4 ]
add eax ecx
mov ecx [ eax + 0x8 ]
or ecx 0x4
cmp [ eax + 0x28 ] 0x0
jne r-xdata
push 0x1
push eax
call sub_100079b1
and [ ebp - 0x4 ] 0x0
mov eax r-xdata
retn
or ecx 0x4
sub_1000a914
push esi
push edi
mov edi [ esp + 0xc ]
mov esi ecx
cmp edi [ esi + 0x14 ]
jbe r-xdata
cmp [ esi + 0x18 ] 0x8
jb r-xdata
call sub_100261ef
add esi 0x4
mov esi [ esi + 0x4 ]
jmp r-xdata
lea eax [ esi + edi * 2 ]
pop edi
pop esi
retn 0x4
sub_1000a93c
push ecx
push esi
mov esi ebx
call sub_1000b655
test al al
jne r-xdata
mov eax [ ebx ]
mov ecx [ ebx + 0x4 ]
push 0xfffffffe
pop edx
cmp eax edx
jne r-xdata
mov eax [ esp + 0xc ]
mov esi [ eax ]
test esi esi
je r-xdata
mov esi [ esp + 0xc ]
mov esi [ esi ]
cmp esi edx
je r-xdata
cmp ecx 0x7fffffff
je r-xdata
cmp esi 0xffffffff
je r-xdata
mov [ edi ] edx
push ecx
push eax
call sub_1000b589
pop ecx
pop ecx
test al al
je r-xdata
cmp esi 0xfffffffe
jne r-xdata
cmp [ ebx ] 0x0
jne r-xdata
test esi esi
je r-xdata
xor eax eax
add esi [ ebx ]
adc eax [ ebx + 0x4 ]
mov [ edi ] esi
jmp r-xdata
mov eax ebx
call sub_1000b632
test al al
je r-xdata
cmp [ ebx + 0x4 ] 0x80000000
jne r-xdata
mov [ edi ] 0xfffffffe
jmp r-xdata
mov [ edi + 0x4 ] eax
jmp r-xdata
cmp esi 0xffffffff
jne r-xdata
mov eax [ ebx ]
mov [ edi ] eax
mov eax [ ebx + 0x4 ]
cmp esi 0xffffffff
jne r-xdata
mov [ edi + 0x4 ] 0x7fffffff
mov eax edi
pop esi
pop ecx
retn 0x4
test esi esi
jne r-xdata
or [ edi ] esi
jmp r-xdata
and [ edi ] esi
mov [ edi + 0x4 ] 0x80000000
jmp r-xdata
sub_1000a9f1
push ebp
mov ebp esp
sub esp 0x18
push ebx
push esi
mov esi [ ebp + 0x8 ]
and [ esi + 0x4 ] 0x0
mov [ esi ] 0x1
mov ebx [ eax ]
push edi
mov edi ecx
test ebx ebx
je r-xdata
mov eax [ edi ]
mov [ ebp - 0xc ] eax
mov eax [ edi + 0x4 ]
mov [ ebp - 0x8 ] eax
lea eax [ ebp + 0x8 ]
mov [ ebp + 0x8 ] ebx
push eax
lea edi [ ebp - 0x14 ]
lea ebx [ ebp - 0xc ]
call sub_1000a93c
mov ecx [ eax ]
mov [ esi ] ecx
mov eax [ eax + 0x4 ]
mov [ esi + 0x4 ] eax
cmp ebx 0xffffffff
je r-xdata
cmp ebx 0xfffffffe
je r-xdata
mov esi edi
call sub_1000b655
test al al
jne r-xdata
mov esi [ ebp + 0x8 ]
mov esi [ edi ]
mov edi [ edi + 0x4 ]
push 0x14
push 0x1dd76000
push 0x0
push ebx
call sub_1002cea0
mov ecx eax
mov eax [ ebp + 0x8 ]
add ecx esi
adc edx edi
mov [ eax ] ecx
mov [ eax + 0x4 ] edx
mov esi eax
jmp r-xdata
pop edi
mov eax esi
pop esi
pop ebx
leave
retn 0x4
sub_1000aa7d
push 0x4
mov eax sub_1004c55a
call sub_10029e33
mov edi ecx
mov esi [ ebp + 0x8 ]
and [ ebp - 0x10 ] 0x0
push edi
mov ecx esi
call sub_1000ac2f
and [ ebp - 0x4 ] 0x0
mov [ esi + 0x3c ] r--data
mov [ ebp - 0x4 ] 0x1
lea ebx [ esi + 0x28 ]
mov [ esi ] r--data
mov [ ebx ] r--data
mov [ esi + 0x3c ] r--data
test edi edi
je r-xdata
xor edi edi
add edi 0x28
jmp r-xdata
call sub_1000b69b
mov eax esi
call sub_10029f0b
retn
sub_1000aad7
push ebp
mov ebp esp
push ecx
push [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
mov ecx esi
call sub_1000ac76
mov [ esi + 0x28 ] r--data
and [ esi + 0x2c ] 0x0
and [ esi + 0x30 ] 0x0
and [ esi + 0x34 ] 0x0
or [ esi + 0x38 ] 0xffffffff
mov [ esi ] r--data
mov [ esi + 0x28 ] r--data
mov eax esi
leave
retn
sub_1000ab58
push 0x4
mov eax sub_1004c0e1
call sub_10029e33
mov esi ecx
push 0x40
call sub_10025dd6
pop ecx
mov ecx eax
mov [ ebp - 0x10 ] ecx
and [ ebp - 0x4 ] 0x0
test ecx ecx
je r-xdata
xor eax eax
add esi 0xffffffc4
push esi
call sub_1000abde
jmp r-xdata
xor eax eax
add eax 0x3c
jmp r-xdata
test eax eax
je r-xdata
call sub_10029f0b
retn
sub_1000ac2f
push 0x4
mov eax sub_1004c0bc
call sub_10029e33
mov esi ecx
mov [ ebp - 0x10 ] esi
mov edi [ ebp + 0x8 ]
push edi
call sub_1000ac76
xor eax eax
mov [ ebp - 0x4 ] eax
cmp edi eax
je r-xdata
lea edi [ esi + 0x28 ]
push eax
mov ecx edi
call sub_1000b942
mov [ esi ] r--data
mov [ edi ] r--data
mov eax esi
call sub_10029f0b
retn 0x4
lea eax [ edi + 0x28 ]
sub_1000ac8e
push 0xc4
mov eax sub_1004cdfb
call sub_10029e33
push r--data
lea ecx [ ebp - 0x54 ]
call sub_10001b81
and [ ebp - 0x4 ] 0x0
push eax
lea ecx [ ebp - 0x38 ]
call sub_1000b26d
xor esi esi
push 0x0
inc esi
push esi
lea ecx [ ebp - 0x54 ]
call sub_100022b5
mov [ ebp - 0x38 ] r--data
lea eax [ ebp - 0x38 ]
mov [ ebp - 0x4 ] esi
push eax
lea esi [ ebp - 0xd0 ]
call sub_1000aad7
pop ecx
lea ecx [ ebp - 0x94 ]
push ecx
mov ecx eax
mov [ ebp - 0x4 ] 0x2
call sub_1000aa7d
lea eax [ ebp - 0x94 ]
mov [ esp ] r--data
push eax
call sub_10029a01
int3
sub_1000ad05
push 0x4
mov eax sub_1004c52c
call sub_10029e33
mov edi ecx
mov esi [ ebp + 0x8 ]
and [ ebp - 0x10 ] 0x0
push edi
mov ecx esi
call sub_1000aeb7
and [ ebp - 0x4 ] 0x0
mov [ esi + 0x3c ] r--data
mov [ ebp - 0x4 ] 0x1
lea ebx [ esi + 0x28 ]
mov [ esi ] r--data
mov [ ebx ] r--data
mov [ esi + 0x3c ] r--data
test edi edi
je r-xdata
xor edi edi
add edi 0x28
jmp r-xdata
call sub_1000b69b
mov eax esi
call sub_10029f0b
retn
sub_1000ad5f
push ebp
mov ebp esp
push ecx
push [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
mov ecx esi
call sub_1000aefe
mov [ esi + 0x28 ] r--data
and [ esi + 0x2c ] 0x0
and [ esi + 0x30 ] 0x0
and [ esi + 0x34 ] 0x0
or [ esi + 0x38 ] 0xffffffff
mov [ esi ] r--data
mov [ esi + 0x28 ] r--data
mov eax esi
leave
retn
sub_1000ade0
push 0x4
mov eax sub_1004c0e1
call sub_10029e33
mov esi ecx
push 0x40
call sub_10025dd6
pop ecx
mov ecx eax
mov [ ebp - 0x10 ] ecx
and [ ebp - 0x4 ] 0x0
test ecx ecx
je r-xdata
xor eax eax
add esi 0xffffffc4
push esi
call sub_1000ae66
jmp r-xdata
xor eax eax
add eax 0x3c
jmp r-xdata
test eax eax
je r-xdata
call sub_10029f0b
retn
sub_1000aeb7
push 0x4
mov eax sub_1004c0bc
call sub_10029e33
mov esi ecx
mov [ ebp - 0x10 ] esi
mov edi [ ebp + 0x8 ]
push edi
call sub_1000aefe
xor eax eax
mov [ ebp - 0x4 ] eax
cmp edi eax
je r-xdata
lea edi [ esi + 0x28 ]
push eax
mov ecx edi
call sub_1000b942
mov [ esi ] r--data
mov [ edi ] r--data
mov eax esi
call sub_10029f0b
retn 0x4
lea eax [ edi + 0x28 ]
sub_1000af43
push 0xc4
mov eax sub_1004cdc2
call sub_10029e33
push r--data
lea ecx [ ebp - 0x54 ]
call sub_10001b81
and [ ebp - 0x4 ] 0x0
push eax
lea ecx [ ebp - 0x38 ]
call sub_1000b26d
xor esi esi
push 0x0
inc esi
push esi
lea ecx [ ebp - 0x54 ]
call sub_100022b5
mov [ ebp - 0x38 ] r--data
lea eax [ ebp - 0x38 ]
mov [ ebp - 0x4 ] esi
push eax
lea esi [ ebp - 0xd0 ]
call sub_1000ad5f
pop ecx
lea ecx [ ebp - 0x94 ]
push ecx
mov ecx eax
mov [ ebp - 0x4 ] 0x2
call sub_1000ad05
lea eax [ ebp - 0x94 ]
mov [ esp ] r--data
push eax
call sub_10029a01
int3
sub_1000afba
push 0x44
mov eax sub_1004cd8b
call sub_10029e33
push r--data
lea ecx [ ebp - 0x28 ]
call sub_10001b81
and [ ebp - 0x4 ] 0x0
push eax
lea ecx [ ebp - 0x50 ]
call sub_1000b26d
push 0x0
push 0x1
lea ecx [ ebp - 0x28 ]
call sub_100022b5
mov [ ebp - 0x50 ] r--data
lea eax [ ebp - 0x50 ]
push eax
mov [ ebp - 0x4 ] 0x1
call sub_1000b22d
sub_1000b004
push 0x4
mov eax sub_1004c4fe
call sub_10029e33
mov edi ecx
mov esi [ ebp + 0x8 ]
and [ ebp - 0x10 ] 0x0
push edi
mov ecx esi
call sub_1000b1b6
and [ ebp - 0x4 ] 0x0
mov [ esi + 0x3c ] r--data
mov [ ebp - 0x4 ] 0x1
lea ebx [ esi + 0x28 ]
mov [ esi ] r--data
mov [ ebx ] r--data
mov [ esi + 0x3c ] r--data
test edi edi
je r-xdata
xor edi edi
add edi 0x28
jmp r-xdata
call sub_1000b69b
mov eax esi
call sub_10029f0b
retn
sub_1000b05e
push ebp
mov ebp esp
push ecx
push [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
mov ecx esi
call sub_1000b1fd
mov [ esi + 0x28 ] r--data
and [ esi + 0x2c ] 0x0
and [ esi + 0x30 ] 0x0
and [ esi + 0x34 ] 0x0
or [ esi + 0x38 ] 0xffffffff
mov [ esi ] r--data
mov [ esi + 0x28 ] r--data
mov eax esi
leave
retn
sub_1000b0df
push 0x4
mov eax sub_1004c0e1
call sub_10029e33
mov esi ecx
push 0x40
call sub_10025dd6
pop ecx
mov ecx eax
mov [ ebp - 0x10 ] ecx
and [ ebp - 0x4 ] 0x0
test ecx ecx
je r-xdata
xor eax eax
add esi 0xffffffc4
push esi
call sub_1000b165
jmp r-xdata
xor eax eax
add eax 0x3c
jmp r-xdata
test eax eax
je r-xdata
call sub_10029f0b
retn
sub_1000b1b6
push 0x4
mov eax sub_1004c0bc
call sub_10029e33
mov esi ecx
mov [ ebp - 0x10 ] esi
mov edi [ ebp + 0x8 ]
push edi
call sub_1000b1fd
xor eax eax
mov [ ebp - 0x4 ] eax
cmp edi eax
je r-xdata
lea edi [ esi + 0x28 ]
push eax
mov ecx edi
call sub_1000b942
mov [ esi ] r--data
mov [ edi ] r--data
mov eax esi
call sub_10029f0b
retn 0x4
lea eax [ edi + 0x28 ]
sub_1000b22d
push 0x80
mov eax sub_1004c992
call sub_10029e33
push [ ebp + 0x8 ]
lea esi [ ebp - 0x4c ]
call sub_1000b05e
and [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x8c ]
push ecx
mov ecx eax
call sub_1000b004
pop ecx
pop ecx
push r--data
lea eax [ ebp - 0x8c ]
push eax
call sub_10029a01
int3
sub_1000b285
push 0x44
mov eax sub_1004cd60
call sub_10029e33
movzx esi [ ebp + 0x10 ]
push 0xe
pop eax
sub eax esi
cdq
push 0xc
pop ecx
idiv ecx
mov ecx [ ebp + 0xc ]
mov edx [ ebp + 0x10 ]
push 0x5
pop edi
mov ebx 0x190
push 0x64
movzx eax ax
sub ecx eax
imul eax eax 0xc
lea eax [ eax + edx - 0x3 ]
movzx eax ax
movzx eax ax
imul eax eax 0x99
add ecx 0x12c0
inc eax
inc eax
cdq
idiv edi
movzx ecx cx
movzx ecx cx
mov edi eax
mov eax ecx
cdq
idiv ebx
pop ebx
push 0x2
add edi eax
mov eax ecx
cdq
idiv ebx
sub edi eax
mov eax ecx
imul eax eax 0x16d
add edi eax
movzx eax [ ebp + 0x14 ]
shr ecx 0x2
add edi ecx
mov ecx [ ebp + 0x8 ]
lea eax [ edi + eax - 0x7d2d ]
mov [ ecx ] eax
pop eax
sub esi eax
je r-xdata
movzx esi [ ebp + 0xc ]
mov eax esi
and eax 0x80000003
jns r-xdata
sub esi eax
je r-xdata
jne r-xdata
dec eax
or eax 0xfffffffc
inc eax
push 0x1e
jmp r-xdata
sub esi eax
je r-xdata
push 0x1c
mov eax esi
push 0x64
cdq
pop edi
idiv edi
test edx edx
jne r-xdata
pop eax
cmp ax [ ebp + 0x14 ]
jae r-xdata
sub esi 0x3
je r-xdata
mov eax ecx
call sub_10029f0b
retn 0x10
push r--data
lea ecx [ ebp - 0x28 ]
call sub_10001b81
and [ ebp - 0x4 ] 0x0
push eax
lea ecx [ ebp - 0x50 ]
call sub_1000b26d
mov [ ebp - 0x50 ] r--data
lea eax [ ebp - 0x50 ]
push eax
mov [ ebp - 0x4 ] 0x1
call sub_1000b22d
push 0x1d
jmp r-xdata
mov eax esi
cdq
mov esi 0x190
idiv esi
test edx edx
jne r-xdata
sub esi eax
je r-xdata
push 0x1f
jmp r-xdata
sub_1000b39c
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi [ ebp + 0x10 ]
mov ebx ecx
xor ecx ecx
cmp eax ecx
push edi
mov edi [ ebp + 0xc ]
jl r-xdata
neg eax
cmp ebx ecx
jl r-xdata
cmp [ ebp + 0x8 ] ecx
jge r-xdata
neg ebx
cmp [ ebp + 0x8 ] ecx
jl r-xdata
cmp esi ecx
jg r-xdata
neg [ ebp + 0x8 ]
cmp ebx ecx
jge r-xdata
cmp esi ecx
jl r-xdata
push ecx
cdq
push 0x3c
push edx
push eax
call sub_1002cea0
mov ecx eax
mov eax edx
mov [ ebp - 0x4 ] eax
mov eax ebx
cdq
add ecx eax
mov eax [ ebp - 0x4 ]
push 0x0
push 0x3c
adc eax edx
push eax
push ecx
call sub_1002cea0
mov ecx eax
mov eax [ ebp + 0x8 ]
mov ebx edx
cdq
push 0x0
add ecx eax
push 0xf4240
adc ebx edx
push ebx
push ecx
call sub_1002cea0
neg edi
adc esi 0x0
neg esi
sub edi eax
sbb esi edx
mov eax edi
mov edx esi
jl r-xdata
jg r-xdata
neg edi
adc esi ecx
neg esi
cmp edi ecx
jae r-xdata
push ecx
cdq
push 0x3c
push edx
push eax
call sub_1002cea0
mov ecx eax
mov eax edx
mov [ ebp - 0x4 ] eax
mov eax ebx
cdq
add ecx eax
mov eax [ ebp - 0x4 ]
push 0x0
push 0x3c
adc eax edx
push eax
push ecx
call sub_1002cea0
mov ecx eax
mov eax [ ebp + 0x8 ]
mov ebx edx
cdq
push 0x0
add ecx eax
push 0xf4240
adc ebx edx
push ebx
push ecx
call sub_1002cea0
add eax edi
adc edx esi
jmp r-xdata
cmp edi ecx
jb r-xdata
pop edi
pop esi
pop ebx
leave
retn
sub_1000b480
push ebp
mov ebp esp
push ecx
push ecx
push esi
mov esi ebx
call sub_1000b655
test al al
jne r-xdata
mov eax [ ebx ]
mov edx [ ebx + 0x4 ]
push 0xfffffffe
pop esi
mov ecx 0x7fffffff
cmp eax esi
jne r-xdata
mov esi [ ebp + 0x8 ]
call sub_1000b655
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ eax ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
cmp edx esi
jne r-xdata
cmp edx ecx
je r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ ebx ]
sub ecx [ eax ]
mov edx [ ebx + 0x4 ]
sbb edx [ eax + 0x4 ]
mov [ edi ] ecx
mov [ edi + 0x4 ] edx
jmp r-xdata
push [ ebx + 0x4 ]
push [ ebx ]
call sub_1000b589
pop ecx
pop ecx
test al al
je r-xdata
cmp eax ecx
je r-xdata
mov [ edi + 0x4 ] ecx
mov eax edi
pop esi
leave
retn 0x4
mov eax [ ebx ]
mov esi 0x80000000
test eax eax
jne r-xdata
push [ ebp - 0x4 ]
push [ ebp - 0x8 ]
call sub_1000b589
pop ecx
pop ecx
test al al
jne r-xdata
mov eax ebx
call sub_1000b632
test al al
je r-xdata
cmp [ ebx + 0x4 ] esi
jne r-xdata
mov [ edi + 0x4 ] 0x7fffffff
jmp r-xdata
mov eax [ ebp + 0x8 ]
push [ eax + 0x4 ]
push [ eax ]
call sub_1000b589
pop ecx
pop ecx
test al al
je r-xdata
mov eax [ ebx ]
mov [ edi ] eax
mov eax [ ebx + 0x4 ]
mov [ edi + 0x4 ] eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax ] 0x0
jne r-xdata
mov [ edi ] esi
mov eax [ ebp + 0x8 ]
cmp [ eax ] 0x0
jne r-xdata
and [ edi ] 0x0
mov [ edi + 0x4 ] esi
jmp r-xdata
cmp [ eax + 0x4 ] esi
jne r-xdata
cmp [ eax + 0x4 ] esi
jne r-xdata
push 0xfffffffe
pop esi
or [ edi ] 0xffffffff
mov [ edi + 0x4 ] 0x7fffffff
jmp r-xdata
sub_1000b5a1
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0xfffffffe
jne r-xdata
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
cmp [ ebp + 0xc ] 0x7fffffff
jne r-xdata
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_1000b589
movzx eax al
neg eax
sbb eax eax
pop ecx
and eax 0xfffffffd
pop ecx
add eax 0x5
pop ebp
retn
cmp [ ebp + 0xc ] 0x80000000
jne r-xdata
xor eax eax
pop ebp
retn
xor eax eax
inc eax
pop ebp
retn
sub_1000b5e7
sub ecx 0x0
je r-xdata
mov [ eax + 0x4 ] 0x7fffffff
dec ecx
je r-xdata
and [ eax ] 0x0
dec ecx
je r-xdata
or [ eax ] 0xffffffff
mov [ eax + 0x4 ] 0x7fffffff
retn
dec ecx
je r-xdata
mov [ eax ] 0x1
jmp r-xdata
dec ecx
mov [ eax + 0x4 ] 0x7fffffff
jne r-xdata
mov [ eax + 0x4 ] 0x80000000
retn
mov [ eax ] 0xfffffffe
retn
mov [ eax ] 0xfffffffd
retn
sub_1000b632
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
test ecx ecx
jne r-xdata
cmp ecx 0xffffffff
jne r-xdata
cmp eax 0x80000000
je r-xdata
xor eax eax
retn
cmp eax 0x7fffffff
je r-xdata
xor eax eax
inc eax
retn
sub_1000b655
mov eax esi
call sub_1000b632
test al al
jne r-xdata
xor eax eax
inc eax
retn
cmp [ esi ] 0xfffffffe
jne r-xdata
xor eax eax
retn
cmp [ esi + 0x4 ] 0x7fffffff
je r-xdata
sub_1000b675
mov ecx [ esi ]
push edi
mov edi [ eax ]
test ecx ecx
je r-xdata
mov [ esi ] edi
test edi edi
je r-xdata
mov eax [ ecx ]
call [ eax + 0x10 ]
test al al
je r-xdata
mov eax esi
pop edi
retn
mov eax [ edi ]
mov ecx edi
call [ eax + 0xc ]
and [ esi ] 0x0
sub_1000b69b
push 0x8
mov eax sub_1004bfc5
call sub_10029e33
and [ ebp - 0x10 ] 0x0
and [ ebp - 0x4 ] 0x0
mov ecx [ edi + 0x4 ]
test ecx ecx
je r-xdata
mov eax [ edi + 0xc ]
mov [ ebx + 0xc ] eax
mov eax [ edi + 0x10 ]
mov [ ebx + 0x10 ] eax
mov eax [ edi + 0x8 ]
mov [ ebx + 0x8 ] eax
lea esi [ ebx + 0x4 ]
lea eax [ ebp - 0x10 ]
call sub_1000b675
or [ ebp - 0x4 ] 0xffffffff
mov ecx [ ebp - 0x10 ]
test ecx ecx
je r-xdata
mov eax [ ecx ]
lea edx [ ebp - 0x14 ]
push edx
call [ eax + 0x14 ]
lea esi [ ebp - 0x10 ]
mov [ ebp - 0x4 ] 0x1
call sub_1000b675
mov [ ebp - 0x4 ] 0x0
mov ecx [ ebp - 0x14 ]
test ecx ecx
je r-xdata
call sub_10029f0b
retn
mov eax [ ecx ]
call [ eax + 0x10 ]
mov eax [ ecx ]
call [ eax + 0x10 ]
test al al
je r-xdata
and [ ebp - 0x14 ] 0x0
sub_1000b716
push 0x4
mov eax sub_1004c96f
call sub_10029e33
mov edi ecx
mov esi [ ebp + 0x8 ]
and [ ebp - 0x10 ] 0x0
push edi
mov ecx esi
call sub_1000b8e8
and [ ebp - 0x4 ] 0x0
mov [ esi + 0x3c ] r--data
mov [ ebp - 0x4 ] 0x1
lea ebx [ esi + 0x28 ]
mov [ esi ] r--data
mov [ ebx ] r--data
mov [ esi + 0x3c ] r--data
test edi edi
je r-xdata
xor edi edi
add edi 0x28
jmp r-xdata
call sub_1000b69b
mov eax esi
call sub_10029f0b
retn
sub_1000b770
push ebp
mov ebp esp
push ecx
push [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
mov ecx esi
call sub_10007977
mov [ esi + 0x28 ] r--data
and [ esi + 0x2c ] 0x0
and [ esi + 0x30 ] 0x0
and [ esi + 0x34 ] 0x0
or [ esi + 0x38 ] 0xffffffff
mov [ esi ] r--data
mov [ esi + 0x28 ] r--data
mov eax esi
leave
retn
sub_1000b7f2
push 0x4
mov eax sub_1004c0e1
call sub_10029e33
mov esi ecx
push 0x40
call sub_10025dd6
pop ecx
mov ecx eax
mov [ ebp - 0x10 ] ecx
and [ ebp - 0x4 ] 0x0
test ecx ecx
je r-xdata
xor eax eax
add esi 0xffffffc4
push esi
call sub_1000b878
jmp r-xdata
xor eax eax
add eax 0x3c
jmp r-xdata
test eax eax
je r-xdata
call sub_10029f0b
retn
sub_1000b8a5
push esi
mov esi ecx
mov [ esi ] r--data
mov ecx [ esi + 0x4 ]
test ecx ecx
je r-xdata
pop esi
retn
mov eax [ ecx ]
call [ eax + 0x10 ]
test al al
je r-xdata
and [ esi + 0x4 ] 0x0
sub_1000b8e8
push 0x4
mov eax sub_1004ad6f
call sub_10029e33
mov esi ecx
mov [ ebp - 0x10 ] esi
mov edi [ ebp + 0x8 ]
push edi
call sub_10007977
xor eax eax
mov [ ebp - 0x4 ] eax
cmp edi eax
je r-xdata
lea edi [ esi + 0x28 ]
push eax
mov ecx edi
call sub_1000b942
mov [ esi ] r--data
mov [ edi ] r--data
mov eax esi
call sub_10029f0b
retn 0x4
lea eax [ edi + 0x28 ]
sub_1000b942
push esi
mov esi ecx
push edi
mov edi [ esp + 0xc ]
mov [ esi ] r--data
mov ecx [ edi + 0x4 ]
mov [ esi + 0x4 ] ecx
test ecx ecx
je r-xdata
mov eax [ edi + 0x8 ]
mov [ esi + 0x8 ] eax
mov eax [ edi + 0xc ]
mov [ esi + 0xc ] eax
mov eax [ edi + 0x10 ]
mov [ esi + 0x10 ] eax
pop edi
mov eax esi
pop esi
retn 0x4
mov eax [ ecx ]
call [ eax + 0xc ]
sub_1000b9a0
push 0x80
mov eax sub_1004cd32
call sub_10029e33
push [ ebp + 0x8 ]
lea esi [ ebp - 0x4c ]
call sub_1000b770
and [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x8c ]
push ecx
mov ecx eax
call sub_1000b716
pop ecx
pop ecx
push r--data
lea eax [ ebp - 0x8c ]
push eax
call sub_10029a01
int3
sub_1000b9e0
push 0x44
mov eax sub_1004d470
call sub_10029e33
push [ ebp + 0x8 ]
call sub_1002801c
pop ecx
test eax eax
jne r-xdata
call sub_10029f0b
retn
push r--data
lea ecx [ ebp - 0x28 ]
call sub_10001b81
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x28 ]
push eax
lea ecx [ ebp - 0x50 ]
call sub_100078c4
push eax
mov [ ebp - 0x4 ] 0x1
call sub_1000b9a0
sub_1000ba26
push 0xc0
mov eax sub_1004eb2e
call sub_10029ed2
mov eax [ ebp + 0x8 ]
and [ ebp - 0x30 ] 0x0
and [ ebp - 0x4 ] 0x0
mov [ ebp - 0x2c ] eax
lea eax [ ebp - 0xcc ]
push eax
mov ebx ecx
call sub_10002eb8
lea eax [ ebp - 0x44 ]
push eax
mov [ ebp - 0x4 ] 0x1
call sub_100166c1
mov esi eax
lea edi [ ebp - 0x28 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop ecx
movsd [ edi ] [ esi ]
push [ ebp - 0x28 ]
lea eax [ ebp - 0xc4 ]
push eax
call sub_1000a35c
push [ ebp - 0x24 ]
push eax
call sub_1000c967
push [ ebp - 0x22 ]
push eax
call sub_1000c967
lea ecx [ ebp - 0x20 ]
push ecx
push eax
call sub_1000ca59
push r--data
push eax
call sub_1000a7bb
pop ecx
pop ecx
push ebx
push eax
call sub_1000a633
pop ecx
pop ecx
mov ecx [ ebp - 0x2c ]
lea eax [ ebp - 0xcc ]
call sub_10002fe7
lea eax [ ebp - 0xcc ]
mov [ ebp - 0x4 ] 0x0
call sub_100025f4
mov eax [ ebp - 0x2c ]
call sub_10029f2e
retn
sub_1000bae2
push 0xb8
mov eax sub_1004d438
call sub_10029e9c
mov eax [ ebp + 0x8 ]
mov ebx r--data
xor esi esi
push ebx
lea ecx [ ebp - 0xa4 ]
mov [ ebp - 0x30 ] eax
mov [ ebp - 0x34 ] esi
call sub_10001254
mov edi r--data
push edi
lea ecx [ ebp - 0x50 ]
mov [ ebp - 0x4 ] esi
call sub_10001254
lea eax [ ebp - 0xa4 ]
push eax
lea eax [ ebp - 0x2c ]
push eax
lea edx [ ebp - 0x50 ]
mov ecx 0x80000002
mov [ ebp - 0x4 ] 0x1
call sub_1000c6e0
pop ecx
pop ecx
push esi
push 0x1
lea ecx [ ebp - 0x50 ]
call sub_1000247e
push esi
push 0x1
lea ecx [ ebp - 0xa4 ]
mov [ ebp - 0x4 ] 0x4
call sub_1000247e
push r--data
lea ecx [ ebp - 0x2c ]
call sub_1000fee8
test eax eax
jne r-xdata
push r--data
lea ecx [ ebp - 0x2c ]
call sub_1000fee8
mov ecx [ ebp - 0x30 ]
test eax eax
je r-xdata
push ebx
lea ecx [ ebp - 0x88 ]
call sub_10001254
push edi
lea ecx [ ebp - 0x6c ]
mov [ ebp - 0x4 ] 0x5
call sub_10001254
lea eax [ ebp - 0x88 ]
push eax
lea eax [ ebp - 0xc0 ]
push eax
lea edx [ ebp - 0x6c ]
mov ecx 0x80000001
mov [ ebp - 0x4 ] 0x6
call sub_1000c6e0
pop ecx
pop ecx
push 0xffffffff
push esi
push eax
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x4 ] 0x7
call sub_10001f1a
push esi
push 0x1
lea ecx [ ebp - 0xc0 ]
call sub_1000247e
push esi
push 0x1
lea ecx [ ebp - 0x6c ]
call sub_1000247e
push esi
push 0x1
lea ecx [ ebp - 0x88 ]
mov [ ebp - 0x4 ] 0x4
call sub_1000247e
push r--data
call sub_10001254
lea eax [ ebp - 0x2c ]
push eax
call sub_10001fad
jmp r-xdata
push esi
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_1000247e
mov eax [ ebp - 0x30 ]
call sub_10029f1f
retn
sub_1000bc1c
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_1004eddf
mov eax [ fs : 0x0 ]
push eax
sub esp 0x80
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x78 ] eax
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x90 ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
xor ebx ebx
push ebx
lea ecx [ esp + 0x70 ]
mov [ esp + 0x18 ] eax
mov [ esp + 0x16 ] bl
mov [ esp + 0x88 ] 0x7
call sub_10002460
mov edi r--data
push edi
lea ecx [ esp + 0x38 ]
mov [ esp + 0x9c ] ebx
call sub_10001254
mov esi r--data
push esi
lea ecx [ esp + 0x1c ]
mov [ esp + 0x9c ] 0x1
call sub_10001254
lea eax [ esp + 0x34 ]
push eax
lea eax [ esp + 0x54 ]
push eax
lea edx [ esp + 0x20 ]
mov ecx 0x80000002
mov [ esp + 0xa0 ] 0x2
call sub_1000c6e0
pop ecx
pop ecx
push 0xffffffff
push ebx
push eax
lea ecx [ esp + 0x78 ]
mov [ esp + 0xa4 ] 0x3
call sub_10001f1a
push ebx
push 0x1
lea ecx [ esp + 0x58 ]
call sub_1000247e
push ebx
push 0x1
lea ecx [ esp + 0x20 ]
call sub_1000247e
push ebx
push 0x1
lea ecx [ esp + 0x3c ]
mov [ esp + 0xa0 ] bl
call sub_1000247e
push r--data
lea ecx [ esp + 0x70 ]
call sub_1000fee8
test eax eax
jne r-xdata
push ebx
push 0x1
lea ecx [ esp + 0x74 ]
call sub_1000247e
mov ecx [ esp + 0x90 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ esp + 0x78 ]
xor ecx esp
call sub_10025c8d
mov esp ebp
pop ebp
retn
push edi
lea ecx [ esp + 0x1c ]
call sub_10001254
push esi
lea ecx [ esp + 0x38 ]
mov [ esp + 0x9c ] 0x4
call sub_10001254
lea eax [ esp + 0x18 ]
push eax
lea eax [ esp + 0x54 ]
push eax
lea edx [ esp + 0x3c ]
mov ecx 0x80000001
mov [ esp + 0xa0 ] 0x5
call sub_1000c6e0
pop ecx
pop ecx
push 0xffffffff
push ebx
push eax
lea ecx [ esp + 0x78 ]
mov [ esp + 0xa4 ] 0x6
call sub_10001f1a
push ebx
push 0x1
lea ecx [ esp + 0x58 ]
call sub_1000247e
push ebx
push 0x1
lea ecx [ esp + 0x3c ]
call sub_1000247e
push ebx
push 0x1
lea ecx [ esp + 0x20 ]
mov [ esp + 0xa0 ] bl
call sub_1000247e
push r--data
lea ecx [ esp + 0x70 ]
call sub_1000fee8
test eax eax
je r-xdata
mov ecx [ esp + 0x14 ]
lea eax [ esp + 0x50 ]
push eax
call sub_1000ba26
pop ecx
push 0xffffffff
push ebx
push eax
lea ecx [ esp + 0x78 ]
mov [ esp + 0xa4 ] 0x7
call sub_10001f1a
push ebx
push 0x1
lea ecx [ esp + 0x58 ]
mov [ esp + 0xa0 ] bl
call sub_1000247e
mov [ esp + 0x12 ] 0x1
jmp r-xdata
cmp [ esp + 0x12 ] 0x1
je r-xdata
push edi
lea ecx [ esp + 0x1c ]
call sub_10001254
push esi
lea ecx [ esp + 0x38 ]
mov [ esp + 0x9c ] 0x8
call sub_10001254
lea eax [ esp + 0x6c ]
push eax
lea eax [ esp + 0x1c ]
push eax
lea edx [ esp + 0x3c ]
mov ecx 0x80000002
mov [ esp + 0xa0 ] 0x9
call sub_1000c7db
pop ecx
pop ecx
push ebx
push 0x1
lea ecx [ esp + 0x3c ]
mov [ esp + 0x1b ] al
call sub_1000247e
push ebx
push 0x1
lea ecx [ esp + 0x20 ]
mov [ esp + 0xa0 ] bl
call sub_1000247e
cmp [ esp + 0x13 ] 0x1
je r-xdata
push edi
lea ecx [ esp + 0x1c ]
call sub_10001254
push esi
lea ecx [ esp + 0x38 ]
mov [ esp + 0x9c ] 0xa
call sub_10001254
lea eax [ esp + 0x6c ]
push eax
lea eax [ esp + 0x1c ]
push eax
lea edx [ esp + 0x3c ]
mov ecx 0x80000001
mov [ esp + 0xa0 ] 0xb
call sub_1000c7db
pop ecx
pop ecx
push ebx
push 0x1
lea ecx [ esp + 0x3c ]
call sub_1000247e
push ebx
push 0x1
lea ecx [ esp + 0x20 ]
call sub_1000247e
sub_1000bee0
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_1004eaf5
mov eax [ fs : 0x0 ]
push eax
sub esp 0x158
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x150 ] eax
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x168 ]
mov [ fs : 0x0 ] eax
lea eax [ esp + 0x84 ]
push eax
mov esi ecx
call sub_10002eb8
push r--data
push ecx
push r--data
push ecx
push esi
push ecx
lea eax [ esp + 0xa4 ]
push r--data
xor ebx ebx
push eax
mov [ esp + 0x190 ] ebx
call sub_1000a7bb
push eax
call sub_1000f96c
add esp 0x10
push eax
call sub_1000a633
push eax
call sub_1000f96c
add esp 0x10
push eax
call sub_1000a7bb
add esp 0xc
push eax
call sub_1000a7bb
pop ecx
pop ecx
lea ecx [ esp + 0x10c ]
lea eax [ esp + 0x84 ]
call sub_10002fe7
mov edi r--data
push edi
lea ecx [ esp + 0x6c ]
mov [ esp + 0x174 ] 0x1
call sub_10001254
mov esi r--data
push esi
lea ecx [ esp + 0x50 ]
mov [ esp + 0x174 ] 0x2
call sub_10001254
lea eax [ esp + 0x68 ]
push eax
lea eax [ esp + 0x148 ]
push eax
lea edx [ esp + 0x54 ]
mov ecx 0x80000002
mov [ esp + 0x178 ] 0x3
call sub_1000c6e0
pop ecx
pop ecx
push ebx
push 0x1
lea ecx [ esp + 0x54 ]
call sub_1000247e
push ebx
push 0x1
lea ecx [ esp + 0x70 ]
mov [ esp + 0x178 ] 0x6
call sub_1000247e
lea eax [ esp + 0x10c ]
lea ecx [ esp + 0x144 ]
call sub_10005ec4
test al al
jne r-xdata
push edi
lea ecx [ esp + 0x18 ]
call sub_10001254
push esi
lea ecx [ esp + 0x34 ]
mov [ esp + 0x174 ] 0x9
call sub_10001254
lea eax [ esp + 0x14 ]
push eax
lea eax [ esp + 0x12c ]
push eax
lea edx [ esp + 0x38 ]
mov ecx 0x80000001
mov [ esp + 0x178 ] 0xa
call sub_1000c6e0
pop ecx
pop ecx
push ebx
push 0x1
lea ecx [ esp + 0x38 ]
call sub_1000247e
push ebx
push 0x1
lea ecx [ esp + 0x1c ]
mov [ esp + 0x178 ] 0xd
call sub_1000247e
lea eax [ esp + 0x10c ]
lea ecx [ esp + 0x128 ]
call sub_10005ec4
test al al
jne r-xdata
push edi
lea ecx [ esp + 0x34 ]
call sub_10001254
push esi
lea ecx [ esp + 0x18 ]
mov [ esp + 0x174 ] 0x7
call sub_10001254
lea eax [ esp + 0x10c ]
push eax
lea eax [ esp + 0x34 ]
push eax
lea edx [ esp + 0x1c ]
mov ecx 0x80000002
mov [ esp + 0x178 ] 0x8
call sub_1000c7db
pop ecx
pop ecx
push ebx
push 0x1
lea ecx [ esp + 0x1c ]
call sub_1000247e
push ebx
push 0x1
lea ecx [ esp + 0x38 ]
mov [ esp + 0x178 ] 0x6
call sub_1000247e
push ebx
push 0x1
lea ecx [ esp + 0x130 ]
call sub_1000247e
push ebx
push 0x1
lea ecx [ esp + 0x14c ]
call sub_1000247e
push ebx
push 0x1
lea ecx [ esp + 0x114 ]
call sub_1000247e
or [ esp + 0x170 ] 0xffffffff
lea eax [ esp + 0x84 ]
call sub_100025f4
mov ecx [ esp + 0x168 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ esp + 0x150 ]
xor ecx esp
call sub_10025c8d
mov esp ebp
pop ebp
retn
push edi
lea ecx [ esp + 0x50 ]
call sub_10001254
push esi
lea ecx [ esp + 0x6c ]
mov [ esp + 0x174 ] 0xe
call sub_10001254
lea eax [ esp + 0x10c ]
push eax
lea eax [ esp + 0x50 ]
push eax
lea edx [ esp + 0x70 ]
mov ecx 0x80000001
mov [ esp + 0x178 ] 0xf
call sub_1000c7db
pop ecx
pop ecx
push ebx
push 0x1
lea ecx [ esp + 0x70 ]
call sub_1000247e
push ebx
push 0x1
lea ecx [ esp + 0x54 ]
call sub_1000247e
sub_1000c1b5
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_1004e00f
mov eax [ fs : 0x0 ]
push eax
sub esp 0x60
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x58 ] eax
push ebx
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x68 ]
mov [ fs : 0x0 ] eax
push r--data
lea ecx [ esp + 0x10 ]
call sub_10001254
and [ esp + 0x70 ] 0x0
lea eax [ esp + 0x28 ]
push eax
lea ebx [ esp + 0x10 ]
call sub_100159c5
mov [ esp + 0x74 ] 0x1
mov [ esp ] r--data
push eax
lea eax [ esp + 0x4c ]
push eax
call sub_10008f70
add esp 0xc
push 0x0
push 0x1
lea ecx [ esp + 0x30 ]
call sub_1000247e
push 0x0
push 0x1
mov ecx ebx
mov [ esp + 0x78 ] 0x4
call sub_1000247e
lea eax [ esp + 0x44 ]
push eax
call sub_1000c500
pop ecx
cmp eax 0x1d
jne r-xdata
jbe r-xdata
xor bl bl
lea eax [ esp + 0x44 ]
push eax
call sub_1000c5f9
pop ecx
jmp r-xdata
mov bl 0x1
jmp r-xdata
push 0x0
push 0x1
lea ecx [ esp + 0x4c ]
call sub_1000247e
mov al bl
mov ecx [ esp + 0x68 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop ebx
mov ecx [ esp + 0x58 ]
xor ecx esp
call sub_10025c8d
mov esp ebp
pop ebp
retn
sub_1000c292
push 0x8
mov eax sub_1004dc68
call sub_10029e66
mov eax [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
call sub_10005ec4
test al al
je r-xdata
push [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
call sub_10015956
pop ecx
jmp r-xdata
mov al 0x1
jmp r-xdata
call sub_10029f0b
retn
sub_1000c2e6
push ebp
sub esp 0xa8
lea ebp [ esp - 0x4 ]
mov eax [ rw-data ]
xor eax ebp
mov [ ebp + 0xa8 ] eax
push 0x58
mov eax sub_1004dfcf
call sub_10029e33
xor esi esi
push __dos_header
lea ebx [ ebp + 0x8c ]
mov [ ebp - 0x10 ] esi
call sub_10015859
mov [ ebp - 0x4 ] esi
lea ecx [ ebp + 0x70 ]
mov [ esp ] r--data
call sub_10001254
xor ebx ebx
lea eax [ ebp - 0x2c ]
inc ebx
push eax
mov [ ebp - 0x4 ] bl
call sub_10015d15
lea ecx [ ebp + 0x70 ]
push ecx
push eax
lea eax [ ebp + 0x54 ]
push eax
mov [ ebp - 0x4 ] 0x2
call sub_1000fac2
add esp 0x10
push esi
push ebx
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x4 ] 0x4
call sub_1000247e
lea eax [ ebp + 0x54 ]
push eax
lea eax [ ebp + 0x8c ]
push eax
call sub_1000c292
pop ecx
pop ecx
cmp al bl
jne r-xdata
lea eax [ ebp - 0x48 ]
call sub_10017265
lea ecx [ ebp + 0x70 ]
push ecx
push eax
lea eax [ ebp + 0x38 ]
push eax
mov [ ebp - 0x4 ] 0x5
call sub_1000fac2
add esp 0xc
push esi
push ebx
lea ecx [ ebp - 0x48 ]
mov [ ebp - 0x4 ] 0x7
call sub_1000247e
lea eax [ ebp + 0x38 ]
push eax
lea eax [ ebp + 0x8c ]
push eax
call sub_1000c292
pop ecx
pop ecx
cmp al bl
jne r-xdata
lea eax [ ebp + 0x54 ]
push eax
mov ecx edi
call sub_10001fad
jmp r-xdata
lea eax [ ebp - 0x64 ]
call sub_10017250
lea ecx [ ebp + 0x70 ]
push ecx
push eax
lea eax [ ebp + 0x1c ]
push eax
mov [ ebp - 0x4 ] 0x8
call sub_1000fac2
add esp 0xc
push esi
push ebx
lea ecx [ ebp - 0x64 ]
mov [ ebp - 0x4 ] 0xa
call sub_1000247e
lea eax [ ebp + 0x1c ]
push eax
lea eax [ ebp + 0x8c ]
push eax
call sub_1000c292
pop ecx
pop ecx
cmp al bl
jne r-xdata
lea eax [ ebp + 0x38 ]
push eax
mov ecx edi
call sub_10001fad
jmp r-xdata
push esi
push ebx
lea ecx [ ebp + 0x54 ]
call sub_1000247e
push esi
push ebx
lea ecx [ ebp + 0x70 ]
call sub_1000247e
push esi
push ebx
lea ecx [ ebp + 0x8c ]
call sub_1000247e
mov eax edi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp + 0xa8 ]
xor ecx ebp
call sub_10025c8d
add ebp 0xac
leave
retn
push r--data
lea ecx [ ebp - 0x2c ]
call sub_10001254
lea eax [ ebp - 0x48 ]
push eax
lea ebx [ ebp - 0x2c ]
mov [ ebp - 0x4 ] 0xb
call sub_100159c5
lea ecx [ ebp + 0x70 ]
push ecx
push eax
lea eax [ ebp ]
push eax
mov [ ebp - 0x4 ] 0xc
call sub_1000fac2
add esp 0x10
xor ebx ebx
push esi
inc ebx
push ebx
lea ecx [ ebp - 0x48 ]
call sub_1000247e
push esi
push ebx
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x4 ] 0xf
call sub_1000247e
lea eax [ ebp ]
push eax
lea eax [ ebp + 0x8c ]
push eax
call sub_1000c292
pop ecx
pop ecx
cmp al bl
mov ecx edi
lea eax [ ebp ]
je r-xdata
lea eax [ ebp + 0x1c ]
push eax
mov ecx edi
call sub_10001fad
jmp r-xdata
push esi
push ebx
lea ecx [ ebp + 0x38 ]
call sub_1000247e
push eax
call sub_10001fad
push esi
push ebx
lea ecx [ ebp ]
call sub_1000247e
lea eax [ ebp + 0x8c ]
push esi
push ebx
lea ecx [ ebp + 0x1c ]
call sub_1000247e
sub_1000c500
push 0x108
mov eax sub_1004df56
call sub_10029e66
mov eax [ ebp + 0x8 ]
xor ebx ebx
mov [ ebp - 0x4 ] ebx
cmp [ eax + 0x18 ] 0x8
jb r-xdata
add eax 0x4
mov eax [ eax + 0x4 ]
jmp r-xdata
lea eax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x114 ]
push eax
mov [ ebp + 0x8 ] ebx
call sub_1000cb44
mov eax [ ebp - 0x114 ]
mov eax [ eax + 0x4 ]
mov eax [ ebp + eax - 0x10c ]
shr eax 0x2
test al 0x1
je r-xdata
push r--data
lea ecx [ ebp - 0x30 ]
call sub_10001b81
lea eax [ ebp - 0x30 ]
push eax
lea ecx [ ebp - 0x58 ]
mov [ ebp - 0x4 ] 0x2
call sub_100078c4
push r--data
lea eax [ ebp - 0x58 ]
push eax
lea eax [ ebp - 0x114 ]
push eax
call sub_1000cc3d
mov [ ebp - 0x4 ] 0x1
cmp [ ebp - 0xc0 ] ebx
jne r-xdata
mov esi [ ebp + 0x8 ]
lea eax [ ebp - 0x114 ]
mov [ ebp - 0x4 ] bl
call sub_1000c5dd
mov eax esi
jmp r-xdata
push r--data
lea ecx [ ebp - 0x30 ]
call sub_10001b81
lea eax [ ebp - 0x30 ]
push eax
lea ecx [ ebp - 0x80 ]
mov [ ebp - 0x4 ] 0x3
call sub_100078c4
push r--data
lea eax [ ebp - 0x80 ]
jmp r-xdata
call sub_10029f0b
retn
push eax
call sub_10029a01
sub_1000c5f9
push 0x100
mov eax sub_1004df1d
call sub_10029e66
mov eax [ ebp + 0x8 ]
xor ebx ebx
mov [ ebp - 0x4 ] ebx
cmp [ eax + 0x18 ] 0x8
jb r-xdata
add eax 0x4
mov eax [ eax + 0x4 ]
jmp r-xdata
lea eax [ ebp - 0x10c ]
push eax
call sub_1000c87b
mov eax [ ebp - 0x10c ]
mov eax [ eax + 0x4 ]
cmp [ ebp + eax - 0x104 ] ebx
je r-xdata
push r--data
lea ecx [ ebp - 0x30 ]
call sub_10001b81
lea eax [ ebp - 0x30 ]
push eax
lea ecx [ ebp - 0x58 ]
mov [ ebp - 0x4 ] 0x2
call sub_100078c4
push r--data
lea eax [ ebp - 0x58 ]
push eax
lea eax [ ebp - 0x10c ]
push eax
push 0x20
pop ecx
call sub_1000d3eb
mov [ ebp - 0x4 ] 0x1
cmp [ ebp - 0xbc ] ebx
jne r-xdata
lea eax [ ebp - 0x10c ]
mov [ ebp - 0x4 ] bl
call sub_1000c6c4
call sub_10029f0b
retn
push r--data
lea ecx [ ebp - 0x30 ]
call sub_10001b81
lea eax [ ebp - 0x30 ]
push eax
lea ecx [ ebp - 0x80 ]
mov [ ebp - 0x4 ] 0x3
call sub_100078c4
push r--data
lea eax [ ebp - 0x80 ]
jmp r-xdata
push eax
call sub_10029a01
sub_1000c6e0
push 0xc4
mov eax sub_1004d3d7
call sub_10029ed2
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x68 ] eax
mov eax [ ebp + 0xc ]
mov edi ecx
xor esi esi
push r--data
lea ecx [ ebp - 0x8c ]
mov ebx edx
mov [ ebp - 0x6c ] eax
mov [ ebp - 0x70 ] esi
mov [ ebp - 0x4 ] esi
call sub_10001254
lea eax [ ebp - 0x8c ]
push eax
push 0x20019
push ebx
push edi
lea eax [ ebp - 0x3c ]
push eax
mov [ ebp - 0x4 ] 0x1
call sub_10014c0e
push esi
push 0x1
lea ecx [ ebp - 0x8c ]
mov [ ebp - 0x4 ] 0x3
call sub_1000247e
push [ ebp - 0x6c ]
lea eax [ ebp - 0x3c ]
push eax
call sub_10014fe2
cmp al 0x1
je r-xdata
push [ ebp - 0x6c ]
lea eax [ ebp - 0x64 ]
push eax
lea eax [ ebp - 0x3c ]
push eax
call sub_10014d3d
push [ ebp - 0x68 ]
lea eax [ ebp - 0x64 ]
push eax
mov [ ebp - 0x4 ] 0x5
call sub_100150fb
lea esi [ ebp - 0x64 ]
mov [ ebp - 0x4 ] 0x3
call sub_100150b3
lea ecx [ ebp - 0x3c ]
call sub_10014d14
mov eax [ ebp - 0x68 ]
call sub_10029f2e
retn
push r--data
lea ecx [ ebp - 0xa8 ]
call sub_10001b81
lea eax [ ebp - 0xa8 ]
push eax
lea ecx [ ebp - 0xd0 ]
mov [ ebp - 0x4 ] 0x4
call sub_100078c4
push r--data
lea eax [ ebp - 0xd0 ]
push eax
call sub_10029a01
sub_1000c7db
push 0x7c
mov eax sub_1004dc40
call sub_10029ed2
mov eax [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
mov esi ecx
push r--data
lea ecx [ ebp - 0x88 ]
mov ebx edx
mov [ ebp - 0x6c ] eax
call sub_10001254
lea eax [ ebp - 0x88 ]
push eax
push 0xf003f
push ebx
push esi
lea eax [ ebp - 0x68 ]
push eax
mov [ ebp - 0x4 ] 0x1
call sub_10014c0e
push 0x0
push 0x1
lea ecx [ ebp - 0x88 ]
mov [ ebp - 0x4 ] 0x3
call sub_1000247e
push edi
mov edi [ ebp - 0x6c ]
lea eax [ ebp - 0x40 ]
push eax
call sub_1001517c
pop ecx
pop ecx
lea eax [ ebp - 0x68 ]
push eax
lea ecx [ ebp - 0x40 ]
mov [ ebp - 0x4 ] 0x4
call sub_10014f8e
lea esi [ ebp - 0x40 ]
mov [ ebp - 0x4 ] 0x3
call sub_100150b3
lea ecx [ ebp - 0x68 ]
call sub_10014d14
mov al 0x1
jmp r-xdata
call sub_10029f2e
retn
sub_1000c87b
push 0x20
mov eax sub_1004dee7
call sub_10029e66
mov edi [ ebp + 0x8 ]
lea eax [ ebp - 0x24 ]
xor ebx ebx
push eax
mov [ ebp - 0x14 ] ebx
call sub_10010b15
mov [ ebp - 0x4 ] ebx
cmp [ ebp - 0x20 ] bl
je r-xdata
mov eax [ edi ]
mov edx [ eax + 0x4 ]
add edx edi
cmp [ ebp - 0x14 ] ebx
je r-xdata
lea eax [ ebp - 0x18 ]
push eax
mov eax [ edi ]
mov ecx [ eax + 0x4 ]
add ecx edi
call sub_1000781e
push eax
mov [ ebp - 0x4 ] 0x1
call sub_1000fb0d
pop ecx
lea ecx [ ebp - 0x18 ]
mov esi eax
call sub_10007806
mov [ ebp - 0x4 ] 0x2
mov ecx [ edi ]
mov eax [ ecx + 0x4 ]
mov ecx [ ecx + 0x4 ]
add ecx edi
mov edx [ ecx + 0x28 ]
mov [ ebp - 0x2c ] bl
mov cl [ ecx + 0x30 ]
push 0x1d
mov [ ebp - 0x1c ] cl
push [ ebp - 0x1c ]
add eax edi
push eax
push edx
push [ ebp - 0x2c ]
lea eax [ ebp - 0x2c ]
push eax
mov eax [ esi ]
mov ecx esi
call [ eax + 0x18 ]
cmp [ ebp - 0x2c ] bl
je r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea eax [ ebp - 0x24 ]
push eax
call sub_10010a9e
mov eax edi
call sub_10029f0b
retn 0x4
push ebx
push [ ebp - 0x14 ]
call sub_10007acb
mov [ ebp - 0x4 ] ebx
jmp r-xdata
mov [ ebp - 0x14 ] 0x4
sub_1000c90b
mov ecx [ ebp + 0x8 ]
mov eax [ ecx ]
mov eax [ eax + 0x4 ]
add eax ecx
mov ecx [ eax + 0x8 ]
xor ebx ebx
or ecx 0x4
cmp [ eax + 0x28 ] ebx
jne r-xdata
push 0x1
push eax
call sub_100079b1
mov [ ebp - 0x4 ] ebx
mov eax r-xdata
retn
or ecx 0x4
sub_1000c967
push 0x24
mov eax sub_1004e398
call sub_10029e66
mov edi [ ebp + 0x8 ]
lea eax [ ebp - 0x28 ]
xor ebx ebx
push eax
mov [ ebp - 0x18 ] ebx
call sub_10010b15
mov [ ebp - 0x4 ] ebx
cmp [ ebp - 0x24 ] bl
je r-xdata
mov eax [ edi ]
mov edx [ eax + 0x4 ]
add edx edi
cmp [ ebp - 0x18 ] ebx
je r-xdata
lea eax [ ebp - 0x1c ]
push eax
mov eax [ edi ]
mov ecx [ eax + 0x4 ]
add ecx edi
call sub_1000781e
push eax
mov [ ebp - 0x4 ] 0x1
call sub_10005ee7
pop ecx
lea ecx [ ebp - 0x1c ]
mov esi eax
call sub_10007806
mov [ ebp - 0x4 ] 0x2
mov ecx [ edi ]
mov eax [ ecx + 0x4 ]
mov ecx [ ecx + 0x4 ]
add ecx edi
mov edx [ ecx + 0x28 ]
mov [ ebp - 0x30 ] bl
movzx ecx [ ecx + 0x30 ]
mov ebx [ esi ]
mov [ ebp - 0x20 ] ecx
movzx ecx [ ebp + 0xc ]
push ecx
push [ ebp - 0x20 ]
add eax edi
push eax
push edx
push [ ebp - 0x30 ]
lea eax [ ebp - 0x30 ]
push eax
mov ecx esi
call [ ebx + 0x18 ]
xor ebx ebx
cmp [ ebp - 0x30 ] bl
je r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea eax [ ebp - 0x28 ]
push eax
call sub_10010a9e
mov eax edi
call sub_10029f0b
retn 0x8
push ebx
push [ ebp - 0x18 ]
call sub_10007acb
mov [ ebp - 0x4 ] ebx
jmp r-xdata
mov [ ebp - 0x18 ] 0x4
sub_1000c9fd
mov ecx [ ebp + 0x8 ]
mov eax [ ecx ]
mov eax [ eax + 0x4 ]
add eax ecx
mov ecx [ eax + 0x8 ]
or ecx 0x4
cmp [ eax + 0x28 ] 0x0
jne r-xdata
push 0x1
push eax
call sub_100079b1
and [ ebp - 0x4 ] 0x0
mov eax r-xdata
retn
or ecx 0x4
sub_1000ca59
push 0x1c
mov eax sub_1004e36b
call sub_10029e66
mov edi [ ebp + 0x8 ]
lea eax [ ebp - 0x20 ]
xor ebx ebx
push eax
mov [ ebp - 0x14 ] ebx
call sub_10010b15
mov [ ebp - 0x4 ] ebx
cmp [ ebp - 0x1c ] bl
je r-xdata
mov eax [ edi ]
mov edx [ eax + 0x4 ]
add edx edi
cmp [ ebp - 0x14 ] ebx
je r-xdata
lea eax [ ebp - 0x18 ]
push eax
mov eax [ edi ]
mov ecx [ eax + 0x4 ]
add ecx edi
call sub_1000781e
push eax
mov [ ebp - 0x4 ] 0x1
call sub_10005ee7
pop ecx
lea ecx [ ebp - 0x18 ]
mov esi eax
call sub_10007806
push [ ebp + 0xc ]
mov [ ebp - 0x4 ] 0x2
mov ecx [ edi ]
mov eax [ ecx + 0x4 ]
mov ecx [ ecx + 0x4 ]
add ecx edi
mov edx [ ecx + 0x28 ]
mov [ ebp - 0x28 ] bl
movzx ecx [ ecx + 0x30 ]
mov ebx [ esi ]
push ecx
add eax edi
push eax
push edx
push [ ebp - 0x28 ]
lea eax [ ebp - 0x28 ]
push eax
mov ecx esi
call [ ebx + 0x4 ]
xor ebx ebx
cmp [ ebp - 0x28 ] bl
je r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea eax [ ebp - 0x20 ]
push eax
call sub_10010a9e
mov eax edi
call sub_10029f0b
retn 0x8
push ebx
push [ ebp - 0x14 ]
call sub_10007acb
mov [ ebp - 0x4 ] ebx
jmp r-xdata
mov [ ebp - 0x14 ] 0x4
sub_1000cae8
mov ecx [ ebp + 0x8 ]
mov eax [ ecx ]
mov eax [ eax + 0x4 ]
add eax ecx
mov ecx [ eax + 0x8 ]
or ecx 0x4
cmp [ eax + 0x28 ] 0x0
jne r-xdata
push 0x1
push eax
call sub_100079b1
and [ ebp - 0x4 ] 0x0
mov eax r-xdata
retn
or ecx 0x4
sub_1000cb44
push 0x24
mov eax sub_1004deba
call sub_10029e66
mov esi [ ebp + 0x8 ]
xor ebx ebx
push ebx
push esi
lea eax [ ebp - 0x20 ]
push eax
mov [ ebp - 0x14 ] ebx
call sub_10010a2b
mov [ ebp - 0x4 ] ebx
cmp [ ebp - 0x1c ] bl
je r-xdata
mov eax [ esi ]
mov edx [ eax + 0x4 ]
add edx esi
cmp [ ebp - 0x14 ] ebx
je r-xdata
lea eax [ ebp - 0x18 ]
push eax
mov eax [ esi ]
mov ecx [ eax + 0x4 ]
add ecx esi
call sub_1000781e
push eax
mov [ ebp - 0x4 ] 0x1
call sub_1000fbaa
pop ecx
lea ecx [ ebp - 0x18 ]
mov edi eax
call sub_10007806
push [ ebp + 0xc ]
mov [ ebp - 0x4 ] 0x2
mov eax [ esi ]
mov eax [ eax + 0x4 ]
add eax esi
mov ecx [ eax + 0x28 ]
cmp ecx ebx
lea ebx [ ebp - 0x14 ]
push ebx
push eax
sete dl
mov [ ebp - 0x24 ] 0x1
push [ ebp - 0x24 ]
xor eax eax
push eax
mov [ ebp - 0x2c ] dl
push [ ebp - 0x2c ]
mov edx [ edi ]
push ecx
lea eax [ ebp - 0x30 ]
push eax
mov ecx edi
call [ edx + 0x1c ]
xor ebx ebx
mov [ ebp - 0x4 ] ebx
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp - 0x20 ]
mov ecx [ eax ]
mov ecx [ ecx + 0x4 ]
mov eax [ ecx + eax + 0x28 ]
cmp eax ebx
je r-xdata
push ebx
push [ ebp - 0x14 ]
call sub_10007acb
mov eax esi
call sub_10029f0b
retn 0x8
lea ecx [ eax + 0x4 ]
call sub_100223d4
sub_1000cbd2
mov ecx [ ebp + 0x8 ]
mov eax [ ecx ]
mov eax [ eax + 0x4 ]
add eax ecx
mov ecx [ eax + 0x8 ]
or ecx 0x4
cmp [ eax + 0x28 ] 0x0
jne r-xdata
push 0x1
push eax
call sub_100079b1
and [ ebp - 0x4 ] 0x0
mov eax r-xdata
retn
or ecx 0x4
sub_1000cc3d
push 0x4
mov eax sub_1004d396
call sub_10029e33
mov edi [ ebp + 0x8 ]
xor ebx ebx
mov [ ebp - 0x10 ] ebx
mov [ edi ] r--data
mov [ edi + 0x58 ] r--data
lea esi [ edi + 0x8 ]
push esi
mov [ ebp - 0x4 ] ebx
push edi
mov [ ebp - 0x10 ] 0x1
call sub_1000d549
mov [ ebp - 0x4 ] 0x1
mov eax [ edi ]
mov eax [ eax + 0x4 ]
push esi
mov [ edi + eax ] r--data
call sub_1000e792
mov eax esi
mov [ esi ] r--data
mov [ esi + 0x48 ] bl
mov [ esi + 0x41 ] bl
call sub_1000e7f1
mov eax [ rw-data ]
mov [ esi + 0x4c ] ebx
mov [ esi + 0x44 ] eax
mov [ esi + 0x3c ] ebx
push 0x21
push [ ebp + 0xc ]
mov ecx esi
mov [ ebp - 0x4 ] 0x2
call sub_1000d585
test eax eax
jne r-xdata
mov eax edi
call sub_10029f0b
retn 0x8
mov eax [ edi ]
mov eax [ eax + 0x4 ]
add eax edi
mov ecx [ eax + 0x8 ]
or ecx 0x2
cmp [ eax + 0x28 ] ebx
jne r-xdata
push ebx
push eax
call sub_100079b1
or ecx 0x4
sub_1000cce6
push 0x4
mov eax sub_1004c4d0
call sub_10029e33
mov [ ebp - 0x10 ] ecx
mov eax [ ecx - 0x58 ]
mov eax [ eax + 0x4 ]
mov [ eax + ecx - 0x58 ] r--data
and [ ebp - 0x4 ] 0x0
lea esi [ ecx - 0x50 ]
mov ecx esi
call sub_1000cd25
mov eax [ esi - 0x8 ]
mov eax [ eax + 0x4 ]
mov [ eax + esi - 0x8 ] r--data
call sub_10029f0b
retn
sub_1000cd25
push 0x4
mov eax sub_1004c4aa
call sub_10029e33
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
and [ ebp - 0x4 ] 0x0
cmp [ esi + 0x48 ] 0x0
je r-xdata
or [ ebp - 0x4 ] 0xffffffff
mov ecx esi
call sub_100104f5
call sub_10029f0b
retn
mov eax esi
call sub_1000d5ff
sub_1000cd5e
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_1004c47a
mov eax [ fs : 0x0 ]
push eax
sub esp 0x58
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x50 ] eax
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x68 ]
mov [ fs : 0x0 ] eax
mov ebx [ ebp + 0x8 ]
mov esi ecx
cmp ebx 0xffffffff
jne r-xdata
mov eax [ esi + 0x24 ]
mov ecx [ eax ]
xor edi edi
cmp ecx edi
je r-xdata
xor eax eax
mov eax [ esi + 0x4c ]
cmp eax edi
jne r-xdata
mov eax [ esi + 0x34 ]
mov edx [ eax ]
add edx ecx
cmp ecx edx
jae r-xdata
cmp [ esi + 0x3c ] edi
jne r-xdata
or eax 0xffffffff
jmp r-xdata
dec [ eax ]
mov esi [ esi + 0x24 ]
mov eax [ esi ]
lea ecx [ eax + 0x1 ]
mov [ esi ] ecx
mov [ eax ] bl
push edi
push 0x8
lea ecx [ esp + 0x4c ]
mov [ esp + 0x1b ] bl
call sub_10005b42
lea eax [ esp + 0x24 ]
push eax
lea ecx [ esp + 0x48 ]
mov [ esp + 0x74 ] edi
call sub_1001039e
mov ecx eax
call sub_10006739
mov edi [ esp + 0x58 ]
mov ebx eax
lea eax [ esp + 0x2c ]
push eax
lea ecx [ esp + 0x48 ]
call sub_1001039e
mov ecx eax
call sub_10006739
lea edx [ esp + 0x18 ]
add edi ebx
push edx
lea ebx [ esi + 0x44 ]
jmp r-xdata
push eax
movsx eax bl
push eax
call sub_10028043
pop ecx
pop ecx
cmp eax 0xffffffff
je r-xdata
mov ecx [ esp + 0x68 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ esp + 0x50 ]
xor ecx esp
call sub_10025c8d
mov esp ebp
pop ebp
retn 0x4
mov ecx [ esi + 0x3c ]
push edi
push eax
lea edx [ esp + 0x28 ]
push edx
lea edx [ esp + 0x24 ]
push edx
lea edx [ esp + 0x27 ]
push edx
mov [ esp + 0x2c ] eax
mov eax [ ecx ]
push ebx
call [ eax + 0x14 ]
test eax eax
jge r-xdata
jmp r-xdata
cmp eax 0x1
jg r-xdata
or esi 0xffffffff
mov eax ebx
jmp r-xdata
cmp eax 0x3
jne r-xdata
lea eax [ esp + 0x34 ]
push eax
lea ecx [ esp + 0x48 ]
call sub_1001039e
mov ecx eax
call sub_10006739
mov edi [ esp + 0x18 ]
sub edi eax
je r-xdata
movsx eax [ esp + 0x13 ]
push [ esi + 0x4c ]
push eax
call sub_10028043
or esi 0xffffffff
pop ecx
pop ecx
cmp eax esi
je r-xdata
lea eax [ esp + 0x13 ]
mov [ esi + 0x41 ] 0x1
cmp [ esp + 0x1c ] eax
jne r-xdata
lea eax [ esp + 0x3c ]
push eax
lea ecx [ esp + 0x48 ]
call sub_1001039e
mov ecx eax
call sub_10006739
push [ esi + 0x4c ]
push edi
push 0x1
push eax
call sub_100282b1
add esp 0x10
cmp edi eax
jne r-xdata
push 0x0
push 0x1
lea ecx [ esp + 0x4c ]
call sub_100022b5
mov eax esi
jmp r-xdata
mov esi [ ebp + 0x8 ]
jmp r-xdata
test edi edi
ja r-xdata
lea eax [ esp + 0x24 ]
push eax
lea ecx [ esp + 0x48 ]
call sub_1001039e
mov ecx eax
call sub_10006739
mov edi [ esp + 0x58 ]
mov [ esp + 0x20 ] eax
lea eax [ esp + 0x2c ]
push eax
lea ecx [ esp + 0x48 ]
call sub_1001039e
mov ecx eax
call sub_10006739
lea edx [ esp + 0x18 ]
push edx
mov edx [ esp + 0x24 ]
add edi edx
cmp [ esp + 0x58 ] 0x20
jae r-xdata
push 0x0
push 0x8
lea ecx [ esp + 0x4c ]
call sub_10005b68
sub_1000cf77
mov eax [ ecx + 0x20 ]
mov eax [ eax ]
push ebx
mov ebx [ esp + 0x8 ]
test eax eax
je r-xdata
mov eax [ ecx + 0x4c ]
test eax eax
je r-xdata
mov edx [ ecx + 0x10 ]
cmp [ edx ] eax
jae r-xdata
or eax 0xffffffff
cmp ebx 0xffffffff
je r-xdata
cmp ebx 0xffffffff
je r-xdata
cmp [ ecx + 0x3c ] 0x0
jne r-xdata
mov eax [ ecx + 0x30 ]
inc [ eax ]
mov ecx [ ecx + 0x20 ]
dec [ ecx ]
mov eax ebx
inc eax
neg eax
sbb eax eax
and eax ebx
jmp r-xdata
movzx eax [ eax - 0x1 ]
cmp eax ebx
jne r-xdata
push eax
movzx eax bl
push eax
call sub_10028424
pop ecx
pop ecx
cmp eax 0xffffffff
je r-xdata
pop ebx
retn 0x4
mov eax ebx
jmp r-xdata
sub_1000cfdc
push esi
mov esi ecx
mov eax [ esi + 0x20 ]
mov ecx [ eax ]
test ecx ecx
je r-xdata
mov eax [ esi ]
push edi
mov ecx esi
call [ eax + 0x14 ]
mov edi eax
or eax 0xffffffff
cmp edi eax
je r-xdata
mov edx [ esi + 0x30 ]
mov eax [ eax ]
mov edx [ edx ]
add edx eax
cmp eax edx
jae r-xdata
pop edi
pop esi
retn
mov eax [ esi ]
push edi
mov ecx esi
call [ eax + 0x8 ]
mov eax edi
movzx eax [ ecx ]
pop esi
retn
sub_1000d018
push 0x58
mov eax sub_1004c44d
call sub_10029e9c
mov esi ecx
mov eax [ esi + 0x20 ]
mov eax [ eax ]
xor edi edi
cmp eax edi
je r-xdata
mov eax [ esi + 0x4c ]
cmp eax edi
jne r-xdata
mov eax [ esi + 0x20 ]
mov ecx [ esi + 0x30 ]
mov eax [ eax ]
mov ecx [ ecx ]
add ecx eax
cmp eax ecx
jae r-xdata
cmp [ esi + 0x3c ] edi
jne r-xdata
or eax 0xffffffff
jmp r-xdata
mov eax [ esi + 0x30 ]
dec [ eax ]
mov esi [ esi + 0x20 ]
mov eax [ esi ]
lea ecx [ eax + 0x1 ]
mov [ esi ] ecx
movzx eax [ eax ]
push edi
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x14 ] 0xf
call sub_1000237a
mov [ ebp - 0x4 ] edi
jmp r-xdata
push eax
call sub_10028496
pop ecx
cmp eax 0xffffffff
je r-xdata
call sub_10029f1f
retn
push [ esi + 0x4c ]
call sub_10028496
pop ecx
cmp eax 0xffffffff
jne r-xdata
movzx eax al
jmp r-xdata
push eax
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_10005b68
lea eax [ ebp - 0x44 ]
push eax
lea ecx [ ebp - 0x2c ]
call sub_1001039e
mov ecx eax
call sub_10006739
mov edi [ ebp - 0x18 ]
mov ebx eax
lea eax [ ebp - 0x64 ]
push eax
lea ecx [ ebp - 0x2c ]
call sub_1001039e
mov ecx eax
call sub_10006739
mov ecx [ esi + 0x3c ]
mov edx [ ecx ]
mov [ ebp - 0x38 ] eax
lea eax [ ebp - 0x3c ]
push eax
lea eax [ ebp - 0x2c ]
push eax
lea eax [ ebp - 0x2d ]
push eax
lea eax [ ebp - 0x34 ]
push eax
add edi ebx
push edi
push [ ebp - 0x38 ]
lea eax [ esi + 0x44 ]
push eax
call [ edx + 0x10 ]
test eax eax
jl r-xdata
or esi 0xffffffff
xor edi edi
inc edi
cmp eax edi
jle r-xdata
lea eax [ ebp - 0x2d ]
lea ecx [ ebp - 0x2c ]
cmp [ ebp - 0x3c ] eax
jne r-xdata
cmp eax 0x3
jne r-xdata
lea eax [ ebp - 0x54 ]
push eax
call sub_1001039e
mov ecx eax
call sub_10006739
mov edi [ ebp - 0x18 ]
sub edi [ ebp - 0x34 ]
add edi eax
jmp r-xdata
lea eax [ ebp - 0x5c ]
push eax
call sub_1001039e
mov ecx eax
call sub_10006739
mov ecx [ ebp - 0x34 ]
sub ecx eax
push ecx
push 0x0
lea ecx [ ebp - 0x2c ]
call sub_1000202a
cmp [ ebp - 0x18 ] edi
jb r-xdata
test edi edi
jg r-xdata
lea eax [ ebp - 0x4c ]
push eax
lea ecx [ ebp - 0x2c ]
call sub_1001039e
push edi
mov ecx eax
call sub_10006739
push eax
lea eax [ ebp - 0x2d ]
push edi
push eax
call sub_10025ca7
add esp 0x10
jmp r-xdata
mov eax [ ebp - 0x34 ]
push [ esi + 0x4c ]
dec edi
movsx eax [ edi + eax ]
push eax
call sub_10028424
pop ecx
pop ecx
movzx esi [ ebp - 0x2d ]
jmp r-xdata
push 0x0
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_100022b5
mov eax esi
jmp r-xdata
sub_1000d1b4
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0xc
push ebx
push esi
mov esi ecx
mov eax [ esi + 0x20 ]
push edi
lea edi [ esi + 0x40 ]
xor ebx ebx
cmp [ eax ] edi
jne r-xdata
cmp [ esi + 0x4c ] ebx
je r-xdata
cmp [ ebp + 0x10 ] 0x1
jne r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ r--data ]
mov [ eax ] ecx
mov [ eax + 0x8 ] ebx
mov [ eax + 0xc ] ebx
mov [ eax + 0x10 ] ebx
call sub_1000d68c
test al al
je r-xdata
cmp [ esi + 0x3c ] ebx
jne r-xdata
cmp [ ebp + 0xc ] ebx
jne r-xdata
dec [ ebp + 0xc ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ esi + 0x4c ]
call sub_10028624
add esp 0xc
test eax eax
jne r-xdata
cmp [ ebp + 0x10 ] 0x1
je r-xdata
lea eax [ esp + 0x10 ]
push eax
push [ esi + 0x4c ]
call sub_100286a9
pop ecx
pop ecx
test eax eax
jne r-xdata
mov eax [ esi + 0x20 ]
cmp [ eax ] edi
jne r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ esp + 0x10 ]
mov [ eax + 0x8 ] ecx
mov ecx [ esp + 0x14 ]
mov [ eax + 0xc ] ecx
mov ecx [ esi + 0x44 ]
mov [ eax ] ebx
mov [ eax + 0x10 ] ecx
jmp r-xdata
mov ecx [ esi + 0x10 ]
mov [ ecx ] edi
mov ecx [ esi + 0x20 ]
lea eax [ esi + 0x41 ]
mov [ ecx ] eax
mov ecx esi
sub ecx eax
mov eax [ esi + 0x30 ]
add ecx 0x41
mov [ eax ] ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
sub_1000d275
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0xc
mov eax [ ebp + 0x14 ]
push ebx
push esi
mov esi ecx
mov [ esp + 0xc ] eax
mov eax [ ebp + 0x18 ]
xor ebx ebx
push edi
mov edi [ ebp + 0xc ]
mov [ esp + 0x14 ] eax
cmp [ esi + 0x4c ] ebx
je r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ r--data ]
mov [ eax ] ecx
mov [ eax + 0x8 ] ebx
mov [ eax + 0xc ] ebx
mov [ eax + 0x10 ] ebx
call sub_1000d68c
test al al
je r-xdata
lea eax [ esp + 0x10 ]
push eax
push [ esi + 0x4c ]
call sub_10028717
pop ecx
pop ecx
test eax eax
jne r-xdata
cmp edi ebx
je r-xdata
lea eax [ esp + 0x10 ]
push eax
push [ esi + 0x4c ]
call sub_100286a9
pop ecx
pop ecx
test eax eax
jne r-xdata
push 0x1
push edi
push [ esi + 0x4c ]
call sub_10028624
add esp 0xc
test eax eax
jne r-xdata
mov eax [ ebp + 0x1c ]
mov [ esi + 0x44 ] eax
mov eax [ esi + 0x20 ]
lea ecx [ esi + 0x40 ]
cmp [ eax ] ecx
jne r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ esp + 0x10 ]
mov [ eax + 0x8 ] ecx
mov ecx [ esp + 0x14 ]
mov [ eax + 0xc ] ecx
mov ecx [ esi + 0x44 ]
mov [ eax ] ebx
mov [ eax + 0x10 ] ecx
jmp r-xdata
mov edx [ esi + 0x10 ]
mov [ edx ] ecx
mov ecx [ esi + 0x20 ]
lea eax [ esi + 0x41 ]
mov [ ecx ] eax
mov ecx esi
sub ecx eax
mov eax [ esi + 0x30 ]
add ecx 0x41
mov [ eax ] ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x20
sub_1000d349
push esi
mov esi ecx
mov eax [ esi + 0x4c ]
xor ecx ecx
cmp eax ecx
je r-xdata
xor eax eax
cmp [ esp + 0x8 ] ecx
jne r-xdata
push [ esp + 0xc ]
push ecx
push [ esp + 0x10 ]
push eax
call sub_1002875c
add esp 0x10
test eax eax
jne r-xdata
cmp [ esp + 0xc ] ecx
jne r-xdata
push edi
mov edi [ esi + 0x4c ]
push 0x1
call sub_1000d648
mov eax esi
pop edi
jmp r-xdata
push 0x4
pop ecx
pop esi
retn 0x8
sub_1000d390
push esi
mov esi ecx
cmp [ esi + 0x4c ] 0x0
je r-xdata
xor eax eax
pop esi
retn
mov eax [ esi ]
push 0xffffffff
call [ eax + 0x4 ]
cmp eax 0xffffffff
je r-xdata
push [ esi + 0x4c ]
call sub_100289e4
pop ecx
test eax eax
jge r-xdata
or eax 0xffffffff
pop esi
retn
sub_1000d3bb
push esi
push edi
push [ esp + 0xc ]
mov edi ecx
call sub_1000fc47
mov esi eax
mov eax [ esi ]
pop ecx
mov ecx esi
call [ eax + 0x4 ]
test al al
je r-xdata
mov eax edi
mov [ edi + 0x3c ] esi
call sub_1000e7f1
and [ edi + 0x3c ] 0x0
jmp r-xdata
pop edi
pop esi
retn 0x4
sub_1000d3eb
push 0x4
mov eax sub_1004d349
call sub_10029e33
mov ebx ecx
mov esi [ ebp + 0x8 ]
and [ ebp - 0x10 ] 0x0
mov [ esi ] r--data
mov [ esi + 0x54 ] r--data
and [ ebp - 0x4 ] 0x0
mov eax [ esi ]
mov eax [ eax + 0x4 ]
mov [ esi + eax ] r--data
mov eax [ esi ]
mov ecx [ eax + 0x4 ]
lea edi [ esi + 0x4 ]
push edi
add ecx esi
mov [ ebp - 0x10 ] 0x1
call sub_1000e726
mov [ ebp - 0x4 ] 0x2
mov eax [ esi ]
mov eax [ eax + 0x4 ]
push edi
mov [ esi + eax ] r--data
call sub_1000e792
mov eax edi
mov [ edi ] r--data
mov [ edi + 0x48 ] 0x0
mov [ edi + 0x41 ] 0x0
call sub_1000e7f1
mov eax [ rw-data ]
and [ edi + 0x4c ] 0x0
and [ edi + 0x3c ] 0x0
mov [ edi + 0x44 ] eax
or ebx 0x2
push ebx
push [ ebp + 0xc ]
mov ecx edi
mov [ ebp - 0x4 ] 0x3
call sub_1000d585
test eax eax
jne r-xdata
mov eax esi
call sub_10029f0b
retn 0x8
mov eax [ esi ]
mov eax [ eax + 0x4 ]
add eax esi
mov ecx [ eax + 0x8 ]
or ecx 0x2
cmp [ eax + 0x28 ] 0x0
jne r-xdata
push 0x0
push eax
call sub_100079b1
or ecx 0x4
sub_1000d4b0
push 0x4
mov eax sub_1004c941
call sub_10029e33
mov [ ebp - 0x10 ] ecx
mov eax [ ecx - 0x54 ]
mov eax [ eax + 0x4 ]
mov [ eax + ecx - 0x54 ] r--data
and [ ebp - 0x4 ] 0x0
lea esi [ ecx - 0x50 ]
mov ecx esi
call sub_1000cd25
mov eax [ esi - 0x4 ]
mov eax [ eax + 0x4 ]
mov [ eax + esi - 0x4 ] r--data
call sub_10029f0b
retn
sub_1000d549
push 0x4
mov eax sub_1004d2fc
call sub_10029e33
mov esi [ ebp + 0x8 ]
and [ ebp - 0x10 ] 0x0
mov eax [ esi ]
mov eax [ eax + 0x4 ]
push [ ebp + 0xc ]
mov [ esi + eax ] r--data
mov eax [ esi ]
and [ esi + 0x4 ] 0x0
mov ecx [ eax + 0x4 ]
add ecx esi
call sub_1000e726
mov eax esi
call sub_10029f0b
retn 0x8
sub_1000d585
push 0x0
mov eax sub_1004c42a
call sub_10029e33
mov esi ecx
cmp [ esi + 0x4c ] 0x0
jne r-xdata
xor eax eax
push 0x40
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_100234c7
add esp 0xc
test eax eax
je r-xdata
push 0x1
mov edi eax
call sub_1000d648
lea eax [ ebp + 0xc ]
push eax
mov eax esi
call sub_1000e7de
and [ ebp - 0x4 ] 0x0
push eax
call sub_1000fc47
mov edi eax
mov eax [ edi ]
pop ecx
mov ecx edi
call [ eax + 0x4 ]
test al al
je r-xdata
mov eax esi
mov [ esi + 0x3c ] edi
call sub_1000e7f1
and [ esi + 0x3c ] 0x0
jmp r-xdata
call sub_10029f0b
retn 0x8
lea ecx [ ebp + 0xc ]
call sub_10007806
mov eax esi
jmp r-xdata
sub_1000d5ff
push ebx
push esi
mov esi eax
xor ebx ebx
push edi
mov edi esi
cmp [ esi + 0x4c ] ebx
je r-xdata
xor edi edi
call sub_1000d68c
test al al
jne r-xdata
push [ esi + 0x4c ]
call sub_10028ab7
pop ecx
test eax eax
je r-xdata
xor edi edi
mov eax esi
mov [ esi + 0x48 ] bl
mov [ esi + 0x41 ] bl
call sub_1000e7f1
mov eax [ rw-data ]
mov [ esi + 0x44 ] eax
mov eax edi
pop edi
mov [ esi + 0x4c ] ebx
mov [ esi + 0x3c ] ebx
pop esi
pop ebx
retn
sub_1000d648
cmp [ esp + 0x4 ] 0x1
mov [ esi + 0x41 ] 0x0
sete al
mov [ esi + 0x48 ] al
mov eax esi
call sub_1000e7f1
test edi edi
je r-xdata
mov eax [ rw-data ]
and [ esi + 0x3c ] 0x0
mov [ esi + 0x4c ] edi
mov [ esi + 0x44 ] eax
retn 0x4
lea eax [ edi + 0x8 ]
mov [ esi + 0x10 ] eax
mov [ esi + 0x14 ] eax
lea eax [ edi + 0x4 ]
mov [ esi + 0x20 ] edi
mov [ esi + 0x24 ] edi
mov [ esi + 0x30 ] eax
mov [ esi + 0x34 ] eax
sub_1000d68c
push 0x4c
mov eax sub_1004c3fd
call sub_10029e9c
xor edi edi
cmp [ esi + 0x3c ] edi
je r-xdata
mov al 0x1
cmp [ esi + 0x41 ] 0x0
je r-xdata
mov eax [ esi ]
push 0xffffffff
mov ecx esi
call [ eax + 0x4 ]
cmp eax 0xffffffff
jne r-xdata
push edi
push 0x8
lea ecx [ ebp - 0x30 ]
call sub_10005b42
mov [ ebp - 0x4 ] edi
xor al al
jmp r-xdata
mov [ esi + 0x41 ] 0x0
dec eax
je r-xdata
call sub_10029f1f
retn
cmp [ esi + 0x41 ] 0x0
je r-xdata
lea eax [ ebp - 0x48 ]
push eax
lea ecx [ ebp - 0x30 ]
call sub_1001039e
mov ecx eax
call sub_10006739
push [ esi + 0x4c ]
push edi
push 0x1
push eax
call sub_100282b1
add esp 0x10
cmp edi eax
jne r-xdata
lea eax [ ebp - 0x50 ]
push eax
lea ecx [ ebp - 0x30 ]
call sub_1001039e
mov ecx eax
call sub_10006739
mov edi [ ebp - 0x34 ]
sub edi eax
je r-xdata
dec eax
dec eax
je r-xdata
mov bl 0x1
jmp r-xdata
test edi edi
jne r-xdata
xor bl bl
push 0x0
push 0x1
lea ecx [ ebp - 0x30 ]
call sub_100022b5
mov al bl
jmp r-xdata
lea eax [ ebp - 0x58 ]
push eax
lea ecx [ ebp - 0x30 ]
call sub_1001039e
mov ecx eax
call sub_10006739
mov edi [ ebp - 0x1c ]
mov ebx eax
lea eax [ ebp - 0x40 ]
push eax
lea ecx [ ebp - 0x30 ]
call sub_1001039e
mov ecx eax
call sub_10006739
mov ecx [ esi + 0x3c ]
mov edx [ ecx ]
mov [ ebp - 0x38 ] eax
lea eax [ ebp - 0x34 ]
push eax
add edi ebx
push edi
push [ ebp - 0x38 ]
lea eax [ esi + 0x44 ]
push eax
call [ edx + 0x18 ]
sub eax 0x0
je r-xdata
push edi
push 0x8
lea ecx [ ebp - 0x30 ]
call sub_10005b68
jmp r-xdata
sub_1000d7a0
push 0x50
mov eax sub_1004c3d0
call sub_10029e9c
mov esi [ ebp + 0x14 ]
test [ esi + 0x10 ] 0x4000
mov edi [ ebp + 0x8 ]
mov [ ebp - 0x30 ] ecx
mov [ ebp - 0x34 ] edi
jne r-xdata
lea eax [ ebp - 0x3c ]
push eax
mov ecx esi
call sub_1000781e
xor ebx ebx
push eax
mov [ ebp - 0x4 ] ebx
call sub_1000fce4
pop ecx
lea ecx [ ebp - 0x3c ]
mov [ ebp - 0x38 ] eax
call sub_10007806
push ebx
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x14 ] 0xf
call sub_1000237a
mov ecx [ ebp - 0x38 ]
xor edi edi
inc edi
lea eax [ ebp - 0x5c ]
mov [ ebp - 0x4 ] edi
push eax
cmp [ ebp + 0x1c ] bl
je r-xdata
movzx edx [ ebp + 0x1c ]
mov eax [ ecx ]
push edx
push [ ebp + 0x18 ]
push esi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push edi
call [ eax + 0x1c ]
mov eax edi
jmp r-xdata
call sub_1000f76f
mov [ ebp - 0x4 ] 0x3
call sub_10005ac0
mov [ ebp - 0x4 ] 0x2
jmp r-xdata
call sub_10029f1f
retn 0x18
xor edi edi
cmp eax [ ebp - 0x18 ]
jbe r-xdata
push 0xffffffff
push ebx
push eax
lea ecx [ ebp - 0x2c ]
call sub_10002099
push ebx
push edi
lea ecx [ ebp - 0x5c ]
mov [ ebp - 0x4 ] 0x1
call sub_100022b5
mov eax [ esi + 0x18 ]
cmp eax ebx
jle r-xdata
cmp [ ebp - 0x14 ] 0x10
mov eax [ ebp - 0x28 ]
jae r-xdata
push edi
push [ ebp + 0x18 ]
lea eax [ ebp - 0x40 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
push [ ebp - 0x30 ]
call sub_1000f025
mov ecx [ eax ]
mov [ ebp + 0xc ] ecx
mov eax [ eax + 0x4 ]
add esp 0x18
mov [ ebp + 0x10 ] eax
xor edi edi
sub eax [ ebp - 0x18 ]
mov edi eax
jmp r-xdata
push [ ebp - 0x18 ]
push eax
push [ ebp + 0x10 ]
lea eax [ ebp - 0x40 ]
push [ ebp + 0xc ]
push eax
push [ ebp - 0x30 ]
call sub_1000f806
mov ecx [ eax ]
push edi
push [ ebp + 0x18 ]
mov [ ebp + 0xc ] ecx
mov eax [ eax + 0x4 ]
push eax
push ecx
push [ ebp - 0x34 ]
mov [ ebp + 0x10 ] eax
push [ ebp - 0x30 ]
mov [ esi + 0x18 ] ebx
call sub_1000f025
add esp 0x30
push ebx
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_100022b5
mov eax [ ebp - 0x34 ]
lea eax [ ebp - 0x28 ]
mov eax [ esi + 0x10 ]
and eax 0x1c0
cmp eax 0x40
je r-xdata
sub_1000d8f1
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x54
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x50 ] eax
push ebx
push esi
mov esi [ ebp + 0x14 ]
mov eax [ esi + 0x10 ]
push edi
push [ ebp + 0x1c ]
mov edi [ ebp + 0x8 ]
push eax
push r--data
lea eax [ esp + 0x1c ]
mov ebx ecx
push eax
push ebx
call sub_1000ed61
add esp 0x10
push eax
lea eax [ esp + 0x20 ]
push 0x40
push eax
call sub_100264db
push eax
lea eax [ esp + 0x2c ]
push eax
push [ ebp + 0x18 ]
push esi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push edi
push ebx
call sub_1000edd5
mov ecx [ esp + 0x8c ]
add esp 0x30
mov eax edi
pop edi
pop esi
pop ebx
xor ecx esp
call sub_10025c8d
mov esp ebp
pop ebp
retn 0x18
sub_1000d96a
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x54
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x50 ] eax
push ebx
push esi
mov esi [ ebp + 0x14 ]
mov eax [ esi + 0x10 ]
push edi
push [ ebp + 0x1c ]
mov edi [ ebp + 0x8 ]
push eax
push r--data
lea eax [ esp + 0x1c ]
mov ebx ecx
push eax
push ebx
call sub_1000ed61
add esp 0x10
push eax
lea eax [ esp + 0x20 ]
push 0x40
push eax
call sub_100264db
push eax
lea eax [ esp + 0x2c ]
push eax
push [ ebp + 0x18 ]
push esi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push edi
push ebx
call sub_1000edd5
mov ecx [ esp + 0x8c ]
add esp 0x30
mov eax edi
pop edi
pop esi
pop ebx
xor ecx esp
call sub_10025c8d
mov esp ebp
pop ebp
retn 0x18
sub_1000d9e3
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x54
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x50 ] eax
push ebx
push esi
mov esi [ ebp + 0x14 ]
mov eax [ esi + 0x10 ]
push edi
push [ ebp + 0x20 ]
mov edi [ ebp + 0x8 ]
push [ ebp + 0x1c ]
mov ebx ecx
push eax
push r--data
lea eax [ esp + 0x20 ]
push eax
push ebx
call sub_1000ed61
add esp 0x10
push eax
lea eax [ esp + 0x24 ]
push 0x40
push eax
call sub_100264db
push eax
lea eax [ esp + 0x30 ]
push eax
push [ ebp + 0x18 ]
push esi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push edi
push ebx
call sub_1000edd5
mov ecx [ esp + 0x90 ]
add esp 0x34
mov eax edi
pop edi
pop esi
pop ebx
xor ecx esp
call sub_10025c8d
mov esp ebp
pop ebp
retn 0x1c
sub_1000da5f
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x54
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x50 ] eax
push ebx
push esi
mov esi [ ebp + 0x14 ]
mov eax [ esi + 0x10 ]
push edi
push [ ebp + 0x20 ]
mov edi [ ebp + 0x8 ]
push [ ebp + 0x1c ]
mov ebx ecx
push eax
push r--data
lea eax [ esp + 0x20 ]
push eax
push ebx
call sub_1000ed61
add esp 0x10
push eax
lea eax [ esp + 0x24 ]
push 0x40
push eax
call sub_100264db
push eax
lea eax [ esp + 0x30 ]
push eax
push [ ebp + 0x18 ]
push esi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push edi
push ebx
call sub_1000edd5
mov ecx [ esp + 0x90 ]
add esp 0x34
mov eax edi
pop edi
pop esi
pop ebx
xor ecx esp
call sub_10025c8d
mov esp ebp
pop ebp
retn 0x1c
sub_1000dadb
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x94
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x90 ] eax
mov eax [ ebp + 0x8 ]
push ebx
push esi
mov esi [ ebp + 0x14 ]
mov [ esp + 0x18 ] ecx
mov ecx [ esi + 0x14 ]
xor ebx ebx
cmp ecx ebx
mov [ esp + 0x14 ] eax
push edi
mov eax 0x2000
jg r-xdata
mov edi ecx
push 0x24
pop ecx
cmp edi ecx
mov [ esp + 0x20 ] ecx
jg r-xdata
test [ esi + 0x10 ] eax
jne r-xdata
mov ecx [ esi + 0x10 ]
fld [ ebp + 0x1c ]
sub edi [ esp + 0x20 ]
mov edx ecx
and edx 0x3000
mov [ esp + 0x14 ] ebx
cmp edx eax
jne r-xdata
mov [ esp + 0x20 ] edi
push 0x6
pop ecx
push ecx
push ecx
fstp [ esp ]
push [ esp + 0x28 ]
lea eax [ esp + 0x2c ]
push ecx
push 0x0
push eax
push [ esp + 0x34 ]
call sub_1000e833
add esp 0x10
push eax
lea eax [ esp + 0x38 ]
push 0x6c
push eax
call sub_100264db
push eax
push edi
push ebx
push [ esp + 0x38 ]
lea eax [ esp + 0x50 ]
push eax
push [ ebp + 0x18 ]
push esi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ esp + 0x54 ]
push [ esp + 0x5c ]
call sub_1000e897
mov ecx [ esp + 0xe0 ]
mov eax [ esp + 0x5c ]
add esp 0x44
pop edi
pop esi
pop ebx
xor ecx esp
call sub_10025c8d
mov esp ebp
pop ebp
retn 0x1c
fld [ r--data ]
fmul st1
fucomp st1
fnstsw ax
test ah 0x44
jpo r-xdata
fldz
fcom st1
fnstsw ax
test ah 0x41
jne r-xdata
mov [ esp + 0x13 ] bl
fxch st1
fxch st1
mov [ esp + 0x13 ] 0x1
fchs
jmp r-xdata
cmp [ esp + 0x14 ] 0x1388
jae r-xdata
fstp st1
jmp r-xdata
fld [ r--data ]
push 0xa
fcom st1
pop edx
fnstsw ax
fld [ r--data ]
test ah 0x41
jpo r-xdata
fdiv st2
add [ esp + 0x14 ] edx
fxch st1
fcom st2
fnstsw ax
test ah 0x41
jpo r-xdata
fxch st2
fcomp st1
fnstsw ax
test ah 0x5
jpe r-xdata
fxch st1
fstp st0
cmp [ esp + 0x13 ] 0x0
fstp st1
je r-xdata
cmp edi edx
jl r-xdata
fchs
fld [ r--data ]
fcomp st1
fnstsw ax
test ah 0x1
jne r-xdata
cmp ebx 0x1388
jae r-xdata
sub edi edx
fmul st1
add ebx edx
jmp r-xdata
sub_1000dc5b
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x94
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x90 ] eax
mov eax [ ebp + 0x8 ]
push ebx
push esi
mov esi [ ebp + 0x14 ]
mov [ esp + 0x18 ] ecx
mov ecx [ esi + 0x14 ]
mov [ esp + 0x14 ] eax
push edi
mov eax 0x2000
test ecx ecx
jg r-xdata
mov edi ecx
push 0x24
pop ecx
cmp edi ecx
mov [ esp + 0x20 ] ecx
jg r-xdata
test [ esi + 0x10 ] eax
jne r-xdata
mov ecx [ esi + 0x10 ]
sub edi [ esp + 0x20 ]
and [ esp + 0x10 ] 0x0
and [ esp + 0x14 ] 0x0
mov edx ecx
and edx 0x3000
cmp edx eax
jne r-xdata
mov [ esp + 0x20 ] edi
push 0x6
pop ecx
fld [ ebp + 0x1c ]
fldz
fld [ ebp + 0x1c ]
fcom st1
fnstsw ax
test ah 0x5
jpe r-xdata
mov [ esp + 0xf ] 0x0
jmp r-xdata
mov [ esp + 0xf ] 0x1
fchs
fld [ r--data ]
push 0xa
fcom st1
mov ebx 0x1388
pop edx
fnstsw ax
fld [ r--data ]
test ah 0x41
jpo r-xdata
cmp [ esp + 0x10 ] ebx
jae r-xdata
fstp st1
jmp r-xdata
fdiv st2
add [ esp + 0x10 ] edx
fxch st1
fcom st2
fnstsw ax
test ah 0x41
jpo r-xdata
fxch st2
fcomp st1
fnstsw ax
test ah 0x5
jpe r-xdata
fxch st1
fstp st0
cmp [ esp + 0xf ] 0x0
fstp st1
je r-xdata
cmp edi edx
jl r-xdata
push ecx
push ecx
fstp [ esp ]
push [ esp + 0x28 ]
lea eax [ esp + 0x2c ]
push ecx
push 0x4c
push eax
push [ esp + 0x34 ]
call sub_1000e833
add esp 0x10
push eax
lea eax [ esp + 0x38 ]
push 0x6c
push eax
call sub_100264db
push eax
push edi
push [ esp + 0x34 ]
lea eax [ esp + 0x4c ]
push [ esp + 0x34 ]
push eax
push [ ebp + 0x18 ]
push esi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ esp + 0x54 ]
push [ esp + 0x5c ]
call sub_1000e897
mov ecx [ esp + 0xe0 ]
mov eax [ esp + 0x5c ]
add esp 0x44
pop edi
pop esi
pop ebx
xor ecx esp
call sub_10025c8d
mov esp ebp
pop ebp
retn 0x1c
fchs
jmp r-xdata
fld [ r--data ]
fcomp st1
fnstsw ax
test ah 0x1
jne r-xdata
cmp [ esp + 0x14 ] ebx
jae r-xdata
sub edi edx
fmul st1
add [ esp + 0x14 ] edx
jmp r-xdata
sub_1000ddd0
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x4c
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x48 ] eax
mov eax [ ebp + 0x1c ]
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi [ ebp + 0x14 ]
push eax
push r--data
lea eax [ esp + 0x18 ]
push 0x40
push eax
mov ebx ecx
call sub_100264db
push eax
lea eax [ esp + 0x24 ]
push eax
push [ ebp + 0x18 ]
push edi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
push ebx
call sub_1000edd5
mov ecx [ esp + 0x84 ]
add esp 0x30
pop edi
mov eax esi
pop esi
pop ebx
xor ecx esp
call sub_10025c8d
mov esp ebp
pop ebp
retn 0x18
sub_1000de37
push 0x60
mov eax sub_1004c911
call sub_10029e9c
mov eax [ ebp + 0x8 ]
mov esi [ ebp + 0x1c ]
or [ ebp - 0x50 ] 0xffffffff
mov [ ebp - 0x68 ] eax
mov eax [ ebp + 0x20 ]
mov [ ebp - 0x58 ] eax
mov eax [ ebp + 0x24 ]
xor ebx ebx
mov [ ebp - 0x6c ] eax
mov eax [ esi + 0x10 ]
inc ebx
mov [ ebp - 0x54 ] ecx
mov ecx esi
test eax 0x4000
je r-xdata
lea eax [ ebp - 0x60 ]
xor edi edi
push eax
mov [ ebp - 0x5c ] edi
call sub_1000781e
lea ecx [ ebp - 0x5c ]
push ecx
push eax
mov [ ebp - 0x4 ] 0x4
mov esi [ esi + 0x10 ]
push esi
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
lea eax [ ebp - 0x30 ]
push eax
push [ ebp - 0x54 ]
call sub_1000f04e
add esp 0x18
push eax
lea eax [ ebp - 0x64 ]
push eax
lea eax [ ebp - 0x30 ]
push eax
call sub_10022e0c
or [ ebp - 0x4 ] 0xffffffff
add esp 0x10
lea ecx [ ebp - 0x60 ]
mov esi eax
call sub_10007806
lea eax [ ebp - 0x30 ]
cmp [ ebp - 0x64 ] eax
je r-xdata
lea eax [ ebp - 0x54 ]
push eax
call sub_1000781e
xor edi edi
push eax
mov [ ebp - 0x4 ] edi
call sub_1000fce4
pop ecx
or esi 0xffffffff
lea ecx [ ebp - 0x54 ]
mov [ ebp - 0x50 ] eax
mov [ ebp - 0x4 ] esi
call sub_10007806
push edi
push ebx
lea ecx [ ebp - 0x4c ]
call sub_10005b42
mov ecx [ ebp - 0x50 ]
lea eax [ ebp - 0x2c ]
push eax
mov [ ebp - 0x4 ] ebx
call sub_1000f76f
push esi
push edi
push eax
lea ecx [ ebp - 0x4c ]
mov [ ebp - 0x4 ] 0x2
call sub_10006c1e
push edi
push ebx
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x4 ] bl
call sub_100022b5
push edi
push ebx
lea ecx [ ebp - 0x4c ]
call sub_10005b68
mov ecx [ ebp - 0x50 ]
lea eax [ ebp - 0x2c ]
push eax
call sub_10005ac0
push esi
push edi
push eax
lea ecx [ ebp - 0x4c ]
mov [ ebp - 0x4 ] 0x3
call sub_10006c1e
push edi
push ebx
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x4 ] bl
call sub_100022b5
cmp [ ebp - 0x34 ] 0x10
mov eax [ ebp - 0x48 ]
jae r-xdata
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_10010048
test al al
mov eax [ ebp - 0x58 ]
je r-xdata
cmp [ ebp - 0x5c ] edi
jne r-xdata
push eax
push 0x2
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
call sub_1000fd81
add esp 0x10
push edi
push ebx
lea ecx [ ebp - 0x4c ]
mov [ ebp - 0x50 ] eax
mov [ ebp - 0x4 ] esi
call sub_100022b5
jmp r-xdata
lea eax [ ebp - 0x48 ]
cmp [ ebp - 0x50 ] edi
jge r-xdata
or [ eax ] ebx
cmp esi ebx
ja r-xdata
mov ecx [ ebp - 0x6c ]
setne al
mov [ ecx ] al
or [ eax ] 0x2
jmp r-xdata
mov [ ebp - 0x50 ] esi
mov ecx [ ebp + 0xc ]
mov eax [ ebp - 0x68 ]
mov [ eax ] ecx
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x4 ] ecx
call sub_10029f1f
retn 0x20
sub_1000dfd5
push 0x38
mov eax sub_1004c38b
call sub_10029e9c
mov eax [ ebp + 0x8 ]
mov esi [ ebp + 0x1c ]
mov edi [ ebp + 0x20 ]
mov ebx [ ebp + 0x24 ]
and [ ebp - 0x38 ] 0x0
mov [ ebp - 0x40 ] eax
lea eax [ ebp - 0x3c ]
mov [ ebp - 0x34 ] ecx
push eax
mov ecx esi
call sub_1000781e
and [ ebp - 0x4 ] 0x0
mov esi [ esi + 0x10 ]
push eax
push esi
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
lea eax [ ebp - 0x30 ]
push eax
push [ ebp - 0x34 ]
call sub_1000f04e
or [ ebp - 0x4 ] 0xffffffff
add esp 0x18
lea ecx [ ebp - 0x3c ]
mov esi eax
call sub_10007806
cmp [ ebp - 0x30 ] 0x2d
lea eax [ ebp - 0x2f ]
je r-xdata
mov [ ebp - 0x34 ] eax
lea eax [ ebp - 0x38 ]
push eax
push esi
lea eax [ ebp - 0x44 ]
push eax
push [ ebp - 0x34 ]
call sub_10022e0c
mov esi eax
add esp 0x10
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_10010048
test al al
je r-xdata
lea eax [ ebp - 0x30 ]
mov eax [ ebp - 0x34 ]
cmp [ ebp - 0x44 ] eax
je r-xdata
or [ edi ] 0x1
or [ edi ] 0x2
cmp [ ebp - 0x38 ] 0x0
jne r-xdata
cmp esi 0xffff
ja r-xdata
cmp [ ebp - 0x30 ] 0x2d
jne r-xdata
mov [ ebx ] si
jmp r-xdata
neg esi
mov ecx [ ebp + 0xc ]
mov eax [ ebp - 0x40 ]
mov [ eax ] ecx
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x4 ] ecx
call sub_10029f1f
retn 0x20
sub_1000e0a4
push 0x38
mov eax sub_1004c38b
call sub_10029e9c
mov eax [ ebp + 0x8 ]
mov esi [ ebp + 0x1c ]
mov edi [ ebp + 0x20 ]
mov ebx [ ebp + 0x24 ]
and [ ebp - 0x38 ] 0x0
mov [ ebp - 0x40 ] eax
lea eax [ ebp - 0x3c ]
mov [ ebp - 0x34 ] ecx
push eax
mov ecx esi
call sub_1000781e
and [ ebp - 0x4 ] 0x0
mov esi [ esi + 0x10 ]
push eax
push esi
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
lea eax [ ebp - 0x30 ]
push eax
push [ ebp - 0x34 ]
call sub_1000f04e
or [ ebp - 0x4 ] 0xffffffff
add esp 0x18
lea ecx [ ebp - 0x3c ]
mov esi eax
call sub_10007806
cmp [ ebp - 0x30 ] 0x2d
lea eax [ ebp - 0x2f ]
je r-xdata
mov [ ebp - 0x34 ] eax
lea eax [ ebp - 0x38 ]
push eax
push esi
lea eax [ ebp - 0x44 ]
push eax
push [ ebp - 0x34 ]
call sub_10022e0c
mov esi eax
add esp 0x10
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_10010048
test al al
je r-xdata
lea eax [ ebp - 0x30 ]
mov eax [ ebp - 0x34 ]
cmp [ ebp - 0x44 ] eax
je r-xdata
or [ edi ] 0x1
or [ edi ] 0x2
cmp [ ebp - 0x38 ] 0x0
jne r-xdata
cmp esi 0xffffffff
ja r-xdata
cmp [ ebp - 0x30 ] 0x2d
jne r-xdata
mov [ ebx ] esi
jmp r-xdata
neg esi
mov ecx [ ebp + 0xc ]
mov eax [ ebp - 0x40 ]
mov [ eax ] ecx
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x4 ] ecx
call sub_10029f1f
retn 0x20
sub_1000e16f
push 0x38
mov eax sub_1004b9ae
call sub_10029e9c
mov eax [ ebp + 0x8 ]
mov esi [ ebp + 0x1c ]
mov edi [ ebp + 0x20 ]
mov ebx [ ebp + 0x24 ]
and [ ebp - 0x34 ] 0x0
mov [ ebp - 0x3c ] eax
lea eax [ ebp - 0x38 ]
mov [ ebp - 0x44 ] ecx
push eax
mov ecx esi
call sub_1000781e
and [ ebp - 0x4 ] 0x0
mov esi [ esi + 0x10 ]
lea ecx [ ebp - 0x34 ]
push ecx
push eax
push esi
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
lea eax [ ebp - 0x30 ]
push eax
push [ ebp - 0x44 ]
call sub_1000f04e
add esp 0x18
push eax
lea eax [ ebp - 0x40 ]
push eax
lea eax [ ebp - 0x30 ]
push eax
call sub_10022fa7
or [ ebp - 0x4 ] 0xffffffff
add esp 0x10
lea ecx [ ebp - 0x38 ]
mov esi eax
call sub_10007806
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_10010048
test al al
je r-xdata
lea eax [ ebp - 0x30 ]
cmp [ ebp - 0x40 ] eax
je r-xdata
or [ edi ] 0x1
or [ edi ] 0x2
cmp [ ebp - 0x34 ] 0x0
jne r-xdata
mov [ ebx ] esi
jmp r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ebp - 0x3c ]
mov [ eax ] ecx
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x4 ] ecx
call sub_10029f1f
retn 0x20
sub_1000e21d
push 0x38
mov eax sub_1004b9ae
call sub_10029e9c
mov eax [ ebp + 0x8 ]
mov esi [ ebp + 0x1c ]
mov edi [ ebp + 0x20 ]
mov ebx [ ebp + 0x24 ]
and [ ebp - 0x34 ] 0x0
mov [ ebp - 0x3c ] eax
lea eax [ ebp - 0x38 ]
mov [ ebp - 0x44 ] ecx
push eax
mov ecx esi
call sub_1000781e
and [ ebp - 0x4 ] 0x0
mov esi [ esi + 0x10 ]
lea ecx [ ebp - 0x34 ]
push ecx
push eax
push esi
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
lea eax [ ebp - 0x30 ]
push eax
push [ ebp - 0x44 ]
call sub_1000f04e
add esp 0x18
push eax
lea eax [ ebp - 0x40 ]
push eax
lea eax [ ebp - 0x30 ]
push eax
call sub_10022e0c
or [ ebp - 0x4 ] 0xffffffff
add esp 0x10
lea ecx [ ebp - 0x38 ]
mov esi eax
call sub_10007806
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_10010048
test al al
je r-xdata
lea eax [ ebp - 0x30 ]
cmp [ ebp - 0x40 ] eax
je r-xdata
or [ edi ] 0x1
or [ edi ] 0x2
cmp [ ebp - 0x34 ] 0x0
jne r-xdata
mov [ ebx ] esi
jmp r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ebp - 0x3c ]
mov [ eax ] ecx
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x4 ] ecx
call sub_10029f1f
retn 0x20
sub_1000e2cb
push 0x3c
mov eax sub_1004c35e
call sub_10029e9c
mov eax [ ebp + 0x8 ]
mov esi [ ebp + 0x1c ]
mov ebx [ ebp + 0x20 ]
mov edi [ ebp + 0x24 ]
and [ ebp - 0x34 ] 0x0
mov [ ebp - 0x3c ] eax
lea eax [ ebp - 0x38 ]
mov [ ebp - 0x44 ] ecx
push eax
mov ecx esi
call sub_1000781e
and [ ebp - 0x4 ] 0x0
mov esi [ esi + 0x10 ]
lea ecx [ ebp - 0x34 ]
push ecx
push eax
push esi
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
lea eax [ ebp - 0x30 ]
push eax
push [ ebp - 0x44 ]
call sub_1000f04e
add esp 0x18
push eax
lea eax [ ebp - 0x40 ]
push eax
lea eax [ ebp - 0x30 ]
push eax
call sub_1002304c
or [ ebp - 0x4 ] 0xffffffff
add esp 0x10
lea ecx [ ebp - 0x38 ]
mov esi eax
mov [ ebp - 0x44 ] edx
call sub_10007806
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_10010048
test al al
je r-xdata
lea eax [ ebp - 0x30 ]
cmp [ ebp - 0x40 ] eax
je r-xdata
or [ ebx ] 0x1
or [ ebx ] 0x2
cmp [ ebp - 0x34 ] 0x0
jne r-xdata
mov eax [ ebp - 0x44 ]
mov [ edi ] esi
mov [ edi + 0x4 ] eax
jmp r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ebp - 0x3c ]
mov [ eax ] ecx
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x4 ] ecx
call sub_10029f1f
retn 0x20
sub_1000e382
push 0x3c
mov eax sub_1004c35e
call sub_10029e9c
mov eax [ ebp + 0x8 ]
mov esi [ ebp + 0x1c ]
mov ebx [ ebp + 0x20 ]
mov edi [ ebp + 0x24 ]
and [ ebp - 0x34 ] 0x0
mov [ ebp - 0x3c ] eax
lea eax [ ebp - 0x38 ]
mov [ ebp - 0x44 ] ecx
push eax
mov ecx esi
call sub_1000781e
and [ ebp - 0x4 ] 0x0
mov esi [ esi + 0x10 ]
lea ecx [ ebp - 0x34 ]
push ecx
push eax
push esi
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
lea eax [ ebp - 0x30 ]
push eax
push [ ebp - 0x44 ]
call sub_1000f04e
add esp 0x18
push eax
lea eax [ ebp - 0x40 ]
push eax
lea eax [ ebp - 0x30 ]
push eax
call sub_1002310f
or [ ebp - 0x4 ] 0xffffffff
add esp 0x10
lea ecx [ ebp - 0x38 ]
mov esi eax
mov [ ebp - 0x44 ] edx
call sub_10007806
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_10010048
test al al
je r-xdata
lea eax [ ebp - 0x30 ]
cmp [ ebp - 0x40 ] eax
je r-xdata
or [ ebx ] 0x1
or [ ebx ] 0x2
cmp [ ebp - 0x34 ] 0x0
jne r-xdata
mov eax [ ebp - 0x44 ]
mov [ edi ] esi
mov [ edi + 0x4 ] eax
jmp r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ebp - 0x3c ]
mov [ eax ] ecx
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x4 ] ecx
call sub_10029f1f
retn 0x20
sub_1000e439
push 0x50
mov eax sub_1004b9db
call sub_10029e9c
mov edi [ ebp + 0x8 ]
mov esi [ ebp + 0x20 ]
mov ebx [ ebp + 0x24 ]
and [ ebp - 0x54 ] 0x0
lea eax [ ebp - 0x58 ]
mov [ ebp - 0x50 ] ecx
mov ecx [ ebp + 0x1c ]
push eax
call sub_1000781e
and [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x54 ]
push ecx
push eax
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
lea eax [ ebp - 0x4c ]
push eax
push [ ebp - 0x50 ]
call sub_1000f315
add esp 0x14
push eax
lea eax [ ebp - 0x5c ]
push eax
lea eax [ ebp - 0x4c ]
push eax
call sub_10023314
fstp [ ebp - 0x50 ]
or [ ebp - 0x4 ] 0xffffffff
add esp 0x10
lea ecx [ ebp - 0x58 ]
call sub_10007806
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_10010048
test al al
je r-xdata
lea eax [ ebp - 0x4c ]
cmp [ ebp - 0x5c ] eax
je r-xdata
or [ esi ] 0x1
or [ esi ] 0x2
cmp [ ebp - 0x54 ] 0x0
jne r-xdata
fld [ ebp - 0x50 ]
fstp [ ebx ]
jmp r-xdata
mov eax [ ebp + 0xc ]
mov [ edi ] eax
mov eax [ ebp + 0x10 ]
mov [ edi + 0x4 ] eax
mov eax edi
call sub_10029f1f
retn 0x20
sub_1000e4e1
push 0x54
mov eax sub_1004c331
call sub_10029e9c
mov edi [ ebp + 0x8 ]
mov esi [ ebp + 0x20 ]
mov ebx [ ebp + 0x24 ]
and [ ebp - 0x50 ] 0x0
lea eax [ ebp - 0x54 ]
mov [ ebp - 0x5c ] ecx
mov ecx [ ebp + 0x1c ]
push eax
call sub_1000781e
and [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x50 ]
push ecx
push eax
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
lea eax [ ebp - 0x4c ]
push eax
push [ ebp - 0x5c ]
call sub_1000f315
add esp 0x14
push eax
lea eax [ ebp - 0x58 ]
push eax
lea eax [ ebp - 0x4c ]
push eax
call sub_10023336
fstp [ ebp - 0x60 ]
or [ ebp - 0x4 ] 0xffffffff
add esp 0x10
lea ecx [ ebp - 0x54 ]
call sub_10007806
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_10010048
test al al
je r-xdata
lea eax [ ebp - 0x4c ]
cmp [ ebp - 0x58 ] eax
je r-xdata
or [ esi ] 0x1
or [ esi ] 0x2
cmp [ ebp - 0x50 ] 0x0
jne r-xdata
fld [ ebp - 0x60 ]
fstp [ ebx ]
jmp r-xdata
mov eax [ ebp + 0xc ]
mov [ edi ] eax
mov eax [ ebp + 0x10 ]
mov [ edi + 0x4 ] eax
mov eax edi
call sub_10029f1f
retn 0x20
sub_1000e589
push 0x54
mov eax sub_1004c331
call sub_10029e9c
mov edi [ ebp + 0x8 ]
mov esi [ ebp + 0x20 ]
mov ebx [ ebp + 0x24 ]
and [ ebp - 0x50 ] 0x0
lea eax [ ebp - 0x54 ]
mov [ ebp - 0x5c ] ecx
mov ecx [ ebp + 0x1c ]
push eax
call sub_1000781e
and [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x50 ]
push ecx
push eax
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
lea eax [ ebp - 0x4c ]
push eax
push [ ebp - 0x5c ]
call sub_1000f315
add esp 0x14
push eax
lea eax [ ebp - 0x58 ]
push eax
lea eax [ ebp - 0x4c ]
push eax
call sub_1002339f
fstp [ ebp - 0x60 ]
or [ ebp - 0x4 ] 0xffffffff
add esp 0x10
lea ecx [ ebp - 0x54 ]
call sub_10007806
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_10010048
test al al
je r-xdata
lea eax [ ebp - 0x4c ]
cmp [ ebp - 0x58 ] eax
je r-xdata
or [ esi ] 0x1
or [ esi ] 0x2
cmp [ ebp - 0x50 ] 0x0
jne r-xdata
fld [ ebp - 0x60 ]
fstp [ ebx ]
jmp r-xdata
mov eax [ ebp + 0xc ]
mov [ edi ] eax
mov eax [ ebp + 0x10 ]
mov [ edi + 0x4 ] eax
mov eax edi
call sub_10029f1f
retn 0x20
sub_1000e631
push 0x38
mov eax sub_1004ba08
call sub_10029e9c
mov ebx [ ebp + 0x8 ]
mov esi [ ebp + 0x20 ]
mov edi [ ebp + 0x24 ]
and [ ebp - 0x3c ] 0x0
lea eax [ ebp - 0x40 ]
mov [ ebp - 0x34 ] ecx
mov ecx [ ebp + 0x1c ]
push eax
call sub_1000781e
and [ ebp - 0x4 ] 0x0
push eax
push 0x800
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
lea eax [ ebp - 0x30 ]
push eax
push [ ebp - 0x34 ]
call sub_1000f04e
or [ ebp - 0x4 ] 0xffffffff
add esp 0x18
lea ecx [ ebp - 0x40 ]
mov [ ebp - 0x34 ] eax
call sub_10007806
lea eax [ ebp - 0x3c ]
push eax
push [ ebp - 0x34 ]
lea eax [ ebp - 0x44 ]
push eax
lea eax [ ebp - 0x30 ]
push eax
call sub_10022e0c
and [ ebp - 0x34 ] 0x0
mov [ ebp - 0x38 ] eax
add esp 0x10
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_10010048
test al al
je r-xdata
lea eax [ ebp - 0x30 ]
cmp [ ebp - 0x44 ] eax
je r-xdata
or [ esi ] 0x1
or [ esi ] 0x2
cmp [ ebp - 0x3c ] 0x0
jne r-xdata
mov eax [ ebp - 0x38 ]
mov [ edi ] eax
jmp r-xdata
mov eax [ ebp + 0xc ]
mov [ ebx ] eax
mov eax [ ebp + 0x10 ]
mov [ ebx + 0x4 ] eax
mov eax ebx
call sub_10029f1f
retn 0x20
sub_1000e726
push 0x0
mov eax sub_1004d2e1
call sub_10029e33
mov esi ecx
call sub_10006bae
mov eax [ ebp + 0x8 ]
mov [ esi + 0x28 ] eax
lea eax [ ebp + 0x8 ]
xor ebx ebx
push eax
mov ecx esi
mov [ esi + 0x2c ] ebx
call sub_1000781e
push eax
mov [ ebp - 0x4 ] ebx
call sub_100107ba
or [ ebp - 0x4 ] 0xffffffff
pop ecx
lea ecx [ ebp + 0x8 ]
mov edi eax
call sub_10007806
mov eax [ edi ]
push 0x20
mov ecx edi
call [ eax + 0x18 ]
mov [ esi + 0x30 ] al
cmp [ esi + 0x28 ] ebx
jne r-xdata
mov [ esi + 0x4 ] ebx
call sub_10029f0b
retn 0x4
mov eax [ esi + 0x8 ]
or eax 0x4
push ebx
push esi
mov ecx eax
call sub_100079b1
sub_1000e792
push 0x0
mov eax sub_1004bf9a
call sub_10029e33
mov esi [ ebp + 0x8 ]
lea ecx [ esi + 0x4 ]
mov [ esi ] r--data
call sub_1002239a
and [ ebp - 0x4 ] 0x0
push 0x4
call sub_10025dd6
pop ecx
test eax eax
je r-xdata
xor eax eax
mov ecx eax
call sub_10006db7
jmp r-xdata
mov [ esi + 0x38 ] eax
mov eax esi
call sub_1000e7f1
mov eax esi
call sub_10029f0b
retn 0x4
sub_1000e7f1
lea edx [ eax + 0x18 ]
mov [ eax + 0x20 ] edx
lea edx [ eax + 0x1c ]
mov [ eax + 0x24 ] edx
lea edx [ eax + 0x28 ]
mov [ eax + 0x30 ] edx
lea ecx [ eax + 0x8 ]
mov [ eax + 0x10 ] ecx
lea edx [ eax + 0x2c ]
mov [ eax + 0x34 ] edx
xor edx edx
lea ecx [ eax + 0xc ]
mov [ eax + 0x14 ] ecx
mov [ ecx ] edx
mov ecx [ eax + 0x24 ]
mov [ ecx ] edx
mov ecx [ eax + 0x34 ]
mov [ ecx ] edx
mov ecx [ eax + 0x10 ]
mov [ ecx ] edx
mov ecx [ eax + 0x20 ]
mov [ ecx ] edx
mov eax [ eax + 0x30 ]
mov [ eax ] edx
retn
sub_1000e833
mov eax [ esp + 0x8 ]
push ebx
mov ebx [ esp + 0x14 ]
mov [ eax ] 0x25
lea ecx [ eax + 0x1 ]
test bl 0x20
je r-xdata
test bl 0x10
je r-xdata
mov [ ecx ] 0x2b
inc ecx
mov dl [ esp + 0x10 ]
mov [ ecx ] 0x2e
inc ecx
mov [ ecx ] 0x2a
inc ecx
test dl dl
je r-xdata
mov [ ecx ] 0x23
inc ecx
mov edx 0x3000
and ebx edx
cmp ebx 0x2000
jne r-xdata
mov [ ecx ] dl
inc ecx
cmp ebx edx
jne r-xdata
mov dl 0x66
jmp r-xdata
cmp ebx 0x1000
setne dl
lea edx [ edx + edx + 0x65 ]
mov dl 0x61
jmp r-xdata
mov [ ecx ] dl
mov [ ecx + 0x1 ] 0x0
pop ebx
retn
sub_1000e897
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_1004c8c1
mov eax [ fs : 0x0 ]
push eax
sub esp 0x70
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x68 ] eax
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x80 ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0xc ]
mov ecx [ ebp + 0x18 ]
mov edi [ ebp + 0x20 ]
mov [ esp + 0x30 ] eax
lea eax [ esp + 0x3c ]
push eax
mov [ esp + 0x30 ] ecx
call sub_1000781e
xor ebx ebx
push eax
mov [ esp + 0x8c ] ebx
call sub_1000fce4
or [ esp + 0x8c ] 0xffffffff
pop ecx
mov esi eax
lea ecx [ esp + 0x3c ]
mov [ esp + 0x24 ] esi
call sub_10007806
lea eax [ esp + 0x5c ]
push eax
mov ecx esi
call sub_10005dd3
mov [ esp + 0x88 ] 0x1
mov eax [ esi ]
mov ecx esi
call [ eax + 0x8 ]
push ebx
lea ecx [ esp + 0x44 ]
mov [ esp + 0x38 ] al
mov [ esp + 0x5c ] 0xf
call sub_1000237a
mov [ esp + 0x88 ] 0x2
mov al [ edi ]
cmp al 0x2b
je r-xdata
mov [ esp + 0x1c ] 0x1
mov [ esp + 0x1c ] ebx
cmp al 0x2d
jne r-xdata
cmp [ esp + 0x74 ] 0x10
mov eax [ esp + 0x60 ]
jae r-xdata
mov [ ebp + 0x2c ] ebx
call sub_100264f9
mov eax [ eax ]
push [ ebp + 0x30 ]
mov al [ eax ]
push 0x65
push edi
mov [ esp + 0x24 ] al
mov [ esp + 0x25 ] 0x65
mov [ esp + 0x26 ] 0x0
call sub_10026520
push [ ebp + 0x30 ]
mov esi eax
movsx eax [ esp + 0x28 ]
push eax
push edi
call sub_10026520
add esp 0x18
mov [ esp + 0x14 ] eax
cmp eax ebx
jne r-xdata
cmp [ eax ] 0x7f
je r-xdata
lea eax [ esp + 0x60 ]
mov ecx [ ebp + 0x28 ]
mov eax [ ebp + 0x24 ]
mov edx [ esp + 0x2c ]
add eax ecx
add eax [ ebp + 0x2c ]
mov ecx [ edx + 0x18 ]
add eax [ ebp + 0x30 ]
cmp ecx ebx
jle r-xdata
cmp [ esp + 0x74 ] 0x10
mov eax [ esp + 0x60 ]
jae r-xdata
mov [ esp + 0x14 ] ebx
cmp ecx eax
jbe r-xdata
cmp [ eax ] 0x0
jle r-xdata
lea eax [ esp + 0x60 ]
movsx eax [ esp + 0x18 ]
push [ ebp + 0x30 ]
push eax
push edi
call sub_10026520
add esp 0xc
cmp eax ebx
je r-xdata
cmp eax 0x100
jne r-xdata
sub ecx eax
mov [ esp + 0x14 ] ecx
jmp r-xdata
push [ ebp + 0x30 ]
lea ecx [ esp + 0x44 ]
push edi
call sub_10006cc5
cmp esi ebx
jne r-xdata
push [ ebp + 0x30 ]
push 0x65
push edi
call sub_10026520
add esp 0xc
cmp eax ebx
je r-xdata
push [ esp + 0x34 ]
sub eax edi
inc eax
mov ebx eax
lea eax [ ebx - 0x1 ]
push eax
push edi
push [ ebp + 0x14 ]
lea eax [ esp + 0x2c ]
push [ ebp + 0x10 ]
push eax
push esi
call sub_1000f83a
mov ecx [ eax ]
push [ ebp + 0x24 ]
mov [ ebp + 0x10 ] ecx
mov ecx [ eax + 0x4 ]
push 0x30
mov [ ebp + 0x14 ] ecx
push [ eax + 0x4 ]
push [ eax ]
lea eax [ esp + 0x48 ]
push eax
push esi
call sub_1000f025
mov ecx [ eax ]
mov [ ebp + 0x10 ] ecx
mov eax [ eax + 0x4 ]
mov ecx [ esp + 0x58 ]
mov [ ebp + 0x14 ] eax
mov eax [ ecx ]
add esp 0x34
call [ eax + 0x4 ]
push 0x1
mov [ esp + 0x28 ] al
push [ esp + 0x28 ]
lea eax [ esp + 0x24 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push eax
push esi
call sub_1000f025
mov ecx [ eax ]
push [ ebp + 0x28 ]
mov [ ebp + 0x10 ] ecx
mov ecx [ eax + 0x4 ]
push 0x30
mov [ ebp + 0x14 ] ecx
push [ eax + 0x4 ]
push [ eax ]
lea eax [ esp + 0x4c ]
push eax
push esi
call sub_1000f025
mov ecx [ eax ]
sub [ ebp + 0x30 ] ebx
mov [ ebp + 0x10 ] ecx
mov eax [ eax + 0x4 ]
add esp 0x30
add edi ebx
mov [ ebp + 0x14 ] eax
xor ebx ebx
push [ esp + 0x14 ]
lea eax [ esp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push eax
push esi
call sub_1000f025
mov ecx [ eax ]
mov [ ebp + 0x10 ] ecx
mov eax [ eax + 0x4 ]
mov [ esp + 0x2c ] ebx
mov [ ebp + 0x14 ] eax
add esp 0x18
cmp [ esp + 0x1c ] ebx
jbe r-xdata
mov eax [ edx + 0x10 ]
mov esi [ ebp + 0x8 ]
and eax 0x1c0
cmp eax 0x40
je r-xdata
cmp [ esp + 0x14 ] ebx
jne r-xdata
push 0x30
push [ ebp + 0x2c ]
lea ecx [ esp + 0x48 ]
call sub_10005b68
jmp r-xdata
push [ esp + 0x34 ]
lea eax [ esp + 0x28 ]
push [ ebp + 0x30 ]
push edi
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push eax
push esi
call sub_1000f83a
mov ecx [ eax ]
push [ ebp + 0x2c ]
mov [ ebp + 0x10 ] ecx
mov ecx [ eax + 0x4 ]
push 0x30
mov [ ebp + 0x14 ] ecx
push [ eax + 0x4 ]
push [ eax ]
lea eax [ esp + 0x60 ]
push eax
push esi
call sub_1000f025
mov ecx [ eax ]
push [ esp + 0x48 ]
mov edx [ esp + 0x64 ]
push [ ebp + 0x1c ]
mov [ ebp + 0x10 ] ecx
mov eax [ eax + 0x4 ]
push eax
push ecx
push [ esp + 0x74 ]
mov [ ebp + 0x14 ] eax
push esi
mov [ edx + 0x18 ] ebx
call sub_1000f025
add esp 0x4c
push ebx
push 0x1
lea ecx [ esp + 0x48 ]
call sub_100022b5
push ebx
push 0x1
lea ecx [ esp + 0x64 ]
call sub_100022b5
mov eax [ esp + 0x30 ]
mov ecx [ esp + 0x80 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ esp + 0x68 ]
xor ecx esp
call sub_10025c8d
mov esp ebp
pop ebp
retn
push [ esp + 0x34 ]
sub eax edi
inc eax
mov ebx eax
lea eax [ ebx - 0x1 ]
push eax
push edi
push [ ebp + 0x14 ]
lea eax [ esp + 0x34 ]
push [ ebp + 0x10 ]
push eax
push esi
call sub_1000f83a
mov ecx [ eax ]
push [ ebp + 0x2c ]
mov [ ebp + 0x10 ] ecx
mov ecx [ eax + 0x4 ]
push 0x30
mov [ ebp + 0x14 ] ecx
push [ eax + 0x4 ]
push [ eax ]
lea eax [ esp + 0x50 ]
push eax
push esi
call sub_1000f025
mov ecx [ eax ]
and [ ebp + 0x2c ] 0x0
mov [ ebp + 0x10 ] ecx
mov ecx [ eax + 0x4 ]
mov [ ebp + 0x14 ] ecx
mov ecx [ esp + 0x60 ]
add esp 0x34
test [ ecx + 0x10 ] 0x4
mov ecx r--data
jne r-xdata
push 0x1
push edi
push [ ebp + 0x14 ]
lea eax [ esp + 0x28 ]
push [ ebp + 0x10 ]
push eax
push esi
call sub_1000f806
mov ecx [ eax ]
add esp 0x18
mov [ ebp + 0x10 ] ecx
mov eax [ eax + 0x4 ]
inc edi
dec [ ebp + 0x30 ]
mov [ ebp + 0x14 ] eax
push 0x30
push [ ebp + 0x2c ]
sub esi edi
push esi
lea ecx [ esp + 0x4c ]
call sub_10005bb6
push 0x30
push [ ebp + 0x24 ]
lea ecx [ esp + 0x48 ]
call sub_10005b68
mov [ ebp + 0x24 ] ebx
mov esi [ esp + 0x14 ]
push 0x30
lea ecx [ esp + 0x44 ]
cmp esi ebx
jne r-xdata
push 0x1
push ecx
push [ eax + 0x4 ]
push [ eax ]
lea eax [ esp + 0x34 ]
push eax
push esi
call sub_1000f806
mov ecx [ eax ]
sub [ ebp + 0x30 ] ebx
mov [ ebp + 0x10 ] ecx
mov eax [ eax + 0x4 ]
add esp 0x18
add edi ebx
mov [ ebp + 0x14 ] eax
xor ebx ebx
mov ecx r--data
push [ ebp + 0x28 ]
sub esi edi
lea eax [ esi + 0x1 ]
push eax
call sub_10005bb6
push 0x30
push [ ebp + 0x24 ]
lea ecx [ esp + 0x48 ]
push esi
call sub_10005bb6
mov [ ebp + 0x28 ] ebx
push [ ebp + 0x24 ]
call sub_10005b68
jmp r-xdata
lea eax [ esp + 0x18 ]
push eax
push ebx
lea ecx [ esp + 0x48 ]
call sub_10005c50
push eax
call sub_100265d0
pop ecx
pop ecx
mov edi eax
jmp r-xdata
lea esi [ esp + 0x60 ]
cmp [ esp + 0x74 ] 0x10
mov esi [ esp + 0x60 ]
mov [ ebp + 0x24 ] ebx
jae r-xdata
mov al [ esi ]
cmp al 0x7f
jne r-xdata
test al al
jle r-xdata
push ebx
lea ecx [ esp + 0x44 ]
call sub_10005c50
mov edi eax
mov eax [ esp + 0x54 ]
mov [ ebp + 0x2c ] ebx
mov [ ebp + 0x30 ] eax
mov ecx edi
sub ecx [ esp + 0x1c ]
movsx eax al
cmp eax ecx
jae r-xdata
push ebx
sub edi eax
push 0x1
push edi
lea ecx [ esp + 0x4c ]
call sub_10005bb6
lea eax [ esi + 0x1 ]
cmp [ eax ] 0x0
jle r-xdata
mov esi eax
sub_1000ed61
mov eax [ esp + 0x8 ]
mov edx [ esp + 0x10 ]
mov [ eax ] 0x25
lea ecx [ eax + 0x1 ]
test dl 0x20
je r-xdata
test dl 0x8
je r-xdata
mov [ ecx ] 0x2b
inc ecx
push ebx
push esi
push edi
mov edi [ esp + 0x18 ]
mov bl [ edi ]
cmp bl 0x4c
je r-xdata
mov [ ecx ] 0x23
inc ecx
mov [ ecx ] 0x49
inc ecx
mov [ ecx ] 0x36
inc ecx
mov [ ecx ] 0x34
mov [ ecx ] bl
jmp r-xdata
cmp esi 0x800
je r-xdata
mov dl 0x6f
jmp r-xdata
mov esi edx
and esi 0xe00
inc ecx
cmp esi 0x400
jne r-xdata
shl dl 0x3
not dl
and dl 0x20
or dl 0x58
mov dl [ edi + 0x1 ]
jmp r-xdata
pop edi
pop esi
mov [ ecx ] dl
mov [ ecx + 0x1 ] 0x0
pop ebx
retn
sub_1000edd5
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_1004c301
mov eax [ fs : 0x0 ]
push eax
sub esp 0x40
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x38 ] eax
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x50 ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0xc ]
mov edi [ ebp + 0x18 ]
mov esi [ ebp + 0x20 ]
mov [ esp + 0x28 ] eax
lea eax [ esp + 0x20 ]
push eax
mov ecx edi
mov [ esp + 0x20 ] edi
call sub_1000781e
and [ esp + 0x58 ] 0x0
push eax
call sub_1000fce4
or [ esp + 0x5c ] 0xffffffff
pop ecx
lea ecx [ esp + 0x20 ]
mov [ esp + 0x24 ] eax
call sub_10007806
mov ecx [ esp + 0x24 ]
lea eax [ esp + 0x2c ]
push eax
call sub_10005dd3
xor ecx ecx
inc ecx
mov [ esp + 0x58 ] ecx
mov al [ esi ]
cmp al 0x2b
je r-xdata
mov [ esp + 0x10 ] ecx
cmp al 0x2d
je r-xdata
cmp [ eax ] 0x7f
je r-xdata
lea eax [ esp + 0x30 ]
cmp al 0x30
jne r-xdata
mov ebx [ edi + 0x18 ]
test ebx ebx
jle r-xdata
cmp [ esp + 0x44 ] 0x10
mov eax ecx
jae r-xdata
and [ esp + 0x10 ] 0x0
jmp r-xdata
mov al [ esi + 0x1 ]
cmp al 0x78
je r-xdata
xor ebx ebx
cmp ebx [ ebp + 0x24 ]
jbe r-xdata
cmp [ eax ] 0x0
jle r-xdata
lea eax [ esp + 0x30 ]
cmp [ esp + 0x44 ] 0x10
mov ecx [ esp + 0x30 ]
mov eax ecx
jae r-xdata
mov [ esp + 0x10 ] 0x2
jmp r-xdata
cmp al 0x58
jne r-xdata
mov ecx [ esp + 0x24 ]
mov eax [ ecx ]
call [ eax + 0x8 ]
mov [ esp + 0x20 ] al
push [ esp + 0x20 ]
lea eax [ esp + 0x18 ]
push [ ebp + 0x24 ]
push esi
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push eax
push edi
call sub_1000f83a
mov ecx [ eax ]
mov edx [ esp + 0x38 ]
push ebx
push [ ebp + 0x1c ]
mov [ ebp + 0x10 ] ecx
mov eax [ eax + 0x4 ]
and [ edx + 0x18 ] 0x0
push eax
push ecx
push [ esp + 0x54 ]
mov [ ebp + 0x14 ] eax
push edi
call sub_1000f025
add esp 0x34
push 0x0
push 0x1
lea ecx [ esp + 0x34 ]
call sub_100022b5
mov eax [ esp + 0x28 ]
mov ecx [ esp + 0x50 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ esp + 0x38 ]
xor ecx esp
call sub_10025c8d
mov esp ebp
pop ebp
retn
cmp eax 0x100
lea eax [ esp + 0x14 ]
je r-xdata
sub ebx [ ebp + 0x24 ]
jmp r-xdata
cmp [ esp + 0x44 ] 0x10
jb r-xdata
push [ esp + 0x10 ]
push esi
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push eax
push edi
call sub_1000f806
mov ecx [ eax ]
add esi [ esp + 0x28 ]
push ebx
push [ ebp + 0x1c ]
mov [ ebp + 0x10 ] ecx
mov ecx [ eax + 0x4 ]
mov [ ebp + 0x14 ] ecx
push [ eax + 0x4 ]
mov ecx [ esp + 0x34 ]
push [ eax ]
sub [ ebp + 0x24 ] ecx
lea eax [ esp + 0x3c ]
push eax
push edi
call sub_1000f025
add esp 0x30
push ebx
push [ ebp + 0x1c ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push eax
push edi
call sub_1000f025
add esp 0x18
jmp r-xdata
mov eax [ edi + 0x10 ]
mov edi [ ebp + 0x8 ]
and eax 0x1c0
cmp eax 0x40
je r-xdata
lea eax [ esp + 0x30 ]
mov [ esp + 0x14 ] eax
mov [ esp + 0x14 ] ecx
jmp r-xdata
mov ecx [ eax ]
mov [ ebp + 0x10 ] ecx
mov eax [ eax + 0x4 ]
xor ebx ebx
mov [ ebp + 0x14 ] eax
mov edi [ esp + 0x1c ]
test al al
jle r-xdata
mov edi [ ebp + 0x24 ]
mov ecx edi
sub ecx [ esp + 0x10 ]
movsx eax al
cmp eax ecx
jae r-xdata
sub edi eax
mov eax [ ebp + 0x24 ]
sub eax edi
inc eax
push eax
lea ebx [ esi + edi ]
push ebx
push eax
lea eax [ esi + edi + 0x1 ]
push eax
call sub_1002601b
mov eax [ esp + 0x24 ]
add esp 0x10
inc [ ebp + 0x24 ]
inc eax
mov [ ebx ] 0x0
cmp [ eax ] 0x0
jle r-xdata
mov eax [ esp + 0x14 ]
mov al [ eax ]
cmp al 0x7f
je r-xdata
mov [ esp + 0x14 ] eax
jmp r-xdata
sub_1000f025
push ebp
mov ebp esp
cmp [ ebp + 0x1c ] 0x0
jbe r-xdata
mov ecx [ ebp + 0x10 ]
mov eax [ ebp + 0xc ]
mov [ eax ] ecx
mov ecx [ ebp + 0x14 ]
mov [ eax + 0x4 ] ecx
pop ebp
retn
push [ ebp + 0x18 ]
lea ecx [ ebp + 0x10 ]
call sub_1000f8d2
dec [ ebp + 0x1c ]
jne r-xdata
sub_1000f04e
push 0x58
mov eax sub_1004c2cc
call sub_10029e9c
mov eax [ ebp + 0x14 ]
mov ebx [ ebp + 0xc ]
mov edi [ ebp + 0x10 ]
mov [ ebp - 0x5c ] eax
mov eax [ ebp + 0x1c ]
push eax
mov [ ebp - 0x60 ] ebx
call sub_1000fce4
mov esi eax
pop ecx
lea eax [ ebp - 0x48 ]
push eax
mov ecx esi
call sub_10005dd3
and [ ebp - 0x4 ] 0x0
cmp [ ebp - 0x34 ] 0x0
jne r-xdata
mov eax [ esi ]
mov ecx esi
call [ eax + 0x8 ]
mov [ ebp - 0x4a ] al
mov [ ebp - 0x4a ] 0x0
jmp r-xdata
mov eax [ ebp + 0x18 ]
push 0x8
pop ebx
and eax 0xe00
push 0xa
pop esi
cmp eax 0x400
jne r-xdata
mov ecx edi
call sub_1000f8f3
mov ecx edi
cmp al 0x2b
jne r-xdata
push [ ebp - 0x5c ]
mov ecx edi
mov [ ebp - 0x50 ] ebx
call sub_10010048
test al al
jne r-xdata
cmp eax 0x800
jne r-xdata
mov [ ebp - 0x54 ] ebx
jmp r-xdata
call sub_1000f8f3
cmp al 0x2d
jne r-xdata
mov [ ebx ] al
jmp r-xdata
neg eax
sbb eax eax
and eax esi
mov [ ebp - 0x54 ] eax
mov [ ebp - 0x54 ] 0x10
jmp r-xdata
push [ ebp - 0x5c ]
mov [ ebp - 0x58 ] 0x0
push edi
mov [ ebp - 0x49 ] 0x0
call sub_1000fed1
pop ecx
pop ecx
test al al
je r-xdata
mov [ ebx ] al
mov ecx edi
inc ebx
mov [ ebp - 0x50 ] ebx
call sub_1000f926
cmp [ ebp - 0x54 ] 0x0
je r-xdata
mov ecx edi
call sub_1000f8f3
cmp al 0x30
jne r-xdata
mov [ ebp - 0x64 ] esi
cmp [ ebp - 0x54 ] esi
je r-xdata
mov ecx edi
mov [ ebp - 0x58 ] 0x1
call sub_1000f926
push [ ebp - 0x5c ]
push edi
call sub_1000fed1
pop ecx
pop ecx
test al al
je r-xdata
cmp [ ebp - 0x30 ] 0x10
mov esi [ ebp - 0x44 ]
jae r-xdata
mov ecx edi
call sub_1000f8f3
mov ecx [ ebp - 0x50 ]
push [ ebp - 0x64 ]
mov [ ecx ] al
movsx eax al
push eax
push r--data
call sub_10026520
add esp 0xc
test eax eax
je r-xdata
xor eax eax
cmp [ ebp - 0x54 ] ebx
setne al
dec eax
and eax 0xfffffff2
add eax 0x16
mov [ ebp - 0x64 ] eax
jmp r-xdata
cmp [ ebp - 0x54 ] 0x0
jne r-xdata
mov ecx edi
call sub_1000f8f3
cmp al 0x78
je r-xdata
cmp [ ebp - 0x58 ] 0x0
je r-xdata
lea esi [ ebp - 0x44 ]
push ebx
lea ecx [ ebp - 0x2c ]
call sub_10005c50
cmp [ eax ] 0x0
je r-xdata
cmp [ ebp - 0x49 ] 0x0
jne r-xdata
push [ ebp - 0x58 ]
lea ecx [ ebp - 0x2c ]
push 0x1
call sub_10005b42
push [ ebp - 0x5c ]
mov esi [ ebp - 0x60 ]
push edi
mov [ ebp - 0x4 ] 0x1
xor ebx ebx
add esi 0x1f
call sub_1000fed1
pop ecx
pop ecx
test al al
je r-xdata
mov [ ebp - 0x54 ] ebx
cmp [ ebp - 0x54 ] 0x0
je r-xdata
mov ecx edi
call sub_1000f8f3
cmp al 0x58
jne r-xdata
mov eax [ ebp - 0x60 ]
mov [ ebp - 0x50 ] eax
test ebx ebx
jbe r-xdata
test ebx ebx
je r-xdata
cmp [ ebp - 0x4a ] 0x0
je r-xdata
cmp [ ebp - 0x50 ] esi
jae r-xdata
mov eax [ ebp - 0x50 ]
cmp [ eax ] 0x30
je r-xdata
mov ecx edi
mov [ ebp - 0x54 ] 0x10
mov [ ebp - 0x58 ] 0x0
call sub_1000f926
jmp r-xdata
cmp [ ebp - 0x54 ] 0x10
jne r-xdata
cmp [ ebp - 0x49 ] 0x0
jne r-xdata
cmp [ esi ] 0x7f
je r-xdata
push ebx
lea ecx [ ebp - 0x2c ]
call sub_10005c50
cmp [ eax ] 0x0
jle r-xdata
mov ecx edi
call sub_1000f8f3
cmp al [ ebp - 0x4a ]
jne r-xdata
push ebx
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x58 ] 0x1
call sub_10005c50
cmp [ eax ] 0x7f
je r-xdata
inc [ ebp - 0x50 ]
mov [ ebp - 0x49 ] 0x1
mov eax [ ebp - 0x50 ]
push 0x0
push 0x1
lea ecx [ ebp - 0x2c ]
mov [ eax ] 0x0
call sub_100022b5
push 0x0
push 0x1
lea ecx [ ebp - 0x48 ]
call sub_100022b5
mov eax [ ebp - 0x54 ]
call sub_10029f1f
retn
mov eax [ ebp - 0x50 ]
inc [ ebp - 0x50 ]
mov [ eax ] 0x30
jmp r-xdata
dec ebx
je r-xdata
mov [ ebp - 0x58 ] 0x0
inc ebx
jmp r-xdata
push 0x0
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_10005b68
inc ebx
mov ecx edi
call sub_1000f926
push [ ebp - 0x5c ]
push edi
call sub_1000fed1
pop ecx
pop ecx
test al al
jne r-xdata
push ebx
lea ecx [ ebp - 0x2c ]
call sub_10005c50
inc [ eax ]
jmp r-xdata
test ebx ebx
jne r-xdata
push ebx
lea ecx [ ebp - 0x2c ]
call sub_10005c50
mov cl [ esi ]
cmp cl [ eax ]
jne r-xdata
lea eax [ esi + 0x1 ]
cmp [ eax ] 0x0
jle r-xdata
push ebx
lea ecx [ ebp - 0x2c ]
call sub_10005c50
mov cl [ esi ]
cmp cl [ eax ]
jl r-xdata
mov esi eax
jmp r-xdata
sub_1000f315
push 0x5c
mov eax sub_1004c297
call sub_10029e9c
mov eax [ ebp + 0x18 ]
mov edi [ ebp + 0xc ]
mov ebx [ ebp + 0x14 ]
mov esi [ ebp + 0x10 ]
push eax
mov [ ebp - 0x68 ] edi
mov [ ebp - 0x60 ] ebx
call sub_1000fce4
pop ecx
mov ecx eax
lea eax [ ebp - 0x2c ]
push eax
mov [ ebp - 0x64 ] ecx
call sub_10005dd3
and [ ebp - 0x4 ] 0x0
push ebx
mov ecx esi
mov [ ebp - 0x50 ] edi
mov [ ebp - 0x4a ] 0x0
call sub_10010048
test al al
jne r-xdata
and [ ebp - 0x54 ] 0x0
and [ ebp - 0x5c ] 0x0
cmp [ ebp - 0x14 ] 0x10
mov eax [ ebp - 0x28 ]
mov [ ebp - 0x49 ] 0x0
jae r-xdata
mov ecx esi
call sub_1000f8f3
mov ecx esi
cmp al 0x2b
jne r-xdata
cmp [ eax ] 0x7f
je r-xdata
lea eax [ ebp - 0x28 ]
call sub_1000f8f3
cmp al 0x2d
jne r-xdata
mov [ edi ] al
jmp r-xdata
push ebx
push esi
call sub_1000fed1
pop ecx
pop ecx
test al al
je r-xdata
cmp [ ebp - 0x14 ] 0x10
mov eax [ ebp - 0x28 ]
jae r-xdata
mov [ edi ] al
mov ecx esi
inc edi
mov [ ebp - 0x50 ] edi
call sub_1000f926
push [ ebp - 0x60 ]
push esi
call sub_1000fed1
pop ecx
pop ecx
test al al
je r-xdata
mov ecx esi
call sub_1000f8f3
cmp al 0x30
jl r-xdata
cmp [ eax ] 0x0
jle r-xdata
lea eax [ ebp - 0x28 ]
cmp [ ebp - 0x54 ] 0x0
mov ebx [ ebp - 0x60 ]
je r-xdata
mov ecx [ ebp - 0x64 ]
mov eax [ ecx ]
call [ eax + 0x4 ]
mov ecx esi
mov bl al
call sub_1000f8f3
cmp al bl
jne r-xdata
cmp [ ebp - 0x49 ] 0x0
je r-xdata
mov ecx esi
call sub_1000f8f3
cmp al 0x39
jg r-xdata
mov ecx [ ebp - 0x64 ]
mov eax [ ecx ]
call [ eax + 0x8 ]
xor edi edi
push edi
push 0x1
lea ecx [ ebp - 0x48 ]
mov [ ebp - 0x55 ] al
call sub_10005b42
push [ ebp - 0x60 ]
mov [ ebp - 0x4 ] 0x1
push esi
xor ebx ebx
call sub_1000fed1
pop ecx
pop ecx
test al al
je r-xdata
push ebx
push esi
call sub_1000fed1
pop ecx
pop ecx
test al al
jne r-xdata
mov edi [ ebp - 0x50 ]
jmp r-xdata
call sub_100264f9
mov eax [ eax ]
mov ecx [ ebp - 0x50 ]
mov al [ eax ]
inc [ ebp - 0x50 ]
mov [ ecx ] al
mov ecx esi
call sub_1000f926
cmp [ ebp - 0x54 ] 0x0
jne r-xdata
cmp [ ebp - 0x54 ] 0x24
jl r-xdata
cmp [ ebp - 0x14 ] 0x10
mov edi [ ebp - 0x28 ]
jae r-xdata
mov ecx esi
call sub_1000f8f3
cmp al 0x30
jl r-xdata
mov ecx esi
call sub_1000f8f3
cmp al 0x30
jne r-xdata
cmp [ ebp - 0x5c ] 0x0
mov edi [ ebp - 0x50 ]
jge r-xdata
push ebx
push esi
call sub_1000fed1
pop ecx
pop ecx
test al al
jne r-xdata
mov eax [ ebp - 0x50 ]
inc [ ebp - 0x50 ]
mov [ eax ] 0x30
mov ecx esi
call sub_1000f8f3
cmp al 0x30
jne r-xdata
inc [ ebp - 0x5c ]
jmp r-xdata
cmp [ ebp - 0x4a ] 0x0
jne r-xdata
lea edi [ ebp - 0x28 ]
push ebx
lea ecx [ ebp - 0x48 ]
call sub_10005c50
cmp [ eax ] 0x0
je r-xdata
mov ecx esi
call sub_1000f8f3
cmp al 0x39
jg r-xdata
dec [ ebp - 0x5c ]
mov ecx esi
mov [ ebp - 0x49 ] 0x1
call sub_1000f926
mov [ edi ] 0x30
inc edi
inc [ ebp - 0x5c ]
jmp r-xdata
mov ecx esi
call sub_1000f8f3
cmp al 0x30
jl r-xdata
cmp [ ebp - 0x49 ] 0x0
je r-xdata
mov ecx esi
call sub_1000f8f3
mov ecx [ ebp - 0x50 ]
inc [ ebp - 0x50 ]
inc [ ebp - 0x54 ]
mov [ ecx ] al
cmp [ ebp - 0x54 ] 0x0
je r-xdata
mov ecx esi
mov [ ebp - 0x49 ] 0x1
call sub_1000f926
push [ ebp - 0x60 ]
push esi
call sub_1000fed1
pop ecx
pop ecx
test al al
jne r-xdata
push 0x0
push 0x1
lea ecx [ ebp - 0x48 ]
mov [ ebp - 0x4 ] 0x0
call sub_100022b5
jmp r-xdata
test ebx ebx
jbe r-xdata
cmp ebx edi
je r-xdata
cmp [ ebp - 0x55 ] 0x0
je r-xdata
cmp [ ebp - 0x54 ] 0x24
mov [ ebp - 0x49 ] 0x1
jl r-xdata
mov ecx esi
call sub_1000f8f3
cmp al 0x39
jg r-xdata
cmp [ ebp - 0x4a ] 0x0
jne r-xdata
push ebx
push esi
call sub_1000fed1
pop ecx
pop ecx
test al al
je r-xdata
cmp [ edi ] 0x7f
je r-xdata
push ebx
lea ecx [ ebp - 0x48 ]
call sub_10005c50
cmp [ eax ] 0x0
jle r-xdata
mov ecx esi
call sub_1000f8f3
cmp al [ ebp - 0x55 ]
jne r-xdata
mov ecx esi
call sub_1000f8f3
cmp al 0x30
jne r-xdata
inc [ ebp - 0x5c ]
jmp r-xdata
cmp [ ebp - 0x54 ] 0x24
jge r-xdata
mov edi [ ebp - 0x68 ]
cmp [ ebp - 0x49 ] 0x0
jne r-xdata
mov ecx esi
call sub_1000f8f3
cmp al 0x65
je r-xdata
dec ebx
je r-xdata
mov [ ebp - 0x4a ] 0x1
inc ebx
jmp r-xdata
push edi
push 0x1
lea ecx [ ebp - 0x48 ]
call sub_10005b68
inc ebx
mov ecx esi
call sub_1000f8f3
mov ecx [ ebp - 0x50 ]
inc [ ebp - 0x50 ]
inc [ ebp - 0x54 ]
mov [ ecx ] al
cmp [ ebp - 0x54 ] edi
je r-xdata
push ebx
lea ecx [ ebp - 0x48 ]
call sub_10005c50
cmp [ eax ] 0x7f
je r-xdata
mov ecx esi
mov [ ebp - 0x49 ] 0x1
call sub_1000f926
mov ecx esi
call sub_1000f8f3
mov [ edi ] al
inc edi
inc [ ebp - 0x54 ]
push 0x0
push 0x1
lea ecx [ ebp - 0x2c ]
mov [ edi ] 0x0
call sub_100022b5
mov eax [ ebp - 0x5c ]
call sub_10029f1f
retn
mov [ edi ] 0x65
mov ecx esi
inc edi
call sub_1000f926
and [ ebp - 0x54 ] 0x0
push ebx
mov ecx esi
mov [ ebp - 0x49 ] 0x0
call sub_10010048
test al al
jne r-xdata
mov ecx esi
call sub_1000f8f3
cmp al 0x45
jne r-xdata
test ebx ebx
jne r-xdata
push ebx
lea ecx [ ebp - 0x48 ]
call sub_10005c50
mov cl [ edi ]
cmp cl [ eax ]
jne r-xdata
mov ecx esi
call sub_1000f926
push [ ebp - 0x60 ]
push esi
call sub_1000fed1
pop ecx
pop ecx
test al al
jne r-xdata
push ebx
lea ecx [ ebp - 0x48 ]
call sub_10005c50
inc [ eax ]
jmp r-xdata
push ebx
push esi
call sub_1000fed1
pop ecx
pop ecx
test al al
je r-xdata
mov ecx esi
call sub_1000f8f3
mov ecx esi
cmp al 0x2b
jne r-xdata
lea eax [ edi + 0x1 ]
cmp [ eax ] 0x0
jle r-xdata
push ebx
lea ecx [ ebp - 0x48 ]
call sub_10005c50
mov cl [ edi ]
cmp cl [ eax ]
jl r-xdata
mov [ ebp - 0x4a ] 0x1
push ebx
push esi
call sub_1000fed1
pop ecx
pop ecx
test al al
jne r-xdata
mov ecx esi
call sub_1000f8f3
cmp al 0x30
jne r-xdata
call sub_1000f8f3
cmp al 0x2d
jne r-xdata
mov [ edi ] al
jmp r-xdata
mov edi eax
jmp r-xdata
mov ecx esi
call sub_1000f8f3
cmp al 0x30
jl r-xdata
cmp [ ebp - 0x49 ] 0x0
je r-xdata
mov ecx esi
mov [ ebp - 0x49 ] 0x1
call sub_1000f926
push ebx
push esi
call sub_1000fed1
pop ecx
pop ecx
test al al
jne r-xdata
mov [ edi ] al
mov ecx esi
inc edi
call sub_1000f926
mov ecx esi
call sub_1000f8f3
cmp al 0x39
jg r-xdata
mov [ edi ] 0x30
inc edi
jmp r-xdata
cmp [ ebp - 0x54 ] 0x8
jge r-xdata
mov ecx esi
mov [ ebp - 0x49 ] 0x1
call sub_1000f926
mov ecx esi
call sub_1000f8f3
mov [ edi ] al
inc edi
inc [ ebp - 0x54 ]
sub_1000f806
push ebp
mov ebp esp
cmp [ ebp + 0x1c ] 0x0
jbe r-xdata
mov ecx [ ebp + 0x10 ]
mov eax [ ebp + 0xc ]
mov [ eax ] ecx
mov ecx [ ebp + 0x14 ]
mov [ eax + 0x4 ] ecx
pop ebp
retn
push esi
mov esi [ ebp + 0x18 ]
movzx eax [ esi ]
push eax
lea ecx [ ebp + 0x10 ]
call sub_1000f8d2
dec [ ebp + 0x1c ]
inc esi
cmp [ ebp + 0x1c ] 0x0
ja r-xdata
pop esi
sub_1000f83a
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x14
push ebx
mov ebx [ ebp + 0x1c ]
push esi
push edi
mov edi [ ebp + 0x18 ]
mov esi ebx
sub eax edi
mov esi eax
jmp r-xdata
mov edx [ eax ]
mov ecx [ ebp + 0xc ]
mov eax [ eax + 0x4 ]
pop edi
pop esi
mov [ ecx + 0x4 ] eax
mov [ ecx ] edx
mov eax ecx
pop ebx
mov esp ebp
pop ebp
retn
cmp [ ebp + 0x20 ] 0x0
je r-xdata
push esi
push edi
push [ ebp + 0x14 ]
lea eax [ esp + 0x1c ]
push [ ebp + 0x10 ]
push eax
push [ ebp + 0x8 ]
call sub_1000f806
mov ecx [ eax ]
mov [ ebp + 0x10 ] ecx
mov ecx [ eax + 0x4 ]
add esp 0x18
add edi esi
sub ebx esi
mov [ ebp + 0x14 ] ecx
je r-xdata
inc edi
dec ebx
jmp r-xdata
push 0x1
push [ ebp + 0x20 ]
push [ eax + 0x4 ]
push [ eax ]
lea eax [ esp + 0x28 ]
push eax
push [ ebp + 0x8 ]
call sub_1000f025
mov ecx [ eax ]
mov [ ebp + 0x10 ] ecx
mov eax [ eax + 0x4 ]
add esp 0x18
mov [ ebp + 0x14 ] eax
push ebx
push 0x0
push edi
call sub_10026520
add esp 0xc
test eax eax
je r-xdata
sub_1000f8d2
push esi
mov esi ecx
mov ecx [ esi + 0x4 ]
test ecx ecx
je r-xdata
mov [ esi ] 0x1
push [ esp + 0x8 ]
call sub_10010315
cmp eax 0xffffffff
jne r-xdata
mov eax esi
pop esi
retn 0x4
sub_1000f926
push esi
mov esi ecx
mov ecx [ esi ]
test ecx ecx
je r-xdata
and [ esi ] 0x0
mov [ esi + 0x4 ] 0x1
pop esi
retn
call sub_1001087c
cmp eax 0xffffffff
je r-xdata
mov [ esi + 0x4 ] 0x0
pop esi
retn
sub_1000f948
push esi
mov esi ecx
mov ecx [ esi ]
test ecx ecx
je r-xdata
and [ esi ] 0x0
call sub_100108ad
cmp eax 0xffffffff
je r-xdata
mov [ esi + 0x5 ] al
jmp r-xdata
mov al [ esi + 0x5 ]
mov [ esi + 0x4 ] 0x1
pop esi
retn
sub_1000f96c
push 0x18
mov eax sub_1004e33e
call sub_10029e66
mov edi [ ebp + 0x8 ]
push 0x22
pop esi
lea eax [ ebp - 0x24 ]
xor ebx ebx
push eax
mov [ ebp - 0x1c ] ebx
call sub_10010b15
mov [ ebp - 0x4 ] ebx
cmp [ ebp - 0x20 ] bl
je r-xdata
mov eax [ edi ]
mov eax [ eax + 0x4 ]
add eax edi
mov [ eax + 0x18 ] ebx
mov eax [ edi ]
mov edx [ eax + 0x4 ]
add edx edi
cmp [ ebp - 0x1c ] ebx
je r-xdata
mov eax [ edi ]
mov eax [ eax + 0x4 ]
add eax edi
mov ecx [ eax + 0x18 ]
cmp ecx 0x1
jg r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea eax [ ebp - 0x24 ]
push eax
call sub_10010a9e
mov eax edi
call sub_10029f0b
retn
push ebx
push [ ebp - 0x1c ]
call sub_10007acb
dec ecx
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x18 ] ebx
jmp r-xdata
mov eax [ edi ]
mov eax [ eax + 0x4 ]
mov ecx [ eax + edi + 0x28 ]
push esi
call sub_10007888
movzx eax ax
mov esi 0xffff
mov ecx esi
cmp cx ax
jne r-xdata
cmp [ ebp - 0x1c ] ebx
jne r-xdata
mov [ ebp - 0x4 ] 0x1
mov eax [ eax + 0x10 ]
and eax 0x1c0
cmp eax 0x40
je r-xdata
cmp [ ebp - 0x1c ] ebx
jne r-xdata
mov [ ebp - 0x1c ] 0x4
mov [ ebp - 0x4 ] ebx
cmp [ ebp - 0x18 ] ebx
jle r-xdata
cmp [ ebp - 0x18 ] ebx
jle r-xdata
mov eax [ edi ]
mov eax [ eax + 0x4 ]
add eax edi
movzx edx [ eax + 0x30 ]
mov eax [ eax + 0x28 ]
push edx
mov ecx eax
call sub_10007888
movzx eax ax
mov ecx 0xffff
cmp cx ax
jne r-xdata
mov eax [ edi ]
mov eax [ eax + 0x4 ]
add eax edi
movzx edx [ eax + 0x30 ]
mov eax [ eax + 0x28 ]
push edx
mov ecx eax
call sub_10007888
movzx eax ax
mov ecx esi
cmp cx ax
jne r-xdata
dec [ ebp - 0x18 ]
jmp r-xdata
mov [ ebp - 0x1c ] 0x4
dec [ ebp - 0x18 ]
jmp r-xdata
mov [ ebp - 0x1c ] 0x4
sub_1000fa59
mov ecx [ ebp + 0x8 ]
mov eax [ ecx ]
mov eax [ eax + 0x4 ]
add eax ecx
mov ecx [ eax + 0x8 ]
xor ebx ebx
or ecx 0x4
cmp [ eax + 0x28 ] ebx
jne r-xdata
push 0x1
push eax
call sub_100079b1
mov [ ebp - 0x4 ] ebx
mov eax r-xdata
retn
or ecx 0x4
sub_1000fac2
push 0x20
mov eax sub_1004d493
call sub_10029e33
push [ ebp + 0xc ]
and [ ebp - 0x10 ] 0x0
lea ecx [ ebp - 0x2c ]
call sub_10001fad
and [ ebp - 0x4 ] 0x0
push 0xffffffff
push 0x0
push [ ebp + 0x10 ]
mov ecx eax
call sub_10006b05
mov ecx [ ebp + 0x8 ]
push eax
call sub_10001fad
push 0x0
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_1000247e
mov eax [ ebp + 0x8 ]
call sub_10029f0b
retn
sub_1000fb0d
push 0x14
mov eax sub_1004b452
call sub_10029e33
push 0x0
lea ecx [ ebp - 0x14 ]
call sub_10022437
and [ ebp - 0x4 ] 0x0
mov esi [ rw-data ]
mov ecx rw-data
mov [ ebp - 0x10 ] esi
call sub_10007004
mov ecx [ ebp + 0x8 ]
push eax
call sub_10007039
mov edi eax
test edi edi
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
call sub_1002245f
mov eax edi
call sub_10029f0b
retn
test esi esi
je r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
push eax
call sub_1000ff0a
pop ecx
pop ecx
cmp eax 0xffffffff
jne r-xdata
mov edi esi
jmp r-xdata
mov edi [ ebp - 0x10 ]
mov ecx edi
mov [ rw-data ] edi
call sub_1000778d
push edi
call sub_10022634
pop ecx
push r--data
lea ecx [ ebp - 0x20 ]
call sub_10025f3c
push r--data
lea eax [ ebp - 0x20 ]
push eax
call sub_10029a01
sub_1000fbaa
push 0x14
mov eax sub_1004b452
call sub_10029e33
push 0x0
lea ecx [ ebp - 0x14 ]
call sub_10022437
and [ ebp - 0x4 ] 0x0
mov esi [ rw-data ]
mov ecx rw-data
mov [ ebp - 0x10 ] esi
call sub_10007004
mov ecx [ ebp + 0x8 ]
push eax
call sub_10007039
mov edi eax
test edi edi
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
call sub_1002245f
mov eax edi
call sub_10029f0b
retn
test esi esi
je r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
push eax
call sub_1000ffa9
pop ecx
pop ecx
cmp eax 0xffffffff
jne r-xdata
mov edi esi
jmp r-xdata
mov edi [ ebp - 0x10 ]
mov ecx edi
mov [ rw-data ] edi
call sub_1000778d
push edi
call sub_10022634
pop ecx
push r--data
lea ecx [ ebp - 0x20 ]
call sub_10025f3c
push r--data
lea eax [ ebp - 0x20 ]
push eax
call sub_10029a01
sub_1000fc47
push 0x14
mov eax sub_1004b452
call sub_10029e33
push 0x0
lea ecx [ ebp - 0x14 ]
call sub_10022437
and [ ebp - 0x4 ] 0x0
mov esi [ rw-data ]
mov ecx rw-data
mov [ ebp - 0x10 ] esi
call sub_10007004
mov ecx [ ebp + 0x8 ]
push eax
call sub_10007039
mov edi eax
test edi edi
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
call sub_1002245f
mov eax edi
call sub_10029f0b
retn
test esi esi
je r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
push eax
call sub_10010082
pop ecx
pop ecx
cmp eax 0xffffffff
jne r-xdata
mov edi esi
jmp r-xdata
mov edi [ ebp - 0x10 ]
mov ecx edi
mov [ rw-data ] edi
call sub_1000778d
push edi
call sub_10022634
pop ecx
push r--data
lea ecx [ ebp - 0x20 ]
call sub_10025f3c
push r--data
lea eax [ ebp - 0x20 ]
push eax
call sub_10029a01
sub_1000fce4
push 0x14
mov eax sub_1004b452
call sub_10029e33
push 0x0
lea ecx [ ebp - 0x14 ]
call sub_10022437
and [ ebp - 0x4 ] 0x0
mov esi [ rw-data ]
mov ecx rw-data
mov [ ebp - 0x10 ] esi
call sub_10007004
mov ecx [ ebp + 0x8 ]
push eax
call sub_10007039
mov edi eax
test edi edi
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
call sub_1002245f
mov eax edi
call sub_10029f0b
retn
test esi esi
je r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
push eax
call sub_10010120
pop ecx
pop ecx
cmp eax 0xffffffff
jne r-xdata
mov edi esi
jmp r-xdata
mov edi [ ebp - 0x10 ]
mov ecx edi
mov [ rw-data ] edi
call sub_1000778d
push edi
call sub_10022634
pop ecx
push r--data
lea ecx [ ebp - 0x20 ]
call sub_10025f3c
push r--data
lea eax [ ebp - 0x20 ]
push eax
call sub_10029a01
sub_1000fd81
push 0x38
mov eax sub_1004c262
call sub_10029e9c
mov eax [ ebp + 0x8 ]
mov edi [ ebp + 0x14 ]
mov [ ebp - 0x3c ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0x44 ] eax
mov al [ edi ]
test al al
je r-xdata
push 0x0
push [ ebp + 0x10 ]
lea ecx [ ebp - 0x2c ]
call sub_10005b42
and [ ebp - 0x4 ] 0x0
mov [ ebp - 0x40 ] 0xfffffffe
mov [ ebp - 0x38 ] 0x1
mov cl al
mov edx edi
push 0x0
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_100022b5
mov eax [ ebp - 0x40 ]
call sub_10029f1f
retn
mov al [ esi + edi ]
test al al
je r-xdata
inc edx
mov cl [ edx ]
test cl cl
jne r-xdata
inc [ ebp + 0x10 ]
push [ ebp - 0x34 ]
lea ecx [ ebp - 0x2c ]
call sub_10005c50
cmp [ eax ] 0x0
je r-xdata
mov cl [ edi ]
cmp cl al
jne r-xdata
add esi [ ebp - 0x38 ]
mov al [ esi + edi ]
cmp al [ edi ]
je r-xdata
push [ ebp - 0x34 ]
lea ecx [ ebp - 0x2c ]
call sub_10005c50
movsx eax [ eax ]
add esi eax
jmp r-xdata
inc esi
mov al [ esi + edi ]
test al al
jne r-xdata
push 0x7f
pop ebx
cmp [ ebp - 0x38 ] ebx
jae r-xdata
test al al
je r-xdata
inc [ ebp - 0x34 ]
mov eax [ ebp - 0x34 ]
cmp eax [ ebp + 0x10 ]
jb r-xdata
cmp al cl
je r-xdata
push [ ebp - 0x34 ]
lea ecx [ ebp - 0x2c ]
call sub_10005c50
mov [ eax ] bl
mov eax [ ebp - 0x34 ]
mov [ ebp - 0x40 ] eax
mov ebx [ ebp - 0x38 ]
push [ ebp - 0x44 ]
mov ecx [ ebp - 0x3c ]
call sub_10010048
test al al
jne r-xdata
cmp [ ebp - 0x2d ] 0x0
je r-xdata
push 0x7f
pop ebx
cmp [ ebp - 0x38 ] ebx
jae r-xdata
mov ecx [ ebp - 0x3c ]
call sub_1000f8f3
cmp [ esi + edi ] al
jne r-xdata
push [ ebp - 0x44 ]
mov ecx [ ebp - 0x3c ]
call sub_10010048
test al al
jne r-xdata
push [ ebp - 0x34 ]
lea ecx [ ebp - 0x2c ]
call sub_10005c50
mov [ eax ] bl
jmp r-xdata
mov ebx [ ebp - 0x38 ]
mov [ ebp - 0x2d ] 0x1
jmp r-xdata
mov ecx [ ebp - 0x3c ]
inc [ ebp - 0x38 ]
call sub_1000f926
or [ ebp - 0x40 ] 0xffffffff
jmp r-xdata
xor esi esi
mov [ ebp - 0x2d ] 0x0
mov [ ebp - 0x34 ] esi
cmp [ ebp + 0x10 ] esi
jbe r-xdata
sub_1000fee8
push esi
push [ esp + 0x8 ]
mov esi ecx
call sub_10026078
pop ecx
push eax
push [ esp + 0xc ]
mov ecx esi
push [ esi + 0x14 ]
push 0x0
call sub_10006a21
pop esi
retn 0x4
sub_1000ff0a
push 0x94
mov eax sub_1004b3f8
call sub_10029e33
xor edi edi
mov [ ebp - 0x10 ] edi
mov esi [ ebp + 0x8 ]
cmp esi edi
je r-xdata
push 0x4
pop eax
call sub_10029f0b
retn
cmp [ esi ] edi
jne r-xdata
push 0x10
call sub_10025dd6
pop ecx
mov [ ebp + 0x8 ] eax
mov [ ebp - 0x4 ] edi
cmp eax edi
je r-xdata
xor eax eax
mov ecx [ ebp + 0xc ]
lea eax [ ebp - 0x2c ]
push eax
call sub_100073c0
mov [ ebp - 0x4 ] 0x1
push eax
lea ecx [ ebp - 0xa0 ]
mov [ ebp - 0x10 ] 0x1
call sub_1000736b
mov ecx [ ebp + 0x8 ]
push edi
push eax
mov [ ebp - 0x10 ] 0x3
call sub_100101c3
jmp r-xdata
test [ ebp - 0x10 ] 0x1
je r-xdata
and [ ebp - 0x10 ] 0xfffffffd
lea ecx [ ebp - 0xa0 ]
call sub_100073dd
push 0x2
pop ecx
mov [ ebp - 0x4 ] ecx
mov [ esi ] eax
test [ ebp - 0x10 ] cl
je r-xdata
push edi
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_100022b5
sub_1000ffa9
push 0x94
mov eax sub_1004b3f8
call sub_10029e33
xor edi edi
mov [ ebp - 0x10 ] edi
mov esi [ ebp + 0x8 ]
cmp esi edi
je r-xdata
push 0x4
pop eax
call sub_10029f0b
retn
cmp [ esi ] edi
jne r-xdata
push 0x10
call sub_10025dd6
pop ecx
mov [ ebp + 0x8 ] eax
mov [ ebp - 0x4 ] edi
cmp eax edi
je r-xdata
xor eax eax
mov ecx [ ebp + 0xc ]
lea eax [ ebp - 0x2c ]
push eax
call sub_100073c0
mov [ ebp - 0x4 ] 0x1
push eax
lea ecx [ ebp - 0xa0 ]
mov [ ebp - 0x10 ] 0x1
call sub_1000736b
mov ecx [ ebp + 0x8 ]
push edi
push eax
mov [ ebp - 0x10 ] 0x3
call sub_100101e4
jmp r-xdata
test [ ebp - 0x10 ] 0x1
je r-xdata
and [ ebp - 0x10 ] 0xfffffffd
lea ecx [ ebp - 0xa0 ]
call sub_100073dd
push 0x2
pop ecx
mov [ ebp - 0x4 ] ecx
mov [ esi ] eax
test [ ebp - 0x10 ] cl
je r-xdata
push edi
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_100022b5
sub_10010048
push ebx
push esi
push edi
mov edi ecx
xor ebx ebx
cmp [ edi + 0x4 ] bl
jne r-xdata
mov esi [ esp + 0x10 ]
cmp [ esi + 0x4 ] bl
jne r-xdata
call sub_1000f948
cmp [ edi ] ebx
jne r-xdata
mov ecx esi
call sub_1000f948
cmp [ esi ] ebx
je r-xdata
cmp [ esi ] ebx
je r-xdata
xor eax eax
xor eax eax
inc eax
jmp r-xdata
pop edi
pop esi
pop ebx
retn 0x4
sub_10010082
push 0x94
mov eax sub_1004b3f8
call sub_10029e33
xor ebx ebx
mov [ ebp - 0x10 ] ebx
mov edi [ ebp + 0x8 ]
cmp edi ebx
je r-xdata
push 0x2
pop eax
call sub_10029f0b
retn
cmp [ edi ] ebx
jne r-xdata
push 0x8
call sub_10025dd6
mov esi eax
pop ecx
mov [ ebp + 0x8 ] esi
mov [ ebp - 0x4 ] ebx
inc ebx
test esi esi
je r-xdata
xor esi esi
mov ecx [ ebp + 0xc ]
lea eax [ ebp - 0x2c ]
push eax
call sub_100073c0
mov [ ebp - 0x4 ] bl
push eax
lea ecx [ ebp - 0xa0 ]
mov [ ebp - 0x10 ] ebx
call sub_1000736b
and [ esi + 0x4 ] 0x0
mov [ ebp - 0x10 ] 0x3
mov [ esi ] r--data
jmp r-xdata
test [ ebp - 0x10 ] bl
je r-xdata
and [ ebp - 0x10 ] 0xfffffffd
lea ecx [ ebp - 0xa0 ]
call sub_100073dd
mov [ ebp - 0x4 ] 0x2
test [ ebp - 0x10 ] 0x2
mov [ edi ] esi
je r-xdata
push 0x0
push ebx
lea ecx [ ebp - 0x2c ]
call sub_100022b5
sub_10010120
push 0x98
mov eax sub_1004c23c
call sub_10029e33
mov eax [ ebp + 0x8 ]
xor edi edi
mov [ ebp - 0x10 ] edi
cmp eax edi
je r-xdata
push 0x4
pop eax
call sub_10029f0b
retn
cmp [ eax ] edi
jne r-xdata
push 0x18
call sub_10025dd6
pop ecx
mov [ ebp - 0x14 ] eax
xor ebx ebx
inc ebx
push 0x3
mov [ ebp - 0x4 ] edi
pop esi
cmp eax edi
je r-xdata
xor eax eax
mov ecx [ ebp + 0xc ]
lea eax [ ebp - 0x30 ]
push eax
call sub_100073c0
mov [ ebp - 0x4 ] bl
push eax
lea ecx [ ebp - 0xa4 ]
mov [ ebp - 0x10 ] ebx
call sub_1000736b
push ebx
mov [ ebp - 0x4 ] 0x2
mov ecx [ ebp - 0x14 ]
push edi
push eax
mov [ ebp - 0x10 ] esi
call sub_10010205
jmp r-xdata
test [ ebp - 0x10 ] bl
je r-xdata
and [ ebp - 0x10 ] 0xfffffffd
lea ecx [ ebp - 0xa4 ]
call sub_100073dd
mov ecx [ ebp + 0x8 ]
mov [ ebp - 0x4 ] esi
test [ ebp - 0x10 ] 0x2
mov [ ecx ] eax
je r-xdata
push edi
push ebx
lea ecx [ ebp - 0x30 ]
call sub_100022b5
sub_10010205
push 0x4
mov eax sub_1004b33e
call sub_10029e33
mov esi ecx
mov [ ebp - 0x10 ] esi
mov eax [ ebp + 0xc ]
mov [ esi + 0x4 ] eax
push [ ebp + 0x10 ]
and [ ebp - 0x4 ] 0x0
push [ ebp + 0x8 ]
mov [ esi ] r--data
call sub_1001023b
mov eax esi
call sub_10029f0b
retn 0xc
sub_1001023b
push 0xc
mov eax sub_1004bf59
call sub_10029e66
mov esi ecx
mov [ ebp - 0x14 ] esi
call sub_100264f9
xor ebx ebx
mov edi eax
mov [ esi + 0x8 ] ebx
mov [ esi + 0x10 ] ebx
mov [ esi + 0x14 ] ebx
mov [ ebp - 0x4 ] ebx
call sub_1002290b
lea eax [ ebp - 0x18 ]
push eax
push ebx
push [ edi + 0x8 ]
call sub_100066e3
add esp 0xc
mov [ esi + 0x8 ] eax
call sub_1002290b
lea eax [ ebp - 0x18 ]
push eax
push ebx
push r--data
call sub_100066e3
add esp 0xc
mov [ esi + 0x10 ] eax
call sub_1002290b
lea eax [ ebp - 0x18 ]
push eax
push ebx
push r--data
call sub_100066e3
or [ ebp - 0x4 ] 0xffffffff
add esp 0xc
mov [ esi + 0x14 ] eax
call sub_1002290b
mov eax [ edi ]
mov al [ eax ]
mov [ esi + 0xc ] al
call sub_1002290b
mov eax [ edi + 0x4 ]
mov al [ eax ]
mov [ esi + 0xd ] al
cmp [ ebp + 0xc ] bl
je r-xdata
call sub_10029f0b
retn 0x8
call sub_1002290b
lea eax [ ebp - 0x18 ]
push eax
push ebx
push r--data
call sub_100066e3
add esp 0xc
mov [ esi + 0x8 ] eax
call sub_1002290b
mov [ esi + 0xc ] 0x2e
call sub_1002290b
mov [ esi + 0xd ] 0x2c
sub_10010315
mov eax [ ecx + 0x24 ]
cmp [ eax ] 0x0
je r-xdata
xor eax eax
mov eax [ ecx + 0x34 ]
mov eax [ eax ]
jmp r-xdata
movzx edx [ esp + 0x4 ]
mov eax [ ecx ]
push edx
call [ eax + 0x4 ]
mov eax [ ecx + 0x34 ]
dec [ eax ]
mov eax [ ecx + 0x24 ]
mov ecx [ eax ]
lea edx [ ecx + 0x1 ]
mov [ eax ] edx
mov al [ esp + 0x4 ]
mov [ ecx ] al
movzx eax al
jmp r-xdata
test eax eax
jle r-xdata
retn 0x4
sub_10010359
push esi
lea esi [ ecx - 0x4 ]
lea eax [ esi + 0x4 ]
mov ecx [ eax - 0x4 ]
mov ecx [ ecx + 0x4 ]
mov [ ecx + eax - 0x4 ] r--data
push eax
mov [ eax ] r--data
call sub_10022359
test [ esp + 0xc ] 0x1
pop ecx
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_10025c9c
pop ecx
sub_100103e0
push ebp
mov ebp esp
push ecx
and [ ebp - 0x4 ] 0x0
cmp [ ebp + 0x10 ] 0x0
push edi
mov edi ecx
jle r-xdata
mov eax [ ebp - 0x4 ]
pop edi
leave
retn 0xc
push ebx
mov ebx [ ebp + 0x8 ]
push esi
xor esi esi
mov ecx [ edi + 0x30 ]
mov esi [ ecx ]
jmp r-xdata
mov eax [ edi ]
mov ecx edi
call [ eax + 0x14 ]
cmp eax 0xffffffff
je r-xdata
cmp [ ebp + 0x10 ] esi
jge r-xdata
test esi esi
jle r-xdata
pop esi
pop ebx
mov [ ebx ] al
inc ebx
inc [ ebp - 0x4 ]
dec [ ebp + 0x10 ]
push esi
push [ eax ]
push [ ebp + 0xc ]
push ebx
call sub_1000235e
mov eax [ edi + 0x30 ]
sub [ eax ] esi
mov eax [ edi + 0x20 ]
add [ ebp - 0x4 ] esi
sub [ ebp + 0x10 ] esi
add esp 0x10
add ebx esi
add [ eax ] esi
jmp r-xdata
mov esi [ ebp + 0x10 ]
mov eax [ edi + 0x20 ]
cmp [ eax ] 0x0
je r-xdata
cmp [ ebp + 0x10 ] 0x0
jg r-xdata
sub_1001045b
push ebp
mov ebp esp
push ecx
and [ ebp - 0x4 ] 0x0
cmp [ ebp + 0xc ] 0x0
push edi
mov edi ecx
jle r-xdata
mov eax [ ebp - 0x4 ]
pop edi
leave
retn 0x8
push ebx
mov ebx [ ebp + 0x8 ]
push esi
xor ecx ecx
mov ecx [ edi + 0x34 ]
mov ecx [ ecx ]
jmp r-xdata
movzx eax [ ebx ]
mov edx [ edi ]
push eax
mov ecx edi
call [ edx + 0x4 ]
cmp eax 0xffffffff
je r-xdata
cmp [ ebp + 0xc ] ecx
mov esi ecx
jge r-xdata
test ecx ecx
jle r-xdata
pop esi
pop ebx
inc ebx
inc [ ebp - 0x4 ]
dec [ ebp + 0xc ]
push esi
push ebx
push ecx
push [ eax ]
call sub_1000235e
mov eax [ edi + 0x34 ]
sub [ eax ] esi
mov eax [ edi + 0x24 ]
add [ ebp - 0x4 ] esi
sub [ ebp + 0xc ] esi
add esp 0x10
add ebx esi
add [ eax ] esi
jmp r-xdata
mov esi [ ebp + 0xc ]
mov eax [ edi + 0x24 ]
cmp [ eax ] 0x0
je r-xdata
cmp [ ebp + 0xc ] 0x0
jg r-xdata
sub_100104f5
push esi
mov esi ecx
push edi
mov edi [ esi + 0x38 ]
mov [ esi ] r--data
test edi edi
je r-xdata
pop edi
lea ecx [ esi + 0x4 ]
pop esi
jmp sub_100223b4
mov ecx edi
call sub_10007806
push edi
call sub_10025c9c
pop ecx
sub_1001051e
push esi
lea esi [ ecx - 0x8 ]
lea eax [ esi + 0x8 ]
mov ecx [ eax - 0x8 ]
mov ecx [ ecx + 0x4 ]
mov [ ecx + eax - 0x8 ] r--data
push eax
mov [ eax ] r--data
call sub_10022359
test [ esp + 0xc ] 0x1
pop ecx
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_10025c9c
pop ecx
sub_100105b2
push esi
mov esi [ esp + 0x8 ]
cmp esi [ esp + 0xc ]
je r-xdata
mov eax esi
pop esi
retn 0x8
push edi
lea edi [ ecx + 0x8 ]
movzx eax [ esi ]
push edi
push eax
call sub_10022921
mov [ esi ] al
inc esi
pop ecx
pop ecx
cmp esi [ esp + 0x10 ]
jne r-xdata
pop edi
sub_100105f1
push esi
mov esi [ esp + 0x8 ]
cmp esi [ esp + 0xc ]
je r-xdata
mov eax esi
pop esi
retn 0x8
push edi
lea edi [ ecx + 0x8 ]
movzx eax [ esi ]
push edi
push eax
call sub_100233b5
mov [ esi ] al
inc esi
pop ecx
pop ecx
cmp esi [ esp + 0x10 ]
jne r-xdata
pop edi
sub_10010653
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0xc ]
sub esi [ ebp + 0x8 ]
cmp [ ebp + 0x14 ] esi
jae r-xdata
push esi
push [ ebp + 0x8 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
call sub_10025ca7
mov eax [ ebp + 0xc ]
add esp 0x10
pop esi
pop ebp
retn 0x10
call sub_100261ef
sub_10010681
push ebp
mov ebp esp
mov edx [ ebp + 0xc ]
sub edx [ ebp + 0x8 ]
mov eax [ ecx ]
push edx
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ eax + 0x28 ]
pop ebp
retn 0x10
sub_100106a7
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0xc ]
sub esi [ ebp + 0x8 ]
cmp [ ebp + 0x18 ] esi
jae r-xdata
push esi
push [ ebp + 0x8 ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
call sub_10025ca7
mov eax [ ebp + 0xc ]
add esp 0x10
pop esi
pop ebp
retn 0x14
call sub_100261ef
sub_100106d5
push ebp
mov ebp esp
sub esp 0x10
push esi
push edi
lea eax [ ebp - 0x10 ]
mov edi ecx
mov ecx [ ebp + 0x8 ]
push eax
call sub_100072e4
add edi 0x8
mov esi eax
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
pop esi
leave
retn 0x4
sub_10010719
push 0x94
mov eax sub_1004b3f8
call sub_10029e33
xor edi edi
mov [ ebp - 0x10 ] edi
mov esi [ ebp + 0x8 ]
cmp esi edi
je r-xdata
push 0x2
pop eax
call sub_10029f0b
retn
cmp [ esi ] edi
jne r-xdata
push 0x18
call sub_10025dd6
pop ecx
mov [ ebp + 0x8 ] eax
mov [ ebp - 0x4 ] edi
cmp eax edi
je r-xdata
xor eax eax
mov ecx [ ebp + 0xc ]
lea eax [ ebp - 0x2c ]
push eax
call sub_100073c0
mov [ ebp - 0x4 ] 0x1
push eax
lea ecx [ ebp - 0xa0 ]
mov [ ebp - 0x10 ] 0x1
call sub_1000736b
mov ecx [ ebp + 0x8 ]
push edi
push eax
mov [ ebp - 0x10 ] 0x3
call sub_100106fa
jmp r-xdata
test [ ebp - 0x10 ] 0x1
je r-xdata
and [ ebp - 0x10 ] 0xfffffffd
lea ecx [ ebp - 0xa0 ]
call sub_100073dd
mov [ ebp - 0x4 ] 0x2
test [ ebp - 0x10 ] 0x2
mov [ esi ] eax
je r-xdata
push edi
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_100022b5
sub_100107ba
push 0x14
mov eax sub_1004b452
call sub_10029e33
push 0x0
lea ecx [ ebp - 0x14 ]
call sub_10022437
and [ ebp - 0x4 ] 0x0
mov esi [ rw-data ]
mov ecx rw-data
mov [ ebp - 0x10 ] esi
call sub_10007004
mov ecx [ ebp + 0x8 ]
push eax
call sub_10007039
mov edi eax
test edi edi
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
call sub_1002245f
mov eax edi
call sub_10029f0b
retn
test esi esi
je r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
push eax
call sub_10010719
pop ecx
pop ecx
cmp eax 0xffffffff
jne r-xdata
mov edi esi
jmp r-xdata
mov edi [ ebp - 0x10 ]
mov ecx edi
mov [ rw-data ] edi
call sub_1000778d
push edi
call sub_10022634
pop ecx
push r--data
lea ecx [ ebp - 0x20 ]
call sub_10025f3c
push r--data
lea eax [ ebp - 0x20 ]
push eax
call sub_10029a01
sub_10010857
push esi
mov esi ecx
mov eax [ esi ]
call [ eax + 0x10 ]
cmp eax 0xffffffff
jne r-xdata
mov eax [ esi + 0x30 ]
dec [ eax ]
mov eax [ esi + 0x20 ]
mov ecx [ eax ]
lea edx [ ecx + 0x1 ]
mov [ eax ] edx
movzx eax [ ecx ]
pop esi
retn
or eax eax
pop esi
retn
sub_1001087c
mov eax [ ecx + 0x20 ]
cmp [ eax ] 0x0
je r-xdata
xor eax eax
mov eax [ ecx + 0x30 ]
mov eax [ eax ]
jmp r-xdata
mov eax [ ecx ]
jmp [ eax + 0x14 ]
mov eax [ ecx + 0x30 ]
dec [ eax ]
mov ecx [ ecx + 0x20 ]
mov eax [ ecx ]
lea edx [ eax + 0x1 ]
mov [ ecx ] edx
movzx eax [ eax ]
retn
test eax eax
jle r-xdata
sub_100108ad
mov eax [ ecx + 0x20 ]
cmp [ eax ] 0x0
je r-xdata
xor edx edx
mov edx [ ecx + 0x30 ]
mov edx [ edx ]
jmp r-xdata
mov eax [ ecx ]
jmp [ eax + 0x10 ]
mov eax [ eax ]
movzx eax [ eax ]
retn
test edx edx
jle r-xdata
sub_100108cd
push 0x4
mov eax sub_1004dc0a
call sub_10029e66
mov edi [ ebp + 0x8 ]
mov eax [ edi ]
mov eax [ eax + 0x4 ]
add eax edi
mov ecx [ eax + 0x8 ]
test ecx ecx
jne r-xdata
mov ecx [ eax + 0x8 ]
or ecx 0x2
cmp [ eax + 0x28 ] 0x0
jne r-xdata
mov eax [ eax + 0x2c ]
test eax eax
je r-xdata
push 0x0
push eax
call sub_100079b1
xor al al
or ecx 0x4
cmp [ ebp + 0xc ] 0x0
jne r-xdata
mov esi eax
call sub_10010ae4
mov eax [ edi ]
mov eax [ eax + 0x4 ]
add eax edi
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ edi ]
mov ecx [ eax + 0x4 ]
mov ecx [ ecx + edi + 0x10 ]
test cl 0x1
je r-xdata
mov al 0x1
jmp r-xdata
lea ecx [ ebp + 0xc ]
push ecx
mov ecx [ eax + 0x4 ]
add ecx edi
call sub_1000781e
and [ ebp - 0x4 ] 0x0
push eax
call sub_100107ba
pop ecx
lea ecx [ ebp + 0xc ]
mov ebx eax
call sub_10007806
mov [ ebp - 0x4 ] 0x1
mov eax [ edi ]
mov eax [ eax + 0x4 ]
mov ecx [ eax + edi + 0x28 ]
call sub_10029f0b
retn 0x8
mov ecx [ ebx + 0x10 ]
movzx eax al
test [ ecx + eax * 2 ] 0x48
jne r-xdata
mov eax [ edi ]
mov eax [ eax + 0x4 ]
add eax edi
mov ecx [ eax + 0x8 ]
or ecx 0x1
cmp [ eax + 0x28 ] 0x0
jne r-xdata
mov eax [ edi ]
mov eax [ eax + 0x4 ]
mov esi [ eax + edi + 0x28 ]
mov ecx [ esi + 0x20 ]
xor eax eax
cmp [ ecx ] eax
je r-xdata
or [ ebp - 0x4 ] 0xffffffff
jmp r-xdata
push 0x0
push eax
call sub_100079b1
jmp r-xdata
or ecx 0x4
cmp eax 0x1
jle r-xdata
mov eax [ esi + 0x30 ]
mov eax [ eax ]
mov ecx esi
call sub_1001087c
cmp eax 0xffffffff
jne r-xdata
mov eax [ esi + 0x30 ]
dec [ eax ]
mov eax [ esi + 0x20 ]
inc [ eax ]
mov eax [ esi + 0x20 ]
mov eax [ eax ]
movzx eax [ eax ]
jmp r-xdata
mov ecx esi
jmp r-xdata
or eax eax
jmp r-xdata
cmp eax 0xffffffff
jne r-xdata
call sub_100108ad
sub_100109cb
mov ecx [ ebp + 0x8 ]
mov eax [ ecx ]
mov eax [ eax + 0x4 ]
add eax ecx
mov ecx [ eax + 0x8 ]
or ecx 0x4
cmp [ eax + 0x28 ] 0x0
jne r-xdata
push 0x1
push eax
call sub_100079b1
or [ ebp - 0x4 ] 0xffffffff
mov eax r-xdata
retn
or ecx 0x4
sub_10010a2b
push 0x0
mov eax sub_1004e06c
call sub_10029e33
mov eax [ ebp + 0xc ]
mov esi [ ebp + 0x8 ]
mov [ esi ] eax
mov ecx [ eax ]
mov ecx [ ecx + 0x4 ]
mov eax [ ecx + eax + 0x28 ]
test eax eax
je r-xdata
push [ ebp + 0x10 ]
and [ ebp - 0x4 ] 0x0
push [ esi ]
call sub_100108cd
mov [ esi + 0x4 ] al
mov eax esi
call sub_10029f0b
retn 0xc
lea ecx [ eax + 0x4 ]
call sub_100223cb
sub_10010a9e
push 0x0
mov eax sub_1004e06c
call sub_10029e33
mov esi [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
call j_sub_1002a1d9
test al al
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
mov eax [ esi ]
mov ecx [ eax ]
mov ecx [ ecx + 0x4 ]
mov eax [ ecx + eax + 0x28 ]
test eax eax
je r-xdata
mov ecx [ esi ]
call sub_10010a6f
call sub_10029f0b
retn 0x4
lea ecx [ eax + 0x4 ]
call sub_100223d4
sub_10010ae4
push ecx
mov eax [ esi ]
mov eax [ eax + 0x4 ]
add eax esi
test [ eax + 0x8 ] 0x6
jne r-xdata
mov eax esi
pop ecx
retn
mov eax [ eax + 0x28 ]
mov edx [ eax ]
mov ecx eax
call [ edx + 0x30 ]
cmp eax 0xffffffff
jne r-xdata
mov eax [ esi ]
mov edx [ eax + 0x4 ]
push 0x0
push 0x4
add edx esi
call sub_10007acb
sub_10010b15
push 0x0
mov eax sub_1004e06c
call sub_10029e33
mov ebx [ ebp + 0x8 ]
mov [ ebx ] edi
mov eax [ edi ]
mov eax [ eax + 0x4 ]
mov eax [ eax + edi + 0x28 ]
test eax eax
je r-xdata
and [ ebp - 0x4 ] 0x0
mov eax [ edi ]
mov eax [ eax + 0x4 ]
add eax edi
cmp [ eax + 0x8 ] 0x0
jne r-xdata
lea ecx [ eax + 0x4 ]
call sub_100223cb
mov eax [ edi ]
mov eax [ eax + 0x4 ]
cmp [ eax + edi + 0x8 ] 0x0
sete al
mov [ ebx + 0x4 ] al
mov eax ebx
call sub_10029f0b
retn 0x4
mov eax [ eax + 0x2c ]
test eax eax
je r-xdata
mov esi eax
call sub_10010ae4
sub_10010b90
push 0x1b0
mov eax sub_1004e30c
call sub_10029e9c
mov eax [ ebp + 0x8 ]
mov [ ebp - 0xc0 ] eax
mov eax [ ebp + 0xc ]
push 0xf
pop edi
mov [ ebp - 0xbc ] eax
mov eax [ ebp + 0x10 ]
xor ebx ebx
mov esi ecx
mov [ ebp - 0xf0 ] ebx
push ebx
lea ecx [ ebp - 0x9c ]
mov [ ebp - 0xec ] eax
mov [ ebp - 0x84 ] edi
call sub_1000237a
lea eax [ ebp - 0x9c ]
push eax
push [ ebp - 0xbc ]
mov [ ebp - 0x4 ] 0x1
call sub_10011177
cmp [ ebp - 0x84 ] 0x10
mov eax [ ebp - 0x98 ]
pop ecx
pop ecx
jae r-xdata
mov [ ebp - 0xbc ] eax
cmp [ esi + 0x14 ] ebx
ja r-xdata
lea eax [ ebp - 0x98 ]
push ebx
lea ecx [ ebp - 0x80 ]
mov [ ebp - 0x68 ] edi
call sub_1000237a
mov [ ebp - 0x4 ] 0x2
push [ ebp - 0xec ]
lea ebx [ ebp - 0x80 ]
push esi
call sub_10011001
pop ecx
pop ecx
xor ebx ebx
push ebx
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x14 ] edi
call sub_1000237a
push ebx
lea ecx [ ebp - 0x48 ]
mov [ ebp - 0x30 ] edi
call sub_1000237a
push ebx
lea ecx [ ebp - 0x64 ]
mov [ ebp - 0x4c ] edi
call sub_1000237a
mov [ ebp - 0x4 ] 0x5
lea eax [ ebp - 0x178 ]
push eax
lea ecx [ ebp - 0x80 ]
mov [ ebp - 0xe8 ] ebx
mov [ ebp - 0xe4 ] bl
mov [ ebp - 0xe0 ] 0xb3
mov [ ebp - 0xdc ] r--data
mov [ ebp - 0xd8 ] ebx
mov [ ebp - 0xd4 ] ebx
mov [ ebp - 0xd0 ] bl
mov [ ebp - 0xcc ] ebx
mov [ ebp - 0xc8 ] ebx
mov [ ebp - 0xc4 ] ebx
call sub_1001168a
push 0x4
pop esi
push esi
lea eax [ ebp - 0xe8 ]
push eax
lea eax [ ebp - 0x178 ]
push eax
mov [ ebp - 0x4 ] 0x6
call sub_10011c8c
push 0x1
lea eax [ ebp - 0xe4 ]
push eax
lea eax [ ebp - 0x178 ]
push eax
call sub_10011c8c
push esi
lea eax [ ebp - 0xe0 ]
push eax
lea eax [ ebp - 0x178 ]
push eax
call sub_10011c8c
push ebx
push [ ebp - 0xe0 ]
lea ecx [ ebp - 0x64 ]
call sub_1001151d
mov eax [ ebp - 0x60 ]
push 0x10
pop edi
cmp [ ebp - 0x4c ] edi
jae r-xdata
mov esi [ ebp - 0xc0 ]
xor edi edi
call sub_10011ec9
push ebx
push 0x1
jmp r-xdata
push [ ebp - 0xe0 ]
push eax
lea eax [ ebp - 0x178 ]
push eax
call sub_10011c8c
mov eax [ ebp - 0x60 ]
cmp [ ebp - 0x4c ] edi
jae r-xdata
lea eax [ ebp - 0x60 ]
lea ecx [ ebp - 0x9c ]
call sub_100022b5
mov eax [ ebp - 0xc0 ]
call sub_10029f1f
retn
mov [ ebp - 0xdc ] eax
push esi
lea eax [ ebp - 0xd8 ]
push eax
lea eax [ ebp - 0x178 ]
push eax
call sub_10011c8c
push ebx
push [ ebp - 0xd8 ]
lea ecx [ ebp - 0x2c ]
call sub_1001151d
mov eax [ ebp - 0x28 ]
cmp [ ebp - 0x14 ] edi
jae r-xdata
lea eax [ ebp - 0x60 ]
push [ ebp - 0xd8 ]
push eax
lea eax [ ebp - 0x178 ]
push eax
call sub_10011c8c
mov eax [ ebp - 0x28 ]
cmp [ ebp - 0x14 ] edi
jae r-xdata
lea eax [ ebp - 0x28 ]
mov [ ebp - 0xd4 ] eax
push 0x1
lea eax [ ebp - 0xd0 ]
push eax
lea eax [ ebp - 0x178 ]
push eax
call sub_10011c8c
push esi
lea eax [ ebp - 0xcc ]
push eax
lea eax [ ebp - 0x178 ]
push eax
call sub_10011c8c
push esi
lea eax [ ebp - 0xc8 ]
push eax
lea eax [ ebp - 0x178 ]
push eax
call sub_10011c8c
push ebx
push [ ebp - 0xc8 ]
lea ecx [ ebp - 0x48 ]
call sub_1001151d
mov eax [ ebp - 0x44 ]
cmp [ ebp - 0x30 ] edi
jae r-xdata
lea eax [ ebp - 0x28 ]
push [ ebp - 0xc8 ]
push eax
lea eax [ ebp - 0x178 ]
push eax
call sub_10011c8c
mov eax [ ebp - 0x44 ]
cmp [ ebp - 0x30 ] edi
jae r-xdata
lea eax [ ebp - 0x44 ]
mov ecx [ ebp - 0xe0 ]
mov [ ebp - 0xc4 ] eax
mov eax [ ebp - 0xd8 ]
lea eax [ eax + ecx + 0xd ]
mov ecx [ ebp - 0x7c ]
cmp [ ebp - 0x68 ] edi
jae r-xdata
lea eax [ ebp - 0x44 ]
mov edx [ ebp - 0x6c ]
sub edx eax
add ecx eax
push edx
push ecx
lea ecx [ ebp - 0xb8 ]
call sub_100114f7
push [ ebp - 0xbc ]
lea eax [ ebp - 0x2c ]
push eax
lea ecx [ ebp - 0xb8 ]
mov [ ebp - 0x4 ] 0x7
call sub_10013b8c
pop ecx
pop ecx
cmp al 0x1
je r-xdata
lea ecx [ ebp - 0x7c ]
push 0x24
call sub_10025dd6
pop ecx
mov [ ebp - 0xec ] eax
mov [ ebp - 0x4 ] 0x9
cmp eax ebx
je r-xdata
push r--data
lea ecx [ ebp - 0x194 ]
call sub_10001b81
lea eax [ ebp - 0x194 ]
push eax
lea ecx [ ebp - 0x1bc ]
mov [ ebp - 0x4 ] 0x8
call sub_100078c4
push r--data
lea eax [ ebp - 0x1bc ]
push eax
call sub_10029a01
xor eax eax
cmp [ ebp - 0xd0 ] 0x1
lea edi [ ebp - 0x48 ]
sete cl
movzx ecx cl
push ecx
push eax
call sub_1001144a
jmp r-xdata
mov [ ebp - 0x4 ] 0x7
mov esi [ ebp - 0xc0 ]
mov edi eax
call sub_10011ec9
xor edi edi
inc edi
push ebx
push edi
lea ecx [ ebp - 0xb8 ]
mov [ ebp - 0xf0 ] edi
call sub_100022b5
lea eax [ ebp - 0x178 ]
mov [ ebp - 0x4 ] 0x5
call sub_10010b74
push ebx
push edi
lea ecx [ ebp - 0x64 ]
call sub_100022b5
push ebx
push edi
lea ecx [ ebp - 0x48 ]
call sub_100022b5
push ebx
push edi
lea ecx [ ebp - 0x2c ]
call sub_100022b5
push ebx
push edi
lea ecx [ ebp - 0x80 ]
call sub_100022b5
push ebx
push edi
sub_10010f46
push 0x60
mov eax sub_1004dbc2
call sub_10029e9c
mov eax [ ebp + 0x8 ]
push r--data
mov edi edx
mov [ ebp - 0x6c ] ecx
mov [ ebp - 0x68 ] eax
call sub_10002408
mov eax [ edi + 0x14 ]
xor ebx ebx
cmp eax ebx
jbe r-xdata
call sub_10029f1f
retn
push 0xf
pop esi
push ebx
lea ecx [ ebp - 0x48 ]
mov [ ebp - 0x30 ] esi
call sub_1000237a
mov ecx [ ebp - 0x68 ]
push edi
lea edx [ ebp - 0x48 ]
mov [ ebp - 0x4 ] ebx
call sub_1001138e
pop ecx
push ebx
lea ecx [ ebp - 0x64 ]
mov [ ebp - 0x4c ] esi
call sub_1000237a
lea eax [ ebp - 0x64 ]
push eax
lea ecx [ ebp - 0x48 ]
mov [ ebp - 0x4 ] 0x1
call sub_100111f2
pop ecx
push ebx
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x14 ] esi
call sub_1000237a
lea eax [ ebp - 0x64 ]
push eax
lea edi [ ebp - 0x2c ]
mov [ ebp - 0x4 ] 0x2
call sub_10011113
pop ecx
mov ecx [ ebp - 0x6c ]
push 0xffffffff
push ebx
mov eax edi
push eax
call sub_10002099
push ebx
push 0x1
mov ecx edi
call sub_100022b5
push ebx
push 0x1
lea ecx [ ebp - 0x64 ]
call sub_100022b5
push ebx
push 0x1
lea ecx [ ebp - 0x48 ]
call sub_100022b5
sub_10011001
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_1004db82
mov eax [ fs : 0x0 ]
push eax
sub esp 0x64
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x5c ] eax
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x70 ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
mov [ esp + 0xc ] eax
mov eax [ ebp + 0xc ]
push r--data
mov ecx ebx
mov [ esp + 0x14 ] eax
call sub_10002408
push 0xf
pop esi
xor edi edi
push edi
lea ecx [ esp + 0x50 ]
mov [ esp + 0x68 ] esi
call sub_1000237a
lea eax [ esp + 0x4c ]
push eax
push [ esp + 0x10 ]
mov [ esp + 0x80 ] edi
call sub_10011177
pop ecx
pop ecx
push edi
lea ecx [ esp + 0x34 ]
mov [ esp + 0x4c ] esi
call sub_1000237a
lea eax [ esp + 0x30 ]
push eax
lea ecx [ esp + 0x50 ]
mov [ esp + 0x7c ] 0x1
call sub_100112b2
pop ecx
push edi
lea ecx [ esp + 0x18 ]
mov [ esp + 0x30 ] esi
call sub_1000237a
mov ecx [ esp + 0x10 ]
lea eax [ esp + 0x30 ]
push eax
lea edx [ esp + 0x18 ]
mov [ esp + 0x7c ] 0x2
call sub_1001138e
pop ecx
push 0xffffffff
push edi
lea eax [ esp + 0x1c ]
push eax
mov ecx ebx
call sub_10002099
push edi
push 0x1
lea ecx [ esp + 0x1c ]
call sub_100022b5
push edi
push 0x1
lea ecx [ esp + 0x38 ]
call sub_100022b5
push edi
push 0x1
lea ecx [ esp + 0x54 ]
call sub_100022b5
mov ecx [ esp + 0x70 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov ecx [ esp + 0x5c ]
xor ecx esp
call sub_10025c8d
mov esp ebp
pop ebp
retn
sub_10011113
push 0x40
mov eax sub_1004db45
call sub_10029e9c
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x18 ] 0x10
mov ecx [ eax + 0x14 ]
jb r-xdata
add eax 0x4
mov eax [ eax + 0x4 ]
jmp r-xdata
push ecx
push eax
lea esi [ ebp - 0x30 ]
call sub_1001733a
lea eax [ ebp - 0x4c ]
xor esi esi
push eax
lea ecx [ ebp - 0x30 ]
mov [ ebp - 0x4 ] esi
call sub_1001748c
pop ecx
push 0xffffffff
push esi
push eax
mov ecx edi
mov [ ebp - 0x4 ] 0x1
call sub_10002099
push esi
push 0x1
lea ecx [ ebp - 0x4c ]
call sub_100022b5
lea ecx [ ebp - 0x30 ]
call sub_10017355
call sub_10029f1f
retn
sub_10011177
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_1004db1a
mov eax [ fs : 0x0 ]
push eax
sub esp 0xc
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x10 ]
mov [ fs : 0x0 ] eax
push [ ebp + 0x8 ]
lea eax [ esp + 0x8 ]
push eax
call sub_10017368
pop ecx
pop ecx
and [ esp + 0x18 ] 0x0
mov eax [ esp + 0x4 ]
test eax eax
je r-xdata
xor eax eax
add eax 0x4
jmp r-xdata
mov ecx [ esp + 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
mov esp ebp
pop ebp
retn
call sub_1000990a
mov ecx [ ebp + 0xc ]
push 0xffffffff
push 0x0
push eax
call sub_10002099
or [ esp + 0x18 ] 0xffffffff
mov ecx [ esp + 0x8 ]
test ecx ecx
je r-xdata
sub_100111f2
push 0x70
mov eax sub_1004c884
call sub_10029e9c
mov eax [ ebp + 0x8 ]
mov esi ecx
mov [ ebp - 0x38 ] eax
mov eax [ esi + 0x14 ]
xor edi edi
push edi
shl eax 0x6
push eax
lea ecx [ ebp - 0x30 ]
call sub_10005b42
mov [ ebp - 0x4 ] edi
cmp [ esi + 0x18 ] 0x10
mov eax [ ebp - 0x1c ]
mov [ ebp - 0x34 ] eax
mov eax [ esi + 0x14 ]
jb r-xdata
add esi 0x4
mov esi [ esi + 0x4 ]
jmp r-xdata
push eax
push esi
lea eax [ ebp - 0x34 ]
call sub_1001c488
cmp eax edi
je r-xdata
lea ebx [ ebp - 0x2c ]
cmp [ ebp - 0x18 ] 0x10
mov ebx [ ebp - 0x2c ]
jae r-xdata
push [ ebp - 0x34 ]
lea eax [ ebp - 0x30 ]
push edi
push eax
lea esi [ ebp - 0x54 ]
call sub_10011541
mov ecx [ ebp - 0x38 ]
push 0xffffffff
push edi
push eax
mov [ ebp - 0x4 ] 0x2
call sub_10002099
push edi
push 0x1
mov ecx esi
call sub_100022b5
push edi
push 0x1
lea ecx [ ebp - 0x30 ]
call sub_100022b5
call sub_10029f1f
retn
push r--data
lea ecx [ ebp - 0x54 ]
call sub_10001b81
lea eax [ ebp - 0x54 ]
push eax
lea ecx [ ebp - 0x7c ]
mov [ ebp - 0x4 ] 0x1
call sub_100078c4
push r--data
lea eax [ ebp - 0x7c ]
push eax
call sub_10029a01
sub_100112b2
push 0x70
mov eax sub_1004c884
call sub_10029e9c
mov eax [ ebp + 0x8 ]
push 0x20
pop edi
xor ebx ebx
mov esi ecx
push ebx
lea ecx [ ebp - 0x30 ]
mov [ ebp - 0x38 ] eax
mov [ ebp - 0x18 ] 0xf
call sub_1000237a
mov [ ebp - 0x4 ] ebx
lea ecx [ esi + 0x4 ]
mov edx ecx
mov edx [ esi + 0x4 ]
jmp r-xdata
push eax
push edx
lea eax [ ebp - 0x34 ]
call sub_1001c4fe
cmp eax 0xfffffff8
je r-xdata
lea ecx [ ebp - 0x2c ]
cmp [ ebp - 0x18 ] 0x10
mov ecx [ ebp - 0x2c ]
jae r-xdata
mov eax [ esi + 0x14 ]
add edi edi
imul eax edi
push ebx
push eax
lea ecx [ ebp - 0x30 ]
call sub_1001151d
cmp [ esi + 0x18 ] 0x10
mov eax [ ebp - 0x1c ]
mov [ ebp - 0x34 ] eax
mov eax [ esi + 0x14 ]
jb r-xdata
cmp eax ebx
je r-xdata
push [ ebp - 0x34 ]
lea eax [ ebp - 0x30 ]
push ebx
push eax
lea esi [ ebp - 0x54 ]
call sub_10011541
mov ecx [ ebp - 0x38 ]
push 0xffffffff
push ebx
push eax
mov [ ebp - 0x4 ] 0x2
call sub_10002099
push ebx
push 0x1
mov ecx esi
call sub_100022b5
push ebx
push 0x1
lea ecx [ ebp - 0x30 ]
call sub_100022b5
call sub_10029f1f
retn
push r--data
lea ecx [ ebp - 0x54 ]
call sub_10001b81
lea eax [ ebp - 0x54 ]
push eax
lea ecx [ ebp - 0x7c ]
mov [ ebp - 0x4 ] 0x1
call sub_100078c4
push r--data
lea eax [ ebp - 0x7c ]
push eax
call sub_10029a01
sub_1001138e
push 0x58
mov eax sub_1004c851
call sub_10029e33
mov ebx ecx
mov edi edx
mov esi [ ebp + 0x8 ]
mov eax [ ebx + 0x14 ]
mov [ ebp - 0x20 ] eax
test eax eax
ja r-xdata
mov eax [ esi + 0x14 ]
push 0x0
push eax
mov ecx edi
mov [ ebp - 0x1c ] eax
call sub_1001151d
cmp [ esi + 0x18 ] 0x10
jb r-xdata
push r--data
lea ecx [ ebp - 0x3c ]
call sub_10001b81
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x3c ]
push eax
lea ecx [ ebp - 0x64 ]
call sub_100078c4
push r--data
lea eax [ ebp - 0x64 ]
push eax
call sub_10029a01
lea ecx [ esi + 0x4 ]
mov ecx [ esi + 0x4 ]
jmp r-xdata
lea eax [ edi + 0x4 ]
mov eax [ edi + 0x4 ]
jmp r-xdata
cmp [ edi + 0x18 ] 0x10
jb r-xdata
add ebx 0x4
mov [ ebp - 0x18 ] ebx
mov edx [ ebx + 0x4 ]
mov [ ebp - 0x18 ] edx
jmp r-xdata
cmp [ ebx + 0x18 ] 0x10
mov [ ebp - 0x14 ] eax
jb r-xdata
call sub_10029f0b
retn
mov edi ecx
sub edi eax
jmp r-xdata
xor esi esi
cmp [ ebp - 0x1c ] esi
jbe r-xdata
lea ecx [ esi + eax ]
xor edx edx
mov eax esi
div [ ebp - 0x20 ]
mov eax [ ebp - 0x18 ]
mov al [ edx + eax ]
xor al [ edi + ecx ]
inc esi
mov [ ecx ] al
cmp esi [ ebp - 0x1c ]
jb r-xdata
mov eax [ ebp - 0x14 ]
sub_1001144a
push 0x44
mov eax sub_1004c82e
call sub_10029e33
mov esi [ ebp + 0x8 ]
push edi
lea ecx [ esi + 0x4 ]
mov [ esi ] r--data
call sub_10001c9f
and [ ebp - 0x4 ] 0x0
mov al [ ebp + 0xc ]
mov [ esi + 0x20 ] al
cmp [ edi + 0x14 ] 0x0
ja r-xdata
mov eax esi
call sub_10029f0b
retn 0x8
push r--data
lea ecx [ ebp - 0x28 ]
call sub_10001b81
lea eax [ ebp - 0x28 ]
push eax
lea ecx [ ebp - 0x50 ]
mov [ ebp - 0x4 ] 0x1
call sub_100078c4
push r--data
lea eax [ ebp - 0x50 ]
push eax
call sub_10029a01
sub_1001151d
mov edx [ ecx + 0x14 ]
mov eax [ esp + 0x4 ]
cmp eax edx
ja r-xdata
push [ esp + 0x8 ]
sub eax edx
push eax
call sub_10005b68
push 0xffffffff
push eax
call sub_1000202a
jmp r-xdata
retn 0x8
sub_10011541
push ebp
mov ebp esp
push ecx
and [ ebp - 0x4 ] 0x0
push 0x0
mov ecx esi
mov [ esi + 0x18 ] 0xf
call sub_1000237a
push [ ebp + 0x10 ]
mov ecx esi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_10002099
mov eax esi
leave
retn 0xc
sub_1001156f
push 0x10
mov eax sub_1004e276
call sub_10029e66
mov edi [ ebp + 0x8 ]
lea eax [ ebp - 0x1c ]
xor ebx ebx
push eax
mov [ ebp - 0x14 ] ebx
call sub_10010b15
mov [ ebp - 0x4 ] ebx
cmp [ ebp - 0x18 ] bl
jne r-xdata
push [ ebp + 0x10 ]
mov [ ebp - 0x4 ] 0x1
mov eax [ edi ]
mov eax [ eax + 0x4 ]
mov ecx [ eax + edi + 0x28 ]
push [ ebp + 0xc ]
mov eax [ ecx ]
call [ eax + 0x20 ]
cmp eax [ ebp + 0x10 ]
je r-xdata
mov [ ebp - 0x14 ] 0x4
jmp sub_100115f6
mov [ ebp - 0x4 ] ebx
jmp sub_100115f6
mov [ ebp - 0x14 ] 0x4
sub_100115c6
mov ecx [ ebp + 0x8 ]
mov eax [ ecx ]
mov eax [ eax + 0x4 ]
add eax ecx
mov ecx [ eax + 0x8 ]
xor ebx ebx
or ecx 0x4
cmp [ eax + 0x28 ] ebx
jne r-xdata
push 0x1
push eax
call sub_100079b1
mov [ ebp - 0x4 ] ebx
mov eax r-xdata
retn
or ecx 0x4
sub_100115f6
mov eax [ edi ]
mov edx [ eax + 0x4 ]
add edx edi
cmp [ ebp - 0x14 ] ebx
je r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea eax [ ebp - 0x1c ]
push eax
call sub_10010a9e
mov eax edi
call sub_10029f0b
retn 0xc
push ebx
push [ ebp - 0x14 ]
call sub_10007acb
sub_10011622
push 0x8
mov eax sub_1004daf7
call sub_10029e33
mov esi [ ebp + 0x8 ]
and [ ebp - 0x10 ] 0x0
mov [ esi ] r--data
mov [ esi + 0x8 ] r--data
mov [ esi + 0x54 ] r--data
and [ ebp - 0x4 ] 0x0
lea edi [ esi + 0xc ]
xor ebx ebx
push edi
inc ebx
push esi
mov [ ebp - 0x10 ] ebx
call sub_10011d50
mov [ ebp - 0x4 ] ebx
mov eax [ esi ]
mov eax [ eax + 0x4 ]
push edi
mov [ esi + eax ] r--data
call sub_1000e792
and [ edi + 0x3c ] 0x0
and [ edi + 0x40 ] 0x0
mov [ edi ] r--data
mov eax esi
call sub_10029f0b
retn 0x4
sub_1001168a
push 0x8
mov eax sub_1004daf7
call sub_10029e33
mov ebx ecx
mov edi [ ebp + 0x8 ]
and [ ebp - 0x10 ] 0x0
mov [ edi ] r--data
mov [ edi + 0x8 ] r--data
mov [ edi + 0x54 ] r--data
and [ ebp - 0x4 ] 0x0
lea eax [ edi + 0xc ]
xor esi esi
push eax
inc esi
push edi
mov [ ebp - 0x10 ] esi
call sub_10011d50
mov [ ebp - 0x4 ] esi
mov eax [ edi ]
mov eax [ eax + 0x4 ]
lea esi [ edi + 0xc ]
push esi
mov [ edi + eax ] r--data
mov [ ebp - 0x14 ] esi
call sub_1000e792
mov [ ebp - 0x4 ] 0x2
mov [ esi ] r--data
cmp [ ebx + 0x18 ] 0x10
mov eax [ ebx + 0x14 ]
jb r-xdata
add ebx 0x4
mov ebx [ ebx + 0x4 ]
jmp r-xdata
mov eax edi
call sub_10029f0b
retn 0x4
push ebx
mov ebx eax
call sub_10011e46
and [ esi + 0x3c ] 0x0
and [ esi + 0x40 ] 0x0
test eax eax
je r-xdata
sub_1001171b
push 0x4
mov eax sub_1004c014
call sub_10029e33
mov [ ebp - 0x10 ] ecx
mov eax [ ecx - 0x54 ]
mov eax [ eax + 0x4 ]
mov [ eax + ecx - 0x54 ] r--data
and [ ebp - 0x4 ] 0x0
lea esi [ ecx - 0x48 ]
mov ecx esi
call sub_10011794
mov ecx esi
call sub_10011769
call sub_10029f0b
retn
sub_10011794
push esi
mov esi ecx
test [ esi + 0x40 ] 0x1
mov [ esi ] r--data
je r-xdata
mov ecx [ esi + 0x10 ]
xor eax eax
mov [ ecx ] eax
mov ecx [ esi + 0x20 ]
mov [ ecx ] eax
mov ecx [ esi + 0x30 ]
mov [ ecx ] eax
mov ecx [ esi + 0x14 ]
mov [ ecx ] eax
mov ecx [ esi + 0x24 ]
mov [ ecx ] eax
mov ecx [ esi + 0x34 ]
mov [ ecx ] eax
and [ esi + 0x40 ] 0xfffffffe
mov [ esi + 0x3c ] eax
mov ecx esi
pop esi
jmp sub_100104f5
mov eax [ esi + 0x10 ]
push [ eax ]
call sub_10025c9c
pop ecx
sub_100117dd
push ebp
mov ebp esp
push ecx
push ecx
push esi
mov esi ecx
test [ esi + 0x40 ] 0x8
push edi
je r-xdata
mov eax [ ebp + 0x8 ]
cmp eax 0xffffffff
jne r-xdata
mov ecx [ esi + 0x24 ]
mov edi [ ecx ]
test edi edi
je r-xdata
mov edx [ esi + 0x24 ]
mov edi [ edx ]
push ebx
test edi edi
je r-xdata
xor eax eax
jmp r-xdata
mov edx [ esi + 0x3c ]
cmp edi edx
jae r-xdata
test [ esi + 0x40 ] 0x2
jne r-xdata
mov ecx [ esi + 0x34 ]
mov ebx [ ecx ]
mov edx edi
add ebx edx
cmp edx ebx
jae r-xdata
pop edi
pop esi
leave
retn 0x4
mov eax [ esi + 0x34 ]
mov eax [ eax ]
add eax edi
mov [ ecx ] edx
mov ecx [ esi + 0x34 ]
sub eax edx
mov [ ecx ] eax
or eax 0xffffffff
jmp r-xdata
test edi edi
jne r-xdata
dec [ ecx ]
mov esi [ esi + 0x24 ]
mov ecx [ esi ]
lea edx [ ecx + 0x1 ]
mov [ esi ] edx
jmp r-xdata
pop ebx
mov eax [ esi + 0x34 ]
mov ecx [ esi + 0x10 ]
mov ebx [ eax ]
sub ebx [ ecx ]
add ebx edi
xor ebx ebx
jmp r-xdata
mov [ ecx ] al
test eax eax
jbe r-xdata
push 0x20
pop eax
jmp r-xdata
mov eax ebx
shr eax 0x1
cmp eax 0x20
jae r-xdata
jne r-xdata
mov ecx 0x7fffffff
sub ecx eax
cmp ecx ebx
jae r-xdata
add eax ebx
push 0x0
push eax
mov [ ebp - 0x4 ] eax
call sub_10002189
mov edi eax
mov eax [ esi + 0x10 ]
mov edx [ eax ]
pop ecx
pop ecx
mov [ ebp - 0x8 ] edx
test ebx ebx
jbe r-xdata
test eax eax
shr eax 0x1
jne r-xdata
jne r-xdata
push ebx
push edx
push [ ebp - 0x4 ]
push edi
call sub_1000235e
mov edx [ ebp - 0x8 ]
add esp 0x10
test ebx ebx
mov ecx [ esi + 0x14 ]
mov eax edi
sub eax edx
add [ esi + 0x3c ] eax
mov eax [ esi + 0x24 ]
mov eax [ eax ]
mov ebx edi
sub eax edx
sub ebx edx
add [ ecx ] ebx
mov ecx [ esi + 0x24 ]
add eax edi
mov [ ecx ] eax
mov ecx edi
sub ecx eax
add ecx [ ebp - 0x4 ]
mov eax [ esi + 0x34 ]
mov [ eax ] ecx
test [ esi + 0x40 ] 0x4
je r-xdata
mov eax [ esi + 0x14 ]
mov ecx [ ebp - 0x4 ]
mov [ esi + 0x3c ] edi
mov [ eax ] edi
mov eax [ esi + 0x24 ]
mov [ eax ] edi
mov eax [ esi + 0x34 ]
mov [ eax ] ecx
mov eax [ esi + 0x10 ]
test [ esi + 0x40 ] 0x4
mov [ eax ] edi
mov eax [ esi + 0x20 ]
jne r-xdata
mov eax [ esi + 0x24 ]
mov ecx [ eax ]
mov eax [ esi + 0x20 ]
mov eax [ eax ]
mov ebx [ esi + 0x10 ]
sub eax edx
add eax edi
mov [ ebx ] edi
mov edi [ esi + 0x20 ]
sub ecx eax
mov [ edi ] eax
mov eax [ esi + 0x30 ]
inc ecx
mov [ eax ] ecx
mov eax [ esi + 0x10 ]
mov [ eax ] edi
mov eax [ esi + 0x20 ]
and [ eax ] 0x0
mov eax [ esi + 0x30 ]
mov [ eax ] edi
jmp r-xdata
mov [ eax ] edi
mov eax [ esi + 0x30 ]
mov [ eax ] 0x1
jmp r-xdata
mov eax [ esi + 0x34 ]
or [ esi + 0x40 ] 0x1
dec [ eax ]
mov esi [ esi + 0x24 ]
mov ecx [ esi ]
lea eax [ ecx + 0x1 ]
mov [ esi ] eax
mov eax [ ebp + 0x8 ]
push edx
call sub_10025c9c
pop ecx
test [ esi + 0x40 ] 0x1
je r-xdata
sub_1001197a
mov eax [ ecx + 0x20 ]
mov eax [ eax ]
test eax eax
je r-xdata
or eax 0xffffffff
mov edx [ ecx + 0x10 ]
cmp eax [ edx ]
jbe r-xdata
mov edx [ esp + 0x4 ]
cmp edx 0xffffffff
je r-xdata
mov eax [ ecx + 0x30 ]
inc [ eax ]
mov eax [ ecx + 0x20 ]
dec [ eax ]
cmp edx 0xffffffff
je r-xdata
cmp dl [ eax - 0x1 ]
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ecx + 0x20 ]
mov eax [ eax ]
mov [ eax ] dl
mov eax edx
jmp r-xdata
test [ ecx + 0x40 ] 0x2
jne r-xdata
retn 0x4
sub_100119c2
mov eax [ ecx + 0x20 ]
push edi
mov edi [ eax ]
test edi edi
jne r-xdata
mov edx [ ecx + 0x30 ]
push ebx
mov ebx [ edx ]
push esi
mov esi edi
add ebx esi
cmp esi ebx
jae r-xdata
or eax 0xffffffff
pop edi
retn
test [ ecx + 0x40 ] 0x4
jne r-xdata
movzx eax [ edi ]
jmp r-xdata
or eax 0xffffffff
mov esi [ ecx + 0x24 ]
mov esi [ esi ]
test esi esi
je r-xdata
pop esi
pop ebx
pop edi
retn
cmp esi edi
ja r-xdata
cmp [ ecx + 0x3c ] esi
jae r-xdata
cmp [ ecx + 0x3c ] edi
jbe r-xdata
mov esi [ eax ]
mov eax [ ecx + 0x3c ]
sub eax esi
mov [ edx ] eax
mov eax [ ecx + 0x20 ]
mov eax [ eax ]
movzx eax [ eax ]
jmp r-xdata
mov [ ecx + 0x3c ] esi
sub_10011a1f
push ebp
mov ebp esp
mov edx [ ecx + 0x24 ]
mov eax [ edx ]
test eax eax
je r-xdata
test [ ebp + 0x14 ] 0x1
push ebx
push esi
push edi
je r-xdata
cmp [ ecx + 0x3c ] eax
jae r-xdata
test [ ebp + 0x14 ] 0x2
je r-xdata
mov eax [ ecx + 0x20 ]
mov edi [ eax ]
test edi edi
je r-xdata
mov [ ecx + 0x3c ] eax
mov esi [ r--data ]
mov edx [ edx ]
test edx edx
je r-xdata
cmp [ ebp + 0x10 ] 0x2
mov edx [ r--data ]
jne r-xdata
cmp [ ebp + 0x10 ] 0x2
mov edi [ r--data ]
jne r-xdata
cmp [ ebp + 0x10 ] 0x1
jne r-xdata
mov ebx [ ecx + 0x3c ]
jmp r-xdata
cmp [ ebp + 0x10 ] 0x1
jne r-xdata
mov ebx [ ecx + 0x3c ]
jmp r-xdata
cmp [ ebp + 0x10 ] 0x0
je r-xdata
test [ ebp + 0x14 ] 0x2
jne r-xdata
mov eax [ ecx + 0x10 ]
sub ebx [ eax ]
mov esi [ ebp + 0xc ]
add esi ebx
jmp r-xdata
cmp [ ebp + 0x10 ] 0x0
mov esi edi
jne r-xdata
mov ebx edx
mov eax [ ecx + 0x10 ]
sub ebx [ eax ]
mov esi [ ebp + 0xc ]
add esi ebx
jmp r-xdata
mov esi [ ebp + 0xc ]
mov esi edx
jmp r-xdata
mov ebx edi
test esi esi
jl r-xdata
test esi esi
jl r-xdata
mov esi [ ebp + 0xc ]
mov esi edx
jmp r-xdata
mov eax [ ecx + 0x10 ]
mov eax [ eax ]
mov ebx [ ecx + 0x3c ]
sub ebx eax
cmp esi ebx
jg r-xdata
mov esi edi
jmp r-xdata
mov eax [ ecx + 0x10 ]
mov eax [ eax ]
mov ebx [ ecx + 0x3c ]
sub ebx eax
cmp esi ebx
jg r-xdata
mov eax [ ebp + 0x8 ]
pop edi
xor ecx ecx
mov [ eax ] esi
pop esi
mov [ eax + 0x8 ] ecx
mov [ eax + 0xc ] ecx
mov [ eax + 0x10 ] ecx
pop ebx
pop ebp
retn 0x10
mov edx [ ecx + 0x30 ]
sub eax edi
add eax esi
sub [ edx ] eax
mov edx [ ecx + 0x20 ]
add [ edx ] eax
test [ ebp + 0x14 ] 0x2
je r-xdata
sub eax edx
mov edx [ ecx + 0x34 ]
add eax esi
sub [ edx ] eax
mov ecx [ ecx + 0x24 ]
add [ ecx ] eax
jmp r-xdata
mov edx [ ecx + 0x24 ]
mov ebx [ edx ]
test ebx ebx
je r-xdata
mov eax [ ecx + 0x20 ]
mov edi [ eax ]
mov eax [ ecx + 0x34 ]
mov eax [ eax ]
add eax ebx
mov [ edx ] edi
mov ecx [ ecx + 0x34 ]
sub eax edi
mov [ ecx ] eax
jmp r-xdata
sub_10011b56
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
mov edx [ ebp + 0x14 ]
push esi
lea esi [ edx + eax ]
mov eax [ ecx + 0x24 ]
mov edx [ eax ]
push edi
test edx edx
je r-xdata
mov edi [ r--data ]
cmp esi edi
je r-xdata
cmp [ ecx + 0x3c ] edx
jae r-xdata
mov eax [ ebp + 0x8 ]
xor ecx ecx
pop edi
mov [ eax ] esi
mov [ eax + 0x8 ] ecx
mov [ eax + 0xc ] ecx
mov [ eax + 0x10 ] ecx
pop esi
pop ebp
retn 0x20
test [ ebp + 0x24 ] 0x1
push ebx
je r-xdata
mov [ ecx + 0x3c ] edx
test [ ebp + 0x24 ] 0x2
je r-xdata
mov edx [ ecx + 0x20 ]
mov edx [ edx ]
test edx edx
je r-xdata
mov esi edi
mov edx [ eax ]
test edx edx
je r-xdata
test esi esi
jl r-xdata
test esi esi
jl r-xdata
mov eax [ ecx + 0x10 ]
mov eax [ eax ]
mov ebx [ ecx + 0x3c ]
sub ebx eax
cmp esi ebx
jg r-xdata
mov eax [ ecx + 0x10 ]
mov eax [ eax ]
mov ebx [ ecx + 0x3c ]
sub ebx eax
cmp esi ebx
jg r-xdata
sub eax edx
mov edx [ ecx + 0x30 ]
add eax esi
sub [ edx ] eax
mov edx [ ecx + 0x20 ]
add [ edx ] eax
test [ ebp + 0x24 ] 0x2
je r-xdata
sub eax edx
mov edx [ ecx + 0x34 ]
add eax esi
sub [ edx ] eax
mov ecx [ ecx + 0x24 ]
add [ ecx ] eax
jmp r-xdata
pop ebx
mov edx [ ecx + 0x24 ]
mov ebx [ edx ]
test ebx ebx
je r-xdata
mov eax [ ecx + 0x20 ]
mov edi [ eax ]
mov eax [ ecx + 0x34 ]
mov eax [ eax ]
add eax ebx
mov [ edx ] edi
mov ecx [ ecx + 0x34 ]
sub eax edi
mov [ ecx ] eax
jmp r-xdata
sub_10011c3f
push esi
push edi
lea edi [ ecx - 0xc ]
lea esi [ edi + 0xc ]
mov ecx esi
call sub_10011769
push esi
mov [ esi ] r--data
call sub_10022359
test [ esp + 0x10 ] 0x1
pop ecx
je r-xdata
mov eax edi
pop edi
pop esi
retn 0x4
push edi
call sub_10025c9c
pop ecx
sub_10011c8c
push 0x10
mov eax sub_1004e251
call sub_10029e66
mov esi [ ebp + 0x8 ]
push 0x1
push esi
lea eax [ ebp - 0x1c ]
xor ebx ebx
push eax
mov [ ebp - 0x14 ] ebx
mov [ esi + 0x4 ] ebx
call sub_10010a2b
mov [ ebp - 0x4 ] ebx
cmp [ ebp - 0x18 ] bl
je r-xdata
mov eax [ esi ]
mov edx [ eax + 0x4 ]
add edx esi
cmp [ ebp - 0x14 ] ebx
je r-xdata
push [ ebp + 0x10 ]
mov [ ebp - 0x4 ] 0x1
mov eax [ esi ]
mov eax [ eax + 0x4 ]
mov ecx [ eax + esi + 0x28 ]
mov eax [ ecx ]
push 0xffffffff
push [ ebp + 0xc ]
call [ eax + 0x1c ]
add [ esi + 0x4 ] eax
cmp eax [ ebp + 0x10 ]
je r-xdata
or [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp - 0x1c ]
mov ecx [ eax ]
mov ecx [ ecx + 0x4 ]
mov eax [ ecx + eax + 0x28 ]
cmp eax ebx
je r-xdata
push ebx
push [ ebp - 0x14 ]
call sub_10007acb
mov [ ebp - 0x4 ] ebx
jmp r-xdata
mov [ ebp - 0x14 ] 0x3
mov eax esi
call sub_10029f0b
retn 0xc
lea ecx [ eax + 0x4 ]
call sub_100223d4
sub_10011ce5
mov ecx [ ebp + 0x8 ]
mov eax [ ecx ]
mov eax [ eax + 0x4 ]
add eax ecx
mov ecx [ eax + 0x8 ]
xor ebx ebx
or ecx 0x4
cmp [ eax + 0x28 ] ebx
jne r-xdata
push 0x1
push eax
call sub_100079b1
mov [ ebp - 0x4 ] ebx
mov eax r-xdata
retn
or ecx 0x4
sub_10011d50
push 0x4
mov eax sub_1004daad
call sub_10029e33
mov esi [ ebp + 0x8 ]
push [ ebp + 0xc ]
and [ ebp - 0x10 ] 0x0
push esi
call sub_1000d549
mov eax [ esi + 0x8 ]
mov eax [ eax + 0x4 ]
mov [ esi + eax + 0x8 ] r--data
mov eax [ esi ]
mov eax [ eax + 0x4 ]
mov [ esi + eax ] r--data
mov eax esi
call sub_10029f0b
retn 0x8
sub_10011d90
push 0x40
mov eax sub_1004c7f6
call sub_10029e9c
mov eax [ ebp + 0x8 ]
mov edx [ eax + 0x40 ]
xor edi edi
mov [ ebp - 0x4c ] edi
test dl 0x2
jne r-xdata
test dl 0x4
jne r-xdata
mov ecx [ eax + 0x24 ]
cmp [ ecx ] edi
je r-xdata
push edi
lea ecx [ ebp - 0x48 ]
mov [ ebp - 0x30 ] 0xf
call sub_1000237a
lea eax [ ebp - 0x48 ]
push eax
mov ecx ebx
mov [ ebp - 0x4 ] 0x2
call sub_10001c9f
lea ecx [ ebp - 0x48 ]
mov edx [ eax + 0x20 ]
cmp [ edx ] edi
je r-xdata
mov ecx [ ecx ]
mov edx [ eax + 0x3c ]
cmp edx ecx
jb r-xdata
mov ecx [ eax + 0x30 ]
mov ecx [ ecx ]
add ecx [ edx ]
mov eax [ eax + 0x10 ]
mov eax [ eax ]
sub ecx eax
push ecx
push eax
lea ecx [ ebp - 0x2c ]
call sub_100114f7
mov [ ebp - 0x4 ] 0x1
jmp r-xdata
mov eax [ eax + 0x14 ]
mov eax [ eax ]
sub ecx eax
push ecx
push eax
lea ecx [ ebp - 0x2c ]
call sub_100114f7
mov [ ebp - 0x4 ] edi
mov ecx edx
lea eax [ ebp - 0x2c ]
push eax
mov ecx ebx
call sub_10001c9f
lea ecx [ ebp - 0x2c ]
jmp r-xdata
push edi
push 0x1
call sub_100022b5
mov eax ebx
call sub_10029f1f
retn 0x4
sub_10011e46
mov eax [ esi + 0x40 ]
and eax 0x6
cmp al 0x6
je r-xdata
retn 0x4
push edi
push 0x0
push ebx
call sub_10002189
push ebx
push [ esp + 0x14 ]
mov edi eax
push ebx
push edi
call sub_1000235e
add esp 0x18
test [ esi + 0x40 ] 0x4
lea eax [ edi + ebx ]
mov [ esi + 0x3c ] eax
jne r-xdata
mov ecx [ esi + 0x40 ]
test cl 0x2
jne r-xdata
mov ecx [ esi + 0x10 ]
mov [ ecx ] edi
mov ecx [ esi + 0x20 ]
mov [ ecx ] edi
mov ecx [ esi + 0x30 ]
mov [ ecx ] ebx
or [ esi + 0x40 ] 0x1
pop edi
test cl 0x10
jne r-xdata
mov ecx [ esi + 0x14 ]
mov [ ecx ] edi
mov ecx [ esi + 0x24 ]
mov [ ecx ] eax
mov ecx edi
sub ecx eax
mov eax [ esi + 0x34 ]
add ecx ebx
mov [ eax ] ecx
mov eax [ esi + 0x20 ]
cmp [ eax ] 0x0
jne r-xdata
mov eax edi
mov eax [ esi + 0x10 ]
mov [ eax ] edi
mov eax [ esi + 0x20 ]
and [ eax ] 0x0
mov eax [ esi + 0x30 ]
mov [ eax ] edi
sub_10011ee2
push 0x4
mov eax sub_1004bf3e
call sub_10029e66
mov esi ecx
and [ esi ] 0x0
and [ ebp - 0x4 ] 0x0
push 0x10
call sub_10025dd6
pop ecx
test eax eax
je r-xdata
xor eax eax
xor ecx ecx
inc ecx
mov [ eax + 0x4 ] ecx
mov [ eax + 0x8 ] ecx
mov ecx [ ebp + 0x8 ]
mov [ eax ] r--data
mov [ eax + 0xc ] ecx
jmp r-xdata
mov [ esi ] eax
mov eax esi
call sub_10029f0b
retn 0x4
sub_10011f5c
push 0x0
mov eax sub_1004e22e
call sub_10029e33
mov edi [ ebp + 0x8 ]
push 0x4
mov eax edi
call sub_10009936
and [ ebp - 0x4 ] 0x0
push [ ebp + 0xc ]
lea esi [ edi + 0x18 ]
mov [ edi ] r--data
call sub_1001217a
pop ecx
push [ ebp + 0x10 ]
lea ecx [ edi + 0x34 ]
mov [ ebp - 0x4 ] 0x1
call sub_10001fad
mov [ edi + 0x50 ] 0x0
and [ edi + 0x54 ] 0x0
and [ edi + 0x58 ] 0x0
mov eax edi
call sub_10029f0b
retn 0xc
sub_10011fcb
push 0x4
mov eax sub_1004e200
call sub_10029e33
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
mov [ ebp - 0x4 ] 0x3
call sub_10012288
mov [ ebp - 0x4 ] 0x2
mov ecx [ esi + 0x58 ]
test ecx ecx
je r-xdata
push 0x0
push 0x1
lea ecx [ esi + 0x34 ]
call sub_1000247e
push 0x0
push 0x1
lea ecx [ esi + 0x18 ]
call sub_1000247e
or [ ebp - 0x4 ] 0xffffffff
mov ecx esi
call sub_10009970
call sub_10029f0b
retn
call sub_1000990a
sub_10012027
push 0x48
mov eax sub_1004da87
call sub_10029e33
mov ebx ecx
push 0x8
call sub_10025dd6
pop ecx
mov [ ebp - 0x10 ] eax
and [ ebp - 0x4 ] 0x0
test eax eax
je r-xdata
xor esi esi
lea ecx [ ebx + 0x18 ]
push ecx
mov esi eax
call sub_1001759e
mov esi eax
jmp r-xdata
mov ecx [ esi + 0x4 ]
mov eax [ ebp - 0x10 ]
mov [ esi + 0x4 ] eax
test ecx ecx
je r-xdata
mov eax [ ebp - 0x14 ]
mov [ esi ] eax
or [ ebp - 0x4 ] 0xffffffff
push esi
lea ecx [ ebp - 0x18 ]
mov [ ebp - 0x1c ] esi
call sub_10012443
push esi
lea eax [ ebp - 0x1c ]
push esi
push eax
call sub_1002360a
add esp 0xc
mov [ ebp - 0x4 ] 0x1
mov eax [ ebp - 0x1c ]
mov [ ebp - 0x14 ] eax
lea eax [ ebp - 0x18 ]
push eax
lea ecx [ ebp - 0x10 ]
lea esi [ ebx + 0x54 ]
call sub_1000979b
lea eax [ ebp - 0x14 ]
cmp eax esi
je r-xdata
or [ ebp - 0x4 ] 0xffffffff
mov ecx [ ebp - 0x18 ]
test ecx ecx
je r-xdata
call sub_1000990a
push r--data
lea ecx [ ebp - 0x38 ]
call sub_10001b81
lea ecx [ ebp - 0x38 ]
mov [ ebp - 0x4 ] 0x2
mov eax [ esi ]
push ecx
push eax
call sub_10015785
or [ ebp - 0x4 ] 0xffffffff
push 0x0
push 0x1
lea ecx [ ebp - 0x38 ]
mov edi eax
call sub_100022b5
test edi edi
jne r-xdata
call sub_1000990a
mov [ ebx + 0x50 ] 0x1
call edi
lea eax [ ebp - 0x1c ]
cmp eax esi
je r-xdata
push r--data
lea ecx [ ebp - 0x54 ]
call sub_10001b81
lea ecx [ ebp - 0x54 ]
mov [ ebp - 0x4 ] 0x3
mov eax [ esi ]
push ecx
push eax
call sub_10015785
or [ ebp - 0x4 ] 0xffffffff
push 0x0
push 0x1
lea ecx [ ebp - 0x54 ]
mov edi eax
call sub_100022b5
test edi edi
je r-xdata
mov ecx [ esi + 0x4 ]
and [ esi + 0x4 ] 0x0
test ecx ecx
je r-xdata
and [ esi ] 0x0
lea edi [ ebx + 0x34 ]
mov esi r--data
push esi
mov ecx edi
call sub_1000fee8
test eax eax
je r-xdata
xor eax eax
call sub_10029f0b
retn
call sub_1000990a
jmp r-xdata
push esi
mov ecx edi
call sub_100013a5
push edi
call sub_10015cb0
pop ecx
sub_1001217a
push 0x118
mov eax sub_1004e1af
call sub_10029e9c
mov eax [ ebp + 0x8 ]
xor edi edi
mov [ ebp - 0x4 ] edi
mov [ ebp - 0x38 ] edi
mov [ ebp - 0x3c ] esi
mov [ ebp - 0x34 ] eax
cmp [ eax + 0x14 ] edi
ja r-xdata
push r--data
lea ecx [ ebp - 0x74 ]
call sub_10001254
lea eax [ ebp - 0x30 ]
push eax
lea ebx [ ebp - 0x74 ]
mov [ ebp - 0x4 ] 0x2
call sub_100159c5
pop ecx
push edi
xor edi edi
inc edi
push edi
mov ecx ebx
mov [ ebp - 0x4 ] 0x4
call sub_1000247e
lea ecx [ ebp - 0x30 ]
lea ebx [ ebp - 0x58 ]
call sub_10015b90
push r--data
push eax
push esi
mov [ ebp - 0x4 ] 0x5
call sub_10008f70
add esp 0xc
push 0x0
push edi
mov ecx ebx
mov [ ebp - 0x38 ] edi
mov [ ebp - 0x4 ] 0x4
call sub_1000247e
cmp [ esi + 0x18 ] 0x8
jb r-xdata
push r--data
lea ecx [ ebp - 0x58 ]
call sub_10001b81
lea eax [ ebp - 0x58 ]
push eax
lea ecx [ ebp - 0x9c ]
mov [ ebp - 0x4 ] 0x1
call sub_100078c4
push r--data
lea eax [ ebp - 0x9c ]
push eax
call sub_10029a01
lea eax [ esi + 0x4 ]
mov eax [ esi + 0x4 ]
jmp r-xdata
push eax
lea eax [ ebp - 0x124 ]
push eax
push 0x22
pop ecx
call sub_1000d3eb
push [ ebp - 0x34 ]
lea eax [ ebp - 0x124 ]
push eax
mov [ ebp - 0x4 ] 0x6
call sub_100122ca
pop ecx
pop ecx
lea eax [ ebp - 0x124 ]
mov [ ebp - 0x4 ] 0x4
call sub_1000c6c4
push 0x0
push edi
lea ecx [ ebp - 0x30 ]
call sub_1000247e
mov eax esi
call sub_10029f1f
retn
sub_10012288
push 0x4
mov eax sub_1004da4a
call sub_10029e66
mov esi ecx
and [ ebp - 0x4 ] 0x0
lea eax [ esi + 0x18 ]
push eax
call sub_10015cb0
pop ecx
add esi 0x34
push r--data
mov ecx esi
call sub_1000fee8
test eax eax
je r-xdata
call sub_10029f0b
retn
push esi
call sub_10015cb0
pop ecx
sub_100122ca
push 0x1c
mov eax sub_1004e150
call sub_10029e66
mov esi [ ebp + 0x8 ]
mov eax [ ebp + 0xc ]
mov ecx [ eax + 0x14 ]
mov eax [ esi ]
mov eax [ eax + 0x4 ]
mov eax [ eax + esi + 0x18 ]
xor ebx ebx
cmp eax ebx
mov [ ebp - 0x14 ] ebx
mov [ ebp - 0x20 ] ecx
jle r-xdata
mov [ ebp - 0x18 ] ebx
cmp eax ecx
jbe r-xdata
mov [ ebp - 0x4 ] 0x1
mov eax [ esi ]
mov eax [ eax + 0x4 ]
mov eax [ eax + esi + 0x10 ]
and eax 0x1c0
cmp eax 0x40
je r-xdata
mov [ ebp - 0x14 ] 0x4
jmp r-xdata
sub eax ecx
mov [ ebp - 0x18 ] eax
jmp r-xdata
xor edi edi
cmp [ ebp - 0x18 ] ebx
jbe r-xdata
mov eax [ esi ]
mov edx [ eax + 0x4 ]
add edx esi
cmp [ ebp - 0x14 ] ebx
je r-xdata
lea eax [ ebp - 0x28 ]
push eax
mov edi esi
call sub_10010b15
mov [ ebp - 0x4 ] ebx
cmp [ ebp - 0x24 ] 0x0
jne r-xdata
cmp [ ebp - 0x14 ] ebx
jne r-xdata
mov eax [ esi ]
mov eax [ eax + 0x4 ]
mov ebx [ eax + esi + 0x28 ]
mov eax [ ebp + 0xc ]
call sub_100124a0
movzx eax [ eax ]
push eax
mov ecx ebx
call sub_10010315
cmp eax 0xffffffff
jne r-xdata
cmp [ ebp - 0x14 ] ebx
jne r-xdata
mov eax [ esi ]
mov eax [ eax + 0x4 ]
add eax esi
mov cl [ eax + 0x30 ]
mov eax [ eax + 0x28 ]
mov [ ebp - 0x1c ] cl
push [ ebp - 0x1c ]
mov ecx eax
call sub_10010315
cmp eax 0xffffffff
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea eax [ ebp - 0x28 ]
push eax
call sub_10010a9e
mov eax esi
call sub_10029f0b
retn
push ebx
push [ ebp - 0x14 ]
call sub_10007acb
mov eax [ esi ]
mov eax [ eax + 0x4 ]
add eax esi
mov [ eax + 0x18 ] ebx
mov [ ebp - 0x4 ] ebx
cmp [ ebp - 0x18 ] ebx
jbe r-xdata
inc edi
xor ebx ebx
jmp r-xdata
or [ ebp - 0x14 ] 0x4
xor ebx ebx
dec [ ebp - 0x18 ]
jmp r-xdata
or [ ebp - 0x14 ] 0x4
mov eax [ esi ]
mov eax [ eax + 0x4 ]
add eax esi
mov cl [ eax + 0x30 ]
mov eax [ eax + 0x28 ]
mov [ ebp + 0xc ] cl
push [ ebp + 0xc ]
mov ecx eax
call sub_10010315
cmp eax 0xffffffff
jne r-xdata
cmp edi [ ebp - 0x20 ]
jae r-xdata
dec [ ebp - 0x18 ]
jmp r-xdata
or [ ebp - 0x14 ] 0x4
sub_10012411
mov ecx [ ebp + 0x8 ]
mov eax [ ecx ]
mov eax [ eax + 0x4 ]
add eax ecx
mov ecx [ eax + 0x8 ]
or ecx 0x4
cmp [ eax + 0x28 ] 0x0
jne r-xdata
push 0x1
push eax
call sub_100079b1
and [ ebp - 0x4 ] 0x0
mov eax r-xdata
retn
or ecx 0x4
sub_10012443
push 0x4
mov eax sub_1004bf23
call sub_10029e66
mov esi ecx
and [ esi ] 0x0
and [ ebp - 0x4 ] 0x0
push 0x10
call sub_10025dd6
pop ecx
test eax eax
je r-xdata
xor eax eax
xor ecx ecx
inc ecx
mov [ eax + 0x4 ] ecx
mov [ eax + 0x8 ] ecx
mov ecx [ ebp + 0x8 ]
mov [ eax ] r--data
mov [ eax + 0xc ] ecx
jmp r-xdata
mov [ esi ] eax
mov eax esi
call sub_10029f0b
retn 0x4
sub_100124a0
push esi
mov esi eax
cmp edi [ esi + 0x14 ]
jbe r-xdata
cmp [ esi + 0x18 ] 0x10
jb r-xdata
call sub_100261ef
add esi 0x4
mov esi [ esi + 0x4 ]
jmp r-xdata
lea eax [ esi + edi ]
pop esi
retn
sub_100124dc
push 0x4
mov eax sub_1004e12b
call sub_10029e33
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
and [ ebp - 0x4 ] 0x0
lea eax [ esi + 0x18 ]
push eax
call sub_10008ad1
or [ ebp - 0x4 ] 0xffffffff
mov ecx esi
call sub_10009970
call sub_10029f0b
retn
sub_10012511
push 0x44
mov eax sub_1004de8f
call sub_10029e33
and [ ebp - 0x4 ] 0x0
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
lea eax [ ebp + 0x8 ]
push eax
lea eax [ esi + 0x18 ]
call sub_10008af9
push [ ebp + 0x8 ]
call sub_10014b90
mov al [ esi + 0xd ]
test al al
jne r-xdata
push r--data
lea ecx [ ebp - 0x28 ]
call sub_10001b81
lea eax [ ebp - 0x28 ]
push eax
lea ecx [ ebp - 0x50 ]
mov [ ebp - 0x4 ] 0x1
call sub_100078c4
push r--data
lea eax [ ebp - 0x50 ]
push eax
call sub_10029a01
or [ ebp - 0x4 ] 0xffffffff
mov ecx [ ebp + 0xc ]
test ecx ecx
je r-xdata
push esi
call sub_10014b90
call sub_10029f0b
retn 0x8
call sub_1000990a
sub_1001258b
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x24
push ebx
push esi
push edi
lea edi [ ecx + 0x18 ]
call sub_100261ef
cmp eax [ esp + 0x28 ]
je r-xdata
push 0x64
call [ Sleep@IAT ]
jmp r-xdata
lea esi [ esp + 0x18 ]
call sub_1000a447
mov eax [ eax ]
cmp [ eax + 0x50 ] 0x1
jne r-xdata
mov eax [ esp + 0x1c ]
cmp eax [ esp + 0x2c ]
je r-xdata
mov ebx [ edi + 0xc ]
lea esi [ esp + 0x20 ]
call sub_10001807
mov eax [ esp + 0x20 ]
mov [ esp + 0x18 ] eax
mov eax [ esp + 0x24 ]
mov [ esp + 0x1c ] eax
lea esi [ esp + 0x18 ]
call sub_1000a46f
jmp r-xdata
mov al [ eax + 0xc ]
cmp al 0x1
je r-xdata
mov ebx [ edi + 0x10 ]
lea esi [ esp + 0x28 ]
call sub_10001807
mov eax [ esp + 0x18 ]
test eax eax
je r-xdata
mov ecx [ esp + 0x1c ]
mov eax [ edi + 0x10 ]
lea ebx [ ecx + 0x8 ]
mov [ esp + 0x10 ] eax
cmp ebx eax
je r-xdata
mov eax [ edi + 0x10 ]
push eax
add eax 0xfffffff8
call sub_10008c54
mov ebx [ esp + 0x1c ]
add [ edi + 0x10 ] 0xfffffff8
lea esi [ esp + 0x10 ]
call sub_10001807
mov [ esp + 0xc ] ecx
sub [ esp + 0xc ] ebx
mov eax [ esp + 0xc ]
lea esi [ eax + ebx ]
mov eax ebx
call sub_100090a8
add ebx 0x8
cmp ebx [ esp + 0x10 ]
jne r-xdata
sub_1001265d
push 0x0
mov eax sub_1004cd0f
call sub_10029e33
and [ ebp - 0x4 ] 0x0
lea eax [ ebp + 0x8 ]
push eax
lea ecx [ esi + 0x4 ]
mov [ esi ] r--data
call sub_10001fad
push 0x0
push 0x1
lea ecx [ ebp + 0x8 ]
call sub_1000247e
mov eax esi
call sub_10029f0b
retn 0x1c
sub_100126c4
push 0x2e4
mov eax sub_1004da22
call sub_10029e9c
xor esi esi
push r--data
lea ecx [ ebp - 0x2d4 ]
mov [ ebp - 0x2b4 ] edi
mov [ ebp - 0x2a0 ] esi
call sub_10001254
lea eax [ ebp - 0x4c ]
push eax
lea ebx [ ebp - 0x2d4 ]
mov [ ebp - 0x4 ] 0x1
call sub_100159c5
pop ecx
xor ebx ebx
push esi
inc ebx
push ebx
lea ecx [ ebp - 0x2d4 ]
mov [ ebp - 0x4 ] 0x3
call sub_1000247e
push r--data
lea eax [ ebp - 0x4c ]
push eax
lea eax [ ebp - 0x2f0 ]
push eax
call sub_10008f70
push r--data
push eax
lea eax [ ebp - 0x30 ]
push eax
mov [ ebp - 0x4 ] 0x4
call sub_10008f70
add esp 0x18
push esi
push ebx
lea ecx [ ebp - 0x2f0 ]
mov [ ebp - 0x4 ] 0x6
call sub_1000247e
push 0x24c
lea eax [ ebp - 0x298 ]
push esi
push eax
mov [ ebp - 0x29c ] 0x250
call sub_10026630
mov eax [ ebp - 0x2c ]
add esp 0xc
cmp [ ebp - 0x18 ] 0x8
jae r-xdata
lea ecx [ ebp - 0x29c ]
push ecx
push eax
call [ FindFirstFileW@IAT ]
mov [ ebp - 0x2b0 ] eax
cmp eax 0xffffffff
jne r-xdata
lea eax [ ebp - 0x2c ]
push 0x20
call sub_10025dd6
pop ecx
mov [ ebp - 0x2ac ] eax
mov [ ebp - 0x4 ] 0x7
cmp eax esi
je r-xdata
mov [ edi ] esi
mov [ edi + 0x4 ] esi
push esi
push ebx
lea ecx [ ebp - 0x30 ]
call sub_1000247e
push esi
push ebx
jmp r-xdata
xor ebx ebx
push r--data
lea eax [ ebp - 0x4c ]
push eax
lea eax [ ebp - 0x2d4 ]
push eax
call sub_10008f70
sub esp 0x10
mov ecx esp
mov [ ebp - 0x2b8 ] esp
lea edx [ ebp - 0x270 ]
push edx
push eax
mov [ ebp - 0x4 ] 0x8
push ecx
mov [ ebp - 0x2a0 ] 0x2
call sub_10008f70
mov esi [ ebp - 0x2ac ]
add esp 0xc
call sub_1001265d
mov ebx eax
xor esi esi
jmp r-xdata
lea ecx [ ebp - 0x4c ]
call sub_1000247e
mov eax edi
call sub_10029f1f
retn
push [ ebp - 0x2b0 ]
call [ FindClose@IAT ]
mov eax [ ebp - 0x2a8 ]
mov [ edi ] eax
lea eax [ ebp - 0x2a4 ]
push eax
lea ecx [ edi + 0x4 ]
call sub_1000979b
mov ecx [ ebp - 0x2a4 ]
or [ ebp - 0x2a0 ] 0x1
cmp ecx esi
je r-xdata
and [ ebp - 0x2a0 ] 0xfffffffd
push esi
push 0x1
lea ecx [ ebp - 0x2d4 ]
call sub_1000247e
mov [ ebp - 0x4 ] 0x9
push ebx
lea ecx [ ebp - 0x2a4 ]
mov [ ebp - 0x2a8 ] ebx
call sub_10012ac0
push ebx
lea eax [ ebp - 0x2a8 ]
push ebx
push eax
call sub_1002360a
add esp 0xc
mov [ ebp - 0x4 ] 0x6
test [ ebp - 0x2a0 ] 0x2
je r-xdata
push esi
push 0x1
lea ecx [ ebp - 0x30 ]
call sub_1000247e
push esi
push 0x1
call sub_1000990a
sub_100128c0
push 0xb4
mov eax sub_1004ea5c
call sub_10029e33
mov esi ecx
xor ebx ebx
mov ecx edi
mov [ ebp - 0x18 ] edi
mov [ ebp - 0x10 ] ebx
call sub_10007bb4
mov [ ebp - 0x4 ] ebx
cmp [ esi + 0x1c ] 0x8
mov [ ebp - 0x10 ] 0x1
jb r-xdata
add esi 0x8
mov esi [ esi + 0x8 ]
jmp r-xdata
lea eax [ ebp - 0xa8 ]
mov [ ebp - 0x4 ] bl
call sub_1000c5dd
mov eax edi
call sub_10029f0b
retn
lea esi [ ebp - 0xa8 ]
call sub_10012a15
lea esi [ ebp - 0xc0 ]
lea eax [ ebp - 0xa8 ]
call sub_10012a8b
mov esi [ eax + 0x8 ]
add esi [ eax ]
sub esp 0x18
mov eax esp
mov [ eax ] ebx
mov [ eax + 0x8 ] ebx
mov [ eax + 0xc ] ebx
mov [ eax + 0x10 ] ebx
lea ebx [ ebp - 0xa8 ]
mov [ ebp - 0x14 ] esp
call sub_1001298e
push 0x0
push esi
mov ecx edi
call sub_1001151d
cmp [ edi + 0x18 ] 0x10
jb r-xdata
push esi
lea eax [ ebp - 0xa8 ]
push eax
call sub_1000cc3d
mov [ ebp - 0x4 ] 0x1
cmp [ ebp - 0x54 ] ebx
je r-xdata
lea eax [ edi + 0x4 ]
mov eax [ edi + 0x4 ]
jmp r-xdata
push esi
push eax
lea eax [ ebp - 0xa8 ]
push eax
call sub_10011c8c
xor ebx ebx
sub_1001298e
push ebp
mov ebp esp
and esp 0xfffffff8
mov eax [ ebx ]
mov edx [ eax + 0x4 ]
sub esp 0x18
push esi
push edi
push 0x6
pop ecx
test [ edx + ebx + 0x8 ] cl
jne r-xdata
mov eax [ ebx ]
mov eax [ eax + 0x4 ]
add eax ebx
mov ecx [ eax + 0x28 ]
neg ecx
sbb ecx ecx
and ecx 0xfffffffc
add ecx 0x4
push 0x1
sub esp 0x18
mov edi esp
mov eax edx
mov eax [ eax + ebx + 0x28 ]
mov edx [ eax ]
lea esi [ ebp + 0x8 ]
[ edi ] [ esi ]
lea ecx [ esp + 0x24 ]
push ecx
mov ecx eax
call [ edx + 0x28 ]
mov eax [ esp + 0x8 ]
mov ecx [ esp + 0x10 ]
add ecx eax
cmp ecx [ r--data ]
jne r-xdata
mov eax [ ebx ]
mov eax [ eax + 0x4 ]
add eax ebx
mov ecx [ eax + 0x8 ]
or ecx 0x2
cmp [ eax + 0x28 ] 0x0
jne r-xdata
push 0x0
push eax
call sub_100079b1
pop edi
mov eax ebx
pop esi
mov esp ebp
pop ebp
retn 0x18
or ecx 0x4
jmp r-xdata
sub_10012a15
push ebp
mov ebp esp
and esp 0xfffffff8
mov eax [ esi ]
mov ecx [ eax + 0x4 ]
sub esp 0x18
test [ ecx + esi + 0x8 ] 0x6
jne r-xdata
mov eax [ esi ]
mov eax [ eax + 0x4 ]
add eax esi
mov ecx [ eax + 0x28 ]
neg ecx
sbb ecx ecx
and ecx 0xfffffffc
add ecx 0x4
push 0x1
mov eax ecx
mov ecx [ eax + esi + 0x28 ]
mov eax [ ecx ]
push 0x2
push 0x0
lea edx [ esp + 0xc ]
push edx
call [ eax + 0x24 ]
mov eax [ esp ]
mov ecx [ esp + 0x8 ]
add ecx eax
cmp ecx [ r--data ]
jne r-xdata
mov eax [ esi ]
mov eax [ eax + 0x4 ]
add eax esi
mov ecx [ eax + 0x8 ]
or ecx 0x2
cmp [ eax + 0x28 ] 0x0
jne r-xdata
push 0x0
push eax
call sub_100079b1
mov eax esi
mov esp ebp
pop ebp
retn
or ecx 0x4
jmp r-xdata
sub_10012a8b
mov ecx [ eax ]
mov ecx [ ecx + 0x4 ]
add eax ecx
test [ eax + 0x8 ] 0x6
jne r-xdata
mov eax [ r--data ]
mov [ esi ] eax
xor eax eax
mov [ esi + 0x8 ] eax
mov [ esi + 0xc ] eax
mov [ esi + 0x10 ] eax
mov eax [ eax + 0x28 ]
mov edx [ eax ]
push 0x1
push 0x1
push 0x0
push esi
mov ecx eax
call [ edx + 0x24 ]
jmp r-xdata
mov eax esi
retn
sub_10012ac0
push 0x4
mov eax sub_1004bf08
call sub_10029e66
mov esi ecx
and [ esi ] 0x0
and [ ebp - 0x4 ] 0x0
push 0x10
call sub_10025dd6
pop ecx
test eax eax
je r-xdata
xor eax eax
xor ecx ecx
inc ecx
mov [ eax + 0x4 ] ecx
mov [ eax + 0x8 ] ecx
mov ecx [ ebp + 0x8 ]
mov [ eax ] r--data
mov [ eax + 0xc ] ecx
jmp r-xdata
mov [ esi ] eax
mov eax esi
call sub_10029f0b
retn 0x4
sub_10012b41
push 0x4
mov eax sub_1004d2be
call sub_10029e33
mov edi ecx
mov esi [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
lea eax [ edi + 0x70 ]
push eax
lea ecx [ esi + 0x4 ]
mov [ esi ] r--data
call sub_10001c9f
push [ ebp + 0xc ]
lea ecx [ esi + 0x20 ]
mov [ ebp - 0x4 ] 0x1
call sub_10001fad
push r--data
lea ecx [ esi + 0x3c ]
mov [ ebp - 0x4 ] 0x2
call sub_10001254
push r--data
lea ecx [ esi + 0x58 ]
mov [ ebp - 0x4 ] 0x3
call sub_10001254
lea eax [ edi + 0x8c ]
push eax
lea eax [ esi + 0x74 ]
push eax
mov [ ebp - 0x4 ] 0x4
call sub_10001276
add edi 0xc0
push edi
lea ecx [ esi + 0x8c ]
mov [ ebp - 0x4 ] 0x5
call sub_10001fad
mov eax esi
call sub_10029f0b
retn 0x8
sub_10012be9
push ebx
push esi
push edi
mov edi ecx
xor ebx ebx
push ebx
push 0x1
lea ecx [ edi + 0x8c ]
mov [ edi ] r--data
call sub_1000247e
lea esi [ edi + 0x74 ]
call sub_10001477
push [ esi ]
call sub_10025c9c
pop ecx
push ebx
push 0x1
lea ecx [ edi + 0x58 ]
call sub_1000247e
push ebx
push 0x1
lea ecx [ edi + 0x3c ]
call sub_1000247e
push ebx
push 0x1
lea ecx [ edi + 0x20 ]
call sub_1000247e
push ebx
push 0x1
lea ecx [ edi + 0x4 ]
call sub_100022b5
mov [ edi ] r--data
pop edi
pop esi
pop ebx
retn
sub_10012c4a
push ebp
sub esp 0xe4
lea ebp [ esp - 0x4 ]
mov eax [ rw-data ]
xor eax ebp
mov [ ebp + 0xe4 ] eax
push 0x98
mov eax sub_1004ea0d
call sub_10029e66
mov eax [ ebp + 0xf0 ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp + 0xf4 ]
mov esi ecx
mov [ ebp - 0x24 ] eax
lea eax [ esi + 0x74 ]
push eax
lea eax [ ebp - 0x5c ]
push eax
mov [ ebp - 0x20 ] esi
mov [ ebp - 0x60 ] r--data
call sub_10001276
xor ebx ebx
push ebx
push 0x1
mov [ ebp - 0x4 ] ebx
call sub_10001ad5
pop ecx
pop ecx
cmp eax ebx
je r-xdata
xor eax eax
lea ecx [ ebp - 0x44 ]
mov [ eax ] ecx
jmp r-xdata
cmp [ ebp - 0x11 ] 0x1
je r-xdata
cmp [ ebp - 0x18 ] ebx
je r-xdata
mov [ ebp - 0x44 ] eax
mov [ ebp - 0x34 ] ebx
mov [ ebp - 0x30 ] ebx
mov [ ebp - 0x2c ] ebx
mov [ ebp - 0x28 ] ebx
push ebx
mov [ ebp - 0x4 ] 0x1
call sub_10027d88
push eax
call sub_10027d2a
pop ecx
pop ecx
lea eax [ ebp - 0x60 ]
call sub_10012f68
mov [ ebp - 0x4 ] 0x2
mov [ ebp - 0x11 ] bl
mov [ ebp - 0x18 ] ebx
lea ecx [ ebp - 0x60 ]
call sub_10012ea4
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp + 0xe4 ]
xor ecx ebp
call sub_10025c8d
add ebp 0xe8
leave
retn 0x8
push r--data
lea ecx [ ebp - 0x7c ]
call sub_10001b81
lea eax [ ebp - 0x7c ]
push eax
lea ecx [ ebp - 0xa4 ]
mov [ ebp - 0x4 ] 0x9
call sub_100078c4
push r--data
lea eax [ ebp - 0xa4 ]
push eax
call sub_10029a01
int3
lea ecx [ ebp + 0xac ]
lea edx [ ebp - 0x60 ]
mov [ ebp - 0x4 ] 0x3
call sub_10012ec7
lea eax [ esi + 0x8c ]
push eax
lea eax [ ebp + 0xac ]
push eax
lea eax [ esi + 0x58 ]
push eax
lea eax [ esi + 0x3c ]
push eax
lea eax [ esi + 0x20 ]
push eax
lea eax [ esi + 0x4 ]
push eax
lea eax [ ebp ]
push eax
mov [ ebp - 0x4 ] 0x4
call sub_10013c3d
push ebx
lea ecx [ ebp + 0xc8 ]
mov [ ebp + 0xe0 ] 0xf
call sub_1000237a
mov [ ebp - 0x4 ] 0x6
cmp [ ebp - 0x11 ] bl
jne r-xdata
push 0x2bf20
call [ Sleep@IAT ]
push r--data
lea ecx [ ebp - 0x7c ]
call sub_10001b81
lea eax [ ebp + 0xc8 ]
push eax
lea eax [ ebp - 0x7c ]
push eax
lea ecx [ ebp ]
mov [ ebp - 0x4 ] 0x7
call sub_10013d2e
push ebx
push 0x1
lea ecx [ ebp - 0x7c ]
mov [ ebp - 0x4 ] 0x6
call sub_100022b5
lea eax [ ebp + 0xc8 ]
push eax
push [ ebp - 0x1c ]
lea ecx [ ebp ]
call sub_10013d2e
jmp r-xdata
push ebx
push 0x1
lea ecx [ ebp + 0xc8 ]
mov [ ebp - 0x11 ] 0x1
call sub_100022b5
lea ecx [ ebp ]
call sub_10013cd5
push ebx
push 0x1
lea ecx [ ebp + 0xac ]
call sub_1000247e
mov [ ebp - 0x4 ] 0x2
jmp r-xdata
mov ecx [ ebp - 0x24 ]
push 0xffffffff
push ebx
lea eax [ ebp + 0xc8 ]
push eax
call sub_10002099
push ebx
push 0x1
lea ecx [ ebp + 0xc8 ]
call sub_100022b5
lea ecx [ ebp ]
call sub_10013cd5
push ebx
push 0x1
lea ecx [ ebp + 0xac ]
call sub_1000247e
cmp [ ebp + 0xdc ] ebx
jbe r-xdata
inc [ ebp - 0x18 ]
jmp r-xdata
mov eax [ ebp - 0x4c ]
sub eax [ ebp - 0x50 ]
push 0x1c
cdq
pop ecx
idiv ecx
cmp [ ebp - 0x18 ] eax
jae r-xdata
sub_10012e5f
mov esi [ ebp - 0x20 ]
xor ebx ebx
mov eax [ ebp - 0x4c ]
sub eax [ ebp - 0x50 ]
push 0x1c
cdq
pop ecx
idiv ecx
cmp [ ebp - 0x18 ] eax
jae r-xdata
cmp [ ebp - 0x11 ] 0x1
je r-xdata
cmp [ ebp - 0x18 ] ebx
je r-xdata
lea ecx [ ebp - 0x60 ]
call sub_10012ea4
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp + 0xe4 ]
xor ecx ebp
call sub_10025c8d
add ebp 0xe8
leave
retn 0x8
push r--data
lea ecx [ ebp - 0x7c ]
call sub_10001b81
lea eax [ ebp - 0x7c ]
push eax
lea ecx [ ebp - 0xa4 ]
mov [ ebp - 0x4 ] 0x9
call sub_100078c4
push r--data
lea eax [ ebp - 0xa4 ]
push eax
call sub_10029a01
int3
lea ecx [ ebp + 0xac ]
lea edx [ ebp - 0x60 ]
mov [ ebp - 0x4 ] 0x3
call sub_10012ec7
lea eax [ esi + 0x8c ]
push eax
lea eax [ ebp + 0xac ]
push eax
lea eax [ esi + 0x58 ]
push eax
lea eax [ esi + 0x3c ]
push eax
lea eax [ esi + 0x20 ]
push eax
lea eax [ esi + 0x4 ]
push eax
lea eax [ ebp ]
push eax
mov [ ebp - 0x4 ] 0x4
call sub_10013c3d
push ebx
lea ecx [ ebp + 0xc8 ]
mov [ ebp + 0xe0 ] 0xf
call sub_1000237a
mov [ ebp - 0x4 ] 0x6
cmp [ ebp - 0x11 ] bl
jne r-xdata
push 0x2bf20
call [ Sleep@IAT ]
push r--data
lea ecx [ ebp - 0x7c ]
call sub_10001b81
lea eax [ ebp + 0xc8 ]
push eax
lea eax [ ebp - 0x7c ]
push eax
lea ecx [ ebp ]
mov [ ebp - 0x4 ] 0x7
call sub_10013d2e
push ebx
push 0x1
lea ecx [ ebp - 0x7c ]
mov [ ebp - 0x4 ] 0x6
call sub_100022b5
lea eax [ ebp + 0xc8 ]
push eax
push [ ebp - 0x1c ]
lea ecx [ ebp ]
call sub_10013d2e
jmp r-xdata
push ebx
push 0x1
lea ecx [ ebp + 0xc8 ]
mov [ ebp - 0x11 ] 0x1
call sub_100022b5
lea ecx [ ebp ]
call sub_10013cd5
push ebx
push 0x1
lea ecx [ ebp + 0xac ]
call sub_1000247e
mov [ ebp - 0x4 ] 0x2
jmp r-xdata
mov ecx [ ebp - 0x24 ]
push 0xffffffff
push ebx
lea eax [ ebp + 0xc8 ]
push eax
call sub_10002099
push ebx
push 0x1
lea ecx [ ebp + 0xc8 ]
call sub_100022b5
lea ecx [ ebp ]
call sub_10013cd5
push ebx
push 0x1
lea ecx [ ebp + 0xac ]
call sub_1000247e
cmp [ ebp + 0xdc ] ebx
jbe r-xdata
inc [ ebp - 0x18 ]
jmp r-xdata
sub_10012ec7
push 0x18
mov eax sub_1004d264
call sub_10029e33
xor eax eax
mov [ ebp - 0x4 ] eax
mov esi edx
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x18 ] ecx
cmp [ esi + 0x38 ] eax
jne r-xdata
mov edi [ esi + 0x38 ]
call sub_10027d3c
xor edx edx
div edi
mov ebx [ esi + 0x34 ]
add esi 0x1c
lea edi [ ebp - 0x14 ]
mov [ ebp - 0x20 ] esi
mov [ ebp - 0x24 ] edx
call sub_1001325d
mov ebx [ ebp - 0x24 ]
mov esi edi
call sub_10013283
mov eax edi
call sub_100130d1
mov ecx [ ebp - 0x18 ]
push eax
call sub_10001fad
and [ ebp - 0x4 ] 0x0
push [ ebp - 0x10 ]
lea eax [ ebp - 0x14 ]
push [ ebp - 0x14 ]
mov [ ebp - 0x1c ] 0x1
push eax
push [ ebp - 0x20 ]
call sub_1001308c
mov eax [ ebp - 0x18 ]
call sub_10029f0b
retn
mov eax esi
call sub_10012f68
sub_10012f68
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x2c
push ebx
push esi
mov esi eax
lea ecx [ esi + 0x4 ]
mov eax [ ecx + 0x10 ]
sub eax [ ecx + 0xc ]
push edi
push 0x1c
mov [ esp + 0x14 ] ecx
pop ecx
cdq
idiv ecx
sub esp 0x1c
mov ecx esp
mov [ esp + 0x34 ] esp
mov edi eax
call sub_10001ac0
add esi 0x1c
push edi
mov ecx esi
call sub_100132cf
mov ebx [ esi + 0x18 ]
lea edi [ esp + 0x20 ]
call sub_1001325d
mov edi [ esp + 0x10 ]
mov ebx [ edi + 0x10 ]
lea esi [ esp + 0x28 ]
call sub_10001807
mov ebx [ edi + 0xc ]
lea esi [ esp + 0x10 ]
call sub_10001807
mov eax [ esp + 0x24 ]
mov [ esp + 0x1c ] eax
mov eax [ esp + 0x2c ]
sub eax [ esp + 0x14 ]
push 0x1c
cdq
pop ecx
idiv ecx
mov esi [ esp + 0x20 ]
lea edi [ esp + 0x30 ]
mov [ esp + 0x18 ] esi
mov ebx eax
lea eax [ esp + 0x18 ]
call sub_100133c3
test esi esi
je r-xdata
xor esi esi
mov esi [ esi ]
jmp r-xdata
cmp esi [ esp + 0x2c ]
jne r-xdata
mov eax [ esi ]
mov esi [ esp + 0x14 ]
mov [ esp + 0x18 ] eax
mov eax [ esp + 0x24 ]
mov [ esp + 0x1c ] eax
jmp r-xdata
lea eax [ esp + 0x18 ]
call sub_100130d1
push 0xffffffff
push 0x0
push esi
mov ecx eax
call sub_10001f1a
inc [ esp + 0x1c ]
add esi 0x1c
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_10013040
push ebx
push esi
mov esi eax
xor ebx ebx
jmp r-xdata
cmp [ esi + 0x1c ] ebx
jne r-xdata
call sub_10013393
push edi
mov edi [ esi + 0x14 ]
jmp r-xdata
mov eax [ esi + 0x10 ]
cmp edi ebx
ja r-xdata
dec edi
lea eax [ eax + edi * 4 ]
cmp [ eax ] ebx
je r-xdata
pop edi
cmp eax ebx
je r-xdata
push [ eax ]
call sub_10025c9c
pop ecx
push [ esi ]
mov [ esi + 0x14 ] ebx
mov [ esi + 0x10 ] ebx
call sub_10025c9c
pop ecx
pop esi
pop ebx
retn
push eax
call sub_10025c9c
pop ecx
sub_1001308c
push ebp
mov ebp esp
and esp 0xfffffff8
push ecx
push ecx
mov eax [ ebp + 0x10 ]
push ebx
mov [ esp + 0x4 ] eax
mov eax [ ebp + 0x14 ]
push esi
xor ebx ebx
inc ebx
lea esi [ esp + 0x8 ]
mov [ esp + 0xc ] eax
call sub_10013283
push [ eax + 0x4 ]
push [ eax ]
mov eax [ ebp + 0x8 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call sub_1001313a
mov eax [ ebp + 0xc ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
sub_100130d1
push esi
mov esi eax
mov eax [ esi ]
push edi
mov edi [ esi + 0x4 ]
test eax eax
jne r-xdata
mov ecx [ eax ]
jmp r-xdata
call sub_100261ef
mov eax [ esi ]
test eax eax
je r-xdata
test eax eax
je r-xdata
xor ecx ecx
xor eax eax
mov eax [ eax ]
jmp r-xdata
mov esi [ esi ]
test esi esi
je r-xdata
call sub_100261ef
mov eax [ eax + 0x1c ]
add eax [ ecx + 0x18 ]
cmp [ esi + 0x4 ] eax
jb r-xdata
xor eax eax
mov eax [ esi ]
jmp r-xdata
test esi esi
je r-xdata
test esi esi
je r-xdata
cmp [ eax + 0x14 ] edi
ja r-xdata
xor esi esi
mov esi [ esi ]
jmp r-xdata
xor eax eax
mov eax [ esi ]
jmp r-xdata
mov eax [ esi + 0x10 ]
mov eax [ eax + edi * 4 ]
pop edi
pop esi
retn
sub edi [ eax + 0x14 ]
sub_1001313a
push ebp
mov ebp esp
sub esp 0x28
push ebx
mov ebx [ ebp + 0x10 ]
push esi
push edi
mov esi eax
lea edi [ ebp - 0x20 ]
call sub_1001325d
mov ebx [ ebp + 0x18 ]
lea edi [ ebp - 0x18 ]
call sub_1001325d
mov ebx [ esi + 0x18 ]
lea edi [ ebp - 0x10 ]
call sub_1001325d
mov ebx [ ebp - 0x20 ]
test ebx ebx
je r-xdata
call sub_100261ef
cmp ebx [ ebp - 0x10 ]
je r-xdata
call sub_100261ef
cmp [ ebp - 0x18 ] ebx
je r-xdata
mov edi [ ebp - 0x1c ]
mov eax edi
sub eax [ ebp - 0xc ]
cmp [ ebp - 0xc ] edi
cmp [ ebp - 0x18 ] 0x0
mov [ ebp - 0xc ] eax
je r-xdata
call sub_100261ef
cmp eax [ ebp - 0x18 ]
je r-xdata
mov ebx [ esi + 0x1c ]
mov eax [ ebp - 0x14 ]
add ebx [ esi + 0x18 ]
sub eax edi
lea edi [ ebp - 0x28 ]
mov [ ebp - 0x8 ] eax
call sub_1001325d
mov eax [ ebp - 0x28 ]
test eax eax
je r-xdata
mov ebx [ esi + 0x1c ]
add ebx [ esi + 0x18 ]
call sub_1001325d
push [ ebp - 0x1c ]
lea eax [ ebp - 0x28 ]
push [ ebp - 0x20 ]
push [ ebp - 0x24 ]
push [ ebp - 0x28 ]
push [ ebp - 0x14 ]
push [ ebp - 0x18 ]
push eax
call sub_100139d6
add esp 0x1c
cmp [ ebp - 0x8 ] 0x0
jbe r-xdata
mov ebx [ esi + 0x18 ]
call sub_1001325d
push [ ebp - 0x14 ]
lea eax [ ebp - 0x28 ]
push [ ebp - 0x18 ]
push [ ebp - 0x1c ]
push [ ebp - 0x20 ]
push [ ebp - 0x24 ]
push [ ebp - 0x28 ]
push eax
call sub_10013981
add esp 0x1c
cmp [ ebp - 0x8 ] 0x0
jbe r-xdata
mov eax [ ebp - 0x24 ]
sub eax [ ebp - 0x14 ]
lea edi [ ebp - 0x28 ]
cmp [ ebp - 0xc ] eax
jae r-xdata
mov ebx [ esi + 0x18 ]
lea edi [ ebp - 0x28 ]
call sub_1001325d
mov ebx [ ebp - 0xc ]
mov edi [ ebp + 0x8 ]
lea eax [ ebp - 0x28 ]
call sub_100133c3
mov eax edi
pop edi
pop esi
pop ebx
leave
retn 0x14
call sub_10013393
dec [ ebp - 0x8 ]
jne r-xdata
call sub_10013362
dec [ ebp - 0x8 ]
jne r-xdata
jmp r-xdata
sub_1001325d
and [ edi ] 0x0
test esi esi
je r-xdata
call sub_100261ef
mov eax [ esi + 0x18 ]
cmp eax ebx
ja r-xdata
mov ecx [ esi + 0x1c ]
add ecx eax
cmp ebx ecx
jbe r-xdata
mov eax [ esi ]
mov [ edi ] eax
mov [ edi + 0x4 ] ebx
mov eax edi
retn
sub_10013283
mov eax [ esi ]
push edi
test eax eax
jne r-xdata
mov edi [ eax ]
jmp r-xdata
call sub_100261ef
mov eax [ esi ]
test eax eax
je r-xdata
test eax eax
je r-xdata
xor edi edi
xor ecx ecx
mov ecx [ eax ]
jmp r-xdata
call sub_100261ef
test eax eax
je r-xdata
mov ecx [ ecx + 0x1c ]
mov edx [ esi + 0x4 ]
add ecx [ edi + 0x18 ]
add edx ebx
pop edi
cmp edx ecx
ja r-xdata
xor eax eax
mov eax [ eax ]
jmp r-xdata
add [ esi + 0x4 ] ebx
mov eax esi
retn
cmp edx [ eax + 0x18 ]
jae r-xdata
sub_100132cf
push 0x1c
mov eax sub_1004d4ff
call sub_10029e33
mov esi ecx
and [ ebp - 0x4 ] 0x0
mov eax [ esi + 0x1c ]
cmp [ ebp + 0x8 ] eax
jbe r-xdata
jae r-xdata
mov ebx [ esi + 0x18 ]
add ebx eax
lea edi [ ebp - 0x18 ]
call sub_1001325d
push [ ebp - 0x14 ]
lea eax [ ebp + 0xc ]
push [ ebp - 0x18 ]
mov ecx esi
push eax
mov eax [ ebp + 0x8 ]
sub eax [ esi + 0x1c ]
push eax
call sub_100133ec
jmp r-xdata
push 0x0
push 0x1
lea ecx [ ebp + 0xc ]
call sub_1000247e
call sub_10029f0b
retn 0x20
mov ebx [ esi + 0x18 ]
add ebx eax
lea edi [ ebp - 0x18 ]
call sub_1001325d
mov ebx [ esi + 0x18 ]
lea edi [ ebp - 0x20 ]
call sub_1001325d
mov ebx [ ebp + 0x8 ]
lea edi [ ebp - 0x28 ]
lea eax [ ebp - 0x20 ]
call sub_100133c3
push [ ebp - 0x14 ]
push [ ebp - 0x18 ]
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0x20 ]
push eax
mov eax esi
call sub_1001313a
sub_10013362
cmp [ esi + 0x1c ] 0x0
je r-xdata
retn
mov eax [ esi + 0x18 ]
mov ecx [ esi + 0x10 ]
mov ecx [ ecx + eax * 4 ]
push 0x0
push 0x1
call sub_1000247e
inc [ esi + 0x18 ]
mov eax [ esi + 0x18 ]
cmp [ esi + 0x14 ] eax
ja r-xdata
dec [ esi + 0x1c ]
jne r-xdata
and [ esi + 0x18 ] 0x0
and [ esi + 0x18 ] 0x0
sub_10013393
mov eax [ esi + 0x1c ]
test eax eax
je r-xdata
retn
mov ecx [ esi + 0x18 ]
lea eax [ eax + ecx - 0x1 ]
mov ecx [ esi + 0x14 ]
cmp ecx eax
ja r-xdata
mov ecx [ esi + 0x10 ]
mov ecx [ ecx + eax * 4 ]
push 0x0
push 0x1
call sub_1000247e
dec [ esi + 0x1c ]
jne r-xdata
sub eax ecx
and [ esi + 0x18 ] 0x0
sub_100133c3
push ebp
mov ebp esp
push ecx
push ecx
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
push esi
lea esi [ ebp - 0x8 ]
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] eax
call sub_10013283
mov eax [ ebp - 0x8 ]
mov [ edi ] eax
mov eax [ ebp - 0x4 ]
mov [ edi + 0x4 ] eax
mov eax edi
pop esi
leave
retn
sub_100133ec
push 0x7c
mov eax sub_1004ccdf
call sub_10029ed2
mov eax [ ebp + 0xc ]
mov esi ecx
mov ebx [ esi + 0x18 ]
lea edi [ ebp - 0x7c ]
mov [ ebp - 0x80 ] esi
mov [ ebp - 0x70 ] eax
call sub_1001325d
mov eax [ ebp + 0x10 ]
test eax eax
je r-xdata
call sub_100261ef
cmp eax [ ebp - 0x7c ]
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x4 ] 0x3
cmp edi eax
jae r-xdata
mov edi [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
cmp ebx edi
jae r-xdata
mov eax [ ebp + 0x14 ]
sub eax [ ebp - 0x78 ]
mov [ ebp - 0x5c ] eax
mov eax [ esi + 0x1c ]
mov ebx [ ebp - 0x5c ]
mov edi eax
sub edi ebx
mov [ ebp - 0x60 ] edi
mov [ ebp - 0x78 ] eax
cmp ebx edi
jae r-xdata
and [ ebp - 0x54 ] 0x0
sub eax edi
mov ebx eax
mov [ ebp - 0x54 ] edi
sub edi ebx
call sub_1001325d
mov ebx [ ebp - 0x5c ]
lea edi [ ebp - 0x88 ]
lea eax [ ebp - 0x6c ]
call sub_100133c3
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
push [ ebp - 0x70 ]
mov [ ebp - 0x58 ] ecx
lea ecx [ ebp - 0x50 ]
mov [ ebp - 0x54 ] eax
call sub_10001fad
mov [ ebp - 0x4 ] 0x4
mov ebx [ ebp - 0x60 ]
lea edi [ ebp - 0x88 ]
lea eax [ ebp - 0x58 ]
call sub_100133c3
mov esi eax
lea edi [ ebp - 0x6c ]
lea eax [ ebp - 0x58 ]
call sub_100133c3
mov ebx [ ebp + 0x8 ]
mov edx ebx
lea edi [ ebp - 0x64 ]
call sub_100137ee
push [ esi + 0x4 ]
push [ esi ]
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0x74 ]
push [ ebp - 0x54 ]
push [ ebp - 0x58 ]
push eax
call sub_10013981
add esp 0x1c
lea edi [ ebp - 0x74 ]
lea eax [ ebp - 0x58 ]
call sub_100133c3
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0x50 ]
push [ ebp - 0x54 ]
push [ ebp - 0x58 ]
push eax
call sub_10013a2b
lea ecx [ ebp - 0x50 ]
call sub_1001325d
mov ebx [ ebp - 0x54 ]
sub ebx [ ebp + 0x8 ]
lea edi [ ebp - 0x88 ]
add ebx [ ebp - 0x60 ]
lea eax [ ebp - 0x6c ]
add ebx [ ebp - 0x5c ]
call sub_100133c3
call sub_100130d1
push eax
mov eax esi
call sub_10013799
inc [ ebp - 0x54 ]
mov eax [ ebp + 0x8 ]
jmp r-xdata
and [ ebp - 0x54 ] 0x0
push [ ebp - 0x70 ]
mov eax esi
call sub_10013799
dec ebx
jmp r-xdata
call sub_100133c3
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
push [ ebp - 0x70 ]
mov [ ebp - 0x58 ] ecx
lea ecx [ ebp - 0x34 ]
mov [ ebp - 0x54 ] eax
call sub_10001fad
mov ebx [ ebp - 0x5c ]
lea edi [ ebp - 0x6c ]
lea eax [ ebp - 0x58 ]
mov [ ebp - 0x4 ] 0x1
call sub_100133c3
mov ebx [ ebp + 0x8 ]
mov [ ebp - 0x60 ] eax
lea edi [ ebp - 0x74 ]
lea eax [ ebp - 0x58 ]
call sub_100133c3
push [ ebp - 0x54 ]
mov ecx [ ebp - 0x60 ]
push [ ebp - 0x58 ]
push [ ecx + 0x4 ]
push [ ecx ]
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0x64 ]
push eax
call sub_100139d6
mov ebx [ esi + 0x18 ]
add esp 0x1c
lea edi [ ebp - 0x64 ]
call sub_1001325d
mov ebx [ ebp - 0x5c ]
lea edi [ ebp - 0x6c ]
lea eax [ ebp - 0x58 ]
call sub_100133c3
mov esi eax
lea edi [ ebp - 0x74 ]
lea eax [ ebp - 0x64 ]
call sub_100133c3
push [ esi + 0x4 ]
push [ esi ]
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0x34 ]
push eax
call sub_10013a2b
lea ecx [ ebp - 0x34 ]
jmp r-xdata
dec ebx
call sub_100133c3
call sub_100130d1
push eax
mov eax esi
call sub_1001374a
dec [ ebp - 0x54 ]
jmp r-xdata
mov [ ebp - 0x54 ] ebx
push [ ebp - 0x70 ]
mov eax esi
call sub_1001374a
dec edi
jmp r-xdata
call sub_10029f2e
retn 0x10
mov ebx [ esi + 0x18 ]
lea edi [ ebp - 0x6c ]
cmp [ ebp - 0x54 ] eax
jae r-xdata
call sub_1001325d
mov ebx [ ebp - 0x5c ]
lea edi [ ebp - 0x88 ]
lea eax [ ebp - 0x6c ]
call sub_100133c3
mov ebx [ ebp - 0x60 ]
lea edi [ ebp - 0x88 ]
jmp r-xdata
call sub_1001325d
mov eax [ ebp - 0x5c ]
mov ecx [ ebp - 0x54 ]
lea ebx [ ecx + eax ]
lea edi [ ebp - 0x88 ]
lea eax [ ebp - 0x6c ]
call sub_100133c3
call sub_100130d1
push eax
mov eax esi
call sub_10013799
inc [ ebp - 0x54 ]
mov edi [ ebp - 0x60 ]
jmp r-xdata
test ebx ebx
jbe r-xdata
add esp 0x14
push 0x0
push 0x1
call sub_1000247e
jmp r-xdata
mov ebx [ esi + 0x18 ]
lea edi [ ebp - 0x64 ]
call sub_1001325d
cmp [ ebp - 0x54 ] 0x0
mov ebx [ ebp + 0x8 ]
lea edi [ ebp - 0x6c ]
lea eax [ ebp - 0x64 ]
jbe r-xdata
call sub_100133c3
mov ebx [ ebp - 0x5c ]
lea edi [ ebp - 0x6c ]
dec ebx
call sub_100133c3
call sub_100130d1
push eax
mov eax esi
call sub_1001374a
dec [ ebp - 0x54 ]
jmp r-xdata
test edi edi
jbe r-xdata
mov esi [ eax ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0x54 ] eax
lea eax [ ebp - 0x58 ]
mov [ ebp - 0x58 ] esi
call sub_100133c3
push [ eax + 0x4 ]
push [ eax ]
push [ ebp - 0x54 ]
push esi
push [ ebp - 0x70 ]
call sub_10013a2b
add esp 0x14
cmp [ ebp - 0x54 ] edi
mov ebx [ esi + 0x18 ]
lea edi [ ebp - 0x6c ]
jae r-xdata
mov ebx [ esi + 0x18 ]
lea edi [ ebp - 0x64 ]
call sub_1001325d
cmp [ ebp - 0x54 ] 0x0
mov ebx [ ebp + 0x8 ]
lea edi [ ebp - 0x6c ]
lea eax [ ebp - 0x64 ]
jbe r-xdata
sub_100135a4
mov esi [ ebp - 0x80 ]
mov edi [ ebp - 0x78 ]
jmp r-xdata
cmp edi [ esi + 0x1c ]
jb r-xdata
call sub_10013362
push 0x0
push 0x0
call sub_10029a01
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x4 ] 0x3
cmp edi eax
jae r-xdata
and [ ebp - 0x54 ] 0x0
sub eax edi
mov ebx eax
call sub_1001325d
mov ebx [ ebp - 0x5c ]
lea edi [ ebp - 0x88 ]
lea eax [ ebp - 0x6c ]
call sub_100133c3
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
push [ ebp - 0x70 ]
mov [ ebp - 0x58 ] ecx
lea ecx [ ebp - 0x50 ]
mov [ ebp - 0x54 ] eax
call sub_10001fad
mov [ ebp - 0x4 ] 0x4
mov ebx [ ebp - 0x60 ]
lea edi [ ebp - 0x88 ]
lea eax [ ebp - 0x58 ]
call sub_100133c3
mov esi eax
lea edi [ ebp - 0x6c ]
lea eax [ ebp - 0x58 ]
call sub_100133c3
mov ebx [ ebp + 0x8 ]
mov edx ebx
lea edi [ ebp - 0x64 ]
call sub_100137ee
push [ esi + 0x4 ]
push [ esi ]
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0x74 ]
push [ ebp - 0x54 ]
push [ ebp - 0x58 ]
push eax
call sub_10013981
add esp 0x1c
lea edi [ ebp - 0x74 ]
lea eax [ ebp - 0x58 ]
call sub_100133c3
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0x50 ]
push [ ebp - 0x54 ]
push [ ebp - 0x58 ]
push eax
call sub_10013a2b
lea ecx [ ebp - 0x50 ]
add esp 0x14
push 0x0
push 0x1
call sub_1000247e
jmp r-xdata
call sub_1001325d
mov ebx [ ebp - 0x54 ]
sub ebx [ ebp + 0x8 ]
lea edi [ ebp - 0x88 ]
add ebx [ ebp - 0x60 ]
lea eax [ ebp - 0x6c ]
add ebx [ ebp - 0x5c ]
call sub_100133c3
call sub_100130d1
push eax
mov eax esi
call sub_10013799
inc [ ebp - 0x54 ]
mov eax [ ebp + 0x8 ]
jmp r-xdata
and [ ebp - 0x54 ] 0x0
push [ ebp - 0x70 ]
mov eax esi
call sub_10013799
dec ebx
jmp r-xdata
call sub_10029f2e
retn 0x10
mov ebx [ esi + 0x18 ]
lea edi [ ebp - 0x6c ]
cmp [ ebp - 0x54 ] eax
jae r-xdata
call sub_1001325d
mov ebx [ ebp - 0x5c ]
lea edi [ ebp - 0x88 ]
lea eax [ ebp - 0x6c ]
call sub_100133c3
mov ebx [ ebp - 0x60 ]
lea edi [ ebp - 0x88 ]
jmp r-xdata
call sub_1001325d
mov eax [ ebp - 0x5c ]
mov ecx [ ebp - 0x54 ]
lea ebx [ ecx + eax ]
lea edi [ ebp - 0x88 ]
lea eax [ ebp - 0x6c ]
call sub_100133c3
call sub_100130d1
push eax
mov eax esi
call sub_10013799
inc [ ebp - 0x54 ]
mov edi [ ebp - 0x60 ]
jmp r-xdata
test ebx ebx
jbe r-xdata
mov esi [ eax ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0x54 ] eax
lea eax [ ebp - 0x58 ]
mov [ ebp - 0x58 ] esi
call sub_100133c3
push [ eax + 0x4 ]
push [ eax ]
push [ ebp - 0x54 ]
push esi
push [ ebp - 0x70 ]
call sub_10013a2b
add esp 0x14
cmp [ ebp - 0x54 ] edi
mov ebx [ esi + 0x18 ]
lea edi [ ebp - 0x6c ]
jae r-xdata
sub_10013733
mov esi [ ebp - 0x80 ]
mov edi [ ebp - 0x78 ]
jmp r-xdata
cmp edi [ esi + 0x1c ]
jb r-xdata
call sub_10013393
jmp r-xdata
push 0x0
push 0x0
call sub_10029a01
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x4 ] 0x3
cmp edi eax
jae r-xdata
and [ ebp - 0x54 ] 0x0
sub eax edi
mov ebx eax
call sub_1001325d
mov ebx [ ebp - 0x5c ]
lea edi [ ebp - 0x88 ]
lea eax [ ebp - 0x6c ]
call sub_100133c3
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
push [ ebp - 0x70 ]
mov [ ebp - 0x58 ] ecx
lea ecx [ ebp - 0x50 ]
mov [ ebp - 0x54 ] eax
call sub_10001fad
mov [ ebp - 0x4 ] 0x4
mov ebx [ ebp - 0x60 ]
lea edi [ ebp - 0x88 ]
lea eax [ ebp - 0x58 ]
call sub_100133c3
mov esi eax
lea edi [ ebp - 0x6c ]
lea eax [ ebp - 0x58 ]
call sub_100133c3
mov ebx [ ebp + 0x8 ]
mov edx ebx
lea edi [ ebp - 0x64 ]
call sub_100137ee
push [ esi + 0x4 ]
push [ esi ]
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0x74 ]
push [ ebp - 0x54 ]
push [ ebp - 0x58 ]
push eax
call sub_10013981
add esp 0x1c
lea edi [ ebp - 0x74 ]
lea eax [ ebp - 0x58 ]
call sub_100133c3
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0x50 ]
push [ ebp - 0x54 ]
push [ ebp - 0x58 ]
push eax
call sub_10013a2b
lea ecx [ ebp - 0x50 ]
add esp 0x14
push 0x0
push 0x1
call sub_1000247e
jmp r-xdata
call sub_1001325d
mov ebx [ ebp - 0x54 ]
sub ebx [ ebp + 0x8 ]
lea edi [ ebp - 0x88 ]
add ebx [ ebp - 0x60 ]
lea eax [ ebp - 0x6c ]
add ebx [ ebp - 0x5c ]
call sub_100133c3
call sub_100130d1
push eax
mov eax esi
call sub_10013799
inc [ ebp - 0x54 ]
mov eax [ ebp + 0x8 ]
jmp r-xdata
and [ ebp - 0x54 ] 0x0
push [ ebp - 0x70 ]
mov eax esi
call sub_10013799
dec ebx
jmp r-xdata
call sub_10029f2e
retn 0x10
mov ebx [ esi + 0x18 ]
lea edi [ ebp - 0x6c ]
cmp [ ebp - 0x54 ] eax
jae r-xdata
call sub_1001325d
mov ebx [ ebp - 0x5c ]
lea edi [ ebp - 0x88 ]
lea eax [ ebp - 0x6c ]
call sub_100133c3
mov ebx [ ebp - 0x60 ]
lea edi [ ebp - 0x88 ]
jmp r-xdata
call sub_1001325d
mov eax [ ebp - 0x5c ]
mov ecx [ ebp - 0x54 ]
lea ebx [ ecx + eax ]
lea edi [ ebp - 0x88 ]
lea eax [ ebp - 0x6c ]
call sub_100133c3
call sub_100130d1
push eax
mov eax esi
call sub_10013799
inc [ ebp - 0x54 ]
mov edi [ ebp - 0x60 ]
jmp r-xdata
test ebx ebx
jbe r-xdata
mov esi [ eax ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0x54 ] eax
lea eax [ ebp - 0x58 ]
mov [ ebp - 0x58 ] esi
call sub_100133c3
push [ eax + 0x4 ]
push [ eax ]
push [ ebp - 0x54 ]
push esi
push [ ebp - 0x70 ]
call sub_10013a2b
add esp 0x14
cmp [ ebp - 0x54 ] edi
mov ebx [ esi + 0x18 ]
lea edi [ ebp - 0x6c ]
jae r-xdata
sub_1001374a
push esi
mov esi eax
mov eax [ esi + 0x1c ]
inc eax
push edi
cmp [ esi + 0x14 ] eax
ja r-xdata
mov edi [ esi + 0x18 ]
test edi edi
jne r-xdata
call sub_1001381d
mov eax [ esi + 0x10 ]
dec edi
cmp [ eax + edi * 4 ] 0x0
jne r-xdata
mov edi [ esi + 0x14 ]
mov eax [ esi + 0x10 ]
push [ esp + 0xc ]
mov ecx [ eax + edi * 4 ]
call sub_10001a37
inc [ esi + 0x1c ]
pop ecx
mov [ esi + 0x18 ] edi
pop edi
pop esi
retn 0x4
xor ecx ecx
inc ecx
call sub_10001918
mov ecx [ esi + 0x10 ]
mov [ ecx + edi * 4 ] eax
sub_10013799
push esi
mov esi eax
mov eax [ esi + 0x1c ]
inc eax
push edi
cmp [ esi + 0x14 ] eax
ja r-xdata
mov eax [ esi + 0x18 ]
add eax [ esi + 0x1c ]
mov ecx [ esi + 0x14 ]
cmp ecx eax
ja r-xdata
call sub_1001381d
mov edi eax
mov eax [ esi + 0x10 ]
shl edi 0x2
cmp [ edi + eax ] 0x0
jne r-xdata
sub eax ecx
mov eax [ esi + 0x10 ]
push [ esp + 0xc ]
mov ecx [ eax + edi ]
call sub_10001a37
inc [ esi + 0x1c ]
pop ecx
pop edi
pop esi
retn 0x4
xor ecx ecx
inc ecx
call sub_10001918
mov ecx [ esi + 0x10 ]
mov [ edi + ecx ] eax
sub_100137ee
push ebp
mov ebp esp
push ecx
push ecx
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
push ebx
mov ebx edx
push esi
neg ebx
lea esi [ ebp - 0x8 ]
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] eax
call sub_10013283
mov eax [ ebp - 0x8 ]
mov [ edi ] eax
mov eax [ ebp - 0x4 ]
pop esi
mov [ edi + 0x4 ] eax
mov eax edi
pop ebx
leave
retn
sub_1001381d
push ebp
mov ebp esp
mov eax [ esi + 0x14 ]
sub esp 0x10
push ebx
mov edx 0x9249249
xor ebx ebx
mov ecx edx
inc ebx
sub ecx eax
push edi
cmp ecx ebx
jae r-xdata
mov ecx eax
shr ecx 0x1
cmp ecx 0x8
jae r-xdata
call sub_100138f6
cmp ecx ebx
jbe r-xdata
push 0x8
pop ecx
mov edi [ esi + 0x18 ]
lea ecx [ eax + ebx ]
mov [ ebp - 0x4 ] edi
call sub_10013935
mov ecx [ esi + 0x10 ]
shl edi 0x2
mov [ ebp - 0x8 ] eax
lea edx [ edi + eax ]
mov eax [ esi + 0x14 ]
lea eax [ ecx + eax * 4 ]
add ecx edi
push ecx
call sub_10013a70
pop ecx
mov ecx [ esi + 0x10 ]
mov edx eax
push ecx
cmp [ ebp - 0x4 ] ebx
ja r-xdata
sub edx ecx
cmp eax edx
ja r-xdata
lea eax [ ecx + ebx * 4 ]
call sub_10013a70
mov edx [ ebp - 0x8 ]
pop ecx
mov ecx [ esi + 0x10 ]
lea eax [ ecx + edi ]
lea ecx [ ecx + ebx * 4 ]
push ecx
call sub_10013a70
pop ecx
mov edi eax
test ebx ebx
jbe r-xdata
mov eax ebx
sub eax [ ebp - 0x4 ]
mov [ ebp - 0xc ] eax
lea eax [ ecx + edi ]
call sub_10013a70
pop ecx
mov ecx [ ebp - 0xc ]
mov edi eax
test ecx ecx
jbe r-xdata
mov ebx ecx
mov eax [ esi + 0x10 ]
test eax eax
je r-xdata
mov ecx ebx
mov ecx [ ebp - 0x4 ]
test ecx ecx
jbe r-xdata
xor eax eax
[ edi ]
mov eax [ ebp - 0x8 ]
add [ esi + 0x14 ] ebx
pop edi
mov [ esi + 0x10 ] eax
pop ebx
leave
retn
push eax
call sub_10025c9c
pop ecx
mov edi [ ebp - 0x8 ]
jmp r-xdata
xor eax eax
[ edi ]
sub_100138f6
push 0x44
mov eax sub_1004ab3c
call sub_10029e33
push r--data
lea ecx [ ebp - 0x28 ]
call sub_10001b81
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x28 ]
push eax
lea ecx [ ebp - 0x50 ]
call sub_10001ba3
push r--data
lea eax [ ebp - 0x50 ]
push eax
mov [ ebp - 0x50 ] r--data
call sub_10029a01
int3
sub_10013935
push ebp
mov ebp esp
sub esp 0x10
test ecx ecx
ja r-xdata
or eax 0xffffffff
xor edx edx
div ecx
cmp eax 0x4
jae r-xdata
xor ecx ecx
mov eax ecx
shl eax 0x2
push eax
call sub_10025dd6
pop ecx
leave
retn
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x4 ]
push eax
lea ecx [ ebp - 0x10 ]
call sub_10025e4c
push r--data
lea eax [ ebp - 0x10 ]
push eax
mov [ ebp - 0x10 ] r--data
call sub_10029a01
int3
sub_10013981
push ebp
mov ebp esp
push ecx
push esi
push edi
xor eax eax
lea edi [ ebp - 0x4 ]
stosb [ edi ]
mov eax [ ebp + 0x14 ]
test eax eax
je r-xdata
xor eax eax
mov eax [ eax ]
jmp r-xdata
xor eax eax
mov eax [ eax ]
jmp r-xdata
mov edx [ eax ]
mov eax [ ebp + 0xc ]
mov esi [ ebp + 0x18 ]
test eax eax
je r-xdata
push [ ebp + 0x20 ]
mov ecx [ ebp + 0x10 ]
push [ ebp + 0x1c ]
mov eax [ eax ]
push esi
push edx
push ecx
push eax
push [ ebp - 0x4 ]
push [ ebp + 0x8 ]
push [ ebp + 0x8 ]
push [ ebp + 0x8 ]
call sub_10013a97
mov eax [ ebp + 0x8 ]
add esp 0x28
pop edi
pop esi
leave
retn
sub_100139d6
push ebp
mov ebp esp
push ecx
push esi
push edi
xor eax eax
lea edi [ ebp - 0x4 ]
stosb [ edi ]
mov eax [ ebp + 0x14 ]
test eax eax
je r-xdata
xor eax eax
mov eax [ eax ]
jmp r-xdata
xor eax eax
mov eax [ eax ]
jmp r-xdata
mov edx [ eax ]
mov eax [ ebp + 0xc ]
mov esi [ ebp + 0x18 ]
test eax eax
je r-xdata
push [ ebp + 0x20 ]
mov ecx [ ebp + 0x10 ]
push [ ebp + 0x1c ]
mov eax [ eax ]
push esi
push edx
push ecx
push eax
push [ ebp - 0x4 ]
push [ ebp + 0x8 ]
push [ ebp + 0x8 ]
push [ ebp + 0x8 ]
call sub_10013b10
mov eax [ ebp + 0x8 ]
add esp 0x28
pop edi
pop esi
leave
retn
sub_10013a2b
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
sub esp 0x10
push esi
mov esi [ ebp + 0x18 ]
test eax eax
je r-xdata
xor eax eax
mov eax [ eax ]
jmp r-xdata
pop esi
leave
retn
lea eax [ ebp - 0xc ]
call sub_100130d1
push 0xffffffff
push 0x0
push [ ebp + 0x8 ]
mov ecx eax
call sub_10001f1a
inc [ ebp - 0x8 ]
jmp r-xdata
mov eax [ eax ]
mov ecx [ ebp + 0x10 ]
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] ecx
cmp [ ebp - 0x8 ] esi
je r-xdata
sub_10013a70
sub eax [ esp + 0x4 ]
push esi
sar eax 0x2
mov ecx eax
shl ecx 0x2
lea esi [ ecx + edx ]
test eax eax
jbe r-xdata
mov eax esi
pop esi
retn
push ecx
push [ esp + 0xc ]
push ecx
push edx
call sub_1002601b
add esp 0x10
sub_10013a97
push ebp
mov ebp esp
mov eax [ ebp + 0x24 ]
sub eax [ ebp + 0x1c ]
sub esp 0x1c
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
mov edx eax
lea eax [ ebp + 0x28 ]
call sub_100137ee
mov eax [ ebp + 0x28 ]
test eax eax
je r-xdata
xor eax eax
mov eax [ eax ]
jmp r-xdata
mov eax [ ebp + 0x8 ]
pop edi
pop esi
pop ebx
leave
retn
dec esi
dec [ ebp - 0x4 ]
lea eax [ ebp - 0x10 ]
mov [ ebp - 0xc ] esi
call sub_100130d1
mov ebx eax
lea eax [ ebp - 0x8 ]
call sub_100130d1
push 0xffffffff
push 0x0
push ebx
mov ecx eax
call sub_10001f1a
jmp r-xdata
mov eax [ eax ]
mov ecx [ ebp + 0x2c ]
mov esi [ ebp + 0x24 ]
mov edi [ ebp + 0x1c ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x20 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp + 0x18 ]
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0x18 ] eax
cmp edi esi
je r-xdata
sub_10013b10
push ebp
mov ebp esp
mov eax [ ebp + 0x24 ]
sub eax [ ebp + 0x1c ]
sub esp 0x14
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
mov ebx eax
lea eax [ ebp + 0x28 ]
call sub_100133c3
mov eax [ ebp + 0x28 ]
test eax eax
je r-xdata
xor eax eax
mov eax [ eax ]
jmp r-xdata
mov eax [ ebp + 0x8 ]
pop edi
pop esi
pop ebx
leave
retn
lea eax [ ebp - 0x8 ]
call sub_100130d1
mov edi eax
lea eax [ ebp - 0x10 ]
call sub_100130d1
push 0xffffffff
push 0x0
push edi
mov ecx eax
call sub_10001f1a
inc [ ebp - 0xc ]
inc [ ebp - 0x4 ]
jmp r-xdata
mov eax [ eax ]
mov ecx [ ebp + 0x2c ]
mov esi [ ebp + 0x24 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp + 0x20 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x18 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x1c ]
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] esi
je r-xdata
sub_10013b8c
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_1004c7c3
mov eax [ fs : 0x0 ]
push eax
sub esp 0x4c
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x58 ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x18 ] 0x10
mov edi [ eax + 0x14 ]
jb r-xdata
add eax 0x4
mov eax [ eax + 0x4 ]
jmp r-xdata
lea edx [ ecx + 0x4 ]
mov edx [ ecx + 0x4 ]
jmp r-xdata
cmp [ ecx + 0x18 ] 0x10
mov esi [ ecx + 0x14 ]
jb r-xdata
test eax eax
je r-xdata
xor al al
jmp r-xdata
mov ecx [ ebp + 0xc ]
push edi
push eax
push esi
call sub_10017d38
add esp 0xc
cmp eax 0x40b
jne r-xdata
mov al 0x1
push r--data
lea ecx [ esp + 0x14 ]
call sub_10001b81
and [ esp + 0x60 ] 0x0
lea eax [ esp + 0x10 ]
push eax
lea ecx [ esp + 0x30 ]
call sub_100078c4
push r--data
lea eax [ esp + 0x30 ]
push eax
call sub_10029a01
mov ecx [ esp + 0x58 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn
sub_10013c3d
push 0x0
mov eax sub_1004ccb4
call sub_10029e33
mov esi [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
push [ ebp + 0xc ]
lea ecx [ esi + 0x4 ]
mov [ esi ] r--data
call sub_10001c9f
push [ ebp + 0x10 ]
lea ecx [ esi + 0x20 ]
mov [ ebp - 0x4 ] 0x1
call sub_10001fad
push [ ebp + 0x14 ]
lea ecx [ esi + 0x3c ]
mov [ ebp - 0x4 ] 0x2
call sub_10001fad
push [ ebp + 0x18 ]
lea ecx [ esi + 0x58 ]
mov [ ebp - 0x4 ] 0x3
call sub_10001fad
push [ ebp + 0x1c ]
lea ecx [ esi + 0x74 ]
mov [ ebp - 0x4 ] 0x4
call sub_10001fad
push [ ebp + 0x20 ]
lea ecx [ esi + 0x90 ]
mov [ ebp - 0x4 ] 0x5
call sub_10001fad
mov eax esi
call sub_10029f0b
retn 0x1c
sub_10013cd5
push ebx
push esi
push edi
mov esi ecx
xor ebx ebx
xor edi edi
push ebx
inc edi
push edi
lea ecx [ esi + 0x90 ]
mov [ esi ] r--data
call sub_1000247e
push ebx
push edi
lea ecx [ esi + 0x74 ]
call sub_1000247e
push ebx
push edi
lea ecx [ esi + 0x58 ]
call sub_1000247e
push ebx
push edi
lea ecx [ esi + 0x3c ]
call sub_1000247e
push ebx
push edi
lea ecx [ esi + 0x20 ]
call sub_1000247e
push ebx
push edi
lea ecx [ esi + 0x4 ]
call sub_100022b5
pop edi
mov [ esi ] r--data
pop esi
pop ebx
retn
sub_10013d2e
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_1004e99f
mov eax [ fs : 0x0 ]
push eax
sub esp 0x70
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x68 ] eax
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x80 ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
mov [ esp + 0x1c ] eax
mov eax [ ebp + 0xc ]
mov esi ecx
mov edi r--data
push edi
lea ecx [ esp + 0x28 ]
mov [ esp + 0x24 ] eax
call sub_10001254
xor ebx ebx
push edi
lea ecx [ esp + 0x44 ]
mov [ esp + 0x8c ] ebx
call sub_10001254
lea eax [ esp + 0x24 ]
push eax
lea ecx [ esi + 0x58 ]
lea edx [ esp + 0x44 ]
mov [ esp + 0x8c ] 0x1
call sub_100176b2
pop ecx
lea ecx [ esp + 0x14 ]
push ecx
mov ecx eax
call sub_100179dd
mov edi r--data
mov [ esp + 0x14 ] edi
push ebx
push 0x1
lea ecx [ esp + 0x48 ]
call sub_1000247e
push ebx
push 0x1
lea ecx [ esp + 0x2c ]
call sub_1000247e
push ebx
lea ecx [ esp + 0x60 ]
mov [ esp + 0x78 ] 0xf
call sub_1000237a
lea eax [ esp + 0x5c ]
push eax
push [ esp + 0x20 ]
lea eax [ esp + 0x1c ]
push eax
lea ecx [ esi + 0x74 ]
push esi
mov [ esp + 0x98 ] 0x5
call sub_10013e61
push [ esp + 0x20 ]
lea eax [ esp + 0x60 ]
lea ecx [ esi + 0x4 ]
push eax
call sub_10014236
pop ecx
pop ecx
push ebx
push 0x1
lea ecx [ esp + 0x64 ]
call sub_100022b5
lea ecx [ esp + 0x14 ]
mov [ esp + 0x14 ] edi
call sub_10017a48
mov ecx [ esp + 0x80 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ esp + 0x68 ]
xor ecx esp
call sub_10025c8d
mov esp ebp
pop ebp
retn 0x8
sub_10013e61
push 0x204
mov eax sub_1004e957
call sub_10029e9c
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x94 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0x84 ] eax
mov eax [ ebp + 0x10 ]
mov [ ebp - 0x98 ] eax
mov eax [ ebp + 0x14 ]
mov [ ebp - 0x9c ] eax
lea eax [ ebp - 0x8c ]
mov esi ecx
push eax
mov eax esi
mov [ ebp - 0x8c ] 0x2f
call sub_100143d3
mov [ ebp - 0x8c ] eax
cmp eax 0xffffffff
jne r-xdata
push eax
xor ebx ebx
push ebx
lea eax [ ebp - 0x64 ]
push eax
mov ecx esi
call sub_100081f9
xor edi edi
inc edi
mov [ ebp - 0x4 ] edi
mov eax [ esi + 0x14 ]
mov ecx [ ebp - 0x8c ]
sub eax ecx
dec eax
push eax
inc ecx
push ecx
lea eax [ ebp - 0x48 ]
push eax
mov ecx esi
call sub_100081f9
mov esi r--data
push esi
lea ecx [ ebp - 0xd4 ]
mov [ ebp - 0x4 ] 0x2
call sub_10001254
push esi
lea ecx [ ebp - 0xb8 ]
mov [ ebp - 0x4 ] 0x3
call sub_10001254
lea eax [ ebp - 0xd4 ]
push eax
mov [ ebp - 0x4 ] 0x4
push [ ebp - 0x84 ]
lea edx [ ebp - 0xb8 ]
lea ecx [ ebp - 0x64 ]
call sub_1001775d
pop ecx
pop ecx
lea ecx [ ebp - 0x90 ]
push ecx
mov ecx eax
call sub_100179dd
mov [ ebp - 0x90 ] r--data
push ebx
push edi
lea ecx [ ebp - 0xb8 ]
call sub_1000247e
push ebx
push edi
lea ecx [ ebp - 0xd4 ]
mov [ ebp - 0x4 ] 0x7
call sub_1000247e
mov eax [ ebp - 0x94 ]
add eax 0x20
push eax
lea eax [ ebp - 0x10c ]
push eax
call sub_10014462
push r--data
push eax
lea eax [ ebp - 0x188 ]
push eax
mov [ ebp - 0x4 ] 0x8
call sub_10008f70
add esp 0x14
mov ecx [ ebp - 0x94 ]
add ecx 0x90
push ecx
push eax
mov [ ebp - 0x4 ] 0x9
lea eax [ ebp - 0x80 ]
push eax
call sub_1000fac2
add esp 0xc
push ebx
push edi
lea ecx [ ebp - 0x188 ]
call sub_1000247e
push ebx
push edi
lea ecx [ ebp - 0x10c ]
mov [ ebp - 0x4 ] 0xc
call sub_1000247e
push esi
lea ecx [ ebp - 0xf0 ]
call sub_10001254
push esi
lea ecx [ ebp - 0x128 ]
mov [ ebp - 0x4 ] 0xd
call sub_10001254
push esi
lea ecx [ ebp - 0xb8 ]
mov [ ebp - 0x4 ] 0xe
call sub_10001254
push r--data
lea ecx [ ebp - 0xd4 ]
mov [ ebp - 0x4 ] 0xf
call sub_10001254
push r--data
lea eax [ ebp - 0x48 ]
push eax
lea eax [ ebp - 0x144 ]
push eax
mov [ ebp - 0x4 ] 0x10
call sub_10008f70
add esp 0xc
lea ecx [ ebp - 0x80 ]
push ecx
push eax
lea eax [ ebp - 0x16c ]
push eax
mov [ ebp - 0x4 ] 0x11
call sub_1000fac2
add esp 0xc
lea ecx [ ebp - 0xf0 ]
push ecx
lea ecx [ ebp - 0x128 ]
push ecx
lea ecx [ ebp - 0xb8 ]
push ecx
lea ecx [ ebp - 0x90 ]
push ecx
mov ecx eax
lea edx [ ebp - 0xd4 ]
mov [ ebp - 0x4 ] 0x12
call sub_10017808
add esp 0x10
lea ecx [ ebp - 0x88 ]
push ecx
mov ecx eax
call sub_100179dd
mov [ ebp - 0x88 ] r--data
push ebx
push edi
lea ecx [ ebp - 0x16c ]
call sub_1000247e
push ebx
push edi
lea ecx [ ebp - 0x144 ]
call sub_1000247e
push ebx
push edi
lea ecx [ ebp - 0xd4 ]
call sub_1000247e
push ebx
push edi
lea ecx [ ebp - 0xb8 ]
call sub_1000247e
push ebx
push edi
lea ecx [ ebp - 0x128 ]
call sub_1000247e
push ebx
push edi
lea ecx [ ebp - 0xf0 ]
mov [ ebp - 0x4 ] 0x19
call sub_1000247e
mov ecx [ ebp - 0x98 ]
push r--data
call sub_10006933
mov ecx [ ebp - 0x94 ]
push [ ebp - 0x98 ]
add ecx 0x3c
lea edx [ ebp - 0x88 ]
call sub_1001477e
pop ecx
lea eax [ ebp - 0x210 ]
push eax
call sub_10011622
push 0x800
lea esi [ ebp - 0x2c ]
mov [ ebp - 0x4 ] 0x1a
call sub_10009dc2
mov [ ebp - 0x4 ] 0x1b
jmp r-xdata
push r--data
lea ecx [ ebp - 0xf0 ]
call sub_10001b81
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0xf0 ]
push eax
lea ecx [ ebp - 0x150 ]
call sub_100078c4
push r--data
lea eax [ ebp - 0x150 ]
push eax
call sub_10029a01
cmp [ ebp - 0x14 ] 0x10
mov eax [ ebp - 0x28 ]
jae r-xdata
push [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x88 ]
push eax
call sub_10017905
cmp eax ebx
ja r-xdata
lea eax [ ebp - 0x28 ]
cmp [ ebp - 0x14 ] 0x10
mov ecx [ ebp - 0x28 ]
jae r-xdata
lea ecx [ ebp - 0x10c ]
lea eax [ ebp - 0x210 ]
call sub_10011753
mov ecx [ ebp - 0x9c ]
push 0xffffffff
push ebx
push eax
mov [ ebp - 0x4 ] 0x1c
call sub_10002099
push ebx
push edi
lea ecx [ ebp - 0x10c ]
call sub_100022b5
push ebx
push edi
lea ecx [ ebp - 0x2c ]
call sub_100022b5
lea eax [ ebp - 0x210 ]
mov [ ebp - 0x4 ] 0x19
call sub_10010b74
lea ecx [ ebp - 0x88 ]
mov [ ebp - 0x88 ] r--data
call sub_10017a48
push ebx
push edi
lea ecx [ ebp - 0x80 ]
call sub_1000247e
lea ecx [ ebp - 0x90 ]
mov [ ebp - 0x90 ] r--data
call sub_10017a48
push ebx
push edi
lea ecx [ ebp - 0x48 ]
call sub_1000247e
push ebx
push edi
lea ecx [ ebp - 0x64 ]
call sub_1000247e
call sub_10029f1f
retn 0x10
push eax
push ecx
lea eax [ ebp - 0x208 ]
push eax
call sub_1001156f
lea ecx [ ebp - 0x28 ]
sub_10014236
push 0x64
mov eax sub_1004cc5a
call sub_10029e33
mov esi ecx
mov ecx [ ebp + 0xc ]
push r--data
call sub_10002408
cmp [ esi + 0x18 ] 0x10
mov ecx [ esi + 0x14 ]
lea ebx [ esi + 0x4 ]
jb r-xdata
mov eax ebx
mov eax [ ebx ]
jmp r-xdata
push esi
call sub_10001c9f
add edi [ eax + 0x14 ]
push 0x0
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_100022b5
cmp [ esi + 0x18 ] 0x10
mov eax [ esi + 0x14 ]
jb r-xdata
push r--data
call sub_10001b81
and [ ebp - 0x4 ] 0x0
push ecx
push eax
push [ ebp + 0x8 ]
xor eax eax
call sub_10014337
mov edi eax
lea ecx [ ebp - 0x2c ]
cmp edi 0xffffffff
jne r-xdata
push eax
push ebx
push [ ebp + 0x8 ]
lea eax [ edi - 0x1 ]
call sub_10014337
cmp eax 0xffffffff
jne r-xdata
mov ebx [ ebx ]
cmp edi eax
jbe r-xdata
push r--data
lea ecx [ ebp - 0x2c ]
call sub_10001b81
mov [ ebp - 0x4 ] 0x1
jmp r-xdata
sub eax edi
push eax
push edi
push [ ebp + 0x8 ]
lea esi [ ebp - 0x48 ]
call sub_10011541
mov ecx [ ebp + 0xc ]
push 0xffffffff
push 0x0
push eax
mov [ ebp - 0x4 ] 0x3
call sub_10002099
push 0x0
push 0x1
mov ecx esi
call sub_100022b5
call sub_10029f0b
retn
push r--data
lea ecx [ ebp - 0x2c ]
call sub_10001b81
mov [ ebp - 0x4 ] 0x2
jmp r-xdata
lea eax [ ebp - 0x2c ]
push eax
lea ecx [ ebp - 0x70 ]
call sub_100078c4
push r--data
lea eax [ ebp - 0x70 ]
push eax
call sub_10029a01
sub_10014337
push ebp
mov ebp esp
push ecx
cmp [ ebp + 0x10 ] 0x0
mov ecx [ ebp + 0x8 ]
jne r-xdata
push ebx
push esi
mov esi [ ecx + 0x14 ]
push edi
cmp eax esi
jae r-xdata
cmp eax [ ecx + 0x14 ]
jbe r-xdata
or eax 0xffffffff
sub esi eax
cmp [ ebp + 0x10 ] esi
ja r-xdata
leave
retn 0xc
xor edx edx
inc edx
sub edx [ ebp + 0x10 ]
add esi edx
cmp [ ecx + 0x18 ] 0x10
jb r-xdata
add ecx 0x4
mov [ ebp - 0x4 ] ecx
add ecx 0x4
mov [ ebp - 0x4 ] ecx
mov ecx [ ecx ]
jmp r-xdata
mov eax [ ebp + 0xc ]
movsx eax [ eax ]
push esi
push eax
push ebx
call sub_10026520
mov edi eax
add esp 0xc
test edi edi
jne r-xdata
lea ebx [ ecx + eax ]
jmp r-xdata
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push edi
call sub_100266aa
add esp 0xc
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x18 ] 0x10
jb r-xdata
sub ebx edi
lea esi [ esi + ebx - 0x1 ]
lea ebx [ edi + 0x1 ]
mov ecx [ ebp - 0x4 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
jmp r-xdata
pop edi
pop esi
pop ebx
mov eax edi
sub eax ecx
jmp r-xdata
sub_100143d3
push ebp
mov ebp esp
mov ecx [ eax + 0x14 ]
sub esp 0xc
push ebx
push esi
push edi
test ecx ecx
jbe r-xdata
or eax 0xffffffff
cmp ecx 0x1
jb r-xdata
mov [ ebp - 0x4 ] ecx
mov ecx [ eax + 0x18 ]
add eax 0x4
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] eax
cmp ecx 0x8
jb r-xdata
mov ebx eax
mov ebx [ eax ]
jmp r-xdata
push [ ebp - 0x4 ]
push edi
push ebx
call sub_100144af
mov esi eax
add esp 0xc
test esi esi
jne r-xdata
mov eax [ ebp + 0x8 ]
movzx edi [ eax ]
jmp r-xdata
push 0x1
push [ ebp + 0x8 ]
push esi
call sub_100069f0
add esp 0xc
test eax eax
je r-xdata
cmp [ ebp - 0xc ] 0x8
jb r-xdata
mov eax esi
sub eax ebx
sar eax 0x1
or ecx 0xffffffff
sub ecx eax
add [ ebp - 0x4 ] ecx
lea ebx [ esi + 0x2 ]
mov ecx [ ebp - 0x8 ]
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn 0x4
mov eax esi
sub eax ecx
sar eax 0x1
jmp r-xdata
sub_10014462
push 0x20
mov eax sub_1004d493
call sub_10029e33
and [ ebp - 0x10 ] 0x0
push r--data
lea ecx [ ebp - 0x2c ]
call sub_10001254
and [ ebp - 0x4 ] 0x0
push 0xffffffff
push 0x0
push [ ebp + 0xc ]
mov ecx eax
call sub_10006b05
mov ecx [ ebp + 0x8 ]
push eax
call sub_10001fad
push 0x0
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_1000247e
mov eax [ ebp + 0x8 ]
call sub_10029f0b
retn
sub_100144cf
push 0xcc
mov eax sub_1004d223
call sub_10029e9c
mov esi ecx
xor ebx ebx
mov [ ebp - 0x3c ] esi
mov [ ebp - 0x40 ] ebx
call sub_10001ac0
lea ecx [ esi + 0x1c ]
call sub_10001ac0
xor edi edi
mov [ ebp - 0x4 ] ebx
inc edi
push r--data
lea ecx [ ebp - 0x94 ]
mov [ ebp - 0x40 ] edi
call sub_10001254
push r--data
lea ecx [ ebp - 0xb0 ]
mov [ ebp - 0x4 ] edi
call sub_10001254
lea eax [ ebp - 0x94 ]
push eax
push 0xf003f
lea eax [ ebp - 0xb0 ]
push eax
push 0x80000001
lea eax [ ebp - 0x38 ]
push eax
mov [ ebp - 0x4 ] 0x2
call sub_10014c0e
push ebx
push edi
lea ecx [ ebp - 0xb0 ]
call sub_1000247e
push ebx
push edi
lea ecx [ ebp - 0x94 ]
mov [ ebp - 0x4 ] 0x5
call sub_1000247e
push r--data
lea ecx [ ebp - 0x5c ]
call sub_10001254
lea eax [ ebp - 0x5c ]
push eax
lea eax [ ebp - 0xd8 ]
push eax
lea eax [ ebp - 0x38 ]
push eax
mov [ ebp - 0x4 ] 0x6
call sub_10014d3d
lea ecx [ ebp - 0x78 ]
push ecx
push eax
mov [ ebp - 0x4 ] 0x7
call sub_100150fb
push 0xffffffff
push ebx
push eax
mov ecx esi
mov [ ebp - 0x4 ] 0x8
call sub_10001f1a
push ebx
push edi
lea ecx [ ebp - 0x78 ]
call sub_1000247e
lea esi [ ebp - 0xd8 ]
mov [ ebp - 0x4 ] 0x6
call sub_100150b3
push ebx
push edi
lea ecx [ ebp - 0x5c ]
mov [ ebp - 0x4 ] 0x5
call sub_1000247e
push r--data
lea ecx [ ebp - 0x5c ]
call sub_10001254
lea eax [ ebp - 0x5c ]
push eax
lea eax [ ebp - 0xd8 ]
push eax
lea eax [ ebp - 0x38 ]
push eax
mov [ ebp - 0x4 ] 0x9
call sub_10014d3d
lea ecx [ ebp - 0x78 ]
push ecx
push eax
mov [ ebp - 0x4 ] 0xa
call sub_100150fb
push 0xffffffff
mov [ ebp - 0x4 ] 0xb
mov ecx [ ebp - 0x3c ]
push ebx
push eax
add ecx 0x1c
call sub_10001f1a
push ebx
push edi
lea ecx [ ebp - 0x78 ]
call sub_1000247e
lea esi [ ebp - 0xd8 ]
mov [ ebp - 0x4 ] 0x9
call sub_100150b3
push ebx
push edi
lea ecx [ ebp - 0x5c ]
call sub_1000247e
lea ecx [ ebp - 0x38 ]
call sub_10014d14
mov eax [ ebp - 0x3c ]
call sub_10029f1f
retn
sub_1001465f
push 0xac
mov eax sub_1004d983
call sub_10029e9c
mov edi ecx
push r--data
lea ecx [ ebp - 0x74 ]
call sub_10001254
xor ebx ebx
push r--data
lea ecx [ ebp - 0x90 ]
mov [ ebp - 0x4 ] ebx
call sub_10001254
lea eax [ ebp - 0x74 ]
push eax
push 0xf003f
lea eax [ ebp - 0x90 ]
push eax
push 0x80000001
lea eax [ ebp - 0x3c ]
push eax
mov [ ebp - 0x4 ] 0x1
call sub_10014c0e
push ebx
push 0x1
lea ecx [ ebp - 0x90 ]
call sub_1000247e
push ebx
push 0x1
lea ecx [ ebp - 0x74 ]
mov [ ebp - 0x4 ] 0x4
call sub_1000247e
push r--data
lea ecx [ ebp - 0x58 ]
call sub_10001254
lea eax [ ebp - 0x58 ]
push eax
lea eax [ ebp - 0xb8 ]
push eax
mov [ ebp - 0x4 ] 0x5
call sub_1001517c
pop ecx
pop ecx
lea ecx [ ebp - 0x3c ]
push ecx
mov ecx eax
mov [ ebp - 0x4 ] 0x6
call sub_10014f8e
lea esi [ ebp - 0xb8 ]
mov [ ebp - 0x4 ] 0x5
call sub_100150b3
push ebx
push 0x1
lea ecx [ ebp - 0x58 ]
mov [ ebp - 0x4 ] 0x4
call sub_1000247e
push r--data
lea ecx [ ebp - 0x58 ]
call sub_10001254
lea eax [ ebp - 0x58 ]
push eax
lea eax [ ebp - 0xb8 ]
add edi 0x1c
push eax
mov [ ebp - 0x4 ] 0x7
call sub_1001517c
pop ecx
pop ecx
lea ecx [ ebp - 0x3c ]
push ecx
mov ecx eax
mov [ ebp - 0x4 ] 0x8
call sub_10014f8e
lea esi [ ebp - 0xb8 ]
mov [ ebp - 0x4 ] 0x7
call sub_100150b3
push ebx
push 0x1
lea ecx [ ebp - 0x58 ]
call sub_1000247e
lea ecx [ ebp - 0x3c ]
call sub_10014d14
call sub_10029f1f
retn
sub_1001477e
push 0x120
mov eax sub_1004e86a
call sub_10029ed2
mov eax [ ebp + 0x8 ]
mov edi edx
mov edx [ eax + 0x14 ]
xor esi esi
mov [ ebp - 0x60 ] edi
mov [ ebp - 0x58 ] ecx
mov [ ebp - 0x5c ] edx
mov [ ebp - 0x54 ] esi
cmp edx esi
je r-xdata
push edx
push [ ebp - 0x54 ]
push edi
call sub_1001789e
push edi
call sub_1001796b
cmp eax 0xc8
je r-xdata
cmp [ eax + 0x18 ] 0x10
jb r-xdata
call sub_10029f2e
retn
cmp eax 0x197
je r-xdata
add eax 0x4
mov eax [ eax + 0x4 ]
jmp r-xdata
push esi
lea ecx [ ebp - 0x50 ]
mov [ ebp - 0x38 ] 0x7
call sub_10002460
lea ecx [ ebp - 0x34 ]
call sub_10001ac0
xor ebx ebx
inc ebx
mov [ ebp - 0x4 ] ebx
lea ecx [ ebp - 0xb4 ]
mov [ ebp - 0x4 ] 0x2
call sub_100144cf
mov esi eax
push 0xffffffff
push 0x0
push esi
lea ecx [ ebp - 0x50 ]
mov [ ebp - 0x4 ] 0x3
call sub_10001f1a
push 0xffffffff
push 0x0
add esi 0x1c
push esi
lea ecx [ ebp - 0x34 ]
call sub_10001f1a
lea esi [ ebp - 0xb4 ]
call sub_10014647
mov [ ebp - 0x4 ] ebx
jmp sub_1001487a
push r--data
lea ecx [ ebp - 0x7c ]
call sub_10001b81
lea eax [ ebp - 0x7c ]
push eax
lea ecx [ ebp - 0x12c ]
mov [ ebp - 0x4 ] esi
call sub_100078c4
push r--data
lea eax [ ebp - 0x12c ]
push eax
call sub_10029a01
mov [ ebp - 0x54 ] eax
sub_1001487a
mov esi r--data
push esi
lea ecx [ ebp - 0x34 ]
call sub_1000fee8
test eax eax
je r-xdata
lea ebx [ ebp - 0xb4 ]
call sub_10021e6f
mov esi eax
push 0xffffffff
push 0x0
push esi
lea ecx [ ebp - 0x50 ]
mov [ ebp - 0x4 ] 0x6
call sub_10001f1a
push 0xffffffff
push 0x0
add esi 0x1c
push esi
lea ecx [ ebp - 0x34 ]
call sub_10001f1a
mov esi ebx
mov [ ebp - 0x4 ] 0x1
call sub_10014647
push [ ebp - 0x5c ]
mov ecx [ ebp - 0x58 ]
push [ ebp - 0x54 ]
push edi
call sub_1001789e
push edi
call sub_1001796b
cmp eax 0xc8
je r-xdata
push esi
lea ecx [ ebp - 0x50 ]
call sub_1000fee8
test eax eax
je r-xdata
lea ecx [ ebp - 0x50 ]
call sub_1001465f
push r--data
lea ecx [ ebp - 0x98 ]
call sub_10001b81
lea eax [ ebp - 0x98 ]
push eax
lea ecx [ ebp - 0x104 ]
mov [ ebp - 0x4 ] 0x7
call sub_100078c4
push r--data
lea eax [ ebp - 0x104 ]
jmp r-xdata
cmp [ ebp - 0x38 ] 0x8
mov eax [ ebp - 0x4c ]
jae r-xdata
push eax
call sub_10029a01
push esi
lea ecx [ ebp - 0x50 ]
mov [ ebp - 0x38 ] 0x7
call sub_10002460
lea ecx [ ebp - 0x34 ]
call sub_10001ac0
xor ebx ebx
inc ebx
mov [ ebp - 0x4 ] ebx
lea ecx [ ebp - 0xb4 ]
mov [ ebp - 0x4 ] 0x2
call sub_100144cf
mov esi eax
push 0xffffffff
push 0x0
push esi
lea ecx [ ebp - 0x50 ]
mov [ ebp - 0x4 ] 0x3
call sub_10001f1a
push 0xffffffff
push 0x0
add esi 0x1c
push esi
lea ecx [ ebp - 0x34 ]
call sub_10001f1a
lea esi [ ebp - 0xb4 ]
call sub_10014647
mov [ ebp - 0x4 ] ebx
jmp sub_1001487a
mov ecx [ ebp - 0x3c ]
add ecx ecx
push ecx
push eax
push 0x2b
push edi
call sub_10017ae1
cmp [ ebp - 0x1c ] 0x8
mov eax [ ebp - 0x30 ]
jae r-xdata
lea eax [ ebp - 0x4c ]
mov ecx [ ebp - 0x20 ]
add ecx ecx
push ecx
push eax
push 0x2c
push edi
call sub_10017ae1
push [ ebp - 0x5c ]
mov ecx [ ebp - 0x58 ]
push [ ebp - 0x54 ]
push edi
call sub_1001789e
push edi
call sub_1001796b
cmp eax 0xc8
je r-xdata
lea eax [ ebp - 0x30 ]
lea esi [ ebp - 0x50 ]
call sub_10014647
call sub_10029f2e
retn
cmp eax 0x197
je r-xdata
push r--data
lea ecx [ ebp - 0x7c ]
call sub_10001b81
lea eax [ ebp - 0x7c ]
push eax
lea ecx [ ebp - 0xdc ]
mov [ ebp - 0x4 ] 0x5
call sub_100078c4
push r--data
lea eax [ ebp - 0xdc ]
jmp r-xdata
sub_100149cf
push esi
push edi
mov edi [ esp + 0xc ]
push edi
mov esi ecx
call sub_100149f0
mov [ esi ] r--data
mov eax [ edi + 0x28 ]
mov [ esi + 0x28 ] eax
pop edi
mov eax esi
pop esi
retn 0x4
sub_10014a2a
push ebp
mov ebp esp
sub esp 0x30
cmp [ ebp + 0x8 ] 0x0
push ebx
push esi
je r-xdata
pop esi
pop ebx
leave
retn
call [ GetLastError@IAT ]
test eax eax
je r-xdata
push [ ebp + 0xc ]
mov ebx eax
lea esi [ ebp - 0x2c ]
call sub_10016782
push r--data
mov eax esi
push eax
call sub_10029a01
sub_10014a60
push 0x48
mov eax sub_1004c7a0
call sub_10029e33
mov eax [ ebp + 0x8 ]
mov edx [ ecx ]
mov [ eax ] r--data
mov [ eax + 0x4 ] edx
and [ ebp - 0x4 ] 0x0
mov [ eax ] r--data
mov edx [ ecx + 0x4 ]
mov [ eax + 0x8 ] edx
cmp [ ecx ] 0x0
jne r-xdata
call sub_10029f0b
retn 0x4
push r--data
lea ecx [ ebp - 0x2c ]
call sub_10001b81
lea eax [ ebp - 0x2c ]
push eax
lea ecx [ ebp - 0x54 ]
mov [ ebp - 0x4 ] 0x1
call sub_100078c4
push r--data
lea eax [ ebp - 0x54 ]
push eax
call sub_10029a01
sub_10014acd
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_1004d927
mov eax [ fs : 0x0 ]
push eax
sub esp 0x68
push esi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x70 ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
push 0xffffffff
push eax
call [ WaitForSingleObject@IAT ]
push r--data
lea ecx [ esp + 0x10 ]
mov esi eax
call sub_10001b81
and [ esp + 0x78 ] 0x0
lea eax [ esp + 0xc ]
push eax
cmp esi 0xffffffff
sete al
movzx eax al
push eax
call sub_10014a2a
or [ esp + 0x80 ] 0xffffffff
pop ecx
pop ecx
push 0x0
push 0x1
lea ecx [ esp + 0x14 ]
call sub_100022b5
test esi esi
je r-xdata
mov ecx [ esp + 0x70 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0x4
push r--data
lea ecx [ esp + 0x2c ]
call sub_10001b81
lea eax [ esp + 0x28 ]
push eax
lea ecx [ esp + 0x48 ]
mov [ esp + 0x7c ] 0x1
call sub_100078c4
push r--data
lea eax [ esp + 0x48 ]
push eax
call sub_10029a01
sub_10014b90
push 0x20
mov eax sub_1004d5bc
call sub_10029e33
mov eax [ ebp + 0x8 ]
push [ eax + 0x4 ]
call [ ResumeThread@IAT ]
push r--data
lea ecx [ ebp - 0x28 ]
mov esi eax
call sub_10001b81
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x28 ]
push eax
cmp esi 0xffffffff
sete al
movzx eax al
push eax
call sub_10014a2a
pop ecx
pop ecx
push 0x0
push 0x1
lea ecx [ ebp - 0x28 ]
call sub_100022b5
call sub_10029f0b
retn 0x4
sub_10014be4
push ebp
mov ebp esp
sub esp 0x2c
push ebx
mov ebx eax
push esi
test ebx ebx
je r-xdata
pop esi
pop ebx
leave
retn
push [ ebp + 0x8 ]
lea esi [ ebp - 0x2c ]
call sub_10016782
push r--data
mov eax esi
push eax
call sub_10029a01
sub_10014c0e
push 0x50
mov eax sub_1004d19b
call sub_10029e33
mov esi [ ebp + 0x8 ]
push [ ebp + 0x10 ]
lea edi [ esi + 0x4 ]
and [ edi ] 0x0
lea ebx [ esi + 0x8 ]
and [ ebx ] 0x0
lea ecx [ esi + 0xc ]
mov [ esi ] r--data
call sub_10001fad
mov ecx [ ebp + 0x18 ]
and [ ebp - 0x4 ] 0x0
and [ ebp - 0x14 ] 0x0
push r--data
call sub_1000fee8
test eax eax
je r-xdata
mov eax [ ebp + 0x10 ]
cmp [ eax + 0x18 ] 0x8
jb r-xdata
mov eax [ ebp + 0x18 ]
cmp [ eax + 0x18 ] 0x8
jb r-xdata
add eax 0x4
mov eax [ eax + 0x4 ]
jmp r-xdata
add eax 0x4
mov eax [ eax + 0x4 ]
jmp r-xdata
cmp [ edi ] ebx
jne r-xdata
push r--data
lea ecx [ ebp - 0x30 ]
call sub_10001b81
mov ebx [ ebp + 0x18 ]
lea eax [ ebp - 0x30 ]
push eax
lea esi [ ebp - 0x5c ]
mov [ ebp - 0x4 ] 0x1
call sub_10016782
push r--data
mov eax esi
push ebx
push edi
xor ebx ebx
push ebx
push [ ebp + 0x14 ]
push ebx
push [ ebp - 0x14 ]
push ebx
push eax
push [ ebp + 0xc ]
call [ RegCreateKeyExW@IAT ]
mov [ ebp + 0x18 ] eax
cmp eax ebx
je r-xdata
mov [ ebp - 0x14 ] eax
mov eax esi
call sub_10029f0b
retn 0x14
push r--data
lea ecx [ ebp - 0x30 ]
call sub_10001b81
lea eax [ ebp - 0x30 ]
push eax
lea ecx [ ebp - 0x58 ]
mov [ ebp - 0x4 ] 0x2
call sub_100078c4
push r--data
lea eax [ ebp - 0x58 ]
jmp r-xdata
push eax
call sub_10029a01
sub_10014d14
push esi
mov esi ecx
mov eax [ esi + 0x4 ]
mov [ esi ] r--data
test eax eax
je r-xdata
push 0x0
push 0x1
lea ecx [ esi + 0xc ]
call sub_1000247e
pop esi
retn
push eax
call [ RegCloseKey@IAT ]
and [ esi + 0x4 ] 0x0
sub_10014d3d
push 0x88
mov eax sub_1004d162
call sub_10029e33
mov eax [ ebp + 0x10 ]
xor ebx ebx
mov [ ebp - 0x20 ] ebx
cmp [ eax + 0x18 ] 0x8
mov [ ebp - 0x14 ] ebx
mov [ ebp - 0x10 ] ebx
jb r-xdata
add eax 0x4
add eax 0x4
mov eax [ eax ]
jmp r-xdata
push 0x20
call sub_10025dd6
mov esi eax
pop ecx
mov [ ebp - 0x24 ] esi
mov [ ebp - 0x4 ] 0x2
cmp esi ebx
je r-xdata
push r--data
lea ecx [ ebp - 0x40 ]
call sub_10001b81
lea eax [ ebp - 0x40 ]
mov [ ebp - 0x4 ] 0x1
push eax
mov ebx esi
mov edi [ RegQueryValueExW@IAT ]
lea ecx [ ebp - 0x14 ]
push ecx
push ebx
lea ecx [ ebp - 0x10 ]
push ecx
push ebx
push eax
mov eax [ ebp + 0x8 ]
push [ eax + 0x4 ]
call edi
mov esi eax
cmp esi ebx
je r-xdata
xor esi esi
push [ ebp - 0x14 ]
call sub_10017305
mov esi eax
jmp r-xdata
add eax 0x8
mov eax [ eax + 0x8 ]
jmp r-xdata
mov [ ebp - 0x4 ] bl
push esi
lea ecx [ ebp - 0x18 ]
mov [ ebp - 0x1c ] esi
call sub_10015278
push esi
lea eax [ ebp - 0x1c ]
push esi
push eax
call sub_1002360a
add esp 0xc
mov [ ebp - 0x4 ] 0x3
mov eax [ ebp - 0x1c ]
cmp [ eax + 0x1c ] 0x10
jb r-xdata
lea ecx [ esi + 0x4 ]
mov ecx [ esi + 0x4 ]
jmp r-xdata
mov esi [ ebp + 0x10 ]
cmp [ esi + 0x18 ] 0x8
jb r-xdata
push esi
push ecx
push ecx
mov ecx [ ebp - 0x1c ]
mov eax esp
mov [ eax ] ecx
lea ecx [ ebp - 0x18 ]
mov [ ebp + 0x10 ] esp
push ecx
lea ecx [ eax + 0x4 ]
call sub_1000979b
push [ ebp - 0x10 ]
lea eax [ ebp - 0x94 ]
push eax
call sub_10015060
mov [ ebp - 0x4 ] 0x5
push [ ebp + 0xc ]
mov ecx eax
call sub_10014ebf
lea esi [ ebp - 0x94 ]
mov [ ebp - 0x20 ] 0x1
mov [ ebp - 0x4 ] 0x3
call sub_100150b3
mov [ ebp - 0x4 ] bl
mov ecx [ ebp - 0x18 ]
cmp ecx ebx
je r-xdata
push r--data
lea ecx [ ebp - 0x40 ]
call sub_10001b81
lea eax [ ebp - 0x40 ]
mov [ ebp - 0x4 ] 0x4
push eax
mov ebx edi
jmp r-xdata
lea edx [ ebp - 0x14 ]
push edx
push eax
lea eax [ ebp - 0x10 ]
push eax
mov eax [ ebp + 0x8 ]
push ebx
push ecx
push [ eax + 0x4 ]
call edi
mov edi eax
cmp edi ebx
je r-xdata
mov eax [ ebp + 0xc ]
call sub_10029f0b
retn 0xc
call sub_1000990a
lea esi [ ebp - 0x6c ]
call sub_10016782
push r--data
mov eax esi
push eax
call sub_10029a01
sub_10014ebf
push 0x0
mov eax sub_1004cc1f
call sub_10029e33
mov edi ecx
mov esi [ ebp + 0x8 ]
mov eax [ edi ]
mov [ esi ] eax
mov eax [ edi + 0x4 ]
mov [ esi + 0x4 ] eax
lea eax [ edi + 0x8 ]
push eax
lea ecx [ esi + 0x8 ]
call sub_1000979b
and [ ebp - 0x4 ] 0x0
add edi 0xc
push edi
lea ecx [ esi + 0xc ]
call sub_10001fad
mov eax esi
call sub_10029f0b
retn 0x4
sub_10014f00
push 0x4c
mov eax sub_1004d101
call sub_10029e33
and [ ebp - 0x4 ] 0x0
mov eax [ ebp + 0x10 ]
cmp [ eax + 0x1c ] 0x10
mov edx [ eax + 0x18 ]
jb r-xdata
add eax 0x8
mov eax [ eax + 0x8 ]
jmp r-xdata
add ecx 0x4
mov ecx [ ecx + 0x4 ]
jmp r-xdata
cmp [ ecx + 0x18 ] 0x8
jb r-xdata
or [ ebp - 0x4 ] 0xffffffff
mov ecx [ ebp + 0x14 ]
test ecx ecx
je r-xdata
push r--data
lea ecx [ ebp - 0x28 ]
call sub_10001b81
lea eax [ ebp - 0x28 ]
push eax
lea esi [ ebp - 0x54 ]
mov [ ebp - 0x4 ] 0x1
call sub_10016782
push r--data
mov eax esi
push eax
call sub_10029a01
push edx
push eax
push [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
push 0x0
push ecx
push [ eax + 0x4 ]
call [ RegSetValueExW@IAT ]
mov ebx eax
test ebx ebx
je r-xdata
call sub_10029f0b
retn 0x10
call sub_1000990a
sub_10014f8e
push 0x20
mov eax sub_1004d8fc
call sub_10029e33
mov edi ecx
push ecx
push ecx
mov esi esp
mov eax edi
mov [ ebp - 0x10 ] esp
call sub_100150cc
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x2c ]
push eax
mov eax edi
call sub_100150e0
mov [ ebp - 0x4 ] 0x1
mov edi [ edi ]
push edi
push [ ebp + 0x8 ]
mov ecx eax
mov [ ebp - 0x4 ] 0x2
call sub_10014f00
push 0x0
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_1000247e
call sub_10029f0b
retn 0x4
sub_10014fe2
push 0x4c
mov eax sub_1004d0d6
call sub_10029e33
mov eax [ ebp + 0xc ]
xor esi esi
cmp [ eax + 0x18 ] 0x8
mov [ ebp + 0xc ] esi
mov [ ebp - 0x10 ] esi
jb r-xdata
add eax 0x4
mov eax [ eax + 0x4 ]
jmp r-xdata
cmp ebx esi
je r-xdata
xor al al
jmp r-xdata
lea ecx [ ebp + 0xc ]
push ecx
push esi
lea ecx [ ebp - 0x10 ]
push ecx
push esi
push eax
mov eax [ ebp + 0x8 ]
push [ eax + 0x4 ]
call [ RegQueryValueExW@IAT ]
mov ebx eax
cmp ebx 0x2
jne r-xdata
mov al 0x1
push r--data
lea ecx [ ebp - 0x2c ]
call sub_10001b81
lea eax [ ebp - 0x2c ]
mov [ ebp - 0x4 ] esi
push eax
lea esi [ ebp - 0x58 ]
call sub_10016782
push r--data
mov eax esi
push eax
call sub_10029a01
call sub_10029f0b
retn 0x8
sub_10015060
push 0x0
mov eax sub_1004cbf9
call sub_10029e33
mov esi [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
mov eax [ ebp + 0xc ]
mov [ esi ] eax
mov eax [ ebp + 0x10 ]
mov [ esi + 0x4 ] eax
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ esi + 0x8 ]
call sub_1000979b
push [ ebp + 0x18 ]
lea ecx [ esi + 0xc ]
mov [ ebp - 0x4 ] 0x1
call sub_10001fad
or [ ebp - 0x4 ] 0xffffffff
mov ecx [ ebp + 0x14 ]
test ecx ecx
je r-xdata
mov eax esi
call sub_10029f0b
retn 0x14
call sub_1000990a
sub_100150fb
push 0x14
mov eax sub_1004cbcb
call sub_10029e33
mov eax [ ebp + 0x8 ]
and [ ebp - 0x10 ] 0x0
lea esi [ ebp - 0x20 ]
call sub_100150cc
mov edi eax
mov eax [ ebp + 0x8 ]
xor ebx ebx
inc ebx
lea esi [ ebp - 0x18 ]
mov [ ebp - 0x4 ] ebx
call sub_100150cc
mov [ ebp - 0x4 ] 0x2
mov eax [ eax ]
cmp [ eax + 0x1c ] 0x10
mov ecx [ edi ]
mov ecx [ ecx + 0x18 ]
jb r-xdata
add eax 0x8
mov eax [ eax + 0x8 ]
jmp r-xdata
mov [ ebp - 0x4 ] 0x0
mov ecx [ ebp - 0x1c ]
test ecx ecx
je r-xdata
call sub_1000990a
dec ecx
shr ecx 0x1
push ecx
mov ecx [ ebp + 0xc ]
push eax
call sub_100048ea
mov [ ebp - 0x4 ] bl
mov ecx [ ebp - 0x14 ]
mov [ ebp - 0x10 ] ebx
test ecx ecx
je r-xdata
mov eax [ ebp + 0xc ]
call sub_10029f0b
retn 0x8
call sub_1000990a
sub_1001517c
push 0x3c
mov eax sub_1004d0b3
call sub_10029e33
and [ ebp - 0x14 ] 0x0
push 0x20
call sub_10025dd6
mov esi eax
pop ecx
mov [ ebp - 0x18 ] esi
xor ebx ebx
inc ebx
mov [ ebp - 0x4 ] ebx
test esi esi
je r-xdata
xor esi esi
cmp [ edi + 0x18 ] 0x8
mov ecx [ edi + 0x14 ]
jb r-xdata
lea ecx [ eax + 0x8 ]
mov ecx [ eax + 0x8 ]
jmp r-xdata
lea eax [ edi + 0x4 ]
mov eax [ edi + 0x4 ]
jmp r-xdata
mov eax [ ebp + 0x8 ]
call sub_10029f0b
retn
call sub_1000990a
push [ ebp + 0xc ]
mov eax [ edi + 0x14 ]
push ecx
push ecx
xor edx edx
mov [ ecx + eax * 2 ] dx
mov ecx [ ebp - 0x20 ]
mov eax esp
mov [ eax ] ecx
lea ecx [ ebp - 0x1c ]
mov [ ebp + 0xc ] esp
push ecx
lea ecx [ eax + 0x4 ]
call sub_1000979b
push ebx
lea eax [ ebp - 0x48 ]
push eax
call sub_10015060
mov [ ebp - 0x4 ] 0x3
push [ ebp + 0x8 ]
mov ecx eax
call sub_10014ebf
lea esi [ ebp - 0x48 ]
mov [ ebp - 0x14 ] ebx
mov [ ebp - 0x4 ] 0x2
call sub_100150b3
mov [ ebp - 0x4 ] 0x0
mov ecx [ ebp - 0x1c ]
test ecx ecx
je r-xdata
mov [ ebp - 0x4 ] 0x0
push esi
lea ecx [ ebp - 0x1c ]
mov [ ebp - 0x20 ] esi
call sub_10015278
push esi
lea eax [ ebp - 0x20 ]
push esi
push eax
call sub_1002360a
add esp 0xc
mov [ ebp - 0x4 ] 0x2
mov eax [ ebp - 0x20 ]
cmp [ eax + 0x1c ] 0x10
jb r-xdata
lea ecx [ ecx + ecx + 0x2 ]
push ecx
push eax
call sub_1001733a
mov esi eax
jmp r-xdata
sub_10015278
push 0x4
mov eax sub_1004beed
call sub_10029e66
mov esi ecx
and [ esi ] 0x0
and [ ebp - 0x4 ] 0x0
push 0x10
call sub_10025dd6
pop ecx
test eax eax
je r-xdata
xor eax eax
xor ecx ecx
inc ecx
mov [ eax + 0x4 ] ecx
mov [ eax + 0x8 ] ecx
mov ecx [ ebp + 0x8 ]
mov [ eax ] r--data
mov [ eax + 0xc ] ecx
jmp r-xdata
mov [ esi ] eax
mov eax esi
call sub_10029f0b
retn 0x4
sub_100152d5
push 0x30
mov eax sub_1004d8d1
call sub_10029e33
lea eax [ ebp - 0x14 ]
push eax
push 0x4
push esi
push sub_100153f5
push [ ebp + 0x8 ]
xor ebx ebx
push ebx
call [ CreateThread@IAT ]
push r--data
lea ecx [ ebp - 0x3c ]
mov [ ebp - 0x18 ] eax
call sub_10001b81
mov [ ebp - 0x4 ] ebx
cmp [ ebp - 0x18 ] ebx
lea eax [ ebp - 0x3c ]
push eax
sete al
movzx eax al
push eax
call sub_10014a2a
or [ ebp - 0x4 ] 0xffffffff
pop ecx
pop ecx
push ebx
push 0x1
lea ecx [ ebp - 0x3c ]
call sub_100022b5
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x20 ] eax
mov eax [ ebp - 0x14 ]
push esi
lea ecx [ ebp - 0x20 ]
mov [ ebp - 0x1c ] eax
call sub_10014a60
mov [ esi ] r--data
mov [ esi + 0xc ] bl
mov [ esi + 0xd ] bl
mov [ esi + 0x10 ] ebx
mov eax esi
call sub_10029f0b
retn 0x4
sub_1001537a
push 0x24
mov eax sub_1004de64
call sub_10029e66
mov esi ecx
mov [ ebp - 0x14 ] esi
mov [ esi ] r--data
xor edi edi
mov [ ebp - 0x4 ] edi
mov [ ebp - 0x4 ] 0x1
mov eax [ esi + 0x4 ]
push edi
push eax
call [ TerminateThread@IAT ]
push r--data
lea ecx [ ebp - 0x30 ]
mov ebx eax
call sub_10001b81
lea eax [ ebp - 0x30 ]
push eax
cmp ebx edi
sete al
movzx eax al
push eax
mov [ ebp - 0x4 ] 0x2
call sub_10014a2a
pop ecx
pop ecx
push edi
push 0x1
lea ecx [ ebp - 0x30 ]
call sub_100022b5
jmp r-xdata
mov ecx esi
mov [ esi ] r--data
call sub_10015935
call sub_10029f0b
retn
sub_100153f5
push 0x8
push r--data
call sub_1002e7e4
and [ ebp - 0x4 ] 0x0
mov ecx [ ebp + 0x8 ]
test ecx ecx
jne r-xdata
mov eax [ ecx ]
call [ eax + 0x8 ]
mov [ ebp - 0x4 ] 0xfffffffe
jmp sub_10015437
mov [ ebp - 0x4 ] 0xfffffffe
xor eax eax
inc eax
jmp sub_10015437
sub_10015457
push 0x3c
mov eax sub_1004d8ae
call sub_10029e33
xor edi edi
push edi
push 0x2
call CreateToolhelp32Snapshot
mov esi r--data
push esi
lea ecx [ ebp - 0x28 ]
mov ebx eax
call sub_10001b81
lea eax [ ebp - 0x28 ]
push eax
cmp ebx edi
sete al
movzx eax al
push eax
mov [ ebp - 0x4 ] edi
call sub_10014a2a
or [ ebp - 0x4 ] 0xffffffff
pop ecx
pop ecx
push edi
inc edi
push edi
lea ecx [ ebp - 0x28 ]
call sub_100022b5
push esi
lea ecx [ ebp - 0x44 ]
call sub_10001b81
lea eax [ ebp - 0x44 ]
push eax
cmp ebx 0xffffffff
sete al
movzx eax al
push eax
mov [ ebp - 0x4 ] edi
call sub_10014a2a
pop ecx
pop ecx
push 0x0
push edi
lea ecx [ ebp - 0x44 ]
call sub_100022b5
mov eax ebx
call sub_10029f0b
retn
sub_100154d7
push 0x60
mov eax sub_1004d883
call sub_10029e33
test edi edi
jne r-xdata
mov esi 0x22c
push esi
push 0x0
push edi
call sub_10026630
mov eax [ ebp + 0x8 ]
add esp 0xc
mov [ edi ] esi
mov eax [ eax + 0x4 ]
push edi
push eax
call Process32FirstW
xor ebx ebx
mov esi eax
inc ebx
cmp esi ebx
je r-xdata
push r--data
lea ecx [ ebp - 0x44 ]
call sub_10001b81
and [ ebp - 0x4 ] edi
lea eax [ ebp - 0x44 ]
push eax
lea ecx [ ebp - 0x6c ]
call sub_100078c4
push r--data
lea eax [ ebp - 0x6c ]
push eax
call sub_10029a01
push r--data
lea ecx [ ebp - 0x28 ]
call sub_10001b81
lea eax [ ebp - 0x28 ]
push eax
cmp esi ebx
setne al
movzx eax al
push eax
mov [ ebp - 0x4 ] ebx
call sub_10014a2a
pop ecx
pop ecx
push 0x0
push ebx
lea ecx [ ebp - 0x28 ]
call sub_100022b5
mov al bl
call [ GetLastError@IAT ]
cmp eax 0x12
jne r-xdata
xor al al
jmp r-xdata
call sub_10029f0b
retn 0x4
sub_10015582
push 0x60
mov eax sub_1004d883
call sub_10029e33
test edi edi
jne r-xdata
mov esi 0x22c
push esi
push 0x0
push edi
call sub_10026630
mov eax [ ebp + 0x8 ]
add esp 0xc
mov [ edi ] esi
mov eax [ eax + 0x4 ]
push edi
push eax
call Process32NextW
xor ebx ebx
mov esi eax
inc ebx
cmp esi ebx
je r-xdata
push r--data
lea ecx [ ebp - 0x44 ]
call sub_10001b81
and [ ebp - 0x4 ] edi
lea eax [ ebp - 0x44 ]
push eax
lea ecx [ ebp - 0x6c ]
call sub_100078c4
push r--data
lea eax [ ebp - 0x6c ]
push eax
call sub_10029a01
push r--data
lea ecx [ ebp - 0x28 ]
call sub_10001b81
lea eax [ ebp - 0x28 ]
push eax
cmp esi ebx
setne al
movzx eax al
push eax
mov [ ebp - 0x4 ] ebx
call sub_10014a2a
pop ecx
pop ecx
push 0x0
push ebx
lea ecx [ ebp - 0x28 ]
call sub_100022b5
mov al bl
call [ GetLastError@IAT ]
cmp eax 0x12
jne r-xdata
xor al al
jmp r-xdata
call sub_10029f0b
retn 0x4
sub_1001564a
push 0x1c
mov eax sub_1004d858
call sub_10029e33
push r--data
lea ecx [ ebp - 0x28 ]
mov [ esi ] r--data
call sub_10001254
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x28 ]
push eax
call sub_10015694
push 0x0
push 0x1
lea ecx [ ebp - 0x28 ]
mov [ esi + 0x4 ] eax
call sub_1000247e
mov eax esi
call sub_10029f0b
retn
sub_10015694
push 0x20
mov eax sub_1004d5bc
call sub_10029e33
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x18 ] 0x8
jb r-xdata
add eax 0x4
mov eax [ eax + 0x4 ]
jmp r-xdata
push eax
call [ GetModuleHandleW@IAT ]
push r--data
lea ecx [ ebp - 0x28 ]
mov esi eax
call sub_10001b81
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x28 ]
push eax
test esi esi
sete al
movzx eax al
push eax
call sub_10014a2a
pop ecx
pop ecx
push 0x0
push 0x1
lea ecx [ ebp - 0x28 ]
call sub_100022b5
mov eax esi
call sub_10029f0b
retn 0x4
sub_100156f5
push 0x44
mov eax sub_1004d835
call sub_10029e33
lea eax [ ebp - 0x10 ]
push eax
push sub_1002360a
xor ebx ebx
push 0x6
mov [ ebp - 0x10 ] ebx
call [ GetModuleHandleExW@IAT ]
mov esi r--data
push esi
lea ecx [ ebp - 0x30 ]
mov [ ebp - 0x14 ] eax
call sub_10001b81
xor edi edi
lea eax [ ebp - 0x30 ]
inc edi
cmp [ ebp - 0x14 ] edi
push eax
setne al
movzx eax al
push eax
mov [ ebp - 0x4 ] ebx
call sub_10014a2a
or [ ebp - 0x4 ] 0xffffffff
pop ecx
pop ecx
push ebx
push edi
lea ecx [ ebp - 0x30 ]
call sub_100022b5
push esi
lea ecx [ ebp - 0x4c ]
call sub_10001b81
mov [ ebp - 0x4 ] edi
cmp [ ebp - 0x10 ] ebx
lea eax [ ebp - 0x4c ]
push eax
sete al
movzx eax al
push eax
call sub_10014a2a
pop ecx
pop ecx
push ebx
push edi
lea ecx [ ebp - 0x4c ]
call sub_100022b5
mov eax [ ebp - 0x10 ]
call sub_10029f0b
retn
sub_10015785
push 0x1c
mov eax sub_1004d599
call sub_10029e33
mov eax [ ebp + 0xc ]
cmp [ eax + 0x18 ] 0x10
jb r-xdata
add eax 0x4
mov eax [ eax + 0x4 ]
jmp r-xdata
mov eax esi
call sub_10029f0b
retn 0x8
call [ GetLastError@IAT ]
cmp eax 0x2
je r-xdata
push eax
mov eax [ ebp + 0x8 ]
push [ eax + 0x4 ]
call [ GetProcAddress@IAT ]
mov esi eax
test esi esi
jne r-xdata
push r--data
lea ecx [ ebp - 0x28 ]
call sub_10001b81
and [ ebp - 0x4 ] esi
lea eax [ ebp - 0x28 ]
push eax
push 0x1
call sub_10014a2a
pop ecx
pop ecx
push esi
push 0x1
lea ecx [ ebp - 0x28 ]
call sub_100022b5
sub_100157f2
push 0x1c
mov eax sub_1004d599
call sub_10029e33
mov eax [ ebp + 0xc ]
cmp [ eax + 0x18 ] 0x10
jb r-xdata
add eax 0x4
mov eax [ eax + 0x4 ]
jmp r-xdata
push eax
mov eax [ ebp + 0x8 ]
push [ eax + 0x4 ]
call [ GetProcAddress@IAT ]
push r--data
lea ecx [ ebp - 0x28 ]
mov esi eax
call sub_10001b81
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x28 ]
push eax
test esi esi
sete al
movzx eax al
push eax
call sub_10014a2a
pop ecx
pop ecx
push 0x0
push 0x1
lea ecx [ ebp - 0x28 ]
call sub_100022b5
mov eax esi
call sub_10029f0b
retn 0x8
sub_10015859
push 0x230
mov eax sub_1004d7fd
call sub_10029e9c
mov eax [ ebp + 0x8 ]
and [ ebp - 0x220 ] 0x0
mov esi 0x208
push esi
mov [ ebp - 0x21c ] eax
lea eax [ ebp - 0x218 ]
push 0x0
push eax
call sub_10026630
add esp 0xc
push esi
lea eax [ ebp - 0x218 ]
push eax
push [ ebp - 0x21c ]
call [ GetModuleFileNameW@IAT ]
push r--data
lea ecx [ ebp - 0x23c ]
mov esi eax
call sub_10001b81
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x23c ]
push eax
test esi esi
sete al
movzx eax al
push eax
call sub_10014a2a
or [ ebp - 0x4 ] 0xffffffff
pop ecx
pop ecx
push 0x0
push 0x1
lea ecx [ ebp - 0x23c ]
call sub_100022b5
push esi
lea eax [ ebp - 0x218 ]
push eax
mov ecx ebx
call sub_100048ea
mov eax ebx
call sub_10029f1f
retn
sub_100158fa
push ecx
push ecx
and [ esp + 0x4 ] 0x0
push ebx
push [ eax + 0x4 ]
mov ebx ecx
call sub_10015859
pop ecx
mov eax ebx
pop ebx
pop ecx
pop ecx
retn
sub_10015935
push esi
lea esi [ ecx + 0x4 ]
mov eax [ esi ]
test eax eax
jne r-xdata
mov [ esi ] 0x0
pop esi
retn
mov eax [ esi ]
cmp eax 0xffffffff
jne r-xdata
push [ esi ]
call [ CloseHandle@IAT ]
sub_10015956
push 0x1c
mov eax sub_1004d599
call sub_10029e33
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x18 ] 0x8
jb r-xdata
add eax 0x4
mov eax [ eax + 0x4 ]
jmp r-xdata
add ecx 0x4
mov ecx [ ecx + 0x4 ]
jmp r-xdata
cmp [ ecx + 0x18 ] 0x8
jb r-xdata
push 0x0
push eax
push ecx
call [ CopyFileW@IAT ]
push r--data
lea ecx [ ebp - 0x28 ]
mov edi eax
call sub_10001b81
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x28 ]
push eax
cmp edi 0x1
setne al
movzx eax al
push eax
call sub_10014a2a
pop ecx
pop ecx
push 0x0
push 0x1
lea ecx [ ebp - 0x28 ]
call sub_100022b5
call sub_10029f0b
retn
sub_100159c5
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_1004d7c4
mov eax [ fs : 0x0 ]
push eax
sub esp 0x94
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x8c ] eax
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0xa0 ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
mov [ esp + 0x18 ] eax
xor ecx ecx
cmp [ ebx + 0x18 ] 0x8
lea eax [ ebx + 0x4 ]
mov [ esp + 0x10 ] ecx
mov [ esp + 0x14 ] eax
jb r-xdata
mov esi [ GetEnvironmentVariableW@IAT ]
push ecx
push ecx
push eax
call esi
mov edi r--data
push edi
lea ecx [ esp + 0x20 ]
mov [ esp + 0x14 ] eax
call sub_10001b81
and [ esp + 0xa8 ] 0x0
cmp [ esp + 0x10 ] 0x0
lea eax [ esp + 0x1c ]
push eax
sete al
movzx eax al
push eax
call sub_10014a2a
or [ esp + 0xb0 ] 0xffffffff
pop ecx
pop ecx
push 0x0
push 0x1
lea ecx [ esp + 0x24 ]
call sub_100022b5
push 0x0
push [ esp + 0x14 ]
lea ecx [ esp + 0x84 ]
call sub_10004910
mov [ esp + 0xa8 ] 0x1
cmp [ esp + 0x94 ] 0x8
mov ecx [ esp + 0x80 ]
jae r-xdata
mov eax [ eax ]
cmp [ ebx + 0x18 ] 0x8
mov eax [ esp + 0x14 ]
jb r-xdata
lea ecx [ esp + 0x80 ]
push [ esp + 0x90 ]
push ecx
push eax
call esi
push edi
lea ecx [ esp + 0x20 ]
mov esi eax
call sub_10001b81
lea eax [ esp + 0x1c ]
push eax
test esi esi
sete al
movzx eax al
push eax
mov [ esp + 0xb0 ] 0x2
call sub_10014a2a
pop ecx
pop ecx
push 0x0
push 0x1
lea ecx [ esp + 0x24 ]
mov [ esp + 0xb0 ] 0x1
call sub_100022b5
inc esi
cmp [ esp + 0x10 ] esi
je r-xdata
mov eax [ eax ]
cmp [ esp + 0x94 ] 0x8
mov eax [ esp + 0x80 ]
jae r-xdata
push r--data
lea ecx [ esp + 0x3c ]
call sub_10001b81
lea eax [ esp + 0x38 ]
push eax
lea ecx [ esp + 0x58 ]
mov [ esp + 0xac ] 0x3
call sub_100078c4
push r--data
lea eax [ esp + 0x58 ]
push eax
call sub_10029a01
mov ecx [ esp + 0x18 ]
push eax
call sub_10001254
push 0x0
push 0x1
lea ecx [ esp + 0x84 ]
call sub_1000247e
mov eax [ esp + 0x18 ]
mov ecx [ esp + 0xa0 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov ecx [ esp + 0x8c ]
xor ecx esp
call sub_10025c8d
mov esp ebp
pop ebp
retn
lea eax [ esp + 0x80 ]
sub_10015b90
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_1004d770
mov eax [ fs : 0x0 ]
push eax
sub esp 0x284
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x27c ] eax
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x290 ]
mov [ fs : 0x0 ] eax
xor edi edi
push 0x20a
lea eax [ esp + 0x78 ]
push edi
push eax
mov esi ecx
mov [ esp + 0x1c ] edi
call sub_10026630
add esp 0xc
cmp [ esi + 0x18 ] 0x8
jb r-xdata
add esi 0x4
mov esi [ esi + 0x4 ]
jmp r-xdata
lea eax [ esp + 0x74 ]
push eax
mov ecx ebx
call sub_10001254
mov eax ebx
mov ecx [ esp + 0x290 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov ecx [ esp + 0x27c ]
xor ecx esp
call sub_10025c8d
mov esp ebp
pop ebp
retn
push r--data
lea ecx [ esp + 0x34 ]
call sub_10001b81
lea eax [ esp + 0x30 ]
push eax
lea ecx [ esp + 0x50 ]
mov [ esp + 0x29c ] edi
call sub_100078c4
push r--data
lea eax [ esp + 0x50 ]
push eax
call sub_10029a01
lea eax [ esp + 0x74 ]
push eax
push edi
push edi
push esi
call [ GetTempFileNameW@IAT ]
push r--data
lea ecx [ esp + 0x18 ]
mov esi eax
call sub_10001b81
lea eax [ esp + 0x14 ]
push eax
cmp esi edi
sete al
movzx eax al
push eax
mov [ esp + 0x2a0 ] edi
call sub_10014a2a
or [ esp + 0x2a0 ] 0xffffffff
pop ecx
pop ecx
push edi
xor edi edi
inc edi
push edi
lea ecx [ esp + 0x1c ]
call sub_100022b5
cmp esi 0x6f
jne r-xdata
sub_10015cb0
push 0x20
mov eax sub_1004d5bc
call sub_10029e33
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x18 ] 0x8
jb r-xdata
add eax 0x4
mov eax [ eax + 0x4 ]
jmp r-xdata
call sub_10029f0b
retn
call [ GetLastError@IAT ]
mov esi eax
cmp esi 0x2
je r-xdata
push eax
call [ DeleteFileW@IAT ]
cmp eax 0x1
je r-xdata
push r--data
lea ecx [ ebp - 0x28 ]
call sub_10001b81
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x28 ]
push eax
mov eax esi
call sub_10014be4
pop ecx
push 0x0
push 0x1
lea ecx [ ebp - 0x28 ]
call sub_100022b5
sub_10015d15
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_1004d72c
mov eax [ fs : 0x0 ]
push eax
sub esp 0x90
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x88 ] eax
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0xa0 ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
mov esi [ GetSystemDirectoryW@IAT ]
xor ebx ebx
push ebx
push ebx
mov [ esp + 0x20 ] eax
mov [ esp + 0x1c ] ebx
call esi
mov edi r--data
push edi
lea ecx [ esp + 0x20 ]
mov [ esp + 0x18 ] eax
call sub_10001b81
cmp [ esp + 0x14 ] ebx
lea eax [ esp + 0x1c ]
push eax
sete al
movzx eax al
push eax
mov [ esp + 0xb0 ] ebx
call sub_10014a2a
or [ esp + 0xb0 ] 0xffffffff
pop ecx
pop ecx
push ebx
push 0x1
lea ecx [ esp + 0x24 ]
call sub_100022b5
push ebx
push [ esp + 0x18 ]
lea ecx [ esp + 0x84 ]
call sub_10004910
mov [ esp + 0xa8 ] 0x1
cmp [ esp + 0x94 ] 0x8
mov eax [ esp + 0x80 ]
jae r-xdata
push [ esp + 0x14 ]
push eax
call esi
push edi
lea ecx [ esp + 0x20 ]
mov esi eax
call sub_10001b81
lea eax [ esp + 0x1c ]
push eax
cmp esi ebx
sete al
movzx eax al
push eax
mov [ esp + 0xb0 ] 0x2
call sub_10014a2a
pop ecx
pop ecx
push ebx
push 0x1
lea ecx [ esp + 0x24 ]
mov [ esp + 0xb0 ] 0x1
call sub_100022b5
inc esi
cmp [ esp + 0x14 ] esi
je r-xdata
lea eax [ esp + 0x80 ]
cmp [ esp + 0x94 ] 0x8
mov eax [ esp + 0x80 ]
jae r-xdata
push r--data
lea ecx [ esp + 0x3c ]
call sub_10001b81
lea eax [ esp + 0x38 ]
push eax
lea ecx [ esp + 0x58 ]
mov [ esp + 0xac ] 0x3
call sub_100078c4
push r--data
lea eax [ esp + 0x58 ]
push eax
call sub_10029a01
mov ecx [ esp + 0x18 ]
push eax
call sub_10001254
push ebx
push 0x1
lea ecx [ esp + 0x84 ]
call sub_1000247e
mov eax [ esp + 0x18 ]
mov ecx [ esp + 0xa0 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ esp + 0x88 ]
xor ecx esp
call sub_10025c8d
mov esp ebp
pop ebp
retn
lea eax [ esp + 0x80 ]
sub_10015ebc
push ebp
sub esp 0x4c
push 0x8c
mov eax sub_1004e813
call sub_10029e33
mov esi ecx
xor ebx ebx
mov ecx edi
mov [ ebp + 0x44 ] edi
mov [ ebp + 0x4c ] ebx
call sub_10007bb4
mov [ ebp - 0x4 ] ebx
cmp [ esi + 0x18 ] 0x8
mov [ ebp + 0x4c ] 0x1
jb r-xdata
add esi 0x4
mov esi [ esi + 0x4 ]
jmp r-xdata
lea esi [ ebp - 0x98 ]
call sub_10012a15
lea esi [ ebp + 0x2c ]
lea eax [ ebp - 0x98 ]
call sub_10012a8b
mov esi [ eax + 0x8 ]
add esi [ eax ]
sub esp 0x18
mov eax esp
mov [ eax ] ebx
mov [ eax + 0x8 ] ebx
mov [ eax + 0xc ] ebx
mov [ eax + 0x10 ] ebx
lea ebx [ ebp - 0x98 ]
mov [ ebp + 0x48 ] esp
call sub_1001298e
push 0x0
push esi
mov ecx edi
call sub_1001151d
cmp [ edi + 0x18 ] 0x10
jb r-xdata
push r--data
lea ecx [ ebp + 0x28 ]
call sub_10001b81
mov [ ebp - 0x4 ] 0x2
push esi
lea eax [ ebp - 0x98 ]
push eax
call sub_1000cc3d
mov [ ebp - 0x4 ] 0x1
cmp [ ebp - 0x44 ] ebx
jne r-xdata
lea eax [ edi + 0x4 ]
mov eax [ edi + 0x4 ]
jmp r-xdata
lea eax [ ebp - 0x98 ]
mov [ ebp - 0x4 ] 0x0
call sub_1000c5dd
mov eax edi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
add ebp 0x50
leave
retn
push r--data
lea ecx [ ebp + 0x28 ]
call sub_10001b81
mov [ ebp - 0x4 ] 0x3
jmp r-xdata
push esi
push eax
lea eax [ ebp - 0x98 ]
push eax
call sub_10011c8c
mov eax [ ebp - 0x98 ]
mov eax [ eax + 0x4 ]
test [ ebp + eax - 0x90 ] 0x6
je r-xdata
lea eax [ ebp + 0x28 ]
push eax
lea ecx [ ebp ]
call sub_100078c4
push r--data
lea eax [ ebp ]
push eax
call sub_10029a01
sub_10015feb
push 0xd0
mov eax sub_1004e7c1
call sub_10029e33
mov esi ecx
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x18 ] 0x8
jb r-xdata
add eax 0x4
mov eax [ eax + 0x4 ]
jmp r-xdata
cmp [ esi + 0x18 ] 0x10
mov eax [ esi + 0x14 ]
jb r-xdata
push r--data
lea ecx [ ebp - 0x2c ]
call sub_10001b81
mov [ ebp - 0x4 ] 0x1
push eax
lea eax [ ebp - 0xdc ]
push eax
push 0x20
pop ecx
call sub_1000d3eb
and [ ebp - 0x4 ] 0x0
cmp [ ebp - 0x8c ] 0x0
jne r-xdata
add esi 0x4
mov esi [ esi + 0x4 ]
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea eax [ ebp - 0xdc ]
call sub_1000c6c4
call sub_10029f0b
retn
push r--data
lea ecx [ ebp - 0x2c ]
call sub_10001b81
mov [ ebp - 0x4 ] 0x2
jmp r-xdata
push eax
push esi
lea eax [ ebp - 0xdc ]
push eax
call sub_1001156f
lea esi [ ebp - 0xdc ]
call sub_10010ae4
mov eax [ ebp - 0xdc ]
mov eax [ eax + 0x4 ]
test [ ebp + eax - 0xd4 ] 0x6
je r-xdata
lea eax [ ebp - 0x2c ]
push eax
lea ecx [ ebp - 0x54 ]
call sub_100078c4
push r--data
lea eax [ ebp - 0x54 ]
push eax
call sub_10029a01
sub_100160ba
push 0x1c
mov eax sub_1004d599
call sub_10029e33
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x18 ] 0x8
jb r-xdata
add eax 0x4
mov eax [ eax + 0x4 ]
jmp r-xdata
push r--data
lea ecx [ ebp - 0x28 ]
call sub_10001b81
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x28 ]
push eax
cmp esi 0x1
setne al
movzx eax al
push eax
call sub_10014a2a
pop ecx
pop ecx
push 0x0
push 0x1
lea ecx [ ebp - 0x28 ]
call sub_100022b5
mov al 0x1
call [ GetLastError@IAT ]
cmp eax 0x2
je r-xdata
push 0x1
push eax
call [ WaitNamedPipeW@IAT ]
mov esi eax
cmp esi 0x1
je r-xdata
xor al al
jmp r-xdata
cmp eax 0x79
jne r-xdata
call sub_10029f0b
retn
sub_10016135
push 0x38
mov eax sub_1004d6eb
call sub_10029e33
mov eax [ ebp + 0xc ]
xor edi edi
cmp [ eax + 0x18 ] 0x8
mov [ ebp + 0xc ] edi
jb r-xdata
add eax 0x4
mov eax [ eax + 0x4 ]
jmp r-xdata
mov edi [ ebp + 0x8 ]
push esi
lea ecx [ edi + 0x4 ]
mov [ edi ] esi
call sub_10016496
push esi
push esi
push edi
call sub_1002360a
add esp 0xc
mov eax edi
call sub_10029f0b
retn
mov [ eax ] r--data
mov [ eax + 0x4 ] ebx
mov [ eax ] r--data
mov esi eax
push [ ebp + 0x28 ]
push [ ebp + 0x24 ]
push [ ebp + 0x1c ]
push [ ebp + 0x20 ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push eax
call [ CreateNamedPipeW@IAT ]
mov esi r--data
push esi
lea ecx [ ebp - 0x28 ]
mov ebx eax
call sub_10001b81
lea eax [ ebp - 0x28 ]
push eax
cmp ebx edi
sete al
movzx eax al
push eax
mov [ ebp - 0x4 ] edi
call sub_10014a2a
or [ ebp - 0x4 ] 0xffffffff
pop ecx
pop ecx
push edi
xor edi edi
inc edi
push edi
lea ecx [ ebp - 0x28 ]
call sub_100022b5
push esi
lea ecx [ ebp - 0x44 ]
call sub_10001b81
lea eax [ ebp - 0x44 ]
push eax
cmp ebx 0xffffffff
sete al
movzx eax al
push eax
mov [ ebp - 0x4 ] edi
call sub_10014a2a
or [ ebp - 0x4 ] 0xffffffff
pop ecx
pop ecx
xor esi esi
push esi
push edi
lea ecx [ ebp - 0x44 ]
call sub_100022b5
push 0x8
call sub_10025dd6
pop ecx
cmp eax esi
je r-xdata
sub_1001621a
push 0x20
mov eax sub_1004d5bc
call sub_10029e33
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
push 0x0
push eax
call [ ConnectNamedPipe@IAT ]
mov esi eax
cmp esi 0x1
je r-xdata
push r--data
lea ecx [ ebp - 0x28 ]
call sub_10001b81
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x28 ]
push eax
cmp esi 0x1
setne al
movzx eax al
push eax
call sub_10014a2a
pop ecx
pop ecx
push 0x0
push 0x1
lea ecx [ ebp - 0x28 ]
call sub_100022b5
call [ GetLastError@IAT ]
cmp eax 0x217
je r-xdata
call sub_10029f0b
retn 0x4
sub_10016283
push 0x4
mov eax sub_1004c0e1
call sub_10029e33
mov edi ecx
and [ ebp - 0x10 ] 0x0
push 0x8
call sub_10025dd6
mov esi eax
pop ecx
mov [ ebp - 0x10 ] esi
and [ ebp - 0x4 ] 0x0
test esi esi
je r-xdata
xor esi esi
cmp [ edi + 0x18 ] 0x8
jb r-xdata
add edi 0x4
mov edi [ edi + 0x4 ]
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
push esi
lea ecx [ ebx + 0x4 ]
mov [ ebx ] esi
call sub_10016496
push esi
push esi
push ebx
call sub_1002360a
add esp 0xc
mov eax ebx
call sub_10029f0b
retn
push edi
call sub_100164f8
mov [ esi ] r--data
pop ecx
mov [ esi + 0x4 ] eax
mov [ esi ] r--data
jmp r-xdata
sub_100162f4
push 0xc
mov eax sub_1004de39
call sub_10029e33
mov edi [ ebp + 0x8 ]
push [ ebp + 0xc ]
lea ecx [ edi + 0x4 ]
mov [ edi ] r--data
call sub_10001fad
xor ebx ebx
mov [ ebp - 0x4 ] ebx
mov eax 0x200
lea esi [ edi + 0x3c ]
mov [ edi + 0x20 ] 0x3
mov [ edi + 0x24 ] ebx
mov [ edi + 0x28 ] 0xff
mov [ edi + 0x2c ] eax
mov [ edi + 0x30 ] eax
mov [ edi + 0x34 ] ebx
mov [ edi + 0x38 ] ebx
mov [ esi ] ebx
mov [ esi + 0x4 ] ebx
lea eax [ ebp - 0x18 ]
push eax
mov eax edi
mov [ ebp - 0x4 ] 0x1
call sub_10016463
mov [ ebp - 0x4 ] 0x2
call sub_100090a8
mov [ ebp - 0x4 ] 0x1
mov ecx [ ebp - 0x14 ]
cmp ecx ebx
je r-xdata
mov eax edi
call sub_10029f0b
retn 0x8
call sub_1000990a
sub_10016391
push 0x4
mov eax sub_1004c1e2
call sub_10029e33
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
and [ ebp - 0x4 ] 0x0
mov ecx [ esi + 0x40 ]
test ecx ecx
je r-xdata
push 0x0
push 0x1
lea ecx [ esi + 0x4 ]
call sub_1000247e
call sub_10029f0b
retn
call sub_1000990a
sub_100163ca
push 0xc
mov eax sub_1004de00
call sub_10029e33
mov edi [ ebp + 0xc ]
mov ebx [ ebp + 0x8 ]
and [ ebp - 0x10 ] 0x0
add ebx 0x3c
mov eax [ ebx ]
mov [ edi ] eax
lea eax [ ebx + 0x4 ]
push eax
lea ecx [ edi + 0x4 ]
call sub_1000979b
and [ ebp - 0x4 ] 0x0
xor esi esi
inc esi
cmp [ edi ] 0x0
mov [ ebp - 0x10 ] esi
jne r-xdata
push [ edi ]
call sub_1001621a
lea eax [ ebp - 0x18 ]
push eax
mov eax [ ebp + 0x8 ]
call sub_10016463
mov esi ebx
mov [ ebp - 0x4 ] 0x2
call sub_100090a8
mov [ ebp - 0x4 ] 0x0
mov ecx [ ebp - 0x14 ]
test ecx ecx
je r-xdata
lea eax [ ebp - 0x18 ]
push eax
mov eax [ ebp + 0x8 ]
call sub_10016463
mov [ ebp - 0x4 ] esi
mov esi edi
call sub_100090a8
mov [ ebp - 0x4 ] 0x0
mov ecx [ ebp - 0x14 ]
test ecx ecx
je r-xdata
mov eax edi
call sub_10029f0b
retn 0x8
call sub_1000990a
call sub_1000990a
sub_10016463
push ebp
mov ebp esp
push ecx
push [ eax + 0x38 ]
and [ ebp - 0x4 ] 0x0
push [ eax + 0x34 ]
add eax 0x4
push [ eax + 0x2c ]
push [ eax + 0x28 ]
push [ eax + 0x24 ]
push [ eax + 0x20 ]
push [ eax + 0x1c ]
push eax
push [ ebp + 0x8 ]
call sub_10016135
mov eax [ ebp + 0x8 ]
add esp 0x24
leave
retn 0x4
sub_10016496
push 0x4
mov eax sub_1004bed2
call sub_10029e66
mov esi ecx
and [ esi ] 0x0
and [ ebp - 0x4 ] 0x0
push 0x10
call sub_10025dd6
pop ecx
test eax eax
je r-xdata
xor eax eax
xor ecx ecx
inc ecx
mov [ eax + 0x4 ] ecx
mov [ eax + 0x8 ] ecx
mov ecx [ ebp + 0x8 ]
mov [ eax ] r--data
mov [ eax + 0xc ] ecx
jmp r-xdata
mov [ esi ] eax
mov eax esi
call sub_10029f0b
retn 0x4
sub_100164f8
push 0x40
mov eax sub_1004d6c0
call sub_10029e33
xor edi edi
push edi
push edi
push 0x3
push edi
push edi
push 0x3
push [ ebp + 0x8 ]
call [ CreateFileW@IAT ]
mov esi r--data
push esi
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x10 ] eax
call sub_10001b81
cmp [ ebp - 0x10 ] edi
lea eax [ ebp - 0x2c ]
push eax
sete al
movzx eax al
push eax
mov [ ebp - 0x4 ] edi
call sub_10014a2a
or [ ebp - 0x4 ] 0xffffffff
pop ecx
pop ecx
push edi
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_100022b5
push esi
lea ecx [ ebp - 0x48 ]
call sub_10001b81
cmp [ ebp - 0x10 ] 0xffffffff
lea eax [ ebp - 0x48 ]
push eax
sete al
movzx eax al
push eax
mov [ ebp - 0x4 ] 0x1
call sub_10014a2a
pop ecx
pop ecx
push edi
push 0x1
lea ecx [ ebp - 0x48 ]
call sub_100022b5
mov eax [ ebp - 0x10 ]
call sub_10029f0b
retn
sub_10016589
push 0x64
mov eax sub_1004ddbc
call sub_10029e33
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
and [ ebp - 0x10 ] 0x0
push 0x0
lea ecx [ ebp - 0x10 ]
push ecx
push esi
push [ ebp + 0xc ]
push eax
call [ WriteFile@IAT ]
push r--data
lea ecx [ ebp - 0x2c ]
mov [ ebp + 0x8 ] eax
call sub_10001b81
and [ ebp - 0x4 ] 0x0
cmp [ ebp + 0x8 ] 0x1
lea eax [ ebp - 0x2c ]
push eax
setne al
movzx eax al
push eax
call sub_10014a2a
or [ ebp - 0x4 ] 0xffffffff
pop ecx
pop ecx
push 0x0
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_100022b5
cmp [ ebp - 0x10 ] esi
je r-xdata
call sub_10029f0b
retn 0x8
push r--data
lea ecx [ ebp - 0x48 ]
call sub_10001b81
lea eax [ ebp - 0x48 ]
push eax
lea ecx [ ebp - 0x70 ]
mov [ ebp - 0x4 ] 0x1
call sub_100078c4
push r--data
lea eax [ ebp - 0x70 ]
push eax
call sub_10029a01
sub_10016625
push 0x64
mov eax sub_1004dd90
call sub_10029e33
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
and [ ebp - 0x10 ] 0x0
push 0x0
lea ecx [ ebp - 0x10 ]
push ecx
push esi
push [ ebp + 0xc ]
push eax
call [ ReadFile@IAT ]
push r--data
lea ecx [ ebp - 0x2c ]
mov [ ebp + 0x8 ] eax
call sub_10001b81
and [ ebp - 0x4 ] 0x0
cmp [ ebp + 0x8 ] 0x1
lea eax [ ebp - 0x2c ]
push eax
setne al
movzx eax al
push eax
call sub_10014a2a
or [ ebp - 0x4 ] 0xffffffff
pop ecx
pop ecx
push 0x0
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_100022b5
cmp [ ebp - 0x10 ] esi
je r-xdata
call sub_10029f0b
retn 0x8
push r--data
lea ecx [ ebp - 0x48 ]
call sub_10001b81
lea eax [ ebp - 0x48 ]
push eax
lea ecx [ ebp - 0x70 ]
mov [ ebp - 0x4 ] 0x1
call sub_100078c4
push r--data
lea eax [ ebp - 0x70 ]
push eax
call sub_10029a01
sub_100166c1
push 0xa0
mov eax sub_1004c768
call sub_10029e9c
xor esi esi
push esi
push esi
call [ CoInitializeEx@IAT ]
xor ecx ecx
inc ecx
cmp eax ecx
je r-xdata
push 0x10
lea eax [ ebp - 0x24 ]
push esi
push eax
mov [ ebp - 0x4 ] ecx
call sub_10026630
add esp 0xc
lea eax [ ebp - 0x24 ]
push eax
call [ CoCreateGuid@IAT ]
cmp eax esi
je r-xdata
cmp eax 0x80010106
je r-xdata
mov edi [ ebp + 0x8 ]
lea esi [ ebp - 0x24 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
call [ CoUninitialize@IAT ]
mov eax [ ebp + 0x8 ]
call sub_10029f1f
retn
push r--data
lea ecx [ ebp - 0x40 ]
call sub_10001b81
lea eax [ ebp - 0x40 ]
push eax
lea ecx [ ebp - 0xac ]
mov [ ebp - 0x4 ] 0x2
call sub_100078c4
push r--data
lea eax [ ebp - 0xac ]
jmp r-xdata
cmp eax esi
je r-xdata
push eax
call sub_10029a01
push r--data
lea ecx [ ebp - 0x5c ]
call sub_10001b81
lea eax [ ebp - 0x5c ]
push eax
lea ecx [ ebp - 0x84 ]
mov [ ebp - 0x4 ] esi
call sub_100078c4
push r--data
lea eax [ ebp - 0x84 ]
sub_10016782
push 0x20
mov eax sub_1004d5bc
call sub_10029e33
push ebx
push [ ebp + 0x8 ]
lea edi [ ebp - 0x28 ]
call sub_100167d7
pop ecx
pop ecx
and [ ebp - 0x4 ] 0x0
push eax
mov ecx esi
call sub_100078c4
push 0x0
push 0x1
mov ecx edi
mov [ esi ] r--data
call sub_100022b5
mov [ esi ] r--data
mov [ esi + 0x28 ] ebx
mov eax esi
call sub_10029f0b
retn 0x4
sub_100167d7
push 0xd4
mov eax sub_1004d058
call sub_10029e9c
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x4c ] eax
lea eax [ ebp + 0xc ]
xor esi esi
push eax
lea ecx [ ebp - 0x48 ]
mov [ ebp - 0x50 ] esi
call sub_10016988
pop ecx
mov [ ebp - 0x4 ] esi
push [ ebp + 0xc ]
lea ecx [ ebp - 0x2c ]
call sub_100168ee
pop ecx
push [ ebp - 0x4c ]
xor ebx ebx
lea eax [ ebp - 0xdc ]
inc ebx
push eax
mov [ ebp - 0x4 ] bl
call sub_100169be
push r--data
push eax
lea eax [ ebp - 0xa4 ]
push eax
mov [ ebp - 0x4 ] 0x2
call sub_10017086
add esp 0x14
lea ecx [ ebp - 0x48 ]
push ecx
push eax
lea eax [ ebp - 0x88 ]
push eax
mov [ ebp - 0x4 ] 0x3
call sub_10016a0b
add esp 0xc
push r--data
push eax
lea eax [ ebp - 0xc0 ]
push eax
mov [ ebp - 0x4 ] 0x4
call sub_10017086
add esp 0xc
lea ecx [ ebp - 0x2c ]
push ecx
push eax
lea eax [ ebp - 0x6c ]
push eax
mov [ ebp - 0x4 ] 0x5
call sub_10016a0b
add esp 0xc
push r--data
push eax
push edi
mov [ ebp - 0x4 ] 0x6
call sub_10017086
add esp 0xc
push esi
push ebx
lea ecx [ ebp - 0x6c ]
call sub_100022b5
push esi
push ebx
lea ecx [ ebp - 0xc0 ]
call sub_100022b5
push esi
push ebx
lea ecx [ ebp - 0x88 ]
call sub_100022b5
push esi
push ebx
lea ecx [ ebp - 0xa4 ]
call sub_100022b5
push esi
push ebx
lea ecx [ ebp - 0xdc ]
call sub_100022b5
push esi
push ebx
lea ecx [ ebp - 0x2c ]
call sub_100022b5
push esi
push ebx
lea ecx [ ebp - 0x48 ]
call sub_100022b5
mov eax edi
call sub_10029f1f
retn
sub_100168ee
push 0x28
mov eax sub_1004c738
call sub_10029e33
xor esi esi
push esi
push esi
lea eax [ ebp - 0x10 ]
push eax
push 0x400
push [ ebp + 0x8 ]
mov [ ebp - 0x4 ] esi
push esi
mov edi ecx
mov [ ebp - 0x18 ] esi
push 0x1300
mov [ ebp - 0x14 ] edi
mov [ ebp - 0x10 ] esi
call [ FormatMessageA@IAT ]
mov ebx eax
cmp ebx 0x4
jbe r-xdata
push r--data
mov ecx edi
call sub_10001b81
xor edi edi
mov [ ebp - 0x4 ] esi
inc edi
mov [ ebp - 0x18 ] edi
cmp [ ebp - 0x10 ] esi
je r-xdata
sub ebx 0x3
mov eax [ ebp - 0x14 ]
call sub_10029f0b
retn
cmp ebx esi
jbe r-xdata
cmp [ ebp - 0x10 ] esi
je r-xdata
push ebx
push [ ebp - 0x10 ]
lea ecx [ ebp - 0x34 ]
call sub_100114f7
push 0xffffffff
push esi
mov [ ebp - 0x4 ] edi
mov ecx [ ebp - 0x14 ]
push eax
call sub_10002099
push esi
push edi
lea ecx [ ebp - 0x34 ]
call sub_100022b5
push [ ebp - 0x10 ]
call [ LocalFree@IAT ]
sub_10016988
push ebp
mov ebp esp
sub esp 0x20
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
and [ ebp - 0x1c ] 0x0
push edi
lea eax [ ebp - 0x18 ]
push eax
mov eax [ ebp + 0x8 ]
push [ eax ]
mov edi ecx
call sub_10016a56
pop ecx
pop ecx
mov ecx [ ebp - 0x4 ]
mov eax edi
xor ecx ebp
pop edi
call sub_10025c8d
leave
retn
sub_100169be
push 0x20
mov eax sub_1004cb87
call sub_10029e33
and [ ebp - 0x10 ] 0x0
push r--data
lea ecx [ ebp - 0x2c ]
call sub_10001b81
and [ ebp - 0x4 ] 0x0
push 0xffffffff
push 0x0
push [ ebp + 0xc ]
mov ecx eax
call sub_10006c1e
mov ecx [ ebp + 0x8 ]
push eax
call sub_10001c9f
push 0x0
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_100022b5
mov eax [ ebp + 0x8 ]
call sub_10029f0b
retn
sub_10016a0b
push 0x20
mov eax sub_1004cb87
call sub_10029e33
push [ ebp + 0xc ]
and [ ebp - 0x10 ] 0x0
lea ecx [ ebp - 0x2c ]
call sub_10001c9f
and [ ebp - 0x4 ] 0x0
push 0xffffffff
push 0x0
push [ ebp + 0x10 ]
mov ecx eax
call sub_10006c1e
mov ecx [ ebp + 0x8 ]
push eax
call sub_10001c9f
push 0x0
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_100022b5
mov eax [ ebp + 0x8 ]
call sub_10029f0b
retn
sub_10016a56
push 0xc
mov eax sub_1004c6fc
call sub_10029e33
mov eax [ ebp + 0xc ]
and [ ebp - 0x10 ] 0x0
mov ecx edi
mov [ ebp - 0x14 ] edi
lea esi [ eax + 0x13 ]
call sub_10007bb4
and [ ebp - 0x4 ] 0x0
push [ ebp + 0x8 ]
mov ecx esi
mov [ ebp - 0x10 ] 0x1
call sub_10016a9f
pop ecx
push [ ebp - 0x14 ]
push esi
push eax
push edi
call sub_10016b71
mov eax edi
call sub_10029f0b
retn
sub_10016a9f
push 0x30
mov eax sub_1004c6be
call sub_10029e9c
mov esi ecx
lea ecx [ ebp - 0x34 ]
call sub_10006db7
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x34 ]
push eax
call sub_1000fce4
mov edi eax
pop ecx
lea eax [ ebp - 0x2c ]
push eax
mov ecx edi
call sub_10005dd3
mov [ ebp - 0x4 ] 0x1
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x3c ] eax
test eax eax
je r-xdata
mov [ ebp - 0x2d ] 0x0
mov eax [ edi ]
mov ecx edi
call [ eax + 0x8 ]
mov [ ebp - 0x2d ] al
jmp r-xdata
xor edi edi
lea eax [ ebp - 0x2c ]
call sub_100124a0
mov bl [ eax ]
mov bl 0x7f
jmp r-xdata
and [ ebp - 0x38 ] 0x0
xor edi edi
lea eax [ ebp - 0x2c ]
call sub_100124a0
cmp [ eax ] 0x0
jg r-xdata
mov eax [ ebp + 0x8 ]
xor edx edx
push 0xa
pop edi
div edi
dec cl
dec esi
add dl 0x30
mov [ esi ] dl
mov [ ebp + 0x8 ] eax
test eax eax
jne r-xdata
mov edi [ ebp - 0x38 ]
inc edi
mov [ ebp - 0x38 ] edi
cmp edi [ ebp - 0x3c ]
jae r-xdata
mov cl bl
test cl cl
jne r-xdata
push eax
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_100022b5
lea ecx [ ebp - 0x34 ]
call sub_10007806
mov eax esi
call sub_10029f1f
retn
mov al [ ebp - 0x2d ]
dec esi
mov cl bl
mov [ esi ] al
lea eax [ ebp - 0x2c ]
call sub_100124a0
mov al [ eax ]
mov bl 0x7f
test al al
jle r-xdata
mov bl al
sub_10016b71
push ebp
mov ebp esp
and esp 0xfffffff8
mov ecx [ ebp + 0x8 ]
sub esp 0x10
push esi
push edi
lea eax [ esp + 0x8 ]
push eax
call sub_10017044
mov esi [ eax ]
mov edi [ eax + 0x4 ]
mov ecx [ ebp + 0x8 ]
lea eax [ esp + 0x10 ]
push eax
call sub_1001039e
push [ ebp + 0x10 ]
mov ecx [ ebp + 0x8 ]
push [ ebp + 0xc ]
push edi
push esi
push [ eax + 0x4 ]
push [ eax ]
call sub_10016bb8
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x10
sub_10016bb8
push ebp
mov ebp esp
and esp 0xfffffff8
push ecx
push ecx
push [ esp + 0x4 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_10016be1
mov esp ebp
pop ebp
retn 0x18
sub_10016be1
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_1004c1af
mov eax [ fs : 0x0 ]
push eax
sub esp 0x28
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x20 ] eax
push esi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x30 ]
mov [ fs : 0x0 ] eax
push [ ebp + 0x1c ]
mov eax [ ebp + 0x18 ]
mov esi ecx
push eax
lea ecx [ esp + 0x14 ]
call sub_10016cc8
and [ esp + 0x38 ] 0x0
lea eax [ esp + 0xc ]
push eax
push [ ebp + 0x14 ]
mov ecx esi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_10016c72
push 0x0
push 0x1
lea ecx [ esp + 0x14 ]
call sub_100022b5
mov eax esi
mov ecx [ esp + 0x30 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov ecx [ esp + 0x20 ]
xor ecx esp
call sub_10025c8d
mov esp ebp
pop ebp
retn 0x1c
sub_10016c72
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
push edi
lea eax [ ebp - 0x10 ]
push eax
mov ebx ecx
call sub_1001039e
push [ ebp + 0xc ]
mov esi [ eax ]
push [ ebp + 0x8 ]
mov edi [ eax + 0x4 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
call sub_1001702d
push edi
push esi
push [ ebp + 0xc ]
mov [ ebp - 0x8 ] eax
push [ ebp + 0x8 ]
call sub_1001702d
add esp 0x20
push 0xffffffff
push 0x0
push [ ebp + 0x18 ]
mov ecx ebx
push [ ebp - 0x8 ]
push eax
call sub_10016d46
pop edi
pop esi
pop ebx
leave
retn 0x14
sub_10016cc8
push ebp
mov ebp esp
push esi
mov esi ecx
push 0x0
mov [ esi + 0x18 ] 0xf
call sub_1000237a
push [ ebp + 0xc ]
mov ecx esi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_10016cf3
mov eax esi
pop esi
pop ebp
retn 0x8
sub_10016cf3
push 0x8
mov eax sub_1004c18c
call sub_10029e66
mov [ ebp - 0x14 ] ecx
mov eax [ ebp + 0xc ]
mov esi [ ebp + 0x8 ]
sub eax esi
push eax
call sub_1000670c
and [ ebp - 0x4 ] 0x0
call sub_10029f0b
retn 0xc
movzx eax [ esi ]
mov ecx [ ebp - 0x14 ]
push eax
push 0x1
call sub_10005b68
inc esi
jmp r-xdata
cmp esi [ ebp + 0xc ]
je r-xdata
sub_10016d46
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi ecx
cmp [ edi + 0x14 ] esi
jb r-xdata
call sub_100222af
mov eax [ ebp + 0x10 ]
mov eax [ eax + 0x14 ]
cmp eax [ ebp + 0x14 ]
jae r-xdata
mov ecx [ edi + 0x14 ]
mov eax ecx
sub eax esi
cmp eax [ ebp + 0xc ]
jae r-xdata
mov eax [ ebp + 0x10 ]
mov eax [ eax + 0x14 ]
sub eax [ ebp + 0x14 ]
cmp eax [ ebp + 0x18 ]
jae r-xdata
mov [ ebp + 0xc ] eax
sub ecx [ ebp + 0xc ]
or eax 0xffffffff
sub eax [ ebp + 0x18 ]
cmp eax ecx
ja r-xdata
mov [ ebp + 0x18 ] eax
mov eax [ edi + 0x14 ]
mov ecx eax
sub ecx [ ebp + 0xc ]
mov ebx eax
add ecx [ ebp + 0x18 ]
sub ebx esi
sub ebx [ ebp + 0xc ]
mov [ ebp - 0x4 ] ecx
mov [ ebp + 0x8 ] ebx
cmp eax ecx
jae r-xdata
call sub_10022277
cmp edi [ ebp + 0x10 ]
je r-xdata
push 0x0
push ecx
mov ecx edi
call sub_10002300
mov eax [ ebp + 0xc ]
lea ebx [ edi + 0x4 ]
cmp [ ebp + 0x18 ] eax
ja r-xdata
mov eax [ edi + 0x18 ]
cmp eax 0x10
jb r-xdata
cmp [ ebp + 0x14 ] esi
ja r-xdata
mov eax [ edi + 0x18 ]
cmp eax 0x10
jb r-xdata
lea edx [ edi + 0x4 ]
mov edx [ edi + 0x4 ]
jmp r-xdata
add eax esi
cmp eax [ ebp + 0x14 ]
mov eax [ edi + 0x18 ]
ja r-xdata
mov eax [ edi + 0x18 ]
cmp eax 0x10
jb r-xdata
mov ecx ebx
mov ecx [ ebx ]
jmp r-xdata
lea ecx [ edi + 0x4 ]
mov ecx [ edi + 0x4 ]
jmp r-xdata
cmp eax 0x10
jb r-xdata
cmp eax 0x10
jb r-xdata
cmp eax 0x10
jb r-xdata
mov ecx ebx
mov ecx [ ebx ]
jmp r-xdata
mov [ ebp + 0x10 ] ebx
mov edx [ ebx ]
mov [ ebp + 0x10 ] edx
jmp r-xdata
cmp eax 0x10
jb r-xdata
lea edx [ eax + 0x4 ]
mov edx [ eax + 0x4 ]
jmp r-xdata
add edx esi
add edx [ ebp + 0xc ]
push ebx
sub eax esi
sub eax [ ebp + 0x18 ]
push edx
add ecx esi
add ecx [ ebp + 0x18 ]
push eax
push ecx
call sub_1000200e
mov eax [ ebp + 0x10 ]
add esp 0x10
cmp [ eax + 0x18 ] 0x10
jb r-xdata
mov ecx ebx
mov ecx [ ebx ]
jmp r-xdata
mov ecx ebx
mov ecx [ ebx ]
jmp r-xdata
mov [ ebp + 0x10 ] ebx
mov edx [ ebx ]
mov [ ebp + 0x10 ] edx
jmp r-xdata
cmp eax 0x10
jb r-xdata
mov ecx ebx
mov ecx [ ebx ]
jmp r-xdata
push [ ebp + 0x18 ]
mov edx [ ebp + 0x14 ]
add ecx edx
sub eax esi
push ecx
push eax
mov eax [ ebp + 0x10 ]
add eax esi
push eax
call sub_1000200e
mov eax [ edi + 0x18 ]
add esp 0x10
cmp eax 0x10
jb r-xdata
lea ecx [ edi + 0x4 ]
mov ecx [ edi + 0x4 ]
jmp r-xdata
mov eax [ edi + 0x18 ]
cmp eax 0x10
jb r-xdata
mov [ ebp + 0x10 ] ebx
mov edx [ ebx ]
mov [ ebp + 0x10 ] edx
jmp r-xdata
cmp eax 0x10
jb r-xdata
mov [ ebp + 0x10 ] ebx
mov edx [ ebx ]
mov [ ebp + 0x10 ] edx
jmp r-xdata
cmp eax 0x10
jb r-xdata
mov ecx ebx
mov ecx [ ebx ]
jmp r-xdata
push [ ebp + 0x8 ]
sub eax esi
sub eax [ ebp + 0x18 ]
add ecx esi
add ecx [ ebp + 0xc ]
push ecx
push eax
mov eax [ ebp + 0x10 ]
add eax esi
add eax [ ebp + 0x18 ]
push eax
call sub_1000200e
mov eax [ edi + 0x18 ]
add esp 0x10
cmp eax 0x10
jb r-xdata
push [ ebp + 0x8 ]
add ecx esi
add ecx [ ebp + 0xc ]
sub eax esi
sub eax [ ebp + 0x18 ]
add ebx esi
add ebx [ ebp + 0x18 ]
jmp r-xdata
mov ebx [ ebx ]
cmp eax 0x10
jb r-xdata
add esp 0x10
push [ ebp - 0x4 ]
mov ecx edi
call sub_1000237a
mov eax edi
pop edi
pop esi
pop ebx
leave
retn 0x14
push [ ebp + 0x18 ]
mov ebx [ ebp + 0x14 ]
add edx ebx
push edx
sub eax esi
push eax
add ecx esi
push ecx
call sub_1000235e
jmp r-xdata
mov ecx ebx
mov ecx [ ebx ]
jmp r-xdata
push [ ebp + 0xc ]
mov edx [ ebp + 0x14 ]
add ecx edx
sub eax esi
push ecx
push eax
mov eax [ ebp + 0x10 ]
add eax esi
push eax
call sub_1000200e
mov eax [ edi + 0x18 ]
add esp 0x10
cmp eax 0x10
jb r-xdata
mov ecx ebx
mov ecx [ ebx ]
jmp r-xdata
push [ ebp + 0x8 ]
sub eax esi
sub eax [ ebp + 0x18 ]
add ecx esi
add ecx [ ebp + 0xc ]
push ecx
push eax
mov eax [ ebp + 0x10 ]
add eax esi
add eax [ ebp + 0x18 ]
push eax
call sub_1000200e
mov eax [ edi + 0x18 ]
add esp 0x10
cmp eax 0x10
jb r-xdata
mov edx [ ebp + 0x14 ]
add ecx edx
mov ebx [ ebx ]
cmp eax 0x10
jb r-xdata
push ecx
push eax
push ebx
call sub_1000200e
mov [ ebp + 0x10 ] ebx
mov edx [ ebx ]
mov [ ebp + 0x10 ] edx
jmp r-xdata
cmp eax 0x10
jb r-xdata
sub ecx [ ebp + 0xc ]
add ecx [ ebp + 0x14 ]
add ecx [ ebp + 0x18 ]
jmp r-xdata
mov ebx [ ebx ]
cmp eax 0x10
jb r-xdata
mov ecx ebx
mov ecx [ ebx ]
jmp r-xdata
push [ ebp + 0x8 ]
sub eax esi
sub eax [ ebp + 0x18 ]
add ecx esi
add ecx [ ebp + 0xc ]
push ecx
push eax
mov eax [ ebp + 0x10 ]
add eax esi
add eax [ ebp + 0x18 ]
push eax
call sub_1000200e
mov eax [ edi + 0x18 ]
add esp 0x10
cmp eax 0x10
jb r-xdata
push [ ebp + 0x18 ]
sub eax esi
add ebx esi
jmp r-xdata
mov edx [ ebp + 0x18 ]
sub edx [ ebp + 0xc ]
sub eax esi
sub eax [ ebp + 0xc ]
push edx
mov edx [ ebp + 0x14 ]
add ecx edx
add ecx [ ebp + 0x18 ]
add ebx esi
add ebx [ ebp + 0xc ]
mov ebx [ ebx ]
cmp eax 0x10
jb r-xdata
sub_10017044
cmp [ ecx + 0x18 ] 0x10
jb r-xdata
lea eax [ ecx + 0x4 ]
mov eax [ ecx + 0x4 ]
jmp r-xdata
push ecx
mov ecx [ ecx + 0x14 ]
add ecx eax
push ecx
mov ecx [ esp + 0xc ]
call sub_10007831
mov eax [ esp + 0x4 ]
retn 0x4
sub_10017086
push 0x20
mov eax sub_1004cb87
call sub_10029e33
push [ ebp + 0xc ]
and [ ebp - 0x10 ] 0x0
lea ecx [ ebp - 0x2c ]
call sub_10001c9f
push [ ebp + 0x10 ]
and [ ebp - 0x4 ] 0x0
mov ecx eax
call sub_10017069
mov ecx [ ebp + 0x8 ]
push eax
call sub_10001c9f
push 0x0
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_100022b5
mov eax [ ebp + 0x8 ]
call sub_10029f0b
retn
sub_100170cd
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_1004c680
mov eax [ fs : 0x0 ]
push eax
sub esp 0x2a0
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x298 ] eax
push esi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x2a8 ]
mov [ fs : 0x0 ] eax
xor esi esi
push 0x208
lea eax [ esp + 0x98 ]
push esi
push eax
mov [ esp + 0x14 ] esi
call sub_10026630
add esp 0xc
lea eax [ esp + 0x94 ]
push eax
push esi
push esi
push [ ebp + 0x8 ]
push esi
call [ SHGetFolderPathW@IAT ]
cmp eax 0x1
jne r-xdata
cmp eax 0x80004005
jne r-xdata
push r--data
lea ecx [ esp + 0x10 ]
call sub_10001b81
lea eax [ esp + 0xc ]
push eax
lea ecx [ esp + 0x2c ]
mov [ esp + 0x2b4 ] esi
call sub_100078c4
push r--data
lea eax [ esp + 0x2c ]
cmp eax 0x80070057
jne r-xdata
push r--data
lea ecx [ esp + 0x10 ]
call sub_10001b81
lea eax [ esp + 0xc ]
push eax
lea ecx [ esp + 0x2c ]
mov [ esp + 0x2b4 ] 0x1
call sub_100078c4
push r--data
lea eax [ esp + 0x2c ]
jmp r-xdata
cmp eax esi
je r-xdata
push r--data
lea ecx [ esp + 0x10 ]
call sub_10001b81
lea eax [ esp + 0xc ]
push eax
lea ecx [ esp + 0x2c ]
mov [ esp + 0x2b4 ] 0x2
call sub_100078c4
push r--data
lea eax [ esp + 0x2c ]
jmp r-xdata
push eax
call sub_10029a01
lea eax [ esp + 0x94 ]
push eax
mov ecx ebx
call sub_10001254
mov eax ebx
mov ecx [ esp + 0x2a8 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov ecx [ esp + 0x298 ]
xor ecx esp
call sub_10025c8d
mov esp ebp
pop ebp
retn
push r--data
lea ecx [ esp + 0x54 ]
call sub_10001b81
lea eax [ esp + 0x50 ]
push eax
lea ecx [ esp + 0x70 ]
mov [ esp + 0x2b4 ] 0x3
call sub_100078c4
push r--data
lea eax [ esp + 0x70 ]
jmp r-xdata
sub_1001727a
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ ecx ]
push [ ebp + 0xc ]
mov [ ebp - 0x8 ] eax
mov eax [ ecx + 0x4 ]
lea ecx [ ebp - 0x8 ]
mov [ ebp - 0x4 ] eax
call sub_100172a7
mov ecx [ ebp - 0x8 ]
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov ecx [ ebp - 0x4 ]
mov [ eax + 0x4 ] ecx
leave
retn 0x8
sub_100172a7
push esi
mov esi ecx
mov eax [ esi ]
push edi
mov edi [ esp + 0xc ]
cmp eax 0xfffffffc
je r-xdata
lea eax [ edi + edi ]
add [ esi + 0x4 ] eax
pop edi
mov eax esi
pop esi
retn 0x4
test eax eax
jne r-xdata
mov eax [ esi ]
cmp [ eax + 0x18 ] 0x8
jb r-xdata
call sub_100261ef
lea ecx [ eax + 0x4 ]
mov ecx [ eax + 0x4 ]
jmp r-xdata
call sub_100261ef
cmp [ eax + 0x18 ] 0x8
jb r-xdata
mov edx [ esi + 0x4 ]
push ebx
mov ebx [ eax + 0x14 ]
lea ecx [ ecx + ebx * 2 ]
lea edx [ edx + edi * 2 ]
pop ebx
cmp edx ecx
ja r-xdata
add eax 0x4
mov eax [ eax + 0x4 ]
jmp r-xdata
cmp edx eax
jae r-xdata
sub_10017368
push 0x4c
mov eax sub_1004d695
call sub_10029e33
mov eax [ ebp + 0xc ]
xor esi esi
mov [ ebp - 0x4 ] esi
mov [ ebp - 0x18 ] esi
cmp [ eax + 0x18 ] 0x10
mov ecx [ eax + 0x14 ]
mov [ ebp - 0x14 ] esi
jb r-xdata
add eax 0x4
mov [ ebp - 0x10 ] eax
add eax 0x4
mov [ ebp - 0x10 ] eax
mov eax [ eax ]
jmp r-xdata
xor eax eax
push [ ebp - 0x14 ]
mov esi eax
call sub_10017305
jmp r-xdata
push esi
push esi
lea edx [ ebp - 0x14 ]
push edx
push esi
xor ebx ebx
inc ebx
push ebx
push ecx
push eax
call [ CryptStringToBinaryA@IAT ]
push r--data
lea ecx [ ebp - 0x38 ]
mov edi eax
call sub_10001b81
lea eax [ ebp - 0x38 ]
push eax
cmp edi ebx
setne al
movzx eax al
push eax
mov [ ebp - 0x4 ] ebx
call sub_10014a2a
pop ecx
pop ecx
push esi
push ebx
lea ecx [ ebp - 0x38 ]
mov [ ebp - 0x4 ] 0x0
call sub_100022b5
push 0x20
call sub_10025dd6
pop ecx
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0x2
cmp eax esi
je r-xdata
add eax 0x8
mov eax [ eax + 0x8 ]
jmp r-xdata
mov [ ebp - 0x4 ] 0x0
mov esi [ ebp + 0x8 ]
mov edi eax
call sub_1001525f
xor edi edi
mov [ ebp - 0x4 ] edi
mov eax esi
mov eax [ eax ]
cmp [ eax + 0x1c ] 0x10
mov [ ebp - 0x18 ] ebx
jb r-xdata
push edi
push edi
lea esi [ ebp - 0x14 ]
push esi
push eax
push ebx
push edx
push ecx
call [ CryptStringToBinaryA@IAT ]
push r--data
lea ecx [ ebp - 0x54 ]
mov esi eax
call sub_10001b81
lea eax [ ebp - 0x54 ]
push eax
cmp esi ebx
setne al
movzx eax al
push eax
mov [ ebp - 0x4 ] 0x3
call sub_10014a2a
pop ecx
pop ecx
push edi
push ebx
lea ecx [ ebp - 0x54 ]
call sub_100022b5
mov eax [ ebp + 0x8 ]
call sub_10029f0b
retn
mov ecx [ ecx ]
mov ecx [ ebp + 0xc ]
mov edx [ ecx + 0x14 ]
cmp [ ecx + 0x18 ] 0x10
mov ecx [ ebp - 0x10 ]
jb r-xdata
sub_1001748c
push 0x68
mov eax sub_1004d63d
call sub_10029e9c
mov eax [ ebp + 0x8 ]
mov esi ecx
xor edx edx
cmp [ esi + 0x1c ] 0x10
mov [ ebp - 0x38 ] eax
mov eax [ esi + 0x18 ]
mov [ ebp - 0x34 ] edx
mov [ ebp - 0x30 ] edx
jb r-xdata
lea ecx [ esi + 0x8 ]
mov ecx [ esi + 0x8 ]
jmp r-xdata
cmp [ esi + 0x1c ] 0x10
mov eax [ esi + 0x18 ]
jb r-xdata
lea ecx [ ebp - 0x28 ]
lea edi [ ebp - 0x30 ]
push edi
mov edi [ CryptBinaryToStringA@IAT ]
push edx
xor ebx ebx
inc ebx
push ebx
push eax
push ecx
call edi
push r--data
lea ecx [ ebp - 0x54 ]
mov [ ebp - 0x34 ] eax
call sub_10001b81
and [ ebp - 0x4 ] 0x0
cmp [ ebp - 0x34 ] ebx
lea eax [ ebp - 0x54 ]
push eax
setne al
movzx eax al
push eax
call sub_10014a2a
or [ ebp - 0x4 ] 0xffffffff
pop ecx
pop ecx
push 0x0
push ebx
lea ecx [ ebp - 0x54 ]
call sub_100022b5
push 0x0
push [ ebp - 0x30 ]
lea ecx [ ebp - 0x2c ]
call sub_10005b42
mov [ ebp - 0x4 ] ebx
cmp [ ebp - 0x14 ] 0x10
mov ecx [ ebp - 0x28 ]
jae r-xdata
add esi 0x8
mov esi [ esi + 0x8 ]
jmp r-xdata
mov ecx [ ebp - 0x18 ]
dec ecx
push ecx
mov ecx [ ebp - 0x38 ]
push eax
call sub_100114f7
push 0x0
push ebx
lea ecx [ ebp - 0x2c ]
call sub_100022b5
mov eax [ ebp - 0x38 ]
call sub_10029f1f
retn
lea eax [ ebp - 0x28 ]
lea edx [ ebp - 0x30 ]
push edx
push ecx
push ebx
push eax
push esi
call edi
push r--data
lea ecx [ ebp - 0x70 ]
mov esi eax
call sub_10001b81
lea eax [ ebp - 0x70 ]
push eax
cmp esi ebx
setne al
movzx eax al
push eax
mov [ ebp - 0x4 ] 0x2
call sub_10014a2a
pop ecx
pop ecx
push 0x0
push ebx
lea ecx [ ebp - 0x70 ]
mov [ ebp - 0x4 ] bl
call sub_100022b5
cmp [ ebp - 0x14 ] 0x10
mov eax [ ebp - 0x28 ]
jae r-xdata
sub_1001759e
push 0x1c
mov eax sub_1004d599
call sub_10029e33
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x18 ] 0x8
jb r-xdata
add eax 0x4
mov eax [ eax + 0x4 ]
jmp r-xdata
push eax
call [ LoadLibraryW@IAT ]
push r--data
lea ecx [ ebp - 0x28 ]
mov edi eax
call sub_10001b81
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x28 ]
push eax
test edi edi
sete al
movzx eax al
push eax
call sub_10014a2a
pop ecx
pop ecx
push 0x0
push 0x1
lea ecx [ ebp - 0x28 ]
call sub_100022b5
mov [ esi + 0x4 ] edi
mov [ esi ] r--data
mov eax esi
call sub_10029f0b
retn 0x4
sub_10017624
push 0x20
mov eax sub_1004d60a
call sub_10029e33
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
and [ ebp - 0x4 ] 0x0
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
mov [ esi ] r--data
call sub_10029f0b
retn
push eax
call [ FreeLibrary@IAT ]
push r--data
lea ecx [ ebp - 0x2c ]
mov ebx eax
call sub_10001b81
lea eax [ ebp - 0x2c ]
push eax
test ebx ebx
sete al
movzx eax al
push eax
mov [ ebp - 0x4 ] 0x1
call sub_10014a2a
pop ecx
pop ecx
push 0x0
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_100022b5
and [ esi + 0x4 ] 0x0
sub_100176b2
push 0x20
mov eax sub_1004d5bc
call sub_10029e33
mov edi ecx
mov esi edx
call sub_10017a65
mov esi [ ebp + 0x8 ]
mov ebx eax
call sub_10017a65
cmp [ edi + 0x18 ] 0x8
jb r-xdata
add edi 0x4
mov edi [ edi + 0x4 ]
jmp r-xdata
xor esi esi
push esi
push eax
push ebx
push esi
push edi
call [ InternetOpenW@IAT ]
push r--data
lea ecx [ ebp - 0x28 ]
mov edi eax
call sub_10001b81
lea eax [ ebp - 0x28 ]
push eax
cmp edi esi
sete al
movzx eax al
push eax
mov [ ebp - 0x4 ] esi
call sub_10014a2a
pop ecx
pop ecx
push esi
push 0x1
lea ecx [ ebp - 0x28 ]
call sub_100022b5
mov eax edi
call sub_10029f0b
retn
sub_1001775d
push 0x1c
mov eax sub_1004d599
call sub_10029e33
mov edi ecx
mov esi edx
call sub_10017a65
mov esi [ ebp + 0xc ]
mov ebx eax
call sub_10017a65
cmp [ edi + 0x18 ] 0x8
jb r-xdata
add edi 0x4
mov edi [ edi + 0x4 ]
jmp r-xdata
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx + 0x4 ]
xor esi esi
push esi
push esi
push 0x3
push eax
push ebx
push 0x50
push edi
push ecx
call [ InternetConnectW@IAT ]
push r--data
lea ecx [ ebp - 0x28 ]
mov edi eax
call sub_10001b81
lea eax [ ebp - 0x28 ]
push eax
cmp edi esi
sete al
movzx eax al
push eax
mov [ ebp - 0x4 ] esi
call sub_10014a2a
pop ecx
pop ecx
push esi
push 0x1
lea ecx [ ebp - 0x28 ]
call sub_100022b5
mov eax edi
call sub_10029f0b
retn
sub_10017808
push 0x24
mov eax sub_1004d5df
call sub_10029e33
mov edi ecx
mov esi edx
call sub_10017a65
mov esi [ ebp + 0xc ]
mov ebx eax
call sub_10017a65
mov esi [ ebp + 0x10 ]
mov [ ebp - 0x14 ] eax
call sub_10017a65
mov esi [ ebp + 0x14 ]
mov [ ebp - 0x10 ] eax
call sub_10017a65
cmp [ edi + 0x18 ] 0x8
jb r-xdata
add edi 0x4
mov edi [ edi + 0x4 ]
jmp r-xdata
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx + 0x4 ]
xor esi esi
push esi
push esi
push eax
push [ ebp - 0x10 ]
push [ ebp - 0x14 ]
push edi
push ebx
push ecx
call [ HttpOpenRequestW@IAT ]
push r--data
lea ecx [ ebp - 0x30 ]
mov edi eax
call sub_10001b81
lea eax [ ebp - 0x30 ]
push eax
cmp edi esi
sete al
movzx eax al
push eax
mov [ ebp - 0x4 ] esi
call sub_10014a2a
pop ecx
pop ecx
push esi
push 0x1
lea ecx [ ebp - 0x30 ]
call sub_100022b5
mov eax edi
call sub_10029f0b
retn
sub_1001789e
push 0x20
mov eax sub_1004d5bc
call sub_10029e33
mov esi ecx
call sub_10017a65
push [ ebp + 0x10 ]
mov esi [ esi + 0x14 ]
push [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx + 0x4 ]
push esi
push eax
push ecx
call [ HttpSendRequestW@IAT ]
push r--data
lea ecx [ ebp - 0x28 ]
mov esi eax
call sub_10001b81
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x28 ]
push eax
cmp esi 0x1
setne al
movzx eax al
push eax
call sub_10014a2a
pop ecx
pop ecx
push 0x0
push 0x1
lea ecx [ ebp - 0x28 ]
call sub_100022b5
call sub_10029f0b
retn 0xc
sub_10017905
push 0x20
mov eax sub_1004cb87
call sub_10029e33
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
and [ ebp - 0x10 ] 0x0
lea ecx [ ebp - 0x10 ]
push ecx
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call [ InternetReadFile@IAT ]
push r--data
lea ecx [ ebp - 0x2c ]
mov edi eax
call sub_10001b81
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x2c ]
push eax
cmp edi 0x1
setne al
movzx eax al
push eax
call sub_10014a2a
pop ecx
pop ecx
push 0x0
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_100022b5
mov eax [ ebp - 0x10 ]
call sub_10029f0b
retn 0xc
sub_1001796b
push 0x28
mov eax sub_1004dd65
call sub_10029e33
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
and [ ebp - 0x10 ] 0x0
push 0x0
lea ecx [ ebp - 0x14 ]
push ecx
lea ecx [ ebp - 0x10 ]
push ecx
push 0x20000013
push eax
mov [ ebp - 0x14 ] 0x4
call [ HttpQueryInfoW@IAT ]
push r--data
lea ecx [ ebp - 0x30 ]
mov edi eax
call sub_10001b81
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x30 ]
push eax
cmp edi 0x1
setne al
movzx eax al
push eax
call sub_10014a2a
pop ecx
pop ecx
push 0x0
push 0x1
lea ecx [ ebp - 0x30 ]
call sub_100022b5
mov eax [ ebp - 0x10 ]
call sub_10029f0b
retn 0x4
sub_100179dd
push 0x48
mov eax sub_1004c639
call sub_10029e33
mov eax [ ebp + 0x8 ]
mov [ eax ] r--data
mov [ eax + 0x4 ] ecx
test ecx ecx
jne r-xdata
call sub_10029f0b
retn 0x4
push r--data
lea ecx [ ebp - 0x2c ]
call sub_10001b81
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x2c ]
push eax
lea ecx [ ebp - 0x54 ]
call sub_100078c4
push r--data
lea eax [ ebp - 0x54 ]
push eax
call sub_10029a01
sub_10017a84
push 0x1c
mov eax sub_1004d599
call sub_10029e33
push [ ebp + 0x14 ]
mov eax [ ebp + 0x8 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ eax + 0x4 ]
call [ InternetQueryOptionW@IAT ]
push r--data
lea ecx [ ebp - 0x28 ]
mov esi eax
call sub_10001b81
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x28 ]
push eax
cmp esi 0x1
setne al
movzx eax al
push eax
call sub_10014a2a
pop ecx
pop ecx
push 0x0
push 0x1
lea ecx [ ebp - 0x28 ]
call sub_100022b5
call sub_10029f0b
retn 0x10
sub_10017ae1
push 0x1c
mov eax sub_1004d599
call sub_10029e33
push [ ebp + 0x14 ]
mov eax [ ebp + 0x8 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ eax + 0x4 ]
call [ InternetSetOptionW@IAT ]
push r--data
lea ecx [ ebp - 0x28 ]
mov esi eax
call sub_10001b81
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x28 ]
push eax
cmp esi 0x1
setne al
movzx eax al
push eax
call sub_10014a2a
pop ecx
pop ecx
push 0x0
push 0x1
lea ecx [ ebp - 0x28 ]
call sub_100022b5
call sub_10029f0b
retn 0x10
sub_10017b44
mov [ eax ] ecx
dec ecx
dec ecx
je r-xdata
lea ecx [ eax + 0x4 ]
and [ ecx + 0x20 ] 0x0
push edi
xor eax eax
mov edi ecx
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
xor eax eax
lea edi [ ecx + 0x10 ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
pop edi
dec ecx
je r-xdata
and [ eax + 0x1c ] 0x0
and [ eax + 0x18 ] 0x0
mov [ eax + 0x4 ] 0x67452301
mov [ eax + 0x8 ] 0xefcdab89
mov [ eax + 0xc ] 0x98badcfe
mov [ eax + 0x10 ] 0x10325476
mov [ eax + 0x14 ] 0xc3d2e1f0
jmp r-xdata
dec ecx
je r-xdata
xor eax eax
retn
and [ eax + 0x18 ] 0x0
and [ eax + 0x14 ] 0x0
mov [ eax + 0x4 ] 0x67452301
mov [ eax + 0x8 ] 0xefcdab89
mov [ eax + 0xc ] 0x98badcfe
mov [ eax + 0x10 ] 0x10325476
jmp r-xdata
dec ecx
je r-xdata
add eax 0x4
call sub_10017de4
jmp r-xdata
mov eax 0x402
retn
sub_10017bd3
push esi
mov esi edx
mov edx [ ecx ]
dec edx
dec edx
je r-xdata
push esi
lea esi [ ecx + 0x4 ]
call sub_1001aa05
dec edx
je r-xdata
push eax
push esi
lea eax [ ecx + 0x4 ]
call sub_10018dd5
pop ecx
jmp r-xdata
dec edx
je r-xdata
pop ecx
xor eax eax
pop esi
retn
push esi
lea esi [ ecx + 0x4 ]
call sub_1001ab8d
jmp r-xdata
dec edx
je r-xdata
push esi
lea esi [ ecx + 0x4 ]
call sub_10017e08
jmp r-xdata
mov eax 0x402
pop esi
retn
sub_10017c1d
mov ecx [ eax ]
xor edx edx
cmp ecx 0x3
sete dl
push ebx
push esi
mov esi [ esp + 0xc ]
dec ecx
dec ecx
lea edx [ edx * 4 + 0x10 ]
mov [ esi ] edx
je r-xdata
add eax 0x4
push edi
call sub_1001aa9f
dec ecx
je r-xdata
lea esi [ eax + 0x4 ]
push edi
call sub_10018eb9
jmp r-xdata
dec ecx
je r-xdata
pop ecx
lea ecx [ eax + 0x4 ]
mov ebx edi
call sub_1001ac32
jmp r-xdata
dec ecx
je r-xdata
xor eax eax
lea ecx [ eax + 0x4 ]
mov ebx edi
call sub_10017ead
jmp r-xdata
mov eax 0x402
jmp r-xdata
pop esi
pop ebx
retn
sub_10017c7c
push ebp
lea ebp [ esp - 0x70 ]
sub esp 0xc0
mov eax [ rw-data ]
xor eax ebp
mov [ ebp + 0x6c ] eax
push edi
xor edi edi
cmp [ ebp + 0x7c ] 0x80
jbe r-xdata
cmp [ esi ] 0x3
jne r-xdata
mov edi 0x406
test edi edi
jne r-xdata
mov edi 0x402
mov ecx [ ebp + 0x6c ]
mov eax edi
xor ecx ebp
pop edi
call sub_10025c8d
add ebp 0x70
leave
retn
lea eax [ ebp - 0x50 ]
push eax
lea edi [ ebp + 0x58 ]
mov eax esi
call sub_10017c1d
mov edi eax
pop ecx
test edi edi
jne r-xdata
mov ecx [ esi ]
lea eax [ ebp + 0x58 ]
push eax
lea eax [ ebp + 0x34 ]
call sub_10017d95
push [ ebp + 0x7c ]
lea eax [ ebp - 0x50 ]
push [ ebp + 0x78 ]
mov ecx ebx
push eax
lea eax [ ebp - 0x4c ]
push eax
call sub_1001a853
add esp 0x14
test eax eax
je r-xdata
cmp [ ebp - 0x50 ] 0x22
jne r-xdata
mov edi 0x40a
jmp r-xdata
mov edi 0x40b
mov al [ ebp - 0x3f ]
cmp al [ ebp + 0x41 ]
jne r-xdata
push 0x22
lea eax [ ebp + 0x34 ]
lea ecx [ ebp - 0x4c ]
call sub_100185fe
pop ecx
test eax eax
jne r-xdata
mov ecx [ esi ]
mov eax esi
call sub_10017b44
jmp r-xdata
sub_10017d38
push ebp
mov ebp esp
sub esp 0x6c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x8 ] eax
push ebx
push esi
mov ebx ecx
push 0x5
pop ecx
lea eax [ ebp - 0x6c ]
call sub_10017b44
test eax eax
jne r-xdata
mov ecx [ ebp - 0x8 ]
pop esi
xor ecx ebp
pop ebx
call sub_10025c8d
leave
retn
cmp [ ebp - 0x6c ] 0x3
jne r-xdata
mov eax [ ebp + 0x8 ]
lea ecx [ ebp - 0x6c ]
call sub_10017bd3
test eax eax
jne r-xdata
mov eax 0x402
jmp r-xdata
push [ ebp + 0x10 ]
lea esi [ ebp - 0x6c ]
push [ ebp + 0xc ]
call sub_10017c7c
pop ecx
pop ecx
sub_10017d95
cmp ecx 0x3
je r-xdata
retn
push esi
push edi
mov [ eax + 0xd ] cl
mov ecx rw-data
push 0x4
lea edx [ eax + 0xe ]
pop edi
mov esi ecx
sub edx ecx
mov cl [ esi ]
mov [ edx + esi ] cl
inc esi
dec edi
jne r-xdata
push 0xd
mov ecx rw-data
mov esi eax
pop edi
sub esi ecx
mov dl [ ecx ]
mov [ esi + ecx ] dl
inc ecx
dec edi
jne r-xdata
mov ecx [ esp + 0xc ]
push 0x10
add eax 0x12
pop esi
sub eax ecx
mov dl [ ecx ]
mov [ eax + ecx ] dl
inc ecx
dec esi
jne r-xdata
pop edi
pop esi
sub_10017e08
push ebp
mov ebp esp
push ecx
mov ecx [ esi + 0x10 ]
push edi
mov edi eax
mov eax ecx
shr eax 0x3
mov edx edi
lea ecx [ ecx + edi * 8 ]
shl edx 0x3
and eax 0x3f
mov [ esi + 0x10 ] ecx
cmp ecx edx
jae r-xdata
push ebx
push 0x40
mov ecx edi
shr ecx 0x1d
add [ esi + 0x14 ] ecx
pop ebx
sub ebx eax
cmp edi ebx
jb r-xdata
inc [ esi + 0x14 ]
xor ebx ebx
mov ecx [ ebp + 0x8 ]
mov [ ebp - 0x4 ] ebx
lea eax [ eax + esi + 0x18 ]
test ebx ebx
je r-xdata
pop edi
leave
retn
sub eax ecx
lea ecx [ esi + 0x18 ]
push esi
call sub_10017f22
lea eax [ ebx + 0x3f ]
pop ecx
cmp eax edi
jae r-xdata
sub eax ecx
mov dl [ ecx ]
mov [ eax + ecx ] dl
inc ecx
dec edi
jne r-xdata
xor eax eax
jmp r-xdata
mov [ ebp - 0x4 ] eax
mov dl [ ecx ]
mov [ eax + ecx ] dl
inc ecx
dec [ ebp - 0x4 ]
jne r-xdata
mov ecx [ ebp + 0x8 ]
sub edi ebx
lea ecx [ ebx + ecx ]
lea eax [ eax + esi + 0x18 ]
pop ebx
je r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x4 ]
lea ecx [ eax + ecx - 0x3f ]
push esi
call sub_10017f22
add [ ebp - 0x4 ] 0x40
add ebx 0x40
pop ecx
cmp [ ebp - 0x4 ] edi
jb r-xdata
sub_10017ead
push ebp
mov ebp esp
sub esp 0xc
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
push edi
mov esi ecx
lea edi [ esi + 0x10 ]
push 0x8
pop edx
mov eax edi
lea ecx [ ebp - 0xc ]
call sub_100185bb
mov ecx [ edi ]
shr ecx 0x3
push 0x38
and ecx 0x3f
pop eax
cmp ecx eax
jb r-xdata
sub eax ecx
push rw-data
call sub_10017e08
lea eax [ ebp - 0xc ]
push eax
push 0x8
pop eax
call sub_10017e08
push 0x10
pop edx
mov eax esi
mov ecx ebx
call sub_100185bb
push 0x58
push 0x0
push esi
call sub_10026630
mov ecx [ ebp - 0x4 ]
add esp 0x14
pop edi
xor ecx ebp
pop esi
call sub_10025c8d
leave
retn
push 0x78
pop eax
sub_10017f22
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
sub esp 0x48
push ebx
push esi
push edi
push 0x10
add ecx 0x2
lea edx [ ebp - 0x48 ]
pop esi
movzx edi [ ecx + 0x1 ]
movzx ebx [ ecx ]
shl edi 0x8
or edi ebx
movzx ebx [ ecx - 0x1 ]
shl edi 0x8
or edi ebx
movzx ebx [ ecx - 0x2 ]
shl edi 0x8
or edi ebx
mov [ edx ] edi
add edx 0x4
add ecx 0x4
dec esi
jne r-xdata
mov esi [ eax + 0x4 ]
mov edx [ eax + 0x8 ]
mov ecx [ eax + 0xc ]
mov eax [ eax ]
mov edi esi
not edi
and edi ecx
mov ebx edx
and ebx esi
or edi ebx
add edi [ ebp - 0x48 ]
mov ebx esi
lea eax [ edi + eax - 0x28955b88 ]
rol eax 0x7
add eax esi
and ebx eax
mov edi eax
not edi
and edi edx
or edi ebx
add edi [ ebp - 0x44 ]
lea ecx [ edi + ecx - 0x173848aa ]
rol ecx 0xc
add ecx eax
mov edi ecx
not edi
and edi esi
mov ebx ecx
and ebx eax
or edi ebx
add edi [ ebp - 0x40 ]
mov ebx ecx
lea edx [ edi + edx + 0x242070db ]
ror edx 0xf
add edx ecx
and ebx edx
mov edi edx
not edi
and edi eax
or edi ebx
add edi [ ebp - 0x3c ]
lea esi [ edi + esi - 0x3e423112 ]
ror esi 0xa
add esi edx
mov [ ebp - 0x4 ] esi
mov edi edx
and edi [ ebp - 0x4 ]
not esi
and esi ecx
or esi edi
add esi [ ebp - 0x38 ]
lea eax [ esi + eax - 0xa83f051 ]
mov esi [ ebp - 0x4 ]
rol eax 0x7
add eax esi
mov edi eax
not edi
and edi edx
mov ebx esi
and ebx eax
or edi ebx
add edi [ ebp - 0x34 ]
lea ecx [ edi + ecx + 0x4787c62a ]
rol ecx 0xc
add ecx eax
mov edi ecx
not edi
and edi esi
mov ebx ecx
and ebx eax
or edi ebx
add edi [ ebp - 0x30 ]
mov ebx ecx
lea edx [ edi + edx - 0x57cfb9ed ]
ror edx 0xf
add edx ecx
mov edi edx
not edi
and edi eax
and ebx edx
or edi ebx
add edi [ ebp - 0x2c ]
lea esi [ edi + esi - 0x2b96aff ]
ror esi 0xa
add esi edx
mov [ ebp - 0x4 ] esi
not esi
and esi ecx
mov edi edx
and edi [ ebp - 0x4 ]
or esi edi
add esi [ ebp - 0x28 ]
lea eax [ esi + eax + 0x698098d8 ]
mov esi [ ebp - 0x4 ]
mov ebx esi
rol eax 0x7
add eax esi
and ebx eax
mov edi eax
not edi
and edi edx
or edi ebx
add edi [ ebp - 0x24 ]
lea ecx [ edi + ecx - 0x74bb0851 ]
rol ecx 0xc
add ecx eax
mov edi ecx
not edi
and edi esi
mov ebx ecx
and ebx eax
or edi ebx
add edi [ ebp - 0x20 ]
mov ebx ecx
lea edx [ edi + edx - 0xa44f ]
ror edx 0xf
add edx ecx
and ebx edx
mov edi edx
not edi
and edi eax
or edi ebx
add edi [ ebp - 0x1c ]
lea esi [ edi + esi - 0x76a32842 ]
ror esi 0xa
add esi edx
mov [ ebp - 0x4 ] esi
not esi
and esi ecx
mov edi edx
and edi [ ebp - 0x4 ]
or esi edi
add esi [ ebp - 0x18 ]
mov edi [ ebp - 0x4 ]
lea eax [ esi + eax + 0x6b901122 ]
rol eax 0x7
add eax [ ebp - 0x4 ]
and edi eax
mov esi eax
not esi
and esi edx
or esi edi
add esi [ ebp - 0x14 ]
lea ecx [ esi + ecx - 0x2678e6d ]
rol ecx 0xc
add ecx eax
mov edi ecx
not edi
mov esi edi
and esi [ ebp - 0x4 ]
mov ebx ecx
and ebx eax
or esi ebx
add esi [ ebp - 0x10 ]
mov ebx ecx
lea edx [ esi + edx - 0x5986bc72 ]
ror edx 0xf
add edx ecx
mov [ ebp - 0x8 ] edx
not [ ebp - 0x8 ]
mov esi [ ebp - 0x8 ]
and esi eax
and edi edx
and ebx edx
or esi ebx
add esi [ ebp - 0xc ]
mov ebx [ ebp - 0x4 ]
lea esi [ esi + ebx + 0x49b40821 ]
ror esi 0xa
add esi edx
mov ebx ecx
and ebx esi
or edi ebx
add edi [ ebp - 0x44 ]
mov ebx edx
lea eax [ edi + eax - 0x9e1da9e ]
mov edi [ ebp - 0x8 ]
and edi esi
rol eax 0x5
add eax esi
and ebx eax
or edi ebx
add edi [ ebp - 0x30 ]
lea ecx [ edi + ecx - 0x3fbf4cc0 ]
rol ecx 0x9
add ecx eax
mov edi esi
not edi
and edi eax
mov ebx ecx
and ebx esi
or edi ebx
add edi [ ebp - 0x1c ]
lea edx [ edi + edx + 0x265e5a51 ]
rol edx 0xe
add edx ecx
mov edi eax
not edi
and edi ecx
mov ebx edx
and ebx eax
or edi ebx
add edi [ ebp - 0x48 ]
mov ebx ecx
lea esi [ edi + esi - 0x16493856 ]
ror esi 0xc
add esi edx
and ebx esi
mov edi ecx
not edi
and edi edx
or edi ebx
add edi [ ebp - 0x34 ]
mov ebx edx
lea eax [ edi + eax - 0x29d0efa3 ]
rol eax 0x5
add eax esi
mov edi edx
not edi
and edi esi
and ebx eax
or edi ebx
add edi [ ebp - 0x20 ]
lea ecx [ edi + ecx + 0x2441453 ]
rol ecx 0x9
add ecx eax
mov edi esi
not edi
and edi eax
mov ebx ecx
and ebx esi
or edi ebx
add edi [ ebp - 0xc ]
lea edx [ edi + edx - 0x275e197f ]
rol edx 0xe
add edx ecx
mov edi eax
not edi
mov ebx edx
and edi ecx
and ebx eax
or edi ebx
add edi [ ebp - 0x38 ]
lea esi [ edi + esi - 0x182c0438 ]
ror esi 0xc
add esi edx
mov edi ecx
not edi
and edi edx
mov ebx ecx
and ebx esi
or edi ebx
add edi [ ebp - 0x24 ]
mov ebx edx
lea eax [ edi + eax + 0x21e1cde6 ]
rol eax 0x5
add eax esi
and ebx eax
mov edi edx
not edi
and edi esi
or edi ebx
add edi [ ebp - 0x10 ]
lea ecx [ edi + ecx - 0x3cc8f82a ]
rol ecx 0x9
add ecx eax
mov edi esi
not edi
and edi eax
mov ebx ecx
and ebx esi
or edi ebx
add edi [ ebp - 0x3c ]
lea edx [ edi + edx - 0xb2af279 ]
rol edx 0xe
add edx ecx
mov edi eax
not edi
and edi ecx
mov ebx edx
and ebx eax
or edi ebx
add edi [ ebp - 0x28 ]
mov ebx ecx
lea esi [ edi + esi + 0x455a14ed ]
ror esi 0xc
add esi edx
and ebx esi
mov edi ecx
not edi
and edi edx
or edi ebx
add edi [ ebp - 0x14 ]
mov ebx edx
lea eax [ edi + eax - 0x561c16fb ]
rol eax 0x5
add eax esi
mov edi edx
not edi
and edi esi
and ebx eax
or edi ebx
add edi [ ebp - 0x40 ]
lea ecx [ edi + ecx - 0x3105c08 ]
rol ecx 0x9
add ecx eax
mov edi esi
not edi
and edi eax
mov ebx ecx
and ebx esi
or edi ebx
add edi [ ebp - 0x2c ]
lea edx [ edi + edx + 0x676f02d9 ]
rol edx 0xe
add edx ecx
mov edi eax
not edi
mov ebx edx
and edi ecx
and ebx eax
or edi ebx
add edi [ ebp - 0x18 ]
lea esi [ edi + esi - 0x72d5b376 ]
ror esi 0xc
add esi edx
mov edi ecx
xor edi edx
xor edi esi
add edi [ ebp - 0x34 ]
lea eax [ edi + eax - 0x5c6be ]
rol eax 0x4
add eax esi
mov edi edx
xor edi esi
xor edi eax
add edi [ ebp - 0x28 ]
lea ecx [ edi + ecx - 0x788e097f ]
rol ecx 0xb
add ecx eax
mov edi ecx
xor edi esi
xor edi eax
add edi [ ebp - 0x1c ]
lea edx [ edi + edx + 0x6d9d6122 ]
rol edx 0x10
add edx ecx
mov edi ecx
xor edi edx
mov ebx edi
xor ebx eax
add ebx [ ebp - 0x10 ]
lea esi [ ebx + esi - 0x21ac7f4 ]
ror esi 0x9
add esi edx
xor edi esi
add edi [ ebp - 0x44 ]
lea eax [ edi + eax - 0x5b4115bc ]
rol eax 0x4
add eax esi
mov edi edx
xor edi esi
xor edi eax
add edi [ ebp - 0x38 ]
lea edi [ edi + ecx + 0x4bdecfa9 ]
rol edi 0xb
add edi eax
mov ecx edi
xor ecx esi
xor ecx eax
add ecx [ ebp - 0x2c ]
mov ebx edi
lea edx [ ecx + edx - 0x944b4a0 ]
rol edx 0x10
add edx edi
xor ebx edx
mov ecx ebx
xor ecx eax
add ecx [ ebp - 0x20 ]
lea ecx [ ecx + esi - 0x41404390 ]
ror ecx 0x9
add ecx edx
xor ebx ecx
add ebx [ ebp - 0x14 ]
mov esi edx
lea eax [ ebx + eax + 0x289b7ec6 ]
xor esi ecx
rol eax 0x4
add eax ecx
xor esi eax
add esi [ ebp - 0x48 ]
lea esi [ esi + edi - 0x155ed806 ]
rol esi 0xb
add esi eax
mov edi esi
xor edi ecx
xor edi eax
add edi [ ebp - 0x3c ]
lea edi [ edi + edx - 0x2b10cf7b ]
rol edi 0x10
add edi esi
mov edx esi
xor edx edi
mov ebx edx
xor ebx eax
add ebx [ ebp - 0x30 ]
lea ecx [ ebx + ecx + 0x4881d05 ]
ror ecx 0x9
add ecx edi
xor edx ecx
add edx [ ebp - 0x24 ]
lea eax [ edx + eax - 0x262b2fc7 ]
mov edx edi
xor edx ecx
rol eax 0x4
add eax ecx
xor edx eax
add edx [ ebp - 0x18 ]
lea edx [ edx + esi - 0x1924661b ]
rol edx 0xb
add edx eax
mov esi edx
xor esi ecx
xor esi eax
add esi [ ebp - 0xc ]
lea esi [ esi + edi + 0x1fa27cf8 ]
rol esi 0x10
add esi edx
mov edi edx
xor edi esi
xor edi eax
add edi [ ebp - 0x40 ]
lea ecx [ edi + ecx - 0x3b53a99b ]
ror ecx 0x9
add ecx esi
mov edi edx
not edi
or edi ecx
xor edi esi
add edi [ ebp - 0x48 ]
lea eax [ edi + eax - 0xbd6ddbc ]
rol eax 0x6
add eax ecx
mov edi esi
not edi
or edi eax
xor edi ecx
add edi [ ebp - 0x2c ]
lea edx [ edi + edx + 0x432aff97 ]
rol edx 0xa
add edx eax
mov edi ecx
not edi
or edi edx
xor edi eax
add edi [ ebp - 0x10 ]
lea esi [ edi + esi - 0x546bdc59 ]
rol esi 0xf
add esi edx
mov edi eax
not edi
or edi esi
xor edi edx
add edi [ ebp - 0x34 ]
lea ecx [ edi + ecx - 0x36c5fc7 ]
ror ecx 0xb
add ecx esi
mov edi edx
not edi
or edi ecx
xor edi esi
add edi [ ebp - 0x18 ]
lea eax [ edi + eax + 0x655b59c3 ]
rol eax 0x6
add eax ecx
mov edi esi
not edi
or edi eax
xor edi ecx
add edi [ ebp - 0x3c ]
lea edx [ edi + edx - 0x70f3336e ]
rol edx 0xa
mov edi ecx
add edx eax
not edi
or edi edx
xor edi eax
add edi [ ebp - 0x20 ]
lea esi [ edi + esi - 0x100b83 ]
rol esi 0xf
add esi edx
mov edi eax
not edi
or edi esi
xor edi edx
add edi [ ebp - 0x44 ]
lea ecx [ edi + ecx - 0x7a7ba22f ]
ror ecx 0xb
add ecx esi
mov edi edx
not edi
or edi ecx
xor edi esi
add edi [ ebp - 0x28 ]
lea eax [ edi + eax + 0x6fa87e4f ]
rol eax 0x6
add eax ecx
mov edi esi
not edi
or edi eax
xor edi ecx
add edi [ ebp - 0xc ]
lea edx [ edi + edx - 0x1d31920 ]
mov edi ecx
rol edx 0xa
add edx eax
not edi
or edi edx
xor edi eax
add edi [ ebp - 0x30 ]
lea esi [ edi + esi - 0x5cfebcec ]
mov edi eax
rol esi 0xf
add esi edx
not edi
or edi esi
xor edi edx
add edi [ ebp - 0x14 ]
lea edi [ edi + ecx + 0x4e0811a1 ]
ror edi 0xb
add edi esi
mov ecx edx
not ecx
or ecx edi
xor ecx esi
add ecx [ ebp - 0x38 ]
lea eax [ ecx + eax - 0x8ac817e ]
rol eax 0x6
add eax edi
mov ecx esi
not ecx
or ecx eax
xor ecx edi
add ecx [ ebp - 0x1c ]
lea edx [ ecx + edx - 0x42c50dcb ]
rol edx 0xa
add edx eax
mov ecx edi
not ecx
or ecx edx
xor ecx eax
add ecx [ ebp - 0x40 ]
lea esi [ ecx + esi + 0x2ad7d2bb ]
mov ecx [ ebp + 0x8 ]
mov ebx [ ecx ]
add ebx eax
not eax
rol esi 0xf
add esi edx
or eax esi
xor eax edx
add eax [ ebp - 0x24 ]
mov [ ecx ] ebx
lea eax [ eax + edi - 0x14792c6f ]
ror eax 0xb
add eax [ ecx + 0x4 ]
add eax esi
mov [ ecx + 0x4 ] eax
mov eax [ ecx + 0x8 ]
add eax esi
mov [ ecx + 0x8 ] eax
mov eax [ ecx + 0xc ]
pop edi
add eax edx
pop esi
mov [ ecx + 0xc ] eax
pop ebx
leave
retn
sub_100185bb
test edx edx
jbe r-xdata
retn
push esi
lea esi [ edx - 0x1 ]
shr esi 0x2
inc ecx
add eax 0x2
inc esi
mov dl [ eax - 0x2 ]
mov [ ecx - 0x1 ] dl
mov dl [ eax - 0x1 ]
mov [ ecx ] dl
mov dl [ eax ]
mov [ ecx + 0x1 ] dl
mov dl [ eax + 0x1 ]
mov [ ecx + 0x2 ] dl
add eax 0x4
add ecx 0x4
dec esi
jne r-xdata
pop esi
sub_100185fe
push esi
mov esi ecx
movzx ecx [ eax - 0x1 ]
movzx eax [ esi - 0x1 ]
sub eax ecx
pop esi
retn
dec [ esp + 0x8 ]
jne r-xdata
mov dl [ eax ]
mov cl [ esi ]
inc eax
inc esi
cmp cl dl
jne r-xdata
xor eax eax
pop esi
retn
sub_10018621
push edi
mov edi [ esp + 0x8 ]
xor edx edx
dec eax
push esi
pop esi
cmp edx 0x21
jae r-xdata
xor esi esi
xor ecx ecx
pop edi
retn
push 0x21
pop ecx
sub ecx edx
lea edi [ edi + edx * 4 ]
xor eax eax
[ edi ]
mov edi [ esp + 0xc ]
mov [ edi + edx * 4 ] esi
inc edx
cmp edx 0x21
jb r-xdata
mov edi [ esp + 0x10 ]
movzx edi [ eax + edi ]
shl edi cl
add ecx 0x8
or esi edi
dec eax
test eax eax
jge r-xdata
test eax eax
jl r-xdata
cmp ecx 0x20
jae r-xdata
sub_1001866c
push ebp
mov ebp esp
push ebx
push esi
push edi
xor edi edi
dec eax
cmp [ ebp + 0x10 ] edi
jbe r-xdata
test eax eax
jl r-xdata
test eax eax
jl r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
mov ecx [ ebp + 0x8 ]
mov [ eax + ecx ] 0x0
dec eax
jns r-xdata
mov ecx [ ebp + 0xc ]
mov esi [ ecx + edi * 4 ]
xor ecx ecx
inc edi
cmp edi [ ebp + 0x10 ]
jb r-xdata
mov ebx [ ebp + 0x8 ]
mov edx esi
shr edx cl
add ecx 0x8
mov [ eax + ebx ] dl
dec eax
test eax eax
jge r-xdata
cmp ecx 0x20
jae r-xdata
sub_100186ca
push edi
mov edi eax
xor eax eax
cmp [ esp + 0xc ] eax
je r-xdata
pop edi
retn
push ebx
mov eax [ edx ]
or ebx 0xffffffff
sub ecx eax
sub ebx eax
cmp ebx ecx
sbb eax eax
neg eax
or ecx ecx
sub ecx [ edx ]
jmp r-xdata
mov ecx [ edi ]
sub ecx eax
add edi 0x4
cmp ecx 0xffffffff
jne r-xdata
pop ebx
mov ebx [ esp + 0xc ]
add [ esp + 0xc ] 0x4
add edx 0x4
dec [ esp + 0x10 ]
mov [ ebx ] ecx
jne r-xdata
sub_1001870e
push ebp
mov ebp esp
sub esp 0x128
push ebx
mov ebx eax
lea eax [ edx + edx ]
push edi
mov [ ebp - 0x1c ] eax
push eax
lea eax [ ebp - 0x128 ]
call sub_100186b6
add esp 0x4
test edx edx
je r-xdata
xor edi edi
push ebx
mov eax edx
call sub_10018cd7
pop ecx
mov edi eax
jmp r-xdata
and [ ebp - 0x8 ] 0x0
push [ ebp + 0xc ]
mov eax edx
call sub_10018cd7
pop ecx
mov [ ebp - 0x8 ] eax
jmp r-xdata
test edx edx
je r-xdata
push [ ebp - 0x1c ]
mov eax [ ebp + 0x8 ]
lea ecx [ ebp - 0x128 ]
call sub_10018cbf
pop ecx
pop edi
pop ebx
leave
retn
mov eax [ ebp - 0x8 ]
push esi
lea esi [ ebp - 0x128 ]
lea eax [ ebp + eax * 4 - 0x128 ]
sub esi ebx
mov [ ebp - 0x4 ] ebx
mov [ ebp - 0xc ] eax
mov [ ebp - 0x18 ] esi
mov [ ebp - 0x10 ] edi
test edi edi
jbe r-xdata
add [ eax ] edi
add [ ebp - 0x4 ] 0x4
add eax 0x4
dec [ ebp - 0x10 ]
mov [ ebp - 0xc ] eax
jne r-xdata
cmp [ ebp - 0x8 ] ebx
jbe r-xdata
mov ecx [ ebp - 0x4 ]
xor ebx ebx
xor edi edi
cmp [ ecx ] ebx
je r-xdata
pop esi
mov eax ecx
add esi eax
add edi [ ebp - 0x20 ]
inc ebx
add esi 0x4
cmp ebx [ ebp - 0x8 ]
jb r-xdata
inc edi
lea eax [ ebp - 0x14 ]
push eax
lea eax [ ebp - 0x20 ]
push eax
mov eax [ ebp + 0xc ]
push [ eax + ebx * 4 ]
mov eax [ ebp - 0x4 ]
push [ eax ]
call sub_10018d65
add [ esi ] edi
mov eax [ ebp - 0x14 ]
add esp 0x10
cmp [ esi ] edi
sbb edi edi
add [ esi ] eax
neg edi
cmp [ esi ] eax
jae r-xdata
mov eax [ ebp - 0xc ]
mov esi [ ebp - 0x18 ]
sub_100187fd
push ebp
mov ebp esp
push ecx
and [ ebp - 0x4 ] 0x0
push ebx
push esi
push edi
push 0x20
pop esi
mov edi eax
mov ebx ecx
cmp [ ebp + 0x8 ] esi
jae r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
leave
retn
cmp [ ebp + 0xc ] 0x0
je r-xdata
sub esi [ ebp + 0x8 ]
mov edx [ edi ]
mov ecx [ ebp + 0x8 ]
mov eax edx
shl eax cl
add edi 0x4
or eax [ ebp - 0x4 ]
mov [ ebx ] eax
mov eax ecx
mov ecx esi
shr edx cl
add ebx 0x4
neg eax
sbb eax eax
and eax edx
dec [ ebp + 0xc ]
mov [ ebp - 0x4 ] eax
jne r-xdata
sub_1001884d
push ebp
lea ebp [ esp - 0x64 ]
sub esp 0x1c4
push esi
mov esi eax
mov eax [ ebp + 0x7c ]
test eax eax
je r-xdata
and [ ebp + 0x5c ] 0x0
push [ ebp + 0x78 ]
call sub_10018cd7
pop ecx
mov [ ebp + 0x5c ] eax
jmp r-xdata
pop esi
add ebp 0x64
leave
retn
mov eax [ ebp + 0x78 ]
push edi
mov edi edx
shl edi 0x2
mov eax [ edi + eax - 0x4 ]
mov [ ebp + 0x40 ] edi
xor ecx ecx
mov edx [ ebp + 0x5c ]
test edx edx
je r-xdata
push ebx
push 0x20
pop ebx
sub ebx ecx
push edx
lea eax [ ebp - 0x160 ]
mov [ ebp + 0x44 ] ebx
call sub_100186b6
mov eax [ ebp + 0x74 ]
push esi
push ebx
lea ecx [ ebp - 0x160 ]
call sub_100187fd
push [ ebp + 0x5c ]
mov [ ebp + esi * 4 - 0x160 ] eax
mov eax [ ebp + 0x78 ]
push ebx
lea ecx [ ebp - 0x54 ]
call sub_100187fd
mov eax [ ebp + edi - 0x58 ]
mov ecx [ ebp + 0x6c ]
mov [ ebp + 0x60 ] eax
push esi
mov eax ecx
call sub_100186b6
mov eax [ ebp + 0x5c ]
add esp 0x18
sub esi eax
mov [ ebp + 0x38 ] esi
js r-xdata
inc ecx
shr eax 0x1
cmp ecx 0x20
jb r-xdata
mov ecx [ ebp + 0x70 ]
push [ ebp + 0x7c ]
mov eax ecx
call sub_100186b6
mov eax [ ebp + 0x5c ]
and [ ebp + 0x48 ] 0x0
add esp 0x4
push 0x20
pop esi
mov [ ebp + 0x7c ] eax
cmp ebx esi
jae r-xdata
lea edx [ ebp + esi * 4 - 0x160 ]
add esi eax
lea esi [ ebp + esi * 4 - 0x160 ]
mov [ ebp + 0x3c ] ecx
lea eax [ ebp - 0x160 ]
sub [ ebp + 0x3c ] eax
mov [ ebp + 0x50 ] edx
mov [ ebp + 0x48 ] esi
test eax eax
je r-xdata
pop ebx
pop edi
lea edx [ edi + ecx ]
lea edi [ ebp - 0x160 ]
sub esi ebx
sub edi ecx
jmp r-xdata
inc [ ebp + 0x60 ]
mov ecx [ ebp + 0x60 ]
mov ebx [ esi - 0x4 ]
mov esi [ esi ]
shr ecx 0x10
mov eax 0xffff
cmp cx ax
mov [ ebp + 0x34 ] ecx
mov [ ebp + 0x58 ] esi
mov eax esi
jne r-xdata
mov edi [ esi ]
jmp r-xdata
dec [ ebp + 0x7c ]
sub edx 0x4
mov eax [ edi + edx ]
mov ecx eax
mov [ ebp + 0x40 ] ecx
mov ecx ebx
mov ebx eax
shr ebx cl
mov ecx esi
shl eax cl
or ebx [ ebp + 0x48 ]
mov [ edx ] ebx
mov ebx [ ebp + 0x44 ]
neg ebx
sbb ebx ebx
and ebx eax
cmp [ ebp + 0x7c ] 0x0
mov [ ebp + 0x48 ] ebx
jne r-xdata
movzx ecx cx
inc ecx
xor edx edx
div ecx
movzx eax ax
mov [ ebp + 0x4c ] eax
shr eax 0x10
mov [ ebp + 0x4c ] eax
jmp r-xdata
mov edx [ ebp + 0x50 ]
mov ecx [ ebp + 0x5c ]
push edi
push edx
lea eax [ ebp - 0x54 ]
call sub_10018ceb
mov ebx [ ebp + 0x44 ]
shr ecx 0x10
add ecx [ ebp + 0x30 ]
sub [ ebp + 0x58 ] ecx
dec [ ebp + 0x58 ]
movzx edi [ ebp + 0x60 ]
movzx esi [ ebp + 0x34 ]
movzx eax ax
mov ecx edi
imul ecx eax
imul eax esi
mov [ ebp + 0x30 ] eax
mov eax ecx
shl eax 0x10
or edx 0xffffffff
sub ebx eax
sub edx eax
cmp ebx edx
jbe r-xdata
push [ ebp + 0x5c ]
mov eax [ ebp + 0x50 ]
push eax
lea edx [ ebp - 0x54 ]
inc edi
call sub_100186ca
jmp r-xdata
push [ ebp + 0x50 ]
mov ecx [ ebp + 0x5c ]
lea edx [ ebp - 0x54 ]
call sub_10018c8e
pop ecx
test eax eax
jl r-xdata
mov eax edi
shl eax 0x10
or ecx 0xffffffff
sub ebx eax
sub ecx eax
cmp ebx ecx
jbe r-xdata
jne r-xdata
sub [ esi ] eax
cmp [ esi ] 0x0
pop ecx
pop ecx
jne r-xdata
mov ecx [ ebp + 0x50 ]
dec [ ebp + 0x38 ]
mov eax [ ebp + 0x3c ]
sub [ ebp + 0x50 ] 0x4
sub esi 0x4
cmp [ ebp + 0x38 ] 0x0
mov [ eax + ecx ] edi
mov [ ebp + 0x48 ] esi
jge r-xdata
sub [ ebp + 0x58 ] esi
inc [ ebp + 0x4c ]
jmp r-xdata
dec [ ebp + 0x58 ]
mov eax 0xffff
cmp [ ebp + 0x34 ] ax
jne r-xdata
mov eax edi
shl eax 0x10
cmp ebx eax
jb r-xdata
cmp [ ebp + 0x60 ] 0xffffffff
jne r-xdata
mov edi [ ebp + 0x40 ]
cmp [ ebp + 0x58 ] esi
ja r-xdata
mov ecx [ ebp + 0x58 ]
mov eax ebx
shl ecx 0x10
shr eax 0x10
add eax ecx
xor edx edx
lea ecx [ esi + 0x1 ]
div ecx
movzx edx ax
movzx edx [ ebp + 0x58 ]
jmp r-xdata
mov ecx eax
shl ecx 0x10
or esi 0xffffffff
sub ebx ecx
sub esi ecx
cmp ebx esi
jbe r-xdata
dec [ ebp + 0x58 ]
movzx eax dx
imul edi eax
imul eax esi
or ecx 0xffffffff
sub ebx edi
sub ecx edi
cmp ebx ecx
jbe r-xdata
mov ecx [ ebp + 0x58 ]
shr eax 0x10
sub ecx eax
dec [ ebp + 0x58 ]
sub ebx [ ebp + 0x60 ]
or eax 0xffffffff
sub eax [ ebp + 0x60 ]
cmp ebx eax
jbe r-xdata
jne r-xdata
inc edx
jmp r-xdata
dec ecx
movzx edi [ ebp + 0x4c ]
mov esi [ ebp + 0x48 ]
mov ebx [ ebp + 0x44 ]
movzx eax dx
shl edi 0x10
add edi eax
dec [ ebp + 0x60 ]
cmp ebx [ ebp + 0x60 ]
jb r-xdata
test ecx ecx
ja r-xdata
sub_10018b13
push ebp
mov ebp esp
sub esp 0x108
push [ ebp + 0x18 ]
lea eax [ ebp - 0x108 ]
push [ ebp + 0x14 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x10 ]
call sub_1001884d
add esp 0x14
leave
retn
sub_10018b3c
push ebp
mov ebp esp
sub esp 0x108
push [ ebp + 0x10 ]
lea eax [ ebp - 0x108 ]
push eax
mov eax [ ebp + 0xc ]
mov edx esi
call sub_1001870e
push esi
push [ ebp + 0x14 ]
lea eax [ esi + esi ]
push eax
lea eax [ ebp - 0x108 ]
push eax
push [ ebp + 0x8 ]
call sub_10018b13
add esp 0x1c
leave
retn
sub_10018b75
push ebp
lea ebp [ esp - 0x68 ]
sub esp 0x218
push esi
mov esi eax
push edi
mov edi ecx
mov ecx [ ebp + 0x74 ]
push esi
lea eax [ ebp - 0x1b0 ]
call sub_10018cbf
push [ ebp + 0x7c ]
lea eax [ ebp - 0x1b0 ]
push [ ebp + 0x74 ]
push eax
lea eax [ ebp - 0x12c ]
push eax
call sub_10018b3c
push [ ebp + 0x7c ]
lea eax [ ebp - 0x12c ]
push [ ebp + 0x74 ]
push eax
lea eax [ ebp - 0xa8 ]
push eax
call sub_10018b3c
push esi
lea eax [ ebp - 0x24 ]
call sub_100186b6
add esp 0x28
mov [ ebp - 0x24 ] 0x1
test edi edi
je r-xdata
dec edi
mov [ ebp + 0x60 ] edi
mov [ ebp + 0x64 ] edi
test edi edi
jl r-xdata
push [ ebp + 0x78 ]
mov eax edi
call sub_10018cd7
pop ecx
mov edi eax
mov eax [ ebp + 0x70 ]
push esi
lea ecx [ ebp - 0x24 ]
call sub_10018cbf
pop ecx
pop edi
pop esi
add ebp 0x68
leave
retn
push ebx
lea ebx [ ecx - 0x1 ]
shr ebx 0x1
inc ebx
mov eax 0xc0000000
test eax edi
jne r-xdata
shl edi 0x2
dec ebx
jne r-xdata
push [ ebp + 0x7c ]
imul eax eax 0x84
lea eax [ ebp + eax - 0x234 ]
push eax
lea eax [ ebp - 0x24 ]
push eax
push eax
call sub_10018b3c
add esp 0x10
shl edi 0x2
dec ecx
dec ecx
test eax edi
je r-xdata
push [ ebp + 0x7c ]
lea eax [ ebp - 0x24 ]
push eax
push eax
push eax
call sub_10018b3c
push [ ebp + 0x7c ]
lea eax [ ebp - 0x24 ]
push eax
push eax
push eax
call sub_10018b3c
mov eax edi
shr eax 0x1e
add esp 0x20
test eax eax
je r-xdata
dec [ ebp + 0x64 ]
jns r-xdata
test ecx ecx
jbe r-xdata
mov ecx [ ebp + 0x78 ]
mov eax [ ebp + 0x64 ]
mov edi [ ecx + eax * 4 ]
push 0x20
pop ecx
cmp eax [ ebp + 0x60 ]
jne r-xdata
pop ebx
sub_10018c8e
push esi
push edi
test ecx ecx
je r-xdata
xor eax eax
mov edi [ esp + 0xc ]
lea eax [ edx + ecx * 4 ]
sub edi edx
xor eax eax
inc eax
jmp r-xdata
jb r-xdata
pop edi
pop esi
retn
or eax 0xffffffff
jmp r-xdata
test ecx ecx
jne r-xdata
sub eax 0x4
mov edx [ edi + eax ]
mov esi [ eax ]
dec ecx
cmp edx esi
ja r-xdata
sub_10018ceb
push ebp
mov ebp esp
sub esp 0x14
push ebx
xor ebx ebx
push esi
mov esi [ ebp + 0x8 ]
cmp [ ebp + 0xc ] ebx
je r-xdata
pop esi
mov eax ebx
pop ebx
leave
retn
cmp ecx ebx
jbe r-xdata
sub eax edx
mov [ ebp - 0x4 ] edx
sub [ ebp - 0x4 ] esi
push edi
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] ecx
jmp r-xdata
mov ecx [ ebp - 0x4 ]
lea edi [ ecx + esi ]
lea ecx [ ebp - 0x10 ]
push ecx
lea ecx [ ebp - 0x14 ]
push ecx
push [ edi + eax ]
push [ ebp + 0xc ]
call sub_10018d65
mov edi [ edi ]
or eax 0xffffffff
sub edi ebx
sub eax ebx
add esp 0x10
cmp eax edi
mov eax [ ebp - 0x10 ]
sbb ebx ebx
mov [ esi ] edi
sub [ esi ] eax
mov ecx [ esi ]
or edx 0xffffffff
sub edx eax
neg ebx
cmp ecx edx
jbe r-xdata
add ebx [ ebp - 0x14 ]
add esi 0x4
dec [ ebp - 0x8 ]
jne r-xdata
inc ebx
mov eax [ ebp - 0xc ]
pop edi
sub_10018d65
push ebp
mov ebp esp
push ecx
movzx edx [ ebp + 0x8 ]
movzx eax [ ebp + 0xc ]
and [ ebp - 0x4 ] 0x0
push ebx
mov ebx [ ebp + 0x14 ]
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi [ ebp + 0xc ]
shr esi 0x10
shr edi 0x10
movzx esi si
movzx edi di
mov ecx edx
imul edx edi
imul ecx eax
mov [ ebp + 0xc ] esi
imul esi edi
imul eax [ ebp + 0xc ]
mov [ ebx ] ecx
mov ebx [ ebp + 0x10 ]
add eax edx
mov [ ebx ] esi
cmp eax edx
jae r-xdata
mov edi [ ebp + 0x14 ]
mov edx eax
shl edx 0x10
add ecx edx
shr eax 0x10
mov [ edi ] ecx
cmp ecx edx
jae r-xdata
mov [ ebp - 0x4 ] 0x10000
add esi eax
add esi [ ebp - 0x4 ]
pop edi
mov [ ebx ] esi
pop esi
pop ebx
leave
retn
inc [ ebp - 0x4 ]
sub_10018dd5
push ebp
mov ebp esp
mov edx [ ebp + 0xc ]
push ebx
push esi
mov esi eax
mov eax [ esi + 0x14 ]
lea ecx [ eax + edx * 8 ]
push edi
cmp ecx eax
jae r-xdata
mov [ esi + 0x14 ] ecx
mov ecx edx
shr ecx 0x1d
add [ esi + 0x18 ] ecx
shr eax 0x3
and eax 0x3f
je r-xdata
inc [ esi + 0x18 ]
cmp [ ebp + 0xc ] 0x40
jl r-xdata
push 0x40
pop edi
sub edi eax
cmp edx edi
lea ecx [ eax + esi + 0x1c ]
mov eax [ ebp + 0x8 ]
jge r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
add esi 0x1c
test ecx ecx
je r-xdata
mov ebx [ ebp + 0xc ]
shr ebx 0x6
mov eax ebx
imul eax eax 0xffffffc0
lea edi [ esi + 0x1c ]
sub edi [ ebp + 0x8 ]
add [ ebp + 0xc ] eax
mov edx edi
test edi edi
je r-xdata
mov esi edx
test edx edx
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
sub esi eax
mov dl [ eax ]
mov [ edi + eax ] dl
inc eax
dec ecx
jne r-xdata
lea eax [ esi + 0x1c ]
push 0x40
push eax
call sub_10018f7e
pop ecx
pop ecx
mov eax esi
call sub_10018fbc
add [ ebp + 0x8 ] 0x40
sub edi 0x40
dec ebx
jne r-xdata
lea eax [ esi + 0x1c ]
push 0x40
push eax
call sub_10018f7e
pop ecx
pop ecx
mov eax esi
call sub_10018fbc
add [ ebp + 0x8 ] edi
sub [ ebp + 0xc ] edi
sub ecx eax
sub ecx eax
mov dl [ eax ]
mov [ esi + eax ] dl
inc eax
dec ecx
jne r-xdata
mov eax [ ebp + 0x8 ]
push 0x40
pop ecx
mov bl [ eax ]
mov [ ecx + eax ] bl
inc eax
dec edx
jne r-xdata
mov dl [ eax ]
mov [ ecx + eax ] dl
inc eax
dec esi
jne r-xdata
jmp r-xdata
sub_10018eb9
push ebp
mov ebp esp
push ecx
mov eax [ esi + 0x18 ]
push ebx
mov [ ebp - 0x4 ] eax
push edi
mov edi [ esi + 0x14 ]
mov eax edi
shr eax 0x3
and eax 0x3f
mov [ eax + esi + 0x1c ] 0x80
inc eax
cmp eax 0x38
jle r-xdata
push 0x38
pop ecx
sub ecx eax
push ecx
lea eax [ eax + esi + 0x1c ]
call sub_100185ec
add esp 0x4
push 0x40
pop ecx
sub ecx eax
push ecx
lea eax [ eax + esi + 0x1c ]
call sub_100185ec
lea ebx [ esi + 0x1c ]
push 0x40
push ebx
call sub_10018f7e
mov eax esi
call sub_10018fbc
push 0x38
push 0x0
push ebx
call sub_10026630
add esp 0x18
jmp r-xdata
mov dl [ eax - 0x2 ]
mov [ ecx + 0x1 ] dl
mov dl [ eax - 0x1 ]
mov [ ecx ] dl
mov dl [ eax ]
mov [ ecx - 0x1 ] dl
mov dl [ eax + 0x1 ]
mov [ ecx - 0x2 ] dl
add eax 0x4
add ecx 0x4
dec edi
jne r-xdata
push 0x5c
push edi
push esi
call sub_10026630
add esp 0xc
pop edi
pop ebx
leave
retn
lea ebx [ esi + 0x1c ]
push 0x40
push ebx
call sub_10018f7e
mov eax [ ebp - 0x4 ]
mov [ esi + 0x54 ] eax
mov eax esi
mov [ esi + 0x58 ] edi
call sub_10018fbc
push 0x14
push ebx
call sub_10018f7e
mov ecx [ ebp + 0x8 ]
add esp 0x10
push 0x5
add ecx 0x2
lea eax [ esi + 0x2 ]
pop edi
sub_10018f7e
shr [ esp + 0x8 ] 0x2
xor edx edx
cmp [ esp + 0x8 ] edx
jle r-xdata
retn
push esi
push edi
mov eax [ esp + 0xc ]
lea ecx [ eax + edx * 4 ]
mov eax [ ecx ]
rol eax 0x10
mov esi eax
shr esi 0x8
mov edi eax
shl edi 0x8
xor esi edi
and esi 0xff00ff
shl eax 0x8
xor esi eax
inc edx
cmp edx [ esp + 0x10 ]
mov [ ecx ] esi
jl r-xdata
pop edi
pop esi
sub_10018fbc
sub esp 0x148
push ebx
push ebp
push esi
push edi
push 0x10
lea esi [ eax + 0x1c ]
pop ecx
lea edi [ esp + 0x10 ]
[ edi ] [ esi ]
mov edx [ esp + 0x14 ]
xor edx [ esp + 0x1c ]
mov ebx [ esp + 0x28 ]
xor ebx [ esp + 0x40 ]
xor edx [ esp + 0x34 ]
xor ebx [ esp + 0x20 ]
xor edx [ esp + 0x48 ]
mov esi [ esp + 0x20 ]
xor ebx edx
mov [ esp + 0x60 ] ebx
xor esi [ esp + 0x38 ]
mov ecx [ esp + 0x10 ]
xor esi [ esp + 0x4c ]
xor ecx [ esp + 0x18 ]
xor esi [ esp + 0x18 ]
mov ebx [ esp + 0x2c ]
xor ebx [ esp + 0x24 ]
mov edi [ esp + 0x24 ]
xor ebx esi
xor ebx [ esp + 0x44 ]
xor edi [ esp + 0x3c ]
xor ecx [ esp + 0x30 ]
xor edi [ esp + 0x1c ]
xor ecx [ esp + 0x44 ]
mov [ esp + 0x64 ] ebx
mov ebx [ esp + 0x28 ]
xor edi ecx
xor ebx edi
xor ebx [ esp + 0x48 ]
mov [ esp + 0x58 ] esi
xor ebx [ esp + 0x30 ]
mov [ esp + 0x5c ] edi
mov [ esp + 0x68 ] ebx
mov ebx [ esp + 0x2c ]
xor ebx [ esp + 0x60 ]
xor ebx [ esp + 0x4c ]
xor ebx [ esp + 0x34 ]
mov [ esp + 0x6c ] ebx
mov ebx [ esp + 0x64 ]
xor ebx [ esp + 0x38 ]
xor ebx ecx
xor ebx [ esp + 0x30 ]
mov [ esp + 0x70 ] ebx
mov ebx [ esp + 0x68 ]
xor ebx [ esp + 0x3c ]
xor ebx edx
xor ebx [ esp + 0x34 ]
mov [ esp + 0x74 ] ebx
mov ebx [ esp + 0x6c ]
xor ebx [ esp + 0x40 ]
xor ebx esi
xor ebx [ esp + 0x38 ]
mov [ esp + 0x78 ] ebx
mov ebx [ esp + 0x70 ]
xor ebx edi
xor ebx [ esp + 0x3c ]
xor ebx [ esp + 0x44 ]
mov [ esp + 0x7c ] ebx
mov ebx [ esp + 0x74 ]
xor ebx [ esp + 0x60 ]
xor ebx [ esp + 0x40 ]
xor ebx [ esp + 0x48 ]
mov [ esp + 0x80 ] ebx
mov ebx [ esp + 0x78 ]
xor ebx [ esp + 0x64 ]
xor ebx [ esp + 0x4c ]
xor ebx [ esp + 0x44 ]
mov [ esp + 0x84 ] ebx
mov ebx [ esp + 0x7c ]
xor ebx [ esp + 0x68 ]
xor ebx [ esp + 0x48 ]
xor ebx ecx
mov [ esp + 0x88 ] ebx
mov ebx [ esp + 0x80 ]
xor ebx [ esp + 0x6c ]
xor ebx [ esp + 0x4c ]
xor ebx edx
mov [ esp + 0x8c ] ebx
mov ebx [ esp + 0x84 ]
xor ebx [ esp + 0x70 ]
xor ebx esi
xor ebx ecx
mov [ esp + 0x90 ] ebx
mov ebx [ esp + 0x88 ]
xor ebx [ esp + 0x74 ]
xor ebx edi
xor ebx edx
mov [ esp + 0x94 ] ebx
mov ebx [ esp + 0x8c ]
xor ebx [ esp + 0x78 ]
xor ebx [ esp + 0x60 ]
xor ebx esi
mov esi [ esp + 0x90 ]
xor esi [ esp + 0x7c ]
mov [ esp + 0x98 ] ebx
xor esi [ esp + 0x64 ]
xor esi edi
mov edi [ esp + 0x94 ]
xor edi [ esp + 0x80 ]
mov [ esp + 0x9c ] esi
xor edi [ esp + 0x68 ]
xor edi [ esp + 0x60 ]
mov [ esp + 0xa0 ] edi
mov edi ebx
xor edi [ esp + 0x84 ]
xor edi [ esp + 0x6c ]
xor edi [ esp + 0x64 ]
mov [ esp + 0xa4 ] edi
mov edi esi
xor edi [ esp + 0x88 ]
xor edi [ esp + 0x70 ]
xor edi [ esp + 0x68 ]
mov [ esp + 0xa8 ] edi
mov edi [ esp + 0xa0 ]
xor edi [ esp + 0x8c ]
xor edi [ esp + 0x74 ]
xor edi [ esp + 0x6c ]
mov [ esp + 0xac ] edi
mov edi [ esp + 0xa4 ]
xor edi [ esp + 0x90 ]
xor edi [ esp + 0x78 ]
xor edi [ esp + 0x70 ]
mov [ esp + 0xb0 ] edi
mov edi [ esp + 0xa8 ]
xor edi [ esp + 0x94 ]
xor edi [ esp + 0x7c ]
xor edi [ esp + 0x74 ]
mov [ esp + 0xb4 ] edi
mov edi [ esp + 0xac ]
xor edi ebx
xor edi [ esp + 0x80 ]
xor edi [ esp + 0x78 ]
mov [ esp + 0xb8 ] edi
mov edi [ esp + 0xb0 ]
xor edi esi
xor edi [ esp + 0x84 ]
xor edi [ esp + 0x7c ]
mov [ esp + 0xbc ] edi
mov edi [ esp + 0xb4 ]
xor edi [ esp + 0xa0 ]
xor edi [ esp + 0x88 ]
xor edi [ esp + 0x80 ]
mov [ esp + 0xc0 ] edi
mov edi [ esp + 0xb8 ]
xor edi [ esp + 0xa4 ]
xor edi [ esp + 0x8c ]
xor edi [ esp + 0x84 ]
mov [ esp + 0xc4 ] edi
mov edi [ esp + 0xbc ]
xor edi [ esp + 0xa8 ]
xor edi [ esp + 0x90 ]
xor edi [ esp + 0x88 ]
mov [ esp + 0xc8 ] edi
mov edi [ esp + 0xc0 ]
xor edi [ esp + 0xac ]
xor edi [ esp + 0x94 ]
xor edi [ esp + 0x8c ]
mov [ esp + 0xcc ] edi
mov edi [ esp + 0xc4 ]
xor edi [ esp + 0xb0 ]
xor edi ebx
xor edi [ esp + 0x90 ]
mov [ esp + 0xd0 ] edi
mov edi [ esp + 0xc8 ]
xor edi [ esp + 0xb4 ]
xor edi esi
xor edi [ esp + 0x94 ]
mov [ esp + 0xd4 ] edi
mov edi [ esp + 0xcc ]
xor edi [ esp + 0xb8 ]
xor edi [ esp + 0xa0 ]
xor edi ebx
mov ebx [ esp + 0xd0 ]
xor ebx [ esp + 0xbc ]
mov [ esp + 0xd8 ] edi
xor ebx [ esp + 0xa4 ]
xor ebx esi
mov esi [ esp + 0xd4 ]
xor esi [ esp + 0xc0 ]
mov [ esp + 0xdc ] ebx
xor esi [ esp + 0xa8 ]
xor esi [ esp + 0xa0 ]
mov [ esp + 0xe0 ] esi
mov esi edi
xor esi [ esp + 0xc4 ]
xor esi [ esp + 0xac ]
xor esi [ esp + 0xa4 ]
mov [ esp + 0xe4 ] esi
mov esi ebx
xor esi [ esp + 0xc8 ]
xor esi [ esp + 0xb0 ]
xor esi [ esp + 0xa8 ]
mov [ esp + 0xe8 ] esi
mov esi [ esp + 0xe0 ]
xor esi [ esp + 0xcc ]
xor esi [ esp + 0xb4 ]
xor esi [ esp + 0xac ]
mov [ esp + 0xec ] esi
mov esi [ esp + 0xe4 ]
xor esi [ esp + 0xd0 ]
xor esi [ esp + 0xb8 ]
xor esi [ esp + 0xb0 ]
mov [ esp + 0xf0 ] esi
mov esi [ esp + 0xe8 ]
xor esi [ esp + 0xd4 ]
xor esi [ esp + 0xbc ]
xor esi [ esp + 0xb4 ]
mov [ esp + 0xf4 ] esi
mov esi [ esp + 0xec ]
xor esi edi
xor esi [ esp + 0xc0 ]
xor esi [ esp + 0xb8 ]
mov [ esp + 0xf8 ] esi
mov esi [ esp + 0xf0 ]
xor esi ebx
xor esi [ esp + 0xc4 ]
xor esi [ esp + 0xbc ]
mov [ esp + 0xfc ] esi
mov esi [ esp + 0xf4 ]
xor esi [ esp + 0xe0 ]
xor esi [ esp + 0xc8 ]
xor esi [ esp + 0xc0 ]
mov [ esp + 0x100 ] esi
mov esi [ esp + 0xf8 ]
xor esi [ esp + 0xe4 ]
xor esi [ esp + 0xcc ]
xor esi [ esp + 0xc4 ]
mov [ esp + 0x104 ] esi
mov esi [ esp + 0xfc ]
xor esi [ esp + 0xe8 ]
xor esi [ esp + 0xd0 ]
xor esi [ esp + 0xc8 ]
mov [ esp + 0x108 ] esi
mov esi [ esp + 0x100 ]
xor esi [ esp + 0xec ]
xor esi [ esp + 0xd4 ]
xor esi [ esp + 0xcc ]
mov [ esp + 0x10c ] esi
mov esi [ esp + 0x104 ]
xor esi [ esp + 0xf0 ]
xor esi edi
xor esi [ esp + 0xd0 ]
mov [ esp + 0x110 ] esi
mov esi [ esp + 0x108 ]
xor esi [ esp + 0xf4 ]
xor esi ebx
xor esi [ esp + 0xd4 ]
mov [ esp + 0x114 ] esi
mov esi [ esp + 0x10c ]
xor esi [ esp + 0xf8 ]
xor esi [ esp + 0xe0 ]
xor esi edi
mov edi [ esp + 0x110 ]
xor edi [ esp + 0xfc ]
mov [ esp + 0x118 ] esi
xor edi [ esp + 0xe4 ]
xor edi ebx
mov ebx [ esp + 0x114 ]
xor ebx [ esp + 0x100 ]
mov [ esp + 0x11c ] edi
xor ebx [ esp + 0xe8 ]
xor ebx [ esp + 0xe0 ]
mov [ esp + 0x120 ] ebx
mov ebx esi
xor ebx [ esp + 0x104 ]
xor ebx [ esp + 0xec ]
xor ebx [ esp + 0xe4 ]
mov [ esp + 0x124 ] ebx
mov ebx edi
xor ebx [ esp + 0x108 ]
xor ebx [ esp + 0xf0 ]
xor ebx [ esp + 0xe8 ]
mov [ esp + 0x128 ] ebx
mov ebx [ esp + 0x120 ]
xor ebx [ esp + 0x10c ]
xor ebx [ esp + 0xf4 ]
xor ebx [ esp + 0xec ]
mov [ esp + 0x12c ] ebx
mov ebx [ esp + 0x124 ]
xor ebx [ esp + 0x110 ]
mov ebp [ esp + 0x12c ]
xor ebx [ esp + 0xf8 ]
xor ebp esi
xor ebx [ esp + 0xf0 ]
xor ebp [ esp + 0x100 ]
mov [ esp + 0x130 ] ebx
mov ebx [ esp + 0x128 ]
xor ebx [ esp + 0x114 ]
mov esi [ esp + 0x130 ]
xor ebx [ esp + 0xfc ]
xor ebp [ esp + 0xf8 ]
xor ebx [ esp + 0xf4 ]
xor esi edi
xor esi [ esp + 0x104 ]
mov [ esp + 0x134 ] ebx
xor ebx [ esp + 0x120 ]
xor esi [ esp + 0xfc ]
xor ebx [ esp + 0x108 ]
mov [ esp + 0x13c ] esi
xor ebx [ esp + 0x100 ]
xor esi [ esp + 0x128 ]
mov [ esp + 0x138 ] ebp
xor ebp [ esp + 0x124 ]
xor esi [ esp + 0x110 ]
xor ebp [ esp + 0x10c ]
xor esi [ esp + 0x108 ]
xor ebp [ esp + 0x104 ]
mov [ esp + 0x140 ] ebx
xor ebx [ esp + 0x12c ]
mov [ esp + 0x148 ] esi
xor ebx [ esp + 0x114 ]
mov esi [ eax ]
xor ebx [ esp + 0x10c ]
mov [ esp + 0x144 ] ebp
mov [ esp + 0x14c ] ebx
mov ebx [ eax + 0x4 ]
mov edi [ eax + 0xc ]
rol esi 0x5
add esi [ eax + 0x10 ]
mov ebp ebx
not ebp
and ebp edi
mov edi [ eax + 0x8 ]
and edi ebx
or ebp edi
add ebp esi
mov esi [ esp + 0x10 ]
lea edi [ esi + ebp + 0x5a827999 ]
mov esi [ eax + 0xc ]
mov ebp [ eax + 0x8 ]
mov [ rw-data ] edi
ror ebx 0x2
rol edi 0x5
mov [ esp + 0x154 ] edi
mov [ rw-data ] esi
mov esi [ eax ]
mov edi esi
not edi
and edi ebp
mov ebp ebx
and ebp esi
or edi ebp
mov ebp edi
mov edi [ esp + 0x154 ]
add edi [ rw-data ]
add ebp edi
mov edi [ esp + 0x14 ]
lea ebp [ edi + ebp + 0x5a827999 ]
mov edi [ eax + 0x8 ]
ror esi 0x2
mov [ rw-data ] edi
mov edi [ rw-data ]
mov [ rw-data ] esi
mov esi edi
mov [ rw-data ] ebx
not esi
and esi ebx
mov ebx [ rw-data ]
and ebx edi
or esi ebx
mov ebx [ esp + 0x18 ]
mov [ rw-data ] ebp
rol ebp 0x5
add ebp [ rw-data ]
add esi ebp
mov ebp [ rw-data ]
lea ebx [ esi + ebx + 0x5a827999 ]
mov esi [ rw-data ]
ror edi 0x2
mov [ rw-data ] edi
mov [ rw-data ] esi
mov esi [ rw-data ]
mov edi esi
not edi
and edi ebp
mov [ rw-data ] ebx
mov [ rw-data ] ebp
mov ebp [ rw-data ]
rol ebx 0x5
add ebx [ rw-data ]
and ebp esi
or edi ebp
mov ebp [ rw-data ]
add edi ebx
mov ebx [ esp + 0x1c ]
lea ebx [ edi + ebx + 0x5a827999 ]
mov edi [ rw-data ]
ror esi 0x2
mov [ rw-data ] edi
mov edi [ rw-data ]
mov [ rw-data ] esi
mov [ rw-data ] ebx
mov [ rw-data ] ebp
rol ebx 0x5
mov esi edi
add ebx [ rw-data ]
not esi
and esi ebp
mov ebp [ rw-data ]
and ebp edi
or esi ebp
add esi ebx
mov ebx [ esp + 0x20 ]
mov ebp [ rw-data ]
lea ebx [ esi + ebx + 0x5a827999 ]
mov esi [ rw-data ]
ror edi 0x2
mov [ rw-data ] esi
mov esi [ rw-data ]
mov [ rw-data ] edi
mov edi esi
not edi
and edi ebp
mov [ rw-data ] ebx
rol ebx 0x5
add ebx [ rw-data ]
mov [ rw-data ] ebp
mov ebp [ rw-data ]
and ebp esi
or edi ebp
mov ebp [ rw-data ]
add edi ebx
mov ebx [ esp + 0x24 ]
lea ebx [ edi + ebx + 0x5a827999 ]
mov edi [ rw-data ]
ror esi 0x2
mov [ rw-data ] esi
mov [ rw-data ] edi
mov edi [ rw-data ]
mov esi edi
not esi
and esi ebp
mov [ rw-data ] ebp
mov ebp [ rw-data ]
and ebp edi
or esi ebp
mov ebp [ rw-data ]
mov [ rw-data ] ebx
rol ebx 0x5
add ebx [ rw-data ]
add esi ebx
mov ebx [ esp + 0x28 ]
lea ebx [ esi + ebx + 0x5a827999 ]
mov esi [ rw-data ]
ror edi 0x2
mov [ rw-data ] esi
mov esi [ rw-data ]
mov [ rw-data ] edi
mov edi esi
mov [ rw-data ] ebp
not edi
and edi ebp
mov ebp [ rw-data ]
and ebp esi
mov [ rw-data ] ebx
rol ebx 0x5
add ebx [ rw-data ]
or edi ebp
mov ebp [ rw-data ]
add edi ebx
mov ebx [ esp + 0x2c ]
lea ebx [ edi + ebx + 0x5a827999 ]
mov edi [ rw-data ]
ror esi 0x2
mov [ rw-data ] esi
mov [ rw-data ] edi
mov edi [ rw-data ]
mov esi edi
not esi
and esi ebp
mov [ rw-data ] ebp
mov ebp [ rw-data ]
mov [ rw-data ] ebx
and ebp edi
rol ebx 0x5
or esi ebp
add ebx [ rw-data ]
mov ebp [ rw-data ]
add esi ebx
mov ebx [ esp + 0x30 ]
lea ebx [ esi + ebx + 0x5a827999 ]
mov esi [ rw-data ]
ror edi 0x2
mov [ rw-data ] esi
mov esi [ rw-data ]
mov [ rw-data ] edi
mov edi esi
mov [ rw-data ] ebx
rol ebx 0x5
add ebx [ rw-data ]
not edi
and edi ebp
mov [ rw-data ] ebp
mov ebp [ rw-data ]
and ebp esi
or edi ebp
mov ebp [ rw-data ]
add edi ebx
mov ebx [ esp + 0x34 ]
lea ebx [ edi + ebx + 0x5a827999 ]
mov edi [ rw-data ]
ror esi 0x2
mov [ rw-data ] esi
mov [ rw-data ] edi
mov edi [ rw-data ]
mov [ rw-data ] ebx
mov esi edi
not esi
and esi ebp
rol ebx 0x5
add ebx [ rw-data ]
mov [ rw-data ] ebp
mov ebp [ rw-data ]
and ebp edi
or esi ebp
mov ebp [ rw-data ]
add esi ebx
mov ebx [ esp + 0x38 ]
lea ebx [ esi + ebx + 0x5a827999 ]
mov esi [ rw-data ]
ror edi 0x2
mov [ rw-data ] esi
mov esi [ rw-data ]
mov [ rw-data ] edi
mov edi esi
mov [ rw-data ] ebx
mov [ rw-data ] ebp
rol ebx 0x5
add ebx [ rw-data ]
not edi
and edi ebp
mov ebp [ rw-data ]
and ebp esi
or edi ebp
mov ebp [ rw-data ]
add edi ebx
mov ebx [ esp + 0x3c ]
lea ebx [ edi + ebx + 0x5a827999 ]
mov edi [ rw-data ]
ror esi 0x2
mov [ rw-data ] esi
mov [ rw-data ] edi
mov edi [ rw-data ]
mov esi edi
not esi
and esi ebp
mov [ rw-data ] ebp
mov ebp [ rw-data ]
mov [ rw-data ] ebx
rol ebx 0x5
add ebx [ rw-data ]
and ebp edi
or esi ebp
add esi ebx
mov ebx [ esp + 0x40 ]
lea ebx [ esi + ebx + 0x5a827999 ]
mov esi [ rw-data ]
mov ebp [ rw-data ]
ror edi 0x2
mov [ rw-data ] esi
mov esi [ rw-data ]
mov [ rw-data ] edi
mov edi esi
mov [ rw-data ] ebx
rol ebx 0x5
add ebx [ rw-data ]
not edi
and edi ebp
mov [ rw-data ] ebp
mov ebp [ rw-data ]
and ebp esi
or edi ebp
mov ebp [ rw-data ]
add edi ebx
mov ebx [ esp + 0x44 ]
lea ebx [ edi + ebx + 0x5a827999 ]
mov edi [ rw-data ]
ror esi 0x2
mov [ rw-data ] esi
mov [ rw-data ] edi
mov edi [ rw-data ]
mov esi edi
not esi
and esi ebp
mov [ rw-data ] ebx
rol ebx 0x5
add ebx [ rw-data ]
mov [ rw-data ] ebp
mov ebp [ rw-data ]
and ebp edi
or esi ebp
mov ebp [ rw-data ]
add esi ebx
mov ebx [ esp + 0x48 ]
lea ebx [ esi + ebx + 0x5a827999 ]
mov esi [ rw-data ]
ror edi 0x2
mov [ rw-data ] esi
mov esi [ rw-data ]
mov [ rw-data ] edi
mov edi esi
mov [ rw-data ] ebx
not edi
and edi ebp
mov [ rw-data ] ebp
mov ebp [ rw-data ]
and ebp esi
rol ebx 0x5
add ebx [ rw-data ]
or edi ebp
mov ebp [ rw-data ]
add edi ebx
mov ebx [ esp + 0x4c ]
lea ebx [ edi + ebx + 0x5a827999 ]
mov edi [ rw-data ]
ror esi 0x2
mov [ rw-data ] esi
mov [ rw-data ] edi
mov edi [ rw-data ]
mov esi edi
not esi
and esi ebp
mov [ rw-data ] ebx
mov [ rw-data ] ebp
mov ebp [ rw-data ]
rol ebx 0x5
add ebx [ rw-data ]
and ebp edi
or esi ebp
add esi ebx
mov ebx [ rw-data ]
lea ecx [ esi + ecx + 0x5a827999 ]
mov esi [ rw-data ]
mov [ rw-data ] esi
mov esi [ rw-data ]
ror edi 0x2
mov [ rw-data ] edi
mov [ rw-data ] ecx
and edi esi
mov ebp esi
rol ecx 0x5
add ecx [ rw-data ]
not ebp
and ebp ebx
or ebp edi
add ebp ecx
mov ecx [ rw-data ]
ror esi 0x2
lea edx [ edx + ebp + 0x5a827999 ]
mov ebp [ rw-data ]
mov [ rw-data ] ebx
mov ebx esi
and ebx ecx
mov [ rw-data ] edx
rol edx 0x5
add edx [ rw-data ]
mov edi ecx
not edi
and edi ebp
or edi ebx
add edi edx
mov edx [ esp + 0x58 ]
mov ebx esi
lea edi [ edi + edx + 0x5a827999 ]
mov edx [ rw-data ]
ror ecx 0x2
mov [ rw-data ] edi
rol edi 0x5
mov [ rw-data ] ebp
add edi [ rw-data ]
mov esi edx
not esi
and esi ebx
mov ebp ecx
and ebp edx
or esi ebp
add esi edi
mov edi [ esp + 0x5c ]
lea esi [ esi + edi + 0x5a827999 ]
mov ebp esi
mov [ rw-data ] ebx
ror edx 0x2
rol esi 0x5
add esi [ rw-data ]
mov edi ecx
mov ecx [ rw-data ]
mov ebx edi
xor ebx edx
xor ebx ecx
add ebx esi
mov esi [ esp + 0x60 ]
lea esi [ ebx + esi + 0x6ed9eba1 ]
mov [ rw-data ] edi
mov ebx edx
ror ecx 0x2
mov edx ebp
mov ebp esi
rol esi 0x5
add esi [ rw-data ]
mov edi ebx
xor edi ecx
xor edi edx
add edi esi
mov esi [ esp + 0x64 ]
lea esi [ edi + esi + 0x6ed9eba1 ]
mov [ rw-data ] ebx
mov edi ecx
ror edx 0x2
mov ecx ebp
mov ebp esi
rol esi 0x5
add esi [ rw-data ]
mov ebx edi
xor ebx edx
xor ebx ecx
add ebx esi
mov esi [ esp + 0x68 ]
lea esi [ ebx + esi + 0x6ed9eba1 ]
mov [ rw-data ] edi
ror ecx 0x2
mov ebx edx
mov edx ebp
mov ebp esi
rol esi 0x5
add esi [ rw-data ]
mov edi ebx
xor edi ecx
xor edi edx
add edi esi
mov esi [ esp + 0x6c ]
lea esi [ edi + esi + 0x6ed9eba1 ]
ror edx 0x2
mov [ rw-data ] ebx
mov edi ecx
mov ecx ebp
mov ebp esi
rol esi 0x5
add esi [ rw-data ]
mov ebx edi
xor ebx edx
xor ebx ecx
add ebx esi
mov esi [ esp + 0x70 ]
lea esi [ ebx + esi + 0x6ed9eba1 ]
mov [ rw-data ] edi
ror ecx 0x2
mov ebx edx
mov edx ebp
mov ebp esi
rol esi 0x5
add esi [ rw-data ]
mov edi ebx
xor edi ecx
xor edi edx
add edi esi
mov esi [ esp + 0x74 ]
lea esi [ edi + esi + 0x6ed9eba1 ]
ror edx 0x2
mov [ rw-data ] ebx
mov edi ecx
mov ecx ebp
mov ebp esi
rol esi 0x5
add esi [ rw-data ]
mov ebx edi
xor ebx edx
xor ebx ecx
add ebx esi
mov esi [ esp + 0x78 ]
lea esi [ ebx + esi + 0x6ed9eba1 ]
mov ebx edx
mov edx ebp
mov ebp esi
ror ecx 0x2
rol esi 0x5
mov [ rw-data ] edi
add esi [ rw-data ]
mov edi ebx
xor edi ecx
xor edi edx
add edi esi
mov esi [ esp + 0x7c ]
lea esi [ edi + esi + 0x6ed9eba1 ]
ror edx 0x2
mov [ rw-data ] esi
mov edi ecx
mov ecx ebp
rol esi 0x5
add esi [ esp + 0x80 ]
mov ebp edi
xor ebp edx
xor ebp ecx
add ebp esi
lea esi [ ebx + ebp + 0x6ed9eba1 ]
mov ebx edx
mov edx [ rw-data ]
ror ecx 0x2
mov [ rw-data ] esi
rol esi 0x5
mov ebp ebx
add esi [ esp + 0x84 ]
xor ebp ecx
xor ebp edx
add ebp esi
lea esi [ edi + ebp + 0x6ed9eba1 ]
ror edx 0x2
mov edi ecx
mov ecx [ rw-data ]
mov [ rw-data ] esi
rol esi 0x5
add esi [ esp + 0x88 ]
mov ebp edi
xor ebp edx
xor ebp ecx
add ebp esi
lea esi [ ebx + ebp + 0x6ed9eba1 ]
ror ecx 0x2
mov ebx edx
mov edx [ rw-data ]
mov [ rw-data ] esi
rol esi 0x5
add esi [ esp + 0x8c ]
mov ebp ebx
xor ebp ecx
xor ebp edx
add ebp esi
lea esi [ edi + ebp + 0x6ed9eba1 ]
ror edx 0x2
mov edi ecx
mov ecx [ rw-data ]
mov [ rw-data ] esi
rol esi 0x5
add esi [ esp + 0x90 ]
mov ebp edi
xor ebp edx
xor ebp ecx
add ebp esi
lea esi [ ebx + ebp + 0x6ed9eba1 ]
ror ecx 0x2
mov ebx edx
mov edx [ rw-data ]
mov [ rw-data ] esi
rol esi 0x5
add esi [ esp + 0x94 ]
mov ebp ebx
xor ebp ecx
xor ebp edx
add ebp esi
lea esi [ edi + ebp + 0x6ed9eba1 ]
ror edx 0x2
mov edi ecx
mov ecx [ rw-data ]
mov [ rw-data ] esi
rol esi 0x5
add esi [ esp + 0x98 ]
mov ebp edi
xor ebp edx
xor ebp ecx
add ebp esi
lea esi [ ebx + ebp + 0x6ed9eba1 ]
ror ecx 0x2
mov ebx edx
mov edx [ rw-data ]
mov [ rw-data ] esi
rol esi 0x5
add esi [ esp + 0x9c ]
mov ebp ebx
xor ebp ecx
xor ebp edx
add ebp esi
lea esi [ edi + ebp + 0x6ed9eba1 ]
mov edi ecx
mov ecx [ rw-data ]
ror edx 0x2
mov [ rw-data ] esi
rol esi 0x5
add esi [ esp + 0xa0 ]
mov ebp edi
xor ebp edx
xor ebp ecx
add ebp esi
lea esi [ ebx + ebp + 0x6ed9eba1 ]
ror ecx 0x2
mov ebx edx
mov edx [ rw-data ]
mov [ rw-data ] esi
rol esi 0x5
add esi [ esp + 0xa4 ]
mov ebp ebx
xor ebp ecx
xor ebp edx
add ebp esi
lea esi [ edi + ebp + 0x6ed9eba1 ]
ror edx 0x2
mov edi ecx
mov ecx [ rw-data ]
mov [ rw-data ] esi
rol esi 0x5
add esi [ esp + 0xa8 ]
mov ebp edi
xor ebp edx
xor ebp ecx
add ebp esi
lea esi [ ebx + ebp + 0x6ed9eba1 ]
ror ecx 0x2
mov ebx edx
mov edx [ rw-data ]
mov [ rw-data ] esi
rol esi 0x5
add esi [ esp + 0xac ]
mov ebp ebx
xor ebp ecx
xor ebp edx
add ebp esi
lea esi [ edi + ebp + 0x6ed9eba1 ]
mov [ rw-data ] ebx
ror edx 0x2
mov edi ecx
mov ecx [ rw-data ]
mov [ rw-data ] esi
rol esi 0x5
add esi [ rw-data ]
mov ebx edx
or ebx ecx
and ebx edi
mov ebp edx
and ebp ecx
or ebx ebp
add ebx [ esp + 0xb0 ]
ror ecx 0x2
lea esi [ ebx + esi - 0x70e44324 ]
mov [ rw-data ] edi
mov ebx edx
mov edx [ rw-data ]
mov [ rw-data ] esi
mov edi ecx
or edi edx
and edi ebx
rol esi 0x5
add esi [ rw-data ]
mov ebp ecx
and ebp edx
or edi ebp
add edi [ esp + 0xb4 ]
mov [ rw-data ] ebx
lea esi [ edi + esi - 0x70e44324 ]
ror edx 0x2
mov edi ecx
mov ecx [ rw-data ]
mov ebx edx
or ebx ecx
and ebx edi
mov ebp edx
and ebp ecx
mov [ rw-data ] esi
or ebx ebp
add ebx [ esp + 0xb8 ]
rol esi 0x5
add esi [ rw-data ]
mov [ rw-data ] edi
lea esi [ ebx + esi - 0x70e44324 ]
mov ebx edx
mov edx [ rw-data ]
ror ecx 0x2
mov [ rw-data ] esi
rol esi 0x5
add esi [ rw-data ]
mov edi ecx
or edi edx
and edi ebx
mov ebp ecx
and ebp edx
or edi ebp
add edi [ esp + 0xbc ]
mov [ rw-data ] ebx
lea esi [ edi + esi - 0x70e44324 ]
ror edx 0x2
mov edi ecx
mov ecx [ rw-data ]
mov [ rw-data ] esi
rol esi 0x5
add esi [ rw-data ]
mov ebx edx
or ebx ecx
and ebx edi
mov ebp edx
and ebp ecx
or ebx ebp
add ebx [ esp + 0xc0 ]
mov [ rw-data ] edi
lea esi [ ebx + esi - 0x70e44324 ]
ror ecx 0x2
mov ebx edx
mov edx [ rw-data ]
mov [ rw-data ] esi
rol esi 0x5
add esi [ rw-data ]
mov edi ecx
or edi edx
and edi ebx
mov ebp ecx
and ebp edx
or edi ebp
add edi [ esp + 0xc4 ]
ror edx 0x2
lea esi [ edi + esi - 0x70e44324 ]
mov [ rw-data ] ebx
mov edi ecx
mov ecx [ rw-data ]
mov [ rw-data ] esi
rol esi 0x5
add esi [ rw-data ]
mov ebx edx
or ebx ecx
and ebx edi
mov ebp edx
and ebp ecx
or ebx ebp
add ebx [ esp + 0xc8 ]
ror ecx 0x2
lea esi [ ebx + esi - 0x70e44324 ]
mov [ rw-data ] edi
mov ebx edx
mov edx [ rw-data ]
mov edi ecx
or edi edx
and edi ebx
mov [ rw-data ] esi
mov ebp ecx
and ebp edx
rol esi 0x5
add esi [ rw-data ]
or edi ebp
add edi [ esp + 0xcc ]
ror edx 0x2
lea esi [ edi + esi - 0x70e44324 ]
mov [ rw-data ] ebx
mov edi ecx
mov ecx [ rw-data ]
mov [ rw-data ] esi
mov ebx edx
rol esi 0x5
or ebx ecx
add esi [ rw-data ]
and ebx edi
mov [ rw-data ] edi
mov ebp edx
and ebp ecx
or ebx ebp
add ebx [ esp + 0xd0 ]
ror ecx 0x2
lea esi [ ebx + esi - 0x70e44324 ]
mov ebx edx
mov edx [ rw-data ]
mov [ rw-data ] esi
rol esi 0x5
add esi [ rw-data ]
mov edi ecx
or edi edx
and edi ebx
mov ebp ecx
and ebp edx
or edi ebp
add edi [ esp + 0xd4 ]
mov [ rw-data ] ebx
lea esi [ edi + esi - 0x70e44324 ]
ror edx 0x2
mov edi ecx
mov ecx [ rw-data ]
mov [ rw-data ] esi
rol esi 0x5
add esi [ rw-data ]
mov ebx edx
or ebx ecx
and ebx edi
mov ebp edx
and ebp ecx
or ebx ebp
add ebx [ esp + 0xd8 ]
mov [ rw-data ] edi
lea esi [ ebx + esi - 0x70e44324 ]
ror ecx 0x2
mov ebx edx
mov edx [ rw-data ]
mov [ rw-data ] esi
rol esi 0x5
add esi [ rw-data ]
mov edi ecx
or edi edx
and edi ebx
mov ebp ecx
and ebp edx
or edi ebp
add edi [ esp + 0xdc ]
ror edx 0x2
lea esi [ edi + esi - 0x70e44324 ]
mov [ rw-data ] ebx
mov edi ecx
mov ecx [ rw-data ]
mov [ rw-data ] esi
mov ebx edx
or ebx ecx
and ebx edi
mov ebp edx
and ebp ecx
or ebx ebp
add ebx [ esp + 0xe0 ]
rol esi 0x5
add esi [ rw-data ]
mov [ rw-data ] edi
lea esi [ ebx + esi - 0x70e44324 ]
ror ecx 0x2
mov ebx edx
mov edx [ rw-data ]
mov edi ecx
or edi edx
and edi ebx
mov ebp ecx
and ebp edx
mov [ rw-data ] esi
or edi ebp
add edi [ esp + 0xe4 ]
rol esi 0x5
add esi [ rw-data ]
lea esi [ edi + esi - 0x70e44324 ]
mov [ rw-data ] ebx
ror edx 0x2
mov edi ecx
mov ecx [ rw-data ]
mov [ rw-data ] esi
rol esi 0x5
add esi [ rw-data ]
mov ebx edx
or ebx ecx
and ebx edi
mov ebp edx
and ebp ecx
or ebx ebp
add ebx [ esp + 0xe8 ]
mov [ rw-data ] edi
lea esi [ ebx + esi - 0x70e44324 ]
ror ecx 0x2
mov ebx edx
mov edx [ rw-data ]
mov [ rw-data ] esi
rol esi 0x5
add esi [ rw-data ]
mov edi ecx
or edi edx
and edi ebx
mov ebp ecx
and ebp edx
or edi ebp
add edi [ esp + 0xec ]
mov [ rw-data ] ebx
lea esi [ edi + esi - 0x70e44324 ]
ror edx 0x2
mov edi ecx
mov ecx [ rw-data ]
mov [ rw-data ] esi
rol esi 0x5
add esi [ rw-data ]
mov ebx edx
or ebx ecx
and ebx edi
mov ebp edx
and ebp ecx
or ebx ebp
add ebx [ esp + 0xf0 ]
ror ecx 0x2
lea esi [ ebx + esi - 0x70e44324 ]
mov [ rw-data ] edi
mov ebx edx
mov edx [ rw-data ]
mov [ rw-data ] esi
mov edi ecx
or edi edx
and edi ebx
rol esi 0x5
add esi [ rw-data ]
mov ebp ecx
and ebp edx
or edi ebp
add edi [ esp + 0xf4 ]
mov [ rw-data ] ebx
ror edx 0x2
lea esi [ edi + esi - 0x70e44324 ]
mov edi ecx
mov ecx [ rw-data ]
mov ebx edx
or ebx ecx
mov [ rw-data ] esi
and ebx edi
mov ebp edx
and ebp ecx
rol esi 0x5
add esi [ rw-data ]
or ebx ebp
add ebx [ esp + 0xf8 ]
mov [ rw-data ] edi
lea esi [ ebx + esi - 0x70e44324 ]
mov ebx edx
mov edx [ rw-data ]
ror ecx 0x2
mov [ rw-data ] esi
rol esi 0x5
add esi [ rw-data ]
mov edi ecx
or edi edx
and edi ebx
mov ebp ecx
and ebp edx
or edi ebp
add edi [ esp + 0xfc ]
mov [ rw-data ] ebx
lea esi [ edi + esi - 0x70e44324 ]
ror edx 0x2
mov ebp esi
rol esi 0x5
add esi [ rw-data ]
mov edi ecx
mov ecx [ rw-data ]
mov ebx edi
xor ebx edx
xor ebx ecx
add ebx [ esp + 0x100 ]
mov [ rw-data ] edi
lea esi [ ebx + esi - 0x359d3e2a ]
ror ecx 0x2
mov ebx edx
mov edi ebx
xor edi ecx
mov edx ebp
xor edi edx
add edi [ esp + 0x104 ]
mov ebp esi
rol esi 0x5
add esi [ rw-data ]
mov [ rw-data ] ebx
lea esi [ edi + esi - 0x359d3e2a ]
ror edx 0x2
mov edi ecx
mov ebx edi
xor ebx edx
mov ecx ebp
xor ebx ecx
add ebx [ esp + 0x108 ]
mov ebp esi
rol esi 0x5
add esi [ rw-data ]
mov [ rw-data ] edi
lea esi [ ebx + esi - 0x359d3e2a ]
ror ecx 0x2
mov ebx edx
mov edi ebx
xor edi ecx
mov edx ebp
xor edi edx
add edi [ esp + 0x10c ]
mov ebp esi
rol esi 0x5
add esi [ rw-data ]
mov [ rw-data ] ebx
lea esi [ edi + esi - 0x359d3e2a ]
mov edi ecx
ror edx 0x2
mov ebx edi
xor ebx edx
mov ecx ebp
mov ebp esi
rol esi 0x5
add esi [ rw-data ]
xor ebx ecx
add ebx [ esp + 0x110 ]
mov [ rw-data ] edi
lea esi [ ebx + esi - 0x359d3e2a ]
mov ebx edx
ror ecx 0x2
mov edi ebx
xor edi ecx
mov edx ebp
mov ebp esi
xor edi edx
add edi [ esp + 0x114 ]
rol esi 0x5
add esi [ rw-data ]
lea esi [ edi + esi - 0x359d3e2a ]
mov [ rw-data ] ebx
ror edx 0x2
mov edi ecx
mov ebx edi
xor ebx edx
mov ecx ebp
xor ebx ecx
add ebx [ esp + 0x118 ]
mov ebp esi
rol esi 0x5
add esi [ rw-data ]
mov [ rw-data ] edi
lea esi [ ebx + esi - 0x359d3e2a ]
ror ecx 0x2
mov ebx edx
mov edi ebx
xor edi ecx
mov edx ebp
xor edi edx
add edi [ esp + 0x11c ]
mov ebp esi
rol esi 0x5
add esi [ rw-data ]
mov [ rw-data ] ebx
lea esi [ edi + esi - 0x359d3e2a ]
ror edx 0x2
mov edi ecx
mov ebx edi
xor ebx edx
mov ecx ebp
xor ebx ecx
add ebx [ esp + 0x120 ]
mov ebp esi
rol esi 0x5
add esi [ rw-data ]
mov [ rw-data ] edi
lea esi [ ebx + esi - 0x359d3e2a ]
ror ecx 0x2
mov ebx edx
mov edi ebx
xor edi ecx
mov edx ebp
xor edi edx
add edi [ esp + 0x124 ]
mov ebp esi
rol esi 0x5
add esi [ rw-data ]
mov [ rw-data ] ebx
lea esi [ edi + esi - 0x359d3e2a ]
ror edx 0x2
mov edi ecx
mov ebx edi
xor ebx edx
mov ecx ebp
mov ebp esi
rol esi 0x5
add esi [ rw-data ]
xor ebx ecx
add ebx [ esp + 0x128 ]
mov [ rw-data ] edi
lea esi [ ebx + esi - 0x359d3e2a ]
mov ebx edx
ror ecx 0x2
mov edi ebx
xor edi ecx
mov edx ebp
mov ebp esi
rol esi 0x5
add esi [ rw-data ]
xor edi edx
add edi [ esp + 0x12c ]
mov [ rw-data ] ebx
lea esi [ edi + esi - 0x359d3e2a ]
mov edi ecx
ror edx 0x2
mov ecx ebp
mov ebp esi
mov ebx edi
rol esi 0x5
xor ebx edx
add esi [ rw-data ]
xor ebx ecx
add ebx [ esp + 0x130 ]
mov [ rw-data ] edi
lea esi [ ebx + esi - 0x359d3e2a ]
ror ecx 0x2
mov ebx edx
mov edi ebx
xor edi ecx
mov edx ebp
xor edi edx
add edi [ esp + 0x134 ]
mov ebp esi
rol esi 0x5
add esi [ rw-data ]
mov [ rw-data ] ebx
lea esi [ edi + esi - 0x359d3e2a ]
ror edx 0x2
mov edi ecx
mov ebx edi
xor ebx edx
mov ecx ebp
xor ebx ecx
add ebx [ esp + 0x138 ]
mov ebp esi
rol esi 0x5
add esi [ rw-data ]
mov [ rw-data ] edi
lea esi [ ebx + esi - 0x359d3e2a ]
ror ecx 0x2
mov ebx edx
mov edi ebx
xor edi ecx
mov edx ebp
xor edi edx
add edi [ esp + 0x13c ]
mov ebp esi
rol esi 0x5
add esi [ rw-data ]
mov [ rw-data ] ebx
lea esi [ edi + esi - 0x359d3e2a ]
ror edx 0x2
mov edi ecx
mov ebx edi
xor ebx edx
mov ecx ebp
xor ebx ecx
add ebx [ esp + 0x140 ]
mov ebp esi
rol esi 0x5
add esi [ rw-data ]
mov [ rw-data ] edi
lea esi [ ebx + esi - 0x359d3e2a ]
mov ebx edx
ror ecx 0x2
mov edi ebx
xor edi ecx
mov edx ebp
mov ebp esi
rol esi 0x5
add esi [ rw-data ]
xor edi edx
add edi [ esp + 0x144 ]
mov [ rw-data ] ebx
lea esi [ edi + esi - 0x359d3e2a ]
mov edi ecx
ror edx 0x2
mov ebx edi
xor ebx edx
mov ecx ebp
mov ebp esi
rol esi 0x5
add esi [ rw-data ]
xor ebx ecx
add ebx [ esp + 0x148 ]
mov [ rw-data ] edi
lea esi [ ebx + esi - 0x359d3e2a ]
mov ebx edx
ror ecx 0x2
mov edx ebp
mov edi esi
rol esi 0x5
add esi [ rw-data ]
mov ebp ebx
xor ebp ecx
xor ebp edx
add ebp [ esp + 0x14c ]
ror edx 0x2
lea esi [ esi + ebp - 0x359d3e2a ]
mov ebp [ eax ]
add ebp esi
mov [ rw-data ] esi
mov esi [ eax + 0x4 ]
add esi edi
mov [ eax + 0x4 ] esi
mov esi [ eax + 0x8 ]
add esi edx
mov [ rw-data ] edx
mov edx [ eax + 0xc ]
mov [ rw-data ] edi
pop edi
add edx ecx
mov [ rw-data ] ecx
mov ecx [ eax + 0x10 ]
mov [ eax + 0x8 ] esi
pop esi
mov [ eax ] ebp
add ecx ebx
pop ebp
mov [ rw-data ] ebx
mov [ eax + 0xc ] edx
mov [ eax + 0x10 ] ecx
pop ebx
add esp 0x148
retn
sub_1001a853
push ebp
lea ebp [ esp - 0x68 ]
sub esp 0x90
mov eax [ rw-data ]
xor eax ebp
mov [ ebp + 0x64 ] eax
mov eax [ ebp + 0x70 ]
mov [ ebp - 0x24 ] eax
mov eax [ ebp + 0x74 ]
push esi
mov [ ebp - 0x20 ] eax
mov esi ecx
movzx eax [ esi ]
add eax 0x7
cdq
and edx 0x7
add eax edx
push edi
mov edi eax
sar edi 0x3
cmp [ ebp + 0x7c ] edi
jbe r-xdata
push ebx
push [ ebp + 0x7c ]
lea eax [ ebp - 0x1c ]
push [ ebp + 0x78 ]
lea ebx [ ebp - 0x28 ]
push eax
call sub_1001a921
add esp 0xc
pop ebx
test eax eax
jne r-xdata
mov eax 0x406
jmp r-xdata
mov ecx [ ebp + 0x64 ]
pop edi
xor ecx ebp
pop esi
call sub_10025c8d
add ebp 0x68
leave
retn
cmp [ ebp - 0x28 ] edi
jne r-xdata
cmp [ ebp - 0x1c ] al
jne r-xdata
mov eax 0x401
cmp [ ebp - 0x1b ] 0x1
jne r-xdata
push 0x2
pop ecx
lea eax [ edi - 0x1 ]
cmp eax ecx
jbe r-xdata
mov al [ ebp + ecx - 0x1c ]
inc ecx
test al al
jne r-xdata
cmp [ ebp + ecx - 0x1c ] 0xff
jne r-xdata
mov edx [ ebp - 0x20 ]
mov eax edi
sub eax ecx
mov [ edx ] eax
lea edx [ eax + 0xb ]
cmp edx edi
ja r-xdata
inc ecx
cmp ecx eax
jb r-xdata
mov esi eax
lea eax [ ebp + ecx - 0x1c ]
test esi esi
je r-xdata
xor eax eax
jmp r-xdata
mov ecx [ ebp - 0x24 ]
sub ecx eax
mov dl [ eax ]
mov [ ecx + eax ] dl
inc eax
dec esi
jne r-xdata
sub_1001a921
push ebp
lea ebp [ esp - 0x6c ]
sub esp 0x214
push edi
push [ ebp + 0x78 ]
lea eax [ ebp - 0x124 ]
push eax
mov eax [ ebp + 0x7c ]
call sub_10018621
lea eax [ esi + 0x2 ]
push eax
lea eax [ ebp - 0x1c ]
push eax
mov edi 0x80
mov eax edi
call sub_10018621
lea eax [ esi + 0x82 ]
push eax
lea eax [ ebp - 0xa0 ]
push eax
mov eax edi
call sub_10018621
add esp 0x18
push 0x20
pop eax
push 0x20
lea edi [ eax + 0x1 ]
pop eax
mov ecx eax
dec eax
test ecx ecx
jne r-xdata
inc eax
mov [ ebp + 0x68 ] eax
lea eax [ ebp - 0x124 ]
push eax
mov ecx edi
lea edx [ ebp - 0x1c ]
call sub_10018c8e
pop ecx
test eax eax
jl r-xdata
mov ecx eax
dec eax
test ecx ecx
jne r-xdata
cmp [ ebp + eax * 4 - 0x1c ] 0x0
jne r-xdata
movzx eax [ esi ]
add eax 0x7
mov ecx [ ebp + 0x68 ]
cdq
and edx 0x7
add eax edx
sar eax 0x3
mov [ ebx ] eax
lea eax [ ebp - 0x1c ]
push eax
lea eax [ ebp - 0xa0 ]
push eax
lea eax [ ebp - 0x124 ]
push eax
lea eax [ ebp - 0x1a8 ]
push eax
mov eax edi
call sub_10018b75
push edi
lea eax [ ebp - 0x1a8 ]
push eax
push [ ebp + 0x74 ]
mov eax [ ebx ]
call sub_1001866c
add esp 0x1c
xor eax eax
mov eax 0x401
jmp r-xdata
cmp [ ebp + eax * 4 - 0xa0 ] 0x0
jne r-xdata
pop edi
add ebp 0x6c
leave
retn
sub_1001aa05
push ebp
mov ebp esp
push ecx
push ebx
push edi
mov ebx eax
mov eax [ esi + 0x20 ]
push 0x10
pop edi
lea ecx [ eax + ebx ]
and ecx 0xf
sub edi eax
mov [ esi + 0x20 ] ecx
cmp ebx edi
jb r-xdata
xor edi edi
mov ecx [ ebp + 0x8 ]
mov [ ebp - 0x4 ] edi
lea eax [ eax + esi + 0x24 ]
test edi edi
je r-xdata
pop edi
pop ebx
leave
retn
sub eax ecx
lea ecx [ esi + 0x24 ]
push ecx
lea eax [ esi + 0x10 ]
push eax
mov ecx esi
call sub_1001aae4
lea eax [ edi + 0xf ]
pop ecx
pop ecx
cmp eax ebx
jae r-xdata
sub eax ecx
mov dl [ ecx ]
mov [ eax + ecx ] dl
inc ecx
dec ebx
jne r-xdata
xor eax eax
jmp r-xdata
mov [ ebp - 0x4 ] eax
mov dl [ ecx ]
mov [ eax + ecx ] dl
inc ecx
dec [ ebp - 0x4 ]
jne r-xdata
sub ebx edi
mov ecx [ ebp + 0x8 ]
lea ecx [ edi + ecx ]
lea eax [ eax + esi + 0x24 ]
je r-xdata
mov ecx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
lea eax [ eax + ecx - 0xf ]
push eax
lea eax [ esi + 0x10 ]
push eax
mov ecx esi
call sub_1001aae4
add [ ebp - 0x4 ] 0x10
pop ecx
add edi 0x10
pop ecx
cmp [ ebp - 0x4 ] ebx
jb r-xdata
sub_1001aa9f
push esi
push edi
push 0x10
mov esi eax
pop edi
mov eax edi
sub eax [ esi + 0x20 ]
push [ eax * 4 + rw-data ]
call sub_1001aa05
lea eax [ esi + 0x10 ]
push eax
mov eax edi
call sub_1001aa05
pop ecx
pop ecx
mov ecx [ esp + 0xc ]
mov eax esi
sub ecx esi
mov dl [ eax ]
mov [ ecx + eax ] dl
inc eax
dec edi
jne r-xdata
push 0x34
push edi
push esi
call sub_10026630
add esp 0xc
pop edi
pop esi
retn
sub_1001aae4
push ebp
mov ebp esp
sub esp 0x38
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
mov edx [ ebp + 0xc ]
push edi
mov esi ecx
lea edi [ ebp - 0x34 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp + 0x8 ]
movsd [ edi ] [ esi ]
mov esi edx
lea edi [ ebp - 0x24 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi ecx
push 0x10
mov [ ebp - 0x38 ] ecx
lea ecx [ ebp - 0x14 ]
pop edi
sub esi edx
sub ecx edx
push ebx
mov bl [ esi + edx ]
xor bl [ edx ]
mov [ ecx + edx ] bl
inc edx
dec edi
jne r-xdata
xor esi esi
xor edx edx
mov bl [ esi + rw-data ]
lea ecx [ ebp + edi - 0x34 ]
xor [ ecx ] bl
movzx esi [ ecx ]
inc edi
cmp edi 0x30
jb r-xdata
add esi edx
and esi 0xff
inc edx
cmp edx 0x12
jb r-xdata
xor edi edi
mov edi [ ebp - 0x38 ]
mov edx [ ebp + 0xc ]
lea esi [ ebp - 0x34 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push 0x10
movsd [ edi ] [ esi ]
movzx ecx [ eax + 0xf ]
pop esi
sub edx eax
pop ebx
movzx edi [ edx + eax ]
xor edi ecx
mov cl [ edi + rw-data ]
xor [ eax ] cl
movzx ecx [ eax ]
inc eax
dec esi
jne r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop esi
call sub_10025c8d
leave
retn
sub_1001ab8d
push ebp
mov ebp esp
push ecx
mov ecx [ esi + 0x10 ]
push edi
mov edi eax
mov eax ecx
shr eax 0x3
mov edx edi
lea ecx [ ecx + edi * 8 ]
shl edx 0x3
and eax 0x3f
mov [ esi + 0x10 ] ecx
cmp ecx edx
jae r-xdata
push ebx
push 0x40
mov ecx edi
shr ecx 0x1d
add [ esi + 0x14 ] ecx
pop ebx
sub ebx eax
cmp edi ebx
jb r-xdata
inc [ esi + 0x14 ]
xor ebx ebx
mov ecx [ ebp + 0x8 ]
mov [ ebp - 0x4 ] ebx
lea eax [ eax + esi + 0x18 ]
test ebx ebx
je r-xdata
pop edi
leave
retn
sub eax ecx
lea eax [ esi + 0x18 ]
push esi
call sub_1001aca7
lea eax [ ebx + 0x3f ]
pop ecx
cmp eax edi
jae r-xdata
sub eax ecx
mov dl [ ecx ]
mov [ eax + ecx ] dl
inc ecx
dec edi
jne r-xdata
xor eax eax
jmp r-xdata
mov [ ebp - 0x4 ] eax
mov dl [ ecx ]
mov [ eax + ecx ] dl
inc ecx
dec [ ebp - 0x4 ]
jne r-xdata
mov ecx [ ebp + 0x8 ]
sub edi ebx
lea ecx [ ebx + ecx ]
lea eax [ eax + esi + 0x18 ]
pop ebx
je r-xdata
mov ecx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
lea eax [ eax + ecx - 0x3f ]
push esi
call sub_1001aca7
add [ ebp - 0x4 ] 0x40
add ebx 0x40
pop ecx
cmp [ ebp - 0x4 ] edi
jb r-xdata
sub_1001ac32
push ebp
mov ebp esp
sub esp 0xc
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
push edi
mov esi ecx
lea edi [ esi + 0x10 ]
push 0x8
pop edx
mov eax edi
lea ecx [ ebp - 0xc ]
call sub_100185bb
mov ecx [ edi ]
shr ecx 0x3
push 0x38
and ecx 0x3f
pop eax
cmp ecx eax
jb r-xdata
sub eax ecx
push rw-data
call sub_1001ab8d
lea eax [ ebp - 0xc ]
push eax
push 0x8
pop eax
call sub_1001ab8d
push 0x10
pop edx
mov eax esi
mov ecx ebx
call sub_100185bb
push 0x58
push 0x0
push esi
call sub_10026630
mov ecx [ ebp - 0x4 ]
add esp 0x14
pop edi
xor ecx ebp
pop esi
call sub_10025c8d
leave
retn
push 0x78
pop eax
sub_1001aca7
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
sub esp 0x44
push ebx
push esi
push edi
push 0x10
add eax 0x2
lea edx [ ebp - 0x44 ]
pop esi
movzx edi [ eax + 0x1 ]
movzx ebx [ eax ]
shl edi 0x8
or edi ebx
movzx ebx [ eax - 0x1 ]
shl edi 0x8
or edi ebx
movzx ebx [ eax - 0x2 ]
shl edi 0x8
or edi ebx
mov [ edx ] edi
add edx 0x4
add eax 0x4
dec esi
jne r-xdata
mov edi [ ecx + 0x4 ]
mov esi [ ecx + 0x8 ]
mov edx [ ecx + 0xc ]
mov ebx esi
and ebx edi
mov eax edi
not eax
and eax edx
or eax ebx
add eax [ ebp - 0x44 ]
mov ebx edi
add eax [ ecx ]
rol eax 0x3
and ebx eax
mov ecx eax
not ecx
and ecx esi
or ecx ebx
add ecx [ ebp - 0x40 ]
add ecx edx
rol ecx 0x7
mov edx ecx
not edx
and edx edi
mov ebx ecx
and ebx eax
or edx ebx
add edx [ ebp - 0x3c ]
mov ebx ecx
add edx esi
rol edx 0xb
and ebx edx
mov esi edx
not esi
and esi eax
or esi ebx
add esi [ ebp - 0x38 ]
mov ebx edx
add esi edi
ror esi 0xd
and ebx esi
mov edi esi
not edi
and edi ecx
or edi ebx
add edi [ ebp - 0x34 ]
mov ebx esi
add edi eax
rol edi 0x3
and ebx edi
mov eax edi
not eax
and eax edx
or eax ebx
add eax [ ebp - 0x30 ]
add eax ecx
rol eax 0x7
mov ecx eax
not ecx
and ecx esi
mov ebx eax
and ebx edi
or ecx ebx
add ecx [ ebp - 0x2c ]
mov ebx eax
add ecx edx
rol ecx 0xb
mov edx ecx
not edx
and edx edi
and ebx ecx
or edx ebx
add edx [ ebp - 0x28 ]
mov ebx ecx
add edx esi
ror edx 0xd
mov esi edx
not esi
and esi eax
and ebx edx
or esi ebx
add esi [ ebp - 0x24 ]
mov ebx edx
add esi edi
rol esi 0x3
and ebx esi
mov edi esi
not edi
and edi ecx
or edi ebx
add edi [ ebp - 0x20 ]
add edi eax
rol edi 0x7
mov ebx edi
mov eax edi
and eax esi
not ebx
and ebx edx
or ebx eax
add ebx [ ebp - 0x1c ]
add ebx ecx
rol ebx 0xb
mov ecx edi
and ecx ebx
mov eax ebx
not eax
and eax esi
or eax ecx
add eax [ ebp - 0x18 ]
add eax edx
ror eax 0xd
mov ecx eax
not ecx
and ecx edi
mov edx ebx
and edx eax
or ecx edx
add ecx [ ebp - 0x14 ]
mov [ ebp - 0x4 ] eax
add ecx esi
rol ecx 0x3
and eax ecx
mov edx ecx
not edx
and edx ebx
or edx eax
add edx [ ebp - 0x10 ]
add edx edi
rol edx 0x7
mov eax edx
not eax
and eax [ ebp - 0x4 ]
mov esi edx
and esi ecx
or eax esi
add eax [ ebp - 0xc ]
mov edi edx
add eax ebx
rol eax 0xb
and edi eax
mov esi eax
not esi
and esi ecx
or esi edi
add esi [ ebp - 0x8 ]
mov edi eax
add esi [ ebp - 0x4 ]
ror esi 0xd
or edi esi
mov [ ebp - 0x4 ] esi
and edi edx
mov esi eax
and esi [ ebp - 0x4 ]
or edi esi
add edi [ ebp - 0x44 ]
lea ecx [ edi + ecx + 0x5a827999 ]
mov edi [ ebp - 0x4 ]
rol ecx 0x3
mov esi edi
or esi ecx
and edi ecx
mov ebx esi
and ebx eax
or ebx edi
add ebx [ ebp - 0x34 ]
lea edx [ ebx + edx + 0x5a827999 ]
rol edx 0x5
and esi edx
or esi edi
add esi [ ebp - 0x24 ]
lea eax [ esi + eax + 0x5a827999 ]
rol eax 0x9
mov esi eax
or esi ecx
and esi edx
mov edi eax
and edi ecx
or esi edi
add esi [ ebp - 0x14 ]
mov edi [ ebp - 0x4 ]
lea esi [ esi + edi + 0x5a827999 ]
rol esi 0xd
mov edi eax
or edi esi
and edi edx
mov ebx eax
and ebx esi
or edi ebx
add edi [ ebp - 0x40 ]
mov [ ebp - 0x4 ] esi
lea ecx [ edi + ecx + 0x5a827999 ]
rol ecx 0x3
or [ ebp - 0x4 ] ecx
mov edi [ ebp - 0x4 ]
mov ebx esi
and ebx ecx
and edi eax
or edi ebx
add edi [ ebp - 0x30 ]
lea edi [ edi + edx + 0x5a827999 ]
mov edx [ ebp - 0x4 ]
rol edi 0x5
and edx edi
or edx ebx
add edx [ ebp - 0x20 ]
lea eax [ edx + eax + 0x5a827999 ]
rol eax 0x9
mov edx eax
or edx ecx
and edx edi
mov ebx eax
and ebx ecx
or edx ebx
add edx [ ebp - 0x10 ]
mov ebx eax
lea edx [ edx + esi + 0x5a827999 ]
rol edx 0xd
mov esi eax
or esi edx
and esi edi
and ebx edx
or esi ebx
add esi [ ebp - 0x3c ]
mov [ ebp - 0x4 ] edx
lea ecx [ esi + ecx + 0x5a827999 ]
rol ecx 0x3
or [ ebp - 0x4 ] ecx
mov esi [ ebp - 0x4 ]
and esi eax
mov ebx edx
and ebx ecx
or esi ebx
add esi [ ebp - 0x2c ]
lea edi [ esi + edi + 0x5a827999 ]
mov esi [ ebp - 0x4 ]
rol edi 0x5
and esi edi
or esi ebx
add esi [ ebp - 0x1c ]
lea eax [ esi + eax + 0x5a827999 ]
rol eax 0x9
mov esi eax
or esi ecx
and esi edi
mov ebx eax
and ebx ecx
or esi ebx
add esi [ ebp - 0xc ]
mov ebx eax
lea edx [ esi + edx + 0x5a827999 ]
rol edx 0xd
and ebx edx
mov esi eax
or esi edx
and esi edi
or esi ebx
add esi [ ebp - 0x38 ]
mov [ ebp - 0x4 ] edx
lea ecx [ esi + ecx + 0x5a827999 ]
rol ecx 0x3
or [ ebp - 0x4 ] ecx
mov esi [ ebp - 0x4 ]
and esi eax
mov ebx edx
and ebx ecx
or esi ebx
add esi [ ebp - 0x28 ]
lea edi [ esi + edi + 0x5a827999 ]
mov esi [ ebp - 0x4 ]
rol edi 0x5
and esi edi
or esi ebx
add esi [ ebp - 0x18 ]
lea eax [ esi + eax + 0x5a827999 ]
rol eax 0x9
mov esi eax
or esi ecx
and esi edi
mov ebx eax
and ebx ecx
or esi ebx
add esi [ ebp - 0x8 ]
lea edx [ esi + edx + 0x5a827999 ]
rol edx 0xd
mov esi edi
xor esi eax
xor esi edx
add esi [ ebp - 0x44 ]
lea ecx [ esi + ecx + 0x6ed9eba1 ]
rol ecx 0x3
mov esi eax
xor esi edx
xor esi ecx
add esi [ ebp - 0x24 ]
lea edi [ esi + edi + 0x6ed9eba1 ]
rol edi 0x9
mov esi edi
xor esi edx
xor esi ecx
add esi [ ebp - 0x34 ]
lea eax [ esi + eax + 0x6ed9eba1 ]
rol eax 0xb
mov esi edi
xor esi eax
mov ebx esi
xor ebx ecx
add ebx [ ebp - 0x14 ]
lea edx [ ebx + edx + 0x6ed9eba1 ]
rol edx 0xf
xor esi edx
add esi [ ebp - 0x3c ]
lea ecx [ esi + ecx + 0x6ed9eba1 ]
rol ecx 0x3
mov esi eax
xor esi edx
xor esi ecx
add esi [ ebp - 0x1c ]
lea esi [ esi + edi + 0x6ed9eba1 ]
rol esi 0x9
mov edi esi
xor edi edx
xor edi ecx
add edi [ ebp - 0x2c ]
lea edi [ edi + eax + 0x6ed9eba1 ]
rol edi 0xb
mov ebx esi
xor ebx edi
mov eax ebx
xor eax ecx
add eax [ ebp - 0xc ]
lea eax [ eax + edx + 0x6ed9eba1 ]
rol eax 0xf
xor ebx eax
add ebx [ ebp - 0x40 ]
mov edx edi
xor edx eax
lea ecx [ ebx + ecx + 0x6ed9eba1 ]
rol ecx 0x3
xor edx ecx
add edx [ ebp - 0x20 ]
lea esi [ edx + esi + 0x6ed9eba1 ]
rol esi 0x9
mov edx esi
xor edx eax
xor edx ecx
add edx [ ebp - 0x30 ]
mov ebx esi
lea edi [ edx + edi + 0x6ed9eba1 ]
rol edi 0xb
xor ebx edi
mov edx ebx
xor edx ecx
add edx [ ebp - 0x10 ]
lea edx [ edx + eax + 0x6ed9eba1 ]
rol edx 0xf
xor ebx edx
add ebx [ ebp - 0x38 ]
mov eax edi
lea ecx [ ebx + ecx + 0x6ed9eba1 ]
rol ecx 0x3
xor eax edx
xor eax ecx
add eax [ ebp - 0x18 ]
lea esi [ eax + esi + 0x6ed9eba1 ]
rol esi 0x9
mov eax esi
xor eax edx
xor eax ecx
add eax [ ebp - 0x28 ]
lea edi [ eax + edi + 0x6ed9eba1 ]
mov eax [ ebp + 0x8 ]
mov ebx [ eax ]
add ebx ecx
mov [ eax ] ebx
rol edi 0xb
mov ebx esi
xor ebx edi
xor ebx ecx
add ebx [ ebp - 0x8 ]
lea ecx [ ebx + edx + 0x6ed9eba1 ]
rol ecx 0xf
add ecx [ eax + 0x4 ]
mov [ eax + 0x4 ] ecx
mov ecx [ eax + 0x8 ]
add ecx edi
mov [ eax + 0x8 ] ecx
mov ecx [ eax + 0xc ]
pop edi
add ecx esi
pop esi
mov [ eax + 0xc ] ecx
pop ebx
leave
retn
sub_1001b111
push r--data
push [ esp + 0x8 ]
push r--data
call sub_10028ff7
add eax 0x40
push eax
call sub_100291ae
add esp 0x10
cmp [ esp + 0x4 ] 0x3ef
jne r-xdata
push 0x3
call sub_10029978
int3
push r--data
call sub_10028ff7
add eax 0x40
push eax
call sub_100291ae
pop ecx
pop ecx
sub_1001b17a
or [ esi + 0x260 ] 0xffffffff
xor ecx ecx
push 0x100
lea eax [ esi + 0x58 ]
push ecx
push eax
mov [ esi + 0x44 ] ecx
mov [ esi + 0x4c ] ecx
mov [ esi + 0x50 ] ecx
call sub_10026630
add esp 0xc
inc [ esi + 0x26c ]
retn
sub_1001b1ba
push ebx
xor ebx ebx
push esi
cmp edi ebx
je r-xdata
push 0xfffffffe
cmp [ edi + 0x24 ] ebx
jne r-xdata
cmp [ edi + 0x28 ] ebx
jne r-xdata
mov [ edi + 0x24 ] sub_1001b157
push 0x1
push 0xd9b0
push [ edi + 0x2c ]
call [ edi + 0x24 ]
mov esi eax
add esp 0xc
cmp esi ebx
jne r-xdata
mov [ edi + 0x28 ] sub_1001b168
push 0x1
mov [ esi ] edi
mov [ esi + 0x10 ] ebx
mov [ esi + 0x14 ] ebx
mov [ esi + 0x18 ] ebx
push 0x36ee80
push [ edi + 0x2c ]
call [ edi + 0x24 ]
push 0x1
mov [ esi + 0x10 ] eax
push 0x36ef08
push [ edi + 0x2c ]
call [ edi + 0x24 ]
push 0x1
mov [ esi + 0x14 ] eax
push 0x40004
push [ edi + 0x2c ]
call [ edi + 0x24 ]
mov ecx [ esi + 0x10 ]
add esp 0x24
mov [ esi + 0x18 ] eax
cmp ecx ebx
je r-xdata
push 0xfffffffd
jmp r-xdata
mov eax [ esi + 0x14 ]
cmp eax ebx
je r-xdata
mov edx [ esi + 0x14 ]
cmp edx ebx
je r-xdata
pop eax
mov eax [ esi + 0x18 ]
cmp eax ebx
je r-xdata
push eax
push [ edi + 0x2c ]
call [ edi + 0x28 ]
pop ecx
pop ecx
cmp ecx ebx
je r-xdata
cmp eax ebx
je r-xdata
push esi
push [ edi + 0x2c ]
call [ edi + 0x28 ]
pop ecx
pop ecx
jmp r-xdata
push eax
push [ edi + 0x2c ]
call [ edi + 0x28 ]
pop ecx
pop ecx
push ecx
push [ edi + 0x2c ]
call [ edi + 0x28 ]
pop ecx
pop ecx
mov [ esi + 0x26c ] ebx
mov [ esi + 0x264 ] ebx
mov [ esi + 0x270 ] 0x9
mov [ esi + 0x48 ] 0xdbb8d
mov [ esi + 0x268 ] ebx
mov [ esi + 0x30 ] 0x1e
mov [ esi + 0x24 ] edx
mov [ esi + 0x28 ] ecx
mov [ esi + 0x2c ] ebx
mov [ esi + 0x20 ] ecx
push 0x2
pop eax
mov [ esi + 0x8 ] eax
mov [ esi + 0x4 ] eax
mov [ edi + 0x20 ] esi
mov [ edi + 0x8 ] ebx
mov [ edi + 0xc ] ebx
mov [ edi + 0x18 ] ebx
mov [ edi + 0x1c ] ebx
mov [ esi + 0x34 ] 0x100
mov [ esi + 0x38 ] ebx
call sub_1001b17a
xor eax eax
jmp r-xdata
pop esi
pop ebx
retn
sub_1001b2ed
mov cl [ eax + 0x34 ]
push esi
xor esi esi
cmp [ eax + 0x38 ] esi
push edi
jle r-xdata
mov edx [ eax + 0x34 ]
mov [ eax + edx + 0x58 ] 0x1
mov edx [ eax + 0x38 ]
mov esi edx
dec esi
je r-xdata
movzx edi cl
push ebx
mov edx [ eax + 0x24 ]
mov esi [ eax + 0x44 ]
dec esi
je r-xdata
mov edx [ eax + 0x260 ]
mov ebx edx
shr ebx 0x18
xor ebx edi
shl edx 0x8
xor edx [ ebx * 4 + rw-data ]
inc esi
mov [ eax + 0x260 ] edx
cmp esi [ eax + 0x38 ]
jl r-xdata
pop ebx
mov edi [ eax + 0x24 ]
lea edx [ eax + 0x44 ]
mov esi [ edx ]
mov [ esi + edi ] cl
inc [ edx ]
mov esi [ edx ]
mov eax [ eax + 0x24 ]
mov [ esi + eax ] cl
inc [ edx ]
jmp r-xdata
dec esi
je r-xdata
pop edi
pop esi
retn
mov edx [ eax + 0x44 ]
mov esi [ eax + 0x24 ]
mov [ edx + esi ] cl
inc [ eax + 0x44 ]
mov edx [ eax + 0x44 ]
mov esi [ eax + 0x24 ]
mov [ edx + esi ] cl
inc [ eax + 0x44 ]
mov edx [ eax + 0x44 ]
mov esi [ eax + 0x24 ]
jmp r-xdata
mov [ edx + eax + 0x54 ] 0x1
mov edx [ eax + 0x44 ]
mov esi [ eax + 0x24 ]
mov [ edx + esi ] cl
inc [ eax + 0x44 ]
mov edx [ eax + 0x44 ]
mov esi [ eax + 0x24 ]
mov [ edx + esi ] cl
inc [ eax + 0x44 ]
mov edx [ eax + 0x44 ]
mov esi [ eax + 0x24 ]
mov [ edx + esi ] cl
inc [ eax + 0x44 ]
mov edx [ eax + 0x44 ]
mov esi [ eax + 0x24 ]
mov [ edx + esi ] cl
inc [ eax + 0x44 ]
mov dl [ eax + 0x38 ]
mov ecx [ eax + 0x44 ]
mov esi [ eax + 0x24 ]
sub dl 0x4
mov [ ecx + esi ] dl
jmp r-xdata
mov [ edx + esi ] cl
inc [ eax + 0x44 ]
sub_1001b3c9
push ebp
mov ebp esp
push ecx
push ecx
cmp [ esi + 0x4 ] 0x2
mov eax [ esi + 0x44 ]
push ebx
push edi
mov [ ebp - 0x1 ] 0x0
jne r-xdata
cmp eax [ esi + 0x48 ]
jl r-xdata
jmp r-xdata
mov eax [ esi ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov al [ ebp - 0x1 ]
pop edi
pop ebx
leave
retn
cmp eax [ esi + 0x48 ]
jl r-xdata
cmp [ esi + 0xc ] 0x0
je r-xdata
mov eax [ esi ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
jmp r-xdata
mov eax [ eax ]
movzx edi [ eax ]
mov eax [ esi + 0x34 ]
mov [ ebp - 0x1 ] 0x1
mov [ ebp - 0x8 ] edi
cmp edi eax
je r-xdata
mov eax [ eax ]
movzx edi [ eax ]
mov eax [ esi + 0x34 ]
mov [ ebp - 0x1 ] 0x1
mov [ ebp - 0x8 ] edi
cmp edi eax
je r-xdata
mov ecx [ esi + 0x38 ]
cmp ecx 0xff
je r-xdata
cmp [ esi + 0x38 ] 0x1
jne r-xdata
mov ecx [ esi + 0x38 ]
cmp ecx 0xff
je r-xdata
cmp [ esi + 0x38 ] 0x1
jne r-xdata
cmp eax 0x100
jae r-xdata
inc ecx
mov [ esi + 0x38 ] ecx
jmp r-xdata
cmp edi eax
jne r-xdata
mov dl al
lea ecx [ esi + 0x260 ]
mov eax [ ecx ]
mov edi eax
movzx ebx dl
shl eax 0x8
shr edi 0x18
xor edi ebx
xor eax [ edi * 4 + rw-data ]
mov [ ecx ] eax
mov eax [ esi + 0x34 ]
mov [ eax + esi + 0x58 ] 0x1
mov eax [ esi + 0x24 ]
mov ecx [ esi + 0x44 ]
mov [ eax + ecx ] dl
mov eax [ ebp - 0x8 ]
inc [ esi + 0x44 ]
mov [ esi + 0x34 ] eax
jmp r-xdata
cmp eax 0x100
jae r-xdata
inc ecx
mov [ esi + 0x38 ] ecx
jmp r-xdata
cmp edi eax
jne r-xdata
mov dl al
lea ecx [ esi + 0x260 ]
mov eax [ ecx ]
mov edi eax
movzx ebx dl
shl eax 0x8
shr edi 0x18
xor edi ebx
xor eax [ edi * 4 + rw-data ]
mov [ ecx ] eax
mov eax [ esi + 0x34 ]
mov [ eax + esi + 0x58 ] 0x1
mov eax [ esi + 0x24 ]
mov ecx [ esi + 0x44 ]
mov [ eax + ecx ] dl
mov eax [ ebp - 0x8 ]
inc [ esi + 0x44 ]
mov [ esi + 0x34 ] eax
jmp r-xdata
mov [ esi + 0x34 ] edi
mov [ esi + 0x38 ] 0x1
mov eax esi
call sub_1001b2ed
mov eax [ esi ]
inc [ eax ]
mov eax [ esi ]
dec [ eax + 0x4 ]
mov eax [ esi ]
inc [ eax + 0x8 ]
mov eax [ esi ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov [ esi + 0x34 ] edi
mov [ esi + 0x38 ] 0x1
mov eax esi
call sub_1001b2ed
mov eax [ esi ]
inc [ eax ]
mov eax [ esi ]
dec [ eax + 0x4 ]
mov eax [ esi ]
inc [ eax + 0x8 ]
mov eax [ esi ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
dec [ esi + 0xc ]
mov eax [ esi + 0x44 ]
inc [ eax + 0xc ]
mov eax [ esi + 0x44 ]
inc [ eax + 0xc ]
sub_1001b565
push ecx
push ebx
push ebp
push esi
mov esi [ eax + 0x20 ]
xor ebx ebx
push edi
mov [ esp + 0x12 ] bl
mov [ esp + 0x13 ] bl
cmp [ esi + 0x8 ] 0x2
jne r-xdata
xor cl cl
jmp r-xdata
xor edi edi
inc edi
cmp [ esi + 0x8 ] edi
jne r-xdata
call sub_1001b3c9
or [ esp + 0x12 ] al
cmp [ esi + 0x4 ] 0x2
je r-xdata
mov eax [ esi ]
cmp [ eax + 0x14 ] ebx
jne r-xdata
mov eax [ esi + 0x44 ]
cmp eax [ esi + 0x48 ]
jl r-xdata
cmp [ esi + 0xc ] ebx
jne r-xdata
mov eax [ esi + 0x50 ]
cmp eax [ esi + 0x4c ]
jge r-xdata
mov eax [ esi + 0x50 ]
or [ esp + 0x13 ] cl
cmp eax [ esi + 0x4c ]
jl r-xdata
mov eax [ esi ]
cmp [ eax + 0x4 ] ebx
jne r-xdata
push ebx
mov ebp 0x100
cmp [ esi + 0x34 ] ebp
jae r-xdata
mov edx [ esi + 0x2c ]
mov al [ eax + edx ]
mov ebp [ esi ]
mov ebp [ ebp + 0x10 ]
mov [ ebp ] al
mov eax [ esi ]
inc [ esi + 0x50 ]
dec [ eax + 0x14 ]
mov eax [ esi ]
inc [ eax + 0x10 ]
mov eax [ esi ]
inc [ eax + 0x18 ]
mov eax [ esi ]
mov cl 0x1
cmp [ eax + 0x18 ] ebx
jne r-xdata
cmp [ esp + 0x12 ] bl
jne r-xdata
cmp [ esi + 0x4 ] 0x4
jne r-xdata
cmp [ esi + 0x4 ] 0x4
mov [ esi + 0x34 ] ebp
sete al
movzx eax al
mov [ esi + 0x38 ] ebx
push eax
jmp r-xdata
mov eax esi
call sub_1001b2ed
inc [ eax + 0x1c ]
mov eax edi
cmp [ esp + 0x13 ] bl
jne r-xdata
call sub_1001b17a
cmp [ esi + 0x4 ] 0x3
mov [ esi + 0x8 ] 0x2
jne r-xdata
cmp [ esi + 0xc ] ebx
jne r-xdata
mov eax esi
call sub_1001e09f
pop ecx
mov [ esi + 0x8 ] edi
jmp r-xdata
xor eax eax
jmp r-xdata
cmp [ esi + 0xc ] ebx
jne r-xdata
mov eax esi
call sub_1001b1a5
test al al
jne r-xdata
pop edi
pop esi
pop ebp
pop ebx
pop ecx
retn
mov eax esi
call sub_1001b1a5
test al al
jne r-xdata
sub_1001b68c
push esi
test eax eax
jne r-xdata
mov esi [ eax + 0x20 ]
test esi esi
je r-xdata
push 0xfffffffe
mov edx [ esi ]
cmp edx eax
jne r-xdata
mov ecx [ esi + 0x4 ]
dec ecx
je r-xdata
or eax 0xffffffff
pop esi
retn
dec ecx
jne r-xdata
dec ecx
je r-xdata
mov ecx [ eax + 0x4 ]
mov [ esi + 0xc ] ecx
mov [ esi + 0x4 ] 0x4
jmp r-xdata
dec ecx
je r-xdata
mov ecx [ esi + 0xc ]
cmp ecx [ edx + 0x4 ]
jne r-xdata
xor eax eax
pop esi
retn
call sub_1001b565
test al al
je r-xdata
cmp [ esi + 0xc ] 0x0
ja r-xdata
push 0x3
jmp r-xdata
mov eax esi
call sub_1001b1a5
test al al
je r-xdata
pop eax
pop esi
retn
mov eax [ esi + 0x50 ]
cmp eax [ esi + 0x4c ]
jl r-xdata
mov [ esi + 0x4 ] 0x1
push 0x4
jmp r-xdata
sub_1001b703
test esi esi
jne r-xdata
push edi
mov edi [ esi + 0x20 ]
test edi edi
je r-xdata
push 0xfffffffe
pop eax
retn
push 0xfffffffe
pop eax
pop edi
retn
cmp [ edi ] esi
je r-xdata
mov eax [ edi + 0x10 ]
test eax eax
je r-xdata
mov eax [ edi + 0x14 ]
test eax eax
je r-xdata
push eax
push [ esi + 0x2c ]
call [ esi + 0x28 ]
pop ecx
pop ecx
mov edi [ edi + 0x18 ]
test edi edi
je r-xdata
push eax
push [ esi + 0x2c ]
call [ esi + 0x28 ]
pop ecx
pop ecx
push [ esi + 0x20 ]
push [ esi + 0x2c ]
call [ esi + 0x28 ]
and [ esi + 0x20 ] 0x0
pop ecx
pop ecx
xor eax eax
pop edi
retn
push edi
push [ esi + 0x2c ]
call [ esi + 0x28 ]
pop ecx
pop ecx
sub_1001b75f
push ebx
xor ebx ebx
cmp esi ebx
jne r-xdata
cmp [ esi + 0x24 ] ebx
jne r-xdata
push 0xfffffffe
cmp [ esi + 0x28 ] ebx
jne r-xdata
mov [ esi + 0x24 ] sub_1001b157
push 0x1
push 0xfa74
push [ esi + 0x2c ]
call [ esi + 0x24 ]
add esp 0xc
cmp eax ebx
jne r-xdata
mov [ esi + 0x28 ] sub_1001b168
mov [ eax ] esi
mov [ esi + 0x20 ] eax
mov [ eax + 0x20 ] ebx
mov [ eax + 0x1c ] ebx
mov [ eax + 0xc64 ] ebx
mov [ eax + 0x4 ] 0xa
mov [ esi + 0x8 ] ebx
mov [ esi + 0xc ] ebx
mov [ esi + 0x18 ] ebx
mov [ esi + 0x1c ] ebx
mov [ eax + 0x28 ] bl
mov [ eax + 0xc54 ] ebx
mov [ eax + 0xc50 ] ebx
mov [ eax + 0xc4c ] ebx
mov [ eax + 0x2c ] ebx
mov [ eax + 0x30 ] ebx
xor eax eax
pop ebx
retn
push 0xfffffffd
jmp r-xdata
pop eax
pop ebx
retn
sub_1001b7de
push ebp
mov ebp esp
sub esp 0x28
cmp [ ecx + 0x10 ] 0x0
push ebx
push esi
push edi
je r-xdata
mov eax [ ecx + 0xc60 ]
mov ebx [ ecx + 0xc4c ]
mov esi [ ecx + 0xc ]
mov edx [ ecx + 0x38 ]
mov [ ebp - 0x14 ] eax
mov al [ ecx + 0x8 ]
mov [ ebp - 0x1 ] al
mov eax [ ecx + 0x440 ]
mov [ ebp - 0x8 ] eax
mov eax [ ecx + 0x3c ]
mov [ ebp - 0xc ] eax
mov eax [ ecx ]
mov edi [ eax + 0x10 ]
mov eax [ eax + 0x14 ]
mov [ ebp - 0x18 ] edi
mov edi [ ecx + 0x24 ]
mov [ ebp - 0x24 ] edi
mov edi [ ecx + 0xfa40 ]
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x28 ] eax
inc edi
mov edx [ ecx ]
xor edi edi
cmp [ edx + 0x14 ] edi
je r-xdata
cmp [ ebp - 0x8 ] edi
jg r-xdata
cmp [ ebp - 0x10 ] 0x0
je r-xdata
xor al al
jmp r-xdata
cmp [ ecx + 0xc ] edi
je r-xdata
mov al 0x1
je r-xdata
mov eax [ ecx ]
mov edi [ eax + 0x18 ]
mov [ ebp - 0x24 ] edi
sub edi [ ebp - 0x10 ]
add edi [ ebp - 0x28 ]
mov [ eax + 0x18 ] edi
mov eax [ ecx ]
mov edi [ ebp - 0x24 ]
cmp [ eax + 0x18 ] edi
jae r-xdata
cmp esi 0x1
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
mov eax [ ecx + 0xfa40 ]
mov esi [ ecx + 0x440 ]
inc eax
mov [ ebp - 0x18 ] eax
cmp esi eax
je r-xdata
mov eax [ edx + 0x10 ]
mov dl [ ecx + 0x8 ]
mov [ eax ] dl
movzx ebx [ ecx + 0x8 ]
lea esi [ ecx + 0xc60 ]
mov edx [ esi ]
mov eax edx
shl edx 0x8
shr eax 0x18
xor eax ebx
xor edx [ eax * 4 + rw-data ]
dec [ ecx + 0xc ]
mov [ esi ] edx
mov edx [ ecx ]
inc [ edx + 0x10 ]
mov edx [ ecx ]
dec [ edx + 0x14 ]
mov edx [ ecx ]
inc [ edx + 0x18 ]
mov edx [ ecx ]
cmp [ edx + 0x18 ] edi
jne r-xdata
xor esi esi
jmp r-xdata
mov al [ ebp - 0xc ]
mov [ ebp - 0x1 ] al
mov eax [ ebp - 0x24 ]
imul eax eax 0x186a0
cmp edx eax
jae r-xdata
mov eax [ ebp - 0x14 ]
mov [ ecx + 0xc60 ] eax
mov al [ ebp - 0x1 ]
mov [ ecx + 0x8 ] al
mov eax [ ebp - 0x8 ]
mov [ ecx + 0x440 ] eax
mov eax [ ebp - 0xc ]
mov [ ecx + 0x3c ] eax
mov eax [ ecx ]
mov [ ecx + 0x38 ] edx
mov edx [ ebp - 0x18 ]
mov [ ecx + 0xc ] esi
mov [ ecx + 0xc4c ] ebx
mov [ eax + 0x10 ] edx
mov eax [ ecx ]
mov ecx [ ebp - 0x10 ]
mov [ eax + 0x14 ] ecx
inc [ eax + 0x1c ]
cmp [ ebp - 0x10 ] 0x0
je r-xdata
mov ebx [ ebp - 0x18 ]
mov al [ ebp - 0x1 ]
mov [ ebx ] al
mov ebx [ ebp - 0x14 ]
movzx eax al
shr ebx 0x18
xor ebx eax
mov eax [ ebp - 0x14 ]
shl eax 0x8
xor eax [ ebx * 4 + rw-data ]
mov ebx [ ebp - 0x1c ]
dec esi
inc [ ebp - 0x18 ]
dec [ ebp - 0x10 ]
mov [ ebp - 0x14 ] eax
jmp r-xdata
jg r-xdata
inc [ edx + 0x1c ]
jmp r-xdata
mov edx [ ebx + edx * 4 ]
mov al dl
movzx eax al
mov [ ebp - 0x20 ] eax
mov eax [ ebp - 0xc ]
shr edx 0x8
inc [ ebp - 0x8 ]
cmp [ ebp - 0x20 ] eax
je r-xdata
xor esi esi
inc esi
mov esi [ ebp - 0x18 ]
mov al [ ebp - 0x1 ]
mov [ esi ] al
mov esi [ ebp - 0x14 ]
movzx eax al
shr esi 0x18
xor esi eax
mov eax [ ebp - 0x14 ]
shl eax 0x8
xor eax [ esi * 4 + rw-data ]
inc [ ebp - 0x18 ]
dec [ ebp - 0x10 ]
mov [ ebp - 0x14 ] eax
jmp r-xdata
mov al [ ecx + 0x3c ]
mov edx [ ecx + 0x38 ]
mov [ ecx + 0x8 ] al
mov eax [ ecx + 0x24 ]
imul eax eax 0x186a0
mov [ ecx + 0xc ] 0x1
mov [ ebp - 0x1c ] eax
cmp edx eax
jae r-xdata
cmp [ ebp - 0x8 ] edi
jne r-xdata
mov eax [ ebp - 0x20 ]
mov [ ebp - 0xc ] eax
jmp r-xdata
mov ebx [ ecx + 0xc4c ]
mov edx [ ebx + edx * 4 ]
mov al dl
shr edx 0x8
mov [ ecx + 0x38 ] edx
cmp [ ecx + 0x14 ] edi
jne r-xdata
mov eax [ ebp - 0x24 ]
imul eax eax 0x186a0
push 0x2
pop esi
mov [ ebp - 0x20 ] eax
cmp edx eax
jae r-xdata
dec [ ecx + 0x14 ]
mov edi [ ecx + 0x14 ]
cmp edi 0x1
sete dl
xor al dl
inc esi
mov [ ecx + 0x440 ] esi
cmp esi [ ebp - 0x18 ]
je r-xdata
mov edx [ ecx + 0x18 ]
mov edi [ edx * 4 + rw-data ]
inc edx
mov [ ecx + 0x14 ] edi
mov [ ecx + 0x18 ] edx
cmp edx 0x200
jne r-xdata
mov edx [ ebx + edx * 4 ]
mov [ ebp - 0x2 ] dl
shr edx 0x8
inc [ ebp - 0x8 ]
cmp [ ebp - 0x8 ] edi
je r-xdata
movzx eax al
cmp eax [ ecx + 0x3c ]
jne r-xdata
and [ ecx + 0x18 ] 0x0
test esi esi
jle r-xdata
movzx eax [ ebp - 0x2 ]
cmp eax [ ebp - 0xc ]
je r-xdata
mov [ ecx + 0x3c ] eax
jmp r-xdata
mov eax [ ecx + 0x38 ]
mov [ ecx + 0xc ] 0x2
cmp eax [ ebp - 0x1c ]
jae r-xdata
push 0x3
pop esi
cmp edx [ ebp - 0x20 ]
jae r-xdata
mov ebx [ ebp - 0x1c ]
mov [ ebp - 0xc ] eax
jmp r-xdata
mov edx [ ebx + eax * 4 ]
mov al dl
shr edx 0x8
mov [ ecx + 0x38 ] edx
test edi edi
jne r-xdata
mov ebx [ ebp - 0x1c ]
mov edx [ ebx + edx * 4 ]
mov [ ebp - 0x2 ] dl
shr edx 0x8
inc [ ebp - 0x8 ]
cmp [ ebp - 0x8 ] edi
je r-xdata
dec [ ecx + 0x14 ]
mov edi [ ecx + 0x14 ]
cmp edi 0x1
sete dl
xor al dl
inc esi
mov [ ecx + 0x440 ] esi
cmp esi [ ebp - 0x18 ]
je r-xdata
mov edx [ ecx + 0x18 ]
mov edi [ edx * 4 + rw-data ]
inc edx
mov [ ecx + 0x14 ] edi
mov [ ecx + 0x18 ] edx
cmp edx 0x200
jne r-xdata
movzx eax [ ebp - 0x2 ]
cmp eax [ ebp - 0xc ]
je r-xdata
movzx eax al
cmp eax [ ecx + 0x3c ]
jne r-xdata
and [ ecx + 0x18 ] 0x0
cmp edx [ ebp - 0x20 ]
jae r-xdata
mov [ ebp - 0xc ] eax
jmp r-xdata
mov eax [ ecx + 0x38 ]
mov [ ecx + 0xc ] 0x3
cmp eax [ ebp - 0x1c ]
jae r-xdata
mov edx [ ebx + edx * 4 ]
mov al dl
movzx esi al
shr edx 0x8
add esi 0x4
cmp edx [ ebp - 0x20 ]
jae r-xdata
mov edx [ ebx + eax * 4 ]
mov al dl
shr edx 0x8
mov [ ecx + 0x38 ] edx
test edi edi
jne r-xdata
mov edx [ ebx + edx * 4 ]
movzx eax dl
shr edx 0x8
add [ ebp - 0x8 ] 0x2
mov [ ebp - 0xc ] eax
jmp r-xdata
dec [ ecx + 0x14 ]
mov edi [ ecx + 0x14 ]
cmp edi 0x1
sete dl
xor al dl
inc esi
mov [ ecx + 0x440 ] esi
cmp esi [ ebp - 0x18 ]
je r-xdata
mov edx [ ecx + 0x18 ]
mov edi [ edx * 4 + rw-data ]
inc edx
mov [ ecx + 0x14 ] edi
mov [ ecx + 0x18 ] edx
cmp edx 0x200
jne r-xdata
movzx eax al
cmp eax [ ecx + 0x3c ]
je r-xdata
and [ ecx + 0x18 ] 0x0
mov eax [ ecx + 0x38 ]
cmp eax [ ebp - 0x1c ]
jae r-xdata
mov edx [ ebx + eax * 4 ]
mov al dl
shr edx 0x8
mov [ ecx + 0x38 ] edx
test edi edi
jne r-xdata
dec [ ecx + 0x14 ]
mov edi [ ecx + 0x14 ]
xor edx edx
inc esi
cmp edi 0x1
sete dl
movzx eax al
mov [ ecx + 0x440 ] esi
xor edx eax
add edx 0x4
mov [ ecx + 0xc ] edx
mov edx [ ecx + 0x38 ]
cmp edx [ ebp - 0x1c ]
jae r-xdata
mov edx [ ecx + 0x18 ]
mov edi [ edx * 4 + rw-data ]
inc edx
mov [ ecx + 0x14 ] edi
mov [ ecx + 0x18 ] edx
cmp edx 0x200
jne r-xdata
mov eax [ ebx + edx * 4 ]
mov [ ecx + 0x38 ] eax
shr [ ecx + 0x38 ] 0x8
movzx eax al
mov [ ecx + 0x3c ] eax
test edi edi
jne r-xdata
and [ ecx + 0x18 ] 0x0
dec [ ecx + 0x14 ]
mov eax [ ecx + 0x14 ]
xor edx edx
cmp eax 0x1
sete dl
xor [ ecx + 0x3c ] edx
inc esi
mov [ ecx + 0x440 ] esi
jmp r-xdata
mov eax [ ecx + 0x18 ]
mov edx [ eax * 4 + rw-data ]
inc eax
mov [ ecx + 0x14 ] edx
mov [ ecx + 0x18 ] eax
cmp eax 0x200
jne r-xdata
and [ ecx + 0x18 ] edi
sub_1001bc8a
push esi
xor eax eax
mov edx 0x100
push edi
mov edx ecx
mov eax ecx
jmp r-xdata
mov esi [ esp + 0xc ]
mov edi [ esp + 0x10 ]
lea ecx [ edx + eax ]
sar ecx 0x1
cmp esi [ edi + ecx * 4 ]
jl r-xdata
pop edi
pop esi
retn
mov ecx edx
sub ecx eax
cmp ecx 0x1
jne r-xdata
sub_1001bcb7
push ebp
mov ebp esp
sub esp 0x10
cmp [ esi + 0x10 ] 0x0
push ebx
push edi
je r-xdata
mov eax [ esi ]
xor edx edx
cmp [ eax + 0x14 ] edx
je r-xdata
mov eax [ esi ]
xor edx edx
cmp [ eax + 0x14 ] edx
je r-xdata
xor al al
jmp r-xdata
cmp [ esi + 0xc ] edx
je r-xdata
cmp [ esi + 0xc ] edx
je r-xdata
pop edi
pop ebx
leave
retn
mov eax [ esi + 0xfa40 ]
mov ecx [ esi + 0x440 ]
inc eax
mov [ ebp - 0xc ] eax
cmp ecx eax
je r-xdata
mov eax [ eax + 0x10 ]
mov cl [ esi + 0x8 ]
mov [ eax ] cl
movzx ebx [ esi + 0x8 ]
lea ecx [ esi + 0xc60 ]
mov eax [ ecx ]
mov edi eax
shl eax 0x8
shr edi 0x18
xor edi ebx
xor eax [ edi * 4 + rw-data ]
dec [ esi + 0xc ]
mov [ ecx ] eax
mov eax [ esi ]
inc [ eax + 0x10 ]
mov eax [ esi ]
dec [ eax + 0x14 ]
mov eax [ esi ]
inc [ eax + 0x18 ]
mov eax [ esi ]
cmp [ eax + 0x18 ] edx
jne r-xdata
mov eax [ esi + 0xfa40 ]
mov ecx [ esi + 0x440 ]
inc eax
mov [ ebp - 0xc ] eax
cmp ecx eax
je r-xdata
mov eax [ eax + 0x10 ]
mov cl [ esi + 0x8 ]
mov [ eax ] cl
movzx ebx [ esi + 0x8 ]
lea ecx [ esi + 0xc60 ]
mov eax [ ecx ]
mov edi eax
shl eax 0x8
shr edi 0x18
xor edi ebx
xor eax [ edi * 4 + rw-data ]
dec [ esi + 0xc ]
mov [ ecx ] eax
mov eax [ esi ]
inc [ eax + 0x10 ]
mov eax [ esi ]
dec [ eax + 0x14 ]
mov eax [ esi ]
inc [ eax + 0x18 ]
mov eax [ esi ]
cmp [ eax + 0x18 ] edx
jne r-xdata
jg r-xdata
inc [ eax + 0x1c ]
jmp r-xdata
jg r-xdata
inc [ eax + 0x1c ]
jmp r-xdata
mov al 0x1
mov al [ esi + 0x3c ]
mov ecx [ esi + 0x38 ]
mov [ esi + 0x8 ] al
mov eax [ esi + 0x24 ]
imul eax eax 0x186a0
mov [ esi + 0xc ] 0x1
mov [ ebp - 0x8 ] eax
cmp ecx eax
jae r-xdata
mov al [ esi + 0x3c ]
mov ecx [ esi + 0x38 ]
mov [ esi + 0x8 ] al
mov eax [ esi + 0x24 ]
imul eax eax 0x186a0
mov [ esi + 0xc ] 0x1
mov [ ebp - 0x8 ] eax
cmp ecx eax
jae r-xdata
lea eax [ esi + 0x444 ]
push eax
push ecx
call sub_1001bc8a
mov edx [ esi + 0x38 ]
mov edi [ esi + 0xc54 ]
mov ebx [ esi + 0xc50 ]
mov [ ebp - 0x1 ] al
pop ecx
pop ecx
movzx ecx dl
mov eax edx
shr eax 0x1
movzx eax [ eax + edi ]
and cl 0x1
shl cl 0x2
shr eax cl
movzx ecx [ ebx + edx * 2 ]
and eax 0xf
shl eax 0x10
or eax ecx
mov [ esi + 0x38 ] eax
mov eax [ esi + 0x440 ]
lea ecx [ eax + 0x1 ]
mov [ ebp - 0x10 ] ecx
mov [ esi + 0x440 ] ecx
cmp ecx [ ebp - 0xc ]
je r-xdata
lea eax [ esi + 0x444 ]
push eax
push ecx
call sub_1001bc8a
mov edx [ esi + 0x38 ]
mov edi [ esi + 0xc54 ]
mov ebx [ esi + 0xc50 ]
mov [ ebp - 0x1 ] al
pop ecx
pop ecx
movzx ecx dl
mov eax edx
shr eax 0x1
movzx eax [ eax + edi ]
and cl 0x1
shl cl 0x2
shr eax cl
movzx ecx [ ebx + edx * 2 ]
and eax 0xf
shl eax 0x10
or eax ecx
cmp [ esi + 0x14 ] 0x0
mov [ esi + 0x38 ] eax
jne r-xdata
movzx eax [ ebp - 0x1 ]
cmp eax [ esi + 0x3c ]
jne r-xdata
dec [ esi + 0x14 ]
cmp [ esi + 0x14 ] 0x1
sete al
xor [ ebp - 0x1 ] al
mov eax [ esi + 0x440 ]
inc eax
mov [ ebp - 0x10 ] eax
mov [ esi + 0x440 ] eax
cmp eax [ ebp - 0xc ]
je r-xdata
mov eax [ esi + 0x18 ]
mov ecx [ eax * 4 + rw-data ]
inc eax
mov [ esi + 0x14 ] ecx
mov [ esi + 0x18 ] eax
cmp eax 0x200
jne r-xdata
mov [ esi + 0x3c ] eax
jmp r-xdata
mov ecx [ esi + 0x38 ]
mov [ esi + 0xc ] 0x2
cmp ecx [ ebp - 0x8 ]
jae r-xdata
movzx eax [ ebp - 0x1 ]
cmp eax [ esi + 0x3c ]
jne r-xdata
and [ esi + 0x18 ] 0x0
lea eax [ esi + 0x444 ]
push eax
push ecx
call sub_1001bc8a
mov edx [ esi + 0x38 ]
mov [ ebp - 0x1 ] al
pop ecx
pop ecx
movzx ecx dl
mov eax edx
shr eax 0x1
movzx eax [ eax + edi ]
and cl 0x1
shl cl 0x2
shr eax cl
movzx ecx [ ebx + edx * 2 ]
and eax 0xf
shl eax 0x10
or eax ecx
mov ecx [ ebp - 0x10 ]
inc ecx
mov [ esi + 0x38 ] eax
mov [ ebp - 0x10 ] ecx
mov [ esi + 0x440 ] ecx
cmp ecx [ ebp - 0xc ]
je r-xdata
mov [ esi + 0x3c ] eax
jmp r-xdata
mov ecx [ esi + 0x38 ]
mov [ esi + 0xc ] 0x2
cmp ecx [ ebp - 0x8 ]
jae r-xdata
movzx eax [ ebp - 0x1 ]
cmp eax [ esi + 0x3c ]
jne r-xdata
lea eax [ esi + 0x444 ]
push eax
push ecx
call sub_1001bc8a
mov edx [ esi + 0x38 ]
mov [ ebp - 0x1 ] al
pop ecx
pop ecx
movzx ecx dl
mov eax edx
shr eax 0x1
movzx eax [ eax + edi ]
and cl 0x1
shl cl 0x2
shr eax cl
movzx ecx [ ebx + edx * 2 ]
and eax 0xf
shl eax 0x10
or eax ecx
cmp [ esi + 0x14 ] 0x0
mov [ esi + 0x38 ] eax
jne r-xdata
mov ecx [ esi + 0x38 ]
mov [ esi + 0xc ] 0x3
cmp ecx [ ebp - 0x8 ]
jae r-xdata
dec [ esi + 0x14 ]
cmp [ esi + 0x14 ] 0x1
sete al
xor [ ebp - 0x1 ] al
mov eax [ ebp - 0x10 ]
inc eax
mov [ ebp - 0x10 ] eax
mov [ esi + 0x440 ] eax
cmp eax [ ebp - 0xc ]
je r-xdata
mov eax [ esi + 0x18 ]
mov ecx [ eax * 4 + rw-data ]
inc eax
mov [ esi + 0x14 ] ecx
mov [ esi + 0x18 ] eax
cmp eax 0x200
jne r-xdata
lea eax [ esi + 0x444 ]
push eax
push ecx
call sub_1001bc8a
mov edx [ esi + 0x38 ]
mov [ ebp - 0x1 ] al
pop ecx
pop ecx
movzx ecx dl
mov eax edx
shr eax 0x1
movzx eax [ eax + edi ]
and cl 0x1
shl cl 0x2
shr eax cl
movzx ecx [ ebx + edx * 2 ]
and eax 0xf
shl eax 0x10
or eax ecx
mov ecx [ ebp - 0x10 ]
inc ecx
mov [ esi + 0x38 ] eax
mov [ ebp - 0x10 ] ecx
mov [ esi + 0x440 ] ecx
cmp ecx [ ebp - 0xc ]
je r-xdata
movzx eax [ ebp - 0x1 ]
cmp eax [ esi + 0x3c ]
jne r-xdata
and [ esi + 0x18 ] 0x0
movzx eax [ ebp - 0x1 ]
cmp eax [ esi + 0x3c ]
je r-xdata
mov ecx [ esi + 0x38 ]
mov [ esi + 0xc ] 0x3
cmp ecx [ ebp - 0x8 ]
jae r-xdata
mov ecx [ esi + 0x38 ]
cmp ecx [ ebp - 0x8 ]
jae r-xdata
lea eax [ esi + 0x444 ]
push eax
push ecx
call sub_1001bc8a
mov edx [ esi + 0x38 ]
mov [ ebp - 0x1 ] al
pop ecx
pop ecx
movzx ecx dl
mov eax edx
shr eax 0x1
movzx eax [ eax + edi ]
and cl 0x1
shl cl 0x2
shr eax cl
movzx ecx [ ebx + edx * 2 ]
and eax 0xf
shl eax 0x10
or eax ecx
cmp [ esi + 0x14 ] 0x0
mov [ esi + 0x38 ] eax
jne r-xdata
lea eax [ esi + 0x444 ]
push eax
push ecx
call sub_1001bc8a
mov edx [ esi + 0x38 ]
mov [ ebp - 0x1 ] al
pop ecx
pop ecx
movzx ecx dl
mov eax edx
shr eax 0x1
movzx eax [ eax + edi ]
and cl 0x1
shl cl 0x2
shr eax cl
movzx ecx [ ebx + edx * 2 ]
and eax 0xf
shl eax 0x10
or eax ecx
mov [ esi + 0x38 ] eax
mov eax [ ebp - 0x10 ]
inc eax
mov [ ebp - 0x10 ] eax
mov [ esi + 0x440 ] eax
movzx eax [ ebp - 0x1 ]
add eax 0x4
mov [ esi + 0xc ] eax
mov eax [ esi + 0x38 ]
cmp eax [ ebp - 0x8 ]
jae r-xdata
dec [ esi + 0x14 ]
cmp [ esi + 0x14 ] 0x1
sete al
xor [ ebp - 0x1 ] al
mov eax [ ebp - 0x10 ]
inc eax
mov [ ebp - 0x10 ] eax
mov [ esi + 0x440 ] eax
cmp eax [ ebp - 0xc ]
je r-xdata
mov eax [ esi + 0x18 ]
mov ecx [ eax * 4 + rw-data ]
inc eax
mov [ esi + 0x14 ] ecx
mov [ esi + 0x18 ] eax
cmp eax 0x200
jne r-xdata
lea ecx [ esi + 0x444 ]
push ecx
push eax
call sub_1001bc8a
mov [ esi + 0x3c ] eax
mov eax [ esi + 0x38 ]
pop ecx
pop ecx
mov ecx eax
shr ecx 0x1
movzx edx [ ecx + edi ]
movzx ecx al
movzx eax [ ebx + eax * 2 ]
and cl 0x1
shl cl 0x2
shr edx cl
and edx 0xf
shl edx 0x10
or edx eax
mov eax [ ebp - 0x10 ]
inc eax
mov [ esi + 0x38 ] edx
mov [ esi + 0x440 ] eax
jmp r-xdata
movzx eax [ ebp - 0x1 ]
cmp eax [ esi + 0x3c ]
je r-xdata
and [ esi + 0x18 ] 0x0
mov ecx [ esi + 0x38 ]
cmp ecx [ ebp - 0x8 ]
jae r-xdata
lea eax [ esi + 0x444 ]
push eax
push ecx
call sub_1001bc8a
mov edx [ esi + 0x38 ]
mov [ ebp - 0x1 ] al
pop ecx
pop ecx
movzx ecx dl
mov eax edx
shr eax 0x1
movzx eax [ eax + edi ]
and cl 0x1
shl cl 0x2
shr eax cl
movzx ecx [ ebx + edx * 2 ]
and eax 0xf
shl eax 0x10
or eax ecx
mov [ esi + 0x38 ] eax
mov eax [ esi + 0x14 ]
test eax eax
jne r-xdata
dec [ esi + 0x14 ]
mov eax [ ebp - 0x10 ]
mov ecx [ esi + 0x14 ]
inc eax
mov [ ebp - 0x10 ] eax
mov [ esi + 0x440 ] eax
xor eax eax
cmp ecx 0x1
movzx ecx [ ebp - 0x1 ]
sete al
xor eax ecx
add eax 0x4
mov [ esi + 0xc ] eax
mov eax [ esi + 0x38 ]
cmp eax [ ebp - 0x8 ]
jae r-xdata
mov eax [ esi + 0x18 ]
mov ecx [ eax * 4 + rw-data ]
inc eax
mov [ esi + 0x14 ] ecx
mov [ esi + 0x18 ] eax
cmp eax 0x200
jne r-xdata
lea ecx [ esi + 0x444 ]
push ecx
push eax
call sub_1001bc8a
mov edx [ esi + 0x38 ]
pop ecx
pop ecx
mov ecx edx
shr ecx 0x1
mov [ esi + 0x3c ] eax
movzx edi [ ecx + edi ]
movzx ecx dl
and cl 0x1
shl cl 0x2
shr edi cl
movzx ecx [ ebx + edx * 2 ]
and edi 0xf
shl edi 0x10
or edi ecx
mov ecx [ esi + 0x14 ]
mov [ esi + 0x38 ] edi
test ecx ecx
jne r-xdata
and [ esi + 0x18 ] 0x0
dec [ esi + 0x14 ]
mov ecx [ esi + 0x14 ]
xor edx edx
cmp ecx 0x1
sete dl
xor edx eax
mov eax [ ebp - 0x10 ]
inc eax
mov [ esi + 0x3c ] edx
mov [ esi + 0x440 ] eax
jmp r-xdata
mov ecx [ esi + 0x18 ]
mov edx [ ecx * 4 + rw-data ]
inc ecx
mov [ esi + 0x14 ] edx
mov [ esi + 0x18 ] ecx
cmp ecx 0x200
jne r-xdata
and [ esi + 0x18 ] 0x0
sub_1001c2d7
test eax eax
jne r-xdata
push esi
mov esi [ eax + 0x20 ]
test esi esi
je r-xdata
push 0xfffffffe
pop eax
retn
push 0xfffffffe
pop eax
pop esi
retn
cmp [ esi ] eax
je r-xdata
mov ecx [ esi + 0x4 ]
push ebx
cmp ecx 0x1
je r-xdata
or eax 0xffffffff
jmp r-xdata
cmp ecx 0x2
jne r-xdata
pop ebx
pop esi
retn
mov ecx [ esi + 0x4 ]
cmp ecx 0xa
jl r-xdata
cmp [ esi + 0x28 ] 0x0
je r-xdata
cmp [ esi + 0x4 ] 0x1
jne r-xdata
mov ebx esi
call sub_1001e272
cmp eax 0x4
je r-xdata
mov ecx esi
call sub_1001b7de
call sub_1001bcb7
jmp r-xdata
cmp [ esi + 0x30 ] 0x3
jl r-xdata
mov ecx [ esi + 0x4 ]
cmp ecx 0x2
jne r-xdata
push 0xfffffffc
pop eax
jmp r-xdata
mov eax [ esi + 0xfa40 ]
inc eax
cmp [ esi + 0x440 ] eax
jne r-xdata
test al al
jne r-xdata
mov eax [ esi + 0xc64 ]
sub eax [ esi + 0xc5c ]
neg eax
sbb eax eax
and eax 0xfffffff8
add eax 0x4
push [ esi + 0xc64 ]
push [ esi + 0xc5c ]
push r--data
call sub_10028ff7
add eax 0x40
push eax
call sub_100291ae
add esp 0x10
xor eax eax
jmp r-xdata
cmp [ esi + 0xc ] 0x0
jne r-xdata
cmp [ esi + 0x30 ] 0x3
mov eax [ esi + 0xc60 ]
not eax
mov [ esi + 0xc60 ] eax
jl r-xdata
cmp [ esi + 0x30 ] 0x2
jl r-xdata
push eax
push [ esi + 0xc58 ]
push r--data
call sub_10028ff7
add eax 0x40
push eax
call sub_100291ae
add esp 0x10
mov ecx [ esi + 0xc60 ]
cmp ecx [ esi + 0xc58 ]
jne r-xdata
push r--data
call sub_10028ff7
add eax 0x40
push eax
call sub_100291ae
pop ecx
pop ecx
lea eax [ esi + 0xc64 ]
mov edx [ eax ]
rol edx 0x1
xor edx ecx
mov [ eax ] edx
mov [ esi + 0x4 ] 0xe
sub_1001c423
test esi esi
jne r-xdata
push edi
mov edi [ esi + 0x20 ]
test edi edi
je r-xdata
push 0xfffffffe
pop eax
retn
push 0xfffffffe
pop eax
pop edi
retn
cmp [ edi ] esi
je r-xdata
mov eax [ edi + 0xc4c ]
test eax eax
je r-xdata
mov eax [ edi + 0xc50 ]
test eax eax
je r-xdata
push eax
push [ esi + 0x2c ]
call [ esi + 0x28 ]
pop ecx
pop ecx
mov edi [ edi + 0xc54 ]
test edi edi
je r-xdata
push eax
push [ esi + 0x2c ]
call [ esi + 0x28 ]
pop ecx
pop ecx
push [ esi + 0x20 ]
push [ esi + 0x2c ]
call [ esi + 0x28 ]
and [ esi + 0x20 ] 0x0
pop ecx
pop ecx
xor eax eax
pop edi
retn
push edi
push [ esi + 0x2c ]
call [ esi + 0x28 ]
pop ecx
pop ecx
sub_1001c488
push ebp
mov ebp esp
sub esp 0x30
push esi
mov esi eax
xor eax eax
push edi
cmp ebx eax
je r-xdata
push 0xfffffffe
pop eax
cmp esi eax
je r-xdata
cmp [ ebp + 0x8 ] eax
je r-xdata
lea edi [ ebp - 0x30 ]
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] eax
call sub_1001b1ba
test eax eax
jne r-xdata
pop edi
pop esi
leave
retn 0x8
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x30 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0x2c ] eax
mov eax [ esi ]
mov [ ebp - 0x1c ] eax
mov eax edi
mov [ ebp - 0x20 ] ebx
call sub_1001b68c
mov edi eax
cmp edi 0x3
jne r-xdata
cmp edi 0x4
jne r-xdata
push 0xfffffff8
pop edi
jmp r-xdata
lea esi [ ebp - 0x30 ]
call sub_1001b703
mov eax edi
jmp r-xdata
mov eax [ ebp - 0x1c ]
sub [ esi ] eax
xor edi edi
sub_1001c4fe
push ebp
mov ebp esp
sub esp 0x34
push ebx
push esi
push edi
mov edi eax
mov ebx ecx
xor eax eax
cmp ebx eax
je r-xdata
push 0xfffffffe
pop eax
cmp edi eax
je r-xdata
cmp [ ebp + 0x8 ] eax
je r-xdata
lea esi [ ebp - 0x30 ]
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] eax
call sub_1001b75f
test eax eax
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn 0x8
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x30 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0x2c ] eax
mov eax [ edi ]
mov [ ebp - 0x1c ] eax
mov eax esi
mov [ ebp - 0x20 ] ebx
call sub_1001c2d7
mov ebx eax
test ebx ebx
jne r-xdata
cmp ebx 0x4
je r-xdata
cmp [ ebp - 0x1c ] eax
jbe r-xdata
mov eax [ ebp - 0x1c ]
sub [ edi ] eax
xor edi edi
lea esi [ ebp - 0x30 ]
call sub_1001c423
mov eax ebx
jmp r-xdata
push 0xfffffff8
jmp r-xdata
push 0xfffffff9
pop edi
jmp r-xdata
lea esi [ ebp - 0x30 ]
call sub_1001c423
mov eax edi
jmp r-xdata
sub_1001c58c
cmp [ eax + 0x25c ] 0x8
push esi
push edi
mov esi ecx
jl r-xdata
mov edx [ eax + 0x25c ]
mov edi [ esp + 0xc ]
push 0x20
pop ecx
sub ecx edx
sub ecx edi
shl esi cl
add edx edi
pop edi
mov [ eax + 0x25c ] edx
or [ eax + 0x258 ] esi
pop esi
retn
lea ecx [ eax + 0x258 ]
push ebx
mov edi [ eax + 0x4c ]
mov bl [ ecx + 0x3 ]
mov edx [ eax + 0x2c ]
mov [ edx + edi ] bl
inc [ eax + 0x4c ]
shl [ ecx ] 0x8
add [ eax + 0x25c ] 0xfffffff8
cmp [ eax + 0x25c ] 0x8
jge r-xdata
pop ebx
sub_1001c5e7
push esi
mov ecx ebx
shr ecx 0x18
push 0x8
call sub_1001c58c
mov ecx ebx
shr ecx 0x10
mov esi 0xff
and ecx esi
push 0x8
call sub_1001c58c
mov ecx ebx
shr ecx 0x8
and ecx esi
push 0x8
call sub_1001c58c
movzx ecx bl
push 0x8
call sub_1001c58c
add esp 0x10
pop esi
retn
sub_1001c624
push ebp
lea ebp [ esp - 0x9c ]
sub esp 0x11c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp + 0x98 ] eax
mov eax [ esi + 0x20 ]
mov [ ebp - 0x80 ] eax
mov eax [ esi + 0x24 ]
push ebx
mov ebx [ esi + 0x28 ]
mov [ ebp - 0x7c ] eax
xor eax eax
push edi
mov [ esi + 0x54 ] eax
inc eax
cmp eax 0x100
jl r-xdata
mov cl [ esi + 0x54 ]
mov [ eax + esi + 0x158 ] cl
inc [ esi + 0x54 ]
cmp [ esi + eax + 0x58 ] 0x0
je r-xdata
mov edx [ esi + 0x54 ]
inc edx
mov [ ebp - 0x78 ] edx
js r-xdata
xor eax eax
xor edi edi
cmp [ esi + 0x54 ] eax
mov [ ebp - 0x70 ] eax
jle r-xdata
lea edi [ esi + 0x278 ]
lea ecx [ edx + 0x1 ]
xor eax eax
[ edi ]
and [ ebp - 0x74 ] 0x0
cmp [ esi + 0x44 ] 0x0
jle r-xdata
mov ecx [ esi + 0x54 ]
mov ecx [ ebp + 0x98 ]
mov [ ebx + edi * 2 ] dx
lea eax [ esi + edx * 4 + 0x278 ]
inc [ eax ]
inc edi
mov [ esi + 0x274 ] edi
pop edi
xor ecx ebp
pop ebx
call sub_10025c8d
add ebp 0x9c
leave
retn
mov eax [ ebp - 0x80 ]
mov ecx [ ebp - 0x74 ]
mov eax [ eax + ecx * 4 ]
dec eax
jns r-xdata
mov [ ebp + eax - 0x68 ] al
inc eax
cmp eax ecx
jl r-xdata
mov ecx [ ebp - 0x7c ]
movzx eax [ eax + ecx ]
mov al [ eax + esi + 0x158 ]
mov [ ebp - 0x69 ] al
cmp [ ebp - 0x68 ] al
jne r-xdata
add eax [ esi + 0x44 ]
mov eax [ ebp - 0x70 ]
test eax eax
jle r-xdata
inc [ ebp - 0x70 ]
jmp r-xdata
mov al [ ebp - 0x68 ]
mov cl [ ebp - 0x67 ]
mov [ ebp - 0x67 ] al
lea eax [ ebp - 0x67 ]
jmp r-xdata
dec eax
inc [ ebp - 0x74 ]
mov eax [ ebp - 0x74 ]
cmp eax [ esi + 0x44 ]
jl r-xdata
cmp [ ebp - 0x69 ] cl
jne r-xdata
mov [ ebx + edi * 2 ] cx
inc edi
inc [ esi + 0x278 ]
inc ecx
mov [ ebx + edi * 2 ] cx
inc edi
inc [ esi + 0x27c ]
jmp r-xdata
mov eax [ ebp - 0x70 ]
test eax eax
jle r-xdata
inc eax
mov dl cl
mov cl [ eax ]
mov [ eax ] dl
mov edx [ ebp - 0x78 ]
mov [ ebp - 0x68 ] cl
lea ecx [ ebp - 0x68 ]
sub eax ecx
lea ecx [ eax + 0x1 ]
mov [ ebx + edi * 2 ] cx
lea eax [ esi + eax * 4 + 0x27c ]
inc edi
inc [ eax ]
and [ ebp - 0x70 ] 0x0
add eax 0xfffffffe
cdq
sub eax edx
sar eax 0x1
jmp r-xdata
cmp eax 0x2
jl r-xdata
dec eax
xor ecx ecx
test al 0x1
je r-xdata
mov [ ebx + edi * 2 ] cx
inc edi
inc [ esi + 0x278 ]
inc ecx
mov [ ebx + edi * 2 ] cx
inc edi
inc [ esi + 0x27c ]
jmp r-xdata
add eax 0xfffffffe
cdq
sub eax edx
mov edx [ ebp - 0x78 ]
sar eax 0x1
jmp r-xdata
cmp eax 0x2
jl r-xdata
xor ecx ecx
test al 0x1
je r-xdata
sub_1001c7ba
push ebp
mov ebp esp
sub esp 0x60
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
cmp [ esi + 0x268 ] 0x3
push ebx
mov ebx [ esi + 0x28 ]
push edi
jl r-xdata
mov edi [ esi + 0x54 ]
inc edi
inc edi
lea eax [ esi + 0x9324 ]
mov [ ebp - 0x3c ] edi
mov [ ebp - 0xc ] eax
mov [ ebp - 0x28 ] 0x6
push [ esi + 0x54 ]
push [ esi + 0x274 ]
push [ esi + 0x44 ]
push r--data
call sub_10028ff7
add eax 0x40
push eax
call sub_100291ae
add esp 0x14
add [ ebp - 0xc ] 0x102
dec [ ebp - 0x28 ]
jne r-xdata
push edi
push 0xf
push [ ebp - 0xc ]
call sub_10026630
add esp 0xc
test edi edi
jle r-xdata
mov eax [ esi + 0x274 ]
test eax eax
jg r-xdata
cmp eax 0xc8
jge r-xdata
push 0xbb9
cmp eax 0x258
jge r-xdata
mov [ ebp - 0x30 ] 0x2
jmp r-xdata
cmp eax 0x4b0
jge r-xdata
mov [ ebp - 0x30 ] 0x3
jmp r-xdata
mov ecx [ ebp - 0x30 ]
and [ ebp - 0x24 ] 0x0
mov [ ebp - 0x34 ] ecx
mov [ ebp - 0x20 ] eax
test ecx ecx
jle r-xdata
xor ecx ecx
cmp eax 0x960
setge cl
add ecx 0x5
mov [ ebp - 0x30 ] ecx
mov [ ebp - 0x30 ] 0x4
jmp r-xdata
and [ ebp - 0x34 ] 0x0
and [ ebp - 0xc ] 0x0
mov eax ecx
add eax 0x91
imul eax eax 0x102
add eax esi
mov [ ebp - 0x2c ] eax
cmp [ ebp - 0x30 ] 0x6
jne r-xdata
mov ecx [ ebp - 0x30 ]
xor eax eax
lea edi [ ebp - 0x5c ]
[ edi ]
mov eax [ ebp - 0x30 ]
lea edx [ esi + 0xb160 ]
mov [ ebp - 0x28 ] eax
cmp edi [ ebp - 0x24 ]
jle r-xdata
lea edx [ esi + edi * 4 + 0x278 ]
mov ecx [ esi + 0x274 ]
xor eax eax
cmp ecx eax
mov [ ebp - 0x40 ] eax
mov [ ebp - 0x28 ] eax
mov [ ebp - 0x24 ] eax
jle r-xdata
cmp [ ebp - 0x3c ] 0x0
jle r-xdata
add edx 0x408
dec [ ebp - 0x28 ]
jne r-xdata
mov ecx [ ebp - 0x3c ]
xor eax eax
mov edi edx
[ edi ]
cmp [ esi + 0x268 ] 0x3
jl r-xdata
mov eax [ ebp - 0x34 ]
cmp eax [ ebp - 0x30 ]
je r-xdata
add edx 0x4
add ecx [ edx ]
inc edi
cmp ecx [ ebp - 0x28 ]
mov [ ebp - 0x40 ] ecx
jl r-xdata
cmp [ esi + 0x268 ] 0x3
jl r-xdata
lea edx [ eax + 0x31 ]
cmp edx ecx
mov [ ebp - 0xc ] edx
mov [ ebp - 0x2c ] edx
jl r-xdata
mov edx [ ebp - 0x3c ]
lea eax [ esi + 0x9324 ]
lea ecx [ esi + 0xc994 ]
mov [ ebp - 0x28 ] edx
cmp [ ebp - 0x3c ] 0x0
jle r-xdata
xor eax eax
cmp [ ebp - 0x3c ] eax
jle r-xdata
fild [ ebp - 0x40 ]
push ecx
push ecx
fmul [ r--data ]
fidiv [ esi + 0x274 ]
fstp [ esp ]
push [ ebp - 0x40 ]
push edi
push [ ebp - 0x24 ]
push [ ebp - 0x34 ]
push r--data
call sub_10028ff7
add eax 0x40
push eax
call sub_100291ae
mov ecx [ ebp - 0x40 ]
add esp 0x20
cmp eax 0x1
je r-xdata
mov eax [ ebp - 0x3c ]
dec eax
cmp edi eax
jge r-xdata
cmp [ ebp - 0x30 ] 0x0
jle r-xdata
mov eax [ ebp - 0x28 ]
cdq
and edx 0x7
add eax edx
sar eax 0x3
push eax
mov eax [ ebp - 0x34 ]
inc eax
push eax
push r--data
call sub_10028ff7
add eax 0x40
push eax
call sub_100291ae
xor edi edi
add esp 0x10
cmp [ ebp - 0x30 ] edi
jle r-xdata
mov ecx [ ebp - 0x30 ]
test ecx ecx
jle r-xdata
dec ecx
mov [ ebp - 0x2c ] ecx
movzx edx [ eax + 0x102 ]
movzx edi [ eax ]
shl edx 0x10
or edx edi
mov [ ecx - 0x4 ] edx
movzx edx [ eax + 0x306 ]
movzx edi [ eax + 0x204 ]
shl edx 0x10
or edx edi
mov [ ecx ] edx
movzx edx [ eax + 0x50a ]
movzx edi [ eax + 0x408 ]
shl edx 0x10
or edx edi
mov [ ecx + 0x4 ] edx
inc eax
add ecx 0x10
dec [ ebp - 0x28 ]
jne r-xdata
dec [ ebp - 0x34 ]
sub [ ebp - 0x2c ] 0x102
inc [ ebp - 0xc ]
sub [ ebp - 0x20 ] ecx
inc edi
cmp [ ebp - 0x34 ] 0x0
mov [ ebp - 0x24 ] edi
jg r-xdata
cmp eax [ ebp - 0x24 ]
jl r-xdata
mov eax [ ebp - 0xc ]
and eax 0x80000001
jns r-xdata
inc [ ebp - 0x34 ]
cmp [ ebp - 0x34 ] 0x4
jl r-xdata
lea eax [ esi + 0x9324 ]
mov [ ebp - 0x28 ] eax
mov eax [ ebp - 0x30 ]
lea edi [ esi + 0xb160 ]
mov [ ebp - 0xc ] eax
push r--data
call sub_10028ff7
add eax 0x40
push eax
call sub_100291ae
pop ecx
pop ecx
push [ ebp + edi * 4 - 0x5c ]
push r--data
call sub_10028ff7
add eax 0x40
push eax
call sub_100291ae
add esp 0xc
inc edi
cmp edi [ ebp - 0x30 ]
jl r-xdata
cmp [ ebp - 0x30 ] 0x6
jne r-xdata
xor eax eax
movzx edx ax
mov eax edx
shl edx 0x10
or eax edx
shr ecx 0x1
lea edi [ ebp - 0x18 ]
[ edi ]
adc ecx ecx
[ edi ]
mov eax [ ebp - 0x24 ]
mov eax [ ebp - 0x20 ]
cdq
idiv [ ebp - 0x34 ]
mov edi [ ebp - 0x24 ]
xor ecx ecx
dec edi
mov [ ebp - 0x40 ] ecx
mov [ ebp - 0x28 ] eax
test eax eax
jle r-xdata
mov edx [ ebp - 0x2c ]
mov [ edx + eax ] 0xf
cmp eax edi
jg r-xdata
cmp eax 0x1
jne r-xdata
dec eax
or eax 0xfffffffe
inc eax
cmp [ ebp - 0x30 ] 0x0
jle r-xdata
cmp [ ebp - 0x30 ] 0x8
jl r-xdata
push [ ebp - 0x3c ]
mov ecx edi
push [ ebp - 0x28 ]
call sub_100216b7
add [ ebp - 0x28 ] 0x102
pop ecx
add edi 0x408
dec [ ebp - 0xc ]
pop ecx
jne r-xdata
cmp eax [ ebp - 0x2c ]
mov ecx eax
jmp r-xdata
mov ecx [ ebp - 0x2c ]
sub ecx eax
inc ecx
cmp ecx 0x32
jne r-xdata
mov edx [ ebp - 0x2c ]
mov [ edx + eax ] 0x0
jmp r-xdata
sub ecx [ esi + edi * 4 + 0x278 ]
dec edi
mov [ ebp - 0x40 ] ecx
mov ecx [ ebp - 0x40 ]
cmp ecx 0x8000
jge r-xdata
push 0xbba
jmp r-xdata
mov [ ebp - 0x24 ] ecx
jle r-xdata
mov eax [ ebp - 0x24 ]
lea edi [ ebx + eax * 2 ]
movzx eax [ edi ]
movzx edi [ edi + 0x2 ]
mov [ ebp - 0x20 ] edi
add edi 0xc99
shl edi 0x4
movzx ecx ax
lea eax [ ecx + 0xc99 ]
shl eax 0x4
mov eax [ eax + esi ]
add eax [ edi + esi ]
mov edi [ ebp - 0x20 ]
shl edi 0x4
add edi esi
shl ecx 0x4
lea edx [ ecx + esi ]
mov ecx [ edx + 0xc994 ]
add ecx [ edi + 0xc994 ]
mov edx [ edx + 0xc998 ]
add edx [ edi + 0xc998 ]
mov edi [ ebp - 0x24 ]
movzx edi [ ebx + edi * 2 + 0x4 ]
mov [ ebp - 0x20 ] edi
add edi 0xc99
shl edi 0x4
add eax [ edi + esi ]
mov edi [ ebp - 0x20 ]
shl edi 0x4
add edi esi
add ecx [ edi + 0xc994 ]
add edx [ edi + 0xc998 ]
mov edi [ ebp - 0x24 ]
movzx edi [ ebx + edi * 2 + 0x6 ]
mov [ ebp - 0x20 ] edi
add edi 0xc99
shl edi 0x4
add eax [ edi + esi ]
mov edi [ ebp - 0x20 ]
shl edi 0x4
add edi esi
add ecx [ edi + 0xc994 ]
add edx [ edi + 0xc998 ]
mov edi [ ebp - 0x24 ]
movzx edi [ ebx + edi * 2 + 0x8 ]
mov [ ebp - 0x20 ] edi
add edi 0xc99
shl edi 0x4
add eax [ edi + esi ]
mov edi [ ebp - 0x20 ]
shl edi 0x4
add edi esi
add ecx [ edi + 0xc994 ]
add edx [ edi + 0xc998 ]
mov edi [ ebp - 0x24 ]
movzx edi [ ebx + edi * 2 + 0xa ]
mov [ ebp - 0x20 ] edi
add edi 0xc99
shl edi 0x4
add eax [ edi + esi ]
mov edi [ ebp - 0x20 ]
shl edi 0x4
add edi esi
add ecx [ edi + 0xc994 ]
add edx [ edi + 0xc998 ]
mov edi [ ebp - 0x24 ]
movzx edi [ ebx + edi * 2 + 0xc ]
mov [ ebp - 0x20 ] edi
add edi 0xc99
shl edi 0x4
add eax [ edi + esi ]
mov edi [ ebp - 0x20 ]
shl edi 0x4
add edi esi
add ecx [ edi + 0xc994 ]
add edx [ edi + 0xc998 ]
mov edi [ ebp - 0x24 ]
movzx edi [ ebx + edi * 2 + 0xe ]
mov [ ebp - 0x20 ] edi
add edi 0xc99
shl edi 0x4
add eax [ edi + esi ]
mov edi [ ebp - 0x20 ]
shl edi 0x4
add edi esi
add ecx [ edi + 0xc994 ]
add edx [ edi + 0xc998 ]
mov edi [ ebp - 0x24 ]
movzx edi [ ebx + edi * 2 + 0x10 ]
mov [ ebp - 0x20 ] edi
add edi 0xc99
shl edi 0x4
add eax [ edi + esi ]
mov edi [ ebp - 0x20 ]
shl edi 0x4
add edi esi
add ecx [ edi + 0xc994 ]
add edx [ edi + 0xc998 ]
mov edi [ ebp - 0x24 ]
movzx edi [ ebx + edi * 2 + 0x12 ]
mov [ ebp - 0x20 ] edi
add edi 0xc99
shl edi 0x4
add eax [ edi + esi ]
mov edi [ ebp - 0x20 ]
shl edi 0x4
add edi esi
add ecx [ edi + 0xc994 ]
add edx [ edi + 0xc998 ]
mov edi [ ebp - 0x24 ]
movzx edi [ ebx + edi * 2 + 0x14 ]
mov [ ebp - 0x20 ] edi
add edi 0xc99
shl edi 0x4
add eax [ edi + esi ]
mov edi [ ebp - 0x20 ]
shl edi 0x4
add edi esi
add ecx [ edi + 0xc994 ]
add edx [ edi + 0xc998 ]
mov edi [ ebp - 0x24 ]
movzx edi [ ebx + edi * 2 + 0x16 ]
mov [ ebp - 0x20 ] edi
add edi 0xc99
shl edi 0x4
add eax [ edi + esi ]
mov edi [ ebp - 0x20 ]
shl edi 0x4
add edi esi
add ecx [ edi + 0xc994 ]
add edx [ edi + 0xc998 ]
mov edi [ ebp - 0x24 ]
movzx edi [ ebx + edi * 2 + 0x18 ]
mov [ ebp - 0x20 ] edi
add edi 0xc99
shl edi 0x4
add eax [ edi + esi ]
mov edi [ ebp - 0x20 ]
shl edi 0x4
add edi esi
add ecx [ edi + 0xc994 ]
add edx [ edi + 0xc998 ]
mov edi [ ebp - 0x24 ]
movzx edi [ ebx + edi * 2 + 0x1a ]
mov [ ebp - 0x20 ] edi
add edi 0xc99
shl edi 0x4
add eax [ edi + esi ]
mov edi [ ebp - 0x20 ]
shl edi 0x4
add edi esi
add ecx [ edi + 0xc994 ]
add edx [ edi + 0xc998 ]
mov edi [ ebp - 0x24 ]
movzx edi [ ebx + edi * 2 + 0x1c ]
mov [ ebp - 0x20 ] edi
add edi 0xc99
shl edi 0x4
add eax [ edi + esi ]
mov edi [ ebp - 0x20 ]
shl edi 0x4
add edi esi
add ecx [ edi + 0xc994 ]
add edx [ edi + 0xc998 ]
mov edi [ ebp - 0x24 ]
movzx edi [ ebx + edi * 2 + 0x1e ]
mov [ ebp - 0x20 ] edi
add edi 0xc99
shl edi 0x4
add eax [ edi + esi ]
mov edi [ ebp - 0x20 ]
shl edi 0x4
add edi esi
add ecx [ edi + 0xc994 ]
add edx [ edi + 0xc998 ]
mov edi [ ebp - 0x24 ]
movzx edi [ ebx + edi * 2 + 0x20 ]
mov [ ebp - 0x20 ] edi
add edi 0xc99
shl edi 0x4
add eax [ edi + esi ]
mov edi [ ebp - 0x20 ]
shl edi 0x4
add edi esi
add ecx [ edi + 0xc994 ]
add edx [ edi + 0xc998 ]
mov edi [ ebp - 0x24 ]
movzx edi [ ebx + edi * 2 + 0x22 ]
mov [ ebp - 0x20 ] edi
add edi 0xc99
shl edi 0x4
add eax [ edi + esi ]
mov edi [ ebp - 0x20 ]
shl edi 0x4
add edi esi
add ecx [ edi + 0xc994 ]
add edx [ edi + 0xc998 ]
mov edi [ ebp - 0x24 ]
movzx edi [ ebx + edi * 2 + 0x24 ]
mov [ ebp - 0x20 ] edi
add edi 0xc99
shl edi 0x4
add eax [ edi + esi ]
mov edi [ ebp - 0x20 ]
shl edi 0x4
add edi esi
add ecx [ edi + 0xc994 ]
add edx [ edi + 0xc998 ]
mov edi [ ebp - 0x24 ]
movzx edi [ ebx + edi * 2 + 0x26 ]
mov [ ebp - 0x20 ] edi
add edi 0xc99
shl edi 0x4
add eax [ edi + esi ]
mov edi [ ebp - 0x20 ]
shl edi 0x4
add edi esi
add ecx [ edi + 0xc994 ]
add edx [ edi + 0xc998 ]
mov edi [ ebp - 0x24 ]
movzx edi [ ebx + edi * 2 + 0x28 ]
mov [ ebp - 0x20 ] edi
add edi 0xc99
shl edi 0x4
add eax [ edi + esi ]
mov edi [ ebp - 0x20 ]
shl edi 0x4
add edi esi
add ecx [ edi + 0xc994 ]
add edx [ edi + 0xc998 ]
mov edi [ ebp - 0x24 ]
movzx edi [ ebx + edi * 2 + 0x2a ]
mov [ ebp - 0x20 ] edi
add edi 0xc99
shl edi 0x4
add eax [ edi + esi ]
mov edi [ ebp - 0x20 ]
shl edi 0x4
add edi esi
add ecx [ edi + 0xc994 ]
add edx [ edi + 0xc998 ]
mov edi [ ebp - 0x24 ]
movzx edi [ ebx + edi * 2 + 0x2c ]
mov [ ebp - 0x20 ] edi
add edi 0xc99
shl edi 0x4
add eax [ edi + esi ]
mov edi [ ebp - 0x20 ]
shl edi 0x4
add edi esi
add ecx [ edi + 0xc994 ]
add edx [ edi + 0xc998 ]
mov edi [ ebp - 0x24 ]
movzx edi [ ebx + edi * 2 + 0x2e ]
mov [ ebp - 0x20 ] edi
add edi 0xc99
shl edi 0x4
add eax [ edi + esi ]
mov edi [ ebp - 0x20 ]
shl edi 0x4
add edi esi
add ecx [ edi + 0xc994 ]
add edx [ edi + 0xc998 ]
mov edi [ ebp - 0x24 ]
movzx edi [ ebx + edi * 2 + 0x30 ]
mov [ ebp - 0x20 ] edi
add edi 0xc99
shl edi 0x4
add eax [ edi + esi ]
mov edi [ ebp - 0x20 ]
shl edi 0x4
add edi esi
add ecx [ edi + 0xc994 ]
add edx [ edi + 0xc998 ]
mov edi [ ebp - 0x24 ]
movzx edi [ ebx + edi * 2 + 0x32 ]
mov [ ebp - 0x20 ] edi
add edi 0xc99
shl edi 0x4
add eax [ edi + esi ]
mov edi [ ebp - 0x20 ]
shl edi 0x4
add edi esi
add ecx [ edi + 0xc994 ]
add edx [ edi + 0xc998 ]
mov edi [ ebp - 0x24 ]
movzx edi [ ebx + edi * 2 + 0x34 ]
mov [ ebp - 0x20 ] edi
add edi 0xc99
shl edi 0x4
add eax [ edi + esi ]
mov edi [ ebp - 0x20 ]
shl edi 0x4
add edi esi
add ecx [ edi + 0xc994 ]
add edx [ edi + 0xc998 ]
mov edi [ ebp - 0x24 ]
movzx edi [ ebx + edi * 2 + 0x36 ]
mov [ ebp - 0x20 ] edi
add edi 0xc99
shl edi 0x4
add eax [ edi + esi ]
mov edi [ ebp - 0x20 ]
shl edi 0x4
add edi esi
add ecx [ edi + 0xc994 ]
add edx [ edi + 0xc998 ]
mov edi [ ebp - 0x24 ]
movzx edi [ ebx + edi * 2 + 0x38 ]
mov [ ebp - 0x20 ] edi
add edi 0xc99
shl edi 0x4
add eax [ edi + esi ]
mov edi [ ebp - 0x20 ]
shl edi 0x4
add edi esi
add ecx [ edi + 0xc994 ]
add edx [ edi + 0xc998 ]
mov edi [ ebp - 0x24 ]
movzx edi [ ebx + edi * 2 + 0x3a ]
mov [ ebp - 0x20 ] edi
add edi 0xc99
shl edi 0x4
add eax [ edi + esi ]
mov edi [ ebp - 0x20 ]
shl edi 0x4
add edi esi
add ecx [ edi + 0xc994 ]
add edx [ edi + 0xc998 ]
mov edi [ ebp - 0x24 ]
movzx edi [ ebx + edi * 2 + 0x3c ]
mov [ ebp - 0x20 ] edi
add edi 0xc99
shl edi 0x4
add eax [ edi + esi ]
mov edi [ ebp - 0x20 ]
shl edi 0x4
add edi esi
add ecx [ edi + 0xc994 ]
add edx [ edi + 0xc998 ]
mov edi [ ebp - 0x24 ]
movzx edi [ ebx + edi * 2 + 0x3e ]
mov [ ebp - 0x20 ] edi
add edi 0xc99
shl edi 0x4
add eax [ edi + esi ]
mov edi [ ebp - 0x20 ]
shl edi 0x4
add edi esi
add ecx [ edi + 0xc994 ]
add edx [ edi + 0xc998 ]
mov edi [ ebp - 0x24 ]
movzx edi [ ebx + edi * 2 + 0x40 ]
mov [ ebp - 0x20 ] edi
add edi 0xc99
shl edi 0x4
add eax [ edi + esi ]
mov edi [ ebp - 0x20 ]
shl edi 0x4
add edi esi
add ecx [ edi + 0xc994 ]
add edx [ edi + 0xc998 ]
mov edi [ ebp - 0x24 ]
movzx edi [ ebx + edi * 2 + 0x42 ]
mov [ ebp - 0x20 ] edi
add edi 0xc99
shl edi 0x4
add eax [ edi + esi ]
mov edi [ ebp - 0x20 ]
shl edi 0x4
add edi esi
add ecx [ edi + 0xc994 ]
add edx [ edi + 0xc998 ]
mov edi [ ebp - 0x24 ]
movzx edi [ ebx + edi * 2 + 0x44 ]
mov [ ebp - 0x20 ] edi
add edi 0xc99
shl edi 0x4
add eax [ edi + esi ]
mov edi [ ebp - 0x20 ]
shl edi 0x4
add edi esi
add ecx [ edi + 0xc994 ]
add edx [ edi + 0xc998 ]
mov edi [ ebp - 0x24 ]
movzx edi [ ebx + edi * 2 + 0x46 ]
mov [ ebp - 0x20 ] edi
add edi 0xc99
shl edi 0x4
add eax [ edi + esi ]
mov edi [ ebp - 0x20 ]
shl edi 0x4
add edi esi
add ecx [ edi + 0xc994 ]
add edx [ edi + 0xc998 ]
mov edi [ ebp - 0x24 ]
movzx edi [ ebx + edi * 2 + 0x48 ]
mov [ ebp - 0x20 ] edi
add edi 0xc99
shl edi 0x4
add eax [ edi + esi ]
mov edi [ ebp - 0x20 ]
shl edi 0x4
add edi esi
add ecx [ edi + 0xc994 ]
add edx [ edi + 0xc998 ]
mov edi [ ebp - 0x24 ]
movzx edi [ ebx + edi * 2 + 0x4a ]
mov [ ebp - 0x20 ] edi
add edi 0xc99
shl edi 0x4
add eax [ edi + esi ]
mov edi [ ebp - 0x20 ]
shl edi 0x4
add edi esi
add ecx [ edi + 0xc994 ]
add edx [ edi + 0xc998 ]
mov edi [ ebp - 0x24 ]
movzx edi [ ebx + edi * 2 + 0x4c ]
mov [ ebp - 0x20 ] edi
add edi 0xc99
shl edi 0x4
add eax [ edi + esi ]
mov edi [ ebp - 0x20 ]
shl edi 0x4
add edi esi
add ecx [ edi + 0xc994 ]
add edx [ edi + 0xc998 ]
mov edi [ ebp - 0x24 ]
movzx edi [ ebx + edi * 2 + 0x4e ]
mov [ ebp - 0x20 ] edi
add edi 0xc99
shl edi 0x4
add eax [ edi + esi ]
mov edi [ ebp - 0x20 ]
shl edi 0x4
add edi esi
add ecx [ edi + 0xc994 ]
add edx [ edi + 0xc998 ]
mov edi [ ebp - 0x24 ]
movzx edi [ ebx + edi * 2 + 0x50 ]
mov [ ebp - 0x20 ] edi
add edi 0xc99
shl edi 0x4
add eax [ edi + esi ]
mov edi [ ebp - 0x20 ]
shl edi 0x4
add edi esi
add ecx [ edi + 0xc994 ]
add edx [ edi + 0xc998 ]
mov edi [ ebp - 0x24 ]
movzx edi [ ebx + edi * 2 + 0x52 ]
mov [ ebp - 0x20 ] edi
add edi 0xc99
shl edi 0x4
add eax [ edi + esi ]
mov edi [ ebp - 0x20 ]
shl edi 0x4
add edi esi
add ecx [ edi + 0xc994 ]
add edx [ edi + 0xc998 ]
mov edi [ ebp - 0x24 ]
movzx edi [ ebx + edi * 2 + 0x54 ]
mov [ ebp - 0x20 ] edi
add edi 0xc99
shl edi 0x4
add eax [ edi + esi ]
mov edi [ ebp - 0x20 ]
shl edi 0x4
add edi esi
add ecx [ edi + 0xc994 ]
add edx [ edi + 0xc998 ]
mov edi [ ebp - 0x24 ]
movzx edi [ ebx + edi * 2 + 0x56 ]
mov [ ebp - 0x20 ] edi
add edi 0xc99
shl edi 0x4
add eax [ edi + esi ]
mov edi [ ebp - 0x20 ]
shl edi 0x4
add edi esi
add ecx [ edi + 0xc994 ]
add edx [ edi + 0xc998 ]
mov edi [ ebp - 0x24 ]
movzx edi [ ebx + edi * 2 + 0x58 ]
mov [ ebp - 0x20 ] edi
add edi 0xc99
shl edi 0x4
add eax [ edi + esi ]
mov edi [ ebp - 0x20 ]
shl edi 0x4
add edi esi
add ecx [ edi + 0xc994 ]
add edx [ edi + 0xc998 ]
mov edi [ ebp - 0x24 ]
movzx edi [ ebx + edi * 2 + 0x5a ]
mov [ ebp - 0x20 ] edi
add edi 0xc99
shl edi 0x4
add eax [ edi + esi ]
mov edi [ ebp - 0x20 ]
shl edi 0x4
add edi esi
add ecx [ edi + 0xc994 ]
add edx [ edi + 0xc998 ]
mov edi [ ebp - 0x24 ]
movzx edi [ ebx + edi * 2 + 0x5c ]
mov [ ebp - 0x20 ] edi
add edi 0xc99
shl edi 0x4
add eax [ edi + esi ]
mov edi [ ebp - 0x20 ]
shl edi 0x4
add edi esi
add ecx [ edi + 0xc994 ]
add edx [ edi + 0xc998 ]
mov edi [ ebp - 0x24 ]
movzx edi [ ebx + edi * 2 + 0x5e ]
mov [ ebp - 0x20 ] edi
add edi 0xc99
shl edi 0x4
add eax [ edi + esi ]
mov edi [ ebp - 0x20 ]
shl edi 0x4
add edi esi
add ecx [ edi + 0xc994 ]
add edx [ edi + 0xc998 ]
mov edi [ ebp - 0x24 ]
movzx edi [ ebx + edi * 2 + 0x60 ]
mov [ ebp - 0x20 ] edi
add edi 0xc99
shl edi 0x4
add eax [ edi + esi ]
mov edi [ ebp - 0x20 ]
shl edi 0x4
add edi esi
add ecx [ edi + 0xc994 ]
add edx [ edi + 0xc998 ]
mov edi [ ebp - 0xc ]
movzx edi [ ebx + edi * 2 ]
mov [ ebp - 0x20 ] edi
add edi 0xc99
shl edi 0x4
add eax [ edi + esi ]
mov edi [ ebp - 0x20 ]
shl edi 0x4
add edi esi
add ecx [ edi + 0xc994 ]
add edx [ edi + 0xc998 ]
mov [ ebp - 0x18 ] ax
shr eax 0x10
mov [ ebp - 0x14 ] cx
shr ecx 0x10
mov [ ebp - 0x10 ] dx
shr edx 0x10
mov [ ebp - 0x16 ] ax
mov eax [ ebp - 0x24 ]
mov [ ebp - 0x12 ] cx
mov [ ebp - 0xe ] dx
jmp r-xdata
inc eax
cmp eax [ ebp - 0x3c ]
jl r-xdata
push 0xbbb
jmp r-xdata
cmp ecx 0x4652
jg r-xdata
call sub_1001b111
and [ ebp - 0x20 ] 0x0
cmp [ ebp - 0x30 ] 0x0
movzx ecx [ ebx + ecx * 2 ]
jle r-xdata
and [ ebp - 0x20 ] 0x0
or ecx 0xffffffff
cmp [ ebp - 0x30 ] 0x0
mov [ ebp - 0x24 ] 0x3b9ac9ff
jle r-xdata
xor eax eax
cmp [ ebp - 0x30 ] eax
jle r-xdata
mov ecx [ ebp - 0x24 ]
inc ecx
cmp ecx [ ebp - 0x2c ]
movzx ecx cx
lea ecx [ ecx + esi + 0x9324 ]
mov edx [ ebp - 0x24 ]
add [ ebp - 0x28 ] edx
inc [ ebp + ecx * 4 - 0x5c ]
mov edx [ ebp - 0x40 ]
inc [ ebp - 0x40 ]
cmp [ ebp - 0x30 ] 0x6
mov [ esi + edx + 0x680 ] cl
jne r-xdata
mov edx [ ebp - 0x20 ]
movzx edx [ ebp + edx * 2 - 0x18 ]
cmp edx [ ebp - 0x24 ]
jge r-xdata
test ecx ecx
jle r-xdata
mov [ ebp + eax - 0xc ] al
inc eax
cmp eax [ ebp - 0x30 ]
jl r-xdata
mov edx [ ebp - 0x20 ]
movzx di [ ecx ]
lea edx [ ebp + edx * 2 - 0x18 ]
add [ edx ] di
inc [ ebp - 0x20 ]
mov edx [ ebp - 0x20 ]
add ecx 0x102
cmp edx [ ebp - 0x30 ]
jl r-xdata
cmp eax [ ebp - 0x2c ]
jg r-xdata
mov edx [ ebp - 0x2c ]
sub edx eax
inc edx
cmp edx 0x32
jne r-xdata
inc [ ebp - 0x20 ]
mov edx [ ebp - 0x20 ]
cmp edx [ ebp - 0x30 ]
jl r-xdata
mov ecx [ ebp - 0x20 ]
mov [ ebp - 0x24 ] edx
and [ ebp - 0x20 ] 0x0
cmp [ ebp - 0x30 ] 0x0
jle r-xdata
lea edi [ esi + 0x4cd2 ]
mov [ ebp - 0x28 ] ecx
mov eax [ ebp - 0x2c ]
mov ecx [ esi + 0x274 ]
inc eax
cmp eax ecx
mov [ ebp - 0x24 ] eax
jl r-xdata
add ecx 0x2c
imul ecx ecx 0x102
movzx edx [ ebx + eax * 2 ]
add ecx 0x2c
imul ecx ecx 0x102
add edx ecx
lea edx [ esi + edx * 4 ]
inc [ edx ]
movzx edx [ ebx + eax * 2 + 0x2 ]
add edx ecx
lea edx [ esi + edx * 4 ]
inc [ edx ]
movzx edx [ ebx + eax * 2 + 0x4 ]
add edx ecx
lea edx [ esi + edx * 4 ]
inc [ edx ]
movzx edx [ ebx + eax * 2 + 0x6 ]
add edx ecx
lea edx [ esi + edx * 4 ]
inc [ edx ]
movzx edx [ ebx + eax * 2 + 0x8 ]
add edx ecx
lea edx [ esi + edx * 4 ]
inc [ edx ]
movzx edx [ ebx + eax * 2 + 0xa ]
add edx ecx
lea edx [ esi + edx * 4 ]
inc [ edx ]
movzx edx [ ebx + eax * 2 + 0xc ]
add edx ecx
lea edx [ esi + edx * 4 ]
inc [ edx ]
movzx edx [ ebx + eax * 2 + 0xe ]
add edx ecx
lea edx [ esi + edx * 4 ]
inc [ edx ]
movzx edx [ ebx + eax * 2 + 0x10 ]
add edx ecx
lea edx [ esi + edx * 4 ]
inc [ edx ]
movzx edx [ ebx + eax * 2 + 0x12 ]
add edx ecx
lea edx [ esi + edx * 4 ]
inc [ edx ]
movzx edx [ ebx + eax * 2 + 0x14 ]
add edx ecx
lea edx [ esi + edx * 4 ]
inc [ edx ]
movzx edx [ ebx + eax * 2 + 0x16 ]
add edx ecx
lea edx [ esi + edx * 4 ]
inc [ edx ]
movzx edx [ ebx + eax * 2 + 0x18 ]
add edx ecx
lea edx [ esi + edx * 4 ]
inc [ edx ]
movzx edx [ ebx + eax * 2 + 0x1a ]
add edx ecx
lea edx [ esi + edx * 4 ]
inc [ edx ]
movzx edx [ ebx + eax * 2 + 0x1c ]
add edx ecx
lea edx [ esi + edx * 4 ]
inc [ edx ]
movzx edx [ ebx + eax * 2 + 0x1e ]
add edx ecx
lea edx [ esi + edx * 4 ]
inc [ edx ]
movzx edx [ ebx + eax * 2 + 0x20 ]
add edx ecx
lea edx [ esi + edx * 4 ]
inc [ edx ]
movzx edx [ ebx + eax * 2 + 0x22 ]
add edx ecx
lea edx [ esi + edx * 4 ]
inc [ edx ]
movzx edx [ ebx + eax * 2 + 0x24 ]
add edx ecx
lea edx [ esi + edx * 4 ]
inc [ edx ]
movzx edx [ ebx + eax * 2 + 0x26 ]
add edx ecx
lea edx [ esi + edx * 4 ]
inc [ edx ]
movzx edx [ ebx + eax * 2 + 0x28 ]
add edx ecx
lea edx [ esi + edx * 4 ]
inc [ edx ]
movzx edx [ ebx + eax * 2 + 0x2a ]
add edx ecx
lea edx [ esi + edx * 4 ]
inc [ edx ]
movzx edx [ ebx + eax * 2 + 0x2c ]
add edx ecx
lea edx [ esi + edx * 4 ]
inc [ edx ]
movzx edx [ ebx + eax * 2 + 0x2e ]
add edx ecx
lea edx [ esi + edx * 4 ]
inc [ edx ]
movzx edx [ ebx + eax * 2 + 0x30 ]
add edx ecx
lea edx [ esi + edx * 4 ]
inc [ edx ]
movzx edx [ ebx + eax * 2 + 0x32 ]
add edx ecx
lea edx [ esi + edx * 4 ]
inc [ edx ]
movzx edx [ ebx + eax * 2 + 0x34 ]
add edx ecx
lea edx [ esi + edx * 4 ]
inc [ edx ]
movzx edx [ ebx + eax * 2 + 0x36 ]
add edx ecx
lea edx [ esi + edx * 4 ]
inc [ edx ]
movzx edx [ ebx + eax * 2 + 0x38 ]
add edx ecx
lea edx [ esi + edx * 4 ]
inc [ edx ]
movzx edx [ ebx + eax * 2 + 0x3a ]
add edx ecx
lea edx [ esi + edx * 4 ]
inc [ edx ]
movzx edx [ ebx + eax * 2 + 0x3c ]
add edx ecx
lea edx [ esi + edx * 4 ]
inc [ edx ]
movzx edx [ ebx + eax * 2 + 0x3e ]
add edx ecx
lea edx [ esi + edx * 4 ]
inc [ edx ]
movzx edx [ ebx + eax * 2 + 0x40 ]
add edx ecx
lea edx [ esi + edx * 4 ]
inc [ edx ]
movzx edx [ ebx + eax * 2 + 0x42 ]
add edx ecx
lea edx [ esi + edx * 4 ]
inc [ edx ]
movzx edx [ ebx + eax * 2 + 0x44 ]
add edx ecx
lea edx [ esi + edx * 4 ]
inc [ edx ]
movzx edx [ ebx + eax * 2 + 0x46 ]
add edx ecx
lea edx [ esi + edx * 4 ]
inc [ edx ]
movzx edx [ ebx + eax * 2 + 0x48 ]
add edx ecx
lea edx [ esi + edx * 4 ]
inc [ edx ]
movzx edx [ ebx + eax * 2 + 0x4a ]
add edx ecx
lea edx [ esi + edx * 4 ]
inc [ edx ]
movzx edx [ ebx + eax * 2 + 0x4c ]
add edx ecx
lea edx [ esi + edx * 4 ]
inc [ edx ]
movzx edx [ ebx + eax * 2 + 0x4e ]
add edx ecx
lea edx [ esi + edx * 4 ]
inc [ edx ]
movzx edx [ ebx + eax * 2 + 0x50 ]
add edx ecx
lea edx [ esi + edx * 4 ]
inc [ edx ]
movzx edx [ ebx + eax * 2 + 0x52 ]
add edx ecx
lea edx [ esi + edx * 4 ]
inc [ edx ]
movzx edx [ ebx + eax * 2 + 0x54 ]
add edx ecx
lea edx [ esi + edx * 4 ]
inc [ edx ]
movzx edx [ ebx + eax * 2 + 0x56 ]
add edx ecx
lea edx [ esi + edx * 4 ]
inc [ edx ]
movzx edx [ ebx + eax * 2 + 0x58 ]
add edx ecx
lea edx [ esi + edx * 4 ]
inc [ edx ]
movzx edx [ ebx + eax * 2 + 0x5a ]
add edx ecx
lea edx [ esi + edx * 4 ]
inc [ edx ]
movzx edx [ ebx + eax * 2 + 0x5c ]
add edx ecx
lea edx [ esi + edx * 4 ]
inc [ edx ]
movzx edx [ ebx + eax * 2 + 0x5e ]
add edx ecx
lea edx [ esi + edx * 4 ]
inc [ edx ]
movzx eax [ ebx + eax * 2 + 0x60 ]
add eax ecx
lea eax [ esi + eax * 4 ]
inc [ eax ]
mov eax [ ebp - 0xc ]
movzx eax [ ebx + eax * 2 ]
add eax ecx
lea eax [ esi + eax * 4 ]
inc [ eax ]
jmp r-xdata
lea eax [ esi + 0x58 ]
xor ecx ecx
mov edi eax
lea eax [ esi + 0x9324 ]
mov [ ebp - 0x28 ] 0xffff9328
sub [ ebp - 0x28 ] esi
mov [ ebp - 0x2c ] eax
mov al [ ebp - 0x35 ]
mov [ edi ] cl
inc edi
dec [ ebp - 0x28 ]
mov [ ebp - 0xc ] al
jne r-xdata
mov al [ ebp - 0x35 ]
inc ecx
mov [ ebp - 0x41 ] al
lea eax [ ebp + ecx - 0xc ]
mov dl [ eax ]
mov [ ebp - 0x35 ] dl
mov dl [ ebp - 0x41 ]
mov [ eax ] dl
mov al [ edi - 0x4652 ]
cmp al [ ebp - 0x35 ]
jne r-xdata
movzx edx [ ebx + eax * 2 ]
add edx ecx
lea edx [ esi + edx * 4 ]
inc [ edx ]
inc eax
cmp eax [ ebp - 0x2c ]
jle r-xdata
inc edx
cmp edx 0x10
jl r-xdata
mov [ eax ] 0x1
xor ecx ecx
cmp edx [ ebp - 0x34 ]
mov [ ebp - 0x24 ] edx
jg r-xdata
mov eax [ ebp - 0x2c ]
movzx eax [ eax + ecx ]
cmp eax [ ebp - 0x34 ]
jle r-xdata
mov dl [ ebp - 0xc ]
mov al [ edi - 0x4652 ]
xor ecx ecx
mov [ ebp - 0x35 ] dl
cmp al dl
je r-xdata
cmp [ edx + edi ] 0x0
je r-xdata
inc ecx
add edi 0x10
cmp ecx 0x10
jl r-xdata
inc [ ebp - 0x20 ]
mov eax [ ebp - 0x20 ]
add [ ebp - 0x2c ] 0x102
cmp eax [ ebp - 0x30 ]
jl r-xdata
xor eax eax
cmp [ ebp - 0x3c ] eax
jle r-xdata
cmp eax edx
jge r-xdata
mov [ ebp - 0x34 ] eax
lea eax [ ebp + ecx - 0x1c ]
mov [ eax ] 0x0
xor edx edx
mov eax [ esi + 0x4c ]
mov [ ebp - 0x34 ] eax
xor edi edi
xor ecx ecx
cmp [ ebp - 0x3c ] ecx
push 0x20
pop edx
mov [ ebp - 0x34 ] ecx
jle r-xdata
add ecx ecx
inc [ ebp - 0x24 ]
mov eax [ ebp - 0x24 ]
cmp eax [ ebp - 0x34 ]
jle r-xdata
mov edx [ ebp - 0x2c ]
movzx edx [ eax + edx ]
cmp edx [ ebp - 0x24 ]
jne r-xdata
inc ecx
cmp ecx [ ebp - 0x3c ]
jl r-xdata
mov edx eax
push 0x1
inc ecx
push ecx
jmp r-xdata
inc eax
cmp eax [ ebp - 0x3c ]
jl r-xdata
mov edx [ ebp - 0x28 ]
add edx eax
add edx [ ebp - 0x2c ]
mov [ esi + edx * 4 ] ecx
inc ecx
cmp [ ebp - 0x34 ] 0x11
jg r-xdata
xor ecx ecx
mov eax esi
cmp [ ebp + edi - 0x1c ] cl
je r-xdata
and [ ebp - 0x24 ] 0x0
lea eax [ esi + 0x58 ]
mov [ ebp - 0x28 ] eax
call sub_1001c58c
inc edi
cmp edi 0x10
pop ecx
jl r-xdata
push 0xbbc
jmp r-xdata
cmp edx 0x1
jl r-xdata
inc [ ebp - 0x24 ]
add [ ebp - 0x28 ] 0x10
cmp [ ebp - 0x24 ] 0x10
jl r-xdata
xor edi edi
push 0xbbd
jmp r-xdata
mov eax [ ebp - 0x24 ]
cmp [ ebp + eax - 0x1c ] 0x0
je r-xdata
cmp [ esi + 0x268 ] 0x3
jl r-xdata
push 0x1
inc ecx
push ecx
jmp r-xdata
mov eax [ esi + 0x4c ]
mov ecx [ ebp - 0x30 ]
mov [ ebp - 0x34 ] eax
push 0x3
mov eax esi
call sub_1001c58c
mov ecx [ ebp - 0x40 ]
push 0xf
call sub_1001c58c
cmp [ ebp - 0x40 ] 0x0
pop ecx
pop ecx
jle r-xdata
mov eax [ esi + 0x4c ]
sub eax [ ebp - 0x34 ]
push eax
push r--data
call sub_10028ff7
add eax 0x40
push eax
call sub_100291ae
add esp 0xc
mov eax [ ebp - 0x28 ]
xor ecx ecx
cmp [ edi + eax ] cl
mov eax esi
je r-xdata
call sub_1001c58c
inc edi
cmp edi 0x10
pop ecx
jl r-xdata
cmp [ esi + 0x268 ] 0x3
jl r-xdata
mov eax [ ebp - 0x40 ]
lea edi [ esi + 0x4cd2 ]
mov [ ebp - 0xc ] eax
mov ecx [ ebp - 0x30 ]
mov eax [ esi + 0x4c ]
mov [ ebp - 0x34 ] eax
test ecx ecx
jle r-xdata
mov eax [ esi + 0x4c ]
sub eax [ ebp - 0x34 ]
push eax
push r--data
call sub_10028ff7
add eax 0x40
push eax
call sub_100291ae
add esp 0xc
push 0x1
xor ecx ecx
mov eax esi
call sub_1001c58c
inc edi
dec [ ebp - 0xc ]
pop ecx
jne r-xdata
xor ecx ecx
inc ecx
push ecx
mov eax esi
call sub_1001c58c
movzx eax [ edi ]
inc [ ebp - 0x28 ]
cmp [ ebp - 0x28 ] eax
pop ecx
jl r-xdata
cmp [ esi + 0x268 ] 0x3
jl r-xdata
lea eax [ esi + 0x9324 ]
mov [ ebp - 0x20 ] eax
mov [ ebp - 0xc ] ecx
and [ ebp - 0x28 ] 0x0
cmp [ edi ] 0x0
jbe r-xdata
mov eax [ esi + 0x4c ]
xor ecx ecx
mov [ ebp - 0x34 ] eax
mov eax [ esi + 0x274 ]
cmp eax ecx
mov [ ebp - 0x3c ] ecx
mov [ ebp - 0x24 ] ecx
jle r-xdata
mov eax [ esi + 0x4c ]
sub eax [ ebp - 0x34 ]
push eax
push r--data
call sub_10028ff7
add eax 0x40
push eax
call sub_100291ae
add esp 0xc
add [ ebp - 0x20 ] 0x102
dec [ ebp - 0xc ]
jne r-xdata
mov eax [ ebp - 0x3c ]
mov edi [ ebp - 0x20 ]
mov [ ebp - 0x28 ] eax
jmp r-xdata
mov eax [ ebp - 0x3c ]
cmp eax [ ebp - 0x40 ]
je r-xdata
lea edx [ ecx + 0x31 ]
cmp edx eax
mov [ ebp - 0xc ] edx
mov [ ebp - 0x2c ] edx
jl r-xdata
mov eax [ ebp - 0x20 ]
movzx ecx [ eax ]
push 0x5
mov eax esi
mov [ ebp - 0x2c ] ecx
call sub_1001c58c
cmp [ ebp - 0x3c ] 0x0
pop ecx
jle r-xdata
movzx eax [ edi ]
cmp [ ebp - 0x2c ] eax
jl r-xdata
cmp [ esi + 0x268 ] 0x3
jl r-xdata
push 0xbbf
jmp r-xdata
mov eax [ ebp - 0x3c ]
lea edi [ eax + esi + 0x680 ]
movzx eax [ edi ]
cmp eax [ ebp - 0x30 ]
jge r-xdata
dec eax
mov [ ebp - 0x2c ] eax
push 0x2
pop ecx
push ecx
mov eax esi
call sub_1001c58c
inc [ ebp - 0x2c ]
pop ecx
jmp r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop ebx
call sub_10025c8d
leave
retn
mov eax [ esi + 0x4c ]
sub eax [ ebp - 0x34 ]
push eax
push r--data
call sub_10028ff7
add eax 0x40
push eax
call sub_100291ae
add esp 0xc
push 0xbbe
jmp r-xdata
cmp [ ebp - 0x30 ] 0x6
jne r-xdata
movzx eax [ edi ]
cmp [ ebp - 0x2c ] eax
mov eax esi
jg r-xdata
cmp ecx [ ebp - 0x2c ]
mov [ ebp - 0x24 ] ecx
jg r-xdata
mov eax [ ebp - 0x2c ]
sub eax ecx
inc eax
cmp eax 0x32
jne r-xdata
push 0x2
push 0x3
pop ecx
call sub_1001c58c
dec [ ebp - 0x2c ]
pop ecx
push 0x1
xor ecx ecx
call sub_1001c58c
inc edi
dec [ ebp - 0x28 ]
pop ecx
jne r-xdata
mov ecx [ ebp - 0x2c ]
mov eax [ esi + 0x274 ]
inc ecx
inc [ ebp - 0x3c ]
cmp ecx eax
mov [ ebp - 0x24 ] ecx
jl r-xdata
movzx eax [ edi ]
mov ecx [ ebp - 0x24 ]
movzx ecx [ ebx + ecx * 2 ]
lea edx [ eax + 0x26 ]
add eax 0x92
imul edx edx 0x102
imul eax eax 0x102
add eax esi
movzx eax [ eax + ecx ]
add edx ecx
mov ecx [ esi + edx * 4 ]
push eax
mov eax esi
call sub_1001c58c
inc [ ebp - 0x24 ]
mov eax [ ebp - 0x24 ]
cmp eax [ ebp - 0x2c ]
pop ecx
jle r-xdata
movzx eax [ edi ]
mov ecx [ ebp - 0x24 ]
movzx ecx [ ebx + ecx * 2 ]
lea edi [ eax + 0x92 ]
add eax 0x26
imul edi edi 0x102
imul eax eax 0x408
add edi esi
movzx edx [ edi + ecx ]
add eax esi
mov ecx [ eax + ecx * 4 ]
mov [ ebp - 0x20 ] eax
push edx
mov eax esi
call sub_1001c58c
mov eax [ ebp - 0x24 ]
movzx eax [ ebx + eax * 2 + 0x2 ]
movzx ecx [ edi + eax ]
push ecx
mov ecx [ ebp - 0x20 ]
mov ecx [ ecx + eax * 4 ]
mov eax esi
call sub_1001c58c
mov eax [ ebp - 0x24 ]
movzx eax [ ebx + eax * 2 + 0x4 ]
movzx ecx [ edi + eax ]
push ecx
mov ecx [ ebp - 0x20 ]
mov ecx [ ecx + eax * 4 ]
mov eax esi
call sub_1001c58c
mov eax [ ebp - 0x24 ]
movzx eax [ ebx + eax * 2 + 0x6 ]
movzx ecx [ edi + eax ]
push ecx
mov ecx [ ebp - 0x20 ]
mov ecx [ ecx + eax * 4 ]
mov eax esi
call sub_1001c58c
mov eax [ ebp - 0x24 ]
movzx eax [ ebx + eax * 2 + 0x8 ]
movzx ecx [ edi + eax ]
push ecx
mov ecx [ ebp - 0x20 ]
mov ecx [ ecx + eax * 4 ]
mov eax esi
call sub_1001c58c
mov eax [ ebp - 0x24 ]
movzx eax [ ebx + eax * 2 + 0xa ]
movzx ecx [ edi + eax ]
push ecx
mov ecx [ ebp - 0x20 ]
mov ecx [ ecx + eax * 4 ]
mov eax esi
call sub_1001c58c
mov eax [ ebp - 0x24 ]
movzx eax [ ebx + eax * 2 + 0xc ]
movzx ecx [ edi + eax ]
push ecx
mov ecx [ ebp - 0x20 ]
mov ecx [ ecx + eax * 4 ]
mov eax esi
call sub_1001c58c
mov eax [ ebp - 0x24 ]
movzx eax [ ebx + eax * 2 + 0xe ]
movzx ecx [ edi + eax ]
push ecx
mov ecx [ ebp - 0x20 ]
mov ecx [ ecx + eax * 4 ]
mov eax esi
call sub_1001c58c
mov eax [ ebp - 0x24 ]
movzx eax [ ebx + eax * 2 + 0x10 ]
movzx ecx [ edi + eax ]
push ecx
mov ecx [ ebp - 0x20 ]
mov ecx [ ecx + eax * 4 ]
mov eax esi
call sub_1001c58c
mov eax [ ebp - 0x24 ]
movzx eax [ ebx + eax * 2 + 0x12 ]
movzx ecx [ edi + eax ]
push ecx
mov ecx [ ebp - 0x20 ]
mov ecx [ ecx + eax * 4 ]
mov eax esi
call sub_1001c58c
mov eax [ ebp - 0x24 ]
movzx eax [ ebx + eax * 2 + 0x14 ]
movzx ecx [ edi + eax ]
push ecx
mov ecx [ ebp - 0x20 ]
mov ecx [ ecx + eax * 4 ]
mov eax esi
call sub_1001c58c
mov eax [ ebp - 0x24 ]
movzx eax [ ebx + eax * 2 + 0x16 ]
movzx ecx [ edi + eax ]
push ecx
mov ecx [ ebp - 0x20 ]
mov ecx [ ecx + eax * 4 ]
mov eax esi
call sub_1001c58c
mov eax [ ebp - 0x24 ]
movzx eax [ ebx + eax * 2 + 0x18 ]
movzx ecx [ edi + eax ]
push ecx
mov ecx [ ebp - 0x20 ]
mov ecx [ ecx + eax * 4 ]
mov eax esi
call sub_1001c58c
mov eax [ ebp - 0x24 ]
movzx eax [ ebx + eax * 2 + 0x1a ]
movzx ecx [ edi + eax ]
push ecx
mov ecx [ ebp - 0x20 ]
mov ecx [ ecx + eax * 4 ]
mov eax esi
call sub_1001c58c
mov eax [ ebp - 0x24 ]
movzx eax [ ebx + eax * 2 + 0x1c ]
movzx ecx [ edi + eax ]
push ecx
mov ecx [ ebp - 0x20 ]
mov ecx [ ecx + eax * 4 ]
mov eax esi
call sub_1001c58c
mov eax [ ebp - 0x24 ]
movzx eax [ ebx + eax * 2 + 0x1e ]
movzx ecx [ edi + eax ]
push ecx
mov ecx [ ebp - 0x20 ]
mov ecx [ ecx + eax * 4 ]
mov eax esi
call sub_1001c58c
mov eax [ ebp - 0x24 ]
movzx eax [ ebx + eax * 2 + 0x20 ]
movzx ecx [ edi + eax ]
add esp 0x40
push ecx
mov ecx [ ebp - 0x20 ]
mov ecx [ ecx + eax * 4 ]
mov eax esi
call sub_1001c58c
mov eax [ ebp - 0x24 ]
movzx eax [ ebx + eax * 2 + 0x22 ]
movzx ecx [ edi + eax ]
push ecx
mov ecx [ ebp - 0x20 ]
mov ecx [ ecx + eax * 4 ]
mov eax esi
call sub_1001c58c
mov eax [ ebp - 0x24 ]
movzx eax [ ebx + eax * 2 + 0x24 ]
movzx ecx [ edi + eax ]
push ecx
mov ecx [ ebp - 0x20 ]
mov ecx [ ecx + eax * 4 ]
mov eax esi
call sub_1001c58c
mov eax [ ebp - 0x24 ]
movzx eax [ ebx + eax * 2 + 0x26 ]
movzx ecx [ edi + eax ]
push ecx
mov ecx [ ebp - 0x20 ]
mov ecx [ ecx + eax * 4 ]
mov eax esi
call sub_1001c58c
mov eax [ ebp - 0x24 ]
movzx eax [ ebx + eax * 2 + 0x28 ]
movzx ecx [ edi + eax ]
push ecx
mov ecx [ ebp - 0x20 ]
mov ecx [ ecx + eax * 4 ]
mov eax esi
call sub_1001c58c
mov eax [ ebp - 0x24 ]
movzx eax [ ebx + eax * 2 + 0x2a ]
movzx ecx [ edi + eax ]
push ecx
mov ecx [ ebp - 0x20 ]
mov ecx [ ecx + eax * 4 ]
mov eax esi
call sub_1001c58c
mov eax [ ebp - 0x24 ]
movzx eax [ ebx + eax * 2 + 0x2c ]
movzx ecx [ edi + eax ]
push ecx
mov ecx [ ebp - 0x20 ]
mov ecx [ ecx + eax * 4 ]
mov eax esi
call sub_1001c58c
mov eax [ ebp - 0x24 ]
movzx eax [ ebx + eax * 2 + 0x2e ]
movzx ecx [ edi + eax ]
push ecx
mov ecx [ ebp - 0x20 ]
mov ecx [ ecx + eax * 4 ]
mov eax esi
call sub_1001c58c
mov eax [ ebp - 0x24 ]
movzx eax [ ebx + eax * 2 + 0x30 ]
movzx ecx [ edi + eax ]
push ecx
mov ecx [ ebp - 0x20 ]
mov ecx [ ecx + eax * 4 ]
mov eax esi
call sub_1001c58c
mov eax [ ebp - 0x24 ]
movzx eax [ ebx + eax * 2 + 0x32 ]
movzx ecx [ edi + eax ]
push ecx
mov ecx [ ebp - 0x20 ]
mov ecx [ ecx + eax * 4 ]
mov eax esi
call sub_1001c58c
mov eax [ ebp - 0x24 ]
movzx eax [ ebx + eax * 2 + 0x34 ]
movzx ecx [ edi + eax ]
push ecx
mov ecx [ ebp - 0x20 ]
mov ecx [ ecx + eax * 4 ]
mov eax esi
call sub_1001c58c
mov eax [ ebp - 0x24 ]
movzx eax [ ebx + eax * 2 + 0x36 ]
movzx ecx [ edi + eax ]
push ecx
mov ecx [ ebp - 0x20 ]
mov ecx [ ecx + eax * 4 ]
mov eax esi
call sub_1001c58c
mov eax [ ebp - 0x24 ]
movzx eax [ ebx + eax * 2 + 0x38 ]
movzx ecx [ edi + eax ]
push ecx
mov ecx [ ebp - 0x20 ]
mov ecx [ ecx + eax * 4 ]
mov eax esi
call sub_1001c58c
mov eax [ ebp - 0x24 ]
movzx eax [ ebx + eax * 2 + 0x3a ]
movzx ecx [ edi + eax ]
push ecx
mov ecx [ ebp - 0x20 ]
mov ecx [ ecx + eax * 4 ]
mov eax esi
call sub_1001c58c
mov eax [ ebp - 0x24 ]
movzx eax [ ebx + eax * 2 + 0x3c ]
movzx ecx [ edi + eax ]
push ecx
mov ecx [ ebp - 0x20 ]
mov ecx [ ecx + eax * 4 ]
mov eax esi
call sub_1001c58c
mov eax [ ebp - 0x24 ]
movzx eax [ ebx + eax * 2 + 0x3e ]
movzx ecx [ edi + eax ]
push ecx
mov ecx [ ebp - 0x20 ]
mov ecx [ ecx + eax * 4 ]
mov eax esi
call sub_1001c58c
mov eax [ ebp - 0x24 ]
movzx eax [ ebx + eax * 2 + 0x40 ]
movzx ecx [ edi + eax ]
add esp 0x40
push ecx
mov ecx [ ebp - 0x20 ]
mov ecx [ ecx + eax * 4 ]
mov eax esi
call sub_1001c58c
mov eax [ ebp - 0x24 ]
movzx eax [ ebx + eax * 2 + 0x42 ]
movzx ecx [ edi + eax ]
push ecx
mov ecx [ ebp - 0x20 ]
mov ecx [ ecx + eax * 4 ]
mov eax esi
call sub_1001c58c
mov eax [ ebp - 0x24 ]
movzx eax [ ebx + eax * 2 + 0x44 ]
movzx ecx [ edi + eax ]
push ecx
mov ecx [ ebp - 0x20 ]
mov ecx [ ecx + eax * 4 ]
mov eax esi
call sub_1001c58c
mov eax [ ebp - 0x24 ]
movzx eax [ ebx + eax * 2 + 0x46 ]
movzx ecx [ edi + eax ]
push ecx
mov ecx [ ebp - 0x20 ]
mov ecx [ ecx + eax * 4 ]
mov eax esi
call sub_1001c58c
mov eax [ ebp - 0x24 ]
movzx eax [ ebx + eax * 2 + 0x48 ]
movzx ecx [ edi + eax ]
push ecx
mov ecx [ ebp - 0x20 ]
mov ecx [ ecx + eax * 4 ]
mov eax esi
call sub_1001c58c
mov eax [ ebp - 0x24 ]
movzx eax [ ebx + eax * 2 + 0x4a ]
movzx ecx [ edi + eax ]
push ecx
mov ecx [ ebp - 0x20 ]
mov ecx [ ecx + eax * 4 ]
mov eax esi
call sub_1001c58c
mov eax [ ebp - 0x24 ]
movzx eax [ ebx + eax * 2 + 0x4c ]
movzx ecx [ edi + eax ]
push ecx
mov ecx [ ebp - 0x20 ]
mov ecx [ ecx + eax * 4 ]
mov eax esi
call sub_1001c58c
mov eax [ ebp - 0x24 ]
movzx eax [ ebx + eax * 2 + 0x4e ]
movzx ecx [ edi + eax ]
push ecx
mov ecx [ ebp - 0x20 ]
mov ecx [ ecx + eax * 4 ]
mov eax esi
call sub_1001c58c
mov eax [ ebp - 0x24 ]
movzx eax [ ebx + eax * 2 + 0x50 ]
movzx ecx [ edi + eax ]
push ecx
mov ecx [ ebp - 0x20 ]
mov ecx [ ecx + eax * 4 ]
mov eax esi
call sub_1001c58c
mov eax [ ebp - 0x24 ]
movzx eax [ ebx + eax * 2 + 0x52 ]
movzx ecx [ edi + eax ]
push ecx
mov ecx [ ebp - 0x20 ]
mov ecx [ ecx + eax * 4 ]
mov eax esi
call sub_1001c58c
mov eax [ ebp - 0x24 ]
movzx eax [ ebx + eax * 2 + 0x54 ]
movzx ecx [ edi + eax ]
push ecx
mov ecx [ ebp - 0x20 ]
mov ecx [ ecx + eax * 4 ]
mov eax esi
call sub_1001c58c
mov eax [ ebp - 0x24 ]
movzx eax [ ebx + eax * 2 + 0x56 ]
movzx ecx [ edi + eax ]
push ecx
mov ecx [ ebp - 0x20 ]
mov ecx [ ecx + eax * 4 ]
mov eax esi
call sub_1001c58c
mov eax [ ebp - 0x24 ]
movzx eax [ ebx + eax * 2 + 0x58 ]
movzx ecx [ edi + eax ]
push ecx
mov ecx [ ebp - 0x20 ]
mov ecx [ ecx + eax * 4 ]
mov eax esi
call sub_1001c58c
mov eax [ ebp - 0x24 ]
movzx eax [ ebx + eax * 2 + 0x5a ]
movzx ecx [ edi + eax ]
push ecx
mov ecx [ ebp - 0x20 ]
mov ecx [ ecx + eax * 4 ]
mov eax esi
call sub_1001c58c
mov eax [ ebp - 0x24 ]
movzx eax [ ebx + eax * 2 + 0x5c ]
movzx ecx [ edi + eax ]
push ecx
mov ecx [ ebp - 0x20 ]
mov ecx [ ecx + eax * 4 ]
mov eax esi
call sub_1001c58c
mov eax [ ebp - 0x24 ]
movzx eax [ ebx + eax * 2 + 0x5e ]
movzx ecx [ edi + eax ]
push ecx
mov ecx [ ebp - 0x20 ]
mov ecx [ ecx + eax * 4 ]
mov eax esi
call sub_1001c58c
mov eax [ ebp - 0x24 ]
movzx eax [ ebx + eax * 2 + 0x60 ]
movzx ecx [ edi + eax ]
add esp 0x40
push ecx
mov ecx [ ebp - 0x20 ]
mov ecx [ ecx + eax * 4 ]
mov eax esi
call sub_1001c58c
mov eax [ ebp - 0xc ]
movzx eax [ ebx + eax * 2 ]
movzx ecx [ edi + eax ]
push ecx
mov ecx [ ebp - 0x20 ]
mov ecx [ ecx + eax * 4 ]
mov eax esi
call sub_1001c58c
pop ecx
pop ecx
jmp r-xdata
sub_1001e09f
push ecx
push ebx
push esi
mov esi eax
push edi
mov edi [ esi + 0x44 ]
xor ebx ebx
cmp edi ebx
jle r-xdata
mov eax [ esi + 0x14 ]
add eax [ esi + 0x44 ]
cmp [ esi + 0x26c ] 0x1
push 0x8
mov [ esi + 0x2c ] eax
pop edi
jne r-xdata
lea eax [ esi + 0x260 ]
mov edx [ eax ]
not edx
lea ecx [ esi + 0x264 ]
mov [ eax ] edx
mov eax [ ecx ]
rol eax 0x1
xor eax edx
mov [ ecx ] eax
mov ecx [ esi + 0x26c ]
cmp ecx 0x1
jle r-xdata
cmp [ esi + 0x44 ] ebx
jle r-xdata
push edi
push 0x42
pop ecx
mov eax esi
mov [ esi + 0x25c ] ebx
mov [ esi + 0x258 ] ebx
call sub_1001c58c
pop ecx
push edi
push 0x5a
pop ecx
call sub_1001c58c
pop ecx
push edi
push 0x68
pop ecx
call sub_1001c58c
mov al [ esi + 0x270 ]
add al 0x30
pop ecx
movzx ecx al
push edi
mov eax esi
call sub_1001c58c
pop ecx
cmp [ esi + 0x268 ] 0x2
jl r-xdata
mov [ esi + 0x4c ] ebx
cmp [ esp + 0x14 ] bl
je r-xdata
push edi
push 0x31
pop ecx
mov eax esi
call sub_1001c58c
pop ecx
push edi
push 0x41
pop ecx
call sub_1001c58c
pop ecx
push edi
push 0x59
pop ecx
call sub_1001c58c
pop ecx
push edi
push 0x26
pop ecx
call sub_1001c58c
pop ecx
push edi
push 0x53
pop ecx
call sub_1001c58c
pop ecx
push edi
push 0x59
pop ecx
call sub_1001c58c
mov ebx [ esi + 0x260 ]
pop ecx
call sub_1001c5e7
push 0x1
xor ecx ecx
call sub_1001c58c
pop ecx
mov ecx [ esi + 0x1c ]
push 0x18
call sub_1001c58c
pop ecx
call sub_1001c624
call sub_1001c7ba
xor ebx ebx
mov edi esi
call sub_1002158b
push edi
push eax
push edx
push ecx
push r--data
call sub_10028ff7
add eax 0x40
push eax
call sub_100291ae
add esp 0x18
pop edi
pop esi
pop ebx
pop ecx
retn
push edi
push 0x17
pop ecx
mov eax esi
call sub_1001c58c
pop ecx
push edi
push 0x72
pop ecx
call sub_1001c58c
pop ecx
push edi
push 0x45
pop ecx
call sub_1001c58c
pop ecx
push edi
push 0x38
pop ecx
call sub_1001c58c
pop ecx
push edi
push 0x50
pop ecx
call sub_1001c58c
pop ecx
push edi
mov ecx 0x90
call sub_1001c58c
lea edi [ esi + 0x264 ]
mov ebx [ edi ]
pop ecx
call sub_1001c5e7
cmp [ esi + 0x268 ] 0x2
jl r-xdata
cmp [ esi + 0x25c ] 0x0
jle r-xdata
push [ edi ]
push r--data
call sub_10028ff7
add eax 0x40
push eax
call sub_100291ae
add esp 0xc
lea eax [ esi + 0x258 ]
mov ecx [ esi + 0x4c ]
mov bl [ eax + 0x3 ]
mov edx [ esi + 0x2c ]
mov [ ecx + edx ] bl
inc [ esi + 0x4c ]
shl [ eax ] 0x8
add [ esi + 0x25c ] 0xfffffff8
cmp [ esi + 0x25c ] 0x0
jg r-xdata
sub_1001e272
push ebp
mov ebp esp
sub esp 0x80
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebx + 0x4 ]
push esi
mov esi [ ebx ]
xor ecx ecx
push edi
cmp eax 0xa
jne r-xdata
mov ecx [ ebx + 0xfa14 ]
mov [ ebp - 0x10 ] ecx
mov ecx [ ebx + 0xfa18 ]
mov [ ebp - 0x1c ] ecx
mov ecx [ ebx + 0xfa1c ]
mov [ ebp - 0x3c ] ecx
mov ecx [ ebx + 0xfa20 ]
mov [ ebp - 0x60 ] ecx
mov ecx [ ebx + 0xfa24 ]
mov [ ebp - 0x44 ] ecx
mov ecx [ ebx + 0xfa28 ]
mov [ ebp - 0x50 ] ecx
mov ecx [ ebx + 0xfa2c ]
mov [ ebp - 0x64 ] ecx
mov ecx [ ebx + 0xfa30 ]
mov [ ebp - 0x24 ] ecx
mov ecx [ ebx + 0xfa34 ]
mov [ ebp - 0x28 ] ecx
mov ecx [ ebx + 0xfa38 ]
mov [ ebp - 0x54 ] ecx
mov ecx [ ebx + 0xfa3c ]
mov [ ebp - 0x30 ] ecx
mov ecx [ ebx + 0xfa40 ]
mov [ ebp - 0x18 ] ecx
mov ecx [ ebx + 0xfa44 ]
mov [ ebp - 0x20 ] ecx
mov ecx [ ebx + 0xfa48 ]
mov [ ebp - 0x74 ] ecx
mov ecx [ ebx + 0xfa4c ]
mov [ ebp - 0x34 ] ecx
mov ecx [ ebx + 0xfa50 ]
mov [ ebp - 0x80 ] ecx
mov ecx [ ebx + 0xfa54 ]
mov [ ebp - 0x14 ] ecx
mov ecx [ ebx + 0xfa58 ]
mov [ ebp - 0x2c ] ecx
mov ecx [ ebx + 0xfa5c ]
mov [ ebp - 0x6c ] ecx
mov ecx [ ebx + 0xfa60 ]
mov [ ebp - 0x70 ] ecx
mov ecx [ ebx + 0xfa64 ]
mov [ ebp - 0x5c ] ecx
mov ecx [ ebx + 0xfa68 ]
mov [ ebp - 0x48 ] ecx
mov ecx [ ebx + 0xfa6c ]
mov [ ebp - 0x40 ] ecx
mov ecx [ ebx + 0xfa70 ]
add eax 0xfffffff6
mov [ ebp - 0x4c ] ecx
cmp eax 0x28
ja r-xdata
mov [ ebx + 0xfa14 ] ecx
mov [ ebx + 0xfa18 ] ecx
mov [ ebx + 0xfa1c ] ecx
mov [ ebx + 0xfa20 ] ecx
mov [ ebx + 0xfa24 ] ecx
mov [ ebx + 0xfa28 ] ecx
mov [ ebx + 0xfa2c ] ecx
mov [ ebx + 0xfa30 ] ecx
mov [ ebx + 0xfa34 ] ecx
mov [ ebx + 0xfa38 ] ecx
mov [ ebx + 0xfa3c ] ecx
mov [ ebx + 0xfa40 ] ecx
mov [ ebx + 0xfa44 ] ecx
mov [ ebx + 0xfa48 ] ecx
mov [ ebx + 0xfa4c ] ecx
mov [ ebx + 0xfa50 ] ecx
mov [ ebx + 0xfa54 ] ecx
mov [ ebx + 0xfa58 ] ecx
mov [ ebx + 0xfa5c ] ecx
mov [ ebx + 0xfa60 ] ecx
mov [ ebx + 0xfa64 ] ecx
mov [ ebx + 0xfa68 ] ecx
mov [ ebx + 0xfa6c ] ecx
mov [ ebx + 0xfa70 ] ecx
push 0xfa1
call sub_1001b111
mov edi 0xff
jmp [ eax * 4 + jump_table_1002009a ]
mov [ ebx + 0x4 ] 0xa
jmp r-xdata
mov [ ebx + 0x4 ] 0xb
jmp r-xdata
mov [ ebx + 0x4 ] 0xc
jmp r-xdata
mov [ ebx + 0x4 ] 0xd
jmp r-xdata
mov [ ebx + 0x4 ] 0xe
jmp r-xdata
mov [ ebx + 0x4 ] 0xf
jmp r-xdata
mov [ ebx + 0x4 ] 0x10
jmp r-xdata
mov [ ebx + 0x4 ] 0x11
jmp r-xdata
mov [ ebx + 0x4 ] 0x12
jmp r-xdata
mov [ ebx + 0x4 ] 0x13
jmp r-xdata
mov [ ebx + 0x4 ] 0x14
jmp r-xdata
mov [ ebx + 0x4 ] 0x15
jmp r-xdata
mov [ ebx + 0x4 ] 0x16
jmp r-xdata
mov [ ebx + 0x4 ] 0x17
jmp r-xdata
mov [ ebx + 0x4 ] 0x18
jmp r-xdata
mov [ ebx + 0x4 ] 0x19
jmp r-xdata
mov [ ebx + 0x4 ] 0x1a
jmp r-xdata
mov [ ebx + 0x4 ] 0x1b
jmp r-xdata
mov [ ebx + 0x4 ] 0x1c
jmp r-xdata
mov [ ebx + 0x4 ] 0x1d
jmp r-xdata
mov [ ebx + 0x4 ] 0x1e
jmp r-xdata
mov [ ebx + 0x4 ] 0x1f
jmp r-xdata
mov [ ebx + 0x4 ] 0x20
jmp r-xdata
mov [ ebx + 0x4 ] 0x23
jmp r-xdata
mov [ ebx + 0x4 ] 0x22
jmp r-xdata
mov [ ebx + 0x4 ] 0x21
jmp r-xdata
mov ecx [ ebp - 0x14 ]
mov [ ebx + 0x4 ] 0x24
jmp r-xdata
mov [ ebx + 0x4 ] 0x25
jmp r-xdata
mov ecx [ ebp - 0x14 ]
mov [ ebx + 0x4 ] 0x26
jmp r-xdata
mov [ ebx + 0x4 ] 0x27
jmp r-xdata
mov ecx [ ebp - 0x14 ]
mov [ ebx + 0x4 ] 0x28
jmp r-xdata
mov [ ebx + 0x4 ] 0x29
jmp r-xdata
mov [ ebx + 0x4 ] 0x2a
jmp r-xdata
mov [ ebx + 0x4 ] 0x2b
jmp r-xdata
mov [ ebx + 0x4 ] 0x2c
jmp r-xdata
mov [ ebx + 0x4 ] 0x2d
jmp r-xdata
mov [ ebx + 0x4 ] 0x2e
jmp r-xdata
mov [ ebx + 0x4 ] 0x2f
jmp r-xdata
mov [ ebx + 0x4 ] 0x30
jmp r-xdata
mov [ ebx + 0x4 ] 0x31
jmp r-xdata
mov [ ebx + 0x4 ] 0x32
jmp r-xdata
cmp [ ebx + 0x20 ] 0x8
jl r-xdata
cmp [ ebx + 0x20 ] 0x8
jl r-xdata
cmp [ ebx + 0x20 ] 0x8
jl r-xdata
cmp [ ebx + 0x20 ] 0x8
jl r-xdata
cmp [ ebx + 0x20 ] 0x8
jl r-xdata
cmp [ ebx + 0x20 ] 0x8
jl r-xdata
cmp [ ebx + 0x20 ] 0x8
jl r-xdata
cmp [ ebx + 0x20 ] 0x8
jl r-xdata
cmp [ ebx + 0x20 ] 0x8
jl r-xdata
cmp [ ebx + 0x20 ] 0x8
jl r-xdata
cmp [ ebx + 0x20 ] 0x8
jl r-xdata
cmp [ ebx + 0x20 ] 0x8
jl r-xdata
cmp [ ebx + 0x20 ] 0x8
jl r-xdata
cmp [ ebx + 0x20 ] 0x8
jl r-xdata
cmp [ ebx + 0x20 ] 0x1
jl r-xdata
cmp [ ebx + 0x20 ] 0x8
jl r-xdata
cmp [ ebx + 0x20 ] 0x8
jl r-xdata
cmp [ ebx + 0x20 ] 0x8
jl r-xdata
cmp [ ebx + 0x20 ] 0x1
jl r-xdata
cmp [ ebx + 0x20 ] 0x1
jl r-xdata
cmp [ ebx + 0x20 ] 0x3
jl r-xdata
cmp [ ebx + 0x20 ] 0xf
jl r-xdata
cmp [ ebx + 0x20 ] 0x1
jl r-xdata
cmp [ ebx + 0x20 ] 0x1
jl r-xdata
cmp [ ebx + 0x20 ] 0x1
jl r-xdata
cmp [ ebx + 0x20 ] 0x5
jl r-xdata
cmp [ ebx + 0x20 ] ecx
jl r-xdata
cmp [ ebx + 0x20 ] 0x1
jl r-xdata
cmp [ ebx + 0x20 ] ecx
jl r-xdata
cmp [ ebx + 0x20 ] 0x1
jl r-xdata
cmp [ ebx + 0x20 ] ecx
jl r-xdata
cmp [ ebx + 0x20 ] 0x1
jl r-xdata
cmp [ ebx + 0x20 ] 0x8
jl r-xdata
cmp [ ebx + 0x20 ] 0x8
jl r-xdata
cmp [ ebx + 0x20 ] 0x8
jl r-xdata
cmp [ ebx + 0x20 ] 0x8
jl r-xdata
cmp [ ebx + 0x20 ] 0x8
jl r-xdata
cmp [ ebx + 0x20 ] 0x8
jl r-xdata
cmp [ ebx + 0x20 ] 0x8
jl r-xdata
cmp [ ebx + 0x20 ] 0x8
jl r-xdata
cmp [ ebx + 0x20 ] 0x8
jl r-xdata
mov eax [ ebx ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov edx [ ebx + 0x20 ]
mov eax [ ebx + 0x1c ]
lea ecx [ edx - 0x8 ]
shr eax cl
add edx 0xfffffff8
mov [ ebx + 0x20 ] edx
and eax edi
cmp al 0x42
je r-xdata
mov eax [ ebx ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov edx [ ebx + 0x20 ]
mov eax [ ebx + 0x1c ]
lea ecx [ edx - 0x8 ]
shr eax cl
add edx 0xfffffff8
mov [ ebx + 0x20 ] edx
and eax edi
cmp al 0x5a
jne r-xdata
mov eax [ ebx ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov edx [ ebx + 0x20 ]
mov eax [ ebx + 0x1c ]
lea ecx [ edx - 0x8 ]
shr eax cl
add edx 0xfffffff8
mov [ ebx + 0x20 ] edx
and eax edi
cmp al 0x68
jne r-xdata
mov eax [ ebx ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov edx [ ebx + 0x20 ]
mov eax [ ebx + 0x1c ]
lea ecx [ edx - 0x8 ]
shr eax cl
add edx 0xfffffff8
mov [ ebx + 0x20 ] edx
and eax edi
cmp eax 0x31
mov [ ebx + 0x24 ] eax
jl r-xdata
mov eax [ ebx ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov edx [ ebx + 0x20 ]
mov eax [ ebx + 0x1c ]
lea ecx [ edx - 0x8 ]
shr eax cl
add edx 0xfffffff8
mov [ ebx + 0x20 ] edx
and eax edi
cmp al 0x17
je r-xdata
mov eax [ ebx ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov edx [ ebx + 0x20 ]
mov eax [ ebx + 0x1c ]
lea ecx [ edx - 0x8 ]
shr eax cl
add edx 0xfffffff8
mov [ ebx + 0x20 ] edx
and eax edi
cmp al 0x41
jne r-xdata
mov eax [ ebx ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov edx [ ebx + 0x20 ]
mov eax [ ebx + 0x1c ]
lea ecx [ edx - 0x8 ]
shr eax cl
add edx 0xfffffff8
mov [ ebx + 0x20 ] edx
and eax edi
cmp al 0x59
jne r-xdata
mov eax [ ebx ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov edx [ ebx + 0x20 ]
mov eax [ ebx + 0x1c ]
lea ecx [ edx - 0x8 ]
shr eax cl
add edx 0xfffffff8
mov [ ebx + 0x20 ] edx
and eax edi
cmp al 0x26
jne r-xdata
mov eax [ ebx ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov edx [ ebx + 0x20 ]
mov eax [ ebx + 0x1c ]
lea ecx [ edx - 0x8 ]
shr eax cl
add edx 0xfffffff8
mov [ ebx + 0x20 ] edx
and eax edi
cmp al 0x53
jne r-xdata
mov eax [ ebx ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov edx [ ebx + 0x20 ]
mov eax [ ebx + 0x1c ]
lea ecx [ edx - 0x8 ]
shr eax cl
add edx 0xfffffff8
mov [ ebx + 0x20 ] edx
and eax edi
cmp al 0x59
je r-xdata
mov eax [ ebx ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov edx [ ebx + 0x20 ]
mov eax [ ebx + 0x1c ]
lea ecx [ edx - 0x8 ]
shr eax cl
add edx 0xfffffff8
mov [ ebx + 0x20 ] edx
lea ecx [ ebx + 0xc58 ]
mov edx [ ecx ]
and eax edi
movzx eax al
shl edx 0x8
or edx eax
mov [ ecx ] edx
mov eax [ ebx ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov edx [ ebx + 0x20 ]
mov eax [ ebx + 0x1c ]
lea ecx [ edx - 0x8 ]
shr eax cl
add edx 0xfffffff8
mov [ ebx + 0x20 ] edx
lea ecx [ ebx + 0xc58 ]
mov edx [ ecx ]
and eax edi
movzx eax al
shl edx 0x8
or edx eax
mov [ ecx ] edx
mov eax [ ebx ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov edx [ ebx + 0x20 ]
mov eax [ ebx + 0x1c ]
lea ecx [ edx - 0x8 ]
shr eax cl
add edx 0xfffffff8
mov [ ebx + 0x20 ] edx
lea ecx [ ebx + 0xc58 ]
mov edx [ ecx ]
and eax edi
movzx eax al
shl edx 0x8
or edx eax
mov [ ecx ] edx
mov eax [ ebx ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov edx [ ebx + 0x20 ]
mov eax [ ebx + 0x1c ]
lea ecx [ edx - 0x8 ]
shr eax cl
add edx 0xfffffff8
mov [ ebx + 0x20 ] edx
lea ecx [ ebx + 0xc58 ]
mov edx [ ecx ]
and eax edi
movzx eax al
shl edx 0x8
or edx eax
mov [ ecx ] edx
mov eax [ ebx ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov edx [ ebx + 0x20 ]
mov eax [ ebx + 0x1c ]
lea ecx [ edx - 0x1 ]
shr eax cl
and eax 0x1
dec edx
and [ ebx + 0x34 ] 0x0
mov [ ebx + 0x20 ] edx
mov [ ebx + 0x10 ] al
mov eax [ ebx ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov edx [ ebx + 0x20 ]
mov eax [ ebx + 0x1c ]
lea ecx [ edx - 0x8 ]
shr eax cl
mov ecx [ ebx + 0x34 ]
add edx 0xfffffff8
shl ecx 0x8
and eax edi
movzx eax al
or ecx eax
mov [ ebx + 0x20 ] edx
mov [ ebx + 0x34 ] ecx
mov eax [ ebx ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov edx [ ebx + 0x20 ]
mov eax [ ebx + 0x1c ]
lea ecx [ edx - 0x8 ]
shr eax cl
mov ecx [ ebx + 0x34 ]
add edx 0xfffffff8
shl ecx 0x8
and eax edi
movzx eax al
or ecx eax
mov [ ebx + 0x20 ] edx
mov [ ebx + 0x34 ] ecx
mov eax [ ebx ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov eax [ ebx + 0x20 ]
mov edx [ ebx + 0x1c ]
lea ecx [ eax - 0x8 ]
shr edx cl
add eax 0xfffffff8
mov [ ebx + 0x20 ] eax
mov eax [ ebx + 0x34 ]
and edx edi
movzx ecx dl
shl eax 0x8
or eax ecx
mov [ ebx + 0x34 ] eax
jl r-xdata
mov eax [ ebx ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov edx [ ebx + 0x20 ]
mov eax [ ebx + 0x1c ]
lea ecx [ edx - 0x1 ]
shr eax cl
mov ecx [ ebp - 0x10 ]
and eax 0x1
dec edx
cmp al 0x1
sete al
inc [ ebp - 0x10 ]
mov [ ebx + 0x20 ] edx
mov [ ebx + ecx + 0xd6c ] al
mov eax [ ebx ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov edx [ ebx + 0x20 ]
mov eax [ ebx + 0x1c ]
lea ecx [ edx - 0x1 ]
shr eax cl
and eax 0x1
dec edx
mov [ ebx + 0x20 ] edx
cmp al 0x1
jne r-xdata
mov eax [ ebx ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov edx [ ebx + 0x20 ]
mov eax [ ebx + 0x1c ]
lea ecx [ edx - 0x3 ]
shr eax cl
add edx 0xfffffffd
mov [ ebx + 0x20 ] edx
and eax 0x7
cmp eax 0x2
mov [ ebp - 0x44 ] eax
jl r-xdata
mov eax [ ebx ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov edx [ ebx + 0x20 ]
mov eax [ ebx + 0x1c ]
lea ecx [ edx - 0xf ]
shr eax cl
add edx 0xfffffff1
mov [ ebx + 0x20 ] edx
and eax 0x7fff
cmp eax 0x1
mov [ ebp - 0x50 ] eax
jl r-xdata
mov eax [ ebx ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov edx [ ebx + 0x20 ]
mov eax [ ebx + 0x1c ]
lea ecx [ edx - 0x1 ]
shr eax cl
and eax 0x1
dec edx
mov [ ebx + 0x20 ] edx
test al al
jne r-xdata
mov eax [ ebx ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov edx [ ebx + 0x20 ]
mov eax [ ebx + 0x1c ]
lea ecx [ edx - 0x1 ]
shr eax cl
and eax 0x1
dec edx
mov [ ebx + 0x20 ] edx
test al al
jne r-xdata
mov eax [ ebx ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov edx [ ebx + 0x20 ]
mov eax [ ebx + 0x1c ]
lea ecx [ edx - 0x1 ]
shr eax cl
and eax 0x1
dec edx
mov [ ebx + 0x20 ] edx
test al al
jne r-xdata
mov eax [ ebx ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov edx [ ebx + 0x20 ]
mov eax [ ebx + 0x1c ]
lea ecx [ edx - 0x5 ]
shr eax cl
add edx 0xfffffffb
mov [ ebx + 0x20 ] edx
and eax 0x1f
and [ ebp - 0x10 ] 0x0
mov [ ebp - 0x34 ] eax
jmp r-xdata
mov eax [ ebx ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov esi [ ebp - 0x14 ]
mov edx [ ebx + 0x20 ]
mov eax [ ebx + 0x1c ]
sub edx esi
xor edi edi
mov ecx edx
shr eax cl
inc edi
mov ecx esi
shl edi cl
dec edi
and eax edi
mov [ ebp - 0x2c ] eax
jmp r-xdata
mov eax [ ebx ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov edx [ ebx + 0x20 ]
mov eax [ ebx + 0x1c ]
mov esi [ ebp - 0x14 ]
lea ecx [ edx - 0x1 ]
shr eax cl
mov ecx [ ebp - 0x2c ]
add ecx ecx
and eax 0x1
dec edx
or ecx eax
mov [ ebp - 0x6c ] eax
mov [ ebp - 0x2c ] ecx
mov eax [ ebx ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov esi [ ebp - 0x14 ]
mov edx [ ebx + 0x20 ]
mov eax [ ebx + 0x1c ]
sub edx esi
xor edi edi
mov ecx edx
shr eax cl
inc edi
mov ecx esi
shl edi cl
dec edi
and eax edi
mov eax [ ebx ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov edx [ ebx + 0x20 ]
mov eax [ ebx + 0x1c ]
mov esi [ ebp - 0x14 ]
lea ecx [ edx - 0x1 ]
shr eax cl
mov ecx [ ebp - 0x2c ]
add ecx ecx
and eax 0x1
dec edx
mov [ ebp - 0x6c ] eax
or eax ecx
jmp r-xdata
mov eax [ ebx ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov edx [ ebx + 0x20 ]
sub edx [ ebp - 0x14 ]
mov eax [ ebx + 0x1c ]
xor esi esi
mov ecx edx
shr eax cl
mov ecx [ ebp - 0x14 ]
inc esi
shl esi cl
dec esi
and eax esi
jmp r-xdata
mov eax [ ebx ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov edx [ ebx + 0x20 ]
mov eax [ ebx + 0x1c ]
lea ecx [ edx - 0x1 ]
shr eax cl
mov ecx [ ebp - 0x2c ]
add ecx ecx
and eax 0x1
dec edx
mov [ ebp - 0x6c ] eax
or eax ecx
mov eax [ ebx ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov edx [ ebx + 0x20 ]
mov eax [ ebx + 0x1c ]
lea ecx [ edx - 0x8 ]
shr eax cl
add edx 0xfffffff8
mov [ ebx + 0x20 ] edx
and eax edi
cmp al 0x72
jne r-xdata
mov eax [ ebx ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov edx [ ebx + 0x20 ]
mov eax [ ebx + 0x1c ]
lea ecx [ edx - 0x8 ]
shr eax cl
add edx 0xfffffff8
mov [ ebx + 0x20 ] edx
and eax edi
cmp al 0x45
jne r-xdata
mov eax [ ebx ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov edx [ ebx + 0x20 ]
mov eax [ ebx + 0x1c ]
lea ecx [ edx - 0x8 ]
shr eax cl
add edx 0xfffffff8
mov [ ebx + 0x20 ] edx
and eax edi
cmp al 0x38
jne r-xdata
mov eax [ ebx ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov edx [ ebx + 0x20 ]
mov eax [ ebx + 0x1c ]
lea ecx [ edx - 0x8 ]
shr eax cl
add edx 0xfffffff8
mov [ ebx + 0x20 ] edx
and eax edi
cmp al 0x50
jne r-xdata
mov eax [ ebx ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov edx [ ebx + 0x20 ]
mov eax [ ebx + 0x1c ]
lea ecx [ edx - 0x8 ]
shr eax cl
add edx 0xfffffff8
mov [ ebx + 0x20 ] edx
and eax edi
cmp al 0x90
jne r-xdata
mov eax [ ebx ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov edx [ ebx + 0x20 ]
mov eax [ ebx + 0x1c ]
lea ecx [ edx - 0x8 ]
shr eax cl
add edx 0xfffffff8
mov [ ebx + 0x20 ] edx
lea ecx [ ebx + 0xc5c ]
mov edx [ ecx ]
and eax edi
movzx eax al
shl edx 0x8
or edx eax
mov [ ecx ] edx
mov eax [ ebx ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov edx [ ebx + 0x20 ]
mov eax [ ebx + 0x1c ]
lea ecx [ edx - 0x8 ]
shr eax cl
add edx 0xfffffff8
mov [ ebx + 0x20 ] edx
lea ecx [ ebx + 0xc5c ]
mov edx [ ecx ]
and eax edi
movzx eax al
shl edx 0x8
or edx eax
mov [ ecx ] edx
mov eax [ ebx ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov edx [ ebx + 0x20 ]
mov eax [ ebx + 0x1c ]
lea ecx [ edx - 0x8 ]
shr eax cl
add edx 0xfffffff8
mov [ ebx + 0x20 ] edx
lea ecx [ ebx + 0xc5c ]
mov edx [ ecx ]
and eax edi
movzx eax al
shl edx 0x8
or edx eax
mov [ ecx ] edx
mov eax [ ebx ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov edx [ ebx + 0x20 ]
mov eax [ ebx + 0x1c ]
lea ecx [ edx - 0x8 ]
shr eax cl
add edx 0xfffffff8
mov [ ebx + 0x20 ] edx
lea ecx [ ebx + 0xc5c ]
mov edx [ ecx ]
and eax edi
movzx eax al
shl edx 0x8
or edx eax
mov [ ecx ] edx
mov [ ebx + 0x4 ] 0x1
push 0x4
jmp r-xdata
xor eax eax
mov edx [ eax ]
movzx edx [ edx ]
mov ecx [ ebx + 0x1c ]
add [ ebx + 0x20 ] 0x8
shl ecx 0x8
or ecx edx
mov [ ebx + 0x1c ] ecx
inc [ eax ]
mov eax [ ebx ]
dec [ eax + 0x4 ]
mov eax [ ebx ]
inc [ eax + 0x8 ]
mov eax [ ebx ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
push 0xfffffffb
jmp r-xdata
mov edx [ eax ]
movzx edx [ edx ]
mov ecx [ ebx + 0x1c ]
add [ ebx + 0x20 ] 0x8
shl ecx 0x8
or ecx edx
mov [ ebx + 0x1c ] ecx
inc [ eax ]
mov eax [ ebx ]
dec [ eax + 0x4 ]
mov eax [ ebx ]
inc [ eax + 0x8 ]
mov eax [ ebx ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov edx [ eax ]
movzx edx [ edx ]
mov ecx [ ebx + 0x1c ]
add [ ebx + 0x20 ] 0x8
shl ecx 0x8
or ecx edx
mov [ ebx + 0x1c ] ecx
inc [ eax ]
mov eax [ ebx ]
dec [ eax + 0x4 ]
mov eax [ ebx ]
inc [ eax + 0x8 ]
mov eax [ ebx ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov edx [ eax ]
movzx edx [ edx ]
mov ecx [ ebx + 0x1c ]
add [ ebx + 0x20 ] 0x8
shl ecx 0x8
or ecx edx
mov [ ebx + 0x1c ] ecx
inc [ eax ]
mov eax [ ebx ]
dec [ eax + 0x4 ]
mov eax [ ebx ]
inc [ eax + 0x8 ]
mov eax [ ebx ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
cmp eax 0x39
jg r-xdata
mov edx [ eax ]
movzx edx [ edx ]
mov ecx [ ebx + 0x1c ]
add [ ebx + 0x20 ] 0x8
shl ecx 0x8
or ecx edx
mov [ ebx + 0x1c ] ecx
inc [ eax ]
mov eax [ ebx ]
dec [ eax + 0x4 ]
mov eax [ ebx ]
inc [ eax + 0x8 ]
mov eax [ ebx ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
cmp al 0x31
jne r-xdata
mov edx [ eax ]
movzx edx [ edx ]
mov ecx [ ebx + 0x1c ]
add [ ebx + 0x20 ] 0x8
shl ecx 0x8
or ecx edx
mov [ ebx + 0x1c ] ecx
inc [ eax ]
mov eax [ ebx ]
dec [ eax + 0x4 ]
mov eax [ ebx ]
inc [ eax + 0x8 ]
mov eax [ ebx ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
push 0xfffffffc
jmp r-xdata
mov edx [ eax ]
movzx edx [ edx ]
mov ecx [ ebx + 0x1c ]
add [ ebx + 0x20 ] 0x8
shl ecx 0x8
or ecx edx
mov [ ebx + 0x1c ] ecx
inc [ eax ]
mov eax [ ebx ]
dec [ eax + 0x4 ]
mov eax [ ebx ]
inc [ eax + 0x8 ]
mov eax [ ebx ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov edx [ eax ]
movzx edx [ edx ]
mov ecx [ ebx + 0x1c ]
add [ ebx + 0x20 ] 0x8
shl ecx 0x8
or ecx edx
mov [ ebx + 0x1c ] ecx
inc [ eax ]
mov eax [ ebx ]
dec [ eax + 0x4 ]
mov eax [ ebx ]
inc [ eax + 0x8 ]
mov eax [ ebx ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov edx [ eax ]
movzx edx [ edx ]
mov ecx [ ebx + 0x1c ]
add [ ebx + 0x20 ] 0x8
shl ecx 0x8
or ecx edx
mov [ ebx + 0x1c ] ecx
inc [ eax ]
mov eax [ ebx ]
dec [ eax + 0x4 ]
mov eax [ ebx ]
inc [ eax + 0x8 ]
mov eax [ ebx ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov edx [ eax ]
movzx edx [ edx ]
mov ecx [ ebx + 0x1c ]
add [ ebx + 0x20 ] 0x8
shl ecx 0x8
or ecx edx
mov [ ebx + 0x1c ] ecx
inc [ eax ]
mov eax [ ebx ]
dec [ eax + 0x4 ]
mov eax [ ebx ]
inc [ eax + 0x8 ]
mov eax [ ebx ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
inc [ ebx + 0x2c ]
cmp [ ebx + 0x30 ] 0x2
mov eax [ ebx + 0x2c ]
jl r-xdata
mov edx [ eax ]
movzx edx [ edx ]
mov ecx [ ebx + 0x1c ]
add [ ebx + 0x20 ] 0x8
shl ecx 0x8
or ecx edx
mov [ ebx + 0x1c ] ecx
inc [ eax ]
mov eax [ ebx ]
dec [ eax + 0x4 ]
mov eax [ ebx ]
inc [ eax + 0x8 ]
mov eax [ ebx ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov edx [ eax ]
movzx edx [ edx ]
mov ecx [ ebx + 0x1c ]
add [ ebx + 0x20 ] 0x8
shl ecx 0x8
or ecx edx
mov [ ebx + 0x1c ] ecx
inc [ eax ]
mov eax [ ebx ]
dec [ eax + 0x4 ]
mov eax [ ebx ]
inc [ eax + 0x8 ]
mov eax [ ebx ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov edx [ eax ]
movzx edx [ edx ]
mov ecx [ ebx + 0x1c ]
add [ ebx + 0x20 ] 0x8
shl ecx 0x8
or ecx edx
mov [ ebx + 0x1c ] ecx
inc [ eax ]
mov eax [ ebx ]
dec [ eax + 0x4 ]
mov eax [ ebx ]
inc [ eax + 0x8 ]
mov eax [ ebx ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov edx [ eax ]
movzx edx [ edx ]
mov ecx [ ebx + 0x1c ]
add [ ebx + 0x20 ] 0x8
shl ecx 0x8
or ecx edx
mov [ ebx + 0x1c ] ecx
inc [ eax ]
mov eax [ ebx ]
dec [ eax + 0x4 ]
mov eax [ ebx ]
inc [ eax + 0x8 ]
mov eax [ ebx ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov edx [ eax ]
movzx edx [ edx ]
mov ecx [ ebx + 0x1c ]
add [ ebx + 0x20 ] 0x8
shl ecx 0x8
or ecx edx
mov [ ebx + 0x1c ] ecx
inc [ eax ]
mov eax [ ebx ]
dec [ eax + 0x4 ]
mov eax [ ebx ]
inc [ eax + 0x8 ]
mov eax [ ebx ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov edx [ eax ]
movzx edx [ edx ]
mov ecx [ ebx + 0x1c ]
add [ ebx + 0x20 ] 0x8
shl ecx 0x8
or ecx edx
mov [ ebx + 0x1c ] ecx
inc [ eax ]
mov eax [ ebx ]
dec [ eax + 0x4 ]
mov eax [ ebx ]
inc [ eax + 0x8 ]
mov eax [ ebx ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov edx [ eax ]
movzx edx [ edx ]
mov ecx [ ebx + 0x1c ]
add [ ebx + 0x20 ] 0x8
shl ecx 0x8
or ecx edx
mov [ ebx + 0x1c ] ecx
inc [ eax ]
mov eax [ ebx ]
dec [ eax + 0x4 ]
mov eax [ ebx ]
inc [ eax + 0x8 ]
mov eax [ ebx ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov edx [ eax ]
movzx edx [ edx ]
mov ecx [ ebx + 0x1c ]
add [ ebx + 0x20 ] 0x8
shl ecx 0x8
or ecx edx
mov [ ebx + 0x1c ] ecx
inc [ eax ]
mov eax [ ebx ]
dec [ eax + 0x4 ]
mov eax [ ebx ]
inc [ eax + 0x8 ]
mov eax [ ebx ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov ecx [ ebx + 0x24 ]
imul ecx ecx 0x186a0
add ecx 0xa
cmp eax ecx
jg r-xdata
mov edx [ eax ]
movzx edx [ edx ]
mov ecx [ ebx + 0x1c ]
add [ ebx + 0x20 ] 0x8
shl ecx 0x8
or ecx edx
mov [ ebx + 0x1c ] ecx
inc [ eax ]
mov eax [ ebx ]
dec [ eax + 0x4 ]
mov eax [ ebx ]
inc [ eax + 0x8 ]
mov eax [ ebx ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
push 0x100
lea eax [ ebx + 0xc6c ]
push 0x0
push eax
call sub_10026630
add esp 0xc
and [ ebp - 0x10 ] 0x0
jmp r-xdata
mov edx [ eax ]
movzx edx [ edx ]
mov ecx [ ebx + 0x1c ]
add [ ebx + 0x20 ] 0x8
shl ecx 0x8
or ecx edx
mov [ ebx + 0x1c ] ecx
inc [ eax ]
mov eax [ ebx ]
dec [ eax + 0x4 ]
mov eax [ ebx ]
inc [ eax + 0x8 ]
mov eax [ ebx ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
inc [ ebp - 0x1c ]
mov eax [ ebp - 0x10 ]
mov ecx [ ebp - 0x1c ]
shl eax 0x4
add eax ebx
mov [ eax + ecx + 0xc6c ] 0x1
mov edx [ eax ]
movzx edx [ edx ]
mov ecx [ ebx + 0x1c ]
add [ ebx + 0x20 ] 0x8
shl ecx 0x8
or ecx edx
mov [ ebx + 0x1c ] ecx
inc [ eax ]
mov eax [ ebx ]
dec [ eax + 0x4 ]
mov eax [ ebx ]
inc [ eax + 0x8 ]
mov eax [ ebx ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
cmp eax 0x6
jg r-xdata
mov edx [ eax ]
movzx edx [ edx ]
mov ecx [ ebx + 0x1c ]
add [ ebx + 0x20 ] 0x8
shl ecx 0x8
or ecx edx
mov [ ebx + 0x1c ] ecx
inc [ eax ]
mov eax [ ebx ]
dec [ eax + 0x4 ]
mov eax [ ebx ]
inc [ eax + 0x8 ]
mov eax [ ebx ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
and [ ebp - 0x10 ] 0x0
jmp r-xdata
mov edx [ eax ]
movzx edx [ edx ]
mov ecx [ ebx + 0x1c ]
add [ ebx + 0x20 ] 0x8
shl ecx 0x8
or ecx edx
mov [ ebx + 0x1c ] ecx
inc [ eax ]
mov eax [ ebx ]
dec [ eax + 0x4 ]
mov eax [ ebx ]
inc [ eax + 0x8 ]
mov eax [ ebx ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
inc [ ebp - 0x1c ]
mov eax [ ebp - 0x1c ]
cmp eax [ ebp - 0x44 ]
jl r-xdata
mov ecx [ ebp - 0x10 ]
mov al [ ebp - 0x1c ]
inc [ ebp - 0x10 ]
mov [ ebx + ecx + 0x650e ] al
mov edx [ eax ]
movzx edx [ edx ]
mov ecx [ ebx + 0x1c ]
add [ ebx + 0x20 ] 0x8
shl ecx 0x8
or ecx edx
mov [ ebx + 0x1c ] ecx
inc [ eax ]
mov eax [ ebx ]
dec [ eax + 0x4 ]
mov eax [ ebx ]
inc [ eax + 0x8 ]
mov eax [ ebx ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
dec [ ebp - 0x34 ]
inc [ ebp - 0x34 ]
jmp r-xdata
mov edx [ eax ]
movzx edx [ edx ]
mov ecx [ ebx + 0x1c ]
add [ ebx + 0x20 ] 0x8
shl ecx 0x8
or ecx edx
mov [ ebx + 0x1c ] ecx
inc [ eax ]
mov eax [ ebx ]
dec [ eax + 0x4 ]
mov eax [ ebx ]
inc [ eax + 0x8 ]
mov eax [ ebx ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x3c ]
mov edx [ ebp - 0x10 ]
imul eax eax 0x102
mov cl [ ebp - 0x34 ]
add eax ebx
inc [ ebp - 0x10 ]
mov [ eax + edx + 0xab60 ] cl
mov edx [ eax ]
movzx edx [ edx ]
mov ecx [ ebx + 0x1c ]
add [ ebx + 0x20 ] 0x8
shl ecx 0x8
or ecx edx
mov [ ebx + 0x1c ] ecx
inc [ eax ]
mov eax [ ebx ]
dec [ eax + 0x4 ]
mov eax [ ebx ]
inc [ eax + 0x8 ]
mov eax [ ebx ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x10 ]
cmp eax [ ebp - 0x60 ]
jl r-xdata
mov esi [ eax ]
movzx esi [ esi ]
mov edx [ ebx + 0x1c ]
add [ ebx + 0x20 ] 0x8
shl edx 0x8
or edx esi
mov [ ebx + 0x1c ] edx
inc [ eax ]
mov eax [ ebx ]
dec [ eax + 0x4 ]
mov eax [ ebx ]
inc [ eax + 0x8 ]
mov eax [ ebx ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
cmp esi 0x14
mov [ ebx + 0x20 ] edx
jg r-xdata
mov edx [ eax ]
movzx edx [ edx ]
mov ecx [ ebx + 0x1c ]
add [ ebx + 0x20 ] 0x8
shl ecx 0x8
or ecx edx
mov [ ebx + 0x1c ] ecx
inc [ eax ]
mov eax [ ebx ]
dec [ eax + 0x4 ]
mov eax [ ebx ]
inc [ eax + 0x8 ]
mov eax [ ebx ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov ecx [ ebp - 0x48 ]
mov eax [ ebp - 0x2c ]
cmp eax [ ecx + esi * 4 ]
jle r-xdata
mov esi [ eax ]
movzx esi [ esi ]
mov edx [ ebx + 0x1c ]
add [ ebx + 0x20 ] 0x8
shl edx 0x8
or edx esi
mov [ ebx + 0x1c ] edx
inc [ eax ]
mov eax [ ebx ]
dec [ eax + 0x4 ]
mov eax [ ebx ]
inc [ eax + 0x8 ]
mov eax [ ebx ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov ecx [ ebp - 0x48 ]
cmp eax [ ecx + esi * 4 ]
jle r-xdata
mov edx [ eax ]
movzx edx [ edx ]
mov ecx [ ebx + 0x1c ]
add [ ebx + 0x20 ] 0x8
shl ecx 0x8
or ecx edx
mov [ ebx + 0x1c ] ecx
inc [ eax ]
mov eax [ ebx ]
dec [ eax + 0x4 ]
mov eax [ ebx ]
inc [ eax + 0x8 ]
mov eax [ ebx ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
cmp esi 0x14
mov [ ebp - 0x2c ] eax
mov [ ebx + 0x20 ] edx
jg r-xdata
mov esi [ eax ]
movzx esi [ esi ]
mov edx [ ebx + 0x1c ]
add [ ebx + 0x20 ] 0x8
shl edx 0x8
or edx esi
mov [ ebx + 0x1c ] edx
inc [ eax ]
mov eax [ ebx ]
dec [ eax + 0x4 ]
mov eax [ ebx ]
inc [ eax + 0x8 ]
mov eax [ ebx ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
cmp [ ebp - 0x14 ] 0x14
mov [ ebp - 0x2c ] eax
mov [ ebx + 0x20 ] edx
jg r-xdata
mov edx [ eax ]
movzx edx [ edx ]
mov ecx [ ebx + 0x1c ]
add [ ebx + 0x20 ] 0x8
shl ecx 0x8
or ecx edx
mov [ ebx + 0x1c ] ecx
inc [ eax ]
mov eax [ ebx ]
dec [ eax + 0x4 ]
mov eax [ ebx ]
inc [ eax + 0x8 ]
mov eax [ ebx ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov ecx [ ebp - 0x14 ]
mov edx [ ebp - 0x48 ]
shl ecx 0x2
cmp eax [ ecx + edx ]
jg r-xdata
mov edx [ eax ]
movzx edx [ edx ]
mov ecx [ ebx + 0x1c ]
add [ ebx + 0x20 ] 0x8
shl ecx 0x8
or ecx edx
mov [ ebx + 0x1c ] ecx
inc [ eax ]
mov eax [ ebx ]
dec [ eax + 0x4 ]
mov eax [ ebx ]
inc [ eax + 0x8 ]
mov eax [ ebx ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov edx [ eax ]
movzx edx [ edx ]
mov ecx [ ebx + 0x1c ]
add [ ebx + 0x20 ] 0x8
shl ecx 0x8
or ecx edx
mov [ ebx + 0x1c ] ecx
inc [ eax ]
mov eax [ ebx ]
dec [ eax + 0x4 ]
mov eax [ ebx ]
inc [ eax + 0x8 ]
mov eax [ ebx ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov edx [ eax ]
movzx edx [ edx ]
mov ecx [ ebx + 0x1c ]
add [ ebx + 0x20 ] 0x8
shl ecx 0x8
or ecx edx
mov [ ebx + 0x1c ] ecx
inc [ eax ]
mov eax [ ebx ]
dec [ eax + 0x4 ]
mov eax [ ebx ]
inc [ eax + 0x8 ]
mov eax [ ebx ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov edx [ eax ]
movzx edx [ edx ]
mov ecx [ ebx + 0x1c ]
add [ ebx + 0x20 ] 0x8
shl ecx 0x8
or ecx edx
mov [ ebx + 0x1c ] ecx
inc [ eax ]
mov eax [ ebx ]
dec [ eax + 0x4 ]
mov eax [ ebx ]
inc [ eax + 0x8 ]
mov eax [ ebx ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov edx [ eax ]
movzx edx [ edx ]
mov ecx [ ebx + 0x1c ]
add [ ebx + 0x20 ] 0x8
shl ecx 0x8
or ecx edx
mov [ ebx + 0x1c ] ecx
inc [ eax ]
mov eax [ ebx ]
dec [ eax + 0x4 ]
mov eax [ ebx ]
inc [ eax + 0x8 ]
mov eax [ ebx ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
and [ ebx + 0xc5c ] 0x0
mov edx [ eax ]
movzx edx [ edx ]
mov ecx [ ebx + 0x1c ]
add [ ebx + 0x20 ] 0x8
shl ecx 0x8
or ecx edx
mov [ ebx + 0x1c ] ecx
inc [ eax ]
mov eax [ ebx ]
dec [ eax + 0x4 ]
mov eax [ ebx ]
inc [ eax + 0x8 ]
mov eax [ ebx ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov edx [ eax ]
movzx edx [ edx ]
mov ecx [ ebx + 0x1c ]
add [ ebx + 0x20 ] 0x8
shl ecx 0x8
or ecx edx
mov [ ebx + 0x1c ] ecx
inc [ eax ]
mov eax [ ebx ]
dec [ eax + 0x4 ]
mov eax [ ebx ]
inc [ eax + 0x8 ]
mov eax [ ebx ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov edx [ eax ]
movzx edx [ edx ]
mov ecx [ ebx + 0x1c ]
add [ ebx + 0x20 ] 0x8
shl ecx 0x8
or ecx edx
mov [ ebx + 0x1c ] ecx
inc [ eax ]
mov eax [ ebx ]
dec [ eax + 0x4 ]
mov eax [ ebx ]
inc [ eax + 0x8 ]
mov eax [ ebx ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov edx [ eax ]
movzx edx [ edx ]
mov ecx [ ebx + 0x1c ]
add [ ebx + 0x20 ] 0x8
shl ecx 0x8
or ecx edx
mov [ ebx + 0x1c ] ecx
inc [ eax ]
mov eax [ ebx ]
dec [ eax + 0x4 ]
mov eax [ ebx ]
inc [ eax + 0x8 ]
mov eax [ ebx ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
pop eax
jmp r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop esi
call sub_10025c8d
leave
retn
inc [ eax + 0xc ]
inc [ eax + 0xc ]
inc [ eax + 0xc ]
inc [ eax + 0xc ]
add eax 0xffffffd0
cmp [ ebx + 0x28 ] 0x0
mov [ ebx + 0x24 ] eax
push 0x1
je r-xdata
inc [ eax + 0xc ]
inc [ eax + 0xc ]
inc [ eax + 0xc ]
inc [ eax + 0xc ]
inc [ eax + 0xc ]
inc [ eax + 0xc ]
and [ ebx + 0xc58 ] 0x0
push eax
push r--data
call sub_10028ff7
add eax 0x40
push eax
call sub_100291ae
add esp 0xc
inc [ eax + 0xc ]
inc [ eax + 0xc ]
inc [ eax + 0xc ]
inc [ eax + 0xc ]
inc [ eax + 0xc ]
inc [ eax + 0xc ]
inc [ eax + 0xc ]
inc [ eax + 0xc ]
and [ ebp - 0x10 ] 0x0
jmp r-xdata
inc [ eax + 0xc ]
mov eax [ ebp - 0x10 ]
cmp eax 0x10
jge r-xdata
inc [ eax + 0xc ]
inc [ ebp - 0x10 ]
inc [ eax + 0xc ]
inc [ eax + 0xc ]
mov edx [ ebp - 0x50 ]
cmp [ ebp - 0x10 ] edx
jge r-xdata
inc [ eax + 0xc ]
jmp r-xdata
xor edi edi
xor cl cl
cmp [ ebp - 0x44 ] edi
jle r-xdata
and [ ebp - 0x1c ] 0x0
inc [ eax + 0xc ]
cmp [ ebp - 0x34 ] 0x14
jg r-xdata
cmp [ ebp - 0x34 ] 0x1
jl r-xdata
inc [ eax + 0xc ]
inc [ ebp - 0x3c ]
inc [ eax + 0xc ]
inc [ eax + 0xc ]
inc [ eax + 0xc ]
mov ecx [ ebp - 0x40 ]
sub eax [ ecx + esi * 4 ]
inc esi
mov [ ebp - 0x14 ] esi
inc [ eax + 0xc ]
mov ecx [ ebp - 0x40 ]
sub eax [ ecx + esi * 4 ]
js r-xdata
inc esi
mov [ ebp - 0x14 ] esi
inc [ eax + 0xc ]
inc [ eax + 0xc ]
inc [ eax + 0xc ]
inc [ ebp - 0x14 ]
mov edx [ ebp - 0x40 ]
sub eax [ ecx + edx ]
jmp r-xdata
inc [ eax + 0xc ]
inc [ eax + 0xc ]
inc [ eax + 0xc ]
inc [ eax + 0xc ]
inc [ eax + 0xc ]
inc [ eax + 0xc ]
inc [ eax + 0xc ]
inc [ eax + 0xc ]
inc [ eax + 0xc ]
mov ecx [ ebp - 0x10 ]
mov [ ebx + 0xfa14 ] ecx
mov ecx [ ebp - 0x1c ]
mov [ ebx + 0xfa18 ] ecx
mov ecx [ ebp - 0x3c ]
mov [ ebx + 0xfa1c ] ecx
mov ecx [ ebp - 0x60 ]
mov [ ebx + 0xfa20 ] ecx
mov ecx [ ebp - 0x44 ]
mov [ ebx + 0xfa24 ] ecx
mov ecx [ ebp - 0x50 ]
mov [ ebx + 0xfa28 ] ecx
mov ecx [ ebp - 0x64 ]
mov [ ebx + 0xfa2c ] ecx
mov ecx [ ebp - 0x24 ]
mov [ ebx + 0xfa30 ] ecx
mov ecx [ ebp - 0x28 ]
mov [ ebx + 0xfa34 ] ecx
mov ecx [ ebp - 0x54 ]
mov [ ebx + 0xfa38 ] ecx
mov ecx [ ebp - 0x30 ]
mov [ ebx + 0xfa3c ] ecx
mov ecx [ ebp - 0x18 ]
mov [ ebx + 0xfa40 ] ecx
mov ecx [ ebp - 0x20 ]
mov [ ebx + 0xfa44 ] ecx
mov ecx [ ebp - 0x74 ]
mov [ ebx + 0xfa48 ] ecx
mov ecx [ ebp - 0x34 ]
mov [ ebx + 0xfa4c ] ecx
mov ecx [ ebp - 0x80 ]
mov [ ebx + 0xfa50 ] ecx
mov ecx [ ebp - 0x14 ]
mov [ ebx + 0xfa54 ] ecx
mov ecx [ ebp - 0x2c ]
mov [ ebx + 0xfa58 ] ecx
mov ecx [ ebp - 0x6c ]
mov [ ebx + 0xfa5c ] ecx
mov ecx [ ebp - 0x70 ]
mov [ ebx + 0xfa60 ] ecx
mov ecx [ ebp - 0x5c ]
mov [ ebx + 0xfa64 ] ecx
mov ecx [ ebp - 0x48 ]
mov [ ebx + 0xfa68 ] ecx
mov ecx [ ebp - 0x40 ]
mov [ ebx + 0xfa6c ] ecx
mov ecx [ ebp - 0x4c ]
mov [ ebx + 0xfa70 ] ecx
jmp r-xdata
imul eax eax 0x61a80
push eax
push [ esi + 0x2c ]
call [ esi + 0x24 ]
add esp 0xc
mov [ ebx + 0xc4c ] eax
jmp r-xdata
imul eax eax 0x30d40
push eax
push [ esi + 0x2c ]
call [ esi + 0x24 ]
mov [ ebx + 0xc50 ] eax
mov eax [ ebx + 0x24 ]
imul eax eax 0x186a0
inc eax
push 0x1
sar eax 0x1
push eax
push [ esi + 0x2c ]
call [ esi + 0x24 ]
add esp 0x18
cmp [ ebx + 0xc50 ] 0x0
mov [ ebx + 0xc54 ] eax
je r-xdata
cmp [ ebp - 0x10 ] 0x10
jl r-xdata
and [ ebx + 0xc68 ] 0x0
xor eax eax
cmp [ ebx + eax + 0xd6c ] 0x0
je r-xdata
cmp edx edi
mov [ ebp - 0x10 ] edi
jle r-xdata
xor eax eax
mov eax [ ebp - 0x44 ]
and [ ebp - 0x3c ] 0x0
test eax eax
jle r-xdata
cmp eax 0x102
jge r-xdata
cmp eax 0x102
jge r-xdata
js r-xdata
test eax eax
jne r-xdata
push 0xfffffffd
inc eax
cmp eax 0x100
jl r-xdata
mov ecx [ ebx + 0xc68 ]
mov [ ebx + ecx + 0xd7c ] al
inc [ ebx + 0xc68 ]
and [ ebp - 0x1c ] 0x0
jmp r-xdata
and [ ebp - 0x3c ] 0x0
jmp r-xdata
mov dl [ ebx + edi + 0x650e ]
movzx eax dl
lea eax [ ebp + eax - 0xc ]
mov cl [ eax ]
test dl dl
jbe r-xdata
mov [ ebp + eax - 0xc ] cl
inc cl
movzx eax cl
cmp eax [ ebp - 0x44 ]
jl r-xdata
mov eax [ ebx + 0xc68 ]
and [ ebp - 0x28 ] 0x0
inc eax
mov [ ebp - 0x64 ] eax
mov eax [ ebx + 0x24 ]
imul eax eax 0x186a0
mov edx 0x100
mov [ ebp - 0x30 ] eax
xor eax eax
lea edi [ ebx + 0x40 ]
mov ecx edx
[ edi ]
push 0xf
mov [ ebp - 0x10 ] edx
mov esi 0xfff
pop eax
lea edi [ ebx + 0x1eb8 ]
lea ecx [ ebx + 0xab60 ]
lea edi [ ebx + 0xf9fc ]
lea edx [ ebx + 0xc99c ]
mov [ ebp - 0x30 ] ecx
mov [ ebp - 0x64 ] eax
mov [ ebp - 0x3c ] eax
mov ecx [ ebp - 0x4c ]
mov eax [ ecx + eax * 4 ]
mov [ ebp - 0x54 ] eax
mov ecx [ ebp - 0x4c ]
mov eax [ ecx + eax * 4 ]
xor edx edx
mov [ ebp - 0x54 ] eax
cmp eax edx
je r-xdata
cmp [ eax + ebx + 0xc6c ] 0x0
je r-xdata
mov eax [ ebx + 0xc68 ]
test eax eax
je r-xdata
cmp [ ebp - 0x1c ] 0x10
jl r-xdata
mov eax [ ebp - 0x3c ]
cmp eax [ ebp - 0x44 ]
jge r-xdata
mov [ ebx + edi + 0x1ebc ] cl
inc edi
cmp edi [ ebp - 0x50 ]
mov [ ebp - 0xc ] cl
jl r-xdata
mov esi eax
mov dl [ ebp - 0x24 ]
add dl cl
mov [ ebx + esi + 0xe7c ] dl
dec esi
dec [ ebp - 0x24 ]
jns r-xdata
lea ecx [ esi + 0x1 ]
mov [ edi ] ecx
dec eax
sub edi 0x4
test eax eax
jge r-xdata
push [ ebp - 0x60 ]
lea eax [ edx + 0x1830 ]
push [ ebp - 0x24 ]
push esi
push eax
lea eax [ edx - 0x1830 ]
push eax
mov eax [ ebp - 0x30 ]
call sub_100219fa
add [ ebp - 0x30 ] 0x102
mov [ edi ] esi
add esp 0x14
add edi 0x4
add edx 0x408
dec [ ebp - 0x64 ]
jne r-xdata
mov ecx [ ebp - 0x30 ]
movzx eax [ ecx + eax ]
cmp eax [ ebp - 0x24 ]
jle r-xdata
mov eax [ ebx + 0x34 ]
test eax eax
jl r-xdata
test edi edi
je r-xdata
mov eax [ ebp - 0x74 ]
cmp eax 0x200000
jge r-xdata
cmp eax 0x1
je r-xdata
add eax 0x2
mov [ ebp - 0x60 ] eax
mov [ ebp - 0x10 ] edi
mov al [ esi - 0x1 ]
dec dl
mov [ esi ] al
dec esi
test dl dl
ja r-xdata
mov cl al
mov [ ebp - 0x24 ] 0xf
shl cl 0x4
xor eax eax
cmp [ ebp - 0x50 ] eax
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x24 ] eax
jle r-xdata
xor eax eax
cmp [ ebp - 0x60 ] eax
push 0x20
pop esi
mov [ ebp - 0x24 ] eax
mov [ ebp - 0x10 ] eax
jle r-xdata
cmp eax esi
jge r-xdata
mov [ ebp - 0x24 ] eax
cmp eax [ ebp - 0x18 ]
jge r-xdata
or [ ebp - 0x20 ] 0xffffffff
mov [ ebp - 0x74 ] 0x1
cmp edi 0x1
jne r-xdata
cmp [ ebp - 0x54 ] 0x0
jne r-xdata
mov eax [ ebx + 0x1e7c ]
movzx eax [ eax + ebx + 0xe7c ]
mov cl [ eax + ebx + 0xd7c ]
inc [ ebp - 0x20 ]
mov esi [ ebp - 0x20 ]
movzx eax cl
add [ ebx + eax * 4 + 0x40 ] esi
cmp [ ebx + 0x28 ] dl
je r-xdata
movzx eax [ ebx + 0x1ebc ]
mov ecx [ ebx + eax * 4 + 0xf9fc ]
mov [ ebp - 0x70 ] eax
imul eax eax 0x408
add eax ebx
lea edx [ eax + 0xb16c ]
mov [ ebp - 0x48 ] edx
lea edx [ eax + 0xe1cc ]
add eax 0xc99c
mov [ ebp - 0x5c ] ecx
mov [ ebp - 0x4c ] edx
mov [ ebp - 0x40 ] eax
mov [ ebp - 0x28 ] 0x31
mov [ ebp - 0x14 ] ecx
mov eax [ ebp - 0x10 ]
inc eax
cmp eax [ ebp - 0x60 ]
mov [ ebp - 0x10 ] eax
jl r-xdata
mov esi eax
and [ ebp - 0x10 ] 0x0
lea esi [ ebx + 0x40 ]
mov eax esi
mov eax [ ebp - 0x18 ]
cmp eax [ ebp - 0x30 ]
jge r-xdata
cmp [ ebp - 0x54 ] 0x1
jne r-xdata
add [ ebp - 0x20 ] eax
jmp r-xdata
cmp [ ebp - 0x20 ] edx
jle r-xdata
cmp esi edx
jle r-xdata
cmp ecx [ ebp - 0x18 ]
jg r-xdata
dec edi
cmp edi 0x10
jae r-xdata
add eax eax
cmp [ ebp - 0x28 ] 0x0
mov [ ebp - 0x74 ] eax
jne r-xdata
mov ecx [ ebp - 0x20 ]
lea ecx [ ecx + eax * 2 ]
mov [ ebp - 0x20 ] ecx
mov edi [ ebp - 0x54 ]
cmp edi [ ebp - 0x64 ]
je r-xdata
mov ecx [ ebp - 0x18 ]
mov eax [ ebp - 0x18 ]
inc [ ebp - 0x10 ]
add eax 0x4
cmp [ ebp - 0x10 ] 0xff
jle r-xdata
mov esi edi
shr esi 0x4
lea eax [ ebx + esi * 4 + 0x1e7c ]
mov edx [ eax ]
and edi 0xf
add edi edx
cmp edi edx
mov cl [ ebx + edi + 0xe7c ]
jle r-xdata
mov edx [ ebx + 0x1e7c ]
lea eax [ ebx + edx ]
mov cl [ eax + edi + 0xe7c ]
mov [ ebp - 0xc ] eax
mov [ ebp - 0x55 ] cl
cmp edi 0x3
jbe r-xdata
mov eax [ ebp - 0x5c ]
dec [ ebp - 0x28 ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x24 ]
inc eax
cmp eax [ ebp - 0x50 ]
mov [ ebp - 0x24 ] eax
jge r-xdata
mov esi [ ebx + 0xc4c ]
mov [ esi + ecx * 4 ] eax
inc ecx
dec [ ebp - 0x20 ]
cmp [ ebp - 0x20 ] edx
mov [ ebp - 0x18 ] ecx
jg r-xdata
mov edi [ ebx + 0xc50 ]
movzx si cl
mov [ edi + eax * 2 ] si
inc eax
dec [ ebp - 0x20 ]
cmp [ ebp - 0x20 ] edx
mov [ ebp - 0x18 ] eax
jg r-xdata
mov ecx [ eax ]
test ecx ecx
jl r-xdata
and [ ebx + 0x444 ] 0x0
mov edx 0x100
lea eax [ ebx + 0x448 ]
mov ecx edx
mov edi eax
[ edi ] [ esi ]
mov ecx edx
inc [ eax ]
test esi esi
jle r-xdata
lea edx [ ebx + 0xe7c ]
test edi edi
jbe r-xdata
lea ecx [ ebx + 0xe7b ]
lea eax [ ecx + edx ]
mov edx ebx
sub edx ecx
add edx 0xe7c
mov [ ebp - 0x68 ] edx
mov edx ebx
sub edx ecx
add edx 0xe7a
mov [ ebp - 0x7c ] edx
mov edx ebx
sub edx ecx
add edx 0xe78
mov [ ebp - 0x78 ] edx
mov edx ebx
sub edx ecx
lea esi [ edi - 0x4 ]
add edx 0xe79
shr esi 0x2
add eax edi
mov [ ebp - 0x38 ] edx
inc esi
movzx eax [ ebx + eax + 0x1ebc ]
mov ecx [ ebx + eax * 4 + 0xf9fc ]
mov [ ebp - 0x70 ] eax
imul eax eax 0x408
add eax ebx
mov [ ebp - 0x5c ] ecx
lea ecx [ eax + 0xb16c ]
mov [ ebp - 0x48 ] ecx
lea ecx [ eax + 0xe1cc ]
add eax 0xc99c
mov [ ebp - 0x28 ] 0x32
mov [ ebp - 0x4c ] ecx
mov [ ebp - 0x40 ] eax
cmp ecx [ ebp - 0x30 ]
jge r-xdata
jmp r-xdata
cmp eax [ ebp - 0x30 ]
jge r-xdata
jmp r-xdata
mov esi [ eax - 0x4 ]
add [ eax ] esi
add eax 0x4
dec ecx
jne r-xdata
and [ ebp - 0x10 ] ecx
lea eax [ ebx + 0x444 ]
lea eax [ ebx + 0x1e7c ]
dec [ eax ]
mov edx [ eax ]
mov [ ebx + edx + 0xe7c ] cl
cmp [ eax ] 0x0
jne r-xdata
mov edi eax
mov al [ edx + edi - 0x1 ]
mov [ edx + edi ] al
dec edi
lea eax [ ebx + esi * 4 + 0x1e7c ]
cmp edi [ eax ]
jg r-xdata
mov [ eax + 0xe7c ] cl
jmp r-xdata
lea esi [ eax + 0xe7c ]
mov cl [ eax ]
mov edx [ ebp - 0x68 ]
mov [ edx + eax ] cl
mov ecx [ ebp - 0x7c ]
add ecx eax
mov dl [ ecx ]
mov [ eax ] dl
mov edx [ ebp - 0x38 ]
mov dl [ edx + eax ]
mov [ ecx ] dl
mov ecx [ ebp - 0x78 ]
mov cl [ ecx + eax ]
mov edx [ ebp - 0x38 ]
mov [ edx + eax ] cl
sub edi 0x4
sub eax 0x4
dec esi
jne r-xdata
mov eax [ ebp - 0xc ]
mov cl [ ebp - 0x55 ]
cmp ecx [ ebp - 0x18 ]
jg r-xdata
mov edx [ ebp - 0x18 ]
movzx eax cl
lea eax [ eax + ebx + 0xd7c ]
movzx ecx [ eax ]
lea ecx [ ebx + ecx * 4 + 0x40 ]
inc [ ecx ]
cmp [ ebx + 0x28 ] 0x0
je r-xdata
mov edi 0xfff
mov [ ebp - 0x38 ] 0xf
lea esi [ ebx + 0x1eb8 ]
dec [ edi ]
mov edx [ edi - 0x4 ]
mov eax [ edi ]
mov dl [ edx + ebx + 0xe8b ]
dec esi
sub edi 0x4
mov [ ebx + eax + 0xe7c ] dl
test esi esi
jg r-xdata
mov dl [ esi + edi - 0x1 ]
mov [ esi + edi ] dl
dec edi
jne r-xdata
inc [ ebp - 0x10 ]
add eax 0x4
cmp [ ebp - 0x10 ] edx
jle r-xdata
movzx eax [ eax ]
mov ecx [ ebx + 0xc4c ]
mov [ ecx + edx * 4 ] eax
movzx ax [ eax ]
mov ecx [ ebx + 0xc50 ]
mov [ ecx + edx * 2 ] ax
jmp r-xdata
mov eax [ ebp - 0x68 ]
mov edx [ esi ]
add eax ebx
mov al [ eax + edx + 0xe7c ]
mov [ edi + ebx + 0xe7c ] al
dec edi
dec [ ebp - 0x68 ]
jns r-xdata
dec [ ebp - 0x38 ]
lea eax [ edi + 0x1 ]
mov [ esi ] eax
sub esi 0x4
cmp [ ebp - 0x38 ] 0x0
jge r-xdata
mov ecx [ eax ]
test ecx ecx
jl r-xdata
xor eax eax
inc eax
mov [ ebp - 0x10 ] eax
lea ecx [ ebx + 0x444 ]
mov eax [ ebp - 0x5c ]
dec [ ebp - 0x28 ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x24 ]
inc eax
cmp eax [ ebp - 0x50 ]
mov [ ebp - 0x24 ] eax
jge r-xdata
inc [ ebp - 0x18 ]
cmp [ ebp - 0x28 ] 0x0
jne r-xdata
mov [ ebp - 0x68 ] 0xf
inc [ ebp - 0x10 ]
add ecx 0x4
cmp [ ebp - 0x10 ] edx
jle r-xdata
movzx eax [ ebx + eax + 0x1ebc ]
mov ecx [ ebx + eax * 4 + 0xf9fc ]
mov [ ebp - 0x70 ] eax
imul eax eax 0x408
add eax ebx
mov [ ebp - 0x5c ] ecx
lea ecx [ eax + 0xb16c ]
mov [ ebp - 0x48 ] ecx
lea ecx [ eax + 0xe1cc ]
add eax 0xc99c
mov [ ebp - 0x28 ] 0x32
mov [ ebp - 0x4c ] ecx
mov [ ebp - 0x40 ] eax
mov esi [ ecx ]
cmp esi [ ecx + 0x4 ]
jg r-xdata
and [ ebx + 0xc ] 0x0
or [ ebx + 0xc60 ] 0xffffffff
push 0x2
pop ecx
cmp [ ebx + 0x30 ] ecx
mov [ ebx + 0x8 ] 0x0
mov [ ebx + 0x4 ] ecx
jl r-xdata
cmp [ ebx + 0x28 ] 0x0
je r-xdata
push r--data
call sub_10028ff7
add eax 0x40
push eax
call sub_100291ae
pop ecx
xor eax eax
pop ecx
inc eax
xor esi esi
cmp [ ebp - 0x18 ] esi
mov [ ebp - 0x10 ] esi
jle r-xdata
xor edx edx
cmp [ ebp - 0x18 ] edx
lea edi [ ebx + 0x848 ]
mov ecx 0x101
lea esi [ ebx + 0x444 ]
[ edi ] [ esi ]
jle r-xdata
mov ecx [ ebx + 0xc4c ]
mov edx [ ebx + 0x34 ]
mov edx [ ecx + edx * 4 ]
mov esi [ ebx + 0x24 ]
shr edx 0x8
imul esi esi 0x186a0
mov [ ebx + 0x38 ] edx
xor edx edx
mov [ ebx + 0x440 ] edx
cmp [ ebx + 0x10 ] dl
je r-xdata
mov edx [ ebx + 0xc4c ]
movzx ecx [ edx + esi * 4 ]
lea ecx [ ebx + ecx * 4 + 0x444 ]
mov edi [ ecx ]
lea edx [ edx + edi * 4 ]
mov edi esi
shl edi 0x8
or [ edx ] edi
inc [ ecx ]
inc esi
cmp esi [ ebp - 0x18 ]
jl r-xdata
mov edx [ ebx + 0x34 ]
mov esi [ ebx + 0xc54 ]
mov ecx edx
sar ecx 0x1
movzx edi [ ecx + esi ]
movzx ecx dl
and cl 0x1
shl cl 0x2
shr edi cl
mov ecx [ ebx + 0xc50 ]
movzx ecx [ ecx + edx * 2 ]
and edi 0xf
shl edi 0x10
or edi ecx
jmp r-xdata
mov ecx [ ebx + 0xc50 ]
lea ecx [ ecx + edx * 2 ]
movzx esi [ ecx ]
lea esi [ ebx + esi * 4 + 0x848 ]
mov di [ esi ]
mov [ ecx ] di
test dl 0x1
jne r-xdata
mov edx [ ebx + 0x38 ]
cmp edx esi
jae r-xdata
mov [ ebx + 0x14 ] edx
mov [ ebx + 0x18 ] edx
mov edx [ ebx + 0x38 ]
cmp edx esi
jae r-xdata
mov [ ebp - 0x10 ] esi
mov esi [ ebx + 0xc54 ]
mov ecx edi
sar ecx 0x1
movzx esi [ esi + ecx ]
mov [ ebp - 0x38 ] ecx
mov [ ebp - 0x1c ] edi
and [ ebp - 0x1c ] eax
movzx ecx [ ebp - 0x1c ]
mov eax [ ebx + 0xc50 ]
shl cl 0x2
shr esi cl
lea eax [ eax + edi * 2 ]
movzx ecx [ eax ]
and esi 0xf
shl esi 0x10
or esi ecx
mov ecx [ ebp - 0x38 ]
mov [ eax ] dx
mov eax [ ebx + 0xc54 ]
add eax ecx
cmp [ ebp - 0x1c ] 0x0
jne r-xdata
mov ecx [ ebx + 0xc54 ]
mov eax edx
sar eax 0x1
lea edi [ eax + ecx ]
mov eax [ esi ]
mov ecx [ esi ]
sar eax 0xc
xor al [ edi ]
sar ecx 0xc
and al 0xf
xor al cl
mov [ edi ] al
xor eax eax
inc eax
mov edi [ ebx + 0xc54 ]
mov ecx edx
sar ecx 0x1
add edi ecx
mov cl [ edi ]
and cl 0xf0
or cl [ esi + 0x2 ]
mov [ edi ] cl
jmp r-xdata
mov ecx [ ecx + edx * 4 ]
mov [ ebx + 0x38 ] ecx
shr [ ebx + 0x38 ] 0x8
movzx ecx cl
mov [ ebx + 0x3c ] ecx
mov [ ebx + 0x440 ] eax
jmp r-xdata
mov ecx [ ecx + edx * 4 ]
mov [ ebx + 0x38 ] ecx
shr [ ebx + 0x38 ] 0x8
movzx ecx cl
mov [ ebx + 0x3c ] ecx
mov [ ebx + 0x440 ] eax
mov ecx [ rw-data ]
mov [ ebx + 0x14 ] ecx
dec [ ebx + 0x14 ]
mov ecx [ ebx + 0x14 ]
xor edx edx
cmp ecx eax
sete dl
mov [ ebx + 0x18 ] eax
xor [ ebx + 0x3c ] edx
jmp r-xdata
mov ecx edx
sar ecx 0xc
xor cl [ eax ]
sar edx 0xc
and cl 0xf
xor cl dl
mov [ eax ] cl
mov cl [ eax ]
sar edx 0x10
and cl 0xf0
or dl cl
mov [ eax ] dl
jmp r-xdata
inc [ esi ]
inc edx
cmp edx [ ebp - 0x18 ]
jl r-xdata
xor eax eax
inc eax
mov eax [ ebx + 0x34 ]
xor ecx ecx
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x10 ] edx
mov [ ebx + 0x38 ] eax
mov [ ebx + 0x440 ] ecx
cmp [ ebx + 0x10 ] cl
je r-xdata
mov edx edi
mov edi esi
cmp edx [ ebx + 0x34 ]
jne r-xdata
mov ecx [ ebx + 0x24 ]
imul ecx ecx 0x186a0
cmp eax ecx
jae r-xdata
mov [ ebx + 0x14 ] ecx
mov [ ebx + 0x18 ] ecx
mov ecx [ ebx + 0x24 ]
imul ecx ecx 0x186a0
cmp eax ecx
jb r-xdata
xor eax eax
inc eax
lea eax [ ebx + 0x444 ]
push eax
push [ ebx + 0x34 ]
call sub_1001bc8a
mov edx [ ebx + 0xc54 ]
mov [ ebx + 0x3c ] eax
mov eax [ ebx + 0x34 ]
pop ecx
pop ecx
mov ecx eax
shr ecx 0x1
movzx edx [ ecx + edx ]
movzx ecx al
and cl 0x1
shl cl 0x2
shr edx cl
mov ecx [ ebx + 0xc50 ]
movzx eax [ ecx + eax * 2 ]
and edx 0xf
shl edx 0x10
or edx eax
mov [ ebx + 0x38 ] edx
mov [ ebx + 0x440 ] 0x1
jmp r-xdata
lea eax [ ebx + 0x444 ]
push eax
push [ ebx + 0x34 ]
call sub_1001bc8a
mov edx [ ebx + 0x34 ]
mov esi eax
pop ecx
mov [ ebx + 0x3c ] esi
mov eax edx
shr eax 0x1
pop ecx
mov ecx [ ebx + 0xc54 ]
movzx eax [ eax + ecx ]
movzx ecx dl
and cl 0x1
shl cl 0x2
shr eax cl
mov ecx [ ebx + 0xc50 ]
movzx ecx [ ecx + edx * 2 ]
and eax 0xf
shl eax 0x10
or eax ecx
xor ecx ecx
inc ecx
mov [ ebx + 0x38 ] eax
mov [ ebx + 0x440 ] ecx
mov eax [ rw-data ]
mov [ ebx + 0x14 ] eax
dec [ ebx + 0x14 ]
mov edi [ ebx + 0x14 ]
xor eax eax
cmp edi ecx
sete al
mov [ ebx + 0x18 ] ecx
xor eax esi
mov [ ebx + 0x3c ] eax
sub_1002013e
push ebp
mov ebp esp
push ecx
mov edx [ ebp + 0xc ]
cmp [ ebp + 0x8 ] edx
je r-xdata
leave
retn
mov ecx edx
sub ecx [ ebp + 0x8 ]
push ebx
cmp ecx 0x3
push esi
jle r-xdata
mov edx [ ebp + 0xc ]
jmp r-xdata
add edx 0xfffffffc
jmp r-xdata
dec edx
cmp edx [ ebp + 0x8 ]
jge r-xdata
cmp edx [ ebp + 0x8 ]
jge r-xdata
mov ecx [ eax + edx * 4 ]
mov ebx [ edi + ecx * 4 ]
mov [ ebp - 0x4 ] ecx
lea ecx [ edx + 0x1 ]
jmp r-xdata
pop esi
pop ebx
mov ecx [ eax + edx * 4 ]
mov ebx [ edi + ecx * 4 ]
mov [ ebp - 0x4 ] ecx
lea ecx [ edx + 0x4 ]
jmp r-xdata
cmp ecx [ ebp + 0xc ]
jle r-xdata
cmp ecx [ ebp + 0xc ]
jle r-xdata
mov esi [ eax + ecx * 4 ]
cmp ebx [ edi + esi * 4 ]
jbe r-xdata
mov esi [ ebp - 0x4 ]
mov [ eax + ecx * 4 - 0x4 ] esi
mov esi [ eax + ecx * 4 ]
cmp ebx [ edi + esi * 4 ]
jbe r-xdata
mov esi [ ebp - 0x4 ]
mov [ eax + ecx * 4 - 0x10 ] esi
dec edx
mov [ eax + ecx * 4 - 0x4 ] esi
inc ecx
mov [ eax + ecx * 4 - 0x10 ] esi
add ecx 0x4
sub_100201c0
push ebp
mov ebp esp
sub esp 0x344
and [ ebp - 0x18 ] 0x0
mov [ ebp - 0x1b4 ] eax
mov eax [ ebp + 0xc ]
push ebx
mov [ ebp - 0x344 ] eax
mov [ ebp + 0xc ] 0x1
push edi
push 0x3ec
call sub_1001b111
dec [ ebp + 0xc ]
mov eax [ ebp + 0xc ]
shl eax 0x2
lea ecx [ ebp + eax - 0x1b4 ]
lea eax [ ebp + eax - 0x344 ]
mov ebx [ eax ]
mov [ ebp - 0x24 ] eax
mov [ ebp - 0x20 ] ecx
mov ecx [ ecx ]
mov eax ebx
sub eax ecx
cmp eax 0xa
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0xc ] ebx
jge r-xdata
mov eax [ ebp - 0x18 ]
imul eax eax 0x1dc5
inc eax
and eax 0x7fff
push 0x3
xor edx edx
pop edi
mov [ ebp - 0x18 ] eax
div edi
test edx edx
jne r-xdata
mov edi [ ebp + 0x8 ]
push ebx
push ecx
mov eax esi
call sub_1002013e
pop ecx
pop ecx
jmp r-xdata
cmp edx 0x1
jne r-xdata
mov eax [ esi + ecx * 4 ]
jmp r-xdata
cmp [ ebp + 0xc ] 0x0
jg r-xdata
mov eax [ esi + ebx * 4 ]
lea eax [ ebx + ecx ]
sar eax 0x1
mov eax [ esi + eax * 4 ]
jmp r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ edx + eax * 4 ]
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x8 ] ecx
mov edi ecx
mov [ ebp - 0x10 ] ebx
mov eax ebx
cmp [ ebp + 0xc ] 0x63
jge r-xdata
pop edi
pop ebx
leave
retn
mov ecx [ ebp - 0x8 ]
cmp [ ebp - 0x10 ] ecx
jl r-xdata
mov edx [ esi + edi * 4 ]
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx + edx * 4 ]
sub ecx [ ebp - 0x4 ]
jne r-xdata
mov ecx edi
sub ecx [ ebp - 0x8 ]
mov [ ebp - 0x1c ] ecx
mov ecx [ ebp - 0x8 ]
sub ecx [ ebp - 0x14 ]
mov edx [ ebp - 0x1c ]
cmp ecx edx
jge r-xdata
test ecx ecx
jle r-xdata
mov ecx [ ebp - 0x8 ]
mov ecx [ esi + ecx * 4 ]
mov [ esi + edi * 4 ] ecx
mov ecx [ ebp - 0x8 ]
inc [ ebp - 0x8 ]
inc edi
cmp edi eax
mov [ esi + ecx * 4 ] edx
jle r-xdata
mov [ ebp - 0x4 ] edx
test edx edx
jle r-xdata
mov edx ecx
inc edi
jmp r-xdata
cmp edi eax
jg r-xdata
jmp r-xdata
mov ecx [ ebp - 0x10 ]
mov edx ebx
sub edx [ ebp - 0x10 ]
sub ecx eax
cmp edx ecx
jge r-xdata
mov ecx [ ebp - 0x14 ]
mov ebx edi
sub ebx edx
lea ecx [ esi + ecx * 4 ]
lea edx [ esi + ebx * 4 ]
mov ebx [ ebp - 0xc ]
jmp r-xdata
mov ebx [ ebp - 0xc ]
mov edx [ esi + eax * 4 ]
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx + edx * 4 ]
sub ecx [ ebp - 0x4 ]
jne r-xdata
mov [ ebp - 0x4 ] ecx
test ecx ecx
jle r-xdata
mov ecx edx
mov ebx [ ecx ]
mov [ ebp - 0x8 ] ebx
mov ebx [ edx ]
mov [ ecx ] ebx
mov ebx [ ebp - 0x8 ]
mov [ edx ] ebx
add ecx 0x4
add edx 0x4
dec [ ebp - 0x4 ]
cmp [ ebp - 0x4 ] 0x0
jg r-xdata
mov ebx [ ebp - 0xc ]
cmp edi eax
jg r-xdata
test ecx ecx
jl r-xdata
mov ecx [ ebp - 0x10 ]
dec [ ebp - 0x10 ]
lea ecx [ esi + ecx * 4 ]
mov ebx [ ecx ]
mov [ esi + eax * 4 ] ebx
mov [ ecx ] edx
jmp r-xdata
mov edx [ ebp - 0x14 ]
mov ecx [ ebp - 0x1c ]
sub eax [ ebp - 0x10 ]
lea ecx [ ecx + edx - 0x1 ]
mov edi ecx
sub edi [ ebp - 0x14 ]
lea eax [ eax + ebx + 0x1 ]
mov edx ebx
sub edx eax
inc [ ebp + 0xc ]
cmp edi edx
jle r-xdata
lea edx [ esi + edi * 4 ]
mov edi ebx
sub edi ecx
lea ecx [ esi + edi * 4 + 0x4 ]
cmp edi eax
jg r-xdata
dec eax
cmp edi eax
jle r-xdata
mov edx [ ebp - 0x20 ]
mov [ edx ] eax
mov eax [ ebp + 0xc ]
mov edx [ ebp - 0x14 ]
shl eax 0x2
mov [ ebp + eax - 0x1b4 ] edx
mov [ ebp + eax - 0x344 ] ecx
mov edx [ ebp - 0x24 ]
mov [ edx ] ecx
mov ecx [ ebp + 0xc ]
shl ecx 0x2
mov [ ebp + ecx - 0x1b4 ] eax
mov [ ebp + ecx - 0x344 ] ebx
jmp r-xdata
mov edi [ edx ]
mov [ ebp - 0xc ] edi
mov edi [ ecx ]
mov [ edx ] edi
mov edi [ ebp - 0xc ]
mov [ ecx ] edi
add edx 0x4
add ecx 0x4
dec [ ebp - 0x4 ]
cmp [ ebp - 0x4 ] 0x0
jg r-xdata
mov edx [ esi + eax * 4 ]
mov ecx [ esi + edi * 4 ]
mov [ esi + edi * 4 ] edx
mov [ esi + eax * 4 ] ecx
inc edi
dec eax
inc [ ebp + 0xc ]
sub_100203fc
push ebp
mov ebp esp
sub esp 0x810
cmp [ ebp + 0x14 ] 0x4
push ebx
push esi
push edi
mov ebx eax
jl r-xdata
mov edx 0x101
xor eax eax
mov ecx edx
lea edi [ ebp - 0x410 ]
[ edi ]
mov eax [ ebp + 0x10 ]
xor esi esi
test eax eax
jle r-xdata
push r--data
call sub_10028ff7
add eax 0x40
push eax
call sub_100291ae
pop ecx
pop ecx
mov ecx 0x100
lea esi [ ebp - 0x410 ]
lea edi [ ebp - 0x810 ]
[ edi ] [ esi ]
xor esi esi
inc esi
mov ecx [ ebp + 0xc ]
movzx ecx [ esi + ecx ]
lea ecx [ ebp + ecx * 4 - 0x410 ]
inc [ ecx ]
inc esi
cmp esi eax
jl r-xdata
mov edi [ ebp + esi * 4 - 0x414 ]
lea ecx [ ebp + esi * 4 - 0x410 ]
add [ ecx ] edi
inc esi
cmp esi edx
jl r-xdata
xor edi edi
test eax eax
jle r-xdata
cdq
and edx 0x1f
add eax edx
sar eax 0x5
inc eax
inc eax
test eax eax
jle r-xdata
mov ecx [ ebp + 0xc ]
movzx ecx [ edi + ecx ]
lea edx [ ebp + ecx * 4 - 0x410 ]
mov ecx [ edx ]
dec ecx
mov [ edx ] ecx
mov edx [ ebp + 0x8 ]
mov [ edx + ecx * 4 ] edi
inc edi
cmp edi eax
jl r-xdata
xor edx edx
mov ecx eax
xor eax eax
mov edi ebx
[ edi ]
mov ecx [ ebp + edx * 4 - 0x410 ]
xor esi esi
mov eax ecx
and ecx 0x1f
inc esi
shl esi cl
sar eax 0x5
lea eax [ ebx + eax * 4 ]
or [ eax ] esi
inc edx
cmp edx 0x100
jl r-xdata
mov edx [ ebp + 0x10 ]
push 0x20
pop esi
xor edi edi
inc edi
mov ecx edx
and ecx 0x1f
shl edi cl
mov eax edx
sar eax 0x5
lea eax [ ebx + eax * 4 ]
or [ eax ] edi
lea ecx [ edx + 0x1 ]
xor edi edi
inc edi
mov eax ecx
and ecx 0x1f
shl edi cl
sar eax 0x5
lea eax [ ebx + eax * 4 ]
not edi
and [ eax ] edi
inc edx
inc edx
dec esi
jne r-xdata
mov [ ebp - 0x8 ] 0x1
xor edx edx
xor esi esi
cmp [ ebp + 0x10 ] edx
jle r-xdata
push [ ebp - 0x8 ]
push r--data
call sub_10028ff7
add eax 0x40
push eax
call sub_100291ae
add esp 0xc
and [ ebp - 0xc ] 0x0
or edi 0xffffffff
xor eax eax
mov ecx edx
and ecx 0x1f
inc eax
shl eax cl
mov ecx edx
sar ecx 0x5
test [ ebx + ecx * 4 ] eax
je r-xdata
xor esi esi
mov ecx eax
and ecx 0x1f
inc esi
shl esi cl
mov edx eax
sar edx 0x5
test [ ebx + edx * 4 ] esi
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax + edx * 4 ]
sub eax [ ebp - 0x8 ]
jns r-xdata
mov esi edx
test ecx ecx
je r-xdata
mov ecx eax
sar ecx 0x5
mov edx [ ebx + ecx * 4 ]
push 0x1f
xor edi edi
mov ecx eax
pop esi
and ecx esi
inc edi
shl edi cl
test edx edi
je r-xdata
mov ecx [ ebp + 0xc ]
inc edx
cmp edx [ ebp + 0x10 ]
mov [ ecx + eax * 4 ] esi
jl r-xdata
add eax [ ebp + 0x10 ]
inc eax
lea ecx [ eax - 0x1 ]
cmp ecx [ ebp + 0x10 ]
mov [ ebp - 0x4 ] ecx
jge r-xdata
cmp edx 0xffffffff
jne r-xdata
cmp [ ebp + 0x14 ] 0x4
jl r-xdata
mov ecx eax
and ecx esi
jmp r-xdata
xor edx edx
mov ecx eax
and ecx esi
inc edx
shl edx cl
mov ecx eax
sar ecx 0x5
test [ ebx + ecx * 4 ] edx
jne r-xdata
add eax 0x20
mov ecx eax
sar ecx 0x5
cmp [ ebx + ecx * 4 ] 0xffffffff
je r-xdata
mov eax [ ebp - 0x8 ]
add eax eax
cmp eax [ ebp + 0x10 ]
mov [ ebp - 0x8 ] eax
jg r-xdata
push [ ebp - 0xc ]
push r--data
call sub_10028ff7
add eax 0x40
push eax
call sub_100291ae
add esp 0xc
xor esi esi
inc esi
shl esi cl
mov edx eax
sar edx 0x5
test [ ebx + edx * 4 ] esi
je r-xdata
inc eax
jmp r-xdata
cmp [ ebp + 0x14 ] 0x4
jl r-xdata
cmp [ ebp - 0xc ] 0x0
jne r-xdata
test ecx ecx
je r-xdata
mov ecx eax
sar ecx 0x5
mov edx [ ebx + ecx * 4 ]
xor esi esi
mov ecx eax
and ecx 0x1f
inc esi
shl esi cl
test edx esi
jne r-xdata
xor esi esi
xor ecx ecx
xor edx edx
cmp [ ebp + 0x10 ] esi
jle r-xdata
push r--data
call sub_10028ff7
add eax 0x40
push eax
call sub_100291ae
pop ecx
pop ecx
cmp [ ebp + 0x14 ] 0x4
jl r-xdata
inc eax
mov ecx eax
and ecx 0x1f
lea edi [ eax - 0x1 ]
cmp edi [ ebp + 0x10 ]
jge r-xdata
test edx edx
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn
lea eax [ ebp - 0x810 ]
mov eax [ ebp - 0x4 ]
cmp edi eax
jle r-xdata
xor edx edx
mov ecx eax
and ecx 0x1f
inc edx
shl edx cl
mov ecx eax
sar ecx 0x5
test [ ebx + ecx * 4 ] edx
je r-xdata
add eax 0x20
mov ecx eax
sar ecx 0x5
cmp [ ebx + ecx * 4 ] 0x0
je r-xdata
mov edi [ ebp + 0x8 ]
mov edi [ edi + edx * 4 ]
mov ebx [ ebp + 0xc ]
lea eax [ ebp + ecx * 4 - 0x810 ]
dec [ eax ]
inc edx
cmp edx [ ebp + 0x10 ]
mov [ ebx + edi ] cl
jl r-xdata
inc ecx
cmp [ ebp + ecx * 4 - 0x810 ] esi
je r-xdata
lea eax [ edi + 0x1 ]
jmp r-xdata
mov edx [ ebp - 0xc ]
mov esi [ ebp + 0x8 ]
mov ecx edi
sub ecx eax
push edi
push [ ebp + 0xc ]
lea ecx [ edx + ecx + 0x1 ]
mov [ ebp - 0xc ] ecx
call sub_100201c0
mov edx [ ebp - 0x4 ]
pop ecx
pop ecx
or eax 0xffffffff
jmp r-xdata
inc eax
jmp r-xdata
cmp [ eax ] esi
jne r-xdata
cmp ecx 0x100
jl r-xdata
cmp edx edi
jle r-xdata
push 0x3ed
call sub_1001b111
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx + edx * 4 ]
mov esi [ ebp + 0xc ]
mov ecx [ esi + ecx * 4 ]
mov [ ebp - 0x4 ] ecx
cmp eax ecx
je r-xdata
jmp r-xdata
inc edx
xor esi esi
mov ecx edx
and ecx 0x1f
inc esi
mov eax edx
sar eax 0x5
shl esi cl
lea eax [ ebx + eax * 4 ]
or [ eax ] esi
mov eax [ ebp - 0x4 ]
sub_10020753
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
mov esi edx
mov dl [ edi + eax ]
mov bl [ esi + eax ]
cmp bl dl
je r-xdata
inc edi
mov dl [ edi + eax ]
inc esi
mov bl [ esi + eax ]
cmp bl dl
jne r-xdata
sbb eax eax
neg eax
jmp r-xdata
inc edi
mov dl [ edi + eax ]
inc esi
mov bl [ esi + eax ]
cmp bl dl
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
inc edi
mov dl [ edi + eax ]
inc esi
mov bl [ esi + eax ]
cmp bl dl
jne r-xdata
inc edi
mov dl [ edi + eax ]
inc esi
mov bl [ esi + eax ]
cmp bl dl
jne r-xdata
inc edi
mov dl [ edi + eax ]
inc esi
mov bl [ esi + eax ]
cmp bl dl
jne r-xdata
inc edi
mov dl [ edi + eax ]
inc esi
mov bl [ esi + eax ]
cmp bl dl
jne r-xdata
inc edi
mov dl [ edi + eax ]
inc esi
mov bl [ esi + eax ]
cmp bl dl
jne r-xdata
inc edi
mov dl [ edi + eax ]
inc esi
mov bl [ esi + eax ]
cmp bl dl
jne r-xdata
inc edi
mov dl [ edi + eax ]
inc esi
mov bl [ esi + eax ]
cmp bl dl
jne r-xdata
inc edi
mov dl [ edi + eax ]
inc esi
mov bl [ esi + eax ]
cmp bl dl
jne r-xdata
inc edi
mov dl [ edi + eax ]
inc esi
mov bl [ esi + eax ]
cmp bl dl
jne r-xdata
mov edx [ ebp + 0xc ]
inc edi
inc esi
add edx 0x8
mov [ ebp + 0x8 ] edx
movzx edx [ ecx + edi * 2 ]
movzx ebx [ ecx + esi * 2 ]
cmp bx dx
jne r-xdata
inc edi
mov dl [ edi + eax ]
inc esi
mov bl [ esi + eax ]
cmp bl dl
jne r-xdata
movzx edx [ ecx + edi * 2 ]
movzx ebx [ ecx + esi * 2 ]
cmp bx dx
jne r-xdata
inc edi
mov dl [ edi + eax ]
inc esi
mov bl [ esi + eax ]
cmp bl dl
jne r-xdata
movzx edx [ ecx + edi * 2 ]
movzx ebx [ ecx + esi * 2 ]
cmp bx dx
jne r-xdata
inc edi
mov dl [ edi + eax ]
inc esi
mov bl [ esi + eax ]
cmp bl dl
jne r-xdata
movzx edx [ ecx + edi * 2 ]
movzx ebx [ ecx + esi * 2 ]
cmp bx dx
jne r-xdata
inc edi
mov dl [ edi + eax ]
inc esi
mov bl [ esi + eax ]
cmp bl dl
jne r-xdata
movzx edx [ ecx + edi * 2 ]
movzx ebx [ ecx + esi * 2 ]
cmp bx dx
jne r-xdata
inc edi
mov dl [ edi + eax ]
inc esi
mov bl [ esi + eax ]
cmp bl dl
jne r-xdata
movzx edx [ ecx + edi * 2 ]
movzx ebx [ ecx + esi * 2 ]
cmp bx dx
jne r-xdata
inc edi
mov dl [ edi + eax ]
inc esi
mov bl [ esi + eax ]
cmp bl dl
jne r-xdata
movzx edx [ ecx + edi * 2 ]
movzx ebx [ ecx + esi * 2 ]
cmp bx dx
jne r-xdata
inc edi
mov dl [ edi + eax ]
inc esi
mov bl [ esi + eax ]
cmp bl dl
jne r-xdata
movzx edx [ ecx + edi * 2 ]
movzx ebx [ ecx + esi * 2 ]
cmp bx dx
jne r-xdata
mov edx [ ebp + 0xc ]
inc edi
inc esi
cmp edi edx
jb r-xdata
cmp esi edx
jb r-xdata
sub edi edx
sub [ ebp + 0x8 ] 0x8
mov edx [ ebp + 0x10 ]
dec [ edx ]
cmp [ ebp + 0x8 ] 0x0
jge r-xdata
sub esi edx
mov dl [ edi + eax ]
mov bl [ esi + eax ]
cmp bl dl
jne r-xdata
xor al al
sub_10020939
push ebp
mov ebp esp
mov eax [ ebp + 0x18 ]
sub eax [ ebp + 0x14 ]
sub esp 0x1c
inc eax
cmp eax 0x2
jl r-xdata
leave
retn
xor ecx ecx
cmp [ rw-data ] eax
jge r-xdata
dec ecx
mov [ ebp - 0x18 ] ecx
js r-xdata
inc ecx
cmp [ ecx * 4 + rw-data ] eax
jl r-xdata
push ebx
push edi
dec ecx
mov [ ebp - 0x18 ] ecx
jns r-xdata
mov ecx edi
sub ecx eax
lea ebx [ esi + ecx * 4 ]
mov eax [ ecx * 4 + rw-data ]
mov edx [ ebp + 0x14 ]
lea edi [ eax + edx ]
cmp edi [ ebp + 0x18 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x14 ] edi
jg r-xdata
pop edi
pop ebx
mov eax [ ebp - 0xc ]
mov ecx [ ebp - 0x4 ]
inc edi
add ebx 0x4
cmp edi [ ebp + 0x18 ]
mov [ esi + ecx * 4 ] eax
jg r-xdata
mov eax ebx
jmp r-xdata
mov ecx [ ebp - 0x18 ]
mov eax [ esi + edi * 4 ]
mov ecx [ ebp + 0x1c ]
push [ ebp + 0x20 ]
lea edx [ eax + ecx ]
push [ ebp + 0x10 ]
mov [ ebp - 0xc ] eax
mov eax [ ebx ]
add eax ecx
mov ecx [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x4 ] edi
mov [ ebp - 0x8 ] edx
call sub_10020753
add esp 0xc
test al al
je r-xdata
mov ecx [ eax ]
mov edx [ ebp - 0x4 ]
mov [ esi + edx * 4 ] ecx
mov ecx [ ebp - 0x10 ]
sub [ ebp - 0x4 ] ecx
shl ecx 0x2
sub eax ecx
mov ecx [ ebp - 0x14 ]
dec ecx
cmp [ ebp - 0x4 ] ecx
mov [ ebp - 0x1c ] eax
jle r-xdata
mov eax [ ebp - 0xc ]
mov ecx [ ebp - 0x4 ]
inc edi
add ebx 0x4
cmp edi [ ebp + 0x18 ]
mov [ esi + ecx * 4 ] eax
jg r-xdata
mov eax ebx
jmp r-xdata
push [ ebp + 0x20 ]
mov eax [ eax ]
add eax [ ebp + 0x1c ]
push [ ebp + 0x10 ]
mov ecx [ ebp + 0xc ]
mov edx [ ebp - 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
call sub_10020753
add esp 0xc
test al al
jne r-xdata
mov eax [ esi + edi * 4 ]
mov ecx [ ebp + 0x1c ]
push [ ebp + 0x20 ]
lea edx [ eax + ecx ]
push [ ebp + 0x10 ]
mov [ ebp - 0xc ] eax
mov eax [ ebx ]
add eax ecx
mov ecx [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x4 ] edi
mov [ ebp - 0x8 ] edx
call sub_10020753
add esp 0xc
test al al
je r-xdata
mov ecx [ eax ]
mov edx [ ebp - 0x4 ]
mov [ esi + edx * 4 ] ecx
mov ecx [ ebp - 0x10 ]
sub [ ebp - 0x4 ] ecx
shl ecx 0x2
sub eax ecx
mov ecx [ ebp - 0x14 ]
dec ecx
cmp [ ebp - 0x4 ] ecx
mov [ ebp - 0x1c ] eax
jle r-xdata
mov eax [ ebp - 0x1c ]
mov eax [ ebp - 0xc ]
mov ecx [ ebp - 0x4 ]
mov [ esi + ecx * 4 ] eax
mov eax [ ebp + 0x20 ]
inc edi
add ebx 0x4
cmp [ eax ] 0x0
jl r-xdata
mov eax ebx
jmp r-xdata
push [ ebp + 0x20 ]
mov eax [ eax ]
add eax [ ebp + 0x1c ]
push [ ebp + 0x10 ]
mov ecx [ ebp + 0xc ]
mov edx [ ebp - 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
call sub_10020753
add esp 0xc
test al al
jne r-xdata
cmp edi [ ebp + 0x18 ]
jle r-xdata
mov ecx [ eax ]
mov edx [ ebp - 0x4 ]
mov [ esi + edx * 4 ] ecx
mov ecx [ ebp - 0x10 ]
sub [ ebp - 0x4 ] ecx
shl ecx 0x2
sub eax ecx
mov ecx [ ebp - 0x14 ]
dec ecx
cmp [ ebp - 0x4 ] ecx
mov [ ebp - 0x1c ] eax
jle r-xdata
mov eax [ ebp - 0x1c ]
mov eax [ esi + edi * 4 ]
mov ecx [ ebp + 0x1c ]
push [ ebp + 0x20 ]
lea edx [ eax + ecx ]
push [ ebp + 0x10 ]
mov [ ebp - 0xc ] eax
mov eax [ ebx ]
add eax ecx
mov ecx [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x4 ] edi
mov [ ebp - 0x8 ] edx
call sub_10020753
add esp 0xc
test al al
je r-xdata
push [ ebp + 0x20 ]
mov eax [ eax ]
add eax [ ebp + 0x1c ]
push [ ebp + 0x10 ]
mov ecx [ ebp + 0xc ]
mov edx [ ebp - 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
call sub_10020753
add esp 0xc
test al al
jne r-xdata
mov eax [ ebp - 0x1c ]
sub_10020b4f
push ebp
mov ebp esp
sub esp 0x508
push ebx
push esi
mov esi [ ebp + 0x8 ]
mov [ ebp - 0x1e8 ] eax
mov eax [ ebp + 0x18 ]
xor ebx ebx
push edi
mov [ ebp - 0x378 ] eax
mov [ ebp - 0x508 ] 0x2
inc ebx
push 0x3e9
call sub_1001b111
dec ebx
lea ecx [ ebp + ebx * 4 - 0x378 ]
mov edi [ ecx ]
mov [ ebp - 0x58 ] ecx
lea ecx [ ebp + ebx * 4 - 0x508 ]
mov edx [ ecx ]
lea eax [ ebp + ebx * 4 - 0x1e8 ]
mov [ ebp - 0x4c ] ecx
mov [ ebp - 0x50 ] eax
mov eax [ eax ]
mov ecx edi
sub ecx eax
cmp ecx 0x14
mov [ ebp - 0x48 ] ebx
mov [ ebp - 0x20 ] eax
jl r-xdata
push [ ebp + 0x1c ]
push edx
push edi
push eax
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call sub_10020939
mov eax [ ebp + 0x1c ]
add esp 0x1c
cmp [ eax ] 0x0
jl r-xdata
cmp edx 0xe
jg r-xdata
pop edi
pop esi
pop ebx
leave
retn
test ebx ebx
jg r-xdata
lea ecx [ edi + eax ]
sar ecx 0x1
mov ebx [ esi + ecx * 4 ]
mov ecx [ ebp + 0xc ]
add ebx edx
mov bl [ ebx + ecx ]
mov [ ebp - 0x18 ] bl
mov ebx [ esi + edi * 4 ]
add ebx edx
mov bl [ ebx + ecx ]
mov [ ebp + 0x18 ] bl
mov ebx [ esi + eax * 4 ]
add ebx edx
mov cl [ ebx + ecx ]
mov [ ebp - 0x4 ] cl
cmp cl [ ebp + 0x18 ]
jbe r-xdata
cmp ebx 0x62
jge r-xdata
mov cl [ ebp - 0x18 ]
cmp [ ebp + 0x18 ] cl
jbe r-xdata
mov bl [ ebp + 0x18 ]
mov [ ebp - 0x4 ] bl
mov [ ebp + 0x18 ] cl
movzx ecx [ ebp + 0x18 ]
mov [ ebp - 0xc ] eax
mov [ ebp + 0x18 ] eax
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x10 ] edi
mov eax edi
mov bl [ ebp - 0x4 ]
mov [ ebp + 0x18 ] cl
cmp bl cl
jbe r-xdata
mov ebx [ ebp - 0xc ]
cmp [ ebp - 0x10 ] ebx
jge r-xdata
mov ecx [ ebp + 0x18 ]
mov ecx [ esi + ecx * 4 ]
mov ebx [ ebp + 0xc ]
mov [ ebp - 0x14 ] ecx
add ecx edx
movzx ecx [ ecx + ebx ]
sub ecx [ ebp - 0x8 ]
jne r-xdata
mov [ ebp + 0x18 ] bl
mov ecx [ ebp + 0x18 ]
sub ecx ebx
mov [ ebp - 0x14 ] ecx
mov ecx ebx
sub ecx [ ebp - 0x20 ]
mov ebx [ ebp - 0x14 ]
cmp ecx ebx
jge r-xdata
mov eax [ ebp - 0x4c ]
mov ebx [ ebp - 0x48 ]
inc edx
mov [ eax ] edx
inc ebx
jmp r-xdata
test ecx ecx
jle r-xdata
mov ecx [ ebp - 0xc ]
mov ecx [ esi + ecx * 4 ]
mov ebx [ ebp + 0x18 ]
mov [ esi + ebx * 4 ] ecx
mov ebx [ ebp - 0xc ]
inc [ ebp - 0xc ]
inc [ ebp + 0x18 ]
cmp [ ebp + 0x18 ] eax
mov ecx [ ebp - 0x14 ]
mov [ esi + ebx * 4 ] ecx
jle r-xdata
mov [ ebp - 0x8 ] ebx
test ebx ebx
jle r-xdata
mov ebx ecx
inc [ ebp + 0x18 ]
jmp r-xdata
cmp [ ebp + 0x18 ] eax
jg r-xdata
jmp r-xdata
mov ecx [ ebp - 0x10 ]
sub ecx eax
mov [ ebp - 0x1c ] ecx
mov ecx edi
sub ecx [ ebp - 0x10 ]
cmp ecx [ ebp - 0x1c ]
jl r-xdata
mov ecx [ ebp - 0x20 ]
lea ecx [ esi + ecx * 4 ]
mov [ ebp - 0xc ] ecx
mov ecx [ ebp + 0x18 ]
sub ecx ebx
lea ecx [ esi + ecx * 4 ]
mov [ ebp - 0x1c ] ecx
cmp [ ebp + 0x18 ] eax
jg r-xdata
mov ecx [ esi + eax * 4 ]
mov ebx [ ebp + 0xc ]
mov [ ebp - 0x14 ] ecx
add ecx edx
movzx ecx [ ecx + ebx ]
sub ecx [ ebp - 0x8 ]
jne r-xdata
mov [ ebp - 0x8 ] ecx
test ecx ecx
jle r-xdata
mov ecx [ ebp - 0x1c ]
mov ebx [ ebp - 0xc ]
mov ebx [ ebx ]
mov ecx [ ecx ]
mov [ ebp - 0x54 ] ebx
mov ebx [ ebp - 0xc ]
add [ ebp - 0xc ] 0x4
mov [ ebx ] ecx
mov ecx [ ebp - 0x1c ]
mov ebx [ ebp - 0x54 ]
mov [ ecx ] ebx
add ecx 0x4
dec [ ebp - 0x8 ]
cmp [ ebp - 0x8 ] 0x0
mov [ ebp - 0x1c ] ecx
jg r-xdata
test ecx ecx
jl r-xdata
mov ecx [ ebp - 0x10 ]
mov ecx [ esi + ecx * 4 ]
mov ebx [ ebp - 0x10 ]
dec [ ebp - 0x10 ]
mov [ esi + eax * 4 ] ecx
mov ecx [ ebp - 0x14 ]
mov [ esi + ebx * 4 ] ecx
jmp r-xdata
mov esi [ ebp - 0x20 ]
mov ecx [ ebp - 0x14 ]
sub eax [ ebp - 0x10 ]
lea ecx [ ecx + esi - 0x1 ]
mov [ ebp - 0x2c ] esi
lea eax [ eax + edi + 0x1 ]
lea esi [ ecx + 0x1 ]
mov [ ebp - 0x24 ] esi
lea esi [ eax - 0x1 ]
mov [ ebp - 0x30 ] esi
lea esi [ edx + 0x1 ]
mov [ ebp - 0x3c ] esi
mov ebx ecx
sub ebx [ ebp - 0x20 ]
mov esi edi
sub esi eax
cmp ebx esi
mov [ ebp - 0x38 ] ecx
mov [ ebp - 0x44 ] edx
mov [ ebp - 0x28 ] eax
mov [ ebp - 0x34 ] edi
mov [ ebp - 0x40 ] edx
jge r-xdata
mov ebx [ ebp + 0x18 ]
lea ebx [ esi + ebx * 4 ]
mov [ ebp + 0x18 ] ebx
mov ebx edi
sub ebx ecx
lea ecx [ esi + ebx * 4 + 0x4 ]
mov esi [ ebp + 0x18 ]
mov ecx [ ebp + 0x18 ]
cmp ecx eax
jg r-xdata
dec eax
cmp [ ebp + 0x18 ] eax
jle r-xdata
mov esi [ ebp - 0x28 ]
mov ecx [ ebp - 0x34 ]
mov eax [ ebp - 0x40 ]
mov esi [ ebp - 0x20 ]
mov [ ebp - 0x2c ] eax
mov [ ebp - 0x38 ] edi
mov [ ebp - 0x44 ] edx
mov eax edx
jmp r-xdata
mov ebx [ esi ]
mov [ ebp + 0x18 ] ebx
mov ebx [ ecx ]
mov [ esi ] ebx
mov ebx [ ebp + 0x18 ]
mov [ ecx ] ebx
add esi 0x4
add ecx 0x4
dec [ ebp - 0x8 ]
cmp [ ebp - 0x8 ] 0x0
jg r-xdata
inc [ ebp + 0x18 ]
lea ecx [ esi + ecx * 4 ]
mov ebx [ ecx ]
mov [ ebp - 0x14 ] ebx
mov ebx [ esi + eax * 4 ]
mov [ ecx ] ebx
mov ecx [ ebp - 0x14 ]
mov [ esi + eax * 4 ] ecx
dec eax
jmp r-xdata
mov ebx [ ebp - 0x38 ]
sub ebx [ ebp - 0x2c ]
mov edi ecx
sub edi esi
cmp ebx edi
jge r-xdata
mov eax esi
mov esi [ ebp - 0x24 ]
mov [ ebp - 0x24 ] eax
mov eax ecx
mov ecx [ ebp - 0x30 ]
mov [ ebp - 0x30 ] eax
mov eax [ ebp - 0x3c ]
mov [ ebp - 0x3c ] edx
mov edi [ ebp - 0x30 ]
sub edi [ ebp - 0x24 ]
mov ebx ecx
sub ebx esi
cmp ebx edi
jge r-xdata
mov edi [ ebp - 0x2c ]
mov ebx [ ebp - 0x38 ]
mov ebx [ ebp - 0x2c ]
mov edi esi
mov esi ebx
mov ebx [ ebp - 0x38 ]
mov [ ebp + 0x18 ] ebx
mov ebx ecx
mov ecx [ ebp + 0x18 ]
mov [ ebp - 0x44 ] eax
mov eax edx
jmp r-xdata
mov edx [ ebp - 0x50 ]
mov [ edx ] edi
mov edx [ ebp - 0x58 ]
mov edi [ ebp - 0x44 ]
mov [ edx ] ebx
mov ebx [ ebp - 0x48 ]
mov edx [ ebp - 0x4c ]
inc ebx
mov [ ebp + ebx * 4 - 0x1e8 ] esi
mov esi [ ebp + 0x8 ]
mov [ edx ] edi
mov [ ebp + ebx * 4 - 0x508 ] eax
mov eax [ ebp - 0x24 ]
mov [ ebp + ebx * 4 - 0x378 ] ecx
inc ebx
mov [ ebp + ebx * 4 - 0x1e8 ] eax
mov eax [ ebp - 0x30 ]
mov [ ebp + ebx * 4 - 0x378 ] eax
mov eax [ ebp - 0x3c ]
mov [ ebp + ebx * 4 - 0x508 ] eax
inc ebx
jmp r-xdata
sub_10020ebf
push ebp
lea ebp [ esp - 0x188 ]
sub esp 0xd2c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp + 0x184 ] eax
cmp [ ebp + 0x198 ] 0x4
mov eax [ ebp + 0x190 ]
push ebx
push edi
mov [ ebp + 0x64 ] eax
mov eax [ ebp + 0x19c ]
mov ebx ecx
mov edi edx
mov [ ebp + 0x6c ] ebx
mov [ ebp + 0x70 ] edi
mov [ ebp + 0x5c ] eax
jl r-xdata
mov eax 0x10000
push r--data
call sub_10028ff7
add eax 0x40
push eax
call sub_100291ae
pop ecx
pop ecx
and [ esi + eax * 4 ] 0x0
dec eax
jns r-xdata
movzx ecx [ edi ]
mov edx [ ebp + 0x194 ]
shl ecx 0x8
dec edx
cmp edx 0x3
jl r-xdata
test edx edx
jl r-xdata
mov eax [ ebp + 0x64 ]
lea edi [ eax + edx * 2 - 0x4 ]
mov edi [ ebp + 0x70 ]
mov edi [ ebp + 0x64 ]
xor eax eax
mov [ edi + edx * 2 ] ax
mov edi [ ebp + 0x70 ]
movzx eax [ edi + edx ]
shl eax 0x8
sar ecx 0x8
or ecx eax
inc [ esi + ecx * 4 ]
dec edx
jns r-xdata
xor eax eax
mov [ edi + 0x4 ] ax
mov eax [ ebp + 0x70 ]
movzx eax [ eax + edx ]
sar ecx 0x8
shl eax 0x8
or eax ecx
inc [ esi + eax * 4 ]
xor ecx ecx
mov [ edi + 0x2 ] cx
mov ecx [ ebp + 0x70 ]
movzx ecx [ ecx + edx - 0x1 ]
shl ecx 0x8
sar eax 0x8
or ecx eax
inc [ esi + ecx * 4 ]
xor eax eax
mov [ edi ] ax
mov eax [ ebp + 0x70 ]
movzx eax [ eax + edx - 0x2 ]
sar ecx 0x8
shl eax 0x8
or eax ecx
inc [ esi + eax * 4 ]
xor ecx ecx
mov [ edi - 0x2 ] cx
mov ecx [ ebp + 0x70 ]
movzx ecx [ ecx + edx - 0x3 ]
shl ecx 0x8
sar eax 0x8
or ecx eax
inc [ esi + ecx * 4 ]
sub edx 0x4
sub edi 0x8
cmp edx 0x3
jge r-xdata
mov cl [ edi + eax ]
mov edx [ ebp + 0x68 ]
mov [ edx + eax ] cl
mov edx [ ebp + 0x78 ]
add [ ebp + 0x78 ] 0x2
xor ecx ecx
inc eax
cmp eax 0x22
mov [ edx ] cx
jl r-xdata
cmp [ ebp + 0x198 ] 0x4
jl r-xdata
jmp r-xdata
xor ecx ecx
inc ecx
push r--data
call sub_10028ff7
add eax 0x40
push eax
call sub_100291ae
pop ecx
pop ecx
mov ecx [ ebp + 0x194 ]
mov edx [ ebp + 0x64 ]
lea edx [ edx + ecx * 2 ]
xor eax eax
add ecx edi
mov [ ebp + 0x78 ] edx
mov [ ebp + 0x68 ] ecx
mov edx [ esi + ecx * 4 - 0x4 ]
lea eax [ esi + ecx * 4 ]
add [ eax ] edx
inc ecx
cmp ecx 0x10000
jle r-xdata
movzx ax [ edi ]
mov edx [ ebp + 0x194 ]
shl ax 0x8
dec edx
cmp edx 0x3
movzx ecx ax
jl r-xdata
test edx edx
jl r-xdata
mov edi [ ebp + 0x70 ]
or [ ebp + 0x78 ] 0xffffffff
sub [ ebp + 0x78 ] edi
mov [ ebp + 0x80 ] 0xfffffffe
sub [ ebp + 0x80 ] edi
lea eax [ edi + edx - 0x1 ]
push 0x100
xor edi edi
lea eax [ ebp + 0x84 ]
push edi
push eax
call sub_10026630
add esp 0xc
mov eax [ ebp + 0x70 ]
movzx ax [ eax + edx ]
shl ax 0x8
shr cx 0x8
or ax cx
movzx ecx ax
movzx eax cx
lea edi [ esi + eax * 4 ]
mov eax [ edi ]
dec eax
mov [ edi ] eax
mov [ ebx + eax * 4 ] edx
dec edx
jns r-xdata
movzx di [ eax + 0x1 ]
shr cx 0x8
shl di 0x8
or di cx
movzx edi di
movzx ecx di
lea ebx [ esi + ecx * 4 ]
mov ecx [ ebx ]
dec ecx
mov [ ebx ] ecx
mov ebx [ ebp + 0x6c ]
mov [ ebx + ecx * 4 ] edx
movzx cx [ eax ]
shl cx 0x8
shr di 0x8
or cx di
movzx ecx cx
mov [ ebp + 0x74 ] ecx
movzx ecx cx
lea edi [ esi + ecx * 4 ]
mov ecx [ edi ]
dec ecx
mov [ edi ] ecx
lea edi [ edx - 0x1 ]
mov [ ebx + ecx * 4 ] edi
movzx di [ eax - 0x1 ]
mov ecx [ ebp + 0x74 ]
shl di 0x8
shr cx 0x8
or di cx
movzx ecx di
mov [ ebp + 0x74 ] ecx
movzx ecx cx
lea edi [ esi + ecx * 4 ]
mov ecx [ edi ]
dec ecx
mov [ edi ] ecx
mov edi [ ebp + 0x78 ]
add edi eax
mov [ ebx + ecx * 4 ] edi
movzx di [ eax - 0x2 ]
mov ecx [ ebp + 0x74 ]
shr cx 0x8
shl di 0x8
or di cx
movzx ecx di
mov [ ebp + 0x74 ] ecx
movzx ecx cx
lea edi [ esi + ecx * 4 ]
mov ecx [ edi ]
dec ecx
mov [ edi ] ecx
mov edi [ ebp + 0x80 ]
add edi eax
sub edx 0x4
sub eax 0x4
cmp edx 0x3
mov [ ebx + ecx * 4 ] edi
mov ecx [ ebp + 0x74 ]
jge r-xdata
mov [ ebp + edi * 4 - 0x3a4 ] edi
inc edi
cmp edi 0xff
jle r-xdata
xor eax eax
inc eax
imul eax eax 0x3
inc eax
cmp eax 0x100
jle r-xdata
mov [ ebp + 0x7c ] eax
cmp [ ebp + 0x7c ] 0x1
jne r-xdata
lea eax [ ebp - 0x3a4 ]
mov [ ebp + 0x78 ] eax
mov eax [ ebp + 0x7c ]
push 0x3
cdq
pop ecx
idiv ecx
cmp eax 0xff
mov [ ebp + 0x7c ] eax
mov [ ebp + 0x74 ] eax
jg r-xdata
and [ ebp + 0x78 ] 0x0
and [ ebp + 0x74 ] 0x0
inc [ ebp + 0x74 ]
mov eax [ ebp + 0x6c ]
add [ ebp + 0x78 ] 0x4
cmp [ ebp + 0x74 ] 0xff
mov [ ebp + edi * 4 - 0x3a4 ] eax
jle r-xdata
mov eax [ ebp + 0x78 ]
jmp r-xdata
inc [ ebp + 0x7c ]
cmp [ ebp + 0x7c ] 0xff
jle r-xdata
shl eax 0x8
add eax [ ebp + 0x7c ]
lea eax [ esi + eax * 4 ]
mov [ ebp + 0x6c ] eax
mov eax [ eax ]
test eax 0x200000
jne r-xdata
mov edi [ ebp + 0x74 ]
mov eax [ ebp + edi * 4 - 0x3a4 ]
mov ecx [ ebp + 0x78 ]
mov ecx [ ecx ]
mov [ ebp + 0x6c ] eax
shl eax 0xa
shl ecx 0xa
add eax esi
lea edx [ ecx + esi ]
mov ecx [ eax + 0x400 ]
sub ecx [ eax ]
mov eax [ edx + 0x400 ]
sub eax [ edx ]
cmp eax ecx
jbe r-xdata
mov edx [ eax ]
mov [ ebp + edi * 4 - 0x3a4 ] edx
mov edx [ ebp + 0x7c ]
sub edi edx
shl edx 0x2
sub eax edx
mov edx [ ebp + 0x7c ]
dec edx
cmp edi edx
mov [ ebp + 0x68 ] eax
jle r-xdata
cmp [ ebp + 0x7c ] eax
je r-xdata
lea ecx [ ebp + eax + 0x84 ]
cmp [ ecx ] 0x0
mov [ ebp + 0x60 ] ecx
jne r-xdata
mov eax [ ebp + 0x6c ]
mov ecx 0xffdfffff
and eax ecx
mov [ ebp + 0x80 ] eax
mov eax [ ebp + 0x6c ]
mov edi [ eax + 0x4 ]
and edi ecx
dec edi
cmp edi [ ebp + 0x80 ]
jle r-xdata
mov eax [ eax ]
shl eax 0xa
add eax esi
mov edx [ eax + 0x400 ]
sub edx [ eax ]
cmp edx ecx
ja r-xdata
push 0x3ee
mov edx eax
shl edx 0x2
lea ecx [ esi + edx ]
mov [ ebp + 0x7c ] ecx
mov [ ebp + 0x80 ] ecx
xor ecx ecx
or [ eax ] 0x200000
mov eax [ ebp + 0x68 ]
cmp [ ebp + 0x198 ] 0x4
jl r-xdata
mov eax [ ebp + 0x68 ]
mov edi [ ebp + 0x80 ]
mov edi [ edi ]
and edi 0xffdfffff
mov [ ebp + ecx - 0x7a4 ] edi
mov edi [ ebp + 0x80 ]
mov edi [ edi + 0x4 ]
add [ ebp + 0x80 ] 0x400
and edi 0xffdfffff
dec edi
mov [ ebp + ecx - 0xba4 ] edi
add ecx 0x4
cmp ecx 0x3fc
jle r-xdata
shl eax 0xa
lea edi [ eax + esi ]
mov eax [ edi ]
lea ecx [ ebp + edx - 0x7a4 ]
and eax 0xffdfffff
cmp eax [ ecx ]
mov [ ebp + 0x80 ] edi
mov [ ebp + 0x68 ] ecx
jge r-xdata
push [ ebp + 0x5c ]
mov eax [ ebp + 0x80 ]
push edi
push [ ebp + 0x194 ]
push [ ebp + 0x64 ]
push [ ebp + 0x70 ]
push ebx
call sub_10020b4f
sub edi [ ebp + 0x80 ]
mov eax [ ebp + 0x78 ]
lea eax [ eax + edi + 0x1 ]
mov [ ebp + 0x78 ] eax
mov eax [ ebp + 0x5c ]
add esp 0x18
cmp [ eax ] 0x0
jl r-xdata
mov eax edi
sub eax [ ebp + 0x80 ]
inc eax
push eax
push [ ebp + 0x78 ]
push [ ebp + 0x7c ]
push [ ebp + 0x68 ]
push r--data
call sub_10028ff7
add eax 0x40
push eax
call sub_100291ae
add esp 0x18
mov eax [ edi + 0x400 ]
lea edx [ ebp + edx - 0xba4 ]
and eax 0xffdfffff
mov [ ebp + 0x80 ] edx
jmp r-xdata
mov ecx [ ebx + eax * 4 ]
dec ecx
jns r-xdata
mov ecx [ ebp + 0x184 ]
pop edi
xor ecx ebp
pop ebx
call sub_10025c8d
add ebp 0x188
leave
retn
dec eax
cmp eax [ edx ]
jg r-xdata
mov edi [ ebp + 0x70 ]
movzx edi [ edi + ecx ]
cmp [ ebp + edi + 0x84 ] 0x0
jne r-xdata
add ecx [ ebp + 0x194 ]
mov ecx [ ebx + eax * 4 ]
dec ecx
jns r-xdata
mov eax [ ebp + 0x68 ]
mov eax [ eax ]
mov edx [ edx ]
lea ecx [ eax - 0x1 ]
cmp ecx edx
je r-xdata
mov ecx [ ebp + 0x68 ]
inc eax
cmp eax [ ecx ]
jl r-xdata
lea edi [ ebp + edi * 4 - 0x7a4 ]
mov [ ebp + 0x6c ] edi
mov edi [ edi ]
mov [ ebx + edi * 4 ] ecx
mov ecx [ ebp + 0x6c ]
inc edi
mov [ ecx ] edi
mov edx [ ebp + 0x70 ]
movzx edx [ edx + ecx ]
cmp [ ebp + edx + 0x84 ] 0x0
jne r-xdata
add ecx [ ebp + 0x194 ]
mov eax [ ebp + 0x7c ]
mov ecx 0x100
test eax eax
jne r-xdata
mov edi [ ebp + 0x80 ]
mov edx [ ebp + 0x80 ]
lea edx [ ebp + edx * 4 - 0xba4 ]
mov [ ebp + 0x6c ] edx
mov edx [ edx ]
mov [ ebx + edx * 4 ] ecx
mov ecx [ ebp + 0x6c ]
dec edx
mov [ ecx ] edx
or [ eax ] 0x200000
add eax 0x400
dec ecx
jne r-xdata
cmp [ ebp + 0x74 ] 0xff
mov eax [ ebp + 0x60 ]
mov [ eax ] 0x1
jge r-xdata
push 0x3ef
jmp r-xdata
mov eax [ ebp + 0x194 ]
dec eax
cmp edx eax
jne r-xdata
inc [ ebp + 0x74 ]
cmp [ ebp + 0x74 ] 0xff
jle r-xdata
mov edx [ edi ]
mov eax [ edi + 0x400 ]
and [ ebp + 0x80 ] 0x0
mov ecx 0xffdfffff
and edx ecx
and eax ecx
sub eax edx
cmp eax 0xfffe
jle r-xdata
call sub_1001b111
mov eax [ ebp + 0x74 ]
mov eax [ ebp + eax * 4 - 0x3a4 ]
and [ ebp + 0x7c ] 0x0
mov [ ebp + 0x68 ] eax
cmp [ ebp + 0x198 ] 0x4
jl r-xdata
dec eax
mov [ ebp + 0x60 ] eax
mov [ ebp + 0x7c ] eax
js r-xdata
inc [ ebp + 0x80 ]
mov ecx [ ebp + 0x80 ]
mov edi eax
sar edi cl
cmp edi 0xfffe
jg r-xdata
mov eax [ ebp + 0x194 ]
sub eax [ ebp + 0x78 ]
push eax
push [ ebp + 0x78 ]
push [ ebp + 0x194 ]
push r--data
call sub_10028ff7
add eax 0x40
push eax
call sub_100291ae
add esp 0x14
mov ecx [ ebp + 0x80 ]
sar eax cl
cmp eax 0xffff
jg r-xdata
add edx eax
lea edi [ ebx + edx * 4 ]
push 0x3ea
jmp r-xdata
dec [ ebp + 0x7c ]
sub edi 0x4
cmp [ ebp + 0x7c ] 0x0
jge r-xdata
mov eax [ ebp + 0x194 ]
add edx eax
mov eax [ ebp + 0x64 ]
mov [ eax + edx * 2 ] cx
mov ecx [ ebp + 0x80 ]
mov eax [ ebp + 0x7c ]
mov edx [ edi ]
sar eax cl
cmp edx 0x22
movzx ecx ax
mov eax [ ebp + 0x64 ]
mov [ eax + edx * 2 ] cx
jge r-xdata
mov eax [ ebp + 0x60 ]
sub_1002158b
push ebp
mov ebp esp
sub esp 0x1c
mov eax [ edi + 0x20 ]
mov edx [ edi + 0x18 ]
mov ecx [ edi + 0x24 ]
push ebx
mov ebx [ edi + 0x268 ]
push esi
mov esi [ edi + 0x44 ]
cmp esi 0x2710
mov [ ebp - 0x18 ] eax
mov eax [ edi + 0x30 ]
mov [ ebp - 0x14 ] edx
mov [ ebp - 0x10 ] esi
mov [ ebp - 0x4 ] ebx
jge r-xdata
lea edx [ esi + 0x22 ]
test dl 0x1
je r-xdata
push ebx
push esi
mov eax edx
jmp r-xdata
add edx ecx
cmp eax 0x1
mov [ ebp - 0xc ] edx
jge r-xdata
inc edx
push [ edi + 0x14 ]
push [ edi + 0x10 ]
call sub_100203fc
add esp 0x10
cmp eax 0x64
jle r-xdata
xor eax eax
inc eax
cmp [ edi + 0x1c ] 0xffffffff
jne r-xdata
mov ecx [ ebp - 0x18 ]
cmp [ ecx + eax * 4 ] 0x0
je r-xdata
dec eax
push 0x3
pop ebx
cdq
idiv ebx
mov edx ecx
mov ecx [ ebp - 0x18 ]
mov ebx eax
imul ebx esi
lea eax [ ebp - 0x8 ]
push eax
push [ ebp - 0x4 ]
mov [ ebp - 0x8 ] ebx
push esi
push [ ebp - 0xc ]
mov esi [ ebp - 0x14 ]
call sub_10020ebf
add esp 0x10
cmp [ ebp - 0x4 ] 0x3
jl r-xdata
push 0x64
pop eax
pop esi
pop ebx
leave
retn
push 0x3eb
call sub_1001b111
mov [ edi + 0x1c ] eax
inc eax
cmp eax [ edi + 0x44 ]
jl r-xdata
cmp [ ebp - 0x8 ] 0x0
jge r-xdata
mov eax [ ebp - 0x10 ]
mov [ ebp - 0xc ] 0x1
test eax eax
je r-xdata
jmp r-xdata
or [ edi + 0x1c ] 0xffffffff
xor eax eax
cmp [ edi + 0x44 ] eax
jle r-xdata
cmp [ ebp - 0x4 ] 0x2
jl r-xdata
sub ebx [ ebp - 0x8 ]
push ecx
mov [ ebp - 0x1c ] ebx
fild [ ebp - 0x1c ]
push ecx
fidiv [ ebp - 0xc ]
fstp [ esp ]
push eax
push ebx
push r--data
call sub_10028ff7
add eax 0x40
push eax
call sub_100291ae
add esp 0x18
mov [ ebp - 0xc ] eax
push [ ebp - 0x4 ]
mov eax esi
push [ ebp - 0x10 ]
push r--data
call sub_10028ff7
add eax 0x40
push eax
call sub_100291ae
pop ecx
pop ecx
sub_100216b7
push ebp
mov ebp esp
mov eax 0x1440
call sub_1002d210
push ebx
push esi
push edi
mov edi [ ebp + 0xc ]
test edi edi
jle r-xdata
xor eax eax
xor edx edx
inc eax
cmp edi eax
mov ebx edi
mov [ ebp - 0x420 ] edx
mov [ ebp - 0xc30 ] edx
mov [ ebp - 0x1440 ] 0xfffffffe
mov [ ebp - 0x4 ] eax
jl r-xdata
lea edx [ ebp - 0xc2c ]
sub edx ecx
mov esi edi
cmp ebx 0x204
jge r-xdata
mov ecx edi
or eax 0xffffffff
lea edi [ ebp - 0x143c ]
[ edi ]
shl eax 0x8
mov [ edx + ecx ] eax
add ecx 0x4
dec esi
jne r-xdata
inc eax
push 0x7d2
jmp r-xdata
mov edi [ ebp + 0xc ]
xor edx edx
inc edx
xor bl bl
cmp edi edx
jl r-xdata
mov ecx [ ebp - 0xc ]
mov esi [ ebp - 0x8 ]
mov [ ebp - 0x8 ] esi
mov esi [ ecx ]
mov ecx edx
mov eax [ ecx ]
test eax eax
jne r-xdata
call sub_1001b111
pop edi
pop esi
pop ebx
leave
retn
lea esi [ ebp - 0x143c ]
mov ecx [ ebp - 0x4 ]
inc edx
lea eax [ ebp + edx * 4 - 0x420 ]
mov [ eax ] ecx
mov eax ecx
mov ecx edx
sar ecx 0x1
mov edi [ ebp + ecx * 4 - 0x420 ]
mov [ ebp - 0x8 ] ecx
lea ecx [ ebp + eax * 4 - 0xc30 ]
mov esi [ ecx ]
cmp esi [ ebp + edi * 4 - 0xc30 ]
mov [ ebp - 0xc ] edx
jge r-xdata
cmp edx 0x104
jl r-xdata
mov [ ebp + ecx * 4 - 0x420 ] edi
mov ecx [ ebp - 0x8 ]
mov edi ecx
sar edi 0x1
mov [ ebp - 0x8 ] edi
mov edi [ ebp + edi * 4 - 0x420 ]
cmp esi [ ebp + edi * 4 - 0xc30 ]
jl r-xdata
jmp r-xdata
cmp ecx 0x11
mov eax [ ebp + 0x8 ]
mov [ eax + edx - 0x1 ] cl
jle r-xdata
mov eax esi
cmp edx 0x1
jg r-xdata
push 0x7d1
inc [ ebp - 0x4 ]
mov [ ebp + ecx * 4 - 0x420 ] eax
mov eax [ ebp - 0x4 ]
cmp eax [ ebp + 0xc ]
jle r-xdata
inc edx
add esi 0x4
cmp edx edi
jle r-xdata
mov bl 0x1
mov eax [ eax ]
lea eax [ ebp + eax * 4 - 0x1440 ]
inc ecx
cmp [ eax ] 0x0
jge r-xdata
mov eax [ ebp - 0x41c ]
mov ecx [ ebp + edx * 4 - 0x420 ]
mov [ ebp - 0x10 ] eax
xor eax eax
push 0x2
dec edx
pop esi
inc eax
cmp esi edx
mov [ ebp - 0x41c ] ecx
mov [ ebp - 0x8 ] ecx
jg r-xdata
xor ecx ecx
cmp [ esi ] ecx
jl r-xdata
test bl bl
je r-xdata
mov ecx [ ebp - 0x8 ]
mov [ ebp + eax * 4 - 0x420 ] ecx
mov esi [ ebp + edx * 4 - 0x420 ]
mov ecx [ ebp - 0x41c ]
xor eax eax
dec edx
inc eax
cmp edx 0x2
mov [ ebp - 0x41c ] esi
mov [ ebp - 0x8 ] esi
mov [ ebp - 0x4 ] 0x2
jl r-xdata
mov ecx [ ebp + ecx * 4 - 0xc30 ]
mov [ ebp - 0xc ] ecx
xor esi esi
inc esi
mov esi [ ebp - 0x8 ]
mov [ ebp + eax * 4 - 0x420 ] esi
mov esi [ ebp - 0x10 ]
mov eax ecx
shl eax 0x2
mov ecx [ ebp + eax - 0xc30 ]
shl esi 0x2
inc ebx
mov [ ebp + eax - 0x1440 ] ebx
mov eax [ ebp + esi - 0xc30 ]
mov edi 0xff
mov [ ebp + esi - 0x1440 ] ebx
mov [ ebp - 0x4 ] ecx
and [ ebp - 0x4 ] edi
mov esi eax
and esi edi
mov edi [ ebp - 0x4 ]
cmp esi edi
jle r-xdata
mov esi [ ebp + esi * 4 - 0xc30 ]
cmp [ ebp - 0x4 ] edx
mov [ ebp - 0xc ] esi
mov ecx [ ebp + esi * 4 - 0x420 ]
mov edi [ ebp - 0xc ]
cmp edi [ ebp + ecx * 4 - 0xc30 ]
jl r-xdata
mov ecx [ ebp + esi * 4 - 0x41c ]
mov edi [ ebp + esi * 4 - 0x420 ]
mov ecx [ ebp + ecx * 4 - 0xc30 ]
cmp ecx [ ebp + edi * 4 - 0xc30 ]
jge r-xdata
lea ecx [ ebp + esi * 4 - 0xc30 ]
mov eax [ ecx ]
sar eax 0x8
cdq
sub eax edx
sar eax 0x1
inc eax
shl eax 0x8
inc esi
cmp esi edi
mov [ ecx ] eax
jle r-xdata
jmp r-xdata
or [ ebp + ebx * 4 - 0x1440 ] 0xffffffff
mov esi 0xffffff00
and eax esi
and ecx esi
add eax ecx
inc edi
or eax edi
inc edx
mov [ ebp + ebx * 4 - 0xc30 ] eax
lea eax [ ebp + edx * 4 - 0x420 ]
mov ecx edx
sar ecx 0x1
mov [ eax ] ebx
mov esi [ ebp + ecx * 4 - 0x420 ]
mov eax ebx
mov [ ebp - 0x8 ] ecx
lea ecx [ ebp + eax * 4 - 0xc30 ]
mov edi [ ecx ]
cmp edi [ ebp + esi * 4 - 0xc30 ]
mov [ ebp - 0x4 ] edx
jge r-xdata
mov edi esi
mov esi [ ebp - 0x4 ]
mov esi [ ebp + esi * 4 - 0x420 ]
mov edi [ ebp - 0xc ]
cmp edi [ ebp + esi * 4 - 0xc30 ]
jl r-xdata
mov esi [ ebp - 0x4 ]
shl esi 0x2
mov edi [ ebp + esi - 0x41c ]
mov esi [ ebp + esi - 0x420 ]
mov edi [ ebp + edi * 4 - 0xc30 ]
cmp edi [ ebp + esi * 4 - 0xc30 ]
jge r-xdata
mov [ ebp + eax * 4 - 0x420 ] ecx
mov eax esi
add esi esi
cmp esi edx
jle r-xdata
inc esi
mov ecx [ ebp - 0x4 ]
mov [ ebp + ecx * 4 - 0x420 ] eax
mov ecx [ ecx ]
mov edi [ ebp - 0x8 ]
mov [ ebp - 0x10 ] ecx
mov [ ebp + eax * 4 - 0x420 ] esi
mov eax [ ebp - 0x4 ]
shl [ ebp - 0x4 ] 0x1
cmp [ ebp - 0x4 ] edx
jle r-xdata
inc [ ebp - 0x4 ]
jge r-xdata
mov ecx [ ebp - 0x4 ]
mov [ ebp - 0x4 ] edi
sar edi 0x1
mov [ ebp + ecx * 4 - 0x420 ] esi
mov esi [ ebp + edi * 4 - 0x420 ]
mov ecx [ ebp - 0x10 ]
cmp ecx [ ebp + esi * 4 - 0xc30 ]
jl r-xdata
jge r-xdata
sub_100219fa
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi [ ebp + 0x10 ]
xor ecx ecx
cmp esi [ ebp + 0x14 ]
push edi
mov ebx eax
mov [ ebp - 0x4 ] esi
jg r-xdata
push 0x17
xor eax eax
pop ecx
mov edi edx
[ edi ]
xor ecx ecx
cmp [ ebp + 0x18 ] ecx
jle r-xdata
xor eax eax
cmp [ ebp + 0x18 ] eax
jle r-xdata
xor ecx ecx
inc ecx
movzx eax [ ecx + ebx ]
lea eax [ edx + eax * 4 + 0x4 ]
inc [ eax ]
inc ecx
cmp ecx [ ebp + 0x18 ]
jl r-xdata
inc [ ebp - 0x4 ]
mov eax [ ebp + 0x14 ]
cmp [ ebp - 0x4 ] eax
jle r-xdata
movzx edi [ eax + ebx ]
cmp edi [ ebp - 0x4 ]
jne r-xdata
mov edi [ edx + ecx * 4 - 0x4 ]
lea eax [ edx + ecx * 4 ]
add [ eax ] edi
inc ecx
cmp ecx 0x17
jl r-xdata
mov edi [ ebp + 0x8 ]
push 0x17
xor eax eax
and [ ebp + 0x18 ] eax
pop ecx
[ edi ]
mov ecx [ ebp + 0x14 ]
cmp esi ecx
jg r-xdata
inc eax
cmp eax [ ebp + 0x18 ]
jl r-xdata
mov edi [ ebp + 0xc ]
mov [ edi + ecx * 4 ] eax
inc ecx
lea eax [ esi + 0x1 ]
cmp eax [ ebp + 0x14 ]
jg r-xdata
mov edi [ ebp + 0x8 ]
sub edi edx
sub ecx esi
lea eax [ edx + esi * 4 ]
mov [ ebp - 0x4 ] edi
inc ecx
pop edi
pop esi
pop ebx
leave
retn
mov ecx [ ebp + 0x8 ]
lea ecx [ ecx + eax * 4 - 0x4 ]
mov ebx [ ebp - 0x4 ]
lea esi [ eax + 0x4 ]
mov edi [ esi ]
sub edi [ eax ]
add [ ebp + 0x18 ] edi
mov edi [ ebp + 0x18 ]
shl [ ebp + 0x18 ] 0x1
dec edi
dec ecx
mov [ ebx + eax ] edi
mov eax esi
jne r-xdata
mov esi [ ebp + 0x10 ]
mov esi [ ecx ]
lea esi [ esi + esi + 0x2 ]
sub esi [ edx + eax * 4 ]
add ecx 0x4
mov [ edx + eax * 4 ] esi
inc eax
cmp eax [ ebp + 0x14 ]
jle r-xdata
sub_10021af8
push 0x80
mov eax sub_1004dd3f
call sub_10029e33
mov edi ecx
xor esi esi
cmp [ ebp + 0x8 ] esi
jne r-xdata
mov eax [ edi + 0x14 ]
push 0x4
push 0x1000
lea ebx [ eax + eax ]
push ebx
push esi
push [ ebp + 0x8 ]
call [ VirtualAllocEx@IAT ]
mov [ ebp - 0x18 ] eax
cmp eax esi
jne r-xdata
push r--data
lea ecx [ ebp - 0x64 ]
call sub_10001b81
mov [ ebp - 0x4 ] esi
lea esi [ ebp - 0x20 ]
call sub_1001564a
mov [ ebp - 0x4 ] 0x2
and [ ebp - 0x14 ] 0x0
push r--data
lea ecx [ ebp - 0x48 ]
call sub_10001b81
lea eax [ ebp - 0x48 ]
push eax
mov eax esi
push eax
mov [ ebp - 0x4 ] 0x3
call sub_100157f2
push 0x0
push 0x1
lea ecx [ ebp - 0x48 ]
mov esi eax
mov [ ebp - 0x4 ] 0x2
call sub_100022b5
cmp [ edi + 0x18 ] 0x8
jb r-xdata
push r--data
lea ecx [ ebp - 0x64 ]
call sub_10001b81
mov [ ebp - 0x4 ] 0x1
jmp r-xdata
add edi 0x4
mov edi [ edi + 0x4 ]
jmp r-xdata
lea eax [ ebp - 0x64 ]
push eax
lea ecx [ ebp - 0x8c ]
call sub_100078c4
push r--data
lea eax [ ebp - 0x8c ]
push eax
call sub_10029a01
cmp [ ebp - 0x14 ] ebx
je r-xdata
push r--data
lea ecx [ ebp - 0x64 ]
call sub_10001b81
mov [ ebp - 0x4 ] 0x4
jmp r-xdata
lea eax [ ebp - 0x14 ]
push eax
push ebx
push edi
push [ ebp - 0x18 ]
push [ ebp + 0x8 ]
call esi
cmp eax 0x1
je r-xdata
push r--data
lea ecx [ ebp - 0x48 ]
call sub_10001b81
lea eax [ ebp - 0x48 ]
push eax
lea eax [ ebp - 0x20 ]
push eax
mov [ ebp - 0x4 ] 0x6
call sub_100157f2
push 0x0
push 0x1
lea ecx [ ebp - 0x48 ]
mov edi eax
mov [ ebp - 0x4 ] 0x2
call sub_100022b5
push [ ebp + 0x8 ]
mov esi edi
call sub_10021ced
push [ ebp - 0x18 ]
push edi
push [ ebp + 0x8 ]
lea edi [ ebp - 0x2c ]
call sub_10022059
push 0xa
mov [ ebp - 0x4 ] 0x7
call [ Sleep@IAT ]
mov eax edi
push eax
call sub_10014acd
mov ecx edi
mov [ ebp - 0x2c ] r--data
call sub_10015935
call sub_10029f0b
retn 0x4
push r--data
lea ecx [ ebp - 0x64 ]
call sub_10001b81
mov [ ebp - 0x4 ] 0x5
jmp r-xdata
sub_10021c7c
push 0x30
mov eax sub_1004e78b
call sub_10029e33
mov [ ebp - 0x18 ] r--data
call sub_100156f5
mov [ ebp - 0x14 ] eax
and [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x3c ]
lea eax [ ebp - 0x18 ]
call sub_100158fa
mov esi eax
push [ ebp + 0x8 ]
lea ebx [ ebp - 0x20 ]
mov [ ebp - 0x4 ] 0x1
call sub_10022183
pop ecx
mov [ ebp - 0x4 ] 0x2
mov eax [ ebp - 0x20 ]
push [ eax + 0x8 ]
mov ecx esi
call sub_10021af8
mov [ ebp - 0x4 ] 0x1
mov ecx [ ebp - 0x1c ]
test ecx ecx
je r-xdata
push 0x0
push 0x1
lea ecx [ ebp - 0x3c ]
call sub_1000247e
call sub_10029f0b
retn 0x4
call sub_1000990a
sub_10021ced
push 0x70
mov eax sub_1004c60c
call sub_10029e9c
mov eax [ ebp + 0x8 ]
xor ebx ebx
push ebx
push 0x15
lea ecx [ ebp - 0x30 ]
mov [ ebp - 0x38 ] eax
call sub_10005b42
mov [ ebp - 0x4 ] ebx
cmp [ ebp - 0x18 ] 0x10
mov edi [ ebp - 0x2c ]
jae r-xdata
lea eax [ ebp - 0x34 ]
push eax
push 0x15
push edi
push esi
push [ ebp - 0x38 ]
mov [ ebp - 0x34 ] ebx
call [ ReadProcessMemory@IAT ]
mov ebx eax
call [ GetLastError@IAT ]
cmp ebx 0x1
je r-xdata
lea edi [ ebp - 0x2c ]
cmp [ ebp - 0x34 ] 0x15
je r-xdata
push r--data
lea ecx [ ebp - 0x54 ]
call sub_10001b81
mov [ ebp - 0x4 ] 0x1
xor ecx ecx
mov eax esi
sub edi esi
push r--data
lea ecx [ ebp - 0x54 ]
call sub_10001b81
mov [ ebp - 0x4 ] 0x2
jmp r-xdata
push r--data
lea ecx [ ebp - 0x54 ]
call sub_10001b81
mov [ ebp - 0x4 ] 0x3
jmp r-xdata
inc ecx
inc eax
cmp ecx 0x15
jl r-xdata
lea eax [ ebp - 0x54 ]
push eax
lea ecx [ ebp - 0x7c ]
call sub_100078c4
push r--data
lea eax [ ebp - 0x7c ]
push eax
call sub_10029a01
mov dl [ edi + eax ]
cmp dl [ eax ]
jne r-xdata
push 0x0
push 0x1
lea ecx [ ebp - 0x30 ]
call sub_100022b5
call sub_10029f1f
retn 0x4
sub_10021dbb
push 0x20
mov eax sub_1004e108
call sub_10029e33
mov esi [ ebp + 0x8 ]
xor edi edi
push edi
call sub_100152d5
push edi
push edi
push edi
push edi
push edi
push edi
push edi
push edi
push edi
push r--data
push r--data
mov [ ebp - 0x4 ] edi
push edi
mov [ esi ] r--data
call [ CreateWindowExW@IAT ]
push r--data
lea ecx [ ebp - 0x28 ]
mov ebx eax
call sub_10001b81
lea eax [ ebp - 0x28 ]
push eax
cmp ebx edi
setne al
movzx eax al
push eax
mov [ ebp - 0x4 ] 0x1
call sub_10014a2a
pop ecx
pop ecx
push edi
push 0x1
lea ecx [ ebp - 0x28 ]
call sub_100022b5
mov [ esi + 0x14 ] ebx
mov eax esi
call sub_10029f0b
retn 0x4
sub_10021e6f
push 0x874
mov eax sub_1004e74b
call sub_10029e9c
xor esi esi
mov [ ebp - 0x4 ] esi
push edi
mov [ ebp - 0x824 ] ebx
mov [ ebp - 0x820 ] esi
call sub_1001796b
cmp eax 0x197
je r-xdata
lea eax [ ebp - 0x83c ]
push eax
call sub_10021dbb
lea eax [ ebp - 0x83c ]
push eax
mov [ ebp - 0x4 ] 0x2
call sub_10014b90
mov eax [ edi + 0x4 ]
push esi
push 0x7
push 0x2eee
push eax
push [ ebp - 0x828 ]
call [ InternetErrorDlg@IAT ]
cmp eax esi
jne r-xdata
push r--data
lea ecx [ ebp - 0x858 ]
call sub_10001b81
mov [ ebp - 0x4 ] 0x1
lea eax [ ebp - 0x83c ]
push eax
call sub_10014acd
mov ecx ebx
call sub_10001ac0
lea ecx [ ebx + 0x1c ]
call sub_10001ac0
mov esi 0x800
push esi
lea eax [ ebp - 0x814 ]
push 0x0
push eax
mov [ ebp - 0x820 ] 0x1
mov [ ebp - 0x818 ] esi
call sub_10026630
add esp 0xc
lea eax [ ebp - 0x818 ]
push eax
lea eax [ ebp - 0x814 ]
push eax
push 0x2b
push edi
call sub_10017a84
lea eax [ ebp - 0x814 ]
push eax
mov ecx ebx
call sub_100013a5
push esi
lea eax [ ebp - 0x814 ]
push 0x0
push eax
mov [ ebp - 0x81c ] esi
call sub_10026630
add esp 0xc
lea eax [ ebp - 0x81c ]
push eax
lea eax [ ebp - 0x814 ]
push eax
push 0x2c
push edi
call sub_10017a84
lea eax [ ebp - 0x814 ]
push eax
lea ecx [ ebx + 0x1c ]
call sub_100013a5
lea ecx [ ebp - 0x83c ]
mov [ ebp - 0x4 ] 0x0
call sub_10021e50
mov eax ebx
call sub_10029f1f
retn
push r--data
lea ecx [ ebp - 0x858 ]
call sub_10001b81
mov [ ebp - 0x4 ] 0x3
jmp r-xdata
lea eax [ ebp - 0x858 ]
push eax
lea ecx [ ebp - 0x880 ]
call sub_100078c4
push r--data
lea eax [ ebp - 0x880 ]
push eax
call sub_10029a01
sub_10021fe1
push ebx
push ebp
push esi
mov esi [ EnumWindows@IAT ]
push edi
lea ebx [ ecx + 0x14 ]
push ebx
mov edi sub_1002201e
push edi
call esi
mov ebp [ Sleep@IAT ]
jmp r-xdata
cmp eax 0x1
je r-xdata
push 0x1
call ebp
push ebx
push edi
call esi
push 0x1
call ebp
push ebx
push edi
call esi
cmp eax 0x1
jne r-xdata
pop edi
pop esi
pop ebp
pop ebx
retn
sub_1002201e
mov eax [ esp + 0x8 ]
push esi
push [ esp + 0x8 ]
mov esi [ eax ]
call [ GetParent@IAT ]
cmp eax esi
pop esi
je r-xdata
push 0x1c0001
push 0xd
push 0x100
push [ esp + 0x10 ]
call [ PostMessageW@IAT ]
dec eax
neg eax
sbb eax eax
neg eax
xor eax eax
inc eax
jmp r-xdata
retn 0x8
sub_10022059
push 0x30
mov eax sub_1004d8d1
call sub_10029e33
lea eax [ ebp - 0x14 ]
push eax
xor esi esi
push esi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
push esi
push [ ebp + 0x8 ]
call [ CreateRemoteThread@IAT ]
push r--data
lea ecx [ ebp - 0x3c ]
mov [ ebp - 0x18 ] eax
call sub_10001b81
mov [ ebp - 0x4 ] esi
cmp [ ebp - 0x18 ] esi
lea eax [ ebp - 0x3c ]
push eax
sete al
movzx eax al
push eax
call sub_10014a2a
or [ ebp - 0x4 ] 0xffffffff
pop ecx
pop ecx
push esi
push 0x1
lea ecx [ ebp - 0x3c ]
call sub_100022b5
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x20 ] eax
mov eax [ ebp - 0x14 ]
push edi
lea ecx [ ebp - 0x20 ]
mov [ ebp - 0x1c ] eax
call sub_10014a60
mov [ edi ] r--data
mov eax edi
call sub_10029f0b
retn 0xc
sub_100220d9
push 0x48
mov eax sub_1004c5d1
call sub_10029e33
mov eax [ ebp + 0x8 ]
mov [ eax ] r--data
mov ecx r--data
mov [ eax + 0x4 ] ecx
mov [ eax + 0x8 ] edx
and [ ebp - 0x4 ] 0x0
mov [ eax + 0xc ] ecx
mov [ eax + 0x10 ] 0x0
mov [ ebp - 0x4 ] 0x1
test edx edx
jne r-xdata
call sub_10029f0b
retn 0x4
push r--data
lea ecx [ ebp - 0x2c ]
call sub_10001b81
lea eax [ ebp - 0x2c ]
push eax
lea ecx [ ebp - 0x54 ]
mov [ ebp - 0x4 ] 0x2
call sub_100078c4
push r--data
lea eax [ ebp - 0x54 ]
push eax
call sub_10029a01
sub_1002215e
push esi
mov esi ecx
push edi
lea ecx [ esi + 0xc ]
mov [ esi ] r--data
mov edi r--data
mov [ ecx ] edi
call sub_10015935
lea ecx [ esi + 0x4 ]
mov [ ecx ] edi
pop edi
pop esi
jmp sub_10015935
sub_10022183
push 0x28
mov eax sub_1004d576
call sub_10029e33
push [ ebp + 0x8 ]
xor edi edi
push edi
push 0x3a
mov [ ebp - 0x10 ] edi
call [ OpenProcess@IAT ]
push r--data
lea ecx [ ebp - 0x30 ]
mov [ ebp - 0x10 ] eax
call sub_10001b81
cmp [ ebp - 0x10 ] edi
lea eax [ ebp - 0x30 ]
push eax
sete al
movzx eax al
push eax
mov [ ebp - 0x4 ] edi
call sub_10014a2a
or [ ebp - 0x4 ] 0xffffffff
pop ecx
pop ecx
push edi
push 0x1
lea ecx [ ebp - 0x30 ]
call sub_100022b5
push 0x14
call sub_10025dd6
pop ecx
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x4 ] 0x1
cmp eax edi
je r-xdata
or [ ebp - 0x4 ] 0xffffffff
push edi
lea ecx [ ebx + 0x4 ]
mov [ ebx ] edi
call sub_1002221a
push edi
push edi
push ebx
call sub_1002360a
add esp 0xc
mov eax ebx
call sub_10029f0b
retn
mov edx [ ebp - 0x10 ]
push eax
call sub_100220d9
mov edi eax
sub_1002221a
push 0x4
mov eax sub_1004beb7
call sub_10029e66
mov esi ecx
and [ esi ] 0x0
and [ ebp - 0x4 ] 0x0
push 0x10
call sub_10025dd6
pop ecx
test eax eax
je r-xdata
xor eax eax
xor ecx ecx
inc ecx
mov [ eax + 0x4 ] ecx
mov [ eax + 0x8 ] ecx
mov ecx [ ebp + 0x8 ]
mov [ eax ] r--data
mov [ eax + 0xc ] ecx
jmp r-xdata
mov [ esi ] eax
mov eax esi
call sub_10029f0b
retn 0x4
sub_10022277
push 0x44
mov eax sub_1004ab3c
call sub_10029e33
push r--data
lea ecx [ ebp - 0x28 ]
call sub_10001b81
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x28 ]
push eax
lea ecx [ ebp - 0x50 ]
call sub_10001c41
push r--data
lea eax [ ebp - 0x50 ]
push eax
call sub_10029a01
int3
sub_100222af
push 0x44
mov eax sub_1004ab3c
call sub_10029e33
push r--data
lea ecx [ ebp - 0x28 ]
call sub_10001b81
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x28 ]
push eax
lea ecx [ ebp - 0x50 ]
call sub_1000b26d
push r--data
lea eax [ ebp - 0x50 ]
push eax
call sub_10029a01
int3
sub_100222e7
mov edi edi
push ebp
mov ebp esp
push esi
push edi
mov edi ecx
mov esi [ edi + 0x20 ]
jmp r-xdata
test esi esi
jne r-xdata
push [ esi + 0x4 ]
push edi
push [ ebp + 0x8 ]
call [ esi + 0x8 ]
mov esi [ esi ]
add esp 0xc
pop edi
pop esi
pop ebp
retn 0x4
sub_1002230e
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
push 0x0
mov ecx esi
call sub_100222e7
mov eax [ esi + 0x1c ]
test eax eax
je r-xdata
mov eax [ esi + 0x20 ]
and [ esi + 0x1c ] 0x0
test eax eax
je r-xdata
mov edi [ eax ]
push eax
call sub_10025c9c
pop ecx
mov eax edi
test edi edi
jne r-xdata
and [ esi + 0x20 ] 0x0
pop edi
pop esi
pop ebp
retn
mov edi [ eax ]
push eax
call sub_10025c9c
pop ecx
mov eax edi
test edi edi
jne r-xdata
sub_10022359
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
cmp [ esi + 0x4 ] 0x0
jbe r-xdata
push esi
call sub_1002230e
pop ecx
mov ecx [ esi + 0x24 ]
test ecx ecx
je r-xdata
mov eax [ esi + 0x4 ]
dec [ eax + rw-data ]
mov eax [ esi + 0x4 ]
cmp [ eax + rw-data ] 0x0
jg r-xdata
pop esi
pop ebp
retn
push 0x1
call sub_10006f2c
sub_1002239a
mov edi edi
push esi
push 0x18
mov esi ecx
call sub_10025dd6
push eax
mov [ esi ] eax
call sub_1002357f
pop ecx
pop ecx
mov eax esi
pop esi
retn
sub_100223dd
mov edi edi
push edi
push rw-data
mov edi ecx
call [ InterlockedIncrement@IAT ]
test eax eax
jne r-xdata
mov eax edi
pop edi
retn
push esi
mov esi rw-data
push esi
call sub_1002357f
add esi 0x18
cmp esi rw-data
pop ecx
jl r-xdata
pop esi
sub_1002240e
push rw-data
call [ InterlockedDecrement@IAT ]
test eax eax
jge r-xdata
retn
push esi
mov esi rw-data
push esi
call sub_1002358f
add esi 0x18
cmp esi rw-data
pop ecx
jl r-xdata
pop esi
sub_10022437
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp eax 0x4
push esi
mov esi ecx
mov [ esi ] eax
jge r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
imul eax eax 0x18
add eax rw-data
push eax
call sub_1002359f
pop ecx
sub_10022476
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push [ eax ]
push [ eax + 0x4 ]
lea eax [ ebp + 0xc ]
push eax
push 0x1
lea eax [ ebp + 0x8 ]
push eax
push 0x1
push 0x0
call sub_1002ad47
movsx ecx [ ebp + 0xc ]
add esp 0x1c
neg eax
sbb eax eax
and eax ecx
pop ebp
retn
sub_100224a5
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x14 ]
push [ eax ]
push [ eax + 0x4 ]
mov eax [ ebp + 0xc ]
push [ ebp + 0x10 ]
sub eax [ ebp + 0x8 ]
sar eax 0x1
push eax
push [ ebp + 0x8 ]
push 0x1
push 0x0
call sub_1002ad47
mov eax [ ebp + 0xc ]
add esp 0x1c
pop ebp
retn
sub_10022501
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_100224ec
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_10025c9c
pop ecx
sub_10022522
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
test ecx ecx
je r-xdata
pop ebp
retn
call sub_100077cb
test eax eax
je r-xdata
mov edx [ eax ]
push 0x1
mov ecx eax
call [ edx ]
sub_10022543
mov edi edi
push ebp
mov ebp esp
push ecx
push 0x0
lea ecx [ ebp - 0x4 ]
call sub_10022437
push rw-data
call sub_10022522
and [ rw-data ] 0x0
pop ecx
lea ecx [ ebp - 0x4 ]
call sub_1002245f
leave
retn
sub_10022575
mov edi edi
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
pop ebp
retn
push sub_10022543
mov [ rw-data ] 0x1
call sub_100235bf
pop ecx
sub_1002259f
push 0x4
mov eax sub_1004ab5f
call sub_10029e33
push 0x0
lea ecx [ ebp - 0x10 ]
call sub_10022437
mov edi [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
mov esi [ edi + 0xc ]
jmp r-xdata
test esi esi
ja r-xdata
mov eax [ edi + 0x8 ]
dec esi
lea eax [ eax + esi * 4 ]
cmp [ eax ] 0x0
je r-xdata
push [ edi + 0x8 ]
call sub_1002644d
or [ ebp - 0x4 ] 0xffffffff
pop ecx
lea ecx [ ebp - 0x10 ]
call sub_1002245f
call sub_10029f0b
retn
mov ecx [ eax ]
call sub_100077cb
test eax eax
je r-xdata
mov edx [ eax ]
push 0x1
mov ecx eax
call [ edx ]
sub_100225ff
mov edi edi
push ebp
mov ebp esp
push ecx
push 0x0
lea ecx [ ebp - 0x4 ]
call sub_10022437
jmp r-xdata
mov eax [ rw-data ]
test eax eax
jne r-xdata
mov ecx eax
mov eax [ eax ]
push 0x1
mov [ rw-data ] eax
call sub_10022501
lea ecx [ ebp - 0x4 ]
call sub_1002245f
leave
retn
sub_10022634
mov edi edi
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
jne r-xdata
push 0x8
call sub_10025dd6
pop ecx
test eax eax
je r-xdata
push sub_100225ff
call sub_100224d2
pop ecx
xor eax eax
mov ecx [ rw-data ]
mov [ eax ] ecx
mov ecx [ ebp + 0x8 ]
mov [ eax + 0x4 ] ecx
jmp r-xdata
mov [ rw-data ] eax
pop ebp
retn
sub_10022672
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x50 ] 0x0
jbe r-xdata
pop ebp
retn
cmp [ eax + 0x54 ] 0x10
jb r-xdata
add eax 0x40
mov eax [ eax + 0x40 ]
jmp r-xdata
push eax
push 0x0
call sub_1002beb6
pop ecx
pop ecx
sub_1002269a
push 0x4
mov eax sub_1004b33e
call sub_10029e33
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi + 0x4 ] 0x1
xor eax eax
mov [ ebp - 0x4 ] eax
mov [ esi + 0x8 ] eax
mov [ esi + 0xc ] eax
mov [ esi + 0x10 ] eax
mov al [ ebp + 0x8 ]
push r--data
lea ecx [ esi + 0x18 ]
mov [ esi ] r--data
mov [ esi + 0x14 ] al
call sub_10001b81
mov eax esi
call sub_10029f0b
retn 0x4
sub_100226e3
push 0x4
mov eax sub_1004ab8d
call sub_10029e33
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
push esi
mov [ ebp - 0x4 ] 0x1
call sub_1002259f
pop ecx
push 0x0
push 0x1
lea ecx [ esi + 0x18 ]
call sub_100022b5
mov [ esi ] r--data
call sub_10029f0b
retn
sub_10022720
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_100226e3
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_10025c9c
pop ecx
sub_10022741
push 0x8
mov eax sub_1004abba
call sub_10029e33
mov eax [ rw-data ]
mov esi eax
test eax eax
jne r-xdata
mov eax esi
call sub_10029f0b
retn
push eax
lea ecx [ ebp - 0x10 ]
call sub_10022437
mov eax [ rw-data ]
and [ ebp - 0x4 ] esi
mov esi eax
test eax eax
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x10 ]
call sub_1002245f
push 0x34
call sub_10025dd6
pop ecx
mov ecx eax
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x4 ] 0x1
test ecx ecx
je r-xdata
xor esi esi
push esi
call sub_1002269a
mov esi eax
jmp r-xdata
push esi
mov [ ebp - 0x4 ] 0x0
call sub_10022575
lea ecx [ esi + 0x18 ]
mov [ esi + 0x10 ] 0x3f
mov [ esp ] r--data
call sub_10002408
mov ecx esi
mov [ rw-data ] esi
call sub_1000778d
mov eax [ rw-data ]
mov [ rw-data ] eax
sub_100227db
mov edi edi
push ebp
mov ebp esp
push 0x0
push 0x0
call sub_1002beb6
pop ecx
pop ecx
test eax eax
jne r-xdata
push esi
mov esi [ ebp + 0x8 ]
push eax
lea ecx [ esi + 0x3c ]
call sub_10002408
cmp [ ebp + 0xc ] 0x0
je r-xdata
mov eax r--data
mov eax r--data
push [ ebp + 0xc ]
push 0x0
call sub_1002beb6
pop ecx
pop ecx
test eax eax
jne r-xdata
push eax
lea ecx [ esi + 0x58 ]
call sub_10002408
pop esi
pop ebp
retn
sub_10022828
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
cmp [ eax + 0x18 ] 0x10
push esi
push edi
jb r-xdata
lea esi [ eax + 0x4 ]
mov esi [ eax + 0x4 ]
jmp r-xdata
mov edi [ ebp + 0x8 ]
push eax
lea ecx [ edi + 0x3c ]
call sub_10002408
test esi esi
je r-xdata
mov eax r--data
push 0x0
push 0x0
call sub_1002beb6
pop ecx
pop ecx
test eax eax
jne r-xdata
mov eax r--data
push esi
push 0x0
call sub_1002beb6
pop ecx
pop ecx
test eax eax
jne r-xdata
push eax
lea ecx [ edi + 0x58 ]
call sub_10002408
pop edi
pop esi
pop ebp
retn
sub_10022884
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x14 ]
push esi
push edi
test eax eax
jne r-xdata
mov esi [ eax ]
mov edi [ eax + 0x4 ]
call sub_1002c4e4
mov esi [ eax + 0x8 ]
call sub_1002c498
mov edi eax
jmp r-xdata
and [ ebp + 0x14 ] 0x0
push edi
call sub_10022ad0
pop ecx
lea ecx [ ebp + 0x14 ]
push ecx
push 0x0
push eax
call sub_1002c47c
pop ecx
push eax
push [ ebp + 0x8 ]
lea eax [ ebp + 0xc ]
push 0x1
push eax
push 0x0
push edi
call [ WideCharToMultiByte@IAT ]
test eax eax
je r-xdata
mov ax [ ebp + 0xc ]
mov ecx 0xff
cmp ax cx
ja r-xdata
test esi esi
jne r-xdata
call sub_1002c068
mov [ eax ] 0x2a
or eax 0xffffffff
cmp [ ebp + 0x14 ] 0x0
je r-xdata
mov ecx [ ebp + 0x8 ]
mov [ ecx ] al
xor eax eax
inc eax
jmp r-xdata
pop edi
pop esi
pop ebp
retn
sub_10022921
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push esi
mov esi [ ebp + 0xc ]
test esi esi
jne r-xdata
mov eax [ esi ]
mov [ ebp - 0xc ] eax
mov eax [ esi + 0x4 ]
call sub_1002c4e4
mov eax [ eax + 0x8 ]
mov [ ebp - 0xc ] eax
call sub_1002c498
jmp r-xdata
push ebx
mov ebx [ ebp + 0x8 ]
push edi
mov edi 0x100
cmp ebx edi
jae r-xdata
mov eax [ ebp + 0x8 ]
lea ecx [ eax - 0x41 ]
cmp ecx 0x19
ja r-xdata
cmp [ ebp - 0xc ] 0x0
mov [ ebp - 0x10 ] eax
jne r-xdata
test esi esi
jne r-xdata
test esi esi
jne r-xdata
pop esi
leave
retn
add eax 0x20
jmp r-xdata
mov ecx [ esi + 0x8 ]
mov [ ebp - 0x8 ] ebx
sar [ ebp - 0x8 ] 0x8
mov eax [ ebp - 0x8 ]
and eax 0xff
movsx eax [ ecx + eax * 2 ]
shr eax 0xf
and eax 0x1
mov [ ebp - 0x8 ] ebx
sar [ ebp - 0x8 ] 0x8
call sub_1002c914
movzx ecx [ ebp - 0x8 ]
movzx eax [ eax + ecx * 2 ]
and eax 0x8000
jmp r-xdata
mov eax [ esi + 0x8 ]
test [ eax + ebx * 2 ] 0x1
je r-xdata
push ebx
call sub_10029430
pop ecx
test eax eax
jne r-xdata
xor eax eax
mov [ ebp + 0xc ] bl
mov [ ebp + 0xd ] 0x0
inc eax
mov al [ ebp - 0x8 ]
push 0x2
mov [ ebp + 0xc ] al
mov [ ebp + 0xd ] bl
mov [ ebp + 0xe ] 0x0
pop eax
jmp r-xdata
test eax eax
je r-xdata
mov eax ebx
jmp r-xdata
jmp r-xdata
cmp eax 0x1
movzx eax [ ebp - 0x4 ]
je r-xdata
push 0x1
push [ ebp - 0x10 ]
lea ecx [ ebp - 0x4 ]
push 0x3
push ecx
push eax
lea eax [ ebp + 0xc ]
push eax
push edi
push [ ebp - 0xc ]
push 0x0
call sub_1002c8cf
add esp 0x24
test eax eax
jne r-xdata
pop edi
pop ebx
movzx ecx [ ebp - 0x3 ]
shl eax 0x8
or eax ecx
sub_10022a2e
mov edi edi
push ebp
mov ebp esp
push esi
call sub_1002c4e4
mov eax [ eax + 0x4 ]
mov esi [ ebp + 0x8 ]
mov [ esi ] eax
call sub_1002c498
push 0x2
push 0x100
mov [ esi + 0x4 ] eax
call sub_1002c982
pop ecx
pop ecx
mov [ esi + 0x8 ] eax
test eax eax
je r-xdata
call sub_1002c914
and [ esi + 0xc ] 0x0
mov [ esi + 0x8 ] eax
push 0x200
call sub_1002c914
push eax
push [ esi + 0x8 ]
call sub_10028b40
add esp 0xc
mov [ esi + 0xc ] 0x1
jmp r-xdata
mov eax esi
pop esi
pop ebp
retn
sub_10022a8e
mov edi edi
push ebp
mov ebp esp
sub esp 0x24
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push 0xa
push 0x1f
lea eax [ ebp - 0x23 ]
push eax
push 0x0
push [ ebp + 0x8 ]
mov [ ebp - 0x24 ] 0x2e
call sub_1002cc6d
lea eax [ ebp - 0x24 ]
push eax
push 0x0
call sub_1002bdc1
mov ecx [ ebp - 0x4 ]
xor ecx ebp
add esp 0x1c
call sub_10025c8d
leave
retn
sub_10022ad0
mov edi edi
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0x8 ]
push ebx
push esi
push edi
push 0x3e
xor edx edx
pop ecx
div ecx
xor esi esi
lea eax [ edx * 4 + rw-data ]
mov [ ebp - 0x4 ] eax
test esi esi
jne r-xdata
mov eax [ ebx + 0x4 ]
cmp eax [ ebp + 0x8 ]
je r-xdata
push edi
push esi
push [ ebp - 0x4 ]
mov [ esi ] edi
call [ InterlockedCompareExchange@IAT ]
cmp eax edi
jne r-xdata
push 0xc
call sub_1002c93d
mov esi eax
pop ecx
test esi esi
je r-xdata
test esi esi
je r-xdata
mov ebx [ ebx ]
test ebx ebx
jne r-xdata
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
mov ebx edi
test edi edi
je r-xdata
mov eax [ esi + 0x8 ]
xor eax eax
jmp r-xdata
mov ebx [ ebp + 0x8 ]
push ebx
call sub_10022a8e
pop ecx
mov [ esi + 0x8 ] eax
test eax eax
je r-xdata
mov eax [ ebx + 0x8 ]
jmp r-xdata
push [ esi + 0x8 ]
call sub_1002b25b
push esi
call sub_1002644d
pop ecx
pop ecx
pop edi
pop esi
pop ebx
leave
retn
push esi
call sub_1002644d
pop ecx
mov [ esi + 0x4 ] ebx
sub_10022b6d
push ebx
push esi
push edi
mov ebx rw-data
add ebx 0x4
cmp ebx rw-data
jl r-xdata
push [ esi + 0x8 ]
mov edi [ esi ]
call sub_1002b25b
push esi
call sub_1002644d
pop ecx
pop ecx
mov esi edi
test edi edi
jne r-xdata
push 0x0
push ebx
call [ InterlockedExchange@IAT ]
mov esi eax
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
retn
sub_10022bbe
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0xc ]
test edi edi
je r-xdata
xor eax eax
cmp [ ebp + 0x10 ] 0x0
je r-xdata
cmp [ edi ] 0x0
jne r-xdata
mov eax [ ebp + 0x18 ]
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
mov esi [ eax ]
mov eax [ eax + 0x4 ]
call sub_1002c4e4
mov esi [ eax + 0x8 ]
call sub_1002c498
jmp r-xdata
xor ecx ecx
mov [ eax ] cx
push [ ebp + 0xc ]
call sub_10022ad0
mov esi [ ebp + 0x14 ]
cmp [ esi ] 0x0
pop ecx
mov ebx eax
je r-xdata
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
mov [ ebp + 0xc ] eax
test esi esi
jne r-xdata
test ebx ebx
jne r-xdata
mov al [ edi ]
push ebx
mov [ esi + 0x1 ] al
call sub_1002c47c
cmp eax 0x1
pop ecx
jle r-xdata
xor eax eax
inc eax
jmp r-xdata
movzx cx [ edi ]
mov [ eax ] cx
movzx eax [ edi ]
mov ecx [ ebx + 0x4 ]
movzx eax [ ecx + eax + 0x1d ]
and eax 0x4
call sub_1002c914
movzx ecx [ edi ]
movzx eax [ eax + ecx * 2 ]
and eax 0x8000
jmp r-xdata
and [ esi ] 0x0
xor eax eax
cmp [ ebp + 0x8 ] eax
setne al
push eax
push [ ebp + 0x8 ]
push 0x2
push esi
push 0x9
push [ ebp + 0xc ]
call [ MultiByteToWideChar@IAT ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
xor eax eax
cmp [ ebp + 0x8 ] eax
setne al
push eax
push [ ebp + 0x8 ]
push 0x1
push edi
push 0x9
push [ ebp + 0xc ]
call [ MultiByteToWideChar@IAT ]
test eax eax
jne r-xdata
push ebx
call sub_1002c47c
pop ecx
cmp [ ebp + 0x10 ] eax
jae r-xdata
test eax eax
je r-xdata
and [ esi ] 0x0
jmp r-xdata
push ebx
call sub_1002c47c
cmp eax 0x1
pop ecx
jle r-xdata
mov al [ edi ]
push 0xfffffffe
mov [ esi ] al
pop eax
jmp r-xdata
call sub_1002c068
mov [ eax ] 0x2a
or eax 0xffffffff
jmp r-xdata
cmp [ edi + 0x1 ] 0x0
jne r-xdata
xor eax eax
cmp [ ebp + 0x8 ] eax
setne al
push eax
push [ ebp + 0x8 ]
push ebx
call sub_1002c47c
pop ecx
push eax
push edi
push 0x9
push [ ebp + 0xc ]
call [ MultiByteToWideChar@IAT ]
test eax eax
jne r-xdata
push ebx
call sub_1002c47c
pop ecx
jmp r-xdata
jmp r-xdata
sub_10022d32
mov edi edi
push ebp
mov ebp esp
push ecx
push esi
mov esi [ ebp + 0x8 ]
movzx eax si
mov ecx 0xffff
mov [ ebp - 0x4 ] eax
cmp si cx
je r-xdata
pop esi
leave
retn
mov ecx [ ebp + 0xc ]
mov edx [ ecx ]
test edx edx
jne r-xdata
push [ ecx + 0x4 ]
lea eax [ ebp - 0x4 ]
push 0x1
push eax
push 0x1
lea eax [ ebp + 0x8 ]
push eax
push 0x200
push edx
push 0x0
call sub_1002cc8c
add esp 0x20
test eax eax
movzx eax [ ebp + 0x8 ]
je r-xdata
push edi
mov edi 0x100
cmp si di
pop edi
jae r-xdata
mov eax [ ebp - 0x4 ]
lea ecx [ esi - 0x61 ]
cmp cx 0x19
ja r-xdata
add esi 0xffffffe0
movzx eax si
jmp r-xdata
sub_10022d9f
mov edi edi
push ebp
mov ebp esp
push ecx
push edi
mov edi [ ebp + 0x8 ]
movzx eax di
mov ecx 0xffff
mov [ ebp - 0x4 ] eax
cmp di cx
je r-xdata
pop edi
leave
retn
mov edx [ ebp + 0xc ]
push esi
mov esi [ edx ]
mov ecx 0x100
test esi esi
jne r-xdata
push [ edx + 0x4 ]
lea eax [ ebp - 0x4 ]
push 0x1
push eax
push 0x1
lea eax [ ebp + 0x8 ]
push eax
push ecx
push esi
push 0x0
call sub_1002cc8c
add esp 0x20
test eax eax
movzx eax [ ebp + 0x8 ]
je r-xdata
push ebx
mov ebx ecx
cmp di bx
pop ebx
jae r-xdata
pop esi
mov eax [ ebp - 0x4 ]
lea ecx [ edi - 0x41 ]
cmp cx 0x19
ja r-xdata
add edi 0x20
movzx eax di
jmp r-xdata
sub_10022e0c
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x14 ]
sub esp 0x14
push ebx
xor ebx ebx
push esi
push edi
cmp eax ebx
je r-xdata
mov edi [ ebp + 0x8 ]
movzx eax [ edi ]
mov esi edi
jmp r-xdata
mov [ eax ] ebx
push eax
call sub_100295ad
pop ecx
test eax eax
jne r-xdata
inc esi
movzx eax [ esi ]
mov al [ esi ]
cmp al 0x2d
je r-xdata
mov [ ebp - 0x1 ] al
inc esi
cmp al 0x2b
je r-xdata
mov eax [ ebp + 0xc ]
cmp eax ebx
je r-xdata
cmp eax 0x1
je r-xdata
mov [ ebp - 0x1 ] 0x2b
jmp r-xdata
xor eax eax
mov [ eax ] edi
cmp eax 0x24
jg r-xdata
mov eax [ ebp + 0x10 ]
cmp eax ebx
jl r-xdata
cmp eax ebx
mov cl 0x30
jle r-xdata
cmp [ esi ] cl
je r-xdata
cmp eax 0x10
jne r-xdata
mov al [ esi + 0x1 ]
cmp al 0x78
je r-xdata
mov [ ebp + 0x10 ] 0xa
jmp r-xdata
mov [ ebp - 0x10 ] esi
jmp r-xdata
cmp [ esi ] cl
jne r-xdata
mov [ ebp + 0x10 ] 0x10
cmp al 0x58
je r-xdata
cmp [ esi ] cl
je r-xdata
mov al [ esi + 0x1 ]
cmp al 0x78
je r-xdata
mov [ ebp + 0x10 ] 0x8
jmp r-xdata
inc esi
movsx eax [ esi ]
push [ ebp + 0x10 ]
mov [ ebp - 0x8 ] ebx
push eax
mov [ ebp - 0x14 ] esi
mov [ ebp - 0xc ] ebx
call sub_1002cdf8
pop ecx
push eax
mov edi r--data
push edi
call sub_10026520
add esp 0xc
cmp eax ebx
je r-xdata
inc esi
inc esi
cmp al 0x58
jne r-xdata
mov bl [ ebp + 0x13 ]
mov ecx [ ebp - 0x8 ]
push [ ebp + 0x10 ]
mov bl al
mov eax edi
sub bl al
mov eax ecx
imul eax [ ebp + 0x10 ]
mov [ ebp - 0xc ] ecx
movsx ecx bl
add eax ecx
mov [ ebp - 0x8 ] eax
inc esi
movsx eax [ esi ]
push eax
call sub_1002cdf8
pop ecx
push eax
push edi
call sub_10026520
add esp 0xc
test eax eax
jne r-xdata
jmp r-xdata
mov ecx [ ebp + 0x10 ]
movsx edx [ ecx + r--data ]
mov eax esi
sub eax edx
sub eax [ ebp - 0x14 ]
js r-xdata
mov eax [ ebp + 0xc ]
test eax eax
je r-xdata
jmp r-xdata
cmp [ ebp - 0x1 ] 0x2d
jne r-xdata
test eax eax
jg r-xdata
mov ecx [ ebp + 0x8 ]
mov [ eax ] ecx
jmp r-xdata
cmp [ ebp - 0x10 ] esi
jne r-xdata
mov eax [ ebp + 0xc ]
test eax eax
je r-xdata
neg [ ebp - 0x8 ]
call sub_1002c068
mov [ eax ] 0x22
mov eax [ ebp + 0x14 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x8 ]
movsx edx bl
sub eax edx
cmp [ ebp - 0x8 ] eax
jb r-xdata
mov eax [ ebp - 0x8 ]
jmp r-xdata
mov [ eax ] esi
or [ ebp - 0x8 ] 0xffffffff
mov [ ebp - 0x1 ] 0x2b
mov [ eax ] 0x1
xor edx edx
div ecx
cmp eax [ ebp - 0xc ]
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
sub_10022fa7
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0xc ]
test edi edi
jne r-xdata
mov ebx [ ebp + 0x8 ]
movzx eax [ ebx ]
mov esi ebx
jmp r-xdata
lea edi [ ebp + 0x8 ]
push eax
call sub_100295ad
pop ecx
test eax eax
jne r-xdata
inc esi
movzx eax [ esi ]
mov al [ esi ]
cmp al 0x2d
je r-xdata
mov [ ebp + 0xf ] al
inc esi
cmp al 0x2b
je r-xdata
mov esi 0x7fffffff
cmp ebx [ edi ]
jne r-xdata
mov [ edi ] ebx
mov [ ebp + 0xf ] 0x2b
jmp r-xdata
cmp [ ebp + 0xf ] 0x2b
jne r-xdata
test eax eax
jne r-xdata
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push edi
push esi
call sub_10022e0c
add esp 0x10
cmp esi [ edi ]
jne r-xdata
cmp [ ebp + 0xf ] 0x2d
jne r-xdata
cmp eax esi
ja r-xdata
call sub_1002c068
mov [ eax ] 0x22
mov eax [ ebp + 0x14 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
cmp eax 0x80000000
jbe r-xdata
xor eax eax
cmp [ ebp + 0xf ] 0x2d
sete al
add eax esi
jmp r-xdata
mov [ eax ] 0x1
neg eax
sub_1002304c
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0xc ]
test edi edi
jne r-xdata
mov ebx [ ebp + 0x8 ]
movzx eax [ ebx ]
mov esi ebx
jmp r-xdata
lea edi [ ebp + 0x8 ]
push eax
call sub_100295ad
pop ecx
test eax eax
jne r-xdata
inc esi
movzx eax [ esi ]
mov al [ esi ]
cmp al 0x2d
je r-xdata
mov [ ebp + 0xf ] al
inc esi
cmp al 0x2b
je r-xdata
mov esi 0x80000000
cmp ebx [ edi ]
jne r-xdata
mov [ edi ] ebx
mov [ ebp + 0xf ] 0x2b
jmp r-xdata
cmp [ ebp + 0xf ] 0x2b
jne r-xdata
mov ecx eax
or ecx edx
jne r-xdata
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push edi
push esi
call sub_1002310f
add esp 0x10
cmp esi [ edi ]
jne r-xdata
cmp [ ebp + 0xf ] 0x2d
jne r-xdata
cmp edx 0x7fffffff
ja r-xdata
call sub_1002c068
mov [ eax ] 0x22
mov eax [ ebp + 0x14 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
cmp edx esi
jb r-xdata
jb r-xdata
cmp [ ebp + 0xf ] 0x2d
jne r-xdata
mov [ eax ] 0x1
neg eax
adc edx 0x0
neg edx
ja r-xdata
cmp eax 0xffffffff
ja r-xdata
or eax 0xffffffff
mov edx 0x7fffffff
jmp r-xdata
xor eax eax
mov edx esi
jmp r-xdata
test eax eax
jbe r-xdata
sub_1002310f
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x14 ]
sub esp 0x28
push ebx
push esi
xor esi esi
push edi
cmp eax esi
je r-xdata
mov ebx [ ebp + 0x8 ]
movzx eax [ ebx ]
mov edi ebx
jmp r-xdata
mov [ eax ] esi
push eax
call sub_100295ad
pop ecx
test eax eax
jne r-xdata
inc edi
movzx eax [ edi ]
mov al [ edi ]
cmp al 0x2d
je r-xdata
mov [ ebp - 0x1 ] al
inc edi
cmp al 0x2b
je r-xdata
mov eax [ ebp + 0xc ]
cmp eax esi
cmp eax 0x1
je r-xdata
mov [ ebp - 0x1 ] 0x2b
jmp r-xdata
xor eax eax
xor edx edx
mov [ eax ] ebx
cmp eax 0x24
jg r-xdata
mov eax [ ebp + 0x10 ]
cmp eax esi
jl r-xdata
cmp eax esi
mov cl 0x30
jle r-xdata
cmp [ edi ] cl
je r-xdata
cmp eax 0x10
jne r-xdata
mov al [ edi + 0x1 ]
cmp al 0x78
je r-xdata
mov [ ebp + 0x10 ] 0xa
jmp r-xdata
mov [ ebp - 0xc ] edi
jmp r-xdata
cmp [ edi ] cl
jne r-xdata
mov [ ebp + 0x10 ] 0x10
cmp al 0x58
je r-xdata
cmp [ edi ] cl
je r-xdata
mov al [ edi + 0x1 ]
cmp al 0x78
je r-xdata
mov [ ebp + 0x10 ] 0x8
jmp r-xdata
inc edi
movsx eax [ edi ]
push [ ebp + 0x10 ]
mov [ ebp - 0x18 ] esi
push eax
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x10 ] edi
mov [ ebp - 0x20 ] esi
mov [ ebp - 0x1c ] esi
mov [ ebp - 0x2 ] 0x0
call sub_1002cdf8
pop ecx
push eax
mov esi r--data
push esi
call sub_10026520
mov ecx eax
add esp 0xc
test ecx ecx
je r-xdata
inc edi
inc edi
cmp al 0x58
jne r-xdata
cmp [ ebp - 0xc ] edi
jne r-xdata
mov eax [ ebp + 0x10 ]
cdq
mov [ ebp - 0x28 ] eax
mov [ ebp - 0x24 ] edx
jmp r-xdata
mov ebx [ ebp + 0x10 ]
movsx ecx [ ebx + r--data ]
mov eax edi
sub eax ecx
sub eax [ ebp - 0x10 ]
js r-xdata
mov eax [ ebp + 0xc ]
test eax eax
jmp r-xdata
push [ ebp - 0x14 ]
mov eax [ ebp - 0x18 ]
push [ ebp - 0x18 ]
mov [ ebp - 0x20 ] eax
mov eax [ ebp - 0x14 ]
push [ ebp - 0x24 ]
mov [ ebp - 0x1c ] eax
push [ ebp - 0x28 ]
mov bl cl
mov eax esi
sub bl al
mov [ ebp - 0x2 ] bl
call sub_1002cea0
push [ ebp + 0x10 ]
mov ecx eax
mov eax edx
mov [ ebp - 0x8 ] eax
movsx eax bl
cdq
add ecx eax
mov eax [ ebp - 0x8 ]
adc eax edx
mov [ ebp - 0x14 ] eax
inc edi
movsx eax [ edi ]
push eax
mov [ ebp - 0x18 ] ecx
call sub_1002cdf8
pop ecx
push eax
push esi
call sub_10026520
mov ecx eax
add esp 0xc
test ecx ecx
jne r-xdata
mov ebx [ ebp + 0x8 ]
cmp [ ebp - 0x1 ] 0x2d
jne r-xdata
test eax eax
jg r-xdata
je r-xdata
mov eax [ ebp + 0xc ]
test eax eax
je r-xdata
mov eax [ ebp - 0x18 ]
mov ecx [ ebp - 0x14 ]
neg eax
adc ecx 0x0
neg ecx
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] ecx
call sub_1002c068
mov [ eax ] 0x22
mov eax [ ebp + 0x14 ]
test eax eax
je r-xdata
movsx eax [ ebp - 0x2 ]
mov esi [ ebp - 0x18 ]
mov ecx [ ebp - 0x14 ]
cdq
sub esi eax
sbb ecx edx
cmp [ ebp - 0x14 ] ecx
jb r-xdata
mov eax [ ebp - 0x18 ]
mov edx [ ebp - 0x14 ]
jmp r-xdata
mov [ eax ] edi
or [ ebp - 0x18 ] 0xffffffff
or [ ebp - 0x14 ] 0xffffffff
mov [ ebp - 0x1 ] 0x2b
mov [ eax ] 0x1
ja r-xdata
pop edi
pop esi
pop ebx
leave
retn
mov eax ebx
cdq
push edx
push eax
push ecx
push esi
call sub_1002ce30
cmp eax [ ebp - 0x20 ]
jne r-xdata
cmp [ ebp - 0x18 ] esi
jb r-xdata
cmp edx [ ebp - 0x1c ]
je r-xdata
sub_10023314
mov edi edi
push ebp
mov ebp esp
push ecx
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_10023336
fstp [ ebp - 0x4 ]
fld [ ebp - 0x4 ]
add esp 0x10
leave
retn
sub_10023336
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push esi
call sub_1002c068
mov esi [ eax ]
call sub_1002c068
push [ ebp + 0xc ]
and [ eax ] 0x0
push [ ebp + 0x8 ]
call sub_1002d076
fstp [ ebp - 0x8 ]
pop ecx
pop ecx
call sub_1002c068
mov eax [ eax ]
mov ecx [ ebp + 0x14 ]
mov [ ecx ] eax
call sub_1002c068
fld [ r--data ]
mov [ eax ] esi
mov eax [ ebp + 0x10 ]
pop esi
jmp r-xdata
test eax eax
jg r-xdata
fld [ ebp - 0x8 ]
dec eax
fmul st1
fstp [ ebp - 0x8 ]
jge r-xdata
fstp st0
fld [ ebp - 0x8 ]
leave
retn
neg eax
dec eax
fld [ ebp - 0x8 ]
fdiv st1
fstp [ ebp - 0x8 ]
jne r-xdata
sub_100233b5
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push esi
mov esi [ ebp + 0xc ]
test esi esi
jne r-xdata
mov eax [ esi ]
mov [ ebp - 0xc ] eax
mov eax [ esi + 0x4 ]
call sub_1002c4e4
mov eax [ eax + 0x8 ]
mov [ ebp - 0xc ] eax
call sub_1002c498
jmp r-xdata
push ebx
mov ebx [ ebp + 0x8 ]
cmp ebx 0x100
jae r-xdata
mov eax [ ebp + 0x8 ]
lea ecx [ eax - 0x61 ]
cmp ecx 0x19
ja r-xdata
cmp [ ebp - 0xc ] 0x0
mov [ ebp - 0x10 ] eax
jne r-xdata
test esi esi
jne r-xdata
test esi esi
jne r-xdata
pop esi
leave
retn
sub eax 0x20
jmp r-xdata
mov ecx [ esi + 0x8 ]
mov [ ebp - 0x8 ] ebx
sar [ ebp - 0x8 ] 0x8
mov eax [ ebp - 0x8 ]
and eax 0xff
movsx eax [ ecx + eax * 2 ]
shr eax 0xf
and eax 0x1
mov [ ebp - 0x8 ] ebx
sar [ ebp - 0x8 ] 0x8
call sub_1002c914
movzx ecx [ ebp - 0x8 ]
movzx eax [ eax + ecx * 2 ]
and eax 0x8000
jmp r-xdata
mov eax [ esi + 0x8 ]
test [ eax + ebx * 2 ] 0x2
je r-xdata
push ebx
call sub_100294af
pop ecx
test eax eax
jne r-xdata
xor eax eax
mov [ ebp + 0xc ] bl
mov [ ebp + 0xd ] 0x0
inc eax
mov al [ ebp - 0x8 ]
push 0x2
mov [ ebp + 0xc ] al
mov [ ebp + 0xd ] bl
mov [ ebp + 0xe ] 0x0
pop eax
jmp r-xdata
test eax eax
je r-xdata
mov eax ebx
jmp r-xdata
jmp r-xdata
cmp eax 0x1
movzx eax [ ebp - 0x4 ]
je r-xdata
push 0x1
push [ ebp - 0x10 ]
lea ecx [ ebp - 0x4 ]
push 0x3
push ecx
push eax
lea eax [ ebp + 0xc ]
push eax
push 0x200
push [ ebp - 0xc ]
push 0x0
call sub_1002c8cf
add esp 0x24
test eax eax
jne r-xdata
pop ebx
movzx ecx [ ebp - 0x3 ]
shl eax 0x8
or eax ecx
sub_100234c7
mov edi edi
push ebp
mov ebp esp
mov edx [ ebp + 0xc ]
push ebx
push esi
push edi
mov ebx edx
mov edi edx
and ebx 0x4
and edi 0x80
test dl 0x40
je r-xdata
test dl 0x8
je r-xdata
or edx 0x1
xor ecx ecx
and edx 0xffffff3b
xor eax eax
inc ecx
or edx 0x2
mov esi eax
shl esi 0x2
cmp [ esi + r--data ] 0x0
jne r-xdata
mov ecx [ eax * 4 + r--data ]
inc eax
test ecx ecx
jne r-xdata
test edi edi
je r-xdata
xor eax eax
jmp r-xdata
cmp ecx edx
je r-xdata
push [ ebp + 0x10 ]
mov esi [ esi + rw-data ]
push esi
push [ ebp + 0x8 ]
call sub_1002d08d
mov esi eax
add esp 0xc
test esi esi
je r-xdata
test dl 0x1
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
test ebx ebx
je r-xdata
push [ ebp + 0x10 ]
push r--data
push [ ebp + 0x8 ]
call sub_1002d08d
add esp 0xc
test eax eax
je r-xdata
mov eax esi
push 0x2
push 0x0
push esi
call sub_10028624
add esp 0xc
test eax eax
je r-xdata
push eax
push esi
jmp r-xdata
call sub_10028ab7
pop ecx
jmp r-xdata
sub_100235bf
mov edi edi
push ebp
mov ebp esp
mov eax [ rw-data ]
test eax eax
jne r-xdata
mov ecx [ ebp + 0x8 ]
dec eax
mov [ rw-data ] eax
mov [ eax * 4 + rw-data ] ecx
pop ebp
retn
pop ebp
jmp sub_1002ad85
sub_10023630
push esi
mov esi [ esp + 0xc ]
mov eax [ esi ]
test eax eax
je r-xdata
mov ecx [ rw-data ]
mov eax [ esp + 0x8 ]
mov [ eax ] ecx
mov ecx [ rw-data ]
mov [ eax + 0x4 ] ecx
pop esi
retn
push eax
call [ FindClose@IAT ]
and [ esi ] 0x0
sub_1002367c
push esi
push edi
mov edi [ esp + 0xc ]
mov esi ecx
push edi
push esi
call sub_1002365c
mov eax [ edi + 0x4 ]
pop ecx
pop ecx
mov ecx [ esi + 0x4 ]
mov [ edi + 0x4 ] ecx
pop edi
mov [ esi + 0x4 ] eax
pop esi
retn 0x4
sub_1002369e
push ebp
mov ebp esp
push ecx
push ecx
and [ ebp - 0x8 ] 0x0
and [ ebp - 0x4 ] 0x0
push ecx
lea ecx [ ebp - 0x8 ]
call sub_1002367c
mov ecx [ ebp - 0x4 ]
test ecx ecx
je r-xdata
leave
retn
call sub_1000990a
sub_100236df
push ebp
mov ebp esp
push ecx
and [ ebp - 0x4 ] 0x0
mov eax ecx
push [ eax ]
mov ecx [ eax + 0x4 ]
push [ ebp + 0x8 ]
mov edx [ ecx ]
call [ edx + 0x8 ]
mov eax [ ebp + 0x8 ]
leave
retn 0x4
sub_10023719
push 0x4
mov eax sub_1004abe8
call sub_10029e33
mov esi ecx
mov [ ebp - 0x10 ] esi
call sub_10001ac0
and [ ebp - 0x4 ] 0x0
lea ecx [ esi + 0x1c ]
call sub_10001ac0
lea ecx [ esi + 0x38 ]
mov [ ebp - 0x4 ] 0x1
call sub_10007bb4
mov eax esi
call sub_10029f0b
retn
sub_1002374f
push 0x4
mov eax sub_1004abe8
call sub_10029e33
mov esi ecx
mov [ ebp - 0x10 ] esi
xor edi edi
inc edi
push 0x0
push edi
lea ecx [ esi + 0x38 ]
mov [ ebp - 0x4 ] edi
call sub_100022b5
push 0x0
lea ecx [ esi + 0x1c ]
push edi
mov [ ebp - 0x4 ] 0x0
call sub_1000247e
or [ ebp - 0x4 ] 0xffffffff
push 0x0
push edi
mov ecx esi
call sub_1000247e
call sub_10029f0b
retn
sub_10023794
push 0x4
mov eax sub_1004ad6f
call sub_10029e33
mov esi ecx
mov [ ebp - 0x10 ] esi
push [ ebp + 0x10 ]
call sub_100078c4
mov eax [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
mov [ esi + 0x28 ] eax
mov eax [ ebp + 0xc ]
lea ecx [ esi + 0x30 ]
mov [ esi ] r--data
mov [ esi + 0x2c ] eax
call sub_10007bb4
mov eax esi
call sub_10029f0b
retn 0xc
sub_100237d5
push 0x20
mov eax sub_1004ac24
call sub_10029e33
push [ ebp + 0xc ]
and [ ebp - 0x10 ] 0x0
lea ecx [ ebp - 0x2c ]
call sub_10001fad
push [ ebp + 0x10 ]
xor esi esi
inc esi
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x4 ] esi
call sub_10024dfb
mov ecx [ ebp + 0x8 ]
push eax
call sub_10001fad
push 0x0
push esi
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x10 ] esi
mov [ ebp - 0x4 ] 0x0
call sub_1000247e
mov eax [ ebp + 0x8 ]
call sub_10029f0b
retn
sub_1002383e
push 0x24
mov eax sub_1004ac47
call sub_10029e66
mov esi ecx
mov [ ebp - 0x14 ] esi
xor ebx ebx
cmp [ esi + 0x44 ] ebx
jne r-xdata
cmp [ esi + 0x48 ] 0x10
jb r-xdata
cmp [ esi + 0x24 ] 0x10
mov [ ebp - 0x4 ] ebx
jb r-xdata
lea eax [ esi + 0x34 ]
mov eax [ esi + 0x34 ]
jmp r-xdata
lea eax [ esi + 0x10 ]
mov eax [ esi + 0x10 ]
jmp r-xdata
call sub_10029f0b
retn
lea eax [ ebp - 0x30 ]
push eax
lea ecx [ esi + 0x28 ]
call sub_100236df
push 0xffffffff
push ebx
push eax
mov ecx edi
mov [ ebp - 0x4 ] 0x1
call sub_10006c1e
push ebx
push 0x1
lea ecx [ ebp - 0x30 ]
mov [ ebp - 0x4 ] bl
call sub_100022b5
push r--data
mov ecx edi
call sub_10017069
lea edi [ esi + 0x30 ]
push eax
mov ecx edi
call sub_10002408
cmp [ esi + 0x44 ] ebx
je r-xdata
sub_10023925
push 0x278
mov eax sub_1004ac6a
call sub_10029e9c
mov ecx [ ebp + 0x14 ]
mov eax [ ebp + 0x10 ]
mov esi [ ebp + 0x8 ]
mov edi [ ebp + 0xc ]
mov ebx [ ebp + 0x18 ]
mov [ ebp - 0x284 ] ecx
mov ecx [ ebp + 0x1c ]
mov [ ebp - 0x280 ] ecx
push eax
lea ecx [ ebp - 0x2c ]
call sub_10001fad
mov eax [ ebp - 0x18 ]
and [ ebp - 0x4 ] 0x0
test eax eax
je r-xdata
mov eax r--data
dec eax
push eax
lea ecx [ ebp - 0x2c ]
call sub_1000a914
cmp [ eax ] 0x5c
je r-xdata
lea ecx [ ebp - 0x27c ]
push ecx
push eax
call [ FindFirstFileW@IAT ]
mov [ edi ] eax
cmp eax 0xffffffff
jne r-xdata
lea eax [ ebp - 0x28 ]
mov eax r--data
jmp r-xdata
mov eax [ ebp - 0x18 ]
dec eax
push eax
lea ecx [ ebp - 0x2c ]
call sub_1000a914
cmp [ eax ] 0x2f
je r-xdata
mov ecx [ ebp - 0x284 ]
lea eax [ ebp - 0x250 ]
push eax
call sub_100013a5
test [ ebp - 0x27c ] 0x400
je r-xdata
and [ edi ] 0x0
mov edi [ GetLastError@IAT ]
call edi
cmp eax 0x2
je r-xdata
push eax
lea ecx [ ebp - 0x2c ]
call sub_1000977e
cmp [ ebp - 0x14 ] 0x8
mov eax [ ebp - 0x28 ]
jae r-xdata
mov eax [ ebp - 0x18 ]
dec eax
push eax
lea ecx [ ebp - 0x2c ]
call sub_1000a914
cmp [ eax ] 0x3a
jne r-xdata
test [ ebp - 0x27c ] 0x10
mov ecx [ ebp - 0x280 ]
je r-xdata
mov eax [ ebp - 0x280 ]
and [ ebx ] 0x0
and [ eax ] 0x0
jmp r-xdata
xor edi edi
call edi
cmp eax 0x12
je r-xdata
push 0x2
push 0x3
jmp r-xdata
and [ esi ] 0x0
call sub_1002547a
or [ ebp - 0x4 ] 0xffffffff
push 0x0
push 0x1
lea ecx [ ebp - 0x2c ]
mov [ esi + 0x4 ] eax
call sub_1000247e
mov eax esi
call sub_10029f1f
retn
call edi
mov edi eax
jmp r-xdata
pop eax
mov [ ebx ] eax
mov [ ecx ] eax
call sub_1002547a
mov [ esi ] edi
jmp r-xdata
sub_10023a63
push ebp
mov ebp esp
sub esp 0x260
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov ecx [ ebp + 0x10 ]
mov eax [ ebp + 0xc ]
push ebx
mov ebx [ ebp + 0x18 ]
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi [ ebp + 0x14 ]
mov [ ebp - 0x25c ] ecx
lea ecx [ ebp - 0x254 ]
push ecx
push [ eax ]
mov [ ebp - 0x258 ] eax
call [ FindNextFileW@IAT ]
test eax eax
jne r-xdata
mov ecx [ ebp - 0x25c ]
lea eax [ ebp - 0x228 ]
push eax
call sub_100013a5
xor ecx ecx
test [ ebp - 0x254 ] 0x400
je r-xdata
call [ GetLastError@IAT ]
push [ ebp - 0x258 ]
mov edi eax
lea eax [ ebp - 0x260 ]
push eax
call sub_10023630
pop ecx
pop ecx
call sub_1002547a
mov ecx edi
sub ecx 0x12
neg ecx
sbb ecx ecx
and ecx edi
mov [ esi ] ecx
jmp r-xdata
test [ ebp - 0x254 ] 0x10
je r-xdata
mov [ edi ] ecx
mov [ ebx ] ecx
jmp r-xdata
mov ecx [ ebp - 0x4 ]
mov [ esi + 0x4 ] eax
pop edi
mov eax esi
pop esi
xor ecx ebp
pop ebx
call sub_10025c8d
leave
retn
push 0x2
push 0x3
jmp r-xdata
mov [ esi ] ecx
call sub_1002547a
pop eax
mov [ edi ] eax
mov [ ebx ] eax
sub_10023b2c
push 0x4
mov eax sub_1004ac92
call sub_10029e66
mov esi ecx
and [ esi ] 0x0
and [ ebp - 0x4 ] 0x0
push 0x10
call sub_10025dd6
pop ecx
test eax eax
je r-xdata
xor eax eax
xor ecx ecx
inc ecx
mov [ eax + 0x4 ] ecx
mov [ eax + 0x8 ] ecx
mov ecx [ ebp + 0x8 ]
mov [ eax ] r--data
mov [ eax + 0xc ] ecx
jmp r-xdata
mov [ esi ] eax
mov eax esi
call sub_10029f0b
retn 0x4
sub_10023b8f
push 0x4
mov eax sub_1004acb5
call sub_10029e33
mov esi ecx
mov [ ebp - 0x10 ] esi
call sub_10001ac0
and [ ebp - 0x4 ] 0x0
call sub_10024ee5
mov eax [ ebp + 0x8 ]
push [ eax ]
mov ecx esi
call sub_1000977e
mov eax esi
call sub_10029f0b
retn 0x8
sub_10023bc4
push esi
push edi
mov edi [ esp + 0xc ]
mov esi ecx
push edi
lea ecx [ esi + 0x4 ]
mov [ esi ] edi
call sub_10023b2c
push edi
push edi
push esi
call sub_1002360a
add esp 0xc
pop edi
mov eax esi
pop esi
retn 0x4
sub_10023be9
push ebp
mov ebp esp
push ecx
push ecx
push esi
push [ ebp + 0x8 ]
mov esi ecx
lea ecx [ ebp - 0x8 ]
call sub_10023bc4
push esi
mov ecx eax
call sub_1002367c
mov ecx [ ebp - 0x4 ]
pop esi
test ecx ecx
je r-xdata
leave
retn 0x4
call sub_1000990a
sub_10023c4e
push 0x18
mov eax sub_1004ace9
call sub_10029e33
mov ebx [ ebp + 0x8 ]
mov eax [ ebp + 0xc ]
xor esi esi
mov edi ecx
mov ecx ebx
mov [ ebp - 0x4 ] esi
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x10 ] esi
call sub_10007bb4
mov [ ebp - 0x4 ] esi
mov esi [ edi + 0x14 ]
mov [ ebp - 0x10 ] 0x1
test esi esi
je r-xdata
mov eax ebx
call sub_10029f0b
retn 0x8
push [ ebp - 0x14 ]
lea eax [ ebp - 0x18 ]
push ebx
push eax
mov ecx edi
call sub_10007aec
mov ecx eax
call sub_100068fb
lea eax [ eax + esi * 2 ]
push eax
lea eax [ ebp - 0x24 ]
push eax
mov ecx edi
call sub_10007aec
mov ecx eax
call sub_100068fb
push eax
call sub_1002519e
add esp 0x10
sub_10023cc7
push ebp
mov ebp esp
push ecx
and [ ebp - 0x4 ] 0x0
push esi
mov esi ecx
call sub_10024ee5
push [ eax ]
mov ecx esi
push [ ebp + 0x8 ]
call sub_10023c4e
mov eax [ ebp + 0x8 ]
pop esi
leave
retn 0x4
sub_10023ceb
push 0x40
mov eax sub_1004ad14
call sub_10029e66
mov esi ecx
mov [ ebp - 0x14 ] esi
mov edi [ esi + 0x4c ]
xor ebx ebx
cmp edi ebx
jne r-xdata
mov [ ebp - 0x4 ] ebx
cmp [ edi + 0x4c ] ebx
jne r-xdata
call sub_1002383e
jmp r-xdata
mov esi [ esi + 0x4c ]
add esi 0x38
cmp [ esi + 0x18 ] 0x10
jb r-xdata
mov ecx esi
call sub_1002383e
push eax
lea ecx [ edi + 0x38 ]
call sub_10002408
mov eax [ esi + 0x4c ]
cmp [ eax + 0x14 ] ebx
je r-xdata
call sub_10029f0b
retn
lea eax [ esi + 0x4 ]
mov eax [ esi + 0x4 ]
jmp r-xdata
mov eax [ esi + 0x4c ]
cmp [ eax + 0x30 ] ebx
je r-xdata
push r--data
lea ecx [ eax + 0x38 ]
call sub_10017069
mov ecx [ esi + 0x4c ]
lea eax [ ebp - 0x30 ]
push eax
call sub_10023cc7
mov ecx [ esi + 0x4c ]
push 0xffffffff
push ebx
push eax
add ecx 0x38
mov [ ebp - 0x4 ] 0x1
call sub_10006c1e
push ebx
push 0x1
lea ecx [ ebp - 0x30 ]
mov [ ebp - 0x4 ] bl
call sub_100022b5
mov eax [ esi + 0x4c ]
push r--data
lea ecx [ eax + 0x38 ]
call sub_10017069
push r--data
lea ecx [ eax + 0x38 ]
call sub_10017069
mov eax [ esi + 0x4c ]
lea ecx [ ebp - 0x4c ]
push ecx
lea ecx [ eax + 0x1c ]
call sub_10023cc7
mov ecx [ esi + 0x4c ]
push 0xffffffff
push ebx
push eax
add ecx 0x38
mov [ ebp - 0x4 ] 0x2
call sub_10006c1e
push ebx
push 0x1
lea ecx [ ebp - 0x4c ]
mov [ ebp - 0x4 ] bl
call sub_100022b5
mov eax [ esi + 0x4c ]
push r--data
lea ecx [ eax + 0x38 ]
call sub_10017069
sub_10023e02
push 0x8
mov eax sub_1004ad4c
call sub_10029e66
mov edi ecx
mov [ ebp - 0x14 ] edi
push [ ebp + 0x8 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
call sub_10023794
xor ebx ebx
lea esi [ edi + 0x4c ]
mov [ edi ] r--data
mov [ esi ] ebx
mov [ ebp - 0x4 ] ebx
mov [ esi + 0x4 ] ebx
push 0x54
mov [ ebp - 0x4 ] 0x2
call sub_10025dd6
pop ecx
mov ecx eax
mov [ ebp + 0x8 ] ecx
mov [ ebp - 0x4 ] 0x3
cmp ecx ebx
je r-xdata
xor eax eax
call sub_10023719
jmp r-xdata
push eax
mov ecx esi
mov [ ebp - 0x4 ] 0x2
call sub_10023be9
push [ ebp + 0xc ]
mov ecx [ esi ]
call sub_100238df
jmp sub_10023e82
sub_10023ea9
push 0x4
mov eax sub_1004ad6f
call sub_10029e33
mov esi ecx
mov [ ebp - 0x10 ] esi
mov edi [ ebp + 0x8 ]
push edi
call sub_10007977
and [ ebp - 0x4 ] 0x0
mov [ esi ] r--data
mov eax [ edi + 0x28 ]
mov [ esi + 0x28 ] eax
mov eax [ edi + 0x2c ]
add edi 0x30
push edi
lea ecx [ esi + 0x30 ]
mov [ esi + 0x2c ] eax
call sub_10001c9f
mov eax esi
call sub_10029f0b
retn 0x4
sub_10023eef
push esi
push edi
mov edi [ esp + 0xc ]
push edi
mov esi ecx
call sub_10023ea9
add edi 0x4c
push edi
lea ecx [ esi + 0x4c ]
mov [ esi ] r--data
call sub_10023e8c
pop edi
mov eax esi
pop esi
retn 0x4
sub_10023f16
push ebp
mov ebp esp
sub esp 0x54
cmp [ ebp + 0x8 ] 0x0
push esi
jne r-xdata
mov eax [ ebp + 0x14 ]
test eax eax
jne r-xdata
mov esi [ ebp + 0x14 ]
test esi esi
je r-xdata
mov ecx [ ebp + 0xc ]
mov edx [ ecx ]
mov [ eax ] edx
mov ecx [ ecx + 0x4 ]
mov [ eax + 0x4 ] ecx
mov eax [ ebp + 0xc ]
push [ eax + 0x4 ]
lea ecx [ ebp - 0x54 ]
push [ eax ]
push [ ebp + 0x10 ]
push [ ebp + 0x18 ]
call sub_10023e02
push r--data
lea eax [ ebp - 0x54 ]
push eax
call sub_10029a01
mov al [ ebp + 0x8 ]
pop esi
leave
retn
and [ esi ] 0x0
call sub_1002547a
mov [ esi + 0x4 ] eax
jmp r-xdata
sub_10023f75
push 0xc4
mov eax sub_1004adaa
call sub_10029e9c
mov esi [ ebp + 0x8 ]
mov edi [ ebp + 0xc ]
xor ebx ebx
push ebx
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x14 ] 0x7
call sub_10002460
mov [ ebp - 0x4 ] ebx
mov [ ebp - 0x30 ] ebx
mov [ ebp - 0x34 ] ebx
call sub_1002547a
jmp r-xdata
mov eax [ esi ]
lea ecx [ ebp - 0x34 ]
push ecx
lea ecx [ ebp - 0x30 ]
push ecx
lea ecx [ ebp - 0x2c ]
push ecx
add eax 0x24
push eax
lea eax [ ebp - 0x44 ]
push eax
call sub_10023a63
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
add esp 0x14
neg ecx
sbb ecx ecx
mov [ ebp - 0x38 ] eax
test ecx sub_1002360a
je r-xdata
cmp edi ebx
je r-xdata
mov ecx esi
call sub_1002369e
cmp edi ebx
jne r-xdata
mov eax [ esi ]
cmp [ eax + 0x24 ] ebx
je r-xdata
mov [ edi ] ebx
call sub_1002547a
mov [ edi + 0x4 ] eax
call sub_1002547a
mov esi eax
call [ GetLastError@IAT ]
mov [ edi ] eax
mov [ edi + 0x4 ] esi
jmp r-xdata
push r--data
lea ecx [ ebp - 0x60 ]
call sub_10001b81
mov ecx [ esi ]
lea eax [ ebp - 0x7c ]
push eax
mov [ ebp - 0x4 ] 0x1
call sub_10024fe9
mov esi eax
mov [ ebp - 0x4 ] 0x2
call sub_1002547a
mov edi eax
call [ GetLastError@IAT ]
push edi
push eax
push esi
lea eax [ ebp - 0x60 ]
push eax
lea ecx [ ebp - 0xd0 ]
call sub_10023e02
push r--data
lea eax [ ebp - 0xd0 ]
push eax
call sub_10029a01
mov ecx esi
call sub_1002369e
jmp r-xdata
push ebx
lea ecx [ ebp - 0x2c ]
call sub_1000a914
cmp [ eax ] 0x2e
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
push ebx
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_1000247e
call sub_10029f1f
retn
push ebx
lea eax [ ebp - 0x2c ]
push eax
lea ecx [ ebp - 0x60 ]
call sub_10008f01
push [ ebp - 0x34 ]
mov esi [ esi ]
push [ ebp - 0x30 ]
lea eax [ ebp - 0x60 ]
push eax
mov ecx esi
mov [ ebp - 0x4 ] 0x3
call sub_1002360b
push ebx
push 0x1
lea ecx [ ebp - 0x60 ]
mov [ ebp - 0x4 ] bl
call sub_1000247e
cmp [ ebp - 0x18 ] 0x1
je r-xdata
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_1000a914
cmp [ eax ] 0x2e
jne r-xdata
cmp [ ebp - 0x18 ] 0x2
jne r-xdata
sub_100240f3
push 0x8c
mov eax sub_1004ae05
call sub_10029e9c
mov eax [ ebp + 0x10 ]
mov edi [ ebp + 0x8 ]
mov esi [ ebp + 0xc ]
push r--data
lea ecx [ ebp - 0x60 ]
mov [ ebp - 0x38 ] eax
call sub_10001b81
xor ebx ebx
cmp [ esi + 0x14 ] ebx
mov [ ebp - 0x4 ] ebx
sete al
mov [ ebp - 0x34 ] al
lea eax [ ebp - 0x60 ]
push eax
push [ ebp - 0x38 ]
push esi
push rw-data
push [ ebp - 0x34 ]
call sub_10023f16
or [ ebp - 0x4 ] 0xffffffff
add esp 0x14
push ebx
push 0x1
lea ecx [ ebp - 0x60 ]
mov [ ebp - 0x2d ] al
call sub_100022b5
cmp [ ebp - 0x2d ] bl
jne r-xdata
call sub_10029f1f
retn
push ebx
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x14 ] 0x7
call sub_10002460
cmp [ esi + 0x18 ] 0x8
mov [ ebp - 0x4 ] 0x1
mov [ ebp - 0x34 ] ebx
mov [ ebp - 0x44 ] ebx
jb r-xdata
lea eax [ esi + 0x4 ]
mov eax [ esi + 0x4 ]
jmp r-xdata
mov eax [ edi ]
cmp [ eax + 0x24 ] ebx
jne r-xdata
mov ecx edi
call sub_1002369e
push r--data
lea ecx [ ebp - 0x60 ]
call sub_10001b81
lea eax [ ebp - 0x60 ]
push eax
push [ ebp - 0x38 ]
lea eax [ ebp - 0x40 ]
push esi
push eax
push 0x1
mov [ ebp - 0x4 ] 0x3
call sub_10023f16
add esp 0x14
push ebx
push 0x1
lea ecx [ ebp - 0x60 ]
mov [ ebp - 0x4 ] 0x1
call sub_100022b5
jmp r-xdata
mov [ ebp - 0x3c ] eax
push ebx
lea eax [ ebp - 0x3c ]
push eax
lea ecx [ ebp - 0x60 ]
call sub_10023b8f
mov eax [ edi ]
lea ecx [ ebp - 0x44 ]
push ecx
lea ecx [ ebp - 0x34 ]
push ecx
lea ecx [ ebp - 0x2c ]
push ecx
lea ecx [ ebp - 0x60 ]
push ecx
add eax 0x24
push eax
lea eax [ ebp - 0x40 ]
push eax
mov [ ebp - 0x4 ] 0x2
call sub_10023925
add esp 0x18
push ebx
push 0x1
lea ecx [ ebp - 0x60 ]
mov [ ebp - 0x4 ] 0x1
call sub_1000247e
mov eax [ ebp - 0x40 ]
neg eax
sbb eax eax
test eax sub_1002360a
je r-xdata
push ebx
lea eax [ ebp - 0x2c ]
push eax
lea ecx [ ebp - 0x7c ]
call sub_10008f01
lea eax [ ebp - 0x7c ]
push eax
lea eax [ ebp - 0x98 ]
push esi
push eax
mov [ ebp - 0x4 ] 0x4
call sub_100237d5
add esp 0xc
push [ ebp - 0x44 ]
mov ecx [ edi ]
push [ ebp - 0x34 ]
mov [ ebp - 0x4 ] 0x5
push eax
call sub_100238f5
xor esi esi
push ebx
inc esi
push esi
lea ecx [ ebp - 0x98 ]
mov [ ebp - 0x4 ] 0x4
call sub_1000247e
push ebx
push esi
lea ecx [ ebp - 0x7c ]
mov [ ebp - 0x4 ] 0x1
call sub_1000247e
push ebx
lea ecx [ ebp - 0x2c ]
call sub_1000a914
cmp [ eax ] 0x2e
jne r-xdata
mov ecx edi
call sub_1002369e
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
push ebx
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_1000247e
cmp [ ebp - 0x18 ] esi
je r-xdata
push ebx
push edi
call sub_10023f75
pop ecx
pop ecx
push esi
lea ecx [ ebp - 0x2c ]
call sub_1000a914
cmp [ eax ] 0x2e
jne r-xdata
cmp [ ebp - 0x18 ] 0x2
jne r-xdata
sub_100242fa
push 0x4
mov eax sub_1004b33e
call sub_10029e33
mov esi ecx
mov [ ebp - 0x10 ] esi
mov eax [ ebp + 0xc ]
mov [ esi + 0x4 ] eax
and [ ebp - 0x4 ] 0x0
mov [ esi ] r--data
call sub_1002290b
mov [ esi + 0x8 ] eax
mov [ esi + 0xc ] edx
mov eax esi
call sub_10029f0b
retn 0x8
sub_10024330
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0xc ]
push ebx
mov ebx [ ebp + 0x10 ]
push esi
mov esi [ ebp + 0x14 ]
mov [ esi ] eax
mov eax [ ebp + 0x18 ]
push edi
mov edi [ ebp + 0x20 ]
mov [ ebp - 0x4 ] ecx
xor ecx ecx
mov [ edi ] eax
mov eax [ esi ]
cmp eax ebx
setne cl
mov [ ebp + 0x14 ] ecx
cmp eax ebx
je r-xdata
mov eax [ ebp + 0x14 ]
mov ecx [ edi ]
cmp ecx [ ebp + 0x1c ]
je r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ esi ]
add edx 0x8
push edx
push [ ebp + 0x8 ]
mov edx ebx
sub edx eax
push edx
push eax
push ecx
call sub_10022bbe
add esp 0x14
cmp eax 0xfffffffe
je r-xdata
mov [ esi ] ebx
cmp eax 0xffffffff
je r-xdata
push 0x2
pop eax
jmp r-xdata
test eax eax
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn 0x1c
cmp eax 0xfffffffd
jne r-xdata
mov ecx [ edi ]
cmp [ ecx ] ax
jne r-xdata
add [ esi ] eax
add [ edi ] 0x2
and [ ebp + 0x14 ] 0x0
cmp [ esi ] ebx
jne r-xdata
xor eax eax
push [ esi ]
call sub_10025d30
pop ecx
inc eax
jmp r-xdata
sub_100243c4
push ebp
mov ebp esp
sub esp 0x20
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x1c ]
push ebx
mov ebx [ ebp + 0x8 ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x14 ]
mov [ esi ] eax
mov eax [ ebp + 0x18 ]
push edi
mov edi [ ebp + 0x20 ]
mov [ ebp - 0x1c ] ecx
xor ecx ecx
mov [ edi ] eax
mov eax [ esi ]
cmp eax [ ebp + 0x10 ]
mov [ ebp - 0x20 ] ebx
setne cl
mov [ ebp - 0x14 ] ecx
cmp eax [ ebp + 0x10 ]
je r-xdata
mov eax [ ebp - 0x14 ]
mov eax [ ebp - 0x18 ]
cmp [ edi ] eax
je r-xdata
mov eax [ edi ]
mov [ ebp - 0x10 ] eax
call sub_1002c453
mov ecx [ ebp - 0x18 ]
sub ecx [ ebp - 0x10 ]
cmp eax ecx
jg r-xdata
mov eax [ ebx ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x1c ]
add eax 0x8
push eax
mov eax [ esi ]
movzx eax [ eax ]
push ebx
push eax
lea eax [ ebp - 0xc ]
push eax
call sub_10022884
mov ebx eax
add esp 0x10
test ebx ebx
jl r-xdata
mov eax [ ebp - 0x1c ]
add eax 0x8
push eax
mov eax [ esi ]
movzx eax [ eax ]
push ebx
push eax
push [ ebp - 0x10 ]
call sub_10022884
add esp 0x10
test eax eax
jl r-xdata
push 0x2
pop eax
jmp r-xdata
mov eax [ edi ]
mov ecx [ ebp - 0x18 ]
sub ecx eax
cmp ecx ebx
jl r-xdata
add [ esi ] 0x2
add [ edi ] eax
jmp r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_10025c8d
leave
retn 0x1c
mov eax [ ebp - 0x10 ]
mov ecx [ ebp - 0x20 ]
mov [ ecx ] eax
push ebx
lea edx [ ebp - 0xc ]
push edx
push ecx
push eax
call sub_10025ca7
add [ esi ] 0x2
add esp 0x10
add [ edi ] ebx
mov ebx [ ebp - 0x20 ]
mov eax [ ebp + 0x10 ]
and [ ebp - 0x14 ] 0x0
cmp [ esi ] eax
jne r-xdata
jmp r-xdata
sub_100244c8
push ebp
mov ebp esp
sub esp 0x18
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
and [ ebp - 0x10 ] 0x0
push ebx
push esi
mov esi [ ebp + 0x14 ]
mov eax ecx
mov ecx [ ebp + 0x10 ]
push edi
mov edi [ ebp + 0x8 ]
add eax 0x8
push eax
mov [ ebp - 0x14 ] ecx
mov ecx [ ebp + 0xc ]
push edi
mov [ esi ] ecx
mov ecx [ edi ]
lea eax [ ebp - 0xc ]
push 0x0
push eax
mov [ ebp - 0x18 ] ecx
call sub_10022884
mov ebx eax
add esp 0x10
test ebx ebx
jg r-xdata
mov eax [ esi ]
mov ecx [ ebp - 0x14 ]
dec ebx
sub ecx eax
cmp ecx ebx
jge r-xdata
mov [ ebp - 0x10 ] 0x2
jmp r-xdata
test ebx ebx
jle r-xdata
mov eax [ ebp - 0x18 ]
mov [ edi ] eax
mov [ ebp - 0x10 ] 0x1
jmp r-xdata
mov ecx [ ebp - 0x4 ]
mov eax [ ebp - 0x10 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_10025c8d
leave
retn 0x10
push ebx
lea edx [ ebp - 0xc ]
push edx
push ecx
push eax
call sub_10025ca7
add esp 0x10
add [ esi ] ebx
sub_1002455c
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
push ebx
push esi
mov esi [ ebp + 0xc ]
xor ebx ebx
push edi
mov edi ecx
mov [ ebp - 0x4 ] eax
cmp [ ebp + 0x14 ] ebx
jbe r-xdata
pop edi
pop esi
mov eax ebx
pop ebx
leave
retn 0x10
cmp esi [ ebp + 0x10 ]
je r-xdata
lea eax [ edi + 0x8 ]
push eax
lea eax [ ebp - 0x4 ]
push eax
mov eax [ ebp + 0x10 ]
sub eax esi
push eax
lea eax [ ebp + 0x8 ]
push esi
push eax
call sub_10022bbe
add esp 0x14
cmp eax 0xfffffffe
je r-xdata
cmp eax 0xffffffff
je r-xdata
test eax eax
jne r-xdata
cmp eax 0xfffffffd
jne r-xdata
cmp [ ebp + 0x8 ] ax
jne r-xdata
add esi eax
inc ebx
cmp ebx [ ebp + 0x14 ]
jb r-xdata
xor eax eax
push esi
call sub_10025d30
pop ecx
inc eax
sub_100245ec
push ebp
mov ebp esp
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
mov eax [ ecx + 0x14 ]
push ebx
push esi
push edi
cmp [ ebp + 0x10 ] eax
ja r-xdata
mov ecx [ ecx + 0x14 ]
mov eax [ ebp + 0xc ]
cmp eax ecx
jb r-xdata
or eax 0xffffffff
sub eax [ ebp + 0x10 ]
mov edx [ ebp + 0xc ]
cmp edx eax
jb r-xdata
pop ebp
retn 0xc
mov eax ecx
jmp r-xdata
mov eax [ ecx + 0x18 ]
mov [ ebp + 0xc ] eax
lea esi [ ecx + 0x4 ]
cmp eax 0x8
jb r-xdata
mov edx eax
mov eax esi
mov eax [ esi ]
jmp r-xdata
cmp [ ebp + 0xc ] 0x8
jb r-xdata
push [ ebp + 0x10 ]
push [ ebp + 0x8 ]
push edi
call sub_100069f0
add esp 0xc
test eax eax
je r-xdata
lea edi [ eax + edx * 2 ]
mov eax [ ebp + 0x8 ]
movzx ebx [ eax ]
mov eax esi
mov eax [ esi ]
jmp r-xdata
cmp [ ebp + 0xc ] 0x8
jb r-xdata
dec edi
dec edi
jmp r-xdata
cmp edi eax
je r-xdata
mov eax edi
sub eax esi
sar eax 0x1
jmp r-xdata
mov esi [ esi ]
cmp [ edi ] bx
jne r-xdata
pop edi
pop esi
pop ebx
sub_1002467d
push ebp
mov ebp esp
push ecx
cmp [ ebp + 0x10 ] 0x0
push ebx
push esi
push edi
jbe r-xdata
or eax 0xffffffff
mov edx [ ecx + 0x14 ]
cmp [ ebp + 0xc ] edx
jae r-xdata
mov edi [ ecx + 0x18 ]
mov [ ebp - 0x4 ] edi
lea esi [ ecx + 0x4 ]
cmp edi 0x8
jb r-xdata
mov eax esi
mov eax [ esi ]
jmp r-xdata
mov eax esi
mov eax [ esi ]
jmp r-xdata
lea ebx [ eax + edx * 2 ]
cmp edi 0x8
jb r-xdata
cmp edi ebx
jb r-xdata
mov ecx [ ebp + 0xc ]
lea edi [ eax + ecx * 2 ]
jmp r-xdata
movzx eax [ edi ]
push [ ebp + 0x10 ]
push eax
push [ ebp + 0x8 ]
call sub_100144af
add esp 0xc
test eax eax
jne r-xdata
cmp [ ebp - 0x4 ] 0x8
jb r-xdata
inc edi
inc edi
mov eax edi
sub eax esi
sar eax 0x1
jmp r-xdata
mov esi [ esi ]
pop edi
pop esi
pop ebx
leave
retn 0xc
sub_100246f2
push ebp
mov ebp esp
cmp [ ebp + 0x10 ] 0x0
push ebx
push esi
push edi
jbe r-xdata
or eax 0xffffffff
mov eax [ ecx + 0x14 ]
test eax eax
jbe r-xdata
mov edx [ ebp + 0xc ]
cmp edx eax
jb r-xdata
mov ebx [ ecx + 0x18 ]
lea edi [ ecx + 0x4 ]
cmp ebx 0x8
jb r-xdata
lea edx [ eax - 0x1 ]
mov eax edi
mov eax [ edi ]
jmp r-xdata
movzx eax [ esi ]
push [ ebp + 0x10 ]
push eax
push [ ebp + 0x8 ]
call sub_100144af
add esp 0xc
test eax eax
je r-xdata
lea esi [ eax + edx * 2 ]
jmp r-xdata
cmp ebx 0x8
jb r-xdata
cmp ebx 0x8
jb r-xdata
mov eax edi
mov eax [ edi ]
jmp r-xdata
mov eax esi
sub eax edi
sar eax 0x1
jmp r-xdata
mov edi [ edi ]
dec esi
dec esi
cmp esi eax
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
sub_100247a7
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
push esi
mov esi [ ebp + 0xc ]
push edi
cmp esi 0x2
jne r-xdata
test esi esi
je r-xdata
push 0x0
mov ecx ebx
call sub_1000a914
movzx eax [ eax ]
push eax
call sub_100242e3
pop ecx
test al al
je r-xdata
lea eax [ esi - 0x1 ]
push eax
push r--data
mov ecx ebx
call sub_10024786
mov edi eax
cmp edi 0xffffffff
jne r-xdata
lea edi [ esi - 0x1 ]
push edi
mov ecx ebx
call sub_1000a914
movzx eax [ eax ]
push eax
call sub_100242e3
pop ecx
test al al
je r-xdata
push 0x1
mov ecx ebx
call sub_1000a914
movzx eax [ eax ]
push eax
call sub_100242e3
pop ecx
test al al
je r-xdata
cmp edi 0x1
jne r-xdata
push 0x1
add esi 0xfffffffe
push esi
lea eax [ ebp + 0xc ]
push eax
mov ecx ebx
mov [ ebp + 0xc ] 0x3a
call sub_100245ec
mov edi eax
cmp edi 0xffffffff
je r-xdata
mov eax edi
jmp r-xdata
xor eax eax
lea eax [ edi + 0x1 ]
jmp r-xdata
push 0x0
mov ecx ebx
call sub_1000a914
movzx eax [ eax ]
push eax
call sub_100242e3
pop ecx
test al al
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
sub_10024865
push ebx
mov ebx [ esp + 0xc ]
push esi
mov esi [ esp + 0xc ]
push edi
push 0x2
pop edi
cmp ebx edi
jbe r-xdata
jne r-xdata
push 0x1
mov ecx esi
call sub_1000a914
cmp [ eax ] 0x3a
jne r-xdata
cmp ebx 0x3
jbe r-xdata
push 0x0
mov ecx esi
call sub_1000a914
movzx eax [ eax ]
push eax
call sub_100242e3
pop ecx
test al al
je r-xdata
cmp ebx edi
push edi
mov ecx esi
call sub_1000a914
movzx eax [ eax ]
push eax
call sub_100242e3
pop ecx
test al al
je r-xdata
test ebx ebx
jbe r-xdata
push 0x0
mov ecx esi
call sub_1000a914
movzx eax [ eax ]
push eax
call sub_100242e3
pop ecx
test al al
je r-xdata
push 0x0
mov ecx esi
call sub_1000a914
movzx eax [ eax ]
push eax
call sub_100242e3
pop ecx
test al al
je r-xdata
push 0x1
mov ecx esi
call sub_1000a914
movzx eax [ eax ]
push eax
call sub_100242e3
pop ecx
test al al
je r-xdata
mov eax edi
jmp r-xdata
or eax 0xffffffff
push 0x1
mov ecx esi
call sub_1000a914
movzx eax [ eax ]
push eax
call sub_100242e3
pop ecx
test al al
je r-xdata
xor eax eax
jmp r-xdata
pop edi
pop esi
pop ebx
retn
push edi
mov ecx esi
call sub_1000a914
movzx eax [ eax ]
push eax
call sub_100242e3
pop ecx
test al al
jne r-xdata
push edi
push r--data
mov ecx esi
call sub_10024765
cmp eax ebx
jb r-xdata
jmp r-xdata
sub_10024954
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ ecx ]
mov [ ebp - 0x8 ] eax
mov eax [ ecx + 0x4 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0xc ]
neg eax
push eax
lea ecx [ ebp - 0x8 ]
call sub_100172a7
mov ecx [ ebp - 0x8 ]
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov ecx [ ebp - 0x4 ]
mov [ eax + 0x4 ] ecx
leave
retn 0x8
sub_10024984
push ecx
push ebx
push esi
mov esi ecx
push edi
push [ esi + 0x14 ]
push esi
call sub_100247a7
cmp [ esi + 0x14 ] 0x0
pop ecx
pop ecx
mov edi eax
je r-xdata
mov [ esp + 0xf ] 0x0
push edi
mov ecx esi
call sub_1000a914
movzx eax [ eax ]
push eax
call sub_100242e3
pop ecx
mov [ esp + 0xf ] 0x1
test al al
jne r-xdata
cmp edi 0x1
jne r-xdata
push ebp
lea ebp [ edi - 0x1 ]
push edi
push esi
call sub_10024865
pop ecx
pop ecx
mov ebx eax
test edi edi
jbe r-xdata
mov eax edi
test ebx ebx
jne r-xdata
pop ebp
push ebp
mov ecx esi
call sub_1000a914
movzx eax [ eax ]
push eax
call sub_100242e3
pop ecx
test al al
je r-xdata
cmp [ esp + 0xf ] bl
je r-xdata
dec edi
dec ebp
test edi edi
ja r-xdata
or eax 0xffffffff
jmp r-xdata
cmp ebp ebx
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
retn
sub_10024a0c
push esi
mov esi ecx
push 0x0
mov [ esi + 0x18 ] 0x7
call sub_10002460
mov eax [ esp + 0xc ]
cmp [ esp + 0x8 ] eax
je r-xdata
mov eax esi
pop esi
retn 0x8
sub eax [ esp + 0x8 ]
mov ecx esi
sar eax 0x1
push eax
push [ esp + 0xc ]
call sub_100014cc
sub_10024a55
push 0x4
mov eax sub_1004ab8d
call sub_10029e33
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi + 0x4 ] 0x1
mov edi [ ebp + 0x8 ]
and [ esi + 0x8 ] 0x0
and [ ebp - 0x4 ] 0x0
mov [ esi ] r--data
mov eax [ edi + 0xc ]
mov [ esi + 0xc ] eax
mov eax [ edi + 0x10 ]
mov [ esi + 0x10 ] eax
mov al [ edi + 0x14 ]
mov [ esi + 0x14 ] al
lea eax [ edi + 0x18 ]
push eax
lea ecx [ esi + 0x18 ]
call sub_10001c9f
push edi
push esi
mov [ ebp - 0x4 ] 0x1
call sub_1003dce8
pop ecx
pop ecx
mov eax esi
call sub_10029f0b
retn 0x4
sub_10024ab3
push 0x94
mov eax sub_1004ae6c
call sub_10029e33
xor esi esi
mov [ ebp - 0x10 ] esi
mov edi [ ebp + 0x8 ]
cmp edi esi
je r-xdata
push 0x2
pop eax
call sub_10029f0b
retn
cmp [ edi ] esi
jne r-xdata
push 0x10
call sub_10025dd6
pop ecx
mov [ ebp + 0x8 ] eax
push 0x3
mov [ ebp - 0x4 ] esi
pop esi
test eax eax
je r-xdata
xor eax eax
mov ecx [ ebp + 0xc ]
lea eax [ ebp - 0x2c ]
push eax
call sub_100073c0
push eax
lea ecx [ ebp - 0xa0 ]
mov [ ebp - 0x4 ] 0x1
mov [ ebp - 0x10 ] 0x1
call sub_1000736b
mov ecx [ ebp + 0x8 ]
push 0x0
push eax
mov [ ebp - 0x4 ] 0x2
mov [ ebp - 0x10 ] esi
call sub_100242fa
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
test [ ebp - 0x10 ] 0x1
je r-xdata
and [ ebp - 0x10 ] 0xfffffffd
lea ecx [ ebp - 0xa0 ]
call sub_100073dd
test [ ebp - 0x10 ] 0x2
mov [ edi ] eax
mov [ ebp - 0x4 ] esi
je r-xdata
push 0x0
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_100022b5
sub_10024b64
push ebp
mov ebp esp
sub esp 0x10
push esi
mov esi ecx
cmp [ esi + 0x14 ] 0x0
je r-xdata
xor eax eax
push 0x1
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x10 ]
push eax
call sub_10007b5c
mov ecx eax
call sub_10024954
mov ecx eax
call sub_100068fb
cmp [ eax ] 0x3a
je r-xdata
push 0x1
lea eax [ ebp - 0x10 ]
push eax
lea eax [ ebp - 0x8 ]
push eax
mov ecx esi
call sub_10007b5c
mov ecx eax
call sub_10024954
mov ecx eax
call sub_100068fb
movzx eax [ eax ]
push eax
call sub_100242e3
pop ecx
test al al
jne r-xdata
push edi
mov edi [ esi + 0x14 ]
push 0x5c
push 0x1
mov ecx esi
call sub_100036a7
mov eax edi
pop edi
jmp r-xdata
pop esi
leave
retn
sub_10024bdc
push 0x4
mov eax sub_1004ae94
call sub_10029e33
mov esi ecx
and [ ebp - 0x10 ] 0x0
push 0x34
call sub_10025dd6
pop ecx
mov ecx eax
mov [ ebp - 0x10 ] ecx
and [ ebp - 0x4 ] 0x0
test ecx ecx
je r-xdata
xor eax eax
mov eax [ ebp + 0x8 ]
push [ eax ]
call sub_10024a55
jmp r-xdata
mov eax esi
call sub_10029f0b
retn 0x8
mov ecx rw-data
call sub_10007004
push eax
push [ ebp + 0xc ]
push [ esi ]
call sub_1003d9c6
mov eax [ esi ]
and [ eax + 0x10 ] 0x0
mov ecx [ esi ]
add esp 0xc
push r--data
add ecx 0x18
call sub_10002408
or [ ebp - 0x4 ] 0xffffffff
cmp [ ebp + 0xc ] 0x0
mov [ esi ] eax
je r-xdata
sub_10024c54
push 0x14
mov eax sub_1004b452
call sub_10029e33
push 0x0
lea ecx [ ebp - 0x14 ]
call sub_10022437
mov esi [ rw-data ]
and [ ebp - 0x4 ] 0x0
mov ecx rw-data
mov [ ebp - 0x10 ] esi
call sub_10007004
mov ecx [ ebp + 0x8 ]
push eax
call sub_10007039
mov edi eax
test edi edi
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
call sub_1002245f
mov eax edi
call sub_10029f0b
retn
test esi esi
je r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
push eax
call sub_10024ab3
pop ecx
pop ecx
cmp eax 0xffffffff
jne r-xdata
mov edi esi
jmp r-xdata
mov edi [ ebp - 0x10 ]
mov ecx edi
mov [ rw-data ] edi
call sub_1000778d
push edi
call sub_10022634
pop ecx
push r--data
lea ecx [ ebp - 0x20 ]
call sub_10025f3c
push r--data
lea eax [ ebp - 0x20 ]
push eax
call sub_10029a01
sub_10024cf1
push 0x48
mov eax sub_1004aeeb
call sub_10029e33
mov esi ecx
mov [ ebp - 0x10 ] esi
push 0x0
call sub_10022437
and [ ebp - 0x4 ] 0x0
lea ecx [ esi + 0x4 ]
call sub_10007bb4
lea ecx [ esi + 0x20 ]
mov [ ebp - 0x4 ] 0x1
call sub_10007bb4
lea ecx [ esi + 0x3c ]
mov [ ebp - 0x4 ] 0x2
call sub_10007bb4
lea ecx [ esi + 0x58 ]
mov [ ebp - 0x4 ] 0x3
call sub_10007bb4
cmp [ ebp + 0x8 ] 0x0
mov [ ebp - 0x4 ] 0x4
jne r-xdata
push [ ebp + 0x8 ]
push esi
call sub_100227db
pop ecx
pop ecx
mov eax esi
call sub_10029f0b
retn 0x4
push r--data
lea ecx [ ebp - 0x2c ]
call sub_10001b81
lea eax [ ebp - 0x2c ]
push eax
lea ecx [ ebp - 0x54 ]
mov [ ebp - 0x4 ] 0x5
call sub_100078c4
push r--data
lea eax [ ebp - 0x54 ]
push eax
call sub_10029a01
sub_10024d83
push 0x7c
mov eax sub_1004af1c
call sub_10029e9c
mov eax [ ebp + 0x8 ]
mov esi ecx
mov [ ebp - 0x88 ] esi
mov [ esi + 0x4 ] eax
and [ ebp - 0x4 ] 0x0
push r--data
lea ecx [ ebp - 0x84 ]
mov [ esi ] r--data
call sub_10024cf1
mov [ ebp - 0x4 ] 0x1
call sub_1002290b
lea ecx [ ebp - 0x84 ]
mov [ esi + 0x8 ] eax
mov [ esi + 0xc ] edx
mov [ ebp - 0x4 ] 0x0
call sub_100073dd
mov eax esi
call sub_10029f1f
retn 0x4
sub_10024dfb
push ebp
mov ebp esp
push ecx
push ecx
push esi
mov esi [ ebp + 0x8 ]
cmp [ esi + 0x14 ] 0x0
push edi
mov edi ecx
je r-xdata
mov eax edi
pop edi
pop esi
leave
retn 0x4
lea eax [ ebp - 0x8 ]
push eax
mov ecx esi
call sub_10007aec
mov ecx eax
call sub_100068fb
movzx eax [ eax ]
push eax
call sub_100242e3
pop ecx
test al al
jne r-xdata
push 0xffffffff
push 0x0
push esi
mov ecx edi
call sub_10006b05
mov ecx edi
call sub_10024b64
sub_10024e48
push 0x8
mov eax sub_1004af56
call sub_10029e33
and [ ebp - 0x10 ] 0x0
lea ecx [ ebp - 0x10 ]
call sub_10006db7
and [ ebp - 0x4 ] 0x0
push 0x10
call sub_10025dd6
pop ecx
mov ecx eax
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x4 ] 0x1
test ecx ecx
je r-xdata
xor eax eax
call sub_10024ddf
jmp r-xdata
mov ecx [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x10 ]
push eax
mov [ ebp - 0x4 ] 0x0
call sub_10024bdc
lea ecx [ ebp - 0x10 ]
call sub_10007806
mov eax [ ebp + 0x8 ]
call sub_10029f0b
retn
sub_10024ea4
push 0x0
mov eax sub_1004af7f
call sub_10029e33
test [ rw-data ] 0x1
mov esi rw-data
jne r-xdata
mov eax esi
call sub_10029f0b
retn
or [ rw-data ] 0x1
and [ esp + 0x18 ] 0x0
push esi
call sub_10024e48
mov [ esp ] sub_1004f1c3
call sub_1002ad30
pop ecx
sub_10024ee5
push 0x0
mov eax sub_1004afa8
call sub_10029e33
test [ rw-data ] 0x1
jne r-xdata
mov eax rw-data
call sub_10029f0b
retn
or [ rw-data ] 0x1
and [ esp + 0x18 ] 0x0
call sub_10024ea4
push eax
call sub_10024c54
pop ecx
mov [ rw-data ] eax
sub_10024f22
push 0x20
mov eax sub_1004afd3
call sub_10029e33
mov esi ecx
mov [ ebp - 0x10 ] esi
call sub_10001ac0
push [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x2c ]
call sub_10001254
mov [ ebp - 0x4 ] 0x1
call sub_10024ee5
push [ eax ]
lea eax [ ebp - 0x2c ]
push esi
push eax
call sub_10009038
add esp 0xc
push 0x0
push 0x1
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x4 ] 0x0
call sub_1000247e
mov eax esi
call sub_10029f0b
retn 0x8
sub_10024f79
push 0x24
mov eax sub_1004affe
call sub_10029e9c
mov esi [ ebp + 0x8 ]
mov edi ecx
mov [ ebp - 0x30 ] edi
call sub_10001ac0
and [ ebp - 0x4 ] 0x0
cmp esi [ ebp + 0xc ]
je r-xdata
mov eax edi
call sub_10029f1f
retn 0x8
push [ ebp + 0xc ]
lea ecx [ ebp - 0x2c ]
push esi
call sub_10024a0c
mov [ ebp - 0x4 ] 0x1
call sub_10024ee5
cmp [ ebp - 0x14 ] 0x8
mov ecx [ ebp - 0x28 ]
mov eax ecx
jae r-xdata
mov edx [ ebp - 0x18 ]
lea eax [ eax + edx * 2 ]
push eax
push ecx
mov ecx edi
call sub_10009699
push 0x0
push 0x1
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x4 ] 0x0
call sub_1000247e
lea eax [ ebp - 0x28 ]
mov ecx eax
sub_10024fe9
push 0x3c
mov eax sub_1004b06e
call sub_10029e33
mov esi ecx
xor edi edi
mov [ ebp - 0x10 ] edi
call sub_10024984
xor ebx ebx
inc ebx
cmp eax 0xffffffff
jne r-xdata
mov edi [ esi + 0x18 ]
lea ecx [ esi + 0x4 ]
cmp edi 0x8
jb r-xdata
push edi
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x14 ] 0x7
call sub_10002460
lea eax [ ebp - 0x2c ]
mov [ ebp - 0x4 ] ebx
mov [ ebp - 0x10 ] ebx
jmp r-xdata
mov edx ecx
mov edx [ ecx ]
jmp r-xdata
mov ecx [ ebp + 0x8 ]
push eax
call sub_10001fad
or [ ebp - 0x10 ] 0x4
test [ ebp - 0x10 ] 0x2
mov [ ebp - 0x4 ] ebx
je r-xdata
lea eax [ edx + eax * 2 ]
push eax
push ecx
lea ecx [ ebp - 0x48 ]
call sub_10024f79
push 0x2
pop ecx
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0x10 ] ecx
xor edi edi
mov ecx [ ecx ]
cmp edi 0x8
jb r-xdata
mov [ ebp - 0x4 ] edi
test [ ebp - 0x10 ] bl
je r-xdata
and [ ebp - 0x10 ] 0xfffffffd
push edi
push ebx
lea ecx [ ebp - 0x48 ]
call sub_1000247e
mov eax [ ebp + 0x8 ]
call sub_10029f0b
retn 0x4
and [ ebp - 0x10 ] 0xfffffffe
push edi
push ebx
lea ecx [ ebp - 0x2c ]
call sub_1000247e
sub_10025099
push 0x20
mov eax sub_1004b099
call sub_10029e33
mov esi ecx
mov [ ebp - 0x10 ] esi
push [ ebp + 0x10 ]
lea ecx [ ebp - 0x2c ]
call sub_10001b81
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x2c ]
push eax
mov ecx esi
call sub_100078c4
push 0x0
push 0x1
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x4 ] 0x2
call sub_100022b5
mov eax [ ebp + 0x8 ]
mov [ esi ] r--data
mov [ esi + 0x28 ] eax
mov eax [ ebp + 0xc ]
lea ecx [ esi + 0x30 ]
mov [ esi + 0x2c ] eax
call sub_10007bb4
mov eax esi
call sub_10029f0b
retn 0xc
sub_100250f8
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
push edi
lea eax [ ebp - 0x8 ]
push eax
mov esi ecx
call sub_10017044
mov edi [ eax ]
mov ebx [ eax + 0x4 ]
lea eax [ ebp - 0x10 ]
push eax
mov ecx esi
call sub_10017044
push [ ebp + 0xc ]
mov ecx esi
push [ ebp + 0x8 ]
push ebx
push edi
push [ eax + 0x4 ]
push [ eax ]
call sub_10016bb8
pop edi
pop esi
pop ebx
leave
retn 0xc
sub_10025137
push ebp
mov ebp esp
sub esp 0x54
mov ecx [ ebp + 0x1c ]
mov eax [ ecx ]
and [ ebp - 0x4 ] 0x0
push esi
lea edx [ ebp + 0x1c ]
push edx
push [ ebp + 0x14 ]
lea edx [ ebp - 0x8 ]
push [ ebp + 0x10 ]
push edx
push [ ebp + 0xc ]
lea edx [ ebp - 0x4 ]
push [ ebp + 0x8 ]
push edx
call [ eax + 0x14 ]
mov esi eax
test esi esi
je r-xdata
push [ ebp + 0x1c ]
mov ecx [ ebp + 0x18 ]
push [ ebp + 0x1c ]
push [ ebp + 0x10 ]
call sub_100250f8
pop esi
leave
retn
push r--data
call sub_10025396
push eax
push esi
lea ecx [ ebp - 0x54 ]
call sub_10025099
push r--data
lea eax [ ebp - 0x54 ]
push eax
call sub_10029a01
sub_1002519e
push ebp
sub esp 0x100
lea ebp [ esp - 0x4 ]
mov eax [ rw-data ]
xor eax ebp
mov [ ebp + 0x100 ] eax
push 0x10
mov eax sub_1004b0bc
call sub_10029e33
mov eax [ ebp + 0x114 ]
mov edi [ ebp + 0x110 ]
mov esi [ ebp + 0x10c ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp + 0x118 ]
mov [ ebp - 0x18 ] esi
mov [ ebp - 0x14 ] eax
test edi edi
jne r-xdata
cmp esi edi
je r-xdata
push esi
call sub_10026078
pop ecx
lea edi [ esi + eax * 2 ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp + 0x100 ]
xor ecx ebp
call sub_10025c8d
add ebp 0x104
leave
retn
mov eax edi
sub eax esi
sar eax 0x1
lea ebx [ eax * 4 + 0x4 ]
cmp ebx 0x100
jbe r-xdata
push [ ebp - 0x14 ]
lea eax [ ebp + 0x100 ]
push [ ebp - 0x10 ]
push eax
lea eax [ ebp ]
push eax
push edi
push esi
call sub_10025137
add esp 0x18
push ebx
call sub_100233aa
mov esi eax
mov [ ebp - 0x1c ] esi
push [ ebp - 0x14 ]
and [ ebp - 0x4 ] 0x0
push [ ebp - 0x10 ]
lea eax [ esi + ebx ]
push eax
push esi
push edi
push [ ebp - 0x18 ]
call sub_10025137
push esi
call sub_10026616
add esp 0x20
jmp r-xdata
sub_10025276
push ebp
mov ebp esp
push esi
push edi
call [ AreFileApisANSI@IAT ]
mov esi [ ebp + 0x18 ]
mov ecx [ ebp + 0x1c ]
mov edi [ ebp + 0x10 ]
neg eax
sbb eax eax
sub ecx esi
sar ecx 0x1
push ecx
push esi
mov ecx edi
sub ecx [ ebp + 0xc ]
and eax 0x2
push ecx
push [ ebp + 0xc ]
inc eax
push 0x1
push eax
call [ MultiByteToWideChar@IAT ]
test eax eax
jne r-xdata
mov ecx [ ebp + 0x14 ]
mov [ ecx ] edi
mov ecx [ ebp + 0x20 ]
lea eax [ esi + eax * 2 ]
mov [ ecx ] eax
xor ecx ecx
mov [ eax ] cx
xor eax eax
push 0x2
pop eax
jmp r-xdata
pop edi
pop esi
pop ebp
retn 0x1c
sub_100252cd
push ebp
mov ebp esp
push esi
push edi
call [ AreFileApisANSI@IAT ]
mov esi [ ebp + 0x18 ]
mov ecx [ ebp + 0x1c ]
mov edi [ ebp + 0x10 ]
push 0x0
neg eax
sbb eax eax
push 0x0
sub ecx esi
push ecx
mov ecx edi
sub ecx [ ebp + 0xc ]
push esi
sar ecx 0x1
push ecx
push [ ebp + 0xc ]
and eax 0x2
inc eax
push 0x400
push eax
call [ WideCharToMultiByte@IAT ]
test eax eax
jne r-xdata
mov ecx [ ebp + 0x14 ]
mov [ ecx ] edi
mov ecx [ ebp + 0x20 ]
add eax esi
mov [ ecx ] eax
mov [ eax ] 0x0
xor eax eax
push 0x2
pop eax
jmp r-xdata
pop edi
pop esi
pop ebp
retn 0x1c
sub_10025328
mov eax [ esp + 0x4 ]
mov edx [ eax + 0x4 ]
mov ecx [ esp + 0x8 ]
cmp edx [ ecx + 0x4 ]
jne r-xdata
xor eax eax
retn
mov eax [ eax ]
cmp eax [ ecx ]
jne r-xdata
xor eax eax
inc eax
retn
sub_10025355
push ebp
mov ebp esp
push ecx
push ecx
push [ ebp + 0xc ]
mov eax [ ecx ]
push [ ebp + 0x8 ]
lea edx [ ebp - 0x8 ]
push edx
call [ eax + 0xc ]
push eax
call sub_10025328
pop ecx
pop ecx
leave
retn 0x8
sub_10025396
push 0x0
mov eax sub_1004b0f2
call sub_10029e33
test [ rw-data ] 0x1
jne r-xdata
mov eax rw-data
call sub_10029f0b
retn
or [ rw-data ] 0x1
and [ esp + 0x18 ] 0x0
push sub_1004f1eb
mov [ rw-data ] r--data
call sub_1002ad30
pop ecx
sub_100253d7
push 0x8
mov eax sub_1004b126
call sub_10029e33
mov esi [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
and [ ebp - 0x10 ] 0x0
mov ecx esi
mov [ ebp - 0x14 ] esi
call sub_10007bb4
mov eax [ ebp + 0xc ]
and [ ebp - 0x4 ] 0x0
sub eax 0x0
mov [ ebp - 0x10 ] 0x1
je r-xdata
push r--data
dec eax
je r-xdata
push r--data
jmp r-xdata
dec eax
je r-xdata
mov ecx esi
push r--data
jmp r-xdata
dec eax
mov ecx esi
je r-xdata
push r--data
jmp r-xdata
push r--data
jmp r-xdata
call sub_10002408
mov eax esi
call sub_10029f0b
retn 0x8
sub_1002547a
push 0x0
mov eax sub_1004b14f
call sub_10029e33
test [ rw-data ] 0x1
jne r-xdata
mov eax rw-data
call sub_10029f0b
retn
or [ rw-data ] 0x1
and [ esp + 0x18 ] 0x0
push sub_1004f1f6
mov [ rw-data ] r--data
call sub_1002ad30
pop ecx
sub_100254bb
push 0x0
mov eax sub_1004b178
call sub_10029e33
test [ rw-data ] 0x1
jne r-xdata
mov eax rw-data
call sub_10029f0b
retn
or [ rw-data ] 0x1
and [ esp + 0x18 ] 0x0
push sub_1004f201
mov [ rw-data ] r--data
call sub_1002ad30
pop ecx
sub_100254fc
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0xc ]
cmp esi 0x19
jg r-xdata
mov eax 0x271d
cmp esi eax
jg r-xdata
je r-xdata
lea eax [ esi - 0x271e ]
cmp eax 0x33
ja r-xdata
je r-xdata
call sub_100254bb
mov ecx eax
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x5
jmp r-xdata
cmp esi 0x15
ja r-xdata
call sub_1002547a
mov ecx eax
mov eax [ ebp + 0x8 ]
mov [ eax ] esi
movzx eax [ eax + lookup_table_10025ac8 ]
jmp [ eax * 4 + jump_table_10025a54 ]
call sub_100254bb
mov ecx eax
mov eax [ ebp + 0x8 ]
mov [ eax ] 0xd
jmp r-xdata
mov eax 0x91
cmp esi eax
jg r-xdata
mov [ eax + 0x4 ] ecx
pop esi
pop ebp
retn 0x8
jmp [ esi * 4 + jump_table_100259fc ]
call sub_100254bb
mov ecx eax
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x16
jmp r-xdata
call sub_100254bb
mov ecx eax
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x18
jmp r-xdata
call sub_100254bb
mov ecx eax
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x26
jmp r-xdata
call sub_100254bb
mov ecx eax
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x26ae
jmp r-xdata
call sub_100254bb
mov ecx eax
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x26af
jmp r-xdata
call sub_100254bb
mov ecx eax
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x26ad
jmp r-xdata
call sub_100254bb
mov ecx eax
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x26b3
jmp r-xdata
call sub_100254bb
mov ecx eax
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x26b2
jmp r-xdata
call sub_100254bb
mov ecx eax
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x26b4
jmp r-xdata
call sub_100254bb
mov ecx eax
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x26b5
jmp r-xdata
call sub_100254bb
mov ecx eax
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x26b6
jmp r-xdata
call sub_100254bb
mov ecx eax
mov eax [ ebp + 0x8 ]
mov [ eax ] 0xe
jmp r-xdata
call sub_100254bb
mov ecx eax
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x26b7
jmp r-xdata
call sub_100254bb
mov ecx eax
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x26c8
jmp r-xdata
call sub_100254bb
mov ecx eax
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x26b0
jmp r-xdata
call sub_100254bb
mov ecx eax
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x26b9
jmp r-xdata
call sub_100254bb
mov ecx eax
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x26ba
jmp r-xdata
call sub_100254bb
mov ecx eax
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x26bb
jmp r-xdata
call sub_100254bb
mov ecx eax
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x26bc
jmp r-xdata
call sub_100254bb
mov ecx eax
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x26bd
jmp r-xdata
call sub_100254bb
mov ecx eax
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x26c1
jmp r-xdata
call sub_100254bb
mov ecx eax
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x26c5
jmp r-xdata
call sub_100254bb
mov ecx eax
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x26c3
jmp r-xdata
call sub_100254bb
mov ecx eax
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x26c9
jmp r-xdata
call sub_100254bb
mov ecx eax
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x26cd
jmp r-xdata
call sub_100254bb
mov ecx eax
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x26d5
jmp r-xdata
call sub_100254bb
mov ecx eax
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x26d2
jmp r-xdata
call sub_100254bb
mov ecx eax
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x26ca
jmp r-xdata
mov eax 0x3f4
cmp esi eax
jg r-xdata
je r-xdata
call sub_100254bb
mov ecx eax
mov eax [ ebp + 0x8 ]
and [ eax ] 0x0
jmp r-xdata
call sub_100254bb
mov ecx eax
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x13
jmp r-xdata
call sub_100254bb
mov ecx eax
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x2
jmp r-xdata
call sub_100254bb
mov ecx eax
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x28
jmp r-xdata
call sub_100254bb
mov ecx eax
mov eax [ ebp + 0x8 ]
mov [ eax ] 0xc
jmp r-xdata
call sub_100254bb
mov ecx eax
mov eax [ ebp + 0x8 ]
mov [ eax ] 0xb
jmp r-xdata
call sub_100254bb
mov ecx eax
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x12
jmp r-xdata
mov eax esi
sub eax 0x3f5
je r-xdata
je r-xdata
call sub_100254bb
mov ecx eax
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x29
jmp r-xdata
cmp esi 0x52
jg r-xdata
sub eax 0xe0
je r-xdata
mov eax esi
sub eax 0xaa
je r-xdata
mov eax esi
sub eax 0x6e
je r-xdata
je r-xdata
sub eax 0x48c
je r-xdata
call sub_100254bb
mov ecx eax
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x10
jmp r-xdata
sub eax 0xd
je r-xdata
dec eax
je r-xdata
mov eax esi
sub eax 0x1d
je r-xdata
sub eax 0x3
je r-xdata
call sub_100254bb
mov ecx eax
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x11
jmp r-xdata
sub eax 0x1d
je r-xdata
dec eax
je r-xdata
dec eax
je r-xdata
sub eax 0x1db0
je r-xdata
call sub_100254bb
mov ecx eax
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x27
jmp r-xdata
sub eax 0x37
je r-xdata
call sub_100254bb
mov ecx eax
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x1c
jmp r-xdata
sub eax 0xb
je r-xdata
dec eax
dec eax
je r-xdata
call sub_100254bb
mov ecx eax
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x4
jmp r-xdata
sub eax 0x5
jne r-xdata
sub eax 0x2d8
je r-xdata
sub eax 0x8
je r-xdata
dec eax
je r-xdata
call sub_100254bb
mov ecx eax
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x9
jmp r-xdata
call sub_100254bb
mov ecx eax
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x26c7
jmp r-xdata
sub eax 0x3
je r-xdata
sub eax 0xb
jne r-xdata
sub eax 0x6
je r-xdata
sub eax 0xd
je r-xdata
sub eax 0x10
je r-xdata
sub eax 0x19
jne r-xdata
sub_10025ae5
or ebx [ esp + ecx ]
sbb al 0xd
push cs
movups xmm2 [ ecx ]
adc dl [ ebx ]
adc al 0x15
push ss
pop ss
sbb al 0x1c
sbb [ ecx ] bl
sbb al 0x1a
sbb al 0x1b
push 0x20
mov eax sub_1004b1d3
call sub_10029e33
and [ ebp - 0x10 ] 0x0
xor ebx ebx
inc ebx
mov esi rw-data
test [ rw-data ] bl
jne r-xdata
push [ ebp + 0xc ]
call sub_1002d263
pop ecx
test eax eax
je r-xdata
or [ rw-data ] ebx
push r--data
mov ecx esi
mov [ ebp - 0x4 ] ebx
call sub_10001b81
push sub_1004f20c
call sub_1002ad30
pop ecx
mov [ ebp - 0x4 ] 0x0
mov eax esi
push eax
lea ecx [ ebp - 0x2c ]
call sub_10001b81
mov [ ebp - 0x4 ] 0x2
mov [ ebp - 0x10 ] ebx
jmp r-xdata
mov eax [ ebp + 0x8 ]
call sub_10029f0b
retn 0x8
and [ ebp - 0x10 ] 0xfffffffe
push 0x0
push ebx
lea ecx [ ebp - 0x2c ]
call sub_100022b5
mov ecx [ ebp + 0x8 ]
push eax
call sub_10001c9f
or [ ebp - 0x10 ] 0x2
and [ ebp - 0x4 ] 0x0
test [ ebp - 0x10 ] bl
je r-xdata
sub_10025b94
push 0x30
mov eax sub_1004b217
call sub_10029e9c
mov edi [ ebp + 0x8 ]
xor ebx ebx
push ebx
push ebx
lea eax [ ebp - 0x38 ]
push eax
push 0x400
push [ ebp + 0xc ]
mov [ ebp - 0x34 ] ebx
push ebx
push 0x1300
mov [ ebp - 0x3c ] edi
mov [ ebp - 0x38 ] ebx
call [ FormatMessageA@IAT ]
mov ecx [ ebp - 0x38 ]
mov [ ebp - 0x30 ] ecx
xor esi esi
inc esi
mov [ ebp - 0x4 ] esi
cmp eax ebx
jne r-xdata
push ecx
lea ecx [ ebp - 0x2c ]
call sub_10001b81
mov [ ebp - 0x4 ] 0x2
cmp [ ebp - 0x18 ] ebx
je r-xdata
push r--data
mov ecx edi
call sub_10001b81
mov [ ebp - 0x34 ] esi
jmp r-xdata
lea eax [ ebp - 0x2c ]
push eax
mov ecx edi
call sub_10001c9f
push ebx
push esi
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x34 ] esi
mov [ ebp - 0x4 ] 0x1
call sub_100022b5
mov eax [ ebp - 0x18 ]
dec eax
push eax
lea ecx [ ebp - 0x2c ]
call sub_10005c50
cmp [ eax ] 0xa
je r-xdata
push [ ebp - 0x30 ]
mov [ ebp - 0x4 ] bl
call [ LocalFree@IAT ]
mov eax edi
call sub_10029f1f
retn 0x8
mov eax [ ebp - 0x18 ]
push 0xffffffff
dec eax
push eax
lea ecx [ ebp - 0x2c ]
call sub_1000202a
cmp [ ebp - 0x18 ] ebx
jne r-xdata
mov eax [ ebp - 0x18 ]
dec eax
push eax
lea ecx [ ebp - 0x2c ]
call sub_10005c50
cmp [ eax ] 0xd
jne r-xdata
mov eax [ ebp - 0x18 ]
cmp eax ebx
je r-xdata
dec eax
push eax
lea ecx [ ebp - 0x2c ]
call sub_10005c50
cmp [ eax ] 0x2e
jne r-xdata
mov eax [ ebp - 0x18 ]
push 0xffffffff
dec eax
push eax
lea ecx [ ebp - 0x2c ]
call sub_1000202a
sub_10025ca7
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x14 ]
push edi
xor edi edi
cmp esi edi
jne r-xdata
cmp [ ebp + 0x8 ] edi
jne r-xdata
xor eax eax
jmp r-xdata
cmp [ ebp + 0x10 ] edi
je r-xdata
call sub_1002c068
push 0x16
pop esi
mov [ eax ] esi
pop edi
pop esi
pop ebp
retn
push [ ebp + 0xc ]
push edi
push [ ebp + 0x8 ]
call sub_10026630
add esp 0xc
cmp [ ebp + 0x10 ] edi
je r-xdata
cmp [ ebp + 0xc ] esi
jb r-xdata
cmp [ ebp + 0xc ] esi
jae r-xdata
push esi
push [ ebp + 0x10 ]
push [ ebp + 0x8 ]
call sub_10028b40
add esp 0xc
jmp r-xdata
push 0x16
pop eax
call sub_1002c068
push 0x22
pop ecx
mov [ eax ] ecx
mov esi ecx
jmp r-xdata
push edi
push edi
push edi
push edi
push edi
call sub_100261c9
add esp 0x14
mov eax esi
jmp r-xdata
sub_10025d30
mov ecx [ esp + 0x4 ]
test ecx 0x3
je r-xdata
mov eax [ ecx ]
mov edx 0x7efefeff
add edx eax
xor eax 0xffffffff
xor eax edx
add ecx 0x4
test eax 0x81010100
je r-xdata
mov al [ ecx ]
add ecx 0x1
test al al
je r-xdata
mov eax [ ecx - 0x4 ]
test al al
je r-xdata
lea eax [ ecx - 0x1 ]
mov ecx [ esp + 0x4 ]
sub eax ecx
retn
test ecx 0x3
jne r-xdata
lea eax [ ecx - 0x4 ]
mov ecx [ esp + 0x4 ]
sub eax ecx
retn
test ah ah
je r-xdata
add eax 0x0
lea esp [ esp ]
lea esp [ esp ]
lea eax [ ecx - 0x3 ]
mov ecx [ esp + 0x4 ]
sub eax ecx
retn
test eax 0xff0000
je r-xdata
lea eax [ ecx - 0x2 ]
mov ecx [ esp + 0x4 ]
sub eax ecx
retn
test eax 0xff000000
je r-xdata
jmp r-xdata
sub_10025dd6
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
jmp r-xdata
push [ ebp + 0x8 ]
call sub_10028f2d
pop ecx
test eax eax
je r-xdata
push [ ebp + 0x8 ]
call sub_1002d3e4
pop ecx
test eax eax
je r-xdata
leave
retn
test [ rw-data ] 0x1
mov esi rw-data
jne r-xdata
push esi
lea ecx [ ebp - 0xc ]
call sub_10002171
push r--data
lea eax [ ebp - 0xc ]
push eax
call sub_10029a01
int3
or [ rw-data ] 0x1
mov ecx esi
call sub_10025dbb
push sub_1004f21b
call sub_1002ad30
pop ecx
sub_10025e4c
mov edi edi
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
push esi
push edi
mov edi ecx
mov [ edi ] r--data
mov eax [ ebx ]
test eax eax
je r-xdata
and [ edi + 0x4 ] 0x0
push eax
call sub_10025d30
mov esi eax
inc esi
push esi
call sub_10028f2d
pop ecx
pop ecx
mov [ edi + 0x4 ] eax
test eax eax
je r-xdata
mov [ edi + 0x8 ] 0x1
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
push [ ebx ]
push esi
push eax
call sub_1002d40c
add esp 0xc
jmp r-xdata
sub_10025ebc
mov edi edi
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
push esi
mov esi ecx
mov [ esi ] r--data
mov eax [ ebx + 0x8 ]
mov [ esi + 0x8 ] eax
test eax eax
mov eax [ ebx + 0x4 ]
push edi
je r-xdata
mov [ esi + 0x4 ] eax
test eax eax
je r-xdata
and [ esi + 0x4 ] 0x0
jmp r-xdata
push eax
call sub_10025d30
mov edi eax
inc edi
push edi
call sub_10028f2d
pop ecx
pop ecx
mov [ esi + 0x4 ] eax
test eax eax
je r-xdata
pop edi
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x4
push [ ebx + 0x4 ]
push edi
push eax
call sub_1002d40c
add esp 0xc
jmp r-xdata
sub_10025f3c
mov edi edi
push ebp
mov ebp esp
push esi
lea eax [ ebp + 0x8 ]
push eax
mov esi ecx
call sub_10025e4c
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0x4
sub_10025f82
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_10025f19
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_10025c9c
pop ecx
sub_10025fa3
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
mov [ esi ] r--data
call sub_10025f19
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_10025c9c
pop ecx
sub_10025fda
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_10025fca
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_10025c9c
pop ecx
sub_10025ffb
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
add ecx 0x9
push ecx
add eax 0x9
push eax
call sub_100292d0
neg eax
pop ecx
sbb eax eax
pop ecx
inc eax
pop ebp
retn 0x4
sub_1002601b
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x14 ]
push esi
push edi
xor edi edi
cmp eax edi
je r-xdata
xor eax eax
cmp [ ebp + 0x8 ] edi
jne r-xdata
cmp [ ebp + 0x10 ] edi
je r-xdata
call sub_1002c068
push 0x16
pop esi
mov [ eax ] esi
cmp [ ebp + 0xc ] eax
jae r-xdata
pop edi
pop esi
pop ebp
retn
push eax
push [ ebp + 0x10 ]
push [ ebp + 0x8 ]
call sub_1002d4f0
add esp 0xc
call sub_1002c068
push 0x22
pop ecx
mov [ eax ] ecx
mov esi ecx
jmp r-xdata
push edi
push edi
push edi
push edi
push edi
call sub_100261c9
add esp 0x14
mov eax esi
jmp r-xdata
sub_10026078
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov cx [ eax ]
inc eax
inc eax
test cx cx
jne r-xdata
sub eax [ ebp + 0x8 ]
sar eax 0x1
dec eax
pop ebp
retn
sub_100260a1
mov edi edi
push ebp
mov ebp esp
sub esp 0x328
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
and [ ebp - 0x328 ] 0x0
push ebx
push 0x4c
lea eax [ ebp - 0x324 ]
push 0x0
push eax
call sub_10026630
lea eax [ ebp - 0x328 ]
mov [ ebp - 0x2d8 ] eax
lea eax [ ebp - 0x2d0 ]
add esp 0xc
mov [ ebp - 0x2d4 ] eax
mov [ ebp - 0x220 ] eax
mov [ ebp - 0x224 ] ecx
mov [ ebp - 0x228 ] edx
mov [ ebp - 0x22c ] ebx
mov [ ebp - 0x230 ] esi
mov [ ebp - 0x234 ] edi
mov [ ebp - 0x208 ] ss
mov [ ebp - 0x214 ] cs
mov [ ebp - 0x238 ] ds
mov [ ebp - 0x23c ] es
mov [ ebp - 0x240 ] fs
mov [ ebp - 0x244 ] gs
pushfd
pop [ ebp - 0x210 ]
mov eax [ ebp + 0x4 ]
lea ecx [ ebp + 0x4 ]
mov [ ebp - 0x2d0 ] 0x10001
mov [ ebp - 0x218 ] eax
mov [ ebp - 0x20c ] ecx
mov ecx [ ecx - 0x4 ]
mov [ ebp - 0x21c ] ecx
mov [ ebp - 0x328 ] 0xc0000417
mov [ ebp - 0x324 ] 0x1
mov [ ebp - 0x31c ] eax
call [ IsDebuggerPresent@IAT ]
push 0x0
mov ebx eax
call [ SetUnhandledExceptionFilter@IAT ]
lea eax [ ebp - 0x2d8 ]
push eax
call [ UnhandledExceptionFilter@IAT ]
test eax eax
jne r-xdata
push 0xc0000417
call [ GetCurrentProcess@IAT ]
push eax
call [ TerminateProcess@IAT ]
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop ebx
call sub_10025c8d
leave
retn
test ebx ebx
jne r-xdata
push 0x2
call sub_1002d855
pop ecx
sub_100261c9
mov edi edi
push ebp
mov ebp esp
push [ rw-data ]
call sub_1002d8d8
pop ecx
test eax eax
je r-xdata
push 0x2
call sub_1002d855
pop ecx
pop ebp
jmp sub_100260a1
pop ebp
jmp eax
sub_100261ff
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push esi
push edi
cmp eax 0x1
jne r-xdata
xor edi edi
cmp eax edi
jne r-xdata
push eax
call sub_1002e5c0
pop ecx
test eax eax
jne r-xdata
cmp eax 0x2
jne r-xdata
cmp [ rw-data ] edi
jle r-xdata
call sub_1002dcdb
test eax eax
jne r-xdata
xor eax eax
jmp r-xdata
cmp eax 0x3
jne r-xdata
call sub_1002d953
push 0x214
push 0x1
call sub_1002c982
mov esi eax
pop ecx
pop ecx
cmp esi edi
je r-xdata
dec [ rw-data ]
cmp [ rw-data ] edi
jne r-xdata
call sub_1002e574
call [ GetCommandLineA@IAT ]
mov [ rw-data ] eax
call sub_1002e43d
mov [ rw-data ] eax
call sub_1002de68
test eax eax
jge r-xdata
call sub_1002e5f0
jmp r-xdata
pop edi
pop esi
pop ebp
retn 0xc
xor eax eax
inc eax
push edi
call sub_1002dc6d
pop ecx
push esi
push [ rw-data ]
push [ rw-data ]
call sub_1002d8d8
pop ecx
call eax
test eax eax
je r-xdata
cmp [ ebp + 0x10 ] edi
jne r-xdata
call sub_100299a4
call sub_1002e382
test eax eax
jl r-xdata
call sub_1002d987
jmp r-xdata
push esi
call sub_1002644d
pop ecx
jmp r-xdata
push edi
push esi
call sub_1002d9c4
pop ecx
pop ecx
call [ GetCurrentThreadId@IAT ]
or [ esi + 0x4 ] 0xffffffff
mov [ esi ] eax
jmp r-xdata
call sub_1002e0bc
call sub_1002d987
call sub_1002e5f0
jmp r-xdata
call sub_1002e0bc
jmp r-xdata
call sub_1002e10a
test eax eax
jl r-xdata
push 0x0
call sub_100297c7
pop ecx
test eax eax
jne r-xdata
inc [ rw-data ]
jmp r-xdata
sub_10026334
push 0xc
push r--data
call sub_1002e7e4
mov edi ecx
mov esi edx
mov ebx [ ebp + 0x8 ]
xor eax eax
inc eax
mov [ ebp - 0x1c ] eax
test esi esi
jne r-xdata
and [ ebp - 0x4 ] 0x0
cmp esi eax
je r-xdata
cmp [ rw-data ] edx
je r-xdata
mov eax [ r--data ]
test eax eax
je r-xdata
cmp esi 0x2
jne r-xdata
xor eax eax
cmp [ ebp - 0x1c ] 0x0
je r-xdata
push edi
push esi
push ebx
call eax
mov [ ebp - 0x1c ] eax
push edi
push esi
push ebx
call sub_10001000
mov [ ebp - 0x1c ] eax
cmp esi 0x1
jne r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
push edi
push esi
push ebx
call sub_100261ff
mov [ ebp - 0x1c ] eax
test eax eax
je r-xdata
test esi esi
je r-xdata
test eax eax
jne r-xdata
push edi
push esi
push ebx
call sub_100261ff
test eax eax
jne r-xdata
cmp esi 0x3
jne r-xdata
push edi
push eax
push ebx
call sub_10001000
push edi
push 0x0
push ebx
call sub_100261ff
mov eax [ r--data ]
test eax eax
je r-xdata
cmp [ ebp - 0x1c ] 0x0
je r-xdata
and [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
mov eax [ ebp - 0x1c ]
jmp r-xdata
push edi
push 0x0
push ebx
call eax
mov eax [ r--data ]
test eax eax
je r-xdata
call sub_1002e829
retn
push edi
push esi
push ebx
call eax
mov [ ebp - 0x1c ] eax
_start
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0xc ] 0x1
jne r-xdata
push [ ebp + 0x8 ]
mov ecx [ ebp + 0x10 ]
mov edx [ ebp + 0xc ]
call sub_10026334
pop ecx
pop ebp
retn 0xc
call sub_1002e9cc
sub_1002644d
push 0xc
push r--data
call sub_1002e7e4
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
call sub_1002e829
retn
cmp [ rw-data ] 0x3
jne r-xdata
push esi
push 0x4
call sub_1002ebde
pop ecx
and [ ebp - 0x4 ] 0x0
push esi
call sub_1002ec11
pop ecx
mov [ ebp - 0x1c ] eax
test eax eax
je r-xdata
call sub_1002c068
mov esi eax
call [ GetLastError@IAT ]
push eax
call sub_1002c026
mov [ esi ] eax
pop ecx
mov [ ebp - 0x4 ] 0xfffffffe
call sub_100264a3
cmp [ ebp - 0x1c ] 0x0
jne r-xdata
push esi
push eax
call sub_1002ec41
pop ecx
pop ecx
push [ ebp + 0x8 ]
jmp r-xdata
push 0x0
push [ rw-data ]
call [ HeapFree@IAT ]
test eax eax
jne r-xdata
sub_100264db
mov edi edi
push ebp
mov ebp esp
lea eax [ ebp + 0x14 ]
push eax
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_100304ea
add esp 0x14
pop ebp
retn
sub_10026520
mov eax [ esp + 0xc ]
push ebx
test eax eax
je r-xdata
pop ebx
retn
mov edx [ esp + 0x8 ]
xor ebx ebx
mov bl [ esp + 0xc ]
test edx 0x3
je r-xdata
sub eax 0x4
jb r-xdata
mov cl [ edx ]
add edx 0x1
xor cl bl
je r-xdata
add eax 0x4
je r-xdata
push edi
mov edi ebx
shl ebx 0x8
add ebx edi
mov edi ebx
shl ebx 0x10
add ebx edi
jmp r-xdata
lea eax [ edx - 0x1 ]
pop ebx
retn
sub eax 0x1
je r-xdata
mov cl [ edx ]
add edx 0x1
xor cl bl
je r-xdata
mov ecx [ edx ]
xor ecx ebx
mov edi 0x7efefeff
add edi ecx
xor ecx 0xffffffff
xor ecx edi
add edx 0x4
and ecx 0x81010100
je r-xdata
test edx 0x3
jne r-xdata
sub eax 0x1
jne r-xdata
sub eax 0x4
jb r-xdata
mov ecx [ edx - 0x4 ]
xor cl bl
je r-xdata
pop edi
lea eax [ edx - 0x4 ]
pop edi
pop ebx
retn
xor ch bl
je r-xdata
lea eax [ edx - 0x3 ]
pop edi
pop ebx
retn
shr ecx 0x10
xor cl bl
je r-xdata
lea eax [ edx - 0x2 ]
pop edi
pop ebx
retn
xor ch bl
je r-xdata
pop edi
jmp r-xdata
sub_100265d0
push ebp
mov ebp esp
push esi
xor eax eax
push eax
push eax
push eax
push eax
push eax
push eax
push eax
push eax
mov edx [ ebp + 0xc ]
lea ecx [ ecx ]
mov esi [ ebp + 0x8 ]
or ecx 0xffffffff
lea ecx [ ecx ]
add edx 0x1
bts [ esp ] eax
jmp r-xdata
mov eax ecx
add esp 0x20
pop esi
leave
retn
add esi 0x1
bt [ esp ] eax
jae r-xdata
mov al [ edx ]
or al al
je r-xdata
add ecx 0x1
mov al [ esi ]
or al al
je r-xdata
sub_10026630
mov edx [ esp + 0xc ]
mov ecx [ esp + 0x4 ]
test edx edx
je r-xdata
mov eax [ esp + 0x4 ]
retn
xor eax eax
mov al [ esp + 0x8 ]
test al al
jne r-xdata
push edi
mov edi ecx
cmp edx 0x4
jb r-xdata
cmp edx 0x100
jb r-xdata
mov [ edi ] al
add edi 0x1
sub edx 0x1
jne r-xdata
neg ecx
and ecx 0x3
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ esp + 0x8 ]
pop edi
retn
mov ecx eax
shl eax 0x8
add eax ecx
mov ecx eax
shl eax 0x10
add eax ecx
mov ecx edx
and edx 0x3
shr ecx 0x2
je r-xdata
sub edx ecx
jmp sub_100305c9
[ edi ]
test edx edx
je r-xdata
mov [ edi ] al
add edi 0x1
sub ecx 0x1
jne r-xdata
sub_100266aa
mov edi edi
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x10 ]
mov eax edi
sub eax 0x0
je r-xdata
xor eax eax
dec eax
je r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
movzx eax [ eax ]
movzx ecx [ ecx ]
jmp r-xdata
dec eax
je r-xdata
sub eax ecx
je r-xdata
mov ecx [ ebp + 0x8 ]
mov esi [ ebp + 0xc ]
movzx eax [ ecx ]
movzx edx [ esi ]
sub eax edx
je r-xdata
dec eax
je r-xdata
pop edi
pop esi
pop ebp
retn
xor ecx ecx
test eax eax
setg cl
lea ecx [ ecx + ecx - 0x1 ]
mov eax ecx
jmp r-xdata
movzx eax [ ecx + 0x1 ]
movzx ecx [ esi + 0x1 ]
jmp r-xdata
xor edx edx
test eax eax
setg dl
lea edx [ edx + edx - 0x1 ]
mov eax edx
test eax eax
jne r-xdata
mov ecx [ ebp + 0x8 ]
mov esi [ ebp + 0xc ]
movzx eax [ ecx ]
movzx edx [ esi ]
sub eax edx
je r-xdata
dec eax
je r-xdata
movzx eax [ ecx + 0x1 ]
movzx edx [ esi + 0x1 ]
sub eax edx
je r-xdata
xor edx edx
test eax eax
setg dl
lea edx [ edx + edx - 0x1 ]
mov eax edx
test eax eax
jne r-xdata
mov ecx [ ebp + 0x8 ]
mov esi [ ebp + 0xc ]
movzx eax [ ecx ]
movzx edx [ esi ]
sub eax edx
je r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
push ebx
push 0x20
pop edx
jmp r-xdata
movzx eax [ ecx + 0x2 ]
movzx ecx [ esi + 0x2 ]
jmp r-xdata
xor edx edx
test eax eax
setg dl
lea edx [ edx + edx - 0x1 ]
mov eax edx
test eax eax
jne r-xdata
movzx eax [ ecx + 0x1 ]
movzx edx [ esi + 0x1 ]
sub eax edx
je r-xdata
xor edx edx
test eax eax
setg dl
lea edx [ edx + edx - 0x1 ]
mov eax edx
test eax eax
jne r-xdata
cmp edi edx
jae r-xdata
movzx eax [ ecx + 0x2 ]
movzx edx [ esi + 0x2 ]
sub eax edx
je r-xdata
xor edx edx
test eax eax
setg dl
lea edx [ edx + edx - 0x1 ]
mov eax edx
test eax eax
jne r-xdata
mov esi [ eax ]
cmp esi [ ecx ]
je r-xdata
add eax edi
add ecx edi
cmp edi 0x1f
ja r-xdata
movzx eax [ ecx + 0x3 ]
movzx ecx [ esi + 0x3 ]
xor edx edx
test eax eax
setg dl
lea edx [ edx + edx - 0x1 ]
mov eax edx
test eax eax
jne r-xdata
xor esi esi
movzx esi [ eax ]
movzx ebx [ ecx ]
sub esi ebx
je r-xdata
xor eax eax
jmp [ edi * 4 + jump_table_10027caa ]
mov eax esi
jmp r-xdata
mov esi [ eax + 0x4 ]
cmp esi [ ecx + 0x4 ]
je r-xdata
movzx esi [ eax + 0x1 ]
movzx ebx [ ecx + 0x1 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
test esi esi
jne r-xdata
mov edx [ eax - 0x1c ]
cmp edx [ ecx - 0x1c ]
je r-xdata
mov edx [ eax - 0x18 ]
cmp edx [ ecx - 0x18 ]
je r-xdata
mov edx [ eax - 0x14 ]
cmp edx [ ecx - 0x14 ]
je r-xdata
mov edx [ eax - 0x10 ]
cmp edx [ ecx - 0x10 ]
je r-xdata
mov edx [ eax - 0xc ]
cmp edx [ ecx - 0xc ]
je r-xdata
mov edx [ eax - 0x8 ]
cmp edx [ ecx - 0x8 ]
je r-xdata
mov edx [ eax - 0x4 ]
cmp edx [ ecx - 0x4 ]
je r-xdata
mov edx [ eax - 0x1d ]
cmp edx [ ecx - 0x1d ]
je r-xdata
mov edx [ eax - 0x19 ]
cmp edx [ ecx - 0x19 ]
je r-xdata
mov edx [ eax - 0x15 ]
cmp edx [ ecx - 0x15 ]
je r-xdata
mov edx [ eax - 0x11 ]
cmp edx [ ecx - 0x11 ]
je r-xdata
mov edx [ eax - 0xd ]
cmp edx [ ecx - 0xd ]
je r-xdata
mov edx [ eax - 0x9 ]
cmp edx [ ecx - 0x9 ]
je r-xdata
mov edx [ eax - 0x5 ]
cmp edx [ ecx - 0x5 ]
je r-xdata
movzx ecx [ ecx - 0x1 ]
movzx eax [ eax - 0x1 ]
sub eax ecx
je r-xdata
mov edx [ eax - 0x1e ]
cmp edx [ ecx - 0x1e ]
je r-xdata
mov edx [ eax - 0x1a ]
cmp edx [ ecx - 0x1a ]
je r-xdata
mov edx [ eax - 0x16 ]
cmp edx [ ecx - 0x16 ]
je r-xdata
mov edx [ eax - 0x12 ]
cmp edx [ ecx - 0x12 ]
je r-xdata
mov edx [ eax - 0xe ]
cmp edx [ ecx - 0xe ]
je r-xdata
mov edx [ eax - 0xa ]
cmp edx [ ecx - 0xa ]
je r-xdata
mov edx [ eax - 0x6 ]
cmp edx [ ecx - 0x6 ]
je r-xdata
mov dx [ eax - 0x2 ]
cmp dx [ ecx - 0x2 ]
je r-xdata
mov edx [ eax - 0x1f ]
cmp edx [ ecx - 0x1f ]
je r-xdata
mov edx [ eax - 0x1b ]
cmp edx [ ecx - 0x1b ]
je r-xdata
mov edx [ eax - 0x17 ]
cmp edx [ ecx - 0x17 ]
je r-xdata
mov edx [ eax - 0x13 ]
cmp edx [ ecx - 0x13 ]
je r-xdata
mov edx [ eax - 0xf ]
cmp edx [ ecx - 0xf ]
je r-xdata
mov edx [ eax - 0xb ]
cmp edx [ ecx - 0xb ]
je r-xdata
mov edx [ eax - 0x7 ]
cmp edx [ ecx - 0x7 ]
je r-xdata
movzx esi [ eax - 0x3 ]
movzx edx [ ecx - 0x3 ]
sub esi edx
je r-xdata
pop ebx
jmp r-xdata
xor esi esi
movzx esi [ eax + 0x4 ]
movzx ebx [ ecx + 0x4 ]
sub esi ebx
je r-xdata
movzx esi [ eax + 0x2 ]
movzx ebx [ ecx + 0x2 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
test esi esi
jne r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x1c ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x18 ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x14 ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x10 ]
sub esi edx
je r-xdata
xor esi esi
movzx edx [ ecx - 0xc ]
movzx esi [ eax - 0xc ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x8 ]
sub esi edx
je r-xdata
xor eax eax
movzx esi dl
movzx edx [ ecx - 0x4 ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x1d ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x19 ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x15 ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x11 ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0xd ]
sub esi edx
je r-xdata
xor esi esi
movzx edx [ ecx - 0x9 ]
movzx esi [ eax - 0x9 ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x5 ]
sub esi edx
je r-xdata
xor ecx ecx
test eax eax
setg cl
lea ecx [ ecx + ecx - 0x1 ]
mov eax ecx
jmp r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x1e ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x1a ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x16 ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x12 ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0xe ]
sub esi edx
je r-xdata
xor esi esi
movzx edx [ ecx - 0xa ]
movzx esi [ eax - 0xa ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x6 ]
sub esi edx
je r-xdata
movzx edx [ ecx - 0x2 ]
movzx esi [ eax - 0x2 ]
sub esi edx
je r-xdata
xor esi esi
movzx edx [ ecx - 0x1f ]
movzx esi [ eax - 0x1f ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x1b ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x17 ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x13 ]
sub esi edx
je r-xdata
xor esi esi
movzx edx [ ecx - 0xf ]
movzx esi [ eax - 0xf ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0xb ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x7 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
test edx edx
je r-xdata
mov esi [ eax + 0x8 ]
cmp esi [ ecx + 0x8 ]
je r-xdata
movzx esi [ eax + 0x5 ]
movzx ebx [ ecx + 0x5 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
test esi esi
jne r-xdata
movzx esi [ eax + 0x3 ]
movzx ebx [ ecx + 0x3 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
test esi esi
jne r-xdata
movzx esi [ eax - 0x1b ]
movzx edx [ ecx - 0x1b ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x17 ]
movzx edx [ ecx - 0x17 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x13 ]
movzx edx [ ecx - 0x13 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0xf ]
movzx edx [ ecx - 0xf ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0xb ]
movzx edx [ ecx - 0xb ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x7 ]
movzx edx [ ecx - 0x7 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x3 ]
movzx edx [ ecx - 0x3 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
test edx edx
jne r-xdata
movzx esi [ eax - 0x1c ]
movzx edx [ ecx - 0x1c ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x18 ]
movzx edx [ ecx - 0x18 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x14 ]
movzx edx [ ecx - 0x14 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x10 ]
movzx edx [ ecx - 0x10 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0xc ]
movzx edx [ ecx - 0xc ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x8 ]
movzx edx [ ecx - 0x8 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x4 ]
movzx edx [ ecx - 0x4 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x1d ]
movzx edx [ ecx - 0x1d ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x19 ]
movzx edx [ ecx - 0x19 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x15 ]
movzx edx [ ecx - 0x15 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x11 ]
movzx edx [ ecx - 0x11 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0xd ]
movzx edx [ ecx - 0xd ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx edx [ ecx - 0x9 ]
movzx esi [ eax - 0x9 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x5 ]
movzx edx [ ecx - 0x5 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
test edx edx
jne r-xdata
movzx esi [ eax - 0x1e ]
movzx edx [ ecx - 0x1e ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x1a ]
movzx edx [ ecx - 0x1a ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x16 ]
movzx edx [ ecx - 0x16 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x12 ]
movzx edx [ ecx - 0x12 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0xe ]
movzx edx [ ecx - 0xe ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0xa ]
movzx edx [ ecx - 0xa ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x6 ]
movzx edx [ ecx - 0x6 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
mov eax edx
jmp r-xdata
xor esi esi
movzx esi [ eax + 0x8 ]
movzx ebx [ ecx + 0x8 ]
sub esi ebx
je r-xdata
movzx esi [ eax + 0x6 ]
movzx ebx [ ecx + 0x6 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
test esi esi
jne r-xdata
test esi esi
jne r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
jmp r-xdata
movzx esi [ eax - 0x1a ]
movzx edx [ ecx - 0x1a ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x16 ]
movzx edx [ ecx - 0x16 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x12 ]
movzx edx [ ecx - 0x12 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0xe ]
movzx edx [ ecx - 0xe ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0xa ]
movzx edx [ ecx - 0xa ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x6 ]
movzx edx [ ecx - 0x6 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x2 ]
movzx edx [ ecx - 0x2 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
test edx edx
jne r-xdata
mov eax edx
jmp r-xdata
movzx esi [ eax - 0x1b ]
movzx edx [ ecx - 0x1b ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x17 ]
movzx edx [ ecx - 0x17 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x13 ]
movzx edx [ ecx - 0x13 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0xf ]
movzx edx [ ecx - 0xf ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0xb ]
movzx edx [ ecx - 0xb ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x7 ]
movzx edx [ ecx - 0x7 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x3 ]
movzx edx [ ecx - 0x3 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x1c ]
movzx edx [ ecx - 0x1c ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x18 ]
movzx edx [ ecx - 0x18 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x14 ]
movzx edx [ ecx - 0x14 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x10 ]
movzx edx [ ecx - 0x10 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0xc ]
movzx edx [ ecx - 0xc ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx edx [ ecx - 0x8 ]
movzx esi [ eax - 0x8 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x4 ]
movzx edx [ ecx - 0x4 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
jmp r-xdata
movzx esi [ eax - 0x1d ]
movzx edx [ ecx - 0x1d ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x19 ]
movzx edx [ ecx - 0x19 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x15 ]
movzx edx [ ecx - 0x15 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x11 ]
movzx edx [ ecx - 0x11 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0xd ]
movzx edx [ ecx - 0xd ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x9 ]
movzx edx [ ecx - 0x9 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x5 ]
movzx edx [ ecx - 0x5 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
mov esi [ eax + 0xc ]
cmp esi [ ecx + 0xc ]
je r-xdata
movzx esi [ eax + 0x9 ]
movzx ebx [ ecx + 0x9 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
test esi esi
jne r-xdata
movzx esi [ eax + 0x7 ]
movzx ebx [ ecx + 0x7 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
test esi esi
jne r-xdata
movzx esi [ eax - 0x19 ]
movzx edx [ ecx - 0x19 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x15 ]
movzx edx [ ecx - 0x15 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x11 ]
movzx edx [ ecx - 0x11 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0xd ]
movzx edx [ ecx - 0xd ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x9 ]
movzx edx [ ecx - 0x9 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x5 ]
movzx edx [ ecx - 0x5 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx eax [ eax - 0x1 ]
movzx ecx [ ecx - 0x1 ]
sub eax ecx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
test edx edx
je r-xdata
test eax eax
jne r-xdata
movzx esi [ eax - 0x1a ]
movzx edx [ ecx - 0x1a ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x16 ]
movzx edx [ ecx - 0x16 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x12 ]
movzx edx [ ecx - 0x12 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0xe ]
movzx edx [ ecx - 0xe ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0xa ]
movzx edx [ ecx - 0xa ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x6 ]
movzx edx [ ecx - 0x6 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x2 ]
movzx edx [ ecx - 0x2 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x1b ]
movzx edx [ ecx - 0x1b ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x17 ]
movzx edx [ ecx - 0x17 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x13 ]
movzx edx [ ecx - 0x13 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0xf ]
movzx edx [ ecx - 0xf ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0xb ]
movzx edx [ ecx - 0xb ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx edx [ ecx - 0x7 ]
movzx esi [ eax - 0x7 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x3 ]
movzx edx [ ecx - 0x3 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x1c ]
movzx edx [ ecx - 0x1c ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x18 ]
movzx edx [ ecx - 0x18 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x14 ]
movzx edx [ ecx - 0x14 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x10 ]
movzx edx [ ecx - 0x10 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0xc ]
movzx edx [ ecx - 0xc ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x8 ]
movzx edx [ ecx - 0x8 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x4 ]
movzx edx [ ecx - 0x4 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
xor esi esi
movzx esi [ eax + 0xc ]
movzx ebx [ ecx + 0xc ]
sub esi ebx
je r-xdata
movzx esi [ eax + 0xa ]
movzx ebx [ ecx + 0xa ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
test esi esi
jne r-xdata
test esi esi
jne r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
xor ecx ecx
test eax eax
setg cl
lea ecx [ ecx + ecx - 0x1 ]
mov eax ecx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
mov esi [ eax + 0x10 ]
cmp esi [ ecx + 0x10 ]
je r-xdata
movzx esi [ eax + 0xd ]
movzx ebx [ ecx + 0xd ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
test esi esi
jne r-xdata
movzx esi [ eax + 0xb ]
movzx ebx [ ecx + 0xb ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
test esi esi
jne r-xdata
xor esi esi
movzx ebx [ ecx + 0x10 ]
movzx esi [ eax + 0x10 ]
sub esi ebx
je r-xdata
movzx esi [ eax + 0xe ]
movzx ebx [ ecx + 0xe ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
test esi esi
jne r-xdata
test esi esi
jne r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
jmp r-xdata
mov esi [ eax + 0x14 ]
cmp esi [ ecx + 0x14 ]
je r-xdata
movzx esi [ eax + 0x11 ]
movzx ebx [ ecx + 0x11 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
test esi esi
jne r-xdata
movzx esi [ eax + 0xf ]
movzx ebx [ ecx + 0xf ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
test esi esi
jne r-xdata
xor esi esi
movzx esi [ eax + 0x14 ]
movzx ebx [ ecx + 0x14 ]
sub esi ebx
je r-xdata
movzx esi [ eax + 0x12 ]
movzx ebx [ ecx + 0x12 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
test esi esi
jne r-xdata
test esi esi
jne r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
jmp r-xdata
mov esi [ eax + 0x18 ]
cmp esi [ ecx + 0x18 ]
je r-xdata
movzx esi [ eax + 0x15 ]
movzx ebx [ ecx + 0x15 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
test esi esi
jne r-xdata
movzx esi [ eax + 0x13 ]
movzx ebx [ ecx + 0x13 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
test esi esi
jne r-xdata
xor esi esi
movzx esi [ eax + 0x18 ]
movzx ebx [ ecx + 0x18 ]
sub esi ebx
je r-xdata
movzx esi [ eax + 0x16 ]
movzx ebx [ ecx + 0x16 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
test esi esi
jne r-xdata
test esi esi
jne r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
jmp r-xdata
mov esi [ eax + 0x1c ]
cmp esi [ ecx + 0x1c ]
je r-xdata
movzx esi [ eax + 0x19 ]
movzx ebx [ ecx + 0x19 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
test esi esi
jne r-xdata
movzx esi [ eax + 0x17 ]
movzx ebx [ ecx + 0x17 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
test esi esi
jne r-xdata
xor esi esi
movzx esi [ eax + 0x1c ]
movzx ebx [ ecx + 0x1c ]
sub esi ebx
je r-xdata
movzx esi [ eax + 0x1a ]
movzx ebx [ ecx + 0x1a ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
test esi esi
jne r-xdata
test esi esi
jne r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
jmp r-xdata
add eax edx
add ecx edx
sub edi edx
movzx esi [ eax + 0x1d ]
movzx ebx [ ecx + 0x1d ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
test esi esi
jne r-xdata
movzx esi [ eax + 0x1b ]
movzx ebx [ ecx + 0x1b ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
test esi esi
jne r-xdata
movzx esi [ eax + 0x1e ]
movzx ebx [ ecx + 0x1e ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
test esi esi
jne r-xdata
test esi esi
jne r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
jmp r-xdata
movzx esi [ eax + 0x1f ]
movzx ebx [ ecx + 0x1f ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
test esi esi
jne r-xdata
test esi esi
jne r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
jmp r-xdata
sub_10027d5e
push [ rw-data ]
call sub_1002d8d8
pop ecx
test eax eax
je r-xdata
push 0x19
call sub_10030717
push 0x1
push 0x0
call sub_1002ae9c
add esp 0xc
jmp sub_1002ad85
call eax
sub_10027d88
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
lea eax [ ebp - 0x8 ]
push eax
call [ GetSystemTimeAsFileTime@IAT ]
mov eax [ ebp - 0x8 ]
mov ecx [ ebp - 0x4 ]
push 0x0
add eax 0x2ac18000
push 0x989680
adc ecx 0xfe624e21
push ecx
push eax
call sub_1002ce30
cmp edx 0x7
jl r-xdata
mov ecx [ ebp + 0x8 ]
test ecx ecx
je r-xdata
jg r-xdata
leave
retn
mov [ ecx ] eax
mov [ ecx + 0x4 ] edx
or eax 0xffffffff
mov edx eax
cmp eax 0x93406fff
jbe r-xdata
sub_10027dd9
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push esi
mov esi [ ebp + 0x8 ]
push edi
xor edi edi
mov [ ebp - 0x4 ] edi
cmp esi edi
jne r-xdata
push 0x24
push 0xff
push esi
call sub_10026630
mov eax [ ebp + 0xc ]
add esp 0xc
cmp eax edi
je r-xdata
call sub_1002c068
push 0x16
pop esi
push edi
push edi
push edi
push edi
push edi
mov [ eax ] esi
call sub_100261c9
add esp 0x14
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
cmp eax 0xffffffff
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0xc ] eax
jg r-xdata
pop edi
pop esi
leave
retn
cmp eax 0x7
jl r-xdata
jl r-xdata
push ebx
push edi
push 0x1e13380
push eax
push ecx
call sub_1002d160
mov ecx eax
add ecx 0x46
lea eax [ ecx + 0x12b ]
cdq
mov ebx 0x190
idiv ebx
lea edi [ ecx - 0x1 ]
push 0x64
mov [ ebp - 0x8 ] edi
mov [ ebp + 0x8 ] ecx
mov ebx eax
mov eax edi
cdq
pop edi
idiv edi
push 0xffffffff
push 0xfffffe93
sub ebx eax
mov eax [ ebp - 0x8 ]
cdq
and edx 0x3
add eax edx
sar eax 0x2
lea eax [ ebx + eax - 0x11 ]
cdq
mov edi eax
lea eax [ ecx - 0x46 ]
mov ebx edx
cdq
push edx
push eax
call sub_1002cea0
sub eax edi
sbb edx ebx
push 0x0
mov ebx 0x15180
push ebx
push edx
push eax
call sub_1002cea0
mov edi [ ebp - 0x10 ]
add edi eax
adc [ ebp - 0xc ] edx
cmp [ ebp - 0xc ] 0x0
jg r-xdata
jg r-xdata
call sub_1002c068
push 0x16
pop esi
mov [ eax ] esi
jmp r-xdata
cmp ecx 0xffff5740
jae r-xdata
mov eax [ ebp + 0x8 ]
mov ecx eax
and ecx 0x80000003
jns r-xdata
jl r-xdata
cmp ecx 0x934126cf
ja r-xdata
mov eax esi
jmp r-xdata
jne r-xdata
dec ecx
or ecx 0xfffffffc
inc ecx
mov eax [ ebp - 0x8 ]
add edi 0x1e13380
adc [ ebp - 0xc ] 0x0
mov ecx eax
and ecx 0x80000003
mov [ ebp + 0x8 ] eax
jns r-xdata
test edi edi
jae r-xdata
mov eax [ ebp + 0x8 ]
add eax 0x76c
cdq
mov ecx 0x190
idiv ecx
test edx edx
jne r-xdata
push 0x64
cdq
pop ecx
idiv ecx
test edx edx
jne r-xdata
jne r-xdata
dec ecx
or ecx 0xfffffffc
inc ecx
mov eax [ ebp + 0x8 ]
push 0x0
push ebx
push [ ebp - 0xc ]
mov [ esi + 0x14 ] eax
push edi
call sub_1002d160
push 0xffffffff
mov [ esi + 0x1c ] eax
cdq
push 0xfffeae80
push edx
push eax
call sub_1002cea0
add edi eax
adc [ ebp - 0xc ] edx
cmp [ ebp - 0x4 ] 0x0
mov edx rw-data
jne r-xdata
mov [ ebp - 0x4 ] 0x1
add eax 0x76c
cdq
mov ecx 0x190
idiv ecx
test edx edx
jne r-xdata
push 0x64
cdq
pop ecx
idiv ecx
test edx edx
jne r-xdata
mov eax [ esi + 0x1c ]
xor ecx ecx
inc ecx
cmp [ edx + 0x4 ] eax
jge r-xdata
mov edx rw-data
add edi ebx
adc [ ebp - 0xc ] 0x0
jmp r-xdata
mov eax [ ebp + 0x8 ]
dec ecx
mov [ esi + 0x10 ] ecx
sub eax [ edx + ecx * 4 ]
push 0x0
mov [ esi + 0xc ] eax
mov eax [ ebp + 0xc ]
push ebx
push [ eax + 0x4 ]
push [ eax ]
call sub_1002d160
push 0x7
add eax 0x4
pop ecx
cdq
idiv ecx
xor ebx ebx
push ebx
push 0xe10
push [ ebp - 0xc ]
push edi
mov [ esi + 0x18 ] edx
call sub_1002d160
push 0xffffffff
mov [ esi + 0x8 ] eax
cdq
push 0xfffff1f0
push edx
push eax
call sub_1002cea0
push ebx
add edi eax
adc [ ebp - 0xc ] edx
push 0x3c
push [ ebp - 0xc ]
push edi
call sub_1002d160
mov [ esi + 0x4 ] eax
imul eax eax 0x3c
sub edi eax
mov [ esi + 0x20 ] ebx
mov [ esi ] edi
xor eax eax
pop ebx
mov ebx eax
inc ecx
cmp [ edx + ecx * 4 ] ebx
jl r-xdata
mov ebx 0x15180
sub_1002801c
mov edi edi
push ebp
mov ebp esp
push esi
call sub_10030a89
mov esi eax
test esi esi
je r-xdata
pop esi
pop ebp
retn
push [ ebp + 0x8 ]
push esi
call sub_10027dd9
neg eax
sbb eax eax
pop ecx
not eax
pop ecx
and eax esi
sub_10028043
push 0xc
push r--data
call sub_1002e7e4
xor edi edi
mov [ ebp - 0x1c ] edi
xor eax eax
mov esi [ ebp + 0xc ]
cmp esi edi
setne al
cmp eax edi
jne r-xdata
push esi
call sub_100290d0
pop ecx
mov [ ebp - 0x4 ] edi
test [ esi + 0xc ] 0x40
jne r-xdata
call sub_1002c068
mov [ eax ] 0x16
push edi
push edi
push edi
push edi
push edi
call sub_100261c9
add esp 0x14
or eax 0xffffffff
jmp r-xdata
cmp [ ebp - 0x1c ] edi
jne r-xdata
push esi
call sub_10030ac0
pop ecx
cmp eax 0xffffffff
je r-xdata
call sub_1002e829
retn
mov [ ebp - 0x4 ] 0xfffffffe
call sub_10028147
mov eax [ ebp - 0x1c ]
dec [ esi + 0x4 ]
js r-xdata
mov ecx rw-data
cmp eax 0xfffffffe
je r-xdata
push esi
push [ ebp + 0x8 ]
call sub_1002f6d5
pop ecx
pop ecx
mov ecx [ esi ]
mov al [ ebp + 0x8 ]
mov [ ecx ] al
movzx eax al
inc [ esi ]
jmp r-xdata
call sub_1002c068
mov [ eax ] 0x16
push edi
push edi
push edi
push edi
push edi
call sub_100261c9
add esp 0x14
or [ ebp - 0x1c ] 0xffffffff
cmp eax 0xffffffff
je r-xdata
mov edx eax
sar edx 0x5
mov ecx eax
and ecx 0x1f
shl ecx 0x6
add ecx [ edx * 4 + rw-data ]
jmp r-xdata
mov [ ebp - 0x1c ] eax
mov eax rw-data
cmp eax 0xfffffffe
je r-xdata
test [ ecx + 0x24 ] 0x7f
jne r-xdata
mov ecx eax
sar ecx 0x5
and eax 0x1f
shl eax 0x6
add eax [ ecx * 4 + rw-data ]
jmp r-xdata
test [ eax + 0x24 ] 0x80
je r-xdata
sub_1002814f
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
push ebx
push esi
push edi
xor edi edi
cmp [ ebp + 0xc ] edi
je r-xdata
xor eax eax
cmp [ ebp + 0x10 ] edi
je r-xdata
mov esi [ ebp + 0x14 ]
cmp esi edi
jne r-xdata
mov ecx [ ebp + 0x8 ]
cmp ecx edi
je r-xdata
call sub_1002c068
push edi
push edi
push edi
push edi
push edi
mov [ eax ] 0x16
call sub_100261c9
add esp 0x14
or eax 0xffffffff
xor edx edx
div [ ebp + 0xc ]
cmp [ ebp + 0x10 ] eax
ja r-xdata
mov edi [ ebp + 0xc ]
imul edi [ ebp + 0x10 ]
test [ esi + 0xc ] 0x10c
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0xc ] edi
mov ebx edi
je r-xdata
mov [ ebp - 0x8 ] 0x1000
mov eax [ esi + 0x18 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp + 0x10 ]
jmp r-xdata
mov ecx [ esi + 0xc ]
and ecx 0x108
je r-xdata
test edi edi
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
cmp ebx [ ebp - 0x8 ]
jb r-xdata
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
movsx eax [ eax ]
push esi
push eax
call sub_1002f6d5
pop ecx
pop ecx
cmp eax 0xffffffff
je r-xdata
test ecx ecx
je r-xdata
jl r-xdata
mov eax edi
inc [ ebp - 0x4 ]
mov eax [ esi + 0x18 ]
dec ebx
mov [ ebp - 0x8 ] eax
test eax eax
jg r-xdata
cmp [ ebp - 0x8 ] 0x0
mov edi ebx
je r-xdata
push esi
call sub_1002885a
pop ecx
test eax eax
jne r-xdata
or [ esi + 0xc ] 0x20
mov edi ebx
cmp ebx eax
jb r-xdata
test ebx ebx
jne r-xdata
mov [ ebp - 0x8 ] 0x1
push edi
push [ ebp - 0x4 ]
push esi
call sub_10030ac0
pop ecx
push eax
call sub_10031225
add esp 0xc
cmp eax 0xffffffff
je r-xdata
xor edx edx
mov eax ebx
div [ ebp - 0x8 ]
sub edi edx
push edi
push [ ebp - 0x4 ]
push [ esi ]
call sub_10028b40
sub [ esi + 0x4 ] edi
add [ esi ] edi
add esp 0xc
sub ebx edi
add [ ebp - 0x4 ] edi
jmp r-xdata
mov edi eax
or [ esi + 0xc ] 0x20
mov eax [ ebp - 0xc ]
jmp r-xdata
mov ecx edi
cmp eax edi
ja r-xdata
mov edi [ ebp - 0xc ]
jmp r-xdata
sub eax ebx
xor edx edx
div [ ebp + 0xc ]
jmp r-xdata
add [ ebp - 0x4 ] ecx
sub ebx ecx
cmp eax edi
jb r-xdata
mov ecx eax
sub_100282b1
push 0xc
push r--data
call sub_1002e7e4
xor esi esi
cmp [ ebp + 0xc ] esi
je r-xdata
xor eax eax
cmp [ ebp + 0x10 ] esi
je r-xdata
xor eax eax
cmp [ ebp + 0x14 ] esi
setne al
cmp eax esi
jne r-xdata
push [ ebp + 0x14 ]
call sub_100290d0
pop ecx
mov [ ebp - 0x4 ] esi
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_1002814f
add esp 0x10
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_10028329
mov eax [ ebp - 0x1c ]
jmp r-xdata
call sub_1002c068
mov [ eax ] 0x16
push esi
push esi
push esi
push esi
push esi
call sub_100261c9
add esp 0x14
call sub_1002e829
retn
sub_10028333
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0xc ]
test [ esi + 0xc ] 0x40
push edi
jne r-xdata
push ebx
mov ebx [ ebp + 0x8 ]
cmp ebx 0xffffffff
je r-xdata
push esi
call sub_10030ac0
pop ecx
mov edx rw-data
cmp eax 0xffffffff
je r-xdata
or eax 0xffffffff
mov eax [ esi + 0xc ]
test al 0x1
jne r-xdata
mov ecx edx
cmp eax 0xfffffffe
je r-xdata
xor edi edi
cmp [ esi + 0x8 ] edi
jne r-xdata
test al al
jns r-xdata
call sub_1002c068
xor edi edi
push edi
push edi
push edi
push edi
push edi
mov [ eax ] 0x16
call sub_100261c9
add esp 0x14
or eax 0xffffffff
jmp r-xdata
cmp eax 0xffffffff
je r-xdata
mov ecx eax
and ecx 0x1f
mov edi eax
sar edi 0x5
shl ecx 0x6
add ecx [ edi * 4 + rw-data ]
jmp r-xdata
mov eax [ esi ]
cmp eax [ esi + 0x8 ]
jne r-xdata
push esi
call sub_10031301
pop ecx
test al 0x2
jne r-xdata
pop edi
pop esi
pop ebp
retn
mov eax edx
cmp eax 0xfffffffe
je r-xdata
test [ ecx + 0x24 ] 0x7f
jne r-xdata
dec [ esi ]
test [ esi + 0xc ] 0x40
mov eax [ esi ]
je r-xdata
cmp [ esi + 0x4 ] edi
jne r-xdata
mov ecx eax
and eax 0x1f
sar ecx 0x5
shl eax 0x6
add eax [ ecx * 4 + rw-data ]
jmp r-xdata
mov [ eax ] bl
cmp [ eax ] bl
je r-xdata
inc eax
mov [ esi ] eax
test [ eax + 0x24 ] 0x80
je r-xdata
pop ebx
mov eax [ esi + 0xc ]
inc [ esi + 0x4 ]
and eax 0xffffffef
or eax 0x1
mov [ esi + 0xc ] eax
mov eax ebx
and eax 0xff
jmp r-xdata
inc eax
mov [ esi ] eax
sub_10028424
push 0xc
push r--data
call sub_1002e7e4
xor eax eax
xor esi esi
cmp [ ebp + 0xc ] esi
setne al
cmp eax esi
jne r-xdata
push [ ebp + 0xc ]
call sub_100290d0
pop ecx
mov [ ebp - 0x4 ] esi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_10028333
pop ecx
pop ecx
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_1002848c
mov eax [ ebp - 0x1c ]
call sub_1002c068
mov [ eax ] 0x16
push esi
push esi
push esi
push esi
push esi
call sub_100261c9
add esp 0x14
or eax 0xffffffff
jmp r-xdata
call sub_1002e829
retn
sub_10028496
push 0xc
push r--data
call sub_1002e7e4
xor edi edi
mov [ ebp - 0x1c ] edi
xor eax eax
mov esi [ ebp + 0x8 ]
cmp esi edi
setne al
cmp eax edi
jne r-xdata
push esi
call sub_100290d0
pop ecx
mov [ ebp - 0x4 ] edi
test [ esi + 0xc ] 0x40
jne r-xdata
call sub_1002c068
mov [ eax ] 0x16
push edi
push edi
push edi
push edi
push edi
call sub_100261c9
add esp 0x14
or eax 0xffffffff
jmp r-xdata
cmp [ ebp - 0x1c ] edi
jne r-xdata
push esi
call sub_10030ac0
pop ecx
cmp eax 0xffffffff
je r-xdata
call sub_1002e829
retn
mov [ ebp - 0x4 ] 0xfffffffe
call sub_10028592
mov eax [ ebp - 0x1c ]
dec [ esi + 0x4 ]
js r-xdata
mov ecx rw-data
cmp eax 0xfffffffe
je r-xdata
push esi
call sub_1003134a
pop ecx
mov ecx [ esi ]
movzx eax [ ecx ]
inc ecx
mov [ esi ] ecx
jmp r-xdata
call sub_1002c068
mov [ eax ] 0x16
push edi
push edi
push edi
push edi
push edi
call sub_100261c9
add esp 0x14
or [ ebp - 0x1c ] 0xffffffff
cmp eax 0xffffffff
je r-xdata
mov edx eax
sar edx 0x5
mov ecx eax
and ecx 0x1f
shl ecx 0x6
add ecx [ edx * 4 + rw-data ]
jmp r-xdata
mov [ ebp - 0x1c ] eax
mov eax rw-data
cmp eax 0xfffffffe
je r-xdata
test [ ecx + 0x24 ] 0x7f
jne r-xdata
mov ecx eax
sar ecx 0x5
and eax 0x1f
shl eax 0x6
add eax [ ecx * 4 + rw-data ]
jmp r-xdata
test [ eax + 0x24 ] 0x80
je r-xdata
sub_1002859a
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0xc ]
test al 0x83
jne r-xdata
and eax 0xffffffef
cmp [ ebp + 0x10 ] 0x1
mov [ esi + 0xc ] eax
jne r-xdata
call sub_1002c068
mov [ eax ] 0x16
or eax 0xffffffff
jmp r-xdata
push esi
call sub_1002885a
mov eax [ esi + 0xc ]
pop ecx
test al al
jns r-xdata
push esi
call sub_100315c6
add [ ebp + 0xc ] eax
and [ ebp + 0x10 ] 0x0
pop ecx
pop esi
pop ebp
retn
test al 0x1
je r-xdata
and eax 0xfffffffc
mov [ esi + 0xc ] eax
jmp r-xdata
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
call sub_10030ac0
pop ecx
push eax
call sub_100314ea
xor ecx ecx
add esp 0xc
cmp eax 0xffffffff
setne cl
dec ecx
mov eax ecx
test al 0x8
je r-xdata
test eax 0x400
jne r-xdata
mov [ esi + 0x18 ] 0x200
sub_10028624
push 0xc
push r--data
call sub_1002e7e4
xor eax eax
xor esi esi
cmp [ ebp + 0x8 ] esi
setne al
cmp eax esi
jne r-xdata
mov edi [ ebp + 0x10 ]
cmp edi esi
je r-xdata
call sub_1002c068
mov [ eax ] 0x16
push esi
push esi
push esi
push esi
push esi
call sub_100261c9
add esp 0x14
or eax 0xffffffff
jmp r-xdata
push [ ebp + 0x8 ]
call sub_100290d0
pop ecx
mov [ ebp - 0x4 ] esi
push edi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_1002859a
add esp 0xc
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_1002869f
mov eax [ ebp - 0x1c ]
cmp edi 0x1
je r-xdata
call sub_1002e829
retn
cmp edi 0x2
jne r-xdata
sub_100286a9
mov edi edi
push ebp
mov ebp esp
push edi
xor edi edi
cmp [ ebp + 0x8 ] edi
jne r-xdata
push esi
mov esi [ ebp + 0xc ]
cmp esi edi
jne r-xdata
call sub_1002c068
push edi
push edi
push edi
push edi
push edi
mov [ eax ] 0x16
call sub_100261c9
add esp 0x14
or eax 0xffffffff
jmp r-xdata
push [ ebp + 0x8 ]
call sub_10031aaf
pop ecx
mov ecx eax
mov [ esi ] eax
and ecx edx
or eax 0xffffffff
mov [ esi + 0x4 ] edx
cmp ecx eax
je r-xdata
call sub_1002c068
push edi
push edi
push edi
push edi
push edi
mov [ eax ] 0x16
call sub_100261c9
add esp 0x14
or eax 0xffffffff
jmp r-xdata
pop edi
pop ebp
retn
pop esi
xor eax eax
sub_10028717
mov edi edi
push ebp
mov ebp esp
push esi
xor esi esi
cmp [ ebp + 0x8 ] esi
jne r-xdata
mov eax [ ebp + 0xc ]
cmp eax esi
je r-xdata
call sub_1002c068
push esi
push esi
push esi
push esi
push esi
mov [ eax ] 0x16
call sub_100261c9
add esp 0x14
or eax 0xffffffff
jmp r-xdata
push esi
push [ eax + 0x4 ]
push [ eax ]
push [ ebp + 0x8 ]
call sub_10031b95
add esp 0x10
pop esi
pop ebp
retn
sub_1002875c
push 0xc
push r--data
call sub_1002e7e4
xor ebx ebx
mov [ ebp - 0x1c ] ebx
xor eax eax
mov esi [ ebp + 0x8 ]
cmp esi ebx
setne al
cmp eax ebx
jne r-xdata
mov eax [ ebp + 0x10 ]
cmp eax 0x4
je r-xdata
call sub_1002c068
mov [ eax ] 0x16
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_100261c9
add esp 0x14
or eax 0xffffffff
jmp r-xdata
cmp eax ebx
je r-xdata
cmp eax ebx
je r-xdata
call sub_1002e829
retn
mov edi [ ebp + 0x14 ]
lea eax [ edi - 0x2 ]
cmp eax 0x7ffffffd
jbe r-xdata
cmp eax 0x40
jne r-xdata
cmp eax 0x40
jne r-xdata
and edi 0xfffffffe
mov [ ebp + 0x8 ] esi
push esi
call sub_100290d0
pop ecx
mov [ ebp - 0x4 ] ebx
push esi
call sub_1002885a
push esi
call sub_10031be4
pop ecx
pop ecx
and [ esi + 0xc ] 0xffffc2f3
mov ecx [ esi + 0xc ]
test [ ebp + 0x10 ] 0x4
je r-xdata
jmp r-xdata
mov edi [ ebp + 0x14 ]
mov eax [ ebp + 0xc ]
cmp eax ebx
jne r-xdata
or ecx 0x4
lea eax [ esi + 0x14 ]
push 0x2
pop edi
jmp r-xdata
or ecx 0x500
push edi
call sub_1002c93d
pop ecx
cmp eax ebx
jne r-xdata
mov [ esi + 0xc ] ecx
or [ esi + 0xc ] 0x408
jmp r-xdata
inc [ rw-data ]
or [ ebp - 0x1c ] 0xffffffff
jmp r-xdata
mov [ esi + 0x18 ] edi
mov [ esi + 0x8 ] eax
mov [ esi ] eax
mov [ esi + 0x4 ] ebx
mov [ ebp - 0x4 ] 0xfffffffe
call sub_10028850
mov eax [ ebp - 0x1c ]
sub_1002885a
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0xc ]
mov ecx eax
and cl 0x3
xor ebx ebx
cmp cl 0x2
jne r-xdata
mov eax [ esi + 0x8 ]
and [ esi + 0x4 ] 0x0
mov [ esi ] eax
pop esi
mov eax ebx
pop ebx
pop ebp
retn
test eax 0x108
je r-xdata
mov eax [ esi + 0x8 ]
push edi
mov edi [ esi ]
sub edi eax
test edi edi
jle r-xdata
pop edi
push edi
push eax
push esi
call sub_10030ac0
pop ecx
push eax
call sub_10031225
add esp 0xc
cmp eax edi
jne r-xdata
or [ esi + 0xc ] 0x20
or ebx 0xffffffff
mov eax [ esi + 0xc ]
test al al
jns r-xdata
and eax 0xfffffffd
mov [ esi + 0xc ] eax
jmp r-xdata
sub_100288c2
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
jne r-xdata
push esi
call sub_1002885a
pop ecx
test eax eax
je r-xdata
push esi
call sub_1002890a
pop ecx
jmp r-xdata
test [ esi + 0xc ] 0x4000
je r-xdata
or eax 0xffffffff
jmp r-xdata
pop esi
pop ebp
retn
xor eax eax
push esi
call sub_10030ac0
push eax
call sub_10031c15
pop ecx
neg eax
pop ecx
sbb eax eax
jmp r-xdata
sub_1002890a
push 0x14
push r--data
call sub_1002e7e4
xor edi edi
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x24 ] edi
push 0x1
call sub_1002ebde
pop ecx
mov [ ebp - 0x4 ] edi
xor esi esi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_100289db
cmp [ ebp + 0x8 ] 0x1
mov eax [ ebp - 0x1c ]
je r-xdata
mov eax [ rw-data ]
lea eax [ eax + esi * 4 ]
cmp [ eax ] edi
je r-xdata
call sub_1002e829
retn
mov eax [ ebp - 0x24 ]
inc esi
jmp r-xdata
mov eax [ eax ]
test [ eax + 0xc ] 0x83
je r-xdata
mov [ ebp - 0x20 ] esi
cmp esi [ rw-data ]
jge r-xdata
push eax
push esi
call sub_10029111
pop ecx
pop ecx
xor edx edx
inc edx
mov [ ebp - 0x4 ] edx
mov eax [ rw-data ]
mov eax [ eax + esi * 4 ]
mov ecx [ eax + 0xc ]
test cl 0x83
je r-xdata
mov [ ebp - 0x4 ] edi
call sub_100289ac
cmp [ ebp + 0x8 ] edx
jne r-xdata
cmp [ ebp + 0x8 ] edi
jne r-xdata
push eax
call sub_100288c2
pop ecx
cmp eax 0xffffffff
je r-xdata
test cl 0x2
je r-xdata
inc [ ebp - 0x1c ]
jmp r-xdata
push eax
call sub_100288c2
pop ecx
cmp eax 0xffffffff
jne r-xdata
or [ ebp - 0x24 ] eax
sub_100289e4
push 0xc
push r--data
call sub_1002e7e4
xor esi esi
cmp [ ebp + 0x8 ] esi
jne r-xdata
push [ ebp + 0x8 ]
call sub_100290d0
pop ecx
mov [ ebp - 0x4 ] esi
push [ ebp + 0x8 ]
call sub_100288c2
pop ecx
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_10028a2d
mov eax [ ebp - 0x1c ]
push esi
call sub_1002890a
pop ecx
jmp r-xdata
call sub_1002e829
retn
sub_10028a40
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
xor edi edi
or ebx 0xffffffff
cmp esi edi
jne r-xdata
test [ esi + 0xc ] 0x83
je r-xdata
call sub_1002c068
push edi
push edi
push edi
push edi
push edi
mov [ eax ] 0x16
call sub_100261c9
add esp 0x14
or eax ebx
jmp r-xdata
mov [ esi + 0xc ] edi
mov eax ebx
push esi
call sub_1002885a
push esi
mov ebx eax
call sub_10031be4
push esi
call sub_10030ac0
push eax
call sub_10031d92
add esp 0x10
test eax eax
jge r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
mov eax [ esi + 0x1c ]
cmp eax edi
je r-xdata
or ebx 0xffffffff
jmp r-xdata
push eax
call sub_1002644d
pop ecx
mov [ esi + 0x1c ] edi
sub_10028ab7
push 0xc
push r--data
call sub_1002e7e4
or [ ebp - 0x1c ] 0xffffffff
xor eax eax
mov esi [ ebp + 0x8 ]
xor edi edi
cmp esi edi
setne al
cmp eax edi
jne r-xdata
test [ esi + 0xc ] 0x40
je r-xdata
call sub_1002c068
mov [ eax ] 0x16
push edi
push edi
push edi
push edi
push edi
call sub_100261c9
add esp 0x14
or eax 0xffffffff
jmp r-xdata
push esi
call sub_100290d0
pop ecx
mov [ ebp - 0x4 ] edi
push esi
call sub_10028a40
pop ecx
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_10028b2b
jmp r-xdata
mov [ esi + 0xc ] edi
call sub_1002e829
retn
mov eax [ ebp - 0x1c ]
sub_10028b40
push ebp
mov ebp esp
push edi
push esi
mov esi [ ebp + 0xc ]
mov ecx [ ebp + 0x10 ]
mov edi [ ebp + 0x8 ]
mov eax ecx
mov edx ecx
add eax esi
cmp edi esi
jbe r-xdata
cmp ecx 0x100
jb r-xdata
cmp edi eax
jb r-xdata
test edi 0x3
jne r-xdata
cmp [ rw-data ] 0x0
je r-xdata
lea esi [ ecx + esi - 0x4 ]
lea edi [ ecx + edi - 0x4 ]
test edi 0x3
jne r-xdata
mov eax edi
mov edx 0x3
sub ecx 0x4
jb r-xdata
shr ecx 0x2
and edx 0x3
cmp ecx 0x8
jb r-xdata
push edi
push esi
and edi 0xf
and esi 0xf
cmp edi esi
pop esi
pop edi
jne r-xdata
mov eax edi
mov edx 0x3
cmp ecx 0x4
jb r-xdata
shr ecx 0x2
and edx 0x3
cmp ecx 0x8
jb r-xdata
jmp [ ecx * 4 + r-xdata ]
and eax 0x3
add ecx eax
jmp [ eax * 4 + jump_table_10028bc8 ]
jmp [ ecx * 4 + jump_table_10028c48 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_10028cb4 ]
pop esi
pop edi
pop ebp
jmp sub_10031ee6
jmp [ ecx * 4 + jump_table_10028e50 ]
and eax 0x3
sub ecx eax
jmp [ eax * 4 + jump_table_10028d54 ]
neg ecx
jmp [ ecx * 4 + r-xdata ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_10028e50 ]
and edx ecx
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov al [ esi + 0x2 ]
shr ecx 0x2
mov [ edi + 0x2 ] al
add esi 0x3
add edi 0x3
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
shr ecx 0x2
mov [ edi + 0x1 ] al
add esi 0x2
add edi 0x2
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
add esi 0x1
shr ecx 0x2
add edi 0x1
cmp ecx 0x8
jb r-xdata
mov eax [ esi + ecx * 4 - 0x1c ]
mov [ edi + ecx * 4 - 0x1c ] eax
mov eax [ esi + ecx * 4 - 0x18 ]
mov [ edi + ecx * 4 - 0x18 ] eax
mov eax [ esi + ecx * 4 - 0x14 ]
mov [ edi + ecx * 4 - 0x14 ] eax
mov eax [ esi + ecx * 4 - 0x10 ]
mov [ edi + ecx * 4 - 0x10 ] eax
mov eax [ esi + ecx * 4 - 0xc ]
mov [ edi + ecx * 4 - 0xc ] eax
mov eax [ esi + ecx * 4 - 0x8 ]
mov [ edi + ecx * 4 - 0x8 ] eax
mov eax [ esi + ecx * 4 - 0x4 ]
mov [ edi + ecx * 4 - 0x4 ] eax
lea eax [ ecx * 4 ]
add esi eax
add edi eax
jmp [ edx * 4 + jump_table_10028cb4 ]
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
sub esi 0x1
shr ecx 0x2
sub edi 0x1
cmp ecx 0x8
jb r-xdata
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
shr ecx 0x2
mov [ edi + 0x2 ] al
sub esi 0x2
sub edi 0x2
cmp ecx 0x8
jb r-xdata
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov al [ esi + 0x1 ]
shr ecx 0x2
mov [ edi + 0x1 ] al
sub esi 0x3
sub edi 0x3
cmp ecx 0x8
jb r-xdata
mov eax [ esi + ecx * 4 + 0x1c ]
mov [ edi + ecx * 4 + 0x1c ] eax
mov eax [ esi + ecx * 4 + 0x18 ]
mov [ edi + ecx * 4 + 0x18 ] eax
mov eax [ esi + ecx * 4 + 0x14 ]
mov [ edi + ecx * 4 + 0x14 ] eax
mov eax [ esi + ecx * 4 + 0x10 ]
mov [ edi + ecx * 4 + 0x10 ] eax
mov eax [ esi + ecx * 4 + 0xc ]
mov [ edi + ecx * 4 + 0xc ] eax
mov eax [ esi + ecx * 4 + 0x8 ]
mov [ edi + ecx * 4 + 0x8 ] eax
mov eax [ esi + ecx * 4 + 0x4 ]
mov [ edi + ecx * 4 + 0x4 ] eax
lea eax [ ecx * 4 ]
add esi eax
add edi eax
jmp [ edx * 4 + jump_table_10028e50 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_10028cb4 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_10028cb4 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_10028cb4 ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_10028e50 ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_10028e50 ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_10028e50 ]
sub_10028ea5
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push esi
lea eax [ ebp - 0x8 ]
push eax
call [ GetSystemTimeAsFileTime@IAT ]
push 0x1
push 0x0
push 0x0
push [ ebp - 0x4 ]
call sub_1002cea0
mov ecx [ ebp - 0x8 ]
xor esi esi
add eax ecx
adc edx esi
mov [ rw-data ] eax
mov [ rw-data ] edx
xor eax eax
pop esi
leave
retn
sub_10028ede
push 0xc
push r--data
call sub_1002e7e4
and [ ebp - 0x1c ] 0x0
mov esi [ ebp + 0x8 ]
cmp esi [ rw-data ]
ja r-xdata
mov eax [ ebp - 0x1c ]
call sub_1002e829
retn
push 0x4
call sub_1002ebde
pop ecx
and [ ebp - 0x4 ] 0x0
push esi
call sub_1002f3f0
pop ecx
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_10028f24
sub_10028f2d
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
cmp esi 0xffffffe0
ja r-xdata
push esi
call sub_1002d3e4
pop ecx
call sub_1002c068
mov [ eax ] 0xc
xor eax eax
push ebx
push edi
mov edi [ HeapAlloc@IAT ]
mov eax [ rw-data ]
cmp eax 0x1
jne r-xdata
call sub_100308c2
push 0x1e
call sub_10030717
push 0xff
call sub_1002975c
cmp eax 0x3
jne r-xdata
test esi esi
je r-xdata
test esi esi
jne r-xdata
push esi
call sub_10028ede
pop ecx
test eax eax
jne r-xdata
xor eax eax
inc eax
mov eax esi
jmp r-xdata
add esi 0xf
and esi 0xfffffff0
push esi
inc esi
mov ebx eax
test ebx ebx
jne r-xdata
push 0x0
push [ rw-data ]
call edi
push eax
jmp r-xdata
pop edi
mov eax ebx
pop ebx
jmp r-xdata
push 0xc
pop esi
cmp [ rw-data ] eax
je r-xdata
pop esi
pop ebp
retn
call sub_1002c068
mov [ eax ] esi
push [ ebp + 0x8 ]
call sub_1002d3e4
pop ecx
test eax eax
je r-xdata
call sub_1002c068
mov [ eax ] esi
mov esi [ ebp + 0x8 ]
jmp r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
sub_10028fff
mov eax [ rw-data ]
push esi
push 0x14
pop esi
test eax eax
jne r-xdata
cmp eax esi
jge r-xdata
mov eax 0x200
jmp r-xdata
push 0x4
push eax
call sub_1002c982
pop ecx
pop ecx
mov [ rw-data ] eax
test eax eax
jne r-xdata
mov eax esi
mov [ rw-data ] eax
xor edx edx
mov ecx rw-data
jmp r-xdata
push 0x4
push esi
mov [ rw-data ] esi
call sub_1002c982
pop ecx
pop ecx
mov [ rw-data ] eax
test eax eax
jne r-xdata
mov [ edx + eax ] ecx
add ecx 0x20
add edx 0x4
cmp ecx rw-data
jl r-xdata
push 0x1a
pop eax
pop esi
retn
mov eax [ rw-data ]
push 0xfffffffe
pop esi
xor edx edx
mov ecx rw-data
push edi
mov [ ecx ] esi
cmp eax esi
je r-xdata
mov eax edx
sar eax 0x5
mov eax [ eax * 4 + rw-data ]
mov edi edx
and edi 0x1f
shl edi 0x6
mov eax [ edi + eax ]
cmp eax 0xffffffff
je r-xdata
pop edi
xor eax eax
pop esi
retn
test eax eax
jne r-xdata
add ecx 0x20
inc edx
cmp ecx rw-data
jl r-xdata
sub_100290d0
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
mov eax rw-data
cmp esi eax
jb r-xdata
add esi 0x20
push esi
call [ EnterCriticalSection@IAT ]
cmp esi rw-data
ja r-xdata
mov ecx esi
sub ecx eax
sar ecx 0x5
add ecx 0x10
push ecx
call sub_1002ebde
or [ esi + 0xc ] 0x8000
pop ecx
jmp r-xdata
pop esi
pop ebp
retn
sub_10029111
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp eax 0x14
jge r-xdata
mov eax [ ebp + 0xc ]
add eax 0x20
push eax
call [ EnterCriticalSection@IAT ]
pop ebp
retn
add eax 0x10
push eax
call sub_1002ebde
mov eax [ ebp + 0xc ]
or [ eax + 0xc ] 0x8000
pop ecx
pop ebp
retn
sub_10029143
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx rw-data
cmp eax ecx
jb r-xdata
add eax 0x20
push eax
call [ LeaveCriticalSection@IAT ]
pop ebp
retn
cmp eax rw-data
ja r-xdata
and [ eax + 0xc ] 0xffff7fff
sub eax ecx
sar eax 0x5
add eax 0x10
push eax
call sub_1002eb04
pop ecx
pop ebp
retn
sub_1002917f
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
cmp ecx 0x14
mov eax [ ebp + 0xc ]
jge r-xdata
add eax 0x20
push eax
call [ LeaveCriticalSection@IAT ]
pop ebp
retn
and [ eax + 0xc ] 0xffff7fff
add ecx 0x10
push ecx
call sub_1002eb04
pop ecx
pop ebp
retn
sub_100291ae
push 0xc
push r--data
call sub_1002e7e4
xor esi esi
mov [ ebp - 0x1c ] esi
xor eax eax
mov ebx [ ebp + 0x8 ]
cmp ebx esi
setne al
cmp eax esi
jne r-xdata
xor eax eax
cmp [ ebp + 0xc ] esi
setne al
cmp eax esi
je r-xdata
call sub_1002c068
mov [ eax ] 0x16
push esi
push esi
push esi
push esi
push esi
call sub_100261c9
add esp 0x14
or eax 0xffffffff
jmp r-xdata
mov [ ebp + 0x8 ] ebx
push ebx
call sub_100290d0
pop ecx
mov [ ebp - 0x4 ] esi
test [ ebx + 0xc ] 0x40
jne r-xdata
call sub_1002e829
retn
cmp [ ebp - 0x1c ] esi
jne r-xdata
push ebx
call sub_10030ac0
pop ecx
cmp eax 0xffffffff
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_100292c0
mov eax [ ebp - 0x1c ]
push ebx
call sub_100329b2
mov edi eax
lea eax [ ebp + 0x10 ]
push eax
push esi
push [ ebp + 0xc ]
push ebx
call sub_1002f886
mov [ ebp - 0x1c ] eax
push ebx
push edi
call sub_10032a4e
add esp 0x1c
mov ecx rw-data
cmp eax 0xfffffffe
je r-xdata
call sub_1002c068
mov [ eax ] 0x16
push esi
push esi
push esi
push esi
push esi
call sub_100261c9
add esp 0x14
or [ ebp - 0x1c ] 0xffffffff
cmp eax 0xffffffff
je r-xdata
mov edx eax
sar edx 0x5
mov ecx eax
and ecx 0x1f
shl ecx 0x6
add ecx [ edx * 4 + rw-data ]
jmp r-xdata
mov eax rw-data
cmp eax 0xfffffffe
je r-xdata
test [ ecx + 0x24 ] 0x7f
jne r-xdata
mov ecx eax
sar ecx 0x5
and eax 0x1f
shl eax 0x6
add eax [ ecx * 4 + rw-data ]
jmp r-xdata
test [ eax + 0x24 ] 0x80
je r-xdata
sub_100292d0
mov edx [ esp + 0x4 ]
mov ecx [ esp + 0x8 ]
test edx 0x3
jne r-xdata
test edx 0x1
je r-xdata
mov eax [ edx ]
cmp al [ ecx ]
jne r-xdata
mov ax [ edx ]
add edx 0x2
cmp al [ ecx ]
jne r-xdata
mov al [ edx ]
add edx 0x1
cmp al [ ecx ]
jne r-xdata
sbb eax eax
shl eax 0x1
add eax 0x1
retn
or al al
je r-xdata
or al al
je r-xdata
add ecx 0x1
or al al
je r-xdata
xor eax eax
retn
cmp ah [ ecx + 0x1 ]
jne r-xdata
cmp ah [ ecx + 0x1 ]
jne r-xdata
test edx 0x2
je r-xdata
or ah ah
je r-xdata
or ah ah
je r-xdata
shr eax 0x10
cmp al [ ecx + 0x2 ]
jne r-xdata
add ecx 0x2
jmp r-xdata
or al al
je r-xdata
cmp ah [ ecx + 0x3 ]
jne r-xdata
add ecx 0x4
add edx 0x4
or ah ah
jne r-xdata
mov edi edi
sub_10029358
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
mov esi ecx
mov [ esi + 0xc ] 0x0
test eax eax
jne r-xdata
mov ecx [ eax ]
mov [ esi ] ecx
mov eax [ eax + 0x4 ]
mov [ esi + 0x4 ] eax
call sub_1002db24
mov [ esi + 0x8 ] eax
mov ecx [ eax + 0x6c ]
mov [ esi ] ecx
mov ecx [ eax + 0x68 ]
mov [ esi + 0x4 ] ecx
mov ecx [ esi ]
cmp ecx [ rw-data ]
je r-xdata
mov eax [ esi + 0x4 ]
cmp eax [ rw-data ]
je r-xdata
mov ecx [ rw-data ]
test [ eax + 0x70 ] ecx
jne r-xdata
mov eax [ esi + 0x8 ]
test [ eax + 0x70 ] 0x2
jne r-xdata
mov eax [ esi + 0x8 ]
mov ecx [ rw-data ]
test [ eax + 0x70 ] ecx
jne r-xdata
call sub_1002b192
mov [ esi ] eax
mov eax esi
pop esi
pop ebp
retn 0x4
or [ eax + 0x70 ] 0x2
mov [ esi + 0xc ] 0x1
jmp r-xdata
call sub_10032ca8
mov [ esi + 0x4 ] eax
sub_100293df
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_10029358
mov eax [ ebp - 0x10 ]
cmp [ eax + 0xac ] 0x1
jle r-xdata
mov eax [ eax + 0xc8 ]
mov ecx [ ebp + 0x8 ]
movzx eax [ eax + ecx * 2 ]
and eax 0x1
lea eax [ ebp - 0x10 ]
push eax
push 0x1
push [ ebp + 0x8 ]
call sub_10033165
add esp 0xc
jmp r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
cmp [ ebp - 0x4 ] 0x0
je r-xdata
sub_10029430
mov edi edi
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
jne r-xdata
push 0x0
push [ ebp + 0x8 ]
call sub_100293df
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov ecx [ rw-data ]
movzx eax [ ecx + eax * 2 ]
and eax 0x1
pop ebp
retn
sub_1002945e
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_10029358
mov eax [ ebp - 0x10 ]
cmp [ eax + 0xac ] 0x1
jle r-xdata
mov eax [ eax + 0xc8 ]
mov ecx [ ebp + 0x8 ]
movzx eax [ eax + ecx * 2 ]
and eax 0x2
lea eax [ ebp - 0x10 ]
push eax
push 0x2
push [ ebp + 0x8 ]
call sub_10033165
add esp 0xc
jmp r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
cmp [ ebp - 0x4 ] 0x0
je r-xdata
sub_100294af
mov edi edi
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
jne r-xdata
push 0x0
push [ ebp + 0x8 ]
call sub_1002945e
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov ecx [ rw-data ]
movzx eax [ ecx + eax * 2 ]
and eax 0x2
pop ebp
retn
sub_100294dd
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_10029358
mov eax [ ebp - 0x10 ]
cmp [ eax + 0xac ] 0x1
jle r-xdata
mov eax [ eax + 0xc8 ]
mov ecx [ ebp + 0x8 ]
movzx eax [ eax + ecx * 2 ]
and eax 0x4
lea eax [ ebp - 0x10 ]
push eax
push 0x4
push [ ebp + 0x8 ]
call sub_10033165
add esp 0xc
jmp r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
cmp [ ebp - 0x4 ] 0x0
je r-xdata
sub_1002952e
mov edi edi
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
jne r-xdata
push 0x0
push [ ebp + 0x8 ]
call sub_100294dd
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov ecx [ rw-data ]
movzx eax [ ecx + eax * 2 ]
and eax 0x4
pop ebp
retn
sub_1002955c
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_10029358
mov eax [ ebp - 0x10 ]
cmp [ eax + 0xac ] 0x1
jle r-xdata
mov eax [ eax + 0xc8 ]
mov ecx [ ebp + 0x8 ]
movzx eax [ eax + ecx * 2 ]
and eax 0x8
lea eax [ ebp - 0x10 ]
push eax
push 0x8
push [ ebp + 0x8 ]
call sub_10033165
add esp 0xc
jmp r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
cmp [ ebp - 0x4 ] 0x0
je r-xdata
sub_100295ad
mov edi edi
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
jne r-xdata
push 0x0
push [ ebp + 0x8 ]
call sub_1002955c
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov ecx [ rw-data ]
movzx eax [ ecx + eax * 2 ]
and eax 0x8
pop ebp
retn
sub_100295e0
push edi
mov edi [ esp + 0x8 ]
jmp r-xdata
mov ecx [ esp + 0xc ]
test ecx 0x3
je r-xdata
mov edx 0x7efefeff
mov eax [ ecx ]
add edx eax
xor eax 0xffffffff
xor eax edx
mov edx [ ecx ]
add ecx 0x4
test eax 0x81010100
je r-xdata
mov dl [ ecx ]
add ecx 0x1
test dl dl
je r-xdata
mov [ edi ] edx
add edi 0x4
test dl dl
je r-xdata
mov [ edi ] dl
mov eax [ esp + 0x8 ]
pop edi
retn
mov [ edi ] dl
add edi 0x1
test ecx 0x3
jne r-xdata
test dh dh
je r-xdata
jmp r-xdata
mov [ edi ] dx
mov eax [ esp + 0x8 ]
pop edi
retn
test edx 0xff0000
je r-xdata
mov [ edi ] dx
mov eax [ esp + 0x8 ]
mov [ edi + 0x2 ] 0x0
pop edi
retn
test edx 0xff000000
je r-xdata
mov [ edi ] edx
mov eax [ esp + 0x8 ]
pop edi
retn
jmp r-xdata
sub_100295f0
mov ecx [ esp + 0x4 ]
push edi
test ecx 0x3
je r-xdata
mov eax [ ecx ]
mov edx 0x7efefeff
add edx eax
xor eax 0xffffffff
xor eax edx
add ecx 0x4
test eax 0x81010100
je r-xdata
mov al [ ecx ]
add ecx 0x1
test al al
je r-xdata
mov eax [ ecx - 0x4 ]
test al al
je r-xdata
lea edi [ ecx - 0x1 ]
jmp r-xdata
test ecx 0x3
jne r-xdata
lea edi [ ecx - 0x4 ]
test ah ah
je r-xdata
mov ecx [ esp + 0xc ]
test ecx 0x3
je r-xdata
mov edi edi
mov edx 0x7efefeff
mov eax [ ecx ]
add edx eax
xor eax 0xffffffff
xor eax edx
mov edx [ ecx ]
add ecx 0x4
test eax 0x81010100
je r-xdata
mov dl [ ecx ]
add ecx 0x1
test dl dl
je r-xdata
lea edi [ ecx - 0x3 ]
jmp r-xdata
test eax 0xff0000
je r-xdata
mov [ edi ] edx
add edi 0x4
test dl dl
je r-xdata
mov [ edi ] dl
mov eax [ esp + 0x8 ]
pop edi
retn
mov [ edi ] dl
add edi 0x1
test ecx 0x3
jne r-xdata
lea edi [ ecx - 0x2 ]
jmp r-xdata
test eax 0xff000000
je r-xdata
test dh dh
je r-xdata
jmp r-xdata
jmp r-xdata
mov [ edi ] dx
mov eax [ esp + 0x8 ]
pop edi
retn
test edx 0xff0000
je r-xdata
mov [ edi ] dx
mov eax [ esp + 0x8 ]
mov [ edi + 0x2 ] 0x0
pop edi
retn
test edx 0xff000000
je r-xdata
mov [ edi ] edx
mov eax [ esp + 0x8 ]
pop edi
retn
jmp r-xdata
sub_100296d8
mov edi edi
push ebp
mov ebp esp
push edi
mov edi 0x3e8
pop edi
pop ebp
retn
test eax eax
je r-xdata
push edi
call [ Sleep@IAT ]
push [ ebp + 0x8 ]
call [ GetModuleHandleW@IAT ]
add edi 0x3e8
cmp edi 0xea60
ja r-xdata
sub_10029708
mov edi edi
push ebp
mov ebp esp
call sub_100308c2
push [ ebp + 0x8 ]
call sub_10030717
push [ rw-data ]
call sub_1002d8d8
push 0xff
call eax
add esp 0xc
pop ebp
retn
sub_10029731
mov edi edi
push ebp
mov ebp esp
push r--data
call [ GetModuleHandleW@IAT ]
test eax eax
je r-xdata
pop ebp
retn
push r--data
push eax
call [ GetProcAddress@IAT ]
test eax eax
je r-xdata
push [ ebp + 0x8 ]
call eax
sub_10029786
mov edi edi
push ebp
mov ebp esp
push esi
mov esi eax
jmp r-xdata
cmp esi [ ebp + 0x8 ]
jb r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
pop esi
pop ebp
retn
add esi 0x4
call eax
sub_100297a3
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
xor eax eax
jmp r-xdata
cmp esi [ ebp + 0xc ]
jb r-xdata
test eax eax
jne r-xdata
pop esi
pop ebp
retn
mov ecx [ esi ]
test ecx ecx
je r-xdata
add esi 0x4
call ecx
sub_100297c7
mov edi edi
push ebp
mov ebp esp
cmp [ r--data ] 0x0
je r-xdata
call sub_1003321d
push r--data
push r--data
call sub_100297a3
pop ecx
pop ecx
test eax eax
jne r-xdata
push r--data
call sub_100332d0
pop ecx
test eax eax
je r-xdata
pop ebp
retn
push sub_1002e59a
call sub_1002ad30
mov eax r--data
mov [ esp ] r--data
call sub_10029786
cmp [ rw-data ] 0x0
pop ecx
je r-xdata
push [ ebp + 0x8 ]
call [ r--data ]
pop ecx
xor eax eax
push rw-data
call sub_100332d0
pop ecx
test eax eax
je r-xdata
push 0x0
push 0x2
push 0x0
call [ rw-data ]
sub_1002984c
push 0x18
push r--data
call sub_1002e7e4
push 0x8
call sub_1002ebde
pop ecx
and [ ebp - 0x4 ] 0x0
xor ebx ebx
inc ebx
cmp [ rw-data ] ebx
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_10029963
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
mov [ rw-data ] ebx
mov al [ ebp + 0x10 ]
mov [ rw-data ] al
cmp [ ebp + 0xc ] 0x0
jne r-xdata
call sub_1002e829
retn
mov [ rw-data ] ebx
push 0x8
call sub_1002eb04
pop ecx
push [ ebp + 0x8 ]
call sub_1002975c
push r--data
mov eax r--data
call sub_10029786
pop ecx
push [ rw-data ]
call sub_1002d8d8
pop ecx
mov edi eax
mov [ ebp - 0x28 ] edi
test edi edi
je r-xdata
push r--data
mov eax r--data
call sub_10029786
pop ecx
push [ rw-data ]
call sub_1002d8d8
pop ecx
mov esi eax
mov [ ebp - 0x24 ] esi
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x20 ] esi
call sub_1002d8cf
cmp [ esi ] eax
je r-xdata
sub esi 0x4
mov [ ebp - 0x24 ] esi
cmp esi edi
jb r-xdata
cmp esi edi
jb r-xdata
push [ esi ]
call sub_1002d8d8
mov edi eax
call sub_1002d8cf
mov [ esi ] eax
call edi
push [ rw-data ]
call sub_1002d8d8
mov edi eax
push [ rw-data ]
call sub_1002d8d8
add esp 0xc
cmp [ ebp - 0x1c ] edi
jne r-xdata
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x28 ] edi
mov [ ebp - 0x20 ] eax
mov esi eax
mov [ ebp - 0x24 ] esi
cmp [ ebp - 0x20 ] eax
je r-xdata
mov edi [ ebp - 0x28 ]
jmp r-xdata
sub_100299b3
mov edi edi
push esi
call sub_1002d8cf
mov esi eax
push esi
call sub_1002d3d5
push esi
call sub_10033643
push esi
call sub_10026092
push esi
call sub_10030a7a
push esi
call sub_10033634
push esi
call sub_10033422
push esi
call sub_1002360a
push esi
call sub_10033411
push sub_1002998e
call sub_1002d85d
add esp 0x24
mov [ rw-data ] eax
pop esi
retn
sub_10029a01
mov edi edi
push ebp
mov ebp esp
sub esp 0x20
mov eax [ ebp + 0x8 ]
push esi
push edi
push 0x8
pop ecx
mov esi r--data
lea edi [ ebp - 0x20 ]
[ edi ] [ esi ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0xc ]
pop edi
mov [ ebp - 0x4 ] eax
pop esi
test eax eax
je r-xdata
lea eax [ ebp - 0xc ]
push eax
push [ ebp - 0x10 ]
push [ ebp - 0x1c ]
push [ ebp - 0x20 ]
call [ RaiseException@IAT ]
leave
retn 0x8
test [ eax ] 0x8
je r-xdata
mov [ ebp - 0xc ] 0x1994000
sub_10029a4d
mov edi edi
push ebp
mov ebp esp
push ecx
push ebx
mov eax [ ebp + 0xc ]
add eax 0xc
mov [ ebp - 0x4 ] eax
mov ebx [ fs : 0x0 ]
mov eax [ ebx ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
mov ebx [ ebp + 0xc ]
mov ebp [ ebp - 0x4 ]
mov esp [ ebx - 0x4 ]
jmp eax
sub_10029a86
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
push edi
mov esi [ fs : 0x0 ]
mov [ ebp - 0x4 ] esi
mov [ ebp - 0x8 ] r-xdata
push 0x0
push [ ebp + 0xc ]
push [ ebp - 0x8 ]
push [ ebp + 0x8 ]
call RtlUnwind
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x4 ]
and eax 0xfffffffd
mov ecx [ ebp + 0xc ]
mov [ ecx + 0x4 ] eax
mov edi [ fs : 0x0 ]
mov ebx [ ebp - 0x4 ]
mov [ ebx ] edi
mov [ fs : 0x0 ] ebx
pop edi
pop esi
pop ebx
leave
retn 0x8
sub_10029ada
push ebp
mov ebp esp
sub esp 0x8
push ebx
push esi
push edi
cld
mov [ ebp - 0x4 ] eax
xor eax eax
push eax
push eax
push eax
push [ ebp - 0x4 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_1002ab23
add esp 0x20
mov [ ebp - 0x8 ] eax
pop edi
pop esi
pop ebx
mov eax [ ebp - 0x8 ]
mov esp ebp
pop ebp
retn
sub_10029b10
mov edi edi
push ebp
mov ebp esp
push esi
cld
mov esi [ ebp + 0xc ]
mov ecx [ esi + 0x8 ]
xor ecx esi
call sub_10025c8d
push 0x0
push esi
push [ esi + 0x14 ]
push [ esi + 0xc ]
push 0x0
push [ ebp + 0x10 ]
push [ esi + 0x10 ]
push [ ebp + 0x8 ]
call sub_1002ab23
add esp 0x20
pop esi
pop ebp
retn
sub_10029b43
mov edi edi
push ebp
mov ebp esp
sub esp 0x38
push ebx
cmp [ ebp + 0x8 ] 0x123
jne r-xdata
and [ ebp - 0x28 ] 0x0
mov [ ebp - 0x24 ] sub_10029c1a
mov eax [ rw-data ]
lea ecx [ ebp - 0x28 ]
xor eax ecx
mov [ ebp - 0x20 ] eax
mov eax [ ebp + 0x18 ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp + 0x1c ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp + 0x20 ]
mov [ ebp - 0x10 ] eax
and [ ebp - 0xc ] 0x0
and [ ebp - 0x8 ] 0x0
and [ ebp - 0x4 ] 0x0
mov [ ebp - 0xc ] esp
mov [ ebp - 0x8 ] ebp
mov eax [ fs : 0x0 ]
mov [ ebp - 0x28 ] eax
lea eax [ ebp - 0x28 ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x38 ] 0x1
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x34 ] eax
mov eax [ ebp + 0x10 ]
mov [ ebp - 0x30 ] eax
call sub_1002db24
mov eax [ eax + 0x80 ]
mov [ ebp - 0x2c ] eax
lea eax [ ebp - 0x34 ]
push eax
mov eax [ ebp + 0x8 ]
push [ eax ]
call [ ebp - 0x2c ]
pop ecx
pop ecx
and [ ebp - 0x38 ] 0x0
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax r-xdata
mov ecx [ ebp + 0xc ]
mov [ ecx ] eax
xor eax eax
inc eax
jmp r-xdata
mov eax [ ebp - 0x28 ]
mov [ fs : 0x0 ] eax
mov ebx [ fs : 0x0 ]
mov eax [ ebx ]
mov ebx [ ebp - 0x28 ]
mov [ ebx ] eax
mov [ fs : 0x0 ] ebx
jmp r-xdata
pop ebx
leave
retn
mov eax [ ebp - 0x38 ]
sub_10029c1a
mov edi edi
push ebp
mov ebp esp
push ecx
push ebx
cld
mov eax [ ebp + 0xc ]
mov ecx [ eax + 0x8 ]
xor ecx [ ebp + 0xc ]
call sub_10025c8d
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
and eax 0x66
je r-xdata
push 0x1
mov eax [ ebp + 0xc ]
push [ eax + 0x18 ]
mov eax [ ebp + 0xc ]
push [ eax + 0x14 ]
mov eax [ ebp + 0xc ]
push [ eax + 0xc ]
push 0x0
push [ ebp + 0x10 ]
mov eax [ ebp + 0xc ]
push [ eax + 0x10 ]
push [ ebp + 0x8 ]
call sub_1002ab23
add esp 0x20
mov eax [ ebp + 0xc ]
cmp [ eax + 0x24 ] 0x0
jne r-xdata
mov eax [ ebp + 0xc ]
mov [ eax + 0x24 ] 0x1
xor eax eax
inc eax
jmp r-xdata
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
lea eax [ ebp - 0x4 ]
push eax
push 0x123
call sub_10029b43
add esp 0x1c
mov eax [ ebp - 0x4 ]
mov ebx [ ebp + 0xc ]
mov esp [ ebx + 0x1c ]
mov ebp [ ebx + 0x20 ]
jmp eax
push [ ebp + 0x8 ]
push [ ebp + 0xc ]
call sub_10029a86
pop ebx
leave
retn
sub_10029cb9
mov edi edi
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
mov eax [ edi + 0x10 ]
mov esi [ edi + 0xc ]
mov [ ebp - 0x4 ] eax
mov ebx esi
jmp r-xdata
mov [ ebp + 0x8 ] esi
cmp esi 0xffffffff
jne r-xdata
mov eax [ ebp + 0x14 ]
inc esi
mov [ eax ] esi
mov eax [ ebp + 0x18 ]
mov [ eax ] ebx
cmp ebx [ edi + 0xc ]
ja r-xdata
mov ecx [ ebp - 0x4 ]
dec esi
mov eax esi
imul eax eax 0x14
add eax ecx
mov ecx [ ebp + 0x10 ]
cmp [ eax + 0x4 ] ecx
jge r-xdata
call sub_100333d9
call sub_100333d9
cmp esi ebx
jbe r-xdata
cmp esi 0xffffffff
jne r-xdata
cmp ecx [ eax + 0x8 ]
jle r-xdata
mov eax esi
imul eax eax 0x14
add eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
leave
retn
cmp [ ebp + 0xc ] 0x0
jge r-xdata
dec [ ebp + 0xc ]
mov ebx [ ebp + 0x8 ]
sub_10029d2e
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
mov [ esi ] eax
call sub_1002db24
mov eax [ eax + 0x98 ]
mov [ esi + 0x4 ] eax
call sub_1002db24
mov [ eax + 0x98 ] esi
mov eax esi
pop esi
pop ebp
retn
sub_10029d5a
mov edi edi
push ebp
mov ebp esp
call sub_1002db24
mov eax [ eax + 0x98 ]
jmp r-xdata
test eax eax
jne r-xdata
mov ecx [ eax ]
cmp ecx [ ebp + 0x8 ]
je r-xdata
inc eax
pop ebp
retn
xor eax eax
pop ebp
retn
mov eax [ eax + 0x4 ]
sub_10029d81
mov edi edi
push ebp
mov ebp esp
push esi
call sub_1002db24
mov esi [ ebp + 0x8 ]
cmp esi [ eax + 0x98 ]
jne r-xdata
call sub_1002db24
mov eax [ eax + 0x98 ]
jmp r-xdata
call sub_1002db24
mov ecx [ esi + 0x4 ]
mov [ eax + 0x98 ] ecx
cmp [ eax + 0x4 ] 0x0
jne r-xdata
mov ecx [ eax + 0x4 ]
cmp esi ecx
je r-xdata
pop esi
pop ebp
jmp sub_100333d9
mov ecx [ esi + 0x4 ]
mov [ eax + 0x4 ] ecx
jmp r-xdata
mov eax ecx
pop esi
pop ebp
retn
sub_10029dd3
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
mov eax [ rw-data ]
and [ ebp - 0x18 ] 0x0
lea ecx [ ebp - 0x18 ]
xor eax ecx
mov ecx [ ebp + 0x8 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0xc ] eax
mov eax [ ebp + 0x14 ]
inc eax
mov [ ebp - 0x14 ] sub_10029b10
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] eax
mov eax [ fs : 0x0 ]
mov [ ebp - 0x18 ] eax
lea eax [ ebp - 0x18 ]
mov [ fs : 0x0 ] eax
push [ ebp + 0x18 ]
push ecx
push [ ebp + 0x10 ]
call sub_100336c0
mov ecx eax
mov eax [ ebp - 0x18 ]
mov [ fs : 0x0 ] eax
mov eax ecx
leave
retn
sub_10029e33
push eax
push [ fs : 0x0 ]
lea eax [ esp + 0xc ]
sub esp [ esp + 0xc ]
push ebx
push esi
push edi
mov [ eax ] ebp
mov ebp eax
mov eax [ rw-data ]
xor eax ebp
push eax
push [ ebp - 0x4 ]
mov [ ebp - 0x4 ] 0xffffffff
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
retn
sub_10029e66
push eax
push [ fs : 0x0 ]
lea eax [ esp + 0xc ]
sub esp [ esp + 0xc ]
push ebx
push esi
push edi
mov [ eax ] ebp
mov ebp eax
mov eax [ rw-data ]
xor eax ebp
push eax
mov [ ebp - 0x10 ] esp
push [ ebp - 0x4 ]
mov [ ebp - 0x4 ] 0xffffffff
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
retn
sub_10029e9c
push eax
push [ fs : 0x0 ]
lea eax [ esp + 0xc ]
sub esp [ esp + 0xc ]
push ebx
push esi
push edi
mov [ eax ] ebp
mov ebp eax
mov eax [ rw-data ]
xor eax ebp
push eax
mov [ ebp - 0x10 ] eax
push [ ebp - 0x4 ]
mov [ ebp - 0x4 ] 0xffffffff
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
retn
sub_10029ed2
push eax
push [ fs : 0x0 ]
lea eax [ esp + 0xc ]
sub esp [ esp + 0xc ]
push ebx
push esi
push edi
mov [ eax ] ebp
mov ebp eax
mov eax [ rw-data ]
xor eax ebp
push eax
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x10 ] esp
push [ ebp - 0x4 ]
mov [ ebp - 0x4 ] 0xffffffff
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
retn
sub_10029f3d
mov edi edi
push ebp
mov ebp esp
push esi
lea eax [ ebp + 0x8 ]
push eax
mov esi ecx
call sub_10025e4c
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0x4
sub_10029f66
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
mov [ esi ] r--data
call sub_10025f19
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_10025c9c
pop ecx
sub_10029f8d
mov edi edi
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
mov eax [ edi + 0x4 ]
test eax eax
je r-xdata
xor eax eax
inc eax
lea edx [ eax + 0x8 ]
cmp [ edx ] 0x0
je r-xdata
mov esi [ ebp + 0xc ]
mov ecx [ esi + 0x4 ]
cmp eax ecx
je r-xdata
test [ esi ] 0x2
je r-xdata
add ecx 0x8
push ecx
push edx
call sub_100292d0
pop ecx
pop ecx
test eax eax
je r-xdata
mov eax [ ebp + 0x10 ]
mov eax [ eax ]
test al 0x1
je r-xdata
test [ edi ] 0x8
je r-xdata
xor eax eax
jmp r-xdata
test al 0x2
je r-xdata
test [ edi ] 0x1
je r-xdata
pop edi
pop esi
pop ebp
retn
test [ edi ] 0x2
je r-xdata
sub_10029fec
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
mov eax [ eax ]
cmp eax 0xe0434f4d
je r-xdata
call sub_1002db24
cmp [ eax + 0x90 ] 0x0
jle r-xdata
cmp eax 0xe06d7363
jne r-xdata
xor eax eax
pop ebp
retn
call sub_1002db24
add eax 0x90
dec [ eax ]
call sub_1002db24
and [ eax + 0x90 ] 0x0
jmp sub_1003338d
sub_1002a035
push 0x10
push r--data
call sub_1002e7e4
mov edi [ ebp + 0x10 ]
mov ebx [ ebp + 0x8 ]
cmp [ edi + 0x4 ] 0x80
jg r-xdata
mov esi [ ebx + 0x8 ]
movsx esi [ ebx + 0x8 ]
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_1002a0fb
cmp esi [ ebp + 0x14 ]
je r-xdata
cmp esi 0xffffffff
jle r-xdata
mov [ ebp - 0x1c ] esi
call sub_1002db24
add eax 0x90
inc [ eax ]
and [ ebp - 0x4 ] 0x0
mov [ ebx + 0x8 ] esi
call sub_1002e829
retn
call sub_100333d9
call sub_100333d9
cmp esi [ edi + 0x4 ]
jl r-xdata
mov eax esi
shl eax 0x3
mov ecx [ edi + 0x8 ]
add ecx eax
mov esi [ ecx ]
mov [ ebp - 0x20 ] esi
mov [ ebp - 0x4 ] 0x1
cmp [ ecx + 0x4 ] 0x0
je r-xdata
and [ ebp - 0x4 ] 0x0
jmp r-xdata
mov [ ebx + 0x8 ] esi
push 0x103
push ebx
mov ecx [ edi + 0x8 ]
push [ ecx + eax + 0x4 ]
call sub_100336c0
mov [ ebp - 0x1c ] esi
jmp r-xdata
cmp esi [ ebp + 0x14 ]
je r-xdata
sub_1002a116
mov eax [ eax ]
cmp [ eax ] 0xe06d7363
jne r-xdata
xor eax eax
retn
cmp [ eax + 0x10 ] 0x3
jne r-xdata
mov ecx [ eax + 0x14 ]
cmp ecx 0x19930520
je r-xdata
cmp [ eax + 0x1c ] 0x0
jne r-xdata
cmp ecx 0x19930521
je r-xdata
call sub_1002db24
xor ecx ecx
inc ecx
mov [ eax + 0x20c ] ecx
mov eax ecx
retn
cmp ecx 0x19930522
jne r-xdata
sub_1002a15b
push 0x8
push r--data
call sub_1002e7e4
mov ecx [ ebp + 0x8 ]
test ecx ecx
je r-xdata
call sub_1002e829
retn
cmp [ ecx ] 0xe06d7363
jne r-xdata
mov eax [ ecx + 0x1c ]
test eax eax
je r-xdata
mov eax [ eax + 0x4 ]
test eax eax
je r-xdata
and [ ebp - 0x4 ] 0x0
push eax
push [ ecx + 0x18 ]
call sub_10029a7f
mov [ ebp - 0x4 ] 0xfffffffe
sub_1002a1b0
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0xc ]
mov eax [ ecx ]
push esi
mov esi [ ebp + 0x8 ]
add eax esi
cmp [ ecx + 0x4 ] 0x0
jl r-xdata
pop esi
pop ebp
retn
mov edx [ ecx + 0x4 ]
mov ecx [ ecx + 0x8 ]
mov esi [ edx + esi ]
mov ecx [ esi + ecx ]
add ecx edx
add eax ecx
sub_1002a1ec
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
test edi edi
jne r-xdata
and [ ebp - 0x8 ] 0x0
cmp [ edi ] 0x0
mov [ ebp - 0x1 ] 0x0
jle r-xdata
call sub_100333d9
mov al [ ebp - 0x1 ]
leave
retn
push ebx
push esi
inc [ ebp - 0x8 ]
mov eax [ ebp - 0x8 ]
cmp eax [ edi ]
jl r-xdata
mov eax [ ebp - 0x8 ]
shl eax 0x4
mov [ ebp - 0xc ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x1c ]
mov eax [ eax + 0xc ]
mov ebx [ eax ]
lea esi [ eax + 0x4 ]
test ebx ebx
jle r-xdata
pop esi
pop ebx
mov [ ebp - 0x1 ] 0x1
dec ebx
add esi 0x4
test ebx ebx
jg r-xdata
mov ecx [ ebp + 0x8 ]
push [ ecx + 0x1c ]
mov eax [ esi ]
push eax
mov eax [ edi + 0x4 ]
add eax [ ebp - 0xc ]
push eax
call sub_10029f8d
add esp 0xc
test eax eax
jne r-xdata
jmp r-xdata
sub_1002a2b0
push 0x2c
push r--data
call sub_1002e7e4
mov ebx ecx
mov edi [ ebp + 0xc ]
mov esi [ ebp + 0x8 ]
mov [ ebp - 0x1c ] ebx
and [ ebp - 0x34 ] 0x0
mov eax [ edi - 0x4 ]
mov [ ebp - 0x24 ] eax
push [ esi + 0x18 ]
lea eax [ ebp - 0x3c ]
push eax
call sub_10029d2e
pop ecx
pop ecx
mov [ ebp - 0x28 ] eax
call sub_1002db24
mov eax [ eax + 0x88 ]
mov [ ebp - 0x2c ] eax
call sub_1002db24
mov eax [ eax + 0x8c ]
mov [ ebp - 0x30 ] eax
call sub_1002db24
mov [ eax + 0x88 ] esi
call sub_1002db24
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x8c ] ecx
and [ ebp - 0x4 ] 0x0
xor eax eax
inc eax
mov [ ebp + 0x10 ] eax
mov [ ebp - 0x4 ] eax
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push ebx
push [ ebp + 0x14 ]
push edi
call sub_10029dd3
add esp 0x14
mov [ ebp - 0x1c ] eax
and [ ebp - 0x4 ] 0x0
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
mov [ ebp + 0x10 ] 0x0
call sub_1002a3d6
mov eax [ ebp - 0x1c ]
call sub_1002e829
retn
sub_1002a349
mov esp [ ebp - 0x18 ]
call sub_1002db24
and [ eax + 0x20c ] 0x0
mov esi [ ebp + 0x14 ]
mov edi [ ebp + 0xc ]
cmp [ esi + 0x4 ] 0x80
jg r-xdata
mov ecx [ edi + 0x8 ]
movsx ecx [ edi + 0x8 ]
jmp r-xdata
push ecx
push esi
push 0x0
push edi
call sub_1002a035
add esp 0x10
and [ ebp - 0x1c ] 0x0
and [ ebp - 0x4 ] 0x0
mov esi [ ebp + 0x8 ]
mov [ ebp - 0x4 ] 0xfffffffe
mov [ ebp + 0x10 ] 0x0
call sub_1002a3d6
mov eax [ ebp - 0x1c ]
call sub_1002e829
retn
imul eax eax 0x14
add eax ebx
mov edx [ eax + 0x4 ]
cmp ecx edx
jle r-xdata
mov ebx [ esi + 0x10 ]
and [ ebp - 0x20 ] 0x0
inc [ ebp - 0x20 ]
jmp r-xdata
cmp ecx [ eax + 0x8 ]
jg r-xdata
mov eax [ ebp - 0x20 ]
cmp eax [ esi + 0xc ]
jae r-xdata
mov eax [ esi + 0x8 ]
mov ecx [ eax + edx * 8 + 0x8 ]
sub_1002a3d6
mov eax [ ebp - 0x24 ]
mov [ edi - 0x4 ] eax
push [ ebp - 0x28 ]
call sub_10029d81
pop ecx
call sub_1002db24
mov ecx [ ebp - 0x2c ]
mov [ eax + 0x88 ] ecx
call sub_1002db24
mov ecx [ ebp - 0x30 ]
mov [ eax + 0x8c ] ecx
cmp [ esi ] 0xe06d7363
jne r-xdata
retn
cmp [ esi + 0x10 ] 0x3
jne r-xdata
mov eax [ esi + 0x14 ]
cmp eax 0x19930520
je r-xdata
cmp [ ebp - 0x34 ] 0x0
jne r-xdata
cmp eax 0x19930521
je r-xdata
cmp [ ebp - 0x1c ] 0x0
je r-xdata
cmp eax 0x19930522
jne r-xdata
push [ esi + 0x18 ]
call sub_10029d5a
pop ecx
test eax eax
je r-xdata
push [ ebp + 0x10 ]
push esi
call sub_1002a15b
pop ecx
pop ecx
sub_1002a44c
push 0xc
push r--data
call sub_1002e7e4
xor edx edx
mov [ ebp - 0x1c ] edx
mov eax [ ebp + 0x10 ]
mov ecx [ eax + 0x4 ]
cmp ecx edx
je r-xdata
xor eax eax
cmp [ ecx + 0x8 ] dl
je r-xdata
mov ecx [ eax + 0x8 ]
cmp ecx edx
jne r-xdata
mov eax [ eax ]
mov esi [ ebp + 0xc ]
test eax eax
js r-xdata
test [ eax ] 0x80000000
je r-xdata
mov [ ebp - 0x4 ] edx
xor ebx ebx
inc ebx
push ebx
test al 0x8
je r-xdata
lea esi [ ecx + esi + 0xc ]
mov edi [ ebp + 0x14 ]
mov eax [ ebp + 0x8 ]
push [ eax + 0x18 ]
test [ edi ] bl
je r-xdata
mov edi [ ebp + 0x8 ]
push [ edi + 0x18 ]
call sub_1003370c
pop ecx
pop ecx
test eax eax
je r-xdata
cmp [ edi + 0x18 ] edx
jne r-xdata
call sub_1003370c
pop ecx
pop ecx
test eax eax
je r-xdata
call sub_100333d9
push ebx
push esi
call sub_1003370c
pop ecx
pop ecx
test eax eax
je r-xdata
call sub_1003370c
pop ecx
pop ecx
test eax eax
je r-xdata
call sub_1003370c
pop ecx
pop ecx
test eax eax
je r-xdata
push ebx
push esi
call sub_1003370c
pop ecx
pop ecx
test eax eax
je r-xdata
mov eax [ edi + 0x18 ]
mov [ esi ] eax
mov ecx [ ebp + 0x14 ]
add ecx 0x8
push ecx
push ebx
push esi
call sub_1003370c
pop ecx
pop ecx
test eax eax
je r-xdata
push ebx
push esi
call sub_1003370c
pop ecx
pop ecx
test eax eax
je r-xdata
push [ edi + 0x14 ]
mov eax [ ebp + 0x8 ]
push [ eax + 0x18 ]
push esi
call sub_1002d4f0
add esp 0xc
cmp [ edi + 0x14 ] 0x4
jne r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
mov eax [ ebp - 0x1c ]
jmp r-xdata
push [ edi + 0x18 ]
call sub_1003370c
pop ecx
test eax eax
je r-xdata
push [ edi + 0x14 ]
add edi 0x8
push edi
mov eax [ ebp + 0x8 ]
push [ eax + 0x18 ]
call sub_1002a1b0
pop ecx
pop ecx
push eax
push esi
call sub_1002d4f0
add esp 0xc
jmp r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
call sub_1002e829
retn
test [ edi ] 0x4
push 0x0
pop eax
setne al
inc eax
mov [ ebp - 0x1c ] eax
jmp r-xdata
add edi 0x8
push edi
jmp r-xdata
push eax
call sub_1002a1b0
pop ecx
pop ecx
mov [ esi ] eax
jmp r-xdata
sub_1002a5cb
push 0x8
push r--data
call sub_1002e7e4
mov eax [ ebp + 0x10 ]
test [ eax ] 0x80000000
je r-xdata
mov ecx [ eax + 0x8 ]
mov edx [ ebp + 0xc ]
lea ebx [ ecx + edx + 0xc ]
mov ebx [ ebp + 0xc ]
jmp r-xdata
lea eax [ esi + 0x8 ]
push eax
push [ edi + 0x18 ]
call sub_1002a1b0
pop ecx
pop ecx
push eax
push [ esi + 0x18 ]
push ebx
call sub_10029a7f
dec eax
jne r-xdata
and [ ebp - 0x4 ] 0x0
mov esi [ ebp + 0x14 ]
push esi
push eax
push [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
push edi
call sub_1002a44c
add esp 0x10
dec eax
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_1002e829
retn
push 0x1
lea eax [ esi + 0x8 ]
push eax
push [ edi + 0x18 ]
call sub_1002a1b0
pop ecx
pop ecx
push eax
push [ esi + 0x18 ]
push ebx
call sub_10029a7f
jmp r-xdata
sub_1002a65d
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x18 ] 0x0
je r-xdata
cmp [ ebp + 0x20 ] 0x0
push [ ebp + 0x8 ]
jne r-xdata
push [ ebp + 0x18 ]
push ebx
push esi
push [ ebp + 0x8 ]
call sub_1002a5cb
add esp 0x10
push [ ebp + 0x20 ]
push esi
jmp r-xdata
pop ebp
retn
push esi
push eax
call sub_10029a4d
call sub_10029a86
push [ edi ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push esi
call sub_1002a035
mov eax [ edi + 0x4 ]
push 0x100
push [ ebp + 0x1c ]
inc eax
push [ ebp + 0x14 ]
mov [ esi + 0x8 ] eax
push [ ebp + 0xc ]
mov ecx [ ebx + 0xc ]
push esi
push [ ebp + 0x8 ]
call sub_1002a2b0
add esp 0x28
test eax eax
je r-xdata
sub_1002a6cb
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push esi
mov esi [ ebp + 0x8 ]
cmp [ esi ] 0x80000003
je r-xdata
pop esi
leave
retn
push edi
call sub_1002db24
cmp [ eax + 0x80 ] 0x0
je r-xdata
mov edi [ ebp + 0x18 ]
cmp [ edi + 0xc ] 0x0
jne r-xdata
call sub_1002db24
lea edi [ eax + 0x80 ]
call sub_1002d8cf
cmp [ edi ] eax
je r-xdata
mov esi [ ebp + 0x1c ]
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x4 ]
push eax
push esi
push [ ebp + 0x20 ]
push edi
call sub_10029cb9
mov edi eax
mov eax [ ebp - 0x4 ]
add esp 0x14
cmp eax [ ebp - 0x8 ]
jae r-xdata
call sub_100333d9
cmp [ esi ] 0xe0434f4d
je r-xdata
pop edi
push ebx
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
call sub_10029b43
add esp 0x1c
test eax eax
jne r-xdata
inc [ ebp - 0x4 ]
mov eax [ ebp - 0x4 ]
add edi 0x14
cmp eax [ ebp - 0x8 ]
jb r-xdata
cmp esi [ edi + 0x4 ]
jg r-xdata
cmp esi [ edi ]
jl r-xdata
pop ebx
mov eax [ edi + 0xc ]
mov ecx [ edi + 0x10 ]
shl eax 0x4
add eax ecx
mov ecx [ eax - 0xc ]
test ecx ecx
je r-xdata
lea ebx [ eax - 0x10 ]
test [ ebx ] 0x40
jne r-xdata
cmp [ ecx + 0x8 ] 0x0
jne r-xdata
push [ ebp + 0x24 ]
mov esi [ ebp + 0xc ]
push [ ebp + 0x20 ]
push 0x0
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0x8 ]
call sub_1002a65d
mov esi [ ebp + 0x1c ]
add esp 0x1c
sub_1002a7bf
mov edi edi
push ebp
mov ebp esp
sub esp 0x2c
mov ecx [ ebp + 0xc ]
push ebx
mov ebx [ ebp + 0x18 ]
mov eax [ ebx + 0x4 ]
cmp eax 0x80
push esi
push edi
mov [ ebp - 0x1 ] 0x0
jg r-xdata
mov ecx [ ecx + 0x8 ]
movsx ecx [ ecx + 0x8 ]
jmp r-xdata
call sub_100333d9
cmp ecx eax
jl r-xdata
cmp ecx 0xffffffff
mov [ ebp - 0x8 ] ecx
jl r-xdata
mov esi [ ebp + 0x8 ]
mov edi 0xe06d7363
cmp [ esi ] edi
jne r-xdata
cmp [ ebx + 0xc ] 0x0
jbe r-xdata
cmp [ esi + 0x10 ] 0x3
mov ebx 0x19930520
jne r-xdata
call sub_1002db24
cmp [ eax + 0x94 ] 0x0
je r-xdata
cmp [ ebp + 0x1c ] 0x0
jne r-xdata
cmp [ esi ] edi
jne r-xdata
mov eax [ esi + 0x14 ]
cmp eax ebx
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
call sub_100333d9
call sub_1003338d
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push [ ebp - 0x8 ]
push ebx
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
call sub_1002a6cb
add esp 0x20
mov ebx [ ebp + 0x18 ]
cmp [ esi + 0x10 ] 0x3
jne r-xdata
cmp [ esi + 0x1c ] 0x0
jne r-xdata
cmp eax 0x19930521
je r-xdata
mov eax [ esi + 0x14 ]
cmp eax ebx
je r-xdata
call sub_1002db24
cmp [ eax + 0x88 ] 0x0
je r-xdata
cmp eax 0x19930522
jne r-xdata
mov edi [ ebp + 0x18 ]
cmp [ edi + 0xc ] 0x0
jbe r-xdata
cmp eax 0x19930521
je r-xdata
call sub_1002db24
mov esi [ eax + 0x88 ]
mov [ ebp + 0x8 ] esi
call sub_1002db24
mov eax [ eax + 0x8c ]
push 0x1
push esi
mov [ ebp + 0x10 ] eax
call sub_1003370c
pop ecx
pop ecx
test eax eax
jne r-xdata
cmp [ ebp + 0x1c ] 0x0
je r-xdata
lea eax [ ebp - 0x1c ]
push eax
lea eax [ ebp - 0x10 ]
push eax
push [ ebp - 0x8 ]
push [ ebp + 0x20 ]
push edi
call sub_10029cb9
add esp 0x14
mov edi eax
cmp eax 0x19930522
jne r-xdata
cmp [ esi ] edi
jne r-xdata
call sub_100333d9
cmp [ ebp - 0x1 ] 0x0
jne r-xdata
push 0x1
push esi
call sub_1002a15b
pop ecx
pop ecx
mov edi [ ebp + 0x18 ]
mov eax [ ebp - 0x8 ]
cmp [ edi ] eax
jg r-xdata
call sub_1002db24
cmp [ eax + 0x94 ] 0x0
je r-xdata
cmp [ esi + 0x10 ] 0x3
jne r-xdata
mov eax [ edi ]
and eax 0x1fffffff
cmp eax 0x19930521
jb r-xdata
inc [ ebp - 0x10 ]
add edi 0x14
jmp r-xdata
cmp eax [ edi + 0x4 ]
jg r-xdata
call sub_1002db24
mov edi [ eax + 0x94 ]
call sub_1002db24
push [ ebp + 0x8 ]
xor esi esi
mov [ eax + 0x94 ] esi
call sub_1002a1ec
pop ecx
test al al
jne r-xdata
mov eax [ esi + 0x14 ]
cmp eax ebx
je r-xdata
mov edi [ edi + 0x1c ]
test edi edi
je r-xdata
mov eax [ ebp - 0x10 ]
cmp eax [ ebp - 0x1c ]
jae r-xdata
mov eax [ edi + 0x10 ]
mov [ ebp - 0xc ] eax
mov eax [ edi + 0xc ]
mov [ ebp - 0x18 ] eax
test eax eax
jle r-xdata
mov esi [ ebp + 0x8 ]
mov edi 0xe06d7363
xor ebx ebx
cmp [ edi ] ebx
jle r-xdata
cmp [ esi + 0x1c ] 0x0
jne r-xdata
cmp eax 0x19930521
je r-xdata
push esi
call sub_1002a1ec
pop ecx
test al al
jne r-xdata
mov eax [ esi + 0x1c ]
mov eax [ eax + 0xc ]
lea ebx [ eax + 0x4 ]
mov eax [ eax ]
mov [ ebp - 0x14 ] eax
test eax eax
jle r-xdata
mov eax [ edi + 0x4 ]
mov ecx [ ebx + eax + 0x4 ]
push rw-data
call sub_10025ffb
test al al
jne r-xdata
call sub_100333d9
cmp eax 0x19930522
jne r-xdata
call sub_1002db24
call sub_1002db24
call sub_1002db24
mov [ eax + 0x88 ] esi
call sub_1002db24
cmp [ ebp + 0x24 ] 0x0
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x8c ] ecx
push esi
jne r-xdata
dec [ ebp - 0x18 ]
add [ ebp - 0xc ] 0x10
cmp [ ebp - 0x18 ] 0x0
jg r-xdata
push [ esi + 0x1c ]
mov eax [ ebx ]
push eax
push [ ebp - 0xc ]
mov [ ebp - 0x20 ] eax
call sub_10029f8d
add esp 0xc
test eax eax
jne r-xdata
push 0x1
push [ ebp + 0x8 ]
call sub_1002a15b
pop ecx
pop ecx
push r--data
lea ecx [ ebp - 0x2c ]
call sub_10029f3d
push r--data
lea eax [ ebp - 0x2c ]
push eax
call sub_10029a01
inc esi
add ebx 0x10
cmp esi [ edi ]
jl r-xdata
push [ ebp + 0x24 ]
push [ ebp + 0xc ]
jmp r-xdata
jmp r-xdata
push [ ebp + 0x24 ]
mov ebx [ ebp - 0xc ]
push [ ebp + 0x20 ]
mov [ ebp - 0x1 ] 0x1
push [ ebp - 0x20 ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push esi
mov esi [ ebp + 0xc ]
call sub_1002a65d
mov esi [ ebp + 0x8 ]
add esp 0x1c
dec [ ebp - 0x14 ]
add ebx 0x4
cmp [ ebp - 0x14 ] eax
jg r-xdata
call sub_10029a86
mov esi [ ebp + 0x18 ]
push 0xffffffff
push esi
push [ ebp + 0x14 ]
push [ ebp + 0xc ]
call sub_1002a035
add esp 0x10
push [ esi + 0x1c ]
call sub_1002a267
sub_1002ab23
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
push edi
call sub_1002db24
cmp [ eax + 0x20c ] 0x0
mov eax [ ebp + 0x18 ]
mov ecx [ ebp + 0x8 ]
mov edi 0xe06d7363
mov esi 0x1fffffff
mov ebx 0x19930522
jne r-xdata
test [ ecx + 0x4 ] 0x66
je r-xdata
mov edx [ ecx ]
cmp edx edi
je r-xdata
cmp [ eax + 0xc ] 0x0
jne r-xdata
cmp [ eax + 0x4 ] 0x0
je r-xdata
cmp edx 0x80000026
je r-xdata
cmp [ ecx ] edi
jne r-xdata
mov edx [ eax ]
and edx esi
cmp edx 0x19930521
jb r-xdata
xor eax eax
inc eax
cmp [ ebp + 0x1c ] 0x0
jne r-xdata
mov edx [ eax ]
and edx esi
cmp edx ebx
jb r-xdata
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x24 ]
push eax
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push ecx
call sub_1002a7bf
add esp 0x20
cmp [ ecx + 0x10 ] 0x3
jb r-xdata
cmp [ eax + 0x1c ] 0x0
je r-xdata
push 0xffffffff
push eax
push [ ebp + 0x14 ]
push [ ebp + 0xc ]
call sub_1002a035
add esp 0x10
jmp r-xdata
test [ eax + 0x20 ] 0x1
jne r-xdata
cmp [ ecx + 0x14 ] ebx
jbe r-xdata
mov edx [ ecx + 0x1c ]
mov edx [ edx + 0x8 ]
test edx edx
je r-xdata
movzx esi [ ebp + 0x24 ]
push esi
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push eax
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push ecx
call edx
add esp 0x20
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
sub_1002ac09
mov edi edi
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
push [ rw-data ]
call sub_1002d8d8
push [ rw-data ]
mov edi eax
mov [ ebp - 0x4 ] edi
call sub_1002d8d8
mov esi eax
pop ecx
pop ecx
cmp esi edi
jb r-xdata
xor eax eax
mov ebx esi
sub ebx edi
lea eax [ ebx + 0x4 ]
cmp eax 0x4
jb r-xdata
push edi
call sub_1003371e
mov edi eax
lea eax [ ebx + 0x4 ]
pop ecx
cmp edi eax
jae r-xdata
push [ ebp + 0x8 ]
call sub_1002d85d
mov [ esi ] eax
add esi 0x4
push esi
call sub_1002d85d
pop ecx
mov [ rw-data ] eax
mov eax [ ebp + 0x8 ]
pop ecx
jmp r-xdata
mov eax 0x800
cmp edi eax
jae r-xdata
pop edi
pop esi
pop ebx
leave
retn
add eax edi
cmp eax edi
jb r-xdata
mov eax edi
lea eax [ edi + 0x10 ]
cmp eax edi
jb r-xdata
push eax
push [ ebp - 0x4 ]
call sub_1002c9ce
pop ecx
pop ecx
test eax eax
jne r-xdata
push eax
push [ ebp - 0x4 ]
call sub_1002c9ce
pop ecx
pop ecx
test eax eax
je r-xdata
sar ebx 0x2
push eax
lea esi [ eax + ebx * 4 ]
call sub_1002d85d
pop ecx
mov [ rw-data ] eax
sub_1002acc3
mov edi edi
push esi
push 0x4
push 0x20
call sub_1002c982
mov esi eax
push esi
call sub_1002d85d
add esp 0xc
mov [ rw-data ] eax
mov [ rw-data ] eax
test esi esi
jne r-xdata
and [ esi ] 0x0
xor eax eax
pop esi
retn
push 0x18
pop eax
pop esi
retn
sub_1002acf4
push 0xc
push r--data
call sub_1002e7e4
call sub_10029774
and [ ebp - 0x4 ] 0x0
push [ ebp + 0x8 ]
call sub_1002ac09
pop ecx
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_1002ad2a
mov eax [ ebp - 0x1c ]
call sub_1002e829
retn
sub_1002ad47
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x10 ]
call sub_10029358
cmp [ ebp + 0x14 ] 0xffffffff
jge r-xdata
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call [ GetStringTypeW@IAT ]
xor eax eax
jmp r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
cmp [ ebp - 0x4 ] 0x0
je r-xdata
sub_1002ad85
mov edi edi
push ebp
mov ebp esp
sub esp 0x328
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
test [ rw-data ] 0x1
push esi
je r-xdata
call sub_10033477
test eax eax
je r-xdata
push 0xa
call sub_10030717
pop ecx
test [ rw-data ] 0x2
je r-xdata
push 0x16
call sub_10033484
pop ecx
push 0x3
call sub_1002998e
int3
mov [ ebp - 0x220 ] eax
mov [ ebp - 0x224 ] ecx
mov [ ebp - 0x228 ] edx
mov [ ebp - 0x22c ] ebx
mov [ ebp - 0x230 ] esi
mov [ ebp - 0x234 ] edi
mov [ ebp - 0x208 ] ss
mov [ ebp - 0x214 ] cs
mov [ ebp - 0x238 ] ds
mov [ ebp - 0x23c ] es
mov [ ebp - 0x240 ] fs
mov [ ebp - 0x244 ] gs
pushfd
pop [ ebp - 0x210 ]
mov esi [ ebp + 0x4 ]
lea eax [ ebp + 0x4 ]
mov [ ebp - 0x20c ] eax
mov [ ebp - 0x2d0 ] 0x10001
mov [ ebp - 0x218 ] esi
mov eax [ eax - 0x4 ]
push 0x50
mov [ ebp - 0x21c ] eax
lea eax [ ebp - 0x328 ]
push 0x0
push eax
call sub_10026630
lea eax [ ebp - 0x328 ]
add esp 0xc
mov [ ebp - 0x2d8 ] eax
lea eax [ ebp - 0x2d0 ]
push 0x0
mov [ ebp - 0x328 ] 0x40000015
mov [ ebp - 0x31c ] esi
mov [ ebp - 0x2d4 ] eax
call [ SetUnhandledExceptionFilter@IAT ]
lea eax [ ebp - 0x2d8 ]
push eax
call [ UnhandledExceptionFilter@IAT ]
sub_1002ae9c
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0xc ]
mov eax [ rw-data ]
mov edx [ ebp + 0x8 ]
and edx [ ebp + 0xc ]
not ecx
and ecx eax
or ecx edx
mov [ rw-data ] ecx
pop ebp
retn
sub_1002aebd
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0xbc ]
xor ebx ebx
push edi
cmp eax ebx
je r-xdata
mov eax [ esi + 0xc0 ]
cmp eax ebx
je r-xdata
cmp eax rw-data
je r-xdata
lea edi [ esi + 0xd4 ]
mov eax [ edi ]
cmp eax rw-data
je r-xdata
cmp [ eax ] ebx
jne r-xdata
mov eax [ esi + 0xb0 ]
cmp eax ebx
je r-xdata
lea edi [ esi + 0x50 ]
mov [ ebp + 0x8 ] 0x6
cmp [ eax + 0xb4 ] ebx
jne r-xdata
mov eax [ esi + 0xc4 ]
sub eax 0xfe
push eax
call sub_1002644d
mov eax [ esi + 0xcc ]
mov edi 0x80
sub eax edi
push eax
call sub_1002644d
mov eax [ esi + 0xd0 ]
sub eax edi
push eax
call sub_1002644d
push [ esi + 0xc0 ]
call sub_1002644d
add esp 0x10
cmp [ eax ] ebx
jne r-xdata
cmp [ edi - 0x4 ] ebx
je r-xdata
mov eax [ edi ]
cmp eax ebx
je r-xdata
push eax
call sub_10033bdc
push [ edi ]
call sub_1002644d
pop ecx
pop ecx
mov eax [ esi + 0xb8 ]
cmp eax ebx
je r-xdata
add edi 0x10
dec [ ebp + 0x8 ]
jne r-xdata
mov eax [ edi + 0x4 ]
cmp eax ebx
je r-xdata
cmp [ eax ] ebx
jne r-xdata
mov eax [ esi + 0xb4 ]
cmp eax ebx
je r-xdata
cmp [ eax ] ebx
jne r-xdata
cmp [ edi - 0x8 ] rw-data
je r-xdata
push esi
call sub_1002644d
pop ecx
pop edi
pop esi
pop ebx
pop ebp
retn
cmp [ eax ] ebx
jne r-xdata
push eax
call sub_1002644d
pop ecx
push [ esi + 0xb0 ]
call sub_1002644d
push [ esi + 0xbc ]
call sub_1002644d
pop ecx
pop ecx
cmp [ eax ] ebx
jne r-xdata
push eax
call sub_1002644d
push [ esi + 0xbc ]
call sub_10033ff9
pop ecx
pop ecx
push eax
call sub_1002644d
pop ecx
push eax
call sub_1002644d
push [ esi + 0xbc ]
call sub_10033dea
pop ecx
pop ecx
sub_1002b006
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi [ InterlockedIncrement@IAT ]
push edi
mov edi [ ebp + 0x8 ]
push edi
call esi
mov eax [ edi + 0xb0 ]
test eax eax
je r-xdata
mov eax [ edi + 0xb8 ]
test eax eax
je r-xdata
push eax
call esi
mov eax [ edi + 0xb4 ]
test eax eax
je r-xdata
push eax
call esi
mov eax [ edi + 0xc0 ]
test eax eax
je r-xdata
push eax
call esi
lea ebx [ edi + 0x50 ]
mov [ ebp + 0x8 ] 0x6
push eax
call esi
cmp [ ebx - 0x4 ] 0x0
je r-xdata
mov eax [ ebx ]
test eax eax
je r-xdata
add ebx 0x10
dec [ ebp + 0x8 ]
jne r-xdata
mov eax [ ebx + 0x4 ]
test eax eax
je r-xdata
push eax
call esi
cmp [ ebx - 0x8 ] rw-data
je r-xdata
mov eax [ edi + 0xd4 ]
add eax 0xb4
push eax
call esi
pop edi
pop esi
pop ebx
pop ebp
retn
push eax
call esi
sub_1002b095
mov edi edi
push ebp
mov ebp esp
push edi
mov edi [ ebp + 0x8 ]
test edi edi
je r-xdata
mov eax edi
pop edi
pop ebp
retn
push ebx
push esi
mov esi [ InterlockedDecrement@IAT ]
push edi
call esi
mov eax [ edi + 0xb0 ]
test eax eax
je r-xdata
mov eax [ edi + 0xb8 ]
test eax eax
je r-xdata
push eax
call esi
mov eax [ edi + 0xb4 ]
test eax eax
je r-xdata
push eax
call esi
mov eax [ edi + 0xc0 ]
test eax eax
je r-xdata
push eax
call esi
lea ebx [ edi + 0x50 ]
mov [ ebp + 0x8 ] 0x6
push eax
call esi
cmp [ ebx - 0x4 ] 0x0
je r-xdata
mov eax [ ebx ]
test eax eax
je r-xdata
add ebx 0x10
dec [ ebp + 0x8 ]
jne r-xdata
mov eax [ ebx + 0x4 ]
test eax eax
je r-xdata
push eax
call esi
cmp [ ebx - 0x8 ] rw-data
je r-xdata
mov eax [ edi + 0xd4 ]
add eax 0xb4
push eax
call esi
pop esi
pop ebx
push eax
call esi
sub_1002b12e
mov edi edi
push esi
mov esi ecx
test esi esi
je r-xdata
pop esi
retn
test eax eax
je r-xdata
cmp eax esi
je r-xdata
push edi
push 0x36
pop ecx
mov edi eax
[ edi ] [ esi ]
and [ eax ] 0x0
push eax
call sub_1002b006
pop ecx
pop edi
sub_1002b154
test edi edi
je r-xdata
xor eax eax
retn
test eax eax
je r-xdata
push esi
mov esi [ eax ]
cmp esi edi
je r-xdata
mov eax edi
pop esi
retn
push edi
mov [ eax ] edi
call sub_1002b006
pop ecx
test esi esi
je r-xdata
push esi
call sub_1002b095
cmp [ esi ] 0x0
pop ecx
jne r-xdata
cmp esi rw-data
je r-xdata
push esi
call sub_1002aebd
pop ecx
sub_1002b192
push 0xc
push r--data
call sub_1002e7e4
call sub_1002db24
mov esi eax
mov eax [ rw-data ]
test [ esi + 0x70 ] eax
je r-xdata
push 0xc
call sub_1002ebde
pop ecx
and [ ebp - 0x4 ] 0x0
lea eax [ esi + 0x6c ]
mov edi [ rw-data ]
call sub_1002b154
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_1002b1fc
jmp r-xdata
cmp [ esi + 0x6c ] 0x0
je r-xdata
test esi esi
jne r-xdata
call sub_1002db24
mov esi [ eax + 0x6c ]
mov eax esi
call sub_1002e829
retn
push 0x20
call sub_10029708
pop ecx
sub_1002b208
mov eax [ rw-data ]
mov ecx [ eax + 0x4 ]
mov [ rw-data ] ecx
mov ecx [ eax + 0x8 ]
mov [ rw-data ] ecx
mov ecx [ eax + 0xa8 ]
mov [ rw-data ] ecx
mov ecx [ eax + 0xd4 ]
mov [ rw-data ] ecx
mov ecx [ eax + 0xbc ]
mov [ rw-data ] ecx
mov ecx [ eax + 0xc8 ]
mov [ rw-data ] ecx
mov eax [ eax + 0xac ]
mov [ rw-data ] eax
retn
sub_1002b25b
push 0x8
push r--data
call sub_1002e7e4
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
call sub_1002e829
retn
push 0xd
call sub_1002ebde
pop ecx
and [ ebp - 0x4 ] 0x0
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_1002b308
cmp [ esi ] 0x0
je r-xdata
push eax
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
mov eax 0xbaadf00d
mov [ esi ] eax
mov [ esi + 0x4 ] eax
push esi
call sub_1002644d
pop ecx
push 0xc
call sub_1002ebde
pop ecx
mov [ ebp - 0x4 ] 0x1
push [ esi ]
call sub_1002b095
pop ecx
mov eax [ esi ]
test eax eax
je r-xdata
mov eax [ esi + 0x4 ]
cmp eax rw-data
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_1002b314
cmp [ eax ] 0x0
jne r-xdata
push eax
call sub_1002644d
pop ecx
cmp eax rw-data
je r-xdata
push eax
call sub_1002aebd
pop ecx
sub_1002b320
mov edi edi
push ebp
mov ebp esp
push ebx
push edi
mov edi [ ebp + 0x10 ]
xor ebx ebx
cmp edi ebx
jle r-xdata
pop edi
pop ebx
pop ebp
retn
push esi
lea esi [ ebp + 0x10 ]
dec edi
jne r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_100260a1
add esp 0x14
add esi 0x4
push [ esi ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_10035367
add esp 0xc
test eax eax
je r-xdata
pop esi
sub_1002b360
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
push 0x90
xor ebx ebx
push ebx
push edi
call sub_10026630
mov esi [ ebp + 0xc ]
mov al [ esi ]
add esp 0xc
test al al
jne r-xdata
cmp al 0x2e
jne r-xdata
xor eax eax
jmp r-xdata
push r--data
push esi
mov [ ebp + 0xc ] ebx
call sub_100265d0
cmp eax ebx
jmp r-xdata
lea eax [ esi + 0x1 ]
cmp [ eax ] bl
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
pop ecx
pop ecx
jne r-xdata
push 0xf
push eax
lea eax [ edi + 0x80 ]
push 0x10
push eax
call sub_100353db
add esp 0x10
test eax eax
je r-xdata
cmp [ ebp + 0xc ] 0x0
lea edi [ eax + esi ]
mov bl [ edi ]
jne r-xdata
or eax 0xffffffff
mov [ edi + 0x8f ] bl
jmp r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_100260a1
add esp 0x14
cmp [ ebp + 0xc ] 0x1
jne r-xdata
cmp eax 0x40
jae r-xdata
cmp [ ebp + 0xc ] 0x2
jne r-xdata
cmp eax 0x40
jae r-xdata
cmp bl 0x2e
je r-xdata
cmp eax 0x10
jae r-xdata
cmp bl 0x5f
je r-xdata
push eax
push esi
push 0x40
push [ ebp + 0x8 ]
jmp r-xdata
test bl bl
je r-xdata
push eax
mov eax [ ebp + 0x8 ]
push esi
push 0x40
add eax 0x40
jmp r-xdata
call sub_100353db
add esp 0x10
test eax eax
je r-xdata
push eax
mov eax [ ebp + 0x8 ]
push esi
push 0x10
sub eax 0xffffff80
cmp bl 0x2c
jne r-xdata
push eax
cmp bl 0x2c
je r-xdata
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_100260a1
add esp 0x14
test bl bl
je r-xdata
inc [ ebp + 0xc ]
lea esi [ edi + 0x1 ]
push r--data
push esi
call sub_100265d0
test eax eax
sub_1002b489
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x10 ]
push esi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_1002d40c
add esp 0xc
xor ebx ebx
test eax eax
je r-xdata
lea eax [ esi + 0x40 ]
cmp [ eax ] bl
je r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_100260a1
add esp 0x14
lea eax [ esi + 0x80 ]
cmp [ eax ] bl
pop esi
pop ebx
je r-xdata
push eax
push r--data
push 0x2
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_1002b320
add esp 0x14
pop ebp
retn
push eax
push r--data
push 0x2
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_1002b320
add esp 0x14
sub_1002b4f6
mov edi edi
push ebp
mov ebp esp
sub esp 0x14
push ebx
xor ebx ebx
inc ebx
push 0x355
mov [ ebp - 0x10 ] ebx
call sub_1002c93d
pop ecx
mov [ ebp - 0x14 ] eax
test eax eax
je r-xdata
pop ebx
leave
retn
push edi
lea edi [ eax + 0x4 ]
mov [ edi ] 0x0
mov [ eax ] ebx
mov [ ebp - 0x8 ] ebx
lea ebx [ esi + 0x10 ]
lea eax [ ebx + 0x48 ]
push [ eax ]
mov [ ebp - 0xc ] eax
push r--data
push [ r--data ]
push 0x3
push 0x351
push edi
call sub_1002b320
mov eax [ ebp - 0xc ]
add esp 0x18
mov [ ebp - 0xc ] eax
mov [ ebp - 0x4 ] r--data
push [ ebx + 0x58 ]
mov eax [ ebp - 0xc ]
push [ eax ]
call sub_100292d0
pop ecx
pop ecx
test eax eax
je r-xdata
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_100260a1
add esp 0x14
inc [ ebp - 0x8 ]
mov eax [ ebp - 0x8 ]
add [ ebp - 0x4 ] 0xc
shl eax 0x4
lea ebx [ eax + esi ]
lea eax [ ebx + 0x48 ]
push [ eax ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
push r--data
push [ eax ]
push 0x3
push 0x351
push edi
call sub_1002b320
add esp 0x18
cmp [ ebp - 0x4 ] r--data
jl r-xdata
and [ ebp - 0x10 ] 0x0
push r--data
push 0x351
push edi
call sub_10035367
add esp 0xc
test eax eax
je r-xdata
cmp [ ebp - 0x10 ] 0x0
jne r-xdata
push [ ebp - 0x14 ]
call sub_1002644d
mov eax [ esi + 0x50 ]
mov edi [ InterlockedDecrement@IAT ]
xor ebx ebx
pop ecx
cmp eax ebx
je r-xdata
mov eax [ esi + 0x50 ]
mov ebx [ InterlockedDecrement@IAT ]
test eax eax
je r-xdata
mov eax [ esi + 0x54 ]
cmp eax ebx
je r-xdata
push eax
call edi
test eax eax
jne r-xdata
mov eax [ esi + 0x54 ]
test eax eax
je r-xdata
push eax
call ebx
test eax eax
jne r-xdata
mov eax [ esi + 0x68 ]
mov [ esi + 0x54 ] ebx
mov [ esi + 0x4c ] ebx
mov [ esi + 0x50 ] ebx
mov [ esi + 0x48 ] ebx
push eax
call edi
test eax eax
jne r-xdata
push [ esi + 0x50 ]
call sub_1002644d
pop ecx
mov eax [ ebp - 0x14 ]
and [ esi + 0x54 ] 0x0
and [ esi + 0x4c ] 0x0
mov [ esi + 0x50 ] eax
mov [ esi + 0x48 ] edi
mov eax edi
jmp r-xdata
push eax
call ebx
test eax eax
jne r-xdata
push [ esi + 0x50 ]
call sub_1002644d
pop ecx
push [ esi + 0x54 ]
call sub_1002644d
pop ecx
pop edi
push [ esi + 0x54 ]
call sub_1002644d
pop ecx
sub_1002b673
mov edi edi
push ebp
mov ebp esp
sub esp 0xb4
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0xc ]
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi [ ebp + 0x14 ]
mov [ ebp - 0x9c ] eax
mov eax [ ebp + 0x18 ]
mov [ ebp - 0xa4 ] edi
mov [ ebp - 0xa0 ] eax
call sub_1002db24
add eax 0x9c
lea ecx [ eax + 0x28 ]
mov [ ebp - 0xac ] ecx
lea ecx [ eax + 0x2c ]
lea ebx [ eax + 0x20 ]
add eax 0xaf
mov [ ebp - 0xa8 ] ecx
mov [ ebp - 0x98 ] eax
test esi esi
je r-xdata
xor eax eax
cmp [ ebp - 0x9c ] 0x0
je r-xdata
cmp [ ebp + 0x10 ] 0x0
je r-xdata
cmp [ esi ] 0x43
jne r-xdata
push esi
call sub_10025d30
mov edi 0x83
pop ecx
mov [ ebp - 0xb0 ] eax
cmp eax edi
jae r-xdata
cmp [ esi + 0x1 ] 0x0
jne r-xdata
and [ ebp - 0xb4 ] 0x0
lea eax [ ebp - 0x94 ]
push esi
push eax
call sub_1002b360
pop ecx
pop ecx
test eax eax
jne r-xdata
push esi
push [ ebp - 0x98 ]
call sub_100292d0
pop ecx
pop ecx
test eax eax
je r-xdata
push r--data
push [ ebp + 0x10 ]
push [ ebp - 0x9c ]
call sub_1002d40c
add esp 0xc
xor esi esi
test eax eax
je r-xdata
lea eax [ ebp - 0x94 ]
push eax
push ebx
push eax
call sub_10035a4b
add esp 0xc
test eax eax
je r-xdata
xor esi esi
push esi
push [ ebp - 0xa8 ]
call sub_100292d0
pop ecx
pop ecx
test eax eax
je r-xdata
cmp edi esi
je r-xdata
push esi
push esi
push esi
push esi
push esi
call sub_100260a1
add esp 0x14
movzx eax [ ebx + 0x4 ]
mov ecx [ ebp - 0xac ]
mov [ ecx ] eax
lea eax [ ebp - 0x94 ]
push eax
push edi
push [ ebp - 0x98 ]
call sub_1002b489
add esp 0xc
cmp [ esi ] 0x0
je r-xdata
cmp [ ebp - 0xa0 ] esi
je r-xdata
push 0x6
push ebx
push [ ebp - 0xa4 ]
call sub_10028b40
add esp 0xc
mov eax [ ebp - 0xa0 ]
cmp eax esi
je r-xdata
xor eax eax
mov [ edi ] ax
mov [ edi + 0x2 ] ax
mov [ edi + 0x4 ] ax
mov eax [ ebp - 0xb4 ]
mov esi r--data
mov eax [ ebp - 0xb0 ]
cmp eax edi
jb r-xdata
push [ ebp - 0x98 ]
push [ ebp + 0x10 ]
push [ ebp - 0x9c ]
call sub_1002d40c
add esp 0xc
test eax eax
je r-xdata
push 0x4
push [ ebp - 0xac ]
push [ ebp - 0xa0 ]
call sub_10028b40
add esp 0xc
mov eax [ ebp - 0x9c ]
jmp r-xdata
mov [ eax ] esi
xor esi esi
push esi
push esi
push esi
push esi
push esi
call sub_100260a1
add esp 0x14
jmp r-xdata
inc eax
push eax
push esi
push edi
push [ ebp - 0xa8 ]
call sub_100353db
add esp 0x10
test eax eax
je r-xdata
mov eax [ ebp - 0x98 ]
jmp r-xdata
push esi
push esi
push esi
push esi
push esi
call sub_100260a1
add esp 0x14
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_10025c8d
leave
retn
cmp [ ebp - 0xa4 ] esi
je r-xdata
sub_1002b8a4
mov edi edi
push ebp
mov ebp esp
sub esp 0x1c4
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push edi
mov ebx ecx
call sub_1002db24
push [ ebp + 0x8 ]
mov edi eax
lea eax [ ebp - 0x198 ]
push eax
lea eax [ ebp - 0x1b0 ]
push eax
push 0x83
lea eax [ ebp - 0x88 ]
push eax
push ebx
add edi 0x1d0
call sub_1002b673
add esp 0x18
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
shl eax 0x4
lea ebx [ eax + esi ]
push [ ebx + 0x48 ]
lea eax [ ebp - 0x88 ]
push eax
call sub_100292d0
pop ecx
pop ecx
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebx + 0x48 ]
lea eax [ ebp - 0x88 ]
push eax
call sub_10025d30
add eax 0x5
push eax
mov [ ebp - 0x18c ] eax
call sub_1002c93d
pop ecx
pop ecx
mov [ ebp - 0x190 ] eax
test eax eax
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop ebx
call sub_10025c8d
leave
retn
mov eax [ ebx + 0x48 ]
mov ecx [ ebp + 0x8 ]
mov [ ebp - 0x1a4 ] eax
lea eax [ esi + ecx * 4 + 0xc ]
add ecx 0x6
imul ecx ecx 0x6
mov [ ebp - 0x194 ] eax
mov eax [ eax ]
mov [ ebp - 0x1a8 ] eax
lea eax [ ecx + esi ]
push 0x6
push eax
mov [ ebp - 0x19c ] eax
lea eax [ ebp - 0x1c4 ]
push eax
call sub_10028b40
mov eax [ esi + 0x4 ]
lea ecx [ ebp - 0x88 ]
push ecx
mov ecx [ ebp - 0x18c ]
mov [ ebp - 0x1b4 ] eax
mov eax [ ebp - 0x190 ]
add ecx 0xfffffffc
add eax 0x4
push ecx
push eax
call sub_1002d40c
add esp 0x18
test eax eax
je r-xdata
mov eax [ ebp - 0x190 ]
mov ecx [ ebp - 0x194 ]
add eax 0x4
mov [ ebx + 0x48 ] eax
movzx eax [ ebp - 0x1b0 ]
mov [ ecx ] eax
push 0x6
lea eax [ ebp - 0x1b0 ]
push eax
push [ ebp - 0x19c ]
call sub_10028b40
add esp 0xc
cmp [ ebp + 0x8 ] 0x2
jne r-xdata
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_100260a1
add esp 0x14
cmp [ ebp + 0x8 ] 0x1
jne r-xdata
mov eax [ ebp - 0x198 ]
and [ ebp - 0x18c ] 0x0
mov [ esi + 0x4 ] eax
mov eax [ edi + 0x24 ]
mov ecx [ edi + 0x20 ]
mov [ ebp - 0x19c ] eax
mov eax edi
mov eax [ ebp + 0x8 ]
imul eax eax 0xc
push esi
call [ eax + r--data ]
pop ecx
test eax eax
je r-xdata
mov eax [ ebp - 0x198 ]
mov [ esi + 0x8 ] eax
mov eax [ ebp - 0x18c ]
test eax eax
je r-xdata
mov edx [ eax ]
inc [ ebp - 0x18c ]
mov [ eax ] ecx
mov ecx [ ebp - 0x19c ]
mov [ ebp - 0x1bc ] edx
mov edx [ eax + 0x4 ]
mov [ eax + 0x4 ] ecx
mov ecx [ ebp - 0x1bc ]
add eax 0x8
cmp [ ebp - 0x18c ] 0x5
mov [ ebp - 0x19c ] edx
jl r-xdata
cmp [ ebp - 0x1a4 ] rw-data
je r-xdata
mov eax [ ebp - 0x1a4 ]
push [ ebp - 0x190 ]
mov [ ebx + 0x48 ] eax
call sub_1002644d
mov eax [ ebp - 0x1a8 ]
pop ecx
mov ecx [ ebp - 0x194 ]
mov [ ecx ] eax
mov eax [ ebp - 0x1b4 ]
mov [ esi + 0x4 ] eax
jmp r-xdata
cmp [ ebp - 0x18c ] 0x5
jne r-xdata
lea eax [ edi + eax * 8 ]
mov edx [ eax ]
mov [ edi ] edx
mov edx [ eax + 0x4 ]
mov [ edi + 0x4 ] edx
mov [ eax ] ecx
mov ecx [ ebp - 0x19c ]
mov [ eax + 0x4 ] ecx
mov edx [ esi + 0x4 ]
cmp edx [ eax ]
je r-xdata
jmp r-xdata
mov ecx [ ebp + 0x8 ]
mov eax [ ebp - 0x190 ]
add ecx 0x5
shl ecx 0x4
mov [ eax ] 0x1
mov [ ecx + esi ] eax
mov eax [ ebp + 0x8 ]
add eax 0x5
shl eax 0x4
lea edi [ eax + esi ]
push [ edi ]
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
mov eax [ edi + 0x4 ]
mov [ esi + 0xa8 ] eax
push 0x1
push [ esi + 0x14 ]
lea eax [ ebp - 0x188 ]
push [ esi + 0x4 ]
push eax
push 0x7f
push r--data
push 0x1
push 0x0
call sub_10035df6
add esp 0x20
test eax eax
je r-xdata
push [ edi ]
call sub_1002644d
push [ ebx + 0x54 ]
call sub_1002644d
and [ ebx + 0x4c ] 0x0
pop ecx
pop ecx
and [ edi + 0x4 ] 0x0
xor eax eax
mov ecx 0x1ff
and [ ebp + eax * 2 - 0x188 ] cx
inc eax
cmp eax 0x7f
jb r-xdata
push 0xfe
push [ rw-data ]
lea eax [ ebp - 0x188 ]
push eax
call sub_100266aa
add esp 0xc
neg eax
sbb eax eax
inc eax
mov [ edi + 0x4 ] eax
jmp r-xdata
mov eax [ esi + 0x4 ]
mov [ edi ] eax
sub_1002bba6
mov edi edi
push ebp
mov ebp esp
sub esp 0x98
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebx
push esi
xor ebx ebx
mov esi edx
push edi
mov [ ebp - 0x98 ] esi
cmp eax ebx
je r-xdata
mov [ ebp - 0x90 ] 0x1
mov [ ebp - 0x8c ] ebx
cmp ecx ebx
je r-xdata
cmp ecx ebx
je r-xdata
call sub_1002b4f6
cmp [ ecx ] 0x4c
jne r-xdata
shl eax 0x4
mov eax [ eax + esi + 0x48 ]
jmp r-xdata
push eax
call sub_1002b8a4
pop ecx
jmp r-xdata
push ebx
push ebx
push ebx
push 0x83
lea eax [ ebp - 0x88 ]
push eax
push ecx
call sub_1002b673
add esp 0x18
cmp eax ebx
je r-xdata
cmp [ ecx + 0x1 ] 0x43
jne r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_10025c8d
leave
retn
lea edi [ esi + 0x48 ]
cmp [ ecx + 0x2 ] 0x5f
jne r-xdata
inc ebx
add edi 0x10
cmp ebx 0x5
jle r-xdata
push [ edi ]
lea eax [ ebp - 0x88 ]
push eax
call sub_100292d0
pop ecx
pop ecx
test eax eax
je r-xdata
mov edi ecx
test ebx ebx
je r-xdata
xor eax eax
cmp [ ebp - 0x90 ] eax
jne r-xdata
inc [ ebp - 0x8c ]
push ebx
lea ecx [ ebp - 0x88 ]
call sub_1002b8a4
pop ecx
test eax eax
jne r-xdata
xor eax eax
jmp r-xdata
sub eax edi
mov [ ebp - 0x90 ] eax
je r-xdata
cmp [ ebp - 0x8c ] eax
je r-xdata
and [ ebp - 0x90 ] eax
jmp r-xdata
cmp [ ebx ] 0x3b
je r-xdata
mov [ ebp - 0x94 ] 0x1
mov esi r--data
jmp r-xdata
push eax
push edi
push [ esi ]
call sub_10035e38
add esp 0xc
test eax eax
jne r-xdata
inc [ ebp - 0x94 ]
add esi 0xc
cmp esi r--data
jle r-xdata
push [ esi ]
call sub_10025d30
pop ecx
cmp [ ebp - 0x90 ] eax
je r-xdata
mov eax [ ebp - 0x90 ]
inc ebx
push r--data
push ebx
call sub_100265d0
mov edi eax
xor esi esi
pop ecx
pop ecx
cmp edi esi
jne r-xdata
cmp [ ebp - 0x94 ] 0x5
jg r-xdata
cmp [ ebx ] 0x3b
jne r-xdata
add edi ebx
cmp [ edi ] 0x0
je r-xdata
push edi
push ebx
lea eax [ ebp - 0x88 ]
push 0x83
push eax
call sub_100353db
add esp 0x10
test eax eax
je r-xdata
xor eax eax
cmp [ ebp - 0x8c ] eax
je r-xdata
inc edi
cmp [ edi ] 0x0
jne r-xdata
push [ ebp - 0x94 ]
mov esi [ ebp - 0x98 ]
lea ecx [ ebp - 0x88 ]
mov [ ebp + edi - 0x88 ] 0x0
call sub_1002b8a4
pop ecx
test eax eax
je r-xdata
push esi
push esi
push esi
push esi
push esi
call sub_100260a1
add esp 0x14
mov esi [ ebp - 0x98 ]
jmp r-xdata
push r--data
push edi
call sub_10035f00
mov ebx eax
pop ecx
pop ecx
test ebx ebx
je r-xdata
inc [ ebp - 0x8c ]
sub_1002bdc1
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x5
push esi
push edi
ja r-xdata
xor eax eax
cmp [ ebp + 0xc ] 0x0
je r-xdata
xor edi edi
inc edi
push edi
push 0x8
call sub_1002c982
mov esi eax
pop ecx
pop ecx
test esi esi
jne r-xdata
push edi
push 0xd8
call sub_1002c982
pop ecx
pop ecx
mov [ esi ] eax
test eax eax
jne r-xdata
call sub_1002c068
mov [ eax ] 0xc
push edi
push 0x220
call sub_1002c982
pop ecx
pop ecx
mov [ esi + 0x4 ] eax
test eax eax
jne r-xdata
push esi
call sub_1002644d
mov eax [ esi ]
mov ecx rw-data
call sub_1002b12e
push [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
mov edx [ esi ]
call sub_1002bba6
pop ecx
test eax eax
jne r-xdata
push [ esi ]
call sub_1002644d
push esi
call sub_1002644d
pop ecx
jmp r-xdata
push [ esi + 0x4 ]
mov eax [ esi ]
push [ eax + 0x4 ]
call sub_10032dc8
pop ecx
pop ecx
test eax eax
je r-xdata
push [ esi ]
call sub_1002b095
push [ esi ]
call sub_1002aebd
push esi
call sub_1002644d
add esp 0xc
jmp r-xdata
pop ecx
jmp r-xdata
mov eax [ esi + 0x4 ]
mov [ eax ] edi
mov eax [ esi + 0x4 ]
mov [ eax ] edi
push [ esi + 0x4 ]
call sub_1002644d
push [ esi ]
call sub_1002b095
push [ esi ]
call sub_1002aebd
push esi
call sub_1002644d
add esp 0x10
xor esi esi
jmp r-xdata
pop edi
pop esi
pop ebp
retn
mov eax esi
jmp r-xdata
sub_1002beb6
push 0x14
push r--data
call sub_1002e7e4
xor ebx ebx
mov [ ebp - 0x20 ] ebx
cmp [ ebp + 0x8 ] 0x5
jbe r-xdata
call sub_1002db24
mov esi eax
mov [ ebp - 0x1c ] esi
call sub_1002b192
or [ esi + 0x70 ] 0x10
mov [ ebp - 0x4 ] ebx
push 0x1
push 0xd8
call sub_1002c982
pop ecx
pop ecx
mov edi eax
mov [ ebp - 0x24 ] edi
cmp edi ebx
je r-xdata
call sub_1002c068
mov [ eax ] 0x16
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_100261c9
add esp 0x14
xor eax eax
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_1002c021
mov eax [ ebp - 0x20 ]
push 0xc
call sub_1002ebde
pop ecx
mov [ ebp - 0x4 ] 0x1
mov ecx [ esi + 0x6c ]
mov eax edi
call sub_1002b12e
mov [ ebp - 0x4 ] ebx
call sub_1002bfe4
push [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
mov edx edi
call sub_1002bba6
pop ecx
mov [ ebp - 0x20 ] eax
cmp eax ebx
je r-xdata
call sub_1002e829
retn
push edi
call sub_1002b095
push edi
call sub_1002aebd
pop ecx
pop ecx
cmp [ ebp + 0xc ] ebx
je r-xdata
push 0xc
call sub_1002ebde
pop ecx
mov [ ebp - 0x4 ] 0x2
lea ebx [ esi + 0x6c ]
mov eax ebx
call sub_1002b154
push edi
call sub_1002b095
pop ecx
test [ esi + 0x70 ] 0x2
jne r-xdata
push rw-data
push [ ebp + 0xc ]
call sub_100292d0
pop ecx
pop ecx
test eax eax
je r-xdata
and [ ebp - 0x4 ] 0x0
call sub_1002bff0
jmp r-xdata
test [ rw-data ] 0x1
jne r-xdata
mov [ rw-data ] 0x1
mov edi [ ebx ]
mov eax rw-data
call sub_1002b154
push 0x18
mov eax [ rw-data ]
add eax 0xc
push eax
push rw-data
call sub_10028b40
add esp 0xc
call sub_1002b208
sub_1002c026
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
xor ecx ecx
mov eax [ ecx * 8 + rw-data ]
pop ebp
retn
inc ecx
cmp ecx 0x2d
jb r-xdata
cmp eax [ ecx * 8 + rw-data ]
je r-xdata
lea ecx [ eax - 0x13 ]
cmp ecx 0x11
ja r-xdata
add eax 0xffffff44
push 0xe
pop ecx
cmp ecx eax
sbb eax eax
and eax ecx
add eax 0x8
pop ebp
retn
push 0xd
pop eax
pop ebp
retn
sub_1002c08e
mov edi edi
push ebp
mov ebp esp
push esi
call sub_1002c07b
mov ecx [ ebp + 0x8 ]
push ecx
mov [ eax ] ecx
call sub_1002c026
pop ecx
mov esi eax
call sub_1002c068
mov [ eax ] esi
pop esi
pop ebp
retn
sub_1002c0b1
mov edi edi
push ebp
mov ebp esp
sub esp 0x4c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
xor ebx ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
mov [ ebp - 0x2c ] ebx
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x20 ] ebx
mov [ ebp - 0x28 ] ebx
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x4c ] esi
mov [ ebp - 0x48 ] ebx
cmp [ esi + 0x14 ] ebx
je r-xdata
lea edi [ esi + 0xc0 ]
mov eax [ edi ]
cmp eax ebx
je r-xdata
lea eax [ esi + 0x4 ]
cmp [ eax ] ebx
jne r-xdata
mov [ edi ] ebx
mov [ esi + 0xc4 ] ebx
mov [ esi + 0xc8 ] r--data
mov [ esi + 0xcc ] r--data
mov [ esi + 0xd0 ] r--data
mov [ esi + 0xac ] 0x1
xor eax eax
push eax
call [ InterlockedDecrement@IAT ]
push 0x4
call sub_1002c93d
push 0x2
mov edi 0x180
push edi
mov [ ebp - 0x2c ] eax
call sub_1002c982
push 0x1
push edi
mov [ ebp - 0x1c ] eax
call sub_1002c982
push 0x1
push edi
mov [ ebp - 0x20 ] eax
call sub_1002c982
push 0x1
push 0x101
mov [ ebp - 0x28 ] eax
call sub_1002c982
add esp 0x24
mov [ ebp - 0x24 ] eax
cmp [ ebp - 0x2c ] ebx
je r-xdata
push eax
movzx eax [ esi + 0x30 ]
push 0x1004
push eax
lea eax [ ebp - 0x4c ]
push ebx
push eax
call sub_100308fb
add esp 0x14
test eax eax
jne r-xdata
push [ ebp - 0x2c ]
call sub_1002644d
push [ ebp - 0x1c ]
call sub_1002644d
push [ ebp - 0x20 ]
call sub_1002644d
push [ ebp - 0x28 ]
call sub_1002644d
xor ebx ebx
add esp 0x10
inc ebx
jmp r-xdata
cmp [ ebp - 0x1c ] ebx
je r-xdata
push [ ebp - 0x24 ]
call sub_1002644d
pop ecx
mov eax ebx
jmp r-xdata
cmp eax ebx
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_10025c8d
leave
retn
cmp [ ebp - 0x20 ] ebx
je r-xdata
cmp [ ebp - 0x28 ] ebx
je r-xdata
mov eax [ ebp - 0x2c ]
mov [ eax ] ebx
xor eax eax
mov ecx [ ebp - 0x24 ]
mov [ eax + ecx ] al
inc eax
cmp eax 0x100
jl r-xdata
lea eax [ ebp - 0x18 ]
push eax
push [ esi + 0x4 ]
call [ GetCPInfo@IAT ]
test eax eax
je r-xdata
cmp [ ebp - 0x18 ] 0x5
ja r-xdata
movzx eax [ ebp - 0x18 ]
cmp eax 0x1
mov [ ebp - 0x30 ] eax
jle r-xdata
mov eax [ ebp - 0x1c ]
push ebx
push ebx
push [ esi + 0x4 ]
add eax 0x100
push eax
push 0x100
push [ ebp - 0x24 ]
mov [ ebp - 0x40 ] eax
push 0x1
push ebx
call sub_10035df6
add esp 0x20
test eax eax
je r-xdata
cmp [ ebp - 0x12 ] bl
je r-xdata
mov ecx [ ebp - 0x20 ]
mov eax [ ebp - 0x24 ]
push ebx
push [ esi + 0x4 ]
mov edi 0xff
push edi
add ecx 0x81
push ecx
push edi
inc eax
push eax
push 0x100
push [ esi + 0x14 ]
push ebx
call sub_1002c8cf
add esp 0x24
test eax eax
je r-xdata
lea eax [ ebp - 0x11 ]
mov eax [ ebp - 0x28 ]
push ebx
push [ esi + 0x4 ]
add eax 0x81
push edi
push eax
mov eax [ ebp - 0x24 ]
push edi
inc eax
push eax
push 0x200
push [ esi + 0x14 ]
push ebx
call sub_1002c8cf
add esp 0x24
test eax eax
je r-xdata
movzx edi [ eax - 0x1 ]
movzx ecx cl
jmp r-xdata
mov eax [ ebp - 0x1c ]
mov edi [ ebp - 0x20 ]
lea ecx [ eax + 0xfe ]
xor edx edx
cmp [ ebp - 0x30 ] 0x1
mov [ ecx ] dx
mov edx [ ebp - 0x28 ]
mov [ ebp - 0x3c ] ecx
lea ecx [ edi + 0x80 ]
mov [ edi + 0x7f ] bl
mov [ edx + 0x7f ] bl
mov [ ecx ] bl
mov [ ebp - 0x44 ] ecx
lea ecx [ edx + 0x80 ]
mov [ ebp - 0x38 ] ecx
mov [ ecx ] bl
jle r-xdata
cmp edi ecx
jle r-xdata
push 0xfe
lea ecx [ eax + 0x200 ]
push ecx
push eax
call sub_10028b40
push 0x7f
lea eax [ edi + 0x100 ]
push eax
push edi
call sub_10028b40
mov eax [ ebp - 0x28 ]
push 0x7f
lea ecx [ eax + 0x100 ]
push ecx
push eax
call sub_10028b40
mov eax [ esi + 0xc0 ]
add esp 0x24
cmp eax ebx
je r-xdata
cmp [ ebp - 0x12 ] bl
je r-xdata
mov ecx [ ebp - 0x24 ]
mov [ edi + ecx ] 0x20
movzx ecx [ eax ]
inc edi
inc eax
inc eax
cmp [ eax - 0x1 ] bl
jne r-xdata
mov eax [ ebp - 0x2c ]
mov [ eax ] 0x1
mov [ esi + 0xc0 ] eax
mov eax [ ebp - 0x40 ]
mov [ esi + 0xc8 ] eax
mov eax [ ebp - 0x3c ]
mov [ esi + 0xc4 ] eax
mov eax [ ebp - 0x44 ]
mov [ esi + 0xcc ] eax
mov eax [ ebp - 0x38 ]
mov [ esi + 0xd0 ] eax
mov eax [ ebp - 0x30 ]
mov [ esi + 0xac ] eax
push eax
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
lea ecx [ ebp - 0x11 ]
mov [ ebp - 0x1c ] ecx
mov cl [ eax ]
cmp cl bl
je r-xdata
mov eax [ esi + 0xc4 ]
sub eax 0xfe
push eax
call sub_1002644d
mov eax [ esi + 0xcc ]
mov edi 0x80
sub eax edi
push eax
call sub_1002644d
mov eax [ esi + 0xd0 ]
sub eax edi
push eax
call sub_1002644d
push [ esi + 0xc0 ]
call sub_1002644d
add esp 0x10
movzx ecx [ ecx - 0x1 ]
movzx edx dl
cmp ecx edx
mov [ ebp - 0x20 ] ecx
jg r-xdata
mov ecx [ ebp - 0x1c ]
inc ecx
inc ecx
mov [ ebp - 0x1c ] ecx
cmp [ ecx - 0x1 ] bl
jne r-xdata
lea ecx [ eax + ecx * 2 + 0x100 ]
jmp r-xdata
mov dl [ ecx ]
cmp dl bl
je r-xdata
inc [ ebp - 0x20 ]
mov edx 0x8000
mov [ ecx ] dx
inc ecx
inc ecx
mov [ ebp - 0x34 ] ecx
mov ecx [ ebp - 0x1c ]
movzx ecx [ ecx ]
cmp [ ebp - 0x20 ] ecx
jle r-xdata
mov ecx [ ebp - 0x34 ]
sub_1002c50a
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
pop ebp
retn
sub eax 0x8
cmp [ eax ] 0xdddd
jne r-xdata
push eax
call sub_1002644d
pop ecx
sub_1002c52a
mov edi edi
push ebp
mov ebp esp
sub esp 0x14
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
xor ebx ebx
push edi
mov esi ecx
cmp [ rw-data ] ebx
jne r-xdata
cmp [ ebp + 0x14 ] ebx
jle r-xdata
push ebx
push ebx
xor edi edi
inc edi
push edi
push r--data
push 0x100
push ebx
call [ LCMapStringW@IAT ]
test eax eax
je r-xdata
mov eax [ rw-data ]
cmp eax 0x2
je r-xdata
mov ecx [ ebp + 0x14 ]
mov eax [ ebp + 0x10 ]
call [ GetLastError@IAT ]
cmp eax 0x78
jne r-xdata
mov [ rw-data ] edi
jmp r-xdata
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x10 ] ebx
cmp [ ebp + 0x8 ] ebx
jne r-xdata
cmp eax ebx
je r-xdata
mov eax [ ebp + 0x14 ]
sub eax ecx
dec eax
cmp eax [ ebp + 0x14 ]
jge r-xdata
inc eax
cmp ecx ebx
jne r-xdata
mov [ rw-data ] 0x2
cmp [ ebp + 0x20 ] ebx
jne r-xdata
mov eax [ esi ]
mov eax [ eax + 0x14 ]
mov [ ebp + 0x8 ] eax
cmp eax 0x1
jne r-xdata
mov [ ebp + 0x14 ] eax
inc eax
dec ecx
cmp [ eax ] bl
je r-xdata
or ecx 0xffffffff
push [ ebp + 0x8 ]
call sub_10035f40
pop ecx
mov [ ebp - 0x14 ] eax
cmp eax 0xffffffff
jne r-xdata
mov eax [ esi ]
mov eax [ eax + 0x4 ]
mov [ ebp + 0x20 ] eax
xor eax eax
jmp r-xdata
mov [ ebp - 0x8 ] ebx
cmp [ ebp + 0x20 ] ebx
jne r-xdata
cmp eax [ ebp + 0x20 ]
je r-xdata
lea esp [ ebp - 0x20 ]
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10025c8d
leave
retn
mov esi [ MultiByteToWideChar@IAT ]
xor eax eax
cmp [ ebp + 0x24 ] ebx
push ebx
push ebx
push [ ebp + 0x14 ]
setne al
push [ ebp + 0x10 ]
lea eax [ eax * 8 + 0x1 ]
push eax
push [ ebp + 0x20 ]
call esi
mov edi eax
cmp edi ebx
je r-xdata
mov eax [ esi ]
mov eax [ eax + 0x4 ]
mov [ ebp + 0x20 ] eax
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ LCMapStringA@IAT ]
mov esi eax
push ebx
push ebx
lea ecx [ ebp + 0x14 ]
push ecx
push [ ebp + 0x10 ]
push eax
push [ ebp + 0x20 ]
call sub_10035f89
add esp 0x18
mov [ ebp - 0xc ] eax
cmp eax ebx
je r-xdata
jle r-xdata
mov eax [ ebp - 0x10 ]
cmp eax ebx
je r-xdata
push [ ebp - 0xc ]
call sub_1002644d
pop ecx
mov esi [ LCMapStringA@IAT ]
push ebx
push ebx
push [ ebp + 0x14 ]
push eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call esi
mov [ ebp - 0x8 ] eax
cmp eax ebx
jne r-xdata
mov [ ebp - 0xc ] ebx
push 0xffffffe0
xor edx edx
pop eax
div edi
cmp eax 0x2
jb r-xdata
mov eax esi
cmp [ ebp + 0x18 ] eax
je r-xdata
jle r-xdata
xor esi esi
jmp r-xdata
push edi
push [ ebp - 0xc ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push 0x1
push [ ebp + 0x20 ]
call esi
test eax eax
je r-xdata
lea eax [ edi + edi + 0x8 ]
cmp eax 0x400
ja r-xdata
push eax
call sub_1002644d
pop ecx
xor edi edi
cmp eax 0xffffffe0
ja r-xdata
cmp [ ebp - 0xc ] ebx
je r-xdata
push [ ebp - 0xc ]
call sub_1002c50a
mov eax [ ebp - 0x8 ]
pop ecx
jmp r-xdata
mov esi [ LCMapStringW@IAT ]
push ebx
push ebx
push edi
push [ ebp - 0xc ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call esi
mov ecx eax
mov [ ebp - 0x8 ] ecx
cmp ecx ebx
je r-xdata
push eax
call sub_10028f2d
pop ecx
cmp eax ebx
je r-xdata
call sub_10036140
mov eax esp
cmp eax ebx
je r-xdata
push [ ebp - 0x8 ]
push ebx
push edi
call sub_10026630
add esp 0xc
push [ ebp - 0x8 ]
push edi
push [ ebp + 0x14 ]
push [ ebp - 0xc ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call esi
mov [ ebp - 0x8 ] eax
cmp eax ebx
jne r-xdata
add eax 0x8
cmp eax 0x400
ja r-xdata
test [ ebp + 0xc ] 0x400
je r-xdata
mov [ ebp - 0xc ] eax
jmp r-xdata
mov [ eax ] 0xdddd
mov [ eax ] 0xcccc
jmp r-xdata
push [ ebp + 0x1c ]
lea eax [ ebp - 0x8 ]
push [ ebp + 0x18 ]
push eax
push edi
push [ ebp + 0x20 ]
push [ ebp - 0x14 ]
call sub_10035f89
mov esi eax
mov [ ebp - 0x10 ] esi
add esp 0x18
neg esi
sbb esi esi
and esi [ ebp - 0x8 ]
xor esi esi
jmp r-xdata
push eax
call sub_10028f2d
pop ecx
cmp eax ebx
je r-xdata
call sub_10036140
mov edi esp
cmp edi ebx
je r-xdata
cmp ecx ebx
jle r-xdata
cmp [ ebp + 0x1c ] ebx
je r-xdata
cmp [ ebp - 0xc ] ebx
je r-xdata
add eax 0x8
push edi
call sub_1002c50a
pop ecx
jmp r-xdata
mov edi eax
jmp r-xdata
mov [ eax ] 0xdddd
add eax 0x8
mov [ edi ] 0xcccc
add edi 0x8
jmp r-xdata
xor esi esi
push 0xffffffe0
xor edx edx
pop eax
div ecx
cmp eax 0x2
jb r-xdata
cmp ecx [ ebp + 0x1c ]
jg r-xdata
cmp edi ebx
je r-xdata
push [ ebp - 0x8 ]
push esi
push edi
push [ ebp - 0xc ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ LCMapStringW@IAT ]
test eax eax
je r-xdata
lea eax [ ecx + ecx + 0x8 ]
cmp eax 0x400
ja r-xdata
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push edi
push [ ebp - 0xc ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call esi
jmp r-xdata
push esi
call sub_1002c50a
pop ecx
push ebx
push ebx
cmp [ ebp + 0x1c ] ebx
jne r-xdata
push eax
call sub_10028f2d
pop ecx
cmp eax ebx
je r-xdata
call sub_10036140
mov esi esp
cmp esi ebx
je r-xdata
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push ebx
push ebx
jmp r-xdata
mov esi eax
jmp r-xdata
mov [ eax ] 0xdddd
add eax 0x8
mov [ esi ] 0xcccc
add esi 0x8
jmp r-xdata
push [ ebp - 0x8 ]
push esi
push ebx
push [ ebp + 0x20 ]
call [ WideCharToMultiByte@IAT ]
mov [ ebp - 0x8 ] eax
cmp esi ebx
je r-xdata
sub_1002c8cf
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x10 ]
call sub_10029358
push [ ebp + 0x28 ]
lea ecx [ ebp - 0x10 ]
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call sub_1002c52a
add esp 0x20
cmp [ ebp - 0x4 ] 0x0
je r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
sub_1002c93d
mov edi edi
push ebp
mov ebp esp
push esi
push edi
xor esi esi
mov eax edi
pop edi
pop esi
pop ebp
retn
cmp [ rw-data ] eax
jbe r-xdata
push esi
call [ Sleep@IAT ]
lea eax [ esi + 0x3e8 ]
cmp eax [ rw-data ]
jbe r-xdata
mov esi eax
cmp eax 0xffffffff
jne r-xdata
or eax 0xffffffff
push [ ebp + 0x8 ]
call sub_10028f2d
mov edi eax
pop ecx
test edi edi
jne r-xdata
sub_1002c982
mov edi edi
push ebp
mov ebp esp
push esi
push edi
xor esi esi
mov eax edi
pop edi
pop esi
pop ebp
retn
cmp [ rw-data ] eax
jbe r-xdata
push esi
call [ Sleep@IAT ]
lea eax [ esi + 0x3e8 ]
cmp eax [ rw-data ]
jbe r-xdata
mov esi eax
cmp eax 0xffffffff
jne r-xdata
or eax 0xffffffff
push 0x0
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_1003616c
mov edi eax
add esp 0xc
test edi edi
jne r-xdata
sub_1002c9ce
mov edi edi
push ebp
mov ebp esp
push esi
push edi
xor esi esi
mov eax edi
pop edi
pop esi
pop ebp
retn
cmp [ ebp + 0xc ] eax
je r-xdata
cmp [ rw-data ] eax
jbe r-xdata
push esi
call [ Sleep@IAT ]
lea eax [ esi + 0x3e8 ]
cmp eax [ rw-data ]
jbe r-xdata
mov esi eax
cmp eax 0xffffffff
jne r-xdata
or eax 0xffffffff
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_1003628a
mov edi eax
pop ecx
pop ecx
test edi edi
jne r-xdata
sub_1002ca1c
mov edi edi
push ebp
mov ebp esp
push esi
push edi
xor esi esi
mov eax edi
pop edi
pop esi
pop ebp
retn
cmp [ ebp + 0x10 ] eax
je r-xdata
cmp [ rw-data ] eax
jbe r-xdata
push esi
call [ Sleep@IAT ]
lea eax [ esi + 0x3e8 ]
cmp eax [ rw-data ]
jbe r-xdata
mov esi eax
cmp eax 0xffffffff
jne r-xdata
or eax 0xffffffff
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_100364a5
mov edi eax
add esp 0xc
test edi edi
jne r-xdata
sub_1002ca6e
mov edi edi
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi ecx
xor ebx ebx
cmp esi ebx
jne r-xdata
push edi
cmp [ ebp + 0x8 ] ebx
ja r-xdata
call sub_1002c068
push 0x16
pop esi
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] esi
call sub_100261c9
add esp 0x14
mov eax esi
jmp r-xdata
xor ecx ecx
cmp [ ebp + 0x10 ] ebx
mov [ esi ] bl
setne cl
inc ecx
cmp [ ebp + 0x8 ] ecx
ja r-xdata
call sub_1002c068
push 0x16
pop esi
pop ebx
leave
retn 0xc
mov ecx [ ebp + 0xc ]
add ecx 0xfffffffe
cmp ecx 0x22
ja r-xdata
call sub_1002c068
push 0x22
jmp r-xdata
pop edi
mov [ ebp - 0x4 ] ebx
mov ecx esi
cmp [ ebp + 0x10 ] ebx
je r-xdata
pop esi
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] esi
call sub_100261c9
add esp 0x14
mov eax esi
jmp r-xdata
mov edi ecx
mov [ esi ] 0x2d
lea ecx [ esi + 0x1 ]
mov [ ebp - 0x4 ] 0x1
neg eax
add dl 0x30
add dl 0x57
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp eax [ ebp + 0x8 ]
jb r-xdata
mov edx [ ebp + 0x8 ]
cmp [ ebp - 0x4 ] edx
jb r-xdata
mov [ ecx ] dl
inc ecx
inc [ ebp - 0x4 ]
xor ebx ebx
cmp eax ebx
jbe r-xdata
mov [ ecx ] bl
dec ecx
mov [ esi ] bl
jmp r-xdata
xor edx edx
div [ ebp + 0xc ]
cmp edx 0x9
jbe r-xdata
mov dl [ edi ]
mov al [ ecx ]
mov [ ecx ] dl
dec ecx
mov [ edi ] al
inc edi
cmp edi ecx
jb r-xdata
xor eax eax
sub_1002cb4b
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x14 ] 0xa
mov eax [ ebp + 0x8 ]
jne r-xdata
push 0x0
push [ ebp + 0x14 ]
test eax eax
jge r-xdata
push 0x1
push 0xa
jmp r-xdata
push [ ebp + 0x10 ]
mov ecx [ ebp + 0xc ]
call sub_1002ca6e
pop ebp
retn
sub_1002cb75
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
push ebx
xor ebx ebx
push esi
cmp edi ebx
jne r-xdata
cmp [ ebp + 0x10 ] ebx
jbe r-xdata
call sub_1002c068
push 0x16
xor eax eax
cmp [ ebp + 0x18 ] ebx
mov [ edi ] bl
setne al
inc eax
cmp [ ebp + 0x10 ] eax
ja r-xdata
pop esi
pop ebx
leave
retn 0x14
mov eax [ ebp + 0x14 ]
add eax 0xfffffffe
cmp eax 0x22
ja r-xdata
call sub_1002c068
push 0x22
jmp r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ ebp + 0xc ]
mov [ ebp - 0x4 ] ebx
mov esi edi
cmp [ ebp + 0x18 ] ebx
je r-xdata
pop esi
mov [ eax ] esi
mov [ ebp + 0x18 ] esi
mov [ ebp + 0xc ] ebx
neg edx
adc eax ebx
mov [ edi ] 0x2d
lea esi [ edi + 0x1 ]
mov [ ebp - 0x4 ] 0x1
neg eax
add cl 0x30
add cl 0x57
jmp r-xdata
cmp ecx [ ebp + 0x10 ]
jb r-xdata
test edx edx
jbe r-xdata
mov [ esi ] cl
mov ecx [ ebp - 0x4 ]
inc esi
inc ecx
mov [ ebp - 0x4 ] ecx
test eax eax
ja r-xdata
push [ ebp + 0xc ]
push [ ebp + 0x14 ]
push eax
push edx
call sub_10036520
mov [ ebp - 0x8 ] ebx
mov ebx edx
mov edx eax
mov eax ebx
cmp ecx 0x9
jbe r-xdata
mov ecx [ ebp - 0x4 ]
cmp ecx [ ebp + 0x10 ]
jb r-xdata
mov [ esi ] 0x0
dec esi
mov [ edi ] 0x0
call sub_1002c068
push 0x22
pop ecx
mov [ eax ] ecx
mov esi ecx
xor ebx ebx
jmp r-xdata
mov eax [ ebp + 0x18 ]
mov dl [ eax ]
mov cl [ esi ]
mov [ esi ] dl
dec esi
mov [ eax ] cl
inc eax
mov [ ebp + 0x18 ] eax
cmp eax esi
jb r-xdata
xor eax eax
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_100261c9
add esp 0x14
mov eax esi
jmp r-xdata
sub_1002cc6d
mov edi edi
push ebp
mov ebp esp
push edi
mov edi [ ebp + 0x10 ]
push 0x0
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_1002cb75
pop edi
pop ebp
retn
sub_1002cc8c
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x10 ]
call sub_10029358
mov eax [ ebp + 0x18 ]
test eax eax
jle r-xdata
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push eax
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call [ LCMapStringW@IAT ]
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov ecx [ ebp + 0x14 ]
mov edx eax
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
sub eax edx
dec eax
inc ecx
inc ecx
test edx edx
jne r-xdata
dec edx
cmp [ ecx ] 0x0
je r-xdata
or edx 0xffffffff
sub_1002cce3
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
push ebx
push esi
push [ ebp + 0xc ]
lea ecx [ ebp - 0x18 ]
call sub_10029358
mov ebx [ ebp + 0x8 ]
mov esi 0x100
cmp ebx esi
jae r-xdata
mov eax [ ebp - 0x18 ]
cmp [ eax + 0xac ] 0x1
jle r-xdata
mov ecx [ ebp - 0x18 ]
cmp [ ecx + 0xac ] 0x1
jle r-xdata
call sub_1002c068
mov [ eax ] 0x2a
xor ecx ecx
mov [ ebp - 0x4 ] bl
mov [ ebp - 0x3 ] 0x0
inc ecx
mov [ ebp + 0x8 ] ebx
sar [ ebp + 0x8 ] 0x8
lea eax [ ebp - 0x18 ]
push eax
mov eax [ ebp + 0x8 ]
and eax 0xff
push eax
call sub_100365b5
pop ecx
pop ecx
test eax eax
je r-xdata
mov eax [ ecx + 0xc8 ]
movzx eax [ eax + ebx * 2 ]
and eax 0x1
lea eax [ ebp - 0x18 ]
push eax
push 0x1
push ebx
call sub_10033165
mov ecx [ ebp - 0x18 ]
add esp 0xc
jmp r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
cmp eax 0x1
movzx eax [ ebp - 0x8 ]
je r-xdata
mov al [ ebp + 0x8 ]
push 0x2
mov [ ebp - 0x4 ] al
mov [ ebp - 0x3 ] bl
mov [ ebp - 0x2 ] 0x0
pop ecx
jmp r-xdata
mov eax [ ecx + 0xcc ]
movzx eax [ eax + ebx ]
jmp r-xdata
test eax eax
je r-xdata
mov eax ebx
jmp r-xdata
mov eax [ ebp - 0x10 ]
and [ eax + 0x70 ] 0xfffffffd
cmp [ ebp - 0xc ] 0x0
je r-xdata
movzx ecx [ ebp - 0x7 ]
shl eax 0x8
or eax ecx
mov eax [ ebp - 0x18 ]
push 0x1
push [ eax + 0x4 ]
lea edx [ ebp - 0x8 ]
push 0x3
push edx
push ecx
lea ecx [ ebp - 0x4 ]
push ecx
push esi
push [ eax + 0x14 ]
lea eax [ ebp - 0x18 ]
push eax
call sub_1002c8cf
add esp 0x24
test eax eax
je r-xdata
pop esi
pop ebx
leave
retn
mov ecx [ ebp - 0x10 ]
and [ ecx + 0x70 ] 0xfffffffd
sub_1002cdf8
mov edi edi
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
jne r-xdata
push 0x0
push [ ebp + 0x8 ]
call sub_1002cce3
pop ecx
pop ecx
mov eax [ ebp + 0x8 ]
lea ecx [ eax - 0x41 ]
cmp ecx 0x19
ja r-xdata
pop ebp
retn
add eax 0x20
pop ebp
retn
sub_1002ce30
push ebx
push esi
mov eax [ esp + 0x18 ]
or eax eax
jne r-xdata
mov ecx eax
mov ebx [ esp + 0x14 ]
mov edx [ esp + 0x10 ]
mov eax [ esp + 0xc ]
mov ecx [ esp + 0x14 ]
mov eax [ esp + 0x10 ]
xor edx edx
div ecx
mov ebx eax
mov eax [ esp + 0xc ]
div ecx
mov edx ebx
jmp r-xdata
shr ecx 0x1
rcr ebx 0x1
shr edx 0x1
rcr eax 0x1
or ecx ecx
jne r-xdata
div ebx
mov esi eax
mul [ esp + 0x18 ]
mov ecx eax
mov eax [ esp + 0x14 ]
mul esi
add edx ecx
jb r-xdata
pop esi
pop ebx
retn 0x10
dec esi
cmp edx [ esp + 0x10 ]
ja r-xdata
jb r-xdata
xor edx edx
mov eax esi
cmp eax [ esp + 0xc ]
jbe r-xdata
sub_1002cea0
mov eax [ esp + 0x8 ]
mov ecx [ esp + 0x10 ]
or ecx eax
mov ecx [ esp + 0xc ]
jne r-xdata
push ebx
mul ecx
mov ebx eax
mov eax [ esp + 0x8 ]
mul [ esp + 0x14 ]
add ebx eax
mov eax [ esp + 0x8 ]
mul ecx
add edx ebx
pop ebx
retn 0x10
mov eax [ esp + 0x4 ]
mul ecx
retn 0x10
sub_1002cf57
mov edi edi
push ebp
mov ebp esp
sub esp 0x30
push ebx
mov ebx [ ebp + 0x8 ]
push esi
push edi
push [ ebp + 0x10 ]
lea ecx [ ebp - 0x18 ]
mov esi ebx
call sub_10029358
mov edi [ ebp + 0xc ]
test edi edi
je r-xdata
test ebx ebx
jne r-xdata
mov [ edi ] ebx
mov eax [ ebp - 0x18 ]
cmp [ eax + 0xac ] 0x1
jle r-xdata
call sub_1002c068
mov [ eax ] 0x16
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_100261c9
add esp 0x14
cmp [ ebp - 0xc ] bl
je r-xdata
movzx ecx [ esi ]
mov eax [ eax + 0xc8 ]
movzx eax [ eax + ecx * 2 ]
and eax 0x8
lea eax [ ebp - 0x18 ]
push eax
movzx eax [ esi ]
push 0x8
push eax
call sub_10033165
add esp 0xc
jmp r-xdata
fldz
jmp r-xdata
mov eax [ ebp - 0x10 ]
and [ eax + 0x70 ] 0xfffffffd
lea eax [ ebp - 0x18 ]
push eax
push 0x0
push 0x0
push esi
call sub_10025d30
pop ecx
push eax
lea eax [ ebp - 0x30 ]
push esi
push eax
call sub_10037170
add esp 0x18
mov ecx eax
test edi edi
je r-xdata
inc esi
jmp r-xdata
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
mov eax [ ecx ]
test eax 0x240
je r-xdata
mov eax [ ecx + 0x4 ]
add eax esi
mov [ edi ] eax
test al 0x81
je r-xdata
fldz
fstp [ ebp - 0x8 ]
test edi edi
je r-xdata
test eax 0x100
je r-xdata
cmp [ esi ] 0x2d
fld [ rw-data ]
jne r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov [ edi ] ebx
jmp r-xdata
fld [ ecx + 0x10 ]
fstp [ ebp - 0x8 ]
fldz
fcom [ ecx + 0x10 ]
fnstsw ax
test ah 0x44
jpe r-xdata
fstp [ ebp - 0x8 ]
call sub_1002c068
mov [ eax ] 0x22
jmp r-xdata
fchs
jmp r-xdata
fld [ ebp - 0x8 ]
mov eax [ ebp - 0x10 ]
and [ eax + 0x70 ] 0xfffffffd
fstp st0
sub_1002d08d
push 0xc
push r--data
call sub_1002e7e4
xor esi esi
mov [ ebp - 0x1c ] esi
xor eax eax
mov ebx [ ebp + 0x8 ]
cmp ebx esi
setne al
cmp eax esi
jne r-xdata
xor eax eax
mov edi [ ebp + 0xc ]
cmp edi esi
setne al
cmp eax esi
je r-xdata
call sub_1002c068
mov [ eax ] 0x16
push esi
push esi
push esi
push esi
push esi
call sub_100261c9
add esp 0x14
xor eax eax
cmp [ edi ] si
setne al
cmp eax esi
je r-xdata
call sub_1002e829
retn
call sub_10032068
mov [ ebp + 0x8 ] eax
cmp eax esi
jne r-xdata
mov [ ebp - 0x4 ] esi
cmp [ ebx ] si
jne r-xdata
call sub_1002c068
mov [ eax ] 0x18
jmp r-xdata
push eax
push [ ebp + 0x10 ]
push edi
push ebx
call sub_10037217
add esp 0x10
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_1002d149
mov eax [ ebp - 0x1c ]
call sub_1002c068
mov [ eax ] 0x16
push 0xfffffffe
lea eax [ ebp - 0x10 ]
push eax
push rw-data
call sub_100321a0
add esp 0xc
jmp r-xdata
xor eax eax
jmp r-xdata
sub_1002d160
push edi
push esi
push ebx
xor edi edi
mov eax [ esp + 0x14 ]
or eax eax
jge r-xdata
mov eax [ esp + 0x1c ]
or eax eax
jge r-xdata
inc edi
mov edx [ esp + 0x10 ]
neg eax
neg edx
sbb eax 0x0
mov [ esp + 0x14 ] eax
mov [ esp + 0x10 ] edx
or eax eax
jne r-xdata
inc edi
mov edx [ esp + 0x18 ]
neg eax
neg edx
sbb eax 0x0
mov [ esp + 0x1c ] eax
mov [ esp + 0x18 ] edx
mov ebx eax
mov ecx [ esp + 0x18 ]
mov edx [ esp + 0x14 ]
mov eax [ esp + 0x10 ]
mov ecx [ esp + 0x18 ]
mov eax [ esp + 0x14 ]
xor edx edx
div ecx
mov ebx eax
mov eax [ esp + 0x10 ]
div ecx
mov edx ebx
jmp r-xdata
shr ebx 0x1
rcr ecx 0x1
shr edx 0x1
rcr eax 0x1
or ebx ebx
jne r-xdata
div ecx
mov esi eax
mul [ esp + 0x1c ]
mov ecx eax
mov eax [ esp + 0x18 ]
mul esi
add edx ecx
jb r-xdata
dec edi
jne r-xdata
dec esi
cmp edx [ esp + 0x14 ]
ja r-xdata
pop ebx
pop esi
pop edi
retn 0x10
neg edx
neg eax
sbb edx 0x0
jb r-xdata
xor edx edx
mov eax esi
cmp eax [ esp + 0x10 ]
jbe r-xdata
sub_1002d210
push ecx
lea ecx [ esp + 0x4 ]
sub ecx eax
sbb eax eax
not eax
and ecx eax
mov eax esp
and eax 0xfffff000
sub eax 0x1000
test [ eax ] eax
jmp r-xdata
mov eax ecx
pop ecx
xchg esp eax
mov eax [ eax ]
mov [ esp ] eax
retn
cmp ecx eax
jb r-xdata
sub_1002d23b
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
jl r-xdata
call sub_100374cb
mov esi [ eax ]
call sub_100374cb
cmp esi [ eax ]
jl r-xdata
call sub_100374d1
mov eax [ eax + esi * 4 ]
pop esi
pop ebp
retn
sub_1002d263
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
call sub_1002daab
mov esi eax
xor ebx ebx
cmp esi ebx
jne r-xdata
push edi
mov edi 0x86
cmp [ esi + 0x24 ] ebx
jne r-xdata
mov eax r--data
jmp r-xdata
push [ ebp + 0x8 ]
mov esi [ esi + 0x24 ]
call sub_1002d23b
push eax
push edi
push esi
call sub_1002d40c
add esp 0x10
test eax eax
je r-xdata
push 0x1
push edi
call sub_1002c982
pop ecx
pop ecx
mov [ esi + 0x24 ] eax
cmp eax ebx
jne r-xdata
pop esi
pop ebx
pop ebp
retn
mov eax esi
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_100260a1
add esp 0x14
mov eax r--data
jmp r-xdata
pop edi
sub_1002d2cf
mov edi edi
push ebp
mov ebp esp
sub esp 0x328
mov [ rw-data ] eax
mov [ rw-data ] ecx
mov [ rw-data ] edx
mov [ rw-data ] ebx
mov [ rw-data ] esi
mov [ rw-data ] edi
mov [ rw-data ] ss
mov [ rw-data ] cs
mov [ rw-data ] ds
mov [ rw-data ] es
mov [ rw-data ] fs
mov [ rw-data ] gs
pushfd
pop [ rw-data ]
mov eax [ ebp ]
mov [ rw-data ] eax
mov eax [ ebp + 0x4 ]
mov [ rw-data ] eax
lea eax [ ebp + 0x8 ]
mov [ rw-data ] eax
mov eax [ ebp - 0x320 ]
mov [ rw-data ] 0x10001
mov eax [ rw-data ]
mov [ rw-data ] eax
mov [ rw-data ] 0xc0000409
mov [ rw-data ] 0x1
mov eax [ rw-data ]
mov [ ebp - 0x328 ] eax
mov eax [ rw-data ]
mov [ ebp - 0x324 ] eax
call [ IsDebuggerPresent@IAT ]
mov [ rw-data ] eax
push 0x1
call sub_1002d855
pop ecx
push 0x0
call [ SetUnhandledExceptionFilter@IAT ]
push r--data
call [ UnhandledExceptionFilter@IAT ]
cmp [ rw-data ] 0x0
jne r-xdata
push 0xc0000409
call [ GetCurrentProcess@IAT ]
push eax
call [ TerminateProcess@IAT ]
leave
retn
push 0x1
call sub_1002d855
pop ecx
sub_1002d3e4
mov edi edi
push ebp
mov ebp esp
push [ rw-data ]
call sub_1002d8d8
pop ecx
test eax eax
je r-xdata
xor eax eax
pop ebp
retn
push [ ebp + 0x8 ]
call eax
pop ecx
test eax eax
je r-xdata
xor eax eax
inc eax
pop ebp
retn
sub_1002d40c
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
push ebx
xor ebx ebx
push esi
push edi
cmp ecx ebx
je r-xdata
call sub_1002c068
push 0x16
pop esi
mov [ eax ] esi
mov edi [ ebp + 0xc ]
cmp edi ebx
ja r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
mov esi [ ebp + 0x10 ]
cmp esi ebx
jne r-xdata
mov edx ecx
mov [ ecx ] bl
jmp r-xdata
cmp edi ebx
jne r-xdata
dec edi
jne r-xdata
xor eax eax
mov [ ecx ] bl
call sub_1002c068
push 0x22
pop ecx
mov [ eax ] ecx
mov esi ecx
jmp r-xdata
mov al [ esi ]
mov [ edx ] al
inc edx
inc esi
cmp al bl
je r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_100261c9
add esp 0x14
mov eax esi
jmp r-xdata
sub_1002d474
push 0xc
push r--data
call sub_1002e7e4
push 0xe
call sub_1002ebde
pop ecx
and [ ebp - 0x4 ] 0x0
mov esi [ ebp + 0x8 ]
mov ecx [ esi + 0x4 ]
test ecx ecx
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_1002d4db
call sub_1002e829
retn
mov eax [ rw-data ]
mov edx rw-data
push [ esi + 0x4 ]
call sub_1002644d
pop ecx
and [ esi + 0x4 ] 0x0
cmp [ eax ] ecx
jne r-xdata
mov edx eax
jmp r-xdata
mov ecx [ eax + 0x4 ]
mov [ edx + 0x4 ] ecx
push eax
call sub_1002644d
pop ecx
mov [ ebp - 0x1c ] eax
test eax eax
je r-xdata
sub_1002d4f0
push ebp
mov ebp esp
push edi
push esi
mov esi [ ebp + 0xc ]
mov ecx [ ebp + 0x10 ]
mov edi [ ebp + 0x8 ]
mov eax ecx
mov edx ecx
add eax esi
cmp edi esi
jbe r-xdata
cmp ecx 0x100
jb r-xdata
cmp edi eax
jb r-xdata
test edi 0x3
jne r-xdata
cmp [ rw-data ] 0x0
je r-xdata
lea esi [ ecx + esi - 0x4 ]
lea edi [ ecx + edi - 0x4 ]
test edi 0x3
jne r-xdata
mov eax edi
mov edx 0x3
sub ecx 0x4
jb r-xdata
shr ecx 0x2
and edx 0x3
cmp ecx 0x8
jb r-xdata
push edi
push esi
and edi 0xf
and esi 0xf
cmp edi esi
pop esi
pop edi
jne r-xdata
mov eax edi
mov edx 0x3
cmp ecx 0x4
jb r-xdata
shr ecx 0x2
and edx 0x3
cmp ecx 0x8
jb r-xdata
jmp [ ecx * 4 + r-xdata ]
and eax 0x3
add ecx eax
jmp [ eax * 4 + jump_table_1002d578 ]
jmp [ ecx * 4 + jump_table_1002d5f8 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_1002d664 ]
pop esi
pop edi
pop ebp
jmp sub_10031ee6
jmp [ ecx * 4 + jump_table_1002d800 ]
and eax 0x3
sub ecx eax
jmp [ eax * 4 + jump_table_1002d704 ]
neg ecx
jmp [ ecx * 4 + r-xdata ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_1002d800 ]
and edx ecx
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov al [ esi + 0x2 ]
shr ecx 0x2
mov [ edi + 0x2 ] al
add esi 0x3
add edi 0x3
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
shr ecx 0x2
mov [ edi + 0x1 ] al
add esi 0x2
add edi 0x2
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
add esi 0x1
shr ecx 0x2
add edi 0x1
cmp ecx 0x8
jb r-xdata
mov eax [ esi + ecx * 4 - 0x1c ]
mov [ edi + ecx * 4 - 0x1c ] eax
mov eax [ esi + ecx * 4 - 0x18 ]
mov [ edi + ecx * 4 - 0x18 ] eax
mov eax [ esi + ecx * 4 - 0x14 ]
mov [ edi + ecx * 4 - 0x14 ] eax
mov eax [ esi + ecx * 4 - 0x10 ]
mov [ edi + ecx * 4 - 0x10 ] eax
mov eax [ esi + ecx * 4 - 0xc ]
mov [ edi + ecx * 4 - 0xc ] eax
mov eax [ esi + ecx * 4 - 0x8 ]
mov [ edi + ecx * 4 - 0x8 ] eax
mov eax [ esi + ecx * 4 - 0x4 ]
mov [ edi + ecx * 4 - 0x4 ] eax
lea eax [ ecx * 4 ]
add esi eax
add edi eax
jmp [ edx * 4 + jump_table_1002d664 ]
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
sub esi 0x1
shr ecx 0x2
sub edi 0x1
cmp ecx 0x8
jb r-xdata
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
shr ecx 0x2
mov [ edi + 0x2 ] al
sub esi 0x2
sub edi 0x2
cmp ecx 0x8
jb r-xdata
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov al [ esi + 0x1 ]
shr ecx 0x2
mov [ edi + 0x1 ] al
sub esi 0x3
sub edi 0x3
cmp ecx 0x8
jb r-xdata
mov eax [ esi + ecx * 4 + 0x1c ]
mov [ edi + ecx * 4 + 0x1c ] eax
mov eax [ esi + ecx * 4 + 0x18 ]
mov [ edi + ecx * 4 + 0x18 ] eax
mov eax [ esi + ecx * 4 + 0x14 ]
mov [ edi + ecx * 4 + 0x14 ] eax
mov eax [ esi + ecx * 4 + 0x10 ]
mov [ edi + ecx * 4 + 0x10 ] eax
mov eax [ esi + ecx * 4 + 0xc ]
mov [ edi + ecx * 4 + 0xc ] eax
mov eax [ esi + ecx * 4 + 0x8 ]
mov [ edi + ecx * 4 + 0x8 ] eax
mov eax [ esi + ecx * 4 + 0x4 ]
mov [ edi + ecx * 4 + 0x4 ] eax
lea eax [ ecx * 4 ]
add esi eax
add edi eax
jmp [ edx * 4 + jump_table_1002d800 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_1002d664 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_1002d664 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_1002d664 ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_1002d800 ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_1002d800 ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_1002d800 ]
sub_1002d85d
mov edi edi
push ebp
mov ebp esp
push esi
push [ rw-data ]
mov esi [ TlsGetValue@IAT ]
call esi
test eax eax
je r-xdata
mov esi r--data
push esi
call [ GetModuleHandleW@IAT ]
test eax eax
jne r-xdata
mov eax [ rw-data ]
cmp eax 0xffffffff
je r-xdata
push r--data
push eax
call [ GetProcAddress@IAT ]
push esi
call sub_100296d8
pop ecx
test eax eax
je r-xdata
push eax
push [ rw-data ]
call esi
call eax
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
pop esi
pop ebp
retn
push [ ebp + 0x8 ]
call eax
mov [ ebp + 0x8 ] eax
mov eax [ eax + 0x1f8 ]
jmp r-xdata
test eax eax
je r-xdata
sub_1002d8d8
mov edi edi
push ebp
mov ebp esp
push esi
push [ rw-data ]
mov esi [ TlsGetValue@IAT ]
call esi
test eax eax
je r-xdata
mov esi r--data
push esi
call [ GetModuleHandleW@IAT ]
test eax eax
jne r-xdata
mov eax [ rw-data ]
cmp eax 0xffffffff
je r-xdata
push r--data
push eax
call [ GetProcAddress@IAT ]
push esi
call sub_100296d8
pop ecx
test eax eax
je r-xdata
push eax
push [ rw-data ]
call esi
call eax
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
pop esi
pop ebp
retn
push [ ebp + 0x8 ]
call eax
mov [ ebp + 0x8 ] eax
mov eax [ eax + 0x1fc ]
jmp r-xdata
test eax eax
je r-xdata
sub_1002d953
mov edi edi
push esi
push [ rw-data ]
call [ TlsGetValue@IAT ]
mov esi eax
test esi esi
jne r-xdata
mov eax esi
pop esi
retn
push [ rw-data ]
call sub_1002d8d8
pop ecx
mov esi eax
push esi
push [ rw-data ]
call [ TlsSetValue@IAT ]
sub_1002d987
mov eax [ rw-data ]
cmp eax 0xffffffff
je r-xdata
mov eax [ rw-data ]
cmp eax 0xffffffff
je r-xdata
push eax
push [ rw-data ]
call sub_1002d8d8
pop ecx
call eax
or [ rw-data ] 0xffffffff
jmp sub_1002eaad
push eax
call [ TlsFree@IAT ]
or [ rw-data ] 0xffffffff
sub_1002d9c4
push 0xc
push r--data
call sub_1002e7e4
mov esi r--data
push esi
call [ GetModuleHandleW@IAT ]
test eax eax
jne r-xdata
mov [ ebp - 0x1c ] eax
mov esi [ ebp + 0x8 ]
mov [ esi + 0x5c ] r--data
xor edi edi
inc edi
mov [ esi + 0x14 ] edi
test eax eax
je r-xdata
push esi
call sub_100296d8
pop ecx
mov [ esi + 0x70 ] edi
mov [ esi + 0xc8 ] 0x43
mov [ esi + 0x14b ] 0x43
mov [ esi + 0x68 ] rw-data
push 0xd
call sub_1002ebde
pop ecx
and [ ebp - 0x4 ] 0x0
push [ esi + 0x68 ]
call [ InterlockedIncrement@IAT ]
mov [ ebp - 0x4 ] 0xfffffffe
call sub_1002da99
push 0xc
call sub_1002ebde
pop ecx
mov [ ebp - 0x4 ] edi
mov eax [ ebp + 0xc ]
mov [ esi + 0x6c ] eax
test eax eax
jne r-xdata
push r--data
push eax
mov ebx [ GetProcAddress@IAT ]
call ebx
mov [ esi + 0x1f8 ] eax
push r--data
push [ ebp - 0x1c ]
call ebx
mov [ esi + 0x1fc ] eax
push [ esi + 0x6c ]
call sub_1002b006
pop ecx
mov [ ebp - 0x4 ] 0xfffffffe
call sub_1002daa2
call sub_1002e829
retn
mov eax [ rw-data ]
mov [ esi + 0x6c ] eax
sub_1002daab
mov edi edi
push esi
push edi
call [ GetLastError@IAT ]
push [ rw-data ]
mov edi eax
call sub_1002d953
call eax
mov esi eax
test esi esi
jne r-xdata
push edi
call [ SetLastError@IAT ]
pop edi
mov eax esi
pop esi
retn
push 0x214
push 0x1
call sub_1002c982
mov esi eax
pop ecx
pop ecx
test esi esi
je r-xdata
push esi
push [ rw-data ]
push [ rw-data ]
call sub_1002d8d8
pop ecx
call eax
test eax eax
je r-xdata
push esi
call sub_1002644d
pop ecx
xor esi esi
push 0x0
push esi
call sub_1002d9c4
pop ecx
pop ecx
call [ GetCurrentThreadId@IAT ]
or [ esi + 0x4 ] 0xffffffff
mov [ esi ] eax
jmp r-xdata
sub_1002db3e
push 0x8
push r--data
call sub_1002e7e4
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
call sub_1002e829
retn 0x4
mov eax [ esi + 0x24 ]
test eax eax
je r-xdata
mov eax [ esi + 0x2c ]
test eax eax
je r-xdata
push eax
call sub_1002644d
pop ecx
mov eax [ esi + 0x34 ]
test eax eax
je r-xdata
push eax
call sub_1002644d
pop ecx
mov eax [ esi + 0x3c ]
test eax eax
je r-xdata
push eax
call sub_1002644d
pop ecx
mov eax [ esi + 0x40 ]
test eax eax
je r-xdata
push eax
call sub_1002644d
pop ecx
mov eax [ esi + 0x44 ]
test eax eax
je r-xdata
push eax
call sub_1002644d
pop ecx
mov eax [ esi + 0x48 ]
test eax eax
je r-xdata
push eax
call sub_1002644d
pop ecx
mov eax [ esi + 0x5c ]
cmp eax r--data
je r-xdata
push eax
call sub_1002644d
pop ecx
push 0xd
call sub_1002ebde
pop ecx
and [ ebp - 0x4 ] 0x0
mov edi [ esi + 0x68 ]
test edi edi
je r-xdata
push eax
call sub_1002644d
pop ecx
mov [ ebp - 0x4 ] 0xfffffffe
call sub_1002dc58
push 0xc
call sub_1002ebde
pop ecx
mov [ ebp - 0x4 ] 0x1
mov edi [ esi + 0x6c ]
test edi edi
je r-xdata
push edi
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_1002dc64
push esi
call sub_1002644d
pop ecx
push edi
call sub_1002b095
pop ecx
cmp edi [ rw-data ]
je r-xdata
cmp edi rw-data
je r-xdata
cmp edi rw-data
je r-xdata
push edi
call sub_1002644d
pop ecx
cmp [ edi ] 0x0
jne r-xdata
push edi
call sub_1002aebd
pop ecx
sub_1002dc6d
mov edi edi
push ebp
mov ebp esp
cmp [ rw-data ] 0xffffffff
je r-xdata
mov eax [ rw-data ]
cmp eax 0xffffffff
je r-xdata
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
pop ebp
retn
push 0x0
push eax
call [ TlsSetValue@IAT ]
push 0x0
push [ rw-data ]
push [ rw-data ]
call sub_1002d8d8
pop ecx
call eax
push [ ebp + 0x8 ]
call sub_1002db3e
push esi
push [ rw-data ]
mov esi [ TlsGetValue@IAT ]
call esi
test eax eax
je r-xdata
pop esi
push [ rw-data ]
push [ rw-data ]
call esi
call eax
mov [ ebp + 0x8 ] eax
sub_1002dcdb
mov edi edi
push esi
push edi
mov esi r--data
push esi
call [ GetModuleHandleW@IAT ]
test eax eax
jne r-xdata
mov edi eax
test edi edi
je r-xdata
push esi
call sub_100296d8
pop ecx
call sub_1002d987
mov esi [ GetProcAddress@IAT ]
push r--data
push edi
call esi
push r--data
push edi
mov [ rw-data ] eax
call esi
push r--data
push edi
mov [ rw-data ] eax
call esi
push r--data
push edi
mov [ rw-data ] eax
call esi
cmp [ rw-data ] 0x0
mov esi [ TlsSetValue@IAT ]
mov [ rw-data ] eax
je r-xdata
mov eax [ TlsGetValue@IAT ]
mov [ rw-data ] eax
mov eax [ TlsFree@IAT ]
mov [ rw-data ] sub_1002d94a
mov [ rw-data ] esi
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
push [ rw-data ]
push eax
call esi
test eax eax
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
call sub_100299b3
push [ rw-data ]
call sub_1002d85d
push [ rw-data ]
mov [ rw-data ] eax
call sub_1002d85d
push [ rw-data ]
mov [ rw-data ] eax
call sub_1002d85d
push [ rw-data ]
mov [ rw-data ] eax
call sub_1002d85d
add esp 0x10
mov [ rw-data ] eax
call sub_1002ea62
test eax eax
je r-xdata
test eax eax
jne r-xdata
push sub_1002db3e
push [ rw-data ]
call sub_1002d8d8
pop ecx
call eax
mov [ rw-data ] eax
cmp eax 0xffffffff
je r-xdata
call [ TlsAlloc@IAT ]
mov [ rw-data ] eax
cmp eax 0xffffffff
je r-xdata
push 0x214
push 0x1
call sub_1002c982
mov esi eax
pop ecx
pop ecx
test esi esi
je r-xdata
push esi
push [ rw-data ]
push [ rw-data ]
call sub_1002d8d8
pop ecx
call eax
test eax eax
je r-xdata
push 0x0
push esi
call sub_1002d9c4
pop ecx
pop ecx
call [ GetCurrentThreadId@IAT ]
or [ esi + 0x4 ] 0xffffffff
mov [ esi ] eax
xor eax eax
inc eax
jmp r-xdata
pop edi
pop esi
retn
sub_1002de68
push 0x54
push r--data
call sub_1002e7e4
xor edi edi
mov [ ebp - 0x4 ] edi
lea eax [ ebp - 0x64 ]
push eax
call [ GetStartupInfoA@IAT ]
mov [ ebp - 0x4 ] 0xfffffffe
push 0x40
push 0x20
pop esi
push esi
call sub_1002c982
pop ecx
pop ecx
cmp eax edi
je r-xdata
or eax 0xffffffff
mov [ rw-data ] eax
mov [ rw-data ] esi
lea ecx [ eax + 0x800 ]
jmp r-xdata
cmp eax ecx
jb r-xdata
mov [ eax + 0x4 ] 0x0
or [ eax ] 0xffffffff
mov [ eax + 0x5 ] 0xa
mov [ eax + 0x8 ] edi
mov [ eax + 0x24 ] 0x0
mov [ eax + 0x25 ] 0xa
mov [ eax + 0x26 ] 0xa
mov [ eax + 0x38 ] edi
mov [ eax + 0x34 ] 0x0
add eax 0x40
mov ecx [ rw-data ]
add ecx 0x800
cmp [ ebp - 0x32 ] di
je r-xdata
xor ebx ebx
mov eax [ ebp - 0x30 ]
cmp eax edi
je r-xdata
mov [ esi + 0x4 ] 0x81
test ebx ebx
jne r-xdata
cmp eax 0xfffffffe
je r-xdata
mov edi [ eax ]
lea ebx [ eax + 0x4 ]
lea eax [ ebx + edi ]
mov [ ebp - 0x1c ] eax
mov esi 0x800
cmp edi esi
jl r-xdata
mov eax ebx
dec eax
neg eax
sbb eax eax
add eax 0xfffffff5
push 0xfffffff6
pop eax
jmp r-xdata
or [ esi + 0x4 ] 0x80
jmp r-xdata
mov [ ebp - 0x20 ] 0x1
jmp r-xdata
mov edi esi
or [ esi + 0x4 ] 0x40
mov [ esi ] 0xfffffffe
test edi edi
je r-xdata
push eax
call [ GetStdHandle@IAT ]
mov edi eax
cmp edi 0xffffffff
je r-xdata
inc ebx
cmp ebx 0x3
jl r-xdata
cmp [ rw-data ] edi
jl r-xdata
mov esi ebx
shl esi 0x6
add esi [ rw-data ]
mov eax [ esi ]
cmp eax 0xffffffff
je r-xdata
push [ rw-data ]
call [ SetHandleCount@IAT ]
xor eax eax
jmp r-xdata
push edi
call [ GetFileType@IAT ]
test eax eax
je r-xdata
push 0x40
push 0x20
call sub_1002c982
pop ecx
pop ecx
test eax eax
je r-xdata
jmp r-xdata
call sub_1002e829
retn
mov [ esi ] edi
and eax 0xff
cmp eax 0x2
jne r-xdata
mov edi [ rw-data ]
mov ecx [ ebp - 0x20 ]
lea ecx [ ecx * 4 + rw-data ]
mov [ ecx ] eax
add [ rw-data ] 0x20
lea edx [ eax + 0x800 ]
jmp r-xdata
and [ ebp - 0x20 ] 0x0
test edi edi
jle r-xdata
cmp eax 0x3
jne r-xdata
or [ esi + 0x4 ] 0x40
jmp r-xdata
mov eax [ ebp - 0x1c ]
mov ecx [ eax ]
cmp ecx 0xffffffff
je r-xdata
cmp eax edx
jb r-xdata
push 0xfa0
lea eax [ esi + 0xc ]
push eax
call sub_10033652
pop ecx
pop ecx
test eax eax
je r-xdata
or [ esi + 0x4 ] 0x8
inc [ ebp - 0x20 ]
inc ebx
add [ ebp - 0x1c ] 0x4
cmp [ ebp - 0x20 ] edi
jl r-xdata
cmp ecx 0xfffffffe
je r-xdata
mov [ eax + 0x4 ] 0x0
or [ eax ] 0xffffffff
mov [ eax + 0x5 ] 0xa
and [ eax + 0x8 ] 0x0
and [ eax + 0x24 ] 0x80
mov [ eax + 0x25 ] 0xa
mov [ eax + 0x26 ] 0xa
and [ eax + 0x38 ] 0x0
mov [ eax + 0x34 ] 0x0
add eax 0x40
mov edx [ ecx ]
add edx esi
inc [ ebp - 0x20 ]
inc [ esi + 0x8 ]
jmp r-xdata
mov al [ ebx ]
test al 0x1
je r-xdata
test al 0x8
jne r-xdata
mov esi [ ebp - 0x20 ]
mov eax esi
sar eax 0x5
and esi 0x1f
shl esi 0x6
add esi [ eax * 4 + rw-data ]
mov eax [ ebp - 0x1c ]
mov eax [ eax ]
mov [ esi ] eax
mov al [ ebx ]
mov [ esi + 0x4 ] al
push 0xfa0
lea eax [ esi + 0xc ]
push eax
call sub_10033652
pop ecx
pop ecx
test eax eax
je r-xdata
push ecx
call [ GetFileType@IAT ]
test eax eax
je r-xdata
inc [ esi + 0x8 ]
sub_1002e0bc
mov edi edi
push esi
push edi
mov esi rw-data
add esi 0x4
cmp esi rw-data
jl r-xdata
lea eax [ edi + 0x800 ]
jmp r-xdata
mov edi [ esi ]
test edi edi
je r-xdata
pop edi
pop esi
retn
cmp edi eax
jb r-xdata
cmp [ edi + 0x8 ] 0x0
je r-xdata
push [ esi ]
call sub_1002644d
and [ esi ] 0x0
pop ecx
mov eax [ esi ]
add edi 0x40
add eax 0x800
lea eax [ edi + 0xc ]
push eax
call [ DeleteCriticalSection@IAT ]
sub_1002e10a
cmp [ rw-data ] 0x0
jne r-xdata
push esi
mov esi [ rw-data ]
push edi
xor edi edi
test esi esi
jne r-xdata
call sub_10033147
mov al [ esi ]
test al al
jne r-xdata
or eax 0xffffffff
jmp r-xdata
cmp al 0x3d
je r-xdata
push 0x4
inc edi
push edi
call sub_1002c982
mov edi eax
pop ecx
pop ecx
mov [ rw-data ] edi
test edi edi
je r-xdata
pop edi
pop esi
retn
push esi
call sub_10025d30
pop ecx
lea esi [ esi + eax + 0x1 ]
inc edi
mov esi [ rw-data ]
push ebx
jmp r-xdata
cmp [ esi ] 0x0
jne r-xdata
push esi
call sub_10025d30
mov ebx eax
inc ebx
cmp [ esi ] 0x3d
pop ecx
je r-xdata
push [ rw-data ]
call sub_1002644d
and [ rw-data ] 0x0
and [ edi ] 0x0
mov [ rw-data ] 0x1
xor eax eax
add esi ebx
push 0x1
push ebx
call sub_1002c982
pop ecx
pop ecx
mov [ edi ] eax
test eax eax
je r-xdata
push [ rw-data ]
call sub_1002644d
and [ rw-data ] 0x0
or eax 0xffffffff
jmp r-xdata
push esi
push ebx
push eax
call sub_1002d40c
add esp 0xc
test eax eax
je r-xdata
pop ecx
pop ebx
add edi 0x4
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_100260a1
add esp 0x14
sub_1002e1e8
mov edi edi
push ebp
mov ebp esp
push ecx
mov ecx [ ebp + 0x10 ]
push ebx
xor eax eax
push esi
mov [ edi ] eax
mov esi edx
mov edx [ ebp + 0xc ]
mov [ ecx ] 0x1
cmp [ ebp + 0x8 ] eax
je r-xdata
mov [ ebp - 0x4 ] eax
mov ebx [ ebp + 0x8 ]
add [ ebp + 0x8 ] 0x4
mov [ ebx ] edx
inc [ edi ]
test edx edx
je r-xdata
xor eax eax
cmp [ ebp - 0x4 ] eax
mov bl 0x22
sete al
inc esi
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov bl [ esi ]
movzx eax bl
push eax
inc esi
call sub_1003752a
pop ecx
test eax eax
je r-xdata
mov al [ esi ]
mov [ edx ] al
inc edx
mov [ ebp + 0xc ] edx
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
mov edx [ ebp + 0xc ]
mov ecx [ ebp + 0x10 ]
test bl bl
je r-xdata
inc [ edi ]
cmp [ ebp + 0xc ] 0x0
je r-xdata
cmp [ esi ] 0x22
jne r-xdata
cmp bl 0x20
je r-xdata
dec esi
jmp r-xdata
inc esi
mov ecx [ ebp + 0xc ]
mov al [ esi ]
inc [ ebp + 0xc ]
mov [ ecx ] al
test edx edx
je r-xdata
cmp bl 0x9
jne r-xdata
and [ ebp - 0x4 ] 0x0
mov [ edx - 0x1 ] 0x0
mov eax [ ebp + 0x8 ]
pop esi
pop ebx
test eax eax
je r-xdata
mov al [ esi ]
cmp al 0x20
je r-xdata
inc [ ecx ]
leave
retn
and [ eax ] 0x0
inc esi
jmp r-xdata
cmp al 0x9
jne r-xdata
cmp [ esi ] 0x0
je r-xdata
cmp [ ebp + 0x8 ] 0x0
je r-xdata
inc [ ecx ]
mov eax [ ebp + 0x8 ]
add [ ebp + 0x8 ] 0x4
mov [ eax ] edx
cmp [ esi ] 0x5c
je r-xdata
inc esi
inc ecx
cmp [ esi ] 0x22
jne r-xdata
test ecx ecx
je r-xdata
test cl 0x1
jne r-xdata
mov al [ esi ]
test al al
je r-xdata
dec ecx
test edx edx
je r-xdata
shr ecx 0x1
cmp [ ebp - 0x4 ] 0x0
je r-xdata
test edx edx
je r-xdata
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
inc [ edi ]
test ecx ecx
jne r-xdata
mov [ edx ] 0x5c
inc edx
xor eax eax
xor ebx ebx
cmp [ ebp - 0x4 ] eax
sete al
mov [ ebp - 0x4 ] eax
lea eax [ esi + 0x1 ]
cmp [ eax ] 0x22
jne r-xdata
inc [ edi ]
mov ecx [ ebp + 0x10 ]
jmp r-xdata
mov [ edx ] 0x0
inc edx
mov [ ebp + 0xc ] edx
test ebx ebx
je r-xdata
cmp al 0x20
je r-xdata
mov [ ebp + 0xc ] edx
mov esi eax
jmp r-xdata
cmp [ esi ] 0x0
je r-xdata
inc esi
jmp r-xdata
movsx eax al
push eax
test edx edx
je r-xdata
cmp al 0x9
je r-xdata
xor ebx ebx
inc ebx
xor ecx ecx
jmp r-xdata
call sub_1003752a
pop ecx
test eax eax
je r-xdata
call sub_1003752a
pop ecx
test eax eax
je r-xdata
inc [ edi ]
mov edx [ ebp + 0xc ]
inc esi
inc [ edi ]
mov ecx [ ebp + 0xc ]
mov al [ esi ]
inc [ ebp + 0xc ]
mov [ ecx ] al
jmp r-xdata
mov al [ esi ]
mov ecx [ ebp + 0xc ]
inc [ ebp + 0xc ]
mov [ ecx ] al
inc esi
inc [ edi ]
sub_1002e382
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
push ebx
xor ebx ebx
push esi
push edi
cmp [ rw-data ] ebx
jne r-xdata
push 0x104
mov esi rw-data
push esi
push ebx
mov [ rw-data ] bl
call [ GetModuleFileNameA@IAT ]
mov eax [ rw-data ]
mov [ rw-data ] esi
cmp eax ebx
je r-xdata
call sub_10033147
mov [ ebp - 0x4 ] esi
mov [ ebp - 0x4 ] eax
cmp [ eax ] bl
jne r-xdata
or eax 0xffffffff
mov ecx [ ebp - 0xc ]
cmp ecx 0xffffffff
jae r-xdata
mov edx [ ebp - 0x4 ]
lea eax [ ebp - 0x8 ]
push eax
push ebx
push ebx
lea edi [ ebp - 0xc ]
call sub_1002e1e8
mov eax [ ebp - 0x8 ]
add esp 0xc
cmp eax 0x3fffffff
jae r-xdata
mov edi eax
shl edi 0x2
lea eax [ edi + ecx ]
cmp eax ecx
jb r-xdata
push eax
call sub_1002c93d
mov esi eax
pop ecx
cmp esi ebx
je r-xdata
mov edx [ ebp - 0x4 ]
lea eax [ ebp - 0x8 ]
push eax
add edi esi
push edi
push esi
lea edi [ ebp - 0xc ]
call sub_1002e1e8
mov eax [ ebp - 0x8 ]
add esp 0xc
dec eax
mov [ rw-data ] eax
mov [ rw-data ] esi
xor eax eax
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn
sub_1002e43d
mov edi edi
push ebp
mov ebp esp
mov eax [ rw-data ]
sub esp 0xc
push ebx
push esi
mov esi [ GetEnvironmentStringsW@IAT ]
push edi
xor ebx ebx
xor edi edi
cmp eax ebx
jne r-xdata
cmp eax 0x1
jne r-xdata
call esi
mov edi eax
cmp edi ebx
je r-xdata
cmp eax 0x2
je r-xdata
cmp edi ebx
jne r-xdata
call [ GetLastError@IAT ]
cmp eax 0x78
jne r-xdata
mov [ rw-data ] 0x1
jmp r-xdata
call [ GetEnvironmentStrings@IAT ]
mov esi eax
cmp esi ebx
je r-xdata
cmp eax ebx
jne r-xdata
mov eax edi
cmp [ edi ] bx
je r-xdata
call esi
mov edi eax
cmp edi ebx
jne r-xdata
mov eax [ rw-data ]
push 0x2
pop eax
mov [ rw-data ] eax
jmp r-xdata
xor eax eax
jmp r-xdata
cmp [ esi ] bl
je r-xdata
mov esi [ WideCharToMultiByte@IAT ]
push ebx
push ebx
push ebx
sub eax edi
push ebx
sar eax 0x1
inc eax
push eax
push edi
push ebx
push ebx
mov [ ebp - 0xc ] eax
call esi
mov [ ebp - 0x8 ] eax
cmp eax ebx
je r-xdata
inc eax
inc eax
cmp [ eax ] bx
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn
sub eax esi
inc eax
push eax
mov [ ebp - 0x8 ] eax
call sub_1002c93d
mov edi eax
pop ecx
cmp edi ebx
jne r-xdata
inc eax
cmp [ eax ] bl
jne r-xdata
push edi
call [ FreeEnvironmentStringsW@IAT ]
mov eax ebx
jmp r-xdata
push eax
call sub_1002c93d
pop ecx
mov [ ebp - 0x4 ] eax
cmp eax ebx
je r-xdata
inc eax
inc eax
cmp [ eax ] bx
jne r-xdata
push [ ebp - 0x8 ]
push esi
push edi
call sub_10028b40
add esp 0xc
push esi
call [ FreeEnvironmentStringsA@IAT ]
mov eax edi
push esi
call [ FreeEnvironmentStringsA@IAT ]
jmp r-xdata
inc eax
cmp [ eax ] bl
jne r-xdata
push ebx
push ebx
push [ ebp - 0x8 ]
push eax
push [ ebp - 0xc ]
push edi
push ebx
push ebx
call esi
test eax eax
jne r-xdata
mov ebx [ ebp - 0x4 ]
push [ ebp - 0x4 ]
call sub_1002644d
pop ecx
mov [ ebp - 0x4 ] ebx
sub_1002e574
mov edi edi
push esi
mov eax r--data
mov esi r--data
push edi
mov edi eax
cmp eax esi
jae r-xdata
pop edi
pop esi
retn
mov eax [ edi ]
test eax eax
je r-xdata
add edi 0x4
cmp edi esi
jb r-xdata
call eax
sub_1002e59a
mov edi edi
push esi
mov eax r--data
mov esi r--data
push edi
mov edi eax
cmp eax esi
jae r-xdata
pop edi
pop esi
retn
mov eax [ edi ]
test eax eax
je r-xdata
add edi 0x4
cmp edi esi
jb r-xdata
call eax
sub_1002e5c0
mov edi edi
push ebp
mov ebp esp
xor eax eax
cmp [ ebp + 0x8 ] eax
push 0x0
sete al
push 0x1000
push eax
call [ HeapCreate@IAT ]
mov [ rw-data ] eax
test eax eax
jne r-xdata
xor eax eax
inc eax
mov [ rw-data ] eax
pop ebp
retn
pop ebp
retn
sub_1002e5f0
cmp [ rw-data ] 0x3
jne r-xdata
push [ rw-data ]
call [ HeapDestroy@IAT ]
and [ rw-data ] 0x0
retn
push ebx
xor ebx ebx
cmp [ rw-data ] ebx
push edi
mov edi [ HeapFree@IAT ]
jle r-xdata
push [ rw-data ]
push 0x0
push [ rw-data ]
call edi
pop edi
pop ebx
push esi
mov esi [ rw-data ]
add esi 0x10
push 0x8000
push 0x0
push [ esi - 0x4 ]
call [ VirtualFree@IAT ]
push [ esi ]
push 0x0
push [ rw-data ]
call edi
add esi 0x14
inc ebx
cmp ebx [ rw-data ]
jl r-xdata
pop esi
sub_1002e664
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push esi
call sub_1002daab
mov esi eax
test esi esi
je r-xdata
pop esi
leave
retn
mov edx [ esi + 0x5c ]
mov eax [ rw-data ]
push edi
mov edi [ ebp + 0x8 ]
mov ecx edx
push ebx
imul eax eax 0xc
add eax edx
cmp ecx eax
jae r-xdata
mov ebx eax
imul ebx ebx 0xc
add ecx 0xc
add ebx edx
cmp ecx ebx
jb r-xdata
xor eax eax
cmp [ ecx ] edi
jne r-xdata
cmp [ ecx ] edi
je r-xdata
xor eax eax
jmp r-xdata
mov ebx [ eax + 0x8 ]
mov [ ebp - 0x4 ] ebx
test ebx ebx
jne r-xdata
mov eax ecx
jmp r-xdata
pop ebx
pop edi
cmp ebx 0x5
jne r-xdata
test eax eax
je r-xdata
cmp ebx 0x1
je r-xdata
and [ eax + 0x8 ] 0x0
xor eax eax
inc eax
jmp r-xdata
or eax 0xffffffff
mov ecx [ esi + 0x60 ]
mov [ ebp - 0x8 ] ecx
mov ecx [ ebp + 0xc ]
mov [ esi + 0x60 ] ecx
mov ecx [ eax + 0x4 ]
cmp ecx 0x8
jne r-xdata
and [ eax + 0x8 ] 0x0
push ecx
call ebx
mov ecx [ rw-data ]
mov edi [ rw-data ]
mov edx ecx
add edi ecx
cmp edx edi
jge r-xdata
mov eax [ eax ]
mov edi [ esi + 0x64 ]
cmp eax 0xc000008e
jne r-xdata
imul ecx ecx 0xc
cmp eax 0xc0000090
jne r-xdata
mov [ esi + 0x64 ] 0x83
jmp r-xdata
mov edi [ esi + 0x5c ]
and [ ecx + edi + 0x8 ] 0x0
mov edi [ rw-data ]
mov ebx [ rw-data ]
inc edx
add ebx edi
add ecx 0xc
cmp edx ebx
jl r-xdata
mov ebx [ ebp - 0x4 ]
cmp eax 0xc0000091
jne r-xdata
mov [ esi + 0x64 ] 0x81
jmp r-xdata
push [ esi + 0x64 ]
push 0x8
call ebx
pop ecx
mov [ esi + 0x64 ] edi
jmp r-xdata
cmp eax 0xc0000093
jne r-xdata
mov [ esi + 0x64 ] 0x84
jmp r-xdata
mov eax [ ebp - 0x8 ]
pop ecx
mov [ esi + 0x60 ] eax
cmp eax 0xc000008d
jne r-xdata
mov [ esi + 0x64 ] 0x85
jmp r-xdata
cmp eax 0xc000008f
jne r-xdata
mov [ esi + 0x64 ] 0x82
jmp r-xdata
cmp eax 0xc0000092
jne r-xdata
mov [ esi + 0x64 ] 0x86
jmp r-xdata
mov [ esi + 0x64 ] 0x8a
sub_1002e7c4
mov edi edi
push ebp
mov ebp esp
mov eax 0xe06d7363
cmp [ ebp + 0x8 ] eax
jne r-xdata
xor eax eax
pop ebp
retn
push [ ebp + 0xc ]
push eax
call sub_1002e664
pop ecx
pop ecx
pop ebp
retn
sub_1002e7e4
push sub_1002e840
push [ fs : 0x0 ]
mov eax [ esp + 0x10 ]
mov [ esp + 0x10 ] ebp
lea ebp [ esp + 0x10 ]
sub esp eax
push ebx
push esi
push edi
mov eax [ rw-data ]
xor [ ebp - 0x4 ] eax
xor eax ebp
push eax
mov [ ebp - 0x18 ] esp
push [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x4 ] 0xfffffffe
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0x10 ]
mov [ fs : 0x0 ] eax
retn
sub_1002e840
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi [ ebx + 0x8 ]
xor esi [ rw-data ]
push edi
mov eax [ esi ]
mov [ ebp - 0x1 ] 0x0
mov [ ebp - 0xc ] 0x1
lea edi [ ebx + 0x10 ]
cmp eax 0xfffffffe
je r-xdata
mov ecx [ esi + 0xc ]
mov eax [ esi + 0x8 ]
add ecx edi
xor ecx [ eax + edi ]
call sub_10025c8d
mov eax [ ebp + 0x8 ]
test [ eax + 0x4 ] 0x66
jne r-xdata
mov ecx [ esi + 0x4 ]
add ecx edi
xor ecx [ eax + edi ]
call sub_10025c8d
mov edx 0xfffffffe
cmp [ ebx + 0xc ] edx
je r-xdata
mov ecx [ ebp + 0x10 ]
lea edx [ ebp - 0x18 ]
mov [ ebx - 0x4 ] edx
mov ebx [ ebx + 0xc ]
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] ecx
cmp ebx 0xfffffffe
je r-xdata
mov eax [ ebp - 0xc ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push rw-data
push edi
mov ecx ebx
call sub_100322dc
jmp r-xdata
lea ecx [ ecx ]
mov eax [ esi ]
cmp eax 0xfffffffe
je r-xdata
mov ebx eax
cmp eax 0xfffffffe
jne r-xdata
mov edx edi
call sub_10032292
mov [ ebp - 0x1 ] 0x1
test eax eax
jl r-xdata
mov ecx [ esi + 0xc ]
mov edx [ esi + 0x8 ]
add ecx edi
xor ecx [ edx + edi ]
call sub_10025c8d
mov ecx [ esi + 0x4 ]
add ecx edi
xor ecx [ eax + edi ]
call sub_10025c8d
lea eax [ ebx + ebx * 2 ]
mov ecx [ esi + eax * 4 + 0x14 ]
lea eax [ esi + eax * 4 + 0x10 ]
mov [ ebp - 0x10 ] eax
mov eax [ eax ]
mov [ ebp - 0x8 ] eax
test ecx ecx
je r-xdata
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov [ ebp - 0xc ] 0x0
jmp r-xdata
jg r-xdata
mov ecx [ ebp + 0x8 ]
cmp [ ecx ] 0xe06d7363
jne r-xdata
mov eax [ ebp - 0x8 ]
mov ecx [ ebp + 0xc ]
call sub_100322c2
mov eax [ ebp + 0xc ]
cmp [ eax + 0xc ] ebx
je r-xdata
cmp [ r--data ] 0x0
je r-xdata
mov ecx [ ebp - 0x8 ]
mov [ eax + 0xc ] ecx
mov eax [ esi ]
cmp eax 0xfffffffe
je r-xdata
push rw-data
push edi
mov edx ebx
mov ecx eax
call sub_100322dc
mov eax [ ebp + 0xc ]
push r--data
call sub_100332d0
add esp 0x4
test eax eax
je r-xdata
mov ecx [ esi + 0xc ]
mov edx [ esi + 0x8 ]
add ecx edi
xor ecx [ edx + edi ]
call sub_10025c8d
mov eax [ ebp - 0x10 ]
mov ecx [ eax + 0x8 ]
mov edx edi
call sub_100322a9
mov ecx [ esi + 0x4 ]
add ecx edi
xor ecx [ eax + edi ]
call sub_10025c8d
mov edx [ ebp + 0x8 ]
push 0x1
push edx
call [ r--data ]
add esp 0x8
sub_1002e9cc
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
mov eax [ rw-data ]
and [ ebp - 0x8 ] 0x0
and [ ebp - 0x4 ] 0x0
push ebx
push edi
mov edi 0xbb40e64e
mov ebx 0xffff0000
cmp eax edi
je r-xdata
push esi
lea eax [ ebp - 0x8 ]
push eax
call [ GetSystemTimeAsFileTime@IAT ]
mov esi [ ebp - 0x4 ]
xor esi [ ebp - 0x8 ]
call [ GetCurrentProcessId@IAT ]
xor esi eax
call [ GetCurrentThreadId@IAT ]
xor esi eax
call [ GetTickCount@IAT ]
xor esi eax
lea eax [ ebp - 0x10 ]
push eax
call [ QueryPerformanceCounter@IAT ]
mov eax [ ebp - 0xc ]
xor eax [ ebp - 0x10 ]
xor esi eax
cmp esi edi
jne r-xdata
test ebx eax
je r-xdata
test ebx esi
jne r-xdata
mov esi 0xbb40e64f
jmp r-xdata
not eax
mov [ rw-data ] eax
jmp r-xdata
mov [ rw-data ] esi
not esi
mov [ rw-data ] esi
pop esi
mov eax esi
shl eax 0x10
or esi eax
pop edi
pop ebx
leave
retn
sub_1002ea62
mov edi edi
push esi
push edi
xor esi esi
mov edi rw-data
inc esi
cmp esi 0x24
jl r-xdata
lea eax [ esi * 8 + rw-data ]
mov [ eax ] edi
push 0xfa0
push [ eax ]
add edi 0x18
call sub_10033652
pop ecx
pop ecx
test eax eax
je r-xdata
cmp [ esi * 8 + rw-data ] 0x1
jne r-xdata
xor eax eax
inc eax
and [ esi * 8 + rw-data ] 0x0
xor eax eax
jmp r-xdata
pop edi
pop esi
retn
sub_1002eaad
mov edi edi
push ebx
mov ebx [ DeleteCriticalSection@IAT ]
push esi
mov esi rw-data
push edi
add esi 0x8
cmp esi rw-data
jl r-xdata
cmp [ esi + 0x4 ] 0x1
je r-xdata
mov edi [ esi ]
test edi edi
je r-xdata
mov esi rw-data
pop edi
push edi
call ebx
push edi
call sub_1002644d
and [ esi ] 0x0
pop ecx
add esi 0x8
cmp esi rw-data
jl r-xdata
cmp [ esi + 0x4 ] 0x1
jne r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
pop esi
pop ebx
retn
push eax
call ebx
sub_1002eb1b
push 0xc
push r--data
call sub_1002e7e4
xor edi edi
inc edi
mov [ ebp - 0x1c ] edi
xor ebx ebx
cmp [ rw-data ] ebx
jne r-xdata
mov esi [ ebp + 0x8 ]
lea esi [ esi * 8 + rw-data ]
cmp [ esi ] ebx
je r-xdata
call sub_100308c2
push 0x1e
call sub_10030717
push 0xff
call sub_1002975c
push 0x18
call sub_1002c93d
pop ecx
mov edi eax
cmp edi ebx
jne r-xdata
mov eax edi
jmp r-xdata
push 0xa
call sub_1002ebde
pop ecx
mov [ ebp - 0x4 ] ebx
cmp [ esi ] ebx
jne r-xdata
call sub_1002c068
mov [ eax ] 0xc
xor eax eax
jmp r-xdata
call sub_1002e829
retn
push edi
call sub_1002644d
pop ecx
push 0xfa0
push edi
call sub_10033652
pop ecx
pop ecx
test eax eax
jne r-xdata
mov [ esi ] edi
jmp r-xdata
push edi
call sub_1002644d
pop ecx
call sub_1002c068
mov [ eax ] 0xc
mov [ ebp - 0x1c ] ebx
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_1002ebd5
mov eax [ ebp - 0x1c ]
sub_1002ebde
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
lea esi [ eax * 8 + rw-data ]
cmp [ esi ] 0x0
jne r-xdata
push [ esi ]
call [ EnterCriticalSection@IAT ]
pop esi
pop ebp
retn
push eax
call sub_1002eb1b
pop ecx
test eax eax
jne r-xdata
push 0x11
call sub_10029708
pop ecx
sub_1002ec11
mov edi edi
push ebp
mov ebp esp
mov ecx [ rw-data ]
mov eax [ rw-data ]
imul ecx ecx 0x14
add ecx eax
jmp r-xdata
cmp eax ecx
jb r-xdata
mov edx [ ebp + 0x8 ]
sub edx [ eax + 0xc ]
cmp edx 0x100000
jb r-xdata
xor eax eax
pop ebp
retn
add eax 0x14
sub_1002ec41
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
mov ecx [ ebp + 0x8 ]
mov eax [ ecx + 0x10 ]
push esi
mov esi [ ebp + 0xc ]
push edi
mov edi esi
sub edi [ ecx + 0xc ]
add esi 0xfffffffc
shr edi 0xf
mov ecx edi
imul ecx ecx 0x204
lea ecx [ ecx + eax + 0x144 ]
mov [ ebp - 0x10 ] ecx
mov ecx [ esi ]
dec ecx
mov [ ebp - 0x4 ] ecx
test cl 0x1
jne r-xdata
pop edi
pop esi
leave
retn
push ebx
lea ebx [ ecx + esi ]
mov edx [ ebx ]
mov [ ebp - 0xc ] edx
mov edx [ esi - 0x4 ]
mov [ ebp - 0x8 ] edx
mov edx [ ebp - 0xc ]
mov [ ebp + 0xc ] ebx
test dl 0x1
jne r-xdata
mov edx ecx
sar edx 0x4
dec edx
cmp edx 0x3f
jbe r-xdata
sar edx 0x4
dec edx
cmp edx 0x3f
jbe r-xdata
mov ebx [ ebp - 0x8 ]
and ebx 0x1
mov [ ebp - 0xc ] ebx
jne r-xdata
push 0x3f
pop edx
mov ecx [ ebx + 0x4 ]
cmp ecx [ ebx + 0x8 ]
jne r-xdata
push 0x3f
pop edx
mov ebx [ ebp + 0x8 ]
sub esi [ ebp - 0x8 ]
mov ebx [ ebp - 0x8 ]
sar ebx 0x4
push 0x3f
mov [ ebp + 0xc ] esi
dec ebx
pop esi
cmp ebx esi
jbe r-xdata
mov edx [ ebx + 0x8 ]
mov ebx [ ebx + 0x4 ]
mov ecx [ ebp - 0x4 ]
add ecx [ ebp - 0xc ]
mov [ edx + 0x4 ] ebx
mov edx [ ebp + 0xc ]
mov ebx [ edx + 0x4 ]
mov edx [ edx + 0x8 ]
mov [ ebx + 0x8 ] edx
mov [ ebp - 0x4 ] ecx
mov ebx 0x80000000
cmp edx 0x20
jae r-xdata
mov ecx [ ebp - 0x10 ]
lea ecx [ ecx + edx * 8 ]
mov ebx [ ecx + 0x4 ]
mov [ esi + 0x8 ] ecx
mov [ esi + 0x4 ] ebx
mov [ ecx + 0x4 ] esi
mov ecx [ esi + 0x4 ]
mov [ ecx + 0x8 ] esi
mov ecx [ esi + 0x4 ]
cmp ecx [ esi + 0x8 ]
jne r-xdata
cmp ebx edx
je r-xdata
add ecx [ ebp - 0x8 ]
mov edx ecx
sar edx 0x4
dec edx
mov [ ebp - 0x4 ] ecx
cmp edx esi
jbe r-xdata
mov ebx esi
lea ecx [ edx - 0x20 ]
shr ebx cl
lea ecx [ edx + eax + 0x4 ]
not ebx
and [ eax + edi * 4 + 0xc4 ] ebx
dec [ ecx ]
jne r-xdata
mov ecx edx
shr ebx cl
lea ecx [ edx + eax + 0x4 ]
not ebx
and [ eax + edi * 4 + 0x44 ] ebx
dec [ ecx ]
jne r-xdata
mov eax [ ebp - 0x4 ]
mov [ esi ] eax
mov [ eax + esi - 0x4 ] eax
mov eax [ ebp - 0x10 ]
dec [ eax ]
jne r-xdata
mov cl [ edx + eax + 0x4 ]
mov [ ebp + 0xf ] cl
inc cl
mov [ edx + eax + 0x4 ] cl
cmp edx 0x20
jae r-xdata
cmp ebx edx
je r-xdata
mov edx esi
mov ebx [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
and [ ecx + 0x4 ] ebx
mov ecx [ ebp + 0x8 ]
and [ ecx ] ebx
jmp r-xdata
pop ebx
mov eax [ rw-data ]
test eax eax
je r-xdata
cmp [ ebp + 0xf ] 0x0
jne r-xdata
cmp [ ebp + 0xf ] 0x0
jne r-xdata
mov esi [ ebp + 0xc ]
jmp r-xdata
mov ecx [ ebp + 0xc ]
mov esi [ ecx + 0x4 ]
cmp esi [ ecx + 0x8 ]
jne r-xdata
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
mov [ rw-data ] edi
mov ecx [ rw-data ]
mov esi [ VirtualFree@IAT ]
push 0x4000
shl ecx 0xf
add ecx [ eax + 0xc ]
mov ebx 0x8000
push ebx
push ecx
call esi
mov ecx [ rw-data ]
mov eax [ rw-data ]
mov edx 0x80000000
shr edx cl
or [ eax + 0x8 ] edx
mov eax [ rw-data ]
mov eax [ eax + 0x10 ]
mov ecx [ rw-data ]
and [ eax + ecx * 4 + 0xc4 ] 0x0
mov eax [ rw-data ]
mov eax [ eax + 0x10 ]
dec [ eax + 0x43 ]
mov eax [ rw-data ]
mov ecx [ eax + 0x10 ]
cmp [ ecx + 0x43 ] 0x0
jne r-xdata
lea ecx [ edx - 0x20 ]
mov edx 0x80000000
shr edx cl
lea eax [ eax + edi * 4 + 0xc4 ]
or [ eax ] edx
lea ecx [ edx - 0x20 ]
mov ebx 0x80000000
shr ebx cl
mov ecx [ ebp + 0x8 ]
or [ ecx + 0x4 ] ebx
mov ebx 0x80000000
mov ecx edx
shr ebx cl
lea eax [ eax + edi * 4 + 0x44 ]
or [ eax ] ebx
jmp r-xdata
mov ecx edx
mov ebx 0x80000000
shr ebx cl
mov ecx [ ebp + 0x8 ]
or [ ecx ] ebx
cmp [ ebp - 0xc ] 0x0
jne r-xdata
mov ecx [ ebp + 0xc ]
mov esi [ ecx + 0x8 ]
mov ecx [ ecx + 0x4 ]
mov [ esi + 0x4 ] ecx
mov ecx [ ebp + 0xc ]
mov esi [ ecx + 0x4 ]
mov ecx [ ecx + 0x8 ]
mov [ esi + 0x8 ] ecx
mov esi 0x80000000
cmp ebx 0x20
jae r-xdata
cmp [ eax + 0x8 ] 0xffffffff
jne r-xdata
and [ eax + 0x4 ] 0xfffffffe
mov eax [ rw-data ]
lea ecx [ ebx - 0x20 ]
shr esi cl
not esi
and [ eax + edi * 4 + 0xc4 ] esi
dec [ ebx + eax + 0x4 ]
jne r-xdata
mov ecx ebx
shr esi cl
not esi
and [ eax + edi * 4 + 0x44 ] esi
dec [ ebx + eax + 0x4 ]
jne r-xdata
push ebx
push 0x0
push [ eax + 0xc ]
call esi
mov eax [ rw-data ]
push [ eax + 0x10 ]
push 0x0
push [ rw-data ]
call [ HeapFree@IAT ]
mov ecx [ rw-data ]
mov eax [ rw-data ]
imul ecx ecx 0x14
mov edx [ rw-data ]
sub ecx eax
lea ecx [ ecx + edx - 0x14 ]
push ecx
lea ecx [ eax + 0x14 ]
push ecx
push eax
call sub_1002d4f0
mov eax [ ebp + 0x8 ]
add esp 0xc
dec [ rw-data ]
cmp eax [ rw-data ]
jbe r-xdata
mov ecx [ ebp + 0x8 ]
and [ ecx + 0x4 ] esi
mov ecx [ ebp + 0x8 ]
and [ ecx ] esi
jmp r-xdata
mov eax [ rw-data ]
mov [ rw-data ] eax
sub [ ebp + 0x8 ] 0x14
sub_1002ef57
mov eax [ rw-data ]
push esi
mov esi [ rw-data ]
push edi
xor edi edi
cmp esi eax
jne r-xdata
imul esi esi 0x14
add esi [ rw-data ]
push 0x41c4
push 0x8
push [ rw-data ]
call [ HeapAlloc@IAT ]
mov [ esi + 0x10 ] eax
cmp eax edi
je r-xdata
add eax 0x10
imul eax eax 0x14
push eax
push [ rw-data ]
push edi
push [ rw-data ]
call [ HeapReAlloc@IAT ]
cmp eax edi
jne r-xdata
xor eax eax
jmp r-xdata
push 0x4
push 0x2000
push 0x100000
push edi
call [ VirtualAlloc@IAT ]
mov [ esi + 0xc ] eax
cmp eax edi
jne r-xdata
add [ rw-data ] 0x10
mov esi [ rw-data ]
mov [ rw-data ] eax
pop edi
pop esi
retn
or [ esi + 0x8 ] 0xffffffff
mov [ esi ] edi
mov [ esi + 0x4 ] edi
inc [ rw-data ]
mov eax [ esi + 0x10 ]
or [ eax ] 0xffffffff
mov eax esi
push [ esi + 0x10 ]
push edi
push [ rw-data ]
call [ HeapFree@IAT ]
jmp r-xdata
sub_1002f007
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
mov ecx [ ebp + 0x8 ]
mov eax [ ecx + 0x8 ]
push ebx
push esi
mov esi [ ecx + 0x10 ]
push edi
xor ebx ebx
jmp r-xdata
test eax eax
jge r-xdata
add eax eax
inc ebx
mov eax ebx
imul eax eax 0x204
lea eax [ eax + esi + 0x144 ]
push 0x3f
mov [ ebp - 0x8 ] eax
pop edx
mov [ eax + 0x8 ] eax
mov [ eax + 0x4 ] eax
add eax 0x8
dec edx
jne r-xdata
push 0x4
mov edi ebx
push 0x1000
shl edi 0xf
add edi [ ecx + 0xc ]
push 0x8000
push edi
call [ VirtualAlloc@IAT ]
test eax eax
jne r-xdata
lea edx [ edi + 0x7000 ]
mov [ ebp - 0x4 ] edx
cmp edi edx
ja r-xdata
or eax 0xffffffff
jmp r-xdata
mov eax [ ebp - 0x8 ]
add eax 0x1f8
lea ecx [ edi + 0xc ]
mov [ eax + 0x4 ] ecx
mov [ ecx + 0x8 ] eax
lea ecx [ edx + 0xc ]
mov [ eax + 0x8 ] ecx
mov [ ecx + 0x4 ] eax
and [ esi + ebx * 4 + 0x44 ] 0x0
xor edi edi
inc edi
mov [ esi + ebx * 4 + 0xc4 ] edi
mov al [ esi + 0x43 ]
mov cl al
inc cl
test al al
mov eax [ ebp + 0x8 ]
mov [ esi + 0x43 ] cl
jne r-xdata
mov ecx edx
sub ecx edi
shr ecx 0xc
lea eax [ edi + 0x10 ]
inc ecx
pop edi
pop esi
pop ebx
leave
retn
mov edx 0x80000000
mov ecx ebx
shr edx cl
not edx
and [ eax + 0x8 ] edx
mov eax ebx
or [ eax + 0x4 ] edi
or [ eax - 0x8 ] 0xffffffff
or [ eax + 0xfec ] 0xffffffff
lea edx [ eax + 0xffc ]
mov [ eax ] edx
lea edx [ eax - 0x1004 ]
mov [ eax - 0x4 ] 0xff0
mov [ eax + 0x4 ] edx
mov [ eax + 0xfe8 ] 0xff0
add eax 0x1000
dec ecx
jne r-xdata
mov edx [ ebp - 0x4 ]
sub_1002f10f
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
mov ecx [ ebp + 0x8 ]
mov eax [ ecx + 0x10 ]
push ebx
push esi
mov esi [ ebp + 0x10 ]
push edi
mov edi [ ebp + 0xc ]
mov edx edi
sub edx [ ecx + 0xc ]
add esi 0x17
shr edx 0xf
mov ecx edx
imul ecx ecx 0x204
lea ecx [ ecx + eax + 0x144 ]
mov [ ebp - 0xc ] ecx
mov ecx [ edi - 0x4 ]
and esi 0xfffffff0
dec ecx
cmp esi ecx
lea edi [ ecx + edi - 0x4 ]
mov ebx [ edi ]
mov [ ebp + 0x10 ] ecx
mov [ ebp - 0x4 ] ebx
jle r-xdata
jge r-xdata
test bl 0x1
jne r-xdata
xor eax eax
inc eax
mov ebx [ ebp + 0xc ]
sub [ ebp + 0x10 ] esi
lea ecx [ esi + 0x1 ]
mov [ ebx - 0x4 ] ecx
lea ebx [ ebx + esi - 0x4 ]
mov esi [ ebp + 0x10 ]
sar esi 0x4
dec esi
mov [ ebp + 0xc ] ebx
mov [ ebx - 0x4 ] ecx
cmp esi 0x3f
jbe r-xdata
xor eax eax
jmp r-xdata
add ebx ecx
cmp esi ebx
jg r-xdata
test [ ebp - 0x4 ] 0x1
jne r-xdata
push 0x3f
pop esi
pop edi
pop esi
pop ebx
leave
retn
mov ecx [ ebp - 0x4 ]
sar ecx 0x4
dec ecx
mov [ ebp - 0x8 ] ecx
cmp ecx 0x3f
jbe r-xdata
mov ecx [ ebp - 0xc ]
lea ecx [ ecx + esi * 8 ]
mov edi [ ecx + 0x4 ]
mov [ ebx + 0x8 ] ecx
mov [ ebx + 0x4 ] edi
mov [ ecx + 0x4 ] ebx
mov ecx [ ebx + 0x4 ]
mov [ ecx + 0x8 ] ebx
mov ecx [ ebx + 0x4 ]
cmp ecx [ ebx + 0x8 ]
jne r-xdata
mov esi [ ebp - 0x4 ]
sar esi 0x4
dec esi
cmp esi 0x3f
jbe r-xdata
mov ebx [ edi + 0x4 ]
cmp ebx [ edi + 0x8 ]
jne r-xdata
push 0x3f
pop ecx
mov [ ebp - 0x8 ] ecx
mov eax [ ebp + 0x10 ]
mov [ ebx ] eax
mov [ eax + ebx - 0x4 ] eax
mov cl [ esi + eax + 0x4 ]
mov [ ebp + 0xf ] cl
inc cl
mov [ esi + eax + 0x4 ] cl
cmp esi 0x20
jae r-xdata
mov ecx [ edi + 0x4 ]
cmp ecx [ edi + 0x8 ]
jne r-xdata
push 0x3f
pop esi
mov ecx [ edi + 0x8 ]
mov ebx [ edi + 0x4 ]
mov [ ecx + 0x4 ] ebx
mov ecx [ edi + 0x4 ]
mov edi [ edi + 0x8 ]
mov [ ecx + 0x8 ] edi
mov ecx [ ebp + 0x10 ]
sub ecx esi
add [ ebp - 0x4 ] ecx
cmp [ ebp - 0x4 ] 0x0
jle r-xdata
mov ebx 0x80000000
cmp ecx 0x20
jae r-xdata
cmp [ ebp + 0xf ] 0x0
jne r-xdata
cmp [ ebp + 0xf ] 0x0
jne r-xdata
mov ecx [ edi + 0x8 ]
mov esi [ edi + 0x4 ]
mov [ ecx + 0x4 ] esi
mov esi [ edi + 0x8 ]
mov ecx [ edi + 0x4 ]
mov [ ecx + 0x8 ] esi
mov esi [ ebp + 0x10 ]
add esi [ ebp - 0x4 ]
mov [ ebp + 0x10 ] esi
sar esi 0x4
dec esi
cmp esi 0x3f
jbe r-xdata
mov ebx 0x80000000
cmp esi 0x20
jae r-xdata
mov edx [ ebp + 0xc ]
mov edi [ ebp - 0x4 ]
mov ecx [ ebp + 0xc ]
sar edi 0x4
dec edi
lea ecx [ ecx + esi - 0x4 ]
cmp edi 0x3f
jbe r-xdata
add ecx 0xffffffe0
shr ebx cl
mov ecx [ ebp - 0x8 ]
lea ecx [ ecx + eax + 0x4 ]
not ebx
and [ eax + edx * 4 + 0xc4 ] ebx
dec [ ecx ]
jne r-xdata
shr ebx cl
mov ecx [ ebp - 0x8 ]
lea ecx [ ecx + eax + 0x4 ]
not ebx
and [ eax + edx * 4 + 0x44 ] ebx
dec [ ecx ]
jne r-xdata
lea eax [ eax + edx * 4 + 0xc4 ]
lea ecx [ esi - 0x20 ]
lea ecx [ esi - 0x20 ]
mov edi 0x80000000
shr edi cl
mov ecx [ ebp + 0x8 ]
or [ ecx + 0x4 ] edi
lea eax [ eax + edx * 4 + 0x44 ]
mov ecx esi
jmp r-xdata
mov ecx esi
mov edi 0x80000000
shr edi cl
mov ecx [ ebp + 0x8 ]
or [ ecx ] edi
push 0x3f
pop esi
lea ecx [ esi - 0x20 ]
shr ebx cl
lea ecx [ esi + eax + 0x4 ]
not ebx
and [ eax + edx * 4 + 0xc4 ] ebx
dec [ ecx ]
jne r-xdata
mov ecx esi
shr ebx cl
lea esi [ esi + eax + 0x4 ]
not ebx
and [ eax + edx * 4 + 0x44 ] ebx
dec [ esi ]
jne r-xdata
mov ebx [ ebp - 0xc ]
lea ebx [ ebx + edi * 8 ]
mov [ ebp + 0x10 ] ebx
mov ebx [ ebx + 0x4 ]
mov [ ecx + 0x4 ] ebx
mov ebx [ ebp + 0x10 ]
mov [ ecx + 0x8 ] ebx
mov [ ebx + 0x4 ] ecx
mov ebx [ ecx + 0x4 ]
mov [ ebx + 0x8 ] ecx
mov ebx [ ecx + 0x4 ]
cmp ebx [ ecx + 0x8 ]
jne r-xdata
push 0x3f
pop edi
mov ecx [ ebp + 0x8 ]
and [ ecx + 0x4 ] ebx
mov ecx [ ebp + 0x8 ]
and [ ecx ] ebx
jmp r-xdata
mov edx 0x80000000
shr edx cl
or [ eax ] edx
mov ebx [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
and [ ecx + 0x4 ] ebx
mov ecx [ ebp + 0x8 ]
and [ ecx ] ebx
jmp r-xdata
mov edx [ ebp + 0xc ]
mov ecx [ ebp - 0x4 ]
lea eax [ edx + esi - 0x4 ]
mov [ eax ] ecx
mov [ ecx + eax - 0x4 ] ecx
jmp r-xdata
mov cl [ edi + eax + 0x4 ]
mov [ ebp + 0x13 ] cl
inc cl
mov [ edi + eax + 0x4 ] cl
cmp edi 0x20
jae r-xdata
lea eax [ esi + 0x1 ]
mov [ edx - 0x4 ] eax
mov [ edx + esi - 0x8 ] eax
jmp r-xdata
cmp [ ebp + 0x13 ] 0x0
jne r-xdata
cmp [ ebp + 0x13 ] 0x0
jne r-xdata
lea eax [ eax + edx * 4 + 0xc4 ]
lea ecx [ edi - 0x20 ]
lea ecx [ edi - 0x20 ]
mov ebx 0x80000000
shr ebx cl
mov ecx [ ebp + 0x8 ]
or [ ecx + 0x4 ] ebx
lea eax [ eax + edx * 4 + 0x44 ]
mov ecx edi
jmp r-xdata
mov ecx edi
mov ebx 0x80000000
shr ebx cl
mov ecx [ ebp + 0x8 ]
or [ ecx ] ebx
mov edx 0x80000000
shr edx cl
or [ eax ] edx
sub_1002f3f0
mov edi edi
push ebp
mov ebp esp
sub esp 0x14
mov eax [ rw-data ]
mov ecx [ ebp + 0x8 ]
imul eax eax 0x14
add eax [ rw-data ]
add ecx 0x17
and ecx 0xfffffff0
mov [ ebp - 0x10 ] ecx
sar ecx 0x4
push ebx
dec ecx
cmp ecx 0x20
push esi
push edi
jge r-xdata
add ecx 0xffffffe0
or edx 0xffffffff
xor esi esi
shr edx cl
mov [ ebp - 0x8 ] edx
or esi 0xffffffff
shr esi cl
or [ ebp - 0x8 ] 0xffffffff
jmp r-xdata
mov [ ebp + 0x8 ] ebx
cmp ebx eax
jb r-xdata
mov ecx [ rw-data ]
mov ebx ecx
jmp r-xdata
mov edx [ ebx + 0x4 ]
mov edi [ ebx ]
and edx [ ebp - 0x8 ]
and edi esi
or edx edi
jne r-xdata
cmp ebx eax
jne r-xdata
add ebx 0x14
mov [ rw-data ] ebx
mov eax [ ebx + 0x10 ]
mov edx [ eax ]
mov [ ebp - 0x4 ] edx
cmp edx 0xffffffff
je r-xdata
mov ebx [ rw-data ]
jmp r-xdata
and [ ebp - 0x4 ] 0x0
mov edx [ eax + 0xc4 ]
lea ecx [ eax + 0x44 ]
mov ecx [ eax + edx * 4 + 0xc4 ]
mov edi [ eax + edx * 4 + 0x44 ]
and ecx [ ebp - 0x8 ]
and edi esi
or ecx edi
jne r-xdata
mov [ ebp + 0x8 ] ebx
cmp ebx ecx
jb r-xdata
mov edx [ ebp - 0x4 ]
inc [ ebp - 0x4 ]
mov edx [ ecx + 0x84 ]
add ecx 0x4
jmp r-xdata
mov ecx edx
imul ecx ecx 0x204
lea ecx [ ecx + eax + 0x144 ]
mov [ ebp - 0xc ] ecx
mov ecx [ eax + edx * 4 + 0x44 ]
xor edi edi
and ecx esi
jne r-xdata
mov edx [ ebx + 0x4 ]
mov edi [ ebx ]
and edx [ ebp - 0x8 ]
and edi esi
or edx edi
jne r-xdata
cmp ebx ecx
jne r-xdata
test ecx ecx
jge r-xdata
mov ecx [ eax + edx * 4 + 0xc4 ]
and ecx [ ebp - 0x8 ]
push 0x20
pop edi
jmp r-xdata
mov edi [ ecx ]
and edx [ ebp - 0x8 ]
and edi esi
or edx edi
jne r-xdata
add ebx 0x14
jmp r-xdata
add ecx ecx
inc edi
mov ecx [ ebp - 0xc ]
mov edx [ ecx + edi * 8 + 0x4 ]
mov ecx [ edx ]
sub ecx [ ebp - 0x10 ]
mov esi ecx
sar esi 0x4
dec esi
cmp esi 0x3f
mov [ ebp - 0x8 ] ecx
jle r-xdata
cmp ebx eax
jb r-xdata
cmp esi edi
je r-xdata
push 0x3f
pop esi
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
cmp ebx eax
jne r-xdata
test ecx ecx
je r-xdata
mov ecx [ edx + 0x4 ]
cmp ecx [ edx + 0x8 ]
jne r-xdata
add ebx 0x14
mov [ ebp + 0x8 ] ebx
push ebx
call sub_1002f007
pop ecx
mov ecx [ ebx + 0x10 ]
mov [ ecx ] eax
mov eax [ ebx + 0x10 ]
cmp [ eax ] 0xffffffff
je r-xdata
mov ebx [ rw-data ]
jmp r-xdata
mov esi [ ebp - 0x10 ]
add edx ecx
lea ecx [ esi + 0x1 ]
mov [ edx ] ecx
mov [ edx + esi - 0x4 ] ecx
mov esi [ ebp - 0xc ]
mov ecx [ esi ]
lea edi [ ecx + 0x1 ]
mov [ esi ] edi
test ecx ecx
jne r-xdata
mov [ edx ] ecx
mov [ ecx + edx - 0x4 ] ecx
jmp r-xdata
cmp [ ebp - 0x8 ] 0x0
mov ecx [ edx + 0x8 ]
mov edi [ edx + 0x4 ]
mov [ ecx + 0x4 ] edi
mov ecx [ edx + 0x4 ]
mov edi [ edx + 0x8 ]
mov [ ecx + 0x8 ] edi
je r-xdata
cmp edi 0x20
mov ebx 0x80000000
jge r-xdata
xor eax eax
jmp r-xdata
mov [ ebp + 0x8 ] ebx
cmp ebx ecx
jb r-xdata
mov ecx [ ebp - 0x4 ]
mov [ eax ] ecx
lea eax [ edx + 0x4 ]
cmp ebx [ rw-data ]
jne r-xdata
mov ecx [ ebp - 0x8 ]
mov ecx [ ebp - 0xc ]
lea ecx [ ecx + esi * 8 ]
mov edi [ ecx + 0x4 ]
mov [ edx + 0x8 ] ecx
mov [ edx + 0x4 ] edi
mov [ ecx + 0x4 ] edx
mov ecx [ edx + 0x4 ]
mov [ ecx + 0x8 ] edx
mov ecx [ edx + 0x4 ]
cmp ecx [ edx + 0x8 ]
jne r-xdata
lea ecx [ edi - 0x20 ]
shr ebx cl
mov ecx [ ebp - 0x4 ]
lea ecx [ eax + ecx * 4 + 0xc4 ]
lea edi [ eax + edi + 0x4 ]
not ebx
and [ ecx ] ebx
dec [ edi ]
mov [ ebp - 0x14 ] ebx
jne r-xdata
mov ecx edi
shr ebx cl
mov ecx [ ebp - 0x4 ]
lea edi [ eax + edi + 0x4 ]
not ebx
mov [ ebp - 0x14 ] ebx
and ebx [ eax + ecx * 4 + 0x44 ]
mov [ eax + ecx * 4 + 0x44 ] ebx
dec [ edi ]
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
cmp ebx ecx
jne r-xdata
mov ecx [ ebp - 0x4 ]
cmp ecx [ rw-data ]
jne r-xdata
mov ecx [ ebp - 0x8 ]
mov cl [ esi + eax + 0x4 ]
mov [ ebp + 0xb ] cl
inc cl
cmp esi 0x20
mov [ esi + eax + 0x4 ] cl
jge r-xdata
mov ebx [ ebp + 0x8 ]
mov ebx [ ebp + 0x8 ]
mov ecx [ ebp - 0x14 ]
and [ ebx + 0x4 ] ecx
jmp r-xdata
mov ecx [ ebp - 0x14 ]
mov ebx [ ebp + 0x8 ]
and [ ebx ] ecx
jmp r-xdata
add ebx 0x14
call sub_1002ef57
mov ebx eax
mov [ ebp + 0x8 ] ebx
test ebx ebx
jne r-xdata
and [ rw-data ] 0x0
cmp [ ebp + 0xb ] 0x0
jne r-xdata
cmp [ ebp + 0xb ] 0x0
jne r-xdata
mov ecx [ ebp - 0x4 ]
lea edi [ eax + ecx * 4 + 0xc4 ]
lea ecx [ esi - 0x20 ]
mov esi 0x80000000
shr esi cl
or [ edi ] esi
lea ecx [ esi - 0x20 ]
mov edi 0x80000000
shr edi cl
or [ ebx + 0x4 ] edi
mov ecx esi
mov edi 0x80000000
shr edi cl
mov ecx [ ebp - 0x4 ]
or [ eax + ecx * 4 + 0x44 ] edi
jmp r-xdata
mov edi 0x80000000
mov ecx esi
shr edi cl
or [ ebx ] edi
sub_1002f6d5
mov edi edi
push ebp
mov ebp esp
push ecx
push esi
mov esi [ ebp + 0xc ]
push esi
call sub_10030ac0
mov [ ebp + 0xc ] eax
mov eax [ esi + 0xc ]
pop ecx
test al 0x82
jne r-xdata
test al 0x40
je r-xdata
call sub_1002c068
mov [ eax ] 0x9
push ebx
xor ebx ebx
test al 0x1
je r-xdata
call sub_1002c068
mov [ eax ] 0x22
jmp r-xdata
pop esi
leave
retn
mov eax [ esi + 0xc ]
and eax 0xffffffef
or eax 0x2
mov [ esi + 0xc ] eax
mov [ esi + 0x4 ] ebx
mov [ ebp - 0x4 ] ebx
test eax 0x10c
jne r-xdata
mov [ esi + 0x4 ] ebx
test al 0x10
je r-xdata
or [ esi + 0xc ] 0x20
or eax 0xffffffff
jmp r-xdata
test [ esi + 0xc ] 0x108
push edi
je r-xdata
call sub_10028ff7
add eax 0x20
cmp esi eax
je r-xdata
or eax 0x20
mov [ esi + 0xc ] eax
or eax 0xffffffff
jmp r-xdata
mov ecx [ esi + 0x8 ]
and eax 0xfffffffe
mov [ esi ] ecx
mov [ esi + 0xc ] eax
xor edi edi
inc edi
push edi
lea eax [ ebp + 0x8 ]
push eax
push [ ebp + 0xc ]
call sub_10031225
add esp 0xc
mov [ ebp - 0x4 ] eax
mov eax [ esi + 0x8 ]
mov edi [ esi ]
lea ecx [ eax + 0x1 ]
mov [ esi ] ecx
mov ecx [ esi + 0x18 ]
sub edi eax
dec ecx
cmp edi ebx
mov [ esi + 0x4 ] ecx
jle r-xdata
push [ ebp + 0xc ]
call sub_100376e0
pop ecx
test eax eax
jne r-xdata
call sub_10028ff7
add eax 0x40
cmp esi eax
jne r-xdata
pop ebx
mov eax [ ebp + 0x8 ]
and eax 0xff
or [ esi + 0xc ] 0x20
or eax 0xffffffff
jmp r-xdata
mov ecx [ ebp + 0xc ]
cmp ecx 0xffffffff
je r-xdata
push edi
push eax
push [ ebp + 0xc ]
call sub_10031225
add esp 0xc
mov [ ebp - 0x4 ] eax
jmp r-xdata
push esi
call sub_10031301
pop ecx
pop edi
mov eax rw-data
cmp ecx 0xfffffffe
je r-xdata
mov eax [ esi + 0x8 ]
mov cl [ ebp + 0x8 ]
mov [ eax ] cl
jmp r-xdata
push 0x2
push ebx
push ebx
push ecx
call sub_100375c7
and eax edx
add esp 0x10
cmp eax 0xffffffff
je r-xdata
mov eax ecx
and eax 0x1f
mov edx ecx
sar edx 0x5
shl eax 0x6
add eax [ edx * 4 + rw-data ]
jmp r-xdata
cmp [ ebp - 0x4 ] edi
je r-xdata
test [ eax + 0x4 ] 0x20
je r-xdata
sub_1002f839
mov edi edi
push ebp
mov ebp esp
test [ edi + 0xc ] 0x40
push ebx
push esi
mov esi eax
mov ebx ecx
je r-xdata
cmp [ ebp + 0x8 ] 0x0
jg r-xdata
cmp [ edi + 0x8 ] 0x0
jne r-xdata
mov al [ ebx ]
dec [ ebp + 0x8 ]
mov ecx edi
call sub_100378e3
inc ebx
cmp [ esi ] 0xffffffff
jne r-xdata
pop esi
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
add [ esi ] eax
jmp r-xdata
call sub_1002c068
cmp [ eax ] 0x2a
jne r-xdata
mov ecx edi
mov al 0x3f
call sub_100378e3
sub_1002f886
mov edi edi
push ebp
mov ebp esp
sub esp 0x278
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
xor eax eax
push edi
mov edi [ ebp + 0x14 ]
push [ ebp + 0x10 ]
lea ecx [ ebp - 0x25c ]
mov [ ebp - 0x24c ] esi
mov [ ebp - 0x224 ] edi
mov [ ebp - 0x248 ] eax
mov [ ebp - 0x210 ] eax
mov [ ebp - 0x234 ] eax
mov [ ebp - 0x218 ] eax
mov [ ebp - 0x230 ] eax
mov [ ebp - 0x240 ] eax
mov [ ebp - 0x238 ] eax
call sub_10029358
test esi esi
jne r-xdata
test [ esi + 0xc ] 0x40
jne r-xdata
call sub_1002c068
mov [ eax ] 0x16
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_100261c9
add esp 0x14
cmp [ ebp - 0x250 ] 0x0
je r-xdata
xor ecx ecx
cmp ebx ecx
je r-xdata
push esi
call sub_10030ac0
pop ecx
mov edx rw-data
cmp eax 0xffffffff
je r-xdata
or eax 0xffffffff
jmp r-xdata
mov eax [ ebp - 0x254 ]
and [ eax + 0x70 ] 0xfffffffd
mov dl [ ebx ]
mov [ ebp - 0x228 ] ecx
mov [ ebp - 0x220 ] ecx
mov [ ebp - 0x244 ] ecx
mov [ ebp - 0x211 ] dl
test dl dl
je r-xdata
mov ecx edx
cmp eax 0xfffffffe
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_10025c8d
leave
retn
cmp [ ebp - 0x250 ] 0x0
je r-xdata
inc ebx
cmp [ ebp - 0x228 ] 0x0
mov [ ebp - 0x23c ] ebx
jl r-xdata
cmp eax 0xffffffff
je r-xdata
mov ecx eax
and ecx 0x1f
mov esi eax
sar esi 0x5
shl ecx 0x6
add ecx [ esi * 4 + rw-data ]
jmp r-xdata
mov eax [ ebp - 0x228 ]
mov eax [ ebp - 0x254 ]
and [ eax + 0x70 ] 0xfffffffd
mov al dl
sub al 0x20
cmp al 0x58
ja r-xdata
mov eax edx
cmp eax 0xfffffffe
je r-xdata
test [ ecx + 0x24 ] 0x7f
jne r-xdata
xor esi esi
xor eax eax
movsx eax dl
movsx eax [ eax + r--data ]
and eax 0xf
xor esi esi
jmp r-xdata
mov ecx eax
and eax 0x1f
sar ecx 0x5
shl eax 0x6
add eax [ ecx * 4 + rw-data ]
jmp r-xdata
mov ebx [ ebp - 0x23c ]
mov al [ ebx ]
mov [ ebp - 0x211 ] al
test al al
je r-xdata
jmp [ eax * 4 + r-xdata ]
movsx eax [ ecx + eax * 8 + r--data ]
push 0x7
sar eax 0x4
pop ecx
mov [ ebp - 0x26c ] eax
cmp eax ecx
ja r-xdata
test [ eax + 0x24 ] 0x80
jne r-xdata
mov ecx [ ebp - 0x26c ]
mov edi [ ebp - 0x224 ]
mov dl al
jmp r-xdata
sub_1003041e
mov edi edi
push ebp
mov ebp esp
sub esp 0x20
push ebx
xor ebx ebx
cmp [ ebp + 0x14 ] ebx
jne r-xdata
push esi
mov esi [ ebp + 0xc ]
push edi
mov edi [ ebp + 0x10 ]
cmp edi ebx
je r-xdata
call sub_1002c068
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x16
call sub_100261c9
add esp 0x14
or eax 0xffffffff
jmp r-xdata
mov eax 0x7fffffff
mov [ ebp - 0x1c ] eax
cmp edi eax
ja r-xdata
cmp esi ebx
jne r-xdata
pop ebx
leave
retn
push [ ebp + 0x1c ]
lea eax [ ebp - 0x20 ]
push [ ebp + 0x18 ]
mov [ ebp - 0x14 ] 0x42
push [ ebp + 0x14 ]
mov [ ebp - 0x18 ] esi
push eax
mov [ ebp - 0x20 ] esi
call [ ebp + 0x8 ]
add esp 0x10
mov [ ebp + 0x14 ] eax
cmp esi ebx
je r-xdata
mov [ ebp - 0x1c ] edi
call sub_1002c068
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x16
call sub_100261c9
add esp 0x14
or eax 0xffffffff
jmp r-xdata
pop edi
pop esi
cmp eax ebx
jl r-xdata
xor eax eax
cmp [ ebp - 0x1c ] ebx
mov [ esi + edi - 0x1 ] bl
setge al
dec eax
dec eax
dec [ ebp - 0x1c ]
js r-xdata
lea eax [ ebp - 0x20 ]
push eax
push ebx
call sub_1002f6d5
pop ecx
pop ecx
cmp eax 0xffffffff
je r-xdata
mov eax [ ebp - 0x20 ]
mov [ eax ] bl
jmp r-xdata
mov eax [ ebp + 0x14 ]
jmp r-xdata
sub_100304ea
mov edi edi
push ebp
mov ebp esp
push ebx
xor ebx ebx
cmp [ ebp + 0x10 ] ebx
jne r-xdata
push esi
mov esi [ ebp + 0x8 ]
cmp esi ebx
je r-xdata
call sub_1002c068
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x16
call sub_100261c9
add esp 0x14
or eax 0xffffffff
jmp r-xdata
call sub_1002c068
mov [ eax ] 0x16
jmp r-xdata
cmp [ ebp + 0xc ] ebx
ja r-xdata
pop ebx
pop ebp
retn
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_100261c9
add esp 0x14
or eax 0xffffffff
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
push sub_1003793c
call sub_1003041e
add esp 0x18
cmp eax ebx
jge r-xdata
cmp eax 0xfffffffe
jne r-xdata
mov [ esi ] bl
pop esi
call sub_1002c068
mov [ eax ] 0x22
sub_10030572
push ebp
mov ebp esp
sub esp 0x4
mov [ ebp - 0x4 ] edi
mov edi [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
shr ecx 0x7
pxor xmm0 xmm0
jmp r-xdata
movdqa [ edi ] xmm0
movdqa [ edi + 0x10 ] xmm0
movdqa [ edi + 0x20 ] xmm0
movdqa [ edi + 0x30 ] xmm0
movdqa [ edi + 0x40 ] xmm0
movdqa [ edi + 0x50 ] xmm0
movdqa [ edi + 0x60 ] xmm0
movdqa [ edi + 0x70 ] xmm0
lea edi [ edi + 0x80 ]
dec ecx
jne r-xdata
mov edi [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
sub_100305c9
push ebp
mov ebp esp
sub esp 0x10
mov [ ebp - 0x4 ] edi
mov eax [ ebp + 0x8 ]
cdq
mov edi eax
xor edi edx
sub edi edx
and edi 0xf
xor edi edx
sub edi edx
test edi edi
jne r-xdata
neg edi
add edi 0x10
mov [ ebp - 0x10 ] edi
xor eax eax
mov edi [ ebp + 0x8 ]
mov ecx [ ebp - 0x10 ]
[ edi ]
mov eax [ ebp - 0x10 ]
mov ecx [ ebp + 0x8 ]
mov edx [ ebp + 0x10 ]
add ecx eax
sub edx eax
push edx
push 0x0
push ecx
call sub_100305c9
add esp 0xc
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0x10 ]
mov edx ecx
and edx 0x7f
mov [ ebp - 0xc ] edx
cmp ecx edx
je r-xdata
test edx edx
je r-xdata
sub ecx edx
push ecx
push eax
call sub_10030572
add esp 0x8
mov eax [ ebp + 0x8 ]
mov edx [ ebp - 0xc ]
mov edi [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
add eax [ ebp + 0x10 ]
sub eax edx
mov [ ebp - 0x8 ] eax
xor eax eax
mov edi [ ebp - 0x8 ]
mov ecx [ ebp - 0xc ]
[ edi ]
mov eax [ ebp + 0x8 ]
jmp r-xdata
sub_100306a8
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
xor eax eax
push ebx
mov [ ebp - 0x4 ] eax
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] eax
push ebx
pushfd
pop eax
mov ecx eax
xor eax 0x200000
push eax
popfd
pushfd
pop edx
sub edx ecx
je r-xdata
pop ebx
test [ ebp - 0x4 ] 0x4000000
je r-xdata
push ecx
popfd
xor eax eax
cpuid
mov [ ebp - 0xc ] eax
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x14 ] edx
mov [ ebp - 0x10 ] ecx
mov eax 0x1
cpuid
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
xor eax eax
call sub_10030658
test eax eax
je r-xdata
xor eax eax
inc eax
jmp r-xdata
pop ebx
leave
retn
sub_10030717
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push ebx
mov ebx [ ebp + 0x8 ]
push esi
push edi
xor esi esi
xor edi edi
mov [ ebp - 0x4 ] edi
cmp edi 0x17
jae r-xdata
inc edi
mov [ ebp - 0x4 ] edi
cmp edi 0x17
jb r-xdata
pop edi
pop esi
pop ebx
leave
retn
push 0x3
call sub_10038675
pop ecx
cmp eax 0x1
je r-xdata
cmp ebx [ edi * 8 + rw-data ]
je r-xdata
push 0xfffffff4
call [ GetStdHandle@IAT ]
mov ebx eax
cmp ebx esi
je r-xdata
push 0x3
call sub_10038675
pop ecx
test eax eax
jne r-xdata
cmp ebx 0xffffffff
je r-xdata
cmp ebx 0xfc
je r-xdata
cmp [ rw-data ] 0x1
je r-xdata
push 0x0
lea eax [ ebp - 0x8 ]
push eax
lea esi [ edi * 8 + rw-data ]
push [ esi ]
call sub_10025d30
pop ecx
push eax
push [ esi ]
push ebx
call [ WriteFile@IAT ]
push r--data
mov ebx 0x314
push ebx
mov edi rw-data
push edi
call sub_1002d40c
add esp 0xc
test eax eax
je r-xdata
push 0x104
mov esi rw-data
push esi
push 0x0
mov [ rw-data ] 0x0
call [ GetModuleFileNameA@IAT ]
test eax eax
jne r-xdata
push esi
push esi
push esi
push esi
push esi
call sub_100260a1
add esp 0x14
push esi
call sub_10025d30
inc eax
pop ecx
cmp eax 0x3c
jbe r-xdata
push r--data
push 0x2fb
push esi
call sub_1002d40c
add esp 0xc
test eax eax
je r-xdata
xor esi esi
push esi
call sub_10025d30
sub esi 0x3b
add eax esi
push 0x3
mov ecx rw-data
push r--data
sub ecx eax
push ecx
push eax
call sub_100353db
add esp 0x14
test eax eax
je r-xdata
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_100260a1
add esp 0x14
mov eax [ ebp - 0x4 ]
push [ eax * 8 + rw-data ]
push ebx
push edi
call sub_10035367
add esp 0xc
test eax eax
je r-xdata
push esi
push esi
push esi
push esi
push esi
call sub_100260a1
add esp 0x14
xor esi esi
push esi
push esi
push esi
push esi
push esi
call sub_100260a1
add esp 0x14
jmp r-xdata
push 0x12010
push r--data
push edi
call sub_1003850c
add esp 0xc
jmp r-xdata
push esi
push esi
push esi
push esi
push esi
call sub_100260a1
add esp 0x14
push r--data
push ebx
push edi
call sub_10035367
add esp 0xc
test eax eax
je r-xdata
sub_100308c2
push 0x3
call sub_10038675
pop ecx
cmp eax 0x1
je r-xdata
push 0xfc
call sub_10030717
push 0xff
call sub_10030717
pop ecx
pop ecx
push 0x3
call sub_10038675
pop ecx
test eax eax
jne r-xdata
retn
cmp [ rw-data ] 0x1
jne r-xdata
sub_100308fb
mov edi edi
push ebp
mov ebp esp
sub esp 0x94
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebx
push esi
mov esi [ ebp + 0x18 ]
xor ebx ebx
cmp [ ebp + 0xc ] 0x1
push edi
mov [ ebp - 0x8c ] eax
mov [ ebp - 0x94 ] esi
jne r-xdata
cmp [ ebp + 0xc ] ebx
jne r-xdata
push ebx
push 0x80
lea edi [ ebp - 0x84 ]
mov ecx edi
push ecx
push [ ebp + 0x14 ]
mov [ ebp - 0x88 ] ebx
push [ ebp + 0x10 ]
push eax
call sub_10038833
mov esi eax
add esp 0x18
cmp esi ebx
jne r-xdata
or eax 0xffffffff
push ebx
push 0x4
mov edi rw-data
push edi
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push eax
call sub_100386c0
add esp 0x18
test eax eax
je r-xdata
push 0x1
push esi
call sub_1002c982
pop ecx
pop ecx
mov ecx [ ebp - 0x94 ]
mov [ ecx ] eax
cmp eax ebx
jne r-xdata
call [ GetLastError@IAT ]
cmp eax 0x7a
jne r-xdata
mov [ esi ] bl
lea ecx [ esi - 0x1 ]
push ecx
push edi
push esi
push eax
call sub_100353db
add esp 0x10
test eax eax
je r-xdata
cmp [ ebp - 0x88 ] ebx
je r-xdata
push ebx
push ebx
push ebx
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp - 0x8c ]
call sub_10038833
add esp 0x18
mov [ ebp - 0x90 ] eax
cmp eax ebx
je r-xdata
xor eax eax
jmp r-xdata
mov al [ esi ]
mov cl 0xa
imul cl
add al bl
sub al 0x30
inc edi
inc edi
cmp edi rw-data
mov [ esi ] al
jl r-xdata
cmp [ ebp - 0x88 ] ebx
je r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_100260a1
add esp 0x14
push edi
call sub_1002644d
pop ecx
xor esi esi
inc esi
push esi
push eax
call sub_1002c982
mov edi eax
pop ecx
pop ecx
cmp edi ebx
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_10025c8d
leave
retn
mov bl [ edi ]
movzx eax bl
push eax
call sub_1002952e
pop ecx
test eax eax
je r-xdata
jmp r-xdata
push edi
call sub_1002644d
pop ecx
push ebx
push [ ebp - 0x90 ]
mov [ ebp - 0x88 ] esi
push edi
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp - 0x8c ]
call sub_10038833
mov esi eax
add esp 0x18
cmp esi ebx
je r-xdata
sub_10030a89
mov edi edi
push esi
call sub_1002daab
mov esi eax
test esi esi
jne r-xdata
cmp [ esi + 0x44 ] 0x0
jne r-xdata
call sub_1002c068
mov [ eax ] 0xc
xor eax eax
pop esi
retn
mov eax [ esi + 0x44 ]
pop esi
retn
push 0x24
call sub_1002c93d
pop ecx
mov [ esi + 0x44 ] eax
test eax eax
je r-xdata
sub_10030ac0
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
xor esi esi
cmp eax esi
jne r-xdata
mov eax [ eax + 0x10 ]
call sub_1002c068
push esi
push esi
push esi
push esi
push esi
mov [ eax ] 0x16
call sub_100261c9
add esp 0x14
or eax 0xffffffff
jmp r-xdata
pop esi
pop ebp
retn
sub_10030af2
mov edi edi
push ebp
mov ebp esp
mov eax 0x1ae4
call sub_1002d210
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0xc ]
push esi
xor esi esi
mov [ ebp - 0x1acc ] eax
mov [ ebp - 0x1ac8 ] esi
mov [ ebp - 0x1ad0 ] esi
cmp [ ebp + 0x10 ] esi
jne r-xdata
cmp eax esi
jne r-xdata
xor eax eax
jmp r-xdata
push ebx
push edi
mov edi [ ebp + 0x8 ]
mov eax edi
sar eax 0x5
lea esi [ eax * 4 + rw-data ]
mov eax [ esi ]
and edi 0x1f
shl edi 0x6
add eax edi
mov bl [ eax + 0x24 ]
add bl bl
sar bl 0x1
mov [ ebp - 0x1ad8 ] esi
mov [ ebp - 0x1ad9 ] bl
cmp bl 0x2
je r-xdata
call sub_1002c07b
mov [ eax ] esi
call sub_1002c068
push esi
push esi
push esi
push esi
push esi
mov [ eax ] 0x16
call sub_100261c9
add esp 0x14
or eax 0xffffffff
jmp r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop esi
call sub_10025c8d
leave
retn
mov ecx [ ebp + 0x10 ]
not ecx
test cl 0x1
jne r-xdata
cmp bl 0x1
jne r-xdata
test [ eax + 0x4 ] 0x20
je r-xdata
call sub_1002c07b
xor esi esi
mov [ eax ] esi
call sub_1002c068
push esi
push esi
push esi
push esi
push esi
mov [ eax ] 0x16
call sub_100261c9
add esp 0x14
jmp r-xdata
push [ ebp + 0x8 ]
call sub_100376e0
pop ecx
test eax eax
je r-xdata
push 0x2
push 0x0
push 0x0
push [ ebp + 0x8 ]
call sub_10037542
add esp 0x10
or eax 0xffffffff
jmp r-xdata
xor ecx ecx
mov eax [ esi ]
test [ edi + eax + 0x4 ] 0x80
je r-xdata
pop edi
pop ebx
push 0x0
lea ecx [ ebp - 0x1ad4 ]
push ecx
push [ ebp + 0x10 ]
push [ ebp - 0x1acc ]
push [ eax ]
call [ WriteFile@IAT ]
test eax eax
je r-xdata
mov eax [ ebp - 0x1acc ]
mov [ ebp - 0x1ac0 ] ecx
test bl bl
jne r-xdata
call sub_1002db24
mov eax [ eax + 0x6c ]
xor ecx ecx
cmp [ eax + 0x14 ] ecx
lea eax [ ebp - 0x1ae4 ]
sete cl
push eax
mov eax [ esi ]
push [ edi + eax ]
mov [ ebp - 0x1ae0 ] ecx
call [ GetConsoleMode@IAT ]
test eax eax
je r-xdata
call [ GetLastError@IAT ]
mov [ ebp - 0x1ac0 ] eax
mov eax [ ebp - 0x1ad4 ]
and [ ebp - 0x1ac0 ] 0x0
mov [ ebp - 0x1ac8 ] eax
jmp r-xdata
mov [ ebp - 0x1abc ] eax
cmp bl 0x2
jne r-xdata
mov [ ebp - 0x1ac4 ] eax
cmp [ ebp + 0x10 ] ecx
jbe r-xdata
xor ecx ecx
cmp [ ebp - 0x1ae0 ] ecx
je r-xdata
mov eax [ ebp - 0x1ac8 ]
sub eax [ ebp - 0x1ad0 ]
cmp [ ebp - 0x1ac0 ] 0x0
je r-xdata
cmp [ ebp - 0x1ac8 ] 0x0
jne r-xdata
cmp [ ebp + 0x10 ] ecx
jbe r-xdata
cmp [ ebp + 0x10 ] ecx
jbe r-xdata
mov eax [ esi ]
test [ edi + eax + 0x4 ] 0x40
je r-xdata
jmp r-xdata
call [ GetConsoleCP@IAT ]
mov ebx [ ebp - 0x1acc ]
mov [ ebp - 0x1ae4 ] eax
xor eax eax
mov [ ebp - 0x1ac4 ] eax
cmp [ ebp + 0x10 ] eax
jbe r-xdata
test bl bl
je r-xdata
mov esi [ ebp - 0x1ad8 ]
push 0x5
pop esi
cmp [ ebp - 0x1ac0 ] esi
jne r-xdata
mov ecx [ ebp - 0x1abc ]
and [ ebp - 0x1ac4 ] 0x0
sub ecx [ ebp - 0x1acc ]
push 0x2
lea eax [ ebp - 0x6b8 ]
pop esi
jmp r-xdata
call sub_1002c068
mov [ eax ] 0x1c
call sub_1002c07b
and [ eax ] 0x0
mov eax [ ebp - 0x1acc ]
cmp [ eax ] 0x1a
jne r-xdata
mov ecx [ ebp - 0x1ac4 ]
and [ ebp - 0x1abc ] 0x0
sub ecx [ ebp - 0x1acc ]
lea eax [ ebp - 0x1ab8 ]
mov [ ebp - 0x1abc ] eax
mov eax [ esi ]
add eax edi
test [ eax + 0x4 ] 0x80
je r-xdata
push [ ebp - 0x1ac0 ]
call sub_1002c08e
pop ecx
jmp r-xdata
call sub_1002c068
mov [ eax ] 0x9
call sub_1002c07b
mov [ eax ] esi
jmp r-xdata
xor esi esi
push esi
push esi
push 0xd55
lea ecx [ ebp - 0x1410 ]
push ecx
lea ecx [ ebp - 0x6b8 ]
sub eax ecx
cdq
sub eax edx
sar eax 0x1
push eax
mov eax ecx
push eax
push esi
push 0xfde9
call [ WideCharToMultiByte@IAT ]
mov ebx eax
cmp ebx esi
je r-xdata
mov edx [ ebp - 0x1abc ]
movzx edx [ edx ]
add [ ebp - 0x1abc ] esi
add ecx esi
cmp dx 0xa
jne r-xdata
mov ecx [ ebp - 0x1abc ]
and [ ebp - 0x1ac4 ] 0x0
sub ecx [ ebp - 0x1acc ]
lea eax [ ebp - 0x1ab8 ]
xor eax eax
jmp r-xdata
mov ebx eax
lea eax [ ebp - 0x1ab8 ]
sub ebx eax
push 0x0
lea eax [ ebp - 0x1ad4 ]
push eax
push ebx
lea eax [ ebp - 0x1ab8 ]
push eax
mov eax [ esi ]
push [ edi + eax ]
call [ WriteFile@IAT ]
test eax eax
je r-xdata
mov edx [ ebp - 0x1ac4 ]
inc [ ebp - 0x1ac4 ]
mov dl [ edx ]
inc ecx
cmp dl 0xa
jne r-xdata
cmp al 0x1
je r-xdata
mov cl [ ebx ]
mov esi [ ebp - 0x1ad8 ]
xor eax eax
cmp cl 0xa
sete al
mov [ ebp - 0x1ae0 ] eax
mov eax [ esi ]
add eax edi
cmp [ eax + 0x38 ] 0x0
je r-xdata
push 0x0
lea eax [ ebp - 0x1ad4 ]
push eax
mov eax ebx
sub eax esi
push eax
lea eax [ ebp + esi - 0x1410 ]
push eax
mov eax [ ebp - 0x1ad8 ]
mov eax [ eax ]
push [ edi + eax ]
call [ WriteFile@IAT ]
test eax eax
je r-xdata
add [ ebp - 0x1ac4 ] esi
mov [ eax ] dx
add eax esi
cmp [ ebp - 0x1ac4 ] 0x6a8
jb r-xdata
push 0xd
pop ebx
mov [ eax ] bx
add eax esi
add [ ebp - 0x1ac4 ] esi
mov ebx eax
lea eax [ ebp - 0x1ab8 ]
sub ebx eax
push 0x0
lea eax [ ebp - 0x1ad4 ]
push eax
push ebx
lea eax [ ebp - 0x1ab8 ]
push eax
mov eax [ esi ]
push [ edi + eax ]
call [ WriteFile@IAT ]
test eax eax
je r-xdata
mov edx [ ebp - 0x1abc ]
add [ ebp - 0x1abc ] 0x2
movzx edx [ edx ]
inc ecx
inc ecx
cmp dx 0xa
jne r-xdata
mov eax [ ebp - 0x1ad4 ]
add [ ebp - 0x1ac8 ] eax
cmp eax ebx
jl r-xdata
mov [ eax ] dl
inc eax
inc [ ebp - 0x1abc ]
cmp [ ebp - 0x1abc ] 0x13ff
jb r-xdata
inc [ ebp - 0x1ad0 ]
mov [ eax ] 0xd
inc eax
inc [ ebp - 0x1abc ]
movzx esi [ ebx ]
xor ecx ecx
cmp si 0xa
sete cl
inc ebx
inc ebx
add [ ebp - 0x1abc ] 0x2
mov [ ebp - 0x1ac0 ] esi
mov [ ebp - 0x1ae0 ] ecx
cmp al 0x2
jne r-xdata
movsx eax cl
push eax
call sub_100365ed
pop ecx
test eax eax
je r-xdata
mov dl [ eax + 0x34 ]
mov [ ebp - 0xc ] dl
mov [ ebp - 0xb ] cl
and [ eax + 0x38 ] 0x0
push 0x2
lea eax [ ebp - 0xc ]
push eax
jmp r-xdata
call [ GetLastError@IAT ]
mov [ ebp - 0x1ac0 ] eax
add esi [ ebp - 0x1ad4 ]
cmp ebx esi
jg r-xdata
cmp ecx [ ebp + 0x10 ]
jae r-xdata
mov eax [ ebp - 0x1ad4 ]
add [ ebp - 0x1ac8 ] eax
cmp eax ebx
jl r-xdata
add [ ebp - 0x1ac4 ] 0x2
mov [ eax ] dx
inc eax
inc eax
cmp [ ebp - 0x1ac4 ] 0x13fe
jb r-xdata
add [ ebp - 0x1ad0 ] 0x2
push 0xd
pop ebx
mov [ eax ] bx
inc eax
inc eax
add [ ebp - 0x1ac4 ] 0x2
mov eax [ ebp - 0x1ac4 ]
sub eax [ ebp - 0x1acc ]
cmp eax [ ebp + 0x10 ]
jb r-xdata
cmp ecx [ ebp + 0x10 ]
jae r-xdata
push [ ebp - 0x1ac0 ]
call sub_10038870
pop ecx
cmp ax [ ebp - 0x1ac0 ]
jne r-xdata
cmp al 0x2
jne r-xdata
cmp al 0x1
je r-xdata
push 0x1
push ebx
mov ecx [ ebp - 0x1acc ]
sub ecx ebx
add ecx [ ebp + 0x10 ]
xor eax eax
inc eax
cmp ecx eax
jbe r-xdata
lea eax [ ebp - 0x1ac0 ]
push eax
call sub_10038a4c
add esp 0xc
cmp eax 0xffffffff
je r-xdata
mov eax [ ebp - 0x1abc ]
sub eax [ ebp - 0x1acc ]
mov [ ebp - 0x1ac8 ] eax
cmp eax [ ebp + 0x10 ]
jb r-xdata
jmp r-xdata
mov eax [ ebp - 0x1abc ]
sub eax [ ebp - 0x1acc ]
cmp eax [ ebp + 0x10 ]
jb r-xdata
cmp ecx [ ebp + 0x10 ]
jae r-xdata
mov esi [ ebp - 0x1ad8 ]
jmp r-xdata
add [ ebp - 0x1ac8 ] 0x2
cmp [ ebp - 0x1ae0 ] 0x0
je r-xdata
mov eax [ ebp + 0x10 ]
cmp [ ebp - 0x1abc ] eax
jb r-xdata
xor eax eax
push eax
push eax
push 0x5
lea ecx [ ebp - 0xc ]
push ecx
push 0x1
lea ecx [ ebp - 0x1ac0 ]
push ecx
push eax
push [ ebp - 0x1ae4 ]
inc ebx
inc [ ebp - 0x1abc ]
call [ WideCharToMultiByte@IAT ]
mov esi eax
test esi esi
je r-xdata
mov ecx [ esi ]
mov dl [ ebx ]
inc [ ebp - 0x1ac8 ]
mov [ edi + ecx + 0x34 ] dl
mov ecx [ esi ]
mov [ edi + ecx + 0x38 ] eax
jmp r-xdata
push 0x2
lea eax [ ebp - 0x1ac0 ]
push ebx
push eax
call sub_10038a4c
add esp 0xc
cmp eax 0xffffffff
je r-xdata
jmp r-xdata
cmp ebx esi
jg r-xdata
mov esi [ ebp - 0x1ad8 ]
jmp r-xdata
push 0xd
pop eax
push eax
mov [ ebp - 0x1ac0 ] eax
call sub_10038870
pop ecx
cmp ax [ ebp - 0x1ac0 ]
jne r-xdata
mov al [ ebp - 0x1ad9 ]
test al al
jne r-xdata
jmp r-xdata
push 0x0
lea eax [ ebp - 0x1ac4 ]
push eax
push esi
lea eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x1ad8 ]
mov eax [ eax ]
push [ edi + eax ]
call [ WriteFile@IAT ]
test eax eax
je r-xdata
inc ebx
inc [ ebp - 0x1abc ]
jmp r-xdata
inc [ ebp - 0x1ac8 ]
inc [ ebp - 0x1ad0 ]
mov eax [ ebp - 0x1abc ]
mov ecx [ ebp - 0x1ad0 ]
add eax ecx
cmp [ ebp - 0x1ac4 ] esi
mov [ ebp - 0x1ac8 ] eax
jl r-xdata
cmp [ ebp - 0x1ae0 ] 0x0
je r-xdata
push 0x0
lea eax [ ebp - 0x1ac4 ]
push eax
push 0x1
lea eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x1ad8 ]
mov eax [ eax ]
mov [ ebp - 0xc ] 0xd
push [ edi + eax ]
call [ WriteFile@IAT ]
test eax eax
je r-xdata
cmp [ ebp - 0x1ac4 ] 0x1
jl r-xdata
inc [ ebp - 0x1ad0 ]
inc [ ebp - 0x1ac8 ]
jmp r-xdata
sub_10031225
push 0x10
push r--data
call sub_1002e7e4
mov eax [ ebp + 0x8 ]
cmp eax 0xfffffffe
jne r-xdata
xor edi edi
cmp eax edi
jl r-xdata
call sub_1002c07b
and [ eax ] 0x0
call sub_1002c068
mov [ eax ] 0x9
call sub_1002c07b
mov [ eax ] edi
call sub_1002c068
mov [ eax ] 0x9
push edi
push edi
push edi
push edi
push edi
call sub_100261c9
add esp 0x14
jmp r-xdata
cmp eax [ rw-data ]
jb r-xdata
call sub_1002e829
retn
or eax 0xffffffff
jmp r-xdata
mov ecx eax
sar ecx 0x5
lea ebx [ ecx * 4 + rw-data ]
mov esi eax
and esi 0x1f
shl esi 0x6
mov ecx [ ebx ]
movsx ecx [ ecx + esi + 0x4 ]
and ecx 0x1
je r-xdata
push eax
call sub_10038be4
pop ecx
mov [ ebp - 0x4 ] edi
mov eax [ ebx ]
test [ eax + esi + 0x4 ] 0x1
je r-xdata
call sub_1002c068
mov [ eax ] 0x9
call sub_1002c07b
mov [ eax ] edi
or [ ebp - 0x1c ] 0xffffffff
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_10030af2
add esp 0xc
mov [ ebp - 0x1c ] eax
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_100312f7
mov eax [ ebp - 0x1c ]
sub_10031301
mov edi edi
push ebp
mov ebp esp
inc [ rw-data ]
push 0x1000
call sub_1002c93d
pop ecx
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x8 ] eax
test eax eax
je r-xdata
or [ ecx + 0xc ] 0x4
lea eax [ ecx + 0x14 ]
mov [ ecx + 0x8 ] eax
mov [ ecx + 0x18 ] 0x2
or [ ecx + 0xc ] 0x8
mov [ ecx + 0x18 ] 0x1000
jmp r-xdata
mov eax [ ecx + 0x8 ]
and [ ecx + 0x4 ] 0x0
mov [ ecx ] eax
pop ebp
retn
sub_1003134a
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
xor edi edi
cmp esi edi
jne r-xdata
mov eax [ esi + 0xc ]
test al 0x83
je r-xdata
call sub_1002c068
push edi
push edi
push edi
push edi
push edi
mov [ eax ] 0x16
call sub_100261c9
add esp 0x14
jmp r-xdata
or eax 0xffffffff
test al 0x40
jne r-xdata
test al 0x2
je r-xdata
or eax 0x1
mov [ esi + 0xc ] eax
test eax 0x10c
jne r-xdata
or eax 0x20
mov [ esi + 0xc ] eax
jmp r-xdata
mov eax [ esi + 0x8 ]
mov [ esi ] eax
push esi
call sub_10031301
pop ecx
jmp r-xdata
neg eax
sbb eax eax
and eax 0x10
add eax 0x10
or [ esi + 0xc ] eax
mov [ esi + 0x4 ] edi
cmp eax 0xffffffff
je r-xdata
push [ esi + 0x18 ]
push [ esi + 0x8 ]
push esi
call sub_10030ac0
pop ecx
push eax
call sub_100328b5
add esp 0xc
mov [ esi + 0x4 ] eax
cmp eax edi
je r-xdata
test [ esi + 0xc ] 0x82
jne r-xdata
cmp [ esi + 0x18 ] 0x200
jne r-xdata
push esi
call sub_10030ac0
pop ecx
cmp eax 0xffffffff
je r-xdata
mov ecx [ esi ]
dec [ esi + 0x4 ]
movzx eax [ ecx ]
inc ecx
mov [ esi ] ecx
jmp r-xdata
mov eax [ esi + 0xc ]
test al 0x8
je r-xdata
mov eax rw-data
push esi
call sub_10030ac0
pop ecx
cmp eax 0xfffffffe
je r-xdata
pop edi
pop esi
pop ebp
retn
test eax 0x400
jne r-xdata
or [ esi + 0xc ] 0x2000
push esi
call sub_10030ac0
sar eax 0x5
push esi
lea edi [ eax * 4 + rw-data ]
call sub_10030ac0
and eax 0x1f
pop ecx
shl eax 0x6
add eax [ edi ]
pop ecx
jmp r-xdata
mov [ esi + 0x18 ] 0x1000
mov al [ eax + 0x4 ]
and al 0x82
cmp al 0x82
jne r-xdata
sub_10031475
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push esi
call sub_10038b6d
pop ecx
cmp eax 0xffffffff
jne r-xdata
push edi
push [ ebp + 0x10 ]
push 0x0
push [ ebp + 0xc ]
push eax
call [ SetFilePointer@IAT ]
mov edi eax
cmp edi 0xffffffff
jne r-xdata
call sub_1002c068
mov [ eax ] 0x9
or eax 0xffffffff
jmp r-xdata
xor eax eax
call [ GetLastError@IAT ]
jmp r-xdata
pop esi
pop ebp
retn
mov eax esi
sar eax 0x5
mov eax [ eax * 4 + rw-data ]
and esi 0x1f
shl esi 0x6
lea eax [ eax + esi + 0x4 ]
and [ eax ] 0xfd
mov eax edi
push eax
call sub_1002c08e
pop ecx
or eax 0xffffffff
jmp r-xdata
test eax eax
je r-xdata
pop edi
sub_100314ea
push 0x10
push r--data
call sub_1002e7e4
mov eax [ ebp + 0x8 ]
cmp eax 0xfffffffe
jne r-xdata
xor edi edi
cmp eax edi
jl r-xdata
call sub_1002c07b
and [ eax ] 0x0
call sub_1002c068
mov [ eax ] 0x9
call sub_1002c07b
mov [ eax ] edi
call sub_1002c068
mov [ eax ] 0x9
push edi
push edi
push edi
push edi
push edi
call sub_100261c9
add esp 0x14
jmp r-xdata
cmp eax [ rw-data ]
jb r-xdata
call sub_1002e829
retn
or eax 0xffffffff
jmp r-xdata
mov ecx eax
sar ecx 0x5
lea ebx [ ecx * 4 + rw-data ]
mov esi eax
and esi 0x1f
shl esi 0x6
mov ecx [ ebx ]
movsx ecx [ ecx + esi + 0x4 ]
and ecx 0x1
je r-xdata
push eax
call sub_10038be4
pop ecx
mov [ ebp - 0x4 ] edi
mov eax [ ebx ]
test [ eax + esi + 0x4 ] 0x1
je r-xdata
call sub_1002c068
mov [ eax ] 0x9
call sub_1002c07b
mov [ eax ] edi
or [ ebp - 0x1c ] 0xffffffff
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_10031475
add esp 0xc
mov [ ebp - 0x1c ] eax
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_100315bc
mov eax [ ebp - 0x1c ]
sub_100315c6
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
push ebx
push edi
mov edi [ ebp + 0x8 ]
xor ebx ebx
cmp edi ebx
jne r-xdata
push edi
call sub_10030ac0
cmp [ edi + 0x4 ] ebx
pop ecx
mov [ ebp - 0x4 ] eax
jge r-xdata
call sub_1002c068
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x16
call sub_100261c9
add esp 0x14
push 0x1
push ebx
push eax
call sub_100314ea
add esp 0xc
cmp eax ebx
mov [ ebp - 0x8 ] eax
jl r-xdata
mov [ edi + 0x4 ] ebx
pop edi
pop ebx
leave
retn
or eax 0xffffffff
jmp r-xdata
mov edx [ edi + 0xc ]
test edx 0x108
jne r-xdata
mov eax [ edi ]
mov ecx [ edi + 0x8 ]
push esi
mov esi eax
sub esi ecx
mov [ ebp - 0xc ] esi
test dl 0x3
je r-xdata
sub eax [ edi + 0x4 ]
jmp r-xdata
test dl dl
js r-xdata
mov edx [ ebp - 0x4 ]
mov esi [ ebp - 0x4 ]
sar edx 0x5
mov edx [ edx * 4 + rw-data ]
and esi 0x1f
shl esi 0x6
test [ edx + esi + 0x4 ] 0x80
je r-xdata
cmp [ ebp - 0x8 ] ebx
jne r-xdata
call sub_1002c068
mov [ eax ] 0x16
jmp r-xdata
mov edx ecx
cmp edx eax
jae r-xdata
test [ edi + 0xc ] 0x1
je r-xdata
mov eax [ ebp - 0xc ]
jmp r-xdata
or eax 0xffffffff
jmp r-xdata
mov esi eax
mov eax [ ebp - 0xc ]
mov ecx [ ebp - 0x8 ]
add eax ecx
mov edx [ edi + 0x4 ]
cmp edx ebx
jne r-xdata
pop esi
inc edx
cmp edx esi
jb r-xdata
inc [ ebp - 0xc ]
xor ebx ebx
mov ebx [ ebp - 0x4 ]
mov esi [ ebp - 0x4 ]
sub eax ecx
add eax edx
sar ebx 0x5
and esi 0x1f
lea ebx [ ebx * 4 + rw-data ]
mov [ ebp + 0x8 ] eax
mov eax [ ebx ]
shl esi 0x6
test [ eax + esi + 0x4 ] 0x80
je r-xdata
mov [ ebp - 0xc ] ebx
jmp r-xdata
cmp [ edx ] 0xa
jne r-xdata
mov eax [ ebp + 0x8 ]
sub [ ebp - 0x8 ] eax
push 0x2
push 0x0
push [ ebp - 0x4 ]
call sub_100314ea
add esp 0xc
cmp eax [ ebp - 0x8 ]
jne r-xdata
push 0x0
push [ ebp - 0x8 ]
push [ ebp - 0x4 ]
call sub_100314ea
add esp 0xc
test eax eax
jge r-xdata
mov eax [ edi + 0x8 ]
mov ecx [ ebp + 0x8 ]
add ecx eax
jmp r-xdata
mov eax 0x200
cmp [ ebp + 0x8 ] eax
ja r-xdata
cmp eax ecx
jb r-xdata
mov eax [ edi + 0x18 ]
mov ecx [ edi + 0xc ]
test cl 0x8
je r-xdata
cmp [ eax ] 0xa
jne r-xdata
test [ edi + 0xc ] 0x2000
jmp r-xdata
inc [ ebp + 0x8 ]
test ecx 0x400
je r-xdata
inc eax
inc [ ebp + 0x8 ]
je r-xdata
mov [ ebp + 0x8 ] eax
mov eax [ ebx ]
test [ eax + esi + 0x4 ] 0x4
sub_10031763
mov edi edi
push ebp
mov ebp esp
mov eax 0x1020
call sub_1002d210
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
push esi
call sub_10030ac0
mov ebx eax
xor eax eax
cmp [ esi + 0x4 ] eax
pop ecx
mov [ ebp - 0x1018 ] ebx
jge r-xdata
push 0x1
push eax
push eax
push ebx
call sub_100375c7
add esp 0x10
mov edi eax
mov [ ebp - 0x1014 ] edi
mov [ ebp - 0x1010 ] edx
test edx edx
jg r-xdata
mov [ esi + 0x4 ] eax
mov eax ebx
sar eax 0x5
lea eax [ eax * 4 + rw-data ]
and ebx 0x1f
mov [ ebp - 0x101c ] eax
mov eax [ eax ]
shl ebx 0x6
add eax ebx
mov cl [ eax + 0x24 ]
add cl cl
sar cl 0x1
test [ esi + 0xc ] 0x108
mov [ ebp - 0x1005 ] cl
jne r-xdata
jl r-xdata
mov ecx [ esi ]
mov edx [ esi + 0x8 ]
mov edi ecx
sub edi edx
mov edx [ esi + 0xc ]
mov [ ebp - 0x100c ] edi
test dl 0x3
je r-xdata
mov eax [ esi + 0x4 ]
mov ecx [ ebp - 0x1010 ]
cdq
sub edi eax
sbb ecx edx
mov eax edi
mov edx ecx
jmp r-xdata
or eax 0xffffffff
or edx eax
jmp r-xdata
test edi edi
jae r-xdata
test dl dl
js r-xdata
cmp [ ebp - 0x1005 ] 0x1
jne r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_10025c8d
leave
retn
mov edx [ ebp - 0x1014 ]
or edx [ ebp - 0x1010 ]
jne r-xdata
call sub_1002c068
mov [ eax ] 0x16
jmp r-xdata
test [ eax + 0x4 ] 0x80
je r-xdata
xor edx edx
cmp [ eax + 0x30 ] edx
je r-xdata
test [ esi + 0xc ] 0x1
je r-xdata
mov eax [ ebp - 0x100c ]
jmp r-xdata
mov edx [ esi + 0x8 ]
jmp r-xdata
shr edi 0x1
mov [ ebp - 0x1020 ] edi
cmp [ esi + 0x4 ] edx
jne r-xdata
cmp [ ebp - 0x1005 ] 0x1
jne r-xdata
mov edx [ esi + 0x4 ]
test edx edx
jne r-xdata
cmp edx ecx
jb r-xdata
push edx
push [ eax + 0x2c ]
push [ eax + 0x28 ]
push [ ebp - 0x1018 ]
call sub_100375c7
mov esi eax
mov eax [ ebp - 0x101c ]
mov eax [ eax ]
add eax ebx
add esp 0x10
mov edi edx
cmp esi [ eax + 0x28 ]
jne r-xdata
mov eax [ ebp - 0x1014 ]
mov edx [ ebp - 0x1010 ]
jmp r-xdata
mov eax [ ebp - 0x100c ]
xor edx edx
add eax [ ebp - 0x1014 ]
adc edx [ ebp - 0x1010 ]
shr [ ebp - 0x100c ] 0x1
sub ecx [ esi + 0x8 ]
add ecx edx
test [ eax + 0x4 ] 0x80
mov edi ecx
je r-xdata
and [ ebp - 0x100c ] edx
jmp r-xdata
cmp [ edx ] 0xa
jne r-xdata
cmp edi [ eax + 0x2c ]
jne r-xdata
cmp [ ebp - 0x1005 ] 0x1
jne r-xdata
push 0x2
push 0x0
push 0x0
push [ ebp - 0x1018 ]
call sub_100375c7
add esp 0x10
cmp eax [ ebp - 0x1014 ]
jne r-xdata
inc edx
inc [ ebp - 0x100c ]
push 0x0
lea ecx [ ebp - 0x100c ]
push ecx
push 0x1000
lea ecx [ ebp - 0x1004 ]
push ecx
push [ eax ]
call [ ReadFile@IAT ]
test eax eax
je r-xdata
sub [ ebp - 0x1014 ] edi
sbb [ ebp - 0x1010 ] 0x0
shr edi 0x1
push 0x0
push [ ebp - 0x1010 ]
push [ ebp - 0x1014 ]
push [ ebp - 0x1018 ]
call sub_100375c7
add esp 0x10
test edx edx
jg r-xdata
cmp edx [ ebp - 0x1010 ]
jne r-xdata
push 0x0
push [ ebp - 0x1010 ]
push [ ebp - 0x1014 ]
push [ ebp - 0x1018 ]
call sub_100375c7
add esp 0x10
test edx edx
jg r-xdata
mov eax 0x200
cmp edi eax
ja r-xdata
jl r-xdata
mov eax [ esi + 0x8 ]
lea ecx [ eax + edi ]
jmp r-xdata
mov ecx [ ebp - 0x100c ]
mov ebx [ ebp - 0x1020 ]
cmp ebx ecx
ja r-xdata
jl r-xdata
mov edi [ esi + 0x18 ]
mov ecx [ esi + 0xc ]
test cl 0x8
je r-xdata
test eax eax
jb r-xdata
cmp eax ecx
jb r-xdata
lea eax [ ebp - 0x1004 ]
test ebx ebx
je r-xdata
test eax eax
jb r-xdata
inc edi
mov edi eax
test ecx 0x400
je r-xdata
cmp [ eax ] 0xa
jne r-xdata
test [ esi + 0xc ] 0x2000
jmp r-xdata
lea ecx [ ebp - 0x1004 ]
sub eax ecx
xor edx edx
add eax esi
adc edx edi
jmp r-xdata
lea edx [ ebp + ecx - 0x1004 ]
mov eax [ ebp - 0x101c ]
mov eax [ eax ]
test [ eax + ebx + 0x4 ] 0x4
inc eax
inc edi
je r-xdata
mov cl [ eax ]
cmp cl 0xd
jne r-xdata
movzx ecx cl
movsx ecx [ ecx + rw-data ]
add eax ecx
lea ecx [ edx - 0x1 ]
cmp eax ecx
jae r-xdata
dec ebx
cmp eax edx
jae r-xdata
inc eax
test ebx ebx
jne r-xdata
lea ecx [ eax + 0x1 ]
cmp [ ecx ] 0xa
jne r-xdata
mov eax ecx
jmp r-xdata
sub_10031aaf
push 0x10
push r--data
call sub_1002e7e4
push [ ebp + 0x8 ]
call sub_100290d0
pop ecx
and [ ebp - 0x4 ] 0x0
push [ ebp + 0x8 ]
call sub_10031763
pop ecx
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x1c ] edx
mov [ ebp - 0x4 ] 0xfffffffe
call sub_10031aef
mov eax [ ebp - 0x20 ]
mov edx [ ebp - 0x1c ]
call sub_1002e829
retn
sub_10031af9
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0xc ]
push edi
test al 0x83
je r-xdata
call sub_1002c068
mov [ eax ] 0x16
mov edi [ ebp + 0x14 ]
test edi edi
je r-xdata
and eax 0xffffffef
mov [ esi + 0xc ] eax
cmp edi 0x1
jne r-xdata
cmp edi 0x1
je r-xdata
push esi
call sub_1002885a
mov eax [ esi + 0xc ]
pop ecx
test al al
jns r-xdata
push esi
call sub_10031763
add [ ebp + 0xc ] eax
pop ecx
adc [ ebp + 0x10 ] edx
xor edi edi
cmp edi 0x2
jne r-xdata
test al 0x1
je r-xdata
and eax 0xfffffffc
mov [ esi + 0xc ] eax
jmp r-xdata
push edi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
call sub_10030ac0
pop ecx
push eax
call sub_100375c7
and eax edx
add esp 0x10
cmp eax 0xffffffff
je r-xdata
test al 0x8
je r-xdata
or eax 0xffffffff
xor eax eax
jmp r-xdata
test eax 0x400
jne r-xdata
pop edi
pop esi
pop ebp
retn
mov [ esi + 0x18 ] 0x200
sub_10031b95
push 0xc
push r--data
call sub_1002e7e4
push [ ebp + 0x8 ]
call sub_100290d0
pop ecx
and [ ebp - 0x4 ] 0x0
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_10031af9
add esp 0x10
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_10031bda
mov eax [ ebp - 0x1c ]
call sub_1002e829
retn
sub_10031be4
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0xc ]
test al 0x83
je r-xdata
pop esi
pop ebp
retn
test al 0x8
je r-xdata
push [ esi + 0x8 ]
call sub_1002644d
and [ esi + 0xc ] 0xfffffbf7
xor eax eax
pop ecx
mov [ esi ] eax
mov [ esi + 0x8 ] eax
mov [ esi + 0x4 ] eax
sub_10031c15
push 0x10
push r--data
call sub_1002e7e4
mov eax [ ebp + 0x8 ]
cmp eax 0xfffffffe
jne r-xdata
xor ebx ebx
cmp eax ebx
jl r-xdata
call sub_1002c068
mov [ eax ] 0x9
call sub_1002c068
mov [ eax ] 0x9
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_100261c9
add esp 0x14
jmp r-xdata
cmp eax [ rw-data ]
jb r-xdata
call sub_1002e829
retn
or eax 0xffffffff
jmp r-xdata
mov ecx eax
sar ecx 0x5
lea edi [ ecx * 4 + rw-data ]
mov esi eax
and esi 0x1f
shl esi 0x6
mov ecx [ edi ]
movsx ecx [ esi + ecx + 0x4 ]
and ecx 0x1
je r-xdata
push eax
call sub_10038be4
pop ecx
mov [ ebp - 0x4 ] ebx
mov eax [ edi ]
test [ esi + eax + 0x4 ] 0x1
je r-xdata
call sub_1002c068
mov [ eax ] 0x9
or [ ebp - 0x1c ] 0xffffffff
push [ ebp + 0x8 ]
call sub_10038b6d
pop ecx
push eax
call [ FlushFileBuffers@IAT ]
test eax eax
jne r-xdata
mov [ ebp - 0x1c ] ebx
call [ GetLastError@IAT ]
mov [ ebp - 0x1c ] eax
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_10031cec
mov eax [ ebp - 0x1c ]
call sub_1002c07b
mov ecx [ ebp - 0x1c ]
mov [ eax ] ecx
cmp [ ebp - 0x1c ] ebx
je r-xdata
sub_10031cf6
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
push esi
call sub_10038b6d
pop ecx
cmp eax 0xffffffff
je r-xdata
xor edi edi
mov eax [ rw-data ]
cmp esi 0x1
jne r-xdata
xor eax eax
push edi
call sub_1002c08e
pop ecx
or eax 0xffffffff
jmp r-xdata
cmp esi 0x2
jne r-xdata
test [ eax + 0x84 ] 0x1
jne r-xdata
pop edi
pop esi
pop ebp
retn
push esi
call sub_10038b6d
pop ecx
push eax
call [ CloseHandle@IAT ]
test eax eax
jne r-xdata
test [ eax + 0x44 ] 0x1
je r-xdata
push 0x2
call sub_10038b6d
push 0x1
mov edi eax
call sub_10038b6d
pop ecx
pop ecx
cmp eax edi
je r-xdata
call [ GetLastError@IAT ]
mov edi eax
jmp r-xdata
push esi
call sub_10038ae7
mov eax esi
sar eax 0x5
mov eax [ eax * 4 + rw-data ]
and esi 0x1f
shl esi 0x6
pop ecx
mov [ eax + esi + 0x4 ] 0x0
test edi edi
je r-xdata
sub_10031d92
push 0x10
push r--data
call sub_1002e7e4
mov eax [ ebp + 0x8 ]
cmp eax 0xfffffffe
jne r-xdata
xor edi edi
cmp eax edi
jl r-xdata
call sub_1002c07b
and [ eax ] 0x0
call sub_1002c068
mov [ eax ] 0x9
call sub_1002c07b
mov [ eax ] edi
call sub_1002c068
mov [ eax ] 0x9
push edi
push edi
push edi
push edi
push edi
call sub_100261c9
add esp 0x14
jmp r-xdata
cmp eax [ rw-data ]
jb r-xdata
call sub_1002e829
retn
or eax 0xffffffff
jmp r-xdata
mov ecx eax
sar ecx 0x5
lea ebx [ ecx * 4 + rw-data ]
mov esi eax
and esi 0x1f
shl esi 0x6
mov ecx [ ebx ]
movsx ecx [ ecx + esi + 0x4 ]
and ecx 0x1
je r-xdata
push eax
call sub_10038be4
pop ecx
mov [ ebp - 0x4 ] edi
mov eax [ ebx ]
test [ eax + esi + 0x4 ] 0x1
je r-xdata
call sub_1002c068
mov [ eax ] 0x9
or [ ebp - 0x1c ] 0xffffffff
push [ ebp + 0x8 ]
call sub_10031cf6
pop ecx
mov [ ebp - 0x1c ] eax
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_10031e55
mov eax [ ebp - 0x1c ]
sub_10031e5f
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x4 ] edi
mov [ ebp - 0x8 ] esi
mov esi [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
mov ecx [ ebp + 0x10 ]
shr ecx 0x7
jmp r-xdata
movdqa xmm0 [ esi ]
movdqa xmm1 [ esi + 0x10 ]
movdqa xmm2 [ esi + 0x20 ]
movdqa xmm3 [ esi + 0x30 ]
movdqa [ edi ] xmm0
movdqa [ edi + 0x10 ] xmm1
movdqa [ edi + 0x20 ] xmm2
movdqa [ edi + 0x30 ] xmm3
movdqa xmm4 [ esi + 0x40 ]
movdqa xmm5 [ esi + 0x50 ]
movdqa xmm6 [ esi + 0x60 ]
movdqa xmm7 [ esi + 0x70 ]
movdqa [ edi + 0x40 ] xmm4
movdqa [ edi + 0x50 ] xmm5
movdqa [ edi + 0x60 ] xmm6
movdqa [ edi + 0x70 ] xmm7
lea esi [ esi + 0x80 ]
lea edi [ edi + 0x80 ]
dec ecx
jne r-xdata
mov esi [ ebp - 0x8 ]
mov edi [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
sub_10031ee6
push ebp
mov ebp esp
sub esp 0x1c
mov [ ebp - 0xc ] edi
mov [ ebp - 0x8 ] esi
mov [ ebp - 0x4 ] ebx
mov ebx [ ebp + 0xc ]
mov eax ebx
cdq
mov ecx eax
mov eax [ ebp + 0x8 ]
xor ecx edx
sub ecx edx
and ecx 0xf
xor ecx edx
sub ecx edx
cdq
mov edi eax
xor edi edx
sub edi edx
and edi 0xf
xor edi edx
sub edi edx
mov edx ecx
or edx edi
jne r-xdata
cmp ecx edi
jne r-xdata
mov esi [ ebp + 0x10 ]
mov ecx esi
and ecx 0x7f
mov [ ebp - 0x18 ] ecx
cmp esi ecx
je r-xdata
mov esi [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
mov ecx [ ebp + 0x10 ]
mov edx ecx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
mov eax [ ebp + 0x8 ]
neg ecx
add ecx 0x10
mov [ ebp - 0x1c ] ecx
mov esi [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
mov ecx [ ebp - 0x1c ]
[ edi ] [ esi ]
mov ecx [ ebp + 0x8 ]
add ecx [ ebp - 0x1c ]
mov edx [ ebp + 0xc ]
add edx [ ebp - 0x1c ]
mov eax [ ebp + 0x10 ]
sub eax [ ebp - 0x1c ]
push eax
push edx
push ecx
call sub_10031ee6
add esp 0xc
mov eax [ ebp + 0x8 ]
jmp r-xdata
test ecx ecx
je r-xdata
sub esi ecx
push esi
push ebx
push eax
call sub_10031e5f
add esp 0xc
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x18 ]
mov ebx [ ebp - 0x4 ]
mov esi [ ebp - 0x8 ]
mov edi [ ebp - 0xc ]
mov esp ebp
pop ebp
retn
mov ebx [ ebp + 0x10 ]
mov edx [ ebp + 0xc ]
add edx ebx
sub edx ecx
mov [ ebp - 0x14 ] edx
add ebx eax
sub ebx ecx
mov [ ebp - 0x10 ] ebx
mov esi [ ebp - 0x14 ]
mov edi [ ebp - 0x10 ]
mov ecx [ ebp - 0x18 ]
[ edi ] [ esi ]
mov eax [ ebp + 0x8 ]
jmp r-xdata
sub_10031fc9
push 0x10
push r--data
call sub_1002e7e4
xor ebx ebx
mov [ ebp - 0x1c ] ebx
push 0x1
call sub_1002ebde
pop ecx
mov [ ebp - 0x4 ] ebx
push 0x3
pop edi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_1003205f
mov eax [ ebp - 0x1c ]
call sub_1002e829
retn
mov esi edi
shl esi 0x2
mov eax [ rw-data ]
add eax esi
cmp [ eax ] ebx
je r-xdata
inc edi
jmp r-xdata
mov eax [ eax ]
test [ eax + 0xc ] 0x83
je r-xdata
mov [ ebp - 0x20 ] edi
cmp edi [ rw-data ]
jge r-xdata
cmp edi 0x14
jl r-xdata
push eax
call sub_10028ab7
pop ecx
cmp eax 0xffffffff
je r-xdata
mov eax [ rw-data ]
mov eax [ esi + eax ]
add eax 0x20
push eax
call [ DeleteCriticalSection@IAT ]
mov eax [ rw-data ]
push [ esi + eax ]
call sub_1002644d
pop ecx
mov eax [ rw-data ]
mov [ esi + eax ] ebx
inc [ ebp - 0x1c ]
sub_10032068
push 0x10
push r--data
call sub_1002e7e4
xor ebx ebx
xor edi edi
mov [ ebp - 0x1c ] edi
push 0x1
call sub_1002ebde
pop ecx
mov [ ebp - 0x4 ] ebx
xor esi esi
cmp edi ebx
je r-xdata
mov eax [ rw-data ]
lea eax [ eax + esi * 4 ]
cmp [ eax ] ebx
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_10032197
mov eax edi
call sub_1002e829
retn
and [ edi + 0xc ] 0x8000
mov [ edi + 0x4 ] ebx
mov [ edi + 0x8 ] ebx
mov [ edi ] ebx
mov [ edi + 0x1c ] ebx
or [ edi + 0x10 ] 0xffffffff
shl esi 0x2
push 0x38
call sub_1002c93d
pop ecx
mov ecx [ rw-data ]
mov [ esi + ecx ] eax
mov eax [ rw-data ]
add eax esi
cmp [ eax ] ebx
je r-xdata
mov eax [ eax ]
mov eax [ eax + 0xc ]
test al 0x83
jne r-xdata
push 0xfa0
mov eax [ eax ]
add eax 0x20
push eax
call sub_10033652
pop ecx
pop ecx
test eax eax
mov eax [ rw-data ]
jne r-xdata
inc esi
jmp r-xdata
test eax 0x8000
jne r-xdata
mov eax [ esi + eax ]
add eax 0x20
push eax
call [ EnterCriticalSection@IAT ]
mov eax [ rw-data ]
mov edi [ esi + eax ]
mov [ ebp - 0x1c ] edi
mov [ edi + 0xc ] ebx
push [ esi + eax ]
call sub_1002644d
pop ecx
mov eax [ rw-data ]
mov [ esi + eax ] ebx
jmp r-xdata
mov [ ebp - 0x20 ] esi
cmp esi [ rw-data ]
jge r-xdata
lea eax [ esi - 0x3 ]
cmp eax 0x10
ja r-xdata
mov eax [ rw-data ]
push [ eax + esi * 4 ]
push esi
call sub_10029111
pop ecx
pop ecx
mov eax [ rw-data ]
mov eax [ eax + esi * 4 ]
test [ eax + 0xc ] 0x83
je r-xdata
lea eax [ esi + 0x10 ]
push eax
call sub_1002eb1b
pop ecx
test eax eax
je r-xdata
mov edi eax
mov [ ebp - 0x1c ] edi
jmp r-xdata
push eax
push esi
call sub_1002917f
pop ecx
pop ecx
sub_100321a0
push ebx
push esi
push edi
mov edx [ esp + 0x10 ]
mov eax [ esp + 0x14 ]
mov ecx [ esp + 0x18 ]
push ebp
push edx
push eax
push ecx
push ecx
push sub_10032230
push [ fs : 0x0 ]
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x8 ] eax
mov [ fs : 0x0 ] esp
pop [ fs : 0x0 ]
add esp 0x18
pop edi
pop esi
pop ebx
retn
mov edx [ esp + 0x34 ]
cmp edx 0xfffffffe
je r-xdata
lea esi [ esi + esi * 2 ]
lea ebx [ ebx + esi * 4 + 0x10 ]
mov ecx [ ebx ]
mov [ eax + 0xc ] ecx
cmp [ ebx + 0x4 ] 0x0
jne r-xdata
cmp esi edx
jbe r-xdata
mov eax [ esp + 0x30 ]
mov ebx [ eax + 0x8 ]
mov ecx [ esp + 0x2c ]
xor ebx [ ecx ]
mov esi [ eax + 0xc ]
cmp esi 0xfffffffe
je r-xdata
push 0x101
mov eax [ ebx + 0x8 ]
call sub_10038f5d
mov ecx 0x1
mov eax [ ebx + 0x8 ]
call sub_10038f7c
jmp r-xdata
sub_10032230
mov ecx [ esp + 0x4 ]
test [ ecx + 0x4 ] 0x6
mov eax 0x1
je r-xdata
retn
mov eax [ esp + 0x8 ]
mov ecx [ eax + 0x8 ]
xor ecx eax
call sub_10025c8d
push ebp
mov ebp [ eax + 0x18 ]
push [ eax + 0xc ]
push [ eax + 0x10 ]
push [ eax + 0x14 ]
call sub_100321a0
add esp 0xc
pop ebp
mov eax [ esp + 0x8 ]
mov edx [ esp + 0x10 ]
mov [ edx ] eax
mov eax 0x3
sub_10032292
push ebp
push esi
push edi
push ebx
mov ebp edx
xor eax eax
xor ebx ebx
xor edx edx
xor esi esi
xor edi edi
call ecx
pop ebx
pop edi
pop esi
pop ebp
retn
sub_100322c2
push ebp
mov ebp esp
push ebx
push esi
push edi
push 0x0
push 0x0
push r-xdata
push ecx
call RtlUnwind
pop edi
pop esi
pop ebx
pop ebp
retn
sub_100322f3
mov edi edi
push ebp
mov ebp esp
sub esp 0x1c
mov edx [ ebp + 0x10 ]
push esi
mov esi [ ebp + 0x8 ]
push 0xfffffffe
pop eax
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x1c ] edx
cmp esi eax
jne r-xdata
push ebx
xor ebx ebx
cmp esi ebx
jl r-xdata
call sub_1002c07b
and [ eax ] 0x0
call sub_1002c068
mov [ eax ] 0x9
or eax 0xffffffff
jmp r-xdata
call sub_1002c07b
mov [ eax ] ebx
call sub_1002c068
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x9
call sub_100261c9
add esp 0x14
or eax 0xffffffff
jmp r-xdata
cmp esi [ rw-data ]
jb r-xdata
pop esi
leave
retn
pop ebx
mov eax esi
sar eax 0x5
push edi
lea edi [ eax * 4 + rw-data ]
mov eax [ edi ]
and esi 0x1f
shl esi 0x6
add eax esi
mov cl [ eax + 0x4 ]
test cl 0x1
jne r-xdata
cmp edx 0x7fffffff
ja r-xdata
call sub_1002c07b
mov [ eax ] ebx
call sub_1002c068
mov [ eax ] 0x9
jmp r-xdata
call sub_1002c07b
mov [ eax ] ebx
call sub_1002c068
mov [ eax ] 0x16
mov [ ebp - 0x10 ] ebx
cmp edx ebx
je r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_100261c9
add esp 0x14
jmp r-xdata
or eax 0xffffffff
jmp r-xdata
xor eax eax
test cl 0x2
jne r-xdata
pop edi
cmp [ ebp + 0xc ] ebx
je r-xdata
mov al [ eax + 0x24 ]
add al al
sar al 0x1
mov [ ebp - 0x2 ] al
movsx eax al
dec eax
push 0x4
pop ecx
je r-xdata
mov eax edx
not eax
test al 0x1
jne r-xdata
dec eax
jne r-xdata
mov eax edx
shr eax 0x1
mov [ ebp + 0x10 ] ecx
cmp eax ecx
jb r-xdata
mov eax [ ebp + 0xc ]
mov [ ebp - 0xc ] eax
jmp r-xdata
mov eax edx
not eax
test al 0x1
je r-xdata
push [ ebp + 0x10 ]
call sub_1002c93d
pop ecx
mov [ ebp - 0xc ] eax
cmp eax ebx
jne r-xdata
mov [ ebp + 0x10 ] eax
mov ecx [ edi ]
add ecx esi
test [ ecx + 0x4 ] 0x48
je r-xdata
and edx 0xfffffffe
mov [ ebp + 0x10 ] edx
push 0x1
push ebx
push ebx
push [ ebp + 0x8 ]
call sub_10037542
mov ecx [ edi ]
mov [ esi + ecx + 0x28 ] eax
mov eax [ ebp - 0xc ]
add esp 0x10
mov [ esi + ecx + 0x2c ] edx
call sub_1002c068
mov [ eax ] 0xc
call sub_1002c07b
mov [ eax ] 0x8
push ebx
lea ecx [ ebp - 0x18 ]
push ecx
push [ ebp + 0x10 ]
push eax
mov eax [ edi ]
push [ esi + eax ]
call [ ReadFile@IAT ]
test eax eax
je r-xdata
mov cl [ ecx + 0x5 ]
cmp cl 0xa
je r-xdata
call [ GetLastError@IAT ]
push 0x5
pop esi
cmp eax esi
jne r-xdata
mov ecx [ ebp - 0x18 ]
cmp ecx ebx
jl r-xdata
cmp [ ebp + 0x10 ] ebx
je r-xdata
cmp eax 0x6d
jne r-xdata
call sub_1002c068
mov [ eax ] 0x9
call sub_1002c07b
mov [ eax ] esi
jmp r-xdata
cmp ecx [ ebp + 0x10 ]
ja r-xdata
mov [ eax ] cl
mov ecx [ edi ]
inc eax
dec [ ebp + 0x10 ]
mov [ ebp - 0x10 ] 0x1
mov [ esi + ecx + 0x5 ] 0xa
cmp [ ebp - 0x2 ] bl
je r-xdata
push eax
call sub_1002c08e
pop ecx
mov [ ebp - 0x14 ] ebx
jmp r-xdata
or [ ebp - 0x14 ] 0xffffffff
mov eax [ edi ]
add [ ebp - 0x10 ] ecx
lea eax [ esi + eax + 0x4 ]
test [ eax ] 0x80
je r-xdata
mov ecx [ edi ]
mov cl [ esi + ecx + 0x25 ]
cmp cl 0xa
je r-xdata
mov eax [ ebp - 0x14 ]
cmp eax 0xfffffffe
jne r-xdata
push eax
call sub_1002644d
pop ecx
mov eax [ ebp - 0xc ]
cmp eax [ ebp + 0xc ]
je r-xdata
cmp [ ebp - 0x2 ] 0x2
je r-xdata
cmp [ ebp + 0x10 ] ebx
je r-xdata
mov eax [ ebp - 0x10 ]
jmp r-xdata
cmp ecx ebx
je r-xdata
cmp ecx ebx
je r-xdata
mov [ eax ] cl
mov ecx [ edi ]
inc eax
dec [ ebp + 0x10 ]
cmp [ ebp - 0x2 ] 0x1
mov [ ebp - 0x10 ] 0x2
mov [ esi + ecx + 0x25 ] 0xa
jne r-xdata
and [ eax ] 0xfb
mov ecx [ ebp - 0xc ]
cmp [ ecx ] 0xa
jne r-xdata
and [ eax ] 0xfb
mov ecx [ ebp - 0xc ]
cmp [ ecx ] 0xa
jne r-xdata
mov ecx [ edi ]
mov cl [ esi + ecx + 0x26 ]
cmp cl 0xa
je r-xdata
sub ebx [ ebp - 0xc ]
mov [ ebp - 0x10 ] ebx
jmp r-xdata
mov eax [ ebp + 0x10 ]
movzx ecx [ eax ]
cmp cx 0x1a
je r-xdata
or [ eax ] 0x4
jmp r-xdata
mov eax ebx
sub eax [ ebp - 0xc ]
cmp [ ebp - 0x2 ] 0x1
mov [ ebp - 0x10 ] eax
jne r-xdata
mov ecx [ ebp + 0x10 ]
mov al [ ecx ]
cmp al 0x1a
je r-xdata
or [ eax ] 0x4
jmp r-xdata
cmp [ ebp + 0x10 ] ebx
je r-xdata
mov ecx [ edi ]
lea esi [ esi + ecx + 0x4 ]
test [ esi ] 0x40
jne r-xdata
cmp cx 0xd
je r-xdata
mov ebx [ ebp - 0xc ]
mov eax [ ebp - 0x10 ]
add eax ebx
mov [ ebp + 0x10 ] ebx
mov [ ebp - 0x10 ] eax
cmp ebx eax
jae r-xdata
test eax eax
je r-xdata
mov eax [ edi ]
lea eax [ esi + eax + 0x4 ]
test [ eax ] 0x40
jne r-xdata
cmp al 0xd
je r-xdata
mov ebx [ ebp - 0xc ]
mov eax [ ebp - 0x10 ]
add eax ebx
mov [ ebp + 0x10 ] ebx
mov [ ebp - 0x10 ] eax
cmp ebx eax
jae r-xdata
mov [ eax ] cl
mov ecx [ edi ]
inc eax
dec [ ebp + 0x10 ]
mov [ ebp - 0x10 ] 0x3
mov [ esi + ecx + 0x26 ] 0xa
mov ax [ eax ]
mov [ ebx ] ax
inc ebx
inc ebx
or [ esi ] 0x2
jmp r-xdata
mov ecx [ ebp - 0x10 ]
add ecx 0xfffffffe
cmp eax ecx
jae r-xdata
mov [ ebx ] cx
inc ebx
inc ebx
inc eax
inc eax
mov [ ebp + 0x10 ] eax
jmp r-xdata
dec ebx
mov cl [ ebx ]
test cl cl
js r-xdata
mov al [ ecx ]
mov [ ebx ] al
inc ebx
or [ eax ] 0x2
jmp r-xdata
mov eax [ ebp - 0x10 ]
dec eax
cmp ecx eax
jae r-xdata
mov [ ebx ] al
inc ebx
inc ecx
mov [ ebp + 0x10 ] ecx
jmp r-xdata
add [ ebp + 0x10 ] 0x2
push 0x0
lea eax [ ebp - 0x18 ]
push eax
push 0x2
lea eax [ ebp - 0x8 ]
push eax
mov eax [ edi ]
push [ esi + eax ]
call [ ReadFile@IAT ]
test eax eax
jne r-xdata
lea ecx [ eax + 0x2 ]
cmp [ ecx ] 0xa
jne r-xdata
mov eax [ ebp - 0x10 ]
cmp [ ebp + 0x10 ] eax
jb r-xdata
xor eax eax
inc eax
movzx ecx cl
jmp r-xdata
inc ebx
jmp r-xdata
inc [ ebp + 0x10 ]
push 0x0
lea eax [ ebp - 0x18 ]
push eax
push 0x1
lea eax [ ebp - 0x1 ]
push eax
mov eax [ edi ]
push [ esi + eax ]
call [ ReadFile@IAT ]
test eax eax
jne r-xdata
lea eax [ ecx + 0x1 ]
cmp [ eax ] 0xa
jne r-xdata
mov eax [ ebp - 0x10 ]
cmp [ ebp + 0x10 ] eax
jb r-xdata
cmp [ ebp - 0x18 ] 0x0
je r-xdata
call [ GetLastError@IAT ]
test eax eax
jne r-xdata
mov [ ebp + 0x10 ] ecx
jmp r-xdata
add eax 0x4
mov [ ebp + 0x10 ] eax
jmp r-xdata
cmp [ ecx + rw-data ] 0x0
je r-xdata
mov eax [ ebp - 0x1c ]
sub ebx [ ebp - 0xc ]
shr eax 0x1
push eax
push [ ebp + 0xc ]
push ebx
push [ ebp - 0xc ]
push 0x0
push 0xfde9
call [ MultiByteToWideChar@IAT ]
mov [ ebp - 0x10 ] eax
test eax eax
jne r-xdata
cmp [ ebp - 0x18 ] 0x0
je r-xdata
call [ GetLastError@IAT ]
test eax eax
jne r-xdata
mov [ ebp + 0x10 ] eax
jmp r-xdata
inc ecx
inc ecx
mov [ ebp + 0x10 ] ecx
jmp r-xdata
push 0xd
mov eax [ edi ]
test [ esi + eax + 0x4 ] 0x48
je r-xdata
pop eax
mov [ ebx ] ax
cmp eax 0x4
jg r-xdata
mov dl [ ebx ]
movzx ecx dl
movsx ecx [ ecx + rw-data ]
test ecx ecx
jne r-xdata
mov eax [ ebp - 0x10 ]
mov edx [ edi ]
xor ecx ecx
cmp eax ebx
setne cl
add eax eax
mov [ ebp - 0x10 ] eax
mov [ esi + edx + 0x30 ] ecx
jmp r-xdata
call [ GetLastError@IAT ]
mov [ ebx ] 0xd
mov eax [ edi ]
test [ esi + eax + 0x4 ] 0x48
je r-xdata
inc ebx
cmp ebx [ ebp - 0xc ]
jne r-xdata
cmp [ ebp - 0x8 ] 0xa
je r-xdata
cmp ebx [ ebp - 0xc ]
jb r-xdata
inc ecx
cmp ecx eax
jne r-xdata
call sub_1002c068
mov [ eax ] 0x2a
jmp r-xdata
cmp ebx [ ebp - 0xc ]
jne r-xdata
cmp [ ebp - 0x1 ] 0xa
je r-xdata
push 0x1
push 0xffffffff
push 0xfffffffe
push [ ebp + 0x8 ]
call sub_10037542
add esp 0x10
cmp [ ebp - 0x8 ] 0xa
je r-xdata
cmp [ ebp - 0x8 ] 0xa
je r-xdata
push 0xa
jmp r-xdata
push 0xd
pop eax
mov [ ebx ] ax
mov eax [ edi ]
mov cl [ ebp - 0x8 ]
mov [ esi + eax + 0x5 ] cl
mov eax [ edi ]
mov cl [ ebp - 0x7 ]
mov [ esi + eax + 0x25 ] cl
mov eax [ edi ]
mov [ esi + eax + 0x26 ] 0xa
jmp r-xdata
dec ebx
movzx ecx [ ebx ]
inc eax
mov ecx [ edi ]
add ecx esi
test [ ecx + 0x4 ] 0x48
je r-xdata
add ebx eax
jmp r-xdata
push 0x1
push 0xffffffff
push 0xffffffff
push [ ebp + 0x8 ]
call sub_10037542
add esp 0x10
cmp [ ebp - 0x1 ] 0xa
je r-xdata
cmp [ ebp - 0x1 ] 0xa
je r-xdata
mov [ ebx ] 0xa
jmp r-xdata
mov [ ebx ] 0xd
mov eax [ edi ]
mov cl [ ebp - 0x1 ]
mov [ esi + eax + 0x5 ] cl
jmp r-xdata
inc ebx
inc ebx
neg eax
cdq
push 0x1
push edx
push eax
push [ ebp + 0x8 ]
call sub_10037542
add esp 0x10
inc ebx
cmp eax 0x2
mov [ ecx + 0x5 ] dl
jl r-xdata
cmp eax 0x3
jne r-xdata
mov dl [ ebx ]
mov ecx [ edi ]
mov [ esi + ecx + 0x25 ] dl
inc ebx
sub ebx eax
jmp r-xdata
mov dl [ ebx ]
mov ecx [ edi ]
mov [ esi + ecx + 0x26 ] dl
inc ebx
sub_100328b5
push 0x10
push r--data
call sub_1002e7e4
mov eax [ ebp + 0x8 ]
cmp eax 0xfffffffe
jne r-xdata
xor esi esi
cmp eax esi
jl r-xdata
call sub_1002c07b
and [ eax ] 0x0
call sub_1002c068
mov [ eax ] 0x9
call sub_1002c07b
mov [ eax ] esi
call sub_1002c068
mov [ eax ] 0x9
cmp eax [ rw-data ]
jb r-xdata
call sub_1002e829
retn
or eax 0xffffffff
jmp r-xdata
mov ecx eax
sar ecx 0x5
lea ebx [ ecx * 4 + rw-data ]
mov edi eax
and edi 0x1f
shl edi 0x6
mov ecx [ ebx ]
movsx ecx [ ecx + edi + 0x4 ]
and ecx 0x1
je r-xdata
mov ecx 0x7fffffff
cmp ecx [ ebp + 0x10 ]
sbb ecx ecx
inc ecx
jne r-xdata
push eax
call sub_10038be4
pop ecx
mov [ ebp - 0x4 ] esi
mov eax [ ebx ]
test [ eax + edi + 0x4 ] 0x1
je r-xdata
call sub_1002c07b
mov [ eax ] esi
call sub_1002c068
mov [ eax ] 0x16
jmp r-xdata
call sub_1002c068
mov [ eax ] 0x9
call sub_1002c07b
mov [ eax ] esi
or [ ebp - 0x1c ] 0xffffffff
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_100322f3
add esp 0xc
mov [ ebp - 0x1c ] eax
jmp r-xdata
push esi
push esi
push esi
push esi
push esi
call sub_100261c9
add esp 0x14
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_100329a8
mov eax [ ebp - 0x1c ]
sub_100329b2
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push esi
call sub_10030ac0
push eax
call sub_100376e0
pop ecx
pop ecx
test eax eax
je r-xdata
xor eax eax
call sub_10028ff7
add eax 0x20
cmp esi eax
jne r-xdata
call sub_10028ff7
add eax 0x40
cmp esi eax
jne r-xdata
xor eax eax
jmp r-xdata
xor eax eax
inc eax
inc [ rw-data ]
test [ esi + 0xc ] 0x10c
jne r-xdata
push ebx
push edi
lea edi [ eax * 4 + rw-data ]
cmp [ edi ] 0x0
mov ebx 0x1000
jne r-xdata
mov edi [ edi ]
mov [ esi + 0x8 ] edi
mov [ esi ] edi
mov [ esi + 0x18 ] ebx
mov [ esi + 0x4 ] ebx
push ebx
call sub_1002c93d
pop ecx
mov [ edi ] eax
test eax eax
jne r-xdata
pop esi
pop ebp
retn
lea eax [ esi + 0x14 ]
push 0x2
mov [ esi + 0x8 ] eax
mov [ esi ] eax
pop eax
mov [ esi + 0x18 ] eax
mov [ esi + 0x4 ] eax
jmp r-xdata
or [ esi + 0xc ] 0x1102
xor eax eax
pop edi
inc eax
pop ebx
jmp r-xdata
sub_10032a4e
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
je r-xdata
pop ebp
retn
push esi
mov esi [ ebp + 0xc ]
test [ esi + 0xc ] 0x1000
je r-xdata
pop esi
push esi
call sub_1002885a
and [ esi + 0xc ] 0xffffeeff
and [ esi + 0x18 ] 0x0
and [ esi ] 0x0
and [ esi + 0x8 ] 0x0
pop ecx
sub_10032a82
sub eax 0x3a4
je r-xdata
mov eax 0x411
retn
sub eax 0x4
je r-xdata
mov eax 0x804
retn
sub eax 0xd
je r-xdata
mov eax 0x412
retn
dec eax
je r-xdata
mov eax 0x404
retn
xor eax eax
retn
sub_10032ab1
mov edi edi
push esi
push edi
mov esi eax
push 0x101
xor edi edi
lea eax [ esi + 0x1c ]
push edi
push eax
call sub_10026630
xor eax eax
movzx ecx ax
mov eax ecx
mov [ esi + 0x4 ] edi
mov [ esi + 0x8 ] edi
mov [ esi + 0xc ] edi
shl ecx 0x10
or eax ecx
lea edi [ esi + 0x10 ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
mov ecx rw-data
add esp 0xc
lea eax [ esi + 0x1c ]
sub ecx esi
mov edi 0x101
mov dl [ ecx + eax ]
mov [ eax ] dl
inc eax
dec edi
jne r-xdata
lea eax [ esi + 0x11d ]
mov esi 0x100
mov dl [ eax + ecx ]
mov [ eax ] dl
inc eax
dec esi
jne r-xdata
pop edi
pop esi
retn
sub_10032b15
mov edi edi
push ebp
mov ebp esp
sub esp 0x51c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push edi
lea eax [ ebp - 0x518 ]
push eax
push [ esi + 0x4 ]
call [ GetCPInfo@IAT ]
mov edi 0x100
test eax eax
je r-xdata
lea eax [ esi + 0x11d ]
mov [ ebp - 0x51c ] 0xffffff9f
xor ecx ecx
sub [ ebp - 0x51c ] eax
xor eax eax
cmp edx 0x19
ja r-xdata
or [ esi + ecx + 0x1d ] 0x10
mov dl cl
add dl 0x20
jmp r-xdata
mov [ ebp + eax - 0x104 ] al
inc eax
cmp eax edi
jb r-xdata
mov al [ ebp - 0x512 ]
mov [ ebp - 0x104 ] 0x20
test al al
je r-xdata
mov [ eax ] 0x0
or [ esi + ecx + 0x1d ] 0x20
mov dl cl
sub dl 0x20
mov [ eax ] dl
jmp r-xdata
push 0x0
push [ esi + 0xc ]
lea eax [ ebp - 0x504 ]
push [ esi + 0x4 ]
push eax
push edi
lea eax [ ebp - 0x104 ]
push eax
push 0x1
push 0x0
call sub_10035df6
xor ebx ebx
push ebx
push [ esi + 0x4 ]
lea eax [ ebp - 0x204 ]
push edi
push eax
push edi
lea eax [ ebp - 0x104 ]
push eax
push edi
push [ esi + 0xc ]
push ebx
call sub_1002c8cf
add esp 0x44
push ebx
push [ esi + 0x4 ]
lea eax [ ebp - 0x304 ]
push edi
push eax
push edi
lea eax [ ebp - 0x104 ]
push eax
push 0x200
push [ esi + 0xc ]
push ebx
call sub_1002c8cf
add esp 0x24
xor eax eax
lea ebx [ ebp - 0x511 ]
mov edx [ ebp - 0x51c ]
lea eax [ esi + ecx + 0x11d ]
add edx eax
lea ebx [ edx + 0x20 ]
cmp ebx 0x19
ja r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop ebx
call sub_10025c8d
leave
retn
inc ecx
cmp ecx edi
jb r-xdata
test cl 0x2
je r-xdata
or [ esi + eax + 0x1d ] 0x10
mov cl [ ebp + eax - 0x204 ]
jmp r-xdata
inc ebx
mov al [ ebx ]
inc ebx
test al al
jne r-xdata
sub eax ecx
inc eax
push eax
lea edx [ ebp + ecx - 0x104 ]
push 0x20
push edx
call sub_10026630
add esp 0xc
mov [ esi + eax + 0x11d ] 0x0
or [ esi + eax + 0x1d ] 0x20
mov cl [ ebp + eax - 0x304 ]
mov [ esi + eax + 0x11d ] cl
jmp r-xdata
movzx ecx al
movzx eax [ ebx ]
cmp ecx eax
ja r-xdata
movzx ecx [ ebp + eax * 2 - 0x504 ]
test cl 0x1
je r-xdata
jmp r-xdata
inc eax
cmp eax edi
jb r-xdata
sub_10032ca8
push 0xc
push r--data
call sub_1002e7e4
call sub_1002db24
mov edi eax
mov eax [ rw-data ]
test [ edi + 0x70 ] eax
je r-xdata
push 0xd
call sub_1002ebde
pop ecx
and [ ebp - 0x4 ] 0x0
mov esi [ edi + 0x68 ]
mov [ ebp - 0x1c ] esi
cmp esi [ rw-data ]
je r-xdata
cmp [ edi + 0x6c ] 0x0
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_10032d43
jmp r-xdata
test esi esi
je r-xdata
mov esi [ edi + 0x68 ]
test esi esi
jne r-xdata
mov eax [ rw-data ]
mov [ edi + 0x68 ] eax
mov esi [ rw-data ]
mov [ ebp - 0x1c ] esi
push esi
call [ InterlockedIncrement@IAT ]
push esi
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
mov eax esi
call sub_1002e829
retn
push 0x20
call sub_10029708
pop ecx
cmp esi rw-data
je r-xdata
push esi
call sub_1002644d
pop ecx
sub_10032d4c
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
xor ebx ebx
push ebx
lea ecx [ ebp - 0x10 ]
call sub_10029358
mov [ rw-data ] ebx
cmp esi 0xfffffffe
jne r-xdata
cmp esi 0xfffffffd
jne r-xdata
mov [ rw-data ] 0x1
call [ GetOEMCP@IAT ]
cmp esi 0xfffffffc
jne r-xdata
mov [ rw-data ] 0x1
call [ GetACP@IAT ]
jmp r-xdata
pop ebx
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
jmp r-xdata
cmp [ ebp - 0x4 ] bl
je r-xdata
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0x4 ]
mov [ rw-data ] 0x1
jmp r-xdata
cmp [ ebp - 0x4 ] bl
je r-xdata
mov eax esi
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
sub_10032dc8
mov edi edi
push ebp
mov ebp esp
sub esp 0x20
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
push edi
call sub_10032d4c
mov edi eax
xor esi esi
mov [ ebp + 0x8 ] edi
cmp edi esi
jne r-xdata
mov [ ebp - 0x1c ] esi
xor eax eax
mov eax ebx
call sub_10032ab1
push 0x101
lea eax [ ebx + 0x1c ]
push esi
push eax
call sub_10026630
mov ecx [ ebp - 0x1c ]
add esp 0xc
imul ecx ecx 0x30
mov [ ebp - 0x20 ] esi
lea esi [ ecx + rw-data ]
mov [ ebp - 0x1c ] esi
jmp r-xdata
inc [ ebp - 0x1c ]
add eax 0x30
cmp eax 0xf0
jb r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_10025c8d
leave
retn
cmp [ esi ] 0x0
jne r-xdata
cmp [ eax + rw-data ] edi
je r-xdata
cmp edi 0xfde8
je r-xdata
mov al [ esi + 0x1 ]
test al al
je r-xdata
mov esi [ ebp - 0x1c ]
inc [ ebp - 0x20 ]
add esi 0x8
cmp [ ebp - 0x20 ] 0x4
mov [ ebp - 0x1c ] esi
jb r-xdata
or eax 0xffffffff
cmp edi 0xfde9
je r-xdata
movzx edi [ esi ]
movzx eax al
jmp r-xdata
mov eax edi
mov [ ebx + 0x4 ] edi
mov [ ebx + 0x8 ] 0x1
call sub_10032a82
push 0x6
mov [ ebx + 0xc ] eax
lea eax [ ebx + 0x10 ]
lea ecx [ ecx + rw-data ]
pop edx
movzx eax di
push eax
call [ IsValidCodePage@IAT ]
test eax eax
je r-xdata
cmp edi eax
jbe r-xdata
mov si [ ecx ]
inc ecx
mov [ eax ] si
inc ecx
inc eax
inc eax
dec edx
jne r-xdata
mov esi ebx
call sub_10032b15
jmp r-xdata
lea eax [ ebp - 0x18 ]
push eax
push edi
call [ GetCPInfo@IAT ]
test eax eax
je r-xdata
mov eax [ ebp - 0x20 ]
mov al [ eax + rw-data ]
or [ ebx + edi + 0x1d ] al
movzx eax [ esi + 0x1 ]
inc edi
mov edi [ ebp + 0x8 ]
inc esi
inc esi
xor eax eax
jmp r-xdata
cmp [ rw-data ] esi
jne r-xdata
push 0x101
lea eax [ ebx + 0x1c ]
push esi
push eax
call sub_10026630
xor edx edx
inc edx
add esp 0xc
mov [ ebx + 0x4 ] edi
mov [ ebx + 0xc ] esi
cmp [ ebp - 0x18 ] edx
jbe r-xdata
mov [ ebx + 0x8 ] esi
cmp [ ebp - 0x12 ] 0x0
je r-xdata
lea eax [ ebx + 0x1e ]
mov ecx 0xfe
lea esi [ ebp - 0x11 ]
or [ eax ] 0x8
inc eax
dec ecx
jne r-xdata
mov eax [ ebx + 0x4 ]
call sub_10032a82
mov [ ebx + 0xc ] eax
mov [ ebx + 0x8 ] edx
jmp r-xdata
movzx eax [ esi - 0x1 ]
movzx ecx cl
jmp r-xdata
xor eax eax
movzx ecx ax
mov eax ecx
shl ecx 0x10
or eax ecx
lea edi [ ebx + 0x10 ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
jmp r-xdata
cmp eax ecx
jbe r-xdata
or [ ebx + eax + 0x1d ] 0x4
inc eax
inc esi
inc esi
cmp [ esi - 0x1 ] 0x0
jne r-xdata
mov cl [ esi ]
test cl cl
je r-xdata
sub_10032fad
push 0x14
push r--data
call sub_1002e7e4
or [ ebp - 0x20 ] 0xffffffff
call sub_1002db24
mov edi eax
mov [ ebp - 0x24 ] edi
call sub_10032ca8
mov ebx [ edi + 0x68 ]
mov esi [ ebp + 0x8 ]
call sub_10032d4c
mov [ ebp + 0x8 ] eax
cmp eax [ ebx + 0x4 ]
je r-xdata
and [ ebp - 0x20 ] 0x0
push 0x220
call sub_1002c93d
pop ecx
mov ebx eax
test ebx ebx
je r-xdata
mov eax [ ebp - 0x20 ]
call sub_1002e829
retn
mov ecx 0x88
mov esi [ edi + 0x68 ]
mov edi ebx
[ edi ] [ esi ]
and [ ebx ] 0x0
push ebx
push [ ebp + 0x8 ]
call sub_10032dc8
pop ecx
pop ecx
mov [ ebp - 0x20 ] eax
test eax eax
jne r-xdata
cmp eax 0xffffffff
jne r-xdata
mov esi [ ebp - 0x24 ]
push [ esi + 0x68 ]
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
cmp ebx rw-data
je r-xdata
mov [ esi + 0x68 ] ebx
push ebx
mov edi [ InterlockedIncrement@IAT ]
call edi
test [ esi + 0x70 ] 0x2
jne r-xdata
mov eax [ esi + 0x68 ]
cmp eax rw-data
je r-xdata
call sub_1002c068
mov [ eax ] 0x16
jmp r-xdata
push ebx
call sub_1002644d
pop ecx
test [ rw-data ] 0x1
jne r-xdata
push eax
call sub_1002644d
pop ecx
push 0xd
call sub_1002ebde
pop ecx
and [ ebp - 0x4 ] 0x0
mov eax [ ebx + 0x4 ]
mov [ rw-data ] eax
mov eax [ ebx + 0x8 ]
mov [ rw-data ] eax
mov eax [ ebx + 0xc ]
mov [ rw-data ] eax
xor eax eax
xor eax eax
mov cx [ ebx + eax * 2 + 0x10 ]
mov [ eax * 2 + rw-data ] cx
inc eax
jmp r-xdata
xor eax eax
mov cl [ eax + ebx + 0x1c ]
mov [ eax + rw-data ] cl
inc eax
jmp r-xdata
mov [ ebp - 0x1c ] eax
cmp eax 0x5
jge r-xdata
push [ rw-data ]
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
mov cl [ eax + ebx + 0x11d ]
mov [ eax + rw-data ] cl
inc eax
jmp r-xdata
mov [ ebp - 0x1c ] eax
cmp eax 0x101
jge r-xdata
mov [ rw-data ] ebx
push ebx
call edi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_1003310e
jmp r-xdata
mov eax [ rw-data ]
cmp eax rw-data
je r-xdata
mov [ ebp - 0x1c ] eax
cmp eax 0x100
jge r-xdata
push eax
call sub_1002644d
pop ecx
sub_10033165
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
push ebx
push [ ebp + 0x10 ]
lea ecx [ ebp - 0x18 ]
call sub_10029358
mov ebx [ ebp + 0x8 ]
lea eax [ ebx + 0x1 ]
cmp eax 0x100
ja r-xdata
mov [ ebp + 0x8 ] ebx
sar [ ebp + 0x8 ] 0x8
lea eax [ ebp - 0x18 ]
push eax
mov eax [ ebp + 0x8 ]
and eax 0xff
push eax
call sub_100365b5
pop ecx
pop ecx
test eax eax
je r-xdata
mov eax [ ebp - 0x18 ]
mov eax [ eax + 0xc8 ]
movzx eax [ eax + ebx * 2 ]
jmp r-xdata
xor ecx ecx
mov [ ebp - 0x8 ] bl
mov [ ebp - 0x7 ] 0x0
inc ecx
mov al [ ebp + 0x8 ]
push 0x2
mov [ ebp - 0x8 ] al
mov [ ebp - 0x7 ] bl
mov [ ebp - 0x6 ] 0x0
pop ecx
jmp r-xdata
and eax [ ebp + 0xc ]
cmp [ ebp - 0xc ] 0x0
je r-xdata
movzx eax [ ebp - 0x4 ]
cmp [ ebp - 0xc ] al
je r-xdata
mov eax [ ebp - 0x18 ]
push 0x1
push [ eax + 0x14 ]
push [ eax + 0x4 ]
lea eax [ ebp - 0x4 ]
push eax
push ecx
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x18 ]
push 0x1
push eax
call sub_10035df6
add esp 0x20
test eax eax
jne r-xdata
pop ebx
leave
retn
mov ecx [ ebp - 0x10 ]
and [ ecx + 0x70 ] 0xfffffffd
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x10 ]
and [ eax + 0x70 ] 0xfffffffd
sub_1003321d
mov edi edi
push esi
push edi
xor edi edi
lea esi [ edi + rw-data ]
push [ esi ]
call sub_1002d85d
add edi 0x4
pop ecx
mov [ esi ] eax
cmp edi 0x28
jb r-xdata
pop edi
pop esi
retn
sub_10033240
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
mov eax 0x5a4d
cmp [ ecx ] ax
je r-xdata
mov eax [ ecx + 0x3c ]
add eax ecx
cmp [ eax ] 0x4550
jne r-xdata
xor eax eax
pop ebp
retn
xor edx edx
mov ecx 0x10b
cmp [ eax + 0x18 ] cx
sete dl
mov eax edx
pop ebp
retn
sub_10033280
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x3c ]
add ecx eax
movzx eax [ ecx + 0x14 ]
push ebx
push esi
movzx esi [ ecx + 0x6 ]
xor edx edx
push edi
lea eax [ eax + ecx + 0x18 ]
test esi esi
jbe r-xdata
xor eax eax
mov edi [ ebp + 0xc ]
inc edx
add eax 0x28
cmp edx esi
jb r-xdata
mov ebx [ eax + 0x8 ]
add ebx ecx
cmp edi ebx
jb r-xdata
mov ecx [ eax + 0xc ]
cmp edi ecx
jb r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
sub_100332d0
mov edi edi
push ebp
mov ebp esp
push 0xfffffffe
push r--data
push sub_1002e840
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push ebx
push esi
push edi
mov eax [ rw-data ]
xor [ ebp - 0x8 ] eax
xor eax ebp
push eax
lea eax [ ebp - 0x10 ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x18 ] esp
mov [ ebp - 0x4 ] 0x0
push __dos_header
call sub_10033240
add esp 0x4
test eax eax
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
xor eax eax
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp + 0x8 ]
sub eax __dos_header
push eax
push __dos_header
call sub_10033280
add esp 0x8
test eax eax
je r-xdata
mov eax [ eax + 0x24 ]
shr eax 0x1f
not eax
and eax 0x1
mov [ ebp - 0x4 ] 0xfffffffe
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_100333d9
push 0x8
push r--data
call sub_1002e7e4
push [ rw-data ]
call sub_1002d8d8
pop ecx
test eax eax
je r-xdata
call sub_1003338d
and [ ebp - 0x4 ] 0x0
call eax
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
sub_10033440
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ rw-data ]
push esi
imul ecx ecx 0xc
add ecx [ ebp + 0x8 ]
pop esi
cmp eax ecx
jae r-xdata
mov esi ecx
imul esi esi 0xc
add esi [ ebp + 0x8 ]
add eax 0xc
cmp eax esi
jb r-xdata
xor eax eax
cmp [ eax + 0x4 ] edx
je r-xdata
cmp [ eax + 0x4 ] edx
je r-xdata
pop ebp
retn
sub_10033484
push 0x20
push r--data
call sub_1002e7e4
xor edi edi
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x28 ] edi
mov ebx [ ebp + 0x8 ]
cmp ebx 0xb
jg r-xdata
mov eax ebx
sub eax 0xf
je r-xdata
je r-xdata
mov esi rw-data
mov eax [ rw-data ]
sub eax 0x6
je r-xdata
call sub_1002daab
mov edi eax
mov [ ebp - 0x28 ] edi
test edi edi
jne r-xdata
mov eax ebx
push 0x2
pop ecx
sub eax ecx
je r-xdata
call sub_1002e829
retn
cmp [ ebp - 0x20 ] eax
jne r-xdata
mov esi rw-data
mov eax [ rw-data ]
jmp r-xdata
dec eax
je r-xdata
push [ edi + 0x5c ]
mov edx ebx
call sub_10033440
mov esi eax
add esi 0x8
mov eax [ esi ]
jmp r-xdata
or eax 0xffffffff
jmp r-xdata
mov esi rw-data
mov eax [ rw-data ]
jmp r-xdata
sub eax ecx
je r-xdata
cmp [ ebp - 0x1c ] eax
je r-xdata
push 0x3
call sub_1002998e
mov [ ebp - 0x1c ] 0x1
push eax
call sub_1002d8d8
mov esi rw-data
mov eax [ rw-data ]
jmp r-xdata
call sub_1002c068
mov [ eax ] 0x16
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_100261c9
add esp 0x14
jmp r-xdata
mov [ ebp - 0x20 ] eax
pop ecx
xor eax eax
cmp [ ebp - 0x20 ] 0x1
je r-xdata
sub eax ecx
je r-xdata
xor eax eax
mov [ ebp - 0x4 ] eax
cmp ebx 0x8
je r-xdata
push eax
call sub_1002ebde
pop ecx
sub eax ecx
jne r-xdata
mov ecx [ edi + 0x60 ]
mov [ ebp - 0x2c ] ecx
mov [ edi + 0x60 ] eax
cmp ebx 0x8
jne r-xdata
cmp ebx 0xb
je r-xdata
call sub_1002d8cf
mov [ esi ] eax
mov ecx [ edi + 0x64 ]
mov [ ebp - 0x30 ] ecx
mov [ edi + 0x64 ] 0x8c
cmp ebx 0x4
jne r-xdata
push ebx
call [ ebp - 0x20 ]
push [ edi + 0x64 ]
push ebx
call [ ebp - 0x20 ]
pop ecx
jmp r-xdata
mov ecx [ rw-data ]
mov [ ebp - 0x24 ] ecx
cmp ebx 0x8
jne r-xdata
mov eax [ ebp - 0x2c ]
mov [ edi + 0x60 ] eax
cmp ebx 0x8
jne r-xdata
cmp ebx 0xb
je r-xdata
pop ecx
cmp ebx 0x8
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_100335f8
cmp ebx 0x8
jne r-xdata
mov ecx [ ebp - 0x24 ]
imul ecx ecx 0xc
mov edx [ edi + 0x5c ]
mov [ ecx + edx + 0x8 ] eax
inc [ ebp - 0x24 ]
jmp r-xdata
xor eax eax
mov eax [ ebp - 0x30 ]
mov [ edi + 0x64 ] eax
cmp ebx 0x4
jne r-xdata
mov ecx [ rw-data ]
mov edx [ rw-data ]
add ecx edx
cmp [ ebp - 0x24 ] ecx
jge r-xdata
sub_10033652
push 0x10
push r--data
call sub_1002e7e4
and [ ebp - 0x4 ] 0x0
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ InitializeCriticalSectionAndSpinCount@IAT ]
mov [ ebp - 0x1c ] eax
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
mov eax [ ebp - 0x1c ]
call sub_1002e829
retn
sub_100336c0
push ebp
mov ebp esp
sub esp 0x4
push ebx
push ecx
mov eax [ ebp + 0xc ]
add eax 0xc
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebp
push [ ebp + 0x10 ]
mov ecx [ ebp + 0x10 ]
mov ebp [ ebp - 0x4 ]
call sub_10038f54
push esi
push edi
call eax
pop edi
pop esi
mov ebx ebp
pop ebp
mov ecx [ ebp + 0x10 ]
push ebp
mov ebp ebx
cmp ecx 0x100
jne r-xdata
push ecx
call sub_10038f54
pop ebp
pop ecx
pop ebx
leave
retn 0xc
mov ecx 0x2
sub_1003371e
push 0x10
push r--data
call sub_1002e7e4
xor eax eax
mov ebx [ ebp + 0x8 ]
xor edi edi
cmp ebx edi
setne al
cmp eax edi
jne r-xdata
cmp [ rw-data ] 0x3
jne r-xdata
call sub_1002c068
mov [ eax ] 0x16
push edi
push edi
push edi
push edi
push edi
call sub_100261c9
add esp 0x14
or eax 0xffffffff
jmp r-xdata
push ebx
push edi
push [ rw-data ]
call [ HeapSize@IAT ]
mov esi eax
push 0x4
call sub_1002ebde
pop ecx
mov [ ebp - 0x4 ] edi
push ebx
call sub_1002ec11
pop ecx
mov [ ebp - 0x20 ] eax
cmp eax edi
je r-xdata
call sub_1002e829
retn
mov esi [ ebp - 0x1c ]
mov esi [ ebx - 0x4 ]
sub esi 0x9
mov [ ebp - 0x1c ] esi
jmp r-xdata
mov eax esi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_100337b8
cmp [ ebp - 0x20 ] edi
jne r-xdata
sub_100337c1
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
movzx ecx [ eax + 0x42 ]
movzx edx [ eax + 0x44 ]
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0x8 ] edx
test esi esi
jne r-xdata
and [ ebp - 0xc ] 0x0
push ebx
push edi
mov [ ebp - 0x10 ] eax
lea eax [ esi + 0x4 ]
push eax
push 0x31
push ecx
xor ebx ebx
inc ebx
lea eax [ ebp - 0x10 ]
push ebx
push eax
call sub_100308fb
mov edi eax
lea eax [ esi + 0x8 ]
push eax
push 0x32
push [ ebp - 0x4 ]
lea eax [ ebp - 0x10 ]
push ebx
push eax
call sub_100308fb
or edi eax
lea eax [ esi + 0xc ]
push eax
push 0x33
push [ ebp - 0x4 ]
lea eax [ ebp - 0x10 ]
push ebx
push eax
call sub_100308fb
or edi eax
lea eax [ esi + 0x10 ]
push eax
push 0x34
push [ ebp - 0x4 ]
lea eax [ ebp - 0x10 ]
push ebx
push eax
call sub_100308fb
add esp 0x50
or edi eax
lea eax [ esi + 0x14 ]
push eax
push 0x35
push [ ebp - 0x4 ]
lea eax [ ebp - 0x10 ]
push ebx
push eax
call sub_100308fb
or edi eax
lea eax [ esi + 0x18 ]
push eax
push 0x36
push [ ebp - 0x4 ]
lea eax [ ebp - 0x10 ]
push ebx
push eax
call sub_100308fb
push esi
push 0x37
push [ ebp - 0x4 ]
or edi eax
lea eax [ ebp - 0x10 ]
push ebx
push eax
call sub_100308fb
or edi eax
lea eax [ esi + 0x20 ]
push eax
push 0x2a
push [ ebp - 0x4 ]
lea eax [ ebp - 0x10 ]
push ebx
push eax
call sub_100308fb
add esp 0x50
or edi eax
lea eax [ esi + 0x24 ]
push eax
push 0x2b
push [ ebp - 0x4 ]
lea eax [ ebp - 0x10 ]
push ebx
push eax
call sub_100308fb
or edi eax
lea eax [ esi + 0x28 ]
push eax
push 0x2c
push [ ebp - 0x4 ]
lea eax [ ebp - 0x10 ]
push ebx
push eax
call sub_100308fb
or edi eax
lea eax [ esi + 0x2c ]
push eax
push 0x2d
push [ ebp - 0x4 ]
lea eax [ ebp - 0x10 ]
push ebx
push eax
call sub_100308fb
or edi eax
lea eax [ esi + 0x30 ]
push eax
push 0x2e
push [ ebp - 0x4 ]
lea eax [ ebp - 0x10 ]
push ebx
push eax
call sub_100308fb
add esp 0x50
or edi eax
lea eax [ esi + 0x34 ]
push eax
push 0x2f
push [ ebp - 0x4 ]
lea eax [ ebp - 0x10 ]
push ebx
push eax
call sub_100308fb
or edi eax
lea eax [ esi + 0x1c ]
push eax
push 0x30
push [ ebp - 0x4 ]
lea eax [ ebp - 0x10 ]
push ebx
push eax
call sub_100308fb
or edi eax
lea eax [ esi + 0x38 ]
push eax
push 0x44
push [ ebp - 0x4 ]
lea eax [ ebp - 0x10 ]
push ebx
push eax
call sub_100308fb
or edi eax
lea eax [ esi + 0x3c ]
push eax
push 0x45
push [ ebp - 0x4 ]
lea eax [ ebp - 0x10 ]
push ebx
push eax
call sub_100308fb
add esp 0x50
or edi eax
lea eax [ esi + 0x40 ]
push eax
push 0x46
push [ ebp - 0x4 ]
lea eax [ ebp - 0x10 ]
push ebx
push eax
call sub_100308fb
or edi eax
lea eax [ esi + 0x44 ]
push eax
push 0x47
push [ ebp - 0x4 ]
lea eax [ ebp - 0x10 ]
push ebx
push eax
call sub_100308fb
or edi eax
lea eax [ esi + 0x48 ]
push eax
push 0x48
push [ ebp - 0x4 ]
lea eax [ ebp - 0x10 ]
push ebx
push eax
call sub_100308fb
or edi eax
lea eax [ esi + 0x4c ]
push eax
push 0x49
push [ ebp - 0x4 ]
lea eax [ ebp - 0x10 ]
push ebx
push eax
call sub_100308fb
add esp 0x50
or edi eax
lea eax [ esi + 0x50 ]
push eax
push 0x4a
push [ ebp - 0x4 ]
lea eax [ ebp - 0x10 ]
push ebx
push eax
call sub_100308fb
or edi eax
lea eax [ esi + 0x54 ]
push eax
push 0x4b
push [ ebp - 0x4 ]
lea eax [ ebp - 0x10 ]
push ebx
push eax
call sub_100308fb
or edi eax
lea eax [ esi + 0x58 ]
push eax
push 0x4c
push [ ebp - 0x4 ]
lea eax [ ebp - 0x10 ]
push ebx
push eax
call sub_100308fb
or edi eax
lea eax [ esi + 0x5c ]
push eax
push 0x4d
push [ ebp - 0x4 ]
lea eax [ ebp - 0x10 ]
push ebx
push eax
call sub_100308fb
add esp 0x50
or edi eax
lea eax [ esi + 0x60 ]
push eax
push 0x4e
push [ ebp - 0x4 ]
lea eax [ ebp - 0x10 ]
push ebx
push eax
call sub_100308fb
or edi eax
lea eax [ esi + 0x64 ]
push eax
push 0x4f
push [ ebp - 0x4 ]
lea eax [ ebp - 0x10 ]
push ebx
push eax
call sub_100308fb
or edi eax
lea eax [ esi + 0x68 ]
push eax
push 0x38
push [ ebp - 0x4 ]
lea eax [ ebp - 0x10 ]
push ebx
push eax
call sub_100308fb
or edi eax
lea eax [ esi + 0x6c ]
push eax
push 0x39
push [ ebp - 0x4 ]
lea eax [ ebp - 0x10 ]
push ebx
push eax
call sub_100308fb
add esp 0x50
or edi eax
lea eax [ esi + 0x70 ]
push eax
push 0x3a
push [ ebp - 0x4 ]
lea eax [ ebp - 0x10 ]
push ebx
push eax
call sub_100308fb
or edi eax
lea eax [ esi + 0x74 ]
push eax
push 0x3b
push [ ebp - 0x4 ]
lea eax [ ebp - 0x10 ]
push ebx
push eax
call sub_100308fb
or edi eax
lea eax [ esi + 0x78 ]
push eax
push 0x3c
push [ ebp - 0x4 ]
lea eax [ ebp - 0x10 ]
push ebx
push eax
call sub_100308fb
or edi eax
lea eax [ esi + 0x7c ]
push eax
push 0x3d
push [ ebp - 0x4 ]
lea eax [ ebp - 0x10 ]
push ebx
push eax
call sub_100308fb
add esp 0x50
or edi eax
lea eax [ esi + 0x80 ]
push eax
push 0x3e
push [ ebp - 0x4 ]
lea eax [ ebp - 0x10 ]
push ebx
push eax
call sub_100308fb
or edi eax
lea eax [ esi + 0x84 ]
push eax
push 0x3f
push [ ebp - 0x4 ]
lea eax [ ebp - 0x10 ]
push ebx
push eax
call sub_100308fb
or edi eax
lea eax [ esi + 0x88 ]
push eax
push 0x40
push [ ebp - 0x4 ]
push ebx
lea eax [ ebp - 0x10 ]
push eax
call sub_100308fb
or edi eax
lea eax [ esi + 0x8c ]
push eax
push 0x41
push [ ebp - 0x4 ]
lea eax [ ebp - 0x10 ]
push ebx
push eax
call sub_100308fb
add esp 0x50
or edi eax
lea eax [ esi + 0x90 ]
push eax
push 0x42
push [ ebp - 0x4 ]
lea eax [ ebp - 0x10 ]
push ebx
push eax
call sub_100308fb
or edi eax
lea eax [ esi + 0x94 ]
push eax
push 0x43
push [ ebp - 0x4 ]
lea eax [ ebp - 0x10 ]
push ebx
push eax
call sub_100308fb
or edi eax
lea eax [ esi + 0x98 ]
push eax
push 0x28
push [ ebp - 0x4 ]
lea eax [ ebp - 0x10 ]
push ebx
push eax
call sub_100308fb
or edi eax
lea eax [ esi + 0x9c ]
push eax
push 0x29
push [ ebp - 0x4 ]
lea eax [ ebp - 0x10 ]
push ebx
push eax
call sub_100308fb
add esp 0x50
or edi eax
lea eax [ esi + 0xa0 ]
push eax
push 0x1f
push [ ebp - 0x8 ]
lea eax [ ebp - 0x10 ]
push ebx
push eax
call sub_100308fb
or edi eax
lea eax [ esi + 0xa4 ]
push eax
push 0x20
push [ ebp - 0x8 ]
lea eax [ ebp - 0x10 ]
push ebx
push eax
call sub_100308fb
or edi eax
lea eax [ esi + 0xa8 ]
push eax
push 0x1003
push [ ebp - 0x8 ]
lea eax [ ebp - 0x10 ]
push ebx
push eax
call sub_100308fb
or edi eax
lea eax [ esi + 0xb0 ]
push eax
push 0x1009
mov ebx [ ebp - 0x8 ]
push ebx
lea eax [ ebp - 0x10 ]
push 0x0
push eax
call sub_100308fb
add esp 0x50
or edi eax
mov eax edi
pop edi
mov [ esi + 0xac ] ebx
pop ebx
leave
retn
or eax 0xffffffff
leave
retn
sub_10033bdc
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
pop esi
pop ebp
retn
push [ esi + 0x4 ]
call sub_1002644d
push [ esi + 0x8 ]
call sub_1002644d
push [ esi + 0xc ]
call sub_1002644d
push [ esi + 0x10 ]
call sub_1002644d
push [ esi + 0x14 ]
call sub_1002644d
push [ esi + 0x18 ]
call sub_1002644d
push [ esi ]
call sub_1002644d
push [ esi + 0x20 ]
call sub_1002644d
push [ esi + 0x24 ]
call sub_1002644d
push [ esi + 0x28 ]
call sub_1002644d
push [ esi + 0x2c ]
call sub_1002644d
push [ esi + 0x30 ]
call sub_1002644d
push [ esi + 0x34 ]
call sub_1002644d
push [ esi + 0x1c ]
call sub_1002644d
push [ esi + 0x38 ]
call sub_1002644d
push [ esi + 0x3c ]
call sub_1002644d
add esp 0x40
push [ esi + 0x40 ]
call sub_1002644d
push [ esi + 0x44 ]
call sub_1002644d
push [ esi + 0x48 ]
call sub_1002644d
push [ esi + 0x4c ]
call sub_1002644d
push [ esi + 0x50 ]
call sub_1002644d
push [ esi + 0x54 ]
call sub_1002644d
push [ esi + 0x58 ]
call sub_1002644d
push [ esi + 0x5c ]
call sub_1002644d
push [ esi + 0x60 ]
call sub_1002644d
push [ esi + 0x64 ]
call sub_1002644d
push [ esi + 0x68 ]
call sub_1002644d
push [ esi + 0x6c ]
call sub_1002644d
push [ esi + 0x70 ]
call sub_1002644d
push [ esi + 0x74 ]
call sub_1002644d
push [ esi + 0x78 ]
call sub_1002644d
push [ esi + 0x7c ]
call sub_1002644d
add esp 0x40
push [ esi + 0x80 ]
call sub_1002644d
push [ esi + 0x84 ]
call sub_1002644d
push [ esi + 0x88 ]
call sub_1002644d
push [ esi + 0x8c ]
call sub_1002644d
push [ esi + 0x90 ]
call sub_1002644d
push [ esi + 0x94 ]
call sub_1002644d
push [ esi + 0x98 ]
call sub_1002644d
push [ esi + 0x9c ]
call sub_1002644d
push [ esi + 0xa0 ]
call sub_1002644d
push [ esi + 0xa4 ]
call sub_1002644d
push [ esi + 0xa8 ]
call sub_1002644d
add esp 0x2c
sub_10033d71
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
cmp [ edi + 0x20 ] 0x0
mov ebx rw-data
je r-xdata
mov esi ebx
push 0xb8
push 0x1
call sub_1002c982
mov esi eax
pop ecx
pop ecx
test esi esi
jne r-xdata
mov [ edi ] esi
xor eax eax
add eax 0xb4
push eax
call [ InterlockedDecrement@IAT ]
mov eax edi
call sub_100337c1
test eax eax
je r-xdata
xor eax eax
inc eax
jmp r-xdata
mov [ esi + 0xb4 ] 0x1
jmp r-xdata
push esi
call sub_10033bdc
push esi
call sub_1002644d
pop ecx
pop ecx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
add edi 0xd4
mov eax [ edi ]
cmp eax ebx
je r-xdata
sub_10033dea
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
pop esi
pop ebp
retn
mov eax [ esi ]
cmp eax [ rw-data ]
je r-xdata
mov eax [ esi + 0x4 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_1002644d
pop ecx
mov esi [ esi + 0x8 ]
cmp esi [ rw-data ]
je r-xdata
push eax
call sub_1002644d
pop ecx
push esi
call sub_1002644d
pop ecx
sub_10033e2f
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
push ebx
mov ebx [ ebp + 0x8 ]
push esi
xor esi esi
push edi
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x14 ] esi
cmp [ ebx + 0x1c ] esi
jne r-xdata
push 0x30
push 0x1
call sub_1002c982
mov edi eax
pop ecx
pop ecx
mov [ ebp + 0x8 ] edi
cmp edi esi
jne r-xdata
cmp [ ebx + 0x18 ] esi
jne r-xdata
mov esi [ ebx + 0xbc ]
push 0xc
pop ecx
push 0x4
[ edi ] [ esi ]
call sub_1002c93d
xor esi esi
pop ecx
mov [ ebp - 0x8 ] eax
cmp eax esi
jne r-xdata
xor eax eax
inc eax
jmp r-xdata
mov [ ebp - 0x4 ] esi
mov [ ebp - 0x8 ] esi
mov [ ebp + 0x8 ] rw-data
jmp r-xdata
mov [ eax ] esi
cmp [ ebx + 0x1c ] esi
je r-xdata
push [ ebp + 0x8 ]
call sub_1002644d
pop ecx
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn
mov eax [ ebx + 0xb4 ]
mov esi [ InterlockedDecrement@IAT ]
test eax eax
je r-xdata
mov ecx [ rw-data ]
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov ecx [ rw-data ]
mov [ eax + 0x4 ] ecx
mov ecx [ rw-data ]
mov [ ebp - 0x4 ] esi
mov [ eax + 0x8 ] ecx
push 0x4
call sub_1002c93d
pop ecx
mov [ ebp - 0x4 ] eax
cmp eax esi
jne r-xdata
mov eax [ ebx + 0xb0 ]
test eax eax
je r-xdata
push eax
call esi
mov [ eax ] ecx
mov [ eax ] esi
mov esi [ ebp + 0x8 ]
movzx edi [ ebx + 0x3e ]
push esi
push 0xe
push edi
lea eax [ ebp - 0x18 ]
push 0x1
push eax
call sub_100308fb
mov [ ebp - 0xc ] eax
lea eax [ esi + 0x4 ]
push eax
push 0xf
push edi
lea eax [ ebp - 0x18 ]
push 0x1
push eax
call sub_100308fb
or [ ebp - 0xc ] eax
lea eax [ esi + 0x8 ]
push eax
push 0x10
push edi
mov [ ebp - 0x10 ] eax
lea eax [ ebp - 0x18 ]
push 0x1
push eax
call sub_100308fb
add esp 0x3c
or eax [ ebp - 0xc ]
je r-xdata
xor esi esi
inc esi
mov eax [ ebp - 0x4 ]
mov [ ebx + 0xb4 ] eax
mov eax [ ebp - 0x8 ]
mov [ ebx + 0xb0 ] eax
mov eax [ ebp + 0x8 ]
mov [ ebx + 0xbc ] eax
xor eax eax
push eax
call esi
test eax eax
jne r-xdata
mov eax [ ebp - 0x10 ]
mov eax [ eax ]
jmp r-xdata
push esi
call sub_10033dea
pop ecx
or esi 0xffffffff
jmp r-xdata
push [ ebx + 0xb0 ]
call sub_1002644d
push [ ebx + 0xbc ]
call sub_1002644d
pop ecx
pop ecx
cmp [ eax ] 0x0
jne r-xdata
push [ ebp + 0x8 ]
call sub_1002644d
push [ ebp - 0x8 ]
call sub_1002644d
pop ecx
pop ecx
mov eax esi
jmp r-xdata
mov cl [ eax ]
cmp cl 0x30
jl r-xdata
jmp r-xdata
cmp cl 0x3b
jne r-xdata
cmp cl 0x39
jg r-xdata
mov eax [ ebp - 0x8 ]
xor ecx ecx
inc ecx
mov [ eax ] ecx
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
inc eax
mov esi eax
sub cl 0x30
mov [ eax ] cl
lea edi [ esi + 0x1 ]
mov cl [ edi ]
mov [ esi ] cl
mov esi edi
cmp [ esi ] 0x0
jne r-xdata
jmp r-xdata
sub_10033ff9
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
pop esi
pop ebp
retn
mov eax [ esi + 0xc ]
cmp eax [ rw-data ]
je r-xdata
mov eax [ esi + 0x10 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_1002644d
pop ecx
mov eax [ esi + 0x14 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_1002644d
pop ecx
mov eax [ esi + 0x18 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_1002644d
pop ecx
mov eax [ esi + 0x1c ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_1002644d
pop ecx
mov eax [ esi + 0x20 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_1002644d
pop ecx
mov esi [ esi + 0x24 ]
cmp esi [ rw-data ]
je r-xdata
push eax
call sub_1002644d
pop ecx
push esi
call sub_1002644d
pop ecx
sub_10034087
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
xor edi edi
mov [ ebp - 0x4 ] edi
mov [ ebp - 0x10 ] esi
mov [ ebp - 0xc ] edi
cmp [ esi + 0x18 ] edi
jne r-xdata
push 0x30
push 0x1
call sub_1002c982
mov ebx eax
pop ecx
pop ecx
cmp ebx edi
jne r-xdata
cmp [ esi + 0x1c ] edi
jne r-xdata
push 0x4
call sub_1002c93d
pop ecx
mov [ ebp - 0x8 ] eax
cmp eax edi
jne r-xdata
xor eax eax
inc eax
jmp r-xdata
mov [ ebp - 0x4 ] edi
mov [ ebp - 0x8 ] edi
mov ebx rw-data
jmp r-xdata
mov [ eax ] edi
cmp [ esi + 0x18 ] edi
je r-xdata
push ebx
call sub_1002644d
pop edi
pop esi
pop ebx
leave
retn
mov eax [ esi + 0xb8 ]
cmp eax edi
je r-xdata
push 0xc
pop ecx
mov esi rw-data
mov edi ebx
[ edi ] [ esi ]
push 0x4
call sub_1002c93d
pop ecx
mov [ ebp - 0x4 ] eax
cmp eax edi
jne r-xdata
mov eax [ esi + 0xb0 ]
cmp eax edi
je r-xdata
push eax
call [ InterlockedDecrement@IAT ]
mov ecx [ ebp - 0x4 ]
mov [ ecx ] eax
mov [ eax ] edi
movzx esi [ esi + 0x38 ]
lea eax [ ebx + 0xc ]
push eax
push 0x15
push esi
lea eax [ ebp - 0x10 ]
push 0x1
push eax
call sub_100308fb
mov edi eax
lea eax [ ebx + 0x10 ]
push eax
push 0x14
push esi
lea eax [ ebp - 0x10 ]
push 0x1
push eax
call sub_100308fb
or edi eax
lea eax [ ebx + 0x14 ]
push eax
push 0x16
push esi
lea eax [ ebp - 0x10 ]
push 0x1
push eax
call sub_100308fb
or edi eax
lea eax [ ebx + 0x18 ]
push eax
push 0x17
push esi
lea eax [ ebp - 0x10 ]
push 0x1
push eax
call sub_100308fb
add esp 0x50
or edi eax
lea eax [ ebx + 0x1c ]
push eax
push 0x18
push esi
lea eax [ ebp - 0x10 ]
push 0x1
push eax
call sub_100308fb
or edi eax
lea eax [ ebx + 0x20 ]
push eax
push 0x50
push esi
lea eax [ ebp - 0x10 ]
push 0x1
push eax
call sub_100308fb
or edi eax
lea eax [ ebx + 0x24 ]
push eax
push 0x51
push esi
lea eax [ ebp - 0x10 ]
push 0x1
push eax
call sub_100308fb
or edi eax
lea eax [ ebx + 0x28 ]
push eax
push 0x1a
push esi
lea eax [ ebp - 0x10 ]
push 0x0
push eax
call sub_100308fb
add esp 0x50
or edi eax
lea eax [ ebx + 0x29 ]
push eax
push 0x19
push esi
push 0x0
lea eax [ ebp - 0x10 ]
push eax
call sub_100308fb
or edi eax
lea eax [ ebx + 0x2a ]
push eax
push 0x54
push esi
lea eax [ ebp - 0x10 ]
push 0x0
push eax
call sub_100308fb
or edi eax
lea eax [ ebx + 0x2b ]
push eax
push 0x55
push esi
lea eax [ ebp - 0x10 ]
push 0x0
push eax
call sub_100308fb
or edi eax
lea eax [ ebx + 0x2c ]
push eax
push 0x56
push esi
lea eax [ ebp - 0x10 ]
push 0x0
push eax
call sub_100308fb
add esp 0x50
or edi eax
lea eax [ ebx + 0x2d ]
push eax
push 0x57
push esi
lea eax [ ebp - 0x10 ]
push 0x0
push eax
call sub_100308fb
or edi eax
lea eax [ ebx + 0x2e ]
push eax
push 0x52
push esi
lea eax [ ebp - 0x10 ]
push 0x0
push eax
call sub_100308fb
or edi eax
lea eax [ ebx + 0x2f ]
push eax
push 0x53
push esi
lea eax [ ebp - 0x10 ]
push 0x0
push eax
call sub_100308fb
add esp 0x3c
or eax edi
je r-xdata
push ebx
call sub_1002644d
push [ ebp - 0x8 ]
call sub_1002644d
pop ecx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ esi + 0xb8 ] eax
mov eax [ ebp - 0x8 ]
mov [ esi + 0xb0 ] eax
mov [ esi + 0xbc ] ebx
xor eax eax
push eax
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
mov eax [ ebx + 0x1c ]
jmp r-xdata
push ebx
call sub_10033ff9
push ebx
call sub_1002644d
push [ ebp - 0x8 ]
call sub_1002644d
push [ ebp - 0x4 ]
call sub_1002644d
add esp 0x10
jmp r-xdata
pop ecx
jmp r-xdata
push [ esi + 0xbc ]
call sub_1002644d
push [ esi + 0xb0 ]
call sub_1002644d
pop ecx
pop ecx
cmp [ eax ] 0x0
jne r-xdata
mov cl [ eax ]
cmp cl 0x30
jl r-xdata
jmp r-xdata
cmp cl 0x3b
jne r-xdata
cmp cl 0x39
jg r-xdata
mov eax [ ebp + 0x8 ]
mov esi [ ebp + 0x8 ]
add eax 0xbc
mov ecx [ eax ]
mov ecx [ ecx ]
mov [ ebx ] ecx
mov ecx [ eax ]
mov ecx [ ecx + 0x4 ]
mov [ ebx + 0x4 ] ecx
mov eax [ eax ]
mov eax [ eax + 0x8 ]
mov ecx [ ebp - 0x8 ]
mov [ ebx + 0x8 ] eax
xor eax eax
inc eax
xor edi edi
mov [ ecx ] eax
cmp [ ebp - 0x4 ] edi
je r-xdata
inc eax
mov esi eax
sub cl 0x30
mov [ eax ] cl
lea edi [ esi + 0x1 ]
mov cl [ edi ]
mov [ esi ] cl
mov esi edi
cmp [ esi ] 0x0
jne r-xdata
jmp r-xdata
sub_1003434d
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
push ebx
push esi
push edi
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x18 ]
xor ebx ebx
call sub_10029358
mov eax [ ebp - 0x18 ]
mov edi [ eax + 0xd4 ]
mov [ ebp - 0x4 ] ebx
mov esi [ ebp - 0x4 ]
shl esi 0x2
push [ esi + edi + 0x1c ]
call sub_10025d30
push [ esi + edi ]
mov [ ebp - 0x8 ] eax
call sub_10025d30
add eax ebx
inc [ ebp - 0x4 ]
cmp [ ebp - 0x4 ] 0x7
pop ecx
pop ecx
mov ecx [ ebp - 0x8 ]
lea ebx [ eax + ecx + 0x2 ]
jb r-xdata
lea eax [ ebx + 0x1 ]
push eax
call sub_1002c93d
mov esi eax
pop ecx
mov [ ebp - 0x8 ] esi
test esi esi
je r-xdata
cmp [ ebp - 0xc ] 0x0
pop edi
pop esi
pop ebx
je r-xdata
and [ ebp - 0x4 ] 0x0
mov eax [ ebp - 0x8 ]
leave
retn
mov eax [ ebp - 0x10 ]
and [ eax + 0x70 ] 0xfffffffd
push esi
call sub_10025d30
add esi eax
mov eax [ ebp - 0x4 ]
mov [ esi ] 0x3a
push [ edi + eax * 4 + 0x1c ]
mov eax [ ebp - 0x8 ]
inc esi
sub eax esi
lea eax [ eax + ebx + 0x1 ]
push eax
push esi
call sub_1002d40c
add esp 0x10
test eax eax
je r-xdata
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_100260a1
add esp 0x14
push esi
call sub_10025d30
add esi eax
inc [ ebp - 0x4 ]
cmp [ ebp - 0x4 ] 0x7
pop ecx
jb r-xdata
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_100260a1
add esp 0x14
mov eax [ ebp - 0x4 ]
mov [ esi ] 0x3a
push [ edi + eax * 4 ]
mov eax [ ebp - 0x8 ]
inc esi
sub eax esi
lea eax [ eax + ebx + 0x1 ]
push eax
push esi
call sub_1002d40c
add esp 0xc
test eax eax
je r-xdata
mov [ esi ] 0x0
sub_10034456
mov edi edi
push ebp
mov ebp esp
sub esp 0x1c
push ebx
push esi
push edi
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x1c ]
xor ebx ebx
call sub_10029358
mov eax [ ebp - 0x1c ]
mov edi [ eax + 0xd4 ]
lea esi [ edi + 0x38 ]
mov [ ebp - 0x4 ] esi
mov [ ebp - 0x8 ] 0xc
push [ esi + 0x30 ]
call sub_10025d30
push [ esi ]
mov [ ebp - 0xc ] eax
call sub_10025d30
mov esi [ ebp - 0x4 ]
pop ecx
pop ecx
mov ecx [ ebp - 0xc ]
add eax ebx
add esi 0x4
dec [ ebp - 0x8 ]
lea ebx [ eax + ecx + 0x2 ]
mov [ ebp - 0x4 ] esi
jne r-xdata
lea eax [ ebx + 0x1 ]
push eax
call sub_1002c93d
mov esi eax
pop ecx
mov [ ebp - 0x4 ] esi
test esi esi
je r-xdata
cmp [ ebp - 0x10 ] 0x0
pop edi
pop esi
pop ebx
je r-xdata
add edi 0x68
mov [ ebp - 0x8 ] 0xc
mov eax [ ebp - 0x4 ]
leave
retn
mov eax [ ebp - 0x14 ]
and [ eax + 0x70 ] 0xfffffffd
push esi
call sub_10025d30
add esi eax
mov eax [ ebp - 0x4 ]
mov [ esi ] 0x3a
push [ edi ]
inc esi
sub eax esi
lea eax [ eax + ebx + 0x1 ]
push eax
push esi
call sub_1002d40c
add esp 0x10
test eax eax
je r-xdata
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_100260a1
add esp 0x14
push esi
call sub_10025d30
add esi eax
add edi 0x4
dec [ ebp - 0x8 ]
pop ecx
jne r-xdata
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_100260a1
add esp 0x14
mov eax [ ebp - 0x4 ]
mov [ esi ] 0x3a
push [ edi - 0x30 ]
inc esi
sub eax esi
lea eax [ eax + ebx + 0x1 ]
push eax
push esi
call sub_1002d40c
add esp 0xc
test eax eax
je r-xdata
mov [ esi ] 0x0
sub_1003455f
mov edi edi
push ebp
mov ebp esp
sub esp 0x24
push ebx
push esi
push edi
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x24 ]
xor edi edi
call sub_10029358
mov eax [ ebp - 0x24 ]
mov esi [ eax + 0xd4 ]
mov [ ebp - 0x4 ] edi
mov ebx [ ebp - 0x4 ]
shl ebx 0x2
push [ ebx + esi + 0x1c ]
call sub_10025d30
push [ ebx + esi ]
mov [ ebp - 0x14 ] eax
call sub_10025d30
add eax edi
inc [ ebp - 0x4 ]
cmp [ ebp - 0x4 ] 0x7
pop ecx
pop ecx
mov ecx [ ebp - 0x14 ]
lea edi [ eax + ecx + 0x2 ]
jb r-xdata
lea eax [ esi + 0x38 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0xc
mov ebx [ ebp - 0x10 ]
push [ ebx + 0x30 ]
call sub_10025d30
push [ ebx ]
mov [ ebp - 0x14 ] eax
call sub_10025d30
add [ ebp - 0x10 ] 0x4
pop ecx
pop ecx
mov ecx [ ebp - 0x14 ]
add eax edi
dec [ ebp - 0xc ]
lea edi [ eax + ecx + 0x2 ]
jne r-xdata
push [ esi + 0x9c ]
call sub_10025d30
push [ esi + 0x98 ]
mov ebx eax
call sub_10025d30
push [ esi + 0xa0 ]
add eax edi
lea edi [ eax + ebx + 0x2 ]
call sub_10025d30
push [ esi + 0xa4 ]
lea edi [ edi + eax + 0x1 ]
call sub_10025d30
push [ esi + 0xa8 ]
lea edi [ edi + eax + 0x1 ]
call sub_10025d30
lea eax [ edi + eax + 0xb9 ]
push eax
mov [ ebp - 0x8 ] eax
call sub_1002c93d
mov ebx eax
add esp 0x18
test ebx ebx
je r-xdata
cmp [ ebp - 0x18 ] 0x0
je r-xdata
push 0xb8
push esi
push ebx
lea edi [ ebx + 0xb8 ]
call sub_10028b40
and [ ebp - 0x4 ] 0x0
lea eax [ esi + 0x1c ]
mov [ ebp - 0x10 ] ebx
add esp 0xc
sub [ ebp - 0x10 ] esi
mov [ ebp - 0xc ] eax
pop edi
pop esi
mov eax ebx
pop ebx
leave
retn
mov eax [ ebp - 0x1c ]
and [ eax + 0x70 ] 0xfffffffd
push edi
call sub_10025d30
mov ecx [ ebp - 0x10 ]
lea edi [ edi + eax + 0x1 ]
mov eax [ ebp - 0xc ]
mov [ ecx + eax ] edi
push [ eax ]
mov eax ebx
sub eax edi
add eax [ ebp - 0x8 ]
push eax
push edi
call sub_1002d40c
add esp 0x10
test eax eax
je r-xdata
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_100260a1
add esp 0x14
push edi
call sub_10025d30
inc [ ebp - 0x4 ]
add [ ebp - 0xc ] 0x4
cmp [ ebp - 0x4 ] 0x7
pop ecx
lea edi [ edi + eax + 0x1 ]
jb r-xdata
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_100260a1
add esp 0x14
mov eax [ ebp - 0x4 ]
mov [ ebx + eax * 4 ] edi
mov eax [ ebp - 0xc ]
push [ eax - 0x1c ]
mov eax ebx
sub eax edi
add eax [ ebp - 0x8 ]
push eax
push edi
call sub_1002d40c
add esp 0xc
test eax eax
je r-xdata
lea eax [ ebx + 0x68 ]
mov [ ebp - 0x4 ] eax
lea eax [ esi + 0x38 ]
mov [ ebp - 0xc ] eax
mov [ ebp - 0x14 ] 0xc
jmp r-xdata
mov ecx [ ebp - 0x10 ]
mov [ eax + ecx ] edi
push [ eax ]
mov eax ebx
sub eax edi
add eax [ ebp - 0x8 ]
push eax
push edi
call sub_1002d40c
add esp 0xc
test eax eax
je r-xdata
push edi
call sub_10025d30
lea edi [ edi + eax + 0x1 ]
mov eax [ ebp - 0x4 ]
mov [ eax ] edi
mov eax [ ebp - 0xc ]
push [ eax + 0x30 ]
mov eax ebx
sub eax edi
add eax [ ebp - 0x8 ]
push eax
push edi
call sub_1002d40c
add esp 0x10
test eax eax
je r-xdata
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_100260a1
add esp 0x14
push edi
call sub_10025d30
add [ ebp - 0xc ] 0x4
add [ ebp - 0x4 ] 0x4
dec [ ebp - 0x14 ]
pop ecx
lea edi [ edi + eax + 0x1 ]
jne r-xdata
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_100260a1
add esp 0x14
mov eax [ ebp - 0xc ]
mov eax ebx
sub eax edi
add eax [ ebp - 0x8 ]
mov [ ebx + 0x98 ] edi
push [ esi + 0x98 ]
push eax
push edi
call sub_1002d40c
add esp 0xc
test eax eax
je r-xdata
push edi
call sub_10025d30
lea edi [ edi + eax + 0x1 ]
mov eax ebx
sub eax edi
add eax [ ebp - 0x8 ]
mov [ ebx + 0x9c ] edi
push [ esi + 0x9c ]
push eax
push edi
call sub_1002d40c
add esp 0x10
test eax eax
je r-xdata
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_100260a1
add esp 0x14
push edi
call sub_10025d30
lea edi [ edi + eax + 0x1 ]
mov eax ebx
sub eax edi
add eax [ ebp - 0x8 ]
mov [ ebx + 0xa0 ] edi
push [ esi + 0xa0 ]
push eax
push edi
call sub_1002d40c
add esp 0x10
test eax eax
je r-xdata
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_100260a1
add esp 0x14
push edi
call sub_10025d30
lea edi [ edi + eax + 0x1 ]
mov eax ebx
sub eax edi
add eax [ ebp - 0x8 ]
mov [ ebx + 0xa4 ] edi
push [ esi + 0xa4 ]
push eax
push edi
call sub_1002d40c
add esp 0x10
test eax eax
je r-xdata
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_100260a1
add esp 0x14
push edi
call sub_10025d30
lea eax [ edi + eax + 0x1 ]
mov ecx ebx
sub ecx eax
add ecx [ ebp - 0x8 ]
mov [ ebx + 0xa8 ] eax
push [ esi + 0xa8 ]
push ecx
push eax
call sub_1002d40c
add esp 0x10
test eax eax
je r-xdata
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_100260a1
add esp 0x14
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_100260a1
add esp 0x14
sub_100348bf
cmp [ eax ] 0x0
push esi
mov esi edx
je r-xdata
pop esi
retn
push edi
pop edi
mov edi [ ecx ]
mov [ edi ] dl
inc [ ecx ]
inc esi
dec [ eax ]
cmp [ eax ] 0x0
jne r-xdata
mov dl [ esi ]
test dl dl
je r-xdata
sub_100348df
mov edi edi
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi edx
xor edx edx
mov [ ebp - 0x4 ] edx
cmp [ ebp + 0x8 ] edx
je r-xdata
cmp esi [ ecx ]
jae r-xdata
cmp [ ecx ] 0x1
mov esi [ edi ]
jbe r-xdata
mov [ ecx ] edx
dec esi
lea edx [ esi + 0x1 ]
test edx edx
je r-xdata
mov eax [ edi ]
mov [ edi ] esi
dec esi
push 0xa
cdq
pop ebx
idiv ebx
add dl 0x30
mov [ esi ] dl
inc esi
dec [ ecx ]
mov edx [ ecx ]
test eax eax
jle r-xdata
mov eax [ ebp - 0x4 ]
add [ edi ] eax
sub [ ecx ] eax
jmp r-xdata
push 0xa
cdq
pop ebx
idiv ebx
mov ebx [ edi ]
add dl 0x30
inc [ ebp - 0x4 ]
mov [ esi + ebx ] dl
dec esi
cmp esi 0xffffffff
jne r-xdata
mov dl [ eax ]
mov cl [ esi ]
mov [ esi ] dl
dec esi
mov [ eax ] cl
inc eax
cmp eax esi
jb r-xdata
jmp r-xdata
cmp edx 0x1
ja r-xdata
pop esi
pop ebx
leave
retn
sub_1003495a
mov edi edi
push ebp
mov ebp esp
push ecx
push ebx
movsx eax al
cmp eax 0x59
push esi
push edi
mov ebx ecx
mov esi edx
jg r-xdata
cmp eax 0x6d
jg r-xdata
je r-xdata
sub eax 0x70
je r-xdata
je r-xdata
mov eax [ esi + 0x14 ]
cmp eax 0xfffff894
jl r-xdata
cmp eax 0x49
jg r-xdata
mov esi [ esi + 0x8 ]
xor edi edi
cmp esi edi
jl r-xdata
sub eax 0x7
je r-xdata
mov esi [ esi + 0x10 ]
xor edi edi
cmp esi edi
jl r-xdata
sub eax 0x5a
je r-xdata
call sub_1002c068
xor edi edi
jmp r-xdata
cmp eax 0x1fa3
jle r-xdata
sub eax 0x4d
je r-xdata
je r-xdata
call sub_1002c068
cmp esi 0x17
jg r-xdata
mov eax [ esi + 0x18 ]
xor edi edi
cmp eax edi
jl r-xdata
dec eax
je r-xdata
cmp esi 0xb
jg r-xdata
call sub_100393c4
call sub_10039045
mov edx eax
xor eax eax
cmp [ esi + 0x20 ] eax
mov ecx ebx
setne al
mov ebx eax
mov edx [ edx + ebx * 4 ]
mov [ ebp - 0x4 ] eax
jmp r-xdata
sub eax 0x7
je r-xdata
push edi
push edi
push edi
push edi
push edi
mov [ eax ] 0x16
call sub_100261c9
add esp 0x14
cdq
push 0x64
pop ecx
idiv ecx
push [ ebp + 0x14 ]
push 0x4
add eax 0x13
imul eax eax 0x64
add eax edx
jmp r-xdata
mov eax [ esi + 0x4 ]
jmp r-xdata
push 0x6
pop ecx
sub eax ecx
je r-xdata
mov eax [ esi + 0x8 ]
xor edi edi
cmp eax edi
jl r-xdata
sub eax 0x4
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
cmp esi 0xb
mov edx [ ebp + 0x10 ]
jg r-xdata
cmp eax 0x6
jg r-xdata
push [ ebp + 0x10 ]
xor edi edi
push [ ebp + 0xc ]
push ebx
push esi
cmp [ ebp + 0x14 ] edi
je r-xdata
dec eax
je r-xdata
lea eax [ esi + 0x1 ]
jmp r-xdata
mov eax [ ebp + 0xc ]
call sub_100348bf
mov esi [ esi + 0x18 ]
xor edi edi
cmp esi edi
jl r-xdata
dec eax
je r-xdata
pop edx
xor edi edi
cmp eax edi
jl r-xdata
mov eax [ esi ]
dec eax
dec eax
je r-xdata
cmp eax 0x17
jg r-xdata
xor eax eax
inc eax
sub eax 0x9
je r-xdata
mov edx [ edx + 0x9c ]
mov edx [ edx + 0x98 ]
jmp r-xdata
push [ ebp + 0x14 ]
xor edx edx
inc edx
jmp r-xdata
push edi
jmp r-xdata
push 0x1
jmp r-xdata
mov eax [ esi + 0x14 ]
xor edi edi
cmp eax edi
jl r-xdata
dec eax
jne r-xdata
push [ ebp + 0x14 ]
cmp esi 0x6
jle r-xdata
mov esi [ esi + 0x10 ]
xor edi edi
cmp esi edi
jl r-xdata
dec eax
je r-xdata
cmp eax 0x3b
jmp r-xdata
mov eax [ esi + 0x18 ]
xor edi edi
cmp eax edi
jl r-xdata
dec eax
dec eax
je r-xdata
cdq
push 0xc
pop ecx
idiv ecx
mov eax edx
cmp eax edi
jne r-xdata
sub eax 0x18
je r-xdata
mov ecx [ ebp + 0xc ]
mov edi ebx
call sub_100348df
pop ecx
jmp r-xdata
push [ ebp + 0x8 ]
call sub_10034d42
add esp 0x18
test eax eax
jne r-xdata
push [ ebp + 0x14 ]
cdq
push 0x64
pop ecx
idiv ecx
mov eax edx
jmp r-xdata
xor eax eax
jmp r-xdata
mov edx [ ebp + 0x10 ]
mov edx [ edx + esi * 4 ]
jmp r-xdata
cmp esi 0xb
jg r-xdata
push [ ebp + 0x10 ]
xor edi edi
push [ ebp + 0xc ]
push ebx
push esi
cmp [ ebp + 0x14 ] edi
je r-xdata
dec eax
je r-xdata
jg r-xdata
cmp eax ecx
jg r-xdata
mov eax [ esi + 0x18 ]
xor edi edi
cmp eax edi
jl r-xdata
dec eax
jne r-xdata
push ecx
pop eax
jmp r-xdata
mov eax [ ebx ]
mov [ eax ] 0x25
mov eax [ ebp + 0xc ]
inc [ ebx ]
dec [ eax ]
jmp r-xdata
sub eax 0x1c
je r-xdata
jmp r-xdata
push 0x2
mov edx [ ebp + 0x10 ]
mov edx [ edx + esi * 4 + 0x38 ]
jmp r-xdata
push edi
jmp r-xdata
push 0x1
mov esi [ esi + 0xc ]
cmp esi 0x1
jl r-xdata
sub eax 0x6
jne r-xdata
jmp r-xdata
mov ecx eax
cmp eax ecx
jg r-xdata
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
jmp r-xdata
mov esi [ esi + 0x18 ]
xor edi edi
cmp esi edi
jl r-xdata
dec eax
je r-xdata
push [ ebp + 0x8 ]
call sub_10034d42
add esp 0x18
test eax eax
je r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax ] edi
je r-xdata
cmp esi 0x1f
jg r-xdata
mov esi [ esi + 0x1c ]
xor edi edi
cmp esi edi
jl r-xdata
cmp eax 0x16d
jg r-xdata
cmp eax edi
je r-xdata
push ebx
push esi
push 0x2
cmp esi 0x6
jg r-xdata
mov esi [ esi + 0x10 ]
xor edi edi
cmp esi edi
jl r-xdata
sub eax 0x6
jne r-xdata
mov eax [ ebx ]
push [ ebp + 0x10 ]
mov [ eax ] 0x20
mov eax [ ebp + 0xc ]
inc [ ebx ]
dec [ eax ]
push eax
mov eax esi
cmp esi 0x16d
jg r-xdata
cmp eax ecx
jge r-xdata
mov eax [ esi + 0x1c ]
cmp eax edi
jl r-xdata
lea ecx [ eax - 0x1 ]
jmp r-xdata
mov edx [ ebp + 0x10 ]
mov edx [ edx + esi * 4 + 0x1c ]
jmp r-xdata
cmp esi 0xb
jg r-xdata
mov eax [ esi + 0x8 ]
xor edi edi
cmp eax edi
jl r-xdata
push [ ebp + 0x14 ]
lea eax [ esi + 0x1 ]
push 0x3
jmp r-xdata
push 0x7
cdq
pop esi
idiv esi
cmp edx ecx
jl r-xdata
xor eax eax
jmp r-xdata
mov edx [ ebp + 0x10 ]
mov edx [ edx + esi * 4 + 0x68 ]
jmp r-xdata
cmp eax 0x17
inc eax
jmp r-xdata
sub_10034d42
mov edi edi
push ebp
mov ebp esp
sub esp 0x20
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0xc ]
push ebx
push esi
mov esi [ ebp + 0x1c ]
xor ebx ebx
sub eax ebx
push edi
je r-xdata
mov edi [ esi + 0xa0 ]
dec eax
je r-xdata
mov al [ edi ]
test al al
je r-xdata
cmp [ ebp + 0xc ] 0x2
mov ecx [ GetDateFormatA@IAT ]
jne r-xdata
mov edi [ esi + 0xa4 ]
jmp r-xdata
mov edi [ esi + 0xa8 ]
jmp r-xdata
xor eax eax
inc eax
mov ebx [ ebp + 0x18 ]
mov esi [ ebp + 0x14 ]
mov edx 0x76c
add dx [ eax + 0x14 ]
push ebx
mov [ ebp - 0x20 ] dx
mov dx [ eax + 0x10 ]
inc dx
mov [ ebp - 0x1e ] dx
mov dx [ eax + 0xc ]
mov [ ebp - 0x1a ] dx
mov dx [ eax + 0x8 ]
mov [ ebp - 0x18 ] dx
mov dx [ eax + 0x4 ]
mov ax [ eax ]
mov [ ebp - 0x14 ] ax
push ebx
xor eax eax
push edi
mov [ ebp - 0x12 ] ax
lea eax [ ebp - 0x20 ]
push eax
push ebx
push [ esi + 0xac ]
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x16 ] dx
call ecx
mov [ ebp - 0x10 ] eax
cmp eax ebx
je r-xdata
mov ecx [ GetTimeFormatA@IAT ]
cmp [ esi + 0xb0 ] 0x1
mov eax [ ebp + 0x10 ]
je r-xdata
xor edx edx
mov [ ebp - 0x8 ] edx
mov ecx edi
add eax 0x8
cmp eax 0x400
jg r-xdata
inc ecx
inc edx
cmp [ ecx ] al
je r-xdata
mov [ ebp - 0xc ] ecx
movsx ecx al
cmp ecx 0x64
jg r-xdata
push eax
call sub_10028f2d
pop ecx
cmp eax ebx
je r-xdata
call sub_10036140
mov eax esp
cmp eax ebx
je r-xdata
mov eax ecx
sub eax 0x68
je r-xdata
je r-xdata
mov [ ebp - 0x8 ] eax
cmp eax ebx
je r-xdata
mov [ eax ] 0xdddd
mov [ eax ] 0xcccc
jmp r-xdata
mov eax edx
dec eax
je r-xdata
sub eax 0x5
je r-xdata
mov eax edx
dec eax
je r-xdata
cmp ecx 0x27
je r-xdata
push [ ebp - 0x10 ]
mov ebx eax
push ebx
push edi
lea eax [ ebp - 0x20 ]
push eax
push 0x0
push [ esi + 0xac ]
call [ ebp - 0xc ]
dec eax
test eax eax
jle r-xdata
add eax 0x8
mov [ ebp - 0x8 ] 0x1
dec eax
je r-xdata
mov eax edx
dec eax
je r-xdata
sub eax 0x6
je r-xdata
mov [ ebp - 0x8 ] 0x1
dec eax
je r-xdata
add edi edx
test dl 0x1
je r-xdata
cmp ecx 0x41
je r-xdata
push [ ebp - 0x8 ]
call sub_1002c50a
pop ecx
mov esi [ ebp + 0x18 ]
mov ecx [ ebp + 0x14 ]
xor eax eax
jmp r-xdata
mov edi [ ebp - 0xc ]
jmp r-xdata
mov al 0x49
jmp r-xdata
mov [ ebp - 0x8 ] 0x1
dec eax
je r-xdata
mov eax edx
dec eax
je r-xdata
dec eax
je r-xdata
push [ ebp - 0x8 ]
mov edx [ ebp + 0x10 ]
push [ ebp + 0x1c ]
mov ecx esi
push ebx
push [ ebp + 0x8 ]
call sub_1003495a
add esp 0x10
test eax eax
je r-xdata
mov al 0x64
jmp r-xdata
dec eax
je r-xdata
mov al [ edi ]
test al al
jne r-xdata
mov al [ edi ]
test al al
je r-xdata
push r--data
push edi
call sub_10039413
pop ecx
pop ecx
test eax eax
jne r-xdata
cmp ecx 0x48
je r-xdata
mov edx [ ecx ]
mov [ ebp - 0x10 ] eax
mov al [ ebx ]
mov [ edx ] al
inc [ ecx ]
mov eax [ ebp - 0x10 ]
inc ebx
dec [ esi ]
dec eax
test eax eax
jg r-xdata
lea esp [ ebp - 0x2c ]
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10025c8d
leave
retn
push [ ebp + 0x8 ]
push ecx
call sub_100365b5
pop ecx
pop ecx
test eax eax
je r-xdata
mov al 0x4d
jmp r-xdata
jmp r-xdata
mov [ ebp - 0x8 ] 0x1
dec eax
je r-xdata
mov eax [ ebp + 0x10 ]
cmp [ eax + 0x8 ] 0xb
mov eax [ ebp + 0x1c ]
jg r-xdata
sub eax 0x5
jne r-xdata
mov al 0x61
jmp r-xdata
dec eax
jne r-xdata
cmp [ ebx ] 0x0
je r-xdata
jmp r-xdata
cmp [ ebx ] 0x0
je r-xdata
push r--data
push edi
call sub_10039413
pop ecx
pop ecx
test eax eax
jne r-xdata
add edi 0x5
jmp r-xdata
mov eax edx
dec eax
je r-xdata
cmp ecx 0x4d
je r-xdata
cmp [ esi ] 0x0
jbe r-xdata
mov cl [ edi ]
mov eax [ esi ]
mov [ eax ] cl
inc [ esi ]
inc edi
dec [ ebx ]
cmp [ ebx ] 0x1
jbe r-xdata
mov al 0x53
jmp r-xdata
jmp r-xdata
mov edi [ eax + 0x9c ]
mov edi [ eax + 0x98 ]
jmp r-xdata
mov eax edx
dec eax
dec eax
je r-xdata
mov al 0x41
jmp r-xdata
cmp al 0x27
je r-xdata
mov al 0x70
jmp r-xdata
add edi 0x3
mov [ ebp - 0xc ] edi
mov [ ebp - 0x8 ] 0x1
dec eax
je r-xdata
mov eax edx
dec eax
je r-xdata
cmp ecx 0x61
je r-xdata
lea eax [ edi + 0x1 ]
cmp [ eax ] 0x0
je r-xdata
mov al [ edi ]
test al al
jne r-xdata
cmp [ ebx ] 0x0
jbe r-xdata
cmp edx 0x1
jne r-xdata
mov al 0x79
jmp r-xdata
dec eax
dec eax
jne r-xdata
inc edi
jmp r-xdata
push [ ebp + 0x8 ]
movsx eax al
push eax
call sub_100365b5
pop ecx
pop ecx
test eax eax
je r-xdata
mov al 0x48
jmp r-xdata
jmp r-xdata
mov [ ebp - 0x8 ] 0x1
dec eax
je r-xdata
mov dl [ edi ]
mov ecx [ esi ]
mov [ ecx ] dl
inc [ esi ]
dec [ ebx ]
mov edi eax
cmp [ ebx ] 0x0
jbe r-xdata
jmp r-xdata
movsx eax [ edi ]
push [ ebp + 0x8 ]
push eax
call sub_100365b5
pop ecx
pop ecx
test eax eax
je r-xdata
mov al 0x59
jmp r-xdata
mov eax [ esi ]
mov cl [ edi ]
mov [ eax ] cl
inc [ esi ]
inc edi
dec [ ebx ]
mov al [ edi ]
test al al
jne r-xdata
cmp [ ebx ] 0x1
jbe r-xdata
mov al 0x6d
jmp r-xdata
dec eax
je r-xdata
push [ ebp + 0x8 ]
movsx eax al
push eax
call sub_100365b5
pop ecx
pop ecx
test eax eax
je r-xdata
mov eax [ esi ]
mov cl [ edi ]
mov [ eax ] cl
inc [ esi ]
dec [ ebx ]
jmp r-xdata
cmp [ ebx ] 0x1
jbe r-xdata
jmp r-xdata
lea eax [ edi + 0x1 ]
cmp [ eax ] 0x0
je r-xdata
mov al 0x62
jmp r-xdata
dec eax
jne r-xdata
mov cl [ edi ]
mov eax [ esi ]
mov [ eax ] cl
inc [ esi ]
inc edi
dec [ ebx ]
cmp [ ebx ] 0x1
jbe r-xdata
lea eax [ edi + 0x1 ]
cmp [ eax ] 0x0
je r-xdata
mov dl [ edi ]
mov ecx [ esi ]
mov [ ecx ] dl
inc [ esi ]
dec [ ebx ]
mov edi eax
mov al 0x42
jmp r-xdata
lea eax [ edi + 0x1 ]
cmp [ eax ] 0x0
je r-xdata
mov dl [ edi ]
mov ecx [ esi ]
mov [ ecx ] dl
inc [ esi ]
dec [ ebx ]
mov edi eax
mov dl [ edi ]
mov ecx [ esi ]
mov [ ecx ] dl
inc [ esi ]
dec [ ebx ]
mov edi eax
sub_100351a3
mov edi edi
push ebp
mov ebp esp
sub esp 0x20
mov eax [ ebp + 0x8 ]
push ebx
push [ ebp + 0x1c ]
xor ebx ebx
lea ecx [ ebp - 0x20 ]
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x10 ] eax
call sub_10029358
mov eax [ ebp + 0x8 ]
cmp eax ebx
jne r-xdata
push edi
mov edi [ ebp + 0xc ]
cmp edi ebx
jne r-xdata
call sub_1002c068
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x16
call sub_100261c9
add esp 0x14
cmp [ ebp - 0x14 ] bl
je r-xdata
push esi
mov esi [ ebp + 0x10 ]
mov [ eax ] bl
cmp esi ebx
je r-xdata
call sub_1002c068
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x16
call sub_100261c9
add esp 0x14
cmp [ ebp - 0x14 ] bl
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x18 ]
and [ eax + 0x70 ] 0xfffffffd
call sub_1002c068
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x16
call sub_100261c9
add esp 0x14
mov eax [ ebp + 0x18 ]
cmp eax ebx
jne r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x18 ]
and [ eax + 0x70 ] 0xfffffffd
pop ebx
leave
retn
xor eax eax
mov eax [ ebp - 0x18 ]
and [ eax + 0x70 ] 0xfffffffd
mov [ ebp - 0xc ] eax
mov [ ebp - 0x4 ] edi
cmp edi ebx
jbe r-xdata
mov eax [ ebp - 0x20 ]
mov eax [ eax + 0xd4 ]
pop edi
mov eax [ ebp - 0x10 ]
mov [ eax ] bl
cmp [ ebp - 0x8 ] ebx
jne r-xdata
mov al [ esi ]
cmp al bl
je r-xdata
cmp [ ebp - 0x4 ] ebx
ja r-xdata
cmp [ ebp - 0x4 ] ebx
jbe r-xdata
cmp al 0x25
je r-xdata
call sub_1002c068
mov [ eax ] 0x22
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax ] bl
sub edi [ ebp - 0x4 ]
mov eax edi
cmp [ ebp - 0x14 ] bl
je r-xdata
mov edx [ ebp + 0x14 ]
cmp edx ebx
je r-xdata
lea ecx [ ebp - 0x20 ]
movsx eax al
push ecx
push eax
call sub_100365b5
pop ecx
pop ecx
test eax eax
je r-xdata
cmp [ ebp - 0x14 ] bl
je r-xdata
pop esi
mov ecx [ ebp - 0x18 ]
and [ ecx + 0x70 ] 0xfffffffd
jmp r-xdata
inc esi
xor eax eax
cmp [ esi ] 0x23
jne r-xdata
mov al [ esi ]
mov ecx [ ebp + 0x8 ]
mov [ ecx ] al
inc [ ebp + 0x8 ]
inc esi
dec [ ebp - 0x4 ]
jmp r-xdata
xor ecx ecx
inc ecx
cmp [ ebp - 0x4 ] ecx
jbe r-xdata
push eax
push [ ebp - 0xc ]
lea eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x20 ]
push eax
mov al [ esi ]
lea ecx [ ebp + 0x8 ]
call sub_1003495a
add esp 0x10
test eax eax
je r-xdata
inc eax
inc esi
cmp [ ebp - 0x4 ] ebx
ja r-xdata
lea eax [ esi + 0x1 ]
cmp [ eax ] bl
je r-xdata
cmp [ ebp - 0x4 ] ebx
jbe r-xdata
inc esi
mov [ ebp - 0x8 ] ecx
mov cl [ esi ]
mov edx [ ebp + 0x8 ]
mov [ edx ] cl
inc [ ebp + 0x8 ]
dec [ ebp - 0x4 ]
mov esi eax
mov [ ebp - 0x8 ] 0x1
jmp r-xdata
sub_10035347
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_100351a3
add esp 0x18
pop ebp
retn
sub_10035367
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push ebx
xor ebx ebx
push esi
push edi
cmp eax ebx
je r-xdata
call sub_1002c068
push 0x16
pop esi
mov [ eax ] esi
mov edi [ ebp + 0xc ]
cmp edi ebx
ja r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
mov esi [ ebp + 0x10 ]
cmp esi ebx
jne r-xdata
mov edx eax
mov [ eax ] bl
jmp r-xdata
cmp edi ebx
je r-xdata
inc edx
dec edi
jne r-xdata
mov cl [ esi ]
mov [ edx ] cl
inc edx
inc esi
cmp cl bl
je r-xdata
cmp [ edx ] bl
je r-xdata
cmp edi ebx
jne r-xdata
dec edi
jne r-xdata
xor eax eax
mov [ eax ] bl
call sub_1002c068
push 0x22
pop ecx
mov [ eax ] ecx
mov esi ecx
jmp r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_100261c9
add esp 0x14
mov eax esi
jmp r-xdata
sub_100353db
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
xor ebx ebx
push edi
cmp [ ebp + 0x14 ] ebx
jne r-xdata
cmp esi ebx
je r-xdata
cmp esi ebx
jne r-xdata
call sub_1002c068
push 0x16
pop esi
mov [ eax ] esi
mov edi [ ebp + 0xc ]
cmp edi ebx
ja r-xdata
cmp [ ebp + 0xc ] ebx
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
cmp [ ebp + 0x14 ] ebx
jne r-xdata
xor eax eax
mov edx [ ebp + 0x10 ]
cmp edx ebx
jne r-xdata
mov [ esi ] bl
jmp r-xdata
cmp [ ebp + 0x14 ] 0xffffffff
mov eax esi
jne r-xdata
mov [ esi ] bl
jmp r-xdata
mov cl [ edx ]
mov [ eax ] cl
inc eax
inc edx
cmp cl bl
je r-xdata
mov cl [ edx ]
mov [ eax ] cl
inc eax
inc edx
cmp cl bl
je r-xdata
cmp [ ebp + 0x14 ] ebx
jne r-xdata
dec edi
je r-xdata
cmp edi ebx
jne r-xdata
dec edi
jne r-xdata
mov [ eax ] bl
dec [ ebp + 0x14 ]
jne r-xdata
cmp [ ebp + 0x14 ] 0xffffffff
jne r-xdata
jmp r-xdata
mov [ esi ] bl
call sub_1002c068
push 0x22
pop ecx
mov [ eax ] ecx
mov esi ecx
jmp r-xdata
mov eax [ ebp + 0xc ]
push 0x50
mov [ esi + eax - 0x1 ] bl
pop eax
jmp r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_100261c9
add esp 0x14
mov eax esi
jmp r-xdata
sub_10035490
mov edi edi
push ebp
mov ebp esp
xor eax eax
push ebx
xor ebx ebx
inc eax
cmp [ ebp + 0xc ] ebx
jl r-xdata
xor ecx ecx
test eax eax
sete cl
pop ebx
mov eax ecx
pop ebp
retn
push esi
push edi
pop edi
pop esi
mov eax [ ebp + 0xc ]
add eax ebx
cdq
sub eax edx
mov esi eax
mov eax [ ebp + 0x8 ]
sar esi 0x1
lea edi [ eax + esi * 8 ]
push [ edi ]
mov eax [ ebp + 0x10 ]
push [ eax ]
call sub_10039521
pop ecx
pop ecx
test eax eax
jne r-xdata
jge r-xdata
mov ecx [ ebp + 0x10 ]
add edi 0x4
mov [ ecx ] edi
jmp r-xdata
lea ebx [ esi + 0x1 ]
dec esi
mov [ ebp + 0xc ] esi
jmp r-xdata
cmp ebx [ ebp + 0xc ]
jle r-xdata
test eax eax
je r-xdata
sub_100354f2
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
mov esi ecx
test esi esi
je r-xdata
push 0x8
lea eax [ ebp - 0xc ]
push eax
push 0x1004
push [ edi + 0x1c ]
call [ GetLocaleInfoA@IAT ]
test eax eax
jne r-xdata
cmp [ esi ] 0x0
je r-xdata
lea eax [ ebp - 0xc ]
push r--data
push eax
call sub_100292d0
pop ecx
pop ecx
test eax eax
jne r-xdata
xor eax eax
jmp r-xdata
push r--data
push esi
call sub_100292d0
pop ecx
pop ecx
test eax eax
je r-xdata
lea esi [ ebp - 0xc ]
call [ GetACP@IAT ]
jmp r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop esi
call sub_10025c8d
leave
retn
push r--data
push esi
call sub_100292d0
pop ecx
pop ecx
test eax eax
jne r-xdata
push esi
call sub_10039573
pop ecx
push 0x8
lea eax [ ebp - 0xc ]
push eax
push 0xb
push [ edi + 0x1c ]
call [ GetLocaleInfoA@IAT ]
test eax eax
je r-xdata
sub_10035596
mov edi edi
push ebp
mov ebp esp
xor eax eax
xor eax eax
pop ebp
retn
inc eax
inc eax
cmp eax 0x14
jb r-xdata
mov cx [ ebp + 0x8 ]
cmp cx [ eax + r--data ]
je r-xdata
xor eax eax
inc eax
pop ebp
retn
sub_100355ba
mov edi edi
push esi
xor esi esi
jmp r-xdata
mov cl [ edx ]
test cl cl
jne r-xdata
mov al cl
sub al 0x61
inc edx
cmp al 0x5
ja r-xdata
mov eax esi
pop esi
retn
mov al cl
sub al 0x41
cmp al 0x5
ja r-xdata
add cl 0xd9
jmp r-xdata
movsx eax cl
shl esi 0x4
lea esi [ esi + eax - 0x30 ]
add cl 0xf9
sub_100355ee
xor eax eax
sub cl 0x61
cmp cl 0x19
ja r-xdata
cmp cl 0x5a
jle r-xdata
retn
inc eax
jmp r-xdata
mov cl [ edx ]
inc edx
cmp cl 0x41
jl r-xdata
sub_10035609
mov edi edi
push ebp
mov ebp esp
sub esp 0x7c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
push edi
mov edi [ ebp + 0x8 ]
call sub_1002db24
mov esi eax
mov edx edi
add esi 0x9c
call sub_100355ba
mov edi eax
push 0x78
lea eax [ ebp - 0x7c ]
push eax
mov eax [ esi + 0x14 ]
neg eax
sbb eax eax
and eax 0xfffff005
add eax 0x1002
push eax
push edi
call [ GetLocaleInfoA@IAT ]
test eax eax
jne r-xdata
lea eax [ ebp - 0x7c ]
push eax
push [ esi + 0x4 ]
call sub_10039521
pop ecx
pop ecx
test eax eax
jne r-xdata
and [ esi + 0x8 ] eax
inc eax
jmp r-xdata
mov eax [ esi + 0x8 ]
shr eax 0x2
not eax
and eax 0x1
push edi
call sub_10035596
pop ecx
test eax eax
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop esi
call sub_10025c8d
leave
retn 0x4
or [ esi + 0x8 ] 0x4
mov [ esi + 0x1c ] edi
mov [ esi + 0x18 ] edi
sub_100356a1
mov edi edi
push ebp
mov ebp esp
sub esp 0x7c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
push 0x78
lea eax [ ebp - 0x7c ]
push eax
mov eax [ ebp + 0x8 ]
and eax 0x3ff
push 0x1
or eax 0x400
push eax
mov esi ecx
call [ GetLocaleInfoA@IAT ]
test eax eax
jne r-xdata
lea edx [ ebp - 0x7c ]
call sub_100355ba
cmp [ ebp + 0x8 ] eax
je r-xdata
xor eax eax
jmp r-xdata
xor eax eax
inc eax
cmp [ ebp + 0xc ] 0x0
je r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop esi
call sub_10025c8d
leave
retn
mov esi [ esi ]
push edi
mov edx esi
call sub_100355ee
push esi
mov edi eax
call sub_10025d30
pop ecx
cmp edi eax
pop edi
je r-xdata
sub_10035715
mov edi edi
push ebp
mov ebp esp
sub esp 0x7c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
call sub_1002db24
mov esi eax
mov edx edi
add esi 0x9c
call sub_100355ba
mov ebx [ GetLocaleInfoA@IAT ]
mov edi eax
push 0x78
lea eax [ ebp - 0x7c ]
push eax
mov eax [ esi + 0x14 ]
neg eax
sbb eax eax
and eax 0xfffff005
add eax 0x1002
push eax
push edi
call ebx
test eax eax
jne r-xdata
lea eax [ ebp - 0x7c ]
push eax
push [ esi + 0x4 ]
call sub_10039521
pop ecx
pop ecx
test eax eax
jne r-xdata
and [ esi + 0x8 ] 0x0
xor eax eax
inc eax
jmp r-xdata
mov ecx [ esi + 0x8 ]
mov eax 0x300
and ecx eax
cmp ecx eax
je r-xdata
push 0x78
lea eax [ ebp - 0x7c ]
push eax
mov eax [ esi + 0x10 ]
neg eax
sbb eax eax
and eax 0xfffff002
add eax 0x1001
push eax
push edi
call ebx
test eax eax
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_10025c8d
leave
retn 0x4
mov eax [ esi + 0x8 ]
shr eax 0x2
not eax
and eax 0x1
push 0x78
lea eax [ ebp - 0x7c ]
push eax
mov eax [ esi + 0x10 ]
neg eax
sbb eax eax
and eax 0xfffff002
add eax 0x1001
push eax
push edi
call ebx
test eax eax
je r-xdata
lea eax [ ebp - 0x7c ]
push eax
push [ esi ]
call sub_10039521
pop ecx
pop ecx
test eax eax
jne r-xdata
lea eax [ ebp - 0x7c ]
push eax
push [ esi ]
call sub_10039521
pop ecx
xor ebx ebx
pop ecx
test eax eax
jne r-xdata
test [ esi + 0x8 ] 0x2
jne r-xdata
or [ esi + 0x8 ] 0x304
mov [ esi + 0x18 ] edi
jmp r-xdata
cmp [ esi + 0x10 ] ebx
jne r-xdata
or [ esi + 0x8 ] 0x200
mov eax [ esi + 0x8 ]
cmp [ esi + 0x10 ] ebx
je r-xdata
mov eax [ esi + 0xc ]
test eax eax
je r-xdata
mov [ esi + 0x1c ] edi
cmp [ esi + 0xc ] ebx
je r-xdata
cmp [ esi + 0xc ] ebx
je r-xdata
or eax 0x100
mov [ esi + 0x8 ] eax
jmp r-xdata
mov edx [ esi + 0x8 ]
test dl 0x1
jne r-xdata
push eax
lea eax [ ebp - 0x7c ]
push eax
push [ esi ]
call sub_1003967b
add esp 0xc
test eax eax
jne r-xdata
lea eax [ ebp - 0x7c ]
push eax
push [ esi ]
call sub_10039521
pop ecx
pop ecx
test eax eax
jne r-xdata
or [ esi + 0x8 ] 0x100
push [ esi ]
call sub_10025d30
pop ecx
cmp eax [ esi + 0xc ]
jne r-xdata
cmp [ esi + 0x18 ] ebx
jne r-xdata
push edi
call sub_10035596
pop ecx
test eax eax
je r-xdata
push [ esi ]
or [ esi + 0x8 ] 0x2
mov [ esi + 0x1c ] edi
call sub_10025d30
pop ecx
cmp eax [ esi + 0xc ]
jne r-xdata
push ebx
mov [ esi + 0x18 ] edi
push 0x1
jmp r-xdata
or edx 0x1
mov [ esi + 0x8 ] edx
mov [ esi + 0x18 ] edi
jmp r-xdata
push edi
mov ecx esi
call sub_100356a1
pop ecx
pop ecx
test eax eax
je r-xdata
sub_100358e7
mov edi edi
push ebp
mov ebp esp
sub esp 0x7c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
push edi
mov edi [ ebp + 0x8 ]
call sub_1002db24
mov esi eax
mov edx edi
add esi 0x9c
call sub_100355ba
mov edi eax
push 0x78
lea eax [ ebp - 0x7c ]
push eax
mov eax [ esi + 0x10 ]
neg eax
sbb eax eax
and eax 0xfffff002
add eax 0x1001
push eax
push edi
call [ GetLocaleInfoA@IAT ]
test eax eax
jne r-xdata
lea eax [ ebp - 0x7c ]
push eax
push [ esi ]
call sub_10039521
pop ecx
pop ecx
test eax eax
jne r-xdata
and [ esi + 0x8 ] eax
inc eax
jmp r-xdata
cmp [ esi + 0x10 ] 0x0
jne r-xdata
cmp [ esi + 0x10 ] eax
jne r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop esi
call sub_10025c8d
leave
retn 0x4
mov eax [ esi + 0x8 ]
shr eax 0x2
not eax
and eax 0x1
cmp [ esi + 0xc ] 0x0
je r-xdata
or [ esi + 0x8 ] 0x4
mov [ esi + 0x18 ] edi
mov [ esi + 0x1c ] edi
push 0x1
jmp r-xdata
lea eax [ ebp - 0x7c ]
push eax
push [ esi ]
call sub_10039521
pop ecx
pop ecx
test eax eax
jne r-xdata
push edi
mov ecx esi
call sub_100356a1
pop ecx
pop ecx
test eax eax
je r-xdata
push eax
sub_100359a8
push [ esi ]
call sub_10025d30
push [ esi + 0x4 ]
sub eax 0x3
neg eax
sbb eax eax
inc eax
mov [ esi + 0x10 ] eax
call sub_10025d30
sub eax 0x3
neg eax
sbb eax eax
and [ esi + 0x18 ] 0x0
inc eax
cmp [ esi + 0x10 ] 0x0
pop ecx
pop ecx
mov [ esi + 0x14 ] eax
je r-xdata
mov edx [ esi ]
call sub_100355ee
push 0x2
pop eax
jmp r-xdata
and [ esi + 0x8 ] 0x0
test eax 0x200
je r-xdata
push 0x1
push sub_10035715
mov [ esi + 0xc ] eax
call [ EnumSystemLocalesA@IAT ]
mov eax [ esi + 0x8 ]
test eax 0x100
je r-xdata
test al 0x7
jne r-xdata
retn
sub_10035a0f
push [ esi ]
call sub_10025d30
sub eax 0x3
neg eax
sbb eax eax
inc eax
pop ecx
mov [ esi + 0x10 ] eax
je r-xdata
mov edx [ esi ]
call sub_100355ee
push 0x2
pop eax
jmp r-xdata
retn
and [ esi + 0x8 ] 0x0
push 0x1
push sub_100358e7
mov [ esi + 0xc ] eax
call [ EnumSystemLocalesA@IAT ]
test [ esi + 0x8 ] 0x4
jne r-xdata
sub_10035a4b
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
push edi
call sub_1002db24
mov ebx [ ebp + 0x8 ]
mov esi eax
add esi 0x9c
test ebx ebx
jne r-xdata
lea eax [ ebx + 0x40 ]
lea edi [ esi + 0x4 ]
mov [ esi ] ebx
mov [ edi ] eax
test eax eax
je r-xdata
or [ esi + 0x8 ] 0x104
jmp r-xdata
mov eax [ esi ]
and [ esi + 0x8 ] 0x0
test eax eax
je r-xdata
cmp [ eax ] 0x0
je r-xdata
call [ GetUserDefaultLCID@IAT ]
mov [ esi + 0x18 ] eax
mov [ esi + 0x1c ] eax
mov edi [ edi ]
test edi edi
je r-xdata
cmp [ eax ] 0x0
je r-xdata
push edi
push 0x16
push r--data
call sub_10035490
add esp 0xc
xor eax eax
mov ecx ebx
sub ebx 0xffffff80
neg ecx
sbb ecx ecx
and ecx ebx
mov edi esi
call sub_100354f2
mov edi eax
mov [ ebp + 0x8 ] edi
test edi edi
je r-xdata
mov [ esi + 0x8 ] 0x104
cmp [ edi ] 0x0
je r-xdata
mov eax [ edi ]
test eax eax
je r-xdata
cmp edi 0xfde8
je r-xdata
push edi
call sub_10025d30
sub eax 0x3
neg eax
pop ecx
sbb eax eax
push 0x1
inc eax
push sub_10035609
mov [ esi + 0x14 ] eax
call [ EnumSystemLocalesA@IAT ]
test [ esi + 0x8 ] 0x4
jne r-xdata
call sub_10035a0f
cmp [ eax ] 0x0
je r-xdata
cmp edi 0xfde9
je r-xdata
cmp [ esi + 0x8 ] 0x0
je r-xdata
and [ esi + 0x8 ] 0x0
jmp r-xdata
push esi
push 0x40
push r--data
call sub_10035490
add esp 0xc
test eax eax
je r-xdata
call sub_100359a8
jmp r-xdata
movzx eax di
push eax
call [ IsValidCodePage@IAT ]
test eax eax
je r-xdata
mov edi [ edi ]
test edi edi
je r-xdata
cmp [ esi + 0x8 ] 0x0
jne r-xdata
push 0x1
push [ esi + 0x18 ]
call [ IsValidLocale@IAT ]
test eax eax
je r-xdata
call sub_10035a0f
jmp r-xdata
cmp [ edi ] 0x0
je r-xdata
mov eax [ ebp + 0xc ]
test eax eax
je r-xdata
call sub_100359a8
jmp r-xdata
mov ebx [ ebp + 0x10 ]
test ebx ebx
je r-xdata
mov cx [ esi + 0x18 ]
mov [ eax ] cx
mov cx [ esi + 0x1c ]
mov [ eax + 0x2 ] cx
mov [ eax + 0x4 ] di
xor eax eax
inc eax
jmp r-xdata
mov edi [ GetLocaleInfoA@IAT ]
mov ecx 0x814
cmp [ eax ] cx
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
push 0x40
push ebx
push 0x1001
push [ esi + 0x18 ]
call edi
test eax eax
je r-xdata
push r--data
push 0x40
push ebx
call sub_1002d40c
add esp 0xc
test eax eax
je r-xdata
push 0x40
lea eax [ ebx + 0x40 ]
push eax
push 0x1002
push [ esi + 0x1c ]
call edi
test eax eax
je r-xdata
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_100260a1
add esp 0x14
jmp r-xdata
push 0xa
push 0x10
sub ebx 0xffffff80
push ebx
push [ ebp + 0x8 ]
call sub_1002cb4b
add esp 0x10
sub_10035c3c
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
push ebx
push esi
xor ebx ebx
push edi
mov edi ecx
cmp eax ebx
jne r-xdata
cmp eax 0x2
je r-xdata
lea eax [ ebp - 0x8 ]
push eax
xor esi esi
inc esi
push esi
push r--data
push esi
call [ GetStringTypeW@IAT ]
test eax eax
je r-xdata
xor esi esi
cmp [ ebp + 0x1c ] ebx
jne r-xdata
cmp eax ebx
je r-xdata
call [ GetLastError@IAT ]
cmp eax 0x78
jne r-xdata
mov [ rw-data ] esi
jmp r-xdata
cmp [ ebp + 0x18 ] ebx
jne r-xdata
mov eax [ edi ]
mov eax [ eax + 0x14 ]
mov [ ebp + 0x1c ] eax
cmp eax 0x1
jne r-xdata
mov eax [ rw-data ]
push 0x2
pop eax
mov [ rw-data ] eax
jmp r-xdata
mov [ ebp - 0x8 ] ebx
cmp [ ebp + 0x18 ] ebx
jne r-xdata
push [ ebp + 0x1c ]
call sub_10035f40
pop ecx
cmp eax 0xffffffff
jne r-xdata
mov eax [ edi ]
mov eax [ eax + 0x4 ]
mov [ ebp + 0x18 ] eax
xor eax eax
jmp r-xdata
mov esi [ MultiByteToWideChar@IAT ]
xor eax eax
cmp [ ebp + 0x20 ] ebx
push ebx
push ebx
push [ ebp + 0x10 ]
setne al
push [ ebp + 0xc ]
lea eax [ eax * 8 + 0x1 ]
push eax
push [ ebp + 0x18 ]
call esi
mov edi eax
cmp edi ebx
je r-xdata
mov eax [ edi ]
mov eax [ eax + 0x4 ]
mov [ ebp + 0x18 ] eax
cmp eax [ ebp + 0x18 ]
je r-xdata
lea esp [ ebp - 0x14 ]
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10025c8d
leave
retn
jle r-xdata
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push [ ebp + 0x1c ]
call [ GetStringTypeA@IAT ]
mov edi eax
cmp esi ebx
je r-xdata
push ebx
push ebx
lea ecx [ ebp + 0x10 ]
push ecx
push [ ebp + 0xc ]
push eax
push [ ebp + 0x18 ]
call sub_10035f89
mov esi eax
add esp 0x18
cmp esi ebx
je r-xdata
test ebx ebx
je r-xdata
cmp edi 0x7ffffff0
ja r-xdata
mov eax edi
push esi
call sub_1002644d
pop ecx
mov [ ebp + 0xc ] esi
lea eax [ edi + edi ]
push eax
push 0x0
push ebx
call sub_10026630
add esp 0xc
push edi
push ebx
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push 0x1
push [ ebp + 0x18 ]
call esi
test eax eax
je r-xdata
lea eax [ edi + edi + 0x8 ]
cmp eax 0x400
ja r-xdata
push ebx
call sub_1002c50a
mov eax [ ebp - 0x8 ]
pop ecx
jmp r-xdata
push [ ebp + 0x14 ]
push eax
push ebx
push [ ebp + 0x8 ]
call [ GetStringTypeW@IAT ]
mov [ ebp - 0x8 ] eax
push eax
call sub_10028f2d
pop ecx
cmp eax ebx
je r-xdata
call sub_10036140
mov eax esp
cmp eax ebx
je r-xdata
mov ebx eax
mov [ eax ] 0xdddd
mov [ eax ] 0xcccc
jmp r-xdata
add eax 0x8
sub_10035df6
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x10 ]
call sub_10029358
push [ ebp + 0x24 ]
lea ecx [ ebp - 0x10 ]
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call sub_10035c3c
add esp 0x1c
cmp [ ebp - 0x4 ] 0x0
je r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
sub_10035e38
mov edi edi
push ebp
mov ebp esp
push ecx
and [ ebp - 0x4 ] 0x0
push ebx
mov ebx [ ebp + 0x10 ]
test ebx ebx
jne r-xdata
push edi
cmp ebx 0x4
jb r-xdata
xor eax eax
jmp r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
jmp r-xdata
lea edi [ ebx - 0x4 ]
test edi edi
jbe r-xdata
pop ebx
leave
retn
cmp [ ebp - 0x4 ] ebx
jb r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
mov dl [ eax ]
test dl dl
je r-xdata
xor eax eax
movzx eax [ eax - 0x4 ]
movzx ecx [ ecx - 0x4 ]
jmp r-xdata
cmp dl [ ecx - 0x4 ]
jne r-xdata
movzx eax [ eax ]
movzx ecx [ ecx ]
cmp dl [ ecx ]
jne r-xdata
sub eax ecx
jmp r-xdata
mov dl [ eax - 0x3 ]
test dl dl
je r-xdata
pop edi
inc eax
inc ecx
inc [ ebp - 0x4 ]
movzx eax [ eax - 0x3 ]
movzx ecx [ ecx - 0x3 ]
jmp r-xdata
cmp dl [ ecx - 0x3 ]
jne r-xdata
mov dl [ eax - 0x2 ]
test dl dl
je r-xdata
movzx eax [ eax - 0x2 ]
movzx ecx [ ecx - 0x2 ]
jmp r-xdata
cmp dl [ ecx - 0x2 ]
jne r-xdata
mov dl [ eax - 0x1 ]
test dl dl
je r-xdata
movzx eax [ eax - 0x1 ]
movzx ecx [ ecx - 0x1 ]
jmp r-xdata
cmp dl [ ecx - 0x1 ]
jne r-xdata
add [ ebp - 0x4 ] 0x4
cmp [ ebp - 0x4 ] edi
jb r-xdata
mov dl [ eax ]
add eax 0x4
add ecx 0x4
test dl dl
je r-xdata
jmp r-xdata
sub_10035f00
push ebp
mov ebp esp
push esi
xor eax eax
push eax
push eax
push eax
push eax
push eax
push eax
push eax
push eax
mov edx [ ebp + 0xc ]
lea ecx [ ecx ]
mov esi [ ebp + 0x8 ]
mov edi edi
add edx 0x1
bts [ esp ] eax
jmp r-xdata
add esp 0x20
pop esi
leave
retn
add esi 0x1
bt [ esp ] eax
jae r-xdata
mov al [ edx ]
or al al
je r-xdata
mov al [ esi ]
or al al
je r-xdata
lea eax [ esi - 0x1 ]
sub_10035f40
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push 0x6
lea eax [ ebp - 0xc ]
push eax
push 0x1004
push [ ebp + 0x8 ]
mov [ ebp - 0x6 ] 0x0
call [ GetLocaleInfoA@IAT ]
test eax eax
jne r-xdata
lea eax [ ebp - 0xc ]
push eax
call sub_10039573
pop ecx
or eax 0xffffffff
jmp r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10025c8d
leave
retn
sub_10035f89
mov edi edi
push ebp
mov ebp esp
sub esp 0x34
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x10 ]
mov ecx [ ebp + 0x18 ]
mov [ ebp - 0x28 ] eax
mov eax [ ebp + 0x14 ]
push ebx
mov [ ebp - 0x30 ] eax
mov eax [ eax ]
push esi
mov [ ebp - 0x24 ] eax
mov eax [ ebp + 0x8 ]
push edi
xor edi edi
mov [ ebp - 0x34 ] ecx
mov [ ebp - 0x20 ] edi
mov [ ebp - 0x2c ] edi
cmp eax [ ebp + 0xc ]
je r-xdata
mov eax [ ebp - 0x20 ]
mov esi [ GetCPInfo@IAT ]
lea ecx [ ebp - 0x18 ]
push ecx
push eax
call esi
mov ebx [ MultiByteToWideChar@IAT ]
test eax eax
je r-xdata
push edi
push edi
push [ ebp - 0x24 ]
push [ ebp - 0x28 ]
push 0x1
push [ ebp + 0x8 ]
call ebx
mov esi eax
cmp esi edi
jne r-xdata
cmp [ ebp - 0x18 ] 0x1
jne r-xdata
jle r-xdata
xor eax eax
jmp r-xdata
lea eax [ ebp - 0x18 ]
push eax
push [ ebp + 0xc ]
call esi
test eax eax
je r-xdata
mov [ ebp - 0x1c ] edi
cmp esi 0x7ffffff0
ja r-xdata
lea esp [ ebp - 0x40 ]
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10025c8d
leave
retn
cmp [ ebp - 0x18 ] 0x1
jne r-xdata
lea eax [ esi + esi ]
push eax
push edi
push [ ebp - 0x1c ]
call sub_10026630
add esp 0xc
push esi
push [ ebp - 0x1c ]
push [ ebp - 0x24 ]
push [ ebp - 0x28 ]
push 0x1
push [ ebp + 0x8 ]
call ebx
test eax eax
je r-xdata
lea eax [ esi + esi + 0x8 ]
cmp eax 0x400
ja r-xdata
mov esi [ ebp - 0x24 ]
mov [ ebp - 0x2c ] 0x1
cmp esi 0xffffffff
jne r-xdata
push [ ebp - 0x1c ]
call sub_1002c50a
pop ecx
mov ebx [ ebp - 0x34 ]
cmp ebx edi
je r-xdata
push eax
call sub_10028f2d
pop ecx
cmp eax edi
je r-xdata
call sub_10036140
mov eax esp
cmp eax edi
je r-xdata
cmp esi edi
push [ ebp - 0x28 ]
call sub_10025d30
mov esi eax
pop ecx
inc esi
mov ebx [ WideCharToMultiByte@IAT ]
cmp [ ebp - 0x2c ] edi
jne r-xdata
push edi
push edi
push [ ebp + 0x1c ]
push ebx
push esi
push [ ebp - 0x1c ]
push edi
push [ ebp + 0xc ]
call [ WideCharToMultiByte@IAT ]
test eax eax
je r-xdata
mov [ ebp - 0x1c ] eax
jmp r-xdata
mov [ eax ] 0xdddd
mov [ eax ] 0xcccc
jmp r-xdata
push esi
push 0x1
call sub_1002c982
pop ecx
pop ecx
mov [ ebp - 0x20 ] eax
cmp eax edi
je r-xdata
push edi
push edi
push edi
push edi
push esi
push [ ebp - 0x1c ]
push edi
push [ ebp + 0xc ]
call ebx
mov esi eax
cmp esi edi
je r-xdata
mov [ ebp - 0x20 ] ebx
jmp r-xdata
cmp [ ebp - 0x1c ] edi
je r-xdata
add eax 0x8
push edi
push edi
push esi
push eax
push esi
push [ ebp - 0x1c ]
push edi
push [ ebp + 0xc ]
call ebx
cmp eax edi
jne r-xdata
cmp [ ebp - 0x24 ] 0xffffffff
je r-xdata
push [ ebp - 0x20 ]
call sub_1002644d
pop ecx
mov [ ebp - 0x20 ] edi
jmp r-xdata
mov ecx [ ebp - 0x30 ]
mov [ ecx ] eax
sub_1003616c
push 0xc
push r--data
call sub_1002e7e4
mov ecx [ ebp + 0x8 ]
xor edi edi
cmp ecx edi
jbe r-xdata
imul ecx [ ebp + 0xc ]
mov esi ecx
mov [ ebp + 0x8 ] esi
cmp esi edi
jne r-xdata
push 0xffffffe0
pop eax
xor edx edx
div ecx
cmp eax [ ebp + 0xc ]
sbb eax eax
inc eax
jne r-xdata
xor ebx ebx
mov [ ebp - 0x1c ] ebx
cmp esi 0xffffffe0
ja r-xdata
xor esi esi
inc esi
call sub_1002c068
mov [ eax ] 0xc
push edi
push edi
push edi
push edi
push edi
call sub_100261c9
add esp 0x14
cmp ebx edi
jne r-xdata
cmp [ rw-data ] 0x3
jne r-xdata
call sub_1002e829
retn
mov eax ebx
cmp [ rw-data ] edi
je r-xdata
cmp ebx edi
jne r-xdata
add esi 0xf
and esi 0xfffffff0
mov [ ebp + 0xc ] esi
mov eax [ ebp + 0x8 ]
cmp eax [ rw-data ]
ja r-xdata
cmp ebx edi
jne r-xdata
push esi
call sub_1002d3e4
pop ecx
test eax eax
jne r-xdata
push esi
push 0x8
push [ rw-data ]
call [ HeapAlloc@IAT ]
mov ebx eax
push 0x4
call sub_1002ebde
pop ecx
mov [ ebp - 0x4 ] edi
push [ ebp + 0x8 ]
call sub_1002f3f0
pop ecx
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_10036268
mov ebx [ ebp - 0x1c ]
cmp ebx edi
je r-xdata
mov eax [ ebp + 0x10 ]
cmp eax edi
je r-xdata
mov eax [ ebp + 0x10 ]
cmp eax edi
je r-xdata
push [ ebp + 0x8 ]
push edi
push ebx
call sub_10026630
add esp 0xc
mov [ eax ] 0xc
xor eax eax
jmp r-xdata
mov [ eax ] 0xc
jmp r-xdata
sub_1003628a
push 0x10
push r--data
call sub_1002e7e4
mov ebx [ ebp + 0x8 ]
test ebx ebx
jne r-xdata
mov esi [ ebp + 0xc ]
test esi esi
jne r-xdata
push [ ebp + 0xc ]
call sub_10028f2d
pop ecx
jmp r-xdata
cmp [ rw-data ] 0x3
jne r-xdata
push ebx
call sub_1002644d
pop ecx
jmp r-xdata
call sub_1002e829
retn
cmp esi 0xffffffe0
jbe r-xdata
xor edi edi
mov [ ebp - 0x1c ] edi
cmp esi 0xffffffe0
ja r-xdata
xor eax eax
test esi esi
jne r-xdata
push esi
call sub_1002d3e4
pop ecx
call sub_1002c068
push 0x4
call sub_1002ebde
pop ecx
mov [ ebp - 0x4 ] edi
push ebx
call sub_1002ec11
pop ecx
mov [ ebp - 0x20 ] eax
cmp eax edi
je r-xdata
push esi
push ebx
push 0x0
push [ rw-data ]
call [ HeapReAlloc@IAT ]
mov edi eax
test edi edi
jne r-xdata
inc esi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_100363ce
cmp [ ebp - 0x20 ] 0x0
jne r-xdata
cmp esi [ rw-data ]
ja r-xdata
mov eax edi
jmp r-xdata
cmp [ rw-data ] eax
je r-xdata
mov edi [ ebp - 0x1c ]
test esi esi
jne r-xdata
cmp [ ebp - 0x1c ] edi
jne r-xdata
push esi
push ebx
push eax
call sub_1002f10f
add esp 0xc
test eax eax
je r-xdata
test edi edi
jne r-xdata
push esi
call sub_1002d3e4
pop ecx
test eax eax
je r-xdata
cmp [ rw-data ] edi
je r-xdata
add esi 0xf
and esi 0xfffffff0
mov [ ebp + 0xc ] esi
push esi
push ebx
push 0x0
push [ rw-data ]
call [ HeapReAlloc@IAT ]
mov edi eax
jmp r-xdata
inc esi
cmp esi edi
jne r-xdata
push esi
call sub_1002f3f0
pop ecx
mov [ ebp - 0x1c ] eax
cmp eax edi
je r-xdata
mov [ ebp - 0x1c ] ebx
jmp r-xdata
call sub_1002c068
call sub_1002c068
jmp r-xdata
test edi edi
jne r-xdata
push esi
call sub_1002d3e4
pop ecx
test eax eax
jne r-xdata
test edi edi
jne r-xdata
add esi 0xf
and esi 0xfffffff0
mov [ ebp + 0xc ] esi
push esi
push edi
push [ rw-data ]
call [ HeapAlloc@IAT ]
mov [ ebp - 0x1c ] eax
cmp eax edi
je r-xdata
xor esi esi
inc esi
mov [ ebp + 0xc ] esi
mov eax [ ebx - 0x4 ]
dec eax
cmp eax esi
jb r-xdata
mov esi eax
call [ GetLastError@IAT ]
push eax
call sub_1002c026
pop ecx
mov [ esi ] eax
jmp r-xdata
call sub_1002c068
cmp [ ebp - 0x20 ] edi
je r-xdata
call sub_1002c068
cmp [ ebp - 0x20 ] edi
jne r-xdata
mov eax [ ebx - 0x4 ]
dec eax
cmp eax esi
jb r-xdata
push eax
push ebx
push [ ebp - 0x1c ]
call sub_10028b40
push ebx
call sub_1002ec11
mov [ ebp - 0x20 ] eax
push ebx
push eax
call sub_1002ec41
add esp 0x18
mov eax esi
mov esi eax
call [ GetLastError@IAT ]
push eax
call sub_1002c026
mov [ esi ] eax
pop ecx
mov [ eax ] 0xc
jmp r-xdata
mov [ eax ] 0xc
push eax
push ebx
push [ ebp - 0x1c ]
call sub_10028b40
push ebx
push [ ebp - 0x20 ]
call sub_1002ec41
add esp 0x14
mov eax esi
sub_100364a5
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0xc ]
push ebx
xor ebx ebx
cmp ecx ebx
jbe r-xdata
imul ecx [ ebp + 0x10 ]
push esi
push edi
mov esi ecx
cmp [ ebp + 0x8 ] ebx
je r-xdata
push 0xffffffe0
xor edx edx
pop eax
div ecx
cmp eax [ ebp + 0x10 ]
jae r-xdata
push esi
push [ ebp + 0x8 ]
call sub_1003628a
mov edi eax
pop ecx
pop ecx
test edi edi
je r-xdata
push [ ebp + 0x8 ]
call sub_1003371e
pop ecx
mov ebx eax
call sub_1002c068
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0xc
call sub_100261c9
add esp 0x14
xor eax eax
jmp r-xdata
mov eax edi
pop edi
pop esi
cmp ebx esi
jae r-xdata
pop ebx
pop ebp
retn
sub esi ebx
push esi
push 0x0
add ebx edi
push ebx
call sub_10026630
add esp 0xc
sub_10036520
push esi
mov eax [ esp + 0x14 ]
or eax eax
jne r-xdata
mov ecx eax
mov ebx [ esp + 0x10 ]
mov edx [ esp + 0xc ]
mov eax [ esp + 0x8 ]
mov ecx [ esp + 0x10 ]
mov eax [ esp + 0xc ]
xor edx edx
div ecx
mov ebx eax
mov eax [ esp + 0x8 ]
div ecx
mov esi eax
mov eax ebx
mul [ esp + 0x10 ]
mov ecx eax
mov eax esi
mul [ esp + 0x10 ]
add edx ecx
jmp r-xdata
shr ecx 0x1
rcr ebx 0x1
shr edx 0x1
rcr eax 0x1
or ecx ecx
jne r-xdata
div ebx
mov esi eax
mul [ esp + 0x14 ]
mov ecx eax
mov eax [ esp + 0x10 ]
mul esi
add edx ecx
jb r-xdata
sub eax [ esp + 0x8 ]
sbb edx [ esp + 0xc ]
neg edx
neg eax
sbb edx 0x0
mov ecx edx
mov edx ebx
mov ebx ecx
mov ecx eax
mov eax esi
pop esi
retn 0x10
dec esi
sub eax [ esp + 0x10 ]
sbb edx [ esp + 0x14 ]
cmp edx [ esp + 0xc ]
ja r-xdata
jb r-xdata
xor ebx ebx
cmp eax [ esp + 0x8 ]
jbe r-xdata
sub_100365b5
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_10029358
movzx eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x10 ]
mov ecx [ ecx + 0xc8 ]
movzx eax [ ecx + eax * 2 ]
and eax 0x8000
cmp [ ebp - 0x4 ] 0x0
je r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
sub_10036600
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push esi
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_10029358
mov esi [ ebp + 0x8 ]
movsx eax [ esi ]
push eax
call sub_1002cdf8
cmp eax 0x65
jmp r-xdata
pop ecx
jne r-xdata
inc esi
movzx eax [ esi ]
push eax
call sub_1002952e
test eax eax
movsx eax [ esi ]
push eax
call sub_1002cdf8
pop ecx
cmp eax 0x78
jne r-xdata
mov ecx [ ebp - 0x10 ]
mov ecx [ ecx + 0xbc ]
mov ecx [ ecx ]
mov al [ esi ]
mov cl [ ecx ]
mov [ esi ] cl
inc esi
inc esi
inc esi
mov cl [ esi ]
mov [ esi ] al
mov al cl
mov cl [ esi ]
inc esi
test cl cl
jne r-xdata
pop esi
cmp [ ebp - 0x4 ] cl
je r-xdata
leave
retn
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
sub_10036673
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push esi
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_10029358
mov eax [ ebp + 0x8 ]
mov cl [ eax ]
mov esi [ ebp - 0x10 ]
test cl cl
je r-xdata
mov cl [ eax ]
inc eax
test cl cl
je r-xdata
mov edx [ esi + 0xbc ]
mov edx [ edx ]
mov dl [ edx ]
cmp [ ebp - 0x4 ] 0x0
pop esi
je r-xdata
jmp r-xdata
inc eax
mov cl [ eax ]
test cl cl
jne r-xdata
leave
retn
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
mov cl [ eax ]
test cl cl
jne r-xdata
cmp cl dl
je r-xdata
cmp cl 0x65
je r-xdata
mov edx eax
cmp cl 0x45
je r-xdata
dec eax
cmp [ eax ] 0x30
je r-xdata
mov ecx [ esi + 0xbc ]
mov ecx [ ecx ]
push ebx
mov bl [ eax ]
cmp bl [ ecx ]
pop ebx
jne r-xdata
inc eax
mov cl [ edx ]
inc eax
inc edx
mov [ eax ] cl
test cl cl
jne r-xdata
dec eax
sub_100366f5
mov edi edi
push ebp
mov ebp esp
fldz
mov eax [ ebp + 0x8 ]
fcomp [ eax ]
fnstsw ax
test ah 0x41
jpe r-xdata
xor eax eax
pop ebp
retn
xor eax eax
inc eax
pop ebp
retn
sub_10036711
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
cmp [ ebp + 0x8 ] 0x0
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
je r-xdata
lea eax [ ebp + 0x8 ]
push eax
call sub_10039845
mov eax [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
mov [ eax ] ecx
lea eax [ ebp - 0x8 ]
push eax
call sub_1003979d
mov ecx [ ebp - 0x8 ]
mov eax [ ebp + 0xc ]
mov [ eax ] ecx
mov ecx [ ebp - 0x4 ]
mov [ eax + 0x4 ] ecx
jmp r-xdata
add esp 0xc
leave
retn
sub_1003676d
mov edi edi
push esi
mov esi eax
test edi edi
je r-xdata
pop esi
retn
push esi
call sub_10025d30
inc eax
push eax
push esi
add esi edi
push esi
call sub_1002d4f0
add esp 0x10
sub_100367b2
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
push edi
push [ ebp + 0x1c ]
lea ecx [ ebp - 0x10 ]
mov ebx eax
call sub_10029358
xor esi esi
cmp ebx esi
jne r-xdata
cmp [ ebp + 0x8 ] esi
jbe r-xdata
call sub_1002c068
push 0x16
cmp [ ebp + 0xc ] esi
jle r-xdata
mov eax edi
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
xor eax eax
mov eax [ ebp + 0xc ]
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn
cmp [ ebp + 0x18 ] 0x0
je r-xdata
call sub_1002c068
push 0x22
jmp r-xdata
add eax 0x9
cmp [ ebp + 0x8 ] eax
ja r-xdata
mov edi [ ebp + 0x14 ]
cmp [ edi ] 0x2d
mov esi ebx
jne r-xdata
mov edx [ ebp + 0x14 ]
xor eax eax
cmp [ ebp + 0xc ] esi
setg al
xor ecx ecx
cmp [ edx ] 0x2d
sete cl
mov edi eax
add ecx ebx
mov eax ecx
call sub_1003676d
pop edi
push esi
push esi
push esi
push esi
push esi
mov [ eax ] edi
call sub_100261c9
add esp 0x14
cmp [ ebp - 0x4 ] 0x0
je r-xdata
cmp [ ebp + 0xc ] 0x0
jle r-xdata
mov [ ebx ] 0x2d
lea esi [ ebx + 0x1 ]
xor eax eax
cmp [ ebp + 0x18 ] al
sete al
add eax [ ebp + 0xc ]
add esi eax
cmp [ ebp + 0x8 ] 0xffffffff
jne r-xdata
lea eax [ esi + 0x1 ]
mov cl [ eax ]
mov [ esi ] cl
mov esi eax
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0xbc ]
mov eax [ eax ]
mov al [ eax ]
mov [ esi ] al
sub ebx esi
add ebx [ ebp + 0x8 ]
or ebx 0xffffffff
jmp r-xdata
lea ecx [ esi + 0x2 ]
cmp [ ebp + 0x10 ] ebx
je r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_100260a1
add esp 0x14
push r--data
push ebx
push esi
call sub_1002d40c
add esp 0xc
xor ebx ebx
test eax eax
je r-xdata
mov eax [ edi + 0xc ]
inc esi
cmp [ eax ] 0x30
je r-xdata
mov [ esi ] 0x45
test [ rw-data ] 0x1
je r-xdata
mov eax [ edi + 0x4 ]
dec eax
jns r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
cmp [ ecx ] 0x30
jne r-xdata
inc esi
cmp eax 0x64
jl r-xdata
neg eax
mov [ esi ] 0x2d
xor eax eax
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
push 0x3
lea eax [ ecx + 0x1 ]
push eax
push ecx
call sub_1002d4f0
add esp 0xc
inc esi
cmp eax 0xa
jl r-xdata
cdq
push 0x64
pop edi
idiv edi
add [ esi ] al
mov eax edx
add [ esi + 0x1 ] al
cdq
push 0xa
pop edi
idiv edi
add [ esi ] al
mov eax edx
sub_10036921
mov edi edi
push ebp
mov ebp esp
sub esp 0x2c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebx
push esi
push edi
mov edi [ ebp + 0xc ]
push 0x16
pop esi
push esi
lea ecx [ ebp - 0x1c ]
push ecx
lea ecx [ ebp - 0x2c ]
push ecx
push [ eax + 0x4 ]
push [ eax ]
call sub_10039a69
xor ebx ebx
add esp 0x14
cmp edi ebx
jne r-xdata
mov eax [ ebp + 0x10 ]
cmp eax ebx
jbe r-xdata
call sub_1002c068
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] esi
call sub_100261c9
add esp 0x14
mov eax esi
jmp r-xdata
mov esi [ ebp + 0x14 ]
cmp eax 0xffffffff
jne r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_10025c8d
leave
retn
xor ecx ecx
cmp [ ebp - 0x2c ] 0x2d
sete cl
sub eax ecx
xor ecx ecx
cmp esi ebx
setg cl
sub eax ecx
or eax 0xffffffff
jmp r-xdata
push [ ebp + 0x1c ]
lea eax [ ebp - 0x2c ]
push ebx
push eax
push [ ebp + 0x18 ]
mov eax edi
push esi
push [ ebp + 0x10 ]
call sub_100367b2
add esp 0x18
mov [ edi ] bl
jmp r-xdata
lea ecx [ ebp - 0x2c ]
push ecx
lea ecx [ esi + 0x1 ]
push ecx
push eax
xor eax eax
cmp [ ebp - 0x2c ] 0x2d
sete al
xor ecx ecx
cmp esi ebx
setg cl
add eax edi
add ecx eax
push ecx
call sub_100398ed
add esp 0x10
cmp eax ebx
je r-xdata
sub_100369f1
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_10036921
add esp 0x18
pop ebp
retn
sub_10036a11
mov edi edi
push ebp
mov ebp esp
sub esp 0x24
push esi
push edi
push [ ebp + 0x1c ]
lea ecx [ ebp - 0x24 ]
mov [ ebp - 0x14 ] 0x3ff
xor edi edi
mov [ ebp - 0x4 ] 0x30
call sub_10029358
cmp [ ebp + 0x14 ] edi
jge r-xdata
mov esi [ ebp + 0xc ]
cmp esi edi
jne r-xdata
mov [ ebp + 0x14 ] edi
cmp [ ebp + 0x10 ] edi
jbe r-xdata
call sub_1002c068
push 0x16
mov eax [ ebp + 0x14 ]
add eax 0xb
mov [ esi ] 0x0
cmp [ ebp + 0x10 ] eax
ja r-xdata
mov eax esi
jmp r-xdata
mov eax [ ebp - 0x1c ]
and [ eax + 0x70 ] 0xfffffffd
mov edi [ ebp + 0x8 ]
mov eax [ edi ]
mov [ ebp - 0xc ] eax
mov eax [ edi + 0x4 ]
mov ecx eax
shr ecx 0x14
mov edx 0x7ff
push ebx
and ecx edx
xor ebx ebx
cmp ecx edx
jne r-xdata
call sub_1002c068
push 0x22
jmp r-xdata
pop edi
pop esi
leave
retn
and eax 0x80000000
xor ecx ecx
or ecx eax
je r-xdata
test ebx ebx
jne r-xdata
pop esi
push edi
push edi
push edi
push edi
push edi
mov [ eax ] esi
call sub_100261c9
add esp 0x14
cmp [ ebp - 0x18 ] 0x0
je r-xdata
mov ebx [ ebp + 0x18 ]
mov [ esi ] 0x30
inc esi
test ebx ebx
sete al
dec al
and al 0xe0
add al 0x78
mov [ esi ] al
mov ecx [ edi + 0x4 ]
inc esi
neg ebx
sbb ebx ebx
and ebx 0xffffffe0
and ecx 0x7ff00000
xor eax eax
add ebx 0x27
xor edx edx
or eax ecx
jne r-xdata
mov [ esi ] 0x2d
inc esi
mov eax [ ebp + 0x10 ]
cmp eax 0xffffffff
jne r-xdata
mov [ esi ] 0x31
inc esi
mov [ esi ] 0x30
mov ecx [ edi + 0x4 ]
mov eax [ edi ]
and ecx 0xfffff
inc esi
or eax ecx
jne r-xdata
add eax 0xfffffffe
or eax eax
jmp r-xdata
mov ecx [ ebp - 0x24 ]
mov ecx [ ecx + 0xbc ]
mov ecx [ ecx ]
mov cl [ ecx ]
mov [ eax ] cl
mov [ eax ] dl
jmp r-xdata
mov [ ebp - 0x14 ] 0x3fe
jmp r-xdata
mov [ ebp - 0x14 ] edx
jmp r-xdata
cmp [ ebx ] 0x2d
jne r-xdata
cmp [ ebp - 0x18 ] 0x0
mov [ esi ] 0x0
je r-xdata
push 0x0
push [ ebp + 0x14 ]
lea ebx [ esi + 0x2 ]
push eax
push ebx
push edi
call sub_100369f1
add esp 0x14
test eax eax
je r-xdata
mov [ ebp - 0xc ] edx
mov [ ebp - 0x8 ] 0xf0000
cmp eax edx
jbe r-xdata
mov ecx [ edi + 0x4 ]
mov eax [ edi ]
and ecx 0xfffff
mov [ ebp - 0x8 ] ecx
ja r-xdata
mov eax esi
inc esi
mov [ ebp + 0xc ] eax
cmp [ ebp + 0x14 ] edx
jne r-xdata
mov [ esi ] 0x30
inc esi
cmp [ ebp + 0x18 ] 0x0
push 0x65
sete al
dec al
and al 0xe0
add al 0x78
mov [ esi ] al
inc esi
push esi
call sub_10039770
pop ecx
pop ecx
test eax eax
je r-xdata
mov [ esi ] 0x2d
inc esi
pop ebx
mov ecx [ ebp - 0x1c ]
and [ ecx + 0x70 ] 0xfffffffd
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
jl r-xdata
mov edx [ edi + 0x4 ]
and edx [ ebp - 0x8 ]
mov eax [ edi ]
movsx ecx [ ebp - 0x4 ]
and eax [ ebp - 0xc ]
and edx 0xfffff
call sub_10039be0
add ax 0x30
movzx eax ax
cmp ax 0x39
jbe r-xdata
cmp [ ebp + 0x14 ] 0x0
jle r-xdata
cmp [ ebp - 0x18 ] 0x0
je r-xdata
cmp [ ebp + 0x18 ] 0x0
sete cl
dec cl
and cl 0xe0
add cl 0x70
mov [ eax ] cl
mov [ eax + 0x3 ] 0x0
jmp r-xdata
mov edx [ edi + 0x4 ]
and edx [ ebp - 0x8 ]
mov eax [ edi ]
movsx ecx [ ebp - 0x4 ]
and eax [ ebp - 0xc ]
and edx 0xfffff
call sub_10039be0
cmp ax 0x8
jbe r-xdata
mov ecx [ ebp - 0x8 ]
sub [ ebp - 0x4 ] 0x4
mov [ esi ] al
mov eax [ ebp - 0xc ]
shrd eax ecx 0x4
shr ecx 0x4
inc esi
dec [ ebp + 0x14 ]
cmp [ ebp - 0x4 ] 0x0
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] ecx
jge r-xdata
add eax ebx
mov eax [ ebp + 0xc ]
cmp [ eax ] 0x0
jne r-xdata
push [ ebp + 0x14 ]
push 0x30
push esi
call sub_10026630
add esp 0xc
add esi [ ebp + 0x14 ]
xor eax eax
mov eax [ ebp - 0x1c ]
and [ eax + 0x70 ] 0xfffffffd
lea eax [ esi - 0x1 ]
cmp [ ebp + 0x14 ] 0x0
jle r-xdata
cmp [ ebp + 0x18 ] 0x0
mov cl 0x34
sete al
dec al
and al 0xe0
add al 0x70
mov [ esi ] al
mov eax [ edi ]
mov edx [ edi + 0x4 ]
inc esi
call sub_10039be0
xor ebx ebx
and eax 0x7ff
and edx ebx
sub eax [ ebp - 0x14 ]
push ebx
pop ecx
sbb edx ecx
js r-xdata
mov esi eax
mov [ eax ] 0x30
dec eax
jmp r-xdata
cmp cl 0x46
jne r-xdata
mov [ esi ] 0x2d
inc esi
neg eax
adc edx ebx
neg edx
jg r-xdata
mov cl [ eax ]
cmp cl 0x66
je r-xdata
cmp eax [ ebp + 0xc ]
je r-xdata
test edx edx
jl r-xdata
mov ecx 0x3e8
jg r-xdata
mov [ esi ] 0x2b
inc esi
jmp r-xdata
cmp eax ebx
jb r-xdata
inc [ eax - 0x1 ]
mov cl [ eax ]
cmp cl 0x39
jne r-xdata
cmp esi edi
jne r-xdata
jg r-xdata
push ebx
push ecx
push edx
push eax
call sub_10039b00
add al 0x30
mov [ esi ] al
inc esi
mov [ ebp - 0x10 ] edx
mov eax ecx
mov edx ebx
cmp esi edi
jne r-xdata
cmp eax ecx
jb r-xdata
cmp edx ebx
mov edi esi
mov [ esi ] 0x30
jl r-xdata
inc cl
mov [ eax ] cl
jmp r-xdata
add bl 0x3a
mov [ eax ] bl
jmp r-xdata
push 0x0
push 0xa
push edx
push eax
call sub_10039b00
add al 0x30
mov [ esi ] al
mov [ ebp - 0x10 ] edx
inc esi
mov eax ecx
mov [ ebp - 0x10 ] ebx
test edx edx
jl r-xdata
push 0x0
push 0x64
push edx
push eax
call sub_10039b00
add al 0x30
mov [ esi ] al
mov [ ebp - 0x10 ] edx
inc esi
mov eax ecx
mov edx ebx
cmp eax 0x64
jb r-xdata
add al 0x30
mov [ esi ] al
mov [ esi + 0x1 ] 0x0
jg r-xdata
cmp eax 0xa
jb r-xdata
sub_10036d84
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
push edi
push [ ebp + 0x14 ]
mov ebx eax
mov esi [ ebx + 0x4 ]
mov edi ecx
lea ecx [ ebp - 0x10 ]
dec esi
call sub_10029358
test edi edi
jne r-xdata
cmp [ ebp + 0x8 ] 0x0
jbe r-xdata
call sub_1002c068
push 0x16
pop esi
mov [ eax ] esi
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_100261c9
add esp 0x14
cmp [ ebp - 0x4 ] 0x0
je r-xdata
cmp [ ebp + 0x10 ] 0x0
je r-xdata
mov eax esi
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
cmp [ ebx ] 0x2d
mov esi edi
jne r-xdata
cmp esi [ ebp + 0xc ]
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn
mov eax [ ebx + 0x4 ]
xor edi edi
inc edi
test eax eax
jg r-xdata
mov [ edi ] 0x2d
lea esi [ edi + 0x1 ]
xor eax eax
cmp [ ebx ] 0x2d
sete al
add eax esi
add eax edi
mov [ eax ] 0x30
mov [ eax + 0x1 ] 0x0
add esi eax
mov eax esi
call sub_1003676d
mov [ esi ] 0x30
inc esi
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax esi
call sub_1003676d
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0xbc ]
mov eax [ eax ]
mov al [ eax ]
mov [ esi ] al
mov ebx [ ebx + 0x4 ]
inc esi
test ebx ebx
jge r-xdata
cmp [ ebp + 0xc ] 0x0
jle r-xdata
xor eax eax
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
neg ebx
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
mov [ ebp + 0xc ] ebx
cmp [ ebp + 0xc ] ebx
jl r-xdata
mov edi [ ebp + 0xc ]
mov eax esi
call sub_1003676d
push edi
push 0x30
push esi
call sub_10026630
add esp 0xc
sub_10036e7b
mov edi edi
push ebp
mov ebp esp
sub esp 0x2c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebx
push esi
push edi
mov edi [ ebp + 0xc ]
push 0x16
pop esi
push esi
lea ecx [ ebp - 0x1c ]
push ecx
lea ecx [ ebp - 0x2c ]
push ecx
push [ eax + 0x4 ]
push [ eax ]
call sub_10039a69
xor ebx ebx
add esp 0x14
cmp edi ebx
jne r-xdata
mov eax [ ebp + 0x10 ]
cmp eax ebx
jbe r-xdata
call sub_1002c068
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] esi
call sub_100261c9
add esp 0x14
mov eax esi
jmp r-xdata
cmp eax 0xffffffff
jne r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_10025c8d
leave
retn
xor ecx ecx
cmp [ ebp - 0x2c ] 0x2d
sete cl
sub eax ecx
or eax eax
jmp r-xdata
push [ ebp + 0x18 ]
lea eax [ ebp - 0x2c ]
push ebx
push esi
push [ ebp + 0x10 ]
mov ecx edi
call sub_10036d84
add esp 0x10
mov [ edi ] bl
jmp r-xdata
mov esi [ ebp + 0x14 ]
lea ecx [ ebp - 0x2c ]
push ecx
mov ecx [ ebp - 0x28 ]
add ecx esi
push ecx
push eax
xor eax eax
cmp [ ebp - 0x2c ] 0x2d
sete al
add eax edi
push eax
call sub_100398ed
add esp 0x10
cmp eax ebx
je r-xdata
sub_10036f36
mov edi edi
push ebp
mov ebp esp
sub esp 0x30
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebx
push esi
mov esi [ ebp + 0xc ]
push edi
push 0x16
pop edi
push edi
lea ecx [ ebp - 0x1c ]
push ecx
lea ecx [ ebp - 0x30 ]
push ecx
push [ eax + 0x4 ]
push [ eax ]
call sub_10039a69
xor ebx ebx
add esp 0x14
cmp esi ebx
jne r-xdata
mov ecx [ ebp + 0x10 ]
cmp ecx ebx
jbe r-xdata
call sub_1002c068
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] edi
call sub_100261c9
add esp 0x14
mov eax edi
jmp r-xdata
mov eax [ ebp - 0x2c ]
dec eax
mov [ ebp - 0x20 ] eax
xor eax eax
cmp [ ebp - 0x30 ] 0x2d
sete al
lea edi [ eax + esi ]
cmp ecx 0xffffffff
jne r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_10025c8d
leave
retn
sub ecx eax
or ecx ecx
jmp r-xdata
mov eax [ ebp - 0x2c ]
dec eax
cmp [ ebp - 0x20 ] eax
setl cl
cmp eax 0xfffffffc
jl r-xdata
mov [ esi ] bl
jmp r-xdata
lea eax [ ebp - 0x30 ]
push eax
push [ ebp + 0x14 ]
push ecx
push edi
call sub_100398ed
add esp 0x10
cmp eax ebx
je r-xdata
push [ ebp + 0x1c ]
lea eax [ ebp - 0x30 ]
push 0x1
push eax
push [ ebp + 0x18 ]
mov eax esi
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
call sub_100367b2
add esp 0x18
cmp eax [ ebp + 0x14 ]
jge r-xdata
cmp cl bl
je r-xdata
push [ ebp + 0x1c ]
lea eax [ ebp - 0x30 ]
push 0x1
push [ ebp + 0x14 ]
mov ecx esi
push [ ebp + 0x10 ]
call sub_10036d84
add esp 0x10
jmp r-xdata
mov al [ edi ]
inc edi
test al al
jne r-xdata
mov [ edi - 0x2 ] bl
sub_10037030
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x14 ]
cmp eax 0x65
je r-xdata
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_10036921
cmp eax 0x45
je r-xdata
cmp eax 0x66
jne r-xdata
cmp eax 0x61
je r-xdata
push [ ebp + 0x20 ]
push [ ebp + 0x18 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_10036e7b
add esp 0x14
pop ebp
retn
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_10036a11
jmp r-xdata
cmp eax 0x41
je r-xdata
add esp 0x18
pop ebp
retn
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_10036f36
jmp r-xdata
sub_100370b8
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_10037030
add esp 0x1c
pop ebp
retn
sub_100370db
mov edi edi
push esi
push 0x30000
push 0x10000
xor esi esi
push esi
call sub_10039bff
add esp 0xc
test eax eax
je r-xdata
pop esi
retn
push esi
push esi
push esi
push esi
push esi
call sub_100260a1
add esp 0x14
sub_10037106
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
fld [ r--data ]
fstp [ ebp - 0x10 ]
fld [ r--data ]
fstp [ ebp - 0x18 ]
fld [ ebp - 0x18 ]
fdiv [ ebp - 0x10 ]
fmul [ ebp - 0x10 ]
fsubr [ ebp - 0x18 ]
fstp [ ebp - 0x8 ]
fld1
fcomp [ ebp - 0x8 ]
fnstsw ax
test ah 0x5
jpe r-xdata
xor eax eax
leave
retn
xor eax eax
inc eax
leave
retn
sub_10037144
push r--data
call [ GetModuleHandleA@IAT ]
test eax eax
je r-xdata
jmp sub_10037106
push r--data
push eax
call [ GetProcAddress@IAT ]
test eax eax
je r-xdata
push 0x0
call eax
retn
sub_10037170
mov edi edi
push ebp
mov ebp esp
sub esp 0x24
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x1c ]
mov ecx [ ebp + 0xc ]
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
push eax
xor edi edi
push edi
push edi
push edi
push edi
push ecx
lea eax [ ebp - 0x24 ]
push eax
lea eax [ ebp - 0x10 ]
push eax
mov [ ebp - 0x20 ] ecx
xor ebx ebx
call sub_1003a6f3
add esp 0x20
mov [ ebp - 0x14 ] eax
test al 0x4
je r-xdata
lea eax [ ebp - 0x1c ]
push eax
lea eax [ ebp - 0x10 ]
push eax
call sub_10039c6b
test [ ebp - 0x14 ] 0x2
pop ecx
pop ecx
jne r-xdata
mov ebx 0x200
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x18 ] edi
jmp r-xdata
mov ebx 0x80
cmp eax 0x1
jne r-xdata
mov eax [ ebp - 0x24 ]
sub eax [ ebp - 0x20 ]
mov ecx [ ebp - 0x4 ]
mov [ esi + 0x4 ] eax
mov eax [ ebp - 0x1c ]
mov [ esi + 0x10 ] eax
mov eax [ ebp - 0x18 ]
mov [ esi + 0x14 ] eax
pop edi
mov [ esi ] ebx
mov eax esi
pop esi
xor ecx ebp
pop ebx
call sub_10025c8d
leave
retn
or ebx 0x100
cmp eax 0x2
jne r-xdata
test [ ebp - 0x14 ] 0x1
jne r-xdata
sub_10037217
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
mov eax [ rw-data ]
push ebx
push esi
mov esi [ ebp + 0xc ]
push edi
xor edi edi
mov [ ebp - 0x4 ] eax
mov [ ebp - 0xc ] edi
mov [ ebp - 0x8 ] edi
mov [ ebp - 0x10 ] edi
jmp r-xdata
cmp [ esi ] 0x20
je r-xdata
inc esi
inc esi
movzx eax [ esi ]
cmp eax 0x61
je r-xdata
mov ebx 0x109
cmp eax 0x72
je r-xdata
cmp [ esi ] 0x20
je r-xdata
mov edx 0x4000
xor ebx ebx
or [ ebp - 0x4 ] 0x1
jmp r-xdata
cmp eax 0x77
je r-xdata
inc esi
inc esi
cmp [ esi ] di
jne r-xdata
cmp [ ebp - 0x10 ] edi
je r-xdata
movzx eax ax
cmp eax 0x53
jg r-xdata
xor ecx ecx
inc ecx
inc esi
inc esi
movzx eax [ esi ]
cmp ax di
je r-xdata
mov ebx 0x301
jmp r-xdata
call sub_1002c068
push edi
push edi
push edi
push edi
push edi
mov [ eax ] 0x16
call sub_100261c9
add esp 0x14
push 0x180
push [ ebp + 0x10 ]
lea eax [ ebp + 0xc ]
push ebx
push [ ebp + 0x8 ]
push eax
call sub_1003b5d7
add esp 0x14
test eax eax
jne r-xdata
jmp r-xdata
sub eax 0x54
je r-xdata
je r-xdata
or [ ebp - 0x4 ] 0x2
pop edi
pop esi
pop ebx
leave
retn
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x14 ]
inc [ rw-data ]
mov ecx [ ebp - 0x4 ]
mov [ eax + 0xc ] ecx
mov ecx [ ebp + 0xc ]
mov [ eax + 0x4 ] edi
mov [ eax ] edi
mov [ eax + 0x8 ] edi
mov [ eax + 0x1c ] edi
mov [ eax + 0x10 ] ecx
cmp [ esi ] 0x20
je r-xdata
mov eax 0x1000
test eax ebx
je r-xdata
sub eax 0xe
je r-xdata
cmp [ ebp - 0x8 ] edi
jne r-xdata
sub eax 0x20
je r-xdata
inc esi
inc esi
push 0x3
push esi
push r--data
call sub_1003b787
add esp 0xc
test eax eax
jne r-xdata
or ebx eax
xor ecx ecx
jmp r-xdata
test ebx 0xc000
jne r-xdata
dec eax
je r-xdata
mov [ ebp - 0x8 ] 0x1
or ebx 0x20
jmp r-xdata
inc esi
inc esi
movzx eax [ esi ]
cmp ax di
jne r-xdata
sub eax 0xb
je r-xdata
push 0x20
add esi 0x6
pop eax
jmp r-xdata
cmp ecx edi
je r-xdata
or ebx 0x8000
jmp r-xdata
cmp [ ebp - 0xc ] edi
jne r-xdata
sub eax 0xb
je r-xdata
test bl 0x2
jne r-xdata
dec eax
je r-xdata
cmp [ esi ] ax
je r-xdata
or [ ebp - 0x4 ] edx
mov [ ebp - 0xc ] 0x1
jmp r-xdata
cmp [ ebp - 0xc ] edi
jne r-xdata
sub eax 0x6
jne r-xdata
mov eax [ ebp - 0x4 ]
and ebx 0xfffffffe
and eax 0xfffffffc
or ebx 0x2
or eax 0x80
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov [ ebp - 0x10 ] 0x1
jmp r-xdata
sub eax 0x18
je r-xdata
inc esi
inc esi
cmp [ esi ] 0x3d
jne r-xdata
and [ ebp - 0x4 ] 0xffffbfff
mov [ ebp - 0xc ] 0x1
jmp r-xdata
test ebx 0xc000
jne r-xdata
test bl 0x40
jne r-xdata
sub eax 0xa
je r-xdata
inc esi
inc esi
cmp [ esi ] ax
je r-xdata
or ebx edx
jmp r-xdata
or ebx 0x40
jmp r-xdata
or ebx 0x80
jmp r-xdata
sub eax 0x4
jne r-xdata
push 0x5
push r--data
push esi
call sub_1003b6e1
add esp 0xc
test eax eax
jne r-xdata
cmp [ ebp - 0x8 ] edi
jne r-xdata
push 0x8
push r--data
push esi
call sub_1003b6e1
add esp 0xc
test eax eax
jne r-xdata
add esi 0xa
or ebx 0x40000
jmp r-xdata
mov [ ebp - 0x8 ] 0x1
or ebx 0x10
jmp r-xdata
push 0x7
push r--data
push esi
call sub_1003b6e1
add esp 0xc
test eax eax
jne r-xdata
add esi 0x10
or ebx 0x20000
jmp r-xdata
add esi 0xe
or ebx 0x10000
jmp r-xdata
sub_100374d7
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x10 ]
call sub_10029358
movzx eax [ ebp + 0xc ]
mov ecx [ ebp - 0xc ]
mov dl [ ebp + 0x14 ]
test [ ecx + eax + 0x1d ] dl
jne r-xdata
xor eax eax
inc eax
cmp [ ebp + 0x10 ] 0x0
je r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
xor eax eax
mov ecx [ ebp - 0x10 ]
mov ecx [ ecx + 0xc8 ]
movzx eax [ ecx + eax * 2 ]
and eax [ ebp + 0x10 ]
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
test eax eax
je r-xdata
sub_10037542
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x10 ]
push edi
push esi
mov [ ebp - 0x4 ] eax
call sub_10038b6d
or edi 0xffffffff
pop ecx
cmp eax edi
jne r-xdata
push [ ebp + 0x14 ]
lea ecx [ ebp - 0x4 ]
push ecx
push [ ebp - 0x8 ]
push eax
call [ SetFilePointer@IAT ]
mov [ ebp - 0x8 ] eax
cmp eax edi
jne r-xdata
call sub_1002c068
mov [ eax ] 0x9
mov eax esi
sar eax 0x5
mov eax [ eax * 4 + rw-data ]
and esi 0x1f
shl esi 0x6
lea eax [ eax + esi + 0x4 ]
and [ eax ] 0xfd
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
call [ GetLastError@IAT ]
test eax eax
je r-xdata
pop edi
pop esi
leave
retn
push eax
call sub_1002c08e
pop ecx
jmp r-xdata
mov eax edi
mov edx edi
jmp r-xdata
sub_100375c7
push 0x14
push r--data
call sub_1002e7e4
or esi 0xffffffff
mov [ ebp - 0x24 ] esi
mov [ ebp - 0x20 ] esi
mov eax [ ebp + 0x8 ]
cmp eax 0xfffffffe
jne r-xdata
xor edi edi
cmp eax edi
jl r-xdata
call sub_1002c07b
and [ eax ] 0x0
call sub_1002c068
mov [ eax ] 0x9
call sub_1002c07b
mov [ eax ] edi
call sub_1002c068
mov [ eax ] 0x9
push edi
push edi
push edi
push edi
push edi
call sub_100261c9
add esp 0x14
jmp r-xdata
cmp eax [ rw-data ]
jb r-xdata
call sub_1002e829
retn
mov eax esi
mov edx esi
jmp r-xdata
mov ecx eax
sar ecx 0x5
lea ebx [ ecx * 4 + rw-data ]
mov esi eax
and esi 0x1f
shl esi 0x6
mov ecx [ ebx ]
movsx ecx [ ecx + esi + 0x4 ]
and ecx 0x1
jne r-xdata
push eax
call sub_10038be4
pop ecx
mov [ ebp - 0x4 ] edi
mov eax [ ebx ]
test [ eax + esi + 0x4 ] 0x1
je r-xdata
call sub_1002c07b
mov [ eax ] edi
call sub_1002c068
mov [ eax ] 0x9
push edi
push edi
push edi
push edi
push edi
call sub_100261c9
add esp 0x14
or edx 0xffffffff
mov eax edx
jmp r-xdata
call sub_1002c068
mov [ eax ] 0x9
call sub_1002c07b
mov [ eax ] edi
or [ ebp - 0x24 ] 0xffffffff
or [ ebp - 0x20 ] 0xffffffff
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_10037542
add esp 0x10
mov [ ebp - 0x24 ] eax
mov [ ebp - 0x20 ] edx
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_100376d6
mov eax [ ebp - 0x24 ]
mov edx [ ebp - 0x20 ]
sub_100376e0
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp eax 0xfffffffe
jne r-xdata
push esi
xor esi esi
cmp eax esi
jl r-xdata
call sub_1002c068
mov [ eax ] 0x9
xor eax eax
pop ebp
retn
call sub_1002c068
push esi
push esi
push esi
push esi
push esi
mov [ eax ] 0x9
call sub_100261c9
add esp 0x14
xor eax eax
jmp r-xdata
cmp eax [ rw-data ]
jb r-xdata
pop esi
pop ebp
retn
mov ecx eax
and eax 0x1f
sar ecx 0x5
mov ecx [ ecx * 4 + rw-data ]
shl eax 0x6
movsx eax [ ecx + eax + 0x4 ]
and eax 0x40
sub_1003775a
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
mov esi [ ebp + 0xc ]
xor ebx ebx
push edi
mov edi [ ebp + 0x10 ]
cmp esi ebx
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp eax ebx
je r-xdata
cmp edi ebx
jbe r-xdata
cmp edi 0x7fffffff
jbe r-xdata
or [ eax ] 0xffffffff
mov eax [ ebp + 0x8 ]
cmp eax ebx
je r-xdata
push [ ebp + 0x18 ]
lea ecx [ ebp - 0x10 ]
call sub_10029358
mov eax [ ebp - 0x10 ]
cmp [ eax + 0x14 ] ebx
jne r-xdata
call sub_1002c068
push 0x16
pop esi
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] esi
call sub_100261c9
add esp 0x14
xor eax eax
jmp r-xdata
mov [ eax ] ebx
lea ecx [ ebp + 0xc ]
push ecx
push ebx
push edi
push esi
push 0x1
lea ecx [ ebp + 0x14 ]
push ecx
push ebx
mov [ ebp + 0xc ] ebx
push [ eax + 0x4 ]
call [ WideCharToMultiByte@IAT ]
cmp eax ebx
je r-xdata
mov ax [ ebp + 0x14 ]
mov ecx 0xff
cmp ax cx
jbe r-xdata
pop edi
pop esi
pop ebx
leave
retn
call [ GetLastError@IAT ]
cmp eax 0x7a
jne r-xdata
cmp [ ebp + 0xc ] ebx
jne r-xdata
cmp esi ebx
je r-xdata
cmp esi ebx
je r-xdata
call sub_1002c068
mov [ eax ] 0x2a
call sub_1002c068
mov eax [ eax ]
cmp [ ebp - 0x4 ] bl
je r-xdata
cmp esi ebx
je r-xdata
mov ecx [ ebp + 0x8 ]
cmp ecx ebx
je r-xdata
mov eax [ ebp + 0x8 ]
cmp eax ebx
je r-xdata
cmp edi ebx
ja r-xdata
cmp edi ebx
jbe r-xdata
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
call sub_1002c068
push 0x22
pop esi
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] esi
call sub_100261c9
add esp 0x14
cmp [ ebp - 0x4 ] bl
je r-xdata
cmp edi ebx
jbe r-xdata
cmp [ ebp - 0x4 ] bl
je r-xdata
mov [ ecx ] eax
jmp r-xdata
mov [ eax ] 0x1
mov [ esi ] al
push edi
push ebx
push esi
call sub_10026630
add esp 0xc
mov eax esi
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
jmp r-xdata
push edi
push ebx
push esi
call sub_10026630
add esp 0xc
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
jmp r-xdata
sub_100378e3
test [ ecx + 0xc ] 0x40
je r-xdata
dec [ ecx + 0x4 ]
js r-xdata
cmp [ ecx + 0x8 ] 0x0
je r-xdata
movsx eax al
push ecx
push eax
call sub_1002f6d5
pop ecx
pop ecx
mov edx [ ecx ]
mov [ edx ] al
inc [ ecx ]
movzx eax al
jmp r-xdata
inc [ esi ]
retn
or [ esi ] eax
retn
cmp eax 0xffffffff
jne r-xdata
sub_10037916
mov edi edi
push ebp
mov ebp esp
push esi
mov esi eax
jmp r-xdata
cmp [ ebp + 0xc ] 0x0
jg r-xdata
mov ecx [ ebp + 0x10 ]
mov al [ ebp + 0x8 ]
dec [ ebp + 0xc ]
call sub_100378e3
cmp [ esi ] 0xffffffff
je r-xdata
pop esi
pop ebp
retn
sub_1003793c
mov edi edi
push ebp
mov ebp esp
sub esp 0x278
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
xor eax eax
push edi
mov edi [ ebp + 0x14 ]
push [ ebp + 0x10 ]
lea ecx [ ebp - 0x250 ]
mov [ ebp - 0x260 ] esi
mov [ ebp - 0x224 ] edi
mov [ ebp - 0x25c ] eax
mov [ ebp - 0x210 ] eax
mov [ ebp - 0x234 ] eax
mov [ ebp - 0x218 ] eax
mov [ ebp - 0x230 ] eax
mov [ ebp - 0x258 ] eax
mov [ ebp - 0x238 ] eax
call sub_10029358
test esi esi
jne r-xdata
test [ esi + 0xc ] 0x40
jne r-xdata
call sub_1002c068
mov [ eax ] 0x16
xor eax eax
push eax
push eax
push eax
push eax
push eax
xor eax eax
cmp ebx eax
je r-xdata
push esi
call sub_10030ac0
pop ecx
mov edx rw-data
cmp eax 0xffffffff
je r-xdata
or eax 0xffffffff
jmp r-xdata
mov eax [ ebp - 0x248 ]
and [ eax + 0x70 ] 0xfffffffd
mov dl [ ebx ]
mov [ ebp - 0x228 ] eax
mov [ ebp - 0x220 ] eax
mov [ ebp - 0x240 ] eax
mov [ ebp - 0x254 ] eax
mov [ ebp - 0x211 ] dl
test dl dl
je r-xdata
mov ecx edx
cmp eax 0xfffffffe
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_10025c8d
leave
retn
cmp [ ebp - 0x244 ] 0x0
je r-xdata
inc ebx
xor eax eax
cmp [ ebp - 0x228 ] eax
mov [ ebp - 0x23c ] ebx
jl r-xdata
cmp eax 0xffffffff
je r-xdata
mov ecx eax
and ecx 0x1f
mov esi eax
sar esi 0x5
shl ecx 0x6
add ecx [ esi * 4 + rw-data ]
jmp r-xdata
mov eax [ ebp - 0x228 ]
mov eax [ ebp - 0x248 ]
and [ eax + 0x70 ] 0xfffffffd
xor esi esi
cmp [ ebp - 0x240 ] esi
je r-xdata
mov cl dl
sub cl 0x20
cmp cl 0x58
ja r-xdata
mov eax edx
cmp eax 0xfffffffe
je r-xdata
test [ ecx + 0x24 ] 0x7f
jne r-xdata
cmp [ ebp - 0x240 ] 0x7
je r-xdata
mov ecx [ ebp - 0x240 ]
imul eax eax 0x9
movzx eax [ eax + ecx + r--data ]
push 0x8
shr eax 0x4
pop esi
mov [ ebp - 0x240 ] eax
cmp eax esi
je r-xdata
movsx eax dl
movzx eax [ eax + r--data ]
and eax 0xf
mov ecx eax
and eax 0x1f
sar ecx 0x5
shl eax 0x6
add eax [ ecx * 4 + rw-data ]
jmp r-xdata
call sub_1002c068
push esi
push esi
push esi
push esi
mov [ eax ] 0x16
push esi
jmp r-xdata
push 0x7
pop ecx
cmp eax ecx
ja r-xdata
test [ eax + 0x24 ] 0x80
jne r-xdata
call sub_100261c9
add esp 0x14
cmp [ ebp - 0x244 ] 0x0
je r-xdata
mov ebx [ ebp - 0x23c ]
mov al [ ebx ]
mov [ ebp - 0x211 ] al
test al al
je r-xdata
jmp [ eax * 4 + jump_table_100384ec ]
mov edi [ ebp - 0x224 ]
mov dl al
jmp r-xdata
xor eax eax
or [ ebp - 0x218 ] 0xffffffff
mov [ ebp - 0x26c ] eax
mov [ ebp - 0x258 ] eax
mov [ ebp - 0x234 ] eax
mov [ ebp - 0x230 ] eax
mov [ ebp - 0x210 ] eax
mov [ ebp - 0x238 ] eax
jmp r-xdata
movsx eax dl
sub eax 0x20
je r-xdata
cmp dl 0x2a
jne r-xdata
and [ ebp - 0x218 ] 0x0
jmp r-xdata
cmp dl 0x2a
jne r-xdata
cmp dl 0x49
je r-xdata
and [ ebp - 0x238 ] 0x0
lea eax [ ebp - 0x250 ]
push eax
movzx eax dl
push eax
call sub_100365b5
pop ecx
test eax eax
mov al [ ebp - 0x211 ]
pop ecx
je r-xdata
movsx eax dl
cmp eax 0x64
jg r-xdata
or [ ebp - 0x210 ] 0x2
jmp r-xdata
sub eax 0x3
je r-xdata
mov eax [ ebp - 0x234 ]
imul eax eax 0xa
movsx ecx dl
lea eax [ eax + ecx - 0x30 ]
mov [ ebp - 0x234 ] eax
jmp r-xdata
add edi 0x4
mov [ ebp - 0x224 ] edi
mov edi [ edi - 0x4 ]
mov [ ebp - 0x234 ] edi
test edi edi
jge r-xdata
mov eax [ ebp - 0x218 ]
imul eax eax 0xa
movsx ecx dl
lea eax [ eax + ecx - 0x30 ]
mov [ ebp - 0x218 ] eax
jmp r-xdata
add edi 0x4
mov [ ebp - 0x224 ] edi
mov edi [ edi - 0x4 ]
mov [ ebp - 0x218 ] edi
test edi edi
jge r-xdata
mov al [ ebx ]
cmp al 0x36
jne r-xdata
cmp dl 0x68
je r-xdata
mov ecx [ ebp - 0x260 ]
lea esi [ ebp - 0x228 ]
call sub_100378e3
jmp r-xdata
mov ecx [ ebp - 0x260 ]
lea esi [ ebp - 0x228 ]
call sub_100378e3
mov al [ ebx ]
inc ebx
mov [ ebp - 0x23c ] ebx
test al al
je r-xdata
cmp eax 0x70
jg r-xdata
je r-xdata
or [ ebp - 0x210 ] 0x80
jmp r-xdata
sub eax esi
je r-xdata
or [ ebp - 0x210 ] 0x4
neg [ ebp - 0x234 ]
jmp r-xdata
or [ ebp - 0x218 ] 0xffffffff
jmp r-xdata
cmp al 0x33
jne r-xdata
cmp [ ebx + 0x1 ] 0x34
jne r-xdata
or [ ebp - 0x210 ] 0x20
jmp r-xdata
cmp dl 0x6c
je r-xdata
sub eax 0x73
je r-xdata
je r-xdata
or [ ebp - 0x210 ] 0x40
cmp eax 0x53
jg r-xdata
or [ ebp - 0x210 ] 0x1
jmp r-xdata
dec eax
dec eax
je r-xdata
cmp al 0x64
je r-xdata
cmp [ ebx + 0x1 ] 0x32
jne r-xdata
inc ebx
inc ebx
or [ ebp - 0x210 ] 0x8000
mov [ ebp - 0x23c ] ebx
jmp r-xdata
cmp [ ebx ] 0x6c
jne r-xdata
cmp dl 0x77
jne r-xdata
mov ecx [ ebp - 0x218 ]
cmp ecx 0xffffffff
jne r-xdata
dec eax
dec eax
je r-xdata
mov [ ebp - 0x218 ] esi
cmp eax 0x65
jl r-xdata
test ecx 0x1000
jne r-xdata
add edi esi
mov eax [ edi - 0x8 ]
mov edx [ edi - 0x4 ]
jmp r-xdata
sub eax 0x58
je r-xdata
je r-xdata
or [ ebp - 0x210 ] 0x4
jmp r-xdata
sub eax 0x3
jne r-xdata
cmp al 0x69
je r-xdata
inc ebx
inc ebx
and [ ebp - 0x210 ] 0xffff7fff
mov [ ebp - 0x23c ] ebx
jmp r-xdata
or [ ebp - 0x210 ] 0x10
jmp r-xdata
inc ebx
or [ ebp - 0x210 ] 0x1000
mov [ ebp - 0x23c ] ebx
jmp r-xdata
or [ ebp - 0x210 ] 0x800
jmp r-xdata
add edi 0x4
test [ ebp - 0x210 ] 0x810
mov [ ebp - 0x224 ] edi
mov edi [ edi - 0x4 ]
mov [ ebp - 0x21c ] edi
je r-xdata
mov ecx 0x7fffffff
mov [ ebp - 0x220 ] 0xa
sub eax 0x3
jne r-xdata
test [ ebp - 0x210 ] 0x80
mov [ ebp - 0x220 ] 0x10
je r-xdata
cmp [ ebp - 0x258 ] 0x0
jne r-xdata
cmp eax 0x67
jle r-xdata
add edi 0x4
test cl 0x20
je r-xdata
mov [ ebp - 0x224 ] edi
mov [ ebp - 0x25c ] ecx
jmp r-xdata
dec eax
dec eax
je r-xdata
test [ ebp - 0x210 ] 0x830
jne r-xdata
sub eax 0x41
je r-xdata
or [ ebp - 0x210 ] esi
jmp r-xdata
cmp al 0x6f
je r-xdata
test edi edi
jne r-xdata
test edi edi
jne r-xdata
mov [ ebp - 0x25c ] 0x27
mov ecx [ ebp - 0x210 ]
test ecx 0x8000
je r-xdata
mov al [ ebp - 0x25c ]
add al 0x51
mov [ ebp - 0x22c ] 0x30
mov [ ebp - 0x22b ] al
mov [ ebp - 0x230 ] 0x2
jmp r-xdata
cmp [ ebp - 0x254 ] 0x0
je r-xdata
mov eax [ ebp - 0x210 ]
test al 0x40
je r-xdata
or [ ebp - 0x210 ] 0x40
cmp [ ebp - 0x218 ] 0x0
lea ebx [ ebp - 0x20c ]
mov eax 0x200
mov [ ebp - 0x21c ] ebx
mov [ ebp - 0x264 ] eax
jge r-xdata
cmp eax 0x69
je r-xdata
mov eax [ edi - 0x4 ]
test cl 0x40
je r-xdata
mov [ ebp - 0x224 ] edi
test cl 0x40
je r-xdata
test [ ebp - 0x210 ] 0x9000
mov ebx edx
mov edi eax
jne r-xdata
test edx edx
jg r-xdata
mov eax [ edi ]
add edi 0x4
mov [ ebp - 0x224 ] edi
test eax eax
je r-xdata
sub eax ecx
je r-xdata
or [ ebp - 0x210 ] 0x800
add dl 0x20
mov [ ebp - 0x26c ] 0x1
mov [ ebp - 0x211 ] dl
dec eax
dec eax
je r-xdata
cmp al 0x75
je r-xdata
mov eax [ ebp - 0x21c ]
jmp r-xdata
mov eax [ rw-data ]
mov [ ebp - 0x21c ] eax
mov eax [ ebp - 0x21c ]
mov [ ebp - 0x238 ] 0x1
jmp r-xdata
mov eax [ rw-data ]
mov [ ebp - 0x21c ] eax
push [ ebp - 0x254 ]
call sub_1002644d
and [ ebp - 0x254 ] 0x0
pop ecx
mov ebx [ ebp - 0x234 ]
sub ebx [ ebp - 0x220 ]
sub ebx [ ebp - 0x230 ]
test [ ebp - 0x210 ] 0xc
jne r-xdata
test eax 0x100
je r-xdata
jne r-xdata
mov [ ebp - 0x218 ] 0x6
jmp r-xdata
cmp eax 0x6e
je r-xdata
xor edx edx
cdq
jmp r-xdata
movzx eax [ edi - 0x4 ]
movsx eax [ edi - 0x4 ]
jmp r-xdata
cmp [ ebp - 0x218 ] 0x0
jge r-xdata
xor ebx ebx
jl r-xdata
mov eax [ rw-data ]
mov [ ebp - 0x21c ] eax
push eax
mov ecx [ eax + 0x4 ]
test ecx ecx
je r-xdata
dec eax
dec eax
jne r-xdata
test [ ebp - 0x210 ] 0x830
jne r-xdata
dec eax
dec eax
je r-xdata
cmp al 0x78
je r-xdata
test ecx ecx
jne r-xdata
test ecx ecx
jne r-xdata
push [ ebp - 0x230 ]
mov edi [ ebp - 0x260 ]
lea eax [ ebp - 0x228 ]
lea ecx [ ebp - 0x22c ]
call sub_1002f839
test [ ebp - 0x210 ] 0x8
pop ecx
je r-xdata
push [ ebp - 0x260 ]
lea eax [ ebp - 0x228 ]
push ebx
push 0x20
call sub_10037916
add esp 0xc
test al 0x1
je r-xdata
mov [ ebp - 0x22c ] 0x2d
jmp r-xdata
cmp [ ebp - 0x218 ] eax
jle r-xdata
cmp dl 0x67
jne r-xdata
add edi esi
mov eax [ edi - 0x8 ]
mov [ ebp - 0x278 ] eax
mov eax [ edi - 0x4 ]
mov [ ebp - 0x274 ] eax
lea eax [ ebp - 0x250 ]
push eax
push [ ebp - 0x26c ]
movsx eax dl
push [ ebp - 0x218 ]
mov [ ebp - 0x224 ] edi
push eax
push [ ebp - 0x264 ]
lea eax [ ebp - 0x278 ]
push ebx
push eax
push [ rw-data ]
call sub_1002d8d8
pop ecx
call eax
mov edi [ ebp - 0x210 ]
add esp 0x1c
and edi 0x80
je r-xdata
mov esi [ edi ]
add edi 0x4
mov [ ebp - 0x224 ] edi
call sub_10037744
test eax eax
je r-xdata
cmp eax 0x6f
jne r-xdata
test cl 0x40
je r-xdata
cdq
jmp r-xdata
and [ ebp - 0x210 ] 0xfffffff7
mov eax 0x200
cmp [ ebp - 0x218 ] eax
jle r-xdata
mov [ ebp - 0x218 ] 0x1
jmp r-xdata
neg eax
adc edx 0x0
neg edx
or [ ebp - 0x210 ] 0x100
test eax eax
jae r-xdata
mov [ ebp - 0x220 ] eax
test [ ebp - 0x210 ] 0x800
movsx eax [ eax ]
mov [ ebp - 0x21c ] ecx
je r-xdata
add edi 0x4
test [ ebp - 0x210 ] 0x810
mov [ ebp - 0x224 ] edi
je r-xdata
or [ ebp - 0x210 ] 0x800
jmp r-xdata
dec eax
dec eax
jne r-xdata
cmp al 0x58
je r-xdata
dec ecx
cmp [ eax ] 0x0
je r-xdata
sub eax [ ebp - 0x21c ]
dec ecx
cmp [ eax ] 0x0
je r-xdata
sub eax [ ebp - 0x21c ]
sar eax 0x1
jmp r-xdata
cmp [ ebp - 0x238 ] 0x0
mov eax [ ebp - 0x220 ]
je r-xdata
test [ ebp - 0x210 ] 0x4
jne r-xdata
test al 0x2
je r-xdata
mov [ ebp - 0x22c ] 0x2b
jmp r-xdata
mov [ ebp - 0x230 ] 0x1
cmp [ ebp - 0x218 ] 0xa3
jle r-xdata
mov [ ebp - 0x218 ] eax
mov [ ebp - 0x218 ] 0x1
jmp r-xdata
cmp [ ebp - 0x211 ] 0x67
jne r-xdata
cmp [ ebp - 0x218 ] 0x0
jne r-xdata
test [ ebp - 0x210 ] 0x20
je r-xdata
test [ ebp - 0x210 ] 0x80
mov [ ebp - 0x220 ] esi
je r-xdata
mov eax edi
or eax ebx
jne r-xdata
mov [ ebp - 0x218 ] eax
and [ ebp - 0x238 ] 0x0
jmp r-xdata
cdq
sub eax edx
sar eax 0x1
mov [ ebp - 0x238 ] 0x1
jmp r-xdata
mov al [ edi - 0x4 ]
mov [ ebp - 0x20c ] al
mov [ ebp - 0x220 ] 0x1
movzx eax [ edi - 0x4 ]
push eax
push 0x200
lea eax [ ebp - 0x20c ]
push eax
lea eax [ ebp - 0x220 ]
push eax
call sub_100378c6
add esp 0x10
test eax eax
je r-xdata
and [ ebp - 0x240 ] 0x0
inc eax
inc eax
inc eax
mov ecx [ ebp - 0x21c ]
push eax
lea eax [ ebp - 0x228 ]
call sub_1002f839
pop ecx
test eax eax
jle r-xdata
push edi
push ebx
push 0x30
lea eax [ ebp - 0x228 ]
call sub_10037916
add esp 0xc
mov [ ebp - 0x22c ] 0x20
mov esi [ ebp - 0x218 ]
add esi 0x15d
push esi
call sub_1002c93d
mov dl [ ebp - 0x211 ]
pop ecx
mov [ ebp - 0x254 ] eax
push 0x8
test eax eax
je r-xdata
cmp [ ebx ] 0x2d
jne r-xdata
test edi edi
jne r-xdata
lea eax [ ebp - 0x250 ]
push eax
push ebx
push [ rw-data ]
call sub_1002d8d8
pop ecx
call eax
pop ecx
pop ecx
mov eax [ ebp - 0x228 ]
mov [ esi ] eax
mov ax [ ebp - 0x228 ]
mov [ esi ] ax
jmp r-xdata
or [ ebp - 0x210 ] 0x200
jmp r-xdata
lea esi [ ebp - 0xd ]
and [ ebp - 0x230 ] eax
lea eax [ ebp - 0x20c ]
mov [ ebp - 0x21c ] eax
jmp r-xdata
mov [ ebp - 0x258 ] 0x1
jmp r-xdata
test [ ebp - 0x210 ] 0x4
je r-xdata
mov esi [ ebp - 0x21c ]
mov [ ebp - 0x264 ] eax
mov [ ebp - 0x218 ] 0xa3
mov [ ebp - 0x21c ] eax
mov [ ebp - 0x264 ] esi
mov ebx eax
jmp r-xdata
push ebx
jmp r-xdata
or [ ebp - 0x210 ] 0x100
inc ebx
mov [ ebp - 0x21c ] ebx
lea eax [ ebp - 0x250 ]
push eax
push ebx
push [ rw-data ]
call sub_1002d8d8
pop ecx
call eax
pop ecx
pop ecx
mov [ ebp - 0x258 ] 0x1
jmp r-xdata
mov eax [ ebp - 0x220 ]
cdq
push edx
push eax
push ebx
push edi
call sub_10036520
add ecx 0x30
cmp ecx 0x39
mov [ ebp - 0x264 ] ebx
mov edi eax
mov ebx edx
jle r-xdata
mov eax edi
or eax ebx
je r-xdata
push edi
push ebx
push 0x20
lea eax [ ebp - 0x228 ]
call sub_10037916
add esp 0xc
or [ ebp - 0x228 ] 0xffffffff
jmp r-xdata
cmp [ ebp - 0x270 ] eax
je r-xdata
pop esi
call sub_10025d30
pop ecx
jmp r-xdata
mov [ esi ] cl
dec esi
jmp r-xdata
add ecx [ ebp - 0x25c ]
lea eax [ ebp - 0xd ]
sub eax esi
inc esi
test [ ebp - 0x210 ] 0x200
mov [ ebp - 0x220 ] eax
mov [ ebp - 0x21c ] esi
je r-xdata
cmp [ ebp - 0x228 ] 0x0
jl r-xdata
push [ ebp - 0x270 ]
lea eax [ ebp - 0x228 ]
lea ecx [ ebp - 0xc ]
call sub_1002f839
cmp [ ebp - 0x264 ] 0x0
pop ecx
jne r-xdata
mov eax [ ebp - 0x218 ]
dec [ ebp - 0x218 ]
test eax eax
jg r-xdata
test eax eax
je r-xdata
movzx eax [ esi ]
dec [ ebp - 0x264 ]
push eax
push 0x6
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x270 ]
inc esi
push eax
inc esi
call sub_100378c6
add esp 0x10
test eax eax
jne r-xdata
jmp r-xdata
dec [ ebp - 0x21c ]
mov ecx [ ebp - 0x21c ]
mov [ ecx ] 0x30
inc eax
jmp r-xdata
mov ecx esi
cmp [ ecx ] 0x30
je r-xdata
sub_1003850c
mov edi edi
push ebp
mov ebp esp
sub esp 0x14
push ebx
push esi
push edi
call sub_1002d8cf
and [ ebp - 0x4 ] 0x0
cmp [ rw-data ] 0x0
mov ebx eax
jne r-xdata
mov eax [ rw-data ]
cmp eax ebx
je r-xdata
push r--data
call [ LoadLibraryA@IAT ]
mov edi eax
test edi edi
je r-xdata
mov eax [ rw-data ]
cmp eax ebx
je r-xdata
cmp [ rw-data ] ebx
je r-xdata
xor eax eax
mov esi [ GetProcAddress@IAT ]
push r--data
push edi
call esi
test eax eax
je r-xdata
push [ rw-data ]
call sub_1002d8d8
pop ecx
test eax eax
je r-xdata
push eax
call sub_1002d8d8
pop ecx
test eax eax
je r-xdata
push eax
call sub_1002d8d8
push [ rw-data ]
mov esi eax
call sub_1002d8d8
pop ecx
pop ecx
mov edi eax
test esi esi
je r-xdata
push eax
call sub_1002d85d
mov [ esp ] r--data
push edi
mov [ rw-data ] eax
call esi
push eax
call sub_1002d85d
mov [ esp ] r--data
push edi
mov [ rw-data ] eax
call esi
push eax
call sub_1002d85d
mov [ esp ] r--data
push edi
mov [ rw-data ] eax
call esi
push eax
call sub_1002d85d
pop ecx
mov [ rw-data ] eax
test eax eax
je r-xdata
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push [ ebp - 0x4 ]
call eax
jmp r-xdata
call eax
mov [ ebp - 0x4 ] eax
test eax eax
je r-xdata
test edi edi
je r-xdata
push r--data
push edi
call esi
push eax
call sub_1002d85d
pop ecx
mov [ rw-data ] eax
pop edi
pop esi
pop ebx
leave
retn
mov eax [ rw-data ]
cmp eax ebx
je r-xdata
call esi
test eax eax
je r-xdata
push eax
call sub_1002d8d8
pop ecx
test eax eax
je r-xdata
or [ ebp + 0x10 ] 0x200000
jmp r-xdata
lea ecx [ ebp - 0x8 ]
push ecx
push 0xc
lea ecx [ ebp - 0x14 ]
push ecx
push 0x1
push eax
call edi
test eax eax
je r-xdata
push [ ebp - 0x4 ]
call eax
mov [ ebp - 0x4 ] eax
test [ ebp - 0xc ] 0x1
jne r-xdata
sub_10038675
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
push esi
xor esi esi
cmp ecx esi
jl r-xdata
call sub_1002c068
push esi
push esi
push esi
push esi
push esi
mov [ eax ] 0x16
call sub_100261c9
add esp 0x14
or eax 0xffffffff
cmp ecx 0x2
jle r-xdata
mov eax [ rw-data ]
mov [ rw-data ] ecx
jmp r-xdata
cmp ecx 0x3
jne r-xdata
pop esi
pop ebp
retn
mov eax [ rw-data ]
jmp r-xdata
sub_100386c0
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x10 ]
call sub_10029358
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call [ GetLocaleInfoW@IAT ]
cmp [ ebp - 0x4 ] 0x0
je r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
sub_100386f4
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
push ebx
mov ebx [ GetLocaleInfoW@IAT ]
push esi
push edi
xor edi edi
xor esi esi
inc edi
cmp eax esi
jne r-xdata
cmp eax 0x2
je r-xdata
push esi
push esi
push edi
push esi
call ebx
test eax eax
je r-xdata
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call [ GetLocaleInfoA@IAT ]
cmp eax esi
je r-xdata
call [ GetLastError@IAT ]
cmp eax 0x78
jne r-xdata
mov [ rw-data ] edi
jmp r-xdata
cmp eax edi
jne r-xdata
mov eax [ rw-data ]
push 0x2
pop eax
mov [ rw-data ] eax
jmp r-xdata
cmp [ ebp + 0x1c ] esi
jne r-xdata
xor eax eax
jmp r-xdata
push esi
push esi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call ebx
mov ecx eax
mov [ ebp - 0x8 ] ecx
cmp ecx esi
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
mov eax [ eax + 0x4 ]
mov [ ebp + 0x1c ] eax
lea esp [ ebp - 0x14 ]
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10025c8d
leave
retn
jle r-xdata
xor edi edi
push 0xffffffe0
xor edx edx
pop eax
div ecx
cmp eax 0x2
jb r-xdata
push [ ebp - 0x8 ]
push edi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call ebx
test eax eax
je r-xdata
lea eax [ ecx + ecx + 0x8 ]
cmp eax 0x400
ja r-xdata
push edi
call sub_1002c50a
pop ecx
mov eax esi
jmp r-xdata
push esi
push esi
cmp [ ebp + 0x18 ] esi
jne r-xdata
push eax
call sub_10028f2d
pop ecx
cmp eax esi
je r-xdata
call sub_10036140
mov edi esp
cmp edi esi
je r-xdata
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push esi
push esi
jmp r-xdata
mov edi eax
jmp r-xdata
mov [ eax ] 0xdddd
add eax 0x8
mov [ edi ] 0xcccc
add edi 0x8
jmp r-xdata
push 0xffffffff
push edi
push esi
push [ ebp + 0x1c ]
call [ WideCharToMultiByte@IAT ]
mov esi eax
cmp edi esi
je r-xdata
sub_10038833
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x10 ]
call sub_10029358
push [ ebp + 0x1c ]
lea eax [ ebp - 0x10 ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call sub_100386f4
add esp 0x18
cmp [ ebp - 0x4 ] 0x0
je r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
sub_10038870
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
xor esi esi
cmp [ rw-data ] esi
je r-xdata
push esi
push esi
push 0x5
lea eax [ ebp - 0xc ]
push eax
push 0x1
lea eax [ ebp + 0x8 ]
push eax
push esi
call [ GetConsoleOutputCP@IAT ]
push eax
call [ WideCharToMultiByte@IAT ]
mov ecx [ rw-data ]
cmp ecx 0xffffffff
je r-xdata
cmp [ rw-data ] 0xfffffffe
jne r-xdata
mov eax 0xffff
jmp r-xdata
push esi
lea edx [ ebp - 0x10 ]
push edx
push eax
lea eax [ ebp - 0xc ]
push eax
push ecx
call [ WriteConsoleA@IAT ]
test eax eax
je r-xdata
mov eax [ rw-data ]
cmp eax 0xffffffff
jne r-xdata
call sub_1003ba18
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop esi
call sub_10025c8d
leave
retn
mov ax [ ebp + 0x8 ]
push esi
lea ecx [ ebp - 0x10 ]
push ecx
push 0x1
lea ecx [ ebp + 0x8 ]
push ecx
push eax
call [ WriteConsoleW@IAT ]
test eax eax
jne r-xdata
mov [ rw-data ] 0x1
jmp r-xdata
cmp [ rw-data ] 0x2
jne r-xdata
call [ GetLastError@IAT ]
cmp eax 0x78
jne r-xdata
mov [ rw-data ] esi
sub_10038935
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
mov esi [ ebp + 0xc ]
xor ebx ebx
cmp esi ebx
je r-xdata
xor eax eax
cmp [ ebp + 0x10 ] ebx
je r-xdata
cmp [ esi ] bl
jne r-xdata
push [ ebp + 0x14 ]
lea ecx [ ebp - 0x10 ]
call sub_10029358
mov eax [ ebp - 0x10 ]
cmp [ eax + 0x14 ] ebx
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp eax ebx
je r-xdata
lea eax [ ebp - 0x10 ]
push eax
movzx eax [ esi ]
push eax
call sub_100365b5
pop ecx
pop ecx
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
cmp eax ebx
je r-xdata
xor ecx ecx
mov [ eax ] cx
xor eax eax
cmp [ ebp + 0x8 ] ebx
setne al
push eax
push [ ebp + 0x8 ]
mov eax [ ebp - 0x10 ]
push 0x1
push esi
push 0x9
push [ eax + 0x4 ]
call [ MultiByteToWideChar@IAT ]
test eax eax
jne r-xdata
mov eax [ ebp - 0x10 ]
mov ecx [ eax + 0xac ]
cmp ecx 0x1
jle r-xdata
cmp [ ebp - 0x4 ] bl
je r-xdata
movzx cx [ esi ]
mov [ eax ] cx
jmp r-xdata
mov ecx [ ebp + 0x10 ]
cmp ecx [ eax + 0xac ]
jb r-xdata
cmp [ ebp + 0x10 ] ecx
jl r-xdata
xor eax eax
inc eax
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
call sub_1002c068
mov [ eax ] 0x2a
cmp [ ebp - 0x4 ] bl
je r-xdata
cmp [ esi + 0x1 ] bl
je r-xdata
xor edx edx
cmp [ ebp + 0x8 ] ebx
setne dl
push edx
push [ ebp + 0x8 ]
push ecx
push esi
push 0x9
push [ eax + 0x4 ]
call [ MultiByteToWideChar@IAT ]
test eax eax
mov eax [ ebp - 0x10 ]
jne r-xdata
pop esi
pop ebx
leave
retn
or eax 0xffffffff
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
mov eax [ eax + 0xac ]
cmp [ ebp - 0x4 ] bl
je r-xdata
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
jmp r-xdata
sub_10038a66
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
push edi
test eax eax
jl r-xdata
call sub_1002c068
mov [ eax ] 0x9
call sub_1002c07b
and [ eax ] 0x0
or eax 0xffffffff
cmp eax [ rw-data ]
jae r-xdata
mov ecx eax
sar ecx 0x5
mov esi eax
and esi 0x1f
lea edi [ ecx * 4 + rw-data ]
mov ecx [ edi ]
shl esi 0x6
cmp [ esi + ecx ] 0xffffffff
jne r-xdata
cmp [ rw-data ] 0x1
push ebx
mov ebx [ ebp + 0xc ]
jne r-xdata
mov eax [ edi ]
mov [ esi + eax ] ebx
xor eax eax
pop ebx
jmp r-xdata
sub eax 0x0
je r-xdata
pop edi
pop esi
pop ebp
retn
push ebx
push 0xfffffff6
dec eax
je r-xdata
push ebx
push 0xfffffff5
jmp r-xdata
dec eax
jne r-xdata
call [ SetStdHandle@IAT ]
push ebx
push 0xfffffff4
jmp r-xdata
sub_10038ae7
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
push ebx
xor ebx ebx
cmp ecx ebx
push esi
push edi
jl r-xdata
call sub_1002c068
mov [ eax ] 0x9
call sub_1002c07b
mov [ eax ] ebx
or eax 0xffffffff
cmp ecx [ rw-data ]
jae r-xdata
mov eax ecx
sar eax 0x5
mov esi ecx
lea edi [ eax * 4 + rw-data ]
mov eax [ edi ]
and esi 0x1f
shl esi 0x6
add eax esi
test [ eax + 0x4 ] 0x1
je r-xdata
cmp [ eax ] 0xffffffff
je r-xdata
cmp [ rw-data ] 0x1
jne r-xdata
mov eax [ edi ]
or [ esi + eax ] 0xffffffff
xor eax eax
jmp r-xdata
sub ecx ebx
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
push ebx
push 0xfffffff6
dec ecx
je r-xdata
push ebx
push 0xfffffff5
jmp r-xdata
dec ecx
jne r-xdata
call [ SetStdHandle@IAT ]
push ebx
push 0xfffffff4
jmp r-xdata
sub_10038b6d
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp eax 0xfffffffe
jne r-xdata
push esi
xor esi esi
cmp eax esi
jl r-xdata
call sub_1002c07b
and [ eax ] 0x0
call sub_1002c068
mov [ eax ] 0x9
or eax 0xffffffff
pop ebp
retn
call sub_1002c07b
mov [ eax ] esi
call sub_1002c068
push esi
push esi
push esi
push esi
push esi
mov [ eax ] 0x9
call sub_100261c9
add esp 0x14
or eax 0xffffffff
jmp r-xdata
cmp eax [ rw-data ]
jae r-xdata
pop esi
pop ebp
retn
mov ecx eax
and eax 0x1f
sar ecx 0x5
mov ecx [ ecx * 4 + rw-data ]
shl eax 0x6
add eax ecx
test [ eax + 0x4 ] 0x1
jne r-xdata
mov eax [ eax ]
sub_10038be4
push 0xc
push r--data
call sub_1002e7e4
mov edi [ ebp + 0x8 ]
mov eax edi
sar eax 0x5
mov esi edi
and esi 0x1f
shl esi 0x6
add esi [ eax * 4 + rw-data ]
mov [ ebp - 0x1c ] 0x1
xor ebx ebx
cmp [ esi + 0x8 ] ebx
jne r-xdata
cmp [ ebp - 0x1c ] ebx
je r-xdata
push 0xa
call sub_1002ebde
pop ecx
mov [ ebp - 0x4 ] ebx
cmp [ esi + 0x8 ] ebx
jne r-xdata
mov eax [ ebp - 0x1c ]
call sub_1002e829
retn
mov eax edi
sar eax 0x5
and edi 0x1f
shl edi 0x6
mov eax [ eax * 4 + rw-data ]
lea eax [ eax + edi + 0xc ]
push eax
call [ EnterCriticalSection@IAT ]
mov [ ebp - 0x4 ] 0xfffffffe
call sub_10038c7b
push 0xfa0
lea eax [ esi + 0xc ]
push eax
call sub_10033652
pop ecx
pop ecx
test eax eax
jne r-xdata
inc [ esi + 0x8 ]
mov [ ebp - 0x1c ] ebx
sub_10038c84
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx eax
and eax 0x1f
sar ecx 0x5
mov ecx [ ecx * 4 + rw-data ]
shl eax 0x6
lea eax [ ecx + eax + 0xc ]
push eax
call [ LeaveCriticalSection@IAT ]
pop ebp
retn
sub_10038cab
push 0x18
push r--data
call sub_1002e7e4
or [ ebp - 0x1c ] 0xffffffff
xor edi edi
mov [ ebp - 0x24 ] edi
push 0xb
call sub_1002eb1b
pop ecx
test eax eax
jne r-xdata
push 0xb
call sub_1002ebde
pop ecx
mov [ ebp - 0x4 ] edi
or eax 0xffffffff
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_10038e3c
mov eax [ ebp - 0x1c ]
mov esi [ edi * 4 + rw-data ]
test esi esi
je r-xdata
call sub_1002e829
retn
push 0x40
push 0x20
call sub_1002c982
pop ecx
pop ecx
mov [ ebp - 0x20 ] eax
test eax eax
je r-xdata
mov [ ebp - 0x20 ] esi
mov eax [ edi * 4 + rw-data ]
add eax 0x800
cmp esi eax
jae r-xdata
lea ecx [ edi * 4 + rw-data ]
mov [ ecx ] eax
add [ rw-data ] 0x20
cmp [ ebp - 0x1c ] 0xffffffff
jne r-xdata
test [ esi + 0x4 ] 0x1
jne r-xdata
shl edi 0x5
mov [ ebp - 0x1c ] edi
mov eax edi
sar eax 0x5
mov ecx edi
and ecx 0x1f
shl ecx 0x6
mov eax [ eax * 4 + rw-data ]
mov [ eax + ecx + 0x4 ] 0x1
push edi
call sub_10038be4
pop ecx
test eax eax
jne r-xdata
mov [ eax + 0x4 ] 0x0
or [ eax ] 0xffffffff
mov [ eax + 0x5 ] 0xa
and [ eax + 0x8 ] 0x0
add eax 0x40
mov [ ebp - 0x20 ] eax
jmp r-xdata
inc edi
jmp r-xdata
add esi 0x40
jmp r-xdata
cmp [ esi + 0x8 ] 0x0
jne r-xdata
or [ ebp - 0x1c ] 0xffffffff
mov edx [ ecx ]
add edx 0x800
cmp eax edx
jae r-xdata
mov [ ebp - 0x28 ] edi
cmp edi 0x40
jge r-xdata
cmp [ ebp - 0x24 ] 0x0
jne r-xdata
push 0xa
call sub_1002ebde
pop ecx
xor ebx ebx
inc ebx
mov [ ebp - 0x4 ] ebx
cmp [ esi + 0x8 ] 0x0
jne r-xdata
lea ebx [ esi + 0xc ]
push ebx
call [ EnterCriticalSection@IAT ]
test [ esi + 0x4 ] 0x1
je r-xdata
and [ ebp - 0x4 ] 0x0
call sub_10038d7e
push 0xfa0
lea eax [ esi + 0xc ]
push eax
call sub_10033652
pop ecx
pop ecx
test eax eax
jne r-xdata
cmp [ ebp - 0x24 ] 0x0
jne r-xdata
push ebx
call [ LeaveCriticalSection@IAT ]
inc [ esi + 0x8 ]
mov [ ebp - 0x24 ] ebx
jmp r-xdata
mov [ esi + 0x4 ] 0x1
or [ esi ] 0xffffffff
sub esi [ edi * 4 + rw-data ]
sar esi 0x6
mov eax edi
shl eax 0x5
add esi eax
mov [ ebp - 0x1c ] esi
sub_10038e48
push ebp
mov ebp esp
push ebx
push esi
push edi
push ebp
push 0x0
push 0x0
push r-xdata
push [ ebp + 0x8 ]
call RtlUnwind
pop ebp
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_10038e68
mov ecx [ esp + 0x4 ]
test [ ecx + 0x4 ] 0x6
mov eax 0x1
je r-xdata
retn
mov eax [ esp + 0x14 ]
mov ecx [ eax - 0x4 ]
xor ecx eax
call sub_10025c8d
push ebp
mov ebp [ eax + 0x10 ]
mov edx [ eax + 0x28 ]
push edx
mov edx [ eax + 0x24 ]
push edx
call sub_10038ead
add esp 0x8
pop ebp
mov eax [ esp + 0x8 ]
mov edx [ esp + 0x10 ]
mov [ edx ] eax
mov eax 0x3
sub_10038ead
push ebx
push esi
push edi
mov eax [ esp + 0x10 ]
push ebp
push eax
push 0xfffffffe
push sub_10038e68
push [ fs : 0x0 ]
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x4 ]
mov [ fs : 0x0 ] eax
mov ecx [ esp + 0x4 ]
mov [ fs : 0x0 ] ecx
add esp 0x18
pop edi
pop esi
pop ebx
retn
cmp [ esp + 0x2c ] 0xffffffff
je r-xdata
lea esi [ esi + esi * 2 ]
mov ecx [ ebx + esi * 4 ]
mov [ esp + 0xc ] ecx
mov [ eax + 0xc ] ecx
cmp [ ebx + esi * 4 + 0x4 ] 0x0
jne r-xdata
cmp esi [ esp + 0x2c ]
jbe r-xdata
jmp r-xdata
push 0x101
mov eax [ ebx + esi * 4 + 0x8 ]
call sub_10038f5d
mov eax [ ebx + esi * 4 + 0x8 ]
call sub_10038f7c
mov eax [ esp + 0x28 ]
mov ebx [ eax + 0x8 ]
mov esi [ eax + 0xc ]
cmp esi 0xffffffff
je r-xdata
sub_10038f54
push ebx
push ecx
mov ebx rw-data
jmp r-xdata
mov [ ebx + 0x8 ] ecx
mov [ ebx + 0x4 ] eax
mov [ ebx + 0xc ] ebp
push ebp
push ecx
push eax
pop eax
pop ecx
pop ebp
pop ecx
pop ebx
retn 0x4
sub_10038f5d
push ebx
push ecx
mov ebx rw-data
mov ecx [ esp + 0xc ]
mov [ ebx + 0x8 ] ecx
mov [ ebx + 0x4 ] eax
mov [ ebx + 0xc ] ebp
push ebp
push ecx
push eax
pop eax
pop ecx
pop ebp
pop ecx
pop ebx
retn 0x4
sub_10038f88
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
xor esi esi
cmp eax esi
jne r-xdata
mov ecx [ rw-data ]
mov [ eax ] ecx
xor eax eax
call sub_1002c068
push esi
push esi
push esi
push esi
push esi
mov [ eax ] 0x16
call sub_100261c9
add esp 0x14
push 0x16
pop eax
jmp r-xdata
pop esi
pop ebp
retn
sub_10038fc1
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
xor esi esi
cmp eax esi
jne r-xdata
mov ecx [ rw-data ]
mov [ eax ] ecx
xor eax eax
call sub_1002c068
push esi
push esi
push esi
push esi
push esi
mov [ eax ] 0x16
call sub_100261c9
add esp 0x14
push 0x16
pop eax
jmp r-xdata
pop esi
pop ebp
retn
sub_10038ffa
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
xor esi esi
cmp eax esi
jne r-xdata
mov ecx [ rw-data ]
mov [ eax ] ecx
xor eax eax
call sub_1002c068
push esi
push esi
push esi
push esi
push esi
mov [ eax ] 0x16
call sub_100261c9
add esp 0x14
push 0x16
pop eax
jmp r-xdata
pop esi
pop ebp
retn
sub_1003907e
push 0x2c
push r--data
call sub_1002e7e4
xor ebx ebx
mov [ ebp - 0x38 ] ebx
mov [ ebp - 0x2c ] ebx
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x28 ] ebx
mov [ ebp - 0x20 ] ebx
push 0x7
call sub_1002ebde
pop ecx
mov [ ebp - 0x4 ] ebx
call sub_10039045
mov [ ebp - 0x20 ] eax
lea eax [ ebp - 0x1c ]
push eax
call sub_10038ffa
pop ecx
cmp eax ebx
je r-xdata
lea eax [ ebp - 0x24 ]
push eax
call sub_10038f88
pop ecx
cmp eax ebx
je r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_100260a1
add esp 0x14
lea eax [ ebp - 0x28 ]
push eax
call sub_10038fc1
pop ecx
cmp eax ebx
je r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_100260a1
add esp 0x14
call sub_1002c498
mov [ ebp - 0x34 ] eax
mov [ rw-data ] ebx
or edi 0xffffffff
mov [ rw-data ] edi
mov [ rw-data ] edi
push r--data
call sub_1003bd0f
pop ecx
mov esi eax
mov [ ebp - 0x3c ] esi
cmp esi ebx
je r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_100260a1
add esp 0x14
mov eax [ rw-data ]
cmp eax ebx
je r-xdata
cmp [ esi ] bl
je r-xdata
push rw-data
call [ GetTimeZoneInformation@IAT ]
cmp eax edi
je r-xdata
push eax
call sub_1002644d
pop ecx
mov [ rw-data ] ebx
mov eax [ rw-data ]
cmp eax ebx
je r-xdata
mov [ ebp - 0x2c ] 0x1
xor ecx ecx
inc ecx
mov [ rw-data ] ecx
mov eax [ rw-data ]
imul eax eax 0x3c
mov [ ebp - 0x1c ] eax
cmp [ rw-data ] bx
je r-xdata
push esi
call sub_10025d30
inc eax
push eax
call sub_1002c93d
pop ecx
pop ecx
mov [ rw-data ] eax
cmp eax ebx
je r-xdata
push eax
push esi
call sub_100292d0
pop ecx
pop ecx
test eax eax
je r-xdata
call sub_1002e829
retn
push 0x3
push esi
push 0x40
mov edi [ ebp - 0x20 ]
push [ edi ]
call sub_100353db
add esp 0x10
test eax eax
je r-xdata
cmp [ rw-data ] bx
je r-xdata
mov edx [ rw-data ]
imul edx edx 0x3c
add eax edx
mov [ ebp - 0x1c ] eax
push esi
push esi
call sub_10025d30
pop ecx
inc eax
push eax
push [ rw-data ]
call sub_1002d40c
add esp 0xc
cmp eax ebx
je r-xdata
mov eax [ rw-data ]
cmp eax ebx
je r-xdata
add esi 0x3
cmp [ esi ] 0x2d
jne r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_100260a1
add esp 0x14
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x28 ] ebx
mov eax [ rw-data ]
cmp eax ebx
je r-xdata
push [ ebp - 0x1c ]
call sub_1003906d
push [ ebp - 0x24 ]
call sub_1003904b
push [ ebp - 0x28 ]
call sub_1003905c
add esp 0xc
mov [ ebp - 0x4 ] 0xfffffffe
call sub_1003932a
cmp [ ebp - 0x2c ] ebx
jne r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_100260a1
add esp 0x14
jmp r-xdata
push eax
call sub_1002644d
pop ecx
push esi
call sub_10039573
pop ecx
imul eax eax 0xe10
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x38 ] 0x1
inc esi
mov eax [ ebp - 0x20 ]
mov eax [ eax ]
mov [ eax ] bl
cmp [ ebp - 0x30 ] ebx
jne r-xdata
mov [ ebp - 0x24 ] ecx
sub eax [ rw-data ]
imul eax eax 0x3c
mov [ ebp - 0x28 ] eax
jmp r-xdata
inc esi
jmp r-xdata
cmp al 0x30
jl r-xdata
mov eax [ ebp - 0x20 ]
mov eax [ eax + 0x4 ]
mov [ eax ] bl
cmp [ ebp - 0x30 ] ebx
jne r-xdata
mov eax [ ebp - 0x20 ]
mov eax [ eax ]
mov [ eax + 0x3f ] bl
jmp r-xdata
lea eax [ ebp - 0x30 ]
push eax
push ebx
push 0x3f
mov eax [ ebp - 0x20 ]
push [ eax ]
push edi
push rw-data
push ebx
push [ ebp - 0x34 ]
mov edi [ WideCharToMultiByte@IAT ]
call edi
test eax eax
je r-xdata
mov al [ esi ]
cmp al 0x2b
je r-xdata
cmp [ esi ] 0x3a
jne r-xdata
cmp al 0x39
jg r-xdata
mov eax [ ebp - 0x20 ]
mov eax [ eax + 0x4 ]
mov [ eax + 0x3f ] bl
jmp r-xdata
lea eax [ ebp - 0x30 ]
push eax
push ebx
push 0x3f
mov eax [ ebp - 0x20 ]
push [ eax + 0x4 ]
push 0xffffffff
push rw-data
push ebx
push [ ebp - 0x34 ]
call edi
test eax eax
je r-xdata
cmp [ ebp - 0x38 ] ebx
je r-xdata
inc esi
push esi
call sub_10039573
pop ecx
imul eax eax 0x3c
add [ ebp - 0x1c ] eax
jmp r-xdata
movsx eax [ esi ]
mov [ ebp - 0x24 ] eax
cmp eax ebx
je r-xdata
neg [ ebp - 0x1c ]
mov al [ esi ]
cmp al 0x30
jge r-xdata
mov eax [ edi + 0x4 ]
mov [ eax ] bl
push 0x3
push esi
push 0x40
push [ edi + 0x4 ]
call sub_100353db
add esp 0x10
test eax eax
je r-xdata
cmp al 0x39
jg r-xdata
cmp [ esi ] 0x3a
jne r-xdata
mov esi [ ebp - 0x1c ]
call sub_1003903f
mov [ eax ] esi
mov esi [ ebp - 0x24 ]
call sub_10039033
mov [ eax ] esi
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_100260a1
add esp 0x14
jmp r-xdata
inc esi
inc esi
push esi
call sub_10039573
pop ecx
add [ ebp - 0x1c ] eax
jmp r-xdata
mov al [ esi ]
cmp al 0x30
jge r-xdata
cmp al 0x39
jg r-xdata
inc esi
sub_100393c4
push 0x8
push r--data
call sub_1002e7e4
xor esi esi
cmp [ rw-data ] esi
jne r-xdata
call sub_1002e829
retn
push 0x6
call sub_1002ebde
pop ecx
mov [ ebp - 0x4 ] esi
cmp [ rw-data ] esi
jne r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_1003940a
call sub_1003907e
inc [ rw-data ]
sub_10039413
mov edi edi
push ebp
mov ebp esp
mov edx [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
push edi
movzx ecx [ edx ]
lea edi [ ecx - 0x41 ]
inc edx
cmp edi 0x19
ja r-xdata
add eax 0x20
test eax eax
je r-xdata
add ecx 0x20
pop edi
sub eax ecx
pop esi
pop ebp
retn
cmp eax ecx
je r-xdata
movzx eax [ esi ]
lea ecx [ eax - 0x41 ]
inc esi
cmp ecx 0x19
ja r-xdata
sub_1003944c
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
push [ ebp + 0x10 ]
lea ecx [ ebp - 0x10 ]
call sub_10029358
xor ebx ebx
cmp [ ebp + 0x8 ] ebx
jne r-xdata
push edi
mov edi [ ebp + 0xc ]
cmp edi ebx
jne r-xdata
call sub_1002c068
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x16
call sub_100261c9
add esp 0x14
cmp [ ebp - 0x4 ] bl
je r-xdata
mov eax [ ebp - 0x10 ]
cmp [ eax + 0x14 ] ebx
jne r-xdata
call sub_1002c068
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x16
call sub_100261c9
add esp 0x14
cmp [ ebp - 0x4 ] bl
je r-xdata
mov eax 0x7fffffff
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
push esi
push edi
push [ ebp + 0x8 ]
call sub_10039413
pop ecx
pop ecx
jmp r-xdata
mov eax 0x7fffffff
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
pop ebx
leave
retn
sub esi eax
mov eax esi
pop esi
cmp esi eax
je r-xdata
cmp [ ebp - 0x4 ] bl
je r-xdata
pop edi
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
mov eax [ ebp + 0x8 ]
movzx eax [ eax ]
lea ecx [ ebp - 0x10 ]
push ecx
push eax
call sub_1002cce3
inc [ ebp + 0x8 ]
mov esi eax
movzx eax [ edi ]
lea ecx [ ebp - 0x10 ]
push ecx
push eax
call sub_1002cce3
add esp 0x10
inc edi
cmp esi ebx
je r-xdata
sub_10039521
mov edi edi
push ebp
mov ebp esp
push esi
xor esi esi
cmp [ rw-data ] esi
jne r-xdata
push esi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_1003944c
add esp 0xc
cmp [ ebp + 0x8 ] esi
jne r-xdata
cmp [ ebp + 0xc ] esi
je r-xdata
call sub_1002c068
push esi
push esi
push esi
push esi
push esi
mov [ eax ] 0x16
call sub_100261c9
add esp 0x14
mov eax 0x7fffffff
jmp r-xdata
pop esi
pop ebp
jmp sub_10039413
pop esi
pop ebp
retn
sub_10039589
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
xor ebx ebx
push esi
push edi
cmp [ ebp + 0x10 ] ebx
je r-xdata
xor eax eax
push [ ebp + 0x14 ]
lea ecx [ ebp - 0x10 ]
call sub_10029358
cmp [ ebp + 0x8 ] ebx
jne r-xdata
mov edi [ ebp + 0xc ]
cmp edi ebx
je r-xdata
call sub_1002c068
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x16
call sub_100261c9
add esp 0x14
cmp [ ebp - 0x4 ] bl
je r-xdata
mov esi 0x7fffffff
cmp [ ebp + 0x10 ] esi
jbe r-xdata
mov eax 0x7fffffff
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
mov eax [ ebp - 0x10 ]
cmp [ eax + 0x14 ] ebx
jne r-xdata
call sub_1002c068
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x16
call sub_100261c9
add esp 0x14
cmp [ ebp - 0x4 ] bl
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
mov eax [ ebp + 0x8 ]
movzx eax [ eax ]
lea ecx [ ebp - 0x10 ]
push ecx
push eax
call sub_1002cce3
inc [ ebp + 0x8 ]
mov esi eax
movzx eax [ edi ]
lea ecx [ ebp - 0x10 ]
push ecx
push eax
call sub_1002cce3
add esp 0x10
inc edi
dec [ ebp + 0x10 ]
je r-xdata
push [ ebp + 0x10 ]
push edi
push [ ebp + 0x8 ]
call sub_1003bda0
add esp 0xc
mov eax esi
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
sub esi eax
mov eax esi
jmp r-xdata
cmp esi ebx
je r-xdata
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
jmp r-xdata
cmp [ ebp - 0x4 ] bl
je r-xdata
cmp esi eax
je r-xdata
sub_1003967b
mov edi edi
push ebp
mov ebp esp
push esi
xor esi esi
cmp [ rw-data ] esi
jne r-xdata
push esi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_10039589
add esp 0x10
cmp [ ebp + 0x8 ] esi
jne r-xdata
cmp [ ebp + 0xc ] esi
je r-xdata
call sub_1002c068
push esi
push esi
push esi
push esi
push esi
mov [ eax ] 0x16
call sub_100261c9
add esp 0x14
mov eax 0x7fffffff
jmp r-xdata
cmp [ ebp + 0x10 ] 0x7fffffff
ja r-xdata
pop esi
pop ebp
retn
pop esi
pop ebp
jmp sub_1003bda0
sub_100396d9
mov edi edi
push ebp
mov ebp esp
mov eax 0xffff
sub esp 0x14
cmp [ ebp + 0x8 ] ax
jne r-xdata
mov eax 0x100
cmp [ ebp + 0x8 ] ax
jae r-xdata
and [ ebp - 0x4 ] 0x0
jmp r-xdata
push [ ebp + 0x10 ]
lea ecx [ ebp - 0x14 ]
call sub_10029358
mov eax [ ebp - 0x14 ]
push [ eax + 0x14 ]
push [ eax + 0x4 ]
lea eax [ ebp - 0x4 ]
push eax
push 0x1
lea eax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x14 ]
push 0x1
push eax
call sub_1002ad47
add esp 0x1c
test eax eax
jne r-xdata
movzx eax [ ebp + 0x8 ]
mov ecx [ rw-data ]
mov ax [ ecx + eax * 2 ]
and ax [ ebp + 0xc ]
movzx eax ax
mov [ ebp - 0x4 ] eax
jmp r-xdata
movzx eax [ ebp - 0x4 ]
movzx ecx [ ebp + 0xc ]
and eax ecx
leave
retn
cmp [ ebp - 0x8 ] 0x0
je r-xdata
and [ ebp - 0x4 ] eax
mov eax [ ebp - 0xc ]
and [ eax + 0x70 ] 0xfffffffd
sub_10039770
push ebp
mov ebp esp
push edi
mov edi [ ebp + 0x8 ]
xor eax eax
or ecx 0xffffffff
[ edi ]
add ecx 0x1
neg ecx
sub edi 0x1
mov al [ ebp + 0xc ]
std
[ edi ]
add edi 0x1
cmp [ edi ] al
je r-xdata
mov eax edi
xor eax eax
jmp r-xdata
cld
pop edi
leave
retn
sub_1003979d
mov edi edi
push ebp
mov ebp esp
sub esp 0x28
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
push [ ebp + 0x10 ]
mov edi [ ebp + 0xc ]
lea ecx [ ebp - 0x24 ]
call sub_10029358
lea eax [ ebp - 0x24 ]
push eax
xor ebx ebx
push ebx
push ebx
push ebx
push ebx
push edi
lea eax [ ebp - 0x28 ]
push eax
lea eax [ ebp - 0x10 ]
push eax
call sub_1003a6f3
mov [ ebp - 0x14 ] eax
lea eax [ ebp - 0x10 ]
push esi
push eax
call sub_10039c6b
add esp 0x28
test [ ebp - 0x14 ] 0x3
jne r-xdata
test [ ebp - 0x14 ] 0x1
jne r-xdata
cmp eax 0x1
jne r-xdata
cmp [ ebp - 0x18 ] bl
je r-xdata
test [ ebp - 0x14 ] 0x2
jne r-xdata
cmp eax 0x2
jne r-xdata
cmp [ ebp - 0x18 ] bl
je r-xdata
push 0x4
jmp r-xdata
mov eax [ ebp - 0x1c ]
and [ eax + 0x70 ] 0xfffffffd
cmp [ ebp - 0x18 ] bl
je r-xdata
push 0x3
mov eax [ ebp - 0x1c ]
and [ eax + 0x70 ] 0xfffffffd
pop eax
jmp r-xdata
xor eax eax
mov eax [ ebp - 0x1c ]
and [ eax + 0x70 ] 0xfffffffd
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_10025c8d
leave
retn
sub_10039845
mov edi edi
push ebp
mov ebp esp
sub esp 0x28
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
push [ ebp + 0x10 ]
mov edi [ ebp + 0xc ]
lea ecx [ ebp - 0x24 ]
call sub_10029358
lea eax [ ebp - 0x24 ]
push eax
xor ebx ebx
push ebx
push ebx
push ebx
push ebx
push edi
lea eax [ ebp - 0x28 ]
push eax
lea eax [ ebp - 0x10 ]
push eax
call sub_1003a6f3
mov [ ebp - 0x14 ] eax
lea eax [ ebp - 0x10 ]
push esi
push eax
call sub_1003a1af
add esp 0x28
test [ ebp - 0x14 ] 0x3
jne r-xdata
test [ ebp - 0x14 ] 0x1
jne r-xdata
cmp eax 0x1
jne r-xdata
cmp [ ebp - 0x18 ] bl
je r-xdata
test [ ebp - 0x14 ] 0x2
jne r-xdata
cmp eax 0x2
jne r-xdata
cmp [ ebp - 0x18 ] bl
je r-xdata
push 0x4
jmp r-xdata
mov eax [ ebp - 0x1c ]
and [ eax + 0x70 ] 0xfffffffd
cmp [ ebp - 0x18 ] bl
je r-xdata
push 0x3
mov eax [ ebp - 0x1c ]
and [ eax + 0x70 ] 0xfffffffd
pop eax
jmp r-xdata
xor eax eax
mov eax [ ebp - 0x1c ]
and [ eax + 0x70 ] 0xfffffffd
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_10025c8d
leave
retn
sub_100398ed
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x14 ]
push ebx
push esi
mov esi [ ebp + 0x8 ]
xor ebx ebx
push edi
mov edi [ ecx + 0xc ]
cmp esi ebx
jne r-xdata
cmp [ ebp + 0xc ] ebx
jbe r-xdata
call sub_1002c068
push 0x16
pop esi
mov [ eax ] esi
mov edx [ ebp + 0x10 ]
cmp edx ebx
mov [ esi ] bl
jle r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
xor eax eax
mov eax edx
jmp r-xdata
cmp edx ebx
mov [ esi ] 0x30
lea eax [ esi + 0x1 ]
jle r-xdata
call sub_1002c068
push 0x22
pop ecx
mov [ eax ] ecx
mov esi ecx
jmp r-xdata
inc eax
cmp [ ebp + 0xc ] eax
ja r-xdata
cmp edx ebx
mov [ eax ] bl
jl r-xdata
mov cl [ edi ]
cmp cl bl
je r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_100261c9
add esp 0x14
mov eax esi
jmp r-xdata
cmp [ esi ] 0x31
jne r-xdata
cmp [ edi ] 0x35
jl r-xdata
push 0x30
pop ecx
movsx ecx cl
inc edi
jmp r-xdata
lea edi [ esi + 0x1 ]
push edi
call sub_10025d30
inc eax
push eax
push edi
push esi
call sub_1002d4f0
add esp 0x10
inc [ ecx + 0x4 ]
jmp r-xdata
jmp r-xdata
mov ecx [ ebp + 0x14 ]
mov [ eax ] cl
inc eax
dec edx
cmp edx ebx
jg r-xdata
xor eax eax
dec eax
cmp [ eax ] 0x39
je r-xdata
mov [ eax ] 0x30
inc [ eax ]
sub_100399ac
mov edi edi
push ebp
mov ebp esp
push ecx
mov edx [ ebp + 0xc ]
movzx eax [ edx + 0x6 ]
push ebx
mov ecx eax
push esi
push edi
shr ecx 0x4
and eax 0x8000
mov edi 0x7ff
and ecx edi
mov [ ebp + 0xc ] eax
mov eax [ edx + 0x4 ]
mov edx [ edx ]
movzx ebx cx
mov esi 0x80000000
and eax 0xfffff
mov [ ebp - 0x4 ] esi
test ebx ebx
je r-xdata
xor ebx ebx
cmp eax ebx
jne r-xdata
cmp ebx edi
je r-xdata
add ecx 0x3c01
mov [ ebp - 0x4 ] ebx
cmp edx ebx
jne r-xdata
mov edi 0x7fff
jmp r-xdata
add ecx 0x3c00
jmp r-xdata
mov ecx [ ebp + 0xc ]
or ecx edi
mov ecx [ eax ]
mov edx [ eax + 0x4 ]
mov ebx ecx
add edx edx
shr ebx 0x1f
or edx ebx
add ecx ecx
add edi 0xffff
mov [ eax + 0x4 ] edx
mov [ eax ] ecx
test esi edx
je r-xdata
mov eax [ ebp + 0x8 ]
mov cx [ ebp + 0xc ]
mov [ eax + 0x4 ] ebx
mov [ eax ] ebx
jmp r-xdata
mov ecx edx
shr ecx 0x15
shl eax 0xb
or ecx eax
or ecx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
shl edx 0xb
mov [ eax + 0x4 ] ecx
mov [ eax ] edx
test esi ecx
jne r-xdata
movzx edi cx
pop edi
pop esi
mov [ eax + 0x8 ] cx
pop ebx
leave
retn
sub_10039a69
mov edi edi
push ebp
mov ebp esp
sub esp 0x30
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x14 ]
push ebx
mov ebx [ ebp + 0x10 ]
push esi
mov [ ebp - 0x30 ] eax
push edi
lea eax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x10 ]
push eax
call sub_100399ac
pop ecx
pop ecx
lea eax [ ebp - 0x2c ]
push eax
push 0x0
push 0x11
sub esp 0xc
lea esi [ ebp - 0x10 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsw [ edi ] [ esi ]
call sub_1003be01
mov esi [ ebp - 0x30 ]
mov [ ebx + 0x8 ] eax
movsx eax [ ebp - 0x2a ]
mov [ ebx ] eax
movsx eax [ ebp - 0x2c ]
mov [ ebx + 0x4 ] eax
lea eax [ ebp - 0x28 ]
push eax
push [ ebp + 0x18 ]
push esi
call sub_1002d40c
add esp 0x24
test eax eax
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
mov [ ebx + 0xc ] esi
pop esi
mov eax ebx
xor ecx ebp
pop ebx
call sub_10025c8d
leave
retn
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_100260a1
add esp 0x14
sub_10039b00
push edi
push esi
push ebp
xor edi edi
xor ebp ebp
mov eax [ esp + 0x14 ]
or eax eax
jge r-xdata
mov eax [ esp + 0x1c ]
or eax eax
jge r-xdata
inc edi
inc ebp
mov edx [ esp + 0x10 ]
neg eax
neg edx
sbb eax 0x0
mov [ esp + 0x14 ] eax
mov [ esp + 0x10 ] edx
or eax eax
jne r-xdata
inc edi
mov edx [ esp + 0x18 ]
neg eax
neg edx
sbb eax 0x0
mov [ esp + 0x1c ] eax
mov [ esp + 0x18 ] edx
mov ebx eax
mov ecx [ esp + 0x18 ]
mov edx [ esp + 0x14 ]
mov eax [ esp + 0x10 ]
mov ecx [ esp + 0x18 ]
mov eax [ esp + 0x14 ]
xor edx edx
div ecx
mov ebx eax
mov eax [ esp + 0x10 ]
div ecx
mov esi eax
mov eax ebx
mul [ esp + 0x18 ]
mov ecx eax
mov eax esi
mul [ esp + 0x18 ]
add edx ecx
jmp r-xdata
shr ebx 0x1
rcr ecx 0x1
shr edx 0x1
rcr eax 0x1
or ebx ebx
jne r-xdata
div ecx
mov esi eax
mul [ esp + 0x1c ]
mov ecx eax
mov eax [ esp + 0x18 ]
mul esi
add edx ecx
jb r-xdata
sub eax [ esp + 0x10 ]
sbb edx [ esp + 0x14 ]
dec ebp
jns r-xdata
dec esi
sub eax [ esp + 0x18 ]
sbb edx [ esp + 0x1c ]
cmp edx [ esp + 0x14 ]
ja r-xdata
mov ecx edx
mov edx ebx
mov ebx ecx
mov ecx eax
mov eax esi
dec edi
jne r-xdata
neg edx
neg eax
sbb edx 0x0
jb r-xdata
pop ebp
pop esi
pop edi
retn 0x10
neg edx
neg eax
sbb edx 0x0
xor ebx ebx
cmp eax [ esp + 0x10 ]
jbe r-xdata
sub_10039be0
cmp cl 0x40
jae r-xdata
xor eax eax
xor edx edx
retn
cmp cl 0x20
jae r-xdata
mov eax edx
xor edx edx
and cl 0x1f
shr eax cl
retn
shrd eax edx cl
shr edx cl
retn
sub_10039bff
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
mov ecx [ ebp + 0xc ]
and eax 0xfff7ffff
and ecx eax
push esi
test ecx 0xfcf0fce0
je r-xdata
mov esi [ ebp + 0x8 ]
push eax
push [ ebp + 0xc ]
test esi esi
je r-xdata
push edi
mov edi [ ebp + 0x8 ]
xor esi esi
cmp edi esi
je r-xdata
call sub_1003c853
call sub_1003c853
mov [ esi ] eax
jmp r-xdata
call sub_1002c068
push 0x16
pop edi
push esi
push esi
push esi
push esi
push esi
mov [ eax ] edi
call sub_100261c9
add esp 0x14
mov eax edi
pop edi
jmp r-xdata
push esi
push esi
call sub_1003c853
pop ecx
pop ecx
mov [ edi ] eax
pop ecx
pop ecx
xor eax eax
pop esi
pop ebp
retn
sub_10039c6b
mov edi edi
push ebp
mov ebp esp
sub esp 0x2c
mov eax [ ebp + 0x8 ]
movzx ecx [ eax + 0xa ]
push ebx
mov ebx ecx
and ecx 0x8000
mov [ ebp - 0x14 ] ecx
mov ecx [ eax + 0x6 ]
mov [ ebp - 0x20 ] ecx
mov ecx [ eax + 0x2 ]
movzx eax [ eax ]
and ebx 0x7fff
sub ebx 0x3fff
shl eax 0x10
push edi
mov [ ebp - 0x1c ] ecx
mov [ ebp - 0x18 ] eax
cmp ebx 0xffffc001
jne r-xdata
and [ ebp + 0x8 ] 0x0
push esi
lea esi [ ebp - 0x20 ]
lea edi [ ebp - 0x2c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi [ rw-data ]
dec esi
lea ecx [ esi + 0x1 ]
mov eax ecx
cdq
and edx 0x1f
add eax edx
sar eax 0x5
mov edx ecx
and edx 0x8000001f
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0xc ] eax
jns r-xdata
xor ebx ebx
xor eax eax
lea edi [ ebp + eax * 4 - 0x20 ]
push 0x1f
xor eax eax
pop ecx
sub ecx edx
inc eax
shl eax cl
mov [ ebp - 0x8 ] ecx
test [ edi ] eax
je r-xdata
dec edx
or edx 0xffffffe0
inc edx
xor eax eax
lea edi [ ebp - 0x20 ]
stosd [ edi ]
stosd [ edi ]
push 0x2
stosd [ edi ]
pop eax
jmp r-xdata
inc eax
cmp eax 0x3
jl r-xdata
mov ecx [ ebp - 0x8 ]
or eax 0xffffffff
shl eax cl
and [ edi ] eax
mov eax [ ebp - 0xc ]
inc eax
cmp eax 0x3
jge r-xdata
mov eax [ ebp - 0xc ]
or edx 0xffffffff
shl edx cl
not edx
test [ ebp + eax * 4 - 0x20 ] edx
jmp r-xdata
push 0x1f
pop ecx
sub ecx [ rw-data ]
shl ebx cl
mov ecx [ ebp - 0x14 ]
neg ecx
sbb ecx ecx
and ecx 0x80000000
or ebx ecx
mov ecx [ rw-data ]
or ebx [ ebp - 0x20 ]
cmp ecx 0x40
jne r-xdata
cmp [ ebp + eax * 4 - 0x20 ] ebx
jne r-xdata
xor eax eax
jmp r-xdata
cmp [ ebp + 0x8 ] 0x0
je r-xdata
push 0x3
pop ecx
lea edi [ ebp + eax * 4 - 0x20 ]
sub ecx eax
xor eax eax
[ edi ]
jne r-xdata
cmp ecx 0x20
jne r-xdata
mov ecx [ ebp + 0xc ]
mov edx [ ebp - 0x1c ]
mov [ ecx + 0x4 ] ebx
mov [ ecx ] edx
jmp r-xdata
mov eax [ rw-data ]
mov ecx eax
sub ecx [ rw-data ]
cmp ebx ecx
jge r-xdata
inc ebx
mov eax esi
cdq
push 0x1f
pop ecx
and edx ecx
add eax edx
sar eax 0x5
and esi 0x8000001f
jns r-xdata
inc eax
cmp eax 0x3
jl r-xdata
pop edi
pop ebx
leave
retn
mov ecx [ ebp + 0xc ]
mov [ ecx ] ebx
cmp ebx eax
jg r-xdata
xor eax eax
lea edi [ ebp - 0x20 ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
jmp r-xdata
and [ ebp - 0x4 ] 0x0
sub ecx esi
xor edx edx
inc edx
shl edx cl
lea ecx [ ebp + eax * 4 - 0x20 ]
mov esi [ ecx ]
add esi edx
mov [ ebp + 0x8 ] esi
mov esi [ ecx ]
cmp [ ebp + 0x8 ] esi
jb r-xdata
dec esi
or esi 0xffffffe0
inc esi
cmp [ ebp + eax * 4 - 0x20 ] 0x0
jmp r-xdata
cmp ebx [ rw-data ]
mov ecx [ rw-data ]
jl r-xdata
sub eax [ ebp - 0x10 ]
lea esi [ ebp - 0x2c ]
mov ecx eax
lea edi [ ebp - 0x20 ]
movsd [ edi ] [ esi ]
cdq
and edx 0x1f
add eax edx
movsd [ edi ] [ esi ]
mov edx ecx
sar eax 0x5
and edx 0x8000001f
movsd [ edi ] [ esi ]
jns r-xdata
push 0x2
xor ebx ebx
pop eax
jmp r-xdata
mov [ ebp - 0x4 ] 0x1
cmp [ ebp + 0x8 ] edx
jmp r-xdata
mov eax [ rw-data ]
and [ ebp - 0x20 ] 0x7fffffff
add ebx eax
mov eax ecx
cdq
and edx 0x1f
add eax edx
mov edx ecx
sar eax 0x5
and edx 0x8000001f
jns r-xdata
xor eax eax
lea edi [ ebp - 0x20 ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
or [ ebp - 0x20 ] 0x80000000
mov eax ecx
cdq
and edx 0x1f
add eax edx
mov edx ecx
sar eax 0x5
and edx 0x8000001f
jns r-xdata
and [ ebp - 0xc ] 0x0
and [ ebp + 0x8 ] 0x0
or edi 0xffffffff
mov ecx edx
shl edi cl
mov [ ebp - 0x4 ] 0x20
sub [ ebp - 0x4 ] edx
not edi
dec edx
or edx 0xffffffe0
inc edx
pop esi
test ecx ecx
je r-xdata
mov [ ebp + 0x8 ] ecx
jae r-xdata
and [ ebp - 0xc ] 0x0
and [ ebp + 0x8 ] 0x0
or esi 0xffffffff
mov ecx edx
shl esi cl
mov [ ebp - 0x4 ] 0x20
sub [ ebp - 0x4 ] edx
not esi
dec edx
or edx 0xffffffe0
inc edx
and [ ebp - 0xc ] 0x0
and [ ebp + 0x8 ] 0x0
or edi 0xffffffff
mov ecx edx
shl edi cl
mov [ ebp - 0x4 ] 0x20
sub [ ebp - 0x4 ] edx
not edi
dec edx
or edx 0xffffffe0
inc edx
mov ebx [ ebp + 0x8 ]
lea ebx [ ebp + ebx * 4 - 0x20 ]
mov esi [ ebx ]
mov ecx esi
and ecx edi
mov [ ebp - 0x10 ] ecx
mov ecx edx
shr esi cl
mov ecx [ ebp - 0x4 ]
or esi [ ebp - 0xc ]
mov [ ebx ] esi
mov esi [ ebp - 0x10 ]
shl esi cl
inc [ ebp + 0x8 ]
cmp [ ebp + 0x8 ] 0x3
mov [ ebp - 0xc ] esi
jl r-xdata
mov esi eax
push 0x2
shl esi 0x2
lea ecx [ ebp - 0x18 ]
pop edx
sub ecx esi
and [ ebp - 0x4 ] 0x0
lea ecx [ ebp + eax * 4 - 0x20 ]
mov edx [ ecx ]
lea esi [ edx + 0x1 ]
mov [ ebp + 0x8 ] esi
cmp esi edx
jb r-xdata
dec eax
mov edx [ ebp + 0x8 ]
mov [ ecx ] edx
mov ecx [ ebp - 0x4 ]
jns r-xdata
mov ecx [ ebp + 0x8 ]
mov edi [ ebp + ecx * 4 - 0x20 ]
mov ecx edi
and ecx esi
mov [ ebp - 0x10 ] ecx
mov ecx edx
shr edi cl
mov ecx [ ebp + 0x8 ]
or edi [ ebp - 0xc ]
mov [ ebp + ecx * 4 - 0x20 ] edi
mov edi [ ebp - 0x10 ]
mov ecx [ ebp - 0x4 ]
shl edi cl
inc [ ebp + 0x8 ]
cmp [ ebp + 0x8 ] 0x3
mov [ ebp - 0xc ] edi
jl r-xdata
mov esi eax
push 0x2
shl esi 0x2
lea ecx [ ebp - 0x18 ]
pop edx
sub ecx esi
mov ebx [ ebp + 0x8 ]
lea ebx [ ebp + ebx * 4 - 0x20 ]
mov esi [ ebx ]
mov ecx esi
and ecx edi
mov [ ebp - 0x10 ] ecx
mov ecx edx
shr esi cl
mov ecx [ ebp - 0x4 ]
or esi [ ebp - 0xc ]
mov [ ebx ] esi
mov esi [ ebp - 0x10 ]
shl esi cl
inc [ ebp + 0x8 ]
cmp [ ebp + 0x8 ] 0x3
mov [ ebp - 0xc ] esi
jl r-xdata
mov esi eax
push 0x2
shl esi 0x2
lea ecx [ ebp - 0x18 ]
pop edx
sub ecx esi
and [ ebp + edx * 4 - 0x20 ] 0x0
mov esi [ ecx ]
mov [ ebp + edx * 4 - 0x20 ] esi
jmp r-xdata
cmp esi 0x1
and [ ebp + edx * 4 - 0x20 ] 0x0
mov esi [ ecx ]
mov [ ebp + edx * 4 - 0x20 ] esi
jmp r-xdata
and [ ebp + edx * 4 - 0x20 ] 0x0
mov esi [ ecx ]
mov [ ebp + edx * 4 - 0x20 ] esi
jmp r-xdata
cmp edx eax
jl r-xdata
mov esi [ rw-data ]
dec esi
lea ecx [ esi + 0x1 ]
mov eax ecx
cdq
and edx 0x1f
add eax edx
sar eax 0x5
mov edx ecx
and edx 0x8000001f
mov [ ebp - 0xc ] eax
jns r-xdata
dec edx
sub ecx 0x4
test edx edx
jge r-xdata
cmp edx eax
jl r-xdata
xor eax eax
dec edx
sub ecx 0x4
test edx edx
jge r-xdata
cmp edx eax
jl r-xdata
mov eax [ rw-data ]
mov ecx [ rw-data ]
lea ebx [ ecx + eax ]
xor eax eax
inc eax
jmp r-xdata
dec edx
sub ecx 0x4
test edx edx
jge r-xdata
push 0x1f
pop ecx
sub ecx edx
xor edx edx
inc edx
shl edx cl
lea ebx [ ebp + eax * 4 - 0x20 ]
mov [ ebp - 0x10 ] ecx
test [ ebx ] edx
je r-xdata
dec edx
or edx 0xffffffe0
inc edx
mov ecx [ ebp - 0x10 ]
or eax 0xffffffff
shl eax cl
and [ ebx ] eax
mov eax [ ebp - 0xc ]
inc eax
cmp eax 0x3
jge r-xdata
or edx 0xffffffff
shl edx cl
not edx
test [ ebp + eax * 4 - 0x20 ] edx
jmp r-xdata
mov ecx [ rw-data ]
inc ecx
mov eax ecx
cdq
and edx 0x1f
add eax edx
mov edx ecx
sar eax 0x5
and edx 0x8000001f
jns r-xdata
push 0x3
pop ecx
lea edi [ ebp + eax * 4 - 0x20 ]
sub ecx eax
xor eax eax
[ edi ]
jne r-xdata
and [ ebp - 0xc ] 0x0
and [ ebp + 0x8 ] 0x0
or edi 0xffffffff
mov ecx edx
shl edi cl
mov [ ebp - 0x4 ] 0x20
sub [ ebp - 0x4 ] edx
not edi
dec edx
or edx 0xffffffe0
inc edx
mov eax esi
cdq
push 0x1f
pop ecx
and edx ecx
add eax edx
sar eax 0x5
and esi 0x8000001f
jns r-xdata
inc eax
cmp eax 0x3
jl r-xdata
mov ebx [ ebp + 0x8 ]
lea ebx [ ebp + ebx * 4 - 0x20 ]
mov esi [ ebx ]
mov ecx esi
and ecx edi
mov [ ebp - 0x10 ] ecx
mov ecx edx
shr esi cl
mov ecx [ ebp - 0x4 ]
or esi [ ebp - 0xc ]
mov [ ebx ] esi
mov esi [ ebp - 0x10 ]
shl esi cl
inc [ ebp + 0x8 ]
cmp [ ebp + 0x8 ] 0x3
mov [ ebp - 0xc ] esi
jl r-xdata
mov esi eax
push 0x2
shl esi 0x2
lea ecx [ ebp - 0x18 ]
pop edx
sub ecx esi
and [ ebp + 0x8 ] 0x0
xor edx edx
sub ecx esi
inc edx
shl edx cl
lea ecx [ ebp + eax * 4 - 0x20 ]
mov esi [ ecx ]
lea edi [ esi + edx ]
cmp edi esi
jb r-xdata
dec esi
or esi 0xffffffe0
inc esi
cmp [ ebp + eax * 4 - 0x20 ] 0x0
jmp r-xdata
and [ ebp + edx * 4 - 0x20 ] 0x0
mov esi [ ecx ]
mov [ ebp + edx * 4 - 0x20 ] esi
jmp r-xdata
mov [ ebp + 0x8 ] 0x1
cmp edi edx
jae r-xdata
cmp edx eax
jl r-xdata
dec edx
sub ecx 0x4
test edx edx
jge r-xdata
dec eax
jns r-xdata
mov [ ecx ] edi
mov ecx [ ebp + 0x8 ]
jmp r-xdata
test ecx ecx
je r-xdata
lea ecx [ ebp + eax * 4 - 0x20 ]
mov edx [ ecx ]
lea esi [ edx + 0x1 ]
xor edi edi
cmp esi edx
jb r-xdata
xor edi edi
inc edi
cmp esi 0x1
jae r-xdata
mov [ ecx ] esi
mov ecx edi
sub_1003a1af
mov edi edi
push ebp
mov ebp esp
sub esp 0x2c
mov eax [ ebp + 0x8 ]
movzx ecx [ eax + 0xa ]
push ebx
mov ebx ecx
and ecx 0x8000
mov [ ebp - 0x14 ] ecx
mov ecx [ eax + 0x6 ]
mov [ ebp - 0x20 ] ecx
mov ecx [ eax + 0x2 ]
movzx eax [ eax ]
and ebx 0x7fff
sub ebx 0x3fff
shl eax 0x10
push edi
mov [ ebp - 0x1c ] ecx
mov [ ebp - 0x18 ] eax
cmp ebx 0xffffc001
jne r-xdata
and [ ebp + 0x8 ] 0x0
push esi
lea esi [ ebp - 0x20 ]
lea edi [ ebp - 0x2c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi [ rw-data ]
dec esi
lea ecx [ esi + 0x1 ]
mov eax ecx
cdq
and edx 0x1f
add eax edx
sar eax 0x5
mov edx ecx
and edx 0x8000001f
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0xc ] eax
jns r-xdata
xor ebx ebx
xor eax eax
lea edi [ ebp + eax * 4 - 0x20 ]
push 0x1f
xor eax eax
pop ecx
sub ecx edx
inc eax
shl eax cl
mov [ ebp - 0x8 ] ecx
test [ edi ] eax
je r-xdata
dec edx
or edx 0xffffffe0
inc edx
xor eax eax
lea edi [ ebp - 0x20 ]
stosd [ edi ]
stosd [ edi ]
push 0x2
stosd [ edi ]
pop eax
jmp r-xdata
inc eax
cmp eax 0x3
jl r-xdata
mov ecx [ ebp - 0x8 ]
or eax 0xffffffff
shl eax cl
and [ edi ] eax
mov eax [ ebp - 0xc ]
inc eax
cmp eax 0x3
jge r-xdata
mov eax [ ebp - 0xc ]
or edx 0xffffffff
shl edx cl
not edx
test [ ebp + eax * 4 - 0x20 ] edx
jmp r-xdata
push 0x1f
pop ecx
sub ecx [ rw-data ]
shl ebx cl
mov ecx [ ebp - 0x14 ]
neg ecx
sbb ecx ecx
and ecx 0x80000000
or ebx ecx
mov ecx [ rw-data ]
or ebx [ ebp - 0x20 ]
cmp ecx 0x40
jne r-xdata
cmp [ ebp + eax * 4 - 0x20 ] ebx
jne r-xdata
xor eax eax
jmp r-xdata
cmp [ ebp + 0x8 ] 0x0
je r-xdata
push 0x3
pop ecx
lea edi [ ebp + eax * 4 - 0x20 ]
sub ecx eax
xor eax eax
[ edi ]
jne r-xdata
cmp ecx 0x20
jne r-xdata
mov ecx [ ebp + 0xc ]
mov edx [ ebp - 0x1c ]
mov [ ecx + 0x4 ] ebx
mov [ ecx ] edx
jmp r-xdata
mov eax [ rw-data ]
mov ecx eax
sub ecx [ rw-data ]
cmp ebx ecx
jge r-xdata
inc ebx
mov eax esi
cdq
push 0x1f
pop ecx
and edx ecx
add eax edx
sar eax 0x5
and esi 0x8000001f
jns r-xdata
inc eax
cmp eax 0x3
jl r-xdata
pop edi
pop ebx
leave
retn
mov ecx [ ebp + 0xc ]
mov [ ecx ] ebx
cmp ebx eax
jg r-xdata
xor eax eax
lea edi [ ebp - 0x20 ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
jmp r-xdata
and [ ebp - 0x4 ] 0x0
sub ecx esi
xor edx edx
inc edx
shl edx cl
lea ecx [ ebp + eax * 4 - 0x20 ]
mov esi [ ecx ]
add esi edx
mov [ ebp + 0x8 ] esi
mov esi [ ecx ]
cmp [ ebp + 0x8 ] esi
jb r-xdata
dec esi
or esi 0xffffffe0
inc esi
cmp [ ebp + eax * 4 - 0x20 ] 0x0
jmp r-xdata
cmp ebx [ rw-data ]
mov ecx [ rw-data ]
jl r-xdata
sub eax [ ebp - 0x10 ]
lea esi [ ebp - 0x2c ]
mov ecx eax
lea edi [ ebp - 0x20 ]
movsd [ edi ] [ esi ]
cdq
and edx 0x1f
add eax edx
movsd [ edi ] [ esi ]
mov edx ecx
sar eax 0x5
and edx 0x8000001f
movsd [ edi ] [ esi ]
jns r-xdata
push 0x2
xor ebx ebx
pop eax
jmp r-xdata
mov [ ebp - 0x4 ] 0x1
cmp [ ebp + 0x8 ] edx
jmp r-xdata
mov eax [ rw-data ]
and [ ebp - 0x20 ] 0x7fffffff
add ebx eax
mov eax ecx
cdq
and edx 0x1f
add eax edx
mov edx ecx
sar eax 0x5
and edx 0x8000001f
jns r-xdata
xor eax eax
lea edi [ ebp - 0x20 ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
or [ ebp - 0x20 ] 0x80000000
mov eax ecx
cdq
and edx 0x1f
add eax edx
mov edx ecx
sar eax 0x5
and edx 0x8000001f
jns r-xdata
and [ ebp - 0xc ] 0x0
and [ ebp + 0x8 ] 0x0
or edi 0xffffffff
mov ecx edx
shl edi cl
mov [ ebp - 0x4 ] 0x20
sub [ ebp - 0x4 ] edx
not edi
dec edx
or edx 0xffffffe0
inc edx
pop esi
test ecx ecx
je r-xdata
mov [ ebp + 0x8 ] ecx
jae r-xdata
and [ ebp - 0xc ] 0x0
and [ ebp + 0x8 ] 0x0
or esi 0xffffffff
mov ecx edx
shl esi cl
mov [ ebp - 0x4 ] 0x20
sub [ ebp - 0x4 ] edx
not esi
dec edx
or edx 0xffffffe0
inc edx
and [ ebp - 0xc ] 0x0
and [ ebp + 0x8 ] 0x0
or edi 0xffffffff
mov ecx edx
shl edi cl
mov [ ebp - 0x4 ] 0x20
sub [ ebp - 0x4 ] edx
not edi
dec edx
or edx 0xffffffe0
inc edx
mov ebx [ ebp + 0x8 ]
lea ebx [ ebp + ebx * 4 - 0x20 ]
mov esi [ ebx ]
mov ecx esi
and ecx edi
mov [ ebp - 0x10 ] ecx
mov ecx edx
shr esi cl
mov ecx [ ebp - 0x4 ]
or esi [ ebp - 0xc ]
mov [ ebx ] esi
mov esi [ ebp - 0x10 ]
shl esi cl
inc [ ebp + 0x8 ]
cmp [ ebp + 0x8 ] 0x3
mov [ ebp - 0xc ] esi
jl r-xdata
mov esi eax
push 0x2
shl esi 0x2
lea ecx [ ebp - 0x18 ]
pop edx
sub ecx esi
and [ ebp - 0x4 ] 0x0
lea ecx [ ebp + eax * 4 - 0x20 ]
mov edx [ ecx ]
lea esi [ edx + 0x1 ]
mov [ ebp + 0x8 ] esi
cmp esi edx
jb r-xdata
dec eax
mov edx [ ebp + 0x8 ]
mov [ ecx ] edx
mov ecx [ ebp - 0x4 ]
jns r-xdata
mov ecx [ ebp + 0x8 ]
mov edi [ ebp + ecx * 4 - 0x20 ]
mov ecx edi
and ecx esi
mov [ ebp - 0x10 ] ecx
mov ecx edx
shr edi cl
mov ecx [ ebp + 0x8 ]
or edi [ ebp - 0xc ]
mov [ ebp + ecx * 4 - 0x20 ] edi
mov edi [ ebp - 0x10 ]
mov ecx [ ebp - 0x4 ]
shl edi cl
inc [ ebp + 0x8 ]
cmp [ ebp + 0x8 ] 0x3
mov [ ebp - 0xc ] edi
jl r-xdata
mov esi eax
push 0x2
shl esi 0x2
lea ecx [ ebp - 0x18 ]
pop edx
sub ecx esi
mov ebx [ ebp + 0x8 ]
lea ebx [ ebp + ebx * 4 - 0x20 ]
mov esi [ ebx ]
mov ecx esi
and ecx edi
mov [ ebp - 0x10 ] ecx
mov ecx edx
shr esi cl
mov ecx [ ebp - 0x4 ]
or esi [ ebp - 0xc ]
mov [ ebx ] esi
mov esi [ ebp - 0x10 ]
shl esi cl
inc [ ebp + 0x8 ]
cmp [ ebp + 0x8 ] 0x3
mov [ ebp - 0xc ] esi
jl r-xdata
mov esi eax
push 0x2
shl esi 0x2
lea ecx [ ebp - 0x18 ]
pop edx
sub ecx esi
and [ ebp + edx * 4 - 0x20 ] 0x0
mov esi [ ecx ]
mov [ ebp + edx * 4 - 0x20 ] esi
jmp r-xdata
cmp esi 0x1
and [ ebp + edx * 4 - 0x20 ] 0x0
mov esi [ ecx ]
mov [ ebp + edx * 4 - 0x20 ] esi
jmp r-xdata
and [ ebp + edx * 4 - 0x20 ] 0x0
mov esi [ ecx ]
mov [ ebp + edx * 4 - 0x20 ] esi
jmp r-xdata
cmp edx eax
jl r-xdata
mov esi [ rw-data ]
dec esi
lea ecx [ esi + 0x1 ]
mov eax ecx
cdq
and edx 0x1f
add eax edx
sar eax 0x5
mov edx ecx
and edx 0x8000001f
mov [ ebp - 0xc ] eax
jns r-xdata
dec edx
sub ecx 0x4
test edx edx
jge r-xdata
cmp edx eax
jl r-xdata
xor eax eax
dec edx
sub ecx 0x4
test edx edx
jge r-xdata
cmp edx eax
jl r-xdata
mov eax [ rw-data ]
mov ecx [ rw-data ]
lea ebx [ ecx + eax ]
xor eax eax
inc eax
jmp r-xdata
dec edx
sub ecx 0x4
test edx edx
jge r-xdata
push 0x1f
pop ecx
sub ecx edx
xor edx edx
inc edx
shl edx cl
lea ebx [ ebp + eax * 4 - 0x20 ]
mov [ ebp - 0x10 ] ecx
test [ ebx ] edx
je r-xdata
dec edx
or edx 0xffffffe0
inc edx
mov ecx [ ebp - 0x10 ]
or eax 0xffffffff
shl eax cl
and [ ebx ] eax
mov eax [ ebp - 0xc ]
inc eax
cmp eax 0x3
jge r-xdata
or edx 0xffffffff
shl edx cl
not edx
test [ ebp + eax * 4 - 0x20 ] edx
jmp r-xdata
mov ecx [ rw-data ]
inc ecx
mov eax ecx
cdq
and edx 0x1f
add eax edx
mov edx ecx
sar eax 0x5
and edx 0x8000001f
jns r-xdata
push 0x3
pop ecx
lea edi [ ebp + eax * 4 - 0x20 ]
sub ecx eax
xor eax eax
[ edi ]
jne r-xdata
and [ ebp - 0xc ] 0x0
and [ ebp + 0x8 ] 0x0
or edi 0xffffffff
mov ecx edx
shl edi cl
mov [ ebp - 0x4 ] 0x20
sub [ ebp - 0x4 ] edx
not edi
dec edx
or edx 0xffffffe0
inc edx
mov eax esi
cdq
push 0x1f
pop ecx
and edx ecx
add eax edx
sar eax 0x5
and esi 0x8000001f
jns r-xdata
inc eax
cmp eax 0x3
jl r-xdata
mov ebx [ ebp + 0x8 ]
lea ebx [ ebp + ebx * 4 - 0x20 ]
mov esi [ ebx ]
mov ecx esi
and ecx edi
mov [ ebp - 0x10 ] ecx
mov ecx edx
shr esi cl
mov ecx [ ebp - 0x4 ]
or esi [ ebp - 0xc ]
mov [ ebx ] esi
mov esi [ ebp - 0x10 ]
shl esi cl
inc [ ebp + 0x8 ]
cmp [ ebp + 0x8 ] 0x3
mov [ ebp - 0xc ] esi
jl r-xdata
mov esi eax
push 0x2
shl esi 0x2
lea ecx [ ebp - 0x18 ]
pop edx
sub ecx esi
and [ ebp + 0x8 ] 0x0
xor edx edx
sub ecx esi
inc edx
shl edx cl
lea ecx [ ebp + eax * 4 - 0x20 ]
mov esi [ ecx ]
lea edi [ esi + edx ]
cmp edi esi
jb r-xdata
dec esi
or esi 0xffffffe0
inc esi
cmp [ ebp + eax * 4 - 0x20 ] 0x0
jmp r-xdata
and [ ebp + edx * 4 - 0x20 ] 0x0
mov esi [ ecx ]
mov [ ebp + edx * 4 - 0x20 ] esi
jmp r-xdata
mov [ ebp + 0x8 ] 0x1
cmp edi edx
jae r-xdata
cmp edx eax
jl r-xdata
dec edx
sub ecx 0x4
test edx edx
jge r-xdata
dec eax
jns r-xdata
mov [ ecx ] edi
mov ecx [ ebp + 0x8 ]
jmp r-xdata
test ecx ecx
je r-xdata
lea ecx [ ebp + eax * 4 - 0x20 ]
mov edx [ ecx ]
lea esi [ edx + 0x1 ]
xor edi edi
cmp esi edx
jb r-xdata
xor edi edi
inc edi
cmp esi 0x1
jae r-xdata
mov [ ecx ] esi
mov ecx edi
sub_1003a6f3
mov edi edi
push ebp
mov ebp esp
sub esp 0x7c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebx
xor ebx ebx
push esi
xor esi esi
mov [ ebp - 0x78 ] eax
mov eax [ ebp + 0xc ]
inc esi
xor ecx ecx
push edi
mov [ ebp - 0x70 ] eax
lea edi [ ebp - 0x20 ]
mov [ ebp - 0x74 ] ebx
mov [ ebp - 0x68 ] esi
mov [ ebp - 0x4c ] ebx
mov [ ebp - 0x58 ] ebx
mov [ ebp - 0x5c ] ebx
mov [ ebp - 0x60 ] ebx
mov [ ebp - 0x64 ] ebx
mov [ ebp - 0x50 ] ebx
mov [ ebp - 0x6c ] ebx
cmp [ ebp + 0x24 ] ebx
jne r-xdata
mov edx [ ebp + 0x10 ]
mov [ ebp - 0x54 ] edx
call sub_1002c068
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x16
call sub_100261c9
add esp 0x14
xor eax eax
jmp r-xdata
inc edx
jmp r-xdata
cmp al 0x9
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_10025c8d
leave
retn
mov al [ edx ]
cmp al 0x20
je r-xdata
cmp al 0xa
je r-xdata
cmp al 0xd
jne r-xdata
mov bl 0x30
cmp ecx 0xa
jne r-xdata
jmp [ ecx * 4 + jump_table_1003adbb ]
mov al [ edx ]
inc edx
cmp ecx 0xb
ja r-xdata
jmp r-xdata
mov cl al
sub cl 0x31
cmp cl 0x8
ja r-xdata
mov cl al
sub cl 0x31
mov [ ebp - 0x58 ] esi
cmp cl 0x8
jbe r-xdata
mov cl al
sub cl 0x31
cmp cl 0x8
jbe r-xdata
mov [ ebp - 0x58 ] esi
jmp r-xdata
cmp [ ebp - 0x4c ] 0x0
mov [ ebp - 0x58 ] esi
mov [ ebp - 0x5c ] esi
jne r-xdata
sub al bl
mov [ ebp - 0x5c ] esi
cmp al 0x9
ja r-xdata
lea ecx [ edx - 0x2 ]
mov [ ebp - 0x54 ] ecx
mov cl al
sub cl 0x31
cmp cl 0x8
ja r-xdata
mov [ ebp - 0x60 ] esi
jmp r-xdata
mov cl al
sub cl 0x31
cmp cl 0x8
jbe r-xdata
cmp [ ebp + 0x20 ] 0x0
je r-xdata
mov [ ebp - 0x60 ] esi
xor ecx ecx
jmp r-xdata
cmp [ ebp - 0x58 ] 0x0
mov eax [ ebp - 0x70 ]
mov [ eax ] edx
je r-xdata
mov ecx [ ebp + 0x24 ]
mov ecx [ ecx ]
mov ecx [ ecx + 0xbc ]
mov ecx [ ecx ]
cmp al [ ecx ]
jne r-xdata
push 0x3
mov ecx [ ebp + 0x24 ]
mov ecx [ ecx ]
mov ecx [ ecx + 0xbc ]
mov ecx [ ecx ]
cmp al [ ecx ]
jne r-xdata
mov ecx [ ebp + 0x24 ]
mov ecx [ ecx ]
mov ecx [ ecx + 0xbc ]
mov ecx [ ecx ]
cmp al [ ecx ]
je r-xdata
cmp al bl
jge r-xdata
cmp al bl
jge r-xdata
jmp r-xdata
mov edx [ ebp - 0x54 ]
jmp r-xdata
push 0x4
jmp r-xdata
movsx eax al
sub eax 0x2b
je r-xdata
push 0x9
jmp r-xdata
cmp al bl
je r-xdata
cmp al bl
jmp r-xdata
push 0xa
pop ecx
dec edx
movsx eax al
sub eax 0x2b
lea ecx [ edx - 0x1 ]
mov [ ebp - 0x54 ] ecx
je r-xdata
cmp al bl
jge r-xdata
mov [ ebp - 0x6c ] 0x4
jmp r-xdata
push 0x18
pop eax
cmp [ ebp - 0x4c ] eax
jbe r-xdata
movsx eax al
sub eax 0x2b
je r-xdata
push 0x5
cmp al 0x2b
je r-xdata
push 0x4
jmp r-xdata
cmp al bl
je r-xdata
cmp al 0x39
jg r-xdata
mov ecx [ ebp + 0x24 ]
mov ecx [ ecx ]
mov ecx [ ecx + 0xbc ]
mov ecx [ ecx ]
cmp al [ ecx ]
je r-xdata
cmp al 0x39
jg r-xdata
jmp r-xdata
cmp al bl
je r-xdata
pop ecx
dec edx
jmp r-xdata
push 0x7
jmp r-xdata
dec eax
dec eax
je r-xdata
mov al [ edx ]
inc edx
sub al 0x31
cmp al 0x8
jbe r-xdata
jne r-xdata
dec eax
dec eax
je r-xdata
cmp al 0x39
jg r-xdata
jmp r-xdata
xor ecx ecx
xor eax eax
xor edx edx
xor esi esi
cmp [ ebp - 0x4c ] 0x0
jbe r-xdata
cmp [ ebp - 0x9 ] 0x5
jl r-xdata
and [ ebp - 0x74 ] 0x0
push 0x2
pop ecx
jmp r-xdata
dec eax
dec eax
je r-xdata
dec edx
push 0xb
jmp r-xdata
cmp al 0x2d
je r-xdata
pop ecx
jmp r-xdata
mov ecx esi
jmp r-xdata
cmp [ ebp - 0x4c ] 0x19
jae r-xdata
cmp al 0x2b
je r-xdata
cmp [ ebp - 0x4c ] 0x19
jae r-xdata
dec [ ebp - 0x50 ]
mov al [ edx ]
inc edx
jmp r-xdata
or [ ebp - 0x68 ] 0xffffffff
push 0x7
pop ecx
jmp r-xdata
sub eax 0x3
dec edx
jmp r-xdata
push 0x8
jmp r-xdata
mov edx ecx
mov [ ebp - 0x64 ] ecx
jmp r-xdata
imul ecx ecx 0xa
movsx esi al
lea ecx [ ecx + esi - 0x30 ]
cmp ecx 0x1450
jg r-xdata
jmp r-xdata
dec edi
inc [ ebp - 0x50 ]
mov [ ebp - 0x4c ] eax
inc [ ebp - 0x9 ]
push 0x2
pop ecx
mov [ ebp - 0x74 ] 0x8000
jmp r-xdata
sub eax 0x3
jne r-xdata
cmp al bl
je r-xdata
inc [ ebp - 0x50 ]
inc [ ebp - 0x4c ]
sub al bl
mov [ edi ] al
inc edi
jmp r-xdata
cmp al 0x2d
je r-xdata
mov al [ edx ]
inc edx
inc [ ebp - 0x4c ]
sub al bl
mov [ edi ] al
inc edi
dec [ ebp - 0x50 ]
cmp al bl
jge r-xdata
mov ecx 0x1451
mov al [ edx ]
inc edx
dec edi
cmp [ edi ] 0x0
je r-xdata
cmp al 0x43
jle r-xdata
mov al [ edx ]
inc edx
jmp r-xdata
cmp al 0x39
jg r-xdata
jmp r-xdata
dec [ ebp - 0x4c ]
inc [ ebp - 0x50 ]
lea eax [ ebp - 0x3c ]
push eax
push [ ebp - 0x4c ]
lea eax [ ebp - 0x20 ]
push eax
call sub_1003cb62
mov eax [ ebp - 0x64 ]
xor edx edx
add esp 0xc
cmp [ ebp - 0x68 ] edx
jge r-xdata
cmp al 0x45
jle r-xdata
mov al [ edx ]
inc edx
add eax [ ebp - 0x50 ]
cmp [ ebp - 0x60 ] edx
jne r-xdata
neg eax
push 0x6
jmp r-xdata
cmp al 0x63
jle r-xdata
cmp [ ebp - 0x5c ] edx
jne r-xdata
add eax [ ebp + 0x18 ]
cmp al 0x65
jg r-xdata
cmp eax 0x1450
jg r-xdata
sub eax [ ebp + 0x1c ]
xor esi esi
mov eax 0x7fff
mov edx 0x80000000
xor ecx ecx
mov [ ebp - 0x6c ] 0x2
jmp r-xdata
cmp eax 0xffffebb0
jl r-xdata
mov edi [ ebp - 0x78 ]
or eax [ ebp - 0x74 ]
mov [ edi ] cx
mov [ edi + 0xa ] ax
mov eax [ ebp - 0x6c ]
mov [ edi + 0x2 ] esi
mov [ edi + 0x6 ] edx
mov [ ebp - 0x6c ] 0x1
mov ecx rw-data
sub ecx 0x60
mov [ ebp - 0x54 ] eax
cmp eax edx
je r-xdata
mov eax [ ebp - 0x34 ]
movzx ecx [ ebp - 0x3c ]
mov esi [ ebp - 0x3a ]
mov edx [ ebp - 0x36 ]
shr eax 0x10
jmp r-xdata
jge r-xdata
cmp [ ebp + 0x14 ] edx
jne r-xdata
neg eax
mov ecx rw-data
mov [ ebp - 0x54 ] eax
sub ecx 0x60
cmp [ ebp - 0x54 ] edx
je r-xdata
xor eax eax
mov [ ebp - 0x3c ] ax
jmp r-xdata
mov eax [ ebp - 0x54 ]
sar [ ebp - 0x54 ] 0x3
add ecx 0x54
and eax 0x7
mov [ ebp - 0x7c ] ecx
cmp eax edx
je r-xdata
cmp [ ebp - 0x54 ] 0x0
jne r-xdata
imul eax eax 0xc
add eax ecx
mov ebx eax
mov eax 0x8000
cmp [ ebx ] ax
jb r-xdata
mov ecx [ ebp - 0x7c ]
xor edx edx
movzx ecx [ ebx + 0xa ]
xor eax eax
mov [ ebp - 0x50 ] eax
mov [ ebp - 0x2c ] eax
mov [ ebp - 0x28 ] eax
mov [ ebp - 0x24 ] eax
mov eax [ ebp - 0x32 ]
mov esi ecx
mov edx 0x7fff
xor esi eax
and eax edx
and ecx edx
and esi 0x8000
mov edi 0x7fff
lea edx [ ecx + eax ]
mov [ ebp - 0x70 ] esi
movzx edx dx
cmp ax di
jae r-xdata
mov esi ebx
lea edi [ ebp - 0x48 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
dec [ ebp - 0x46 ]
lea ebx [ ebp - 0x48 ]
xor eax eax
test si si
sete al
and [ ebp - 0x38 ] 0x0
dec eax
and eax 0x80000000
add eax 0x7fff8000
and [ ebp - 0x3c ] 0x0
cmp cx di
jae r-xdata
mov edi 0xbffd
cmp dx di
ja r-xdata
mov esi 0x3fbf
cmp dx si
ja r-xdata
xor esi esi
cmp ax si
jne r-xdata
xor eax eax
mov [ ebp - 0x38 ] eax
mov [ ebp - 0x3c ] eax
jmp r-xdata
cmp cx si
jne r-xdata
inc edx
test [ ebp - 0x34 ] 0x7fffffff
jne r-xdata
mov [ ebp - 0x34 ] eax
mov [ ebp - 0x68 ] esi
lea edi [ ebp - 0x28 ]
mov [ ebp - 0x58 ] 0x5
inc edx
test [ ebx + 0x8 ] 0x7fffffff
jne r-xdata
cmp [ ebp - 0x38 ] esi
jne r-xdata
inc edi
inc edi
inc [ ebp - 0x68 ]
dec [ ebp - 0x58 ]
cmp [ ebp - 0x58 ] 0x0
jg r-xdata
lea eax [ ebp + eax - 0x3c ]
mov [ ebp - 0x5c ] eax
lea eax [ ebx + 0x8 ]
mov [ ebp - 0x60 ] eax
cmp [ ebx + 0x4 ] esi
jne r-xdata
cmp [ ebp - 0x3c ] esi
jne r-xdata
mov eax [ ebp - 0x68 ]
mov ecx [ ebp - 0x58 ]
add eax eax
mov [ ebp - 0x64 ] ecx
test ecx ecx
jle r-xdata
add edx 0xc002
test dx dx
jle r-xdata
mov [ ebp - 0x4c ] 0x1
cmp esi eax
jae r-xdata
cmp [ ebx ] esi
jne r-xdata
xor eax eax
mov [ ebp - 0x32 ] ax
jmp r-xdata
add edx 0xffff
test dx dx
jge r-xdata
mov edi [ ebp - 0x24 ]
test edi edi
js r-xdata
add [ ebp - 0x5c ] 0x2
sub [ ebp - 0x60 ] 0x2
dec [ ebp - 0x64 ]
cmp [ ebp - 0x64 ] 0x0
jg r-xdata
inc [ edi ]
cmp [ ebp - 0x4c ] 0x0
mov [ edi - 0x4 ] esi
je r-xdata
mov [ ebp - 0x34 ] esi
mov [ ebp - 0x38 ] esi
mov [ ebp - 0x3c ] esi
jmp r-xdata
mov eax 0x8000
mov ecx eax
cmp [ ebp - 0x2c ] cx
ja r-xdata
mov eax edx
neg eax
movzx esi ax
add edx esi
test dx dx
jg r-xdata
mov esi [ ebp - 0x28 ]
mov eax [ ebp - 0x2c ]
shl [ ebp - 0x2c ] 0x1
shr eax 0x1f
mov ecx esi
add esi esi
or esi eax
shr ecx 0x1f
lea eax [ edi + edi ]
or eax ecx
add edx 0xffff
mov [ ebp - 0x28 ] esi
mov [ ebp - 0x24 ] eax
test dx dx
jg r-xdata
mov eax [ ebp - 0x60 ]
mov ecx [ ebp - 0x5c ]
movzx ecx [ ecx ]
movzx eax [ eax ]
and [ ebp - 0x4c ] 0x0
imul eax ecx
mov ecx [ edi - 0x4 ]
lea esi [ ecx + eax ]
cmp esi ecx
jb r-xdata
cmp [ ebp - 0x2a ] 0xffffffff
jne r-xdata
mov ecx [ ebp - 0x2c ]
and ecx 0x1ffff
cmp ecx 0x18000
jne r-xdata
mov eax [ ebp - 0x24 ]
mov edi [ ebp - 0x28 ]
mov ecx [ ebp - 0x28 ]
shr [ ebp - 0x24 ] 0x1
shl eax 0x1f
shr edi 0x1
or edi eax
mov eax [ ebp - 0x2c ]
shl ecx 0x1f
shr eax 0x1
or eax ecx
dec esi
mov [ ebp - 0x28 ] edi
mov [ ebp - 0x2c ] eax
jne r-xdata
inc [ ebp - 0x50 ]
inc [ ebp - 0x2a ]
and [ ebp - 0x2a ] 0x0
cmp [ ebp - 0x26 ] 0xffffffff
jne r-xdata
mov eax 0x7fff
cmp dx ax
jb r-xdata
test [ ebp - 0x2c ] 0x1
je r-xdata
cmp [ ebp - 0x50 ] esi
je r-xdata
mov ax [ ebp - 0x2a ]
or edx [ ebp - 0x70 ]
mov [ ebp - 0x3c ] ax
mov eax [ ebp - 0x28 ]
mov [ ebp - 0x3a ] eax
mov eax [ ebp - 0x24 ]
mov [ ebp - 0x36 ] eax
mov [ ebp - 0x32 ] dx
jmp r-xdata
xor eax eax
xor ecx ecx
cmp [ ebp - 0x70 ] ax
mov [ ebp - 0x38 ] eax
sete cl
mov [ ebp - 0x3c ] eax
dec ecx
and ecx 0x80000000
add ecx 0x7fff8000
mov [ ebp - 0x34 ] ecx
jmp r-xdata
inc [ ebp - 0x26 ]
jmp r-xdata
and [ ebp - 0x26 ] 0x0
mov ecx 0xffff
cmp [ ebp - 0x22 ] cx
jne r-xdata
or [ ebp - 0x2c ] 0x1
inc [ ebp - 0x22 ]
jmp r-xdata
mov [ ebp - 0x22 ] ax
inc edx
jmp r-xdata
sub_1003adeb
mov edi edi
push ebp
mov ebp esp
sub esp 0x34
push ebx
xor ebx ebx
test [ ebp + 0x10 ] 0x80
push esi
push edi
mov esi eax
mov [ ebp - 0x20 ] ebx
mov [ ebp - 0x2 ] bl
mov [ ebp - 0x34 ] 0xc
mov [ ebp - 0x30 ] ebx
je r-xdata
mov [ ebp - 0x2c ] 0x1
mov [ ebp - 0x1 ] bl
mov [ ebp - 0x2c ] ebx
mov [ ebp - 0x1 ] 0x10
jmp r-xdata
mov ecx [ ebp + 0x10 ]
mov eax 0x8000
test eax ecx
jne r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_100260a1
add esp 0x14
lea eax [ ebp - 0x20 ]
push eax
call sub_1003bcd6
pop ecx
test eax eax
je r-xdata
mov eax ecx
and eax 0x3
sub eax ebx
mov edx 0xc0000000
mov edi 0x80000000
je r-xdata
test ecx 0x74000
jne r-xdata
mov [ ebp - 0x8 ] edi
dec eax
je r-xdata
or [ ebp - 0x1 ] 0x80
cmp [ ebp - 0x20 ] eax
je r-xdata
mov [ ebp - 0x10 ] ebx
sub eax ecx
je r-xdata
test cl 0x8
je r-xdata
dec eax
je r-xdata
cmp eax 0x500
je r-xdata
je r-xdata
mov [ ebp - 0x10 ] 0x1
jmp r-xdata
sub eax ecx
je r-xdata
mov [ ebp - 0x8 ] 0x40000000
jmp r-xdata
test ecx 0x70000
jne r-xdata
mov [ ebp - 0x8 ] edx
jmp r-xdata
call sub_1002c07b
mov [ eax ] ebx
or [ esi ] 0xffffffff
call sub_1002c068
push 0x16
pop esi
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] esi
call sub_100261c9
add esp 0x14
jmp r-xdata
mov [ ebp - 0x14 ] 0x1
cmp eax 0x600
je r-xdata
mov [ ebp - 0x14 ] 0x3
jmp r-xdata
cmp eax ebx
je r-xdata
mov eax [ ebp + 0x10 ]
mov edx 0x700
and eax edx
mov ecx 0x400
cmp eax ecx
mov edi 0x100
jg r-xdata
mov [ ebp - 0x10 ] 0x2
jmp r-xdata
sub eax ecx
je r-xdata
mov eax [ ebp + 0x14 ]
push 0x10
pop ecx
sub eax ecx
je r-xdata
mov eax esi
jmp r-xdata
test al 0x40
je r-xdata
mov ecx [ rw-data ]
not ecx
and ecx [ ebp + 0x18 ]
test cl cl
js r-xdata
mov [ ebp - 0x14 ] 0x5
jmp r-xdata
cmp eax edx
jne r-xdata
mov eax [ ebp + 0x10 ]
mov [ ebp - 0xc ] 0x80
test edi eax
je r-xdata
cmp eax edi
je r-xdata
mov [ ebp - 0x10 ] 0x3
jmp r-xdata
sub eax 0x40
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn
test eax 0x1000
je r-xdata
or [ ebp - 0xc ] 0x4000000
or [ ebp - 0x8 ] 0x10000
or [ ebp - 0x10 ] 0x4
mov [ ebp - 0xc ] 0x1
mov [ ebp - 0x14 ] 0x4
jmp r-xdata
cmp eax 0x200
je r-xdata
cmp [ ebp - 0x8 ] edi
sete al
mov [ ebp - 0x10 ] eax
jmp r-xdata
test al 0x20
je r-xdata
or [ ebp - 0xc ] edi
cmp eax 0x300
jne r-xdata
test al 0x10
je r-xdata
or [ ebp - 0xc ] 0x8000000
jmp r-xdata
mov [ ebp - 0x14 ] 0x2
jmp r-xdata
call sub_10038cab
mov [ esi ] eax
cmp eax 0xffffffff
jne r-xdata
or [ ebp - 0xc ] __dos_header
mov eax [ ebp + 0x8 ]
mov edi [ CreateFileW@IAT ]
push ebx
push [ ebp - 0xc ]
mov [ eax ] 0x1
push [ ebp - 0x14 ]
lea eax [ ebp - 0x34 ]
push eax
push [ ebp - 0x10 ]
push [ ebp - 0x8 ]
push [ ebp + 0xc ]
call edi
mov [ ebp - 0x1c ] eax
cmp eax 0xffffffff
jne r-xdata
call sub_1002c07b
mov [ eax ] ebx
or [ esi ] 0xffffffff
call sub_1002c068
mov [ eax ] 0x18
jmp r-xdata
push [ ebp - 0x1c ]
call [ GetFileType@IAT ]
cmp eax ebx
jne r-xdata
mov ecx [ ebp - 0x8 ]
mov eax 0xc0000000
and ecx eax
cmp ecx eax
jne r-xdata
call sub_1002c068
mov eax [ eax ]
jmp r-xdata
cmp eax 0x2
jne r-xdata
mov esi [ esi ]
mov eax esi
sar eax 0x5
mov eax [ eax * 4 + rw-data ]
and esi 0x1f
shl esi 0x6
lea eax [ eax + esi + 0x4 ]
and [ eax ] 0xfe
call [ GetLastError@IAT ]
mov esi eax
push esi
call sub_1002c08e
pop ecx
push [ ebp - 0x1c ]
call [ CloseHandle@IAT ]
cmp esi ebx
jne r-xdata
mov esi [ esi ]
mov eax esi
sar eax 0x5
mov eax [ eax * 4 + rw-data ]
and esi 0x1f
shl esi 0x6
lea eax [ eax + esi + 0x4 ]
and [ eax ] 0xfe
call [ GetLastError@IAT ]
push eax
call sub_1002c08e
test [ ebp + 0x10 ] 0x1
je r-xdata
cmp eax 0x3
jne r-xdata
or [ ebp - 0x1 ] 0x40
jmp r-xdata
call sub_1002c068
mov [ eax ] 0xd
jmp r-xdata
and [ ebp - 0x8 ] 0x7fffffff
push ebx
push [ ebp - 0xc ]
lea eax [ ebp - 0x34 ]
push [ ebp - 0x14 ]
push eax
push [ ebp - 0x10 ]
push [ ebp - 0x8 ]
push [ ebp + 0xc ]
call edi
mov [ ebp - 0x1c ] eax
cmp eax 0xffffffff
jne r-xdata
push [ ebp - 0x1c ]
push [ esi ]
call sub_10038a66
mov eax [ esi ]
mov edx eax
and eax 0x1f
sar edx 0x5
mov edx [ edx * 4 + rw-data ]
pop ecx
shl eax 0x6
pop ecx
mov cl [ ebp - 0x1 ]
or cl 0x1
mov [ edx + eax + 0x4 ] cl
mov eax [ esi ]
mov edx eax
and eax 0x1f
sar edx 0x5
mov edx [ edx * 4 + rw-data ]
shl eax 0x6
lea eax [ edx + eax + 0x24 ]
and [ eax ] 0x80
mov [ ebp - 0x3 ] cl
and [ ebp - 0x3 ] 0x48
mov [ ebp - 0x1 ] cl
jne r-xdata
or [ ebp - 0x1 ] 0x8
test [ ebp - 0x1 ] 0x80
je r-xdata
test cl 0x80
je r-xdata
mov eax [ esi ]
mov ecx eax
sar ecx 0x5
mov ecx [ ecx * 4 + rw-data ]
and eax 0x1f
shl eax 0x6
lea eax [ ecx + eax + 0x24 ]
mov cl [ eax ]
xor cl [ ebp - 0x2 ]
and cl 0x7f
xor [ eax ] cl
mov eax [ esi ]
mov ecx eax
sar ecx 0x5
mov ecx [ ecx * 4 + rw-data ]
and eax 0x1f
shl eax 0x6
lea eax [ ecx + eax + 0x24 ]
mov ecx [ ebp + 0x10 ]
mov dl [ eax ]
shr ecx 0x10
shl cl 0x7
and dl 0x7f
or cl dl
mov [ eax ] cl
cmp [ ebp - 0x3 ] bl
jne r-xdata
mov edi 0x74000
mov ecx 0x4000
test [ ebp + 0x10 ] edi
jne r-xdata
test [ ebp + 0x10 ] 0x2
je r-xdata
mov edi [ ebp - 0x8 ]
mov eax 0xc0000000
mov ecx edi
and ecx eax
cmp ecx eax
jne r-xdata
test [ ebp + 0x10 ] 0x8
je r-xdata
mov eax [ ebp + 0x10 ]
and eax edi
cmp eax ecx
je r-xdata
mov eax [ ebp - 0x20 ]
and eax edi
jne r-xdata
push 0x2
or edi 0xffffffff
push edi
push [ esi ]
call sub_10031475
add esp 0xc
mov [ ebp - 0x18 ] eax
cmp eax edi
jne r-xdata
mov eax ebx
test [ ebp + 0x10 ] 0x1
je r-xdata
mov eax [ esi ]
mov ecx eax
and eax 0x1f
sar ecx 0x5
mov ecx [ ecx * 4 + rw-data ]
shl eax 0x6
lea eax [ ecx + eax + 0x4 ]
or [ eax ] 0x20
mov [ ebp - 0x2 ] bl
cmp eax 0x10000
je r-xdata
or [ ebp + 0x10 ] eax
or [ ebp + 0x10 ] ecx
jmp r-xdata
push 0x1
lea eax [ ebp - 0x24 ]
push eax
push [ esi ]
mov [ ebp - 0x24 ] ebx
call sub_100322f3
add esp 0xc
test eax eax
jne r-xdata
call sub_1002c07b
cmp [ eax ] 0x83
je r-xdata
push [ ebp - 0x1c ]
call [ CloseHandle@IAT ]
push ebx
push [ ebp - 0xc ]
lea eax [ ebp - 0x34 ]
push 0x3
push eax
push [ ebp - 0x10 ]
and edi 0x7fffffff
push edi
push [ ebp + 0xc ]
call [ CreateFileW@IAT ]
cmp eax 0xffffffff
jne r-xdata
test [ ebp - 0x1 ] 0x40
mov [ ebp - 0x18 ] ebx
jne r-xdata
mov ecx [ ebp + 0x10 ]
mov eax 0x301
and ecx eax
cmp ecx eax
jne r-xdata
cmp eax 0x14000
je r-xdata
push ebx
push ebx
push [ esi ]
call sub_10031475
add esp 0xc
cmp eax edi
je r-xdata
cmp [ ebp - 0x24 ] 0x1a
jne r-xdata
push [ esi ]
call sub_10031cf6
jmp r-xdata
mov esi [ esi ]
mov ecx esi
sar ecx 0x5
mov ecx [ ecx * 4 + rw-data ]
and esi 0x1f
shl esi 0x6
mov [ esi + ecx ] eax
call [ GetLastError@IAT ]
push eax
call sub_1002c08e
mov eax [ esi ]
mov ecx eax
and eax 0x1f
sar ecx 0x5
mov ecx [ ecx * 4 + rw-data ]
shl eax 0x6
lea eax [ ecx + eax + 0x4 ]
and [ eax ] 0xfe
push [ esi ]
call sub_10038ae7
pop ecx
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov ecx 0xc0000000
and eax ecx
cmp eax 0x40000000
je r-xdata
test [ ebp + 0x10 ] 0x70000
je r-xdata
mov [ ebp - 0x2 ] 0x2
jmp r-xdata
cmp eax 0x20000
je r-xdata
mov eax [ ebp - 0x18 ]
cdq
push edx
push eax
push [ esi ]
call sub_1003ba64
add esp 0xc
cmp eax edi
je r-xdata
pop ecx
mov eax [ ebp - 0x14 ]
cmp eax ebx
jbe r-xdata
cmp eax 0x80000000
je r-xdata
cmp eax 0x24000
je r-xdata
cmp eax 0x2
jbe r-xdata
push 0x3
lea eax [ ebp - 0x18 ]
push eax
push [ esi ]
call sub_100322f3
add esp 0xc
cmp eax 0xffffffff
je r-xdata
cmp eax ecx
jne r-xdata
cmp eax 0x40000
je r-xdata
movsx eax [ ebp - 0x2 ]
xor edi edi
dec eax
je r-xdata
cmp eax 0x4
ja r-xdata
cmp eax 0x2
je r-xdata
mov eax [ ebp - 0x14 ]
cmp eax ebx
jbe r-xdata
mov [ ebp - 0x2 ] 0x1
jmp r-xdata
cmp eax 0x44000
jne r-xdata
mov [ ebp - 0x18 ] 0xbfbbef
mov [ ebp - 0x14 ] 0x3
dec eax
jne r-xdata
cmp eax 0x5
jne r-xdata
push 0x2
push ebx
push ebx
push [ esi ]
call sub_10037542
add esp 0x10
or eax edx
je r-xdata
mov eax [ ebp - 0x18 ]
and eax 0xffff
cmp eax 0xfffe
jne r-xdata
cmp eax 0x3
jne r-xdata
cmp eax 0x2
jbe r-xdata
add edi eax
cmp [ ebp - 0x14 ] edi
jg r-xdata
mov [ ebp - 0x18 ] 0xfeff
mov [ ebp - 0x14 ] 0x2
jmp r-xdata
push ebx
push ebx
push ebx
push [ esi ]
call sub_10037542
add esp 0x10
and eax edx
cmp eax 0xfeff
jne r-xdata
push [ esi ]
call sub_10031cf6
pop ecx
call sub_1002c068
push 0x16
pop esi
mov [ eax ] esi
push ebx
push ebx
push [ esi ]
call sub_10031475
add esp 0xc
jmp r-xdata
cmp [ ebp - 0x18 ] 0xbfbbef
jne r-xdata
cmp eax 0x4
jbe r-xdata
mov eax [ ebp - 0x14 ]
sub eax edi
push eax
lea eax [ ebp + edi - 0x18 ]
push eax
push [ esi ]
call sub_10031225
add esp 0xc
cmp eax 0xffffffff
je r-xdata
jmp r-xdata
push ebx
push 0x2
push [ esi ]
call sub_10031475
add esp 0xc
cmp eax 0xffffffff
je r-xdata
cmp eax 0xffffffff
jne r-xdata
mov [ ebp - 0x2 ] 0x1
jmp r-xdata
push 0x2
push ebx
push ebx
push [ esi ]
call sub_10037542
add esp 0x10
or eax edx
je r-xdata
mov [ ebp - 0x2 ] 0x2
jmp r-xdata
push ebx
push ebx
push ebx
push [ esi ]
call sub_10037542
and eax edx
add esp 0x10
cmp eax 0xffffffff
je r-xdata
sub_1003b50b
push 0x14
push r--data
call sub_1002e7e4
xor esi esi
mov [ ebp - 0x1c ] esi
xor eax eax
mov edi [ ebp + 0x18 ]
cmp edi esi
setne al
cmp eax esi
jne r-xdata
or [ edi ] 0xffffffff
xor eax eax
cmp [ ebp + 0x8 ] esi
setne al
cmp eax esi
je r-xdata
call sub_1002c068
push 0x16
pop edi
mov [ eax ] edi
push esi
push esi
push esi
push esi
push esi
call sub_100261c9
add esp 0x14
mov eax edi
jmp r-xdata
cmp [ ebp + 0x1c ] esi
je r-xdata
call sub_1002e829
retn
mov [ ebp - 0x4 ] esi
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
lea eax [ ebp - 0x1c ]
push eax
mov eax edi
call sub_1003adeb
add esp 0x14
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_1003b5a9
mov eax [ ebp - 0x20 ]
cmp eax esi
je r-xdata
mov eax [ ebp + 0x14 ]
and eax 0xfffffe7f
neg eax
sbb eax eax
inc eax
je r-xdata
or [ edi ] 0xffffffff
sub_1003b5a9
cmp [ ebp - 0x1c ] esi
je r-xdata
retn
cmp [ ebp - 0x20 ] esi
je r-xdata
push [ edi ]
call sub_10038c84
pop ecx
mov eax [ edi ]
mov ecx eax
sar ecx 0x5
and eax 0x1f
shl eax 0x6
mov ecx [ ecx * 4 + rw-data ]
lea eax [ ecx + eax + 0x4 ]
and [ eax ] 0xfe
sub_1003b5d7
mov edi edi
push ebp
mov ebp esp
push 0x1
push [ ebp + 0x8 ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call sub_1003b50b
add esp 0x18
pop ebp
retn
sub_1003b5f7
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
xor esi esi
xor eax eax
push edi
cmp [ ebp + 0x10 ] esi
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
mov ebx [ ebp + 0x8 ]
cmp ebx esi
jne r-xdata
mov edi [ ebp + 0xc ]
cmp edi esi
je r-xdata
call sub_1002c068
push esi
push esi
push esi
push esi
push esi
mov [ eax ] 0x16
call sub_100261c9
add esp 0x14
mov eax 0x7fffffff
jmp r-xdata
push [ ebp + 0x14 ]
lea ecx [ ebp - 0x10 ]
call sub_10029358
mov eax [ ebp - 0x10 ]
cmp [ eax + 0x14 ] esi
jne r-xdata
lea eax [ ebp - 0x10 ]
push eax
movzx eax [ ebx ]
push eax
call sub_1003cd30
movzx esi ax
lea eax [ ebp - 0x10 ]
push eax
movzx eax [ edi ]
push eax
call sub_1003cd30
add esp 0x10
inc ebx
inc ebx
inc edi
inc edi
dec [ ebp + 0x10 ]
movzx eax ax
je r-xdata
movzx eax [ ebx ]
cmp ax 0x41
jb r-xdata
movzx ecx ax
movzx eax si
sub eax ecx
cmp [ ebp - 0x4 ] 0x0
je r-xdata
test si si
je r-xdata
movzx esi ax
movzx eax [ edi ]
cmp ax 0x41
jb r-xdata
cmp ax 0x5a
ja r-xdata
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
cmp si ax
je r-xdata
inc ebx
inc ebx
inc edi
inc edi
dec [ ebp + 0x10 ]
movzx eax ax
je r-xdata
cmp ax 0x5a
ja r-xdata
add eax 0x20
test si si
je r-xdata
add eax 0x20
cmp si ax
je r-xdata
jmp r-xdata
sub_1003b6e1
mov edi edi
push ebp
mov ebp esp
push esi
xor esi esi
push edi
cmp [ rw-data ] esi
jne r-xdata
push esi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_1003b5f7
add esp 0x10
xor eax eax
cmp [ ebp + 0x10 ] esi
je r-xdata
pop edi
pop esi
pop ebp
retn
mov edi [ ebp + 0x8 ]
cmp edi esi
jne r-xdata
mov edx [ ebp + 0xc ]
cmp edx esi
je r-xdata
call sub_1002c068
push esi
push esi
push esi
push esi
push esi
mov [ eax ] 0x16
call sub_100261c9
add esp 0x14
mov eax 0x7fffffff
jmp r-xdata
movzx eax [ edi ]
cmp ax 0x41
jb r-xdata
movzx ecx ax
movzx eax [ edx ]
cmp ax 0x41
jb r-xdata
cmp ax 0x5a
ja r-xdata
inc edi
inc edi
inc edx
inc edx
dec [ ebp + 0x10 ]
movzx eax ax
je r-xdata
cmp ax 0x5a
ja r-xdata
add eax 0x20
movzx edx ax
movzx eax cx
sub eax edx
jmp r-xdata
cmp cx si
je r-xdata
add eax 0x20
cmp cx ax
je r-xdata
sub_1003b787
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
mov edx [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
xor eax eax
pop ebp
retn
movzx eax [ ecx ]
movzx ecx [ edx ]
sub eax ecx
pop ebp
retn
movzx eax [ ecx ]
test ax ax
je r-xdata
cmp ax [ edx ]
jne r-xdata
inc ecx
inc ecx
inc edx
inc edx
jmp r-xdata
dec [ ebp + 0x10 ]
je r-xdata
sub_1003b7be
mov edi edi
push ebp
mov ebp esp
sub esp 0x14
push esi
push edi
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x14 ]
call sub_10029358
mov eax [ ebp + 0x10 ]
mov esi [ ebp + 0xc ]
xor edi edi
cmp eax edi
je r-xdata
cmp esi edi
jne r-xdata
mov [ eax ] esi
cmp [ ebp + 0x14 ] edi
je r-xdata
call sub_1002c068
push edi
push edi
push edi
push edi
push edi
mov [ eax ] 0x16
call sub_100261c9
add esp 0x14
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov ecx [ ebp - 0x14 ]
push ebx
mov bl [ esi ]
mov [ ebp - 0x4 ] edi
lea edi [ esi + 0x1 ]
cmp [ ebp + 0x14 ] 0x2
jl r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0xc ]
and [ eax + 0x70 ] 0xfffffffd
mov edx [ ecx + 0xc8 ]
movzx eax bl
movzx eax [ edx + eax * 2 ]
and eax 0x8
lea eax [ ebp - 0x14 ]
push eax
movzx eax bl
push 0x8
push eax
call sub_10033165
mov ecx [ ebp - 0x14 ]
add esp 0xc
jmp r-xdata
cmp [ ebp + 0x14 ] 0x24
jg r-xdata
pop edi
pop esi
leave
retn
cmp bl 0x2d
jne r-xdata
mov bl [ edi ]
inc edi
jmp r-xdata
test eax eax
je r-xdata
cmp bl 0x2b
jne r-xdata
or [ ebp + 0x18 ] 0x2
jmp r-xdata
cmp [ ecx + 0xac ] 0x1
jle r-xdata
mov eax [ ebp + 0x14 ]
test eax eax
jl r-xdata
mov bl [ edi ]
inc edi
mov eax [ ebp + 0x10 ]
test eax eax
je r-xdata
cmp eax 0x1
je r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov [ eax ] esi
cmp eax 0x24
jg r-xdata
xor eax eax
mov eax [ ebp - 0xc ]
and [ eax + 0x70 ] 0xfffffffd
test eax eax
jne r-xdata
cmp eax 0x10
jne r-xdata
cmp bl 0x30
je r-xdata
mov esi [ ecx + 0xc8 ]
mov eax 0xffffffff
xor edx edx
div [ ebp + 0x14 ]
cmp bl 0x30
jne r-xdata
mov al [ edi ]
cmp al 0x78
je r-xdata
mov [ ebp + 0x14 ] 0xa
jmp r-xdata
test ecx 0x103
je r-xdata
movsx ecx bl
sub ecx 0x30
jmp r-xdata
mov al [ edi ]
cmp al 0x78
je r-xdata
mov [ ebp + 0x14 ] 0x10
jmp r-xdata
cmp al 0x58
je r-xdata
mov eax [ ebp + 0x18 ]
dec edi
test al 0x8
jne r-xdata
mov cl bl
sub cl 0x61
cmp cl 0x19
movsx ecx bl
ja r-xdata
cmp ecx [ ebp + 0x14 ]
jae r-xdata
inc edi
mov bl [ edi ]
inc edi
cmp al 0x58
jne r-xdata
mov [ ebp + 0x14 ] 0x8
jmp r-xdata
mov esi 0x7fffffff
test al 0x4
jne r-xdata
cmp [ ebp + 0x10 ] 0x0
je r-xdata
add ecx 0xffffffc9
sub ecx 0x20
or [ ebp + 0x18 ] 0x8
cmp [ ebp - 0x4 ] eax
jb r-xdata
call sub_1002c068
test [ ebp + 0x18 ] 0x1
mov [ eax ] 0x22
je r-xdata
test al 0x1
jne r-xdata
and [ ebp - 0x4 ] 0x0
jmp r-xdata
mov edi [ ebp + 0xc ]
mov ebx [ ebp - 0x4 ]
imul ebx [ ebp + 0x14 ]
add ebx ecx
mov [ ebp - 0x4 ] ebx
jne r-xdata
test [ ebp + 0x18 ] 0x2
push 0x0
pop eax
setne al
add eax esi
mov [ ebp - 0x4 ] eax
or [ ebp - 0x4 ] 0xffffffff
jmp r-xdata
mov eax [ ebp + 0x10 ]
test eax eax
je r-xdata
and eax 0x2
je r-xdata
movzx ecx bl
movzx ecx [ esi + ecx * 2 ]
test cl 0x4
je r-xdata
or [ ebp + 0x18 ] 0x4
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
cmp ecx edx
jbe r-xdata
test [ ebp + 0x18 ] 0x2
je r-xdata
mov [ eax ] edi
test eax eax
jne r-xdata
cmp [ ebp - 0x4 ] 0x80000000
ja r-xdata
mov bl [ edi ]
inc edi
jmp r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
neg [ ebp - 0x4 ]
cmp [ ebp - 0x4 ] esi
jbe r-xdata
mov eax [ ebp - 0x4 ]
jmp r-xdata
mov eax [ ebp - 0xc ]
and [ eax + 0x70 ] 0xfffffffd
pop ebx
sub_1003b9ed
mov edi edi
push ebp
mov ebp esp
xor eax eax
push eax
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
cmp [ rw-data ] eax
jne r-xdata
push eax
push rw-data
jmp r-xdata
call sub_1003b7be
add esp 0x14
pop ebp
retn
sub_1003ba37
mov eax [ rw-data ]
push esi
mov esi [ CloseHandle@IAT ]
cmp eax 0xffffffff
je r-xdata
mov eax [ rw-data ]
cmp eax 0xffffffff
je r-xdata
cmp eax 0xfffffffe
je r-xdata
pop esi
retn
cmp eax 0xfffffffe
je r-xdata
push eax
call esi
push eax
call esi
sub_1003ba64
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
push ebx
push esi
push edi
xor ebx ebx
push 0x1
push ebx
push ebx
push [ ebp + 0x8 ]
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0xc ] ebx
call sub_10037542
mov [ ebp - 0x18 ] eax
and eax edx
add esp 0x10
mov [ ebp - 0x14 ] edx
cmp eax 0xffffffff
je r-xdata
call sub_1002c068
mov eax [ eax ]
push 0x2
push ebx
push ebx
push [ ebp + 0x8 ]
call sub_10037542
mov ecx eax
and ecx edx
add esp 0x10
cmp ecx 0xffffffff
je r-xdata
mov esi [ ebp + 0xc ]
mov edi [ ebp + 0x10 ]
sub esi eax
sbb edi edx
js r-xdata
cmp edi ebx
jg r-xdata
jg r-xdata
push ebx
push [ ebp - 0x14 ]
push [ ebp - 0x18 ]
push [ ebp + 0x8 ]
call sub_10037542
and eax edx
add esp 0x10
cmp eax 0xffffffff
je r-xdata
jl r-xdata
mov ebx 0x1000
push ebx
push 0x8
call [ GetProcessHeap@IAT ]
push eax
call [ HeapAlloc@IAT ]
mov [ ebp - 0x4 ] eax
test eax eax
jne r-xdata
cmp esi ebx
jbe r-xdata
xor eax eax
jmp r-xdata
push ebx
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_10037542
and eax edx
add esp 0x10
cmp eax 0xffffffff
je r-xdata
cmp esi ebx
jae r-xdata
push 0x8000
push [ ebp + 0x8 ]
call sub_1003bc1a
pop ecx
pop ecx
mov [ ebp - 0x8 ] eax
call sub_1002c068
mov [ eax ] 0xc
pop edi
pop esi
pop ebx
leave
retn
push [ ebp + 0x8 ]
call sub_10038b6d
pop ecx
push eax
call [ SetEndOfFile@IAT ]
neg eax
sbb eax eax
neg eax
dec eax
cdq
mov [ ebp - 0x10 ] eax
and eax edx
mov [ ebp - 0xc ] edx
cmp eax 0xffffffff
jne r-xdata
mov eax esi
jg r-xdata
call sub_1002c068
mov [ eax ] 0xd
call sub_1002c07b
mov esi eax
call [ GetLastError@IAT ]
mov [ esi ] eax
mov esi [ ebp - 0x10 ]
call sub_1002c07b
cmp [ eax ] 0x5
jne r-xdata
cdq
sub esi eax
sbb edi edx
js r-xdata
mov eax ebx
jmp r-xdata
cmp esi ebx
jb r-xdata
or esi 0xffffffff
mov [ ebp - 0xc ] esi
jmp r-xdata
call sub_1002c068
mov [ eax ] 0xd
mov esi [ ebp - 0x10 ]
jg r-xdata
push eax
push [ ebp - 0x4 ]
push [ ebp + 0x8 ]
call sub_10030af2
add esp 0xc
cmp eax 0xffffffff
je r-xdata
push [ ebp - 0x8 ]
push [ ebp + 0x8 ]
call sub_1003bc1a
pop ecx
pop ecx
push [ ebp - 0x4 ]
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
xor ebx ebx
jmp r-xdata
and esi [ ebp - 0xc ]
cmp esi 0xffffffff
je r-xdata
test edi edi
jl r-xdata
test esi esi
ja r-xdata
sub_1003bc1a
mov edi edi
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
mov eax esi
sar eax 0x5
lea edx [ eax * 4 + rw-data ]
mov eax [ edx ]
and esi 0x1f
shl esi 0x6
lea ecx [ eax + esi ]
mov al [ ecx + 0x24 ]
add al al
push edi
movzx edi [ ecx + 0x4 ]
movsx eax al
and edi 0x80
sar eax 0x1
cmp ebx 0x4000
je r-xdata
or [ ecx + 0x4 ] 0x80
mov ecx [ edx ]
lea ecx [ ecx + esi + 0x24 ]
and [ ecx ] 0x80
cmp ebx 0x8000
je r-xdata
neg eax
sbb eax eax
and eax 0xc000
add eax 0x4000
pop ebp
retn
mov eax 0x8000
pop ebp
retn
and [ ecx + 0x4 ] 0x7f
jmp r-xdata
cmp ebx 0x10000
je r-xdata
test edi edi
pop edi
pop esi
pop ebx
jne r-xdata
or [ ecx + 0x4 ] 0x80
mov ecx [ edx ]
lea ecx [ ecx + esi + 0x24 ]
mov dl [ ecx ]
and dl 0x82
or dl 0x2
jmp r-xdata
cmp ebx 0x20000
je r-xdata
mov [ ecx ] dl
jmp r-xdata
cmp ebx 0x40000
jne r-xdata
or [ ecx + 0x4 ] 0x80
mov ecx [ edx ]
lea ecx [ ecx + esi + 0x24 ]
mov dl [ ecx ]
and dl 0x81
or dl 0x1
sub_1003bcd6
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
xor esi esi
cmp eax esi
jne r-xdata
mov ecx [ rw-data ]
mov [ eax ] ecx
xor eax eax
call sub_1002c068
push esi
push esi
push esi
push esi
push esi
mov [ eax ] 0x16
call sub_100261c9
add esp 0x14
push 0x16
pop eax
jmp r-xdata
pop esi
pop ebp
retn
sub_1003bd0f
mov edi edi
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
push esi
mov esi [ rw-data ]
jne r-xdata
push edi
test esi esi
jne r-xdata
xor eax eax
jmp r-xdata
cmp [ ebp + 0x8 ] 0x0
je r-xdata
cmp [ rw-data ] esi
je r-xdata
pop esi
pop ebp
retn
xor eax eax
push [ ebp + 0x8 ]
call sub_10025d30
pop ecx
mov edi eax
jmp r-xdata
call sub_1003ceed
test eax eax
jne r-xdata
mov eax [ esi ]
test eax eax
jne r-xdata
mov esi [ rw-data ]
test esi esi
je r-xdata
push eax
call sub_10025d30
pop ecx
cmp eax edi
jbe r-xdata
add esi 0x4
mov eax [ esi ]
cmp [ eax + edi ] 0x3d
jne r-xdata
push edi
push [ ebp + 0x8 ]
push eax
call sub_1003ced3
add esp 0xc
test eax eax
je r-xdata
mov eax [ esi ]
lea eax [ eax + edi + 0x1 ]
jmp r-xdata
pop edi
sub_1003bda0
push ebp
mov ebp esp
push edi
push esi
push ebx
mov ecx [ ebp + 0x10 ]
or ecx ecx
je r-xdata
mov eax ecx
pop ebx
pop esi
pop edi
leave
retn
mov esi [ ebp + 0x8 ]
mov edi [ ebp + 0xc ]
mov bh 0x41
mov bl 0x5a
mov dh 0x20
lea ecx [ ecx ]
xor ecx ecx
cmp ah al
je r-xdata
or al al
je r-xdata
mov ecx 0xffffffff
jb r-xdata
add esi 0x1
add edi 0x1
cmp ah bh
jb r-xdata
neg ecx
cmp al bh
jb r-xdata
cmp ah bl
ja r-xdata
cmp ah al
jne r-xdata
cmp al bl
ja r-xdata
add ah dh
sub ecx 0x1
jne r-xdata
add al dh
mov ah [ esi ]
or ah ah
mov al [ edi ]
je r-xdata
sub_1003be01
mov edi edi
push ebp
mov ebp esp
sub esp 0x74
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
mov ebx [ ebp + 0x1c ]
push esi
push edi
lea esi [ ebp + 0x8 ]
lea edi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsw [ edi ] [ esi ]
mov edx [ ebp - 0x8 ]
mov ecx edx
mov eax 0x8000
and ecx eax
and edx 0x7fff
mov [ ebp - 0x60 ] ebx
mov [ ebp - 0x30 ] 0xcc
mov [ ebp - 0x2f ] 0xcc
mov [ ebp - 0x2e ] 0xcc
mov [ ebp - 0x2d ] 0xcc
mov [ ebp - 0x2c ] 0xcc
mov [ ebp - 0x2b ] 0xcc
mov [ ebp - 0x2a ] 0xcc
mov [ ebp - 0x29 ] 0xcc
mov [ ebp - 0x28 ] 0xcc
mov [ ebp - 0x27 ] 0xcc
mov [ ebp - 0x26 ] 0xfb
mov [ ebp - 0x25 ] 0x3f
mov [ ebp - 0x74 ] 0x1
mov [ ebp - 0x70 ] ecx
test cx cx
je r-xdata
mov [ ebx + 0x2 ] 0x20
mov [ ebx + 0x2 ] 0x2d
jmp r-xdata
mov eax 0x7fff
cmp dx ax
jne r-xdata
test esi esi
jne r-xdata
mov esi [ ebp - 0xc ]
mov edi [ ebp - 0x10 ]
test dx dx
jne r-xdata
movzx ecx dx
mov ebx ecx
imul ecx ecx 0x4d10
shr ebx 0x8
mov eax esi
shr eax 0x18
lea eax [ ebx + eax * 2 ]
imul eax eax 0x4d
lea eax [ eax + ecx - 0x134312f4 ]
sar eax 0x10
movzx eax ax
xor ecx ecx
movsx ebx ax
mov [ ebp - 0x20 ] cx
mov ecx rw-data
neg ebx
sub ecx 0x60
mov [ ebp - 0x4c ] eax
mov [ ebp - 0x16 ] dx
mov [ ebp - 0x1a ] esi
mov [ ebp - 0x1e ] edi
mov [ ebp - 0x64 ] ecx
test ebx ebx
je r-xdata
xor eax eax
inc eax
mov [ ebx ] ax
mov eax 0x80000000
cmp esi eax
jne r-xdata
test edi edi
jne r-xdata
mov ecx [ ebp - 0x18 ]
shr ecx 0x10
mov edx 0x3fff
mov eax 0x7fff
cmp cx dx
jb r-xdata
jge r-xdata
test esi 0x40000000
jne r-xdata
test edi edi
je r-xdata
xor edx edx
cmp cx ax
setne al
dec al
and al 0xd
add al 0x20
mov [ ebx ] dx
mov [ ebx + 0x2 ] al
mov [ ebx + 0x3 ] 0x1
mov [ ebx + 0x4 ] 0x30
mov [ ebx + 0x5 ] dl
test [ ebp + 0x18 ] 0x1
mov edx [ ebp - 0x60 ]
mov eax [ ebp - 0x4c ]
mov edi [ ebp + 0x14 ]
mov [ edx ] ax
je r-xdata
inc [ ebp - 0x4c ]
xor edx edx
mov [ ebp - 0x50 ] edx
mov [ ebp - 0x10 ] edx
mov [ ebp - 0xc ] edx
mov [ ebp - 0x8 ] edx
mov edx [ ebp - 0x26 ]
movzx ecx cx
mov ebx edx
xor ebx ecx
and ecx eax
and edx eax
and ebx 0x8000
mov edi eax
lea esi [ edx + ecx ]
mov [ ebp - 0x5c ] ebx
movzx esi si
cmp cx di
jae r-xdata
test ebx ebx
je r-xdata
mov eax rw-data
neg ebx
sub eax 0x60
mov [ ebp - 0x64 ] eax
test cx cx
je r-xdata
push r--data
jmp r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_10025c8d
leave
retn
cmp edi 0x15
jle r-xdata
cwde
add edi eax
test edi edi
jg r-xdata
xor eax eax
test bx bx
sete al
and [ ebp - 0x1c ] 0x0
dec eax
and eax 0x80000000
add eax 0x7fff8000
and [ ebp - 0x20 ] 0x0
cmp dx ax
jae r-xdata
add [ ebp - 0x64 ] 0x54
mov ecx ebx
and ecx 0x7
sar ebx 0x3
test ecx ecx
je r-xdata
cmp esi eax
jne r-xdata
cmp esi 0xc0000000
jne r-xdata
lea eax [ ebx + 0x4 ]
push 0x16
push eax
call sub_1002d40c
add esp 0xc
xor esi esi
test eax eax
je r-xdata
mov esi [ ebp - 0x18 ]
shr esi 0x10
sub esi 0x3ffe
xor eax eax
mov [ ebp - 0x16 ] ax
mov [ ebp - 0x44 ] 0x8
push 0x15
pop edi
xor eax eax
mov [ edx ] ax
mov eax 0x8000
cmp [ ebp - 0x70 ] ax
mov [ edx + 0x3 ] 0x1
setne al
dec al
and al 0xd
add al 0x20
mov [ edx + 0x2 ] al
mov [ edx + 0x4 ] 0x30
mov [ edx + 0x5 ] 0x0
jmp r-xdata
mov eax 0xbffd
cmp si ax
ja r-xdata
xor esi esi
imul ecx ecx 0xc
add ecx [ ebp - 0x64 ]
mov eax ecx
mov [ ebp - 0x44 ] ecx
mov ecx 0x8000
cmp [ eax ] cx
jb r-xdata
push r--data
test edi edi
jne r-xdata
test edi edi
jne r-xdata
mov [ ebx + 0x3 ] 0x6
push esi
push esi
push esi
push esi
push esi
call sub_100260a1
add esp 0x14
mov eax [ ebp - 0x20 ]
mov ebx [ ebp - 0x1c ]
mov ecx [ ebp - 0x1c ]
shl [ ebp - 0x20 ] 0x1
shr eax 0x1f
add ebx ebx
or ebx eax
mov eax [ ebp - 0x18 ]
shr ecx 0x1f
add eax eax
or eax ecx
dec [ ebp - 0x44 ]
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x18 ] eax
jne r-xdata
test esi esi
jge r-xdata
xor eax eax
inc eax
jmp r-xdata
mov eax 0x3fbf
cmp si ax
ja r-xdata
movzx edx [ eax + 0xa ]
xor ecx ecx
mov [ ebp - 0x54 ] ecx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] ecx
mov ecx [ ebp - 0x16 ]
mov esi edx
xor esi ecx
and esi 0x8000
mov [ ebp - 0x48 ] esi
mov esi 0x7fff
and ecx esi
and edx esi
lea esi [ edx + ecx ]
movzx edi si
mov esi 0x7fff
cmp cx si
jae r-xdata
mov esi eax
lea edi [ ebp - 0x3c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
lea eax [ ebp - 0x3c ]
movsd [ edi ] [ esi ]
dec [ ebp - 0x3a ]
mov [ ebp - 0x44 ] eax
push r--data
push r--data
jmp r-xdata
lea eax [ edi + 0x1 ]
lea ebx [ edx + 0x4 ]
mov [ ebp - 0x40 ] ebx
mov [ ebp - 0x4c ] eax
test eax eax
jle r-xdata
neg esi
and esi 0xff
jle r-xdata
xor eax eax
cmp cx ax
jne r-xdata
xor eax eax
xor eax eax
xor esi esi
cmp [ ebp - 0x48 ] si
sete al
dec eax
and eax 0x80000000
add eax 0x7fff8000
mov [ ebp - 0x18 ] eax
jmp r-xdata
cmp dx si
jae r-xdata
mov [ ebx + 0x3 ] 0x5
jmp r-xdata
push esi
push esi
push esi
push esi
push esi
call sub_100260a1
add esp 0x14
lea eax [ ebx + 0x4 ]
push 0x16
push eax
call sub_1002d40c
add esp 0xc
xor esi esi
test eax eax
je r-xdata
dec ebx
mov al [ ebx ]
dec ebx
cmp al 0x35
jge r-xdata
mov edx [ ebp - 0x20 ]
mov eax [ ebp - 0x1c ]
lea esi [ ebp - 0x20 ]
lea edi [ ebp - 0x3c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
shl [ ebp - 0x20 ] 0x1
mov edi [ ebp - 0x20 ]
shl [ ebp - 0x20 ] 0x1
shr edx 0x1f
lea ecx [ eax + eax ]
or ecx edx
mov edx [ ebp - 0x18 ]
mov esi eax
shr esi 0x1f
add edx edx
or edx esi
mov eax ecx
lea esi [ ecx + ecx ]
shr eax 0x1f
lea ecx [ edx + edx ]
mov edx [ ebp - 0x3c ]
shr edi 0x1f
or ecx eax
mov eax [ ebp - 0x20 ]
or esi edi
lea edi [ edx + eax ]
cmp edi eax
jb r-xdata
mov eax [ ebp - 0x18 ]
mov ebx [ ebp - 0x1c ]
mov ecx [ ebp - 0x1c ]
shr [ ebp - 0x18 ] 0x1
shl eax 0x1f
shr ebx 0x1
or ebx eax
mov eax [ ebp - 0x20 ]
shl ecx 0x1f
shr eax 0x1
or eax ecx
dec esi
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x20 ] eax
test esi esi
jg r-xdata
cmp dx ax
jne r-xdata
inc esi
test [ ebp - 0x18 ] 0x7fffffff
jne r-xdata
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x1c ] esi
mov [ ebp - 0x20 ] esi
jmp r-xdata
mov esi 0xbffd
cmp di si
ja r-xdata
xor eax eax
jmp r-xdata
cmp ebx [ ebp - 0x40 ]
jae r-xdata
mov ecx [ ebp - 0x40 ]
jmp r-xdata
lea eax [ esi + 0x1 ]
xor edx edx
cmp eax esi
jb r-xdata
cmp edi edx
jae r-xdata
mov [ ebp - 0x58 ] eax
lea edi [ ebp - 0xc ]
mov [ ebp - 0x40 ] 0x5
inc esi
test [ ebp - 0x28 ] 0x7fffffff
jne r-xdata
cmp [ ebp - 0x1c ] eax
jne r-xdata
cmp ebx esi
jne r-xdata
mov esi 0x3fbf
cmp di si
ja r-xdata
cmp [ ebx ] 0x39
jne r-xdata
mov eax [ ebp - 0x60 ]
cmp ebx [ ebp - 0x40 ]
jae r-xdata
cmp ebx ecx
jae r-xdata
xor edx edx
inc edx
cmp eax 0x1
jae r-xdata
mov eax [ ebp - 0x38 ]
lea edx [ eax + esi ]
mov [ ebp - 0x44 ] edx
cmp edx esi
jb r-xdata
inc edi
inc edi
inc [ ebp - 0x58 ]
dec [ ebp - 0x40 ]
cmp [ ebp - 0x40 ] 0x0
jg r-xdata
lea ecx [ ebp - 0x28 ]
mov [ ebp - 0x48 ] ecx
lea eax [ ebp + eax - 0x20 ]
cmp [ ebp - 0x2c ] eax
jne r-xdata
cmp [ ebp - 0x20 ] eax
jne r-xdata
xor esi esi
cmp cx si
jne r-xdata
xor esi esi
mov [ ebx ] 0x30
dec ebx
inc [ ebx ]
inc ebx
inc [ eax ]
cmp [ ebx ] 0x30
jne r-xdata
mov eax [ ebp - 0x60 ]
cmp ebx ecx
jae r-xdata
inc ecx
mov esi eax
test edx edx
je r-xdata
inc ecx
cmp edx eax
jae r-xdata
mov eax [ ebp - 0x58 ]
mov ecx [ ebp - 0x40 ]
add eax eax
mov [ ebp - 0x54 ] ecx
test ecx ecx
jle r-xdata
add esi 0xc002
test si si
jle r-xdata
mov [ ebp - 0x44 ] 0x1
cmp ebx ecx
jae r-xdata
cmp [ ebp - 0x30 ] eax
je r-xdata
mov [ ebp - 0x16 ] ax
jmp r-xdata
cmp dx si
jne r-xdata
inc edi
test [ ebp - 0x18 ] 0x7fffffff
jne r-xdata
dec ebx
sub bl al
sub bl 0x3
movsx ecx bl
mov [ eax + 0x3 ] bl
mov [ ecx + eax + 0x4 ] 0x0
mov eax [ ebp - 0x74 ]
xor edx edx
mov [ eax ] dx
mov edx 0x8000
cmp [ ebp - 0x70 ] dx
mov [ eax + 0x3 ] 0x1
setne dl
dec dl
and dl 0xd
add dl 0x20
mov [ eax + 0x2 ] dl
mov [ ecx ] 0x30
mov [ eax + 0x5 ] 0x0
jmp r-xdata
add ecx [ ebp - 0x34 ]
shr edx 0x1f
add ecx ecx
or ecx edx
lea esi [ edi + edi ]
mov [ ebp - 0x20 ] esi
mov esi [ ebp - 0x44 ]
mov [ ebp - 0x18 ] ecx
shr ecx 0x18
add esi esi
add cl 0x30
mov eax edi
shr eax 0x1f
or esi eax
mov [ ebx ] cl
inc ebx
dec [ ebp - 0x4c ]
cmp [ ebp - 0x4c ] 0x0
mov [ ebp - 0x1c ] esi
mov [ ebp - 0x15 ] 0x0
jg r-xdata
add esi 0xffff
test si si
jge r-xdata
mov edi [ ebp - 0x8 ]
test edi edi
js r-xdata
sub [ ebp - 0x48 ] 0x2
inc eax
inc eax
dec [ ebp - 0x54 ]
cmp [ ebp - 0x54 ] 0x0
jg r-xdata
inc [ edi ]
cmp [ ebp - 0x44 ] 0x0
mov [ edi - 0x4 ] ebx
je r-xdata
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x20 ] eax
jmp r-xdata
and [ ebp - 0x58 ] esi
lea esi [ ebp - 0xc ]
mov [ ebp - 0x40 ] 0x5
inc edi
test [ eax + 0x8 ] 0x7fffffff
jne r-xdata
cmp [ ebp - 0x1c ] esi
jne r-xdata
mov eax 0x8000
mov ecx eax
cmp [ ebp - 0x10 ] cx
ja r-xdata
mov eax esi
neg eax
movzx eax ax
add esi eax
test si si
jg r-xdata
mov eax [ ebp - 0xc ]
mov ecx [ ebp - 0x10 ]
shl [ ebp - 0x10 ] 0x1
mov edx eax
add eax eax
shr ecx 0x1f
or eax ecx
mov [ ebp - 0xc ] eax
shr edx 0x1f
lea eax [ edi + edi ]
or eax edx
add esi 0xffff
mov [ ebp - 0x8 ] eax
test si si
jg r-xdata
mov ecx [ ebp - 0x48 ]
movzx edx [ eax ]
movzx ecx [ ecx ]
and [ ebp - 0x44 ] 0x0
imul ecx edx
mov edx [ edi - 0x4 ]
lea ebx [ edx + ecx ]
cmp ebx edx
jb r-xdata
inc esi
inc esi
inc [ ebp - 0x58 ]
dec [ ebp - 0x40 ]
cmp [ ebp - 0x40 ] 0x0
jg r-xdata
lea ecx [ ebp + ecx - 0x20 ]
add eax 0x8
mov [ ebp - 0x6c ] ecx
mov [ ebp - 0x68 ] eax
cmp [ eax + 0x4 ] esi
jne r-xdata
cmp [ ebp - 0x20 ] esi
jne r-xdata
cmp [ ebp - 0xe ] 0xffffffff
jne r-xdata
mov ecx [ ebp - 0x10 ]
and ecx 0x1ffff
cmp ecx 0x18000
jne r-xdata
mov ecx [ ebp - 0x8 ]
mov edi [ ebp - 0xc ]
mov edx [ ebp - 0xc ]
shr [ ebp - 0x8 ] 0x1
shl ecx 0x1f
shr edi 0x1
or edi ecx
mov ecx [ ebp - 0x10 ]
shl edx 0x1f
shr ecx 0x1
or ecx edx
dec eax
mov [ ebp - 0xc ] edi
mov [ ebp - 0x10 ] ecx
jne r-xdata
inc [ ebp - 0x50 ]
mov ecx [ ebp - 0x58 ]
mov edx [ ebp - 0x40 ]
add ecx ecx
mov [ ebp - 0x50 ] edx
test edx edx
jle r-xdata
add edi 0xc002
test di di
jle r-xdata
mov [ ebp - 0x5c ] 0x1
cmp eax ecx
jae r-xdata
cmp [ eax ] esi
je r-xdata
xor eax eax
mov [ ebp - 0x16 ] ax
jmp r-xdata
inc [ ebp - 0xe ]
and [ ebp - 0xe ] 0x0
cmp [ ebp - 0xa ] 0xffffffff
jne r-xdata
mov eax 0x7fff
cmp si ax
jb r-xdata
test [ ebp - 0x10 ] 0x1
je r-xdata
cmp [ ebp - 0x50 ] eax
je r-xdata
add edi 0xffff
test di di
jge r-xdata
test [ ebp - 0x8 ] 0x80000000
jne r-xdata
add [ ebp - 0x6c ] 0x2
sub [ ebp - 0x68 ] 0x2
dec [ ebp - 0x50 ]
cmp [ ebp - 0x50 ] 0x0
jg r-xdata
inc [ esi ]
cmp [ ebp - 0x5c ] 0x0
mov [ esi - 0x4 ] eax
je r-xdata
mov [ ebp - 0x18 ] esi
mov ax [ ebp - 0xe ]
or esi [ ebp - 0x5c ]
mov [ ebp - 0x20 ] ax
mov eax [ ebp - 0xc ]
mov [ ebp - 0x1e ] eax
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x1a ] eax
mov [ ebp - 0x16 ] si
jmp r-xdata
xor eax eax
xor ecx ecx
cmp [ ebp - 0x5c ] ax
mov [ ebp - 0x1c ] eax
sete cl
mov [ ebp - 0x20 ] eax
dec ecx
and ecx 0x80000000
add ecx 0x7fff8000
mov [ ebp - 0x18 ] ecx
jmp r-xdata
inc [ ebp - 0xa ]
jmp r-xdata
and [ ebp - 0xa ] 0x0
mov ecx 0xffff
cmp [ ebp - 0x6 ] cx
jne r-xdata
or [ ebp - 0x10 ] 0x1
mov eax 0x8000
mov ecx eax
cmp [ ebp - 0x10 ] cx
ja r-xdata
mov eax edi
neg eax
movzx eax ax
add edi eax
test di di
jg r-xdata
mov eax [ ebp - 0xc ]
mov ecx [ ebp - 0x10 ]
shl [ ebp - 0x10 ] 0x1
mov edx eax
add eax eax
shr ecx 0x1f
or eax ecx
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x8 ]
shr edx 0x1f
add eax eax
or eax edx
add edi 0xffff
mov [ ebp - 0x8 ] eax
test di di
jg r-xdata
mov eax [ ebp - 0x6c ]
movzx ecx [ eax ]
mov eax [ ebp - 0x68 ]
movzx eax [ eax ]
mov edx [ esi - 0x4 ]
imul ecx eax
and [ ebp - 0x5c ] 0x0
lea eax [ edx + ecx ]
cmp eax edx
jb r-xdata
mov eax [ ebp - 0x44 ]
inc [ ebp - 0x6 ]
jmp r-xdata
mov [ ebp - 0x6 ] ax
inc esi
jmp r-xdata
cmp [ ebp - 0xe ] 0xffffffff
jne r-xdata
mov ecx [ ebp - 0x10 ]
and ecx 0x1ffff
cmp ecx 0x18000
jne r-xdata
mov ecx [ ebp - 0x8 ]
mov esi [ ebp - 0xc ]
mov edx [ ebp - 0xc ]
shr [ ebp - 0x8 ] 0x1
shl ecx 0x1f
shr esi 0x1
or esi ecx
mov ecx [ ebp - 0x10 ]
shl edx 0x1f
shr ecx 0x1
or ecx edx
dec eax
mov [ ebp - 0xc ] esi
mov [ ebp - 0x10 ] ecx
jne r-xdata
inc [ ebp - 0x54 ]
inc [ ebp - 0xe ]
and [ ebp - 0xe ] 0x0
cmp [ ebp - 0xa ] 0xffffffff
jne r-xdata
mov eax 0x7fff
cmp di ax
jb r-xdata
test [ ebp - 0x10 ] 0x1
je r-xdata
cmp [ ebp - 0x54 ] eax
je r-xdata
mov ax [ ebp - 0xe ]
or edi [ ebp - 0x48 ]
mov [ ebp - 0x20 ] ax
mov eax [ ebp - 0xc ]
mov [ ebp - 0x1e ] eax
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x1a ] eax
mov [ ebp - 0x16 ] di
jmp r-xdata
xor eax eax
xor ecx ecx
cmp [ ebp - 0x48 ] ax
mov [ ebp - 0x1c ] eax
sete cl
mov [ ebp - 0x20 ] eax
dec ecx
and ecx 0x80000000
add ecx 0x7fff8000
mov [ ebp - 0x18 ] ecx
inc [ ebp - 0xa ]
jmp r-xdata
and [ ebp - 0xa ] 0x0
mov ecx 0xffff
cmp [ ebp - 0x6 ] cx
jne r-xdata
or [ ebp - 0x10 ] 0x1
inc [ ebp - 0x6 ]
jmp r-xdata
mov [ ebp - 0x6 ] ax
inc edi
jmp r-xdata
sub_1003c725
xor eax eax
test bl 0x10
je r-xdata
test bl 0x8
je r-xdata
inc eax
test bl 0x4
je r-xdata
or eax 0x4
test bl 0x2
je r-xdata
or eax 0x8
test bl 0x1
je r-xdata
or eax 0x10
test ebx 0x80000
je r-xdata
or eax 0x20
mov ecx ebx
mov edx 0x300
and ecx edx
push esi
mov esi 0x200
je r-xdata
or eax 0x2
mov ecx ebx
and ecx 0x30000
je r-xdata
cmp ecx 0x100
je r-xdata
or eax edx
cmp ecx 0x10000
jne r-xdata
or eax 0x400
cmp ecx esi
je r-xdata
retn
or eax 0x1000
pop esi
test ebx 0x40000
je r-xdata
or eax esi
jmp r-xdata
or eax 0x800
jmp r-xdata
cmp ecx edx
jne r-xdata
or eax 0xc00
jmp r-xdata
sub_1003c7b3
xor eax eax
test dl 0x10
je r-xdata
push ebx
push esi
push edi
mov ebx 0x200
test dl 0x8
je r-xdata
mov eax 0x80
test dl 0x4
je r-xdata
or eax ebx
test dl 0x2
je r-xdata
or eax 0x400
test dl 0x1
je r-xdata
or eax 0x800
mov edi 0x100
test edx 0x80000
je r-xdata
or eax 0x1000
mov ecx edx
mov esi 0x300
and ecx esi
je r-xdata
or eax edi
mov ecx 0x3000000
pop edi
and edx ecx
pop esi
pop ebx
cmp edx 0x1000000
je r-xdata
cmp ecx edi
je r-xdata
or eax 0x8040
cmp edx 0x2000000
je r-xdata
or eax 0x2000
cmp ecx ebx
je r-xdata
or eax 0x40
retn
cmp edx ecx
jne r-xdata
or eax 0x4000
jmp r-xdata
cmp ecx esi
jne r-xdata
retn
or eax 0x8000
retn
or eax 0x6000
jmp r-xdata
sub_1003c853
mov edi edi
push ebp
mov ebp esp
sub esp 0x14
push ebx
push esi
push edi
fwait
fnstcw [ ebp - 0x8 ]
mov ebx [ ebp - 0x8 ]
xor edx edx
test bl 0x1
je r-xdata
test bl 0x4
je r-xdata
push 0x10
pop edx
test bl 0x8
je r-xdata
or edx 0x8
test bl 0x10
je r-xdata
or edx 0x4
test bl 0x20
je r-xdata
or edx 0x2
test bl 0x2
je r-xdata
or edx 0x1
movzx ecx bx
mov eax ecx
mov esi 0xc00
and eax esi
mov edi 0x300
je r-xdata
or edx 0x80000
and ecx edi
je r-xdata
cmp eax 0x400
je r-xdata
or edx 0x20000
cmp ecx 0x200
jne r-xdata
or edx 0x100
cmp eax 0x800
je r-xdata
mov edi [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
mov eax edi
not eax
and eax edx
and ecx edi
or eax ecx
mov [ ebp + 0xc ] eax
cmp eax edx
je r-xdata
or edx 0x40000
test ebx 0x1000
je r-xdata
or edx 0x10000
jmp r-xdata
or edx 0x200
jmp r-xdata
cmp eax esi
jne r-xdata
xor esi esi
cmp [ rw-data ] esi
je r-xdata
mov ebx eax
call sub_1003c725
movzx eax ax
mov [ ebp - 0x4 ] eax
fldcw [ ebp - 0x4 ]
fwait
fnstcw [ ebp - 0x4 ]
mov ebx [ ebp - 0x4 ]
xor edx edx
test bl 0x1
je r-xdata
or edx edi
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn
and edi 0x308031f
mov [ ebp - 0x14 ] edi
stmxcsr [ ebp - 0x10 ]
mov eax [ ebp - 0x10 ]
test al al
jns r-xdata
test bl 0x4
je r-xdata
push 0x10
pop edx
test eax 0x200
je r-xdata
push 0x10
pop esi
test bl 0x8
je r-xdata
or edx 0x8
test eax 0x400
je r-xdata
or esi 0x8
test bl 0x10
je r-xdata
or edx 0x4
test eax 0x800
je r-xdata
or esi 0x4
test bl 0x20
je r-xdata
or edx 0x2
test eax 0x1000
je r-xdata
or esi 0x2
test bl 0x2
je r-xdata
or edx 0x1
test eax 0x100
je r-xdata
or esi 0x1
movzx ecx bx
mov eax ecx
and eax esi
je r-xdata
or edx 0x80000
mov ecx eax
mov ebx 0x6000
and ecx ebx
je r-xdata
or esi 0x80000
and ecx 0x300
je r-xdata
cmp eax 0x400
je r-xdata
mov edi 0x8040
and eax edi
sub eax 0x40
je r-xdata
cmp ecx 0x2000
je r-xdata
or edx 0x20000
cmp ecx 0x200
jne r-xdata
or edx 0x100
cmp eax 0x800
je r-xdata
or esi 0x2000000
sub eax 0x7fc0
je r-xdata
or esi 0x100
cmp ecx 0x4000
je r-xdata
mov [ ebp + 0xc ] edx
mov eax edx
or edx 0x40000
test ebx 0x1000
je r-xdata
or edx 0x10000
jmp r-xdata
or edx 0x200
jmp r-xdata
cmp eax esi
jne r-xdata
call sub_1003c7b3
push eax
mov [ ebp - 0xc ] eax
call sub_1003cf84
pop ecx
stmxcsr [ ebp - 0xc ]
mov ecx [ ebp - 0xc ]
xor edx edx
test cl cl
jns r-xdata
mov eax esi
jmp r-xdata
or esi 0x3000000
jmp r-xdata
sub eax 0x40
jne r-xdata
or esi 0x200
jmp r-xdata
cmp ecx ebx
jne r-xdata
or edx 0x300
jmp r-xdata
test ecx 0x200
je r-xdata
push 0x10
pop edx
mov ecx eax
xor ecx [ ebp + 0xc ]
or eax [ ebp + 0xc ]
test ecx 0x8031f
je r-xdata
mov eax [ ebp - 0x14 ]
mov edx eax
and eax [ ebp + 0x8 ]
not edx
and edx esi
or edx eax
cmp edx esi
jne r-xdata
or esi 0x1000000
jmp r-xdata
or esi 0x300
jmp r-xdata
test ecx 0x400
je r-xdata
or edx 0x8
or eax 0x80000000
test ecx 0x800
je r-xdata
or edx 0x4
test ecx 0x1000
je r-xdata
or edx 0x2
mov esi 0x100
test esi ecx
je r-xdata
or edx 0x1
mov eax ecx
and eax ebx
je r-xdata
or edx 0x80000
and ecx edi
sub ecx 0x40
je r-xdata
cmp eax 0x2000
je r-xdata
or edx 0x2000000
sub ecx 0x7fc0
je r-xdata
or edx esi
cmp eax 0x4000
je r-xdata
or edx 0x3000000
jmp r-xdata
sub ecx 0x40
jne r-xdata
or edx 0x200
jmp r-xdata
cmp eax ebx
jne r-xdata
mov eax edx
or edx 0x1000000
jmp r-xdata
or edx 0x300
jmp r-xdata
sub_1003cb62
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x10 ]
push ebx
push esi
xor esi esi
push edi
mov [ ebp - 0x18 ] 0x404e
mov [ eax ] esi
mov [ eax + 0x4 ] esi
mov [ eax + 0x8 ] esi
cmp [ ebp + 0xc ] esi
jbe r-xdata
cmp [ eax + 0x8 ] esi
je r-xdata
mov edx [ eax ]
mov ebx [ eax + 0x4 ]
mov esi eax
lea edi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ecx edx
shr ecx 0x1f
lea edi [ edx + edx ]
lea edx [ ebx + ebx ]
or edx ecx
mov ecx [ eax + 0x8 ]
mov esi ebx
shr esi 0x1f
add ecx ecx
or ecx esi
mov [ ebp - 0x14 ] edi
mov esi edi
and [ ebp - 0x14 ] 0x0
mov ebx edx
shr ebx 0x1f
add ecx ecx
shr edi 0x1f
or ecx ebx
mov ebx [ ebp - 0x10 ]
add esi esi
add edx edx
or edx edi
lea edi [ esi + ebx ]
mov [ eax ] esi
mov [ eax + 0x4 ] edx
mov [ eax + 0x8 ] ecx
cmp edi esi
jb r-xdata
mov ecx [ eax + 0x4 ]
mov edx ecx
shr edx 0x10
mov [ eax + 0x8 ] edx
mov edx [ eax ]
mov edi edx
shl ecx 0x10
shr edi 0x10
or ecx edi
shl edx 0x10
add [ ebp - 0x18 ] 0xfff0
mov [ eax + 0x4 ] ecx
mov [ eax ] edx
mov ebx 0x8000
test [ eax + 0x8 ] ebx
jne r-xdata
mov [ ebp - 0x14 ] 0x1
cmp edi ebx
jae r-xdata
mov cx [ ebp - 0x18 ]
mov [ eax + 0xa ] cx
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_10025c8d
leave
retn
mov esi [ eax ]
mov edi [ eax + 0x4 ]
add [ ebp - 0x18 ] 0xffff
mov ecx esi
add esi esi
shr ecx 0x1f
mov [ eax ] esi
lea esi [ edi + edi ]
or esi ecx
mov ecx [ eax + 0x8 ]
mov edx edi
shr edx 0x1f
add ecx ecx
or ecx edx
mov [ eax + 0x4 ] esi
mov [ eax + 0x8 ] ecx
test ebx ecx
je r-xdata
mov ecx [ eax + 0x4 ]
mov edx [ ebp - 0xc ]
lea ebx [ ecx + edx ]
xor esi esi
cmp ebx ecx
jb r-xdata
lea esi [ edx + 0x1 ]
cmp esi edx
jb r-xdata
xor ebx ebx
mov [ eax ] edi
cmp [ ebp - 0x14 ] ebx
je r-xdata
xor esi esi
inc esi
cmp ebx edx
jae r-xdata
xor ebx ebx
inc ebx
cmp esi 0x1
jae r-xdata
mov ecx [ ebp - 0x8 ]
add [ eax + 0x8 ] ecx
and [ ebp - 0x14 ] 0x0
lea ecx [ edi + edi ]
mov edx edi
shr edx 0x1f
lea edi [ ebx + ebx ]
or edi edx
mov edx [ eax + 0x8 ]
mov esi ebx
shr esi 0x1f
lea ebx [ edx + edx ]
mov edx [ ebp + 0x8 ]
or ebx esi
mov [ eax ] ecx
mov [ eax + 0x4 ] edi
mov [ eax + 0x8 ] ebx
movsx edx [ edx ]
lea esi [ ecx + edx ]
mov [ ebp - 0x10 ] edx
cmp esi ecx
jb r-xdata
inc [ eax + 0x8 ]
mov [ eax + 0x4 ] ebx
test esi esi
je r-xdata
inc ecx
mov [ eax + 0x8 ] ecx
mov [ eax + 0x4 ] esi
test ebx ebx
je r-xdata
mov [ ebp - 0x14 ] 0x1
cmp esi edx
jae r-xdata
dec [ ebp + 0xc ]
inc [ ebp + 0x8 ]
cmp [ ebp + 0xc ] 0x0
ja r-xdata
lea ecx [ edi + 0x1 ]
xor edx edx
cmp ecx edi
jb r-xdata
cmp [ ebp - 0x14 ] 0x0
mov [ eax ] esi
je r-xdata
xor esi esi
jmp r-xdata
xor edx edx
inc edx
cmp ecx 0x1
jae r-xdata
inc ebx
mov [ eax + 0x8 ] ebx
mov [ eax + 0x4 ] ecx
test edx edx
je r-xdata
sub_1003cd30
mov edi edi
push ebp
mov ebp esp
mov eax 0xffff
mov ecx eax
sub esp 0x14
cmp [ ebp + 0x8 ] cx
je r-xdata
leave
retn
push ebx
push [ ebp + 0xc ]
lea ecx [ ebp - 0x14 ]
call sub_10029358
mov ecx [ ebp - 0x14 ]
mov edx [ ecx + 0x14 ]
xor ebx ebx
cmp edx ebx
jne r-xdata
push esi
mov eax 0x100
mov esi eax
cmp [ ebp + 0x8 ] si
pop esi
jae r-xdata
mov eax [ ebp + 0x8 ]
lea ecx [ eax - 0x41 ]
cmp cx 0x19
ja r-xdata
push [ ecx + 0x4 ]
lea ecx [ ebp - 0x4 ]
push 0x1
push ecx
push 0x1
lea ecx [ ebp + 0x8 ]
push ecx
push eax
push edx
lea eax [ ebp - 0x14 ]
push eax
call sub_1002cc8c
add esp 0x20
test eax eax
movzx eax [ ebp + 0x8 ]
je r-xdata
lea eax [ ebp - 0x14 ]
push eax
push 0x1
push [ ebp + 0x8 ]
call sub_100396d9
add esp 0xc
test eax eax
movzx eax [ ebp + 0x8 ]
je r-xdata
movzx eax ax
jmp r-xdata
add eax 0x20
cmp [ ebp - 0x8 ] bl
je r-xdata
movzx eax [ ebp - 0x4 ]
mov ecx [ ebp - 0x14 ]
mov ecx [ ecx + 0xcc ]
movzx ax [ ecx + eax ]
jmp r-xdata
pop ebx
mov ecx [ ebp - 0xc ]
and [ ecx + 0x70 ] 0xfffffffd
sub_1003cde5
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
push [ ebp + 0x14 ]
lea ecx [ ebp - 0x10 ]
call sub_10029358
mov ecx [ ebp + 0x10 ]
xor ebx ebx
cmp ecx ebx
jne r-xdata
cmp [ ebp + 0x8 ] ebx
jne r-xdata
cmp [ ebp - 0x4 ] bl
je r-xdata
cmp [ ebp + 0xc ] ebx
je r-xdata
call sub_1002c068
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x16
call sub_100261c9
add esp 0x14
cmp [ ebp - 0x4 ] bl
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
push esi
mov esi 0x7fffffff
cmp ecx esi
jbe r-xdata
mov eax 0x7fffffff
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
pop ebx
leave
retn
mov eax [ ebp - 0xc ]
cmp [ eax + 0x8 ] ebx
jne r-xdata
call sub_1002c068
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x16
call sub_100261c9
add esp 0x14
jmp r-xdata
push [ eax + 0x4 ]
push ecx
push [ ebp + 0xc ]
push ecx
push [ ebp + 0x8 ]
push 0x1001
push [ eax + 0xc ]
lea eax [ ebp - 0x10 ]
push eax
call sub_1003d384
add esp 0x20
cmp eax ebx
jne r-xdata
push [ ebp + 0x14 ]
push ecx
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_1003d3c6
add esp 0x10
jmp r-xdata
cmp [ ebp - 0x4 ] bl
je r-xdata
add eax 0xfffffffe
cmp [ ebp - 0x4 ] bl
je r-xdata
mov eax esi
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
pop esi
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
sub_1003ceed
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
xor esi esi
push edi
mov edi [ rw-data ]
mov [ ebp - 0x4 ] esi
mov eax [ edi ]
cmp eax esi
je r-xdata
xor eax eax
mov ebx [ WideCharToMultiByte@IAT ]
or eax 0xffffffff
jmp r-xdata
push 0x1
push eax
call sub_1002c982
pop ecx
pop ecx
mov [ ebp - 0x4 ] eax
cmp eax esi
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
push esi
push esi
push [ ebp - 0x8 ]
push eax
push 0xffffffff
push [ edi ]
push esi
push esi
call ebx
test eax eax
je r-xdata
push [ ebp - 0x4 ]
call sub_1002644d
pop ecx
jmp r-xdata
lea eax [ ebp - 0x4 ]
push esi
push eax
call sub_1003d56c
pop ecx
pop ecx
test eax eax
jge r-xdata
add edi 0x4
mov eax [ edi ]
cmp eax esi
jne r-xdata
cmp [ ebp - 0x4 ] esi
je r-xdata
push esi
push esi
push esi
push esi
push 0xffffffff
push eax
push esi
push esi
call ebx
mov [ ebp - 0x8 ] eax
cmp eax esi
je r-xdata
push [ ebp - 0x4 ]
call sub_1002644d
pop ecx
mov [ ebp - 0x4 ] esi
sub_1003cf84
push 0x8
push r--data
call sub_1002e7e4
xor eax eax
cmp [ rw-data ] eax
je r-xdata
call sub_1002e829
retn
test [ ebp + 0x8 ] 0x40
je r-xdata
and [ ebp + 0x8 ] 0xffffffbf
ldmxcsr [ ebp + 0x8 ]
cmp [ rw-data ] eax
je r-xdata
mov [ ebp - 0x4 ] eax
ldmxcsr [ ebp + 0x8 ]
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
jmp r-xdata
sub_1003cff6
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
jmp r-xdata
test ecx ecx
jne r-xdata
dec ecx
cmp [ eax ] 0x0
je r-xdata
dec ecx
mov eax [ ebp + 0x8 ]
sub eax ecx
dec eax
pop ebp
retn
inc eax
sub_1003d014
mov edi edi
push ebp
mov ebp esp
sub esp 0x2c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x14 ]
push ebx
push esi
push edi
xor edi edi
mov ebx edx
mov esi ecx
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x1c ] eax
cmp [ rw-data ] edi
jne r-xdata
cmp [ ebp + 0x10 ] edi
jle r-xdata
push 0x1
mov eax r--data
push eax
push 0x1
push eax
push edi
push edi
call [ CompareStringW@IAT ]
test eax eax
je r-xdata
cmp [ ebp + 0x10 ] 0xffffffff
jge r-xdata
push [ ebp + 0x10 ]
mov eax ebx
call sub_1003cff6
pop ecx
mov [ ebp + 0x10 ] eax
call [ GetLastError@IAT ]
cmp eax 0x78
jne r-xdata
mov [ rw-data ] 0x1
jmp r-xdata
mov edx [ ebp + 0x18 ]
cmp edx edi
jle r-xdata
xor eax eax
jmp r-xdata
cmp edx 0xffffffff
jl r-xdata
mov eax [ ebp - 0x1c ]
push edx
call sub_1003cff6
mov edx eax
pop ecx
mov [ ebp + 0x18 ] edx
jmp r-xdata
mov [ rw-data ] 0x2
lea esp [ ebp - 0x38 ]
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10025c8d
leave
retn
mov ecx [ rw-data ]
cmp ecx 0x2
je r-xdata
xor edi edi
xor ebx ebx
cmp [ ebp + 0x8 ] edi
jne r-xdata
cmp ecx edi
je r-xdata
cmp [ ebp + 0x1c ] edi
jne r-xdata
mov eax [ esi ]
mov eax [ eax + 0x14 ]
mov [ ebp + 0x8 ] eax
xor eax eax
inc eax
cmp ecx eax
jne r-xdata
push [ ebp + 0x8 ]
call sub_10035f40
mov esi eax
pop ecx
cmp esi 0xffffffff
je r-xdata
mov eax [ esi ]
mov eax [ eax + 0x4 ]
mov [ ebp + 0x1c ] eax
mov [ ebp - 0x28 ] edi
cmp [ ebp + 0x1c ] edi
jne r-xdata
cmp esi [ ebp + 0x1c ]
je r-xdata
cmp [ ebp + 0x10 ] edi
je r-xdata
mov ecx [ esi ]
mov ecx [ ecx + 0x4 ]
mov [ ebp + 0x1c ] ecx
push [ ebp + 0x18 ]
push [ ebp - 0x1c ]
push [ ebp + 0x10 ]
push [ ebp - 0x24 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ CompareStringA@IAT ]
mov esi eax
test ebx ebx
je r-xdata
push 0x0
push 0x0
lea eax [ ebp + 0x10 ]
push eax
push [ ebp - 0x24 ]
push esi
push [ ebp + 0x1c ]
call sub_10035f89
mov ebx eax
add esp 0x18
test ebx ebx
je r-xdata
cmp [ ebp + 0x10 ] edx
jne r-xdata
cmp edx edi
jne r-xdata
mov eax esi
push ebx
call sub_1002644d
push edi
call sub_1002644d
pop ecx
pop ecx
push 0x0
push 0x0
lea eax [ ebp + 0x18 ]
push eax
push [ ebp - 0x1c ]
push esi
push [ ebp + 0x1c ]
call sub_10035f89
mov edi eax
add esp 0x18
test edi edi
jne r-xdata
cmp edx eax
jg r-xdata
push 0x2
mov esi [ MultiByteToWideChar@IAT ]
push edi
push edi
push [ ebp + 0x10 ]
push ebx
push 0x9
push [ ebp + 0x1c ]
call esi
mov ebx eax
mov [ ebp - 0x2c ] ebx
cmp ebx edi
je r-xdata
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x1c ] edi
push ebx
call sub_1002644d
pop ecx
jmp r-xdata
cmp [ ebp + 0x10 ] eax
jle r-xdata
mov edi 0x400
test ebx ebx
jle r-xdata
lea eax [ ebp - 0x18 ]
push eax
push [ ebp + 0x1c ]
call [ GetCPInfo@IAT ]
test eax eax
je r-xdata
push 0x3
jmp r-xdata
and [ ebp - 0x20 ] 0x0
push 0xffffffe0
xor edx edx
pop eax
div ebx
cmp eax 0x2
jb r-xdata
cmp [ ebp + 0x10 ] edi
jle r-xdata
pop eax
jmp r-xdata
push ebx
push [ ebp - 0x20 ]
push [ ebp + 0x10 ]
push [ ebp - 0x24 ]
push 0x1
push [ ebp + 0x1c ]
call esi
test eax eax
je r-xdata
lea eax [ ebx + ebx + 0x8 ]
cmp eax edi
ja r-xdata
cmp [ ebp + 0x18 ] edi
jle r-xdata
cmp [ ebp - 0x18 ] 0x2
jb r-xdata
push [ ebp - 0x20 ]
call sub_1002c50a
mov eax [ ebp - 0x28 ]
pop ecx
jmp r-xdata
push 0x0
push 0x0
push [ ebp + 0x18 ]
push [ ebp - 0x1c ]
push 0x9
push [ ebp + 0x1c ]
call esi
mov ebx eax
test ebx ebx
je r-xdata
push eax
call sub_10028f2d
pop ecx
test eax eax
je r-xdata
call sub_10036140
mov eax esp
test eax eax
je r-xdata
cmp [ ebp - 0x18 ] 0x2
jae r-xdata
cmp [ ebp - 0x12 ] 0x0
lea eax [ ebp - 0x12 ]
je r-xdata
jle r-xdata
mov [ ebp - 0x20 ] eax
jmp r-xdata
mov [ eax ] 0xdddd
mov [ eax ] 0xcccc
jmp r-xdata
cmp [ ebp - 0x12 ] 0x0
lea eax [ ebp - 0x12 ]
je r-xdata
xor eax eax
inc eax
jmp r-xdata
mov dl [ eax + 0x1 ]
test dl dl
je r-xdata
xor edi edi
push 0xffffffe0
xor edx edx
pop eax
div ebx
cmp eax 0x2
jb r-xdata
cmp [ ebp - 0x20 ] 0x0
je r-xdata
add eax 0x8
mov dl [ eax + 0x1 ]
test dl dl
je r-xdata
mov cl [ ebx ]
cmp cl [ eax ]
jb r-xdata
push ebx
push edi
push [ ebp + 0x18 ]
push [ ebp - 0x1c ]
push 0x1
push [ ebp + 0x1c ]
call esi
test eax eax
je r-xdata
lea eax [ ebx + ebx + 0x8 ]
cmp eax edi
ja r-xdata
mov ecx [ ebp - 0x1c ]
mov cl [ ecx ]
cmp cl [ eax ]
jb r-xdata
inc eax
inc eax
cmp [ eax ] 0x0
jne r-xdata
cmp cl dl
jbe r-xdata
push edi
call sub_1002c50a
pop ecx
push ebx
push edi
push [ ebp - 0x2c ]
push [ ebp - 0x20 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ CompareStringW@IAT ]
mov [ ebp - 0x28 ] eax
push eax
call sub_10028f2d
pop ecx
test eax eax
je r-xdata
call sub_10036140
mov edi esp
test edi edi
je r-xdata
inc eax
inc eax
cmp [ eax ] 0x0
jne r-xdata
cmp cl dl
jbe r-xdata
jmp r-xdata
mov edi eax
jmp r-xdata
mov [ eax ] 0xdddd
add eax 0x8
mov [ edi ] 0xcccc
add edi 0x8
jmp r-xdata
jmp r-xdata
test edi edi
je r-xdata
sub_1003d384
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x10 ]
call sub_10029358
push [ ebp + 0x24 ]
mov edx [ ebp + 0x14 ]
push [ ebp + 0x20 ]
lea ecx [ ebp - 0x10 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call sub_1003d014
add esp 0x18
cmp [ ebp - 0x4 ] 0x0
je r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
sub_1003d3c6
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
push [ ebp + 0x14 ]
lea ecx [ ebp - 0x10 ]
call sub_10029358
mov edx [ ebp + 0x10 ]
xor ebx ebx
cmp edx ebx
jne r-xdata
cmp [ ebp + 0x8 ] ebx
jne r-xdata
cmp [ ebp - 0x4 ] bl
je r-xdata
cmp [ ebp + 0xc ] ebx
je r-xdata
call sub_1002c068
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x16
call sub_100261c9
add esp 0x14
cmp [ ebp - 0x4 ] bl
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
push esi
mov esi 0x7fffffff
cmp edx esi
jbe r-xdata
mov eax 0x7fffffff
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
pop ebx
leave
retn
mov eax [ ebp - 0x10 ]
mov ecx [ eax + 0x10 ]
cmp ecx ebx
jne r-xdata
call sub_1002c068
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x16
call sub_100261c9
add esp 0x14
jmp r-xdata
push [ eax + 0x8 ]
lea eax [ ebp - 0x10 ]
push edx
push [ ebp + 0xc ]
push edx
push [ ebp + 0x8 ]
push 0x1001
push ecx
push eax
call sub_1003d384
add esp 0x20
cmp eax ebx
jne r-xdata
lea eax [ ebp - 0x10 ]
push eax
push edx
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_10039589
add esp 0x10
jmp r-xdata
cmp [ ebp - 0x4 ] bl
je r-xdata
add eax 0xfffffffe
call sub_1002c068
mov [ eax ] 0x16
cmp [ ebp - 0x4 ] bl
je r-xdata
mov eax esi
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
pop esi
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
sub_1003d4c0
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ rw-data ]
jmp r-xdata
mov eax [ esi ]
test eax eax
jne r-xdata
push edi
push eax
push [ ebp + 0x8 ]
call sub_1003ced3
add esp 0xc
test eax eax
jne r-xdata
mov eax esi
sub eax [ rw-data ]
sar eax 0x2
neg eax
add esi 0x4
mov eax [ esi ]
mov al [ edi + eax ]
cmp al 0x3d
je r-xdata
mov eax esi
sub eax [ rw-data ]
sar eax 0x2
jmp r-xdata
test al al
je r-xdata
pop esi
pop ebp
retn
sub_1003d512
mov edi edi
push ebp
mov ebp esp
push ecx
push edi
mov edi eax
xor eax eax
mov ecx edi
test edi edi
je r-xdata
pop edi
leave
retn
cmp [ edi ] eax
je r-xdata
push esi
inc eax
push 0x4
push eax
call sub_1002c982
mov esi eax
pop ecx
pop ecx
mov [ ebp - 0x4 ] esi
test esi esi
jne r-xdata
add ecx 0x4
inc eax
cmp [ ecx ] 0x0
jne r-xdata
mov eax [ edi ]
test eax eax
jne r-xdata
push 0x9
call sub_10029708
jmp r-xdata
push eax
call sub_1003d7b7
mov [ esi ] eax
add esi 0x4
add edi 0x4
and [ esi ] eax
mov eax [ ebp - 0x4 ]
pop esi
pop ecx
sub_1003d56c
mov edi edi
push ebp
mov ebp esp
sub esp 0x14
mov eax [ ebp + 0x8 ]
push ebx
xor ebx ebx
mov [ ebp - 0xc ] ebx
cmp eax ebx
jne r-xdata
push esi
mov esi [ eax ]
push edi
mov [ ebp - 0x4 ] esi
cmp esi ebx
je r-xdata
call sub_1002c068
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x16
call sub_100261c9
add esp 0x14
or eax 0xffffffff
jmp r-xdata
call sub_1002c068
mov [ eax ] 0x16
push 0x3d
push esi
call sub_1003d8c8
mov edi eax
pop ecx
pop ecx
mov [ ebp - 0x14 ] edi
cmp edi ebx
je r-xdata
pop ebx
leave
retn
cmp esi edi
je r-xdata
xor eax eax
cmp [ edi + 0x1 ] bl
sete al
mov [ ebp - 0x8 ] eax
mov eax [ rw-data ]
cmp eax [ rw-data ]
jne r-xdata
cmp eax ebx
jne r-xdata
call sub_1003d512
mov [ rw-data ] eax
mov esi [ rw-data ]
mov [ ebp - 0x10 ] esi
cmp esi ebx
je r-xdata
cmp [ ebp + 0xc ] ebx
je r-xdata
or eax 0xffffffff
sub edi [ ebp - 0x4 ]
push [ ebp - 0x4 ]
call sub_1003d4c0
mov edi eax
cmp edi ebx
pop ecx
jl r-xdata
cmp [ ebp - 0x8 ] ebx
jne r-xdata
cmp [ rw-data ] ebx
je r-xdata
cmp [ ebp - 0x8 ] ebx
jne r-xdata
cmp [ esi ] ebx
je r-xdata
xor eax eax
jmp r-xdata
push 0x4
call sub_1002c93d
pop ecx
mov [ rw-data ] eax
cmp eax ebx
je r-xdata
call sub_1003ceed
test eax eax
je r-xdata
push [ ebp - 0x4 ]
call sub_1002644d
mov eax [ ebp + 0x8 ]
pop ecx
mov [ eax ] ebx
cmp edi ebx
jge r-xdata
lea esi [ esi + edi * 4 ]
push [ esi ]
call sub_1002644d
pop ecx
cmp [ ebp - 0x8 ] ebx
jne r-xdata
pop edi
pop esi
mov [ eax ] ebx
cmp [ rw-data ] ebx
jne r-xdata
lea eax [ edi + 0x2 ]
cmp eax edi
jl r-xdata
neg edi
cmp [ esi ] ebx
jne r-xdata
mov eax [ ebp - 0x4 ]
mov [ esi ] eax
mov eax [ ebp + 0x8 ]
mov [ eax ] ebx
jmp r-xdata
push 0x4
call sub_1002c93d
pop ecx
mov [ rw-data ] eax
cmp eax ebx
je r-xdata
cmp eax 0x3fffffff
jae r-xdata
mov eax [ esi + 0x4 ]
mov [ esi ] eax
mov eax [ ebp - 0x10 ]
inc edi
lea esi [ eax + edi * 4 ]
cmp edi 0x3fffffff
jae r-xdata
cmp [ ebp + 0xc ] ebx
je r-xdata
mov [ eax ] ebx
push eax
push 0x4
push [ rw-data ]
call sub_1002ca1c
add esp 0xc
cmp eax ebx
je r-xdata
push 0x4
push edi
push [ rw-data ]
call sub_1002ca1c
add esp 0xc
cmp eax ebx
je r-xdata
cmp [ ebp - 0x8 ] ebx
je r-xdata
mov esi [ ebp - 0x4 ]
push 0x1
push esi
call sub_10025d30
inc eax
pop ecx
inc eax
push eax
call sub_1002c982
mov edi eax
pop ecx
pop ecx
cmp edi ebx
je r-xdata
mov edx [ ebp - 0x4 ]
lea ecx [ eax + edi * 4 ]
mov [ ecx ] edx
mov [ ecx + 0x4 ] ebx
mov ecx [ ebp + 0x8 ]
mov [ ecx ] ebx
jmp r-xdata
mov eax [ ebp - 0xc ]
jmp r-xdata
push [ ebp - 0x4 ]
call sub_1002644d
mov eax [ ebp + 0x8 ]
pop ecx
mov [ eax ] ebx
push esi
push esi
call sub_10025d30
inc eax
pop ecx
inc eax
push eax
push edi
call sub_1002d40c
add esp 0xc
test eax eax
je r-xdata
mov [ rw-data ] eax
mov ecx [ ebp - 0x8 ]
mov eax edi
sub eax esi
add eax [ ebp - 0x14 ]
mov [ eax ] bl
inc eax
neg ecx
sbb ecx ecx
not ecx
and ecx eax
push ecx
push edi
call [ SetEnvironmentVariableA@IAT ]
test eax eax
jne r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_100260a1
add esp 0x14
push edi
call sub_1002644d
pop ecx
or [ ebp - 0xc ] 0xffffffff
call sub_1002c068
mov [ eax ] 0x2a
sub_1003d7b7
mov edi edi
push ebp
mov ebp esp
push ebx
xor ebx ebx
cmp [ ebp + 0x8 ] ebx
jne r-xdata
push esi
push edi
push [ ebp + 0x8 ]
call sub_10025d30
mov esi eax
inc esi
push esi
call sub_10028f2d
mov edi eax
pop ecx
pop ecx
cmp edi ebx
je r-xdata
xor eax eax
jmp r-xdata
xor eax eax
push [ ebp + 0x8 ]
push esi
push edi
call sub_1002d40c
add esp 0xc
test eax eax
je r-xdata
pop ebx
pop ebp
retn
mov eax edi
jmp r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_100260a1
add esp 0x14
pop edi
pop esi
sub_1003d80c
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
push [ ebp + 0x10 ]
lea ecx [ ebp - 0x10 ]
call sub_10029358
mov eax [ ebp + 0x8 ]
xor ebx ebx
cmp eax ebx
jne r-xdata
push esi
mov esi [ ebp - 0xc ]
cmp [ esi + 0x8 ] ebx
jne r-xdata
call sub_1002c068
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x16
call sub_100261c9
add esp 0x14
cmp [ ebp - 0x4 ] bl
je r-xdata
movzx cx [ eax ]
movzx ecx cx
cmp cx bx
jne r-xdata
push [ ebp + 0xc ]
push eax
call sub_1003d8f0
pop ecx
pop ecx
jmp r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
movzx edx cl
test [ edx + esi + 0x1d ] 0x4
je r-xdata
movzx ecx cx
cmp [ ebp + 0xc ] ecx
jne r-xdata
cmp [ ebp - 0x4 ] bl
je r-xdata
pop ebx
leave
retn
movzx edx cx
cmp [ ebp + 0xc ] edx
je r-xdata
inc eax
mov dl [ eax ]
cmp dl bl
je r-xdata
cmp [ ebp - 0x4 ] bl
je r-xdata
pop esi
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
jmp r-xdata
inc eax
movzx ecx cx
movzx edx dl
shl ecx 0x8
or ecx edx
cmp [ ebp + 0xc ] ecx
jne r-xdata
xor eax eax
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
dec eax
jmp r-xdata
sub_1003d8f0
xor eax eax
mov al [ esp + 0x8 ]
push ebx
mov ebx eax
shl eax 0x8
mov edx [ esp + 0x8 ]
test edx 0x3
je r-xdata
or ebx eax
push edi
mov eax ebx
shl ebx 0x10
push esi
or ebx eax
mov cl [ edx ]
add edx 0x1
cmp cl bl
je r-xdata
mov eax [ edx - 0x4 ]
cmp al bl
je r-xdata
and eax 0x81010100
je r-xdata
lea eax [ edx - 0x1 ]
pop ebx
retn
test cl cl
je r-xdata
lea eax [ edx - 0x4 ]
pop esi
pop edi
pop ebx
retn
test al al
je r-xdata
mov ecx [ edx ]
mov edi 0x7efefeff
mov eax ecx
mov esi edi
xor ecx ebx
add esi eax
add edi ecx
xor ecx 0xffffffff
xor eax 0xffffffff
xor ecx edi
xor eax esi
add edx 0x4
and ecx 0x81010100
jne r-xdata
and eax 0x1010100
jne r-xdata
pop ebx
xor eax eax
retn
test edx 0x3
jne r-xdata
pop esi
pop edi
cmp ah bl
je r-xdata
and esi 0x80000000
jne r-xdata
lea eax [ edx - 0x3 ]
pop esi
pop edi
pop ebx
retn
test ah ah
je r-xdata
shr eax 0x10
cmp al bl
je r-xdata
lea eax [ edx - 0x2 ]
pop esi
pop edi
pop ebx
retn
test al al
je r-xdata
cmp ah bl
je r-xdata
pop esi
pop edi
lea eax [ edx - 0x1 ]
pop ebx
retn
test ah ah
je r-xdata
jmp r-xdata
sub_1003d9c6
push 0x10
mov eax sub_1004b25f
call sub_10029e33
push 0x0
lea ecx [ ebp - 0x10 ]
call sub_10022437
mov esi [ ebp + 0x8 ]
mov ebx [ ebp + 0x10 ]
and [ ebp - 0x4 ] 0x0
cmp [ esi + 0xc ] ebx
ja r-xdata
mov ecx [ ebp + 0xc ]
call sub_1000778d
mov eax [ esi + 0x8 ]
mov edi ebx
shl edi 0x2
add eax edi
cmp [ eax ] 0x0
je r-xdata
lea edi [ ebx + 0x1 ]
cmp edi 0x28
jae r-xdata
mov eax [ esi + 0x8 ]
mov ecx [ ebp + 0xc ]
or [ ebp - 0x4 ] 0xffffffff
mov [ edi + eax ] ecx
lea ecx [ ebp - 0x10 ]
call sub_1002245f
call sub_10029f0b
retn
mov ecx [ eax ]
call sub_100077cb
test eax eax
je r-xdata
mov eax edi
shl eax 0x2
push eax
push [ esi + 0x8 ]
call sub_1002c9ce
pop ecx
pop ecx
test eax eax
jne r-xdata
push 0x28
pop edi
mov edx [ eax ]
push 0x1
mov ecx eax
call [ edx ]
mov [ esi + 0x8 ] eax
jmp r-xdata
test [ rw-data ] 0x1
mov esi rw-data
jne r-xdata
cmp [ esi + 0xc ] edi
jb r-xdata
push esi
lea ecx [ ebp - 0x1c ]
call sub_10002171
push r--data
lea eax [ ebp - 0x1c ]
push eax
call sub_10029a01
or [ rw-data ] 0x1
mov ecx esi
call sub_10025dbb
push sub_1004f243
call sub_1002ad30
pop ecx
mov eax [ esi + 0xc ]
mov ecx [ esi + 0x8 ]
and [ ecx + eax * 4 ] 0x0
inc [ esi + 0xc ]
sub_1003dac1
push 0x20
mov eax sub_1004b28c
call sub_10029e33
mov eax [ ebp + 0xc ]
xor edi edi
mov [ ebp - 0x10 ] edi
mov esi [ ebp + 0x10 ]
and eax 0x2
mov [ ebp - 0x10 ] eax
je r-xdata
mov eax [ ebp + 0xc ]
and eax 0x8
mov [ ebp + 0x10 ] eax
je r-xdata
cmp [ ebp + 0x14 ] edi
jne r-xdata
cmp [ ebp + 0x10 ] edi
je r-xdata
cmp [ ebp + 0x14 ] edi
jne r-xdata
mov ecx rw-data
call sub_10007004
push eax
push [ ebp + 0x14 ]
call sub_100107ba
pop ecx
push eax
push 0x18
call sub_10025dd6
pop ecx
cmp eax edi
je r-xdata
cmp [ ebp - 0x10 ] edi
je r-xdata
cmp [ ebp + 0x14 ] edi
jne r-xdata
mov ecx rw-data
call sub_10007004
push eax
push [ ebp + 0x14 ]
call sub_1000fbaa
pop ecx
push eax
push 0x10
call sub_10025dd6
pop ecx
cmp eax edi
je r-xdata
xor ebx ebx
push edi
push [ ebp + 0x8 ]
mov ecx eax
call sub_100106fa
mov ebx eax
jmp r-xdata
push [ ebp + 0x14 ]
mov ebx [ ebp + 0x8 ]
push esi
push [ ebp + 0xc ]
push ebx
call sub_1004a496
push [ ebp + 0x14 ]
push esi
push [ ebp + 0xc ]
push ebx
call sub_1004728e
push [ ebp + 0x14 ]
push esi
push [ ebp + 0xc ]
push ebx
call sub_1004771f
mov eax [ ebp + 0xc ]
or [ esi + 0x10 ] eax
add esp 0x30
lea eax [ ebp - 0x2c ]
push eax
mov ecx ebx
call sub_1003daa4
push eax
lea ecx [ esi + 0x18 ]
mov [ ebp - 0x4 ] 0x12
call sub_100035d3
push edi
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_100022b5
mov eax esi
call sub_10029f0b
retn
cmp [ ebp + 0x14 ] edi
jne r-xdata
mov ecx rw-data
call sub_10007004
push eax
push [ ebp + 0x14 ]
call sub_1000fb0d
pop ecx
push eax
push 0x10
call sub_10025dd6
pop ecx
cmp eax edi
je r-xdata
xor ebx ebx
push edi
push [ ebp + 0x8 ]
mov ecx eax
call sub_100101e4
mov ebx eax
jmp r-xdata
mov ecx esi
call sub_100242cf
mov ecx rw-data
call sub_10007004
push eax
push ebx
jmp r-xdata
mov ecx rw-data
call sub_10007004
push eax
push [ ebp + 0x14 ]
call sub_1000fc47
pop ecx
push eax
push 0x8
call sub_10025dd6
pop ecx
cmp eax edi
je r-xdata
cmp [ ebp + 0x14 ] edi
jne r-xdata
xor ebx ebx
push edi
push [ ebp + 0x8 ]
mov ecx eax
call sub_100101c3
mov ebx eax
jmp r-xdata
mov ecx esi
call sub_100242cf
mov ecx rw-data
call sub_10007004
push eax
push ebx
jmp r-xdata
xor ebx ebx
mov [ eax + 0x4 ] edi
mov [ eax ] r--data
mov ebx eax
jmp r-xdata
mov ecx rw-data
call sub_10007004
push eax
push [ ebp + 0x14 ]
call sub_1000fce4
pop ecx
push eax
push 0x18
call sub_10025dd6
pop ecx
mov ecx eax
mov [ ebp + 0x10 ] ecx
mov [ ebp - 0x4 ] 0xe
cmp ecx edi
je r-xdata
mov ecx esi
call sub_100242cf
cmp [ ebp + 0x10 ] edi
je r-xdata
mov ecx rw-data
call sub_10007004
push eax
push ebx
jmp r-xdata
mov ecx esi
call sub_100242cf
mov ecx rw-data
call sub_10007004
push eax
push ebx
jmp r-xdata
xor ebx ebx
push edi
push edi
push [ ebp + 0x8 ]
call sub_10010205
mov ebx eax
jmp r-xdata
mov ecx esi
call sub_100242cf
or [ ebp - 0x4 ] 0xffffffff
mov ecx rw-data
call sub_10007004
push eax
push ebx
jmp r-xdata
sub_1003dce8
push 0x88
mov eax sub_1004b2bd
call sub_10029e9c
mov ebx [ ebp + 0xc ]
mov esi [ ebp + 0x8 ]
cmp ebx [ rw-data ]
jne r-xdata
push 0x0
lea ecx [ ebp - 0x88 ]
call sub_10022437
mov eax [ esi + 0xc ]
xor edi edi
inc edi
mov [ ebp - 0x4 ] edi
test eax eax
jbe r-xdata
push r--data
lea ecx [ ebp - 0x84 ]
call sub_10024cf1
and [ ebp - 0x4 ] 0x0
push 0x0
push esi
lea eax [ ebp - 0x84 ]
push 0x3f
push eax
call sub_1003dac1
or [ ebp - 0x4 ] 0xffffffff
add esp 0x10
lea ecx [ ebp - 0x84 ]
call sub_100073dd
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x88 ]
call sub_1002245f
shl eax 0x2
push eax
call sub_1002c93d
pop ecx
mov [ esi + 0x8 ] eax
test eax eax
jne r-xdata
call sub_10029f1f
retn
mov edi [ esi + 0xc ]
jmp r-xdata
test [ rw-data ] 0x1
mov esi rw-data
jne r-xdata
test edi edi
ja r-xdata
push esi
lea ecx [ ebp - 0x94 ]
call sub_10002171
push r--data
lea eax [ ebp - 0x94 ]
push eax
call sub_10029a01
or [ rw-data ] edi
mov ecx esi
call sub_10025dbb
push sub_1004f22f
call sub_1002ad30
pop ecx
mov eax [ ebx + 0x8 ]
dec edi
mov ecx [ eax + edi * 4 ]
mov eax [ esi + 0x8 ]
mov [ eax + edi * 4 ] ecx
test ecx ecx
je r-xdata
call sub_1000778d
sub_1003de15
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push [ ebp + 0x10 ]
and [ ebp - 0x4 ] 0x0
and [ ebp - 0x8 ] 0x0
lea eax [ ebp - 0x8 ]
push eax
push 0x1
lea eax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x4 ]
push eax
call sub_10022bbe
mov ax [ ebp - 0x4 ]
add esp 0x14
leave
retn
sub_1003de43
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
push edi
push [ ebp + 0x8 ]
xor edi edi
mov [ ebp - 0xc ] edi
call sub_10025d30
mov esi eax
mov eax [ ebp + 0x8 ]
inc esi
pop ecx
mov ebx esi
mov [ ebp - 0x8 ] eax
je r-xdata
inc edi
xor ecx ecx
push 0x2
pop edx
mov eax edi
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_100233aa
and [ ebp - 0x10 ] 0x0
mov ebx eax
pop ecx
mov [ ebp - 0x8 ] ebx
jmp r-xdata
push [ ebp + 0x10 ]
lea eax [ ebp - 0xc ]
push eax
push ebx
push [ ebp - 0x8 ]
lea eax [ ebp - 0x4 ]
push eax
call sub_10022bbe
add esp 0x14
test eax eax
jle r-xdata
test edi edi
ja r-xdata
add [ ebp - 0x8 ] eax
sub ebx eax
inc edi
test ebx ebx
ja r-xdata
push [ ebp + 0x10 ]
lea eax [ ebp - 0x10 ]
push eax
push esi
push [ ebp + 0x8 ]
push ebx
call sub_10022bbe
add esp 0x14
test eax eax
jle r-xdata
pop edi
xor eax eax
mov [ ebx ] ax
mov eax [ ebp - 0x8 ]
pop esi
pop ebx
leave
retn
add [ ebp + 0x8 ] eax
dec edi
inc ebx
inc ebx
sub_1003dee0
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
push edi
lea eax [ ebp - 0x10 ]
mov ebx ecx
mov ecx [ ebp + 0x8 ]
push eax
call sub_100072e4
mov ecx [ ebp + 0x8 ]
mov esi eax
lea edi [ ebx + 0x8 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
lea eax [ ebp - 0x8 ]
push eax
movsd [ edi ] [ esi ]
call sub_10007307
mov ecx [ eax ]
mov [ ebx + 0x18 ] ecx
mov eax [ eax + 0x4 ]
pop edi
pop esi
mov [ ebx + 0x1c ] eax
pop ebx
leave
retn 0x4
sub_1003df49
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push esi
lea eax [ ebp - 0x8 ]
mov esi ecx
mov ecx [ ebp + 0x8 ]
push eax
call sub_1003dde3
mov ecx [ eax ]
mov [ esi + 0x8 ] ecx
mov eax [ eax + 0x4 ]
mov [ esi + 0xc ] eax
pop esi
leave
retn 0x4
sub_1003df6f
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push esi
lea eax [ ebp - 0x8 ]
mov esi ecx
mov ecx [ ebp + 0x8 ]
push eax
call sub_10007307
mov ecx [ eax ]
mov [ esi + 0x8 ] ecx
mov eax [ eax + 0x4 ]
mov [ esi + 0xc ] eax
pop esi
leave
retn 0x4
sub_1003df95
mov edi edi
push esi
mov esi ecx
push [ esi + 0x8 ]
call sub_10026616
push [ esi + 0x10 ]
call sub_10026616
push [ esi + 0x14 ]
call sub_10026616
push [ esi + 0x18 ]
call sub_10026616
add esp 0x10
pop esi
retn
sub_1003dfd8
mov edi edi
push ebp
mov ebp esp
cmp [ ecx + 0x28 ] 0x0
jne r-xdata
mov eax r--data
mov ecx [ ebp + 0xc ]
cmp ecx 0x2
ja r-xdata
mov eax [ ebp + 0x10 ]
cmp eax 0x1
ja r-xdata
cmp [ ebp + 0x14 ] 0x4
ja r-xdata
lea eax [ eax + ecx * 2 ]
imul eax eax 0x5
add eax [ ebp + 0x14 ]
lea eax [ eax * 4 + r--data ]
jmp r-xdata
push 0x4
push eax
push 0x4
push [ ebp + 0x8 ]
call sub_10025ca7
add esp 0x10
pop ebp
retn 0x10
sub_1003e024
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push esi
push [ ebp + 0x8 ]
mov esi ecx
mov [ esi + 0x4 ] eax
mov [ esi ] r--data
call sub_1003df6f
mov eax esi
pop esi
pop ebp
retn 0x8
sub_1003e047
mov edi edi
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0xc ]
push ebx
mov ebx [ ebp + 0x10 ]
push esi
mov esi [ ebp + 0x14 ]
mov [ esi ] eax
mov eax [ ebp + 0x18 ]
push edi
mov edi [ ebp + 0x20 ]
mov [ ebp - 0x4 ] ecx
xor ecx ecx
mov [ edi ] eax
mov eax [ esi ]
cmp eax ebx
setne cl
mov [ ebp + 0x14 ] ecx
cmp eax ebx
je r-xdata
mov eax [ ebp + 0x14 ]
mov ecx [ edi ]
cmp ecx [ ebp + 0x1c ]
je r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ esi ]
add edx 0x8
push edx
push [ ebp + 0x8 ]
mov edx ebx
sub edx eax
push edx
push eax
push ecx
call sub_10022bbe
add esp 0x14
cmp eax 0xfffffffe
je r-xdata
mov [ esi ] ebx
cmp eax 0xffffffff
je r-xdata
push 0x2
pop eax
jmp r-xdata
test eax eax
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn 0x1c
cmp eax 0xfffffffd
jne r-xdata
mov ecx [ edi ]
cmp [ ecx ] ax
jne r-xdata
add [ esi ] eax
add [ edi ] 0x2
and [ ebp + 0x14 ] 0x0
cmp [ esi ] ebx
jne r-xdata
xor eax eax
push [ esi ]
call sub_10025d30
pop ecx
inc eax
jmp r-xdata
sub_1003e0dd
mov edi edi
push ebp
mov ebp esp
sub esp 0x20
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x1c ]
push ebx
mov ebx [ ebp + 0x8 ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x14 ]
mov [ esi ] eax
mov eax [ ebp + 0x18 ]
push edi
mov edi [ ebp + 0x20 ]
xor edx edx
mov [ edi ] eax
mov eax [ esi ]
cmp eax [ ebp + 0x10 ]
mov [ ebp - 0x20 ] ecx
setne dl
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x10 ] edx
cmp eax [ ebp + 0x10 ]
je r-xdata
mov eax [ ebp - 0x10 ]
jmp r-xdata
mov eax [ edi ]
cmp eax [ ebp - 0x14 ]
je r-xdata
mov edx [ ebp - 0x14 ]
add ecx 0x8
sub edx eax
cmp edx 0x5
push ecx
push ebx
jl r-xdata
mov eax [ ebx ]
mov [ ebp - 0x1c ] eax
mov eax [ esi ]
movzx eax [ eax ]
push eax
lea eax [ ebp - 0xc ]
push eax
call sub_10022884
mov ebx eax
add esp 0x10
test ebx ebx
jl r-xdata
mov ecx [ esi ]
movzx ecx [ ecx ]
push ecx
push eax
call sub_10022884
add esp 0x10
test eax eax
jl r-xdata
push 0x2
pop eax
jmp r-xdata
mov eax [ edi ]
mov ecx [ ebp - 0x14 ]
sub ecx eax
cmp ecx ebx
jl r-xdata
add [ esi ] 0x2
add [ edi ] eax
jmp r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_10025c8d
leave
retn 0x1c
mov eax [ ebp - 0x1c ]
mov ecx [ ebp - 0x18 ]
mov [ ecx ] eax
push ebx
lea edx [ ebp - 0xc ]
push edx
push ecx
push eax
call sub_10025ca7
add [ esi ] 0x2
add esp 0x10
add [ edi ] ebx
mov ebx [ ebp - 0x18 ]
mov eax [ ebp + 0x10 ]
and [ ebp - 0x10 ] 0x0
cmp [ esi ] eax
jne r-xdata
mov ecx [ ebp - 0x20 ]
jmp r-xdata
sub_1003e1d1
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
and [ ebp - 0x10 ] 0x0
push ebx
push esi
mov esi [ ebp + 0x14 ]
mov eax ecx
mov ecx [ ebp + 0x10 ]
push edi
mov edi [ ebp + 0x8 ]
add eax 0x8
push eax
mov [ ebp - 0x14 ] ecx
mov ecx [ ebp + 0xc ]
push edi
mov [ esi ] ecx
mov ecx [ edi ]
lea eax [ ebp - 0xc ]
push 0x0
push eax
mov [ ebp - 0x18 ] ecx
call sub_10022884
mov ebx eax
add esp 0x10
test ebx ebx
jg r-xdata
mov eax [ esi ]
mov ecx [ ebp - 0x14 ]
dec ebx
sub ecx eax
cmp ecx ebx
jge r-xdata
mov [ ebp - 0x10 ] 0x2
jmp r-xdata
test ebx ebx
jle r-xdata
mov eax [ ebp - 0x18 ]
mov [ edi ] eax
mov [ ebp - 0x10 ] 0x1
jmp r-xdata
mov ecx [ ebp - 0x4 ]
mov eax [ ebp - 0x10 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_10025c8d
leave
retn 0x10
push ebx
lea edx [ ebp - 0xc ]
push edx
push ecx
push eax
call sub_10025ca7
add esp 0x10
add [ esi ] ebx
sub_1003e267
mov edi edi
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
push ebx
push esi
mov esi [ ebp + 0xc ]
xor ebx ebx
push edi
mov edi ecx
mov [ ebp - 0x4 ] eax
cmp [ ebp + 0x14 ] ebx
jbe r-xdata
pop edi
pop esi
mov eax ebx
pop ebx
leave
retn 0x10
cmp esi [ ebp + 0x10 ]
je r-xdata
lea eax [ edi + 0x8 ]
push eax
lea eax [ ebp - 0x4 ]
push eax
mov eax [ ebp + 0x10 ]
sub eax esi
push eax
lea eax [ ebp + 0x8 ]
push esi
push eax
call sub_10022bbe
add esp 0x14
cmp eax 0xfffffffe
je r-xdata
cmp eax 0xffffffff
je r-xdata
test eax eax
jne r-xdata
cmp eax 0xfffffffd
jne r-xdata
cmp [ ebp + 0x8 ] ax
jne r-xdata
add esi eax
inc ebx
cmp ebx [ ebp + 0x14 ]
jb r-xdata
xor eax eax
push esi
call sub_10025d30
pop ecx
inc eax
sub_1003e2d8
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push esi
push [ ebp + 0x8 ]
mov esi ecx
mov [ esi + 0x4 ] eax
mov [ esi ] r--data
call sub_1003dee0
mov eax esi
pop esi
pop ebp
retn 0x8
sub_1003e31d
mov edi edi
push ebp
mov ebp esp
add ecx 0x8
push ecx
push [ ebp + 0xc ]
call sub_10022476
test [ ebp + 0x8 ] ax
pop ecx
pop ecx
push 0x0
pop eax
setne al
pop ebp
retn 0x8
sub_1003e35c
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0xc ]
push edi
mov edi ecx
jmp r-xdata
cmp esi [ ebp + 0x10 ]
jne r-xdata
movzx eax [ esi ]
mov edx [ edi ]
push eax
push [ ebp + 0x8 ]
mov ecx edi
call [ edx + 0x8 ]
test al al
jne r-xdata
pop edi
mov eax esi
pop esi
pop ebp
retn 0xc
inc esi
inc esi
sub_1003e38b
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0xc ]
push edi
mov edi ecx
jmp r-xdata
cmp esi [ ebp + 0x10 ]
jne r-xdata
movzx eax [ esi ]
mov edx [ edi ]
push eax
push [ ebp + 0x8 ]
mov ecx edi
call [ edx + 0x8 ]
test al al
je r-xdata
pop edi
mov eax esi
pop esi
pop ebp
retn 0xc
inc esi
inc esi
sub_1003e3d1
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
cmp esi [ ebp + 0xc ]
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x8
push edi
lea edi [ ecx + 0x8 ]
movzx eax [ esi ]
push edi
push eax
call sub_10022d9f
mov [ esi ] ax
inc esi
inc esi
pop ecx
pop ecx
cmp esi [ ebp + 0xc ]
jne r-xdata
pop edi
sub_1003e418
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
cmp esi [ ebp + 0xc ]
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x8
push edi
lea edi [ ecx + 0x8 ]
movzx eax [ esi ]
push edi
push eax
call sub_10022d32
mov [ esi ] ax
inc esi
inc esi
pop ecx
pop ecx
cmp esi [ ebp + 0xc ]
jne r-xdata
pop edi
sub_1003e448
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
and [ ebp - 0x8 ] 0x0
add ecx 0x18
push ecx
lea eax [ ebp - 0x8 ]
push eax
push 0x1
lea eax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x4 ]
push eax
call sub_10022bbe
add esp 0x14
test eax eax
mov eax 0xffff
jl r-xdata
leave
retn 0x4
movzx eax [ ebp - 0x4 ]
sub_1003e489
mov edi edi
push ebp
mov ebp esp
mov edx [ ebp + 0xc ]
sub edx [ ebp + 0x8 ]
mov eax [ ecx ]
push edx
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ eax + 0x2c ]
pop ebp
retn 0xc
sub_1003e4a7
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push ebx
push esi
mov esi [ ebp + 0x8 ]
sub eax esi
mov ebx ecx
cmp [ ebp + 0x14 ] eax
jae r-xdata
cmp esi [ ebp + 0xc ]
je r-xdata
call sub_100261ef
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x10
push edi
mov edi [ ebp + 0x10 ]
movzx eax [ esi ]
push eax
mov ecx ebx
call sub_1003e448
mov [ edi ] ax
inc esi
inc edi
inc edi
cmp esi [ ebp + 0xc ]
jne r-xdata
pop edi
sub_1003e4ea
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
and [ ebp - 0x10 ] 0x0
mov eax ecx
add eax 0x18
push eax
lea eax [ ebp - 0x10 ]
push eax
push [ ebp + 0x8 ]
lea eax [ ebp - 0xc ]
push eax
call sub_10022884
add esp 0x10
cmp eax 0x1
mov al [ ebp + 0xc ]
jne r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10025c8d
leave
retn 0x8
mov al [ ebp - 0xc ]
sub_1003e53d
mov edi edi
push ebp
mov ebp esp
mov edx [ ebp + 0xc ]
sub edx [ ebp + 0x8 ]
mov eax [ ecx ]
sar edx 0x1
push edx
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ eax + 0x38 ]
pop ebp
retn 0x10
sub_1003e560
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push ebx
push esi
mov esi [ ebp + 0x8 ]
sub eax esi
sar eax 0x1
mov ebx ecx
cmp [ ebp + 0x18 ] eax
jae r-xdata
cmp esi [ ebp + 0xc ]
je r-xdata
call sub_100261ef
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x14
push edi
mov edi [ ebp + 0x14 ]
movzx eax [ esi ]
push [ ebp + 0x10 ]
mov ecx ebx
push eax
call sub_1003e4ea
inc esi
inc esi
mov [ edi ] al
inc edi
cmp esi [ ebp + 0xc ]
jne r-xdata
pop edi
sub_1003e5a7
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_1003e2fb
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_10025c9c
pop ecx
sub_1003e5c8
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push esi
push [ ebp + 0x8 ]
mov esi ecx
mov [ esi + 0x4 ] eax
mov [ esi ] r--data
and [ esi + 0x8 ] 0x0
call sub_10047bb0
mov eax esi
pop esi
pop ebp
retn 0x8
sub_1003e60b
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_1003e5ef
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_10025c9c
pop ecx
sub_1003e62c
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push esi
push [ ebp + 0x8 ]
mov esi ecx
mov [ esi + 0x4 ] eax
mov [ esi ] r--data
call sub_1003df49
mov eax esi
pop esi
pop ebp
retn 0x8
sub_1003e64f
mov edi edi
push ebp
mov ebp esp
add ecx 0x8
push ecx
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_1004a865
add esp 0x14
pop ebp
retn 0x10
sub_1003e670
mov edi edi
push ebp
mov ebp esp
test [ ebp + 0x8 ] 0x1
push esi
mov esi ecx
mov [ esi ] r--data
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_10025c9c
pop ecx
sub_1003e692
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push esi
push [ ebp + 0x8 ]
mov esi ecx
mov [ esi + 0x4 ] eax
mov [ esi ] r--data
call sub_1003df6f
mov eax esi
pop esi
pop ebp
retn 0x8
sub_1003e6b5
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push esi
push [ ebp + 0x8 ]
mov esi ecx
mov [ esi + 0x4 ] eax
mov [ esi ] r--data
call sub_1003df6f
mov eax esi
pop esi
pop ebp
retn 0x8
sub_1003e701
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push esi
push [ ebp + 0x8 ]
mov esi ecx
mov [ esi + 0x4 ] eax
mov [ esi ] r--data
call sub_1003df6f
mov eax esi
pop esi
pop ebp
retn 0x8
sub_1003e75a
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push [ ebp + 0xc ]
and [ ebp - 0x8 ] 0x0
lea eax [ ebp - 0x8 ]
push eax
push [ ebp + 0x8 ]
lea eax [ ebp - 0x1 ]
push eax
mov [ ebp - 0x1 ] 0x0
call sub_10022884
mov al [ ebp - 0x1 ]
add esp 0x10
leave
retn
sub_1003e784
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
sub esp 0xc
test ecx ecx
ja r-xdata
or eax 0xffffffff
xor edx edx
div ecx
cmp eax 0x2
jae r-xdata
xor ecx ecx
lea eax [ ecx + ecx ]
push eax
call sub_10025dd6
pop ecx
leave
retn
push 0x0
lea ecx [ ebp - 0xc ]
call sub_1000212b
push r--data
lea eax [ ebp - 0xc ]
push eax
call sub_10029a01
int3
sub_1003e7e1
mov eax [ ecx + 0x20 ]
cmp [ eax ] 0x0
je r-xdata
xor edx edx
mov edx [ ecx + 0x30 ]
mov edx [ edx ]
jmp r-xdata
mov eax [ ecx ]
call [ eax + 0x10 ]
movzx eax ax
retn
mov eax [ eax ]
movzx eax [ eax ]
retn
test edx edx
jle r-xdata
sub_1003e805
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push esi
push [ ebp + 0x8 ]
mov esi ecx
mov [ esi + 0x4 ] eax
mov [ esi ] r--data
call sub_1003df6f
mov eax esi
pop esi
pop ebp
retn 0x8
sub_1003e846
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push ebx
mov ebx [ ebp + 0x14 ]
mov [ eax ] 0x25
lea ecx [ eax + 0x1 ]
test bl 0x20
je r-xdata
test bl 0x10
je r-xdata
mov [ ecx ] 0x2b
inc ecx
mov dl [ ebp + 0x10 ]
mov [ ecx ] 0x2e
inc ecx
mov [ ecx ] 0x2a
inc ecx
test dl dl
je r-xdata
mov [ ecx ] 0x23
inc ecx
mov edx 0x3000
and ebx edx
cmp ebx 0x2000
jne r-xdata
mov [ ecx ] dl
inc ecx
cmp ebx edx
jne r-xdata
mov dl 0x66
jmp r-xdata
cmp ebx 0x1000
setne dl
lea edx [ edx + edx + 0x65 ]
mov dl 0x61
jmp r-xdata
mov [ ecx ] dl
mov [ ecx + 0x1 ] 0x0
pop ebx
pop ebp
retn
sub_1003e8ad
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
mov edx [ ebp + 0x14 ]
mov [ eax ] 0x25
lea ecx [ eax + 0x1 ]
test dl 0x20
je r-xdata
test dl 0x8
je r-xdata
mov [ ecx ] 0x2b
inc ecx
push ebx
push esi
push edi
mov edi [ ebp + 0x10 ]
mov bl [ edi ]
cmp bl 0x4c
je r-xdata
mov [ ecx ] 0x23
inc ecx
mov [ ecx ] 0x49
inc ecx
mov [ ecx ] 0x36
inc ecx
mov [ ecx ] 0x34
mov [ ecx ] bl
jmp r-xdata
cmp esi 0x800
je r-xdata
mov dl 0x6f
jmp r-xdata
mov esi edx
and esi 0xe00
inc ecx
cmp esi 0x400
jne r-xdata
shl dl 0x3
not dl
and dl 0x20
or dl 0x58
mov dl [ edi + 0x1 ]
jmp r-xdata
pop edi
pop esi
mov [ ecx ] dl
mov [ ecx + 0x1 ] 0x0
pop ebx
pop ebp
retn
sub_1003e93f
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push esi
push [ ebp + 0x8 ]
mov esi ecx
mov [ esi + 0x4 ] eax
mov [ esi ] r--data
call sub_1003df49
mov eax esi
pop esi
pop ebp
retn 0x8
sub_1003e962
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
xor eax eax
jmp r-xdata
cmp ecx [ ebp + 0xc ]
jne r-xdata
movzx edx [ ecx ]
rol eax 0x8
add eax edx
inc ecx
inc ecx
pop ebp
retn 0x8
sub_1003e981
mov edi edi
push esi
mov esi ecx
mov eax [ esi ]
cmp eax 0xfffffffc
je r-xdata
mov eax [ esi + 0x4 ]
pop esi
retn
test eax eax
jne r-xdata
mov eax [ esi ]
cmp [ eax + 0x18 ] 0x8
jb r-xdata
call sub_100261ef
lea ecx [ eax + 0x4 ]
mov ecx [ eax + 0x4 ]
jmp r-xdata
call sub_100261ef
mov eax [ eax + 0x14 ]
lea eax [ ecx + eax * 2 ]
cmp [ esi + 0x4 ] eax
jb r-xdata
sub_1003e9bb
mov edi edi
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
push esi
mov esi [ ebp + 0xc ]
push edi
mov edi ecx
and [ edi ] 0x0
test esi esi
je r-xdata
call sub_100261ef
test ebx ebx
je r-xdata
mov edx [ esi + 0x18 ]
lea eax [ esi + 0x4 ]
cmp edx 0x8
jb r-xdata
mov ecx eax
mov ecx [ eax ]
jmp r-xdata
cmp edx 0x8
jb r-xdata
cmp ecx ebx
ja r-xdata
mov ecx [ esi + 0x14 ]
lea eax [ eax + ecx * 2 ]
cmp ebx eax
jbe r-xdata
mov eax [ eax ]
mov [ edi ] esi
mov [ edi + 0x4 ] ebx
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
sub_1003ea0f
mov edi edi
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
push esi
mov esi [ ebp + 0x10 ]
jmp r-xdata
cmp edx [ ebp + 0xc ]
jne r-xdata
cmp esi [ ebp + 0x14 ]
je r-xdata
cmp esi [ ebp + 0x14 ]
jne r-xdata
xor eax eax
cmp edx [ ebp + 0xc ]
setne al
movzx eax [ edx ]
movzx ecx [ esi ]
cmp cx ax
ja r-xdata
or eax 0xffffffff
jmp r-xdata
jb r-xdata
pop esi
pop ebp
retn
xor eax eax
inc eax
jmp r-xdata
inc edx
inc edx
inc esi
inc esi
sub_1003ea52
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
sub eax [ ebp + 0x8 ]
push esi
mov esi [ ebp + 0x14 ]
sub esi [ ebp + 0x10 ]
sar eax 0x1
sar esi 0x1
cmp esi eax
ja r-xdata
mov eax esi
pop esi
pop ebp
retn
lea ecx [ esi + esi ]
push ecx
push [ ebp + 0x10 ]
add eax eax
push eax
push [ ebp + 0x8 ]
call sub_10025ca7
add esp 0x10
sub_1003ea86
mov edi edi
push ebp
mov ebp esp
add ecx 0x8
push ecx
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_1003ea0f
add esp 0x14
pop ebp
retn 0x10
sub_1003eaad
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push esi
push [ ebp + 0x8 ]
mov esi ecx
mov [ esi + 0x4 ] eax
mov [ esi ] r--data
call sub_1003df6f
mov eax esi
pop esi
pop ebp
retn 0x8
sub_1003ead0
mov edi edi
push esi
mov esi ecx
mov eax [ esi ]
cmp eax 0xfffffffc
je r-xdata
add [ esi + 0x4 ] 0x2
mov eax esi
pop esi
retn
test eax eax
jne r-xdata
mov eax [ esi ]
cmp [ eax + 0x18 ] 0x8
jb r-xdata
call sub_100261ef
lea ecx [ eax + 0x4 ]
mov ecx [ eax + 0x4 ]
jmp r-xdata
call sub_100261ef
mov eax [ eax + 0x14 ]
lea eax [ ecx + eax * 2 ]
cmp [ esi + 0x4 ] eax
jb r-xdata
sub_1003eb0d
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
mov eax [ esi ]
push edi
mov edi [ ebp + 0x8 ]
cmp eax 0xfffffffc
je r-xdata
mov eax [ esi + 0x4 ]
sub eax [ edi + 0x4 ]
pop edi
neg eax
sbb eax eax
inc eax
pop esi
pop ebp
retn 0x4
test eax eax
je r-xdata
call sub_100261ef
cmp eax [ edi ]
je r-xdata
sub_1003eb3e
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push esi
push [ ebp + 0x8 ]
mov esi ecx
mov [ esi + 0x4 ] eax
mov [ esi ] r--data
call sub_1003df6f
mov eax esi
pop esi
pop ebp
retn 0x8
sub_1003eb61
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
push esi
je r-xdata
xor al al
mov esi [ ecx + 0x18 ]
lea eax [ ecx + 0x4 ]
cmp esi 0x8
jb r-xdata
mov edx eax
mov edx [ eax ]
jmp r-xdata
cmp esi 0x8
jb r-xdata
cmp [ ebp + 0x8 ] edx
jb r-xdata
mov ecx [ ecx + 0x14 ]
lea eax [ eax + ecx * 2 ]
cmp eax [ ebp + 0x8 ]
jbe r-xdata
mov eax [ eax ]
mov al 0x1
jmp r-xdata
pop esi
pop ebp
retn 0x4
sub_1003eba0
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
mov eax [ esi ]
push edi
mov edi [ ebp + 0x8 ]
cmp eax 0xfffffffc
je r-xdata
lea eax [ edi + edi ]
add [ esi + 0x4 ] eax
pop edi
mov eax esi
pop esi
pop ebp
retn 0x4
test eax eax
jne r-xdata
mov eax [ esi ]
cmp [ eax + 0x18 ] 0x8
jb r-xdata
call sub_100261ef
lea ecx [ eax + 0x4 ]
mov ecx [ eax + 0x4 ]
jmp r-xdata
call sub_100261ef
cmp [ eax + 0x18 ] 0x8
jb r-xdata
mov edx [ esi + 0x4 ]
push ebx
mov ebx [ eax + 0x14 ]
lea ecx [ ecx + ebx * 2 ]
lea edx [ edx + edi * 2 ]
pop ebx
cmp edx ecx
ja r-xdata
add eax 0x4
mov eax [ eax + 0x4 ]
jmp r-xdata
cmp edx eax
jae r-xdata
sub_1003ec31
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push esi
push [ ebp + 0x8 ]
mov esi ecx
mov [ esi + 0x4 ] eax
mov [ esi ] r--data
and [ esi + 0x8 ] 0x0
call sub_10047bb0
mov eax esi
pop esi
pop ebp
retn 0x8
sub_1003ec74
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_1003ec58
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_10025c9c
pop ecx
sub_1003ec95
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_1003e6d8
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_10025c9c
pop ecx
sub_1003ecb6
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_1003ec03
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_10025c9c
pop ecx
sub_1003ecd7
mov eax [ ecx + 0x20 ]
cmp [ eax ] 0x0
je r-xdata
xor eax eax
mov eax [ ecx + 0x30 ]
mov eax [ eax ]
jmp r-xdata
mov eax [ ecx ]
call [ eax + 0x14 ]
movzx eax ax
retn
mov eax [ ecx + 0x30 ]
dec [ eax ]
mov ecx [ ecx + 0x20 ]
mov eax [ ecx ]
lea edx [ eax + 0x2 ]
mov [ ecx ] edx
movzx eax [ eax ]
retn
test eax eax
jle r-xdata
sub_1003ed08
mov edi edi
push ebp
mov ebp esp
mov eax [ ecx + 0x24 ]
cmp [ eax ] 0x0
je r-xdata
xor eax eax
mov eax [ ecx + 0x34 ]
mov eax [ eax ]
jmp r-xdata
push [ ebp + 0x8 ]
mov eax [ ecx ]
call [ eax + 0x4 ]
mov eax [ ecx + 0x34 ]
dec [ eax ]
mov eax [ ecx + 0x24 ]
mov ecx [ eax ]
lea edx [ ecx + 0x2 ]
mov [ eax ] edx
mov eax [ ebp + 0x8 ]
mov [ ecx ] ax
jmp r-xdata
test eax eax
jle r-xdata
movzx eax ax
pop ebp
retn 0x4
sub_1003ed48
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
mov ecx [ esi + 0x4 ]
test ecx ecx
je r-xdata
mov [ esi ] 0x1
push [ ebp + 0x8 ]
call sub_1003ed08
mov ecx 0xffff
cmp cx ax
jne r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
sub_1003ed73
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x1c ] 0x0
jbe r-xdata
mov ecx [ ebp + 0x10 ]
mov eax [ ebp + 0xc ]
mov [ eax ] ecx
mov ecx [ ebp + 0x14 ]
mov [ eax + 0x4 ] ecx
pop ebp
retn
push esi
mov esi [ ebp + 0x18 ]
movzx eax [ esi ]
push eax
lea ecx [ ebp + 0x10 ]
call sub_1003ed48
dec [ ebp + 0x1c ]
inc esi
inc esi
cmp [ ebp + 0x1c ] 0x0
ja r-xdata
pop esi
sub_1003edaa
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x1c ] 0x0
jbe r-xdata
mov ecx [ ebp + 0x10 ]
mov eax [ ebp + 0xc ]
mov [ eax ] ecx
mov ecx [ ebp + 0x14 ]
mov [ eax + 0x4 ] ecx
pop ebp
retn
push [ ebp + 0x18 ]
lea ecx [ ebp + 0x10 ]
call sub_1003ed48
dec [ ebp + 0x1c ]
jne r-xdata
sub_1003edd5
push 0x14
mov eax sub_1004b2e5
call sub_10029e66
mov esi ecx
mov [ ebp - 0x14 ] esi
call sub_100264f9
mov ecx [ ebp + 0x8 ]
mov edi eax
xor ebx ebx
lea eax [ ebp - 0x20 ]
push eax
mov [ esi + 0x8 ] ebx
mov [ esi + 0x10 ] ebx
mov [ esi + 0x14 ] ebx
mov [ ebp - 0x4 ] ebx
call sub_10007307
push eax
push ebx
push [ edi + 0x8 ]
call sub_100066e3
mov ecx [ ebp + 0x8 ]
mov [ esi + 0x8 ] eax
add esp 0xc
lea eax [ ebp - 0x20 ]
push eax
call sub_10007307
push eax
push ebx
push r--data
call sub_1003de43
mov ecx [ ebp + 0x8 ]
mov [ esi + 0x10 ] eax
add esp 0xc
lea eax [ ebp - 0x20 ]
push eax
call sub_10007307
push eax
push ebx
push r--data
call sub_1003de43
mov ecx [ ebp + 0x8 ]
or [ ebp - 0x4 ] 0xffffffff
mov [ esi + 0x14 ] eax
add esp 0xc
lea eax [ ebp - 0x20 ]
push eax
call sub_10007307
push eax
mov eax [ edi ]
movzx eax [ eax ]
push ebx
push eax
call sub_1003de15
mov ecx [ ebp + 0x8 ]
mov [ esi + 0xc ] ax
add esp 0xc
lea eax [ ebp - 0x20 ]
push eax
call sub_10007307
push eax
mov eax [ edi + 0x4 ]
movzx eax [ eax ]
push ebx
push eax
call sub_1003de15
add esp 0xc
mov [ esi + 0xe ] ax
cmp [ ebp + 0xc ] bl
je r-xdata
call sub_10029f0b
retn 0x8
mov ecx [ ebp + 0x8 ]
lea eax [ ebp - 0x20 ]
push eax
call sub_10007307
push eax
push ebx
push r--data
call sub_100066e3
mov ecx [ ebp + 0x8 ]
mov [ esi + 0x8 ] eax
add esp 0xc
lea eax [ ebp - 0x20 ]
push eax
call sub_10007307
push eax
push ebx
push 0x2e
call sub_1003de15
mov ecx [ ebp + 0x8 ]
mov [ esi + 0xc ] ax
add esp 0xc
lea eax [ ebp - 0x18 ]
push eax
call sub_10007307
push eax
push ebx
push 0x2c
call sub_1003de15
add esp 0xc
mov [ esi + 0xe ] ax
sub_1003ef0d
mov edi edi
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
mov esi ecx
cmp edi [ esi + 0x14 ]
jbe r-xdata
cmp [ esi + 0x18 ] 0x8
jb r-xdata
call sub_100261ef
add esi 0x4
mov esi [ esi + 0x4 ]
jmp r-xdata
lea eax [ esi + edi * 2 ]
pop edi
pop esi
pop ebp
retn 0x4
sub_1003ef3a
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
mov eax [ esi ]
push edi
mov edi [ ebp + 0x8 ]
cmp eax 0xfffffffc
je r-xdata
add [ esi + 0x4 ] edi
pop edi
mov eax esi
pop esi
pop ebp
retn 0x4
test eax eax
jne r-xdata
mov eax [ esi ]
cmp [ eax + 0x18 ] 0x10
jb r-xdata
call sub_100261ef
lea ecx [ eax + 0x4 ]
mov ecx [ eax + 0x4 ]
jmp r-xdata
call sub_100261ef
cmp [ eax + 0x18 ] 0x10
jb r-xdata
mov edx [ esi + 0x4 ]
push ebx
mov ebx [ eax + 0x14 ]
add ebx ecx
add edx edi
cmp edx ebx
pop ebx
ja r-xdata
add eax 0x4
mov eax [ eax + 0x4 ]
jmp r-xdata
cmp edx eax
jae r-xdata
sub_1003ef98
mov edi edi
push ebp
mov ebp esp
jmp r-xdata
cmp [ ebp + 0x1c ] 0x0
ja r-xdata
lea ecx [ ebp + 0x14 ]
call sub_100068fb
movzx eax [ eax ]
push eax
lea ecx [ ebp + 0xc ]
call sub_10005d99
dec [ ebp + 0x1c ]
lea ecx [ ebp + 0x14 ]
call sub_100067be
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x4 ] ecx
pop ebp
retn
sub_1003efd4
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x18 ] 0x0
jbe r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x4 ] ecx
pop ebp
retn
push [ ebp + 0x14 ]
lea ecx [ ebp + 0xc ]
call sub_10005d99
dec [ ebp + 0x18 ]
jne r-xdata
sub_1003efff
push 0x10
mov eax sub_1004b300
call sub_10029e66
mov esi ecx
mov [ ebp - 0x14 ] esi
mov ecx [ ebp + 0x8 ]
lea eax [ ebp - 0x1c ]
push eax
call sub_10007307
mov ecx [ eax ]
lea ebx [ esi + 0x2c ]
mov [ ebx ] ecx
mov eax [ eax + 0x4 ]
mov [ ebx + 0x4 ] eax
call sub_100264f9
mov edi eax
xor eax eax
push ebx
push eax
mov [ esi + 0x8 ] eax
mov [ esi + 0x10 ] eax
mov [ esi + 0x14 ] eax
mov [ esi + 0x18 ] eax
push [ edi + 0x1c ]
mov [ ebp - 0x4 ] eax
call sub_100066e3
add esp 0xc
cmp [ esi + 0x28 ] 0x0
mov [ esi + 0x8 ] eax
je r-xdata
mov eax [ edi + 0x10 ]
mov eax [ edi + 0xc ]
jmp r-xdata
push ebx
push 0x0
push eax
call sub_10006955
mov [ esi + 0x14 ] eax
add esp 0xc
cmp [ edi + 0x2f ] 0x4
mov eax r--data
ja r-xdata
mov eax [ edi + 0x20 ]
push ebx
push 0x0
push eax
call sub_10006955
mov [ esi + 0x10 ] eax
add esp 0xc
cmp [ edi + 0x2e ] 0x4
mov eax r--data
ja r-xdata
push ebx
push 0x0
push eax
call sub_10006955
mov [ esi + 0x18 ] eax
mov eax [ edi + 0x14 ]
movzx eax [ eax ]
add esp 0xc
push ebx
push 0x0
push eax
call sub_10006d61
mov [ esi + 0xc ] ax
mov eax [ edi + 0x18 ]
movzx eax [ eax ]
push ebx
push 0x0
push eax
call sub_10006d61
add esp 0x18
cmp [ esi + 0x28 ] 0x0
mov [ esi + 0xe ] ax
je r-xdata
mov eax [ edi + 0x24 ]
mov al [ edi + 0x29 ]
mov al [ edi + 0x28 ]
jmp r-xdata
and [ esi + 0x1c ] 0x0
cmp eax 0x7f
jl r-xdata
movsx eax al
mov [ esi + 0x1c ] eax
test eax eax
jl r-xdata
call sub_10029f0b
retn 0x8
push 0x4
mov esi r--data
push esi
push ebx
call sub_10028b40
push 0x4
push esi
push [ ebp + 0x8 ]
call sub_10028b40
add esp 0x18
movsx eax [ edi + 0x2e ]
push eax
movsx eax [ edi + 0x2a ]
push eax
movsx eax [ edi + 0x2b ]
push eax
lea ebx [ esi + 0x20 ]
push ebx
mov ecx esi
call sub_1003dfd8
movsx ecx [ edi + 0x2f ]
push ecx
movsx ecx [ edi + 0x2c ]
push ecx
movsx ecx [ edi + 0x2d ]
lea eax [ esi + 0x24 ]
push ecx
push eax
mov ecx esi
mov [ ebp + 0x8 ] eax
call sub_1003dfd8
cmp [ ebp + 0xc ] 0x0
je r-xdata
sub_1003f165
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x1c ] 0x0
jbe r-xdata
mov ecx [ ebp + 0x10 ]
mov eax [ ebp + 0xc ]
mov [ eax ] ecx
mov ecx [ ebp + 0x14 ]
mov [ eax + 0x4 ] ecx
pop ebp
retn
push esi
mov esi [ ebp + 0x18 ]
push edi
mov edi [ ebp + 0x8 ]
add edi 0x8
movzx eax [ esi ]
push edi
push 0x0
push eax
call sub_1003de15
movzx eax ax
add esp 0xc
push eax
lea ecx [ ebp + 0x10 ]
call sub_1003ed48
dec [ ebp + 0x1c ]
inc esi
cmp [ ebp + 0x1c ] 0x0
ja r-xdata
pop edi
pop esi
sub_1003f1b2
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
mov ebx [ ebp + 0x1c ]
push esi
push edi
mov edi [ ebp + 0x18 ]
mov esi ebx
sub eax edi
mov esi eax
jmp r-xdata
mov edx [ eax ]
mov ecx [ ebp + 0xc ]
mov eax [ eax + 0x4 ]
pop edi
pop esi
mov [ ecx + 0x4 ] eax
mov [ ecx ] edx
mov eax ecx
pop ebx
leave
retn
cmp [ ebp + 0x20 ] 0x0
je r-xdata
push esi
push edi
push [ ebp + 0x14 ]
lea eax [ ebp - 0x8 ]
push [ ebp + 0x10 ]
push eax
push [ ebp + 0x8 ]
call sub_1003f165
mov ecx [ eax ]
mov [ ebp + 0x10 ] ecx
mov ecx [ eax + 0x4 ]
add esp 0x18
add edi esi
sub ebx esi
mov [ ebp + 0x14 ] ecx
je r-xdata
inc edi
dec ebx
jmp r-xdata
push 0x1
push [ ebp + 0x20 ]
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0x10 ]
push eax
push [ ebp + 0x8 ]
call sub_1003edaa
mov ecx [ eax ]
mov [ ebp + 0x10 ] ecx
mov eax [ eax + 0x4 ]
add esp 0x18
mov [ ebp + 0x14 ] eax
push ebx
push 0x0
push edi
call sub_10026520
add esp 0xc
test eax eax
je r-xdata
sub_1003f246
mov edi edi
push ebp
mov ebp esp
jmp r-xdata
cmp [ ebp + 0x1c ] 0x0
ja r-xdata
lea ecx [ ebp + 0x14 ]
call sub_1003e981
movzx eax [ eax ]
push eax
lea ecx [ ebp + 0xc ]
call sub_1003ed48
dec [ ebp + 0x1c ]
lea ecx [ ebp + 0x14 ]
call sub_1003ead0
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x4 ] ecx
pop ebp
retn
sub_1003f282
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x18 ] 0x0
jbe r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x4 ] ecx
pop ebp
retn
push [ ebp + 0x14 ]
lea ecx [ ebp + 0xc ]
call sub_1003ed48
dec [ ebp + 0x18 ]
jne r-xdata
sub_1003f2ad
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0xc ] 0x1
jne r-xdata
cmp [ ecx + 0x18 ] 0x8
jb r-xdata
cmp [ ecx + 0x18 ] 0x8
jb r-xdata
add ecx 0x4
mov ecx [ ecx + 0x4 ]
jmp r-xdata
add ecx 0x4
mov ecx [ ecx + 0x4 ]
jmp r-xdata
push [ ebp + 0x10 ]
mov eax [ ebp + 0x8 ]
push [ ebp + 0xc ]
lea eax [ ecx + eax * 2 ]
push eax
call sub_1003e742
add esp 0xc
pop ebp
retn 0xc
mov eax [ ebp + 0x8 ]
mov dx [ ebp + 0x10 ]
mov [ ecx + eax * 2 ] dx
jmp r-xdata
sub_1003f2fa
mov edi edi
push ebp
mov ebp esp
cmp [ ecx + 0x18 ] 0x8
mov eax [ ebp + 0x8 ]
mov [ ecx + 0x14 ] eax
jb r-xdata
add ecx 0x4
mov ecx [ ecx + 0x4 ]
jmp r-xdata
xor edx edx
mov [ ecx + eax * 2 ] dx
pop ebp
retn 0x4
sub_1003f31d
push 0x10
mov eax sub_1004b31b
call sub_10029e66
mov esi ecx
mov [ ebp - 0x14 ] esi
mov ecx [ ebp + 0x8 ]
lea eax [ ebp - 0x1c ]
push eax
call sub_10007307
mov ecx [ eax ]
lea ebx [ esi + 0x2c ]
mov [ ebx ] ecx
mov eax [ eax + 0x4 ]
mov [ ebx + 0x4 ] eax
call sub_100264f9
mov edi eax
xor eax eax
push ebx
push eax
mov [ esi + 0x8 ] eax
mov [ esi + 0x10 ] eax
mov [ esi + 0x14 ] eax
mov [ esi + 0x18 ] eax
push [ edi + 0x1c ]
mov [ ebp - 0x4 ] eax
call sub_100066e3
add esp 0xc
cmp [ esi + 0x28 ] 0x0
mov [ esi + 0x8 ] eax
je r-xdata
mov eax [ edi + 0x10 ]
mov eax [ edi + 0xc ]
jmp r-xdata
push ebx
push 0x0
push eax
call sub_1003de43
mov [ esi + 0x14 ] eax
add esp 0xc
cmp [ edi + 0x2f ] 0x4
mov eax r--data
ja r-xdata
mov eax [ edi + 0x20 ]
push ebx
push 0x0
push eax
call sub_1003de43
mov [ esi + 0x10 ] eax
add esp 0xc
cmp [ edi + 0x2e ] 0x4
mov eax r--data
ja r-xdata
push ebx
push 0x0
push eax
call sub_1003de43
mov [ esi + 0x18 ] eax
mov eax [ edi + 0x14 ]
movzx eax [ eax ]
add esp 0xc
push ebx
push 0x0
push eax
call sub_1003de15
mov [ esi + 0xc ] ax
mov eax [ edi + 0x18 ]
movzx eax [ eax ]
push ebx
push 0x0
push eax
call sub_1003de15
add esp 0x18
cmp [ esi + 0x28 ] 0x0
mov [ esi + 0xe ] ax
je r-xdata
mov eax [ edi + 0x24 ]
mov al [ edi + 0x29 ]
mov al [ edi + 0x28 ]
jmp r-xdata
and [ esi + 0x1c ] 0x0
cmp eax 0x7f
jl r-xdata
movsx eax al
mov [ esi + 0x1c ] eax
test eax eax
jl r-xdata
call sub_10029f0b
retn 0x8
push 0x4
mov esi r--data
push esi
push ebx
call sub_10028b40
push 0x4
push esi
push [ ebp + 0x8 ]
call sub_10028b40
add esp 0x18
movsx eax [ edi + 0x2e ]
push eax
movsx eax [ edi + 0x2a ]
push eax
movsx eax [ edi + 0x2b ]
push eax
lea ebx [ esi + 0x20 ]
push ebx
mov ecx esi
call sub_1003dfd8
movsx ecx [ edi + 0x2f ]
push ecx
movsx ecx [ edi + 0x2c ]
push ecx
movsx ecx [ edi + 0x2d ]
lea eax [ esi + 0x24 ]
push ecx
push eax
mov ecx esi
mov [ ebp + 0x8 ] eax
call sub_1003dfd8
cmp [ ebp + 0xc ] 0x0
je r-xdata
sub_1003f483
mov edi edi
push esi
mov esi ecx
mov ecx [ esi ]
test ecx ecx
je r-xdata
and [ esi ] 0x0
mov [ esi + 0x4 ] 0x1
pop esi
retn
call sub_1003ecd7
mov ecx 0xffff
cmp cx ax
je r-xdata
mov [ esi + 0x4 ] 0x0
pop esi
retn
sub_1003f4ac
mov edi edi
push esi
mov esi ecx
mov ecx [ esi ]
test ecx ecx
je r-xdata
and [ esi ] 0x0
call sub_1003e7e1
movzx eax ax
mov ecx 0xffff
cmp cx ax
je r-xdata
mov [ esi + 0x6 ] ax
jmp r-xdata
mov ax [ esi + 0x6 ]
mov [ esi + 0x4 ] 0x1
pop esi
retn
sub_1003f525
mov edi edi
push ebp
mov ebp esp
push ecx
push [ ebp - 0x4 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_1003e7c6
add esp 0x14
leave
retn
sub_1003f544
mov edi edi
push ebp
mov ebp esp
push ecx
push [ ebp - 0x4 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_1003e924
add esp 0x14
leave
retn
sub_1003f563
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
xor ebx ebx
cmp [ edi + 0x4 ] bl
jne r-xdata
mov esi [ ebp + 0x8 ]
cmp [ esi + 0x4 ] bl
jne r-xdata
call sub_1003f4ac
cmp [ edi ] ebx
jne r-xdata
mov ecx esi
call sub_1003f4ac
cmp [ esi ] ebx
je r-xdata
cmp [ esi ] ebx
je r-xdata
xor eax eax
xor eax eax
inc eax
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
sub_1003f5a2
push 0x4
mov eax sub_1004b33e
call sub_10029e33
mov esi ecx
mov [ ebp - 0x10 ] esi
mov eax [ ebp + 0xc ]
mov [ esi + 0x4 ] eax
push [ ebp + 0x10 ]
and [ ebp - 0x4 ] 0x0
push [ ebp + 0x8 ]
mov [ esi ] r--data
call sub_1003edd5
mov eax esi
call sub_10029f0b
retn 0xc
sub_1003f5f0
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_1003f5d8
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_10025c9c
pop ecx
sub_1003f611
push 0x4
mov eax sub_1004b33e
call sub_10029e33
mov esi ecx
mov [ ebp - 0x10 ] esi
mov eax [ ebp + 0xc ]
mov [ esi + 0x4 ] eax
push [ ebp + 0x14 ]
mov al [ ebp + 0x10 ]
push [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
mov [ esi ] r--data
mov [ esi + 0x28 ] al
call sub_1003efff
mov eax esi
call sub_10029f0b
retn 0x10
sub_1003f64d
mov edi edi
push ebp
mov ebp esp
cmp [ ecx + 0x18 ] 0x8
jb r-xdata
lea eax [ ecx + 0x4 ]
mov eax [ ecx + 0x4 ]
jmp r-xdata
push ecx
mov ecx [ ebp + 0x8 ]
push eax
call sub_1003f4f6
mov eax [ ebp + 0x8 ]
pop ebp
retn 0x4
sub_1003f671
push 0x4
mov eax sub_1004b33e
call sub_10029e33
mov esi ecx
mov [ ebp - 0x10 ] esi
mov eax [ ebp + 0xc ]
mov [ esi + 0x4 ] eax
push [ ebp + 0x14 ]
mov al [ ebp + 0x10 ]
push [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
mov [ esi ] r--data
mov [ esi + 0x28 ] al
call sub_1003f31d
mov eax esi
call sub_10029f0b
retn 0x10
sub_1003f6ad
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ ecx ]
push [ ebp + 0xc ]
mov [ ebp - 0x8 ] eax
mov eax [ ecx + 0x4 ]
lea ecx [ ebp - 0x8 ]
mov [ ebp - 0x4 ] eax
call sub_1003ef3a
mov ecx [ ebp - 0x8 ]
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov ecx [ ebp - 0x4 ]
mov [ eax + 0x4 ] ecx
leave
retn 0x8
sub_1003f6f2
mov edi edi
push ebp
mov ebp esp
push ecx
push esi
push edi
mov edi [ ebp + 0x8 ]
mov esi ecx
cmp [ esi + 0x14 ] edi
jae r-xdata
mov eax [ esi + 0x14 ]
sub eax edi
cmp eax [ ebp + 0xc ]
jae r-xdata
call sub_100222af
cmp [ ebp + 0xc ] 0x0
jbe r-xdata
mov [ ebp + 0xc ] eax
pop edi
mov eax esi
pop esi
leave
retn 0x8
mov ecx [ esi + 0x18 ]
push ebx
lea edx [ esi + 0x4 ]
cmp ecx 0x8
jb r-xdata
mov [ ebp + 0x8 ] edx
mov ebx [ edx ]
mov [ ebp + 0x8 ] ebx
jmp r-xdata
mov ebx [ ebp + 0xc ]
sub eax ebx
push eax
mov [ ebp - 0x4 ] edx
mov edx [ ebp + 0x8 ]
lea eax [ edi + ebx ]
lea eax [ edx + eax * 2 ]
push eax
mov eax [ ebp - 0x4 ]
sub ecx edi
push ecx
lea eax [ eax + edi * 2 ]
push eax
call sub_1003f544
mov eax [ esi + 0x14 ]
add esp 0x10
sub eax ebx
push eax
mov ecx esi
call sub_1003f2fa
pop ebx
mov edx [ edx ]
cmp ecx 0x8
jb r-xdata
sub_1003f774
mov edi edi
push ebp
mov ebp esp
cmp [ ecx + 0x18 ] 0x8
jb r-xdata
lea eax [ ecx + 0x4 ]
mov eax [ ecx + 0x4 ]
jmp r-xdata
push ecx
mov ecx [ ecx + 0x14 ]
lea eax [ eax + ecx * 2 ]
mov ecx [ ebp + 0x8 ]
push eax
call sub_1003f4f6
mov eax [ ebp + 0x8 ]
pop ebp
retn 0x4
sub_1003f79e
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
push esi
mov esi ecx
je r-xdata
push [ ebp + 0xc ]
mov ecx esi
mov [ esi + 0x18 ] 0x7
call sub_1003f2fa
pop esi
pop ebp
retn 0x8
cmp [ esi + 0x18 ] 0x8
jb r-xdata
cmp [ ebp + 0xc ] 0x0
lea eax [ esi + 0x4 ]
push edi
mov edi [ eax ]
jbe r-xdata
push edi
call sub_10025c9c
pop ecx
pop edi
push [ ebp + 0xc ]
push edi
push 0x8
push eax
call sub_1003f525
add esp 0x10
sub_1003f7eb
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ ecx ]
push [ ebp + 0xc ]
mov [ ebp - 0x8 ] eax
mov eax [ ecx + 0x4 ]
lea ecx [ ebp - 0x8 ]
mov [ ebp - 0x4 ] eax
call sub_1003eba0
mov ecx [ ebp - 0x8 ]
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov ecx [ ebp - 0x4 ]
mov [ eax + 0x4 ] ecx
leave
retn 0x8
sub_1003f81a
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ ecx ]
mov [ ebp - 0x8 ] eax
mov eax [ ecx + 0x4 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0xc ]
neg eax
push eax
lea ecx [ ebp - 0x8 ]
call sub_1003eba0
mov ecx [ ebp - 0x8 ]
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov ecx [ ebp - 0x4 ]
mov [ eax + 0x4 ] ecx
leave
retn 0x8
sub_1003f84c
push 0xc
mov eax sub_1004b359
call sub_10029e66
mov edi ecx
mov [ ebp - 0x18 ] edi
mov esi [ ebp + 0x8 ]
or esi 0x7
cmp esi 0x7ffffffe
jbe r-xdata
xor edx edx
push 0x3
mov eax esi
pop ebx
div ebx
mov ecx [ edi + 0x18 ]
mov [ ebp - 0x14 ] ecx
shr [ ebp - 0x14 ] 0x1
mov edx [ ebp - 0x14 ]
cmp eax edx
jae r-xdata
mov esi [ ebp + 0x8 ]
jmp r-xdata
and [ ebp - 0x4 ] 0x0
lea eax [ esi + 0x1 ]
push eax
mov ecx edi
call sub_1003f510
mov ebx eax
jmp r-xdata
mov eax 0x7ffffffe
sub eax edx
cmp ecx eax
ja r-xdata
cmp [ ebp + 0xc ] 0x0
jbe r-xdata
lea esi [ edx + ecx ]
push 0x0
push 0x1
mov ecx edi
call sub_1003f79e
push [ ebp + 0xc ]
mov ecx edi
mov [ edi + 0x4 ] ebx
mov [ edi + 0x18 ] esi
call sub_1003f2fa
call sub_10029f0b
retn 0x8
cmp [ edi + 0x18 ] 0x8
jb r-xdata
lea eax [ edi + 0x4 ]
mov eax [ edi + 0x4 ]
jmp r-xdata
push [ ebp + 0xc ]
push eax
lea eax [ esi + 0x1 ]
push eax
push ebx
call sub_1003f525
add esp 0x10
sub_1003f94b
mov edi edi
push ebp
mov ebp esp
push esi
push [ ebp + 0x10 ]
mov esi ecx
push 0x0
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_1003f611
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0xc
sub_1003f970
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
mov [ esi ] r--data
call sub_1003e6d8
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_10025c9c
pop ecx
sub_1003f997
mov edi edi
push ebp
mov ebp esp
push esi
push [ ebp + 0x10 ]
mov esi ecx
push 0x1
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_1003f611
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0xc
sub_1003f9bc
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
mov [ esi ] r--data
call sub_1003e6d8
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_10025c9c
pop ecx
sub_1003f9e3
mov edi edi
push ebp
mov ebp esp
push esi
push [ ebp + 0x10 ]
mov esi ecx
push 0x0
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_1003f671
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0xc
sub_1003fa08
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
mov [ esi ] r--data
call sub_1003ec03
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_10025c9c
pop ecx
sub_1003fa2f
mov edi edi
push ebp
mov ebp esp
push esi
push [ ebp + 0x10 ]
mov esi ecx
push 0x1
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_1003f671
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0xc
sub_1003fa54
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
mov [ esi ] r--data
call sub_1003ec03
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_10025c9c
pop ecx
sub_1003fab5
mov edi edi
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
mov esi ecx
cmp edi 0x7ffffffe
jbe r-xdata
cmp [ esi + 0x18 ] edi
jae r-xdata
call sub_10022277
cmp [ ebp + 0xc ] 0x0
je r-xdata
push [ esi + 0x14 ]
mov ecx esi
push edi
call sub_1003f84c
jmp r-xdata
test edi edi
jne r-xdata
cmp edi 0x8
jae r-xdata
xor eax eax
cmp eax edi
sbb eax eax
pop edi
neg eax
pop esi
pop ebp
retn 0x8
push edi
mov ecx esi
call sub_1003f2fa
mov eax [ esi + 0x14 ]
cmp edi eax
jae r-xdata
push eax
push 0x1
mov ecx esi
call sub_1003f79e
jmp r-xdata
mov eax edi
sub_1003fb33
mov edi edi
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0xc ]
push esi
push edi
mov edi [ ebp + 0x8 ]
mov esi ecx
cmp [ edi + 0x14 ] ebx
jae r-xdata
mov eax [ edi + 0x14 ]
sub eax ebx
mov ebx [ ebp + 0x10 ]
cmp eax ebx
jae r-xdata
call sub_100222af
or eax 0xffffffff
sub eax [ esi + 0x14 ]
cmp eax ebx
jbe r-xdata
mov ebx eax
mov [ ebp + 0x10 ] ebx
call sub_10022277
mov eax [ esi + 0x14 ]
lea ecx [ eax + ebx ]
cmp ecx eax
jae r-xdata
test ebx ebx
jbe r-xdata
pop edi
mov eax esi
pop esi
pop ebx
pop ebp
retn 0xc
mov eax [ esi + 0x14 ]
add eax ebx
push 0x0
push eax
mov ecx esi
mov [ ebp + 0x8 ] eax
call sub_1003fab5
test al al
je r-xdata
cmp [ edi + 0x18 ] 0x8
jb r-xdata
add edi 0x4
mov edi [ edi + 0x4 ]
jmp r-xdata
lea edx [ esi + 0x4 ]
mov edx [ esi + 0x4 ]
jmp r-xdata
mov eax [ esi + 0x18 ]
cmp eax 0x8
jb r-xdata
push [ ebp + 0x10 ]
mov ecx [ esi + 0x14 ]
mov ebx [ ebp + 0xc ]
lea edi [ edi + ebx * 2 ]
sub eax ecx
push edi
push eax
lea eax [ edx + ecx * 2 ]
push eax
call sub_1003f525
add esp 0x10
push [ ebp + 0x8 ]
mov ecx esi
call sub_1003f2fa
sub_1003fbf7
mov edi edi
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
push edi
or eax 0xffffffff
mov edi ecx
sub eax [ edi + 0x14 ]
cmp eax ebx
ja r-xdata
test ebx ebx
jbe r-xdata
call sub_10022277
mov eax edi
pop edi
pop ebx
pop ebp
retn 0x8
push esi
mov esi [ edi + 0x14 ]
push 0x0
add esi ebx
push esi
mov ecx edi
call sub_1003fab5
test al al
je r-xdata
pop esi
push [ ebp + 0xc ]
mov ecx edi
push ebx
push [ edi + 0x14 ]
call sub_1003f2ad
push esi
mov ecx edi
call sub_1003f2fa
sub_1003fc49
mov edi edi
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
mov esi ecx
cmp [ esi + 0x14 ] edi
jae r-xdata
or eax 0xffffffff
sub eax [ esi + 0x14 ]
cmp eax [ ebp + 0xc ]
ja r-xdata
call sub_100222af
cmp [ ebp + 0xc ] 0x0
jbe r-xdata
call sub_10022277
pop edi
mov eax esi
pop esi
pop ebp
retn 0xc
push ebx
mov ebx [ esi + 0x14 ]
add ebx [ ebp + 0xc ]
push 0x0
push ebx
mov ecx esi
call sub_10001eb9
test al al
je r-xdata
pop ebx
mov eax [ esi + 0x18 ]
lea ecx [ esi + 0x4 ]
cmp eax 0x8
jb r-xdata
mov [ ebp + 0x8 ] ecx
mov edx [ ecx ]
mov [ ebp + 0x8 ] edx
jmp r-xdata
mov edx [ esi + 0x14 ]
sub edx edi
push edx
mov edx [ ebp + 0x8 ]
lea edx [ edx + edi * 2 ]
push edx
mov edx [ ebp + 0xc ]
sub eax edi
sub eax edx
push eax
lea eax [ edi + edx ]
lea eax [ ecx + eax * 2 ]
push eax
call j_sub_10001ce4
add esp 0x10
push [ ebp + 0x10 ]
mov ecx esi
push [ ebp + 0xc ]
push edi
call sub_10004936
push ebx
mov ecx esi
call sub_10002460
mov ecx [ ecx ]
cmp eax 0x8
jb r-xdata
sub_1003fce9
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
mov ebx ecx
cmp [ edi + 0x14 ] eax
jae r-xdata
mov esi [ edi + 0x14 ]
mov eax [ ebp + 0xc ]
sub esi eax
cmp [ ebp + 0x10 ] esi
jae r-xdata
call sub_100222af
mov ecx ebx
cmp ebx edi
jne r-xdata
mov esi [ ebp + 0x10 ]
push 0x0
push esi
call sub_1003fab5
test al al
je r-xdata
push 0xffffffff
add esi eax
push esi
call sub_1003f6f2
push [ ebp + 0xc ]
mov ecx ebx
push 0x0
call sub_1003f6f2
jmp r-xdata
pop edi
pop esi
mov eax ebx
pop ebx
pop ebp
retn 0xc
cmp [ edi + 0x18 ] 0x8
jb r-xdata
add edi 0x4
mov edi [ edi + 0x4 ]
jmp r-xdata
lea eax [ ebx + 0x4 ]
mov eax [ ebx + 0x4 ]
jmp r-xdata
mov ecx [ ebx + 0x18 ]
cmp ecx 0x8
jb r-xdata
mov edx [ ebp + 0xc ]
push esi
lea edx [ edi + edx * 2 ]
push edx
push ecx
push eax
call sub_1003f525
add esp 0x10
push esi
mov ecx ebx
call sub_1003f2fa
sub_1003fd7e
mov edi edi
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
push edi
mov esi ecx
call sub_1003eb61
test al al
je r-xdata
push 0x0
push [ ebp + 0xc ]
mov ecx esi
call sub_1003fab5
test al al
je r-xdata
cmp [ esi + 0x18 ] 0x8
jb r-xdata
mov eax esi
mov ecx [ esi + 0x18 ]
cmp ecx 0x8
jb r-xdata
lea eax [ esi + 0x4 ]
mov eax [ esi + 0x4 ]
jmp r-xdata
lea eax [ esi + 0x4 ]
mov eax [ esi + 0x4 ]
jmp r-xdata
pop edi
pop esi
pop ebp
retn 0x8
push [ ebp + 0xc ]
sub edi eax
sar edi 0x1
push edi
push esi
mov ecx esi
call sub_1003fce9
jmp r-xdata
push [ ebp + 0xc ]
push edi
push ecx
push eax
call sub_1003f525
add esp 0x10
push [ ebp + 0xc ]
mov ecx esi
call sub_1003f2fa
sub_1003fdf4
mov edi edi
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
mov esi ecx
call sub_10026078
pop ecx
push eax
push [ ebp + 0x8 ]
mov ecx esi
call sub_1003fd7e
pop esi
pop ebp
retn 0x4
sub_1003fe15
mov edi edi
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
mov esi ecx
cmp edi 0xffffffff
jne r-xdata
push 0x0
push edi
mov ecx esi
call sub_1003fab5
test al al
je r-xdata
call sub_10022277
pop edi
mov eax esi
pop esi
pop ebp
retn 0x8
push [ ebp + 0xc ]
mov ecx esi
push edi
push 0x0
call sub_1003f2ad
push edi
mov ecx esi
call sub_1003f2fa
sub_1003fe56
mov edi edi
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
mov esi ecx
cmp [ esi + 0x14 ] edi
jae r-xdata
or eax 0xffffffff
sub eax [ esi + 0x14 ]
cmp eax [ ebp + 0xc ]
ja r-xdata
call sub_100222af
cmp [ ebp + 0xc ] 0x0
jbe r-xdata
call sub_10022277
pop edi
mov eax esi
pop esi
pop ebp
retn 0xc
push ebx
mov ebx [ esi + 0x14 ]
add ebx [ ebp + 0xc ]
push 0x0
push ebx
mov ecx esi
call sub_1003fab5
test al al
je r-xdata
pop ebx
mov eax [ esi + 0x18 ]
lea ecx [ esi + 0x4 ]
cmp eax 0x8
jb r-xdata
mov [ ebp + 0x8 ] ecx
mov edx [ ecx ]
mov [ ebp + 0x8 ] edx
jmp r-xdata
mov edx [ esi + 0x14 ]
sub edx edi
push edx
mov edx [ ebp + 0x8 ]
lea edx [ edx + edi * 2 ]
push edx
mov edx [ ebp + 0xc ]
sub eax edi
sub eax edx
push eax
lea eax [ edi + edx ]
lea eax [ ecx + eax * 2 ]
push eax
call sub_1003f544
add esp 0x10
push [ ebp + 0x10 ]
mov ecx esi
push [ ebp + 0xc ]
push edi
call sub_1003f2ad
push ebx
mov ecx esi
call sub_1003f2fa
mov ecx [ ecx ]
cmp eax 0x8
jb r-xdata
sub_1003fef6
mov edi edi
push ebp
mov ebp esp
mov edx [ ecx + 0x14 ]
mov eax [ ebp + 0x8 ]
cmp eax edx
ja r-xdata
push [ ebp + 0xc ]
sub eax edx
push eax
call sub_1003fbf7
push 0xffffffff
push eax
call sub_1003f6f2
jmp r-xdata
pop ebp
retn 0x8
sub_1003ff1e
push 0x38
mov eax sub_1004c262
call sub_10029e9c
mov esi [ ebp + 0x14 ]
mov eax [ ebp + 0x8 ]
movzx ecx [ esi ]
mov [ ebp - 0x3c ] eax
mov eax [ ebp + 0xc ]
xor edx edx
mov [ ebp - 0x44 ] eax
test cx cx
je r-xdata
push 0x0
push [ ebp + 0x10 ]
lea ecx [ ebp - 0x2c ]
call sub_10005b42
and [ ebp - 0x4 ] 0x0
mov [ ebp - 0x40 ] 0xfffffffe
mov [ ebp - 0x38 ] 0x1
movzx eax cx
push 0x0
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_100022b5
mov eax [ ebp - 0x40 ]
call sub_10029f1f
retn
movzx eax [ esi + edi * 2 ]
test ax ax
je r-xdata
inc edx
movzx eax [ esi + edx * 2 ]
test ax ax
jne r-xdata
inc [ ebp + 0x10 ]
push [ ebp - 0x34 ]
lea ecx [ ebp - 0x2c ]
call sub_10005c50
cmp [ eax ] 0x0
je r-xdata
movzx ecx [ esi ]
cmp ax cx
jne r-xdata
add edi [ ebp - 0x38 ]
movzx eax [ esi + edi * 2 ]
cmp ax [ esi ]
je r-xdata
push [ ebp - 0x34 ]
lea ecx [ ebp - 0x2c ]
call sub_10005c50
movsx eax [ eax ]
add edi eax
jmp r-xdata
inc edi
movzx eax [ esi + edi * 2 ]
test ax ax
jne r-xdata
push 0x7f
pop ebx
cmp [ ebp - 0x38 ] ebx
jae r-xdata
test ax ax
je r-xdata
inc [ ebp - 0x34 ]
mov eax [ ebp - 0x34 ]
cmp eax [ ebp + 0x10 ]
jb r-xdata
cmp ax cx
je r-xdata
push [ ebp - 0x34 ]
lea ecx [ ebp - 0x2c ]
call sub_10005c50
mov [ eax ] bl
mov eax [ ebp - 0x34 ]
mov [ ebp - 0x40 ] eax
mov ebx [ ebp - 0x38 ]
push [ ebp - 0x44 ]
mov ecx [ ebp - 0x3c ]
call sub_1003f563
test al al
jne r-xdata
cmp [ ebp - 0x2d ] 0x0
je r-xdata
push 0x7f
pop ebx
cmp [ ebp - 0x38 ] ebx
jae r-xdata
mov ecx [ ebp - 0x3c ]
call sub_1003f6dc
cmp [ esi + edi * 2 ] ax
jne r-xdata
push [ ebp - 0x44 ]
mov ecx [ ebp - 0x3c ]
call sub_1003f563
test al al
jne r-xdata
push [ ebp - 0x34 ]
lea ecx [ ebp - 0x2c ]
call sub_10005c50
mov [ eax ] bl
jmp r-xdata
mov ebx [ ebp - 0x38 ]
mov [ ebp - 0x2d ] 0x1
jmp r-xdata
mov ecx [ ebp - 0x3c ]
inc [ ebp - 0x38 ]
call sub_1003f483
or [ ebp - 0x40 ] 0xffffffff
jmp r-xdata
xor edi edi
mov [ ebp - 0x2d ] 0x0
mov [ ebp - 0x34 ] edi
cmp [ ebp + 0x10 ] edi
jbe r-xdata
sub_1004007f
push 0x4c
mov eax sub_1004b37c
call sub_10029e9c
mov eax [ ebp + 0x8 ]
mov esi r--data
lea edi [ ebp - 0x18 ]
movsd [ edi ] [ esi ]
mov [ ebp - 0x40 ] eax
mov eax [ ebp + 0x1c ]
mov ebx ecx
lea ecx [ ebp - 0x34 ]
mov [ ebp - 0x38 ] eax
movsb [ edi ] [ esi ]
call sub_10007bb4
mov al [ ebp + 0x24 ]
and [ ebp - 0x4 ] 0x0
test al al
jne r-xdata
mov [ ebp - 0x16 ] al
mov al [ ebp + 0x20 ]
mov [ ebp - 0x15 ] al
mov al [ ebp + 0x20 ]
mov [ ebp - 0x16 ] al
jmp r-xdata
push 0x0
push esi
lea ecx [ ebp - 0x34 ]
call sub_10005b68
mov eax [ ebp - 0x20 ]
mov edi [ ebx + 0x8 ]
mov [ ebp - 0x48 ] eax
lea eax [ ebp - 0x58 ]
push eax
lea ecx [ ebp - 0x34 ]
call sub_1001039e
mov ecx eax
call sub_10006739
push edi
push [ ebp - 0x38 ]
lea ecx [ ebp - 0x18 ]
push ecx
push [ ebp - 0x48 ]
push eax
call sub_10035347
mov edi eax
add esp 0x14
test edi edi
jbe r-xdata
push 0x10
pop esi
jmp r-xdata
add esi esi
and [ ebp - 0x50 ] 0x0
push 0x1
lea eax [ ebp - 0x58 ]
push eax
lea eax [ ebp - 0x4c ]
push eax
lea ecx [ ebp - 0x34 ]
dec edi
call sub_1001039e
mov ecx eax
call sub_1003f6ad
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
xor esi esi
mov [ ebp - 0x3c ] ecx
mov [ ebp - 0x38 ] eax
cmp edi esi
jbe r-xdata
mov eax [ ebp + 0xc ]
mov edi [ ebp - 0x40 ]
mov [ edi ] eax
mov eax [ ebp + 0x10 ]
push esi
push 0x1
lea ecx [ ebp - 0x34 ]
mov [ edi + 0x4 ] eax
call sub_100022b5
mov eax edi
call sub_10029f1f
retn 0x20
add ebx 0xc
xor eax eax
jle r-xdata
push ebx
lea eax [ ebp - 0x50 ]
push eax
push edi
lea ecx [ ebp - 0x3c ]
call sub_10006739
push eax
lea eax [ ebp - 0x44 ]
push eax
call sub_10022bbe
add esp 0x14
cmp eax 0xfffffffd
je r-xdata
push eax
lea ecx [ ebp - 0x3c ]
sub edi eax
call sub_1003ef3a
push [ ebp - 0x44 ]
lea ecx [ ebp + 0xc ]
call sub_10005d99
cmp edi esi
ja r-xdata
cmp eax esi
jl r-xdata
jne r-xdata
cmp [ ebp - 0x44 ] si
jne r-xdata
lea ecx [ ebp - 0x3c ]
call sub_10006739
push eax
call sub_10025d30
pop ecx
inc eax
jmp r-xdata
sub_100401c0
push 0x4c
mov eax sub_1004b37c
call sub_10029e9c
mov eax [ ebp + 0x8 ]
mov esi r--data
lea edi [ ebp - 0x18 ]
movsd [ edi ] [ esi ]
mov [ ebp - 0x40 ] eax
mov eax [ ebp + 0x1c ]
mov ebx ecx
lea ecx [ ebp - 0x34 ]
mov [ ebp - 0x38 ] eax
movsb [ edi ] [ esi ]
call sub_10007bb4
mov al [ ebp + 0x24 ]
and [ ebp - 0x4 ] 0x0
test al al
jne r-xdata
mov [ ebp - 0x16 ] al
mov al [ ebp + 0x20 ]
mov [ ebp - 0x15 ] al
mov al [ ebp + 0x20 ]
mov [ ebp - 0x16 ] al
jmp r-xdata
push 0x0
push esi
lea ecx [ ebp - 0x34 ]
call sub_10005b68
mov eax [ ebp - 0x20 ]
mov edi [ ebx + 0x8 ]
mov [ ebp - 0x48 ] eax
lea eax [ ebp - 0x58 ]
push eax
lea ecx [ ebp - 0x34 ]
call sub_1001039e
mov ecx eax
call sub_10006739
push edi
push [ ebp - 0x38 ]
lea ecx [ ebp - 0x18 ]
push ecx
push [ ebp - 0x48 ]
push eax
call sub_10035347
mov edi eax
add esp 0x14
test edi edi
jbe r-xdata
push 0x10
pop esi
jmp r-xdata
add esi esi
and [ ebp - 0x50 ] 0x0
push 0x1
lea eax [ ebp - 0x58 ]
push eax
lea eax [ ebp - 0x4c ]
push eax
lea ecx [ ebp - 0x34 ]
dec edi
call sub_1001039e
mov ecx eax
call sub_1003f6ad
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
xor esi esi
mov [ ebp - 0x3c ] ecx
mov [ ebp - 0x38 ] eax
cmp edi esi
jbe r-xdata
mov eax [ ebp + 0xc ]
mov edi [ ebp - 0x40 ]
mov [ edi ] eax
mov eax [ ebp + 0x10 ]
push esi
push 0x1
lea ecx [ ebp - 0x34 ]
mov [ edi + 0x4 ] eax
call sub_100022b5
mov eax edi
call sub_10029f1f
retn 0x20
add ebx 0xc
xor eax eax
jle r-xdata
push ebx
lea eax [ ebp - 0x50 ]
push eax
push edi
lea ecx [ ebp - 0x3c ]
call sub_10006739
push eax
lea eax [ ebp - 0x44 ]
push eax
call sub_10022bbe
add esp 0x14
cmp eax 0xfffffffd
je r-xdata
push eax
lea ecx [ ebp - 0x3c ]
sub edi eax
call sub_1003ef3a
push [ ebp - 0x44 ]
lea ecx [ ebp + 0xc ]
call sub_1003ed48
cmp edi esi
ja r-xdata
cmp eax esi
jl r-xdata
jne r-xdata
cmp [ ebp - 0x44 ] si
jne r-xdata
lea ecx [ ebp - 0x3c ]
call sub_10006739
push eax
call sub_10025d30
pop ecx
inc eax
jmp r-xdata
sub_10040301
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
push 0x0
mov [ esi + 0x18 ] 0x7
call sub_1003f2fa
push [ ebp + 0xc ]
mov ecx esi
push [ ebp + 0x8 ]
call sub_1003fd7e
mov eax esi
pop esi
pop ebp
retn 0x8
sub_1004032b
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
push 0x0
mov [ esi + 0x18 ] 0x7
call sub_1003f2fa
push [ ebp + 0x8 ]
mov ecx esi
call sub_1003fdf4
mov eax esi
pop esi
pop ebp
retn 0x4
sub_10040352
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
push 0x0
mov [ esi + 0x18 ] 0x7
call sub_1003f2fa
push [ ebp + 0xc ]
mov ecx esi
push [ ebp + 0x8 ]
call sub_1003fe15
mov eax esi
pop esi
pop ebp
retn 0x8
sub_1004037c
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
push 0x0
mov [ esi + 0x18 ] 0x7
call sub_1003f2fa
push 0xffffffff
push 0x0
push [ ebp + 0x8 ]
mov ecx esi
call sub_1003fce9
mov eax esi
pop esi
pop ebp
retn 0x4
sub_100403a7
push 0x94
mov eax sub_1004b3f8
call sub_10029e33
xor edi edi
mov [ ebp - 0x10 ] edi
mov esi [ ebp + 0x8 ]
cmp esi edi
je r-xdata
push 0x2
pop eax
call sub_10029f0b
retn
cmp [ esi ] edi
jne r-xdata
push 0x10
call sub_10025dd6
pop ecx
mov [ ebp + 0x8 ] eax
mov [ ebp - 0x4 ] edi
cmp eax edi
je r-xdata
xor eax eax
mov ecx [ ebp + 0xc ]
lea eax [ ebp - 0x2c ]
push eax
call sub_100073c0
push eax
lea ecx [ ebp - 0xa0 ]
mov [ ebp - 0x4 ] 0x1
mov [ ebp - 0x10 ] 0x1
call sub_1000736b
mov ecx [ ebp + 0x8 ]
push edi
push eax
mov [ ebp - 0x10 ] 0x3
call sub_1003e024
jmp r-xdata
test [ ebp - 0x10 ] 0x1
je r-xdata
and [ ebp - 0x10 ] 0xfffffffd
lea ecx [ ebp - 0xa0 ]
call sub_100073dd
test [ ebp - 0x10 ] 0x2
mov [ ebp - 0x4 ] 0x2
mov [ esi ] eax
je r-xdata
push edi
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_100022b5
sub_10040448
push 0x94
mov eax sub_1004b3f8
call sub_10029e33
xor edi edi
mov [ ebp - 0x10 ] edi
mov esi [ ebp + 0x8 ]
cmp esi edi
je r-xdata
push 0x2
pop eax
call sub_10029f0b
retn
cmp [ esi ] edi
jne r-xdata
push 0x20
call sub_10025dd6
pop ecx
mov [ ebp + 0x8 ] eax
mov [ ebp - 0x4 ] edi
cmp eax edi
je r-xdata
xor eax eax
mov ecx [ ebp + 0xc ]
lea eax [ ebp - 0x2c ]
push eax
call sub_100073c0
push eax
lea ecx [ ebp - 0xa0 ]
mov [ ebp - 0x4 ] 0x1
mov [ ebp - 0x10 ] 0x1
call sub_1000736b
mov ecx [ ebp + 0x8 ]
push edi
push eax
mov [ ebp - 0x10 ] 0x3
call sub_1003e2d8
jmp r-xdata
test [ ebp - 0x10 ] 0x1
je r-xdata
and [ ebp - 0x10 ] 0xfffffffd
lea ecx [ ebp - 0xa0 ]
call sub_100073dd
test [ ebp - 0x10 ] 0x2
mov [ ebp - 0x4 ] 0x2
mov [ esi ] eax
je r-xdata
push edi
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_100022b5
sub_100404e9
push 0x94
mov eax sub_1004b3f8
call sub_10029e33
xor edi edi
mov [ ebp - 0x10 ] edi
mov esi [ ebp + 0x8 ]
cmp esi edi
je r-xdata
push 0x5
pop eax
call sub_10029f0b
retn
cmp [ esi ] edi
jne r-xdata
push 0x14
call sub_10025dd6
pop ecx
mov [ ebp + 0x8 ] eax
mov [ ebp - 0x4 ] edi
cmp eax edi
je r-xdata
xor eax eax
mov ecx [ ebp + 0xc ]
lea eax [ ebp - 0x2c ]
push eax
call sub_100073c0
push eax
lea ecx [ ebp - 0xa0 ]
mov [ ebp - 0x4 ] 0x1
mov [ ebp - 0x10 ] 0x1
call sub_1000736b
mov ecx [ ebp + 0x8 ]
push edi
push eax
mov [ ebp - 0x10 ] 0x3
call sub_1003e5c8
jmp r-xdata
test [ ebp - 0x10 ] 0x1
je r-xdata
and [ ebp - 0x10 ] 0xfffffffd
lea ecx [ ebp - 0xa0 ]
call sub_100073dd
push 0x2
pop ecx
mov [ ebp - 0x4 ] ecx
mov [ esi ] eax
test [ ebp - 0x10 ] cl
je r-xdata
push edi
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_100022b5
sub_10040588
push 0x94
mov eax sub_1004b3f8
call sub_10029e33
xor edi edi
xor ebx ebx
mov [ ebp - 0x10 ] edi
mov esi [ ebp + 0x8 ]
inc ebx
cmp esi edi
je r-xdata
mov eax ebx
call sub_10029f0b
retn
cmp [ esi ] edi
jne r-xdata
push 0x10
call sub_10025dd6
pop ecx
mov [ ebp + 0x8 ] eax
mov [ ebp - 0x4 ] edi
cmp eax edi
je r-xdata
xor eax eax
mov ecx [ ebp + 0xc ]
lea eax [ ebp - 0x2c ]
push eax
call sub_100073c0
push eax
lea ecx [ ebp - 0xa0 ]
mov [ ebp - 0x4 ] bl
mov [ ebp - 0x10 ] ebx
call sub_1000736b
mov ecx [ ebp + 0x8 ]
push edi
push eax
mov [ ebp - 0x10 ] 0x3
call sub_1003e62c
jmp r-xdata
test [ ebp - 0x10 ] bl
je r-xdata
and [ ebp - 0x10 ] 0xfffffffd
lea ecx [ ebp - 0xa0 ]
call sub_100073dd
push 0x2
pop ecx
mov [ ebp - 0x4 ] ecx
mov [ esi ] eax
test [ ebp - 0x10 ] cl
je r-xdata
push edi
push ebx
lea ecx [ ebp - 0x2c ]
call sub_100022b5
sub_10040622
push 0x24
mov eax sub_1004b3ba
call sub_10029e33
mov esi [ ebp + 0x8 ]
mov edi [ ebp + 0xc ]
mov ebx [ ebp + 0x10 ]
and [ ebp - 0x1c ] 0x0
mov [ ebp - 0x10 ] ecx
mov ecx esi
mov [ ebp - 0x20 ] esi
mov [ ebp - 0x14 ] edi
mov [ ebp - 0x18 ] ebx
call sub_10001ac0
and [ ebp - 0x4 ] 0x0
mov eax ebx
sub eax edi
sar eax 0x1
mov [ ebp - 0x1c ] 0x1
je r-xdata
push 0x0
push eax
mov ecx esi
call sub_10002d37
mov eax esi
call sub_10029f0b
retn 0xc
mov ecx [ ebp - 0x10 ]
add ecx 0x8
mov [ ebp - 0x10 ] ecx
test eax eax
ja r-xdata
push 0x0
push eax
mov ecx esi
call sub_10002d37
lea eax [ ebp - 0x28 ]
push eax
mov ecx esi
call sub_10007aec
mov ecx eax
call sub_100068fb
mov edi [ esi + 0x14 ]
mov ebx eax
lea eax [ ebp - 0x30 ]
push eax
mov ecx esi
call sub_10007aec
mov ecx eax
call sub_100068fb
push [ ebp - 0x10 ]
lea ecx [ ebx + edi * 2 ]
push [ ebp - 0x18 ]
push [ ebp - 0x14 ]
push ecx
push eax
call sub_1004a913
add esp 0x14
cmp eax [ esi + 0x14 ]
jbe r-xdata
sub_100406d0
push 0x94
mov eax sub_1004b3f8
call sub_10029e33
xor ebx ebx
mov [ ebp - 0x10 ] ebx
mov edi [ ebp + 0x8 ]
cmp edi ebx
je r-xdata
push 0x6
pop eax
call sub_10029f0b
retn
cmp [ edi ] ebx
jne r-xdata
push 0x8
call sub_10025dd6
mov esi eax
pop ecx
mov [ ebp + 0x8 ] esi
mov [ ebp - 0x4 ] ebx
inc ebx
test esi esi
je r-xdata
xor esi esi
mov ecx [ ebp + 0xc ]
lea eax [ ebp - 0x2c ]
push eax
call sub_100073c0
push eax
lea ecx [ ebp - 0xa0 ]
mov [ ebp - 0x4 ] bl
mov [ ebp - 0x10 ] ebx
call sub_1000736b
and [ esi + 0x4 ] 0x0
mov [ ebp - 0x10 ] 0x3
mov [ esi ] r--data
jmp r-xdata
test [ ebp - 0x10 ] bl
je r-xdata
and [ ebp - 0x10 ] 0xfffffffd
lea ecx [ ebp - 0xa0 ]
call sub_100073dd
push 0x2
pop eax
mov [ ebp - 0x4 ] eax
mov [ edi ] esi
test [ ebp - 0x10 ] al
je r-xdata
push 0x0
push ebx
lea ecx [ ebp - 0x2c ]
call sub_100022b5
sub_10040788
push 0x94
mov eax sub_1004b3f8
call sub_10029e33
xor edi edi
mov [ ebp - 0x10 ] edi
mov esi [ ebp + 0x8 ]
cmp esi edi
je r-xdata
push 0x3
pop eax
call sub_10029f0b
retn
cmp [ esi ] edi
jne r-xdata
push 0x10
call sub_10025dd6
pop ecx
mov [ ebp + 0x8 ] eax
mov [ ebp - 0x4 ] edi
cmp eax edi
je r-xdata
xor eax eax
mov ecx [ ebp + 0xc ]
lea eax [ ebp - 0x2c ]
push eax
call sub_100073c0
push eax
lea ecx [ ebp - 0xa0 ]
mov [ ebp - 0x4 ] 0x1
mov [ ebp - 0x10 ] 0x1
call sub_1000736b
mov ecx [ ebp + 0x8 ]
push edi
push eax
mov [ ebp - 0x10 ] 0x3
call sub_1003e692
jmp r-xdata
test [ ebp - 0x10 ] 0x1
je r-xdata
and [ ebp - 0x10 ] 0xfffffffd
lea ecx [ ebp - 0xa0 ]
call sub_100073dd
push 0x2
pop ecx
mov [ ebp - 0x4 ] ecx
mov [ esi ] eax
test [ ebp - 0x10 ] cl
je r-xdata
push edi
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_100022b5
sub_10040827
push 0x94
mov eax sub_1004b3f8
call sub_10029e33
xor edi edi
mov [ ebp - 0x10 ] edi
mov esi [ ebp + 0x8 ]
cmp esi edi
je r-xdata
push 0x3
pop eax
call sub_10029f0b
retn
cmp [ esi ] edi
jne r-xdata
push 0x10
call sub_10025dd6
pop ecx
mov [ ebp + 0x8 ] eax
mov [ ebp - 0x4 ] edi
cmp eax edi
je r-xdata
xor eax eax
mov ecx [ ebp + 0xc ]
lea eax [ ebp - 0x2c ]
push eax
call sub_100073c0
push eax
lea ecx [ ebp - 0xa0 ]
mov [ ebp - 0x4 ] 0x1
mov [ ebp - 0x10 ] 0x1
call sub_1000736b
mov ecx [ ebp + 0x8 ]
push edi
push eax
mov [ ebp - 0x10 ] 0x3
call sub_1003e6b5
jmp r-xdata
test [ ebp - 0x10 ] 0x1
je r-xdata
and [ ebp - 0x10 ] 0xfffffffd
lea ecx [ ebp - 0xa0 ]
call sub_100073dd
push 0x2
pop ecx
mov [ ebp - 0x4 ] ecx
mov [ esi ] eax
test [ ebp - 0x10 ] cl
je r-xdata
push edi
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_100022b5
sub_100408c6
push 0x94
mov eax sub_1004ae6c
call sub_10029e33
xor ebx ebx
mov [ ebp - 0x10 ] ebx
mov edi [ ebp + 0x8 ]
push 0x3
pop esi
cmp edi ebx
je r-xdata
mov eax esi
call sub_10029f0b
retn
cmp [ edi ] ebx
jne r-xdata
push 0x34
call sub_10025dd6
pop ecx
mov [ ebp + 0x8 ] eax
mov [ ebp - 0x4 ] ebx
inc ebx
test eax eax
je r-xdata
xor eax eax
mov ecx [ ebp + 0xc ]
lea eax [ ebp - 0x2c ]
push eax
call sub_100073c0
push eax
lea ecx [ ebp - 0xa0 ]
mov [ ebp - 0x4 ] bl
mov [ ebp - 0x10 ] ebx
call sub_1000736b
mov ecx [ ebp + 0x8 ]
push ebx
push 0x0
push eax
mov [ ebp - 0x4 ] 0x2
mov [ ebp - 0x10 ] esi
call sub_1003f94b
jmp r-xdata
test [ ebp - 0x10 ] bl
je r-xdata
and [ ebp - 0x10 ] 0xfffffffd
lea ecx [ ebp - 0xa0 ]
call sub_100073dd
test [ ebp - 0x10 ] 0x2
mov [ edi ] eax
mov [ ebp - 0x4 ] esi
je r-xdata
push 0x0
push ebx
lea ecx [ ebp - 0x2c ]
call sub_100022b5
sub_100409b9
push 0x94
mov eax sub_1004ae6c
call sub_10029e33
xor ebx ebx
mov [ ebp - 0x10 ] ebx
mov edi [ ebp + 0x8 ]
push 0x3
pop esi
cmp edi ebx
je r-xdata
mov eax esi
call sub_10029f0b
retn
cmp [ edi ] ebx
jne r-xdata
push 0x34
call sub_10025dd6
pop ecx
mov [ ebp + 0x8 ] eax
mov [ ebp - 0x4 ] ebx
inc ebx
test eax eax
je r-xdata
xor eax eax
mov ecx [ ebp + 0xc ]
lea eax [ ebp - 0x2c ]
push eax
call sub_100073c0
push eax
lea ecx [ ebp - 0xa0 ]
mov [ ebp - 0x4 ] bl
mov [ ebp - 0x10 ] ebx
call sub_1000736b
mov ecx [ ebp + 0x8 ]
push ebx
push 0x0
push eax
mov [ ebp - 0x4 ] 0x2
mov [ ebp - 0x10 ] esi
call sub_1003f997
jmp r-xdata
test [ ebp - 0x10 ] bl
je r-xdata
and [ ebp - 0x10 ] 0xfffffffd
lea ecx [ ebp - 0xa0 ]
call sub_100073dd
test [ ebp - 0x10 ] 0x2
mov [ edi ] eax
mov [ ebp - 0x4 ] esi
je r-xdata
push 0x0
push ebx
lea ecx [ ebp - 0x2c ]
call sub_100022b5
sub_10040a58
push 0x94
mov eax sub_1004b3f8
call sub_10029e33
xor edi edi
mov [ ebp - 0x10 ] edi
mov esi [ ebp + 0x8 ]
cmp esi edi
je r-xdata
push 0x4
pop eax
call sub_10029f0b
retn
cmp [ esi ] edi
jne r-xdata
push 0x10
call sub_10025dd6
pop ecx
mov [ ebp + 0x8 ] eax
mov [ ebp - 0x4 ] edi
cmp eax edi
je r-xdata
xor eax eax
mov ecx [ ebp + 0xc ]
lea eax [ ebp - 0x2c ]
push eax
call sub_100073c0
push eax
lea ecx [ ebp - 0xa0 ]
mov [ ebp - 0x4 ] 0x1
mov [ ebp - 0x10 ] 0x1
call sub_1000736b
mov ecx [ ebp + 0x8 ]
push edi
push eax
mov [ ebp - 0x10 ] 0x3
call sub_1003e701
jmp r-xdata
test [ ebp - 0x10 ] 0x1
je r-xdata
and [ ebp - 0x10 ] 0xfffffffd
lea ecx [ ebp - 0xa0 ]
call sub_100073dd
push 0x2
pop ecx
mov [ ebp - 0x4 ] ecx
mov [ esi ] eax
test [ ebp - 0x10 ] cl
je r-xdata
push edi
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_100022b5
sub_10040af7
push 0x94
mov eax sub_1004b3f8
call sub_10029e33
xor edi edi
mov [ ebp - 0x10 ] edi
mov esi [ ebp + 0x8 ]
cmp esi edi
je r-xdata
push 0x4
pop eax
call sub_10029f0b
retn
cmp [ esi ] edi
jne r-xdata
push 0x10
call sub_10025dd6
pop ecx
mov [ ebp + 0x8 ] eax
mov [ ebp - 0x4 ] edi
cmp eax edi
je r-xdata
xor eax eax
mov ecx [ ebp + 0xc ]
lea eax [ ebp - 0x2c ]
push eax
call sub_100073c0
push eax
lea ecx [ ebp - 0xa0 ]
mov [ ebp - 0x4 ] 0x1
mov [ ebp - 0x10 ] 0x1
call sub_1000736b
mov ecx [ ebp + 0x8 ]
push edi
push eax
mov [ ebp - 0x10 ] 0x3
call sub_1003e805
jmp r-xdata
test [ ebp - 0x10 ] 0x1
je r-xdata
and [ ebp - 0x10 ] 0xfffffffd
lea ecx [ ebp - 0xa0 ]
call sub_100073dd
push 0x2
pop ecx
mov [ ebp - 0x4 ] ecx
mov [ esi ] eax
test [ ebp - 0x10 ] cl
je r-xdata
push edi
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_100022b5
sub_10040b96
push 0x98
mov eax sub_1004bb28
call sub_10029e33
mov eax [ ebp + 0x8 ]
xor edi edi
mov [ ebp - 0x10 ] edi
cmp eax edi
je r-xdata
push 0x4
pop eax
call sub_10029f0b
retn
cmp [ eax ] edi
jne r-xdata
push 0x18
call sub_10025dd6
pop ecx
mov [ ebp - 0x14 ] eax
xor ebx ebx
inc ebx
push 0x3
mov [ ebp - 0x4 ] edi
pop esi
cmp eax edi
je r-xdata
xor eax eax
mov ecx [ ebp + 0xc ]
lea eax [ ebp - 0x30 ]
push eax
call sub_100073c0
push eax
lea ecx [ ebp - 0xa4 ]
mov [ ebp - 0x4 ] bl
mov [ ebp - 0x10 ] ebx
call sub_1000736b
mov ecx [ ebp - 0x14 ]
push ebx
push edi
push eax
mov [ ebp - 0x4 ] 0x2
mov [ ebp - 0x10 ] esi
call sub_1003f5a2
jmp r-xdata
test [ ebp - 0x10 ] bl
je r-xdata
and [ ebp - 0x10 ] 0xfffffffd
lea ecx [ ebp - 0xa4 ]
call sub_100073dd
test [ ebp - 0x10 ] 0x2
mov ecx [ ebp + 0x8 ]
mov [ ecx ] eax
mov [ ebp - 0x4 ] esi
je r-xdata
push edi
push ebx
lea ecx [ ebp - 0x30 ]
call sub_100022b5
sub_10040c55
push 0x94
mov eax sub_1004b3f8
call sub_10029e33
xor edi edi
xor ebx ebx
mov [ ebp - 0x10 ] edi
mov esi [ ebp + 0x8 ]
inc ebx
cmp esi edi
je r-xdata
mov eax ebx
call sub_10029f0b
retn
cmp [ esi ] edi
jne r-xdata
push 0x10
call sub_10025dd6
pop ecx
mov [ ebp + 0x8 ] eax
mov [ ebp - 0x4 ] edi
cmp eax edi
je r-xdata
xor eax eax
mov ecx [ ebp + 0xc ]
lea eax [ ebp - 0x2c ]
push eax
call sub_100073c0
push eax
lea ecx [ ebp - 0xa0 ]
mov [ ebp - 0x4 ] bl
mov [ ebp - 0x10 ] ebx
call sub_1000736b
mov ecx [ ebp + 0x8 ]
push edi
push eax
mov [ ebp - 0x10 ] 0x3
call sub_1003e93f
jmp r-xdata
test [ ebp - 0x10 ] bl
je r-xdata
and [ ebp - 0x10 ] 0xfffffffd
lea ecx [ ebp - 0xa0 ]
call sub_100073dd
push 0x2
pop ecx
mov [ ebp - 0x4 ] ecx
mov [ esi ] eax
test [ ebp - 0x10 ] cl
je r-xdata
push edi
push ebx
lea ecx [ ebp - 0x2c ]
call sub_100022b5
sub_10040cef
push 0x24
mov eax sub_1004b42f
call sub_10029e33
mov [ ebp - 0x10 ] ecx
mov esi [ ebp + 0x8 ]
mov edi [ ebp + 0xc ]
mov ebx [ ebp + 0x10 ]
and [ ebp - 0x1c ] 0x0
mov ecx esi
mov [ ebp - 0x20 ] esi
mov [ ebp - 0x14 ] edi
mov [ ebp - 0x18 ] ebx
call sub_1003fa7b
and [ ebp - 0x4 ] 0x0
mov eax ebx
sub eax edi
sar eax 0x1
mov [ ebp - 0x1c ] 0x1
je r-xdata
push 0x0
push eax
mov ecx esi
call sub_1003fef6
mov eax esi
call sub_10029f0b
retn 0xc
mov ecx [ ebp - 0x10 ]
add ecx 0x8
mov [ ebp - 0x10 ] ecx
test eax eax
ja r-xdata
push 0x0
push eax
mov ecx esi
call sub_1003fef6
lea eax [ ebp - 0x28 ]
push eax
mov ecx esi
call sub_1003f64d
mov ecx eax
call sub_1003e981
mov edi [ esi + 0x14 ]
mov ebx eax
lea eax [ ebp - 0x30 ]
push eax
mov ecx esi
call sub_1003f64d
mov ecx eax
call sub_1003e981
push [ ebp - 0x10 ]
lea ecx [ ebx + edi * 2 ]
push [ ebp - 0x18 ]
push [ ebp - 0x14 ]
push ecx
push eax
call sub_1003ea52
add esp 0x14
cmp eax [ esi + 0x14 ]
jbe r-xdata
sub_10040d9d
push 0x94
mov eax sub_1004b3f8
call sub_10029e33
xor ebx ebx
mov [ ebp - 0x10 ] ebx
mov edi [ ebp + 0x8 ]
cmp edi ebx
je r-xdata
push 0x6
pop eax
call sub_10029f0b
retn
cmp [ edi ] ebx
jne r-xdata
push 0x8
call sub_10025dd6
mov esi eax
pop ecx
mov [ ebp + 0x8 ] esi
mov [ ebp - 0x4 ] ebx
inc ebx
test esi esi
je r-xdata
xor esi esi
mov ecx [ ebp + 0xc ]
lea eax [ ebp - 0x2c ]
push eax
call sub_100073c0
push eax
lea ecx [ ebp - 0xa0 ]
mov [ ebp - 0x4 ] bl
mov [ ebp - 0x10 ] ebx
call sub_1000736b
and [ esi + 0x4 ] 0x0
mov [ ebp - 0x10 ] 0x3
mov [ esi ] r--data
jmp r-xdata
test [ ebp - 0x10 ] bl
je r-xdata
and [ ebp - 0x10 ] 0xfffffffd
lea ecx [ ebp - 0xa0 ]
call sub_100073dd
push 0x2
pop eax
mov [ ebp - 0x4 ] eax
mov [ edi ] esi
test [ ebp - 0x10 ] al
je r-xdata
push 0x0
push ebx
lea ecx [ ebp - 0x2c ]
call sub_100022b5
sub_10040e55
push 0x94
mov eax sub_1004b3f8
call sub_10029e33
xor edi edi
mov [ ebp - 0x10 ] edi
mov esi [ ebp + 0x8 ]
cmp esi edi
je r-xdata
push 0x3
pop eax
call sub_10029f0b
retn
cmp [ esi ] edi
jne r-xdata
push 0x10
call sub_10025dd6
pop ecx
mov [ ebp + 0x8 ] eax
mov [ ebp - 0x4 ] edi
cmp eax edi
je r-xdata
xor eax eax
mov ecx [ ebp + 0xc ]
lea eax [ ebp - 0x2c ]
push eax
call sub_100073c0
push eax
lea ecx [ ebp - 0xa0 ]
mov [ ebp - 0x4 ] 0x1
mov [ ebp - 0x10 ] 0x1
call sub_1000736b
mov ecx [ ebp + 0x8 ]
push edi
push eax
mov [ ebp - 0x10 ] 0x3
call sub_1003eaad
jmp r-xdata
test [ ebp - 0x10 ] 0x1
je r-xdata
and [ ebp - 0x10 ] 0xfffffffd
lea ecx [ ebp - 0xa0 ]
call sub_100073dd
push 0x2
pop ecx
mov [ ebp - 0x4 ] ecx
mov [ esi ] eax
test [ ebp - 0x10 ] cl
je r-xdata
push edi
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_100022b5
sub_10040ef4
push 0x94
mov eax sub_1004b3f8
call sub_10029e33
xor edi edi
mov [ ebp - 0x10 ] edi
mov esi [ ebp + 0x8 ]
cmp esi edi
je r-xdata
push 0x3
pop eax
call sub_10029f0b
retn
cmp [ esi ] edi
jne r-xdata
push 0x10
call sub_10025dd6
pop ecx
mov [ ebp + 0x8 ] eax
mov [ ebp - 0x4 ] edi
cmp eax edi
je r-xdata
xor eax eax
mov ecx [ ebp + 0xc ]
lea eax [ ebp - 0x2c ]
push eax
call sub_100073c0
push eax
lea ecx [ ebp - 0xa0 ]
mov [ ebp - 0x4 ] 0x1
mov [ ebp - 0x10 ] 0x1
call sub_1000736b
mov ecx [ ebp + 0x8 ]
push edi
push eax
mov [ ebp - 0x10 ] 0x3
call sub_1003eb3e
jmp r-xdata
test [ ebp - 0x10 ] 0x1
je r-xdata
and [ ebp - 0x10 ] 0xfffffffd
lea ecx [ ebp - 0xa0 ]
call sub_100073dd
push 0x2
pop ecx
mov [ ebp - 0x4 ] ecx
mov [ esi ] eax
test [ ebp - 0x10 ] cl
je r-xdata
push edi
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_100022b5
sub_10040f93
push 0x94
mov eax sub_1004ae6c
call sub_10029e33
xor ebx ebx
mov [ ebp - 0x10 ] ebx
mov edi [ ebp + 0x8 ]
push 0x3
pop esi
cmp edi ebx
je r-xdata
mov eax esi
call sub_10029f0b
retn
cmp [ edi ] ebx
jne r-xdata
push 0x34
call sub_10025dd6
pop ecx
mov [ ebp + 0x8 ] eax
mov [ ebp - 0x4 ] ebx
inc ebx
test eax eax
je r-xdata
xor eax eax
mov ecx [ ebp + 0xc ]
lea eax [ ebp - 0x2c ]
push eax
call sub_100073c0
push eax
lea ecx [ ebp - 0xa0 ]
mov [ ebp - 0x4 ] bl
mov [ ebp - 0x10 ] ebx
call sub_1000736b
mov ecx [ ebp + 0x8 ]
push ebx
push 0x0
push eax
mov [ ebp - 0x4 ] 0x2
mov [ ebp - 0x10 ] esi
call sub_1003f9e3
jmp r-xdata
test [ ebp - 0x10 ] bl
je r-xdata
and [ ebp - 0x10 ] 0xfffffffd
lea ecx [ ebp - 0xa0 ]
call sub_100073dd
test [ ebp - 0x10 ] 0x2
mov [ edi ] eax
mov [ ebp - 0x4 ] esi
je r-xdata
push 0x0
push ebx
lea ecx [ ebp - 0x2c ]
call sub_100022b5
sub_10041086
push 0x94
mov eax sub_1004ae6c
call sub_10029e33
xor ebx ebx
mov [ ebp - 0x10 ] ebx
mov edi [ ebp + 0x8 ]
push 0x3
pop esi
cmp edi ebx
je r-xdata
mov eax esi
call sub_10029f0b
retn
cmp [ edi ] ebx
jne r-xdata
push 0x34
call sub_10025dd6
pop ecx
mov [ ebp + 0x8 ] eax
mov [ ebp - 0x4 ] ebx
inc ebx
test eax eax
je r-xdata
xor eax eax
mov ecx [ ebp + 0xc ]
lea eax [ ebp - 0x2c ]
push eax
call sub_100073c0
push eax
lea ecx [ ebp - 0xa0 ]
mov [ ebp - 0x4 ] bl
mov [ ebp - 0x10 ] ebx
call sub_1000736b
mov ecx [ ebp + 0x8 ]
push ebx
push 0x0
push eax
mov [ ebp - 0x4 ] 0x2
mov [ ebp - 0x10 ] esi
call sub_1003fa2f
jmp r-xdata
test [ ebp - 0x10 ] bl
je r-xdata
and [ ebp - 0x10 ] 0xfffffffd
lea ecx [ ebp - 0xa0 ]
call sub_100073dd
test [ ebp - 0x10 ] 0x2
mov [ edi ] eax
mov [ ebp - 0x4 ] esi
je r-xdata
push 0x0
push ebx
lea ecx [ ebp - 0x2c ]
call sub_100022b5
sub_10041125
push 0x94
mov eax sub_1004b3f8
call sub_10029e33
xor edi edi
mov [ ebp - 0x10 ] edi
mov esi [ ebp + 0x8 ]
cmp esi edi
je r-xdata
push 0x5
pop eax
call sub_10029f0b
retn
cmp [ esi ] edi
jne r-xdata
push 0x14
call sub_10025dd6
pop ecx
mov [ ebp + 0x8 ] eax
mov [ ebp - 0x4 ] edi
cmp eax edi
je r-xdata
xor eax eax
mov ecx [ ebp + 0xc ]
lea eax [ ebp - 0x2c ]
push eax
call sub_100073c0
push eax
lea ecx [ ebp - 0xa0 ]
mov [ ebp - 0x4 ] 0x1
mov [ ebp - 0x10 ] 0x1
call sub_1000736b
mov ecx [ ebp + 0x8 ]
push edi
push eax
mov [ ebp - 0x10 ] 0x3
call sub_1003ec31
jmp r-xdata
test [ ebp - 0x10 ] 0x1
je r-xdata
and [ ebp - 0x10 ] 0xfffffffd
lea ecx [ ebp - 0xa0 ]
call sub_100073dd
push 0x2
pop ecx
mov [ ebp - 0x4 ] ecx
mov [ esi ] eax
test [ ebp - 0x10 ] cl
je r-xdata
push edi
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_100022b5
sub_100411c4
push 0x14
mov eax sub_1004b452
call sub_10029e33
push 0x0
lea ecx [ ebp - 0x14 ]
call sub_10022437
mov esi [ rw-data ]
and [ ebp - 0x4 ] 0x0
mov ecx rw-data
mov [ ebp - 0x10 ] esi
call sub_10007004
mov ecx [ ebp + 0x8 ]
push eax
call sub_10007039
mov edi eax
test edi edi
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
call sub_1002245f
mov eax edi
call sub_10029f0b
retn
test esi esi
je r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
push eax
call sub_10040448
pop ecx
pop ecx
cmp eax 0xffffffff
jne r-xdata
mov edi esi
jmp r-xdata
mov edi [ ebp - 0x10 ]
mov ecx edi
mov [ rw-data ] edi
call sub_1000778d
push edi
call sub_10022634
pop ecx
push r--data
lea ecx [ ebp - 0x20 ]
call sub_10025f3c
push r--data
lea eax [ ebp - 0x20 ]
push eax
call sub_10029a01
sub_10041261
push 0x14
mov eax sub_1004b452
call sub_10029e33
push 0x0
lea ecx [ ebp - 0x14 ]
call sub_10022437
mov esi [ rw-data ]
and [ ebp - 0x4 ] 0x0
mov ecx rw-data
mov [ ebp - 0x10 ] esi
call sub_10007004
mov ecx [ ebp + 0x8 ]
push eax
call sub_10007039
mov edi eax
test edi edi
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
call sub_1002245f
mov eax edi
call sub_10029f0b
retn
test esi esi
je r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
push eax
call sub_10040588
pop ecx
pop ecx
cmp eax 0xffffffff
jne r-xdata
mov edi esi
jmp r-xdata
mov edi [ ebp - 0x10 ]
mov ecx edi
mov [ rw-data ] edi
call sub_1000778d
push edi
call sub_10022634
pop ecx
push r--data
lea ecx [ ebp - 0x20 ]
call sub_10025f3c
push r--data
lea eax [ ebp - 0x20 ]
push eax
call sub_10029a01
sub_100412fe
push 0x14
mov eax sub_1004b452
call sub_10029e33
push 0x0
lea ecx [ ebp - 0x14 ]
call sub_10022437
mov esi [ rw-data ]
and [ ebp - 0x4 ] 0x0
mov ecx rw-data
mov [ ebp - 0x10 ] esi
call sub_10007004
mov ecx [ ebp + 0x8 ]
push eax
call sub_10007039
mov edi eax
test edi edi
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
call sub_1002245f
mov eax edi
call sub_10029f0b
retn
test esi esi
je r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
push eax
call sub_100406d0
pop ecx
pop ecx
cmp eax 0xffffffff
jne r-xdata
mov edi esi
jmp r-xdata
mov edi [ ebp - 0x10 ]
mov ecx edi
mov [ rw-data ] edi
call sub_1000778d
push edi
call sub_10022634
pop ecx
push r--data
lea ecx [ ebp - 0x20 ]
call sub_10025f3c
push r--data
lea eax [ ebp - 0x20 ]
push eax
call sub_10029a01
sub_1004139b
push 0x14
mov eax sub_1004b452
call sub_10029e33
push 0x0
lea ecx [ ebp - 0x14 ]
call sub_10022437
mov esi [ rw-data ]
and [ ebp - 0x4 ] 0x0
mov ecx rw-data
mov [ ebp - 0x10 ] esi
call sub_10007004
mov ecx [ ebp + 0x8 ]
push eax
call sub_10007039
mov edi eax
test edi edi
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
call sub_1002245f
mov eax edi
call sub_10029f0b
retn
test esi esi
je r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
push eax
call sub_10040788
pop ecx
pop ecx
cmp eax 0xffffffff
jne r-xdata
mov edi esi
jmp r-xdata
mov edi [ ebp - 0x10 ]
mov ecx edi
mov [ rw-data ] edi
call sub_1000778d
push edi
call sub_10022634
pop ecx
push r--data
lea ecx [ ebp - 0x20 ]
call sub_10025f3c
push r--data
lea eax [ ebp - 0x20 ]
push eax
call sub_10029a01
sub_10041438
push 0x14
mov eax sub_1004b452
call sub_10029e33
push 0x0
lea ecx [ ebp - 0x14 ]
call sub_10022437
mov esi [ rw-data ]
and [ ebp - 0x4 ] 0x0
mov ecx rw-data
mov [ ebp - 0x10 ] esi
call sub_10007004
mov ecx [ ebp + 0x8 ]
push eax
call sub_10007039
mov edi eax
test edi edi
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
call sub_1002245f
mov eax edi
call sub_10029f0b
retn
test esi esi
je r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
push eax
call sub_10040827
pop ecx
pop ecx
cmp eax 0xffffffff
jne r-xdata
mov edi esi
jmp r-xdata
mov edi [ ebp - 0x10 ]
mov ecx edi
mov [ rw-data ] edi
call sub_1000778d
push edi
call sub_10022634
pop ecx
push r--data
lea ecx [ ebp - 0x20 ]
call sub_10025f3c
push r--data
lea eax [ ebp - 0x20 ]
push eax
call sub_10029a01
sub_100414d5
push 0x14
mov eax sub_1004b452
call sub_10029e33
push 0x0
lea ecx [ ebp - 0x14 ]
call sub_10022437
mov esi [ rw-data ]
and [ ebp - 0x4 ] 0x0
mov ecx rw-data
mov [ ebp - 0x10 ] esi
call sub_10007004
mov ecx [ ebp + 0x8 ]
push eax
call sub_10007039
mov edi eax
test edi edi
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
call sub_1002245f
mov eax edi
call sub_10029f0b
retn
test esi esi
je r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
push eax
call sub_100408c6
pop ecx
pop ecx
cmp eax 0xffffffff
jne r-xdata
mov edi esi
jmp r-xdata
mov edi [ ebp - 0x10 ]
mov ecx edi
mov [ rw-data ] edi
call sub_1000778d
push edi
call sub_10022634
pop ecx
push r--data
lea ecx [ ebp - 0x20 ]
call sub_10025f3c
push r--data
lea eax [ ebp - 0x20 ]
push eax
call sub_10029a01
sub_10041572
push 0x14
mov eax sub_1004b452
call sub_10029e33
push 0x0
lea ecx [ ebp - 0x14 ]
call sub_10022437
mov esi [ rw-data ]
and [ ebp - 0x4 ] 0x0
mov ecx rw-data
mov [ ebp - 0x10 ] esi
call sub_10007004
mov ecx [ ebp + 0x8 ]
push eax
call sub_10007039
mov edi eax
test edi edi
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
call sub_1002245f
mov eax edi
call sub_10029f0b
retn
test esi esi
je r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
push eax
call sub_100409b9
pop ecx
pop ecx
cmp eax 0xffffffff
jne r-xdata
mov edi esi
jmp r-xdata
mov edi [ ebp - 0x10 ]
mov ecx edi
mov [ rw-data ] edi
call sub_1000778d
push edi
call sub_10022634
pop ecx
push r--data
lea ecx [ ebp - 0x20 ]
call sub_10025f3c
push r--data
lea eax [ ebp - 0x20 ]
push eax
call sub_10029a01
sub_1004160f
push 0x14
mov eax sub_1004b452
call sub_10029e33
push 0x0
lea ecx [ ebp - 0x14 ]
call sub_10022437
mov esi [ rw-data ]
and [ ebp - 0x4 ] 0x0
mov ecx rw-data
mov [ ebp - 0x10 ] esi
call sub_10007004
mov ecx [ ebp + 0x8 ]
push eax
call sub_10007039
mov edi eax
test edi edi
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
call sub_1002245f
mov eax edi
call sub_10029f0b
retn
test esi esi
je r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
push eax
call sub_100404e9
pop ecx
pop ecx
cmp eax 0xffffffff
jne r-xdata
mov edi esi
jmp r-xdata
mov edi [ ebp - 0x10 ]
mov ecx edi
mov [ rw-data ] edi
call sub_1000778d
push edi
call sub_10022634
pop ecx
push r--data
lea ecx [ ebp - 0x20 ]
call sub_10025f3c
push r--data
lea eax [ ebp - 0x20 ]
push eax
call sub_10029a01
sub_100416ac
push 0x14
mov eax sub_1004b452
call sub_10029e33
push 0x0
lea ecx [ ebp - 0x14 ]
call sub_10022437
mov esi [ rw-data ]
and [ ebp - 0x4 ] 0x0
mov ecx rw-data
mov [ ebp - 0x10 ] esi
call sub_10007004
mov ecx [ ebp + 0x8 ]
push eax
call sub_10007039
mov edi eax
test edi edi
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
call sub_1002245f
mov eax edi
call sub_10029f0b
retn
test esi esi
je r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
push eax
call sub_10040a58
pop ecx
pop ecx
cmp eax 0xffffffff
jne r-xdata
mov edi esi
jmp r-xdata
mov edi [ ebp - 0x10 ]
mov ecx edi
mov [ rw-data ] edi
call sub_1000778d
push edi
call sub_10022634
pop ecx
push r--data
lea ecx [ ebp - 0x20 ]
call sub_10025f3c
push r--data
lea eax [ ebp - 0x20 ]
push eax
call sub_10029a01
sub_10041749
push 0x14
mov eax sub_1004b452
call sub_10029e33
push 0x0
lea ecx [ ebp - 0x14 ]
call sub_10022437
mov esi [ rw-data ]
and [ ebp - 0x4 ] 0x0
mov ecx rw-data
mov [ ebp - 0x10 ] esi
call sub_10007004
mov ecx [ ebp + 0x8 ]
push eax
call sub_10007039
mov edi eax
test edi edi
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
call sub_1002245f
mov eax edi
call sub_10029f0b
retn
test esi esi
je r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
push eax
call sub_10040af7
pop ecx
pop ecx
cmp eax 0xffffffff
jne r-xdata
mov edi esi
jmp r-xdata
mov edi [ ebp - 0x10 ]
mov ecx edi
mov [ rw-data ] edi
call sub_1000778d
push edi
call sub_10022634
pop ecx
push r--data
lea ecx [ ebp - 0x20 ]
call sub_10025f3c
push r--data
lea eax [ ebp - 0x20 ]
push eax
call sub_10029a01
sub_100417e6
push 0x14
mov eax sub_1004b452
call sub_10029e33
push 0x0
lea ecx [ ebp - 0x14 ]
call sub_10022437
mov esi [ rw-data ]
and [ ebp - 0x4 ] 0x0
mov ecx rw-data
mov [ ebp - 0x10 ] esi
call sub_10007004
mov ecx [ ebp + 0x8 ]
push eax
call sub_10007039
mov edi eax
test edi edi
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
call sub_1002245f
mov eax edi
call sub_10029f0b
retn
test esi esi
je r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
push eax
call sub_10040b96
pop ecx
pop ecx
cmp eax 0xffffffff
jne r-xdata
mov edi esi
jmp r-xdata
mov edi [ ebp - 0x10 ]
mov ecx edi
mov [ rw-data ] edi
call sub_1000778d
push edi
call sub_10022634
pop ecx
push r--data
lea ecx [ ebp - 0x20 ]
call sub_10025f3c
push r--data
lea eax [ ebp - 0x20 ]
push eax
call sub_10029a01
sub_10041883
push 0x14
mov eax sub_1004b452
call sub_10029e33
push 0x0
lea ecx [ ebp - 0x14 ]
call sub_10022437
mov esi [ rw-data ]
and [ ebp - 0x4 ] 0x0
mov ecx rw-data
mov [ ebp - 0x10 ] esi
call sub_10007004
mov ecx [ ebp + 0x8 ]
push eax
call sub_10007039
mov edi eax
test edi edi
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
call sub_1002245f
mov eax edi
call sub_10029f0b
retn
test esi esi
je r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
push eax
call sub_10040c55
pop ecx
pop ecx
cmp eax 0xffffffff
jne r-xdata
mov edi esi
jmp r-xdata
mov edi [ ebp - 0x10 ]
mov ecx edi
mov [ rw-data ] edi
call sub_1000778d
push edi
call sub_10022634
pop ecx
push r--data
lea ecx [ ebp - 0x20 ]
call sub_10025f3c
push r--data
lea eax [ ebp - 0x20 ]
push eax
call sub_10029a01
sub_10041920
push 0x14
mov eax sub_1004b452
call sub_10029e33
push 0x0
lea ecx [ ebp - 0x14 ]
call sub_10022437
mov esi [ rw-data ]
and [ ebp - 0x4 ] 0x0
mov ecx rw-data
mov [ ebp - 0x10 ] esi
call sub_10007004
mov ecx [ ebp + 0x8 ]
push eax
call sub_10007039
mov edi eax
test edi edi
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
call sub_1002245f
mov eax edi
call sub_10029f0b
retn
test esi esi
je r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
push eax
call sub_10040d9d
pop ecx
pop ecx
cmp eax 0xffffffff
jne r-xdata
mov edi esi
jmp r-xdata
mov edi [ ebp - 0x10 ]
mov ecx edi
mov [ rw-data ] edi
call sub_1000778d
push edi
call sub_10022634
pop ecx
push r--data
lea ecx [ ebp - 0x20 ]
call sub_10025f3c
push r--data
lea eax [ ebp - 0x20 ]
push eax
call sub_10029a01
sub_100419bd
push 0x14
mov eax sub_1004b452
call sub_10029e33
push 0x0
lea ecx [ ebp - 0x14 ]
call sub_10022437
mov esi [ rw-data ]
and [ ebp - 0x4 ] 0x0
mov ecx rw-data
mov [ ebp - 0x10 ] esi
call sub_10007004
mov ecx [ ebp + 0x8 ]
push eax
call sub_10007039
mov edi eax
test edi edi
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
call sub_1002245f
mov eax edi
call sub_10029f0b
retn
test esi esi
je r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
push eax
call sub_10040e55
pop ecx
pop ecx
cmp eax 0xffffffff
jne r-xdata
mov edi esi
jmp r-xdata
mov edi [ ebp - 0x10 ]
mov ecx edi
mov [ rw-data ] edi
call sub_1000778d
push edi
call sub_10022634
pop ecx
push r--data
lea ecx [ ebp - 0x20 ]
call sub_10025f3c
push r--data
lea eax [ ebp - 0x20 ]
push eax
call sub_10029a01
sub_10041a5a
push 0x14
mov eax sub_1004b452
call sub_10029e33
push 0x0
lea ecx [ ebp - 0x14 ]
call sub_10022437
mov esi [ rw-data ]
and [ ebp - 0x4 ] 0x0
mov ecx rw-data
mov [ ebp - 0x10 ] esi
call sub_10007004
mov ecx [ ebp + 0x8 ]
push eax
call sub_10007039
mov edi eax
test edi edi
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
call sub_1002245f
mov eax edi
call sub_10029f0b
retn
test esi esi
je r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
push eax
call sub_10040ef4
pop ecx
pop ecx
cmp eax 0xffffffff
jne r-xdata
mov edi esi
jmp r-xdata
mov edi [ ebp - 0x10 ]
mov ecx edi
mov [ rw-data ] edi
call sub_1000778d
push edi
call sub_10022634
pop ecx
push r--data
lea ecx [ ebp - 0x20 ]
call sub_10025f3c
push r--data
lea eax [ ebp - 0x20 ]
push eax
call sub_10029a01
sub_10041af7
push 0x14
mov eax sub_1004b452
call sub_10029e33
push 0x0
lea ecx [ ebp - 0x14 ]
call sub_10022437
mov esi [ rw-data ]
and [ ebp - 0x4 ] 0x0
mov ecx rw-data
mov [ ebp - 0x10 ] esi
call sub_10007004
mov ecx [ ebp + 0x8 ]
push eax
call sub_10007039
mov edi eax
test edi edi
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
call sub_1002245f
mov eax edi
call sub_10029f0b
retn
test esi esi
je r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
push eax
call sub_10040f93
pop ecx
pop ecx
cmp eax 0xffffffff
jne r-xdata
mov edi esi
jmp r-xdata
mov edi [ ebp - 0x10 ]
mov ecx edi
mov [ rw-data ] edi
call sub_1000778d
push edi
call sub_10022634
pop ecx
push r--data
lea ecx [ ebp - 0x20 ]
call sub_10025f3c
push r--data
lea eax [ ebp - 0x20 ]
push eax
call sub_10029a01
sub_10041b94
push 0x14
mov eax sub_1004b452
call sub_10029e33
push 0x0
lea ecx [ ebp - 0x14 ]
call sub_10022437
mov esi [ rw-data ]
and [ ebp - 0x4 ] 0x0
mov ecx rw-data
mov [ ebp - 0x10 ] esi
call sub_10007004
mov ecx [ ebp + 0x8 ]
push eax
call sub_10007039
mov edi eax
test edi edi
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
call sub_1002245f
mov eax edi
call sub_10029f0b
retn
test esi esi
je r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
push eax
call sub_10041086
pop ecx
pop ecx
cmp eax 0xffffffff
jne r-xdata
mov edi esi
jmp r-xdata
mov edi [ ebp - 0x10 ]
mov ecx edi
mov [ rw-data ] edi
call sub_1000778d
push edi
call sub_10022634
pop ecx
push r--data
lea ecx [ ebp - 0x20 ]
call sub_10025f3c
push r--data
lea eax [ ebp - 0x20 ]
push eax
call sub_10029a01
sub_10041c31
push 0x14
mov eax sub_1004b452
call sub_10029e33
push 0x0
lea ecx [ ebp - 0x14 ]
call sub_10022437
mov esi [ rw-data ]
and [ ebp - 0x4 ] 0x0
mov ecx rw-data
mov [ ebp - 0x10 ] esi
call sub_10007004
mov ecx [ ebp + 0x8 ]
push eax
call sub_10007039
mov edi eax
test edi edi
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
call sub_1002245f
mov eax edi
call sub_10029f0b
retn
test esi esi
je r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
push eax
call sub_10041125
pop ecx
pop ecx
cmp eax 0xffffffff
jne r-xdata
mov edi esi
jmp r-xdata
mov edi [ ebp - 0x10 ]
mov ecx edi
mov [ rw-data ] edi
call sub_1000778d
push edi
call sub_10022634
pop ecx
push r--data
lea ecx [ ebp - 0x20 ]
call sub_10025f3c
push r--data
lea eax [ ebp - 0x20 ]
push eax
call sub_10029a01
sub_10041cce
push 0x14
mov eax sub_1004b452
call sub_10029e33
push 0x0
lea ecx [ ebp - 0x14 ]
call sub_10022437
mov esi [ rw-data ]
and [ ebp - 0x4 ] 0x0
mov ecx rw-data
mov [ ebp - 0x10 ] esi
call sub_10007004
mov ecx [ ebp + 0x8 ]
push eax
call sub_10007039
mov edi eax
test edi edi
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
call sub_1002245f
mov eax edi
call sub_10029f0b
retn
test esi esi
je r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
push eax
call sub_100403a7
pop ecx
pop ecx
cmp eax 0xffffffff
jne r-xdata
mov edi esi
jmp r-xdata
mov edi [ ebp - 0x10 ]
mov ecx edi
mov [ rw-data ] edi
call sub_1000778d
push edi
call sub_10022634
pop ecx
push r--data
lea ecx [ ebp - 0x20 ]
call sub_10025f3c
push r--data
lea eax [ ebp - 0x20 ]
push eax
call sub_10029a01
sub_10041d6b
mov edi edi
push esi
push edi
mov esi ecx
call sub_1003444d
mov edi eax
test edi edi
je r-xdata
cmp [ esi + 0x18 ] 0x0
je r-xdata
push edi
lea ecx [ esi + 0x4 ]
call sub_10002408
push edi
call sub_1002644d
pop ecx
mov eax r--data
cmp [ esi + 0x1c ] 0x10
jb r-xdata
lea eax [ esi + 0x8 ]
jmp r-xdata
mov eax [ esi + 0x8 ]
jmp r-xdata
pop edi
pop esi
retn
sub_10041daa
mov edi edi
push esi
push edi
mov esi ecx
call sub_10034556
mov edi eax
test edi edi
je r-xdata
cmp [ esi + 0x34 ] 0x0
je r-xdata
push edi
lea ecx [ esi + 0x20 ]
call sub_10002408
push edi
call sub_1002644d
pop ecx
mov eax r--data
cmp [ esi + 0x38 ] 0x10
jb r-xdata
lea eax [ esi + 0x24 ]
jmp r-xdata
mov eax [ esi + 0x24 ]
jmp r-xdata
pop edi
pop esi
retn
sub_10041de9
push 0x50
mov eax sub_1004b48d
call sub_10029e9c
mov esi [ ebp + 0x14 ]
test [ esi + 0x10 ] 0x4000
mov edi [ ebp + 0x8 ]
mov [ ebp - 0x30 ] ecx
mov [ ebp - 0x34 ] edi
jne r-xdata
lea eax [ ebp - 0x3c ]
push eax
mov ecx esi
call sub_1000781e
xor ebx ebx
push eax
mov [ ebp - 0x4 ] ebx
call sub_100417e6
pop ecx
lea ecx [ ebp - 0x3c ]
mov [ ebp - 0x38 ] eax
call sub_10007806
lea ecx [ ebp - 0x2c ]
call sub_1003fa7b
mov ecx [ ebp - 0x38 ]
xor edi edi
inc edi
lea eax [ ebp - 0x5c ]
mov [ ebp - 0x4 ] edi
push eax
cmp [ ebp + 0x1c ] bl
je r-xdata
movzx edx [ ebp + 0x1c ]
mov eax [ ecx ]
push edx
push [ ebp + 0x18 ]
push esi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push edi
call [ eax + 0x1c ]
mov eax edi
jmp r-xdata
call sub_1003fb1a
mov [ ebp - 0x4 ] 0x3
call sub_1003fbde
mov [ ebp - 0x4 ] 0x2
jmp r-xdata
call sub_10029f1f
retn 0x18
xor edi edi
cmp eax [ ebp - 0x18 ]
jbe r-xdata
push 0xffffffff
push ebx
push eax
lea ecx [ ebp - 0x2c ]
call sub_1003fce9
push ebx
push edi
lea ecx [ ebp - 0x5c ]
mov [ ebp - 0x4 ] 0x1
call sub_1003f79e
mov eax [ esi + 0x18 ]
cmp eax ebx
jle r-xdata
cmp [ ebp - 0x14 ] 0x8
mov eax [ ebp - 0x28 ]
jae r-xdata
push edi
push [ ebp + 0x18 ]
lea eax [ ebp - 0x40 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
push [ ebp - 0x30 ]
call sub_1003edaa
mov ecx [ eax ]
mov [ ebp + 0xc ] ecx
mov eax [ eax + 0x4 ]
add esp 0x18
mov [ ebp + 0x10 ] eax
xor edi edi
sub eax [ ebp - 0x18 ]
mov edi eax
jmp r-xdata
push [ ebp - 0x18 ]
push eax
push [ ebp + 0x10 ]
lea eax [ ebp - 0x40 ]
push [ ebp + 0xc ]
push eax
push [ ebp - 0x30 ]
call sub_1003ed73
mov ecx [ eax ]
push edi
push [ ebp + 0x18 ]
mov [ ebp + 0xc ] ecx
mov eax [ eax + 0x4 ]
push eax
push ecx
push [ ebp - 0x34 ]
mov [ ebp + 0x10 ] eax
push [ ebp - 0x30 ]
mov [ esi + 0x18 ] ebx
call sub_1003edaa
add esp 0x30
push ebx
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_1003f79e
mov eax [ ebp - 0x34 ]
lea eax [ ebp - 0x28 ]
mov eax [ esi + 0x10 ]
and eax 0x1c0
cmp eax 0x40
je r-xdata
sub_10041f32
push 0x16c
mov eax sub_1004b592
call sub_10029e9c
mov eax [ ebp + 0xc ]
mov edi [ ebp + 0x18 ]
mov esi [ ebp + 0x8 ]
and [ ebp - 0x70 ] 0x0
cmp [ ebp + 0x14 ] 0x0
mov [ ebp - 0x6c ] eax
mov eax [ ebp + 0x10 ]
mov [ ebp - 0xa4 ] ecx
mov [ ebp - 0x7c ] esi
mov [ ebp - 0x74 ] eax
mov [ ebp - 0xa8 ] edi
mov ecx edi
je r-xdata
lea eax [ ebp - 0xac ]
push eax
call sub_1000781e
push eax
mov [ ebp - 0x4 ] 0x2
call sub_100414d5
pop ecx
mov ebx eax
mov [ ebp - 0xa0 ] eax
lea ecx [ ebp - 0xac ]
lea eax [ ebp - 0xb0 ]
push eax
call sub_1000781e
push eax
mov [ ebp - 0x4 ] 0x1
call sub_10041572
mov ebx eax
pop ecx
mov [ ebp - 0xa0 ] ebx
lea ecx [ ebp - 0xb0 ]
jmp r-xdata
mov ecx [ ebp - 0x90 ]
cmp ecx 0x4
jae r-xdata
call sub_10007806
lea ecx [ ebp - 0x48 ]
mov [ ebp - 0x65 ] 0x0
mov [ ebp - 0x75 ] 0x0
call sub_10001ac0
mov ecx esi
mov [ ebp - 0x4 ] 0x3
call sub_10001ac0
mov eax [ ebx ]
lea ecx [ ebp - 0xb4 ]
push ecx
mov ecx ebx
mov [ ebp - 0x70 ] 0x1
call [ eax + 0x24 ]
and [ ebp - 0x90 ] 0x0
jmp r-xdata
cmp [ ebp - 0x65 ] 0x0
jne r-xdata
movsx eax [ ebp + ecx - 0xb4 ]
sub eax 0x20
je r-xdata
mov ecx [ ebp - 0x7c ]
push 0xffffffff
push 0x0
call sub_10001d05
jmp r-xdata
cmp [ ebp - 0x34 ] 0x1
jbe r-xdata
cmp ecx 0x3
je r-xdata
sub eax 0x4
je r-xdata
push 0x0
push 0x1
lea ecx [ ebp - 0x48 ]
call sub_1000247e
mov eax [ ebp - 0x7c ]
call sub_10029f1f
retn 0x14
cmp [ ebp - 0x75 ] 0x0
je r-xdata
and [ ebp - 0x8c ] 0x0
and [ ebp - 0x88 ] 0x0
lea eax [ ebp - 0xc0 ]
push eax
lea ecx [ ebp - 0x48 ]
call sub_10007aec
mov ecx [ eax ]
mov [ ebp - 0x8c ] ecx
mov eax [ eax + 0x4 ]
mov [ ebp - 0x88 ] eax
jmp r-xdata
inc [ ebp - 0x90 ]
cmp [ ebp - 0x65 ] 0x0
je r-xdata
lea eax [ ebp - 0x88 ]
push eax
mov ecx edi
call sub_1000781e
push eax
mov [ ebp - 0x4 ] 0xd
call sub_100074de
pop ecx
lea ecx [ ebp - 0x88 ]
mov esi eax
mov [ ebp - 0x4 ] 0x3
call sub_10007806
mov edi [ ebp - 0x6c ]
jmp r-xdata
lea eax [ ebp - 0x2c ]
push eax
mov ecx ebx
call sub_1003fb1a
test [ edi + 0x10 ] 0x8
mov [ ebp - 0x4 ] 0x4
jne r-xdata
sub eax 0x7
je r-xdata
mov eax [ ebp - 0xa4 ]
add eax 0x8
push eax
push 0x0
push 0x2d
call sub_10006d61
mov ecx [ ebp - 0x7c ]
add esp 0xc
movzx eax ax
push eax
push 0x1
push 0x0
call sub_1003fc49
lea eax [ ebp - 0x98 ]
push eax
lea ecx [ ebp - 0x48 ]
call sub_10007b5c
push eax
lea ecx [ ebp - 0x8c ]
call sub_100067be
mov ecx eax
call sub_100067a9
test al al
jne r-xdata
mov ebx [ ebp - 0xa0 ]
mov edi [ ebp - 0xa8 ]
push [ ebp - 0x74 ]
push edi
call sub_10006284
pop ecx
pop ecx
test al al
jne r-xdata
cmp [ ebp - 0x90 ] 0x3
jne r-xdata
cmp [ ebp - 0x14 ] 0x8
mov esi [ ebp - 0x28 ]
jae r-xdata
push [ ebp - 0x74 ]
mov ecx [ ebp - 0x6c ]
call sub_100063d9
test al al
jne r-xdata
sub eax 0x4b
je r-xdata
push [ ebp - 0x74 ]
push [ ebp - 0x6c ]
call sub_10006284
pop ecx
pop ecx
test al al
je r-xdata
lea eax [ ebp - 0xc0 ]
push eax
lea ecx [ ebp - 0x48 ]
call sub_10007b5c
push eax
lea ecx [ ebp - 0x8c ]
call sub_100067a9
test al al
je r-xdata
mov ecx edi
call sub_10005dbf
mov edx [ esi ]
movzx eax ax
push eax
push 0x48
mov ecx esi
call [ edx + 0x8 ]
test al al
je r-xdata
lea eax [ ebp - 0xd0 ]
push eax
lea ecx [ ebp - 0x2c ]
call sub_10007aec
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0x98 ] ecx
mov [ ebp - 0x94 ] eax
jmp r-xdata
cmp [ ebp - 0x34 ] 0x1
ja r-xdata
mov ecx [ ebp - 0x6c ]
call sub_10005dbf
cmp ax [ esi ]
jne r-xdata
lea esi [ ebp - 0x28 ]
lea eax [ ebp - 0x124 ]
push eax
mov ecx ebx
call sub_1003fbde
or [ ebp - 0x70 ] 0x2
cmp [ eax + 0x14 ] 0x0
mov [ ebp - 0x4 ] 0x5
jbe r-xdata
mov eax [ ebx ]
xor esi esi
mov ecx ebx
mov [ ebp - 0x84 ] esi
call [ eax + 0x1c ]
mov [ ebp - 0x9c ] eax
mov eax [ ebp - 0xa4 ]
add eax 0x8
push eax
push esi
push 0x30
call sub_10006d61
movzx eax ax
mov [ ebp - 0x80 ] eax
add esp 0xc
lea eax [ ebp - 0x64 ]
push eax
mov ecx ebx
call sub_1003fa9c
mov [ ebp - 0x4 ] 0xb
cmp [ ebp - 0x50 ] esi
je r-xdata
dec eax
dec eax
jne r-xdata
lea ecx [ ebp - 0x8c ]
call sub_100068fb
mov ecx [ ebp - 0x6c ]
mov esi eax
call sub_10005dbf
cmp ax [ esi ]
jne r-xdata
mov ecx edi
call sub_10005e6f
push [ ebp - 0x74 ]
push [ ebp - 0x6c ]
call sub_10006284
pop ecx
pop ecx
test al al
jne r-xdata
push [ ebp - 0x74 ]
mov ecx [ ebp - 0x6c ]
call sub_100063d9
test al al
jne r-xdata
push 0xffffffff
push 0x0
lea ecx [ ebp - 0x2c ]
call sub_10001d05
mov [ ebp - 0x76 ] 0x0
lea eax [ ebp - 0xec ]
push eax
mov ecx ebx
call sub_1003fbde
or [ ebp - 0x70 ] 0x4
push 0x0
mov ecx eax
mov [ ebp - 0x4 ] 0x6
call sub_1000a914
mov ecx [ ebp - 0x6c ]
mov esi eax
call sub_10005dbf
mov [ ebp - 0x76 ] 0x1
cmp [ esi ] ax
je r-xdata
push [ ebp - 0x74 ]
push [ ebp - 0x6c ]
call sub_10006284
pop ecx
pop ecx
test al al
jne r-xdata
mov eax [ ebx ]
mov ecx ebx
call [ eax + 0x8 ]
movzx eax ax
mov [ ebp - 0xb8 ] eax
cmp ax si
je r-xdata
mov ecx [ ebp - 0x6c ]
call sub_10005e6f
lea eax [ ebp - 0xc8 ]
push eax
lea ecx [ ebp - 0x2c ]
call sub_10007b5c
push eax
lea ecx [ ebp - 0x98 ]
call sub_100067a9
test al al
je r-xdata
lea eax [ ebp - 0xc0 ]
push eax
lea ecx [ ebp - 0x2c ]
call sub_10007b5c
push eax
lea ecx [ ebp - 0x98 ]
call sub_100067a9
test al al
je r-xdata
cmp [ ebp - 0x14 ] 0x8
mov esi [ ebp - 0x28 ]
jae r-xdata
test [ ebp - 0x70 ] 0x2
mov [ ebp - 0x4 ] 0x3
je r-xdata
and [ ebp - 0x70 ] 0xfffffffb
push esi
push 0x1
lea ecx [ ebp - 0xec ]
call sub_1000247e
xor esi esi
test [ ebp - 0x70 ] 0x4
je r-xdata
mov ecx [ ebp - 0x6c ]
call sub_10005dbf
cmp [ ebp - 0x80 ] ax
ja r-xdata
mov eax [ ebx ]
mov ecx ebx
call [ eax + 0x4 ]
push [ ebp - 0x74 ]
mov edi [ ebp - 0x6c ]
push edi
movzx esi ax
call sub_10006284
pop ecx
pop ecx
test al al
je r-xdata
cmp [ ebp - 0x4c ] 0x10
mov eax [ ebp - 0x60 ]
jae r-xdata
lea ecx [ ebp - 0x98 ]
call sub_100068fb
mov ecx [ ebp - 0x6c ]
mov esi eax
call sub_10005dbf
cmp ax [ esi ]
jne r-xdata
push 0x0
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x65 ] 0x1
mov ecx [ ebp - 0x6c ]
call sub_10005dbf
cmp ax [ esi ]
je r-xdata
lea esi [ ebp - 0x28 ]
cmp [ ebp - 0x76 ] 0x0
je r-xdata
and [ ebp - 0x70 ] 0xfffffffd
push esi
push 0x1
lea ecx [ ebp - 0x124 ]
call sub_1000247e
mov ecx [ ebp - 0x6c ]
call sub_10005dbf
movzx ecx [ ebp - 0x80 ]
movzx eax ax
add ecx 0x9
cmp eax ecx
jg r-xdata
mov edi [ ebp - 0x7c ]
cmp [ edi + 0x14 ] 0x0
jne r-xdata
test si si
je r-xdata
cmp [ eax ] 0x7f
jae r-xdata
lea eax [ ebp - 0x60 ]
lea ecx [ ebp - 0x98 ]
call sub_100067be
mov ecx [ ebp - 0x6c ]
call sub_10005e6f
lea eax [ ebp - 0x140 ]
push eax
mov ecx ebx
call sub_10047ffe
or [ ebp - 0x70 ] 0x8
mov [ ebp - 0x4 ] 0x8
cmp [ eax + 0x14 ] esi
jbe r-xdata
mov ecx [ ebp - 0x6c ]
call sub_10005e6f
lea eax [ ebp - 0x15c ]
push eax
mov ecx ebx
call sub_1003fbde
push 0xffffffff
push esi
push eax
lea ecx [ ebp - 0x48 ]
mov [ ebp - 0x4 ] 0x7
call sub_10001f1a
push esi
lea ecx [ ebp - 0x15c ]
jmp r-xdata
mov ecx [ ebp - 0x6c ]
call sub_10005dbf
mov ecx [ ebp - 0x7c ]
movzx eax ax
push eax
push 0x1
call sub_100036a7
mov ecx [ ebp - 0x6c ]
call sub_10005e6f
mov esi [ ebp - 0x9c ]
cmp [ ebp - 0x84 ] esi
jge r-xdata
mov [ ebp - 0x65 ] 0x1
jmp r-xdata
mov ecx edi
call sub_10005dbf
cmp ax si
jne r-xdata
xor edi edi
push edi
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_10005b42
push [ ebp - 0x74 ]
mov esi [ ebp - 0x6c ]
push esi
mov [ ebp - 0x4 ] 0xc
call sub_10006284
pop ecx
pop ecx
test al al
je r-xdata
xor bl bl
lea eax [ ebp - 0x108 ]
push eax
mov ecx ebx
call sub_10047ffe
or [ ebp - 0x70 ] 0x10
push esi
mov ecx eax
mov [ ebp - 0x4 ] 0x9
call sub_1000a914
mov ecx [ ebp - 0x6c ]
mov esi eax
call sub_10005dbf
cmp [ esi ] ax
jne r-xdata
push 0x1
mov [ ebp - 0x4 ] 0x3
call sub_1000247e
jmp r-xdata
push 0x0
push 0x1
lea ecx [ ebp - 0x64 ]
mov [ ebp - 0x4 ] 0x3
call sub_100022b5
jmp r-xdata
sub esi [ ebp - 0x84 ]
jmp r-xdata
cmp [ ebp - 0x4c ] 0x10
mov esi [ ebp - 0x60 ]
jae r-xdata
mov ecx esi
call sub_10005dbf
cmp [ ebp - 0x80 ] ax
ja r-xdata
test [ ebp - 0x70 ] 0x8
mov [ ebp - 0x4 ] 0x3
je r-xdata
and [ ebp - 0x70 ] 0xffffffef
push 0x0
push 0x1
lea ecx [ ebp - 0x108 ]
call sub_1000247e
mov bl 0x1
jmp r-xdata
push [ ebp - 0x80 ]
mov ecx edi
push 0x1
call sub_100036a7
dec esi
jne r-xdata
jmp r-xdata
mov ecx edi
call sub_10005e6f
push [ ebp - 0x74 ]
push edi
call sub_10006284
pop ecx
pop ecx
test al al
jne r-xdata
cmp [ ebp - 0x65 ] 0x0
jne r-xdata
lea esi [ ebp - 0x60 ]
push edi
lea ecx [ ebp - 0x2c ]
call sub_10005c50
cmp [ eax ] 0x0
je r-xdata
mov ecx esi
call sub_10005dbf
movzx ecx [ ebp - 0x80 ]
movzx eax ax
add ecx 0x9
cmp eax ecx
jg r-xdata
test bl bl
je r-xdata
and [ ebp - 0x70 ] 0xfffffff7
push 0x0
push 0x1
lea ecx [ ebp - 0x140 ]
call sub_1000247e
test [ ebp - 0x70 ] 0x10
je r-xdata
mov eax [ ebp - 0x84 ]
cmp eax [ ebp - 0x9c ]
jge r-xdata
mov eax [ ebp - 0x9c ]
cmp [ ebp - 0x84 ] eax
jge r-xdata
push 0x0
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_100022b5
test edi edi
jbe r-xdata
test edi edi
je r-xdata
mov ecx esi
call sub_10005dbf
cmp ax [ ebp - 0xb8 ]
jne r-xdata
mov ecx esi
call sub_10005dbf
mov ecx [ ebp - 0x7c ]
movzx eax ax
push eax
push 0x1
call sub_100036a7
push edi
lea ecx [ ebp - 0x2c ]
call sub_10005c50
cmp [ eax ] 0x7f
je r-xdata
mov ecx [ ebp - 0x6c ]
call sub_10005e6f
mov ecx [ ebp - 0xa0 ]
lea eax [ ebp - 0x178 ]
push eax
call sub_10047ffe
push 0xffffffff
push 0x0
push eax
lea ecx [ ebp - 0x48 ]
mov [ ebp - 0x4 ] 0xa
call sub_10001f1a
push 0x0
push 0x1
lea ecx [ ebp - 0x178 ]
mov [ ebp - 0x4 ] 0x3
call sub_1000247e
mov [ ebp - 0x75 ] 0x1
jmp r-xdata
mov ecx edi
call sub_10005dbf
cmp [ ebp - 0x80 ] ax
ja r-xdata
mov [ ebp - 0x65 ] 0x1
push 0x0
push 0x1
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x4 ] 0xb
call sub_100022b5
jmp r-xdata
cmp [ esi ] 0x7f
je r-xdata
push edi
lea ecx [ ebp - 0x2c ]
call sub_10005c50
cmp [ eax ] 0x0
jle r-xdata
push 0x0
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_10005b68
inc edi
mov ecx esi
call sub_10005e6f
push [ ebp - 0x74 ]
push esi
call sub_10006284
pop ecx
pop ecx
test al al
jne r-xdata
push edi
lea ecx [ ebp - 0x2c ]
call sub_10005c50
inc [ eax ]
jmp r-xdata
mov ecx edi
call sub_10005dbf
movzx ecx [ ebp - 0x80 ]
movzx eax ax
add ecx 0x9
cmp eax ecx
jg r-xdata
dec edi
je r-xdata
mov [ ebp - 0x65 ] 0x1
inc edi
jmp r-xdata
mov ecx edi
call sub_10005dbf
mov ecx [ ebp - 0x7c ]
movzx eax ax
push eax
push 0x1
call sub_100036a7
inc [ ebp - 0x84 ]
test edi edi
jne r-xdata
push edi
lea ecx [ ebp - 0x2c ]
call sub_10005c50
mov cl [ esi ]
cmp cl [ eax ]
jne r-xdata
lea eax [ esi + 0x1 ]
cmp [ eax ] 0x0
jle r-xdata
push edi
lea ecx [ ebp - 0x2c ]
call sub_10005c50
mov cl [ esi ]
cmp cl [ eax ]
jl r-xdata
mov [ ebp - 0x65 ] 0x1
mov esi eax
jmp r-xdata
sub_100427b0
push 0x11c
mov eax sub_1004b611
call sub_10029e9c
mov eax [ ebp + 0x8 ]
mov esi ecx
mov ecx [ ebp + 0x18 ]
mov [ ebp - 0x84 ] eax
mov [ ebp - 0x74 ] ecx
xor edi edi
cmp [ ebp + 0x14 ] 0x0
mov [ ebp - 0x4 ] edi
je r-xdata
lea eax [ ebp - 0x8c ]
push eax
call sub_1000781e
push eax
mov [ ebp - 0x4 ] 0x2
call sub_100414d5
pop ecx
lea ecx [ ebp - 0x8c ]
lea eax [ ebp - 0x88 ]
push eax
call sub_1000781e
push eax
mov [ ebp - 0x4 ] 0x1
call sub_10041572
pop ecx
lea ecx [ ebp - 0x88 ]
jmp r-xdata
mov [ ebp - 0x6c ] eax
mov eax [ ebp + 0x38 ]
cmp eax [ ebp - 0x6c ]
ja r-xdata
neg eax
mov [ ebp - 0x4 ] 0x0
mov ebx eax
call sub_10007806
add esi 0x8
push esi
push edi
push 0x30
call sub_10006d61
movzx esi ax
add esp 0xc
lea eax [ ebp - 0x2c ]
push eax
mov ecx ebx
mov [ ebp - 0x78 ] esi
call sub_1003fa9c
mov eax [ ebx ]
mov ecx ebx
mov [ ebp - 0x4 ] 0x3
call [ eax + 0x1c ]
cmp eax edi
jge r-xdata
cmp [ ebp - 0x14 ] 0x10
mov eax [ ebp - 0x28 ]
jae r-xdata
mov ecx [ ebp - 0x6c ]
sub ecx eax
push esi
inc ecx
push ecx
push edi
lea ecx [ ebp + 0x24 ]
call sub_1003fc49
jmp r-xdata
cmp [ eax ] 0x7f
je r-xdata
lea eax [ ebp - 0x28 ]
lea ecx [ ebp - 0x48 ]
call sub_10001ac0
cmp [ ebp + 0x20 ] 0x0
mov eax [ ebx ]
lea ecx [ ebp - 0x70 ]
push ecx
mov [ ebp - 0x4 ] 0x4
mov ecx ebx
je r-xdata
cmp [ ebp - 0x14 ] 0x10
mov eax [ ebp - 0x28 ]
jae r-xdata
call [ eax + 0x20 ]
mov eax [ ebp - 0x70 ]
mov [ ebp - 0x70 ] eax
lea eax [ ebp - 0xc0 ]
push eax
mov ecx ebx
call sub_1003fbde
mov [ ebp - 0x4 ] 0x6
call [ eax + 0x24 ]
mov eax [ ebp - 0x70 ]
mov [ ebp - 0x70 ] eax
lea eax [ ebp - 0xc0 ]
push eax
mov ecx ebx
call sub_10047ffe
mov [ ebp - 0x4 ] 0x5
jmp r-xdata
cmp [ eax ] 0x0
jle r-xdata
lea eax [ ebp - 0x28 ]
xor esi esi
mov [ ebp - 0x65 ] 0x0
xor ecx ecx
lea eax [ ebp - 0xc0 ]
push eax
mov ecx ebx
call sub_1003fb1a
push 0xffffffff
push edi
push eax
lea ecx [ ebp - 0x64 ]
mov [ ebp - 0x4 ] 0x8
call sub_10001f1a
push edi
push 0x1
lea ecx [ ebp - 0xc0 ]
mov [ ebp - 0x4 ] 0x7
call sub_1000247e
push 0xffffffff
push edi
push eax
lea ecx [ ebp - 0x48 ]
call sub_10001f1a
push edi
push 0x1
lea ecx [ ebp - 0xc0 ]
call sub_1000247e
lea ecx [ ebp - 0x64 ]
call sub_10001ac0
mov eax [ ebp - 0x74 ]
mov eax [ eax + 0x10 ]
mov [ ebp - 0x4 ] 0x7
test al 0x8
je r-xdata
mov eax [ ebx ]
mov ecx ebx
call [ eax + 0x8 ]
cmp [ ebp - 0x14 ] 0x10
mov edi [ ebp - 0x28 ]
movzx eax ax
mov [ ebp - 0x70 ] eax
jae r-xdata
inc esi
sub eax 0x4
je r-xdata
mov esi [ ebp + 0x38 ]
sub esi [ ebp - 0x6c ]
jmp r-xdata
lea edi [ ebp - 0x28 ]
inc ecx
cmp ecx 0x4
jb r-xdata
mov [ ebp - 0x65 ] 0x1
add esi [ ebp - 0x50 ]
jmp r-xdata
sub eax 0x7
je r-xdata
mov al [ edi ]
cmp al 0x7f
jne r-xdata
movsx eax [ ebp + ecx - 0x70 ]
sub eax 0x20
je r-xdata
mov ecx [ ebp - 0x74 ]
mov eax [ ecx + 0x18 ]
cmp eax edi
jle r-xdata
add esi [ ebp - 0x34 ]
jmp r-xdata
sub eax 0x4b
je r-xdata
test al al
jle r-xdata
xor edi edi
xor esi esi
cmp eax esi
jbe r-xdata
mov edx [ ebp - 0x6c ]
cmp [ ebp + 0x38 ] edx
ja r-xdata
dec eax
dec eax
je r-xdata
movsx eax al
cmp eax esi
jae r-xdata
and [ ebp - 0x7c ] 0x0
cmp edi 0x100
jne r-xdata
sub eax esi
mov esi eax
jmp r-xdata
xor eax eax
mov eax edx
sub eax [ ebp + 0x38 ]
inc eax
jmp r-xdata
cmp ecx 0x3
je r-xdata
jmp r-xdata
push [ ebp - 0x70 ]
sub esi eax
push 0x1
push esi
lea ecx [ ebp + 0x24 ]
call sub_1003fc49
lea eax [ edi + 0x1 ]
cmp [ eax ] 0x0
jle r-xdata
push 0x1
push [ ebp + 0x1c ]
lea eax [ ebp - 0x94 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call sub_1003efd4
mov ecx [ eax ]
mov [ ebp + 0xc ] ecx
mov eax [ eax + 0x4 ]
add esp 0x14
mov [ ebp + 0x10 ] eax
sub eax 0x4
je r-xdata
push esi
push [ ebp + 0x1c ]
lea eax [ ebp - 0x80 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call sub_1003efd4
mov ecx [ eax ]
mov [ ebp + 0xc ] ecx
mov eax [ eax + 0x4 ]
add esp 0x14
mov [ ebp + 0x10 ] eax
xor esi esi
cmp [ ebp - 0x65 ] 0x0
jne r-xdata
mov edi [ ecx + 0x10 ]
and edi 0x1c0
cmp edi 0x40
je r-xdata
xor edi edi
cmp edi edx
sbb edx edx
neg edx
add edx [ ebp + 0x38 ]
add edx eax
add esi edx
jmp r-xdata
mov edi eax
inc [ ebp - 0x7c ]
cmp [ ebp - 0x7c ] 0x4
jb r-xdata
push esi
push [ ebp + 0x1c ]
lea eax [ ebp - 0xa4 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call sub_1003efd4
add esp 0x14
xor esi esi
lea eax [ ebp - 0x110 ]
push eax
lea ecx [ ebp - 0x64 ]
call sub_10007aec
push [ ebp - 0x50 ]
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0x9c ]
jmp r-xdata
sub eax 0x7
je r-xdata
mov eax [ ebp - 0x7c ]
movsx eax [ ebp + eax - 0x70 ]
sub eax 0x20
je r-xdata
xor edi edi
inc edi
cmp [ ebp - 0x34 ] edi
jbe r-xdata
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call sub_1003ef98
add esp 0x18
jmp r-xdata
cmp [ ebp - 0x34 ] 0x0
jbe r-xdata
sub eax 0x4b
je r-xdata
mov eax [ ebp - 0x74 ]
and [ eax + 0x18 ] 0x0
push esi
push [ ebp + 0x1c ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp - 0x84 ]
call sub_1003efd4
add esp 0x14
xor esi esi
push esi
push edi
lea ecx [ ebp - 0x64 ]
call sub_1000247e
push esi
push edi
lea ecx [ ebp - 0x48 ]
call sub_1000247e
push esi
push edi
lea ecx [ ebp - 0x2c ]
call sub_100022b5
push esi
push edi
lea ecx [ ebp + 0x24 ]
call sub_1000247e
mov eax [ ebp - 0x84 ]
call sub_10029f1f
retn 0x38
push edi
lea eax [ ebp - 0xa4 ]
push eax
lea eax [ ebp - 0x94 ]
push eax
lea ecx [ ebp - 0x48 ]
call sub_10007aec
mov ecx eax
call sub_1001727a
mov ecx [ ebp - 0x34 ]
dec ecx
push ecx
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0x9c ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call sub_1003ef98
mov ecx [ eax ]
mov [ ebp + 0xc ] ecx
mov eax [ eax + 0x4 ]
add esp 0x18
mov [ ebp + 0x10 ] eax
mov ecx [ eax ]
mov [ ebp + 0xc ] ecx
mov eax [ eax + 0x4 ]
mov [ ebp + 0x10 ] eax
lea eax [ ebp - 0x120 ]
push eax
lea ecx [ ebp - 0x48 ]
call sub_10007aec
push 0x1
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0xf0 ]
jmp r-xdata
mov eax [ ebp - 0x6c ]
test eax eax
jne r-xdata
dec eax
dec eax
je r-xdata
cmp [ ebp + 0x38 ] eax
ja r-xdata
lea eax [ ebp - 0x108 ]
push eax
lea ecx [ ebp + 0x24 ]
call sub_10007aec
push [ ebp + 0x38 ]
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0xd0 ]
cmp edi 0x100
jne r-xdata
jmp r-xdata
lea eax [ ebp - 0xc8 ]
push eax
lea ecx [ ebp + 0x24 ]
call sub_10007aec
mov ecx [ ebp + 0x38 ]
sub ecx [ ebp - 0x6c ]
push ecx
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0x118 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call sub_1003ef98
mov ecx [ eax ]
mov [ ebp + 0xc ] ecx
mov eax [ eax + 0x4 ]
mov [ ebp + 0x10 ] eax
mov eax [ ebx ]
add esp 0x18
mov ecx ebx
call [ eax + 0x4 ]
movzx eax ax
push eax
lea ecx [ ebp + 0xc ]
call sub_10005d99
push [ ebp - 0x6c ]
lea eax [ ebp - 0x128 ]
push eax
lea eax [ ebp - 0x100 ]
push eax
lea ecx [ ebp + 0x24 ]
call sub_10007b5c
mov ecx eax
call sub_10024954
push [ ebp - 0x6c ]
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0xe0 ]
jmp r-xdata
push [ ebp - 0x78 ]
lea ecx [ ebp + 0xc ]
call sub_10005d99
mov eax [ ebx ]
mov ecx ebx
call [ eax + 0x4 ]
movzx eax ax
push eax
lea ecx [ ebp + 0xc ]
call sub_10005d99
mov eax [ ebp - 0x6c ]
sub eax [ ebp + 0x38 ]
push eax
push [ ebp - 0x78 ]
lea eax [ ebp - 0xd8 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call sub_1003efd4
mov ecx [ eax ]
mov [ ebp + 0xc ] ecx
mov eax [ eax + 0x4 ]
mov [ ebp + 0x10 ] eax
add esp 0x14
lea eax [ ebp - 0xe8 ]
push eax
lea ecx [ ebp + 0x24 ]
call sub_10007aec
push [ ebp + 0x38 ]
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0xf8 ]
jmp r-xdata
sub_10042cfe
push 0x10
mov eax sub_1004b639
call sub_10029e66
mov esi ecx
mov [ ebp - 0x14 ] esi
mov ecx [ ebp + 0x8 ]
lea eax [ ebp - 0x1c ]
push eax
call sub_10007307
mov ecx [ eax ]
lea edi [ esi + 0x14 ]
mov [ edi ] ecx
mov eax [ eax + 0x4 ]
mov ecx [ ebp + 0x8 ]
xor ebx ebx
mov [ edi + 0x4 ] eax
mov [ esi + 0x8 ] ebx
mov [ esi + 0xc ] ebx
mov [ ebp - 0x4 ] ebx
call sub_10041d6b
push edi
push ebx
push eax
call sub_10006955
mov ecx [ ebp + 0x8 ]
add esp 0xc
mov [ esi + 0x8 ] eax
call sub_10041daa
push edi
push ebx
push eax
call sub_10006955
add esp 0xc
mov [ esi + 0xc ] eax
call sub_1004a81a
mov [ esi + 0x10 ] eax
call sub_10029f0b
retn 0x4
sub_10042d81
push 0x64
mov eax sub_1004b664
call sub_10029e9c
mov eax [ ebp + 0xc ]
mov esi [ ebp + 0x8 ]
mov edi [ ebp + 0x10 ]
mov [ ebp - 0x6c ] eax
mov eax [ ebp + 0x14 ]
mov [ ebp - 0x5c ] eax
mov eax [ ebp + 0x1c ]
push eax
call sub_100417e6
mov ebx eax
pop ecx
lea eax [ ebp - 0x48 ]
push eax
mov ecx ebx
call sub_1003fa9c
xor eax eax
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x34 ] eax
je r-xdata
lea ebx [ esi + 0x8 ]
push ebx
push 0x0
push 0x30
mov [ ebp - 0x68 ] eax
mov [ ebp - 0x60 ] ebx
call sub_1003de15
mov esi [ ebp - 0x6c ]
add esp 0xc
push [ ebp - 0x5c ]
movzx eax ax
mov ecx edi
mov [ ebp - 0x64 ] eax
mov [ ebp - 0x54 ] esi
call sub_1003f563
test al al
jne r-xdata
mov eax [ ebx ]
mov ecx ebx
call [ eax + 0x8 ]
movzx eax ax
mov eax [ ebp + 0x18 ]
and eax 0xe00
cmp eax 0x400
jne r-xdata
push ebx
push 0x0
push 0x2b
call sub_1003de15
add esp 0xc
mov ecx edi
mov bx ax
call sub_1003f6dc
cmp ax bx
jne r-xdata
cmp eax 0x800
jne r-xdata
mov [ ebp - 0x50 ] 0x8
jmp r-xdata
push [ ebp - 0x60 ]
push 0x0
push 0x2d
call sub_1003de15
add esp 0xc
mov ecx edi
mov bx ax
call sub_1003f6dc
cmp ax bx
jne r-xdata
mov [ esi ] 0x2b
jmp r-xdata
neg eax
sbb eax eax
and eax 0xa
mov [ ebp - 0x50 ] eax
mov [ ebp - 0x50 ] 0x10
jmp r-xdata
push [ ebp - 0x5c ]
mov [ ebp - 0x58 ] 0x0
push edi
mov [ ebp - 0x49 ] 0x0
call sub_1003f930
pop ecx
pop ecx
test al al
je r-xdata
mov [ esi ] 0x2d
lea eax [ esi + 0x1 ]
mov ecx edi
mov [ ebp - 0x54 ] eax
call sub_1003f483
cmp [ ebp - 0x50 ] 0x0
je r-xdata
mov ecx edi
call sub_1003f6dc
cmp ax [ ebp - 0x64 ]
jne r-xdata
mov [ ebp - 0x64 ] 0xa
cmp [ ebp - 0x50 ] 0xa
je r-xdata
mov ecx edi
mov [ ebp - 0x58 ] 0x1
call sub_1003f483
push [ ebp - 0x5c ]
push edi
call sub_1003f930
pop ecx
pop ecx
test al al
je r-xdata
cmp [ ebp - 0x30 ] 0x10
mov esi [ ebp - 0x44 ]
jae r-xdata
push [ ebp - 0x60 ]
mov ecx edi
call sub_1003f6dc
movzx eax ax
push eax
call sub_1003e75a
mov esi [ ebp - 0x54 ]
push [ ebp - 0x64 ]
mov [ esi ] al
movsx eax al
push eax
push r--data
call sub_10026520
add esp 0x14
test eax eax
je r-xdata
xor eax eax
cmp [ ebp - 0x50 ] 0x8
setne al
dec eax
and eax 0xfffffff2
add eax 0x16
mov [ ebp - 0x64 ] eax
jmp r-xdata
cmp [ ebp - 0x50 ] 0x0
jne r-xdata
push [ ebp - 0x60 ]
push 0x0
push 0x78
call sub_1003de15
add esp 0xc
mov ecx edi
mov bx ax
call sub_1003f6dc
cmp ax bx
je r-xdata
cmp [ ebp - 0x58 ] 0x0
je r-xdata
lea esi [ ebp - 0x44 ]
push ebx
lea ecx [ ebp - 0x2c ]
call sub_10005c50
cmp [ eax ] 0x0
je r-xdata
cmp [ ebp - 0x49 ] 0x0
jne r-xdata
push [ ebp - 0x58 ]
lea ecx [ ebp - 0x2c ]
push 0x1
call sub_10005b42
push [ ebp - 0x5c ]
add esi 0x1f
push edi
mov [ ebp - 0x4 ] 0x1
xor ebx ebx
mov [ ebp - 0x70 ] esi
call sub_1003f930
pop ecx
pop ecx
test al al
je r-xdata
mov [ ebp - 0x50 ] 0x8
cmp [ ebp - 0x50 ] 0x0
je r-xdata
push [ ebp - 0x60 ]
push 0x0
push 0x58
call sub_1003de15
add esp 0xc
mov ecx edi
mov bx ax
call sub_1003f6dc
cmp ax bx
jne r-xdata
mov eax [ ebp - 0x6c ]
mov [ ebp - 0x54 ] eax
test ebx ebx
jbe r-xdata
test ebx ebx
je r-xdata
cmp [ ebp - 0x68 ] 0x0
je r-xdata
cmp esi [ ebp - 0x70 ]
jae r-xdata
cmp [ esi ] 0x30
je r-xdata
mov ecx edi
mov [ ebp - 0x50 ] 0x10
mov [ ebp - 0x58 ] 0x0
call sub_1003f483
jmp r-xdata
cmp [ ebp - 0x50 ] 0x10
jne r-xdata
cmp [ ebp - 0x49 ] 0x0
jne r-xdata
cmp [ esi ] 0x7f
je r-xdata
push ebx
lea ecx [ ebp - 0x2c ]
call sub_10005c50
cmp [ eax ] 0x0
jle r-xdata
mov ecx edi
call sub_1003f6dc
cmp ax [ ebp - 0x68 ]
jne r-xdata
push ebx
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x58 ] 0x1
call sub_10005c50
cmp [ eax ] 0x7f
je r-xdata
inc esi
mov [ ebp - 0x54 ] esi
mov [ ebp - 0x49 ] 0x1
mov eax [ ebp - 0x54 ]
push 0x0
push 0x1
lea ecx [ ebp - 0x2c ]
mov [ eax ] 0x0
call sub_100022b5
push 0x0
push 0x1
lea ecx [ ebp - 0x48 ]
call sub_100022b5
mov eax [ ebp - 0x50 ]
call sub_10029f1f
retn
mov eax [ ebp - 0x54 ]
inc [ ebp - 0x54 ]
mov [ eax ] 0x30
jmp r-xdata
dec ebx
je r-xdata
mov [ ebp - 0x58 ] 0x0
inc ebx
jmp r-xdata
push 0x0
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_10005b68
inc ebx
mov ecx edi
call sub_1003f483
push [ ebp - 0x5c ]
push edi
call sub_1003f930
pop ecx
pop ecx
test al al
jne r-xdata
push ebx
lea ecx [ ebp - 0x2c ]
call sub_10005c50
inc [ eax ]
jmp r-xdata
test ebx ebx
jne r-xdata
push ebx
lea ecx [ ebp - 0x2c ]
call sub_10005c50
mov cl [ esi ]
cmp cl [ eax ]
jne r-xdata
lea eax [ esi + 0x1 ]
cmp [ eax ] 0x0
jle r-xdata
push ebx
lea ecx [ ebp - 0x2c ]
call sub_10005c50
mov cl [ esi ]
cmp cl [ eax ]
jl r-xdata
mov esi eax
jmp r-xdata
sub_100430d1
push 0x60
mov eax sub_1004c12f
call sub_10029e9c
mov eax [ ebp + 0x14 ]
mov ebx [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
mov esi [ ebp + 0x10 ]
mov [ ebp - 0x58 ] eax
mov eax [ ebp + 0x18 ]
push eax
mov [ ebp - 0x68 ] ebx
call sub_100417e6
pop ecx
mov ecx eax
lea eax [ ebp - 0x2c ]
push eax
mov [ ebp - 0x6c ] ecx
call sub_1003fa9c
and [ ebp - 0x4 ] 0x0
add edi 0x8
push edi
push 0x0
push 0x30
mov [ ebp - 0x64 ] edi
call sub_1003de15
add esp 0xc
push [ ebp - 0x58 ]
movzx eax ax
mov ecx esi
mov [ ebp - 0x54 ] eax
mov [ ebp - 0x4a ] 0x0
call sub_1003f563
test al al
jne r-xdata
and [ ebp - 0x50 ] 0x0
and [ ebp - 0x60 ] 0x0
cmp [ ebp - 0x14 ] 0x10
mov eax [ ebp - 0x28 ]
mov [ ebp - 0x49 ] 0x0
jae r-xdata
push edi
push 0x0
push 0x2b
call sub_1003de15
add esp 0xc
mov ecx esi
mov di ax
call sub_1003f6dc
cmp ax di
jne r-xdata
cmp [ eax ] 0x7f
je r-xdata
lea eax [ ebp - 0x28 ]
push [ ebp - 0x64 ]
push 0x0
push 0x2d
call sub_1003de15
add esp 0xc
mov ecx esi
mov di ax
call sub_1003f6dc
cmp ax di
jne r-xdata
mov [ ebx ] 0x2b
jmp r-xdata
push [ ebp - 0x58 ]
push esi
call sub_1003f930
pop ecx
pop ecx
test al al
je r-xdata
cmp [ ebp - 0x14 ] 0x10
mov eax [ ebp - 0x28 ]
jae r-xdata
mov ebx [ ebp - 0x68 ]
mov [ ebx ] 0x2d
mov ecx esi
inc ebx
call sub_1003f483
push [ ebp - 0x58 ]
push esi
call sub_1003f930
pop ecx
pop ecx
test al al
je r-xdata
mov ecx esi
call sub_1003f6dc
cmp [ ebp - 0x54 ] ax
ja r-xdata
cmp [ eax ] 0x0
jle r-xdata
lea eax [ ebp - 0x28 ]
cmp [ ebp - 0x50 ] 0x0
jne r-xdata
mov ecx [ ebp - 0x6c ]
mov eax [ ecx ]
call [ eax + 0x4 ]
mov ecx esi
movzx edi ax
call sub_1003f6dc
cmp ax di
jne r-xdata
cmp [ ebp - 0x49 ] 0x0
je r-xdata
mov ecx esi
call sub_1003f6dc
movzx ecx [ ebp - 0x54 ]
movzx eax ax
add ecx 0x9
cmp eax ecx
jg r-xdata
mov ecx [ ebp - 0x6c ]
mov eax [ ecx ]
call [ eax + 0x8 ]
push 0x0
push 0x1
lea ecx [ ebp - 0x48 ]
movzx edi ax
call sub_10005b42
push [ ebp - 0x58 ]
and [ ebp - 0x5c ] 0x0
push esi
mov [ ebp - 0x4 ] 0x1
call sub_1003f930
pop ecx
pop ecx
test al al
je r-xdata
push [ ebp - 0x58 ]
push esi
call sub_1003f930
pop ecx
pop ecx
test al al
jne r-xdata
jmp r-xdata
call sub_100264f9
mov eax [ eax ]
mov al [ eax ]
mov [ ebx ] al
mov ecx esi
inc ebx
call sub_1003f483
cmp [ ebp - 0x50 ] 0x0
jne r-xdata
cmp [ ebp - 0x50 ] 0x24
jl r-xdata
cmp [ ebp - 0x14 ] 0x10
mov edi [ ebp - 0x28 ]
jae r-xdata
mov ecx esi
call sub_1003f6dc
cmp [ ebp - 0x54 ] ax
ja r-xdata
mov ecx esi
call sub_1003f6dc
cmp [ ebp - 0x54 ] ax
ja r-xdata
cmp [ ebp - 0x49 ] 0x0
je r-xdata
push [ ebp - 0x58 ]
push esi
call sub_1003f930
pop ecx
pop ecx
test al al
jne r-xdata
mov [ ebx ] 0x30
inc ebx
mov ecx esi
call sub_1003f6dc
cmp ax [ ebp - 0x54 ]
jne r-xdata
inc [ ebp - 0x60 ]
jmp r-xdata
cmp [ ebp - 0x4a ] 0x0
jne r-xdata
lea edi [ ebp - 0x28 ]
push [ ebp - 0x5c ]
lea ecx [ ebp - 0x48 ]
call sub_10005c50
cmp [ eax ] 0x0
je r-xdata
mov ecx esi
call sub_1003f6dc
movzx ecx [ ebp - 0x54 ]
movzx eax ax
add ecx 0x9
cmp eax ecx
jg r-xdata
mov ecx esi
call sub_1003f6dc
movzx ecx [ ebp - 0x54 ]
movzx eax ax
add ecx 0x9
cmp eax ecx
jg r-xdata
cmp [ ebp - 0x4a ] 0x0
jne r-xdata
push [ ebp - 0x58 ]
push esi
call sub_1003f930
pop ecx
pop ecx
test al al
je r-xdata
mov ecx esi
call sub_1003f6dc
cmp ax [ ebp - 0x54 ]
jne r-xdata
cmp [ ebp - 0x60 ] 0x0
jge r-xdata
mov ecx esi
call sub_1003f6dc
mov cl 0x30
sub cl [ ebp - 0x54 ]
add al cl
mov [ ebx ] al
inc ebx
inc [ ebp - 0x50 ]
cmp [ ebp - 0x50 ] 0x0
je r-xdata
mov ecx esi
mov [ ebp - 0x49 ] 0x1
call sub_1003f483
push [ ebp - 0x58 ]
push esi
call sub_1003f930
pop ecx
pop ecx
test al al
jne r-xdata
push 0x0
push 0x1
lea ecx [ ebp - 0x48 ]
mov [ ebp - 0x4 ] 0x0
call sub_100022b5
jmp r-xdata
cmp [ ebp - 0x5c ] 0x0
jbe r-xdata
cmp [ ebp - 0x5c ] 0x0
je r-xdata
test di di
je r-xdata
cmp [ ebp - 0x50 ] 0x24
mov [ ebp - 0x49 ] 0x1
jl r-xdata
cmp [ ebp - 0x50 ] 0x24
jge r-xdata
mov ebx [ ebp - 0x68 ]
cmp [ ebp - 0x49 ] 0x0
jne r-xdata
push [ ebp - 0x64 ]
push 0x0
push 0x65
call sub_1003de15
add esp 0xc
mov ecx esi
mov di ax
call sub_1003f6dc
cmp ax di
je r-xdata
dec [ ebp - 0x60 ]
mov ecx esi
mov [ ebp - 0x49 ] 0x1
call sub_1003f483
mov [ ebx ] 0x30
inc ebx
inc [ ebp - 0x60 ]
jmp r-xdata
cmp [ edi ] 0x7f
je r-xdata
push [ ebp - 0x5c ]
lea ecx [ ebp - 0x48 ]
call sub_10005c50
cmp [ eax ] 0x0
jle r-xdata
mov ecx esi
call sub_1003f6dc
cmp ax di
jne r-xdata
mov ecx esi
call sub_1003f6dc
cmp ax [ ebp - 0x54 ]
jne r-xdata
inc [ ebp - 0x60 ]
jmp r-xdata
mov ecx esi
mov [ ebp - 0x49 ] 0x1
call sub_1003f483
mov ecx esi
call sub_1003f6dc
mov cl 0x30
sub cl [ ebp - 0x54 ]
add al cl
mov [ ebx ] al
inc ebx
inc [ ebp - 0x50 ]
push 0x0
push 0x1
lea ecx [ ebp - 0x2c ]
mov [ ebx ] 0x0
call sub_100022b5
mov eax [ ebp - 0x60 ]
call sub_10029f1f
retn
mov [ ebx ] 0x65
mov ecx esi
inc ebx
call sub_1003f483
push [ ebp - 0x58 ]
and [ ebp - 0x50 ] 0x0
mov ecx esi
mov [ ebp - 0x49 ] 0x0
call sub_1003f563
test al al
jne r-xdata
push [ ebp - 0x64 ]
push 0x0
push 0x45
call sub_1003de15
add esp 0xc
mov ecx esi
mov di ax
call sub_1003f6dc
cmp ax di
jne r-xdata
dec [ ebp - 0x5c ]
je r-xdata
mov [ ebp - 0x4a ] 0x1
inc [ ebp - 0x5c ]
jmp r-xdata
push 0x0
push 0x1
lea ecx [ ebp - 0x48 ]
call sub_10005b68
inc [ ebp - 0x5c ]
mov ecx esi
call sub_1003f6dc
mov cl 0x30
sub cl [ ebp - 0x54 ]
add al cl
mov [ ebx ] al
inc ebx
inc [ ebp - 0x50 ]
cmp [ ebp - 0x50 ] 0x0
je r-xdata
push [ ebp - 0x5c ]
lea ecx [ ebp - 0x48 ]
call sub_10005c50
cmp [ eax ] 0x7f
je r-xdata
push [ ebp - 0x58 ]
push esi
call sub_1003f930
pop ecx
pop ecx
test al al
je r-xdata
push [ ebp - 0x64 ]
push 0x0
push 0x2b
call sub_1003de15
add esp 0xc
mov ecx esi
mov di ax
call sub_1003f6dc
cmp ax di
jne r-xdata
cmp [ ebp - 0x5c ] 0x0
jne r-xdata
push [ ebp - 0x5c ]
lea ecx [ ebp - 0x48 ]
call sub_10005c50
mov cl [ edi ]
cmp cl [ eax ]
jne r-xdata
mov ecx esi
call sub_1003f483
push [ ebp - 0x58 ]
push esi
call sub_1003f930
pop ecx
pop ecx
test al al
jne r-xdata
push [ ebp - 0x5c ]
lea ecx [ ebp - 0x48 ]
call sub_10005c50
inc [ eax ]
jmp r-xdata
push [ ebp - 0x58 ]
push esi
call sub_1003f930
pop ecx
pop ecx
test al al
jne r-xdata
mov ecx esi
call sub_1003f6dc
cmp ax [ ebp - 0x54 ]
jne r-xdata
push [ ebp - 0x64 ]
push 0x0
push 0x2d
call sub_1003de15
add esp 0xc
mov ecx esi
mov di ax
call sub_1003f6dc
cmp ax di
jne r-xdata
mov [ ebx ] 0x2b
jmp r-xdata
lea eax [ edi + 0x1 ]
cmp [ eax ] 0x0
jle r-xdata
push [ ebp - 0x5c ]
lea ecx [ ebp - 0x48 ]
call sub_10005c50
mov cl [ edi ]
cmp cl [ eax ]
jl r-xdata
mov [ ebp - 0x4a ] 0x1
mov ecx esi
call sub_1003f6dc
cmp [ ebp - 0x54 ] ax
ja r-xdata
cmp [ ebp - 0x49 ] 0x0
je r-xdata
mov ecx esi
mov [ ebp - 0x49 ] 0x1
call sub_1003f483
push [ ebp - 0x58 ]
push esi
call sub_1003f930
pop ecx
pop ecx
test al al
jne r-xdata
mov [ ebx ] 0x2d
mov ecx esi
inc ebx
call sub_1003f483
mov edi eax
jmp r-xdata
mov ecx esi
call sub_1003f6dc
movzx ecx [ ebp - 0x54 ]
movzx eax ax
add ecx 0x9
cmp eax ecx
jg r-xdata
mov [ ebx ] 0x30
inc ebx
jmp r-xdata
cmp [ ebp - 0x50 ] 0x8
jge r-xdata
mov ecx esi
mov [ ebp - 0x49 ] 0x1
call sub_1003f483
mov ecx esi
call sub_1003f6dc
mov cl 0x30
sub cl [ ebp - 0x54 ]
add al cl
mov [ ebx ] al
inc ebx
inc [ ebp - 0x50 ]
sub_10043621
push 0x6c
mov eax sub_1004b6a1
call sub_10029e9c
mov eax [ ebp + 0xc ]
mov ecx [ ebp + 0x18 ]
mov edi [ ebp + 0x8 ]
mov esi [ ebp + 0x20 ]
mov [ ebp - 0x74 ] eax
lea eax [ ebp - 0x78 ]
push eax
mov [ ebp - 0x60 ] ecx
call sub_1000781e
and [ ebp - 0x4 ] 0x0
push eax
call sub_100417e6
or [ ebp - 0x4 ] 0xffffffff
pop ecx
mov ebx eax
lea ecx [ ebp - 0x78 ]
mov [ ebp - 0x64 ] ebx
call sub_10007806
lea eax [ ebp - 0x48 ]
push eax
mov ecx ebx
call sub_1003fa9c
mov eax [ ebx ]
mov ecx ebx
mov [ ebp - 0x4 ] 0x1
call [ eax + 0x8 ]
movzx eax ax
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x6c ] eax
call sub_10007bb4
lea eax [ edi + 0x8 ]
push eax
xor ebx ebx
push ebx
push 0x30
mov [ ebp - 0x4 ] 0x2
call sub_1003de15
movzx eax ax
mov [ ebp - 0x54 ] eax
mov al [ esi ]
add esp 0xc
cmp al 0x2b
je r-xdata
mov [ ebp - 0x70 ] 0x1
mov [ ebp - 0x70 ] ebx
cmp al 0x2d
jne r-xdata
cmp [ ebp - 0x30 ] 0x10
mov eax [ ebp - 0x44 ]
jae r-xdata
mov [ ebp + 0x2c ] ebx
call sub_100264f9
mov eax [ eax ]
push [ ebp + 0x30 ]
mov al [ eax ]
push 0x65
push esi
mov [ ebp - 0x50 ] al
mov [ ebp - 0x4f ] 0x65
mov [ ebp - 0x4e ] bl
call sub_10026520
push [ ebp + 0x30 ]
mov [ ebp - 0x58 ] eax
movsx eax [ ebp - 0x50 ]
push eax
push esi
call sub_10026520
add esp 0x18
mov [ ebp - 0x4c ] eax
cmp eax ebx
jne r-xdata
cmp [ eax ] 0x7f
je r-xdata
lea eax [ ebp - 0x44 ]
mov ecx [ ebp + 0x28 ]
mov eax [ ebp + 0x24 ]
mov edx [ ebp - 0x60 ]
add eax ecx
add eax [ ebp + 0x2c ]
mov ecx [ edx + 0x18 ]
add eax [ ebp + 0x30 ]
cmp ecx ebx
jle r-xdata
cmp [ ebp - 0x30 ] 0x10
mov eax [ ebp - 0x44 ]
jae r-xdata
mov [ ebp - 0x4c ] ebx
cmp ecx eax
jbe r-xdata
cmp [ eax ] bl
jle r-xdata
lea eax [ ebp - 0x44 ]
movsx eax [ ebp - 0x50 ]
push [ ebp + 0x30 ]
push eax
push esi
call sub_10026520
add esp 0xc
cmp eax ebx
je r-xdata
cmp eax 0x100
jne r-xdata
sub ecx eax
mov [ ebp - 0x4c ] ecx
jmp r-xdata
push [ ebp + 0x30 ]
lea ecx [ ebp - 0x2c ]
push esi
call sub_10006cc5
mov eax [ ebp - 0x58 ]
cmp eax ebx
jne r-xdata
push [ ebp + 0x30 ]
push 0x65
push esi
call sub_10026520
add esp 0xc
cmp eax ebx
je r-xdata
push [ ebp - 0x6c ]
sub eax esi
inc eax
mov ebx eax
lea eax [ ebx - 0x1 ]
push eax
push esi
push [ ebp + 0x14 ]
lea eax [ ebp - 0x5c ]
push [ ebp + 0x10 ]
push eax
push edi
call sub_1003f1b2
mov ecx [ eax ]
push [ ebp + 0x24 ]
mov [ ebp + 0x10 ] ecx
push [ ebp - 0x54 ]
mov ecx [ eax + 0x4 ]
mov [ ebp + 0x14 ] ecx
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0x5c ]
push eax
push edi
call sub_1003edaa
mov ecx [ eax ]
mov [ ebp + 0x10 ] ecx
mov eax [ eax + 0x4 ]
mov ecx [ ebp - 0x64 ]
mov [ ebp + 0x14 ] eax
mov eax [ ecx ]
add esp 0x34
call [ eax + 0x4 ]
movzx eax ax
push 0x1
push eax
push [ ebp + 0x14 ]
lea eax [ ebp - 0x68 ]
push [ ebp + 0x10 ]
push eax
push edi
call sub_1003edaa
mov ecx [ eax ]
push [ ebp + 0x28 ]
mov [ ebp + 0x10 ] ecx
push [ ebp - 0x54 ]
mov ecx [ eax + 0x4 ]
mov [ ebp + 0x14 ] ecx
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0x68 ]
push eax
push edi
call sub_1003edaa
mov ecx [ eax ]
sub [ ebp + 0x30 ] ebx
mov [ ebp + 0x10 ] ecx
mov eax [ eax + 0x4 ]
add esp 0x30
add esi ebx
mov [ ebp + 0x14 ] eax
xor ebx ebx
push [ ebp - 0x4c ]
lea eax [ ebp - 0x5c ]
push [ ebp + 0x1c ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push eax
push edi
call sub_1003edaa
mov ecx [ eax ]
mov [ ebp + 0x10 ] ecx
mov eax [ eax + 0x4 ]
mov [ ebp - 0x4c ] ebx
mov [ ebp + 0x14 ] eax
add esp 0x18
cmp [ ebp - 0x70 ] ebx
jbe r-xdata
mov eax [ edx + 0x10 ]
and eax 0x1c0
cmp eax 0x40
je r-xdata
cmp [ ebp - 0x4c ] ebx
jne r-xdata
push 0x30
push [ ebp + 0x2c ]
lea ecx [ ebp - 0x2c ]
call sub_10005b68
jmp r-xdata
push [ ebp - 0x6c ]
lea eax [ ebp - 0x68 ]
push [ ebp + 0x30 ]
push esi
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push eax
push edi
call sub_1003f1b2
mov ecx [ eax ]
push [ ebp + 0x2c ]
mov [ ebp + 0x10 ] ecx
push [ ebp - 0x54 ]
mov ecx [ eax + 0x4 ]
mov [ ebp + 0x14 ] ecx
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0x5c ]
push eax
push edi
call sub_1003edaa
mov ecx [ eax ]
push [ ebp - 0x4c ]
mov edx [ ebp - 0x60 ]
push [ ebp + 0x1c ]
mov [ ebp + 0x10 ] ecx
mov eax [ eax + 0x4 ]
push eax
push ecx
push [ ebp - 0x74 ]
mov [ ebp + 0x14 ] eax
push edi
mov [ edx + 0x18 ] ebx
call sub_1003edaa
add esp 0x4c
push ebx
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_100022b5
push ebx
push 0x1
lea ecx [ ebp - 0x48 ]
call sub_100022b5
mov eax [ ebp - 0x74 ]
call sub_10029f1f
retn
push [ ebp - 0x6c ]
sub eax esi
inc eax
mov ebx eax
lea eax [ ebx - 0x1 ]
push eax
push esi
push [ ebp + 0x14 ]
lea eax [ ebp - 0x68 ]
push [ ebp + 0x10 ]
push eax
push edi
call sub_1003f1b2
mov ecx [ eax ]
push [ ebp + 0x2c ]
mov [ ebp + 0x10 ] ecx
push [ ebp - 0x54 ]
mov ecx [ eax + 0x4 ]
mov [ ebp + 0x14 ] ecx
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0x68 ]
push eax
push edi
call sub_1003edaa
mov ecx [ eax ]
and [ ebp + 0x2c ] 0x0
mov [ ebp + 0x10 ] ecx
mov ecx [ eax + 0x4 ]
mov [ ebp + 0x14 ] ecx
mov ecx [ ebp - 0x60 ]
add esp 0x34
test [ ecx + 0x10 ] 0x4
mov ecx r--data
jne r-xdata
push 0x1
push esi
push [ ebp + 0x14 ]
lea eax [ ebp - 0x5c ]
push [ ebp + 0x10 ]
push eax
push edi
call sub_1003f165
mov ecx [ eax ]
add esp 0x18
mov [ ebp + 0x10 ] ecx
mov eax [ eax + 0x4 ]
inc esi
dec [ ebp + 0x30 ]
mov [ ebp + 0x14 ] eax
push 0x30
push [ ebp + 0x2c ]
sub eax esi
push eax
lea ecx [ ebp - 0x2c ]
call sub_10005bb6
push 0x30
push [ ebp + 0x24 ]
lea ecx [ ebp - 0x2c ]
call sub_10005b68
mov eax [ ebp - 0x58 ]
mov [ ebp + 0x24 ] ebx
push 0x30
lea ecx [ ebp - 0x2c ]
cmp [ ebp - 0x4c ] ebx
jne r-xdata
push 0x1
push ecx
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0x68 ]
push eax
push edi
call sub_1003f165
mov ecx [ eax ]
sub [ ebp + 0x30 ] ebx
mov [ ebp + 0x10 ] ecx
mov eax [ eax + 0x4 ]
add esp 0x18
add esi ebx
mov [ ebp + 0x14 ] eax
xor ebx ebx
mov ecx r--data
mov ebx [ ebp - 0x4c ]
push [ ebp + 0x28 ]
sub ebx esi
lea eax [ ebx + 0x1 ]
push eax
call sub_10005bb6
push 0x30
push [ ebp + 0x24 ]
lea ecx [ ebp - 0x2c ]
push ebx
call sub_10005bb6
and [ ebp + 0x28 ] 0x0
xor ebx ebx
push [ ebp + 0x24 ]
call sub_10005b68
jmp r-xdata
lea eax [ ebp - 0x50 ]
push eax
push ebx
lea ecx [ ebp - 0x2c ]
call sub_10005c50
push eax
call sub_100265d0
pop ecx
pop ecx
mov [ ebp - 0x4c ] eax
jmp r-xdata
lea esi [ ebp - 0x44 ]
cmp [ ebp - 0x30 ] 0x10
mov esi [ ebp - 0x44 ]
mov [ ebp + 0x24 ] ebx
jae r-xdata
mov al [ esi ]
cmp al 0x7f
jne r-xdata
test al al
jle r-xdata
push ebx
lea ecx [ ebp - 0x2c ]
call sub_10005c50
mov esi eax
mov eax [ ebp - 0x18 ]
mov [ ebp + 0x2c ] ebx
mov [ ebp + 0x30 ] eax
mov ecx [ ebp - 0x4c ]
sub ecx [ ebp - 0x70 ]
movsx eax al
cmp eax ecx
jae r-xdata
sub [ ebp - 0x4c ] eax
push ebx
push 0x1
push [ ebp - 0x4c ]
lea ecx [ ebp - 0x2c ]
call sub_10005bb6
lea eax [ esi + 0x1 ]
cmp [ eax ] 0x0
jle r-xdata
mov esi eax
sub_10043a6d
push 0x44
mov eax sub_1004b6d6
call sub_10029e9c
mov eax [ ebp + 0x8 ]
mov ebx [ ebp + 0x18 ]
mov esi [ ebp + 0x20 ]
mov [ ebp - 0x34 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0x4c ] eax
lea eax [ ebp - 0x50 ]
push eax
mov ecx ebx
mov [ ebp - 0x40 ] ebx
call sub_1000781e
and [ ebp - 0x4 ] 0x0
push eax
call sub_100417e6
or [ ebp - 0x4 ] 0xffffffff
pop ecx
lea ecx [ ebp - 0x50 ]
mov [ ebp - 0x48 ] eax
call sub_10007806
mov ecx [ ebp - 0x48 ]
lea eax [ ebp - 0x2c ]
push eax
call sub_1003fa9c
mov al [ esi ]
xor ecx ecx
inc ecx
mov [ ebp - 0x4 ] ecx
cmp al 0x2b
je r-xdata
mov [ ebp - 0x38 ] ecx
cmp al 0x2d
je r-xdata
cmp [ eax ] 0x7f
je r-xdata
lea eax [ ebp - 0x28 ]
cmp al 0x30
jne r-xdata
mov edi [ ebx + 0x18 ]
test edi edi
jle r-xdata
cmp [ ebp - 0x14 ] 0x10
mov eax ecx
jae r-xdata
and [ ebp - 0x38 ] 0x0
jmp r-xdata
mov al [ esi + 0x1 ]
cmp al 0x78
je r-xdata
xor edi edi
cmp edi [ ebp + 0x24 ]
jbe r-xdata
cmp [ eax ] 0x0
jle r-xdata
lea eax [ ebp - 0x28 ]
cmp [ ebp - 0x14 ] 0x10
mov ecx [ ebp - 0x28 ]
mov eax ecx
jae r-xdata
mov [ ebp - 0x38 ] 0x2
jmp r-xdata
cmp al 0x58
jne r-xdata
mov ecx [ ebp - 0x48 ]
mov eax [ ecx ]
call [ eax + 0x8 ]
movzx eax ax
push eax
push [ ebp + 0x24 ]
lea eax [ ebp - 0x3c ]
push esi
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push eax
push [ ebp - 0x34 ]
call sub_1003f1b2
mov ecx [ eax ]
push edi
push [ ebp + 0x1c ]
mov [ ebp + 0x10 ] ecx
mov eax [ eax + 0x4 ]
and [ ebx + 0x18 ] 0x0
push eax
push ecx
push [ ebp - 0x4c ]
mov [ ebp + 0x14 ] eax
push [ ebp - 0x34 ]
call sub_1003edaa
add esp 0x34
push 0x0
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_100022b5
mov eax [ ebp - 0x4c ]
call sub_10029f1f
retn
cmp eax 0x100
lea eax [ ebp - 0x44 ]
je r-xdata
sub edi [ ebp + 0x24 ]
jmp r-xdata
cmp [ ebp - 0x14 ] 0x10
jb r-xdata
push [ ebp - 0x38 ]
push esi
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push eax
push [ ebp - 0x34 ]
call sub_1003f165
mov ecx [ eax ]
push edi
push [ ebp + 0x1c ]
mov [ ebp + 0x10 ] ecx
mov ecx [ eax + 0x4 ]
mov [ ebp + 0x14 ] ecx
push [ eax + 0x4 ]
mov ecx [ ebp - 0x38 ]
push [ eax ]
sub [ ebp + 0x24 ] ecx
lea eax [ ebp - 0x44 ]
push eax
push [ ebp - 0x34 ]
add esi ecx
call sub_1003edaa
add esp 0x30
push edi
push [ ebp + 0x1c ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push eax
push [ ebp - 0x34 ]
call sub_1003edaa
add esp 0x18
jmp r-xdata
mov eax [ ebx + 0x10 ]
and eax 0x1c0
cmp eax 0x40
je r-xdata
lea eax [ ebp - 0x28 ]
mov [ ebp - 0x30 ] eax
mov [ ebp - 0x30 ] ecx
jmp r-xdata
mov ecx [ eax ]
mov [ ebp + 0x10 ] ecx
mov eax [ eax + 0x4 ]
xor edi edi
mov [ ebp + 0x14 ] eax
mov eax [ ebp - 0x30 ]
mov al [ eax ]
cmp al 0x7f
jne r-xdata
mov edi [ ebp + 0x24 ]
jmp r-xdata
test al al
jle r-xdata
mov ecx edi
sub ecx [ ebp - 0x38 ]
movsx eax al
cmp eax ecx
jae r-xdata
sub edi eax
mov eax [ ebp + 0x24 ]
sub eax edi
inc eax
push eax
lea ebx [ esi + edi ]
push ebx
push eax
lea eax [ esi + edi + 0x1 ]
push eax
call sub_1002601b
mov eax [ ebp - 0x30 ]
add esp 0x10
inc [ ebp + 0x24 ]
inc eax
mov [ ebx ] 0x0
cmp [ eax ] 0x0
jle r-xdata
mov ebx [ ebp - 0x40 ]
mov [ ebp - 0x30 ] eax
sub_10043c59
push 0x16c
mov eax sub_1004b7db
call sub_10029e9c
mov eax [ ebp + 0xc ]
mov edi [ ebp + 0x18 ]
mov esi [ ebp + 0x8 ]
and [ ebp - 0x70 ] 0x0
cmp [ ebp + 0x14 ] 0x0
mov [ ebp - 0x6c ] eax
mov eax [ ebp + 0x10 ]
mov [ ebp - 0xa4 ] ecx
mov [ ebp - 0x7c ] esi
mov [ ebp - 0x74 ] eax
mov [ ebp - 0xa8 ] edi
mov ecx edi
je r-xdata
lea eax [ ebp - 0xac ]
push eax
call sub_1000781e
push eax
mov [ ebp - 0x4 ] 0x2
call sub_10041af7
pop ecx
mov ebx eax
mov [ ebp - 0xa0 ] eax
lea ecx [ ebp - 0xac ]
lea eax [ ebp - 0xb0 ]
push eax
call sub_1000781e
push eax
mov [ ebp - 0x4 ] 0x1
call sub_10041b94
mov ebx eax
pop ecx
mov [ ebp - 0xa0 ] ebx
lea ecx [ ebp - 0xb0 ]
jmp r-xdata
mov ecx [ ebp - 0x90 ]
cmp ecx 0x4
jae r-xdata
call sub_10007806
lea ecx [ ebp - 0x48 ]
mov [ ebp - 0x65 ] 0x0
mov [ ebp - 0x75 ] 0x0
call sub_1003fa7b
mov ecx esi
mov [ ebp - 0x4 ] 0x3
call sub_1003fa7b
mov eax [ ebx ]
lea ecx [ ebp - 0xb4 ]
push ecx
mov ecx ebx
mov [ ebp - 0x70 ] 0x1
call [ eax + 0x24 ]
and [ ebp - 0x90 ] 0x0
jmp r-xdata
cmp [ ebp - 0x65 ] 0x0
jne r-xdata
movsx eax [ ebp + ecx - 0xb4 ]
sub eax 0x20
je r-xdata
mov ecx [ ebp - 0x7c ]
push 0xffffffff
push 0x0
call sub_1003f6f2
jmp r-xdata
cmp [ ebp - 0x34 ] 0x1
jbe r-xdata
cmp ecx 0x3
je r-xdata
sub eax 0x4
je r-xdata
push 0x0
push 0x1
lea ecx [ ebp - 0x48 ]
call sub_1003f79e
mov eax [ ebp - 0x7c ]
call sub_10029f1f
retn 0x14
cmp [ ebp - 0x75 ] 0x0
je r-xdata
and [ ebp - 0x8c ] 0x0
and [ ebp - 0x88 ] 0x0
lea eax [ ebp - 0xc0 ]
push eax
lea ecx [ ebp - 0x48 ]
call sub_1003f64d
mov ecx [ eax ]
mov [ ebp - 0x8c ] ecx
mov eax [ eax + 0x4 ]
mov [ ebp - 0x88 ] eax
jmp r-xdata
inc [ ebp - 0x90 ]
cmp [ ebp - 0x65 ] 0x0
je r-xdata
lea eax [ ebp - 0x88 ]
push eax
mov ecx edi
call sub_1000781e
push eax
mov [ ebp - 0x4 ] 0xd
call sub_100411c4
pop ecx
lea ecx [ ebp - 0x88 ]
mov esi eax
mov [ ebp - 0x4 ] 0x3
call sub_10007806
mov edi [ ebp - 0x6c ]
jmp r-xdata
lea eax [ ebp - 0x2c ]
push eax
mov ecx ebx
call sub_1003fb1a
test [ edi + 0x10 ] 0x8
mov [ ebp - 0x4 ] 0x4
jne r-xdata
sub eax 0x7
je r-xdata
mov eax [ ebp - 0xa4 ]
add eax 0x8
push eax
push 0x0
push 0x2d
call sub_1003de15
mov ecx [ ebp - 0x7c ]
add esp 0xc
movzx eax ax
push eax
push 0x1
push 0x0
call sub_1003fe56
lea eax [ ebp - 0x98 ]
push eax
lea ecx [ ebp - 0x48 ]
call sub_1003f774
push eax
lea ecx [ ebp - 0x8c ]
call sub_1003ead0
mov ecx eax
call sub_1003f4dc
test al al
jne r-xdata
mov ebx [ ebp - 0xa0 ]
mov edi [ ebp - 0xa8 ]
push [ ebp - 0x74 ]
push edi
call sub_1003f930
pop ecx
pop ecx
test al al
jne r-xdata
cmp [ ebp - 0x90 ] 0x3
jne r-xdata
cmp [ ebp - 0x14 ] 0x8
mov esi [ ebp - 0x28 ]
jae r-xdata
push [ ebp - 0x74 ]
mov ecx [ ebp - 0x6c ]
call sub_1003f563
test al al
jne r-xdata
sub eax 0x4b
je r-xdata
push [ ebp - 0x74 ]
push [ ebp - 0x6c ]
call sub_1003f930
pop ecx
pop ecx
test al al
je r-xdata
lea eax [ ebp - 0xc0 ]
push eax
lea ecx [ ebp - 0x48 ]
call sub_1003f774
push eax
lea ecx [ ebp - 0x8c ]
call sub_1003f4dc
test al al
je r-xdata
mov ecx edi
call sub_1003f6dc
mov edx [ esi ]
movzx eax ax
push eax
push 0x48
mov ecx esi
call [ edx + 0x8 ]
test al al
je r-xdata
lea eax [ ebp - 0xd0 ]
push eax
lea ecx [ ebp - 0x2c ]
call sub_1003f64d
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0x98 ] ecx
mov [ ebp - 0x94 ] eax
jmp r-xdata
cmp [ ebp - 0x34 ] 0x1
ja r-xdata
mov ecx [ ebp - 0x6c ]
call sub_1003f6dc
cmp ax [ esi ]
jne r-xdata
lea esi [ ebp - 0x28 ]
lea eax [ ebp - 0x124 ]
push eax
mov ecx ebx
call sub_1003fbde
or [ ebp - 0x70 ] 0x2
cmp [ eax + 0x14 ] 0x0
mov [ ebp - 0x4 ] 0x5
jbe r-xdata
mov eax [ ebx ]
xor esi esi
mov ecx ebx
mov [ ebp - 0x84 ] esi
call [ eax + 0x1c ]
mov [ ebp - 0x9c ] eax
mov eax [ ebp - 0xa4 ]
add eax 0x8
push eax
push esi
push 0x30
call sub_1003de15
movzx eax ax
mov [ ebp - 0x80 ] eax
add esp 0xc
lea eax [ ebp - 0x64 ]
push eax
mov ecx ebx
call sub_1003fa9c
mov [ ebp - 0x4 ] 0xb
cmp [ ebp - 0x50 ] esi
je r-xdata
dec eax
dec eax
jne r-xdata
lea ecx [ ebp - 0x8c ]
call sub_1003e981
mov ecx [ ebp - 0x6c ]
mov esi eax
call sub_1003f6dc
cmp ax [ esi ]
jne r-xdata
mov ecx edi
call sub_1003f483
push [ ebp - 0x74 ]
push [ ebp - 0x6c ]
call sub_1003f930
pop ecx
pop ecx
test al al
jne r-xdata
push [ ebp - 0x74 ]
mov ecx [ ebp - 0x6c ]
call sub_1003f563
test al al
jne r-xdata
push 0xffffffff
push 0x0
lea ecx [ ebp - 0x2c ]
call sub_1003f6f2
mov [ ebp - 0x76 ] 0x0
lea eax [ ebp - 0xec ]
push eax
mov ecx ebx
call sub_1003fbde
or [ ebp - 0x70 ] 0x4
push 0x0
mov ecx eax
mov [ ebp - 0x4 ] 0x6
call sub_1003ef0d
mov ecx [ ebp - 0x6c ]
mov esi eax
call sub_1003f6dc
mov [ ebp - 0x76 ] 0x1
cmp [ esi ] ax
je r-xdata
push [ ebp - 0x74 ]
push [ ebp - 0x6c ]
call sub_1003f930
pop ecx
pop ecx
test al al
jne r-xdata
mov eax [ ebx ]
mov ecx ebx
call [ eax + 0x8 ]
movzx eax ax
mov [ ebp - 0xb8 ] eax
cmp ax si
je r-xdata
mov ecx [ ebp - 0x6c ]
call sub_1003f483
lea eax [ ebp - 0xc8 ]
push eax
lea ecx [ ebp - 0x2c ]
call sub_1003f774
push eax
lea ecx [ ebp - 0x98 ]
call sub_1003f4dc
test al al
je r-xdata
lea eax [ ebp - 0xc0 ]
push eax
lea ecx [ ebp - 0x2c ]
call sub_1003f774
push eax
lea ecx [ ebp - 0x98 ]
call sub_1003f4dc
test al al
je r-xdata
cmp [ ebp - 0x14 ] 0x8
mov esi [ ebp - 0x28 ]
jae r-xdata
test [ ebp - 0x70 ] 0x2
mov [ ebp - 0x4 ] 0x3
je r-xdata
and [ ebp - 0x70 ] 0xfffffffb
push esi
push 0x1
lea ecx [ ebp - 0xec ]
call sub_1003f79e
xor esi esi
test [ ebp - 0x70 ] 0x4
je r-xdata
mov ecx [ ebp - 0x6c ]
call sub_1003f6dc
cmp [ ebp - 0x80 ] ax
ja r-xdata
mov eax [ ebx ]
mov ecx ebx
call [ eax + 0x4 ]
push [ ebp - 0x74 ]
mov edi [ ebp - 0x6c ]
push edi
movzx esi ax
call sub_1003f930
pop ecx
pop ecx
test al al
je r-xdata
cmp [ ebp - 0x4c ] 0x10
mov eax [ ebp - 0x60 ]
jae r-xdata
lea ecx [ ebp - 0x98 ]
call sub_1003e981
mov ecx [ ebp - 0x6c ]
mov esi eax
call sub_1003f6dc
cmp ax [ esi ]
jne r-xdata
push 0x0
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x65 ] 0x1
mov ecx [ ebp - 0x6c ]
call sub_1003f6dc
cmp ax [ esi ]
je r-xdata
lea esi [ ebp - 0x28 ]
cmp [ ebp - 0x76 ] 0x0
je r-xdata
and [ ebp - 0x70 ] 0xfffffffd
push esi
push 0x1
lea ecx [ ebp - 0x124 ]
call sub_1003f79e
mov ecx [ ebp - 0x6c ]
call sub_1003f6dc
movzx ecx [ ebp - 0x80 ]
movzx eax ax
add ecx 0x9
cmp eax ecx
jg r-xdata
mov edi [ ebp - 0x7c ]
cmp [ edi + 0x14 ] 0x0
jne r-xdata
test si si
je r-xdata
cmp [ eax ] 0x7f
jae r-xdata
lea eax [ ebp - 0x60 ]
lea ecx [ ebp - 0x98 ]
call sub_1003ead0
mov ecx [ ebp - 0x6c ]
call sub_1003f483
lea eax [ ebp - 0x140 ]
push eax
mov ecx ebx
call sub_10047ffe
or [ ebp - 0x70 ] 0x8
mov [ ebp - 0x4 ] 0x8
cmp [ eax + 0x14 ] esi
jbe r-xdata
mov ecx [ ebp - 0x6c ]
call sub_1003f483
lea eax [ ebp - 0x15c ]
push eax
mov ecx ebx
call sub_1003fbde
push 0xffffffff
push esi
push eax
lea ecx [ ebp - 0x48 ]
mov [ ebp - 0x4 ] 0x7
call sub_1003fce9
push esi
lea ecx [ ebp - 0x15c ]
jmp r-xdata
mov ecx [ ebp - 0x6c ]
call sub_1003f6dc
mov ecx [ ebp - 0x7c ]
movzx eax ax
push eax
push 0x1
call sub_1003fbf7
mov ecx [ ebp - 0x6c ]
call sub_1003f483
mov esi [ ebp - 0x9c ]
cmp [ ebp - 0x84 ] esi
jge r-xdata
mov [ ebp - 0x65 ] 0x1
jmp r-xdata
mov ecx edi
call sub_1003f6dc
cmp ax si
jne r-xdata
xor edi edi
push edi
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_10005b42
push [ ebp - 0x74 ]
mov esi [ ebp - 0x6c ]
push esi
mov [ ebp - 0x4 ] 0xc
call sub_1003f930
pop ecx
pop ecx
test al al
je r-xdata
xor bl bl
lea eax [ ebp - 0x108 ]
push eax
mov ecx ebx
call sub_10047ffe
or [ ebp - 0x70 ] 0x10
push esi
mov ecx eax
mov [ ebp - 0x4 ] 0x9
call sub_1003ef0d
mov ecx [ ebp - 0x6c ]
mov esi eax
call sub_1003f6dc
cmp [ esi ] ax
jne r-xdata
push 0x1
mov [ ebp - 0x4 ] 0x3
call sub_1003f79e
jmp r-xdata
push 0x0
push 0x1
lea ecx [ ebp - 0x64 ]
mov [ ebp - 0x4 ] 0x3
call sub_100022b5
jmp r-xdata
sub esi [ ebp - 0x84 ]
jmp r-xdata
cmp [ ebp - 0x4c ] 0x10
mov esi [ ebp - 0x60 ]
jae r-xdata
mov ecx esi
call sub_1003f6dc
cmp [ ebp - 0x80 ] ax
ja r-xdata
test [ ebp - 0x70 ] 0x8
mov [ ebp - 0x4 ] 0x3
je r-xdata
and [ ebp - 0x70 ] 0xffffffef
push 0x0
push 0x1
lea ecx [ ebp - 0x108 ]
call sub_1003f79e
mov bl 0x1
jmp r-xdata
push [ ebp - 0x80 ]
mov ecx edi
push 0x1
call sub_1003fbf7
dec esi
jne r-xdata
jmp r-xdata
mov ecx edi
call sub_1003f483
push [ ebp - 0x74 ]
push edi
call sub_1003f930
pop ecx
pop ecx
test al al
jne r-xdata
cmp [ ebp - 0x65 ] 0x0
jne r-xdata
lea esi [ ebp - 0x60 ]
push edi
lea ecx [ ebp - 0x2c ]
call sub_10005c50
cmp [ eax ] 0x0
je r-xdata
mov ecx esi
call sub_1003f6dc
movzx ecx [ ebp - 0x80 ]
movzx eax ax
add ecx 0x9
cmp eax ecx
jg r-xdata
test bl bl
je r-xdata
and [ ebp - 0x70 ] 0xfffffff7
push 0x0
push 0x1
lea ecx [ ebp - 0x140 ]
call sub_1003f79e
test [ ebp - 0x70 ] 0x10
je r-xdata
mov eax [ ebp - 0x84 ]
cmp eax [ ebp - 0x9c ]
jge r-xdata
mov eax [ ebp - 0x9c ]
cmp [ ebp - 0x84 ] eax
jge r-xdata
push 0x0
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_100022b5
test edi edi
jbe r-xdata
test edi edi
je r-xdata
mov ecx esi
call sub_1003f6dc
cmp ax [ ebp - 0xb8 ]
jne r-xdata
mov ecx esi
call sub_1003f6dc
mov ecx [ ebp - 0x7c ]
movzx eax ax
push eax
push 0x1
call sub_1003fbf7
push edi
lea ecx [ ebp - 0x2c ]
call sub_10005c50
cmp [ eax ] 0x7f
je r-xdata
mov ecx [ ebp - 0x6c ]
call sub_1003f483
mov ecx [ ebp - 0xa0 ]
lea eax [ ebp - 0x178 ]
push eax
call sub_10047ffe
push 0xffffffff
push 0x0
push eax
lea ecx [ ebp - 0x48 ]
mov [ ebp - 0x4 ] 0xa
call sub_1003fce9
push 0x0
push 0x1
lea ecx [ ebp - 0x178 ]
mov [ ebp - 0x4 ] 0x3
call sub_1003f79e
mov [ ebp - 0x75 ] 0x1
jmp r-xdata
mov ecx edi
call sub_1003f6dc
cmp [ ebp - 0x80 ] ax
ja r-xdata
mov [ ebp - 0x65 ] 0x1
push 0x0
push 0x1
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x4 ] 0xb
call sub_100022b5
jmp r-xdata
cmp [ esi ] 0x7f
je r-xdata
push edi
lea ecx [ ebp - 0x2c ]
call sub_10005c50
cmp [ eax ] 0x0
jle r-xdata
push 0x0
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_10005b68
inc edi
mov ecx esi
call sub_1003f483
push [ ebp - 0x74 ]
push esi
call sub_1003f930
pop ecx
pop ecx
test al al
jne r-xdata
push edi
lea ecx [ ebp - 0x2c ]
call sub_10005c50
inc [ eax ]
jmp r-xdata
mov ecx edi
call sub_1003f6dc
movzx ecx [ ebp - 0x80 ]
movzx eax ax
add ecx 0x9
cmp eax ecx
jg r-xdata
dec edi
je r-xdata
mov [ ebp - 0x65 ] 0x1
inc edi
jmp r-xdata
mov ecx edi
call sub_1003f6dc
mov ecx [ ebp - 0x7c ]
movzx eax ax
push eax
push 0x1
call sub_1003fbf7
inc [ ebp - 0x84 ]
test edi edi
jne r-xdata
push edi
lea ecx [ ebp - 0x2c ]
call sub_10005c50
mov cl [ esi ]
cmp cl [ eax ]
jne r-xdata
lea eax [ esi + 0x1 ]
cmp [ eax ] 0x0
jle r-xdata
push edi
lea ecx [ ebp - 0x2c ]
call sub_10005c50
mov cl [ esi ]
cmp cl [ eax ]
jl r-xdata
mov [ ebp - 0x65 ] 0x1
mov esi eax
jmp r-xdata
sub_100444d7
push 0x11c
mov eax sub_1004b85a
call sub_10029e9c
mov eax [ ebp + 0x8 ]
mov esi ecx
mov ecx [ ebp + 0x18 ]
mov [ ebp - 0x84 ] eax
mov [ ebp - 0x74 ] ecx
xor edi edi
cmp [ ebp + 0x14 ] 0x0
mov [ ebp - 0x4 ] edi
je r-xdata
lea eax [ ebp - 0x8c ]
push eax
call sub_1000781e
push eax
mov [ ebp - 0x4 ] 0x2
call sub_10041af7
pop ecx
lea ecx [ ebp - 0x8c ]
lea eax [ ebp - 0x88 ]
push eax
call sub_1000781e
push eax
mov [ ebp - 0x4 ] 0x1
call sub_10041b94
pop ecx
lea ecx [ ebp - 0x88 ]
jmp r-xdata
mov [ ebp - 0x6c ] eax
mov eax [ ebp + 0x38 ]
cmp eax [ ebp - 0x6c ]
ja r-xdata
neg eax
mov [ ebp - 0x4 ] 0x0
mov ebx eax
call sub_10007806
add esi 0x8
push esi
push edi
push 0x30
call sub_1003de15
movzx esi ax
add esp 0xc
lea eax [ ebp - 0x2c ]
push eax
mov ecx ebx
mov [ ebp - 0x78 ] esi
call sub_1003fa9c
mov eax [ ebx ]
mov ecx ebx
mov [ ebp - 0x4 ] 0x3
call [ eax + 0x1c ]
cmp eax edi
jge r-xdata
cmp [ ebp - 0x14 ] 0x10
mov eax [ ebp - 0x28 ]
jae r-xdata
mov ecx [ ebp - 0x6c ]
sub ecx eax
push esi
inc ecx
push ecx
push edi
lea ecx [ ebp + 0x24 ]
call sub_1003fe56
jmp r-xdata
cmp [ eax ] 0x7f
je r-xdata
lea eax [ ebp - 0x28 ]
lea ecx [ ebp - 0x48 ]
call sub_1003fa7b
cmp [ ebp + 0x20 ] 0x0
mov eax [ ebx ]
lea ecx [ ebp - 0x70 ]
push ecx
mov [ ebp - 0x4 ] 0x4
mov ecx ebx
je r-xdata
cmp [ ebp - 0x14 ] 0x10
mov eax [ ebp - 0x28 ]
jae r-xdata
call [ eax + 0x20 ]
mov eax [ ebp - 0x70 ]
mov [ ebp - 0x70 ] eax
lea eax [ ebp - 0xc0 ]
push eax
mov ecx ebx
call sub_1003fbde
mov [ ebp - 0x4 ] 0x6
call [ eax + 0x24 ]
mov eax [ ebp - 0x70 ]
mov [ ebp - 0x70 ] eax
lea eax [ ebp - 0xc0 ]
push eax
mov ecx ebx
call sub_10047ffe
mov [ ebp - 0x4 ] 0x5
jmp r-xdata
cmp [ eax ] 0x0
jle r-xdata
lea eax [ ebp - 0x28 ]
xor esi esi
mov [ ebp - 0x65 ] 0x0
xor ecx ecx
lea eax [ ebp - 0xc0 ]
push eax
mov ecx ebx
call sub_1003fb1a
push 0xffffffff
push edi
push eax
lea ecx [ ebp - 0x64 ]
mov [ ebp - 0x4 ] 0x8
call sub_1003fce9
push edi
push 0x1
lea ecx [ ebp - 0xc0 ]
mov [ ebp - 0x4 ] 0x7
call sub_1003f79e
push 0xffffffff
push edi
push eax
lea ecx [ ebp - 0x48 ]
call sub_1003fce9
push edi
push 0x1
lea ecx [ ebp - 0xc0 ]
call sub_1003f79e
lea ecx [ ebp - 0x64 ]
call sub_1003fa7b
mov eax [ ebp - 0x74 ]
mov eax [ eax + 0x10 ]
mov [ ebp - 0x4 ] 0x7
test al 0x8
je r-xdata
mov eax [ ebx ]
mov ecx ebx
call [ eax + 0x8 ]
cmp [ ebp - 0x14 ] 0x10
mov edi [ ebp - 0x28 ]
movzx eax ax
mov [ ebp - 0x70 ] eax
jae r-xdata
inc esi
sub eax 0x4
je r-xdata
mov esi [ ebp + 0x38 ]
sub esi [ ebp - 0x6c ]
jmp r-xdata
lea edi [ ebp - 0x28 ]
inc ecx
cmp ecx 0x4
jb r-xdata
mov [ ebp - 0x65 ] 0x1
add esi [ ebp - 0x50 ]
jmp r-xdata
sub eax 0x7
je r-xdata
mov al [ edi ]
cmp al 0x7f
jne r-xdata
movsx eax [ ebp + ecx - 0x70 ]
sub eax 0x20
je r-xdata
mov ecx [ ebp - 0x74 ]
mov eax [ ecx + 0x18 ]
cmp eax edi
jle r-xdata
add esi [ ebp - 0x34 ]
jmp r-xdata
sub eax 0x4b
je r-xdata
test al al
jle r-xdata
xor edi edi
xor esi esi
cmp eax esi
jbe r-xdata
mov edx [ ebp - 0x6c ]
cmp [ ebp + 0x38 ] edx
ja r-xdata
dec eax
dec eax
je r-xdata
movsx eax al
cmp eax esi
jae r-xdata
and [ ebp - 0x7c ] 0x0
cmp edi 0x100
jne r-xdata
sub eax esi
mov esi eax
jmp r-xdata
xor eax eax
mov eax edx
sub eax [ ebp + 0x38 ]
inc eax
jmp r-xdata
cmp ecx 0x3
je r-xdata
jmp r-xdata
push [ ebp - 0x70 ]
sub esi eax
push 0x1
push esi
lea ecx [ ebp + 0x24 ]
call sub_1003fe56
lea eax [ edi + 0x1 ]
cmp [ eax ] 0x0
jle r-xdata
push 0x1
push [ ebp + 0x1c ]
lea eax [ ebp - 0x94 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call sub_1003f282
mov ecx [ eax ]
mov [ ebp + 0xc ] ecx
mov eax [ eax + 0x4 ]
add esp 0x14
mov [ ebp + 0x10 ] eax
sub eax 0x4
je r-xdata
push esi
push [ ebp + 0x1c ]
lea eax [ ebp - 0x80 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call sub_1003f282
mov ecx [ eax ]
mov [ ebp + 0xc ] ecx
mov eax [ eax + 0x4 ]
add esp 0x14
mov [ ebp + 0x10 ] eax
xor esi esi
cmp [ ebp - 0x65 ] 0x0
jne r-xdata
mov edi [ ecx + 0x10 ]
and edi 0x1c0
cmp edi 0x40
je r-xdata
xor edi edi
cmp edi edx
sbb edx edx
neg edx
add edx [ ebp + 0x38 ]
add edx eax
add esi edx
jmp r-xdata
mov edi eax
inc [ ebp - 0x7c ]
cmp [ ebp - 0x7c ] 0x4
jb r-xdata
push esi
push [ ebp + 0x1c ]
lea eax [ ebp - 0xa4 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call sub_1003f282
add esp 0x14
xor esi esi
lea eax [ ebp - 0x110 ]
push eax
lea ecx [ ebp - 0x64 ]
call sub_1003f64d
push [ ebp - 0x50 ]
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0x9c ]
jmp r-xdata
sub eax 0x7
je r-xdata
mov eax [ ebp - 0x7c ]
movsx eax [ ebp + eax - 0x70 ]
sub eax 0x20
je r-xdata
xor edi edi
inc edi
cmp [ ebp - 0x34 ] edi
jbe r-xdata
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call sub_1003f246
add esp 0x18
jmp r-xdata
cmp [ ebp - 0x34 ] 0x0
jbe r-xdata
sub eax 0x4b
je r-xdata
mov eax [ ebp - 0x74 ]
and [ eax + 0x18 ] 0x0
push esi
push [ ebp + 0x1c ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp - 0x84 ]
call sub_1003f282
add esp 0x14
xor esi esi
push esi
push edi
lea ecx [ ebp - 0x64 ]
call sub_1003f79e
push esi
push edi
lea ecx [ ebp - 0x48 ]
call sub_1003f79e
push esi
push edi
lea ecx [ ebp - 0x2c ]
call sub_100022b5
push esi
push edi
lea ecx [ ebp + 0x24 ]
call sub_1003f79e
mov eax [ ebp - 0x84 ]
call sub_10029f1f
retn 0x38
push edi
lea eax [ ebp - 0xa4 ]
push eax
lea eax [ ebp - 0x94 ]
push eax
lea ecx [ ebp - 0x48 ]
call sub_1003f64d
mov ecx eax
call sub_1003f7eb
mov ecx [ ebp - 0x34 ]
dec ecx
push ecx
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0x9c ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call sub_1003f246
mov ecx [ eax ]
mov [ ebp + 0xc ] ecx
mov eax [ eax + 0x4 ]
add esp 0x18
mov [ ebp + 0x10 ] eax
mov ecx [ eax ]
mov [ ebp + 0xc ] ecx
mov eax [ eax + 0x4 ]
mov [ ebp + 0x10 ] eax
lea eax [ ebp - 0x120 ]
push eax
lea ecx [ ebp - 0x48 ]
call sub_1003f64d
push 0x1
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0xf0 ]
jmp r-xdata
mov eax [ ebp - 0x6c ]
test eax eax
jne r-xdata
dec eax
dec eax
je r-xdata
cmp [ ebp + 0x38 ] eax
ja r-xdata
lea eax [ ebp - 0x108 ]
push eax
lea ecx [ ebp + 0x24 ]
call sub_1003f64d
push [ ebp + 0x38 ]
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0xd0 ]
cmp edi 0x100
jne r-xdata
jmp r-xdata
lea eax [ ebp - 0xc8 ]
push eax
lea ecx [ ebp + 0x24 ]
call sub_1003f64d
mov ecx [ ebp + 0x38 ]
sub ecx [ ebp - 0x6c ]
push ecx
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0x118 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call sub_1003f246
mov ecx [ eax ]
mov [ ebp + 0xc ] ecx
mov eax [ eax + 0x4 ]
mov [ ebp + 0x10 ] eax
mov eax [ ebx ]
add esp 0x18
mov ecx ebx
call [ eax + 0x4 ]
movzx eax ax
push eax
lea ecx [ ebp + 0xc ]
call sub_1003ed48
push [ ebp - 0x6c ]
lea eax [ ebp - 0x128 ]
push eax
lea eax [ ebp - 0x100 ]
push eax
lea ecx [ ebp + 0x24 ]
call sub_1003f774
mov ecx eax
call sub_1003f81a
push [ ebp - 0x6c ]
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0xe0 ]
jmp r-xdata
push [ ebp - 0x78 ]
lea ecx [ ebp + 0xc ]
call sub_1003ed48
mov eax [ ebx ]
mov ecx ebx
call [ eax + 0x4 ]
movzx eax ax
push eax
lea ecx [ ebp + 0xc ]
call sub_1003ed48
mov eax [ ebp - 0x6c ]
sub eax [ ebp + 0x38 ]
push eax
push [ ebp - 0x78 ]
lea eax [ ebp - 0xd8 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call sub_1003f282
mov ecx [ eax ]
mov [ ebp + 0xc ] ecx
mov eax [ eax + 0x4 ]
mov [ ebp + 0x10 ] eax
add esp 0x14
lea eax [ ebp - 0xe8 ]
push eax
lea ecx [ ebp + 0x24 ]
call sub_1003f64d
push [ ebp + 0x38 ]
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0xf8 ]
jmp r-xdata
sub_10044a25
push 0x10
mov eax sub_1004b882
call sub_10029e66
mov esi ecx
mov [ ebp - 0x14 ] esi
mov ecx [ ebp + 0x8 ]
lea eax [ ebp - 0x1c ]
push eax
call sub_10007307
mov ecx [ eax ]
lea edi [ esi + 0x14 ]
mov [ edi ] ecx
mov eax [ eax + 0x4 ]
mov ecx [ ebp + 0x8 ]
xor ebx ebx
mov [ edi + 0x4 ] eax
mov [ esi + 0x8 ] ebx
mov [ esi + 0xc ] ebx
mov [ ebp - 0x4 ] ebx
call sub_10041d6b
push edi
push ebx
push eax
call sub_1003de43
mov ecx [ ebp + 0x8 ]
add esp 0xc
mov [ esi + 0x8 ] eax
call sub_10041daa
push edi
push ebx
push eax
call sub_1003de43
add esp 0xc
mov [ esi + 0xc ] eax
call sub_1004a81a
mov [ esi + 0x10 ] eax
call sub_10029f0b
retn 0x4
sub_10044aa8
push 0x54
mov eax sub_1004b8ad
call sub_10029e9c
mov eax [ ebp + 0x20 ]
mov ebx [ ebp + 0x8 ]
mov edi [ ebp + 0x24 ]
push eax
push [ ebp + 0x1c ]
lea eax [ ebp + 0x14 ]
push eax
mov esi ecx
mov ecx [ ebp + 0x28 ]
lea eax [ ebp + 0xc ]
push eax
lea eax [ ebp - 0x2c ]
mov [ ebp - 0x60 ] ecx
push eax
mov ecx esi
mov [ ebp - 0x5c ] ebx
call sub_10041f32
and [ ebp - 0x4 ] 0x0
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_100063d9
test al al
je r-xdata
cmp [ ebp - 0x18 ] 0x0
jne r-xdata
or [ edi ] 0x1
add esi 0x8
push esi
push 0x0
push 0x30
call sub_10006d61
add esp 0xc
lea ecx [ ebp - 0x48 ]
movzx ebx ax
call sub_10007bb4
push [ ebp - 0x18 ]
lea ecx [ ebp - 0x48 ]
mov [ ebp - 0x4 ] 0x1
call sub_1000670c
xor esi esi
push esi
lea ecx [ ebp - 0x2c ]
call sub_1000a914
cmp [ eax ] bx
jb r-xdata
or [ edi ] 0x2
jmp r-xdata
xor esi esi
push 0x2d
inc esi
push esi
lea ecx [ ebp - 0x48 ]
call sub_10005b68
push esi
lea ecx [ ebp - 0x2c ]
call sub_1000a914
movzx eax [ eax ]
movzx ecx bx
add ecx 0x9
cmp ecx eax
jge r-xdata
mov eax [ ebp + 0xc ]
mov [ ebx ] eax
mov eax [ ebp + 0x10 ]
push 0x0
push 0x1
lea ecx [ ebp - 0x2c ]
mov [ ebx + 0x4 ] eax
call sub_1000247e
mov eax ebx
call sub_10029f1f
retn 0x24
cmp [ ebp - 0x30 ] 0x10
mov esi [ ebp - 0x44 ]
jae r-xdata
mov [ ebp - 0x49 ] 0x30
sub [ ebp - 0x49 ] bl
cmp esi [ ebp - 0x18 ]
jae r-xdata
lea eax [ ebp - 0x50 ]
push eax
xor ebx ebx
push ebx
lea eax [ ebp - 0x54 ]
push eax
push esi
mov [ ebp - 0x50 ] ebx
call sub_1002339f
add esp 0x10
cmp [ ebp - 0x54 ] esi
je r-xdata
lea esi [ ebp - 0x44 ]
push esi
lea ecx [ ebp - 0x2c ]
call sub_1000a914
mov al [ eax ]
add al [ ebp - 0x49 ]
lea ecx [ ebp - 0x48 ]
mov [ ebp - 0x58 ] al
push [ ebp - 0x58 ]
push 0x1
call sub_10005b68
inc esi
cmp esi [ ebp - 0x18 ]
jb r-xdata
or [ edi ] 0x2
fstp st0
cmp [ ebp - 0x50 ] ebx
jne r-xdata
mov eax [ ebp - 0x60 ]
fstp [ eax ]
jmp r-xdata
push ebx
push 0x1
lea ecx [ ebp - 0x48 ]
call sub_100022b5
mov ebx [ ebp - 0x5c ]
sub_10044bfa
push 0x20
mov eax sub_1004b8da
call sub_10029e9c
mov eax [ ebp + 0x20 ]
mov edi [ ebp + 0x8 ]
mov esi [ ebp + 0x24 ]
mov ebx [ ebp + 0x28 ]
push eax
push [ ebp + 0x1c ]
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
lea eax [ ebp - 0x2c ]
push eax
call sub_10041f32
and [ ebp - 0x4 ] 0x0
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_100063d9
test al al
je r-xdata
cmp [ ebp - 0x18 ] 0x0
jne r-xdata
or [ esi ] 0x1
push 0xffffffff
push 0x0
lea eax [ ebp - 0x2c ]
push eax
mov ecx ebx
call sub_10001f1a
or [ esi ] 0x2
jmp r-xdata
mov eax [ ebp + 0xc ]
mov [ edi ] eax
mov eax [ ebp + 0x10 ]
push 0x0
push 0x1
lea ecx [ ebp - 0x2c ]
mov [ edi + 0x4 ] eax
call sub_1000247e
mov eax edi
call sub_10029f1f
retn 0x24
sub_10044c79
push 0x54
mov eax sub_1004b907
call sub_10029e9c
fldz
xor ebx ebx
fcomp [ ebp + 0x20 ]
mov edi ecx
mov [ ebp - 0x60 ] bl
fnstsw ax
test ah 0x41
jne r-xdata
fld [ ebp + 0x20 ]
mov [ ebp - 0x58 ] ebx
fld [ r--data ]
fcom st1
fnstsw ax
fstp st1
test ah 0x41
jpe r-xdata
fld [ ebp + 0x20 ]
mov [ ebp - 0x60 ] 0x1
fchs
fstp [ ebp + 0x20 ]
lea ecx [ ebp - 0x54 ]
fstp st0
call sub_10001ac0
fld [ ebp + 0x20 ]
push ecx
push ecx
fstp [ esp ]
push r--data
lea eax [ ebp - 0x38 ]
push 0x28
push eax
mov [ ebp - 0x4 ] ebx
call sub_100264db
add esp 0x14
xor esi esi
cmp eax ebx
mov [ ebp - 0x5c ] eax
jle r-xdata
cmp [ ebp - 0x58 ] 0x1388
jae r-xdata
lea eax [ edi + 0x8 ]
push eax
push ebx
push 0x30
call sub_10006d61
movzx eax ax
add esp 0xc
push eax
push [ ebp - 0x58 ]
lea ecx [ ebp - 0x54 ]
call sub_100036a7
sub esp 0x1c
lea eax [ ebp - 0x54 ]
mov ecx esp
mov [ ebp - 0x5c ] esp
push eax
call sub_10001fad
push [ ebp - 0x60 ]
mov ecx edi
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_100427b0
push ebx
push 0x1
lea ecx [ ebp - 0x54 ]
call sub_1000247e
mov eax [ ebp + 0x8 ]
call sub_10029f1f
retn 0x20
lea eax [ edi + 0x8 ]
push eax
movzx eax [ ebp + esi - 0x38 ]
push ebx
push eax
call sub_10006d61
movzx eax ax
add esp 0xc
push eax
push 0x1
lea ecx [ ebp - 0x54 ]
call sub_100036a7
inc esi
cmp esi [ ebp - 0x5c ]
jl r-xdata
fld [ ebp + 0x20 ]
add [ ebp - 0x58 ] 0xa
fdiv [ r--data ]
fstp [ ebp + 0x20 ]
fld [ ebp + 0x20 ]
fcomp st1
fnstsw ax
test ah 0x1
je r-xdata
sub_10044d99
push 0x2c
mov eax sub_1004b934
call sub_10029e9c
mov esi [ ebp + 0x20 ]
mov edi ecx
mov [ ebp - 0x34 ] edi
add edi 0x8
push edi
push 0x0
push 0x30
call sub_10006d61
add esp 0xc
cmp [ esi + 0x18 ] 0x8
movzx ebx ax
jb r-xdata
add esi 0x4
mov esi [ esi + 0x4 ]
jmp r-xdata
movzx eax [ esi ]
cmp bx ax
ja r-xdata
inc esi
mov [ ebp - 0x30 ] 0x1
inc esi
push edi
xor edi edi
push edi
push 0x2d
mov [ ebp - 0x30 ] 0x0
call sub_10006d61
add esp 0xc
cmp [ esi ] ax
jne r-xdata
push edi
push esi
lea ecx [ ebp - 0x2c ]
call sub_100048ea
and [ ebp - 0x4 ] 0x0
test edi edi
jne r-xdata
movzx ecx bx
movzx eax ax
add ecx 0x9
sub esp 0x1c
lea eax [ ebp - 0x2c ]
mov ecx esp
mov [ ebp - 0x38 ] esp
push eax
call sub_10001fad
push [ ebp - 0x30 ]
mov ecx [ ebp - 0x34 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_100427b0
push 0x0
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_1000247e
mov eax [ ebp + 0x8 ]
call sub_10029f1f
retn 0x1c
push ebx
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_100036a7
inc edi
movzx eax [ esi + edi * 2 ]
cmp bx ax
jbe r-xdata
movzx eax ax
cmp eax ecx
jg r-xdata
sub_10044e6f
push 0x4
mov eax sub_1004b33e
call sub_10029e33
mov esi ecx
mov [ ebp - 0x10 ] esi
mov eax [ ebp + 0xc ]
mov [ esi + 0x4 ] eax
push [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
mov [ esi ] r--data
call sub_10042cfe
mov eax esi
call sub_10029f0b
retn 0x8
sub_10044ea2
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x24 ]
mov eax [ ecx ]
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ eax + 0x14 ]
mov eax [ ebp + 0x8 ]
pop ebp
retn 0x20
sub_10044ecb
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x24 ]
mov eax [ ecx ]
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ eax + 0x18 ]
mov eax [ ebp + 0x8 ]
pop ebp
retn 0x20
sub_10044f0c
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_10044ef4
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_10025c9c
pop ecx
sub_10044f2d
mov edi edi
push ebp
mov ebp esp
sub esp 0x3c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0x10 ]
push ebx
push esi
mov esi [ ebp + 0xc ]
push edi
lea ebx [ eax + 0x14 ]
push ebx
mov [ ebp - 0x28 ] ecx
mov ecx [ ebp + 0x1c ]
push 0x0
push 0x30
mov [ ebp - 0x38 ] ecx
mov [ ebp - 0x34 ] ebx
call sub_10006d61
add esp 0xc
push [ ebp - 0x28 ]
movzx eax ax
mov ecx esi
mov [ ebp - 0x2c ] eax
lea edi [ ebp - 0x24 ]
call sub_100063d9
test al al
jne r-xdata
push [ ebp - 0x28 ]
xor bl bl
push esi
call sub_10006284
pop ecx
pop ecx
test al al
je r-xdata
push ebx
push 0x0
push 0x2b
call sub_10006d61
add esp 0xc
mov ecx esi
mov bx ax
call sub_10005dbf
cmp ax bx
jne r-xdata
push [ ebp - 0x28 ]
push esi
call sub_10006284
pop ecx
pop ecx
test al al
jne r-xdata
mov ecx esi
call sub_10005dbf
cmp ax [ ebp - 0x2c ]
jne r-xdata
push [ ebp - 0x34 ]
push 0x0
push 0x2d
call sub_10006d61
add esp 0xc
mov ecx esi
mov bx ax
call sub_10005dbf
cmp ax bx
jne r-xdata
mov [ ebp - 0x24 ] 0x2b
jmp r-xdata
mov ecx esi
call sub_10005dbf
cmp [ ebp - 0x2c ] ax
ja r-xdata
test bl bl
jne r-xdata
test bl bl
je r-xdata
mov ecx esi
mov bl 0x1
call sub_10005e6f
push [ ebp - 0x28 ]
push esi
call sub_10006284
pop ecx
pop ecx
test al al
jne r-xdata
mov [ ebp - 0x24 ] 0x2d
mov ecx esi
lea edi [ ebp - 0x23 ]
call sub_10005e6f
mov ecx esi
call sub_10005dbf
movzx ecx [ ebp - 0x2c ]
movzx eax ax
add ecx 0x9
cmp eax ecx
jg r-xdata
lea eax [ ebp - 0x30 ]
push eax
push 0xa
lea eax [ ebp - 0x3c ]
push eax
lea eax [ ebp - 0x24 ]
xor ebx ebx
push eax
mov [ edi ] 0x0
mov [ ebp - 0x30 ] ebx
call sub_10022fa7
add esp 0x10
push [ ebp - 0x28 ]
mov ecx esi
mov edi eax
call sub_100063d9
test al al
je r-xdata
lea edi [ ebp - 0x24 ]
mov [ edi ] 0x30
inc edi
jmp r-xdata
mov ecx esi
call sub_10005dbf
mov cl 0x30
sub cl [ ebp - 0x2c ]
add al cl
mov [ edi ] al
lea eax [ ebp - 0x5 ]
cmp edi eax
jae r-xdata
lea eax [ ebp - 0x24 ]
cmp [ ebp - 0x3c ] eax
je r-xdata
inc ebx
mov ecx esi
mov bl 0x1
call sub_10005e6f
inc edi
or ebx 0x2
cmp [ ebp - 0x30 ] 0x0
jne r-xdata
cmp edi [ ebp + 0x14 ]
jl r-xdata
cmp [ ebp + 0x18 ] edi
jl r-xdata
mov eax [ ebp - 0x38 ]
mov [ eax ] edi
jmp r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
mov eax ebx
xor ecx ebp
pop ebx
call sub_10025c8d
leave
retn
sub_100450c7
mov edi edi
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi ecx
lea eax [ edi + 0x14 ]
push eax
push 0x0
push 0x3a
call sub_10006d61
mov ebx [ ebp + 0x24 ]
movzx eax ax
mov [ ebp - 0x4 ] eax
lea eax [ ebx + 0x8 ]
push eax
push 0x17
push 0x0
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
push edi
call sub_10044f2d
mov esi [ ebp + 0x20 ]
add esp 0x24
or [ esi ] eax
jne r-xdata
or [ esi ] 0x2
lea ecx [ ebp + 0xc ]
call sub_10005dbf
cmp ax [ ebp - 0x4 ]
jne r-xdata
or [ esi ] 0x2
lea ecx [ ebp + 0xc ]
call sub_10005dbf
cmp ax [ ebp - 0x4 ]
jne r-xdata
lea ecx [ ebp + 0xc ]
call sub_10005e6f
lea eax [ ebx + 0x4 ]
push eax
push 0x3b
push 0x0
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
push edi
call sub_10044f2d
add esp 0x18
or [ esi ] eax
jmp r-xdata
lea ecx [ ebp + 0xc ]
call sub_10005e6f
push ebx
push 0x3b
push 0x0
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
push edi
call sub_10044f2d
add esp 0x18
or [ esi ] eax
jmp r-xdata
cmp [ esi ] 0x0
jne r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
pop edi
mov [ eax ] ecx
mov ecx [ ebp + 0x10 ]
pop esi
mov [ eax + 0x4 ] ecx
pop ebx
leave
retn 0x20
sub_1004518b
mov edi edi
push ebp
mov ebp esp
sub esp 0x20
push ebx
push esi
push edi
mov edi ecx
lea esi [ edi + 0x14 ]
push esi
xor ebx ebx
push ebx
push 0x30
call sub_10006d61
push esi
movzx eax ax
push ebx
push 0x3a
mov [ ebp - 0x8 ] eax
call sub_10006d61
push esi
movzx eax ax
push ebx
push 0x2c
mov [ ebp - 0x10 ] eax
call sub_10006d61
push esi
movzx eax ax
push ebx
push 0x2f
mov [ ebp - 0x14 ] eax
call sub_10006d61
push esi
movzx eax ax
push ebx
push 0x20
mov [ ebp - 0x18 ] eax
call sub_10006d61
movzx eax ax
mov [ ebp - 0xc ] eax
mov eax [ edi ]
add esp 0x3c
mov ecx edi
call [ eax + 0x4 ]
mov [ ebp - 0x4 ] eax
cmp eax ebx
jne r-xdata
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_100063d9
mov ebx [ ebp + 0x24 ]
mov esi [ ebp + 0x20 ]
test al al
jne r-xdata
mov [ ebp - 0x4 ] 0x2
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
call sub_10006284
pop ecx
pop ecx
test al al
jne r-xdata
lea ecx [ ebp + 0xc ]
call sub_10005dbf
cmp ax [ ebp - 0x8 ]
jb r-xdata
lea ecx [ ebp + 0xc ]
call sub_10005dbf
cmp ax [ ebp - 0xc ]
jne r-xdata
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
call sub_10006284
pop ecx
pop ecx
test al al
je r-xdata
push ebx
push esi
push [ ebp + 0x1c ]
lea eax [ ebp - 0x20 ]
push [ ebp + 0x18 ]
mov ecx edi
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call sub_10044ea2
mov [ ebp - 0x4 ] 0x2
lea ecx [ ebp + 0xc ]
call sub_10005dbf
movzx ecx [ ebp - 0x8 ]
movzx eax ax
add ecx 0x9
cmp ecx eax
jl r-xdata
lea ecx [ ebp + 0xc ]
call sub_10005e6f
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
call sub_10006284
pop ecx
pop ecx
test al al
jne r-xdata
lea ecx [ ebp + 0xc ]
call sub_10005dbf
cmp ax [ ebp - 0x10 ]
je r-xdata
cmp [ ebp - 0x4 ] 0x2
jne r-xdata
lea ecx [ ebp + 0xc ]
call sub_10005dbf
cmp ax [ ebp - 0xc ]
jne r-xdata
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_100063d9
test al al
jne r-xdata
lea ecx [ ebp + 0xc ]
call sub_10005e6f
lea ecx [ ebp + 0xc ]
call sub_10005dbf
cmp ax [ ebp - 0x14 ]
je r-xdata
cmp [ ebp - 0x4 ] 0x1
jne r-xdata
lea eax [ ebx + 0x10 ]
push eax
push 0xc
push 0x1
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
push edi
call sub_10044f2d
or [ esi ] eax
add esp 0x18
dec [ ebx + 0x10 ]
jmp r-xdata
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
call sub_10006284
pop ecx
pop ecx
test al al
jne r-xdata
lea ecx [ ebp + 0xc ]
call sub_10005dbf
cmp ax [ ebp - 0x8 ]
jb r-xdata
lea ecx [ ebp + 0xc ]
call sub_10005dbf
cmp ax [ ebp - 0x18 ]
jne r-xdata
push ebx
push esi
push [ ebp + 0x1c ]
lea eax [ ebp - 0x20 ]
push [ ebp + 0x18 ]
mov ecx edi
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call sub_10044ecb
jmp r-xdata
lea eax [ ebx + 0xc ]
push eax
push 0x1f
push 0x1
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
push edi
call sub_10044f2d
add esp 0x18
or [ esi ] eax
jmp r-xdata
lea ecx [ ebp + 0xc ]
call sub_10005dbf
cmp ax [ ebp - 0xc ]
jne r-xdata
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
call sub_10006284
pop ecx
pop ecx
test al al
je r-xdata
cmp [ ebp - 0x4 ] 0x2
jne r-xdata
lea ecx [ ebp + 0xc ]
call sub_10005dbf
movzx ecx [ ebp - 0x8 ]
movzx eax ax
add ecx 0x9
cmp ecx eax
jl r-xdata
jmp r-xdata
mov ecx [ eax ]
mov [ ebp + 0xc ] ecx
mov eax [ eax + 0x4 ]
mov [ ebp + 0x10 ] eax
jmp r-xdata
lea ecx [ ebp + 0xc ]
call sub_10005e6f
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
call sub_10006284
pop ecx
pop ecx
test al al
jne r-xdata
lea ecx [ ebp + 0xc ]
call sub_10005dbf
cmp ax [ ebp - 0x10 ]
je r-xdata
push ebx
push esi
push [ ebp + 0x1c ]
lea eax [ ebp - 0x20 ]
push [ ebp + 0x18 ]
mov ecx edi
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call sub_10044ea2
cmp [ ebp - 0x4 ] 0x4
mov ecx [ eax ]
mov [ ebp + 0xc ] ecx
mov eax [ eax + 0x4 ]
mov [ ebp + 0x10 ] eax
jne r-xdata
or [ esi ] 0x2
jmp r-xdata
cmp [ ebp - 0x4 ] 0x1
je r-xdata
lea ecx [ ebp + 0xc ]
call sub_10005dbf
cmp ax [ ebp - 0xc ]
jne r-xdata
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_100063d9
test al al
jne r-xdata
lea ecx [ ebp + 0xc ]
call sub_10005e6f
lea ecx [ ebp + 0xc ]
call sub_10005dbf
cmp ax [ ebp - 0x14 ]
je r-xdata
mov [ ebp - 0x4 ] 0x3
jmp r-xdata
lea eax [ ebx + 0x10 ]
push eax
push 0xc
push 0x1
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
push edi
call sub_10044f2d
or [ esi ] eax
add esp 0x18
dec [ ebx + 0x10 ]
jmp r-xdata
cmp [ ebp - 0x4 ] 0x3
je r-xdata
or [ esi ] 0x2
jmp r-xdata
lea ecx [ ebp + 0xc ]
call sub_10005dbf
cmp ax [ ebp - 0x8 ]
jb r-xdata
lea ecx [ ebp + 0xc ]
call sub_10005dbf
cmp ax [ ebp - 0x18 ]
jne r-xdata
lea eax [ ebx + 0xc ]
push eax
push 0x1f
push 0x1
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
push edi
call sub_10044f2d
add esp 0x18
or [ esi ] eax
jmp r-xdata
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_100063d9
test al al
je r-xdata
cmp [ ebp - 0x4 ] 0x4
je r-xdata
lea ecx [ ebp + 0xc ]
call sub_10005dbf
movzx ecx [ ebp - 0x8 ]
movzx eax ax
add ecx 0x9
cmp ecx eax
jl r-xdata
jmp r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
pop edi
mov [ eax ] ecx
mov ecx [ ebp + 0x10 ]
pop esi
mov [ eax + 0x4 ] ecx
pop ebx
leave
retn 0x20
or [ esi ] 0x1
push ebx
push esi
push [ ebp + 0x1c ]
lea eax [ ebp - 0x20 ]
push [ ebp + 0x18 ]
mov ecx edi
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call sub_10044ea2
cmp [ ebp - 0x4 ] 0x4
jne r-xdata
cmp [ ebp - 0x4 ] 0x3
jne r-xdata
add ebx 0x10
push ebx
push 0xc
push 0x1
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
push edi
call sub_10044f2d
or [ esi ] eax
add esp 0x18
dec [ ebx ]
jmp r-xdata
push ebx
push esi
push [ ebp + 0x1c ]
lea eax [ ebp - 0x20 ]
push [ ebp + 0x18 ]
mov ecx edi
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call sub_10044ecb
jmp r-xdata
add ebx 0xc
push ebx
push 0x1f
push 0x1
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
push edi
call sub_10044f2d
add esp 0x18
or [ esi ] eax
jmp r-xdata
mov ecx [ eax ]
mov [ ebp + 0xc ] ecx
mov eax [ eax + 0x4 ]
mov [ ebp + 0x10 ] eax
sub_100455b8
mov edi edi
push ebp
mov ebp esp
push ecx
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x4 ]
push eax
push 0x7f3
push 0x0
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
push ecx
call sub_10044f2d
mov ecx [ ebp + 0x20 ]
or [ ecx ] eax
mov eax [ ecx ]
add esp 0x18
test al 0x2
jne r-xdata
test [ ecx ] 0x2
jne r-xdata
mov edx 0x76c
cmp [ ebp - 0x4 ] edx
jl r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x4 ] ecx
leave
retn 0x20
mov eax [ ebp + 0x24 ]
mov ecx [ ebp - 0x4 ]
mov [ eax + 0x14 ] ecx
cmp [ ebp - 0x4 ] 0x87
jle r-xdata
sub [ ebp - 0x4 ] edx
jmp r-xdata
or eax 0x2
mov [ ecx ] eax
sub_10045626
mov edi edi
push ebp
mov ebp esp
push [ ecx + 0x8 ]
lea eax [ ebp + 0x14 ]
push 0x0
push eax
lea eax [ ebp + 0xc ]
push eax
call sub_10006123
add esp 0x10
test eax eax
jge r-xdata
mov ecx [ ebp + 0x24 ]
sar eax 0x1
mov [ ecx + 0x18 ] eax
mov eax [ ebp + 0x20 ]
or [ eax ] 0x2
jmp r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x4 ] ecx
pop ebp
retn 0x20
sub_10045666
mov edi edi
push ebp
mov ebp esp
push [ ecx + 0xc ]
lea eax [ ebp + 0x14 ]
push 0x0
push eax
lea eax [ ebp + 0xc ]
push eax
call sub_10006123
add esp 0x10
test eax eax
jge r-xdata
mov ecx [ ebp + 0x24 ]
sar eax 0x1
mov [ ecx + 0x10 ] eax
mov eax [ ebp + 0x20 ]
or [ eax ] 0x2
jmp r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x4 ] ecx
pop ebp
retn 0x20
sub_100456a6
push 0x98
mov eax sub_1004bb28
call sub_10029e33
mov eax [ ebp + 0x8 ]
xor edi edi
mov [ ebp - 0x10 ] edi
cmp eax edi
je r-xdata
push 0x5
pop eax
call sub_10029f0b
retn
cmp [ eax ] edi
jne r-xdata
push 0x1c
call sub_10025dd6
pop ecx
mov [ ebp - 0x14 ] eax
push 0x3
mov [ ebp - 0x4 ] edi
pop esi
cmp eax edi
je r-xdata
xor eax eax
mov ecx [ ebp + 0xc ]
lea eax [ ebp - 0x30 ]
push eax
call sub_100073c0
push eax
lea ecx [ ebp - 0xa4 ]
mov [ ebp - 0x4 ] 0x1
mov [ ebp - 0x10 ] 0x1
call sub_1000736b
mov ecx [ ebp - 0x14 ]
push edi
push eax
mov [ ebp - 0x4 ] 0x2
mov [ ebp - 0x10 ] esi
call sub_10044e6f
jmp r-xdata
test [ ebp - 0x10 ] 0x1
je r-xdata
and [ ebp - 0x10 ] 0xfffffffd
lea ecx [ ebp - 0xa4 ]
call sub_100073dd
test [ ebp - 0x10 ] 0x2
mov ecx [ ebp + 0x8 ]
mov [ ecx ] eax
mov [ ebp - 0x4 ] esi
je r-xdata
push edi
push 0x1
lea ecx [ ebp - 0x30 ]
call sub_100022b5
sub_10045750
push 0x60
mov eax sub_1004b981
call sub_10029e9c
mov eax [ ebp + 0x8 ]
mov esi [ ebp + 0x1c ]
or [ ebp - 0x50 ] 0xffffffff
mov [ ebp - 0x68 ] eax
mov eax [ ebp + 0x20 ]
mov [ ebp - 0x58 ] eax
mov eax [ ebp + 0x24 ]
xor ebx ebx
mov [ ebp - 0x6c ] eax
mov eax [ esi + 0x10 ]
inc ebx
mov [ ebp - 0x54 ] ecx
mov ecx esi
test eax 0x4000
je r-xdata
lea eax [ ebp - 0x60 ]
xor edi edi
push eax
mov [ ebp - 0x5c ] edi
call sub_1000781e
mov esi [ esi + 0x10 ]
lea ecx [ ebp - 0x5c ]
push ecx
push eax
push esi
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
lea eax [ ebp - 0x30 ]
push eax
push [ ebp - 0x54 ]
mov [ ebp - 0x4 ] 0x4
call sub_10042d81
add esp 0x18
push eax
lea eax [ ebp - 0x64 ]
push eax
lea eax [ ebp - 0x30 ]
push eax
call sub_10022e0c
or [ ebp - 0x4 ] 0xffffffff
add esp 0x10
lea ecx [ ebp - 0x60 ]
mov esi eax
call sub_10007806
lea eax [ ebp - 0x30 ]
cmp [ ebp - 0x64 ] eax
je r-xdata
lea eax [ ebp - 0x54 ]
push eax
call sub_1000781e
xor edi edi
push eax
mov [ ebp - 0x4 ] edi
call sub_100417e6
pop ecx
or esi 0xffffffff
lea ecx [ ebp - 0x54 ]
mov [ ebp - 0x50 ] eax
mov [ ebp - 0x4 ] esi
call sub_10007806
push edi
push ebx
lea ecx [ ebp - 0x4c ]
call sub_10040352
mov ecx [ ebp - 0x50 ]
lea eax [ ebp - 0x2c ]
push eax
mov [ ebp - 0x4 ] ebx
call sub_1003fb1a
push esi
push edi
push eax
lea ecx [ ebp - 0x4c ]
mov [ ebp - 0x4 ] 0x2
call sub_1003fb33
push edi
push ebx
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x4 ] bl
call sub_1003f79e
push edi
push ebx
lea ecx [ ebp - 0x4c ]
call sub_1003fbf7
mov ecx [ ebp - 0x50 ]
lea eax [ ebp - 0x2c ]
push eax
call sub_1003fbde
push esi
push edi
push eax
lea ecx [ ebp - 0x4c ]
mov [ ebp - 0x4 ] 0x3
call sub_1003fb33
push edi
push ebx
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x4 ] bl
call sub_1003f79e
cmp [ ebp - 0x34 ] 0x8
mov eax [ ebp - 0x48 ]
jae r-xdata
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_1003f563
test al al
mov eax [ ebp - 0x58 ]
je r-xdata
cmp [ ebp - 0x5c ] edi
jne r-xdata
push eax
push 0x2
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
call sub_1003ff1e
add esp 0x10
push edi
push ebx
lea ecx [ ebp - 0x4c ]
mov [ ebp - 0x50 ] eax
mov [ ebp - 0x4 ] esi
call sub_1003f79e
jmp r-xdata
lea eax [ ebp - 0x48 ]
cmp [ ebp - 0x50 ] edi
jge r-xdata
or [ eax ] ebx
cmp esi ebx
ja r-xdata
mov ecx [ ebp - 0x6c ]
setne al
mov [ ecx ] al
or [ eax ] 0x2
jmp r-xdata
mov [ ebp - 0x50 ] esi
mov ecx [ ebp + 0xc ]
mov eax [ ebp - 0x68 ]
mov [ eax ] ecx
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x4 ] ecx
call sub_10029f1f
retn 0x20
sub_100458ee
push 0x38
mov eax sub_1004c38b
call sub_10029e9c
mov eax [ ebp + 0x8 ]
mov esi [ ebp + 0x1c ]
mov edi [ ebp + 0x20 ]
mov ebx [ ebp + 0x24 ]
and [ ebp - 0x38 ] 0x0
mov [ ebp - 0x40 ] eax
lea eax [ ebp - 0x3c ]
mov [ ebp - 0x34 ] ecx
push eax
mov ecx esi
call sub_1000781e
mov esi [ esi + 0x10 ]
and [ ebp - 0x4 ] 0x0
push eax
push esi
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
lea eax [ ebp - 0x30 ]
push eax
push [ ebp - 0x34 ]
call sub_10042d81
or [ ebp - 0x4 ] 0xffffffff
add esp 0x18
lea ecx [ ebp - 0x3c ]
mov esi eax
call sub_10007806
cmp [ ebp - 0x30 ] 0x2d
lea eax [ ebp - 0x2f ]
je r-xdata
mov [ ebp - 0x34 ] eax
lea eax [ ebp - 0x38 ]
push eax
push esi
lea eax [ ebp - 0x44 ]
push eax
push [ ebp - 0x34 ]
call sub_10022e0c
mov esi eax
add esp 0x10
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_1003f563
test al al
je r-xdata
lea eax [ ebp - 0x30 ]
mov eax [ ebp - 0x34 ]
cmp [ ebp - 0x44 ] eax
je r-xdata
or [ edi ] 0x1
or [ edi ] 0x2
cmp [ ebp - 0x38 ] 0x0
jne r-xdata
cmp esi 0xffff
ja r-xdata
cmp [ ebp - 0x30 ] 0x2d
jne r-xdata
mov [ ebx ] si
jmp r-xdata
neg esi
mov ecx [ ebp + 0xc ]
mov eax [ ebp - 0x40 ]
mov [ eax ] ecx
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x4 ] ecx
call sub_10029f1f
retn 0x20
sub_100459bd
push 0x38
mov eax sub_1004c38b
call sub_10029e9c
mov eax [ ebp + 0x8 ]
mov esi [ ebp + 0x1c ]
mov edi [ ebp + 0x20 ]
mov ebx [ ebp + 0x24 ]
and [ ebp - 0x38 ] 0x0
mov [ ebp - 0x40 ] eax
lea eax [ ebp - 0x3c ]
mov [ ebp - 0x34 ] ecx
push eax
mov ecx esi
call sub_1000781e
mov esi [ esi + 0x10 ]
and [ ebp - 0x4 ] 0x0
push eax
push esi
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
lea eax [ ebp - 0x30 ]
push eax
push [ ebp - 0x34 ]
call sub_10042d81
or [ ebp - 0x4 ] 0xffffffff
add esp 0x18
lea ecx [ ebp - 0x3c ]
mov esi eax
call sub_10007806
cmp [ ebp - 0x30 ] 0x2d
lea eax [ ebp - 0x2f ]
je r-xdata
mov [ ebp - 0x34 ] eax
lea eax [ ebp - 0x38 ]
push eax
push esi
lea eax [ ebp - 0x44 ]
push eax
push [ ebp - 0x34 ]
call sub_10022e0c
mov esi eax
add esp 0x10
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_1003f563
test al al
je r-xdata
lea eax [ ebp - 0x30 ]
mov eax [ ebp - 0x34 ]
cmp [ ebp - 0x44 ] eax
je r-xdata
or [ edi ] 0x1
or [ edi ] 0x2
cmp [ ebp - 0x38 ] 0x0
jne r-xdata
cmp esi 0xffffffff
ja r-xdata
cmp [ ebp - 0x30 ] 0x2d
jne r-xdata
mov [ ebx ] esi
jmp r-xdata
neg esi
mov ecx [ ebp + 0xc ]
mov eax [ ebp - 0x40 ]
mov [ eax ] ecx
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x4 ] ecx
call sub_10029f1f
retn 0x20
sub_10045a88
push 0x38
mov eax sub_1004b9ae
call sub_10029e9c
mov eax [ ebp + 0x8 ]
mov esi [ ebp + 0x1c ]
mov edi [ ebp + 0x20 ]
mov ebx [ ebp + 0x24 ]
and [ ebp - 0x34 ] 0x0
mov [ ebp - 0x3c ] eax
lea eax [ ebp - 0x38 ]
mov [ ebp - 0x44 ] ecx
push eax
mov ecx esi
call sub_1000781e
mov esi [ esi + 0x10 ]
and [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x34 ]
push ecx
push eax
push esi
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
lea eax [ ebp - 0x30 ]
push eax
push [ ebp - 0x44 ]
call sub_10042d81
add esp 0x18
push eax
lea eax [ ebp - 0x40 ]
push eax
lea eax [ ebp - 0x30 ]
push eax
call sub_10022fa7
or [ ebp - 0x4 ] 0xffffffff
add esp 0x10
lea ecx [ ebp - 0x38 ]
mov esi eax
call sub_10007806
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_1003f563
test al al
je r-xdata
lea eax [ ebp - 0x30 ]
cmp [ ebp - 0x40 ] eax
je r-xdata
or [ edi ] 0x1
or [ edi ] 0x2
cmp [ ebp - 0x34 ] 0x0
jne r-xdata
mov [ ebx ] esi
jmp r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ebp - 0x3c ]
mov [ eax ] ecx
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x4 ] ecx
call sub_10029f1f
retn 0x20
sub_10045b36
push 0x38
mov eax sub_1004b9ae
call sub_10029e9c
mov eax [ ebp + 0x8 ]
mov esi [ ebp + 0x1c ]
mov edi [ ebp + 0x20 ]
mov ebx [ ebp + 0x24 ]
and [ ebp - 0x34 ] 0x0
mov [ ebp - 0x3c ] eax
lea eax [ ebp - 0x38 ]
mov [ ebp - 0x44 ] ecx
push eax
mov ecx esi
call sub_1000781e
mov esi [ esi + 0x10 ]
and [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x34 ]
push ecx
push eax
push esi
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
lea eax [ ebp - 0x30 ]
push eax
push [ ebp - 0x44 ]
call sub_10042d81
add esp 0x18
push eax
lea eax [ ebp - 0x40 ]
push eax
lea eax [ ebp - 0x30 ]
push eax
call sub_10022e0c
or [ ebp - 0x4 ] 0xffffffff
add esp 0x10
lea ecx [ ebp - 0x38 ]
mov esi eax
call sub_10007806
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_1003f563
test al al
je r-xdata
lea eax [ ebp - 0x30 ]
cmp [ ebp - 0x40 ] eax
je r-xdata
or [ edi ] 0x1
or [ edi ] 0x2
cmp [ ebp - 0x34 ] 0x0
jne r-xdata
mov [ ebx ] esi
jmp r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ebp - 0x3c ]
mov [ eax ] ecx
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x4 ] ecx
call sub_10029f1f
retn 0x20
sub_10045be4
push 0x3c
mov eax sub_1004c35e
call sub_10029e9c
mov eax [ ebp + 0x8 ]
mov esi [ ebp + 0x1c ]
mov ebx [ ebp + 0x20 ]
mov edi [ ebp + 0x24 ]
and [ ebp - 0x34 ] 0x0
mov [ ebp - 0x3c ] eax
lea eax [ ebp - 0x38 ]
mov [ ebp - 0x44 ] ecx
push eax
mov ecx esi
call sub_1000781e
mov esi [ esi + 0x10 ]
and [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x34 ]
push ecx
push eax
push esi
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
lea eax [ ebp - 0x30 ]
push eax
push [ ebp - 0x44 ]
call sub_10042d81
add esp 0x18
push eax
lea eax [ ebp - 0x40 ]
push eax
lea eax [ ebp - 0x30 ]
push eax
call sub_1002304c
or [ ebp - 0x4 ] 0xffffffff
add esp 0x10
lea ecx [ ebp - 0x38 ]
mov esi eax
mov [ ebp - 0x44 ] edx
call sub_10007806
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_1003f563
test al al
je r-xdata
lea eax [ ebp - 0x30 ]
cmp [ ebp - 0x40 ] eax
je r-xdata
or [ ebx ] 0x1
or [ ebx ] 0x2
cmp [ ebp - 0x34 ] 0x0
jne r-xdata
mov eax [ ebp - 0x44 ]
mov [ edi ] esi
mov [ edi + 0x4 ] eax
jmp r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ebp - 0x3c ]
mov [ eax ] ecx
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x4 ] ecx
call sub_10029f1f
retn 0x20
sub_10045c9b
push 0x3c
mov eax sub_1004c35e
call sub_10029e9c
mov eax [ ebp + 0x8 ]
mov esi [ ebp + 0x1c ]
mov ebx [ ebp + 0x20 ]
mov edi [ ebp + 0x24 ]
and [ ebp - 0x34 ] 0x0
mov [ ebp - 0x3c ] eax
lea eax [ ebp - 0x38 ]
mov [ ebp - 0x44 ] ecx
push eax
mov ecx esi
call sub_1000781e
mov esi [ esi + 0x10 ]
and [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x34 ]
push ecx
push eax
push esi
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
lea eax [ ebp - 0x30 ]
push eax
push [ ebp - 0x44 ]
call sub_10042d81
add esp 0x18
push eax
lea eax [ ebp - 0x40 ]
push eax
lea eax [ ebp - 0x30 ]
push eax
call sub_1002310f
or [ ebp - 0x4 ] 0xffffffff
add esp 0x10
lea ecx [ ebp - 0x38 ]
mov esi eax
mov [ ebp - 0x44 ] edx
call sub_10007806
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_1003f563
test al al
je r-xdata
lea eax [ ebp - 0x30 ]
cmp [ ebp - 0x40 ] eax
je r-xdata
or [ ebx ] 0x1
or [ ebx ] 0x2
cmp [ ebp - 0x34 ] 0x0
jne r-xdata
mov eax [ ebp - 0x44 ]
mov [ edi ] esi
mov [ edi + 0x4 ] eax
jmp r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ebp - 0x3c ]
mov [ eax ] ecx
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x4 ] ecx
call sub_10029f1f
retn 0x20
sub_10045d52
push 0x50
mov eax sub_1004b9db
call sub_10029e9c
mov edi [ ebp + 0x8 ]
mov esi [ ebp + 0x20 ]
mov ebx [ ebp + 0x24 ]
and [ ebp - 0x54 ] 0x0
lea eax [ ebp - 0x58 ]
mov [ ebp - 0x50 ] ecx
mov ecx [ ebp + 0x1c ]
push eax
call sub_1000781e
and [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x54 ]
push ecx
push eax
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
lea eax [ ebp - 0x4c ]
push eax
push [ ebp - 0x50 ]
call sub_100430d1
add esp 0x14
push eax
lea eax [ ebp - 0x5c ]
push eax
lea eax [ ebp - 0x4c ]
push eax
call sub_10023314
fstp [ ebp - 0x50 ]
or [ ebp - 0x4 ] 0xffffffff
add esp 0x10
lea ecx [ ebp - 0x58 ]
call sub_10007806
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_1003f563
test al al
je r-xdata
lea eax [ ebp - 0x4c ]
cmp [ ebp - 0x5c ] eax
je r-xdata
or [ esi ] 0x1
or [ esi ] 0x2
cmp [ ebp - 0x54 ] 0x0
jne r-xdata
fld [ ebp - 0x50 ]
fstp [ ebx ]
jmp r-xdata
mov eax [ ebp + 0xc ]
mov [ edi ] eax
mov eax [ ebp + 0x10 ]
mov [ edi + 0x4 ] eax
mov eax edi
call sub_10029f1f
retn 0x20
sub_10045dfa
push 0x54
mov eax sub_1004c331
call sub_10029e9c
mov edi [ ebp + 0x8 ]
mov esi [ ebp + 0x20 ]
mov ebx [ ebp + 0x24 ]
and [ ebp - 0x50 ] 0x0
lea eax [ ebp - 0x54 ]
mov [ ebp - 0x5c ] ecx
mov ecx [ ebp + 0x1c ]
push eax
call sub_1000781e
and [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x50 ]
push ecx
push eax
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
lea eax [ ebp - 0x4c ]
push eax
push [ ebp - 0x5c ]
call sub_100430d1
add esp 0x14
push eax
lea eax [ ebp - 0x58 ]
push eax
lea eax [ ebp - 0x4c ]
push eax
call sub_10023336
fstp [ ebp - 0x60 ]
or [ ebp - 0x4 ] 0xffffffff
add esp 0x10
lea ecx [ ebp - 0x54 ]
call sub_10007806
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_1003f563
test al al
je r-xdata
lea eax [ ebp - 0x4c ]
cmp [ ebp - 0x58 ] eax
je r-xdata
or [ esi ] 0x1
or [ esi ] 0x2
cmp [ ebp - 0x50 ] 0x0
jne r-xdata
fld [ ebp - 0x60 ]
fstp [ ebx ]
jmp r-xdata
mov eax [ ebp + 0xc ]
mov [ edi ] eax
mov eax [ ebp + 0x10 ]
mov [ edi + 0x4 ] eax
mov eax edi
call sub_10029f1f
retn 0x20
sub_10045ea2
push 0x54
mov eax sub_1004c331
call sub_10029e9c
mov edi [ ebp + 0x8 ]
mov esi [ ebp + 0x20 ]
mov ebx [ ebp + 0x24 ]
and [ ebp - 0x50 ] 0x0
lea eax [ ebp - 0x54 ]
mov [ ebp - 0x5c ] ecx
mov ecx [ ebp + 0x1c ]
push eax
call sub_1000781e
and [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x50 ]
push ecx
push eax
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
lea eax [ ebp - 0x4c ]
push eax
push [ ebp - 0x5c ]
call sub_100430d1
add esp 0x14
push eax
lea eax [ ebp - 0x58 ]
push eax
lea eax [ ebp - 0x4c ]
push eax
call sub_1002339f
fstp [ ebp - 0x60 ]
or [ ebp - 0x4 ] 0xffffffff
add esp 0x10
lea ecx [ ebp - 0x54 ]
call sub_10007806
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_1003f563
test al al
je r-xdata
lea eax [ ebp - 0x4c ]
cmp [ ebp - 0x58 ] eax
je r-xdata
or [ esi ] 0x1
or [ esi ] 0x2
cmp [ ebp - 0x50 ] 0x0
jne r-xdata
fld [ ebp - 0x60 ]
fstp [ ebx ]
jmp r-xdata
mov eax [ ebp + 0xc ]
mov [ edi ] eax
mov eax [ ebp + 0x10 ]
mov [ edi + 0x4 ] eax
mov eax edi
call sub_10029f1f
retn 0x20
sub_10045f4a
push 0x38
mov eax sub_1004ba08
call sub_10029e9c
mov ebx [ ebp + 0x8 ]
mov esi [ ebp + 0x20 ]
mov edi [ ebp + 0x24 ]
and [ ebp - 0x3c ] 0x0
lea eax [ ebp - 0x40 ]
mov [ ebp - 0x34 ] ecx
mov ecx [ ebp + 0x1c ]
push eax
call sub_1000781e
and [ ebp - 0x4 ] 0x0
push eax
push 0x800
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
lea eax [ ebp - 0x30 ]
push eax
push [ ebp - 0x34 ]
call sub_10042d81
or [ ebp - 0x4 ] 0xffffffff
add esp 0x18
lea ecx [ ebp - 0x40 ]
mov [ ebp - 0x34 ] eax
call sub_10007806
lea eax [ ebp - 0x3c ]
push eax
push [ ebp - 0x34 ]
lea eax [ ebp - 0x44 ]
push eax
lea eax [ ebp - 0x30 ]
push eax
call sub_10022e0c
and [ ebp - 0x34 ] 0x0
mov [ ebp - 0x38 ] eax
add esp 0x10
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_1003f563
test al al
je r-xdata
lea eax [ ebp - 0x30 ]
cmp [ ebp - 0x44 ] eax
je r-xdata
or [ esi ] 0x1
or [ esi ] 0x2
cmp [ ebp - 0x3c ] 0x0
jne r-xdata
mov eax [ ebp - 0x38 ]
mov [ edi ] eax
jmp r-xdata
mov eax [ ebp + 0xc ]
mov [ ebx ] eax
mov eax [ ebp + 0x10 ]
mov [ ebx + 0x4 ] eax
mov eax ebx
call sub_10029f1f
retn 0x20
sub_10046000
mov edi edi
push ebp
mov ebp esp
sub esp 0x4c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
mov esi [ ebp + 0x14 ]
mov eax [ esi + 0x10 ]
push edi
push [ ebp + 0x1c ]
mov edi [ ebp + 0x8 ]
push eax
push r--data
lea eax [ ebp - 0xc ]
mov ebx ecx
push eax
push ebx
call sub_1003e8ad
add esp 0x10
push eax
lea eax [ ebp - 0x4c ]
push 0x40
push eax
call sub_100264db
push eax
lea eax [ ebp - 0x4c ]
push eax
push [ ebp + 0x18 ]
push esi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push edi
push ebx
call sub_10043a6d
mov ecx [ ebp - 0x4 ]
add esp 0x30
mov eax edi
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_10025c8d
leave
retn 0x18
sub_1004606e
mov edi edi
push ebp
mov ebp esp
sub esp 0x4c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
mov esi [ ebp + 0x14 ]
mov eax [ esi + 0x10 ]
push edi
push [ ebp + 0x1c ]
mov edi [ ebp + 0x8 ]
push eax
push r--data
lea eax [ ebp - 0xc ]
mov ebx ecx
push eax
push ebx
call sub_1003e8ad
add esp 0x10
push eax
lea eax [ ebp - 0x4c ]
push 0x40
push eax
call sub_100264db
push eax
lea eax [ ebp - 0x4c ]
push eax
push [ ebp + 0x18 ]
push esi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push edi
push ebx
call sub_10043a6d
mov ecx [ ebp - 0x4 ]
add esp 0x30
mov eax edi
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_10025c8d
leave
retn 0x18
sub_100460dc
mov edi edi
push ebp
mov ebp esp
sub esp 0x4c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
mov esi [ ebp + 0x14 ]
mov eax [ esi + 0x10 ]
push edi
push [ ebp + 0x20 ]
mov edi [ ebp + 0x8 ]
push [ ebp + 0x1c ]
mov ebx ecx
push eax
push r--data
lea eax [ ebp - 0xc ]
push eax
push ebx
call sub_1003e8ad
add esp 0x10
push eax
lea eax [ ebp - 0x4c ]
push 0x40
push eax
call sub_100264db
push eax
lea eax [ ebp - 0x4c ]
push eax
push [ ebp + 0x18 ]
push esi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push edi
push ebx
call sub_10043a6d
mov ecx [ ebp - 0x4 ]
add esp 0x34
mov eax edi
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_10025c8d
leave
retn 0x1c
sub_1004614d
mov edi edi
push ebp
mov ebp esp
sub esp 0x4c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
mov esi [ ebp + 0x14 ]
mov eax [ esi + 0x10 ]
push edi
push [ ebp + 0x20 ]
mov edi [ ebp + 0x8 ]
push [ ebp + 0x1c ]
mov ebx ecx
push eax
push r--data
lea eax [ ebp - 0xc ]
push eax
push ebx
call sub_1003e8ad
add esp 0x10
push eax
lea eax [ ebp - 0x4c ]
push 0x40
push eax
call sub_100264db
push eax
lea eax [ ebp - 0x4c ]
push eax
push [ ebp + 0x18 ]
push esi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push edi
push ebx
call sub_10043a6d
mov ecx [ ebp - 0x4 ]
add esp 0x34
mov eax edi
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_10025c8d
leave
retn 0x1c
sub_100461be
mov edi edi
push ebp
mov ebp esp
sub esp 0x88
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebx
push esi
mov esi [ ebp + 0x14 ]
mov [ ebp - 0x84 ] ecx
mov ecx [ esi + 0x14 ]
xor ebx ebx
cmp ecx ebx
mov [ ebp - 0x88 ] eax
push edi
mov eax 0x2000
jg r-xdata
mov edi ecx
push 0x24
pop ecx
cmp edi ecx
mov [ ebp - 0x8 ] ecx
jg r-xdata
test [ esi + 0x10 ] eax
jne r-xdata
mov ecx [ esi + 0x10 ]
fld [ ebp + 0x1c ]
sub edi [ ebp - 0x8 ]
mov edx ecx
and edx 0x3000
mov [ ebp - 0x80 ] ebx
cmp edx eax
jne r-xdata
mov [ ebp - 0x8 ] edi
push 0x6
pop ecx
push ecx
push ecx
fstp [ esp ]
push [ ebp - 0x8 ]
lea eax [ ebp - 0xc ]
push ecx
push 0x0
push eax
push [ ebp - 0x84 ]
call sub_1003e846
add esp 0x10
push eax
lea eax [ ebp - 0x78 ]
push 0x6c
push eax
call sub_100264db
push eax
push edi
push ebx
push [ ebp - 0x80 ]
lea eax [ ebp - 0x78 ]
push eax
push [ ebp + 0x18 ]
push esi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp - 0x88 ]
push [ ebp - 0x84 ]
call sub_10043621
mov ecx [ ebp - 0x4 ]
mov eax [ ebp - 0x88 ]
add esp 0x44
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_10025c8d
leave
retn 0x1c
fld [ r--data ]
fmul st1
fucomp st1
fnstsw ax
test ah 0x44
jpo r-xdata
fldz
fcom st1
fnstsw ax
test ah 0x41
jne r-xdata
mov [ ebp - 0x79 ] bl
fxch st1
fxch st1
mov [ ebp - 0x79 ] 0x1
fchs
jmp r-xdata
cmp [ ebp - 0x80 ] 0x1388
jae r-xdata
fstp st1
jmp r-xdata
fld [ r--data ]
push 0xa
fcom st1
pop edx
fnstsw ax
fld [ r--data ]
test ah 0x41
jpo r-xdata
fdiv st2
add [ ebp - 0x80 ] edx
fxch st1
fcom st2
fnstsw ax
test ah 0x41
jpo r-xdata
fxch st2
fcomp st1
fnstsw ax
test ah 0x5
jpe r-xdata
fxch st1
fstp st0
cmp [ ebp - 0x79 ] 0x0
fstp st1
je r-xdata
cmp edi edx
jl r-xdata
fchs
fld [ r--data ]
fcomp st1
fnstsw ax
test ah 0x1
jne r-xdata
cmp ebx 0x1388
jae r-xdata
sub edi edx
fmul st1
add ebx edx
jmp r-xdata
sub_10046331
mov edi edi
push ebp
mov ebp esp
sub esp 0x8c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push esi
mov esi [ ebp + 0x14 ]
mov [ ebp - 0x88 ] ecx
mov ecx [ esi + 0x14 ]
mov [ ebp - 0x8c ] eax
push edi
mov eax 0x2000
test ecx ecx
jg r-xdata
mov edi ecx
push 0x24
pop ecx
cmp edi ecx
mov [ ebp - 0x8 ] ecx
jg r-xdata
test [ esi + 0x10 ] eax
jne r-xdata
mov ecx [ esi + 0x10 ]
sub edi [ ebp - 0x8 ]
and [ ebp - 0x80 ] 0x0
and [ ebp - 0x84 ] 0x0
mov edx ecx
and edx 0x3000
cmp edx eax
jne r-xdata
mov [ ebp - 0x8 ] edi
push 0x6
pop ecx
fld [ ebp + 0x1c ]
fldz
fld [ ebp + 0x1c ]
fcom st1
fnstsw ax
test ah 0x5
jpe r-xdata
mov [ ebp - 0x79 ] 0x0
jmp r-xdata
mov [ ebp - 0x79 ] 0x1
fchs
fld [ r--data ]
push ebx
fcom st1
push 0xa
mov ebx 0x1388
pop edx
fnstsw ax
fld [ r--data ]
test ah 0x41
jpo r-xdata
cmp [ ebp - 0x80 ] ebx
jae r-xdata
fstp st1
jmp r-xdata
fdiv st2
add [ ebp - 0x80 ] edx
fxch st1
fcom st2
fnstsw ax
test ah 0x41
jpo r-xdata
fxch st2
fcomp st1
fnstsw ax
test ah 0x5
jpe r-xdata
fxch st1
fstp st0
cmp [ ebp - 0x79 ] 0x0
fstp st1
pop ebx
je r-xdata
cmp edi edx
jl r-xdata
push ecx
push ecx
fstp [ esp ]
push [ ebp - 0x8 ]
lea eax [ ebp - 0xc ]
push ecx
push 0x4c
push eax
push [ ebp - 0x88 ]
call sub_1003e846
add esp 0x10
push eax
lea eax [ ebp - 0x78 ]
push 0x6c
push eax
call sub_100264db
push eax
push edi
push [ ebp - 0x84 ]
lea eax [ ebp - 0x78 ]
push [ ebp - 0x80 ]
push eax
push [ ebp + 0x18 ]
push esi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp - 0x8c ]
push [ ebp - 0x88 ]
call sub_10043621
mov ecx [ ebp - 0x4 ]
mov eax [ ebp - 0x8c ]
add esp 0x44
pop edi
xor ecx ebp
pop esi
call sub_10025c8d
leave
retn 0x1c
fchs
jmp r-xdata
fld [ r--data ]
fcomp st1
fnstsw ax
test ah 0x1
jne r-xdata
cmp [ ebp - 0x84 ] ebx
jae r-xdata
sub edi edx
fmul st1
add [ ebp - 0x84 ] edx
jmp r-xdata
sub_100464a1
mov edi edi
push ebp
mov ebp esp
sub esp 0x44
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x1c ]
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi [ ebp + 0x14 ]
push eax
push r--data
lea eax [ ebp - 0x44 ]
push 0x40
push eax
mov ebx ecx
call sub_100264db
push eax
lea eax [ ebp - 0x44 ]
push eax
push [ ebp + 0x18 ]
push edi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
push ebx
call sub_10043a6d
mov ecx [ ebp - 0x4 ]
add esp 0x30
pop edi
mov eax esi
pop esi
xor ecx ebp
pop ebx
call sub_10025c8d
leave
retn 0x18
sub_100464fe
push 0x54
mov eax sub_1004ba3d
call sub_10029e9c
mov eax [ ebp + 0x20 ]
mov ebx [ ebp + 0x8 ]
mov edi [ ebp + 0x24 ]
push eax
push [ ebp + 0x1c ]
lea eax [ ebp + 0x14 ]
push eax
mov esi ecx
mov ecx [ ebp + 0x28 ]
lea eax [ ebp + 0xc ]
push eax
lea eax [ ebp - 0x2c ]
mov [ ebp - 0x60 ] ecx
push eax
mov ecx esi
mov [ ebp - 0x5c ] ebx
call sub_10043c59
and [ ebp - 0x4 ] 0x0
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_1003f563
test al al
je r-xdata
cmp [ ebp - 0x18 ] 0x0
jne r-xdata
or [ edi ] 0x1
add esi 0x8
push esi
push 0x0
push 0x30
call sub_1003de15
add esp 0xc
lea ecx [ ebp - 0x48 ]
movzx ebx ax
call sub_10007bb4
push [ ebp - 0x18 ]
lea ecx [ ebp - 0x48 ]
mov [ ebp - 0x4 ] 0x1
call sub_1000670c
xor esi esi
push esi
lea ecx [ ebp - 0x2c ]
call sub_1003ef0d
cmp [ eax ] bx
jb r-xdata
or [ edi ] 0x2
jmp r-xdata
xor esi esi
push 0x2d
inc esi
push esi
lea ecx [ ebp - 0x48 ]
call sub_10005b68
push esi
lea ecx [ ebp - 0x2c ]
call sub_1003ef0d
movzx eax [ eax ]
movzx ecx bx
add ecx 0x9
cmp ecx eax
jge r-xdata
mov eax [ ebp + 0xc ]
mov [ ebx ] eax
mov eax [ ebp + 0x10 ]
push 0x0
push 0x1
lea ecx [ ebp - 0x2c ]
mov [ ebx + 0x4 ] eax
call sub_1003f79e
mov eax ebx
call sub_10029f1f
retn 0x24
cmp [ ebp - 0x30 ] 0x10
mov esi [ ebp - 0x44 ]
jae r-xdata
mov [ ebp - 0x49 ] 0x30
sub [ ebp - 0x49 ] bl
cmp esi [ ebp - 0x18 ]
jae r-xdata
lea eax [ ebp - 0x50 ]
push eax
xor ebx ebx
push ebx
lea eax [ ebp - 0x54 ]
push eax
push esi
mov [ ebp - 0x50 ] ebx
call sub_1002339f
add esp 0x10
cmp [ ebp - 0x54 ] esi
je r-xdata
lea esi [ ebp - 0x44 ]
push esi
lea ecx [ ebp - 0x2c ]
call sub_1003ef0d
mov al [ eax ]
add al [ ebp - 0x49 ]
lea ecx [ ebp - 0x48 ]
mov [ ebp - 0x58 ] al
push [ ebp - 0x58 ]
push 0x1
call sub_10005b68
inc esi
cmp esi [ ebp - 0x18 ]
jb r-xdata
or [ edi ] 0x2
fstp st0
cmp [ ebp - 0x50 ] ebx
jne r-xdata
mov eax [ ebp - 0x60 ]
fstp [ eax ]
jmp r-xdata
push ebx
push 0x1
lea ecx [ ebp - 0x48 ]
call sub_100022b5
mov ebx [ ebp - 0x5c ]
sub_10046650
push 0x20
mov eax sub_1004ba6a
call sub_10029e9c
mov eax [ ebp + 0x20 ]
mov edi [ ebp + 0x8 ]
mov esi [ ebp + 0x24 ]
mov ebx [ ebp + 0x28 ]
push eax
push [ ebp + 0x1c ]
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
lea eax [ ebp - 0x2c ]
push eax
call sub_10043c59
and [ ebp - 0x4 ] 0x0
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_1003f563
test al al
je r-xdata
cmp [ ebp - 0x18 ] 0x0
jne r-xdata
or [ esi ] 0x1
push 0xffffffff
push 0x0
lea eax [ ebp - 0x2c ]
push eax
mov ecx ebx
call sub_1003fce9
or [ esi ] 0x2
jmp r-xdata
mov eax [ ebp + 0xc ]
mov [ edi ] eax
mov eax [ ebp + 0x10 ]
push 0x0
push 0x1
lea ecx [ ebp - 0x2c ]
mov [ edi + 0x4 ] eax
call sub_1003f79e
mov eax edi
call sub_10029f1f
retn 0x24
sub_100466cf
push 0x54
mov eax sub_1004ba97
call sub_10029e9c
fldz
xor ebx ebx
fcomp [ ebp + 0x20 ]
mov edi ecx
mov [ ebp - 0x60 ] bl
fnstsw ax
test ah 0x41
jne r-xdata
fld [ ebp + 0x20 ]
mov [ ebp - 0x58 ] ebx
fld [ r--data ]
fcom st1
fnstsw ax
fstp st1
test ah 0x41
jpe r-xdata
fld [ ebp + 0x20 ]
mov [ ebp - 0x60 ] 0x1
fchs
fstp [ ebp + 0x20 ]
lea ecx [ ebp - 0x54 ]
fstp st0
call sub_1003fa7b
fld [ ebp + 0x20 ]
push ecx
push ecx
fstp [ esp ]
push r--data
lea eax [ ebp - 0x38 ]
push 0x28
push eax
mov [ ebp - 0x4 ] ebx
call sub_100264db
add esp 0x14
xor esi esi
cmp eax ebx
mov [ ebp - 0x5c ] eax
jle r-xdata
cmp [ ebp - 0x58 ] 0x1388
jae r-xdata
lea eax [ edi + 0x8 ]
push eax
push ebx
push 0x30
call sub_1003de15
movzx eax ax
add esp 0xc
push eax
push [ ebp - 0x58 ]
lea ecx [ ebp - 0x54 ]
call sub_1003fbf7
sub esp 0x1c
lea eax [ ebp - 0x54 ]
mov ecx esp
mov [ ebp - 0x5c ] esp
push eax
call sub_1004037c
push [ ebp - 0x60 ]
mov ecx edi
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_100444d7
push ebx
push 0x1
lea ecx [ ebp - 0x54 ]
call sub_1003f79e
mov eax [ ebp + 0x8 ]
call sub_10029f1f
retn 0x20
lea eax [ edi + 0x8 ]
push eax
movzx eax [ ebp + esi - 0x38 ]
push ebx
push eax
call sub_1003de15
movzx eax ax
add esp 0xc
push eax
push 0x1
lea ecx [ ebp - 0x54 ]
call sub_1003fbf7
inc esi
cmp esi [ ebp - 0x5c ]
jl r-xdata
fld [ ebp + 0x20 ]
add [ ebp - 0x58 ] 0xa
fdiv [ r--data ]
fstp [ ebp + 0x20 ]
fld [ ebp + 0x20 ]
fcomp st1
fnstsw ax
test ah 0x1
je r-xdata
sub_100467ef
push 0x2c
mov eax sub_1004bac4
call sub_10029e9c
mov esi [ ebp + 0x20 ]
mov edi ecx
mov [ ebp - 0x34 ] edi
add edi 0x8
push edi
push 0x0
push 0x30
call sub_1003de15
add esp 0xc
cmp [ esi + 0x18 ] 0x8
movzx ebx ax
jb r-xdata
add esi 0x4
mov esi [ esi + 0x4 ]
jmp r-xdata
movzx eax [ esi ]
cmp bx ax
ja r-xdata
inc esi
mov [ ebp - 0x30 ] 0x1
inc esi
push edi
xor edi edi
push edi
push 0x2d
mov [ ebp - 0x30 ] 0x0
call sub_1003de15
add esp 0xc
cmp [ esi ] ax
jne r-xdata
push edi
push esi
lea ecx [ ebp - 0x2c ]
call sub_10040301
and [ ebp - 0x4 ] 0x0
test edi edi
jne r-xdata
movzx ecx bx
movzx eax ax
add ecx 0x9
sub esp 0x1c
lea eax [ ebp - 0x2c ]
mov ecx esp
mov [ ebp - 0x38 ] esp
push eax
call sub_1004037c
push [ ebp - 0x30 ]
mov ecx [ ebp - 0x34 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_100444d7
push 0x0
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_1003f79e
mov eax [ ebp + 0x8 ]
call sub_10029f1f
retn 0x1c
push ebx
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_1003fbf7
inc edi
movzx eax [ esi + edi * 2 ]
cmp bx ax
jbe r-xdata
movzx eax ax
cmp eax ecx
jg r-xdata
sub_100468c5
push 0x4
mov eax sub_1004b33e
call sub_10029e33
mov esi ecx
mov [ ebp - 0x10 ] esi
mov eax [ ebp + 0xc ]
mov [ esi + 0x4 ] eax
push [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
mov [ esi ] r--data
call sub_10044a25
mov eax esi
call sub_10029f0b
retn 0x8
sub_10046910
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_100468f8
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_10025c9c
pop ecx
sub_10046931
mov edi edi
push ebp
mov ebp esp
sub esp 0x3c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0x10 ]
push ebx
push esi
mov esi [ ebp + 0xc ]
push edi
lea ebx [ eax + 0x14 ]
push ebx
mov [ ebp - 0x28 ] ecx
mov ecx [ ebp + 0x1c ]
push 0x0
push 0x30
mov [ ebp - 0x38 ] ecx
mov [ ebp - 0x34 ] ebx
call sub_1003de15
add esp 0xc
push [ ebp - 0x28 ]
movzx eax ax
mov ecx esi
mov [ ebp - 0x2c ] eax
lea edi [ ebp - 0x24 ]
call sub_1003f563
test al al
jne r-xdata
push [ ebp - 0x28 ]
xor bl bl
push esi
call sub_1003f930
pop ecx
pop ecx
test al al
je r-xdata
push ebx
push 0x0
push 0x2b
call sub_1003de15
add esp 0xc
mov ecx esi
mov bx ax
call sub_1003f6dc
cmp ax bx
jne r-xdata
push [ ebp - 0x28 ]
push esi
call sub_1003f930
pop ecx
pop ecx
test al al
jne r-xdata
mov ecx esi
call sub_1003f6dc
cmp ax [ ebp - 0x2c ]
jne r-xdata
push [ ebp - 0x34 ]
push 0x0
push 0x2d
call sub_1003de15
add esp 0xc
mov ecx esi
mov bx ax
call sub_1003f6dc
cmp ax bx
jne r-xdata
mov [ ebp - 0x24 ] 0x2b
jmp r-xdata
mov ecx esi
call sub_1003f6dc
cmp [ ebp - 0x2c ] ax
ja r-xdata
test bl bl
jne r-xdata
test bl bl
je r-xdata
mov ecx esi
mov bl 0x1
call sub_1003f483
push [ ebp - 0x28 ]
push esi
call sub_1003f930
pop ecx
pop ecx
test al al
jne r-xdata
mov [ ebp - 0x24 ] 0x2d
mov ecx esi
lea edi [ ebp - 0x23 ]
call sub_1003f483
mov ecx esi
call sub_1003f6dc
movzx ecx [ ebp - 0x2c ]
movzx eax ax
add ecx 0x9
cmp eax ecx
jg r-xdata
lea eax [ ebp - 0x30 ]
push eax
push 0xa
lea eax [ ebp - 0x3c ]
push eax
lea eax [ ebp - 0x24 ]
xor ebx ebx
push eax
mov [ edi ] 0x0
mov [ ebp - 0x30 ] ebx
call sub_10022fa7
add esp 0x10
push [ ebp - 0x28 ]
mov ecx esi
mov edi eax
call sub_1003f563
test al al
je r-xdata
lea edi [ ebp - 0x24 ]
mov [ edi ] 0x30
inc edi
jmp r-xdata
mov ecx esi
call sub_1003f6dc
mov cl 0x30
sub cl [ ebp - 0x2c ]
add al cl
mov [ edi ] al
lea eax [ ebp - 0x5 ]
cmp edi eax
jae r-xdata
lea eax [ ebp - 0x24 ]
cmp [ ebp - 0x3c ] eax
je r-xdata
inc ebx
mov ecx esi
mov bl 0x1
call sub_1003f483
inc edi
or ebx 0x2
cmp [ ebp - 0x30 ] 0x0
jne r-xdata
cmp edi [ ebp + 0x14 ]
jl r-xdata
cmp [ ebp + 0x18 ] edi
jl r-xdata
mov eax [ ebp - 0x38 ]
mov [ eax ] edi
jmp r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
mov eax ebx
xor ecx ebp
pop ebx
call sub_10025c8d
leave
retn
sub_10046acb
mov edi edi
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi ecx
lea eax [ edi + 0x14 ]
push eax
push 0x0
push 0x3a
call sub_1003de15
mov ebx [ ebp + 0x24 ]
movzx eax ax
mov [ ebp - 0x4 ] eax
lea eax [ ebx + 0x8 ]
push eax
push 0x17
push 0x0
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
push edi
call sub_10046931
mov esi [ ebp + 0x20 ]
add esp 0x24
or [ esi ] eax
jne r-xdata
or [ esi ] 0x2
lea ecx [ ebp + 0xc ]
call sub_1003f6dc
cmp ax [ ebp - 0x4 ]
jne r-xdata
or [ esi ] 0x2
lea ecx [ ebp + 0xc ]
call sub_1003f6dc
cmp ax [ ebp - 0x4 ]
jne r-xdata
lea ecx [ ebp + 0xc ]
call sub_1003f483
lea eax [ ebx + 0x4 ]
push eax
push 0x3b
push 0x0
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
push edi
call sub_10046931
add esp 0x18
or [ esi ] eax
jmp r-xdata
lea ecx [ ebp + 0xc ]
call sub_1003f483
push ebx
push 0x3b
push 0x0
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
push edi
call sub_10046931
add esp 0x18
or [ esi ] eax
jmp r-xdata
cmp [ esi ] 0x0
jne r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
pop edi
mov [ eax ] ecx
mov ecx [ ebp + 0x10 ]
pop esi
mov [ eax + 0x4 ] ecx
pop ebx
leave
retn 0x20
sub_10046b8f
mov edi edi
push ebp
mov ebp esp
sub esp 0x20
push ebx
push esi
push edi
mov edi ecx
lea esi [ edi + 0x14 ]
push esi
xor ebx ebx
push ebx
push 0x30
call sub_1003de15
push esi
movzx eax ax
push ebx
push 0x3a
mov [ ebp - 0x8 ] eax
call sub_1003de15
push esi
movzx eax ax
push ebx
push 0x2c
mov [ ebp - 0x10 ] eax
call sub_1003de15
push esi
movzx eax ax
push ebx
push 0x2f
mov [ ebp - 0x14 ] eax
call sub_1003de15
push esi
movzx eax ax
push ebx
push 0x20
mov [ ebp - 0x18 ] eax
call sub_1003de15
movzx eax ax
mov [ ebp - 0xc ] eax
mov eax [ edi ]
add esp 0x3c
mov ecx edi
call [ eax + 0x4 ]
mov [ ebp - 0x4 ] eax
cmp eax ebx
jne r-xdata
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_1003f563
mov ebx [ ebp + 0x24 ]
mov esi [ ebp + 0x20 ]
test al al
jne r-xdata
mov [ ebp - 0x4 ] 0x2
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
call sub_1003f930
pop ecx
pop ecx
test al al
jne r-xdata
lea ecx [ ebp + 0xc ]
call sub_1003f6dc
cmp ax [ ebp - 0x8 ]
jb r-xdata
lea ecx [ ebp + 0xc ]
call sub_1003f6dc
cmp ax [ ebp - 0xc ]
jne r-xdata
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
call sub_1003f930
pop ecx
pop ecx
test al al
je r-xdata
push ebx
push esi
push [ ebp + 0x1c ]
lea eax [ ebp - 0x20 ]
push [ ebp + 0x18 ]
mov ecx edi
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call sub_10044ea2
mov [ ebp - 0x4 ] 0x2
lea ecx [ ebp + 0xc ]
call sub_1003f6dc
movzx ecx [ ebp - 0x8 ]
movzx eax ax
add ecx 0x9
cmp ecx eax
jl r-xdata
lea ecx [ ebp + 0xc ]
call sub_1003f483
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
call sub_1003f930
pop ecx
pop ecx
test al al
jne r-xdata
lea ecx [ ebp + 0xc ]
call sub_1003f6dc
cmp ax [ ebp - 0x10 ]
je r-xdata
cmp [ ebp - 0x4 ] 0x2
jne r-xdata
lea ecx [ ebp + 0xc ]
call sub_1003f6dc
cmp ax [ ebp - 0xc ]
jne r-xdata
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_1003f563
test al al
jne r-xdata
lea ecx [ ebp + 0xc ]
call sub_1003f483
lea ecx [ ebp + 0xc ]
call sub_1003f6dc
cmp ax [ ebp - 0x14 ]
je r-xdata
cmp [ ebp - 0x4 ] 0x1
jne r-xdata
lea eax [ ebx + 0x10 ]
push eax
push 0xc
push 0x1
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
push edi
call sub_10046931
or [ esi ] eax
add esp 0x18
dec [ ebx + 0x10 ]
jmp r-xdata
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
call sub_1003f930
pop ecx
pop ecx
test al al
jne r-xdata
lea ecx [ ebp + 0xc ]
call sub_1003f6dc
cmp ax [ ebp - 0x8 ]
jb r-xdata
lea ecx [ ebp + 0xc ]
call sub_1003f6dc
cmp ax [ ebp - 0x18 ]
jne r-xdata
push ebx
push esi
push [ ebp + 0x1c ]
lea eax [ ebp - 0x20 ]
push [ ebp + 0x18 ]
mov ecx edi
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call sub_10044ecb
jmp r-xdata
lea eax [ ebx + 0xc ]
push eax
push 0x1f
push 0x1
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
push edi
call sub_10046931
add esp 0x18
or [ esi ] eax
jmp r-xdata
lea ecx [ ebp + 0xc ]
call sub_1003f6dc
cmp ax [ ebp - 0xc ]
jne r-xdata
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
call sub_1003f930
pop ecx
pop ecx
test al al
je r-xdata
cmp [ ebp - 0x4 ] 0x2
jne r-xdata
lea ecx [ ebp + 0xc ]
call sub_1003f6dc
movzx ecx [ ebp - 0x8 ]
movzx eax ax
add ecx 0x9
cmp ecx eax
jl r-xdata
jmp r-xdata
mov ecx [ eax ]
mov [ ebp + 0xc ] ecx
mov eax [ eax + 0x4 ]
mov [ ebp + 0x10 ] eax
jmp r-xdata
lea ecx [ ebp + 0xc ]
call sub_1003f483
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
call sub_1003f930
pop ecx
pop ecx
test al al
jne r-xdata
lea ecx [ ebp + 0xc ]
call sub_1003f6dc
cmp ax [ ebp - 0x10 ]
je r-xdata
push ebx
push esi
push [ ebp + 0x1c ]
lea eax [ ebp - 0x20 ]
push [ ebp + 0x18 ]
mov ecx edi
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call sub_10044ea2
cmp [ ebp - 0x4 ] 0x4
mov ecx [ eax ]
mov [ ebp + 0xc ] ecx
mov eax [ eax + 0x4 ]
mov [ ebp + 0x10 ] eax
jne r-xdata
or [ esi ] 0x2
jmp r-xdata
cmp [ ebp - 0x4 ] 0x1
je r-xdata
lea ecx [ ebp + 0xc ]
call sub_1003f6dc
cmp ax [ ebp - 0xc ]
jne r-xdata
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_1003f563
test al al
jne r-xdata
lea ecx [ ebp + 0xc ]
call sub_1003f483
lea ecx [ ebp + 0xc ]
call sub_1003f6dc
cmp ax [ ebp - 0x14 ]
je r-xdata
mov [ ebp - 0x4 ] 0x3
jmp r-xdata
lea eax [ ebx + 0x10 ]
push eax
push 0xc
push 0x1
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
push edi
call sub_10046931
or [ esi ] eax
add esp 0x18
dec [ ebx + 0x10 ]
jmp r-xdata
cmp [ ebp - 0x4 ] 0x3
je r-xdata
or [ esi ] 0x2
jmp r-xdata
lea ecx [ ebp + 0xc ]
call sub_1003f6dc
cmp ax [ ebp - 0x8 ]
jb r-xdata
lea ecx [ ebp + 0xc ]
call sub_1003f6dc
cmp ax [ ebp - 0x18 ]
jne r-xdata
lea eax [ ebx + 0xc ]
push eax
push 0x1f
push 0x1
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
push edi
call sub_10046931
add esp 0x18
or [ esi ] eax
jmp r-xdata
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_1003f563
test al al
je r-xdata
cmp [ ebp - 0x4 ] 0x4
je r-xdata
lea ecx [ ebp + 0xc ]
call sub_1003f6dc
movzx ecx [ ebp - 0x8 ]
movzx eax ax
add ecx 0x9
cmp ecx eax
jl r-xdata
jmp r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
pop edi
mov [ eax ] ecx
mov ecx [ ebp + 0x10 ]
pop esi
mov [ eax + 0x4 ] ecx
pop ebx
leave
retn 0x20
or [ esi ] 0x1
push ebx
push esi
push [ ebp + 0x1c ]
lea eax [ ebp - 0x20 ]
push [ ebp + 0x18 ]
mov ecx edi
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call sub_10044ea2
cmp [ ebp - 0x4 ] 0x4
jne r-xdata
cmp [ ebp - 0x4 ] 0x3
jne r-xdata
add ebx 0x10
push ebx
push 0xc
push 0x1
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
push edi
call sub_10046931
or [ esi ] eax
add esp 0x18
dec [ ebx ]
jmp r-xdata
push ebx
push esi
push [ ebp + 0x1c ]
lea eax [ ebp - 0x20 ]
push [ ebp + 0x18 ]
mov ecx edi
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call sub_10044ecb
jmp r-xdata
add ebx 0xc
push ebx
push 0x1f
push 0x1
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
push edi
call sub_10046931
add esp 0x18
or [ esi ] eax
jmp r-xdata
mov ecx [ eax ]
mov [ ebp + 0xc ] ecx
mov eax [ eax + 0x4 ]
mov [ ebp + 0x10 ] eax
sub_10046fbc
mov edi edi
push ebp
mov ebp esp
push ecx
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x4 ]
push eax
push 0x7f3
push 0x0
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
push ecx
call sub_10046931
mov ecx [ ebp + 0x20 ]
or [ ecx ] eax
mov eax [ ecx ]
add esp 0x18
test al 0x2
jne r-xdata
test [ ecx ] 0x2
jne r-xdata
mov edx 0x76c
cmp [ ebp - 0x4 ] edx
jl r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x4 ] ecx
leave
retn 0x20
mov eax [ ebp + 0x24 ]
mov ecx [ ebp - 0x4 ]
mov [ eax + 0x14 ] ecx
cmp [ ebp - 0x4 ] 0x87
jle r-xdata
sub [ ebp - 0x4 ] edx
jmp r-xdata
or eax 0x2
mov [ ecx ] eax
sub_1004702a
mov edi edi
push ebp
mov ebp esp
push [ ecx + 0x8 ]
lea eax [ ebp + 0x14 ]
push 0x0
push eax
lea eax [ ebp + 0xc ]
push eax
call sub_1003ff1e
add esp 0x10
test eax eax
jge r-xdata
mov ecx [ ebp + 0x24 ]
sar eax 0x1
mov [ ecx + 0x18 ] eax
mov eax [ ebp + 0x20 ]
or [ eax ] 0x2
jmp r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x4 ] ecx
pop ebp
retn 0x20
sub_1004706a
mov edi edi
push ebp
mov ebp esp
push [ ecx + 0xc ]
lea eax [ ebp + 0x14 ]
push 0x0
push eax
lea eax [ ebp + 0xc ]
push eax
call sub_1003ff1e
add esp 0x10
test eax eax
jge r-xdata
mov ecx [ ebp + 0x24 ]
sar eax 0x1
mov [ ecx + 0x10 ] eax
mov eax [ ebp + 0x20 ]
or [ eax ] 0x2
jmp r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x4 ] ecx
pop ebp
retn 0x20
sub_100470aa
push 0x98
mov eax sub_1004bb28
call sub_10029e33
mov eax [ ebp + 0x8 ]
xor edi edi
mov [ ebp - 0x10 ] edi
cmp eax edi
je r-xdata
push 0x5
pop eax
call sub_10029f0b
retn
cmp [ eax ] edi
jne r-xdata
push 0x1c
call sub_10025dd6
pop ecx
mov [ ebp - 0x14 ] eax
push 0x3
mov [ ebp - 0x4 ] edi
pop esi
cmp eax edi
je r-xdata
xor eax eax
mov ecx [ ebp + 0xc ]
lea eax [ ebp - 0x30 ]
push eax
call sub_100073c0
push eax
lea ecx [ ebp - 0xa4 ]
mov [ ebp - 0x4 ] 0x1
mov [ ebp - 0x10 ] 0x1
call sub_1000736b
mov ecx [ ebp - 0x14 ]
push edi
push eax
mov [ ebp - 0x4 ] 0x2
mov [ ebp - 0x10 ] esi
call sub_100468c5
jmp r-xdata
test [ ebp - 0x10 ] 0x1
je r-xdata
and [ ebp - 0x10 ] 0xfffffffd
lea ecx [ ebp - 0xa4 ]
call sub_100073dd
test [ ebp - 0x10 ] 0x2
mov ecx [ ebp + 0x8 ]
mov [ ecx ] eax
mov [ ebp - 0x4 ] esi
je r-xdata
push edi
push 0x1
lea ecx [ ebp - 0x30 ]
call sub_100022b5
sub_10047154
push 0x14
mov eax sub_1004b452
call sub_10029e33
push 0x0
lea ecx [ ebp - 0x14 ]
call sub_10022437
mov esi [ rw-data ]
and [ ebp - 0x4 ] 0x0
mov ecx rw-data
mov [ ebp - 0x10 ] esi
call sub_10007004
mov ecx [ ebp + 0x8 ]
push eax
call sub_10007039
mov edi eax
test edi edi
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
call sub_1002245f
mov eax edi
call sub_10029f0b
retn
test esi esi
je r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
push eax
call sub_100456a6
pop ecx
pop ecx
cmp eax 0xffffffff
jne r-xdata
mov edi esi
jmp r-xdata
mov edi [ ebp - 0x10 ]
mov ecx edi
mov [ rw-data ] edi
call sub_1000778d
push edi
call sub_10022634
pop ecx
push r--data
lea ecx [ ebp - 0x20 ]
call sub_10025f3c
push r--data
lea eax [ ebp - 0x20 ]
push eax
call sub_10029a01
sub_100471f1
push 0x14
mov eax sub_1004b452
call sub_10029e33
push 0x0
lea ecx [ ebp - 0x14 ]
call sub_10022437
mov esi [ rw-data ]
and [ ebp - 0x4 ] 0x0
mov ecx rw-data
mov [ ebp - 0x10 ] esi
call sub_10007004
mov ecx [ ebp + 0x8 ]
push eax
call sub_10007039
mov edi eax
test edi edi
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
call sub_1002245f
mov eax edi
call sub_10029f0b
retn
test esi esi
je r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
push eax
call sub_100470aa
pop ecx
pop ecx
cmp eax 0xffffffff
jne r-xdata
mov edi esi
jmp r-xdata
mov edi [ ebp - 0x10 ]
mov ecx edi
mov [ rw-data ] edi
call sub_1000778d
push edi
call sub_10022634
pop ecx
push r--data
lea ecx [ ebp - 0x20 ]
call sub_10025f3c
push r--data
lea eax [ ebp - 0x20 ]
push eax
call sub_10029a01
sub_1004728e
push 0x8
mov eax sub_1004bb6e
call sub_10029e33
xor edi edi
mov [ ebp - 0x10 ] edi
mov eax [ ebp + 0xc ]
and eax 0x2
mov [ ebp - 0x10 ] eax
je r-xdata
mov ebx [ ebp + 0xc ]
and ebx 0x8
je r-xdata
cmp [ ebp + 0x14 ] edi
jne r-xdata
cmp ebx edi
je r-xdata
cmp [ ebp + 0x14 ] edi
jne r-xdata
mov ecx rw-data
call sub_10007004
push eax
push [ ebp + 0x14 ]
call sub_100074de
pop ecx
push eax
push 0x20
call sub_10025dd6
pop ecx
cmp eax edi
je r-xdata
test [ ebp + 0xc ] 0x1
je r-xdata
cmp [ ebp + 0x14 ] edi
jne r-xdata
mov ecx rw-data
call sub_10007004
push eax
push [ ebp + 0x14 ]
call sub_10005f87
pop ecx
push eax
push 0x10
call sub_10025dd6
pop ecx
cmp eax edi
je r-xdata
xor esi esi
push edi
push [ ebp + 0x8 ]
mov ecx eax
call sub_1000734c
mov esi eax
jmp r-xdata
test [ ebp + 0xc ] 0x20
je r-xdata
cmp [ ebp + 0x14 ] edi
jne r-xdata
mov ecx rw-data
call sub_10007004
push eax
push [ ebp + 0x14 ]
call sub_10005ee7
pop ecx
push eax
push 0x10
call sub_10025dd6
pop ecx
cmp eax edi
je r-xdata
xor esi esi
push edi
push [ ebp + 0x8 ]
mov ecx eax
call sub_100064d7
mov esi eax
jmp r-xdata
mov ecx [ ebp + 0x10 ]
call sub_100242cf
mov ecx rw-data
call sub_10007004
push eax
push esi
jmp r-xdata
mov ebx [ ebp + 0xc ]
and ebx 0x4
je r-xdata
cmp [ ebp + 0x14 ] edi
jne r-xdata
mov ecx rw-data
call sub_10007004
push eax
push [ ebp + 0x14 ]
call sub_10041261
pop ecx
push eax
push 0x10
call sub_10025dd6
pop ecx
cmp eax edi
je r-xdata
cmp [ ebp + 0x14 ] edi
jne r-xdata
xor esi esi
push edi
push [ ebp + 0x8 ]
mov ecx eax
call sub_100064b6
mov esi eax
jmp r-xdata
mov ecx [ ebp + 0x10 ]
call sub_100242cf
mov ecx rw-data
call sub_10007004
push eax
push esi
jmp r-xdata
cmp ebx edi
je r-xdata
cmp [ ebp + 0x14 ] edi
jne r-xdata
mov ecx rw-data
call sub_10007004
push eax
push [ ebp + 0x14 ]
call sub_100412fe
pop ecx
push eax
push 0x8
call sub_10025dd6
pop ecx
cmp eax edi
je r-xdata
xor esi esi
push edi
push [ ebp + 0x8 ]
mov ecx eax
call sub_1003e62c
mov esi eax
jmp r-xdata
mov ecx rw-data
call sub_10007004
push eax
push [ ebp + 0x14 ]
call sub_10006086
pop ecx
push eax
push 0x18
call sub_10025dd6
pop ecx
mov ecx eax
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x4 ] 0xe
cmp ecx edi
je r-xdata
mov ecx [ ebp + 0x10 ]
call sub_100242cf
cmp ebx edi
je r-xdata
mov ecx rw-data
call sub_10007004
push eax
push esi
jmp r-xdata
mov ebx [ ebp + 0xc ]
and ebx 0x10
je r-xdata
cmp [ ebp + 0x14 ] edi
jne r-xdata
mov ecx rw-data
call sub_10007004
push eax
push [ ebp + 0x14 ]
call sub_1004139b
pop ecx
push eax
push 0x10
call sub_10025dd6
pop ecx
cmp eax edi
je r-xdata
xor esi esi
mov [ eax + 0x4 ] edi
mov [ eax ] r--data
mov esi eax
jmp r-xdata
mov ecx [ ebp + 0x10 ]
call sub_100242cf
mov ecx rw-data
call sub_10007004
push eax
push esi
jmp r-xdata
xor esi esi
push edi
push edi
push [ ebp + 0x8 ]
call sub_100064f8
mov esi eax
jmp r-xdata
cmp ebx edi
je r-xdata
cmp [ ebp + 0x14 ] edi
jne r-xdata
mov ecx rw-data
call sub_10007004
push eax
push [ ebp + 0x14 ]
call sub_10041438
pop ecx
push eax
push 0x10
call sub_10025dd6
pop ecx
cmp eax edi
je r-xdata
xor esi esi
push edi
push [ ebp + 0x8 ]
mov ecx eax
call sub_1003e692
mov esi eax
jmp r-xdata
mov ecx [ ebp + 0x10 ]
call sub_100242cf
mov ecx rw-data
call sub_10007004
push eax
push esi
jmp r-xdata
mov ecx [ ebp + 0x10 ]
call sub_100242cf
or [ ebp - 0x4 ] 0xffffffff
mov ecx rw-data
call sub_10007004
push eax
push esi
jmp r-xdata
cmp [ ebp - 0x10 ] edi
je r-xdata
cmp [ ebp + 0x14 ] edi
jne r-xdata
mov ecx rw-data
call sub_10007004
push eax
push [ ebp + 0x14 ]
call sub_10047154
pop ecx
push eax
push 0x1c
call sub_10025dd6
pop ecx
mov ecx eax
mov [ ebp + 0xc ] ecx
mov [ ebp - 0x4 ] 0x2c
cmp ecx edi
je r-xdata
cmp [ ebp + 0x14 ] edi
jne r-xdata
xor esi esi
push edi
push [ ebp + 0x8 ]
mov ecx eax
call sub_1003e6b5
mov esi eax
jmp r-xdata
mov ecx [ ebp + 0x10 ]
call sub_100242cf
mov ecx rw-data
call sub_10007004
push eax
push esi
jmp r-xdata
call sub_10029f0b
retn
cmp [ ebp + 0x14 ] edi
jne r-xdata
mov ecx rw-data
call sub_10007004
push eax
push [ ebp + 0x14 ]
call sub_1004160f
pop ecx
push eax
push 0x14
call sub_10025dd6
pop ecx
cmp eax edi
je r-xdata
xor esi esi
push edi
push [ ebp + 0x8 ]
call sub_10044e6f
mov esi eax
jmp r-xdata
mov ecx rw-data
call sub_10007004
push eax
push [ ebp + 0x14 ]
call sub_100414d5
pop ecx
push eax
push 0x34
call sub_10025dd6
pop ecx
mov ecx eax
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x4 ] 0x20
cmp ecx edi
je r-xdata
mov ecx [ ebp + 0x10 ]
call sub_100242cf
cmp ebx edi
je r-xdata
mov ecx rw-data
call sub_10007004
push eax
push esi
jmp r-xdata
mov ecx rw-data
call sub_10007004
push eax
push [ ebp + 0x14 ]
call sub_10024c54
pop ecx
push eax
push 0x10
call sub_10025dd6
pop ecx
cmp eax edi
je r-xdata
xor esi esi
push edi
push [ ebp + 0x8 ]
mov ecx eax
call sub_1003e5c8
mov esi eax
jmp r-xdata
mov ecx [ ebp + 0x10 ]
call sub_100242cf
or [ ebp - 0x4 ] 0xffffffff
mov ecx rw-data
call sub_10007004
push eax
push esi
jmp r-xdata
cmp [ ebp + 0x14 ] edi
jne r-xdata
xor esi esi
push edi
push edi
push [ ebp + 0x8 ]
call sub_1003f94b
mov esi eax
jmp r-xdata
xor esi esi
push edi
push [ ebp + 0x8 ]
mov ecx eax
call sub_100242fa
mov esi eax
jmp r-xdata
mov ecx [ ebp + 0x10 ]
call sub_100242cf
mov ecx rw-data
call sub_10007004
push eax
push esi
jmp r-xdata
mov ecx rw-data
call sub_10007004
push eax
push [ ebp + 0x14 ]
call sub_10041572
pop ecx
push eax
push 0x34
call sub_10025dd6
pop ecx
mov ecx eax
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x4 ] 0x26
cmp ecx edi
je r-xdata
mov ecx [ ebp + 0x10 ]
call sub_100242cf
cmp ebx edi
je r-xdata
or [ ebp - 0x4 ] 0xffffffff
mov ecx rw-data
call sub_10007004
push eax
push esi
jmp r-xdata
mov ecx [ ebp + 0x10 ]
call sub_100242cf
mov ecx rw-data
call sub_10007004
push eax
push esi
jmp r-xdata
xor esi esi
push edi
push edi
push [ ebp + 0x8 ]
call sub_1003f997
mov esi eax
jmp r-xdata
mov ecx [ ebp + 0x10 ]
call sub_100242cf
or [ ebp - 0x4 ] 0xffffffff
mov ecx rw-data
call sub_10007004
push eax
push esi
jmp r-xdata
sub_1004771f
push 0x8
mov eax sub_1004bb6e
call sub_10029e33
xor edi edi
mov [ ebp - 0x10 ] edi
mov eax [ ebp + 0xc ]
and eax 0x2
mov [ ebp - 0x10 ] eax
je r-xdata
mov ebx [ ebp + 0xc ]
and ebx 0x8
je r-xdata
cmp [ ebp + 0x14 ] edi
jne r-xdata
cmp ebx edi
je r-xdata
cmp [ ebp + 0x14 ] edi
jne r-xdata
mov ecx rw-data
call sub_10007004
push eax
push [ ebp + 0x14 ]
call sub_100411c4
pop ecx
push eax
push 0x20
call sub_10025dd6
pop ecx
cmp eax edi
je r-xdata
test [ ebp + 0xc ] 0x1
je r-xdata
cmp [ ebp + 0x14 ] edi
jne r-xdata
mov ecx rw-data
call sub_10007004
push eax
push [ ebp + 0x14 ]
call sub_100416ac
pop ecx
push eax
push 0x10
call sub_10025dd6
pop ecx
cmp eax edi
je r-xdata
xor esi esi
push edi
push [ ebp + 0x8 ]
mov ecx eax
call sub_1003e2d8
mov esi eax
jmp r-xdata
test [ ebp + 0xc ] 0x20
je r-xdata
cmp [ ebp + 0x14 ] edi
jne r-xdata
mov ecx rw-data
call sub_10007004
push eax
push [ ebp + 0x14 ]
call sub_10041749
pop ecx
push eax
push 0x10
call sub_10025dd6
pop ecx
cmp eax edi
je r-xdata
xor esi esi
push edi
push [ ebp + 0x8 ]
mov ecx eax
call sub_1003e701
mov esi eax
jmp r-xdata
mov ecx [ ebp + 0x10 ]
call sub_100242cf
mov ecx rw-data
call sub_10007004
push eax
push esi
jmp r-xdata
mov ebx [ ebp + 0xc ]
and ebx 0x4
je r-xdata
cmp [ ebp + 0x14 ] edi
jne r-xdata
mov ecx rw-data
call sub_10007004
push eax
push [ ebp + 0x14 ]
call sub_10041883
pop ecx
push eax
push 0x10
call sub_10025dd6
pop ecx
cmp eax edi
je r-xdata
cmp [ ebp + 0x14 ] edi
jne r-xdata
xor esi esi
push edi
push [ ebp + 0x8 ]
mov ecx eax
call sub_1003e805
mov esi eax
jmp r-xdata
mov ecx [ ebp + 0x10 ]
call sub_100242cf
mov ecx rw-data
call sub_10007004
push eax
push esi
jmp r-xdata
cmp ebx edi
je r-xdata
cmp [ ebp + 0x14 ] edi
jne r-xdata
mov ecx rw-data
call sub_10007004
push eax
push [ ebp + 0x14 ]
call sub_10041920
pop ecx
push eax
push 0x8
call sub_10025dd6
pop ecx
cmp eax edi
je r-xdata
xor esi esi
push edi
push [ ebp + 0x8 ]
mov ecx eax
call sub_1003e93f
mov esi eax
jmp r-xdata
mov ecx rw-data
call sub_10007004
push eax
push [ ebp + 0x14 ]
call sub_100417e6
pop ecx
push eax
push 0x18
call sub_10025dd6
pop ecx
mov ecx eax
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x4 ] 0xe
cmp ecx edi
je r-xdata
mov ecx [ ebp + 0x10 ]
call sub_100242cf
cmp ebx edi
je r-xdata
mov ecx rw-data
call sub_10007004
push eax
push esi
jmp r-xdata
mov ebx [ ebp + 0xc ]
and ebx 0x10
je r-xdata
cmp [ ebp + 0x14 ] edi
jne r-xdata
mov ecx rw-data
call sub_10007004
push eax
push [ ebp + 0x14 ]
call sub_100419bd
pop ecx
push eax
push 0x10
call sub_10025dd6
pop ecx
cmp eax edi
je r-xdata
xor esi esi
mov [ eax + 0x4 ] edi
mov [ eax ] r--data
mov esi eax
jmp r-xdata
mov ecx [ ebp + 0x10 ]
call sub_100242cf
mov ecx rw-data
call sub_10007004
push eax
push esi
jmp r-xdata
xor esi esi
push edi
push edi
push [ ebp + 0x8 ]
call sub_1003f5a2
mov esi eax
jmp r-xdata
cmp ebx edi
je r-xdata
cmp [ ebp + 0x14 ] edi
jne r-xdata
mov ecx rw-data
call sub_10007004
push eax
push [ ebp + 0x14 ]
call sub_10041a5a
pop ecx
push eax
push 0x10
call sub_10025dd6
pop ecx
cmp eax edi
je r-xdata
xor esi esi
push edi
push [ ebp + 0x8 ]
mov ecx eax
call sub_1003eaad
mov esi eax
jmp r-xdata
mov ecx [ ebp + 0x10 ]
call sub_100242cf
mov ecx rw-data
call sub_10007004
push eax
push esi
jmp r-xdata
mov ecx [ ebp + 0x10 ]
call sub_100242cf
or [ ebp - 0x4 ] 0xffffffff
mov ecx rw-data
call sub_10007004
push eax
push esi
jmp r-xdata
cmp [ ebp - 0x10 ] edi
je r-xdata
cmp [ ebp + 0x14 ] edi
jne r-xdata
mov ecx rw-data
call sub_10007004
push eax
push [ ebp + 0x14 ]
call sub_100471f1
pop ecx
push eax
push 0x1c
call sub_10025dd6
pop ecx
mov ecx eax
mov [ ebp + 0xc ] ecx
mov [ ebp - 0x4 ] 0x2c
cmp ecx edi
je r-xdata
cmp [ ebp + 0x14 ] edi
jne r-xdata
xor esi esi
push edi
push [ ebp + 0x8 ]
mov ecx eax
call sub_1003eb3e
mov esi eax
jmp r-xdata
mov ecx [ ebp + 0x10 ]
call sub_100242cf
mov ecx rw-data
call sub_10007004
push eax
push esi
jmp r-xdata
call sub_10029f0b
retn
cmp [ ebp + 0x14 ] edi
jne r-xdata
mov ecx rw-data
call sub_10007004
push eax
push [ ebp + 0x14 ]
call sub_10041c31
pop ecx
push eax
push 0x14
call sub_10025dd6
pop ecx
cmp eax edi
je r-xdata
xor esi esi
push edi
push [ ebp + 0x8 ]
call sub_100468c5
mov esi eax
jmp r-xdata
mov ecx rw-data
call sub_10007004
push eax
push [ ebp + 0x14 ]
call sub_10041af7
pop ecx
push eax
push 0x34
call sub_10025dd6
pop ecx
mov ecx eax
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x4 ] 0x20
cmp ecx edi
je r-xdata
mov ecx [ ebp + 0x10 ]
call sub_100242cf
cmp ebx edi
je r-xdata
mov ecx rw-data
call sub_10007004
push eax
push esi
jmp r-xdata
mov ecx rw-data
call sub_10007004
push eax
push [ ebp + 0x14 ]
call sub_10041cce
pop ecx
push eax
push 0x10
call sub_10025dd6
pop ecx
cmp eax edi
je r-xdata
xor esi esi
push edi
push [ ebp + 0x8 ]
mov ecx eax
call sub_1003ec31
mov esi eax
jmp r-xdata
mov ecx [ ebp + 0x10 ]
call sub_100242cf
or [ ebp - 0x4 ] 0xffffffff
mov ecx rw-data
call sub_10007004
push eax
push esi
jmp r-xdata
cmp [ ebp + 0x14 ] edi
jne r-xdata
xor esi esi
push edi
push edi
push [ ebp + 0x8 ]
call sub_1003f9e3
mov esi eax
jmp r-xdata
xor esi esi
push edi
push [ ebp + 0x8 ]
mov ecx eax
call sub_1003e024
mov esi eax
jmp r-xdata
mov ecx [ ebp + 0x10 ]
call sub_100242cf
mov ecx rw-data
call sub_10007004
push eax
push esi
jmp r-xdata
mov ecx rw-data
call sub_10007004
push eax
push [ ebp + 0x14 ]
call sub_10041b94
pop ecx
push eax
push 0x34
call sub_10025dd6
pop ecx
mov ecx eax
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x4 ] 0x26
cmp ecx edi
je r-xdata
mov ecx [ ebp + 0x10 ]
call sub_100242cf
cmp ebx edi
je r-xdata
or [ ebp - 0x4 ] 0xffffffff
mov ecx rw-data
call sub_10007004
push eax
push esi
jmp r-xdata
mov ecx [ ebp + 0x10 ]
call sub_100242cf
mov ecx rw-data
call sub_10007004
push eax
push esi
jmp r-xdata
xor esi esi
push edi
push edi
push [ ebp + 0x8 ]
call sub_1003fa2f
mov esi eax
jmp r-xdata
mov ecx [ ebp + 0x10 ]
call sub_100242cf
or [ ebp - 0x4 ] 0xffffffff
mov ecx rw-data
call sub_10007004
push eax
push esi
jmp r-xdata
sub_10047bb0
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push esi
lea eax [ ebp - 0x8 ]
mov esi ecx
mov ecx [ ebp + 0x8 ]
push eax
call sub_10007307
mov ecx [ eax ]
mov [ esi + 0xc ] ecx
mov eax [ eax + 0x4 ]
mov ecx [ ebp + 0x8 ]
mov [ esi + 0x10 ] eax
lea eax [ ebp + 0x8 ]
push eax
call sub_1003ddfb
mov ecx [ eax ]
mov [ esi + 0x8 ] ecx
and [ eax ] 0x0
push [ ebp + 0x8 ]
call sub_1002644d
pop ecx
pop esi
leave
retn 0x4
sub_10047bf3
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push esi
push [ ebp + 0x8 ]
mov esi ecx
mov [ esi + 0x4 ] eax
mov [ esi ] r--data
call sub_1003df49
mov eax esi
pop esi
pop ebp
retn 0x8
sub_10047c16
mov edi edi
push ebp
mov ebp esp
add ecx 0x8
push ecx
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_1004a771
add esp 0x14
pop ebp
retn 0x10
sub_10047c37
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
xor eax eax
jmp r-xdata
cmp ecx [ ebp + 0xc ]
jne r-xdata
movsx edx [ ecx ]
rol eax 0x8
add eax edx
inc ecx
pop ebp
retn 0x8
sub_10047c55
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push esi
push [ ebp + 0x8 ]
mov esi ecx
mov [ esi + 0x4 ] eax
mov [ esi ] r--data
call sub_1003df6f
mov eax esi
pop esi
pop ebp
retn 0x8
sub_10047c78
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push esi
push [ ebp + 0x8 ]
mov esi ecx
mov [ esi + 0x4 ] eax
mov [ esi ] r--data
call sub_1003df6f
mov eax esi
pop esi
pop ebp
retn 0x8
sub_10047cbf
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push esi
push [ ebp + 0x8 ]
mov esi ecx
mov [ esi + 0x4 ] eax
mov [ esi ] r--data
and [ esi + 0x8 ] 0x0
call sub_10047bb0
mov eax esi
pop esi
pop ebp
retn 0x8
sub_10047d02
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_10047ce6
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_10025c9c
pop ecx
sub_10047d23
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_10047c9b
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_10025c9c
pop ecx
sub_10047d44
mov edi edi
push ebp
mov ebp esp
jmp r-xdata
cmp [ ebp + 0x1c ] 0x0
ja r-xdata
lea ecx [ ebp + 0x14 ]
call sub_10006739
movzx eax [ eax ]
push eax
lea ecx [ ebp + 0xc ]
call sub_1000f8d2
dec [ ebp + 0x1c ]
lea ecx [ ebp + 0x14 ]
call sub_10006770
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x4 ] ecx
pop ebp
retn
sub_10047d80
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x18 ] 0x0
jbe r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x4 ] ecx
pop ebp
retn
push [ ebp + 0x14 ]
lea ecx [ ebp + 0xc ]
call sub_1000f8d2
dec [ ebp + 0x18 ]
jne r-xdata
sub_10047dab
push 0x10
mov eax sub_1004bb89
call sub_10029e66
mov esi ecx
mov [ ebp - 0x14 ] esi
mov ecx [ ebp + 0x8 ]
lea eax [ ebp - 0x1c ]
push eax
call sub_10007307
mov ecx [ eax ]
lea ebx [ esi + 0x2c ]
mov [ ebx ] ecx
mov eax [ eax + 0x4 ]
mov [ ebx + 0x4 ] eax
call sub_100264f9
mov edi eax
xor eax eax
push ebx
push eax
mov [ esi + 0x8 ] eax
mov [ esi + 0x10 ] eax
mov [ esi + 0x14 ] eax
mov [ esi + 0x18 ] eax
push [ edi + 0x1c ]
mov [ ebp - 0x4 ] eax
call sub_100066e3
add esp 0xc
cmp [ esi + 0x28 ] 0x0
mov [ esi + 0x8 ] eax
je r-xdata
mov eax [ edi + 0x10 ]
mov eax [ edi + 0xc ]
jmp r-xdata
push ebx
push 0x0
push eax
call sub_100066e3
mov [ esi + 0x14 ] eax
add esp 0xc
cmp [ edi + 0x2f ] 0x4
mov eax r--data
ja r-xdata
mov eax [ edi + 0x20 ]
push ebx
push 0x0
push eax
call sub_100066e3
mov [ esi + 0x10 ] eax
add esp 0xc
cmp [ edi + 0x2e ] 0x4
mov eax r--data
ja r-xdata
push ebx
push 0x0
push eax
call sub_100066e3
mov [ esi + 0x18 ] eax
mov eax [ edi + 0x14 ]
mov al [ eax ]
mov [ esi + 0xc ] al
mov eax [ edi + 0x18 ]
mov al [ eax ]
add esp 0xc
cmp [ esi + 0x28 ] 0x0
mov [ esi + 0xd ] al
je r-xdata
mov eax [ edi + 0x24 ]
mov al [ edi + 0x29 ]
mov al [ edi + 0x28 ]
jmp r-xdata
and [ esi + 0x1c ] 0x0
cmp eax 0x7f
jl r-xdata
movsx eax al
mov [ esi + 0x1c ] eax
test eax eax
jl r-xdata
call sub_10029f0b
retn 0x8
push 0x4
mov esi r--data
push esi
push ebx
call sub_10028b40
push 0x4
push esi
push [ ebp + 0x8 ]
call sub_10028b40
add esp 0x18
movsx eax [ edi + 0x2e ]
push eax
movsx eax [ edi + 0x2a ]
push eax
movsx eax [ edi + 0x2b ]
push eax
lea ebx [ esi + 0x20 ]
push ebx
mov ecx esi
call sub_1003dfd8
movsx ecx [ edi + 0x2f ]
push ecx
movsx ecx [ edi + 0x2c ]
push ecx
movsx ecx [ edi + 0x2d ]
lea eax [ esi + 0x24 ]
push ecx
push eax
mov ecx esi
mov [ ebp + 0x8 ] eax
call sub_1003dfd8
cmp [ ebp + 0xc ] 0x0
je r-xdata
sub_10047ef8
push 0x4
mov eax sub_1004b33e
call sub_10029e33
mov esi ecx
mov [ ebp - 0x10 ] esi
mov eax [ ebp + 0xc ]
mov [ esi + 0x4 ] eax
push [ ebp + 0x14 ]
mov al [ ebp + 0x10 ]
push [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
mov [ esi ] r--data
mov [ esi + 0x28 ] al
call sub_10047dab
mov eax esi
call sub_10029f0b
retn 0x10
sub_10047f34
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ ecx ]
mov [ ebp - 0x8 ] eax
mov eax [ ecx + 0x4 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0xc ]
neg eax
push eax
lea ecx [ ebp - 0x8 ]
call sub_1003ef3a
mov ecx [ ebp - 0x8 ]
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov ecx [ ebp - 0x4 ]
mov [ eax + 0x4 ] ecx
leave
retn 0x8
sub_10047f66
mov edi edi
push ebp
mov ebp esp
push esi
push [ ebp + 0x10 ]
mov esi ecx
push 0x0
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_10047ef8
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0xc
sub_10047f8b
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
mov [ esi ] r--data
call sub_10047c9b
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_10025c9c
pop ecx
sub_10047fb2
mov edi edi
push ebp
mov ebp esp
push esi
push [ ebp + 0x10 ]
mov esi ecx
push 0x1
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_10047ef8
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0xc
sub_10047fd7
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
mov [ esi ] r--data
call sub_10047c9b
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_10025c9c
pop ecx
sub_10048033
push 0x40
mov eax sub_1004bbac
call sub_10029e9c
mov eax [ ebp + 0x8 ]
mov esi r--data
lea edi [ ebp - 0x18 ]
movsd [ edi ] [ esi ]
mov [ ebp - 0x44 ] eax
mov eax [ ebp + 0x1c ]
mov ebx ecx
lea ecx [ ebp - 0x34 ]
mov [ ebp - 0x38 ] eax
movsb [ edi ] [ esi ]
call sub_10007bb4
mov al [ ebp + 0x24 ]
and [ ebp - 0x4 ] 0x0
test al al
jne r-xdata
mov [ ebp - 0x16 ] al
mov al [ ebp + 0x20 ]
mov [ ebp - 0x15 ] al
mov al [ ebp + 0x20 ]
mov [ ebp - 0x16 ] al
jmp r-xdata
push 0x0
push esi
lea ecx [ ebp - 0x34 ]
call sub_10005b68
mov eax [ ebp - 0x20 ]
mov edi [ ebx + 0x8 ]
mov [ ebp - 0x3c ] eax
lea eax [ ebp - 0x4c ]
push eax
lea ecx [ ebp - 0x34 ]
call sub_1001039e
mov ecx eax
call sub_10006739
push edi
push [ ebp - 0x38 ]
lea ecx [ ebp - 0x18 ]
push ecx
push [ ebp - 0x3c ]
push eax
call sub_10035347
mov edi eax
add esp 0x14
test edi edi
jbe r-xdata
push 0x10
pop esi
jmp r-xdata
add esi esi
lea eax [ ebp - 0x4c ]
push eax
lea ecx [ ebp - 0x34 ]
call sub_1001039e
mov ecx [ eax ]
mov [ ebp - 0x40 ] ecx
mov eax [ eax + 0x4 ]
mov [ ebp - 0x3c ] eax
jmp r-xdata
dec edi
jne r-xdata
lea ecx [ ebp - 0x40 ]
call sub_10006770
mov ecx eax
call sub_10006739
mov al [ eax ]
mov [ ebp - 0x38 ] al
push [ ebp - 0x38 ]
lea ecx [ ebp + 0xc ]
call sub_1000f8d2
mov eax [ ebp + 0xc ]
mov esi [ ebp - 0x44 ]
mov [ esi ] eax
mov eax [ ebp + 0x10 ]
push edi
push 0x1
lea ecx [ ebp - 0x34 ]
mov [ esi + 0x4 ] eax
call sub_100022b5
mov eax esi
call sub_10029f1f
retn 0x20
sub_10048121
push 0x94
mov eax sub_1004b3f8
call sub_10029e33
xor edi edi
xor ebx ebx
mov [ ebp - 0x10 ] edi
mov esi [ ebp + 0x8 ]
inc ebx
cmp esi edi
je r-xdata
mov eax ebx
call sub_10029f0b
retn
cmp [ esi ] edi
jne r-xdata
push 0x10
call sub_10025dd6
pop ecx
mov [ ebp + 0x8 ] eax
mov [ ebp - 0x4 ] edi
cmp eax edi
je r-xdata
xor eax eax
mov ecx [ ebp + 0xc ]
lea eax [ ebp - 0x2c ]
push eax
call sub_100073c0
push eax
lea ecx [ ebp - 0xa0 ]
mov [ ebp - 0x4 ] bl
mov [ ebp - 0x10 ] ebx
call sub_1000736b
mov ecx [ ebp + 0x8 ]
push edi
push eax
mov [ ebp - 0x10 ] 0x3
call sub_10047bf3
jmp r-xdata
test [ ebp - 0x10 ] bl
je r-xdata
and [ ebp - 0x10 ] 0xfffffffd
lea ecx [ ebp - 0xa0 ]
call sub_100073dd
push 0x2
pop ecx
mov [ ebp - 0x4 ] ecx
mov [ esi ] eax
test [ ebp - 0x10 ] cl
je r-xdata
push edi
push ebx
lea ecx [ ebp - 0x2c ]
call sub_100022b5
sub_100481bb
push 0x24
mov eax sub_1004bbea
call sub_10029e33
mov esi [ ebp + 0x8 ]
mov edi [ ebp + 0xc ]
mov ebx [ ebp + 0x10 ]
and [ ebp - 0x1c ] 0x0
mov [ ebp - 0x10 ] ecx
mov ecx esi
mov [ ebp - 0x20 ] esi
mov [ ebp - 0x14 ] edi
mov [ ebp - 0x18 ] ebx
call sub_10007bb4
and [ ebp - 0x4 ] 0x0
mov eax ebx
sub eax edi
mov [ ebp - 0x1c ] 0x1
je r-xdata
push 0x0
push eax
mov ecx esi
call sub_1001151d
mov eax esi
call sub_10029f0b
retn 0xc
mov ecx [ ebp - 0x10 ]
add ecx 0x8
mov [ ebp - 0x10 ] ecx
test eax eax
ja r-xdata
push 0x0
push eax
mov ecx esi
call sub_1001151d
lea eax [ ebp - 0x28 ]
push eax
mov ecx esi
call sub_1001039e
mov ecx eax
call sub_10006739
mov edi [ esi + 0x14 ]
mov ebx eax
lea eax [ ebp - 0x30 ]
push eax
mov ecx esi
call sub_1001039e
mov ecx eax
call sub_10006739
push [ ebp - 0x10 ]
add edi ebx
push [ ebp - 0x18 ]
push [ ebp - 0x14 ]
push edi
push eax
call sub_1004a9ec
add esp 0x14
cmp eax [ esi + 0x14 ]
jbe r-xdata
sub_10048266
push 0x94
mov eax sub_1004b3f8
call sub_10029e33
xor ebx ebx
mov [ ebp - 0x10 ] ebx
mov edi [ ebp + 0x8 ]
cmp edi ebx
je r-xdata
push 0x6
pop eax
call sub_10029f0b
retn
cmp [ edi ] ebx
jne r-xdata
push 0x8
call sub_10025dd6
mov esi eax
pop ecx
mov [ ebp + 0x8 ] esi
mov [ ebp - 0x4 ] ebx
inc ebx
test esi esi
je r-xdata
xor esi esi
mov ecx [ ebp + 0xc ]
lea eax [ ebp - 0x2c ]
push eax
call sub_100073c0
push eax
lea ecx [ ebp - 0xa0 ]
mov [ ebp - 0x4 ] bl
mov [ ebp - 0x10 ] ebx
call sub_1000736b
and [ esi + 0x4 ] 0x0
mov [ ebp - 0x10 ] 0x3
mov [ esi ] r--data
jmp r-xdata
test [ ebp - 0x10 ] bl
je r-xdata
and [ ebp - 0x10 ] 0xfffffffd
lea ecx [ ebp - 0xa0 ]
call sub_100073dd
push 0x2
pop eax
mov [ ebp - 0x4 ] eax
mov [ edi ] esi
test [ ebp - 0x10 ] al
je r-xdata
push 0x0
push ebx
lea ecx [ ebp - 0x2c ]
call sub_100022b5
sub_10048302
push 0x94
mov eax sub_1004b3f8
call sub_10029e33
xor edi edi
mov [ ebp - 0x10 ] edi
mov esi [ ebp + 0x8 ]
cmp esi edi
je r-xdata
push 0x3
pop eax
call sub_10029f0b
retn
cmp [ esi ] edi
jne r-xdata
push 0x10
call sub_10025dd6
pop ecx
mov [ ebp + 0x8 ] eax
mov [ ebp - 0x4 ] edi
cmp eax edi
je r-xdata
xor eax eax
mov ecx [ ebp + 0xc ]
lea eax [ ebp - 0x2c ]
push eax
call sub_100073c0
push eax
lea ecx [ ebp - 0xa0 ]
mov [ ebp - 0x4 ] 0x1
mov [ ebp - 0x10 ] 0x1
call sub_1000736b
mov ecx [ ebp + 0x8 ]
push edi
push eax
mov [ ebp - 0x10 ] 0x3
call sub_10047c55
jmp r-xdata
test [ ebp - 0x10 ] 0x1
je r-xdata
and [ ebp - 0x10 ] 0xfffffffd
lea ecx [ ebp - 0xa0 ]
call sub_100073dd
push 0x2
pop ecx
mov [ ebp - 0x4 ] ecx
mov [ esi ] eax
test [ ebp - 0x10 ] cl
je r-xdata
push edi
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_100022b5
sub_100483a1
push 0x94
mov eax sub_1004b3f8
call sub_10029e33
xor edi edi
mov [ ebp - 0x10 ] edi
mov esi [ ebp + 0x8 ]
cmp esi edi
je r-xdata
push 0x3
pop eax
call sub_10029f0b
retn
cmp [ esi ] edi
jne r-xdata
push 0x10
call sub_10025dd6
pop ecx
mov [ ebp + 0x8 ] eax
mov [ ebp - 0x4 ] edi
cmp eax edi
je r-xdata
xor eax eax
mov ecx [ ebp + 0xc ]
lea eax [ ebp - 0x2c ]
push eax
call sub_100073c0
push eax
lea ecx [ ebp - 0xa0 ]
mov [ ebp - 0x4 ] 0x1
mov [ ebp - 0x10 ] 0x1
call sub_1000736b
mov ecx [ ebp + 0x8 ]
push edi
push eax
mov [ ebp - 0x10 ] 0x3
call sub_10047c78
jmp r-xdata
test [ ebp - 0x10 ] 0x1
je r-xdata
and [ ebp - 0x10 ] 0xfffffffd
lea ecx [ ebp - 0xa0 ]
call sub_100073dd
push 0x2
pop ecx
mov [ ebp - 0x4 ] ecx
mov [ esi ] eax
test [ ebp - 0x10 ] cl
je r-xdata
push edi
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_100022b5
sub_10048440
push 0x94
mov eax sub_1004ae6c
call sub_10029e33
xor ebx ebx
mov [ ebp - 0x10 ] ebx
mov edi [ ebp + 0x8 ]
push 0x3
pop esi
cmp edi ebx
je r-xdata
mov eax esi
call sub_10029f0b
retn
cmp [ edi ] ebx
jne r-xdata
push 0x34
call sub_10025dd6
pop ecx
mov [ ebp + 0x8 ] eax
mov [ ebp - 0x4 ] ebx
inc ebx
test eax eax
je r-xdata
xor eax eax
mov ecx [ ebp + 0xc ]
lea eax [ ebp - 0x2c ]
push eax
call sub_100073c0
push eax
lea ecx [ ebp - 0xa0 ]
mov [ ebp - 0x4 ] bl
mov [ ebp - 0x10 ] ebx
call sub_1000736b
mov ecx [ ebp + 0x8 ]
push ebx
push 0x0
push eax
mov [ ebp - 0x4 ] 0x2
mov [ ebp - 0x10 ] esi
call sub_10047f66
jmp r-xdata
test [ ebp - 0x10 ] bl
je r-xdata
and [ ebp - 0x10 ] 0xfffffffd
lea ecx [ ebp - 0xa0 ]
call sub_100073dd
test [ ebp - 0x10 ] 0x2
mov [ edi ] eax
mov [ ebp - 0x4 ] esi
je r-xdata
push 0x0
push ebx
lea ecx [ ebp - 0x2c ]
call sub_100022b5
sub_10048533
push 0x94
mov eax sub_1004ae6c
call sub_10029e33
xor ebx ebx
mov [ ebp - 0x10 ] ebx
mov edi [ ebp + 0x8 ]
push 0x3
pop esi
cmp edi ebx
je r-xdata
mov eax esi
call sub_10029f0b
retn
cmp [ edi ] ebx
jne r-xdata
push 0x34
call sub_10025dd6
pop ecx
mov [ ebp + 0x8 ] eax
mov [ ebp - 0x4 ] ebx
inc ebx
test eax eax
je r-xdata
xor eax eax
mov ecx [ ebp + 0xc ]
lea eax [ ebp - 0x2c ]
push eax
call sub_100073c0
push eax
lea ecx [ ebp - 0xa0 ]
mov [ ebp - 0x4 ] bl
mov [ ebp - 0x10 ] ebx
call sub_1000736b
mov ecx [ ebp + 0x8 ]
push ebx
push 0x0
push eax
mov [ ebp - 0x4 ] 0x2
mov [ ebp - 0x10 ] esi
call sub_10047fb2
jmp r-xdata
test [ ebp - 0x10 ] bl
je r-xdata
and [ ebp - 0x10 ] 0xfffffffd
lea ecx [ ebp - 0xa0 ]
call sub_100073dd
test [ ebp - 0x10 ] 0x2
mov [ edi ] eax
mov [ ebp - 0x4 ] esi
je r-xdata
push 0x0
push ebx
lea ecx [ ebp - 0x2c ]
call sub_100022b5
sub_100485d2
push 0x94
mov eax sub_1004b3f8
call sub_10029e33
xor edi edi
mov [ ebp - 0x10 ] edi
mov esi [ ebp + 0x8 ]
cmp esi edi
je r-xdata
push 0x5
pop eax
call sub_10029f0b
retn
cmp [ esi ] edi
jne r-xdata
push 0x14
call sub_10025dd6
pop ecx
mov [ ebp + 0x8 ] eax
mov [ ebp - 0x4 ] edi
cmp eax edi
je r-xdata
xor eax eax
mov ecx [ ebp + 0xc ]
lea eax [ ebp - 0x2c ]
push eax
call sub_100073c0
push eax
lea ecx [ ebp - 0xa0 ]
mov [ ebp - 0x4 ] 0x1
mov [ ebp - 0x10 ] 0x1
call sub_1000736b
mov ecx [ ebp + 0x8 ]
push edi
push eax
mov [ ebp - 0x10 ] 0x3
call sub_10047cbf
jmp r-xdata
test [ ebp - 0x10 ] 0x1
je r-xdata
and [ ebp - 0x10 ] 0xfffffffd
lea ecx [ ebp - 0xa0 ]
call sub_100073dd
push 0x2
pop ecx
mov [ ebp - 0x4 ] ecx
mov [ esi ] eax
test [ ebp - 0x10 ] cl
je r-xdata
push edi
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_100022b5
sub_10048671
push 0x14
mov eax sub_1004b452
call sub_10029e33
push 0x0
lea ecx [ ebp - 0x14 ]
call sub_10022437
mov esi [ rw-data ]
and [ ebp - 0x4 ] 0x0
mov ecx rw-data
mov [ ebp - 0x10 ] esi
call sub_10007004
mov ecx [ ebp + 0x8 ]
push eax
call sub_10007039
mov edi eax
test edi edi
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
call sub_1002245f
mov eax edi
call sub_10029f0b
retn
test esi esi
je r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
push eax
call sub_10048121
pop ecx
pop ecx
cmp eax 0xffffffff
jne r-xdata
mov edi esi
jmp r-xdata
mov edi [ ebp - 0x10 ]
mov ecx edi
mov [ rw-data ] edi
call sub_1000778d
push edi
call sub_10022634
pop ecx
push r--data
lea ecx [ ebp - 0x20 ]
call sub_10025f3c
push r--data
lea eax [ ebp - 0x20 ]
push eax
call sub_10029a01
sub_1004870e
push 0x14
mov eax sub_1004b452
call sub_10029e33
push 0x0
lea ecx [ ebp - 0x14 ]
call sub_10022437
mov esi [ rw-data ]
and [ ebp - 0x4 ] 0x0
mov ecx rw-data
mov [ ebp - 0x10 ] esi
call sub_10007004
mov ecx [ ebp + 0x8 ]
push eax
call sub_10007039
mov edi eax
test edi edi
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
call sub_1002245f
mov eax edi
call sub_10029f0b
retn
test esi esi
je r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
push eax
call sub_10048266
pop ecx
pop ecx
cmp eax 0xffffffff
jne r-xdata
mov edi esi
jmp r-xdata
mov edi [ ebp - 0x10 ]
mov ecx edi
mov [ rw-data ] edi
call sub_1000778d
push edi
call sub_10022634
pop ecx
push r--data
lea ecx [ ebp - 0x20 ]
call sub_10025f3c
push r--data
lea eax [ ebp - 0x20 ]
push eax
call sub_10029a01
sub_100487ab
push 0x14
mov eax sub_1004b452
call sub_10029e33
push 0x0
lea ecx [ ebp - 0x14 ]
call sub_10022437
mov esi [ rw-data ]
and [ ebp - 0x4 ] 0x0
mov ecx rw-data
mov [ ebp - 0x10 ] esi
call sub_10007004
mov ecx [ ebp + 0x8 ]
push eax
call sub_10007039
mov edi eax
test edi edi
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
call sub_1002245f
mov eax edi
call sub_10029f0b
retn
test esi esi
je r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
push eax
call sub_10048302
pop ecx
pop ecx
cmp eax 0xffffffff
jne r-xdata
mov edi esi
jmp r-xdata
mov edi [ ebp - 0x10 ]
mov ecx edi
mov [ rw-data ] edi
call sub_1000778d
push edi
call sub_10022634
pop ecx
push r--data
lea ecx [ ebp - 0x20 ]
call sub_10025f3c
push r--data
lea eax [ ebp - 0x20 ]
push eax
call sub_10029a01
sub_10048848
push 0x14
mov eax sub_1004b452
call sub_10029e33
push 0x0
lea ecx [ ebp - 0x14 ]
call sub_10022437
mov esi [ rw-data ]
and [ ebp - 0x4 ] 0x0
mov ecx rw-data
mov [ ebp - 0x10 ] esi
call sub_10007004
mov ecx [ ebp + 0x8 ]
push eax
call sub_10007039
mov edi eax
test edi edi
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
call sub_1002245f
mov eax edi
call sub_10029f0b
retn
test esi esi
je r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
push eax
call sub_100483a1
pop ecx
pop ecx
cmp eax 0xffffffff
jne r-xdata
mov edi esi
jmp r-xdata
mov edi [ ebp - 0x10 ]
mov ecx edi
mov [ rw-data ] edi
call sub_1000778d
push edi
call sub_10022634
pop ecx
push r--data
lea ecx [ ebp - 0x20 ]
call sub_10025f3c
push r--data
lea eax [ ebp - 0x20 ]
push eax
call sub_10029a01
sub_100488e5
push 0x14
mov eax sub_1004b452
call sub_10029e33
push 0x0
lea ecx [ ebp - 0x14 ]
call sub_10022437
mov esi [ rw-data ]
and [ ebp - 0x4 ] 0x0
mov ecx rw-data
mov [ ebp - 0x10 ] esi
call sub_10007004
mov ecx [ ebp + 0x8 ]
push eax
call sub_10007039
mov edi eax
test edi edi
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
call sub_1002245f
mov eax edi
call sub_10029f0b
retn
test esi esi
je r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
push eax
call sub_10048440
pop ecx
pop ecx
cmp eax 0xffffffff
jne r-xdata
mov edi esi
jmp r-xdata
mov edi [ ebp - 0x10 ]
mov ecx edi
mov [ rw-data ] edi
call sub_1000778d
push edi
call sub_10022634
pop ecx
push r--data
lea ecx [ ebp - 0x20 ]
call sub_10025f3c
push r--data
lea eax [ ebp - 0x20 ]
push eax
call sub_10029a01
sub_10048982
push 0x14
mov eax sub_1004b452
call sub_10029e33
push 0x0
lea ecx [ ebp - 0x14 ]
call sub_10022437
mov esi [ rw-data ]
and [ ebp - 0x4 ] 0x0
mov ecx rw-data
mov [ ebp - 0x10 ] esi
call sub_10007004
mov ecx [ ebp + 0x8 ]
push eax
call sub_10007039
mov edi eax
test edi edi
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
call sub_1002245f
mov eax edi
call sub_10029f0b
retn
test esi esi
je r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
push eax
call sub_10048533
pop ecx
pop ecx
cmp eax 0xffffffff
jne r-xdata
mov edi esi
jmp r-xdata
mov edi [ ebp - 0x10 ]
mov ecx edi
mov [ rw-data ] edi
call sub_1000778d
push edi
call sub_10022634
pop ecx
push r--data
lea ecx [ ebp - 0x20 ]
call sub_10025f3c
push r--data
lea eax [ ebp - 0x20 ]
push eax
call sub_10029a01
sub_10048a1f
push 0x14
mov eax sub_1004b452
call sub_10029e33
push 0x0
lea ecx [ ebp - 0x14 ]
call sub_10022437
mov esi [ rw-data ]
and [ ebp - 0x4 ] 0x0
mov ecx rw-data
mov [ ebp - 0x10 ] esi
call sub_10007004
mov ecx [ ebp + 0x8 ]
push eax
call sub_10007039
mov edi eax
test edi edi
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
call sub_1002245f
mov eax edi
call sub_10029f0b
retn
test esi esi
je r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
push eax
call sub_100485d2
pop ecx
pop ecx
cmp eax 0xffffffff
jne r-xdata
mov edi esi
jmp r-xdata
mov edi [ ebp - 0x10 ]
mov ecx edi
mov [ rw-data ] edi
call sub_1000778d
push edi
call sub_10022634
pop ecx
push r--data
lea ecx [ ebp - 0x20 ]
call sub_10025f3c
push r--data
lea eax [ ebp - 0x20 ]
push eax
call sub_10029a01
sub_10048abc
push 0x170
mov eax sub_1004bce5
call sub_10029e9c
mov eax [ ebp + 0x10 ]
mov esi [ ebp + 0x8 ]
mov ebx [ ebp + 0xc ]
and [ ebp - 0x6c ] 0x0
cmp [ ebp + 0x14 ] 0x0
mov [ ebp - 0x74 ] eax
mov eax [ ebp + 0x18 ]
mov [ ebp - 0x7c ] esi
mov [ ebp - 0x94 ] ebx
mov [ ebp - 0x84 ] eax
mov ecx eax
je r-xdata
lea eax [ ebp - 0xbc ]
push eax
call sub_1000781e
push eax
mov [ ebp - 0x4 ] 0x2
call sub_100488e5
pop ecx
mov edi eax
mov [ ebp - 0x90 ] eax
lea ecx [ ebp - 0xbc ]
lea eax [ ebp - 0xb8 ]
push eax
call sub_1000781e
push eax
mov [ ebp - 0x4 ] 0x1
call sub_10048982
mov edi eax
pop ecx
mov [ ebp - 0x90 ] edi
lea ecx [ ebp - 0xb8 ]
jmp r-xdata
mov ecx [ ebp - 0x98 ]
cmp ecx 0x4
jae r-xdata
call sub_10007806
lea ecx [ ebp - 0x64 ]
mov [ ebp - 0x65 ] 0x0
mov [ ebp - 0x75 ] 0x0
call sub_10007bb4
mov ecx esi
mov [ ebp - 0x4 ] 0x3
call sub_10007bb4
mov eax [ edi ]
lea ecx [ ebp - 0xb4 ]
push ecx
mov ecx edi
mov [ ebp - 0x6c ] 0x1
call [ eax + 0x24 ]
and [ ebp - 0x98 ] 0x0
jmp r-xdata
cmp [ ebp - 0x65 ] 0x0
jne r-xdata
movsx eax [ ebp + ecx - 0xb4 ]
sub eax 0x20
je r-xdata
mov ecx [ ebp - 0x7c ]
push 0xffffffff
push 0x0
call sub_1000202a
jmp r-xdata
cmp [ ebp - 0x50 ] 0x1
jbe r-xdata
cmp ecx 0x3
je r-xdata
sub eax 0x4
je r-xdata
push 0x0
push 0x1
lea ecx [ ebp - 0x64 ]
call sub_100022b5
mov eax [ ebp - 0x7c ]
call sub_10029f1f
retn 0x14
cmp [ ebp - 0x75 ] 0x0
je r-xdata
and [ ebp - 0x8c ] 0x0
and [ ebp - 0x88 ] 0x0
lea eax [ ebp - 0xc4 ]
push eax
lea ecx [ ebp - 0x64 ]
call sub_1001039e
mov ecx [ eax ]
mov [ ebp - 0x8c ] ecx
mov eax [ eax + 0x4 ]
mov [ ebp - 0x88 ] eax
jmp r-xdata
inc [ ebp - 0x98 ]
cmp [ ebp - 0x65 ] 0x0
mov ebx [ ebp - 0x94 ]
je r-xdata
mov ecx [ ebp - 0x84 ]
lea eax [ ebp - 0x88 ]
push eax
call sub_1000781e
push eax
mov [ ebp - 0x4 ] 0xd
call sub_100107ba
pop ecx
lea ecx [ ebp - 0x88 ]
mov esi eax
mov [ ebp - 0x4 ] 0x3
call sub_10007806
jmp r-xdata
lea eax [ ebp - 0x2c ]
push eax
mov ecx edi
call sub_1003fb1a
mov eax [ ebp - 0x84 ]
test [ eax + 0x10 ] 0x8
mov [ ebp - 0x4 ] 0x4
jne r-xdata
sub eax 0x7
je r-xdata
mov ecx [ ebp - 0x7c ]
push 0x2d
push 0x1
push 0x0
call sub_10005bb6
lea eax [ ebp - 0xa0 ]
push eax
lea ecx [ ebp - 0x64 ]
call sub_10017044
push eax
lea ecx [ ebp - 0x8c ]
call sub_10006770
mov ecx eax
call sub_100067a9
test al al
jne r-xdata
mov edi [ ebp - 0x90 ]
push [ ebp - 0x74 ]
push ebx
call sub_1000fed1
pop ecx
pop ecx
test al al
jne r-xdata
cmp [ ebp - 0x98 ] 0x3
jne r-xdata
cmp [ ebp - 0x14 ] 0x10
mov esi [ ebp - 0x28 ]
jae r-xdata
push [ ebp - 0x74 ]
mov ecx ebx
call sub_10010048
test al al
jne r-xdata
sub eax 0x4b
je r-xdata
push [ ebp - 0x74 ]
push ebx
call sub_1000fed1
pop ecx
pop ecx
test al al
je r-xdata
lea eax [ ebp - 0xc4 ]
push eax
lea ecx [ ebp - 0x64 ]
call sub_10017044
push eax
lea ecx [ ebp - 0x8c ]
call sub_100067a9
test al al
je r-xdata
mov ecx ebx
call sub_1000f8f3
mov ecx [ esi + 0x10 ]
movzx eax al
test [ ecx + eax * 2 ] 0x48
je r-xdata
lea eax [ ebp - 0xd4 ]
push eax
lea ecx [ ebp - 0x2c ]
call sub_1001039e
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0xa0 ] ecx
mov [ ebp - 0x9c ] eax
jmp r-xdata
cmp [ ebp - 0x50 ] 0x1
ja r-xdata
mov ecx ebx
call sub_1000f8f3
cmp al [ esi ]
jne r-xdata
lea esi [ ebp - 0x28 ]
lea eax [ ebp - 0x128 ]
push eax
mov ecx edi
call sub_1003fbde
or [ ebp - 0x6c ] 0x2
cmp [ eax + 0x14 ] 0x0
mov [ ebp - 0x4 ] 0x5
jbe r-xdata
mov eax [ edi ]
xor esi esi
mov ecx edi
mov [ ebp - 0x80 ] esi
call [ eax + 0x1c ]
mov [ ebp - 0xa4 ] eax
lea eax [ ebp - 0x48 ]
push eax
mov ecx edi
call sub_1003fa9c
mov [ ebp - 0x4 ] 0xb
cmp [ ebp - 0x34 ] esi
je r-xdata
dec eax
dec eax
jne r-xdata
lea ecx [ ebp - 0x8c ]
call sub_10006739
mov ecx ebx
mov esi eax
call sub_1000f8f3
cmp al [ esi ]
jne r-xdata
mov ecx ebx
call sub_1000f926
push [ ebp - 0x74 ]
push ebx
call sub_1000fed1
pop ecx
pop ecx
test al al
jne r-xdata
push [ ebp - 0x74 ]
mov ecx ebx
call sub_10010048
test al al
jne r-xdata
push 0xffffffff
push 0x0
lea ecx [ ebp - 0x2c ]
call sub_1000202a
mov [ ebp - 0x6d ] 0x0
lea eax [ ebp - 0xf0 ]
push eax
mov ecx edi
call sub_1003fbde
or [ ebp - 0x6c ] 0x4
push 0x0
mov ecx eax
mov [ ebp - 0x4 ] 0x6
call sub_10005c50
mov ecx ebx
mov esi eax
call sub_1000f8f3
mov [ ebp - 0x6d ] 0x1
cmp [ esi ] al
je r-xdata
push [ ebp - 0x74 ]
push ebx
call sub_1000fed1
pop ecx
pop ecx
test al al
jne r-xdata
mov eax [ edi ]
mov ecx edi
call [ eax + 0x8 ]
mov [ ebp - 0x6d ] al
test al al
je r-xdata
mov ecx ebx
call sub_1000f926
lea eax [ ebp - 0xcc ]
push eax
lea ecx [ ebp - 0x2c ]
call sub_10017044
push eax
lea ecx [ ebp - 0xa0 ]
call sub_100067a9
test al al
je r-xdata
lea eax [ ebp - 0xc4 ]
push eax
lea ecx [ ebp - 0x2c ]
call sub_10017044
push eax
lea ecx [ ebp - 0xa0 ]
call sub_100067a9
test al al
je r-xdata
cmp [ ebp - 0x14 ] 0x10
mov esi [ ebp - 0x28 ]
jae r-xdata
test [ ebp - 0x6c ] 0x2
mov [ ebp - 0x4 ] 0x3
je r-xdata
and [ ebp - 0x6c ] 0xfffffffb
push esi
push 0x1
lea ecx [ ebp - 0xf0 ]
call sub_100022b5
xor esi esi
test [ ebp - 0x6c ] 0x4
je r-xdata
mov ecx ebx
call sub_1000f8f3
cmp al 0x30
jl r-xdata
mov ecx [ ebp - 0x90 ]
mov eax [ ecx ]
call [ eax + 0x4 ]
push [ ebp - 0x74 ]
mov esi [ ebp - 0x94 ]
push esi
mov bl al
call sub_1000fed1
pop ecx
pop ecx
test al al
je r-xdata
cmp [ ebp - 0x30 ] 0x10
mov eax [ ebp - 0x44 ]
jae r-xdata
lea ecx [ ebp - 0xa0 ]
call sub_10006739
mov ecx ebx
mov esi eax
call sub_1000f8f3
cmp al [ esi ]
jne r-xdata
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x65 ] 0x1
mov ecx ebx
call sub_1000f8f3
cmp al [ esi ]
je r-xdata
lea esi [ ebp - 0x28 ]
cmp [ ebp - 0x6d ] 0x0
je r-xdata
and [ ebp - 0x6c ] 0xfffffffd
push esi
push 0x1
lea ecx [ ebp - 0x128 ]
call sub_100022b5
mov ecx ebx
call sub_1000f8f3
cmp al 0x39
jg r-xdata
mov edi [ ebp - 0xa4 ]
test bl bl
je r-xdata
cmp [ eax ] 0x7f
jae r-xdata
lea eax [ ebp - 0x44 ]
lea ecx [ ebp - 0xa0 ]
call sub_10006770
mov ecx ebx
call sub_1000f926
lea eax [ ebp - 0x144 ]
push eax
mov ecx edi
call sub_10047ffe
or [ ebp - 0x6c ] 0x8
mov [ ebp - 0x4 ] 0x8
cmp [ eax + 0x14 ] esi
jbe r-xdata
mov ecx ebx
call sub_1000f926
lea eax [ ebp - 0x160 ]
push eax
mov ecx edi
call sub_1003fbde
push 0xffffffff
push esi
push eax
lea ecx [ ebp - 0x64 ]
mov [ ebp - 0x4 ] 0x7
call sub_10002099
push esi
lea ecx [ ebp - 0x160 ]
jmp r-xdata
mov ecx ebx
call sub_1000f8f3
mov ecx [ ebp - 0x7c ]
mov [ ebp - 0xac ] al
push [ ebp - 0xac ]
push 0x1
call sub_10005b68
mov ecx ebx
call sub_1000f926
cmp [ ebp - 0x80 ] edi
jge r-xdata
mov [ ebp - 0x65 ] 0x1
jmp r-xdata
mov ecx esi
call sub_1000f8f3
cmp al bl
jne r-xdata
push esi
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_10005b42
push [ ebp - 0x74 ]
mov [ ebp - 0x4 ] 0xc
push ebx
xor edi edi
call sub_1000fed1
pop ecx
pop ecx
test al al
je r-xdata
xor bl bl
lea eax [ ebp - 0x10c ]
push eax
mov ecx edi
call sub_10047ffe
or [ ebp - 0x6c ] 0x10
push 0x0
mov ecx eax
mov [ ebp - 0x4 ] 0x9
call sub_10005c50
mov ecx ebx
mov esi eax
call sub_1000f8f3
cmp [ esi ] al
jne r-xdata
push 0x1
mov [ ebp - 0x4 ] 0x3
call sub_100022b5
jmp r-xdata
lea ecx [ ebp - 0x48 ]
jmp r-xdata
sub edi [ ebp - 0x80 ]
mov ecx esi
call sub_1000f926
push [ ebp - 0x74 ]
push esi
call sub_1000fed1
mov edi [ ebp - 0xa4 ]
cmp [ ebp - 0x30 ] 0x10
mov esi [ ebp - 0x44 ]
jae r-xdata
mov ecx ebx
call sub_1000f8f3
cmp al 0x30
jl r-xdata
test [ ebp - 0x6c ] 0x8
mov [ ebp - 0x4 ] 0x3
je r-xdata
and [ ebp - 0x6c ] 0xffffffef
push 0x0
push 0x1
lea ecx [ ebp - 0x10c ]
call sub_100022b5
mov bl 0x1
jmp r-xdata
push 0x0
push 0x30
push 0x1
mov ecx esi
call sub_10005b68
dec edi
jne r-xdata
jmp r-xdata
cmp [ ebp - 0x80 ] edi
jge r-xdata
cmp [ ebp - 0x80 ] edi
jge r-xdata
cmp [ ebp - 0x65 ] 0x0
jne r-xdata
lea esi [ ebp - 0x44 ]
push edi
lea ecx [ ebp - 0x2c ]
call sub_10005c50
cmp [ eax ] 0x0
je r-xdata
mov ecx ebx
call sub_1000f8f3
cmp al 0x39
jg r-xdata
test bl bl
je r-xdata
and [ ebp - 0x6c ] 0xfffffff7
push 0x0
push 0x1
lea ecx [ ebp - 0x144 ]
call sub_100022b5
test [ ebp - 0x6c ] 0x10
je r-xdata
mov esi [ ebp - 0x7c ]
cmp [ esi + 0x14 ] 0x0
jne r-xdata
mov [ ebp - 0x65 ] 0x1
jmp r-xdata
mov ecx esi
call sub_1000f8f3
cmp al 0x30
jl r-xdata
push 0x0
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_100022b5
test edi edi
jbe r-xdata
cmp edi esi
je r-xdata
mov ecx ebx
call sub_1000f8f3
cmp al [ ebp - 0x6d ]
jne r-xdata
mov ecx ebx
call sub_1000f8f3
mov ecx [ ebp - 0x7c ]
mov [ ebp - 0xa8 ] al
push [ ebp - 0xa8 ]
push 0x1
call sub_10005b68
push edi
lea ecx [ ebp - 0x2c ]
call sub_10005c50
cmp [ eax ] 0x7f
je r-xdata
mov ecx [ ebp - 0x94 ]
call sub_1000f926
mov ecx [ ebp - 0x90 ]
lea eax [ ebp - 0x17c ]
push eax
call sub_10047ffe
push 0xffffffff
push 0x0
push eax
lea ecx [ ebp - 0x64 ]
mov [ ebp - 0x4 ] 0xa
call sub_10002099
push 0x0
push 0x1
lea ecx [ ebp - 0x17c ]
mov [ ebp - 0x4 ] 0x3
call sub_100022b5
mov [ ebp - 0x75 ] 0x1
jmp r-xdata
mov ecx esi
call sub_1000f8f3
cmp al 0x39
jg r-xdata
push 0x0
push 0x1
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x4 ] 0xb
call sub_100022b5
jmp r-xdata
cmp [ esi ] 0x7f
je r-xdata
push edi
lea ecx [ ebp - 0x2c ]
call sub_10005c50
cmp [ eax ] 0x0
jle r-xdata
push esi
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_10005b68
inc edi
mov ecx ebx
call sub_1000f926
push [ ebp - 0x74 ]
push ebx
call sub_1000fed1
pop ecx
pop ecx
test al al
jne r-xdata
push edi
lea ecx [ ebp - 0x2c ]
call sub_10005c50
inc [ eax ]
jmp r-xdata
mov ecx esi
call sub_1000f8f3
mov ecx [ ebp - 0x7c ]
mov [ ebp - 0xb0 ] al
push [ ebp - 0xb0 ]
push 0x1
call sub_10005b68
inc [ ebp - 0x80 ]
mov ecx esi
call sub_1000f926
push [ ebp - 0x74 ]
push esi
call sub_1000fed1
jmp r-xdata
dec edi
je r-xdata
mov [ ebp - 0x65 ] 0x1
inc edi
jmp r-xdata
pop ecx
pop ecx
test al al
je r-xdata
test edi edi
jne r-xdata
push edi
lea ecx [ ebp - 0x2c ]
call sub_10005c50
mov cl [ esi ]
cmp cl [ eax ]
jne r-xdata
lea eax [ esi + 0x1 ]
cmp [ eax ] 0x0
jle r-xdata
push edi
lea ecx [ ebp - 0x2c ]
call sub_10005c50
mov cl [ esi ]
cmp cl [ eax ]
jl r-xdata
mov [ ebp - 0x65 ] 0x1
mov esi eax
jmp r-xdata
sub_100492c0
push 0x120
mov eax sub_1004bd64
call sub_10029e9c
mov eax [ ebp + 0x8 ]
mov edi [ ebp + 0x18 ]
mov [ ebp - 0x7c ] eax
mov [ ebp - 0x78 ] edi
xor esi esi
cmp [ ebp + 0x14 ] 0x0
mov [ ebp - 0x4 ] esi
mov ecx edi
je r-xdata
lea eax [ ebp - 0x88 ]
push eax
call sub_1000781e
push eax
mov [ ebp - 0x4 ] 0x2
call sub_100488e5
pop ecx
lea ecx [ ebp - 0x88 ]
lea eax [ ebp - 0x84 ]
push eax
call sub_1000781e
push eax
mov [ ebp - 0x4 ] 0x1
call sub_10048982
pop ecx
lea ecx [ ebp - 0x84 ]
jmp r-xdata
mov [ ebp - 0x68 ] eax
mov eax [ ebp + 0x38 ]
cmp eax [ ebp - 0x68 ]
ja r-xdata
neg eax
mov [ ebp - 0x4 ] 0x0
mov ebx eax
call sub_10007806
lea eax [ ebp - 0x2c ]
push eax
mov ecx ebx
call sub_1003fa9c
mov eax [ ebx ]
mov ecx ebx
mov [ ebp - 0x4 ] 0x3
call [ eax + 0x1c ]
cmp eax esi
jge r-xdata
cmp [ ebp - 0x14 ] 0x10
mov eax [ ebp - 0x28 ]
jae r-xdata
mov ecx [ ebp - 0x68 ]
sub ecx eax
push 0x30
inc ecx
push ecx
push esi
lea ecx [ ebp + 0x24 ]
call sub_10005bb6
jmp r-xdata
cmp [ eax ] 0x7f
je r-xdata
lea eax [ ebp - 0x28 ]
lea ecx [ ebp - 0x48 ]
call sub_10007bb4
cmp [ ebp + 0x20 ] 0x0
mov eax [ ebx ]
lea ecx [ ebp - 0x70 ]
push ecx
mov [ ebp - 0x4 ] 0x4
mov ecx ebx
je r-xdata
cmp [ ebp - 0x14 ] 0x10
mov eax [ ebp - 0x28 ]
jae r-xdata
call [ eax + 0x20 ]
mov eax [ ebp - 0x70 ]
mov [ ebp - 0x70 ] eax
lea eax [ ebp - 0xc4 ]
push eax
mov ecx ebx
call sub_1003fbde
mov [ ebp - 0x4 ] 0x6
call [ eax + 0x24 ]
mov eax [ ebp - 0x70 ]
mov [ ebp - 0x70 ] eax
lea eax [ ebp - 0xc4 ]
push eax
mov ecx ebx
call sub_10047ffe
mov [ ebp - 0x4 ] 0x5
jmp r-xdata
cmp [ eax ] 0x0
jle r-xdata
lea eax [ ebp - 0x28 ]
mov [ ebp - 0x69 ] 0x0
xor ecx ecx
lea eax [ ebp - 0xc4 ]
push eax
mov ecx ebx
call sub_1003fb1a
push 0xffffffff
push esi
push eax
lea ecx [ ebp - 0x64 ]
mov [ ebp - 0x4 ] 0x8
call sub_10002099
push esi
push 0x1
lea ecx [ ebp - 0xc4 ]
mov [ ebp - 0x4 ] 0x7
call sub_100022b5
push 0xffffffff
push esi
push eax
lea ecx [ ebp - 0x48 ]
call sub_10002099
push esi
push 0x1
lea ecx [ ebp - 0xc4 ]
call sub_100022b5
lea ecx [ ebp - 0x64 ]
call sub_10007bb4
mov eax [ edi + 0x10 ]
mov [ ebp - 0x4 ] 0x7
test al 0x8
je r-xdata
mov eax [ ebx ]
mov ecx ebx
call [ eax + 0x8 ]
cmp [ ebp - 0x14 ] 0x10
mov edi [ ebp - 0x28 ]
mov [ ebp - 0x70 ] al
jae r-xdata
inc esi
sub eax 0x4
je r-xdata
mov esi [ ebp + 0x38 ]
sub esi [ ebp - 0x68 ]
lea edi [ ebp - 0x28 ]
inc ecx
cmp ecx 0x4
jb r-xdata
mov [ ebp - 0x69 ] 0x1
add esi [ ebp - 0x50 ]
jmp r-xdata
sub eax 0x7
je r-xdata
mov edi [ ebp - 0x78 ]
xor esi esi
test al al
jle r-xdata
movsx eax [ ebp + ecx - 0x70 ]
sub eax 0x20
je r-xdata
mov eax [ edi + 0x18 ]
test eax eax
jle r-xdata
add esi [ ebp - 0x34 ]
jmp r-xdata
sub eax 0x4b
je r-xdata
movsx eax al
cmp eax esi
jae r-xdata
xor esi esi
cmp eax esi
jbe r-xdata
mov eax [ ebp - 0x68 ]
cmp [ ebp + 0x38 ] eax
ja r-xdata
dec eax
dec eax
je r-xdata
push [ ebp - 0x70 ]
sub esi eax
push 0x1
push esi
lea ecx [ ebp + 0x24 ]
call sub_10005bb6
lea eax [ edi + 0x1 ]
cmp [ eax ] 0x0
jle r-xdata
and [ ebp - 0x74 ] 0x0
cmp edi 0x100
jne r-xdata
sub eax esi
mov esi eax
jmp r-xdata
xor eax eax
sub eax [ ebp + 0x38 ]
inc eax
jmp r-xdata
cmp ecx 0x3
je r-xdata
jmp r-xdata
mov al [ edi ]
cmp al 0x7f
je r-xdata
mov edi eax
jmp r-xdata
push 0x1
push [ ebp + 0x1c ]
lea eax [ ebp - 0xa8 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call sub_10047d80
mov ecx [ eax ]
mov [ ebp + 0xc ] ecx
mov eax [ eax + 0x4 ]
add esp 0x14
mov [ ebp + 0x10 ] eax
sub eax 0x4
je r-xdata
push esi
push [ ebp + 0x1c ]
lea eax [ ebp - 0x90 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call sub_10047d80
mov ecx [ eax ]
mov [ ebp + 0xc ] ecx
mov eax [ eax + 0x4 ]
add esp 0x14
mov [ ebp + 0x10 ] eax
xor esi esi
cmp [ ebp - 0x69 ] 0x0
jne r-xdata
mov edi [ edi + 0x10 ]
and edi 0x1c0
cmp edi 0x40
je r-xdata
xor edx edx
cmp edx [ ebp - 0x68 ]
sbb edx edx
neg edx
add edx [ ebp + 0x38 ]
add edx eax
add esi edx
jmp r-xdata
inc [ ebp - 0x74 ]
cmp [ ebp - 0x74 ] 0x4
jb r-xdata
push esi
push [ ebp + 0x1c ]
lea eax [ ebp - 0x98 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call sub_10047d80
add esp 0x14
xor esi esi
lea eax [ ebp - 0x114 ]
push eax
lea ecx [ ebp - 0x64 ]
call sub_1001039e
push [ ebp - 0x50 ]
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0xa0 ]
jmp r-xdata
sub eax 0x7
je r-xdata
mov eax [ ebp - 0x74 ]
movsx eax [ ebp + eax - 0x70 ]
sub eax 0x20
je r-xdata
xor edi edi
inc edi
cmp [ ebp - 0x34 ] edi
jbe r-xdata
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call sub_10047d44
add esp 0x18
jmp r-xdata
cmp [ ebp - 0x34 ] 0x0
jbe r-xdata
sub eax 0x4b
je r-xdata
mov eax [ ebp - 0x78 ]
and [ eax + 0x18 ] 0x0
push esi
push [ ebp + 0x1c ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp - 0x7c ]
call sub_10047d80
add esp 0x14
xor esi esi
push esi
push edi
lea ecx [ ebp - 0x64 ]
call sub_100022b5
push esi
push edi
lea ecx [ ebp - 0x48 ]
call sub_100022b5
push esi
push edi
lea ecx [ ebp - 0x2c ]
call sub_100022b5
push esi
push edi
lea ecx [ ebp + 0x24 ]
call sub_100022b5
mov eax [ ebp - 0x7c ]
call sub_10029f1f
retn 0x38
push edi
lea eax [ ebp - 0x98 ]
push eax
lea eax [ ebp - 0xa8 ]
push eax
lea ecx [ ebp - 0x48 ]
call sub_1001039e
mov ecx eax
call sub_1003f6ad
mov ecx [ ebp - 0x34 ]
dec ecx
push ecx
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0xa0 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call sub_10047d44
mov ecx [ eax ]
mov [ ebp + 0xc ] ecx
mov eax [ eax + 0x4 ]
add esp 0x18
mov [ ebp + 0x10 ] eax
mov ecx [ eax ]
mov [ ebp + 0xc ] ecx
mov eax [ eax + 0x4 ]
mov [ ebp + 0x10 ] eax
lea eax [ ebp - 0x124 ]
push eax
lea ecx [ ebp - 0x48 ]
call sub_1001039e
push 0x1
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0xf4 ]
jmp r-xdata
mov eax [ ebp - 0x68 ]
test eax eax
jne r-xdata
dec eax
dec eax
je r-xdata
cmp [ ebp + 0x38 ] eax
ja r-xdata
lea eax [ ebp - 0xfc ]
push eax
lea ecx [ ebp + 0x24 ]
call sub_1001039e
push [ ebp + 0x38 ]
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0xd4 ]
cmp edi 0x100
jne r-xdata
jmp r-xdata
lea eax [ ebp - 0x10c ]
push eax
lea ecx [ ebp + 0x24 ]
call sub_1001039e
mov ecx [ ebp + 0x38 ]
sub ecx [ ebp - 0x68 ]
push ecx
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0x11c ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call sub_10047d44
mov ecx [ eax ]
mov [ ebp + 0xc ] ecx
mov eax [ eax + 0x4 ]
mov [ ebp + 0x10 ] eax
mov eax [ ebx ]
add esp 0x18
mov ecx ebx
call [ eax + 0x4 ]
mov [ ebp - 0x8c ] al
push [ ebp - 0x8c ]
lea ecx [ ebp + 0xc ]
call sub_1000f8d2
push [ ebp - 0x68 ]
lea eax [ ebp - 0x12c ]
push eax
lea eax [ ebp - 0x104 ]
push eax
lea ecx [ ebp + 0x24 ]
call sub_10017044
mov ecx eax
call sub_10047f34
push [ ebp - 0x68 ]
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0xe4 ]
jmp r-xdata
push 0x30
lea ecx [ ebp + 0xc ]
call sub_1000f8d2
mov eax [ ebx ]
mov ecx ebx
call [ eax + 0x4 ]
mov [ ebp - 0x80 ] al
push [ ebp - 0x80 ]
lea ecx [ ebp + 0xc ]
call sub_1000f8d2
mov eax [ ebp - 0x68 ]
sub eax [ ebp + 0x38 ]
push eax
push 0x30
push [ ebp + 0x10 ]
lea eax [ ebp - 0xdc ]
push [ ebp + 0xc ]
push eax
call sub_10047d80
mov ecx [ eax ]
mov [ ebp + 0xc ] ecx
mov eax [ eax + 0x4 ]
mov [ ebp + 0x10 ] eax
add esp 0x14
lea eax [ ebp - 0xec ]
push eax
lea ecx [ ebp + 0x24 ]
call sub_1001039e
push [ ebp + 0x38 ]
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0xcc ]
jmp r-xdata
sub_100497f3
push 0x10
mov eax sub_1004bd8c
call sub_10029e66
mov esi ecx
mov [ ebp - 0x14 ] esi
mov ecx [ ebp + 0x8 ]
lea eax [ ebp - 0x1c ]
push eax
call sub_10007307
mov ecx [ eax ]
lea edi [ esi + 0x14 ]
mov [ edi ] ecx
mov eax [ eax + 0x4 ]
mov ecx [ ebp + 0x8 ]
xor ebx ebx
mov [ edi + 0x4 ] eax
mov [ esi + 0x8 ] ebx
mov [ esi + 0xc ] ebx
mov [ ebp - 0x4 ] ebx
call sub_10041d6b
push edi
push ebx
push eax
call sub_100066e3
mov ecx [ ebp + 0x8 ]
add esp 0xc
mov [ esi + 0x8 ] eax
call sub_10041daa
push edi
push ebx
push eax
call sub_100066e3
add esp 0xc
mov [ esi + 0xc ] eax
call sub_1004a81a
mov [ esi + 0x10 ] eax
call sub_10029f0b
retn 0x4
sub_10049876
push 0x4c
mov eax sub_1004bdb7
call sub_10029e9c
mov eax [ ebp + 0x20 ]
mov edx [ ebp + 0x28 ]
mov ebx [ ebp + 0x8 ]
mov esi [ ebp + 0x24 ]
push eax
push [ ebp + 0x1c ]
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
lea eax [ ebp - 0x2c ]
push eax
mov [ ebp - 0x58 ] edx
call sub_10048abc
lea eax [ ebp + 0x14 ]
xor edi edi
push eax
lea ecx [ ebp + 0xc ]
mov [ ebp - 0x4 ] edi
call sub_10010048
test al al
je r-xdata
cmp [ ebp - 0x18 ] edi
jne r-xdata
or [ esi ] 0x1
lea ecx [ ebp - 0x48 ]
call sub_10007bb4
push [ ebp - 0x18 ]
lea ecx [ ebp - 0x48 ]
mov [ ebp - 0x4 ] 0x1
call sub_1000670c
push 0x0
lea ecx [ ebp - 0x2c ]
call sub_10005c50
cmp [ eax ] 0x30
jl r-xdata
or [ esi ] 0x2
jmp r-xdata
xor edi edi
push 0x2d
inc edi
push edi
lea ecx [ ebp - 0x48 ]
call sub_10005b68
jmp r-xdata
push 0x0
lea ecx [ ebp - 0x2c ]
call sub_10005c50
cmp [ eax ] 0x39
jle r-xdata
mov eax [ ebp + 0xc ]
mov [ ebx ] eax
mov eax [ ebp + 0x10 ]
push 0x0
push 0x1
lea ecx [ ebp - 0x2c ]
mov [ ebx + 0x4 ] eax
call sub_100022b5
mov eax ebx
call sub_10029f1f
retn 0x24
cmp edi [ ebp - 0x18 ]
jb r-xdata
push edi
lea ecx [ ebp - 0x2c ]
call sub_10005c50
mov al [ eax ]
mov [ ebp - 0x54 ] al
push [ ebp - 0x54 ]
lea ecx [ ebp - 0x48 ]
push 0x1
call sub_10005b68
inc edi
cmp [ ebp - 0x30 ] 0x10
mov edi [ ebp - 0x44 ]
jae r-xdata
and [ ebp - 0x4c ] 0x0
lea eax [ ebp - 0x4c ]
push eax
push 0x0
lea eax [ ebp - 0x50 ]
push eax
push edi
call sub_1002339f
add esp 0x10
cmp [ ebp - 0x50 ] edi
je r-xdata
lea edi [ ebp - 0x44 ]
or [ esi ] 0x2
fstp st0
cmp [ ebp - 0x4c ] 0x0
jne r-xdata
mov eax [ ebp - 0x58 ]
fstp [ eax ]
jmp r-xdata
push 0x0
push 0x1
lea ecx [ ebp - 0x48 ]
call sub_100022b5
sub_10049998
push 0x20
mov eax sub_1004bde4
call sub_10029e9c
mov eax [ ebp + 0x20 ]
mov edi [ ebp + 0x8 ]
mov esi [ ebp + 0x24 ]
mov ebx [ ebp + 0x28 ]
push eax
push [ ebp + 0x1c ]
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
lea eax [ ebp - 0x2c ]
push eax
call sub_10048abc
and [ ebp - 0x4 ] 0x0
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_10010048
test al al
je r-xdata
cmp [ ebp - 0x18 ] 0x0
jne r-xdata
or [ esi ] 0x1
push 0xffffffff
push 0x0
lea eax [ ebp - 0x2c ]
push eax
mov ecx ebx
call sub_10002099
or [ esi ] 0x2
jmp r-xdata
mov eax [ ebp + 0xc ]
mov [ edi ] eax
mov eax [ ebp + 0x10 ]
push 0x0
push 0x1
lea ecx [ ebp - 0x2c ]
mov [ edi + 0x4 ] eax
call sub_100022b5
mov eax edi
call sub_10029f1f
retn 0x24
sub_10049a17
push 0x54
mov eax sub_1004be11
call sub_10029e9c
fldz
mov [ ebp - 0x60 ] ecx
fcomp [ ebp + 0x20 ]
mov [ ebp - 0x5c ] 0x0
fnstsw ax
test ah 0x41
jne r-xdata
fld [ ebp + 0x20 ]
and [ ebp - 0x58 ] 0x0
fld [ r--data ]
fcom st1
fnstsw ax
fstp st1
test ah 0x41
jpe r-xdata
fld [ ebp + 0x20 ]
mov [ ebp - 0x5c ] 0x1
fchs
fstp [ ebp + 0x20 ]
lea ecx [ ebp - 0x54 ]
fstp st0
call sub_10007bb4
fld [ ebp + 0x20 ]
and [ ebp - 0x4 ] 0x0
push ecx
push ecx
fstp [ esp ]
push r--data
lea eax [ ebp - 0x38 ]
push 0x28
push eax
call sub_100264db
mov edi eax
add esp 0x14
xor esi esi
test edi edi
jle r-xdata
cmp [ ebp - 0x58 ] 0x1388
jae r-xdata
push 0x30
push [ ebp - 0x58 ]
lea ecx [ ebp - 0x54 ]
call sub_10005b68
sub esp 0x1c
lea eax [ ebp - 0x54 ]
mov ecx esp
mov [ ebp - 0x58 ] esp
push eax
call sub_10001c9f
push [ ebp - 0x5c ]
mov ecx [ ebp - 0x60 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_100492c0
push 0x0
push 0x1
lea ecx [ ebp - 0x54 ]
call sub_100022b5
mov eax [ ebp + 0x8 ]
call sub_10029f1f
retn 0x20
movzx eax [ ebp + esi - 0x38 ]
push eax
push 0x1
lea ecx [ ebp - 0x54 ]
call sub_10005b68
inc esi
cmp esi edi
jl r-xdata
fld [ ebp + 0x20 ]
add [ ebp - 0x58 ] 0xa
fdiv [ r--data ]
fstp [ ebp + 0x20 ]
fld [ ebp + 0x20 ]
fcomp st1
fnstsw ax
test ah 0x1
je r-xdata
sub_10049b17
push 0x28
mov eax sub_1004be3e
call sub_10029e9c
mov eax [ ebp + 0x20 ]
cmp [ eax + 0x18 ] 0x10
mov edi ecx
jb r-xdata
add eax 0x4
mov eax [ eax + 0x4 ]
jmp r-xdata
mov cl [ eax ]
xor esi esi
jmp r-xdata
mov [ ebp - 0x30 ] 0x1
inc eax
cmp [ eax ] 0x2d
mov [ ebp - 0x30 ] 0x0
jne r-xdata
cmp cl 0x30
jge r-xdata
cmp cl 0x39
jg r-xdata
push esi
push eax
lea ecx [ ebp - 0x2c ]
call sub_100114f7
and [ ebp - 0x4 ] 0x0
test esi esi
jne r-xdata
inc esi
mov cl [ esi + eax ]
sub esp 0x1c
lea eax [ ebp - 0x2c ]
mov ecx esp
mov [ ebp - 0x34 ] esp
push eax
call sub_10001c9f
push [ ebp - 0x30 ]
mov ecx edi
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_100492c0
push 0x0
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_100022b5
mov eax [ ebp + 0x8 ]
call sub_10029f1f
retn 0x1c
push 0x30
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_10005b68
sub_10049bba
push 0x4
mov eax sub_1004b33e
call sub_10029e33
mov esi ecx
mov [ ebp - 0x10 ] esi
mov eax [ ebp + 0xc ]
mov [ esi + 0x4 ] eax
push [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
mov [ esi ] r--data
call sub_100497f3
mov eax esi
call sub_10029f0b
retn 0x8
sub_10049c09
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_10049bf1
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_10025c9c
pop ecx
sub_10049c2a
mov edi edi
push ebp
mov ebp esp
sub esp 0x38
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x1c ]
push ebx
mov ebx [ ebp + 0x10 ]
push esi
mov esi [ ebp + 0xc ]
push edi
push ebx
mov ecx esi
mov [ ebp - 0x34 ] eax
lea edi [ ebp - 0x24 ]
call sub_10010048
test al al
jne r-xdata
push ebx
push esi
mov [ ebp - 0x25 ] 0x0
call sub_1000fed1
pop ecx
pop ecx
test al al
je r-xdata
mov ecx esi
call sub_1000f8f3
mov ecx esi
cmp al 0x2b
jne r-xdata
push ebx
push esi
call sub_1000fed1
pop ecx
pop ecx
test al al
jne r-xdata
mov ecx esi
call sub_1000f8f3
cmp al 0x30
jne r-xdata
call sub_1000f8f3
cmp al 0x2d
jne r-xdata
mov [ ebp - 0x24 ] al
jmp r-xdata
mov ecx esi
call sub_1000f8f3
cmp al 0x30
jl r-xdata
cmp [ ebp - 0x25 ] 0x0
jne r-xdata
cmp [ ebp - 0x25 ] 0x0
je r-xdata
mov ecx esi
mov [ ebp - 0x25 ] 0x1
call sub_1000f926
push ebx
push esi
call sub_1000fed1
pop ecx
pop ecx
test al al
jne r-xdata
mov [ ebp - 0x24 ] al
mov ecx esi
lea edi [ ebp - 0x23 ]
call sub_1000f926
mov ecx esi
call sub_1000f8f3
cmp al 0x39
jg r-xdata
and [ ebp - 0x30 ] 0x0
lea eax [ ebp - 0x30 ]
push eax
push 0xa
lea eax [ ebp - 0x38 ]
push eax
lea eax [ ebp - 0x24 ]
push eax
mov [ edi ] 0x0
call sub_10022fa7
and [ ebp - 0x2c ] 0x0
add esp 0x10
push ebx
mov ecx esi
mov edi eax
call sub_10010048
test al al
je r-xdata
lea edi [ ebp - 0x24 ]
mov [ edi ] 0x30
inc edi
jmp r-xdata
mov ecx esi
call sub_1000f8f3
mov [ edi ] al
lea eax [ ebp - 0x5 ]
cmp edi eax
jae r-xdata
lea eax [ ebp - 0x24 ]
cmp [ ebp - 0x38 ] eax
je r-xdata
mov [ ebp - 0x2c ] 0x1
mov ecx esi
mov [ ebp - 0x25 ] 0x1
call sub_1000f926
inc edi
or [ ebp - 0x2c ] 0x2
cmp [ ebp - 0x30 ] 0x0
jne r-xdata
cmp edi [ ebp + 0x14 ]
jl r-xdata
cmp [ ebp + 0x18 ] edi
jl r-xdata
mov eax [ ebp - 0x34 ]
mov [ eax ] edi
jmp r-xdata
mov ecx [ ebp - 0x4 ]
mov eax [ ebp - 0x2c ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_10025c8d
leave
retn
sub_10049d75
mov edi edi
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi [ ebp + 0x24 ]
lea eax [ edi + 0x8 ]
push eax
push 0x17
xor ebx ebx
push ebx
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
push ecx
mov [ ebp - 0x4 ] ecx
call sub_10049c2a
mov esi [ ebp + 0x20 ]
add esp 0x18
or [ esi ] eax
jne r-xdata
or [ esi ] 0x2
cmp [ ebp + 0x10 ] bl
jne r-xdata
or [ esi ] 0x2
cmp [ ebp + 0x10 ] bl
jne r-xdata
cmp [ ebp + 0x11 ] 0x3a
jne r-xdata
lea ecx [ ebp + 0xc ]
call sub_1000f948
cmp [ ebp + 0x11 ] 0x3a
jne r-xdata
lea ecx [ ebp + 0xc ]
call sub_1000f948
lea ecx [ ebp + 0xc ]
call sub_1000f926
lea eax [ edi + 0x4 ]
push eax
push 0x3b
push ebx
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
push [ ebp - 0x4 ]
call sub_10049c2a
add esp 0x18
or [ esi ] eax
jmp r-xdata
lea ecx [ ebp + 0xc ]
call sub_1000f926
push edi
push 0x3b
push ebx
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
push [ ebp - 0x4 ]
call sub_10049c2a
add esp 0x18
or [ esi ] eax
jmp r-xdata
cmp [ esi ] ebx
jne r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
pop edi
mov [ eax ] ecx
mov ecx [ ebp + 0x10 ]
pop esi
mov [ eax + 0x4 ] ecx
pop ebx
leave
retn 0x20
sub_10049e33
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
push edi
mov edi ecx
mov eax [ edi ]
mov [ ebp - 0x8 ] edi
call [ eax + 0x4 ]
mov [ ebp - 0x4 ] eax
test eax eax
jne r-xdata
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_10010048
mov ebx [ ebp + 0x24 ]
mov esi [ ebp + 0x20 ]
test al al
jne r-xdata
mov [ ebp - 0x4 ] 0x2
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
call sub_1000fed1
pop ecx
pop ecx
test al al
jne r-xdata
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
call sub_1000fed1
pop ecx
pop ecx
test al al
je r-xdata
cmp [ ebp + 0x11 ] 0x30
jl r-xdata
lea ecx [ ebp + 0xc ]
call sub_1000f948
cmp [ ebp + 0x11 ] 0x20
jne r-xdata
lea ecx [ ebp + 0xc ]
call sub_1000f948
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
call sub_1000fed1
pop ecx
pop ecx
test al al
jne r-xdata
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
push ebx
push esi
push [ ebp + 0x1c ]
lea eax [ ebp - 0x10 ]
push [ ebp + 0x18 ]
mov ecx edi
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call sub_10044ea2
mov [ ebp - 0x4 ] 0x2
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
lea ecx [ ebp + 0xc ]
call sub_1000f926
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_10010048
test al al
jne r-xdata
cmp [ ebp + 0x11 ] 0x3a
je r-xdata
lea ecx [ ebp + 0xc ]
call sub_1000f948
cmp [ ebp + 0x11 ] 0x39
jg r-xdata
lea ecx [ ebp + 0xc ]
call sub_1000f948
cmp [ ebp + 0x11 ] 0x20
jne r-xdata
lea ecx [ ebp + 0xc ]
call sub_1000f948
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
call sub_1000fed1
pop ecx
pop ecx
test al al
jne r-xdata
cmp [ ebp + 0x10 ] al
jne r-xdata
lea ecx [ ebp + 0xc ]
call sub_1000f926
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
cmp [ ebp - 0x4 ] 0x2
jne r-xdata
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
call sub_1000fed1
pop ecx
pop ecx
test al al
je r-xdata
cmp [ ebp + 0x11 ] 0x30
jl r-xdata
lea ecx [ ebp + 0xc ]
call sub_1000f948
cmp [ ebp + 0x11 ] 0x2c
je r-xdata
lea ecx [ ebp + 0xc ]
call sub_1000f948
cmp [ ebp - 0x4 ] 0x1
jne r-xdata
lea edi [ ebx + 0x10 ]
push edi
push 0xc
push 0x1
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
push [ ebp - 0x8 ]
call sub_10049c2a
or [ esi ] eax
add esp 0x18
dec [ edi ]
mov edi [ ebp - 0x8 ]
jmp r-xdata
cmp [ ebp + 0x11 ] 0x20
jne r-xdata
lea ecx [ ebp + 0xc ]
call sub_1000f948
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
call sub_1000fed1
pop ecx
pop ecx
test al al
jne r-xdata
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
cmp [ ebp - 0x4 ] 0x2
jne r-xdata
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
push ebx
push esi
push [ ebp + 0x1c ]
lea eax [ ebp - 0x10 ]
push [ ebp + 0x18 ]
mov ecx edi
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call sub_10044ecb
jmp r-xdata
lea eax [ ebx + 0xc ]
push eax
push 0x1f
push 0x1
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
push edi
call sub_10049c2a
add esp 0x18
or [ esi ] eax
jmp r-xdata
lea ecx [ ebp + 0xc ]
call sub_1000f926
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_10010048
test al al
jne r-xdata
cmp [ ebp + 0x11 ] 0x3a
je r-xdata
lea ecx [ ebp + 0xc ]
call sub_1000f948
push ebx
push esi
push [ ebp + 0x1c ]
lea eax [ ebp - 0x10 ]
push [ ebp + 0x18 ]
mov ecx edi
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call sub_10044ea2
cmp [ ebp - 0x4 ] 0x4
mov ecx [ eax ]
mov [ ebp + 0xc ] ecx
mov eax [ eax + 0x4 ]
mov [ ebp + 0x10 ] eax
jne r-xdata
or [ esi ] 0x2
jmp r-xdata
cmp [ ebp + 0x11 ] 0x39
jg r-xdata
lea ecx [ ebp + 0xc ]
call sub_1000f948
cmp [ ebp + 0x11 ] 0x2f
jne r-xdata
lea ecx [ ebp + 0xc ]
call sub_1000f948
mov ecx [ eax ]
mov [ ebp + 0xc ] ecx
mov eax [ eax + 0x4 ]
mov [ ebp + 0x10 ] eax
jmp r-xdata
cmp [ ebp + 0x11 ] 0x20
jne r-xdata
lea ecx [ ebp + 0xc ]
call sub_1000f948
or [ esi ] 0x2
jmp r-xdata
cmp [ ebp + 0x10 ] al
jne r-xdata
lea ecx [ ebp + 0xc ]
call sub_1000f926
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
mov [ ebp - 0x4 ] 0x3
jmp r-xdata
cmp [ ebp - 0x4 ] 0x1
je r-xdata
jmp r-xdata
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_10010048
test al al
je r-xdata
cmp [ ebp + 0x11 ] 0x30
jl r-xdata
lea ecx [ ebp + 0xc ]
call sub_1000f948
cmp [ ebp + 0x11 ] 0x2c
je r-xdata
lea ecx [ ebp + 0xc ]
call sub_1000f948
lea edi [ ebx + 0x10 ]
push edi
push 0xc
push 0x1
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
push [ ebp - 0x8 ]
call sub_10049c2a
or [ esi ] eax
add esp 0x18
dec [ edi ]
mov edi [ ebp - 0x8 ]
jmp r-xdata
cmp [ ebp - 0x4 ] 0x3
je r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
pop edi
mov [ eax ] ecx
mov ecx [ ebp + 0x10 ]
pop esi
mov [ eax + 0x4 ] ecx
pop ebx
leave
retn 0x20
or [ esi ] 0x1
cmp [ ebp - 0x4 ] 0x4
je r-xdata
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
lea eax [ ebx + 0xc ]
push eax
push 0x1f
push 0x1
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
push edi
call sub_10049c2a
add esp 0x18
or [ esi ] eax
jmp r-xdata
push ebx
push esi
push [ ebp + 0x1c ]
lea eax [ ebp - 0x10 ]
push [ ebp + 0x18 ]
mov ecx edi
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call sub_10044ea2
cmp [ ebp + 0x11 ] 0x39
jg r-xdata
lea ecx [ ebp + 0xc ]
call sub_1000f948
cmp [ ebp + 0x11 ] 0x2f
jne r-xdata
lea ecx [ ebp + 0xc ]
call sub_1000f948
cmp [ ebp - 0x4 ] 0x4
jne r-xdata
jmp r-xdata
cmp [ ebp - 0x4 ] 0x3
jne r-xdata
lea edi [ ebx + 0x10 ]
push edi
push 0xc
push 0x1
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
push [ ebp - 0x8 ]
call sub_10049c2a
or [ esi ] eax
add esp 0x18
dec [ edi ]
jmp r-xdata
push ebx
push esi
push [ ebp + 0x1c ]
lea eax [ ebp - 0x10 ]
push [ ebp + 0x18 ]
mov ecx edi
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call sub_10044ecb
jmp r-xdata
add ebx 0xc
push ebx
push 0x1f
push 0x1
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
push edi
call sub_10049c2a
add esp 0x18
or [ esi ] eax
jmp r-xdata
mov ecx [ eax ]
mov [ ebp + 0xc ] ecx
mov eax [ eax + 0x4 ]
mov [ ebp + 0x10 ] eax
sub_1004a261
mov edi edi
push ebp
mov ebp esp
push ecx
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x4 ]
push eax
push 0x7f3
push 0x0
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
push ecx
call sub_10049c2a
mov ecx [ ebp + 0x20 ]
or [ ecx ] eax
mov eax [ ecx ]
add esp 0x18
test al 0x2
jne r-xdata
test [ ecx ] 0x2
jne r-xdata
mov edx 0x76c
cmp [ ebp - 0x4 ] edx
jl r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x4 ] ecx
leave
retn 0x20
mov eax [ ebp + 0x24 ]
mov ecx [ ebp - 0x4 ]
mov [ eax + 0x14 ] ecx
cmp [ ebp - 0x4 ] 0x87
jle r-xdata
sub [ ebp - 0x4 ] edx
jmp r-xdata
or eax 0x2
mov [ ecx ] eax
sub_1004a2cf
mov edi edi
push ebp
mov ebp esp
push [ ecx + 0x8 ]
lea eax [ ebp + 0x14 ]
push 0x0
push eax
lea eax [ ebp + 0xc ]
push eax
call sub_1000fd81
add esp 0x10
test eax eax
jge r-xdata
mov ecx [ ebp + 0x24 ]
sar eax 0x1
mov [ ecx + 0x18 ] eax
mov eax [ ebp + 0x20 ]
or [ eax ] 0x2
jmp r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x4 ] ecx
pop ebp
retn 0x20
sub_1004a30f
mov edi edi
push ebp
mov ebp esp
push [ ecx + 0xc ]
lea eax [ ebp + 0x14 ]
push 0x0
push eax
lea eax [ ebp + 0xc ]
push eax
call sub_1000fd81
add esp 0x10
test eax eax
jge r-xdata
mov ecx [ ebp + 0x24 ]
sar eax 0x1
mov [ ecx + 0x10 ] eax
mov eax [ ebp + 0x20 ]
or [ eax ] 0x2
jmp r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x4 ] ecx
pop ebp
retn 0x20
sub_1004a34f
push 0x98
mov eax sub_1004bb28
call sub_10029e33
mov eax [ ebp + 0x8 ]
xor edi edi
mov [ ebp - 0x10 ] edi
cmp eax edi
je r-xdata
push 0x5
pop eax
call sub_10029f0b
retn
cmp [ eax ] edi
jne r-xdata
push 0x1c
call sub_10025dd6
pop ecx
mov [ ebp - 0x14 ] eax
push 0x3
mov [ ebp - 0x4 ] edi
pop esi
cmp eax edi
je r-xdata
xor eax eax
mov ecx [ ebp + 0xc ]
lea eax [ ebp - 0x30 ]
push eax
call sub_100073c0
push eax
lea ecx [ ebp - 0xa4 ]
mov [ ebp - 0x4 ] 0x1
mov [ ebp - 0x10 ] 0x1
call sub_1000736b
mov ecx [ ebp - 0x14 ]
push edi
push eax
mov [ ebp - 0x4 ] 0x2
mov [ ebp - 0x10 ] esi
call sub_10049bba
jmp r-xdata
test [ ebp - 0x10 ] 0x1
je r-xdata
and [ ebp - 0x10 ] 0xfffffffd
lea ecx [ ebp - 0xa4 ]
call sub_100073dd
test [ ebp - 0x10 ] 0x2
mov ecx [ ebp + 0x8 ]
mov [ ecx ] eax
mov [ ebp - 0x4 ] esi
je r-xdata
push edi
push 0x1
lea ecx [ ebp - 0x30 ]
call sub_100022b5
sub_1004a3f9
push 0x14
mov eax sub_1004b452
call sub_10029e33
push 0x0
lea ecx [ ebp - 0x14 ]
call sub_10022437
mov esi [ rw-data ]
and [ ebp - 0x4 ] 0x0
mov ecx rw-data
mov [ ebp - 0x10 ] esi
call sub_10007004
mov ecx [ ebp + 0x8 ]
push eax
call sub_10007039
mov edi eax
test edi edi
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
call sub_1002245f
mov eax edi
call sub_10029f0b
retn
test esi esi
je r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
push eax
call sub_1004a34f
pop ecx
pop ecx
cmp eax 0xffffffff
jne r-xdata
mov edi esi
jmp r-xdata
mov edi [ ebp - 0x10 ]
mov ecx edi
mov [ rw-data ] edi
call sub_1000778d
push edi
call sub_10022634
pop ecx
push r--data
lea ecx [ ebp - 0x20 ]
call sub_10025f3c
push r--data
lea eax [ ebp - 0x20 ]
push eax
call sub_10029a01
sub_1004a496
push 0x4
mov eax sub_1004be81
call sub_10029e33
xor edi edi
mov [ ebp - 0x10 ] edi
mov ebx [ ebp + 0xc ]
test bl 0x1
je r-xdata
test bl 0x20
je r-xdata
cmp [ ebp + 0x14 ] edi
jne r-xdata
and ebx 0x4
je r-xdata
cmp [ ebp + 0x14 ] edi
jne r-xdata
mov ecx rw-data
call sub_10007004
push eax
push [ ebp + 0x14 ]
call sub_10048671
pop ecx
push eax
push 0x10
call sub_10025dd6
pop ecx
cmp eax edi
je r-xdata
cmp ebx edi
je r-xdata
cmp [ ebp + 0x14 ] edi
jne r-xdata
mov ecx rw-data
call sub_10007004
push eax
push [ ebp + 0x14 ]
call sub_1004870e
pop ecx
push eax
push 0x8
call sub_10025dd6
pop ecx
cmp eax edi
je r-xdata
xor esi esi
push edi
push [ ebp + 0x8 ]
mov ecx eax
call sub_10047bf3
mov esi eax
jmp r-xdata
mov ebx [ ebp + 0xc ]
and ebx 0x10
je r-xdata
cmp [ ebp + 0x14 ] edi
jne r-xdata
mov ecx rw-data
call sub_10007004
push eax
push [ ebp + 0x14 ]
call sub_100487ab
pop ecx
push eax
push 0x10
call sub_10025dd6
pop ecx
cmp eax edi
je r-xdata
xor esi esi
mov [ eax + 0x4 ] edi
mov [ eax ] r--data
mov esi eax
jmp r-xdata
mov ecx [ ebp + 0x10 ]
call sub_100242cf
mov ecx rw-data
call sub_10007004
push eax
push esi
jmp r-xdata
cmp ebx edi
je r-xdata
cmp [ ebp + 0x14 ] edi
jne r-xdata
mov ecx rw-data
call sub_10007004
push eax
push [ ebp + 0x14 ]
call sub_10048848
pop ecx
push eax
push 0x10
call sub_10025dd6
pop ecx
cmp eax edi
je r-xdata
xor esi esi
push edi
push [ ebp + 0x8 ]
mov ecx eax
call sub_10047c55
mov esi eax
jmp r-xdata
mov ecx [ ebp + 0x10 ]
call sub_100242cf
mov ecx rw-data
call sub_10007004
push eax
push esi
jmp r-xdata
call sub_10029f0b
retn
cmp [ ebp + 0x14 ] edi
jne r-xdata
mov ecx rw-data
call sub_10007004
push eax
push [ ebp + 0x14 ]
call sub_1004a3f9
pop ecx
push eax
push 0x1c
call sub_10025dd6
pop ecx
mov ecx eax
mov [ ebp + 0xc ] ecx
mov [ ebp - 0x4 ] 0x1d
cmp ecx edi
je r-xdata
cmp [ ebp + 0x14 ] edi
jne r-xdata
xor esi esi
push edi
push [ ebp + 0x8 ]
mov ecx eax
call sub_10047c78
mov esi eax
jmp r-xdata
mov ecx [ ebp + 0x10 ]
call sub_100242cf
mov ecx rw-data
call sub_10007004
push eax
push esi
jmp r-xdata
mov ecx rw-data
call sub_10007004
push eax
push [ ebp + 0x14 ]
call sub_10048a1f
pop ecx
push eax
push 0x14
call sub_10025dd6
pop ecx
cmp eax edi
je r-xdata
xor esi esi
push edi
push [ ebp + 0x8 ]
call sub_10049bba
mov esi eax
jmp r-xdata
mov ecx rw-data
call sub_10007004
push eax
push [ ebp + 0x14 ]
call sub_100488e5
pop ecx
push eax
push 0x34
call sub_10025dd6
pop ecx
mov ecx eax
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x4 ] 0x11
cmp ecx edi
je r-xdata
mov ecx [ ebp + 0x10 ]
call sub_100242cf
cmp ebx edi
je r-xdata
mov ecx rw-data
call sub_10007004
push eax
push esi
jmp r-xdata
xor esi esi
push edi
push [ ebp + 0x8 ]
mov ecx eax
call sub_10047cbf
mov esi eax
jmp r-xdata
mov ecx [ ebp + 0x10 ]
call sub_100242cf
or [ ebp - 0x4 ] 0xffffffff
mov ecx rw-data
call sub_10007004
push eax
push esi
jmp r-xdata
cmp [ ebp + 0x14 ] edi
jne r-xdata
xor esi esi
push edi
push edi
push [ ebp + 0x8 ]
call sub_10047f66
mov esi eax
jmp r-xdata
mov ecx [ ebp + 0x10 ]
call sub_100242cf
mov ecx rw-data
call sub_10007004
push eax
push esi
jmp r-xdata
mov ecx rw-data
call sub_10007004
push eax
push [ ebp + 0x14 ]
call sub_10048982
pop ecx
push eax
push 0x34
call sub_10025dd6
pop ecx
mov ecx eax
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x4 ] 0x17
cmp ecx edi
je r-xdata
mov ecx [ ebp + 0x10 ]
call sub_100242cf
cmp ebx edi
je r-xdata
or [ ebp - 0x4 ] 0xffffffff
mov ecx rw-data
call sub_10007004
push eax
push esi
jmp r-xdata
xor esi esi
push edi
push edi
push [ ebp + 0x8 ]
call sub_10047fb2
mov esi eax
jmp r-xdata
mov ecx [ ebp + 0x10 ]
call sub_100242cf
or [ ebp - 0x4 ] 0xffffffff
mov ecx rw-data
call sub_10007004
push eax
push esi
jmp r-xdata
sub_1004a771
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x18 ]
push ebx
push esi
mov esi [ ebp + 0xc ]
sub esi [ ebp + 0x8 ]
push edi
mov edi [ ebp + 0x14 ]
sub edi [ ebp + 0x10 ]
test eax eax
jne r-xdata
mov ebx [ eax ]
mov eax [ eax + 0x4 ]
call sub_1002c4e4
mov ebx [ eax + 0x4 ]
call sub_1002c4be
jmp r-xdata
push eax
push edi
push [ ebp + 0x10 ]
push esi
push [ ebp + 0x8 ]
push 0x1000
push ebx
push 0x0
call sub_1003d384
add esp 0x20
test eax eax
jne r-xdata
cmp esi edi
mov eax esi
jl r-xdata
test ebx ebx
jne r-xdata
dec eax
dec eax
call sub_1002c068
mov [ eax ] 0x16
mov eax 0x7fffffff
jmp r-xdata
push eax
push [ ebp + 0x10 ]
push [ ebp + 0x8 ]
call sub_100266aa
add esp 0xc
test eax eax
jne r-xdata
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn
cmp esi edi
je r-xdata
cmp esi edi
setge al
lea eax [ eax + eax - 0x1 ]
jmp r-xdata
sub_1004a81a
mov edi edi
push ebp
mov ebp esp
push ecx
push edi
xor eax eax
mov [ ebp - 0x4 ] 0x0
lea edi [ ebp - 0x3 ]
stosb [ edi ]
push 0x2
lea eax [ ebp - 0x4 ]
push eax
push 0x22
call sub_1002c4e4
push [ eax + 0x14 ]
call [ GetLocaleInfoA@IAT ]
cmp [ ebp - 0x4 ] 0x30
pop edi
jne r-xdata
xor eax eax
cmp [ ebp - 0x4 ] 0x31
jne r-xdata
push 0x2
pop eax
leave
retn
cmp [ ebp - 0x4 ] 0x32
setne al
dec eax
and eax 0x3
leave
retn
inc eax
leave
retn
sub_1004a865
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x18 ]
push ebx
push esi
mov esi [ ebp + 0xc ]
sub esi [ ebp + 0x8 ]
push edi
mov edi [ ebp + 0x14 ]
sub edi [ ebp + 0x10 ]
sar esi 0x1
sar edi 0x1
test eax eax
jne r-xdata
mov ebx [ eax ]
call sub_1002c4e4
mov ebx [ eax + 0x4 ]
jmp r-xdata
call sub_1002c4be
push eax
push edi
push [ ebp + 0x10 ]
push esi
push [ ebp + 0x8 ]
push 0x1000
push ebx
push 0x0
call sub_1004aab8
add esp 0x20
test eax eax
jne r-xdata
cmp esi edi
mov edx esi
jl r-xdata
test ebx ebx
jne r-xdata
dec eax
dec eax
call sub_1002c068
mov [ eax ] 0x16
mov eax 0x7fffffff
jmp r-xdata
mov ecx [ ebp + 0x10 ]
mov eax [ ebp + 0x8 ]
jmp r-xdata
mov edx edi
pop edi
pop esi
pop ebx
pop ebp
retn
test edx edx
jg r-xdata
mov bx [ eax ]
cmp bx [ ecx ]
jne r-xdata
xor eax eax
movzx eax [ eax ]
cmp ax [ ecx ]
sbb eax eax
and eax 0xfffffffe
inc eax
jmp r-xdata
inc eax
inc eax
inc ecx
inc ecx
dec edx
cmp esi edi
je r-xdata
test eax eax
jne r-xdata
cmp esi edi
setge al
lea eax [ eax + eax - 0x1 ]
jmp r-xdata
sub_1004a913
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x18 ]
push ebx
push esi
mov esi [ ebp + 0x14 ]
sub esi [ ebp + 0x10 ]
push edi
mov edi [ ebp + 0xc ]
sub edi [ ebp + 0x8 ]
sar esi 0x1
sar edi 0x1
or ebx 0xffffffff
test eax eax
jne r-xdata
mov eax [ eax ]
call sub_1002c4e4
mov eax [ eax + 0x4 ]
jmp r-xdata
push edi
call sub_1002c93d
pop ecx
mov [ ebp + 0x14 ] eax
test eax eax
je r-xdata
cmp esi edi
ja r-xdata
mov [ ebp + 0xc ] eax
test eax eax
jne r-xdata
pop edi
pop esi
mov eax ebx
pop ebx
pop ebp
retn
call sub_1002c4be
push eax
push edi
push [ ebp + 0x14 ]
mov edi 0x400
push esi
push [ ebp + 0x10 ]
push edi
push [ ebp + 0xc ]
push 0x0
call sub_1002cc8c
mov ebx eax
add esp 0x20
test ebx ebx
jne r-xdata
mov ebx esi
jmp r-xdata
lea eax [ esi + esi ]
push eax
push [ ebp + 0x10 ]
push [ ebp + 0x8 ]
call sub_10028b40
add esp 0xc
xor eax eax
test ebx ebx
jbe r-xdata
call sub_1002c4be
push eax
xor eax eax
push eax
push eax
push esi
push [ ebp + 0x10 ]
push edi
push [ ebp + 0xc ]
push eax
call sub_1002cc8c
mov ebx eax
add esp 0x20
test ebx ebx
jne r-xdata
push [ ebp + 0x14 ]
call sub_1002644d
pop ecx
mov ecx [ ebp + 0x14 ]
movzx cx [ eax + ecx ]
mov edx [ ebp + 0x8 ]
mov [ edx + eax * 2 ] cx
inc eax
cmp eax ebx
jb r-xdata
mov ebx 0x7fffffff
jmp r-xdata
sub_1004a9ec
mov edi edi
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0x18 ]
or [ ebp - 0x4 ] 0xffffffff
push ebx
mov ebx [ ebp + 0xc ]
sub ebx [ ebp + 0x8 ]
push esi
mov esi [ ebp + 0x14 ]
sub esi [ ebp + 0x10 ]
push edi
xor edi edi
cmp eax edi
jne r-xdata
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
mov [ ebp + 0x14 ] ecx
call sub_1002c4e4
mov eax [ eax + 0x4 ]
mov [ ebp + 0x14 ] eax
call sub_1002c4be
jmp r-xdata
push 0x1
push [ ebp + 0xc ]
push edi
push edi
push esi
push [ ebp + 0x10 ]
mov edi 0x400
push edi
push [ ebp + 0x14 ]
push 0x0
call sub_1002c8cf
add esp 0x24
test eax eax
je r-xdata
cmp eax edi
jne r-xdata
mov [ ebp + 0xc ] eax
cmp [ ebp + 0x14 ] edi
jne r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
leave
retn
cmp eax ebx
mov [ ebp - 0x4 ] eax
jg r-xdata
cmp esi ebx
ja r-xdata
push 0x1
push [ ebp + 0xc ]
push ebx
push [ ebp + 0x8 ]
push esi
push [ ebp + 0x10 ]
push edi
push [ ebp + 0x14 ]
push 0x0
call sub_1002c8cf
add esp 0x24
mov [ ebp - 0x4 ] esi
jmp r-xdata
push esi
push [ ebp + 0x10 ]
push [ ebp + 0x8 ]
call sub_10028b40
add esp 0xc
sub_1004aa98
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
jmp r-xdata
test ecx ecx
jne r-xdata
dec ecx
cmp [ eax ] 0x0
je r-xdata
dec ecx
mov eax [ ebp + 0x8 ]
sub eax ecx
dec eax
pop ebp
retn
inc eax
inc eax
sub_1004aab8
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push esi
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x10 ]
call sub_10029358
mov esi [ ebp + 0x18 ]
mov edx [ ebp + 0x20 ]
test esi esi
jle r-xdata
test edx edx
jle r-xdata
mov eax [ ebp + 0x14 ]
push esi
call sub_1004aa98
pop ecx
mov esi eax
test esi esi
je r-xdata
mov eax [ ebp + 0x1c ]
push edx
call sub_1004aa98
pop ecx
mov edx eax
sub esi edx
jne r-xdata
test edx edx
je r-xdata
xor eax eax
test esi esi
setge al
lea eax [ eax + eax + 0x1 ]
push 0x2
pop eax
jmp r-xdata
push edx
push [ ebp + 0x1c ]
push esi
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call [ CompareStringW@IAT ]
jmp r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
cmp [ ebp - 0x4 ] 0x0
pop esi
je r-xdata
sub_1004f037
push esi
push 0x1
mov esi rw-data
push esi
call [ InitializeSecurityDescriptor@IAT ]
test eax eax
je r-xdata
pop esi
retn
push 0x0
push 0x0
push 0x1
push esi
call [ SetSecurityDescriptorDacl@IAT ]
test eax eax
je r-xdata
and [ rw-data ] 0x0
mov [ rw-data ] esi
mov [ rw-data ] 0xc
mov [ rw-data ] 0x0
RunDllEntry
push 0x64
call [ Sleep@IAT ]
push [ rw-data ]
call sub_10014acd
retn
runDll
call sub_10008840
jmp RunDllEntry
sub_10001311
mov esi [ ebp + 0x8 ]
call sub_10001477
xor ebx ebx
push ebx
push ebx
call sub_10029a01
int3
sub_10001323
push esi
mov esi eax
call sub_10001477
push [ esi ]
call sub_10025c9c
pop ecx
pop esi
retn
sub_1000139c
push [ eax ]
call sub_10025c9c
pop ecx
retn
sub_10001a37
push 0x8
mov eax sub_1004cb49
call sub_10029e33
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x14 ] ecx
and [ ebp - 0x4 ] 0x0
test ecx ecx
je r-xdata
call sub_10029f0b
retn
push [ ebp + 0x8 ]
call sub_10001fad
sub_10001b2f
push esi
push [ esp + 0x8 ]
mov esi ecx
call sub_10001b47
mov [ esi ] r--data
mov eax esi
pop esi
retn 0x4
sub_10001bd8
push esi
mov esi ecx
call sub_10001bf4
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_10025c9c
pop ecx
sub_10001bf4
push esi
mov esi ecx
push 0x0
push 0x1
lea ecx [ esi + 0xc ]
mov [ esi ] r--data
call sub_100022b5
mov ecx esi
pop esi
jmp sub_10025f19
sub_10001c11
push esi
mov esi ecx
mov [ esi ] r--data
call sub_10001bf4
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_10025c9c
pop ecx
sub_10001c33
cmp [ ecx + 0x24 ] 0x10
jb r-xdata
lea eax [ ecx + 0x10 ]
retn
mov eax [ ecx + 0x10 ]
retn
sub_10001c41
push esi
push [ esp + 0x8 ]
mov esi ecx
call sub_10001ba3
mov [ esi ] r--data
mov eax esi
pop esi
retn 0x4
sub_10001c95
push 0x0
push 0x1
call sub_100022b5
retn
sub_10001cc5
mov eax [ esp + 0x10 ]
add eax eax
push eax
push [ esp + 0x10 ]
mov eax [ esp + 0x10 ]
add eax eax
push eax
push [ esp + 0x10 ]
call sub_1002601b
add esp 0x10
retn
j_sub_10001ce4
jmp sub_10001ce4
sub_10001ea4
mov ecx [ ebp - 0x18 ]
xor esi esi
push esi
push 0x1
call sub_1000247e
push esi
push esi
call sub_10029a01
int3
sub_1000212b
push esi
lea eax [ esp + 0x8 ]
push eax
mov esi ecx
call sub_10025e4c
mov [ esi ] r--data
mov eax esi
pop esi
retn 0x4
sub_10002144
mov [ ecx ] r--data
jmp sub_10025f19
sub_1000214f
push esi
mov esi ecx
mov [ esi ] r--data
call sub_10025f19
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_10025c9c
pop ecx
sub_10002171
push esi
push [ esp + 0x8 ]
mov esi ecx
call sub_10025ebc
mov [ esi ] r--data
mov eax esi
pop esi
retn 0x4
sub_100022a0
mov ecx [ ebp - 0x18 ]
xor esi esi
push esi
push 0x1
call sub_100022b5
push esi
push esi
call sub_10029a01
int3
sub_1000235e
push ebp
mov ebp esp
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_10025ca7
mov eax [ ebp + 0x8 ]
add esp 0x10
pop ebp
retn
sub_10002425
mov eax [ esp + 0x10 ]
add eax eax
push eax
push [ esp + 0x10 ]
mov eax [ esp + 0x10 ]
add eax eax
push eax
push [ esp + 0x10 ]
call sub_10025ca7
add esp 0x10
retn
sub_10002444
push ebp
mov ebp esp
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_10002425
mov eax [ ebp + 0x8 ]
add esp 0x10
pop ebp
retn
sub_10002460
cmp [ ecx + 0x18 ] 0x8
mov eax [ esp + 0x4 ]
mov [ ecx + 0x14 ] eax
jb r-xdata
add ecx 0x4
mov ecx [ ecx + 0x4 ]
jmp r-xdata
xor edx edx
mov [ ecx + eax * 2 ] dx
retn 0x4
sub_100024c9
push 0x0
push 0x1
call sub_1000247e
retn
sub_1000265b
push ecx
push [ esp + 0xc ]
push [ esp + 0xc ]
call sub_10002b5b
push [ esp + 0x8 ]
call sub_10002c54
pop ecx
retn
sub_10002b55
mov eax r-xdata
retn
sub_10002fe7
push ecx
and [ esp ] 0x0
push ebx
add eax 0xc
mov ebx ecx
push eax
call sub_100037d3
mov eax ebx
pop ebx
pop ecx
retn
sub_10002ffd
mov eax [ ecx - 0xc ]
mov eax [ eax + 0x4 ]
mov [ eax + ecx - 0xc ] r--data
mov eax [ ecx - 0x4 ]
mov eax [ eax + 0x4 ]
mov [ eax + ecx - 0x4 ] r--data
mov eax [ ecx - 0xc ]
mov eax [ eax + 0x4 ]
mov [ eax + ecx - 0xc ] r--data
retn
sub_1000354a
mov eax [ esi ]
test eax eax
je r-xdata
call sub_100261ef
cmp eax [ edi ]
je r-xdata
mov eax [ esi + 0x4 ]
xor ecx ecx
cmp eax [ edi + 0x4 ]
setne cl
mov al cl
retn
sub_10003567
push esi
lea esi [ ecx - 0x54 ]
mov eax esi
call sub_100025f4
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_10025c9c
pop ecx
sub_100035b7
push esi
mov esi ecx
call sub_10003028
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_10025c9c
pop ecx
sub_100035d3
push 0xffffffff
push 0x0
push [ esp + 0xc ]
call sub_10002099
retn 0x4
sub_100048ea
push esi
mov esi ecx
push 0x0
mov [ esi + 0x18 ] 0x7
call sub_10002460
push [ esp + 0xc ]
mov ecx esi
push [ esp + 0xc ]
call sub_100014cc
mov eax esi
pop esi
retn 0x8
sub_10004910
push esi
mov esi ecx
push 0x0
mov [ esi + 0x18 ] 0x7
call sub_10002460
push [ esp + 0xc ]
mov ecx esi
push [ esp + 0xc ]
call sub_10005c78
mov eax esi
pop esi
retn 0x8
sub_10005ac0
push ebp
mov ebp esp
push ecx
push [ ebp + 0x8 ]
mov eax [ ecx ]
and [ ebp - 0x4 ] 0x0
call [ eax + 0x14 ]
mov eax [ ebp + 0x8 ]
leave
retn 0x4
sub_10005ad7
push esi
mov esi ecx
mov [ esi ] r--data
call sub_1000f906
mov [ esi ] r--data
pop esi
retn
sub_10005aed
mov ax [ ecx + 0xc ]
retn
sub_10005af2
push ebp
mov ebp esp
push ecx
push [ ecx + 0x10 ]
mov ecx [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
call sub_10001254
mov eax [ ebp + 0x8 ]
leave
retn 0x4
sub_10005b0c
push ebp
mov ebp esp
push ecx
push [ ecx + 0x14 ]
mov ecx [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
call sub_10001254
mov eax [ ebp + 0x8 ]
leave
retn 0x4
sub_10005b26
push esi
mov esi ecx
call sub_10005ad7
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_10025c9c
pop ecx
sub_10005b42
push esi
mov esi ecx
push 0x0
mov [ esi + 0x18 ] 0xf
call sub_1000237a
push [ esp + 0xc ]
mov ecx esi
push [ esp + 0xc ]
call sub_10005dea
mov eax esi
pop esi
retn 0x8
sub_10005dd3
push ebp
mov ebp esp
push ecx
push [ ebp + 0x8 ]
mov eax [ ecx ]
and [ ebp - 0x4 ] 0x0
call [ eax + 0xc ]
mov eax [ ebp + 0x8 ]
leave
retn 0x4
sub_100064b6
mov eax [ esp + 0x8 ]
push esi
mov esi ecx
mov [ esi + 0x4 ] eax
mov [ esi ] r--data
call sub_1002290b
mov [ esi + 0x8 ] eax
mov [ esi + 0xc ] edx
mov eax esi
pop esi
retn 0x8
sub_100064d7
mov eax [ esp + 0x8 ]
push esi
mov esi ecx
mov [ esi + 0x4 ] eax
mov [ esi ] r--data
call sub_1002290b
mov [ esi + 0x8 ] eax
mov [ esi + 0xc ] edx
mov eax esi
pop esi
retn 0x8
sub_1000664f
mov ecx [ ebp - 0x14 ]
call sub_1000f906
xor ebx ebx
push ebx
push ebx
call sub_10029a01
int3
sub_10006aee
movsx eax [ esp + 0xc ]
push [ esp + 0x8 ]
push eax
push [ esp + 0xc ]
call sub_10026630
add esp 0xc
retn
sub_10006dd1
push esi
mov esi ecx
call sub_10006f48
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_10025c9c
pop ecx
sub_10006ded
push [ esp + 0x8 ]
mov eax [ ecx ]
push 0xffffffff
push [ esp + 0xc ]
call [ eax + 0x1c ]
retn 0x8
sub_10006f0d
mov eax [ esp + 0x4 ]
mov ecx [ r--data ]
mov [ eax ] ecx
xor ecx ecx
mov [ eax + 0x8 ] ecx
mov [ eax + 0xc ] ecx
mov [ eax + 0x10 ] ecx
retn 0x10
sub_10006f27
mov eax ecx
retn 0x8
sub_10006f2c
push esi
mov esi ecx
call sub_10007806
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_10025c9c
pop ecx
sub_10006fdd
mov eax [ ecx - 0x8 ]
mov eax [ eax + 0x4 ]
mov [ eax + ecx - 0x8 ] r--data
retn
sub_10006fec
mov eax [ eax ]
mov ecx [ eax ]
mov ecx [ ecx + 0x4 ]
mov eax [ ecx + eax + 0x28 ]
test eax eax
je r-xdata
retn
lea ecx [ eax + 0x4 ]
jmp sub_100223d4
sub_10007070
push esi
mov esi ecx
call sub_1000708c
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_10025c9c
pop ecx
sub_1000708c
push esi
mov esi ecx
cmp [ esi + 0x14 ] 0x0
mov [ esi ] r--data
je r-xdata
mov [ esi ] r--data
pop esi
retn
push [ esi + 0x10 ]
call sub_1002644d
pop ecx
sub_100070ac
add ecx 0x8
push ecx
push [ esp + 0x10 ]
push [ esp + 0x10 ]
push [ esp + 0x10 ]
call sub_100224a5
add esp 0x10
retn 0xc
sub_1000714c
add ecx 0x8
push ecx
push [ esp + 0x8 ]
call sub_10022d9f
pop ecx
pop ecx
retn 0x4
sub_1000718b
add ecx 0x8
push ecx
push [ esp + 0x8 ]
call sub_10022d32
pop ecx
pop ecx
retn 0x4
sub_1000719d
push ebp
mov ebp esp
mov edx [ ebp + 0xc ]
sub edx [ ebp + 0x8 ]
mov eax [ ecx ]
push edx
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ eax + 0x2c ]
pop ebp
retn 0xc
j_sub_100071be
jmp sub_100071be
j_sub_10007259
jmp sub_10007259
sub_1000734c
mov eax [ esp + 0x8 ]
push esi
push [ esp + 0x8 ]
mov esi ecx
mov [ esi + 0x4 ] eax
mov [ esi ] r--data
call sub_1000731a
mov eax esi
pop esi
retn 0x8
sub_100073c0
push ebp
mov ebp esp
push ecx
mov eax [ ecx ]
mov ecx [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
add eax 0x18
push eax
call sub_10001c9f
mov eax [ ebp + 0x8 ]
leave
retn 0x4
sub_100075a7
mov eax 0xffff
retn
sub_100075f5
add ecx 0x8
push ecx
push [ esp + 0xc ]
call sub_10022476
test [ esp + 0xc ] ax
pop ecx
pop ecx
push 0x0
pop eax
setne al
retn 0x8
sub_100077b5
mov eax [ esp + 0x4 ]
push esi
mov esi ecx
mov ecx [ eax ]
mov [ esi ] ecx
call sub_1000778d
mov eax esi
pop esi
retn 0x4
sub_10007880
mov eax 0xffff
retn 0x4
sub_100078f9
mov [ ecx ] r--data
jmp sub_10007904
sub_10007904
push esi
mov esi ecx
push 0x0
push 0x1
lea ecx [ esi + 0xc ]
mov [ esi ] r--data
call sub_100022b5
mov ecx esi
pop esi
jmp sub_10025f19
sub_10007921
push esi
mov esi ecx
mov [ esi ] r--data
call sub_10007904
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_10025c9c
pop ecx
sub_10007943
push esi
push [ esp + 0x8 ]
mov esi ecx
call sub_10007977
mov [ esi ] r--data
mov eax esi
pop esi
retn 0x4
sub_1000795b
push esi
mov esi ecx
call sub_10007904
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_10025c9c
pop ecx
sub_10007acb
push ecx
mov eax [ edx + 0x8 ]
or eax [ esp + 0x8 ]
cmp [ edx + 0x28 ] 0x0
jne r-xdata
push [ esp + 0xc ]
mov ecx eax
push edx
call sub_100079b1
pop ecx
retn 0x8
or eax 0x4
sub_10007ba6
push ecx
mov [ ecx ] r--data
call sub_10022359
pop ecx
retn
sub_10007cd2
push esi
mov esi ecx
call sub_10007cee
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_10025c9c
pop ecx
sub_10007d98
mov eax r-xdata
retn
sub_10007d9e
mov eax r-xdata
retn
sub_10007dc8
or [ ebp - 0x4 ] 0xffffffff
mov eax r-xdata
retn
sub_10007e14
push 0x8
push r--data
call sub_1002e7e4
and [ ebp - 0x4 ] 0x0
call sub_10007da4
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_1000c1b5
xor eax eax
call sub_1002e829
retn
sub_10007e2b
xor eax eax
inc eax
retn
sub_10007e2f
mov esp [ ebp - 0x18 ]
mov [ ebp - 0x4 ] 0xfffffffe
call sub_1000c1b5
xor eax eax
call sub_1002e829
retn
sub_10007f9c
or [ ebp - 0x4 ] 0xffffffff
mov eax r-xdata
retn
sub_100081e4
push ecx
and [ esp ] 0x0
push ebx
mov ebx eax
push 0x0
call sub_10015859
pop ecx
mov eax ebx
pop ebx
pop ecx
retn
sub_1000835f
push esi
mov esi ecx
call sub_1000837b
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_10025c9c
pop ecx
sub_100085f0
mov ecx [ eax + 0x4 ]
test ecx ecx
je r-xdata
retn
jmp sub_1000990a
sub_100087a1
cmp [ ebp + 0x88 ] 0x8
mov eax [ ebp + 0x74 ]
jae r-xdata
push eax
call [ DeleteFileW@IAT ]
mov [ ebp - 0x4 ] 0x9
mov eax r-xdata
retn
lea eax [ ebp + 0x74 ]
sub_10008ad1
push 0x0
mov eax sub_1004cad1
call sub_10029e33
mov esi [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
call sub_10008c08
push [ esi ]
call sub_10025c9c
pop ecx
call sub_10029f0b
retn 0x4
sub_10008c08
mov eax [ esi + 0xc ]
test eax eax
je r-xdata
and [ esi + 0xc ] 0x0
and [ esi + 0x10 ] 0x0
and [ esi + 0x14 ] 0x0
retn
push [ esi + 0x10 ]
call sub_10008c54
push [ esi + 0xc ]
call sub_10025c9c
pop ecx
sub_10009021
mov ecx [ ebp + 0x8 ]
test ecx ecx
je r-xdata
push 0x0
push 0x0
call sub_10029a01
int3
mov eax [ ecx ]
push 0x1
call [ eax ]
sub_100090e0
mov ecx [ ecx + 0xc ]
test ecx ecx
je r-xdata
retn
mov eax [ ecx ]
push 0x1
call [ eax ]
sub_1000977e
push esi
push [ esp + 0x8 ]
mov esi ecx
call sub_10026078
pop ecx
push eax
push [ esp + 0xc ]
mov ecx esi
call sub_100096df
pop esi
retn 0x4
sub_1000979b
mov eax ecx
mov ecx [ esp + 0x4 ]
mov edx [ ecx ]
mov [ eax ] edx
test edx edx
je r-xdata
retn 0x4
xor ecx ecx
add edx 0x4
inc ecx
[ edx ] ecx
sub_100097b6
mov ecx [ ecx + 0x4 ]
test ecx ecx
je r-xdata
retn
jmp sub_1000990a
sub_100097c3
push [ ecx + 0xc ]
call sub_10009802
pop ecx
retn
sub_10009802
push esi
mov esi [ esp + 0x8 ]
test esi esi
je r-xdata
pop esi
retn
mov ecx esi
call sub_100097cd
push esi
call sub_10025c9c
pop ecx
sub_10009861
push [ ebp + 0x8 ]
call sub_10009802
pop ecx
push 0x0
push 0x0
call sub_10029a01
int3
sub_10009899
push esi
mov esi ecx
call sub_10001ac0
and [ esi + 0x1c ] 0x0
and [ esi + 0x20 ] 0x0
mov eax esi
pop esi
retn
sub_100098ff
test ecx ecx
je r-xdata
retn
mov eax [ ecx ]
push 0x1
call [ eax ]
sub_10009936
push ecx
push esi
push [ esp + 0xc ]
mov esi eax
call sub_100152d5
mov [ esi ] r--data
mov [ esi + 0x14 ] 0x0
mov eax esi
pop esi
pop ecx
retn 0x4
sub_10009954
push esi
mov esi ecx
call sub_10009970
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_10025c9c
pop ecx
sub_10009970
push ecx
mov [ ecx ] r--data
call sub_1001537a
pop ecx
retn
sub_1000997e
push 0xc
push r--data
call sub_1002e7e4
mov [ ebp - 0x1c ] ecx
and [ ebp - 0x4 ] 0x0
call sub_1001543f
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_1002e829
retn
sub_10009998
xor eax eax
inc eax
retn
sub_1000999c
mov esp [ ebp - 0x18 ]
mov eax [ ebp - 0x1c ]
mov [ eax + 0x14 ] 0x1
mov [ eax + 0xc ] 0x1
mov eax [ eax + 0x10 ]
mov [ ebp - 0x4 ] 0xfffffffe
call sub_1002e829
retn
sub_100099ba
push esi
mov esi ecx
call sub_100099d6
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_10025c9c
pop ecx
sub_10009ac4
add ecx 0x4
push ecx
call sub_100160ba
pop ecx
retn
sub_10009dc2
push 0x0
mov ecx esi
mov [ esi + 0x18 ] 0xf
call sub_1000237a
push 0x0
push [ esp + 0x8 ]
mov ecx esi
call sub_10005dea
mov eax esi
retn 0x4
sub_10009de4
push esi
mov esi ecx
call sub_10009e00
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_10025c9c
pop ecx
sub_10009f29
or [ ebp - 0x4 ] 0xffffffff
mov eax sub_10009f33
retn
sub_10009f33
mov edi [ ebp - 0x1c ]
push edi
call sub_1000a244
sub_1000a281
or [ ebp - 0x4 ] 0xffffffff
mov eax r-xdata
retn
sub_1000ab11
push esi
mov esi ecx
mov [ ecx ] r--data
mov [ ecx + 0x28 ] r--data
mov [ ecx + 0x3c ] r--data
call sub_1000ab2f
pop esi
retn
sub_1000ab2f
lea ecx [ esi + 0x28 ]
mov [ esi ] r--data
mov [ ecx ] r--data
call sub_1000b8a5
mov [ esi ] r--data
mov ecx esi
jmp sub_10001bf4
sub_1000ab50
sub ecx 0x28
jmp sub_1000abba
sub_1000ab99
push ebp
mov ebp esp
add ecx 0xffffffc4
sub esp 0x40
push ecx
lea ecx [ ebp - 0x40 ]
call sub_1000abde
push r--data
lea eax [ ebp - 0x40 ]
push eax
call sub_10029a01
int3
sub_1000abba
push esi
mov esi ecx
call sub_1000ab11
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_10025c9c
pop ecx
sub_1000abd6
sub ecx 0x3c
jmp sub_1000abba
sub_1000abde
push esi
push [ esp + 0x8 ]
mov esi ecx
call sub_1000ac2f
mov [ esi + 0x3c ] r--data
mov [ esi ] r--data
mov [ esi + 0x28 ] r--data
mov [ esi + 0x3c ] r--data
mov eax esi
pop esi
retn 0x4
sub_1000ac0b
push esi
mov esi ecx
call sub_1000ab2f
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_10025c9c
pop ecx
sub_1000ac27
sub ecx 0x28
jmp sub_1000ac0b
sub_1000ac76
push esi
push [ esp + 0x8 ]
mov esi ecx
call sub_1000b215
mov [ esi ] r--data
mov eax esi
pop esi
retn 0x4
sub_1000ad99
push esi
mov esi ecx
mov [ ecx ] r--data
mov [ ecx + 0x28 ] r--data
mov [ ecx + 0x3c ] r--data
call sub_1000adb7
pop esi
retn
sub_1000adb7
lea ecx [ esi + 0x28 ]
mov [ esi ] r--data
mov [ ecx ] r--data
call sub_1000b8a5
mov [ esi ] r--data
mov ecx esi
jmp sub_10001bf4
sub_1000add8
sub ecx 0x28
jmp sub_1000ae42
sub_1000ae21
push ebp
mov ebp esp
add ecx 0xffffffc4
sub esp 0x40
push ecx
lea ecx [ ebp - 0x40 ]
call sub_1000ae66
push r--data
lea eax [ ebp - 0x40 ]
push eax
call sub_10029a01
int3
sub_1000ae42
push esi
mov esi ecx
call sub_1000ad99
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_10025c9c
pop ecx
sub_1000ae5e
sub ecx 0x3c
jmp sub_1000ae42
sub_1000ae66
push esi
push [ esp + 0x8 ]
mov esi ecx
call sub_1000aeb7
mov [ esi + 0x3c ] r--data
mov [ esi ] r--data
mov [ esi + 0x28 ] r--data
mov [ esi + 0x3c ] r--data
mov eax esi
pop esi
retn 0x4
sub_1000ae93
push esi
mov esi ecx
call sub_1000adb7
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_10025c9c
pop ecx
sub_1000aeaf
sub ecx 0x28
jmp sub_1000ae93
sub_1000aefe
push esi
push [ esp + 0x8 ]
mov esi ecx
call sub_1000b215
mov [ esi ] r--data
mov eax esi
pop esi
retn 0x4
sub_1000af16
push esi
mov esi ecx
mov [ esi ] r--data
call sub_10001bf4
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_10025c9c
pop ecx
sub_1000af38
mov [ ecx ] r--data
jmp sub_10001bf4
sub_1000b098
push esi
mov esi ecx
mov [ ecx ] r--data
mov [ ecx + 0x28 ] r--data
mov [ ecx + 0x3c ] r--data
call sub_1000b0b6
pop esi
retn
sub_1000b0b6
lea ecx [ esi + 0x28 ]
mov [ esi ] r--data
mov [ ecx ] r--data
call sub_1000b8a5
mov [ esi ] r--data
mov ecx esi
jmp sub_10001bf4
sub_1000b0d7
sub ecx 0x28
jmp sub_1000b141
sub_1000b120
push ebp
mov ebp esp
add ecx 0xffffffc4
sub esp 0x40
push ecx
lea ecx [ ebp - 0x40 ]
call sub_1000b165
push r--data
lea eax [ ebp - 0x40 ]
push eax
call sub_10029a01
int3
sub_1000b141
push esi
mov esi ecx
call sub_1000b098
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_10025c9c
pop ecx
sub_1000b15d
sub ecx 0x3c
jmp sub_1000b141
sub_1000b165
push esi
push [ esp + 0x8 ]
mov esi ecx
call sub_1000b1b6
mov [ esi + 0x3c ] r--data
mov [ esi ] r--data
mov [ esi + 0x28 ] r--data
mov [ esi + 0x3c ] r--data
mov eax esi
pop esi
retn 0x4
sub_1000b192
push esi
mov esi ecx
call sub_1000b0b6
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_10025c9c
pop ecx
sub_1000b1ae
sub ecx 0x28
jmp sub_1000b192
sub_1000b1fd
push esi
push [ esp + 0x8 ]
mov esi ecx
call sub_1000b215
mov [ esi ] r--data
mov eax esi
pop esi
retn 0x4
sub_1000b215
push esi
push [ esp + 0x8 ]
mov esi ecx
call sub_10001b47
mov [ esi ] r--data
mov eax esi
pop esi
retn 0x4
sub_1000b26d
push esi
push [ esp + 0x8 ]
mov esi ecx
call sub_10001ba3
mov [ esi ] r--data
mov eax esi
pop esi
retn 0x4
sub_1000b589
cmp [ esp + 0x4 ] 0xffffffff
jne r-xdata
xor eax eax
retn
cmp [ esp + 0x8 ] 0x7fffffff
jne r-xdata
xor eax eax
inc eax
retn
sub_1000b7aa
push esi
mov esi ecx
mov [ ecx ] r--data
mov [ ecx + 0x28 ] r--data
mov [ ecx + 0x3c ] r--data
call sub_1000b7c8
pop esi
retn
sub_1000b7c8
lea ecx [ esi + 0x28 ]
mov [ esi ] r--data
mov [ ecx ] r--data
call sub_1000b8a5
mov ecx esi
jmp sub_10007904
sub_1000b7e3
mov [ ecx ] r--data
retn
sub_1000b7ea
sub ecx 0x28
jmp sub_1000b854
sub_1000b833
push ebp
mov ebp esp
add ecx 0xffffffc4
sub esp 0x40
push ecx
lea ecx [ ebp - 0x40 ]
call sub_1000b878
push r--data
lea eax [ ebp - 0x40 ]
push eax
call sub_10029a01
int3
sub_1000b854
push esi
mov esi ecx
call sub_1000b7aa
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_10025c9c
pop ecx
sub_1000b870
sub ecx 0x3c
jmp sub_1000b854
sub_1000b878
push esi
push [ esp + 0x8 ]
mov esi ecx
call sub_1000b8e8
mov [ esi + 0x3c ] r--data
mov [ esi ] r--data
mov [ esi + 0x28 ] r--data
mov [ esi + 0x3c ] r--data
mov eax esi
pop esi
retn 0x4
sub_1000b8c4
push esi
mov esi ecx
call sub_1000b7c8
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_10025c9c
pop ecx
sub_1000b8e0
sub ecx 0x28
jmp sub_1000b8c4
sub_1000b92f
mov ecx [ esi ]
test ecx ecx
je r-xdata
retn
mov eax [ ecx ]
call [ eax + 0x10 ]
test al al
je r-xdata
and [ esi ] 0x0
sub_1000b978
test [ esp + 0x4 ] 0x1
push esi
mov esi ecx
mov [ esi ] r--data
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_10025c9c
pop ecx
sub_1000b995
mov eax ecx
mov [ eax ] r--data
retn 0x4
sub_1000bacf
mov ecx [ ebp - 0x2c ]
push r--data
call sub_10001254
mov eax r-xdata
retn
sub_1000c2c3
mov eax [ ebp - 0x14 ]
cmp [ eax + 0x28 ] 0x20
jne r-xdata
mov eax r-xdata
retn
mov eax r-xdata
retn
sub_1000c2e0
mov eax r-xdata
retn
sub_1000c5cf
mov eax r-xdata
retn
sub_1000c5dd
push esi
mov esi eax
add esi 0x58
mov ecx esi
call sub_1000cce6
push esi
mov [ esi ] r--data
call sub_10022359
pop ecx
pop esi
retn
sub_1000c6be
mov eax r-xdata
retn
sub_1000c6c4
push esi
mov esi eax
add esi 0x54
mov ecx esi
call sub_1000d4b0
push esi
mov [ esi ] r--data
call sub_10022359
pop ecx
pop esi
retn
sub_1000c7c8
mov ecx [ ebp - 0x68 ]
push r--data
call sub_10001254
mov eax r-xdata
retn
sub_1000c86d
mov eax r-xdata
retn
sub_1000d4ef
push esi
lea esi [ ecx - 0x58 ]
mov eax esi
call sub_1000c5dd
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_10025c9c
pop ecx
sub_1000d50e
push esi
mov esi ecx
call sub_1000cd25
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_10025c9c
pop ecx
sub_1000d52a
push esi
lea esi [ ecx - 0x54 ]
mov eax esi
call sub_1000c6c4
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_10025c9c
pop ecx
sub_1000e6e7
mov eax [ esp + 0x10 ]
mov ecx [ esp + 0x8 ]
mov [ eax ] ecx
mov eax [ esp + 0x1c ]
mov ecx [ esp + 0x14 ]
push 0x3
mov [ eax ] ecx
pop eax
retn 0x1c
sub_1000e701
mov eax [ esp + 0x10 ]
mov ecx [ esp + 0x8 ]
push 0x3
mov [ eax ] ecx
pop eax
retn 0x10
sub_1000e711
mov eax [ esp + 0xc ]
sub eax [ esp + 0x8 ]
cmp [ esp + 0x10 ] eax
jae r-xdata
retn 0x10
mov eax [ esp + 0x10 ]
sub_1000e7de
push [ eax + 0x38 ]
mov ecx [ esp + 0x8 ]
call sub_100077b5
mov eax [ esp + 0x4 ]
retn 0x4
sub_1000f76f
push ebp
mov ebp esp
push ecx
push [ ebp + 0x8 ]
mov eax [ ecx ]
and [ ebp - 0x4 ] 0x0
call [ eax + 0x10 ]
mov eax [ ebp + 0x8 ]
leave
retn 0x4
sub_1000f786
push esi
mov esi ecx
mov [ esi ] r--data
call sub_1000f906
mov [ esi ] r--data
pop esi
retn
sub_1000f79c
push ebp
mov ebp esp
push ecx
push [ ecx + 0x8 ]
mov ecx [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
call sub_10001b81
mov eax [ ebp + 0x8 ]
leave
retn 0x4
sub_1000f7b6
push ebp
mov ebp esp
push ecx
push [ ecx + 0x10 ]
mov ecx [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
call sub_10001b81
mov eax [ ebp + 0x8 ]
leave
retn 0x4
sub_1000f7d0
push ebp
mov ebp esp
push ecx
push [ ecx + 0x14 ]
mov ecx [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
call sub_10001b81
mov eax [ ebp + 0x8 ]
leave
retn 0x4
sub_1000f7ea
push esi
mov esi ecx
call sub_1000f786
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_10025c9c
pop ecx
sub_1000f906
push esi
mov esi ecx
push [ esi + 0x8 ]
call sub_10026616
push [ esi + 0x10 ]
call sub_10026616
push [ esi + 0x14 ]
call sub_10026616
add esp 0xc
pop esi
retn
sub_100101c3
mov eax [ esp + 0x8 ]
push esi
mov esi ecx
mov [ esi + 0x4 ] eax
mov [ esi ] r--data
call sub_1002290b
mov [ esi + 0x8 ] eax
mov [ esi + 0xc ] edx
mov eax esi
pop esi
retn 0x8
sub_100101e4
mov eax [ esp + 0x8 ]
push esi
mov esi ecx
mov [ esi + 0x4 ] eax
mov [ esi ] r--data
call sub_1002290b
mov [ esi + 0x8 ] eax
mov [ esi + 0xc ] edx
mov eax esi
pop esi
retn 0x8
sub_10010303
mov ecx [ ebp - 0x14 ]
call sub_1000f906
xor ebx ebx
push ebx
push ebx
call sub_10029a01
int3
sub_10010352
xor eax eax
inc eax
retn
sub_10010356
mov al 0x1
retn
sub_1001038f
mov eax [ ecx - 0x4 ]
mov eax [ eax + 0x4 ]
mov [ eax + ecx - 0x4 ] r--data
retn
sub_100103be
push esi
mov esi ecx
call sub_100104f5
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_10025c9c
pop ecx
sub_100103da
or eax 0xffffffff
retn 0x4
sub_100104d8
mov eax [ esp + 0x4 ]
mov ecx [ r--data ]
mov [ eax ] ecx
xor ecx ecx
mov [ eax + 0x8 ] ecx
mov [ eax + 0xc ] ecx
mov [ eax + 0x10 ] ecx
retn 0x20
sub_100104f2
retn 0x4
sub_10010554
mov eax [ ecx - 0x8 ]
mov eax [ eax + 0x4 ]
mov [ eax + ecx - 0x8 ] r--data
retn
sub_10010563
push esi
mov esi ecx
call sub_1001059c
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_10025c9c
pop ecx
sub_1001057f
mov eax [ ecx + 0x14 ]
test eax eax
jle r-xdata
jge r-xdata
push [ ecx + 0x10 ]
call sub_1002644d
pop ecx
retn
retn
push [ ecx + 0x10 ]
call sub_10026616
pop ecx
sub_1001059c
push esi
mov esi ecx
mov [ esi ] r--data
call sub_1001057f
mov [ esi ] r--data
pop esi
retn
sub_100105dd
movzx eax [ esp + 0x4 ]
add ecx 0x8
push ecx
push eax
call sub_10022921
pop ecx
pop ecx
retn 0x4
sub_1001061c
movzx eax [ esp + 0x4 ]
add ecx 0x8
push ecx
push eax
call sub_100233b5
pop ecx
pop ecx
retn 0x4
sub_10010630
push ebp
mov ebp esp
mov edx [ ebp + 0xc ]
sub edx [ ebp + 0x8 ]
mov eax [ ecx ]
push edx
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ eax + 0x1c ]
pop ebp
retn 0xc
sub_1001064c
mov al [ esp + 0x4 ]
retn 0x4
sub_100106a0
mov al [ esp + 0x4 ]
retn 0x8
sub_100106fa
mov eax [ esp + 0x8 ]
push esi
push [ esp + 0x8 ]
mov esi ecx
mov [ esi + 0x4 ] eax
mov [ esi ] r--data
call sub_100106d5
mov eax esi
pop esi
retn 0x8
sub_10010a6f
push 0x4
mov eax sub_1004dbe7
call sub_10029e66
mov esi ecx
and [ ebp - 0x4 ] 0x0
mov eax [ esi ]
mov eax [ eax + 0x4 ]
test [ eax + esi + 0x10 ] 0x2
je r-xdata
call sub_10029f0b
retn
call sub_10010ae4
sub_10010a98
mov eax r-xdata
retn
sub_10010b74
push esi
mov esi eax
add esi 0x54
mov ecx esi
call sub_1001171b
push esi
mov [ esi ] r--data
call sub_10022359
pop ecx
pop esi
retn
sub_100114ad
push esi
mov esi ecx
call sub_100114c9
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_10025c9c
pop ecx
sub_100114c9
push 0x0
mov [ ecx ] r--data
push 0x1
add ecx 0x4
call sub_100022b5
retn
sub_100114dc
push ebp
mov ebp esp
push ecx
mov ecx [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
add eax 0x4
push eax
call sub_10001c9f
mov eax [ ebp + 0x8 ]
leave
retn 0x4
sub_10011753
push ecx
and [ esp ] 0x0
push ebx
add eax 0xc
mov ebx ecx
push eax
call sub_10011d90
mov eax ebx
pop ebx
pop ecx
retn
sub_10011769
mov eax [ ecx - 0xc ]
mov eax [ eax + 0x4 ]
mov [ eax + ecx - 0xc ] r--data
mov eax [ ecx - 0x4 ]
mov eax [ eax + 0x4 ]
mov [ eax + ecx - 0x4 ] r--data
mov eax [ ecx - 0xc ]
mov eax [ eax + 0x4 ]
mov [ eax + ecx - 0xc ] r--data
retn
sub_10011c20
push esi
lea esi [ ecx - 0x54 ]
mov eax esi
call sub_10010b74
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_10025c9c
pop ecx
sub_10011c70
push esi
mov esi ecx
call sub_10011794
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_10025c9c
pop ecx
sub_10011ec9
push edi
lea ecx [ esi + 0x4 ]
mov [ esi ] edi
call sub_10011ee2
push edi
push edi
push esi
call sub_1002360a
add esp 0xc
mov eax esi
retn
sub_10011f28
mov ecx [ ebp + 0x8 ]
test ecx ecx
je r-xdata
push 0x0
push 0x0
call sub_10029a01
int3
mov eax [ ecx ]
push 0x1
call [ eax ]
sub_10011faf
push esi
mov esi ecx
call sub_10011fcb
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_10025c9c
pop ecx
sub_100122c4
mov eax r-xdata
retn
sub_10012489
mov ecx [ ebp + 0x8 ]
test ecx ecx
je r-xdata
push 0x0
push 0x0
call sub_10029a01
int3
mov eax [ ecx ]
push 0x1
call [ eax ]
sub_100124c0
push esi
mov esi ecx
call sub_100124dc
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_10025c9c
pop ecx
sub_10012695
push esi
mov esi ecx
call sub_100126b1
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_10025c9c
pop ecx
sub_100126b1
push 0x0
mov [ ecx ] r--data
push 0x1
add ecx 0x4
call sub_1000247e
retn
sub_10012b06
mov ecx [ ebp + 0x8 ]
test ecx ecx
je r-xdata
push 0x0
push 0x0
call sub_10029a01
int3
mov eax [ ecx ]
push 0x1
call [ eax ]
sub_10012b1d
mov [ ecx ] r--data
retn
sub_10012b24
test [ esp + 0x4 ] 0x1
push esi
mov esi ecx
mov [ esi ] r--data
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_10025c9c
pop ecx
sub_10012bcd
push esi
mov esi ecx
call sub_10012be9
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_10025c9c
pop ecx
sub_10012e52
mov [ ebp - 0x4 ] 0x2
mov eax sub_10012e5f
retn
sub_10012ea4
push esi
mov esi ecx
lea eax [ esi + 0x1c ]
mov [ esi ] r--data
call sub_10013040
add esi 0x4
call sub_10001477
push [ esi ]
call sub_10025c9c
pop ecx
pop esi
retn
sub_10012f4c
push esi
mov esi ecx
call sub_10012ea4
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_10025c9c
pop ecx
sub_10013cb9
push esi
mov esi ecx
call sub_10013cd5
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_10025c9c
pop ecx
sub_100144af
cmp [ esp + 0xc ] 0x0
jbe r-xdata
xor eax eax
mov eax [ esp + 0x4 ]
retn
inc eax
inc eax
dec [ esp + 0xc ]
jne r-xdata
mov cx [ eax ]
cmp cx [ esp + 0x8 ]
je r-xdata
sub_1001486a
mov [ ebp - 0x4 ] 0x1
mov eax r-xdata
retn
sub_100149f0
push esi
push [ esp + 0x8 ]
mov esi ecx
call sub_10007977
mov [ esi ] r--data
mov eax esi
pop esi
retn 0x4
sub_10014a08
push esi
mov esi ecx
mov [ esi ] r--data
call sub_10007904
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_10025c9c
pop ecx
sub_10014ac2
mov [ ecx ] r--data
jmp sub_10015935
sub_10014cf8
push esi
mov esi ecx
call sub_10014d14
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_10025c9c
pop ecx
sub_100150b3
push 0x0
push 0x1
lea ecx [ esi + 0xc ]
call sub_1000247e
mov ecx [ esi + 0x8 ]
test ecx ecx
je r-xdata
retn
jmp sub_1000990a
sub_100150e0
push ebp
mov ebp esp
push ecx
mov ecx [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
add eax 0xc
push eax
call sub_10001fad
mov eax [ ebp + 0x8 ]
leave
retn 0x4
sub_1001525f
push edi
lea ecx [ esi + 0x4 ]
mov [ esi ] edi
call sub_10015278
push edi
push edi
push esi
call sub_1002360a
add esp 0xc
mov eax esi
retn
sub_100152be
mov ecx [ ebp + 0x8 ]
test ecx ecx
je r-xdata
push 0x0
push 0x0
call sub_10029a01
int3
mov eax [ ecx ]
push 0x1
call [ eax ]
sub_1001535e
push esi
mov esi ecx
call sub_1001537a
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_10025c9c
pop ecx
sub_100153d9
mov eax r-xdata
retn
sub_10015426
xor eax eax
inc eax
retn
sub_1001542a
mov esp [ ebp - 0x18 ]
mov [ ebp - 0x4 ] 0xfffffffe
push 0x2
pop eax
sub_10015437
call sub_1002e829
retn 0x4
sub_1001543f
push esi
mov esi ecx
mov eax [ esi ]
mov [ esi + 0xd ] 0x1
call [ eax + 0xc ]
mov [ esi + 0x10 ] eax
mov [ esi + 0xc ] 0x1
mov eax [ esi + 0x10 ]
pop esi
retn
sub_1001562d
test [ esp + 0x4 ] 0x1
push esi
mov esi ecx
mov [ esi ] r--data
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_10025c9c
pop ecx
sub_1001568d
mov [ ecx ] r--data
retn
sub_10015913
push esi
mov esi ecx
mov [ esi ] r--data
call sub_10015935
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_10025c9c
pop ecx
sub_10016375
push esi
mov esi ecx
call sub_10016391
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_10025c9c
pop ecx
sub_100164dc
mov ecx [ ebp + 0x8 ]
test ecx ecx
je r-xdata
push 0x0
push 0x0
call sub_10029a01
int3
mov eax [ ecx ]
push 0x1
call [ eax ]
sub_100167cc
mov [ ecx ] r--data
jmp sub_10007904
sub_1001702d
xor eax eax
cmp [ esp + 0x8 ] eax
je r-xdata
retn
lea eax [ esp + 0xc ]
push eax
lea ecx [ esp + 0x8 ]
call sub_100068d4
sub_10017250
push ecx
and [ esp ] 0x0
push ebx
mov ebx eax
push 0x1a
call sub_100170cd
pop ecx
mov eax ebx
pop ebx
pop ecx
retn
sub_10017265
push ecx
and [ esp ] 0x0
push ebx
mov ebx eax
push 0x23
call sub_100170cd
pop ecx
mov eax ebx
pop ebx
pop ecx
retn
sub_10017305
push 0x0
push [ esp + 0x8 ]
lea ecx [ esi + 0x4 ]
call sub_10005b42
mov [ esi ] r--data
mov eax esi
retn 0x4
sub_1001731e
push esi
mov esi ecx
call sub_10017355
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_10025c9c
pop ecx
sub_1001733a
push [ esp + 0x8 ]
lea ecx [ esi + 0x4 ]
push [ esp + 0x8 ]
call sub_100114f7
mov [ esi ] r--data
mov eax esi
retn 0x8
sub_10017355
push 0x0
mov [ ecx ] r--data
push 0x1
add ecx 0x4
call sub_100022b5
retn
sub_10017608
push esi
mov esi ecx
call sub_10017624
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_10025c9c
pop ecx
sub_10017690
push esi
mov esi ecx
mov [ esi ] r--data
call sub_10017a48
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_10025c9c
pop ecx
sub_10017725
mov [ ecx ] r--data
jmp sub_10017a48
sub_10017730
push esi
mov esi ecx
mov [ esi ] r--data
call sub_10017a48
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_10025c9c
pop ecx
sub_10017752
mov [ ecx ] r--data
jmp sub_10017a48
sub_100177db
push esi
mov esi ecx
mov [ esi ] r--data
call sub_10017a48
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_10025c9c
pop ecx
sub_100177fd
mov [ ecx ] r--data
jmp sub_10017a48
sub_10017a2c
push esi
mov esi ecx
call sub_10017a48
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_10025c9c
pop ecx
sub_10017a48
push esi
mov esi ecx
mov eax [ esi + 0x4 ]
mov [ esi ] r--data
test eax eax
je r-xdata
pop esi
retn
push eax
call [ InternetCloseHandle@IAT ]
and [ esi + 0x4 ] 0x0
sub_10017a65
push r--data
mov ecx esi
call sub_1000fee8
test eax eax
jne r-xdata
cmp [ esi + 0x18 ] 0x8
jb r-xdata
retn
lea eax [ esi + 0x4 ]
retn
mov eax [ esi + 0x4 ]
retn
CoUninitialize
jmp [ CoUninitialize@IAT ]
sub_10017de4
and [ eax + 0x14 ] 0x0
and [ eax + 0x10 ] 0x0
mov [ eax ] 0x67452301
mov [ eax + 0x4 ] 0xefcdab89
mov [ eax + 0x8 ] 0x98badcfe
mov [ eax + 0xc ] 0x10325476
retn
sub_10018cbf
cmp [ esp + 0x4 ] 0x0
je r-xdata
retn
mov edx [ ecx ]
mov [ eax ] edx
add eax 0x4
add ecx 0x4
dec [ esp + 0x4 ]
jne r-xdata
sub_10018cd7
dec eax
inc eax
retn
mov ecx eax
dec eax
test ecx ecx
jne r-xdata
mov ecx [ esp + 0x4 ]
cmp [ ecx + eax * 4 ] 0x0
jne r-xdata
sub_1001b157
mov eax [ esp + 0x8 ]
imul eax [ esp + 0xc ]
push eax
call sub_10028f2d
pop ecx
retn
sub_1001b168
cmp [ esp + 0x8 ] 0x0
je r-xdata
retn
push [ esp + 0x8 ]
call sub_1002644d
pop ecx
sub_10021ad4
test [ esp + 0x4 ] 0x1
push esi
mov esi ecx
mov [ esi ] r--data
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_10025c9c
pop ecx
sub_10021af1
mov [ ecx ] r--data
retn
sub_10021e34
push esi
mov esi ecx
call sub_10021e50
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_10025c9c
pop ecx
sub_10021e50
push esi
mov esi ecx
mov eax [ esi + 0x14 ]
mov [ esi ] r--data
test eax eax
je r-xdata
mov ecx esi
pop esi
jmp sub_1001537a
push eax
call [ DestroyWindow@IAT ]
sub_10022142
push esi
mov esi ecx
call sub_1002215e
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_10025c9c
pop ecx
sub_10022260
mov ecx [ ebp + 0x8 ]
test ecx ecx
je r-xdata
push 0x0
push 0x0
call sub_10029a01
int3
mov eax [ ecx ]
push 0x1
call [ eax ]
j_sub_1002a1d9
jmp sub_1002a1d9
sub_100223b4
mov edi edi
push esi
mov esi ecx
push [ esi ]
call sub_1002358f
push [ esi ]
call sub_10025c9c
pop ecx
pop ecx
pop esi
retn
sub_100223cb
push [ ecx ]
call sub_1002359f
pop ecx
retn
sub_100223d4
push [ ecx ]
call sub_100235af
pop ecx
retn
sub_1002245f
mov eax [ ecx ]
cmp eax 0x4
jge r-xdata
retn
imul eax eax 0x18
add eax rw-data
push eax
call sub_100235af
pop ecx
sub_100224d2
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call sub_1002ad30
pop ecx
test eax eax
je r-xdata
pop ebp
retn
pop ebp
jmp sub_1002ad85
sub_100224ec
mov ecx [ ecx + 0x4 ]
call sub_100077cb
test eax eax
je r-xdata
retn
mov edx [ eax ]
push 0x1
mov ecx eax
call [ edx ]
sub_1002256f
mov eax [ rw-data ]
retn
sub_1002290b
mov edi edi
push esi
call sub_1002c4e4
mov esi [ eax + 0x8 ]
call sub_1002c498
mov edx eax
mov eax esi
pop esi
retn
sub_10022bab
push r-xdata
call sub_1002ad30
neg eax
sbb eax eax
pop ecx
and eax 0x18
retn
sub_1002339f
mov edi edi
push ebp
mov ebp esp
pop ebp
jmp sub_10023336
sub_100233aa
mov edi edi
push ebp
mov ebp esp
pop ebp
jmp sub_10025dd6
sub_1002357f
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call [ InitializeCriticalSection@IAT ]
pop ebp
retn
sub_1002358f
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call [ DeleteCriticalSection@IAT ]
pop ebp
retn
sub_1002359f
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call [ EnterCriticalSection@IAT ]
pop ebp
retn
sub_100235af
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call [ LeaveCriticalSection@IAT ]
pop ebp
retn
sub_100235e5
jmp r-xdata
mov eax [ rw-data ]
mov ecx [ eax * 4 + rw-data ]
inc eax
mov [ rw-data ] eax
test ecx ecx
je r-xdata
retn
cmp eax 0xa
jb r-xdata
call [ eax * 4 + rw-data ]
sub_1002360a
retn
sub_1002360b
push esi
mov esi ecx
call sub_10024a3f
push [ esp + 0x8 ]
mov ecx esi
call sub_10024dfb
mov eax [ esp + 0xc ]
mov [ esi + 0x1c ] eax
mov eax [ esp + 0x10 ]
mov [ esi + 0x20 ] eax
pop esi
retn 0xc
sub_1002365c
mov eax [ esp + 0x4 ]
mov ecx [ esp + 0x8 ]
cmp eax ecx
je r-xdata
retn
mov edx [ eax ]
push esi
mov esi [ ecx ]
mov [ eax ] esi
mov [ ecx ] edx
pop esi
sub_10023673
push [ ecx ]
call sub_10026616
pop ecx
retn
sub_100236c2
push esi
mov esi ecx
push 0x0
push 0x1
lea ecx [ esi + 0x30 ]
mov [ esi ] r--data
call sub_100022b5
mov ecx esi
pop esi
jmp sub_10007904
sub_100236fd
push esi
mov esi ecx
call sub_100236c2
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_10025c9c
pop ecx
sub_10023825
push esi
mov esi [ esp + 0x8 ]
test esi esi
je r-xdata
pop esi
retn
mov ecx esi
call sub_1002374f
push esi
call sub_10025c9c
pop ecx
sub_100238b7
mov eax [ ebp - 0x14 ]
cmp [ eax + 0x24 ] 0x10
jb r-xdata
add eax 0x10
mov eax [ eax + 0x10 ]
jmp r-xdata
mov [ ebp - 0x14 ] eax
mov eax r-xdata
retn
sub_100238df
push esi
push 0xffffffff
push 0x0
push [ esp + 0x10 ]
mov esi ecx
call sub_10001f1a
mov eax esi
pop esi
retn 0x4
sub_100238f5
push esi
push [ esp + 0x8 ]
mov esi ecx
call sub_100238df
mov eax [ esp + 0xc ]
mov [ esi + 0x1c ] eax
mov eax [ esp + 0x10 ]
mov [ esi + 0x20 ] eax
pop esi
retn 0xc
sub_10023913
mov ecx [ esp + 0x8 ]
push 0xffffffff
push 0x0
push [ esp + 0xc ]
call sub_10001f1a
retn
sub_10023b72
push [ ebp + 0x8 ]
call sub_10023825
pop ecx
push 0x0
push 0x0
call sub_10029a01
int3
sub_10023b85
push [ ecx + 0xc ]
call sub_10023825
pop ecx
retn
sub_10023c15
push esi
mov esi ecx
mov [ esi ] r--data
mov ecx [ esi + 0x50 ]
test ecx ecx
je r-xdata
mov ecx esi
pop esi
jmp sub_100236c2
call sub_1000990a
sub_10023c32
push esi
mov esi ecx
call sub_10023c15
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_10025c9c
pop ecx
sub_10023de3
mov ecx [ ebp - 0x14 ]
call sub_1002383e
mov [ ebp - 0x14 ] eax
mov eax r-xdata
retn
sub_10023e6e
mov ecx [ ebp - 0x14 ]
add ecx 0x4c
call sub_1002369e
mov eax r-xdata
retn
sub_10023e82
mov eax edi
call sub_10029f0b
retn 0x10
sub_10023e8c
mov eax [ esp + 0x4 ]
push esi
mov esi ecx
mov ecx [ eax ]
add eax 0x4
mov [ esi ] ecx
push eax
lea ecx [ esi + 0x4 ]
call sub_1000979b
mov eax esi
pop esi
retn 0x4
sub_100245cb
push 0x5
pop eax
retn
sub_100245cf
test [ esp + 0x4 ] 0x1
push esi
mov esi ecx
mov [ esi ] r--data
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_10025c9c
pop ecx
sub_10024765
push esi
push [ esp + 0x8 ]
mov esi ecx
call sub_10026078
pop ecx
push eax
push [ esp + 0x10 ]
mov ecx esi
push [ esp + 0x10 ]
call sub_1002467d
pop esi
retn 0x8
sub_10024786
push esi
push [ esp + 0x8 ]
mov esi ecx
call sub_10026078
pop ecx
push eax
push [ esp + 0x10 ]
mov ecx esi
push [ esp + 0x10 ]
call sub_100246f2
pop esi
retn 0x8
sub_10024a3f
push esi
push 0xffffffff
mov esi ecx
call sub_10024984
push eax
mov ecx esi
call sub_10001d05
mov eax esi
pop esi
retn
sub_10024ddf
push esi
push 0x0
mov esi ecx
call sub_10024d83
mov [ esi ] r--data
mov eax esi
pop esi
retn
sub_10024df3
xor al al
retn
sub_10024df6
xor eax eax
retn 0x10
sub_10025345
mov eax [ esp + 0x4 ]
mov edx [ esp + 0x8 ]
mov [ eax ] edx
mov [ eax + 0x4 ] ecx
retn 0x8
sub_10025375
mov eax [ esp + 0x4 ]
cmp ecx [ eax + 0x4 ]
jne r-xdata
xor eax eax
mov eax [ eax ]
cmp eax [ esp + 0x8 ]
jne r-xdata
xor eax eax
inc eax
jmp r-xdata
retn 0x8
sub_10025390
mov eax r--data
retn
sub_10025448
push [ ecx ]
call [ LocalFree@IAT ]
retn
sub_10025451
mov eax r--data
retn
sub_10025457
mov eax r--data
retn
sub_1002545d
test [ esp + 0x4 ] 0x1
push esi
mov esi ecx
mov [ esi ] r--data
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_10025c9c
pop ecx
sub_10025c9c
mov edi edi
push ebp
mov ebp esp
pop ebp
jmp sub_1002644d
sub_10025dbb
mov edi edi
push esi
push 0x1
push rw-data
mov esi ecx
call sub_10025e9f
mov [ esi ] r--data
mov eax esi
pop esi
retn
sub_10025e3b
mov eax ecx
and [ eax + 0x4 ] 0x0
and [ eax + 0x8 ] 0x0
mov [ eax ] r--data
retn
sub_10025e9f
mov edi edi
push ebp
mov ebp esp
mov eax ecx
mov ecx [ ebp + 0x8 ]
mov [ eax ] r--data
mov ecx [ ecx ]
and [ eax + 0x8 ] 0x0
mov [ eax + 0x4 ] ecx
pop ebp
retn 0x8
sub_10025f19
cmp [ ecx + 0x8 ] 0x0
mov [ ecx ] r--data
je r-xdata
retn
push [ ecx + 0x4 ]
call sub_1002644d
pop ecx
sub_10025f2f
mov eax [ ecx + 0x4 ]
test eax eax
jne r-xdata
retn
mov eax r--data
sub_10025f5a
mov edi edi
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
mov esi ecx
call sub_10025ebc
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0x4
sub_10025f77
mov [ ecx ] r--data
jmp sub_10025f19
sub_10025fca
mov edi edi
push ecx
mov [ ecx ] r--data
call sub_1002d474
pop ecx
retn
sub_10026092
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
pop ebp
retn
sub_10026407
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
mov ecx [ ecx ]
push eax
push ecx
call sub_1002e7c4
pop ecx
pop ecx
retn
sub_100264a3
push 0x4
call sub_1002eb04
pop ecx
retn
sub_100264f9
call sub_1002db24
mov ecx [ eax + 0x6c ]
cmp ecx [ rw-data ]
je r-xdata
mov eax [ rw-data ]
retn
mov ecx [ rw-data ]
test [ eax + 0x70 ] ecx
jne r-xdata
call sub_1002b192
sub_10027d2a
mov edi edi
push ebp
mov ebp esp
call sub_1002db24
mov ecx [ ebp + 0x8 ]
mov [ eax + 0x14 ] ecx
pop ebp
retn
sub_10027d3c
call sub_1002db24
mov ecx [ eax + 0x14 ]
imul ecx ecx 0x343fd
add ecx 0x269ec3
mov [ eax + 0x14 ] ecx
mov eax ecx
shr eax 0x10
and eax 0x7fff
retn
sub_10028147
push esi
call sub_10029143
pop ecx
retn
sub_10028329
push [ ebp + 0x14 ]
call sub_10029143
pop ecx
retn
sub_1002848c
push [ ebp + 0xc ]
call sub_10029143
pop ecx
retn
sub_10028592
push esi
call sub_10029143
pop ecx
retn
sub_1002869f
push [ ebp + 0x8 ]
call sub_10029143
pop ecx
retn
sub_10028850
push [ ebp + 0x8 ]
call sub_10029143
pop ecx
retn
sub_100289ac
mov eax [ rw-data ]
push [ eax + esi * 4 ]
push esi
call sub_1002917f
pop ecx
pop ecx
retn
sub_100289db
push 0x1
call sub_1002eb04
pop ecx
retn
sub_10028a2d
push [ ebp + 0x8 ]
call sub_10029143
pop ecx
retn
sub_10028a37
push 0x1
call sub_1002890a
pop ecx
retn
sub_10028b2b
push esi
call sub_10029143
pop ecx
retn
sub_10028f24
push 0x4
call sub_1002eb04
pop ecx
retn
sub_100290b0
call sub_10028a37
cmp [ rw-data ] 0x0
je r-xdata
push [ rw-data ]
call sub_1002644d
pop ecx
retn
call sub_10031fc9
sub_100292c0
push [ ebp + 0x8 ]
call sub_10029143
pop ecx
retn
sub_1002975c
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call sub_10029731
pop ecx
push [ ebp + 0x8 ]
call [ ExitProcess@IAT ]
sub_10029774
push 0x8
call sub_1002ebde
pop ecx
retn
sub_1002977d
push 0x8
call sub_1002eb04
pop ecx
retn
sub_10029963
cmp [ ebp + 0x10 ] 0x0
je r-xdata
retn
push 0x8
call sub_1002eb04
pop ecx
sub_10029978
mov edi edi
push ebp
mov ebp esp
push 0x0
push 0x0
push [ ebp + 0x8 ]
call sub_1002984c
add esp 0xc
pop ebp
retn
sub_1002998e
mov edi edi
push ebp
mov ebp esp
push 0x0
push 0x1
push [ ebp + 0x8 ]
call sub_1002984c
add esp 0xc
pop ebp
retn
sub_100299a4
push 0x1
push 0x0
push 0x0
call sub_1002984c
add esp 0xc
retn
sub_10029f0b
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
push ecx
retn
sub_10029f1f
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_10025c8d
jmp sub_10029f0b
sub_10029f2e
mov ecx [ ebp - 0x14 ]
xor ecx ebp
call sub_10025c8d
jmp sub_10029f0b
sub_10029f5b
mov [ ecx ] r--data
jmp sub_10025f19
sub_1002a0b7
push [ ebp - 0x14 ]
call sub_10029fec
pop ecx
retn
sub_1002a0fb
call sub_1002db24
cmp [ eax + 0x90 ] 0x0
jle r-xdata
retn
call sub_1002db24
add eax 0x90
dec [ eax ]
sub_1002a19e
xor eax eax
cmp [ ebp + 0xc ] al
setne al
retn
sub_1002a1a7
mov esp [ ebp - 0x18 ]
call sub_1003338d
sub_1002a1d9
call sub_1002db24
xor ecx ecx
cmp [ eax + 0x90 ] ecx
setne cl
mov al cl
retn
sub_1002a267
push 0x4
mov eax sub_1004b23c
call sub_10029e66
call sub_1002db24
cmp [ eax + 0x94 ] 0x0
je r-xdata
and [ ebp - 0x4 ] 0x0
call sub_100333c6
call sub_100333d9
sub_1002a340
mov eax [ ebp - 0x14 ]
call sub_1002a116
retn
sub_1002a5b7
xor eax eax
inc eax
retn
sub_1002a5bb
mov esp [ ebp - 0x18 ]
call sub_1003338d
sub_1002a650
xor eax eax
inc eax
retn
sub_1002a654
mov esp [ ebp - 0x18 ]
call sub_1003338d
sub_1002ab06
mov edi edi
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
mov esi ecx
call sub_10025ebc
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0x4
sub_1002ad2a
call sub_1002977d
retn
sub_1002ad30
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call sub_1002acf4
neg eax
sbb eax eax
neg eax
pop ecx
dec eax
pop ebp
retn
sub_1002b1fc
push 0xc
call sub_1002eb04
pop ecx
mov esi [ ebp - 0x1c ]
retn
sub_1002b308
push 0xd
call sub_1002eb04
pop ecx
retn
sub_1002b314
push 0xc
call sub_1002eb04
pop ecx
retn
sub_1002b31d
xor eax eax
retn
sub_1002bfe4
push 0xc
call sub_1002eb04
pop ecx
retn
sub_1002bff0
push 0xc
call sub_1002eb04
pop ecx
retn
sub_1002c021
and [ esi + 0x70 ] 0xffffffef
retn
sub_1002c453
call sub_1002db24
mov ecx eax
mov eax [ ecx + 0x6c ]
cmp eax [ rw-data ]
je r-xdata
mov eax [ eax + 0xac ]
retn
mov edx [ rw-data ]
test [ ecx + 0x70 ] edx
jne r-xdata
call sub_1002b192
sub_1002c47c
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test eax eax
jne r-xdata
mov eax [ eax ]
mov eax [ eax + 0xac ]
pop ebp
retn
pop ebp
jmp sub_1002c453
sub_1002c498
call sub_1002db24
mov ecx eax
mov eax [ ecx + 0x6c ]
cmp eax [ rw-data ]
je r-xdata
mov eax [ eax + 0x4 ]
retn
mov edx [ rw-data ]
test [ ecx + 0x70 ] edx
jne r-xdata
call sub_1002b192
sub_1002c4e4
call sub_1002db24
mov ecx eax
mov eax [ ecx + 0x6c ]
cmp eax [ rw-data ]
je r-xdata
add eax 0xc
retn
mov edx [ rw-data ]
test [ ecx + 0x70 ] edx
jne r-xdata
call sub_1002b192
sub_1002c914
call sub_1002db24
mov ecx eax
mov eax [ ecx + 0x6c ]
cmp eax [ rw-data ]
je r-xdata
mov eax [ eax + 0xc8 ]
retn
mov edx [ rw-data ]
test [ ecx + 0x70 ] edx
jne r-xdata
call sub_1002b192
sub_1002ced4
mov eax sub_100370b8
mov [ rw-data ] eax
mov [ rw-data ] sub_1003679f
mov [ rw-data ] sub_10036753
mov [ rw-data ] sub_1003678c
mov [ rw-data ] sub_100366f5
mov [ rw-data ] eax
mov [ rw-data ] sub_10037030
mov [ rw-data ] sub_10036711
mov [ rw-data ] sub_10036673
mov [ rw-data ] sub_10036600
retn
sub_1002cf34
mov edi edi
push ebp
mov ebp esp
call sub_1002ced4
call sub_10037144
cmp [ ebp + 0x8 ] 0x0
mov [ rw-data ] eax
je r-xdata
fnclex
pop ebp
retn
call sub_100370db
sub_1002d076
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_1002cf57
add esp 0xc
pop ebp
retn
sub_1002d149
push [ ebp + 0x8 ]
call sub_10029143
pop ecx
retn
sub_1002d3d5
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
pop ebp
retn
sub_1002d4db
push 0xe
call sub_1002eb04
pop ecx
retn
sub_1002d855
and [ rw-data ] 0x0
retn
sub_1002d8cf
push 0x0
call sub_1002d85d
pop ecx
retn
sub_1002d94a
call [ TlsAlloc@IAT ]
retn 0x4
sub_1002da99
push 0xd
call sub_1002eb04
pop ecx
retn
sub_1002daa2
push 0xc
call sub_1002eb04
pop ecx
retn
sub_1002dc58
push 0xd
call sub_1002eb04
pop ecx
retn
sub_1002dc64
push 0xc
call sub_1002eb04
pop ecx
retn
sub_1002e0a5
xor eax eax
inc eax
retn
sub_1002e829
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
push ecx
retn
sub_1002eb04
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push [ eax * 8 + rw-data ]
call [ LeaveCriticalSection@IAT ]
pop ebp
retn
sub_1002ebd5
push 0xa
call sub_1002eb04
pop ecx
retn
sub_10030658
push 0xc
push r--data
call sub_1002e7e4
and [ ebp - 0x4 ] 0x0
movapd xmm0 xmm1
mov [ ebp - 0x1c ] 0x1
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
mov eax [ ebp - 0x1c ]
call sub_1002e829
retn
sub_10030675
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
mov eax [ eax ]
cmp eax 0xc0000005
je r-xdata
xor eax eax
inc eax
retn
cmp eax 0xc000001d
je r-xdata
xor eax eax
retn
sub_1003070a
call sub_100306a8
mov [ rw-data ] eax
xor eax eax
retn
sub_10030a7a
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
pop ebp
retn
sub_100312f7
push [ ebp + 0x8 ]
call sub_10038c84
pop ecx
retn
sub_100315bc
push [ ebp + 0x8 ]
call sub_10038c84
pop ecx
retn
sub_10031aef
push [ ebp + 0x8 ]
call sub_10029143
pop ecx
retn
sub_10031bda
push [ ebp + 0x8 ]
call sub_10029143
pop ecx
retn
sub_10031cec
push [ ebp + 0x8 ]
call sub_10038c84
pop ecx
retn
sub_10031e55
push [ ebp + 0x8 ]
call sub_10038c84
pop ecx
retn
sub_1003205f
push 0x1
call sub_1002eb04
pop ecx
retn
sub_10032197
push 0x1
call sub_1002eb04
pop ecx
retn
sub_10032276
push ebp
mov ecx [ esp + 0x8 ]
mov ebp [ ecx ]
push [ ecx + 0x1c ]
push [ ecx + 0x18 ]
push [ ecx + 0x28 ]
call sub_100321a0
add esp 0xc
pop ebp
retn 0x4
sub_100322a9
mov ebp edx
mov esi ecx
mov eax ecx
push 0x1
call sub_10038f5d
xor eax eax
xor ebx ebx
xor ecx ecx
xor edx edx
xor edi edi
jmp esi
sub_100322dc
push ebp
mov ebp [ esp + 0x8 ]
push edx
push ecx
push [ esp + 0x14 ]
call sub_100321a0
add esp 0xc
pop ebp
retn 0x8
sub_100329a8
push [ ebp + 0x8 ]
call sub_10038c84
pop ecx
retn
sub_10032d43
push 0xd
call sub_1002eb04
pop ecx
retn
sub_1003310e
push 0xd
call sub_1002eb04
pop ecx
retn
sub_10033147
cmp [ rw-data ] 0x0
jne r-xdata
xor eax eax
retn
push 0xfffffffd
call sub_10032fad
pop ecx
mov [ rw-data ] 0x1
sub_1003335b
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
mov eax [ ecx ]
xor edx edx
cmp eax 0xc0000005
sete dl
mov eax edx
retn
sub_1003338d
push 0x8
push r--data
call sub_1002e7e4
call sub_1002db24
mov eax [ eax + 0x78 ]
test eax eax
je r-xdata
call sub_1002ad85
and [ ebp - 0x4 ] 0x0
call eax
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
sub_100333ad
xor eax eax
inc eax
retn
sub_100333c6
call sub_1002db24
mov eax [ eax + 0x7c ]
test eax eax
je r-xdata
jmp sub_1003338d
call eax
sub_100333fd
xor eax eax
inc eax
retn
sub_10033411
push sub_1003338d
call sub_1002d85d
pop ecx
mov [ rw-data ] eax
retn
sub_10033422
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
pop ebp
retn
sub_10033477
push [ rw-data ]
call sub_1002d8d8
pop ecx
retn
sub_100335f8
cmp [ ebp - 0x1c ] 0x0
je r-xdata
retn
push 0x0
call sub_1002eb04
pop ecx
sub_10033634
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
pop ebp
retn
sub_10033643
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
pop ebp
retn
sub_10033673
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
mov eax [ eax ]
mov [ ebp - 0x20 ] eax
xor ecx ecx
cmp eax 0xc0000017
sete cl
mov eax ecx
retn
sub_1003368a
mov esp [ ebp - 0x18 ]
cmp [ ebp - 0x20 ] 0xc0000017
jne r-xdata
and [ ebp - 0x1c ] 0x0
mov [ ebp - 0x4 ] 0xfffffffe
mov eax [ ebp - 0x1c ]
call sub_1002e829
retn
push 0x8
call [ SetLastError@IAT ]
sub_1003370c
mov edi edi
push ebp
mov ebp esp
xor eax eax
inc eax
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
pop ebp
retn
xor eax eax
sub_100337b8
push 0x4
call sub_1002eb04
pop ecx
retn
sub_1003444d
push 0x0
call sub_1003434d
pop ecx
retn
sub_10034556
push 0x0
call sub_10034456
pop ecx
retn
sub_100348b6
push 0x0
call sub_1003455f
pop ecx
retn
sub_10036156
push ecx
lea ecx [ esp + 0x8 ]
sub ecx eax
and ecx 0x7
add eax ecx
sbb ecx ecx
or eax ecx
pop ecx
jmp sub_1002d210
sub_10036268
push 0x4
call sub_1002eb04
pop ecx
retn
sub_100363ce
push 0x4
call sub_1002eb04
pop ecx
retn
sub_100365ed
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x8 ]
call sub_100365b5
pop ecx
pop ecx
pop ebp
retn
sub_10036753
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_10036711
add esp 0x10
pop ebp
retn
sub_1003678c
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x8 ]
call sub_10036600
pop ecx
pop ecx
pop ebp
retn
sub_1003679f
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x8 ]
call sub_10036673
pop ecx
pop ecx
pop ebp
retn
sub_100374cb
mov eax rw-data
retn
sub_100374d1
mov eax rw-data
retn
sub_1003752a
mov edi edi
push ebp
mov ebp esp
push 0x4
push 0x0
push [ ebp + 0x8 ]
push 0x0
call sub_100374d7
add esp 0x10
pop ebp
retn
sub_100376d6
push [ ebp + 0x8 ]
call sub_10038c84
pop ecx
retn
sub_10037744
mov eax [ rw-data ]
or eax 0x1
xor ecx ecx
cmp [ rw-data ] eax
sete cl
mov eax ecx
retn
sub_10038a4c
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_10038935
add esp 0x10
pop ebp
retn
sub_10038c7b
push 0xa
call sub_1002eb04
pop ecx
retn
sub_10038d7e
push 0xa
call sub_1002eb04
pop ecx
retn
sub_10038e3c
push 0xb
call sub_1002eb04
pop ecx
retn
sub_10038f31
xor eax eax
mov ecx [ fs : 0x0 ]
cmp [ ecx + 0x4 ] sub_10038e68
jne r-xdata
retn
mov edx [ ecx + 0xc ]
mov edx [ edx + 0xc ]
cmp [ ecx + 0x8 ] edx
jne r-xdata
mov eax 0x1
sub_10038f7c
call eax
retn
sub_10038f7f
push 0x2
call sub_10029708
pop ecx
retn
sub_10039033
mov eax rw-data
retn
sub_10039039
mov eax rw-data
retn
sub_1003903f
mov eax rw-data
retn
sub_10039045
mov eax rw-data
retn
sub_1003904b
mov edi edi
push ebp
mov ebp esp
call sub_10039033
mov ecx [ ebp + 0x8 ]
mov [ eax ] ecx
pop ebp
retn
sub_1003905c
mov edi edi
push ebp
mov ebp esp
call sub_10039039
mov ecx [ ebp + 0x8 ]
mov [ eax ] ecx
pop ebp
retn
sub_1003906d
mov edi edi
push ebp
mov ebp esp
call sub_1003903f
mov ecx [ ebp + 0x8 ]
mov [ eax ] ecx
pop ebp
retn
sub_1003932a
push 0x7
call sub_1002eb04
pop ecx
retn
sub_1003940a
push 0x6
call sub_1002eb04
pop ecx
retn
sub_10039573
mov edi edi
push ebp
mov ebp esp
push 0xa
push 0x0
push [ ebp + 0x8 ]
call sub_1003b9ed
add esp 0xc
pop ebp
retn
sub_1003ba18
xor eax eax
push eax
push eax
push 0x3
push eax
push 0x3
push 0x40000000
push r--data
call [ CreateFileA@IAT ]
mov [ rw-data ] eax
retn
sub_1003ced3
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_1003cde5
add esp 0x10
pop ebp
retn
sub_1003cfb1
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
mov eax [ eax ]
cmp eax 0xc0000005
je r-xdata
xor eax eax
inc eax
retn
cmp eax 0xc000001d
je r-xdata
xor eax eax
retn
sub_1003d8c8
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_1003d80c
add esp 0xc
pop ebp
retn
CreateToolhelp32Snapshot
jmp [ CreateToolhelp32Snapshot@IAT ]
Process32FirstW
jmp [ Process32FirstW@IAT ]
Process32NextW
jmp [ Process32NextW@IAT ]
RtlUnwind
jmp [ RtlUnwind@IAT ]
sub_1003daa4
mov edi edi
push ebp
mov ebp esp
push ecx
and [ ebp - 0x4 ] 0x0
add ecx 0x58
push ecx
mov ecx [ ebp + 0x8 ]
call sub_10001c9f
mov eax [ ebp + 0x8 ]
leave
retn 0x4
sub_1003dde3
mov edi edi
push ebp
mov ebp esp
call sub_1004a804
mov ecx eax
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov [ eax + 0x4 ] edx
pop ebp
retn 0x4
sub_1003ddfb
mov edi edi
push ebp
mov ebp esp
push ecx
and [ ebp - 0x4 ] 0x0
call sub_100348b6
mov ecx [ ebp + 0x8 ]
mov [ ecx ] eax
mov eax ecx
leave
retn 0x4
sub_1003df20
mov [ ecx ] r--data
retn
sub_1003df27
mov edi edi
push esi
mov esi ecx
push [ esi + 0x8 ]
call sub_10026616
push [ esi + 0x10 ]
call sub_10026616
push [ esi + 0x14 ]
call sub_10026616
add esp 0xc
pop esi
retn
sub_1003dfbf
mov edi edi
push esi
mov esi ecx
push [ esi + 0x8 ]
call sub_10026616
push [ esi + 0xc ]
call sub_10026616
pop ecx
pop ecx
pop esi
retn
sub_1003e2fb
mov edi edi
push esi
mov esi ecx
cmp [ esi + 0x14 ] 0x0
mov [ esi ] r--data
je r-xdata
mov [ esi ] r--data
pop esi
retn
push [ esi + 0x10 ]
call sub_1002644d
pop ecx
sub_1003e33e
mov edi edi
push ebp
mov ebp esp
add ecx 0x8
push ecx
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_100224a5
add esp 0x10
pop ebp
retn 0xc
sub_1003e3ba
mov edi edi
push ebp
mov ebp esp
add ecx 0x8
push ecx
push [ ebp + 0x8 ]
call sub_10022d9f
pop ecx
pop ecx
pop ebp
retn 0x4
sub_1003e401
mov edi edi
push ebp
mov ebp esp
add ecx 0x8
push ecx
push [ ebp + 0x8 ]
call sub_10022d32
pop ecx
pop ecx
pop ebp
retn 0x4
sub_1003e47e
mov edi edi
push ebp
mov ebp esp
pop ebp
jmp sub_1003e448
sub_1003e532
mov edi edi
push ebp
mov ebp esp
pop ebp
jmp sub_1003e4ea
sub_1003e5ef
mov edi edi
push esi
mov esi ecx
push [ esi + 0x8 ]
mov [ esi ] r--data
call sub_1002644d
pop ecx
mov [ esi ] r--data
pop esi
retn
sub_1003e6d8
mov edi edi
push esi
mov esi ecx
mov [ esi ] r--data
call sub_1003df95
mov [ esi ] r--data
pop esi
retn
sub_1003e6f0
mov edi edi
push ebp
mov ebp esp
mov ecx [ ecx + 0x20 ]
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
pop ebp
retn 0x4
sub_1003e724
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_10002425
mov eax [ ebp + 0x8 ]
add esp 0x10
pop ebp
retn
sub_1003e742
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0xc ]
push [ ebp + 0x10 ]
push [ ebp + 0x8 ]
call sub_10006d8d
add esp 0xc
pop ebp
retn
sub_1003e7c6
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_1003e724
add esp 0x10
pop ebp
retn
sub_1003e828
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_10001cc5
mov eax [ ebp + 0x8 ]
add esp 0x10
pop ebp
retn
sub_1003e924
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_1003e828
add esp 0x10
pop ebp
retn
sub_1003eaa7
or eax 0xffffffff
retn 0x8
sub_1003ec03
mov edi edi
push esi
mov esi ecx
mov [ esi ] r--data
call sub_1003df95
mov [ esi ] r--data
pop esi
retn
sub_1003ec1b
mov ax [ ecx + 0xe ]
retn
sub_1003ec20
mov edi edi
push ebp
mov ebp esp
mov ecx [ ecx + 0x24 ]
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
pop ebp
retn 0x4
sub_1003ec58
mov edi edi
push esi
mov esi ecx
push [ esi + 0x8 ]
mov [ esi ] r--data
call sub_1002644d
pop ecx
mov [ esi ] r--data
pop esi
retn
sub_1003eefb
mov ecx [ ebp - 0x14 ]
call sub_1003df27
xor ebx ebx
push ebx
push ebx
call sub_10029a01
int3
sub_1003f153
mov ecx [ ebp - 0x14 ]
call sub_1003df95
push 0x0
push 0x0
call sub_10029a01
int3
sub_1003f471
mov ecx [ ebp - 0x14 ]
call sub_1003df95
push 0x0
push 0x0
call sub_10029a01
int3
sub_1003f4f6
mov edi edi
push ebp
mov ebp esp
push esi
push [ ebp + 0xc ]
mov esi ecx
push [ ebp + 0x8 ]
call sub_1003e9bb
mov eax esi
pop esi
pop ebp
retn 0x8
sub_1003f510
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x8 ]
call sub_1003e784
pop ecx
pop ecx
pop ebp
retn 0x4
sub_1003f5d8
mov edi edi
push esi
mov esi ecx
mov [ esi ] r--data
call sub_1003df27
mov [ esi ] r--data
pop esi
retn
sub_1003f8aa
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x18 ]
mov [ ebp + 0x8 ] eax
inc eax
mov [ ebp - 0x10 ] esp
push eax
mov [ ebp - 0x4 ] 0x2
call sub_1003f510
mov [ ebp - 0x14 ] eax
mov eax r-xdata
retn
sub_1003f91b
mov ecx [ ebp - 0x18 ]
xor esi esi
push esi
push 0x1
call sub_1003f79e
push esi
push esi
call sub_10029a01
int3
sub_1003fa92
push 0x0
push 0x1
call sub_1003f79e
retn
sub_1003fa9c
mov edi edi
push ebp
mov ebp esp
push ecx
push [ ebp + 0x8 ]
mov eax [ ecx ]
and [ ebp - 0x4 ] 0x0
call [ eax + 0xc ]
mov eax [ ebp + 0x8 ]
leave
retn 0x4
sub_1003fb1a
mov edi edi
push ebp
mov ebp esp
push ecx
push [ ebp + 0x8 ]
mov eax [ ecx ]
and [ ebp - 0x4 ] 0x0
call [ eax + 0x10 ]
mov eax [ ebp + 0x8 ]
leave
retn 0x4
sub_1004076c
mov edi edi
push ebp
mov ebp esp
push ecx
push [ ebp + 0x18 ]
mov ecx [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
call sub_10001fad
mov eax [ ebp + 0x8 ]
leave
retn 0x14
sub_10040965
mov edi edi
push ebp
mov ebp esp
push ecx
push [ ecx + 0x10 ]
mov ecx [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
call sub_10001254
mov eax [ ebp + 0x8 ]
leave
retn 0x4
sub_10040981
mov edi edi
push ebp
mov ebp esp
push ecx
push [ ecx + 0x14 ]
mov ecx [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
call sub_10001254
mov eax [ ebp + 0x8 ]
leave
retn 0x4
sub_1004099d
mov edi edi
push ebp
mov ebp esp
push ecx
push [ ecx + 0x18 ]
mov ecx [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
call sub_10001254
mov eax [ ebp + 0x8 ]
leave
retn 0x4
sub_10040c39
mov edi edi
push ebp
mov ebp esp
push ecx
push [ ecx + 0x10 ]
mov ecx [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
call sub_1004032b
mov eax [ ebp + 0x8 ]
leave
retn 0x4
sub_10040e39
mov edi edi
push ebp
mov ebp esp
push ecx
push [ ebp + 0x18 ]
mov ecx [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
call sub_1004037c
mov eax [ ebp + 0x8 ]
leave
retn 0x14
sub_10041032
mov edi edi
push ebp
mov ebp esp
push ecx
push [ ecx + 0x8 ]
mov ecx [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
call sub_10001b81
mov eax [ ebp + 0x8 ]
leave
retn 0x4
sub_1004104e
mov edi edi
push ebp
mov ebp esp
push ecx
push [ ecx + 0x14 ]
mov ecx [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
call sub_1004032b
mov eax [ ebp + 0x8 ]
leave
retn 0x4
sub_1004106a
mov edi edi
push ebp
mov ebp esp
push ecx
push [ ecx + 0x18 ]
mov ecx [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
call sub_1004032b
mov eax [ ebp + 0x8 ]
leave
retn 0x4
sub_10042d6f
mov ecx [ ebp - 0x14 ]
call sub_1003dfbf
xor ebx ebx
push ebx
push ebx
call sub_10029a01
int3
sub_10044a96
mov ecx [ ebp - 0x14 ]
call sub_1003dfbf
xor ebx ebx
push ebx
push ebx
call sub_10029a01
int3
sub_10044ef4
mov edi edi
push esi
mov esi ecx
mov [ esi ] r--data
call sub_1003dfbf
mov [ esi ] r--data
pop esi
retn
sub_100468f8
mov edi edi
push esi
mov esi ecx
mov [ esi ] r--data
call sub_1003dfbf
mov [ esi ] r--data
pop esi
retn
sub_10047c9b
mov edi edi
push esi
mov esi ecx
mov [ esi ] r--data
call sub_1003df95
mov [ esi ] r--data
pop esi
retn
sub_10047cb3
mov al [ ecx + 0xc ]
retn
sub_10047cb7
mov al [ ecx + 0xd ]
retn
sub_10047cbb
mov eax [ ecx + 0x1c ]
retn
sub_10047ce6
mov edi edi
push esi
mov esi ecx
push [ esi + 0x8 ]
mov [ esi ] r--data
call sub_1002644d
pop ecx
mov [ esi ] r--data
pop esi
retn
sub_10047ee6
mov ecx [ ebp - 0x14 ]
call sub_1003df95
push 0x0
push 0x0
call sub_10029a01
int3
sub_10048017
mov edi edi
push ebp
mov ebp esp
push ecx
push [ ebp + 0x18 ]
mov ecx [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
call sub_10001c9f
mov eax [ ebp + 0x8 ]
leave
retn 0x14
sub_100484df
mov edi edi
push ebp
mov ebp esp
push ecx
push [ ecx + 0x10 ]
mov ecx [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
call sub_10001b81
mov eax [ ebp + 0x8 ]
leave
retn 0x4
sub_100484fb
mov edi edi
push ebp
mov ebp esp
push ecx
push [ ecx + 0x14 ]
mov ecx [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
call sub_10001b81
mov eax [ ebp + 0x8 ]
leave
retn 0x4
sub_10048517
mov edi edi
push ebp
mov ebp esp
push ecx
push [ ecx + 0x18 ]
mov ecx [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
call sub_10001b81
mov eax [ ebp + 0x8 ]
leave
retn 0x4
sub_10049864
mov ecx [ ebp - 0x14 ]
call sub_1003dfbf
xor ebx ebx
push ebx
push ebx
call sub_10029a01
int3
sub_10049bed
mov eax [ ecx + 0x10 ]
retn
sub_10049bf1
mov edi edi
push esi
mov esi ecx
mov [ esi ] r--data
call sub_1003dfbf
mov [ esi ] r--data
pop esi
retn
sub_1004a804
mov edi edi
push esi
call sub_1002c4e4
mov esi [ eax + 0x4 ]
call sub_1002c4be
mov edx eax
mov eax esi
pop esi
retn
sub_1004ab34
lea ecx [ ebp - 0x28 ]
jmp sub_10001c95
sub_1004ab3c
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x54 ]
xor ecx eax
call sub_10025c8d
mov eax r--data
jmp sub_10029ada
sub_1004ab57
lea ecx [ ebp - 0x10 ]
jmp sub_1002245f
sub_1004ab5f
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_10025c8d
mov eax r--data
jmp sub_10029ada
sub_1004ab7a
mov ecx [ ebp - 0x10 ]
jmp sub_1003df20
sub_1004ab82
mov ecx [ ebp - 0x10 ]
add ecx 0x18
jmp sub_10001c95
sub_1004ab8d
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_10025c8d
mov eax r--data
jmp sub_10029ada
sub_1004aba8
lea ecx [ ebp - 0x10 ]
jmp sub_1002245f
sub_1004abb0
push [ ebp - 0x14 ]
call sub_10025c9c
pop ecx
retn
sub_1004abba
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_10025c8d
mov eax r--data
jmp sub_10029ada
sub_1004abd5
mov ecx [ ebp - 0x10 ]
jmp sub_100024c9
sub_1004abdd
mov ecx [ ebp - 0x10 ]
add ecx 0x1c
jmp sub_100024c9
sub_1004abe8
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_10025c8d
mov eax r--data
jmp sub_10029ada
sub_1004ac03
lea ecx [ ebp - 0x2c ]
jmp sub_100024c9
sub_1004ac0b
mov eax [ ebp - 0x10 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x10 ] 0xfffffffe
mov ecx [ ebp + 0x8 ]
jmp sub_100024c9
sub_1004ac24
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x30 ]
xor ecx eax
call sub_10025c8d
mov eax r--data
jmp sub_10029ada
sub_1004ac3f
lea ecx [ ebp - 0x30 ]
jmp sub_10001c95
sub_1004ac47
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x34 ]
xor ecx eax
call sub_10025c8d
mov eax r--data
jmp sub_10029ada
sub_1004ac62
lea ecx [ ebp - 0x2c ]
jmp sub_100024c9
sub_1004ac6a
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x288 ]
xor ecx eax
call sub_10025c8d
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10025c8d
mov eax r--data
jmp sub_10029ada
sub_1004ac92
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_10025c8d
mov eax r--data
jmp sub_10029ada
sub_1004acad
mov ecx [ ebp - 0x10 ]
jmp sub_100024c9
sub_1004acb5
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_10025c8d
mov eax r--data
jmp sub_10029ada
sub_1004acd0
mov eax [ ebp - 0x10 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x10 ] 0xfffffffe
mov ecx [ ebp - 0x1c ]
jmp sub_10001c95
sub_1004ace9
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x28 ]
xor ecx eax
call sub_10025c8d
mov eax r--data
jmp sub_10029ada
sub_1004ad04
lea ecx [ ebp - 0x30 ]
jmp sub_10001c95
sub_1004ad0c
lea ecx [ ebp - 0x4c ]
jmp sub_10001c95
sub_1004ad14
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x50 ]
xor ecx eax
call sub_10025c8d
mov eax r--data
jmp sub_10029ada
sub_1004ad2f
mov ecx [ ebp - 0x14 ]
jmp sub_100236c2
sub_1004ad37
mov ecx [ ebp - 0x14 ]
add ecx 0x4c
jmp sub_100097b6
sub_1004ad42
push [ ebp + 0x8 ]
call sub_10025c9c
pop ecx
retn
sub_1004ad4c
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_10025c8d
mov eax r--data
jmp sub_10029ada
sub_1004ad67
mov ecx [ ebp - 0x10 ]
jmp sub_10007904
sub_1004ad6f
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_10025c8d
mov eax r--data
jmp sub_10029ada
sub_1004ad8a
lea ecx [ ebp - 0x2c ]
jmp sub_100024c9
sub_1004ad92
lea ecx [ ebp - 0x60 ]
jmp sub_10001c95
sub_1004ad9a
lea ecx [ ebp - 0x7c ]
jmp sub_100024c9
sub_1004ada2
lea ecx [ ebp - 0x60 ]
jmp sub_100024c9
sub_1004adaa
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xd4 ]
xor ecx eax
call sub_10025c8d
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10025c8d
mov eax r--data
jmp sub_10029ada
sub_1004add2
lea ecx [ ebp - 0x60 ]
jmp sub_10001c95
sub_1004adda
lea ecx [ ebp - 0x2c ]
jmp sub_100024c9
sub_1004ade2
lea ecx [ ebp - 0x60 ]
jmp sub_100024c9
sub_1004adea
lea ecx [ ebp - 0x60 ]
jmp sub_10001c95
sub_1004adf2
lea ecx [ ebp - 0x7c ]
jmp sub_100024c9
sub_1004adfa
lea ecx [ ebp - 0x98 ]
jmp sub_100024c9
sub_1004ae05
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x9c ]
xor ecx eax
call sub_10025c8d
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10025c8d
mov eax r--data
jmp sub_10029ada
sub_1004ae2d
push [ ebp + 0x8 ]
call sub_10025c9c
pop ecx
retn
sub_1004ae37
mov eax [ ebp - 0x10 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x10 ] 0xfffffffe
lea ecx [ ebp - 0x2c ]
jmp sub_10001c95
sub_1004ae50
mov eax [ ebp - 0x10 ]
and eax 0x2
je r-xdata
retn
and [ ebp - 0x10 ] 0xfffffffd
lea ecx [ ebp - 0xa0 ]
jmp sub_100073dd
sub_1004ae6c
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xa4 ]
xor ecx eax
call sub_10025c8d
mov eax r--data
jmp sub_10029ada
sub_1004ae8a
push [ ebp - 0x10 ]
call sub_10025c9c
pop ecx
retn
sub_1004ae94
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_10025c8d
mov eax r--data
jmp sub_10029ada
sub_1004aeaf
mov ecx [ ebp - 0x10 ]
jmp sub_1002245f
sub_1004aeb7
mov ecx [ ebp - 0x10 ]
add ecx 0x4
jmp sub_10001c95
sub_1004aec2
mov ecx [ ebp - 0x10 ]
add ecx 0x20
jmp sub_10001c95
sub_1004aecd
mov ecx [ ebp - 0x10 ]
add ecx 0x3c
jmp sub_10001c95
sub_1004aed8
mov ecx [ ebp - 0x10 ]
add ecx 0x58
jmp sub_10001c95
sub_1004aee3
lea ecx [ ebp - 0x2c ]
jmp sub_10001c95
sub_1004aeeb
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x58 ]
xor ecx eax
call sub_10025c8d
mov eax r--data
jmp sub_10029ada
sub_1004af06
mov ecx [ ebp - 0x88 ]
jmp sub_1003df20
sub_1004af11
lea ecx [ ebp - 0x84 ]
jmp sub_100073dd
sub_1004af1c
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x8c ]
xor ecx eax
call sub_10025c8d
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10025c8d
mov eax r--data
jmp sub_10029ada
sub_1004af44
lea ecx [ ebp - 0x10 ]
jmp sub_10007806
sub_1004af4c
push [ ebp - 0x14 ]
call sub_10025c9c
pop ecx
retn
sub_1004af56
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_10025c8d
mov eax r--data
jmp sub_10029ada
sub_1004af71
mov eax [ rw-data ]
and eax 0xfffffffe
mov [ rw-data ] eax
retn
sub_1004af7f
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_10025c8d
mov eax r--data
jmp sub_10029ada
sub_1004af9a
mov eax [ rw-data ]
and eax 0xfffffffe
mov [ rw-data ] eax
retn
sub_1004afa8
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_10025c8d
mov eax r--data
jmp sub_10029ada
sub_1004afc3
mov ecx [ ebp - 0x10 ]
jmp sub_100024c9
sub_1004afcb
lea ecx [ ebp - 0x2c ]
jmp sub_100024c9
sub_1004afd3
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x30 ]
xor ecx eax
call sub_10025c8d
mov eax r--data
jmp sub_10029ada
sub_1004afee
mov ecx [ ebp - 0x30 ]
jmp sub_100024c9
sub_1004aff6
lea ecx [ ebp - 0x2c ]
jmp sub_100024c9
sub_1004affe
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x34 ]
xor ecx eax
call sub_10025c8d
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10025c8d
mov eax r--data
jmp sub_10029ada
sub_1004b023
mov eax [ ebp - 0x10 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x10 ] 0xfffffffe
lea ecx [ ebp - 0x2c ]
jmp sub_100024c9
sub_1004b03c
mov eax [ ebp - 0x10 ]
and eax 0x2
je r-xdata
retn
and [ ebp - 0x10 ] 0xfffffffd
lea ecx [ ebp - 0x48 ]
jmp sub_100024c9
sub_1004b055
mov eax [ ebp - 0x10 ]
and eax 0x4
je r-xdata
retn
and [ ebp - 0x10 ] 0xfffffffb
mov ecx [ ebp + 0x8 ]
jmp sub_100024c9
sub_1004b06e
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x4c ]
xor ecx eax
call sub_10025c8d
mov eax r--data
jmp sub_10029ada
sub_1004b089
lea ecx [ ebp - 0x2c ]
jmp sub_10001c95
sub_1004b091
mov ecx [ ebp - 0x10 ]
jmp sub_10007904
sub_1004b099
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x30 ]
xor ecx eax
call sub_10025c8d
mov eax r--data
jmp sub_10029ada
sub_1004b0b4
lea ecx [ ebp - 0x1c ]
jmp sub_10023673
sub_1004b0bc
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x20 ]
xor ecx eax
call sub_10025c8d
mov ecx [ edx + 0x10c ]
xor ecx eax
call sub_10025c8d
mov eax r--data
jmp sub_10029ada
sub_1004b0e4
mov eax [ rw-data ]
and eax 0xfffffffe
mov [ rw-data ] eax
retn
sub_1004b0f2
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_10025c8d
mov eax r--data
jmp sub_10029ada
sub_1004b10d
mov eax [ ebp - 0x10 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x10 ] 0xfffffffe
mov ecx [ ebp - 0x14 ]
jmp sub_10001c95
sub_1004b126
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_10025c8d
mov eax r--data
jmp sub_10029ada
sub_1004b141
mov eax [ rw-data ]
and eax 0xfffffffe
mov [ rw-data ] eax
retn
sub_1004b14f
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_10025c8d
mov eax r--data
jmp sub_10029ada
sub_1004b16a
mov eax [ rw-data ]
and eax 0xfffffffe
mov [ rw-data ] eax
retn
sub_1004b178
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_10025c8d
mov eax r--data
jmp sub_10029ada
sub_1004b193
mov eax [ rw-data ]
and eax 0xfffffffe
mov [ rw-data ] eax
retn
sub_1004b1a1
mov eax [ ebp - 0x10 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x10 ] 0xfffffffe
lea ecx [ ebp - 0x2c ]
jmp sub_10001c95
sub_1004b1ba
mov eax [ ebp - 0x10 ]
and eax 0x2
je r-xdata
retn
and [ ebp - 0x10 ] 0xfffffffd
mov ecx [ ebp + 0x8 ]
jmp sub_10001c95
sub_1004b1d3
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x30 ]
xor ecx eax
call sub_10025c8d
mov eax r--data
jmp sub_10029ada
sub_1004b1ee
lea ecx [ ebp - 0x30 ]
jmp sub_10025448
sub_1004b1f6
mov eax [ ebp - 0x34 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x34 ] 0xfffffffe
mov ecx [ ebp - 0x3c ]
jmp sub_10001c95
sub_1004b20f
lea ecx [ ebp - 0x2c ]
jmp sub_10001c95
sub_1004b217
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x40 ]
xor ecx eax
call sub_10025c8d
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10025c8d
mov eax r--data
jmp sub_10029ada
sub_1004b23c
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_10025c8d
mov eax r--data
jmp sub_10029ada
sub_1004b257
lea ecx [ ebp - 0x10 ]
jmp sub_1002245f
sub_1004b25f
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x20 ]
xor ecx eax
call sub_10025c8d
mov eax r--data
jmp sub_10029ada
sub_1004b27a
push [ ebp + 0x10 ]
call sub_10025c9c
pop ecx
retn
sub_1004b284
lea ecx [ ebp - 0x2c ]
jmp sub_10001c95
sub_1004b28c
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x30 ]
xor ecx eax
call sub_10025c8d
mov eax r--data
jmp sub_10029ada
sub_1004b2a7
lea ecx [ ebp - 0x84 ]
jmp sub_100073dd
sub_1004b2b2
lea ecx [ ebp - 0x88 ]
jmp sub_1002245f
sub_1004b2bd
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x98 ]
xor ecx eax
call sub_10025c8d
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10025c8d
mov eax r--data
jmp sub_10029ada
sub_1004b2e5
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x24 ]
xor ecx eax
call sub_10025c8d
mov eax r--data
jmp sub_10029ada
sub_1004b300
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x20 ]
xor ecx eax
call sub_10025c8d
mov eax r--data
jmp sub_10029ada
sub_1004b31b
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x20 ]
xor ecx eax
call sub_10025c8d
mov eax r--data
jmp sub_10029ada
sub_1004b336
mov ecx [ ebp - 0x10 ]
jmp sub_1003df20
sub_1004b33e
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_10025c8d
mov eax r--data
jmp sub_10029ada
sub_1004b359
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x1c ]
xor ecx eax
call sub_10025c8d
mov eax r--data
jmp sub_10029ada
sub_1004b374
lea ecx [ ebp - 0x34 ]
jmp sub_10001c95
sub_1004b37c
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x5c ]
xor ecx eax
call sub_10025c8d
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10025c8d
mov eax r--data
jmp sub_10029ada
sub_1004b3a1
mov eax [ ebp - 0x1c ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x1c ] 0xfffffffe
mov ecx [ ebp - 0x20 ]
jmp sub_100024c9
sub_1004b3ba
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x34 ]
xor ecx eax
call sub_10025c8d
mov eax r--data
jmp sub_10029ada
sub_1004b3d5
push [ ebp + 0x8 ]
call sub_10025c9c
pop ecx
retn
sub_1004b3df
mov eax [ ebp - 0x10 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x10 ] 0xfffffffe
lea ecx [ ebp - 0x2c ]
jmp sub_10001c95
sub_1004b3f8
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xa4 ]
xor ecx eax
call sub_10025c8d
mov eax r--data
jmp sub_10029ada
sub_1004b416
mov eax [ ebp - 0x1c ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x1c ] 0xfffffffe
mov ecx [ ebp - 0x20 ]
jmp sub_1003fa92
sub_1004b42f
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x34 ]
xor ecx eax
call sub_10025c8d
mov eax r--data
jmp sub_10029ada
sub_1004b44a
lea ecx [ ebp - 0x14 ]
jmp sub_1002245f
sub_1004b452
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x24 ]
xor ecx eax
call sub_10025c8d
mov eax r--data
jmp sub_10029ada
sub_1004b46d
lea ecx [ ebp - 0x3c ]
jmp sub_10007806
sub_1004b475
lea ecx [ ebp - 0x2c ]
jmp sub_1003fa92
sub_1004b47d
lea ecx [ ebp - 0x5c ]
jmp sub_1003fa92
sub_1004b485
lea ecx [ ebp - 0x5c ]
jmp sub_1003fa92
sub_1004b48d
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x60 ]
xor ecx eax
call sub_10025c8d
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10025c8d
mov eax r--data
jmp sub_10029ada
sub_1004b4b2
lea ecx [ ebp - 0xb0 ]
jmp sub_10007806
sub_1004b4bd
lea ecx [ ebp - 0xac ]
jmp sub_10007806
sub_1004b4c8
lea ecx [ ebp - 0x48 ]
jmp sub_100024c9
sub_1004b4d0
mov eax [ ebp - 0x70 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x70 ] 0xfffffffe
mov ecx [ ebp - 0x7c ]
jmp sub_100024c9
sub_1004b4e9
lea ecx [ ebp - 0x88 ]
jmp sub_10007806
sub_1004b4f4
lea ecx [ ebp - 0x64 ]
jmp sub_10001c95
sub_1004b4fc
lea ecx [ ebp - 0x2c ]
jmp sub_10001c95
sub_1004b504
mov eax [ ebp - 0x70 ]
and eax 0x2
je r-xdata
retn
and [ ebp - 0x70 ] 0xfffffffd
lea ecx [ ebp - 0x124 ]
jmp sub_100024c9
sub_1004b520
mov eax [ ebp - 0x70 ]
and eax 0x4
je r-xdata
retn
and [ ebp - 0x70 ] 0xfffffffb
lea ecx [ ebp - 0xec ]
jmp sub_100024c9
sub_1004b53c
lea ecx [ ebp - 0x15c ]
jmp sub_100024c9
sub_1004b547
mov eax [ ebp - 0x70 ]
and eax 0x8
je r-xdata
retn
and [ ebp - 0x70 ] 0xfffffff7
lea ecx [ ebp - 0x140 ]
jmp sub_100024c9
sub_1004b563
mov eax [ ebp - 0x70 ]
and eax 0x10
je r-xdata
retn
and [ ebp - 0x70 ] 0xffffffef
lea ecx [ ebp - 0x108 ]
jmp sub_100024c9
sub_1004b57f
lea ecx [ ebp - 0x178 ]
jmp sub_100024c9
sub_1004b58a
lea ecx [ ebp - 0x2c ]
jmp sub_100024c9
sub_1004b592
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x17c ]
xor ecx eax
call sub_10025c8d
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10025c8d
mov eax r--data
jmp sub_10029ada
sub_1004b5ba
lea ecx [ ebp + 0x24 ]
jmp sub_100024c9
sub_1004b5c2
lea ecx [ ebp - 0x88 ]
jmp sub_10007806
sub_1004b5cd
lea ecx [ ebp - 0x8c ]
jmp sub_10007806
sub_1004b5d8
lea ecx [ ebp - 0x2c ]
jmp sub_10001c95
sub_1004b5e0
lea ecx [ ebp - 0x48 ]
jmp sub_100024c9
sub_1004b5e8
lea ecx [ ebp - 0xc0 ]
jmp sub_100024c9
sub_1004b5f3
lea ecx [ ebp - 0xc0 ]
jmp sub_100024c9
sub_1004b5fe
lea ecx [ ebp - 0x64 ]
jmp sub_100024c9
sub_1004b606
lea ecx [ ebp - 0xc0 ]
jmp sub_100024c9
sub_1004b611
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x12c ]
xor ecx eax
call sub_10025c8d
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10025c8d
mov eax r--data
jmp sub_10029ada
sub_1004b639
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x20 ]
xor ecx eax
call sub_10025c8d
mov eax r--data
jmp sub_10029ada
sub_1004b654
lea ecx [ ebp - 0x48 ]
jmp sub_10001c95
sub_1004b65c
lea ecx [ ebp - 0x2c ]
jmp sub_10001c95
sub_1004b664
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x74 ]
xor ecx eax
call sub_10025c8d
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10025c8d
mov eax r--data
jmp sub_10029ada
sub_1004b689
lea ecx [ ebp - 0x78 ]
jmp sub_10007806
sub_1004b691
lea ecx [ ebp - 0x48 ]
jmp sub_10001c95
sub_1004b699
lea ecx [ ebp - 0x2c ]
jmp sub_10001c95
sub_1004b6a1
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x7c ]
xor ecx eax
call sub_10025c8d
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10025c8d
mov eax r--data
jmp sub_10029ada
sub_1004b6c6
lea ecx [ ebp - 0x50 ]
jmp sub_10007806
sub_1004b6ce
lea ecx [ ebp - 0x2c ]
jmp sub_10001c95
sub_1004b6d6
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x54 ]
xor ecx eax
call sub_10025c8d
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10025c8d
mov eax r--data
jmp sub_10029ada
sub_1004b6fb
lea ecx [ ebp - 0xb0 ]
jmp sub_10007806
sub_1004b706
lea ecx [ ebp - 0xac ]
jmp sub_10007806
sub_1004b711
lea ecx [ ebp - 0x48 ]
jmp sub_1003fa92
sub_1004b719
mov eax [ ebp - 0x70 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x70 ] 0xfffffffe
mov ecx [ ebp - 0x7c ]
jmp sub_1003fa92
sub_1004b732
lea ecx [ ebp - 0x88 ]
jmp sub_10007806
sub_1004b73d
lea ecx [ ebp - 0x64 ]
jmp sub_10001c95
sub_1004b745
lea ecx [ ebp - 0x2c ]
jmp sub_10001c95
sub_1004b74d
mov eax [ ebp - 0x70 ]
and eax 0x2
je r-xdata
retn
and [ ebp - 0x70 ] 0xfffffffd
lea ecx [ ebp - 0x124 ]
jmp sub_1003fa92
sub_1004b769
mov eax [ ebp - 0x70 ]
and eax 0x4
je r-xdata
retn
and [ ebp - 0x70 ] 0xfffffffb
lea ecx [ ebp - 0xec ]
jmp sub_1003fa92
sub_1004b785
lea ecx [ ebp - 0x15c ]
jmp sub_1003fa92
sub_1004b790
mov eax [ ebp - 0x70 ]
and eax 0x8
je r-xdata
retn
and [ ebp - 0x70 ] 0xfffffff7
lea ecx [ ebp - 0x140 ]
jmp sub_1003fa92
sub_1004b7ac
mov eax [ ebp - 0x70 ]
and eax 0x10
je r-xdata
retn
and [ ebp - 0x70 ] 0xffffffef
lea ecx [ ebp - 0x108 ]
jmp sub_1003fa92
sub_1004b7c8
lea ecx [ ebp - 0x178 ]
jmp sub_1003fa92
sub_1004b7d3
lea ecx [ ebp - 0x2c ]
jmp sub_1003fa92
sub_1004b7db
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x17c ]
xor ecx eax
call sub_10025c8d
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10025c8d
mov eax r--data
jmp sub_10029ada
sub_1004b803
lea ecx [ ebp + 0x24 ]
jmp sub_1003fa92
sub_1004b80b
lea ecx [ ebp - 0x88 ]
jmp sub_10007806
sub_1004b816
lea ecx [ ebp - 0x8c ]
jmp sub_10007806
sub_1004b821
lea ecx [ ebp - 0x2c ]
jmp sub_10001c95
sub_1004b829
lea ecx [ ebp - 0x48 ]
jmp sub_1003fa92
sub_1004b831
lea ecx [ ebp - 0xc0 ]
jmp sub_1003fa92
sub_1004b83c
lea ecx [ ebp - 0xc0 ]
jmp sub_1003fa92
sub_1004b847
lea ecx [ ebp - 0x64 ]
jmp sub_1003fa92
sub_1004b84f
lea ecx [ ebp - 0xc0 ]
jmp sub_1003fa92
sub_1004b85a
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x12c ]
xor ecx eax
call sub_10025c8d
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10025c8d
mov eax r--data
jmp sub_10029ada
sub_1004b882
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x20 ]
xor ecx eax
call sub_10025c8d
mov eax r--data
jmp sub_10029ada
sub_1004b89d
lea ecx [ ebp - 0x2c ]
jmp sub_100024c9
sub_1004b8a5
lea ecx [ ebp - 0x48 ]
jmp sub_10001c95
sub_1004b8ad
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x64 ]
xor ecx eax
call sub_10025c8d
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10025c8d
mov eax r--data
jmp sub_10029ada
sub_1004b8d2
lea ecx [ ebp - 0x2c ]
jmp sub_100024c9
sub_1004b8da
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x30 ]
xor ecx eax
call sub_10025c8d
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10025c8d
mov eax r--data
jmp sub_10029ada
sub_1004b8ff
lea ecx [ ebp - 0x54 ]
jmp sub_100024c9
sub_1004b907
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x64 ]
xor ecx eax
call sub_10025c8d
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10025c8d
mov eax r--data
jmp sub_10029ada
sub_1004b92c
lea ecx [ ebp - 0x2c ]
jmp sub_100024c9
sub_1004b934
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x3c ]
xor ecx eax
call sub_10025c8d
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10025c8d
mov eax r--data
jmp sub_10029ada
sub_1004b959
lea ecx [ ebp - 0x54 ]
jmp sub_10007806
sub_1004b961
lea ecx [ ebp - 0x4c ]
jmp sub_1003fa92
sub_1004b969
lea ecx [ ebp - 0x2c ]
jmp sub_1003fa92
sub_1004b971
lea ecx [ ebp - 0x2c ]
jmp sub_1003fa92
sub_1004b979
lea ecx [ ebp - 0x60 ]
jmp sub_10007806
sub_1004b981
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x70 ]
xor ecx eax
call sub_10025c8d
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10025c8d
mov eax r--data
jmp sub_10029ada
sub_1004b9a6
lea ecx [ ebp - 0x38 ]
jmp sub_10007806
sub_1004b9ae
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x48 ]
xor ecx eax
call sub_10025c8d
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10025c8d
mov eax r--data
jmp sub_10029ada
sub_1004b9d3
lea ecx [ ebp - 0x58 ]
jmp sub_10007806
sub_1004b9db
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x60 ]
xor ecx eax
call sub_10025c8d
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10025c8d
mov eax r--data
jmp sub_10029ada
sub_1004ba00
lea ecx [ ebp - 0x40 ]
jmp sub_10007806
sub_1004ba08
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x48 ]
xor ecx eax
call sub_10025c8d
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10025c8d
mov eax r--data
jmp sub_10029ada
sub_1004ba2d
lea ecx [ ebp - 0x2c ]
jmp sub_1003fa92
sub_1004ba35
lea ecx [ ebp - 0x48 ]
jmp sub_10001c95
sub_1004ba3d
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x64 ]
xor ecx eax
call sub_10025c8d
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10025c8d
mov eax r--data
jmp sub_10029ada
sub_1004ba62
lea ecx [ ebp - 0x2c ]
jmp sub_1003fa92
sub_1004ba6a
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x30 ]
xor ecx eax
call sub_10025c8d
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10025c8d
mov eax r--data
jmp sub_10029ada
sub_1004ba8f
lea ecx [ ebp - 0x54 ]
jmp sub_1003fa92
sub_1004ba97
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x64 ]
xor ecx eax
call sub_10025c8d
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10025c8d
mov eax r--data
jmp sub_10029ada
sub_1004babc
lea ecx [ ebp - 0x2c ]
jmp sub_1003fa92
sub_1004bac4
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x3c ]
xor ecx eax
call sub_10025c8d
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10025c8d
mov eax r--data
jmp sub_10029ada
sub_1004bae9
push [ ebp - 0x14 ]
call sub_10025c9c
pop ecx
retn
sub_1004baf3
mov eax [ ebp - 0x10 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x10 ] 0xfffffffe
lea ecx [ ebp - 0x30 ]
jmp sub_10001c95
sub_1004bb0c
mov eax [ ebp - 0x10 ]
and eax 0x2
je r-xdata
retn
and [ ebp - 0x10 ] 0xfffffffd
lea ecx [ ebp - 0xa4 ]
jmp sub_100073dd
sub_1004bb28
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xa8 ]
xor ecx eax
call sub_10025c8d
mov eax r--data
jmp sub_10029ada
sub_1004bb46
push [ ebp - 0x14 ]
call sub_10025c9c
pop ecx
retn
sub_1004bb50
push [ ebp - 0x14 ]
call sub_10025c9c
pop ecx
retn
sub_1004bb5a
push [ ebp - 0x14 ]
call sub_10025c9c
pop ecx
retn
sub_1004bb64
push [ ebp + 0xc ]
call sub_10025c9c
pop ecx
retn
sub_1004bb6e
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_10025c8d
mov eax r--data
jmp sub_10029ada
sub_1004bb89
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x20 ]
xor ecx eax
call sub_10025c8d
mov eax r--data
jmp sub_10029ada
sub_1004bba4
lea ecx [ ebp - 0x34 ]
jmp sub_10001c95
sub_1004bbac
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x50 ]
xor ecx eax
call sub_10025c8d
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10025c8d
mov eax r--data
jmp sub_10029ada
sub_1004bbd1
mov eax [ ebp - 0x1c ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x1c ] 0xfffffffe
mov ecx [ ebp - 0x20 ]
jmp sub_10001c95
sub_1004bbea
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x34 ]
xor ecx eax
call sub_10025c8d
mov eax r--data
jmp sub_10029ada
sub_1004bc05
lea ecx [ ebp - 0xb8 ]
jmp sub_10007806
sub_1004bc10
lea ecx [ ebp - 0xbc ]
jmp sub_10007806
sub_1004bc1b
lea ecx [ ebp - 0x64 ]
jmp sub_10001c95
sub_1004bc23
mov eax [ ebp - 0x6c ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x6c ] 0xfffffffe
mov ecx [ ebp - 0x7c ]
jmp sub_10001c95
sub_1004bc3c
lea ecx [ ebp - 0x88 ]
jmp sub_10007806
sub_1004bc47
lea ecx [ ebp - 0x48 ]
jmp sub_10001c95
sub_1004bc4f
lea ecx [ ebp - 0x2c ]
jmp sub_10001c95
sub_1004bc57
mov eax [ ebp - 0x6c ]
and eax 0x2
je r-xdata
retn
and [ ebp - 0x6c ] 0xfffffffd
lea ecx [ ebp - 0x128 ]
jmp sub_10001c95
sub_1004bc73
mov eax [ ebp - 0x6c ]
and eax 0x4
je r-xdata
retn
and [ ebp - 0x6c ] 0xfffffffb
lea ecx [ ebp - 0xf0 ]
jmp sub_10001c95
sub_1004bc8f
lea ecx [ ebp - 0x160 ]
jmp sub_10001c95
sub_1004bc9a
mov eax [ ebp - 0x6c ]
and eax 0x8
je r-xdata
retn
and [ ebp - 0x6c ] 0xfffffff7
lea ecx [ ebp - 0x144 ]
jmp sub_10001c95
sub_1004bcb6
mov eax [ ebp - 0x6c ]
and eax 0x10
je r-xdata
retn
and [ ebp - 0x6c ] 0xffffffef
lea ecx [ ebp - 0x10c ]
jmp sub_10001c95
sub_1004bcd2
lea ecx [ ebp - 0x17c ]
jmp sub_10001c95
sub_1004bcdd
lea ecx [ ebp - 0x2c ]
jmp sub_10001c95
sub_1004bce5
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x180 ]
xor ecx eax
call sub_10025c8d
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10025c8d
mov eax r--data
jmp sub_10029ada
sub_1004bd0d
lea ecx [ ebp + 0x24 ]
jmp sub_10001c95
sub_1004bd15
lea ecx [ ebp - 0x84 ]
jmp sub_10007806
sub_1004bd20
lea ecx [ ebp - 0x88 ]
jmp sub_10007806
sub_1004bd2b
lea ecx [ ebp - 0x2c ]
jmp sub_10001c95
sub_1004bd33
lea ecx [ ebp - 0x48 ]
jmp sub_10001c95
sub_1004bd3b
lea ecx [ ebp - 0xc4 ]
jmp sub_10001c95
sub_1004bd46
lea ecx [ ebp - 0xc4 ]
jmp sub_10001c95
sub_1004bd51
lea ecx [ ebp - 0x64 ]
jmp sub_10001c95
sub_1004bd59
lea ecx [ ebp - 0xc4 ]
jmp sub_10001c95
sub_1004bd64
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x130 ]
xor ecx eax
call sub_10025c8d
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10025c8d
mov eax r--data
jmp sub_10029ada
sub_1004bd8c
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x20 ]
xor ecx eax
call sub_10025c8d
mov eax r--data
jmp sub_10029ada
sub_1004bda7
lea ecx [ ebp - 0x2c ]
jmp sub_10001c95
sub_1004bdaf
lea ecx [ ebp - 0x48 ]
jmp sub_10001c95
sub_1004bdb7
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x5c ]
xor ecx eax
call sub_10025c8d
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10025c8d
mov eax r--data
jmp sub_10029ada
sub_1004bddc
lea ecx [ ebp - 0x2c ]
jmp sub_10001c95
sub_1004bde4
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x30 ]
xor ecx eax
call sub_10025c8d
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10025c8d
mov eax r--data
jmp sub_10029ada
sub_1004be09
lea ecx [ ebp - 0x54 ]
jmp sub_10001c95
sub_1004be11
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x64 ]
xor ecx eax
call sub_10025c8d
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10025c8d
mov eax r--data
jmp sub_10029ada
sub_1004be36
lea ecx [ ebp - 0x2c ]
jmp sub_10001c95
sub_1004be3e
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x38 ]
xor ecx eax
call sub_10025c8d
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10025c8d
mov eax r--data
jmp sub_10029ada
sub_1004be63
push [ ebp - 0x10 ]
call sub_10025c9c
pop ecx
retn
sub_1004be6d
push [ ebp - 0x10 ]
call sub_10025c9c
pop ecx
retn
sub_1004be77
push [ ebp + 0xc ]
call sub_10025c9c
pop ecx
retn
sub_1004be81
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_10025c8d
mov eax r--data
jmp sub_10029ada
sub_1004be9c
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_10025c8d
mov eax r--data
jmp sub_10029ada
sub_1004beb7
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_10025c8d
mov eax r--data
jmp sub_10029ada
sub_1004bed2
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_10025c8d
mov eax r--data
jmp sub_10029ada
sub_1004beed
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_10025c8d
mov eax r--data
jmp sub_10029ada
sub_1004bf08
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_10025c8d
mov eax r--data
jmp sub_10029ada
sub_1004bf23
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_10025c8d
mov eax r--data
jmp sub_10029ada
sub_1004bf3e
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_10025c8d
mov eax r--data
jmp sub_10029ada
sub_1004bf59
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x1c ]
xor ecx eax
call sub_10025c8d
mov eax r--data
jmp sub_10029ada
sub_1004bf74
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x24 ]
xor ecx eax
call sub_10025c8d
mov eax r--data
jmp sub_10029ada
sub_1004bf8f
mov ecx [ ebp + 0x8 ]
add ecx 0x4
jmp sub_100223b4
sub_1004bf9a
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_10025c8d
mov eax r--data
jmp sub_10029ada
sub_1004bfb5
lea esi [ ebp - 0x10 ]
jmp sub_1000b92f
sub_1004bfbd
lea esi [ ebp - 0x14 ]
jmp sub_1000b92f
sub_1004bfc5
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_10025c8d
mov eax r--data
jmp sub_10029ada
sub_1004bfe3
mov ecx [ ebp - 0x10 ]
sub ecx 0x48
jmp sub_10002ffd
sub_1004bfee
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_10025c8d
mov eax r--data
jmp sub_10029ada
sub_1004c009
mov ecx [ ebp - 0x10 ]
sub ecx 0x48
jmp sub_10011769
sub_1004c014
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_10025c8d
mov eax r--data
jmp sub_10029ada
sub_1004c02f
mov ecx [ ebp - 0x10 ]
jmp sub_1002245f
sub_1004c037
mov ecx [ ebp - 0x10 ]
add ecx 0x4
jmp sub_10001c95
sub_1004c042
mov ecx [ ebp - 0x10 ]
add ecx 0x20
jmp sub_10001c95
sub_1004c04d
mov ecx [ ebp - 0x10 ]
add ecx 0x3c
jmp sub_10001c95
sub_1004c058
mov ecx [ ebp - 0x10 ]
add ecx 0x58
jmp sub_10001c95
sub_1004c063
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_10025c8d
mov eax r--data
jmp sub_10029ada
sub_1004c07e
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x1c ]
xor ecx eax
call sub_10025c8d
mov eax r--data
jmp sub_10029ada
sub_1004c099
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x1c ]
xor ecx eax
call sub_10025c8d
mov eax r--data
jmp sub_10029ada
sub_1004c0b4
mov ecx [ ebp - 0x10 ]
jmp sub_1000af38
sub_1004c0bc
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_10025c8d
mov eax r--data
jmp sub_10029ada
sub_1004c0d7
push [ ebp - 0x10 ]
call sub_10025c9c
pop ecx
retn
sub_1004c0e1
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_10025c8d
mov eax r--data
jmp sub_10029ada
sub_1004c0fc
mov ecx [ ebp - 0x10 ]
jmp sub_10025f19
sub_1004c104
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_10025c8d
mov eax r--data
jmp sub_10029ada
sub_1004c11f
lea ecx [ ebp - 0x2c ]
jmp sub_10001c95
sub_1004c127
lea ecx [ ebp - 0x48 ]
jmp sub_10001c95
sub_1004c12f
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x70 ]
xor ecx eax
call sub_10025c8d
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10025c8d
mov eax r--data
jmp sub_10029ada
sub_1004c154
lea ecx [ ebp - 0x34 ]
jmp sub_10007806
sub_1004c15c
lea ecx [ ebp - 0x30 ]
jmp sub_10001c95
sub_1004c164
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x54 ]
mov ecx [ edx - 0x58 ]
xor ecx eax
call sub_10025c8d
add eax 0xc
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_10025c8d
mov eax r--data
jmp sub_10029ada
sub_1004c18c
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_10025c8d
mov eax r--data
jmp sub_10029ada
sub_1004c1a7
lea ecx [ ebp - 0x30 ]
jmp sub_10001c95
sub_1004c1af
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x2c ]
mov ecx [ edx - 0x30 ]
xor ecx eax
call sub_10025c8d
add eax 0x4
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_10025c8d
mov eax r--data
jmp sub_10029ada
sub_1004c1d7
mov ecx [ ebp - 0x10 ]
add ecx 0x4
jmp sub_100024c9
sub_1004c1e2
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_10025c8d
mov eax r--data
jmp sub_10029ada
sub_1004c1fd
push [ ebp - 0x14 ]
call sub_10025c9c
pop ecx
retn
sub_1004c207
mov eax [ ebp - 0x10 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x10 ] 0xfffffffe
lea ecx [ ebp - 0x30 ]
jmp sub_10001c95
sub_1004c220
mov eax [ ebp - 0x10 ]
and eax 0x2
je r-xdata
retn
and [ ebp - 0x10 ] 0xfffffffd
lea ecx [ ebp - 0xa4 ]
jmp sub_100073dd
sub_1004c23c
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xa8 ]
xor ecx eax
call sub_10025c8d
mov eax r--data
jmp sub_10029ada
sub_1004c25a
lea ecx [ ebp - 0x2c ]
jmp sub_10001c95
sub_1004c262
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x48 ]
xor ecx eax
call sub_10025c8d
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10025c8d
mov eax r--data
jmp sub_10029ada
sub_1004c287
lea ecx [ ebp - 0x2c ]
jmp sub_10001c95
sub_1004c28f
lea ecx [ ebp - 0x48 ]
jmp sub_10001c95
sub_1004c297
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x6c ]
xor ecx eax
call sub_10025c8d
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10025c8d
mov eax r--data
jmp sub_10029ada
sub_1004c2bc
lea ecx [ ebp - 0x48 ]
jmp sub_10001c95
sub_1004c2c4
lea ecx [ ebp - 0x2c ]
jmp sub_10001c95
sub_1004c2cc
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x68 ]
xor ecx eax
call sub_10025c8d
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10025c8d
mov eax r--data
jmp sub_10029ada
sub_1004c2f1
lea ecx [ ebp - 0x3c ]
jmp sub_10007806
sub_1004c2f9
lea ecx [ ebp - 0x30 ]
jmp sub_10001c95
sub_1004c301
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x4c ]
mov ecx [ edx - 0x50 ]
xor ecx eax
call sub_10025c8d
add eax 0xc
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_10025c8d
mov eax r--data
jmp sub_10029ada
sub_1004c329
lea ecx [ ebp - 0x54 ]
jmp sub_10007806
sub_1004c331
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x64 ]
xor ecx eax
call sub_10025c8d
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10025c8d
mov eax r--data
jmp sub_10029ada
sub_1004c356
lea ecx [ ebp - 0x38 ]
jmp sub_10007806
sub_1004c35e
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x4c ]
xor ecx eax
call sub_10025c8d
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10025c8d
mov eax r--data
jmp sub_10029ada
sub_1004c383
lea ecx [ ebp - 0x3c ]
jmp sub_10007806
sub_1004c38b
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x48 ]
xor ecx eax
call sub_10025c8d
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10025c8d
mov eax r--data
jmp sub_10029ada
sub_1004c3b0
lea ecx [ ebp - 0x3c ]
jmp sub_10007806
sub_1004c3b8
lea ecx [ ebp - 0x2c ]
jmp sub_10001c95
sub_1004c3c0
lea ecx [ ebp - 0x5c ]
jmp sub_10001c95
sub_1004c3c8
lea ecx [ ebp - 0x5c ]
jmp sub_10001c95
sub_1004c3d0
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x60 ]
xor ecx eax
call sub_10025c8d
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10025c8d
mov eax r--data
jmp sub_10029ada
sub_1004c3f5
lea ecx [ ebp - 0x30 ]
jmp sub_10001c95
sub_1004c3fd
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x5c ]
xor ecx eax
call sub_10025c8d
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10025c8d
mov eax r--data
jmp sub_10029ada
sub_1004c422
lea ecx [ ebp + 0xc ]
jmp sub_10007806
sub_1004c42a
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_10025c8d
mov eax r--data
jmp sub_10029ada
sub_1004c445
lea ecx [ ebp - 0x2c ]
jmp sub_10001c95
sub_1004c44d
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x68 ]
xor ecx eax
call sub_10025c8d
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10025c8d
mov eax r--data
jmp sub_10029ada
sub_1004c472
lea ecx [ ebp - 0x30 ]
jmp sub_10001c95
sub_1004c47a
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x64 ]
mov ecx [ edx - 0x68 ]
xor ecx eax
call sub_10025c8d
add eax 0xc
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_10025c8d
mov eax r--data
jmp sub_10029ada
sub_1004c4a2
mov ecx [ ebp - 0x10 ]
jmp sub_100104f5
sub_1004c4aa
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_10025c8d
mov eax r--data
jmp sub_10029ada
sub_1004c4c5
mov ecx [ ebp - 0x10 ]
sub ecx 0x50
jmp sub_10010554
sub_1004c4d0
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_10025c8d
mov eax r--data
jmp sub_10029ada
sub_1004c4eb
mov esi [ ebp + 0x8 ]
jmp sub_1000b0b6
sub_1004c4f3
mov ecx [ ebp + 0x8 ]
add ecx 0x3c
jmp sub_1000b7e3
sub_1004c4fe
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_10025c8d
mov eax r--data
jmp sub_10029ada
sub_1004c519
mov esi [ ebp + 0x8 ]
jmp sub_1000adb7
sub_1004c521
mov ecx [ ebp + 0x8 ]
add ecx 0x3c
jmp sub_1000b7e3
sub_1004c52c
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_10025c8d
mov eax r--data
jmp sub_10029ada
sub_1004c547
mov esi [ ebp + 0x8 ]
jmp sub_1000ab2f
sub_1004c54f
mov ecx [ ebp + 0x8 ]
add ecx 0x3c
jmp sub_1000b7e3
sub_1004c55a
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_10025c8d
mov eax r--data
jmp sub_10029ada
sub_1004c575
mov ecx [ ebp + 0x8 ]
jmp sub_100024c9
sub_1004c57d
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_10025c8d
mov eax r--data
jmp sub_10029ada
sub_1004c598
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x1c ]
xor ecx eax
call sub_10025c8d
mov eax r--data
jmp sub_10029ada
sub_1004c5b3
mov ecx [ ebp + 0x8 ]
add ecx 0x4
jmp sub_10014ac2
sub_1004c5be
mov ecx [ ebp + 0x8 ]
add ecx 0xc
jmp sub_10014ac2
sub_1004c5c9
lea ecx [ ebp - 0x2c ]
jmp sub_10001c95
sub_1004c5d1
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x58 ]
xor ecx eax
call sub_10025c8d
mov eax r--data
jmp sub_10029ada
sub_1004c5ec
lea ecx [ ebp - 0x30 ]
jmp sub_10001c95
sub_1004c5f4
lea ecx [ ebp - 0x54 ]
jmp sub_10001c95
sub_1004c5fc
lea ecx [ ebp - 0x54 ]
jmp sub_10001c95
sub_1004c604
lea ecx [ ebp - 0x54 ]
jmp sub_10001c95
sub_1004c60c
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x80 ]
xor ecx eax
call sub_10025c8d
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10025c8d
mov eax r--data
jmp sub_10029ada
sub_1004c631
lea ecx [ ebp - 0x2c ]
jmp sub_10001c95
sub_1004c639
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x58 ]
xor ecx eax
call sub_10025c8d
mov eax r--data
jmp sub_10029ada
sub_1004c654
lea ecx [ ebp - 0x2a8 ]
jmp sub_10001c95
sub_1004c65f
lea ecx [ ebp - 0x2a8 ]
jmp sub_10001c95
sub_1004c66a
lea ecx [ ebp - 0x2a8 ]
jmp sub_10001c95
sub_1004c675
lea ecx [ ebp - 0x264 ]
jmp sub_10001c95
sub_1004c680
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x2a4 ]
mov ecx [ edx - 0x2a8 ]
xor ecx eax
call sub_10025c8d
add eax 0x4
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_10025c8d
mov eax r--data
jmp sub_10029ada
sub_1004c6ae
lea ecx [ ebp - 0x34 ]
jmp sub_10007806
sub_1004c6b6
lea ecx [ ebp - 0x2c ]
jmp sub_10001c95
sub_1004c6be
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x40 ]
xor ecx eax
call sub_10025c8d
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10025c8d
mov eax r--data
jmp sub_10029ada
sub_1004c6e3
mov eax [ ebp - 0x10 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x10 ] 0xfffffffe
mov ecx [ ebp - 0x14 ]
jmp sub_10001c95
sub_1004c6fc
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x1c ]
xor ecx eax
call sub_10025c8d
mov eax r--data
jmp sub_10029ada
sub_1004c717
mov eax [ ebp - 0x18 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x18 ] 0xfffffffe
mov ecx [ ebp - 0x14 ]
jmp sub_10001c95
sub_1004c730
lea ecx [ ebp - 0x34 ]
jmp sub_10001c95
sub_1004c738
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x38 ]
xor ecx eax
call sub_10025c8d
mov eax r--data
jmp sub_10029ada
sub_1004c753
lea ecx [ ebp - 0x5c ]
jmp sub_10001c95
sub_1004c75b
jmp CoUninitialize
sub_1004c760
lea ecx [ ebp - 0x40 ]
jmp sub_10001c95
sub_1004c768
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xb0 ]
xor ecx eax
call sub_10025c8d
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10025c8d
mov eax r--data
jmp sub_10029ada
sub_1004c790
mov ecx [ ebp + 0x8 ]
jmp sub_10014ac2
sub_1004c798
lea ecx [ ebp - 0x2c ]
jmp sub_10001c95
sub_1004c7a0
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x58 ]
xor ecx eax
call sub_10025c8d
mov eax r--data
jmp sub_10029ada
sub_1004c7bb
lea ecx [ ebp - 0x54 ]
jmp sub_10001c95
sub_1004c7c3
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x54 ]
mov ecx [ edx - 0x58 ]
xor ecx eax
call sub_10025c8d
mov eax r--data
jmp sub_10029ada
sub_1004c7de
lea ecx [ ebp - 0x2c ]
jmp sub_10001c95
sub_1004c7e6
lea ecx [ ebp - 0x2c ]
jmp sub_10001c95
sub_1004c7ee
lea ecx [ ebp - 0x48 ]
jmp sub_10001c95
sub_1004c7f6
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x50 ]
xor ecx eax
call sub_10025c8d
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10025c8d
mov eax r--data
jmp sub_10029ada
sub_1004c81b
mov ecx [ ebp + 0x8 ]
add ecx 0x4
jmp sub_10001c95
sub_1004c826
lea ecx [ ebp - 0x28 ]
jmp sub_10001c95
sub_1004c82e
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x54 ]
xor ecx eax
call sub_10025c8d
mov eax r--data
jmp sub_10029ada
sub_1004c849
lea ecx [ ebp - 0x3c ]
jmp sub_10001c95
sub_1004c851
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x68 ]
xor ecx eax
call sub_10025c8d
mov eax r--data
jmp sub_10029ada
sub_1004c86c
lea ecx [ ebp - 0x30 ]
jmp sub_10001c95
sub_1004c874
lea ecx [ ebp - 0x54 ]
jmp sub_10001c95
sub_1004c87c
lea ecx [ ebp - 0x54 ]
jmp sub_10001c95
sub_1004c884
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x80 ]
xor ecx eax
call sub_10025c8d
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10025c8d
mov eax r--data
jmp sub_10029ada
sub_1004c8a9
lea ecx [ ebp - 0x50 ]
jmp sub_10007806
sub_1004c8b1
lea ecx [ ebp - 0x30 ]
jmp sub_10001c95
sub_1004c8b9
lea ecx [ ebp - 0x4c ]
jmp sub_10001c95
sub_1004c8c1
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x7c ]
mov ecx [ edx - 0x80 ]
xor ecx eax
call sub_10025c8d
add eax 0xc
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_10025c8d
mov eax r--data
jmp sub_10029ada
sub_1004c8e9
lea ecx [ ebp - 0x54 ]
jmp sub_10007806
sub_1004c8f1
lea ecx [ ebp - 0x4c ]
jmp sub_10001c95
sub_1004c8f9
lea ecx [ ebp - 0x2c ]
jmp sub_10001c95
sub_1004c901
lea ecx [ ebp - 0x2c ]
jmp sub_10001c95
sub_1004c909
lea ecx [ ebp - 0x60 ]
jmp sub_10007806
sub_1004c911
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x70 ]
xor ecx eax
call sub_10025c8d
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10025c8d
mov eax r--data
jmp sub_10029ada
sub_1004c936
mov ecx [ ebp - 0x10 ]
sub ecx 0x50
jmp sub_1001038f
sub_1004c941
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_10025c8d
mov eax r--data
jmp sub_10029ada
sub_1004c95c
mov esi [ ebp + 0x8 ]
jmp sub_1000b7c8
sub_1004c964
mov ecx [ ebp + 0x8 ]
add ecx 0x3c
jmp sub_1000b7e3
sub_1004c96f
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_10025c8d
mov eax r--data
jmp sub_10029ada
sub_1004c98a
lea esi [ ebp - 0x4c ]
jmp sub_1000b0b6
sub_1004c992
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x90 ]
xor ecx eax
call sub_10025c8d
mov eax r--data
jmp sub_10029ada
sub_1004c9b0
mov ecx [ ebp - 0x10 ]
jmp sub_100024c9
sub_1004c9b8
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x1c ]
xor ecx eax
call sub_10025c8d
mov eax r--data
jmp sub_10029ada
sub_1004c9d3
lea eax [ ebp - 0x24 ]
jmp sub_100085f0
sub_1004c9db
lea eax [ ebp - 0x24 ]
jmp sub_100085f0
sub_1004c9e3
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x28 ]
xor ecx eax
call sub_10025c8d
mov eax r--data
jmp sub_10029ada
sub_1004c9fe
lea ecx [ ebp - 0x70 ]
jmp sub_10001c95
sub_1004ca06
lea ecx [ ebp - 0x70 ]
jmp sub_10001c95
sub_1004ca0e
lea ecx [ ebp - 0x2c ]
jmp sub_10001c95
sub_1004ca16
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x94 ]
mov ecx [ edx - 0x98 ]
xor ecx eax
call sub_10025c8d
mov eax r--data
jmp sub_10029ada
sub_1004ca37
lea ecx [ ebp - 0x54 ]
jmp sub_10007806
sub_1004ca3f
lea ecx [ ebp - 0x4c ]
jmp sub_100024c9
sub_1004ca47
lea ecx [ ebp - 0x2c ]
jmp sub_100024c9
sub_1004ca4f
lea ecx [ ebp - 0x2c ]
jmp sub_100024c9
sub_1004ca57
lea ecx [ ebp - 0x60 ]
jmp sub_10007806
sub_1004ca5f
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x70 ]
xor ecx eax
call sub_10025c8d
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10025c8d
mov eax r--data
jmp sub_10029ada
sub_1004ca84
lea ecx [ ebp - 0x3c ]
jmp sub_10007806
sub_1004ca8c
lea ecx [ ebp - 0x2c ]
jmp sub_100024c9
sub_1004ca94
lea ecx [ ebp - 0x5c ]
jmp sub_100024c9
sub_1004ca9c
lea ecx [ ebp - 0x5c ]
jmp sub_100024c9
sub_1004caa4
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x60 ]
xor ecx eax
call sub_10025c8d
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10025c8d
mov eax r--data
jmp sub_10029ada
sub_1004cac9
mov eax [ ebp + 0x8 ]
jmp sub_1000139c
sub_1004cad1
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_10025c8d
mov eax r--data
jmp sub_10029ada
sub_1004caec
mov eax [ ebp + 0x8 ]
jmp sub_10001323
sub_1004caf4
mov ecx [ ebp + 0x8 ]
add ecx 0x18
jmp sub_100024c9
sub_1004caff
mov ecx [ ebp + 0x8 ]
add ecx 0x38
jmp sub_100024c9
sub_1004cb0a
mov ecx [ ebp + 0x8 ]
add ecx 0x54
jmp sub_10001c95
sub_1004cb15
mov ecx [ ebp + 0x8 ]
add ecx 0x70
jmp sub_10001c95
sub_1004cb20
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_10025c8d
mov eax r--data
jmp sub_10029ada
sub_1004cb3b
push [ ebp - 0x10 ]
push [ ebp - 0x14 ]
call sub_1002360a
pop ecx
pop ecx
retn
sub_1004cb49
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_10025c8d
mov eax r--data
jmp sub_10029ada
sub_1004cb64
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_10025c8d
mov eax r--data
jmp sub_10029ada
sub_1004cb7f
lea ecx [ ebp - 0x2c ]
jmp sub_10001c95
sub_1004cb87
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x30 ]
xor ecx eax
call sub_10025c8d
mov eax r--data
jmp sub_10029ada
sub_1004cba2
lea eax [ ebp - 0x20 ]
jmp sub_100085f0
sub_1004cbaa
lea eax [ ebp - 0x18 ]
jmp sub_100085f0
sub_1004cbb2
mov eax [ ebp - 0x10 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x10 ] 0xfffffffe
mov ecx [ ebp + 0xc ]
jmp sub_100024c9
sub_1004cbcb
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x24 ]
xor ecx eax
call sub_10025c8d
mov eax r--data
jmp sub_10029ada
sub_1004cbe6
lea eax [ ebp + 0x10 ]
jmp sub_100085f0
sub_1004cbee
mov eax [ ebp + 0x8 ]
add eax 0x4
jmp sub_100085f0
sub_1004cbf9
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_10025c8d
mov eax r--data
jmp sub_10029ada
sub_1004cc14
mov eax [ ebp + 0x8 ]
add eax 0x4
jmp sub_100085f0
sub_1004cc1f
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_10025c8d
mov eax r--data
jmp sub_10029ada
sub_1004cc3a
lea ecx [ ebp - 0x2c ]
jmp sub_10001c95
sub_1004cc42
lea ecx [ ebp - 0x2c ]
jmp sub_10001c95
sub_1004cc4a
lea ecx [ ebp - 0x2c ]
jmp sub_10001c95
sub_1004cc52
lea ecx [ ebp - 0x48 ]
jmp sub_10001c95
sub_1004cc5a
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x74 ]
xor ecx eax
call sub_10025c8d
mov eax r--data
jmp sub_10029ada
sub_1004cc75
mov ecx [ ebp + 0x8 ]
jmp sub_10012b1d
sub_1004cc7d
mov ecx [ ebp + 0x8 ]
add ecx 0x4
jmp sub_10001c95
sub_1004cc88
mov ecx [ ebp + 0x8 ]
add ecx 0x20
jmp sub_100024c9
sub_1004cc93
mov ecx [ ebp + 0x8 ]
add ecx 0x3c
jmp sub_100024c9
sub_1004cc9e
mov ecx [ ebp + 0x8 ]
add ecx 0x58
jmp sub_100024c9
sub_1004cca9
mov ecx [ ebp + 0x8 ]
add ecx 0x74
jmp sub_100024c9
sub_1004ccb4
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_10025c8d
mov eax r--data
jmp sub_10029ada
sub_1004cccf
lea ecx [ ebp - 0x34 ]
jmp sub_100024c9
sub_1004ccd7
lea ecx [ ebp - 0x50 ]
jmp sub_100024c9
sub_1004ccdf
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x8c ]
xor ecx eax
call sub_10025c8d
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_10025c8d
mov eax r--data
jmp sub_10029ada
sub_1004cd07
lea ecx [ ebp + 0x8 ]
jmp sub_100024c9
sub_1004cd0f
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_10025c8d
mov eax r--data
jmp sub_10029ada
sub_1004cd2a
lea esi [ ebp - 0x4c ]
jmp sub_1000b7c8
sub_1004cd32
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x90 ]
xor ecx eax
call sub_10025c8d
mov eax r--data
jmp sub_10029ada
sub_1004cd50
lea ecx [ ebp - 0x28 ]
jmp sub_10001c95
sub_1004cd58
lea ecx [ ebp - 0x50 ]
jmp sub_1000af38
sub_1004cd60
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x54 ]
xor ecx eax
call sub_10025c8d
mov eax r--data
jmp sub_10029ada
sub_1004cd7b
lea ecx [ ebp - 0x28 ]
jmp sub_10001c95
sub_1004cd83
lea ecx [ ebp - 0x50 ]
jmp sub_1000af38
sub_1004cd8b
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x54 ]
xor ecx eax
call sub_10025c8d
mov eax r--data
jmp sub_10029ada
sub_1004cda6
lea ecx [ ebp - 0x54 ]
jmp sub_10001c95
sub_1004cdae
lea ecx [ ebp - 0x38 ]
call sub_1000af38
retn
sub_1004cdb7
lea esi [ ebp - 0xd0 ]
jmp sub_1000adb7
sub_1004cdc2
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xd4 ]
xor ecx eax
call sub_10025c8d
mov eax r--data
jmp sub_10029ada
sub_1004cde0
lea ecx [ ebp - 0x54 ]
jmp sub_10001c95
sub_1004cde8
lea ecx [ ebp - 0x38 ]
jmp sub_1000af38
sub_1004cdf0
lea esi [ ebp - 0xd0 ]
jmp sub_1000ab2f
sub_1004cdfb
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xd4 ]
xor ecx eax
call sub_10025c8d
mov eax r--data
jmp sub_10029ada
sub_1004ce19
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_10025c8d
mov eax r--data
jmp sub_10029ada
sub_1004ce34
lea ecx [ ebp - 0x2c ]
jmp sub_100024c9
sub_1004ce3c
lea ecx [ ebp - 0x34 ]
jmp sub_10007806
sub_1004ce44
lea ecx [ ebp - 0x6c ]
jmp sub_100024c9
sub_1004ce4c
lea ecx [ ebp - 0x30 ]
jmp sub_10007806
sub_1004ce54
lea ecx [ ebp - 0x50 ]
jmp sub_100024c9
sub_1004ce5c
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x74 ]
xor ecx eax
call sub_10025c8d
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10025c8d
mov eax r--data
jmp sub_10029ada
sub_1004ce81
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_10025c8d
mov eax r--data
jmp sub_10029ada
sub_1004ce9c
lea ecx [ ebp - 0x2c ]
jmp sub_100024c9
sub_1004cea4
lea ecx [ ebp - 0x2c ]
jmp sub_100024c9
sub_1004ceac
lea ecx [ ebp - 0x48 ]
jmp sub_100024c9
sub_1004ceb4
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x50 ]
xor ecx eax
call sub_10025c8d
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10025c8d
mov eax r--data
jmp sub_10029ada
sub_1004ced9
lea ecx [ ebp - 0x30 ]
jmp sub_100024c9
sub_1004cee1
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x3c ]
xor ecx eax
call sub_10025c8d
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_10025c8d
mov eax r--data
jmp sub_10029ada
sub_1004cf06
lea ecx [ ebp - 0x30 ]
jmp sub_100024c9
sub_1004cf0e
lea ecx [ ebp - 0x4c ]
jmp sub_100024c9
sub_1004cf16
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x64 ]
xor ecx eax
call sub_10025c8d
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_10025c8d
mov eax r--data
jmp sub_10029ada
sub_1004cf3b
mov eax [ ebp + 0x8 ]
jmp sub_1000139c
sub_1004cf43
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x24 ]
xor ecx eax
call sub_10025c8d
mov eax r--data
jmp sub_10029ada
sub_1004cf5e
mov eax [ ebp + 0x8 ]
jmp sub_10001323
sub_1004cf66
mov ecx [ ebp + 0x8 ]
add ecx 0x18
jmp sub_100024c9
sub_1004cf71
mov ecx [ ebp + 0x8 ]
add ecx 0x38
jmp sub_100024c9
sub_1004cf7c
mov ecx [ ebp + 0x8 ]
add ecx 0x54
jmp sub_10001c95
sub_1004cf87
mov ecx [ ebp + 0x8 ]
add ecx 0x70
jmp sub_10001c95
sub_1004cf92
mov eax [ ebp + 0x8 ]
add eax 0x8c
jmp sub_10001323
sub_1004cf9f
mov ecx [ ebp + 0x8 ]
add ecx 0xa4
jmp sub_10001c95
sub_1004cfad
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_10025c8d
mov eax r--data
jmp sub_10029ada
sub_1004cfc8
mov eax [ ebp - 0x10 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x10 ] 0xfffffffe
mov edi [ ebp - 0x30 ]
jmp sub_1000253c
sub_1004cfe1
lea ecx [ ebp - 0x2c ]
jmp sub_100024c9
sub_1004cfe9
lea ecx [ ebp - 0x2c ]
jmp sub_100024c9
sub_1004cff1
lea ecx [ ebp - 0x2c ]
jmp sub_100024c9
sub_1004cff9
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x34 ]
xor ecx eax
call sub_10025c8d
mov eax r--data
jmp sub_10029ada
sub_1004d014
lea ecx [ ebp - 0x48 ]
jmp sub_10001c95
sub_1004d01c
lea ecx [ ebp - 0x2c ]
jmp sub_10001c95
sub_1004d024
lea ecx [ ebp - 0xdc ]
jmp sub_10001c95
sub_1004d02f
lea ecx [ ebp - 0xa4 ]
jmp sub_10001c95
sub_1004d03a
lea ecx [ ebp - 0x88 ]
jmp sub_10001c95
sub_1004d045
lea ecx [ ebp - 0xc0 ]
jmp sub_10001c95
sub_1004d050
lea ecx [ ebp - 0x6c ]
jmp sub_10001c95
sub_1004d058
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xe4 ]
xor ecx eax
call sub_10025c8d
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10025c8d
mov eax r--data
jmp sub_10029ada
sub_1004d080
push [ ebp - 0x18 ]
call sub_10025c9c
pop ecx
retn
sub_1004d08a
lea eax [ ebp - 0x20 ]
jmp sub_100085f0
sub_1004d092
lea esi [ ebp - 0x48 ]
jmp sub_100150b3
sub_1004d09a
mov eax [ ebp - 0x14 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x14 ] 0xfffffffe
mov esi [ ebp + 0x8 ]
jmp sub_100150b3
sub_1004d0b3
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x4c ]
xor ecx eax
call sub_10025c8d
mov eax r--data
jmp sub_10029ada
sub_1004d0ce
lea ecx [ ebp - 0x2c ]
jmp sub_10001c95
sub_1004d0d6
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x5c ]
xor ecx eax
call sub_10025c8d
mov eax r--data
jmp sub_10029ada
sub_1004d0f1
lea eax [ ebp + 0x10 ]
jmp sub_100085f0
sub_1004d0f9
lea ecx [ ebp - 0x28 ]
jmp sub_10001c95
sub_1004d101
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x5c ]
xor ecx eax
call sub_10025c8d
mov eax r--data
jmp sub_10029ada
sub_1004d11c
lea ecx [ ebp - 0x40 ]
jmp sub_10001c95
sub_1004d124
push [ ebp - 0x24 ]
call sub_10025c9c
pop ecx
retn
sub_1004d12e
lea eax [ ebp - 0x1c ]
jmp sub_100085f0
sub_1004d136
lea ecx [ ebp - 0x40 ]
jmp sub_10001c95
sub_1004d13e
lea esi [ ebp - 0x94 ]
jmp sub_100150b3
sub_1004d149
mov eax [ ebp - 0x20 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x20 ] 0xfffffffe
mov esi [ ebp + 0xc ]
jmp sub_100150b3
sub_1004d162
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x98 ]
xor ecx eax
call sub_10025c8d
mov eax r--data
jmp sub_10029ada
sub_1004d180
mov ecx [ ebp + 0x8 ]
add ecx 0xc
jmp sub_100024c9
sub_1004d18b
lea ecx [ ebp - 0x30 ]
jmp sub_10001c95
sub_1004d193
lea ecx [ ebp - 0x30 ]
jmp sub_10001c95
sub_1004d19b
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x60 ]
xor ecx eax
call sub_10025c8d
mov eax r--data
jmp sub_10029ada
sub_1004d1b6
mov eax [ ebp - 0x40 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x40 ] 0xfffffffe
mov esi [ ebp - 0x3c ]
jmp sub_10014647
sub_1004d1cf
lea ecx [ ebp - 0x94 ]
jmp sub_100024c9
sub_1004d1da
lea ecx [ ebp - 0xb0 ]
jmp sub_100024c9
sub_1004d1e5
lea ecx [ ebp - 0x38 ]
jmp sub_10014d14
sub_1004d1ed
lea ecx [ ebp - 0x5c ]
jmp sub_100024c9
sub_1004d1f5
lea esi [ ebp - 0xd8 ]
jmp sub_100150b3
sub_1004d200
lea ecx [ ebp - 0x78 ]
jmp sub_100024c9
sub_1004d208
lea ecx [ ebp - 0x5c ]
jmp sub_100024c9
sub_1004d210
lea esi [ ebp - 0xd8 ]
jmp sub_100150b3
sub_1004d21b
lea ecx [ ebp - 0x78 ]
jmp sub_100024c9
sub_1004d223
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xdc ]
xor ecx eax
call sub_10025c8d
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10025c8d
mov eax r--data
jmp sub_10029ada
sub_1004d24b
mov eax [ ebp - 0x1c ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x1c ] 0xfffffffe
mov ecx [ ebp - 0x18 ]
jmp sub_100024c9
sub_1004d264
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x28 ]
xor ecx eax
call sub_10025c8d
mov eax r--data
jmp sub_10029ada
sub_1004d27f
mov ecx [ ebp + 0x8 ]
jmp sub_10012b1d
sub_1004d287
mov ecx [ ebp + 0x8 ]
add ecx 0x4
jmp sub_10001c95
sub_1004d292
mov ecx [ ebp + 0x8 ]
add ecx 0x20
jmp sub_100024c9
sub_1004d29d
mov ecx [ ebp + 0x8 ]
add ecx 0x3c
jmp sub_100024c9
sub_1004d2a8
mov ecx [ ebp + 0x8 ]
add ecx 0x58
jmp sub_100024c9
sub_1004d2b3
mov eax [ ebp + 0x8 ]
add eax 0x74
jmp sub_10001323
sub_1004d2be
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_10025c8d
mov eax r--data
jmp sub_10029ada
sub_1004d2d9
lea ecx [ ebp + 0x8 ]
jmp sub_10007806
sub_1004d2e1
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_10025c8d
mov eax r--data
jmp sub_10029ada
sub_1004d2fc
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_10025c8d
mov eax r--data
jmp sub_10029ada
sub_1004d317
mov eax [ ebp - 0x10 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x10 ] 0xfffffffe
mov ecx [ ebp + 0x8 ]
add ecx 0x54
jmp sub_10007ba6
sub_1004d333
mov ecx [ ebp + 0x8 ]
add ecx 0x4
jmp sub_1001038f
sub_1004d33e
mov ecx [ ebp + 0x8 ]
add ecx 0x4
jmp sub_1000cd25
sub_1004d349
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_10025c8d
mov eax r--data
jmp sub_10029ada
sub_1004d364
mov eax [ ebp - 0x10 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x10 ] 0xfffffffe
mov ecx [ ebp + 0x8 ]
add ecx 0x58
jmp sub_10007ba6
sub_1004d380
mov ecx [ ebp + 0x8 ]
add ecx 0x8
jmp sub_10010554
sub_1004d38b
mov ecx [ ebp + 0x8 ]
add ecx 0x8
jmp sub_1000cd25
sub_1004d396
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_10025c8d
mov eax r--data
jmp sub_10029ada
sub_1004d3b1
lea ecx [ ebp - 0x8c ]
jmp sub_100024c9
sub_1004d3bc
lea ecx [ ebp - 0x3c ]
jmp sub_10014d14
sub_1004d3c4
lea ecx [ ebp - 0xa8 ]
jmp sub_10001c95
sub_1004d3cf
lea esi [ ebp - 0x64 ]
jmp sub_100150b3
sub_1004d3d7
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xd4 ]
xor ecx eax
call sub_10025c8d
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_10025c8d
mov eax r--data
jmp sub_10029ada
sub_1004d3ff
lea ecx [ ebp - 0xa4 ]
jmp sub_100024c9
sub_1004d40a
lea ecx [ ebp - 0x50 ]
jmp sub_100024c9
sub_1004d412
lea ecx [ ebp - 0x2c ]
jmp sub_100024c9
sub_1004d41a
lea ecx [ ebp - 0x88 ]
jmp sub_100024c9
sub_1004d425
lea ecx [ ebp - 0x6c ]
jmp sub_100024c9
sub_1004d42d
lea ecx [ ebp - 0xc0 ]
jmp sub_100024c9
sub_1004d438
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xc8 ]
xor ecx eax
call sub_10025c8d
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10025c8d
mov eax r--data
jmp sub_10029ada
sub_1004d460
lea ecx [ ebp - 0x28 ]
jmp sub_10001c95
sub_1004d468
lea ecx [ ebp - 0x50 ]
jmp sub_10007904
sub_1004d470
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x54 ]
xor ecx eax
call sub_10025c8d
mov eax r--data
jmp sub_10029ada
sub_1004d48b
lea ecx [ ebp - 0x2c ]
jmp sub_100024c9
sub_1004d493
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x30 ]
xor ecx eax
call sub_10025c8d
mov eax r--data
jmp sub_10029ada
sub_1004d4ae
lea ecx [ ebp + 0xc ]
jmp sub_10007806
sub_1004d4b6
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x1c ]
xor ecx eax
call sub_10025c8d
mov eax r--data
jmp sub_10029ada
sub_1004d4d1
mov ecx [ ebp + 0x8 ]
add ecx 0x8
jmp sub_10006fdd
sub_1004d4dc
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_10025c8d
mov eax r--data
jmp sub_10029ada
sub_1004d4f7
lea ecx [ ebp + 0xc ]
jmp sub_100024c9
sub_1004d4ff
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x2c ]
xor ecx eax
call sub_10025c8d
mov eax r--data
jmp sub_10029ada
sub_1004d51a
mov eax [ ebp - 0x10 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x10 ] 0xfffffffe
mov ecx [ ebp + 0x8 ]
add ecx 0x54
jmp sub_10007ba6
sub_1004d536
mov ecx [ ebp + 0x8 ]
add ecx 0xc
jmp sub_10002ffd
sub_1004d541
mov ecx [ ebp - 0x14 ]
jmp sub_10006f48
sub_1004d549
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_10025c8d
mov eax r--data
jmp sub_10029ada
sub_1004d564
lea ecx [ ebp - 0x30 ]
jmp sub_10001c95
sub_1004d56c
push [ ebp - 0x14 ]
call sub_10025c9c
pop ecx
retn
sub_1004d576
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x38 ]
xor ecx eax
call sub_10025c8d
mov eax r--data
jmp sub_10029ada
sub_1004d591
lea ecx [ ebp - 0x28 ]
jmp sub_10001c95
sub_1004d599
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x2c ]
xor ecx eax
call sub_10025c8d
mov eax r--data
jmp sub_10029ada
sub_1004d5b4
lea ecx [ ebp - 0x28 ]
jmp sub_10001c95
sub_1004d5bc
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x30 ]
xor ecx eax
call sub_10025c8d
mov eax r--data
jmp sub_10029ada
sub_1004d5d7
lea ecx [ ebp - 0x30 ]
jmp sub_10001c95
sub_1004d5df
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x34 ]
xor ecx eax
call sub_10025c8d
mov eax r--data
jmp sub_10029ada
sub_1004d5fa
mov ecx [ ebp - 0x10 ]
jmp sub_1001568d
sub_1004d602
lea ecx [ ebp - 0x2c ]
jmp sub_10001c95
sub_1004d60a
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x30 ]
xor ecx eax
call sub_10025c8d
mov eax r--data
jmp sub_10029ada
sub_1004d625
lea ecx [ ebp - 0x54 ]
jmp sub_10001c95
sub_1004d62d
lea ecx [ ebp - 0x2c ]
jmp sub_10001c95
sub_1004d635
lea ecx [ ebp - 0x70 ]
jmp sub_10001c95
sub_1004d63d
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x78 ]
xor ecx eax
call sub_10025c8d
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10025c8d
mov eax r--data
jmp sub_10029ada
sub_1004d662
lea ecx [ ebp - 0x38 ]
jmp sub_10001c95
sub_1004d66a
push [ ebp - 0x1c ]
call sub_10025c9c
pop ecx
retn
sub_1004d674
mov eax [ ebp - 0x18 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x18 ] 0xfffffffe
mov eax [ ebp + 0x8 ]
jmp sub_100085f0
sub_1004d68d
lea ecx [ ebp - 0x54 ]
jmp sub_10001c95
sub_1004d695
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x5c ]
xor ecx eax
call sub_10025c8d
mov eax r--data
jmp sub_10029ada
sub_1004d6b0
lea ecx [ ebp - 0x2c ]
jmp sub_10001c95
sub_1004d6b8
lea ecx [ ebp - 0x48 ]
jmp sub_10001c95
sub_1004d6c0
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x50 ]
xor ecx eax
call sub_10025c8d
mov eax r--data
jmp sub_10029ada
sub_1004d6db
lea ecx [ ebp - 0x28 ]
jmp sub_10001c95
sub_1004d6e3
lea ecx [ ebp - 0x44 ]
jmp sub_10001c95
sub_1004d6eb
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x48 ]
xor ecx eax
call sub_10025c8d
mov eax r--data
jmp sub_10029ada
sub_1004d706
lea ecx [ ebp - 0x90 ]
jmp sub_10001c95
sub_1004d711
lea ecx [ ebp - 0x30 ]
jmp sub_100024c9
sub_1004d719
lea ecx [ ebp - 0x90 ]
jmp sub_10001c95
sub_1004d724
lea ecx [ ebp - 0x74 ]
jmp sub_10001c95
sub_1004d72c
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x9c ]
mov ecx [ edx - 0xa0 ]
xor ecx eax
call sub_10025c8d
add eax 0xc
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_10025c8d
mov eax r--data
jmp sub_10029ada
sub_1004d75a
lea ecx [ ebp - 0x288 ]
jmp sub_10001c95
sub_1004d765
lea ecx [ ebp - 0x26c ]
jmp sub_10001c95
sub_1004d770
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x28c ]
mov ecx [ edx - 0x290 ]
xor ecx eax
call sub_10025c8d
add eax 0x8
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_10025c8d
mov eax r--data
jmp sub_10029ada
sub_1004d79e
lea ecx [ ebp - 0x90 ]
jmp sub_10001c95
sub_1004d7a9
lea ecx [ ebp - 0x30 ]
jmp sub_100024c9
sub_1004d7b1
lea ecx [ ebp - 0x90 ]
jmp sub_10001c95
sub_1004d7bc
lea ecx [ ebp - 0x74 ]
jmp sub_10001c95
sub_1004d7c4
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x9c ]
mov ecx [ edx - 0xa0 ]
xor ecx eax
call sub_10025c8d
add eax 0x8
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_10025c8d
mov eax r--data
jmp sub_10029ada
sub_1004d7f2
lea ecx [ ebp - 0x23c ]
jmp sub_10001c95
sub_1004d7fd
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x240 ]
xor ecx eax
call sub_10025c8d
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10025c8d
mov eax r--data
jmp sub_10029ada
sub_1004d825
lea ecx [ ebp - 0x30 ]
jmp sub_10001c95
sub_1004d82d
lea ecx [ ebp - 0x4c ]
jmp sub_10001c95
sub_1004d835
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x54 ]
xor ecx eax
call sub_10025c8d
mov eax r--data
jmp sub_10029ada
sub_1004d850
lea ecx [ ebp - 0x28 ]
jmp sub_100024c9
sub_1004d858
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x2c ]
xor ecx eax
call sub_10025c8d
mov eax r--data
jmp sub_10029ada
sub_1004d873
lea ecx [ ebp - 0x44 ]
jmp sub_10001c95
sub_1004d87b
lea ecx [ ebp - 0x28 ]
jmp sub_10001c95
sub_1004d883
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x70 ]
xor ecx eax
call sub_10025c8d
mov eax r--data
jmp sub_10029ada
sub_1004d89e
lea ecx [ ebp - 0x28 ]
jmp sub_10001c95
sub_1004d8a6
lea ecx [ ebp - 0x44 ]
jmp sub_10001c95
sub_1004d8ae
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x4c ]
xor ecx eax
call sub_10025c8d
mov eax r--data
jmp sub_10029ada
sub_1004d8c9
lea ecx [ ebp - 0x3c ]
jmp sub_10001c95
sub_1004d8d1
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x40 ]
xor ecx eax
call sub_10025c8d
mov eax r--data
jmp sub_10029ada
sub_1004d8ec
mov eax [ ebp - 0x10 ]
jmp sub_100085f0
sub_1004d8f4
lea ecx [ ebp - 0x2c ]
jmp sub_100024c9
sub_1004d8fc
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x30 ]
xor ecx eax
call sub_10025c8d
mov eax r--data
jmp sub_10029ada
sub_1004d917
lea ecx [ ebp - 0x70 ]
jmp sub_10001c95
sub_1004d91f
lea ecx [ ebp - 0x54 ]
jmp sub_10001c95
sub_1004d927
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x6c ]
mov ecx [ edx - 0x70 ]
xor ecx eax
call sub_10025c8d
mov eax r--data
jmp sub_10029ada
sub_1004d942
lea ecx [ ebp - 0x74 ]
jmp sub_100024c9
sub_1004d94a
lea ecx [ ebp - 0x90 ]
jmp sub_100024c9
sub_1004d955
lea ecx [ ebp - 0x3c ]
jmp sub_10014d14
sub_1004d95d
lea ecx [ ebp - 0x58 ]
jmp sub_100024c9
sub_1004d965
lea esi [ ebp - 0xb8 ]
jmp sub_100150b3
sub_1004d970
lea ecx [ ebp - 0x58 ]
jmp sub_100024c9
sub_1004d978
lea esi [ ebp - 0xb8 ]
jmp sub_100150b3
sub_1004d983
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xbc ]
xor ecx eax
call sub_10025c8d
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10025c8d
mov eax r--data
jmp sub_10029ada
sub_1004d9ab
lea ecx [ ebp - 0x2d4 ]
jmp sub_100024c9
sub_1004d9b6
lea ecx [ ebp - 0x4c ]
jmp sub_100024c9
sub_1004d9be
lea ecx [ ebp - 0x2f0 ]
jmp sub_100024c9
sub_1004d9c9
lea ecx [ ebp - 0x30 ]
jmp sub_100024c9
sub_1004d9d1
mov eax [ ebp - 0x2a0 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x2a0 ] 0xfffffffe
mov eax [ ebp - 0x2b4 ]
jmp sub_100085f0
sub_1004d9f3
push [ ebp - 0x2ac ]
call sub_10025c9c
pop ecx
retn
sub_1004da00
mov eax [ ebp - 0x2a0 ]
and eax 0x2
je r-xdata
retn
and [ ebp - 0x2a0 ] 0xfffffffd
lea ecx [ ebp - 0x2d4 ]
jmp sub_100024c9
sub_1004da22
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x2f4 ]
xor ecx eax
call sub_10025c8d
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10025c8d
mov eax r--data
jmp sub_10029ada
sub_1004da4a
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_10025c8d
mov eax r--data
jmp sub_10029ada
sub_1004da65
push [ ebp - 0x10 ]
call sub_10025c9c
pop ecx
retn
sub_1004da6f
lea eax [ ebp - 0x1c ]
jmp sub_100085f0
sub_1004da77
lea ecx [ ebp - 0x38 ]
jmp sub_10001c95
sub_1004da7f
lea ecx [ ebp - 0x54 ]
jmp sub_10001c95
sub_1004da87
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x58 ]
xor ecx eax
call sub_10025c8d
mov eax r--data
jmp sub_10029ada
sub_1004daa2
mov ecx [ ebp + 0x8 ]
add ecx 0x8
jmp sub_10010554
sub_1004daad
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_10025c8d
mov eax r--data
jmp sub_10029ada
sub_1004dac8
mov eax [ ebp - 0x10 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x10 ] 0xfffffffe
mov ecx [ ebp + 0x8 ]
add ecx 0x54
jmp sub_10007ba6
sub_1004dae4
mov ecx [ ebp + 0x8 ]
add ecx 0xc
jmp sub_10011769
sub_1004daef
mov ecx [ ebp - 0x14 ]
jmp sub_100104f5
sub_1004daf7
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_10025c8d
mov eax r--data
jmp sub_10029ada
sub_1004db12
lea eax [ ebp - 0x18 ]
jmp sub_100085f0
sub_1004db1a
mov edx [ esp + 0x8 ]
lea eax [ edx - 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_10025c8d
mov eax r--data
jmp sub_10029ada
sub_1004db35
lea ecx [ ebp - 0x30 ]
jmp sub_10017355
sub_1004db3d
lea ecx [ ebp - 0x4c ]
jmp sub_10001c95
sub_1004db45
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x50 ]
xor ecx eax
call sub_10025c8d
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10025c8d
mov eax r--data
jmp sub_10029ada
sub_1004db6a
lea ecx [ ebp - 0x30 ]
jmp sub_10001c95
sub_1004db72
lea ecx [ ebp - 0x4c ]
jmp sub_10001c95
sub_1004db7a
lea ecx [ ebp - 0x68 ]
jmp sub_10001c95
sub_1004db82
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x6c ]
mov ecx [ edx - 0x70 ]
xor ecx eax
call sub_10025c8d
add eax 0x8
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_10025c8d
mov eax r--data
jmp sub_10029ada
sub_1004dbaa
lea ecx [ ebp - 0x48 ]
jmp sub_10001c95
sub_1004dbb2
lea ecx [ ebp - 0x64 ]
jmp sub_10001c95
sub_1004dbba
lea ecx [ ebp - 0x2c ]
jmp sub_10001c95
sub_1004dbc2
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x70 ]
xor ecx eax
call sub_10025c8d
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10025c8d
mov eax r--data
jmp sub_10029ada
sub_1004dbe7
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_10025c8d
mov eax r--data
jmp sub_10029ada
sub_1004dc02
lea ecx [ ebp + 0xc ]
jmp sub_10007806
sub_1004dc0a
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_10025c8d
mov eax r--data
jmp sub_10029ada
sub_1004dc25
lea ecx [ ebp - 0x88 ]
jmp sub_100024c9
sub_1004dc30
lea ecx [ ebp - 0x68 ]
jmp sub_10014d14
sub_1004dc38
lea esi [ ebp - 0x40 ]
jmp sub_100150b3
sub_1004dc40
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x8c ]
xor ecx eax
call sub_10025c8d
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_10025c8d
mov eax r--data
jmp sub_10029ada
sub_1004dc68
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_10025c8d
mov eax r--data
jmp sub_10029ada
sub_1004dc83
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_10025c8d
mov eax r--data
jmp sub_10029ada
sub_1004dc9e
lea ecx [ ebp - 0x248 ]
jmp sub_10014ac2
sub_1004dca9
lea ecx [ ebp - 0x274 ]
jmp sub_100024c9
sub_1004dcb4
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x278 ]
xor ecx eax
call sub_10025c8d
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10025c8d
mov eax r--data
jmp sub_10029ada
sub_1004dcdc
lea ecx [ ebp + 0xc ]
jmp sub_10007806
sub_1004dce4
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_10025c8d
mov eax r--data
jmp sub_10029ada
sub_1004dcff
lea ecx [ ebp - 0x64 ]
jmp sub_10001c95
sub_1004dd07
lea ecx [ ebp - 0x64 ]
jmp sub_10001c95
sub_1004dd0f
lea ecx [ ebp - 0x20 ]
jmp sub_1001568d
sub_1004dd17
lea ecx [ ebp - 0x48 ]
jmp sub_10001c95
sub_1004dd1f
lea ecx [ ebp - 0x64 ]
jmp sub_10001c95
sub_1004dd27
lea ecx [ ebp - 0x64 ]
jmp sub_10001c95
sub_1004dd2f
lea ecx [ ebp - 0x48 ]
jmp sub_10001c95
sub_1004dd37
lea ecx [ ebp - 0x2c ]
jmp sub_10014ac2
sub_1004dd3f
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x90 ]
xor ecx eax
call sub_10025c8d
mov eax r--data
jmp sub_10029ada
sub_1004dd5d
lea ecx [ ebp - 0x30 ]
jmp sub_10001c95
sub_1004dd65
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x38 ]
xor ecx eax
call sub_10025c8d
mov eax r--data
jmp sub_10029ada
sub_1004dd80
lea ecx [ ebp - 0x2c ]
jmp sub_10001c95
sub_1004dd88
lea ecx [ ebp - 0x48 ]
jmp sub_10001c95
sub_1004dd90
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x74 ]
xor ecx eax
call sub_10025c8d
mov eax r--data
jmp sub_10029ada
sub_1004ddab
lea ecx [ ebp - 0x2c ]
jmp sub_10001c95
sub_1004ddb3
lea ecx [ ebp - 0x48 ]
call sub_10001c95
retn
sub_1004ddbc
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x74 ]
xor ecx eax
call sub_10025c8d
mov eax r--data
jmp sub_10029ada
sub_1004ddd7
mov eax [ ebp - 0x10 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x10 ] 0xfffffffe
mov eax [ ebp + 0xc ]
jmp sub_100085f0
sub_1004ddf0
lea eax [ ebp - 0x18 ]
jmp sub_100085f0
sub_1004ddf8
lea eax [ ebp - 0x18 ]
jmp sub_100085f0
sub_1004de00
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x1c ]
xor ecx eax
call sub_10025c8d
mov eax r--data
jmp sub_10029ada
sub_1004de1b
mov ecx [ ebp + 0x8 ]
add ecx 0x4
jmp sub_100024c9
sub_1004de26
mov eax [ ebp + 0x8 ]
add eax 0x3c
jmp sub_100085f0
sub_1004de31
lea eax [ ebp - 0x18 ]
jmp sub_100085f0
sub_1004de39
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x1c ]
xor ecx eax
call sub_10025c8d
mov eax r--data
jmp sub_10029ada
sub_1004de54
mov ecx [ ebp - 0x14 ]
jmp sub_10014ac2
sub_1004de5c
lea ecx [ ebp - 0x30 ]
jmp sub_10001c95
sub_1004de64
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x34 ]
xor ecx eax
call sub_10025c8d
mov eax r--data
jmp sub_10029ada
sub_1004de7f
lea eax [ ebp + 0x8 ]
jmp sub_100085f0
sub_1004de87
lea ecx [ ebp - 0x28 ]
jmp sub_10001c95
sub_1004de8f
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x54 ]
xor ecx eax
call sub_10025c8d
mov eax r--data
jmp sub_10029ada
sub_1004deaa
lea eax [ ebp - 0x20 ]
jmp sub_10006fec
sub_1004deb2
lea ecx [ ebp - 0x18 ]
jmp sub_10007806
sub_1004deba
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x34 ]
xor ecx eax
call sub_10025c8d
mov eax r--data
jmp sub_10029ada
sub_1004ded5
lea eax [ ebp - 0x24 ]
push eax
call sub_10010a9e
retn
sub_1004dedf
lea ecx [ ebp - 0x18 ]
jmp sub_10007806
sub_1004dee7
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x30 ]
xor ecx eax
call sub_10025c8d
mov eax r--data
jmp sub_10029ada
sub_1004df02
lea eax [ ebp - 0x10c ]
jmp sub_1000c6c4
sub_1004df0d
lea ecx [ ebp - 0x30 ]
jmp sub_10001c95
sub_1004df15
lea ecx [ ebp - 0x30 ]
jmp sub_10001c95
sub_1004df1d
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x110 ]
xor ecx eax
call sub_10025c8d
mov eax r--data
jmp sub_10029ada
sub_1004df3b
lea eax [ ebp - 0x114 ]
jmp sub_1000c5dd
sub_1004df46
lea ecx [ ebp - 0x30 ]
jmp sub_10001c95
sub_1004df4e
lea ecx [ ebp - 0x30 ]
jmp sub_10001c95
sub_1004df56
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x118 ]
xor ecx eax
call sub_10025c8d
mov eax r--data
jmp sub_10029ada
sub_1004df74
lea ecx [ ebp + 0x8c ]
jmp sub_100024c9
sub_1004df7f
lea ecx [ ebp + 0x70 ]
jmp sub_100024c9
sub_1004df87
lea ecx [ ebp - 0x2c ]
jmp sub_100024c9
sub_1004df8f
lea ecx [ ebp + 0x54 ]
jmp sub_100024c9
sub_1004df97
lea ecx [ ebp - 0x48 ]
jmp sub_100024c9
sub_1004df9f
lea ecx [ ebp + 0x38 ]
jmp sub_100024c9
sub_1004dfa7
lea ecx [ ebp - 0x64 ]
jmp sub_100024c9
sub_1004dfaf
lea ecx [ ebp + 0x1c ]
jmp sub_100024c9
sub_1004dfb7
lea ecx [ ebp - 0x2c ]
jmp sub_100024c9
sub_1004dfbf
lea ecx [ ebp - 0x48 ]
jmp sub_100024c9
sub_1004dfc7
lea ecx [ ebp ]
jmp sub_100024c9
sub_1004dfcf
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x68 ]
xor ecx eax
call sub_10025c8d
mov ecx [ edx + 0xb4 ]
xor ecx eax
call sub_10025c8d
mov eax r--data
jmp sub_10029ada
sub_1004dff7
lea ecx [ ebp - 0x68 ]
jmp sub_100024c9
sub_1004dfff
lea ecx [ ebp - 0x4c ]
jmp sub_100024c9
sub_1004e007
lea ecx [ ebp - 0x30 ]
jmp sub_100024c9
sub_1004e00f
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x64 ]
mov ecx [ edx - 0x68 ]
xor ecx eax
call sub_10025c8d
add eax 0x4
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_10025c8d
mov eax r--data
jmp sub_10029ada
sub_1004e037
lea ecx [ ebp - 0x54 ]
jmp sub_10001c95
sub_1004e03f
push [ ebp - 0x58 ]
call sub_10025c9c
pop ecx
retn
sub_1004e049
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x54 ]
mov ecx [ edx - 0x58 ]
xor ecx eax
call sub_10025c8d
mov eax r--data
jmp sub_10029ada
sub_1004e064
mov eax [ ebp + 0x8 ]
jmp sub_10006fec
sub_1004e06c
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_10025c8d
mov eax r--data
jmp sub_10029ada
sub_1004e087
lea eax [ ebp - 0x1c ]
jmp sub_10006fec
sub_1004e08f
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x20 ]
xor ecx eax
call sub_10025c8d
mov eax r--data
jmp sub_10029ada
sub_1004e0aa
lea eax [ ebp - 0x24 ]
jmp sub_10006fec
sub_1004e0b2
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x28 ]
xor ecx eax
call sub_10025c8d
mov eax r--data
jmp sub_10029ada
sub_1004e0cd
lea eax [ ebp - 0x20 ]
jmp sub_10006fec
sub_1004e0d5
lea ecx [ ebp - 0x18 ]
jmp sub_10007806
sub_1004e0dd
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x34 ]
xor ecx eax
call sub_10025c8d
mov eax r--data
jmp sub_10029ada
sub_1004e0f8
mov ecx [ ebp + 0x8 ]
jmp sub_1001537a
sub_1004e100
lea ecx [ ebp - 0x28 ]
jmp sub_10001c95
sub_1004e108
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x30 ]
xor ecx eax
call sub_10025c8d
mov eax r--data
jmp sub_10029ada
sub_1004e123
mov ecx [ ebp - 0x10 ]
jmp sub_10009970
sub_1004e12b
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_10025c8d
mov eax r--data
jmp sub_10029ada
sub_1004e146
lea eax [ ebp - 0x28 ]
push eax
call sub_10010a9e
retn
sub_1004e150
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x2c ]
xor ecx eax
call sub_10025c8d
mov eax r--data
jmp sub_10029ada
sub_1004e16b
lea ecx [ ebp - 0x58 ]
jmp sub_10001c95
sub_1004e173
lea ecx [ ebp - 0x74 ]
jmp sub_100024c9
sub_1004e17b
lea ecx [ ebp - 0x30 ]
jmp sub_100024c9
sub_1004e183
lea ecx [ ebp - 0x58 ]
jmp sub_100024c9
sub_1004e18b
mov eax [ ebp - 0x38 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x38 ] 0xfffffffe
mov ecx [ ebp - 0x3c ]
jmp sub_100024c9
sub_1004e1a4
lea eax [ ebp - 0x124 ]
jmp sub_1000c6c4
sub_1004e1af
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x128 ]
xor ecx eax
call sub_10025c8d
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10025c8d
mov eax r--data
jmp sub_10029ada
sub_1004e1d7
mov ecx [ ebp - 0x10 ]
jmp sub_10009970
sub_1004e1df
mov ecx [ ebp - 0x10 ]
add ecx 0x18
jmp sub_100024c9
sub_1004e1ea
mov ecx [ ebp - 0x10 ]
add ecx 0x34
jmp sub_100024c9
sub_1004e1f5
mov eax [ ebp - 0x10 ]
add eax 0x54
jmp sub_100085f0
sub_1004e200
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_10025c8d
mov eax r--data
jmp sub_10029ada
sub_1004e21b
mov ecx [ ebp + 0x8 ]
jmp sub_10009970
sub_1004e223
mov ecx [ ebp + 0x8 ]
add ecx 0x18
jmp sub_100024c9
sub_1004e22e
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_10025c8d
mov eax r--data
jmp sub_10029ada
sub_1004e249
lea eax [ ebp - 0x1c ]
jmp sub_10006fec
sub_1004e251
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x20 ]
xor ecx eax
call sub_10025c8d
mov eax r--data
jmp sub_10029ada
sub_1004e26c
lea eax [ ebp - 0x1c ]
push eax
call sub_10010a9e
retn
sub_1004e276
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x20 ]
xor ecx eax
call sub_10025c8d
mov eax r--data
jmp sub_10029ada
sub_1004e291
lea ecx [ ebp - 0x9c ]
jmp sub_10001c95
sub_1004e29c
mov eax [ ebp - 0xf0 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0xf0 ] 0xfffffffe
mov eax [ ebp - 0xc0 ]
jmp sub_100085f0
sub_1004e2be
lea ecx [ ebp - 0x80 ]
jmp sub_10001c95
sub_1004e2c6
lea ecx [ ebp - 0x2c ]
jmp sub_10001c95
sub_1004e2ce
lea ecx [ ebp - 0x48 ]
jmp sub_10001c95
sub_1004e2d6
lea ecx [ ebp - 0x64 ]
jmp sub_10001c95
sub_1004e2de
lea eax [ ebp - 0x178 ]
jmp sub_10010b74
sub_1004e2e9
lea ecx [ ebp - 0xb8 ]
jmp sub_10001c95
sub_1004e2f4
lea ecx [ ebp - 0x194 ]
jmp sub_10001c95
sub_1004e2ff
push [ ebp - 0xec ]
call sub_10025c9c
pop ecx
retn
sub_1004e30c
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x1c0 ]
xor ecx eax
call sub_10025c8d
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10025c8d
mov eax r--data
jmp sub_10029ada
sub_1004e334
lea eax [ ebp - 0x24 ]
push eax
call sub_10010a9e
retn
sub_1004e33e
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x28 ]
xor ecx eax
call sub_10025c8d
mov eax r--data
jmp sub_10029ada
sub_1004e359
lea eax [ ebp - 0x20 ]
push eax
call sub_10010a9e
retn
sub_1004e363
lea ecx [ ebp - 0x18 ]
jmp sub_10007806
sub_1004e36b
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x2c ]
xor ecx eax
call sub_10025c8d
mov eax r--data
jmp sub_10029ada
sub_1004e386
lea eax [ ebp - 0x28 ]
push eax
call sub_10010a9e
retn
sub_1004e390
lea ecx [ ebp - 0x1c ]
jmp sub_10007806
sub_1004e398
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x34 ]
xor ecx eax
call sub_10025c8d
mov eax r--data
jmp sub_10029ada
sub_1004e3b3
lea eax [ ebp - 0x20 ]
push eax
call sub_10010a9e
retn
sub_1004e3bd
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x24 ]
xor ecx eax
call sub_10025c8d
mov eax r--data
jmp sub_10029ada
sub_1004e3d8
lea eax [ ebp - 0x28 ]
push eax
call sub_10010a9e
retn
sub_1004e3e2
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x2c ]
xor ecx eax
call sub_10025c8d
mov eax r--data
jmp sub_10029ada
sub_1004e3fd
lea eax [ ebp - 0x20 ]
push eax
call sub_10010a9e
retn
sub_1004e407
lea ecx [ ebp - 0x18 ]
jmp sub_10007806
sub_1004e40f
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x2c ]
xor ecx eax
call sub_10025c8d
mov eax r--data
jmp sub_10029ada
sub_1004e42a
mov ecx [ ebp - 0x10 ]
jmp sub_10009970
sub_1004e432
mov edi [ ebp - 0x10 ]
add edi 0x18
jmp sub_1000253c
sub_1004e43d
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_10025c8d
mov eax r--data
jmp sub_10029ada
sub_1004e458
lea eax [ ebp - 0x58 ]
jmp sub_100085f0
sub_1004e460
lea ecx [ ebp - 0x30 ]
jmp sub_10001c95
sub_1004e468
lea ecx [ ebp - 0x4c ]
jmp sub_10001c95
sub_1004e470
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x5c ]
mov ecx [ edx - 0x60 ]
xor ecx eax
call sub_10025c8d
add eax 0xc
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_10025c8d
mov eax r--data
jmp sub_10029ada
sub_1004e498
lea eax [ ebp - 0x34 ]
jmp sub_100085f0
sub_1004e4a0
lea ecx [ ebp - 0x2c ]
jmp sub_10001c95
sub_1004e4a8
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x3c ]
mov ecx [ edx - 0x40 ]
xor ecx eax
call sub_10025c8d
mov eax r--data
jmp sub_10029ada
sub_1004e4c3
mov ecx [ ebp - 0x10 ]
jmp sub_100097b6
sub_1004e4cb
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_10025c8d
mov eax r--data
jmp sub_10029ada
sub_1004e4e6
lea ecx [ ebp - 0xbc ]
jmp sub_100024c9
sub_1004e4f1
lea ecx [ ebp - 0x30 ]
jmp sub_100024c9
sub_1004e4f9
lea ecx [ ebp - 0x68 ]
jmp sub_100024c9
sub_1004e501
lea ecx [ ebp - 0xbc ]
jmp sub_100024c9
sub_1004e50c
lea ecx [ ebp - 0xc4 ]
jmp sub_100097b6
sub_1004e517
lea ecx [ ebp - 0x4c ]
jmp sub_100024c9
sub_1004e51f
lea ecx [ ebp - 0x84 ]
jmp sub_100024c9
sub_1004e52a
lea ecx [ ebp - 0xa0 ]
jmp sub_100024c9
sub_1004e535
mov edx [ esp + 0x8 ]
lea eax [ edx - 0xc4 ]
mov ecx [ edx - 0xc8 ]
xor ecx eax
call sub_10025c8d
add eax 0xc
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_10025c8d
mov eax r--data
jmp sub_10029ada
sub_1004e563
lea ecx [ ebp - 0x30 ]
jmp sub_100024c9
sub_1004e56b
lea eax [ ebp - 0x40 ]
jmp sub_100085f0
sub_1004e573
mov eax [ ebp - 0x34 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x34 ] 0xfffffffe
mov eax [ ebp - 0x44 ]
jmp sub_100085f0
sub_1004e58c
push [ ebp - 0x38 ]
call sub_10025c9c
pop ecx
retn
sub_1004e596
mov eax [ ebp - 0x34 ]
and eax 0x2
je r-xdata
retn
and [ ebp - 0x34 ] 0xfffffffd
lea ecx [ ebp - 0x60 ]
jmp sub_10001c95
sub_1004e5af
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x64 ]
xor ecx eax
call sub_10025c8d
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10025c8d
mov eax r--data
jmp sub_10029ada
sub_1004e5d4
mov ecx [ ebp - 0x10 ]
jmp sub_10009970
sub_1004e5dc
mov edi [ ebp - 0x10 ]
add edi 0x18
jmp sub_1000253c
sub_1004e5e7
mov ecx [ ebp - 0x10 ]
add ecx 0xf4
jmp sub_100099d6
sub_1004e5f5
mov ecx [ ebp - 0x10 ]
add ecx 0x118
jmp sub_100099d6
sub_1004e603
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_10025c8d
mov eax r--data
jmp sub_10029ada
sub_1004e61e
mov ecx [ ebp + 0x8 ]
jmp sub_10009970
sub_1004e626
mov edi [ ebp + 0x8 ]
add edi 0x18
jmp sub_1000253c
sub_1004e631
lea ecx [ ebp - 0x2c ]
jmp sub_100024c9
sub_1004e639
mov ecx [ ebp + 0x8 ]
add ecx 0xf4
jmp sub_100099d6
sub_1004e647
lea ecx [ ebp - 0x48 ]
jmp sub_100024c9
sub_1004e64f
mov ecx [ ebp + 0x8 ]
add ecx 0x118
jmp sub_100099d6
sub_1004e65d
mov ecx [ ebp - 0x10 ]
jmp sub_10009970
sub_1004e665
mov edi [ ebp - 0x10 ]
add edi 0x18
jmp sub_1000253c
sub_1004e670
mov ecx [ ebp + 0xc ]
jmp sub_10009970
sub_1004e678
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x4c ]
xor ecx eax
call sub_10025c8d
mov eax r--data
jmp sub_10029ada
sub_1004e693
lea ecx [ ebp - 0x2c ]
jmp sub_100024c9
sub_1004e69b
lea ecx [ ebp - 0x54 ]
jmp sub_10001c95
sub_1004e6a3
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x68 ]
xor ecx eax
call sub_10025c8d
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10025c8d
mov eax r--data
jmp sub_10029ada
sub_1004e6c8
lea edi [ ebp - 0xec ]
jmp sub_1000253c
sub_1004e6d3
push [ ebp - 0xf0 ]
call sub_10025c9c
pop ecx
retn
sub_1004e6e0
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xf4 ]
xor ecx eax
call sub_10025c8d
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10025c8d
mov eax r--data
jmp sub_10029ada
sub_1004e708
lea ecx [ ebp - 0x858 ]
jmp sub_10001c95
sub_1004e713
lea ecx [ ebp - 0x83c ]
jmp sub_10021e50
sub_1004e71e
lea ecx [ ebp - 0x858 ]
jmp sub_10001c95
sub_1004e729
mov eax [ ebp - 0x820 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x820 ] 0xfffffffe
mov esi [ ebp - 0x824 ]
jmp sub_10014647
sub_1004e74b
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x884 ]
xor ecx eax
call sub_10025c8d
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10025c8d
mov eax r--data
jmp sub_10029ada
sub_1004e773
lea ecx [ ebp - 0x18 ]
jmp sub_1001568d
sub_1004e77b
lea ecx [ ebp - 0x3c ]
jmp sub_100024c9
sub_1004e783
lea eax [ ebp - 0x20 ]
jmp sub_100085f0
sub_1004e78b
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x40 ]
xor ecx eax
call sub_10025c8d
mov eax r--data
jmp sub_10029ada
sub_1004e7a6
lea eax [ ebp - 0xdc ]
jmp sub_1000c6c4
sub_1004e7b1
lea ecx [ ebp - 0x2c ]
jmp sub_10001c95
sub_1004e7b9
lea ecx [ ebp - 0x2c ]
jmp sub_10001c95
sub_1004e7c1
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xe0 ]
xor ecx eax
call sub_10025c8d
mov eax r--data
jmp sub_10029ada
sub_1004e7df
mov eax [ ebp + 0x4c ]
and eax 0x1
je r-xdata
retn
and [ ebp + 0x4c ] 0xfffffffe
mov ecx [ ebp + 0x44 ]
jmp sub_10001c95
sub_1004e7f8
lea eax [ ebp - 0x98 ]
jmp sub_1000c5dd
sub_1004e803
lea ecx [ ebp + 0x28 ]
jmp sub_10001c95
sub_1004e80b
lea ecx [ ebp + 0x28 ]
jmp sub_10001c95
sub_1004e813
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x9c ]
xor ecx eax
call sub_10025c8d
mov eax r--data
jmp sub_10029ada
sub_1004e831
lea ecx [ ebp - 0x7c ]
jmp sub_10001c95
sub_1004e839
lea esi [ ebp - 0x50 ]
jmp sub_10014647
sub_1004e841
lea esi [ ebp - 0xb4 ]
jmp sub_10014647
sub_1004e84c
lea ecx [ ebp - 0x7c ]
jmp sub_10001c95
sub_1004e854
lea esi [ ebp - 0xb4 ]
jmp sub_10014647
sub_1004e85f
lea ecx [ ebp - 0x98 ]
jmp sub_10001c95
sub_1004e86a
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x130 ]
xor ecx eax
call sub_10025c8d
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_10025c8d
mov eax r--data
jmp sub_10029ada
sub_1004e892
lea ecx [ ebp - 0xf0 ]
jmp sub_10001c95
sub_1004e89d
lea ecx [ ebp - 0x64 ]
jmp sub_100024c9
sub_1004e8a5
lea ecx [ ebp - 0x48 ]
jmp sub_100024c9
sub_1004e8ad
lea ecx [ ebp - 0xd4 ]
jmp sub_100024c9
sub_1004e8b8
lea ecx [ ebp - 0xb8 ]
jmp sub_100024c9
sub_1004e8c3
lea ecx [ ebp - 0x90 ]
jmp sub_10017752
sub_1004e8ce
lea ecx [ ebp - 0x10c ]
jmp sub_100024c9
sub_1004e8d9
lea ecx [ ebp - 0x188 ]
jmp sub_100024c9
sub_1004e8e4
lea ecx [ ebp - 0x80 ]
jmp sub_100024c9
sub_1004e8ec
lea ecx [ ebp - 0xf0 ]
jmp sub_100024c9
sub_1004e8f7
lea ecx [ ebp - 0x128 ]
jmp sub_100024c9
sub_1004e902
lea ecx [ ebp - 0xb8 ]
jmp sub_100024c9
sub_1004e90d
lea ecx [ ebp - 0xd4 ]
jmp sub_100024c9
sub_1004e918
lea ecx [ ebp - 0x144 ]
jmp sub_100024c9
sub_1004e923
lea ecx [ ebp - 0x16c ]
jmp sub_100024c9
sub_1004e92e
lea ecx [ ebp - 0x88 ]
jmp sub_100177fd
sub_1004e939
lea eax [ ebp - 0x210 ]
jmp sub_10010b74
sub_1004e944
lea ecx [ ebp - 0x2c ]
jmp sub_10001c95
sub_1004e94c
lea ecx [ ebp - 0x10c ]
jmp sub_10001c95
sub_1004e957
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x214 ]
xor ecx eax
call sub_10025c8d
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10025c8d
mov eax r--data
jmp sub_10029ada
sub_1004e97f
lea ecx [ ebp - 0x68 ]
jmp sub_100024c9
sub_1004e987
lea ecx [ ebp - 0x4c ]
jmp sub_100024c9
sub_1004e98f
lea ecx [ ebp - 0x78 ]
jmp sub_10017725
sub_1004e997
lea ecx [ ebp - 0x30 ]
jmp sub_10001c95
sub_1004e99f
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x7c ]
mov ecx [ edx - 0x80 ]
xor ecx eax
call sub_10025c8d
add eax 0xc
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_10025c8d
mov eax r--data
jmp sub_10029ada
sub_1004e9c7
lea eax [ ebp - 0x5c ]
jmp sub_10001323
sub_1004e9cf
lea eax [ ebp - 0x44 ]
jmp sub_10013040
sub_1004e9d7
lea ecx [ ebp - 0x60 ]
jmp sub_10012ea4
sub_1004e9df
lea ecx [ ebp + 0xac ]
jmp sub_100024c9
sub_1004e9ea
lea ecx [ ebp ]
jmp sub_10013cd5
sub_1004e9f2
lea ecx [ ebp + 0xc8 ]
jmp sub_10001c95
sub_1004e9fd
lea ecx [ ebp - 0x7c ]
jmp sub_10001c95
sub_1004ea05
lea ecx [ ebp - 0x7c ]
jmp sub_10001c95
sub_1004ea0d
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xa8 ]
xor ecx eax
call sub_10025c8d
mov ecx [ edx + 0xf0 ]
xor ecx eax
call sub_10025c8d
mov eax r--data
jmp sub_10029ada
sub_1004ea38
mov eax [ ebp - 0x10 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x10 ] 0xfffffffe
mov ecx [ ebp - 0x18 ]
jmp sub_10001c95
sub_1004ea51
lea eax [ ebp - 0xa8 ]
jmp sub_1000c5dd
sub_1004ea5c
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xc4 ]
xor ecx eax
call sub_10025c8d
mov eax r--data
jmp sub_10029ada
sub_1004ea7a
lea eax [ ebp - 0xf0 ]
jmp sub_100025f4
sub_1004ea85
lea ecx [ ebp - 0x68 ]
jmp sub_100024c9
sub_1004ea8d
lea ecx [ ebp - 0x10c ]
jmp sub_100024c9
sub_1004ea98
lea ecx [ ebp - 0x128 ]
jmp sub_100024c9
sub_1004eaa3
lea ecx [ ebp - 0x30 ]
jmp sub_100024c9
sub_1004eaab
lea ecx [ ebp - 0x144 ]
jmp sub_100024c9
sub_1004eab6
lea ecx [ ebp - 0x160 ]
jmp sub_100024c9
sub_1004eac1
lea ecx [ ebp - 0x160 ]
jmp sub_100024c9
sub_1004eacc
lea ecx [ ebp - 0x144 ]
jmp sub_100024c9
sub_1004ead7
lea ecx [ ebp - 0x4c ]
jmp sub_100024c9
sub_1004eadf
lea ecx [ ebp - 0x128 ]
jmp sub_100024c9
sub_1004eaea
lea ecx [ ebp - 0x10c ]
jmp sub_100024c9
sub_1004eaf5
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x164 ]
mov ecx [ edx - 0x168 ]
xor ecx eax
call sub_10025c8d
add eax 0xc
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_10025c8d
mov eax r--data
jmp sub_10029ada
sub_1004eb23
lea eax [ ebp - 0xcc ]
jmp sub_100025f4
sub_1004eb2e
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xd0 ]
xor ecx eax
call sub_10025c8d
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_10025c8d
mov eax r--data
jmp sub_10029ada
sub_1004eb56
lea ecx [ ebp - 0x54 ]
jmp sub_100024c9
sub_1004eb5e
lea ecx [ ebp - 0x2c ]
jmp sub_100024c9
sub_1004eb66
lea ecx [ ebp - 0x70 ]
jmp sub_100024c9
sub_1004eb6e
mov eax [ ebp - 0x38 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x38 ] 0xfffffffe
mov ecx [ ebp - 0x30 ]
jmp sub_100024c9
sub_1004eb87
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x74 ]
xor ecx eax
call sub_10025c8d
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10025c8d
mov eax r--data
jmp sub_10029ada
sub_1004ebac
mov eax [ ebp - 0x20 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x20 ] 0xfffffffe
push [ ebp - 0x14 ]
call sub_10008ad1
sub_1004ebc5
lea ecx [ ebp - 0x64 ]
jmp sub_100024c9
sub_1004ebcd
lea ecx [ ebp ]
jmp sub_100024c9
sub_1004ebd5
lea ecx [ ebp - 0x48 ]
jmp sub_100024c9
sub_1004ebdd
lea ecx [ ebp - 0x1c ]
jmp sub_100097b6
sub_1004ebe5
lea ecx [ ebp + 0x1c ]
jmp sub_100024c9
sub_1004ebed
lea ecx [ ebp + 0x70 ]
jmp sub_100024c9
sub_1004ebf5
lea ecx [ ebp + 0x54 ]
jmp sub_100024c9
sub_1004ebfd
lea ecx [ ebp + 0x38 ]
jmp sub_100024c9
sub_1004ec05
lea ecx [ ebp + 0x38 ]
jmp sub_10001c95
sub_1004ec0d
lea eax [ ebp - 0x28 ]
jmp sub_100085f0
sub_1004ec15
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x68 ]
xor ecx eax
call sub_10025c8d
mov ecx [ edx + 0x98 ]
xor ecx eax
call sub_10025c8d
mov eax r--data
jmp sub_10029ada
sub_1004ec3d
lea ecx [ ebp - 0x64 ]
jmp sub_10001c95
sub_1004ec45
lea ecx [ ebp - 0x48 ]
jmp sub_10001c95
sub_1004ec4d
lea ecx [ ebp - 0x2c ]
jmp sub_10001c95
sub_1004ec55
lea ecx [ ebp - 0x80 ]
jmp sub_100024c9
sub_1004ec5d
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x98 ]
xor ecx eax
call sub_10025c8d
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10025c8d
mov eax r--data
jmp sub_10029ada
sub_1004ec85
lea eax [ ebp - 0x28 ]
jmp sub_10001323
sub_1004ec8d
lea ecx [ ebp - 0x2c ]
jmp sub_10021af1
sub_1004ec95
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x34 ]
mov ecx [ edx - 0x38 ]
xor ecx eax
call sub_10025c8d
mov eax r--data
jmp sub_10029ada
sub_1004ecb0
lea eax [ ebp - 0x98 ]
jmp sub_100025f4
sub_1004ecbb
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x9c ]
xor ecx eax
call sub_10025c8d
mov eax r--data
jmp sub_10029ada
sub_1004ecd9
lea ecx [ ebp - 0xb8 ]
jmp sub_100024c9
sub_1004ece4
lea ecx [ ebp - 0x9c ]
jmp sub_100024c9
sub_1004ecef
lea ecx [ ebp - 0x3c ]
jmp sub_10014d14
sub_1004ecf7
lea ecx [ ebp - 0xd4 ]
jmp sub_100024c9
sub_1004ed02
lea esi [ ebp - 0x64 ]
jmp sub_100150b3
sub_1004ed0a
lea ecx [ ebp - 0x80 ]
jmp sub_100024c9
sub_1004ed12
mov edx [ esp + 0x8 ]
lea eax [ edx - 0xd4 ]
mov ecx [ edx - 0xd8 ]
xor ecx eax
call sub_10025c8d
add eax 0xc
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_10025c8d
mov eax r--data
jmp sub_10029ada
sub_1004ed40
lea edi [ ebp - 0xec ]
jmp sub_1000253c
sub_1004ed4b
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xf0 ]
xor ecx eax
call sub_10025c8d
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10025c8d
mov eax r--data
jmp sub_10029ada
sub_1004ed73
lea ecx [ ebp - 0x30 ]
jmp sub_100024c9
sub_1004ed7b
lea ecx [ ebp - 0x68 ]
jmp sub_100024c9
sub_1004ed83
lea ecx [ ebp - 0x84 ]
jmp sub_100024c9
sub_1004ed8e
lea ecx [ ebp - 0x4c ]
jmp sub_100024c9
sub_1004ed96
lea ecx [ ebp - 0x84 ]
jmp sub_100024c9
sub_1004eda1
lea ecx [ ebp - 0x68 ]
jmp sub_100024c9
sub_1004eda9
lea ecx [ ebp - 0x4c ]
jmp sub_100024c9
sub_1004edb1
lea ecx [ ebp - 0x4c ]
jmp sub_100024c9
sub_1004edb9
lea ecx [ ebp - 0x84 ]
jmp sub_100024c9
sub_1004edc4
lea ecx [ ebp - 0x68 ]
jmp sub_100024c9
sub_1004edcc
lea ecx [ ebp - 0x84 ]
jmp sub_100024c9
sub_1004edd7
lea ecx [ ebp - 0x68 ]
jmp sub_100024c9
sub_1004eddf
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x8c ]
mov ecx [ edx - 0x90 ]
xor ecx eax
call sub_10025c8d
add eax 0xc
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_10025c8d
mov eax r--data
jmp sub_10029ada
sub_1004ee0d
lea eax [ ebp - 0x274 ]
jmp sub_100085f0
sub_1004ee18
lea ecx [ ebp - 0x1bc ]
jmp sub_10001c95
sub_1004ee23
lea ecx [ ebp - 0x264 ]
jmp sub_10001c95
sub_1004ee2e
lea ecx [ ebp - 0xf8 ]
jmp sub_1000837b
sub_1004ee39
lea eax [ ebp - 0x248 ]
jmp sub_100025f4
sub_1004ee44
lea ecx [ ebp - 0x264 ]
jmp sub_100024c9
sub_1004ee4f
lea ecx [ ebp - 0x264 ]
jmp sub_100024c9
sub_1004ee5a
lea ecx [ ebp - 0x1a0 ]
jmp sub_10012be9
sub_1004ee65
lea eax [ ebp - 0x27c ]
jmp sub_100085f0
sub_1004ee70
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x27c ]
mov ecx [ edx - 0x280 ]
xor ecx eax
call sub_10025c8d
add eax 0xc
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_10025c8d
mov eax r--data
jmp sub_10029ada
sub_1004ee9e
lea ecx [ ebp - 0x30 ]
jmp sub_100024c9
sub_1004eea6
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x34 ]
xor ecx eax
call sub_10025c8d
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_10025c8d
mov eax r--data
jmp sub_10029ada
sub_1004eecb
lea ecx [ ebp - 0x5c ]
jmp sub_100024c9
sub_1004eed3
lea ecx [ ebp - 0x94 ]
jmp sub_100024c9
sub_1004eede
lea ecx [ ebp - 0x3c ]
jmp sub_10014d14
sub_1004eee6
lea ecx [ ebp - 0x78 ]
jmp sub_100024c9
sub_1004eeee
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x98 ]
xor ecx eax
call sub_10025c8d
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_10025c8d
mov eax r--data
jmp sub_10029ada
sub_1004ef16
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x30 ]
xor ecx eax
call sub_10025c8d
mov eax r--data
jmp sub_10029ada
sub_1004ef31
lea ecx [ ebp ]
jmp sub_1000837b
sub_1004ef39
lea eax [ ebp - 0x34 ]
push eax
call sub_10008ad1
retn
sub_1004ef43
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x3c ]
xor ecx eax
call sub_10025c8d
mov ecx [ edx + 0xec ]
xor ecx eax
call sub_10025c8d
mov eax r--data
jmp sub_10029ada
sub_1004ef6b
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_10025c8d
mov eax r--data
jmp sub_10029ada
sub_1004ef86
lea ecx [ ebp - 0x30 ]
jmp sub_100024c9
sub_1004ef8e
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x38 ]
xor ecx eax
call sub_10025c8d
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_10025c8d
mov eax r--data
jmp sub_10029ada
sub_1004efb3
call sub_100254bb
mov [ rw-data ] eax
retn
sub_1004efbe
call sub_100254bb
mov [ rw-data ] eax
retn
sub_1004efc9
call sub_1002547a
mov [ rw-data ] eax
retn
sub_1004efd4
call sub_100254bb
mov [ rw-data ] eax
retn
sub_1004efdf
call sub_100254bb
mov [ rw-data ] eax
retn
sub_1004efea
call sub_1002547a
mov [ rw-data ] eax
retn
sub_1004eff5
call sub_100254bb
mov [ rw-data ] eax
retn
sub_1004f000
call sub_100254bb
mov [ rw-data ] eax
retn
sub_1004f00b
call sub_1002547a
mov [ rw-data ] eax
retn
sub_1004f016
call sub_100254bb
mov [ rw-data ] eax
retn
sub_1004f021
call sub_100254bb
mov [ rw-data ] eax
retn
sub_1004f02c
call sub_1002547a
mov [ rw-data ] eax
retn
sub_1004f07b
mov ecx rw-data
call sub_100223dd
push sub_1004f18b
call sub_1002ad30
pop ecx
retn
sub_1004f091
push sub_1004f195
call sub_1002ad30
pop ecx
retn
sub_1004f09d
mov ecx rw-data
call sub_100223dd
push sub_1004f19f
call sub_1002ad30
pop ecx
retn
sub_1004f0b3
push sub_1004f1a9
call sub_1002ad30
pop ecx
retn
sub_1004f0bf
push sub_1004f1b3
call sub_1002ad30
pop ecx
retn
sub_1004f0cb
call sub_1002547a
mov [ rw-data ] eax
retn
sub_1004f0d6
push r--data
push r--data
call [ GetModuleHandleA@IAT ]
push eax
call [ GetProcAddress@IAT ]
mov [ rw-data ] eax
retn
sub_1004f0f3
push r--data
push r--data
call [ GetModuleHandleA@IAT ]
push eax
call [ GetProcAddress@IAT ]
mov [ rw-data ] eax
retn
sub_1004f110
call sub_1002547a
mov [ rw-data ] 0x3
mov [ rw-data ] eax
retn
sub_1004f125
push 0x0
push r--data
mov ecx rw-data
call sub_10024f22
push sub_1004f1dc
call sub_1002ad30
pop ecx
retn
sub_1004f142
push 0x0
push r--data
mov ecx rw-data
call sub_10024f22
push sub_1004f1cd
call sub_1002ad30
pop ecx
retn
sub_1004f15f
call sub_100254bb
mov [ rw-data ] eax
retn
sub_1004f16a
call sub_100254bb
mov [ rw-data ] eax
retn
sub_1004f175
call sub_1002547a
mov [ rw-data ] eax
retn
sub_1004f180
call sub_1002547a
mov [ rw-data ] eax
retn
sub_1004f18b
mov ecx rw-data
jmp sub_1002240e
sub_1004f195
mov ecx rw-data
jmp sub_10007806
sub_1004f19f
mov ecx rw-data
jmp sub_1002240e
sub_1004f1a9
mov ecx rw-data
jmp sub_100235e5
sub_1004f1b3
mov ecx [ rw-data ]
test ecx ecx
je r-xdata
retn
jmp sub_1000990a
sub_1004f1c3
mov ecx rw-data
jmp sub_10007806
sub_1004f1cd
push 0x0
push 0x1
mov ecx rw-data
call sub_1000247e
retn
sub_1004f1dc
push 0x0
push 0x1
mov ecx rw-data
call sub_1000247e
retn
sub_1004f1eb
mov [ rw-data ] r--data
retn
sub_1004f1f6
mov [ rw-data ] r--data
retn
sub_1004f201
mov [ rw-data ] r--data
retn
sub_1004f20c
push 0x0
push 0x1
mov ecx rw-data
call sub_100022b5
retn
sub_1004f21b
mov [ rw-data ] r--data
mov ecx rw-data
jmp sub_10025f19
sub_1004f22f
mov [ rw-data ] r--data
mov ecx rw-data
jmp sub_10025f19
sub_1004f243
mov [ rw-data ] r--data
mov ecx rw-data
jmp sub_10025f19
