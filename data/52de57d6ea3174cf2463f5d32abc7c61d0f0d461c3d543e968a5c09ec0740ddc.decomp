sub_101184e7
jmp rwxdata
pushad
mov [ esp + 0x4 ] ecx
inc ecx
lea esp [ esp + 0x20 ]
pushad
pushad
jmp rwxdata
pushfd
lea esp [ esp + 0x44 ]
call sub_10201bcd
call sub_1020a3f0
and al 0x71
mov bh dl
adc al 0xb
dec esp
lodsb [ esi ]
push ebp
push ebx
mov bl 0x95
mov eax 0xcbcab94c
hlt
sub_10118699
lea esp [ esp + 0x30 ]
jne rwxdata
push 0xbecf068c
pushad
call sub_1011937c
pushad
jmp rwxdata
pushfd
inc esi
call sub_101f2c5a
cmpsd [ esi ] [ edi ]
cmp ebp eax
fld st5
inc edx
popfd
scasb [ edi ]
adc cl [ ebx + eax ]
fmul [ 0x1a640741 ]
cmp eax 0x942e1142
sub al [ esi ]
sub_1011898c
mov edi 0x26d04f76
pushfd
lea edi [ esp + 0x134e2f71 ]
mov edi [ ebp + 0x8 ]
jmp rwxdata
mov [ esp ] bl
pushad
lea esp [ esp + 0x38 ]
call sub_101e7455
jbe rwxdata
push 0x2a7a68dc
jmp rwxdata
push 0xa012a2b4
mov [ esp ] ecx
lea esp [ esp + 0x4 ]
jne rwxdata
lea esp [ esp + 0x4 ]
jne rwxdata
cmp ah 0x6
stc
add ecx 0xffffffff
jmp rwxdata
pushad
mov eax [ edx + 0x8 ]
pushad
pushfd
push [ esp ]
pushfd
lea esp [ esp + 0x4c ]
jmp rwxdata
not ah
not ah
lea eax [ edi * 8 + 0x70567e0b ]
push 0x19eec388
mov eax [ edx + 0x8 ]
pushad
lea esp [ esp + 0x24 ]
jmp rwxdata
je rwxdata
bt di si
bt dx 0x1
pushad
clc
or ebx ebx
jmp rwxdata
clc
cmp ch ch
pushfd
push edx
sub eax eax
sub esp 0xfffffff8
pushad
pushfd
pushad
add edx 0x11c
push 0xecb112e8
push eax
lea esp [ esp + 0x4c ]
jmp rwxdata
lea esp [ esp + 0x20 ]
je rwxdata
not di
call sub_101eb978
push 0xbb4c9f7f
mov edi [ esp + 0x4 ]
bswap bx
mov esi [ esp + 0x8 ]
push [ esp ]
mov bl 0x31
not bx
mov [ esp ] 0xfb
mov ebx [ esp + 0x10 ]
jmp rwxdata
lea esi [ esp - 0x3355e86c ]
pushfd
not si
movsx esi dl
mov esi eax
mov [ esp ] 0xda
mov [ esp ] ebx
pushad
movzx ax dl
call sub_10119d09
cwde
insd
mov dl 0x3f
call sub_10119850
sahf
mov esi [ esi + ecx * 2 + 0x5d4c9210 ]
jne rwxdata
sub edx [ 0x12d4efd0 ]
fisub [ esi ]
mov eax [ 0xffffffffd40ac9d5 ]
dec ebx
mov [ 0x44fb30e0 ] eax
push ebp
mov al 0x70
imul edx [ esi - 0x69 ] 0x41f6e565
xchg ebx eax
sar bh 0x6d
pop ebp
or ebp [ ecx ]
imul edx ebp 0x735fa6e6
cmp eax edx
lea ebp [ ebp - 0x68 ]
lahf
mov [ eax + 0x57330840 ] ch
int1
push edi
mov [ ebx ] dl
insb
loope rwxdata
imul edx ebp 0x735fa6e6
or al 0xf2
sub_10118a6e
lea esp [ esp + 0x8 ]
jne rwxdata
sbb dh 0xfc
btc bx cx
lea edi [ ebp - 0x21ec1969 ]
shl si 0x2
sub eax eax
mov bh 0x34
jmp rwxdata
lea esi [ ebx * 2 + 0x46ca5e35 ]
bsr si cx
rcr cl 0x6
shld cx cx cl
mov ecx edi
and esi 0x503f9a9a
not esi
sub ecx ebx
movzx esi dl
mov esi esp
cmp ebp edi
call sub_101bf841
sbb edi ebp
dec edi
out 0x97 eax
xor ebp ebx
cld
aam 0x10
xlat
in al dx
pop esp
xor ebp [ ebx - 0x7a ]
jg rwxdata
pop edx
movzx si bl
mov si 0xce7a
pushad
lea esi [ ebp * 2 - 0x641f9294 ]
mov ebx [ esp + 0x20 ]
bswap si
bswap si
xchg di si
mov edi [ esp + 0x24 ]
mov si 0x99de
mov esi [ esp + 0x28 ]
push eax
pushfd
lea esp [ esp + 0x34 ]
jns rwxdata
rol dh 0x4
and al 0xe
call sub_1020cfcd
outsd
inc esp
fwait
add al 0xbb
mov esp 0x738bd4a3
sub al 0x40
xchg ebp eax
sub [ edx ] edi
push edx
mov bl 0x88
cdq
test [ esi + 0x1f240ff6 ] edx
xchg [ eax - 0x27990f83 ] cl
pushfd
pushfd
pushad
push 0xcf9003f2
mov esp ebp
pushfd
mov ebp [ esp + 0x4 ]
pushfd
pushfd
push [ esp + 0x10 ]
retn 0x1c
mov esp ebp
movsx bp dl
pop ebp
pushfd
push [ esp ]
pushad
mov [ esp ] di
push [ esp + 0x28 ]
retn 0x34
sub_10118e9f
pop ecx
xchg ch bh
setne bl
mov ebx [ esp + 0x28 ]
pushfd
setl ch
push edi
mov ecx [ esp + 0x34 ]
push 0xc64cbb32
mov esp ebp
jmp rwxdata
lea ebp [ esi - 0x5bd4271c ]
call sub_101ff9ec
sbb ch [ ebp + 0x3f386758 ]
and [ ecx ] dh
add eax 0xfd26477a
sub_101191b3
lea esp [ esp + 0x30 ]
je rwxdata
sbb dh 0xfc
btc bx cx
lea edi [ ebp - 0x21ec1969 ]
shl si 0x2
sub eax eax
mov bh 0x34
jmp rwxdata
call sub_1020c243
bound ebx [ ss : edx + eax * 2 + 0x5c ]
mov dl 0x6c
jge rwxdata
pop edx
movzx si bl
mov si 0xce7a
pushad
lea esi [ ebp * 2 - 0x641f9294 ]
mov ebx [ esp + 0x20 ]
bswap si
bswap si
xchg di si
mov edi [ esp + 0x24 ]
mov si 0x99de
mov esi [ esp + 0x28 ]
push eax
pushfd
lea esp [ esp + 0x34 ]
jns rwxdata
sub al 0x92
in al dx
sar [ eax ] cl
cmpsd [ esi ] [ edi ]
call 0xffffffffbef564dc
in al 0x98
or [ edi + 0x3ffe6092 ] bh
mov dh 0x95
mov [ 0x6f4f907c ] eax
mov al 0x29
sti
in al 0x38
adc al 0xb
add esi [ esi + edi * 2 + 0x1bb377b5 ]
sub [ eax ] dl
cmove esp [ edi ]
sbb [ esi ] ebp
cmp bh cl
push eax
cmpsd [ esi ] [ edi ]
mov al [ 0xffffffffffd1c7ab ]
popad
xor eax 0xb6a6a226
insd
rol [ ecx + 0x1d ] 0x1
mov eax [ cs : 0xffffffff947c8c17 ]
jpo rwxdata
fyl2x
add dh 0xf5
mov [ ecx + 0x591e817d ] eax
push es
sub esi esi
cdq
xchg [ es : esi + 0x1d ] edi
bound esi [ eax ]
scasb [ edi ]
movsd [ edi ] [ esi ]
0x922c9628 0xd2ec
cmp [ edi - 0x1c2d1318 ] ah
pushfd
pushfd
pushad
push 0xcf9003f2
mov esp ebp
pushfd
mov ebp [ esp + 0x4 ]
pushfd
pushfd
push [ esp + 0x10 ]
retn 0x1c
mov esp ebp
movsx bp dl
pop ebp
pushfd
push [ esp ]
pushad
mov [ esp ] di
push [ esp + 0x28 ]
retn 0x34
scasb [ edi ]
in al dx
shl bl cl
mov esi 0x5e955d3
cmp [ edx - 0x7833d73e ] esi
in al dx
xor ebx [ ebx - 0x3f ]
popad
test [ ebx + ecx * 2 ] dh
mov esp es
ficom [ ebp - 0x36 ]
mov bh 0x7
out dx al
mov ch 0x50
cmp esi [ esp + edi + 0x46 ]
sub_1011982b
pushad
lea esp [ esp + 0x30 ]
jb rwxdata
mov bh 0x34
jmp rwxdata
clc
cmp eax [ ebp - 0x10 ]
push edx
mov [ esp ] al
lea esp [ esp + 0x4 ]
jae rwxdata
pop edx
movzx si bl
mov si 0xce7a
pushad
lea esi [ ebp * 2 - 0x641f9294 ]
mov ebx [ esp + 0x20 ]
bswap si
bswap si
xchg di si
mov edi [ esp + 0x24 ]
mov si 0x99de
mov esi [ esp + 0x28 ]
push eax
pushfd
lea esp [ esp + 0x34 ]
jns rwxdata
pushfd
mov ebx eax
jmp rwxdata
pushfd
pushfd
pushad
push 0xcf9003f2
mov esp ebp
pushfd
mov ebp [ esp + 0x4 ]
pushfd
pushfd
push [ esp + 0x10 ]
retn 0x1c
mov esp ebp
movsx bp dl
pop ebp
pushfd
push [ esp ]
pushad
mov [ esp ] di
push [ esp + 0x28 ]
retn 0x34
mov edi eax
rcr cl 0x4
xor cx bp
movsx cx al
mov ecx 0x104
cmc
bt eax ecx
pushfd
push ebx
sub al al
mov [ esp ] 0x3e
[ edi ]
push 0xb2058404
lea esp [ esp + 0x10 ]
jne rwxdata
sbb dh 0xfc
btc bx cx
lea edi [ ebp - 0x21ec1969 ]
shl si 0x2
sub eax eax
setne ch
bt si 0x1
rcr ch cl
mov ecx edi
adc esi edi
rcl esi 0x9
sub ecx ebx
bts si 0x7
clc
and si 0x5c96
movzx si bl
mov esi esp
pushad
stc
test cl dh
bt ax 0x1
sub edi 0x4
test dh al
call sub_101f34da
aad 0x54
jmp sub_1020bbe0
sub_10119a5c
pushfd
lahf
pop eax
mov [ esp ] ebx
pushfd
lea eax [ rwxdata ]
mov [ esp ] bl
push 0x1ac385aa
mov [ esp + 0x4 ] rwxdata
push 0x2d3bacf
pushad
jmp rwxdata
jmp rwxdata
mov [ esp + 0x24 ] eax
mov [ esp ] dh
push [ esp + 0x24 ]
retn 0x28
sub_10119b53
stc
mov edi [ edx + 0x1c ]
pushfd
cmc
clc
add edi eax
clc
bt cx bx
pushad
mov edi [ edi + ecx * 4 ]
clc
cmp bl bl
cmp di ax
test edi edi
jmp rwxdata
call sub_101191b3
jne rwxdata
push ds
mov es [ ecx ]
pop ebp
and eax 0x48c27cb9
jb rwxdata
pop ebx
mov edx 0x1be1679
dec esp
pushad
xor [ ebx ] esi
and ebp edx
popfd
aaa
mov [ edx ] bh
test [ esi ] bh
add [ edx + 0x4fefde9d ] 0x5c
dec ecx
or [ ecx - 0x48849b85 ] 0x8b691568
jpe rwxdata
or [ esi - 0x69 ] edx
aas
or [ esi ] bl
and [ esi + edx * 2 ] dh
xor ch [ esi ]
insb
insb
add [ ecx + esi * 8 ] dl
mov ch 0xa
hlt
in al dx
inc edx
jno rwxdata
arpl [ ebx ] di
inc esp
sub eax 0xe84e5171
ja rwxdata
ja rwxdata
les ecx [ edx ]
adc al 0xc9
xor eax 0x719b5a84
js rwxdata
xchg esp eax
mov bl [ esi - 0x4cf3373f ]
jl rwxdata
mov bl cl
je rwxdata
or [ edx ] ebx
0x8874
push esi
xchg edi eax
dec eax
0x3a88379d 0x3e84
mov al [ 0x3efde1e1 ]
xor [ ebp - 0x73 ] eax
sahf
imul esp [ edx + edi * 2 ] 0xffffff94
mov bh cl
sub [ ecx ] 0xa5
mov ebp 0x36251a11
jpe rwxdata
mov eax 0x87b87766
les ecx [ edx + 0xcc8c19e ]
mov bl 0xc4
in al 0x3b
pop ds
jo rwxdata
jpe rwxdata
and eax 0x401a0976
stc
in eax 0xf6
clc
push ds
aad 0x6a
jmp 0xffffffffef7b2c72
ja rwxdata
jpe rwxdata
outsb
mov al 0xf6
call 0x2a652eb5
mov [ 0xffffffff9b9dd453 ] eax
mov esi 0xfe5f4ed1
pop ebx
0x5a1302dc 0x7625
or [ edx ] ebx
inc eax
sub_10119d14
mov [ esp + 0x20 ] eax
call j_sub_10201349
lea esp [ esp + 0xc ]
ja rwxdata
rcr bl cl
rcl bl cl
xchg ebp eax
xor bl bl
mov eax ebp
bt ebx 0xa
shl bl 0x5
mov bl 0x1
jmp sub_1020d8b7
jmp rwxdata
jmp rwxdata
inc bl
inc ecx
push esp
inc ecx
stc
shr bl cl
rcl bl cl
mov bl [ esp ]
xchg ebp eax
bsr ax ax
setg bl
cmp dx cx
shl bl cl
mov eax ebp
sbb bl ah
shl bl 0x6
mov bl 0x1
cmc
bt eax ecx
xchg [ esp ] esi
ror esi 0xc
rcl si cl
mov esi edi
clc
stc
sub esi eax
pushad
[ edi ] [ esi ]
movsx si al
mov esi [ esp + 0x20 ]
mov [ esp + 0x8 ] al
pushad
lea esp [ esp + 0x44 ]
jmp rwxdata
pushad
mov [ esp + 0x8 ] 0x24
lea esp [ esp + 0x20 ]
call sub_10201bcd
pushad
mov [ esp ] cl
lea esp [ esp + 0x20 ]
jae rwxdata
jmp rwxdata
cmc
stc
jmp rwxdata
lodsb [ esi ]
push 0xe19feba4
sbb bl 0x4b
not al
clc
rcl bl cl
adc bl 0x6a
shl bl 0x6
xor al 0xf7
sub bl 0x51
jmp rwxdata
pushfd
sub ecx ecx
pushfd
call sub_101ea79e
xchg ebx eax
xchg esi eax
test eax 0xa935b1ad
mov edx 0x7ead1ba3
or ebx esi
push 0x78
neg al
jmp rwxdata
pushfd
pushfd
push 0x8001d5ce
inc al
not bl
sets bl
mov [ esp + 0x8 ] bl
stosb [ edi ]
setbe bl
not bl
jmp rwxdata
mov bl 0x2
lea esp [ esp + 0x10 ]
sub_10119e08
push esp
pushad
mov [ ebp - 0x8 ] ecx
push [ esp + 0x4 ]
pushfd
pushfd
mov [ esp + 0x8 ] al
lea esp [ esp + 0x34 ]
jmp rwxdata
or si dx
inc ecx
mov ecx [ ebp - 0x8 ]
shl si cl
movzx di cl
bt ax cx
add ecx [ ebp - 0x4 ]
adc di cx
shr ecx 0x1
shl di cl
btr si sp
mov edi [ ebx + ecx * 4 ]
rcr si 0x7
ror si cl
add edi eax
mov si 0xb7dd
call sub_101e8af7
mov al 0xe8
salc
sbb dh 0x51
into
js 0x87bc6b04
call 0xfffffffff3ab896e
sub ebx edx
test [ 0xffffffff83a1c196 ] edx
sar [ ecx + 0x2c2c55c9 ] 0x4f
sahf
test eax 0xb5cdb451
movsd [ edi ] [ esi ]
call 0xffffffffeca125ce
sar [ eax - 0x5 ] 0x1
inc ebx
pop ebx
inc ebx
cmp [ ebx - 0x6d ] 0xffffff8b
lahf
push 0x767b0377
sub_10119fbc
movsx ax dl
mov [ esp + 0x3c ] 0xb
call sub_101e84d2
cmp al ah
push 0x4e63b5ab
pushad
call sub_10118699
pushfd
pushfd
push 0x8001d5ce
inc al
not bl
sets bl
mov [ esp + 0x8 ] bl
stosb [ edi ]
setbe bl
not bl
jmp rwxdata
mov bl 0x2
lea esp [ esp + 0x10 ]
pushad
mov [ esp + 0x8 ] 0x24
lea esp [ esp + 0x20 ]
call sub_10201bcd
pushad
mov [ esp ] cl
lea esp [ esp + 0x20 ]
jae rwxdata
jmp rwxdata
cmc
stc
jmp rwxdata
lodsb [ esi ]
push 0xe19feba4
sbb bl 0x4b
not al
clc
rcl bl cl
adc bl 0x6a
shl bl 0x6
xor al 0xf7
sub bl 0x51
jmp rwxdata
pushfd
sub ecx ecx
pushfd
call sub_101ea79e
xchg ebx eax
xchg esi eax
test eax 0xa935b1ad
mov edx 0x7ead1ba3
or ebx esi
push 0x78
neg al
jmp rwxdata
sub_101be866
lea esp [ esp + 0x2c ]
je rwxdata
sbb dh 0xfc
btc bx cx
lea edi [ ebp - 0x21ec1969 ]
shl si 0x2
sub eax eax
push esp
bt bp bx
pushad
add eax edi
test al 0x56
cmp eax edx
pushfd
lea esp [ esp + 0x28 ]
jb rwxdata
pop edx
movzx si bl
mov si 0xce7a
pushad
lea esi [ ebp * 2 - 0x641f9294 ]
mov ebx [ esp + 0x20 ]
bswap si
bswap si
xchg di si
mov edi [ esp + 0x24 ]
mov si 0x99de
mov esi [ esp + 0x28 ]
push eax
pushfd
lea esp [ esp + 0x34 ]
jns rwxdata
mov bh 0x34
jmp rwxdata
pushad
bt di ax
cmp eax [ ebp - 0x10 ]
pushfd
mov [ esp + 0x4 ] dh
jmp rwxdata
pushfd
pushfd
pushad
push 0xcf9003f2
mov esp ebp
pushfd
mov ebp [ esp + 0x4 ]
pushfd
pushfd
push [ esp + 0x10 ]
retn 0x1c
mov esp ebp
movsx bp dl
pop ebp
pushfd
push [ esp ]
pushad
mov [ esp ] di
push [ esp + 0x28 ]
retn 0x34
lea esp [ esp + 0x24 ]
jae rwxdata
neg di
and ecx ebp
xor bh 0x1c
bt ax 0xc
mov ebx eax
stc
bsf di sp
mov edi eax
bts ecx 0x1f
mov ecx 0x104
push ecx
clc
test bp 0xd015
pushfd
sub al al
pushad
cmc
cmp si 0x6c0b
stc
[ edi ]
push 0x145063d7
lea esp [ esp + 0x2c ]
jne rwxdata
shr si cl
movzx esi al
lea esi [ edx * 2 - 0x19bd21b4 ]
bsf cx sp
mov ecx edi
call sub_101e8512
xchg ebx eax
add eax 0x65a976b9
mov ecx 0x86e943ca
push ds
sub ch [ eax ]
push esi
cmp al 0x3
out dx al
pop ss
test bl bh
daa
cwde
push 0xfffffff4
mov eax [ 0xfffffffff9a5babd ]
movsd [ edi ] [ esi ]
push ds
shl [ esi + 0xdb589a9 ] 0xb1
pushad
mov esi 0x64f5e9cf
fmulp st2
add bl dl
imul eax [ ebp + 0x5a ] 0x24
0x5ebf9d81 0xb5dd
or ebp edx
out 0xee al
mov cl 0xc5
mov ecx 0xffabb3a6
ficomp [ edi + 0x6c ]
push edx
jo rwxdata
popad
jo rwxdata
fwait
push 0x33
insb
push ebx
dec esp
in al dx
scasb [ edi ]
or ecx [ 0xffffffffef471730 ]
cld
dec esp
clc
inc edi
cmovg esp [ edx - 0x27809f9d ]
cmpsd [ esi ] [ edi ]
hlt
jb rwxdata
jo rwxdata
and [ 0xffffffffdfe6b8b9 ] 0x6ff015df
iretd
push ebx
dec ebx
pop esp
popad
je rwxdata
loop rwxdata
dec eax
stc
push cs
movsd [ edi ] [ esi ]
test [ edx - 0x3124b825 ] bl
0x22d3236 0x2e1d
jo rwxdata
inc ebx
popad
jo rwxdata
sub eax 0xd03ea112
dec esi
adc eax 0xd6765336
inc eax
0x4de7
sub dl ah
aam 0x15
push ebx
jbe rwxdata
sbb [ edx ] ebp
sub al 0x90
xchg eax ebx
dec ebx
adc al 0x59
std
jbe rwxdata
jne rwxdata
dec ecx
sahf
sar dh 0x3f
push edi
imul ebp [ esi + 0x64 ] 0x41776f
push [ esp ]
imul edx edx 0xa
test bl dh
add edx eax
pushfd
pushfd
mov [ esp + 0x8 ] 0xba
mov [ esp + 0x4 ] sp
lea esp [ esp + 0x10 ]
jmp rwxdata
not al
sub al dl
sar al 0x1
rcr al cl
add edi 0x1
sar al 0x1
pushad
sar al 0x6
push ecx
mov al [ edi ]
bt ebx 0x1d
bt bp cx
test al al
push 0x906e3e70
lea esp [ esp + 0x28 ]
je rwxdata
push 0x8d7ccccb
mov edi edx
sub esp 0xfffffffc
setbe ch
mov ecx edi
xor al 0x61
call sub_10118d7d
sar [ ebp - 0x1e ] 0x1
jno rwxdata
push 0x45addaa6
cmp ebp 0xc5947e3b
jmp rwxdata
add bh al
inc esp
and al 0x4
pop esi
push es
mov eax [ 0xc8966e4 ]
and al 0x9c
lea esp [ esp + 0x8 ]
jmp rwxdata
int 0xb2
pop es
xor ch [ edi + edi + 0x6f ]
mov eax [ 0x43fb2820 ]
pop edi
jg rwxdata
sub al 0x30
sub esp 0xfffffffc
pushad
mov [ esp + 0x8 ] 0xf7b4
cmp ah 0x8c
test bx 0xf664
cmp al 0x9
lea esp [ esp + 0x20 ]
pushad
call sub_1020c6e6
clc
rol al 0x4
push ebx
not al
jmp rwxdata
push ecx
pushfd
jmp rwxdata
inc edx
add al 0x3e
lahf
mov ecx 0x4a301ce9
out dx al
outsd
scasd [ edi ]
dec eax
pop edi
imul esi [ ebx + 0x740a704e ] 0x3
pop esp
push 0xffffff94
fwait
test [ esi - 0x384ff070 ] ch
cwde
loop rwxdata
jmp rwxdata
pushfd
mov [ esp + 0x8 ] edx
pushad
push ecx
push 0x2a7fdc6f
pushfd
lea esp [ esp + 0x34 ]
jmp sub_1021426f
fdiv [ ebp + 0x9 ]
jns rwxdata
in al dx
inc esp
sbb ebp [ ebp * 8 + 0x477ad3f2 ]
in al 0xe3
out 0x1f al
xor bl dl
mov bl 0x11
mov edx 0x630f4f56
test eax 0x59459a0d
push ebp
sub ch [ ebx + 0x1f ]
inc eax
push ecx
0x9fc0
dec al
stc
pushfd
test cl 0x4b
not al
cmp dl 0x54
test ax 0x4d17
add al 0x79
push ebx
cmp al [ edi ]
cwde
not al
lea esp [ esp + 0x34 ]
jpe rwxdata
push edx
int 0x42
std
mov eax [ 0xffffffffe72fd61e ]
ja rwxdata
push 0x1c588f89
setbe ah
lea edi [ edi + 0x1 ]
lea eax [ ecx * 2 - 0x48a8b91 ]
lea eax [ esp - 0x79109c78 ]
pop eax
lea eax [ eax * 2 + 0x4341f52a ]
pop eax
push ecx
push 0x72711611
lea esp [ esp + 0x8 ]
ja rwxdata
cwde
lea edi [ edi + 0x1 ]
bswap ax
movzx ax dl
jb rwxdata
out 0xd9 al
mov cl 0xa5
mov ecx 0x82fd5a45
fadd st6
sub ebx edx
xor al 0xea
pushfd
aad 0xc9
stc
cmpsb [ esi ] [ edi ]
out 0x71 eax
pop ebx
pushad
sub eax 0x8d76c962
and al 0x8
jb rwxdata
jmp rwxdata
push 0x84564d49
push 0x666294db
lea esp [ esp + 0x8 ]
jb rwxdata
pushfd
mov eax [ esp + 0x4 ]
mov [ esp ] 0x9bf9
pushad
jmp j_sub_1020cd09
pop eax
jl rwxdata
cmp bp cx
or al al
call sub_1020b942
pushad
clc
cmp ah 0x5a
push 0xe2404430
lea esp [ esp + 0x24 ]
ja rwxdata
test bl 0xa6
cmp si dx
pushfd
cmp ecx [ ebp - 0x4 ]
mov [ esp ] 0x51
pushad
call sub_10202c7f
out dx al
xchg [ eax ] bl
xchg [ eax ] edi
xchg edx eax
mov ebp cs
mov ch 0x79
bound esi [ edx ]
push ss
pushfd
call sub_10200ed7
shl [ edx + edi * 8 ] 0xa4
cli
cmp [ esi ] al
pop ss
out dx al
push ecx
mov ebp 0x4cfc9d00
sti
arpl bx dx
stosd [ edi ]
lodsb [ esi ]
shl [ edi ] cl
bt dx 0x1
test ebx esp
cmp [ edi - 0x1 ] 0x0
jmp rwxdata
pushad
lea esp [ esp + 0x20 ]
ja rwxdata
pushfd
pushad
push edx
lea esp [ esp + 0x28 ]
ja rwxdata
stc
jmp rwxdata
push edi
lea esp [ esp + 0x4 ]
jne rwxdata
pushad
jmp rwxdata
pushfd
lea esp [ esp + 0x4 ]
jb rwxdata
call sub_101e8153
pushad
call sub_10119d14
into
jg rwxdata
bsf di sp
shl di 0xc
cmp al 0xff
push esi
mov edi [ edx + 0x24 ]
cmp ax 0x5e62
bt ecx 0x11
bt dx sp
add edi eax
cmp dl ah
movzx ecx [ edi + ecx * 2 ]
shl di 0x4
call sub_10119b53
call 0x26866d3a
pop eax
lea esp [ esp + 0x20 ]
jb rwxdata
clc
call sub_101f4c13
inc esi
dec edi
push eax
jb rwxdata
push [ esp + 0x2c ]
add edi [ ebx + ebx * 4 - 0x7881da1c ]
sahf
dec ebx
jb rwxdata
cmc
cmp [ edi - 0x1 ] 0x0
jmp rwxdata
pushad
sbb eax 0xf98ad561
cwde
pop es
sbb [ eax - 0x627043fa ] bl
lodsd [ esi ]
and [ ecx - 0x5c ] 0x939685fa
int3
sub esi [ esi * 2 - 0x70c44dd ]
mov al [ 0xffffffffb18eb692 ]
0x46e93595 0x2ed9
retn 0x30
and al 0x2c
xor esi ebp
pushfd
mov [ esp ] ah
mov [ esp ] 0x56
lea esp [ esp + 0x4 ]
jne rwxdata
shl di cl
rcr di cl
mov edi [ edx + 0x24 ]
test bx 0x934a
pushfd
add edi eax
pushad
mov [ esp ] al
pushfd
mov [ esp ] 0xc9
movzx ecx [ edi + ecx * 2 ]
neg di
mov edi [ edx + 0x1c ]
cmc
mov [ esp + 0x10 ] dx
cmp cl 0x3e
push ebp
add edi eax
mov [ esp + 0x4 ] ah
cmp esp 0xd348009e
jmp rwxdata
mov edi [ edi + ecx * 4 ]
stc
clc
test edi edi
call sub_1020eecd
ror al 0x4
jmp sub_101e7cbf
sub_101bee68
lea esp [ esp + 0xc ]
jb rwxdata
mov bh 0x34
jmp rwxdata
clc
cmp eax [ ebp - 0x10 ]
push ebp
push [ esp ]
pushfd
jmp sub_101e8f20
pop edx
movzx si bl
mov si 0xce7a
pushad
lea esi [ ebp * 2 - 0x641f9294 ]
mov ebx [ esp + 0x20 ]
bswap si
bswap si
xchg di si
mov edi [ esp + 0x24 ]
mov si 0x99de
mov esi [ esp + 0x28 ]
push eax
pushfd
lea esp [ esp + 0x34 ]
jns rwxdata
pushfd
pushfd
pushad
push 0xcf9003f2
mov esp ebp
pushfd
mov ebp [ esp + 0x4 ]
pushfd
pushfd
push [ esp + 0x10 ]
retn 0x1c
mov esp ebp
movsx bp dl
pop ebp
pushfd
push [ esp ]
pushad
mov [ esp ] di
push [ esp + 0x28 ]
retn 0x34
sub_101bf002
push [ esp + 0x4 ]
mov [ esp ] edi
lea esp [ esp + 0x14 ]
jbe rwxdata
stc
pushfd
sub ecx [ edx + 0x10 ]
cmc
clc
cmp ecx [ edx + 0x14 ]
mov [ esp ] 0x46
pushfd
pushad
lea esp [ esp + 0x28 ]
jo rwxdata
shld ecx esi 0x3
cmc
mov bl 0x86
setbe bl
mov edi [ edx + 0x24 ]
bswap bx
add edi eax
movzx bx dl
xadd cx bx
xadd bh cl
mov ebx [ edx + 0x20 ]
btc cx 0xa
add ebx eax
rcr cx 0xf
shl cx cl
ror cl cl
bsr cx ax
mov [ ebp - 0x8 ] 0x0
setle ch
mov ecx [ edx + 0x18 ]
pushfd
call sub_10200ed7
shl [ edx + edi * 8 ] 0xa4
cli
cmp [ esi ] al
pop ss
out dx al
push ecx
mov ebp 0x4cfc9d00
sti
arpl bx dx
stosd [ edi ]
lodsb [ esi ]
shl [ edi ] cl
pushfd
lea esp [ esp + 0x4 ]
jae rwxdata
jae rwxdata
sbb dh 0xfc
btc bx cx
lea edi [ ebp - 0x21ec1969 ]
shl si 0x2
sub eax eax
mov bh 0x34
jmp rwxdata
pushad
push ecx
lea esp [ esp + 0x24 ]
jmp rwxdata
pushad
lea esp [ esp + 0x20 ]
jmp rwxdata
pop edx
movzx si bl
mov si 0xce7a
pushad
lea esi [ ebp * 2 - 0x641f9294 ]
mov ebx [ esp + 0x20 ]
bswap si
bswap si
xchg di si
mov edi [ esp + 0x24 ]
mov si 0x99de
mov esi [ esp + 0x28 ]
push eax
pushfd
lea esp [ esp + 0x34 ]
jns rwxdata
rcl di 0xf
mov edi [ edx + 0x1c ]
cmc
add edi eax
cmp sp 0xb655
mov edi [ edi + ecx * 4 ]
call sub_10200c6a
sub al 0xd9
inc esi
sahf
mov eax 0xb46ab7a6
cmc
inc ecx
inc esp
pop es
push 0x7a0bcabf
xor al 0x35
adc eax esp
sbb al [ ebp + 0x7826193a ]
and [ es : esi + 0x64 ] ebx
pushfd
pushfd
pushad
push 0xcf9003f2
mov esp ebp
pushfd
mov ebp [ esp + 0x4 ]
pushfd
pushfd
push [ esp + 0x10 ]
retn 0x1c
mov esp ebp
movsx bp dl
pop ebp
pushfd
push [ esp ]
pushad
mov [ esp ] di
push [ esp + 0x28 ]
retn 0x34
sbb [ esi ] esp
js rwxdata
scasb [ edi ]
test al 0xb6
or al 0xb2
mov esp 0xc4b36b63
movsb [ edi ] [ esi ]
mov edx 0x9fd10ecb
test bl bl
add eax 0x3f26cc2
lahf
mov ebp 0x39828ea4
inc ebp
push esi
pop eax
insd
cmp ah [ ebp + 0x68b1c11e ]
inc ecx
inc esp
pminsw mm3 mm6
fidiv [ ecx + 0x40decca9 ]
push ecx
cld
xor [ ebx + edx * 8 + 0x3f ] 0x5
or eax 0x9403e04c
0xd1f28d2b 0x1fb7
cmp [ ecx ] 0x45
pop edx
sbb eax 0x84869942
jpe rwxdata
and [ esi + 0x64 ] ebx
sub_101bf392
cwde
push edi
pushad
mov [ esp + 0x24 ] ebx
pop eax
lahf
pop eax
lea eax [ rwxdata ]
push [ esp ]
pushfd
push 0x7926acd5
mov [ esp + 0x24 ] rwxdata
call sub_10208b12
pushad
mov [ esp ] bh
call sub_10202db8
sub_101bf531
mov [ esp ] dh
lea esp [ esp + 0x10 ]
je rwxdata
sbb dh 0xfc
btc bx cx
lea edi [ ebp - 0x21ec1969 ]
shl si 0x2
sub eax eax
mov bh 0x34
jmp rwxdata
inc cx
sbb cx 0xe79e
call sub_1020b43d
pop edx
movzx si bl
mov si 0xce7a
pushad
lea esi [ ebp * 2 - 0x641f9294 ]
mov ebx [ esp + 0x20 ]
bswap si
bswap si
xchg di si
mov edi [ esp + 0x24 ]
mov si 0x99de
mov esi [ esp + 0x28 ]
push eax
pushfd
lea esp [ esp + 0x34 ]
jns rwxdata
pushfd
pushfd
pushad
push 0xcf9003f2
mov esp ebp
pushfd
mov ebp [ esp + 0x4 ]
pushfd
pushfd
push [ esp + 0x10 ]
retn 0x1c
mov esp ebp
movsx bp dl
pop ebp
pushfd
push [ esp ]
pushad
mov [ esp ] di
push [ esp + 0x28 ]
retn 0x34
sub_101bf7db
jmp rwxdata
lea esp [ esp + 0x4 ]
jae rwxdata
mov bh 0x34
jmp rwxdata
btc bx 0x5
mov ebx eax
setns ch
mov edi eax
movsx cx bl
mov ecx 0x104
pushfd
xor al al
test eax esp
stc
[ edi ]
jmp sub_1020cb22
pop edx
movzx si bl
mov si 0xce7a
pushad
lea esi [ ebp * 2 - 0x641f9294 ]
mov ebx [ esp + 0x20 ]
bswap si
bswap si
xchg di si
mov edi [ esp + 0x24 ]
mov si 0x99de
mov esi [ esp + 0x28 ]
push eax
pushfd
lea esp [ esp + 0x34 ]
jns rwxdata
pushfd
pushfd
pushad
push 0xcf9003f2
mov esp ebp
pushfd
mov ebp [ esp + 0x4 ]
pushfd
pushfd
push [ esp + 0x10 ]
retn 0x1c
mov esp ebp
movsx bp dl
pop ebp
pushfd
push [ esp ]
pushad
mov [ esp ] di
push [ esp + 0x28 ]
retn 0x34
sub_101bf841
sub edi 0x4
stc
bt sp dx
bt ax 0x7
push [ edi ]
pop [ esp ]
push eax
cmp edi ebx
jmp rwxdata
jmp rwxdata
lea esp [ esp + 0x4 ]
ja rwxdata
pushad
mov [ esp + 0xc ] 0x9e
clc
sub edi 0x4
mov [ esp ] 0x3
jmp rwxdata
rcl al 0x5
shl al 0x1
sub ebx edi
call sub_10201a80
and [ ecx ] cl
cld
inc edx
mov [ esi - 0x688c9f16 ] dl
adc eax 0x191ac533
inc esi
mov eax 0x1ceb93e7
retn
push [ edi ]
pop [ esp + 0x1c ]
push edi
cmc
pushfd
cmp edi ebx
pushfd
mov [ esp ] 0xfc
push ebx
lea esp [ esp + 0x2c ]
ja rwxdata
rcr al cl
setl al
sub ebx edi
inc di
rcl di cl
dec al
add ebx esp
call sub_101ffc2a
push 0x33ab7ae5
mov eax 0xaad57867
sub al 0xac
push ss
mov [ 0xffffffffb6a09fa5 ] eax
test al 0x3b
test ch al
cmp [ edx + 0x1d ] esp
pop esi
inc ecx
cmc
mov [ eax - 0x63 ] ebp
pop edx
outsb
lodsb [ esi ]
xor eax [ ebp + edi - 0x5f ]
dec ebp
adc al 0x4e
push 0xffffffb9
sub esp ebx
pop es
mov eax 0xf9753b9
das
sub esi [ ebx - 0x50 ]
scasd [ edi ]
inc eax
fcomip st0
add eax 0xc48fcbba
sti
mov ah 0x22

sub_101c0384
call sub_101e808f
pushfd
clc
cmp dl 0xbd
push [ edi ]
pop [ esp + 0x8 ]
clc
bt bp si
cmp bx di
cmp edi ebx
mov [ esp + 0x4 ] sp
lea esp [ esp + 0x8 ]
ja rwxdata
pushad
mov [ esp + 0xc ] 0x9e
clc
sub edi 0x4
mov [ esp ] 0x3
jmp rwxdata
or al 0xcc
ror al 0x7
sub al 0xe
sub ebx edi
btr di di
add ebx esp
and edi 0x9863883b
bts di ax
rcl al cl
mov edi ebx
sbb al dl
mov al 0x2e
push 0x267c7b80
test dx 0xed8
cmc
[ edi ]
mov [ esp ] 0xad
lea esp [ esp + 0x4 ]
jne rwxdata
push [ edi ]
pop [ esp + 0x1c ]
push edi
cmc
pushfd
cmp edi ebx
pushfd
mov [ esp ] 0xfc
push ebx
lea esp [ esp + 0x2c ]
ja rwxdata
pushfd
jmp sub_101e84ae
setbe al
cwde
movsx ax al
mov [ edi - 0x1 ] 0x0
movzx eax bl
mov al cl
movzx ax dl
push ebx
push 0x94bdf0
lea eax [ rwxdata ]
push esp
mov [ esp + 0x4 ] rwxdata
jmp rwxdata
rcr al cl
setl al
sub ebx edi
inc di
rcl di cl
dec al
add ebx esp
call sub_101ffc2a
push 0x33ab7ae5
mov eax 0xaad57867
sub al 0xac
push ss
mov [ 0xffffffffb6a09fa5 ] eax
test al 0x3b
test ch al
cmp [ edx + 0x1d ] esp
pop esi
inc ecx
cmc
mov [ eax - 0x63 ] ebp
pop edx
outsb
lodsb [ esi ]
xor eax [ ebp + edi - 0x5f ]
dec ebp
adc al 0x4e
push 0xffffffb9
sub esp ebx
pop es
mov eax 0xf9753b9
das
sub esi [ ebx - 0x50 ]
scasd [ edi ]
inc eax
fcomip st0
add eax 0xc48fcbba
sti
mov ah 0x22

mov [ esp ] eax
push 0xf448d4dd
pushfd
push [ esp + 0x8 ]
retn 0xc
sub_101e56f5
call sub_101bfaef
or [ eax - 0x47a8b74a ] 0x87
enter 0x2adb 0xb9
jbe rwxdata
popfd
scasb [ edi ]
sbb al 0x56
push ebp
mov al 0xf9
xor eax 0x2cde2029
shl [ ebp - 0x67 ] cl
or [ ecx - 0x51 ] bl
push ecx
sbb [ edi ] al
sbb [ esi + 0x68 ] dl
sub eax 0x9cae7191
retn
iretd
sub_101e5b8c
pushad
push 0xf7bd1edf
lea esp [ esp + 0x28 ]
jae rwxdata
push 0x28f43749
pushfd
mov [ esp ] di
mov [ esp ] ebx
lea esp [ esp + 0x8 ]
call sub_101184e7
call sub_101ebea7
add [ eax ] al
dec esp
outsd
arpl [ ecx + 0x6c ] sp
inc ecx
insb
insb
outsd
arpl [ eax ] ax
sub_101e5d26
xchg [ esp ] ebp
bt bp 0x6
sar bp 0x6
push edx
lea ebp [ esp + 0x4 ]
aad 0x30
rcr ax cl
sar al cl
mov [ esp ] 0xfa
sub esp 0x14
ror al cl
call sub_101f3d5f
xor [ edi ] ebx
pop edi
inc ebx
fwait
mov bh dl
call 0x80eaa813
imul edi [ edi - 0x7ae95677 ] 0xa13a05fa
jle rwxdata
add al 0x24
push 0x2277879c
push [ esp + 0x8 ]
retn 0xc
mov bh [ ebp + 0x62 ]
int1
dec esi
cld
mov [ 0xffffffffba44821d ] al
and [ edi - 0x39 ] bl
mov bh 0xc3
pushfd
lodsd [ esi ]
outsd
sub_101e6962
pushfd
pushfd
inc dl
test bl bh
call sub_1020cb27
push edi
push ebx
xor bl [ edi + 0x33 ]
xor ch [ esi ]
insb
insb
add [ eax - 0x18 ] ah
[ edi - 0x26acffff ]
sub_101e6a47
mov [ esp ] cx
lea esp [ esp + 0xc ]
call sub_101e7455
pushad
jmp rwxdata
jmp rwxdata
pushfd
lea esp [ esp + 0x24 ]
jne rwxdata
cmp ah 0x6
stc
add ecx 0xffffffff
jmp rwxdata
push ebx
not al
cwde
mov eax [ edx + 0x8 ]
push ebp
pushfd
pushfd
mov [ esp + 0x4 ] esi
lea esp [ esp + 0x10 ]
jmp rwxdata
je rwxdata
bt di si
bt dx 0x1
pushad
clc
or ebx ebx
jmp rwxdata
clc
cmp ch ch
pushfd
push edx
sub eax eax
sub esp 0xfffffff8
pushad
pushfd
pushad
add edx 0x11c
push 0xecb112e8
push eax
lea esp [ esp + 0x4c ]
jmp rwxdata
lea esp [ esp + 0x20 ]
je rwxdata
not di
call sub_101eb978
push 0xbb4c9f7f
mov edi [ esp + 0x4 ]
bswap bx
mov esi [ esp + 0x8 ]
push [ esp ]
mov bl 0x31
not bx
mov [ esp ] 0xfb
mov ebx [ esp + 0x10 ]
jmp rwxdata
lea esi [ esp - 0x3355e86c ]
pushfd
not si
movsx esi dl
mov esi eax
mov [ esp ] 0xda
mov [ esp ] ebx
pushad
movzx ax dl
call sub_10119d09
cwde
insd
mov dl 0x3f
call sub_10119850
sahf
mov esi [ esi + ecx * 2 + 0x5d4c9210 ]
jne rwxdata
sub edx [ 0x12d4efd0 ]
fisub [ esi ]
mov eax [ 0xffffffffd40ac9d5 ]
dec ebx
mov [ 0x44fb30e0 ] eax
push ebp
mov al 0x70
imul edx [ esi - 0x69 ] 0x41f6e565
xchg ebx eax
sar bh 0x6d
pop ebp
or ebp [ ecx ]
imul edx ebp 0x735fa6e6
cmp eax edx
lea ebp [ ebp - 0x68 ]
lahf
mov [ eax + 0x57330840 ] ch
int1
push edi
mov [ ebx ] dl
insb
loope rwxdata
imul edx ebp 0x735fa6e6
or al 0xf2
sub_101e6b3f
pushfd
push 0x4cbaec3b
mov [ esp ] esp
lea esp [ esp + 0xc ]
jae rwxdata
pushfd
inc ecx
lea esp [ esp + 0x4 ]
rcr bl cl
rcl bl cl
xchg ebp eax
xor bl bl
mov eax ebp
bt ebx 0xa
shl bl 0x5
mov bl 0x1
jmp sub_1020d8b7
pushfd
call sub_1020e8ea
dec eax
sar [ esi - 0x4f ] 0x6e
dec eax
mov dh 0xf7
jpe rwxdata
les edx [ ebx + ebp * 4 - 0x750a5967 ]
fwait
test eax 0x5936f8c
xchg eax edi
cmp [ ebx + edx ] ebp
cld
lea ecx [ edi + ecx * 2 + 0x47be74d4 ]
jpo rwxdata
outsd
adc ch al
into
[ edi + eax * 2 + 0x4a ]
mov ebx 0xa08f7c7
pop ds
jb rwxdata
inc ebx
adc [ edi ] ch
sub al 0x53
mov edi 0xcad48a9f
mov ch 0xc6
retn
mov [ 0xffffffffd47f1f3b ] eax
imul ecx [ esi + 0x30 ] 0x47
sbb dh dh
sub [ ebx - 0x725a05fc ] bh
mov cl 0x81
mov ebp 0x5fd3c21d
call [ eax ]
push ebx
mov ah 0xc4
xchg esp eax
stosd [ edi ]
cdq
cmpsb [ esi ] [ edi ]
cmc
mov bl [ ebx - 0x6c907357 ]
add eax 0x2c39f887
adc edi esp
imul edi ebp 0x736f847
test [ ecx + 0x6393bfd5 ] al
add [ esi - 0x47 ] cl
jge rwxdata
push ds
out dx al
push ecx
scasb [ edi ]
xchg ecx eax
in eax 0x9d
xor eax 0x5ede52cf
0xf847fd69 0x736
mov dl 0xe6
fdiv [ edx ]
int3
fwait
add ecx [ edi - 0x63665950 ]
mov [ 0xffffffffb708dee0 ] al
fcom [ es : ecx + 0xd ]
dec esi
pop ss
sub [ ecx - 0x76 ] ch
mov eax [ 0x6a8e4218 ]
jne rwxdata
or esi [ esi ]
mov [ esi - 0x56 ] dl
lodsb [ esi ]
rcl eax 0xaf
in al dx
xchg ebx eax
push esi
mov dh 0x34
test [ edx - 0x33 ] bh
xchg ecx eax
cwde
push ecx
bound esi [ edx + 0x42c591d6 ]
sub_101e7360
mov esi edi
mov [ esp ] 0xaaa6
mov [ esp + 0x4 ] 0xe1
bt ebp edx
test cl dl
sub esi eax
push 0x5bb2643d
push 0x6363153c
[ edi ] [ esi ]
bswap si
pop esi
bswap si
mov esi [ esp + 0x2c ]
push esi
lea esp [ esp + 0x34 ]
jmp rwxdata
pushad
mov [ esp + 0x8 ] 0x24
lea esp [ esp + 0x20 ]
call sub_10201bcd
pushad
mov [ esp ] cl
lea esp [ esp + 0x20 ]
jae rwxdata
jmp rwxdata
cmc
stc
jmp rwxdata
lodsb [ esi ]
push 0xe19feba4
sbb bl 0x4b
not al
clc
rcl bl cl
adc bl 0x6a
shl bl 0x6
xor al 0xf7
sub bl 0x51
jmp rwxdata
pushfd
sub ecx ecx
pushfd
call sub_101ea79e
xchg ebx eax
xchg esi eax
test eax 0xa935b1ad
mov edx 0x7ead1ba3
or ebx esi
push 0x78
neg al
jmp rwxdata
pushfd
pushfd
push 0x8001d5ce
inc al
not bl
sets bl
mov [ esp + 0x8 ] bl
stosb [ edi ]
setbe bl
not bl
jmp rwxdata
mov bl 0x2
lea esp [ esp + 0x10 ]
sub_101e76bd
cmp ch al
xor dl 0xf7
cmc
sub esp 0xfffffff8
jne rwxdata
jmp rwxdata
pushad
neg dl
mov [ esp ] cl
mov [ esp ] 0x7379
pushad
push edx
inc dl
clc
push [ esp + 0x44 ]
popf
mov [ esp ] 0xcf
pushfd
jmp rwxdata
test al bh
neg dl
call sub_101e6962
push ecx
jbe rwxdata
inc esi
pushfd
jmp rwxdata
sub edi [ edi + 0x2d ]
dec edi
push 0xdc19c47b
jecxz rwxdata
mov [ esp ] dx
adc dl dl
lea esp [ esp + 0x4e ]
pushad
push [ esp + 0x20 ]
jg rwxdata
mov edi 0xf7a7ab6a
or [ ebx - 0x40 ] bh
retn
pushfd
push [ esp + 0x4 ]
retn 0x2c
push 0xa41ce554
mov [ esp ] sp
push [ esp + 0x4 ]
retn 0x2c
sub_101e76fc
mov [ esp ] eax
setl al
bswap ax
seto al
push [ ebp - 0x4 ]
cwde
jmp rwxdata
bswap ax
push ebx
pushfd
pop eax
cwde
movsx eax bl
push 0xb
bswap eax
mov ah dh
lea eax [ rwxdata ]
pushfd
mov [ esp ] rwxdata
pushfd
call sub_101bfcaa
sub_101e7711
cmc
clc
cmp ebx 0x203958a0
test al al
call sub_102094d3
push 0xe4550835
movzx ecx [ edi + ecx * 2 ]
rol di 0xa
mov edi [ edx + 0x1c ]
test cx 0x2a3b
cmp ah 0x82
bt ebp edx
pushad
add edi eax
clc
call sub_101e6a33
xor esi 0x22055a3d
mov ecx edi
btr si 0x9
sub ecx ebx
movzx si dl
movsx esi cl
lea esi [ ecx * 8 + 0x623568d9 ]
bt dx ax
mov esi esp
bt sp cx
sub edi 0x4
pushad
bt cx 0x9
pushad
push [ edi ]
pop [ esp + 0x3c ]
jmp rwxdata
cmp dl 0xa0
jmp rwxdata
stc
cmp edi ebx
call sub_1020e8bc
outsd
mov ebp 0x717d42a1
int 0xe
xchg [ edi + 0x424bd27e ] eax
cmp al 0x7d
fstp st1
cmpsb [ esi ] [ edi ]
in eax 0x53
xchg edi eax
jb rwxdata
clc
cmpsb [ esi ] [ edi ]
xchg ebp eax
0x734cfa49 0xc374
sub_101e7cc4
mov [ esp ] 0x7400
lea esp [ esp + 0x54 ]
je rwxdata
push 0x8d7ccccb
mov edi edx
sub esp 0xfffffffc
setbe ch
mov ecx edi
xor al 0x61
call sub_10118d7d
sar [ ebp - 0x1e ] 0x1
jno rwxdata
jmp rwxdata
add bh al
inc esp
and al 0x4
pop esi
push es
mov eax [ 0xc8966e4 ]
and al 0x9c
lea esp [ esp + 0x8 ]
jmp rwxdata
int 0xb2
pop es
xor ch [ edi + edi + 0x6f ]
mov eax [ 0x43fb2820 ]
pop edi
jg rwxdata
bt si dx
pushad
sub al 0x30
bt edi 0x19
test bl 0x59
push ecx
pushfd
jmp rwxdata
inc edx
add al 0x3e
lahf
mov ecx 0x4a301ce9
out dx al
outsd
scasd [ edi ]
dec eax
pop edi
imul esi [ ebx + 0x740a704e ] 0x3
pop esp
push 0xffffff94
fwait
test [ esi - 0x384ff070 ] ch
cwde
loop rwxdata
in al 0x9f
mov edi 0x284665d0
push esi
sbb eax 0x68c5206
fmul [ esi - 0xf ]
add bh [ 0xffffffff9f143770 ]
aam 0xab
test [ ebx + 0x596680df ] bl
mov ebp 0x78c23ca1
push es
dec edx
je rwxdata
xchg ebx eax
jmp rwxdata
pushfd
mov [ esp + 0x8 ] edx
pushad
push ecx
push 0x2a7fdc6f
pushfd
lea esp [ esp + 0x34 ]
jmp sub_1021426f
fdiv [ ebp + 0x9 ]
jns rwxdata
in al dx
inc esp
sbb ebp [ ebp * 8 + 0x477ad3f2 ]
in al 0xe3
out 0x1f al
xor bl dl
mov bl 0x11
mov edx 0x630f4f56
test eax 0x59459a0d
push ebp
sub ch [ ebx + 0x1f ]
inc eax
push ecx
0x9fc0
call j_sub_10202ab6
jge rwxdata
xor [ edi ] cl
mov edx 0xc3f619e7
pop ecx
sub [ edi ] 0x398df2d6
cmpsb [ esi ] [ edi ]
lea edi [ ecx ]
push edx
int 0x42
std
mov eax [ 0xffffffffe72fd61e ]
ja rwxdata
out 0xd9 al
mov cl 0xa5
mov ecx 0x82fd5a45
fadd st6
sub ebx edx
xor al 0xea
pushfd
aad 0xc9
stc
cmpsb [ esi ] [ edi ]
out 0x71 eax
pop ebx
pushad
sub eax 0x8d76c962
and al 0x8
jb rwxdata
cmp bp cx
or al al
call sub_1020b942
pushad
clc
cmp ah 0x5a
push 0xe2404430
lea esp [ esp + 0x24 ]
ja rwxdata
stc
jmp rwxdata
call sub_101e8153
sub_101e808f
call sub_101e900f
clc
xor al 0x2a
sbb al 0xc3
mov ah 0xab
mov esp 0x29c71da1
mov ecx 0xb741830
arpl [ ebp + esi + 0x5b1cc2d0 ] di
add al 0xb5
leave
adc al 0x8a
jo rwxdata
mov [ 0x3e1acdbc ] al
dec edx
jl rwxdata
and [ ss : esi ] bh
sbb [ edi - 0x18 ] 0xb9
test [ ecx ] al
add [ ecx - 0x77 ] dl
jge rwxdata
adc eax 0xcba64aa
push 0x8c3e2036
jb rwxdata
push esi
push edx
lea ebx [ edx + 0x19 ]
arpl [ edx - 0x68 ] dx
dec edx
mov ebx 0x9b24c87b
and al 0x7b
fild [ ebx - 0x4e12900e ]
sub edx esi
iretd
sub_101e8164
mov [ esp + 0x4 ] 0xe541
mov [ esp + 0x4 ] eax
mov [ esp ] 0xef
movsx ax al
pushad
mov [ esp + 0x4 ] bl
push [ ebp - 0x4 ]
pop [ esp + 0x20 ]
bswap ax
bswap ax
pushad
mov [ esp + 0x3c ] ebx
call j_sub_10119fbc
retn
sub_101e84ae
push 0x313d3862
mov esp esi
push 0xaf489b7a
pushad
lea esp [ esp + 0x24 ]
jmp rwxdata
sbb dh 0xfc
btc bx cx
lea edi [ ebp - 0x21ec1969 ]
shl si 0x2
sub eax eax
mov bh 0x34
jmp rwxdata
pop edx
movzx si bl
mov si 0xce7a
pushad
lea esi [ ebp * 2 - 0x641f9294 ]
mov ebx [ esp + 0x20 ]
bswap si
bswap si
xchg di si
mov edi [ esp + 0x24 ]
mov si 0x99de
mov esi [ esp + 0x28 ]
push eax
pushfd
lea esp [ esp + 0x34 ]
jns rwxdata
pushfd
pushfd
pushad
push 0xcf9003f2
mov esp ebp
pushfd
mov ebp [ esp + 0x4 ]
pushfd
pushfd
push [ esp + 0x10 ]
retn 0x1c
mov esp ebp
movsx bp dl
pop ebp
pushfd
push [ esp ]
pushad
mov [ esp ] di
push [ esp + 0x28 ]
retn 0x34
sub_101e84d2
pushfd
lea eax [ rwxdata ]
mov [ esp + 0x4 ] bl
pushfd
mov [ esp + 0x4 ] ax
mov [ esp + 0x44 ] rwxdata
push ebx
mov [ esp + 0x4 ] ch
push 0x7a15d2d8
push 0xc2590b30
push [ eax ]
pop [ esp + 0x4c ]
push [ esp ]
mov [ esp ] 0x14
mov [ esp + 0x8 ] bh
push [ esp + 0x50 ]
retn 0x54
sub_101e8512
sub ecx ebx
cmp bl 0x26
lea esi [ esp + 0x4 ]
clc
cmp ah 0x97
pushfd
sub edi 0x4
jmp rwxdata
pushfd
clc
cmp dl 0xbd
push [ edi ]
pop [ esp + 0x8 ]
clc
bt bp si
cmp bx di
cmp edi ebx
mov [ esp + 0x4 ] sp
lea esp [ esp + 0x8 ]
ja rwxdata
pushad
mov [ esp + 0xc ] 0x9e
clc
sub edi 0x4
mov [ esp ] 0x3
jmp rwxdata
or al 0xcc
ror al 0x7
sub al 0xe
sub ebx edi
btr di di
add ebx esp
and edi 0x9863883b
bts di ax
rcl al cl
mov edi ebx
sbb al dl
mov al 0x2e
push 0x267c7b80
test dx 0xed8
cmc
[ edi ]
mov [ esp ] 0xad
lea esp [ esp + 0x4 ]
jne rwxdata
push [ edi ]
pop [ esp + 0x1c ]
push edi
cmc
pushfd
cmp edi ebx
pushfd
mov [ esp ] 0xfc
push ebx
lea esp [ esp + 0x2c ]
ja rwxdata
pushfd
jmp sub_101e84ae
setbe al
cwde
movsx ax al
mov [ edi - 0x1 ] 0x0
movzx eax bl
mov al cl
movzx ax dl
push ebx
push 0x94bdf0
lea eax [ rwxdata ]
push esp
mov [ esp + 0x4 ] rwxdata
jmp rwxdata
rcr al cl
setl al
sub ebx edi
inc di
rcl di cl
dec al
add ebx esp
call sub_101ffc2a
push 0x33ab7ae5
mov eax 0xaad57867
sub al 0xac
push ss
mov [ 0xffffffffb6a09fa5 ] eax
test al 0x3b
test ch al
cmp [ edx + 0x1d ] esp
pop esi
inc ecx
cmc
mov [ eax - 0x63 ] ebp
pop edx
outsb
lodsb [ esi ]
xor eax [ ebp + edi - 0x5f ]
dec ebp
adc al 0x4e
push 0xffffffb9
sub esp ebx
pop es
mov eax 0xf9753b9
das
sub esi [ ebx - 0x50 ]
scasd [ edi ]
inc eax
fcomip st0
add eax 0xc48fcbba
sti
mov ah 0x22

mov [ esp ] eax
push 0xf448d4dd
pushfd
push [ esp + 0x8 ]
retn 0xc
sub_101e8af7
movsx si cl
push 0xda9ca634
mov esi [ ebp + 0xc ]
lea esp [ esp + 0x8 ]
pushad
call sub_10119d14
into
jg rwxdata
push [ esp + 0x2c ]
add edi [ ebx + ebx * 4 - 0x7881da1c ]
sahf
dec ebx
jb rwxdata
retn 0x30
and al 0x2c
xor esi ebp
sub_101e8c6a
mov [ esp + 0x8 ] 0xc4387eee
pushad
mov [ esp ] 0xf2
pushfd
mov [ esp ] 0x53
lea esp [ esp + 0x2c ]
jmp rwxdata
jmp rwxdata
pushad
mov [ esp + 0x1c ] edx
push 0xb3210dfc
pushad
lea esp [ esp + 0x40 ]
jmp sub_1021426f
sub_101e8f20
lea esp [ esp + 0xc ]
jae rwxdata
mov bh 0x34
jmp rwxdata
call sub_101e989a
xchg esp eax
xor edx edx
sbb [ esi ] eax
mov ecx 0x4d9227e6
loope rwxdata
pop edx
movzx si bl
mov si 0xce7a
pushad
lea esi [ ebp * 2 - 0x641f9294 ]
mov ebx [ esp + 0x20 ]
bswap si
bswap si
xchg di si
mov edi [ esp + 0x24 ]
mov si 0x99de
mov esi [ esp + 0x28 ]
push eax
pushfd
lea esp [ esp + 0x34 ]
jns rwxdata
push ecx
mov esp 0xb857e78c
xchg edi ebp
jecxz rwxdata
pushfd
pushfd
pushad
push 0xcf9003f2
mov esp ebp
pushfd
mov ebp [ esp + 0x4 ]
pushfd
pushfd
push [ esp + 0x10 ]
retn 0x1c
mov esp ebp
movsx bp dl
pop ebp
pushfd
push [ esp ]
pushad
mov [ esp ] di
push [ esp + 0x28 ]
retn 0x34
test [ edi ] 0xcf
js rwxdata
rcr [ ebp + 0x1d ] 0x61
xchg ecx eax
or eax 0x5af90c91
in eax 0xc
stc
leave
salc
pop ss
jne rwxdata
out dx al
cmp esp [ ebx ]
0x15f58a14 0x49ca
jno rwxdata
adc [ esi ] ah
pop ecx
cmpsb [ esi ] [ edi ]
lodsd [ esi ]
add esp [ ecx + esi * 4 + 0x35 ]
sub [ esi ] ebp
push ecx
shl [ ecx + edx * 8 ] 0xe2
fiadd [ eax - 0x9 ]
mov al 0x9a
les edx [ edx + 0x51fd81cc ]
push edx
mov bl 0xfb
sbb al 0xcf
sbb edi [ edi ]
dec ebp
xor dh [ edx ]
insd
jns rwxdata
push ebx
mov al [ 0x6aaabca8 ]
hlt
and esp [ ebx + eax * 8 + 0x24 ]
sub al 0x50
shl [ edx ] 0xdc
xor [ edx ] dh
inc edi
aas
lahf
mov al 0xc5
aam 0xce
enter 0x76dd 0xee
inc edx
inc ecx
sti
mov al 0x75
pop ebp
inc edx
cmp [ edx - 0x2b ] 0xffffffba
lds esp [ edx - 0x14943fc6 ]
push cs
pxor mm6 [ eax ]
scasb [ edi ]
popfd
pop ebp
retn 0x61eb
and [ edx ] esi
stosd [ edi ]
push es
cwde
jne rwxdata
mov edi 0x957c227f
mov [ edx + esi * 4 ] ecx
enter 0x5297 0x8c
push 0x8486b99d
pop ebx
mov edx 0x5d71b5a4
push edx
dec eax
inc edi
mov edx 0x8f7dcf49
xchg bl ah
push ebx
cmp al 0x62
jge rwxdata
fld [ esi + 0x46 ]
call sub_101c02b6
xchg edx eax
jle rwxdata
dec eax
jo rwxdata
sbb ecx 0x66598a14
int3
insb
imul edi [ edx + 0x65 ] 0x8f37ff00
inc esp
and al 0x1c
mov ebp [ ecx + 0x54815e45 ]
push 0x7b
pop edi
xchg edi eax
mov al [ 0xffffffffe41ae1ab ]
add bl ah
mov [ 0xffffffffa145791c ] al
push ds
sbb [ ebx ] 0xffffffef
mov bl 0xb
mov edx 0x8f7dcf49
pushad
mov [ esp + 0xc ] 0x9e
clc
sub edi 0x4
mov [ esp ] 0x3
jmp rwxdata
rcr al cl
setl al
sub ebx edi
inc di
rcl di cl
dec al
add ebx esp
call sub_101ffc2a
push 0x33ab7ae5
mov eax 0xaad57867
sub al 0xac
push ss
mov [ 0xffffffffb6a09fa5 ] eax
test al 0x3b
test ch al
cmp [ edx + 0x1d ] esp
pop esi
inc ecx
cmc
mov [ eax - 0x63 ] ebp
pop edx
outsb
lodsb [ esi ]
xor eax [ ebp + edi - 0x5f ]
dec ebp
adc al 0x4e
push 0xffffffb9
sub esp ebx
pop es
mov eax 0xf9753b9
das
sub esi [ ebx - 0x50 ]
scasd [ edi ]
inc eax
fcomip st0
add eax 0xc48fcbba
sti
mov ah 0x22

push edi
cmc
pushfd
cmp edi ebx
pushfd
mov [ esp ] 0xfc
push ebx
lea esp [ esp + 0x2c ]
ja rwxdata
push [ edi ]
pop [ esp + 0x1c ]
sub_101e900f
lea esp [ esp + 0x14 ]
je rwxdata
sbb dh 0xfc
btc bx cx
lea edi [ ebp - 0x21ec1969 ]
shl si 0x2
sub eax eax
mov bh 0x34
jmp rwxdata
cmp ch 0x19
clc
jmp rwxdata
pop edx
movzx si bl
mov si 0xce7a
pushad
lea esi [ ebp * 2 - 0x641f9294 ]
mov ebx [ esp + 0x20 ]
bswap si
bswap si
xchg di si
mov edi [ esp + 0x24 ]
mov si 0x99de
mov esi [ esp + 0x28 ]
push eax
pushfd
lea esp [ esp + 0x34 ]
jns rwxdata
call sub_102005e0
push ecx
mov eax esi
lea esp [ esp + 0x4 ]
push 0xbb4c9f7f
mov edi [ esp + 0x4 ]
bswap bx
mov esi [ esp + 0x8 ]
push [ esp ]
mov bl 0x31
not bx
mov [ esp ] 0xfb
mov ebx [ esp + 0x10 ]
jmp rwxdata
pushfd
pushfd
pushad
push 0xcf9003f2
mov esp ebp
pushfd
mov ebp [ esp + 0x4 ]
pushfd
pushfd
push [ esp + 0x10 ]
retn 0x1c
mov esp ebp
movsx bp dl
pop ebp
pushfd
push [ esp ]
pushad
mov [ esp ] di
push [ esp + 0x28 ]
retn 0x34
call sub_10119850
sahf
mov esi [ esi + ecx * 2 + 0x5d4c9210 ]
jne rwxdata
sub edx [ 0x12d4efd0 ]
fisub [ esi ]
mov eax [ 0xffffffffd40ac9d5 ]
dec ebx
mov [ 0x44fb30e0 ] eax
push ebp
mov al 0x70
imul edx [ esi - 0x69 ] 0x41f6e565
xchg ebx eax
sar bh 0x6d
pop ebp
or ebp [ ecx ]
imul edx ebp 0x735fa6e6
cmp eax edx
lea ebp [ ebp - 0x68 ]
lahf
mov [ eax + 0x57330840 ] ch
int1
push edi
mov [ ebx ] dl
insb
loope rwxdata
imul edx ebp 0x735fa6e6
or al 0xf2
sub_101e9b16
pushfd
pushfd
lea esp [ esp + 0x2c ]
je rwxdata
clc
cmp ch ch
pushfd
push edx
sub eax eax
sub esp 0xfffffff8
bt di si
bt dx 0x1
pushad
clc
or ebx ebx
jmp rwxdata
pushfd
jmp rwxdata
lea esp [ esp + 0x20 ]
je rwxdata
lea edx [ ebx + 0x4 ]
jmp rwxdata
push 0xbb4c9f7f
mov edi [ esp + 0x4 ]
bswap bx
mov esi [ esp + 0x8 ]
push [ esp ]
mov bl 0x31
not bx
mov [ esp ] 0xfb
mov ebx [ esp + 0x10 ]
jmp rwxdata
lea esi [ esp - 0x3355e86c ]
pushfd
not si
movsx esi dl
mov esi eax
mov [ esp ] 0xda
mov [ esp ] ebx
pushad
movzx ax dl
call sub_10119d09
cwde
insd
mov dl 0x3f
pushfd
movzx esi [ edx + 0x1a ]
push 0xa9bd0fe5
movzx di dl
call sub_10119850
sahf
mov esi [ esi + ecx * 2 + 0x5d4c9210 ]
jne rwxdata
movsx di cl
pushfd
lea esi [ esi + edx + 0x1c ]
call sub_1011898c
cmp edx [ 0x5510e69 ]
pop ecx
fist [ ebx ]
dec ebx
mov [ edx - 0xf ] fs
or eax 0x342a49f1
mov [ 0x440bfc02 ] eax
dec edi
sbb al [ ecx + ebx * 4 - 0x57 ]
jbe rwxdata
sbb ch [ eax - 0x1b ]
bsr ebp [ ecx - 0x549f09a ]
sub al 0x3d
and [ edx ] esi
pushfd
cmpsd [ esi ] [ edi ]
cli
add al 0x5c

sub edx [ 0x12d4efd0 ]
fisub [ esi ]
mov eax [ 0xffffffffd40ac9d5 ]
dec ebx
mov [ 0x44fb30e0 ] eax
push ebp
mov al 0x70
imul edx [ esi - 0x69 ] 0x41f6e565
xchg ebx eax
sar bh 0x6d
pop ebp
or ebp [ ecx ]
imul edx ebp 0x735fa6e6
cmp eax edx
lea ebp [ ebp - 0x68 ]
lahf
mov [ eax + 0x57330840 ] ch
int1
push edi
mov [ ebx ] dl
insb
loope rwxdata
imul edx ebp 0x735fa6e6
or al 0xf2
sub_101e9c01
not bl
sub [ ebp + 0x77a76a75 ] edx
sbb eax [ esi + edi * 2 + 0x58f510a1 ]
movsb [ edi ] [ esi ]
ror [ edx + ebx * 4 - 0xb7a0a1c ] cl
mov bh 0xa
sahf
loope rwxdata
mov ecx 0x91667ba6
jae rwxdata
adc eax 0xf1ae11ad
sbb ebp esp
or [ 0x79c68d78 ] esi
insd
jno rwxdata
push es
pop eax
jg rwxdata
xor [ edi ] cl
xchg bh bl
inc edi
cmp [ ecx ] ch
sti
sahf
shl [ edx - 0x2f ] 0x5b
add eax 0x2efe5239
sbb ebp edx
neg [ esi - 0x462e6a5b ]
cmpsb [ esi ] [ edi ]
jpo rwxdata
in eax dx
jno rwxdata
xchg ebp eax
jne rwxdata
sub [ esi - 0x12968a8f ] 0xb776e871
call sub_101e7360
jb rwxdata
shl esi cl
cmp bl [ esi ]
pop edx
xor [ edi ] ch
mov dl [ ebp - 0x4f ]
idiv [ ebp - 0x2839461e ]
jns rwxdata
xchg ecx eax
jne sub_101e9c01
inc ecx
neg bl
cmc
inc edi
adc [ edi + 0x60 ] bh
not bl
pop eax
push es
pop ss
test al 0x17
mov esi 0xa6757587
cmpsd [ esi ] [ edi ]
ja rwxdata
mov eax [ 0x705bcebd ]
and [ esi + 0x56 ] esp
dec edi
mov ebp cr2
0x3a851aa5 0x7fff
xchg ebp eax
movzx ax dl
daa
xchg bl ah
mov eax ebp
dec bl
mov bl 0x1
clc
xchg [ esp + 0x24 ] esi
or esi esp
shr si cl
shl si cl
fcomi st5
xor [ es : edi ] cl
test [ esi - 0x5f ] bh
adc ch dh
pop eax
sub_101ea79e
mov [ esp ] 0xa4aad93
lea esp [ esp + 0xc ]
call sub_10201bcd
sub [ ebp + 0x61be8372 ] 0xb5
imul esi [ ebx - 0x67923ca5 ] 0xffffffa9
ja rwxdata
dec ebp
stc
cmp eax 0x21bd6ade
adc [ 0x653a41c4 ] ebp
stosb [ edi ]
xchg ebp eax
rcr [ ebp + 0x6976916d ] 0x59
push ss
mov ebp ecx
xchg ecx eax
dec edx
aad 0x87
cwde
test eax 0xcf9cb33
sbb eax 0x4240ffff
push 0x72ad829c
cmp [ esi - 0x4c944a9f ] 0x5b
retn
add al 0x24
xchg ebx eax
lodsd [ esi ]
dec edx
or cl [ ebp - 0x17f3db9c ]
pop ds
je rwxdata
and edi ebx

call sub_101e5b8c
xor edx edx
dec ebp
out 0x79 al
xchg ebp eax
mov ebp ebx
jae rwxdata
add al ch
fnstenv [ ebx - 0x2dcc0001 ]
sub_101ea8a1
pushfd
mov [ esp ] 0x44ac
mov ecx [ esp + 0x18 ]
mov [ esp + 0x4 ] bp
mov esp ebp
lea ebp [ edi * 8 - 0x293258b3 ]
lea ebp [ edx * 4 - 0x415b8ce2 ]
mov bp 0xefbd
bswap bp
pop ebp
pushad
push [ esp + 0x20 ]
retn 0x34
sub_101eae4b
stosb [ edi ]
mov [ esp + 0x4 ] ch
push 0x51d1cc2e
push ebx
mov [ esp + 0x4 ] di
lea esp [ esp + 0x10 ]
jmp rwxdata
pushad
mov [ esp + 0x8 ] 0x24
lea esp [ esp + 0x20 ]
call sub_10201bcd
pushad
mov [ esp ] cl
lea esp [ esp + 0x20 ]
jae rwxdata
jmp rwxdata
cmc
stc
jmp rwxdata
lodsb [ esi ]
push 0xe19feba4
sbb bl 0x4b
not al
clc
rcl bl cl
adc bl 0x6a
shl bl 0x6
xor al 0xf7
sub bl 0x51
jmp rwxdata
pushfd
sub ecx ecx
pushfd
call sub_101ea79e
xchg ebx eax
xchg esi eax
test eax 0xa935b1ad
mov edx 0x7ead1ba3
or ebx esi
push 0x78
neg al
jmp rwxdata
pushfd
pushfd
push 0x8001d5ce
inc al
not bl
sets bl
mov [ esp + 0x8 ] bl
stosb [ edi ]
setbe bl
not bl
jmp rwxdata
mov bl 0x2
lea esp [ esp + 0x10 ]
sub_101eaf4d
pushfd
lea esp [ esp + 0x8 ]
je rwxdata
clc
cmp ch ch
pushfd
push edx
sub eax eax
sub esp 0xfffffff8
bt di si
bt dx 0x1
pushad
clc
or ebx ebx
jmp rwxdata
xchg di si
lea edx [ ebx + 0x4 ]
not di
call sub_101eb978
lea esp [ esp + 0x20 ]
je rwxdata
push 0xbb4c9f7f
mov edi [ esp + 0x4 ]
bswap bx
mov esi [ esp + 0x8 ]
push [ esp ]
mov bl 0x31
not bx
mov [ esp ] 0xfb
mov ebx [ esp + 0x10 ]
jmp rwxdata
lea esi [ esp - 0x3355e86c ]
pushfd
not si
movsx esi dl
mov esi eax
mov [ esp ] 0xda
mov [ esp ] ebx
pushad
movzx ax dl
call sub_10119d09
cwde
insd
mov dl 0x3f
call sub_10119850
sahf
mov esi [ esi + ecx * 2 + 0x5d4c9210 ]
jne rwxdata
sub edx [ 0x12d4efd0 ]
fisub [ esi ]
mov eax [ 0xffffffffd40ac9d5 ]
dec ebx
mov [ 0x44fb30e0 ] eax
push ebp
mov al 0x70
imul edx [ esi - 0x69 ] 0x41f6e565
xchg ebx eax
sar bh 0x6d
pop ebp
or ebp [ ecx ]
imul edx ebp 0x735fa6e6
cmp eax edx
lea ebp [ ebp - 0x68 ]
lahf
mov [ eax + 0x57330840 ] ch
int1
push edi
mov [ ebx ] dl
insb
loope rwxdata
imul edx ebp 0x735fa6e6
or al 0xf2
sub_101eb0cd
push 0x5ac7ac74
push 0xf69321db
lea esp [ esp + 0x50 ]
jne rwxdata
pushfd
jmp sub_101e84ae
mov eax 0x421652a2
not ah
lahf
mov [ edi - 0x1 ] 0x0
movsx ax bl
push esp
lahf
call sub_1020f181
sub_101ebea7
clc
xor eax eax
push 0xd03166b
jmp rwxdata
lea esp [ esp + 0x8 ]
call sub_10201bcd
jmp rwxdata
jae rwxdata
pushfd
not al
lodsb [ esi ]
stc
not al
call sub_101ec1e0
inc bh
mov ebx eax
pushad
cmc
call sub_1020e7f7
and [ edx - 0x44 ] 0x69
jne rwxdata
call sub_101e97b0
imul ecx [ ecx ] 0xffffff95
sbb ch ch
mov dl ch
out 0xaf al
adc [ edx * 2 - 0x5af4c291 ] bh
cli
adc al 0xa
dec ecx
test [ eax - 0x57f12eca ] 0xb7
retn
or eax 0x69f05091
je rwxdata
push ebp
test eax 0x567d8542
push es
fstp [ edx + 0x5 ]
sub dh ch
adc eax 0x8d3529e9
xor [ ebp - 0x4d5a057f ] edi
int 0xad
ror edx 0x1
mov ch 0xa
xchg ebp eax
jns rwxdata
aas
sub ah [ edi - 0x67 ]
das
sar ah 0x25
stc
dec esi
mov edx 0xdac9fa4
insb
mov ebp 0xe95b71ce
inc esi
dec ecx
push 0x54
jmp rwxdata
salc
enter 0x75ed 0x9b
xchg edi eax
sub [ ecx ] bh
mov ebp 0x7cd31302
into
nop
add al 0x5d
dec ebp
in eax 0x67
mov [ 0xffffffff910d910d ] eax
mov cl 0x8e
lahf
push ss
test eax 0x2390d6ea
enter 0x90ff 0xe
xchg ecx eax
aas
cld
mov [ ebx - 0x73affdc4 ] eax
push 0x55
xchg al ah
in eax dx
mov eax [ es : 0x1d41c11d ]
leave
div [ edi ]
out 0xc4 eax
ja rwxdata
push ecx
lea esp [ esp + 0x4 ]
jne rwxdata
jmp rwxdata
inc ebx
mov ebx 0x4d52708e
mov eax [ 0xffffffff840ae2dd ]
add [ ecx ] ch
mov edx [ edi - 0x59 ]
sbb eax [ esp + edi * 4 - 0x2a57483d ]
test eax 0xab13b28c
sbb esp ebp
test [ ecx ] ebx
int 0xf2
loop rwxdata
clc
cmp ch ch
pushfd
push edx
sub eax eax
sub esp 0xfffffff8
bt di si
bt dx 0x1
pushad
clc
or ebx ebx
jmp rwxdata
btc cx 0x2
mov ecx [ ebx ]
pushad
call sub_101ebdcf
push ebx
dec eax
dec esp
push edi
inc ecx
push eax
dec ecx
insb
insb
add [ esi + 0x66 ] bh
mov eax 0xb5e9f4ea
mov [ ebx + ebx ] 0x9
mov [ eax + 0x31 ] edx
add [ eax ] al
int 0x12
mov ah 0x2b
insb
jno rwxdata
lea esp [ esp + 0x20 ]
je rwxdata
jne rwxdata
call 0x2ee0f972
pop edx
movzx si bl
mov si 0xce7a
pushad
lea esi [ ebp * 2 - 0x641f9294 ]
mov ebx [ esp + 0x20 ]
bswap si
bswap si
xchg di si
mov edi [ esp + 0x24 ]
mov si 0x99de
mov esi [ esp + 0x28 ]
push eax
pushfd
lea esp [ esp + 0x34 ]
jns rwxdata
push 0xbb4c9f7f
mov edi [ esp + 0x4 ]
bswap bx
mov esi [ esp + 0x8 ]
push [ esp ]
mov bl 0x31
not bx
mov [ esp ] 0xfb
mov ebx [ esp + 0x10 ]
jmp rwxdata
lea esi [ esp - 0x3355e86c ]
pushfd
not si
movsx esi dl
mov esi eax
mov [ esp ] 0xda
mov [ esp ] ebx
pushad
movzx ax dl
call sub_10119d09
cwde
insd
mov dl 0x3f
setbe ch
mov ecx edi
xor al 0x61
call sub_10118d7d
sar [ ebp - 0x1e ] 0x1
jno rwxdata
cmc
lea eax [ ecx * 2 + 0x2e37be9d ]
rcr ax 0xf
shrd ax ax 0xe
xor edx edx
cmp sp bp
aaa
pushfd
sar ah cl
mov eax edx
jmp rwxdata
pushfd
pushfd
pushad
push 0xcf9003f2
mov esp ebp
pushfd
mov ebp [ esp + 0x4 ]
pushfd
pushfd
push [ esp + 0x10 ]
retn 0x1c
mov esp ebp
movsx bp dl
pop ebp
pushfd
push [ esp ]
pushad
mov [ esp ] di
push [ esp + 0x28 ]
retn 0x34
call sub_10119850
sahf
mov esi [ esi + ecx * 2 + 0x5d4c9210 ]
jne rwxdata
add bh al
inc esp
and al 0x4
pop esi
push es
mov eax [ 0xc8966e4 ]
and al 0x9c
lea esp [ esp + 0x8 ]
jmp rwxdata
int 0xb2
pop es
xor ch [ edi + edi + 0x6f ]
mov eax [ 0x43fb2820 ]
pop edi
jg rwxdata
dec al
and al bh
shl al cl
add edi 0x1
not al
shr al 0x1
mov al [ edi ]
pushad
cmp cx 0x713
pushfd
test al al
mov [ esp + 0xc ] si
lea esp [ esp + 0x28 ]
je rwxdata
sub edx [ 0x12d4efd0 ]
fisub [ esi ]
mov eax [ 0xffffffffd40ac9d5 ]
dec ebx
mov [ 0x44fb30e0 ] eax
push ebp
mov al 0x70
imul edx [ esi - 0x69 ] 0x41f6e565
xchg ebx eax
sar bh 0x6d
pop ebp
or ebp [ ecx ]
imul edx ebp 0x735fa6e6
cmp eax edx
lea ebp [ ebp - 0x68 ]
lahf
mov [ eax + 0x57330840 ] ch
int1
push edi
mov [ ebx ] dl
insb
loope rwxdata
push ecx
pushfd
jmp rwxdata
inc edx
add al 0x3e
lahf
mov ecx 0x4a301ce9
out dx al
outsd
scasd [ edi ]
dec eax
pop edi
imul esi [ ebx + 0x740a704e ] 0x3
pop esp
push 0xffffff94
fwait
test [ esi - 0x384ff070 ] ch
cwde
loop rwxdata
push 0x8d7ccccb
mov edi edx
sub esp 0xfffffffc
cmp ch dl
pushfd
sub al 0x30
push 0xe9ce37e3
push esi
pushfd
lea esp [ esp + 0x10 ]
jmp rwxdata
imul edx ebp 0x735fa6e6
or al 0xf2
pushfd
mov [ esp + 0x8 ] edx
pushad
push ecx
push 0x2a7fdc6f
pushfd
lea esp [ esp + 0x34 ]
jmp sub_1021426f
fdiv [ ebp + 0x9 ]
jns rwxdata
in al dx
inc esp
sbb ebp [ ebp * 8 + 0x477ad3f2 ]
in al 0xe3
out 0x1f al
xor bl dl
mov bl 0x11
mov edx 0x630f4f56
test eax 0x59459a0d
push ebp
sub ch [ ebx + 0x1f ]
inc eax
push ecx
0x9fc0
pushad
mov [ esp + 0x8 ] 0xf7b4
cmp ah 0x8c
test bx 0xf664
cmp al 0x9
lea esp [ esp + 0x20 ]
pushad
call sub_1020c6e6
clc
rol al 0x4
push ebx
not al
jmp rwxdata
push edx
int 0x42
std
mov eax [ 0xffffffffe72fd61e ]
ja rwxdata
jmp rwxdata
out 0xd9 al
mov cl 0xa5
mov ecx 0x82fd5a45
fadd st6
sub ebx edx
xor al 0xea
pushfd
aad 0xc9
stc
cmpsb [ esi ] [ edi ]
out 0x71 eax
pop ebx
pushad
sub eax 0x8d76c962
and al 0x8
jb rwxdata
dec al
stc
pushfd
test cl 0x4b
not al
cmp dl 0x54
test ax 0x4d17
add al 0x79
push ebx
cmp al [ edi ]
cwde
not al
lea esp [ esp + 0x34 ]
jpe rwxdata
cmp bp cx
or al al
call sub_1020b942
pushad
clc
cmp ah 0x5a
push 0xe2404430
lea esp [ esp + 0x24 ]
ja rwxdata
push 0x1c588f89
setbe ah
lea edi [ edi + 0x1 ]
lea eax [ ecx * 2 - 0x48a8b91 ]
lea eax [ esp - 0x79109c78 ]
pop eax
lea eax [ eax * 2 + 0x4341f52a ]
pop eax
push ecx
push 0x72711611
lea esp [ esp + 0x8 ]
ja rwxdata
cwde
lea edi [ edi + 0x1 ]
bswap ax
movzx ax dl
jb rwxdata
stc
jmp rwxdata
jmp rwxdata
push 0x84564d49
push 0x666294db
lea esp [ esp + 0x8 ]
jb rwxdata
pushfd
mov eax [ esp + 0x4 ]
mov [ esp ] 0x9bf9
pushad
jmp j_sub_1020cd09
pop eax
jl rwxdata
call sub_101e8153
test bl 0xa6
cmp si dx
pushfd
cmp ecx [ ebp - 0x4 ]
mov [ esp ] 0x51
pushad
call sub_10202c7f
out dx al
xchg [ eax ] bl
xchg [ eax ] edi
xchg edx eax
mov ebp cs
mov ch 0x79
bound esi [ edx ]
push ss
pushfd
call sub_10200ed7
shl [ edx + edi * 8 ] 0xa4
cli
cmp [ esi ] al
pop ss
out dx al
push ecx
mov ebp 0x4cfc9d00
sti
arpl bx dx
stosd [ edi ]
lodsb [ esi ]
shl [ edi ] cl
bt dx 0x1
test ebx esp
cmp [ edi - 0x1 ] 0x0
jmp rwxdata
pushad
lea esp [ esp + 0x20 ]
ja rwxdata
pushfd
pushad
push edx
lea esp [ esp + 0x28 ]
ja rwxdata
push edi
lea esp [ esp + 0x4 ]
jne rwxdata
pushad
jmp rwxdata
pushfd
lea esp [ esp + 0x4 ]
jb rwxdata
pushad
call sub_10119d14
into
jg rwxdata
bsf di sp
shl di 0xc
cmp al 0xff
push esi
mov edi [ edx + 0x24 ]
cmp ax 0x5e62
bt ecx 0x11
bt dx sp
add edi eax
cmp dl ah
movzx ecx [ edi + ecx * 2 ]
shl di 0x4
call sub_10119b53
call 0x26866d3a
pop eax
lea esp [ esp + 0x20 ]
jb rwxdata
clc
call sub_101f4c13
inc esi
dec edi
push eax
jb rwxdata
push [ esp + 0x2c ]
add edi [ ebx + ebx * 4 - 0x7881da1c ]
sahf
dec ebx
jb rwxdata
cmc
cmp [ edi - 0x1 ] 0x0
jmp rwxdata
pushad
sbb eax 0xf98ad561
cwde
pop es
sbb [ eax - 0x627043fa ] bl
lodsd [ esi ]
and [ ecx - 0x5c ] 0x939685fa
int3
sub esi [ esi * 2 - 0x70c44dd ]
mov al [ 0xffffffffb18eb692 ]
0x46e93595 0x2ed9
retn 0x30
and al 0x2c
xor esi ebp
pushfd
mov [ esp ] ah
mov [ esp ] 0x56
lea esp [ esp + 0x4 ]
jne rwxdata
shl di cl
rcr di cl
mov edi [ edx + 0x24 ]
test bx 0x934a
pushfd
add edi eax
pushad
mov [ esp ] al
pushfd
mov [ esp ] 0xc9
movzx ecx [ edi + ecx * 2 ]
neg di
mov edi [ edx + 0x1c ]
cmc
mov [ esp + 0x10 ] dx
cmp cl 0x3e
push ebp
add edi eax
mov [ esp + 0x4 ] ah
cmp esp 0xd348009e
jmp rwxdata
mov edi [ edi + ecx * 4 ]
stc
clc
test edi edi
call sub_1020eecd
ror al 0x4
jmp sub_101e7cbf
sub_101ec1e0
xor al 0xf7
bt bx cx
test si dx
cmc
cmp dx 0xdc18
neg al
mov [ esp ] 0x35
push [ esp + 0x4 ]
inc al
clc
cmc
shr eax 0x1
pushad
call sub_101f323c
sub al 0x69
mov eax 0x7f6ef186
xchg [ esi - 0x602096a6 ] edx
add [ ebx - 0x64 ] 0x6e
nop
add bl ah
sahf
loopne rwxdata
int3
sub_101ec374
and ebx 0xfff
call sub_101e745e
pop eax
cmp eax 0x6f3e8162
xchg esi eax
cmpsd [ esi ] [ edi ]
cmp eax 0xc8985d01
dec esp
cld
dec ebx
adc esi [ ebx ]
lodsb [ esi ]
cmp ah [ ebx + edx * 8 + 0x79c6a08c ]
int 0x54
0x120b
sub_101f10da
lea esp [ esp + 0x48 ]
jne rwxdata
setbe ch
mov ecx edi
xor al 0x61
call sub_10118d7d
sar [ ebp - 0x1e ] 0x1
jno rwxdata
mov ah 0x1b
aam 0xc1
rol al cl
pushfd
sub edx edx
pushad
movsx eax dl
btr ax 0x3
mov eax edx
pushad
add edi 0x1
rcr al 0x2
bt si si
rcr al cl
mov al [ edi ]
call sub_101e7711
leave
adc al 0xcb
mov edx ebx
adc ecx ebx
or al 0x8d
popad
push ebp
cli
and al 0x53
or al 0x93
sub al 0x45
stc
mov [ 0x73bde2dd ] al
xchg edx eax
movsb [ edi ] [ esi ]
fidivr [ ecx - 0x3a ]
fadd st6
cmp [ esi ] eax
jne rwxdata
add bh al
inc esp
and al 0x4
pop esi
push es
mov eax [ 0xc8966e4 ]
and al 0x9c
lea esp [ esp + 0x8 ]
jmp rwxdata
int 0xb2
pop es
xor ch [ edi + edi + 0x6f ]
mov eax [ 0x43fb2820 ]
pop edi
jg rwxdata
dec edi
nop
in al 0xda
xchg [ cs : eax ] bh
cmpsd [ esi ] [ edi ]
pop ebp
loope rwxdata
sbb al 0xc3
mov edi 0xfac410ff
or eax [ esi - 0x48254de7 ]
frstor [ ebp - 0xdf93ae7 ]
jmp rwxdata
push ecx
pushfd
jmp rwxdata
inc edx
add al 0x3e
lahf
mov ecx 0x4a301ce9
out dx al
outsd
scasd [ edi ]
dec eax
pop edi
imul esi [ ebx + 0x740a704e ] 0x3
pop esp
push 0xffffff94
fwait
test [ esi - 0x384ff070 ] ch
cwde
loop rwxdata
xchg esp eax
scasd [ edi ]
mov ah 0x8a
adc al 0xac
xchg edx eax
xor ecx [ ebx - 0x3243fd64 ]
add al 0x9b
mov al 0x9f
[ edi ]
mov esp 0xfae5cfdb
or edx [ eax + 0xfefb00f ]
nop
jpe rwxdata
in al dx
pushfd
mov [ esp + 0x8 ] edx
pushad
push ecx
push 0x2a7fdc6f
pushfd
lea esp [ esp + 0x34 ]
jmp sub_1021426f
fdiv [ ebp + 0x9 ]
jns rwxdata
in al dx
inc esp
sbb ebp [ ebp * 8 + 0x477ad3f2 ]
in al 0xe3
out 0x1f al
xor bl dl
mov bl 0x11
mov edx 0x630f4f56
test eax 0x59459a0d
push ebp
sub ch [ ebx + 0x1f ]
inc eax
push ecx
0x9fc0
mov dl 0xe9
xchg esi eax
ja rwxdata
cmpsb [ esi ] [ edi ]
add [ ecx ] dl
adc dh [ cs : esi + 0x22fcfae9 ]
fisub [ eax ]
adc ch [ edi - 0x19277ec8 ]
daa
xor [ esi - 0x14 ] ch
enter 0x221c 0x2f
mov ebx [ edx + eax * 4 ]
xchg ebx eax
xor ecx [ edx ]
mov esp 0xdbf60063
pop es
jge rwxdata
push edx
int 0x42
std
mov eax [ 0xffffffffe72fd61e ]
ja rwxdata
mov [ edx - 0x20 ] ah
stosb [ edi ]
push ecx
lodsd [ esi ]
pushad
sahf
add [ edi + 0x23 ] bh
pushfd
pop eax
lodsd [ esi ]
test eax 0x87839c96
pop eax
fadd [ ebx ]
adc al 0x51
out dx al
push [ edi - 0x1f ]
out dx eax
sub ecx [ edx - 0x73 ]
push ecx
dec ebp
push ecx
xchg edx eax
out dx eax
xchg esi eax
aas
rcl [ eax + 0x41b763a2 ] cl
popfd
dec ecx
xchg ebp eax
push ecx
lea edi [ ebp - 0x7110b05e ]
out 0xd9 al
mov cl 0xa5
mov ecx 0x82fd5a45
fadd st6
sub ebx edx
xor al 0xea
pushfd
aad 0xc9
stc
cmpsb [ esi ] [ edi ]
out 0x71 eax
pop ebx
pushad
sub eax 0x8d76c962
and al 0x8
jb rwxdata
cmp bp cx
or al al
call sub_1020b942
pushad
clc
cmp ah 0x5a
push 0xe2404430
lea esp [ esp + 0x24 ]
ja rwxdata
stc
jmp rwxdata
call sub_101e8153
sub_101f139f
mov [ esp ] 0x8b
or ecx ecx
mov [ esp ] 0xa8e9
pushfd
push esp
lea esp [ esp + 0xc ]
je rwxdata
pushfd
pop esi
jmp rwxdata
btr edi edx
movzx di al
pushad
btr edi 0xe
add [ ebp - 0x4 ] ecx
bts di 0x2
sub ecx 0x8
and bh cl
stc
shr ecx 0x1
or di bp
dec bl
add di bp
mov edi [ esi ]
adc bl 0x7f
rol bl cl
add edi [ ebp + 0x10 ]
bt dx 0x5
add esi 0x8
add esp 0x20
bts bx si
cmp ecx 0x993fdf65
neg bh
mov bx [ esi ]
pushad
call sub_101bfaea
add bh [ edx + 0x53285624 ]
dec esp
lea ebp [ esi - 0x298de680 ]
mov ecx 0x8da21ce5
xchg edx eax
dec esp
popfd
and ah [ eax + 0x6932d31e ]
push ss
sub bh [ ecx ]
inc esi
and ah bl
sbb ebx 0x33
jmp rwxdata
movzx ebx bl
pop esi
pushad
push esp
mov edi [ esp + 0x24 ]
call sub_10118e9f
and al 0xb3
sub ebx [ edi ]
inc eax
0x5b4a9545 0x350a
sbb al 0xb5
0x1b3a912a 0xa513
sub_101f1cbc
pushf
shl dl 0x1
dec dl
mov dl [ esi ]
bt edx eax
not dl
pushfd
call sub_101e76bd
add [ eax ] al
dec esp
outsd
outsd
imul esi [ ebp + 0x70 ] 0x41
arpl [ ebx + 0x6f ] sp
jne rwxdata
sbb dh 0x78
je rwxdata
inc esi
push edi
imul esp [ ecx + eax * 2 ] 0xeac97593
cmc
bound ebx [ 0x4d6cb32e ]
clc
enter 0x67e1 0x7b
or [ ebx + esi * 4 + 0x63a20b73 ] 0x57
sub_101f2b73
lea esi [ esi + edx + 0x1c ]
mov edi [ esp ]
pop edi
bswap edi
bswap di
mov edi [ ebp + 0x8 ]
jmp rwxdata
call j_sub_101e6a47
call sub_1020781a
stc
or al 0x13
mov bh dh
cli
or ecx [ ebp + edx * 4 + 0x2e ]
fidiv [ ebx + 0x7b24b895 ]
sub_101f2c42
push esi
pushfd
lea esp [ esp + 0x10 ]
jb rwxdata
pushad
pushad
jmp rwxdata
pushad
push [ esp + 0x1c ]
push [ esp + 0x24 ]
retn 0x28
pushfd
lea esp [ esp + 0x44 ]
call sub_10201bcd
call sub_1020a3f0
and al 0x71
mov bh dl
adc al 0xb
dec esp
lodsb [ esi ]
push ebp
push ebx
mov bl 0x95
mov eax 0xcbcab94c
hlt
sub_101f323c
lea esp [ esp + 0x30 ]
je rwxdata
movsx si dl
pop ebx
jmp rwxdata
pushad
pushfd
push esi
mov [ esp + 0x4 ] 0x6f
adc ecx ecx
pushfd
push edi
pushfd
pushfd
lea esp [ esp + 0x38 ]
jmp rwxdata
pushfd
not si
pop ebp
pop edi
pushad
pop esi
jmp rwxdata
inc bl
pushfd
inc ecx
lea esp [ esp + 0x4 ]
pushfd
inc ecx
lea esp [ esp + 0x4 ]
rcr bl cl
rcl bl cl
xchg ebp eax
xor bl bl
mov eax ebp
bt ebx 0xa
shl bl 0x5
mov bl 0x1
jmp sub_1020d8b7
mov esi [ esp + 0x1c ]
mov bp si
push ecx
mov ebp [ esp + 0x24 ]
push 0x6471b1f2
push edi
push [ esp + 0x30 ]
retn 0x3c
sub_101f34da
jmp rwxdata
mov [ esp + 0x4 ] al
push [ edi ]
pop [ esp + 0x20 ]
cmp ebp edx
clc
mov [ esp ] ecx
pushad
cmp edi ebx
push [ esp + 0x8 ]
lea esp [ esp + 0x44 ]
ja rwxdata
pushad
mov [ esp + 0xc ] 0x9e
clc
sub edi 0x4
mov [ esp ] 0x3
jmp rwxdata
pushfd
sub al 0x47
sub ebx edi
movsx di cl
ror edi cl
shr al cl
cmc
sub esp 0xfffffffc
add ebx esp
pushfd
xor edi 0x71307020
lea edi [ esi * 2 + 0x1443515d ]
bsr di bx
mov edi ebx
sub al al
ror al 0x3
mov al 0x2e
pushad
pushad
clc
mov [ esp + 0x1c ] 0x47fe
[ edi ]
call j_sub_101eb0cd
in al 0x45
cli
cmp [ esi ] al
les ebx [ edx - 0x65 ]
xchg esi eax
xchg edx eax
mov [ ebp - 0x5 ] cl
aaa
xor ch [ edi + 0x5bc685fa ]
retn
push [ edi ]
pop [ esp + 0x1c ]
push edi
cmc
pushfd
cmp edi ebx
pushfd
mov [ esp ] 0xfc
push ebx
lea esp [ esp + 0x2c ]
ja rwxdata
rcr al cl
setl al
sub ebx edi
inc di
rcl di cl
dec al
add ebx esp
call sub_101ffc2a
push 0x33ab7ae5
mov eax 0xaad57867
sub al 0xac
push ss
mov [ 0xffffffffb6a09fa5 ] eax
test al 0x3b
test ch al
cmp [ edx + 0x1d ] esp
pop esi
inc ecx
cmc
mov [ eax - 0x63 ] ebp
pop edx
outsb
lodsb [ esi ]
xor eax [ ebp + edi - 0x5f ]
dec ebp
adc al 0x4e
push 0xffffffb9
sub esp ebx
pop es
mov eax 0xf9753b9
das
sub esi [ ebx - 0x50 ]
scasd [ edi ]
inc eax
fcomip st0
add eax 0xc48fcbba
sti
mov ah 0x22

sub_101f35c2
lea esp [ esp + 0xc ]
jb rwxdata
mov bh 0x34
jmp rwxdata
jmp rwxdata
pop edx
movzx si bl
mov si 0xce7a
pushad
lea esi [ ebp * 2 - 0x641f9294 ]
mov ebx [ esp + 0x20 ]
bswap si
bswap si
xchg di si
mov edi [ esp + 0x24 ]
mov si 0x99de
mov esi [ esp + 0x28 ]
push eax
pushfd
lea esp [ esp + 0x34 ]
jns rwxdata
cmp eax [ ebp - 0x10 ]
call sub_101bf7db
nop
or [ esi + 0x1a24ca3b ] dh
pushfd
pushfd
pushad
push 0xcf9003f2
mov esp ebp
pushfd
mov ebp [ esp + 0x4 ]
pushfd
pushfd
push [ esp + 0x10 ]
retn 0x1c
mov esp ebp
movsx bp dl
pop ebp
pushfd
push [ esp ]
pushad
mov [ esp ] di
push [ esp + 0x28 ]
retn 0x34
sub ecx [ edx + 0x74d477e4 ]
inc [ eax - 0x3f60275a ]
and ebx [ edi - 0x20f36d48 ]
inc eax
mov [ 0xffffffffb708371c ] eax
call 0xfffffffff45a66ee
sbb eax 0x3fea74a1
xchg ebp eax
sub [ eax + 0x501fef1e ] ebx
ja rwxdata
sub bl [ eax + 0x5c026726 ]
popfd
push eax
idiv [ ebp - 0x6db3c9de ]
shl esi cl
stc
out 0x5d al
mov edx 0x957c584
aam 0x4b
push esi
dec eax
imul esi [ ebx - 0x2e1227fa ] 0xffffffa9
mov dh 0xe8
xchg edi eax
mov al [ 0x5d71d0bf ]
outsd
sub eax 0x9e6762
add [ eax ] al
add [ eax + 0x11 ] dh
adc [ eax + esi * 2 ] dl
adc [ eax ] edx
sbb [ eax + 0x11 ] dh
adc [ ebx + esi * 2 + 0x1e ] cl
adc [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + 0x10201a ] dh
add [ eax ] al
add dh dh
shl ch 0x1
cmp dl 0xff
push ebx
jmp rwxdata
jmp rwxdata
xor al 0xf7
push [ esp + 0x4 ]
bt bx si
neg al
call sub_101eb67c
dec edx
fucomp st0
dec esi
xlat
xchg edx eax
dec esi
mov [ ebp - 0x6a ] edx
cwde
lodsd [ esi ]
std
add [ ebp + 0x7b ] edx
pushad
and [ 0xfffffffff3b9d67d ] 0xbc
push cs
cli
insd
jb rwxdata
lds edx [ edi + 0x9 ]
sub_101f3782
pushfd
mov [ esp + 0x28 ] rwxdata
call sub_1020cce5
jmp rwxdata
mov ebx eax
pushad
stc
cmp [ edi ] 0x23
jmp rwxdata
pushad
push eax
call sub_101f10da
adc al 0x15
sub dh [ ebx - 0x6e ]
jmp 0x7cc49405
sub_101f398c
push [ esp + 0x8 ]
lea esp [ esp + 0x28 ]
call sub_1020eee9
pushfd
pushfd
mov esp esi
pushad
lea esp [ esp + 0x20 ]
jmp rwxdata
mov bh 0x34
jmp rwxdata
pop edx
movzx si bl
mov si 0xce7a
pushad
lea esi [ ebp * 2 - 0x641f9294 ]
mov ebx [ esp + 0x20 ]
bswap si
bswap si
xchg di si
mov edi [ esp + 0x24 ]
mov si 0x99de
mov esi [ esp + 0x28 ]
push eax
pushfd
lea esp [ esp + 0x34 ]
jns rwxdata
pushfd
pushfd
pushad
push 0xcf9003f2
mov esp ebp
pushfd
mov ebp [ esp + 0x4 ]
pushfd
pushfd
push [ esp + 0x10 ]
retn 0x1c
mov esp ebp
movsx bp dl
pop ebp
pushfd
push [ esp ]
pushad
mov [ esp ] di
push [ esp + 0x28 ]
retn 0x34
sub_101f3c02
lea esp [ esp + 0x48 ]
je rwxdata
sbb dh 0xfc
btc bx cx
lea edi [ ebp - 0x21ec1969 ]
shl si 0x2
sub eax eax
mov bh 0x34
jmp rwxdata
adc si sp
push ebp
mov esi [ eax + 0x3c ]
and edx 0x38c64547
add edx edi
add esi eax
stc
pushfd
inc dh
mov edx [ esi + 0x78 ]
mov [ esp + 0x4 ] 0x27
pushfd
test edx edx
jmp rwxdata
pop edx
movzx si bl
mov si 0xce7a
pushad
lea esi [ ebp * 2 - 0x641f9294 ]
mov ebx [ esp + 0x20 ]
bswap si
bswap si
xchg di si
mov edi [ esp + 0x24 ]
mov si 0x99de
mov esi [ esp + 0x28 ]
push eax
pushfd
lea esp [ esp + 0x34 ]
jns rwxdata
call sub_101bf531
bt si dx
pushad
sub al 0x30
bt edi 0x19
test bl 0x59
pushfd
pushfd
pushad
push 0xcf9003f2
mov esp ebp
pushfd
mov ebp [ esp + 0x4 ]
pushfd
pushfd
push [ esp + 0x10 ]
retn 0x1c
mov esp ebp
movsx bp dl
pop ebp
pushfd
push [ esp ]
pushad
mov [ esp ] di
push [ esp + 0x28 ]
retn 0x34
in al 0x9f
mov edi 0x284665d0
push esi
sbb eax 0x68c5206
fmul [ esi - 0xf ]
add bh [ 0xffffffff9f143770 ]
aam 0xab
test [ ebx + 0x596680df ] bl
mov ebp 0x78c23ca1
push es
dec edx
je rwxdata
xchg ebx eax
jmp rwxdata
call j_sub_10202ab6
jge rwxdata
xor [ edi ] cl
mov edx 0xc3f619e7
pop ecx
sub [ edi ] 0x398df2d6
cmpsb [ esi ] [ edi ]
lea edi [ ecx ]
sub_101f3d5f
mov [ esp ] esi
call sub_1020eb0b
pushad
lea esp [ esp + 0x28 ]
jae rwxdata
inc bl
pushfd
inc ecx
lea esp [ esp + 0x4 ]
pushfd
inc ecx
lea esp [ esp + 0x4 ]
rcr bl cl
rcl bl cl
xchg ebp eax
xor bl bl
mov eax ebp
bt ebx 0xa
shl bl 0x5
mov bl 0x1
jmp sub_1020d8b7
pushfd
jmp rwxdata
cmp ah 0x5
pushad
call sub_1020afda
sub_101f4c13
pushad
clc
cmp [ edi - 0x1 ] 0x0
mov [ esp + 0x8 ] 0xd256
lea esp [ esp + 0x24 ]
jne rwxdata
pushad
call sub_10119d14
into
jg rwxdata
xor di 0xe6ab
add di dx
sar di 0xc
mov edi [ edx + 0x24 ]
bt ax ax
pushfd
add edi eax
cmc
movzx ecx [ edi + ecx * 2 ]
lea esp [ esp + 0x4 ]
rcl di 0xf
mov edi [ edx + 0x1c ]
cmc
add edi eax
cmp sp 0xb655
mov edi [ edi + ecx * 4 ]
call sub_10200c6a
sub al 0xd9
inc esi
sahf
mov eax 0xb46ab7a6
cmc
inc ecx
inc esp
pop es
push 0x7a0bcabf
xor al 0x35
adc eax esp
sbb al [ ebp + 0x7826193a ]
and [ es : esi + 0x64 ] ebx
push [ esp + 0x2c ]
add edi [ ebx + ebx * 4 - 0x7881da1c ]
sahf
dec ebx
jb rwxdata
sbb [ esi ] esp
js rwxdata
scasb [ edi ]
test al 0xb6
or al 0xb2
mov esp 0xc4b36b63
movsb [ edi ] [ esi ]
mov edx 0x9fd10ecb
test bl bl
add eax 0x3f26cc2
lahf
mov ebp 0x39828ea4
inc ebp
retn 0x30
and al 0x2c
xor esi ebp
push esi
pop eax
insd
cmp ah [ ebp + 0x68b1c11e ]
inc ecx
inc esp
pminsw mm3 mm6
fidiv [ ecx + 0x40decca9 ]
push ecx
cld
xor [ ebx + edx * 8 + 0x3f ] 0x5
or eax 0x9403e04c
0xd1f28d2b 0x1fb7
cmp [ ecx ] 0x45
pop edx
sbb eax 0x84869942
jpe rwxdata
and [ esi + 0x64 ] ebx
sub_101ff6bb
mov [ esp + 0x24 ] 0x2832ca97
pushad
mov [ esp + 0xc ] si
mov [ esp + 0x4 ] 0x2e
mov [ esp + 0x40 ] 0xc811a00e
push esp
push [ esp ]
push 0x9bc4dfb7
mov [ esp ] 0xb9
lea esp [ esp + 0x4c ]
jmp rwxdata
jmp rwxdata
push esp
push 0x20ba6e1d
mov [ esp + 0x4 ] edx
pushfd
pushfd
pushad
lea esp [ esp + 0x2c ]
jmp sub_1021426f
sub_101ffc2a
mov edi ebx
sbb al al
and al dh
bt ax si
mov al 0x2e
pushfd
stc
lea esp [ esp + 0x8 ]
jpo rwxdata
cmp bp di
jmp rwxdata
[ edi ]
jns rwxdata
[ edi ]
jmp rwxdata
call j_sub_101f0936
jne rwxdata
pushad
lea esp [ esp + 0x20 ]
jne rwxdata
aam 0xdd
rol [ edx ] 0x58
inc edi
sbb al 0x9f
call [ ebp + ebx - 0x7e ]
0xe9fceb1a 0x595a
sub al 0xfb
dec ebp
test [ eax - 0x5d ] 0xc3b8a77c
fcom [ esi - 0x18 ]
pop ds
rcl ah 0xdd
pushfd
jmp sub_101e84ae
not al
setbe ah
not ax
jmp rwxdata
movsx eax bl
jmp rwxdata
mov [ edi - 0x1 ] 0x0
bswap ax
pushfd
pop eax
push ebx
push 0x6ae0448f
lea eax [ rwxdata ]
call sub_101e8ace
pop edx
ror [ ebx + ecx * 8 - 0x647394c ] cl
lodsb [ esi ]
push edx
jpo rwxdata
lahf
movsx ax cl
mov [ edi - 0x1 ] 0x0
call sub_10119a5c
pushfd
push [ esp + 0x4 ]
retn 0x2c
sub_101ffd12
push edx
push [ esp + 0x4 ]
xchg [ esp + 0x3c ] eax
bswap ax
push [ esp ]
mov [ esp + 0x3c ] 0xb
push 0xddfb6b61
setle al
lea esp [ esp + 0x40 ]
jne rwxdata
mov ax 0x48fa
lea eax [ rwxdata ]
jmp rwxdata
lea eax [ rwxdata ]
pushad
pushfd
push [ esp + 0x8 ]
mov [ esp + 0x24 ] rwxdata
mov [ esp ] 0xb0
push [ eax ]
pop [ esp + 0x20 ]
push [ esp ]
push [ esp + 0x24 ]
retn 0x28
push rwxdata
call sub_102003b6
adc ebx [ ecx ]
inc ebp
jle rwxdata
xor ch [ ebp - 0x27209348 ]
dec ebp
aad 0xa9
std
push ebx
dec ebx
adc edi [ edx ]
add al [ esi + 0x78 ]
adc [ esi + 0x2d ] cx
jb rwxdata
sar [ edx ] cl
jl rwxdata
enter 0x13d 0x9d
loop rwxdata
xchg [ ecx + 0x702bd376 ] ch
psubq mmx0 [ ebx ]
imul edx [ ebx - 0x70 ] 0x2f
pop es
aaa
sbb al 0x23
in al 0xfb
mov al [ 0x3ad32bdf ]
mov [ 0xfffffffffba42493 ] eax
pxor mm2 mm7
daa
cmpsd [ esi ] [ edi ]
ja rwxdata
xabort 0x7
and ah [ eax + 0x5c7140ff ]
lahf
mov ebp 0x575b84d2
lea esp [ esp + 0x2c ]
je rwxdata
push cs
adc [ 0xffffffff978271ce ] ah
loopne rwxdata
int 0xe
sbb [ 0xffffffffde5d33ed ] esp
cdq
inc esp
0xdca09650 0x38a6
sbb bh al
mov bx [ esi ]
pushad
clc
pushfd
and ebx 0xfff
sub esp 0xffffffdc
jle rwxdata
call sub_1020a340
xchg ebx eax
dec ebp
mov cl 0xa5
mov ecx 0x4f1eddc2
js rwxdata
jo rwxdata
jno rwxdata
mov al 0x3e
push cs
dec ecx
mov al [ 0xffffffffb49132e3 ]
inc ebp
cdq
mov ebx 0x64d4f40a
xchg [ ecx + 0x46 ] edi
xchg [ edx ] esi
lodsd [ esi ]
mov eax 0x4dd8df6c
test bh 0x4b
pushfd
lea esp [ esp + 0x4 ]
jle rwxdata
cmp cx ax
bt dx 0xf
test eax ebx
add [ ebx + edi ] ax
pushfd
pushfd
lea esp [ esp + 0x8 ]
jmp rwxdata
0xa27e
enter 0xa8d9 0x36
std
inc esi
inc esp
rol [ 0xffffffffceb7a698 ] cl
test al 0x8
mov esi 0x34af9012
mov ebx [ esi + esi * 8 - 0x4daa7c23 ]
jno rwxdata
daa
aaa
fild [ ebx - 0x2a62734e ]
push esi
sti
add ebp [ ebx + 0x53 ]
nop
das
call j_sub_1020dfd0
push ecx
lea esp [ esp + 0x4 ]
jne rwxdata
test ah dl
add [ ebx + edi ] ax
pushad
lea esp [ esp + 0x20 ]
jmp rwxdata
cmp di 0xb14e
test cl cl
stc
add esi 0x2
call sub_1020ad88
cmp [ 0xffffffff853a55ea ] esp
or esp edi
xor al 0xf
clc
cmp ch ch
pushfd
push edx
sub eax eax
sub esp 0xfffffff8
bt di si
bt dx 0x1
pushad
clc
or ebx ebx
jmp rwxdata
btc cx 0x2
mov ecx [ ebx ]
pushad
call sub_101ebdcf
push ebx
dec eax
dec esp
push edi
inc ecx
push eax
dec ecx
insb
insb
add [ esi + 0x66 ] bh
mov eax 0xb5e9f4ea
mov [ ebx + ebx ] 0x9
lea esp [ esp + 0x20 ]
je rwxdata
push 0xbb4c9f7f
mov edi [ esp + 0x4 ]
bswap bx
mov esi [ esp + 0x8 ]
push [ esp ]
mov bl 0x31
not bx
mov [ esp ] 0xfb
mov ebx [ esp + 0x10 ]
jmp rwxdata
lea esi [ esp - 0x3355e86c ]
pushfd
not si
movsx esi dl
mov esi eax
mov [ esp ] 0xda
mov [ esp ] ebx
pushad
movzx ax dl
call sub_10119d09
cwde
insd
mov dl 0x3f
call sub_10119850
sahf
mov esi [ esi + ecx * 2 + 0x5d4c9210 ]
jne rwxdata
sub edx [ 0x12d4efd0 ]
fisub [ esi ]
mov eax [ 0xffffffffd40ac9d5 ]
dec ebx
mov [ 0x44fb30e0 ] eax
push ebp
mov al 0x70
imul edx [ esi - 0x69 ] 0x41f6e565
xchg ebx eax
sar bh 0x6d
pop ebp
or ebp [ ecx ]
imul edx ebp 0x735fa6e6
cmp eax edx
lea ebp [ ebp - 0x68 ]
lahf
mov [ eax + 0x57330840 ] ch
int1
push edi
mov [ ebx ] dl
insb
loope rwxdata
imul edx ebp 0x735fa6e6
or al 0xf2
sub_102005e0
add eax edi
clc
push [ esp ]
mov [ esp + 0x4 ] bh
cmp eax edx
mov [ esp ] eax
lea esp [ esp + 0x8 ]
jb rwxdata
mov bh 0x34
jmp rwxdata
clc
pushfd
bt bp 0x1
cmp eax [ ebp - 0x10 ]
jmp sub_1020d422
pop edx
movzx si bl
mov si 0xce7a
pushad
lea esi [ ebp * 2 - 0x641f9294 ]
mov ebx [ esp + 0x20 ]
bswap si
bswap si
xchg di si
mov edi [ esp + 0x24 ]
mov si 0x99de
mov esi [ esp + 0x28 ]
push eax
pushfd
lea esp [ esp + 0x34 ]
jns rwxdata
pushfd
pushfd
pushad
push 0xcf9003f2
mov esp ebp
pushfd
mov ebp [ esp + 0x4 ]
pushfd
pushfd
push [ esp + 0x10 ]
retn 0x1c
mov esp ebp
movsx bp dl
pop ebp
pushfd
push [ esp ]
pushad
mov [ esp ] di
push [ esp + 0x28 ]
retn 0x34
sub_10200ed7
cmp ecx [ ebp - 0x8 ]
push [ esp ]
lea esp [ esp + 0xc ]
jbe rwxdata
sbb dh 0xfc
btc bx cx
lea edi [ ebp - 0x21ec1969 ]
shl si 0x2
sub eax eax
mov bh 0x34
jmp rwxdata
shrd si si cl
bts di 0xd
ror esi 0xd
sub ecx 0x1
bts di si
mov [ ebp - 0x4 ] ecx
or si dx
inc ecx
mov ecx [ ebp - 0x8 ]
shl si cl
movzx di cl
bt ax cx
add ecx [ ebp - 0x4 ]
adc di cx
shr ecx 0x1
shl di cl
btr si sp
mov edi [ ebx + ecx * 4 ]
rcr si 0x7
ror si cl
add edi eax
mov si 0xb7dd
call sub_101e8af7
mov al 0xe8
salc
sbb dh 0x51
into
js 0x87bc6b04
pop edx
movzx si bl
mov si 0xce7a
pushad
lea esi [ ebp * 2 - 0x641f9294 ]
mov ebx [ esp + 0x20 ]
bswap si
bswap si
xchg di si
mov edi [ esp + 0x24 ]
mov si 0x99de
mov esi [ esp + 0x28 ]
push eax
pushfd
lea esp [ esp + 0x34 ]
jns rwxdata
call 0xfffffffff3ab896e
sub ebx edx
test [ 0xffffffff83a1c196 ] edx
sar [ ecx + 0x2c2c55c9 ] 0x4f
sahf
test eax 0xb5cdb451
movsd [ edi ] [ esi ]
call 0xffffffffeca125ce
sar [ eax - 0x5 ] 0x1
inc ebx
pop ebx
inc ebx
cmp [ ebx - 0x6d ] 0xffffff8b
lahf
push 0x767b0377
pushfd
pushfd
pushad
push 0xcf9003f2
mov esp ebp
pushfd
mov ebp [ esp + 0x4 ]
pushfd
pushfd
push [ esp + 0x10 ]
retn 0x1c
mov esp ebp
movsx bp dl
pop ebp
pushfd
push [ esp ]
pushad
mov [ esp ] di
push [ esp + 0x28 ]
retn 0x34
sub_10201349
push [ esp ]
lodsb [ esi ]
jmp rwxdata
clc
rol al 0x4
push ebx
not al
jmp rwxdata
jmp rwxdata
dec al
stc
pushfd
test cl 0x4b
not al
cmp dl 0x54
test ax 0x4d17
add al 0x79
push ebx
cmp al [ edi ]
cwde
not al
lea esp [ esp + 0x34 ]
jpe rwxdata
push 0x1c588f89
setbe ah
lea edi [ edi + 0x1 ]
lea eax [ ecx * 2 - 0x48a8b91 ]
lea eax [ esp - 0x79109c78 ]
pop eax
lea eax [ eax * 2 + 0x4341f52a ]
pop eax
push ecx
push 0x72711611
lea esp [ esp + 0x8 ]
ja rwxdata
cwde
lea edi [ edi + 0x1 ]
bswap ax
movzx ax dl
jb rwxdata
jmp rwxdata
push 0x84564d49
push 0x666294db
lea esp [ esp + 0x8 ]
jb rwxdata
pushfd
mov eax [ esp + 0x4 ]
mov [ esp ] 0x9bf9
pushad
jmp j_sub_1020cd09
pop eax
jl rwxdata
test bl 0xa6
cmp si dx
pushfd
cmp ecx [ ebp - 0x4 ]
mov [ esp ] 0x51
pushad
call sub_10202c7f
out dx al
xchg [ eax ] bl
xchg [ eax ] edi
xchg edx eax
mov ebp cs
mov ch 0x79
bound esi [ edx ]
push ss
pushfd
call sub_10200ed7
shl [ edx + edi * 8 ] 0xa4
cli
cmp [ esi ] al
pop ss
out dx al
push ecx
mov ebp 0x4cfc9d00
sti
arpl bx dx
stosd [ edi ]
lodsb [ esi ]
shl [ edi ] cl
bt dx 0x1
test ebx esp
cmp [ edi - 0x1 ] 0x0
jmp rwxdata
pushad
lea esp [ esp + 0x20 ]
ja rwxdata
pushfd
pushad
push edx
lea esp [ esp + 0x28 ]
ja rwxdata
push edi
lea esp [ esp + 0x4 ]
jne rwxdata
pushad
jmp rwxdata
pushfd
lea esp [ esp + 0x4 ]
jb rwxdata
pushad
call sub_10119d14
into
jg rwxdata
bsf di sp
shl di 0xc
cmp al 0xff
push esi
mov edi [ edx + 0x24 ]
cmp ax 0x5e62
bt ecx 0x11
bt dx sp
add edi eax
cmp dl ah
movzx ecx [ edi + ecx * 2 ]
shl di 0x4
call sub_10119b53
call 0x26866d3a
pop eax
lea esp [ esp + 0x20 ]
jb rwxdata
clc
call sub_101f4c13
inc esi
dec edi
push eax
jb rwxdata
push [ esp + 0x2c ]
add edi [ ebx + ebx * 4 - 0x7881da1c ]
sahf
dec ebx
jb rwxdata
cmc
cmp [ edi - 0x1 ] 0x0
jmp rwxdata
pushad
sbb eax 0xf98ad561
cwde
pop es
sbb [ eax - 0x627043fa ] bl
lodsd [ esi ]
and [ ecx - 0x5c ] 0x939685fa
int3
sub esi [ esi * 2 - 0x70c44dd ]
mov al [ 0xffffffffb18eb692 ]
0x46e93595 0x2ed9
retn 0x30
and al 0x2c
xor esi ebp
pushfd
mov [ esp ] ah
mov [ esp ] 0x56
lea esp [ esp + 0x4 ]
jne rwxdata
shl di cl
rcr di cl
mov edi [ edx + 0x24 ]
test bx 0x934a
pushfd
add edi eax
pushad
mov [ esp ] al
pushfd
mov [ esp ] 0xc9
movzx ecx [ edi + ecx * 2 ]
neg di
mov edi [ edx + 0x1c ]
cmc
mov [ esp + 0x10 ] dx
cmp cl 0x3e
push ebp
add edi eax
mov [ esp + 0x4 ] ah
cmp esp 0xd348009e
jmp rwxdata
mov edi [ edi + ecx * 4 ]
stc
clc
test edi edi
call sub_1020eecd
ror al 0x4
jmp sub_101e7cbf
sub_1020150f
pushfd
lea esp [ esp + 0x8 ]
jb rwxdata
pushad
pushad
jmp rwxdata
push 0xc517c7cc
mov [ esp ] 0x4daf
push [ esp + 0x4 ]
retn 0x8
pushfd
lea esp [ esp + 0x44 ]
call sub_10201bcd
call sub_1020a3f0
and al 0x71
mov bh dl
adc al 0xb
dec esp
lodsb [ esi ]
push ebp
push ebx
mov bl 0x95
mov eax 0xcbcab94c
hlt
sub_10201666
push 0xcee47b9a
mov [ esp + 0x8 ] 0xc811a00e
push eax
push eax
pushfd
lea esp [ esp + 0x14 ]
jmp rwxdata
jmp rwxdata
push esp
push 0x20ba6e1d
mov [ esp + 0x4 ] edx
pushfd
pushfd
pushad
lea esp [ esp + 0x2c ]
jmp sub_1021426f
sub_10201a80
sbb di 0x375c
shld edi ecx 0x8
lea esp [ esp + 0x4 ]
add ebx esp
bsf di cx
btr di si
shl al cl
mov edi ebx
pushad
sete al
bt edi edi
pushfd
mov al 0x2e
cmp bh 0x46
[ edi ]
mov [ esp ] cl
jmp rwxdata
lea esp [ esp + 0x24 ]
jne rwxdata
pushfd
jmp sub_101e84ae
bswap ax
mov [ edi - 0x1 ] 0x0
lahf
setb al
push ebx
not eax
not ah
lea eax [ rwxdata ]
pushad
pushad
mov [ esp + 0x3c ] rwxdata
push [ esp + 0xc ]
call sub_10118785
pushfd
pushad
jmp rwxdata
mov [ esp + 0x24 ] 0xa697ca96
jmp rwxdata
pushfd
jmp rwxdata
pushfd
mov [ esp + 0x28 ] 0xb0e2d33c
mov [ esp ] 0xcbf6
pushfd
lea esp [ esp + 0x2c ]
jmp j_sub_10214179
_TLS_Entry_0
pushad
pushad
mov [ esp + 0x3c ] 0x1418caa9
lea esp [ esp + 0x3c ]
jo rwxdata
push 0x7524bdb8
pushfd
call sub_101e8c6a
pushad
mov [ esp ] 0x934e
mov [ esp + 0x4 ] 0x83
mov [ esp + 0x1c ] 0xc4387eee
pushfd
lea esp [ esp + 0x20 ]
jmp rwxdata
jmp rwxdata
pushad
mov [ esp + 0x1c ] edx
push 0xb3210dfc
pushad
lea esp [ esp + 0x40 ]
jmp sub_1021426f
sub_10201bcd
cmp ah ch
test ax 0xf01b
pushfd
cmp ax 0xae7
add dl dl
lea esp [ esp + 0x4 ]
jle rwxdata
push edi
push [ esp ]
lea esp [ esp + 0x8 ]
jne rwxdata
pushad
lea esp [ esp + 0x20 ]
jne rwxdata
pushad
push [ esp + 0x20 ]
jg rwxdata
not dl
pushad
mov [ esp ] 0xb5
not dl
pushf
pop [ esp + 0x1e ]
dec dl
test dx sp
mov dl [ esi ]
push 0x1aa2e30f
pushfd
bt dx 0x2
not dl
bt dx 0xe
jmp rwxdata
jmp sub_101f1cbc
pushfd
push [ esp + 0x4 ]
retn 0x2c
push 0xa41ce554
mov [ esp ] sp
push [ esp + 0x4 ]
retn 0x2c
test bp bx
jmp rwxdata
xor dl 0xf7
jmp rwxdata
stc
neg dl
call sub_1020f1bc
call sub_10200fe8
mov bh [ 0x1ba41bc8 ]
test [ ebp + 0x53c08299 ] dl
cmc
add ebx esp
inc [ ecx - 0x6659960a ]
mov ebp 0x69a5d9a1
mov ch 0x39
add eax 0x9de14579
xchg ebp eax
test eax 0xf114dd42
shl [ edx ] cl
xchg [ ebp - 0x78 ] bh
cdq
test al 0x77
in al dx
xchg edi eax
push ecx
mov dl 0x24
mov ebx 0x3632f4e3
outsb
pop edi
mov [ 0x2d14a559 ] al
push es
xor al 0x6a
in al dx
push ebx
stosd [ edi ]
xchg edx eax
popfd
clc
sub_10201bf9
jmp rwxdata
pushad
lea esp [ esp + 0x28 ]
jae rwxdata
inc bl
pushfd
inc ecx
lea esp [ esp + 0x4 ]
pushfd
inc ecx
lea esp [ esp + 0x4 ]
rcr bl cl
rcl bl cl
xchg ebp eax
xor bl bl
mov eax ebp
bt ebx 0xa
shl bl 0x5
mov bl 0x1
jmp sub_1020d8b7
pushfd
jmp rwxdata
cmp ah 0x5
pushad
call sub_1020afda
sub_102022d5
stc
add edx eax
pushad
mov [ esp + 0x4 ] 0x77
pushfd
push [ esp + 0x4 ]
lea esp [ esp + 0x30 ]
jmp rwxdata
not al
sub al dl
sar al 0x1
rcr al cl
add edi 0x1
sar al 0x1
pushad
sar al 0x6
push ecx
mov al [ edi ]
bt ebx 0x1d
bt bp cx
test al al
push 0x906e3e70
lea esp [ esp + 0x28 ]
je rwxdata
push 0x8d7ccccb
mov edi edx
sub esp 0xfffffffc
setbe ch
mov ecx edi
xor al 0x61
call sub_10118d7d
sar [ ebp - 0x1e ] 0x1
jno rwxdata
push 0x45addaa6
cmp ebp 0xc5947e3b
jmp rwxdata
add bh al
inc esp
and al 0x4
pop esi
push es
mov eax [ 0xc8966e4 ]
and al 0x9c
lea esp [ esp + 0x8 ]
jmp rwxdata
int 0xb2
pop es
xor ch [ edi + edi + 0x6f ]
mov eax [ 0x43fb2820 ]
pop edi
jg rwxdata
sub al 0x30
sub esp 0xfffffffc
pushad
mov [ esp + 0x8 ] 0xf7b4
cmp ah 0x8c
test bx 0xf664
cmp al 0x9
lea esp [ esp + 0x20 ]
pushad
call sub_1020c6e6
clc
rol al 0x4
push ebx
not al
jmp rwxdata
push ecx
pushfd
jmp rwxdata
inc edx
add al 0x3e
lahf
mov ecx 0x4a301ce9
out dx al
outsd
scasd [ edi ]
dec eax
pop edi
imul esi [ ebx + 0x740a704e ] 0x3
pop esp
push 0xffffff94
fwait
test [ esi - 0x384ff070 ] ch
cwde
loop rwxdata
jmp rwxdata
pushfd
mov [ esp + 0x8 ] edx
pushad
push ecx
push 0x2a7fdc6f
pushfd
lea esp [ esp + 0x34 ]
jmp sub_1021426f
fdiv [ ebp + 0x9 ]
jns rwxdata
in al dx
inc esp
sbb ebp [ ebp * 8 + 0x477ad3f2 ]
in al 0xe3
out 0x1f al
xor bl dl
mov bl 0x11
mov edx 0x630f4f56
test eax 0x59459a0d
push ebp
sub ch [ ebx + 0x1f ]
inc eax
push ecx
0x9fc0
dec al
stc
pushfd
test cl 0x4b
not al
cmp dl 0x54
test ax 0x4d17
add al 0x79
push ebx
cmp al [ edi ]
cwde
not al
lea esp [ esp + 0x34 ]
jpe rwxdata
push edx
int 0x42
std
mov eax [ 0xffffffffe72fd61e ]
ja rwxdata
push 0x1c588f89
setbe ah
lea edi [ edi + 0x1 ]
lea eax [ ecx * 2 - 0x48a8b91 ]
lea eax [ esp - 0x79109c78 ]
pop eax
lea eax [ eax * 2 + 0x4341f52a ]
pop eax
push ecx
push 0x72711611
lea esp [ esp + 0x8 ]
ja rwxdata
cwde
lea edi [ edi + 0x1 ]
bswap ax
movzx ax dl
jb rwxdata
out 0xd9 al
mov cl 0xa5
mov ecx 0x82fd5a45
fadd st6
sub ebx edx
xor al 0xea
pushfd
aad 0xc9
stc
cmpsb [ esi ] [ edi ]
out 0x71 eax
pop ebx
pushad
sub eax 0x8d76c962
and al 0x8
jb rwxdata
jmp rwxdata
push 0x84564d49
push 0x666294db
lea esp [ esp + 0x8 ]
jb rwxdata
pushfd
mov eax [ esp + 0x4 ]
mov [ esp ] 0x9bf9
pushad
jmp j_sub_1020cd09
pop eax
jl rwxdata
cmp bp cx
or al al
call sub_1020b942
pushad
clc
cmp ah 0x5a
push 0xe2404430
lea esp [ esp + 0x24 ]
ja rwxdata
test bl 0xa6
cmp si dx
pushfd
cmp ecx [ ebp - 0x4 ]
mov [ esp ] 0x51
pushad
call sub_10202c7f
out dx al
xchg [ eax ] bl
xchg [ eax ] edi
xchg edx eax
mov ebp cs
mov ch 0x79
bound esi [ edx ]
push ss
pushfd
call sub_10200ed7
shl [ edx + edi * 8 ] 0xa4
cli
cmp [ esi ] al
pop ss
out dx al
push ecx
mov ebp 0x4cfc9d00
sti
arpl bx dx
stosd [ edi ]
lodsb [ esi ]
shl [ edi ] cl
bt dx 0x1
test ebx esp
cmp [ edi - 0x1 ] 0x0
jmp rwxdata
pushad
lea esp [ esp + 0x20 ]
ja rwxdata
pushfd
pushad
push edx
lea esp [ esp + 0x28 ]
ja rwxdata
stc
jmp rwxdata
push edi
lea esp [ esp + 0x4 ]
jne rwxdata
pushad
jmp rwxdata
pushfd
lea esp [ esp + 0x4 ]
jb rwxdata
call sub_101e8153
pushad
call sub_10119d14
into
jg rwxdata
bsf di sp
shl di 0xc
cmp al 0xff
push esi
mov edi [ edx + 0x24 ]
cmp ax 0x5e62
bt ecx 0x11
bt dx sp
add edi eax
cmp dl ah
movzx ecx [ edi + ecx * 2 ]
shl di 0x4
call sub_10119b53
call 0x26866d3a
pop eax
lea esp [ esp + 0x20 ]
jb rwxdata
clc
call sub_101f4c13
inc esi
dec edi
push eax
jb rwxdata
push [ esp + 0x2c ]
add edi [ ebx + ebx * 4 - 0x7881da1c ]
sahf
dec ebx
jb rwxdata
cmc
cmp [ edi - 0x1 ] 0x0
jmp rwxdata
pushad
sbb eax 0xf98ad561
cwde
pop es
sbb [ eax - 0x627043fa ] bl
lodsd [ esi ]
and [ ecx - 0x5c ] 0x939685fa
int3
sub esi [ esi * 2 - 0x70c44dd ]
mov al [ 0xffffffffb18eb692 ]
0x46e93595 0x2ed9
retn 0x30
and al 0x2c
xor esi ebp
pushfd
mov [ esp ] ah
mov [ esp ] 0x56
lea esp [ esp + 0x4 ]
jne rwxdata
shl di cl
rcr di cl
mov edi [ edx + 0x24 ]
test bx 0x934a
pushfd
add edi eax
pushad
mov [ esp ] al
pushfd
mov [ esp ] 0xc9
movzx ecx [ edi + ecx * 2 ]
neg di
mov edi [ edx + 0x1c ]
cmc
mov [ esp + 0x10 ] dx
cmp cl 0x3e
push ebp
add edi eax
mov [ esp + 0x4 ] ah
cmp esp 0xd348009e
jmp rwxdata
mov edi [ edi + ecx * 4 ]
stc
clc
test edi edi
call sub_1020eecd
ror al 0x4
jmp sub_101e7cbf
sub_10202ab6
cmp al 0x9
mov [ esp + 0x8 ] si
push 0xafd877af
push [ esp ]
call sub_1020f4e3
push eax
insb
jb rwxdata
mov ecx 0x7bdfce91
and al 0x67
dec eax
pop esp
and esi [ esi + esi * 2 ]
fnstenv [ ebp + 0xb ]
push ebp
mov ch 0x89
cmc
leave
movsd [ edi ] [ esi ]
sbb [ ecx + 0x55 ] ebp
mov [ ebp - 0x274b2db9 ] al
cmpsd [ esi ] [ edi ]
scasd [ edi ]
scasd [ edi ]
out 0xd8 al
sbb al 0xe9
mov eax 0x7b1708e6
and al 0xa2
cmp eax 0xb7c7728c
movsb [ edi ] [ esi ]
fild [ esi ]
sbb dh cl
int1
pop esp
and ah [ ebx + 0x71 ]
pop ebx
mov bh 0xb1
fiadd [ ebp - 0x7 ]
sti
in eax 0x19
jns rwxdata
retn 0xc6b8
retn
cmp [ ebp + 0x76 ] esp
xchg edx eax
int3
sub_10202c7f
lea esp [ esp + 0x28 ]
jae rwxdata
sbb dh 0xfc
btc bx cx
lea edi [ ebp - 0x21ec1969 ]
shl si 0x2
sub eax eax
mov bh 0x34
jmp rwxdata
cmp si 0x51f9
clc
add ecx 0x1
call j_sub_10119e08
sub al al
cmc
jmp rwxdata
pop edx
movzx si bl
mov si 0xce7a
pushad
lea esi [ ebp * 2 - 0x641f9294 ]
mov ebx [ esp + 0x20 ]
bswap si
bswap si
xchg di si
mov edi [ esp + 0x24 ]
mov si 0x99de
mov esi [ esp + 0x28 ]
push eax
pushfd
lea esp [ esp + 0x34 ]
jns rwxdata
mov [ esp + 0x4 ] cx
[ edi ]
jmp sub_1020e8fb
pushfd
pushfd
pushad
push 0xcf9003f2
mov esp ebp
pushfd
mov ebp [ esp + 0x4 ]
pushfd
pushfd
push [ esp + 0x10 ]
retn 0x1c
mov esp ebp
movsx bp dl
pop ebp
pushfd
push [ esp ]
pushad
mov [ esp ] di
push [ esp + 0x28 ]
retn 0x34
sub_10202cc4
call sub_101e7cc4
cmp eax 0x7e9f9fbe
fidivr [ esi - 0x2210a074 ]
push 0x9d46d92c
and bl [ eax + 0x26 ]
xchg ebp eax
mov [ 0xffffffffde6ac9c0 ] al
mov esp 0x50d34b02
movzx eax [ edi - 0x69 ]
cmpsd [ esi ] [ edi ]
xor ecx [ edx + esi * 4 - 0x13 ]
mov cl 0xed
imul esi ebp 0x7a65e15e
frstor [ edx - 0x34ec29b7 ]
fdivr st1
adc al 0x25
add esi 0xffffffd6
jmp rwxdata
dec ecx
mov al [ 0x28b74f3e ]
imul edi [ eax - 0x59 ] 0xb8a778b8
xor ch ah
jne rwxdata
fcmovb st7
mov ebx eax
bswap eax
push ecx
lea eax [ ebp - 0x8 ]
jmp sub_101e76fc
mov bh 0x8c
sub_10202db8
mov [ esp + 0x20 ] 0x522aca92
pushfd
mov [ esp ] 0xfec5
mov [ esp + 0x20 ] 0xacd96283
pushfd
push 0x5278f4af
lea esp [ esp + 0x28 ]
jmp rwxdata
pushfd
pushfd
jmp rwxdata
mov [ esp + 0x4 ] bl
mov [ esp + 0x4 ] edx
pushad
push esp
push 0xfbf3e6b1
lea esp [ esp + 0x2c ]
jmp sub_1021426f
sub_10202dde
call sub_1020ac30
bt cx si
call sub_101ea05b
inc edx
push esi
push 0xb0ce58c7
add al 0x1
inc eax
0x77390f00 0xe228
sbb al 0x7
pop eax
inc esi
pop eax
mov dh 0x68
shl [ edx ] 0x2c
cmp eax 0x97b08b13
mov bh 0x8e
mov al 0xc1
js rwxdata
popad
jb rwxdata
or eax 0x435b5636
dec edi
jecxz rwxdata
jmp 0x8b43565d
imul eax [ esi + 0x2df5a19d ] 0x1586f942
push 0xffffffb2
sti
pop es
or al 0xb
lea ebx [ ebp + 0x66 ]
push cs
fbld [ ecx + ebp * 8 + 0x27f8e995 ]
and edi [ ebx + 0x23 ]
pop esp
popfd
test al 0xb
mov ebp 0x71651de2
add al 0xb5
pop ds
mov al [ 0x75497c43 ]
xchg [ ecx - 0x2d ] al
sahf
sar edx 0x1
jl rwxdata
dec ecx
pop eax
mov bh 0x4c
sbb eax 0xf4545350
out dx eax
hlt
mov [ esp + 0x4 ] cx
[ edi ]
jmp sub_1020e8fb
mov al [ 0xffffffff8e17a71e ]
push eax
rcr [ ebp + 0x22 ] 0x7d
mov eax 0x9f778786
mov edi 0xf1adc41b
pop ecx
push es
push eax
out dx eax
add bh [ ecx * 2 - 0x4f4ba48f ]
fild [ ecx - 0x22 ]
sub_102077ff
lea esp [ esp + 0x30 ]
jne rwxdata
xor al 0x61
call sub_10118d7d
sar [ ebp - 0x1e ] 0x1
jno rwxdata
call sub_101f05f0
add bh al
inc esp
and al 0x4
pop esi
push es
mov eax [ 0xc8966e4 ]
and al 0x9c
lea esp [ esp + 0x8 ]
jmp rwxdata
int 0xb2
pop es
xor ch [ edi + edi + 0x6f ]
mov eax [ 0x43fb2820 ]
pop edi
jg rwxdata
push ecx
pushfd
jmp rwxdata
inc edx
add al 0x3e
lahf
mov ecx 0x4a301ce9
out dx al
outsd
scasd [ edi ]
dec eax
pop edi
imul esi [ ebx + 0x740a704e ] 0x3
pop esp
push 0xffffff94
fwait
test [ esi - 0x384ff070 ] ch
cwde
loop rwxdata
pushfd
mov [ esp + 0x8 ] edx
pushad
push ecx
push 0x2a7fdc6f
pushfd
lea esp [ esp + 0x34 ]
jmp sub_1021426f
fdiv [ ebp + 0x9 ]
jns rwxdata
in al dx
inc esp
sbb ebp [ ebp * 8 + 0x477ad3f2 ]
in al 0xe3
out 0x1f al
xor bl dl
mov bl 0x11
mov edx 0x630f4f56
test eax 0x59459a0d
push ebp
sub ch [ ebx + 0x1f ]
inc eax
push ecx
0x9fc0
push edx
int 0x42
std
mov eax [ 0xffffffffe72fd61e ]
ja rwxdata
out 0xd9 al
mov cl 0xa5
mov ecx 0x82fd5a45
fadd st6
sub ebx edx
xor al 0xea
pushfd
aad 0xc9
stc
cmpsb [ esi ] [ edi ]
out 0x71 eax
pop ebx
pushad
sub eax 0x8d76c962
and al 0x8
jb rwxdata
cmp bp cx
or al al
call sub_1020b942
pushad
clc
cmp ah 0x5a
push 0xe2404430
lea esp [ esp + 0x24 ]
ja rwxdata
stc
jmp rwxdata
call sub_101e8153
sub_102078ee
pushfd
jmp rwxdata
cmp al ah
push 0x4e63b5ab
pushad
call sub_10118699
pushfd
pushfd
push 0x8001d5ce
inc al
not bl
sets bl
mov [ esp + 0x8 ] bl
stosb [ edi ]
setbe bl
not bl
jmp rwxdata
mov bl 0x2
lea esp [ esp + 0x10 ]
pushad
mov [ esp + 0x8 ] 0x24
lea esp [ esp + 0x20 ]
call sub_10201bcd
pushad
mov [ esp ] cl
lea esp [ esp + 0x20 ]
jae rwxdata
jmp rwxdata
cmc
stc
jmp rwxdata
lodsb [ esi ]
push 0xe19feba4
sbb bl 0x4b
not al
clc
rcl bl cl
adc bl 0x6a
shl bl 0x6
xor al 0xf7
sub bl 0x51
jmp rwxdata
pushfd
sub ecx ecx
pushfd
call sub_101ea79e
xchg ebx eax
xchg esi eax
test eax 0xa935b1ad
mov edx 0x7ead1ba3
or ebx esi
push 0x78
neg al
jmp rwxdata
sub_102079b6
call sub_1020d337
in al dx
xchg edx eax
mov eax [ 0x5716efbe ]
imul esi [ ebp - 0x67d3acc4 ] 0xd2e45ab0
sub al 0x3
sbb al 0xc7
clc
pop edi
and [ edx + 0x24 ] bl
das
adc [ edi + 0x1ef0aef0 ] ch
add [ edx ] cl
hlt
sub_10207c9b
test dl 0x79
bt esi 0x1b
sub al 0x79
call sub_101eb675
mov al [ 0x6bd4be40 ]
adc ebp [ ebx - 0x53f18f44 ]
inc esp
movsd [ edi ] [ esi ]
aas
or [ ebx ] ebx
movsb [ edi ] [ esi ]
inc edx
pushfd
daa
mov eax 0x836b8e6
mov bh 0xe8
imul edx esp 0xffffffe8
mov [ 0xffffffffd577febd ] al
dec edx
pop ebx
cmp [ esi ] esp
jpo rwxdata
add [ ebp + 0x705fff5a ] 0x33
rol [ esi ] cl
outsd
movsb [ edi ] [ esi ]
push edx
push ds
mov al [ 0xffffffffcab5a5b9 ]
fnstcw [ ecx - 0x15ab9c1b ]
salc
jle rwxdata
out dx eax
inc esi
clc
insb
xor esp [ edi + 0x2111ae38 ]
scasd [ edi ]
out dx eax
dec esp
sti
add eax 0xec5a23f2
[ edi ]
cwde
mov bl 0x55
xchg esp eax
mov ebx 0xf58a0232
pop eax
sub_10208193
mov [ esp + 0x4 ] 0xe4a1065e
mov [ esp ] cx
pushfd
lea esp [ esp + 0x8 ]
jmp rwxdata
push ecx
pushfd
jmp rwxdata
pushfd
mov [ esp + 0x8 ] edx
pushad
push ecx
push 0x2a7fdc6f
pushfd
lea esp [ esp + 0x34 ]
jmp sub_1021426f
sub_1020827e
lea esp [ esp + 0x8 ]
jb rwxdata
cmp bp cx
or al al
call sub_1020b942
pushad
clc
cmp ah 0x5a
push 0xe2404430
lea esp [ esp + 0x24 ]
ja rwxdata
stc
jmp rwxdata
call sub_101e8153
sub_10208373
push edx
[ edi ] [ esi ]
pushfd
movzx si dl
push ecx
mov esi [ esp + 0x14 ]
mov [ esp + 0x4 ] 0xa9
mov [ esp + 0x8 ] sp
push [ esp + 0x10 ]
lea esp [ esp + 0x1c ]
jmp rwxdata
pushad
mov [ esp + 0x8 ] 0x24
lea esp [ esp + 0x20 ]
call sub_10201bcd
pushad
mov [ esp ] cl
lea esp [ esp + 0x20 ]
jae rwxdata
jmp rwxdata
cmc
stc
jmp rwxdata
lodsb [ esi ]
push 0xe19feba4
sbb bl 0x4b
not al
clc
rcl bl cl
adc bl 0x6a
shl bl 0x6
xor al 0xf7
sub bl 0x51
jmp rwxdata
pushfd
sub ecx ecx
pushfd
call sub_101ea79e
xchg ebx eax
xchg esi eax
test eax 0xa935b1ad
mov edx 0x7ead1ba3
or ebx esi
push 0x78
neg al
jmp rwxdata
pushfd
pushfd
push 0x8001d5ce
inc al
not bl
sets bl
mov [ esp + 0x8 ] bl
stosb [ edi ]
setbe bl
not bl
jmp rwxdata
mov bl 0x2
lea esp [ esp + 0x10 ]
sub_102089a6
pushad
lea esp [ esp + 0x24 ]
call sub_10201bcd
pushfd
lea esp [ esp + 0x4 ]
jg rwxdata
pushad
jmp rwxdata
adc al al
jmp rwxdata
call sub_1020defa
pushad
cmp [ esi + 0x2fef5e81 ] al
inc eax
int 0xac
cmpsd [ esi ] [ edi ]
test al 0xa0
movsb [ edi ] [ esi ]
fwait
dec eax
ja rwxdata
jmp rwxdata
pop edi
shr [ ebx + 0x54 ] cl
dec ebx
nop
pushfd
push 0xbbe1fa12
lea esp [ esp + 0x8 ]
jae rwxdata
call sub_102089a6
enter 0xeaf4 0x6c
int 0xd2
jmp rwxdata
jne rwxdata
jmp sub_1020d8b7
pushad
stosb [ edi ]
mov [ esp ] ch
pushfd
lea esp [ esp + 0x24 ]
jmp rwxdata
pushad
mov [ esp + 0x8 ] 0x24
lea esp [ esp + 0x20 ]
call sub_10201bcd
pushad
mov [ esp ] cl
lea esp [ esp + 0x20 ]
jae rwxdata
jmp rwxdata
cmc
stc
jmp rwxdata
lodsb [ esi ]
push 0xe19feba4
sbb bl 0x4b
not al
clc
rcl bl cl
adc bl 0x6a
shl bl 0x6
xor al 0xf7
sub bl 0x51
jmp rwxdata
pushfd
sub ecx ecx
pushfd
call sub_101ea79e
xchg ebx eax
xchg esi eax
test eax 0xa935b1ad
mov edx 0x7ead1ba3
or ebx esi
push 0x78
neg al
jmp rwxdata
pushfd
pushfd
push 0x8001d5ce
inc al
not bl
sets bl
mov [ esp + 0x8 ] bl
stosb [ edi ]
setbe bl
not bl
jmp rwxdata
mov bl 0x2
lea esp [ esp + 0x10 ]
sub_102090af
pushad
bswap ax
lahf
lea eax [ rwxdata ]
mov [ esp + 0x4 ] ah
mov [ esp + 0x1c ] rwxdata
jmp rwxdata
call sub_10200fe8
mov bh [ 0x1ba41bc8 ]
test [ ebp + 0x53c08299 ] dl
cmc
add ebx esp
inc [ ecx - 0x6659960a ]
mov ebp 0x69a5d9a1
mov ch 0x39
add eax 0x9de14579
xchg ebp eax
test eax 0xf114dd42
shl [ edx ] cl
xchg [ ebp - 0x78 ] bh
cdq
test al 0x77
in al dx
xchg edi eax
push ecx
mov dl 0x24
mov ebx 0x3632f4e3
outsb
pop edi
mov [ 0x2d14a559 ] al
push es
xor al 0x6a
in al dx
push ebx
stosd [ edi ]
xchg edx eax
popfd
clc
sub_102094d3
call sub_10202cc4
stc
pushfd
sub ecx [ edx + 0x10 ]
cmc
clc
cmp ecx [ edx + 0x14 ]
mov [ esp ] 0x46
pushfd
pushad
lea esp [ esp + 0x28 ]
jo rwxdata
pushfd
lea esp [ esp + 0x4 ]
jae rwxdata
jae rwxdata
sbb dh 0xfc
btc bx cx
lea edi [ ebp - 0x21ec1969 ]
shl si 0x2
sub eax eax
mov bh 0x34
jmp rwxdata
pushad
push ecx
lea esp [ esp + 0x24 ]
jmp rwxdata
pushad
lea esp [ esp + 0x20 ]
jmp rwxdata
pop edx
movzx si bl
mov si 0xce7a
pushad
lea esi [ ebp * 2 - 0x641f9294 ]
mov ebx [ esp + 0x20 ]
bswap si
bswap si
xchg di si
mov edi [ esp + 0x24 ]
mov si 0x99de
mov esi [ esp + 0x28 ]
push eax
pushfd
lea esp [ esp + 0x34 ]
jns rwxdata
rcl di 0xf
mov edi [ edx + 0x1c ]
cmc
add edi eax
cmp sp 0xb655
mov edi [ edi + ecx * 4 ]
call sub_10200c6a
sub al 0xd9
inc esi
sahf
mov eax 0xb46ab7a6
cmc
inc ecx
inc esp
pop es
push 0x7a0bcabf
xor al 0x35
adc eax esp
sbb al [ ebp + 0x7826193a ]
and [ es : esi + 0x64 ] ebx
pushfd
pushfd
pushad
push 0xcf9003f2
mov esp ebp
pushfd
mov ebp [ esp + 0x4 ]
pushfd
pushfd
push [ esp + 0x10 ]
retn 0x1c
mov esp ebp
movsx bp dl
pop ebp
pushfd
push [ esp ]
pushad
mov [ esp ] di
push [ esp + 0x28 ]
retn 0x34
sbb [ esi ] esp
js rwxdata
scasb [ edi ]
test al 0xb6
or al 0xb2
mov esp 0xc4b36b63
movsb [ edi ] [ esi ]
mov edx 0x9fd10ecb
test bl bl
add eax 0x3f26cc2
lahf
mov ebp 0x39828ea4
inc ebp
push esi
pop eax
insd
cmp ah [ ebp + 0x68b1c11e ]
inc ecx
inc esp
pminsw mm3 mm6
fidiv [ ecx + 0x40decca9 ]
push ecx
cld
xor [ ebx + edx * 8 + 0x3f ] 0x5
or eax 0x9403e04c
0xd1f28d2b 0x1fb7
cmp [ ecx ] 0x45
pop edx
sbb eax 0x84869942
jpe rwxdata
and [ esi + 0x64 ] ebx
sub_1020a340
pushfd
pushfd
cmc
cmp ebx 0x2
pushfd
lea esp [ esp + 0x10 ]
je rwxdata
pushad
push [ esp ]
clc
stc
jns rwxdata
imul edi [ ecx + edx * 8 - 0x52 ] 0xc
fwait
pushad
jg rwxdata
or bh dl
jl rwxdata
bt bp bx
clc
cmp ebx 0x3
pushfd
jmp rwxdata
cmp ebx 0x3
push esi
jmp rwxdata
call sub_101ec374
xchg ecx eax
je rwxdata
fwait
xchg [ eax ] dh
pop eax
xchg esp eax
mov edi 0xf4ae983f
lea esi [ esi + 0x48 ]
dec ebp
jno rwxdata
insd
ror ah cl
mov bl 0x97
enter 0xa5fa 0x44
0xd727b609 0xf42b
xchg cl bl
rwxdata
xor dl dh
mov [ 0xffffffff83c58dcb ] bh
int3
lea esp [ esp + 0x4 ]
je rwxdata
lea esp [ esp + 0x4 ]
je rwxdata
sbb ebp 0x4f
clc
fcomp [ eax + eax * 8 ]
push esi
xchg edx eax
pop ss
pop es
jpo rwxdata
fcomp [ ecx + ebp * 8 ]
lahf
mov [ edx ] cl
xchg esp eax
and eax 0xda7d2259
movsd [ edi ] [ esi ]
dec esp
mov ecx 0xc19e952a
ror [ 0x714e41de ] 0x1
std
and dh cl
dec esi
aam 0x48
mov dh 0xc7
cmp al 0xc9
adc al 0xa7
pop ss
mov [ edi + eax - 0x9 ] es
or [ esp + ebx * 8 ] bh
xchg edx eax
pop ds
call 0x6f3c512f
je rwxdata
mov bx [ esi ]
test ch 0x38
lahf
out 0xa9 al
cld
bound edx [ edi + 0x54 ]
push ebx
inc ecx
push eax
dec ecx
xor esi [ edx ]
insb
insb
add [ eax - 0x1 ] ah
xor al 0x24
neg bl
sar bh 0x6
push ecx
movsx bx cl
mov bx [ esi ]
jmp rwxdata
pushad
lea esp [ esp + 0x20 ]
jmp rwxdata
pushfd
mov [ esp ] cx
push [ esp ]
lea esp [ esp + 0x8 ]
jmp rwxdata

mov bh 0x4a
je rwxdata
xchg edx eax
pop edi
cmpsb [ esi ] [ edi ]
enter 0x92bf 0xba
outsd
xchg ecx eax
sbb dh ah
mov dl 0xd5
insd
mov dl 0xf3
and ebx 0xfff
cmp cl 0xa3
pushad
cmc
add [ ebx + edi ] edx
sub esp 0xffffffdc
cmp di 0xb14e
test cl cl
stc
add esi 0x2
call sub_1020ad88
cmp [ 0xffffffff853a55ea ] esp
or esp edi
xor al 0xf
jpe rwxdata
pop eax
jl rwxdata
shl ebp 0x77
cmpsd [ esi ] [ edi ]
mov edi 0x10d946c1
into
mov [ 0x51cefcbb ] eax
test eax 0x59261549
ja rwxdata
cmp ebp ebp
push edx
or al 0x92
adc [ esi - 0x4b354c55 ] ebp
pop ebp
shl [ ebx ] 0xd2
adc esi [ ecx + 0x5c ]
sahf
add [ esi - 0x42df3d84 ] ecx
and ch ch
push edx
xchg ecx eax
aas
outsd
int 0x8b
ror [ eax + 0x37bab5a ] 0xeb
push ebx
dec ebx
push ebx
mov bh 0x47
cmovg esp eax
aas
lodsb [ esi ]
jae rwxdata
int3
or al 0x62
mov ebp 0x2af4d906
cmp edi [ ebp + 0x74b77521 ]
stosb [ edi ]
mov ebx 0x9d08f7e8
popad
shl [ ecx + 0x7c ] cl
sub dl ah
inc edi
pop esi
push ds
mov edi 0xc72f2fa4
or dh [ edi - 0x66 ]
and bl ah
pop edi
call 0x83b712dd
xchg ecx eax
jle rwxdata
pop ebx
cmp edx [ fs : edx ]
sbb dh bh
sub_1020a3f0
lea esp [ esp + 0x4 ]
js rwxdata
pushad
pushfd
adc ecx ecx
pushfd
push [ esp ]
push [ esp ]
pushfd
lea esp [ esp + 0x34 ]
call sub_10201bcd
call j_sub_1020150f
sbb esp ebp
xor ecx ebx
aam 0x3e
and [ ecx + 0x48 ] ah
salc
in al 0xde
cdq
mov dh 0x92
sar [ esi + 0x7b6a9493 ] 0xe2
fcomp [ edi - 0x18 ]
or [ eax - 0x29 ] ch
call 0x659bc56f
imul edx [ esi - 0x58 ] 0x6aa1af08
fldl2t
xchg ebx eax
in eax 0x7c
0x9e89
push 0x3cb949eb
mov [ esp ] si
adc ecx ecx
call sub_101e56f5
les ecx [ ecx - 0x2c641c2a ]
jmp rwxdata
fwait
shr ebx cl
cld
add [ ebx - 0xf ] esp
add eax [ ebp + 0x2e ]
push ecx
loope rwxdata
loopne rwxdata
jno rwxdata
fsub [ edx - 0x16166da5 ]
fild [ ecx - 0x22 ]
das
iretd
clc
cmp esp ebx
mov [ 0xffffffffe9e9925b ] al
jmp 0xffffffffee62846f
pop edx
imul eax [ edx + 0x4ac73c5 ] 0x57
dec eax
pop ecx
jb rwxdata
enter 0x7bb7 0xa4
xchg edi eax
xchg edi eax
push 0x418d6a57
add dh [ esi ]
jmp 0xffffffffd74749b5
jge rwxdata
mov al 0x71
pop ebx
aas
dec ebp
inc edx
loope rwxdata
push 0xc3dbca97
pushfd
pushfd
call sub_101ec822
cwde
mov dl 0xec
scasd [ edi ]
shl [ edi - 0x61471948 ] 0x1
shl [ ebx - 0x14 ] 0xd7
or [ edi + 0x59485728 ] dl
pop cx
push 0xffffff85
je rwxdata
dec ebp
push ecx
cmp esp edx
sub bh [ ebx ]
dec esi
adc [ edx ] esp
and eax [ esi ]
dec edx
loope rwxdata
cmpsb [ esi ] [ edi ]
mov ecx 0x40ffe2dc
aas
pushad
mov cl 0x6d
dec esp
xchg edx eax
jg rwxdata
mov bh 0x7b
movsb [ edi ] [ esi ]
sbb [ esi - 0x5a057e03 ] bh
out 0xcb al
adc edx [ eax + 0x70 ]
xchg ecx eax
mov bh 0x28
imul esp ebx 0xdb9fdf9b
mov [ 0x5fbd5e33 ] eax
in al 0xd5
dec esp

bound eax [ edx ]
in eax dx
push cs
[ edi - 0x9 ] esp
pop edi
call [ edi + 0x7 ]
mov cl 0x23
push ebx
lahf
js rwxdata
inc eax
push ds
pop ebp
inc edx
xchg edi eax
xchg ebp eax
bound eax [ edx ]
add bl [ edi ]
cmp [ ecx + 0x73 ] cl
mov ebx [ esi - 0x76 ]
0x6984701 0xe6b9
mov ch 0xca
push 0x9cbea1d6
add bh bh
mov edi 0x4717fbe3
call 0x86580c1a
or ah 0xd4
sub_1020ac30
mov [ esp + 0x48 ] rwxdata
call sub_101f06cf
cdq
cld
mov [ 0x502e8bd4 ] eax
popad
int 0xb4
jl rwxdata
push cs
sbb ebp ecx
push esi
call 0x8fc0d506
and [ edi - 0x6a75576a ] bl
xor eax 0x8ceef0c9
rol [ ebx - 0x73ee144 ] cl
out 0xf7 al
mov dh 0xc9
or ch al
mov dl [ esi ]
popfd
xor eax [ eax + 0x7b6a753e ]
sbb [ ss : ebx + 0x7a ] 0x8978478d
or esi [ ebx - 0x103050f1 ]
sub al 0x98
insd
mov esp 0x54e3bba2
or ebx [ ecx + esi * 2 ]
pop ebx
loope rwxdata
stosb [ edi ]
in eax 0xb9
lea edx [ edx - 0x20 ]
pop esi
insb
mov dl 0x73
imul ebp ebx 0x73

movsb [ edi ] [ esi ]
adc eax 0x6664235b
iretd
add bl [ ebp + 0x482444c7 ]
cdq
0x92e8101b 0xfe5a
sub_1020ad88
dec ecx
call sub_1020fe84
and al 0xa3
bound ebx [ edx ]
cld
mov [ 0xffffffffd328f6b3 ] al
add esi [ eax ]
and eax 0x65364823
sbb dh [ ebp + 0x4a ]
pop eax
xchg [ ebp - 0x36 ] dl
lodsd [ esi ]
mov dl 0x18
push es
push eax
push cs
mov ch 0x2a
cdq
inc esi
jmp 0x33af24ec
sub_1020afda
pushfd
lea esp [ esp + 0x2c ]
js rwxdata
call sub_101e6b3f
push 0xd516afd0
push ecx
or eax eax
jmp rwxdata
jae rwxdata
mov [ esp ] 0x13
pushad
lea esp [ esp + 0x28 ]
jne rwxdata
pushfd
inc ecx
lea esp [ esp + 0x4 ]
bt cx 0x7
test bh 0x3f
test cx ax
cmp eax 0x7f
pushad
push ebx
pushad
lea esp [ esp + 0x44 ]
ja rwxdata
clc
cmp ch ch
pushfd
push edx
sub eax eax
sub esp 0xfffffff8
bt di si
bt dx 0x1
pushad
clc
or ebx ebx
jmp rwxdata
shl ch 0x1
bt dx di
mov ecx [ ebx ]
cmp cx si
clc
bt bx 0x6
jmp rwxdata
rcr bl cl
rcl bl cl
xchg ebp eax
xor bl bl
mov eax ebp
bt ebx 0xa
shl bl 0x5
mov bl 0x1
jmp sub_1020d8b7
not bl
pushad
setpe bl
inc ecx
pushfd
sete bl
call sub_101e9c01
mov [ esp + 0x4 ] al
push [ edi ]
pop [ esp + 0x20 ]
cmp ebp edx
clc
mov [ esp ] ecx
pushad
cmp edi ebx
push [ esp + 0x8 ]
lea esp [ esp + 0x44 ]
ja rwxdata
lea esp [ esp + 0x20 ]
je rwxdata
or ecx ecx
call sub_101eaf4d
shl [ edx - 0x70cf1004 ] cl
adc [ ecx ] ah
cwde
inc edi
salc
adc eax 0xd386c29a
sub ecx [ edi + 0x2f ]
inc edx
cld
push ecx
int 0x24
loope rwxdata
pushad
mov [ esp + 0xc ] 0x9e
clc
sub edi 0x4
mov [ esp ] 0x3
jmp rwxdata
pushfd
sub al 0x47
sub ebx edi
movsx di cl
ror edi cl
shr al cl
cmc
sub esp 0xfffffffc
add ebx esp
pushfd
xor edi 0x71307020
lea edi [ esi * 2 + 0x1443515d ]
bsr di bx
mov edi ebx
sub al al
ror al 0x3
mov al 0x2e
pushad
pushad
clc
mov [ esp + 0x1c ] 0x47fe
[ edi ]
call j_sub_101eb0cd
in al 0x45
cli
cmp [ esi ] al
les ebx [ edx - 0x65 ]
xchg esi eax
xchg edx eax
mov [ ebp - 0x5 ] cl
aaa
xor ch [ edi + 0x5bc685fa ]
retn
push 0xbb4c9f7f
mov edi [ esp + 0x4 ]
bswap bx
mov esi [ esp + 0x8 ]
push [ esp ]
mov bl 0x31
not bx
mov [ esp ] 0xfb
mov ebx [ esp + 0x10 ]
jmp rwxdata
lea esi [ esp - 0x3355e86c ]
pushfd
not si
movsx esi dl
mov esi eax
mov [ esp ] 0xda
mov [ esp ] ebx
pushad
movzx ax dl
call sub_10119d09
cwde
insd
mov dl 0x3f
mov ebx 0x38a65d98
dec ecx
xchg ebp eax
mov dh 0x4c
shr [ ecx + 0x1777557e ] cl
mov [ 0x722c8562 ] al
mov bl 0x15
cmpsb [ esi ] [ edi ]
clc
or [ eax ] ebx
push es
push es
mov ch 0x85
xchg ebp eax
shl esp 0xea
pop ecx
test eax 0xbcb26c75
or eax 0x896eb04f
mov esi 0xd1f81440
xchg ecx eax
mov ah 0x86
sbb [ ecx ] ch
mov eax 0x8597df67
inc edi
push edi
mov bl 0x8b
xor al 0x6b
push edi
dec eax
jge rwxdata
adc [ ecx + edi * 2 - 0x1e6146fb ] ecx
xchg esi eax
leave
inc ebp
fld st5
fxch st0
salc
pop ss
mov edx 0x206af6e5
inc eax
aad 0x5d
push [ edi ]
pop [ esp + 0x1c ]
push edi
cmc
pushfd
cmp edi ebx
pushfd
mov [ esp ] 0xfc
push ebx
lea esp [ esp + 0x2c ]
ja rwxdata
call sub_10119850
sahf
mov esi [ esi + ecx * 2 + 0x5d4c9210 ]
jne rwxdata
mov eax 0xcbcab94c
hlt
mov al [ 0xffffffffab57687e ]
inc ebx
cld
dec ebx
0x8989f664 0x3eb6
rcr al cl
setl al
sub ebx edi
inc di
rcl di cl
dec al
add ebx esp
call sub_101ffc2a
push 0x33ab7ae5
mov eax 0xaad57867
sub al 0xac
push ss
mov [ 0xffffffffb6a09fa5 ] eax
test al 0x3b
test ch al
cmp [ edx + 0x1d ] esp
pop esi
inc ecx
cmc
mov [ eax - 0x63 ] ebp
pop edx
outsb
lodsb [ esi ]
xor eax [ ebp + edi - 0x5f ]
dec ebp
adc al 0x4e
push 0xffffffb9
sub esp ebx
pop es
mov eax 0xf9753b9
das
sub esi [ ebx - 0x50 ]
scasd [ edi ]
inc eax
fcomip st0
add eax 0xc48fcbba
sti
mov ah 0x22

sub edx [ 0x12d4efd0 ]
fisub [ esi ]
mov eax [ 0xffffffffd40ac9d5 ]
dec ebx
mov [ 0x44fb30e0 ] eax
push ebp
mov al 0x70
imul edx [ esi - 0x69 ] 0x41f6e565
xchg ebx eax
sar bh 0x6d
pop ebp
or ebp [ ecx ]
imul edx ebp 0x735fa6e6
cmp eax edx
lea ebp [ ebp - 0x68 ]
lahf
mov [ eax + 0x57330840 ] ch
int1
push edi
mov [ ebx ] dl
insb
loope rwxdata
imul edx ebp 0x735fa6e6
or al 0xf2
sub_1020b43d
lea ecx [ edx * 8 + 0x45e3cbce ]
add edx eax
stc
stc
stc
mov ecx [ esi + 0x7c ]
push 0xfff61a38
add ecx edx
jmp rwxdata
clc
mov [ ebp - 0x10 ] ecx
bsr cx bx
mov ecx [ ebp + 0xc ]
push [ esp + 0x4 ]
cmp ecx 0xffff
call sub_101bf002
sub_1020b942
mov [ esp ] bl
lea esp [ esp + 0x4 ]
je rwxdata
bt cx si
call sub_101ea05b
inc edx
push esi
push 0xb0ce58c7
add al 0x1
inc eax
0x77390f00 0xe228
sbb al 0x7
pop eax
inc esi
pop eax
mov dh 0x68
shl [ edx ] 0x2c
cmp eax 0x97b08b13
mov bh 0x8e
mov al 0xc1
js rwxdata
cmp ch 0x26
call sub_102078ee
xchg [ ecx - 0x36061a43 ] eax
cmc
push es
mov ch 0xa3
and al 0xf9
dec edi
fsub [ ebx + 0x18 ]
xchg edi esp
cmp [ esi - 0x1f ] bh
insb
mov dl 0x50
popad
jb rwxdata
or eax 0x435b5636
dec edi
jecxz rwxdata
imul ebx [ ebp + ebp * 4 - 0x44fb2a51 ] 0x95e0cf36
and al 0x92
sub al 0x3d
out 0xf7 al
sbb eax 0x4d40a2b6
test [ edx ] 0xdd
push ds
mov bh 0x7
sbb [ eax ] bl
jpo rwxdata
jmp 0x8b43565d
imul eax [ esi + 0x2df5a19d ] 0x1586f942
push 0xffffffb2
sti
pop es
or al 0xb
lea ebx [ ebp + 0x66 ]
push cs
fbld [ ecx + ebp * 8 + 0x27f8e995 ]
and edi [ ebx + 0x23 ]
pop esp
popfd
test al 0xb
mov ebp 0x71651de2
add al 0xb5
pop ds
mov al [ 0x75497c43 ]
xchg [ ecx - 0x2d ] al
sahf
sar edx 0x1
jl rwxdata
dec ecx
pop eax
mov bh 0x4c
sbb eax 0xf4545350
out dx eax
hlt
push cs
insb
adc cl [ ecx + 0x11f6a8f6 ]
into
test [ edx + 0x122cc29c ] edi
sti
add eax [ esp + edx * 4 + 0x6a ]
mov edi 0x8ab6b708
dec esp
xchg esi eax
outsd
push ebx
imul edx [ edx + 0x4e ] 0x56
rol [ ecx ] cl
add bl bh
add edx [ esp + ecx * 2 ]
jb rwxdata
mov cl 0xe8
dec ebp
xchg ecx eax
or dh [ ebp + 0x7c ]
mov [ edx - 0x50af03f7 ] ebx
xchg ecx eax
mov [ esp + 0x4 ] cx
[ edi ]
jmp sub_1020e8fb
mov al [ 0xffffffff8e17a71e ]
push eax
rcr [ ebp + 0x22 ] 0x7d
mov eax 0x9f778786
mov edi 0xf1adc41b
pop ecx
push es
push eax
out dx eax
add bh [ ecx * 2 - 0x4f4ba48f ]
fild [ ecx - 0x22 ]
sub_1020c120
lea esp [ esp + 0x28 ]
jb rwxdata
pushfd
call sub_10200ed7
shl [ edx + edi * 8 ] 0xa4
cli
cmp [ esi ] al
pop ss
out dx al
push ecx
mov ebp 0x4cfc9d00
sti
arpl bx dx
stosd [ edi ]
lodsb [ esi ]
shl [ edi ] cl
push esi
pushad
test bh 0xb9
mov [ esp + 0xc ] 0xa7
cmp [ edi - 0x1 ] 0x0
pushfd
push edi
lea esp [ esp + 0x2c ]
jne rwxdata
pushad
call sub_10119d14
into
jg rwxdata
xor di di
lea edi [ ebp - 0x2ec979 ]
mov edi [ edx + 0x24 ]
cmc
jmp rwxdata
push [ esp + 0x2c ]
add edi [ ebx + ebx * 4 - 0x7881da1c ]
sahf
dec ebx
jb rwxdata
pushfd
cmc
add edi eax
lea esp [ esp + 0x4 ]
jae rwxdata
retn 0x30
and al 0x2c
xor esi ebp
push 0xe4550835
movzx ecx [ edi + ecx * 2 ]
rol di 0xa
mov edi [ edx + 0x1c ]
test cx 0x2a3b
cmp ah 0x82
bt ebp edx
pushad
add edi eax
clc
call sub_101e6a33
xor esi 0x22055a3d
mov ecx edi
btr si 0x9
sub ecx ebx
movzx si dl
movsx esi cl
lea esi [ ecx * 8 + 0x623568d9 ]
bt dx ax
mov esi esp
bt sp cx
sub edi 0x4
pushad
bt cx 0x9
pushad
push [ edi ]
pop [ esp + 0x3c ]
jmp rwxdata
push esp
movzx ecx [ edi + ecx * 2 ]
clc
bsf di sp
shld di si 0x1
pop edi
mov edi [ edx + 0x1c ]
cmp ax di
add edi eax
bt dx 0x6
call sub_101e6a5a
cmp dl 0xa0
jmp rwxdata
stc
cmp edi ebx
call sub_1020e8bc
outsd
mov ebp 0x717d42a1
int 0xe
xchg [ edi + 0x424bd27e ] eax
cmp al 0x7d
fstp st1
cmpsb [ esi ] [ edi ]
in eax 0x53
xchg edi eax
jb rwxdata
clc
cmpsb [ esi ] [ edi ]
xchg ebp eax
0x734cfa49 0xc374
sub_1020c15e
shr ebx 0xc
cmc
clc
bt bp 0xa
mov [ esp + 0x4 ] dl
cmp ebx 0x1
jmp rwxdata
push edi
sbb bh al
mov bx [ esi ]
pushad
clc
pushfd
and ebx 0xfff
sub esp 0xffffffdc
jle rwxdata
call sub_1020a340
xchg ebx eax
dec ebp
mov cl 0xa5
mov ecx 0x4f1eddc2
js rwxdata
test bh 0x4b
pushfd
lea esp [ esp + 0x4 ]
jle rwxdata
cmp cx ax
bt dx 0xf
test eax ebx
add [ ebx + edi ] ax
pushfd
pushfd
lea esp [ esp + 0x8 ]
jmp rwxdata
enter 0x13d 0x9d
loop rwxdata
0xa27e
call j_sub_1020dfd0
push ecx
lea esp [ esp + 0x4 ]
jne rwxdata
test ah dl
add [ ebx + edi ] ax
pushad
lea esp [ esp + 0x20 ]
jmp rwxdata
cmp di 0xb14e
test cl cl
stc
add esi 0x2
call sub_1020ad88
cmp [ 0xffffffff853a55ea ] esp
or esp edi
xor al 0xf
xabort 0x7
lea esp [ esp + 0x2c ]
je rwxdata
and ah [ eax + 0x5c7140ff ]
lahf
mov ebp 0x575b84d2
clc
cmp ch ch
pushfd
push edx
sub eax eax
sub esp 0xfffffff8
bt di si
bt dx 0x1
pushad
clc
or ebx ebx
jmp rwxdata
btc cx 0x2
mov ecx [ ebx ]
pushad
call sub_101ebdcf
push ebx
dec eax
dec esp
push edi
inc ecx
push eax
dec ecx
insb
insb
add [ esi + 0x66 ] bh
mov eax 0xb5e9f4ea
mov [ ebx + ebx ] 0x9
inc esp
0xdca09650 0x38a6
lea esp [ esp + 0x20 ]
je rwxdata
push 0xbb4c9f7f
mov edi [ esp + 0x4 ]
bswap bx
mov esi [ esp + 0x8 ]
push [ esp ]
mov bl 0x31
not bx
mov [ esp ] 0xfb
mov ebx [ esp + 0x10 ]
jmp rwxdata
lea esi [ esp - 0x3355e86c ]
pushfd
not si
movsx esi dl
mov esi eax
mov [ esp ] 0xda
mov [ esp ] ebx
pushad
movzx ax dl
call sub_10119d09
cwde
insd
mov dl 0x3f
call sub_10119850
sahf
mov esi [ esi + ecx * 2 + 0x5d4c9210 ]
jne rwxdata
sub edx [ 0x12d4efd0 ]
fisub [ esi ]
mov eax [ 0xffffffffd40ac9d5 ]
dec ebx
mov [ 0x44fb30e0 ] eax
push ebp
mov al 0x70
imul edx [ esi - 0x69 ] 0x41f6e565
xchg ebx eax
sar bh 0x6d
pop ebp
or ebp [ ecx ]
imul edx ebp 0x735fa6e6
cmp eax edx
lea ebp [ ebp - 0x68 ]
lahf
mov [ eax + 0x57330840 ] ch
int1
push edi
mov [ ebx ] dl
insb
loope rwxdata
imul edx ebp 0x735fa6e6
or al 0xf2
sub_1020c243
clc
jmp rwxdata
bt si si
add [ ebx - 0x4 ] bl
mov [ edi - 0x4316fc56 ] bl
inc ebx
int 0xeb
je rwxdata
pop esi
ror [ esi - 0x1f ] 0x1
movsd [ edi ] [ esi ]
sbb cl ah
adc cl [ ecx - 0x7c057b0a ]
sti
cmp al 0x8
mov ebx ebp
bound eax [ ebx ]
mov al 0xf2
xor [ edi - 0x422f4021 ] dl
rcl edx 0x9f
push ds
fwait
inc ebx
mov edx [ ebx - 0x66394bb6 ]
rcr [ esi + 0x78279b03 ] 0xba
cmp al 0x62
jae rwxdata
loopne rwxdata
iretd
add eax edi
mov [ esp ] ch
push eax
mov [ esp + 0x4 ] al
stc
cmp eax edx
push esi
call sub_1011982b
add [ edi + 0x2f ] ecx
fistp [ edi ]
sbb eax [ ebx + 0x4ba66fc4 ]
cmp ecx [ 0x75892db1 ]
or [ ebp - 0x5d028120 ] esi
jpe rwxdata
pop ebx
push es
mov eax [ 0x66d9e6ee ]
bt esi esi
and [ 0xffffffffd479069e ] al
dec edx
jmp rwxdata
hlt
sub_1020c6e6
mov [ esp + 0x18 ] di
push 0xc0479ff3
lea esp [ esp + 0x28 ]
ja rwxdata
pushfd
jmp sub_101e84ae
jmp rwxdata
imul edx edx 0xa
jb rwxdata
stc
pushfd
call sub_102022d5
mov ax 0x48fa
lea eax [ rwxdata ]
jmp rwxdata
add edx eax
pushfd
pushad
pushad
lea esp [ esp + 0x44 ]
jmp rwxdata
push rwxdata
call sub_102003b6
adc ebx [ ecx ]
inc ebp
jle rwxdata
not al
sub al dl
sar al 0x1
rcr al cl
add edi 0x1
sar al 0x1
pushad
sar al 0x6
push ecx
mov al [ edi ]
bt ebx 0x1d
bt bp cx
test al al
push 0x906e3e70
lea esp [ esp + 0x28 ]
je rwxdata
xor ch [ ebp - 0x27209348 ]
dec ebp
aad 0xa9
std
push ebx
dec ebx
adc edi [ edx ]
add al [ esi + 0x78 ]
adc [ esi + 0x2d ] cx
jb rwxdata
push 0x8d7ccccb
mov edi edx
sub esp 0xfffffffc
setbe ch
mov ecx edi
xor al 0x61
call sub_10118d7d
sar [ ebp - 0x1e ] 0x1
jno rwxdata
push 0x45addaa6
cmp ebp 0xc5947e3b
jmp rwxdata
sar [ edx ] cl
jl rwxdata
enter 0x13d 0x9d
loop rwxdata
xchg [ ecx + 0x702bd376 ] ch
psubq mmx0 [ ebx ]
imul edx [ ebx - 0x70 ] 0x2f
add bh al
inc esp
and al 0x4
pop esi
push es
mov eax [ 0xc8966e4 ]
and al 0x9c
lea esp [ esp + 0x8 ]
jmp rwxdata
int 0xb2
pop es
xor ch [ edi + edi + 0x6f ]
mov eax [ 0x43fb2820 ]
pop edi
jg rwxdata
sub al 0x30
sub esp 0xfffffffc
pushad
mov [ esp + 0x8 ] 0xf7b4
cmp ah 0x8c
test bx 0xf664
cmp al 0x9
lea esp [ esp + 0x20 ]
pushad
call sub_1020c6e6
clc
rol al 0x4
push ebx
not al
jmp rwxdata
pop es
aaa
sbb al 0x23
in al 0xfb
mov al [ 0x3ad32bdf ]
mov [ 0xfffffffffba42493 ] eax
pxor mm2 mm7
daa
cmpsd [ esi ] [ edi ]
ja rwxdata
xabort 0x7
and ah [ eax + 0x5c7140ff ]
lahf
mov ebp 0x575b84d2
lea esp [ esp + 0x2c ]
je rwxdata
push cs
push ecx
pushfd
jmp rwxdata
inc edx
add al 0x3e
lahf
mov ecx 0x4a301ce9
out dx al
outsd
scasd [ edi ]
dec eax
pop edi
imul esi [ ebx + 0x740a704e ] 0x3
pop esp
push 0xffffff94
fwait
test [ esi - 0x384ff070 ] ch
cwde
loop rwxdata
jmp rwxdata
adc [ 0xffffffff978271ce ] ah
loopne rwxdata
int 0xe
sbb [ 0xffffffffde5d33ed ] esp
cdq
inc esp
0xdca09650 0x38a6
sbb bh al
mov bx [ esi ]
pushad
clc
pushfd
and ebx 0xfff
sub esp 0xffffffdc
jle rwxdata
call sub_1020a340
xchg ebx eax
dec ebp
mov cl 0xa5
mov ecx 0x4f1eddc2
js rwxdata
jo rwxdata
jno rwxdata
mov al 0x3e
push cs
dec ecx
mov al [ 0xffffffffb49132e3 ]
inc ebp
cdq
mov ebx 0x64d4f40a
xchg [ ecx + 0x46 ] edi
xchg [ edx ] esi
lodsd [ esi ]
mov eax 0x4dd8df6c
pushfd
mov [ esp + 0x8 ] edx
pushad
push ecx
push 0x2a7fdc6f
pushfd
lea esp [ esp + 0x34 ]
jmp sub_1021426f
fdiv [ ebp + 0x9 ]
jns rwxdata
in al dx
inc esp
sbb ebp [ ebp * 8 + 0x477ad3f2 ]
in al 0xe3
out 0x1f al
xor bl dl
mov bl 0x11
mov edx 0x630f4f56
test eax 0x59459a0d
push ebp
sub ch [ ebx + 0x1f ]
inc eax
push ecx
0x9fc0
dec al
stc
pushfd
test cl 0x4b
not al
cmp dl 0x54
test ax 0x4d17
add al 0x79
push ebx
cmp al [ edi ]
cwde
not al
lea esp [ esp + 0x34 ]
jpe rwxdata
test bh 0x4b
pushfd
lea esp [ esp + 0x4 ]
jle rwxdata
cmp cx ax
bt dx 0xf
test eax ebx
add [ ebx + edi ] ax
pushfd
pushfd
lea esp [ esp + 0x8 ]
jmp rwxdata
0xa27e
enter 0xa8d9 0x36
std
inc esi
inc esp
rol [ 0xffffffffceb7a698 ] cl
test al 0x8
mov esi 0x34af9012
mov ebx [ esi + esi * 8 - 0x4daa7c23 ]
jno rwxdata
daa
aaa
fild [ ebx - 0x2a62734e ]
push esi
sti
add ebp [ ebx + 0x53 ]
nop
das
push edx
int 0x42
std
mov eax [ 0xffffffffe72fd61e ]
ja rwxdata
push 0x1c588f89
setbe ah
lea edi [ edi + 0x1 ]
lea eax [ ecx * 2 - 0x48a8b91 ]
lea eax [ esp - 0x79109c78 ]
pop eax
lea eax [ eax * 2 + 0x4341f52a ]
pop eax
push ecx
push 0x72711611
lea esp [ esp + 0x8 ]
ja rwxdata
cwde
lea edi [ edi + 0x1 ]
bswap ax
movzx ax dl
jb rwxdata
call j_sub_1020dfd0
push ecx
lea esp [ esp + 0x4 ]
jne rwxdata
test ah dl
add [ ebx + edi ] ax
pushad
lea esp [ esp + 0x20 ]
jmp rwxdata
cmp di 0xb14e
test cl cl
stc
add esi 0x2
call sub_1020ad88
cmp [ 0xffffffff853a55ea ] esp
or esp edi
xor al 0xf
out 0xd9 al
mov cl 0xa5
mov ecx 0x82fd5a45
fadd st6
sub ebx edx
xor al 0xea
pushfd
aad 0xc9
stc
cmpsb [ esi ] [ edi ]
out 0x71 eax
pop ebx
pushad
sub eax 0x8d76c962
and al 0x8
jb rwxdata
jmp rwxdata
push 0x84564d49
push 0x666294db
lea esp [ esp + 0x8 ]
jb rwxdata
pushfd
mov eax [ esp + 0x4 ]
mov [ esp ] 0x9bf9
pushad
jmp j_sub_1020cd09
pop eax
jl rwxdata
clc
cmp ch ch
pushfd
push edx
sub eax eax
sub esp 0xfffffff8
bt di si
bt dx 0x1
pushad
clc
or ebx ebx
jmp rwxdata
btc cx 0x2
mov ecx [ ebx ]
pushad
call sub_101ebdcf
push ebx
dec eax
dec esp
push edi
inc ecx
push eax
dec ecx
insb
insb
add [ esi + 0x66 ] bh
mov eax 0xb5e9f4ea
mov [ ebx + ebx ] 0x9
cmp bp cx
or al al
call sub_1020b942
pushad
clc
cmp ah 0x5a
push 0xe2404430
lea esp [ esp + 0x24 ]
ja rwxdata
test bl 0xa6
cmp si dx
pushfd
cmp ecx [ ebp - 0x4 ]
mov [ esp ] 0x51
pushad
call sub_10202c7f
out dx al
xchg [ eax ] bl
xchg [ eax ] edi
xchg edx eax
mov ebp cs
mov ch 0x79
bound esi [ edx ]
push ss
pushfd
call sub_10200ed7
shl [ edx + edi * 8 ] 0xa4
cli
cmp [ esi ] al
pop ss
out dx al
push ecx
mov ebp 0x4cfc9d00
sti
arpl bx dx
stosd [ edi ]
lodsb [ esi ]
shl [ edi ] cl
bt dx 0x1
test ebx esp
cmp [ edi - 0x1 ] 0x0
jmp rwxdata
pushad
lea esp [ esp + 0x20 ]
ja rwxdata
pushfd
pushad
push edx
lea esp [ esp + 0x28 ]
ja rwxdata
lea esp [ esp + 0x20 ]
je rwxdata
stc
jmp rwxdata
push edi
lea esp [ esp + 0x4 ]
jne rwxdata
pushad
jmp rwxdata
pushfd
lea esp [ esp + 0x4 ]
jb rwxdata
push 0xbb4c9f7f
mov edi [ esp + 0x4 ]
bswap bx
mov esi [ esp + 0x8 ]
push [ esp ]
mov bl 0x31
not bx
mov [ esp ] 0xfb
mov ebx [ esp + 0x10 ]
jmp rwxdata
lea esi [ esp - 0x3355e86c ]
pushfd
not si
movsx esi dl
mov esi eax
mov [ esp ] 0xda
mov [ esp ] ebx
pushad
movzx ax dl
call sub_10119d09
cwde
insd
mov dl 0x3f
call sub_101e8153
pushad
call sub_10119d14
into
jg rwxdata
bsf di sp
shl di 0xc
cmp al 0xff
push esi
mov edi [ edx + 0x24 ]
cmp ax 0x5e62
bt ecx 0x11
bt dx sp
add edi eax
cmp dl ah
movzx ecx [ edi + ecx * 2 ]
shl di 0x4
call sub_10119b53
call 0x26866d3a
pop eax
lea esp [ esp + 0x20 ]
jb rwxdata
clc
call sub_101f4c13
inc esi
dec edi
push eax
jb rwxdata
call sub_10119850
sahf
mov esi [ esi + ecx * 2 + 0x5d4c9210 ]
jne rwxdata
push [ esp + 0x2c ]
add edi [ ebx + ebx * 4 - 0x7881da1c ]
sahf
dec ebx
jb rwxdata
cmc
cmp [ edi - 0x1 ] 0x0
jmp rwxdata
pushad
sbb eax 0xf98ad561
cwde
pop es
sbb [ eax - 0x627043fa ] bl
lodsd [ esi ]
and [ ecx - 0x5c ] 0x939685fa
int3
sub esi [ esi * 2 - 0x70c44dd ]
mov al [ 0xffffffffb18eb692 ]
0x46e93595 0x2ed9
sub edx [ 0x12d4efd0 ]
fisub [ esi ]
mov eax [ 0xffffffffd40ac9d5 ]
dec ebx
mov [ 0x44fb30e0 ] eax
push ebp
mov al 0x70
imul edx [ esi - 0x69 ] 0x41f6e565
xchg ebx eax
sar bh 0x6d
pop ebp
or ebp [ ecx ]
imul edx ebp 0x735fa6e6
cmp eax edx
lea ebp [ ebp - 0x68 ]
lahf
mov [ eax + 0x57330840 ] ch
int1
push edi
mov [ ebx ] dl
insb
loope rwxdata
retn 0x30
and al 0x2c
xor esi ebp
pushfd
mov [ esp ] ah
mov [ esp ] 0x56
lea esp [ esp + 0x4 ]
jne rwxdata
imul edx ebp 0x735fa6e6
or al 0xf2
shl di cl
rcr di cl
mov edi [ edx + 0x24 ]
test bx 0x934a
pushfd
add edi eax
pushad
mov [ esp ] al
pushfd
mov [ esp ] 0xc9
movzx ecx [ edi + ecx * 2 ]
neg di
mov edi [ edx + 0x1c ]
cmc
mov [ esp + 0x10 ] dx
cmp cl 0x3e
push ebp
add edi eax
mov [ esp + 0x4 ] ah
cmp esp 0xd348009e
jmp rwxdata
mov edi [ edi + ecx * 4 ]
stc
clc
test edi edi
call sub_1020eecd
ror al 0x4
jmp sub_101e7cbf
sub_1020c885
mov [ esp + 0x4 ] dl
push [ esp + 0x4 ]
mov [ esp ] 0x7401
inc al
jmp rwxdata
pushfd
push [ esp ]
not al
call sub_1020d196
add ah dl
cmp al 0xf3
sub al 0xc5
inc eax
push ecx
dec edi
mov [ ecx - 0x52 ] 0x9a
mov ebp 0x5bdf9e60
inc ebx
push esp
mov ah 0xaa
mov [ edx - 0x7f455b3b ] edi
scasd [ edi ]
sub_1020c992
or al 0x34
mov al [ edi ]
pop eax
pop eax
cmpsb [ esi ] [ edi ]
cdq
add eax 0x3e81de99
popad
cmpsb [ esi ] [ edi ]
cmp [ esi ] ecx
jno rwxdata
int3
pop ebp
test al 0xd5
test eax 0x403fe0ea
cmp al 0xae
cmp eax 0x48c5b9b2
mov dh 0xbb
jecxz rwxdata
dec eax
lodsd [ esi ]
shr ebp 0x1
stc
in eax 0x2a
adc eax 0x318e11ad
mov ch 0xa
dec ebx
or esi [ ebx - 0x7c ]
mov al [ 0xfffffffffdb831be ]
jb rwxdata
jno rwxdata
div [ eax - 0x672f2020 ]
and bl [ eax + 0x58 ]
fcomp [ ecx - 0x1b ]
add [ esi - 0x33ed5868 ] edi
pop ebp
add [ ecx ] esi
out dx al
movsb [ edi ] [ esi ]
sti
mov [ 0x1ad9c5dc ] eax
jno rwxdata
or [ edi + 0x5b716120 ] bh
sbb [ ebx + esi * 8 - 0x623339c1 ] bl
push 0xc001293c
pushad
mov [ esp + 0x20 ] 0xbfd0ca96
push ecx
jmp rwxdata
dec ecx
aam 0x2a
cmp esi [ esi ]
imul edx edx 0x1e5f3875
add ebx [ edi + eax ]
aaa
cmpsb [ esi ] [ edi ]
movsd [ edi ] [ esi ]
adc al [ edx - 0x1ea239d7 ]
inc eax
push ds
cmp [ esi ] ah
xor [ esi ] ch
rol [ edx + 0x73 ] 0x78
lahf
fisub [ ebp + 0x5f3c7c66 ]
stc
push 0x2356b993
pushfd
cmp al 0x41
call sub_1020d55a
and al 0x95
sub al [ ebx - 0x73c8387e ]
shl [ edi + 0x5 ] cl
pop esp
in al dx
jno rwxdata
sbb ebx esp
lodsb [ esi ]
mov [ 0xffffffff8a340cbc ] eax
pop es
mov [ esp + 0x20 ] 0x1d3e57f9
pushad
mov [ esp ] 0xd2c7
push [ esp ]
pushfd
lea esp [ esp + 0x48 ]
jmp rwxdata
jmp rwxdata
pushad
mov [ esp + 0x1c ] edx
push 0xb3210dfc
pushad
lea esp [ esp + 0x40 ]
jmp sub_1021426f
sub_1020cb27
call sub_1020f29b
lea esp [ esp + 0x4 ]
jae rwxdata
mov bh 0x34
jmp rwxdata
btc bx 0x5
mov ebx eax
setns ch
mov edi eax
movsx cx bl
mov ecx 0x104
pushfd
xor al al
test eax esp
stc
[ edi ]
jmp sub_1020cb22
pop edx
movzx si bl
mov si 0xce7a
pushad
lea esi [ ebp * 2 - 0x641f9294 ]
mov ebx [ esp + 0x20 ]
bswap si
bswap si
xchg di si
mov edi [ esp + 0x24 ]
mov si 0x99de
mov esi [ esp + 0x28 ]
push eax
pushfd
lea esp [ esp + 0x34 ]
jns rwxdata
pushfd
pushfd
pushad
push 0xcf9003f2
mov esp ebp
pushfd
mov ebp [ esp + 0x4 ]
pushfd
pushfd
push [ esp + 0x10 ]
retn 0x1c
mov esp ebp
movsx bp dl
pop ebp
pushfd
push [ esp ]
pushad
mov [ esp ] di
push [ esp + 0x28 ]
retn 0x34
sub_1020cd09
lea esp [ esp + 0x28 ]
ja rwxdata
jmp rwxdata
pushad
jmp rwxdata
test bl 0xa6
cmp si dx
pushfd
cmp ecx [ ebp - 0x4 ]
mov [ esp ] 0x51
pushad
call sub_10202c7f
out dx al
xchg [ eax ] bl
xchg [ eax ] edi
xchg edx eax
mov ebp cs
mov ch 0x79
bound esi [ edx ]
push ss
push edx
call sub_1020c120
jbe rwxdata
mov ebx 0xfb760000
test [ edx ] bl
test dh dh
mov [ ecx + 0x6a58d609 ] bl
jl rwxdata
add dh [ ebp + 0x6d ]
iretd
adc eax 0x392531cd
and [ esi + 0x41 ] edi
push ecx
sub_1020d337
lea esp [ esp + 0x10 ]
sbb dh 0xfc
btc bx cx
lea edi [ ebp - 0x21ec1969 ]
shl si 0x2
sub eax eax
mov bh 0x34
jmp rwxdata
push 0xb99e8f38
clc
mov [ esp ] 0x9c
add eax edi
cmp ch 0x49
cmp eax edx
pushfd
mov [ esp + 0x4 ] cl
mov [ esp ] cl
call sub_101bee68
pop edx
movzx si bl
mov si 0xce7a
pushad
lea esi [ ebp * 2 - 0x641f9294 ]
mov ebx [ esp + 0x20 ]
bswap si
bswap si
xchg di si
mov edi [ esp + 0x24 ]
mov si 0x99de
mov esi [ esp + 0x28 ]
push eax
pushfd
lea esp [ esp + 0x34 ]
jns rwxdata
je rwxdata
inc edi
call [ ecx + ebx * 8 - 0x130c2f71 ]
mov ecx 0x6836cf25
pop ss
mov dl [ edx ]
sbb eax 0xac934ed1
inc ebp
stc
push ecx
push cs
mov ebx 0x177f3f43
out dx al
push [ ecx + 0x5b ]
paddd mm2 [ ecx + 0x648da4da ]
and al 0x10
jbe rwxdata
pushfd
pushfd
pushad
push 0xcf9003f2
mov esp ebp
pushfd
mov ebp [ esp + 0x4 ]
pushfd
pushfd
push [ esp + 0x10 ]
retn 0x1c
mov esp ebp
movsx bp dl
pop ebp
pushfd
push [ esp ]
pushad
mov [ esp ] di
push [ esp + 0x28 ]
retn 0x34
mov edi 0xe03ff32c
dec ecx
adc eax 0xb9e6dc22
xor [ esi - 0x666374ec ] ch
adc ah [ edx + ebx + 0x138b16a8 ]
dec esp
leave
out dx eax
popad
test ch bh
loope rwxdata
push ebp
sbb dh ah
adc [ edx ] esp
retn 0xdf7c
int1
sbb bh [ eax ]
jpe rwxdata
sub al 0xd9
inc esi
in al dx
push edx
mov ch 0x2a
cmp edi [ ebx - 0x2a ]
sub al 0xad
fwait
fsub [ edi - 0x534d1c05 ]
push ebp
imul edi [ ebp + 0x2d ] 0x5f7f02f1
mov bh 0x6a
mov ah 0xc5
mov esp 0xee307a22
inc ebx
mov al [ 0x6db7ac9b ]
jb rwxdata
popfd
push 0x2f
sbb edx [ edx ]
add al [ edx + 0x58bdabc9 ]
ficom [ esi ]
or eax 0x484a742
sub_1020d422
lea esp [ esp + 0x4 ]
jae rwxdata
mov bh 0x34
jmp rwxdata
shr di cl
sub bh dh
mov ebx eax
bswap di
xchg di cx
xchg edi ecx
mov edi 0x574ccb95
mov edi eax
and cx dx
seto cl
mov ecx 0x104
test ah dl
push ecx
clc
sub al al
bt bx bx
[ edi ]
pushfd
pushfd
lea esp [ esp + 0xc ]
jne rwxdata
pop edx
movzx si bl
mov si 0xce7a
pushad
lea esi [ ebp * 2 - 0x641f9294 ]
mov ebx [ esp + 0x20 ]
bswap si
bswap si
xchg di si
mov edi [ esp + 0x24 ]
mov si 0x99de
mov esi [ esp + 0x28 ]
push eax
pushfd
lea esp [ esp + 0x34 ]
jns rwxdata
sbb dh 0xfc
btc bx cx
lea edi [ ebp - 0x21ec1969 ]
shl si 0x2
sub eax eax
lea ecx [ esi - 0x5601510c ]
rol si cl
btc ecx edx
mov ecx edi
mov si 0x374b
sar esi cl
shr si cl
rol si 0xe
sub ecx ebx
cmc
mov esi esp
pushfd
pushfd
pushad
push 0xcf9003f2
mov esp ebp
pushfd
mov ebp [ esp + 0x4 ]
pushfd
pushfd
push [ esp + 0x10 ]
retn 0x1c
mov esp ebp
movsx bp dl
pop ebp
pushfd
push [ esp ]
pushad
mov [ esp ] di
push [ esp + 0x28 ]
retn 0x34
push [ edi ]
pop [ esp + 0x1c ]
push edi
cmc
pushfd
cmp edi ebx
pushfd
mov [ esp ] 0xfc
push ebx
lea esp [ esp + 0x2c ]
ja rwxdata
pushad
mov [ esp + 0xc ] 0x9e
clc
sub edi 0x4
mov [ esp ] 0x3
jmp rwxdata
rcr al cl
setl al
sub ebx edi
inc di
rcl di cl
dec al
add ebx esp
call sub_101ffc2a
push 0x33ab7ae5
mov eax 0xaad57867
sub al 0xac
push ss
mov [ 0xffffffffb6a09fa5 ] eax
test al 0x3b
test ch al
cmp [ edx + 0x1d ] esp
pop esi
inc ecx
cmc
mov [ eax - 0x63 ] ebp
pop edx
outsb
lodsb [ esi ]
xor eax [ ebp + edi - 0x5f ]
dec ebp
adc al 0x4e
push 0xffffffb9
sub esp ebx
pop es
mov eax 0xf9753b9
das
sub esi [ ebx - 0x50 ]
scasd [ edi ]
inc eax
fcomip st0
add eax 0xc48fcbba
sti
mov ah 0x22

sub_1020d55a
lea esp [ esp + 0x10 ]
jb rwxdata
cmp dh dl
seto ah
pushfd
mov ah [ esi ]
clc
jmp rwxdata
push ebp
cmp al 0x5a
pushfd
lea esp [ esp + 0x8 ]
ja rwxdata
cmp ah 0x41
call sub_1020827e
mov [ esp + 0x44 ] eax
pushfd
push ebp
mov [ esp ] ah
push [ esp + 0x4c ]
retn 0x50
mov ah 0x6b
mov ah dl
rol ah cl
add al 0x20
sub_1020df03
[ edi ]
rcr [ edi + 0x58050b17 ] 0x1
enter 0x4008 0x30
out dx eax
sbb esp ebx
mov edi 0x2e435c1f
adc [ eax ] ah
in eax 0xfe
ror [ ebp - 0x2f ] 0xa6
mov ecx 0x21e4b9e5
pop ecx
and eax 0x8e9081dd
std
mov al 0xcf
loopne rwxdata
jb rwxdata
std
outsd
pop esi
mov al 0xcf
loopne rwxdata
dec [ 0xffffffff97e73f1f ]
mov [ esp ] dl
pushfd
call sub_101e516c
or eax 0x97e73f1f
dec edx
and [ eax ] al
add dl dh
scasb [ edi ]
fsub [ ebx + 0x74 ]
jns rwxdata
or [ edi - 0x3d4e711e ] bh
and bl [ edi ]
and al 0x59
mov bl 0xec
daa
int 0x2b
mov ah 0xe7
cwde
test eax 0xb179fd0
add eax 0xd9d7c658
out dx al
mov ecx 0xe2429d26
dec ecx
mov ah 0x4e
add eax 0x2430bb5b
jno rwxdata
sti
inc ebx
hlt
sub_1020dfd0
bt di bp
pushfd
add [ ebx + edi ] ax
mov [ esp + 0x4 ] 0x34cc
pushad
pushfd
mov [ esp ] 0xbd3a
lea esp [ esp + 0x2c ]
jmp rwxdata
cmp di 0xb14e
test cl cl
stc
add esi 0x2
call sub_1020ad88
cmp [ 0xffffffff853a55ea ] esp
or esp edi
xor al 0xf
sub_1020e262
movzx esi [ edx + 0x1a ]
call sub_101f2b73
mov al [ esp ]
lea eax [ ebp - 0x4 ]
push ebx
call sub_101ffd12
pushad
pushad
mov [ esp + 0x3c ] 0xadaccaa9
lea esp [ esp + 0x3c ]
jae rwxdata
call sub_10118978
push 0xfa324f8b
push 0xe0b301cf
pushad
mov [ esp + 0x4 ] dl
pushad
lea esp [ esp + 0x44 ]
jmp sub_10213ccf
sub_1020e431
push [ esp + 0x18 ]
popf
mov [ esp ] 0x25a7
lea esp [ esp + 0x1a ]
jno rwxdata
pushfd
inc esi
mov [ esp ] bl
call sub_101195c4
mov [ esp + 0x24 ] 0xa697ca96
jmp rwxdata
pushfd
pushfd
inc esi
mov [ esp ] 0x2d1a
adc dl dl
push edx
pushad
mov [ esp ] 0x4a
push [ esp + 0x2c ]
retn 0x30
pushfd
jmp rwxdata
pushfd
mov [ esp + 0x28 ] 0xb0e2d33c
mov [ esp ] 0xcbf6
pushfd
lea esp [ esp + 0x2c ]
jmp j_sub_10214179
sub_1020e7f7
mov [ esp + 0x4 ] 0xea
cmp [ edi ] 0x23
push 0xed7d640f
push esi
mov [ esp + 0xc ] bh
mov [ esp + 0x8 ] 0x7a
lea esp [ esp + 0x2c ]
jne rwxdata
setbe ch
mov ecx edi
xor al 0x61
call sub_10118d7d
sar [ ebp - 0x1e ] 0x1
jno rwxdata
shld eax eax cl
and ah dl
xor edx edx
btc ax 0x1
bsr eax eax
inc ah
cmp cl al
mov eax edx
shl al cl
pushfd
add edi 0x1
inc al
shl al 0x6
ror al 0x3
mov al [ edi ]
pushfd
test bh bl
clc
test al al
push esi
pushad
lea esp [ esp + 0x2c ]
je rwxdata
add bh al
inc esp
and al 0x4
pop esi
push es
mov eax [ 0xc8966e4 ]
and al 0x9c
lea esp [ esp + 0x8 ]
jmp rwxdata
int 0xb2
pop es
xor ch [ edi + edi + 0x6f ]
mov eax [ 0x43fb2820 ]
pop edi
jg rwxdata
push 0x8d7ccccb
mov edi edx
sub esp 0xfffffffc
pushad
sub al 0x30
clc
cmc
cmc
cmp al 0x9
pushfd
push eax
mov [ esp ] eax
push ebx
lea esp [ esp + 0x2c ]
jmp rwxdata
push ecx
pushfd
jmp rwxdata
inc edx
add al 0x3e
lahf
mov ecx 0x4a301ce9
out dx al
outsd
scasd [ edi ]
dec eax
pop edi
imul esi [ ebx + 0x740a704e ] 0x3
pop esp
push 0xffffff94
fwait
test [ esi - 0x384ff070 ] ch
cwde
loop rwxdata
pushad
call sub_1020c6e6
clc
rol al 0x4
push ebx
not al
jmp rwxdata
pushfd
mov [ esp + 0x8 ] edx
pushad
push ecx
push 0x2a7fdc6f
pushfd
lea esp [ esp + 0x34 ]
jmp sub_1021426f
fdiv [ ebp + 0x9 ]
jns rwxdata
in al dx
inc esp
sbb ebp [ ebp * 8 + 0x477ad3f2 ]
in al 0xe3
out 0x1f al
xor bl dl
mov bl 0x11
mov edx 0x630f4f56
test eax 0x59459a0d
push ebp
sub ch [ ebx + 0x1f ]
inc eax
push ecx
0x9fc0
jmp rwxdata
push edx
int 0x42
std
mov eax [ 0xffffffffe72fd61e ]
ja rwxdata
dec al
stc
pushfd
test cl 0x4b
not al
cmp dl 0x54
test ax 0x4d17
add al 0x79
push ebx
cmp al [ edi ]
cwde
not al
lea esp [ esp + 0x34 ]
jpe rwxdata
out 0xd9 al
mov cl 0xa5
mov ecx 0x82fd5a45
fadd st6
sub ebx edx
xor al 0xea
pushfd
aad 0xc9
stc
cmpsb [ esi ] [ edi ]
out 0x71 eax
pop ebx
pushad
sub eax 0x8d76c962
and al 0x8
jb rwxdata
push 0x1c588f89
setbe ah
lea edi [ edi + 0x1 ]
lea eax [ ecx * 2 - 0x48a8b91 ]
lea eax [ esp - 0x79109c78 ]
pop eax
lea eax [ eax * 2 + 0x4341f52a ]
pop eax
push ecx
push 0x72711611
lea esp [ esp + 0x8 ]
ja rwxdata
cwde
lea edi [ edi + 0x1 ]
bswap ax
movzx ax dl
jb rwxdata
cmp bp cx
or al al
call sub_1020b942
pushad
clc
cmp ah 0x5a
push 0xe2404430
lea esp [ esp + 0x24 ]
ja rwxdata
jmp rwxdata
push 0x84564d49
push 0x666294db
lea esp [ esp + 0x8 ]
jb rwxdata
pushfd
mov eax [ esp + 0x4 ]
mov [ esp ] 0x9bf9
pushad
jmp j_sub_1020cd09
pop eax
jl rwxdata
stc
jmp rwxdata
test bl 0xa6
cmp si dx
pushfd
cmp ecx [ ebp - 0x4 ]
mov [ esp ] 0x51
pushad
call sub_10202c7f
out dx al
xchg [ eax ] bl
xchg [ eax ] edi
xchg edx eax
mov ebp cs
mov ch 0x79
bound esi [ edx ]
push ss
pushfd
call sub_10200ed7
shl [ edx + edi * 8 ] 0xa4
cli
cmp [ esi ] al
pop ss
out dx al
push ecx
mov ebp 0x4cfc9d00
sti
arpl bx dx
stosd [ edi ]
lodsb [ esi ]
shl [ edi ] cl
bt dx 0x1
test ebx esp
cmp [ edi - 0x1 ] 0x0
jmp rwxdata
pushad
lea esp [ esp + 0x20 ]
ja rwxdata
pushfd
pushad
push edx
lea esp [ esp + 0x28 ]
ja rwxdata
call sub_101e8153
push edi
lea esp [ esp + 0x4 ]
jne rwxdata
pushad
jmp rwxdata
pushfd
lea esp [ esp + 0x4 ]
jb rwxdata
pushad
call sub_10119d14
into
jg rwxdata
bsf di sp
shl di 0xc
cmp al 0xff
push esi
mov edi [ edx + 0x24 ]
cmp ax 0x5e62
bt ecx 0x11
bt dx sp
add edi eax
cmp dl ah
movzx ecx [ edi + ecx * 2 ]
shl di 0x4
call sub_10119b53
call 0x26866d3a
pop eax
lea esp [ esp + 0x20 ]
jb rwxdata
clc
call sub_101f4c13
inc esi
dec edi
push eax
jb rwxdata
push [ esp + 0x2c ]
add edi [ ebx + ebx * 4 - 0x7881da1c ]
sahf
dec ebx
jb rwxdata
cmc
cmp [ edi - 0x1 ] 0x0
jmp rwxdata
pushad
sbb eax 0xf98ad561
cwde
pop es
sbb [ eax - 0x627043fa ] bl
lodsd [ esi ]
and [ ecx - 0x5c ] 0x939685fa
int3
sub esi [ esi * 2 - 0x70c44dd ]
mov al [ 0xffffffffb18eb692 ]
0x46e93595 0x2ed9
retn 0x30
and al 0x2c
xor esi ebp
pushfd
mov [ esp ] ah
mov [ esp ] 0x56
lea esp [ esp + 0x4 ]
jne rwxdata
shl di cl
rcr di cl
mov edi [ edx + 0x24 ]
test bx 0x934a
pushfd
add edi eax
pushad
mov [ esp ] al
pushfd
mov [ esp ] 0xc9
movzx ecx [ edi + ecx * 2 ]
neg di
mov edi [ edx + 0x1c ]
cmc
mov [ esp + 0x10 ] dx
cmp cl 0x3e
push ebp
add edi eax
mov [ esp + 0x4 ] ah
cmp esp 0xd348009e
jmp rwxdata
mov edi [ edi + ecx * 4 ]
stc
clc
test edi edi
call sub_1020eecd
ror al 0x4
jmp sub_101e7cbf
sub_1020e89c
push [ esp + 0x8 ]
lea esp [ esp + 0x38 ]
je rwxdata
sbb dh 0xfc
btc bx cx
lea edi [ ebp - 0x21ec1969 ]
shl si 0x2
sub eax eax
mov bh 0x34
jmp rwxdata
test bx bx
add eax edi
cmp bp dx
clc
clc
pushfd
cmp eax edx
call sub_1020780e
pop edx
movzx si bl
mov si 0xce7a
pushad
lea esi [ ebp * 2 - 0x641f9294 ]
mov ebx [ esp + 0x20 ]
bswap si
bswap si
xchg di si
mov edi [ esp + 0x24 ]
mov si 0x99de
mov esi [ esp + 0x28 ]
push eax
pushfd
lea esp [ esp + 0x34 ]
jns rwxdata
pushfd
pushfd
pushad
push 0xcf9003f2
mov esp ebp
pushfd
mov ebp [ esp + 0x4 ]
pushfd
pushfd
push [ esp + 0x10 ]
retn 0x1c
mov esp ebp
movsx bp dl
pop ebp
pushfd
push [ esp ]
pushad
mov [ esp ] di
push [ esp + 0x28 ]
retn 0x34
sub_1020e8bc
lea esp [ esp + 0x40 ]
ja rwxdata
pushad
mov [ esp + 0xc ] 0x9e
clc
sub edi 0x4
mov [ esp ] 0x3
jmp rwxdata
shl al 0x4
sub al ch
clc
sub ebx edi
bsr di si
sbb al 0xe6
add ebx esp
shr di 0x1
sar al cl
bsf edi edx
mov edi ebx
rcl al 0x6
mov al 0x2e
call sub_1020df03
push [ edi ]
pop [ esp + 0x1c ]
push edi
cmc
pushfd
cmp edi ebx
pushfd
mov [ esp ] 0xfc
push ebx
lea esp [ esp + 0x2c ]
ja rwxdata
rcr al cl
setl al
sub ebx edi
inc di
rcl di cl
dec al
add ebx esp
call sub_101ffc2a
push 0x33ab7ae5
mov eax 0xaad57867
sub al 0xac
push ss
mov [ 0xffffffffb6a09fa5 ] eax
test al 0x3b
test ch al
cmp [ edx + 0x1d ] esp
pop esi
inc ecx
cmc
mov [ eax - 0x63 ] ebp
pop edx
outsb
lodsb [ esi ]
xor eax [ ebp + edi - 0x5f ]
dec ebp
adc al 0x4e
push 0xffffffb9
sub esp ebx
pop es
mov eax 0xf9753b9
das
sub esi [ ebx - 0x50 ]
scasd [ edi ]
inc eax
fcomip st0
add eax 0xc48fcbba
sti
mov ah 0x22

sub_1020e8ea
cmp eax 0x7f
push [ esp ]
mov [ esp + 0x4 ] dh
jmp rwxdata
jmp rwxdata
lea esp [ esp + 0xc ]
ja rwxdata
rcr bl cl
rcl bl cl
xchg ebp eax
xor bl bl
mov eax ebp
bt ebx 0xa
shl bl 0x5
mov bl 0x1
jmp sub_1020d8b7
jmp rwxdata
jmp rwxdata
inc bl
inc ecx
push esp
inc ecx
stc
shr bl cl
rcl bl cl
mov bl [ esp ]
xchg ebp eax
bsr ax ax
setg bl
cmp dx cx
shl bl cl
mov eax ebp
sbb bl ah
shl bl 0x6
mov bl 0x1
cmc
bt eax ecx
xchg [ esp ] esi
ror esi 0xc
rcl si cl
mov esi edi
clc
stc
sub esi eax
pushad
[ edi ] [ esi ]
movsx si al
mov esi [ esp + 0x20 ]
mov [ esp + 0x8 ] al
pushad
lea esp [ esp + 0x44 ]
jmp rwxdata
pushad
mov [ esp + 0x8 ] 0x24
lea esp [ esp + 0x20 ]
call sub_10201bcd
pushad
mov [ esp ] cl
lea esp [ esp + 0x20 ]
jae rwxdata
jmp rwxdata
cmc
stc
jmp rwxdata
lodsb [ esi ]
push 0xe19feba4
sbb bl 0x4b
not al
clc
rcl bl cl
adc bl 0x6a
shl bl 0x6
xor al 0xf7
sub bl 0x51
jmp rwxdata
pushfd
sub ecx ecx
pushfd
call sub_101ea79e
xchg ebx eax
xchg esi eax
test eax 0xa935b1ad
mov edx 0x7ead1ba3
or ebx esi
push 0x78
neg al
jmp rwxdata
pushfd
pushfd
push 0x8001d5ce
inc al
not bl
sets bl
mov [ esp + 0x8 ] bl
stosb [ edi ]
setbe bl
not bl
jmp rwxdata
mov bl 0x2
lea esp [ esp + 0x10 ]
sub_1020e8fb
lea esp [ esp + 0x8 ]
jne rwxdata
sbb dh 0xfc
btc bx cx
lea edi [ ebp - 0x21ec1969 ]
shl si 0x2
sub eax eax
mov bh 0x34
jmp rwxdata
setge cl
shrd si sp 0xf
jmp rwxdata
pop edx
movzx si bl
mov si 0xce7a
pushad
lea esi [ ebp * 2 - 0x641f9294 ]
mov ebx [ esp + 0x20 ]
bswap si
bswap si
xchg di si
mov edi [ esp + 0x24 ]
mov si 0x99de
mov esi [ esp + 0x28 ]
push eax
pushfd
lea esp [ esp + 0x34 ]
jns rwxdata
xor esi 0x22055a3d
mov ecx edi
btr si 0x9
sub ecx ebx
movzx si dl
movsx esi cl
lea esi [ ecx * 8 + 0x623568d9 ]
bt dx ax
mov esi esp
bt sp cx
sub edi 0x4
pushad
bt cx 0x9
pushad
push [ edi ]
pop [ esp + 0x3c ]
jmp rwxdata
pushfd
pushfd
pushad
push 0xcf9003f2
mov esp ebp
pushfd
mov ebp [ esp + 0x4 ]
pushfd
pushfd
push [ esp + 0x10 ]
retn 0x1c
mov esp ebp
movsx bp dl
pop ebp
pushfd
push [ esp ]
pushad
mov [ esp ] di
push [ esp + 0x28 ]
retn 0x34
cmp dl 0xa0
jmp rwxdata
stc
cmp edi ebx
call sub_1020e8bc
outsd
mov ebp 0x717d42a1
int 0xe
xchg [ edi + 0x424bd27e ] eax
cmp al 0x7d
fstp st1
cmpsb [ esi ] [ edi ]
in eax 0x53
xchg edi eax
jb rwxdata
clc
cmpsb [ esi ] [ edi ]
xchg ebp eax
0x734cfa49 0xc374
sub_1020eb0b
bsf ax bx
mov [ esp ] edi
and eax 0xac43dd74
shl al cl
push ebx
clc
shl ah cl
bswap ax
push edx
rcl ah 0x2
mov eax [ ebp + 0x8 ]
cmc
bt sp bx
test di 0xa509
pushad
test eax eax
mov [ esp ] di
push [ esp + 0xc ]
pushad
call sub_101f3c02
dec edi
inc esi
pop ecx
fiadd [ ebp - 0x28f54a76 ]
dec eax
cmp al 0xa9
dec ebp
mov cl 0x97
fsub [ ebx + 0x7b70bfa ]
sub edx [ ebx ]
xor ebp [ edi + ebp * 8 + 0x15695690 ]
test eax 0x423c47e7
movsb [ edi ] [ esi ]
cmp ch [ ecx - 0x5be977ea ]
jpe rwxdata
imul ecx [ ebp + 0x32 ] 0x73
dec ecx
mov ch 0xc9
pop eax
0xeeb1
sub_1020eecd
call sub_1020e89c
add [ eax ] al
inc edi
je rwxdata
and edi esp
cmp eax 0x7b36bb6
xlat
je rwxdata
outsd
jne rwxdata
mov dh 0x41
push es
js rwxdata
test cl cl
inc esi
imul ebp [ ebp + 0x4e ] 0x45656d61
cld
pop ds
insd
scasb [ edi ]
jae rwxdata
imul esi [ ebx + 0x1b74d707 ] 0x64
js rwxdata
add dl dl
hlt
js rwxdata
dec esi
popad
insd
inc ebp
in al dx
dec esi
jmp 0x1edf87d3
sub_1020eee9
shl ah cl
call sub_101e5d26
lahf
and [ edx ] 0xbc
0x3a64d5c4 0x3d8e
popfd
adc esi [ 0xffffffffe877003e ]
xchg ebx eax
or al 0x4b
xor al 0xd6
sub [ ebx ] ch
adc al 0x7e
sar [ ebp + 0x6adde201 ] 0x15
push ds
inc ecx
out dx al
xor eax edi
mov bx 0xf16d
inc ebp
aam 0xb
and cl [ eax + 0x43 ]

sub_1020f181
mov [ esp + 0x4 ] ebx
push ebx
lahf
mov [ esp ] cl
pop eax
lea eax [ rwxdata ]
call sub_101f44c4
pushad
pushfd
mov [ esp + 0x20 ] 0x766ca97
pushfd
pushad
mov [ esp + 0x40 ] 0xa38a3c20
pushfd
mov [ esp + 0x10 ] dh
pushfd
push [ esp ]
lea esp [ esp + 0x4c ]
jmp rwxdata
push 0x91552ce4
push [ esp ]
mov [ esp + 0x4 ] edx
lea esp [ esp + 0x4 ]
sub_1020f29b
call sub_1020e431
clc
cmp ch ch
pushfd
push edx
sub eax eax
sub esp 0xfffffff8
bt di si
bt dx 0x1
pushad
clc
or ebx ebx
jmp rwxdata
lea esp [ esp + 0x20 ]
je rwxdata
push 0xbb4c9f7f
mov edi [ esp + 0x4 ]
bswap bx
mov esi [ esp + 0x8 ]
push [ esp ]
mov bl 0x31
not bx
mov [ esp ] 0xfb
mov ebx [ esp + 0x10 ]
jmp rwxdata
lea esi [ esp - 0x3355e86c ]
pushfd
not si
movsx esi dl
mov esi eax
mov [ esp ] 0xda
mov [ esp ] ebx
pushad
movzx ax dl
call sub_10119d09
cwde
insd
mov dl 0x3f
call sub_10119850
sahf
mov esi [ esi + ecx * 2 + 0x5d4c9210 ]
jne rwxdata
sub edx [ 0x12d4efd0 ]
fisub [ esi ]
mov eax [ 0xffffffffd40ac9d5 ]
dec ebx
mov [ 0x44fb30e0 ] eax
push ebp
mov al 0x70
imul edx [ esi - 0x69 ] 0x41f6e565
xchg ebx eax
sar bh 0x6d
pop ebp
or ebp [ ecx ]
imul edx ebp 0x735fa6e6
cmp eax edx
lea ebp [ ebp - 0x68 ]
lahf
mov [ eax + 0x57330840 ] ch
int1
push edi
mov [ ebx ] dl
insb
loope rwxdata
imul edx ebp 0x735fa6e6
or al 0xf2
sub_1020f4e3
lea esp [ esp + 0x30 ]
ja rwxdata
pushfd
jmp sub_101e84ae
push 0x3156efe1
mov [ esp ] 0xe050cd19
push ebx
mov [ esp ] al
lea esp [ esp + 0x8 ]
jmp rwxdata
jmp rwxdata
imul edx edx 0xa
jb rwxdata
stc
pushfd
call sub_102022d5
mov ax 0x48fa
lea eax [ rwxdata ]
jmp rwxdata
add edx eax
pushfd
pushad
pushad
lea esp [ esp + 0x44 ]
jmp rwxdata
push rwxdata
call sub_102003b6
adc ebx [ ecx ]
inc ebp
jle rwxdata
not al
sub al dl
sar al 0x1
rcr al cl
add edi 0x1
sar al 0x1
pushad
sar al 0x6
push ecx
mov al [ edi ]
bt ebx 0x1d
bt bp cx
test al al
push 0x906e3e70
lea esp [ esp + 0x28 ]
je rwxdata
xor ch [ ebp - 0x27209348 ]
dec ebp
aad 0xa9
std
push ebx
dec ebx
adc edi [ edx ]
add al [ esi + 0x78 ]
adc [ esi + 0x2d ] cx
jb rwxdata
push 0x8d7ccccb
mov edi edx
sub esp 0xfffffffc
setbe ch
mov ecx edi
xor al 0x61
call sub_10118d7d
sar [ ebp - 0x1e ] 0x1
jno rwxdata
push 0x45addaa6
cmp ebp 0xc5947e3b
jmp rwxdata
sar [ edx ] cl
jl rwxdata
enter 0x13d 0x9d
loop rwxdata
xchg [ ecx + 0x702bd376 ] ch
psubq mmx0 [ ebx ]
imul edx [ ebx - 0x70 ] 0x2f
add bh al
inc esp
and al 0x4
pop esi
push es
mov eax [ 0xc8966e4 ]
and al 0x9c
lea esp [ esp + 0x8 ]
jmp rwxdata
int 0xb2
pop es
xor ch [ edi + edi + 0x6f ]
mov eax [ 0x43fb2820 ]
pop edi
jg rwxdata
sub al 0x30
sub esp 0xfffffffc
pushad
mov [ esp + 0x8 ] 0xf7b4
cmp ah 0x8c
test bx 0xf664
cmp al 0x9
lea esp [ esp + 0x20 ]
pushad
call sub_1020c6e6
clc
rol al 0x4
push ebx
not al
jmp rwxdata
pop es
aaa
sbb al 0x23
in al 0xfb
mov al [ 0x3ad32bdf ]
mov [ 0xfffffffffba42493 ] eax
pxor mm2 mm7
daa
cmpsd [ esi ] [ edi ]
ja rwxdata
xabort 0x7
and ah [ eax + 0x5c7140ff ]
lahf
mov ebp 0x575b84d2
lea esp [ esp + 0x2c ]
je rwxdata
push cs
push ecx
pushfd
jmp rwxdata
inc edx
add al 0x3e
lahf
mov ecx 0x4a301ce9
out dx al
outsd
scasd [ edi ]
dec eax
pop edi
imul esi [ ebx + 0x740a704e ] 0x3
pop esp
push 0xffffff94
fwait
test [ esi - 0x384ff070 ] ch
cwde
loop rwxdata
jmp rwxdata
adc [ 0xffffffff978271ce ] ah
loopne rwxdata
int 0xe
sbb [ 0xffffffffde5d33ed ] esp
cdq
inc esp
0xdca09650 0x38a6
sbb bh al
mov bx [ esi ]
pushad
clc
pushfd
and ebx 0xfff
sub esp 0xffffffdc
jle rwxdata
call sub_1020a340
xchg ebx eax
dec ebp
mov cl 0xa5
mov ecx 0x4f1eddc2
js rwxdata
jo rwxdata
jno rwxdata
mov al 0x3e
push cs
dec ecx
mov al [ 0xffffffffb49132e3 ]
inc ebp
cdq
mov ebx 0x64d4f40a
xchg [ ecx + 0x46 ] edi
xchg [ edx ] esi
lodsd [ esi ]
mov eax 0x4dd8df6c
pushfd
mov [ esp + 0x8 ] edx
pushad
push ecx
push 0x2a7fdc6f
pushfd
lea esp [ esp + 0x34 ]
jmp sub_1021426f
fdiv [ ebp + 0x9 ]
jns rwxdata
in al dx
inc esp
sbb ebp [ ebp * 8 + 0x477ad3f2 ]
in al 0xe3
out 0x1f al
xor bl dl
mov bl 0x11
mov edx 0x630f4f56
test eax 0x59459a0d
push ebp
sub ch [ ebx + 0x1f ]
inc eax
push ecx
0x9fc0
dec al
stc
pushfd
test cl 0x4b
not al
cmp dl 0x54
test ax 0x4d17
add al 0x79
push ebx
cmp al [ edi ]
cwde
not al
lea esp [ esp + 0x34 ]
jpe rwxdata
test bh 0x4b
pushfd
lea esp [ esp + 0x4 ]
jle rwxdata
cmp cx ax
bt dx 0xf
test eax ebx
add [ ebx + edi ] ax
pushfd
pushfd
lea esp [ esp + 0x8 ]
jmp rwxdata
0xa27e
enter 0xa8d9 0x36
std
inc esi
inc esp
rol [ 0xffffffffceb7a698 ] cl
test al 0x8
mov esi 0x34af9012
mov ebx [ esi + esi * 8 - 0x4daa7c23 ]
jno rwxdata
daa
aaa
fild [ ebx - 0x2a62734e ]
push esi
sti
add ebp [ ebx + 0x53 ]
nop
das
push edx
int 0x42
std
mov eax [ 0xffffffffe72fd61e ]
ja rwxdata
push 0x1c588f89
setbe ah
lea edi [ edi + 0x1 ]
lea eax [ ecx * 2 - 0x48a8b91 ]
lea eax [ esp - 0x79109c78 ]
pop eax
lea eax [ eax * 2 + 0x4341f52a ]
pop eax
push ecx
push 0x72711611
lea esp [ esp + 0x8 ]
ja rwxdata
cwde
lea edi [ edi + 0x1 ]
bswap ax
movzx ax dl
jb rwxdata
call j_sub_1020dfd0
push ecx
lea esp [ esp + 0x4 ]
jne rwxdata
test ah dl
add [ ebx + edi ] ax
pushad
lea esp [ esp + 0x20 ]
jmp rwxdata
cmp di 0xb14e
test cl cl
stc
add esi 0x2
call sub_1020ad88
cmp [ 0xffffffff853a55ea ] esp
or esp edi
xor al 0xf
out 0xd9 al
mov cl 0xa5
mov ecx 0x82fd5a45
fadd st6
sub ebx edx
xor al 0xea
pushfd
aad 0xc9
stc
cmpsb [ esi ] [ edi ]
out 0x71 eax
pop ebx
pushad
sub eax 0x8d76c962
and al 0x8
jb rwxdata
jmp rwxdata
push 0x84564d49
push 0x666294db
lea esp [ esp + 0x8 ]
jb rwxdata
pushfd
mov eax [ esp + 0x4 ]
mov [ esp ] 0x9bf9
pushad
jmp j_sub_1020cd09
pop eax
jl rwxdata
clc
cmp ch ch
pushfd
push edx
sub eax eax
sub esp 0xfffffff8
bt di si
bt dx 0x1
pushad
clc
or ebx ebx
jmp rwxdata
btc cx 0x2
mov ecx [ ebx ]
pushad
call sub_101ebdcf
push ebx
dec eax
dec esp
push edi
inc ecx
push eax
dec ecx
insb
insb
add [ esi + 0x66 ] bh
mov eax 0xb5e9f4ea
mov [ ebx + ebx ] 0x9
cmp bp cx
or al al
call sub_1020b942
pushad
clc
cmp ah 0x5a
push 0xe2404430
lea esp [ esp + 0x24 ]
ja rwxdata
test bl 0xa6
cmp si dx
pushfd
cmp ecx [ ebp - 0x4 ]
mov [ esp ] 0x51
pushad
call sub_10202c7f
out dx al
xchg [ eax ] bl
xchg [ eax ] edi
xchg edx eax
mov ebp cs
mov ch 0x79
bound esi [ edx ]
push ss
pushfd
call sub_10200ed7
shl [ edx + edi * 8 ] 0xa4
cli
cmp [ esi ] al
pop ss
out dx al
push ecx
mov ebp 0x4cfc9d00
sti
arpl bx dx
stosd [ edi ]
lodsb [ esi ]
shl [ edi ] cl
bt dx 0x1
test ebx esp
cmp [ edi - 0x1 ] 0x0
jmp rwxdata
pushad
lea esp [ esp + 0x20 ]
ja rwxdata
pushfd
pushad
push edx
lea esp [ esp + 0x28 ]
ja rwxdata
lea esp [ esp + 0x20 ]
je rwxdata
stc
jmp rwxdata
push edi
lea esp [ esp + 0x4 ]
jne rwxdata
pushad
jmp rwxdata
pushfd
lea esp [ esp + 0x4 ]
jb rwxdata
push 0xbb4c9f7f
mov edi [ esp + 0x4 ]
bswap bx
mov esi [ esp + 0x8 ]
push [ esp ]
mov bl 0x31
not bx
mov [ esp ] 0xfb
mov ebx [ esp + 0x10 ]
jmp rwxdata
lea esi [ esp - 0x3355e86c ]
pushfd
not si
movsx esi dl
mov esi eax
mov [ esp ] 0xda
mov [ esp ] ebx
pushad
movzx ax dl
call sub_10119d09
cwde
insd
mov dl 0x3f
call sub_101e8153
pushad
call sub_10119d14
into
jg rwxdata
bsf di sp
shl di 0xc
cmp al 0xff
push esi
mov edi [ edx + 0x24 ]
cmp ax 0x5e62
bt ecx 0x11
bt dx sp
add edi eax
cmp dl ah
movzx ecx [ edi + ecx * 2 ]
shl di 0x4
call sub_10119b53
call 0x26866d3a
pop eax
lea esp [ esp + 0x20 ]
jb rwxdata
clc
call sub_101f4c13
inc esi
dec edi
push eax
jb rwxdata
call sub_10119850
sahf
mov esi [ esi + ecx * 2 + 0x5d4c9210 ]
jne rwxdata
push [ esp + 0x2c ]
add edi [ ebx + ebx * 4 - 0x7881da1c ]
sahf
dec ebx
jb rwxdata
cmc
cmp [ edi - 0x1 ] 0x0
jmp rwxdata
pushad
sbb eax 0xf98ad561
cwde
pop es
sbb [ eax - 0x627043fa ] bl
lodsd [ esi ]
and [ ecx - 0x5c ] 0x939685fa
int3
sub esi [ esi * 2 - 0x70c44dd ]
mov al [ 0xffffffffb18eb692 ]
0x46e93595 0x2ed9
sub edx [ 0x12d4efd0 ]
fisub [ esi ]
mov eax [ 0xffffffffd40ac9d5 ]
dec ebx
mov [ 0x44fb30e0 ] eax
push ebp
mov al 0x70
imul edx [ esi - 0x69 ] 0x41f6e565
xchg ebx eax
sar bh 0x6d
pop ebp
or ebp [ ecx ]
imul edx ebp 0x735fa6e6
cmp eax edx
lea ebp [ ebp - 0x68 ]
lahf
mov [ eax + 0x57330840 ] ch
int1
push edi
mov [ ebx ] dl
insb
loope rwxdata
retn 0x30
and al 0x2c
xor esi ebp
pushfd
mov [ esp ] ah
mov [ esp ] 0x56
lea esp [ esp + 0x4 ]
jne rwxdata
imul edx ebp 0x735fa6e6
or al 0xf2
shl di cl
rcr di cl
mov edi [ edx + 0x24 ]
test bx 0x934a
pushfd
add edi eax
pushad
mov [ esp ] al
pushfd
mov [ esp ] 0xc9
movzx ecx [ edi + ecx * 2 ]
neg di
mov edi [ edx + 0x1c ]
cmc
mov [ esp + 0x10 ] dx
cmp cl 0x3e
push ebp
add edi eax
mov [ esp + 0x4 ] ah
cmp esp 0xd348009e
jmp rwxdata
mov edi [ edi + ecx * 4 ]
stc
clc
test edi edi
call sub_1020eecd
ror al 0x4
jmp sub_101e7cbf
sub_1020fe84
push [ esp + 0x4 ]
jmp rwxdata
lea esp [ esp + 0xc ]
jne rwxdata
bts bx si
cmp ecx 0x993fdf65
neg bh
mov bx [ esi ]
pushad
call sub_101bfaea
add bh [ edx + 0x53285624 ]
dec esp
lea ebp [ esi - 0x298de680 ]
mov ecx 0x8da21ce5
xchg edx eax
dec esp
popfd
and ah [ eax + 0x6932d31e ]
push ss
sub bh [ ecx ]
inc esi
and ah bl
sbb ebx 0x33
jmp rwxdata
mov cx bx
and ch 0x43
dec ch
mov ecx [ ebp - 0x4 ]
cmc
test bl 0x15
jmp rwxdata
and al 0xb3
sub ebx [ edi ]
inc eax
0x5b4a9545 0x350a
sbb al 0xb5
0x1b3a912a 0xa513
cmc
cmp [ ebp + 0x14 ] ecx
pushad
push 0x288274f9
mov [ esp + 0x4 ] ax
lea esp [ esp + 0x24 ]
jl rwxdata
pushfd
pushfd
pushfd
lea esp [ esp + 0xc ]
ja rwxdata
ja rwxdata
bsr cx ax
and cl 0x56
inc cl
mov ecx [ esi + 0x4 ]
clc
call sub_101f139f
inc bl
inc ecx
push esp
inc ecx
stc
shr bl cl
rcl bl cl
mov bl [ esp ]
xchg ebp eax
bsr ax ax
setg bl
cmp dx cx
shl bl cl
mov eax ebp
sbb bl ah
shl bl 0x6
mov bl 0x1
cmc
bt eax ecx
xchg [ esp ] esi
ror esi 0xc
rcl si cl
mov esi edi
clc
stc
sub esi eax
pushad
[ edi ] [ esi ]
movsx si al
mov esi [ esp + 0x20 ]
mov [ esp + 0x8 ] al
pushad
lea esp [ esp + 0x44 ]
jmp rwxdata
pushfd
movsx esi cl
movzx si al
mov esi [ esp + 0x4 ]
lea edi [ eax + 0x66bcfce0 ]
xchg cl bh
mov edi [ esp + 0x8 ]
sete cl
bswap ecx
movsx bx al
mov ebx [ esp + 0xc ]
movsx cx al
call sub_101ea8a1
pushad
mov [ esp + 0x4 ] ecx
inc ecx
lea esp [ esp + 0x20 ]
pushad
pushad
jmp rwxdata
pushfd
pop esi
jmp rwxdata
pushad
mov [ esp + 0x8 ] 0x24
lea esp [ esp + 0x20 ]
call sub_10201bcd
pushad
mov [ esp ] cl
lea esp [ esp + 0x20 ]
jae rwxdata
pushfd
lea esp [ esp + 0x44 ]
call sub_10201bcd
call sub_1020a3f0
and al 0x71
mov bh dl
adc al 0xb
dec esp
lodsb [ esi ]
push ebp
push ebx
mov bl 0x95
mov eax 0xcbcab94c
hlt
movzx ebx bl
pop esi
pushad
push esp
mov edi [ esp + 0x24 ]
call sub_10118e9f
jmp rwxdata
cmc
stc
jmp rwxdata
lodsb [ esi ]
push 0xe19feba4
sbb bl 0x4b
not al
clc
rcl bl cl
adc bl 0x6a
shl bl 0x6
xor al 0xf7
sub bl 0x51
jmp rwxdata
pushfd
sub ecx ecx
pushfd
call sub_101ea79e
xchg ebx eax
xchg esi eax
test eax 0xa935b1ad
mov edx 0x7ead1ba3
or ebx esi
push 0x78
neg al
jmp rwxdata
pushfd
pushfd
push 0x8001d5ce
inc al
not bl
sets bl
mov [ esp + 0x8 ] bl
stosb [ edi ]
setbe bl
not bl
jmp rwxdata
mov bl 0x2
lea esp [ esp + 0x10 ]
sub_1020ff4d
call j_sub_101f05e1
pop edx
stosd [ edi ]
in al dx
jb rwxdata
jl rwxdata
cli
test [ ecx + 0x746a55cd ] esi
0x1aa4
sub dl [ 0x4b343aa4 ]
mov al [ gs : 0x7125d04f ]
pop edx
jecxz rwxdata
test al 0x52
lds ebx [ ecx - 0x7a ]
mov ebx 0x1263356a
rcl ecx 0x1
cmp [ edx + edi * 8 ] esp
pop ss
pop es
sbb [ edx + 0x5d ] al
mov cl 0x17
and al 0xfc
cmp eax 0x27944a4e
ror [ esi + 0x75 ] 0x1
rol [ esi - 0x1d4fb188 ] cl
pop ebp
mov edx 0xe911cdcb
sbb ebp eax
push esi
scasb [ edi ]
cdq
lds ecx [ edx + edx * 8 + 0x7b ]
add eax [ ebp - 0x507848c6 ]
mov al 0xd2
je rwxdata
mov bh 0x44
mov edx 0xfff683e8
[ edx - 0x55 ]
sub_10212488
push 0xe11e9f01
mov [ ebp + 0x4 ] eax
pushad
pushfd
pop [ esp + 0x28 ]
mov [ esp ] 0x4b
push edx
push 0x7e90c12c
push [ esp ]
push [ esp + 0x34 ]
pop [ ebp ]
push ecx
push 0x9d07cdcd
mov [ esp + 0x14 ] 0x7fca
push 0xb3061064
lea esp [ esp + 0x44 ]
jmp rwxdata
shrd dx bx 0xd
cmp dl dl
bswap dx
shl al 0x1
mov al [ esi - 0x1 ]
pushad
shrd dx sp cl
sub al bl
bswap edx
not al
adc dx bx
ror edx cl
shl dx cl
bts dx 0x2
neg al
push [ esp ]
cmp ch 0x77
shrd dx bp 0xd
xor al 0x7f
call sub_102134d0
sub_10212622
push [ esp + 0x4c ]
popfd
mov [ esp ] 0xbc
mov [ esp + 0x4 ] 0xdf
mov [ esp ] bl
lea esp [ esp + 0x50 ]
jmp rwxdata
shrd dx bx 0xd
cmp dl dl
bswap dx
shl al 0x1
mov al [ esi - 0x1 ]
pushad
shrd dx sp cl
sub al bl
bswap edx
not al
adc dx bx
ror edx cl
shl dx cl
bts dx 0x2
neg al
push [ esp ]
cmp ch 0x77
shrd dx bp 0xd
xor al 0x7f
call sub_102134d0
sub_10212910
mov esp eax
pushad
pushfd
pop [ esp + 0x1c ]
bswap di
mov [ esp + 0x18 ] esi
bswap edi
pushad
mov esi edx
lea edi [ esi + 0x4501885d ]
lea edi [ edx * 8 - 0x833b192 ]
jmp rwxdata
lea edi [ ecx + eax - 0x40 ]
push [ esp + 0xc ]
pushfd
mov [ esp + 0x3c ] edi
mov edi [ esp ]
std
bswap di
bswap di
mov edi eax
mov [ esp + 0x4 ] 0x2a
jmp rwxdata
cld
push 0x2d3807c7
push ebp
jmp rwxdata
pushfd
[ edi ] [ esi ]
bswap si
rol esi cl
neg di
cld
mov edi [ esp + 0x48 ]
pop esi
shl si cl
std
pop esi
mov esi [ esp + 0x44 ]
stc
mov [ esp ] 0xc
call sub_10212622
sub_10212acf
push ecx
btr si bx
push 0x59f5add0
btr si dx
mov [ esp ] ebx
movzx dx cl
push edi
jmp rwxdata
pushfd
mov [ esp ] eax
bt si di
rol si cl
xchg bp si
push ebx
movsx bx cl
bswap di
push 0xd9734d72
push [ rwxdata ]
pop [ esp ]
btr edi edi
xchg esi edi
stc
push 0x0
not bl
rcr si cl
rcr ebp 0x1
rcl bp 0xa
mov esi [ esp + 0x30 ]
mov di sp
call sub_102139eb
sub_10213000
setns dh
movzx eax al
pushad
mov edx [ eax * 4 + rwxdata ]
bt sp sp
rol edx 0x13
test bh ah
add edx 0x0
pushad
mov [ esp ] dx
mov [ esp + 0x40 ] edx
mov [ esp + 0x4 ] al
mov [ esp ] eax
push edi
push [ esp + 0x44 ]
retn 0x48
sub_1021381f
pushad
mov [ esp + 0x4 ] dl
mov ax [ eax ]
jmp rwxdata
pushfd
mov [ ebp ] ax
mov [ esp ] bp
lea esp [ esp + 0x48 ]
jmp rwxdata
shrd dx bx 0xd
cmp dl dl
bswap dx
shl al 0x1
mov al [ esi - 0x1 ]
pushad
shrd dx sp cl
sub al bl
bswap edx
not al
adc dx bx
ror edx cl
shl dx cl
bts dx 0x2
neg al
push [ esp ]
cmp ch 0x77
shrd dx bp 0xd
xor al 0x7f
call sub_102134d0
sub_102139eb
push 0x3a7e193
ror esi 0x10
lea ebp [ ebx - 0x2f18a944 ]
pop ebp
dec esi
pushad
rol bp cl
xor esi 0xda89bbcd
or bh bl
bswap bp
lea ebp [ esp + 0x24 ]
shr bx cl
call sub_102144aa
sub_10213b8a
push edi
pushfd
lea esp [ esp + 0x8 ]
ja rwxdata
shrd dx bx 0xd
cmp dl dl
bswap dx
shl al 0x1
mov al [ esi - 0x1 ]
pushad
shrd dx sp cl
sub al bl
bswap edx
not al
adc dx bx
ror edx cl
shl dx cl
bts dx 0x2
neg al
push [ esp ]
cmp ch 0x77
shrd dx bp 0xd
xor al 0x7f
call sub_102134d0
sub dh dl
mov edx esp
cwde
shrd ecx esp 0x13
shrd ecx ecx 0xb
lea ecx [ edi + 0x40 ]
lea eax [ ebp * 4 + 0x25a0af5c ]
jmp sub_1021423e
sub_1021422c
movzx eax [ esi - 0x1 ]
bt dx si
test ah bh
add al bl
pushfd
jmp rwxdata
pushad
jmp rwxdata
dec esi
mov [ esp + 0xc ] dl
jmp rwxdata
pushfd
push [ esp + 0x4 ]
inc al
stc
xor al 0x3d
jmp rwxdata
pushfd
not al
bt si cx
add bl al
test cl dh
clc
push ebp
test al cl
sub ebp 0x2
jmp rwxdata
jmp rwxdata
mov [ ebp ] ax
push edx
pushfd
pushfd
lea esp [ esp + 0x40 ]
jmp sub_102124fa
sub_10214421
rol dh cl
movzx eax al
setle dh
btr dx 0x1
mov edx [ eax * 4 + rwxdata ]
push 0x652cd922
cmc
rol edx 0x13
cmp dl 0x3e
sub esp 0xfffffff8
jg rwxdata
pushfd
push 0x35031213
add edx 0x0
mov [ esp + 0x4 ] ah
call j_sub_102129f6
push [ esp + 0x8 ]
pop [ ebp ]
mov [ esp ] dh
mov [ esp ] eax
lea esp [ esp + 0xc ]
jmp sub_102124fa
push 0x71caeb6e
add edx 0x0
jmp sub_10213572
sub_102144aa
ror bl cl
neg di
sub esp 0x98
shl al 0x2
adc al dl
xor di si
shl edi 0x1
mov edi esp
pushad
test dh bh
dec bl
jmp rwxdata
mov ebx esi
sbb al cl
bsr edx eax
add esi [ ebp ]
add esp 0x20
shrd dx bx 0xd
cmp dl dl
bswap dx
shl al 0x1
mov al [ esi - 0x1 ]
pushad
shrd dx sp cl
sub al bl
bswap edx
not al
adc dx bx
ror edx cl
shl dx cl
bts dx 0x2
neg al
push [ esp ]
cmp ch 0x77
shrd dx bp 0xd
xor al 0x7f
call sub_102134d0
sub_101182f2
test ah bh
cmc
test edi edi
mov [ esp ] 0x8fd8
mov [ esp + 0x4 ] 0xf5
call sub_102079b6
j_sub_102022b8
jmp sub_102022b8
j_sub_101184e7
clc
sub ecx ecx
sub_10118785
pushfd
jmp rwxdata
mov [ esp + 0x44 ] eax
pushfd
push ebp
mov [ esp ] ah
push [ esp + 0x4c ]
retn 0x50
sub_10118978
pushad
mov [ esp + 0x20 ] 0xfa324f8b
pushfd
pushad
lea esp [ esp + 0x44 ]
jmp sub_10213ccf
j_sub_101eb0cd
jmp sub_101eb0cd
sub_10118d7d
not al
mov al [ ecx ]
clc
jmp sub_101ef8be
j_sub_101f0936
jmp sub_101f0936
sub_1011937c
lea esp [ esp + 0x28 ]
retn
sub_101195c4
pushfd
pushfd
adc dl dl
pushfd
mov [ esp + 0x10 ] bp
pushfd
push [ esp + 0x18 ]
retn 0x1c
sub_10119850
push edx
pushfd
mov esp ebp
lea ebp [ ecx * 8 + 0x677e2c81 ]
jmp rwxdata
movsx bp dl
pop ebp
pushfd
push 0x6715f026
push ecx
push [ esp + 0xc ]
retn 0x14
sub_10119d09
lea eax [ LocalFree@IAT ]
call j_sub_101f3782
sub_101bed4f
mov ah [ esp ]
mov [ esp ] ebx
jmp sub_102090af
sub_101bf3c1
test edi edi
jmp j_sub_101be866
sub_101bfae5
call sub_10208720
sub_101bfaea
call sub_1020c15e
sub_101bfaef
pushfd
lea esp [ esp + 0x10 ]
call sub_10201bcd
push ebp
call sub_101f2c42
j_sub_101f398c
jmp sub_101f398c
sub_101bfcaa
push [ eax ]
pop [ esp + 0x4 ]
mov [ esp ] 0xfd27
mov [ esp ] cl
pushfd
push [ esp + 0x8 ]
retn 0xc
sub_101c02b6
mov [ esp + 0x8 ] 0x2dc
jmp sub_101e5b78
sub_101e516c
lea esp [ esp + 0xc ]
jne rwxdata
pushfd
jmp sub_101e84ae
call sub_101f1ac6
xchg esp eax
add al 0xba
sub_101e5b78
adc dl dl
pushfd
pushfd
push [ esp + 0x4 ]
push [ esp + 0x3c ]
retn 0x40
sub_101e5b87
call sub_101f2b88
j_sub_101e6a47
jmp sub_101e6a47
sub_101e6a33
mov edi [ edi + ecx * 4 ]
stc
cmp ebp 0x3424e35f
call j_sub_101bf3c1
j_sub_10119fbc
jmp sub_10119fbc
sub_101e6a5a
mov edi [ edi + ecx * 4 ]
bt bp bx
call sub_101182f2
sub_101e7455
xor al 0x97
and al dh
call sub_1020c992
sub_101e745e
add [ ebx + edi ] dx
push [ esp ]
lea esp [ esp + 0x30 ]
jmp rwxdata
cmp di 0xb14e
test cl cl
stc
add esi 0x2
call sub_1020ad88
cmp [ 0xffffffff853a55ea ] esp
or esp edi
xor al 0xf
sub_101e7cbf
call sub_101f35b9
sub_101e8153
add ah 0x20
lea esp [ esp + 0x4 ]
cmp bp cx
or al al
call sub_1020b942
sub_101e8ace
push 0x71beacb4
mov [ esp + 0x8 ] rwxdata
pushfd
mov [ esp ] 0x41d8
pushad
mov [ esp + 0x28 ] eax
pushfd
mov [ esp + 0x8 ] 0x8201c12
push [ esp + 0x2c ]
retn 0x30
sub_101e97b0
pushfd
mov bl 0x2
dec al
pushfd
call sub_101eb5b1
or eax 0x5fe02faf
sbb esp [ ebx - 0x5c ]
mov al [ 0x4441473 ]
lodsb [ esi ]
sub_101e989a
rcl di 0xd
mov ebx eax
rcr ecx 0x1d
btr di dx
bswap cx
mov edi eax
ror ch 0x3
mov ecx 0x104
jmp sub_101e5b87
sub_101ea05b
test dl al
or ah ah
jmp sub_101f2b60
sub_101ea689
lea eax [ rwxdata ]
jmp sub_101f3a74
j_sub_101f3782
jmp sub_101f3782
j_sub_101bf3c1
jmp sub_101bf3c1
sub_101eb5b1
inc ecx
pushad
not al
not al
mov al 0x10
lea esp [ esp + 0x30 ]
call sub_102089a6
enter 0xeaf4 0x6c
int 0xd2
sub_101eb675
not al
jmp sub_1020c885
sub_101eb67c
inc al
push 0xa122f46b
call sub_101ebdb9
sub_101eb978
call sub_1020e262
sub_101ebdb1
clc
sub esi eax
call sub_10208373
sub_101ebdb9
mov [ esp ] 0xde
mov [ esp + 0x4 ] ch
lea esp [ esp + 0x40 ]
call j_sub_101184e7
sub_101ebdcf
cmp si 0xbf50
stc
or ecx ecx
jmp sub_101e9b16
sub_101ec35c
call sub_102077ff
sub_101ec361
pushfd
cmp ah 0x2e
lea esp [ esp + 0x8 ]
push 0xbecf068c
pushad
call sub_1011937c
sub_101ec822
pushad
mov [ esp + 0x28 ] 0x92683dfc
pushfd
pushfd
lea esp [ esp + 0x30 ]
jmp rwxdata
call sub_10212571
sub_101ef8be
mov ah al
jmp sub_10207c9b
sub_101f05e1
lea esp [ esp + 0x34 ]
jae rwxdata
call sub_102089a6
enter 0xeaf4 0x6c
int 0xd2
jmp rwxdata
call sub_1020eafb
sub_101f05f0
pushfd
pushad
mov [ esp + 0x24 ] edi
jmp rwxdata
mov [ esp + 0x20 ] ebx
jmp rwxdata
call j_sub_101f398c
sub_101f06cf
push 0xcff23385
mov [ esp + 0x4 ] cl
push [ eax ]
pop [ esp + 0x4c ]
pushfd
mov [ esp ] ebp
mov [ esp + 0x4 ] 0xb11d
push [ esp + 0x50 ]
retn 0x54
sub_101f0936
mov [ esp ] cl
lea esp [ esp + 0x4 ]
jne rwxdata
pushfd
jmp sub_101e84ae
cwde
movzx ax cl
setae ah
lahf
mov [ edi - 0x1 ] 0x0
call sub_101bf392
sub_101f12cf
mov [ esp + 0x4 ] 0xc27f1b5d
pushfd
mov [ esp + 0x4 ] bh
lea esp [ esp + 0x8 ]
jmp rwxdata
call sub_10212571
sub_101f1ac6
mov [ edi - 0x1 ] 0x0
lea eax [ edx - 0x3944a988 ]
jmp sub_101bed4f
_start
pushfd
lea esp [ esp + 0x4 ]
jno rwxdata
pushfd
pushad
call sub_101ff6bb
push 0x2832ca97
push ebx
call sub_10201666
j_sub_1020cd09
jmp sub_1020cd09
sub_101f2b60
lea esp [ esp + 0x4 ]
je rwxdata
push 0xbecf068c
pushad
call sub_1011937c
bt eax 0x8
call sub_101ec361
sub_101f2b88
jmp rwxdata
sub al al
cmc
jmp rwxdata
mov [ esp + 0x4 ] cx
[ edi ]
jmp sub_1020e8fb
sub_101f2c5a
mov [ esp + 0x4 ] bl
jmp sub_101ff4ef
sub_101f35b9
test al 0xd8
mov [ ecx ] al
call sub_10200756
sub_101f3a74
pushad
call sub_10202dde
pushfd
jmp rwxdata
pushfd
mov [ esp + 0x4 ] 0x38bfcaa9
jmp rwxdata
call sub_10208193
sub_101f44c4
pushad
jmp rwxdata
push [ esp ]
mov [ esp + 0x28 ] rwxdata
push ebx
mov [ esp + 0x28 ] eax
pushfd
mov [ esp + 0xc ] si
pushfd
mov [ esp + 0x4 ] cl
push [ esp + 0x30 ]
retn 0x34
sub_101f486f
mov [ esp + 0x4 ] 0x51f2caa9
jmp sub_1020ccf8
sub_101ff4ef
pushfd
inc edi
mov [ esp ] 0x55
mov [ esp ] edi
lea esp [ esp + 0x2c ]
jmp sub_101e7455
sub_101ff7bb
call j_sub_101f486f
sub_101ff9ec
not bp
mov ebp [ esp + 0x4 ]
push ebp
push [ esp + 0xc ]
retn 0x20
sub_102003b6
pushad
push [ eax ]
pop [ esp + 0x20 ]
pushfd
push [ esp ]
push [ esp + 0x28 ]
retn 0x2c
sub_10200756
add ecx 0x1
stc
bt ax di
test ah ah
jmp sub_101bfae5
sub_10200c6a
test ah 0xc5
clc
test edi edi
pushfd
call sub_101c0384
dec esi
fiadd [ eax - 0x7f606f72 ]
push es
sub_10200fe8
mov [ esp + 0x1c ] eax
mov [ esp ] sp
pushfd
mov [ esp ] esi
push 0x63f0983f
push [ esp + 0x24 ]
retn 0x28
sub_10201bf4
call sub_101f12cf
j_sub_10201349
jmp sub_10201349
sub_102022b8
push 0x97fccaa9
call sub_10201bf4
j_sub_101f486f
jmp sub_101f486f
j_sub_101be866
jmp sub_101be866
sub_1020780e
mov [ esp + 0x4 ] 0x38bb
call sub_101f35c2
sub_1020781a
call sub_101eae4b
mov [ ecx + 0x748e919e ] ah
0xfa259afb 0xa796
sub_10208720
call sub_101ec35c
pushad
adc al 0x8a
or [ edi ] dh
mov [ edi ] dl
imul ebp [ ebx ] 0x44
aad 0x94
mov ah 0x70
dec edi
mov dl 0xc
j_sub_1020dfd0
jmp sub_1020dfd0
sub_10208b12
push 0xe8138772
mov [ esp + 0x28 ] eax
pushfd
pushfd
push [ esp + 0x30 ]
retn 0x34
j_sub_10119e08
jmp sub_10119e08
sub_1020bbe0
jmp 0x6ecb810b
sub_1020cb22
call sub_10118a6e
sub_1020cce5
push [ eax ]
pop [ esp + 0x28 ]
push [ esp ]
push [ esp ]
push [ esp + 0x30 ]
retn 0x34
sub_1020ccf8
mov [ esp ] 0x28a8ba4b
pushad
lea esp [ esp + 0x20 ]
jmp j_sub_10214179
sub_1020cfcd
lea esp [ esp + 0x30 ]
call j_sub_101184e7
sub_1020d196
push [ esp ]
jmp rwxdata
ror al 0x4
jmp sub_101e7cbf
sub_1020d8b7
push esi
neg si
bsr esi eax
shrd si sp 0x5
lea esi [ esi * 2 - 0x348d7499 ]
mov esi edi
test ch ch
call sub_101ebdb1
j_sub_1020150f
jmp sub_1020150f
sub_1020defa
pushfd
adc al al
pushfd
call sub_1020ff4d
sub_1020eafb
pushfd
lea esp [ esp + 0x8 ]
jne rwxdata
jmp sub_1020d8b7
jmp rwxdata
call sub_1020781a
stc
or al 0x13
mov bh dh
cli
or ecx [ ebp + edx * 4 + 0x2e ]
fidiv [ ebx + 0x7b24b895 ]
sub_1020f1bc
inc dl
bt ax 0x9
push [ esp + 0x2a ]
popf
jmp rwxdata
inc esi
call sub_101c02b6
j_sub_101f05e1
jmp sub_101f05e1
j_sub_10202ab6
jmp sub_10202ab6
sub_102124fa
sbb ax 0x9f3
lea eax [ edi + 0x50 ]
cmp di sp
cmp ebp eax
jmp sub_10213b8a
sub_10212571
pushfd
mov [ esp + 0x4 ] edx
push 0x7a01be57
pushad
mov [ esp ] 0x6b
pushfd
lea esp [ esp + 0x2c ]
jmp sub_1021426f
j_sub_10214470
jmp sub_10214470
sub_10212748
add ebp 0x2
pushad
call sub_1021381f
sub_10212751
stc
xor al 0x3d
call sub_102142da
sub_10212951
cbw
call sub_102134e6
sub_102129f6
pushfd
mov [ esp + 0xc ] edx
pushad
mov [ esp + 0x10 ] 0x6d5002e3
pushfd
push [ esp + 0x30 ]
retn 0x34
sub_10212a1a
push esi
mov [ ebp ] eax
mov [ esp ] bl
lea esp [ esp + 0x3c ]
jmp sub_102124fa
sub_10213344
call j_sub_10214470
sub_1021337e
push [ esp + 0x40 ]
pop [ ebp ]
push [ esp + 0x4 ]
lea esp [ esp + 0x48 ]
jmp sub_102124fa
j_sub_102142a4
jmp sub_102142a4
sub_102134d0
lea esi [ esi - 0x1 ]
lea esp [ esp + 0x28 ]
jo rwxdata
bts dx 0x5
sub bl al
call sub_10213000
call sub_1021389c
rol dh cl
sub bl al
call sub_10214421
sub_102134e6
push [ esp ]
test ecx edx
call sub_10213606
sub_10213572
push 0x8df4db9e
mov [ esp + 0x4 ] bx
mov [ esp + 0x4 ] edx
push 0xe6df80e7
push [ esp + 0x4 ]
pushad
pushfd
push [ esp + 0x30 ]
retn 0x34
sub_10213606
cwde
cmc
sub ebp 0x4
jmp rwxdata
jmp sub_10212a1a
sub_1021364c
pushad
mul dx
call sub_10213344
sub_1021389c
call sub_10214198
sub_10213bfd
mov [ esp ] 0xa5
mov [ esp + 0x4 ] 0x5d
pushfd
pop [ esp + 0x3c ]
mov [ esp + 0x8 ] 0x2b
call sub_1021337e
sub_10213c15
mov [ ebp ] ax
pushad
push esi
mov [ esp + 0xc ] dh
pushfd
lea esp [ esp + 0x3c ]
jmp sub_102124fa
sub_10213ccf
push ecx
jmp rwxdata
pushfd
mov [ esp + 0x4 ] edx
pushfd
push 0x69211d4e
lea esp [ esp + 0xc ]
jmp sub_1021426f
j_sub_102129f6
jmp sub_102129f6
sub_10214061
rol bp 0xa
mov [ esp ] esi
seto dh
stc
jmp sub_10212acf
sub_10214110
call sub_10212910
sub_10214179
pushfd
mov [ esp ] edx
pushfd
pushad
lea esp [ esp + 0x24 ]
jmp sub_1021426f
sub_10214198
push [ esp + 0x54 ]
pop [ ebp ]
mov [ esp + 0x4 ] esi
mov [ esp ] 0x9bcd
lea esp [ esp + 0x58 ]
jmp sub_102124fa
sub_1021423e
das
cwde
sub ecx edx
bsr ax bx
and ah ch
clc
ror edi cl
lea eax [ ebp - 0x80 ]
jmp sub_1021428e
sub_1021426f
lea edx [ eax - 0x778e0c21 ]
movzx dx al
bswap dx
push ebp
pushfd
pop [ esp ]
bts dx dx
push ebp
rcr dh cl
call sub_10214061
sub_1021428e
not di
and al 0xfc
not di
stc
dec di
dec di
sub eax ecx
jmp sub_10214110
sub_102142a4
stc
add ebp 0x2
bt sp 0xd
shrd eax edx cl
push 0xf51dd510
call sub_10212488
sub_102142da
mov [ esp + 0x1c ] 0x9f
not al
stc
cmp si bx
add bl al
stc
test al cl
mov [ esp ] 0x64
call sub_10212951
sub_102142f3
sub ebp 0x4
jmp sub_1021364c
j_sub_10214179
jmp sub_10214179
sub_10214470
push [ esp + 0x10 ]
mov [ ebp + 0x4 ] dx
push eax
mov [ ebp + 0x6 ] ax
jmp rwxdata
call sub_10213bfd
